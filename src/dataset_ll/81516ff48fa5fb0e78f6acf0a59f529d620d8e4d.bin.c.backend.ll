source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }

@r1 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@global_var_100000a4.1 = constant i32 1208008233
@global_var_1001c52c.3 = global i32 0
@global_var_1001c53c.4 = local_unnamed_addr global i32* @global_var_1001c52c.3
@global_var_1001c710.6 = global i32 0
@global_var_10000314.7 = constant i32 1207997217
@global_var_10000320.8 = constant [3 x i8] c"8`\00"
@global_var_1001c69c.10 = local_unnamed_addr global i32 0
@global_var_10000588.11 = constant [3 x i8] c";{\00"
@global_var_100005b4.12 = constant i32 939524096
@global_var_10000bdc.14 = constant i32 939524096
@global_var_10000f14.15 = constant i32 939524096
@global_var_1001c6a0.16 = local_unnamed_addr global i32 0
@global_var_10001aa0.17 = constant [3 x i8] c"8~\00"
@global_var_10001ab0.18 = constant [3 x i8] c"8~\00"
@global_var_10001ac0.19 = constant [3 x i8] c"8~\00"
@global_var_100026fc.20 = constant [3 x i8] c"8`\00"
@global_var_100027ec.21 = constant [3 x i8] c"9!\00"
@global_var_10002e78.22 = constant [3 x i8] c"8`\00"
@global_var_100034c0.23 = constant [3 x i8] c"8`\00"
@global_var_10004174.24 = constant i32 939524104
@global_var_100041a4.25 = constant i32 939524096
@global_var_1000459c.26 = constant [3 x i8] c"8`\00"
@global_var_100045a4.27 = constant [3 x i8] c"8`\00"
@global_var_100045ac.28 = constant [3 x i8] c"8`\00"
@global_var_100046ac.29 = constant [3 x i8] c"9@\00"
@global_var_1000bf58.30 = constant i32 788529152
@global_var_100049f4.31 = constant [3 x i8] c"8`\00"
@global_var_100049fc.32 = constant [3 x i8] c"8`\00"
@global_var_10004a04.33 = constant [3 x i8] c"8`\00"
@global_var_10004a0c.34 = constant [3 x i8] c"8`\00"
@global_var_10004a78.35 = constant [3 x i8] c"8`\00"
@global_var_10004a80.36 = constant [3 x i8] c"8`\00"
@global_var_10004a88.37 = constant [3 x i8] c"8`\00"
@global_var_1001c6ac.38 = local_unnamed_addr global i32 0
@global_var_10004ba4.39 = constant i32 939524096
@global_var_1001c6a8.40 = local_unnamed_addr global i32 0
@global_var_1001c6a4.41 = local_unnamed_addr global i32 0
@global_var_10004bc8.42 = constant [3 x i8] c"8`\00"
@global_var_10004c48.43 = constant [3 x i8] c"8`\00"
@global_var_10004c50.44 = constant [3 x i8] c"8`\00"
@global_var_10004cb4.45 = constant i32 1207979509
@global_var_10004cc8.46 = constant [3 x i8] c"8`\00"
@global_var_10004cf4.47 = constant [3 x i8] c"8`\00"
@global_var_10004d34.48 = constant [3 x i8] c"8`\00"
@global_var_10004d3c.49 = constant [3 x i8] c"8`\00"
@global_var_10004d44.50 = constant [3 x i8] c"8`\00"
@global_var_10004d6c.51 = constant [3 x i8] c"8`\00"
@global_var_10004d74.52 = constant [3 x i8] c"8`\00"
@global_var_10004da4.53 = constant [4 x i8] c"8`\08\00"
@global_var_10004dbc.54 = constant [3 x i8] c"8`\00"
@global_var_10004dc4.55 = constant [3 x i8] c"8`\00"
@global_var_10004dcc.56 = constant i32 939524119
@global_var_10004e30.57 = constant [3 x i8] c"8`\00"
@global_var_10004e64.58 = constant [3 x i8] c"8`\00"
@global_var_10004e98.59 = constant [3 x i8] c"8`\00"
@global_var_10004f54.60 = constant [3 x i8] c"8`\00"
@global_var_10004fe4.61 = constant [3 x i8] c"8`\00"
@global_var_10004fec.62 = constant [3 x i8] c"8`\00"
@global_var_1000505c.63 = constant [3 x i8] c"8`\00"
@global_var_10005064.64 = constant i32 1207977353
@global_var_10005114.65 = constant [3 x i8] c"8`\00"
@global_var_100051e8.66 = constant [3 x i8] c"8`\00"
@global_var_10005220.67 = constant [3 x i8] c"8`\00"
@global_var_10005280.68 = constant [3 x i8] c"8`\00"
@global_var_1001c680.69 = local_unnamed_addr global i32 268472480
@global_var_1001c778.70 = global i32 0
@global_var_1000bf5c.71 = constant [15 x i8] c"185.55.218.173\00"
@global_var_1001c77c.72 = local_unnamed_addr global i32 0
@global_var_1001c77a.73 = local_unnamed_addr global i32 0
@global_var_1001c6b0.74 = local_unnamed_addr global i32 0
@global_var_10005368.75 = constant [3 x i8] c"8`\00"
@global_var_100053c4.76 = constant [3 x i8] c"8`\00"
@global_var_100053fc.77 = constant [3 x i8] c"8`\00"
@global_var_10005404.78 = constant [3 x i8] c"8`\00"
@global_var_100054c4.79 = constant i32 1207974877
@global_var_10005518.80 = constant [3 x i8] c";a\00"
@global_var_1000557c.81 = constant i32 1207961037
@global_var_100055d0.82 = constant [3 x i8] c"8`\00"
@global_var_1000bf6c.83 = constant i32 167772160
@global_var_10005608.84 = constant [3 x i8] c"8`\00"
@global_var_1000561c.85 = constant i32 1207975817
@global_var_100056c0.86 = constant [3 x i8] c"8`\00"
@global_var_100056c8.87 = constant [3 x i8] c"8`\00"
@global_var_100056d0.88 = constant [3 x i8] c"8`\00"
@global_var_100056d8.89 = constant i32 989855744
@global_var_100056e8.90 = constant [3 x i8] c";a\00"
@global_var_1001c678.91 = local_unnamed_addr global i32 -1
@global_var_1001c67c.92 = local_unnamed_addr global i32 -1
@global_var_10005874.94 = constant i32 939589631
@global_var_10005958.95 = constant i32 939589631
@global_var_10005a38.96 = constant i32 939589631
@global_var_10005a44.97 = constant i32 1006685388
@global_var_1000bf70.98 = constant i32 1
@global_var_10005afc.99 = constant i32 939589631
@global_var_1001c734.100 = local_unnamed_addr global i32 0
@global_var_1001c728.101 = local_unnamed_addr global i32 0
@global_var_1001c730.102 = local_unnamed_addr global i32 0
@global_var_1001c72c.103 = local_unnamed_addr global i32 0
@global_var_1001c6c4.104 = local_unnamed_addr global i32 0
@global_var_1001c6b8.105 = local_unnamed_addr global i32 0
@global_var_1001c6bc.106 = local_unnamed_addr global i32 0
@global_var_1001c6d0.108 = local_unnamed_addr global i32 0
@global_var_100061a8.109 = constant [3 x i8] c"8`\00"
@global_var_100061c4.110 = constant i32 939524096
@global_var_1001c6c8.111 = local_unnamed_addr global i32 0
@global_var_1001c6cc.112 = local_unnamed_addr global i32 0
@global_var_10006250.113 = constant [4 x i8] c"`e\08\00"
@global_var_1001c738.114 = global i32 0
@global_var_1001c74c.115 = global i32 0
@global_var_1000c030.116 = constant [7 x i8] c"efg`ab\00"
@global_var_1001c73a.117 = local_unnamed_addr global i32 0
@global_var_1001c758.118 = local_unnamed_addr global i32 0
@global_var_1001c740.119 = local_unnamed_addr global i32 0
@global_var_1001c741.120 = local_unnamed_addr global i32 0
@global_var_1001c73c.121 = local_unnamed_addr global i32 0
@global_var_1000c018.122 = constant [6 x i8] c"3!1' \00"
@global_var_1000bfac.124 = constant i32 0
@global_var_1001c75a.125 = local_unnamed_addr global i32 0
@global_var_1000c020.126 = constant [5 x i8] c"eeee\00"
@global_var_1000c028.127 = constant [6 x i8] c"efg`a\00"
@global_var_1000bf78.128 = constant [5 x i8] c"!'1&\00"
@global_var_1000bf80.129 = constant [8 x i8] c"0125!8 \00"
@global_var_1000bf88.130 = constant i32 455883832
@global_var_1000bf94.131 = constant i32 124138003
@global_var_1000bfa0.132 = constant [7 x i8] c"5: '8%\00"
@global_var_1000bfa8.133 = constant [5 x i8] c"&;; \00"
@global_var_1000bfb0.134 = constant [6 x i8] c"\22=.,\22\00"
@global_var_1000bfb8.135 = constant [6 x i8] c".8,,z\00"
@global_var_1000bfc0.136 = constant [9 x i8] c"<!: acam\00"
@global_var_1000bfcc.137 = constant [5 x i8] c"5:?;\00"
@global_var_1000bfd4.138 = constant [4 x i8] c"a!$\00"
@global_var_1000bfd8.139 = constant [7 x i8] c",7gaee\00"
@global_var_1000bfe0.140 = constant [8 x i8] c"'!$$;& \00"
@global_var_1000bff8.141 = constant [6 x i8] c"509=:\00"
@global_var_1000bfe8.142 = constant [7 x i8] c"93gadd\00"
@global_var_1000bff0.143 = constant [7 x i8] c"91&8=:\00"
@global_var_1000c000.144 = constant [7 x i8] c"x65fg`\00"
@global_var_1000c008.145 = constant [8 x i8] c"5%!5&=;\00"
@global_var_1000c010.146 = constant [4 x i8] c"6=:\00"
@global_var_1001c744.147 = local_unnamed_addr global i32 0
@global_var_1001c748.148 = local_unnamed_addr global i32 0
@global_var_1001c742.149 = local_unnamed_addr global i32 0
@global_var_1001c750.150 = local_unnamed_addr global i32 0
@global_var_1001c75c.151 = local_unnamed_addr global i32 0
@global_var_10006d88.152 = constant [3 x i8] c"8`\00"
@global_var_1000c038.155 = constant i32 -20680
@global_var_1000c064.156 = constant i32 -385280
@global_var_1001c788.171 = global i32 0
@global_var_1001c684.172 = local_unnamed_addr global i32 -555811921
@global_var_1000c074.173 = constant [3 x i8] c"RS\00"
@global_var_10008924.174 = constant [3 x i8] c"8`\00"
@global_var_1001c790.175 = local_unnamed_addr global i32 0
@global_var_1001c794.176 = local_unnamed_addr global i32 0
@global_var_1000c078.177 = constant [3 x i8] c"DR\00"
@global_var_10008948.178 = constant [3 x i8] c"8`\00"
@global_var_1001c798.179 = local_unnamed_addr global i32 0
@global_var_1001c79c.180 = local_unnamed_addr global i32 0
@global_var_1000c07c.181 = constant i32 453186822
@global_var_1000896c.182 = constant [3 x i8] c"8`\00"
@global_var_1001c7a0.183 = local_unnamed_addr global i32 0
@global_var_1001c7a4.184 = local_unnamed_addr global i32 0
@global_var_1000c094.185 = constant [7 x i8] c"'<188T\00"
@global_var_10008994.186 = constant [3 x i8] c"8`\00"
@global_var_1001c7a8.187 = local_unnamed_addr global i32 0
@global_var_1001c7ac.188 = local_unnamed_addr global i32 0
@global_var_1000c09c.189 = constant [8 x i8] c"1:5681T\00"
@global_var_100089b8.190 = constant [3 x i8] c"8`\00"
@global_var_1001c7b0.191 = local_unnamed_addr global i32 0
@global_var_1001c7b4.192 = local_unnamed_addr global i32 0
@global_var_1000c0a4.193 = constant [8 x i8] c"'-' 19T\00"
@global_var_100089dc.194 = constant [3 x i8] c"8`\00"
@global_var_1001c7b8.195 = local_unnamed_addr global i32 0
@global_var_1001c7bc.196 = local_unnamed_addr global i32 0
@global_var_1000c0ac.197 = constant [4 x i8] c"'<T\00"
@global_var_10008a00.198 = constant i32 939524099
@global_var_1001c7c4.199 = local_unnamed_addr global i32 0
@global_var_1001c7c0.200 = local_unnamed_addr global i32 0
@global_var_1000c0b0.201 = constant i32 2067152186
@global_var_10008a28.202 = constant [3 x i8] c"8`\00"
@global_var_1001c7c8.203 = local_unnamed_addr global i32 0
@global_var_1001c7cc.204 = local_unnamed_addr global i32 0
@global_var_1000c0c4.205 = constant i32 453186822
@global_var_10008a4c.206 = constant i32 939524120
@global_var_1001c7d4.207 = local_unnamed_addr global i32 0
@global_var_1001c7d0.208 = local_unnamed_addr global i32 0
@global_var_1000c0e0.209 = constant [10 x i8] c":7;&&17 T\00"
@global_var_10008a74.210 = constant i32 939524105
@global_var_1001c7dc.211 = local_unnamed_addr global i32 0
@global_var_1001c7d8.212 = local_unnamed_addr global i32 0
@global_var_1000c0ec.213 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_10008a9c.214 = constant [3 x i8] c"8`\00"
@global_var_1001c7e0.215 = local_unnamed_addr global i32 0
@global_var_1001c7e4.216 = local_unnamed_addr global i32 0
@global_var_1000c100.217 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_10008ac0.218 = constant i32 939524118
@global_var_1001c7ec.219 = local_unnamed_addr global i32 0
@global_var_1001c7e8.220 = local_unnamed_addr global i32 0
@global_var_1000c118.221 = constant [8 x i8] c"{$&;7{T\00"
@global_var_10008ae8.222 = constant [3 x i8] c"8`\00"
@global_var_1001c7f0.223 = local_unnamed_addr global i32 0
@global_var_1001c7f4.224 = local_unnamed_addr global i32 0
@global_var_1000c120.225 = constant [6 x i8] c"{1,1T\00"
@global_var_10008b0c.226 = constant [3 x i8] c"8`\00"
@global_var_1001c7f8.227 = local_unnamed_addr global i32 0
@global_var_1001c7fc.228 = local_unnamed_addr global i32 0
@global_var_1000c128.229 = constant [5 x i8] c"{20T\00"
@global_var_10008b30.230 = constant i32 939524100
@global_var_1001c804.231 = local_unnamed_addr global i32 0
@global_var_1001c800.232 = local_unnamed_addr global i32 0
@global_var_1000c130.233 = constant [7 x i8] c"{95$'T\00"
@global_var_10008b58.234 = constant [3 x i8] c"8`\00"
@global_var_1001c808.235 = local_unnamed_addr global i32 0
@global_var_1001c80c.236 = local_unnamed_addr global i32 0
@global_var_1000c138.237 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_10008b7c.238 = constant [3 x i8] c"8`\00"
@global_var_1001c810.239 = local_unnamed_addr global i32 0
@global_var_1001c814.240 = local_unnamed_addr global i32 0
@global_var_1000c148.241 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_10008ba0.242 = constant [3 x i8] c"8`\00"
@global_var_1001c870.243 = local_unnamed_addr global i32 0
@global_var_1001c874.244 = local_unnamed_addr global i32 0
@global_var_1000c154.245 = constant [8 x i8] c"z5:=91T\00"
@global_var_10008bc4.246 = constant [3 x i8] c"8`\00"
@global_var_1001c878.247 = local_unnamed_addr global i32 0
@global_var_1001c87c.248 = local_unnamed_addr global i32 0
@global_var_1000c15c.249 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_10008be8.250 = constant [3 x i8] c"8`\00"
@global_var_1001c818.251 = local_unnamed_addr global i32 0
@global_var_1001c81c.252 = local_unnamed_addr global i32 0
@global_var_1000c170.253 = constant [9 x i8] c"5''#;&0T\00"
@global_var_10008c0c.254 = constant [3 x i8] c"8`\00"
@global_var_1001c820.255 = local_unnamed_addr global i32 0
@global_var_1001c824.256 = local_unnamed_addr global i32 0
@global_var_1000c1f8.257 = constant i32 473889
@global_var_10008c30.258 = constant i32 939524117
@global_var_1001c82c.259 = local_unnamed_addr global i32 0
@global_var_1001c828.260 = local_unnamed_addr global i32 0
@global_var_1000c17c.261 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_10008c58.262 = constant i32 939524113
@global_var_1001c834.263 = local_unnamed_addr global i32 0
@global_var_1001c830.264 = local_unnamed_addr global i32 0
@global_var_1000c190.265 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_10008c80.266 = constant i32 939524108
@global_var_1001c83c.267 = local_unnamed_addr global i32 0
@global_var_1001c838.268 = local_unnamed_addr global i32 0
@global_var_1000c1a0.269 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_10008ca8.270 = constant [3 x i8] c"8`\00"
@global_var_1001c840.271 = local_unnamed_addr global i32 0
@global_var_1001c844.272 = local_unnamed_addr global i32 0
@global_var_1000c1b0.273 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_10008ccc.274 = constant [3 x i8] c"8`\00"
@global_var_1001c848.275 = local_unnamed_addr global i32 0
@global_var_1001c84c.276 = local_unnamed_addr global i32 0
@global_var_1000c1c4.277 = constant [9 x i8] c"$662*7!E\00"
@global_var_10008cf0.278 = constant [3 x i8] c"8`\00"
@global_var_1001c850.279 = local_unnamed_addr global i32 0
@global_var_1001c854.280 = local_unnamed_addr global i32 0
@global_var_1000c1d0.281 = constant [6 x i8] c";3=:T\00"
@global_var_10008d14.282 = constant [3 x i8] c"8`\00"
@global_var_1001c858.283 = local_unnamed_addr global i32 0
@global_var_1001c85c.284 = local_unnamed_addr global i32 0
@global_var_1000c1d8.285 = constant [7 x i8] c"1: 1&T\00"
@global_var_10008d38.286 = constant [3 x i8] c"8`\00"
@global_var_1001c860.287 = local_unnamed_addr global i32 0
@global_var_1001c864.288 = local_unnamed_addr global i32 0
@global_var_1000c1e0.289 = constant [24 x i8] c"m!efg``l!ef`5!le`0`,edT\00"
@global_var_1001c86c.290 = local_unnamed_addr global i32 0
@global_var_1001c868.291 = local_unnamed_addr global i32 0
@global_var_100090c4.292 = constant i32 939524096
@global_var_1000940c.293 = constant i32 1207959564
@global_var_100098e8.294 = constant i32 939524118
@global_var_1000afd8.295 = constant [3 x i8] c"8`\00"
@global_var_10009a40.296 = constant i32 939524105
@global_var_10009a5c.297 = constant i32 939589631
@global_var_10009b84.298 = constant i32 1207959797
@global_var_10009b88.299 = constant i32 939524108
@global_var_1001c6f4.300 = global i32 0
@global_var_1000a2cc.301 = constant i32 939524118
@global_var_1000a354.302 = constant i32 939524118
@global_var_1001c880.303 = global i32 0
@global_var_1001c760.304 = global i32 0
@global_var_1001c688 = external global i32
@global_var_1000c31c.306 = constant i32 33554944
@global_var_1001c6e4.307 = local_unnamed_addr global i32 0
@global_var_1001c900.308 = global i32 0
@global_var_1000a5b0.309 = constant i32 939524108
@global_var_1000a604.310 = constant i32 939524108
@global_var_1000a6b8.311 = constant [3 x i8] c"8`\00"
@global_var_1000a764.312 = constant [3 x i8] c"8`\00"
@global_var_1000aa8c.313 = constant i32 1207959640
@global_var_1000aac8.314 = constant i32 1207959580
@global_var_1001c694.315 = local_unnamed_addr global i32* @global_var_1000c31c.306
@global_var_1000acbc.316 = constant i32 939524130
@global_var_1001c648.317 = global i32 0
@global_var_1001c6d8.318 = local_unnamed_addr global i32 0
@global_var_1000ad50.319 = constant i32 1207960053
@global_var_1000ad54.320 = constant [3 x i8] c"= \00"
@global_var_1001c520.321 = global i32 -1
@global_var_1001c6e8.322 = local_unnamed_addr global i32 0
@global_var_1001c6ec.323 = local_unnamed_addr global i32 0
@global_var_1000c210.324 = constant [10 x i8] c"/dev/null\00"
@global_var_1001c6f0.325 = local_unnamed_addr global i32 0
@global_var_1001c6dc.327 = local_unnamed_addr global i32 0
@global_var_1001c6e0.328 = local_unnamed_addr global i32 0
@global_var_1000b2f0.329 = constant i32 939524096
@global_var_1000b57c.331 = constant i32 939524118
@global_var_1000b778.332 = constant i32 939589631
@global_var_1001c708.333 = local_unnamed_addr global i32 0
@global_var_1001c660.334 = global i32 0
@global_var_1000bc9c.335 = constant i32 939524129
@global_var_1001c6fc.336 = local_unnamed_addr global i32 0
@global_var_1000bd10.337 = constant [3 x i8] c"8`\00"
@global_var_1000bd48.338 = constant i32 939524129
@global_var_1001c700.339 = local_unnamed_addr global i32 0
@global_var_1001c704.340 = local_unnamed_addr global i32 0
@global_var_1001c524.341 = global i32 0
@global_var_1001c70c.2 = local_unnamed_addr global i8 0
@global_var_1001c698.9 = local_unnamed_addr global i8 0
@global_var_1001c699.13 = global i8 0
@global_var_1001c6b4.93 = local_unnamed_addr global i16 0
@global_var_1001c6c0.107 = global i16 0
@global_var_1001c74e.123 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @function_10000094() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_100000a4.1 to i32), i32* @lr, align 4
  %v0_100000a0 = call i32 @function_10000168()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @function_1000becc(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @function_100000b8() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1001c70c.2, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_1001c53c.4 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_1001c53c.4 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_1001c53c.4 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1001c70c.2, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1001c70c.2, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @function_1000014c() local_unnamed_addr {
dec_label_pc_1000014c:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @function_10000168() local_unnamed_addr {
dec_label_pc_10000168:
  %v3_100001a0 = load i32, i32* inttoptr (i32 268551472 to i32*), align 16
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %dec_label_pc_10000168
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %dec_label_pc_10000168
  ret i32 268551472
}

define i32 @function_100001d4() local_unnamed_addr {
dec_label_pc_100001d4:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @entry_point(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @function_1000b0c4(i32 268456972, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268484408, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @function_10000238(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000238:
  %ctr.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %ctr.global-to-local, align 4
  %v0_10000244 = load i32, i32* @lr, align 4
  %tmp4 = icmp slt i32 %arg1, 1
  call void @__pseudo_cond_branch(i1 %tmp4, i32 %v0_10000244)
  %v1_10000248 = add i32 %tmp, 4
  %v2_10000248 = inttoptr i32 %v1_10000248 to i8*
  %v3_10000248 = load i8, i8* %v2_10000248, align 1
  %v4_10000248 = zext i8 %v3_10000248 to i32
  %v4_10000250 = icmp eq i32 %v4_10000248, %arg3
  br i1 %v4_10000250, label %dec_label_pc_10000278, label %dec_label_pc_1000026c.preheader

dec_label_pc_1000026c.preheader:                  ; preds = %dec_label_pc_10000238
  %v0_10000270.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000026c

dec_label_pc_1000025c:                            ; preds = %dec_label_pc_1000026c
  %v1_1000025c = add i32 %v0_1000025c.in, 12
  %v2_1000025c = inttoptr i32 %v1_1000025c to i8*
  %v3_1000025c = load i8, i8* %v2_1000025c, align 1
  %v4_1000025c = zext i8 %v3_1000025c to i32
  %v4_10000264 = icmp eq i32 %v4_1000025c, %arg3
  br i1 %v4_10000264, label %dec_label_pc_10000278, label %dec_label_pc_1000026c

dec_label_pc_1000026c:                            ; preds = %dec_label_pc_1000026c.preheader, %dec_label_pc_1000025c
  %v0_10000270 = phi i32 [ %v0_10000270.pre, %dec_label_pc_1000026c.preheader ], [ %v1_10000270, %dec_label_pc_1000025c ]
  %v0_1000025c.in = phi i32 [ %tmp, %dec_label_pc_1000026c.preheader ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v0_1000025c = add i32 %v0_1000025c.in, 8
  %v1_10000270 = add i32 %v0_10000270, -1
  store i32 %v1_10000270, i32* %ctr.global-to-local, align 4
  %v2_10000270 = icmp eq i32 %v1_10000270, 0
  br i1 %v2_10000270, label %dec_label_pc_10000274, label %dec_label_pc_1000025c

dec_label_pc_10000274:                            ; preds = %dec_label_pc_1000026c
  ret i32 %arg4

dec_label_pc_10000278:                            ; preds = %dec_label_pc_1000025c, %dec_label_pc_10000238
  %v0_10000278 = phi i32 [ %tmp, %dec_label_pc_10000238 ], [ %v0_1000025c, %dec_label_pc_1000025c ]
  %v1_10000278 = inttoptr i32 %v0_10000278 to i32*
  %v2_10000278 = load i32, i32* %v1_10000278, align 4
  ret i32 %v2_10000278

; uselistorder directives
  uselistorder i32 %v1_10000270, { 2, 1, 0 }
  uselistorder i32 %v0_1000025c.in, { 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000026c, { 1, 0 }
}

define i32 @function_10000280(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_10000280:
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268436160, i32* @lr, align 4
  %v0_100002bc = call i32 @function_100095a4()
  %v3_100002c0 = icmp eq i32 %v0_100002bc, -1
  br i1 %v3_100002c0, label %dec_label_pc_100002d0, label %dec_label_pc_100002c8

dec_label_pc_100002c8:                            ; preds = %dec_label_pc_10000280
  %tmp14 = icmp slt i32 %v0_100002bc, 1
  br i1 %tmp14, label %dec_label_pc_100002f8, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c8, %dec_label_pc_10000280
  ret i32 %v0_100002bc

dec_label_pc_100002f8:                            ; preds = %dec_label_pc_100002c8
  store i32 268436220, i32* @lr, align 4
  %v0_100002f8 = call i32 @function_100095a4()
  %v3_100002fc = icmp eq i32 %v0_100002f8, -1
  br i1 %v3_100002fc, label %dec_label_pc_10000320, label %dec_label_pc_10000304

dec_label_pc_10000304:                            ; preds = %dec_label_pc_100002f8
  %v3_10000304 = icmp eq i32 %v0_100002f8, 0
  br i1 %v3_10000304, label %dec_label_pc_1000030c, label %dec_label_pc_10000328

dec_label_pc_1000030c:                            ; preds = %dec_label_pc_10000304
  %v0_1000030c = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10000314.7 to i32), i32* @lr, align 4
  %v1_10000310 = call i32 @function_1000ad70(i32 %v0_1000030c)
  store i32 268436248, i32* @lr, align 4
  %v0_10000314 = call i32 @function_10009634()
  store i32 ptrtoint ([3 x i8]* @global_var_10000320.8 to i32), i32* @lr, align 4
  %v2_1000031c = call i32 @function_1000967c(i32 %v0_10000314, i32 9)
  br label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000358, %dec_label_pc_10000328, %dec_label_pc_100002f8, %dec_label_pc_10000374, %dec_label_pc_1000030c
  %v0_10000324 = call i32 @function_1000acec()
  br label %dec_label_pc_10000328

dec_label_pc_10000328:                            ; preds = %dec_label_pc_10000304, %dec_label_pc_10000320
  %v3_1000032c = load i8, i8* @global_var_1001c698.9, align 1
  %v3_10000330 = icmp eq i8 %v3_1000032c, 0
  br i1 %v3_10000330, label %dec_label_pc_10000320, label %dec_label_pc_10000338

dec_label_pc_10000338:                            ; preds = %dec_label_pc_10000328
  %v4_1000032c = zext i8 %v3_1000032c to i32
  %v3_10000340 = load i32, i32* @global_var_1001c69c.10, align 4
  %v1_10000348 = inttoptr i32 %v3_10000340 to i32*
  %v2_10000348 = load i32, i32* %v1_10000348, align 4
  %v1_1000034c = add i32 %v2_10000348, 4
  %v2_1000034c = inttoptr i32 %v1_1000034c to i8*
  %v3_1000034c = load i8, i8* %v2_1000034c, align 1
  %v4_1000034c = zext i8 %v3_1000034c to i32
  %v1_10000350 = load i32, i32* @r30, align 4
  %v4_10000350 = icmp eq i32 %v4_1000034c, %v1_10000350
  br i1 %v4_10000350, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000358:                            ; preds = %dec_label_pc_10000338, %dec_label_pc_10000360
  %v0_1000035c = phi i32 [ %v1_1000035c, %dec_label_pc_10000360 ], [ %v4_1000032c, %dec_label_pc_10000338 ]
  %v0_10000358 = phi i32 [ %v1_10000358, %dec_label_pc_10000360 ], [ 0, %dec_label_pc_10000338 ]
  %v1_10000358 = add i32 %v0_10000358, 1
  %v1_1000035c = add i32 %v0_1000035c, -1
  %v2_1000035c = icmp eq i32 %v1_1000035c, 0
  br i1 %v2_1000035c, label %dec_label_pc_10000320, label %dec_label_pc_10000360

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000358
  %v1_10000360 = mul i32 %v1_10000358, 4
  %v2_10000364 = add i32 %v1_10000360, %v3_10000340
  %v3_10000364 = inttoptr i32 %v2_10000364 to i32*
  %v4_10000364 = load i32, i32* %v3_10000364, align 4
  %v1_10000368 = add i32 %v4_10000364, 4
  %v2_10000368 = inttoptr i32 %v1_10000368 to i8*
  %v3_10000368 = load i8, i8* %v2_10000368, align 1
  %v4_10000368 = zext i8 %v3_10000368 to i32
  %v4_1000036c = icmp eq i32 %v4_10000368, %v1_10000350
  br i1 %v4_1000036c, label %dec_label_pc_10000374, label %dec_label_pc_10000358

dec_label_pc_10000374:                            ; preds = %dec_label_pc_10000360, %dec_label_pc_10000338
  %v0_10000374 = phi i32 [ %v2_10000348, %dec_label_pc_10000338 ], [ %v4_10000364, %dec_label_pc_10000360 ]
  %v1_10000374 = inttoptr i32 %v0_10000374 to i32*
  %v2_10000374 = load i32, i32* %v1_10000374, align 4
  call void @__pseudo_call(i32 %v2_10000374)
  br label %dec_label_pc_10000320

; uselistorder directives
  uselistorder i32 %v1_1000035c, { 1, 0 }
  uselistorder i8 %v3_1000032c, { 1, 0 }
  uselistorder i32 %v0_100002bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000358, { 1, 0 }
  uselistorder label %dec_label_pc_10000328, { 1, 0 }
  uselistorder label %dec_label_pc_10000320, { 3, 0, 1, 4, 2 }
}

define i32 @function_10000394(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10000394:
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10000394 = call i32 @__asm_mfcr()
  store i32 %v0_10000394, i32* %r3.global-to-local, align 4
  %v0_100003a4 = load i32, i32* @r30, align 4
  %v0_100003ac = load i32, i32* @r31, align 4
  %v0_100003c4 = load i32, i32* @r24, align 4
  %v0_100003d0 = load i32, i32* @r27, align 4
  %v0_100003d4 = load i32, i32* @r28, align 4
  %tmp25 = icmp ult i32 %arg2, 4
  br i1 %tmp25, label %dec_label_pc_100003f4, label %dec_label_pc_100003e8

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_10000394
  %v3_100003e8 = icmp eq i32 %arg2, 4
  %v1_100003ec = inttoptr i32 %v0_10000394 to i32*
  %v2_100003ec = load i32, i32* %v1_100003ec, align 4
  store i32 %v2_100003ec, i32* %r25.global-to-local, align 4
  br i1 %v3_100003e8, label %dec_label_pc_100003f4, label %dec_label_pc_1000043c

dec_label_pc_100003f4:                            ; preds = %dec_label_pc_100003e8, %dec_label_pc_100005e8, %dec_label_pc_10000454, %dec_label_pc_10000448, %dec_label_pc_1000043c, %dec_label_pc_10000394, %dec_label_pc_1000061c
  %v1_10000408 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10000394)
  store i32 %v0_100003c4, i32* @r24, align 4
  store i32 %v0_100003d0, i32* @r27, align 4
  store i32 %v0_100003d4, i32* @r28, align 4
  store i32 %v0_100003a4, i32* @r30, align 4
  store i32 %v0_100003ac, i32* @r31, align 4
  %v0_10000438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000438

dec_label_pc_1000043c:                            ; preds = %dec_label_pc_100003e8
  %v3_1000043c = icmp eq i32 %arg2, 5
  %v1_10000440 = add i32 %v0_10000394, 4
  %v2_10000440 = inttoptr i32 %v1_10000440 to i8*
  %v3_10000440 = load i8, i8* %v2_10000440, align 1
  %v4_10000440 = zext i8 %v3_10000440 to i32
  store i32 %v4_10000440, i32* %r22.global-to-local, align 4
  br i1 %v3_1000043c, label %dec_label_pc_100003f4, label %dec_label_pc_10000448

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000043c
  %v1_10000448 = add i32 %v0_10000394, 5
  %v2_10000448 = inttoptr i32 %v1_10000448 to i8*
  %v3_10000448 = load i8, i8* %v2_10000448, align 1
  %v4_10000448 = zext i8 %v3_10000448 to i32
  store i32 %v4_10000448, i32* @r26, align 4
  %v3_1000044c = icmp eq i8 %v3_10000448, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000044c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000044c, label %dec_label_pc_100003f4, label %dec_label_pc_10000454

dec_label_pc_10000454:                            ; preds = %dec_label_pc_10000448
  %v1_10000454 = mul nuw nsw i32 %v4_10000448, 5
  store i32 %v1_10000454, i32* @r27, align 4
  %v1_10000458 = add i32 %arg2, -6
  store i32 %v1_10000458, i32* @r28, align 4
  %v2_1000045c = icmp ult i32 %v1_10000458, %v1_10000454
  br i1 %v2_1000045c, label %dec_label_pc_100003f4, label %dec_label_pc_10000464

dec_label_pc_10000464:                            ; preds = %dec_label_pc_10000454
  store i32 %v4_10000448, i32* %r3.global-to-local, align 4
  store i32 268436592, i32* @lr, align 4
  %v2_1000046c = call i32 @function_1000a5d4(i32 %v4_10000448, i32 24)
  store i32 %v2_1000046c, i32* %r3.global-to-local, align 4
  %v0_10000470 = load i32, i32* @r31, align 4
  %v1_10000470 = add i32 %v0_10000470, 6
  store i32 %v1_10000470, i32* @r29, align 4
  store i32 %v2_1000046c, i32* %r20.global-to-local, align 4
  %v0_10000478 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000478 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000478 = or i1 %v0_10000478, %v1_10000478
  br i1 %v2_10000478, label %dec_label_pc_100004d4thread-pre-split, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_10000464
  %v0_1000047c = load i32, i32* @r27, align 4
  store i32 %v2_1000046c, i32* %r11.global-to-local, align 4
  %tmp29 = mul i32 %v0_1000047c, -858993459
  store i32 2, i32* %r10.global-to-local, align 4
  store i32 %tmp29, i32* %r9.global-to-local, align 4
  store i32 %tmp29, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004a4:                            ; preds = %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge, %dec_label_pc_1000047c
  %v2_100004b0 = phi i32 [ %v1_100004c0, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v2_1000046c, %dec_label_pc_1000047c ]
  %v0_100004ac = phi i32 [ %v0_100004a4.pre, %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge ], [ %v1_10000470, %dec_label_pc_1000047c ]
  %v1_100004a4 = add i32 %v0_100004ac, 4
  %v2_100004a4 = inttoptr i32 %v1_100004a4 to i8*
  %v3_100004a4 = load i8, i8* %v2_100004a4, align 1
  %v1_100004a8 = inttoptr i32 %v0_100004ac to i32*
  %v2_100004a8 = load i32, i32* %v1_100004a8, align 4
  store i32 %v2_100004a8, i32* %r9.global-to-local, align 4
  %v1_100004ac = add i32 %v0_100004ac, 5
  store i32 %v1_100004ac, i32* @r29, align 4
  %v3_100004b0 = add i32 %v2_100004b0, 20
  %v4_100004b0 = inttoptr i32 %v3_100004b0 to i8*
  store i8 %v3_100004a4, i8* %v4_100004b0, align 1
  %v0_100004b4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b4 = add i32 %v1_100004b4, 4
  %v3_100004b4 = inttoptr i32 %v2_100004b4 to i32*
  store i32 %v0_100004b4, i32* %v3_100004b4, align 4
  %v0_100004b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100004b8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100004b8 = add i32 %v1_100004b8, 16
  %v3_100004b8 = inttoptr i32 %v2_100004b8 to i32*
  store i32 %v0_100004b8, i32* %v3_100004b8, align 4
  %v0_100004bc = load i32, i32* %r10.global-to-local, align 4
  %v1_100004bc = trunc i32 %v0_100004bc to i16
  %v2_100004bc = load i32, i32* %r11.global-to-local, align 4
  %v3_100004bc = inttoptr i32 %v2_100004bc to i16*
  store i16 %v1_100004bc, i16* %v3_100004bc, align 2
  %v0_100004c0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100004c0 = add i32 %v0_100004c0, 24
  store i32 %v1_100004c0, i32* %r11.global-to-local, align 4
  %v0_100004c4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100004c4 = add i32 %v0_100004c4, -1
  store i32 %v1_100004c4, i32* %ctr.global-to-local, align 4
  %v2_100004c4 = icmp eq i32 %v1_100004c4, 0
  br i1 %v2_100004c4, label %dec_label_pc_100004c8, label %dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge

dec_label_pc_100004a4.dec_label_pc_100004a4_crit_edge: ; preds = %dec_label_pc_100004a4
  %v0_100004a4.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100004a4

dec_label_pc_100004c8:                            ; preds = %dec_label_pc_100004a4
  %v0_100004c8 = load i32, i32* @r26, align 4
  %v1_100004c8 = mul i32 %v0_100004c8, -5
  %v0_100004cc = load i32, i32* @r30, align 4
  %v2_100004cc = add i32 %v0_100004cc, %v1_100004c8
  store i32 %v2_100004cc, i32* %r9.global-to-local, align 4
  %v1_100004d0 = add i32 %v2_100004cc, -6
  store i32 %v1_100004d0, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4thread-pre-split:            ; preds = %dec_label_pc_10000464
  %v0_100004d4.pr = load i32, i32* @r28, align 4
  br label %dec_label_pc_100004d4

dec_label_pc_100004d4:                            ; preds = %dec_label_pc_100004d4thread-pre-split, %dec_label_pc_100004c8
  %v0_100004d4 = phi i32 [ %v0_100004d4.pr, %dec_label_pc_100004d4thread-pre-split ], [ %v1_100004d0, %dec_label_pc_100004c8 ]
  %v3_100004d4 = icmp eq i32 %v0_100004d4, 0
  store i32 0, i32* %r21.global-to-local, align 4
  br i1 %v3_100004d4, label %dec_label_pc_100005d8, label %dec_label_pc_100004e0

dec_label_pc_100004e0:                            ; preds = %dec_label_pc_100004d4
  %v0_100004e0 = load i32, i32* @r29, align 4
  %v1_100004e0 = inttoptr i32 %v0_100004e0 to i8*
  %v2_100004e0 = load i8, i8* %v1_100004e0, align 1
  %v3_100004e0 = zext i8 %v2_100004e0 to i32
  store i32 %v3_100004e0, i32* @r24, align 4
  %v3_100004e4 = icmp eq i8 %v2_100004e0, 0
  store i1 false, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100004e4, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100004e4, label %dec_label_pc_100005b0, label %dec_label_pc_100004ec

dec_label_pc_100004ec:                            ; preds = %dec_label_pc_100004e0
  store i32 %v3_100004e0, i32* %r3.global-to-local, align 4
  store i32 268436728, i32* @lr, align 4
  %v2_100004f4 = call i32 @function_1000a5d4(i32 %v3_100004e0, i32 8)
  store i32 %v2_100004f4, i32* %r3.global-to-local, align 4
  store i32 %v2_100004f4, i32* %r21.global-to-local, align 4
  %v0_100004fc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100004fc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100004fc = or i1 %v0_100004fc, %v1_100004fc
  br i1 %v2_100004fc, label %dec_label_pc_100005b0, label %dec_label_pc_10000500

dec_label_pc_10000500:                            ; preds = %dec_label_pc_100004ec
  %v0_10000500 = load i32, i32* @r28, align 4
  %v1_10000500 = add i32 %v0_10000500, -1
  %v4_10000500 = icmp eq i32 %v1_10000500, 0
  store i32 %v1_10000500, i32* %ctr.global-to-local, align 4
  br i1 %v4_10000500, label %dec_label_pc_100005d8, label %dec_label_pc_1000050c

dec_label_pc_1000050c:                            ; preds = %dec_label_pc_10000500
  %v0_1000050c = load i32, i32* @r29, align 4
  %v1_1000050c = add i32 %v0_1000050c, 1
  %v2_1000050c = inttoptr i32 %v1_1000050c to i8*
  %v3_1000050c = load i8, i8* %v2_1000050c, align 1
  store i32 %v1_1000050c, i32* %r9.global-to-local, align 4
  %v3_10000514 = add i32 %v2_100004f4, 4
  %v4_10000514 = inttoptr i32 %v3_10000514 to i8*
  store i8 %v3_1000050c, i8* %v4_10000514, align 1
  %v0_10000518 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10000518 = add i32 %v0_10000518, -1
  store i32 %v1_10000518, i32* %ctr.global-to-local, align 4
  %v2_10000518 = icmp eq i32 %v1_10000518, 0
  br i1 %v2_10000518, label %dec_label_pc_100005d8, label %dec_label_pc_1000051c

dec_label_pc_1000051c:                            ; preds = %dec_label_pc_1000050c
  store i32 %v1_10000518, i32* %r11.global-to-local, align 4
  %v0_10000520 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000520 = add i32 %v0_10000520, 1
  %v2_10000520 = inttoptr i32 %v1_10000520 to i8*
  %v3_10000520 = load i8, i8* %v2_10000520, align 1
  %v4_10000520 = zext i8 %v3_10000520 to i32
  %v1_10000528 = add i32 %v0_10000518, -2
  store i32 %v1_10000528, i32* @r29, align 4
  %v2_1000052c = icmp slt i32 %v1_10000528, %v4_10000520
  br i1 %v2_1000052c, label %dec_label_pc_100005d8, label %dec_label_pc_10000534

dec_label_pc_10000534:                            ; preds = %dec_label_pc_1000051c
  %v1_10000534 = add i32 %v0_10000520, 2
  store i32 %v1_10000534, i32* @r28, align 4
  %v0_10000538 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000538 = add i32 %v0_10000538, 8
  store i32 %v1_10000538, i32* %r23.global-to-local, align 4
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000057c

dec_label_pc_10000548:                            ; preds = %dec_label_pc_1000057c
  %v5_100005a4 = icmp eq i32 %v2_100005a4, 0
  br i1 %v5_100005a4, label %dec_label_pc_100005d8, label %dec_label_pc_1000054c

dec_label_pc_1000054c:                            ; preds = %dec_label_pc_10000548
  %v1_1000054c = load i32, i32* @r28, align 4
  %v2_1000054c = add i32 %v1_1000054c, %v0_100005a4
  %v3_1000054c = inttoptr i32 %v2_1000054c to i8*
  %v4_1000054c = load i8, i8* %v3_1000054c, align 1
  store i32 %v2_1000054c, i32* %r3.global-to-local, align 4
  %v1_10000554 = add i32 %v2_1000054c, 1
  store i32 %v1_10000554, i32* %r9.global-to-local, align 4
  %v2_10000558 = load i32, i32* @r30, align 4
  %v3_10000558 = add i32 %v2_10000558, 4
  %v4_10000558 = inttoptr i32 %v3_10000558 to i8*
  store i8 %v4_1000054c, i8* %v4_10000558, align 1
  %v0_1000055c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000055c = add i32 %v0_1000055c, -1
  %v4_1000055c = icmp eq i32 %v1_1000055c, 0
  %v0_10000560 = load i32, i32* %r9.global-to-local, align 4
  %v1_10000560 = add i32 %v0_10000560, 1
  store i32 %v1_10000560, i32* @r28, align 4
  br i1 %v4_1000055c, label %dec_label_pc_100005d8, label %dec_label_pc_10000568

dec_label_pc_10000568:                            ; preds = %dec_label_pc_1000054c
  %v0_10000568 = load i32, i32* %r3.global-to-local, align 4
  %v1_10000568 = add i32 %v0_10000568, 1
  %v2_10000568 = inttoptr i32 %v1_10000568 to i8*
  %v3_10000568 = load i8, i8* %v2_10000568, align 1
  %v4_10000568 = zext i8 %v3_10000568 to i32
  store i32 %v1_1000055c, i32* %r9.global-to-local, align 4
  %v1_10000570 = add i32 %v0_1000055c, -2
  store i32 %v1_10000570, i32* @r29, align 4
  %v2_10000574 = icmp slt i32 %v1_10000570, %v4_10000568
  br i1 %v2_10000574, label %dec_label_pc_100005d8, label %dec_label_pc_1000057c

dec_label_pc_1000057c:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_10000534
  %v0_10000580 = phi i32 [ %v4_10000568, %dec_label_pc_10000568 ], [ %v4_10000520, %dec_label_pc_10000534 ]
  %v1_10000580 = add nuw nsw i32 %v0_10000580, 1
  store i32 %v1_10000580, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10000588.11 to i32), i32* @lr, align 4
  %v2_10000584 = call i32 @function_1000a5d4(i32 %v1_10000580, i32 1)
  store i32 %v2_10000584, i32* %r3.global-to-local, align 4
  %v0_10000588 = load i32, i32* @r27, align 4
  %v1_10000588 = add i32 %v0_10000588, 1
  store i32 %v1_10000588, i32* @r27, align 4
  %v1_1000058c = load i32, i32* @r30, align 4
  %v2_1000058c = inttoptr i32 %v1_1000058c to i32*
  store i32 %v2_10000584, i32* %v2_1000058c, align 4
  %v0_10000590 = load i32, i32* @r28, align 4
  %v0_10000594 = load i32, i32* @r31, align 4
  %v0_10000598 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10000598, i32* @r30, align 4
  store i32 268436896, i32* @lr, align 4
  %v3_1000059c = call i32 @function_10008e20(i32 %v2_10000584, i32 %v0_10000590, i32 %v0_10000594)
  store i32 %v3_1000059c, i32* %r3.global-to-local, align 4
  %v0_100005a0 = load i32, i32* @r27, align 4
  %v1_100005a0 = load i32, i32* @r24, align 4
  %v4_100005a0 = icmp eq i32 %v0_100005a0, %v1_100005a0
  %v0_100005a4 = load i32, i32* @r31, align 4
  %v1_100005a4 = load i32, i32* @r29, align 4
  %v2_100005a4 = sub i32 %v1_100005a4, %v0_100005a4
  store i32 %v2_100005a4, i32* %r11.global-to-local, align 4
  %v0_100005a8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100005a8 = add i32 %v0_100005a8, 8
  store i32 %v1_100005a8, i32* %r23.global-to-local, align 4
  br i1 %v4_100005a0, label %dec_label_pc_100005b0, label %dec_label_pc_10000548

dec_label_pc_100005b0:                            ; preds = %dec_label_pc_1000057c, %dec_label_pc_100004ec, %dec_label_pc_100004e0
  %v0_100005b0 = call i32 @function_10009c78()
  %v2_100005b8 = inttoptr i32 %v0_100005b0 to i32*
  store i32 0, i32* %v2_100005b8, align 4
  %v0_100005bc = load i32, i32* %r22.global-to-local, align 4
  %v0_100005c0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100005c0, i32* %r3.global-to-local, align 4
  %v0_100005c4 = load i32, i32* @r26, align 4
  %v0_100005c8 = load i32, i32* %r20.global-to-local, align 4
  %v0_100005cc = load i32, i32* @r24, align 4
  %v0_100005d0 = load i32, i32* %r21.global-to-local, align 4
  store i32 268436952, i32* @lr, align 4
  %v6_100005d4 = call i32 @function_10000280(i32 %v0_100005c0, i32 %v0_100005bc, i32 %v0_100005c4, i32 %v0_100005c8, i32 %v0_100005cc, i32 %v0_100005d0)
  store i32 %v6_100005d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005d8

dec_label_pc_100005d8:                            ; preds = %dec_label_pc_10000568, %dec_label_pc_1000054c, %dec_label_pc_10000548, %dec_label_pc_1000051c, %dec_label_pc_1000050c, %dec_label_pc_10000500, %dec_label_pc_100004d4, %dec_label_pc_100005b0
  %v0_100005d8 = load i32, i32* %r20.global-to-local, align 4
  %v3_100005d8 = icmp eq i32 %v0_100005d8, 0
  br i1 %v3_100005d8, label %dec_label_pc_100005e8, label %dec_label_pc_100005e0

dec_label_pc_100005e0:                            ; preds = %dec_label_pc_100005d8
  store i32 %v0_100005d8, i32* @r3, align 4
  store i32 268436968, i32* @lr, align 4
  %v0_100005e4 = call i32 @function_1000a644()
  store i32 %v0_100005e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100005e8

dec_label_pc_100005e8:                            ; preds = %dec_label_pc_100005d8, %dec_label_pc_100005e0
  %v0_100005e8 = load i32, i32* %r21.global-to-local, align 4
  %v3_100005e8 = icmp eq i32 %v0_100005e8, 0
  br i1 %v3_100005e8, label %dec_label_pc_100003f4, label %dec_label_pc_100005f0

dec_label_pc_100005f0:                            ; preds = %dec_label_pc_100005e8
  %v0_100005f0 = load i32, i32* @r24, align 4
  %tmp27 = icmp slt i32 %v0_100005f0, 1
  br i1 %tmp27, label %dec_label_pc_1000061c, label %dec_label_pc_100005f8

dec_label_pc_100005f8:                            ; preds = %dec_label_pc_100005f0
  br label %dec_label_pc_100005fc

dec_label_pc_100005fc:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f8
  %v0_100006146 = phi i32 [ %v0_100005f0, %dec_label_pc_100005f8 ], [ %v0_10000614, %dec_label_pc_10000614 ]
  %v0_10000604 = phi i32 [ %v0_100005e8, %dec_label_pc_100005f8 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  %v0_100005fc = phi i32 [ 0, %dec_label_pc_100005f8 ], [ %v1_10000614, %dec_label_pc_10000614 ]
  %v1_100005fc = mul i32 %v0_100005fc, 8
  %v1_10000600 = add i32 %v0_100005fc, 1
  store i32 %v1_10000600, i32* @r31, align 4
  %v2_10000604 = add i32 %v1_100005fc, %v0_10000604
  %v3_10000604 = inttoptr i32 %v2_10000604 to i32*
  %v4_10000604 = load i32, i32* %v3_10000604, align 4
  store i32 %v4_10000604, i32* @r3, align 4
  %v3_10000608 = icmp eq i32 %v4_10000604, 0
  br i1 %v3_10000608, label %dec_label_pc_10000614, label %dec_label_pc_10000610

dec_label_pc_10000610:                            ; preds = %dec_label_pc_100005fc
  store i32 268437012, i32* @lr, align 4
  %v0_10000610 = call i32 @function_1000a644()
  store i32 %v0_10000610, i32* %r3.global-to-local, align 4
  %v0_10000614.pre = load i32, i32* @r24, align 4
  %v1_10000614.pre = load i32, i32* @r31, align 4
  %v0_1000061c.pre.pre = load i32, i32* %r21.global-to-local, align 4
  br label %dec_label_pc_10000614

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100005fc, %dec_label_pc_10000610
  %v0_1000061c.pre = phi i32 [ %v0_10000604, %dec_label_pc_100005fc ], [ %v0_1000061c.pre.pre, %dec_label_pc_10000610 ]
  %v1_10000614 = phi i32 [ %v1_10000600, %dec_label_pc_100005fc ], [ %v1_10000614.pre, %dec_label_pc_10000610 ]
  %v0_10000614 = phi i32 [ %v0_100006146, %dec_label_pc_100005fc ], [ %v0_10000614.pre, %dec_label_pc_10000610 ]
  %v4_10000614 = icmp eq i32 %v0_10000614, %v1_10000614
  br i1 %v4_10000614, label %dec_label_pc_1000061c, label %dec_label_pc_100005fc

dec_label_pc_1000061c:                            ; preds = %dec_label_pc_10000614, %dec_label_pc_100005f0
  %v0_1000061c = phi i32 [ %v0_100005e8, %dec_label_pc_100005f0 ], [ %v0_1000061c.pre, %dec_label_pc_10000614 ]
  store i32 %v0_1000061c, i32* @r3, align 4
  store i32 268437028, i32* @lr, align 4
  %v0_10000620 = call i32 @function_1000a644()
  store i32 %v0_10000620, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100003f4

; uselistorder directives
  uselistorder i32 %v0_10000614, { 1, 0 }
  uselistorder i32 %v1_10000614, { 1, 0 }
  uselistorder i32 %v0_100005fc, { 1, 0 }
  uselistorder i32 %v2_100005a4, { 1, 0 }
  uselistorder i32 %v0_100005a4, { 1, 0 }
  uselistorder i32 %v2_1000054c, { 1, 0, 2 }
  uselistorder i32 %v1_10000518, { 0, 2, 1 }
  uselistorder i32 %v3_100004e0, { 1, 0, 2 }
  uselistorder i32 %v1_100004c4, { 1, 0 }
  uselistorder i32 %v1_100004c0, { 1, 0 }
  uselistorder i32 %v0_100004ac, { 0, 2, 1 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %v4_10000448, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10000394, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 5, 6, 9, 10, 11, 7, 8, 12, 13, 14, 16, 17, 15, 1, 0 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r20.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg2, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10000614, { 1, 0 }
  uselistorder label %dec_label_pc_100005e8, { 1, 0 }
  uselistorder label %dec_label_pc_100005d8, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_100003f4, { 6, 1, 2, 3, 4, 0, 5 }
}

define i32 @function_10000628(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10000628:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_1000066c, label %dec_label_pc_10000640

dec_label_pc_10000640:                            ; preds = %dec_label_pc_10000628
  %v0_10000640 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000640 = add i32 %v0_10000640, 4
  %v2_10000640 = inttoptr i32 %v1_10000640 to i8*
  %v3_10000640 = load i8, i8* %v2_10000640, align 1
  %v4_10000640 = zext i8 %v3_10000640 to i32
  %v4_10000648 = icmp eq i32 %v4_10000640, %arg3
  br i1 %v4_10000648, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000664
  %v1_10000654 = add i32 %v0_10000654.in, 12
  %v2_10000654 = inttoptr i32 %v1_10000654 to i8*
  %v3_10000654 = load i8, i8* %v2_10000654, align 1
  %v4_10000654 = zext i8 %v3_10000654 to i32
  %v4_1000065c = icmp eq i32 %v4_10000654, %arg3
  br i1 %v4_1000065c, label %dec_label_pc_10000680, label %dec_label_pc_10000664

dec_label_pc_10000664:                            ; preds = %dec_label_pc_10000640, %dec_label_pc_10000654
  %v0_10000668 = phi i32 [ %v1_10000668, %dec_label_pc_10000654 ], [ %arg1, %dec_label_pc_10000640 ]
  %v0_10000654.in = phi i32 [ %v0_10000654, %dec_label_pc_10000654 ], [ %v0_10000640, %dec_label_pc_10000640 ]
  %v0_10000654 = add i32 %v0_10000654.in, 8
  store i32 %v0_10000654, i32* %r4.global-to-local, align 4
  %v1_10000668 = add i32 %v0_10000668, -1
  %v2_10000668 = icmp eq i32 %v1_10000668, 0
  br i1 %v2_10000668, label %dec_label_pc_1000066c, label %dec_label_pc_10000654

dec_label_pc_1000066c:                            ; preds = %dec_label_pc_10000664, %dec_label_pc_10000680, %dec_label_pc_10000628
  ret i32 %arg4

dec_label_pc_10000680:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000640
  %v0_10000680 = phi i32 [ %v0_10000640, %dec_label_pc_10000640 ], [ %v0_10000654, %dec_label_pc_10000654 ]
  %v1_10000680 = inttoptr i32 %v0_10000680 to i32*
  %v2_10000680 = load i32, i32* %v1_10000680, align 4
  %v3_10000684 = icmp eq i32 %v2_10000680, 0
  br i1 %v3_10000684, label %dec_label_pc_1000066c, label %dec_label_pc_1000068c

dec_label_pc_1000068c:                            ; preds = %dec_label_pc_10000680
  store i32 268437136, i32* @lr, align 4
  %v1_1000068c = call i32 @function_1000a010(i32 %v2_10000680)
  ret i32 %v1_1000068c

; uselistorder directives
  uselistorder i32 %v1_10000668, { 1, 0 }
  uselistorder i32 %v0_10000654, { 1, 0, 2 }
  uselistorder i32 %v0_10000654.in, { 1, 0 }
  uselistorder i32 %v0_10000640, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000066c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000664, { 1, 0 }
}

define i32 @function_100006a8(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100006a8:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %tmp7 = icmp slt i32 %arg1, 1
  br i1 %tmp7, label %dec_label_pc_100006ec, label %dec_label_pc_100006c0

dec_label_pc_100006c0:                            ; preds = %dec_label_pc_100006a8
  %v0_100006c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100006c0 = add i32 %v0_100006c0, 4
  %v2_100006c0 = inttoptr i32 %v1_100006c0 to i8*
  %v3_100006c0 = load i8, i8* %v2_100006c0, align 1
  %v4_100006c0 = zext i8 %v3_100006c0 to i32
  %v4_100006c8 = icmp eq i32 %v4_100006c0, %arg3
  br i1 %v4_100006c8, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006d4:                            ; preds = %dec_label_pc_100006e4
  %v1_100006d4 = add i32 %v0_100006d4.in, 12
  %v2_100006d4 = inttoptr i32 %v1_100006d4 to i8*
  %v3_100006d4 = load i8, i8* %v2_100006d4, align 1
  %v4_100006d4 = zext i8 %v3_100006d4 to i32
  %v4_100006dc = icmp eq i32 %v4_100006d4, %arg3
  br i1 %v4_100006dc, label %dec_label_pc_10000700, label %dec_label_pc_100006e4

dec_label_pc_100006e4:                            ; preds = %dec_label_pc_100006c0, %dec_label_pc_100006d4
  %v0_100006e8 = phi i32 [ %v1_100006e8, %dec_label_pc_100006d4 ], [ %arg1, %dec_label_pc_100006c0 ]
  %v0_100006d4.in = phi i32 [ %v0_100006d4, %dec_label_pc_100006d4 ], [ %v0_100006c0, %dec_label_pc_100006c0 ]
  %v0_100006d4 = add i32 %v0_100006d4.in, 8
  store i32 %v0_100006d4, i32* %r4.global-to-local, align 4
  %v1_100006e8 = add i32 %v0_100006e8, -1
  %v2_100006e8 = icmp eq i32 %v1_100006e8, 0
  br i1 %v2_100006e8, label %dec_label_pc_100006ec, label %dec_label_pc_100006d4

dec_label_pc_100006ec:                            ; preds = %dec_label_pc_100006e4, %dec_label_pc_10000700, %dec_label_pc_100006a8
  ret i32 %arg4

dec_label_pc_10000700:                            ; preds = %dec_label_pc_100006d4, %dec_label_pc_100006c0
  %v0_10000700 = phi i32 [ %v0_100006c0, %dec_label_pc_100006c0 ], [ %v0_100006d4, %dec_label_pc_100006d4 ]
  %v1_10000700 = inttoptr i32 %v0_10000700 to i32*
  %v2_10000700 = load i32, i32* %v1_10000700, align 4
  store i32 %v2_10000700, i32* @r3, align 4
  %v3_10000704 = icmp eq i32 %v2_10000700, 0
  br i1 %v3_10000704, label %dec_label_pc_100006ec, label %dec_label_pc_1000070c

dec_label_pc_1000070c:                            ; preds = %dec_label_pc_10000700
  store i32 10, i32* %r4.global-to-local, align 4
  store i32 268437268, i32* @lr, align 4
  %v2_10000710 = call i32 @function_10008ec4(i32 %v2_10000700, i32 10)
  ret i32 %v2_10000710

; uselistorder directives
  uselistorder i32 %v1_100006e8, { 1, 0 }
  uselistorder i32 %v0_100006d4, { 1, 0, 2 }
  uselistorder i32 %v0_100006d4.in, { 1, 0 }
  uselistorder i32 %v0_100006c0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_100006ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100006e4, { 1, 0 }
}

define i32 @function_1000072c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000072c:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v0_10000730 = load i32, i32* @lr, align 4
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  %v0_1000074c = load i32, i32* @r28, align 4
  store i32 268437336, i32* @lr, align 4
  %v2_10000754 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_10000758 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000758 = zext i8 %v3_10000758 to i32
  store i32 %v4_10000758, i32* %r4.global-to-local, align 4
  store i32 %v2_10000754, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000076c = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_10000770 = inttoptr i32 %v2_10000754 to i32*
  store i32 268439924, i32* %v2_10000770, align 4
  %v0_10000774 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000774 = mul i32 %v0_10000774, 4
  store i32 %v1_10000774, i32* %r4.global-to-local, align 4
  %v0_10000778 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000778 = trunc i32 %v0_10000778 to i8
  %v2_10000778 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000778 = add i32 %v2_10000778, 4
  %v4_10000778 = inttoptr i32 %v3_10000778 to i8*
  store i8 %v1_10000778, i8* %v4_10000778, align 1
  %v0_1000077c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000077c = add i32 %v0_1000077c, 4
  store i32 %v1_1000077c, i32* %r4.global-to-local, align 4
  store i32 268437380, i32* @lr, align 4
  %v3_10000780 = call i32 @function_1000a744(i32 %v3_1000076c, i32 %v1_1000077c, i32 268439924)
  %v3_10000784 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000784 = zext i8 %v3_10000784 to i32
  store i32 %v3_10000780, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000794 = mul nuw nsw i32 %v4_10000784, 4
  %v0_10000798 = load i32, i32* @r28, align 4
  %v3_10000798 = add i32 %v1_10000794, %v3_10000780
  %v4_10000798 = inttoptr i32 %v3_10000798 to i32*
  store i32 %v0_10000798, i32* %v4_10000798, align 4
  %v0_100007a0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007a0, i32* @global_var_1001c69c.10, align 4
  %v0_100007a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007a4 = trunc i32 %v0_100007a4 to i8
  store i8 %v1_100007a4, i8* @global_var_1001c698.9, align 1
  store i32 268437420, i32* @lr, align 4
  %v2_100007a8 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_100007ac = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100007ac = zext i8 %v3_100007ac to i32
  store i32 %v4_100007ac, i32* %r4.global-to-local, align 4
  store i32 %v2_100007a8, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_100007c0 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_100007c4 = inttoptr i32 %v2_100007a8 to i32*
  store i32 268444004, i32* %v2_100007c4, align 4
  %v0_100007c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007c8 = mul i32 %v0_100007c8, 4
  store i32 %v1_100007c8, i32* %r4.global-to-local, align 4
  %v0_100007cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100007cc = trunc i32 %v0_100007cc to i8
  %v2_100007cc = load i32, i32* %r28.global-to-local, align 4
  %v3_100007cc = add i32 %v2_100007cc, 4
  %v4_100007cc = inttoptr i32 %v3_100007cc to i8*
  store i8 %v1_100007cc, i8* %v4_100007cc, align 1
  %v0_100007d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100007d0 = add i32 %v0_100007d0, 4
  store i32 %v1_100007d0, i32* %r4.global-to-local, align 4
  store i32 268437464, i32* @lr, align 4
  %v3_100007d4 = call i32 @function_1000a744(i32 %v3_100007c0, i32 %v1_100007d0, i32 268444004)
  %v3_100007d8 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100007d8 = zext i8 %v3_100007d8 to i32
  store i32 %v3_100007d4, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100007e8 = mul nuw nsw i32 %v4_100007d8, 4
  %v0_100007ec = load i32, i32* @r28, align 4
  %v3_100007ec = add i32 %v1_100007e8, %v3_100007d4
  %v4_100007ec = inttoptr i32 %v3_100007ec to i32*
  store i32 %v0_100007ec, i32* %v4_100007ec, align 4
  %v0_100007f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100007f4, i32* @global_var_1001c69c.10, align 4
  %v0_100007f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100007f8 = trunc i32 %v0_100007f8 to i8
  store i8 %v1_100007f8, i8* @global_var_1001c698.9, align 1
  store i32 268437504, i32* @lr, align 4
  %v2_100007fc = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_10000800 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000800 = zext i8 %v3_10000800 to i32
  store i32 %v4_10000800, i32* %r4.global-to-local, align 4
  store i32 %v2_100007fc, i32* %r28.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10000814 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_10000818 = inttoptr i32 %v2_100007fc to i32*
  store i32 268444996, i32* %v2_10000818, align 4
  %v0_1000081c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000081c = mul i32 %v0_1000081c, 4
  store i32 %v1_1000081c, i32* %r4.global-to-local, align 4
  %v0_10000820 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000820 = trunc i32 %v0_10000820 to i8
  %v2_10000820 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000820 = add i32 %v2_10000820, 4
  %v4_10000820 = inttoptr i32 %v3_10000820 to i8*
  store i8 %v1_10000820, i8* %v4_10000820, align 1
  %v0_10000824 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000824 = add i32 %v0_10000824, 4
  store i32 %v1_10000824, i32* %r4.global-to-local, align 4
  store i32 268437548, i32* @lr, align 4
  %v3_10000828 = call i32 @function_1000a744(i32 %v3_10000814, i32 %v1_10000824, i32 268444996)
  %v3_1000082c = load i8, i8* @global_var_1001c698.9, align 1
  %v4_1000082c = zext i8 %v3_1000082c to i32
  store i32 %v3_10000828, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000083c = mul nuw nsw i32 %v4_1000082c, 4
  %v0_10000840 = load i32, i32* @r28, align 4
  %v3_10000840 = add i32 %v1_1000083c, %v3_10000828
  %v4_10000840 = inttoptr i32 %v3_10000840 to i32*
  store i32 %v0_10000840, i32* %v4_10000840, align 4
  %v0_10000848 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000848, i32* @global_var_1001c69c.10, align 4
  %v0_1000084c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000084c = trunc i32 %v0_1000084c to i8
  store i8 %v1_1000084c, i8* @global_var_1001c698.9, align 1
  store i32 268437588, i32* @lr, align 4
  %v2_10000850 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_10000854 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000854 = zext i8 %v3_10000854 to i32
  store i32 %v4_10000854, i32* %r4.global-to-local, align 4
  store i32 %v2_10000850, i32* %r28.global-to-local, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v3_10000868 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_1000086c = inttoptr i32 %v2_10000850 to i32*
  store i32 268438276, i32* %v2_1000086c, align 4
  %v0_10000870 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000870 = mul i32 %v0_10000870, 4
  store i32 %v1_10000870, i32* %r4.global-to-local, align 4
  %v0_10000874 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000874 = trunc i32 %v0_10000874 to i8
  %v2_10000874 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000874 = add i32 %v2_10000874, 4
  %v4_10000874 = inttoptr i32 %v3_10000874 to i8*
  store i8 %v1_10000874, i8* %v4_10000874, align 1
  %v0_10000878 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000878 = add i32 %v0_10000878, 4
  store i32 %v1_10000878, i32* %r4.global-to-local, align 4
  store i32 268437632, i32* @lr, align 4
  %v3_1000087c = call i32 @function_1000a744(i32 %v3_10000868, i32 %v1_10000878, i32 268438276)
  %v3_10000880 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000880 = zext i8 %v3_10000880 to i32
  store i32 %v3_1000087c, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000890 = mul nuw nsw i32 %v4_10000880, 4
  %v0_10000894 = load i32, i32* @r28, align 4
  %v3_10000894 = add i32 %v1_10000890, %v3_1000087c
  %v4_10000894 = inttoptr i32 %v3_10000894 to i32*
  store i32 %v0_10000894, i32* %v4_10000894, align 4
  %v0_1000089c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000089c, i32* @global_var_1001c69c.10, align 4
  %v0_100008a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008a0 = trunc i32 %v0_100008a0 to i8
  store i8 %v1_100008a0, i8* @global_var_1001c698.9, align 1
  store i32 268437672, i32* @lr, align 4
  %v2_100008a4 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_100008a8 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100008a8 = zext i8 %v3_100008a8 to i32
  store i32 %v4_100008a8, i32* %r4.global-to-local, align 4
  store i32 %v2_100008a4, i32* %r28.global-to-local, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v3_100008bc = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_100008c0 = inttoptr i32 %v2_100008a4 to i32*
  store i32 268451368, i32* %v2_100008c0, align 4
  %v0_100008c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_100008c4 = mul i32 %v0_100008c4, 4
  store i32 %v1_100008c4, i32* %r4.global-to-local, align 4
  %v0_100008c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008c8 = trunc i32 %v0_100008c8 to i8
  %v2_100008c8 = load i32, i32* %r28.global-to-local, align 4
  %v3_100008c8 = add i32 %v2_100008c8, 4
  %v4_100008c8 = inttoptr i32 %v3_100008c8 to i8*
  store i8 %v1_100008c8, i8* %v4_100008c8, align 1
  %v0_100008cc = load i32, i32* %r4.global-to-local, align 4
  %v1_100008cc = add i32 %v0_100008cc, 4
  store i32 %v1_100008cc, i32* %r4.global-to-local, align 4
  store i32 268437716, i32* @lr, align 4
  %v3_100008d0 = call i32 @function_1000a744(i32 %v3_100008bc, i32 %v1_100008cc, i32 268451368)
  %v3_100008d4 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100008d4 = zext i8 %v3_100008d4 to i32
  store i32 %v3_100008d0, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100008e4 = mul nuw nsw i32 %v4_100008d4, 4
  %v0_100008e8 = load i32, i32* @r28, align 4
  %v3_100008e8 = add i32 %v1_100008e4, %v3_100008d0
  %v4_100008e8 = inttoptr i32 %v3_100008e8 to i32*
  store i32 %v0_100008e8, i32* %v4_100008e8, align 4
  %v0_100008f0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100008f0, i32* @global_var_1001c69c.10, align 4
  %v0_100008f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100008f4 = trunc i32 %v0_100008f4 to i8
  store i8 %v1_100008f4, i8* @global_var_1001c698.9, align 1
  store i32 268437756, i32* @lr, align 4
  %v2_100008f8 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_100008fc = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100008fc = zext i8 %v3_100008fc to i32
  store i32 %v4_100008fc, i32* %r4.global-to-local, align 4
  store i32 %v2_100008f8, i32* %r28.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v3_10000910 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_10000914 = inttoptr i32 %v2_100008f8 to i32*
  store i32 268449860, i32* %v2_10000914, align 4
  %v0_10000918 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000918 = mul i32 %v0_10000918, 4
  store i32 %v1_10000918, i32* %r4.global-to-local, align 4
  %v0_1000091c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000091c = trunc i32 %v0_1000091c to i8
  %v2_1000091c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000091c = add i32 %v2_1000091c, 4
  %v4_1000091c = inttoptr i32 %v3_1000091c to i8*
  store i8 %v1_1000091c, i8* %v4_1000091c, align 1
  %v0_10000920 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000920 = add i32 %v0_10000920, 4
  store i32 %v1_10000920, i32* %r4.global-to-local, align 4
  store i32 268437800, i32* @lr, align 4
  %v3_10000924 = call i32 @function_1000a744(i32 %v3_10000910, i32 %v1_10000920, i32 268449860)
  %v3_10000928 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000928 = zext i8 %v3_10000928 to i32
  store i32 %v3_10000924, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000938 = mul nuw nsw i32 %v4_10000928, 4
  %v0_1000093c = load i32, i32* @r28, align 4
  %v3_1000093c = add i32 %v1_10000938, %v3_10000924
  %v4_1000093c = inttoptr i32 %v3_1000093c to i32*
  store i32 %v0_1000093c, i32* %v4_1000093c, align 4
  %v0_10000944 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000944, i32* @global_var_1001c69c.10, align 4
  %v0_10000948 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000948 = trunc i32 %v0_10000948 to i8
  store i8 %v1_10000948, i8* @global_var_1001c698.9, align 1
  store i32 268437840, i32* @lr, align 4
  %v2_1000094c = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_10000950 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000950 = zext i8 %v3_10000950 to i32
  store i32 %v4_10000950, i32* %r4.global-to-local, align 4
  store i32 %v2_1000094c, i32* %r28.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v3_10000964 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_10000968 = inttoptr i32 %v2_1000094c to i32*
  store i32 268448252, i32* %v2_10000968, align 4
  %v0_1000096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000096c = mul i32 %v0_1000096c, 4
  store i32 %v1_1000096c, i32* %r4.global-to-local, align 4
  %v0_10000970 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000970 = trunc i32 %v0_10000970 to i8
  %v2_10000970 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000970 = add i32 %v2_10000970, 4
  %v4_10000970 = inttoptr i32 %v3_10000970 to i8*
  store i8 %v1_10000970, i8* %v4_10000970, align 1
  %v0_10000974 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000974 = add i32 %v0_10000974, 4
  store i32 %v1_10000974, i32* %r4.global-to-local, align 4
  store i32 268437884, i32* @lr, align 4
  %v3_10000978 = call i32 @function_1000a744(i32 %v3_10000964, i32 %v1_10000974, i32 268448252)
  %v3_1000097c = load i8, i8* @global_var_1001c698.9, align 1
  %v4_1000097c = zext i8 %v3_1000097c to i32
  store i32 %v3_10000978, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_1000098c = mul nuw nsw i32 %v4_1000097c, 4
  %v0_10000990 = load i32, i32* @r28, align 4
  %v3_10000990 = add i32 %v1_1000098c, %v3_10000978
  %v4_10000990 = inttoptr i32 %v3_10000990 to i32*
  store i32 %v0_10000990, i32* %v4_10000990, align 4
  %v0_10000998 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000998, i32* @global_var_1001c69c.10, align 4
  %v0_1000099c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000099c = trunc i32 %v0_1000099c to i8
  store i8 %v1_1000099c, i8* @global_var_1001c698.9, align 1
  store i32 268437924, i32* @lr, align 4
  %v2_100009a0 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_100009a4 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100009a4 = zext i8 %v3_100009a4 to i32
  store i32 %v4_100009a4, i32* %r4.global-to-local, align 4
  store i32 %v2_100009a0, i32* %r28.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v3_100009b8 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_100009bc = inttoptr i32 %v2_100009a0 to i32*
  store i32 268446644, i32* %v2_100009bc, align 4
  %v0_100009c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c0 = mul i32 %v0_100009c0, 4
  store i32 %v1_100009c0, i32* %r4.global-to-local, align 4
  %v0_100009c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009c4 = trunc i32 %v0_100009c4 to i8
  %v2_100009c4 = load i32, i32* %r28.global-to-local, align 4
  %v3_100009c4 = add i32 %v2_100009c4, 4
  %v4_100009c4 = inttoptr i32 %v3_100009c4 to i8*
  store i8 %v1_100009c4, i8* %v4_100009c4, align 1
  %v0_100009c8 = load i32, i32* %r4.global-to-local, align 4
  %v1_100009c8 = add i32 %v0_100009c8, 4
  store i32 %v1_100009c8, i32* %r4.global-to-local, align 4
  store i32 268437968, i32* @lr, align 4
  %v3_100009cc = call i32 @function_1000a744(i32 %v3_100009b8, i32 %v1_100009c8, i32 268446644)
  %v3_100009d0 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100009d0 = zext i8 %v3_100009d0 to i32
  store i32 %v3_100009cc, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_100009e0 = mul nuw nsw i32 %v4_100009d0, 4
  %v0_100009e4 = load i32, i32* @r28, align 4
  %v3_100009e4 = add i32 %v1_100009e0, %v3_100009cc
  %v4_100009e4 = inttoptr i32 %v3_100009e4 to i32*
  store i32 %v0_100009e4, i32* %v4_100009e4, align 4
  %v0_100009ec = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_100009ec, i32* @global_var_1001c69c.10, align 4
  %v0_100009f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100009f0 = trunc i32 %v0_100009f0 to i8
  store i8 %v1_100009f0, i8* @global_var_1001c698.9, align 1
  store i32 268438008, i32* @lr, align 4
  %v2_100009f4 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_100009f8 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_100009f8 = zext i8 %v3_100009f8 to i32
  store i32 %v4_100009f8, i32* %r4.global-to-local, align 4
  store i32 %v2_100009f4, i32* %r28.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v3_10000a0c = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_10000a10 = inttoptr i32 %v2_100009f4 to i32*
  store i32 268442640, i32* %v2_10000a10, align 4
  %v0_10000a14 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a14 = mul i32 %v0_10000a14, 4
  store i32 %v1_10000a14, i32* %r4.global-to-local, align 4
  %v0_10000a18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a18 = trunc i32 %v0_10000a18 to i8
  %v2_10000a18 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a18 = add i32 %v2_10000a18, 4
  %v4_10000a18 = inttoptr i32 %v3_10000a18 to i8*
  store i8 %v1_10000a18, i8* %v4_10000a18, align 1
  %v0_10000a1c = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a1c = add i32 %v0_10000a1c, 4
  store i32 %v1_10000a1c, i32* %r4.global-to-local, align 4
  store i32 268438052, i32* @lr, align 4
  %v3_10000a20 = call i32 @function_1000a744(i32 %v3_10000a0c, i32 %v1_10000a1c, i32 268442640)
  %v3_10000a24 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000a24 = zext i8 %v3_10000a24 to i32
  store i32 %v3_10000a20, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a34 = mul nuw nsw i32 %v4_10000a24, 4
  %v0_10000a38 = load i32, i32* @r28, align 4
  %v3_10000a38 = add i32 %v1_10000a34, %v3_10000a20
  %v4_10000a38 = inttoptr i32 %v3_10000a38 to i32*
  store i32 %v0_10000a38, i32* %v4_10000a38, align 4
  %v0_10000a40 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a40, i32* @global_var_1001c69c.10, align 4
  %v0_10000a44 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a44 = trunc i32 %v0_10000a44 to i8
  store i8 %v1_10000a44, i8* @global_var_1001c698.9, align 1
  store i32 268438092, i32* @lr, align 4
  %v2_10000a48 = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_10000a4c = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000a4c = zext i8 %v3_10000a4c to i32
  store i32 %v4_10000a4c, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a48, i32* %r28.global-to-local, align 4
  store i32 7, i32* %r0.global-to-local, align 4
  %v3_10000a60 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_10000a64 = inttoptr i32 %v2_10000a48 to i32*
  store i32 268441168, i32* %v2_10000a64, align 4
  %v0_10000a68 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a68 = mul i32 %v0_10000a68, 4
  store i32 %v1_10000a68, i32* %r4.global-to-local, align 4
  %v0_10000a6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a6c = trunc i32 %v0_10000a6c to i8
  %v2_10000a6c = load i32, i32* %r28.global-to-local, align 4
  %v3_10000a6c = add i32 %v2_10000a6c, 4
  %v4_10000a6c = inttoptr i32 %v3_10000a6c to i8*
  store i8 %v1_10000a6c, i8* %v4_10000a6c, align 1
  %v0_10000a70 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000a70 = add i32 %v0_10000a70, 4
  store i32 %v1_10000a70, i32* %r4.global-to-local, align 4
  store i32 268438136, i32* @lr, align 4
  %v3_10000a74 = call i32 @function_1000a744(i32 %v3_10000a60, i32 %v1_10000a70, i32 268441168)
  %v3_10000a78 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000a78 = zext i8 %v3_10000a78 to i32
  store i32 %v3_10000a74, i32* %r11.global-to-local, align 4
  store i32 8, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000a88 = mul nuw nsw i32 %v4_10000a78, 4
  %v0_10000a8c = load i32, i32* @r28, align 4
  %v3_10000a8c = add i32 %v1_10000a88, %v3_10000a74
  %v4_10000a8c = inttoptr i32 %v3_10000a8c to i32*
  store i32 %v0_10000a8c, i32* %v4_10000a8c, align 4
  %v0_10000a94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000a94 = trunc i32 %v0_10000a94 to i8
  store i8 %v1_10000a94, i8* @global_var_1001c698.9, align 1
  %v0_10000a98 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10000a98, i32* @global_var_1001c69c.10, align 4
  store i32 268438176, i32* @lr, align 4
  %v2_10000a9c = call i32 @function_1000a5d4(i32 1, i32 8)
  %v3_10000aa0 = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000aa0 = zext i8 %v3_10000aa0 to i32
  store i32 %v4_10000aa0, i32* %r4.global-to-local, align 4
  store i32 %v2_10000a9c, i32* %r28.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v3_10000ab4 = load i32, i32* @global_var_1001c69c.10, align 4
  %v2_10000ab8 = inttoptr i32 %v2_10000a9c to i32*
  store i32 268439100, i32* %v2_10000ab8, align 4
  %v0_10000abc = load i32, i32* %r4.global-to-local, align 4
  %v1_10000abc = mul i32 %v0_10000abc, 4
  store i32 %v1_10000abc, i32* %r4.global-to-local, align 4
  %v0_10000ac0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ac0 = trunc i32 %v0_10000ac0 to i8
  %v2_10000ac0 = load i32, i32* %r28.global-to-local, align 4
  %v3_10000ac0 = add i32 %v2_10000ac0, 4
  %v4_10000ac0 = inttoptr i32 %v3_10000ac0 to i8*
  store i8 %v1_10000ac0, i8* %v4_10000ac0, align 1
  %v0_10000ac4 = load i32, i32* %r4.global-to-local, align 4
  %v1_10000ac4 = add i32 %v0_10000ac4, 4
  store i32 %v1_10000ac4, i32* %r4.global-to-local, align 4
  store i32 268438220, i32* @lr, align 4
  %v3_10000ac8 = call i32 @function_1000a744(i32 %v3_10000ab4, i32 %v1_10000ac4, i32 268439100)
  %v3_10000acc = load i8, i8* @global_var_1001c698.9, align 1
  %v4_10000acc = zext i8 %v3_10000acc to i32
  store i32 %v3_10000ac8, i32* @global_var_1001c69c.10, align 4
  store i32 ptrtoint (i8* @global_var_1001c699.13 to i32), i32* %r0.global-to-local, align 4
  %v1_10000ad8 = mul nuw nsw i32 %v4_10000acc, 4
  %v0_10000adc = load i32, i32* @r28, align 4
  %v3_10000adc = add i32 %v1_10000ad8, %v3_10000ac8
  %v4_10000adc = inttoptr i32 %v3_10000adc to i32*
  store i32 %v0_10000adc, i32* %v4_10000adc, align 4
  %v0_10000ae4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10000ae4 = trunc i32 %v0_10000ae4 to i8
  store i8 %v1_10000ae4, i8* @global_var_1001c698.9, align 1
  store i32 %v0_10000730, i32* %r0.global-to-local, align 4
  store i32 %v0_1000074c, i32* @r28, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 ptrtoint (i8* @global_var_1001c699.13 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_1001c698.9, { 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10000b04(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000b04:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000b0c = call i32 @__asm_mfcr()
  store i32 %v0_10000b0c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000b38 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000b40 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268438372, i32* @lr, align 4
  %v2_10000b60 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_10000b60, i32* %r27.global-to-local, align 4
  %v0_10000b6c = load i32, i32* @r30, align 4
  store i32 %v0_10000b6c, i32* %r3.global-to-local, align 4
  store i32 268438388, i32* @lr, align 4
  %v2_10000b70 = call i32 @function_1000a5d4(i32 %v0_10000b6c, i32 4)
  %v0_10000b78 = load i32, i32* @r28, align 4
  store i32 %v2_10000b70, i32* %r26.global-to-local, align 4
  %v0_10000b88 = load i32, i32* @r29, align 4
  store i32 %v0_10000b88, i32* %r3.global-to-local, align 4
  store i32 268438416, i32* @lr, align 4
  %v4_10000b8c = inttoptr i32 %v0_10000b78 to i32*
  %v5_10000b8c = call i32 @function_100006a8(i32 %v0_10000b88, i32* %v4_10000b8c, i32 7, i32 65535)
  %v0_10000b98 = load i32, i32* @r28, align 4
  %v1_10000ba0 = urem i32 %v5_10000b8c, 65536
  store i32 %v1_10000ba0, i32* %r21.global-to-local, align 4
  %v0_10000ba4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ba4, i32* %r3.global-to-local, align 4
  store i32 268438444, i32* @lr, align 4
  %v4_10000ba8 = inttoptr i32 %v0_10000b98 to i32*
  %v5_10000ba8 = call i32 @function_100006a8(i32 %v0_10000ba4, i32* %v4_10000ba8, i32 6, i32 65535)
  %v0_10000bac = load i32, i32* @r28, align 4
  %v1_10000bb0 = urem i32 %v5_10000ba8, 65536
  store i32 %v1_10000bb0, i32* %r22.global-to-local, align 4
  %v0_10000bbc = load i32, i32* @r29, align 4
  store i32 %v0_10000bbc, i32* %r3.global-to-local, align 4
  store i32 268438468, i32* @lr, align 4
  %v4_10000bc0 = inttoptr i32 %v0_10000bac to i32*
  %v5_10000bc0 = call i32 @function_100006a8(i32 %v0_10000bbc, i32* %v4_10000bc0, i32 0, i32 512)
  %v0_10000bc4 = load i32, i32* @r28, align 4
  %v1_10000bc8 = urem i32 %v5_10000bc0, 65536
  store i32 %v1_10000bc8, i32* @r31, align 4
  %v0_10000bd0 = load i32, i32* @r29, align 4
  store i32 %v0_10000bd0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000bdc.14 to i32), i32* @lr, align 4
  %v4_10000bd8 = inttoptr i32 %v0_10000bc4 to i32*
  %v5_10000bd8 = call i32 @function_100006a8(i32 %v0_10000bd0, i32* %v4_10000bd8, i32 1, i32 1)
  store i32 %v5_10000bd8, i32* %r3.global-to-local, align 4
  %v0_10000be8 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000be8 = icmp eq i32 %v0_10000be8, 65535
  %v1_10000bf0 = urem i32 %v5_10000bd8, 256
  store i32 %v1_10000bf0, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000be8, label %dec_label_pc_10000dec, label %dec_label_pc_10000c04

dec_label_pc_10000c04:                            ; preds = %dec_label_pc_10000b04, %dec_label_pc_10000dec
  %v0_10000c04 = load i32, i32* @r30, align 4
  %v1_10000c04 = icmp slt i32 %v0_10000c04, 0
  %v3_10000c04 = icmp eq i32 %v0_10000c04, 0
  store i1 %v1_10000c04, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000c04, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000c04, 1
  br i1 %tmp38, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c0c

dec_label_pc_10000c0c:                            ; preds = %dec_label_pc_10000c04
  %v0_10000c10 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000c10, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000c1c = load i32, i32* %r21.global-to-local, align 4
  %v4_10000c1c = icmp eq i32 %v0_10000c1c, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_10000d6c = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000c1c, label %dec_label_pc_10000d3c, label %dec_label_pc_10000c30

dec_label_pc_10000c30:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000ca4
  %v0_10000c3c = phi i32 [ %v0_10000cb8, %dec_label_pc_10000ca4 ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000c3c = add i32 %v0_10000c3c, 1
  store i32 %v1_10000c3c, i32* %r24.global-to-local, align 4
  store i32 268438596, i32* @lr, align 4
  %v2_10000c40 = call i32 @function_1000a5d4(i32 65535, i32 1)
  %v0_10000c44 = load i32, i32* %r21.global-to-local, align 4
  %v1_10000c44 = trunc i32 %v0_10000c44 to i16
  %v2_10000c44 = load i32, i32* @r28, align 4
  %v3_10000c44 = add i32 %v2_10000c44, 2
  %v4_10000c44 = inttoptr i32 %v3_10000c44 to i16*
  store i16 %v1_10000c44, i16* %v4_10000c44, align 2
  %v1_10000c48 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c48 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000c48 = add i32 %v2_10000c48, %v1_10000c48
  %v4_10000c48 = inttoptr i32 %v3_10000c48 to i32*
  store i32 %v2_10000c40, i32* %v4_10000c48, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438620, i32* @lr, align 4
  %v3_10000c58 = call i32 @function_1000a278(i32 2, i32 2, i32 17)
  store i32 %v3_10000c58, i32* %r3.global-to-local, align 4
  %v3_10000c60 = icmp eq i32 %v3_10000c58, -1
  %v1_10000c68 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000c68 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000c68 = add i32 %v2_10000c68, %v1_10000c68
  %v4_10000c68 = inttoptr i32 %v3_10000c68 to i32*
  store i32 %v3_10000c58, i32* %v4_10000c68, align 4
  br i1 %v3_10000c60, label %dec_label_pc_10000da0, label %dec_label_pc_10000c70

dec_label_pc_10000c70:                            ; preds = %dec_label_pc_10000c30
  %v0_10000c70 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000c70, i32* %stack_var_-72, align 4
  store i32 268438656, i32* @lr, align 4
  %v0_10000c7c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000c7c = call i32 @function_1000a044(i32 %v0_10000c7c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000c7c, i32* %r3.global-to-local, align 4
  %v0_10000c80 = load i32, i32* @r28, align 4
  %v1_10000c80 = add i32 %v0_10000c80, 20
  %v2_10000c80 = inttoptr i32 %v1_10000c80 to i8*
  %v3_10000c80 = load i8, i8* %v2_10000c80, align 1
  %v2_10000c84 = icmp ugt i8 %v3_10000c80, 31
  br i1 %v2_10000c84, label %dec_label_pc_10000ca4, label %dec_label_pc_10000c8c

dec_label_pc_10000c8c:                            ; preds = %dec_label_pc_10000c70
  %v1_10000c8c = add i32 %v0_10000c80, 16
  %v2_10000c8c = inttoptr i32 %v1_10000c8c to i32*
  %v3_10000c8c = load i32, i32* %v2_10000c8c, align 4
  store i32 %v3_10000c8c, i32* %r29.global-to-local, align 4
  %v0_10000c90 = call i32 @function_10005b48()
  store i32 %v0_10000c90, i32* %r3.global-to-local, align 4
  %v0_10000c94 = load i32, i32* @r28, align 4
  %v1_10000c94 = add i32 %v0_10000c94, 20
  %v2_10000c94 = inttoptr i32 %v1_10000c94 to i8*
  %v3_10000c94 = load i8, i8* %v2_10000c94, align 1
  %tmp = urem i8 %v3_10000c94, 64
  %v2_10000c98 = zext i8 %tmp to i32
  %v3_10000c98 = lshr i32 %v0_10000c90, %v2_10000c98
  %v0_10000c9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10000c9c = add i32 %v3_10000c98, %v0_10000c9c
  store i32 %v2_10000c9c, i32* %r3.global-to-local, align 4
  %v2_10000ca0 = add i32 %v0_10000c94, 4
  %v3_10000ca0 = inttoptr i32 %v2_10000ca0 to i32*
  store i32 %v2_10000c9c, i32* %v3_10000ca0, align 4
  %v0_10000ca8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000ca4

dec_label_pc_10000ca4:                            ; preds = %dec_label_pc_10000c70, %dec_label_pc_10000c8c
  %v0_10000ca8 = phi i32 [ %v0_10000c80, %dec_label_pc_10000c70 ], [ %v0_10000ca8.pre, %dec_label_pc_10000c8c ]
  %v0_10000ca4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10000ca4 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000ca4 = add i32 %v1_10000ca4, %v0_10000ca4
  %v3_10000ca4 = inttoptr i32 %v2_10000ca4 to i32*
  %v4_10000ca4 = load i32, i32* %v3_10000ca4, align 4
  store i32 %v4_10000ca4, i32* %r3.global-to-local, align 4
  %v1_10000cb0 = add i32 %v0_10000ca4, 4
  store i32 %v1_10000cb0, i32* %r25.global-to-local, align 4
  store i32 268438712, i32* @lr, align 4
  %v3_10000cb4 = call i32 @function_1000a078(i32 %v4_10000ca4, i32 %v0_10000ca8, i32 16)
  store i32 %v3_10000cb4, i32* %r3.global-to-local, align 4
  %v0_10000cb8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000cb8 = load i32, i32* @r30, align 4
  %v4_10000cb8 = icmp eq i32 %v0_10000cb8, %v1_10000cb8
  %v0_10000cbc = load i32, i32* @r28, align 4
  %v1_10000cbc = add i32 %v0_10000cbc, 24
  store i32 %v1_10000cbc, i32* @r28, align 4
  br i1 %v4_10000cb8, label %dec_label_pc_10000cc4, label %dec_label_pc_10000c30

dec_label_pc_10000cc4:                            ; preds = %dec_label_pc_10000ca4, %dec_label_pc_10000d1c, %dec_label_pc_10000c04
  %v0_10000cc4 = load i32, i32* %r23.global-to-local, align 4
  %v3_10000cc4 = icmp eq i32 %v0_10000cc4, 0
  store i1 %v3_10000cc4, i1* %cr3_eq.global-to-local, align 1
  %v0_10000cc8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cc8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10000cc8.outer

dec_label_pc_10000cc8.outer:                      ; preds = %dec_label_pc_10000cfc, %dec_label_pc_10000e34, %dec_label_pc_10000cc4
  %v1_10000cc8.ph39 = phi i1 [ %v1_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v1_10000e34, %dec_label_pc_10000e34 ], [ %v1_10000cfc, %dec_label_pc_10000cfc ]
  %v0_10000cc8.ph40 = phi i1 [ %v0_10000cc8.pre, %dec_label_pc_10000cc4 ], [ %v0_10000e34, %dec_label_pc_10000e34 ], [ %v0_10000cfc, %dec_label_pc_10000cfc ]
  %v2_10000cc8 = or i1 %v1_10000cc8.ph39, %v0_10000cc8.ph40
  br label %dec_label_pc_10000cc8

dec_label_pc_10000cc8:                            ; preds = %dec_label_pc_10000cc8.outer, %dec_label_pc_10000cc8
  br i1 %v2_10000cc8, label %dec_label_pc_10000cc8, label %dec_label_pc_10000ccc

dec_label_pc_10000ccc:                            ; preds = %dec_label_pc_10000e34, %dec_label_pc_10000cfc, %dec_label_pc_10000cc8
  %v0_10000ccc = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10000ccc, label %dec_label_pc_10000cd0, label %dec_label_pc_10000df8

dec_label_pc_10000cd0:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cd8:                            ; preds = %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge, %dec_label_pc_10000cd0
  %v0_10000cdc = phi i32 [ %v0_10000cf4, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v0_10000cec = phi i32 [ %v0_10000cd8.pre, %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge ], [ 0, %dec_label_pc_10000cd0 ]
  %v1_10000cd8 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000cd8 = add i32 %v1_10000cd8, %v0_10000cec
  %v3_10000cd8 = inttoptr i32 %v2_10000cd8 to i32*
  %v4_10000cd8 = load i32, i32* %v3_10000cd8, align 4
  store i32 %v4_10000cd8, i32* %r3.global-to-local, align 4
  %v1_10000cdc = add i32 %v0_10000cdc, 1
  store i32 %v1_10000cdc, i32* %r28.global-to-local, align 4
  %v1_10000ce0 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000ce0 = add i32 %v1_10000ce0, %v0_10000cec
  %v3_10000ce0 = inttoptr i32 %v2_10000ce0 to i32*
  %v4_10000ce0 = load i32, i32* %v3_10000ce0, align 4
  %v0_10000ce4 = load i32, i32* @r31, align 4
  %v1_10000cec = add i32 %v0_10000cec, 4
  store i32 %v1_10000cec, i32* %r29.global-to-local, align 4
  store i32 268438772, i32* @lr, align 4
  %v4_10000cf0 = call i32 @function_1000a1c4(i32 %v4_10000cd8, i32 %v4_10000ce0, i32 %v0_10000ce4, i32 16384)
  store i32 %v4_10000cf0, i32* %r3.global-to-local, align 4
  %v0_10000cf4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000cf4 = load i32, i32* @r30, align 4
  %v4_10000cf4 = icmp eq i32 %v0_10000cf4, %v1_10000cf4
  br i1 %v4_10000cf4, label %dec_label_pc_10000cfc, label %dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge

dec_label_pc_10000cd8.dec_label_pc_10000cd8_crit_edge: ; preds = %dec_label_pc_10000cd8
  %v0_10000cd8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10000cd8

dec_label_pc_10000cfc:                            ; preds = %dec_label_pc_10000cd8
  %v0_10000cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000cfc = or i1 %v0_10000cfc, %v1_10000cfc
  br i1 %v2_10000cfc, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

dec_label_pc_10000d1c:                            ; preds = %dec_label_pc_10000d80, %dec_label_pc_10000d9c
  %v0_10000d20 = phi i32 [ %v0_10000d90, %dec_label_pc_10000d80 ], [ %v0_10000d20.pre, %dec_label_pc_10000d9c ]
  %v0_10000d1c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000d1c = load i32, i32* %r26.global-to-local, align 4
  %v2_10000d1c = add i32 %v1_10000d1c, %v0_10000d1c
  %v3_10000d1c = inttoptr i32 %v2_10000d1c to i32*
  %v4_10000d1c = load i32, i32* %v3_10000d1c, align 4
  store i32 %v4_10000d1c, i32* %r3.global-to-local, align 4
  %v1_10000d28 = add i32 %v0_10000d1c, 4
  store i32 %v1_10000d28, i32* %r25.global-to-local, align 4
  store i32 268438832, i32* @lr, align 4
  %v3_10000d2c = call i32 @function_1000a078(i32 %v4_10000d1c, i32 %v0_10000d20, i32 16)
  store i32 %v3_10000d2c, i32* %r3.global-to-local, align 4
  %v0_10000d30 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000d30 = load i32, i32* @r30, align 4
  %v4_10000d30 = icmp eq i32 %v0_10000d30, %v1_10000d30
  %v0_10000d34 = load i32, i32* @r28, align 4
  %v1_10000d34 = add i32 %v0_10000d34, 24
  store i32 %v1_10000d34, i32* @r28, align 4
  br i1 %v4_10000d30, label %dec_label_pc_10000cc4, label %dec_label_pc_10000d3c

dec_label_pc_10000d3c:                            ; preds = %dec_label_pc_10000c0c, %dec_label_pc_10000d1c
  %v0_10000d48 = phi i32 [ %v0_10000d30, %dec_label_pc_10000d1c ], [ 0, %dec_label_pc_10000c0c ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000d48 = add i32 %v0_10000d48, 1
  store i32 %v1_10000d48, i32* %r24.global-to-local, align 4
  store i32 268438864, i32* @lr, align 4
  %v2_10000d4c = call i32 @function_1000a5d4(i32 65535, i32 1)
  store i32 %v2_10000d4c, i32* %r3.global-to-local, align 4
  %v1_10000d50 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d50 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000d50 = add i32 %v2_10000d50, %v1_10000d50
  %v4_10000d50 = inttoptr i32 %v3_10000d50 to i32*
  store i32 %v2_10000d4c, i32* %v4_10000d50, align 4
  %v0_10000d54 = call i32 @function_10005b48()
  %v1_10000d54 = trunc i32 %v0_10000d54 to i16
  %v3_10000d58 = load i32, i32* @r28, align 4
  %v4_10000d58 = add i32 %v3_10000d58, 2
  %v5_10000d58 = inttoptr i32 %v4_10000d58 to i16*
  store i16 %v1_10000d54, i16* %v5_10000d58, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268438892, i32* @lr, align 4
  %v3_10000d68 = call i32 @function_1000a278(i32 2, i32 2, i32 17)
  store i32 %v3_10000d68, i32* %r3.global-to-local, align 4
  %v3_10000d70 = icmp eq i32 %v3_10000d68, -1
  %v1_10000d78 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000d78 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000d78 = add i32 %v2_10000d78, %v1_10000d78
  %v4_10000d78 = inttoptr i32 %v3_10000d78 to i32*
  store i32 %v3_10000d68, i32* %v4_10000d78, align 4
  br i1 %v3_10000d70, label %dec_label_pc_10000da0, label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000d3c
  %v0_10000d80 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000d80, i32* %stack_var_-72, align 4
  store i32 268438928, i32* @lr, align 4
  %v0_10000d8c = load i32, i32* %r3.global-to-local, align 4
  %v3_10000d8c = call i32 @function_1000a044(i32 %v0_10000d8c, i32 %v2_10000d6c, i32 16)
  store i32 %v3_10000d8c, i32* %r3.global-to-local, align 4
  %v0_10000d90 = load i32, i32* @r28, align 4
  %v1_10000d90 = add i32 %v0_10000d90, 20
  %v2_10000d90 = inttoptr i32 %v1_10000d90 to i8*
  %v3_10000d90 = load i8, i8* %v2_10000d90, align 1
  %v2_10000d94 = icmp ugt i8 %v3_10000d90, 31
  br i1 %v2_10000d94, label %dec_label_pc_10000d1c, label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d80
  %v1_10000d04 = add i32 %v0_10000d90, 16
  %v2_10000d04 = inttoptr i32 %v1_10000d04 to i32*
  %v3_10000d04 = load i32, i32* %v2_10000d04, align 4
  store i32 %v3_10000d04, i32* %r29.global-to-local, align 4
  %v0_10000d08 = call i32 @function_10005b48()
  store i32 %v0_10000d08, i32* %r3.global-to-local, align 4
  %v0_10000d0c = load i32, i32* @r28, align 4
  %v1_10000d0c = add i32 %v0_10000d0c, 20
  %v2_10000d0c = inttoptr i32 %v1_10000d0c to i8*
  %v3_10000d0c = load i8, i8* %v2_10000d0c, align 1
  %tmp43 = urem i8 %v3_10000d0c, 64
  %v2_10000d10 = zext i8 %tmp43 to i32
  %v3_10000d10 = lshr i32 %v0_10000d08, %v2_10000d10
  %v0_10000d14 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000d14 = add i32 %v3_10000d10, %v0_10000d14
  store i32 %v2_10000d14, i32* %r3.global-to-local, align 4
  %v2_10000d18 = add i32 %v0_10000d0c, 4
  %v3_10000d18 = inttoptr i32 %v2_10000d18 to i32*
  store i32 %v2_10000d14, i32* %v3_10000d18, align 4
  %v0_10000d20.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000d1c

dec_label_pc_10000da0:                            ; preds = %dec_label_pc_10000c30, %dec_label_pc_10000d3c
  %v1_10000db4 = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000b0c)
  store i32 %v0_10000b38, i32* %r28.global-to-local, align 4
  store i32 %v0_10000b40, i32* %r29.global-to-local, align 4
  %v0_10000de8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10000de8

dec_label_pc_10000dec:                            ; preds = %dec_label_pc_10000b04
  %v0_10000dec = call i32 @function_10005b48()
  store i32 %v0_10000dec, i32* %r3.global-to-local, align 4
  %v1_10000df0 = urem i32 %v0_10000dec, 65536
  store i32 %v1_10000df0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000c04

dec_label_pc_10000df8:                            ; preds = %dec_label_pc_10000ccc
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e00:                            ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge, %dec_label_pc_10000df8
  %v0_10000e08 = phi i32 [ %v0_10000e2c, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v0_10000e00 = phi i32 [ %v0_10000e00.pre, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge ], [ 0, %dec_label_pc_10000df8 ]
  %v1_10000e00 = load i32, i32* %r27.global-to-local, align 4
  %v2_10000e00 = add i32 %v1_10000e00, %v0_10000e00
  %v3_10000e00 = inttoptr i32 %v2_10000e00 to i32*
  %v4_10000e00 = load i32, i32* %v3_10000e00, align 4
  store i32 %v4_10000e00, i32* @r29, align 4
  %v0_10000e04 = load i32, i32* @r31, align 4
  store i32 %v0_10000e04, i32* @r4, align 4
  %v1_10000e08 = add i32 %v0_10000e08, 1
  store i32 %v1_10000e08, i32* %r25.global-to-local, align 4
  store i32 %v4_10000e00, i32* @r3, align 4
  %v0_10000e10 = call i32 @function_10005d1c()
  store i32 %v0_10000e10, i32* %r3.global-to-local, align 4
  %v0_10000e14 = load i32, i32* %r28.global-to-local, align 4
  %v1_10000e14 = load i32, i32* %r26.global-to-local, align 4
  %v2_10000e14 = add i32 %v1_10000e14, %v0_10000e14
  %v3_10000e14 = inttoptr i32 %v2_10000e14 to i32*
  %v4_10000e14 = load i32, i32* %v3_10000e14, align 4
  store i32 %v4_10000e14, i32* %r3.global-to-local, align 4
  %v0_10000e18 = load i32, i32* @r29, align 4
  %v0_10000e1c = load i32, i32* @r31, align 4
  %v1_10000e24 = add i32 %v0_10000e14, 4
  store i32 %v1_10000e24, i32* %r28.global-to-local, align 4
  store i32 268439084, i32* @lr, align 4
  %v4_10000e28 = call i32 @function_1000a1c4(i32 %v4_10000e14, i32 %v0_10000e18, i32 %v0_10000e1c, i32 16384)
  store i32 %v4_10000e28, i32* %r3.global-to-local, align 4
  %v0_10000e2c = load i32, i32* %r25.global-to-local, align 4
  %v1_10000e2c = load i32, i32* @r30, align 4
  %v4_10000e2c = icmp eq i32 %v0_10000e2c, %v1_10000e2c
  br i1 %v4_10000e2c, label %dec_label_pc_10000e34, label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge: ; preds = %dec_label_pc_10000e00
  %v0_10000e00.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10000e00

dec_label_pc_10000e34:                            ; preds = %dec_label_pc_10000e00
  %v0_10000e34 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10000e34 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10000e34 = or i1 %v0_10000e34, %v1_10000e34
  br i1 %v2_10000e34, label %dec_label_pc_10000cc8.outer, label %dec_label_pc_10000ccc

; uselistorder directives
  uselistorder i1 %v1_10000e34, { 1, 0 }
  uselistorder i1 %v0_10000e34, { 1, 0 }
  uselistorder i32 %v0_10000e2c, { 1, 0 }
  uselistorder i32 %v0_10000e14, { 1, 0 }
  uselistorder i32 %v0_10000d90, { 1, 2, 0 }
  uselistorder i32 %v0_10000d1c, { 1, 0 }
  uselistorder i1 %v1_10000cfc, { 1, 0 }
  uselistorder i1 %v0_10000cfc, { 1, 0 }
  uselistorder i32 %v0_10000cf4, { 1, 0 }
  uselistorder i32 %v0_10000cec, { 2, 0, 1 }
  uselistorder i32 %v0_10000cb8, { 1, 0 }
  uselistorder i32 %v0_10000ca4, { 1, 0 }
  uselistorder i32 %v2_10000d6c, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 5, 6, 24, 7, 8, 11, 12, 13, 14, 15, 16, 9, 10, 17, 18, 3, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10000da0, { 1, 0 }
  uselistorder label %dec_label_pc_10000d3c, { 1, 0 }
  uselistorder label %dec_label_pc_10000d1c, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8, { 1, 0 }
  uselistorder label %dec_label_pc_10000cc8.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000cc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ca4, { 1, 0 }
  uselistorder label %dec_label_pc_10000c30, { 1, 0 }
  uselistorder label %dec_label_pc_10000c04, { 1, 0 }
}

define i32 @function_10000e3c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10000e3c:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v0_10000e44 = call i32 @__asm_mfcr()
  store i32 %v0_10000e44, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10000e70 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10000e78 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268439196, i32* @lr, align 4
  %v2_10000e98 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_10000e98, i32* %r27.global-to-local, align 4
  %v0_10000ea4 = load i32, i32* @r30, align 4
  store i32 %v0_10000ea4, i32* %r3.global-to-local, align 4
  store i32 268439212, i32* @lr, align 4
  %v2_10000ea8 = call i32 @function_1000a5d4(i32 %v0_10000ea4, i32 4)
  %v0_10000eb0 = load i32, i32* @r28, align 4
  store i32 %v2_10000ea8, i32* %r26.global-to-local, align 4
  %v0_10000ec0 = load i32, i32* @r29, align 4
  store i32 %v0_10000ec0, i32* %r3.global-to-local, align 4
  store i32 268439240, i32* @lr, align 4
  %v4_10000ec4 = inttoptr i32 %v0_10000eb0 to i32*
  %v5_10000ec4 = call i32 @function_100006a8(i32 %v0_10000ec0, i32* %v4_10000ec4, i32 7, i32 65535)
  %v0_10000ed0 = load i32, i32* @r28, align 4
  %v1_10000ed8 = urem i32 %v5_10000ec4, 65536
  store i32 %v1_10000ed8, i32* %r21.global-to-local, align 4
  %v0_10000edc = load i32, i32* @r29, align 4
  store i32 %v0_10000edc, i32* %r3.global-to-local, align 4
  store i32 268439268, i32* @lr, align 4
  %v4_10000ee0 = inttoptr i32 %v0_10000ed0 to i32*
  %v5_10000ee0 = call i32 @function_100006a8(i32 %v0_10000edc, i32* %v4_10000ee0, i32 6, i32 65535)
  %v0_10000ee4 = load i32, i32* @r28, align 4
  %v1_10000ee8 = urem i32 %v5_10000ee0, 65536
  store i32 %v1_10000ee8, i32* %r22.global-to-local, align 4
  %v0_10000ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10000ef4, i32* %r3.global-to-local, align 4
  store i32 268439292, i32* @lr, align 4
  %v4_10000ef8 = inttoptr i32 %v0_10000ee4 to i32*
  %v5_10000ef8 = call i32 @function_100006a8(i32 %v0_10000ef4, i32* %v4_10000ef8, i32 0, i32 1024)
  %v0_10000efc = load i32, i32* @r28, align 4
  %v1_10000f00 = urem i32 %v5_10000ef8, 65536
  store i32 %v1_10000f00, i32* @r31, align 4
  %v0_10000f08 = load i32, i32* @r29, align 4
  store i32 %v0_10000f08, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000f14.15 to i32), i32* @lr, align 4
  %v4_10000f10 = inttoptr i32 %v0_10000efc to i32*
  %v5_10000f10 = call i32 @function_100006a8(i32 %v0_10000f08, i32* %v4_10000f10, i32 1, i32 1)
  store i32 %v5_10000f10, i32* %r3.global-to-local, align 4
  %v0_10000f20 = load i32, i32* %r22.global-to-local, align 4
  %v4_10000f20 = icmp eq i32 %v0_10000f20, 65535
  %v1_10000f28 = urem i32 %v5_10000f10, 256
  store i32 %v1_10000f28, i32* %r23.global-to-local, align 4
  store i32 0, i32* %stack_var_-72, align 4
  br i1 %v4_10000f20, label %dec_label_pc_10001124, label %dec_label_pc_10000f3c

dec_label_pc_10000f3c:                            ; preds = %dec_label_pc_10000e3c, %dec_label_pc_10001124
  %v0_10000f3c = load i32, i32* @r30, align 4
  %v1_10000f3c = icmp slt i32 %v0_10000f3c, 0
  %v3_10000f3c = icmp eq i32 %v0_10000f3c, 0
  store i1 %v1_10000f3c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10000f3c, i1* %cr4_eq.global-to-local, align 1
  %tmp38 = icmp slt i32 %v0_10000f3c, 1
  br i1 %tmp38, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f44

dec_label_pc_10000f44:                            ; preds = %dec_label_pc_10000f3c
  %v0_10000f48 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10000f48, i32* @r28, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  %v0_10000f54 = load i32, i32* %r21.global-to-local, align 4
  %v4_10000f54 = icmp eq i32 %v0_10000f54, 65535
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 2, i32* %r20.global-to-local, align 4
  %v2_100010a4 = ptrtoint i32* %stack_var_-72 to i32
  br i1 %v4_10000f54, label %dec_label_pc_10001074, label %dec_label_pc_10000f68

dec_label_pc_10000f68:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10000fdc
  %v0_10000f74 = phi i32 [ %v0_10000ff0, %dec_label_pc_10000fdc ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10000f74 = add i32 %v0_10000f74, 1
  store i32 %v1_10000f74, i32* %r24.global-to-local, align 4
  store i32 268439420, i32* @lr, align 4
  %v2_10000f78 = call i32 @function_1000a5d4(i32 65535, i32 1)
  %v0_10000f7c = load i32, i32* %r21.global-to-local, align 4
  %v1_10000f7c = trunc i32 %v0_10000f7c to i16
  %v2_10000f7c = load i32, i32* @r28, align 4
  %v3_10000f7c = add i32 %v2_10000f7c, 2
  %v4_10000f7c = inttoptr i32 %v3_10000f7c to i16*
  store i16 %v1_10000f7c, i16* %v4_10000f7c, align 2
  %v1_10000f80 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000f80 = load i32, i32* %r27.global-to-local, align 4
  %v3_10000f80 = add i32 %v2_10000f80, %v1_10000f80
  %v4_10000f80 = inttoptr i32 %v3_10000f80 to i32*
  store i32 %v2_10000f78, i32* %v4_10000f80, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439444, i32* @lr, align 4
  %v3_10000f90 = call i32 @function_1000a278(i32 2, i32 2, i32 0)
  store i32 %v3_10000f90, i32* %r3.global-to-local, align 4
  %v3_10000f98 = icmp eq i32 %v3_10000f90, -1
  %v1_10000fa0 = load i32, i32* %r25.global-to-local, align 4
  %v2_10000fa0 = load i32, i32* %r26.global-to-local, align 4
  %v3_10000fa0 = add i32 %v2_10000fa0, %v1_10000fa0
  %v4_10000fa0 = inttoptr i32 %v3_10000fa0 to i32*
  store i32 %v3_10000f90, i32* %v4_10000fa0, align 4
  br i1 %v3_10000f98, label %dec_label_pc_100010d8, label %dec_label_pc_10000fa8

dec_label_pc_10000fa8:                            ; preds = %dec_label_pc_10000f68
  %v0_10000fa8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_10000fa8, i32* %stack_var_-72, align 4
  store i32 268439480, i32* @lr, align 4
  %v0_10000fb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_10000fb4 = call i32 @function_1000a044(i32 %v0_10000fb4, i32 %v2_100010a4, i32 16)
  store i32 %v3_10000fb4, i32* %r3.global-to-local, align 4
  %v0_10000fb8 = load i32, i32* @r28, align 4
  %v1_10000fb8 = add i32 %v0_10000fb8, 20
  %v2_10000fb8 = inttoptr i32 %v1_10000fb8 to i8*
  %v3_10000fb8 = load i8, i8* %v2_10000fb8, align 1
  %v2_10000fbc = icmp ugt i8 %v3_10000fb8, 31
  br i1 %v2_10000fbc, label %dec_label_pc_10000fdc, label %dec_label_pc_10000fc4

dec_label_pc_10000fc4:                            ; preds = %dec_label_pc_10000fa8
  %v1_10000fc4 = add i32 %v0_10000fb8, 16
  %v2_10000fc4 = inttoptr i32 %v1_10000fc4 to i32*
  %v3_10000fc4 = load i32, i32* %v2_10000fc4, align 4
  store i32 %v3_10000fc4, i32* %r29.global-to-local, align 4
  %v0_10000fc8 = call i32 @function_10005b48()
  store i32 %v0_10000fc8, i32* %r3.global-to-local, align 4
  %v0_10000fcc = load i32, i32* @r28, align 4
  %v1_10000fcc = add i32 %v0_10000fcc, 20
  %v2_10000fcc = inttoptr i32 %v1_10000fcc to i8*
  %v3_10000fcc = load i8, i8* %v2_10000fcc, align 1
  %tmp = urem i8 %v3_10000fcc, 64
  %v2_10000fd0 = zext i8 %tmp to i32
  %v3_10000fd0 = lshr i32 %v0_10000fc8, %v2_10000fd0
  %v0_10000fd4 = load i32, i32* %r29.global-to-local, align 4
  %v2_10000fd4 = add i32 %v3_10000fd0, %v0_10000fd4
  store i32 %v2_10000fd4, i32* %r3.global-to-local, align 4
  %v2_10000fd8 = add i32 %v0_10000fcc, 4
  %v3_10000fd8 = inttoptr i32 %v2_10000fd8 to i32*
  store i32 %v2_10000fd4, i32* %v3_10000fd8, align 4
  %v0_10000fe0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10000fdc

dec_label_pc_10000fdc:                            ; preds = %dec_label_pc_10000fa8, %dec_label_pc_10000fc4
  %v0_10000fe0 = phi i32 [ %v0_10000fb8, %dec_label_pc_10000fa8 ], [ %v0_10000fe0.pre, %dec_label_pc_10000fc4 ]
  %v0_10000fdc = load i32, i32* %r25.global-to-local, align 4
  %v1_10000fdc = load i32, i32* %r26.global-to-local, align 4
  %v2_10000fdc = add i32 %v1_10000fdc, %v0_10000fdc
  %v3_10000fdc = inttoptr i32 %v2_10000fdc to i32*
  %v4_10000fdc = load i32, i32* %v3_10000fdc, align 4
  store i32 %v4_10000fdc, i32* %r3.global-to-local, align 4
  %v1_10000fe8 = add i32 %v0_10000fdc, 4
  store i32 %v1_10000fe8, i32* %r25.global-to-local, align 4
  store i32 268439536, i32* @lr, align 4
  %v3_10000fec = call i32 @function_1000a078(i32 %v4_10000fdc, i32 %v0_10000fe0, i32 16)
  store i32 %v3_10000fec, i32* %r3.global-to-local, align 4
  %v0_10000ff0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10000ff0 = load i32, i32* @r30, align 4
  %v4_10000ff0 = icmp eq i32 %v0_10000ff0, %v1_10000ff0
  %v0_10000ff4 = load i32, i32* @r28, align 4
  %v1_10000ff4 = add i32 %v0_10000ff4, 24
  store i32 %v1_10000ff4, i32* @r28, align 4
  br i1 %v4_10000ff0, label %dec_label_pc_10000ffc, label %dec_label_pc_10000f68

dec_label_pc_10000ffc:                            ; preds = %dec_label_pc_10000fdc, %dec_label_pc_10001054, %dec_label_pc_10000f3c
  %v0_10000ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10000ffc = icmp eq i32 %v0_10000ffc, 0
  store i1 %v3_10000ffc, i1* %cr3_eq.global-to-local, align 1
  %v0_10001000.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001000.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001000.outer

dec_label_pc_10001000.outer:                      ; preds = %dec_label_pc_10001034, %dec_label_pc_1000116c, %dec_label_pc_10000ffc
  %v1_10001000.ph39 = phi i1 [ %v1_10001000.pre, %dec_label_pc_10000ffc ], [ %v1_1000116c, %dec_label_pc_1000116c ], [ %v1_10001034, %dec_label_pc_10001034 ]
  %v0_10001000.ph40 = phi i1 [ %v0_10001000.pre, %dec_label_pc_10000ffc ], [ %v0_1000116c, %dec_label_pc_1000116c ], [ %v0_10001034, %dec_label_pc_10001034 ]
  %v2_10001000 = or i1 %v1_10001000.ph39, %v0_10001000.ph40
  br label %dec_label_pc_10001000

dec_label_pc_10001000:                            ; preds = %dec_label_pc_10001000.outer, %dec_label_pc_10001000
  br i1 %v2_10001000, label %dec_label_pc_10001000, label %dec_label_pc_10001004

dec_label_pc_10001004:                            ; preds = %dec_label_pc_1000116c, %dec_label_pc_10001034, %dec_label_pc_10001000
  %v0_10001004 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001004, label %dec_label_pc_10001008, label %dec_label_pc_10001130

dec_label_pc_10001008:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001010:                            ; preds = %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge, %dec_label_pc_10001008
  %v0_10001014 = phi i32 [ %v0_1000102c, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v0_10001024 = phi i32 [ %v0_10001010.pre, %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge ], [ 0, %dec_label_pc_10001008 ]
  %v1_10001010 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001010 = add i32 %v1_10001010, %v0_10001024
  %v3_10001010 = inttoptr i32 %v2_10001010 to i32*
  %v4_10001010 = load i32, i32* %v3_10001010, align 4
  store i32 %v4_10001010, i32* %r3.global-to-local, align 4
  %v1_10001014 = add i32 %v0_10001014, 1
  store i32 %v1_10001014, i32* %r28.global-to-local, align 4
  %v1_10001018 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001018 = add i32 %v1_10001018, %v0_10001024
  %v3_10001018 = inttoptr i32 %v2_10001018 to i32*
  %v4_10001018 = load i32, i32* %v3_10001018, align 4
  %v0_1000101c = load i32, i32* @r31, align 4
  %v1_10001024 = add i32 %v0_10001024, 4
  store i32 %v1_10001024, i32* %r29.global-to-local, align 4
  store i32 268439596, i32* @lr, align 4
  %v4_10001028 = call i32 @function_1000a1c4(i32 %v4_10001010, i32 %v4_10001018, i32 %v0_1000101c, i32 16384)
  store i32 %v4_10001028, i32* %r3.global-to-local, align 4
  %v0_1000102c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000102c = load i32, i32* @r30, align 4
  %v4_1000102c = icmp eq i32 %v0_1000102c, %v1_1000102c
  br i1 %v4_1000102c, label %dec_label_pc_10001034, label %dec_label_pc_10001010.dec_label_pc_10001010_crit_edge

dec_label_pc_10001010.dec_label_pc_10001010_crit_edge: ; preds = %dec_label_pc_10001010
  %v0_10001010.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10001010

dec_label_pc_10001034:                            ; preds = %dec_label_pc_10001010
  %v0_10001034 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001034 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001034 = or i1 %v0_10001034, %v1_10001034
  br i1 %v2_10001034, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

dec_label_pc_10001054:                            ; preds = %dec_label_pc_100010b8, %dec_label_pc_100010d4
  %v0_10001058 = phi i32 [ %v0_100010c8, %dec_label_pc_100010b8 ], [ %v0_10001058.pre, %dec_label_pc_100010d4 ]
  %v0_10001054 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001054 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001054 = add i32 %v1_10001054, %v0_10001054
  %v3_10001054 = inttoptr i32 %v2_10001054 to i32*
  %v4_10001054 = load i32, i32* %v3_10001054, align 4
  store i32 %v4_10001054, i32* %r3.global-to-local, align 4
  %v1_10001060 = add i32 %v0_10001054, 4
  store i32 %v1_10001060, i32* %r25.global-to-local, align 4
  store i32 268439656, i32* @lr, align 4
  %v3_10001064 = call i32 @function_1000a078(i32 %v4_10001054, i32 %v0_10001058, i32 16)
  store i32 %v3_10001064, i32* %r3.global-to-local, align 4
  %v0_10001068 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001068 = load i32, i32* @r30, align 4
  %v4_10001068 = icmp eq i32 %v0_10001068, %v1_10001068
  %v0_1000106c = load i32, i32* @r28, align 4
  %v1_1000106c = add i32 %v0_1000106c, 24
  store i32 %v1_1000106c, i32* @r28, align 4
  br i1 %v4_10001068, label %dec_label_pc_10000ffc, label %dec_label_pc_10001074

dec_label_pc_10001074:                            ; preds = %dec_label_pc_10000f44, %dec_label_pc_10001054
  %v0_10001080 = phi i32 [ %v0_10001068, %dec_label_pc_10001054 ], [ 0, %dec_label_pc_10000f44 ]
  store i32 65535, i32* %r3.global-to-local, align 4
  %v1_10001080 = add i32 %v0_10001080, 1
  store i32 %v1_10001080, i32* %r24.global-to-local, align 4
  store i32 268439688, i32* @lr, align 4
  %v2_10001084 = call i32 @function_1000a5d4(i32 65535, i32 1)
  store i32 %v2_10001084, i32* %r3.global-to-local, align 4
  %v1_10001088 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001088 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001088 = add i32 %v2_10001088, %v1_10001088
  %v4_10001088 = inttoptr i32 %v3_10001088 to i32*
  store i32 %v2_10001084, i32* %v4_10001088, align 4
  %v0_1000108c = call i32 @function_10005b48()
  %v1_1000108c = trunc i32 %v0_1000108c to i16
  %v3_10001090 = load i32, i32* @r28, align 4
  %v4_10001090 = add i32 %v3_10001090, 2
  %v5_10001090 = inttoptr i32 %v4_10001090 to i16*
  store i16 %v1_1000108c, i16* %v5_10001090, align 2
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268439716, i32* @lr, align 4
  %v3_100010a0 = call i32 @function_1000a278(i32 2, i32 2, i32 0)
  store i32 %v3_100010a0, i32* %r3.global-to-local, align 4
  %v3_100010a8 = icmp eq i32 %v3_100010a0, -1
  %v1_100010b0 = load i32, i32* %r25.global-to-local, align 4
  %v2_100010b0 = load i32, i32* %r26.global-to-local, align 4
  %v3_100010b0 = add i32 %v2_100010b0, %v1_100010b0
  %v4_100010b0 = inttoptr i32 %v3_100010b0 to i32*
  store i32 %v3_100010a0, i32* %v4_100010b0, align 4
  br i1 %v3_100010a8, label %dec_label_pc_100010d8, label %dec_label_pc_100010b8

dec_label_pc_100010b8:                            ; preds = %dec_label_pc_10001074
  %v0_100010b8 = load i32, i32* %r20.global-to-local, align 4
  store i32 %v0_100010b8, i32* %stack_var_-72, align 4
  store i32 268439752, i32* @lr, align 4
  %v0_100010c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100010c4 = call i32 @function_1000a044(i32 %v0_100010c4, i32 %v2_100010a4, i32 16)
  store i32 %v3_100010c4, i32* %r3.global-to-local, align 4
  %v0_100010c8 = load i32, i32* @r28, align 4
  %v1_100010c8 = add i32 %v0_100010c8, 20
  %v2_100010c8 = inttoptr i32 %v1_100010c8 to i8*
  %v3_100010c8 = load i8, i8* %v2_100010c8, align 1
  %v2_100010cc = icmp ugt i8 %v3_100010c8, 31
  br i1 %v2_100010cc, label %dec_label_pc_10001054, label %dec_label_pc_100010d4

dec_label_pc_100010d4:                            ; preds = %dec_label_pc_100010b8
  %v1_1000103c = add i32 %v0_100010c8, 16
  %v2_1000103c = inttoptr i32 %v1_1000103c to i32*
  %v3_1000103c = load i32, i32* %v2_1000103c, align 4
  store i32 %v3_1000103c, i32* %r29.global-to-local, align 4
  %v0_10001040 = call i32 @function_10005b48()
  store i32 %v0_10001040, i32* %r3.global-to-local, align 4
  %v0_10001044 = load i32, i32* @r28, align 4
  %v1_10001044 = add i32 %v0_10001044, 20
  %v2_10001044 = inttoptr i32 %v1_10001044 to i8*
  %v3_10001044 = load i8, i8* %v2_10001044, align 1
  %tmp43 = urem i8 %v3_10001044, 64
  %v2_10001048 = zext i8 %tmp43 to i32
  %v3_10001048 = lshr i32 %v0_10001040, %v2_10001048
  %v0_1000104c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000104c = add i32 %v3_10001048, %v0_1000104c
  store i32 %v2_1000104c, i32* %r3.global-to-local, align 4
  %v2_10001050 = add i32 %v0_10001044, 4
  %v3_10001050 = inttoptr i32 %v2_10001050 to i32*
  store i32 %v2_1000104c, i32* %v3_10001050, align 4
  %v0_10001058.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10001054

dec_label_pc_100010d8:                            ; preds = %dec_label_pc_10000f68, %dec_label_pc_10001074
  %v1_100010ec = call %0 @__asm_mtcrf(i32 24, i32 %v0_10000e44)
  store i32 %v0_10000e70, i32* %r28.global-to-local, align 4
  store i32 %v0_10000e78, i32* %r29.global-to-local, align 4
  %v0_10001120 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001120

dec_label_pc_10001124:                            ; preds = %dec_label_pc_10000e3c
  %v0_10001124 = call i32 @function_10005b48()
  store i32 %v0_10001124, i32* %r3.global-to-local, align 4
  %v1_10001128 = urem i32 %v0_10001124, 65536
  store i32 %v1_10001128, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10000f3c

dec_label_pc_10001130:                            ; preds = %dec_label_pc_10001004
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_10001138:                            ; preds = %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge, %dec_label_pc_10001130
  %v0_10001140 = phi i32 [ %v0_10001164, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v0_10001138 = phi i32 [ %v0_10001138.pre, %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge ], [ 0, %dec_label_pc_10001130 ]
  %v1_10001138 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001138 = add i32 %v1_10001138, %v0_10001138
  %v3_10001138 = inttoptr i32 %v2_10001138 to i32*
  %v4_10001138 = load i32, i32* %v3_10001138, align 4
  store i32 %v4_10001138, i32* @r29, align 4
  %v0_1000113c = load i32, i32* @r31, align 4
  store i32 %v0_1000113c, i32* @r4, align 4
  %v1_10001140 = add i32 %v0_10001140, 1
  store i32 %v1_10001140, i32* %r25.global-to-local, align 4
  store i32 %v4_10001138, i32* @r3, align 4
  %v0_10001148 = call i32 @function_10005d1c()
  store i32 %v0_10001148, i32* %r3.global-to-local, align 4
  %v0_1000114c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000114c = load i32, i32* %r26.global-to-local, align 4
  %v2_1000114c = add i32 %v1_1000114c, %v0_1000114c
  %v3_1000114c = inttoptr i32 %v2_1000114c to i32*
  %v4_1000114c = load i32, i32* %v3_1000114c, align 4
  store i32 %v4_1000114c, i32* %r3.global-to-local, align 4
  %v0_10001150 = load i32, i32* @r29, align 4
  %v0_10001154 = load i32, i32* @r31, align 4
  %v1_1000115c = add i32 %v0_1000114c, 4
  store i32 %v1_1000115c, i32* %r28.global-to-local, align 4
  store i32 268439908, i32* @lr, align 4
  %v4_10001160 = call i32 @function_1000a1c4(i32 %v4_1000114c, i32 %v0_10001150, i32 %v0_10001154, i32 16384)
  store i32 %v4_10001160, i32* %r3.global-to-local, align 4
  %v0_10001164 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001164 = load i32, i32* @r30, align 4
  %v4_10001164 = icmp eq i32 %v0_10001164, %v1_10001164
  br i1 %v4_10001164, label %dec_label_pc_1000116c, label %dec_label_pc_10001138.dec_label_pc_10001138_crit_edge

dec_label_pc_10001138.dec_label_pc_10001138_crit_edge: ; preds = %dec_label_pc_10001138
  %v0_10001138.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10001138

dec_label_pc_1000116c:                            ; preds = %dec_label_pc_10001138
  %v0_1000116c = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_1000116c = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_1000116c = or i1 %v0_1000116c, %v1_1000116c
  br i1 %v2_1000116c, label %dec_label_pc_10001000.outer, label %dec_label_pc_10001004

; uselistorder directives
  uselistorder i1 %v1_1000116c, { 1, 0 }
  uselistorder i1 %v0_1000116c, { 1, 0 }
  uselistorder i32 %v0_10001164, { 1, 0 }
  uselistorder i32 %v0_1000114c, { 1, 0 }
  uselistorder i32 %v0_100010c8, { 1, 2, 0 }
  uselistorder i32 %v0_10001054, { 1, 0 }
  uselistorder i1 %v1_10001034, { 1, 0 }
  uselistorder i1 %v0_10001034, { 1, 0 }
  uselistorder i32 %v0_1000102c, { 1, 0 }
  uselistorder i32 %v0_10001024, { 2, 0, 1 }
  uselistorder i32 %v0_10000ff0, { 1, 0 }
  uselistorder i32 %v0_10000fdc, { 1, 0 }
  uselistorder i32 %v2_100010a4, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 2, 23, 6, 7, 10, 11, 12, 13, 14, 15, 8, 9, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 1, 0 }
  uselistorder i32* %r26.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r25.global-to-local, { 0, 1, 2, 6, 7, 3, 5, 4, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r21.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100010d8, { 1, 0 }
  uselistorder label %dec_label_pc_10001074, { 1, 0 }
  uselistorder label %dec_label_pc_10001054, { 1, 0 }
  uselistorder label %dec_label_pc_10001000, { 1, 0 }
  uselistorder label %dec_label_pc_10001000.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000ffc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10000f68, { 1, 0 }
  uselistorder label %dec_label_pc_10000f3c, { 1, 0 }
}

define i32 @function_10001174(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001174:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001178 = load i32, i32* @lr, align 4
  store i32 %v0_10001178, i32* %r0.global-to-local, align 4
  %v0_1000117c = call i32 @__asm_mfcr()
  store i32 %v0_1000117c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_1000118c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000117c, i32* %r19.global-to-local, align 4
  %v0_100011c0 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100011c8 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100011d0 = load i32, i32* @r30, align 4
  %v0_100011d4 = load i32, i32* @r31, align 4
  store i32 268440040, i32* @lr, align 4
  %v2_100011e4 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_100011e4, i32* %r20.global-to-local, align 4
  %v0_100011ec = load i32, i32* @r28, align 4
  %v0_100011f8 = load i32, i32* @r29, align 4
  store i32 %v0_100011f8, i32* %r3.global-to-local, align 4
  store i32 268440064, i32* @lr, align 4
  %v4_100011fc = inttoptr i32 %v0_100011ec to i32*
  %v5_100011fc = call i32 @function_100006a8(i32 %v0_100011f8, i32* %v4_100011fc, i32 2, i32 0)
  %v0_1000120c = load i32, i32* @r28, align 4
  %v1_10001210 = urem i32 %v5_100011fc, 256
  store i32 %v1_10001210, i32* %r15.global-to-local, align 4
  %v0_10001214 = load i32, i32* @r29, align 4
  store i32 %v0_10001214, i32* %r3.global-to-local, align 4
  store i32 268440092, i32* @lr, align 4
  %v4_10001218 = inttoptr i32 %v0_1000120c to i32*
  %v5_10001218 = call i32 @function_100006a8(i32 %v0_10001214, i32* %v4_10001218, i32 3, i32 65535)
  %v0_1000121c = load i32, i32* @r28, align 4
  store i32 %v5_10001218, i32* %r23.global-to-local, align 4
  %v0_1000122c = load i32, i32* @r29, align 4
  store i32 %v0_1000122c, i32* %r3.global-to-local, align 4
  store i32 268440116, i32* @lr, align 4
  %v4_10001230 = inttoptr i32 %v0_1000121c to i32*
  %v5_10001230 = call i32 @function_100006a8(i32 %v0_1000122c, i32* %v4_10001230, i32 4, i32 64)
  %v0_10001234 = load i32, i32* @r28, align 4
  %v1_10001240 = urem i32 %v5_10001230, 256
  store i32 %v1_10001240, i32* %r16.global-to-local, align 4
  %v0_10001244 = load i32, i32* @r29, align 4
  store i32 %v0_10001244, i32* %r3.global-to-local, align 4
  store i32 268440140, i32* @lr, align 4
  %v4_10001248 = inttoptr i32 %v0_10001234 to i32*
  %v5_10001248 = call i32 @function_100006a8(i32 %v0_10001244, i32* %v4_10001248, i32 5, i32 0)
  %v0_10001258 = load i32, i32* @r28, align 4
  %v1_1000125c = urem i32 %v5_10001248, 256
  store i32 %v1_1000125c, i32* @r31, align 4
  %v0_10001260 = load i32, i32* @r29, align 4
  store i32 %v0_10001260, i32* %r3.global-to-local, align 4
  store i32 268440168, i32* @lr, align 4
  %v4_10001264 = inttoptr i32 %v0_10001258 to i32*
  %v5_10001264 = call i32 @function_100006a8(i32 %v0_10001260, i32* %v4_10001264, i32 6, i32 65535)
  %v0_1000126c = load i32, i32* @r28, align 4
  store i32 %v5_10001264, i32* %r24.global-to-local, align 4
  %v0_1000127c = load i32, i32* @r29, align 4
  store i32 %v0_1000127c, i32* %r3.global-to-local, align 4
  store i32 268440196, i32* @lr, align 4
  %v4_10001280 = inttoptr i32 %v0_1000126c to i32*
  %v5_10001280 = call i32 @function_100006a8(i32 %v0_1000127c, i32* %v4_10001280, i32 7, i32 65535)
  %v0_10001284 = load i32, i32* @r28, align 4
  store i32 %v5_10001280, i32* %r25.global-to-local, align 4
  %v0_10001294 = load i32, i32* @r29, align 4
  store i32 %v0_10001294, i32* %r3.global-to-local, align 4
  store i32 268440220, i32* @lr, align 4
  %v4_10001298 = inttoptr i32 %v0_10001284 to i32*
  %v5_10001298 = call i32 @function_100006a8(i32 %v0_10001294, i32* %v4_10001298, i32 0, i32 512)
  %v0_1000129c = load i32, i32* @r28, align 4
  store i32 %v5_10001298, i32* %r26.global-to-local, align 4
  %v0_100012ac = load i32, i32* @r29, align 4
  store i32 %v0_100012ac, i32* %r3.global-to-local, align 4
  store i32 268440244, i32* @lr, align 4
  %v4_100012b0 = inttoptr i32 %v0_1000129c to i32*
  %v5_100012b0 = call i32 @function_100006a8(i32 %v0_100012ac, i32* %v4_100012b0, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100012b8 = load i32, i32* @global_var_1001c6a0.16, align 4
  %v0_100012bc = load i32, i32* @r28, align 4
  %v1_100012c4 = urem i32 %v5_100012b0, 256
  store i32 %v1_100012c4, i32* %r17.global-to-local, align 4
  %v0_100012c8 = load i32, i32* @r29, align 4
  store i32 %v0_100012c8, i32* %r3.global-to-local, align 4
  store i32 268440272, i32* @lr, align 4
  %v4_100012cc = inttoptr i32 %v0_100012bc to i32*
  %v5_100012cc = call i32 @function_100006a8(i32 %v0_100012c8, i32* %v4_100012cc, i32 25, i32 %v3_100012b8)
  store i32 %v5_100012cc, i32* %r30.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268440292, i32* @lr, align 4
  %v3_100012e0 = call i32 @function_1000a278(i32 2, i32 3, i32 17)
  store i32 %v3_100012e0, i32* %r3.global-to-local, align 4
  %v3_100012e4 = icmp eq i32 %v3_100012e0, -1
  store i32 %v3_100012e0, i32* %r21.global-to-local, align 4
  br i1 %v3_100012e4, label %dec_label_pc_10001540, label %dec_label_pc_100012f0

dec_label_pc_100012f0:                            ; preds = %dec_label_pc_10001174
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100012fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268440332, i32* @lr, align 4
  %v4_10001308 = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_100012fc, i32 4)
  store i32 %v4_10001308, i32* %r3.global-to-local, align 4
  %v3_1000130c = icmp eq i32 %v4_10001308, -1
  br i1 %v3_1000130c, label %dec_label_pc_10001538, label %dec_label_pc_10001314

dec_label_pc_10001314:                            ; preds = %dec_label_pc_100012f0
  %v0_10001314 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001314 = urem i32 %v0_10001314, 65536
  store i32 %v1_10001314, i32* %r18.global-to-local, align 4
  %v0_10001318 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001318 = urem i32 %v0_10001318, 65536
  store i32 %v1_10001318, i32* %r22.global-to-local, align 4
  %v0_10001320 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001320 = urem i32 %v0_10001320, 65536
  store i32 %v1_10001320, i32* %r23.global-to-local, align 4
  %v0_10001324 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001324 = urem i32 %v0_10001324, 65536
  store i32 %v1_10001324, i32* %r24.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_10001314, 1461
  br i1 %tmp30, label %dec_label_pc_10001330, label %dec_label_pc_1000132c

dec_label_pc_1000132c:                            ; preds = %dec_label_pc_10001314
  store i32 1460, i32* %r18.global-to-local, align 4
  br label %dec_label_pc_10001330

dec_label_pc_10001330:                            ; preds = %dec_label_pc_10001314, %dec_label_pc_1000132c
  %v0_10001640 = phi i32 [ %v1_10001314, %dec_label_pc_10001314 ], [ 1460, %dec_label_pc_1000132c ]
  %v0_10001330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001330 = icmp slt i32 %v0_10001330, 0
  %v3_10001330 = icmp eq i32 %v0_10001330, 0
  store i1 %v1_10001330, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001330, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %tmp31 = icmp slt i32 %v0_10001330, 1
  br i1 %tmp31, label %dec_label_pc_10001638, label %dec_label_pc_10001340

dec_label_pc_10001340:                            ; preds = %dec_label_pc_10001330
  %v0_10001340 = load i32, i32* @r31, align 4
  %v3_10001340 = icmp eq i32 %v0_10001340, 0
  %v1_10001344 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001344, i32* %r25.global-to-local, align 4
  %v1_10001348 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001348, i32* %r26.global-to-local, align 4
  %v1_1000134c = urem i32 %v1_10001344, 65536
  store i32 %v1_1000134c, i32* @r28, align 4
  %v1_10001350 = urem i32 %v1_10001348, 65536
  store i32 %v1_10001350, i32* @r29, align 4
  br i1 %v3_10001340, label %dec_label_pc_10001358, label %dec_label_pc_100015a0

dec_label_pc_10001358:                            ; preds = %dec_label_pc_10001340
  br label %dec_label_pc_1000135c

dec_label_pc_1000135c:                            ; preds = %dec_label_pc_1000135c, %dec_label_pc_10001358
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268440424, i32* @lr, align 4
  %v2_10001364 = call i32 @function_1000a5d4(i32 1510, i32 1)
  store i32 %v2_10001364, i32* %r3.global-to-local, align 4
  %v3_10001368 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001368, i32* %r9.global-to-local, align 4
  %v0_1000136c = load i32, i32* @r31, align 4
  %v1_1000136c = mul i32 %v0_1000136c, 4
  store i32 %v1_1000136c, i32* %r0.global-to-local, align 4
  %v1_10001370 = load i32, i32* %r20.global-to-local, align 4
  %v3_10001370 = add i32 %v1_10001370, %v1_1000136c
  %v4_10001370 = inttoptr i32 %v3_10001370 to i32*
  store i32 %v2_10001364, i32* %v4_10001370, align 4
  %v0_10001374 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001374 = mul i32 %v0_10001374, 4
  store i32 %v1_10001374, i32* %r9.global-to-local, align 4
  %v1_10001378 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001378 = add i32 %v1_10001378, %v1_10001374
  %v3_10001378 = inttoptr i32 %v2_10001378 to i32*
  %v4_10001378 = load i32, i32* %v3_10001378, align 4
  store i32 %v4_10001378, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001380 = inttoptr i32 %v4_10001378 to i32*
  %v2_10001380 = load i32, i32* %v1_10001380, align 4
  store i32 %v2_10001380, i32* %r0.global-to-local, align 4
  %v1_10001384 = add i32 %v4_10001378, 20
  store i32 %v1_10001384, i32* %r10.global-to-local, align 4
  %v0_10001388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001388 = trunc i32 %v0_10001388 to i8
  %v3_10001388 = add i32 %v4_10001378, 8
  %v4_10001388 = inttoptr i32 %v3_10001388 to i8*
  store i8 %v1_10001388, i8* %v4_10001388, align 1
  %v1_1000138c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000138c, i32* %r0.global-to-local, align 4
  %v0_10001390 = load i32, i32* @r30, align 4
  %v1_10001390 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001390 = add i32 %v1_10001390, 12
  %v3_10001390 = inttoptr i32 %v2_10001390 to i32*
  store i32 %v0_10001390, i32* %v3_10001390, align 4
  %v1_10001394 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10001398 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001398 = trunc i32 %v0_10001398 to i16
  %v2_10001398 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001398 = add i32 %v2_10001398, 4
  %v4_10001398 = inttoptr i32 %v3_10001398 to i16*
  store i16 %v1_10001398, i16* %v4_10001398, align 2
  %v1_1000139c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000139c = inttoptr i32 %v1_1000139c to i32*
  store i32 %v1_10001394, i32* %v2_1000139c, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100013a4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a4 = add i32 %v2_100013a4, 9
  %v4_100013a4 = inttoptr i32 %v3_100013a4 to i8*
  store i8 17, i8* %v4_100013a4, align 1
  %v0_100013a8 = load i32, i32* %r15.global-to-local, align 4
  %v1_100013a8 = trunc i32 %v0_100013a8 to i8
  %v2_100013a8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013a8 = add i32 %v2_100013a8, 1
  %v4_100013a8 = inttoptr i32 %v3_100013a8 to i8*
  store i8 %v1_100013a8, i8* %v4_100013a8, align 1
  %v0_100013ac = load i32, i32* @r28, align 4
  %v1_100013ac = trunc i32 %v0_100013ac to i16
  %v2_100013ac = load i32, i32* %r11.global-to-local, align 4
  %v3_100013ac = add i32 %v2_100013ac, 2
  %v4_100013ac = inttoptr i32 %v3_100013ac to i16*
  store i16 %v1_100013ac, i16* %v4_100013ac, align 2
  %v3_100013b0 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100013b0, i32* %r9.global-to-local, align 4
  %v0_100013b4 = load i32, i32* %r23.global-to-local, align 4
  %v1_100013b4 = trunc i32 %v0_100013b4 to i16
  %v2_100013b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100013b4 = add i32 %v2_100013b4, 20
  %v4_100013b4 = inttoptr i32 %v3_100013b4 to i16*
  store i16 %v1_100013b4, i16* %v4_100013b4, align 2
  %v0_100013b8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013b8 = add i32 %v0_100013b8, 1
  store i32 %v1_100013b8, i32* %r31.global-to-local, align 4
  %v1_100013bc = mul i32 %v0_100013b8, 24
  store i32 %v1_100013bc, i32* %r9.global-to-local, align 4
  %v1_100013c0 = load i32, i32* %r19.global-to-local, align 4
  %v2_100013c0 = icmp slt i32 %v1_100013b8, %v1_100013c0
  %v0_100013c4 = load i32, i32* @r29, align 4
  %v1_100013c4 = trunc i32 %v0_100013c4 to i16
  %v2_100013c4 = load i32, i32* %r10.global-to-local, align 4
  %v3_100013c4 = add i32 %v2_100013c4, 4
  %v4_100013c4 = inttoptr i32 %v3_100013c4 to i16*
  store i16 %v1_100013c4, i16* %v4_100013c4, align 2
  %v0_100013c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013c8 = load i32, i32* %r27.global-to-local, align 4
  %v2_100013c8 = add i32 %v1_100013c8, %v0_100013c8
  store i32 %v2_100013c8, i32* %r9.global-to-local, align 4
  %v0_100013cc = load i32, i32* %r24.global-to-local, align 4
  %v1_100013cc = trunc i32 %v0_100013cc to i16
  %v2_100013cc = load i32, i32* %r10.global-to-local, align 4
  %v3_100013cc = add i32 %v2_100013cc, 2
  %v4_100013cc = inttoptr i32 %v3_100013cc to i16*
  store i16 %v1_100013cc, i16* %v4_100013cc, align 2
  %v0_100013d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100013d0 = add i32 %v0_100013d0, 16
  %v2_100013d0 = inttoptr i32 %v1_100013d0 to i32*
  %v3_100013d0 = load i32, i32* %v2_100013d0, align 4
  store i32 %v3_100013d0, i32* %r0.global-to-local, align 4
  %v1_100013d4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100013d4 = add i32 %v1_100013d4, 16
  %v3_100013d4 = inttoptr i32 %v2_100013d4 to i32*
  store i32 %v3_100013d0, i32* %v3_100013d4, align 4
  %v0_100013d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100013d8, i32* %stack_var_-104, align 4
  br i1 %v2_100013c0, label %dec_label_pc_1000135c, label %dec_label_pc_100013e0

dec_label_pc_100013e0:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_1000135c
  %v0_100013e0 = load i32, i32* @r30, align 4
  %v3_100013e0 = icmp eq i32 %v0_100013e0, -1
  store i1 %v3_100013e0, i1* %cr2_eq.global-to-local, align 1
  %v0_100013e4 = load i32, i32* %r17.global-to-local, align 4
  %v3_100013e4 = icmp eq i32 %v0_100013e4, 0
  store i1 %v3_100013e4, i1* %cr3_eq.global-to-local, align 1
  %v0_100013e8.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100013e8.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100013e8.preheader

dec_label_pc_100013e8.preheader:                  ; preds = %dec_label_pc_100014b4, %dec_label_pc_10001638, %dec_label_pc_100013e0
  %v1_100013e8 = phi i1 [ %v1_10001330, %dec_label_pc_10001638 ], [ %v1_100013e8.pre, %dec_label_pc_100013e0 ], [ %v1_100014b4, %dec_label_pc_100014b4 ]
  %v0_100013e8 = phi i1 [ %v3_10001330, %dec_label_pc_10001638 ], [ %v0_100013e8.pre, %dec_label_pc_100013e0 ], [ %v0_100014b4, %dec_label_pc_100014b4 ]
  %v2_100013e8 = or i1 %v1_100013e8, %v0_100013e8
  br label %dec_label_pc_100013e8

dec_label_pc_100013e8:                            ; preds = %dec_label_pc_100013e8.preheader, %dec_label_pc_100013e8
  br i1 %v2_100013e8, label %dec_label_pc_100013e8, label %dec_label_pc_100013ec

dec_label_pc_100013ec:                            ; preds = %dec_label_pc_100013e8, %dec_label_pc_100014b4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100013fc

dec_label_pc_100013fc:                            ; preds = %dec_label_pc_10001444, %dec_label_pc_100013ec
  %v0_100013fc = phi i32 [ %v1_100014a4, %dec_label_pc_10001444 ], [ 0, %dec_label_pc_100013ec ]
  %v1_100013fc = mul i32 %v0_100013fc, 24
  store i32 %v1_100013fc, i32* %r0.global-to-local, align 4
  %v1_10001400 = mul i32 %v0_100013fc, 4
  store i32 %v1_10001400, i32* %r11.global-to-local, align 4
  %v1_10001404 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001404 = add i32 %v1_10001404, %v1_10001400
  %v3_10001404 = inttoptr i32 %v2_10001404 to i32*
  %v4_10001404 = load i32, i32* %v3_10001404, align 4
  store i32 %v4_10001404, i32* %r28.global-to-local, align 4
  %v1_10001408 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001408 = add i32 %v1_10001408, %v1_100013fc
  store i32 %v2_10001408, i32* %r10.global-to-local, align 4
  %v1_1000140c = add i32 %v2_10001408, 20
  %v2_1000140c = inttoptr i32 %v1_1000140c to i8*
  %v3_1000140c = load i8, i8* %v2_1000140c, align 1
  %v4_1000140c = zext i8 %v3_1000140c to i32
  store i32 %v4_1000140c, i32* %r9.global-to-local, align 4
  %v1_10001410 = add i32 %v4_10001404, 20
  store i32 %v1_10001410, i32* @r31, align 4
  %tmp32 = icmp ult i8 %v3_1000140c, 32
  br i1 %tmp32, label %dec_label_pc_100014bc, label %dec_label_pc_1000141c

dec_label_pc_1000141c:                            ; preds = %dec_label_pc_100013fc
  %v0_1000141c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000141c, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_10001420:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 65535, i32* @r29, align 4
  %v0_10001428 = load i32, i32* %r22.global-to-local, align 4
  %v4_10001428 = icmp eq i32 %v0_10001428, 65535
  br i1 %v4_10001428, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_10001430:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v1_10001430 = phi i32 [ %v1_100014f4, %dec_label_pc_100014e4 ], [ 65535, %dec_label_pc_10001420 ]
  %v0_10001430 = load i32, i32* %r23.global-to-local, align 4
  %v4_10001430 = icmp eq i32 %v0_10001430, %v1_10001430
  br i1 %v4_10001430, label %dec_label_pc_1000150c, label %dec_label_pc_10001438

dec_label_pc_10001438:                            ; preds = %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge, %dec_label_pc_10001430
  %v1_10001438 = phi i32 [ %v1_10001438.pre, %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge ], [ %v1_10001430, %dec_label_pc_10001430 ]
  %v0_10001438 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001438 = icmp eq i32 %v0_10001438, %v1_10001438
  br i1 %v4_10001438, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_10001440:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_10001440 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001440, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001444:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c, %dec_label_pc_10001528
  %v0_10001444 = load i32, i32* @r30, align 4
  %v1_10001444 = trunc i32 %v0_10001444 to i16
  %v2_10001444 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001444 = add i32 %v2_10001444, 10
  %v4_10001444 = inttoptr i32 %v3_10001444 to i16*
  store i16 %v1_10001444, i16* %v4_10001444, align 2
  %v0_1000144c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000144c, i32* @r3, align 4
  %v2_10001450 = call i32 @function_100043cc(i32 %v0_1000144c, i32 20)
  %v3_10001450 = trunc i32 %v2_10001450 to i16
  %v0_10001454 = load i32, i32* @r31, align 4
  store i32 %v0_10001454, i32* @r4, align 4
  %v4_10001458 = add i32 %v0_1000144c, 10
  %v5_10001458 = inttoptr i32 %v4_10001458 to i16*
  store i16 %v3_10001450, i16* %v5_10001458, align 2
  %v0_1000145c = load i32, i32* %r26.global-to-local, align 4
  %v0_10001460 = load i32, i32* @r30, align 4
  %v1_10001460 = trunc i32 %v0_10001460 to i16
  %v2_10001460 = load i32, i32* @r31, align 4
  %v3_10001460 = add i32 %v2_10001460, 6
  %v4_10001460 = inttoptr i32 %v3_10001460 to i16*
  store i16 %v1_10001460, i16* %v4_10001460, align 2
  %v0_10001464 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001464, i32* %r3.global-to-local, align 4
  %v0_10001468 = load i32, i32* @r31, align 4
  %v1_10001468 = add i32 %v0_10001468, 4
  %v2_10001468 = inttoptr i32 %v1_10001468 to i16*
  %v3_10001468 = load i16, i16* %v2_10001468, align 2
  %v4_10001468 = zext i16 %v3_10001468 to i32
  %v4_1000146c = call i32 @function_10004430(i32 %v0_10001464, i32 %v0_10001454, i32 %v4_10001468, i32 %v0_1000145c)
  %v5_1000146c = trunc i32 %v4_1000146c to i16
  store i32 %v4_1000146c, i32* %r3.global-to-local, align 4
  %v3_10001470 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001470, i32* %r7.global-to-local, align 4
  %v0_10001474 = load i32, i32* @r31, align 4
  %v1_10001474 = add i32 %v0_10001474, 2
  %v2_10001474 = inttoptr i32 %v1_10001474 to i16*
  %v3_10001474 = load i16, i16* %v2_10001474, align 2
  %v4_10001474 = zext i16 %v3_10001474 to i32
  store i32 %v4_10001474, i32* %r0.global-to-local, align 4
  %v0_10001478 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000147c = mul i32 %v3_10001470, 24
  store i32 %v1_1000147c, i32* %r7.global-to-local, align 4
  %v4_10001480 = add i32 %v0_10001474, 6
  %v5_10001480 = inttoptr i32 %v4_10001480 to i16*
  store i16 %v5_1000146c, i16* %v5_10001480, align 2
  %v0_10001484 = load i32, i32* %r25.global-to-local, align 4
  %v0_10001488 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001488, i32* %r3.global-to-local, align 4
  %v0_1000148c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000148c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000148c = add i32 %v1_1000148c, %v0_1000148c
  store i32 %v2_1000148c, i32* %r7.global-to-local, align 4
  %v0_10001494 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001494 = trunc i32 %v0_10001494 to i16
  %v3_10001494 = add i32 %v2_1000148c, 2
  %v4_10001494 = inttoptr i32 %v3_10001494 to i16*
  store i16 %v1_10001494, i16* %v4_10001494, align 2
  store i32 268440736, i32* @lr, align 4
  %v6_1000149c = call i32 @function_1000a1fc(i32 %v0_10001488, i32 %v0_10001478, i32 %v0_10001484, i32 16384, i32 %v2_1000148c, i32 16)
  store i32 %v6_1000149c, i32* %r3.global-to-local, align 4
  %v3_100014a0 = load i32, i32* %stack_var_-104, align 4
  %v1_100014a4 = add i32 %v3_100014a0, 1
  store i32 %v1_100014a4, i32* %r9.global-to-local, align 4
  %v1_100014a8 = load i32, i32* %r19.global-to-local, align 4
  %v2_100014a8 = icmp slt i32 %v1_100014a4, %v1_100014a8
  store i32 %v1_100014a4, i32* %stack_var_-104, align 4
  br i1 %v2_100014a8, label %dec_label_pc_100013fc, label %dec_label_pc_100014b4

dec_label_pc_100014b4:                            ; preds = %dec_label_pc_10001444
  %v0_100014b4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100014b4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100014b4 = or i1 %v0_100014b4, %v1_100014b4
  br i1 %v2_100014b4, label %dec_label_pc_100013e8.preheader, label %dec_label_pc_100013ec

dec_label_pc_100014bc:                            ; preds = %dec_label_pc_100013fc
  %v1_100014bc = add i32 %v2_10001408, 16
  %v2_100014bc = inttoptr i32 %v1_100014bc to i32*
  %v3_100014bc = load i32, i32* %v2_100014bc, align 4
  store i32 %v3_100014bc, i32* %r29.global-to-local, align 4
  %v0_100014c0 = call i32 @function_10005b48()
  store i32 %v0_100014c0, i32* %r3.global-to-local, align 4
  %v3_100014c4 = load i32, i32* %stack_var_-104, align 4
  %v1_100014c8 = mul i32 %v3_100014c4, 24
  %v1_100014cc = load i32, i32* %r27.global-to-local, align 4
  %v2_100014cc = add i32 %v1_100014cc, %v1_100014c8
  store i32 %v2_100014cc, i32* %r9.global-to-local, align 4
  %v1_100014d0 = add i32 %v2_100014cc, 20
  %v2_100014d0 = inttoptr i32 %v1_100014d0 to i8*
  %v3_100014d0 = load i8, i8* %v2_100014d0, align 1
  %v4_100014d0 = zext i8 %v3_100014d0 to i32
  store i32 %v4_100014d0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100014d0, 64
  %v2_100014d4 = zext i8 %tmp to i32
  %v3_100014d4 = lshr i32 %v0_100014c0, %v2_100014d4
  store i32 %v3_100014d4, i32* %r3.global-to-local, align 4
  %v0_100014d8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100014d8 = add i32 %v3_100014d4, %v0_100014d8
  store i32 %v2_100014d8, i32* %r29.global-to-local, align 4
  %v1_100014dc = load i32, i32* %r28.global-to-local, align 4
  %v2_100014dc = add i32 %v1_100014dc, 16
  %v3_100014dc = inttoptr i32 %v2_100014dc to i32*
  store i32 %v2_100014d8, i32* %v3_100014dc, align 4
  %v0_100014e0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100014e0, label %dec_label_pc_100014e4, label %dec_label_pc_10001420

dec_label_pc_100014e4:                            ; preds = %dec_label_pc_100014bc, %dec_label_pc_1000141c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100014e8 = call i32 @function_10005b48()
  store i32 %v0_100014e8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_100014f0 = load i32, i32* %r28.global-to-local, align 4
  %v2_100014f0 = add i32 %v1_100014f0, 12
  %v3_100014f0 = inttoptr i32 %v2_100014f0 to i32*
  store i32 %v0_100014e8, i32* %v3_100014f0, align 4
  %v0_100014f4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100014f4 = load i32, i32* @r29, align 4
  %v4_100014f4 = icmp eq i32 %v0_100014f4, %v1_100014f4
  br i1 %v4_100014f4, label %dec_label_pc_100014fc, label %dec_label_pc_10001430

dec_label_pc_100014fc:                            ; preds = %dec_label_pc_100014e4, %dec_label_pc_10001420
  %v0_100014fc = call i32 @function_10005b48()
  %v1_100014fc = trunc i32 %v0_100014fc to i16
  store i32 %v0_100014fc, i32* %r3.global-to-local, align 4
  %v0_10001500 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001500 = load i32, i32* @r29, align 4
  %v4_10001500 = icmp eq i32 %v0_10001500, %v1_10001500
  %v3_10001504 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001504 = add i32 %v3_10001504, 4
  %v5_10001504 = inttoptr i32 %v4_10001504 to i16*
  store i16 %v1_100014fc, i16* %v5_10001504, align 2
  br i1 %v4_10001500, label %dec_label_pc_1000150c, label %dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge

dec_label_pc_100014fc.dec_label_pc_10001438_crit_edge: ; preds = %dec_label_pc_100014fc
  %v1_10001438.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001438

dec_label_pc_1000150c:                            ; preds = %dec_label_pc_100014fc, %dec_label_pc_10001430
  %v0_1000150c = call i32 @function_10005b48()
  %v1_1000150c = trunc i32 %v0_1000150c to i16
  store i32 %v0_1000150c, i32* %r3.global-to-local, align 4
  %v0_10001510 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001510 = load i32, i32* @r29, align 4
  %v4_10001510 = icmp eq i32 %v0_10001510, %v1_10001510
  %v3_10001514 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001514 = add i32 %v3_10001514, 20
  %v5_10001514 = inttoptr i32 %v4_10001514 to i16*
  store i16 %v1_1000150c, i16* %v5_10001514, align 2
  br i1 %v4_10001510, label %dec_label_pc_1000151c, label %dec_label_pc_10001440

dec_label_pc_1000151c:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001438
  %v0_1000151c = call i32 @function_10005b48()
  %v1_1000151c = trunc i32 %v0_1000151c to i16
  store i32 %v0_1000151c, i32* %r3.global-to-local, align 4
  %v3_10001520 = load i32, i32* @r31, align 4
  %v4_10001520 = add i32 %v3_10001520, 2
  %v5_10001520 = inttoptr i32 %v4_10001520 to i16*
  store i16 %v1_1000151c, i16* %v5_10001520, align 2
  %v0_10001524 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001524, label %dec_label_pc_10001444, label %dec_label_pc_10001528

dec_label_pc_10001528:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000151c
  %v0_10001528 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001528 = add i32 %v0_10001528, 28
  store i32 %v1_10001528, i32* @r3, align 4
  %v0_1000152c = load i32, i32* %r18.global-to-local, align 4
  store i32 %v0_1000152c, i32* @r4, align 4
  %v0_10001530 = call i32 @function_10005d1c()
  store i32 %v0_10001530, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001444

dec_label_pc_10001538:                            ; preds = %dec_label_pc_100012f0
  %v0_10001538 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10001538, i32* %r3.global-to-local, align 4
  store i32 268440896, i32* @lr, align 4
  %v0_1000153c = call i32 @function_1000955c()
  store i32 %v0_1000153c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001540

dec_label_pc_10001540:                            ; preds = %dec_label_pc_10001174, %dec_label_pc_10001538
  store i32 %v0_1000118c, i32* %r0.global-to-local, align 4
  %v1_10001554 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000117c)
  store i32 %v0_100011c0, i32* %r28.global-to-local, align 4
  store i32 %v0_100011c8, i32* %r29.global-to-local, align 4
  store i32 %v0_100011d0, i32* %r30.global-to-local, align 4
  store i32 %v0_100011d4, i32* %r31.global-to-local, align 4
  %v0_1000159c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000159c

dec_label_pc_100015a0:                            ; preds = %dec_label_pc_10001340
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100015a8

dec_label_pc_100015a8:                            ; preds = %dec_label_pc_100015a8, %dec_label_pc_100015a0
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441012, i32* @lr, align 4
  %v2_100015b0 = call i32 @function_1000a5d4(i32 1510, i32 1)
  store i32 %v2_100015b0, i32* %r3.global-to-local, align 4
  %v3_100015b4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015b4, i32* %r9.global-to-local, align 4
  %v0_100015b8 = load i32, i32* @r31, align 4
  %v1_100015b8 = mul i32 %v0_100015b8, 4
  store i32 %v1_100015b8, i32* %r0.global-to-local, align 4
  %v1_100015bc = load i32, i32* %r20.global-to-local, align 4
  %v3_100015bc = add i32 %v1_100015bc, %v1_100015b8
  %v4_100015bc = inttoptr i32 %v3_100015bc to i32*
  store i32 %v2_100015b0, i32* %v4_100015bc, align 4
  %v0_100015c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100015c0 = mul i32 %v0_100015c0, 4
  store i32 %v1_100015c0, i32* %r9.global-to-local, align 4
  %v1_100015c4 = load i32, i32* %r20.global-to-local, align 4
  %v2_100015c4 = add i32 %v1_100015c4, %v1_100015c0
  %v3_100015c4 = inttoptr i32 %v2_100015c4 to i32*
  %v4_100015c4 = load i32, i32* %v3_100015c4, align 4
  store i32 %v4_100015c4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100015cc = inttoptr i32 %v4_100015c4 to i32*
  %v2_100015cc = load i32, i32* %v1_100015cc, align 4
  store i32 %v2_100015cc, i32* %r0.global-to-local, align 4
  %v1_100015d0 = add i32 %v4_100015c4, 20
  store i32 %v1_100015d0, i32* %r10.global-to-local, align 4
  %v0_100015d4 = load i32, i32* %r16.global-to-local, align 4
  %v1_100015d4 = trunc i32 %v0_100015d4 to i8
  %v3_100015d4 = add i32 %v4_100015c4, 8
  %v4_100015d4 = inttoptr i32 %v3_100015d4 to i8*
  store i8 %v1_100015d4, i8* %v4_100015d4, align 1
  %v1_100015d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100015d8, i32* %r0.global-to-local, align 4
  %v0_100015dc = load i32, i32* @r30, align 4
  %v1_100015dc = load i32, i32* %r11.global-to-local, align 4
  %v2_100015dc = add i32 %v1_100015dc, 12
  %v3_100015dc = inttoptr i32 %v2_100015dc to i32*
  store i32 %v0_100015dc, i32* %v3_100015dc, align 4
  %v1_100015e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_100015e4 = load i32, i32* %r22.global-to-local, align 4
  %v1_100015e4 = trunc i32 %v0_100015e4 to i16
  %v2_100015e4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015e4 = add i32 %v2_100015e4, 4
  %v4_100015e4 = inttoptr i32 %v3_100015e4 to i16*
  store i16 %v1_100015e4, i16* %v4_100015e4, align 2
  %v1_100015e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100015e8 = inttoptr i32 %v1_100015e8 to i32*
  store i32 %v1_100015e0, i32* %v2_100015e8, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_100015f0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f0 = add i32 %v2_100015f0, 9
  %v4_100015f0 = inttoptr i32 %v3_100015f0 to i8*
  store i8 17, i8* %v4_100015f0, align 1
  %v0_100015f4 = load i32, i32* %r15.global-to-local, align 4
  %v1_100015f4 = trunc i32 %v0_100015f4 to i8
  %v2_100015f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f4 = add i32 %v2_100015f4, 1
  %v4_100015f4 = inttoptr i32 %v3_100015f4 to i8*
  store i8 %v1_100015f4, i8* %v4_100015f4, align 1
  %v0_100015f8 = load i32, i32* @r28, align 4
  %v1_100015f8 = trunc i32 %v0_100015f8 to i16
  %v2_100015f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_100015f8 = add i32 %v2_100015f8, 2
  %v4_100015f8 = inttoptr i32 %v3_100015f8 to i16*
  store i16 %v1_100015f8, i16* %v4_100015f8, align 2
  %v3_100015fc = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100015fc, i32* %r9.global-to-local, align 4
  %v0_10001600 = load i32, i32* %r23.global-to-local, align 4
  %v1_10001600 = trunc i32 %v0_10001600 to i16
  %v2_10001600 = load i32, i32* %r11.global-to-local, align 4
  %v3_10001600 = add i32 %v2_10001600, 20
  %v4_10001600 = inttoptr i32 %v3_10001600 to i16*
  store i16 %v1_10001600, i16* %v4_10001600, align 2
  %v0_10001604 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001604 = add i32 %v0_10001604, 1
  store i32 %v1_10001604, i32* %r31.global-to-local, align 4
  %v1_10001608 = mul i32 %v0_10001604, 24
  %v1_1000160c = load i32, i32* %r19.global-to-local, align 4
  %v2_1000160c = icmp slt i32 %v1_10001604, %v1_1000160c
  %v1_10001610 = load i32, i32* %r27.global-to-local, align 4
  %v2_10001610 = add i32 %v1_10001610, %v1_10001608
  store i32 %v2_10001610, i32* %r9.global-to-local, align 4
  %v1_10001614 = add i32 %v2_10001610, 16
  %v2_10001614 = inttoptr i32 %v1_10001614 to i32*
  %v3_10001614 = load i32, i32* %v2_10001614, align 4
  store i32 %v3_10001614, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r9.global-to-local, align 4
  %v2_1000161c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000161c = add i32 %v2_1000161c, 6
  %v4_1000161c = inttoptr i32 %v3_1000161c to i16*
  store i16 16384, i16* %v4_1000161c, align 2
  %v0_10001620 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001620 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001620 = add i32 %v1_10001620, 16
  %v3_10001620 = inttoptr i32 %v2_10001620 to i32*
  store i32 %v0_10001620, i32* %v3_10001620, align 4
  %v0_10001624 = load i32, i32* @r29, align 4
  %v1_10001624 = trunc i32 %v0_10001624 to i16
  %v2_10001624 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001624 = add i32 %v2_10001624, 4
  %v4_10001624 = inttoptr i32 %v3_10001624 to i16*
  store i16 %v1_10001624, i16* %v4_10001624, align 2
  %v0_10001628 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001628 = trunc i32 %v0_10001628 to i16
  %v2_10001628 = load i32, i32* %r10.global-to-local, align 4
  %v3_10001628 = add i32 %v2_10001628, 2
  %v4_10001628 = inttoptr i32 %v3_10001628 to i16*
  store i16 %v1_10001628, i16* %v4_10001628, align 2
  %v0_1000162c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000162c, i32* %stack_var_-104, align 4
  br i1 %v2_1000160c, label %dec_label_pc_100015a8, label %dec_label_pc_100013e0

dec_label_pc_10001638:                            ; preds = %dec_label_pc_10001330
  %v0_10001638 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001638 = icmp eq i32 %v0_10001638, -1
  store i1 %v3_10001638, i1* %cr2_eq.global-to-local, align 1
  %v0_1000163c = load i32, i32* %r17.global-to-local, align 4
  %v3_1000163c = icmp eq i32 %v0_1000163c, 0
  store i1 %v3_1000163c, i1* %cr3_eq.global-to-local, align 1
  %v1_10001640 = add nuw nsw i32 %v0_10001640, 28
  store i32 %v1_10001640, i32* %r25.global-to-local, align 4
  %v1_10001644 = add nuw nsw i32 %v0_10001640, 8
  store i32 %v1_10001644, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100013e8.preheader

; uselistorder directives
  uselistorder i32 %v1_100015c0, { 1, 0 }
  uselistorder i32 %v1_100015b8, { 1, 0 }
  uselistorder i32 %v0_1000151c, { 1, 0 }
  uselistorder i32 %v0_1000150c, { 1, 0 }
  uselistorder i32 %v0_100014fc, { 1, 0 }
  uselistorder i32 %v1_100014f4, { 1, 0 }
  uselistorder i1 %v1_100014b4, { 1, 0 }
  uselistorder i1 %v0_100014b4, { 1, 0 }
  uselistorder i32 %v1_100014a4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000146c, { 1, 0 }
  uselistorder i32 %v1_10001400, { 1, 0 }
  uselistorder i32 %v1_10001374, { 1, 0 }
  uselistorder i32 %v1_1000136c, { 1, 0 }
  uselistorder i32 %v0_10001640, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10001314, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 8 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 11, 5, 6, 7, 8, 9, 10, 23, 24, 25, 26, 27, 28, 29, 2, 30, 31, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 8, 1, 2, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r26.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r25.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %r24.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r23.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r18.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 7, 8, 9 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001540, { 1, 0 }
  uselistorder label %dec_label_pc_10001528, { 1, 0 }
  uselistorder label %dec_label_pc_10001444, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100013ec, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8, { 1, 0 }
  uselistorder label %dec_label_pc_100013e8.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001330, { 1, 0 }
}

define i32 @function_10001650(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001650:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-90 = alloca i32, align 4
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001654 = load i32, i32* @lr, align 4
  store i32 %v0_10001654, i32* %r0.global-to-local, align 4
  %v0_10001658 = call i32 @__asm_mfcr()
  store i32 %v0_10001658, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_10001668 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001658, i32* %r18.global-to-local, align 4
  %v0_1000169c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100016a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100016ac = load i32, i32* @r30, align 4
  %v0_100016b0 = load i32, i32* @r31, align 4
  store i32 268441284, i32* @lr, align 4
  %v2_100016c0 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_100016c0, i32* %r19.global-to-local, align 4
  %v0_100016c8 = load i32, i32* @r28, align 4
  %v0_100016d4 = load i32, i32* @r29, align 4
  store i32 %v0_100016d4, i32* %r3.global-to-local, align 4
  store i32 268441308, i32* @lr, align 4
  %v4_100016d8 = inttoptr i32 %v0_100016c8 to i32*
  %v5_100016d8 = call i32 @function_100006a8(i32 %v0_100016d4, i32* %v4_100016d8, i32 2, i32 0)
  %v0_100016e8 = load i32, i32* @r28, align 4
  %v1_100016ec = urem i32 %v5_100016d8, 256
  store i32 %v1_100016ec, i32* %r14.global-to-local, align 4
  %v0_100016f0 = load i32, i32* @r29, align 4
  store i32 %v0_100016f0, i32* %r3.global-to-local, align 4
  store i32 268441336, i32* @lr, align 4
  %v4_100016f4 = inttoptr i32 %v0_100016e8 to i32*
  %v5_100016f4 = call i32 @function_100006a8(i32 %v0_100016f0, i32* %v4_100016f4, i32 3, i32 65535)
  %v0_100016f8 = load i32, i32* @r28, align 4
  store i32 %v5_100016f4, i32* %r24.global-to-local, align 4
  %v0_10001708 = load i32, i32* @r29, align 4
  store i32 %v0_10001708, i32* %r3.global-to-local, align 4
  store i32 268441360, i32* @lr, align 4
  %v4_1000170c = inttoptr i32 %v0_100016f8 to i32*
  %v5_1000170c = call i32 @function_100006a8(i32 %v0_10001708, i32* %v4_1000170c, i32 4, i32 64)
  %v0_10001710 = load i32, i32* @r28, align 4
  %v1_1000171c = urem i32 %v5_1000170c, 256
  store i32 %v1_1000171c, i32* %r20.global-to-local, align 4
  %v0_10001720 = load i32, i32* @r29, align 4
  store i32 %v0_10001720, i32* %r3.global-to-local, align 4
  store i32 268441384, i32* @lr, align 4
  %v4_10001724 = inttoptr i32 %v0_10001710 to i32*
  %v5_10001724 = call i32 @function_100006a8(i32 %v0_10001720, i32* %v4_10001724, i32 5, i32 1)
  %v0_10001734 = load i32, i32* @r28, align 4
  %v1_10001738 = urem i32 %v5_10001724, 256
  store i32 %v1_10001738, i32* @r31, align 4
  %v0_1000173c = load i32, i32* @r29, align 4
  store i32 %v0_1000173c, i32* %r3.global-to-local, align 4
  store i32 268441412, i32* @lr, align 4
  %v4_10001740 = inttoptr i32 %v0_10001734 to i32*
  %v5_10001740 = call i32 @function_100006a8(i32 %v0_1000173c, i32* %v4_10001740, i32 6, i32 65535)
  %v0_10001748 = load i32, i32* @r28, align 4
  store i32 %v5_10001740, i32* %r26.global-to-local, align 4
  %v0_10001758 = load i32, i32* @r29, align 4
  store i32 %v0_10001758, i32* %r3.global-to-local, align 4
  store i32 268441440, i32* @lr, align 4
  %v4_1000175c = inttoptr i32 %v0_10001748 to i32*
  %v5_1000175c = call i32 @function_100006a8(i32 %v0_10001758, i32* %v4_1000175c, i32 7, i32 65535)
  %v0_10001760 = load i32, i32* @r28, align 4
  store i32 %v5_1000175c, i32* %r27.global-to-local, align 4
  %v0_10001770 = load i32, i32* @r29, align 4
  store i32 %v0_10001770, i32* %r3.global-to-local, align 4
  store i32 268441464, i32* @lr, align 4
  %v4_10001774 = inttoptr i32 %v0_10001760 to i32*
  %v5_10001774 = call i32 @function_100006a8(i32 %v0_10001770, i32* %v4_10001774, i32 0, i32 512)
  %v0_10001778 = load i32, i32* @r28, align 4
  store i32 %v5_10001774, i32* %r15.global-to-local, align 4
  %v0_10001788 = load i32, i32* @r29, align 4
  store i32 %v0_10001788, i32* %r3.global-to-local, align 4
  store i32 268441488, i32* @lr, align 4
  %v4_1000178c = inttoptr i32 %v0_10001778 to i32*
  %v5_1000178c = call i32 @function_100006a8(i32 %v0_10001788, i32* %v4_1000178c, i32 1, i32 1)
  %v0_10001790 = load i32, i32* @r28, align 4
  %v1_1000179c = urem i32 %v5_1000178c, 256
  store i32 %v1_1000179c, i32* %r21.global-to-local, align 4
  %v0_100017a0 = load i32, i32* @r29, align 4
  store i32 %v0_100017a0, i32* %r3.global-to-local, align 4
  store i32 268441512, i32* @lr, align 4
  %v4_100017a4 = inttoptr i32 %v0_10001790 to i32*
  %v5_100017a4 = call i32 @function_100006a8(i32 %v0_100017a0, i32* %v4_100017a4, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100017ac = load i32, i32* @global_var_1001c6a0.16, align 4
  %v0_100017b0 = load i32, i32* @r28, align 4
  store i32 %v5_100017a4, i32* %r30.global-to-local, align 4
  %v0_100017bc = load i32, i32* @r29, align 4
  store i32 %v0_100017bc, i32* %r3.global-to-local, align 4
  store i32 268441540, i32* @lr, align 4
  %v4_100017c0 = inttoptr i32 %v0_100017b0 to i32*
  %v5_100017c0 = call i32 @function_100006a8(i32 %v0_100017bc, i32* %v4_100017c0, i32 25, i32 %v3_100017ac)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268441560, i32* @lr, align 4
  %v3_100017d4 = call i32 @function_1000a278(i32 2, i32 3, i32 6)
  store i32 %v3_100017d4, i32* %r3.global-to-local, align 4
  %v3_100017d8 = icmp eq i32 %v3_100017d4, -1
  store i1 %v3_100017d8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100017d4, i32* %r23.global-to-local, align 4
  br i1 %v3_100017d8, label %dec_label_pc_1000197c, label %dec_label_pc_100017e4

dec_label_pc_100017e4:                            ; preds = %dec_label_pc_10001650
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100017f0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268441600, i32* @lr, align 4
  %v4_100017fc = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_100017f0, i32 4)
  store i32 %v4_100017fc, i32* %r3.global-to-local, align 4
  %v3_10001800 = icmp eq i32 %v4_100017fc, -1
  store i1 %v3_10001800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001800, label %dec_label_pc_10001974, label %dec_label_pc_10001808

dec_label_pc_10001808:                            ; preds = %dec_label_pc_100017e4
  %v0_10001808 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001808 = icmp slt i32 %v0_10001808, 0
  %v3_10001808 = icmp eq i32 %v0_10001808, 0
  store i1 %v1_10001808, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001808, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001814 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001814 = urem i32 %v0_10001814, 65536
  store i32 %v1_10001814, i32* %r24.global-to-local, align 4
  %v0_10001818 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001818 = urem i32 %v0_10001818, 65536
  store i32 %v1_10001818, i32* %r16.global-to-local, align 4
  %v0_1000181c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000181c = urem i32 %v0_1000181c, 65536
  store i32 %v1_1000181c, i32* %r17.global-to-local, align 4
  %v0_10001820 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001820 = urem i32 %v0_10001820, 256
  store i32 %v1_10001820, i32* %r3.global-to-local, align 4
  %tmp37 = icmp slt i32 %v0_10001808, 1
  br i1 %tmp37, label %dec_label_pc_100019dc, label %dec_label_pc_10001828

dec_label_pc_10001828:                            ; preds = %dec_label_pc_10001808
  %v0_10001828 = load i32, i32* @r31, align 4
  %v3_10001828 = icmp eq i32 %v0_10001828, 0
  store i1 %v3_10001828, i1* %cr2_eq.global-to-local, align 1
  %v3_1000182c = icmp eq i32 %v1_10001820, 0
  store i1 %v3_1000182c, i1* %cr3_eq.global-to-local, align 1
  %v0_10001830 = load i32, i32* %r15.global-to-local, align 4
  %v1_10001830 = urem i32 %v0_10001830, 65536
  %v0_10001814.not = or i32 %v0_10001814, -65536
  %v1_10001834 = xor i32 %v0_10001814.not, 65535
  store i32 %v1_10001834, i32* %r11.global-to-local, align 4
  %v1_1000183c = add nuw nsw i32 %v1_10001830, 66
  store i32 %v1_1000183c, i32* %r0.global-to-local, align 4
  %v1_10001840 = add nuw nsw i32 %v1_10001830, 28
  store i32 %v1_10001840, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001830, 66
  %v1_10001844 = urem i32 %fold, 65536
  store i32 %v1_10001844, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001830, 28
  %v1_10001848 = urem i32 %fold8, 65536
  store i32 %v1_10001848, i32* %r26.global-to-local, align 4
  %v1_1000184c = urem i32 %v1_10001834, 65536
  store i32 %v1_1000184c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001830, 8
  %v1_10001850 = urem i32 %fold9, 65536
  store i32 %v1_10001850, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001884

dec_label_pc_1000185c:                            ; preds = %dec_label_pc_10001950
  %v0_1000185c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000185c = add i32 %v0_1000185c, 16
  %v2_1000185c = inttoptr i32 %v1_1000185c to i32*
  %v3_1000185c = load i32, i32* %v2_1000185c, align 4
  store i32 %v3_1000185c, i32* %r0.global-to-local, align 4
  %v1_10001860 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001860 = add i32 %v1_10001860, 16
  %v3_10001860 = inttoptr i32 %v2_10001860 to i32*
  store i32 %v3_1000185c, i32* %v3_10001860, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001864:                            ; preds = %dec_label_pc_1000196c, %dec_label_pc_1000185c
  %v3_10001864 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001864, i32* %r9.global-to-local, align 4
  %v0_10001868 = load i32, i32* @r28, align 4
  %v1_10001868 = trunc i32 %v0_10001868 to i16
  %v2_10001868 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001868 = add i32 %v2_10001868, 4
  %v4_10001868 = inttoptr i32 %v3_10001868 to i16*
  store i16 %v1_10001868, i16* %v4_10001868, align 2
  %v0_1000186c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000186c = add i32 %v0_1000186c, 1
  store i32 %v1_1000186c, i32* %r31.global-to-local, align 4
  %v0_10001870 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001870 = trunc i32 %v0_10001870 to i16
  %v2_10001870 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001870 = inttoptr i32 %v2_10001870 to i16*
  store i16 %v1_10001870, i16* %v3_10001870, align 2
  %v0_10001874 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001874 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001874 = icmp slt i32 %v0_10001874, %v1_10001874
  %v4_10001874 = icmp eq i32 %v0_10001874, %v1_10001874
  store i1 %v4_10001874, i1* %cr7_eq.global-to-local, align 1
  %v0_10001878 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001878 = trunc i32 %v0_10001878 to i16
  %v2_10001878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001878 = add i32 %v2_10001878, 2
  %v4_10001878 = inttoptr i32 %v3_10001878 to i16*
  store i16 %v1_10001878, i16* %v4_10001878, align 2
  %v0_1000187c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000187c, i32* %stack_var_-104, align 4
  br i1 %v2_10001874, label %dec_label_pc_10001884, label %dec_label_pc_100019e0

dec_label_pc_10001884:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_10001828
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268441744, i32* @lr, align 4
  %v2_1000188c = call i32 @function_1000a5d4(i32 1510, i32 4)
  store i32 %v2_1000188c, i32* %r3.global-to-local, align 4
  %v3_10001890 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001890, i32* %r9.global-to-local, align 4
  %v0_10001894 = load i32, i32* @r31, align 4
  %v1_10001894 = mul i32 %v0_10001894, 4
  store i32 %v1_10001894, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_1000189c = load i32, i32* %r19.global-to-local, align 4
  %v3_1000189c = add i32 %v1_1000189c, %v1_10001894
  %v4_1000189c = inttoptr i32 %v3_1000189c to i32*
  store i32 %v2_1000188c, i32* %v4_1000189c, align 4
  %v0_100018a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100018a0 = mul i32 %v0_100018a0, 4
  store i32 %v1_100018a0, i32* %r9.global-to-local, align 4
  %v1_100018a4 = load i32, i32* %r19.global-to-local, align 4
  %v2_100018a4 = add i32 %v1_100018a4, %v1_100018a0
  %v3_100018a4 = inttoptr i32 %v2_100018a4 to i32*
  %v4_100018a4 = load i32, i32* %v3_100018a4, align 4
  store i32 %v4_100018a4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100018ac = inttoptr i32 %v4_100018a4 to i32*
  %v2_100018ac = load i32, i32* %v1_100018ac, align 4
  store i32 %v2_100018ac, i32* %r0.global-to-local, align 4
  %v1_100018b0 = add i32 %v4_100018a4, 38
  store i32 %v1_100018b0, i32* %r30.global-to-local, align 4
  %v0_100018b4 = load i32, i32* %r20.global-to-local, align 4
  %v1_100018b4 = trunc i32 %v0_100018b4 to i8
  %v3_100018b4 = add i32 %v4_100018a4, 8
  %v4_100018b4 = inttoptr i32 %v3_100018b4 to i8*
  store i8 %v1_100018b4, i8* %v4_100018b4, align 1
  %v0_100018b8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018b8 = add i32 %v0_100018b8, 58
  store i32 %v1_100018b8, i32* %r29.global-to-local, align 4
  %v1_100018bc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100018bc, i32* %r0.global-to-local, align 4
  %v0_100018c0 = load i32, i32* %r24.global-to-local, align 4
  %v1_100018c0 = trunc i32 %v0_100018c0 to i16
  %v2_100018c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018c0 = add i32 %v2_100018c0, 4
  %v4_100018c0 = inttoptr i32 %v3_100018c0 to i16*
  store i16 %v1_100018c0, i16* %v4_100018c0, align 2
  %v1_100018c4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100018c4, i32* %r0.global-to-local, align 4
  %v0_100018c8 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018c8 = add i32 %v0_100018c8, 20
  store i32 %v1_100018c8, i32* %r9.global-to-local, align 4
  %v2_100018cc = inttoptr i32 %v0_100018c8 to i32*
  store i32 %v1_100018c4, i32* %v2_100018cc, align 4
  %v0_100018d0 = load i32, i32* %r31.global-to-local, align 4
  %v1_100018d0 = add i32 %v0_100018d0, 24
  store i32 %v1_100018d0, i32* %r11.global-to-local, align 4
  %v0_100018d4 = load i32, i32* %r14.global-to-local, align 4
  %v1_100018d4 = trunc i32 %v0_100018d4 to i8
  %v3_100018d4 = add i32 %v0_100018d0, 1
  %v4_100018d4 = inttoptr i32 %v3_100018d4 to i8*
  store i8 %v1_100018d4, i8* %v4_100018d4, align 1
  %v0_100018d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100018d8 = trunc i32 %v0_100018d8 to i16
  %v2_100018d8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018d8 = add i32 %v2_100018d8, 2
  %v4_100018d8 = inttoptr i32 %v3_100018d8 to i16*
  store i16 %v1_100018d8, i16* %v4_100018d8, align 2
  %v0_100018dc = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100018dc, label %dec_label_pc_100018e8, label %dec_label_pc_100018e0

dec_label_pc_100018e0:                            ; preds = %dec_label_pc_10001884
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_100018e4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100018e4 = add i32 %v2_100018e4, 6
  %v4_100018e4 = inttoptr i32 %v3_100018e4 to i16*
  store i16 16384, i16* %v4_100018e4, align 2
  br label %dec_label_pc_100018e8

dec_label_pc_100018e8:                            ; preds = %dec_label_pc_10001884, %dec_label_pc_100018e0
  %v2_100018ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100018ec = add i32 %v2_100018ec, 9
  %v4_100018ec = inttoptr i32 %v3_100018ec to i8*
  store i8 47, i8* %v4_100018ec, align 1
  store i32 25944, i32* %r0.global-to-local, align 4
  %v2_100018f4 = load i32, i32* %r9.global-to-local, align 4
  %v3_100018f4 = add i32 %v2_100018f4, 2
  %v4_100018f4 = inttoptr i32 %v3_100018f4 to i16*
  store i16 25944, i16* %v4_100018f4, align 2
  %v2_100018fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100018fc = add i32 %v2_100018fc, 12
  %v4_100018fc = inttoptr i32 %v3_100018fc to i16*
  store i16 2048, i16* %v4_100018fc, align 2
  %v3_10001900 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_100017c0, i32* %r11.global-to-local, align 4
  %v1_10001908 = mul i32 %v3_10001900, 24
  store i32 %v1_10001908, i32* %r9.global-to-local, align 4
  %v0_1000190c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000190c = add i32 %v0_1000190c, 38
  %v2_1000190c = inttoptr i32 %v1_1000190c to i32*
  %v3_1000190c = load i32, i32* %v2_1000190c, align 4
  store i32 %v3_1000190c, i32* %r0.global-to-local, align 4
  %v2_10001910 = add i32 %v0_1000190c, 12
  %v3_10001910 = inttoptr i32 %v2_10001910 to i32*
  store i32 %v5_100017c0, i32* %v3_10001910, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001918 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001918 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001918 = add i32 %v1_10001918, %v0_10001918
  store i32 %v2_10001918, i32* %r9.global-to-local, align 4
  %v1_1000191c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000191c, i32* %r0.global-to-local, align 4
  %v0_10001920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001920 = add i32 %v0_10001920, 16
  %v2_10001920 = inttoptr i32 %v1_10001920 to i32*
  %v3_10001920 = load i32, i32* %v2_10001920, align 4
  store i32 %v3_10001920, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001928 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001928, i32* %r0.global-to-local, align 4
  %v1_1000192c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000192c = add i32 %v1_1000192c, 38
  %v3_1000192c = inttoptr i32 %v2_1000192c to i32*
  store i32 %v1_10001928, i32* %v3_1000192c, align 4
  %v0_10001930 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001930 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001930 = add i32 %v1_10001930, 16
  %v3_10001930 = inttoptr i32 %v2_10001930 to i32*
  store i32 %v0_10001930, i32* %v3_10001930, align 4
  %v0_10001934 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001934 = trunc i32 %v0_10001934 to i8
  %v2_10001934 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001934 = add i32 %v2_10001934, 1
  %v4_10001934 = inttoptr i32 %v3_10001934 to i8*
  store i8 %v1_10001934, i8* %v4_10001934, align 1
  %v0_10001938 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001938 = trunc i32 %v0_10001938 to i16
  %v2_10001938 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001938 = add i32 %v2_10001938, 2
  %v4_10001938 = inttoptr i32 %v3_10001938 to i16*
  store i16 %v1_10001938, i16* %v4_10001938, align 2
  %v0_1000193c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000193c = trunc i32 %v0_1000193c to i16
  %v2_1000193c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000193c = add i32 %v2_1000193c, 4
  %v4_1000193c = inttoptr i32 %v3_1000193c to i16*
  store i16 %v1_1000193c, i16* %v4_1000193c, align 2
  %v0_10001940 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001940 = trunc i32 %v0_10001940 to i8
  %v2_10001940 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001940 = add i32 %v2_10001940, 8
  %v4_10001940 = inttoptr i32 %v3_10001940 to i8*
  store i8 %v1_10001940, i8* %v4_10001940, align 1
  %v0_10001944 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001944, label %dec_label_pc_10001950, label %dec_label_pc_10001948

dec_label_pc_10001948:                            ; preds = %dec_label_pc_100018e8
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_1000194c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000194c = add i32 %v2_1000194c, 6
  %v4_1000194c = inttoptr i32 %v3_1000194c to i16*
  store i16 16384, i16* %v4_1000194c, align 2
  br label %dec_label_pc_10001950

dec_label_pc_10001950:                            ; preds = %dec_label_pc_100018e8, %dec_label_pc_10001948
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001954 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001954 = add i32 %v2_10001954, 9
  %v4_10001954 = inttoptr i32 %v3_10001954 to i8*
  store i8 17, i8* %v4_10001954, align 1
  %v0_10001958 = call i32 @function_10005b48()
  store i32 %v0_10001958, i32* %r3.global-to-local, align 4
  %v1_1000195c = add i32 %v0_10001958, -1024
  store i32 %v1_1000195c, i32* %r0.global-to-local, align 4
  %v1_10001960 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001960 = add i32 %v1_10001960, 12
  %v3_10001960 = inttoptr i32 %v2_10001960 to i32*
  store i32 %v0_10001958, i32* %v3_10001960, align 4
  %v0_10001964 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001964 = sub i32 -1, %v0_10001964
  store i32 %v1_10001964, i32* %r0.global-to-local, align 4
  %v0_10001968 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001968, label %dec_label_pc_1000196c, label %dec_label_pc_1000185c

dec_label_pc_1000196c:                            ; preds = %dec_label_pc_10001950
  %v1_1000196c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000196c = add i32 %v1_1000196c, 16
  %v3_1000196c = inttoptr i32 %v2_1000196c to i32*
  store i32 %v1_10001964, i32* %v3_1000196c, align 4
  br label %dec_label_pc_10001864

dec_label_pc_10001974:                            ; preds = %dec_label_pc_100017e4
  %v0_10001974 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001974, i32* %r3.global-to-local, align 4
  store i32 268441980, i32* @lr, align 4
  %v0_10001978 = call i32 @function_1000955c()
  store i32 %v0_10001978, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000197c

dec_label_pc_1000197c:                            ; preds = %dec_label_pc_10001650, %dec_label_pc_10001974
  store i32 %v0_10001668, i32* %r0.global-to-local, align 4
  %v1_10001990 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001658)
  store i32 %v0_1000169c, i32* %r28.global-to-local, align 4
  store i32 %v0_100016a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100016ac, i32* %r30.global-to-local, align 4
  store i32 %v0_100016b0, i32* %r31.global-to-local, align 4
  %v0_100019d8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100019d8

dec_label_pc_100019dc:                            ; preds = %dec_label_pc_10001808
  %v3_100019dc = icmp eq i32 %v1_10001820, 0
  store i1 %v3_100019dc, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100019e0

dec_label_pc_100019e0:                            ; preds = %dec_label_pc_10001864, %dec_label_pc_100019dc
  store i32 %v5_100017c0, i32* %r0.global-to-local, align 4
  %v0_100019e4 = load i32, i32* %r21.global-to-local, align 4
  %v3_100019e4 = icmp eq i32 %v0_100019e4, 0
  store i1 %v3_100019e4, i1* %cr2_eq.global-to-local, align 1
  %v2_100019e8 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_100019e8, i32* %r14.global-to-local, align 4
  %v0_100019ec = load i32, i32* %r15.global-to-local, align 4
  %v1_100019ec = add i32 %v0_100019ec, 8
  store i32 %v1_100019ec, i32* %r21.global-to-local, align 4
  %v3_100019f0 = icmp eq i32 %v5_100017c0, -1
  store i1 %v3_100019f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100019f4 = add i32 %v0_100019ec, 66
  store i32 %v1_100019f4, i32* %r22.global-to-local, align 4
  %v0_100019f8 = call i32 @__asm_mfcr()
  store i32 %v0_100019f8, i32* %r3.global-to-local, align 4
  %v1_100019fc = mul i32 %v0_100019f8, 268435456
  store i32 %v1_100019fc, i32* %r20.global-to-local, align 4
  %v2_10001a90 = ptrtoint i32* %stack_var_-100 to i32
  %v2_10001ab4 = ptrtoint i32* %stack_var_-92 to i32
  %v2_10001ac4 = ptrtoint i32* %stack_var_-90 to i32
  %v0_10001a00.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001a00.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001a00.outer

dec_label_pc_10001a00.outer:                      ; preds = %dec_label_pc_10001b64, %dec_label_pc_100019e0
  %v1_10001a00.ph = phi i1 [ %v1_10001a00.pre, %dec_label_pc_100019e0 ], [ %v1_10001b64, %dec_label_pc_10001b64 ]
  %v0_10001a00.ph = phi i1 [ %v0_10001a00.pre, %dec_label_pc_100019e0 ], [ %v0_10001b64, %dec_label_pc_10001b64 ]
  %v2_10001a00 = or i1 %v1_10001a00.ph, %v0_10001a00.ph
  br label %dec_label_pc_10001a00

dec_label_pc_10001a00:                            ; preds = %dec_label_pc_10001a00.outer, %dec_label_pc_10001a00
  br i1 %v2_10001a00, label %dec_label_pc_10001a00, label %dec_label_pc_10001a04

dec_label_pc_10001a04:                            ; preds = %dec_label_pc_10001a00, %dec_label_pc_10001b64
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10001a14

dec_label_pc_10001a14:                            ; preds = %dec_label_pc_10001ad4, %dec_label_pc_10001a04
  %v0_10001a14 = phi i32 [ %v1_10001b54, %dec_label_pc_10001ad4 ], [ 0, %dec_label_pc_10001a04 ]
  %v1_10001a14 = mul i32 %v0_10001a14, 24
  store i32 %v1_10001a14, i32* %r0.global-to-local, align 4
  %v1_10001a18 = mul i32 %v0_10001a14, 4
  store i32 %v1_10001a18, i32* %r11.global-to-local, align 4
  %v1_10001a1c = load i32, i32* %r19.global-to-local, align 4
  %v2_10001a1c = add i32 %v1_10001a1c, %v1_10001a18
  %v3_10001a1c = inttoptr i32 %v2_10001a1c to i32*
  %v4_10001a1c = load i32, i32* %v3_10001a1c, align 4
  store i32 %v4_10001a1c, i32* %r28.global-to-local, align 4
  %v1_10001a20 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001a20 = add i32 %v1_10001a20, %v1_10001a14
  %v1_10001a24 = add i32 %v2_10001a20, 20
  %v2_10001a24 = inttoptr i32 %v1_10001a24 to i8*
  %v3_10001a24 = load i8, i8* %v2_10001a24, align 1
  %v4_10001a24 = zext i8 %v3_10001a24 to i32
  store i32 %v4_10001a24, i32* %r9.global-to-local, align 4
  %v1_10001a28 = add i32 %v4_10001a1c, 24
  store i32 %v1_10001a28, i32* @r30, align 4
  %v1_10001a2c = add i32 %v4_10001a1c, 38
  store i32 %v1_10001a2c, i32* @r31, align 4
  %v1_10001a30 = add i32 %v4_10001a1c, 58
  store i32 %v1_10001a30, i32* %r27.global-to-local, align 4
  %v3_10001a34 = icmp eq i8 %v3_10001a24, 31
  store i1 %v3_10001a34, i1* %cr7_eq.global-to-local, align 1
  %tmp39 = icmp ult i8 %v3_10001a24, 32
  br i1 %tmp39, label %dec_label_pc_10001b6c, label %dec_label_pc_10001a3c

dec_label_pc_10001a3c:                            ; preds = %dec_label_pc_10001a14
  %v0_10001a3c = load i32, i32* %r20.global-to-local, align 4
  %v1_10001a3c = mul i32 %v0_10001a3c, 16
  %v2_10001a3c = udiv i32 %v0_10001a3c, 268435456
  %v3_10001a3c = or i32 %v2_10001a3c, %v1_10001a3c
  store i32 %v3_10001a3c, i32* %r20.global-to-local, align 4
  %v1_10001a40 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001a3c)
  %v1_10001a44 = mul nuw i32 %v2_10001a3c, 268435456
  %v2_10001a44 = urem i32 %v0_10001a3c, 268435456
  %v3_10001a44 = or i32 %v1_10001a44, %v2_10001a44
  store i32 %v3_10001a44, i32* %r20.global-to-local, align 4
  %v0_10001a48 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001a48, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001a4c:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 65535, i32* @r29, align 4
  %v0_10001a54 = load i32, i32* %r24.global-to-local, align 4
  %v4_10001a54 = icmp eq i32 %v0_10001a54, 65535
  store i1 %v4_10001a54, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a54, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001a5c:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v1_10001a5c = phi i32 [ %v1_10001bb0, %dec_label_pc_10001ba0 ], [ 65535, %dec_label_pc_10001a4c ]
  %v0_10001a5c = load i32, i32* %r16.global-to-local, align 4
  %v4_10001a5c = icmp eq i32 %v0_10001a5c, %v1_10001a5c
  store i1 %v4_10001a5c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a5c, label %dec_label_pc_10001bd8, label %dec_label_pc_10001a64

dec_label_pc_10001a64:                            ; preds = %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge, %dec_label_pc_10001a5c
  %v1_10001a64 = phi i32 [ %v1_10001a64.pre, %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge ], [ %v1_10001a5c, %dec_label_pc_10001a5c ]
  %v0_10001a64 = load i32, i32* %r17.global-to-local, align 4
  %v4_10001a64 = icmp eq i32 %v0_10001a64, %v1_10001a64
  store i1 %v4_10001a64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001a64, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001a6c:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001a6c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001a6c, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001a70:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001a70 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001a70 = add i32 %v0_10001a70, 16
  %v2_10001a70 = inttoptr i32 %v1_10001a70 to i32*
  %v3_10001a70 = load i32, i32* %v2_10001a70, align 4
  store i32 %v3_10001a70, i32* %r0.global-to-local, align 4
  %v1_10001a74 = load i32, i32* @r31, align 4
  %v2_10001a74 = add i32 %v1_10001a74, 16
  %v3_10001a74 = inttoptr i32 %v2_10001a74 to i32*
  store i32 %v3_10001a70, i32* %v3_10001a74, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001a78:                            ; preds = %dec_label_pc_10001bf4, %dec_label_pc_10001a70
  %v0_10001a78 = call i32 @function_10005b48()
  store i32 %v0_10001a78, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a78, i32* %stack_var_-100, align 4
  %v0_10001a80 = call i32 @function_10005b48()
  store i32 %v0_10001a80, i32* %r3.global-to-local, align 4
  store i32 %v0_10001a80, i32* %stack_var_-96, align 4
  %v0_10001a88 = call i32 @function_10005b48()
  store i32 %v0_10001a88, i32* %stack_var_-92, align 4
  %v0_10001a94 = load i32, i32* @r30, align 4
  store i32 %v0_10001a94, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001aa0.17 to i32), i32* @lr, align 4
  %v3_10001a9c = call i32 @function_10008e20(i32 %v0_10001a94, i32 %v2_10001a90, i32 4)
  %v0_10001aa0 = load i32, i32* @r30, align 4
  %v1_10001aa0 = add i32 %v0_10001aa0, 6
  store i32 %v1_10001aa0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ab0.18 to i32), i32* @lr, align 4
  %v3_10001aac = call i32 @function_10008e20(i32 %v1_10001aa0, i32 %v2_100019e8, i32 4)
  %v0_10001ab0 = load i32, i32* @r30, align 4
  %v1_10001ab0 = add i32 %v0_10001ab0, 4
  store i32 %v1_10001ab0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10001ac0.19 to i32), i32* @lr, align 4
  %v3_10001abc = call i32 @function_10008e20(i32 %v1_10001ab0, i32 %v2_10001ab4, i32 2)
  %v0_10001ac0 = load i32, i32* @r30, align 4
  %v1_10001ac0 = add i32 %v0_10001ac0, 10
  store i32 %v1_10001ac0, i32* %r3.global-to-local, align 4
  store i32 268442320, i32* @lr, align 4
  %v3_10001acc = call i32 @function_10008e20(i32 %v1_10001ac0, i32 %v2_10001ac4, i32 2)
  store i32 %v3_10001acc, i32* %r3.global-to-local, align 4
  %v0_10001ad0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ad0, label %dec_label_pc_10001ad4, label %dec_label_pc_10001c00

dec_label_pc_10001ad4:                            ; preds = %dec_label_pc_10001a78, %dec_label_pc_10001c00
  %v0_10001ad4 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001ad4 = trunc i32 %v0_10001ad4 to i16
  %v2_10001ad4 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001ad4 = add i32 %v2_10001ad4, 10
  %v4_10001ad4 = inttoptr i32 %v3_10001ad4 to i16*
  store i16 %v1_10001ad4, i16* %v4_10001ad4, align 2
  %v0_10001adc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10001adc, i32* @r3, align 4
  %v2_10001ae0 = call i32 @function_100043cc(i32 %v0_10001adc, i32 20)
  %v3_10001ae0 = trunc i32 %v2_10001ae0 to i16
  %v4_10001ae8 = add i32 %v0_10001adc, 10
  %v5_10001ae8 = inttoptr i32 %v4_10001ae8 to i16*
  store i16 %v3_10001ae0, i16* %v5_10001ae8, align 2
  %v0_10001aec = load i32, i32* @r31, align 4
  store i32 %v0_10001aec, i32* @r3, align 4
  %v0_10001af0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001af0 = trunc i32 %v0_10001af0 to i16
  %v3_10001af0 = add i32 %v0_10001aec, 10
  %v4_10001af0 = inttoptr i32 %v3_10001af0 to i16*
  store i16 %v1_10001af0, i16* %v4_10001af0, align 2
  %v2_10001af4 = call i32 @function_100043cc(i32 %v0_10001aec, i32 20)
  %v3_10001af4 = trunc i32 %v2_10001af4 to i16
  %v0_10001af8 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10001af8, i32* @r4, align 4
  %v3_10001afc = load i32, i32* @r31, align 4
  %v4_10001afc = add i32 %v3_10001afc, 10
  %v5_10001afc = inttoptr i32 %v4_10001afc to i16*
  store i16 %v3_10001af4, i16* %v5_10001afc, align 2
  %v0_10001b00 = load i32, i32* %r21.global-to-local, align 4
  %v0_10001b04 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b04 = trunc i32 %v0_10001b04 to i16
  %v2_10001b04 = load i32, i32* %r27.global-to-local, align 4
  %v3_10001b04 = add i32 %v2_10001b04, 6
  %v4_10001b04 = inttoptr i32 %v3_10001b04 to i16*
  store i16 %v1_10001b04, i16* %v4_10001b04, align 2
  %v0_10001b08 = load i32, i32* @r31, align 4
  store i32 %v0_10001b08, i32* %r3.global-to-local, align 4
  %v0_10001b0c = load i32, i32* %r27.global-to-local, align 4
  %v1_10001b0c = add i32 %v0_10001b0c, 4
  %v2_10001b0c = inttoptr i32 %v1_10001b0c to i16*
  %v3_10001b0c = load i16, i16* %v2_10001b0c, align 2
  %v4_10001b0c = zext i16 %v3_10001b0c to i32
  %v4_10001b10 = call i32 @function_10004430(i32 %v0_10001b08, i32 %v0_10001af8, i32 %v4_10001b0c, i32 %v0_10001b00)
  %v5_10001b10 = trunc i32 %v4_10001b10 to i16
  store i32 %v4_10001b10, i32* %r3.global-to-local, align 4
  %v3_10001b14 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b14, i32* %r0.global-to-local, align 4
  %v0_10001b18 = load i32, i32* %r28.global-to-local, align 4
  %v1_10001b18 = add i32 %v0_10001b18, 16
  %v2_10001b18 = inttoptr i32 %v1_10001b18 to i32*
  %v3_10001b18 = load i32, i32* %v2_10001b18, align 4
  store i32 %v3_10001b18, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10001b20 = mul i32 %v3_10001b14, 24
  store i32 %v1_10001b20, i32* %r0.global-to-local, align 4
  %v3_10001b24 = load i32, i32* %r27.global-to-local, align 4
  %v4_10001b24 = add i32 %v3_10001b24, 6
  %v5_10001b24 = inttoptr i32 %v4_10001b24 to i16*
  store i16 %v5_10001b10, i16* %v5_10001b24, align 2
  %v0_10001b28 = load i32, i32* %r28.global-to-local, align 4
  %v0_10001b2c = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001b2c, i32* %r3.global-to-local, align 4
  %v0_10001b30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001b30 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b30 = add i32 %v1_10001b30, %v0_10001b30
  %v0_10001b34 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001b34 = trunc i32 %v0_10001b34 to i16
  %v5_10001b34 = inttoptr i32 %v2_10001b30 to i16*
  store i16 %v3_10001b34, i16* %v5_10001b34, align 2
  %v0_10001b38 = load i32, i32* %r11.global-to-local, align 4
  %v2_10001b38 = add i32 %v2_10001b30, 4
  %v3_10001b38 = inttoptr i32 %v2_10001b38 to i32*
  store i32 %v0_10001b38, i32* %v3_10001b38, align 4
  %v0_10001b3c = load i32, i32* %r22.global-to-local, align 4
  %v0_10001b40 = load i32, i32* %r26.global-to-local, align 4
  %v1_10001b40 = trunc i32 %v0_10001b40 to i16
  %v3_10001b40 = add i32 %v2_10001b30, 2
  %v4_10001b40 = inttoptr i32 %v3_10001b40 to i16*
  store i16 %v1_10001b40, i16* %v4_10001b40, align 2
  store i32 268442448, i32* @lr, align 4
  %v6_10001b4c = call i32 @function_1000a1fc(i32 %v0_10001b2c, i32 %v0_10001b28, i32 %v0_10001b3c, i32 16384, i32 %v2_10001b30, i32 16)
  store i32 %v6_10001b4c, i32* %r3.global-to-local, align 4
  %v3_10001b50 = load i32, i32* %stack_var_-104, align 4
  %v1_10001b54 = add i32 %v3_10001b50, 1
  store i32 %v1_10001b54, i32* %r9.global-to-local, align 4
  %v1_10001b58 = load i32, i32* %r18.global-to-local, align 4
  %v2_10001b58 = icmp slt i32 %v1_10001b54, %v1_10001b58
  %v4_10001b58 = icmp eq i32 %v1_10001b54, %v1_10001b58
  store i1 %v4_10001b58, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10001b54, i32* %stack_var_-104, align 4
  br i1 %v2_10001b58, label %dec_label_pc_10001a14, label %dec_label_pc_10001b64

dec_label_pc_10001b64:                            ; preds = %dec_label_pc_10001ad4
  %v0_10001b64 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001b64 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10001b64 = or i1 %v0_10001b64, %v1_10001b64
  br i1 %v2_10001b64, label %dec_label_pc_10001a00.outer, label %dec_label_pc_10001a04

dec_label_pc_10001b6c:                            ; preds = %dec_label_pc_10001a14
  %v1_10001b6c = add i32 %v2_10001a20, 16
  %v2_10001b6c = inttoptr i32 %v1_10001b6c to i32*
  %v3_10001b6c = load i32, i32* %v2_10001b6c, align 4
  store i32 %v3_10001b6c, i32* %r29.global-to-local, align 4
  %v0_10001b70 = call i32 @function_10005b48()
  store i32 %v0_10001b70, i32* %r3.global-to-local, align 4
  %v3_10001b74 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001b74, i32* %r9.global-to-local, align 4
  %v0_10001b78 = load i32, i32* %r20.global-to-local, align 4
  %v1_10001b78 = mul i32 %v0_10001b78, 16
  %v2_10001b78 = udiv i32 %v0_10001b78, 268435456
  %v3_10001b78 = or i32 %v2_10001b78, %v1_10001b78
  store i32 %v3_10001b78, i32* %r20.global-to-local, align 4
  %v1_10001b7c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001b78)
  %v1_10001b80 = mul nuw i32 %v2_10001b78, 268435456
  %v2_10001b80 = urem i32 %v0_10001b78, 268435456
  %v3_10001b80 = or i32 %v1_10001b80, %v2_10001b80
  store i32 %v3_10001b80, i32* %r20.global-to-local, align 4
  %v0_10001b84 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001b84 = mul i32 %v0_10001b84, 24
  %v1_10001b88 = load i32, i32* %r25.global-to-local, align 4
  %v2_10001b88 = add i32 %v1_10001b88, %v1_10001b84
  store i32 %v2_10001b88, i32* %r9.global-to-local, align 4
  %v1_10001b8c = add i32 %v2_10001b88, 20
  %v2_10001b8c = inttoptr i32 %v1_10001b8c to i8*
  %v3_10001b8c = load i8, i8* %v2_10001b8c, align 1
  %v4_10001b8c = zext i8 %v3_10001b8c to i32
  store i32 %v4_10001b8c, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10001b8c, 64
  %v2_10001b90 = zext i8 %tmp to i32
  %v3_10001b90 = lshr i32 %v0_10001b70, %v2_10001b90
  store i32 %v3_10001b90, i32* %r3.global-to-local, align 4
  %v0_10001b94 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001b94 = add i32 %v3_10001b90, %v0_10001b94
  store i32 %v2_10001b94, i32* %r29.global-to-local, align 4
  %v1_10001b98 = load i32, i32* %r28.global-to-local, align 4
  %v2_10001b98 = add i32 %v1_10001b98, 16
  %v3_10001b98 = inttoptr i32 %v2_10001b98 to i32*
  store i32 %v2_10001b94, i32* %v3_10001b98, align 4
  %v0_10001b9c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001b9c, label %dec_label_pc_10001ba0, label %dec_label_pc_10001a4c

dec_label_pc_10001ba0:                            ; preds = %dec_label_pc_10001b6c, %dec_label_pc_10001a3c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10001ba4 = call i32 @function_10005b48()
  store i32 %v0_10001ba4, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10001bac = load i32, i32* %r28.global-to-local, align 4
  %v2_10001bac = add i32 %v1_10001bac, 12
  %v3_10001bac = inttoptr i32 %v2_10001bac to i32*
  store i32 %v0_10001ba4, i32* %v3_10001bac, align 4
  %v0_10001bb0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001bb0 = load i32, i32* @r29, align 4
  %v4_10001bb0 = icmp eq i32 %v0_10001bb0, %v1_10001bb0
  store i1 %v4_10001bb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10001bb0, label %dec_label_pc_10001bb8, label %dec_label_pc_10001a5c

dec_label_pc_10001bb8:                            ; preds = %dec_label_pc_10001ba0, %dec_label_pc_10001a4c
  %v0_10001bb8 = call i32 @function_10005b48()
  %v0_10001bbc = load i32, i32* %r16.global-to-local, align 4
  %v1_10001bbc = load i32, i32* @r29, align 4
  %v4_10001bbc = icmp eq i32 %v0_10001bbc, %v1_10001bbc
  store i1 %v4_10001bbc, i1* %cr7_eq.global-to-local, align 1
  %v1_10001bc0 = urem i32 %v0_10001bb8, 65536
  store i32 %v1_10001bc0, i32* %r3.global-to-local, align 4
  %v1_10001bc4 = add nsw i32 %v1_10001bc0, -1000
  store i32 %v1_10001bc4, i32* %r0.global-to-local, align 4
  %v1_10001bc8 = trunc i32 %v0_10001bb8 to i16
  %v2_10001bc8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10001bc8 = add i32 %v2_10001bc8, 4
  %v4_10001bc8 = inttoptr i32 %v3_10001bc8 to i16*
  store i16 %v1_10001bc8, i16* %v4_10001bc8, align 2
  %v0_10001bcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10001bcc = sub i32 -1, %v0_10001bcc
  store i32 %v1_10001bcc, i32* %r0.global-to-local, align 4
  %v1_10001bd0 = trunc i32 %v1_10001bcc to i16
  %v2_10001bd0 = load i32, i32* @r31, align 4
  %v3_10001bd0 = add i32 %v2_10001bd0, 4
  %v4_10001bd0 = inttoptr i32 %v3_10001bd0 to i16*
  store i16 %v1_10001bd0, i16* %v4_10001bd0, align 2
  br i1 %v4_10001bbc, label %dec_label_pc_10001bd8, label %dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge

dec_label_pc_10001bb8.dec_label_pc_10001a64_crit_edge: ; preds = %dec_label_pc_10001bb8
  %v1_10001a64.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10001a64

dec_label_pc_10001bd8:                            ; preds = %dec_label_pc_10001bb8, %dec_label_pc_10001a5c
  %v0_10001bd8 = call i32 @function_10005b48()
  %v1_10001bd8 = trunc i32 %v0_10001bd8 to i16
  store i32 %v0_10001bd8, i32* %r3.global-to-local, align 4
  %v0_10001bdc = load i32, i32* %r17.global-to-local, align 4
  %v1_10001bdc = load i32, i32* @r29, align 4
  %v4_10001bdc = icmp eq i32 %v0_10001bdc, %v1_10001bdc
  store i1 %v4_10001bdc, i1* %cr7_eq.global-to-local, align 1
  %v3_10001be0 = load i32, i32* %r28.global-to-local, align 4
  %v4_10001be0 = add i32 %v3_10001be0, 58
  %v5_10001be0 = inttoptr i32 %v4_10001be0 to i16*
  store i16 %v1_10001bd8, i16* %v5_10001be0, align 2
  br i1 %v4_10001bdc, label %dec_label_pc_10001be8, label %dec_label_pc_10001a6c

dec_label_pc_10001be8:                            ; preds = %dec_label_pc_10001bd8, %dec_label_pc_10001a64
  %v0_10001be8 = call i32 @function_10005b48()
  %v1_10001be8 = trunc i32 %v0_10001be8 to i16
  store i32 %v0_10001be8, i32* %r3.global-to-local, align 4
  %v3_10001bec = load i32, i32* %r27.global-to-local, align 4
  %v4_10001bec = add i32 %v3_10001bec, 2
  %v5_10001bec = inttoptr i32 %v4_10001bec to i16*
  store i16 %v1_10001be8, i16* %v5_10001bec, align 2
  %v0_10001bf0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001bf0, label %dec_label_pc_10001bf4, label %dec_label_pc_10001a70

dec_label_pc_10001bf4:                            ; preds = %dec_label_pc_10001be8, %dec_label_pc_10001a6c
  %v0_10001bf4 = call i32 @function_10005b48()
  store i32 %v0_10001bf4, i32* %r3.global-to-local, align 4
  %v1_10001bf8 = load i32, i32* @r31, align 4
  %v2_10001bf8 = add i32 %v1_10001bf8, 16
  %v3_10001bf8 = inttoptr i32 %v2_10001bf8 to i32*
  store i32 %v0_10001bf4, i32* %v3_10001bf8, align 4
  br label %dec_label_pc_10001a78

dec_label_pc_10001c00:                            ; preds = %dec_label_pc_10001a78
  %v0_10001c00 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001c00 = add i32 %v0_10001c00, 8
  store i32 %v1_10001c00, i32* @r3, align 4
  %v0_10001c04 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10001c04, i32* @r4, align 4
  %v0_10001c08 = call i32 @function_10005d1c()
  store i32 %v0_10001c08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001ad4

; uselistorder directives
  uselistorder i32 %v0_10001be8, { 1, 0 }
  uselistorder i32 %v0_10001bd8, { 1, 0 }
  uselistorder i32 %v1_10001bcc, { 1, 0 }
  uselistorder i32 %v1_10001bc0, { 1, 0 }
  uselistorder i32 %v0_10001bb8, { 1, 0 }
  uselistorder i32 %v1_10001bb0, { 1, 0 }
  uselistorder i32 %v0_10001b78, { 2, 1, 0 }
  uselistorder i1 %v1_10001b64, { 1, 0 }
  uselistorder i1 %v0_10001b64, { 1, 0 }
  uselistorder i32 %v1_10001b54, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10001b30, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10001b10, { 1, 0 }
  uselistorder i32 %v0_10001a3c, { 2, 1, 0 }
  uselistorder i32 %v4_10001a1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10001a18, { 1, 0 }
  uselistorder i32 %v1_10001964, { 1, 0 }
  uselistorder i32 %v1_100018a0, { 1, 0 }
  uselistorder i32 %v1_10001894, { 1, 0 }
  uselistorder i32 %v1_10001830, { 1, 0 }
  uselistorder i32 %v0_10001830, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001820, { 1, 2, 0 }
  uselistorder i32 %v0_10001814, { 1, 0 }
  uselistorder i32 %v5_100017c0, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 29, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r27.global-to-local, { 5, 0, 1, 2, 3, 4, 6, 7, 8, 9, 10 }
  uselistorder i32* %r20.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 23, 24, 12, 26, 27, 28, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10001ad4, { 1, 0 }
  uselistorder label %dec_label_pc_10001a04, { 1, 0 }
  uselistorder label %dec_label_pc_10001a00, { 1, 0 }
  uselistorder label %dec_label_pc_100019e0, { 1, 0 }
  uselistorder label %dec_label_pc_1000197c, { 1, 0 }
  uselistorder label %dec_label_pc_10001950, { 1, 0 }
  uselistorder label %dec_label_pc_100018e8, { 1, 0 }
}

define i32 @function_10001c10(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10001c10:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_10001c14 = load i32, i32* @lr, align 4
  store i32 %v0_10001c14, i32* %r0.global-to-local, align 4
  %v0_10001c18 = call i32 @__asm_mfcr()
  store i32 %v0_10001c18, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  %v0_10001c28 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10001c18, i32* %r19.global-to-local, align 4
  %v0_10001c5c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10001c64 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10001c6c = load i32, i32* @r30, align 4
  %v0_10001c70 = load i32, i32* @r31, align 4
  store i32 268442756, i32* @lr, align 4
  %v2_10001c80 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_10001c80, i32* %r20.global-to-local, align 4
  %v0_10001c88 = load i32, i32* @r28, align 4
  %v0_10001c94 = load i32, i32* @r29, align 4
  store i32 %v0_10001c94, i32* %r3.global-to-local, align 4
  store i32 268442780, i32* @lr, align 4
  %v4_10001c98 = inttoptr i32 %v0_10001c88 to i32*
  %v5_10001c98 = call i32 @function_100006a8(i32 %v0_10001c94, i32* %v4_10001c98, i32 2, i32 0)
  %v0_10001ca8 = load i32, i32* @r28, align 4
  %v1_10001cac = urem i32 %v5_10001c98, 256
  store i32 %v1_10001cac, i32* %r14.global-to-local, align 4
  %v0_10001cb0 = load i32, i32* @r29, align 4
  store i32 %v0_10001cb0, i32* %r3.global-to-local, align 4
  store i32 268442808, i32* @lr, align 4
  %v4_10001cb4 = inttoptr i32 %v0_10001ca8 to i32*
  %v5_10001cb4 = call i32 @function_100006a8(i32 %v0_10001cb0, i32* %v4_10001cb4, i32 3, i32 65535)
  %v0_10001cb8 = load i32, i32* @r28, align 4
  store i32 %v5_10001cb4, i32* %r25.global-to-local, align 4
  %v0_10001cc8 = load i32, i32* @r29, align 4
  store i32 %v0_10001cc8, i32* %r3.global-to-local, align 4
  store i32 268442832, i32* @lr, align 4
  %v4_10001ccc = inttoptr i32 %v0_10001cb8 to i32*
  %v5_10001ccc = call i32 @function_100006a8(i32 %v0_10001cc8, i32* %v4_10001ccc, i32 4, i32 64)
  %v0_10001cd0 = load i32, i32* @r28, align 4
  %v1_10001cdc = urem i32 %v5_10001ccc, 256
  store i32 %v1_10001cdc, i32* %r21.global-to-local, align 4
  %v0_10001ce0 = load i32, i32* @r29, align 4
  store i32 %v0_10001ce0, i32* %r3.global-to-local, align 4
  store i32 268442856, i32* @lr, align 4
  %v4_10001ce4 = inttoptr i32 %v0_10001cd0 to i32*
  %v5_10001ce4 = call i32 @function_100006a8(i32 %v0_10001ce0, i32* %v4_10001ce4, i32 5, i32 1)
  %v0_10001cf4 = load i32, i32* @r28, align 4
  %v1_10001cf8 = urem i32 %v5_10001ce4, 256
  store i32 %v1_10001cf8, i32* @r31, align 4
  %v0_10001cfc = load i32, i32* @r29, align 4
  store i32 %v0_10001cfc, i32* %r3.global-to-local, align 4
  store i32 268442884, i32* @lr, align 4
  %v4_10001d00 = inttoptr i32 %v0_10001cf4 to i32*
  %v5_10001d00 = call i32 @function_100006a8(i32 %v0_10001cfc, i32* %v4_10001d00, i32 6, i32 65535)
  %v0_10001d08 = load i32, i32* @r28, align 4
  store i32 %v5_10001d00, i32* %r24.global-to-local, align 4
  %v0_10001d18 = load i32, i32* @r29, align 4
  store i32 %v0_10001d18, i32* %r3.global-to-local, align 4
  store i32 268442912, i32* @lr, align 4
  %v4_10001d1c = inttoptr i32 %v0_10001d08 to i32*
  %v5_10001d1c = call i32 @function_100006a8(i32 %v0_10001d18, i32* %v4_10001d1c, i32 7, i32 65535)
  %v0_10001d20 = load i32, i32* @r28, align 4
  store i32 %v5_10001d1c, i32* %r27.global-to-local, align 4
  %v0_10001d30 = load i32, i32* @r29, align 4
  store i32 %v0_10001d30, i32* %r3.global-to-local, align 4
  store i32 268442936, i32* @lr, align 4
  %v4_10001d34 = inttoptr i32 %v0_10001d20 to i32*
  %v5_10001d34 = call i32 @function_100006a8(i32 %v0_10001d30, i32* %v4_10001d34, i32 0, i32 512)
  %v0_10001d38 = load i32, i32* @r28, align 4
  store i32 %v5_10001d34, i32* %r16.global-to-local, align 4
  %v0_10001d48 = load i32, i32* @r29, align 4
  store i32 %v0_10001d48, i32* %r3.global-to-local, align 4
  store i32 268442960, i32* @lr, align 4
  %v4_10001d4c = inttoptr i32 %v0_10001d38 to i32*
  %v5_10001d4c = call i32 @function_100006a8(i32 %v0_10001d48, i32* %v4_10001d4c, i32 1, i32 1)
  %v0_10001d50 = load i32, i32* @r28, align 4
  %v1_10001d5c = urem i32 %v5_10001d4c, 256
  store i32 %v1_10001d5c, i32* %r15.global-to-local, align 4
  %v0_10001d60 = load i32, i32* @r29, align 4
  store i32 %v0_10001d60, i32* %r3.global-to-local, align 4
  store i32 268442984, i32* @lr, align 4
  %v4_10001d64 = inttoptr i32 %v0_10001d50 to i32*
  %v5_10001d64 = call i32 @function_100006a8(i32 %v0_10001d60, i32* %v4_10001d64, i32 19, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10001d6c = load i32, i32* @global_var_1001c6a0.16, align 4
  %v0_10001d70 = load i32, i32* @r28, align 4
  store i32 %v5_10001d64, i32* %r30.global-to-local, align 4
  %v0_10001d7c = load i32, i32* @r29, align 4
  store i32 %v0_10001d7c, i32* %r3.global-to-local, align 4
  store i32 268443012, i32* @lr, align 4
  %v4_10001d80 = inttoptr i32 %v0_10001d70 to i32*
  %v5_10001d80 = call i32 @function_100006a8(i32 %v0_10001d7c, i32* %v4_10001d80, i32 25, i32 %v3_10001d6c)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268443032, i32* @lr, align 4
  %v3_10001d94 = call i32 @function_1000a278(i32 2, i32 3, i32 6)
  store i32 %v3_10001d94, i32* %r3.global-to-local, align 4
  %v3_10001d98 = icmp eq i32 %v3_10001d94, -1
  store i1 %v3_10001d98, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10001d94, i32* %r23.global-to-local, align 4
  br i1 %v3_10001d98, label %dec_label_pc_10001f30, label %dec_label_pc_10001da4

dec_label_pc_10001da4:                            ; preds = %dec_label_pc_10001c10
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10001db0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268443072, i32* @lr, align 4
  %v4_10001dbc = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_10001db0, i32 4)
  store i32 %v4_10001dbc, i32* %r3.global-to-local, align 4
  %v3_10001dc0 = icmp eq i32 %v4_10001dbc, -1
  store i1 %v3_10001dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10001dc0, label %dec_label_pc_10001f28, label %dec_label_pc_10001dc8

dec_label_pc_10001dc8:                            ; preds = %dec_label_pc_10001da4
  %v0_10001dc8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10001dc8 = icmp slt i32 %v0_10001dc8, 0
  %v3_10001dc8 = icmp eq i32 %v0_10001dc8, 0
  store i1 %v1_10001dc8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10001dc8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  %v0_10001dd4 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001dd4 = urem i32 %v0_10001dd4, 65536
  store i32 %v1_10001dd4, i32* %r25.global-to-local, align 4
  %v0_10001dd8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10001dd8 = urem i32 %v0_10001dd8, 65536
  store i32 %v1_10001dd8, i32* %r17.global-to-local, align 4
  %v0_10001ddc = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ddc = urem i32 %v0_10001ddc, 65536
  store i32 %v1_10001ddc, i32* %r18.global-to-local, align 4
  %v0_10001de0 = load i32, i32* %r30.global-to-local, align 4
  %v1_10001de0 = urem i32 %v0_10001de0, 256
  store i32 %v1_10001de0, i32* %r3.global-to-local, align 4
  %tmp33 = icmp slt i32 %v0_10001dc8, 1
  br i1 %tmp33, label %dec_label_pc_10001f90, label %dec_label_pc_10001de8

dec_label_pc_10001de8:                            ; preds = %dec_label_pc_10001dc8
  %v0_10001de8 = load i32, i32* @r31, align 4
  %v3_10001de8 = icmp eq i32 %v0_10001de8, 0
  store i1 %v3_10001de8, i1* %cr2_eq.global-to-local, align 1
  %v3_10001dec = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001dec, i1* %cr3_eq.global-to-local, align 1
  %v0_10001df0 = load i32, i32* %r16.global-to-local, align 4
  %v1_10001df0 = urem i32 %v0_10001df0, 65536
  %v0_10001dd4.not = or i32 %v0_10001dd4, -65536
  %v1_10001df4 = xor i32 %v0_10001dd4.not, 65535
  store i32 %v1_10001df4, i32* %r11.global-to-local, align 4
  %v1_10001dfc = add nuw nsw i32 %v1_10001df0, 52
  store i32 %v1_10001dfc, i32* %r0.global-to-local, align 4
  %v1_10001e00 = add nuw nsw i32 %v1_10001df0, 28
  store i32 %v1_10001e00, i32* %r9.global-to-local, align 4
  %fold = add i32 %v0_10001df0, 52
  %v1_10001e04 = urem i32 %fold, 65536
  store i32 %v1_10001e04, i32* %r22.global-to-local, align 4
  %fold8 = add i32 %v0_10001df0, 28
  %v1_10001e08 = urem i32 %fold8, 65536
  store i32 %v1_10001e08, i32* %r24.global-to-local, align 4
  %v1_10001e0c = urem i32 %v1_10001df4, 65536
  store i32 %v1_10001e0c, i32* %r27.global-to-local, align 4
  %fold9 = add i32 %v0_10001df0, 8
  %v1_10001e10 = urem i32 %fold9, 65536
  store i32 %v1_10001e10, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10001e44

dec_label_pc_10001e1c:                            ; preds = %dec_label_pc_10001f04
  %v0_10001e1c = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e1c = add i32 %v0_10001e1c, 16
  %v2_10001e1c = inttoptr i32 %v1_10001e1c to i32*
  %v3_10001e1c = load i32, i32* %v2_10001e1c, align 4
  store i32 %v3_10001e1c, i32* %r0.global-to-local, align 4
  %v1_10001e20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001e20 = add i32 %v1_10001e20, 16
  %v3_10001e20 = inttoptr i32 %v2_10001e20 to i32*
  store i32 %v3_10001e1c, i32* %v3_10001e20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001f20, %dec_label_pc_10001e1c
  %v3_10001e24 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e24, i32* %r9.global-to-local, align 4
  %v0_10001e28 = load i32, i32* @r28, align 4
  %v1_10001e28 = trunc i32 %v0_10001e28 to i16
  %v2_10001e28 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e28 = add i32 %v2_10001e28, 4
  %v4_10001e28 = inttoptr i32 %v3_10001e28 to i16*
  store i16 %v1_10001e28, i16* %v4_10001e28, align 2
  %v0_10001e2c = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e2c = add i32 %v0_10001e2c, 1
  store i32 %v1_10001e2c, i32* %r31.global-to-local, align 4
  %v0_10001e30 = load i32, i32* %r17.global-to-local, align 4
  %v1_10001e30 = trunc i32 %v0_10001e30 to i16
  %v2_10001e30 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e30 = inttoptr i32 %v2_10001e30 to i16*
  store i16 %v1_10001e30, i16* %v3_10001e30, align 2
  %v0_10001e34 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e34 = load i32, i32* %r19.global-to-local, align 4
  %v2_10001e34 = icmp slt i32 %v0_10001e34, %v1_10001e34
  %v4_10001e34 = icmp eq i32 %v0_10001e34, %v1_10001e34
  store i1 %v4_10001e34, i1* %cr7_eq.global-to-local, align 1
  %v0_10001e38 = load i32, i32* %r18.global-to-local, align 4
  %v1_10001e38 = trunc i32 %v0_10001e38 to i16
  %v2_10001e38 = load i32, i32* %r29.global-to-local, align 4
  %v3_10001e38 = add i32 %v2_10001e38, 2
  %v4_10001e38 = inttoptr i32 %v3_10001e38 to i16*
  store i16 %v1_10001e38, i16* %v4_10001e38, align 2
  %v0_10001e3c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10001e3c, i32* %stack_var_-104, align 4
  br i1 %v2_10001e34, label %dec_label_pc_10001e44, label %dec_label_pc_10001f94

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001de8
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268443216, i32* @lr, align 4
  %v2_10001e4c = call i32 @function_1000a5d4(i32 1510, i32 4)
  store i32 %v2_10001e4c, i32* %r3.global-to-local, align 4
  %v3_10001e50 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10001e50, i32* %r9.global-to-local, align 4
  %v0_10001e54 = load i32, i32* @r31, align 4
  %v1_10001e54 = mul i32 %v0_10001e54, 4
  store i32 %v1_10001e54, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r11.global-to-local, align 4
  %v1_10001e5c = load i32, i32* %r20.global-to-local, align 4
  %v3_10001e5c = add i32 %v1_10001e5c, %v1_10001e54
  %v4_10001e5c = inttoptr i32 %v3_10001e5c to i32*
  store i32 %v2_10001e4c, i32* %v4_10001e5c, align 4
  %v0_10001e60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001e60 = mul i32 %v0_10001e60, 4
  store i32 %v1_10001e60, i32* %r9.global-to-local, align 4
  %v1_10001e64 = load i32, i32* %r20.global-to-local, align 4
  %v2_10001e64 = add i32 %v1_10001e64, %v1_10001e60
  %v3_10001e64 = inttoptr i32 %v2_10001e64 to i32*
  %v4_10001e64 = load i32, i32* %v3_10001e64, align 4
  store i32 %v4_10001e64, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10001e6c = inttoptr i32 %v4_10001e64 to i32*
  %v2_10001e6c = load i32, i32* %v1_10001e6c, align 4
  store i32 %v2_10001e6c, i32* %r0.global-to-local, align 4
  %v1_10001e70 = add i32 %v4_10001e64, 24
  store i32 %v1_10001e70, i32* %r30.global-to-local, align 4
  %v0_10001e74 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001e74 = trunc i32 %v0_10001e74 to i8
  %v3_10001e74 = add i32 %v4_10001e64, 8
  %v4_10001e74 = inttoptr i32 %v3_10001e74 to i8*
  store i8 %v1_10001e74, i8* %v4_10001e74, align 1
  %v0_10001e78 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e78 = add i32 %v0_10001e78, 44
  store i32 %v1_10001e78, i32* %r29.global-to-local, align 4
  %v1_10001e7c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001e7c, i32* %r0.global-to-local, align 4
  %v0_10001e80 = load i32, i32* %r25.global-to-local, align 4
  %v1_10001e80 = trunc i32 %v0_10001e80 to i16
  %v2_10001e80 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e80 = add i32 %v2_10001e80, 4
  %v4_10001e80 = inttoptr i32 %v3_10001e80 to i16*
  store i16 %v1_10001e80, i16* %v4_10001e80, align 2
  %v1_10001e84 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001e84, i32* %r0.global-to-local, align 4
  %v0_10001e88 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001e88 = add i32 %v0_10001e88, 20
  store i32 %v1_10001e88, i32* %r9.global-to-local, align 4
  %v2_10001e8c = inttoptr i32 %v0_10001e88 to i32*
  store i32 %v1_10001e84, i32* %v2_10001e8c, align 4
  %v0_10001e90 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001e90 = trunc i32 %v0_10001e90 to i8
  %v2_10001e90 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e90 = add i32 %v2_10001e90, 1
  %v4_10001e90 = inttoptr i32 %v3_10001e90 to i8*
  store i8 %v1_10001e90, i8* %v4_10001e90, align 1
  %v0_10001e94 = load i32, i32* %r22.global-to-local, align 4
  %v1_10001e94 = trunc i32 %v0_10001e94 to i16
  %v2_10001e94 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001e94 = add i32 %v2_10001e94, 2
  %v4_10001e94 = inttoptr i32 %v3_10001e94 to i16*
  store i16 %v1_10001e94, i16* %v4_10001e94, align 2
  %v0_10001e98 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001e98, label %dec_label_pc_10001ea4, label %dec_label_pc_10001e9c

dec_label_pc_10001e9c:                            ; preds = %dec_label_pc_10001e44
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10001ea0 = load i32, i32* %r31.global-to-local, align 4
  %v3_10001ea0 = add i32 %v2_10001ea0, 6
  %v4_10001ea0 = inttoptr i32 %v3_10001ea0 to i16*
  store i16 16384, i16* %v4_10001ea0, align 2
  br label %dec_label_pc_10001ea4

dec_label_pc_10001ea4:                            ; preds = %dec_label_pc_10001e44, %dec_label_pc_10001e9c
  store i32 2048, i32* %r0.global-to-local, align 4
  %v2_10001eac = load i32, i32* %r31.global-to-local, align 4
  %v3_10001eac = add i32 %v2_10001eac, 9
  %v4_10001eac = inttoptr i32 %v3_10001eac to i8*
  store i8 47, i8* %v4_10001eac, align 1
  %v0_10001eb0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001eb0 = trunc i32 %v0_10001eb0 to i16
  %v2_10001eb0 = load i32, i32* %r9.global-to-local, align 4
  %v3_10001eb0 = add i32 %v2_10001eb0, 2
  %v4_10001eb0 = inttoptr i32 %v3_10001eb0 to i16*
  store i16 %v1_10001eb0, i16* %v4_10001eb0, align 2
  %v3_10001eb4 = load i32, i32* %stack_var_-104, align 4
  store i32 %v5_10001d80, i32* %r11.global-to-local, align 4
  %v1_10001ebc = mul i32 %v3_10001eb4, 24
  store i32 %v1_10001ebc, i32* %r9.global-to-local, align 4
  %v0_10001ec0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10001ec0 = add i32 %v0_10001ec0, 24
  %v2_10001ec0 = inttoptr i32 %v1_10001ec0 to i32*
  %v3_10001ec0 = load i32, i32* %v2_10001ec0, align 4
  store i32 %v3_10001ec0, i32* %r0.global-to-local, align 4
  %v2_10001ec4 = add i32 %v0_10001ec0, 12
  %v3_10001ec4 = inttoptr i32 %v2_10001ec4 to i32*
  store i32 %v5_10001d80, i32* %v3_10001ec4, align 4
  store i32 4, i32* %r11.global-to-local, align 4
  %v0_10001ecc = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ecc = load i32, i32* %r26.global-to-local, align 4
  %v2_10001ecc = add i32 %v1_10001ecc, %v0_10001ecc
  store i32 %v2_10001ecc, i32* %r9.global-to-local, align 4
  %v1_10001ed0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10001ed0, i32* %r0.global-to-local, align 4
  %v0_10001ed4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10001ed4 = add i32 %v0_10001ed4, 16
  %v2_10001ed4 = inttoptr i32 %v1_10001ed4 to i32*
  %v3_10001ed4 = load i32, i32* %v2_10001ed4, align 4
  store i32 %v3_10001ed4, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10001edc = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_10001edc, i32* %r0.global-to-local, align 4
  %v1_10001ee0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee0 = add i32 %v1_10001ee0, 24
  %v3_10001ee0 = inttoptr i32 %v2_10001ee0 to i32*
  store i32 %v1_10001edc, i32* %v3_10001ee0, align 4
  %v0_10001ee4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10001ee4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10001ee4 = add i32 %v1_10001ee4, 16
  %v3_10001ee4 = inttoptr i32 %v2_10001ee4 to i32*
  store i32 %v0_10001ee4, i32* %v3_10001ee4, align 4
  %v0_10001ee8 = load i32, i32* %r14.global-to-local, align 4
  %v1_10001ee8 = trunc i32 %v0_10001ee8 to i8
  %v2_10001ee8 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ee8 = add i32 %v2_10001ee8, 1
  %v4_10001ee8 = inttoptr i32 %v3_10001ee8 to i8*
  store i8 %v1_10001ee8, i8* %v4_10001ee8, align 1
  %v0_10001eec = load i32, i32* %r24.global-to-local, align 4
  %v1_10001eec = trunc i32 %v0_10001eec to i16
  %v2_10001eec = load i32, i32* %r30.global-to-local, align 4
  %v3_10001eec = add i32 %v2_10001eec, 2
  %v4_10001eec = inttoptr i32 %v3_10001eec to i16*
  store i16 %v1_10001eec, i16* %v4_10001eec, align 2
  %v0_10001ef0 = load i32, i32* %r27.global-to-local, align 4
  %v1_10001ef0 = trunc i32 %v0_10001ef0 to i16
  %v2_10001ef0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef0 = add i32 %v2_10001ef0, 4
  %v4_10001ef0 = inttoptr i32 %v3_10001ef0 to i16*
  store i16 %v1_10001ef0, i16* %v4_10001ef0, align 2
  %v0_10001ef4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001ef4 = trunc i32 %v0_10001ef4 to i8
  %v2_10001ef4 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001ef4 = add i32 %v2_10001ef4, 8
  %v4_10001ef4 = inttoptr i32 %v3_10001ef4 to i8*
  store i8 %v1_10001ef4, i8* %v4_10001ef4, align 1
  %v0_10001ef8 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10001ef8, label %dec_label_pc_10001f04, label %dec_label_pc_10001efc

dec_label_pc_10001efc:                            ; preds = %dec_label_pc_10001ea4
  store i32 16384, i32* %r11.global-to-local, align 4
  %v2_10001f00 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f00 = add i32 %v2_10001f00, 6
  %v4_10001f00 = inttoptr i32 %v3_10001f00 to i16*
  store i16 16384, i16* %v4_10001f00, align 2
  br label %dec_label_pc_10001f04

dec_label_pc_10001f04:                            ; preds = %dec_label_pc_10001ea4, %dec_label_pc_10001efc
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_10001f08 = load i32, i32* %r30.global-to-local, align 4
  %v3_10001f08 = add i32 %v2_10001f08, 9
  %v4_10001f08 = inttoptr i32 %v3_10001f08 to i8*
  store i8 17, i8* %v4_10001f08, align 1
  %v0_10001f0c = call i32 @function_10005b48()
  store i32 %v0_10001f0c, i32* %r3.global-to-local, align 4
  %v1_10001f10 = add i32 %v0_10001f0c, -1024
  store i32 %v1_10001f10, i32* %r0.global-to-local, align 4
  %v1_10001f14 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f14 = add i32 %v1_10001f14, 12
  %v3_10001f14 = inttoptr i32 %v2_10001f14 to i32*
  store i32 %v0_10001f0c, i32* %v3_10001f14, align 4
  %v0_10001f18 = load i32, i32* %r0.global-to-local, align 4
  %v1_10001f18 = sub i32 -1, %v0_10001f18
  store i32 %v1_10001f18, i32* %r0.global-to-local, align 4
  %v0_10001f1c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10001f1c, label %dec_label_pc_10001f20, label %dec_label_pc_10001e1c

dec_label_pc_10001f20:                            ; preds = %dec_label_pc_10001f04
  %v1_10001f20 = load i32, i32* %r30.global-to-local, align 4
  %v2_10001f20 = add i32 %v1_10001f20, 16
  %v3_10001f20 = inttoptr i32 %v2_10001f20 to i32*
  store i32 %v1_10001f18, i32* %v3_10001f20, align 4
  br label %dec_label_pc_10001e24

dec_label_pc_10001f28:                            ; preds = %dec_label_pc_10001da4
  %v0_10001f28 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10001f28, i32* %r3.global-to-local, align 4
  store i32 268443440, i32* @lr, align 4
  %v0_10001f2c = call i32 @function_1000955c()
  store i32 %v0_10001f2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10001f30

dec_label_pc_10001f30:                            ; preds = %dec_label_pc_10001c10, %dec_label_pc_10001f28
  store i32 %v0_10001c28, i32* %r0.global-to-local, align 4
  %v1_10001f44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10001c18)
  store i32 %v0_10001c5c, i32* %r28.global-to-local, align 4
  store i32 %v0_10001c64, i32* %r29.global-to-local, align 4
  store i32 %v0_10001c6c, i32* %r30.global-to-local, align 4
  store i32 %v0_10001c70, i32* %r31.global-to-local, align 4
  %v0_10001f8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001f8c

dec_label_pc_10001f90:                            ; preds = %dec_label_pc_10001dc8
  %v3_10001f90 = icmp eq i32 %v1_10001de0, 0
  store i1 %v3_10001f90, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10001f94

dec_label_pc_10001f94:                            ; preds = %dec_label_pc_10001e24, %dec_label_pc_10001f90
  store i32 %v5_10001d80, i32* %r0.global-to-local, align 4
  %v0_10001f98 = load i32, i32* %r15.global-to-local, align 4
  %v3_10001f98 = icmp eq i32 %v0_10001f98, 0
  store i1 %v3_10001f98, i1* %cr2_eq.global-to-local, align 1
  %v0_10001f9c = load i32, i32* %r16.global-to-local, align 4
  %v1_10001f9c = add i32 %v0_10001f9c, 8
  store i32 %v1_10001f9c, i32* %r22.global-to-local, align 4
  %v1_10001fa0 = add i32 %v0_10001f9c, 52
  store i32 %v1_10001fa0, i32* %r24.global-to-local, align 4
  %v3_10001fa4 = icmp eq i32 %v5_10001d80, -1
  store i1 %v3_10001fa4, i1* %cr7_eq.global-to-local, align 1
  %v0_10001fa8 = call i32 @__asm_mfcr()
  store i32 %v0_10001fa8, i32* %r3.global-to-local, align 4
  %v1_10001fac = mul i32 %v0_10001fa8, 268435456
  store i32 %v1_10001fac, i32* %r21.global-to-local, align 4
  %v0_10001fb0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10001fb0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10001fb0.outer

dec_label_pc_10001fb0.outer:                      ; preds = %dec_label_pc_100020b8, %dec_label_pc_10001f94
  %v1_10001fb0.ph = phi i1 [ %v1_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v1_100020b8, %dec_label_pc_100020b8 ]
  %v0_10001fb0.ph = phi i1 [ %v0_10001fb0.pre, %dec_label_pc_10001f94 ], [ %v0_100020b8, %dec_label_pc_100020b8 ]
  %v2_10001fb0 = or i1 %v1_10001fb0.ph, %v0_10001fb0.ph
  br label %dec_label_pc_10001fb0

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001fb0.outer, %dec_label_pc_10001fb0
  br i1 %v2_10001fb0, label %dec_label_pc_10001fb0, label %dec_label_pc_10001fb4

dec_label_pc_10001fb4:                            ; preds = %dec_label_pc_10001fb0, %dec_label_pc_100020b8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-104, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10001fc4

dec_label_pc_10001fc4:                            ; preds = %dec_label_pc_10002028, %dec_label_pc_10001fb4
  %v0_10001fc4 = phi i32 [ %v1_100020a8, %dec_label_pc_10002028 ], [ 0, %dec_label_pc_10001fb4 ]
  %v1_10001fc4 = mul i32 %v0_10001fc4, 24
  store i32 %v1_10001fc4, i32* %r0.global-to-local, align 4
  %v1_10001fc8 = mul i32 %v0_10001fc4, 4
  store i32 %v1_10001fc8, i32* %r11.global-to-local, align 4
  %v1_10001fcc = load i32, i32* %r20.global-to-local, align 4
  %v2_10001fcc = add i32 %v1_10001fcc, %v1_10001fc8
  %v3_10001fcc = inttoptr i32 %v2_10001fcc to i32*
  %v4_10001fcc = load i32, i32* %v3_10001fcc, align 4
  store i32 %v4_10001fcc, i32* %r28.global-to-local, align 4
  %v1_10001fd0 = load i32, i32* %r26.global-to-local, align 4
  %v2_10001fd0 = add i32 %v1_10001fd0, %v1_10001fc4
  %v1_10001fd4 = add i32 %v2_10001fd0, 20
  %v2_10001fd4 = inttoptr i32 %v1_10001fd4 to i8*
  %v3_10001fd4 = load i8, i8* %v2_10001fd4, align 1
  %v4_10001fd4 = zext i8 %v3_10001fd4 to i32
  store i32 %v4_10001fd4, i32* %r9.global-to-local, align 4
  %v1_10001fd8 = add i32 %v4_10001fcc, 24
  store i32 %v1_10001fd8, i32* @r31, align 4
  %v1_10001fdc = add i32 %v4_10001fcc, 44
  store i32 %v1_10001fdc, i32* @r30, align 4
  %v3_10001fe0 = icmp eq i8 %v3_10001fd4, 31
  store i1 %v3_10001fe0, i1* %cr7_eq.global-to-local, align 1
  %tmp35 = icmp ult i8 %v3_10001fd4, 32
  br i1 %tmp35, label %dec_label_pc_100020c0, label %dec_label_pc_10001fe8

dec_label_pc_10001fe8:                            ; preds = %dec_label_pc_10001fc4
  %v0_10001fe8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10001fe8 = mul i32 %v0_10001fe8, 16
  %v2_10001fe8 = udiv i32 %v0_10001fe8, 268435456
  %v3_10001fe8 = or i32 %v2_10001fe8, %v1_10001fe8
  store i32 %v3_10001fe8, i32* %r21.global-to-local, align 4
  %v1_10001fec = call %0 @__asm_mtcrf(i32 1, i32 %v3_10001fe8)
  %v1_10001ff0 = mul nuw i32 %v2_10001fe8, 268435456
  %v2_10001ff0 = urem i32 %v0_10001fe8, 268435456
  %v3_10001ff0 = or i32 %v1_10001ff0, %v2_10001ff0
  store i32 %v3_10001ff0, i32* %r21.global-to-local, align 4
  %v0_10001ff4 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10001ff4, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_10001ff8:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 65535, i32* @r29, align 4
  %v0_10002000 = load i32, i32* %r25.global-to-local, align 4
  %v4_10002000 = icmp eq i32 %v0_10002000, 65535
  store i1 %v4_10002000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002000, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_10002008:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v1_10002008 = phi i32 [ %v1_10002104, %dec_label_pc_100020f4 ], [ 65535, %dec_label_pc_10001ff8 ]
  %v0_10002008 = load i32, i32* %r17.global-to-local, align 4
  %v4_10002008 = icmp eq i32 %v0_10002008, %v1_10002008
  store i1 %v4_10002008, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002008, label %dec_label_pc_1000212c, label %dec_label_pc_10002010

dec_label_pc_10002010:                            ; preds = %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge, %dec_label_pc_10002008
  %v1_10002010 = phi i32 [ %v1_10002010.pre, %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge ], [ %v1_10002008, %dec_label_pc_10002008 ]
  %v0_10002010 = load i32, i32* %r18.global-to-local, align 4
  %v4_10002010 = icmp eq i32 %v0_10002010, %v1_10002010
  store i1 %v4_10002010, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002010, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_10002018:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_10002018 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002018, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_1000201c:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_1000201c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000201c = add i32 %v0_1000201c, 16
  %v2_1000201c = inttoptr i32 %v1_1000201c to i32*
  %v3_1000201c = load i32, i32* %v2_1000201c, align 4
  store i32 %v3_1000201c, i32* %r0.global-to-local, align 4
  %v1_10002020 = load i32, i32* @r31, align 4
  %v2_10002020 = add i32 %v1_10002020, 16
  %v3_10002020 = inttoptr i32 %v2_10002020 to i32*
  store i32 %v3_1000201c, i32* %v3_10002020, align 4
  %v0_10002024 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002024, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002028:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148, %dec_label_pc_10002154
  %v0_10002028 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002028 = trunc i32 %v0_10002028 to i16
  %v2_10002028 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002028 = add i32 %v2_10002028, 10
  %v4_10002028 = inttoptr i32 %v3_10002028 to i16*
  store i16 %v1_10002028, i16* %v4_10002028, align 2
  %v0_10002030 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002030, i32* @r3, align 4
  %v2_10002034 = call i32 @function_100043cc(i32 %v0_10002030, i32 20)
  %v3_10002034 = trunc i32 %v2_10002034 to i16
  %v4_1000203c = add i32 %v0_10002030, 10
  %v5_1000203c = inttoptr i32 %v4_1000203c to i16*
  store i16 %v3_10002034, i16* %v5_1000203c, align 2
  %v0_10002040 = load i32, i32* @r31, align 4
  store i32 %v0_10002040, i32* @r3, align 4
  %v0_10002044 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002044 = trunc i32 %v0_10002044 to i16
  %v3_10002044 = add i32 %v0_10002040, 10
  %v4_10002044 = inttoptr i32 %v3_10002044 to i16*
  store i16 %v1_10002044, i16* %v4_10002044, align 2
  %v2_10002048 = call i32 @function_100043cc(i32 %v0_10002040, i32 20)
  %v3_10002048 = trunc i32 %v2_10002048 to i16
  %v0_1000204c = load i32, i32* @r30, align 4
  store i32 %v0_1000204c, i32* @r4, align 4
  %v3_10002050 = load i32, i32* @r31, align 4
  %v4_10002050 = add i32 %v3_10002050, 10
  %v5_10002050 = inttoptr i32 %v4_10002050 to i16*
  store i16 %v3_10002048, i16* %v5_10002050, align 2
  %v0_10002054 = load i32, i32* %r22.global-to-local, align 4
  %v0_10002058 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002058 = trunc i32 %v0_10002058 to i16
  %v2_10002058 = load i32, i32* @r30, align 4
  %v3_10002058 = add i32 %v2_10002058, 6
  %v4_10002058 = inttoptr i32 %v3_10002058 to i16*
  store i16 %v1_10002058, i16* %v4_10002058, align 2
  %v0_1000205c = load i32, i32* @r31, align 4
  store i32 %v0_1000205c, i32* %r3.global-to-local, align 4
  %v0_10002060 = load i32, i32* @r30, align 4
  %v1_10002060 = add i32 %v0_10002060, 4
  %v2_10002060 = inttoptr i32 %v1_10002060 to i16*
  %v3_10002060 = load i16, i16* %v2_10002060, align 2
  %v4_10002060 = zext i16 %v3_10002060 to i32
  %v4_10002064 = call i32 @function_10004430(i32 %v0_1000205c, i32 %v0_1000204c, i32 %v4_10002060, i32 %v0_10002054)
  %v5_10002064 = trunc i32 %v4_10002064 to i16
  store i32 %v4_10002064, i32* %r3.global-to-local, align 4
  %v3_10002068 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_10002068, i32* %r0.global-to-local, align 4
  %v0_1000206c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000206c = add i32 %v0_1000206c, 16
  %v2_1000206c = inttoptr i32 %v1_1000206c to i32*
  %v3_1000206c = load i32, i32* %v2_1000206c, align 4
  store i32 %v3_1000206c, i32* %r11.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002074 = mul i32 %v3_10002068, 24
  store i32 %v1_10002074, i32* %r0.global-to-local, align 4
  %v3_10002078 = load i32, i32* @r30, align 4
  %v4_10002078 = add i32 %v3_10002078, 6
  %v5_10002078 = inttoptr i32 %v4_10002078 to i16*
  store i16 %v5_10002064, i16* %v5_10002078, align 2
  %v0_1000207c = load i32, i32* %r28.global-to-local, align 4
  %v0_10002080 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10002080, i32* %r3.global-to-local, align 4
  %v0_10002084 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002084 = load i32, i32* %r26.global-to-local, align 4
  %v2_10002084 = add i32 %v1_10002084, %v0_10002084
  %v0_10002088 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002088 = trunc i32 %v0_10002088 to i16
  %v5_10002088 = inttoptr i32 %v2_10002084 to i16*
  store i16 %v3_10002088, i16* %v5_10002088, align 2
  %v0_1000208c = load i32, i32* %r11.global-to-local, align 4
  %v2_1000208c = add i32 %v2_10002084, 4
  %v3_1000208c = inttoptr i32 %v2_1000208c to i32*
  store i32 %v0_1000208c, i32* %v3_1000208c, align 4
  %v0_10002090 = load i32, i32* %r24.global-to-local, align 4
  %v0_10002094 = load i32, i32* %r27.global-to-local, align 4
  %v1_10002094 = trunc i32 %v0_10002094 to i16
  %v3_10002094 = add i32 %v2_10002084, 2
  %v4_10002094 = inttoptr i32 %v3_10002094 to i16*
  store i16 %v1_10002094, i16* %v4_10002094, align 2
  store i32 268443812, i32* @lr, align 4
  %v6_100020a0 = call i32 @function_1000a1fc(i32 %v0_10002080, i32 %v0_1000207c, i32 %v0_10002090, i32 16384, i32 %v2_10002084, i32 16)
  store i32 %v6_100020a0, i32* %r3.global-to-local, align 4
  %v3_100020a4 = load i32, i32* %stack_var_-104, align 4
  %v1_100020a8 = add i32 %v3_100020a4, 1
  store i32 %v1_100020a8, i32* %r9.global-to-local, align 4
  %v1_100020ac = load i32, i32* %r19.global-to-local, align 4
  %v2_100020ac = icmp slt i32 %v1_100020a8, %v1_100020ac
  %v4_100020ac = icmp eq i32 %v1_100020a8, %v1_100020ac
  store i1 %v4_100020ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100020a8, i32* %stack_var_-104, align 4
  br i1 %v2_100020ac, label %dec_label_pc_10001fc4, label %dec_label_pc_100020b8

dec_label_pc_100020b8:                            ; preds = %dec_label_pc_10002028
  %v0_100020b8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100020b8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100020b8 = or i1 %v0_100020b8, %v1_100020b8
  br i1 %v2_100020b8, label %dec_label_pc_10001fb0.outer, label %dec_label_pc_10001fb4

dec_label_pc_100020c0:                            ; preds = %dec_label_pc_10001fc4
  %v1_100020c0 = add i32 %v2_10001fd0, 16
  %v2_100020c0 = inttoptr i32 %v1_100020c0 to i32*
  %v3_100020c0 = load i32, i32* %v2_100020c0, align 4
  store i32 %v3_100020c0, i32* %r29.global-to-local, align 4
  %v0_100020c4 = call i32 @function_10005b48()
  store i32 %v0_100020c4, i32* %r3.global-to-local, align 4
  %v3_100020c8 = load i32, i32* %stack_var_-104, align 4
  store i32 %v3_100020c8, i32* %r9.global-to-local, align 4
  %v0_100020cc = load i32, i32* %r21.global-to-local, align 4
  %v1_100020cc = mul i32 %v0_100020cc, 16
  %v2_100020cc = udiv i32 %v0_100020cc, 268435456
  %v3_100020cc = or i32 %v2_100020cc, %v1_100020cc
  store i32 %v3_100020cc, i32* %r21.global-to-local, align 4
  %v1_100020d0 = call %0 @__asm_mtcrf(i32 1, i32 %v3_100020cc)
  %v1_100020d4 = mul nuw i32 %v2_100020cc, 268435456
  %v2_100020d4 = urem i32 %v0_100020cc, 268435456
  %v3_100020d4 = or i32 %v1_100020d4, %v2_100020d4
  store i32 %v3_100020d4, i32* %r21.global-to-local, align 4
  %v0_100020d8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100020d8 = mul i32 %v0_100020d8, 24
  %v1_100020dc = load i32, i32* %r26.global-to-local, align 4
  %v2_100020dc = add i32 %v1_100020dc, %v1_100020d8
  store i32 %v2_100020dc, i32* %r9.global-to-local, align 4
  %v1_100020e0 = add i32 %v2_100020dc, 20
  %v2_100020e0 = inttoptr i32 %v1_100020e0 to i8*
  %v3_100020e0 = load i8, i8* %v2_100020e0, align 1
  %v4_100020e0 = zext i8 %v3_100020e0 to i32
  store i32 %v4_100020e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100020e0, 64
  %v2_100020e4 = zext i8 %tmp to i32
  %v3_100020e4 = lshr i32 %v0_100020c4, %v2_100020e4
  store i32 %v3_100020e4, i32* %r3.global-to-local, align 4
  %v0_100020e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100020e8 = add i32 %v3_100020e4, %v0_100020e8
  store i32 %v2_100020e8, i32* %r29.global-to-local, align 4
  %v1_100020ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100020ec = add i32 %v1_100020ec, 16
  %v3_100020ec = inttoptr i32 %v2_100020ec to i32*
  store i32 %v2_100020e8, i32* %v3_100020ec, align 4
  %v0_100020f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100020f0, label %dec_label_pc_100020f4, label %dec_label_pc_10001ff8

dec_label_pc_100020f4:                            ; preds = %dec_label_pc_100020c0, %dec_label_pc_10001fe8
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100020f8 = call i32 @function_10005b48()
  store i32 %v0_100020f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10002100 = load i32, i32* %r28.global-to-local, align 4
  %v2_10002100 = add i32 %v1_10002100, 12
  %v3_10002100 = inttoptr i32 %v2_10002100 to i32*
  store i32 %v0_100020f8, i32* %v3_10002100, align 4
  %v0_10002104 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002104 = load i32, i32* @r29, align 4
  %v4_10002104 = icmp eq i32 %v0_10002104, %v1_10002104
  store i1 %v4_10002104, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002104, label %dec_label_pc_1000210c, label %dec_label_pc_10002008

dec_label_pc_1000210c:                            ; preds = %dec_label_pc_100020f4, %dec_label_pc_10001ff8
  %v0_1000210c = call i32 @function_10005b48()
  %v0_10002110 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002110 = load i32, i32* @r29, align 4
  %v4_10002110 = icmp eq i32 %v0_10002110, %v1_10002110
  store i1 %v4_10002110, i1* %cr7_eq.global-to-local, align 1
  %v1_10002114 = urem i32 %v0_1000210c, 65536
  store i32 %v1_10002114, i32* %r3.global-to-local, align 4
  %v1_10002118 = add nsw i32 %v1_10002114, -1000
  store i32 %v1_10002118, i32* %r0.global-to-local, align 4
  %v1_1000211c = trunc i32 %v0_1000210c to i16
  %v2_1000211c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000211c = add i32 %v2_1000211c, 4
  %v4_1000211c = inttoptr i32 %v3_1000211c to i16*
  store i16 %v1_1000211c, i16* %v4_1000211c, align 2
  %v0_10002120 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002120 = sub i32 -1, %v0_10002120
  store i32 %v1_10002120, i32* %r0.global-to-local, align 4
  %v1_10002124 = trunc i32 %v1_10002120 to i16
  %v2_10002124 = load i32, i32* @r31, align 4
  %v3_10002124 = add i32 %v2_10002124, 4
  %v4_10002124 = inttoptr i32 %v3_10002124 to i16*
  store i16 %v1_10002124, i16* %v4_10002124, align 2
  br i1 %v4_10002110, label %dec_label_pc_1000212c, label %dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge

dec_label_pc_1000210c.dec_label_pc_10002010_crit_edge: ; preds = %dec_label_pc_1000210c
  %v1_10002010.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10002010

dec_label_pc_1000212c:                            ; preds = %dec_label_pc_1000210c, %dec_label_pc_10002008
  %v0_1000212c = call i32 @function_10005b48()
  %v1_1000212c = trunc i32 %v0_1000212c to i16
  store i32 %v0_1000212c, i32* %r3.global-to-local, align 4
  %v0_10002130 = load i32, i32* %r18.global-to-local, align 4
  %v1_10002130 = load i32, i32* @r29, align 4
  %v4_10002130 = icmp eq i32 %v0_10002130, %v1_10002130
  store i1 %v4_10002130, i1* %cr7_eq.global-to-local, align 1
  %v3_10002134 = load i32, i32* %r28.global-to-local, align 4
  %v4_10002134 = add i32 %v3_10002134, 44
  %v5_10002134 = inttoptr i32 %v4_10002134 to i16*
  store i16 %v1_1000212c, i16* %v5_10002134, align 2
  br i1 %v4_10002130, label %dec_label_pc_1000213c, label %dec_label_pc_10002018

dec_label_pc_1000213c:                            ; preds = %dec_label_pc_1000212c, %dec_label_pc_10002010
  %v0_1000213c = call i32 @function_10005b48()
  %v1_1000213c = trunc i32 %v0_1000213c to i16
  store i32 %v0_1000213c, i32* %r3.global-to-local, align 4
  %v3_10002140 = load i32, i32* @r30, align 4
  %v4_10002140 = add i32 %v3_10002140, 2
  %v5_10002140 = inttoptr i32 %v4_10002140 to i16*
  store i16 %v1_1000213c, i16* %v5_10002140, align 2
  %v0_10002144 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002144, label %dec_label_pc_10002148, label %dec_label_pc_1000201c

dec_label_pc_10002148:                            ; preds = %dec_label_pc_1000213c, %dec_label_pc_10002018
  %v0_10002148 = call i32 @function_10005b48()
  store i32 %v0_10002148, i32* %r3.global-to-local, align 4
  %v1_1000214c = load i32, i32* @r31, align 4
  %v2_1000214c = add i32 %v1_1000214c, 16
  %v3_1000214c = inttoptr i32 %v2_1000214c to i32*
  store i32 %v0_10002148, i32* %v3_1000214c, align 4
  %v0_10002150 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002150, label %dec_label_pc_10002028, label %dec_label_pc_10002154

dec_label_pc_10002154:                            ; preds = %dec_label_pc_1000201c, %dec_label_pc_10002148
  %v0_10002154 = load i32, i32* @r30, align 4
  %v1_10002154 = add i32 %v0_10002154, 8
  store i32 %v1_10002154, i32* @r3, align 4
  %v0_10002158 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10002158, i32* @r4, align 4
  %v0_1000215c = call i32 @function_10005d1c()
  store i32 %v0_1000215c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002028

; uselistorder directives
  uselistorder i32 %v0_1000213c, { 1, 0 }
  uselistorder i32 %v0_1000212c, { 1, 0 }
  uselistorder i32 %v1_10002120, { 1, 0 }
  uselistorder i32 %v1_10002114, { 1, 0 }
  uselistorder i32 %v0_1000210c, { 1, 0 }
  uselistorder i32 %v1_10002104, { 1, 0 }
  uselistorder i32 %v0_100020cc, { 2, 1, 0 }
  uselistorder i1 %v1_100020b8, { 1, 0 }
  uselistorder i1 %v0_100020b8, { 1, 0 }
  uselistorder i32 %v1_100020a8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v2_10002084, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10002064, { 1, 0 }
  uselistorder i32 %v0_10001fe8, { 2, 1, 0 }
  uselistorder i32 %v4_10001fcc, { 1, 0, 2 }
  uselistorder i32 %v1_10001fc8, { 1, 0 }
  uselistorder i32 %v1_10001f18, { 1, 0 }
  uselistorder i32 %v1_10001e60, { 1, 0 }
  uselistorder i32 %v1_10001e54, { 1, 0 }
  uselistorder i32 %v1_10001df0, { 1, 0 }
  uselistorder i32 %v0_10001df0, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10001de0, { 1, 2, 0 }
  uselistorder i32 %v0_10001dd4, { 1, 0 }
  uselistorder i32 %v5_10001d80, { 0, 3, 1, 2 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 8, 9, 21, 22 }
  uselistorder i32* %r31.global-to-local, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 16 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 4, 5, 6, 7, 9, 8, 10, 2, 11, 12 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 2, 22, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3, 4, 8, 5, 6, 7 }
  uselistorder i32* %r21.global-to-local, { 0, 1, 4, 2, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 26, 22, 23, 24, 25, 12, 27, 28, 29, 30, 31 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 7, 3, 4, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_10002154, { 1, 0 }
  uselistorder label %dec_label_pc_10002028, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10001fb0, { 1, 0 }
  uselistorder label %dec_label_pc_10001f94, { 1, 0 }
  uselistorder label %dec_label_pc_10001f30, { 1, 0 }
  uselistorder label %dec_label_pc_10001f04, { 1, 0 }
  uselistorder label %dec_label_pc_10001ea4, { 1, 0 }
}

define i32 @function_10002164(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002164:
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %v0_10002168 = load i32, i32* @lr, align 4
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v0_1000216c = call i32 @__asm_mfcr()
  store i32 %v0_1000216c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  store i32 %v0_1000216c, i32* %r23.global-to-local, align 4
  %v0_100021a4 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100021ac = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100021b4 = load i32, i32* @r30, align 4
  store i32 268444116, i32* @lr, align 4
  %v2_100021d0 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_100021d0, i32* %r24.global-to-local, align 4
  %v0_100021d8 = load i32, i32* @r28, align 4
  %v0_100021dc = load i32, i32* @r29, align 4
  store i32 %v0_100021dc, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 268444140, i32* @lr, align 4
  %v4_100021e8 = inttoptr i32 %v0_100021d8 to i32*
  %v5_100021e8 = call i32 @function_100006a8(i32 %v0_100021dc, i32* %v4_100021e8, i32 2, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v0_100021f8 = load i32, i32* @r28, align 4
  %v1_100021fc = urem i32 %v5_100021e8, 256
  store i32 %v1_100021fc, i32* %r19.global-to-local, align 4
  %v0_10002200 = load i32, i32* @r29, align 4
  store i32 %v0_10002200, i32* %r3.global-to-local, align 4
  store i32 268444168, i32* @lr, align 4
  %v4_10002204 = inttoptr i32 %v0_100021f8 to i32*
  %v5_10002204 = call i32 @function_100006a8(i32 %v0_10002200, i32* %v4_10002204, i32 3, i32 65535)
  %v0_10002208 = load i32, i32* @r28, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 64, i32* %r6.global-to-local, align 4
  store i32 %v5_10002204, i32* %r21.global-to-local, align 4
  %v0_10002218 = load i32, i32* @r29, align 4
  store i32 %v0_10002218, i32* %r3.global-to-local, align 4
  store i32 268444192, i32* @lr, align 4
  %v4_1000221c = inttoptr i32 %v0_10002208 to i32*
  %v5_1000221c = call i32 @function_100006a8(i32 %v0_10002218, i32* %v4_1000221c, i32 4, i32 64)
  %v0_10002220 = load i32, i32* @r28, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v1_1000222c = urem i32 %v5_1000221c, 256
  store i32 %v1_1000222c, i32* %r26.global-to-local, align 4
  %v0_10002230 = load i32, i32* @r29, align 4
  store i32 %v0_10002230, i32* %r3.global-to-local, align 4
  store i32 268444216, i32* @lr, align 4
  %v4_10002234 = inttoptr i32 %v0_10002220 to i32*
  %v5_10002234 = call i32 @function_100006a8(i32 %v0_10002230, i32* %v4_10002234, i32 5, i32 0)
  store i32 65535, i32* %r6.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  %v0_10002244 = load i32, i32* @r28, align 4
  %v1_10002248 = urem i32 %v5_10002234, 256
  store i32 %v1_10002248, i32* @r31, align 4
  %v0_1000224c = load i32, i32* @r29, align 4
  store i32 %v0_1000224c, i32* %r3.global-to-local, align 4
  store i32 268444244, i32* @lr, align 4
  %v4_10002250 = inttoptr i32 %v0_10002244 to i32*
  %v5_10002250 = call i32 @function_100006a8(i32 %v0_1000224c, i32* %v4_10002250, i32 6, i32 65535)
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 27015, i32* %r6.global-to-local, align 4
  %v0_1000225c = load i32, i32* @r28, align 4
  store i32 %v5_10002250, i32* %r22.global-to-local, align 4
  %v0_10002264 = load i32, i32* @r29, align 4
  store i32 %v0_10002264, i32* %r3.global-to-local, align 4
  store i32 268444268, i32* @lr, align 4
  %v4_10002268 = inttoptr i32 %v0_1000225c to i32*
  %v5_10002268 = call i32 @function_100006a8(i32 %v0_10002264, i32* %v4_10002268, i32 7, i32 27015)
  store i32 %v5_10002268, i32* %r29.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  store i32 268444280, i32* @lr, align 4
  %v1_10002274 = call i32 @function_10008820(i32 20)
  store i32 20, i32* %r3.global-to-local, align 4
  %v3_10002280 = call i32 @function_1000876c(i32 20, i32* nonnull %stack_var_-84)
  store i32 %v3_10002280, i32* %r30.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268444312, i32* @lr, align 4
  %v3_10002294 = call i32 @function_1000a278(i32 2, i32 3, i32 17)
  store i32 %v3_10002294, i32* %r3.global-to-local, align 4
  %v3_10002298 = icmp eq i32 %v3_10002294, -1
  store i32 %v3_10002294, i32* %r25.global-to-local, align 4
  br i1 %v3_10002298, label %dec_label_pc_100024e8, label %dec_label_pc_100022a4

dec_label_pc_100022a4:                            ; preds = %dec_label_pc_10002164
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_100022b0 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_100022b0, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-88, align 4
  store i32 268444352, i32* @lr, align 4
  %v4_100022bc = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_100022b0, i32 4)
  store i32 %v4_100022bc, i32* %r3.global-to-local, align 4
  %v3_100022c0 = icmp eq i32 %v4_100022bc, -1
  br i1 %v3_100022c0, label %dec_label_pc_100024e0, label %dec_label_pc_100022c8

dec_label_pc_100022c8:                            ; preds = %dec_label_pc_100022a4
  %v0_100022c8 = load i32, i32* %r23.global-to-local, align 4
  %v1_100022c8 = icmp slt i32 %v0_100022c8, 0
  %v3_100022c8 = icmp eq i32 %v0_100022c8, 0
  store i1 %v1_100022c8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_100022c8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100022d0 = load i32, i32* %r21.global-to-local, align 4
  %v1_100022d0 = urem i32 %v0_100022d0, 65536
  store i32 %v1_100022d0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  %v0_100022d8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100022d8 = urem i32 %v0_100022d8, 65536
  store i32 %v1_100022d8, i32* %r21.global-to-local, align 4
  %v0_100022dc = load i32, i32* %r29.global-to-local, align 4
  %v1_100022dc = urem i32 %v0_100022dc, 65536
  store i32 %v1_100022dc, i32* %r22.global-to-local, align 4
  %tmp32 = icmp slt i32 %v0_100022c8, 1
  br i1 %tmp32, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100022e4

dec_label_pc_100022e4:                            ; preds = %dec_label_pc_100022c8
  %v0_100022e4 = load i32, i32* @r31, align 4
  %v3_100022e4 = icmp eq i32 %v0_100022e4, 0
  store i1 %v3_100022e4, i1* %cr3_eq.global-to-local, align 1
  store i32 4, i32* %r29.global-to-local, align 4
  store i32 5, i32* %r28.global-to-local, align 4
  store i32 16384, i32* %r18.global-to-local, align 4
  store i32 17, i32* %r17.global-to-local, align 4
  store i32 -1, i32* %r16.global-to-local, align 4
  br label %dec_label_pc_10002304

dec_label_pc_10002304:                            ; preds = %dec_label_pc_10002360, %dec_label_pc_100022e4
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268444432, i32* @lr, align 4
  %v2_1000230c = call i32 @function_1000a5d4(i32 128, i32 1)
  store i32 %v2_1000230c, i32* %r3.global-to-local, align 4
  %v3_10002310 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002310, i32* %r0.global-to-local, align 4
  %v0_10002314 = load i32, i32* @r31, align 4
  %v1_10002314 = mul i32 %v0_10002314, 4
  store i32 %v1_10002314, i32* %r9.global-to-local, align 4
  %v0_10002318 = load i32, i32* @r30, align 4
  %v2_1000231c = load i32, i32* %r24.global-to-local, align 4
  %v3_1000231c = add i32 %v2_1000231c, %v1_10002314
  %v4_1000231c = inttoptr i32 %v3_1000231c to i32*
  store i32 %v2_1000230c, i32* %v4_1000231c, align 4
  %v0_10002320 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002320 = mul i32 %v0_10002320, 4
  store i32 %v1_10002320, i32* %r0.global-to-local, align 4
  %v0_10002324 = load i32, i32* %r24.global-to-local, align 4
  %v2_10002324 = add i32 %v0_10002324, %v1_10002320
  %v3_10002324 = inttoptr i32 %v2_10002324 to i32*
  %v4_10002324 = load i32, i32* %v3_10002324, align 4
  store i32 %v4_10002324, i32* %r10.global-to-local, align 4
  %v1_10002328 = inttoptr i32 %v4_10002324 to i32*
  %v2_10002328 = load i32, i32* %v1_10002328, align 4
  store i32 %v2_10002328, i32* %r0.global-to-local, align 4
  %v1_1000232c = add i32 %v4_10002324, 32
  store i32 %v1_1000232c, i32* %r3.global-to-local, align 4
  %v0_10002330 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002330 = trunc i32 %v0_10002330 to i16
  %v3_10002330 = add i32 %v4_10002324, 4
  %v4_10002330 = inttoptr i32 %v3_10002330 to i16*
  store i16 %v1_10002330, i16* %v4_10002330, align 2
  %v0_10002334 = load i32, i32* %r10.global-to-local, align 4
  %v1_10002334 = add i32 %v0_10002334, 20
  store i32 %v1_10002334, i32* %r8.global-to-local, align 4
  %v1_10002338 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10002338, i32* %r0.global-to-local, align 4
  %v1_1000233c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_1000233c, i32* %r0.global-to-local, align 4
  %v1_10002340 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002340 = inttoptr i32 %v1_10002340 to i32*
  store i32 %v1_1000233c, i32* %v2_10002340, align 4
  %v0_10002344 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002344 = trunc i32 %v0_10002344 to i8
  %v2_10002344 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002344 = add i32 %v2_10002344, 1
  %v4_10002344 = inttoptr i32 %v3_10002344 to i8*
  store i8 %v1_10002344, i8* %v4_10002344, align 1
  %v3_10002348 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002348, i32* %r9.global-to-local, align 4
  %v0_1000234c = load i32, i32* %r26.global-to-local, align 4
  %v1_1000234c = trunc i32 %v0_1000234c to i8
  %v2_1000234c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000234c = add i32 %v2_1000234c, 8
  %v4_1000234c = inttoptr i32 %v3_1000234c to i8*
  store i8 %v1_1000234c, i8* %v4_1000234c, align 1
  %v0_10002350 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002350 = add i32 %v0_10002350, 32
  store i32 %v1_10002350, i32* %r9.global-to-local, align 4
  %v1_10002354 = trunc i32 %v1_10002350 to i16
  %v2_10002354 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002354 = add i32 %v2_10002354, 2
  %v4_10002354 = inttoptr i32 %v3_10002354 to i16*
  store i16 %v1_10002354, i16* %v4_10002354, align 2
  %v0_10002358 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002358, label %dec_label_pc_10002360, label %dec_label_pc_1000235c

dec_label_pc_1000235c:                            ; preds = %dec_label_pc_10002304
  %v0_1000235c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000235c = trunc i32 %v0_1000235c to i16
  %v2_1000235c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000235c = add i32 %v2_1000235c, 6
  %v4_1000235c = inttoptr i32 %v3_1000235c to i16*
  store i16 %v1_1000235c, i16* %v4_1000235c, align 2
  br label %dec_label_pc_10002360

dec_label_pc_10002360:                            ; preds = %dec_label_pc_10002304, %dec_label_pc_1000235c
  %v0_10002360 = load i32, i32* %r17.global-to-local, align 4
  %v1_10002360 = trunc i32 %v0_10002360 to i8
  %v2_10002360 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002360 = add i32 %v2_10002360, 9
  %v4_10002360 = inttoptr i32 %v3_10002360 to i8*
  store i8 %v1_10002360, i8* %v4_10002360, align 1
  %v0_10002364 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002364 = trunc i32 %v0_10002364 to i16
  %v2_10002364 = load i32, i32* %r10.global-to-local, align 4
  %v3_10002364 = add i32 %v2_10002364, 20
  %v4_10002364 = inttoptr i32 %v3_10002364 to i16*
  store i16 %v1_10002364, i16* %v4_10002364, align 2
  %v3_10002368 = load i32, i32* %stack_var_-88, align 4
  %v3_1000236c = load i32, i32* @global_var_1001c6a0.16, align 4
  store i32 %v3_1000236c, i32* %r0.global-to-local, align 4
  %v1_10002370 = mul i32 %v3_10002368, 24
  store i32 %v1_10002370, i32* %r9.global-to-local, align 4
  %v0_10002374 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002374 = trunc i32 %v0_10002374 to i16
  %v2_10002374 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002374 = add i32 %v2_10002374, 2
  %v4_10002374 = inttoptr i32 %v3_10002374 to i16*
  store i16 %v1_10002374, i16* %v4_10002374, align 2
  %v0_10002378 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002378 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002378 = add i32 %v1_10002378, 12
  %v3_10002378 = inttoptr i32 %v2_10002378 to i32*
  store i32 %v0_10002378, i32* %v3_10002378, align 4
  %v0_1000237c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000237c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000237c = add i32 %v1_1000237c, %v0_1000237c
  store i32 %v2_1000237c, i32* %r9.global-to-local, align 4
  %v1_10002380 = add i32 %v2_1000237c, 16
  %v2_10002380 = inttoptr i32 %v1_10002380 to i32*
  %v3_10002380 = load i32, i32* %v2_10002380, align 4
  store i32 %v3_10002380, i32* %r0.global-to-local, align 4
  %v3_10002384 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002384, i32* %r11.global-to-local, align 4
  %v0_10002388 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002388 = load i32, i32* %r10.global-to-local, align 4
  %v2_10002388 = add i32 %v1_10002388, 28
  %v3_10002388 = inttoptr i32 %v2_10002388 to i32*
  store i32 %v0_10002388, i32* %v3_10002388, align 4
  %v0_1000238c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000238c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000238c = add i32 %v1_1000238c, 16
  %v3_1000238c = inttoptr i32 %v2_1000238c to i32*
  store i32 %v0_1000238c, i32* %v3_1000238c, align 4
  %v0_10002390 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002390 = add i32 %v0_10002390, 12
  store i32 %v1_10002390, i32* %r11.global-to-local, align 4
  %v1_10002394 = trunc i32 %v1_10002390 to i16
  %v2_10002394 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002394 = add i32 %v2_10002394, 4
  %v4_10002394 = inttoptr i32 %v3_10002394 to i16*
  store i16 %v1_10002394, i16* %v4_10002394, align 2
  %v3_10002398 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002398, i32* %r5.global-to-local, align 4
  store i32 268444576, i32* @lr, align 4
  %v3_1000239c = call i32 @function_10008e20(i32 %v3_10002398, i32 %v0_10002318, i32 %v3_10002398)
  store i32 %v3_1000239c, i32* %r3.global-to-local, align 4
  %v3_100023a0 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_100023a0, i32* %r9.global-to-local, align 4
  %v1_100023a4 = add i32 %v3_100023a0, 1
  %v1_100023a8 = load i32, i32* %r23.global-to-local, align 4
  %v2_100023a8 = icmp slt i32 %v1_100023a4, %v1_100023a8
  store i32 %v1_100023a4, i32* %stack_var_-88, align 4
  br i1 %v2_100023a8, label %dec_label_pc_10002304, label %dec_label_pc_100023b4.preheader.loopexit

dec_label_pc_100023b4.preheader.loopexit:         ; preds = %dec_label_pc_10002360
  %v0_100023b4.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100023b4.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100023b4.outer

dec_label_pc_100023b4.outer:                      ; preds = %dec_label_pc_10002480, %dec_label_pc_100022c8, %dec_label_pc_100023b4.preheader.loopexit
  %v1_100023b4.ph34 = phi i1 [ %v1_100022c8, %dec_label_pc_100022c8 ], [ %v1_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v1_10002480, %dec_label_pc_10002480 ]
  %v0_100023b4.ph35 = phi i1 [ %v3_100022c8, %dec_label_pc_100022c8 ], [ %v0_100023b4.pre.pre, %dec_label_pc_100023b4.preheader.loopexit ], [ %v0_10002480, %dec_label_pc_10002480 ]
  %v2_100023b4 = or i1 %v1_100023b4.ph34, %v0_100023b4.ph35
  br label %dec_label_pc_100023b4

dec_label_pc_100023b4:                            ; preds = %dec_label_pc_100023b4.outer, %dec_label_pc_100023b4
  br i1 %v2_100023b4, label %dec_label_pc_100023b4, label %dec_label_pc_100023b8

dec_label_pc_100023b8:                            ; preds = %dec_label_pc_100023b4, %dec_label_pc_10002480
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 0, i32* %stack_var_-88, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_100023c8

dec_label_pc_100023c8:                            ; preds = %dec_label_pc_10002408, %dec_label_pc_100023b8
  %v0_100023d8 = phi i32 [ %v1_10002470, %dec_label_pc_10002408 ], [ 0, %dec_label_pc_100023b8 ]
  %v1_100023c8 = mul i32 %v0_100023d8, 24
  store i32 65535, i32* %r30.global-to-local, align 4
  %v1_100023d4 = load i32, i32* %r27.global-to-local, align 4
  %v2_100023d4 = add i32 %v1_100023d4, %v1_100023c8
  store i32 %v2_100023d4, i32* %r10.global-to-local, align 4
  %v1_100023d8 = mul i32 %v0_100023d8, 4
  store i32 %v1_100023d8, i32* %r0.global-to-local, align 4
  %v1_100023dc = add i32 %v2_100023d4, 20
  %v2_100023dc = inttoptr i32 %v1_100023dc to i8*
  %v3_100023dc = load i8, i8* %v2_100023dc, align 1
  %v4_100023dc = zext i8 %v3_100023dc to i32
  store i32 %v4_100023dc, i32* %r9.global-to-local, align 4
  %v0_100023e0 = load i32, i32* %r24.global-to-local, align 4
  %v2_100023e0 = add i32 %v0_100023e0, %v1_100023d8
  %v3_100023e0 = inttoptr i32 %v2_100023e0 to i32*
  %v4_100023e0 = load i32, i32* %v3_100023e0, align 4
  store i32 %v4_100023e0, i32* %r28.global-to-local, align 4
  %v1_100023e8 = add i32 %v4_100023e0, 20
  store i32 %v1_100023e8, i32* @r31, align 4
  %tmp33 = icmp ult i8 %v3_100023dc, 32
  br i1 %tmp33, label %dec_label_pc_10002488, label %dec_label_pc_100023f0

dec_label_pc_100023f0:                            ; preds = %dec_label_pc_100023c8
  %v0_100023f0 = load i32, i32* %r20.global-to-local, align 4
  %v4_100023f0 = icmp eq i32 %v0_100023f0, 65535
  br i1 %v4_100023f0, label %dec_label_pc_100024b4, label %dec_label_pc_100023f8

dec_label_pc_100023f8:                            ; preds = %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge, %dec_label_pc_100023f0
  %v1_100023f8 = phi i32 [ %v1_100023f8.pre, %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge ], [ 65535, %dec_label_pc_100023f0 ]
  %v0_100023f8 = load i32, i32* %r21.global-to-local, align 4
  %v4_100023f8 = icmp eq i32 %v0_100023f8, %v1_100023f8
  br i1 %v4_100023f8, label %dec_label_pc_100024c4, label %dec_label_pc_10002400

dec_label_pc_10002400:                            ; preds = %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge, %dec_label_pc_100023f8
  %v1_10002400 = phi i32 [ %v1_10002400.pre, %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge ], [ %v1_100023f8, %dec_label_pc_100023f8 ]
  %v0_10002400 = load i32, i32* %r22.global-to-local, align 4
  %v4_10002400 = icmp eq i32 %v0_10002400, %v1_10002400
  br i1 %v4_10002400, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_10002408:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400, %dec_label_pc_100024d4
  %v0_10002408 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002408 = trunc i32 %v0_10002408 to i16
  %v2_10002408 = load i32, i32* %r28.global-to-local, align 4
  %v3_10002408 = add i32 %v2_10002408, 10
  %v4_10002408 = inttoptr i32 %v3_10002408 to i16*
  store i16 %v1_10002408, i16* %v4_10002408, align 2
  %v0_10002410 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002410, i32* @r3, align 4
  %v2_10002414 = call i32 @function_100043cc(i32 %v0_10002410, i32 20)
  %v3_10002414 = trunc i32 %v2_10002414 to i16
  store i32 %v2_10002414, i32* %r3.global-to-local, align 4
  %v3_10002418 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002418, i32* %r6.global-to-local, align 4
  %v3_1000241c = load i32, i32* %r28.global-to-local, align 4
  %v4_1000241c = add i32 %v3_1000241c, 10
  %v5_1000241c = inttoptr i32 %v4_1000241c to i16*
  store i16 %v3_10002414, i16* %v5_1000241c, align 2
  %v0_10002420 = load i32, i32* @r31, align 4
  store i32 %v0_10002420, i32* @r4, align 4
  %v0_10002424 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002424 = trunc i32 %v0_10002424 to i16
  %v3_10002424 = add i32 %v0_10002420, 6
  %v4_10002424 = inttoptr i32 %v3_10002424 to i16*
  store i16 %v1_10002424, i16* %v4_10002424, align 2
  %v0_10002428 = load i32, i32* %r6.global-to-local, align 4
  %v1_10002428 = add i32 %v0_10002428, 12
  store i32 %v1_10002428, i32* %r6.global-to-local, align 4
  %v0_1000242c = load i32, i32* @r31, align 4
  %v1_1000242c = add i32 %v0_1000242c, 4
  %v2_1000242c = inttoptr i32 %v1_1000242c to i16*
  %v3_1000242c = load i16, i16* %v2_1000242c, align 2
  %v4_1000242c = zext i16 %v3_1000242c to i32
  store i32 %v4_1000242c, i32* %r5.global-to-local, align 4
  %v0_10002430 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002430, i32* %r3.global-to-local, align 4
  %v4_10002434 = call i32 @function_10004430(i32 %v0_10002430, i32 %v0_10002420, i32 %v4_1000242c, i32 %v1_10002428)
  %v5_10002434 = trunc i32 %v4_10002434 to i16
  store i32 %v4_10002434, i32* %r3.global-to-local, align 4
  %v3_10002438 = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_10002438, i32* %r7.global-to-local, align 4
  %v0_1000243c = load i32, i32* @r31, align 4
  %v1_1000243c = add i32 %v0_1000243c, 2
  %v2_1000243c = inttoptr i32 %v1_1000243c to i16*
  %v3_1000243c = load i16, i16* %v2_1000243c, align 2
  %v4_1000243c = zext i16 %v3_1000243c to i32
  store i32 %v4_1000243c, i32* %r0.global-to-local, align 4
  %v0_10002440 = load i32, i32* %r28.global-to-local, align 4
  %v1_10002444 = mul i32 %v3_10002438, 24
  store i32 %v1_10002444, i32* %r7.global-to-local, align 4
  %v3_10002448 = load i32, i32* %stack_var_-84, align 4
  store i32 %v3_10002448, i32* %r5.global-to-local, align 4
  %v4_1000244c = add i32 %v0_1000243c, 6
  %v5_1000244c = inttoptr i32 %v4_1000244c to i16*
  store i16 %v5_10002434, i16* %v5_1000244c, align 2
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_10002454 = load i32, i32* %r7.global-to-local, align 4
  %v1_10002454 = load i32, i32* %r27.global-to-local, align 4
  %v2_10002454 = add i32 %v1_10002454, %v0_10002454
  store i32 %v2_10002454, i32* %r7.global-to-local, align 4
  %v0_10002458 = load i32, i32* %r5.global-to-local, align 4
  %v1_10002458 = add i32 %v0_10002458, 32
  store i32 %v1_10002458, i32* %r5.global-to-local, align 4
  %v0_1000245c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000245c = trunc i32 %v0_1000245c to i16
  %v3_1000245c = add i32 %v2_10002454, 2
  %v4_1000245c = inttoptr i32 %v3_1000245c to i16*
  store i16 %v1_1000245c, i16* %v4_1000245c, align 2
  %v0_10002460 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10002460, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268444780, i32* @lr, align 4
  %v6_10002468 = call i32 @function_1000a1fc(i32 %v0_10002460, i32 %v0_10002440, i32 %v1_10002458, i32 16384, i32 %v2_10002454, i32 16)
  store i32 %v6_10002468, i32* %r3.global-to-local, align 4
  %v3_1000246c = load i32, i32* %stack_var_-88, align 4
  store i32 %v3_1000246c, i32* %r9.global-to-local, align 4
  %v1_10002470 = add i32 %v3_1000246c, 1
  store i32 %v1_10002470, i32* %r11.global-to-local, align 4
  %v1_10002474 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002474 = icmp slt i32 %v1_10002470, %v1_10002474
  store i32 %v1_10002470, i32* %stack_var_-88, align 4
  br i1 %v2_10002474, label %dec_label_pc_100023c8, label %dec_label_pc_10002480

dec_label_pc_10002480:                            ; preds = %dec_label_pc_10002408
  %v0_10002480 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002480 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002480 = or i1 %v0_10002480, %v1_10002480
  br i1 %v2_10002480, label %dec_label_pc_100023b4.outer, label %dec_label_pc_100023b8

dec_label_pc_10002488:                            ; preds = %dec_label_pc_100023c8
  %v1_10002488 = add i32 %v2_100023d4, 16
  %v2_10002488 = inttoptr i32 %v1_10002488 to i32*
  %v3_10002488 = load i32, i32* %v2_10002488, align 4
  store i32 %v3_10002488, i32* %r29.global-to-local, align 4
  %v0_1000248c = call i32 @function_10005b48()
  store i32 %v0_1000248c, i32* %r3.global-to-local, align 4
  %v3_10002490 = load i32, i32* %stack_var_-88, align 4
  %v0_10002494 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002494 = load i32, i32* %r30.global-to-local, align 4
  %v4_10002494 = icmp eq i32 %v0_10002494, %v1_10002494
  %v1_10002498 = mul i32 %v3_10002490, 24
  %v1_1000249c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000249c = add i32 %v1_1000249c, %v1_10002498
  store i32 %v2_1000249c, i32* %r9.global-to-local, align 4
  %v1_100024a0 = add i32 %v2_1000249c, 20
  %v2_100024a0 = inttoptr i32 %v1_100024a0 to i8*
  %v3_100024a0 = load i8, i8* %v2_100024a0, align 1
  %v4_100024a0 = zext i8 %v3_100024a0 to i32
  store i32 %v4_100024a0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100024a0, 64
  %v2_100024a4 = zext i8 %tmp to i32
  %v3_100024a4 = lshr i32 %v0_1000248c, %v2_100024a4
  store i32 %v3_100024a4, i32* %r3.global-to-local, align 4
  %v0_100024a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100024a8 = add i32 %v3_100024a4, %v0_100024a8
  store i32 %v2_100024a8, i32* %r29.global-to-local, align 4
  %v1_100024ac = load i32, i32* %r28.global-to-local, align 4
  %v2_100024ac = add i32 %v1_100024ac, 16
  %v3_100024ac = inttoptr i32 %v2_100024ac to i32*
  store i32 %v2_100024a8, i32* %v3_100024ac, align 4
  br i1 %v4_10002494, label %dec_label_pc_100024b4, label %dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge

dec_label_pc_10002488.dec_label_pc_100023f8_crit_edge: ; preds = %dec_label_pc_10002488
  %v1_100023f8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100023f8

dec_label_pc_100024b4:                            ; preds = %dec_label_pc_10002488, %dec_label_pc_100023f0
  %v0_100024b4 = call i32 @function_10005b48()
  %v1_100024b4 = trunc i32 %v0_100024b4 to i16
  store i32 %v0_100024b4, i32* %r3.global-to-local, align 4
  %v0_100024b8 = load i32, i32* %r21.global-to-local, align 4
  %v1_100024b8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024b8 = icmp eq i32 %v0_100024b8, %v1_100024b8
  %v3_100024bc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024bc = add i32 %v3_100024bc, 4
  %v5_100024bc = inttoptr i32 %v4_100024bc to i16*
  store i16 %v1_100024b4, i16* %v5_100024bc, align 2
  br i1 %v4_100024b8, label %dec_label_pc_100024c4, label %dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge

dec_label_pc_100024b4.dec_label_pc_10002400_crit_edge: ; preds = %dec_label_pc_100024b4
  %v1_10002400.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002400

dec_label_pc_100024c4:                            ; preds = %dec_label_pc_100024b4, %dec_label_pc_100023f8
  %v0_100024c4 = call i32 @function_10005b48()
  %v1_100024c4 = trunc i32 %v0_100024c4 to i16
  store i32 %v0_100024c4, i32* %r3.global-to-local, align 4
  %v0_100024c8 = load i32, i32* %r22.global-to-local, align 4
  %v1_100024c8 = load i32, i32* %r30.global-to-local, align 4
  %v4_100024c8 = icmp eq i32 %v0_100024c8, %v1_100024c8
  %v3_100024cc = load i32, i32* %r28.global-to-local, align 4
  %v4_100024cc = add i32 %v3_100024cc, 20
  %v5_100024cc = inttoptr i32 %v4_100024cc to i16*
  store i16 %v1_100024c4, i16* %v5_100024cc, align 2
  br i1 %v4_100024c8, label %dec_label_pc_100024d4, label %dec_label_pc_10002408

dec_label_pc_100024d4:                            ; preds = %dec_label_pc_100024c4, %dec_label_pc_10002400
  %v0_100024d4 = call i32 @function_10005b48()
  %v1_100024d4 = trunc i32 %v0_100024d4 to i16
  store i32 %v0_100024d4, i32* %r3.global-to-local, align 4
  %v3_100024d8 = load i32, i32* @r31, align 4
  %v4_100024d8 = add i32 %v3_100024d8, 2
  %v5_100024d8 = inttoptr i32 %v4_100024d8 to i16*
  store i16 %v1_100024d4, i16* %v5_100024d8, align 2
  br label %dec_label_pc_10002408

dec_label_pc_100024e0:                            ; preds = %dec_label_pc_100022a4
  %v0_100024e0 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100024e0, i32* %r3.global-to-local, align 4
  store i32 268444904, i32* @lr, align 4
  %v0_100024e4 = call i32 @function_1000955c()
  store i32 %v0_100024e4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100024e8

dec_label_pc_100024e8:                            ; preds = %dec_label_pc_10002164, %dec_label_pc_100024e0
  store i32 %v0_10002168, i32* %r0.global-to-local, align 4
  %v1_100024fc = call %0 @__asm_mtcrf(i32 24, i32 %v0_1000216c)
  store i32 %v0_100021a4, i32* %r28.global-to-local, align 4
  store i32 %v0_100021ac, i32* %r29.global-to-local, align 4
  store i32 %v0_100021b4, i32* %r30.global-to-local, align 4
  %v0_10002540 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002540

; uselistorder directives
  uselistorder i32 %v0_100024d4, { 1, 0 }
  uselistorder i32 %v0_100024c4, { 1, 0 }
  uselistorder i32 %v0_100024b4, { 1, 0 }
  uselistorder i1 %v1_10002480, { 1, 0 }
  uselistorder i1 %v0_10002480, { 1, 0 }
  uselistorder i32 %v1_10002470, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10002434, { 1, 0 }
  uselistorder i32 %v2_10002414, { 1, 0 }
  uselistorder i32 %v1_100023d8, { 1, 0 }
  uselistorder i32 %v1_10002320, { 1, 0 }
  uselistorder i32 %v1_10002314, { 1, 0 }
  uselistorder i32* %stack_var_-84, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 3, 1, 4, 2, 5, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100024e8, { 1, 0 }
  uselistorder label %dec_label_pc_10002408, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100023b8, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4, { 1, 0 }
  uselistorder label %dec_label_pc_100023b4.outer, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10002360, { 1, 0 }
}

define i32 @function_10002544(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002544:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-2184 = alloca i32, align 4
  %stack_var_-2180 = alloca i32, align 4
  %stack_var_-2148 = alloca i32, align 4
  %v0_10002548 = load i32, i32* @lr, align 4
  store i32 %v0_10002548, i32* %r0.global-to-local, align 4
  %v0_1000254c = call i32 @__asm_mfcr()
  store i32 %v0_1000254c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r14.global-to-local, align 4
  %v0_1000255c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000254c, i32* %r15.global-to-local, align 4
  %v0_1000257c = load i32, i32* @r24, align 4
  %v0_10002580 = load i32, i32* @r25, align 4
  %v0_10002584 = load i32, i32* @r26, align 4
  %v0_10002588 = load i32, i32* @r27, align 4
  %v0_1000258c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_1000259c = load i32, i32* @r31, align 4
  %v0_100025b0 = load i32, i32* @r30, align 4
  store i32 268445112, i32* @lr, align 4
  %v2_100025b4 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_100025b4, i32* %r16.global-to-local, align 4
  %v0_100025bc = load i32, i32* @r28, align 4
  %v0_100025c8 = load i32, i32* @r29, align 4
  store i32 %v0_100025c8, i32* %r3.global-to-local, align 4
  store i32 268445136, i32* @lr, align 4
  %v4_100025cc = inttoptr i32 %v0_100025bc to i32*
  %v5_100025cc = call i32 @function_100006a8(i32 %v0_100025c8, i32* %v4_100025cc, i32 2, i32 0)
  %v5_100025dc = trunc i32 %v5_100025cc to i8
  %v0_100025e4 = load i32, i32* @r28, align 4
  %v0_100025e8 = load i32, i32* @r29, align 4
  store i32 %v0_100025e8, i32* %r3.global-to-local, align 4
  store i32 268445168, i32* @lr, align 4
  %v4_100025ec = inttoptr i32 %v0_100025e4 to i32*
  %v5_100025ec = call i32 @function_100006a8(i32 %v0_100025e8, i32* %v4_100025ec, i32 3, i32 65535)
  %v0_100025f0 = load i32, i32* @r28, align 4
  store i32 %v5_100025ec, i32* %r19.global-to-local, align 4
  %v0_10002600 = load i32, i32* @r29, align 4
  store i32 %v0_10002600, i32* %r3.global-to-local, align 4
  store i32 268445192, i32* @lr, align 4
  %v4_10002604 = inttoptr i32 %v0_100025f0 to i32*
  %v5_10002604 = call i32 @function_100006a8(i32 %v0_10002600, i32* %v4_10002604, i32 4, i32 64)
  %v0_10002608 = load i32, i32* @r28, align 4
  %v5_10002614 = trunc i32 %v5_10002604 to i8
  %v0_1000261c = load i32, i32* @r29, align 4
  store i32 %v0_1000261c, i32* %r3.global-to-local, align 4
  store i32 268445220, i32* @lr, align 4
  %v4_10002620 = inttoptr i32 %v0_10002608 to i32*
  %v5_10002620 = call i32 @function_100006a8(i32 %v0_1000261c, i32* %v4_10002620, i32 5, i32 0)
  %v0_10002630 = load i32, i32* @r28, align 4
  %v1_10002634 = urem i32 %v5_10002620, 256
  store i32 %v1_10002634, i32* %r27.global-to-local, align 4
  %v0_10002638 = load i32, i32* @r29, align 4
  store i32 %v0_10002638, i32* %r3.global-to-local, align 4
  store i32 268445248, i32* @lr, align 4
  %v4_1000263c = inttoptr i32 %v0_10002630 to i32*
  %v5_1000263c = call i32 @function_100006a8(i32 %v0_10002638, i32* %v4_1000263c, i32 6, i32 65535)
  %v0_10002640 = load i32, i32* @r28, align 4
  store i32 %v5_1000263c, i32* %r20.global-to-local, align 4
  %v0_10002650 = load i32, i32* @r29, align 4
  store i32 %v0_10002650, i32* %r3.global-to-local, align 4
  store i32 268445272, i32* @lr, align 4
  %v4_10002654 = inttoptr i32 %v0_10002640 to i32*
  %v5_10002654 = call i32 @function_100006a8(i32 %v0_10002650, i32* %v4_10002654, i32 7, i32 53)
  %v0_1000265c = load i32, i32* @r28, align 4
  store i32 %v5_10002654, i32* %r23.global-to-local, align 4
  %v0_1000266c = load i32, i32* @r29, align 4
  store i32 %v0_1000266c, i32* %r3.global-to-local, align 4
  store i32 268445300, i32* @lr, align 4
  %v4_10002670 = inttoptr i32 %v0_1000265c to i32*
  %v5_10002670 = call i32 @function_100006a8(i32 %v0_1000266c, i32* %v4_10002670, i32 9, i32 65535)
  %v0_10002674 = load i32, i32* @r28, align 4
  store i32 %v5_10002670, i32* %r24.global-to-local, align 4
  %v0_10002684 = load i32, i32* @r29, align 4
  store i32 %v0_10002684, i32* %r3.global-to-local, align 4
  store i32 268445324, i32* @lr, align 4
  %v4_10002688 = inttoptr i32 %v0_10002674 to i32*
  %v5_10002688 = call i32 @function_100006a8(i32 %v0_10002684, i32* %v4_10002688, i32 0, i32 12)
  %v0_10002694 = load i32, i32* @r28, align 4
  store i32 %v5_10002688, i32* %r26.global-to-local, align 4
  %v0_1000269c = load i32, i32* @r29, align 4
  store i32 %v0_1000269c, i32* %r3.global-to-local, align 4
  store i32 268445348, i32* @lr, align 4
  %v4_100026a0 = inttoptr i32 %v0_10002694 to i32*
  %v5_100026a0 = call i32 @function_10000238(i32 %v0_1000269c, i32* %v4_100026a0, i32 8, i32 0)
  store i32 %v5_100026a0, i32* %r25.global-to-local, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445360, i32* @lr, align 4
  %v1_100026ac = call i32 @function_10008820(i32 21)
  store i32 21, i32* %r3.global-to-local, align 4
  %v3_100026b8 = call i32 @function_1000876c(i32 21, i32* null)
  store i32 %v3_100026b8, i32* %r3.global-to-local, align 4
  store i32 268445384, i32* @lr, align 4
  %v2_100026c4 = call i32 @function_100096c4(i32 %v3_100026b8, i32 0)
  store i32 %v2_100026c4, i32* @r31, align 4
  store i32 21, i32* %r3.global-to-local, align 4
  store i32 268445396, i32* @lr, align 4
  %v1_100026d0 = call i32 @function_10008794(i32 21)
  store i32 %v1_100026d0, i32* %r3.global-to-local, align 4
  %v0_100026d4 = load i32, i32* @r31, align 4
  %v1_100026d4 = icmp slt i32 %v0_100026d4, 0
  %v3_100026d4 = icmp eq i32 %v0_100026d4, 0
  store i1 %v3_100026d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100026d4, label %dec_label_pc_100027a4, label %dec_label_pc_100026dc

dec_label_pc_100026dc:                            ; preds = %dec_label_pc_10002544
  %v2_100026dc = ptrtoint i32* %stack_var_-2148 to i32
  store i32 %v2_100026dc, i32* %r28.global-to-local, align 4
  store i32 %v0_100026d4, i32* %r3.global-to-local, align 4
  store i32 268445424, i32* @lr, align 4
  %v3_100026ec = call i32 @function_10009794(i32 %v0_100026d4, i32 %v2_100026dc, i32 2048)
  store i32 %v3_100026ec, i32* %r30.global-to-local, align 4
  %v0_100026f4 = load i32, i32* @r31, align 4
  store i32 %v0_100026f4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100026fc.20 to i32), i32* @lr, align 4
  %v0_100026f8 = call i32 @function_1000955c()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445444, i32* @lr, align 4
  %v1_10002700 = call i32 @function_10008820(i32 22)
  store i32 22, i32* %r3.global-to-local, align 4
  %v3_1000270c = call i32 @function_1000876c(i32 22, i32* null)
  %v0_10002710 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v2_100026dc, i32* %r3.global-to-local, align 4
  %v3_1000271c = bitcast i32* %stack_var_-2148 to i8*
  %v4_1000271c = call i32 @function_1000914c(i8* %v3_1000271c, i32 %v0_10002710, i32 %v3_1000270c)
  store i32 %v4_1000271c, i32* @r31, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 268445484, i32* @lr, align 4
  %v1_10002728 = call i32 @function_10008794(i32 22)
  store i32 %v1_10002728, i32* %r3.global-to-local, align 4
  %v0_1000272c = load i32, i32* @r31, align 4
  %v3_1000272c = icmp eq i32 %v0_1000272c, -1
  store i1 %v3_1000272c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000272c, label %dec_label_pc_100027a4, label %dec_label_pc_10002734

dec_label_pc_10002734:                            ; preds = %dec_label_pc_100026dc
  %v0_10002734 = load i32, i32* %r30.global-to-local, align 4
  %v3_10002734 = icmp sgt i32 %v0_10002734, %v0_1000272c
  %v4_10002734 = icmp eq i32 %v0_10002734, %v0_1000272c
  store i1 %v4_10002734, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002734, label %dec_label_pc_1000273c, label %dec_label_pc_100027a4

dec_label_pc_1000273c:                            ; preds = %dec_label_pc_10002734
  %v2_1000273c = sub i32 %v0_10002734, %v0_1000272c
  store i32 %v2_1000273c, i32* %r0.global-to-local, align 4
  %v1_10002740 = add i32 %v0_10002734, -1
  store i32 %v1_10002740, i32* %r3.global-to-local, align 4
  store i32 %v2_1000273c, i32* %ctr.global-to-local, align 4
  %v0_1000274c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000274c = add i32 %v0_1000274c, %v0_1000272c
  store i32 %v2_1000274c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v2_10002754 = ptrtoint i32* %stack_var_-2180 to i32
  store i32 %v2_10002754, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10002758

dec_label_pc_10002758:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_1000273c
  %v0_100027a0 = phi i32 [ %v1_100027a0, %dec_label_pc_1000279c ], [ %v2_1000273c, %dec_label_pc_1000273c ]
  %v0_1000279c = phi i32 [ %v1_1000279c, %dec_label_pc_1000279c ], [ %v0_1000272c, %dec_label_pc_1000273c ]
  %v0_10002764 = phi i32 [ %v1_10002764, %dec_label_pc_1000279c ], [ %v2_1000274c, %dec_label_pc_1000273c ]
  %v0_10002758 = phi i32 [ %v0_100027584, %dec_label_pc_1000279c ], [ 0, %dec_label_pc_1000273c ]
  %v3_10002758 = icmp eq i32 %v0_10002758, 0
  store i1 %v3_10002758, i1* %cr7_eq.global-to-local, align 1
  %v1_1000275c = inttoptr i32 %v0_10002764 to i8*
  %v2_1000275c = load i8, i8* %v1_1000275c, align 1
  %v3_1000275c = zext i8 %v2_1000275c to i32
  store i32 %v3_1000275c, i32* %r9.global-to-local, align 4
  %v4_10002760 = icmp eq i32 %v1_10002740, %v0_1000279c
  %v1_10002764 = add i32 %v0_10002764, 1
  store i32 %v1_10002764, i32* %r11.global-to-local, align 4
  br i1 %v3_10002758, label %dec_label_pc_10002774, label %dec_label_pc_10002784

dec_label_pc_10002774:                            ; preds = %dec_label_pc_10002758
  %v3_10002774 = icmp eq i8 %v2_1000275c, 9
  store i1 %v3_10002774, i1* %cr7_eq.global-to-local, align 1
  switch i8 %v2_1000275c, label %dec_label_pc_10002780 [
    i8 32, label %dec_label_pc_1000279c
    i8 9, label %dec_label_pc_1000279c
  ]

dec_label_pc_10002780:                            ; preds = %dec_label_pc_10002774
  store i32 1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10002784

dec_label_pc_10002784:                            ; preds = %dec_label_pc_10002758, %dec_label_pc_10002780
  %v0_100027585 = phi i32 [ %v0_10002758, %dec_label_pc_10002758 ], [ 1, %dec_label_pc_10002780 ]
  %v1_10002784 = add nuw nsw i32 %v3_1000275c, 208
  %v1_10002788 = urem i32 %v1_10002784, 256
  store i32 %v1_10002788, i32* %r0.global-to-local, align 4
  %v2_1000278c = icmp ugt i32 %v1_10002788, 9
  %v3_1000278c = icmp eq i32 %v1_10002788, 9
  store i1 %v3_1000278c, i1* %cr7_eq.global-to-local, align 1
  %v3_10002768.not = icmp ne i8 %v2_1000275c, 46
  %brmerge.not = and i1 %v3_10002768.not, %v2_1000278c
  %brmerge26 = or i1 %v4_10002760, %brmerge.not
  br i1 %brmerge26, label %dec_label_pc_100027d8, label %dec_label_pc_1000279c

dec_label_pc_1000279c:                            ; preds = %dec_label_pc_10002784, %dec_label_pc_10002774, %dec_label_pc_10002774
  %v0_100027584 = phi i32 [ 0, %dec_label_pc_10002774 ], [ 0, %dec_label_pc_10002774 ], [ %v0_100027585, %dec_label_pc_10002784 ]
  %v1_1000279c = add i32 %v0_1000279c, 1
  %v1_100027a0 = add i32 %v0_100027a0, -1
  store i32 %v1_100027a0, i32* %ctr.global-to-local, align 4
  %v2_100027a0 = icmp eq i32 %v1_100027a0, 0
  br i1 %v2_100027a0, label %dec_label_pc_100027a4, label %dec_label_pc_10002758

dec_label_pc_100027a4:                            ; preds = %dec_label_pc_1000279c, %dec_label_pc_10002734, %dec_label_pc_100026dc, %dec_label_pc_10002544
  %v0_100027a4 = call i32 @function_10005b48()
  %v1_100027a8 = urem i32 %v0_100027a4, 4
  store i32 %v1_100027a8, i32* %r3.global-to-local, align 4
  %v3_100027ac = icmp eq i32 %v1_100027a8, 1
  store i1 %v3_100027ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027ac, label %dec_label_pc_10002b90, label %dec_label_pc_100027b4

dec_label_pc_100027b4:                            ; preds = %dec_label_pc_100027a4
  %v1_100027ac = icmp eq i32 %v1_100027a8, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_100027ac, label %dec_label_pc_10002ba8, label %dec_label_pc_100027bc

dec_label_pc_100027bc:                            ; preds = %dec_label_pc_100027b4
  %v2_100027bc = icmp eq i32 %v1_100027a8, 3
  %v3_100027bc = icmp eq i32 %v1_100027a8, 2
  store i1 %v3_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100027bc, label %dec_label_pc_10002b9c, label %dec_label_pc_100027c4

dec_label_pc_100027c4:                            ; preds = %dec_label_pc_100027bc
  store i1 %v2_100027bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100027bc, label %dec_label_pc_100027cc, label %dec_label_pc_10002808

dec_label_pc_100027cc:                            ; preds = %dec_label_pc_100027c4
  store i32 67240450, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_100027d8:                            ; preds = %dec_label_pc_10002784
  %v2_100027d8 = sub i32 %v0_1000279c, %v0_1000272c
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100027ec.21 to i32), i32* @lr, align 4
  %v3_100027e8 = call i32 @function_10008e20(i32 %v2_10002754, i32 %v2_1000274c, i32 %v2_100027d8)
  %v2_100027ec = ptrtoint i32* %stack_var_-2184 to i32
  %v2_100027f0 = add i32 %v2_100027d8, %v2_100027ec
  store i32 %v2_100027f0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100027f8 = add i32 %v2_100027f0, 4
  %v4_100027f8 = inttoptr i32 %v3_100027f8 to i8*
  store i8 0, i8* %v4_100027f8, align 1
  store i32 %v2_10002754, i32* %r3.global-to-local, align 4
  store i32 268445700, i32* @lr, align 4
  %v1_10002800 = call i32 @function_1000a010(i32 %v2_10002754)
  store i32 %v1_10002800, i32* %r3.global-to-local, align 4
  store i32 %v1_10002800, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002808:                            ; preds = %dec_label_pc_100027c4, %dec_label_pc_10002ba8, %dec_label_pc_10002b9c, %dec_label_pc_10002b90, %dec_label_pc_100027cc, %dec_label_pc_100027d8
  %v0_10002808 = load i32, i32* %r25.global-to-local, align 4
  %v3_10002808 = icmp eq i32 %v0_10002808, 0
  store i1 %v3_10002808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002808, label %dec_label_pc_10002b30, label %dec_label_pc_10002810

dec_label_pc_10002810:                            ; preds = %dec_label_pc_10002808
  store i32 %v0_10002808, i32* %r3.global-to-local, align 4
  store i32 268445720, i32* @lr, align 4
  %v1_10002814 = inttoptr i32 %v0_10002808 to i8*
  %v2_10002814 = call i32 @function_10008d9c(i8* %v1_10002814)
  store i32 %v2_10002814, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268445740, i32* @lr, align 4
  %v3_10002828 = call i32 @function_1000a278(i32 2, i32 3, i32 17)
  store i32 %v3_10002828, i32* %r3.global-to-local, align 4
  %v3_1000282c = icmp eq i32 %v3_10002828, -1
  store i1 %v3_1000282c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002828, i32* %r22.global-to-local, align 4
  br i1 %v3_1000282c, label %dec_label_pc_10002b30, label %dec_label_pc_10002838

dec_label_pc_10002838:                            ; preds = %dec_label_pc_10002810
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002844 = ptrtoint i32* %stack_var_-2184 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-2184, align 4
  store i32 268445780, i32* @lr, align 4
  %v4_10002850 = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_10002844, i32 4)
  store i32 %v4_10002850, i32* %r3.global-to-local, align 4
  %v3_10002854 = icmp eq i32 %v4_10002850, -1
  store i1 %v3_10002854, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002854, label %dec_label_pc_10002b28, label %dec_label_pc_1000285c

dec_label_pc_1000285c:                            ; preds = %dec_label_pc_10002838
  %v0_1000285c = load i32, i32* %r15.global-to-local, align 4
  %v1_1000285c = icmp slt i32 %v0_1000285c, 0
  %v3_1000285c = icmp eq i32 %v0_1000285c, 0
  store i1 %v1_1000285c, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_1000285c, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002864 = load i32, i32* %r19.global-to-local, align 4
  %v1_10002864 = urem i32 %v0_10002864, 65536
  store i32 %v1_10002864, i32* %r17.global-to-local, align 4
  %v0_10002868 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002868 = urem i32 %v0_10002868, 65536
  store i32 %v1_10002868, i32* %r18.global-to-local, align 4
  %v0_1000286c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000286c = urem i32 %v0_1000286c, 65536
  store i32 %v1_1000286c, i32* %r19.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_10002874 = load i32, i32* %r24.global-to-local, align 4
  %v1_10002874 = urem i32 %v0_10002874, 65536
  store i32 %v1_10002874, i32* %r20.global-to-local, align 4
  %v0_10002878 = load i32, i32* %r26.global-to-local, align 4
  %v1_10002878 = urem i32 %v0_10002878, 256
  store i32 %v1_10002878, i32* %r23.global-to-local, align 4
  %tmp53 = icmp slt i32 %v0_1000285c, 1
  %v1_10002b1c = load i32, i32* @r29, align 4
  %v2_10002b1c = add i32 %v1_10002b1c, %v1_10002878
  store i32 %v2_10002b1c, i32* @r24, align 4
  br i1 %tmp53, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_10002880

dec_label_pc_10002880:                            ; preds = %dec_label_pc_1000285c
  %v1_10002884 = icmp slt i32 %v1_10002b1c, 0
  %v3_10002884 = icmp eq i32 %v1_10002b1c, 0
  store i1 %v1_10002884, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002884, i1* %cr3_eq.global-to-local, align 1
  %v1_10002888 = urem i32 %v2_10002b1c, 65536
  %v0_1000288c = load i32, i32* %r27.global-to-local, align 4
  %v3_1000288c = icmp eq i32 %v0_1000288c, 0
  store i1 %v3_1000288c, i1* %cr2_eq.global-to-local, align 1
  %v1_10002890 = add nuw nsw i32 %v1_10002888, 27
  store i32 %v1_10002890, i32* %r0.global-to-local, align 4
  %v1_10002894 = add nuw nsw i32 %v1_10002888, 47
  store i32 %v1_10002894, i32* %r9.global-to-local, align 4
  %fold = add i32 %v2_10002b1c, 47
  %v1_10002898 = urem i32 %fold, 65536
  store i32 %v1_10002898, i32* %r26.global-to-local, align 4
  %fold3 = add i32 %v2_10002b1c, 27
  %v1_1000289c = urem i32 %fold3, 65536
  store i32 %v1_1000289c, i32* %r27.global-to-local, align 4
  %v1_100028a0 = add i32 %v1_10002b1c, 1
  store i32 %v1_100028a0, i32* @r28, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100028f0 = sext i8 %v5_100025dc to i32
  %v4_100028f8 = sext i8 %v5_10002614 to i32
  br label %dec_label_pc_100028a8

dec_label_pc_100028a8:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002880
  store i32 600, i32* %r3.global-to-local, align 4
  store i32 268445876, i32* @lr, align 4
  %v2_100028b0 = call i32 @function_1000a5d4(i32 600, i32 1)
  store i32 %v2_100028b0, i32* %r3.global-to-local, align 4
  %v3_100028b4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100028b4, i32* %r0.global-to-local, align 4
  %v0_100028b8 = load i32, i32* @r31, align 4
  %v1_100028b8 = mul i32 %v0_100028b8, 4
  store i32 %v1_100028b8, i32* %r9.global-to-local, align 4
  %v2_100028bc = load i32, i32* %r16.global-to-local, align 4
  %v3_100028bc = add i32 %v2_100028bc, %v1_100028b8
  %v4_100028bc = inttoptr i32 %v3_100028bc to i32*
  store i32 %v2_100028b0, i32* %v4_100028bc, align 4
  %v0_100028c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100028c0 = mul i32 %v0_100028c0, 4
  store i32 %v1_100028c0, i32* %r0.global-to-local, align 4
  %v0_100028c4 = load i32, i32* %r16.global-to-local, align 4
  %v2_100028c4 = add i32 %v0_100028c4, %v1_100028c0
  %v3_100028c4 = inttoptr i32 %v2_100028c4 to i32*
  %v4_100028c4 = load i32, i32* %v3_100028c4, align 4
  store i32 %v4_100028c4, i32* %r11.global-to-local, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_100028cc = inttoptr i32 %v4_100028c4 to i32*
  %v2_100028cc = load i32, i32* %v1_100028cc, align 4
  store i32 %v2_100028cc, i32* %r9.global-to-local, align 4
  %v1_100028d0 = add i32 %v4_100028c4, 20
  store i32 %v1_100028d0, i32* %r10.global-to-local, align 4
  %v0_100028d4 = load i32, i32* %r17.global-to-local, align 4
  %v1_100028d4 = trunc i32 %v0_100028d4 to i16
  %v3_100028d4 = add i32 %v4_100028c4, 4
  %v4_100028d4 = inttoptr i32 %v3_100028d4 to i16*
  store i16 %v1_100028d4, i16* %v4_100028d4, align 2
  %v0_100028d8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100028d8 = add i32 %v0_100028d8, 28
  store i32 %v1_100028d8, i32* %r8.global-to-local, align 4
  %v1_100028dc = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100028dc, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_100028e4 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100028e4, i32* %r9.global-to-local, align 4
  %v1_100028e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100028e8 = inttoptr i32 %v1_100028e8 to i32*
  store i32 %v1_100028e4, i32* %v2_100028e8, align 4
  %v0_100028ec = load i32, i32* %r26.global-to-local, align 4
  %v1_100028ec = trunc i32 %v0_100028ec to i16
  %v2_100028ec = load i32, i32* %r11.global-to-local, align 4
  %v3_100028ec = add i32 %v2_100028ec, 2
  %v4_100028ec = inttoptr i32 %v3_100028ec to i16*
  store i16 %v1_100028ec, i16* %v4_100028ec, align 2
  store i32 %v4_100028f0, i32* %r0.global-to-local, align 4
  %v2_100028f4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100028f4 = add i32 %v2_100028f4, 1
  %v4_100028f4 = inttoptr i32 %v3_100028f4 to i8*
  store i8 %v5_100025dc, i8* %v4_100028f4, align 1
  store i32 %v4_100028f8, i32* %r7.global-to-local, align 4
  %v2_100028fc = load i32, i32* %r11.global-to-local, align 4
  %v3_100028fc = add i32 %v2_100028fc, 8
  %v4_100028fc = inttoptr i32 %v3_100028fc to i8*
  store i8 %v5_10002614, i8* %v4_100028fc, align 1
  %v0_10002900 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002900, label %dec_label_pc_1000290c, label %dec_label_pc_10002904

dec_label_pc_10002904:                            ; preds = %dec_label_pc_100028a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10002908 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002908 = add i32 %v2_10002908, 6
  %v4_10002908 = inttoptr i32 %v3_10002908 to i16*
  store i16 16384, i16* %v4_10002908, align 2
  br label %dec_label_pc_1000290c

dec_label_pc_1000290c:                            ; preds = %dec_label_pc_100028a8, %dec_label_pc_10002904
  store i32 268566528, i32* %r7.global-to-local, align 4
  %v2_10002914 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002914 = add i32 %v2_10002914, 9
  %v4_10002914 = inttoptr i32 %v3_10002914 to i8*
  store i8 17, i8* %v4_10002914, align 1
  %v0_10002918 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002918 = add i32 %v0_10002918, 41
  store i32 %v1_10002918, i32* %r9.global-to-local, align 4
  %v0_1000291c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000291c = trunc i32 %v0_1000291c to i16
  %v2_1000291c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000291c = add i32 %v2_1000291c, 4
  %v4_1000291c = inttoptr i32 %v3_1000291c to i16*
  store i16 %v1_1000291c, i16* %v4_1000291c, align 2
  %v0_10002920 = load i32, i32* %r9.global-to-local, align 4
  %v1_10002920 = load i32, i32* %r23.global-to-local, align 4
  %v2_10002920 = add i32 %v1_10002920, %v0_10002920
  store i32 %v2_10002920, i32* %r30.global-to-local, align 4
  %v3_10002924 = load i32, i32* @global_var_1001c6a0.16, align 4
  store i32 %v3_10002924, i32* %r0.global-to-local, align 4
  %v1_10002928 = add i32 %v2_10002920, 1
  store i32 %v1_10002928, i32* %r31.global-to-local, align 4
  %v0_1000292c = load i32, i32* %r19.global-to-local, align 4
  %v1_1000292c = trunc i32 %v0_1000292c to i16
  %v2_1000292c = load i32, i32* %r10.global-to-local, align 4
  %v3_1000292c = add i32 %v2_1000292c, 2
  %v4_1000292c = inttoptr i32 %v3_1000292c to i16*
  store i16 %v1_1000292c, i16* %v4_1000292c, align 2
  %v0_10002930 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10002930, i32* %r3.global-to-local, align 4
  %v0_10002934 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002934 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002934 = add i32 %v1_10002934, 12
  %v3_10002934 = inttoptr i32 %v2_10002934 to i32*
  store i32 %v0_10002934, i32* %v3_10002934, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  %v0_1000293c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000293c = trunc i32 %v0_1000293c to i16
  %v2_1000293c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000293c = add i32 %v2_1000293c, 20
  %v4_1000293c = inttoptr i32 %v3_1000293c to i16*
  store i16 %v1_1000293c, i16* %v4_1000293c, align 2
  %v0_10002940 = load i32, i32* %r25.global-to-local, align 4
  %v0_10002944 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002944 = trunc i32 %v0_10002944 to i16
  %v2_10002944 = load i32, i32* %r8.global-to-local, align 4
  %v3_10002944 = add i32 %v2_10002944, 2
  %v4_10002944 = inttoptr i32 %v3_10002944 to i16*
  store i16 %v1_10002944, i16* %v4_10002944, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000294c = load i32, i32* %r8.global-to-local, align 4
  %v3_1000294c = add i32 %v2_1000294c, 4
  %v4_1000294c = inttoptr i32 %v3_1000294c to i16*
  store i16 1, i16* %v4_1000294c, align 2
  %v0_10002950 = load i32, i32* @r28, align 4
  %v0_10002954 = load i32, i32* @r21, align 4
  %v1_10002954 = load i32, i32* %r11.global-to-local, align 4
  %v2_10002954 = add i32 %v1_10002954, 16
  %v3_10002954 = inttoptr i32 %v2_10002954 to i32*
  store i32 %v0_10002954, i32* %v3_10002954, align 4
  %v0_10002958 = load i32, i32* %r20.global-to-local, align 4
  %v1_10002958 = trunc i32 %v0_10002958 to i16
  %v2_10002958 = load i32, i32* %r11.global-to-local, align 4
  %v3_10002958 = add i32 %v2_10002958, 28
  %v4_10002958 = inttoptr i32 %v3_10002958 to i16*
  store i16 %v1_10002958, i16* %v4_10002958, align 2
  %v0_1000295c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000295c = trunc i32 %v0_1000295c to i8
  %v2_1000295c = load i32, i32* %r11.global-to-local, align 4
  %v3_1000295c = add i32 %v2_1000295c, 40
  %v4_1000295c = inttoptr i32 %v3_1000295c to i8*
  store i8 %v1_1000295c, i8* %v4_1000295c, align 1
  store i32 268446052, i32* @lr, align 4
  %v3_10002960 = call i32 @function_10008e20(i32 %v0_10002930, i32 %v0_10002940, i32 %v0_10002950)
  store i32 %v3_10002960, i32* %r3.global-to-local, align 4
  %v0_10002964 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10002964 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10002964 = or i1 %v0_10002964, %v1_10002964
  br i1 %v2_10002964, label %dec_label_pc_100029b0, label %dec_label_pc_10002968

dec_label_pc_10002968:                            ; preds = %dec_label_pc_1000290c
  %v0_10002968 = load i32, i32* @r29, align 4
  store i32 %v0_10002968, i32* %ctr.global-to-local, align 4
  %v0_1000296c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000296c, i32* %r3.global-to-local, align 4
  %v0_10002970 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10002970, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_10002990

dec_label_pc_10002980:                            ; preds = %dec_label_pc_10002990
  %v1_10002980 = urem i32 %v1_10002994, 256
  br label %dec_label_pc_10002984

dec_label_pc_10002984:                            ; preds = %dec_label_pc_100029a0, %dec_label_pc_10002980
  %v0_1000298c = phi i32 [ %v0_1000298c.pre, %dec_label_pc_100029a0 ], [ %v0_1000298c18, %dec_label_pc_10002980 ]
  %v0_10002988 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v0_1000298816, %dec_label_pc_10002980 ]
  %v2_100029a013 = phi i32 [ %v0_100029a4, %dec_label_pc_100029a0 ], [ %v2_100029a0, %dec_label_pc_10002980 ]
  %v0_10002984 = phi i32 [ %v0_10002984.pre, %dec_label_pc_100029a0 ], [ %v0_10002990, %dec_label_pc_10002980 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100029a0 ], [ %v1_10002980, %dec_label_pc_10002980 ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  %v1_10002984 = add i32 %v0_10002984, 1
  store i32 %v1_10002984, i32* %r10.global-to-local, align 4
  %v1_10002988 = add i32 %v0_10002988, 1
  store i32 %v1_10002988, i32* %r3.global-to-local, align 4
  %v1_1000298c = add i32 %v0_1000298c, -1
  store i32 %v1_1000298c, i32* %ctr.global-to-local, align 4
  %v2_1000298c = icmp eq i32 %v1_1000298c, 0
  br i1 %v2_1000298c, label %dec_label_pc_100029b8.loopexit, label %dec_label_pc_10002990

dec_label_pc_10002990:                            ; preds = %dec_label_pc_10002984, %dec_label_pc_10002968
  %v0_1000298c18 = phi i32 [ %v1_1000298c, %dec_label_pc_10002984 ], [ %v0_10002968, %dec_label_pc_10002968 ]
  %v0_1000298816 = phi i32 [ %v1_10002988, %dec_label_pc_10002984 ], [ %v0_1000296c, %dec_label_pc_10002968 ]
  %v2_100029a0 = phi i32 [ %v2_100029a013, %dec_label_pc_10002984 ], [ %v0_10002970, %dec_label_pc_10002968 ]
  %v0_100029a0 = phi i32 [ %storemerge, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v0_10002990 = phi i32 [ %v1_10002984, %dec_label_pc_10002984 ], [ 0, %dec_label_pc_10002968 ]
  %v1_10002990 = load i32, i32* %r25.global-to-local, align 4
  %v2_10002990 = add i32 %v1_10002990, %v0_10002990
  %v3_10002990 = inttoptr i32 %v2_10002990 to i8*
  %v4_10002990 = load i8, i8* %v3_10002990, align 1
  %v5_10002990 = zext i8 %v4_10002990 to i32
  store i32 %v5_10002990, i32* %r0.global-to-local, align 4
  %v1_10002994 = add nsw i32 %v0_100029a0, 1
  store i32 %v1_10002994, i32* %r11.global-to-local, align 4
  %v3_10002998 = icmp eq i8 %v4_10002990, 46
  store i1 %v3_10002998, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002998, label %dec_label_pc_100029a0, label %dec_label_pc_10002980

dec_label_pc_100029a0:                            ; preds = %dec_label_pc_10002990
  %v1_100029a0 = trunc i32 %v0_100029a0 to i8
  %v3_100029a0 = inttoptr i32 %v2_100029a0 to i8*
  store i8 %v1_100029a0, i8* %v3_100029a0, align 1
  %v0_100029a4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_100029a4, i32* %r9.global-to-local, align 4
  %v0_10002984.pre = load i32, i32* %r10.global-to-local, align 4
  %v0_1000298c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10002984

dec_label_pc_100029b0:                            ; preds = %dec_label_pc_1000290c
  %v0_100029b0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100029b0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8.loopexit:                   ; preds = %dec_label_pc_10002984
  %extract.t = trunc i32 %storemerge to i8
  br label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_100029b8.loopexit, %dec_label_pc_100029b0
  %v2_100029b8 = phi i32 [ %v2_100029a013, %dec_label_pc_100029b8.loopexit ], [ %v0_100029b0, %dec_label_pc_100029b0 ]
  %v0_100029b8.off0 = phi i8 [ %extract.t, %dec_label_pc_100029b8.loopexit ], [ 0, %dec_label_pc_100029b0 ]
  %v3_100029b8 = inttoptr i32 %v2_100029b8 to i8*
  store i8 %v0_100029b8.off0, i8* %v3_100029b8, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100029c0 = load i32, i32* %r30.global-to-local, align 4
  %v1_100029c0 = load i32, i32* @r29, align 4
  %v2_100029c0 = add i32 %v1_100029c0, %v0_100029c0
  store i32 %v2_100029c0, i32* %r9.global-to-local, align 4
  %v3_100029c4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_100029c4, i32* %r11.global-to-local, align 4
  %v3_100029c8 = add i32 %v2_100029c0, 4
  %v4_100029c8 = inttoptr i32 %v3_100029c8 to i16*
  store i16 1, i16* %v4_100029c8, align 2
  %v0_100029cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100029cc = add i32 %v0_100029cc, 1
  store i32 %v1_100029cc, i32* %r31.global-to-local, align 4
  %v0_100029d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100029d0 = trunc i32 %v0_100029d0 to i16
  %v2_100029d0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100029d0 = add i32 %v2_100029d0, 2
  %v4_100029d0 = inttoptr i32 %v3_100029d0 to i16*
  store i16 %v1_100029d0, i16* %v4_100029d0, align 2
  %v0_100029d4 = load i32, i32* %r31.global-to-local, align 4
  %v1_100029d4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100029d4 = icmp slt i32 %v0_100029d4, %v1_100029d4
  %v4_100029d4 = icmp eq i32 %v0_100029d4, %v1_100029d4
  store i1 %v4_100029d4, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_100029d4, i32* %stack_var_-2184, align 4
  br i1 %v2_100029d4, label %dec_label_pc_100028a8, label %dec_label_pc_100029e0.preheader.loopexit

dec_label_pc_100029e0.preheader.loopexit:         ; preds = %dec_label_pc_100029b8
  %v0_100029e0.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100029e0.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100029e0.preheader

dec_label_pc_100029e0.preheader:                  ; preds = %dec_label_pc_10002ad8, %dec_label_pc_1000285c, %dec_label_pc_100029e0.preheader.loopexit
  %v1_100029e0 = phi i1 [ %v1_1000285c, %dec_label_pc_1000285c ], [ %v1_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v1_10002ad8, %dec_label_pc_10002ad8 ]
  %v0_100029e0 = phi i1 [ %v3_1000285c, %dec_label_pc_1000285c ], [ %v0_100029e0.pre, %dec_label_pc_100029e0.preheader.loopexit ], [ %v0_10002ad8, %dec_label_pc_10002ad8 ]
  %v2_100029e0 = or i1 %v1_100029e0, %v0_100029e0
  br label %dec_label_pc_100029e0

dec_label_pc_100029e0:                            ; preds = %dec_label_pc_100029e0.preheader, %dec_label_pc_100029e0
  br i1 %v2_100029e0, label %dec_label_pc_100029e0, label %dec_label_pc_100029e4

dec_label_pc_100029e4:                            ; preds = %dec_label_pc_100029e0, %dec_label_pc_10002ad8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-2184, align 4
  %v0_100029f4 = load i32, i32* %r19.global-to-local, align 4
  %v4_100029f4 = icmp eq i32 %v0_100029f4, 65535
  store i1 %v4_100029f4, i1* %cr7_eq.global-to-local, align 1
  %v0_100029f8 = load i32, i32* %r18.global-to-local, align 4
  %v2_100029f8 = icmp slt i32 %v0_100029f8, 65535
  %v4_100029f8 = icmp eq i32 %v0_100029f8, 65535
  store i1 %v2_100029f8, i1* %cr3_lt.global-to-local, align 1
  store i1 %v4_100029f8, i1* %cr3_eq.global-to-local, align 1
  %v0_100029fc = load i32, i32* %r20.global-to-local, align 4
  %v4_100029fc = icmp eq i32 %v0_100029fc, 65535
  store i1 %v4_100029fc, i1* %cr2_eq.global-to-local, align 1
  %v0_10002a00 = load i32, i32* @r24, align 4
  %v1_10002a00 = add i32 %v0_10002a00, 27
  store i32 %v1_10002a00, i32* @r30, align 4
  %v0_10002a04 = call i32 @__asm_mfcr()
  store i32 %v0_10002a04, i32* %r3.global-to-local, align 4
  %v1_10002a08 = mul i32 %v0_10002a04, 268435456
  store i32 %v1_10002a08, i32* @r26, align 4
  %v0_10002a0c = load i32, i32* %r17.global-to-local, align 4
  %v1_10002a0c = load i32, i32* %r0.global-to-local, align 4
  %v4_10002a0c = icmp eq i32 %v0_10002a0c, %v1_10002a0c
  store i1 %v4_10002a0c, i1* %cr7_eq.global-to-local, align 1
  %v0_10002a10 = load i32, i32* @r24, align 4
  %v1_10002a10 = add i32 %v0_10002a10, 47
  store i32 %v1_10002a10, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10002a18 = call i32 @__asm_mfcr()
  store i32 %v0_10002a18, i32* %r3.global-to-local, align 4
  %v1_10002a1c = mul i32 %v0_10002a18, 268435456
  store i32 %v1_10002a1c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r25, align 4
  %v0_10002a24.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002a24:                            ; preds = %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, %dec_label_pc_100029e4
  %v0_10002a28 = phi i32 [ %v0_10002a28.pre, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v1_10002a1c, %dec_label_pc_100029e4 ]
  %v0_10002a24 = phi i32 [ %v1_10002ac8, %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge ], [ %v0_10002a24.pre, %dec_label_pc_100029e4 ]
  %v1_10002a24 = mul i32 %v0_10002a24, 4
  store i32 %v1_10002a24, i32* %r0.global-to-local, align 4
  %v1_10002a28 = mul i32 %v0_10002a28, 16
  %v2_10002a28 = udiv i32 %v0_10002a28, 268435456
  %v3_10002a28 = or i32 %v2_10002a28, %v1_10002a28
  store i32 %v3_10002a28, i32* %r27.global-to-local, align 4
  %v1_10002a2c = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a28)
  %v1_10002a30 = mul nuw i32 %v2_10002a28, 268435456
  %v2_10002a30 = urem i32 %v0_10002a28, 268435456
  %v3_10002a30 = or i32 %v1_10002a30, %v2_10002a30
  store i32 %v3_10002a30, i32* @r27, align 4
  %v0_10002a34 = load i32, i32* %r16.global-to-local, align 4
  %v1_10002a34 = load i32, i32* %r0.global-to-local, align 4
  %v2_10002a34 = add i32 %v1_10002a34, %v0_10002a34
  %v3_10002a34 = inttoptr i32 %v2_10002a34 to i32*
  %v4_10002a34 = load i32, i32* %v3_10002a34, align 4
  store i32 %v4_10002a34, i32* @r29, align 4
  %v1_10002a38 = add i32 %v4_10002a34, 20
  store i32 %v1_10002a38, i32* @r28, align 4
  %v0_10002a3c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a3c, label %dec_label_pc_10002ae0, label %dec_label_pc_10002a40

dec_label_pc_10002a40:                            ; preds = %dec_label_pc_10002a24
  %v0_10002a40 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002a40, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002a44:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002a44 = load i32, i32* @r26, align 4
  %v1_10002a44 = mul i32 %v0_10002a44, 16
  %v2_10002a44 = udiv i32 %v0_10002a44, 268435456
  %v3_10002a44 = or i32 %v2_10002a44, %v1_10002a44
  store i32 %v3_10002a44, i32* %r26.global-to-local, align 4
  %v1_10002a48 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002a44)
  %v1_10002a4c = mul nuw i32 %v2_10002a44, 268435456
  %v2_10002a4c = urem i32 %v0_10002a44, 268435456
  %v3_10002a4c = or i32 %v1_10002a4c, %v2_10002a4c
  store i32 %v3_10002a4c, i32* @r26, align 4
  %v0_10002a50 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002a50, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002a54:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002a54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002a54, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002a58:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54, %dec_label_pc_10002b10
  %v0_10002a58 = load i32, i32* @r29, align 4
  %v1_10002a58 = add i32 %v0_10002a58, 41
  store i32 %v1_10002a58, i32* %r3.global-to-local, align 4
  %v0_10002a5c = load i32, i32* %r23.global-to-local, align 4
  store i32 268446308, i32* @lr, align 4
  %v2_10002a60 = inttoptr i32 %v1_10002a58 to i8*
  %v3_10002a60 = call i32 @function_10005c08(i8* %v2_10002a60, i32 %v0_10002a5c)
  %v0_10002a64 = load i32, i32* @r25, align 4
  %v1_10002a64 = trunc i32 %v0_10002a64 to i16
  %v2_10002a64 = load i32, i32* @r29, align 4
  %v3_10002a64 = add i32 %v2_10002a64, 10
  %v4_10002a64 = inttoptr i32 %v3_10002a64 to i16*
  store i16 %v1_10002a64, i16* %v4_10002a64, align 2
  %v0_10002a6c = load i32, i32* @r29, align 4
  store i32 %v0_10002a6c, i32* @r3, align 4
  %v2_10002a70 = call i32 @function_100043cc(i32 %v0_10002a6c, i32 20)
  %v3_10002a70 = trunc i32 %v2_10002a70 to i16
  %v0_10002a74 = load i32, i32* @r28, align 4
  store i32 %v0_10002a74, i32* @r4, align 4
  %v3_10002a78 = load i32, i32* @r29, align 4
  %v4_10002a78 = add i32 %v3_10002a78, 10
  %v5_10002a78 = inttoptr i32 %v4_10002a78 to i16*
  store i16 %v3_10002a70, i16* %v5_10002a78, align 2
  %v0_10002a7c = load i32, i32* @r30, align 4
  %v0_10002a80 = load i32, i32* @r25, align 4
  %v1_10002a80 = trunc i32 %v0_10002a80 to i16
  %v2_10002a80 = load i32, i32* @r28, align 4
  %v3_10002a80 = add i32 %v2_10002a80, 6
  %v4_10002a80 = inttoptr i32 %v3_10002a80 to i16*
  store i16 %v1_10002a80, i16* %v4_10002a80, align 2
  %v0_10002a84 = load i32, i32* @r29, align 4
  store i32 %v0_10002a84, i32* %r3.global-to-local, align 4
  %v0_10002a88 = load i32, i32* @r28, align 4
  %v1_10002a88 = add i32 %v0_10002a88, 4
  %v2_10002a88 = inttoptr i32 %v1_10002a88 to i16*
  %v3_10002a88 = load i16, i16* %v2_10002a88, align 2
  %v4_10002a88 = zext i16 %v3_10002a88 to i32
  %v4_10002a8c = call i32 @function_10004430(i32 %v0_10002a84, i32 %v0_10002a74, i32 %v4_10002a88, i32 %v0_10002a7c)
  %v5_10002a8c = trunc i32 %v4_10002a8c to i16
  store i32 %v4_10002a8c, i32* %r3.global-to-local, align 4
  %v3_10002a90 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002a90, i32* %r7.global-to-local, align 4
  %v0_10002a94 = load i32, i32* @r28, align 4
  %v1_10002a94 = add i32 %v0_10002a94, 2
  %v2_10002a94 = inttoptr i32 %v1_10002a94 to i16*
  %v3_10002a94 = load i16, i16* %v2_10002a94, align 2
  %v4_10002a94 = zext i16 %v3_10002a94 to i32
  store i32 %v4_10002a94, i32* %r0.global-to-local, align 4
  %v0_10002a98 = load i32, i32* @r29, align 4
  %v1_10002a9c = mul i32 %v3_10002a90, 24
  store i32 %v1_10002a9c, i32* %r7.global-to-local, align 4
  %v4_10002aa0 = add i32 %v0_10002a94, 6
  %v5_10002aa0 = inttoptr i32 %v4_10002aa0 to i16*
  store i16 %v5_10002a8c, i16* %v5_10002aa0, align 2
  %v0_10002aa4 = load i32, i32* @r31, align 4
  %v0_10002aa8 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002aa8, i32* %r3.global-to-local, align 4
  %v0_10002aac = load i32, i32* %r7.global-to-local, align 4
  %v1_10002aac = load i32, i32* %r14.global-to-local, align 4
  %v2_10002aac = add i32 %v1_10002aac, %v0_10002aac
  store i32 %v2_10002aac, i32* %r7.global-to-local, align 4
  %v0_10002ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002ab4 = trunc i32 %v0_10002ab4 to i16
  %v3_10002ab4 = add i32 %v2_10002aac, 2
  %v4_10002ab4 = inttoptr i32 %v3_10002ab4 to i16*
  store i16 %v1_10002ab4, i16* %v4_10002ab4, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  %v0_10002abc = load i32, i32* @r21, align 4
  %v2_10002abc = add i32 %v2_10002aac, 4
  %v3_10002abc = inttoptr i32 %v2_10002abc to i32*
  store i32 %v0_10002abc, i32* %v3_10002abc, align 4
  store i32 268446404, i32* @lr, align 4
  %v6_10002ac0 = call i32 @function_1000a1fc(i32 %v0_10002aa8, i32 %v0_10002a98, i32 %v0_10002aa4, i32 16384, i32 %v2_10002aac, i32 16)
  store i32 %v6_10002ac0, i32* %r3.global-to-local, align 4
  %v3_10002ac4 = load i32, i32* %stack_var_-2184, align 4
  store i32 %v3_10002ac4, i32* %r9.global-to-local, align 4
  %v1_10002ac8 = add i32 %v3_10002ac4, 1
  store i32 %v1_10002ac8, i32* %r0.global-to-local, align 4
  %v1_10002acc = load i32, i32* %r15.global-to-local, align 4
  %v2_10002acc = icmp slt i32 %v1_10002ac8, %v1_10002acc
  %v4_10002acc = icmp eq i32 %v1_10002ac8, %v1_10002acc
  store i1 %v4_10002acc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10002ac8, i32* %stack_var_-2184, align 4
  br i1 %v2_10002acc, label %dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge, label %dec_label_pc_10002ad8

dec_label_pc_10002a58.dec_label_pc_10002a24_crit_edge: ; preds = %dec_label_pc_10002a58
  %v0_10002a28.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10002a24

dec_label_pc_10002ad8:                            ; preds = %dec_label_pc_10002a58
  %v0_10002ad8 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10002ad8 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10002ad8 = or i1 %v0_10002ad8, %v1_10002ad8
  br i1 %v2_10002ad8, label %dec_label_pc_100029e0.preheader, label %dec_label_pc_100029e4

dec_label_pc_10002ae0:                            ; preds = %dec_label_pc_10002a24
  %v0_10002ae0 = call i32 @function_10005b48()
  %v1_10002ae0 = trunc i32 %v0_10002ae0 to i16
  store i32 %v0_10002ae0, i32* %r3.global-to-local, align 4
  %v3_10002ae4 = load i32, i32* @r29, align 4
  %v4_10002ae4 = add i32 %v3_10002ae4, 4
  %v5_10002ae4 = inttoptr i32 %v4_10002ae4 to i16*
  store i16 %v1_10002ae0, i16* %v5_10002ae4, align 2
  %v0_10002ae8 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10002ae8, label %dec_label_pc_10002aec, label %dec_label_pc_10002a44

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002ae0, %dec_label_pc_10002a40
  %v0_10002aec = call i32 @function_10005b48()
  %v1_10002aec = trunc i32 %v0_10002aec to i16
  store i32 %v0_10002aec, i32* %r3.global-to-local, align 4
  %v0_10002af0 = load i32, i32* @r26, align 4
  %v1_10002af0 = mul i32 %v0_10002af0, 16
  %v2_10002af0 = udiv i32 %v0_10002af0, 268435456
  %v3_10002af0 = or i32 %v2_10002af0, %v1_10002af0
  store i32 %v3_10002af0, i32* %r26.global-to-local, align 4
  %v1_10002af4 = call %0 @__asm_mtcrf(i32 1, i32 %v3_10002af0)
  %v1_10002af8 = mul nuw i32 %v2_10002af0, 268435456
  %v2_10002af8 = urem i32 %v0_10002af0, 268435456
  %v3_10002af8 = or i32 %v1_10002af8, %v2_10002af8
  store i32 %v3_10002af8, i32* @r26, align 4
  %v3_10002afc = load i32, i32* @r29, align 4
  %v4_10002afc = add i32 %v3_10002afc, 20
  %v5_10002afc = inttoptr i32 %v4_10002afc to i16*
  store i16 %v1_10002aec, i16* %v5_10002afc, align 2
  %v0_10002b00 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10002b00, label %dec_label_pc_10002b04, label %dec_label_pc_10002a54

dec_label_pc_10002b04:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002a44
  %v0_10002b04 = call i32 @function_10005b48()
  %v1_10002b04 = trunc i32 %v0_10002b04 to i16
  store i32 %v0_10002b04, i32* %r3.global-to-local, align 4
  %v3_10002b08 = load i32, i32* @r28, align 4
  %v4_10002b08 = add i32 %v3_10002b08, 2
  %v5_10002b08 = inttoptr i32 %v4_10002b08 to i16*
  store i16 %v1_10002b04, i16* %v5_10002b08, align 2
  %v0_10002b0c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10002b0c, label %dec_label_pc_10002b10, label %dec_label_pc_10002a58

dec_label_pc_10002b10:                            ; preds = %dec_label_pc_10002b04, %dec_label_pc_10002a54
  %v0_10002b10 = call i32 @function_10005b48()
  %v1_10002b10 = trunc i32 %v0_10002b10 to i16
  store i32 %v0_10002b10, i32* %r3.global-to-local, align 4
  %v3_10002b14 = load i32, i32* @r29, align 4
  %v4_10002b14 = add i32 %v3_10002b14, 28
  %v5_10002b14 = inttoptr i32 %v4_10002b14 to i16*
  store i16 %v1_10002b10, i16* %v5_10002b14, align 2
  br label %dec_label_pc_10002a58

dec_label_pc_10002b28:                            ; preds = %dec_label_pc_10002838
  %v0_10002b28 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10002b28, i32* %r3.global-to-local, align 4
  store i32 268446512, i32* @lr, align 4
  %v0_10002b2c = call i32 @function_1000955c()
  store i32 %v0_10002b2c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002b30

dec_label_pc_10002b30:                            ; preds = %dec_label_pc_10002810, %dec_label_pc_10002808, %dec_label_pc_10002b28
  store i32 %v0_1000255c, i32* %r0.global-to-local, align 4
  %v1_10002b44 = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000254c)
  store i32 %v0_1000257c, i32* %r24.global-to-local, align 4
  store i32 %v0_10002580, i32* %r25.global-to-local, align 4
  store i32 %v0_10002584, i32* %r26.global-to-local, align 4
  store i32 %v0_10002588, i32* %r27.global-to-local, align 4
  store i32 %v0_1000258c, i32* %r28.global-to-local, align 4
  store i32 %v0_100025b0, i32* %r30.global-to-local, align 4
  store i32 %v0_1000259c, i32* %r31.global-to-local, align 4
  %v0_10002b8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002b8c

dec_label_pc_10002b90:                            ; preds = %dec_label_pc_100027a4
  store i32 1246898730, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002b9c:                            ; preds = %dec_label_pc_100027bc
  store i32 1074151430, i32* @r21, align 4
  br label %dec_label_pc_10002808

dec_label_pc_10002ba8:                            ; preds = %dec_label_pc_100027b4
  store i32 134744072, i32* @r21, align 4
  br label %dec_label_pc_10002808

; uselistorder directives
  uselistorder i32 %v0_10002b10, { 1, 0 }
  uselistorder i32 %v0_10002b04, { 1, 0 }
  uselistorder i32 %v0_10002af0, { 2, 1, 0 }
  uselistorder i32 %v0_10002aec, { 1, 0 }
  uselistorder i32 %v0_10002ae0, { 1, 0 }
  uselistorder i1 %v1_10002ad8, { 1, 0 }
  uselistorder i1 %v0_10002ad8, { 1, 0 }
  uselistorder i32 %v1_10002ac8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10002a8c, { 1, 0 }
  uselistorder i32 %v0_10002a44, { 2, 1, 0 }
  uselistorder i32 %v0_10002a28, { 2, 1, 0 }
  uselistorder i32 %v1_10002a1c, { 1, 0 }
  uselistorder i32 %v0_100029a4, { 2, 0, 1 }
  uselistorder i32 %v1_10002994, { 1, 0 }
  uselistorder i32 %v1_1000298c, { 0, 2, 1 }
  uselistorder i32 %v1_100028c0, { 1, 0 }
  uselistorder i32 %v1_100028b8, { 1, 0 }
  uselistorder i32 %v2_10002b1c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10002b1c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_10002878, { 1, 0 }
  uselistorder i32 %v0_10002808, { 1, 0, 2 }
  uselistorder i1 %v2_100027bc, { 1, 0 }
  uselistorder i32 %v1_100027a8, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100027a0, { 2, 1, 0 }
  uselistorder i32 %v1_10002788, { 1, 2, 0 }
  uselistorder i32 %v1_10002764, { 1, 0 }
  uselistorder i32 %v0_10002758, { 1, 0 }
  uselistorder i32 %v2_10002754, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10002734, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000272c, { 1, 2, 0, 3, 5, 4, 6 }
  uselistorder i32 %v0_100026d4, { 1, 0, 2, 3 }
  uselistorder i8 %v5_10002614, { 1, 0 }
  uselistorder i8 %v5_100025dc, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32* %r3.global-to-local, { 30, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 3, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 4, 33, 34, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 2, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 24, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32* %ctr.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002b30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002a58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100029e4, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0, { 1, 0 }
  uselistorder label %dec_label_pc_100029e0.preheader, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000290c, { 1, 0 }
  uselistorder label %dec_label_pc_10002808, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_10002784, { 1, 0 }
}

define i32 @function_10002bb4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10002bb4:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10002bb8 = load i32, i32* @lr, align 4
  store i32 %v0_10002bb8, i32* %r0.global-to-local, align 4
  %v0_10002bbc = call i32 @__asm_mfcr()
  store i32 %v0_10002bbc, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10002bcc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10002bbc, i32* %r21.global-to-local, align 4
  %v0_10002c04 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10002c0c = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268446760, i32* @lr, align 4
  %v2_10002c24 = call i32 @function_1000a5d4(i32 16, i32 16)
  store i32 %v2_10002c24, i32* %r22.global-to-local, align 4
  %v0_10002c30 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10002c30, i32* %r3.global-to-local, align 4
  store i32 268446776, i32* @lr, align 4
  %v2_10002c34 = call i32 @function_1000a5d4(i32 %v0_10002c30, i32 4)
  %v0_10002c38 = load i32, i32* @r28, align 4
  store i32 %v2_10002c34, i32* %r23.global-to-local, align 4
  %v0_10002c48 = load i32, i32* @r29, align 4
  store i32 %v0_10002c48, i32* %r3.global-to-local, align 4
  store i32 268446800, i32* @lr, align 4
  %v4_10002c4c = inttoptr i32 %v0_10002c38 to i32*
  %v5_10002c4c = call i32 @function_100006a8(i32 %v0_10002c48, i32* %v4_10002c4c, i32 2, i32 0)
  %v5_10002c5c = trunc i32 %v5_10002c4c to i8
  %v0_10002c64 = load i32, i32* @r28, align 4
  %v0_10002c68 = load i32, i32* @r29, align 4
  store i32 %v0_10002c68, i32* %r3.global-to-local, align 4
  store i32 268446832, i32* @lr, align 4
  %v4_10002c6c = inttoptr i32 %v0_10002c64 to i32*
  %v5_10002c6c = call i32 @function_100006a8(i32 %v0_10002c68, i32* %v4_10002c6c, i32 3, i32 65535)
  %v0_10002c70 = load i32, i32* @r28, align 4
  store i32 %v5_10002c6c, i32* @r31, align 4
  %v0_10002c80 = load i32, i32* @r29, align 4
  store i32 %v0_10002c80, i32* %r3.global-to-local, align 4
  store i32 268446856, i32* @lr, align 4
  %v4_10002c84 = inttoptr i32 %v0_10002c70 to i32*
  %v5_10002c84 = call i32 @function_100006a8(i32 %v0_10002c80, i32* %v4_10002c84, i32 4, i32 64)
  %v0_10002c88 = load i32, i32* @r28, align 4
  %v5_10002c94 = trunc i32 %v5_10002c84 to i8
  %v0_10002c9c = load i32, i32* @r29, align 4
  store i32 %v0_10002c9c, i32* %r3.global-to-local, align 4
  store i32 268446884, i32* @lr, align 4
  %v4_10002ca0 = inttoptr i32 %v0_10002c88 to i32*
  %v5_10002ca0 = call i32 @function_100006a8(i32 %v0_10002c9c, i32* %v4_10002ca0, i32 5, i32 1)
  %v1_10002ca8 = urem i32 %v5_10002ca0, 256
  %v0_10002cb4 = load i32, i32* @r28, align 4
  %v0_10002cbc = load i32, i32* @r29, align 4
  store i32 %v0_10002cbc, i32* %r3.global-to-local, align 4
  store i32 268446916, i32* @lr, align 4
  %v4_10002cc0 = inttoptr i32 %v0_10002cb4 to i32*
  %v5_10002cc0 = call i32 @function_100006a8(i32 %v0_10002cbc, i32* %v4_10002cc0, i32 7, i32 65535)
  %v0_10002cc4 = load i32, i32* @r28, align 4
  %v5_10002cd0 = trunc i32 %v5_10002cc0 to i16
  %v0_10002cd8 = load i32, i32* @r29, align 4
  store i32 %v0_10002cd8, i32* %r3.global-to-local, align 4
  store i32 268446944, i32* @lr, align 4
  %v4_10002cdc = inttoptr i32 %v0_10002cc4 to i32*
  %v5_10002cdc = call i32 @function_100006a8(i32 %v0_10002cd8, i32* %v4_10002cdc, i32 11, i32 1)
  %v0_10002ce0 = load i32, i32* @r28, align 4
  %v1_10002ce4 = urem i32 %v5_10002cdc, 256
  %v0_10002cf4 = load i32, i32* @r29, align 4
  store i32 %v0_10002cf4, i32* %r3.global-to-local, align 4
  store i32 268446972, i32* @lr, align 4
  %v4_10002cf8 = inttoptr i32 %v0_10002ce0 to i32*
  %v5_10002cf8 = call i32 @function_100006a8(i32 %v0_10002cf4, i32* %v4_10002cf8, i32 12, i32 1)
  %v0_10002cfc = load i32, i32* @r28, align 4
  %v1_10002d08 = urem i32 %v5_10002cf8, 256
  %v0_10002d0c = load i32, i32* @r29, align 4
  store i32 %v0_10002d0c, i32* %r3.global-to-local, align 4
  store i32 268446996, i32* @lr, align 4
  %v4_10002d10 = inttoptr i32 %v0_10002cfc to i32*
  %v5_10002d10 = call i32 @function_100006a8(i32 %v0_10002d0c, i32* %v4_10002d10, i32 13, i32 1)
  %v0_10002d14 = load i32, i32* @r28, align 4
  %v1_10002d20 = urem i32 %v5_10002d10, 256
  %v0_10002d24 = load i32, i32* @r29, align 4
  store i32 %v0_10002d24, i32* %r3.global-to-local, align 4
  store i32 268447020, i32* @lr, align 4
  %v4_10002d28 = inttoptr i32 %v0_10002d14 to i32*
  %v5_10002d28 = call i32 @function_100006a8(i32 %v0_10002d24, i32* %v4_10002d28, i32 14, i32 1)
  %v0_10002d2c = load i32, i32* @r28, align 4
  %v1_10002d38 = urem i32 %v5_10002d28, 256
  %v0_10002d3c = load i32, i32* @r29, align 4
  store i32 %v0_10002d3c, i32* %r3.global-to-local, align 4
  store i32 268447044, i32* @lr, align 4
  %v4_10002d40 = inttoptr i32 %v0_10002d2c to i32*
  %v5_10002d40 = call i32 @function_100006a8(i32 %v0_10002d3c, i32* %v4_10002d40, i32 15, i32 1)
  %v0_10002d44 = load i32, i32* @r28, align 4
  %v1_10002d50 = urem i32 %v5_10002d40, 256
  %v0_10002d54 = load i32, i32* @r29, align 4
  store i32 %v0_10002d54, i32* %r3.global-to-local, align 4
  store i32 268447068, i32* @lr, align 4
  %v4_10002d58 = inttoptr i32 %v0_10002d44 to i32*
  %v5_10002d58 = call i32 @function_100006a8(i32 %v0_10002d54, i32* %v4_10002d58, i32 16, i32 1)
  %v0_10002d64 = load i32, i32* @r28, align 4
  %v1_10002d68 = urem i32 %v5_10002d58, 256
  %v0_10002d6c = load i32, i32* @r29, align 4
  store i32 %v0_10002d6c, i32* %r3.global-to-local, align 4
  store i32 268447092, i32* @lr, align 4
  %v4_10002d70 = inttoptr i32 %v0_10002d64 to i32*
  %v5_10002d70 = call i32 @function_100006a8(i32 %v0_10002d6c, i32* %v4_10002d70, i32 0, i32 768)
  %v0_10002d74 = load i32, i32* @r28, align 4
  store i32 %v5_10002d70, i32* %r25.global-to-local, align 4
  %v0_10002d84 = load i32, i32* @r29, align 4
  store i32 %v0_10002d84, i32* %r3.global-to-local, align 4
  store i32 268447116, i32* @lr, align 4
  %v4_10002d88 = inttoptr i32 %v0_10002d74 to i32*
  %v5_10002d88 = call i32 @function_100006a8(i32 %v0_10002d84, i32* %v4_10002d88, i32 1, i32 1)
  %v1_10002d90 = urem i32 %v5_10002d88, 256
  store i32 %v1_10002d90, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447136, i32* @lr, align 4
  %v3_10002d9c = call i32 @function_1000a278(i32 2, i32 3, i32 6)
  store i32 %v3_10002d9c, i32* %r3.global-to-local, align 4
  %v3_10002da0 = icmp eq i32 %v3_10002d9c, -1
  store i1 %v3_10002da0, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002d9c, i32* %r24.global-to-local, align 4
  br i1 %v3_10002da0, label %dec_label_pc_10002f60, label %dec_label_pc_10002dac

dec_label_pc_10002dac:                            ; preds = %dec_label_pc_10002bb4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10002db8 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268447176, i32* @lr, align 4
  %v4_10002dc4 = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_10002db8, i32 4)
  store i32 %v4_10002dc4, i32* %r3.global-to-local, align 4
  %v3_10002dc8 = icmp eq i32 %v4_10002dc4, -1
  store i1 %v3_10002dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002dc8, label %dec_label_pc_10002f58, label %dec_label_pc_10002dd0

dec_label_pc_10002dd0:                            ; preds = %dec_label_pc_10002dac
  %v0_10002dd0 = load i32, i32* %r21.global-to-local, align 4
  %v1_10002dd0 = icmp slt i32 %v0_10002dd0, 0
  %v3_10002dd0 = icmp eq i32 %v0_10002dd0, 0
  store i1 %v1_10002dd0, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10002dd0, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10002ddc = load i32, i32* @r31, align 4
  %v1_10002ddc = urem i32 %v0_10002ddc, 65536
  store i32 %v1_10002ddc, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10002dd0, 1
  br i1 %tmp49, label %dec_label_pc_100030f8, label %dec_label_pc_10002de4

dec_label_pc_10002de4:                            ; preds = %dec_label_pc_10002dd0
  %v4_10002de4 = sext i16 %v5_10002cd0 to i32
  store i32 %v4_10002de4, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_10002e68 = ptrtoint i32* %stack_var_-400 to i32
  %v2_10002e88 = ptrtoint i32* %stack_var_-368 to i32
  %v2_10002e94 = ptrtoint i32* %stack_var_-384 to i32
  %v2_10002e98 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10002ed0 = zext i16 %tmp13 to i32
  %v1_10002f00 = and i32 %tmp, 1179648
  %v3_10003014 = icmp eq i32 %v1_10002ca8, 0
  %v4_10003034 = sext i8 %v5_10002c5c to i32
  %v4_1000303c = sext i8 %v5_10002c94 to i32
  %v1_10002f04 = and i32 %tmp, 327680
  %v3_10002f04 = icmp eq i32 %v1_10002f04, 0
  %v4_10002f0c = icmp eq i32 %v1_10002f00, 1179648
  br label %dec_label_pc_10002df0

dec_label_pc_10002df0:                            ; preds = %dec_label_pc_100030e4, %dec_label_pc_10002f18, %dec_label_pc_10002de4
  %v0_10002df0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10002df0 = add i32 %v0_10002df0, 40
  store i32 %v1_10002df0, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e0053 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  store i32 %v3_10002e0053, i32* %r3.global-to-local, align 4
  %v3_10002e0455 = icmp eq i32 %v3_10002e0053, -1
  store i1 %v3_10002e0455, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e0053, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e0455, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002e10:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0
  store i32 3, i32* @r4, align 4
  store i32 268447264, i32* @lr, align 4
  %v1_10002e1c = call i32 @function_10009474(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10002e28 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e28, i32* %r3.global-to-local, align 4
  store i32 268447284, i32* @lr, align 4
  %v2_10002e30 = call i32 @function_10009474(i32 %v0_10002e28)
  store i32 %v2_10002e30, i32* %r3.global-to-local, align 4
  %v3_10002e34 = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10002e3c = mul i32 %v3_10002e34, 24
  store i32 %v1_10002e3c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-400, align 4
  %v0_10002e44 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002e44 = add i32 %v0_10002e44, %v1_10002e3c
  store i32 %v2_10002e44, i32* %r11.global-to-local, align 4
  %v1_10002e48 = add i32 %v2_10002e44, 20
  %v2_10002e48 = inttoptr i32 %v1_10002e48 to i8*
  %v3_10002e48 = load i8, i8* %v2_10002e48, align 1
  %v4_10002e48 = zext i8 %v3_10002e48 to i32
  store i32 %v4_10002e48, i32* %r9.global-to-local, align 4
  %v3_10002e4c = icmp eq i8 %v3_10002e48, 31
  store i1 %v3_10002e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10002e48, 32
  %v1_10002f24 = add i32 %v2_10002e44, 16
  %v2_10002f24 = inttoptr i32 %v1_10002f24 to i32*
  %v3_10002f24 = load i32, i32* %v2_10002f24, align 4
  br i1 %tmp50, label %dec_label_pc_10002f24, label %dec_label_pc_10002e54

dec_label_pc_10002e54:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r0.global-to-local, align 4
  %v0_10002e5c = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002e5c, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002e60:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.0 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  store i32 %v4_10002de4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002e68:                            ; preds = %dec_label_pc_10002f4c, %dec_label_pc_10002e60
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10002f4c ], [ %stack_var_-396.0, %dec_label_pc_10002e60 ]
  %storemerge = phi i16 [ %v1_10002f4c, %dec_label_pc_10002f4c ], [ %v5_10002cd0, %dec_label_pc_10002e60 ]
  %v0_10002e70 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002e70, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10002e78.22 to i32), i32* @lr, align 4
  %v3_10002e74 = call i32 @function_1000a078(i32 %v0_10002e70, i32 %v2_10002e68, i32 16)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268447360, i32* @lr, align 4
  %v0_10002e7c = call i32 @function_1000992c()
  store i32 %v0_10002e7c, i32* %r3.global-to-local, align 4
  store i32 %v0_10002e7c, i32* @r31, align 4
  %v4_10002ec4 = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_10002ed4 = zext i16 %storemerge to i32
  %v4_10002ed8 = icmp eq i16 %storemerge, %tmp13
  %v4_10002ec4.not = xor i1 %v4_10002ec4, true
  br label %dec_label_pc_10002e84

dec_label_pc_10002e84:                            ; preds = %dec_label_pc_10002ee0, %dec_label_pc_10002e68
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_10002e94, i32* %r7.global-to-local, align 4
  store i32 %v2_10002e98, i32* %r8.global-to-local, align 4
  %v0_10002e9c = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002e9c, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268447400, i32* @lr, align 4
  %v6_10002ea4 = call i32 @function_1000a184(i32 %v0_10002e9c, i32 %v2_10002e88, i32 256, i32 16384, i32 %v2_10002e94, i32 %v2_10002e98)
  store i32 %v6_10002ea4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10002eb0 = icmp eq i32 %v6_10002ea4, -1
  store i1 %v3_10002eb0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10002eb0, label %dec_label_pc_10002f60, label %dec_label_pc_10002ebc

dec_label_pc_10002ebc:                            ; preds = %dec_label_pc_10002e84
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_10002ec4, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_10002ea4, 41
  %or.cond = or i1 %tmp51, %v4_10002ec4.not
  br i1 %or.cond, label %dec_label_pc_10002ee0, label %dec_label_pc_10002ed0

dec_label_pc_10002ed0:                            ; preds = %dec_label_pc_10002ebc
  store i32 %v4_10002ed0, i32* %r0.global-to-local, align 4
  store i32 %v4_10002ed4, i32* %r8.global-to-local, align 4
  store i1 %v4_10002ed8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002ed8, label %dec_label_pc_10002efc, label %dec_label_pc_10002ee0

dec_label_pc_10002ee0:                            ; preds = %dec_label_pc_10002ebc, %dec_label_pc_10002f14, %dec_label_pc_10002ed0
  store i32 268447460, i32* @lr, align 4
  %v0_10002ee0 = call i32 @function_1000992c()
  %v0_10002ee4 = load i32, i32* @r31, align 4
  %v2_10002ee4 = sub i32 %v0_10002ee0, %v0_10002ee4
  store i32 %v2_10002ee4, i32* %r3.global-to-local, align 4
  %v3_10002ee8 = icmp eq i32 %v2_10002ee4, 10
  store i1 %v3_10002ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_10002ee4, 11
  br i1 %tmp52, label %dec_label_pc_10002e84, label %dec_label_pc_10002ef0

dec_label_pc_10002ef0:                            ; preds = %dec_label_pc_10002ee0
  %v0_10002ef0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002ef0, i32* %r3.global-to-local, align 4
  store i32 268447480, i32* @lr, align 4
  %v0_10002ef4 = call i32 @function_1000955c()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268447236, i32* @lr, align 4
  %v3_10002e00 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  store i32 %v3_10002e00, i32* %r3.global-to-local, align 4
  %v3_10002e04 = icmp eq i32 %v3_10002e00, -1
  store i1 %v3_10002e04, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10002e00, i32* %r28.global-to-local, align 4
  br i1 %v3_10002e04, label %dec_label_pc_100030e4, label %dec_label_pc_10002e10

dec_label_pc_10002efc:                            ; preds = %dec_label_pc_10002ed0
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10002f00, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10002f0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10002f0c, label %dec_label_pc_10002fc0, label %dec_label_pc_10002f14

dec_label_pc_10002f14:                            ; preds = %dec_label_pc_10002efc
  br i1 %v3_10002f04, label %dec_label_pc_10002ee0, label %dec_label_pc_10002f18

dec_label_pc_10002f18:                            ; preds = %dec_label_pc_10002f14
  %v0_10002f18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10002f18, i32* %r3.global-to-local, align 4
  store i32 268447520, i32* @lr, align 4
  %v0_10002f1c = call i32 @function_1000955c()
  store i32 %v0_10002f1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002df0

dec_label_pc_10002f24:                            ; preds = %dec_label_pc_10002e10
  store i32 %v3_10002f24, i32* %r29.global-to-local, align 4
  %v0_10002f28 = call i32 @function_10005b48()
  store i32 %v0_10002f28, i32* %r3.global-to-local, align 4
  %v3_10002f2c = load i32, i32* %stack_var_-408, align 4
  %v1_10002f30 = mul i32 %v3_10002f2c, 24
  %v1_10002f34 = load i32, i32* %r20.global-to-local, align 4
  %v2_10002f34 = add i32 %v1_10002f34, %v1_10002f30
  store i32 %v2_10002f34, i32* %r9.global-to-local, align 4
  %v1_10002f38 = add i32 %v2_10002f34, 20
  %v2_10002f38 = inttoptr i32 %v1_10002f38 to i8*
  %v3_10002f38 = load i8, i8* %v2_10002f38, align 1
  %v4_10002f38 = zext i8 %v3_10002f38 to i32
  store i32 %v4_10002f38, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10002f38, 64
  %v2_10002f3c = zext i8 %tmp56 to i32
  %v3_10002f3c = lshr i32 %v0_10002f28, %v2_10002f3c
  store i32 %v3_10002f3c, i32* %r3.global-to-local, align 4
  %v0_10002f40 = load i32, i32* %r29.global-to-local, align 4
  %v2_10002f40 = add i32 %v3_10002f3c, %v0_10002f40
  store i32 %v2_10002f40, i32* %r29.global-to-local, align 4
  %v0_10002f48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f48, label %dec_label_pc_10002f4c, label %dec_label_pc_10002e60

dec_label_pc_10002f4c:                            ; preds = %dec_label_pc_10002f24, %dec_label_pc_10002e54
  %stack_var_-396.2 = phi i32 [ %v2_10002f40, %dec_label_pc_10002f24 ], [ %v3_10002f24, %dec_label_pc_10002e54 ]
  %v0_10002f4c = call i32 @function_10005b48()
  %v1_10002f4c = trunc i32 %v0_10002f4c to i16
  store i32 %v0_10002f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002e68

dec_label_pc_10002f58:                            ; preds = %dec_label_pc_10002dac
  %v0_10002f58 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_10002f58, i32* %r3.global-to-local, align 4
  store i32 268447584, i32* @lr, align 4
  %v0_10002f5c = call i32 @function_1000955c()
  store i32 %v0_10002f5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10002f60

dec_label_pc_10002f60:                            ; preds = %dec_label_pc_10002e84, %dec_label_pc_10002bb4, %dec_label_pc_10002f58
  store i32 %v0_10002bcc, i32* %r0.global-to-local, align 4
  %v1_10002f74 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10002bbc)
  store i32 %v0_10002c04, i32* %r28.global-to-local, align 4
  store i32 %v0_10002c0c, i32* %r29.global-to-local, align 4
  %v0_10002fbc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10002fbc

dec_label_pc_10002fc0:                            ; preds = %dec_label_pc_10002efc
  %v3_10002fc0 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002fc0, i32* %r29.global-to-local, align 4
  %v0_10002fc4 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10002fc4, i32* @r3, align 4
  %v0_10002fc8 = load i32, i32* @r30, align 4
  %v1_10002fc8 = add i32 %v0_10002fc8, 2
  %v2_10002fc8 = inttoptr i32 %v1_10002fc8 to i16*
  %v3_10002fc8 = load i16, i16* %v2_10002fc8, align 2
  %v4_10002fc8 = zext i16 %v3_10002fc8 to i32
  store i32 %v4_10002fc8, i32* %r11.global-to-local, align 4
  %v1_10002fcc = mul i32 %v3_10002fc0, 16
  store i32 %v1_10002fcc, i32* %r9.global-to-local, align 4
  %v1_10002fd0 = mul i32 %v3_10002fc0, 4
  store i32 %v1_10002fd0, i32* @r29, align 4
  %v1_10002fd4 = load i32, i32* %r22.global-to-local, align 4
  %v3_10002fd4 = add i32 %v1_10002fd4, %v1_10002fcc
  %v4_10002fd4 = inttoptr i32 %v3_10002fd4 to i32*
  store i32 %tmp14, i32* %v4_10002fd4, align 4
  %v0_10002fd8 = load i32, i32* %r22.global-to-local, align 4
  %v1_10002fd8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fd8 = add i32 %v1_10002fd8, %v0_10002fd8
  store i32 %v2_10002fd8, i32* %r9.global-to-local, align 4
  %v0_10002fdc = load i32, i32* %r8.global-to-local, align 4
  %v1_10002fdc = trunc i32 %v0_10002fdc to i16
  %v3_10002fdc = add i32 %v2_10002fd8, 14
  %v4_10002fdc = inttoptr i32 %v3_10002fdc to i16*
  store i16 %v1_10002fdc, i16* %v4_10002fdc, align 2
  %v0_10002fe0 = load i32, i32* @r30, align 4
  %v1_10002fe0 = add i32 %v0_10002fe0, 4
  %v2_10002fe0 = inttoptr i32 %v1_10002fe0 to i32*
  %v3_10002fe0 = load i32, i32* %v2_10002fe0, align 4
  store i32 %v3_10002fe0, i32* %r0.global-to-local, align 4
  %v0_10002fe4 = load i32, i32* %r11.global-to-local, align 4
  %v1_10002fe4 = trunc i32 %v0_10002fe4 to i16
  %v2_10002fe4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10002fe4 = add i32 %v2_10002fe4, 12
  %v4_10002fe4 = inttoptr i32 %v3_10002fe4 to i16*
  store i16 %v1_10002fe4, i16* %v4_10002fe4, align 2
  %v0_10002fe8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10002fe8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002fe8 = add i32 %v1_10002fe8, 4
  %v3_10002fe8 = inttoptr i32 %v2_10002fe8 to i32*
  store i32 %v0_10002fe8, i32* %v3_10002fe8, align 4
  %v0_10002fec = load i32, i32* @r30, align 4
  %v1_10002fec = add i32 %v0_10002fec, 8
  %v2_10002fec = inttoptr i32 %v1_10002fec to i32*
  %v3_10002fec = load i32, i32* %v2_10002fec, align 4
  store i32 %v3_10002fec, i32* %r0.global-to-local, align 4
  %v1_10002ff0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10002ff0 = add i32 %v1_10002ff0, 8
  %v3_10002ff0 = inttoptr i32 %v2_10002ff0 to i32*
  store i32 %v3_10002fec, i32* %v3_10002ff0, align 4
  store i32 268447736, i32* @lr, align 4
  %v0_10002ff4 = call i32 @function_1000a47c()
  store i32 %v0_10002ff4, i32* %r3.global-to-local, align 4
  %v3_10002ff8 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10002ff8, i32* %r0.global-to-local, align 4
  %v1_10002ffc = load i32, i32* @r29, align 4
  %v2_10002ffc = load i32, i32* %r23.global-to-local, align 4
  %v3_10002ffc = add i32 %v2_10002ffc, %v1_10002ffc
  %v4_10002ffc = inttoptr i32 %v3_10002ffc to i32*
  store i32 %v0_10002ff4, i32* %v4_10002ffc, align 4
  %v0_10003000 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003000 = mul i32 %v0_10003000, 4
  store i32 %v1_10003000, i32* %r0.global-to-local, align 4
  %v0_10003004 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003004 = add i32 %v0_10003004, %v1_10003000
  %v3_10003004 = inttoptr i32 %v2_10003004 to i32*
  %v4_10003004 = load i32, i32* %v3_10003004, align 4
  store i32 %v4_10003004, i32* @r31, align 4
  store i32 %v1_10002ca8, i32* %r0.global-to-local, align 4
  %v1_1000300c = inttoptr i32 %v4_10003004 to i32*
  %v2_1000300c = load i32, i32* %v1_1000300c, align 4
  store i32 %v2_1000300c, i32* %r9.global-to-local, align 4
  %v1_10003010 = add i32 %v4_10003004, 20
  store i32 %v1_10003010, i32* @r30, align 4
  store i1 %v3_10003014, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000301c = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_1000301c, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_10003024 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003028 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003028 = trunc i32 %v0_10003028 to i16
  %v2_10003028 = load i32, i32* @r31, align 4
  %v3_10003028 = add i32 %v2_10003028, 4
  %v4_10003028 = inttoptr i32 %v3_10003028 to i16*
  store i16 %v1_10003028, i16* %v4_10003028, align 2
  %v1_1000302c = load i32, i32* @r31, align 4
  %v2_1000302c = inttoptr i32 %v1_1000302c to i32*
  store i32 %v1_10003024, i32* %v2_1000302c, align 4
  %v0_10003030 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003030 = trunc i32 %v0_10003030 to i16
  %v2_10003030 = load i32, i32* @r31, align 4
  %v3_10003030 = add i32 %v2_10003030, 2
  %v4_10003030 = inttoptr i32 %v3_10003030 to i16*
  store i16 %v1_10003030, i16* %v4_10003030, align 2
  store i32 %v4_10003034, i32* %r9.global-to-local, align 4
  %v2_10003038 = load i32, i32* @r31, align 4
  %v3_10003038 = add i32 %v2_10003038, 1
  %v4_10003038 = inttoptr i32 %v3_10003038 to i8*
  store i8 %v5_10002c5c, i8* %v4_10003038, align 1
  store i32 %v4_1000303c, i32* %r0.global-to-local, align 4
  %v2_10003040 = load i32, i32* @r31, align 4
  %v3_10003040 = add i32 %v2_10003040, 8
  %v4_10003040 = inttoptr i32 %v3_10003040 to i8*
  store i8 %v5_10002c94, i8* %v4_10003040, align 1
  %v0_10003044 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10003044, label %dec_label_pc_10003050, label %dec_label_pc_10003048

dec_label_pc_10003048:                            ; preds = %dec_label_pc_10002fc0
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_1000304c = load i32, i32* @r31, align 4
  %v3_1000304c = add i32 %v2_1000304c, 6
  %v4_1000304c = inttoptr i32 %v3_1000304c to i16*
  store i16 16384, i16* %v4_1000304c, align 2
  br label %dec_label_pc_10003050

dec_label_pc_10003050:                            ; preds = %dec_label_pc_10002fc0, %dec_label_pc_10003048
  %v2_10003058 = load i32, i32* @r31, align 4
  %v3_10003058 = add i32 %v2_10003058, 9
  %v4_10003058 = inttoptr i32 %v3_10003058 to i8*
  store i8 6, i8* %v4_10003058, align 1
  %v3_1000305c = load i32, i32* @global_var_1001c6a0.16, align 4
  store i32 %v3_1000305c, i32* %r0.global-to-local, align 4
  %v1_10003060 = load i32, i32* @r31, align 4
  %v2_10003060 = add i32 %v1_10003060, 12
  %v3_10003060 = inttoptr i32 %v2_10003060 to i32*
  store i32 %v3_1000305c, i32* %v3_10003060, align 4
  %v3_10003064 = load i32, i32* %stack_var_-408, align 4
  %v1_10003068 = mul i32 %v3_10003064, 16
  store i32 %v1_10003068, i32* %r9.global-to-local, align 4
  %v1_1000306c = load i32, i32* %r22.global-to-local, align 4
  %v2_1000306c = add i32 %v1_1000306c, %v1_10003068
  %v3_1000306c = inttoptr i32 %v2_1000306c to i32*
  %v4_1000306c = load i32, i32* %v3_1000306c, align 4
  store i32 %v4_1000306c, i32* %r0.global-to-local, align 4
  store i32 %v2_1000306c, i32* %r9.global-to-local, align 4
  %v1_10003074 = add i32 %v2_1000306c, 12
  %v2_10003074 = inttoptr i32 %v1_10003074 to i16*
  %v3_10003074 = load i16, i16* %v2_10003074, align 2
  %v4_10003074 = zext i16 %v3_10003074 to i32
  store i32 %v4_10003074, i32* %r11.global-to-local, align 4
  %v1_10003078 = load i32, i32* @r31, align 4
  %v2_10003078 = add i32 %v1_10003078, 16
  %v3_10003078 = inttoptr i32 %v2_10003078 to i32*
  store i32 %v4_1000306c, i32* %v3_10003078, align 4
  %v0_1000307c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000307c = trunc i32 %v0_1000307c to i16
  %v2_1000307c = load i32, i32* @r31, align 4
  %v3_1000307c = add i32 %v2_1000307c, 20
  %v4_1000307c = inttoptr i32 %v3_1000307c to i16*
  store i16 %v1_1000307c, i16* %v4_1000307c, align 2
  %v0_10003080 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003080 = add i32 %v0_10003080, 8
  %v2_10003080 = inttoptr i32 %v1_10003080 to i32*
  %v3_10003080 = load i32, i32* %v2_10003080, align 4
  store i32 %v3_10003080, i32* %r0.global-to-local, align 4
  %v0_10003084 = load i32, i32* @r30, align 4
  %v1_10003084 = add i32 %v0_10003084, 12
  %v2_10003084 = inttoptr i32 %v1_10003084 to i32*
  %v3_10003084 = load i32, i32* %v2_10003084, align 4
  store i32 %v3_10003084, i32* %r11.global-to-local, align 4
  %v2_10003088 = add i32 %v0_10003084, 4
  %v3_10003088 = inttoptr i32 %v2_10003088 to i32*
  store i32 %v3_10003080, i32* %v3_10003088, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_10003090 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_10003090, i32* %r11.global-to-local, align 4
  %v0_10003094 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003094 = add i32 %v0_10003094, 14
  %v2_10003094 = inttoptr i32 %v1_10003094 to i16*
  %v3_10003094 = load i16, i16* %v2_10003094, align 2
  %v4_10003094 = zext i16 %v3_10003094 to i32
  store i32 %v4_10003094, i32* %r0.global-to-local, align 4
  %v1_10003098 = add i32 %v0_10003094, 4
  %v2_10003098 = inttoptr i32 %v1_10003098 to i32*
  %v3_10003098 = load i32, i32* %v2_10003098, align 4
  store i32 %v3_10003098, i32* %r10.global-to-local, align 4
  %v1_1000309c = or i32 %v1_10003090, 1114112
  store i32 %v1_1000309c, i32* %r11.global-to-local, align 4
  %v2_100030a0 = load i32, i32* @r30, align 4
  %v3_100030a0 = add i32 %v2_100030a0, 2
  %v4_100030a0 = inttoptr i32 %v3_100030a0 to i16*
  store i16 %v3_10003094, i16* %v4_100030a0, align 2
  %v0_100030a4 = load i32, i32* %r10.global-to-local, align 4
  %v1_100030a4 = load i32, i32* @r30, align 4
  %v2_100030a4 = add i32 %v1_100030a4, 8
  %v3_100030a4 = inttoptr i32 %v2_100030a4 to i32*
  store i32 %v0_100030a4, i32* %v3_100030a4, align 4
  %v0_100030a8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100030a8 = load i32, i32* @r30, align 4
  %v2_100030a8 = add i32 %v1_100030a8, 12
  %v3_100030a8 = inttoptr i32 %v2_100030a8 to i32*
  store i32 %v0_100030a8, i32* %v3_100030a8, align 4
  %v0_100030ac = call i32 @function_10005b48()
  %v1_100030ac = trunc i32 %v0_100030ac to i16
  store i32 %v1_10002ce4, i32* %r9.global-to-local, align 4
  %v3_100030b4 = load i32, i32* @r30, align 4
  %v4_100030b4 = add i32 %v3_100030b4, 14
  %v5_100030b4 = inttoptr i32 %v4_100030b4 to i16*
  store i16 %v1_100030ac, i16* %v5_100030b4, align 2
  %v0_100030b8 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100030b8, i32* @r4, align 4
  %v0_100030bc = load i32, i32* @r31, align 4
  %v1_100030bc = add i32 %v0_100030bc, 40
  store i32 %v1_100030bc, i32* @r3, align 4
  %v0_100030c0 = load i32, i32* @r30, align 4
  %v1_100030c0 = add i32 %v0_100030c0, 12
  %v2_100030c0 = inttoptr i32 %v1_100030c0 to i32*
  %v3_100030c0 = load i32, i32* %v2_100030c0, align 4
  store i32 %v3_100030c0, i32* %r0.global-to-local, align 4
  %v1_100030c4 = call i32 @__asm_rlwimi(i32 %v1_10002ce4, i32 21, i32 10, i32 10)
  store i32 %v1_100030c4, i32* %r0.global-to-local, align 4
  %v1_100030c8 = call i32 @__asm_rlwimi(i32 %v1_10002d08, i32 20, i32 11, i32 11)
  store i32 %v1_100030c8, i32* %r0.global-to-local, align 4
  %v1_100030cc = call i32 @__asm_rlwimi(i32 %v1_10002d20, i32 19, i32 12, i32 12)
  store i32 %v1_100030cc, i32* %r0.global-to-local, align 4
  %v1_100030d0 = call i32 @__asm_rlwimi(i32 %v1_10002d38, i32 18, i32 13, i32 13)
  store i32 %v1_100030d0, i32* %r0.global-to-local, align 4
  %v1_100030d4 = call i32 @__asm_rlwimi(i32 %v1_10002d50, i32 17, i32 14, i32 14)
  store i32 %v1_100030d4, i32* %r0.global-to-local, align 4
  %v1_100030d8 = call i32 @__asm_rlwimi(i32 %v1_10002d68, i32 16, i32 15, i32 15)
  store i32 %v1_100030d8, i32* %r0.global-to-local, align 4
  %v1_100030dc = load i32, i32* @r30, align 4
  %v2_100030dc = add i32 %v1_100030dc, 12
  %v3_100030dc = inttoptr i32 %v2_100030dc to i32*
  store i32 %v1_100030d8, i32* %v3_100030dc, align 4
  %v0_100030e0 = call i32 @function_10005d1c()
  store i32 %v0_100030e0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100030e4

dec_label_pc_100030e4:                            ; preds = %dec_label_pc_10002df0, %dec_label_pc_10002ef0, %dec_label_pc_10003050
  %v3_100030e4 = load i32, i32* %stack_var_-408, align 4
  %v1_100030e8 = add i32 %v3_100030e4, 1
  store i32 %v1_100030e8, i32* %r9.global-to-local, align 4
  %v1_100030ec = load i32, i32* %r21.global-to-local, align 4
  %v2_100030ec = icmp slt i32 %v1_100030e8, %v1_100030ec
  %v4_100030ec = icmp eq i32 %v1_100030e8, %v1_100030ec
  store i1 %v4_100030ec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100030e8, i32* %stack_var_-408, align 4
  br i1 %v2_100030ec, label %dec_label_pc_10002df0, label %dec_label_pc_100030f8.loopexit

dec_label_pc_100030f8.loopexit:                   ; preds = %dec_label_pc_100030e4
  %v0_10003104.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003104.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_100030f8

dec_label_pc_100030f8:                            ; preds = %dec_label_pc_100030f8.loopexit, %dec_label_pc_10002dd0
  %v1_10003104.pre = phi i1 [ %v1_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v1_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_10003104.pre = phi i1 [ %v0_10003104.pre.pre, %dec_label_pc_100030f8.loopexit ], [ %v3_10002dd0, %dec_label_pc_10002dd0 ]
  %v0_100030f8 = load i32, i32* %r27.global-to-local, align 4
  %v3_100030f8 = icmp eq i32 %v0_100030f8, 0
  store i1 %v3_100030f8, i1* %cr2_eq.global-to-local, align 1
  %v0_100030fc = load i32, i32* %r25.global-to-local, align 4
  %v1_100030fc = add i32 %v0_100030fc, 40
  store i32 %v1_100030fc, i32* %r26.global-to-local, align 4
  %v1_10003100 = add i32 %v0_100030fc, 20
  store i32 %v1_10003100, i32* @r31, align 4
  br label %dec_label_pc_10003104.outer

dec_label_pc_10003104.outer:                      ; preds = %dec_label_pc_100031d8, %dec_label_pc_100030f8
  %v1_10003104.ph = phi i1 [ %v1_10003104.pre, %dec_label_pc_100030f8 ], [ %v1_100031d8, %dec_label_pc_100031d8 ]
  %v0_10003104.ph = phi i1 [ %v0_10003104.pre, %dec_label_pc_100030f8 ], [ %v0_100031d8, %dec_label_pc_100031d8 ]
  %v2_10003104 = or i1 %v1_10003104.ph, %v0_10003104.ph
  br label %dec_label_pc_10003104

dec_label_pc_10003104:                            ; preds = %dec_label_pc_10003104.outer, %dec_label_pc_10003104
  br i1 %v2_10003104, label %dec_label_pc_10003104, label %dec_label_pc_10003108

dec_label_pc_10003108:                            ; preds = %dec_label_pc_10003104, %dec_label_pc_100031d8
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003118 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003118 = icmp eq i32 %v0_10003118, 65535
  store i1 %v4_10003118, i1* %cr4_eq.global-to-local, align 1
  %v0_1000311c = load i32, i32* @r31, align 4
  %v1_1000311c = urem i32 %v0_1000311c, 65536
  store i32 %v1_1000311c, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003128

dec_label_pc_10003128:                            ; preds = %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, %dec_label_pc_10003108
  %v0_10003134 = phi i1 [ %v0_10003134.pre, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ %v4_10003118, %dec_label_pc_10003108 ]
  %v0_10003128 = phi i32 [ %v1_100031c8, %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge ], [ 0, %dec_label_pc_10003108 ]
  %v1_10003128 = mul i32 %v0_10003128, 4
  store i32 %v1_10003128, i32* %r0.global-to-local, align 4
  %v0_1000312c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000312c = add i32 %v0_1000312c, %v1_10003128
  %v3_1000312c = inttoptr i32 %v2_1000312c to i32*
  %v4_1000312c = load i32, i32* %v3_1000312c, align 4
  store i32 %v4_1000312c, i32* @r29, align 4
  %v1_10003130 = add i32 %v4_1000312c, 20
  store i32 %v1_10003130, i32* %r28.global-to-local, align 4
  br i1 %v0_10003134, label %dec_label_pc_100031e0, label %dec_label_pc_10003138

dec_label_pc_10003138:                            ; preds = %dec_label_pc_10003128
  %v1_10003138 = add i32 %v4_1000312c, 40
  store i32 %v1_10003138, i32* @r3, align 4
  %v0_1000313c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000313c, i32* @r4, align 4
  %v0_10003140 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003140, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_10003144:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0, %dec_label_pc_100031f4
  %v2_10003144 = phi i32 [ %v4_1000312c, %dec_label_pc_10003138 ], [ %v0_100031ec, %dec_label_pc_100031e0 ], [ %v2_10003144.pre, %dec_label_pc_100031f4 ]
  %v0_10003144 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003144 = trunc i32 %v0_10003144 to i16
  %v3_10003144 = add i32 %v2_10003144, 10
  %v4_10003144 = inttoptr i32 %v3_10003144 to i16*
  store i16 %v1_10003144, i16* %v4_10003144, align 2
  %v0_1000314c = load i32, i32* @r29, align 4
  store i32 %v0_1000314c, i32* @r3, align 4
  %v2_10003150 = call i32 @function_100043cc(i32 %v0_1000314c, i32 20)
  %v3_10003150 = trunc i32 %v2_10003150 to i16
  store i32 %v2_10003150, i32* %r3.global-to-local, align 4
  %v3_10003154 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003154, i32* %r9.global-to-local, align 4
  %v3_10003158 = load i32, i32* @r29, align 4
  %v4_10003158 = add i32 %v3_10003158, 10
  %v5_10003158 = inttoptr i32 %v4_10003158 to i16*
  store i16 %v3_10003150, i16* %v5_10003158, align 2
  %v0_1000315c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000315c, i32* @r4, align 4
  %v0_10003160 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003160 = mul i32 %v0_10003160, 16
  store i32 %v1_10003160, i32* %r9.global-to-local, align 4
  %v0_10003164 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003164 = trunc i32 %v0_10003164 to i16
  %v3_10003164 = add i32 %v0_1000315c, 16
  %v4_10003164 = inttoptr i32 %v3_10003164 to i16*
  store i16 %v1_10003164, i16* %v4_10003164, align 2
  %v0_10003168 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003168 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003168 = add i32 %v1_10003168, %v0_10003168
  store i32 %v2_10003168, i32* %r9.global-to-local, align 4
  %v0_1000316c = load i32, i32* @r30, align 4
  %v1_10003170 = add i32 %v2_10003168, 4
  %v2_10003170 = inttoptr i32 %v1_10003170 to i32*
  %v3_10003170 = load i32, i32* %v2_10003170, align 4
  store i32 %v3_10003170, i32* %r11.global-to-local, align 4
  %v0_10003174 = load i32, i32* @r31, align 4
  %v0_10003178 = load i32, i32* @r29, align 4
  store i32 %v0_10003178, i32* %r3.global-to-local, align 4
  %v1_1000317c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000317c = add i32 %v1_1000317c, 4
  %v3_1000317c = inttoptr i32 %v2_1000317c to i32*
  store i32 %v3_10003170, i32* %v3_1000317c, align 4
  %v0_10003180 = load i32, i32* %r11.global-to-local, align 4
  %v1_10003180 = add i32 %v0_10003180, 1
  store i32 %v1_10003180, i32* %r11.global-to-local, align 4
  %v1_10003184 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003184 = add i32 %v1_10003184, 4
  %v3_10003184 = inttoptr i32 %v2_10003184 to i32*
  store i32 %v1_10003180, i32* %v3_10003184, align 4
  %v0_10003188 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003188 = add i32 %v0_10003188, 8
  %v2_10003188 = inttoptr i32 %v1_10003188 to i32*
  %v3_10003188 = load i32, i32* %v2_10003188, align 4
  store i32 %v3_10003188, i32* %r0.global-to-local, align 4
  %v1_1000318c = load i32, i32* %r28.global-to-local, align 4
  %v2_1000318c = add i32 %v1_1000318c, 8
  %v3_1000318c = inttoptr i32 %v2_1000318c to i32*
  store i32 %v3_10003188, i32* %v3_1000318c, align 4
  %v4_10003190 = call i32 @function_10004430(i32 %v0_10003178, i32 %v0_1000315c, i32 %v0_1000316c, i32 %v0_10003174)
  %v5_10003190 = trunc i32 %v4_10003190 to i16
  store i32 %v4_10003190, i32* %r3.global-to-local, align 4
  %v3_10003194 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003194, i32* %r7.global-to-local, align 4
  %v0_10003198 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003198 = add i32 %v0_10003198, 2
  %v2_10003198 = inttoptr i32 %v1_10003198 to i16*
  %v3_10003198 = load i16, i16* %v2_10003198, align 2
  %v4_10003198 = zext i16 %v3_10003198 to i32
  store i32 %v4_10003198, i32* %r0.global-to-local, align 4
  %v0_1000319c = load i32, i32* @r29, align 4
  %v1_100031a0 = mul i32 %v3_10003194, 24
  store i32 %v1_100031a0, i32* %r7.global-to-local, align 4
  %v4_100031a4 = add i32 %v0_10003198, 16
  %v5_100031a4 = inttoptr i32 %v4_100031a4 to i16*
  store i16 %v5_10003190, i16* %v5_100031a4, align 2
  %v0_100031a8 = load i32, i32* %r26.global-to-local, align 4
  %v0_100031ac = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100031ac, i32* %r3.global-to-local, align 4
  %v0_100031b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_100031b0 = load i32, i32* %r20.global-to-local, align 4
  %v2_100031b0 = add i32 %v1_100031b0, %v0_100031b0
  store i32 %v2_100031b0, i32* %r7.global-to-local, align 4
  %v0_100031b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100031b8 = trunc i32 %v0_100031b8 to i16
  %v3_100031b8 = add i32 %v2_100031b0, 2
  %v4_100031b8 = inttoptr i32 %v3_100031b8 to i16*
  store i16 %v1_100031b8, i16* %v4_100031b8, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268448196, i32* @lr, align 4
  %v6_100031c0 = call i32 @function_1000a1fc(i32 %v0_100031ac, i32 %v0_1000319c, i32 %v0_100031a8, i32 16384, i32 %v2_100031b0, i32 16)
  store i32 %v6_100031c0, i32* %r3.global-to-local, align 4
  %v3_100031c4 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100031c4, i32* %r9.global-to-local, align 4
  %v1_100031c8 = add i32 %v3_100031c4, 1
  store i32 %v1_100031c8, i32* %r0.global-to-local, align 4
  %v1_100031cc = load i32, i32* %r21.global-to-local, align 4
  %v2_100031cc = icmp slt i32 %v1_100031c8, %v1_100031cc
  %v4_100031cc = icmp eq i32 %v1_100031c8, %v1_100031cc
  store i1 %v4_100031cc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100031c8, i32* %stack_var_-408, align 4
  br i1 %v2_100031cc, label %dec_label_pc_10003144.dec_label_pc_10003128_crit_edge, label %dec_label_pc_100031d8

dec_label_pc_10003144.dec_label_pc_10003128_crit_edge: ; preds = %dec_label_pc_10003144
  %v0_10003134.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003128

dec_label_pc_100031d8:                            ; preds = %dec_label_pc_10003144
  %v0_100031d8 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_100031d8 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_100031d8 = or i1 %v0_100031d8, %v1_100031d8
  br i1 %v2_100031d8, label %dec_label_pc_10003104.outer, label %dec_label_pc_10003108

dec_label_pc_100031e0:                            ; preds = %dec_label_pc_10003128
  %v0_100031e0 = call i32 @function_10005b48()
  %v1_100031e0 = trunc i32 %v0_100031e0 to i16
  %v0_100031e4 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_100031e4, i32* @r4, align 4
  %v3_100031e8 = load i32, i32* @r29, align 4
  %v4_100031e8 = add i32 %v3_100031e8, 4
  %v5_100031e8 = inttoptr i32 %v4_100031e8 to i16*
  store i16 %v1_100031e0, i16* %v5_100031e8, align 2
  %v0_100031ec = load i32, i32* @r29, align 4
  %v1_100031ec = add i32 %v0_100031ec, 40
  store i32 %v1_100031ec, i32* @r3, align 4
  %v0_100031f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100031f0, label %dec_label_pc_10003144, label %dec_label_pc_100031f4

dec_label_pc_100031f4:                            ; preds = %dec_label_pc_10003138, %dec_label_pc_100031e0
  %v0_100031f4 = call i32 @function_10005d1c()
  store i32 %v0_100031f4, i32* %r3.global-to-local, align 4
  %v2_10003144.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003144

; uselistorder directives
  uselistorder i32 %v0_100031ec, { 1, 0 }
  uselistorder i1 %v1_100031d8, { 1, 0 }
  uselistorder i1 %v0_100031d8, { 1, 0 }
  uselistorder i32 %v1_100031c8, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_10003190, { 1, 0 }
  uselistorder i32 %v0_1000315c, { 1, 0, 2 }
  uselistorder i32 %v2_10003150, { 1, 0 }
  uselistorder i32 %v1_10003128, { 1, 0 }
  uselistorder i32 %v1_100030e8, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1000306c, { 1, 0, 2 }
  uselistorder i32 %v1_10003068, { 1, 0 }
  uselistorder i32 %v1_10003000, { 1, 0 }
  uselistorder i32 %v1_10002fcc, { 1, 0 }
  uselistorder i32 %v0_10002f4c, { 1, 0 }
  uselistorder i32 %v2_10002f40, { 1, 2, 0 }
  uselistorder i1 %v4_10002ec4, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_10002f24, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10002f00, { 1, 0 }
  uselistorder i32 %v1_10002ca8, { 1, 0 }
  uselistorder i8 %v5_10002c94, { 1, 0 }
  uselistorder i8 %v5_10002c5c, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 31, 12, 13, 14, 15, 16, 17, 18, 28, 29, 20, 19, 21, 22, 23, 25, 24, 26, 27, 3, 2, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268447236, { 1, 0 }
  uselistorder label %dec_label_pc_100031f4, { 1, 0 }
  uselistorder label %dec_label_pc_10003144, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003108, { 1, 0 }
  uselistorder label %dec_label_pc_10003104, { 1, 0 }
  uselistorder label %dec_label_pc_100030e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003050, { 1, 0 }
  uselistorder label %dec_label_pc_10002f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10002ee0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10002e10, { 1, 0 }
}

define i32 @function_100031fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_100031fc:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr3_lt.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp13 = call i16 @__decompiler_undefined_function_1()
  %tmp14 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-404 = alloca i32, align 4
  %stack_var_-384 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %v0_10003200 = load i32, i32* @lr, align 4
  store i32 %v0_10003200, i32* %r0.global-to-local, align 4
  %v0_10003204 = call i32 @__asm_mfcr()
  store i32 %v0_10003204, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r20.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003204, i32* %r21.global-to-local, align 4
  %v0_1000324c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003254 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 268448368, i32* @lr, align 4
  %v2_1000326c = call i32 @function_1000a5d4(i32 16, i32 16)
  store i32 %v2_1000326c, i32* %r22.global-to-local, align 4
  %v0_10003278 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10003278, i32* %r3.global-to-local, align 4
  store i32 268448384, i32* @lr, align 4
  %v2_1000327c = call i32 @function_1000a5d4(i32 %v0_10003278, i32 4)
  %v0_10003280 = load i32, i32* @r28, align 4
  store i32 %v2_1000327c, i32* %r23.global-to-local, align 4
  %v0_10003290 = load i32, i32* @r29, align 4
  store i32 %v0_10003290, i32* %r3.global-to-local, align 4
  store i32 268448408, i32* @lr, align 4
  %v4_10003294 = inttoptr i32 %v0_10003280 to i32*
  %v5_10003294 = call i32 @function_100006a8(i32 %v0_10003290, i32* %v4_10003294, i32 2, i32 0)
  %v5_100032a4 = trunc i32 %v5_10003294 to i8
  %v0_100032ac = load i32, i32* @r28, align 4
  %v0_100032b0 = load i32, i32* @r29, align 4
  store i32 %v0_100032b0, i32* %r3.global-to-local, align 4
  store i32 268448440, i32* @lr, align 4
  %v4_100032b4 = inttoptr i32 %v0_100032ac to i32*
  %v5_100032b4 = call i32 @function_100006a8(i32 %v0_100032b0, i32* %v4_100032b4, i32 3, i32 65535)
  %v0_100032b8 = load i32, i32* @r28, align 4
  store i32 %v5_100032b4, i32* @r31, align 4
  %v0_100032c8 = load i32, i32* @r29, align 4
  store i32 %v0_100032c8, i32* %r3.global-to-local, align 4
  store i32 268448464, i32* @lr, align 4
  %v4_100032cc = inttoptr i32 %v0_100032b8 to i32*
  %v5_100032cc = call i32 @function_100006a8(i32 %v0_100032c8, i32* %v4_100032cc, i32 4, i32 64)
  %v0_100032d0 = load i32, i32* @r28, align 4
  %v5_100032dc = trunc i32 %v5_100032cc to i8
  %v0_100032e4 = load i32, i32* @r29, align 4
  store i32 %v0_100032e4, i32* %r3.global-to-local, align 4
  store i32 268448492, i32* @lr, align 4
  %v4_100032e8 = inttoptr i32 %v0_100032d0 to i32*
  %v5_100032e8 = call i32 @function_100006a8(i32 %v0_100032e4, i32* %v4_100032e8, i32 5, i32 1)
  %v1_100032f0 = urem i32 %v5_100032e8, 256
  %v0_100032fc = load i32, i32* @r28, align 4
  %v0_10003304 = load i32, i32* @r29, align 4
  store i32 %v0_10003304, i32* %r3.global-to-local, align 4
  store i32 268448524, i32* @lr, align 4
  %v4_10003308 = inttoptr i32 %v0_100032fc to i32*
  %v5_10003308 = call i32 @function_100006a8(i32 %v0_10003304, i32* %v4_10003308, i32 7, i32 65535)
  %v0_1000330c = load i32, i32* @r28, align 4
  %v5_10003318 = trunc i32 %v5_10003308 to i16
  %v0_10003320 = load i32, i32* @r29, align 4
  store i32 %v0_10003320, i32* %r3.global-to-local, align 4
  store i32 268448552, i32* @lr, align 4
  %v4_10003324 = inttoptr i32 %v0_1000330c to i32*
  %v5_10003324 = call i32 @function_100006a8(i32 %v0_10003320, i32* %v4_10003324, i32 11, i32 0)
  %v0_10003328 = load i32, i32* @r28, align 4
  %v1_1000332c = urem i32 %v5_10003324, 256
  %v0_1000333c = load i32, i32* @r29, align 4
  store i32 %v0_1000333c, i32* %r3.global-to-local, align 4
  store i32 268448580, i32* @lr, align 4
  %v4_10003340 = inttoptr i32 %v0_10003328 to i32*
  %v5_10003340 = call i32 @function_100006a8(i32 %v0_1000333c, i32* %v4_10003340, i32 12, i32 1)
  %v0_10003344 = load i32, i32* @r28, align 4
  %v1_10003350 = urem i32 %v5_10003340, 256
  %v0_10003354 = load i32, i32* @r29, align 4
  store i32 %v0_10003354, i32* %r3.global-to-local, align 4
  store i32 268448604, i32* @lr, align 4
  %v4_10003358 = inttoptr i32 %v0_10003344 to i32*
  %v5_10003358 = call i32 @function_100006a8(i32 %v0_10003354, i32* %v4_10003358, i32 13, i32 1)
  %v0_1000335c = load i32, i32* @r28, align 4
  %v1_10003368 = urem i32 %v5_10003358, 256
  %v0_1000336c = load i32, i32* @r29, align 4
  store i32 %v0_1000336c, i32* %r3.global-to-local, align 4
  store i32 268448628, i32* @lr, align 4
  %v4_10003370 = inttoptr i32 %v0_1000335c to i32*
  %v5_10003370 = call i32 @function_100006a8(i32 %v0_1000336c, i32* %v4_10003370, i32 14, i32 0)
  %v0_10003374 = load i32, i32* @r28, align 4
  %v1_10003380 = urem i32 %v5_10003370, 256
  %v0_10003384 = load i32, i32* @r29, align 4
  store i32 %v0_10003384, i32* %r3.global-to-local, align 4
  store i32 268448652, i32* @lr, align 4
  %v4_10003388 = inttoptr i32 %v0_10003374 to i32*
  %v5_10003388 = call i32 @function_100006a8(i32 %v0_10003384, i32* %v4_10003388, i32 15, i32 0)
  %v0_1000338c = load i32, i32* @r28, align 4
  %v1_10003398 = urem i32 %v5_10003388, 256
  %v0_1000339c = load i32, i32* @r29, align 4
  store i32 %v0_1000339c, i32* %r3.global-to-local, align 4
  store i32 268448676, i32* @lr, align 4
  %v4_100033a0 = inttoptr i32 %v0_1000338c to i32*
  %v5_100033a0 = call i32 @function_100006a8(i32 %v0_1000339c, i32* %v4_100033a0, i32 16, i32 0)
  %v0_100033ac = load i32, i32* @r28, align 4
  %v1_100033b0 = urem i32 %v5_100033a0, 256
  %v0_100033b4 = load i32, i32* @r29, align 4
  store i32 %v0_100033b4, i32* %r3.global-to-local, align 4
  store i32 268448700, i32* @lr, align 4
  %v4_100033b8 = inttoptr i32 %v0_100033ac to i32*
  %v5_100033b8 = call i32 @function_100006a8(i32 %v0_100033b4, i32* %v4_100033b8, i32 0, i32 768)
  %v0_100033bc = load i32, i32* @r28, align 4
  store i32 %v5_100033b8, i32* %r25.global-to-local, align 4
  %v0_100033cc = load i32, i32* @r29, align 4
  store i32 %v0_100033cc, i32* %r3.global-to-local, align 4
  store i32 268448724, i32* @lr, align 4
  %v4_100033d0 = inttoptr i32 %v0_100033bc to i32*
  %v5_100033d0 = call i32 @function_100006a8(i32 %v0_100033cc, i32* %v4_100033d0, i32 1, i32 1)
  %v1_100033d8 = urem i32 %v5_100033d0, 256
  store i32 %v1_100033d8, i32* %r27.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448744, i32* @lr, align 4
  %v3_100033e4 = call i32 @function_1000a278(i32 2, i32 3, i32 6)
  store i32 %v3_100033e4, i32* %r3.global-to-local, align 4
  %v3_100033e8 = icmp eq i32 %v3_100033e4, -1
  store i1 %v3_100033e8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_100033e4, i32* %r24.global-to-local, align 4
  br i1 %v3_100033e8, label %dec_label_pc_100035a8, label %dec_label_pc_100033f4

dec_label_pc_100033f4:                            ; preds = %dec_label_pc_100031fc
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003400 = ptrtoint i32* %stack_var_-408 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-408, align 4
  store i32 268448784, i32* @lr, align 4
  %v4_1000340c = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_10003400, i32 4)
  store i32 %v4_1000340c, i32* %r3.global-to-local, align 4
  %v3_10003410 = icmp eq i32 %v4_1000340c, -1
  store i1 %v3_10003410, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10003410, label %dec_label_pc_100035a0, label %dec_label_pc_10003418

dec_label_pc_10003418:                            ; preds = %dec_label_pc_100033f4
  %v0_10003418 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003418 = icmp slt i32 %v0_10003418, 0
  %v3_10003418 = icmp eq i32 %v0_10003418, 0
  store i1 %v1_10003418, i1* %cr3_lt.global-to-local, align 1
  store i1 %v3_10003418, i1* %cr3_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003424 = load i32, i32* @r31, align 4
  %v1_10003424 = urem i32 %v0_10003424, 65536
  store i32 %v1_10003424, i32* %r19.global-to-local, align 4
  %tmp49 = icmp slt i32 %v0_10003418, 1
  br i1 %tmp49, label %dec_label_pc_10003740, label %dec_label_pc_1000342c

dec_label_pc_1000342c:                            ; preds = %dec_label_pc_10003418
  %v4_1000342c = sext i16 %v5_10003318 to i32
  store i32 %v4_1000342c, i32* %r9.global-to-local, align 4
  store i32 65535, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v2_100034b0 = ptrtoint i32* %stack_var_-400 to i32
  %v2_100034d0 = ptrtoint i32* %stack_var_-368 to i32
  %v2_100034dc = ptrtoint i32* %stack_var_-384 to i32
  %v2_100034e0 = ptrtoint i32* %stack_var_-404 to i32
  %v4_10003518 = zext i16 %tmp13 to i32
  %v1_10003548 = and i32 %tmp, 1179648
  %v3_1000365c = icmp eq i32 %v1_100032f0, 0
  %v4_1000367c = sext i8 %v5_100032a4 to i32
  %v4_10003684 = sext i8 %v5_100032dc to i32
  %v1_1000354c = and i32 %tmp, 327680
  %v3_1000354c = icmp eq i32 %v1_1000354c, 0
  %v4_10003554 = icmp eq i32 %v1_10003548, 1179648
  br label %dec_label_pc_10003438

dec_label_pc_10003438:                            ; preds = %dec_label_pc_1000372c, %dec_label_pc_10003560, %dec_label_pc_1000342c
  %v0_10003438 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003438 = add i32 %v0_10003438, 40
  store i32 %v1_10003438, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_1000344853 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  store i32 %v3_1000344853, i32* %r3.global-to-local, align 4
  %v3_1000344c55 = icmp eq i32 %v3_1000344853, -1
  store i1 %v3_1000344c55, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_1000344853, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c55, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003458:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538
  store i32 3, i32* @r4, align 4
  store i32 268448872, i32* @lr, align 4
  %v1_10003464 = call i32 @function_10009474(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_10003470 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003470, i32* %r3.global-to-local, align 4
  store i32 268448892, i32* @lr, align 4
  %v2_10003478 = call i32 @function_10009474(i32 %v0_10003470)
  store i32 %v2_10003478, i32* %r3.global-to-local, align 4
  %v3_1000347c = load i32, i32* %stack_var_-408, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v1_10003484 = mul i32 %v3_1000347c, 24
  store i32 %v1_10003484, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-400, align 4
  %v0_1000348c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000348c = add i32 %v0_1000348c, %v1_10003484
  store i32 %v2_1000348c, i32* %r11.global-to-local, align 4
  %v1_10003490 = add i32 %v2_1000348c, 20
  %v2_10003490 = inttoptr i32 %v1_10003490 to i8*
  %v3_10003490 = load i8, i8* %v2_10003490, align 1
  %v4_10003490 = zext i8 %v3_10003490 to i32
  store i32 %v4_10003490, i32* %r9.global-to-local, align 4
  %v3_10003494 = icmp eq i8 %v3_10003490, 31
  store i1 %v3_10003494, i1* %cr7_eq.global-to-local, align 1
  %tmp50 = icmp ult i8 %v3_10003490, 32
  %v1_1000356c = add i32 %v2_1000348c, 16
  %v2_1000356c = inttoptr i32 %v1_1000356c to i32*
  %v3_1000356c = load i32, i32* %v2_1000356c, align 4
  br i1 %tmp50, label %dec_label_pc_1000356c, label %dec_label_pc_1000349c

dec_label_pc_1000349c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r0.global-to-local, align 4
  %v0_100034a4 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100034a4, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_100034a8:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.0 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  store i32 %v4_1000342c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100034b0:                            ; preds = %dec_label_pc_10003594, %dec_label_pc_100034a8
  %stack_var_-396.1 = phi i32 [ %stack_var_-396.2, %dec_label_pc_10003594 ], [ %stack_var_-396.0, %dec_label_pc_100034a8 ]
  %storemerge = phi i16 [ %v1_10003594, %dec_label_pc_10003594 ], [ %v5_10003318, %dec_label_pc_100034a8 ]
  %v0_100034b8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100034b8, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100034c0.23 to i32), i32* @lr, align 4
  %v3_100034bc = call i32 @function_1000a078(i32 %v0_100034b8, i32 %v2_100034b0, i32 16)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268448968, i32* @lr, align 4
  %v0_100034c4 = call i32 @function_1000992c()
  store i32 %v0_100034c4, i32* %r3.global-to-local, align 4
  store i32 %v0_100034c4, i32* @r31, align 4
  %v4_1000350c = icmp eq i32 %tmp14, %stack_var_-396.1
  %v4_1000351c = zext i16 %storemerge to i32
  %v4_10003520 = icmp eq i16 %storemerge, %tmp13
  %v4_1000350c.not = xor i1 %v4_1000350c, true
  br label %dec_label_pc_100034cc

dec_label_pc_100034cc:                            ; preds = %dec_label_pc_10003528, %dec_label_pc_100034b0
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 %v2_100034dc, i32* %r7.global-to-local, align 4
  store i32 %v2_100034e0, i32* %r8.global-to-local, align 4
  %v0_100034e4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100034e4, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-404, align 4
  store i32 268449008, i32* @lr, align 4
  %v6_100034ec = call i32 @function_1000a184(i32 %v0_100034e4, i32 %v2_100034d0, i32 256, i32 16384, i32 %v2_100034dc, i32 %v2_100034e0)
  store i32 %v6_100034ec, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_100034f8 = icmp eq i32 %v6_100034ec, -1
  store i1 %v3_100034f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100034f8, label %dec_label_pc_100035a8, label %dec_label_pc_10003504

dec_label_pc_10003504:                            ; preds = %dec_label_pc_100034cc
  store i32 %tmp14, i32* %r10.global-to-local, align 4
  store i32 %stack_var_-396.1, i32* %r0.global-to-local, align 4
  store i1 %v4_1000350c, i1* %cr7_eq.global-to-local, align 1
  %tmp51 = icmp ult i32 %v6_100034ec, 41
  %or.cond = or i1 %tmp51, %v4_1000350c.not
  br i1 %or.cond, label %dec_label_pc_10003528, label %dec_label_pc_10003518

dec_label_pc_10003518:                            ; preds = %dec_label_pc_10003504
  store i32 %v4_10003518, i32* %r0.global-to-local, align 4
  store i32 %v4_1000351c, i32* %r8.global-to-local, align 4
  store i1 %v4_10003520, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003520, label %dec_label_pc_10003544, label %dec_label_pc_10003528

dec_label_pc_10003528:                            ; preds = %dec_label_pc_10003504, %dec_label_pc_1000355c, %dec_label_pc_10003518
  store i32 268449068, i32* @lr, align 4
  %v0_10003528 = call i32 @function_1000992c()
  %v0_1000352c = load i32, i32* @r31, align 4
  %v2_1000352c = sub i32 %v0_10003528, %v0_1000352c
  store i32 %v2_1000352c, i32* %r3.global-to-local, align 4
  %v3_10003530 = icmp eq i32 %v2_1000352c, 10
  store i1 %v3_10003530, i1* %cr7_eq.global-to-local, align 1
  %tmp52 = icmp slt i32 %v2_1000352c, 11
  br i1 %tmp52, label %dec_label_pc_100034cc, label %dec_label_pc_10003538

dec_label_pc_10003538:                            ; preds = %dec_label_pc_10003528
  %v0_10003538 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003538, i32* %r3.global-to-local, align 4
  store i32 268449088, i32* @lr, align 4
  %v0_1000353c = call i32 @function_1000955c()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268448844, i32* @lr, align 4
  %v3_10003448 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  store i32 %v3_10003448, i32* %r3.global-to-local, align 4
  %v3_1000344c = icmp eq i32 %v3_10003448, -1
  store i1 %v3_1000344c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v3_10003448, i32* %r28.global-to-local, align 4
  br i1 %v3_1000344c, label %dec_label_pc_1000372c, label %dec_label_pc_10003458

dec_label_pc_10003544:                            ; preds = %dec_label_pc_10003518
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i32 %v1_10003548, i32* %r11.global-to-local, align 4
  store i32 1179648, i32* %r0.global-to-local, align 4
  store i1 %v4_10003554, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10003554, label %dec_label_pc_10003608, label %dec_label_pc_1000355c

dec_label_pc_1000355c:                            ; preds = %dec_label_pc_10003544
  br i1 %v3_1000354c, label %dec_label_pc_10003528, label %dec_label_pc_10003560

dec_label_pc_10003560:                            ; preds = %dec_label_pc_1000355c
  %v0_10003560 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003560, i32* %r3.global-to-local, align 4
  store i32 268449128, i32* @lr, align 4
  %v0_10003564 = call i32 @function_1000955c()
  store i32 %v0_10003564, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003438

dec_label_pc_1000356c:                            ; preds = %dec_label_pc_10003458
  store i32 %v3_1000356c, i32* %r29.global-to-local, align 4
  %v0_10003570 = call i32 @function_10005b48()
  store i32 %v0_10003570, i32* %r3.global-to-local, align 4
  %v3_10003574 = load i32, i32* %stack_var_-408, align 4
  %v1_10003578 = mul i32 %v3_10003574, 24
  %v1_1000357c = load i32, i32* %r20.global-to-local, align 4
  %v2_1000357c = add i32 %v1_1000357c, %v1_10003578
  store i32 %v2_1000357c, i32* %r9.global-to-local, align 4
  %v1_10003580 = add i32 %v2_1000357c, 20
  %v2_10003580 = inttoptr i32 %v1_10003580 to i8*
  %v3_10003580 = load i8, i8* %v2_10003580, align 1
  %v4_10003580 = zext i8 %v3_10003580 to i32
  store i32 %v4_10003580, i32* %r0.global-to-local, align 4
  %tmp56 = urem i8 %v3_10003580, 64
  %v2_10003584 = zext i8 %tmp56 to i32
  %v3_10003584 = lshr i32 %v0_10003570, %v2_10003584
  store i32 %v3_10003584, i32* %r3.global-to-local, align 4
  %v0_10003588 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003588 = add i32 %v3_10003584, %v0_10003588
  store i32 %v2_10003588, i32* %r29.global-to-local, align 4
  %v0_10003590 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10003590, label %dec_label_pc_10003594, label %dec_label_pc_100034a8

dec_label_pc_10003594:                            ; preds = %dec_label_pc_1000356c, %dec_label_pc_1000349c
  %stack_var_-396.2 = phi i32 [ %v2_10003588, %dec_label_pc_1000356c ], [ %v3_1000356c, %dec_label_pc_1000349c ]
  %v0_10003594 = call i32 @function_10005b48()
  %v1_10003594 = trunc i32 %v0_10003594 to i16
  store i32 %v0_10003594, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100034b0

dec_label_pc_100035a0:                            ; preds = %dec_label_pc_100033f4
  %v0_100035a0 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100035a0, i32* %r3.global-to-local, align 4
  store i32 268449192, i32* @lr, align 4
  %v0_100035a4 = call i32 @function_1000955c()
  store i32 %v0_100035a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100035a8

dec_label_pc_100035a8:                            ; preds = %dec_label_pc_100034cc, %dec_label_pc_100031fc, %dec_label_pc_100035a0
  store i32 %v0_10003214, i32* %r0.global-to-local, align 4
  %v1_100035bc = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003204)
  store i32 %v0_1000324c, i32* %r28.global-to-local, align 4
  store i32 %v0_10003254, i32* %r29.global-to-local, align 4
  %v0_10003604 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003604

dec_label_pc_10003608:                            ; preds = %dec_label_pc_10003544
  %v3_10003608 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003608, i32* %r29.global-to-local, align 4
  %v0_1000360c = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_1000360c, i32* @r3, align 4
  %v0_10003610 = load i32, i32* @r30, align 4
  %v1_10003610 = add i32 %v0_10003610, 2
  %v2_10003610 = inttoptr i32 %v1_10003610 to i16*
  %v3_10003610 = load i16, i16* %v2_10003610, align 2
  %v4_10003610 = zext i16 %v3_10003610 to i32
  store i32 %v4_10003610, i32* %r11.global-to-local, align 4
  %v1_10003614 = mul i32 %v3_10003608, 16
  store i32 %v1_10003614, i32* %r9.global-to-local, align 4
  %v1_10003618 = mul i32 %v3_10003608, 4
  store i32 %v1_10003618, i32* @r29, align 4
  %v1_1000361c = load i32, i32* %r22.global-to-local, align 4
  %v3_1000361c = add i32 %v1_1000361c, %v1_10003614
  %v4_1000361c = inttoptr i32 %v3_1000361c to i32*
  store i32 %tmp14, i32* %v4_1000361c, align 4
  %v0_10003620 = load i32, i32* %r22.global-to-local, align 4
  %v1_10003620 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003620 = add i32 %v1_10003620, %v0_10003620
  store i32 %v2_10003620, i32* %r9.global-to-local, align 4
  %v0_10003624 = load i32, i32* %r8.global-to-local, align 4
  %v1_10003624 = trunc i32 %v0_10003624 to i16
  %v3_10003624 = add i32 %v2_10003620, 14
  %v4_10003624 = inttoptr i32 %v3_10003624 to i16*
  store i16 %v1_10003624, i16* %v4_10003624, align 2
  %v0_10003628 = load i32, i32* @r30, align 4
  %v1_10003628 = add i32 %v0_10003628, 4
  %v2_10003628 = inttoptr i32 %v1_10003628 to i32*
  %v3_10003628 = load i32, i32* %v2_10003628, align 4
  store i32 %v3_10003628, i32* %r0.global-to-local, align 4
  %v0_1000362c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000362c = trunc i32 %v0_1000362c to i16
  %v2_1000362c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000362c = add i32 %v2_1000362c, 12
  %v4_1000362c = inttoptr i32 %v3_1000362c to i16*
  store i16 %v1_1000362c, i16* %v4_1000362c, align 2
  %v0_10003630 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003630 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003630 = add i32 %v1_10003630, 4
  %v3_10003630 = inttoptr i32 %v2_10003630 to i32*
  store i32 %v0_10003630, i32* %v3_10003630, align 4
  %v0_10003634 = load i32, i32* @r30, align 4
  %v1_10003634 = add i32 %v0_10003634, 8
  %v2_10003634 = inttoptr i32 %v1_10003634 to i32*
  %v3_10003634 = load i32, i32* %v2_10003634, align 4
  store i32 %v3_10003634, i32* %r0.global-to-local, align 4
  %v1_10003638 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003638 = add i32 %v1_10003638, 8
  %v3_10003638 = inttoptr i32 %v2_10003638 to i32*
  store i32 %v3_10003634, i32* %v3_10003638, align 4
  store i32 268449344, i32* @lr, align 4
  %v0_1000363c = call i32 @function_1000a47c()
  store i32 %v0_1000363c, i32* %r3.global-to-local, align 4
  %v3_10003640 = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_10003640, i32* %r0.global-to-local, align 4
  %v1_10003644 = load i32, i32* @r29, align 4
  %v2_10003644 = load i32, i32* %r23.global-to-local, align 4
  %v3_10003644 = add i32 %v2_10003644, %v1_10003644
  %v4_10003644 = inttoptr i32 %v3_10003644 to i32*
  store i32 %v0_1000363c, i32* %v4_10003644, align 4
  %v0_10003648 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003648 = mul i32 %v0_10003648, 4
  store i32 %v1_10003648, i32* %r0.global-to-local, align 4
  %v0_1000364c = load i32, i32* %r23.global-to-local, align 4
  %v2_1000364c = add i32 %v0_1000364c, %v1_10003648
  %v3_1000364c = inttoptr i32 %v2_1000364c to i32*
  %v4_1000364c = load i32, i32* %v3_1000364c, align 4
  store i32 %v4_1000364c, i32* @r31, align 4
  store i32 %v1_100032f0, i32* %r0.global-to-local, align 4
  %v1_10003654 = inttoptr i32 %v4_1000364c to i32*
  %v2_10003654 = load i32, i32* %v1_10003654, align 4
  store i32 %v2_10003654, i32* %r9.global-to-local, align 4
  %v1_10003658 = add i32 %v4_1000364c, 20
  store i32 %v1_10003658, i32* @r30, align 4
  store i1 %v3_1000365c, i1* %cr7_eq.global-to-local, align 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10003664 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003664, i32* %r9.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  %v1_1000366c = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v0_10003670 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003670 = trunc i32 %v0_10003670 to i16
  %v2_10003670 = load i32, i32* @r31, align 4
  %v3_10003670 = add i32 %v2_10003670, 4
  %v4_10003670 = inttoptr i32 %v3_10003670 to i16*
  store i16 %v1_10003670, i16* %v4_10003670, align 2
  %v1_10003674 = load i32, i32* @r31, align 4
  %v2_10003674 = inttoptr i32 %v1_10003674 to i32*
  store i32 %v1_1000366c, i32* %v2_10003674, align 4
  %v0_10003678 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003678 = trunc i32 %v0_10003678 to i16
  %v2_10003678 = load i32, i32* @r31, align 4
  %v3_10003678 = add i32 %v2_10003678, 2
  %v4_10003678 = inttoptr i32 %v3_10003678 to i16*
  store i16 %v1_10003678, i16* %v4_10003678, align 2
  store i32 %v4_1000367c, i32* %r9.global-to-local, align 4
  %v2_10003680 = load i32, i32* @r31, align 4
  %v3_10003680 = add i32 %v2_10003680, 1
  %v4_10003680 = inttoptr i32 %v3_10003680 to i8*
  store i8 %v5_100032a4, i8* %v4_10003680, align 1
  store i32 %v4_10003684, i32* %r0.global-to-local, align 4
  %v2_10003688 = load i32, i32* @r31, align 4
  %v3_10003688 = add i32 %v2_10003688, 8
  %v4_10003688 = inttoptr i32 %v3_10003688 to i8*
  store i8 %v5_100032dc, i8* %v4_10003688, align 1
  %v0_1000368c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000368c, label %dec_label_pc_10003698, label %dec_label_pc_10003690

dec_label_pc_10003690:                            ; preds = %dec_label_pc_10003608
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003694 = load i32, i32* @r31, align 4
  %v3_10003694 = add i32 %v2_10003694, 6
  %v4_10003694 = inttoptr i32 %v3_10003694 to i16*
  store i16 16384, i16* %v4_10003694, align 2
  br label %dec_label_pc_10003698

dec_label_pc_10003698:                            ; preds = %dec_label_pc_10003608, %dec_label_pc_10003690
  %v2_100036a0 = load i32, i32* @r31, align 4
  %v3_100036a0 = add i32 %v2_100036a0, 9
  %v4_100036a0 = inttoptr i32 %v3_100036a0 to i8*
  store i8 6, i8* %v4_100036a0, align 1
  %v3_100036a4 = load i32, i32* @global_var_1001c6a0.16, align 4
  store i32 %v3_100036a4, i32* %r0.global-to-local, align 4
  %v1_100036a8 = load i32, i32* @r31, align 4
  %v2_100036a8 = add i32 %v1_100036a8, 12
  %v3_100036a8 = inttoptr i32 %v2_100036a8 to i32*
  store i32 %v3_100036a4, i32* %v3_100036a8, align 4
  %v3_100036ac = load i32, i32* %stack_var_-408, align 4
  %v1_100036b0 = mul i32 %v3_100036ac, 16
  store i32 %v1_100036b0, i32* %r9.global-to-local, align 4
  %v1_100036b4 = load i32, i32* %r22.global-to-local, align 4
  %v2_100036b4 = add i32 %v1_100036b4, %v1_100036b0
  %v3_100036b4 = inttoptr i32 %v2_100036b4 to i32*
  %v4_100036b4 = load i32, i32* %v3_100036b4, align 4
  store i32 %v4_100036b4, i32* %r0.global-to-local, align 4
  store i32 %v2_100036b4, i32* %r9.global-to-local, align 4
  %v1_100036bc = add i32 %v2_100036b4, 12
  %v2_100036bc = inttoptr i32 %v1_100036bc to i16*
  %v3_100036bc = load i16, i16* %v2_100036bc, align 2
  %v4_100036bc = zext i16 %v3_100036bc to i32
  store i32 %v4_100036bc, i32* %r11.global-to-local, align 4
  %v1_100036c0 = load i32, i32* @r31, align 4
  %v2_100036c0 = add i32 %v1_100036c0, 16
  %v3_100036c0 = inttoptr i32 %v2_100036c0 to i32*
  store i32 %v4_100036b4, i32* %v3_100036c0, align 4
  %v0_100036c4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036c4 = trunc i32 %v0_100036c4 to i16
  %v2_100036c4 = load i32, i32* @r31, align 4
  %v3_100036c4 = add i32 %v2_100036c4, 20
  %v4_100036c4 = inttoptr i32 %v3_100036c4 to i16*
  store i16 %v1_100036c4, i16* %v4_100036c4, align 2
  %v0_100036c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100036c8 = add i32 %v0_100036c8, 8
  %v2_100036c8 = inttoptr i32 %v1_100036c8 to i32*
  %v3_100036c8 = load i32, i32* %v2_100036c8, align 4
  store i32 %v3_100036c8, i32* %r0.global-to-local, align 4
  %v0_100036cc = load i32, i32* @r30, align 4
  %v1_100036cc = add i32 %v0_100036cc, 12
  %v2_100036cc = inttoptr i32 %v1_100036cc to i32*
  %v3_100036cc = load i32, i32* %v2_100036cc, align 4
  store i32 %v3_100036cc, i32* %r11.global-to-local, align 4
  %v2_100036d0 = add i32 %v0_100036cc, 4
  %v3_100036d0 = inttoptr i32 %v2_100036d0 to i32*
  store i32 %v3_100036c8, i32* %v3_100036d0, align 4
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_100036d8 = call i32 @__asm_rlwimi(i32 8, i32 28, i32 0, i32 3)
  store i32 %v1_100036d8, i32* %r11.global-to-local, align 4
  %v0_100036dc = load i32, i32* %r9.global-to-local, align 4
  %v1_100036dc = add i32 %v0_100036dc, 14
  %v2_100036dc = inttoptr i32 %v1_100036dc to i16*
  %v3_100036dc = load i16, i16* %v2_100036dc, align 2
  %v4_100036dc = zext i16 %v3_100036dc to i32
  store i32 %v4_100036dc, i32* %r0.global-to-local, align 4
  %v1_100036e0 = add i32 %v0_100036dc, 4
  %v2_100036e0 = inttoptr i32 %v1_100036e0 to i32*
  %v3_100036e0 = load i32, i32* %v2_100036e0, align 4
  store i32 %v3_100036e0, i32* %r10.global-to-local, align 4
  %v1_100036e4 = or i32 %v1_100036d8, 1114112
  store i32 %v1_100036e4, i32* %r11.global-to-local, align 4
  %v2_100036e8 = load i32, i32* @r30, align 4
  %v3_100036e8 = add i32 %v2_100036e8, 2
  %v4_100036e8 = inttoptr i32 %v3_100036e8 to i16*
  store i16 %v3_100036dc, i16* %v4_100036e8, align 2
  %v0_100036ec = load i32, i32* %r10.global-to-local, align 4
  %v1_100036ec = load i32, i32* @r30, align 4
  %v2_100036ec = add i32 %v1_100036ec, 8
  %v3_100036ec = inttoptr i32 %v2_100036ec to i32*
  store i32 %v0_100036ec, i32* %v3_100036ec, align 4
  %v0_100036f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100036f0 = load i32, i32* @r30, align 4
  %v2_100036f0 = add i32 %v1_100036f0, 12
  %v3_100036f0 = inttoptr i32 %v2_100036f0 to i32*
  store i32 %v0_100036f0, i32* %v3_100036f0, align 4
  %v0_100036f4 = call i32 @function_10005b48()
  %v1_100036f4 = trunc i32 %v0_100036f4 to i16
  store i32 %v1_1000332c, i32* %r9.global-to-local, align 4
  %v3_100036fc = load i32, i32* @r30, align 4
  %v4_100036fc = add i32 %v3_100036fc, 14
  %v5_100036fc = inttoptr i32 %v4_100036fc to i16*
  store i16 %v1_100036f4, i16* %v5_100036fc, align 2
  %v0_10003700 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003700, i32* @r4, align 4
  %v0_10003704 = load i32, i32* @r31, align 4
  %v1_10003704 = add i32 %v0_10003704, 40
  store i32 %v1_10003704, i32* @r3, align 4
  %v0_10003708 = load i32, i32* @r30, align 4
  %v1_10003708 = add i32 %v0_10003708, 12
  %v2_10003708 = inttoptr i32 %v1_10003708 to i32*
  %v3_10003708 = load i32, i32* %v2_10003708, align 4
  store i32 %v3_10003708, i32* %r0.global-to-local, align 4
  %v1_1000370c = call i32 @__asm_rlwimi(i32 %v1_1000332c, i32 21, i32 10, i32 10)
  store i32 %v1_1000370c, i32* %r0.global-to-local, align 4
  %v1_10003710 = call i32 @__asm_rlwimi(i32 %v1_10003350, i32 20, i32 11, i32 11)
  store i32 %v1_10003710, i32* %r0.global-to-local, align 4
  %v1_10003714 = call i32 @__asm_rlwimi(i32 %v1_10003368, i32 19, i32 12, i32 12)
  store i32 %v1_10003714, i32* %r0.global-to-local, align 4
  %v1_10003718 = call i32 @__asm_rlwimi(i32 %v1_10003380, i32 18, i32 13, i32 13)
  store i32 %v1_10003718, i32* %r0.global-to-local, align 4
  %v1_1000371c = call i32 @__asm_rlwimi(i32 %v1_10003398, i32 17, i32 14, i32 14)
  store i32 %v1_1000371c, i32* %r0.global-to-local, align 4
  %v1_10003720 = call i32 @__asm_rlwimi(i32 %v1_100033b0, i32 16, i32 15, i32 15)
  store i32 %v1_10003720, i32* %r0.global-to-local, align 4
  %v1_10003724 = load i32, i32* @r30, align 4
  %v2_10003724 = add i32 %v1_10003724, 12
  %v3_10003724 = inttoptr i32 %v2_10003724 to i32*
  store i32 %v1_10003720, i32* %v3_10003724, align 4
  %v0_10003728 = call i32 @function_10005d1c()
  store i32 %v0_10003728, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000372c

dec_label_pc_1000372c:                            ; preds = %dec_label_pc_10003438, %dec_label_pc_10003538, %dec_label_pc_10003698
  %v3_1000372c = load i32, i32* %stack_var_-408, align 4
  %v1_10003730 = add i32 %v3_1000372c, 1
  store i32 %v1_10003730, i32* %r9.global-to-local, align 4
  %v1_10003734 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003734 = icmp slt i32 %v1_10003730, %v1_10003734
  %v4_10003734 = icmp eq i32 %v1_10003730, %v1_10003734
  store i1 %v4_10003734, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003730, i32* %stack_var_-408, align 4
  br i1 %v2_10003734, label %dec_label_pc_10003438, label %dec_label_pc_10003740.loopexit

dec_label_pc_10003740.loopexit:                   ; preds = %dec_label_pc_1000372c
  %v0_1000374c.pre.pre = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_1000374c.pre.pre = load i1, i1* %cr3_lt.global-to-local, align 1
  br label %dec_label_pc_10003740

dec_label_pc_10003740:                            ; preds = %dec_label_pc_10003740.loopexit, %dec_label_pc_10003418
  %v1_1000374c.pre = phi i1 [ %v1_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v1_10003418, %dec_label_pc_10003418 ]
  %v0_1000374c.pre = phi i1 [ %v0_1000374c.pre.pre, %dec_label_pc_10003740.loopexit ], [ %v3_10003418, %dec_label_pc_10003418 ]
  %v0_10003740 = load i32, i32* %r27.global-to-local, align 4
  %v3_10003740 = icmp eq i32 %v0_10003740, 0
  store i1 %v3_10003740, i1* %cr2_eq.global-to-local, align 1
  %v0_10003744 = load i32, i32* %r25.global-to-local, align 4
  %v1_10003744 = add i32 %v0_10003744, 40
  store i32 %v1_10003744, i32* %r26.global-to-local, align 4
  %v1_10003748 = add i32 %v0_10003744, 20
  store i32 %v1_10003748, i32* @r31, align 4
  br label %dec_label_pc_1000374c.outer

dec_label_pc_1000374c.outer:                      ; preds = %dec_label_pc_10003820, %dec_label_pc_10003740
  %v1_1000374c.ph = phi i1 [ %v1_1000374c.pre, %dec_label_pc_10003740 ], [ %v1_10003820, %dec_label_pc_10003820 ]
  %v0_1000374c.ph = phi i1 [ %v0_1000374c.pre, %dec_label_pc_10003740 ], [ %v0_10003820, %dec_label_pc_10003820 ]
  %v2_1000374c = or i1 %v1_1000374c.ph, %v0_1000374c.ph
  br label %dec_label_pc_1000374c

dec_label_pc_1000374c:                            ; preds = %dec_label_pc_1000374c.outer, %dec_label_pc_1000374c
  br i1 %v2_1000374c, label %dec_label_pc_1000374c, label %dec_label_pc_10003750

dec_label_pc_10003750:                            ; preds = %dec_label_pc_1000374c, %dec_label_pc_10003820
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-408, align 4
  %v0_10003760 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003760 = icmp eq i32 %v0_10003760, 65535
  store i1 %v4_10003760, i1* %cr4_eq.global-to-local, align 1
  %v0_10003764 = load i32, i32* @r31, align 4
  %v1_10003764 = urem i32 %v0_10003764, 65536
  store i32 %v1_10003764, i32* @r30, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10003770

dec_label_pc_10003770:                            ; preds = %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, %dec_label_pc_10003750
  %v0_1000377c = phi i1 [ %v0_1000377c.pre, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ %v4_10003760, %dec_label_pc_10003750 ]
  %v0_10003770 = phi i32 [ %v1_10003810, %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge ], [ 0, %dec_label_pc_10003750 ]
  %v1_10003770 = mul i32 %v0_10003770, 4
  store i32 %v1_10003770, i32* %r0.global-to-local, align 4
  %v0_10003774 = load i32, i32* %r23.global-to-local, align 4
  %v2_10003774 = add i32 %v0_10003774, %v1_10003770
  %v3_10003774 = inttoptr i32 %v2_10003774 to i32*
  %v4_10003774 = load i32, i32* %v3_10003774, align 4
  store i32 %v4_10003774, i32* @r29, align 4
  %v1_10003778 = add i32 %v4_10003774, 20
  store i32 %v1_10003778, i32* %r28.global-to-local, align 4
  br i1 %v0_1000377c, label %dec_label_pc_10003828, label %dec_label_pc_10003780

dec_label_pc_10003780:                            ; preds = %dec_label_pc_10003770
  %v1_10003780 = add i32 %v4_10003774, 40
  store i32 %v1_10003780, i32* @r3, align 4
  %v0_10003784 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003784, i32* @r4, align 4
  %v0_10003788 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003788, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000378c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828, %dec_label_pc_1000383c
  %v2_1000378c = phi i32 [ %v4_10003774, %dec_label_pc_10003780 ], [ %v0_10003834, %dec_label_pc_10003828 ], [ %v2_1000378c.pre, %dec_label_pc_1000383c ]
  %v0_1000378c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000378c = trunc i32 %v0_1000378c to i16
  %v3_1000378c = add i32 %v2_1000378c, 10
  %v4_1000378c = inttoptr i32 %v3_1000378c to i16*
  store i16 %v1_1000378c, i16* %v4_1000378c, align 2
  %v0_10003794 = load i32, i32* @r29, align 4
  store i32 %v0_10003794, i32* @r3, align 4
  %v2_10003798 = call i32 @function_100043cc(i32 %v0_10003794, i32 20)
  %v3_10003798 = trunc i32 %v2_10003798 to i16
  store i32 %v2_10003798, i32* %r3.global-to-local, align 4
  %v3_1000379c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000379c, i32* %r9.global-to-local, align 4
  %v3_100037a0 = load i32, i32* @r29, align 4
  %v4_100037a0 = add i32 %v3_100037a0, 10
  %v5_100037a0 = inttoptr i32 %v4_100037a0 to i16*
  store i16 %v3_10003798, i16* %v5_100037a0, align 2
  %v0_100037a4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100037a4, i32* @r4, align 4
  %v0_100037a8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037a8 = mul i32 %v0_100037a8, 16
  store i32 %v1_100037a8, i32* %r9.global-to-local, align 4
  %v0_100037ac = load i32, i32* %r27.global-to-local, align 4
  %v1_100037ac = trunc i32 %v0_100037ac to i16
  %v3_100037ac = add i32 %v0_100037a4, 16
  %v4_100037ac = inttoptr i32 %v3_100037ac to i16*
  store i16 %v1_100037ac, i16* %v4_100037ac, align 2
  %v0_100037b0 = load i32, i32* %r22.global-to-local, align 4
  %v1_100037b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100037b0 = add i32 %v1_100037b0, %v0_100037b0
  store i32 %v2_100037b0, i32* %r9.global-to-local, align 4
  %v0_100037b4 = load i32, i32* @r30, align 4
  %v1_100037b8 = add i32 %v2_100037b0, 4
  %v2_100037b8 = inttoptr i32 %v1_100037b8 to i32*
  %v3_100037b8 = load i32, i32* %v2_100037b8, align 4
  store i32 %v3_100037b8, i32* %r11.global-to-local, align 4
  %v0_100037bc = load i32, i32* @r31, align 4
  %v0_100037c0 = load i32, i32* @r29, align 4
  store i32 %v0_100037c0, i32* %r3.global-to-local, align 4
  %v1_100037c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037c4 = add i32 %v1_100037c4, 4
  %v3_100037c4 = inttoptr i32 %v2_100037c4 to i32*
  store i32 %v3_100037b8, i32* %v3_100037c4, align 4
  %v0_100037c8 = load i32, i32* %r11.global-to-local, align 4
  %v1_100037c8 = add i32 %v0_100037c8, 1
  store i32 %v1_100037c8, i32* %r11.global-to-local, align 4
  %v1_100037cc = load i32, i32* %r9.global-to-local, align 4
  %v2_100037cc = add i32 %v1_100037cc, 4
  %v3_100037cc = inttoptr i32 %v2_100037cc to i32*
  store i32 %v1_100037c8, i32* %v3_100037cc, align 4
  %v0_100037d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100037d0 = add i32 %v0_100037d0, 8
  %v2_100037d0 = inttoptr i32 %v1_100037d0 to i32*
  %v3_100037d0 = load i32, i32* %v2_100037d0, align 4
  store i32 %v3_100037d0, i32* %r0.global-to-local, align 4
  %v1_100037d4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100037d4 = add i32 %v1_100037d4, 8
  %v3_100037d4 = inttoptr i32 %v2_100037d4 to i32*
  store i32 %v3_100037d0, i32* %v3_100037d4, align 4
  %v4_100037d8 = call i32 @function_10004430(i32 %v0_100037c0, i32 %v0_100037a4, i32 %v0_100037b4, i32 %v0_100037bc)
  %v5_100037d8 = trunc i32 %v4_100037d8 to i16
  store i32 %v4_100037d8, i32* %r3.global-to-local, align 4
  %v3_100037dc = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_100037dc, i32* %r7.global-to-local, align 4
  %v0_100037e0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100037e0 = add i32 %v0_100037e0, 2
  %v2_100037e0 = inttoptr i32 %v1_100037e0 to i16*
  %v3_100037e0 = load i16, i16* %v2_100037e0, align 2
  %v4_100037e0 = zext i16 %v3_100037e0 to i32
  store i32 %v4_100037e0, i32* %r0.global-to-local, align 4
  %v0_100037e4 = load i32, i32* @r29, align 4
  %v1_100037e8 = mul i32 %v3_100037dc, 24
  store i32 %v1_100037e8, i32* %r7.global-to-local, align 4
  %v4_100037ec = add i32 %v0_100037e0, 16
  %v5_100037ec = inttoptr i32 %v4_100037ec to i16*
  store i16 %v5_100037d8, i16* %v5_100037ec, align 2
  %v0_100037f0 = load i32, i32* %r26.global-to-local, align 4
  %v0_100037f4 = load i32, i32* %r24.global-to-local, align 4
  store i32 %v0_100037f4, i32* %r3.global-to-local, align 4
  %v0_100037f8 = load i32, i32* %r7.global-to-local, align 4
  %v1_100037f8 = load i32, i32* %r20.global-to-local, align 4
  %v2_100037f8 = add i32 %v1_100037f8, %v0_100037f8
  store i32 %v2_100037f8, i32* %r7.global-to-local, align 4
  %v0_10003800 = load i32, i32* %r0.global-to-local, align 4
  %v1_10003800 = trunc i32 %v0_10003800 to i16
  %v3_10003800 = add i32 %v2_100037f8, 2
  %v4_10003800 = inttoptr i32 %v3_10003800 to i16*
  store i16 %v1_10003800, i16* %v4_10003800, align 2
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 268449804, i32* @lr, align 4
  %v6_10003808 = call i32 @function_1000a1fc(i32 %v0_100037f4, i32 %v0_100037e4, i32 %v0_100037f0, i32 16384, i32 %v2_100037f8, i32 16)
  store i32 %v6_10003808, i32* %r3.global-to-local, align 4
  %v3_1000380c = load i32, i32* %stack_var_-408, align 4
  store i32 %v3_1000380c, i32* %r9.global-to-local, align 4
  %v1_10003810 = add i32 %v3_1000380c, 1
  store i32 %v1_10003810, i32* %r0.global-to-local, align 4
  %v1_10003814 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003814 = icmp slt i32 %v1_10003810, %v1_10003814
  %v4_10003814 = icmp eq i32 %v1_10003810, %v1_10003814
  store i1 %v4_10003814, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10003810, i32* %stack_var_-408, align 4
  br i1 %v2_10003814, label %dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge, label %dec_label_pc_10003820

dec_label_pc_1000378c.dec_label_pc_10003770_crit_edge: ; preds = %dec_label_pc_1000378c
  %v0_1000377c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  br label %dec_label_pc_10003770

dec_label_pc_10003820:                            ; preds = %dec_label_pc_1000378c
  %v0_10003820 = load i1, i1* %cr3_eq.global-to-local, align 1
  %v1_10003820 = load i1, i1* %cr3_lt.global-to-local, align 1
  %v2_10003820 = or i1 %v0_10003820, %v1_10003820
  br i1 %v2_10003820, label %dec_label_pc_1000374c.outer, label %dec_label_pc_10003750

dec_label_pc_10003828:                            ; preds = %dec_label_pc_10003770
  %v0_10003828 = call i32 @function_10005b48()
  %v1_10003828 = trunc i32 %v0_10003828 to i16
  %v0_1000382c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000382c, i32* @r4, align 4
  %v3_10003830 = load i32, i32* @r29, align 4
  %v4_10003830 = add i32 %v3_10003830, 4
  %v5_10003830 = inttoptr i32 %v4_10003830 to i16*
  store i16 %v1_10003828, i16* %v5_10003830, align 2
  %v0_10003834 = load i32, i32* @r29, align 4
  %v1_10003834 = add i32 %v0_10003834, 40
  store i32 %v1_10003834, i32* @r3, align 4
  %v0_10003838 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003838, label %dec_label_pc_1000378c, label %dec_label_pc_1000383c

dec_label_pc_1000383c:                            ; preds = %dec_label_pc_10003780, %dec_label_pc_10003828
  %v0_1000383c = call i32 @function_10005d1c()
  store i32 %v0_1000383c, i32* %r3.global-to-local, align 4
  %v2_1000378c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000378c

; uselistorder directives
  uselistorder i32 %v0_10003834, { 1, 0 }
  uselistorder i1 %v1_10003820, { 1, 0 }
  uselistorder i1 %v0_10003820, { 1, 0 }
  uselistorder i32 %v1_10003810, { 0, 3, 2, 4, 1 }
  uselistorder i32 %v4_100037d8, { 1, 0 }
  uselistorder i32 %v0_100037a4, { 1, 0, 2 }
  uselistorder i32 %v2_10003798, { 1, 0 }
  uselistorder i32 %v1_10003770, { 1, 0 }
  uselistorder i32 %v1_10003730, { 0, 2, 1, 3 }
  uselistorder i32 %v2_100036b4, { 1, 0, 2 }
  uselistorder i32 %v1_100036b0, { 1, 0 }
  uselistorder i32 %v1_10003648, { 1, 0 }
  uselistorder i32 %v1_10003614, { 1, 0 }
  uselistorder i32 %v0_10003594, { 1, 0 }
  uselistorder i32 %v2_10003588, { 1, 2, 0 }
  uselistorder i1 %v4_1000350c, { 1, 0 }
  uselistorder i16 %storemerge, { 1, 0 }
  uselistorder i32 %v3_1000356c, { 1, 3, 0, 2 }
  uselistorder i32 %v1_10003548, { 1, 0 }
  uselistorder i32 %v1_100032f0, { 1, 0 }
  uselistorder i8 %v5_100032dc, { 1, 0 }
  uselistorder i8 %v5_100032a4, { 1, 0 }
  uselistorder i16 %tmp13, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 31, 12, 13, 14, 15, 16, 17, 18, 28, 29, 20, 19, 21, 22, 23, 25, 24, 26, 27, 3, 2, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0, 1 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 11, 8, 9, 10, 0 }
  uselistorder i32* %r25.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r24.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 25, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 0, 12, 13 }
  uselistorder i1* %cr3_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 268448844, { 1, 0 }
  uselistorder i32 1179648, { 2, 0, 3, 4, 1, 5 }
  uselistorder label %dec_label_pc_1000383c, { 1, 0 }
  uselistorder label %dec_label_pc_1000378c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003750, { 1, 0 }
  uselistorder label %dec_label_pc_1000374c, { 1, 0 }
  uselistorder label %dec_label_pc_1000372c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003698, { 1, 0 }
  uselistorder label %dec_label_pc_100035a8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10003528, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10003458, { 1, 0 }
}

define i32 @function_10003844(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003844:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  %v0_10003848 = load i32, i32* @lr, align 4
  store i32 %v0_10003848, i32* %r0.global-to-local, align 4
  %v0_1000384c = call i32 @__asm_mfcr()
  store i32 %v0_1000384c, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r25.global-to-local, align 4
  %v0_1000385c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000384c, i32* %r21.global-to-local, align 4
  %v0_1000389c = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_100038a4 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_100038ac = load i32, i32* @r30, align 4
  store i32 268449976, i32* @lr, align 4
  %v2_100038b4 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_100038b4, i32* %r22.global-to-local, align 4
  %v0_100038bc = load i32, i32* @r28, align 4
  %v0_100038c8 = load i32, i32* @r29, align 4
  store i32 %v0_100038c8, i32* %r3.global-to-local, align 4
  store i32 268450000, i32* @lr, align 4
  %v4_100038cc = inttoptr i32 %v0_100038bc to i32*
  %v5_100038cc = call i32 @function_100006a8(i32 %v0_100038c8, i32* %v4_100038cc, i32 2, i32 0)
  %v5_100038dc = trunc i32 %v5_100038cc to i8
  %v0_100038e4 = load i32, i32* @r28, align 4
  %v0_100038e8 = load i32, i32* @r29, align 4
  store i32 %v0_100038e8, i32* %r3.global-to-local, align 4
  store i32 268450032, i32* @lr, align 4
  %v4_100038ec = inttoptr i32 %v0_100038e4 to i32*
  %v5_100038ec = call i32 @function_100006a8(i32 %v0_100038e8, i32* %v4_100038ec, i32 3, i32 65535)
  %v0_100038f0 = load i32, i32* @r28, align 4
  store i32 %v5_100038ec, i32* %r18.global-to-local, align 4
  %v0_10003900 = load i32, i32* @r29, align 4
  store i32 %v0_10003900, i32* %r3.global-to-local, align 4
  store i32 268450056, i32* @lr, align 4
  %v4_10003904 = inttoptr i32 %v0_100038f0 to i32*
  %v5_10003904 = call i32 @function_100006a8(i32 %v0_10003900, i32* %v4_10003904, i32 4, i32 64)
  %v0_10003908 = load i32, i32* @r28, align 4
  %v5_10003914 = trunc i32 %v5_10003904 to i8
  %v0_1000391c = load i32, i32* @r29, align 4
  store i32 %v0_1000391c, i32* %r3.global-to-local, align 4
  store i32 268450084, i32* @lr, align 4
  %v4_10003920 = inttoptr i32 %v0_10003908 to i32*
  %v5_10003920 = call i32 @function_100006a8(i32 %v0_1000391c, i32* %v4_10003920, i32 5, i32 0)
  %v0_10003930 = load i32, i32* @r28, align 4
  %v1_10003934 = urem i32 %v5_10003920, 256
  store i32 %v1_10003934, i32* @r31, align 4
  %v0_10003938 = load i32, i32* @r29, align 4
  store i32 %v0_10003938, i32* %r3.global-to-local, align 4
  store i32 268450112, i32* @lr, align 4
  %v4_1000393c = inttoptr i32 %v0_10003930 to i32*
  %v5_1000393c = call i32 @function_100006a8(i32 %v0_10003938, i32* %v4_1000393c, i32 6, i32 65535)
  %v0_10003944 = load i32, i32* @r28, align 4
  store i32 %v5_1000393c, i32* %r19.global-to-local, align 4
  %v0_10003954 = load i32, i32* @r29, align 4
  store i32 %v0_10003954, i32* %r3.global-to-local, align 4
  store i32 268450140, i32* @lr, align 4
  %v4_10003958 = inttoptr i32 %v0_10003944 to i32*
  %v5_10003958 = call i32 @function_100006a8(i32 %v0_10003954, i32* %v4_10003958, i32 7, i32 65535)
  %v0_10003960 = load i32, i32* @r28, align 4
  store i32 %v5_10003958, i32* %r20.global-to-local, align 4
  %v0_10003970 = load i32, i32* @r29, align 4
  store i32 %v0_10003970, i32* %r3.global-to-local, align 4
  store i32 268450168, i32* @lr, align 4
  %v4_10003974 = inttoptr i32 %v0_10003960 to i32*
  %v5_10003974 = call i32 @function_100006a8(i32 %v0_10003970, i32* %v4_10003974, i32 17, i32 65535)
  %v0_1000397c = load i32, i32* @r28, align 4
  store i32 %v5_10003974, i32* %r15.global-to-local, align 4
  %v0_1000398c = load i32, i32* @r29, align 4
  store i32 %v0_1000398c, i32* %r3.global-to-local, align 4
  store i32 268450196, i32* @lr, align 4
  %v4_10003990 = inttoptr i32 %v0_1000397c to i32*
  %v5_10003990 = call i32 @function_100006a8(i32 %v0_1000398c, i32* %v4_10003990, i32 18, i32 65535)
  %v0_10003994 = load i32, i32* @r28, align 4
  store i32 %v5_10003990, i32* %r17.global-to-local, align 4
  %v0_100039a4 = load i32, i32* @r29, align 4
  store i32 %v0_100039a4, i32* %r3.global-to-local, align 4
  store i32 268450220, i32* @lr, align 4
  %v4_100039a8 = inttoptr i32 %v0_10003994 to i32*
  %v5_100039a8 = call i32 @function_100006a8(i32 %v0_100039a4, i32* %v4_100039a8, i32 11, i32 0)
  %v0_100039ac = load i32, i32* @r28, align 4
  %v0_100039bc = load i32, i32* @r29, align 4
  store i32 %v0_100039bc, i32* %r3.global-to-local, align 4
  store i32 268450244, i32* @lr, align 4
  %v4_100039c0 = inttoptr i32 %v0_100039ac to i32*
  %v5_100039c0 = call i32 @function_100006a8(i32 %v0_100039bc, i32* %v4_100039c0, i32 12, i32 1)
  %v0_100039c4 = load i32, i32* @r28, align 4
  store i32 %v5_100039c0, i32* %r14.global-to-local, align 4
  %v0_100039d4 = load i32, i32* @r29, align 4
  store i32 %v0_100039d4, i32* %r3.global-to-local, align 4
  store i32 268450268, i32* @lr, align 4
  %v4_100039d8 = inttoptr i32 %v0_100039c4 to i32*
  %v5_100039d8 = call i32 @function_100006a8(i32 %v0_100039d4, i32* %v4_100039d8, i32 13, i32 0)
  %v0_100039dc = load i32, i32* @r28, align 4
  store i32 %v5_100039d8, i32* %r24.global-to-local, align 4
  %v0_100039ec = load i32, i32* @r29, align 4
  store i32 %v0_100039ec, i32* %r3.global-to-local, align 4
  store i32 268450292, i32* @lr, align 4
  %v4_100039f0 = inttoptr i32 %v0_100039dc to i32*
  %v5_100039f0 = call i32 @function_100006a8(i32 %v0_100039ec, i32* %v4_100039f0, i32 14, i32 0)
  %v0_100039f4 = load i32, i32* @r28, align 4
  store i32 %v5_100039f0, i32* %r27.global-to-local, align 4
  %v0_10003a04 = load i32, i32* @r29, align 4
  store i32 %v0_10003a04, i32* %r3.global-to-local, align 4
  store i32 268450316, i32* @lr, align 4
  %v4_10003a08 = inttoptr i32 %v0_100039f4 to i32*
  %v5_10003a08 = call i32 @function_100006a8(i32 %v0_10003a04, i32* %v4_10003a08, i32 15, i32 0)
  %v0_10003a0c = load i32, i32* @r28, align 4
  store i32 %v5_10003a08, i32* %r26.global-to-local, align 4
  %v0_10003a1c = load i32, i32* @r29, align 4
  store i32 %v0_10003a1c, i32* %r3.global-to-local, align 4
  store i32 268450340, i32* @lr, align 4
  %v4_10003a20 = inttoptr i32 %v0_10003a0c to i32*
  %v5_10003a20 = call i32 @function_100006a8(i32 %v0_10003a1c, i32* %v4_10003a20, i32 16, i32 0)
  %v0_10003a24 = load i32, i32* @r28, align 4
  store i32 %v5_10003a20, i32* %r30.global-to-local, align 4
  %v0_10003a34 = load i32, i32* @r29, align 4
  store i32 %v0_10003a34, i32* %r3.global-to-local, align 4
  store i32 268450364, i32* @lr, align 4
  %v4_10003a38 = inttoptr i32 %v0_10003a24 to i32*
  %v5_10003a38 = call i32 @function_100006a8(i32 %v0_10003a34, i32* %v4_10003a38, i32 0, i32 512)
  %v0_10003a3c = load i32, i32* @r28, align 4
  store i32 %v5_10003a38, i32* %r16.global-to-local, align 4
  %v0_10003a4c = load i32, i32* @r29, align 4
  store i32 %v0_10003a4c, i32* %r3.global-to-local, align 4
  store i32 268450388, i32* @lr, align 4
  %v4_10003a50 = inttoptr i32 %v0_10003a3c to i32*
  %v5_10003a50 = call i32 @function_100006a8(i32 %v0_10003a4c, i32* %v4_10003a50, i32 1, i32 1)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10003a58 = load i32, i32* @global_var_1001c6a0.16, align 4
  %v1_10003a5c = urem i32 %v5_10003a50, 256
  %v0_10003a60 = load i32, i32* @r28, align 4
  %v0_10003a6c = load i32, i32* @r29, align 4
  store i32 %v0_10003a6c, i32* %r3.global-to-local, align 4
  store i32 268450420, i32* @lr, align 4
  %v5_10003a70 = inttoptr i32 %v0_10003a60 to i32*
  %v6_10003a70 = call i32 @function_10000628(i32 %v0_10003a6c, i32* %v5_10003a70, i32 25, i32 %v3_10003a58, i32 268566528)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268450440, i32* @lr, align 4
  %v3_10003a84 = call i32 @function_1000a278(i32 2, i32 3, i32 6)
  store i32 %v3_10003a84, i32* %r3.global-to-local, align 4
  %v3_10003a88 = icmp eq i32 %v3_10003a84, -1
  store i32 %v3_10003a84, i32* %r23.global-to-local, align 4
  br i1 %v3_10003a88, label %dec_label_pc_10003dc8, label %dec_label_pc_10003a94

dec_label_pc_10003a94:                            ; preds = %dec_label_pc_10003844
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_10003aa0 = ptrtoint i32* %stack_var_-136 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-136, align 4
  store i32 268450480, i32* @lr, align 4
  %v4_10003aac = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_10003aa0, i32 4)
  store i32 %v4_10003aac, i32* %r3.global-to-local, align 4
  %v3_10003ab0 = icmp eq i32 %v4_10003aac, -1
  br i1 %v3_10003ab0, label %dec_label_pc_10003dc0, label %dec_label_pc_10003ab8

dec_label_pc_10003ab8:                            ; preds = %dec_label_pc_10003a94
  %v0_10003ab8 = load i32, i32* %r21.global-to-local, align 4
  %v1_10003ab8 = icmp slt i32 %v0_10003ab8, 0
  %v3_10003ab8 = icmp eq i32 %v0_10003ab8, 0
  store i1 %v1_10003ab8, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10003ab8, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  %v0_10003ac4 = load i32, i32* %r18.global-to-local, align 4
  %v1_10003ac4 = urem i32 %v0_10003ac4, 65536
  store i32 %v1_10003ac4, i32* %r18.global-to-local, align 4
  %v0_10003ac8 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003ac8 = urem i32 %v0_10003ac8, 65536
  store i32 %v1_10003ac8, i32* %r19.global-to-local, align 4
  %v0_10003acc = load i32, i32* %r20.global-to-local, align 4
  %v1_10003acc = urem i32 %v0_10003acc, 65536
  store i32 %v1_10003acc, i32* %r20.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10003ab8, 1
  br i1 %tmp40, label %dec_label_pc_10003da0, label %dec_label_pc_10003ad4

dec_label_pc_10003ad4:                            ; preds = %dec_label_pc_10003ab8
  %v0_10003ad8 = load i32, i32* %r24.global-to-local, align 4
  %v1_10003ad8 = urem i32 %v0_10003ad8, 256
  %v0_10003adc = load i32, i32* %r16.global-to-local, align 4
  %v1_10003adc = add i32 %v0_10003adc, 40
  store i32 %v1_10003adc, i32* %r24.global-to-local, align 4
  %v3_10003ae0 = icmp eq i32 %v1_10003ad8, 0
  store i1 %v3_10003ae0, i1* %cr3_eq.global-to-local, align 1
  %v1_10003ae4 = urem i32 %v5_100039a8, 2
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v0_10003ae8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ae8 = urem i32 %v0_10003ae8, 2
  store i32 %v1_10003ae8, i32* %r28.global-to-local, align 4
  %v1_10003aec = urem i32 %v0_10003ad8, 2
  store i32 %v1_10003aec, i32* %r26.global-to-local, align 4
  %v1_10003af0 = urem i32 %v1_10003adc, 65536
  store i32 %v1_10003af0, i32* %r0.global-to-local, align 4
  %v0_10003af8 = load i32, i32* @r31, align 4
  %v3_10003af8 = icmp eq i32 %v0_10003af8, 0
  store i1 %v3_10003af8, i1* %cr2_eq.global-to-local, align 1
  %v5_10003afc = trunc i32 %v1_10003adc to i16
  %v0_10003b00 = load i32, i32* %r14.global-to-local, align 4
  %v1_10003b00 = urem i32 %v0_10003b00, 2
  store i32 %v1_10003b00, i32* %r14.global-to-local, align 4
  %v0_10003b04 = load i32, i32* %r27.global-to-local, align 4
  %v1_10003b04 = urem i32 %v0_10003b04, 2
  store i32 %v1_10003b04, i32* %r27.global-to-local, align 4
  %v0_10003b08 = load i32, i32* %r30.global-to-local, align 4
  %v1_10003b08 = urem i32 %v0_10003b08, 2
  %v4_10003b58 = sext i8 %v5_100038dc to i32
  br label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003bf0, %dec_label_pc_10003ad4
  store i32 1510, i32* %r3.global-to-local, align 4
  store i32 268450588, i32* @lr, align 4
  %v2_10003b18 = call i32 @function_1000a5d4(i32 1510, i32 1)
  store i32 %v2_10003b18, i32* %r3.global-to-local, align 4
  %v3_10003b1c = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003b1c, i32* %r9.global-to-local, align 4
  %v0_10003b20 = load i32, i32* @r31, align 4
  %v1_10003b20 = mul i32 %v0_10003b20, 4
  store i32 %v1_10003b20, i32* %r0.global-to-local, align 4
  %v1_10003b24 = load i32, i32* %r22.global-to-local, align 4
  %v3_10003b24 = add i32 %v1_10003b24, %v1_10003b20
  %v4_10003b24 = inttoptr i32 %v3_10003b24 to i32*
  store i32 %v2_10003b18, i32* %v4_10003b24, align 4
  %v0_10003b28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003b28 = mul i32 %v0_10003b28, 4
  store i32 %v1_10003b28, i32* %r9.global-to-local, align 4
  %v1_10003b2c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003b2c = add i32 %v1_10003b2c, %v1_10003b28
  %v3_10003b2c = inttoptr i32 %v2_10003b2c to i32*
  %v4_10003b2c = load i32, i32* %v3_10003b2c, align 4
  store i32 %v4_10003b2c, i32* @r31, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10003b34 = inttoptr i32 %v4_10003b2c to i32*
  %v2_10003b34 = load i32, i32* %v1_10003b34, align 4
  store i32 %v2_10003b34, i32* %r0.global-to-local, align 4
  %v1_10003b38 = add i32 %v4_10003b2c, 20
  store i32 %v1_10003b38, i32* @r30, align 4
  %v0_10003b3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003b3c = trunc i32 %v0_10003b3c to i16
  %v3_10003b3c = add i32 %v4_10003b2c, 4
  %v4_10003b3c = inttoptr i32 %v3_10003b3c to i16*
  store i16 %v1_10003b3c, i16* %v4_10003b3c, align 2
  %v1_10003b40 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_10003b40, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003b48 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  %v1_10003b4c = load i32, i32* @r31, align 4
  %v2_10003b4c = inttoptr i32 %v1_10003b4c to i32*
  store i32 %v1_10003b48, i32* %v2_10003b4c, align 4
  %v2_10003b54 = load i32, i32* @r31, align 4
  %v3_10003b54 = add i32 %v2_10003b54, 8
  %v4_10003b54 = inttoptr i32 %v3_10003b54 to i8*
  store i8 %v5_10003914, i8* %v4_10003b54, align 1
  store i32 %v4_10003b58, i32* %r9.global-to-local, align 4
  %v2_10003b5c = load i32, i32* @r31, align 4
  %v3_10003b5c = add i32 %v2_10003b5c, 1
  %v4_10003b5c = inttoptr i32 %v3_10003b5c to i8*
  store i8 %v5_100038dc, i8* %v4_10003b5c, align 1
  store i32 %v1_10003adc, i32* %r0.global-to-local, align 4
  %v2_10003b64 = load i32, i32* @r31, align 4
  %v3_10003b64 = add i32 %v2_10003b64, 2
  %v4_10003b64 = inttoptr i32 %v3_10003b64 to i16*
  store i16 %v5_10003afc, i16* %v4_10003b64, align 2
  %v0_10003b68 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003b68, label %dec_label_pc_10003b74, label %dec_label_pc_10003b6c

dec_label_pc_10003b6c:                            ; preds = %dec_label_pc_10003b10
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10003b70 = load i32, i32* @r31, align 4
  %v3_10003b70 = add i32 %v2_10003b70, 6
  %v4_10003b70 = inttoptr i32 %v3_10003b70 to i16*
  store i16 16384, i16* %v4_10003b70, align 2
  br label %dec_label_pc_10003b74

dec_label_pc_10003b74:                            ; preds = %dec_label_pc_10003b10, %dec_label_pc_10003b6c
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10003b78 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003b78 = trunc i32 %v0_10003b78 to i16
  %v2_10003b78 = load i32, i32* @r31, align 4
  %v3_10003b78 = add i32 %v2_10003b78, 20
  %v4_10003b78 = inttoptr i32 %v3_10003b78 to i16*
  store i16 %v1_10003b78, i16* %v4_10003b78, align 2
  %v0_10003b7c = load i32, i32* %r0.global-to-local, align 4
  %v1_10003b7c = trunc i32 %v0_10003b7c to i8
  %v2_10003b7c = load i32, i32* @r31, align 4
  %v3_10003b7c = add i32 %v2_10003b7c, 9
  %v4_10003b7c = inttoptr i32 %v3_10003b7c to i8*
  store i8 %v1_10003b7c, i8* %v4_10003b7c, align 1
  %v0_10003b80 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003b80 = trunc i32 %v0_10003b80 to i16
  %v2_10003b80 = load i32, i32* @r30, align 4
  %v3_10003b80 = add i32 %v2_10003b80, 2
  %v4_10003b80 = inttoptr i32 %v3_10003b80 to i16*
  store i16 %v1_10003b80, i16* %v4_10003b80, align 2
  %v1_10003b88 = load i32, i32* @r31, align 4
  %v2_10003b88 = add i32 %v1_10003b88, 12
  %v3_10003b88 = inttoptr i32 %v2_10003b88 to i32*
  store i32 %v6_10003a70, i32* %v3_10003b88, align 4
  %v3_10003b8c = load i32, i32* %stack_var_-136, align 4
  %v1_10003b90 = mul i32 %v3_10003b8c, 24
  %v1_10003b94 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003b94 = add i32 %v1_10003b94, %v1_10003b90
  store i32 %v2_10003b94, i32* %r9.global-to-local, align 4
  %v1_10003b98 = add i32 %v2_10003b94, 16
  %v2_10003b98 = inttoptr i32 %v1_10003b98 to i32*
  %v3_10003b98 = load i32, i32* %v2_10003b98, align 4
  store i32 %v3_10003b98, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_10003ba0 = load i32, i32* @r31, align 4
  %v2_10003ba0 = add i32 %v1_10003ba0, 16
  %v3_10003ba0 = inttoptr i32 %v2_10003ba0 to i32*
  store i32 %v3_10003b98, i32* %v3_10003ba0, align 4
  %v0_10003ba4 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003ba4 = load i32, i32* @r30, align 4
  %v2_10003ba4 = add i32 %v1_10003ba4, 4
  %v3_10003ba4 = inttoptr i32 %v2_10003ba4 to i32*
  store i32 %v0_10003ba4, i32* %v3_10003ba4, align 4
  %v0_10003ba8 = load i32, i32* @r30, align 4
  %v1_10003ba8 = add i32 %v0_10003ba8, 12
  %v2_10003ba8 = inttoptr i32 %v1_10003ba8 to i32*
  %v3_10003ba8 = load i32, i32* %v2_10003ba8, align 4
  store i32 %v3_10003ba8, i32* %r0.global-to-local, align 4
  %v1_10003bac = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_10003bac, i32* %r0.global-to-local, align 4
  store i32 %v1_10003ae4, i32* %r9.global-to-local, align 4
  %v1_10003bb4 = call i32 @__asm_rlwimi(i32 %v1_10003ae4, i32 21, i32 10, i32 10)
  store i32 %v1_10003bb4, i32* %r0.global-to-local, align 4
  %v1_10003bb8 = call i32 @__asm_rlwimi(i32 %v1_10003b00, i32 20, i32 11, i32 11)
  store i32 %v1_10003bb8, i32* %r0.global-to-local, align 4
  %v1_10003bbc = call i32 @__asm_rlwimi(i32 %v1_10003aec, i32 19, i32 12, i32 12)
  store i32 %v1_10003bbc, i32* %r0.global-to-local, align 4
  %v1_10003bc0 = call i32 @__asm_rlwimi(i32 %v1_10003b04, i32 18, i32 13, i32 13)
  store i32 %v1_10003bc0, i32* %r0.global-to-local, align 4
  %v1_10003bc4 = call i32 @__asm_rlwimi(i32 %v1_10003ae8, i32 17, i32 14, i32 14)
  store i32 %v1_10003bc4, i32* %r0.global-to-local, align 4
  %v1_10003bc8 = call i32 @__asm_rlwimi(i32 %v1_10003b08, i32 16, i32 15, i32 15)
  store i32 %v1_10003bc8, i32* %r0.global-to-local, align 4
  %v1_10003bcc = load i32, i32* @r30, align 4
  %v2_10003bcc = add i32 %v1_10003bcc, 12
  %v3_10003bcc = inttoptr i32 %v2_10003bcc to i32*
  store i32 %v1_10003bc8, i32* %v3_10003bcc, align 4
  %v0_10003bd0 = call i32 @function_10005b48()
  %v1_10003bd0 = trunc i32 %v0_10003bd0 to i16
  %v0_10003bd4 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003bd4, i32* @r4, align 4
  %v3_10003bd8 = load i32, i32* @r30, align 4
  %v4_10003bd8 = add i32 %v3_10003bd8, 14
  %v5_10003bd8 = inttoptr i32 %v4_10003bd8 to i16*
  store i16 %v1_10003bd0, i16* %v5_10003bd8, align 2
  %v0_10003bdc = load i32, i32* @r31, align 4
  %v1_10003bdc = add i32 %v0_10003bdc, 40
  store i32 %v1_10003bdc, i32* @r3, align 4
  %v0_10003be0 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003be0, label %dec_label_pc_10003bf0, label %dec_label_pc_10003be4

dec_label_pc_10003be4:                            ; preds = %dec_label_pc_10003b74
  %v0_10003be4 = load i32, i32* @r30, align 4
  %v1_10003be4 = add i32 %v0_10003be4, 12
  %v2_10003be4 = inttoptr i32 %v1_10003be4 to i32*
  %v3_10003be4 = load i32, i32* %v2_10003be4, align 4
  %v1_10003be8 = or i32 %v3_10003be4, 524288
  store i32 %v1_10003be8, i32* %r0.global-to-local, align 4
  store i32 %v1_10003be8, i32* %v2_10003be4, align 4
  br label %dec_label_pc_10003bf0

dec_label_pc_10003bf0:                            ; preds = %dec_label_pc_10003b74, %dec_label_pc_10003be4
  %v0_10003bf0 = call i32 @function_10005d1c()
  store i32 %v0_10003bf0, i32* %r3.global-to-local, align 4
  %v3_10003bf4 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003bf4, i32* %r9.global-to-local, align 4
  %v1_10003bf8 = add i32 %v3_10003bf4, 1
  %v1_10003bfc = load i32, i32* %r21.global-to-local, align 4
  %v2_10003bfc = icmp slt i32 %v1_10003bf8, %v1_10003bfc
  store i32 %v1_10003bf8, i32* %stack_var_-136, align 4
  br i1 %v2_10003bfc, label %dec_label_pc_10003b10, label %dec_label_pc_10003c08

dec_label_pc_10003c08:                            ; preds = %dec_label_pc_10003bf0
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003c0c = load i32, i32* %r16.global-to-local, align 4
  %v1_10003c0c = add i32 %v0_10003c0c, 20
  store i32 %v1_10003c0c, i32* @r30, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v3_10003c14 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003c14, i1* %cr2_eq.global-to-local, align 1
  %v3_10003c18 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003c18, i1* %cr3_eq.global-to-local, align 1
  %v0_10003c1c.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003c1c.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003c1c.preheader:                  ; preds = %dec_label_pc_10003cfc, %dec_label_pc_10003da0, %dec_label_pc_10003c08
  %v1_10003c1c = phi i1 [ %v1_10003ab8, %dec_label_pc_10003da0 ], [ %v1_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v1_10003cfc, %dec_label_pc_10003cfc ]
  %v0_10003c1c = phi i1 [ %v3_10003ab8, %dec_label_pc_10003da0 ], [ %v0_10003c1c.pre, %dec_label_pc_10003c08 ], [ %v0_10003cfc, %dec_label_pc_10003cfc ]
  %v2_10003c1c = or i1 %v1_10003c1c, %v0_10003c1c
  br label %dec_label_pc_10003c1c

dec_label_pc_10003c1c:                            ; preds = %dec_label_pc_10003c1c.preheader, %dec_label_pc_10003c1c
  br i1 %v2_10003c1c, label %dec_label_pc_10003c1c, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003c1c, %dec_label_pc_10003cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10003c24 = load i32, i32* @r30, align 4
  %v1_10003c24 = urem i32 %v0_10003c24, 65536
  store i32 %v1_10003c24, i32* %r27.global-to-local, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10003c34

dec_label_pc_10003c34:                            ; preds = %dec_label_pc_10003c8c, %dec_label_pc_10003c20
  %v0_10003c34 = phi i32 [ %v1_10003cec, %dec_label_pc_10003c8c ], [ 0, %dec_label_pc_10003c20 ]
  %v1_10003c34 = mul i32 %v0_10003c34, 24
  store i32 %v1_10003c34, i32* %r0.global-to-local, align 4
  %v1_10003c38 = mul i32 %v0_10003c34, 4
  %v1_10003c3c = load i32, i32* %r22.global-to-local, align 4
  %v2_10003c3c = add i32 %v1_10003c3c, %v1_10003c38
  %v3_10003c3c = inttoptr i32 %v2_10003c3c to i32*
  %v4_10003c3c = load i32, i32* %v3_10003c3c, align 4
  store i32 %v4_10003c3c, i32* %r28.global-to-local, align 4
  %v1_10003c40 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003c40 = add i32 %v1_10003c40, %v1_10003c34
  %v1_10003c44 = add i32 %v2_10003c40, 20
  %v2_10003c44 = inttoptr i32 %v1_10003c44 to i8*
  %v3_10003c44 = load i8, i8* %v2_10003c44, align 1
  %v4_10003c44 = zext i8 %v3_10003c44 to i32
  store i32 %v4_10003c44, i32* %r9.global-to-local, align 4
  %v1_10003c48 = add i32 %v4_10003c3c, 20
  store i32 %v1_10003c48, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_10003c44, 32
  br i1 %tmp41, label %dec_label_pc_10003d04, label %dec_label_pc_10003c54

dec_label_pc_10003c54:                            ; preds = %dec_label_pc_10003c34
  %v0_10003c54 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003c54, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003c58:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 65535, i32* @r29, align 4
  %v0_10003c60 = load i32, i32* %r18.global-to-local, align 4
  %v4_10003c60 = icmp eq i32 %v0_10003c60, 65535
  br i1 %v4_10003c60, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003c68:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v1_10003c68 = phi i32 [ %v1_10003d3c, %dec_label_pc_10003d2c ], [ 65535, %dec_label_pc_10003c58 ]
  %v0_10003c68 = load i32, i32* %r19.global-to-local, align 4
  %v4_10003c68 = icmp eq i32 %v0_10003c68, %v1_10003c68
  br i1 %v4_10003c68, label %dec_label_pc_10003d54, label %dec_label_pc_10003c70

dec_label_pc_10003c70:                            ; preds = %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge, %dec_label_pc_10003c68
  %v1_10003c70 = phi i32 [ %v1_10003c70.pre, %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge ], [ %v1_10003c68, %dec_label_pc_10003c68 ]
  %v0_10003c70 = load i32, i32* %r20.global-to-local, align 4
  %v4_10003c70 = icmp eq i32 %v0_10003c70, %v1_10003c70
  br i1 %v4_10003c70, label %dec_label_pc_10003d64, label %dec_label_pc_10003c78

dec_label_pc_10003c78:                            ; preds = %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge, %dec_label_pc_10003c70
  %v1_10003c78 = phi i32 [ %v1_10003c78.pre, %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge ], [ %v1_10003c70, %dec_label_pc_10003c70 ]
  %v0_10003c78 = load i32, i32* %r15.global-to-local, align 4
  %v4_10003c78 = icmp eq i32 %v0_10003c78, %v1_10003c78
  br i1 %v4_10003c78, label %dec_label_pc_10003d74, label %dec_label_pc_10003c80

dec_label_pc_10003c80:                            ; preds = %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge, %dec_label_pc_10003c78
  %v1_10003c80 = phi i32 [ %v1_10003c80.pre, %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge ], [ %v1_10003c78, %dec_label_pc_10003c78 ]
  %v0_10003c80 = load i32, i32* %r17.global-to-local, align 4
  %v4_10003c80 = icmp eq i32 %v0_10003c80, %v1_10003c80
  br i1 %v4_10003c80, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003c88:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003c88 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003c88, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003c8c:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84, %dec_label_pc_10003d90
  %v0_10003c8c = load i32, i32* %r26.global-to-local, align 4
  %v1_10003c8c = trunc i32 %v0_10003c8c to i16
  %v2_10003c8c = load i32, i32* %r28.global-to-local, align 4
  %v3_10003c8c = add i32 %v2_10003c8c, 10
  %v4_10003c8c = inttoptr i32 %v3_10003c8c to i16*
  store i16 %v1_10003c8c, i16* %v4_10003c8c, align 2
  %v0_10003c94 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003c94, i32* @r3, align 4
  %v2_10003c98 = call i32 @function_100043cc(i32 %v0_10003c94, i32 20)
  %v3_10003c98 = trunc i32 %v2_10003c98 to i16
  %v0_10003c9c = load i32, i32* @r31, align 4
  store i32 %v0_10003c9c, i32* @r4, align 4
  %v4_10003ca0 = add i32 %v0_10003c94, 10
  %v5_10003ca0 = inttoptr i32 %v4_10003ca0 to i16*
  store i16 %v3_10003c98, i16* %v5_10003ca0, align 2
  %v0_10003ca4 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003ca8 = load i32, i32* %r26.global-to-local, align 4
  %v1_10003ca8 = trunc i32 %v0_10003ca8 to i16
  %v2_10003ca8 = load i32, i32* @r31, align 4
  %v3_10003ca8 = add i32 %v2_10003ca8, 16
  %v4_10003ca8 = inttoptr i32 %v3_10003ca8 to i16*
  store i16 %v1_10003ca8, i16* %v4_10003ca8, align 2
  %v0_10003cac = load i32, i32* @r30, align 4
  %v0_10003cb0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10003cb0, i32* %r3.global-to-local, align 4
  %v4_10003cb4 = call i32 @function_10004430(i32 %v0_10003cb0, i32 %v0_10003c9c, i32 %v0_10003ca4, i32 %v0_10003cac)
  %v5_10003cb4 = trunc i32 %v4_10003cb4 to i16
  store i32 %v4_10003cb4, i32* %r3.global-to-local, align 4
  %v3_10003cb8 = load i32, i32* %stack_var_-136, align 4
  store i32 %v3_10003cb8, i32* %r7.global-to-local, align 4
  %v0_10003cbc = load i32, i32* @r31, align 4
  %v1_10003cbc = add i32 %v0_10003cbc, 2
  %v2_10003cbc = inttoptr i32 %v1_10003cbc to i16*
  %v3_10003cbc = load i16, i16* %v2_10003cbc, align 2
  %v4_10003cbc = zext i16 %v3_10003cbc to i32
  store i32 %v4_10003cbc, i32* %r0.global-to-local, align 4
  %v0_10003cc0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003cc4 = mul i32 %v3_10003cb8, 24
  store i32 %v1_10003cc4, i32* %r7.global-to-local, align 4
  %v4_10003cc8 = add i32 %v0_10003cbc, 16
  %v5_10003cc8 = inttoptr i32 %v4_10003cc8 to i16*
  store i16 %v5_10003cb4, i16* %v5_10003cc8, align 2
  %v0_10003ccc = load i32, i32* %r24.global-to-local, align 4
  %v0_10003cd0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003cd0, i32* %r3.global-to-local, align 4
  %v0_10003cd4 = load i32, i32* %r7.global-to-local, align 4
  %v1_10003cd4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, %v0_10003cd4
  store i32 %v2_10003cd4, i32* %r7.global-to-local, align 4
  %v0_10003cdc = load i32, i32* %r0.global-to-local, align 4
  %v1_10003cdc = trunc i32 %v0_10003cdc to i16
  %v3_10003cdc = add i32 %v2_10003cd4, 2
  %v4_10003cdc = inttoptr i32 %v3_10003cdc to i16*
  store i16 %v1_10003cdc, i16* %v4_10003cdc, align 2
  store i32 268451048, i32* @lr, align 4
  %v6_10003ce4 = call i32 @function_1000a1fc(i32 %v0_10003cd0, i32 %v0_10003cc0, i32 %v0_10003ccc, i32 16384, i32 %v2_10003cd4, i32 16)
  store i32 %v6_10003ce4, i32* %r3.global-to-local, align 4
  %v3_10003ce8 = load i32, i32* %stack_var_-136, align 4
  %v1_10003cec = add i32 %v3_10003ce8, 1
  store i32 %v1_10003cec, i32* %r9.global-to-local, align 4
  %v1_10003cf0 = load i32, i32* %r21.global-to-local, align 4
  %v2_10003cf0 = icmp slt i32 %v1_10003cec, %v1_10003cf0
  store i32 %v1_10003cec, i32* %stack_var_-136, align 4
  br i1 %v2_10003cf0, label %dec_label_pc_10003c34, label %dec_label_pc_10003cfc

dec_label_pc_10003cfc:                            ; preds = %dec_label_pc_10003c8c
  %v0_10003cfc = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_10003cfc = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_10003cfc = or i1 %v0_10003cfc, %v1_10003cfc
  br i1 %v2_10003cfc, label %dec_label_pc_10003c1c.preheader, label %dec_label_pc_10003c20

dec_label_pc_10003d04:                            ; preds = %dec_label_pc_10003c34
  %v1_10003d04 = add i32 %v2_10003c40, 16
  %v2_10003d04 = inttoptr i32 %v1_10003d04 to i32*
  %v3_10003d04 = load i32, i32* %v2_10003d04, align 4
  store i32 %v3_10003d04, i32* %r29.global-to-local, align 4
  %v0_10003d08 = call i32 @function_10005b48()
  store i32 %v0_10003d08, i32* %r3.global-to-local, align 4
  %v3_10003d0c = load i32, i32* %stack_var_-136, align 4
  %v1_10003d10 = mul i32 %v3_10003d0c, 24
  %v1_10003d14 = load i32, i32* %r25.global-to-local, align 4
  %v2_10003d14 = add i32 %v1_10003d14, %v1_10003d10
  store i32 %v2_10003d14, i32* %r9.global-to-local, align 4
  %v1_10003d18 = add i32 %v2_10003d14, 20
  %v2_10003d18 = inttoptr i32 %v1_10003d18 to i8*
  %v3_10003d18 = load i8, i8* %v2_10003d18, align 1
  %v4_10003d18 = zext i8 %v3_10003d18 to i32
  store i32 %v4_10003d18, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_10003d18, 64
  %v2_10003d1c = zext i8 %tmp to i32
  %v3_10003d1c = lshr i32 %v0_10003d08, %v2_10003d1c
  store i32 %v3_10003d1c, i32* %r3.global-to-local, align 4
  %v0_10003d20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10003d20 = add i32 %v3_10003d1c, %v0_10003d20
  store i32 %v2_10003d20, i32* %r29.global-to-local, align 4
  %v1_10003d24 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d24 = add i32 %v1_10003d24, 16
  %v3_10003d24 = inttoptr i32 %v2_10003d24 to i32*
  store i32 %v2_10003d20, i32* %v3_10003d24, align 4
  %v0_10003d28 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_10003d28, label %dec_label_pc_10003d2c, label %dec_label_pc_10003c58

dec_label_pc_10003d2c:                            ; preds = %dec_label_pc_10003d04, %dec_label_pc_10003c54
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_10003d30 = call i32 @function_10005b48()
  store i32 %v0_10003d30, i32* %r3.global-to-local, align 4
  store i32 65535, i32* @r29, align 4
  %v1_10003d38 = load i32, i32* %r28.global-to-local, align 4
  %v2_10003d38 = add i32 %v1_10003d38, 12
  %v3_10003d38 = inttoptr i32 %v2_10003d38 to i32*
  store i32 %v0_10003d30, i32* %v3_10003d38, align 4
  %v0_10003d3c = load i32, i32* %r18.global-to-local, align 4
  %v1_10003d3c = load i32, i32* @r29, align 4
  %v4_10003d3c = icmp eq i32 %v0_10003d3c, %v1_10003d3c
  br i1 %v4_10003d3c, label %dec_label_pc_10003d44, label %dec_label_pc_10003c68

dec_label_pc_10003d44:                            ; preds = %dec_label_pc_10003d2c, %dec_label_pc_10003c58
  %v0_10003d44 = call i32 @function_10005b48()
  %v1_10003d44 = trunc i32 %v0_10003d44 to i16
  store i32 %v0_10003d44, i32* %r3.global-to-local, align 4
  %v0_10003d48 = load i32, i32* %r19.global-to-local, align 4
  %v1_10003d48 = load i32, i32* @r29, align 4
  %v4_10003d48 = icmp eq i32 %v0_10003d48, %v1_10003d48
  %v3_10003d4c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d4c = add i32 %v3_10003d4c, 4
  %v5_10003d4c = inttoptr i32 %v4_10003d4c to i16*
  store i16 %v1_10003d44, i16* %v5_10003d4c, align 2
  br i1 %v4_10003d48, label %dec_label_pc_10003d54, label %dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge

dec_label_pc_10003d44.dec_label_pc_10003c70_crit_edge: ; preds = %dec_label_pc_10003d44
  %v1_10003c70.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c70

dec_label_pc_10003d54:                            ; preds = %dec_label_pc_10003d44, %dec_label_pc_10003c68
  %v0_10003d54 = call i32 @function_10005b48()
  %v1_10003d54 = trunc i32 %v0_10003d54 to i16
  store i32 %v0_10003d54, i32* %r3.global-to-local, align 4
  %v0_10003d58 = load i32, i32* %r20.global-to-local, align 4
  %v1_10003d58 = load i32, i32* @r29, align 4
  %v4_10003d58 = icmp eq i32 %v0_10003d58, %v1_10003d58
  %v3_10003d5c = load i32, i32* %r28.global-to-local, align 4
  %v4_10003d5c = add i32 %v3_10003d5c, 20
  %v5_10003d5c = inttoptr i32 %v4_10003d5c to i16*
  store i16 %v1_10003d54, i16* %v5_10003d5c, align 2
  br i1 %v4_10003d58, label %dec_label_pc_10003d64, label %dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge

dec_label_pc_10003d54.dec_label_pc_10003c78_crit_edge: ; preds = %dec_label_pc_10003d54
  %v1_10003c78.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c78

dec_label_pc_10003d64:                            ; preds = %dec_label_pc_10003d54, %dec_label_pc_10003c70
  %v0_10003d64 = call i32 @function_10005b48()
  %v1_10003d64 = trunc i32 %v0_10003d64 to i16
  store i32 %v0_10003d64, i32* %r3.global-to-local, align 4
  %v0_10003d68 = load i32, i32* %r15.global-to-local, align 4
  %v1_10003d68 = load i32, i32* @r29, align 4
  %v4_10003d68 = icmp eq i32 %v0_10003d68, %v1_10003d68
  %v3_10003d6c = load i32, i32* @r31, align 4
  %v4_10003d6c = add i32 %v3_10003d6c, 2
  %v5_10003d6c = inttoptr i32 %v4_10003d6c to i16*
  store i16 %v1_10003d64, i16* %v5_10003d6c, align 2
  br i1 %v4_10003d68, label %dec_label_pc_10003d74, label %dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge

dec_label_pc_10003d64.dec_label_pc_10003c80_crit_edge: ; preds = %dec_label_pc_10003d64
  %v1_10003c80.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10003c80

dec_label_pc_10003d74:                            ; preds = %dec_label_pc_10003d64, %dec_label_pc_10003c78
  %v0_10003d74 = call i32 @function_10005b48()
  store i32 %v0_10003d74, i32* %r3.global-to-local, align 4
  %v0_10003d78 = load i32, i32* %r17.global-to-local, align 4
  %v1_10003d78 = load i32, i32* @r29, align 4
  %v4_10003d78 = icmp eq i32 %v0_10003d78, %v1_10003d78
  %v1_10003d7c = load i32, i32* @r31, align 4
  %v2_10003d7c = add i32 %v1_10003d7c, 4
  %v3_10003d7c = inttoptr i32 %v2_10003d7c to i32*
  store i32 %v0_10003d74, i32* %v3_10003d7c, align 4
  br i1 %v4_10003d78, label %dec_label_pc_10003d84, label %dec_label_pc_10003c88

dec_label_pc_10003d84:                            ; preds = %dec_label_pc_10003d74, %dec_label_pc_10003c80
  %v0_10003d84 = call i32 @function_10005b48()
  store i32 %v0_10003d84, i32* %r3.global-to-local, align 4
  %v1_10003d88 = load i32, i32* @r31, align 4
  %v2_10003d88 = add i32 %v1_10003d88, 8
  %v3_10003d88 = inttoptr i32 %v2_10003d88 to i32*
  store i32 %v0_10003d84, i32* %v3_10003d88, align 4
  %v0_10003d8c = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10003d8c, label %dec_label_pc_10003c8c, label %dec_label_pc_10003d90

dec_label_pc_10003d90:                            ; preds = %dec_label_pc_10003c88, %dec_label_pc_10003d84
  %v0_10003d90 = load i32, i32* %r28.global-to-local, align 4
  %v1_10003d90 = add i32 %v0_10003d90, 40
  store i32 %v1_10003d90, i32* @r3, align 4
  %v0_10003d94 = load i32, i32* %r16.global-to-local, align 4
  store i32 %v0_10003d94, i32* @r4, align 4
  %v0_10003d98 = call i32 @function_10005d1c()
  store i32 %v0_10003d98, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003c8c

dec_label_pc_10003da0:                            ; preds = %dec_label_pc_10003ab8
  store i32 %v6_10003a70, i32* %r0.global-to-local, align 4
  %v0_10003da4 = load i32, i32* %r16.global-to-local, align 4
  %v1_10003da4 = add i32 %v0_10003da4, 40
  store i32 %v1_10003da4, i32* %r24.global-to-local, align 4
  store i32 %v1_10003a5c, i32* %r9.global-to-local, align 4
  %v1_10003dac = add i32 %v0_10003da4, 20
  store i32 %v1_10003dac, i32* @r30, align 4
  %v3_10003db0 = icmp eq i32 %v6_10003a70, -1
  store i1 %v3_10003db0, i1* %cr2_eq.global-to-local, align 1
  %v3_10003db4 = icmp eq i32 %v1_10003a5c, 0
  store i1 %v3_10003db4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_10003c1c.preheader

dec_label_pc_10003dc0:                            ; preds = %dec_label_pc_10003a94
  %v0_10003dc0 = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10003dc0, i32* %r3.global-to-local, align 4
  store i32 268451272, i32* @lr, align 4
  %v0_10003dc4 = call i32 @function_1000955c()
  store i32 %v0_10003dc4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003dc8

dec_label_pc_10003dc8:                            ; preds = %dec_label_pc_10003844, %dec_label_pc_10003dc0
  store i32 %v0_1000385c, i32* %r0.global-to-local, align 4
  %v1_10003ddc = call %0 @__asm_mtcrf(i32 56, i32 %v0_1000384c)
  store i32 %v0_1000389c, i32* %r28.global-to-local, align 4
  store i32 %v0_100038a4, i32* %r29.global-to-local, align 4
  store i32 %v0_100038ac, i32* %r30.global-to-local, align 4
  %v0_10003e24 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10003e24

; uselistorder directives
  uselistorder i32 %v0_10003d64, { 1, 0 }
  uselistorder i32 %v0_10003d54, { 1, 0 }
  uselistorder i32 %v0_10003d44, { 1, 0 }
  uselistorder i32 %v1_10003d3c, { 1, 0 }
  uselistorder i1 %v1_10003cfc, { 1, 0 }
  uselistorder i1 %v0_10003cfc, { 1, 0 }
  uselistorder i32 %v1_10003cec, { 0, 2, 3, 1 }
  uselistorder i32 %v4_10003cb4, { 1, 0 }
  uselistorder i32 %v1_10003b28, { 1, 0 }
  uselistorder i32 %v1_10003b20, { 1, 0 }
  uselistorder i32 %v1_10003b04, { 1, 0 }
  uselistorder i32 %v1_10003b00, { 1, 0 }
  uselistorder i32 %v1_10003aec, { 1, 0 }
  uselistorder i32 %v1_10003ae8, { 1, 0 }
  uselistorder i32 %v1_10003ae4, { 2, 1, 0 }
  uselistorder i32 %v1_10003adc, { 1, 2, 0, 3 }
  uselistorder i32 %v6_10003a70, { 0, 4, 2, 1, 3 }
  uselistorder i32 %v1_10003a5c, { 3, 0, 2, 1 }
  uselistorder i8 %v5_100038dc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 1, 0 }
  uselistorder i32* %r29.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 0, 9, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 24, 20, 21, 22, 23, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @function_10005d1c, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 1510, { 0, 5, 1, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder label %dec_label_pc_10003dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10003d90, { 1, 0 }
  uselistorder label %dec_label_pc_10003c8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003c20, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c, { 1, 0 }
  uselistorder label %dec_label_pc_10003c1c.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003bf0, { 1, 0 }
  uselistorder label %dec_label_pc_10003b74, { 1, 0 }
}

define i32 @function_10003e28(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10003e28:
  %cr2_eq.global-to-local = alloca i1, align 1
  %cr3_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr4_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-120 = alloca i32, align 4
  %v0_10003e2c = load i32, i32* @lr, align 4
  store i32 %v0_10003e2c, i32* %r0.global-to-local, align 4
  %v0_10003e30 = call i32 @__asm_mfcr()
  store i32 %v0_10003e30, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r27.global-to-local, align 4
  %v0_10003e40 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10003e30, i32* %r24.global-to-local, align 4
  %v0_10003e80 = load i32, i32* @r28, align 4
  store i32 %arg4, i32* @r28, align 4
  %v0_10003e88 = load i32, i32* @r29, align 4
  store i32 %arg3, i32* @r29, align 4
  %v0_10003e94 = load i32, i32* @r31, align 4
  store i32 268451484, i32* @lr, align 4
  %v2_10003e98 = call i32 @function_1000a5d4(i32 4, i32 4)
  store i32 %v2_10003e98, i32* %r25.global-to-local, align 4
  %v0_10003ea0 = load i32, i32* @r28, align 4
  %v0_10003eac = load i32, i32* @r29, align 4
  store i32 %v0_10003eac, i32* %r3.global-to-local, align 4
  store i32 268451508, i32* @lr, align 4
  %v4_10003eb0 = inttoptr i32 %v0_10003ea0 to i32*
  %v5_10003eb0 = call i32 @function_100006a8(i32 %v0_10003eac, i32* %v4_10003eb0, i32 2, i32 0)
  %v5_10003ec0 = trunc i32 %v5_10003eb0 to i8
  %v0_10003ec8 = load i32, i32* @r28, align 4
  %v0_10003ecc = load i32, i32* @r29, align 4
  store i32 %v0_10003ecc, i32* %r3.global-to-local, align 4
  store i32 268451540, i32* @lr, align 4
  %v4_10003ed0 = inttoptr i32 %v0_10003ec8 to i32*
  %v5_10003ed0 = call i32 @function_100006a8(i32 %v0_10003ecc, i32* %v4_10003ed0, i32 3, i32 65535)
  %v0_10003ed4 = load i32, i32* @r28, align 4
  store i32 %v5_10003ed0, i32* %r21.global-to-local, align 4
  %v0_10003ee4 = load i32, i32* @r29, align 4
  store i32 %v0_10003ee4, i32* %r3.global-to-local, align 4
  store i32 268451564, i32* @lr, align 4
  %v4_10003ee8 = inttoptr i32 %v0_10003ed4 to i32*
  %v5_10003ee8 = call i32 @function_100006a8(i32 %v0_10003ee4, i32* %v4_10003ee8, i32 4, i32 64)
  %v0_10003eec = load i32, i32* @r28, align 4
  %v5_10003ef8 = trunc i32 %v5_10003ee8 to i8
  %v0_10003f00 = load i32, i32* @r29, align 4
  store i32 %v0_10003f00, i32* %r3.global-to-local, align 4
  store i32 268451592, i32* @lr, align 4
  %v4_10003f04 = inttoptr i32 %v0_10003eec to i32*
  %v5_10003f04 = call i32 @function_100006a8(i32 %v0_10003f00, i32* %v4_10003f04, i32 5, i32 1)
  %v0_10003f14 = load i32, i32* @r28, align 4
  %v1_10003f18 = urem i32 %v5_10003f04, 256
  store i32 %v1_10003f18, i32* @r31, align 4
  %v0_10003f1c = load i32, i32* @r29, align 4
  store i32 %v0_10003f1c, i32* %r3.global-to-local, align 4
  store i32 268451620, i32* @lr, align 4
  %v4_10003f20 = inttoptr i32 %v0_10003f14 to i32*
  %v5_10003f20 = call i32 @function_100006a8(i32 %v0_10003f1c, i32* %v4_10003f20, i32 6, i32 65535)
  %v0_10003f28 = load i32, i32* @r28, align 4
  store i32 %v5_10003f20, i32* %r22.global-to-local, align 4
  %v0_10003f38 = load i32, i32* @r29, align 4
  store i32 %v0_10003f38, i32* %r3.global-to-local, align 4
  store i32 268451648, i32* @lr, align 4
  %v4_10003f3c = inttoptr i32 %v0_10003f28 to i32*
  %v5_10003f3c = call i32 @function_100006a8(i32 %v0_10003f38, i32* %v4_10003f3c, i32 7, i32 65535)
  %v0_10003f44 = load i32, i32* @r28, align 4
  store i32 %v5_10003f3c, i32* %r23.global-to-local, align 4
  %v0_10003f54 = load i32, i32* @r29, align 4
  store i32 %v0_10003f54, i32* %r3.global-to-local, align 4
  store i32 268451676, i32* @lr, align 4
  %v4_10003f58 = inttoptr i32 %v0_10003f44 to i32*
  %v5_10003f58 = call i32 @function_100006a8(i32 %v0_10003f54, i32* %v4_10003f58, i32 17, i32 65535)
  %v0_10003f5c = load i32, i32* @r28, align 4
  store i32 %v5_10003f58, i32* %r19.global-to-local, align 4
  %v0_10003f6c = load i32, i32* @r29, align 4
  store i32 %v0_10003f6c, i32* %r3.global-to-local, align 4
  store i32 268451700, i32* @lr, align 4
  %v4_10003f70 = inttoptr i32 %v0_10003f5c to i32*
  %v5_10003f70 = call i32 @function_100006a8(i32 %v0_10003f6c, i32* %v4_10003f70, i32 18, i32 0)
  %v0_10003f74 = load i32, i32* @r28, align 4
  store i32 %v5_10003f70, i32* %r20.global-to-local, align 4
  %v0_10003f84 = load i32, i32* @r29, align 4
  store i32 %v0_10003f84, i32* %r3.global-to-local, align 4
  store i32 268451724, i32* @lr, align 4
  %v4_10003f88 = inttoptr i32 %v0_10003f74 to i32*
  %v5_10003f88 = call i32 @function_100006a8(i32 %v0_10003f84, i32* %v4_10003f88, i32 11, i32 0)
  %v0_10003f8c = load i32, i32* @r28, align 4
  store i32 %v5_10003f88, i32* %r14.global-to-local, align 4
  %v0_10003f9c = load i32, i32* @r29, align 4
  store i32 %v0_10003f9c, i32* %r3.global-to-local, align 4
  store i32 268451748, i32* @lr, align 4
  %v4_10003fa0 = inttoptr i32 %v0_10003f8c to i32*
  %v5_10003fa0 = call i32 @function_100006a8(i32 %v0_10003f9c, i32* %v4_10003fa0, i32 12, i32 0)
  %v0_10003fa4 = load i32, i32* @r28, align 4
  store i32 %v5_10003fa0, i32* %r17.global-to-local, align 4
  %v0_10003fb4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fb4, i32* %r3.global-to-local, align 4
  store i32 268451772, i32* @lr, align 4
  %v4_10003fb8 = inttoptr i32 %v0_10003fa4 to i32*
  %v5_10003fb8 = call i32 @function_100006a8(i32 %v0_10003fb4, i32* %v4_10003fb8, i32 13, i32 0)
  %v0_10003fbc = load i32, i32* @r28, align 4
  store i32 %v5_10003fb8, i32* %r18.global-to-local, align 4
  %v0_10003fcc = load i32, i32* @r29, align 4
  store i32 %v0_10003fcc, i32* %r3.global-to-local, align 4
  store i32 268451796, i32* @lr, align 4
  %v4_10003fd0 = inttoptr i32 %v0_10003fbc to i32*
  %v5_10003fd0 = call i32 @function_100006a8(i32 %v0_10003fcc, i32* %v4_10003fd0, i32 14, i32 0)
  %v0_10003fd4 = load i32, i32* @r28, align 4
  %v0_10003fe4 = load i32, i32* @r29, align 4
  store i32 %v0_10003fe4, i32* %r3.global-to-local, align 4
  store i32 268451820, i32* @lr, align 4
  %v4_10003fe8 = inttoptr i32 %v0_10003fd4 to i32*
  %v5_10003fe8 = call i32 @function_100006a8(i32 %v0_10003fe4, i32* %v4_10003fe8, i32 15, i32 1)
  %v0_10003fec = load i32, i32* @r28, align 4
  store i32 %v5_10003fe8, i32* %r16.global-to-local, align 4
  %v0_10003ffc = load i32, i32* @r29, align 4
  store i32 %v0_10003ffc, i32* %r3.global-to-local, align 4
  store i32 268451844, i32* @lr, align 4
  %v4_10004000 = inttoptr i32 %v0_10003fec to i32*
  %v5_10004000 = call i32 @function_100006a8(i32 %v0_10003ffc, i32* %v4_10004000, i32 16, i32 0)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10004008 = load i32, i32* @global_var_1001c6a0.16, align 4
  %v0_1000400c = load i32, i32* @r28, align 4
  store i32 %v5_10004000, i32* %r30.global-to-local, align 4
  %v0_10004018 = load i32, i32* @r29, align 4
  store i32 %v0_10004018, i32* %r3.global-to-local, align 4
  store i32 268451872, i32* @lr, align 4
  %v5_1000401c = inttoptr i32 %v0_1000400c to i32*
  %v6_1000401c = call i32 @function_10000628(i32 %v0_10004018, i32* %v5_1000401c, i32 25, i32 %v3_10004008, i32 268566528)
  store i32 %v6_1000401c, i32* %r15.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268451892, i32* @lr, align 4
  %v3_10004030 = call i32 @function_1000a278(i32 2, i32 3, i32 6)
  store i32 %v3_10004030, i32* %r3.global-to-local, align 4
  %v3_10004034 = icmp eq i32 %v3_10004030, -1
  store i32 %v3_10004030, i32* %r26.global-to-local, align 4
  br i1 %v3_10004034, label %dec_label_pc_1000436c, label %dec_label_pc_10004040

dec_label_pc_10004040:                            ; preds = %dec_label_pc_10003e28
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_1000404c = ptrtoint i32* %stack_var_-120 to i32
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-120, align 4
  store i32 268451932, i32* @lr, align 4
  %v4_10004058 = call i32 @function_1000a23c(i32 0, i32 3, i32 %v2_1000404c, i32 4)
  store i32 %v4_10004058, i32* %r3.global-to-local, align 4
  %v3_1000405c = icmp eq i32 %v4_10004058, -1
  br i1 %v3_1000405c, label %dec_label_pc_10004364, label %dec_label_pc_10004064

dec_label_pc_10004064:                            ; preds = %dec_label_pc_10004040
  %v0_10004064 = load i32, i32* %r24.global-to-local, align 4
  %v1_10004064 = icmp slt i32 %v0_10004064, 0
  %v3_10004064 = icmp eq i32 %v0_10004064, 0
  store i1 %v1_10004064, i1* %cr4_lt.global-to-local, align 1
  store i1 %v3_10004064, i1* %cr4_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  %v0_10004070 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004070 = urem i32 %v0_10004070, 65536
  store i32 %v1_10004070, i32* %r21.global-to-local, align 4
  %v0_10004074 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004074 = urem i32 %v0_10004074, 65536
  store i32 %v1_10004074, i32* %r22.global-to-local, align 4
  %v0_10004078 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004078 = urem i32 %v0_10004078, 65536
  store i32 %v1_10004078, i32* %r23.global-to-local, align 4
  %v0_1000407c = load i32, i32* %r14.global-to-local, align 4
  %v1_1000407c = urem i32 %v0_1000407c, 256
  store i32 %v1_1000407c, i32* %r14.global-to-local, align 4
  %tmp40 = icmp slt i32 %v0_10004064, 1
  br i1 %tmp40, label %dec_label_pc_100041e0, label %dec_label_pc_10004084

dec_label_pc_10004084:                            ; preds = %dec_label_pc_10004064
  store i32 %v5_10003fd0, i32* %r0.global-to-local, align 4
  %v0_10004088 = load i32, i32* @r31, align 4
  %v3_10004088 = icmp eq i32 %v0_10004088, 0
  store i1 %v3_10004088, i1* %cr3_eq.global-to-local, align 1
  %v0_1000408c = load i32, i32* %r16.global-to-local, align 4
  %v1_1000408c = urem i32 %v0_1000408c, 2
  store i32 %v1_1000408c, i32* %r29.global-to-local, align 4
  %v0_10004090 = load i32, i32* %r17.global-to-local, align 4
  %v1_10004090 = urem i32 %v0_10004090, 2
  store i32 %v1_10004090, i32* %r17.global-to-local, align 4
  %v0_10004094 = load i32, i32* %r18.global-to-local, align 4
  %v1_10004094 = urem i32 %v0_10004094, 2
  store i32 %v1_10004094, i32* %r18.global-to-local, align 4
  %v1_10004098 = urem i32 %v5_10003fd0, 2
  store i32 %v1_10004098, i32* %r28.global-to-local, align 4
  %v0_1000409c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000409c = urem i32 %v0_1000409c, 2
  store i32 %v1_1000409c, i32* %r30.global-to-local, align 4
  %v1_100040a0 = urem i32 %v0_1000407c, 2
  store i32 %v1_100040a0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v4_100040f0 = sext i8 %v5_10003ec0 to i32
  %v4_100040f8 = sext i8 %v5_10003ef8 to i32
  br label %dec_label_pc_100040a8

dec_label_pc_100040a8:                            ; preds = %dec_label_pc_1000410c, %dec_label_pc_10004084
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 268452020, i32* @lr, align 4
  %v2_100040b0 = call i32 @function_1000a5d4(i32 128, i32 1)
  store i32 %v2_100040b0, i32* %r3.global-to-local, align 4
  %v3_100040b4 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100040b4, i32* %r9.global-to-local, align 4
  %v0_100040b8 = load i32, i32* @r31, align 4
  %v1_100040b8 = mul i32 %v0_100040b8, 4
  store i32 %v1_100040b8, i32* %r0.global-to-local, align 4
  %v1_100040bc = load i32, i32* %r25.global-to-local, align 4
  %v3_100040bc = add i32 %v1_100040bc, %v1_100040b8
  %v4_100040bc = inttoptr i32 %v3_100040bc to i32*
  store i32 %v2_100040b0, i32* %v4_100040bc, align 4
  %v0_100040c0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100040c0 = mul i32 %v0_100040c0, 4
  store i32 %v1_100040c0, i32* %r9.global-to-local, align 4
  %v1_100040c4 = load i32, i32* %r25.global-to-local, align 4
  %v2_100040c4 = add i32 %v1_100040c4, %v1_100040c0
  %v3_100040c4 = inttoptr i32 %v2_100040c4 to i32*
  %v4_100040c4 = load i32, i32* %v3_100040c4, align 4
  store i32 %v4_100040c4, i32* %r31.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_100040cc = inttoptr i32 %v4_100040c4 to i32*
  %v2_100040cc = load i32, i32* %v1_100040cc, align 4
  store i32 %v2_100040cc, i32* %r0.global-to-local, align 4
  %v1_100040d0 = add i32 %v4_100040c4, 20
  store i32 %v1_100040d0, i32* %r11.global-to-local, align 4
  %v0_100040d4 = load i32, i32* %r21.global-to-local, align 4
  %v1_100040d4 = trunc i32 %v0_100040d4 to i16
  %v3_100040d4 = add i32 %v4_100040c4, 4
  %v4_100040d4 = inttoptr i32 %v3_100040d4 to i16*
  store i16 %v1_100040d4, i16* %v4_100040d4, align 2
  %v1_100040d8 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100040d8, i32* %r0.global-to-local, align 4
  store i32 5, i32* %r9.global-to-local, align 4
  %v1_100040e0 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 60, i32* %r9.global-to-local, align 4
  %v1_100040e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100040e8 = inttoptr i32 %v1_100040e8 to i32*
  store i32 %v1_100040e0, i32* %v2_100040e8, align 4
  %v0_100040ec = load i32, i32* %r9.global-to-local, align 4
  %v1_100040ec = trunc i32 %v0_100040ec to i16
  %v2_100040ec = load i32, i32* %r31.global-to-local, align 4
  %v3_100040ec = add i32 %v2_100040ec, 2
  %v4_100040ec = inttoptr i32 %v3_100040ec to i16*
  store i16 %v1_100040ec, i16* %v4_100040ec, align 2
  store i32 %v4_100040f0, i32* %r0.global-to-local, align 4
  %v2_100040f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100040f4 = add i32 %v2_100040f4, 1
  %v4_100040f4 = inttoptr i32 %v3_100040f4 to i8*
  store i8 %v5_10003ec0, i8* %v4_100040f4, align 1
  store i32 %v4_100040f8, i32* %r9.global-to-local, align 4
  %v2_100040fc = load i32, i32* %r31.global-to-local, align 4
  %v3_100040fc = add i32 %v2_100040fc, 8
  %v4_100040fc = inttoptr i32 %v3_100040fc to i8*
  store i8 %v5_10003ef8, i8* %v4_100040fc, align 1
  %v0_10004100 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004100, label %dec_label_pc_1000410c, label %dec_label_pc_10004104

dec_label_pc_10004104:                            ; preds = %dec_label_pc_100040a8
  store i32 16384, i32* %r0.global-to-local, align 4
  %v2_10004108 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004108 = add i32 %v2_10004108, 6
  %v4_10004108 = inttoptr i32 %v3_10004108 to i16*
  store i16 16384, i16* %v4_10004108, align 2
  br label %dec_label_pc_1000410c

dec_label_pc_1000410c:                            ; preds = %dec_label_pc_100040a8, %dec_label_pc_10004104
  store i32 6, i32* %r0.global-to-local, align 4
  %v0_10004110 = load i32, i32* %r15.global-to-local, align 4
  %v1_10004110 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004110 = add i32 %v1_10004110, 12
  %v3_10004110 = inttoptr i32 %v2_10004110 to i32*
  store i32 %v0_10004110, i32* %v3_10004110, align 4
  %v0_10004114 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004114 = trunc i32 %v0_10004114 to i8
  %v2_10004114 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004114 = add i32 %v2_10004114, 9
  %v4_10004114 = inttoptr i32 %v3_10004114 to i8*
  store i8 %v1_10004114, i8* %v4_10004114, align 1
  %v0_10004118 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004118 = trunc i32 %v0_10004118 to i16
  %v2_10004118 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004118 = add i32 %v2_10004118, 20
  %v4_10004118 = inttoptr i32 %v3_10004118 to i16*
  store i16 %v1_10004118, i16* %v4_10004118, align 2
  %v3_1000411c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000411c, i32* %r9.global-to-local, align 4
  %v0_10004120 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004120 = trunc i32 %v0_10004120 to i16
  %v2_10004120 = load i32, i32* %r11.global-to-local, align 4
  %v3_10004120 = add i32 %v2_10004120, 2
  %v4_10004120 = inttoptr i32 %v3_10004120 to i16*
  store i16 %v1_10004120, i16* %v4_10004120, align 2
  %v0_10004124 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004124 = mul i32 %v0_10004124, 24
  %v1_10004128 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004128 = add i32 %v1_10004128, %v1_10004124
  store i32 %v2_10004128, i32* %r9.global-to-local, align 4
  %v1_1000412c = add i32 %v2_10004128, 16
  %v2_1000412c = inttoptr i32 %v1_1000412c to i32*
  %v3_1000412c = load i32, i32* %v2_1000412c, align 4
  store i32 %v3_1000412c, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_10004134 = load i32, i32* %r31.global-to-local, align 4
  %v2_10004134 = add i32 %v1_10004134, 16
  %v3_10004134 = inttoptr i32 %v2_10004134 to i32*
  store i32 %v3_1000412c, i32* %v3_10004134, align 4
  %v0_10004138 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004138 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004138 = add i32 %v1_10004138, 4
  %v3_10004138 = inttoptr i32 %v2_10004138 to i32*
  store i32 %v0_10004138, i32* %v3_10004138, align 4
  %v0_1000413c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000413c = add i32 %v0_1000413c, 12
  %v2_1000413c = inttoptr i32 %v1_1000413c to i32*
  %v3_1000413c = load i32, i32* %v2_1000413c, align 4
  store i32 %v3_1000413c, i32* %r0.global-to-local, align 4
  %v1_10004140 = call i32 @__asm_rlwimi(i32 10, i32 28, i32 0, i32 3)
  store i32 %v1_10004140, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v1_10004148 = call i32 @__asm_rlwimi(i32 %v1_100040a0, i32 21, i32 10, i32 10)
  store i32 %v1_10004148, i32* %r0.global-to-local, align 4
  %v1_1000414c = call i32 @__asm_rlwimi(i32 %v1_10004090, i32 20, i32 11, i32 11)
  store i32 %v1_1000414c, i32* %r0.global-to-local, align 4
  %v1_10004150 = call i32 @__asm_rlwimi(i32 %v1_10004094, i32 19, i32 12, i32 12)
  store i32 %v1_10004150, i32* %r0.global-to-local, align 4
  %v1_10004154 = call i32 @__asm_rlwimi(i32 %v1_10004098, i32 18, i32 13, i32 13)
  store i32 %v1_10004154, i32* %r0.global-to-local, align 4
  %v1_10004158 = call i32 @__asm_rlwimi(i32 %v1_1000408c, i32 17, i32 14, i32 14)
  store i32 %v1_10004158, i32* %r0.global-to-local, align 4
  %v1_1000415c = call i32 @__asm_rlwimi(i32 %v1_1000409c, i32 16, i32 15, i32 15)
  %v1_10004160 = load i32, i32* %r11.global-to-local, align 4
  %v2_10004160 = add i32 %v1_10004160, 12
  %v3_10004160 = inttoptr i32 %v2_10004160 to i32*
  store i32 %v1_1000415c, i32* %v3_10004160, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_10004168 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004168 = add i32 %v2_10004168, 40
  %v4_10004168 = inttoptr i32 %v3_10004168 to i8*
  store i8 2, i8* %v4_10004168, align 1
  %v0_1000416c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000416c = trunc i32 %v0_1000416c to i8
  %v2_1000416c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000416c = add i32 %v2_1000416c, 41
  %v4_1000416c = inttoptr i32 %v3_1000416c to i8*
  store i8 %v1_1000416c, i8* %v4_1000416c, align 1
  %v0_10004170 = call i32 @function_10005b48()
  %v2_10004178 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004178 = add i32 %v2_10004178, 46
  %v4_10004178 = inttoptr i32 %v3_10004178 to i8*
  store i8 8, i8* %v4_10004178, align 1
  %v1_1000417c = urem i32 %v0_10004170, 16
  store i32 %v1_1000417c, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  %v2_10004188 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004188 = add i32 %v2_10004188, 44
  %v4_10004188 = inttoptr i32 %v3_10004188 to i8*
  store i8 4, i8* %v4_10004188, align 1
  %v0_1000418c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000418c = add i32 %v0_1000418c, 1400
  store i32 %v1_1000418c, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_10004194 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004194 = trunc i32 %v0_10004194 to i8
  %v2_10004194 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004194 = add i32 %v2_10004194, 45
  %v4_10004194 = inttoptr i32 %v3_10004194 to i8*
  store i8 %v1_10004194, i8* %v4_10004194, align 1
  %v0_10004198 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004198 = trunc i32 %v0_10004198 to i8
  %v2_10004198 = load i32, i32* %r31.global-to-local, align 4
  %v3_10004198 = add i32 %v2_10004198, 47
  %v4_10004198 = inttoptr i32 %v3_10004198 to i8*
  store i8 %v1_10004198, i8* %v4_10004198, align 1
  %v0_1000419c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000419c = trunc i32 %v0_1000419c to i16
  %v2_1000419c = load i32, i32* %r31.global-to-local, align 4
  %v3_1000419c = add i32 %v2_1000419c, 42
  %v4_1000419c = inttoptr i32 %v3_1000419c to i16*
  store i16 %v1_1000419c, i16* %v4_1000419c, align 2
  %v0_100041a0 = call i32 @function_10005b48()
  store i32 %v0_100041a0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v1_100041ac = load i32, i32* %r31.global-to-local, align 4
  %v2_100041ac = add i32 %v1_100041ac, 52
  %v3_100041ac = inttoptr i32 %v2_100041ac to i32*
  store i32 0, i32* %v3_100041ac, align 4
  %v0_100041b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041b0 = trunc i32 %v0_100041b0 to i8
  %v2_100041b0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041b0 = add i32 %v2_100041b0, 56
  %v4_100041b0 = inttoptr i32 %v3_100041b0 to i8*
  store i8 %v1_100041b0, i8* %v4_100041b0, align 1
  store i32 6, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r9.global-to-local, align 4
  %v1_100041bc = load i32, i32* %r31.global-to-local, align 4
  %v2_100041bc = add i32 %v1_100041bc, 48
  %v3_100041bc = inttoptr i32 %v2_100041bc to i32*
  store i32 %v0_100041a0, i32* %v3_100041bc, align 4
  %v0_100041c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100041c0 = trunc i32 %v0_100041c0 to i8
  %v2_100041c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c0 = add i32 %v2_100041c0, 59
  %v4_100041c0 = inttoptr i32 %v3_100041c0 to i8*
  store i8 %v1_100041c0, i8* %v4_100041c0, align 1
  %v0_100041c4 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c4 = trunc i32 %v0_100041c4 to i8
  %v2_100041c4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c4 = add i32 %v2_100041c4, 57
  %v4_100041c4 = inttoptr i32 %v3_100041c4 to i8*
  store i8 %v1_100041c4, i8* %v4_100041c4, align 1
  %v0_100041c8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100041c8 = trunc i32 %v0_100041c8 to i8
  %v2_100041c8 = load i32, i32* %r31.global-to-local, align 4
  %v3_100041c8 = add i32 %v2_100041c8, 58
  %v4_100041c8 = inttoptr i32 %v3_100041c8 to i8*
  store i8 %v1_100041c8, i8* %v4_100041c8, align 1
  %v3_100041cc = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_100041cc, i32* %r9.global-to-local, align 4
  %v1_100041d0 = add i32 %v3_100041cc, 1
  store i32 %v1_100041d0, i32* %r31.global-to-local, align 4
  %v1_100041d4 = load i32, i32* %r24.global-to-local, align 4
  %v2_100041d4 = icmp slt i32 %v1_100041d0, %v1_100041d4
  store i32 %v1_100041d0, i32* %stack_var_-120, align 4
  br i1 %v2_100041d4, label %dec_label_pc_100040a8, label %dec_label_pc_100041e0.loopexit

dec_label_pc_100041e0.loopexit:                   ; preds = %dec_label_pc_1000410c
  %v0_100041e4.pre = load i32, i32* %r14.global-to-local, align 4
  %v0_100041e8.pre.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100041e8.pre.pre = load i1, i1* %cr4_lt.global-to-local, align 1
  br label %dec_label_pc_100041e0

dec_label_pc_100041e0:                            ; preds = %dec_label_pc_100041e0.loopexit, %dec_label_pc_10004064
  %v1_100041e8.pre = phi i1 [ %v1_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_10004064, %dec_label_pc_10004064 ]
  %v0_100041e8.pre = phi i1 [ %v0_100041e8.pre.pre, %dec_label_pc_100041e0.loopexit ], [ %v3_10004064, %dec_label_pc_10004064 ]
  %v0_100041e4 = phi i32 [ %v0_100041e4.pre, %dec_label_pc_100041e0.loopexit ], [ %v1_1000407c, %dec_label_pc_10004064 ]
  %v0_100041e0 = load i32, i32* %r15.global-to-local, align 4
  %v3_100041e0 = icmp eq i32 %v0_100041e0, -1
  store i1 %v3_100041e0, i1* %cr2_eq.global-to-local, align 1
  %v3_100041e4 = icmp eq i32 %v0_100041e4, 0
  store i1 %v3_100041e4, i1* %cr3_eq.global-to-local, align 1
  br label %dec_label_pc_100041e8.outer

dec_label_pc_100041e8.outer:                      ; preds = %dec_label_pc_100042c4, %dec_label_pc_100041e0
  %v1_100041e8.ph = phi i1 [ %v1_100041e8.pre, %dec_label_pc_100041e0 ], [ %v1_100042c4, %dec_label_pc_100042c4 ]
  %v0_100041e8.ph = phi i1 [ %v0_100041e8.pre, %dec_label_pc_100041e0 ], [ %v0_100042c4, %dec_label_pc_100042c4 ]
  %v2_100041e8 = or i1 %v1_100041e8.ph, %v0_100041e8.ph
  br label %dec_label_pc_100041e8

dec_label_pc_100041e8:                            ; preds = %dec_label_pc_100041e8.outer, %dec_label_pc_100041e8
  br i1 %v2_100041e8, label %dec_label_pc_100041e8, label %dec_label_pc_100041ec

dec_label_pc_100041ec:                            ; preds = %dec_label_pc_100041e8, %dec_label_pc_100042c4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-120, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_10004254, %dec_label_pc_100041ec
  %v0_100041fc = phi i32 [ %v1_100042b4, %dec_label_pc_10004254 ], [ 0, %dec_label_pc_100041ec ]
  %v1_100041fc = mul i32 %v0_100041fc, 24
  store i32 %v1_100041fc, i32* %r0.global-to-local, align 4
  %v1_10004200 = mul i32 %v0_100041fc, 4
  store i32 %v1_10004200, i32* %r11.global-to-local, align 4
  %v1_10004204 = load i32, i32* %r25.global-to-local, align 4
  %v2_10004204 = add i32 %v1_10004204, %v1_10004200
  %v3_10004204 = inttoptr i32 %v2_10004204 to i32*
  %v4_10004204 = load i32, i32* %v3_10004204, align 4
  store i32 %v4_10004204, i32* %r28.global-to-local, align 4
  %v1_10004208 = load i32, i32* %r27.global-to-local, align 4
  %v2_10004208 = add i32 %v1_10004208, %v1_100041fc
  %v1_1000420c = add i32 %v2_10004208, 20
  %v2_1000420c = inttoptr i32 %v1_1000420c to i8*
  %v3_1000420c = load i8, i8* %v2_1000420c, align 1
  %v4_1000420c = zext i8 %v3_1000420c to i32
  store i32 %v4_1000420c, i32* %r9.global-to-local, align 4
  %v1_10004210 = add i32 %v4_10004204, 20
  store i32 %v1_10004210, i32* @r31, align 4
  %tmp41 = icmp ult i8 %v3_1000420c, 32
  br i1 %tmp41, label %dec_label_pc_100042cc, label %dec_label_pc_1000421c

dec_label_pc_1000421c:                            ; preds = %dec_label_pc_100041fc
  %v0_1000421c = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_1000421c, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_10004220:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 65535, i32* %r29.global-to-local, align 4
  %v0_10004228 = load i32, i32* %r21.global-to-local, align 4
  %v4_10004228 = icmp eq i32 %v0_10004228, 65535
  br i1 %v4_10004228, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v1_10004230 = phi i32 [ %v1_10004304, %dec_label_pc_100042f4 ], [ 65535, %dec_label_pc_10004220 ]
  %v0_10004230 = load i32, i32* %r22.global-to-local, align 4
  %v4_10004230 = icmp eq i32 %v0_10004230, %v1_10004230
  br i1 %v4_10004230, label %dec_label_pc_1000431c, label %dec_label_pc_10004238

dec_label_pc_10004238:                            ; preds = %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge, %dec_label_pc_10004230
  %v1_10004238 = phi i32 [ %v1_10004238.pre, %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge ], [ %v1_10004230, %dec_label_pc_10004230 ]
  %v0_10004238 = load i32, i32* %r23.global-to-local, align 4
  %v4_10004238 = icmp eq i32 %v0_10004238, %v1_10004238
  br i1 %v4_10004238, label %dec_label_pc_1000432c, label %dec_label_pc_10004240

dec_label_pc_10004240:                            ; preds = %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge, %dec_label_pc_10004238
  %v1_10004240 = phi i32 [ %v1_10004240.pre, %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge ], [ %v1_10004238, %dec_label_pc_10004238 ]
  %v0_10004240 = load i32, i32* %r19.global-to-local, align 4
  %v4_10004240 = icmp eq i32 %v0_10004240, %v1_10004240
  br i1 %v4_10004240, label %dec_label_pc_1000433c, label %dec_label_pc_10004248

dec_label_pc_10004248:                            ; preds = %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge, %dec_label_pc_10004240
  %v1_10004248 = phi i32 [ %v1_10004248.pre, %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge ], [ %v1_10004240, %dec_label_pc_10004240 ]
  %v0_10004248 = load i32, i32* %r20.global-to-local, align 4
  %v4_10004248 = icmp eq i32 %v0_10004248, %v1_10004248
  br i1 %v4_10004248, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_10004250:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_10004250 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004250, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004254:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c, %dec_label_pc_10004358
  %v0_10004254 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004254 = trunc i32 %v0_10004254 to i16
  %v2_10004254 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004254 = add i32 %v2_10004254, 10
  %v4_10004254 = inttoptr i32 %v3_10004254 to i16*
  store i16 %v1_10004254, i16* %v4_10004254, align 2
  %v0_1000425c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000425c, i32* @r3, align 4
  %v2_10004260 = call i32 @function_100043cc(i32 %v0_1000425c, i32 20)
  %v3_10004260 = trunc i32 %v2_10004260 to i16
  %v0_10004264 = load i32, i32* @r31, align 4
  store i32 %v0_10004264, i32* @r4, align 4
  %v4_10004268 = add i32 %v0_1000425c, 10
  %v5_10004268 = inttoptr i32 %v4_10004268 to i16*
  store i16 %v3_10004260, i16* %v5_10004268, align 2
  %v0_10004270 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004270 = trunc i32 %v0_10004270 to i16
  %v2_10004270 = load i32, i32* @r31, align 4
  %v3_10004270 = add i32 %v2_10004270, 16
  %v4_10004270 = inttoptr i32 %v3_10004270 to i16*
  store i16 %v1_10004270, i16* %v4_10004270, align 2
  %v0_10004278 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004278, i32* %r3.global-to-local, align 4
  %v4_1000427c = call i32 @function_10004430(i32 %v0_10004278, i32 %v0_10004264, i32 40, i32 40)
  %v5_1000427c = trunc i32 %v4_1000427c to i16
  store i32 %v4_1000427c, i32* %r3.global-to-local, align 4
  %v3_10004280 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_10004280, i32* %r7.global-to-local, align 4
  %v0_10004284 = load i32, i32* @r31, align 4
  %v1_10004284 = add i32 %v0_10004284, 2
  %v2_10004284 = inttoptr i32 %v1_10004284 to i16*
  %v3_10004284 = load i16, i16* %v2_10004284, align 2
  %v4_10004284 = zext i16 %v3_10004284 to i32
  store i32 %v4_10004284, i32* %r0.global-to-local, align 4
  %v0_10004288 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000428c = mul i32 %v3_10004280, 24
  store i32 %v1_1000428c, i32* %r7.global-to-local, align 4
  %v4_10004290 = add i32 %v0_10004284, 16
  %v5_10004290 = inttoptr i32 %v4_10004290 to i16*
  store i16 %v5_1000427c, i16* %v5_10004290, align 2
  %v0_10004298 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004298, i32* %r3.global-to-local, align 4
  %v0_1000429c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000429c = load i32, i32* %r27.global-to-local, align 4
  %v2_1000429c = add i32 %v1_1000429c, %v0_1000429c
  store i32 %v2_1000429c, i32* %r7.global-to-local, align 4
  %v0_100042a4 = load i32, i32* %r0.global-to-local, align 4
  %v1_100042a4 = trunc i32 %v0_100042a4 to i16
  %v3_100042a4 = add i32 %v2_1000429c, 2
  %v4_100042a4 = inttoptr i32 %v3_100042a4 to i16*
  store i16 %v1_100042a4, i16* %v4_100042a4, align 2
  store i32 268452528, i32* @lr, align 4
  %v6_100042ac = call i32 @function_1000a1fc(i32 %v0_10004298, i32 %v0_10004288, i32 60, i32 16384, i32 %v2_1000429c, i32 16)
  store i32 %v6_100042ac, i32* %r3.global-to-local, align 4
  %v3_100042b0 = load i32, i32* %stack_var_-120, align 4
  %v1_100042b4 = add i32 %v3_100042b0, 1
  store i32 %v1_100042b4, i32* %r9.global-to-local, align 4
  %v1_100042b8 = load i32, i32* %r24.global-to-local, align 4
  %v2_100042b8 = icmp slt i32 %v1_100042b4, %v1_100042b8
  store i32 %v1_100042b4, i32* %stack_var_-120, align 4
  br i1 %v2_100042b8, label %dec_label_pc_100041fc, label %dec_label_pc_100042c4

dec_label_pc_100042c4:                            ; preds = %dec_label_pc_10004254
  %v0_100042c4 = load i1, i1* %cr4_eq.global-to-local, align 1
  %v1_100042c4 = load i1, i1* %cr4_lt.global-to-local, align 1
  %v2_100042c4 = or i1 %v0_100042c4, %v1_100042c4
  br i1 %v2_100042c4, label %dec_label_pc_100041e8.outer, label %dec_label_pc_100041ec

dec_label_pc_100042cc:                            ; preds = %dec_label_pc_100041fc
  %v1_100042cc = add i32 %v2_10004208, 16
  %v2_100042cc = inttoptr i32 %v1_100042cc to i32*
  %v3_100042cc = load i32, i32* %v2_100042cc, align 4
  store i32 %v3_100042cc, i32* %r29.global-to-local, align 4
  %v0_100042d0 = call i32 @function_10005b48()
  store i32 %v0_100042d0, i32* %r3.global-to-local, align 4
  %v3_100042d4 = load i32, i32* %stack_var_-120, align 4
  %v1_100042d8 = mul i32 %v3_100042d4, 24
  %v1_100042dc = load i32, i32* %r27.global-to-local, align 4
  %v2_100042dc = add i32 %v1_100042dc, %v1_100042d8
  store i32 %v2_100042dc, i32* %r9.global-to-local, align 4
  %v1_100042e0 = add i32 %v2_100042dc, 20
  %v2_100042e0 = inttoptr i32 %v1_100042e0 to i8*
  %v3_100042e0 = load i8, i8* %v2_100042e0, align 1
  %v4_100042e0 = zext i8 %v3_100042e0 to i32
  store i32 %v4_100042e0, i32* %r0.global-to-local, align 4
  %tmp = urem i8 %v3_100042e0, 64
  %v2_100042e4 = zext i8 %tmp to i32
  %v3_100042e4 = lshr i32 %v0_100042d0, %v2_100042e4
  store i32 %v3_100042e4, i32* %r3.global-to-local, align 4
  %v0_100042e8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100042e8 = add i32 %v3_100042e4, %v0_100042e8
  store i32 %v2_100042e8, i32* %r29.global-to-local, align 4
  %v1_100042ec = load i32, i32* %r28.global-to-local, align 4
  %v2_100042ec = add i32 %v1_100042ec, 16
  %v3_100042ec = inttoptr i32 %v2_100042ec to i32*
  store i32 %v2_100042e8, i32* %v3_100042ec, align 4
  %v0_100042f0 = load i1, i1* %cr2_eq.global-to-local, align 1
  br i1 %v0_100042f0, label %dec_label_pc_100042f4, label %dec_label_pc_10004220

dec_label_pc_100042f4:                            ; preds = %dec_label_pc_100042cc, %dec_label_pc_1000421c
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_100042f8 = call i32 @function_10005b48()
  store i32 %v0_100042f8, i32* %r3.global-to-local, align 4
  store i32 65535, i32* %r29.global-to-local, align 4
  %v1_10004300 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004300 = add i32 %v1_10004300, 12
  %v3_10004300 = inttoptr i32 %v2_10004300 to i32*
  store i32 %v0_100042f8, i32* %v3_10004300, align 4
  %v0_10004304 = load i32, i32* %r21.global-to-local, align 4
  %v1_10004304 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004304 = icmp eq i32 %v0_10004304, %v1_10004304
  br i1 %v4_10004304, label %dec_label_pc_1000430c, label %dec_label_pc_10004230

dec_label_pc_1000430c:                            ; preds = %dec_label_pc_100042f4, %dec_label_pc_10004220
  %v0_1000430c = call i32 @function_10005b48()
  %v1_1000430c = trunc i32 %v0_1000430c to i16
  store i32 %v0_1000430c, i32* %r3.global-to-local, align 4
  %v0_10004310 = load i32, i32* %r22.global-to-local, align 4
  %v1_10004310 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004310 = icmp eq i32 %v0_10004310, %v1_10004310
  %v3_10004314 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004314 = add i32 %v3_10004314, 4
  %v5_10004314 = inttoptr i32 %v4_10004314 to i16*
  store i16 %v1_1000430c, i16* %v5_10004314, align 2
  br i1 %v4_10004310, label %dec_label_pc_1000431c, label %dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge

dec_label_pc_1000430c.dec_label_pc_10004238_crit_edge: ; preds = %dec_label_pc_1000430c
  %v1_10004238.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004238

dec_label_pc_1000431c:                            ; preds = %dec_label_pc_1000430c, %dec_label_pc_10004230
  %v0_1000431c = call i32 @function_10005b48()
  %v1_1000431c = trunc i32 %v0_1000431c to i16
  store i32 %v0_1000431c, i32* %r3.global-to-local, align 4
  %v0_10004320 = load i32, i32* %r23.global-to-local, align 4
  %v1_10004320 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004320 = icmp eq i32 %v0_10004320, %v1_10004320
  %v3_10004324 = load i32, i32* %r28.global-to-local, align 4
  %v4_10004324 = add i32 %v3_10004324, 20
  %v5_10004324 = inttoptr i32 %v4_10004324 to i16*
  store i16 %v1_1000431c, i16* %v5_10004324, align 2
  br i1 %v4_10004320, label %dec_label_pc_1000432c, label %dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge

dec_label_pc_1000431c.dec_label_pc_10004240_crit_edge: ; preds = %dec_label_pc_1000431c
  %v1_10004240.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004240

dec_label_pc_1000432c:                            ; preds = %dec_label_pc_1000431c, %dec_label_pc_10004238
  %v0_1000432c = call i32 @function_10005b48()
  %v1_1000432c = trunc i32 %v0_1000432c to i16
  store i32 %v0_1000432c, i32* %r3.global-to-local, align 4
  %v0_10004330 = load i32, i32* %r19.global-to-local, align 4
  %v1_10004330 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004330 = icmp eq i32 %v0_10004330, %v1_10004330
  %v3_10004334 = load i32, i32* @r31, align 4
  %v4_10004334 = add i32 %v3_10004334, 2
  %v5_10004334 = inttoptr i32 %v4_10004334 to i16*
  store i16 %v1_1000432c, i16* %v5_10004334, align 2
  br i1 %v4_10004330, label %dec_label_pc_1000433c, label %dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge

dec_label_pc_1000432c.dec_label_pc_10004248_crit_edge: ; preds = %dec_label_pc_1000432c
  %v1_10004248.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004248

dec_label_pc_1000433c:                            ; preds = %dec_label_pc_1000432c, %dec_label_pc_10004240
  %v0_1000433c = call i32 @function_10005b48()
  store i32 %v0_1000433c, i32* %r3.global-to-local, align 4
  %v0_10004340 = load i32, i32* %r20.global-to-local, align 4
  %v1_10004340 = load i32, i32* %r29.global-to-local, align 4
  %v4_10004340 = icmp eq i32 %v0_10004340, %v1_10004340
  %v1_10004344 = load i32, i32* @r31, align 4
  %v2_10004344 = add i32 %v1_10004344, 4
  %v3_10004344 = inttoptr i32 %v2_10004344 to i32*
  store i32 %v0_1000433c, i32* %v3_10004344, align 4
  br i1 %v4_10004340, label %dec_label_pc_1000434c, label %dec_label_pc_10004250

dec_label_pc_1000434c:                            ; preds = %dec_label_pc_1000433c, %dec_label_pc_10004248
  %v0_1000434c = call i32 @function_10005b48()
  store i32 %v0_1000434c, i32* %r3.global-to-local, align 4
  %v1_10004350 = load i32, i32* @r31, align 4
  %v2_10004350 = add i32 %v1_10004350, 8
  %v3_10004350 = inttoptr i32 %v2_10004350 to i32*
  store i32 %v0_1000434c, i32* %v3_10004350, align 4
  %v0_10004354 = load i1, i1* %cr3_eq.global-to-local, align 1
  br i1 %v0_10004354, label %dec_label_pc_10004254, label %dec_label_pc_10004358

dec_label_pc_10004358:                            ; preds = %dec_label_pc_10004250, %dec_label_pc_1000434c
  %v0_10004358 = call i32 @function_10005b48()
  %v1_10004358 = trunc i32 %v0_10004358 to i16
  store i32 %v0_10004358, i32* %r3.global-to-local, align 4
  %v3_1000435c = load i32, i32* @r31, align 4
  %v4_1000435c = add i32 %v3_1000435c, 18
  %v5_1000435c = inttoptr i32 %v4_1000435c to i16*
  store i16 %v1_10004358, i16* %v5_1000435c, align 2
  br label %dec_label_pc_10004254

dec_label_pc_10004364:                            ; preds = %dec_label_pc_10004040
  %v0_10004364 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10004364, i32* %r3.global-to-local, align 4
  store i32 268452716, i32* @lr, align 4
  %v0_10004368 = call i32 @function_1000955c()
  store i32 %v0_10004368, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000436c

dec_label_pc_1000436c:                            ; preds = %dec_label_pc_10003e28, %dec_label_pc_10004364
  store i32 %v0_10003e40, i32* %r0.global-to-local, align 4
  %v1_10004380 = call %0 @__asm_mtcrf(i32 56, i32 %v0_10003e30)
  store i32 %v0_10003e80, i32* %r28.global-to-local, align 4
  store i32 %v0_10003e88, i32* %r29.global-to-local, align 4
  store i32 %v0_10003e94, i32* %r31.global-to-local, align 4
  %v0_100043c8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100043c8

; uselistorder directives
  uselistorder i32 %v0_10004358, { 1, 0 }
  uselistorder i32 %v0_1000432c, { 1, 0 }
  uselistorder i32 %v0_1000431c, { 1, 0 }
  uselistorder i32 %v0_1000430c, { 1, 0 }
  uselistorder i32 %v1_10004304, { 1, 0 }
  uselistorder i1 %v1_100042c4, { 1, 0 }
  uselistorder i1 %v0_100042c4, { 1, 0 }
  uselistorder i32 %v1_100042b4, { 0, 2, 3, 1 }
  uselistorder i32 %v4_1000427c, { 1, 0 }
  uselistorder i32 %v1_10004200, { 1, 0 }
  uselistorder i32 %v1_100040c0, { 1, 0 }
  uselistorder i32 %v1_100040b8, { 1, 0 }
  uselistorder i32 %v1_100040a0, { 1, 0 }
  uselistorder i32 %v1_1000409c, { 1, 0 }
  uselistorder i32 %v1_10004098, { 1, 0 }
  uselistorder i32 %v1_10004094, { 1, 0 }
  uselistorder i32 %v1_10004090, { 1, 0 }
  uselistorder i32 %v1_1000408c, { 1, 0 }
  uselistorder i32 %v1_1000407c, { 1, 0 }
  uselistorder i8 %v5_10003ef8, { 1, 0 }
  uselistorder i8 %v5_10003ec0, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r30.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 1, 11, 9, 12, 8, 13, 10, 14, 2, 3, 5, 4, 6, 7, 15, 0 }
  uselistorder i32* %r28.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 30, 26, 27, 28, 29, 0, 1, 2, 3, 4 }
  uselistorder i1* %cr4_lt.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cr3_eq.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 41, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_1000436c, { 1, 0 }
  uselistorder label %dec_label_pc_10004358, { 1, 0 }
  uselistorder label %dec_label_pc_10004254, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100041ec, { 1, 0 }
  uselistorder label %dec_label_pc_100041e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000410c, { 1, 0 }
}

define i32 @function_100043cc(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100043cc:
  %tmp = or i32 %arg1, 1
  %tmp8 = icmp eq i32 %tmp, 1
  br i1 %tmp8, label %dec_label_pc_10004400, label %dec_label_pc_100043d8

dec_label_pc_100043d8:                            ; preds = %dec_label_pc_100043cc
  %v1_100043d8 = add i32 %arg1, -2
  %v1_100043dc = udiv i32 %v1_100043d8, 2
  %v1_100043e0 = add nuw i32 %v1_100043dc, 1
  %v0_100043ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100043ec

dec_label_pc_100043ec:                            ; preds = %dec_label_pc_100043ec, %dec_label_pc_100043d8
  %v0_100043fc = phi i32 [ %v1_100043fc, %dec_label_pc_100043ec ], [ %v1_100043e0, %dec_label_pc_100043d8 ]
  %v0_100043f8 = phi i32 [ %v2_100043f8, %dec_label_pc_100043ec ], [ 0, %dec_label_pc_100043d8 ]
  %v0_100043f4 = phi i32 [ %v1_100043f4, %dec_label_pc_100043ec ], [ %v0_100043ec.pre, %dec_label_pc_100043d8 ]
  %v1_100043ec = inttoptr i32 %v0_100043f4 to i16*
  %v2_100043ec = load i16, i16* %v1_100043ec, align 2
  %v3_100043ec = zext i16 %v2_100043ec to i32
  %v1_100043f4 = add i32 %v0_100043f4, 2
  store i32 %v1_100043f4, i32* @r3, align 4
  %v2_100043f8 = add i32 %v3_100043ec, %v0_100043f8
  %v1_100043fc = add i32 %v0_100043fc, -1
  %v2_100043fc = icmp eq i32 %v1_100043fc, 0
  br i1 %v2_100043fc, label %dec_label_pc_10004400.loopexit, label %dec_label_pc_100043ec

dec_label_pc_10004400.loopexit:                   ; preds = %dec_label_pc_100043ec
  %tmp11 = mul i32 %v1_100043dc, -2
  %tmp10 = add i32 %v1_100043d8, %tmp11
  br label %dec_label_pc_10004400

dec_label_pc_10004400:                            ; preds = %dec_label_pc_10004400.loopexit, %dec_label_pc_100043cc
  %v0_1000440c = phi i32 [ 0, %dec_label_pc_100043cc ], [ %v2_100043f8, %dec_label_pc_10004400.loopexit ]
  %v0_10004400 = phi i32 [ %arg1, %dec_label_pc_100043cc ], [ %tmp10, %dec_label_pc_10004400.loopexit ]
  %v3_10004400 = icmp eq i32 %v0_10004400, 1
  br i1 %v3_10004400, label %dec_label_pc_10004408, label %dec_label_pc_10004410

dec_label_pc_10004408:                            ; preds = %dec_label_pc_10004400
  %v0_10004408 = load i32, i32* @r3, align 4
  %v1_10004408 = add i32 %v0_10004408, 1
  %v2_10004408 = inttoptr i32 %v1_10004408 to i8*
  %v3_10004408 = load i8, i8* %v2_10004408, align 1
  %v4_10004408 = zext i8 %v3_10004408 to i32
  %v2_1000440c = add i32 %v4_10004408, %v0_1000440c
  br label %dec_label_pc_10004410

dec_label_pc_10004410:                            ; preds = %dec_label_pc_10004400, %dec_label_pc_10004408
  %v0_10004410 = phi i32 [ %v0_1000440c, %dec_label_pc_10004400 ], [ %v2_1000440c, %dec_label_pc_10004408 ]
  %v1_10004410 = urem i32 %v0_10004410, 65536
  %v1_10004414 = udiv i32 %v0_10004410, 65536
  %v2_10004418 = add nuw nsw i32 %v1_10004410, %v1_10004414
  %v1_1000441c = udiv i32 %v2_10004418, 65536
  %v2_10004420 = add nuw nsw i32 %v1_1000441c, %v2_10004418
  %v1_10004424 = urem i32 %v2_10004420, 65536
  %v1_10004428 = xor i32 %v1_10004424, 65535
  ret i32 %v1_10004428

; uselistorder directives
  uselistorder i32 %v2_10004418, { 1, 0 }
  uselistorder i32 %v0_1000440c, { 1, 0 }
  uselistorder i32 %v1_100043fc, { 1, 0 }
  uselistorder i32 %v1_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004410, { 1, 0 }
}

define i32 @function_10004430(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10004430:
  %r0.global-to-local = alloca i32, align 4
  %v1_10004434 = add i32 %arg1, 12
  %v2_10004434 = inttoptr i32 %v1_10004434 to i32*
  %v3_10004434 = load i32, i32* %v2_10004434, align 4
  %v1_10004438 = add i32 %arg1, 16
  %v2_10004438 = inttoptr i32 %v1_10004438 to i32*
  %v3_10004438 = load i32, i32* %v2_10004438, align 4
  %tmp = icmp slt i32 %arg3, 2
  br i1 %tmp, label %dec_label_pc_10004474, label %dec_label_pc_10004440

dec_label_pc_10004440:                            ; preds = %dec_label_pc_10004430
  %v1_10004440 = add i32 %arg3, -2
  %v1_10004448 = icmp slt i32 %v1_10004440, 0
  %v1_1000444c = udiv i32 %v1_10004440, 2
  %v1_10004450 = add nuw i32 %v1_1000444c, 1
  br i1 %v1_10004448, label %dec_label_pc_100044dc, label %dec_label_pc_1000445c.preheader

dec_label_pc_1000445c.preheader:                  ; preds = %dec_label_pc_100044dc, %dec_label_pc_10004440
  %v0_100044704 = phi i32 [ 1, %dec_label_pc_100044dc ], [ %v1_10004450, %dec_label_pc_10004440 ]
  %v0_1000445c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_1000445c.preheader, %dec_label_pc_1000445c
  %v0_10004470 = phi i32 [ %v0_100044704, %dec_label_pc_1000445c.preheader ], [ %v1_10004470, %dec_label_pc_1000445c ]
  %v0_1000446c = phi i32 [ 0, %dec_label_pc_1000445c.preheader ], [ %v2_1000446c, %dec_label_pc_1000445c ]
  %v0_10004464 = phi i32 [ %v0_1000445c.pre, %dec_label_pc_1000445c.preheader ], [ %v1_10004464, %dec_label_pc_1000445c ]
  %v1_1000445c = inttoptr i32 %v0_10004464 to i16*
  %v2_1000445c = load i16, i16* %v1_1000445c, align 2
  %v3_1000445c = zext i16 %v2_1000445c to i32
  store i32 %v3_1000445c, i32* %r0.global-to-local, align 4
  %v1_10004464 = add i32 %v0_10004464, 2
  %v2_1000446c = add i32 %v3_1000445c, %v0_1000446c
  %v1_10004470 = add i32 %v0_10004470, -1
  %v2_10004470 = icmp eq i32 %v1_10004470, 0
  br i1 %v2_10004470, label %dec_label_pc_10004474.loopexit, label %dec_label_pc_1000445c

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_1000445c
  %tmp14 = mul i32 %v0_100044704, -2
  %tmp13 = add i32 %tmp14, %arg3
  %v3_10004468 = icmp eq i32 %tmp13, 1
  br i1 %v3_10004468, label %dec_label_pc_100044c8, label %dec_label_pc_10004478

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004430
  %v3_10004430 = icmp eq i32 %arg3, 1
  br i1 %v3_10004430, label %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, label %dec_label_pc_10004478

dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge: ; preds = %dec_label_pc_10004474
  %v0_100044c8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100044c8

dec_label_pc_10004478:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_10004474, %dec_label_pc_100044c8
  %v0_10004490 = phi i32 [ 0, %dec_label_pc_10004474 ], [ %v2_100044cc, %dec_label_pc_100044c8 ], [ %v2_1000446c, %dec_label_pc_10004474.loopexit ]
  %v1_10004478 = urem i32 %v3_10004434, 65536
  %v1_1000447c = udiv i32 %v3_10004434, 65536
  %v2_10004480 = add nuw nsw i32 %v1_10004478, %v1_1000447c
  store i32 %v2_10004480, i32* %r0.global-to-local, align 4
  %v1_10004484 = urem i32 %v3_10004438, 65536
  %v1_10004488 = add i32 %arg1, 9
  %v2_10004488 = inttoptr i32 %v1_10004488 to i8*
  %v3_10004488 = load i8, i8* %v2_10004488, align 1
  %v4_10004488 = zext i8 %v3_10004488 to i32
  %v1_1000448c = udiv i32 %v3_10004438, 65536
  %v2_10004490 = add i32 %v0_10004490, %v1_1000448c
  %v2_10004498 = add i32 %v2_10004490, %v4_10004488
  %v2_10004494 = add i32 %v2_10004480, %arg2
  %v2_1000449c = add i32 %v2_10004494, %v1_10004484
  %v2_100044a0 = add i32 %v2_1000449c, %v2_10004498
  store i32 %v2_100044a0, i32* %r0.global-to-local, align 4
  %v1_100044a4 = call i32 @__asm_rlwinm.(i32 %v2_100044a0, i32 16, i32 16, i32 31)
  %v4_100044a4 = icmp eq i32 %v1_100044a4, 0
  br i1 %v4_100044a4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044ac:                            ; preds = %dec_label_pc_10004478, %dec_label_pc_100044ac
  %v1_100044b0 = phi i32 [ %v1_100044b4, %dec_label_pc_100044ac ], [ %v1_100044a4, %dec_label_pc_10004478 ]
  %v0_100044ac = load i32, i32* %r0.global-to-local, align 4
  %v1_100044ac = urem i32 %v0_100044ac, 65536
  %v2_100044b0 = add i32 %v1_100044ac, %v1_100044b0
  store i32 %v2_100044b0, i32* %r0.global-to-local, align 4
  %v1_100044b4 = call i32 @__asm_rlwinm.(i32 %v2_100044b0, i32 16, i32 16, i32 31)
  %v4_100044b4 = icmp eq i32 %v1_100044b4, 0
  br i1 %v4_100044b4, label %dec_label_pc_100044bc, label %dec_label_pc_100044ac

dec_label_pc_100044bc:                            ; preds = %dec_label_pc_100044ac, %dec_label_pc_10004478
  %v0_100044bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100044bc = urem i32 %v0_100044bc, 65536
  %v1_100044c0 = xor i32 %v1_100044bc, 65535
  ret i32 %v1_100044c0

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge, %dec_label_pc_10004474.loopexit
  %v0_100044c8 = phi i32 [ %v1_10004464, %dec_label_pc_10004474.loopexit ], [ %v0_100044c8.pre, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v0_100044cc10 = phi i32 [ %v2_1000446c, %dec_label_pc_10004474.loopexit ], [ 0, %dec_label_pc_10004474.dec_label_pc_100044c8_crit_edge ]
  %v1_100044c8 = inttoptr i32 %v0_100044c8 to i8*
  %v2_100044c8 = load i8, i8* %v1_100044c8, align 1
  %v3_100044c8 = zext i8 %v2_100044c8 to i32
  store i32 %v3_100044c8, i32* %r0.global-to-local, align 4
  %v2_100044cc = add i32 %v3_100044c8, %v0_100044cc10
  br label %dec_label_pc_10004478

dec_label_pc_100044dc:                            ; preds = %dec_label_pc_10004440
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000445c.preheader

; uselistorder directives
  uselistorder i32 %v1_100044b4, { 1, 0 }
  uselistorder i32 %v1_10004470, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 65535, { 50, 51, 0, 7, 52, 53, 19, 20, 21, 22, 1, 8, 54, 55, 23, 24, 25, 26, 27, 56, 9, 28, 29, 57, 10, 30, 31, 13, 12, 11, 58, 59, 32, 33, 34, 14, 15, 60, 35, 61, 36, 62, 2, 16, 63, 64, 5, 37, 38, 39, 3, 17, 65, 66, 6, 40, 41, 42, 4, 18, 67, 68, 43, 44, 45, 69, 70, 71, 72, 73, 74, 46, 47, 75, 76, 77, 78, 79, 80, 48, 49 }
  uselistorder i32 %arg3, { 3, 0, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100044ac, { 1, 0 }
  uselistorder label %dec_label_pc_10004478, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 1, 0 }
}

define i32 @function_100044e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100044e8:
  %r26.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-8792 = alloca i32, align 4
  %stack_var_-8760 = alloca i8, align 1
  %stack_var_-8776 = alloca i8, align 1
  %stack_var_-4151 = alloca i32, align 4
  %stack_var_-8247 = alloca i32, align 4
  %v0_100044f8 = load i32, i32* @r27, align 4
  %v2_100044fc = ptrtoint i32* %stack_var_-8247 to i32
  store i32 %v2_100044fc, i32* @r27, align 4
  %v2_10004504 = ptrtoint i32* %stack_var_-4151 to i32
  %v0_10004508 = load i32, i32* @r29, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10004518 = load i32, i32* @r25, align 4
  %v2_1000451c = ptrtoint i8* %stack_var_-8776 to i32
  %v0_10004520 = load i32, i32* @r30, align 4
  %v2_10004524 = ptrtoint i8* %stack_var_-8760 to i32
  store i32 %v2_10004524, i32* @r30, align 4
  %v0_10004528 = load i32, i32* @r31, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v0_10004530 = load i32, i32* @r23, align 4
  %v0_10004538 = load i32, i32* @r28, align 4
  store i32 268453184, i32* @lr, align 4
  %v3_1000453c = call i32 @function_10009d60(i32 %v2_100044fc, i32 0, i32 4096)
  store i32 268453200, i32* @lr, align 4
  %v3_1000454c = call i32 @function_10009d60(i32 %v2_10004504, i32 0, i32 4096)
  store i32 268453216, i32* @lr, align 4
  %v3_1000455c = call i32 @function_10009d60(i32 %v2_10004524, i32 0, i32 513)
  %v0_10004568 = load i32, i32* @r29, align 4
  %v0_1000456c = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_1000456c, i32* %stack_var_-8792, align 4
  %v3_1000457c = trunc i32 %v0_10004568 to i8
  %v4_1000457c = call i32 @function_10009278(i8 %v3_1000457c, i32 16, i32 %v2_1000451c)
  store i32 268453256, i32* @lr, align 4
  %v2_10004584 = call i32 @function_10008d9c(i8* nonnull %stack_var_-8776)
  %v3_10004588 = icmp eq i32 %v2_10004584, 2
  br i1 %v3_10004588, label %dec_label_pc_10004ac8, label %dec_label_pc_10004590

dec_label_pc_10004590:                            ; preds = %dec_label_pc_100044e8, %dec_label_pc_10004ac8
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000459c.26 to i32), i32* @lr, align 4
  %v1_10004598 = call i32 @function_10008820(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_100045a4.27 to i32), i32* @lr, align 4
  %v1_100045a0 = call i32 @function_10008820(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_100045ac.28 to i32), i32* @lr, align 4
  %v1_100045a8 = call i32 @function_10008820(i32 15)
  store i32 268453300, i32* @lr, align 4
  %v1_100045b0 = call i32 @function_10008820(i32 17)
  %v3_100045bc = call i32 @function_1000876c(i32 17, i32* null)
  store i32 268453324, i32* @lr, align 4
  %v2_100045c8 = call i32 @function_100096c4(i32 %v3_100045bc, i32 0)
  %v3_100045cc = icmp eq i32 %v2_100045c8, -1
  store i32 %v2_100045c8, i32* @r28, align 4
  br i1 %v3_100045cc, label %dec_label_pc_10004a14, label %dec_label_pc_100045d8

dec_label_pc_100045d8:                            ; preds = %dec_label_pc_10004590
  %v2_100045d8 = ptrtoint i32* %stack_var_-8792 to i32
  store i32 %v2_100045d8, i32* %r26.global-to-local, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e888 = call i32 @function_10008ffc(i8* nonnull %stack_var_-8760, i32 512, i32 %v2_100045c8)
  %v3_100045ec90 = icmp eq i32 %v4_100045e888, 0
  br i1 %v3_100045ec90, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_100045f4:                            ; preds = %dec_label_pc_100045d8, %dec_label_pc_100045dc.backedge
  %v3_100045f4 = load i8, i8* %stack_var_-8760, align 1
  %v3_100045f8 = icmp eq i8 %v3_100045f4, 0
  br i1 %v3_100045f8, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004600

dec_label_pc_100045dc.backedge:                   ; preds = %dec_label_pc_10004614, %dec_label_pc_100045f4, %dec_label_pc_10004684, %dec_label_pc_1000471c, %dec_label_pc_10004768
  %v0_100045e4.pre = load i32, i32* @r28, align 4
  store i32 268453356, i32* @lr, align 4
  %v4_100045e8 = call i32 @function_10008ffc(i8* nonnull %stack_var_-8760, i32 512, i32 %v0_100045e4.pre)
  %v3_100045ec = icmp eq i32 %v4_100045e8, 0
  br i1 %v3_100045ec, label %dec_label_pc_10004794.loopexit, label %dec_label_pc_100045f4

dec_label_pc_10004600:                            ; preds = %dec_label_pc_100045f4
  %v3_10004600 = icmp eq i8 %v3_100045f4, 58
  store i32 3, i32* @r31, align 4
  br i1 %v3_10004600, label %dec_label_pc_10004634, label %dec_label_pc_10004610

dec_label_pc_10004610:                            ; preds = %dec_label_pc_10004600
  %v1_10004618.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004614

dec_label_pc_10004614:                            ; preds = %dec_label_pc_10004628, %dec_label_pc_10004610
  %v0_10004614 = phi i32 [ %v1_10004614, %dec_label_pc_10004628 ], [ 0, %dec_label_pc_10004610 ]
  %v1_10004614 = add i32 %v0_10004614, 1
  %v2_10004618 = add i32 %v1_10004614, %v1_10004618.pre
  %v3_10004618 = inttoptr i32 %v2_10004618 to i8*
  %v4_10004618 = load i8, i8* %v3_10004618, align 1
  %v3_1000461c = icmp eq i8 %v4_10004618, 0
  br i1 %v3_1000461c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004628

dec_label_pc_10004628:                            ; preds = %dec_label_pc_10004614
  %v3_10004620 = icmp eq i8 %v4_10004618, 58
  br i1 %v3_10004620, label %dec_label_pc_1000462c, label %dec_label_pc_10004614

dec_label_pc_1000462c:                            ; preds = %dec_label_pc_10004628
  %v1_1000462c = add i32 %v0_10004614, 4
  store i32 %v1_1000462c, i32* @r31, align 4
  %v1_10004630 = add i32 %v0_10004614, 3
  br label %dec_label_pc_10004634

dec_label_pc_10004634:                            ; preds = %dec_label_pc_10004600, %dec_label_pc_1000462c
  %v1_1000468c = phi i32 [ 2, %dec_label_pc_10004600 ], [ %v1_10004630, %dec_label_pc_1000462c ]
  %v0_10004634 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004634 = add i32 %v0_10004634, %v1_1000468c
  %v1_1000463c = add i32 %v2_10004634, 32
  %v2_1000463c = inttoptr i32 %v1_1000463c to i8*
  %v3_1000463c = load i8, i8* %v2_1000463c, align 1
  %v3_10004640 = icmp eq i8 %v3_1000463c, 0
  br i1 %v3_10004640, label %dec_label_pc_10004684, label %dec_label_pc_10004648

dec_label_pc_10004648:                            ; preds = %dec_label_pc_10004634
  %v3_10004648 = icmp eq i8 %v3_1000463c, 32
  %v1_1000464c = add i32 %v1_1000468c, 1
  store i32 %v1_1000464c, i32* @r31, align 4
  br i1 %v3_10004648, label %dec_label_pc_10004684, label %dec_label_pc_10004654

dec_label_pc_10004654:                            ; preds = %dec_label_pc_10004648
  %v0_1000465c = load i32, i32* @r30, align 4
  %v2_1000465c = add i32 %v0_1000465c, %v1_1000464c
  br label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %dec_label_pc_10004668, %dec_label_pc_10004654
  %v0_1000466c = phi i32 [ %v1_1000466c, %dec_label_pc_10004668 ], [ %v1_1000468c, %dec_label_pc_10004654 ]
  %v0_10004670 = phi i32 [ %v1_10004670, %dec_label_pc_10004668 ], [ %v2_1000465c, %dec_label_pc_10004654 ]
  %v1_10004668 = inttoptr i32 %v0_10004670 to i8*
  %v2_10004668 = load i8, i8* %v1_10004668, align 1
  %v1_1000466c = add i32 %v0_1000466c, 1
  %v1_10004670 = add i32 %v0_10004670, 1
  %tmp60 = or i8 %v2_10004668, 32
  %tmp61 = icmp eq i8 %tmp60, 32
  br i1 %tmp61, label %dec_label_pc_10004680, label %dec_label_pc_10004668

dec_label_pc_10004680:                            ; preds = %dec_label_pc_10004668
  %v1_10004680 = add i32 %v0_1000466c, 2
  store i32 %v1_10004680, i32* @r31, align 4
  br label %dec_label_pc_10004684

dec_label_pc_10004684:                            ; preds = %dec_label_pc_10004648, %dec_label_pc_10004634, %dec_label_pc_10004680
  %v1_10004684 = phi i32 [ %v1_1000468c, %dec_label_pc_10004648 ], [ %v1_1000468c, %dec_label_pc_10004634 ], [ %v1_1000466c, %dec_label_pc_10004680 ]
  %v2_10004684 = add i32 %v1_10004684, %v0_10004634
  %v0_1000468c = load i32, i32* @r30, align 4
  %v2_1000468c = add i32 %v0_1000468c, %v1_1000468c
  store i32 %v2_1000468c, i32* @r29, align 4
  %v3_10004690 = add i32 %v2_10004684, 32
  %v4_10004690 = inttoptr i32 %v3_10004690 to i8*
  store i8 0, i8* %v4_10004690, align 1
  %v0_10004694 = load i32, i32* @r29, align 4
  store i32 268453532, i32* @lr, align 4
  %v1_10004698 = inttoptr i32 %v0_10004694 to i8*
  %v2_10004698 = call i32 @function_10008d9c(i8* %v1_10004698)
  %v0_100046a4 = load i32, i32* @r29, align 4
  %v3_100046a8 = inttoptr i32 %v0_100046a4 to i8*
  %v4_100046a8 = call i32 @function_1000914c(i8* %v3_100046a8, i32 %v2_10004698, i32 %v2_1000451c)
  %v3_100046b0 = icmp eq i32 %v4_100046a8, -1
  br i1 %v3_100046b0, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_100046bc.preheader

dec_label_pc_100046bc.preheader:                  ; preds = %dec_label_pc_10004684
  %v0_100046bc.pre = load i32, i32* @r31, align 4
  %v0_100046c4.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100046bc.outer

dec_label_pc_100046bc.outer:                      ; preds = %dec_label_pc_10004a64, %dec_label_pc_100046bc.preheader
  %v0_100046d828.ph = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  %v0_100046bc.ph = phi i32 [ %v1_1000477076, %dec_label_pc_10004a64 ], [ %v0_100046bc.pre, %dec_label_pc_100046bc.preheader ]
  %v0_1000471c.ph = phi i32 [ 1, %dec_label_pc_10004a64 ], [ 0, %dec_label_pc_100046bc.preheader ]
  br label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046bc.outer, %dec_label_pc_10004a54
  %v0_100046d828 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a54 ], [ %v0_100046d828.ph, %dec_label_pc_100046bc.outer ]
  %v0_100046bc = phi i32 [ %v1_1000477076, %dec_label_pc_10004a54 ], [ %v0_100046bc.ph, %dec_label_pc_100046bc.outer ]
  %v1_100046bc = add i32 %v0_100046bc, 1
  %v2_100046c4 = add i32 %v1_100046bc, %v0_100046c4.pre
  %v1_100046f068 = inttoptr i32 %v2_100046c4 to i8*
  %v2_100046f069 = load i8, i8* %v1_100046f068, align 1
  store i32 %v1_100046bc, i32* @r31, align 4
  %v3_100046f871 = icmp eq i8 %v2_100046f069, 0
  br i1 %v3_100046f871, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_100046cc:                            ; preds = %dec_label_pc_10004708
  %v3_100046fc79 = icmp eq i8 %v3_100046fc79.in, 9
  br i1 %v3_100046fc79, label %dec_label_pc_1000470c, label %dec_label_pc_100046d8

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046cc
  %v3_100046cc = icmp eq i32 %v0_100046cc75, 1
  br i1 %v3_100046cc, label %dec_label_pc_10004a4c, label %dec_label_pc_100046e0

dec_label_pc_100046e0:                            ; preds = %dec_label_pc_100046d8, %dec_label_pc_10004a4c
  %v0_100046e0 = phi i32 [ %v1_10004a4c, %dec_label_pc_10004a4c ], [ %v0_1000470c74, %dec_label_pc_100046d8 ]
  %v2_100046e0 = icmp sgt i32 %v0_100046e0, 6
  br i1 %v2_100046e0, label %dec_label_pc_1000471c, label %dec_label_pc_100046ec

dec_label_pc_100046ec:                            ; preds = %dec_label_pc_1000470c, %dec_label_pc_100046e0
  %v0_100046d827 = phi i32 [ %v0_1000470c74, %dec_label_pc_1000470c ], [ %v0_100046e0, %dec_label_pc_100046e0 ]
  %v0_100046cc25 = phi i32 [ 1, %dec_label_pc_1000470c ], [ 0, %dec_label_pc_100046e0 ]
  %v0_100046f022 = add i32 %v0_1000471478, 1
  %v1_100046ec = add i32 %v1_1000477076, 1
  %v1_100046f0 = inttoptr i32 %v0_100046f022 to i8*
  %v2_100046f0 = load i8, i8* %v1_100046f0, align 1
  store i32 %v1_100046ec, i32* @r31, align 4
  %v3_100046f8 = icmp eq i8 %v2_100046f0, 0
  br i1 %v3_100046f8, label %dec_label_pc_1000471c, label %dec_label_pc_10004708

dec_label_pc_10004708:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_100046ec
  %v3_100046fc79.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v3_1000470080.in = phi i8 [ %v2_100046f0, %dec_label_pc_100046ec ], [ %v2_100046f069, %dec_label_pc_100046bc ]
  %v0_1000471478 = phi i32 [ %v0_100046f022, %dec_label_pc_100046ec ], [ %v2_100046c4, %dec_label_pc_100046bc ]
  %v1_1000477076 = phi i32 [ %v1_100046ec, %dec_label_pc_100046ec ], [ %v1_100046bc, %dec_label_pc_100046bc ]
  %v0_100046cc75 = phi i32 [ %v0_100046cc25, %dec_label_pc_100046ec ], [ 0, %dec_label_pc_100046bc ]
  %v0_1000470c74 = phi i32 [ %v0_100046d827, %dec_label_pc_100046ec ], [ %v0_100046d828, %dec_label_pc_100046bc ]
  %v3_1000470080 = icmp eq i8 %v3_1000470080.in, 32
  br i1 %v3_1000470080, label %dec_label_pc_1000470c, label %dec_label_pc_100046cc

dec_label_pc_1000470c:                            ; preds = %dec_label_pc_10004708, %dec_label_pc_100046cc
  %tmp62 = icmp slt i32 %v0_1000470c74, 7
  br i1 %tmp62, label %dec_label_pc_100046ec, label %dec_label_pc_1000471c

dec_label_pc_1000471c:                            ; preds = %dec_label_pc_100046ec, %dec_label_pc_100046e0, %dec_label_pc_1000470c, %dec_label_pc_100046bc
  %v1_10004770.lcssa = phi i32 [ %v1_100046bc, %dec_label_pc_100046bc ], [ %v1_1000477076, %dec_label_pc_1000470c ], [ %v1_1000477076, %dec_label_pc_100046e0 ], [ %v1_100046ec, %dec_label_pc_100046ec ]
  %v3_1000471c = icmp eq i32 %v0_1000471c.ph, 0
  br i1 %v3_1000471c, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004728

dec_label_pc_10004728:                            ; preds = %dec_label_pc_1000471c
  %v0_10004728 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004728 = add i32 %v0_10004728, %v1_10004770.lcssa
  %v1_1000472c = add i32 %v2_10004728, 32
  %v2_1000472c = inttoptr i32 %v1_1000472c to i8*
  %v3_1000472c = load i8, i8* %v2_1000472c, align 1
  %v3_10004730 = icmp eq i8 %v3_1000472c, 0
  br i1 %v3_10004730, label %dec_label_pc_10004768, label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %dec_label_pc_10004728
  %v3_10004738 = icmp eq i8 %v3_1000472c, 32
  br i1 %v3_10004738, label %dec_label_pc_10004768, label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %dec_label_pc_10004738
  %v1_10004740 = add i32 %v1_10004770.lcssa, 1
  %v2_10004744 = add i32 %v1_10004740, %v0_100046c4.pre
  br label %dec_label_pc_10004750

dec_label_pc_10004750:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004740
  %v0_10004754 = phi i32 [ %v1_10004754, %dec_label_pc_10004750 ], [ %v1_10004770.lcssa, %dec_label_pc_10004740 ]
  %v0_10004758 = phi i32 [ %v1_10004758, %dec_label_pc_10004750 ], [ %v2_10004744, %dec_label_pc_10004740 ]
  %v1_10004750 = inttoptr i32 %v0_10004758 to i8*
  %v2_10004750 = load i8, i8* %v1_10004750, align 1
  %v1_10004754 = add i32 %v0_10004754, 1
  %v1_10004758 = add i32 %v0_10004758, 1
  %tmp63 = or i8 %v2_10004750, 32
  %tmp64 = icmp eq i8 %tmp63, 32
  br i1 %tmp64, label %dec_label_pc_10004768, label %dec_label_pc_10004750

dec_label_pc_10004768:                            ; preds = %dec_label_pc_10004750, %dec_label_pc_10004738, %dec_label_pc_10004728
  %v1_10004768 = phi i32 [ %v1_10004770.lcssa, %dec_label_pc_10004738 ], [ %v1_10004770.lcssa, %dec_label_pc_10004728 ], [ %v1_10004754, %dec_label_pc_10004750 ]
  %v2_10004768 = add i32 %v1_10004768, %v0_10004728
  %v2_10004770 = add i32 %v1_10004770.lcssa, %v0_100046c4.pre
  store i32 %v2_10004770, i32* @r31, align 4
  %v3_10004774 = add i32 %v2_10004768, 32
  %v4_10004774 = inttoptr i32 %v3_10004774 to i8*
  store i8 0, i8* %v4_10004774, align 1
  %v0_10004778 = load i32, i32* @r31, align 4
  store i32 268453760, i32* @lr, align 4
  %v1_1000477c = inttoptr i32 %v0_10004778 to i8*
  %v2_1000477c = call i32 @function_10008d9c(i8* %v1_1000477c)
  %v2_10004780 = icmp sgt i32 %v2_1000477c, 15
  br i1 %v2_10004780, label %dec_label_pc_100045dc.backedge, label %dec_label_pc_10004788

dec_label_pc_10004788:                            ; preds = %dec_label_pc_10004768
  %v0_10004788 = load i32, i32* @r31, align 4
  store i32 %v2_100045d8, i32* @r3, align 4
  %v2_10004790 = bitcast i32* %stack_var_-8792 to i8*
  %v3_10004790 = call i32 @function_10008dc4(i8* %v2_10004790, i32 %v0_10004788)
  br label %dec_label_pc_10004794

dec_label_pc_10004794.loopexit:                   ; preds = %dec_label_pc_100045dc.backedge, %dec_label_pc_100045d8
  %.pre = bitcast i32* %stack_var_-8792 to i8*
  br label %dec_label_pc_10004794

dec_label_pc_10004794:                            ; preds = %dec_label_pc_10004794.loopexit, %dec_label_pc_10004788
  %v1_100047a0.pre-phi = phi i8* [ %.pre, %dec_label_pc_10004794.loopexit ], [ %v2_10004790, %dec_label_pc_10004788 ]
  store i32 268453788, i32* @lr, align 4
  %v0_10004798 = call i32 @function_1000955c()
  store i32 268453796, i32* @lr, align 4
  %v2_100047a0 = call i32 @function_10008d9c(i8* %v1_100047a0.pre-phi)
  %v3_100047a4 = icmp eq i32 %v2_100047a0, 0
  br i1 %v3_100047a4, label %dec_label_pc_10004a6c, label %dec_label_pc_100047ac

dec_label_pc_100047ac:                            ; preds = %dec_label_pc_10004794
  %v3_100047b4 = call i32 @function_1000876c(i32 13, i32* null)
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 268453824, i32* @lr, align 4
  %v1_100047bc = call i32 @function_10009aa8(i32 %v3_100047b4)
  store i32 %v1_100047bc, i32* @r23, align 4
  %v3_100047c0 = icmp eq i32 %v1_100047bc, 0
  br i1 %v3_100047c0, label %dec_label_pc_100049f4, label %dec_label_pc_100047c8

dec_label_pc_100047c8:                            ; preds = %dec_label_pc_100047ac
  store i32 0, i32* @r28, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d07 = inttoptr i32 %v1_100047bc to i32*
  %v2_100047d08 = call i32 @function_10009bb8(i32* %v1_100047d07)
  %v3_100047d411 = icmp eq i32 %v2_100047d08, 0
  br i1 %v3_100047d411, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader.lr.ph

dec_label_pc_100047dc.preheader.lr.ph:            ; preds = %dec_label_pc_100047c8
  %v2_10004810 = bitcast i32* %stack_var_-8247 to i8*
  %v1_10004980 = bitcast i32* %stack_var_-4151 to i8*
  br label %dec_label_pc_100047dc.preheader

dec_label_pc_100047cc.loopexit:                   ; preds = %dec_label_pc_100047e4, %dec_label_pc_100047fc, %dec_label_pc_10004864
  %v0_100047cc = load i32, i32* @r23, align 4
  store i32 268453844, i32* @lr, align 4
  %v1_100047d0 = inttoptr i32 %v0_100047cc to i32*
  %v2_100047d0 = call i32 @function_10009bb8(i32* %v1_100047d0)
  %v3_100047d4 = icmp eq i32 %v2_100047d0, 0
  br i1 %v3_100047d4, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc.preheader

dec_label_pc_100047dc.preheader:                  ; preds = %dec_label_pc_100047dc.preheader.lr.ph, %dec_label_pc_100047cc.loopexit
  %v0_100047e435 = phi i32 [ %v2_100047d08, %dec_label_pc_100047dc.preheader.lr.ph ], [ %v2_100047d0, %dec_label_pc_100047cc.loopexit ]
  br label %dec_label_pc_100047dc

dec_label_pc_100047dc:                            ; preds = %dec_label_pc_100047dc.preheader, %dec_label_pc_100049d0
  %v0_100047e4 = phi i32 [ %v0_100047e435, %dec_label_pc_100047dc.preheader ], [ %v2_100049dc, %dec_label_pc_100049d0 ]
  %v0_100047dc = load i32, i32* @r28, align 4
  %v3_100047dc = icmp eq i32 %v0_100047dc, 0
  br i1 %v3_100047dc, label %dec_label_pc_100047e4, label %dec_label_pc_100049e8

dec_label_pc_100047e4:                            ; preds = %dec_label_pc_100047dc
  %v1_100047e4 = add i32 %v0_100047e4, 11
  %v2_100047e4 = inttoptr i32 %v1_100047e4 to i8*
  %v3_100047e4 = load i8, i8* %v2_100047e4, align 1
  %v4_100047e4 = zext i8 %v3_100047e4 to i32
  store i32 %v1_100047e4, i32* @r30, align 4
  %v1_100047ec = add nuw nsw i32 %v4_100047e4, 208
  %v1_100047f0 = urem i32 %v1_100047ec, 256
  %v2_100047f4 = icmp ugt i32 %v1_100047f0, 9
  br i1 %v2_100047f4, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100047fc

dec_label_pc_100047fc:                            ; preds = %dec_label_pc_100047e4
  %v3_10004804 = call i32 @function_1000876c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004810 = call i32 @function_10008dc4(i8* %v2_10004810, i32 %v3_10004804)
  store i32 268453916, i32* @lr, align 4
  %v2_10004818 = call i32 @function_10008d9c(i8* %v2_10004810)
  %v0_1000481c = load i32, i32* @r30, align 4
  %v0_10004820 = load i32, i32* @r27, align 4
  %v2_10004820 = add i32 %v0_10004820, %v2_10004818
  store i32 %v2_10004820, i32* @r3, align 4
  %v2_10004824 = inttoptr i32 %v2_10004820 to i8*
  %v3_10004824 = call i32 @function_10008dc4(i8* %v2_10004824, i32 %v0_1000481c)
  store i32 268453936, i32* @lr, align 4
  %v2_1000482c = call i32 @function_10008d9c(i8* %v2_10004810)
  %v3_1000483c = call i32 @function_1000876c(i32 14, i32* null)
  %v0_10004844 = load i32, i32* @r27, align 4
  %v2_10004844 = add i32 %v2_1000482c, %v0_10004844
  store i32 %v2_10004844, i32* @r3, align 4
  %v2_10004848 = inttoptr i32 %v2_10004844 to i8*
  %v3_10004848 = call i32 @function_10008dc4(i8* %v2_10004848, i32 %v3_1000483c)
  store i32 4096, i32* @r5, align 4
  store i32 268453980, i32* @lr, align 4
  %v3_10004858 = call i32 @function_100097dc(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_1000485c = icmp eq i32 %v3_10004858, -1
  br i1 %v3_1000485c, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_10004864

dec_label_pc_10004864:                            ; preds = %dec_label_pc_100047fc
  %v3_1000486c = call i32 @function_1000876c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_10004878 = call i32 @function_10008dc4(i8* %v2_10004810, i32 %v3_1000486c)
  store i32 268454020, i32* @lr, align 4
  %v2_10004880 = call i32 @function_10008d9c(i8* %v2_10004810)
  %v0_10004884 = load i32, i32* @r30, align 4
  %v0_10004888 = load i32, i32* @r27, align 4
  %v2_10004888 = add i32 %v0_10004888, %v2_10004880
  store i32 %v2_10004888, i32* @r3, align 4
  %v2_1000488c = inttoptr i32 %v2_10004888 to i8*
  %v3_1000488c = call i32 @function_10008dc4(i8* %v2_1000488c, i32 %v0_10004884)
  store i32 268454040, i32* @lr, align 4
  %v2_10004894 = call i32 @function_10008d9c(i8* %v2_10004810)
  %v3_100048a4 = call i32 @function_1000876c(i32 15, i32* null)
  %v0_100048ac = load i32, i32* @r27, align 4
  %v2_100048ac = add i32 %v2_10004894, %v0_100048ac
  store i32 %v2_100048ac, i32* @r3, align 4
  %v2_100048b0 = inttoptr i32 %v2_100048ac to i8*
  %v3_100048b0 = call i32 @function_10008dc4(i8* %v2_100048b0, i32 %v3_100048a4)
  store i32 268454076, i32* @lr, align 4
  %v1_100048b8 = call i32 @function_10009aa8(i32 %v2_100044fc)
  store i32 %v1_100048b8, i32* @r25, align 4
  %v3_100048bc = icmp eq i32 %v1_100048b8, 0
  br i1 %v3_100048bc, label %dec_label_pc_100047cc.loopexit, label %dec_label_pc_100048c4

dec_label_pc_100048c4.loopexit:                   ; preds = %dec_label_pc_100048e4, %dec_label_pc_10004980
  %v0_100048c4.pre = load i32, i32* @r25, align 4
  br label %dec_label_pc_100048c4

dec_label_pc_100048c4:                            ; preds = %dec_label_pc_10004864, %dec_label_pc_100048c4.loopexit
  %v0_100048c4 = phi i32 [ %v0_100048c4.pre, %dec_label_pc_100048c4.loopexit ], [ %v1_100048b8, %dec_label_pc_10004864 ]
  store i32 268454092, i32* @lr, align 4
  %v1_100048c8 = inttoptr i32 %v0_100048c4 to i32*
  %v2_100048c8 = call i32 @function_10009bb8(i32* %v1_100048c8)
  store i32 4096, i32* @r4, align 4
  store i32 %v2_100048c8, i32* @r31, align 4
  %v3_100048d0 = icmp eq i32 %v2_100048c8, 0
  %v0_100048d4 = load i32, i32* @r28, align 4
  store i32 %v2_10004504, i32* @r3, align 4
  %v3_100048d4.not = icmp ne i32 %v0_100048d4, 0
  %brmerge = or i1 %v3_100048d0, %v3_100048d4.not
  br i1 %brmerge, label %dec_label_pc_100049d0, label %dec_label_pc_100048e4

dec_label_pc_100048e4:                            ; preds = %dec_label_pc_100048c4
  store i32 268454120, i32* @lr, align 4
  %v0_100048e4 = call i32 @function_10008e44()
  %v3_100048f0 = call i32 @function_1000876c(i32 13, i32* null)
  store i32 %v2_100044fc, i32* @r3, align 4
  %v3_100048fc = call i32 @function_10008dc4(i8* %v2_10004810, i32 %v3_100048f0)
  store i32 268454152, i32* @lr, align 4
  %v2_10004904 = call i32 @function_10008d9c(i8* %v2_10004810)
  %v0_10004908 = load i32, i32* @r30, align 4
  %v0_1000490c = load i32, i32* @r27, align 4
  %v2_1000490c = add i32 %v0_1000490c, %v2_10004904
  store i32 %v2_1000490c, i32* @r3, align 4
  %v2_10004910 = inttoptr i32 %v2_1000490c to i8*
  %v3_10004910 = call i32 @function_10008dc4(i8* %v2_10004910, i32 %v0_10004908)
  store i32 268454172, i32* @lr, align 4
  %v2_10004918 = call i32 @function_10008d9c(i8* %v2_10004810)
  %v3_10004928 = call i32 @function_1000876c(i32 15, i32* null)
  %v0_10004930 = load i32, i32* @r27, align 4
  %v2_10004930 = add i32 %v2_10004918, %v0_10004930
  store i32 %v2_10004930, i32* @r3, align 4
  %v2_10004934 = inttoptr i32 %v2_10004930 to i8*
  %v3_10004934 = call i32 @function_10008dc4(i8* %v2_10004934, i32 %v3_10004928)
  store i32 268454208, i32* @lr, align 4
  %v2_1000493c = call i32 @function_10008d9c(i8* %v2_10004810)
  %v0_10004948 = load i32, i32* @r27, align 4
  %v2_10004948 = add i32 %v0_10004948, %v2_1000493c
  store i32 %v2_10004948, i32* @r3, align 4
  %v2_1000494c = inttoptr i32 %v2_10004948 to i8*
  %v3_1000494c = call i32 @function_10008dc4(i8* %v2_1000494c, i32 ptrtoint (i32* @global_var_1000bf58.30 to i32))
  store i32 268454232, i32* @lr, align 4
  %v2_10004954 = call i32 @function_10008d9c(i8* %v2_10004810)
  %v0_10004958 = load i32, i32* @r31, align 4
  %v1_10004958 = add i32 %v0_10004958, 11
  %v0_1000495c = load i32, i32* @r27, align 4
  %v2_1000495c = add i32 %v0_1000495c, %v2_10004954
  store i32 %v2_1000495c, i32* @r3, align 4
  %v2_10004960 = inttoptr i32 %v2_1000495c to i8*
  %v3_10004960 = call i32 @function_10008dc4(i8* %v2_10004960, i32 %v1_10004958)
  store i32 268454260, i32* @lr, align 4
  %v3_10004970 = call i32 @function_100097dc(i32 %v2_100044fc, i32 %v2_10004504, i32 4096)
  %v3_10004974 = icmp eq i32 %v3_10004970, -1
  br i1 %v3_10004974, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_10004980

dec_label_pc_10004980:                            ; preds = %dec_label_pc_100048e4
  store i32 268454276, i32* @lr, align 4
  %v2_10004980 = call i32 @function_10008d9c(i8* %v1_10004980)
  %v4_10004990 = call i32 @function_1000914c(i8* %v1_10004980, i32 %v2_10004980, i32 %v2_100045d8)
  %v3_10004998 = icmp eq i32 %v4_10004990, -1
  %v0_1000499c = load i32, i32* @r30, align 4
  store i32 %v0_1000499c, i32* @r3, align 4
  br i1 %v3_10004998, label %dec_label_pc_100048c4.loopexit, label %dec_label_pc_100049a4

dec_label_pc_100049a4:                            ; preds = %dec_label_pc_10004980
  store i32 268454312, i32* @lr, align 4
  %v2_100049a4 = call i32 @function_10008ec4(i32 %v0_1000499c, i32 10)
  store i32 268454320, i32* @lr, align 4
  %v2_100049ac = call i32 @function_1000967c(i32 %v2_100049a4, i32 9)
  %v0_100049b0 = load i32, i32* @r25, align 4
  store i32 268454328, i32* @lr, align 4
  %v1_100049b4 = inttoptr i32 %v0_100049b0 to i32*
  %v2_100049b4 = call i32 @function_10009bb8(i32* %v1_100049b4)
  store i32 1, i32* @r28, align 4
  store i32 %v2_100049b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100048c4, %dec_label_pc_100049a4
  %v0_100049d0 = load i32, i32* @r25, align 4
  store i32 268454360, i32* @lr, align 4
  %v1_100049d4 = inttoptr i32 %v0_100049d0 to i32*
  %v2_100049d4 = call i32 @function_10009a04(i32* %v1_100049d4)
  %v0_100049d8 = load i32, i32* @r23, align 4
  store i32 268454368, i32* @lr, align 4
  %v1_100049dc = inttoptr i32 %v0_100049d8 to i32*
  %v2_100049dc = call i32 @function_10009bb8(i32* %v1_100049dc)
  %v3_100049e0 = icmp eq i32 %v2_100049dc, 0
  br i1 %v3_100049e0, label %dec_label_pc_100049e8, label %dec_label_pc_100047dc

dec_label_pc_100049e8:                            ; preds = %dec_label_pc_100047cc.loopexit, %dec_label_pc_100049d0, %dec_label_pc_100047dc, %dec_label_pc_100047c8
  %v0_100049e8 = load i32, i32* @r23, align 4
  %v0_100049ec = load i32, i32* @r28, align 4
  %v1_100049ec = urem i32 %v0_100049ec, 256
  store i32 %v1_100049ec, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100049f4.31 to i32), i32* @lr, align 4
  %v1_100049f0 = inttoptr i32 %v0_100049e8 to i32*
  %v2_100049f0 = call i32 @function_10009a04(i32* %v1_100049f0)
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %dec_label_pc_100047ac, %dec_label_pc_100049e8
  store i32 ptrtoint ([3 x i8]* @global_var_100049fc.32 to i32), i32* @lr, align 4
  %v1_100049f8 = call i32 @function_1000ad70(i32 1)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a04.33 to i32), i32* @lr, align 4
  %v1_10004a00 = call i32 @function_10008794(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a0c.34 to i32), i32* @lr, align 4
  %v1_10004a08 = call i32 @function_10008794(i32 14)
  store i32 268454420, i32* @lr, align 4
  %v1_10004a10 = call i32 @function_10008794(i32 15)
  br label %dec_label_pc_10004a14

dec_label_pc_10004a14:                            ; preds = %dec_label_pc_10004590, %dec_label_pc_100049f4
  %v0_10004a18 = load i32, i32* @r31, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a18

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_100046d8
  %v3_100046d8 = icmp eq i32 %v0_1000470c74, 0
  %v1_10004a4c = add i32 %v0_1000470c74, 1
  br i1 %v3_100046d8, label %dec_label_pc_10004a54, label %dec_label_pc_100046e0

dec_label_pc_10004a54:                            ; preds = %dec_label_pc_10004a4c
  %v0_10004a54 = load i32, i32* %r26.global-to-local, align 4
  %v2_10004a54 = add i32 %v0_10004a54, %v1_1000477076
  %v1_10004a58 = add i32 %v2_10004a54, 33
  %v2_10004a58 = inttoptr i32 %v1_10004a58 to i8*
  %v3_10004a58 = load i8, i8* %v2_10004a58, align 1
  %v3_10004a5c = icmp eq i8 %v3_10004a58, 65
  br i1 %v3_10004a5c, label %dec_label_pc_10004a64, label %dec_label_pc_100046bc

dec_label_pc_10004a64:                            ; preds = %dec_label_pc_10004a54
  br label %dec_label_pc_100046bc.outer

dec_label_pc_10004a6c:                            ; preds = %dec_label_pc_10004794
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a78.35 to i32), i32* @lr, align 4
  %v1_10004a74 = call i32 @function_10008794(i32 13)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a80.36 to i32), i32* @lr, align 4
  %v1_10004a7c = call i32 @function_10008794(i32 14)
  store i32 ptrtoint ([3 x i8]* @global_var_10004a88.37 to i32), i32* @lr, align 4
  %v1_10004a84 = call i32 @function_10008794(i32 15)
  store i32 268454544, i32* @lr, align 4
  %v1_10004a8c = call i32 @function_10008794(i32 17)
  %v0_10004a94 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10004530, i32* @r23, align 4
  store i32 %v0_10004518, i32* @r25, align 4
  store i32 %v0_100044f8, i32* @r27, align 4
  store i32 %v0_10004538, i32* @r28, align 4
  store i32 %v0_10004508, i32* @r29, align 4
  store i32 %v0_10004520, i32* @r30, align 4
  store i32 %v0_10004528, i32* @r31, align 4
  ret i32 %v0_10004a94

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_100044e8
  store i8 48, i8* %stack_var_-8776, align 1
  br label %dec_label_pc_10004590

; uselistorder directives
  uselistorder i32 %v2_100049dc, { 1, 0 }
  uselistorder i32 %v1_10004770.lcssa, { 5, 3, 2, 1, 0, 4 }
  uselistorder i32 %v0_1000470c74, { 2, 0, 4, 1, 3 }
  uselistorder i32 %v1_1000477076, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %v0_100046f022, { 1, 0 }
  uselistorder i32 %v1_1000468c, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v2_100045d8, { 1, 0, 2 }
  uselistorder i32 %v2_1000451c, { 1, 0 }
  uselistorder i32 %v2_100044fc, { 1, 2, 3, 4, 5, 6, 0, 7 }
  uselistorder i8* %stack_var_-8776, { 2, 0, 1 }
  uselistorder i8* %stack_var_-8760, { 1, 3, 0, 2 }
  uselistorder i32* %stack_var_-8792, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @function_10008ec4, { 1, 0 }
  uselistorder i32 268453844, { 1, 0 }
  uselistorder i8 58, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @function_10008ffc, { 1, 0 }
  uselistorder i32 268453356, { 1, 0 }
  uselistorder label %dec_label_pc_10004a14, { 1, 0 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049e8, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100049d0, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4, { 1, 0 }
  uselistorder label %dec_label_pc_100048c4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc, { 1, 0 }
  uselistorder label %dec_label_pc_100047dc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100047cc.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000471c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10004708, { 1, 0 }
  uselistorder label %dec_label_pc_100046e0, { 1, 0 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
  uselistorder label %dec_label_pc_10004684, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004634, { 1, 0 }
  uselistorder label %dec_label_pc_100045dc.backedge, { 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_100045f4, { 1, 0 }
  uselistorder label %dec_label_pc_10004590, { 1, 0 }
}

define i32 @function_10004aec(i32 %arg1) local_unnamed_addr {
dec_label_pc_10004aec:
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-8468 = alloca i32, align 4
  %stack_var_-8472 = alloca i32, align 4
  %stack_var_-8448 = alloca i32, align 4
  %stack_var_-8464 = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-8432 = alloca i32, align 4
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-8384 = alloca i32, align 4
  %stack_var_-8320 = alloca i32, align 4
  %stack_var_-8400 = alloca i32, align 4
  %stack_var_-8256 = alloca i32, align 4
  %v0_10004b08 = load i32, i32* @r22, align 4
  %v0_10004b0c = load i32, i32* @r23, align 4
  %v0_10004b10 = load i32, i32* @r24, align 4
  %v0_10004b14 = load i32, i32* @r25, align 4
  %v0_10004b18 = load i32, i32* @r26, align 4
  %v0_10004b1c = load i32, i32* @r27, align 4
  %v0_10004b20 = load i32, i32* @r28, align 4
  %v0_10004b24 = load i32, i32* @r29, align 4
  %v0_10004b28 = load i32, i32* @r31, align 4
  store i32 268454704, i32* @lr, align 4
  %v0_10004b2c = call i32 @function_1000992c()
  store i32 %v0_10004b2c, i32* @r30, align 4
  store i32 268454712, i32* @lr, align 4
  %v0_10004b34 = call i32 @function_100095a4()
  store i32 %v0_10004b34, i32* @global_var_1001c6ac.38, align 4
  %tmp60 = icmp slt i32 %v0_10004b34, 1
  br i1 %tmp60, label %dec_label_pc_10004b88, label %dec_label_pc_10004b48

dec_label_pc_10004b48:                            ; preds = %dec_label_pc_10004ca0, %dec_label_pc_10004b90, %dec_label_pc_10004b88, %dec_label_pc_10004aec
  %v0_10004b84 = phi i32 [ -1, %dec_label_pc_10004b90 ], [ -1, %dec_label_pc_10004b88 ], [ %v0_10004b34, %dec_label_pc_10004aec ], [ 0, %dec_label_pc_10004ca0 ]
  store i32 %v0_10004b08, i32* @r22, align 4
  store i32 %v0_10004b0c, i32* @r23, align 4
  store i32 %v0_10004b10, i32* @r24, align 4
  store i32 %v0_10004b14, i32* @r25, align 4
  store i32 %v0_10004b18, i32* @r26, align 4
  store i32 %v0_10004b1c, i32* @r27, align 4
  store i32 %v0_10004b20, i32* @r28, align 4
  store i32 %v0_10004b24, i32* @r29, align 4
  store i32 %v0_10004b28, i32* @r31, align 4
  ret i32 %v0_10004b84

dec_label_pc_10004b88:                            ; preds = %dec_label_pc_10004aec
  %v3_10004b88 = icmp eq i32 %v0_10004b34, -1
  br i1 %v3_10004b88, label %dec_label_pc_10004b48, label %dec_label_pc_10004b90

dec_label_pc_10004b90:                            ; preds = %dec_label_pc_10004b88
  store i32 268454812, i32* @lr, align 4
  %v1_10004b98 = call i32 @function_1000ad70(i32 5)
  store i32 4096, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004ba4.39 to i32), i32* @lr, align 4
  %v0_10004ba0 = call i32 @function_1000a47c()
  store i32 %v0_10004ba0, i32* %r11.global-to-local, align 4
  %v3_10004bb0 = inttoptr i32 %v0_10004ba0 to i8*
  store i8 0, i8* %v3_10004bb0, align 1
  store i32 0, i32* %r28.global-to-local, align 4
  %v0_10004bbc = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10004bbc, i32* @global_var_1001c6a8.40, align 4
  store i32 0, i32* @global_var_1001c6a4.41, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004bc8.42 to i32), i32* @lr, align 4
  %v1_10004bc4 = call i32 @function_10008820(i32 13)
  %v2_10004bcc = ptrtoint i32* %stack_var_-8256 to i32
  store i32 %v2_10004bcc, i32* @r24, align 4
  store i32 268454868, i32* @lr, align 4
  %v1_10004bd0 = call i32 @function_10008820(i32 14)
  %v3_10004bdc = call i32 @function_1000876c(i32 13, i32* null)
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v2_10004be8 = bitcast i32* %stack_var_-8256 to i8*
  %v3_10004be8 = call i32 @function_10008dc4(i8* %v2_10004be8, i32 %v3_10004bdc)
  %v0_10004bec = load i32, i32* @r24, align 4
  %v2_10004bec = add i32 %v0_10004bec, %v3_10004be8
  store i32 %v2_10004bec, i32* %r29.global-to-local, align 4
  store i32 268454900, i32* @lr, align 4
  %v0_10004bf0 = call i32 @function_100095ec()
  %v2_10004bf4 = ptrtoint i32* %stack_var_-8400 to i32
  %v3_10004bfc = trunc i32 %v0_10004bf0 to i8
  %v4_10004bfc = call i32 @function_10009278(i8 %v3_10004bfc, i32 10, i32 %v2_10004bf4)
  store i32 %v2_10004bec, i32* @r3, align 4
  %v2_10004c08 = inttoptr i32 %v2_10004bec to i8*
  %v3_10004c08 = call i32 @function_10008dc4(i8* %v2_10004c08, i32 %v4_10004bfc)
  %v0_10004c10 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004c10 = add i32 %v0_10004c10, %v3_10004c08
  store i32 %v2_10004c10, i32* %r29.global-to-local, align 4
  %v3_10004c18 = call i32 @function_1000876c(i32 14, i32* null)
  store i32 %v2_10004c10, i32* @r3, align 4
  %v2_10004c24 = inttoptr i32 %v2_10004c10 to i8*
  %v3_10004c24 = call i32 @function_10008dc4(i8* %v2_10004c24, i32 %v3_10004c18)
  store i32 %v3_10004c24, i32* @r31, align 4
  store i32 268454972, i32* @lr, align 4
  %v2_10004c38 = call i32 @function_100096c4(i32 %v2_10004bcc, i32 0)
  %v3_10004c3c = icmp eq i32 %v2_10004c38, -1
  br i1 %v3_10004c3c, label %dec_label_pc_10004b48, label %dec_label_pc_10004c44

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_10004b90
  store i32 ptrtoint ([3 x i8]* @global_var_10004c48.43 to i32), i32* @lr, align 4
  %v0_10004c44 = call i32 @function_1000955c()
  store i32 ptrtoint ([3 x i8]* @global_var_10004c50.44 to i32), i32* @lr, align 4
  %v1_10004c4c = call i32 @function_10008794(i32 13)
  store i32 268455000, i32* @lr, align 4
  %v1_10004c54 = call i32 @function_10008794(i32 14)
  %v3_10004c58 = load i32, i32* @global_var_1001c6a8.40, align 4
  store i32 268455016, i32* @lr, align 4
  %v3_10004c64 = call i32 @function_100097dc(i32 %v2_10004bcc, i32 %v3_10004c58, i32 4095)
  %v3_10004c68 = icmp eq i32 %v3_10004c64, -1
  br i1 %v3_10004c68, label %dec_label_pc_10004c78, label %dec_label_pc_10004c70

dec_label_pc_10004c70:                            ; preds = %dec_label_pc_10004c44
  %v3_10004c70 = load i32, i32* @global_var_1001c6a8.40, align 4
  %v0_10004c74 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004c74 = trunc i32 %v0_10004c74 to i8
  %v4_10004c74 = add i32 %v3_10004c70, %v3_10004c64
  %v5_10004c74 = inttoptr i32 %v4_10004c74 to i8*
  store i8 %v3_10004c74, i8* %v5_10004c74, align 1
  br label %dec_label_pc_10004c78

dec_label_pc_10004c78:                            ; preds = %dec_label_pc_10004c44, %dec_label_pc_10004c70
  %v0_10004c78 = load i32, i32* %r29.global-to-local, align 4
  %v1_10004c78 = load i32, i32* @r31, align 4
  %v2_10004c78 = add i32 %v1_10004c78, %v0_10004c78
  store i32 %v2_10004bcc, i32* @r3, align 4
  %v0_10004c80 = load i32, i32* @r24, align 4
  %v2_10004c80 = sub i32 %v2_10004c78, %v0_10004c80
  store i32 %v2_10004c80, i32* @r4, align 4
  %v0_10004c84 = load i32, i32* @r30, align 4
  store i32 %v0_10004c84, i32* %r29.global-to-local, align 4
  store i32 268455052, i32* @lr, align 4
  %v0_10004c88 = call i32 @function_10008e44()
  store i32 400, i32* @r28, align 4
  store i32 0, i32* @r26, align 4
  %v2_10004c94 = ptrtoint i32* %stack_var_-8320 to i32
  store i32 %v2_10004c94, i32* @r23, align 4
  %v2_10004c98 = ptrtoint i32* %stack_var_-8384 to i32
  store i32 %v2_10004c98, i32* @r22, align 4
  %v2_10004c9c = ptrtoint i32* %stack_var_-4160 to i32
  %v2_10004f70 = bitcast i32* %stack_var_-8320 to i8*
  %v2_10004fb4 = bitcast i32* %stack_var_-8384 to i8*
  %v2_10004eb4 = ptrtoint i32* %stack_var_-8448 to i32
  %v2_10004e80 = ptrtoint i32* %stack_var_-8464 to i32
  %v2_10004e4c = ptrtoint i32* %stack_var_-8416 to i32
  %v2_10004e18 = ptrtoint i32* %stack_var_-8432 to i32
  br label %dec_label_pc_10004ca0

dec_label_pc_10004ca0:                            ; preds = %dec_label_pc_10004f34, %dec_label_pc_10004c78
  store i32 268455080, i32* @lr, align 4
  %v1_10004ca4 = call i32 @function_10008820(i32 13)
  %v3_10004cb0 = call i32 @function_1000876c(i32 13, i32* null)
  store i32 268455096, i32* @lr, align 4
  %v1_10004cb4 = call i32 @function_10009aa8(i32 %v3_10004cb0)
  store i32 %v1_10004cb4, i32* @r27, align 4
  %v3_10004cb8 = icmp eq i32 %v1_10004cb4, 0
  br i1 %v3_10004cb8, label %dec_label_pc_10004b48, label %dec_label_pc_10004cc0

dec_label_pc_10004cc0:                            ; preds = %dec_label_pc_10004ca0
  store i32 ptrtoint ([3 x i8]* @global_var_10004cc8.46 to i32), i32* @lr, align 4
  %v1_10004cc4 = call i32 @function_10008794(i32 13)
  store i32 268455124, i32* @lr, align 4
  %v1_10004cd0 = call i32 @function_100044e8(i32 48101)
  store i32 268455132, i32* @lr, align 4
  %v1_10004cd8 = call i32 @function_100044e8(i32 1991)
  store i32 268455140, i32* @lr, align 4
  %v1_10004ce0 = call i32 @function_100044e8(i32 1338)
  store i32 268455148, i32* @lr, align 4
  %v1_10004ce8 = call i32 @function_100044e8(i32 1337)
  store i32 ptrtoint ([3 x i8]* @global_var_10004cf4.47 to i32), i32* @lr, align 4
  %v1_10004cf0 = call i32 @function_100044e8(i32 420)
  store i32 268455164, i32* @lr, align 4
  %v1_10004cf8 = call i32 @function_100044e8(i32 232)
  store i32 268455172, i32* @lr, align 4
  %v1_10004d00 = call i32 @function_100044e8(i32 666)
  store i32 268455180, i32* @lr, align 4
  %v1_10004d08 = call i32 @function_100044e8(i32 1676)
  store i32 268455188, i32* @lr, align 4
  %v1_10004d10 = call i32 @function_100044e8(i32 443)
  store i32 268455196, i32* @lr, align 4
  %v1_10004d18 = call i32 @function_100044e8(i32 4321)
  store i32 268455204, i32* @lr, align 4
  %v1_10004d20 = call i32 @function_100044e8(i32 6667)
  store i32 268455212, i32* @lr, align 4
  %v1_10004d28 = call i32 @function_100044e8(i32 6697)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d34.48 to i32), i32* @lr, align 4
  %v1_10004d30 = call i32 @function_100044e8(i32 999)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d3c.49 to i32), i32* @lr, align 4
  %v1_10004d38 = call i32 @function_100044e8(i32 69)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d44.50 to i32), i32* @lr, align 4
  %v1_10004d40 = call i32 @function_100044e8(i32 21)
  store i32 268455244, i32* @lr, align 4
  %v1_10004d48 = call i32 @function_100044e8(i32 20)
  store i32 268455252, i32* @lr, align 4
  %v1_10004d50 = call i32 @function_100044e8(i32 1212)
  store i32 268455260, i32* @lr, align 4
  %v1_10004d58 = call i32 @function_100044e8(i32 555)
  store i32 268455268, i32* @lr, align 4
  %v1_10004d60 = call i32 @function_100044e8(i32 444)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d6c.51 to i32), i32* @lr, align 4
  %v1_10004d68 = call i32 @function_100044e8(i32 333)
  store i32 ptrtoint ([3 x i8]* @global_var_10004d74.52 to i32), i32* @lr, align 4
  %v1_10004d70 = call i32 @function_100044e8(i32 222)
  store i32 268455292, i32* @lr, align 4
  %v1_10004d78 = call i32 @function_100044e8(i32 111)
  store i32 268455300, i32* @lr, align 4
  %v1_10004d80 = call i32 @function_100044e8(i32 666)
  store i32 268455308, i32* @lr, align 4
  %v1_10004d88 = call i32 @function_100044e8(i32 777)
  store i32 268455316, i32* @lr, align 4
  %v1_10004d90 = call i32 @function_100044e8(i32 888)
  store i32 268455324, i32* @lr, align 4
  %v1_10004d98 = call i32 @function_100044e8(i32 999)
  store i32 ptrtoint ([4 x i8]* @global_var_10004da4.53 to i32), i32* @lr, align 4
  %v1_10004da0 = call i32 @function_100044e8(i32 1024)
  store i32 268455340, i32* @lr, align 4
  %v1_10004da8 = call i32 @function_100044e8(i32 2048)
  store i32 268455348, i32* @lr, align 4
  %v1_10004db0 = call i32 @function_100044e8(i32 1616)
  store i32 ptrtoint ([3 x i8]* @global_var_10004dbc.54 to i32), i32* @lr, align 4
  %v1_10004db8 = call i32 @function_100044e8(i32 4343)
  store i32 ptrtoint ([3 x i8]* @global_var_10004dc4.55 to i32), i32* @lr, align 4
  %v1_10004dc0 = call i32 @function_100044e8(i32 11)
  store i32 ptrtoint (i32* @global_var_10004dcc.56 to i32), i32* @lr, align 4
  %v1_10004dc8 = call i32 @function_100044e8(i32 10)
  store i32 268455412, i32* @lr, align 4
  %v1_10004df0 = call i32 @function_100044e8(i32 23)
  %v3_10004df4 = icmp eq i32 %v1_10004df0, 0
  br i1 %v3_10004df4, label %dec_label_pc_1000523c, label %dec_label_pc_10004dfc

dec_label_pc_10004dfc:                            ; preds = %dec_label_pc_1000525c, %dec_label_pc_1000524c, %dec_label_pc_1000523c, %dec_label_pc_10004cc0, %dec_label_pc_1000526c
  store i32 268455436, i32* @lr, align 4
  %v3_10004e08 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  %v3_10004e0c = icmp eq i32 %v3_10004e08, -1
  store i32 %v3_10004e08, i32* @r31, align 4
  br i1 %v3_10004e0c, label %dec_label_pc_10004e30, label %dec_label_pc_10004e18

dec_label_pc_10004e18:                            ; preds = %dec_label_pc_10004dfc
  store i32 268455460, i32* @lr, align 4
  %v3_10004e20 = call i32 @function_1000a044(i32 %v2_10004e18, i32 16, i32 16)
  %v0_10004e24 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e30.57 to i32), i32* @lr, align 4
  %v2_10004e2c = call i32 @function_1000a11c(i32 %v0_10004e24, i32 1)
  br label %dec_label_pc_10004e30

dec_label_pc_10004e30:                            ; preds = %dec_label_pc_10004dfc, %dec_label_pc_10004e18
  store i32 268455488, i32* @lr, align 4
  %v3_10004e3c = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  %v3_10004e40 = icmp eq i32 %v3_10004e3c, -1
  store i32 %v3_10004e3c, i32* @r31, align 4
  br i1 %v3_10004e40, label %dec_label_pc_10004e64, label %dec_label_pc_10004e4c

dec_label_pc_10004e4c:                            ; preds = %dec_label_pc_10004e30
  store i32 268455512, i32* @lr, align 4
  %v3_10004e54 = call i32 @function_1000a044(i32 %v2_10004e4c, i32 16, i32 16)
  %v0_10004e58 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e64.58 to i32), i32* @lr, align 4
  %v2_10004e60 = call i32 @function_1000a11c(i32 %v0_10004e58, i32 1)
  br label %dec_label_pc_10004e64

dec_label_pc_10004e64:                            ; preds = %dec_label_pc_10004e30, %dec_label_pc_10004e4c
  store i32 268455540, i32* @lr, align 4
  %v3_10004e70 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  %v3_10004e74 = icmp eq i32 %v3_10004e70, -1
  store i32 %v3_10004e70, i32* @r31, align 4
  br i1 %v3_10004e74, label %dec_label_pc_10004e98, label %dec_label_pc_10004e80

dec_label_pc_10004e80:                            ; preds = %dec_label_pc_10004e64
  store i32 268455564, i32* @lr, align 4
  %v3_10004e88 = call i32 @function_1000a044(i32 %v2_10004e80, i32 16, i32 16)
  %v0_10004e8c = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004e98.59 to i32), i32* @lr, align 4
  %v2_10004e94 = call i32 @function_1000a11c(i32 %v0_10004e8c, i32 1)
  br label %dec_label_pc_10004e98

dec_label_pc_10004e98:                            ; preds = %dec_label_pc_10004e64, %dec_label_pc_10004e80
  store i32 268455592, i32* @lr, align 4
  %v3_10004ea4 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  %v3_10004ea8 = icmp eq i32 %v3_10004ea4, -1
  store i32 %v3_10004ea4, i32* @r31, align 4
  br i1 %v3_10004ea8, label %dec_label_pc_10004ecc.preheader, label %dec_label_pc_10004eb4

dec_label_pc_10004eb4:                            ; preds = %dec_label_pc_10004e98
  store i32 268455616, i32* @lr, align 4
  %v3_10004ebc = call i32 @function_1000a044(i32 %v2_10004eb4, i32 16, i32 16)
  %v0_10004ec0 = load i32, i32* @r31, align 4
  store i32 268455628, i32* @lr, align 4
  %v2_10004ec8 = call i32 @function_1000a11c(i32 %v0_10004ec0, i32 1)
  br label %dec_label_pc_10004ecc.preheader

dec_label_pc_10004ecc.preheader:                  ; preds = %dec_label_pc_10004eb4, %dec_label_pc_10004e98
  %v0_10004ecc8 = load i32, i32* @r27, align 4
  store i32 268455636, i32* @lr, align 4
  %v1_10004ed09 = inttoptr i32 %v0_10004ecc8 to i32*
  %v2_10004ed010 = call i32 @function_10009bb8(i32* %v1_10004ed09)
  %v3_10004ed413 = icmp eq i32 %v2_10004ed010, 0
  br i1 %v3_10004ed413, label %dec_label_pc_10004f34, label %dec_label_pc_10004edc.preheader

dec_label_pc_10004edc.preheader:                  ; preds = %dec_label_pc_10004ecc.preheader, %dec_label_pc_10004ecc.backedge
  %v0_10004edc15 = phi i32 [ %v2_10004ed0, %dec_label_pc_10004ecc.backedge ], [ %v2_10004ed010, %dec_label_pc_10004ecc.preheader ]
  br label %dec_label_pc_10004edc

dec_label_pc_10004edc:                            ; preds = %dec_label_pc_10004edc.preheader, %dec_label_pc_10004f20
  %v0_10004ef0 = phi i32 [ %v0_10004edc15, %dec_label_pc_10004edc.preheader ], [ %v2_10004f28, %dec_label_pc_10004f20 ]
  %v1_10004edc = add i32 %v0_10004ef0, 11
  %v2_10004edc = inttoptr i32 %v1_10004edc to i8*
  %v3_10004edc = load i8, i8* %v2_10004edc, align 1
  %v4_10004edc = zext i8 %v3_10004edc to i32
  %v1_10004ee0 = add nuw nsw i32 %v4_10004edc, 208
  %v1_10004ee4 = urem i32 %v1_10004ee0, 256
  %v2_10004ee8 = icmp ugt i32 %v1_10004ee4, 9
  br i1 %v2_10004ee8, label %dec_label_pc_10004ecc.backedge, label %dec_label_pc_10004ef0

dec_label_pc_10004ef0:                            ; preds = %dec_label_pc_10004edc
  store i32 268455680, i32* @lr, align 4
  %v3_10004efc = call i32 @function_1000ab24(i8* %v2_10004edc, i32 %v1_10004ee4)
  %v0_10004f00 = load i32, i32* @r28, align 4
  %v2_10004f00 = icmp slt i32 %v0_10004f00, %v3_10004efc
  store i32 %v3_10004efc, i32* %r30.global-to-local, align 4
  br i1 %v2_10004f00, label %dec_label_pc_10004f40, label %dec_label_pc_10004f0c

dec_label_pc_10004f0c:                            ; preds = %dec_label_pc_10004ef0
  store i32 268455700, i32* @lr, align 4
  %v0_10004f10 = call i32 @function_1000992c()
  %v0_10004f14 = load i32, i32* @r29, align 4
  %v2_10004f14 = sub i32 %v0_10004f10, %v0_10004f14
  %tmp61 = icmp slt i32 %v2_10004f14, 601
  br i1 %tmp61, label %dec_label_pc_1000509c, label %dec_label_pc_10004f20

dec_label_pc_10004f20:                            ; preds = %dec_label_pc_10004f0c
  %v0_10004f20 = load i32, i32* @r27, align 4
  store i32 400, i32* @r28, align 4
  store i32 268455724, i32* @lr, align 4
  %v1_10004f28 = inttoptr i32 %v0_10004f20 to i32*
  %v2_10004f28 = call i32 @function_10009bb8(i32* %v1_10004f28)
  %v3_10004f2c = icmp eq i32 %v2_10004f28, 0
  br i1 %v3_10004f2c, label %dec_label_pc_10004f34, label %dec_label_pc_10004edc

dec_label_pc_10004f34:                            ; preds = %dec_label_pc_10004ecc.backedge, %dec_label_pc_10004f20, %dec_label_pc_10004ecc.preheader
  %v0_10004f34 = load i32, i32* @r27, align 4
  store i32 268455740, i32* @lr, align 4
  %v1_10004f38 = inttoptr i32 %v0_10004f34 to i32*
  %v2_10004f38 = call i32 @function_10009a04(i32* %v1_10004f38)
  br label %dec_label_pc_10004ca0

dec_label_pc_10004f40:                            ; preds = %dec_label_pc_10004ef0
  store i32 268455752, i32* @lr, align 4
  %v0_10004f44 = call i32 @function_1000992c()
  store i32 %v0_10004f44, i32* @r25, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004f54.60 to i32), i32* @lr, align 4
  %v1_10004f50 = call i32 @function_10008820(i32 13)
  store i32 268455772, i32* @lr, align 4
  %v1_10004f58 = call i32 @function_10008820(i32 14)
  %v3_10004f64 = call i32 @function_1000876c(i32 13, i32* null)
  store i32 %v2_10004c94, i32* @r3, align 4
  %v3_10004f70 = call i32 @function_10008dc4(i8* %v2_10004f70, i32 %v3_10004f64)
  %v0_10004f74 = load i32, i32* @r31, align 4
  %v0_10004f78 = load i32, i32* @r23, align 4
  %v2_10004f78 = add i32 %v0_10004f78, %v3_10004f70
  store i32 %v2_10004f78, i32* %r28.global-to-local, align 4
  store i32 %v2_10004f78, i32* @r3, align 4
  %v2_10004f80 = inttoptr i32 %v2_10004f78 to i8*
  %v3_10004f80 = call i32 @function_10008dc4(i8* %v2_10004f80, i32 %v0_10004f74)
  store i32 %v3_10004f80, i32* %r29.global-to-local, align 4
  %v3_10004f90 = call i32 @function_1000876c(i32 14, i32* null)
  %v2_10004f98 = add i32 %v3_10004f80, %v2_10004f78
  store i32 %v2_10004f98, i32* @r3, align 4
  %v2_10004f9c = inttoptr i32 %v2_10004f98 to i8*
  %v3_10004f9c = call i32 @function_10008dc4(i8* %v2_10004f9c, i32 %v3_10004f90)
  %v3_10004fa8 = call i32 @function_1000876c(i32 13, i32* null)
  store i32 %v2_10004c98, i32* @r3, align 4
  %v3_10004fb4 = call i32 @function_10008dc4(i8* %v2_10004fb4, i32 %v3_10004fa8)
  %v0_10004fb8 = load i32, i32* @r31, align 4
  %v0_10004fbc = load i32, i32* @r22, align 4
  %v2_10004fbc = add i32 %v0_10004fbc, %v3_10004fb4
  store i32 %v2_10004fbc, i32* %r28.global-to-local, align 4
  store i32 %v2_10004fbc, i32* @r3, align 4
  %v2_10004fc4 = inttoptr i32 %v2_10004fbc to i8*
  %v3_10004fc4 = call i32 @function_10008dc4(i8* %v2_10004fc4, i32 %v0_10004fb8)
  store i32 %v3_10004fc4, i32* %r29.global-to-local, align 4
  %v3_10004fd4 = call i32 @function_1000876c(i32 29, i32* null)
  %v2_10004fdc = add i32 %v3_10004fc4, %v2_10004fbc
  store i32 %v2_10004fdc, i32* @r3, align 4
  %v2_10004fe0 = inttoptr i32 %v2_10004fdc to i8*
  %v3_10004fe0 = call i32 @function_10008dc4(i8* %v2_10004fe0, i32 %v3_10004fd4)
  store i32 ptrtoint ([3 x i8]* @global_var_10004fec.62 to i32), i32* @lr, align 4
  %v1_10004fe8 = call i32 @function_10008794(i32 13)
  store i32 268455924, i32* @lr, align 4
  %v1_10004ff0 = call i32 @function_10008794(i32 14)
  store i32 4095, i32* @r5, align 4
  store i32 268455940, i32* @lr, align 4
  %v3_10005000 = call i32 @function_100097dc(i32 %v2_10004c94, i32 %v2_10004bcc, i32 4095)
  %v3_10005004 = icmp eq i32 %v3_10005000, -1
  store i32 %v3_10005000, i32* %r29.global-to-local, align 4
  br i1 %v3_10005004, label %dec_label_pc_100050f0, label %dec_label_pc_10005010

dec_label_pc_10005010:                            ; preds = %dec_label_pc_10004f40
  %v0_10005010 = load i32, i32* @r1, align 4
  %v2_10005010 = add i32 %v0_10005010, %v3_10005000
  %v3_10005018 = add i32 %v2_10005010, 224
  %v4_10005018 = inttoptr i32 %v3_10005018 to i8*
  store i8 0, i8* %v4_10005018, align 1
  store i32 268455972, i32* @lr, align 4
  %v1_10005020 = call i32 @function_10008820(i32 30)
  %v3_1000502c = call i32 @function_1000876c(i32 30, i32* null)
  %v0_10005030 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005030 = add i32 %v0_10005030, -1
  %v4_1000503c = call i32 @function_1000914c(i8* %v2_10004be8, i32 %v1_10005030, i32 %v3_1000502c)
  %v3_10005040 = icmp eq i32 %v4_1000503c, -1
  br i1 %v3_10005040, label %dec_label_pc_1000505c, label %dec_label_pc_10005048

dec_label_pc_10005048:                            ; preds = %dec_label_pc_10005010
  store i32 268456016, i32* @lr, align 4
  %v1_1000504c = call i32 @function_10009974(i32 %v2_10004bcc)
  %v0_10005050 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000505c.63 to i32), i32* @lr, align 4
  %v2_10005058 = call i32 @function_1000967c(i32 %v0_10005050, i32 9)
  br label %dec_label_pc_1000505c

dec_label_pc_1000505c:                            ; preds = %dec_label_pc_10005010, %dec_label_pc_10005048
  store i32 ptrtoint (i32* @global_var_10005064.64 to i32), i32* @lr, align 4
  %v1_10005060 = call i32 @function_10008794(i32 30)
  store i32 268456040, i32* @lr, align 4
  %v0_10005064 = call i32 @function_100095ec()
  %v0_10005068 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005068 = icmp eq i32 %v0_10005068, %v0_10005064
  br i1 %v4_10005068, label %dec_label_pc_10005090, label %dec_label_pc_10005070

dec_label_pc_10005070:                            ; preds = %dec_label_pc_1000505c
  store i32 268456052, i32* @lr, align 4
  %v0_10005070 = call i32 @function_10009634()
  %v0_10005074 = load i32, i32* %r30.global-to-local, align 4
  %v4_10005074 = icmp eq i32 %v0_10005074, %v0_10005070
  br i1 %v4_10005074, label %dec_label_pc_10005090, label %dec_label_pc_1000507c

dec_label_pc_1000507c:                            ; preds = %dec_label_pc_10005070
  %v3_1000507c = load i32, i32* @global_var_1001c6a8.40, align 4
  %v3_10005084 = call i32 @function_100091f8(i8* %v2_10004be8, i32 %v3_1000507c)
  %v3_10005088 = icmp eq i32 %v3_10005084, 0
  br i1 %v3_10005088, label %dec_label_pc_100050cc, label %dec_label_pc_1000507c.dec_label_pc_10005090_crit_edge

dec_label_pc_1000507c.dec_label_pc_10005090_crit_edge: ; preds = %dec_label_pc_1000507c
  %v0_10005090.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10005090

dec_label_pc_10005090:                            ; preds = %dec_label_pc_1000507c.dec_label_pc_10005090_crit_edge, %dec_label_pc_10005070, %dec_label_pc_1000505c
  %v0_10005090 = phi i32 [ %v0_10005090.pre, %dec_label_pc_1000507c.dec_label_pc_10005090_crit_edge ], [ %v0_10005070, %dec_label_pc_10005070 ], [ %v0_10005064, %dec_label_pc_1000505c ]
  store i32 %v0_10005090, i32* @r28, align 4
  %v0_10005094 = load i32, i32* @r25, align 4
  store i32 %v0_10005094, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ecc.backedge

dec_label_pc_10004ecc.backedge:                   ; preds = %dec_label_pc_10004edc, %dec_label_pc_10005090, %dec_label_pc_100050c0, %dec_label_pc_10005204, %dec_label_pc_1000509c, %dec_label_pc_100050a4
  %v0_10004ecc = load i32, i32* @r27, align 4
  store i32 268455636, i32* @lr, align 4
  %v1_10004ed0 = inttoptr i32 %v0_10004ecc to i32*
  %v2_10004ed0 = call i32 @function_10009bb8(i32* %v1_10004ed0)
  %v3_10004ed4 = icmp eq i32 %v2_10004ed0, 0
  br i1 %v3_10004ed4, label %dec_label_pc_10004f34, label %dec_label_pc_10004edc.preheader

dec_label_pc_1000509c:                            ; preds = %dec_label_pc_10004f0c
  %v0_1000509c = load i32, i32* %r30.global-to-local, align 4
  %tmp62 = icmp slt i32 %v0_1000509c, 401
  br i1 %tmp62, label %dec_label_pc_10004ecc.backedge, label %dec_label_pc_100050a4

dec_label_pc_100050a4:                            ; preds = %dec_label_pc_1000509c
  %v0_100050ac = load i32, i32* @r26, align 4
  %v1_100050b0 = urem i32 %v0_100050ac, 10
  %v4_100050b8 = icmp eq i32 %v1_100050b0, 0
  br i1 %v4_100050b8, label %dec_label_pc_100050c0, label %dec_label_pc_10004ecc.backedge

dec_label_pc_100050c0:                            ; preds = %dec_label_pc_100050a4
  store i32 268456136, i32* @lr, align 4
  %v1_100050c4 = call i32 @function_1000ad70(i32 1)
  br label %dec_label_pc_10004ecc.backedge

dec_label_pc_100050cc:                            ; preds = %dec_label_pc_1000507c
  store i32 268456156, i32* @lr, align 4
  %v2_100050d8 = call i32 @function_100096c4(i32 %v2_10004bcc, i32 0)
  %v3_100050dc = icmp eq i32 %v2_100050d8, -1
  store i32 %v2_100050d8, i32* @r31, align 4
  br i1 %v3_100050dc, label %dec_label_pc_10005294, label %dec_label_pc_100050e8

dec_label_pc_100050e8:                            ; preds = %dec_label_pc_100050cc, %dec_label_pc_10005294
  store i32 268456176, i32* @lr, align 4
  %v0_100050ec = call i32 @function_1000955c()
  br label %dec_label_pc_100050f0

dec_label_pc_100050f0:                            ; preds = %dec_label_pc_10004f40, %dec_label_pc_100050e8
  store i32 268456192, i32* @lr, align 4
  %v2_100050fc = call i32 @function_100096c4(i32 %v2_10004c94, i32 0)
  %v3_10005100 = icmp eq i32 %v2_100050fc, -1
  store i32 %v2_100050fc, i32* %r28.global-to-local, align 4
  br i1 %v3_10005100, label %dec_label_pc_10005204, label %dec_label_pc_1000510c

dec_label_pc_1000510c:                            ; preds = %dec_label_pc_100050f0
  store i32 ptrtoint ([3 x i8]* @global_var_10005114.65 to i32), i32* @lr, align 4
  %v1_10005110 = call i32 @function_10008820(i32 18)
  store i32 268456220, i32* @lr, align 4
  %v1_10005118 = call i32 @function_10008820(i32 19)
  %v3_10005124 = call i32 @function_1000876c(i32 18, i32* nonnull %stack_var_-8472)
  store i32 %v3_10005124, i32* @r31, align 4
  %v3_10005134 = call i32 @function_1000876c(i32 19, i32* nonnull %stack_var_-8468)
  store i32 %v3_10005134, i32* %r29.global-to-local, align 4
  %v0_1000513c66 = load i32, i32* %r28.global-to-local, align 4
  store i32 268456268, i32* @lr, align 4
  %v3_1000514867 = call i32 @function_10009794(i32 %v0_1000513c66, i32 %v2_10004c9c, i32 4096)
  %tmp6369 = icmp slt i32 %v3_1000514867, 1
  br i1 %tmp6369, label %dec_label_pc_10005278, label %dec_label_pc_10005154

dec_label_pc_10005154:                            ; preds = %dec_label_pc_1000510c, %dec_label_pc_1000513c.backedge
  %v3_1000514870 = phi i32 [ %v3_10005148, %dec_label_pc_1000513c.backedge ], [ %v3_1000514867, %dec_label_pc_1000510c ]
  %v3_1000514c71.in = phi i32 [ %v3_10005148, %dec_label_pc_1000513c.backedge ], [ %v3_1000514867, %dec_label_pc_1000510c ]
  %v3_1000514c71 = icmp eq i32 %v3_1000514c71.in, 0
  %v3_10005154 = load i32, i32* %stack_var_-8472, align 4
  %v2_10005158 = icmp slt i32 %v3_1000514870, %v3_10005154
  br i1 %v2_10005158, label %dec_label_pc_10005198, label %dec_label_pc_10005160

dec_label_pc_10005160:                            ; preds = %dec_label_pc_10005154
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_10005174.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005174

dec_label_pc_10005174:                            ; preds = %dec_label_pc_10005160, %dec_label_pc_10005190
  %v0_10005194 = phi i32 [ %v3_1000514870, %dec_label_pc_10005160 ], [ %v1_10005194, %dec_label_pc_10005190 ]
  %v0_10005190 = phi i32 [ %v2_10004c9c, %dec_label_pc_10005160 ], [ %v1_10005190, %dec_label_pc_10005190 ]
  %v1_10005174 = phi i32 [ 0, %dec_label_pc_10005160 ], [ %v1_1000517419, %dec_label_pc_10005190 ]
  %v2_10005174 = add i32 %v1_10005174, %v0_10005174.pre
  %v3_10005174 = inttoptr i32 %v2_10005174 to i8*
  %v4_10005174 = load i8, i8* %v3_10005174, align 1
  %v1_10005178 = add i32 %v1_10005174, 1
  store i32 %v1_10005178, i32* %r11.global-to-local, align 4
  %v1_1000517c = inttoptr i32 %v0_10005190 to i8*
  %v2_1000517c = load i8, i8* %v1_1000517c, align 1
  %v4_10005184 = icmp eq i8 %v2_1000517c, %v4_10005174
  br i1 %v4_10005184, label %dec_label_pc_100051dc, label %dec_label_pc_1000518c

dec_label_pc_1000518c:                            ; preds = %dec_label_pc_10005174
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10005190

dec_label_pc_10005190:                            ; preds = %dec_label_pc_100051dc, %dec_label_pc_1000518c
  %v1_1000517419 = phi i32 [ %v1_10005178, %dec_label_pc_100051dc ], [ 0, %dec_label_pc_1000518c ]
  %v1_10005190 = add i32 %v0_10005190, 1
  %v1_10005194 = add i32 %v0_10005194, -1
  %v2_10005194 = icmp eq i32 %v1_10005194, 0
  br i1 %v2_10005194, label %dec_label_pc_10005198, label %dec_label_pc_10005174

dec_label_pc_10005198:                            ; preds = %dec_label_pc_10005190, %dec_label_pc_10005154
  %v3_10005198 = load i32, i32* %stack_var_-8468, align 4
  %v2_1000519c = icmp slt i32 %v3_1000514870, %v3_10005198
  br i1 %v2_1000519c, label %dec_label_pc_1000513c.backedge, label %dec_label_pc_100051a4

dec_label_pc_100051a4:                            ; preds = %dec_label_pc_10005198
  store i32 0, i32* %r11.global-to-local, align 4
  br i1 %v3_1000514c71, label %dec_label_pc_1000513c.backedge, label %dec_label_pc_100051b8.lr.ph

dec_label_pc_1000513c.backedge:                   ; preds = %dec_label_pc_100051b4.backedge, %dec_label_pc_100051a4, %dec_label_pc_10005198
  %v0_1000513c = load i32, i32* %r28.global-to-local, align 4
  store i32 268456268, i32* @lr, align 4
  %v3_10005148 = call i32 @function_10009794(i32 %v0_1000513c, i32 %v2_10004c9c, i32 4096)
  %tmp63 = icmp slt i32 %v3_10005148, 1
  br i1 %tmp63, label %dec_label_pc_10005278, label %dec_label_pc_10005154

dec_label_pc_100051b8.lr.ph:                      ; preds = %dec_label_pc_100051a4
  %v0_100051b8.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100051b8

dec_label_pc_100051b8:                            ; preds = %dec_label_pc_100051b8.lr.ph, %dec_label_pc_100051b4.backedge
  %v0_100051b4 = phi i32 [ %v3_1000514870, %dec_label_pc_100051b8.lr.ph ], [ %v1_100051b4, %dec_label_pc_100051b4.backedge ]
  %storemerge.in = phi i32 [ %v2_10004c9c, %dec_label_pc_100051b8.lr.ph ], [ %storemerge, %dec_label_pc_100051b4.backedge ]
  %v1_100051b8 = phi i32 [ 0, %dec_label_pc_100051b8.lr.ph ], [ %v1_100051b825, %dec_label_pc_100051b4.backedge ]
  %v2_100051b8 = add i32 %v1_100051b8, %v0_100051b8.pre
  %v3_100051b8 = inttoptr i32 %v2_100051b8 to i8*
  %v4_100051b8 = load i8, i8* %v3_100051b8, align 1
  %v1_100051bc = add i32 %v1_100051b8, 1
  store i32 %v1_100051bc, i32* %r11.global-to-local, align 4
  %v1_100051c0 = inttoptr i32 %storemerge.in to i8*
  %v2_100051c0 = load i8, i8* %v1_100051c0, align 1
  %v4_100051c8 = icmp eq i8 %v2_100051c0, %v4_100051b8
  br i1 %v4_100051c8, label %dec_label_pc_10005230, label %dec_label_pc_100051d0

dec_label_pc_100051d0:                            ; preds = %dec_label_pc_100051b8
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100051b4.backedge

dec_label_pc_100051b4.backedge:                   ; preds = %dec_label_pc_10005230, %dec_label_pc_100051d0
  %v1_100051b825 = phi i32 [ 0, %dec_label_pc_100051d0 ], [ %v1_100051bc, %dec_label_pc_10005230 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_100051b4 = add i32 %v0_100051b4, -1
  %v2_100051b4 = icmp eq i32 %v1_100051b4, 0
  br i1 %v2_100051b4, label %dec_label_pc_1000513c.backedge, label %dec_label_pc_100051b8

dec_label_pc_100051dc:                            ; preds = %dec_label_pc_10005174
  %v4_10005180 = icmp eq i32 %v3_10005154, %v1_10005178
  br i1 %v4_10005180, label %dec_label_pc_100051e0, label %dec_label_pc_10005190

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_100051dc, %dec_label_pc_10005230
  store i32 ptrtoint ([3 x i8]* @global_var_100051e8.66 to i32), i32* @lr, align 4
  %v1_100051e4 = call i32 @function_10008794(i32 18)
  store i32 268456432, i32* @lr, align 4
  %v1_100051ec = call i32 @function_10008794(i32 19)
  store i32 268456440, i32* @lr, align 4
  %v0_100051f4 = call i32 @function_1000955c()
  %v0_100051f8 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456452, i32* @lr, align 4
  %v2_10005200 = call i32 @function_1000967c(i32 %v0_100051f8, i32 9)
  br label %dec_label_pc_10005204

dec_label_pc_10005204:                            ; preds = %dec_label_pc_100050f0, %dec_label_pc_10005278, %dec_label_pc_100051e0
  store i32 64, i32* @r4, align 4
  store i32 %v2_10004c94, i32* @r3, align 4
  store i32 268456464, i32* @lr, align 4
  %v0_1000520c = call i32 @function_10008e44()
  store i32 %v2_10004c98, i32* @r3, align 4
  store i32 64, i32* @r4, align 4
  %v0_10005218 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10005218, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005220.67 to i32), i32* @lr, align 4
  %v0_1000521c = call i32 @function_10008e44()
  store i32 268456488, i32* @lr, align 4
  %v1_10005224 = call i32 @function_1000ad70(i32 1)
  %v0_10005228 = load i32, i32* @r25, align 4
  store i32 %v0_10005228, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ecc.backedge

dec_label_pc_10005230:                            ; preds = %dec_label_pc_100051b8
  %v4_100051c4 = icmp eq i32 %v3_10005198, %v1_100051bc
  br i1 %v4_100051c4, label %dec_label_pc_100051e0, label %dec_label_pc_100051b4.backedge

dec_label_pc_1000523c:                            ; preds = %dec_label_pc_10004cc0
  store i32 268456516, i32* @lr, align 4
  %v1_10005240 = call i32 @function_100044e8(i32 53413)
  %v3_10005244 = icmp eq i32 %v1_10005240, 0
  br i1 %v3_10005244, label %dec_label_pc_1000524c, label %dec_label_pc_10004dfc

dec_label_pc_1000524c:                            ; preds = %dec_label_pc_1000523c
  store i32 268456532, i32* @lr, align 4
  %v1_10005250 = call i32 @function_100044e8(i32 80)
  %v3_10005254 = icmp eq i32 %v1_10005250, 0
  br i1 %v3_10005254, label %dec_label_pc_1000525c, label %dec_label_pc_10004dfc

dec_label_pc_1000525c:                            ; preds = %dec_label_pc_1000524c
  store i32 268456548, i32* @lr, align 4
  %v1_10005260 = call i32 @function_100044e8(i32 52869)
  %v3_10005264 = icmp eq i32 %v1_10005260, 0
  br i1 %v3_10005264, label %dec_label_pc_1000526c, label %dec_label_pc_10004dfc

dec_label_pc_1000526c:                            ; preds = %dec_label_pc_1000525c
  store i32 268456564, i32* @lr, align 4
  %v1_10005270 = call i32 @function_100044e8(i32 37215)
  br label %dec_label_pc_10004dfc

dec_label_pc_10005278:                            ; preds = %dec_label_pc_1000513c.backedge, %dec_label_pc_1000510c
  store i32 ptrtoint ([3 x i8]* @global_var_10005280.68 to i32), i32* @lr, align 4
  %v1_1000527c = call i32 @function_10008794(i32 18)
  store i32 268456584, i32* @lr, align 4
  %v1_10005284 = call i32 @function_10008794(i32 19)
  store i32 268456592, i32* @lr, align 4
  %v0_1000528c = call i32 @function_1000955c()
  br label %dec_label_pc_10005204

dec_label_pc_10005294:                            ; preds = %dec_label_pc_100050cc
  %v0_10005294 = load i32, i32* %r30.global-to-local, align 4
  store i32 268456608, i32* @lr, align 4
  %v2_1000529c = call i32 @function_1000967c(i32 %v0_10005294, i32 9)
  br label %dec_label_pc_100050e8

; uselistorder directives
  uselistorder i32 %v1_100051b4, { 1, 0 }
  uselistorder i32 %v1_100051bc, { 1, 0, 2 }
  uselistorder i32 %v1_100051b8, { 1, 0 }
  uselistorder i32 %v3_10005148, { 2, 1, 0 }
  uselistorder i32 %v1_10005194, { 1, 0 }
  uselistorder i32 %v1_10005174, { 1, 0 }
  uselistorder i32 %v3_1000514870, { 3, 0, 2, 1 }
  uselistorder i32 %v2_10004ed0, { 1, 0 }
  uselistorder i32 %v2_10004f28, { 1, 0 }
  uselistorder i32 %v1_10004ee4, { 1, 0 }
  uselistorder i32 %v2_10004c9c, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10004c10, { 1, 0, 2 }
  uselistorder i32 %v2_10004bec, { 1, 0, 2 }
  uselistorder i32 %v2_10004bcc, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %v0_10004b34, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-8472, { 1, 0 }
  uselistorder i32* %stack_var_-8468, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i32* %r28.global-to-local, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 7 }
  uselistorder i32 268456268, { 1, 0 }
  uselistorder i32 (i32*)* @function_10009bb8, { 3, 2, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 268455636, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a11c, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a044, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_100044e8, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @function_10009aa8, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100097dc, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005204, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100051e0, { 1, 0 }
  uselistorder label %dec_label_pc_100051b8, { 1, 0 }
  uselistorder label %dec_label_pc_10005174, { 1, 0 }
  uselistorder label %dec_label_pc_10005154, { 1, 0 }
  uselistorder label %dec_label_pc_100050f0, { 1, 0 }
  uselistorder label %dec_label_pc_100050e8, { 1, 0 }
  uselistorder label %dec_label_pc_10004ecc.backedge, { 3, 2, 5, 4, 1, 0 }
  uselistorder label %dec_label_pc_1000505c, { 1, 0 }
  uselistorder label %dec_label_pc_10004edc, { 1, 0 }
  uselistorder label %dec_label_pc_10004edc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10004e98, { 1, 0 }
  uselistorder label %dec_label_pc_10004e64, { 1, 0 }
  uselistorder label %dec_label_pc_10004e30, { 1, 0 }
  uselistorder label %dec_label_pc_10004dfc, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10004c78, { 1, 0 }
}

define i32 @function_100052a4() local_unnamed_addr {
dec_label_pc_100052a4:
  store i32 268456632, i32* @global_var_1001c680.69, align 4
  %v0_100052b4 = load i32, i32* @r3, align 4
  ret i32 %v0_100052b4
}

define i32 @function_100052b8() local_unnamed_addr {
dec_label_pc_100052b8:
  store i32 268456660, i32* @lr, align 4
  %v1_100052d0 = call i32 @function_10008820(i32 1)
  store i32 268456676, i32* @lr, align 4
  %v2_100052e0 = call i32 @function_1000a010(i32 ptrtoint ([15 x i8]* @global_var_1000bf5c.71 to i32))
  store i32 %v2_100052e0, i32* @global_var_1001c77c.72, align 4
  %v3_100052f0 = call i32 @function_1000876c(i32 1, i32* null)
  %v4_100052f0 = inttoptr i32 %v3_100052f0 to i16*
  %v3_100052f4 = load i16, i16* %v4_100052f0, align 2
  store i16 %v3_100052f4, i16* bitcast (i32* @global_var_1001c77a.73 to i16*), align 4
  store i32 268456708, i32* @lr, align 4
  %v1_10005300 = call i32 @function_10008794(i32 1)
  ret i32 %v1_10005300

; uselistorder directives
  uselistorder i32 (i32)* @function_1000a010, { 2, 1, 0 }
}

define i32 @function_10005318(i32 %arg1) local_unnamed_addr {
dec_label_pc_10005318:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 0, i32* %r20.global-to-local, align 4
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  store i32 0, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r16.global-to-local, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  %stack_var_-1592 = alloca i32, align 4
  %stack_var_-1136 = alloca i32, align 4
  %stack_var_-1600 = alloca i32, align 4
  %stack_var_-1604 = alloca i32, align 4
  %stack_var_-1392 = alloca i32, align 4
  %stack_var_-1520 = alloca i32, align 4
  %stack_var_-1596 = alloca i32, align 4
  %stack_var_-1608 = alloca i16, align 2
  %stack_var_-1584 = alloca i32, align 4
  %stack_var_-1552 = alloca i32, align 4
  %stack_var_-1264 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10005318 = load i32, i32* @lr, align 4
  store i32 %v0_10005318, i32* %r0.global-to-local, align 4
  %v0_10005320 = load i32, i32* @r31, align 4
  store i32 268456748, i32* @lr, align 4
  %v0_10005328 = call i32 @function_100095a4()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_10005328, i32* @global_var_1001c6b0.74, align 4
  %tmp47 = icmp slt i32 %v0_10005328, 1
  br i1 %tmp47, label %dec_label_pc_10005350, label %dec_label_pc_1000533c

dec_label_pc_1000533c:                            ; preds = %dec_label_pc_10005350, %dec_label_pc_10005318
  store i32 %v0_10005318, i32* %r0.global-to-local, align 4
  store i32 %v0_10005320, i32* @r31, align 4
  ret i32 %v0_10005328

dec_label_pc_10005350:                            ; preds = %dec_label_pc_10005318
  %v3_10005350 = icmp eq i32 %v0_10005328, -1
  br i1 %v3_10005350, label %dec_label_pc_1000533c, label %dec_label_pc_10005358

dec_label_pc_10005358:                            ; preds = %dec_label_pc_10005350
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %stack_var_-24, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005368.75 to i32), i32* @lr, align 4
  %v1_10005364 = call i32 @function_10008820(i32 23)
  store i32 268456816, i32* @lr, align 4
  %v1_1000536c = call i32 @function_10008820(i32 24)
  %v3_10005378 = call i32 @function_1000876c(i32 23, i32* null)
  store i32 268456840, i32* @lr, align 4
  %v2_10005384 = call i32 @function_100096c4(i32 %v3_10005378, i32 2)
  %v3_10005388 = icmp eq i32 %v2_10005384, -1
  store i32 %v2_10005384, i32* @r31, align 4
  br i1 %v3_10005388, label %dec_label_pc_100053d0, label %dec_label_pc_10005394

dec_label_pc_10005394:                            ; preds = %dec_label_pc_100053d0, %dec_label_pc_10005358
  %v0_10005398 = phi i32 [ %v2_100053e4, %dec_label_pc_100053d0 ], [ %v2_10005384, %dec_label_pc_10005358 ]
  %v2_100053a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268456876, i32* @lr, align 4
  %v3_100053a8 = call i32 @function_1000938c(i32 %v0_10005398, i32 -2147199228, i32 %v2_100053a0)
  br label %dec_label_pc_100053ac

dec_label_pc_100053ac:                            ; preds = %dec_label_pc_100053ac, %dec_label_pc_10005394
  %v0_100053b0 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100053c4.76 to i32), i32* @lr, align 4
  %v3_100053c0 = call i32 @function_1000938c(i32 %v0_100053b0, i32 -2147199227, i32 0)
  store i32 268456908, i32* @lr, align 4
  %v1_100053c8 = call i32 @function_1000ad70(i32 10)
  br label %dec_label_pc_100053ac

dec_label_pc_100053d0:                            ; preds = %dec_label_pc_10005358
  %v3_100053d8 = call i32 @function_1000876c(i32 24, i32* null)
  store i32 268456936, i32* @lr, align 4
  %v2_100053e4 = call i32 @function_100096c4(i32 %v3_100053d8, i32 2)
  %v3_100053e8 = icmp eq i32 %v2_100053e4, -1
  store i32 %v2_100053e4, i32* @r31, align 4
  br i1 %v3_100053e8, label %dec_label_pc_100053f4, label %dec_label_pc_10005394

dec_label_pc_100053f4:                            ; preds = %dec_label_pc_100053d0
  store i32 ptrtoint ([3 x i8]* @global_var_100053fc.77 to i32), i32* @lr, align 4
  %v1_100053f8 = call i32 @function_10008794(i32 23)
  store i32 ptrtoint ([3 x i8]* @global_var_10005404.78 to i32), i32* @lr, align 4
  %v1_10005400 = call i32 @function_10008794(i32 24)
  %v0_10005408 = call i32 @function_1000acec()
  %v0_10005410 = load i32, i32* @lr, align 4
  %v0_10005414 = load i32, i32* @r29, align 4
  %v2_10005418 = ptrtoint i32* %stack_var_-1264 to i32
  %v0_1000541c = load i32, i32* @r28, align 4
  store i32 %v0_10005408, i32* @r28, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10005430 = load i32, i32* %r17.global-to-local, align 4
  store i32 0, i32* %stack_var_-1596, align 4
  store i32 268566528, i32* %r17.global-to-local, align 4
  %v0_1000543c = load i32, i32* %r18.global-to-local, align 4
  %v2_10005440 = ptrtoint i32* %stack_var_-1552 to i32
  store i32 %v2_10005440, i32* %r18.global-to-local, align 4
  %v0_10005444 = load i32, i32* %r19.global-to-local, align 4
  store i32 268566528, i32* %r19.global-to-local, align 4
  %v0_1000544c = load i32, i32* %r20.global-to-local, align 4
  store i32 268566528, i32* %r20.global-to-local, align 4
  %v0_10005454 = load i32, i32* @r31, align 4
  store i32 2, i32* @r31, align 4
  %v0_1000545c = load i32, i32* %r14.global-to-local, align 4
  %v0_10005460 = load i32, i32* %r15.global-to-local, align 4
  %v0_10005464 = load i32, i32* %r16.global-to-local, align 4
  %v0_1000546c = load i32, i32* @r22, align 4
  %v0_10005470 = load i32, i32* @r23, align 4
  %v0_10005474 = load i32, i32* @r24, align 4
  %v0_10005478 = load i32, i32* @r25, align 4
  %v0_1000547c = load i32, i32* @r26, align 4
  %v0_10005480 = load i32, i32* @r27, align 4
  store i32 268457100, i32* @lr, align 4
  %v1_10005488 = call i32 @function_1000a2f8(i32 %v2_10005418)
  store i32 %v2_10005418, i32* @r3, align 4
  store i32 268457112, i32* @lr, align 4
  %v2_10005494 = call i32 @function_1000a2ac(i32 %v2_10005418, i32 2)
  store i32 268457128, i32* @lr, align 4
  %v3_100054a4 = call i32 @function_100098b4(i32 0, i32 %v2_10005418, i32 0)
  store i32 268457140, i32* @lr, align 4
  %v2_100054b0 = call i32 @function_1000a324(i32 17, i32 1)
  store i32 ptrtoint (i32* @global_var_100054c4.79 to i32), i32* @lr, align 4
  %v2_100054c0 = call i32 @function_1000a324(i32 5, i32 268456612)
  store i32 268457160, i32* @lr, align 4
  %v1_100054c4 = call i32 @function_100090a0(i32 %v2_100054c0)
  store i32 -1334109607, i32* %r9.global-to-local, align 4
  store i32 -1334109607, i32* @global_var_1001c77c.72, align 4
  store i16 23, i16* bitcast (i32* @global_var_1001c77a.73 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_100054c4, i32* @global_var_1001c6a0.16, align 4
  store i16 2, i16* bitcast (i32* @global_var_1001c778.70 to i16*), align 4
  store i32 268457200, i32* @lr, align 4
  %v2_100054ec = call i32 @function_100088ac(i32 %v1_100054c4, i32 -1334109607)
  store i32 268456632, i32* %r9.global-to-local, align 4
  store i32 268456632, i32* @global_var_1001c680.69, align 4
  store i32 268457216, i32* @lr, align 4
  %v2_100054fc = call i32 @function_10005b98(i32 %v2_100054ec, i32 268456632)
  store i32 %v2_10005440, i32* @r3, align 4
  store i32 32, i32* @r4, align 4
  store i32 268457228, i32* @lr, align 4
  %v0_10005508 = call i32 @function_10008e44()
  %v0_1000550c = load i32, i32* @r28, align 4
  %v3_1000550c = icmp eq i32 %v0_1000550c, 2
  br i1 %v3_1000550c, label %dec_label_pc_10005684, label %dec_label_pc_10005514

dec_label_pc_10005514:                            ; preds = %dec_label_pc_10005684, %dec_label_pc_100053f4, %dec_label_pc_10005694
  %v0_10005514 = call i32 @function_10005b48()
  %v2_10005518 = ptrtoint i32* %stack_var_-1584 to i32
  store i32 %v2_10005518, i32* @r27, align 4
  store i32 %v0_10005514, i32* %r29.global-to-local, align 4
  %v0_10005520 = load i32, i32* @r31, align 4
  %v1_10005520 = inttoptr i32 %v0_10005520 to i32*
  %v2_10005520 = load i32, i32* %v1_10005520, align 4
  %v2_10005524 = ptrtoint i16* %stack_var_-1608 to i32
  store i32 %v2_10005524, i32* @r25, align 4
  store i32 0, i32* @r26, align 4
  store i32 268457264, i32* @lr, align 4
  %v1_1000552c = inttoptr i32 %v2_10005520 to i8*
  %v2_1000552c = call i32 @function_10008d9c(i8* %v1_1000552c)
  store i32 %v2_1000552c, i32* %r28.global-to-local, align 4
  %v0_10005534 = load i32, i32* @r31, align 4
  %v1_10005534 = inttoptr i32 %v0_10005534 to i32*
  %v2_10005534 = load i32, i32* %v1_10005534, align 4
  %v1_10005538 = sub i32 20, %v2_1000552c
  store i32 %v1_10005538, i32* @r28, align 4
  store i32 268457280, i32* @lr, align 4
  %v1_1000553c = inttoptr i32 %v2_10005534 to i8*
  %v2_1000553c = call i32 @function_10008d9c(i8* %v1_1000553c)
  %v0_10005540 = load i32, i32* %r29.global-to-local, align 4
  %v1_10005540 = load i32, i32* @r28, align 4
  %v2_10005540 = urem i32 %v0_10005540, %v1_10005540
  %v2_10005544 = sub i32 %v0_10005540, %v2_10005540
  store i32 %v2_10005544, i32* %r0.global-to-local, align 4
  %v2_1000554c = add i32 %v2_10005540, %v2_1000553c
  %v0_10005558 = load i32, i32* @r25, align 4
  %v2_10005558 = add i32 %v0_10005558, %v2_1000554c
  store i32 %v2_10005558, i32* @r29, align 4
  store i32 268457312, i32* @lr, align 4
  %v2_1000555c = bitcast i32* %stack_var_-1584 to i8*
  %v3_1000555c = call i32 @function_10005c08(i8* %v2_1000555c, i32 %v2_1000554c)
  %v0_10005560 = load i32, i32* @r31, align 4
  %v1_10005560 = inttoptr i32 %v0_10005560 to i32*
  %v2_10005560 = load i32, i32* %v1_10005560, align 4
  store i32 %v2_10005560, i32* @r3, align 4
  %v0_10005564 = load i32, i32* @r26, align 4
  %v1_10005564 = trunc i32 %v0_10005564 to i8
  %v2_10005564 = load i32, i32* @r29, align 4
  %v3_10005564 = add i32 %v2_10005564, 24
  %v4_10005564 = inttoptr i32 %v3_10005564 to i8*
  store i8 %v1_10005564, i8* %v4_10005564, align 1
  %v2_1000556c = inttoptr i32 %v2_10005560 to i8*
  %v3_1000556c = call i32 @function_10008dc4(i8* %v2_1000556c, i32 %v2_10005518)
  store i32 32, i32* @r4, align 4
  store i32 %v2_10005518, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000557c.81 to i32), i32* @lr, align 4
  %v0_10005578 = call i32 @function_10008e44()
  %v0_1000557c = call i32 @function_10005b48()
  store i32 %v0_1000557c, i32* %r28.global-to-local, align 4
  %v0_10005584 = load i32, i32* @r31, align 4
  %v1_10005584 = inttoptr i32 %v0_10005584 to i32*
  %v2_10005584 = load i32, i32* %v1_10005584, align 4
  store i32 268457356, i32* @lr, align 4
  %v1_10005588 = inttoptr i32 %v2_10005584 to i8*
  %v2_10005588 = call i32 @function_10008d9c(i8* %v1_10005588)
  store i32 %v2_10005588, i32* %r29.global-to-local, align 4
  %v0_10005590 = load i32, i32* @r31, align 4
  %v1_10005590 = inttoptr i32 %v0_10005590 to i32*
  %v2_10005590 = load i32, i32* %v1_10005590, align 4
  %v1_10005594 = sub i32 20, %v2_10005588
  store i32 %v1_10005594, i32* @r29, align 4
  store i32 268457372, i32* @lr, align 4
  %v1_10005598 = inttoptr i32 %v2_10005590 to i8*
  %v2_10005598 = call i32 @function_10008d9c(i8* %v1_10005598)
  %v0_1000559c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000559c = load i32, i32* @r29, align 4
  %v2_1000559c = urem i32 %v0_1000559c, %v1_1000559c
  %v2_100055a0 = sub i32 %v0_1000559c, %v2_1000559c
  store i32 %v2_100055a0, i32* %r0.global-to-local, align 4
  %v2_100055a8 = add i32 %v2_1000559c, %v2_10005598
  %v0_100055b4 = load i32, i32* @r25, align 4
  %v2_100055b4 = add i32 %v0_100055b4, %v2_100055a8
  store i32 %v2_100055b4, i32* @r28, align 4
  store i32 268457404, i32* @lr, align 4
  %v3_100055b8 = call i32 @function_10005c08(i8* %v2_1000555c, i32 %v2_100055a8)
  %v0_100055bc = load i32, i32* @r26, align 4
  %v1_100055bc = trunc i32 %v0_100055bc to i8
  %v2_100055bc = load i32, i32* @r28, align 4
  %v3_100055bc = add i32 %v2_100055bc, 24
  %v4_100055bc = inttoptr i32 %v3_100055bc to i8*
  store i8 %v1_100055bc, i8* %v4_100055bc, align 1
  store i32 ptrtoint ([3 x i8]* @global_var_100055d0.82 to i32), i32* @lr, align 4
  %v2_100055cc = call i32 @function_1000974c(i32 15, i32 %v2_10005518)
  store i32 268457432, i32* @lr, align 4
  %v1_100055d4 = call i32 @function_10008820(i32 3)
  %v3_100055e0 = call i32 @function_1000876c(i32 3, i32* nonnull %stack_var_-1596)
  %v3_100055e4 = load i32, i32* %stack_var_-1596, align 4
  store i32 268457460, i32* @lr, align 4
  %v3_100055f0 = call i32 @function_100099bc(i32 1, i32 %v3_100055e0, i32 %v3_100055e4)
  store i32 ptrtoint ([3 x i8]* @global_var_10005608.84 to i32), i32* @lr, align 4
  %v3_10005604 = call i32 @function_100099bc(i32 1, i32 ptrtoint (i32* @global_var_1000bf6c.83 to i32), i32 1)
  store i32 268457488, i32* @lr, align 4
  %v1_1000560c = call i32 @function_10008794(i32 3)
  store i32 268457492, i32* @lr, align 4
  %v1_10005610 = call i32 @function_1000072c(i32 %v1_1000560c)
  store i32 268457496, i32* @lr, align 4
  %v1_10005614 = call i32 @function_10004aec(i32 %v1_10005610)
  store i32 ptrtoint (i32* @global_var_1000561c.85 to i32), i32* @lr, align 4
  %v1_10005618 = call i32 @function_10005318(i32 %v1_10005614)
  store i32 268457504, i32* @lr, align 4
  %v0_1000561c = call i32 @function_100095a4()
  %tmp48 = icmp slt i32 %v0_1000561c, 1
  br i1 %tmp48, label %dec_label_pc_100056bc, label %dec_label_pc_10005628

dec_label_pc_10005628:                            ; preds = %dec_label_pc_10005514
  store i32 %v0_10005410, i32* %r0.global-to-local, align 4
  store i32 %v0_1000545c, i32* %r14.global-to-local, align 4
  store i32 %v0_10005460, i32* %r15.global-to-local, align 4
  store i32 %v0_10005464, i32* %r16.global-to-local, align 4
  store i32 %v0_10005430, i32* %r17.global-to-local, align 4
  store i32 %v0_1000543c, i32* %r18.global-to-local, align 4
  store i32 %v0_10005444, i32* %r19.global-to-local, align 4
  store i32 %v0_1000544c, i32* %r20.global-to-local, align 4
  store i32 %v0_1000546c, i32* @r22, align 4
  store i32 %v0_10005470, i32* @r23, align 4
  store i32 %v0_10005474, i32* @r24, align 4
  store i32 %v0_10005478, i32* @r25, align 4
  store i32 %v0_1000547c, i32* @r26, align 4
  store i32 %v0_10005480, i32* @r27, align 4
  store i32 %v0_1000541c, i32* @r28, align 4
  store i32 %v0_10005414, i32* @r29, align 4
  store i32 %v0_10005454, i32* @r31, align 4
  ret i32 0

dec_label_pc_10005684:                            ; preds = %dec_label_pc_100053f4
  %v0_10005684 = load i32, i32* @r31, align 4
  %v1_10005684 = add i32 %v0_10005684, 4
  %v2_10005684 = inttoptr i32 %v1_10005684 to i32*
  %v3_10005684 = load i32, i32* %v2_10005684, align 4
  store i32 268457612, i32* @lr, align 4
  %v1_10005688 = inttoptr i32 %v3_10005684 to i8*
  %v2_10005688 = call i32 @function_10008d9c(i8* %v1_10005688)
  %v2_1000568c = icmp sgt i32 %v2_10005688, 31
  br i1 %v2_1000568c, label %dec_label_pc_10005514, label %dec_label_pc_10005694

dec_label_pc_10005694:                            ; preds = %dec_label_pc_10005684
  %v0_10005694 = load i32, i32* @r31, align 4
  %v1_10005694 = add i32 %v0_10005694, 4
  %v2_10005694 = inttoptr i32 %v1_10005694 to i32*
  %v3_10005694 = load i32, i32* %v2_10005694, align 4
  store i32 %v2_10005440, i32* @r3, align 4
  %v2_1000569c = bitcast i32* %stack_var_-1552 to i8*
  %v3_1000569c = call i32 @function_10008dc4(i8* %v2_1000569c, i32 %v3_10005694)
  %v0_100056a0 = load i32, i32* @r31, align 4
  %v1_100056a0 = add i32 %v0_100056a0, 4
  %v2_100056a0 = inttoptr i32 %v1_100056a0 to i32*
  %v3_100056a0 = load i32, i32* %v2_100056a0, align 4
  store i32 %v3_100056a0, i32* %r29.global-to-local, align 4
  store i32 268457644, i32* @lr, align 4
  %v1_100056a8 = inttoptr i32 %v3_100056a0 to i8*
  %v2_100056a8 = call i32 @function_10008d9c(i8* %v1_100056a8)
  store i32 %v2_100056a8, i32* @r4, align 4
  store i32 %v3_100056a0, i32* @r3, align 4
  store i32 268457656, i32* @lr, align 4
  %v0_100056b4 = call i32 @function_10008e44()
  br label %dec_label_pc_10005514

dec_label_pc_100056bc:                            ; preds = %dec_label_pc_10005514
  store i32 ptrtoint ([3 x i8]* @global_var_100056c0.86 to i32), i32* @lr, align 4
  %v1_100056bc = call i32 @function_1000986c(i32 %v0_1000561c)
  store i32 ptrtoint ([3 x i8]* @global_var_100056c8.87 to i32), i32* @lr, align 4
  %v0_100056c4 = call i32 @function_1000955c()
  store i32 ptrtoint ([3 x i8]* @global_var_100056d0.88 to i32), i32* @lr, align 4
  %v0_100056cc = call i32 @function_1000955c()
  store i32 ptrtoint (i32* @global_var_100056d8.89 to i32), i32* @lr, align 4
  %v0_100056d4 = call i32 @function_1000955c()
  store i32 0, i32* @r24, align 4
  store i32 268457696, i32* @lr, align 4
  %v1_100056dc = call i32 @function_1000072c(i32 %v0_100056d4)
  %v2_100056e0 = ptrtoint i32* %stack_var_-1520 to i32
  store i32 %v2_100056e0, i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100056e8.90 to i32), i32* @lr, align 4
  %v1_100056e4 = call i32 @function_10004aec(i32 %v1_100056dc)
  %v2_100056e8 = ptrtoint i32* %stack_var_-1392 to i32
  store i32 %v2_100056e8, i32* @r27, align 4
  store i32 268457712, i32* @lr, align 4
  %v1_100056ec = call i32 @function_10005318(i32 %v1_100056e4)
  store i32 268566528, i32* @r23, align 4
  store i32 268457720, i32* @lr, align 4
  %v1_100056f4 = call i32 @function_100060c0(i32 %v1_100056ec)
  store i32 268566528, i32* @r30, align 4
  %v2_10005700 = ptrtoint i32* %stack_var_-1604 to i32
  store i32 %v2_10005700, i32* %r15.global-to-local, align 4
  %v2_10005704 = ptrtoint i32* %stack_var_-1600 to i32
  store i32 %v2_10005704, i32* %r14.global-to-local, align 4
  %v2_1000570c = ptrtoint i32* %stack_var_-1136 to i32
  store i32 %v2_1000570c, i32* %r16.global-to-local, align 4
  %v2_100057e0 = ptrtoint i32* %stack_var_-1592 to i32
  %v1_10005a6c = bitcast i32* %stack_var_-1552 to i8*
  br label %dec_label_pc_10005710

dec_label_pc_10005710:                            ; preds = %dec_label_pc_10005ad0, %dec_label_pc_100057c8, %dec_label_pc_10005b08, %dec_label_pc_10005ac4, %dec_label_pc_10005a68, %dec_label_pc_100058c0, %dec_label_pc_100058b0, %dec_label_pc_10005874, %dec_label_pc_10005b3c, %dec_label_pc_10005af4, %dec_label_pc_10005adc, %dec_label_pc_10005ab0, %dec_label_pc_10005a30, %dec_label_pc_10005958, %dec_label_pc_100056bc
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000572049 = load i32, i32* @r28, align 4
  %v4_1000572051 = inttoptr i32 %v2_1000572049 to i32*
  store i32 0, i32* %v4_1000572051, align 4
  %v0_1000572452 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000572453 = add i32 %v0_1000572452, 4
  store i32 %v1_1000572453, i32* %r9.global-to-local, align 4
  %v0_1000572854 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000572855 = add i32 %v0_1000572854, -1
  store i32 %v1_1000572855, i32* %ctr.global-to-local, align 4
  %v2_1000572856 = icmp eq i32 %v1_1000572855, 0
  br i1 %v2_1000572856, label %dec_label_pc_1000572c, label %dec_label_pc_10005720.dec_label_pc_10005720_crit_edge

dec_label_pc_10005720.dec_label_pc_10005720_crit_edge: ; preds = %dec_label_pc_10005710, %dec_label_pc_10005720.dec_label_pc_10005720_crit_edge
  %v1_1000572457 = phi i32 [ %v1_10005724, %dec_label_pc_10005720.dec_label_pc_10005720_crit_edge ], [ %v1_1000572453, %dec_label_pc_10005710 ]
  %v0_10005720.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10005720 = load i32, i32* @r28, align 4
  %v3_10005720 = add i32 %v2_10005720, %v1_1000572457
  %v4_10005720 = inttoptr i32 %v3_10005720 to i32*
  store i32 %v0_10005720.pre, i32* %v4_10005720, align 4
  %v0_10005724 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005724 = add i32 %v0_10005724, 4
  store i32 %v1_10005724, i32* %r9.global-to-local, align 4
  %v0_10005728 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005728 = add i32 %v0_10005728, -1
  store i32 %v1_10005728, i32* %ctr.global-to-local, align 4
  %v2_10005728 = icmp eq i32 %v1_10005728, 0
  br i1 %v2_10005728, label %dec_label_pc_1000572c, label %dec_label_pc_10005720.dec_label_pc_10005720_crit_edge

dec_label_pc_1000572c:                            ; preds = %dec_label_pc_10005720.dec_label_pc_10005720_crit_edge, %dec_label_pc_10005710
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000573c58 = load i32, i32* @r27, align 4
  %v4_1000573c60 = inttoptr i32 %v2_1000573c58 to i32*
  store i32 0, i32* %v4_1000573c60, align 4
  %v0_1000574061 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000574062 = add i32 %v0_1000574061, 4
  store i32 %v1_1000574062, i32* %r9.global-to-local, align 4
  %v0_1000574463 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000574464 = add i32 %v0_1000574463, -1
  store i32 %v1_1000574464, i32* %ctr.global-to-local, align 4
  %v2_1000574465 = icmp eq i32 %v1_1000574464, 0
  br i1 %v2_1000574465, label %dec_label_pc_10005748, label %dec_label_pc_1000573c.dec_label_pc_1000573c_crit_edge

dec_label_pc_1000573c.dec_label_pc_1000573c_crit_edge: ; preds = %dec_label_pc_1000572c, %dec_label_pc_1000573c.dec_label_pc_1000573c_crit_edge
  %v1_1000574066 = phi i32 [ %v1_10005740, %dec_label_pc_1000573c.dec_label_pc_1000573c_crit_edge ], [ %v1_1000574062, %dec_label_pc_1000572c ]
  %v0_1000573c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_1000573c = load i32, i32* @r27, align 4
  %v3_1000573c = add i32 %v2_1000573c, %v1_1000574066
  %v4_1000573c = inttoptr i32 %v3_1000573c to i32*
  store i32 %v0_1000573c.pre, i32* %v4_1000573c, align 4
  %v0_10005740 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005740 = add i32 %v0_10005740, 4
  store i32 %v1_10005740, i32* %r9.global-to-local, align 4
  %v0_10005744 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005744 = add i32 %v0_10005744, -1
  store i32 %v1_10005744, i32* %ctr.global-to-local, align 4
  %v2_10005744 = icmp eq i32 %v1_10005744, 0
  br i1 %v2_10005744, label %dec_label_pc_10005748, label %dec_label_pc_1000573c.dec_label_pc_1000573c_crit_edge

dec_label_pc_10005748:                            ; preds = %dec_label_pc_1000573c.dec_label_pc_1000573c_crit_edge, %dec_label_pc_1000572c
  %v3_10005748 = load i32, i32* @global_var_1001c678.91, align 4
  %v3_1000574c = icmp eq i32 %v3_10005748, -1
  br i1 %v3_1000574c, label %dec_label_pc_10005774, label %dec_label_pc_10005754

dec_label_pc_10005754:                            ; preds = %dec_label_pc_10005748
  %v1_10005754 = call i32 @__asm_rlwinm(i32 %v3_10005748, i32 29, i32 3, i32 29)
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000575c = load i32, i32* @r25, align 4
  %v2_1000575c = add i32 %v1_1000575c, %v1_10005754
  %v1_10005760 = urem i32 %v3_10005748, 32
  %v1_10005764 = add i32 %v2_1000575c, 88
  %v2_10005764 = inttoptr i32 %v1_10005764 to i32*
  %v3_10005764 = load i32, i32* %v2_10005764, align 4
  %v3_10005768 = shl i32 1, %v1_10005760
  store i32 %v3_10005768, i32* %r0.global-to-local, align 4
  %v2_1000576c = or i32 %v3_10005764, %v3_10005768
  store i32 %v2_1000576c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000576c, i32* %v2_10005764, align 4
  br label %dec_label_pc_10005774

dec_label_pc_10005774:                            ; preds = %dec_label_pc_10005748, %dec_label_pc_10005754
  %v3_10005774 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 %v3_10005774, i32* %r0.global-to-local, align 4
  %v3_1000577c = icmp eq i32 %v3_10005774, -1
  br i1 %v3_1000577c, label %dec_label_pc_10005970, label %dec_label_pc_10005784

dec_label_pc_10005784:                            ; preds = %dec_label_pc_10005774, %dec_label_pc_10005970, %dec_label_pc_100059c8
  %v3_10005888 = phi i32 [ %v3_10005774, %dec_label_pc_10005774 ], [ -1, %dec_label_pc_10005970 ], [ %v3_10005888.pre, %dec_label_pc_100059c8 ]
  %v3_10005784 = load i8, i8* bitcast (i16* @global_var_1001c6b4.93 to i8*), align 2
  %v3_10005788 = icmp eq i8 %v3_10005784, 0
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10005890 = call i32 @__asm_rlwinm(i32 %v3_10005888, i32 29, i32 3, i32 29)
  %v1_10005894 = urem i32 %v3_10005888, 32
  %v1_10005898 = load i32, i32* @r25, align 4
  %v2_10005898 = add i32 %v1_10005898, %v1_10005890
  %v0_1000589c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000589c = shl i32 %v0_1000589c, %v1_10005894
  store i32 %v3_1000589c, i32* %r0.global-to-local, align 4
  br i1 %v3_10005788, label %dec_label_pc_10005888, label %dec_label_pc_10005790

dec_label_pc_10005790:                            ; preds = %dec_label_pc_10005784
  %v1_100057a8 = add i32 %v2_10005898, 216
  %v2_100057a8 = inttoptr i32 %v1_100057a8 to i32*
  %v3_100057a8 = load i32, i32* %v2_100057a8, align 4
  %v2_100057ac = or i32 %v3_100057a8, %v3_1000589c
  store i32 %v2_100057ac, i32* %r9.global-to-local, align 4
  store i32 %v2_100057ac, i32* %v2_100057a8, align 4
  br label %dec_label_pc_100057b4

dec_label_pc_100057b4:                            ; preds = %dec_label_pc_10005888, %dec_label_pc_10005790
  %v3_100057b4 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 %v3_100057b4, i32* %r0.global-to-local, align 4
  %v3_100057b8 = load i32, i32* @global_var_1001c678.91, align 4
  %v2_100057bc = icmp slt i32 %v3_100057b8, %v3_100057b4
  br i1 %v2_100057bc, label %dec_label_pc_100057c4, label %dec_label_pc_100057c8

dec_label_pc_100057c4:                            ; preds = %dec_label_pc_100057b4
  br label %dec_label_pc_100057c8

dec_label_pc_100057c8:                            ; preds = %dec_label_pc_100057b4, %dec_label_pc_100057c4
  %v0_100057d0 = phi i32 [ %v3_100057b8, %dec_label_pc_100057b4 ], [ %v3_100057b4, %dec_label_pc_100057c4 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r9.global-to-local, align 4
  %v1_100057d0 = add i32 %v0_100057d0, 1
  store i32 10, i32* %stack_var_-1592, align 4
  store i32 268457968, i32* @lr, align 4
  %v5_100057ec = call i32 @function_10009824(i32 %v1_100057d0, i32 %v2_100056e0, i32 %v2_100056e8, i32 0, i32 %v2_100057e0)
  %v6_100057ec = trunc i32 %v5_100057ec to i16
  %v4_100057f0 = icmp eq i16 %v6_100057ec, -1
  br i1 %v4_100057f0, label %dec_label_pc_10005710, label %dec_label_pc_100057f8

dec_label_pc_100057f8:                            ; preds = %dec_label_pc_100057c8
  %v4_100057f8 = icmp eq i16 %v6_100057ec, 0
  br i1 %v4_100057f8, label %dec_label_pc_10005800, label %dec_label_pc_1000582c

dec_label_pc_10005800:                            ; preds = %dec_label_pc_100057f8
  %v0_10005804 = load i32, i32* @r24, align 4
  store i16 0, i16* %stack_var_-1608, align 2
  %v2_10005814 = srem i32 %v0_10005804, 6
  %v1_10005818 = sub i32 %v0_10005804, %v2_10005814
  store i32 %v1_10005818, i32* %r9.global-to-local, align 4
  store i32 %v2_10005814, i32* %r0.global-to-local, align 4
  %v1_10005820 = add i32 %v0_10005804, 1
  store i32 %v1_10005820, i32* @r24, align 4
  %v3_10005824 = icmp eq i32 %v2_10005814, 0
  br i1 %v3_10005824, label %dec_label_pc_100059e4, label %dec_label_pc_1000582c

dec_label_pc_1000582c:                            ; preds = %dec_label_pc_100057f8, %dec_label_pc_10005800, %dec_label_pc_100059e4
  %v3_1000582c = load i8, i8* bitcast (i16* @global_var_1001c6b4.93 to i8*), align 2
  %v4_1000582c = zext i8 %v3_1000582c to i32
  store i32 %v4_1000582c, i32* @r29, align 4
  %v3_10005830 = icmp eq i8 %v3_1000582c, 0
  %v3_100058b0 = load i32, i32* @global_var_1001c67c.92, align 4
  br i1 %v3_10005830, label %dec_label_pc_100058b0, label %dec_label_pc_10005838

dec_label_pc_10005838:                            ; preds = %dec_label_pc_1000582c
  store i32 268566528, i32* %r29.global-to-local, align 4
  %v1_10005840 = call i32 @__asm_rlwinm(i32 %v3_100058b0, i32 29, i32 3, i32 29)
  %v1_10005844 = urem i32 %v3_100058b0, 32
  %v1_10005848 = load i32, i32* @r25, align 4
  %v2_10005848 = add i32 %v1_10005848, %v1_10005840
  store i32 %v2_10005848, i32* %r9.global-to-local, align 4
  %v1_1000584c = add i32 %v2_10005848, 216
  %v2_1000584c = inttoptr i32 %v1_1000584c to i32*
  %v3_1000584c = load i32, i32* %v2_1000584c, align 4
  %v3_10005850 = lshr i32 %v3_1000584c, %v1_10005844
  store i32 %v3_10005850, i32* %r0.global-to-local, align 4
  %v1_10005858 = urem i32 %v3_10005850, 2
  %v3_10005858 = icmp eq i32 %v1_10005858, 0
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i8 0, i8* bitcast (i16* @global_var_1001c6b4.93 to i8*), align 2
  br i1 %v3_10005858, label %dec_label_pc_10005868, label %dec_label_pc_10005a00

dec_label_pc_10005868:                            ; preds = %dec_label_pc_10005838
  %v3_10005868 = icmp eq i32 %v3_100058b0, -1
  br i1 %v3_10005868, label %dec_label_pc_10005874, label %dec_label_pc_10005870

dec_label_pc_10005870:                            ; preds = %dec_label_pc_10005868
  store i32 ptrtoint (i32* @global_var_10005874.94 to i32), i32* @lr, align 4
  %v0_10005870 = call i32 @function_1000955c()
  br label %dec_label_pc_10005874

dec_label_pc_10005874:                            ; preds = %dec_label_pc_10005868, %dec_label_pc_10005870
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c67c.92, align 4
  store i32 268458116, i32* @lr, align 4
  %v1_10005880 = call i32 @function_1000ad70(i32 1)
  br label %dec_label_pc_10005710

dec_label_pc_10005888:                            ; preds = %dec_label_pc_10005784
  %v1_100058a0 = add i32 %v2_10005898, 88
  %v2_100058a0 = inttoptr i32 %v1_100058a0 to i32*
  %v3_100058a0 = load i32, i32* %v2_100058a0, align 4
  %v2_100058a4 = or i32 %v3_100058a0, %v3_1000589c
  store i32 %v2_100058a4, i32* %r9.global-to-local, align 4
  store i32 %v2_100058a4, i32* %v2_100058a0, align 4
  br label %dec_label_pc_100057b4

dec_label_pc_100058b0:                            ; preds = %dec_label_pc_1000582c
  store i32 268566528, i32* @r31, align 4
  %v3_100058b8 = icmp eq i32 %v3_100058b0, -1
  br i1 %v3_100058b8, label %dec_label_pc_10005710, label %dec_label_pc_100058c0

dec_label_pc_100058c0:                            ; preds = %dec_label_pc_100058b0
  %v1_100058c0 = call i32 @__asm_rlwinm(i32 %v3_100058b0, i32 29, i32 3, i32 29)
  %v1_100058c4 = urem i32 %v3_100058b0, 32
  %v1_100058c8 = load i32, i32* @r25, align 4
  %v2_100058c8 = add i32 %v1_100058c8, %v1_100058c0
  store i32 %v2_100058c8, i32* %r9.global-to-local, align 4
  %v1_100058cc = add i32 %v2_100058c8, 88
  %v2_100058cc = inttoptr i32 %v1_100058cc to i32*
  %v3_100058cc = load i32, i32* %v2_100058cc, align 4
  %v3_100058d0 = lshr i32 %v3_100058cc, %v1_100058c4
  store i32 %v3_100058d0, i32* %r0.global-to-local, align 4
  %v1_100058d4 = urem i32 %v3_100058d0, 2
  store i32 %v1_100058d4, i32* %r9.global-to-local, align 4
  %v3_100058d4 = icmp eq i32 %v1_100058d4, 0
  br i1 %v3_100058d4, label %dec_label_pc_10005710, label %dec_label_pc_100058dc

dec_label_pc_100058dc:                            ; preds = %dec_label_pc_100058c0
  %v0_100058dc = load i32, i32* @r29, align 4
  %v6_100058dc = trunc i32 %v0_100058dc to i16
  store i16 %v6_100058dc, i16* %stack_var_-1608, align 2
  %v0_100058e0 = call i32 @function_10009c78()
  %v0_100058e4 = load i32, i32* @r29, align 4
  %v2_100058e4 = inttoptr i32 %v0_100058e0 to i32*
  store i32 %v0_100058e4, i32* %v2_100058e4, align 4
  store i32 %v0_100058e0, i32* @r26, align 4
  %v3_100058f4 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458240, i32* @lr, align 4
  %v4_100058fc = call i32 @function_1000a14c(i32 %v3_100058f4, i32 %v2_10005524, i32 2, i32 16386)
  %v3_10005900 = icmp eq i32 %v4_100058fc, -1
  br i1 %v3_10005900, label %dec_label_pc_10005ac4, label %dec_label_pc_10005908

dec_label_pc_10005908:                            ; preds = %dec_label_pc_100058dc
  %v3_10005908 = icmp eq i32 %v4_100058fc, 0
  br i1 %v3_10005908, label %dec_label_pc_10005948, label %dec_label_pc_10005910

dec_label_pc_10005910:                            ; preds = %dec_label_pc_10005908
  %v3_10005910 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005910 = sext i16 %v3_10005910 to i32
  %v4_10005914 = icmp eq i16 %v3_10005910, 0
  br i1 %v4_10005914, label %dec_label_pc_10005adc, label %dec_label_pc_1000591c

dec_label_pc_1000591c:                            ; preds = %dec_label_pc_10005910
  %v3_1000591c = icmp ugt i16 %v3_10005910, 1024
  br i1 %v3_1000591c, label %dec_label_pc_10005af4, label %dec_label_pc_10005924

dec_label_pc_10005924:                            ; preds = %dec_label_pc_1000591c
  %v0_10005924 = load i32, i32* @r29, align 4
  %v1_10005924 = load i32, i32* @r26, align 4
  %v2_10005924 = inttoptr i32 %v1_10005924 to i32*
  store i32 %v0_10005924, i32* %v2_10005924, align 4
  %v3_10005930 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458296, i32* @lr, align 4
  %v5_10005934 = call i32 @function_1000a14c(i32 %v3_10005930, i32 %v2_1000570c, i32 %v4_10005910, i32 16386)
  %v3_10005938 = icmp eq i32 %v5_10005934, -1
  br i1 %v3_10005938, label %dec_label_pc_10005ac4, label %dec_label_pc_10005940

dec_label_pc_10005940:                            ; preds = %dec_label_pc_10005924
  %v3_10005940 = icmp eq i32 %v5_10005934, 0
  br i1 %v3_10005940, label %dec_label_pc_10005948, label %dec_label_pc_10005b08

dec_label_pc_10005948:                            ; preds = %dec_label_pc_10005ad0, %dec_label_pc_10005940, %dec_label_pc_10005908
  %v3_10005948 = load i32, i32* @global_var_1001c67c.92, align 4
  %v3_1000594c = icmp eq i32 %v3_10005948, -1
  br i1 %v3_1000594c, label %dec_label_pc_10005958, label %dec_label_pc_10005954

dec_label_pc_10005954:                            ; preds = %dec_label_pc_10005948
  store i32 ptrtoint (i32* @global_var_10005958.95 to i32), i32* @lr, align 4
  %v0_10005954 = call i32 @function_1000955c()
  br label %dec_label_pc_10005958

dec_label_pc_10005958:                            ; preds = %dec_label_pc_10005948, %dec_label_pc_10005954
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c67c.92, align 4
  store i32 268458348, i32* @lr, align 4
  %v1_10005968 = call i32 @function_1000ad70(i32 1)
  br label %dec_label_pc_10005710

dec_label_pc_10005970:                            ; preds = %dec_label_pc_10005774
  store i32 268458368, i32* @lr, align 4
  %v3_1000597c = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  %v3_10005980 = icmp eq i32 %v3_1000597c, -1
  store i32 %v3_1000597c, i32* %r29.global-to-local, align 4
  store i32 %v3_1000597c, i32* @global_var_1001c67c.92, align 4
  br i1 %v3_10005980, label %dec_label_pc_10005784, label %dec_label_pc_10005990

dec_label_pc_10005990:                            ; preds = %dec_label_pc_10005970
  store i32 3, i32* @r4, align 4
  store i32 268458400, i32* @lr, align 4
  %v1_1000599c = call i32 @function_10009474(i32 3)
  store i32 4, i32* @r4, align 4
  %v0_100059a8 = load i32, i32* %r29.global-to-local, align 4
  store i32 268458420, i32* @lr, align 4
  %v2_100059b0 = call i32 @function_10009474(i32 %v0_100059a8)
  %v3_100059b4 = load i32, i32* @global_var_1001c680.69, align 4
  store i32 %v3_100059b4, i32* %r0.global-to-local, align 4
  %v3_100059b8 = icmp eq i32 %v3_100059b4, 0
  br i1 %v3_100059b8, label %dec_label_pc_100059c8, label %dec_label_pc_100059c0

dec_label_pc_100059c0:                            ; preds = %dec_label_pc_10005990
  store i32 %v3_100059b4, i32* %ctr.global-to-local, align 4
  store i32 268458440, i32* @lr, align 4
  %v2_100059c4 = call i32 @function_100090a0(i32 %v2_100059b0)
  br label %dec_label_pc_100059c8

dec_label_pc_100059c8:                            ; preds = %dec_label_pc_10005990, %dec_label_pc_100059c0
  %v3_100059c8 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i8 1, i8* bitcast (i16* @global_var_1001c6b4.93 to i8*), align 2
  store i32 268458464, i32* @lr, align 4
  %v3_100059dc = call i32 @function_1000a078(i32 %v3_100059c8, i32 ptrtoint (i32* @global_var_1001c778.70 to i32), i32 16)
  %v3_10005888.pre = load i32, i32* @global_var_1001c67c.92, align 4
  br label %dec_label_pc_10005784

dec_label_pc_100059e4:                            ; preds = %dec_label_pc_10005800
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100059ec = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458492, i32* @lr, align 4
  %v4_100059f8 = call i32 @function_1000a1c4(i32 %v3_100059ec, i32 %v2_10005524, i32 2, i32 16384)
  br label %dec_label_pc_1000582c

dec_label_pc_10005a00:                            ; preds = %dec_label_pc_10005838
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 0, i32* %stack_var_-1604, align 4
  store i32 4, i32* %stack_var_-1600, align 4
  store i32 268458532, i32* @lr, align 4
  %v5_10005a20 = call i32 @function_1000a0e0(i32 1, i32 4, i32 %v2_10005700, i32 %v2_10005704, i32 4)
  %v3_10005a24 = load i32, i32* %stack_var_-1604, align 4
  store i32 %v3_10005a24, i32* %r0.global-to-local, align 4
  %v3_10005a28 = icmp eq i32 %v3_10005a24, 0
  br i1 %v3_10005a28, label %dec_label_pc_10005a68, label %dec_label_pc_10005a30

dec_label_pc_10005a30:                            ; preds = %dec_label_pc_10005a00
  store i32 ptrtoint (i32* @global_var_10005a38.96 to i32), i32* @lr, align 4
  %v0_10005a34 = call i32 @function_1000955c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c67c.92, align 4
  %v0_10005a40 = call i32 @function_10005b48()
  %v1_10005a40 = sext i32 %v0_10005a40 to i64
  %v5_10005a4c = mul nuw nsw i64 %v1_10005a40, 3435973837
  %v1_10005a502 = udiv i64 %v5_10005a4c, 34359738368
  %v1_10005a50 = trunc i64 %v1_10005a502 to i32
  %v1_10005a54 = mul i32 %v1_10005a50, 10
  store i32 %v1_10005a54, i32* %r0.global-to-local, align 4
  %v3_10005a58 = sub i32 %v0_10005a40, %v1_10005a54
  %v1_10005a5c = add i32 %v3_10005a58, 1
  store i32 268458596, i32* @lr, align 4
  %v1_10005a60 = call i32 @function_1000ad70(i32 %v1_10005a5c)
  br label %dec_label_pc_10005710

dec_label_pc_10005a68:                            ; preds = %dec_label_pc_10005a00
  store i32 268458608, i32* @lr, align 4
  %v2_10005a6c = call i32 @function_10008d9c(i8* %v1_10005a6c)
  %v3_10005a6c = trunc i32 %v2_10005a6c to i8
  %v7_10005a70 = sext i8 %v3_10005a6c to i16
  store i16 %v7_10005a70, i16* %stack_var_-1608, align 2
  store i32 268458616, i32* @lr, align 4
  %v2_10005a74 = call i32 @function_100090a0(i32 %v2_10005a6c)
  store i32 %v2_10005a74, i32* @global_var_1001c6a0.16, align 4
  %v3_10005a80 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458640, i32* @lr, align 4
  %v4_10005a8c = call i32 @function_1000a1c4(i32 %v3_10005a80, i32 ptrtoint (i32* @global_var_1000bf70.98 to i32), i32 4, i32 16384)
  %v3_10005a90 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458660, i32* @lr, align 4
  %v4_10005aa0 = call i32 @function_1000a1c4(i32 %v3_10005a90, i32 %v2_10005524, i32 1, i32 16384)
  %v3_10005aa4 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005aa8 = icmp eq i16 %v3_10005aa4, 0
  br i1 %v4_10005aa8, label %dec_label_pc_10005710, label %dec_label_pc_10005ab0

dec_label_pc_10005ab0:                            ; preds = %dec_label_pc_10005a68
  %v4_10005aa4 = sext i16 %v3_10005aa4 to i32
  %v3_10005ab0 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458688, i32* @lr, align 4
  %v5_10005abc = call i32 @function_1000a1c4(i32 %v3_10005ab0, i32 %v2_10005440, i32 %v4_10005aa4, i32 16384)
  br label %dec_label_pc_10005710

dec_label_pc_10005ac4:                            ; preds = %dec_label_pc_10005924, %dec_label_pc_100058dc
  %v0_10005ac4 = load i32, i32* @r26, align 4
  %v1_10005ac4 = inttoptr i32 %v0_10005ac4 to i32*
  %v2_10005ac4 = load i32, i32* %v1_10005ac4, align 4
  %v3_10005ac8 = icmp eq i32 %v2_10005ac4, 11
  br i1 %v3_10005ac8, label %dec_label_pc_10005710, label %dec_label_pc_10005ad0

dec_label_pc_10005ad0:                            ; preds = %dec_label_pc_10005ac4
  %v3_10005ad0 = icmp eq i32 %v2_10005ac4, 4
  br i1 %v3_10005ad0, label %dec_label_pc_10005710, label %dec_label_pc_10005948

dec_label_pc_10005adc:                            ; preds = %dec_label_pc_10005910
  %v3_10005adc = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458736, i32* @lr, align 4
  %v4_10005aec = call i32 @function_1000a14c(i32 %v3_10005adc, i32 %v2_10005524, i32 2, i32 16384)
  br label %dec_label_pc_10005710

dec_label_pc_10005af4:                            ; preds = %dec_label_pc_1000591c
  store i32 ptrtoint (i32* @global_var_10005afc.99 to i32), i32* @lr, align 4
  %v0_10005af8 = call i32 @function_1000955c()
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 -1, i32* @global_var_1001c67c.92, align 4
  br label %dec_label_pc_10005710

dec_label_pc_10005b08:                            ; preds = %dec_label_pc_10005940
  %v3_10005b08 = load i32, i32* @global_var_1001c67c.92, align 4
  store i32 268458780, i32* @lr, align 4
  %v4_10005b18 = call i32 @function_1000a14c(i32 %v3_10005b08, i32 %v2_10005524, i32 2, i32 16384)
  %v3_10005b1c = load i32, i32* @global_var_1001c67c.92, align 4
  %v3_10005b20 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005b20 = sext i16 %v3_10005b20 to i32
  store i32 268458800, i32* @lr, align 4
  %v5_10005b2c = call i32 @function_1000a14c(i32 %v3_10005b1c, i32 %v2_1000570c, i32 %v4_10005b20, i32 16384)
  %v3_10005b30 = load i16, i16* %stack_var_-1608, align 2
  %v4_10005b34 = icmp eq i16 %v3_10005b30, 0
  br i1 %v4_10005b34, label %dec_label_pc_10005710, label %dec_label_pc_10005b3c

dec_label_pc_10005b3c:                            ; preds = %dec_label_pc_10005b08
  %v4_10005b30 = sext i16 %v3_10005b30 to i32
  store i32 268458820, i32* @lr, align 4
  %v3_10005b40 = call i32 @function_10000394(i32 %v2_1000570c, i32 %v4_10005b30)
  br label %dec_label_pc_10005710

; uselistorder directives
  uselistorder i16 %v3_10005b30, { 1, 0 }
  uselistorder i16 %v3_10005aa4, { 1, 0 }
  uselistorder i32 %v3_1000597c, { 1, 0, 2 }
  uselistorder i32 %v1_100058d4, { 1, 0 }
  uselistorder i32 %v3_100058b0, { 0, 2, 5, 3, 1, 4 }
  uselistorder i32 %v2_10005814, { 1, 0, 2 }
  uselistorder i32 %v0_10005804, { 2, 0, 1 }
  uselistorder i32 %v2_10005898, { 1, 0 }
  uselistorder i32 %v1_10005744, { 1, 0 }
  uselistorder i32 %v1_10005740, { 1, 0 }
  uselistorder i32 %v1_10005728, { 1, 0 }
  uselistorder i32 %v1_10005724, { 1, 0 }
  uselistorder i32 %v2_1000570c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_100055a8, { 1, 0 }
  uselistorder i32 %v2_1000554c, { 1, 0 }
  uselistorder i32 %v2_10005524, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v1_100054c4, { 1, 0 }
  uselistorder i32 %v2_10005418, { 1, 3, 2, 0 }
  uselistorder i32 %v2_100053e4, { 1, 2, 0 }
  uselistorder i32 %v0_10005328, { 3, 1, 0, 2 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-1552, { 1, 0, 2 }
  uselistorder i16* %stack_var_-1608, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %stack_var_-1596, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 20, 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 18, 19, 8, 9, 10, 16, 17, 11, 12, 13, 14, 15 }
  uselistorder i32* %r29.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r16.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r15.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r14.global-to-local, { 3, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 3, 4, 5, 6, 7, 0, 1, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %ctr.global-to-local, { 10, 0, 8, 9, 1, 2, 3, 6, 7, 4, 5 }
  uselistorder i8* bitcast (i16* @global_var_1001c6b4.93 to i8*), { 3, 2, 1, 0 }
  uselistorder i32* @global_var_1001c67c.92, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19 }
  uselistorder i32 (i32)* @function_10005318, { 1, 0 }
  uselistorder i32 (i32)* @function_10004aec, { 1, 0 }
  uselistorder i32 (i32)* @function_1000072c, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_100099bc, { 1, 0 }
  uselistorder i32* @global_var_1001c778.70, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000a324, { 1, 0 }
  uselistorder i32 (i32)* @function_1000ad70, { 2, 1, 8, 7, 6, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_100059c8, { 1, 0 }
  uselistorder label %dec_label_pc_10005958, { 1, 0 }
  uselistorder label %dec_label_pc_10005874, { 1, 0 }
  uselistorder label %dec_label_pc_1000582c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100057c8, { 1, 0 }
  uselistorder label %dec_label_pc_10005784, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005774, { 1, 0 }
  uselistorder label %dec_label_pc_1000573c.dec_label_pc_1000573c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005720.dec_label_pc_10005720_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10005710, { 8, 2, 9, 10, 0, 3, 11, 4, 12, 13, 5, 6, 7, 1, 14 }
  uselistorder label %dec_label_pc_10005514, { 2, 0, 1 }
}

define i32 @function_10005b48() local_unnamed_addr {
dec_label_pc_10005b48:
  %v3_10005b50 = load i32, i32* @global_var_1001c734.100, align 4
  %v3_10005b58 = load i32, i32* @global_var_1001c728.101, align 4
  %v1_10005b60 = udiv i32 %v3_10005b50, 524288
  %v3_10005b64 = load i32, i32* @global_var_1001c730.102, align 4
  %v1_10005b68 = mul i32 %v3_10005b58, 2048
  %v2_10005b6c = xor i32 %v1_10005b60, %v3_10005b50
  %v2_10005b70 = xor i32 %v1_10005b68, %v3_10005b58
  %v3_10005b74 = load i32, i32* @global_var_1001c72c.103, align 4
  %v2_10005b78 = xor i32 %v2_10005b6c, %v2_10005b70
  %v1_10005b7c = udiv i32 %v2_10005b70, 256
  %v2_10005b80 = xor i32 %v2_10005b78, %v1_10005b7c
  store i32 %v3_10005b74, i32* @global_var_1001c728.101, align 4
  store i32 %v3_10005b64, i32* @global_var_1001c72c.103, align 4
  store i32 %v3_10005b50, i32* @global_var_1001c730.102, align 4
  store i32 %v2_10005b80, i32* @global_var_1001c734.100, align 4
  ret i32 %v2_10005b80

; uselistorder directives
  uselistorder i32 %v2_10005b80, { 1, 0 }
  uselistorder i32 %v3_10005b58, { 1, 0 }
  uselistorder i32 %v3_10005b50, { 2, 1, 0 }
}

define i32 @function_10005b98(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005b98:
  store i32 268458936, i32* @lr, align 4
  %v0_10005bb4 = call i32 @function_1000992c()
  store i32 %v0_10005bb4, i32* @global_var_1001c728.101, align 4
  store i32 268458948, i32* @lr, align 4
  %v0_10005bc0 = call i32 @function_100095ec()
  store i32 268458956, i32* @lr, align 4
  %v0_10005bc8 = call i32 @function_10009634()
  %v2_10005bcc = xor i32 %v0_10005bc0, %v0_10005bc8
  store i32 %v2_10005bcc, i32* @global_var_1001c72c.103, align 4
  store i32 268458968, i32* @lr, align 4
  %v1_10005bd4 = call i32 @function_10009c84(i32 %v0_10005bc8)
  %v3_10005bd8 = load i32, i32* @global_var_1001c72c.103, align 4
  %v2_10005be8 = xor i32 %v3_10005bd8, %v1_10005bd4
  store i32 %v2_10005be8, i32* @global_var_1001c734.100, align 4
  store i32 %v1_10005bd4, i32* @global_var_1001c730.102, align 4
  ret i32 %v1_10005bd4

; uselistorder directives
  uselistorder i32 %v1_10005bd4, { 2, 1, 0 }
  uselistorder i32 %v0_10005bc8, { 1, 0 }
  uselistorder i32 ()* @function_10009634, { 1, 2, 0 }
}

define i32 @function_10005c08(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005c08:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-72 = alloca i32, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v2_10005c24 = ptrtoint i32* %stack_var_-72 to i32
  store i32 268459080, i32* @lr, align 4
  %v1_10005c44 = call i32 @function_10008820(i32 28)
  %v3_10005c50 = call i32 @function_1000876c(i32 28, i32* null)
  %v2_10005c5c = inttoptr i32 %v3_10005c50 to i8*
  %v3_10005c5c = call i32 @function_10009df0(i32 %v2_10005c24, i8* %v2_10005c5c)
  %v3_10005c60 = icmp eq i32 %arg2, 0
  br i1 %v3_10005c60, label %dec_label_pc_10005ce4, label %dec_label_pc_10005c68

dec_label_pc_10005c68:                            ; preds = %dec_label_pc_10005c08
  %v1_10005c68 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005c68 = add i32 %v1_10005c68, %arg2
  store i32 %v2_10005c68, i32* %r26.global-to-local, align 4
  %v1_10005cbc = bitcast i32* %stack_var_-72 to i8*
  br label %dec_label_pc_10005c7c

dec_label_pc_10005c7c:                            ; preds = %dec_label_pc_10005c7c, %dec_label_pc_10005c68
  %v3_10005c7c = load i32, i32* @global_var_1001c734.100, align 4
  %v3_10005c84 = load i32, i32* @global_var_1001c728.101, align 4
  %v1_10005c88 = udiv i32 %v3_10005c7c, 524288
  %v3_10005c8c = load i32, i32* @global_var_1001c730.102, align 4
  %v1_10005c90 = mul i32 %v3_10005c84, 2048
  %v2_10005c94 = xor i32 %v1_10005c88, %v3_10005c7c
  %v2_10005c98 = xor i32 %v1_10005c90, %v3_10005c84
  %v3_10005c9c = load i32, i32* @global_var_1001c72c.103, align 4
  %v2_10005ca0 = xor i32 %v2_10005c94, %v2_10005c98
  %v1_10005ca4 = udiv i32 %v2_10005c98, 256
  %v2_10005ca8 = xor i32 %v2_10005ca0, %v1_10005ca4
  store i32 %v2_10005ca8, i32* %r29.global-to-local, align 4
  store i32 %v3_10005c9c, i32* @global_var_1001c728.101, align 4
  store i32 %v2_10005ca8, i32* @global_var_1001c734.100, align 4
  store i32 %v3_10005c8c, i32* @global_var_1001c72c.103, align 4
  store i32 %v3_10005c7c, i32* @global_var_1001c730.102, align 4
  store i32 268459200, i32* @lr, align 4
  %v2_10005cbc = call i32 @function_10008d9c(i8* %v1_10005cbc)
  %v0_10005cc0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10005cc0 = urem i32 %v0_10005cc0, %v2_10005cbc
  store i32 %v2_10005cc0, i32* %r29.global-to-local, align 4
  %v0_10005ccc = load i32, i32* @r1, align 4
  %v2_10005ccc = add i32 %v0_10005ccc, %v2_10005cc0
  %v1_10005cd0 = add i32 %v2_10005ccc, 8
  %v2_10005cd0 = inttoptr i32 %v1_10005cd0 to i8*
  %v3_10005cd0 = load i8, i8* %v2_10005cd0, align 1
  %v2_10005cd4 = load i32, i32* %r31.global-to-local, align 4
  %v3_10005cd4 = inttoptr i32 %v2_10005cd4 to i8*
  store i8 %v3_10005cd0, i8* %v3_10005cd4, align 1
  %v0_10005cd8 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005cd8 = add i32 %v0_10005cd8, 1
  store i32 %v1_10005cd8, i32* %r31.global-to-local, align 4
  %v1_10005cdc = load i32, i32* %r26.global-to-local, align 4
  %v4_10005cdc = icmp eq i32 %v1_10005cd8, %v1_10005cdc
  br i1 %v4_10005cdc, label %dec_label_pc_10005ce4, label %dec_label_pc_10005c7c

dec_label_pc_10005ce4:                            ; preds = %dec_label_pc_10005c7c, %dec_label_pc_10005c08
  store i32 268459244, i32* @lr, align 4
  %v1_10005ce8 = call i32 @function_10008794(i32 28)
  ret i32 %v1_10005ce8

; uselistorder directives
  uselistorder i32 %v3_10005c84, { 1, 0 }
  uselistorder i32 %v3_10005c7c, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_10008794, { 2, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32*)* @function_1000876c, { 22, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25 }
  uselistorder i32 (i32)* @function_10008820, { 3, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_10005d1c() local_unnamed_addr {
dec_label_pc_10005d1c:
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %v0_10005d1c = load i32, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_10005d1c, 1
  br i1 %tmp19, label %dec_label_pc_10005d1c.dec_label_pc_10005dd0_crit_edge, label %dec_label_pc_10005d34

dec_label_pc_10005d1c.dec_label_pc_10005dd0_crit_edge: ; preds = %dec_label_pc_10005d1c
  %v0_10005de0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005dd0

dec_label_pc_10005d34:                            ; preds = %dec_label_pc_10005d1c
  %v3_10005d44 = load i32, i32* @global_var_1001c734.100, align 4
  store i32 %v3_10005d44, i32* %r7.global-to-local, align 4
  %v3_10005d48 = load i32, i32* @global_var_1001c730.102, align 4
  store i32 %v3_10005d48, i32* %r5.global-to-local, align 4
  %v3_10005d4c = load i32, i32* @global_var_1001c72c.103, align 4
  store i32 %v3_10005d4c, i32* %r6.global-to-local, align 4
  %v3_10005d50 = load i32, i32* @global_var_1001c728.101, align 4
  br label %dec_label_pc_10005d7c

dec_label_pc_10005d58:                            ; preds = %dec_label_pc_10005d7c
  %v1_10005d58 = load i32, i32* @r3, align 4
  %v2_10005d58 = inttoptr i32 %v1_10005d58 to i32*
  store i32 %v2_10005da0, i32* %v2_10005d58, align 4
  %v0_10005d5c = load i32, i32* @r4, align 4
  %v1_10005d5c = add i32 %v0_10005d5c, -4
  store i32 %v1_10005d5c, i32* @r4, align 4
  %v0_10005d60 = load i32, i32* @r3, align 4
  %v1_10005d60 = add i32 %v0_10005d60, 4
  br label %dec_label_pc_10005d64

dec_label_pc_10005d64:                            ; preds = %dec_label_pc_10005db4, %dec_label_pc_10005d58
  %v0_10005d64 = phi i32 [ %v0_10005d64.pr, %dec_label_pc_10005db4 ], [ %v1_10005d5c, %dec_label_pc_10005d58 ]
  %storemerge = phi i32 [ %v1_10005db8, %dec_label_pc_10005db4 ], [ %v1_10005d60, %dec_label_pc_10005d58 ]
  store i32 %storemerge, i32* @r3, align 4
  %v0_10005d68 = load i32, i32* %r6.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10005d64, 1
  br i1 %tmp20, label %dec_label_pc_10005dc0, label %dec_label_pc_10005d70

dec_label_pc_10005d70:                            ; preds = %dec_label_pc_10005d64
  %v0_10005d70 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005d70, i32* %r6.global-to-local, align 4
  %v0_10005d74 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005d74, i32* %r5.global-to-local, align 4
  %v0_10005d78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005d78, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10005d7c

dec_label_pc_10005d7c:                            ; preds = %dec_label_pc_10005d34, %dec_label_pc_10005d70
  %v0_10005e1c = phi i32 [ %v3_10005d4c, %dec_label_pc_10005d34 ], [ %v0_10005d70, %dec_label_pc_10005d70 ]
  %v0_10005e00 = phi i32 [ %v3_10005d48, %dec_label_pc_10005d34 ], [ %v0_10005d74, %dec_label_pc_10005d70 ]
  %v0_10005e04 = phi i32 [ %v3_10005d44, %dec_label_pc_10005d34 ], [ %v0_10005d78, %dec_label_pc_10005d70 ]
  %v0_10005de4 = phi i32 [ %v3_10005d50, %dec_label_pc_10005d34 ], [ %v0_10005d68, %dec_label_pc_10005d70 ]
  %v0_10005dac = phi i32 [ %v0_10005d1c, %dec_label_pc_10005d34 ], [ %v0_10005d64, %dec_label_pc_10005d70 ]
  %v2_10005d7c = icmp sgt i32 %v0_10005dac, 3
  %v1_10005d80 = mul i32 %v0_10005de4, 2048
  %v1_10005d84 = udiv i32 %v0_10005e04, 524288
  %v2_10005d88 = xor i32 %v1_10005d80, %v0_10005de4
  %v2_10005d8c = xor i32 %v1_10005d84, %v0_10005e04
  %v2_10005d94 = xor i32 %v2_10005d8c, %v2_10005d88
  %v1_10005d98 = udiv i32 %v2_10005d88, 256
  %v2_10005da0 = xor i32 %v2_10005d94, %v1_10005d98
  store i32 %v2_10005da0, i32* %r0.global-to-local, align 4
  br i1 %v2_10005d7c, label %dec_label_pc_10005d58, label %dec_label_pc_10005da8

dec_label_pc_10005da8:                            ; preds = %dec_label_pc_10005d7c
  %v3_10005d90 = icmp eq i32 %v0_10005dac, 1
  store i32 %v2_10005da0, i32* %r0.global-to-local, align 4
  %v1_10005dac = add i32 %v0_10005dac, -2
  store i32 %v1_10005dac, i32* @r4, align 4
  br i1 %v3_10005d90, label %dec_label_pc_10005de4, label %dec_label_pc_10005db4

dec_label_pc_10005db4:                            ; preds = %dec_label_pc_10005da8
  %v1_10005db4 = trunc i32 %v2_10005da0 to i16
  %v2_10005db4 = load i32, i32* @r3, align 4
  %v3_10005db4 = inttoptr i32 %v2_10005db4 to i16*
  store i16 %v1_10005db4, i16* %v3_10005db4, align 2
  %v0_10005db8 = load i32, i32* @r3, align 4
  %v1_10005db8 = add i32 %v0_10005db8, 2
  %v0_10005d64.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_10005d64

dec_label_pc_10005dc0:                            ; preds = %dec_label_pc_10005d64
  %v0_10005dc0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10005dc0, i32* @global_var_1001c734.100, align 4
  %v0_10005dc4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10005dc4, i32* @global_var_1001c730.102, align 4
  %v0_10005dc8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10005dc8, i32* @global_var_1001c72c.103, align 4
  store i32 %v0_10005d68, i32* @global_var_1001c728.101, align 4
  br label %dec_label_pc_10005dd0

dec_label_pc_10005dd0:                            ; preds = %dec_label_pc_10005d1c.dec_label_pc_10005dd0_crit_edge, %dec_label_pc_10005dc0
  %v0_10005de0 = phi i32 [ %v0_10005de0.pre, %dec_label_pc_10005d1c.dec_label_pc_10005dd0_crit_edge ], [ %storemerge, %dec_label_pc_10005dc0 ]
  ret i32 %v0_10005de0

dec_label_pc_10005de4:                            ; preds = %dec_label_pc_10005da8
  store i32 %v2_10005da0, i32* %r0.global-to-local, align 4
  store i32 %v0_10005e00, i32* @global_var_1001c72c.103, align 4
  store i32 %v0_10005e04, i32* @global_var_1001c730.102, align 4
  store i32 %v2_10005da0, i32* @global_var_1001c734.100, align 4
  store i32 %v0_10005e1c, i32* @global_var_1001c728.101, align 4
  %v1_10005e20 = trunc i32 %v2_10005da0 to i8
  %v2_10005e20 = load i32, i32* @r3, align 4
  %v3_10005e20 = inttoptr i32 %v2_10005e20 to i8*
  store i8 %v1_10005e20, i8* %v3_10005e20, align 1
  %v0_10005e24 = load i32, i32* @r3, align 4
  ret i32 %v0_10005e24

; uselistorder directives
  uselistorder i32 %v2_10005da0, { 2, 1, 0, 3, 4, 6, 5 }
  uselistorder i32 %v0_10005de4, { 1, 0 }
  uselistorder i32 %v0_10005e04, { 1, 2, 0 }
  uselistorder i32 %v0_10005d1c, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 4, 2 }
  uselistorder label %dec_label_pc_10005dd0, { 1, 0 }
  uselistorder label %dec_label_pc_10005d7c, { 1, 0 }
}

define i32 @function_10005e28() local_unnamed_addr {
dec_label_pc_10005e28:
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10005e30 = load i32, i32* @r31, align 4
  %v0_10005e34 = load i32, i32* @r3, align 4
  store i32 %v0_10005e34, i32* @r31, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_10005e44 = add i32 %v0_10005e34, 4
  %v2_10005e44 = inttoptr i32 %v1_10005e44 to i32*
  %v3_10005e44 = load i32, i32* %v2_10005e44, align 4
  store i32 0, i32* %stack_var_-40, align 4
  %v3_10005e4c = icmp eq i32 %v3_10005e44, -1
  br i1 %v3_10005e4c, label %dec_label_pc_10005e64, label %dec_label_pc_10005e60

dec_label_pc_10005e60:                            ; preds = %dec_label_pc_10005e28
  store i32 268459620, i32* @lr, align 4
  %v0_10005e60 = call i32 @function_1000955c()
  br label %dec_label_pc_10005e64

dec_label_pc_10005e64:                            ; preds = %dec_label_pc_10005e28, %dec_label_pc_10005e60
  store i32 268459636, i32* @lr, align 4
  %v3_10005e70 = call i32 @function_1000a278(i32 2, i32 1, i32 0)
  store i32 256, i32* @r4, align 4
  %v0_10005e7c = load i32, i32* @r31, align 4
  %v1_10005e7c = add i32 %v0_10005e7c, 28
  store i32 %v1_10005e7c, i32* @r3, align 4
  %v3_10005e80 = icmp eq i32 %v3_10005e70, -1
  %v2_10005e84 = add i32 %v0_10005e7c, 4
  %v3_10005e84 = inttoptr i32 %v2_10005e84 to i32*
  store i32 %v3_10005e70, i32* %v3_10005e84, align 4
  br i1 %v3_10005e80, label %dec_label_pc_10005e64.dec_label_pc_10005efc_crit_edge, label %dec_label_pc_10005e8c

dec_label_pc_10005e64.dec_label_pc_10005efc_crit_edge: ; preds = %dec_label_pc_10005e64
  %v0_10005f10.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005efc

dec_label_pc_10005e8c:                            ; preds = %dec_label_pc_10005e64
  %v0_10005e8c = load i32, i32* %r29.global-to-local, align 4
  %v1_10005e8c = load i32, i32* @r31, align 4
  %v2_10005e8c = add i32 %v1_10005e8c, 24
  %v3_10005e8c = inttoptr i32 %v2_10005e8c to i32*
  store i32 %v0_10005e8c, i32* %v3_10005e8c, align 4
  store i32 268459668, i32* @lr, align 4
  %v0_10005e90 = call i32 @function_10008e44()
  %v0_10005e94 = load i32, i32* @r31, align 4
  %v1_10005e94 = add i32 %v0_10005e94, 4
  %v2_10005e94 = inttoptr i32 %v1_10005e94 to i32*
  %v3_10005e94 = load i32, i32* %v2_10005e94, align 4
  store i32 %v3_10005e94, i32* %r29.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 268459692, i32* @lr, align 4
  %v2_10005ea8 = call i32 @function_10009474(i32 %v3_10005e94)
  store i32 4, i32* @r4, align 4
  store i32 268459712, i32* @lr, align 4
  %v2_10005ebc = call i32 @function_10009474(i32 %v3_10005e94)
  %v3_10005ec4 = load i32, i32* @global_var_1001c6c4.104, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10005ecc = load i32, i32* @r31, align 4
  %v2_10005ed0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_10005ed4 = add i32 %v0_10005ecc, 8
  %v3_10005ed4 = inttoptr i32 %v2_10005ed4 to i32*
  store i32 %v3_10005ec4, i32* %v3_10005ed4, align 4
  %v0_10005edc = load i32, i32* %r9.global-to-local, align 4
  %v1_10005edc = load i32, i32* @r31, align 4
  %v2_10005edc = add i32 %v1_10005edc, 12
  %v3_10005edc = inttoptr i32 %v2_10005edc to i32*
  store i32 %v0_10005edc, i32* %v3_10005edc, align 4
  %v0_10005ee4 = load i32, i32* @r31, align 4
  %v1_10005ee4 = add i32 %v0_10005ee4, 4
  %v2_10005ee4 = inttoptr i32 %v1_10005ee4 to i32*
  %v3_10005ee4 = load i32, i32* %v2_10005ee4, align 4
  %v1_10005ee8 = add i32 %v0_10005ee4, 16
  %v2_10005ee8 = inttoptr i32 %v1_10005ee8 to i32*
  %v3_10005ee8 = load i32, i32* %v2_10005ee8, align 4
  store i32 %v3_10005ee8, i32* %r9.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  store i32 268459772, i32* @lr, align 4
  %v3_10005ef8 = call i32 @function_1000a078(i32 %v3_10005ee4, i32 %v2_10005ed0, i32 16)
  br label %dec_label_pc_10005efc

dec_label_pc_10005efc:                            ; preds = %dec_label_pc_10005e64.dec_label_pc_10005efc_crit_edge, %dec_label_pc_10005e8c
  %v0_10005f10 = phi i32 [ %v0_10005f10.pre, %dec_label_pc_10005e64.dec_label_pc_10005efc_crit_edge ], [ %v3_10005ef8, %dec_label_pc_10005e8c ]
  store i32 %v0_10005e30, i32* @r31, align 4
  ret i32 %v0_10005f10

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 0, 2, 1 }
  uselistorder i32 ()* @function_10008e44, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10005efc, { 1, 0 }
  uselistorder label %dec_label_pc_10005e64, { 1, 0 }
}

define i32 @function_10005f14(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10005f14:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10005f18 = load i32, i32* @lr, align 4
  store i32 %v0_10005f18, i32* %r0.global-to-local, align 4
  %v3_10005f24 = load i32, i32* @global_var_1001c6b8.105, align 4
  %v1_10005f30 = mul i32 %v3_10005f24, 16
  store i32 %v1_10005f30, i32* %r9.global-to-local, align 4
  %v0_10005f34 = load i32, i32* @r28, align 4
  %v3_10005f3c = load i32, i32* @global_var_1001c6bc.106, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  %v1_10005f48 = add i32 %v1_10005f30, 16
  %v0_10005f60 = load i32, i32* @r29, align 4
  %v0_10005f64 = load i32, i32* @r30, align 4
  store i32 268459888, i32* @lr, align 4
  %v3_10005f6c = call i32 @function_1000a744(i32 %v3_10005f3c, i32 %v1_10005f48, i32 %v1_10005f30)
  store i32 %v3_10005f6c, i32* %r25.global-to-local, align 4
  %v0_10005f74 = load i32, i32* @r28, align 4
  store i32 %v3_10005f6c, i32* @global_var_1001c6bc.106, align 4
  %v3_10005f7c = load i32, i32* @global_var_1001c6b8.105, align 4
  store i32 %v3_10005f7c, i32* %r24.global-to-local, align 4
  store i32 268459908, i32* @lr, align 4
  %v1_10005f80 = inttoptr i32 %v0_10005f74 to i8*
  %v2_10005f80 = call i32 @function_10008d9c(i8* %v1_10005f80)
  %sext = mul i32 %v2_10005f80, 16777216
  %v1_10005f84 = sdiv i32 %sext, 16777216
  %v2_10005f84 = add nsw i32 %v1_10005f84, 1
  store i32 %v2_10005f84, i32* @r29, align 4
  store i32 %v1_10005f84, i32* @r30, align 4
  store i32 %v2_10005f84, i32* @r3, align 4
  store i32 268459924, i32* @lr, align 4
  %v0_10005f90 = call i32 @function_1000a47c()
  %v0_10005f94 = load i32, i32* @r28, align 4
  %v0_10005f98 = load i32, i32* @r29, align 4
  store i32 %v0_10005f90, i32* %r31.global-to-local, align 4
  store i32 268459940, i32* @lr, align 4
  %v3_10005fa0 = call i32 @function_10008e20(i32 %v0_10005f94, i32 %v0_10005f98, i32 %v0_10005f98)
  %v0_10005fa4 = load i32, i32* @r30, align 4
  %tmp21 = icmp slt i32 %v0_10005fa4, 1
  %extract.t6 = trunc i32 %v0_10005fa4 to i8
  br i1 %tmp21, label %dec_label_pc_10005fc8, label %dec_label_pc_10005fac

dec_label_pc_10005fac:                            ; preds = %dec_label_pc_10005f14
  store i32 %v0_10005fa4, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10005fb4

dec_label_pc_10005fb4:                            ; preds = %dec_label_pc_10005fb4, %dec_label_pc_10005fac
  %v1_10005fbc = phi i32 [ %v1_10005fc0, %dec_label_pc_10005fb4 ], [ 0, %dec_label_pc_10005fac ]
  %v1_10005fb4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10005fb4 = add i32 %v1_10005fb4, %v1_10005fbc
  %v3_10005fb4 = inttoptr i32 %v2_10005fb4 to i8*
  %v4_10005fb4 = load i8, i8* %v3_10005fb4, align 1
  %v5_10005fb4 = zext i8 %v4_10005fb4 to i32
  %v1_10005fb8 = xor i32 %v5_10005fb4, 84
  store i32 %v1_10005fb8, i32* %r0.global-to-local, align 4
  %v3_10005fbc = trunc i32 %v1_10005fb8 to i8
  store i8 %v3_10005fbc, i8* %v3_10005fb4, align 1
  %v0_10005fc0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10005fc0 = add i32 %v0_10005fc0, 1
  store i32 %v1_10005fc0, i32* %r9.global-to-local, align 4
  %v0_10005fc4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10005fc4 = add i32 %v0_10005fc4, -1
  store i32 %v1_10005fc4, i32* %ctr.global-to-local, align 4
  %v2_10005fc4 = icmp eq i32 %v1_10005fc4, 0
  br i1 %v2_10005fc4, label %dec_label_pc_10005fc8.loopexit, label %dec_label_pc_10005fb4

dec_label_pc_10005fc8.loopexit:                   ; preds = %dec_label_pc_10005fb4
  %v0_10005fe0.pre = load i32, i32* @r30, align 4
  %extract.t = trunc i32 %v0_10005fe0.pre to i8
  br label %dec_label_pc_10005fc8

dec_label_pc_10005fc8:                            ; preds = %dec_label_pc_10005fc8.loopexit, %dec_label_pc_10005f14
  %v0_10005fe0.off0 = phi i8 [ %extract.t, %dec_label_pc_10005fc8.loopexit ], [ %extract.t6, %dec_label_pc_10005f14 ]
  %v3_10005fc8 = load i32, i32* @global_var_1001c6b8.105, align 4
  %v0_10005fcc = load i32, i32* %r23.global-to-local, align 4
  %v3_10005fd0 = load i32, i32* @global_var_1001c6bc.106, align 4
  %v1_10005fd4 = mul i32 %v3_10005fc8, 16
  %v2_10005fd8 = add i32 %v3_10005fd0, %v1_10005fd4
  store i32 %v2_10005fd8, i32* %r9.global-to-local, align 4
  %v0_10005fdc = load i32, i32* %r24.global-to-local, align 4
  %v1_10005fdc = mul i32 %v0_10005fdc, 16
  store i32 %v1_10005fdc, i32* %r0.global-to-local, align 4
  %v3_10005fe0 = add i32 %v2_10005fd8, 12
  %v4_10005fe0 = inttoptr i32 %v3_10005fe0 to i8*
  store i8 %v0_10005fe0.off0, i8* %v4_10005fe0, align 1
  %v0_10005fe4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10005fe4 = load i32, i32* %r25.global-to-local, align 4
  %v2_10005fe4 = load i32, i32* %r0.global-to-local, align 4
  %v3_10005fe4 = add i32 %v2_10005fe4, %v1_10005fe4
  %v4_10005fe4 = inttoptr i32 %v3_10005fe4 to i32*
  store i32 %v0_10005fe4, i32* %v4_10005fe4, align 4
  %v3_10005fe8 = load i32, i32* @global_var_1001c6b8.105, align 4
  store i32 %v3_10005fe8, i32* @r30, align 4
  %v3_10005fec = load i32, i32* @global_var_1001c6bc.106, align 4
  store i32 %v3_10005fec, i32* %r25.global-to-local, align 4
  store i32 268460020, i32* @lr, align 4
  %v1_10005ff0 = inttoptr i32 %v0_10005fcc to i8*
  %v2_10005ff0 = call i32 @function_10008d9c(i8* %v1_10005ff0)
  %sext1 = mul i32 %v2_10005ff0, 16777216
  %v1_10005ff4 = sdiv i32 %sext1, 16777216
  %v2_10005ff4 = add nsw i32 %v1_10005ff4, 1
  store i32 %v2_10005ff4, i32* @r29, align 4
  store i32 %v1_10005ff4, i32* @r28, align 4
  store i32 %v2_10005ff4, i32* @r3, align 4
  store i32 268460036, i32* @lr, align 4
  %v0_10006000 = call i32 @function_1000a47c()
  %v0_10006004 = load i32, i32* %r23.global-to-local, align 4
  %v0_10006008 = load i32, i32* @r29, align 4
  store i32 %v0_10006000, i32* %r31.global-to-local, align 4
  store i32 268460052, i32* @lr, align 4
  %v3_10006010 = call i32 @function_10008e20(i32 %v0_10006004, i32 %v0_10006008, i32 %v0_10006008)
  %v0_10006014 = load i32, i32* @r28, align 4
  %tmp22 = icmp slt i32 %v0_10006014, 1
  %extract.t8 = trunc i32 %v0_10006014 to i8
  br i1 %tmp22, label %dec_label_pc_10006038, label %dec_label_pc_1000601c

dec_label_pc_1000601c:                            ; preds = %dec_label_pc_10005fc8
  store i32 %v0_10006014, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006024

dec_label_pc_10006024:                            ; preds = %dec_label_pc_10006024, %dec_label_pc_1000601c
  %v1_1000602c = phi i32 [ %v1_10006030, %dec_label_pc_10006024 ], [ 0, %dec_label_pc_1000601c ]
  %v1_10006024 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006024 = add i32 %v1_10006024, %v1_1000602c
  %v3_10006024 = inttoptr i32 %v2_10006024 to i8*
  %v4_10006024 = load i8, i8* %v3_10006024, align 1
  %v5_10006024 = zext i8 %v4_10006024 to i32
  %v1_10006028 = xor i32 %v5_10006024, 84
  store i32 %v1_10006028, i32* %r0.global-to-local, align 4
  %v3_1000602c = trunc i32 %v1_10006028 to i8
  store i8 %v3_1000602c, i8* %v3_10006024, align 1
  %v0_10006030 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006030 = add i32 %v0_10006030, 1
  store i32 %v1_10006030, i32* %r9.global-to-local, align 4
  %v0_10006034 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006034 = add i32 %v0_10006034, -1
  store i32 %v1_10006034, i32* %ctr.global-to-local, align 4
  %v2_10006034 = icmp eq i32 %v1_10006034, 0
  br i1 %v2_10006034, label %dec_label_pc_10006038.loopexit, label %dec_label_pc_10006024

dec_label_pc_10006038.loopexit:                   ; preds = %dec_label_pc_10006024
  %v0_1000604c.pre = load i32, i32* @r28, align 4
  %extract.t7 = trunc i32 %v0_1000604c.pre to i8
  br label %dec_label_pc_10006038

dec_label_pc_10006038:                            ; preds = %dec_label_pc_10006038.loopexit, %dec_label_pc_10005fc8
  %v0_1000604c.off0 = phi i8 [ %extract.t7, %dec_label_pc_10006038.loopexit ], [ %extract.t8, %dec_label_pc_10005fc8 ]
  %v3_10006038 = load i32, i32* @global_var_1001c6b8.105, align 4
  %v3_10006040 = load i32, i32* @global_var_1001c6bc.106, align 4
  %v1_10006044 = mul i32 %v3_10006038, 16
  %v2_10006048 = or i32 %v1_10006044, 13
  %v3_1000604c = add i32 %v2_10006048, %v3_10006040
  %v4_1000604c = inttoptr i32 %v3_1000604c to i8*
  store i8 %v0_1000604c.off0, i8* %v4_1000604c, align 1
  %v0_10006050 = load i32, i32* @r30, align 4
  %v1_10006050 = mul i32 %v0_10006050, 16
  %v1_10006054 = load i32, i32* %r25.global-to-local, align 4
  %v2_10006054 = add i32 %v1_10006054, %v1_10006050
  store i32 %v2_10006054, i32* %r9.global-to-local, align 4
  %v3_10006058 = load i32, i32* @global_var_1001c6b8.105, align 4
  %v3_1000605c = load i32, i32* @global_var_1001c6bc.106, align 4
  %v1_10006060 = mul i32 %v3_10006058, 16
  %v3_10006064 = load i16, i16* @global_var_1001c6c0.107, align 2
  %v4_10006064 = zext i16 %v3_10006064 to i32
  store i32 %v4_10006064, i32* %r7.global-to-local, align 4
  %v2_10006068 = add i32 %v3_1000605c, %v1_10006060
  store i32 %v2_10006068, i32* %r11.global-to-local, align 4
  store i32 %v0_10005f18, i32* %r0.global-to-local, align 4
  %v1_10006070 = add i32 %v3_10006058, 1
  store i32 %v1_10006070, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i16* @global_var_1001c6c0.107 to i32), i32* %r8.global-to-local, align 4
  %v0_10006078 = load i32, i32* %r31.global-to-local, align 4
  %v2_10006078 = add i32 %v2_10006054, 4
  %v3_10006078 = inttoptr i32 %v2_10006078 to i32*
  store i32 %v0_10006078, i32* %v3_10006078, align 4
  %v0_10006080 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006080, i32* @global_var_1001c6b8.105, align 4
  store i32 %v0_10005f34, i32* @r28, align 4
  store i32 %v0_10005f60, i32* @r29, align 4
  store i32 %v0_10005f64, i32* @r30, align 4
  %v0_100060b0 = load i32, i32* %r8.global-to-local, align 4
  %v1_100060b0 = trunc i32 %v0_100060b0 to i16
  %v2_100060b0 = load i32, i32* %r11.global-to-local, align 4
  %v3_100060b0 = add i32 %v2_100060b0, 10
  %v4_100060b0 = inttoptr i32 %v3_100060b0 to i16*
  store i16 %v1_100060b0, i16* %v4_100060b0, align 2
  %v0_100060b4 = load i32, i32* %r7.global-to-local, align 4
  %v1_100060b4 = trunc i32 %v0_100060b4 to i16
  %v2_100060b4 = load i32, i32* %r11.global-to-local, align 4
  %v3_100060b4 = add i32 %v2_100060b4, 8
  %v4_100060b4 = inttoptr i32 %v3_100060b4 to i16*
  store i16 %v1_100060b4, i16* %v4_100060b4, align 2
  %v0_100060b8 = load i32, i32* %r8.global-to-local, align 4
  %v1_100060b8 = trunc i32 %v0_100060b8 to i16
  store i16 %v1_100060b8, i16* @global_var_1001c6c0.107, align 2
  ret i32 %v3_10006010

; uselistorder directives
  uselistorder i32 %v3_10006058, { 1, 0 }
  uselistorder i32 %v1_10006034, { 1, 0 }
  uselistorder i32 %v1_10006030, { 1, 0 }
  uselistorder i32 %v0_10006014, { 1, 0, 2 }
  uselistorder i32 %v1_10005fc4, { 1, 0 }
  uselistorder i32 %v1_10005fc0, { 1, 0 }
  uselistorder i32 %v0_10005fa4, { 1, 0, 2 }
  uselistorder i32 %v1_10005f30, { 2, 1, 0 }
  uselistorder i32* %r23.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i8*)* @function_10008d9c, { 0, 1, 21, 23, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22 }
  uselistorder i32 (i32, i32, i32)* @function_1000a744, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_100060c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100060c0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp198 = call i32 @__decompiler_undefined_function_0()
  %tmp199 = call i32 @__decompiler_undefined_function_0()
  %tmp200 = call i32 @__decompiler_undefined_function_0()
  %tmp201 = call i16 @__decompiler_undefined_function_1()
  %tmp202 = call i16 @__decompiler_undefined_function_1()
  %tmp203 = call i8 @__decompiler_undefined_function_2()
  %tmp204 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1900 = alloca i32, align 4
  %stack_var_-1926 = alloca i16, align 2
  %stack_var_-1912 = alloca i32, align 4
  %stack_var_-1920 = alloca i32, align 4
  %stack_var_-1908 = alloca i32, align 4
  %stack_var_-1744 = alloca i32, align 4
  %stack_var_-1928 = alloca i32, align 4
  %stack_var_-1616 = alloca i32, align 4
  %stack_var_-1888 = alloca i32, align 4
  %stack_var_-1872 = alloca i32, align 4
  %stack_var_-1916 = alloca i32, align 4
  %v0_100060c0 = load i32, i32* @lr, align 4
  store i32 %v0_100060c0, i32* %r0.global-to-local, align 4
  %v0_100060c8 = call i32 @__asm_mfcr()
  store i32 %v0_100060c8, i32* %r3.global-to-local, align 4
  %v0_100060f4 = load i32, i32* @r24, align 4
  %v0_100060f8 = load i32, i32* @r25, align 4
  %v0_10006100 = load i32, i32* @r27, align 4
  %v0_10006104 = load i32, i32* @r28, align 4
  %v0_10006108 = load i32, i32* @r29, align 4
  %v0_10006110 = load i32, i32* @r31, align 4
  %v0_10006114 = load i32, i32* %r0.global-to-local, align 4
  store i32 268460320, i32* @lr, align 4
  %v0_1000611c = call i32 @function_100095a4()
  store i32 %v0_1000611c, i32* %r3.global-to-local, align 4
  %v1_10006120 = icmp slt i32 %v0_1000611c, 0
  %v3_10006120 = icmp eq i32 %v0_1000611c, 0
  store i1 %v1_10006120, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006120, i1* %cr7_eq.global-to-local, align 1
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_1000611c, i32* @global_var_1001c6d0.108, align 4
  %tmp246 = icmp slt i32 %v0_1000611c, 1
  br i1 %tmp246, label %dec_label_pc_10006190, label %dec_label_pc_10006130

dec_label_pc_10006130:                            ; preds = %dec_label_pc_10006190, %dec_label_pc_100060c0
  store i32 %v0_10006114, i32* %r0.global-to-local, align 4
  %v1_10006144 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100060c8)
  store i32 %v0_100060f4, i32* @r24, align 4
  store i32 %v0_100060f8, i32* @r25, align 4
  store i32 %v0_10006100, i32* @r27, align 4
  store i32 %v0_10006104, i32* @r28, align 4
  store i32 %v0_10006108, i32* %r29.global-to-local, align 4
  store i32 %v0_10006110, i32* @r31, align 4
  ret i32 %v0_1000611c

dec_label_pc_10006190:                            ; preds = %dec_label_pc_100060c0
  %v1_10006190 = icmp slt i32 %v0_1000611c, -1
  %v3_10006190 = icmp eq i32 %v0_1000611c, -1
  store i1 %v1_10006190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006190, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006190, label %dec_label_pc_10006130, label %dec_label_pc_10006198

dec_label_pc_10006198:                            ; preds = %dec_label_pc_10006190
  store i32 268460444, i32* @lr, align 4
  %v1_10006198 = call i32 @function_100090a0(i32 %v0_1000611c)
  store i32 %v1_10006198, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v1_10006198, i32* @global_var_1001c6a0.16, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100061a8.109 to i32), i32* @lr, align 4
  %v2_100061a4 = call i32 @function_10005b98(i32 %v1_10006198, i32 268566528)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268460464, i32* @lr, align 4
  %v0_100061ac = call i32 @function_1000992c()
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v0_100061ac, i32* @global_var_1001c6c4.104, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100061c4.110 to i32), i32* @lr, align 4
  %v2_100061c0 = call i32 @function_1000a5d4(i32 256, i32 288)
  store i32 %v2_100061c0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-1916, align 4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 256, i32* %ctr.global-to-local, align 4
  store i32 %v2_100061c0, i32* @global_var_1001c6c8.111, align 4
  store i32 %v2_100061c0, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100061f0 = add i32 %v2_100061c0, 4
  store i32 %v1_100061f0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100061f4

dec_label_pc_100061f4:                            ; preds = %dec_label_pc_100061f4.dec_label_pc_100061f4_crit_edge, %dec_label_pc_10006198
  %v1_10006208 = phi i32 [ %v1_10006210, %dec_label_pc_100061f4.dec_label_pc_100061f4_crit_edge ], [ %v1_100061f0, %dec_label_pc_10006198 ]
  %v0_10006208 = phi i32 [ %v0_10006208.pre, %dec_label_pc_100061f4.dec_label_pc_100061f4_crit_edge ], [ -1, %dec_label_pc_10006198 ]
  %v1_10006204 = phi i32 [ %v1_10006204.pre, %dec_label_pc_100061f4.dec_label_pc_100061f4_crit_edge ], [ %v2_100061c0, %dec_label_pc_10006198 ]
  %v0_10006200 = phi i32 [ %v0_10006214, %dec_label_pc_100061f4.dec_label_pc_100061f4_crit_edge ], [ 0, %dec_label_pc_10006198 ]
  %v1_100061f4 = mul i32 %v0_10006200, 256
  store i32 %v1_100061f4, i32* %r0.global-to-local, align 4
  %v2_100061fc = mul i32 %v0_10006200, 288
  %v1_10006200 = add i32 %v0_10006200, 1
  store i32 %v1_10006200, i32* %r10.global-to-local, align 4
  %v2_10006204 = add i32 %v2_100061fc, %v1_10006204
  store i32 %v2_10006204, i32* %r9.global-to-local, align 4
  %v2_10006208 = inttoptr i32 %v1_10006208 to i32*
  store i32 %v0_10006208, i32* %v2_10006208, align 4
  %v0_1000620c = load i32, i32* %r7.global-to-local, align 4
  %v1_1000620c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000620c = add i32 %v1_1000620c, 12
  %v3_1000620c = inttoptr i32 %v2_1000620c to i32*
  store i32 %v0_1000620c, i32* %v3_1000620c, align 4
  %v0_10006210 = load i32, i32* %r11.global-to-local, align 4
  %v1_10006210 = add i32 %v0_10006210, 288
  store i32 %v1_10006210, i32* %r11.global-to-local, align 4
  %v0_10006214 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10006214, i32* %r9.global-to-local, align 4
  %v0_10006218 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006218 = add i32 %v0_10006218, -1
  store i32 %v1_10006218, i32* %ctr.global-to-local, align 4
  %v2_10006218 = icmp eq i32 %v1_10006218, 0
  br i1 %v2_10006218, label %dec_label_pc_1000621c, label %dec_label_pc_100061f4.dec_label_pc_100061f4_crit_edge

dec_label_pc_100061f4.dec_label_pc_100061f4_crit_edge: ; preds = %dec_label_pc_100061f4
  %v1_10006204.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_10006208.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100061f4

dec_label_pc_1000621c:                            ; preds = %dec_label_pc_100061f4
  store i32 256, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 256, i32* %stack_var_-1916, align 4
  store i32 268460596, i32* @lr, align 4
  %v3_10006230 = call i32 @function_1000a278(i32 2, i32 3, i32 6)
  store i32 %v3_10006230, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 3, i32* @r4, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 %v3_10006230, i32* @global_var_1001c6cc.112, align 4
  store i32 %v3_10006230, i32* %r29.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10006250.113 to i32), i32* @lr, align 4
  %v1_1000624c = call i32 @function_10009474(i32 3)
  %v1_10006250 = or i32 %v1_1000624c, 2048
  store i32 %v1_10006250, i32* %r5.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 %v3_10006230, i32* %r3.global-to-local, align 4
  store i32 268460644, i32* @lr, align 4
  %v2_10006260 = call i32 @function_10009474(i32 %v3_10006230)
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006268 = load i32, i32* @global_var_1001c6cc.112, align 4
  store i32 %v3_10006268, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  %v2_10006278 = ptrtoint i32* %stack_var_-1916 to i32
  store i32 %v2_10006278, i32* %r6.global-to-local, align 4
  store i32 4, i32* %r7.global-to-local, align 4
  store i32 1, i32* %stack_var_-1916, align 4
  store i32 268460680, i32* @lr, align 4
  %v5_10006284 = call i32 @function_1000a23c(i32 %v3_10006268, i32 0, i32 3, i32 %v2_10006278)
  store i32 %v5_10006284, i32* %r3.global-to-local, align 4
  %v1_10006288 = icmp slt i32 %v5_10006284, 0
  %v3_10006288 = icmp eq i32 %v5_10006284, 0
  store i1 %v1_10006288, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006288, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006288, label %dec_label_pc_10006290, label %dec_label_pc_10006c64

dec_label_pc_10006290:                            ; preds = %dec_label_pc_1000621c, %dec_label_pc_10006c64, %dec_label_pc_10006290
  %v0_10006290 = call i32 @function_10005b48()
  store i32 %v0_10006290, i32* %r3.global-to-local, align 4
  %v1_10006294 = urem i32 %v0_10006290, 65536
  store i32 %v1_10006294, i32* @r23, align 4
  %v1_10006298 = icmp ult i32 %v1_10006294, 1023
  %v3_10006298 = icmp eq i32 %v1_10006294, 1023
  store i1 %v1_10006298, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006298, i1* %cr7_eq.global-to-local, align 1
  %tmp247 = icmp ult i32 %v1_10006294, 1024
  br i1 %tmp247, label %dec_label_pc_10006290, label %dec_label_pc_100062a0

dec_label_pc_100062a0:                            ; preds = %dec_label_pc_10006290
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 5, i32* %r29.global-to-local, align 4
  %v3_100062a8 = load i32, i32* @global_var_1001c738.114, align 4
  store i32 %v3_100062a8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c738.114 to i32), i32* @r24, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c74c.115 to i32), i32* @r25, align 4
  %v1_100062b8 = call i32 @__asm_rlwimi(i32 5, i32 24, i32 4, i32 7)
  store i32 %v1_100062b8, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r28.global-to-local, align 4
  %v1_100062c0 = call i32 @__asm_rlwimi(i32 4, i32 28, i32 0, i32 3)
  store i32 %v1_100062c0, i32* %r0.global-to-local, align 4
  store i32 40, i32* %r9.global-to-local, align 4
  store i32 %v1_100062c0, i32* @global_var_1001c738.114, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000c030.116 to i32), i32* @r28, align 4
  store i16 40, i16* bitcast (i32* @global_var_1001c73a.117 to i16*), align 4
  %v0_100062d4 = call i32 @function_10005b48()
  %v1_100062d4 = trunc i32 %v0_100062d4 to i16
  store i32 %v0_100062d4, i32* %r3.global-to-local, align 4
  %v3_100062d8 = load i32, i32* @global_var_1001c758.118, align 4
  store i32 %v3_100062d8, i32* %r11.global-to-local, align 4
  store i32 64, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r9.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_1001c740.119 to i8*), align 4
  %v1_100062e8 = call i32 @__asm_rlwimi(i32 5, i32 28, i32 0, i32 3)
  store i32 %v1_100062e8, i32* %r11.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  %v0_100062f0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100062f0 = trunc i32 %v0_100062f0 to i8
  store i8 %v1_100062f0, i8* bitcast (i32* @global_var_1001c741.120 to i8*), align 4
  store i16 %v1_100062d4, i16* bitcast (i32* @global_var_1001c73c.121 to i16*), align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1000c018.122 to i32), i32* @r29, align 4
  store i32 %v1_100062e8, i32* @global_var_1001c758.118, align 4
  store i16 23, i16* @global_var_1001c74e.123, align 2
  store i32 ptrtoint (i32* @global_var_1000bfac.124 to i32), i32* @r27, align 4
  %v0_10006310 = load i32, i32* @r23, align 4
  %v1_10006310 = trunc i32 %v0_10006310 to i16
  store i16 %v1_10006310, i16* bitcast (i32* @global_var_1001c74c.115 to i16*), align 4
  %v2_10006314 = ptrtoint i32* %stack_var_-1872 to i32
  store i32 %v2_10006314, i32* %r16.global-to-local, align 4
  %v0_10006318 = call i32 @function_10005b48()
  %v1_10006318 = trunc i32 %v0_10006318 to i16
  store i16 %v1_10006318, i16* bitcast (i32* @global_var_1001c75a.125 to i16*), align 4
  %v0_10006328 = load i32, i32* @r29, align 4
  store i32 %v0_10006328, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  %v3_10006330 = load i32, i32* @global_var_1001c758.118, align 4
  %v1_10006338 = or i32 %v3_10006330, 131072
  store i32 %v1_10006338, i32* %r0.global-to-local, align 4
  store i32 %v1_10006338, i32* @global_var_1001c758.118, align 4
  store i32 268460868, i32* @lr, align 4
  %v5_10006340 = call i32 @function_10005f14(i32 %v0_10006328, i32 ptrtoint ([5 x i8]* @global_var_1000c020.126 to i32), i32 9)
  %v0_10006348 = load i32, i32* @r29, align 4
  store i32 %v0_10006348, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268460888, i32* @lr, align 4
  %v5_10006354 = call i32 @function_10005f14(i32 %v0_10006348, i32 ptrtoint ([6 x i8]* @global_var_1000c028.127 to i32), i32 10)
  %v0_10006358 = load i32, i32* @r29, align 4
  store i32 %v0_10006358, i32* %r3.global-to-local, align 4
  store i32 11, i32* %r5.global-to-local, align 4
  %v0_10006360 = load i32, i32* @r28, align 4
  store i32 268460904, i32* @lr, align 4
  %v5_10006364 = call i32 @function_10005f14(i32 %v0_10006358, i32 %v0_10006360, i32 11)
  %v0_10006368 = load i32, i32* @r29, align 4
  store i32 %v0_10006368, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268460920, i32* @lr, align 4
  %v5_10006374 = call i32 @function_10005f14(i32 %v0_10006368, i32 %v0_10006368, i32 10)
  %v0_10006378 = load i32, i32* @r29, align 4
  store i32 %v0_10006378, i32* %r3.global-to-local, align 4
  %v0_10006380 = load i32, i32* @r27, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bf78.128 to i32), i32* @r29, align 4
  store i32 5, i32* %r5.global-to-local, align 4
  store i32 268460944, i32* @lr, align 4
  %v4_1000638c = call i32 @function_10005f14(i32 %v0_10006378, i32 %v0_10006380, i32 5)
  %v0_10006390 = load i32, i32* @r29, align 4
  store i32 %v0_10006390, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268460960, i32* @lr, align 4
  %v5_1000639c = call i32 @function_10005f14(i32 %v0_10006390, i32 %v0_10006390, i32 8)
  %v0_100063a0 = load i32, i32* @r29, align 4
  store i32 %v0_100063a0, i32* %r3.global-to-local, align 4
  %v0_100063a8 = load i32, i32* @r28, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1000bf80.129 to i32), i32* @r29, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268460984, i32* @lr, align 4
  %v5_100063b4 = call i32 @function_10005f14(i32 %v0_100063a0, i32 %v0_100063a8, i32 10)
  %v0_100063b8 = load i32, i32* @r29, align 4
  store i32 %v0_100063b8, i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268461000, i32* @lr, align 4
  %v5_100063c4 = call i32 @function_10005f14(i32 %v0_100063b8, i32 %v0_100063b8, i32 14)
  %v0_100063cc = load i32, i32* @r29, align 4
  store i32 %v0_100063cc, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461020, i32* @lr, align 4
  %v4_100063d8 = call i32 @function_10005f14(i32 %v0_100063cc, i32 ptrtoint (i32* @global_var_1000bf88.130 to i32), i32 15)
  %v0_100063e0 = load i32, i32* @r29, align 4
  store i32 %v0_100063e0, i32* %r3.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  store i32 268461040, i32* @lr, align 4
  %v4_100063ec = call i32 @function_10005f14(i32 %v0_100063e0, i32 ptrtoint (i32* @global_var_1000bf94.131 to i32), i32 15)
  %v0_100063f4 = load i32, i32* @r29, align 4
  store i32 %v0_100063f4, i32* %r3.global-to-local, align 4
  store i32 13, i32* %r5.global-to-local, align 4
  store i32 268461060, i32* @lr, align 4
  %v5_10006400 = call i32 @function_10005f14(i32 %v0_100063f4, i32 ptrtoint ([7 x i8]* @global_var_1000bfa0.132 to i32), i32 13)
  %v0_10006404 = load i32, i32* @r29, align 4
  store i32 %v0_10006404, i32* %r3.global-to-local, align 4
  %v0_10006408 = load i32, i32* @r27, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268461080, i32* @lr, align 4
  %v4_10006414 = call i32 @function_10005f14(i32 %v0_10006404, i32 %v0_10006408, i32 7)
  store i32 ptrtoint ([5 x i8]* @global_var_1000bfa8.133 to i32), i32* @r29, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1000bfa8.133 to i32), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461104, i32* @lr, align 4
  %v5_1000642c = call i32 @function_10005f14(i32 ptrtoint ([5 x i8]* @global_var_1000bfa8.133 to i32), i32 ptrtoint ([6 x i8]* @global_var_1000bfb0.134 to i32), i32 9)
  %v0_10006434 = load i32, i32* @r29, align 4
  store i32 %v0_10006434, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461124, i32* @lr, align 4
  %v5_10006440 = call i32 @function_10005f14(i32 %v0_10006434, i32 ptrtoint ([6 x i8]* @global_var_1000bfb8.135 to i32), i32 9)
  %v0_10006448 = load i32, i32* @r29, align 4
  store i32 %v0_10006448, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461144, i32* @lr, align 4
  %v5_10006454 = call i32 @function_10005f14(i32 %v0_10006448, i32 ptrtoint ([9 x i8]* @global_var_1000bfc0.136 to i32), i32 12)
  %v0_1000645c = load i32, i32* @r29, align 4
  store i32 %v0_1000645c, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268461164, i32* @lr, align 4
  %v5_10006468 = call i32 @function_10005f14(i32 %v0_1000645c, i32 ptrtoint ([5 x i8]* @global_var_1000bfcc.137 to i32), i32 8)
  %v0_10006470 = load i32, i32* @r29, align 4
  store i32 %v0_10006470, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r5.global-to-local, align 4
  store i32 268461184, i32* @lr, align 4
  %v5_1000647c = call i32 @function_10005f14(i32 %v0_10006470, i32 ptrtoint ([4 x i8]* @global_var_1000bfd4.138 to i32), i32 7)
  %v0_10006480 = load i32, i32* @r29, align 4
  store i32 %v0_10006480, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r5.global-to-local, align 4
  store i32 268461200, i32* @lr, align 4
  %v5_1000648c = call i32 @function_10005f14(i32 %v0_10006480, i32 %v0_10006480, i32 8)
  %v0_10006494 = load i32, i32* @r29, align 4
  store i32 %v0_10006494, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268461220, i32* @lr, align 4
  %v5_100064a0 = call i32 @function_10005f14(i32 %v0_10006494, i32 ptrtoint ([7 x i8]* @global_var_1000bfd8.139 to i32), i32 10)
  %v0_100064a4 = load i32, i32* @r29, align 4
  store i32 %v0_100064a4, i32* %r3.global-to-local, align 4
  %v0_100064a8 = load i32, i32* @r27, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 268461236, i32* @lr, align 4
  %v4_100064b0 = call i32 @function_10005f14(i32 %v0_100064a4, i32 %v0_100064a8, i32 4)
  store i32 ptrtoint ([8 x i8]* @global_var_1000bfe0.140 to i32), i32* %r3.global-to-local, align 4
  store i32 14, i32* %r5.global-to-local, align 4
  store i32 268500992, i32* @r29, align 4
  store i32 268461260, i32* @lr, align 4
  %v4_100064c8 = call i32 @function_10005f14(i32 ptrtoint ([8 x i8]* @global_var_1000bfe0.140 to i32), i32 14, i32 14)
  store i32 ptrtoint ([6 x i8]* @global_var_1000bff8.141 to i32), i32* @r29, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1000bfe8.142 to i32), i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461288, i32* @lr, align 4
  %v5_100064e4 = call i32 @function_10005f14(i32 ptrtoint ([7 x i8]* @global_var_1000bfe8.142 to i32), i32 ptrtoint ([7 x i8]* @global_var_1000bff0.143 to i32), i32 12)
  %v0_100064e8 = load i32, i32* @r29, align 4
  store i32 %v0_100064e8, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 268461304, i32* @lr, align 4
  %v5_100064f4 = call i32 @function_10005f14(i32 %v0_100064e8, i32 %v0_100064e8, i32 10)
  %v0_10006500 = load i32, i32* @r29, align 4
  store i32 %v0_10006500, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r5.global-to-local, align 4
  store i32 268461324, i32* @lr, align 4
  %v5_10006508 = call i32 @function_10005f14(i32 %v0_10006500, i32 ptrtoint ([7 x i8]* @global_var_1000c000.144 to i32), i32 9)
  %v0_10006510 = load i32, i32* @r29, align 4
  store i32 %v0_10006510, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r5.global-to-local, align 4
  store i32 268461344, i32* @lr, align 4
  %v5_1000651c = call i32 @function_10005f14(i32 %v0_10006510, i32 ptrtoint ([8 x i8]* @global_var_1000c008.145 to i32), i32 12)
  store i32 ptrtoint ([4 x i8]* @global_var_1000c010.146 to i32), i32* %r3.global-to-local, align 4
  %v0_10006528 = load i32, i32* @r27, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 268461364, i32* @lr, align 4
  %v4_10006530 = call i32 @function_10005f14(i32 ptrtoint ([4 x i8]* @global_var_1000c010.146 to i32), i32 %v0_10006528, i32 3)
  store i32 %v4_10006530, i32* %r3.global-to-local, align 4
  %v2_100069d0 = ptrtoint i32* %stack_var_-1616 to i32
  %v4_10006a1c = zext i8 %tmp203 to i32
  %v1_10006a20 = icmp ult i8 %tmp203, 6
  %v3_10006a20 = icmp eq i8 %tmp203, 6
  %v4_10006a28 = zext i16 %tmp202 to i32
  %v1_10006a2c = icmp ult i16 %tmp202, 23
  %v3_10006a2c = icmp eq i16 %tmp202, 23
  %v4_10006a34 = zext i16 %tmp201 to i32
  %v1_10006a44 = and i32 %tmp200, 131072
  %v3_10006a44 = icmp eq i32 %v1_10006a44, 0
  %v1_10006a6c = add i32 %tmp199, -1
  %v2_10006a70 = icmp slt i32 %v1_10006a6c, %tmp198
  %v4_10006a70 = icmp eq i32 %v1_10006a6c, %tmp198
  %v2_10006d20 = ptrtoint i32* %stack_var_-1928 to i32
  %v2_10006d74 = ptrtoint i32* %stack_var_-1744 to i32
  %v2_10006d7c = ptrtoint i32* %stack_var_-1908 to i32
  %v2_100079cc = ptrtoint i16* %stack_var_-1926 to i32
  %v2_100079e0 = ptrtoint i32* %stack_var_-1900 to i32
  %v2_10006e2c = ptrtoint i32* %stack_var_-1920 to i32
  %v2_10006e30 = ptrtoint i32* %stack_var_-1912 to i32
  %v2_10006988 = ptrtoint i32* %stack_var_-1888 to i32
  %v1_10006a4c = and i32 %tmp200, 1048576
  %v3_10006a4c = icmp eq i32 %v1_10006a4c, 0
  %v1_10006a54 = and i32 %tmp200, 262144
  %v3_10006a54 = icmp eq i32 %v1_10006a54, 0
  %v1_10006a5c = and i32 %tmp200, 65536
  %v3_10006a5c = icmp eq i32 %v1_10006a5c, 0
  br label %dec_label_pc_10006534

dec_label_pc_10006534:                            ; preds = %dec_label_pc_10006dc4, %dec_label_pc_100062a0
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006538 = load i32, i32* @global_var_1001c6c4.104, align 4
  store i32 %v3_10006538, i32* @r31, align 4
  %v0_1000653c = load i32, i32* @r26, align 4
  %v2_1000653c = icmp slt i32 %v0_1000653c, %v3_10006538
  %v4_1000653c = icmp eq i32 %v0_1000653c, %v3_10006538
  store i1 %v2_1000653c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000653c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1000653c, label %dec_label_pc_100069b8, label %dec_label_pc_10006544

dec_label_pc_10006544:                            ; preds = %dec_label_pc_10006534
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1916, align 4
  br label %dec_label_pc_1000654c

dec_label_pc_1000654c:                            ; preds = %dec_label_pc_10006908, %dec_label_pc_10006544
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-1888, align 4
  %v0_10006560 = call i32 @function_10005b48()
  %v1_10006560 = trunc i32 %v0_10006560 to i16
  store i32 %v0_10006560, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i16 %v1_10006560, i16* bitcast (i32* @global_var_1001c73c.121 to i16*), align 4
  %v3_1000656c = load i32, i32* @global_var_1001c6a0.16, align 4
  store i32 %v3_1000656c, i32* %r0.global-to-local, align 4
  store i32 %v3_1000656c, i32* @global_var_1001c744.147, align 4
  br label %dec_label_pc_10006574

dec_label_pc_10006574:                            ; preds = %dec_label_pc_10008760, %dec_label_pc_10008724, %dec_label_pc_10008570, %dec_label_pc_100083a4, %dec_label_pc_10007e80, %dec_label_pc_10007d40, %dec_label_pc_10007cd8, %dec_label_pc_10007cbc, %dec_label_pc_10007c74, %dec_label_pc_10007c58, %dec_label_pc_10007be4, %dec_label_pc_1000874c, %dec_label_pc_10008738, %dec_label_pc_10008714, %dec_label_pc_10008704, %dec_label_pc_100086f4, %dec_label_pc_100086e4, %dec_label_pc_100086d4, %dec_label_pc_100086c8, %dec_label_pc_100086b8, %dec_label_pc_100086b0, %dec_label_pc_100086a4, %dec_label_pc_10008694, %dec_label_pc_1000868c, %dec_label_pc_10008680, %dec_label_pc_10008674, %dec_label_pc_1000866c, %dec_label_pc_1000865c, %dec_label_pc_10008650, %dec_label_pc_10008644, %dec_label_pc_10008634, %dec_label_pc_10008624, %dec_label_pc_10008614, %dec_label_pc_1000860c, %dec_label_pc_10008604, %dec_label_pc_100085fc, %dec_label_pc_100085f0, %dec_label_pc_100085e0, %dec_label_pc_100085d0, %dec_label_pc_100085c4, %dec_label_pc_100085b8, %dec_label_pc_100085b0, %dec_label_pc_100085a4, %dec_label_pc_1000859c, %dec_label_pc_10008594, %dec_label_pc_10008588, %dec_label_pc_1000857c, %dec_label_pc_10008558, %dec_label_pc_10008548, %dec_label_pc_10008540, %dec_label_pc_10008534, %dec_label_pc_1000852c, %dec_label_pc_10008520, %dec_label_pc_10008508, %dec_label_pc_100084fc, %dec_label_pc_100084e8, %dec_label_pc_100084d0, %dec_label_pc_10008494, %dec_label_pc_10008484, %dec_label_pc_10008478, %dec_label_pc_10008460, %dec_label_pc_1000844c, %dec_label_pc_10008438, %dec_label_pc_10008424, %dec_label_pc_10008410, %dec_label_pc_10008400, %dec_label_pc_100083f4, %dec_label_pc_100083cc, %dec_label_pc_100083b8, %dec_label_pc_10008390, %dec_label_pc_1000837c, %dec_label_pc_10008368, %dec_label_pc_10008354, %dec_label_pc_10008340, %dec_label_pc_10008324, %dec_label_pc_1000831c, %dec_label_pc_10008300, %dec_label_pc_100082ec, %dec_label_pc_100082d8, %dec_label_pc_100082c4, %dec_label_pc_100082b0, %dec_label_pc_1000829c, %dec_label_pc_1000828c, %dec_label_pc_10008278, %dec_label_pc_10008270, %dec_label_pc_1000825c, %dec_label_pc_10008248, %dec_label_pc_10008234, %dec_label_pc_10008220, %dec_label_pc_1000820c, %dec_label_pc_100081f8, %dec_label_pc_100081cc, %dec_label_pc_100081b8, %dec_label_pc_100081a4, %dec_label_pc_10008190, %dec_label_pc_1000817c, %dec_label_pc_1000815c, %dec_label_pc_10008154, %dec_label_pc_1000814c, %dec_label_pc_10008138, %dec_label_pc_10008124, %dec_label_pc_10008110, %dec_label_pc_10008108, %dec_label_pc_100080f8, %dec_label_pc_100080f0, %dec_label_pc_100080e4, %dec_label_pc_100080d4, %dec_label_pc_100080c8, %dec_label_pc_100080b4, %dec_label_pc_100080a0, %dec_label_pc_10008098, %dec_label_pc_10008090, %dec_label_pc_10008084, %dec_label_pc_10008064, %dec_label_pc_10008058, %dec_label_pc_10008044, %dec_label_pc_10008030, %dec_label_pc_10008014, %dec_label_pc_1000800c, %dec_label_pc_10007ff8, %dec_label_pc_10007fd4, %dec_label_pc_10007fb8, %dec_label_pc_10007fa4, %dec_label_pc_10007f90, %dec_label_pc_10007f7c, %dec_label_pc_10007f68, %dec_label_pc_10007f4c, %dec_label_pc_10007f10, %dec_label_pc_10007efc, %dec_label_pc_10007ee8, %dec_label_pc_10007ed4, %dec_label_pc_10007ec0, %dec_label_pc_10007eac, %dec_label_pc_10007e4c, %dec_label_pc_10007e38, %dec_label_pc_10007e1c, %dec_label_pc_10007e00, %dec_label_pc_10007df4, %dec_label_pc_10007dd8, %dec_label_pc_10007db4, %dec_label_pc_10007da8, %dec_label_pc_10007d9c, %dec_label_pc_10007d90, %dec_label_pc_10007d84, %dec_label_pc_10007d7c, %dec_label_pc_10007d74, %dec_label_pc_10007d68, %dec_label_pc_10007d60, %dec_label_pc_10007d58, %dec_label_pc_10007d4c, %dec_label_pc_10007d24, %dec_label_pc_10007d08, %dec_label_pc_10007cec, %dec_label_pc_10007cd0, %dec_label_pc_10007cac, %dec_label_pc_10007c98, %dec_label_pc_10007c88, %dec_label_pc_10007c3c, %dec_label_pc_10007c20, %dec_label_pc_10007c0c, %dec_label_pc_10007bf8, %dec_label_pc_10007bd0, %dec_label_pc_10007bbc, %dec_label_pc_10007bb4, %dec_label_pc_10007ba8, %dec_label_pc_10007b9c, %dec_label_pc_10007b88, %dec_label_pc_10006cd0, %dec_label_pc_10006cbc, %dec_label_pc_10006cac, %dec_label_pc_10006ca4, %dec_label_pc_10006c9c, %dec_label_pc_10006c94, %dec_label_pc_10006c8c, %dec_label_pc_10006c84, %dec_label_pc_10006c7c, %dec_label_pc_10006c74, %dec_label_pc_10006b60, %dec_label_pc_10006b48, %dec_label_pc_10006b38, %dec_label_pc_10006b30, %dec_label_pc_10006b28, %dec_label_pc_10006b20, %dec_label_pc_10006b14, %dec_label_pc_10006ae4, %dec_label_pc_10006900, %dec_label_pc_10006638, %dec_label_pc_10006630, %dec_label_pc_10006628, %dec_label_pc_10006620, %dec_label_pc_10006618, %dec_label_pc_10006610, %dec_label_pc_10006608, %dec_label_pc_10006600, %dec_label_pc_100065f8, %dec_label_pc_100065f0, %dec_label_pc_100065e8, %dec_label_pc_100065e0, %dec_label_pc_100065d8, %dec_label_pc_100065d0, %dec_label_pc_100065c8, %dec_label_pc_100065c0, %dec_label_pc_100065b8, %dec_label_pc_100065b0, %dec_label_pc_100065a8, %dec_label_pc_100065a0, %dec_label_pc_10006598, %dec_label_pc_10006590, %dec_label_pc_10006574, %dec_label_pc_1000654c
  %v0_10006574 = call i32 @function_10005b48()
  store i32 %v0_10006574, i32* %r3.global-to-local, align 4
  %v1_10006578 = urem i32 %v0_10006574, 256
  store i32 %v1_10006578, i32* %r0.global-to-local, align 4
  %v1_1000657c = udiv i32 %v0_10006574, 16777216
  store i32 %v1_1000657c, i32* %r11.global-to-local, align 4
  %v1_10006580 = icmp ult i32 %v1_10006578, 127
  %v3_10006580 = icmp eq i32 %v1_10006578, 127
  store i1 %v1_10006580, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006580, i1* %cr7_eq.global-to-local, align 1
  %v1_10006584 = call i32 @__asm_rlwinm(i32 %v0_10006574, i32 24, i32 24, i32 31)
  store i32 %v1_10006584, i32* %r9.global-to-local, align 4
  %v1_10006588 = call i32 @__asm_rlwinm(i32 %v0_10006574, i32 16, i32 24, i32 31)
  store i32 %v1_10006588, i32* %r3.global-to-local, align 4
  %v0_1000658c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000658c, label %dec_label_pc_10006574, label %dec_label_pc_10006590

dec_label_pc_10006590:                            ; preds = %dec_label_pc_10006574
  %v0_10006590 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006590 = icmp slt i32 %v0_10006590, 0
  %v3_10006590 = icmp eq i32 %v0_10006590, 0
  store i1 %v1_10006590, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006590, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006590, label %dec_label_pc_10006574, label %dec_label_pc_10006598

dec_label_pc_10006598:                            ; preds = %dec_label_pc_10006590
  %v1_10006598 = icmp slt i32 %v0_10006590, 3
  %v3_10006598 = icmp eq i32 %v0_10006590, 3
  store i1 %v1_10006598, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006598, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006598, label %dec_label_pc_10006574, label %dec_label_pc_100065a0

dec_label_pc_100065a0:                            ; preds = %dec_label_pc_10006598
  %v1_100065a0 = icmp slt i32 %v0_10006590, 15
  %v3_100065a0 = icmp eq i32 %v0_10006590, 15
  store i1 %v1_100065a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065a0, label %dec_label_pc_10006574, label %dec_label_pc_100065a8

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_100065a0
  %v1_100065a8 = icmp slt i32 %v0_10006590, 56
  %v3_100065a8 = icmp eq i32 %v0_10006590, 56
  store i1 %v1_100065a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065a8, label %dec_label_pc_10006574, label %dec_label_pc_100065b0

dec_label_pc_100065b0:                            ; preds = %dec_label_pc_100065a8
  %v1_100065b0 = icmp slt i32 %v0_10006590, 10
  %v3_100065b0 = icmp eq i32 %v0_10006590, 10
  store i1 %v1_100065b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065b0, label %dec_label_pc_10006574, label %dec_label_pc_100065b8

dec_label_pc_100065b8:                            ; preds = %dec_label_pc_100065b0
  %v1_100065b8 = icmp slt i32 %v0_10006590, 25
  %v3_100065b8 = icmp eq i32 %v0_10006590, 25
  store i1 %v1_100065b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065b8, label %dec_label_pc_10006574, label %dec_label_pc_100065c0

dec_label_pc_100065c0:                            ; preds = %dec_label_pc_100065b8
  %v1_100065c0 = icmp slt i32 %v0_10006590, 49
  %v3_100065c0 = icmp eq i32 %v0_10006590, 49
  store i1 %v1_100065c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065c0, label %dec_label_pc_10006574, label %dec_label_pc_100065c8

dec_label_pc_100065c8:                            ; preds = %dec_label_pc_100065c0
  %v1_100065c8 = icmp slt i32 %v0_10006590, 50
  %v3_100065c8 = icmp eq i32 %v0_10006590, 50
  store i1 %v1_100065c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065c8, label %dec_label_pc_10006574, label %dec_label_pc_100065d0

dec_label_pc_100065d0:                            ; preds = %dec_label_pc_100065c8
  %v1_100065d0 = icmp slt i32 %v0_10006590, 137
  %v3_100065d0 = icmp eq i32 %v0_10006590, 137
  store i1 %v1_100065d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065d0, label %dec_label_pc_10006574, label %dec_label_pc_100065d8

dec_label_pc_100065d8:                            ; preds = %dec_label_pc_100065d0
  %v1_100065d8 = icmp slt i32 %v0_10006590, 6
  %v3_100065d8 = icmp eq i32 %v0_10006590, 6
  store i1 %v1_100065d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065d8, label %dec_label_pc_10006574, label %dec_label_pc_100065e0

dec_label_pc_100065e0:                            ; preds = %dec_label_pc_100065d8
  %v1_100065e0 = icmp slt i32 %v0_10006590, 7
  %v3_100065e0 = icmp eq i32 %v0_10006590, 7
  store i1 %v1_100065e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065e0, label %dec_label_pc_10006574, label %dec_label_pc_100065e8

dec_label_pc_100065e8:                            ; preds = %dec_label_pc_100065e0
  %v1_100065e8 = icmp slt i32 %v0_10006590, 11
  %v3_100065e8 = icmp eq i32 %v0_10006590, 11
  store i1 %v1_100065e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065e8, label %dec_label_pc_10006574, label %dec_label_pc_100065f0

dec_label_pc_100065f0:                            ; preds = %dec_label_pc_100065e8
  %v1_100065f0 = icmp slt i32 %v0_10006590, 21
  %v3_100065f0 = icmp eq i32 %v0_10006590, 21
  store i1 %v1_100065f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065f0, label %dec_label_pc_10006574, label %dec_label_pc_100065f8

dec_label_pc_100065f8:                            ; preds = %dec_label_pc_100065f0
  %v1_100065f8 = icmp slt i32 %v0_10006590, 22
  %v3_100065f8 = icmp eq i32 %v0_10006590, 22
  store i1 %v1_100065f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100065f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100065f8, label %dec_label_pc_10006574, label %dec_label_pc_10006600

dec_label_pc_10006600:                            ; preds = %dec_label_pc_100065f8
  %v1_10006600 = icmp slt i32 %v0_10006590, 26
  %v3_10006600 = icmp eq i32 %v0_10006590, 26
  store i1 %v1_10006600, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006600, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006600, label %dec_label_pc_10006574, label %dec_label_pc_10006608

dec_label_pc_10006608:                            ; preds = %dec_label_pc_10006600
  %v1_10006608 = icmp slt i32 %v0_10006590, 28
  %v3_10006608 = icmp eq i32 %v0_10006590, 28
  store i1 %v1_10006608, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006608, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006608, label %dec_label_pc_10006574, label %dec_label_pc_10006610

dec_label_pc_10006610:                            ; preds = %dec_label_pc_10006608
  %v1_10006610 = icmp slt i32 %v0_10006590, 29
  %v3_10006610 = icmp eq i32 %v0_10006590, 29
  store i1 %v1_10006610, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006610, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006610, label %dec_label_pc_10006574, label %dec_label_pc_10006618

dec_label_pc_10006618:                            ; preds = %dec_label_pc_10006610
  %v1_10006618 = icmp slt i32 %v0_10006590, 30
  %v3_10006618 = icmp eq i32 %v0_10006590, 30
  store i1 %v1_10006618, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006618, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006618, label %dec_label_pc_10006574, label %dec_label_pc_10006620

dec_label_pc_10006620:                            ; preds = %dec_label_pc_10006618
  %v1_10006620 = icmp slt i32 %v0_10006590, 33
  %v3_10006620 = icmp eq i32 %v0_10006590, 33
  store i1 %v1_10006620, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006620, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006620, label %dec_label_pc_10006574, label %dec_label_pc_10006628

dec_label_pc_10006628:                            ; preds = %dec_label_pc_10006620
  %v1_10006628 = icmp slt i32 %v0_10006590, 55
  %v3_10006628 = icmp eq i32 %v0_10006590, 55
  store i1 %v1_10006628, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006628, label %dec_label_pc_10006574, label %dec_label_pc_10006630

dec_label_pc_10006630:                            ; preds = %dec_label_pc_10006628
  %v1_10006630 = icmp slt i32 %v0_10006590, 214
  %v3_10006630 = icmp eq i32 %v0_10006590, 214
  store i1 %v1_10006630, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006630, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006630, label %dec_label_pc_10006574, label %dec_label_pc_10006638

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006630
  %v1_10006638 = icmp slt i32 %v0_10006590, 215
  %v3_10006638 = icmp eq i32 %v0_10006590, 215
  store i1 %v1_10006638, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006638, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006638, label %dec_label_pc_10006574, label %dec_label_pc_10006640

dec_label_pc_10006640:                            ; preds = %dec_label_pc_10006638
  %v1_10006640 = icmp slt i32 %v0_10006590, 192
  %v3_10006640 = icmp eq i32 %v0_10006590, 192
  store i1 %v1_10006640, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006640, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006640, label %dec_label_pc_10006ae4, label %dec_label_pc_10006648

dec_label_pc_10006648:                            ; preds = %dec_label_pc_10006640
  %v1_10006648 = icmp slt i32 %v0_10006590, 146
  %v3_10006648 = icmp eq i32 %v0_10006590, 146
  store i1 %v1_10006648, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006648, label %dec_label_pc_10006b20, label %dec_label_pc_10006650

dec_label_pc_10006650:                            ; preds = %dec_label_pc_10006648
  %v1_10006650 = icmp slt i32 %v0_10006590, 147
  %v3_10006650 = icmp eq i32 %v0_10006590, 147
  store i1 %v1_10006650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006650, label %dec_label_pc_100086d4, label %dec_label_pc_10006658

dec_label_pc_10006658:                            ; preds = %dec_label_pc_10006650
  %v1_10006658 = icmp slt i32 %v0_10006590, 148
  %v3_10006658 = icmp eq i32 %v0_10006590, 148
  store i1 %v1_10006658, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006658, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006658, label %dec_label_pc_10006cd0, label %dec_label_pc_10006660

dec_label_pc_10006660:                            ; preds = %dec_label_pc_10006658
  %v1_10006660 = icmp slt i32 %v0_10006590, 150
  %v3_10006660 = icmp eq i32 %v0_10006590, 150
  store i1 %v1_10006660, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006660, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006660, label %dec_label_pc_10006c74, label %dec_label_pc_10006668

dec_label_pc_10006668:                            ; preds = %dec_label_pc_10006660
  %v1_10006668 = icmp slt i32 %v0_10006590, 152
  %v3_10006668 = icmp eq i32 %v0_10006590, 152
  store i1 %v1_10006668, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006668, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006668, label %dec_label_pc_100086b0, label %dec_label_pc_10006670

dec_label_pc_10006670:                            ; preds = %dec_label_pc_10006668
  %v1_10006670 = icmp slt i32 %v0_10006590, 157
  %v3_10006670 = icmp eq i32 %v0_10006590, 157
  store i1 %v1_10006670, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006670, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006670, label %dec_label_pc_1000868c, label %dec_label_pc_10006678

dec_label_pc_10006678:                            ; preds = %dec_label_pc_10006670
  %v1_10006678 = icmp slt i32 %v0_10006590, 161
  %v3_10006678 = icmp eq i32 %v0_10006590, 161
  store i1 %v1_10006678, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006678, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006678, label %dec_label_pc_10008680, label %dec_label_pc_10006680

dec_label_pc_10006680:                            ; preds = %dec_label_pc_10006678
  %v1_10006680 = icmp slt i32 %v0_10006590, 162
  %v3_10006680 = icmp eq i32 %v0_10006590, 162
  store i1 %v1_10006680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006680, label %dec_label_pc_1000865c, label %dec_label_pc_10006688

dec_label_pc_10006688:                            ; preds = %dec_label_pc_10006680
  %v1_10006688 = icmp slt i32 %v0_10006590, 155
  %v3_10006688 = icmp eq i32 %v0_10006590, 155
  store i1 %v1_10006688, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006688, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006688, label %dec_label_pc_100085fc, label %dec_label_pc_10006690

dec_label_pc_10006690:                            ; preds = %dec_label_pc_10006688
  %v1_10006690 = icmp slt i32 %v0_10006590, 164
  %v3_10006690 = icmp eq i32 %v0_10006590, 164
  store i1 %v1_10006690, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006690, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006690, label %dec_label_pc_100085d0, label %dec_label_pc_10006698

dec_label_pc_10006698:                            ; preds = %dec_label_pc_10006690
  %v1_10006698 = icmp slt i32 %v0_10006590, 156
  %v3_10006698 = icmp eq i32 %v0_10006590, 156
  store i1 %v1_10006698, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006698, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006698, label %dec_label_pc_100085c4, label %dec_label_pc_100066a0

dec_label_pc_100066a0:                            ; preds = %dec_label_pc_10006698
  %v1_100066a0 = icmp slt i32 %v0_10006590, 167
  %v3_100066a0 = icmp eq i32 %v0_10006590, 167
  store i1 %v1_100066a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a0, label %dec_label_pc_100085b0, label %dec_label_pc_100066a8

dec_label_pc_100066a8:                            ; preds = %dec_label_pc_100066a0
  %v1_100066a8 = icmp slt i32 %v0_10006590, 168
  %v3_100066a8 = icmp eq i32 %v0_10006590, 168
  store i1 %v1_100066a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066a8, label %dec_label_pc_10008594, label %dec_label_pc_100066b0

dec_label_pc_100066b0:                            ; preds = %dec_label_pc_100066a8
  %v1_100066b0 = icmp slt i32 %v0_10006590, 203
  %v3_100066b0 = icmp eq i32 %v0_10006590, 203
  store i1 %v1_100066b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b0, label %dec_label_pc_10008588, label %dec_label_pc_100066b8

dec_label_pc_100066b8:                            ; preds = %dec_label_pc_100066b0
  %v1_100066b8 = icmp slt i32 %v0_10006590, 204
  %v3_100066b8 = icmp eq i32 %v0_10006590, 204
  store i1 %v1_100066b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066b8, label %dec_label_pc_1000857c, label %dec_label_pc_100066c0

dec_label_pc_100066c0:                            ; preds = %dec_label_pc_100066b8
  %v1_100066c0 = icmp slt i32 %v0_10006590, 207
  %v3_100066c0 = icmp eq i32 %v0_10006590, 207
  store i1 %v1_100066c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c0, label %dec_label_pc_10008540, label %dec_label_pc_100066c8

dec_label_pc_100066c8:                            ; preds = %dec_label_pc_100066c0
  %v1_100066c8 = icmp slt i32 %v0_10006590, 117
  %v3_100066c8 = icmp eq i32 %v0_10006590, 117
  store i1 %v1_100066c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066c8, label %dec_label_pc_1000852c, label %dec_label_pc_100066d0

dec_label_pc_100066d0:                            ; preds = %dec_label_pc_100066c8
  %v1_100066d0 = icmp slt i32 %v0_10006590, 80
  %v3_100066d0 = icmp eq i32 %v0_10006590, 80
  store i1 %v1_100066d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d0, label %dec_label_pc_10008508, label %dec_label_pc_100066d8

dec_label_pc_100066d8:                            ; preds = %dec_label_pc_100066d0
  %v1_100066d8 = icmp slt i32 %v0_10006590, 209
  %v3_100066d8 = icmp eq i32 %v0_10006590, 209
  store i1 %v1_100066d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066d8, label %dec_label_pc_100084d0, label %dec_label_pc_100066e0

dec_label_pc_100066e0:                            ; preds = %dec_label_pc_100066d8
  %v1_100066e0 = icmp slt i32 %v0_10006590, 64
  %v3_100066e0 = icmp eq i32 %v0_10006590, 64
  store i1 %v1_100066e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e0, label %dec_label_pc_10008484, label %dec_label_pc_100066e8

dec_label_pc_100066e8:                            ; preds = %dec_label_pc_100066e0
  %v1_100066e8 = icmp slt i32 %v0_10006590, 172
  %v3_100066e8 = icmp eq i32 %v0_10006590, 172
  store i1 %v1_100066e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066e8, label %dec_label_pc_10008458, label %dec_label_pc_100066f0

dec_label_pc_100066f0:                            ; preds = %dec_label_pc_100066e8
  %v1_100066f0 = icmp slt i32 %v0_10006590, 100
  %v3_100066f0 = icmp eq i32 %v0_10006590, 100
  store i1 %v1_100066f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f0, label %dec_label_pc_10008444, label %dec_label_pc_100066f8

dec_label_pc_100066f8:                            ; preds = %dec_label_pc_100066f0
  %v1_100066f8 = icmp slt i32 %v0_10006590, 169
  %v3_100066f8 = icmp eq i32 %v0_10006590, 169
  store i1 %v1_100066f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100066f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100066f8, label %dec_label_pc_10008400, label %dec_label_pc_10006700

dec_label_pc_10006700:                            ; preds = %dec_label_pc_100066f8
  %v1_10006700 = icmp slt i32 %v0_10006590, 198
  %v3_10006700 = icmp eq i32 %v0_10006590, 198
  store i1 %v1_10006700, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006700, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006700, label %dec_label_pc_100083c4, label %dec_label_pc_10006708

dec_label_pc_10006708:                            ; preds = %dec_label_pc_10006700
  %v1_10006708 = icmp slt i32 %v0_10006590, 128
  %v3_10006708 = icmp eq i32 %v0_10006590, 128
  store i1 %v1_10006708, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006708, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006708, label %dec_label_pc_100083b0, label %dec_label_pc_10006710

dec_label_pc_10006710:                            ; preds = %dec_label_pc_10006708
  %v1_10006710 = icmp slt i32 %v0_10006590, 129
  %v3_10006710 = icmp eq i32 %v0_10006590, 129
  store i1 %v1_10006710, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006710, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006710, label %dec_label_pc_1000839c, label %dec_label_pc_10006718

dec_label_pc_10006718:                            ; preds = %dec_label_pc_10006710
  %v1_10006718 = icmp slt i32 %v0_10006590, 130
  %v3_10006718 = icmp eq i32 %v0_10006590, 130
  store i1 %v1_10006718, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006718, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006718, label %dec_label_pc_10008388, label %dec_label_pc_10006720

dec_label_pc_10006720:                            ; preds = %dec_label_pc_10006718
  %v1_10006720 = icmp slt i32 %v0_10006590, 131
  %v3_10006720 = icmp eq i32 %v0_10006590, 131
  store i1 %v1_10006720, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006720, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006720, label %dec_label_pc_10008374, label %dec_label_pc_10006728

dec_label_pc_10006728:                            ; preds = %dec_label_pc_10006720
  %v1_10006728 = icmp slt i32 %v0_10006590, 132
  %v3_10006728 = icmp eq i32 %v0_10006590, 132
  store i1 %v1_10006728, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006728, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006728, label %dec_label_pc_10008360, label %dec_label_pc_10006730

dec_label_pc_10006730:                            ; preds = %dec_label_pc_10006728
  %v1_10006730 = icmp slt i32 %v0_10006590, 134
  %v3_10006730 = icmp eq i32 %v0_10006590, 134
  store i1 %v1_10006730, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006730, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006730, label %dec_label_pc_1000834c, label %dec_label_pc_10006738

dec_label_pc_10006738:                            ; preds = %dec_label_pc_10006730
  %v1_10006738 = icmp slt i32 %v0_10006590, 136
  %v3_10006738 = icmp eq i32 %v0_10006590, 136
  store i1 %v1_10006738, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006738, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006738, label %dec_label_pc_10008338, label %dec_label_pc_10006740

dec_label_pc_10006740:                            ; preds = %dec_label_pc_10006738
  %v1_10006740 = icmp slt i32 %v0_10006590, 138
  %v3_10006740 = icmp eq i32 %v0_10006590, 138
  store i1 %v1_10006740, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006740, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006740, label %dec_label_pc_10008314, label %dec_label_pc_10006748

dec_label_pc_10006748:                            ; preds = %dec_label_pc_10006740
  %v1_10006748 = icmp slt i32 %v0_10006590, 139
  %v3_10006748 = icmp eq i32 %v0_10006590, 139
  store i1 %v1_10006748, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006748, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006748, label %dec_label_pc_100082f8, label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006748
  %v1_10006750 = icmp slt i32 %v0_10006590, 140
  %v3_10006750 = icmp eq i32 %v0_10006590, 140
  store i1 %v1_10006750, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006750, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006750, label %dec_label_pc_100082e4, label %dec_label_pc_10006758

dec_label_pc_10006758:                            ; preds = %dec_label_pc_10006750
  %v1_10006758 = icmp slt i32 %v0_10006590, 143
  %v3_10006758 = icmp eq i32 %v0_10006590, 143
  store i1 %v1_10006758, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006758, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006758, label %dec_label_pc_100082d0, label %dec_label_pc_10006760

dec_label_pc_10006760:                            ; preds = %dec_label_pc_10006758
  %v1_10006760 = icmp slt i32 %v0_10006590, 144
  %v3_10006760 = icmp eq i32 %v0_10006590, 144
  store i1 %v1_10006760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006760, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006760, label %dec_label_pc_100082bc, label %dec_label_pc_10006768

dec_label_pc_10006768:                            ; preds = %dec_label_pc_10006760
  %v1_10006768 = icmp slt i32 %v0_10006590, 153
  %v3_10006768 = icmp eq i32 %v0_10006590, 153
  store i1 %v1_10006768, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006768, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006768, label %dec_label_pc_100082a8, label %dec_label_pc_10006770

dec_label_pc_10006770:                            ; preds = %dec_label_pc_10006768
  %v1_10006770 = icmp slt i32 %v0_10006590, 158
  %v3_10006770 = icmp eq i32 %v0_10006590, 158
  store i1 %v1_10006770, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006770, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006770, label %dec_label_pc_10008284, label %dec_label_pc_10006778

dec_label_pc_10006778:                            ; preds = %dec_label_pc_10006770
  %v1_10006778 = icmp slt i32 %v0_10006590, 159
  %v3_10006778 = icmp eq i32 %v0_10006590, 159
  store i1 %v1_10006778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006778, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006778, label %dec_label_pc_10008268, label %dec_label_pc_10006780

dec_label_pc_10006780:                            ; preds = %dec_label_pc_10006778
  %v1_10006780 = icmp slt i32 %v0_10006590, 160
  %v3_10006780 = icmp eq i32 %v0_10006590, 160
  store i1 %v1_10006780, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006780, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006780, label %dec_label_pc_10008254, label %dec_label_pc_10006788

dec_label_pc_10006788:                            ; preds = %dec_label_pc_10006780
  %v1_10006788 = icmp slt i32 %v0_10006590, 163
  %v3_10006788 = icmp eq i32 %v0_10006590, 163
  store i1 %v1_10006788, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006788, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006788, label %dec_label_pc_100081c4, label %dec_label_pc_10006790

dec_label_pc_10006790:                            ; preds = %dec_label_pc_10006788
  %v1_10006790 = icmp slt i32 %v0_10006590, 199
  %v3_10006790 = icmp eq i32 %v0_10006590, 199
  store i1 %v1_10006790, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006790, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006790, label %dec_label_pc_100081b0, label %dec_label_pc_10006798

dec_label_pc_10006798:                            ; preds = %dec_label_pc_10006790
  %v1_10006798 = icmp slt i32 %v0_10006590, 205
  %v3_10006798 = icmp eq i32 %v0_10006590, 205
  store i1 %v1_10006798, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006798, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006798, label %dec_label_pc_10008188, label %dec_label_pc_100067a0

dec_label_pc_100067a0:                            ; preds = %dec_label_pc_10006798
  %v1_100067a0 = icmp slt i32 %v0_10006590, 104
  %v3_100067a0 = icmp eq i32 %v0_10006590, 104
  store i1 %v1_100067a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067a0, label %dec_label_pc_10008144, label %dec_label_pc_100067a8

dec_label_pc_100067a8:                            ; preds = %dec_label_pc_100067a0
  %v1_100067a8 = icmp slt i32 %v0_10006590, 188
  %v3_100067a8 = icmp eq i32 %v0_10006590, 188
  store i1 %v1_100067a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067a8, label %dec_label_pc_100080f0, label %dec_label_pc_100067b0

dec_label_pc_100067b0:                            ; preds = %dec_label_pc_100067a8
  %v1_100067b0 = icmp slt i32 %v0_10006590, 45
  %v3_100067b0 = icmp eq i32 %v0_10006590, 45
  store i1 %v1_100067b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067b0, label %dec_label_pc_100080d4, label %dec_label_pc_100067b8

dec_label_pc_100067b8:                            ; preds = %dec_label_pc_100067b0
  %v1_100067b8 = icmp slt i32 %v0_10006590, 178
  %v3_100067b8 = icmp eq i32 %v0_10006590, 178
  store i1 %v1_100067b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067b8, label %dec_label_pc_10008090, label %dec_label_pc_100067c0

dec_label_pc_100067c0:                            ; preds = %dec_label_pc_100067b8
  %v1_100067c0 = icmp slt i32 %v0_10006590, 107
  %v3_100067c0 = icmp eq i32 %v0_10006590, 107
  store i1 %v1_100067c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067c0, label %dec_label_pc_10008064, label %dec_label_pc_100067c8

dec_label_pc_100067c8:                            ; preds = %dec_label_pc_100067c0
  %v1_100067c8 = icmp slt i32 %v0_10006590, 174
  %v3_100067c8 = icmp eq i32 %v0_10006590, 174
  store i1 %v1_100067c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067c8, label %dec_label_pc_10008020, label %dec_label_pc_100067d0

dec_label_pc_100067d0:                            ; preds = %dec_label_pc_100067c8
  %v1_100067d0 = icmp slt i32 %v0_10006590, 37
  %v3_100067d0 = icmp eq i32 %v0_10006590, 37
  store i1 %v1_100067d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067d0, label %dec_label_pc_10008004, label %dec_label_pc_100067d8

dec_label_pc_100067d8:                            ; preds = %dec_label_pc_100067d0
  %v1_100067d8 = icmp slt i32 %v0_10006590, 67
  %v3_100067d8 = icmp eq i32 %v0_10006590, 67
  store i1 %v1_100067d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067d8, label %dec_label_pc_10007fe0, label %dec_label_pc_100067e0

dec_label_pc_100067e0:                            ; preds = %dec_label_pc_100067d8
  %v1_100067e0 = icmp slt i32 %v0_10006590, 82
  %v3_100067e0 = icmp eq i32 %v0_10006590, 82
  store i1 %v1_100067e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067e0, label %dec_label_pc_10007fc4, label %dec_label_pc_100067e8

dec_label_pc_100067e8:                            ; preds = %dec_label_pc_100067e0
  %v1_100067e8 = icmp slt i32 %v0_10006590, 95
  %v3_100067e8 = icmp eq i32 %v0_10006590, 95
  store i1 %v1_100067e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067e8, label %dec_label_pc_10007f58, label %dec_label_pc_100067f0

dec_label_pc_100067f0:                            ; preds = %dec_label_pc_100067e8
  %v1_100067f0 = icmp slt i32 %v0_10006590, 185
  %v3_100067f0 = icmp eq i32 %v0_10006590, 185
  store i1 %v1_100067f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067f0, label %dec_label_pc_10007f1c, label %dec_label_pc_100067f8

dec_label_pc_100067f8:                            ; preds = %dec_label_pc_100067f0
  %v1_100067f8 = icmp slt i32 %v0_10006590, 208
  %v3_100067f8 = icmp eq i32 %v0_10006590, 208
  store i1 %v1_100067f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100067f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100067f8, label %dec_label_pc_10007e8c, label %dec_label_pc_10006800

dec_label_pc_10006800:                            ; preds = %dec_label_pc_100067f8
  %v1_10006800 = icmp slt i32 %v0_10006590, 66
  %v3_10006800 = icmp eq i32 %v0_10006590, 66
  store i1 %v1_10006800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006800, label %dec_label_pc_10007e58, label %dec_label_pc_10006808

dec_label_pc_10006808:                            ; preds = %dec_label_pc_10006800
  %v1_10006808 = icmp slt i32 %v0_10006590, 216
  %v3_10006808 = icmp eq i32 %v0_10006590, 216
  store i1 %v1_10006808, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006808, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006808, label %dec_label_pc_10007e0c, label %dec_label_pc_10006810

dec_label_pc_10006810:                            ; preds = %dec_label_pc_10006808
  %v1_10006810 = icmp slt i32 %v0_10006590, 108
  %v3_10006810 = icmp eq i32 %v0_10006590, 108
  store i1 %v1_10006810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006810, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006810, label %dec_label_pc_10007e00, label %dec_label_pc_10006818

dec_label_pc_10006818:                            ; preds = %dec_label_pc_10006810
  %v1_10006818 = icmp slt i32 %v0_10006590, 63
  %v3_10006818 = icmp eq i32 %v0_10006590, 63
  store i1 %v1_10006818, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006818, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006818, label %dec_label_pc_10007e28, label %dec_label_pc_10006820

dec_label_pc_10006820:                            ; preds = %dec_label_pc_10006818
  %v1_10006820 = icmp slt i32 %v0_10006590, 70
  %v3_10006820 = icmp eq i32 %v0_10006590, 70
  store i1 %v1_10006820, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006820, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006820, label %dec_label_pc_10007de4, label %dec_label_pc_10006828

dec_label_pc_10006828:                            ; preds = %dec_label_pc_10006820
  %v1_10006828 = icmp slt i32 %v0_10006590, 74
  %v3_10006828 = icmp eq i32 %v0_10006590, 74
  store i1 %v1_10006828, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006828, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006828, label %dec_label_pc_10007dc0, label %dec_label_pc_10006830

dec_label_pc_10006830:                            ; preds = %dec_label_pc_10006828
  %v1_10006830 = icmp slt i32 %v0_10006590, 149
  %v3_10006830 = icmp eq i32 %v0_10006590, 149
  store i1 %v1_10006830, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006830, label %dec_label_pc_10007db4, label %dec_label_pc_10006838

dec_label_pc_10006838:                            ; preds = %dec_label_pc_10006830
  %v1_10006838 = icmp slt i32 %v0_10006590, 151
  %v3_10006838 = icmp eq i32 %v0_10006590, 151
  store i1 %v1_10006838, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006838, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006838, label %dec_label_pc_10007da8, label %dec_label_pc_10006840

dec_label_pc_10006840:                            ; preds = %dec_label_pc_10006838
  %v1_10006840 = icmp slt i32 %v0_10006590, 176
  %v3_10006840 = icmp eq i32 %v0_10006590, 176
  store i1 %v1_10006840, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006840, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006840, label %dec_label_pc_10007d9c, label %dec_label_pc_10006848

dec_label_pc_10006848:                            ; preds = %dec_label_pc_10006840
  %v1_10006848 = icmp slt i32 %v0_10006590, 46
  %v3_10006848 = icmp eq i32 %v0_10006590, 46
  store i1 %v1_10006848, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006848, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006848, label %dec_label_pc_10007d90, label %dec_label_pc_10006850

dec_label_pc_10006850:                            ; preds = %dec_label_pc_10006848
  %v1_10006850 = icmp slt i32 %v0_10006590, 51
  %v3_10006850 = icmp eq i32 %v0_10006590, 51
  store i1 %v1_10006850, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006850, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006850, label %dec_label_pc_10007d74, label %dec_label_pc_10006858

dec_label_pc_10006858:                            ; preds = %dec_label_pc_10006850
  %v1_10006858 = icmp slt i32 %v0_10006590, 5
  %v3_10006858 = icmp eq i32 %v0_10006590, 5
  store i1 %v1_10006858, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006858, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006858, label %dec_label_pc_10007d58, label %dec_label_pc_10006860

dec_label_pc_10006860:                            ; preds = %dec_label_pc_10006858
  %v1_10006860 = icmp slt i32 %v0_10006590, 91
  %v3_10006860 = icmp eq i32 %v0_10006590, 91
  store i1 %v1_10006860, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006860, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006860, label %dec_label_pc_10007d4c, label %dec_label_pc_10006868

dec_label_pc_10006868:                            ; preds = %dec_label_pc_10006860
  %v1_10006868 = icmp slt i32 %v0_10006590, 184
  %v3_10006868 = icmp eq i32 %v0_10006590, 184
  store i1 %v1_10006868, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006868, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006868, label %dec_label_pc_10007d30, label %dec_label_pc_10006870

dec_label_pc_10006870:                            ; preds = %dec_label_pc_10006868
  %v1_10006870 = icmp slt i32 %v0_10006590, 206
  %v3_10006870 = icmp eq i32 %v0_10006590, 206
  store i1 %v1_10006870, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006870, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006870, label %dec_label_pc_10007d14, label %dec_label_pc_10006878

dec_label_pc_10006878:                            ; preds = %dec_label_pc_10006870
  %v1_10006878 = icmp slt i32 %v0_10006590, 98
  %v3_10006878 = icmp eq i32 %v0_10006590, 98
  store i1 %v1_10006878, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006878, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006878, label %dec_label_pc_10007cf8, label %dec_label_pc_10006880

dec_label_pc_10006880:                            ; preds = %dec_label_pc_10006878
  %v1_10006880 = icmp slt i32 %v0_10006590, 35
  %v3_10006880 = icmp eq i32 %v0_10006590, 35
  store i1 %v1_10006880, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006880, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006880, label %dec_label_pc_10007ce4, label %dec_label_pc_10006888

dec_label_pc_10006888:                            ; preds = %dec_label_pc_10006880
  %v1_10006888 = icmp slt i32 %v0_10006590, 52
  %v3_10006888 = icmp eq i32 %v0_10006590, 52
  store i1 %v1_10006888, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006888, label %dec_label_pc_10007cc8, label %dec_label_pc_10006890

dec_label_pc_10006890:                            ; preds = %dec_label_pc_10006888
  %v1_10006890 = icmp slt i32 %v0_10006590, 54
  %v3_10006890 = icmp eq i32 %v0_10006590, 54
  store i1 %v1_10006890, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006890, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006890, label %dec_label_pc_10007ca4, label %dec_label_pc_10006898

dec_label_pc_10006898:                            ; preds = %dec_label_pc_10006890
  %v1_10006898 = icmp slt i32 %v0_10006590, 13
  %v3_10006898 = icmp eq i32 %v0_10006590, 13
  store i1 %v1_10006898, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006898, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006898, label %dec_label_pc_10007c80, label %dec_label_pc_100068a0

dec_label_pc_100068a0:                            ; preds = %dec_label_pc_10006898
  %v1_100068a0 = icmp slt i32 %v0_10006590, 79
  %v3_100068a0 = icmp eq i32 %v0_10006590, 79
  store i1 %v1_100068a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a0, label %dec_label_pc_10007c64, label %dec_label_pc_100068a8

dec_label_pc_100068a8:                            ; preds = %dec_label_pc_100068a0
  %v1_100068a8 = icmp slt i32 %v0_10006590, 212
  %v3_100068a8 = icmp eq i32 %v0_10006590, 212
  store i1 %v1_100068a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068a8, label %dec_label_pc_10007c48, label %dec_label_pc_100068b0

dec_label_pc_100068b0:                            ; preds = %dec_label_pc_100068a8
  %v1_100068b0 = icmp slt i32 %v0_10006590, 89
  %v3_100068b0 = icmp eq i32 %v0_10006590, 89
  store i1 %v1_100068b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068b0, label %dec_label_pc_10007c2c, label %dec_label_pc_100068b8

dec_label_pc_100068b8:                            ; preds = %dec_label_pc_100068b0
  %v1_100068b8 = icmp slt i32 %v0_10006590, 219
  %v3_100068b8 = icmp eq i32 %v0_10006590, 219
  store i1 %v1_100068b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068b8, label %dec_label_pc_10007c18, label %dec_label_pc_100068c0

dec_label_pc_100068c0:                            ; preds = %dec_label_pc_100068b8
  %v1_100068c0 = icmp slt i32 %v0_10006590, 23
  %v3_100068c0 = icmp eq i32 %v0_10006590, 23
  store i1 %v1_100068c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068c0, label %dec_label_pc_10007c04, label %dec_label_pc_100068c8

dec_label_pc_100068c8:                            ; preds = %dec_label_pc_100068c0
  %v1_100068c8 = icmp slt i32 %v0_10006590, 106
  %v3_100068c8 = icmp eq i32 %v0_10006590, 106
  store i1 %v1_100068c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068c8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068c8, label %dec_label_pc_10007bf0, label %dec_label_pc_100068d0

dec_label_pc_100068d0:                            ; preds = %dec_label_pc_100068c8
  %v1_100068d0 = icmp slt i32 %v0_10006590, 34
  %v3_100068d0 = icmp eq i32 %v0_10006590, 34
  store i1 %v1_100068d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068d0, label %dec_label_pc_10007bdc, label %dec_label_pc_100068d8

dec_label_pc_100068d8:                            ; preds = %dec_label_pc_100068d0
  %v1_100068d8 = icmp slt i32 %v0_10006590, 87
  %v3_100068d8 = icmp eq i32 %v0_10006590, 87
  store i1 %v1_100068d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068d8, label %dec_label_pc_10007bc8, label %dec_label_pc_100068e0

dec_label_pc_100068e0:                            ; preds = %dec_label_pc_100068d8
  %v1_100068e0 = icmp slt i32 %v0_10006590, 86
  %v3_100068e0 = icmp eq i32 %v0_10006590, 86
  store i1 %v1_100068e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068e0, label %dec_label_pc_10007bb4, label %dec_label_pc_100068e8

dec_label_pc_100068e8:                            ; preds = %dec_label_pc_100068e0
  %v1_100068e8 = icmp slt i32 %v0_10006590, 193
  %v3_100068e8 = icmp eq i32 %v0_10006590, 193
  store i1 %v1_100068e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068e8, label %dec_label_pc_10007ba8, label %dec_label_pc_100068f0

dec_label_pc_100068f0:                            ; preds = %dec_label_pc_100068e8
  %v1_100068f0 = icmp slt i32 %v0_10006590, 120
  %v3_100068f0 = icmp eq i32 %v0_10006590, 120
  store i1 %v1_100068f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068f0, label %dec_label_pc_10007b94, label %dec_label_pc_100068f8

dec_label_pc_100068f8:                            ; preds = %dec_label_pc_100068f0
  %v1_100068f8 = icmp slt i32 %v0_10006590, 78
  %v3_100068f8 = icmp eq i32 %v0_10006590, 78
  store i1 %v1_100068f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100068f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100068f8, label %dec_label_pc_10007b88, label %dec_label_pc_10006900

dec_label_pc_10006900:                            ; preds = %dec_label_pc_100068f8
  %v1_10006900 = icmp slt i32 %v0_10006590, 224
  %v3_10006900 = icmp eq i32 %v0_10006590, 224
  store i1 %v1_10006900, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006900, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006900, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10006908:                            ; preds = %dec_label_pc_10008760, %dec_label_pc_1000874c, %dec_label_pc_10008738, %dec_label_pc_10008724, %dec_label_pc_100086c8, %dec_label_pc_100086a4, %dec_label_pc_10008680, %dec_label_pc_10008674, %dec_label_pc_10008650, %dec_label_pc_10008644, %dec_label_pc_100085f0, %dec_label_pc_100085c4, %dec_label_pc_100085b8, %dec_label_pc_100085a4, %dec_label_pc_10008588, %dec_label_pc_1000857c, %dec_label_pc_10008570, %dec_label_pc_10008534, %dec_label_pc_10008520, %dec_label_pc_100084fc, %dec_label_pc_100084e8, %dec_label_pc_10008478, %dec_label_pc_1000844c, %dec_label_pc_10008438, %dec_label_pc_10008424, %dec_label_pc_10008410, %dec_label_pc_100083f4, %dec_label_pc_100083b8, %dec_label_pc_100083a4, %dec_label_pc_10008390, %dec_label_pc_1000837c, %dec_label_pc_10008368, %dec_label_pc_10008354, %dec_label_pc_10008340, %dec_label_pc_100082ec, %dec_label_pc_100082d8, %dec_label_pc_100082c4, %dec_label_pc_100082b0, %dec_label_pc_1000829c, %dec_label_pc_10008278, %dec_label_pc_1000825c, %dec_label_pc_10008248, %dec_label_pc_10008234, %dec_label_pc_10008220, %dec_label_pc_1000820c, %dec_label_pc_100081f8, %dec_label_pc_100081cc, %dec_label_pc_100081b8, %dec_label_pc_100081a4, %dec_label_pc_10008190, %dec_label_pc_1000817c, %dec_label_pc_10008138, %dec_label_pc_10008124, %dec_label_pc_10008110, %dec_label_pc_100080e4, %dec_label_pc_100080c8, %dec_label_pc_100080b4, %dec_label_pc_100080a0, %dec_label_pc_10008084, %dec_label_pc_10008058, %dec_label_pc_10008044, %dec_label_pc_10008030, %dec_label_pc_10008014, %dec_label_pc_10007ff8, %dec_label_pc_10007fd4, %dec_label_pc_10007fb8, %dec_label_pc_10007fa4, %dec_label_pc_10007f90, %dec_label_pc_10007f7c, %dec_label_pc_10007f68, %dec_label_pc_10007f4c, %dec_label_pc_10007f10, %dec_label_pc_10007efc, %dec_label_pc_10007ee8, %dec_label_pc_10007ed4, %dec_label_pc_10007ec0, %dec_label_pc_10007eac, %dec_label_pc_10007e80, %dec_label_pc_10007e4c, %dec_label_pc_10007e38, %dec_label_pc_10007e1c, %dec_label_pc_10007e00, %dec_label_pc_10007df4, %dec_label_pc_10007dd8, %dec_label_pc_10007db4, %dec_label_pc_10007da8, %dec_label_pc_10007d9c, %dec_label_pc_10007d90, %dec_label_pc_10007d84, %dec_label_pc_10007d68, %dec_label_pc_10007d4c, %dec_label_pc_10007d40, %dec_label_pc_10007d24, %dec_label_pc_10007d08, %dec_label_pc_10007cec, %dec_label_pc_10007cd8, %dec_label_pc_10007cbc, %dec_label_pc_10007c98, %dec_label_pc_10007c74, %dec_label_pc_10007c58, %dec_label_pc_10007c3c, %dec_label_pc_10007c20, %dec_label_pc_10007c0c, %dec_label_pc_10007bf8, %dec_label_pc_10007be4, %dec_label_pc_10007bd0, %dec_label_pc_10007bbc, %dec_label_pc_10007ba8, %dec_label_pc_10007b9c, %dec_label_pc_10007b88, %dec_label_pc_10006cd0, %dec_label_pc_10006cbc, %dec_label_pc_10006b60, %dec_label_pc_10006b14, %dec_label_pc_10006b04, %dec_label_pc_10006b50, %dec_label_pc_10008560, %dec_label_pc_10008510, %dec_label_pc_100084d8, %dec_label_pc_10008468, %dec_label_pc_100083e4, %dec_label_pc_100081e8, %dec_label_pc_1000816c, %dec_label_pc_10008020, %dec_label_pc_10007fe8, %dec_label_pc_10007fc4, %dec_label_pc_10007f58, %dec_label_pc_10007f3c, %dec_label_pc_10007e9c, %dec_label_pc_10007e70, %dec_label_pc_10007e0c, %dec_label_pc_10007e28, %dec_label_pc_10007de4, %dec_label_pc_10007dc8, %dec_label_pc_10007d30, %dec_label_pc_10007d14, %dec_label_pc_10007cf8, %dec_label_pc_10007c64, %dec_label_pc_10007c48, %dec_label_pc_10007c2c, %dec_label_pc_10008758, %dec_label_pc_10008744, %dec_label_pc_10008730, %dec_label_pc_1000871c, %dec_label_pc_100086c0, %dec_label_pc_1000869c, %dec_label_pc_1000863c, %dec_label_pc_10008568, %dec_label_pc_10008518, %dec_label_pc_100084f4, %dec_label_pc_100084e0, %dec_label_pc_10008470, %dec_label_pc_10008444, %dec_label_pc_10008430, %dec_label_pc_1000841c, %dec_label_pc_10008408, %dec_label_pc_100083ec, %dec_label_pc_100083b0, %dec_label_pc_1000839c, %dec_label_pc_10008388, %dec_label_pc_10008374, %dec_label_pc_10008360, %dec_label_pc_1000834c, %dec_label_pc_10008338, %dec_label_pc_100082e4, %dec_label_pc_100082d0, %dec_label_pc_100082bc, %dec_label_pc_100082a8, %dec_label_pc_10008294, %dec_label_pc_10008284, %dec_label_pc_10008254, %dec_label_pc_10008240, %dec_label_pc_1000822c, %dec_label_pc_10008218, %dec_label_pc_100081f0, %dec_label_pc_1000819c, %dec_label_pc_10008188, %dec_label_pc_10008174, %dec_label_pc_10008130, %dec_label_pc_1000811c, %dec_label_pc_100080c0, %dec_label_pc_100080ac, %dec_label_pc_1000807c, %dec_label_pc_10008050, %dec_label_pc_1000803c, %dec_label_pc_10008028, %dec_label_pc_10007ff0, %dec_label_pc_10007fcc, %dec_label_pc_10007fb0, %dec_label_pc_10007f9c, %dec_label_pc_10007f88, %dec_label_pc_10007f74, %dec_label_pc_10007f60, %dec_label_pc_10007f44, %dec_label_pc_10007f08, %dec_label_pc_10007ef4, %dec_label_pc_10007ee0, %dec_label_pc_10007ecc, %dec_label_pc_10007eb8, %dec_label_pc_10007ea4, %dec_label_pc_10007e78, %dec_label_pc_10007e44, %dec_label_pc_10007e30, %dec_label_pc_10007e14, %dec_label_pc_10007dec, %dec_label_pc_10007dd0, %dec_label_pc_10007d38, %dec_label_pc_10007d1c, %dec_label_pc_10007d00, %dec_label_pc_10007ce4, %dec_label_pc_10007cc8, %dec_label_pc_10007cb4, %dec_label_pc_10007c90, %dec_label_pc_10007c6c, %dec_label_pc_10007c50, %dec_label_pc_10007c34, %dec_label_pc_10007c18, %dec_label_pc_10007c04, %dec_label_pc_10007bf0, %dec_label_pc_10007bdc, %dec_label_pc_10007bc8, %dec_label_pc_10007b94, %dec_label_pc_10006cb4, %dec_label_pc_10006b58, %dec_label_pc_10006b0c, %dec_label_pc_10006900, %dec_label_pc_1000871c.thread, %dec_label_pc_10008650.thread, %dec_label_pc_1000863c.thread, %dec_label_pc_10007cb4.thread, %dec_label_pc_10007c90.thread, %dec_label_pc_10008674.thread, %dec_label_pc_10008560.thread, %dec_label_pc_100084b4, %dec_label_pc_10008468.thread, %dec_label_pc_100083e4.thread, %dec_label_pc_1000832c, %dec_label_pc_10008308, %dec_label_pc_10008278.thread, %dec_label_pc_1000816c.thread, %dec_label_pc_10006b50.thread
  %v0_10006590594 = phi i32 [ 162, %dec_label_pc_10008674.thread ], [ 207, %dec_label_pc_10008560.thread ], [ 64, %dec_label_pc_100084b4 ], [ 172, %dec_label_pc_10008468.thread ], [ 198, %dec_label_pc_100083e4.thread ], [ 138, %dec_label_pc_1000832c ], [ 139, %dec_label_pc_10008308 ], [ 159, %dec_label_pc_10008278.thread ], [ 104, %dec_label_pc_1000816c.thread ], [ 146, %dec_label_pc_10006b50.thread ], [ 13, %dec_label_pc_10007c90.thread ], [ 54, %dec_label_pc_10007cb4.thread ], [ 155, %dec_label_pc_1000863c.thread ], [ 164, %dec_label_pc_10008650.thread ], [ 147, %dec_label_pc_1000871c.thread ], [ %v0_10006590, %dec_label_pc_10006900 ], [ 192, %dec_label_pc_10006b0c ], [ 146, %dec_label_pc_10006b58 ], [ 150, %dec_label_pc_10006cb4 ], [ 120, %dec_label_pc_10007b94 ], [ 87, %dec_label_pc_10007bc8 ], [ 34, %dec_label_pc_10007bdc ], [ 106, %dec_label_pc_10007bf0 ], [ 23, %dec_label_pc_10007c04 ], [ 219, %dec_label_pc_10007c18 ], [ 89, %dec_label_pc_10007c34 ], [ 212, %dec_label_pc_10007c50 ], [ 79, %dec_label_pc_10007c6c ], [ 13, %dec_label_pc_10007c90 ], [ 54, %dec_label_pc_10007cb4 ], [ 52, %dec_label_pc_10007cc8 ], [ 35, %dec_label_pc_10007ce4 ], [ 98, %dec_label_pc_10007d00 ], [ 206, %dec_label_pc_10007d1c ], [ 184, %dec_label_pc_10007d38 ], [ 74, %dec_label_pc_10007dd0 ], [ 70, %dec_label_pc_10007dec ], [ 216, %dec_label_pc_10007e14 ], [ 63, %dec_label_pc_10007e30 ], [ 74, %dec_label_pc_10007e44 ], [ 66, %dec_label_pc_10007e78 ], [ 208, %dec_label_pc_10007ea4 ], [ 66, %dec_label_pc_10007eb8 ], [ 208, %dec_label_pc_10007ecc ], [ 208, %dec_label_pc_10007ee0 ], [ 66, %dec_label_pc_10007ef4 ], [ 66, %dec_label_pc_10007f08 ], [ 185, %dec_label_pc_10007f44 ], [ 95, %dec_label_pc_10007f60 ], [ 185, %dec_label_pc_10007f74 ], [ 185, %dec_label_pc_10007f88 ], [ 185, %dec_label_pc_10007f9c ], [ 185, %dec_label_pc_10007fb0 ], [ 82, %dec_label_pc_10007fcc ], [ 67, %dec_label_pc_10007ff0 ], [ 174, %dec_label_pc_10008028 ], [ 67, %dec_label_pc_1000803c ], [ 37, %dec_label_pc_10008050 ], [ 107, %dec_label_pc_1000807c ], [ 107, %dec_label_pc_100080ac ], [ 107, %dec_label_pc_100080c0 ], [ 45, %dec_label_pc_1000811c ], [ 188, %dec_label_pc_10008130 ], [ 104, %dec_label_pc_10008174 ], [ 205, %dec_label_pc_10008188 ], [ 104, %dec_label_pc_1000819c ], [ 199, %dec_label_pc_100081f0 ], [ 199, %dec_label_pc_10008218 ], [ 199, %dec_label_pc_1000822c ], [ 163, %dec_label_pc_10008240 ], [ 160, %dec_label_pc_10008254 ], [ 158, %dec_label_pc_10008284 ], [ 158, %dec_label_pc_10008294 ], [ 153, %dec_label_pc_100082a8 ], [ 144, %dec_label_pc_100082bc ], [ 143, %dec_label_pc_100082d0 ], [ 140, %dec_label_pc_100082e4 ], [ 136, %dec_label_pc_10008338 ], [ 134, %dec_label_pc_1000834c ], [ 132, %dec_label_pc_10008360 ], [ 131, %dec_label_pc_10008374 ], [ 130, %dec_label_pc_10008388 ], [ 129, %dec_label_pc_1000839c ], [ 128, %dec_label_pc_100083b0 ], [ 198, %dec_label_pc_100083ec ], [ 169, %dec_label_pc_10008408 ], [ 198, %dec_label_pc_1000841c ], [ 198, %dec_label_pc_10008430 ], [ 100, %dec_label_pc_10008444 ], [ 172, %dec_label_pc_10008470 ], [ 209, %dec_label_pc_100084e0 ], [ 64, %dec_label_pc_100084f4 ], [ 80, %dec_label_pc_10008518 ], [ 207, %dec_label_pc_10008568 ], [ 155, %dec_label_pc_1000863c ], [ 157, %dec_label_pc_1000869c ], [ 152, %dec_label_pc_100086c0 ], [ 147, %dec_label_pc_1000871c ], [ 192, %dec_label_pc_10008730 ], [ 192, %dec_label_pc_10008744 ], [ 192, %dec_label_pc_10008758 ], [ 89, %dec_label_pc_10007c2c ], [ 212, %dec_label_pc_10007c48 ], [ 79, %dec_label_pc_10007c64 ], [ 98, %dec_label_pc_10007cf8 ], [ 206, %dec_label_pc_10007d14 ], [ 184, %dec_label_pc_10007d30 ], [ 74, %dec_label_pc_10007dc8 ], [ 70, %dec_label_pc_10007de4 ], [ 63, %dec_label_pc_10007e28 ], [ 216, %dec_label_pc_10007e0c ], [ 66, %dec_label_pc_10007e70 ], [ 208, %dec_label_pc_10007e9c ], [ 185, %dec_label_pc_10007f3c ], [ 95, %dec_label_pc_10007f58 ], [ 82, %dec_label_pc_10007fc4 ], [ 67, %dec_label_pc_10007fe8 ], [ 174, %dec_label_pc_10008020 ], [ 104, %dec_label_pc_1000816c ], [ 199, %dec_label_pc_100081e8 ], [ 198, %dec_label_pc_100083e4 ], [ 172, %dec_label_pc_10008468 ], [ 209, %dec_label_pc_100084d8 ], [ 80, %dec_label_pc_10008510 ], [ 207, %dec_label_pc_10008560 ], [ 146, %dec_label_pc_10006b50 ], [ 192, %dec_label_pc_10006b04 ], [ 192, %dec_label_pc_10006b14 ], [ 146, %dec_label_pc_10006b60 ], [ 150, %dec_label_pc_10006cbc ], [ 148, %dec_label_pc_10006cd0 ], [ 78, %dec_label_pc_10007b88 ], [ 120, %dec_label_pc_10007b9c ], [ 193, %dec_label_pc_10007ba8 ], [ 86, %dec_label_pc_10007bbc ], [ 87, %dec_label_pc_10007bd0 ], [ 34, %dec_label_pc_10007be4 ], [ 106, %dec_label_pc_10007bf8 ], [ 23, %dec_label_pc_10007c0c ], [ 219, %dec_label_pc_10007c20 ], [ 89, %dec_label_pc_10007c3c ], [ 212, %dec_label_pc_10007c58 ], [ 79, %dec_label_pc_10007c74 ], [ 13, %dec_label_pc_10007c98 ], [ 54, %dec_label_pc_10007cbc ], [ 52, %dec_label_pc_10007cd8 ], [ 35, %dec_label_pc_10007cec ], [ 98, %dec_label_pc_10007d08 ], [ 206, %dec_label_pc_10007d24 ], [ 184, %dec_label_pc_10007d40 ], [ 91, %dec_label_pc_10007d4c ], [ 5, %dec_label_pc_10007d68 ], [ 51, %dec_label_pc_10007d84 ], [ 46, %dec_label_pc_10007d90 ], [ 176, %dec_label_pc_10007d9c ], [ 151, %dec_label_pc_10007da8 ], [ 149, %dec_label_pc_10007db4 ], [ 74, %dec_label_pc_10007dd8 ], [ 70, %dec_label_pc_10007df4 ], [ 108, %dec_label_pc_10007e00 ], [ 216, %dec_label_pc_10007e1c ], [ 63, %dec_label_pc_10007e38 ], [ 74, %dec_label_pc_10007e4c ], [ 66, %dec_label_pc_10007e80 ], [ 208, %dec_label_pc_10007eac ], [ 66, %dec_label_pc_10007ec0 ], [ 208, %dec_label_pc_10007ed4 ], [ 208, %dec_label_pc_10007ee8 ], [ 66, %dec_label_pc_10007efc ], [ 66, %dec_label_pc_10007f10 ], [ 185, %dec_label_pc_10007f4c ], [ 95, %dec_label_pc_10007f68 ], [ 185, %dec_label_pc_10007f7c ], [ 185, %dec_label_pc_10007f90 ], [ 185, %dec_label_pc_10007fa4 ], [ 185, %dec_label_pc_10007fb8 ], [ 82, %dec_label_pc_10007fd4 ], [ 67, %dec_label_pc_10007ff8 ], [ 37, %dec_label_pc_10008014 ], [ 174, %dec_label_pc_10008030 ], [ 67, %dec_label_pc_10008044 ], [ 37, %dec_label_pc_10008058 ], [ 107, %dec_label_pc_10008084 ], [ 178, %dec_label_pc_100080a0 ], [ 107, %dec_label_pc_100080b4 ], [ 107, %dec_label_pc_100080c8 ], [ 45, %dec_label_pc_100080e4 ], [ 188, %dec_label_pc_10008110 ], [ 45, %dec_label_pc_10008124 ], [ 188, %dec_label_pc_10008138 ], [ 104, %dec_label_pc_1000817c ], [ 205, %dec_label_pc_10008190 ], [ 104, %dec_label_pc_100081a4 ], [ 199, %dec_label_pc_100081b8 ], [ 163, %dec_label_pc_100081cc ], [ 199, %dec_label_pc_100081f8 ], [ 163, %dec_label_pc_1000820c ], [ 199, %dec_label_pc_10008220 ], [ 199, %dec_label_pc_10008234 ], [ 163, %dec_label_pc_10008248 ], [ 160, %dec_label_pc_1000825c ], [ 159, %dec_label_pc_10008278 ], [ 158, %dec_label_pc_1000829c ], [ 153, %dec_label_pc_100082b0 ], [ 144, %dec_label_pc_100082c4 ], [ 143, %dec_label_pc_100082d8 ], [ 140, %dec_label_pc_100082ec ], [ 136, %dec_label_pc_10008340 ], [ 134, %dec_label_pc_10008354 ], [ 132, %dec_label_pc_10008368 ], [ 131, %dec_label_pc_1000837c ], [ 130, %dec_label_pc_10008390 ], [ 129, %dec_label_pc_100083a4 ], [ 128, %dec_label_pc_100083b8 ], [ 198, %dec_label_pc_100083f4 ], [ 169, %dec_label_pc_10008410 ], [ 198, %dec_label_pc_10008424 ], [ 198, %dec_label_pc_10008438 ], [ 100, %dec_label_pc_1000844c ], [ 172, %dec_label_pc_10008478 ], [ 209, %dec_label_pc_100084e8 ], [ 64, %dec_label_pc_100084fc ], [ 80, %dec_label_pc_10008520 ], [ 117, %dec_label_pc_10008534 ], [ 207, %dec_label_pc_10008570 ], [ 204, %dec_label_pc_1000857c ], [ 203, %dec_label_pc_10008588 ], [ 168, %dec_label_pc_100085a4 ], [ 167, %dec_label_pc_100085b8 ], [ 156, %dec_label_pc_100085c4 ], [ 164, %dec_label_pc_100085f0 ], [ 155, %dec_label_pc_10008644 ], [ 164, %dec_label_pc_10008650 ], [ 162, %dec_label_pc_10008674 ], [ 161, %dec_label_pc_10008680 ], [ 157, %dec_label_pc_100086a4 ], [ 152, %dec_label_pc_100086c8 ], [ 147, %dec_label_pc_10008724 ], [ 192, %dec_label_pc_10008738 ], [ 192, %dec_label_pc_1000874c ], [ 192, %dec_label_pc_10008760 ]
  %v1_10006584128 = phi i32 [ %v1_10006584, %dec_label_pc_10008674.thread ], [ %v1_10006584, %dec_label_pc_10008560.thread ], [ %v1_10006584, %dec_label_pc_100084b4 ], [ %v1_10006584, %dec_label_pc_10008468.thread ], [ %v1_10006584, %dec_label_pc_100083e4.thread ], [ %v1_10006584, %dec_label_pc_1000832c ], [ %v1_10006584, %dec_label_pc_10008308 ], [ %v1_10006584, %dec_label_pc_10008278.thread ], [ %v1_10006584, %dec_label_pc_1000816c.thread ], [ %v1_10006584, %dec_label_pc_10006b50.thread ], [ %v1_10006584, %dec_label_pc_10007c90.thread ], [ %v1_10006584, %dec_label_pc_10007cb4.thread ], [ %v1_10006584, %dec_label_pc_1000863c.thread ], [ %v1_10006584, %dec_label_pc_10008650.thread ], [ %v1_10006584, %dec_label_pc_1000871c.thread ], [ %v1_10006584, %dec_label_pc_10006900 ], [ 40, %dec_label_pc_10006b0c ], [ 185, %dec_label_pc_10006b58 ], [ %v1_10006584, %dec_label_pc_10006cb4 ], [ %v1_10006584, %dec_label_pc_10007b94 ], [ %v1_10006584, %dec_label_pc_10007bc8 ], [ %v1_10006584, %dec_label_pc_10007bdc ], [ %v1_10006584, %dec_label_pc_10007bf0 ], [ %v1_10006584, %dec_label_pc_10007c04 ], [ %v1_10006584, %dec_label_pc_10007c18 ], [ 34, %dec_label_pc_10007c34 ], [ 47, %dec_label_pc_10007c50 ], [ 121, %dec_label_pc_10007c6c ], [ %v1_10006584, %dec_label_pc_10007c90 ], [ %v1_10006584, %dec_label_pc_10007cb4 ], [ 0, %dec_label_pc_10007cc8 ], [ %v1_10006584, %dec_label_pc_10007ce4 ], [ 142, %dec_label_pc_10007d00 ], [ 220, %dec_label_pc_10007d1c ], [ 170, %dec_label_pc_10007d38 ], [ 201, %dec_label_pc_10007dd0 ], [ 42, %dec_label_pc_10007dec ], [ 237, %dec_label_pc_10007e14 ], [ 251, %dec_label_pc_10007e30 ], [ 91, %dec_label_pc_10007e44 ], [ 71, %dec_label_pc_10007e78 ], [ 93, %dec_label_pc_10007ea4 ], [ 151, %dec_label_pc_10007eb8 ], [ 78, %dec_label_pc_10007ecc ], [ 167, %dec_label_pc_10007ee0 ], [ 150, %dec_label_pc_10007ef4 ], [ 55, %dec_label_pc_10007f08 ], [ 62, %dec_label_pc_10007f44 ], [ 85, %dec_label_pc_10007f60 ], [ 61, %dec_label_pc_10007f74 ], [ 56, %dec_label_pc_10007f88 ], [ 11, %dec_label_pc_10007f9c ], [ 92, %dec_label_pc_10007fb0 ], [ 196, %dec_label_pc_10007fcc ], [ 205, %dec_label_pc_10007ff0 ], [ 138, %dec_label_pc_10008028 ], [ 207, %dec_label_pc_1000803c ], [ 139, %dec_label_pc_10008050 ], [ %v1_10006584, %dec_label_pc_1000807c ], [ 181, %dec_label_pc_100080ac ], [ 152, %dec_label_pc_100080c0 ], [ 63, %dec_label_pc_1000811c ], [ 209, %dec_label_pc_10008130 ], [ 200, %dec_label_pc_10008174 ], [ 0, %dec_label_pc_10008188 ], [ 238, %dec_label_pc_1000819c ], [ 58, %dec_label_pc_100081f0 ], [ 36, %dec_label_pc_10008218 ], [ 116, %dec_label_pc_1000822c ], [ 47, %dec_label_pc_10008240 ], [ %v1_10006584, %dec_label_pc_10008254 ], [ 0, %dec_label_pc_10008284 ], [ %v1_10006584, %dec_label_pc_10008294 ], [ %v1_10006584, %dec_label_pc_100082a8 ], [ %v1_10006584, %dec_label_pc_100082bc ], [ %v1_10006584, %dec_label_pc_100082d0 ], [ 0, %dec_label_pc_100082e4 ], [ %v1_10006584, %dec_label_pc_10008338 ], [ %v1_10006584, %dec_label_pc_1000834c ], [ %v1_10006584, %dec_label_pc_10008360 ], [ %v1_10006584, %dec_label_pc_10008374 ], [ %v1_10006584, %dec_label_pc_10008388 ], [ %v1_10006584, %dec_label_pc_1000839c ], [ %v1_10006584, %dec_label_pc_100083b0 ], [ 8, %dec_label_pc_100083ec ], [ %v1_10006584, %dec_label_pc_10008408 ], [ 211, %dec_label_pc_1000841c ], [ 199, %dec_label_pc_10008430 ], [ %v1_10006584, %dec_label_pc_10008444 ], [ 98, %dec_label_pc_10008470 ], [ 222, %dec_label_pc_100084e0 ], [ 237, %dec_label_pc_100084f4 ], [ 240, %dec_label_pc_10008518 ], [ 154, %dec_label_pc_10008568 ], [ %v1_10006584, %dec_label_pc_1000863c ], [ %v1_10006584, %dec_label_pc_1000869c ], [ %v1_10006584, %dec_label_pc_100086c0 ], [ %v1_10006584, %dec_label_pc_1000871c ], [ 252, %dec_label_pc_10008730 ], [ 111, %dec_label_pc_10008744 ], [ 241, %dec_label_pc_10008758 ], [ %v1_10006584, %dec_label_pc_10007c2c ], [ %v1_10006584, %dec_label_pc_10007c48 ], [ %v1_10006584, %dec_label_pc_10007c64 ], [ %v1_10006584, %dec_label_pc_10007cf8 ], [ %v1_10006584, %dec_label_pc_10007d14 ], [ %v1_10006584, %dec_label_pc_10007d30 ], [ %v1_10006584, %dec_label_pc_10007dc8 ], [ %v1_10006584, %dec_label_pc_10007de4 ], [ %v1_10006584, %dec_label_pc_10007e28 ], [ %v1_10006584, %dec_label_pc_10007e0c ], [ %v1_10006584, %dec_label_pc_10007e70 ], [ %v1_10006584, %dec_label_pc_10007e9c ], [ %v1_10006584, %dec_label_pc_10007f3c ], [ %v1_10006584, %dec_label_pc_10007f58 ], [ %v1_10006584, %dec_label_pc_10007fc4 ], [ %v1_10006584, %dec_label_pc_10007fe8 ], [ %v1_10006584, %dec_label_pc_10008020 ], [ %v1_10006584, %dec_label_pc_1000816c ], [ %v1_10006584, %dec_label_pc_100081e8 ], [ %v1_10006584, %dec_label_pc_100083e4 ], [ %v1_10006584, %dec_label_pc_10008468 ], [ %v1_10006584, %dec_label_pc_100084d8 ], [ %v1_10006584, %dec_label_pc_10008510 ], [ %v1_10006584, %dec_label_pc_10008560 ], [ %v1_10006584, %dec_label_pc_10006b50 ], [ %v1_10006584, %dec_label_pc_10006b04 ], [ 40, %dec_label_pc_10006b14 ], [ 185, %dec_label_pc_10006b60 ], [ %v1_10006584, %dec_label_pc_10006cbc ], [ %v1_10006584, %dec_label_pc_10006cd0 ], [ %v1_10006584, %dec_label_pc_10007b88 ], [ %v1_10006584, %dec_label_pc_10007b9c ], [ %v1_10006584, %dec_label_pc_10007ba8 ], [ %v1_10006584, %dec_label_pc_10007bbc ], [ %v1_10006584, %dec_label_pc_10007bd0 ], [ 255, %dec_label_pc_10007be4 ], [ %v1_10006584, %dec_label_pc_10007bf8 ], [ %v1_10006584, %dec_label_pc_10007c0c ], [ %v1_10006584, %dec_label_pc_10007c20 ], [ 34, %dec_label_pc_10007c3c ], [ 47, %dec_label_pc_10007c58 ], [ 121, %dec_label_pc_10007c74 ], [ %v1_10006584, %dec_label_pc_10007c98 ], [ 255, %dec_label_pc_10007cbc ], [ 255, %dec_label_pc_10007cd8 ], [ %v1_10006584, %dec_label_pc_10007cec ], [ 142, %dec_label_pc_10007d08 ], [ 220, %dec_label_pc_10007d24 ], [ 170, %dec_label_pc_10007d40 ], [ %v1_10006584, %dec_label_pc_10007d4c ], [ %v1_10006584, %dec_label_pc_10007d68 ], [ %v1_10006584, %dec_label_pc_10007d84 ], [ %v1_10006584, %dec_label_pc_10007d90 ], [ %v1_10006584, %dec_label_pc_10007d9c ], [ %v1_10006584, %dec_label_pc_10007da8 ], [ %v1_10006584, %dec_label_pc_10007db4 ], [ 201, %dec_label_pc_10007dd8 ], [ 42, %dec_label_pc_10007df4 ], [ %v1_10006584, %dec_label_pc_10007e00 ], [ 237, %dec_label_pc_10007e1c ], [ 251, %dec_label_pc_10007e38 ], [ 91, %dec_label_pc_10007e4c ], [ 71, %dec_label_pc_10007e80 ], [ 93, %dec_label_pc_10007eac ], [ 151, %dec_label_pc_10007ec0 ], [ 78, %dec_label_pc_10007ed4 ], [ 167, %dec_label_pc_10007ee8 ], [ 150, %dec_label_pc_10007efc ], [ 55, %dec_label_pc_10007f10 ], [ 62, %dec_label_pc_10007f4c ], [ 85, %dec_label_pc_10007f68 ], [ 61, %dec_label_pc_10007f7c ], [ 56, %dec_label_pc_10007f90 ], [ 11, %dec_label_pc_10007fa4 ], [ 92, %dec_label_pc_10007fb8 ], [ 196, %dec_label_pc_10007fd4 ], [ 205, %dec_label_pc_10007ff8 ], [ %v1_10006584, %dec_label_pc_10008014 ], [ 138, %dec_label_pc_10008030 ], [ 207, %dec_label_pc_10008044 ], [ 139, %dec_label_pc_10008058 ], [ %v1_10006584, %dec_label_pc_10008084 ], [ %v1_10006584, %dec_label_pc_100080a0 ], [ 181, %dec_label_pc_100080b4 ], [ 152, %dec_label_pc_100080c8 ], [ %v1_10006584, %dec_label_pc_100080e4 ], [ %v1_10006584, %dec_label_pc_10008110 ], [ 63, %dec_label_pc_10008124 ], [ 209, %dec_label_pc_10008138 ], [ 200, %dec_label_pc_1000817c ], [ %v1_10006584, %dec_label_pc_10008190 ], [ 238, %dec_label_pc_100081a4 ], [ %v1_10006584, %dec_label_pc_100081b8 ], [ %v1_10006584, %dec_label_pc_100081cc ], [ 58, %dec_label_pc_100081f8 ], [ %v1_10006584, %dec_label_pc_1000820c ], [ 36, %dec_label_pc_10008220 ], [ 116, %dec_label_pc_10008234 ], [ 47, %dec_label_pc_10008248 ], [ %v1_10006584, %dec_label_pc_1000825c ], [ %v1_10006584, %dec_label_pc_10008278 ], [ %v1_10006584, %dec_label_pc_1000829c ], [ %v1_10006584, %dec_label_pc_100082b0 ], [ %v1_10006584, %dec_label_pc_100082c4 ], [ %v1_10006584, %dec_label_pc_100082d8 ], [ %v1_10006584, %dec_label_pc_100082ec ], [ %v1_10006584, %dec_label_pc_10008340 ], [ %v1_10006584, %dec_label_pc_10008354 ], [ %v1_10006584, %dec_label_pc_10008368 ], [ %v1_10006584, %dec_label_pc_1000837c ], [ %v1_10006584, %dec_label_pc_10008390 ], [ 255, %dec_label_pc_100083a4 ], [ %v1_10006584, %dec_label_pc_100083b8 ], [ 8, %dec_label_pc_100083f4 ], [ %v1_10006584, %dec_label_pc_10008410 ], [ 211, %dec_label_pc_10008424 ], [ 199, %dec_label_pc_10008438 ], [ %v1_10006584, %dec_label_pc_1000844c ], [ 98, %dec_label_pc_10008478 ], [ 222, %dec_label_pc_100084e8 ], [ 237, %dec_label_pc_100084fc ], [ 240, %dec_label_pc_10008520 ], [ %v1_10006584, %dec_label_pc_10008534 ], [ 154, %dec_label_pc_10008570 ], [ %v1_10006584, %dec_label_pc_1000857c ], [ %v1_10006584, %dec_label_pc_10008588 ], [ %v1_10006584, %dec_label_pc_100085a4 ], [ %v1_10006584, %dec_label_pc_100085b8 ], [ %v1_10006584, %dec_label_pc_100085c4 ], [ %v1_10006584, %dec_label_pc_100085f0 ], [ %v1_10006584, %dec_label_pc_10008644 ], [ %v1_10006584, %dec_label_pc_10008650 ], [ %v1_10006584, %dec_label_pc_10008674 ], [ %v1_10006584, %dec_label_pc_10008680 ], [ %v1_10006584, %dec_label_pc_100086a4 ], [ %v1_10006584, %dec_label_pc_100086c8 ], [ 255, %dec_label_pc_10008724 ], [ 252, %dec_label_pc_10008738 ], [ 111, %dec_label_pc_1000874c ], [ 241, %dec_label_pc_10008760 ]
  %v1_10006588111 = phi i32 [ %v1_10006588, %dec_label_pc_10008674.thread ], [ %v1_10006588, %dec_label_pc_10008560.thread ], [ %v1_10006588, %dec_label_pc_100084b4 ], [ %v1_10006588, %dec_label_pc_10008468.thread ], [ %v1_10006588, %dec_label_pc_100083e4.thread ], [ %v1_10006588, %dec_label_pc_1000832c ], [ %v1_10006588, %dec_label_pc_10008308 ], [ %v1_10006588, %dec_label_pc_10008278.thread ], [ %v1_10006588, %dec_label_pc_1000816c.thread ], [ %v1_10006588, %dec_label_pc_10006b50.thread ], [ %v1_10006588, %dec_label_pc_10007c90.thread ], [ %v1_10006588, %dec_label_pc_10007cb4.thread ], [ %v1_10006588, %dec_label_pc_1000863c.thread ], [ %v1_10006588, %dec_label_pc_10008650.thread ], [ %v1_10006588, %dec_label_pc_1000871c.thread ], [ %v1_10006588, %dec_label_pc_10006900 ], [ %v1_10006588, %dec_label_pc_10006b0c ], [ %v1_10006588, %dec_label_pc_10006b58 ], [ %v1_10006588, %dec_label_pc_10006cb4 ], [ %v1_10006588, %dec_label_pc_10007b94 ], [ %v1_10006588, %dec_label_pc_10007bc8 ], [ %v1_10006588, %dec_label_pc_10007bdc ], [ %v1_10006588, %dec_label_pc_10007bf0 ], [ %v1_10006588, %dec_label_pc_10007c04 ], [ %v1_10006588, %dec_label_pc_10007c18 ], [ %v1_10006588, %dec_label_pc_10007c34 ], [ %v1_10006588, %dec_label_pc_10007c50 ], [ %v1_10006588, %dec_label_pc_10007c6c ], [ %v1_10006588, %dec_label_pc_10007c90 ], [ %v1_10006588, %dec_label_pc_10007cb4 ], [ %v1_10006588, %dec_label_pc_10007cc8 ], [ %v1_10006588, %dec_label_pc_10007ce4 ], [ %v1_10006588, %dec_label_pc_10007d00 ], [ %v1_10006588, %dec_label_pc_10007d1c ], [ %v1_10006588, %dec_label_pc_10007d38 ], [ %v1_10006588, %dec_label_pc_10007dd0 ], [ %v1_10006588, %dec_label_pc_10007dec ], [ %v1_10006588, %dec_label_pc_10007e14 ], [ %v1_10006588, %dec_label_pc_10007e30 ], [ %v1_10006588, %dec_label_pc_10007e44 ], [ %v1_10006588, %dec_label_pc_10007e78 ], [ %v1_10006588, %dec_label_pc_10007ea4 ], [ %v1_10006588, %dec_label_pc_10007eb8 ], [ %v1_10006588, %dec_label_pc_10007ecc ], [ %v1_10006588, %dec_label_pc_10007ee0 ], [ %v1_10006588, %dec_label_pc_10007ef4 ], [ %v1_10006588, %dec_label_pc_10007f08 ], [ %v1_10006588, %dec_label_pc_10007f44 ], [ %v1_10006588, %dec_label_pc_10007f60 ], [ %v1_10006588, %dec_label_pc_10007f74 ], [ %v1_10006588, %dec_label_pc_10007f88 ], [ %v1_10006588, %dec_label_pc_10007f9c ], [ %v1_10006588, %dec_label_pc_10007fb0 ], [ 0, %dec_label_pc_10007fcc ], [ %v1_10006588, %dec_label_pc_10007ff0 ], [ 0, %dec_label_pc_10008028 ], [ %v1_10006588, %dec_label_pc_1000803c ], [ 0, %dec_label_pc_10008050 ], [ %v1_10006588, %dec_label_pc_1000807c ], [ %v1_10006588, %dec_label_pc_100080ac ], [ %v1_10006588, %dec_label_pc_100080c0 ], [ 0, %dec_label_pc_1000811c ], [ %v1_10006588, %dec_label_pc_10008130 ], [ %v1_10006588, %dec_label_pc_10008174 ], [ %v1_10006588, %dec_label_pc_10008188 ], [ %v1_10006588, %dec_label_pc_1000819c ], [ %v1_10006588, %dec_label_pc_100081f0 ], [ %v1_10006588, %dec_label_pc_10008218 ], [ %v1_10006588, %dec_label_pc_1000822c ], [ %v1_10006588, %dec_label_pc_10008240 ], [ %v1_10006588, %dec_label_pc_10008254 ], [ %v1_10006588, %dec_label_pc_10008284 ], [ %v1_10006588, %dec_label_pc_10008294 ], [ %v1_10006588, %dec_label_pc_100082a8 ], [ %v1_10006588, %dec_label_pc_100082bc ], [ %v1_10006588, %dec_label_pc_100082d0 ], [ %v1_10006588, %dec_label_pc_100082e4 ], [ %v1_10006588, %dec_label_pc_10008338 ], [ %v1_10006588, %dec_label_pc_1000834c ], [ %v1_10006588, %dec_label_pc_10008360 ], [ %v1_10006588, %dec_label_pc_10008374 ], [ %v1_10006588, %dec_label_pc_10008388 ], [ %v1_10006588, %dec_label_pc_1000839c ], [ %v1_10006588, %dec_label_pc_100083b0 ], [ %v1_10006588, %dec_label_pc_100083ec ], [ %v1_10006588, %dec_label_pc_10008408 ], [ %v1_10006588, %dec_label_pc_1000841c ], [ %v1_10006588, %dec_label_pc_10008430 ], [ %v1_10006588, %dec_label_pc_10008444 ], [ %v1_10006588, %dec_label_pc_10008470 ], [ 0, %dec_label_pc_100084e0 ], [ %v1_10006588, %dec_label_pc_100084f4 ], [ %v1_10006588, %dec_label_pc_10008518 ], [ %v1_10006588, %dec_label_pc_10008568 ], [ %v1_10006588, %dec_label_pc_1000863c ], [ %v1_10006588, %dec_label_pc_1000869c ], [ %v1_10006588, %dec_label_pc_100086c0 ], [ %v1_10006588, %dec_label_pc_1000871c ], [ %v1_10006588, %dec_label_pc_10008730 ], [ %v1_10006588, %dec_label_pc_10008744 ], [ %v1_10006588, %dec_label_pc_10008758 ], [ %v1_10006588, %dec_label_pc_10007c2c ], [ %v1_10006588, %dec_label_pc_10007c48 ], [ %v1_10006588, %dec_label_pc_10007c64 ], [ %v1_10006588, %dec_label_pc_10007cf8 ], [ %v1_10006588, %dec_label_pc_10007d14 ], [ %v1_10006588, %dec_label_pc_10007d30 ], [ %v1_10006588, %dec_label_pc_10007dc8 ], [ %v1_10006588, %dec_label_pc_10007de4 ], [ %v1_10006588, %dec_label_pc_10007e28 ], [ %v1_10006588, %dec_label_pc_10007e0c ], [ %v1_10006588, %dec_label_pc_10007e70 ], [ %v1_10006588, %dec_label_pc_10007e9c ], [ %v1_10006588, %dec_label_pc_10007f3c ], [ %v1_10006588, %dec_label_pc_10007f58 ], [ %v1_10006588, %dec_label_pc_10007fc4 ], [ %v1_10006588, %dec_label_pc_10007fe8 ], [ %v1_10006588, %dec_label_pc_10008020 ], [ %v1_10006588, %dec_label_pc_1000816c ], [ %v1_10006588, %dec_label_pc_100081e8 ], [ %v1_10006588, %dec_label_pc_100083e4 ], [ %v1_10006588, %dec_label_pc_10008468 ], [ %v1_10006588, %dec_label_pc_100084d8 ], [ %v1_10006588, %dec_label_pc_10008510 ], [ %v1_10006588, %dec_label_pc_10008560 ], [ %v1_10006588, %dec_label_pc_10006b50 ], [ %v1_10006588, %dec_label_pc_10006b04 ], [ %v1_10006588, %dec_label_pc_10006b14 ], [ %v1_10006588, %dec_label_pc_10006b60 ], [ %v1_10006588, %dec_label_pc_10006cbc ], [ %v1_10006588, %dec_label_pc_10006cd0 ], [ %v1_10006588, %dec_label_pc_10007b88 ], [ %v1_10006588, %dec_label_pc_10007b9c ], [ %v1_10006588, %dec_label_pc_10007ba8 ], [ %v1_10006588, %dec_label_pc_10007bbc ], [ %v1_10006588, %dec_label_pc_10007bd0 ], [ %v1_10006588, %dec_label_pc_10007be4 ], [ %v1_10006588, %dec_label_pc_10007bf8 ], [ %v1_10006588, %dec_label_pc_10007c0c ], [ %v1_10006588, %dec_label_pc_10007c20 ], [ %v1_10006588, %dec_label_pc_10007c3c ], [ 255, %dec_label_pc_10007c58 ], [ 255, %dec_label_pc_10007c74 ], [ %v1_10006588, %dec_label_pc_10007c98 ], [ %v1_10006588, %dec_label_pc_10007cbc ], [ %v1_10006588, %dec_label_pc_10007cd8 ], [ %v1_10006588, %dec_label_pc_10007cec ], [ %v1_10006588, %dec_label_pc_10007d08 ], [ %v1_10006588, %dec_label_pc_10007d24 ], [ 255, %dec_label_pc_10007d40 ], [ %v1_10006588, %dec_label_pc_10007d4c ], [ %v1_10006588, %dec_label_pc_10007d68 ], [ %v1_10006588, %dec_label_pc_10007d84 ], [ %v1_10006588, %dec_label_pc_10007d90 ], [ %v1_10006588, %dec_label_pc_10007d9c ], [ %v1_10006588, %dec_label_pc_10007da8 ], [ %v1_10006588, %dec_label_pc_10007db4 ], [ %v1_10006588, %dec_label_pc_10007dd8 ], [ %v1_10006588, %dec_label_pc_10007df4 ], [ %v1_10006588, %dec_label_pc_10007e00 ], [ %v1_10006588, %dec_label_pc_10007e1c ], [ %v1_10006588, %dec_label_pc_10007e38 ], [ %v1_10006588, %dec_label_pc_10007e4c ], [ 255, %dec_label_pc_10007e80 ], [ %v1_10006588, %dec_label_pc_10007eac ], [ %v1_10006588, %dec_label_pc_10007ec0 ], [ %v1_10006588, %dec_label_pc_10007ed4 ], [ %v1_10006588, %dec_label_pc_10007ee8 ], [ %v1_10006588, %dec_label_pc_10007efc ], [ %v1_10006588, %dec_label_pc_10007f10 ], [ %v1_10006588, %dec_label_pc_10007f4c ], [ %v1_10006588, %dec_label_pc_10007f68 ], [ %v1_10006588, %dec_label_pc_10007f7c ], [ %v1_10006588, %dec_label_pc_10007f90 ], [ %v1_10006588, %dec_label_pc_10007fa4 ], [ %v1_10006588, %dec_label_pc_10007fb8 ], [ %v1_10006588, %dec_label_pc_10007fd4 ], [ %v1_10006588, %dec_label_pc_10007ff8 ], [ %v1_10006588, %dec_label_pc_10008014 ], [ %v1_10006588, %dec_label_pc_10008030 ], [ %v1_10006588, %dec_label_pc_10008044 ], [ %v1_10006588, %dec_label_pc_10008058 ], [ %v1_10006588, %dec_label_pc_10008084 ], [ %v1_10006588, %dec_label_pc_100080a0 ], [ %v1_10006588, %dec_label_pc_100080b4 ], [ %v1_10006588, %dec_label_pc_100080c8 ], [ %v1_10006588, %dec_label_pc_100080e4 ], [ %v1_10006588, %dec_label_pc_10008110 ], [ %v1_10006588, %dec_label_pc_10008124 ], [ %v1_10006588, %dec_label_pc_10008138 ], [ %v1_10006588, %dec_label_pc_1000817c ], [ %v1_10006588, %dec_label_pc_10008190 ], [ %v1_10006588, %dec_label_pc_100081a4 ], [ %v1_10006588, %dec_label_pc_100081b8 ], [ %v1_10006588, %dec_label_pc_100081cc ], [ %v1_10006588, %dec_label_pc_100081f8 ], [ %v1_10006588, %dec_label_pc_1000820c ], [ %v1_10006588, %dec_label_pc_10008220 ], [ %v1_10006588, %dec_label_pc_10008234 ], [ %v1_10006588, %dec_label_pc_10008248 ], [ %v1_10006588, %dec_label_pc_1000825c ], [ %v1_10006588, %dec_label_pc_10008278 ], [ %v1_10006588, %dec_label_pc_1000829c ], [ %v1_10006588, %dec_label_pc_100082b0 ], [ %v1_10006588, %dec_label_pc_100082c4 ], [ %v1_10006588, %dec_label_pc_100082d8 ], [ %v1_10006588, %dec_label_pc_100082ec ], [ %v1_10006588, %dec_label_pc_10008340 ], [ %v1_10006588, %dec_label_pc_10008354 ], [ %v1_10006588, %dec_label_pc_10008368 ], [ %v1_10006588, %dec_label_pc_1000837c ], [ %v1_10006588, %dec_label_pc_10008390 ], [ %v1_10006588, %dec_label_pc_100083a4 ], [ %v1_10006588, %dec_label_pc_100083b8 ], [ %v1_10006588, %dec_label_pc_100083f4 ], [ %v1_10006588, %dec_label_pc_10008410 ], [ %v1_10006588, %dec_label_pc_10008424 ], [ %v1_10006588, %dec_label_pc_10008438 ], [ %v1_10006588, %dec_label_pc_1000844c ], [ %v1_10006588, %dec_label_pc_10008478 ], [ %v1_10006588, %dec_label_pc_100084e8 ], [ %v1_10006588, %dec_label_pc_100084fc ], [ %v1_10006588, %dec_label_pc_10008520 ], [ %v1_10006588, %dec_label_pc_10008534 ], [ 255, %dec_label_pc_10008570 ], [ %v1_10006588, %dec_label_pc_1000857c ], [ %v1_10006588, %dec_label_pc_10008588 ], [ %v1_10006588, %dec_label_pc_100085a4 ], [ %v1_10006588, %dec_label_pc_100085b8 ], [ %v1_10006588, %dec_label_pc_100085c4 ], [ %v1_10006588, %dec_label_pc_100085f0 ], [ %v1_10006588, %dec_label_pc_10008644 ], [ %v1_10006588, %dec_label_pc_10008650 ], [ %v1_10006588, %dec_label_pc_10008674 ], [ %v1_10006588, %dec_label_pc_10008680 ], [ %v1_10006588, %dec_label_pc_100086a4 ], [ %v1_10006588, %dec_label_pc_100086c8 ], [ %v1_10006588, %dec_label_pc_10008724 ], [ %v1_10006588, %dec_label_pc_10008738 ], [ %v1_10006588, %dec_label_pc_1000874c ], [ 255, %dec_label_pc_10008760 ]
  %v1_10006908 = mul i32 %v1_10006584128, 65536
  %v1_1000690c = mul i32 %v0_10006590594, 16777216
  %v2_10006910 = or i32 %v1_10006908, %v1_1000690c
  %v1_10006914 = mul i32 %v1_10006588111, 256
  %v1_10006918 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006918 = or i32 %v2_10006910, %v1_10006918
  store i32 %v2_10006918, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_10006920 = or i32 %v2_10006918, %v1_10006914
  store i32 %v2_10006920, i32* %r9.global-to-local, align 4
  %v0_10006928 = load i32, i32* @r24, align 4
  store i32 %v0_10006928, i32* @r3, align 4
  store i32 %v2_10006920, i32* @global_var_1001c748.148, align 4
  store i16 0, i16* bitcast (i32* @global_var_1001c742.149 to i16*), align 4
  %v2_10006934 = call i32 @function_100043cc(i32 %v0_10006928, i32 20)
  %v3_10006934 = trunc i32 %v2_10006934 to i16
  %v3_10006938 = load i32, i32* @global_var_1001c748.148, align 4
  store i32 %v3_10006938, i32* %r9.global-to-local, align 4
  store i32 23, i32* %r0.global-to-local, align 4
  store i16 %v3_10006934, i16* bitcast (i32* @global_var_1001c742.149 to i16*), align 4
  %v0_10006944 = load i32, i32* @r25, align 4
  store i32 %v0_10006944, i32* @r4, align 4
  store i16 23, i16* @global_var_1001c74e.123, align 2
  store i32 20, i32* %r5.global-to-local, align 4
  store i32 %v3_10006938, i32* @global_var_1001c750.150, align 4
  store i32 20, i32* %r6.global-to-local, align 4
  %v0_10006958 = load i32, i32* %r29.global-to-local, align 4
  %v1_10006958 = trunc i32 %v0_10006958 to i16
  store i16 %v1_10006958, i16* bitcast (i32* @global_var_1001c75c.151 to i16*), align 4
  %v0_1000695c = load i32, i32* @r24, align 4
  store i32 %v0_1000695c, i32* %r3.global-to-local, align 4
  %v4_10006960 = call i32 @function_10004430(i32 %v0_1000695c, i32 %v0_10006944, i32 20, i32 20)
  %v5_10006960 = trunc i32 %v4_10006960 to i16
  store i32 268566528, i32* %r10.global-to-local, align 4
  store i16 %v5_10006960, i16* bitcast (i32* @global_var_1001c75c.151 to i16*), align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_10006970 = load i32, i32* @global_var_1001c748.148, align 4
  store i32 %v3_10006970, i32* %r9.global-to-local, align 4
  %v0_10006974 = load i32, i32* @r24, align 4
  %v3_10006978 = load i16, i16* @global_var_1001c74e.123, align 2
  %v4_10006978 = zext i16 %v3_10006978 to i32
  store i32 %v4_10006978, i32* %r11.global-to-local, align 4
  store i32 40, i32* %r5.global-to-local, align 4
  %v3_10006980 = load i32, i32* @global_var_1001c6cc.112, align 4
  store i32 %v3_10006980, i32* %r3.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 %v2_10006988, i32* %r7.global-to-local, align 4
  store i32 16, i32* %r8.global-to-local, align 4
  store i32 2, i32* %stack_var_-1888, align 4
  store i32 268462496, i32* @lr, align 4
  %v6_1000699c = call i32 @function_1000a1fc(i32 %v3_10006980, i32 %v0_10006974, i32 40, i32 16384, i32 %v2_10006988, i32 16)
  store i32 %v6_1000699c, i32* %r3.global-to-local, align 4
  %v3_100069a0 = load i32, i32* %stack_var_-1916, align 4
  %v1_100069a4 = add i32 %v3_100069a0, 1
  store i32 %v1_100069a4, i32* %r9.global-to-local, align 4
  %v1_100069a8 = icmp slt i32 %v1_100069a4, 383
  %v3_100069a8 = icmp eq i32 %v1_100069a4, 383
  store i1 %v1_100069a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069a8, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100069a4, i32* %stack_var_-1916, align 4
  %tmp248 = icmp slt i32 %v1_100069a4, 384
  br i1 %tmp248, label %dec_label_pc_1000654c, label %dec_label_pc_100069b4

dec_label_pc_100069b4:                            ; preds = %dec_label_pc_10006908
  %v0_100069b4 = load i32, i32* @r31, align 4
  store i32 %v0_100069b4, i32* @r26, align 4
  br label %dec_label_pc_100069b8

dec_label_pc_100069b8:                            ; preds = %dec_label_pc_10006534, %dec_label_pc_100069b4
  %v0_100069b8 = call i32 @function_10009c78()
  store i32 %v0_100069b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 %v0_100069b8, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100069c4

dec_label_pc_100069c4:                            ; preds = %dec_label_pc_10006a64, %dec_label_pc_10006a5c, %dec_label_pc_10006a54, %dec_label_pc_10006a34, %dec_label_pc_10006a28, %dec_label_pc_10006a1c, %dec_label_pc_10006a08, %dec_label_pc_10006a4c, %dec_label_pc_10006a40, %dec_label_pc_10006a00, %dec_label_pc_10006ad0, %dec_label_pc_100069b8
  %v1_100069cc = phi i32 [ %v0_100069b8, %dec_label_pc_100069b8 ], [ %v1_100069cc.pre.pre, %dec_label_pc_10006ad0 ], [ %v0_100069f4, %dec_label_pc_10006a00 ], [ %v0_100069f4, %dec_label_pc_10006a40 ], [ %v0_100069f4, %dec_label_pc_10006a4c ], [ %v0_100069f4, %dec_label_pc_10006a08 ], [ %v0_100069f4, %dec_label_pc_10006a1c ], [ %v0_100069f4, %dec_label_pc_10006a28 ], [ %v0_100069f4, %dec_label_pc_10006a34 ], [ %v0_100069f4, %dec_label_pc_10006a54 ], [ %v0_100069f4, %dec_label_pc_10006a5c ], [ %v0_100069f4, %dec_label_pc_10006a64 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v2_100069cc = inttoptr i32 %v1_100069cc to i32*
  store i32 0, i32* %v2_100069cc, align 4
  store i32 1514, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v3_100069dc = load i32, i32* @global_var_1001c6cc.112, align 4
  store i32 %v3_100069dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268462572, i32* @lr, align 4
  %v6_100069e8 = call i32 @function_1000a184(i32 %v3_100069dc, i32 %v2_100069d0, i32 1514, i32 16384, i32 0, i32 0)
  store i32 %v6_100069e8, i32* %r3.global-to-local, align 4
  %tmp249 = icmp slt i32 %v6_100069e8, 1
  br i1 %tmp249, label %dec_label_pc_10006b6c, label %dec_label_pc_100069f4

dec_label_pc_100069f4:                            ; preds = %dec_label_pc_100069c4
  %v0_100069f4 = load i32, i32* %r30.global-to-local, align 4
  %v1_100069f4 = inttoptr i32 %v0_100069f4 to i32*
  %v2_100069f4 = load i32, i32* %v1_100069f4, align 4
  store i32 %v2_100069f4, i32* %r0.global-to-local, align 4
  %v1_100069f8 = icmp slt i32 %v2_100069f4, 11
  %v3_100069f8 = icmp eq i32 %v2_100069f4, 11
  store i1 %v1_100069f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100069f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100069f8, label %dec_label_pc_10006b6c, label %dec_label_pc_10006a00

dec_label_pc_10006a00:                            ; preds = %dec_label_pc_100069f4
  %v1_10006a00 = icmp ult i32 %v6_100069e8, 39
  %v3_10006a00 = icmp eq i32 %v6_100069e8, 39
  store i1 %v1_10006a00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a00, i1* %cr7_eq.global-to-local, align 1
  %tmp250 = icmp ult i32 %v6_100069e8, 40
  br i1 %tmp250, label %dec_label_pc_100069c4, label %dec_label_pc_10006a08

dec_label_pc_10006a08:                            ; preds = %dec_label_pc_10006a00
  %v3_10006a0c = load i32, i32* @global_var_1001c6a0.16, align 4
  store i32 %v3_10006a0c, i32* %r0.global-to-local, align 4
  store i32 %tmp204, i32* %r9.global-to-local, align 4
  %v2_10006a14 = icmp slt i32 %tmp204, %v3_10006a0c
  %v4_10006a14 = icmp eq i32 %tmp204, %v3_10006a0c
  store i1 %v2_10006a14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006a14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006a14, label %dec_label_pc_10006a1c, label %dec_label_pc_100069c4

dec_label_pc_10006a1c:                            ; preds = %dec_label_pc_10006a08
  store i32 %v4_10006a1c, i32* %r0.global-to-local, align 4
  store i1 %v1_10006a20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a20, label %dec_label_pc_10006a28, label %dec_label_pc_100069c4

dec_label_pc_10006a28:                            ; preds = %dec_label_pc_10006a1c
  store i32 %v4_10006a28, i32* %r8.global-to-local, align 4
  store i1 %v1_10006a2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a2c, label %dec_label_pc_10006a34, label %dec_label_pc_100069c4

dec_label_pc_10006a34:                            ; preds = %dec_label_pc_10006a28
  store i32 %v4_10006a34, i32* %r0.global-to-local, align 4
  %v1_10006a38 = load i32, i32* @r23, align 4
  %v2_10006a38 = icmp slt i32 %v4_10006a34, %v1_10006a38
  %v4_10006a38 = icmp eq i32 %v4_10006a34, %v1_10006a38
  store i1 %v2_10006a38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006a38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006a38, label %dec_label_pc_10006a40, label %dec_label_pc_100069c4

dec_label_pc_10006a40:                            ; preds = %dec_label_pc_10006a34
  store i32 %tmp200, i32* %r0.global-to-local, align 4
  store i32 %v1_10006a44, i32* %r10.global-to-local, align 4
  br i1 %v3_10006a44, label %dec_label_pc_100069c4, label %dec_label_pc_10006a4c

dec_label_pc_10006a4c:                            ; preds = %dec_label_pc_10006a40
  store i32 %v1_10006a4c, i32* %r11.global-to-local, align 4
  br i1 %v3_10006a4c, label %dec_label_pc_100069c4, label %dec_label_pc_10006a54

dec_label_pc_10006a54:                            ; preds = %dec_label_pc_10006a4c
  store i32 %v1_10006a54, i32* %r9.global-to-local, align 4
  br i1 %v3_10006a54, label %dec_label_pc_10006a5c, label %dec_label_pc_100069c4

dec_label_pc_10006a5c:                            ; preds = %dec_label_pc_10006a54
  store i32 %v1_10006a5c, i32* %r10.global-to-local, align 4
  br i1 %v3_10006a5c, label %dec_label_pc_10006a64, label %dec_label_pc_100069c4

dec_label_pc_10006a64:                            ; preds = %dec_label_pc_10006a5c
  store i32 %tmp199, i32* %r9.global-to-local, align 4
  store i32 %tmp198, i32* %r0.global-to-local, align 4
  store i32 %v1_10006a6c, i32* %r10.global-to-local, align 4
  store i1 %v2_10006a70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006a70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10006a70, label %dec_label_pc_10006a78, label %dec_label_pc_100069c4

dec_label_pc_10006a78:                            ; preds = %dec_label_pc_10006a64
  %v0_10006a78 = load i32, i32* @r31, align 4
  %v1_10006a78 = icmp slt i32 %v0_10006a78, 255
  %v2_10006a78 = icmp sgt i32 %v0_10006a78, 255
  %v3_10006a78 = icmp eq i32 %v0_10006a78, 255
  store i1 %v1_10006a78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006a78, label %dec_label_pc_10006b6c, label %dec_label_pc_10006a80

dec_label_pc_10006a80:                            ; preds = %dec_label_pc_10006a78
  %v3_10006a88 = load i32, i32* @global_var_1001c6c8.111, align 4
  store i32 %v3_10006a88, i32* %r11.global-to-local, align 4
  %v1_10006a8c = mul i32 %v0_10006a78, 256
  store i32 %v1_10006a8c, i32* %r9.global-to-local, align 4
  %v2_10006a90 = mul i32 %v0_10006a78, 288
  store i32 %v2_10006a90, i32* %r0.global-to-local, align 4
  %v2_10006a94 = add i32 %v3_10006a88, %v2_10006a90
  store i32 %v2_10006a94, i32* @r3, align 4
  %v1_10006a98 = add i32 %v2_10006a94, 12
  %v2_10006a98 = inttoptr i32 %v1_10006a98 to i32*
  %v3_10006a98 = load i32, i32* %v2_10006a98, align 4
  store i32 %v3_10006a98, i32* %r9.global-to-local, align 4
  %v1_10006a9c = icmp slt i32 %v3_10006a98, 0
  %v3_10006a9c = icmp eq i32 %v3_10006a98, 0
  store i1 %v1_10006a9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006a9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006a9c, label %dec_label_pc_10006cc8, label %dec_label_pc_10006aa4

dec_label_pc_10006aa4:                            ; preds = %dec_label_pc_10006a80
  %v1_10006aa4 = sub i32 256, %v0_10006a78
  store i32 %v1_10006aa4, i32* %r11.global-to-local, align 4
  store i32 %v0_10006a78, i32* %r29.global-to-local, align 4
  store i32 %v1_10006aa4, i32* %ctr.global-to-local, align 4
  %v1_10006ab0 = add i32 %v2_10006a94, 288
  store i32 %v1_10006ab0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006ab4

dec_label_pc_10006ab4:                            ; preds = %dec_label_pc_10006abc, %dec_label_pc_10006aa4
  %v0_10006abc = phi i32 [ %v1_10006ac4, %dec_label_pc_10006abc ], [ %v1_10006ab0, %dec_label_pc_10006aa4 ]
  %v0_10006ab8 = phi i32 [ %v1_10006ab8, %dec_label_pc_10006abc ], [ %v1_10006aa4, %dec_label_pc_10006aa4 ]
  %v0_10006ab4 = phi i32 [ %v1_10006ab4, %dec_label_pc_10006abc ], [ %v0_10006a78, %dec_label_pc_10006aa4 ]
  %v1_10006ab4 = add i32 %v0_10006ab4, 1
  store i32 %v1_10006ab4, i32* @r29, align 4
  %v1_10006ab8 = add i32 %v0_10006ab8, -1
  store i32 %v1_10006ab8, i32* %ctr.global-to-local, align 4
  %v2_10006ab8 = icmp eq i32 %v1_10006ab8, 0
  br i1 %v2_10006ab8, label %dec_label_pc_10006b6c, label %dec_label_pc_10006abc

dec_label_pc_10006abc:                            ; preds = %dec_label_pc_10006ab4
  %v1_10006abc = add i32 %v0_10006abc, 12
  %v2_10006abc = inttoptr i32 %v1_10006abc to i32*
  %v3_10006abc = load i32, i32* %v2_10006abc, align 4
  store i32 %v3_10006abc, i32* %r0.global-to-local, align 4
  store i32 %v0_10006abc, i32* @r3, align 4
  %v1_10006ac4 = add i32 %v0_10006abc, 288
  store i32 %v1_10006ac4, i32* %r9.global-to-local, align 4
  %v1_10006ac8 = icmp slt i32 %v3_10006abc, 0
  %v3_10006ac8 = icmp eq i32 %v3_10006abc, 0
  store i1 %v1_10006ac8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ac8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ac8, label %dec_label_pc_10006ad0, label %dec_label_pc_10006ab4

dec_label_pc_10006ad0:                            ; preds = %dec_label_pc_10006abc, %dec_label_pc_10006cc8
  %v1_10006ad0 = phi i32 [ %v2_10006a94, %dec_label_pc_10006cc8 ], [ %v0_10006abc, %dec_label_pc_10006abc ]
  %v2_10006ad0 = add i32 %v1_10006ad0, 16
  %v3_10006ad0 = inttoptr i32 %v2_10006ad0 to i32*
  store i32 %tmp198, i32* %v3_10006ad0, align 4
  %v0_10006ad4 = load i32, i32* @r29, align 4
  store i32 %v0_10006ad4, i32* @r31, align 4
  %v0_10006ad8 = load i32, i32* %r8.global-to-local, align 4
  %v1_10006ad8 = trunc i32 %v0_10006ad8 to i16
  %v2_10006ad8 = load i32, i32* @r3, align 4
  %v3_10006ad8 = add i32 %v2_10006ad8, 20
  %v4_10006ad8 = inttoptr i32 %v3_10006ad8 to i16*
  store i16 %v1_10006ad8, i16* %v4_10006ad8, align 2
  store i32 268462816, i32* @lr, align 4
  %v0_10006adc = call i32 @function_10005e28()
  store i32 %v0_10006adc, i32* %r3.global-to-local, align 4
  %v1_100069cc.pre.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100069c4

dec_label_pc_10006ae4:                            ; preds = %dec_label_pc_10006640
  %v1_10006ae4 = icmp slt i32 %v1_10006584, 168
  %v3_10006ae4 = icmp eq i32 %v1_10006584, 168
  store i1 %v1_10006ae4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ae4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ae4, label %dec_label_pc_10006574, label %dec_label_pc_10006aec

dec_label_pc_10006aec:                            ; preds = %dec_label_pc_10006ae4
  %v1_10006aec = icmp slt i32 %v1_10006584, 241
  %v3_10006aec = icmp eq i32 %v1_10006584, 241
  store i1 %v1_10006aec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006aec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006aec, label %dec_label_pc_10008758, label %dec_label_pc_10006af4

dec_label_pc_10006af4:                            ; preds = %dec_label_pc_10006aec
  %v1_10006af4 = icmp slt i32 %v1_10006584, 111
  %v3_10006af4 = icmp eq i32 %v1_10006584, 111
  store i1 %v1_10006af4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006af4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006af4, label %dec_label_pc_10008744, label %dec_label_pc_10006afc

dec_label_pc_10006afc:                            ; preds = %dec_label_pc_10006af4
  %v1_10006afc = icmp slt i32 %v1_10006584, 252
  %v3_10006afc = icmp eq i32 %v1_10006584, 252
  store i1 %v1_10006afc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006afc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006afc, label %dec_label_pc_10008730, label %dec_label_pc_10006b04

dec_label_pc_10006b04:                            ; preds = %dec_label_pc_10006afc
  %v1_10006b04 = icmp slt i32 %v1_10006584, 40
  %v3_10006b04 = icmp eq i32 %v1_10006584, 40
  store i1 %v1_10006b04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b04, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b04, label %dec_label_pc_10006b0c, label %dec_label_pc_10006908

dec_label_pc_10006b0c:                            ; preds = %dec_label_pc_10006b04
  %v1_10006b0c = icmp ult i32 %v1_10006588, 55
  %v3_10006b0c = icmp eq i32 %v1_10006588, 55
  store i1 %v1_10006b0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b0c, i1* %cr7_eq.global-to-local, align 1
  %tmp251 = icmp ult i32 %v1_10006588, 56
  br i1 %tmp251, label %dec_label_pc_10006908, label %dec_label_pc_10006b14

dec_label_pc_10006b14:                            ; preds = %dec_label_pc_10006b0c
  %v1_10006b14 = icmp ult i32 %v1_10006588, 58
  %v3_10006b14 = icmp eq i32 %v1_10006588, 58
  store i1 %v1_10006b14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b14, i1* %cr7_eq.global-to-local, align 1
  %tmp252 = icmp ult i32 %v1_10006588, 59
  br i1 %tmp252, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006648
  %v1_10006b20 = icmp slt i32 %v1_10006584, 17
  %v3_10006b20 = icmp eq i32 %v1_10006584, 17
  store i1 %v1_10006b20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b20, label %dec_label_pc_10006574, label %dec_label_pc_10006b28

dec_label_pc_10006b28:                            ; preds = %dec_label_pc_10006b20
  %v1_10006b28 = icmp slt i32 %v1_10006584, 80
  %v3_10006b28 = icmp eq i32 %v1_10006584, 80
  store i1 %v1_10006b28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b28, label %dec_label_pc_10006574, label %dec_label_pc_10006b30

dec_label_pc_10006b30:                            ; preds = %dec_label_pc_10006b28
  %v1_10006b30 = icmp slt i32 %v1_10006584, 98
  %v3_10006b30 = icmp eq i32 %v1_10006584, 98
  store i1 %v1_10006b30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b30, label %dec_label_pc_10006574, label %dec_label_pc_10006b38

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006b30
  %v1_10006b38 = icmp slt i32 %v1_10006584, 154
  %v3_10006b38 = icmp eq i32 %v1_10006584, 154
  store i1 %v1_10006b38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b38, label %dec_label_pc_10006574, label %dec_label_pc_10006b40

dec_label_pc_10006b40:                            ; preds = %dec_label_pc_10006b38
  %v1_10006b40 = icmp ult i32 %v1_10006584, 164
  %v3_10006b40 = icmp eq i32 %v1_10006584, 164
  store i1 %v1_10006b40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b40, i1* %cr7_eq.global-to-local, align 1
  %tmp253 = icmp ult i32 %v1_10006584, 165
  br i1 %tmp253, label %dec_label_pc_10006b50.thread, label %dec_label_pc_10006b48

dec_label_pc_10006b50.thread:                     ; preds = %dec_label_pc_10006b40
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10006b48:                            ; preds = %dec_label_pc_10006b40
  %v1_10006b48 = icmp slt i32 %v1_10006584, 165
  %v3_10006b48 = icmp eq i32 %v1_10006584, 165
  store i1 %v1_10006b48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b48, label %dec_label_pc_10006574, label %dec_label_pc_10006b50

dec_label_pc_10006b50:                            ; preds = %dec_label_pc_10006b48
  %v1_10006b50 = icmp slt i32 %v1_10006584, 185
  %v3_10006b50 = icmp eq i32 %v1_10006584, 185
  store i1 %v1_10006b50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006b50, label %dec_label_pc_10006b58, label %dec_label_pc_10006908

dec_label_pc_10006b58:                            ; preds = %dec_label_pc_10006b50
  %v1_10006b58 = and i32 %v1_10006588, 128
  store i32 %v1_10006b58, i32* %r10.global-to-local, align 4
  %v3_10006b58 = icmp eq i32 %v1_10006b58, 0
  br i1 %v3_10006b58, label %dec_label_pc_10006908, label %dec_label_pc_10006b60

dec_label_pc_10006b60:                            ; preds = %dec_label_pc_10006b58
  %v1_10006b60 = icmp ult i32 %v1_10006588, 190
  %v3_10006b60 = icmp eq i32 %v1_10006588, 190
  store i1 %v1_10006b60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006b60, i1* %cr7_eq.global-to-local, align 1
  %tmp254 = icmp ult i32 %v1_10006588, 191
  br i1 %tmp254, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10006b6c:                            ; preds = %dec_label_pc_10006a78, %dec_label_pc_100069f4, %dec_label_pc_100069c4, %dec_label_pc_10006ab4
  store i32 32, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006b7c558 = load i32, i32* %r16.global-to-local, align 4
  %v4_10006b7c560 = inttoptr i32 %v2_10006b7c558 to i32*
  store i32 0, i32* %v4_10006b7c560, align 4
  %v0_10006b80561 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b80562 = add i32 %v0_10006b80561, 4
  store i32 %v1_10006b80562, i32* %r9.global-to-local, align 4
  %v0_10006b84563 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b84564 = add i32 %v0_10006b84563, -1
  store i32 %v1_10006b84564, i32* %ctr.global-to-local, align 4
  %v2_10006b84565 = icmp eq i32 %v1_10006b84564, 0
  br i1 %v2_10006b84565, label %dec_label_pc_10006b88, label %dec_label_pc_10006b7c.dec_label_pc_10006b7c_crit_edge

dec_label_pc_10006b7c.dec_label_pc_10006b7c_crit_edge: ; preds = %dec_label_pc_10006b6c, %dec_label_pc_10006b7c.dec_label_pc_10006b7c_crit_edge
  %v1_10006b80566 = phi i32 [ %v1_10006b80, %dec_label_pc_10006b7c.dec_label_pc_10006b7c_crit_edge ], [ %v1_10006b80562, %dec_label_pc_10006b6c ]
  %v0_10006b7c.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_10006b7c = load i32, i32* %r16.global-to-local, align 4
  %v3_10006b7c = add i32 %v2_10006b7c, %v1_10006b80566
  %v4_10006b7c = inttoptr i32 %v3_10006b7c to i32*
  store i32 %v0_10006b7c.pre, i32* %v4_10006b7c, align 4
  %v0_10006b80 = load i32, i32* %r9.global-to-local, align 4
  %v1_10006b80 = add i32 %v0_10006b80, 4
  store i32 %v1_10006b80, i32* %r9.global-to-local, align 4
  %v0_10006b84 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006b84 = add i32 %v0_10006b84, -1
  store i32 %v1_10006b84, i32* %ctr.global-to-local, align 4
  %v2_10006b84 = icmp eq i32 %v1_10006b84, 0
  br i1 %v2_10006b84, label %dec_label_pc_10006b88, label %dec_label_pc_10006b7c.dec_label_pc_10006b7c_crit_edge

dec_label_pc_10006b88:                            ; preds = %dec_label_pc_10006b7c.dec_label_pc_10006b7c_crit_edge, %dec_label_pc_10006b6c
  store i32 32, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 192, i32* %r10.global-to-local, align 4
  store i32 4, i32* %r9.global-to-local, align 4
  %v2_10006ba0567 = load i32, i32* @r1, align 4
  %v3_10006ba0568 = add i32 %v2_10006ba0567, 192
  %v4_10006ba0569 = inttoptr i32 %v3_10006ba0568 to i32*
  store i32 0, i32* %v4_10006ba0569, align 4
  %v0_10006ba4570 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006ba4571 = add i32 %v0_10006ba4570, -1
  store i32 %v1_10006ba4571, i32* %ctr.global-to-local, align 4
  %v2_10006ba4572 = icmp eq i32 %v1_10006ba4571, 0
  br i1 %v2_10006ba4572, label %dec_label_pc_10006ba8, label %dec_label_pc_10006b98.dec_label_pc_10006b98_crit_edge

dec_label_pc_10006b98.dec_label_pc_10006b98_crit_edge: ; preds = %dec_label_pc_10006b88, %dec_label_pc_10006b98.dec_label_pc_10006b98_crit_edge
  %v0_10006b98.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006ba0.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_10006b98 = add i32 %v0_10006b98.pre, 192
  store i32 %v1_10006b98, i32* %r10.global-to-local, align 4
  %v1_10006b9c = add i32 %v0_10006b98.pre, 4
  store i32 %v1_10006b9c, i32* %r9.global-to-local, align 4
  %v2_10006ba0 = load i32, i32* @r1, align 4
  %v3_10006ba0 = add i32 %v2_10006ba0, %v1_10006b98
  %v4_10006ba0 = inttoptr i32 %v3_10006ba0 to i32*
  store i32 %v0_10006ba0.pre, i32* %v4_10006ba0, align 4
  %v0_10006ba4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10006ba4 = add i32 %v0_10006ba4, -1
  store i32 %v1_10006ba4, i32* %ctr.global-to-local, align 4
  %v2_10006ba4 = icmp eq i32 %v1_10006ba4, 0
  br i1 %v2_10006ba4, label %dec_label_pc_10006ba8, label %dec_label_pc_10006b98.dec_label_pc_10006b98_crit_edge

dec_label_pc_10006ba8:                            ; preds = %dec_label_pc_10006b98.dec_label_pc_10006b98_crit_edge, %dec_label_pc_10006b88
  %v0_10006ba8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10006ba8, i32* %stack_var_-1916, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_10006c2c

dec_label_pc_10006bc4:                            ; preds = %dec_label_pc_10006c2c, %dec_label_pc_10006c5c
  %v1_10006bd4 = phi i32 [ 30, %dec_label_pc_10006c2c ], [ 5, %dec_label_pc_10006c5c ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006bc8 = load i32, i32* @global_var_1001c6c4.104, align 4
  store i32 %v3_10006bc8, i32* %r0.global-to-local, align 4
  %v1_10006bcc = add i32 %v2_10006c44, 8
  %v2_10006bcc = inttoptr i32 %v1_10006bcc to i32*
  %v3_10006bcc = load i32, i32* %v2_10006bcc, align 4
  store i32 %v3_10006bcc, i32* %r9.global-to-local, align 4
  %v2_10006bd0 = sub i32 %v3_10006bc8, %v3_10006bcc
  store i32 %v2_10006bd0, i32* %r0.global-to-local, align 4
  %v2_10006bd4 = icmp ult i32 %v2_10006bd0, %v1_10006bd4
  %v3_10006bd4 = icmp ugt i32 %v2_10006bd0, %v1_10006bd4
  %v4_10006bd4 = icmp eq i32 %v2_10006bd0, %v1_10006bd4
  store i1 %v2_10006bd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006bd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006bd4, label %dec_label_pc_10006cdc, label %dec_label_pc_10006bdc

dec_label_pc_10006bdc:                            ; preds = %dec_label_pc_10006bc4
  %v1_10006bdc = icmp slt i32 %v3_10006c48, 1
  store i1 %v1_10006bdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c4c, i1* %cr7_eq.global-to-local, align 1
  %v1_10006d1c = add i32 %v2_10006c44, 4
  %v2_10006d1c = inttoptr i32 %v1_10006d1c to i32*
  %v3_10006d1c = load i32, i32* %v2_10006d1c, align 4
  store i32 %v3_10006d1c, i32* %r3.global-to-local, align 4
  br i1 %v3_10006c4c, label %dec_label_pc_10006d1c, label %dec_label_pc_10006be4

dec_label_pc_10006be4:                            ; preds = %dec_label_pc_10006bdc
  store i32 %v2_10006d20, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_10006bf0 = call i32 @__asm_rlwinm(i32 %v3_10006d1c, i32 29, i32 3, i32 29)
  %v1_10006bf4 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006bf4 = icmp slt i32 %v3_10006d1c, %v1_10006bf4
  %v3_10006bf4 = icmp sgt i32 %v3_10006d1c, %v1_10006bf4
  %v4_10006bf4 = icmp eq i32 %v3_10006d1c, %v1_10006bf4
  store i1 %v2_10006bf4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006bf4, i1* %cr7_eq.global-to-local, align 1
  %v1_10006bf8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006bf8 = add i32 %v1_10006bf8, %v1_10006bf0
  store i32 %v2_10006bf8, i32* %r11.global-to-local, align 4
  %v1_10006bfc = urem i32 %v3_10006d1c, 32
  store i32 %v1_10006bfc, i32* %r10.global-to-local, align 4
  %v1_10006c00 = add i32 %v2_10006bf8, 56
  %v2_10006c00 = inttoptr i32 %v1_10006c00 to i32*
  %v3_10006c00 = load i32, i32* %v2_10006c00, align 4
  %v0_10006c04 = load i32, i32* %r0.global-to-local, align 4
  %v3_10006c04 = shl i32 %v0_10006c04, %v1_10006bfc
  store i32 %v3_10006c04, i32* %r0.global-to-local, align 4
  %v2_10006c08 = or i32 %v3_10006c04, %v3_10006c00
  store i32 %v2_10006c08, i32* %r9.global-to-local, align 4
  store i32 %v2_10006c08, i32* %v2_10006c00, align 4
  br i1 %v3_10006bf4, label %dec_label_pc_10006c14, label %dec_label_pc_10006c18

dec_label_pc_10006c14:                            ; preds = %dec_label_pc_10006be4
  store i32 %v3_10006d1c, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10006c18

dec_label_pc_10006c18:                            ; preds = %dec_label_pc_10006d1c, %dec_label_pc_10006be4, %dec_label_pc_10006c54, %dec_label_pc_10007b64, %dec_label_pc_10006d48, %dec_label_pc_10006d10, %dec_label_pc_10006c14
  %v3_10006c18 = load i32, i32* %stack_var_-1916, align 4
  store i32 %v3_10006c18, i32* %r9.global-to-local, align 4
  %v1_10006c1c = add i32 %v3_10006c18, 1
  store i32 %v1_10006c1c, i32* %r0.global-to-local, align 4
  %v1_10006c20 = icmp slt i32 %v1_10006c1c, 255
  %v2_10006c20 = icmp sgt i32 %v1_10006c1c, 255
  %v3_10006c20 = icmp eq i32 %v1_10006c1c, 255
  store i1 %v1_10006c20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c20, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10006c1c, i32* %stack_var_-1916, align 4
  br i1 %v2_10006c20, label %dec_label_pc_10006d50, label %dec_label_pc_10006c2c

dec_label_pc_10006c2c:                            ; preds = %dec_label_pc_10006c18, %dec_label_pc_10006ba8
  %v0_10006c30 = phi i32 [ %v1_10006c1c, %dec_label_pc_10006c18 ], [ 0, %dec_label_pc_10006ba8 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006c34 = load i32, i32* @global_var_1001c6c8.111, align 4
  store i32 %v3_10006c34, i32* %r9.global-to-local, align 4
  %v2_10006c3c = mul i32 %v0_10006c30, 288
  store i32 %v2_10006c3c, i32* %r0.global-to-local, align 4
  store i32 30, i32* %r11.global-to-local, align 4
  %v2_10006c44 = add i32 %v3_10006c34, %v2_10006c3c
  store i32 %v2_10006c44, i32* @r29, align 4
  %v1_10006c48 = add i32 %v2_10006c44, 12
  %v2_10006c48 = inttoptr i32 %v1_10006c48 to i32*
  %v3_10006c48 = load i32, i32* %v2_10006c48, align 4
  store i32 %v3_10006c48, i32* %r10.global-to-local, align 4
  %v1_10006c4c = icmp eq i32 %v3_10006c48, 0
  %v2_10006c4c = icmp ugt i32 %v3_10006c48, 1
  %v3_10006c4c = icmp eq i32 %v3_10006c48, 1
  store i1 %v1_10006c4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006c4c, label %dec_label_pc_10006bc4, label %dec_label_pc_10006c54

dec_label_pc_10006c54:                            ; preds = %dec_label_pc_10006c2c
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v1_10006c4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10006c4c, label %dec_label_pc_10006c18, label %dec_label_pc_10006c5c

dec_label_pc_10006c5c:                            ; preds = %dec_label_pc_10006c54
  store i32 5, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006bc4

dec_label_pc_10006c64:                            ; preds = %dec_label_pc_1000621c
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006c68 = load i32, i32* @global_var_1001c6cc.112, align 4
  store i32 %v3_10006c68, i32* %r3.global-to-local, align 4
  store i32 268463216, i32* @lr, align 4
  %v0_10006c6c = call i32 @function_1000955c()
  store i32 %v0_10006c6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006290

dec_label_pc_10006c74:                            ; preds = %dec_label_pc_10006660
  %v1_10006c74 = icmp slt i32 %v1_10006584, 125
  %v3_10006c74 = icmp eq i32 %v1_10006584, 125
  store i1 %v1_10006c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c74, label %dec_label_pc_10006574, label %dec_label_pc_10006c7c

dec_label_pc_10006c7c:                            ; preds = %dec_label_pc_10006c74
  %v1_10006c7c = icmp slt i32 %v1_10006584, 133
  %v3_10006c7c = icmp eq i32 %v1_10006584, 133
  store i1 %v1_10006c7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c7c, label %dec_label_pc_10006574, label %dec_label_pc_10006c84

dec_label_pc_10006c84:                            ; preds = %dec_label_pc_10006c7c
  %v1_10006c84 = icmp slt i32 %v1_10006584, 144
  %v3_10006c84 = icmp eq i32 %v1_10006584, 144
  store i1 %v1_10006c84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c84, label %dec_label_pc_10006574, label %dec_label_pc_10006c8c

dec_label_pc_10006c8c:                            ; preds = %dec_label_pc_10006c84
  %v1_10006c8c = icmp slt i32 %v1_10006584, 149
  %v3_10006c8c = icmp eq i32 %v1_10006584, 149
  store i1 %v1_10006c8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c8c, label %dec_label_pc_10006574, label %dec_label_pc_10006c94

dec_label_pc_10006c94:                            ; preds = %dec_label_pc_10006c8c
  %v1_10006c94 = icmp slt i32 %v1_10006584, 157
  %v3_10006c94 = icmp eq i32 %v1_10006584, 157
  store i1 %v1_10006c94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c94, label %dec_label_pc_10006574, label %dec_label_pc_10006c9c

dec_label_pc_10006c9c:                            ; preds = %dec_label_pc_10006c94
  %v1_10006c9c = icmp slt i32 %v1_10006584, 184
  %v3_10006c9c = icmp eq i32 %v1_10006584, 184
  store i1 %v1_10006c9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006c9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006c9c, label %dec_label_pc_10006574, label %dec_label_pc_10006ca4

dec_label_pc_10006ca4:                            ; preds = %dec_label_pc_10006c9c
  %v1_10006ca4 = icmp slt i32 %v1_10006584, 190
  %v3_10006ca4 = icmp eq i32 %v1_10006584, 190
  store i1 %v1_10006ca4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ca4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006ca4, label %dec_label_pc_10006574, label %dec_label_pc_10006cac

dec_label_pc_10006cac:                            ; preds = %dec_label_pc_10006ca4
  %v1_10006cac = icmp slt i32 %v1_10006584, 196
  %v3_10006cac = icmp eq i32 %v1_10006584, 196
  store i1 %v1_10006cac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cac, label %dec_label_pc_10006574, label %dec_label_pc_10006cb4

dec_label_pc_10006cb4:                            ; preds = %dec_label_pc_10006cac
  %v1_10006cb4 = icmp ult i32 %v1_10006584, 112
  %v3_10006cb4 = icmp eq i32 %v1_10006584, 112
  store i1 %v1_10006cb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cb4, i1* %cr7_eq.global-to-local, align 1
  %tmp256 = icmp ult i32 %v1_10006584, 113
  br i1 %tmp256, label %dec_label_pc_10006908, label %dec_label_pc_10006cbc

dec_label_pc_10006cbc:                            ; preds = %dec_label_pc_10006cb4
  %v1_10006cbc = icmp eq i32 %v1_10006584, 113
  %v3_10006cbc = icmp eq i32 %v1_10006584, 114
  store i1 %v1_10006cbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cbc, i1* %cr7_eq.global-to-local, align 1
  %tmp257 = icmp ult i32 %v1_10006584, 115
  br i1 %tmp257, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10006cc8:                            ; preds = %dec_label_pc_10006a80
  store i32 %v0_10006a78, i32* @r29, align 4
  br label %dec_label_pc_10006ad0

dec_label_pc_10006cd0:                            ; preds = %dec_label_pc_10006658
  %v1_10006cd0 = icmp slt i32 %v1_10006584, 114
  %v3_10006cd0 = icmp eq i32 %v1_10006584, 114
  store i1 %v1_10006cd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cd0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006cd0, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006bc4
  %v1_10006cdc = add i32 %v2_10006c44, 4
  %v2_10006cdc = inttoptr i32 %v1_10006cdc to i32*
  %v3_10006cdc = load i32, i32* %v2_10006cdc, align 4
  store i32 %v3_10006cdc, i32* %r3.global-to-local, align 4
  store i32 268463332, i32* @lr, align 4
  %v0_10006ce0 = call i32 @function_1000955c()
  store i32 %v0_10006ce0, i32* %r3.global-to-local, align 4
  %v0_10006ce4 = load i32, i32* @r29, align 4
  %v1_10006ce4 = add i32 %v0_10006ce4, 12
  %v2_10006ce4 = inttoptr i32 %v1_10006ce4 to i32*
  %v3_10006ce4 = load i32, i32* %v2_10006ce4, align 4
  store i32 %v3_10006ce4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v1_10006cec = icmp ult i32 %v3_10006ce4, 2
  %v3_10006cec = icmp eq i32 %v3_10006ce4, 2
  store i1 %v1_10006cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006cec, i1* %cr7_eq.global-to-local, align 1
  %v2_10006cf0 = add i32 %v0_10006ce4, 4
  %v3_10006cf0 = inttoptr i32 %v2_10006cf0 to i32*
  store i32 -1, i32* %v3_10006cf0, align 4
  %tmp258 = icmp ult i32 %v3_10006ce4, 3
  br i1 %tmp258, label %dec_label_pc_10007b64, label %dec_label_pc_10006cf8

dec_label_pc_10006cf8:                            ; preds = %dec_label_pc_10006cdc
  %v0_10006cf8 = load i32, i32* @r29, align 4
  %v1_10006cf8 = add i32 %v0_10006cf8, 284
  %v2_10006cf8 = inttoptr i32 %v1_10006cf8 to i8*
  %v3_10006cf8 = load i8, i8* %v2_10006cf8, align 1
  %v4_10006cf8 = zext i8 %v3_10006cf8 to i32
  %v1_10006cfc = add nuw nsw i32 %v4_10006cf8, 1
  %v1_10006d00 = urem i32 %v1_10006cfc, 256
  store i32 %v1_10006d00, i32* %r9.global-to-local, align 4
  %v1_10006d04 = icmp ult i32 %v1_10006d00, 10
  %v3_10006d04 = icmp eq i32 %v1_10006d00, 10
  store i1 %v1_10006d04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006d04, i1* %cr7_eq.global-to-local, align 1
  %v1_10006d08 = trunc i32 %v1_10006cfc to i8
  store i8 %v1_10006d08, i8* %v2_10006cf8, align 1
  %v0_10006d0c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10006d0c, label %dec_label_pc_10007b64, label %dec_label_pc_10006d10

dec_label_pc_10006d10:                            ; preds = %dec_label_pc_10006cf8
  %v0_10006d10 = load i32, i32* @r29, align 4
  store i32 %v0_10006d10, i32* @r3, align 4
  store i32 268463384, i32* @lr, align 4
  %v0_10006d14 = call i32 @function_10005e28()
  store i32 %v0_10006d14, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c18

dec_label_pc_10006d1c:                            ; preds = %dec_label_pc_10006bdc
  store i32 %v2_10006d20, i32* %r0.global-to-local, align 4
  %v1_10006d24 = call i32 @__asm_rlwinm(i32 %v3_10006d1c, i32 29, i32 3, i32 29)
  %v1_10006d28 = load i32, i32* @r31, align 4
  %v2_10006d28 = icmp slt i32 %v3_10006d1c, %v1_10006d28
  %v3_10006d28 = icmp sgt i32 %v3_10006d1c, %v1_10006d28
  %v4_10006d28 = icmp eq i32 %v3_10006d1c, %v1_10006d28
  store i1 %v2_10006d28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d28, i1* %cr7_eq.global-to-local, align 1
  %v1_10006d2c = load i32, i32* %r0.global-to-local, align 4
  %v2_10006d2c = add i32 %v1_10006d2c, %v1_10006d24
  store i32 %v2_10006d2c, i32* %r11.global-to-local, align 4
  %v1_10006d30 = urem i32 %v3_10006d1c, 32
  store i32 %v1_10006d30, i32* %r0.global-to-local, align 4
  %v1_10006d34 = add i32 %v2_10006d2c, 184
  %v2_10006d34 = inttoptr i32 %v1_10006d34 to i32*
  %v3_10006d34 = load i32, i32* %v2_10006d34, align 4
  %v0_10006d38 = load i32, i32* %r10.global-to-local, align 4
  %v3_10006d38 = shl i32 %v0_10006d38, %v1_10006d30
  store i32 %v3_10006d38, i32* %r0.global-to-local, align 4
  %v2_10006d3c = or i32 %v3_10006d38, %v3_10006d34
  store i32 %v2_10006d3c, i32* %r9.global-to-local, align 4
  store i32 %v2_10006d3c, i32* %v2_10006d34, align 4
  br i1 %v3_10006d28, label %dec_label_pc_10006d48, label %dec_label_pc_10006c18

dec_label_pc_10006d48:                            ; preds = %dec_label_pc_10006d1c
  store i32 %v3_10006d1c, i32* @r31, align 4
  br label %dec_label_pc_10006c18

dec_label_pc_10006d50:                            ; preds = %dec_label_pc_10006c18
  %v0_10006d50 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006d50 = load i32, i32* @r31, align 4
  %v2_10006d50 = icmp slt i32 %v0_10006d50, %v1_10006d50
  %v4_10006d50 = icmp eq i32 %v0_10006d50, %v1_10006d50
  store i1 %v2_10006d50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006d50, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v0_10006d50, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-1908, align 4
  br i1 %v2_10006d50, label %dec_label_pc_10006d6c, label %dec_label_pc_10006d70

dec_label_pc_10006d6c:                            ; preds = %dec_label_pc_10006d50
  store i32 %v1_10006d50, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006d70

dec_label_pc_10006d70:                            ; preds = %dec_label_pc_10006d50, %dec_label_pc_10006d6c
  %v0_10006d80 = phi i32 [ %v0_10006d50, %dec_label_pc_10006d50 ], [ %v1_10006d50, %dec_label_pc_10006d6c ]
  store i32 %v2_10006d74, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_10006d7c, i32* %r7.global-to-local, align 4
  %v1_10006d80 = add i32 %v0_10006d80, 1
  store i32 %v1_10006d80, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006d88.152 to i32), i32* @lr, align 4
  %v5_10006d84 = call i32 @function_10009824(i32 %v1_10006d80, i32 %v2_10006314, i32 %v2_10006d74, i32 0, i32 %v2_10006d7c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268463504, i32* @lr, align 4
  %v0_10006d8c = call i32 @function_1000992c()
  store i32 %v0_10006d8c, i32* %r3.global-to-local, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_10006d8c, i32* @global_var_1001c6c4.104, align 4
  %v0_10006d9c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10006d9c, i32* %stack_var_-1916, align 4
  br label %dec_label_pc_10006dd8

dec_label_pc_10006da4:                            ; preds = %dec_label_pc_10006dfc, %dec_label_pc_10006eb0
  %v0_10006da8 = phi i32 [ %v0_10006e08, %dec_label_pc_10006dfc ], [ %v0_10006da8.pre, %dec_label_pc_10006eb0 ]
  store i32 %v2_10006d20, i32* %r0.global-to-local, align 4
  %v1_10006da8 = call i32 @__asm_rlwinm(i32 %v0_10006da8, i32 29, i32 3, i32 29)
  %v1_10006dac = load i32, i32* %r0.global-to-local, align 4
  %v2_10006dac = add i32 %v1_10006dac, %v1_10006da8
  store i32 %v2_10006dac, i32* %r9.global-to-local, align 4
  %v0_10006db0 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006db0 = urem i32 %v0_10006db0, 32
  store i32 %v1_10006db0, i32* %r11.global-to-local, align 4
  %v1_10006db4 = add i32 %v2_10006dac, 56
  %v2_10006db4 = inttoptr i32 %v1_10006db4 to i32*
  %v3_10006db4 = load i32, i32* %v2_10006db4, align 4
  %v3_10006db8 = lshr i32 %v3_10006db4, %v1_10006db0
  store i32 %v3_10006db8, i32* %r0.global-to-local, align 4
  %v1_10006dbc = urem i32 %v3_10006db8, 2
  store i32 %v1_10006dbc, i32* %r9.global-to-local, align 4
  %v3_10006dbc = icmp eq i32 %v1_10006dbc, 0
  br i1 %v3_10006dbc, label %dec_label_pc_10006dc4, label %dec_label_pc_10006f70.preheader

dec_label_pc_10006f70.preheader:                  ; preds = %dec_label_pc_10006da4
  %v0_10006f7089 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006f7090 = add i32 %v0_10006f7089, 12
  %v2_10006f7091 = inttoptr i32 %v1_10006f7090 to i32*
  %v3_10006f7092 = load i32, i32* %v2_10006f7091, align 4
  store i32 %v3_10006f7092, i32* %r10.global-to-local, align 4
  %v1_10006f7493 = icmp slt i32 %v3_10006f7092, 0
  %v3_10006f7495 = icmp eq i32 %v3_10006f7092, 0
  store i1 %v1_10006f7493, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f7495, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f7495, label %dec_label_pc_10006dc4, label %dec_label_pc_10006f7c

dec_label_pc_10006dc4:                            ; preds = %dec_label_pc_10006f70.loopexit, %dec_label_pc_10006f70.preheader, %dec_label_pc_10006da4, %dec_label_pc_1000782c, %dec_label_pc_10006dd8, %dec_label_pc_10007b44, %dec_label_pc_10007b38, %dec_label_pc_10007860
  %v3_10006dc4 = load i32, i32* %stack_var_-1916, align 4
  store i32 %v3_10006dc4, i32* %r9.global-to-local, align 4
  %v1_10006dc8 = add i32 %v3_10006dc4, 1
  store i32 %v1_10006dc8, i32* %r0.global-to-local, align 4
  %v1_10006dcc = icmp slt i32 %v1_10006dc8, 255
  %v2_10006dcc = icmp sgt i32 %v1_10006dc8, 255
  %v3_10006dcc = icmp eq i32 %v1_10006dc8, 255
  store i1 %v1_10006dcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006dcc, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_10006dc8, i32* %stack_var_-1916, align 4
  br i1 %v2_10006dcc, label %dec_label_pc_10006534, label %dec_label_pc_10006dd8

dec_label_pc_10006dd8:                            ; preds = %dec_label_pc_10006dc4, %dec_label_pc_10006d70
  %v0_10006ddc = phi i32 [ %v1_10006dc8, %dec_label_pc_10006dc4 ], [ 0, %dec_label_pc_10006d70 ]
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v1_10006ddc = mul i32 %v0_10006ddc, 256
  store i32 %v1_10006ddc, i32* %r11.global-to-local, align 4
  %v3_10006de0 = load i32, i32* @global_var_1001c6c8.111, align 4
  store i32 %v3_10006de0, i32* %r9.global-to-local, align 4
  %v2_10006de8 = mul i32 %v0_10006ddc, 288
  store i32 %v2_10006de8, i32* %r0.global-to-local, align 4
  %v2_10006dec = add i32 %v3_10006de0, %v2_10006de8
  store i32 %v2_10006dec, i32* %r28.global-to-local, align 4
  %v1_10006df0 = add i32 %v2_10006dec, 4
  %v2_10006df0 = inttoptr i32 %v1_10006df0 to i32*
  %v3_10006df0 = load i32, i32* %v2_10006df0, align 4
  store i32 %v3_10006df0, i32* %r3.global-to-local, align 4
  %v1_10006df4 = icmp slt i32 %v3_10006df0, -1
  %v3_10006df4 = icmp eq i32 %v3_10006df0, -1
  store i1 %v1_10006df4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006df4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006df4, label %dec_label_pc_10006dc4, label %dec_label_pc_10006dfc

dec_label_pc_10006dfc:                            ; preds = %dec_label_pc_10006dd8
  store i32 %v2_10006d20, i32* %r11.global-to-local, align 4
  %v1_10006e00 = call i32 @__asm_rlwinm(i32 %v3_10006df0, i32 29, i32 3, i32 29)
  %v1_10006e04 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006e04 = add i32 %v1_10006e04, %v1_10006e00
  store i32 %v2_10006e04, i32* %r9.global-to-local, align 4
  %v0_10006e08 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006e08 = urem i32 %v0_10006e08, 32
  store i32 %v1_10006e08, i32* %r11.global-to-local, align 4
  %v1_10006e0c = add i32 %v2_10006e04, 184
  %v2_10006e0c = inttoptr i32 %v1_10006e0c to i32*
  %v3_10006e0c = load i32, i32* %v2_10006e0c, align 4
  %v3_10006e10 = lshr i32 %v3_10006e0c, %v1_10006e08
  store i32 %v3_10006e10, i32* %r0.global-to-local, align 4
  %v1_10006e14 = urem i32 %v3_10006e10, 2
  store i32 %v1_10006e14, i32* %r9.global-to-local, align 4
  %v3_10006e14 = icmp eq i32 %v1_10006e14, 0
  br i1 %v3_10006e14, label %dec_label_pc_10006da4, label %dec_label_pc_10006e1c

dec_label_pc_10006e1c:                            ; preds = %dec_label_pc_10006dfc
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 4, i32* %r5.global-to-local, align 4
  store i32 %v2_10006e2c, i32* %r6.global-to-local, align 4
  store i32 %v2_10006e30, i32* %r7.global-to-local, align 4
  store i32 4, i32* %stack_var_-1912, align 4
  store i32 0, i32* %stack_var_-1920, align 4
  store i32 268463680, i32* @lr, align 4
  %v5_10006e3c = call i32 @function_1000a0e0(i32 1, i32 4, i32 %v2_10006e2c, i32 %v2_10006e30, i32 %v1_10006e14)
  store i32 %v5_10006e3c, i32* %r3.global-to-local, align 4
  %v3_10006e40 = load i32, i32* %stack_var_-1920, align 4
  store i32 %v3_10006e40, i32* %r0.global-to-local, align 4
  %v2_10006e44 = or i32 %v3_10006e40, %v5_10006e3c
  store i32 %v2_10006e44, i32* %r9.global-to-local, align 4
  %v5_10006e44 = icmp eq i32 %v2_10006e44, 0
  br i1 %v5_10006e44, label %dec_label_pc_10006e4c, label %dec_label_pc_10007b44

dec_label_pc_10006e4c:                            ; preds = %dec_label_pc_10006e1c
  store i32 2, i32* %r10.global-to-local, align 4
  %v1_10006e50 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006e50 = add i32 %v1_10006e50, 12
  %v3_10006e50 = inttoptr i32 %v2_10006e50 to i32*
  store i32 2, i32* %v3_10006e50, align 4
  %v0_10006e54 = call i32 @function_10005b48()
  %v3_10006e58 = load i16, i16* @global_var_1001c6c0.107, align 2
  %v4_10006e58 = zext i16 %v3_10006e58 to i32
  store i32 %v4_10006e58, i32* %r9.global-to-local, align 4
  store i32 268566528, i32* %r10.global-to-local, align 4
  %v3_10006e64 = load i32, i32* @global_var_1001c6b8.105, align 4
  store i32 %v3_10006e64, i32* %r11.global-to-local, align 4
  %v1_10006e68 = icmp slt i32 %v3_10006e64, 0
  %v3_10006e68 = icmp eq i32 %v3_10006e64, 0
  store i1 %v1_10006e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006e68, i1* %cr7_eq.global-to-local, align 1
  %v2_10006e60 = urem i32 %v0_10006e54, %v4_10006e58
  %v2_10006e6c = sub i32 %v0_10006e54, %v2_10006e60
  store i32 %v2_10006e6c, i32* %r0.global-to-local, align 4
  store i32 %v2_10006e60, i32* %r3.global-to-local, align 4
  %tmp261 = icmp slt i32 %v3_10006e64, 1
  br i1 %tmp261, label %dec_label_pc_10007b70, label %dec_label_pc_10006e7c

dec_label_pc_10006e7c:                            ; preds = %dec_label_pc_10006e4c
  store i32 268566528, i32* %r9.global-to-local, align 4
  store i32 %v3_10006e64, i32* %ctr.global-to-local, align 4
  %v3_10006e84 = load i32, i32* @global_var_1001c6bc.106, align 4
  store i32 %v3_10006e84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10006e94

dec_label_pc_10006e8c:                            ; preds = %dec_label_pc_10006ea4, %dec_label_pc_10006e94
  %v4_10006ea898 = phi i1 [ %v4_10006ea8, %dec_label_pc_10006ea4 ], [ %v4_10006e9c, %dec_label_pc_10006e94 ]
  %v2_10006ea896 = phi i1 [ %v2_10006ea8, %dec_label_pc_10006ea4 ], [ %v2_10006e9c, %dec_label_pc_10006e94 ]
  %v1_10006e8c = add i32 %v0_10006e8c, 16
  store i32 %v1_10006e8c, i32* %r0.global-to-local, align 4
  %v1_10006e90 = add i32 %v0_10006e90, -1
  store i32 %v1_10006e90, i32* %ctr.global-to-local, align 4
  %v2_10006e90 = icmp eq i32 %v1_10006e90, 0
  br i1 %v2_10006e90, label %dec_label_pc_10007b70.loopexit, label %dec_label_pc_10006e94

dec_label_pc_10006e94:                            ; preds = %dec_label_pc_10006e8c, %dec_label_pc_10006e7c
  %v0_10006e90 = phi i32 [ %v1_10006e90, %dec_label_pc_10006e8c ], [ %v3_10006e64, %dec_label_pc_10006e7c ]
  %v0_10006e8c = phi i32 [ %v1_10006e8c, %dec_label_pc_10006e8c ], [ %v3_10006e84, %dec_label_pc_10006e7c ]
  store i32 %v0_10006e8c, i32* %r9.global-to-local, align 4
  %v1_10006e98 = add i32 %v0_10006e8c, 8
  %v2_10006e98 = inttoptr i32 %v1_10006e98 to i16*
  %v3_10006e98 = load i16, i16* %v2_10006e98, align 2
  %v4_10006e98 = zext i16 %v3_10006e98 to i32
  store i32 %v4_10006e98, i32* %r0.global-to-local, align 4
  %v2_10006e9c = icmp ult i32 %v4_10006e98, %v2_10006e60
  %v3_10006e9c = icmp ugt i32 %v4_10006e98, %v2_10006e60
  %v4_10006e9c = icmp eq i32 %v4_10006e98, %v2_10006e60
  br i1 %v3_10006e9c, label %dec_label_pc_10006e8c, label %dec_label_pc_10006ea4

dec_label_pc_10006ea4:                            ; preds = %dec_label_pc_10006e94
  %v1_10006ea4 = add i32 %v0_10006e8c, 10
  %v2_10006ea4 = inttoptr i32 %v1_10006ea4 to i16*
  %v3_10006ea4 = load i16, i16* %v2_10006ea4, align 2
  %v4_10006ea4 = zext i16 %v3_10006ea4 to i32
  store i32 %v4_10006ea4, i32* %r0.global-to-local, align 4
  %v2_10006ea8 = icmp ult i32 %v4_10006ea4, %v2_10006e60
  %v3_10006ea8 = icmp ugt i32 %v4_10006ea4, %v2_10006e60
  %v4_10006ea8 = icmp eq i32 %v4_10006ea4, %v2_10006e60
  br i1 %v3_10006ea8, label %dec_label_pc_10006eb0.loopexit, label %dec_label_pc_10006e8c

dec_label_pc_10006eb0.loopexit:                   ; preds = %dec_label_pc_10006ea4
  store i1 %v2_10006ea8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ea8, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006eb0

dec_label_pc_10006eb0:                            ; preds = %dec_label_pc_10006eb0.loopexit, %dec_label_pc_10007b70
  %v0_10006eb8 = phi i32 [ %v0_10006e8c, %dec_label_pc_10006eb0.loopexit ], [ 0, %dec_label_pc_10007b70 ]
  %v0_10006eb0 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006eb0 = add i32 %v0_10006eb0, 4
  %v2_10006eb0 = inttoptr i32 %v1_10006eb0 to i32*
  %v3_10006eb0 = load i32, i32* %v2_10006eb0, align 4
  store i32 %v3_10006eb0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10006eb8 = inttoptr i32 %v0_10006eb0 to i32*
  store i32 %v0_10006eb8, i32* %v2_10006eb8, align 4
  %v0_10006ebc = load i32, i32* %r5.global-to-local, align 4
  %v1_10006ebc = load i32, i32* %r28.global-to-local, align 4
  %v2_10006ebc = add i32 %v1_10006ebc, 24
  %v3_10006ebc = inttoptr i32 %v2_10006ebc to i32*
  store i32 %v0_10006ebc, i32* %v3_10006ebc, align 4
  %v0_10006da8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006da4

dec_label_pc_10006f70.loopexit:                   ; preds = %dec_label_pc_100078a4, %dec_label_pc_1000769c, %dec_label_pc_100078a4.thread, %dec_label_pc_10006fdc
  %v0_10006f70 = phi i32 [ %v0_10006ff482, %dec_label_pc_10006fdc ], [ %v0_1000703c, %dec_label_pc_100078a4.thread ], [ %v0_100078a8, %dec_label_pc_100078a4 ], [ %v0_10006ff4, %dec_label_pc_1000769c ]
  %v1_10006f70 = add i32 %v0_10006f70, 12
  %v2_10006f70 = inttoptr i32 %v1_10006f70 to i32*
  %v3_10006f70 = load i32, i32* %v2_10006f70, align 4
  store i32 %v3_10006f70, i32* %r10.global-to-local, align 4
  %v1_10006f74 = icmp slt i32 %v3_10006f70, 0
  %v3_10006f74 = icmp eq i32 %v3_10006f70, 0
  store i1 %v1_10006f74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f74, label %dec_label_pc_10006dc4, label %dec_label_pc_10006f7c

dec_label_pc_10006f7c:                            ; preds = %dec_label_pc_10006f70.preheader, %dec_label_pc_10006f70.loopexit
  %v0_1000788c = phi i32 [ %v0_10006f70, %dec_label_pc_10006f70.loopexit ], [ %v0_10006f7089, %dec_label_pc_10006f70.preheader ]
  %v1_10006f7c = add i32 %v0_1000788c, 24
  %v2_10006f7c = inttoptr i32 %v1_10006f7c to i32*
  %v3_10006f7c = load i32, i32* %v2_10006f7c, align 4
  store i32 %v3_10006f7c, i32* %r0.global-to-local, align 4
  %v1_10006f80 = add i32 %v0_1000788c, 28
  store i32 %v1_10006f80, i32* %r14.global-to-local, align 4
  %v1_10006f84 = icmp slt i32 %v3_10006f7c, 256
  %v3_10006f84 = icmp eq i32 %v3_10006f7c, 256
  store i1 %v1_10006f84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006f84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006f84, label %dec_label_pc_10007884, label %dec_label_pc_10006f8c

dec_label_pc_10006f8c:                            ; preds = %dec_label_pc_10006f7c, %dec_label_pc_10007884
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v1_10006f94 = load i32, i32* %r30.global-to-local, align 4
  %v2_10006f94 = inttoptr i32 %v1_10006f94 to i32*
  store i32 0, i32* %v2_10006f94, align 4
  %v0_10006f98 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006f98 = add i32 %v0_10006f98, 24
  %v2_10006f98 = inttoptr i32 %v1_10006f98 to i32*
  %v3_10006f98 = load i32, i32* %v2_10006f98, align 4
  store i32 %v3_10006f98, i32* %r5.global-to-local, align 4
  %v1_10006f9c = add i32 %v0_10006f98, 4
  %v2_10006f9c = inttoptr i32 %v1_10006f9c to i32*
  %v3_10006f9c = load i32, i32* %v2_10006f9c, align 4
  store i32 %v3_10006f9c, i32* %r3.global-to-local, align 4
  %v0_10006fa0 = load i32, i32* %r14.global-to-local, align 4
  %v2_10006fa0 = add i32 %v0_10006fa0, %v3_10006f98
  store i32 %v2_10006fa0, i32* @r29, align 4
  %v1_10006fa4 = sub i32 256, %v3_10006f98
  store i32 %v1_10006fa4, i32* %r5.global-to-local, align 4
  store i32 268464048, i32* @lr, align 4
  %v4_10006fac = call i32 @function_1000a14c(i32 %v3_10006f9c, i32 %v2_10006fa0, i32 %v1_10006fa4, i32 16384)
  store i32 %v4_10006fac, i32* %r3.global-to-local, align 4
  %tmp262 = icmp slt i32 %v4_10006fac, 1
  br i1 %tmp262, label %dec_label_pc_10007820, label %dec_label_pc_10006fb8

dec_label_pc_10006fb8:                            ; preds = %dec_label_pc_10006f8c
  store i32 %v4_10006fac, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 65, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006fc4

dec_label_pc_10006fc4:                            ; preds = %dec_label_pc_10006fd4, %dec_label_pc_10006fb8
  %v0_10006fd8156 = phi i32 [ %v1_10006fd8, %dec_label_pc_10006fd4 ], [ %v4_10006fac, %dec_label_pc_10006fb8 ]
  %v1_10006fd0 = phi i32 [ %v1_10006fd4, %dec_label_pc_10006fd4 ], [ 0, %dec_label_pc_10006fb8 ]
  %v1_10006fc4 = load i32, i32* @r29, align 4
  %v2_10006fc4 = add i32 %v1_10006fc4, %v1_10006fd0
  %v3_10006fc4 = inttoptr i32 %v2_10006fc4 to i8*
  %v4_10006fc4 = load i8, i8* %v3_10006fc4, align 1
  %v5_10006fc4 = zext i8 %v4_10006fc4 to i32
  store i32 %v5_10006fc4, i32* %r0.global-to-local, align 4
  %v3_10006fc8 = icmp eq i8 %v4_10006fc4, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006fc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006fc8, label %dec_label_pc_10006fd0, label %dec_label_pc_10006fd4

dec_label_pc_10006fd0:                            ; preds = %dec_label_pc_10006fc4
  %v0_10006fd0 = load i32, i32* %r11.global-to-local, align 4
  %v3_10006fd0 = trunc i32 %v0_10006fd0 to i8
  store i8 %v3_10006fd0, i8* %v3_10006fc4, align 1
  %v0_10006fd4.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10006fd8.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10006fd4

dec_label_pc_10006fd4:                            ; preds = %dec_label_pc_10006fc4, %dec_label_pc_10006fd0
  %v0_10006fd8 = phi i32 [ %v0_10006fd8156, %dec_label_pc_10006fc4 ], [ %v0_10006fd8.pre, %dec_label_pc_10006fd0 ]
  %v0_10006fd4 = phi i32 [ %v1_10006fd0, %dec_label_pc_10006fc4 ], [ %v0_10006fd4.pre, %dec_label_pc_10006fd0 ]
  %v1_10006fd4 = add i32 %v0_10006fd4, 1
  store i32 %v1_10006fd4, i32* %r9.global-to-local, align 4
  %v1_10006fd8 = add i32 %v0_10006fd8, -1
  store i32 %v1_10006fd8, i32* %ctr.global-to-local, align 4
  %v2_10006fd8 = icmp eq i32 %v1_10006fd8, 0
  br i1 %v2_10006fd8, label %dec_label_pc_10006fdc, label %dec_label_pc_10006fc4

dec_label_pc_10006fdc:                            ; preds = %dec_label_pc_10006fd4, %dec_label_pc_10007824
  %v0_10006fdc = load i32, i32* %r28.global-to-local, align 4
  %v1_10006fdc = add i32 %v0_10006fdc, 24
  %v2_10006fdc = inttoptr i32 %v1_10006fdc to i32*
  %v3_10006fdc = load i32, i32* %v2_10006fdc, align 4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_10006fe4 = load i32, i32* @global_var_1001c6c4.104, align 4
  store i32 %v3_10006fe4, i32* %r0.global-to-local, align 4
  %v2_10006fe8 = add i32 %v3_10006fdc, %v4_10006fac
  store i32 %v2_10006fe8, i32* %r5.global-to-local, align 4
  store i32 %v2_10006fe8, i32* %v2_10006fdc, align 4
  %v0_10006ff0 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006ff0 = load i32, i32* %r28.global-to-local, align 4
  %v2_10006ff0 = add i32 %v1_10006ff0, 8
  %v3_10006ff0 = inttoptr i32 %v2_10006ff0 to i32*
  store i32 %v0_10006ff0, i32* %v3_10006ff0, align 4
  %v0_10006ff482 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006ff483 = add i32 %v0_10006ff482, 12
  %v2_10006ff484 = inttoptr i32 %v1_10006ff483 to i32*
  %v3_10006ff485 = load i32, i32* %v2_10006ff484, align 4
  store i32 %v3_10006ff485, i32* %r10.global-to-local, align 4
  %v1_10006ff886 = icmp ult i32 %v3_10006ff485, 10
  %v2_10006ff887 = icmp ugt i32 %v3_10006ff485, 10
  %v3_10006ff888 = icmp eq i32 %v3_10006ff485, 10
  store i1 %v1_10006ff886, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ff888, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006ff887, label %dec_label_pc_10006f70.loopexit, label %dec_label_pc_10007000

dec_label_pc_10007000:                            ; preds = %dec_label_pc_10006fdc, %dec_label_pc_1000769c
  %v0_10007004 = phi i32 [ %v3_10006ff4, %dec_label_pc_1000769c ], [ %v3_10006ff485, %dec_label_pc_10006fdc ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_10007004 = mul i32 %v0_10007004, 4
  store i32 %v1_10007004, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000c038.155 to i32), i32* %r11.global-to-local, align 4
  %v2_1000700c = add i32 %v1_10007004, ptrtoint (i32* @global_var_1000c038.155 to i32)
  %v3_1000700c = inttoptr i32 %v2_1000700c to i32*
  %v4_1000700c = load i32, i32* %v3_1000700c, align 4
  %v2_10007010 = add i32 %v4_1000700c, ptrtoint (i32* @global_var_1000c038.155 to i32)
  store i32 %v2_10007010, i32* %r9.global-to-local, align 4
  store i32 %v2_10007010, i32* %ctr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10007010)
  store i32 ptrtoint (i32* @global_var_1000c064.156 to i32), i32* %r11.global-to-local, align 4
  store i32 31, i32* %r22.global-to-local, align 4
  store i32 268500992, i32* %r10.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v0_10007038 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_10007038, i32* %r29.global-to-local, align 4
  %v0_1000703c = load i32, i32* %r28.global-to-local, align 4
  %v1_1000703c = add i32 %v0_1000703c, 24
  %v2_1000703c = inttoptr i32 %v1_1000703c to i32*
  %v3_1000703c = load i32, i32* %v2_1000703c, align 4
  store i32 %v3_1000703c, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 65531, i32* %r27.global-to-local, align 4
  store i32 -3, i32* %r18.global-to-local, align 4
  store i32 -385280, i32* %r21.global-to-local, align 4
  store i32 -4, i32* %r17.global-to-local, align 4
  %v2_1000705879 = icmp sgt i32 %v3_1000703c, 0
  %v4_1000705881 = icmp eq i32 %v3_1000703c, 0
  store i1 %v2_1000705879, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000705881, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000705879, label %dec_label_pc_10007060.preheader, label %dec_label_pc_100078a4.thread

dec_label_pc_100078a4.thread:                     ; preds = %dec_label_pc_10007000
  br label %dec_label_pc_10006f70.loopexit

dec_label_pc_10007060.preheader:                  ; preds = %dec_label_pc_10007000, %dec_label_pc_100077ac
  %v0_100077b0173 = phi i32 [ %v1_100077b0, %dec_label_pc_100077ac ], [ 0, %dec_label_pc_10007000 ]
  %v0_100077d0163 = phi i32 [ %v0_100079c8, %dec_label_pc_100077ac ], [ %v0_1000703c, %dec_label_pc_10007000 ]
  %v1_1000706c162 = phi i32 [ %v1_10007058, %dec_label_pc_100077ac ], [ %v3_1000703c, %dec_label_pc_10007000 ]
  %v0_10007060160 = phi i32 [ %v1_100077ac, %dec_label_pc_100077ac ], [ %v0_10007038, %dec_label_pc_10007000 ]
  br label %dec_label_pc_10007060

dec_label_pc_10007060:                            ; preds = %dec_label_pc_10007060.preheader, %dec_label_pc_100070d0
  %v0_100077b0 = phi i32 [ %v0_100077b0173, %dec_label_pc_10007060.preheader ], [ %v0_100070e4, %dec_label_pc_100070d0 ]
  %v0_100079c8 = phi i32 [ %v0_100077d0163, %dec_label_pc_10007060.preheader ], [ %v0_100070dc, %dec_label_pc_100070d0 ]
  %v1_10007058 = phi i32 [ %v1_1000706c162, %dec_label_pc_10007060.preheader ], [ %v3_100070dc, %dec_label_pc_100070d0 ]
  %v0_100077ac = phi i32 [ %v0_10007060160, %dec_label_pc_10007060.preheader ], [ %v1_100070e0, %dec_label_pc_100070d0 ]
  %v1_10007060 = inttoptr i32 %v0_100077ac to i8*
  %v2_10007060 = load i8, i8* %v1_10007060, align 1
  %v3_10007060 = zext i8 %v2_10007060 to i32
  store i32 %v3_10007060, i32* %r0.global-to-local, align 4
  %v1_10007064 = icmp ne i8 %v2_10007060, -1
  %v3_10007064 = icmp eq i8 %v2_10007060, -1
  store i1 %v1_10007064, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007064, label %dec_label_pc_1000706c, label %dec_label_pc_100070ec

dec_label_pc_1000706c:                            ; preds = %dec_label_pc_10007060
  %v0_1000706c = load i32, i32* %r14.global-to-local, align 4
  %v2_1000706c = add i32 %v0_1000706c, %v1_10007058
  store i32 %v2_1000706c, i32* %r9.global-to-local, align 4
  %v1_10007070 = add i32 %v0_100077ac, 1
  store i32 %v1_10007070, i32* %r11.global-to-local, align 4
  %v2_10007074 = icmp ult i32 %v2_1000706c, %v1_10007070
  %v3_10007074 = icmp ugt i32 %v2_1000706c, %v1_10007070
  %v4_10007074 = icmp eq i32 %v2_1000706c, %v1_10007070
  store i1 %v2_10007074, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007074, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007074, label %dec_label_pc_1000707c, label %dec_label_pc_100070ec

dec_label_pc_1000707c:                            ; preds = %dec_label_pc_1000706c
  %v2_1000707c = inttoptr i32 %v1_10007070 to i8*
  %v3_1000707c = load i8, i8* %v2_1000707c, align 1
  %v4_1000707c = zext i8 %v3_1000707c to i32
  store i32 %v4_1000707c, i32* %r0.global-to-local, align 4
  %v1_10007080 = icmp ne i8 %v3_1000707c, -1
  %v3_10007080 = icmp eq i8 %v3_1000707c, -1
  store i1 %v1_10007080, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007080, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007080, label %dec_label_pc_100077ac, label %dec_label_pc_10007088

dec_label_pc_10007088:                            ; preds = %dec_label_pc_1000707c
  %v1_10007088 = icmp ult i8 %v3_1000707c, -3
  %v3_10007088 = icmp eq i8 %v3_1000707c, -3
  store i1 %v1_10007088, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007088, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007088, label %dec_label_pc_100077b8, label %dec_label_pc_10007090

dec_label_pc_10007090:                            ; preds = %dec_label_pc_10007088
  %v1_10007090 = add i32 %v0_100077ac, 2
  store i32 %v1_10007090, i32* %r0.global-to-local, align 4
  %v2_10007094 = icmp ult i32 %v2_1000706c, %v1_10007090
  %v3_10007094 = icmp ugt i32 %v2_1000706c, %v1_10007090
  %v4_10007094 = icmp eq i32 %v2_1000706c, %v1_10007090
  store i1 %v2_10007094, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007094, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007094, label %dec_label_pc_1000709c, label %dec_label_pc_100070ec

dec_label_pc_1000709c:                            ; preds = %dec_label_pc_100079ec, %dec_label_pc_10007090, %dec_label_pc_100079f4
  %v0_1000709c = phi i32 [ %v1_10007070, %dec_label_pc_100079ec ], [ %v1_10007070, %dec_label_pc_10007090 ], [ %v0_1000709c.pre, %dec_label_pc_100079f4 ]
  %v1_1000709c = inttoptr i32 %v0_1000709c to i8*
  %v2_1000709c = load i8, i8* %v1_1000709c, align 1
  %v3_1000709c = zext i8 %v2_1000709c to i32
  store i32 %v3_1000709c, i32* %r0.global-to-local, align 4
  %v1_100070a0 = icmp ult i8 %v2_1000709c, -3
  %v3_100070a0 = icmp eq i8 %v2_1000709c, -3
  store i1 %v1_100070a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070a0, label %dec_label_pc_10007808, label %dec_label_pc_100070a8

dec_label_pc_100070a8:                            ; preds = %dec_label_pc_100077f8, %dec_label_pc_1000709c
  %v2_10007874 = phi i32 [ %v0_100077fc, %dec_label_pc_100077f8 ], [ %v0_1000709c, %dec_label_pc_1000709c ]
  %v0_100070a8 = phi i32 [ %v3_100077fc, %dec_label_pc_100077f8 ], [ %v3_1000709c, %dec_label_pc_1000709c ]
  %v1_100070a8 = icmp ult i32 %v0_100070a8, 251
  %v3_100070a8 = icmp eq i32 %v0_100070a8, 251
  store i1 %v1_100070a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070a8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070a8, label %dec_label_pc_10007874, label %dec_label_pc_100070b0

dec_label_pc_100070b0:                            ; preds = %dec_label_pc_100070a8, %dec_label_pc_10007874
  %v0_100070b0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100070b0 = add i32 %v0_100070b0, 2
  %v2_100070b0 = inttoptr i32 %v1_100070b0 to i8*
  %v3_100070b0 = load i8, i8* %v2_100070b0, align 1
  %v4_100070b0 = zext i8 %v3_100070b0 to i32
  store i32 %v4_100070b0, i32* %r0.global-to-local, align 4
  %v1_100070b4 = icmp ult i8 %v3_100070b0, -3
  %v3_100070b4 = icmp eq i8 %v3_100070b0, -3
  store i1 %v1_100070b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070b4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070b4, label %dec_label_pc_10007818, label %dec_label_pc_100070bc

dec_label_pc_100070bc:                            ; preds = %dec_label_pc_10007808, %dec_label_pc_100070b0
  %v2_1000787c = phi i32 [ %v0_1000780c, %dec_label_pc_10007808 ], [ %v0_100070b0, %dec_label_pc_100070b0 ]
  %v0_100070bc = phi i32 [ %v4_1000780c, %dec_label_pc_10007808 ], [ %v4_100070b0, %dec_label_pc_100070b0 ]
  %v1_100070bc = icmp ult i32 %v0_100070bc, 251
  %v3_100070bc = icmp eq i32 %v0_100070bc, 251
  store i1 %v1_100070bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100070bc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100070bc, label %dec_label_pc_1000787c, label %dec_label_pc_100070c4

dec_label_pc_100070c4:                            ; preds = %dec_label_pc_100070bc, %dec_label_pc_1000787c, %dec_label_pc_10007818
  %v0_100070c4 = load i32, i32* %r28.global-to-local, align 4
  %v1_100070c4 = add i32 %v0_100070c4, 4
  %v2_100070c4 = inttoptr i32 %v1_100070c4 to i32*
  %v3_100070c4 = load i32, i32* %v2_100070c4, align 4
  store i32 %v3_100070c4, i32* %r3.global-to-local, align 4
  %v0_100070c8 = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100070d0

dec_label_pc_100070d0:                            ; preds = %dec_label_pc_100079c8, %dec_label_pc_100070c4
  %storemerge2 = phi i32 [ %v2_100079e0, %dec_label_pc_100079c8 ], [ %v0_100070c8, %dec_label_pc_100070c4 ]
  %storemerge = phi i32 [ 9, %dec_label_pc_100079c8 ], [ 3, %dec_label_pc_100070c4 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  %v0_100070d4 = load i32, i32* @r31, align 4
  %v1_100070d4 = add i32 %v0_100070d4, 3
  store i32 %v1_100070d4, i32* @r31, align 4
  store i32 268464348, i32* @lr, align 4
  %v4_100070d8 = call i32 @function_1000a1c4(i32 16384, i32 %storemerge2, i32 %storemerge, i32 16384)
  store i32 %v4_100070d8, i32* %r3.global-to-local, align 4
  %v0_100070dc = load i32, i32* %r28.global-to-local, align 4
  %v1_100070dc = add i32 %v0_100070dc, 24
  %v2_100070dc = inttoptr i32 %v1_100070dc to i32*
  %v3_100070dc = load i32, i32* %v2_100070dc, align 4
  store i32 %v3_100070dc, i32* %r5.global-to-local, align 4
  %v0_100070e0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100070e0 = add i32 %v0_100070e0, 3
  store i32 %v1_100070e0, i32* %r29.global-to-local, align 4
  %v0_100070e4 = load i32, i32* @r31, align 4
  %v2_100070e4 = icmp slt i32 %v0_100070e4, %v3_100070dc
  %v4_100070e4 = icmp eq i32 %v0_100070e4, %v3_100070dc
  store i1 %v2_100070e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100070e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100070e4, label %dec_label_pc_10007060, label %dec_label_pc_100070ec

dec_label_pc_100070ec:                            ; preds = %dec_label_pc_100077ac, %dec_label_pc_100077b8, %dec_label_pc_10007090, %dec_label_pc_1000706c, %dec_label_pc_10007060, %dec_label_pc_100070d0
  %v0_100078a8 = phi i32 [ %v0_100079c8, %dec_label_pc_100077b8 ], [ %v0_100079c8, %dec_label_pc_10007090 ], [ %v0_100079c8, %dec_label_pc_1000706c ], [ %v0_100079c8, %dec_label_pc_10007060 ], [ %v0_100070dc, %dec_label_pc_100070d0 ], [ %v0_100079c8, %dec_label_pc_100077ac ]
  %v0_100070ec = phi i32 [ %v0_100077b0, %dec_label_pc_100077b8 ], [ %v0_100077b0, %dec_label_pc_10007090 ], [ %v0_100077b0, %dec_label_pc_1000706c ], [ %v0_100077b0, %dec_label_pc_10007060 ], [ %v0_100070e4, %dec_label_pc_100070d0 ], [ %v1_100077b0, %dec_label_pc_100077ac ]
  %tmp263 = icmp slt i32 %v0_100070ec, 1
  br i1 %tmp263, label %dec_label_pc_100078a4, label %dec_label_pc_100070f4

dec_label_pc_100070f4:                            ; preds = %dec_label_pc_100070ec
  store i32 3, i32* %r10.global-to-local, align 4
  %v2_100070f8 = add i32 %v0_100078a8, 12
  %v3_100070f8 = inttoptr i32 %v2_100070f8 to i32*
  store i32 3, i32* %v3_100070f8, align 4
  %v0_1000769c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1000769c.pre = load i32, i32* @r31, align 4
  %v1_100076b4.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000769c

dec_label_pc_1000769c:                            ; preds = %dec_label_pc_100070f4, %dec_label_pc_100078a8
  %v1_100076b4 = phi i32 [ %v1_100076b4.pre, %dec_label_pc_100070f4 ], [ %v0_100078a8, %dec_label_pc_100078a8 ]
  %v0_100076a8 = phi i32 [ %v1_1000769c.pre, %dec_label_pc_100070f4 ], [ %v0_100070ec, %dec_label_pc_100078a8 ]
  %v1_100076ac = phi i32 [ %v0_1000769c.pre, %dec_label_pc_100070f4 ], [ %v3_100078a8, %dec_label_pc_100078a8 ]
  %v2_1000769c = icmp slt i32 %v1_100076ac, %v0_100076a8
  %v3_1000769c = icmp sgt i32 %v1_100076ac, %v0_100076a8
  %v4_1000769c = icmp eq i32 %v1_100076ac, %v0_100076a8
  store i1 %v2_1000769c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000769c, i1* %cr7_eq.global-to-local, align 1
  %v0_100076a8.v1_100076ac = select i1 %v3_1000769c, i32 %v0_100076a8, i32 %v1_100076ac
  store i32 %v0_100076a8.v1_100076ac, i32* %r0.global-to-local, align 4
  %v2_100076ac = sub i32 %v1_100076ac, %v0_100076a8.v1_100076ac
  store i32 %v2_100076ac, i32* %r5.global-to-local, align 4
  %v0_100076b0 = load i32, i32* %r14.global-to-local, align 4
  %v2_100076b0 = add i32 %v0_100076b0, %v0_100076a8.v1_100076ac
  %v2_100076b4 = add i32 %v1_100076b4, 24
  %v3_100076b4 = inttoptr i32 %v2_100076b4 to i32*
  store i32 %v2_100076ac, i32* %v3_100076b4, align 4
  %v0_100076b8 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_100076b8, i32* %r3.global-to-local, align 4
  store i32 268465856, i32* @lr, align 4
  %v3_100076bc = call i32 @function_10009cbc(i32 %v0_100076b8, i32 %v2_100076b0, i32 %v2_100076ac)
  store i32 %v3_100076bc, i32* %r3.global-to-local, align 4
  %v0_10006ff4 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006ff4 = add i32 %v0_10006ff4, 12
  %v2_10006ff4 = inttoptr i32 %v1_10006ff4 to i32*
  %v3_10006ff4 = load i32, i32* %v2_10006ff4, align 4
  store i32 %v3_10006ff4, i32* %r10.global-to-local, align 4
  %v1_10006ff8 = icmp ult i32 %v3_10006ff4, 10
  %v2_10006ff8 = icmp ugt i32 %v3_10006ff4, 10
  %v3_10006ff8 = icmp eq i32 %v3_10006ff4, 10
  store i1 %v1_10006ff8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10006ff8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006ff8, label %dec_label_pc_10006f70.loopexit, label %dec_label_pc_10007000

dec_label_pc_100077ac:                            ; preds = %dec_label_pc_1000707c
  %v1_100077ac = add i32 %v0_100077ac, 2
  store i32 %v1_100077ac, i32* %r29.global-to-local, align 4
  %v1_100077b0 = add i32 %v0_100077b0, 2
  store i32 %v1_100077b0, i32* @r31, align 4
  %v2_10007058 = icmp slt i32 %v1_100077b0, %v1_10007058
  %v4_10007058 = icmp eq i32 %v1_100077b0, %v1_10007058
  store i1 %v2_10007058, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10007058, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007058, label %dec_label_pc_10007060.preheader, label %dec_label_pc_100070ec

dec_label_pc_100077b8:                            ; preds = %dec_label_pc_10007088
  %v0_100077b8 = load i32, i32* %r27.global-to-local, align 4
  %v6_100077b8 = trunc i32 %v0_100077b8 to i16
  store i16 %v6_100077b8, i16* %stack_var_-1926, align 2
  %v1_100077bc = add i32 %v0_100077ac, 2
  store i32 %v1_100077bc, i32* %r0.global-to-local, align 4
  %v0_100077c4 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_100077c4, i32* %stack_var_-1900, align 4
  %v1_100077d0 = add i32 %v0_100079c8, 24
  %v2_100077d0 = inttoptr i32 %v1_100077d0 to i32*
  %v3_100077d0 = load i32, i32* %v2_100077d0, align 4
  store i32 %v3_100077d0, i32* %r5.global-to-local, align 4
  %v2_100077d4 = add i32 %v3_100077d0, %v0_1000706c
  store i32 %v2_100077d4, i32* %r9.global-to-local, align 4
  %v2_100077d8 = icmp ult i32 %v2_100077d4, %v1_100077bc
  %v3_100077d8 = icmp ugt i32 %v2_100077d4, %v1_100077bc
  %v4_100077d8 = icmp eq i32 %v2_100077d4, %v1_100077bc
  store i1 %v2_100077d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100077d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077d8, label %dec_label_pc_100077e0, label %dec_label_pc_100070ec

dec_label_pc_100077e0:                            ; preds = %dec_label_pc_100077b8
  %v2_100077e0 = inttoptr i32 %v1_100077bc to i8*
  %v3_100077e0 = load i8, i8* %v2_100077e0, align 1
  %v4_100077e0 = zext i8 %v3_100077e0 to i32
  store i32 %v4_100077e0, i32* %r0.global-to-local, align 4
  %v1_100077e4 = icmp ult i8 %v3_100077e0, 31
  %v3_100077e4 = icmp eq i8 %v3_100077e0, 31
  store i1 %v1_100077e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077e4, label %dec_label_pc_100079c8, label %dec_label_pc_100077ec

dec_label_pc_100077ec:                            ; preds = %dec_label_pc_100077e0
  %v2_100077ec = load i8, i8* %v1_10007060, align 1
  %v3_100077ec = zext i8 %v2_100077ec to i32
  store i32 %v3_100077ec, i32* %r0.global-to-local, align 4
  %v1_100077f0 = icmp ult i8 %v2_100077ec, -3
  %v3_100077f0 = icmp eq i8 %v2_100077ec, -3
  store i1 %v1_100077f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100077f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100077f0, label %dec_label_pc_100077f8, label %dec_label_pc_100079ec

dec_label_pc_100077f8:                            ; preds = %dec_label_pc_100077ec
  %v0_100077f8 = load i32, i32* %r17.global-to-local, align 4
  %v1_100077f8 = trunc i32 %v0_100077f8 to i8
  store i8 %v1_100077f8, i8* %v1_10007060, align 1
  %v0_100077fc = load i32, i32* %r11.global-to-local, align 4
  %v1_100077fc = inttoptr i32 %v0_100077fc to i8*
  %v2_100077fc = load i8, i8* %v1_100077fc, align 1
  %v3_100077fc = zext i8 %v2_100077fc to i32
  store i32 %v3_100077fc, i32* %r0.global-to-local, align 4
  %v1_10007800 = icmp ult i8 %v2_100077fc, -3
  %v3_10007800 = icmp eq i8 %v2_100077fc, -3
  store i1 %v1_10007800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007800, label %dec_label_pc_10007808, label %dec_label_pc_100070a8

dec_label_pc_10007808:                            ; preds = %dec_label_pc_100077f8, %dec_label_pc_1000709c
  %v2_10007808 = phi i32 [ %v0_100077fc, %dec_label_pc_100077f8 ], [ %v0_1000709c, %dec_label_pc_1000709c ]
  %v0_10007808 = load i32, i32* %r17.global-to-local, align 4
  %v1_10007808 = trunc i32 %v0_10007808 to i8
  %v3_10007808 = inttoptr i32 %v2_10007808 to i8*
  store i8 %v1_10007808, i8* %v3_10007808, align 1
  %v0_1000780c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000780c = add i32 %v0_1000780c, 2
  %v2_1000780c = inttoptr i32 %v1_1000780c to i8*
  %v3_1000780c = load i8, i8* %v2_1000780c, align 1
  %v4_1000780c = zext i8 %v3_1000780c to i32
  store i32 %v4_1000780c, i32* %r0.global-to-local, align 4
  %v1_10007810 = icmp ult i8 %v3_1000780c, -3
  %v3_10007810 = icmp eq i8 %v3_1000780c, -3
  store i1 %v1_10007810, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007810, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007810, label %dec_label_pc_10007818, label %dec_label_pc_100070bc

dec_label_pc_10007818:                            ; preds = %dec_label_pc_10007808, %dec_label_pc_100070b0
  %v2_10007818 = phi i32 [ %v0_1000780c, %dec_label_pc_10007808 ], [ %v0_100070b0, %dec_label_pc_100070b0 ]
  %v0_10007818 = load i32, i32* %r17.global-to-local, align 4
  %v1_10007818 = trunc i32 %v0_10007818 to i8
  %v3_10007818 = add i32 %v2_10007818, 2
  %v4_10007818 = inttoptr i32 %v3_10007818 to i8*
  store i8 %v1_10007818, i8* %v4_10007818, align 1
  br label %dec_label_pc_100070c4

dec_label_pc_10007820:                            ; preds = %dec_label_pc_10006f8c
  %v3_10006fb0 = icmp eq i32 %v4_10006fac, 0
  br i1 %v3_10006fb0, label %dec_label_pc_10007b2c, label %dec_label_pc_10007824

dec_label_pc_10007824:                            ; preds = %dec_label_pc_10007820
  %v1_10007824 = icmp slt i32 %v4_10006fac, -1
  %v3_10007824 = icmp eq i32 %v4_10006fac, -1
  store i1 %v1_10007824, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007824, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007824, label %dec_label_pc_1000782c, label %dec_label_pc_10006fdc

dec_label_pc_1000782c:                            ; preds = %dec_label_pc_10007824
  %v0_1000782c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000782c = inttoptr i32 %v0_1000782c to i32*
  %v2_1000782c = load i32, i32* %v1_1000782c, align 4
  store i32 %v2_1000782c, i32* %r0.global-to-local, align 4
  %v1_10007830 = icmp slt i32 %v2_1000782c, 11
  %v3_10007830 = icmp eq i32 %v2_1000782c, 11
  store i1 %v1_10007830, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007830, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007830, label %dec_label_pc_10006dc4, label %dec_label_pc_10007838

dec_label_pc_10007838:                            ; preds = %dec_label_pc_1000782c, %dec_label_pc_10007b2c
  %v0_10007838 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007838 = add i32 %v0_10007838, 4
  %v2_10007838 = inttoptr i32 %v1_10007838 to i32*
  %v3_10007838 = load i32, i32* %v2_10007838, align 4
  store i32 %v3_10007838, i32* %r3.global-to-local, align 4
  store i32 268466240, i32* @lr, align 4
  %v0_1000783c = call i32 @function_1000955c()
  store i32 %v0_1000783c, i32* %r3.global-to-local, align 4
  %v0_10007840 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007840 = add i32 %v0_10007840, 284
  %v2_10007840 = inttoptr i32 %v1_10007840 to i8*
  %v3_10007840 = load i8, i8* %v2_10007840, align 1
  %v4_10007840 = zext i8 %v3_10007840 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10007848 = add nuw nsw i32 %v4_10007840, 1
  store i32 %v1_10007848, i32* %r9.global-to-local, align 4
  %v2_1000784c = add i32 %v0_10007840, 4
  %v3_1000784c = inttoptr i32 %v2_1000784c to i32*
  store i32 -1, i32* %v3_1000784c, align 4
  %v0_10007850 = load i32, i32* %r9.global-to-local, align 4
  %v1_10007850 = urem i32 %v0_10007850, 256
  store i32 %v1_10007850, i32* %r9.global-to-local, align 4
  %v1_10007854 = icmp ult i32 %v1_10007850, 9
  %v3_10007854 = icmp eq i32 %v1_10007850, 9
  store i1 %v1_10007854, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007854, i1* %cr7_eq.global-to-local, align 1
  %v1_10007858 = trunc i32 %v0_10007850 to i8
  %v2_10007858 = load i32, i32* %r28.global-to-local, align 4
  %v3_10007858 = add i32 %v2_10007858, 284
  %v4_10007858 = inttoptr i32 %v3_10007858 to i8*
  store i8 %v1_10007858, i8* %v4_10007858, align 1
  %v0_1000785c = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000785c = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000785c = or i1 %v0_1000785c, %v1_1000785c
  br i1 %v2_1000785c, label %dec_label_pc_10007b38, label %dec_label_pc_10007860

dec_label_pc_10007860:                            ; preds = %dec_label_pc_10007838
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10007868 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007868 = add i32 %v1_10007868, 12
  %v3_10007868 = inttoptr i32 %v2_10007868 to i32*
  store i32 0, i32* %v3_10007868, align 4
  %v0_1000786c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000786c = trunc i32 %v0_1000786c to i8
  %v2_1000786c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000786c = add i32 %v2_1000786c, 284
  %v4_1000786c = inttoptr i32 %v3_1000786c to i8*
  store i8 %v1_1000786c, i8* %v4_1000786c, align 1
  br label %dec_label_pc_10006dc4

dec_label_pc_10007874:                            ; preds = %dec_label_pc_100070a8
  %v0_10007874 = load i32, i32* %r18.global-to-local, align 4
  %v1_10007874 = trunc i32 %v0_10007874 to i8
  %v3_10007874 = inttoptr i32 %v2_10007874 to i8*
  store i8 %v1_10007874, i8* %v3_10007874, align 1
  br label %dec_label_pc_100070b0

dec_label_pc_1000787c:                            ; preds = %dec_label_pc_100070bc
  %v0_1000787c = load i32, i32* %r18.global-to-local, align 4
  %v1_1000787c = trunc i32 %v0_1000787c to i8
  %v3_1000787c = add i32 %v2_1000787c, 2
  %v4_1000787c = inttoptr i32 %v3_1000787c to i8*
  store i8 %v1_1000787c, i8* %v4_1000787c, align 1
  br label %dec_label_pc_100070c4

dec_label_pc_10007884:                            ; preds = %dec_label_pc_10006f7c
  store i32 192, i32* %r5.global-to-local, align 4
  store i32 %v1_10006f80, i32* %r3.global-to-local, align 4
  %v1_1000788c = add i32 %v0_1000788c, 92
  store i32 268466324, i32* @lr, align 4
  %v3_10007890 = call i32 @function_10009cbc(i32 %v1_10006f80, i32 %v1_1000788c, i32 192)
  store i32 %v3_10007890, i32* %r3.global-to-local, align 4
  %v0_10007894 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007894 = add i32 %v0_10007894, 24
  %v2_10007894 = inttoptr i32 %v1_10007894 to i32*
  %v3_10007894 = load i32, i32* %v2_10007894, align 4
  store i32 %v3_10007894, i32* %r9.global-to-local, align 4
  %v1_10007898 = add i32 %v3_10007894, -64
  store i32 %v1_10007898, i32* %r5.global-to-local, align 4
  store i32 %v1_10007898, i32* %v2_10007894, align 4
  br label %dec_label_pc_10006f8c

dec_label_pc_100078a4:                            ; preds = %dec_label_pc_100070ec
  %v3_100070ec = icmp eq i32 %v0_100070ec, 0
  br i1 %v3_100070ec, label %dec_label_pc_10006f70.loopexit, label %dec_label_pc_100078a8

dec_label_pc_100078a8:                            ; preds = %dec_label_pc_100078a4
  %v1_100078a8 = add i32 %v0_100078a8, 24
  %v2_100078a8 = inttoptr i32 %v1_100078a8 to i32*
  %v3_100078a8 = load i32, i32* %v2_100078a8, align 4
  store i32 %v3_100078a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000769c

dec_label_pc_100079c8:                            ; preds = %dec_label_pc_100077e0
  %v1_100079c8 = add i32 %v0_100079c8, 4
  %v2_100079c8 = inttoptr i32 %v1_100079c8 to i32*
  %v3_100079c8 = load i32, i32* %v2_100079c8, align 4
  store i32 %v3_100079c8, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r5.global-to-local, align 4
  store i32 16384, i32* %r6.global-to-local, align 4
  store i32 268466652, i32* @lr, align 4
  %v4_100079d8 = call i32 @function_1000a1c4(i32 %v3_100079c8, i32 %v2_100079cc, i32 3, i32 16384)
  store i32 %v4_100079d8, i32* %r3.global-to-local, align 4
  %v0_100079dc = load i32, i32* %r28.global-to-local, align 4
  %v1_100079dc = add i32 %v0_100079dc, 4
  %v2_100079dc = inttoptr i32 %v1_100079dc to i32*
  %v3_100079dc = load i32, i32* %v2_100079dc, align 4
  store i32 %v3_100079dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100070d0

dec_label_pc_100079ec:                            ; preds = %dec_label_pc_100077ec
  %v1_100079ec = icmp ult i8 %v2_100077ec, -5
  %v3_100079ec = icmp eq i8 %v2_100077ec, -5
  store i1 %v1_100079ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100079ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100079ec, label %dec_label_pc_100079f4, label %dec_label_pc_1000709c

dec_label_pc_100079f4:                            ; preds = %dec_label_pc_100079ec
  %v0_100079f4 = load i32, i32* %r18.global-to-local, align 4
  %v1_100079f4 = trunc i32 %v0_100079f4 to i8
  store i8 %v1_100079f4, i8* %v1_10007060, align 1
  %v0_1000709c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000709c

dec_label_pc_10007b2c:                            ; preds = %dec_label_pc_10007820
  store i32 104, i32* %r0.global-to-local, align 4
  %v1_10007b30 = load i32, i32* %r30.global-to-local, align 4
  %v2_10007b30 = inttoptr i32 %v1_10007b30 to i32*
  store i32 104, i32* %v2_10007b30, align 4
  br label %dec_label_pc_10007838

dec_label_pc_10007b38:                            ; preds = %dec_label_pc_10007838
  %v0_10007b38 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007b38, i32* @r3, align 4
  store i32 268467008, i32* @lr, align 4
  %v0_10007b3c = call i32 @function_10005e28()
  store i32 %v0_10007b3c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006dc4

dec_label_pc_10007b44:                            ; preds = %dec_label_pc_10006e1c
  %v0_10007b44 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007b44 = add i32 %v0_10007b44, 4
  %v2_10007b44 = inttoptr i32 %v1_10007b44 to i32*
  %v3_10007b44 = load i32, i32* %v2_10007b44, align 4
  store i32 %v3_10007b44, i32* %r3.global-to-local, align 4
  store i32 268467020, i32* @lr, align 4
  %v0_10007b48 = call i32 @function_1000955c()
  store i32 -1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007b54 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007b54 = add i32 %v1_10007b54, 4
  %v3_10007b54 = inttoptr i32 %v2_10007b54 to i32*
  store i32 -1, i32* %v3_10007b54, align 4
  %v0_10007b58 = load i32, i32* %r10.global-to-local, align 4
  %v1_10007b58 = load i32, i32* %r28.global-to-local, align 4
  %v2_10007b58 = add i32 %v1_10007b58, 12
  %v3_10007b58 = inttoptr i32 %v2_10007b58 to i32*
  store i32 %v0_10007b58, i32* %v3_10007b58, align 4
  %v0_10007b5c = load i32, i32* @r31, align 4
  %v1_10007b5c = trunc i32 %v0_10007b5c to i8
  %v2_10007b5c = load i32, i32* %r28.global-to-local, align 4
  %v3_10007b5c = add i32 %v2_10007b5c, 284
  %v4_10007b5c = inttoptr i32 %v3_10007b5c to i8*
  store i8 %v1_10007b5c, i8* %v4_10007b5c, align 1
  br label %dec_label_pc_10006dc4

dec_label_pc_10007b64:                            ; preds = %dec_label_pc_10006cf8, %dec_label_pc_10006cdc
  %v0_10007b64 = load i32, i32* %r22.global-to-local, align 4
  %v1_10007b64 = load i32, i32* @r29, align 4
  %v2_10007b64 = add i32 %v1_10007b64, 12
  %v3_10007b64 = inttoptr i32 %v2_10007b64 to i32*
  store i32 %v0_10007b64, i32* %v3_10007b64, align 4
  %v0_10007b68 = load i32, i32* %r27.global-to-local, align 4
  %v1_10007b68 = trunc i32 %v0_10007b68 to i8
  %v2_10007b68 = load i32, i32* @r29, align 4
  %v3_10007b68 = add i32 %v2_10007b68, 284
  %v4_10007b68 = inttoptr i32 %v3_10007b68 to i8*
  store i8 %v1_10007b68, i8* %v4_10007b68, align 1
  br label %dec_label_pc_10006c18

dec_label_pc_10007b70.loopexit:                   ; preds = %dec_label_pc_10006e8c
  store i1 %v2_10006ea896, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10006ea898, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10007b70

dec_label_pc_10007b70:                            ; preds = %dec_label_pc_10007b70.loopexit, %dec_label_pc_10006e4c
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10006eb0

dec_label_pc_10007b88:                            ; preds = %dec_label_pc_100068f8
  %v1_10007b88 = icmp slt i32 %v1_10006584, 46
  %v3_10007b88 = icmp eq i32 %v1_10006584, 46
  store i1 %v1_10007b88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b88, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007b88, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007b94:                            ; preds = %dec_label_pc_100068f0
  %v1_10007b94 = icmp ult i32 %v1_10006584, 102
  %v3_10007b94 = icmp eq i32 %v1_10006584, 102
  store i1 %v1_10007b94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b94, i1* %cr7_eq.global-to-local, align 1
  %tmp264 = icmp ult i32 %v1_10006584, 103
  br i1 %tmp264, label %dec_label_pc_10006908, label %dec_label_pc_10007b9c

dec_label_pc_10007b9c:                            ; preds = %dec_label_pc_10007b94
  %v1_10007b9c = icmp ult i32 %v1_10006584, 107
  %v3_10007b9c = icmp eq i32 %v1_10006584, 107
  store i1 %v1_10007b9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007b9c, i1* %cr7_eq.global-to-local, align 1
  %tmp265 = icmp ult i32 %v1_10006584, 108
  br i1 %tmp265, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007ba8:                            ; preds = %dec_label_pc_100068e8
  %v1_10007ba8 = icmp slt i32 %v1_10006584, 164
  %v3_10007ba8 = icmp eq i32 %v1_10006584, 164
  store i1 %v1_10007ba8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ba8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007ba8, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007bb4:                            ; preds = %dec_label_pc_100068e0
  %v1_10007bb4 = icmp slt i32 %v1_10006584, 208
  %v3_10007bb4 = icmp eq i32 %v1_10006584, 208
  store i1 %v1_10007bb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bb4, label %dec_label_pc_10006574, label %dec_label_pc_10007bbc

dec_label_pc_10007bbc:                            ; preds = %dec_label_pc_10007bb4
  %v1_10007bbc = icmp slt i32 %v1_10006584, 209
  %v3_10007bbc = icmp eq i32 %v1_10006584, 209
  store i1 %v1_10007bbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007bbc, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007bc8:                            ; preds = %dec_label_pc_100068d8
  %v1_10007bc8 = icmp ult i32 %v1_10006584, 96
  %v3_10007bc8 = icmp eq i32 %v1_10006584, 96
  store i1 %v1_10007bc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bc8, i1* %cr7_eq.global-to-local, align 1
  %tmp266 = icmp ult i32 %v1_10006584, 97
  br i1 %tmp266, label %dec_label_pc_10006908, label %dec_label_pc_10007bd0

dec_label_pc_10007bd0:                            ; preds = %dec_label_pc_10007bc8
  %v1_10007bd0 = icmp eq i32 %v1_10006584, 97
  %v3_10007bd0 = icmp eq i32 %v1_10006584, 98
  store i1 %v1_10007bd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bd0, i1* %cr7_eq.global-to-local, align 1
  %tmp267 = icmp ult i32 %v1_10006584, 99
  br i1 %tmp267, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007bdc:                            ; preds = %dec_label_pc_100068d0
  %v1_10007bdc = icmp ult i32 %v1_10006584, 244
  %v3_10007bdc = icmp eq i32 %v1_10006584, 244
  store i1 %v1_10007bdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bdc, i1* %cr7_eq.global-to-local, align 1
  %tmp268 = icmp ult i32 %v1_10006584, 245
  br i1 %tmp268, label %dec_label_pc_10006908, label %dec_label_pc_10007be4

dec_label_pc_10007be4:                            ; preds = %dec_label_pc_10007bdc
  %v1_10007be4 = icmp slt i32 %v1_10006584, 255
  %v3_10007be4 = icmp eq i32 %v1_10006584, 255
  store i1 %v1_10007be4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007be4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007be4, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10007bf0:                            ; preds = %dec_label_pc_100068c8
  %v1_10007bf0 = icmp ult i32 %v1_10006584, 181
  %v3_10007bf0 = icmp eq i32 %v1_10006584, 181
  store i1 %v1_10007bf0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bf0, i1* %cr7_eq.global-to-local, align 1
  %tmp269 = icmp ult i32 %v1_10006584, 182
  br i1 %tmp269, label %dec_label_pc_10006908, label %dec_label_pc_10007bf8

dec_label_pc_10007bf8:                            ; preds = %dec_label_pc_10007bf0
  %v1_10007bf8 = icmp ult i32 %v1_10006584, 188
  %v3_10007bf8 = icmp eq i32 %v1_10006584, 188
  store i1 %v1_10007bf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007bf8, i1* %cr7_eq.global-to-local, align 1
  %tmp270 = icmp ult i32 %v1_10006584, 189
  br i1 %tmp270, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007c04:                            ; preds = %dec_label_pc_100068c0
  %v1_10007c04 = icmp ult i32 %v1_10006584, 93
  %v3_10007c04 = icmp eq i32 %v1_10006584, 93
  store i1 %v1_10007c04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c04, i1* %cr7_eq.global-to-local, align 1
  %tmp271 = icmp ult i32 %v1_10006584, 94
  br i1 %tmp271, label %dec_label_pc_10006908, label %dec_label_pc_10007c0c

dec_label_pc_10007c0c:                            ; preds = %dec_label_pc_10007c04
  %v1_10007c0c = icmp ult i32 %v1_10006584, 108
  %v3_10007c0c = icmp eq i32 %v1_10006584, 108
  store i1 %v1_10007c0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c0c, i1* %cr7_eq.global-to-local, align 1
  %tmp272 = icmp ult i32 %v1_10006584, 109
  br i1 %tmp272, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007c18:                            ; preds = %dec_label_pc_100068b8
  %v1_10007c18 = icmp ult i32 %v1_10006584, 215
  %v3_10007c18 = icmp eq i32 %v1_10006584, 215
  store i1 %v1_10007c18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c18, i1* %cr7_eq.global-to-local, align 1
  %tmp273 = icmp ult i32 %v1_10006584, 216
  br i1 %tmp273, label %dec_label_pc_10006908, label %dec_label_pc_10007c20

dec_label_pc_10007c20:                            ; preds = %dec_label_pc_10007c18
  %v1_10007c20 = icmp ult i32 %v1_10006584, 230
  %v3_10007c20 = icmp eq i32 %v1_10006584, 230
  store i1 %v1_10007c20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c20, i1* %cr7_eq.global-to-local, align 1
  %tmp274 = icmp ult i32 %v1_10006584, 231
  br i1 %tmp274, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007c2c:                            ; preds = %dec_label_pc_100068b0
  %v1_10007c2c = icmp slt i32 %v1_10006584, 34
  %v3_10007c2c = icmp eq i32 %v1_10006584, 34
  store i1 %v1_10007c2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c2c, label %dec_label_pc_10007c34, label %dec_label_pc_10006908

dec_label_pc_10007c34:                            ; preds = %dec_label_pc_10007c2c
  %v1_10007c34 = icmp ult i32 %v1_10006588, 95
  %v3_10007c34 = icmp eq i32 %v1_10006588, 95
  store i1 %v1_10007c34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c34, i1* %cr7_eq.global-to-local, align 1
  %tmp275 = icmp ult i32 %v1_10006588, 96
  br i1 %tmp275, label %dec_label_pc_10006908, label %dec_label_pc_10007c3c

dec_label_pc_10007c3c:                            ; preds = %dec_label_pc_10007c34
  %v1_10007c3c = icmp slt i32 %v1_10006588, 96
  %v3_10007c3c = icmp eq i32 %v1_10006588, 96
  store i1 %v1_10007c3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c3c, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007c48:                            ; preds = %dec_label_pc_100068a8
  %v1_10007c48 = icmp slt i32 %v1_10006584, 47
  %v3_10007c48 = icmp eq i32 %v1_10006584, 47
  store i1 %v1_10007c48, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c48, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c48, label %dec_label_pc_10007c50, label %dec_label_pc_10006908

dec_label_pc_10007c50:                            ; preds = %dec_label_pc_10007c48
  %v1_10007c50 = icmp ult i32 %v1_10006588, 223
  %v3_10007c50 = icmp eq i32 %v1_10006588, 223
  store i1 %v1_10007c50, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c50, i1* %cr7_eq.global-to-local, align 1
  %tmp276 = icmp ult i32 %v1_10006588, 224
  br i1 %tmp276, label %dec_label_pc_10006908, label %dec_label_pc_10007c58

dec_label_pc_10007c58:                            ; preds = %dec_label_pc_10007c50
  %v1_10007c58 = icmp slt i32 %v1_10006588, 255
  %v3_10007c58 = icmp eq i32 %v1_10006588, 255
  store i1 %v1_10007c58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c58, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10007c64:                            ; preds = %dec_label_pc_100068a0
  %v1_10007c64 = icmp slt i32 %v1_10006584, 121
  %v3_10007c64 = icmp eq i32 %v1_10006584, 121
  store i1 %v1_10007c64, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c64, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c64, label %dec_label_pc_10007c6c, label %dec_label_pc_10006908

dec_label_pc_10007c6c:                            ; preds = %dec_label_pc_10007c64
  %v1_10007c6c = and i32 %v1_10006588, 128
  store i32 %v1_10007c6c, i32* %r10.global-to-local, align 4
  %v3_10007c6c = icmp eq i32 %v1_10007c6c, 0
  br i1 %v3_10007c6c, label %dec_label_pc_10006908, label %dec_label_pc_10007c74

dec_label_pc_10007c74:                            ; preds = %dec_label_pc_10007c6c
  %v1_10007c74 = icmp slt i32 %v1_10006588, 255
  %v3_10007c74 = icmp eq i32 %v1_10006588, 255
  store i1 %v1_10007c74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007c74, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10007c80:                            ; preds = %dec_label_pc_10006898
  %v1_10007c80 = icmp ult i32 %v1_10006584, 51
  %v3_10007c80 = icmp eq i32 %v1_10006584, 51
  store i1 %v1_10007c80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c80, i1* %cr7_eq.global-to-local, align 1
  %tmp277 = icmp ult i32 %v1_10006584, 52
  br i1 %tmp277, label %dec_label_pc_10007c90.thread, label %dec_label_pc_10007c88

dec_label_pc_10007c90.thread:                     ; preds = %dec_label_pc_10007c80
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10007c88:                            ; preds = %dec_label_pc_10007c80
  %v1_10007c88 = icmp ult i32 %v1_10006584, 59
  %v3_10007c88 = icmp eq i32 %v1_10006584, 59
  store i1 %v1_10007c88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c88, i1* %cr7_eq.global-to-local, align 1
  %tmp278 = icmp ult i32 %v1_10006584, 60
  br i1 %tmp278, label %dec_label_pc_10006574, label %dec_label_pc_10007c90

dec_label_pc_10007c90:                            ; preds = %dec_label_pc_10007c88
  %v1_10007c90 = icmp ult i32 %v1_10006584, 111
  %v3_10007c90 = icmp eq i32 %v1_10006584, 111
  store i1 %v1_10007c90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c90, i1* %cr7_eq.global-to-local, align 1
  %tmp279 = icmp ult i32 %v1_10006584, 112
  br i1 %tmp279, label %dec_label_pc_10006908, label %dec_label_pc_10007c98

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007c90
  %v1_10007c98 = icmp ult i32 %v1_10006584, 114
  %v3_10007c98 = icmp eq i32 %v1_10006584, 114
  store i1 %v1_10007c98, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007c98, i1* %cr7_eq.global-to-local, align 1
  %tmp280 = icmp ult i32 %v1_10006584, 115
  br i1 %tmp280, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007ca4:                            ; preds = %dec_label_pc_10006890
  %v1_10007ca4 = icmp ult i32 %v1_10006584, 63
  %v3_10007ca4 = icmp eq i32 %v1_10006584, 63
  store i1 %v1_10007ca4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ca4, i1* %cr7_eq.global-to-local, align 1
  %tmp281 = icmp ult i32 %v1_10006584, 64
  br i1 %tmp281, label %dec_label_pc_10007cb4.thread, label %dec_label_pc_10007cac

dec_label_pc_10007cb4.thread:                     ; preds = %dec_label_pc_10007ca4
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10007cac:                            ; preds = %dec_label_pc_10007ca4
  %v1_10007cac = icmp ult i32 %v1_10006584, 94
  %v3_10007cac = icmp eq i32 %v1_10006584, 94
  store i1 %v1_10007cac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cac, i1* %cr7_eq.global-to-local, align 1
  %tmp282 = icmp ult i32 %v1_10006584, 95
  br i1 %tmp282, label %dec_label_pc_10006574, label %dec_label_pc_10007cb4

dec_label_pc_10007cb4:                            ; preds = %dec_label_pc_10007cac
  %v1_10007cb4 = icmp ult i32 %v1_10006584, 143
  %v3_10007cb4 = icmp eq i32 %v1_10006584, 143
  store i1 %v1_10007cb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cb4, i1* %cr7_eq.global-to-local, align 1
  %tmp283 = icmp ult i32 %v1_10006584, 144
  br i1 %tmp283, label %dec_label_pc_10006908, label %dec_label_pc_10007cbc

dec_label_pc_10007cbc:                            ; preds = %dec_label_pc_10007cb4
  %v1_10007cbc = icmp slt i32 %v1_10006584, 255
  %v3_10007cbc = icmp eq i32 %v1_10006584, 255
  store i1 %v1_10007cbc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cbc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cbc, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10007cc8:                            ; preds = %dec_label_pc_10006888
  %v1_10007cc8 = icmp slt i32 %v1_10006584, 0
  %v3_10007cc8 = icmp eq i32 %v1_10006584, 0
  store i1 %v1_10007cc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cc8, label %dec_label_pc_10006908, label %dec_label_pc_10007cd0

dec_label_pc_10007cd0:                            ; preds = %dec_label_pc_10007cc8
  %v1_10007cd0 = icmp ult i32 %v1_10006584, 94
  %v3_10007cd0 = icmp eq i32 %v1_10006584, 94
  store i1 %v1_10007cd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cd0, i1* %cr7_eq.global-to-local, align 1
  %tmp284 = icmp ult i32 %v1_10006584, 95
  br i1 %tmp284, label %dec_label_pc_10006574, label %dec_label_pc_10007cd8

dec_label_pc_10007cd8:                            ; preds = %dec_label_pc_10007cd0
  %v1_10007cd8 = icmp slt i32 %v1_10006584, 255
  %v3_10007cd8 = icmp eq i32 %v1_10006584, 255
  store i1 %v1_10007cd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cd8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cd8, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10007ce4:                            ; preds = %dec_label_pc_10006880
  %v1_10007ce4 = icmp ult i32 %v1_10006584, 158
  %v3_10007ce4 = icmp eq i32 %v1_10006584, 158
  store i1 %v1_10007ce4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ce4, i1* %cr7_eq.global-to-local, align 1
  %tmp285 = icmp ult i32 %v1_10006584, 159
  br i1 %tmp285, label %dec_label_pc_10006908, label %dec_label_pc_10007cec

dec_label_pc_10007cec:                            ; preds = %dec_label_pc_10007ce4
  %v1_10007cec = icmp ult i32 %v1_10006584, 182
  %v3_10007cec = icmp eq i32 %v1_10006584, 182
  store i1 %v1_10007cec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cec, i1* %cr7_eq.global-to-local, align 1
  %tmp286 = icmp ult i32 %v1_10006584, 183
  br i1 %tmp286, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007cf8:                            ; preds = %dec_label_pc_10006878
  %v1_10007cf8 = icmp slt i32 %v1_10006584, 142
  %v3_10007cf8 = icmp eq i32 %v1_10006584, 142
  store i1 %v1_10007cf8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007cf8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007cf8, label %dec_label_pc_10007d00, label %dec_label_pc_10006908

dec_label_pc_10007d00:                            ; preds = %dec_label_pc_10007cf8
  %v1_10007d00 = icmp ult i32 %v1_10006588, 207
  %v3_10007d00 = icmp eq i32 %v1_10006588, 207
  store i1 %v1_10007d00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d00, i1* %cr7_eq.global-to-local, align 1
  %tmp287 = icmp ult i32 %v1_10006588, 208
  br i1 %tmp287, label %dec_label_pc_10006908, label %dec_label_pc_10007d08

dec_label_pc_10007d08:                            ; preds = %dec_label_pc_10007d00
  %v1_10007d08 = icmp ult i32 %v1_10006588, 222
  %v3_10007d08 = icmp eq i32 %v1_10006588, 222
  store i1 %v1_10007d08, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d08, i1* %cr7_eq.global-to-local, align 1
  %tmp288 = icmp ult i32 %v1_10006588, 223
  br i1 %tmp288, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007d14:                            ; preds = %dec_label_pc_10006870
  %v1_10007d14 = icmp slt i32 %v1_10006584, 220
  %v3_10007d14 = icmp eq i32 %v1_10006584, 220
  store i1 %v1_10007d14, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d14, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d14, label %dec_label_pc_10007d1c, label %dec_label_pc_10006908

dec_label_pc_10007d1c:                            ; preds = %dec_label_pc_10007d14
  %v1_10007d1c = icmp ult i32 %v1_10006588, 171
  %v3_10007d1c = icmp eq i32 %v1_10006588, 171
  store i1 %v1_10007d1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d1c, i1* %cr7_eq.global-to-local, align 1
  %tmp289 = icmp ult i32 %v1_10006588, 172
  br i1 %tmp289, label %dec_label_pc_10006908, label %dec_label_pc_10007d24

dec_label_pc_10007d24:                            ; preds = %dec_label_pc_10007d1c
  %v1_10007d24 = icmp ult i32 %v1_10006588, 174
  %v3_10007d24 = icmp eq i32 %v1_10006588, 174
  store i1 %v1_10007d24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d24, i1* %cr7_eq.global-to-local, align 1
  %tmp290 = icmp ult i32 %v1_10006588, 175
  br i1 %tmp290, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007d30:                            ; preds = %dec_label_pc_10006868
  %v1_10007d30 = icmp slt i32 %v1_10006584, 170
  %v3_10007d30 = icmp eq i32 %v1_10006584, 170
  store i1 %v1_10007d30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d30, label %dec_label_pc_10007d38, label %dec_label_pc_10006908

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d30
  %v1_10007d38 = icmp ult i32 %v1_10006588, 239
  %v3_10007d38 = icmp eq i32 %v1_10006588, 239
  store i1 %v1_10007d38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d38, i1* %cr7_eq.global-to-local, align 1
  %tmp291 = icmp ult i32 %v1_10006588, 240
  br i1 %tmp291, label %dec_label_pc_10006908, label %dec_label_pc_10007d40

dec_label_pc_10007d40:                            ; preds = %dec_label_pc_10007d38
  %v1_10007d40 = icmp slt i32 %v1_10006588, 255
  %v3_10007d40 = icmp eq i32 %v1_10006588, 255
  store i1 %v1_10007d40, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d40, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d40, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10007d4c:                            ; preds = %dec_label_pc_10006860
  %v1_10007d4c = icmp slt i32 %v1_10006584, 134
  %v3_10007d4c = icmp eq i32 %v1_10006584, 134
  store i1 %v1_10007d4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d4c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d4c, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007d58:                            ; preds = %dec_label_pc_10006858
  %v1_10007d58 = icmp slt i32 %v1_10006584, 135
  %v3_10007d58 = icmp eq i32 %v1_10006584, 135
  store i1 %v1_10007d58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d58, label %dec_label_pc_10006574, label %dec_label_pc_10007d60

dec_label_pc_10007d60:                            ; preds = %dec_label_pc_10007d58
  %v1_10007d60 = icmp slt i32 %v1_10006584, 196
  %v3_10007d60 = icmp eq i32 %v1_10006584, 196
  store i1 %v1_10007d60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d60, label %dec_label_pc_10006574, label %dec_label_pc_10007d68

dec_label_pc_10007d68:                            ; preds = %dec_label_pc_10007d60
  %v1_10007d68 = icmp slt i32 %v1_10006584, 39
  %v3_10007d68 = icmp eq i32 %v1_10006584, 39
  store i1 %v1_10007d68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d68, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007d74:                            ; preds = %dec_label_pc_10006850
  %v1_10007d74 = icmp slt i32 %v1_10006584, 254
  %v3_10007d74 = icmp eq i32 %v1_10006584, 254
  store i1 %v1_10007d74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d74, label %dec_label_pc_10006574, label %dec_label_pc_10007d7c

dec_label_pc_10007d7c:                            ; preds = %dec_label_pc_10007d74
  %v1_10007d7c = icmp slt i32 %v1_10006584, 255
  %v3_10007d7c = icmp eq i32 %v1_10006584, 255
  store i1 %v1_10007d7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d7c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d7c, label %dec_label_pc_10006574, label %dec_label_pc_10007d84

dec_label_pc_10007d84:                            ; preds = %dec_label_pc_10007d7c
  %v1_10007d84 = icmp ult i32 %v1_10006584, 14
  %v2_10007d84 = icmp ugt i32 %v1_10006584, 14
  %v3_10007d84 = icmp eq i32 %v1_10006584, 14
  store i1 %v1_10007d84, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d84, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10007d84, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007d90:                            ; preds = %dec_label_pc_10006848
  %v1_10007d90 = icmp slt i32 %v1_10006584, 105
  %v3_10007d90 = icmp eq i32 %v1_10006584, 105
  store i1 %v1_10007d90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d90, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d90, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007d9c:                            ; preds = %dec_label_pc_10006840
  %v1_10007d9c = icmp slt i32 %v1_10006584, 31
  %v3_10007d9c = icmp eq i32 %v1_10006584, 31
  store i1 %v1_10007d9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007d9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007d9c, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007da8:                            ; preds = %dec_label_pc_10006838
  %v1_10007da8 = icmp slt i32 %v1_10006584, 80
  %v3_10007da8 = icmp eq i32 %v1_10006584, 80
  store i1 %v1_10007da8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007da8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007da8, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007db4:                            ; preds = %dec_label_pc_10006830
  %v1_10007db4 = icmp slt i32 %v1_10006584, 202
  %v3_10007db4 = icmp eq i32 %v1_10006584, 202
  store i1 %v1_10007db4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007db4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007db4, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007dc0:                            ; preds = %dec_label_pc_10006828
  %v1_10007dc0 = icmp slt i32 %v1_10006584, 91
  %v3_10007dc0 = icmp eq i32 %v1_10006584, 91
  store i1 %v1_10007dc0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dc0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007dc0, label %dec_label_pc_10007e44, label %dec_label_pc_10007dc8

dec_label_pc_10007dc8:                            ; preds = %dec_label_pc_10007dc0
  %v1_10007dc8 = icmp slt i32 %v1_10006584, 201
  %v3_10007dc8 = icmp eq i32 %v1_10006584, 201
  store i1 %v1_10007dc8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007dc8, label %dec_label_pc_10007dd0, label %dec_label_pc_10006908

dec_label_pc_10007dd0:                            ; preds = %dec_label_pc_10007dc8
  %v1_10007dd0 = icmp ult i32 %v1_10006588, 55
  %v3_10007dd0 = icmp eq i32 %v1_10006588, 55
  store i1 %v1_10007dd0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dd0, i1* %cr7_eq.global-to-local, align 1
  %tmp292 = icmp ult i32 %v1_10006588, 56
  br i1 %tmp292, label %dec_label_pc_10006908, label %dec_label_pc_10007dd8

dec_label_pc_10007dd8:                            ; preds = %dec_label_pc_10007dd0
  %v1_10007dd8 = icmp eq i32 %v1_10006588, 56
  %v3_10007dd8 = icmp eq i32 %v1_10006588, 57
  store i1 %v1_10007dd8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dd8, i1* %cr7_eq.global-to-local, align 1
  %tmp293 = icmp ult i32 %v1_10006588, 58
  br i1 %tmp293, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007de4:                            ; preds = %dec_label_pc_10006820
  %v1_10007de4 = icmp slt i32 %v1_10006584, 42
  %v3_10007de4 = icmp eq i32 %v1_10006584, 42
  store i1 %v1_10007de4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007de4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007de4, label %dec_label_pc_10007dec, label %dec_label_pc_10006908

dec_label_pc_10007dec:                            ; preds = %dec_label_pc_10007de4
  %v1_10007dec = icmp ult i32 %v1_10006588, 72
  %v3_10007dec = icmp eq i32 %v1_10006588, 72
  store i1 %v1_10007dec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007dec, i1* %cr7_eq.global-to-local, align 1
  %tmp294 = icmp ult i32 %v1_10006588, 73
  br i1 %tmp294, label %dec_label_pc_10006908, label %dec_label_pc_10007df4

dec_label_pc_10007df4:                            ; preds = %dec_label_pc_10007dec
  %v1_10007df4 = icmp eq i32 %v1_10006588, 73
  %v3_10007df4 = icmp eq i32 %v1_10006588, 74
  store i1 %v1_10007df4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007df4, i1* %cr7_eq.global-to-local, align 1
  %tmp295 = icmp ult i32 %v1_10006588, 75
  br i1 %tmp295, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007e00:                            ; preds = %dec_label_pc_10006810
  %v1_10007e00 = icmp slt i32 %v1_10006584, 61
  %v3_10007e00 = icmp eq i32 %v1_10006584, 61
  store i1 %v1_10007e00, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e00, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e00, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007e0c:                            ; preds = %dec_label_pc_10006808
  %v1_10007e0c = icmp slt i32 %v1_10006584, 237
  %v3_10007e0c = icmp eq i32 %v1_10006584, 237
  store i1 %v1_10007e0c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e0c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e0c, label %dec_label_pc_10007e14, label %dec_label_pc_10006908

dec_label_pc_10007e14:                            ; preds = %dec_label_pc_10007e0c
  %v1_10007e14 = and i32 %v1_10006588, 128
  store i32 %v1_10007e14, i32* %r10.global-to-local, align 4
  %v3_10007e14 = icmp eq i32 %v1_10007e14, 0
  br i1 %v3_10007e14, label %dec_label_pc_10006908, label %dec_label_pc_10007e1c

dec_label_pc_10007e1c:                            ; preds = %dec_label_pc_10007e14
  %v1_10007e1c = icmp ult i32 %v1_10006588, 158
  %v3_10007e1c = icmp eq i32 %v1_10006588, 158
  store i1 %v1_10007e1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e1c, i1* %cr7_eq.global-to-local, align 1
  %tmp296 = icmp ult i32 %v1_10006588, 159
  br i1 %tmp296, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007e28:                            ; preds = %dec_label_pc_10006818
  %v1_10007e28 = icmp slt i32 %v1_10006584, 251
  %v3_10007e28 = icmp eq i32 %v1_10006584, 251
  store i1 %v1_10007e28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e28, label %dec_label_pc_10007e30, label %dec_label_pc_10006908

dec_label_pc_10007e30:                            ; preds = %dec_label_pc_10007e28
  %v1_10007e30 = icmp ult i32 %v1_10006588, 18
  %v3_10007e30 = icmp eq i32 %v1_10006588, 18
  store i1 %v1_10007e30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e30, i1* %cr7_eq.global-to-local, align 1
  %tmp297 = icmp ult i32 %v1_10006588, 19
  br i1 %tmp297, label %dec_label_pc_10006908, label %dec_label_pc_10007e38

dec_label_pc_10007e38:                            ; preds = %dec_label_pc_10007e30
  %v1_10007e38 = icmp eq i32 %v1_10006588, 19
  %v3_10007e38 = icmp eq i32 %v1_10006588, 20
  store i1 %v1_10007e38, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e38, i1* %cr7_eq.global-to-local, align 1
  %tmp298 = icmp ult i32 %v1_10006588, 21
  br i1 %tmp298, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007e44:                            ; preds = %dec_label_pc_10007dc0
  %v1_10007e44 = icmp ult i32 %v1_10006588, 112
  %v3_10007e44 = icmp eq i32 %v1_10006588, 112
  store i1 %v1_10007e44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e44, i1* %cr7_eq.global-to-local, align 1
  %tmp299 = icmp ult i32 %v1_10006588, 113
  br i1 %tmp299, label %dec_label_pc_10006908, label %dec_label_pc_10007e4c

dec_label_pc_10007e4c:                            ; preds = %dec_label_pc_10007e44
  %v1_10007e4c = icmp eq i32 %v1_10006588, 113
  %v3_10007e4c = icmp eq i32 %v1_10006588, 114
  store i1 %v1_10007e4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e4c, i1* %cr7_eq.global-to-local, align 1
  %tmp300 = icmp ult i32 %v1_10006588, 115
  br i1 %tmp300, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007e58:                            ; preds = %dec_label_pc_10006800
  %v1_10007e58 = icmp slt i32 %v1_10006584, 55
  %v3_10007e58 = icmp eq i32 %v1_10006584, 55
  store i1 %v1_10007e58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e58, label %dec_label_pc_10007f08, label %dec_label_pc_10007e60

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e58
  %v1_10007e60 = icmp slt i32 %v1_10006584, 150
  %v3_10007e60 = icmp eq i32 %v1_10006584, 150
  store i1 %v1_10007e60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e60, label %dec_label_pc_10007ef4, label %dec_label_pc_10007e68

dec_label_pc_10007e68:                            ; preds = %dec_label_pc_10007e60
  %v1_10007e68 = icmp slt i32 %v1_10006584, 151
  %v3_10007e68 = icmp eq i32 %v1_10006584, 151
  store i1 %v1_10007e68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e68, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e68, label %dec_label_pc_10007eb8, label %dec_label_pc_10007e70

dec_label_pc_10007e70:                            ; preds = %dec_label_pc_10007e68
  %v1_10007e70 = icmp slt i32 %v1_10006584, 71
  %v3_10007e70 = icmp eq i32 %v1_10006584, 71
  store i1 %v1_10007e70, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e70, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e70, label %dec_label_pc_10007e78, label %dec_label_pc_10006908

dec_label_pc_10007e78:                            ; preds = %dec_label_pc_10007e70
  %v1_10007e78 = icmp ult i32 %v1_10006588, 239
  %v3_10007e78 = icmp eq i32 %v1_10006588, 239
  store i1 %v1_10007e78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e78, i1* %cr7_eq.global-to-local, align 1
  %tmp301 = icmp ult i32 %v1_10006588, 240
  br i1 %tmp301, label %dec_label_pc_10006908, label %dec_label_pc_10007e80

dec_label_pc_10007e80:                            ; preds = %dec_label_pc_10007e78
  %v1_10007e80 = icmp slt i32 %v1_10006588, 255
  %v3_10007e80 = icmp eq i32 %v1_10006588, 255
  store i1 %v1_10007e80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e80, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10007e8c:                            ; preds = %dec_label_pc_100067f8
  %v1_10007e8c = icmp slt i32 %v1_10006584, 167
  %v3_10007e8c = icmp eq i32 %v1_10006584, 167
  store i1 %v1_10007e8c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e8c, label %dec_label_pc_10007ee0, label %dec_label_pc_10007e94

dec_label_pc_10007e94:                            ; preds = %dec_label_pc_10007e8c
  %v1_10007e94 = icmp slt i32 %v1_10006584, 78
  %v3_10007e94 = icmp eq i32 %v1_10006584, 78
  store i1 %v1_10007e94, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e94, label %dec_label_pc_10007ecc, label %dec_label_pc_10007e9c

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e94
  %v1_10007e9c = icmp slt i32 %v1_10006584, 93
  %v3_10007e9c = icmp eq i32 %v1_10006584, 93
  store i1 %v1_10007e9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007e9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007e9c, label %dec_label_pc_10007ea4, label %dec_label_pc_10006908

dec_label_pc_10007ea4:                            ; preds = %dec_label_pc_10007e9c
  %v1_10007ea4 = icmp ult i32 %v1_10006588, 191
  %v3_10007ea4 = icmp eq i32 %v1_10006588, 191
  store i1 %v1_10007ea4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ea4, i1* %cr7_eq.global-to-local, align 1
  %tmp302 = icmp ult i32 %v1_10006588, 192
  br i1 %tmp302, label %dec_label_pc_10006908, label %dec_label_pc_10007eac

dec_label_pc_10007eac:                            ; preds = %dec_label_pc_10007ea4
  %v1_10007eac = icmp slt i32 %v1_10006588, 192
  %v3_10007eac = icmp eq i32 %v1_10006588, 192
  store i1 %v1_10007eac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007eac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007eac, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007eb8:                            ; preds = %dec_label_pc_10007e68
  %v1_10007eb8 = icmp ult i32 %v1_10006588, 136
  %v3_10007eb8 = icmp eq i32 %v1_10006588, 136
  store i1 %v1_10007eb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007eb8, i1* %cr7_eq.global-to-local, align 1
  %tmp303 = icmp ult i32 %v1_10006588, 137
  br i1 %tmp303, label %dec_label_pc_10006908, label %dec_label_pc_10007ec0

dec_label_pc_10007ec0:                            ; preds = %dec_label_pc_10007eb8
  %v1_10007ec0 = icmp eq i32 %v1_10006588, 137
  %v3_10007ec0 = icmp eq i32 %v1_10006588, 138
  store i1 %v1_10007ec0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ec0, i1* %cr7_eq.global-to-local, align 1
  %tmp304 = icmp ult i32 %v1_10006588, 139
  br i1 %tmp304, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007ecc:                            ; preds = %dec_label_pc_10007e94
  %v1_10007ecc = icmp ult i32 %v1_10006588, 39
  %v3_10007ecc = icmp eq i32 %v1_10006588, 39
  store i1 %v1_10007ecc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ecc, i1* %cr7_eq.global-to-local, align 1
  %tmp305 = icmp ult i32 %v1_10006588, 40
  br i1 %tmp305, label %dec_label_pc_10006908, label %dec_label_pc_10007ed4

dec_label_pc_10007ed4:                            ; preds = %dec_label_pc_10007ecc
  %v1_10007ed4 = icmp ult i32 %v1_10006588, 42
  %v3_10007ed4 = icmp eq i32 %v1_10006588, 42
  store i1 %v1_10007ed4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ed4, i1* %cr7_eq.global-to-local, align 1
  %tmp306 = icmp ult i32 %v1_10006588, 43
  br i1 %tmp306, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007ee0:                            ; preds = %dec_label_pc_10007e8c
  %v1_10007ee0 = icmp ult i32 %v1_10006588, 231
  %v3_10007ee0 = icmp eq i32 %v1_10006588, 231
  store i1 %v1_10007ee0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ee0, i1* %cr7_eq.global-to-local, align 1
  %tmp307 = icmp ult i32 %v1_10006588, 232
  br i1 %tmp307, label %dec_label_pc_10006908, label %dec_label_pc_10007ee8

dec_label_pc_10007ee8:                            ; preds = %dec_label_pc_10007ee0
  %v1_10007ee8 = icmp ult i32 %v1_10006588, 251
  %v3_10007ee8 = icmp eq i32 %v1_10006588, 251
  store i1 %v1_10007ee8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ee8, i1* %cr7_eq.global-to-local, align 1
  %tmp308 = icmp ult i32 %v1_10006588, 252
  br i1 %tmp308, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007ef4:                            ; preds = %dec_label_pc_10007e60
  %v1_10007ef4 = icmp ult i32 %v1_10006588, 119
  %v3_10007ef4 = icmp eq i32 %v1_10006588, 119
  store i1 %v1_10007ef4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ef4, i1* %cr7_eq.global-to-local, align 1
  %tmp309 = icmp ult i32 %v1_10006588, 120
  br i1 %tmp309, label %dec_label_pc_10006908, label %dec_label_pc_10007efc

dec_label_pc_10007efc:                            ; preds = %dec_label_pc_10007ef4
  %v1_10007efc = icmp ult i32 %v1_10006588, 214
  %v3_10007efc = icmp eq i32 %v1_10006588, 214
  store i1 %v1_10007efc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007efc, i1* %cr7_eq.global-to-local, align 1
  %tmp310 = icmp ult i32 %v1_10006588, 215
  br i1 %tmp310, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007f08:                            ; preds = %dec_label_pc_10007e58
  %v1_10007f08 = and i32 %v1_10006588, 128
  store i32 %v1_10007f08, i32* %r10.global-to-local, align 4
  %v3_10007f08 = icmp eq i32 %v1_10007f08, 0
  br i1 %v3_10007f08, label %dec_label_pc_10006908, label %dec_label_pc_10007f10

dec_label_pc_10007f10:                            ; preds = %dec_label_pc_10007f08
  %v1_10007f10 = icmp ult i32 %v1_10006588, 158
  %v3_10007f10 = icmp eq i32 %v1_10006588, 158
  store i1 %v1_10007f10, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f10, i1* %cr7_eq.global-to-local, align 1
  %tmp311 = icmp ult i32 %v1_10006588, 159
  br i1 %tmp311, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007f1c:                            ; preds = %dec_label_pc_100067f0
  %v1_10007f1c = icmp slt i32 %v1_10006584, 92
  %v3_10007f1c = icmp eq i32 %v1_10006584, 92
  store i1 %v1_10007f1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f1c, label %dec_label_pc_10007fb0, label %dec_label_pc_10007f24

dec_label_pc_10007f24:                            ; preds = %dec_label_pc_10007f1c
  %v1_10007f24 = icmp slt i32 %v1_10006584, 11
  %v3_10007f24 = icmp eq i32 %v1_10006584, 11
  store i1 %v1_10007f24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f24, label %dec_label_pc_10007f9c, label %dec_label_pc_10007f2c

dec_label_pc_10007f2c:                            ; preds = %dec_label_pc_10007f24
  %v1_10007f2c = icmp slt i32 %v1_10006584, 56
  %v3_10007f2c = icmp eq i32 %v1_10006584, 56
  store i1 %v1_10007f2c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f2c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f2c, label %dec_label_pc_10007f88, label %dec_label_pc_10007f34

dec_label_pc_10007f34:                            ; preds = %dec_label_pc_10007f2c
  %v1_10007f34 = icmp slt i32 %v1_10006584, 61
  %v3_10007f34 = icmp eq i32 %v1_10006584, 61
  store i1 %v1_10007f34, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f34, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f34, label %dec_label_pc_10007f74, label %dec_label_pc_10007f3c

dec_label_pc_10007f3c:                            ; preds = %dec_label_pc_10007f34
  %v1_10007f3c = icmp slt i32 %v1_10006584, 62
  %v3_10007f3c = icmp eq i32 %v1_10006584, 62
  store i1 %v1_10007f3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f3c, label %dec_label_pc_10007f44, label %dec_label_pc_10006908

dec_label_pc_10007f44:                            ; preds = %dec_label_pc_10007f3c
  %v1_10007f44 = icmp ult i32 %v1_10006588, 186
  %v3_10007f44 = icmp eq i32 %v1_10006588, 186
  store i1 %v1_10007f44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f44, i1* %cr7_eq.global-to-local, align 1
  %tmp312 = icmp ult i32 %v1_10006588, 187
  br i1 %tmp312, label %dec_label_pc_10006908, label %dec_label_pc_10007f4c

dec_label_pc_10007f4c:                            ; preds = %dec_label_pc_10007f44
  %v1_10007f4c = icmp ult i32 %v1_10006588, 190
  %v3_10007f4c = icmp eq i32 %v1_10006588, 190
  store i1 %v1_10007f4c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f4c, i1* %cr7_eq.global-to-local, align 1
  %tmp313 = icmp ult i32 %v1_10006588, 191
  br i1 %tmp313, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007f58:                            ; preds = %dec_label_pc_100067e8
  %v1_10007f58 = icmp slt i32 %v1_10006584, 85
  %v3_10007f58 = icmp eq i32 %v1_10006584, 85
  store i1 %v1_10007f58, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f58, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007f58, label %dec_label_pc_10007f60, label %dec_label_pc_10006908

dec_label_pc_10007f60:                            ; preds = %dec_label_pc_10007f58
  %v1_10007f60 = icmp ult i32 %v1_10006588, 7
  %v3_10007f60 = icmp eq i32 %v1_10006588, 7
  store i1 %v1_10007f60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f60, i1* %cr7_eq.global-to-local, align 1
  %tmp314 = icmp ult i32 %v1_10006588, 8
  br i1 %tmp314, label %dec_label_pc_10006908, label %dec_label_pc_10007f68

dec_label_pc_10007f68:                            ; preds = %dec_label_pc_10007f60
  %v1_10007f68 = icmp ult i32 %v1_10006588, 62
  %v3_10007f68 = icmp eq i32 %v1_10006588, 62
  store i1 %v1_10007f68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f68, i1* %cr7_eq.global-to-local, align 1
  %tmp315 = icmp ult i32 %v1_10006588, 63
  br i1 %tmp315, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007f74:                            ; preds = %dec_label_pc_10007f34
  %v1_10007f74 = icmp ult i32 %v1_10006588, 135
  %v3_10007f74 = icmp eq i32 %v1_10006588, 135
  store i1 %v1_10007f74, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f74, i1* %cr7_eq.global-to-local, align 1
  %tmp316 = icmp ult i32 %v1_10006588, 136
  br i1 %tmp316, label %dec_label_pc_10006908, label %dec_label_pc_10007f7c

dec_label_pc_10007f7c:                            ; preds = %dec_label_pc_10007f74
  %v1_10007f7c = icmp ult i32 %v1_10006588, 138
  %v3_10007f7c = icmp eq i32 %v1_10006588, 138
  store i1 %v1_10007f7c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f7c, i1* %cr7_eq.global-to-local, align 1
  %tmp317 = icmp ult i32 %v1_10006588, 139
  br i1 %tmp317, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007f88:                            ; preds = %dec_label_pc_10007f2c
  %v1_10007f88 = icmp ult i32 %v1_10006588, 20
  %v3_10007f88 = icmp eq i32 %v1_10006588, 20
  store i1 %v1_10007f88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f88, i1* %cr7_eq.global-to-local, align 1
  %tmp318 = icmp ult i32 %v1_10006588, 21
  br i1 %tmp318, label %dec_label_pc_10006908, label %dec_label_pc_10007f90

dec_label_pc_10007f90:                            ; preds = %dec_label_pc_10007f88
  %v1_10007f90 = icmp eq i32 %v1_10006588, 21
  %v3_10007f90 = icmp eq i32 %v1_10006588, 22
  store i1 %v1_10007f90, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f90, i1* %cr7_eq.global-to-local, align 1
  %tmp319 = icmp ult i32 %v1_10006588, 23
  br i1 %tmp319, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007f9c:                            ; preds = %dec_label_pc_10007f24
  %v1_10007f9c = icmp ult i32 %v1_10006588, 143
  %v3_10007f9c = icmp eq i32 %v1_10006588, 143
  store i1 %v1_10007f9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007f9c, i1* %cr7_eq.global-to-local, align 1
  %tmp320 = icmp ult i32 %v1_10006588, 144
  br i1 %tmp320, label %dec_label_pc_10006908, label %dec_label_pc_10007fa4

dec_label_pc_10007fa4:                            ; preds = %dec_label_pc_10007f9c
  %v1_10007fa4 = icmp ult i32 %v1_10006588, 147
  %v3_10007fa4 = icmp eq i32 %v1_10006588, 147
  store i1 %v1_10007fa4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fa4, i1* %cr7_eq.global-to-local, align 1
  %tmp321 = icmp ult i32 %v1_10006588, 148
  br i1 %tmp321, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007fb0:                            ; preds = %dec_label_pc_10007f1c
  %v1_10007fb0 = icmp ult i32 %v1_10006588, 219
  %v3_10007fb0 = icmp eq i32 %v1_10006588, 219
  store i1 %v1_10007fb0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fb0, i1* %cr7_eq.global-to-local, align 1
  %tmp322 = icmp ult i32 %v1_10006588, 220
  br i1 %tmp322, label %dec_label_pc_10006908, label %dec_label_pc_10007fb8

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007fb0
  %v1_10007fb8 = icmp ult i32 %v1_10006588, 222
  %v3_10007fb8 = icmp eq i32 %v1_10006588, 222
  store i1 %v1_10007fb8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fb8, i1* %cr7_eq.global-to-local, align 1
  %tmp323 = icmp ult i32 %v1_10006588, 223
  br i1 %tmp323, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007fc4:                            ; preds = %dec_label_pc_100067e0
  %v1_10007fc4 = icmp slt i32 %v1_10006584, 196
  %v3_10007fc4 = icmp eq i32 %v1_10006584, 196
  store i1 %v1_10007fc4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fc4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fc4, label %dec_label_pc_10007fcc, label %dec_label_pc_10006908

dec_label_pc_10007fcc:                            ; preds = %dec_label_pc_10007fc4
  %v1_10007fcc = icmp slt i32 %v1_10006588, 0
  %v3_10007fcc = icmp eq i32 %v1_10006588, 0
  store i1 %v1_10007fcc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fcc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fcc, label %dec_label_pc_10006908, label %dec_label_pc_10007fd4

dec_label_pc_10007fd4:                            ; preds = %dec_label_pc_10007fcc
  %v1_10007fd4 = icmp ult i32 %v1_10006588, 14
  %v3_10007fd4 = icmp eq i32 %v1_10006588, 14
  store i1 %v1_10007fd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fd4, i1* %cr7_eq.global-to-local, align 1
  %tmp324 = icmp ult i32 %v1_10006588, 15
  br i1 %tmp324, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10007fe0:                            ; preds = %dec_label_pc_100067d8
  %v1_10007fe0 = icmp slt i32 %v1_10006584, 207
  %v3_10007fe0 = icmp eq i32 %v1_10006584, 207
  store i1 %v1_10007fe0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fe0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fe0, label %dec_label_pc_1000803c, label %dec_label_pc_10007fe8

dec_label_pc_10007fe8:                            ; preds = %dec_label_pc_10007fe0
  %v1_10007fe8 = icmp slt i32 %v1_10006584, 205
  %v3_10007fe8 = icmp eq i32 %v1_10006584, 205
  store i1 %v1_10007fe8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007fe8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10007fe8, label %dec_label_pc_10007ff0, label %dec_label_pc_10006908

dec_label_pc_10007ff0:                            ; preds = %dec_label_pc_10007fe8
  %v1_10007ff0 = and i32 %v1_10006588, 128
  store i32 %v1_10007ff0, i32* %r10.global-to-local, align 4
  %v3_10007ff0 = icmp eq i32 %v1_10007ff0, 0
  br i1 %v3_10007ff0, label %dec_label_pc_10006908, label %dec_label_pc_10007ff8

dec_label_pc_10007ff8:                            ; preds = %dec_label_pc_10007ff0
  %v1_10007ff8 = icmp ult i32 %v1_10006588, 190
  %v3_10007ff8 = icmp eq i32 %v1_10006588, 190
  store i1 %v1_10007ff8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10007ff8, i1* %cr7_eq.global-to-local, align 1
  %tmp325 = icmp ult i32 %v1_10006588, 191
  br i1 %tmp325, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008004:                            ; preds = %dec_label_pc_100067d0
  %v1_10008004 = icmp slt i32 %v1_10006584, 139
  %v3_10008004 = icmp eq i32 %v1_10006584, 139
  store i1 %v1_10008004, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008004, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008004, label %dec_label_pc_10008050, label %dec_label_pc_1000800c

dec_label_pc_1000800c:                            ; preds = %dec_label_pc_10008004
  %v1_1000800c = icmp slt i32 %v1_10006584, 59
  %v3_1000800c = icmp eq i32 %v1_10006584, 59
  store i1 %v1_1000800c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000800c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000800c, label %dec_label_pc_10006574, label %dec_label_pc_10008014

dec_label_pc_10008014:                            ; preds = %dec_label_pc_1000800c
  %v1_10008014 = icmp slt i32 %v1_10006584, 187
  %v3_10008014 = icmp eq i32 %v1_10006584, 187
  store i1 %v1_10008014, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008014, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008014, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008020:                            ; preds = %dec_label_pc_100067c8
  %v1_10008020 = icmp slt i32 %v1_10006584, 138
  %v3_10008020 = icmp eq i32 %v1_10006584, 138
  store i1 %v1_10008020, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008020, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008020, label %dec_label_pc_10008028, label %dec_label_pc_10006908

dec_label_pc_10008028:                            ; preds = %dec_label_pc_10008020
  %v1_10008028 = icmp slt i32 %v1_10006588, 0
  %v3_10008028 = icmp eq i32 %v1_10006588, 0
  store i1 %v1_10008028, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008028, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008028, label %dec_label_pc_10006908, label %dec_label_pc_10008030

dec_label_pc_10008030:                            ; preds = %dec_label_pc_10008028
  %v1_10008030 = icmp ult i32 %v1_10006588, 126
  %v3_10008030 = icmp eq i32 %v1_10006588, 126
  store i1 %v1_10008030, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008030, i1* %cr7_eq.global-to-local, align 1
  %tmp326 = icmp ult i32 %v1_10006588, 127
  br i1 %tmp326, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000803c:                            ; preds = %dec_label_pc_10007fe0
  %v1_1000803c = icmp ult i32 %v1_10006588, 63
  %v3_1000803c = icmp eq i32 %v1_10006588, 63
  store i1 %v1_1000803c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000803c, i1* %cr7_eq.global-to-local, align 1
  %tmp327 = icmp ult i32 %v1_10006588, 64
  br i1 %tmp327, label %dec_label_pc_10006908, label %dec_label_pc_10008044

dec_label_pc_10008044:                            ; preds = %dec_label_pc_1000803c
  %v1_10008044 = icmp ult i32 %v1_10006588, 94
  %v3_10008044 = icmp eq i32 %v1_10006588, 94
  store i1 %v1_10008044, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008044, i1* %cr7_eq.global-to-local, align 1
  %tmp328 = icmp ult i32 %v1_10006588, 95
  br i1 %tmp328, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008050:                            ; preds = %dec_label_pc_10008004
  %v1_10008050 = icmp slt i32 %v1_10006588, 0
  %v3_10008050 = icmp eq i32 %v1_10006588, 0
  store i1 %v1_10008050, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008050, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008050, label %dec_label_pc_10006908, label %dec_label_pc_10008058

dec_label_pc_10008058:                            ; preds = %dec_label_pc_10008050
  %v1_10008058 = icmp ult i32 %v1_10006588, 30
  %v3_10008058 = icmp eq i32 %v1_10006588, 30
  store i1 %v1_10008058, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008058, i1* %cr7_eq.global-to-local, align 1
  %tmp329 = icmp ult i32 %v1_10006588, 31
  br i1 %tmp329, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008064:                            ; preds = %dec_label_pc_100067c0
  %v1_10008064 = icmp slt i32 %v1_10006584, 170
  %v3_10008064 = icmp eq i32 %v1_10006584, 170
  store i1 %v1_10008064, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008064, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008064, label %dec_label_pc_10006574, label %dec_label_pc_1000806c

dec_label_pc_1000806c:                            ; preds = %dec_label_pc_10008064
  %v1_1000806c = icmp slt i32 %v1_10006584, 152
  %v3_1000806c = icmp eq i32 %v1_10006584, 152
  store i1 %v1_1000806c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000806c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000806c, label %dec_label_pc_100080c0, label %dec_label_pc_10008074

dec_label_pc_10008074:                            ; preds = %dec_label_pc_1000806c
  %v1_10008074 = icmp slt i32 %v1_10006584, 181
  %v3_10008074 = icmp eq i32 %v1_10006584, 181
  store i1 %v1_10008074, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008074, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008074, label %dec_label_pc_100080ac, label %dec_label_pc_1000807c

dec_label_pc_1000807c:                            ; preds = %dec_label_pc_10008074
  %v1_1000807c = icmp ult i32 %v1_10006584, 19
  %v3_1000807c = icmp eq i32 %v1_10006584, 19
  store i1 %v1_1000807c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000807c, i1* %cr7_eq.global-to-local, align 1
  %tmp330 = icmp ult i32 %v1_10006584, 20
  br i1 %tmp330, label %dec_label_pc_10006908, label %dec_label_pc_10008084

dec_label_pc_10008084:                            ; preds = %dec_label_pc_1000807c
  %v1_10008084 = icmp ult i32 %v1_10006584, 23
  %v3_10008084 = icmp eq i32 %v1_10006584, 23
  store i1 %v1_10008084, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008084, i1* %cr7_eq.global-to-local, align 1
  %tmp331 = icmp ult i32 %v1_10006584, 24
  br i1 %tmp331, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008090:                            ; preds = %dec_label_pc_100067b8
  %v1_10008090 = icmp slt i32 %v1_10006584, 62
  %v3_10008090 = icmp eq i32 %v1_10006584, 62
  store i1 %v1_10008090, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008090, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008090, label %dec_label_pc_10006574, label %dec_label_pc_10008098

dec_label_pc_10008098:                            ; preds = %dec_label_pc_10008090
  %v1_10008098 = icmp slt i32 %v1_10006584, 32
  %v3_10008098 = icmp eq i32 %v1_10006584, 32
  store i1 %v1_10008098, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008098, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008098, label %dec_label_pc_10006574, label %dec_label_pc_100080a0

dec_label_pc_100080a0:                            ; preds = %dec_label_pc_10008098
  %v1_100080a0 = icmp slt i32 %v1_10006584, 33
  %v3_100080a0 = icmp eq i32 %v1_10006584, 33
  store i1 %v1_100080a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080a0, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100080ac:                            ; preds = %dec_label_pc_10008074
  %v1_100080ac = icmp ult i32 %v1_10006588, 159
  %v3_100080ac = icmp eq i32 %v1_10006588, 159
  store i1 %v1_100080ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080ac, i1* %cr7_eq.global-to-local, align 1
  %tmp332 = icmp ult i32 %v1_10006588, 160
  br i1 %tmp332, label %dec_label_pc_10006908, label %dec_label_pc_100080b4

dec_label_pc_100080b4:                            ; preds = %dec_label_pc_100080ac
  %v1_100080b4 = icmp ult i32 %v1_10006588, 188
  %v3_100080b4 = icmp eq i32 %v1_10006588, 188
  store i1 %v1_100080b4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080b4, i1* %cr7_eq.global-to-local, align 1
  %tmp333 = icmp ult i32 %v1_10006588, 189
  br i1 %tmp333, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100080c0:                            ; preds = %dec_label_pc_1000806c
  %v1_100080c0 = icmp ult i32 %v1_10006588, 95
  %v3_100080c0 = icmp eq i32 %v1_10006588, 95
  store i1 %v1_100080c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080c0, i1* %cr7_eq.global-to-local, align 1
  %tmp334 = icmp ult i32 %v1_10006588, 96
  br i1 %tmp334, label %dec_label_pc_10006908, label %dec_label_pc_100080c8

dec_label_pc_100080c8:                            ; preds = %dec_label_pc_100080c0
  %v1_100080c8 = icmp ult i32 %v1_10006588, 110
  %v3_100080c8 = icmp eq i32 %v1_10006588, 110
  store i1 %v1_100080c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080c8, i1* %cr7_eq.global-to-local, align 1
  %tmp335 = icmp ult i32 %v1_10006588, 111
  br i1 %tmp335, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100080d4:                            ; preds = %dec_label_pc_100067b0
  %v1_100080d4 = icmp slt i32 %v1_10006584, 55
  %v3_100080d4 = icmp eq i32 %v1_10006584, 55
  store i1 %v1_100080d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080d4, label %dec_label_pc_10006574, label %dec_label_pc_100080dc

dec_label_pc_100080dc:                            ; preds = %dec_label_pc_100080d4
  %v1_100080dc = icmp slt i32 %v1_10006584, 63
  %v3_100080dc = icmp eq i32 %v1_10006584, 63
  store i1 %v1_100080dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080dc, label %dec_label_pc_1000811c, label %dec_label_pc_100080e4

dec_label_pc_100080e4:                            ; preds = %dec_label_pc_100080dc
  %v1_100080e4 = icmp slt i32 %v1_10006584, 76
  %v3_100080e4 = icmp eq i32 %v1_10006584, 76
  store i1 %v1_100080e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080e4, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100067a8
  %v1_100080f0 = icmp slt i32 %v1_10006584, 166
  %v3_100080f0 = icmp eq i32 %v1_10006584, 166
  store i1 %v1_100080f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080f0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080f0, label %dec_label_pc_10006574, label %dec_label_pc_100080f8

dec_label_pc_100080f8:                            ; preds = %dec_label_pc_100080f0
  %v1_100080f8 = icmp slt i32 %v1_10006584, 226
  %v3_100080f8 = icmp eq i32 %v1_10006584, 226
  store i1 %v1_100080f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100080f8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100080f8, label %dec_label_pc_10006574, label %dec_label_pc_10008100

dec_label_pc_10008100:                            ; preds = %dec_label_pc_100080f8
  %v1_10008100 = icmp slt i32 %v1_10006584, 209
  %v3_10008100 = icmp eq i32 %v1_10006584, 209
  store i1 %v1_10008100, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008100, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008100, label %dec_label_pc_10008130, label %dec_label_pc_10008108

dec_label_pc_10008108:                            ; preds = %dec_label_pc_10008100
  %v1_10008108 = icmp slt i32 %v1_10006584, 165
  %v3_10008108 = icmp eq i32 %v1_10006584, 165
  store i1 %v1_10008108, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008108, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008108, label %dec_label_pc_10006574, label %dec_label_pc_10008110

dec_label_pc_10008110:                            ; preds = %dec_label_pc_10008108
  %v1_10008110 = icmp slt i32 %v1_10006584, 68
  %v3_10008110 = icmp eq i32 %v1_10006584, 68
  store i1 %v1_10008110, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008110, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008110, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000811c:                            ; preds = %dec_label_pc_100080dc
  %v1_1000811c = icmp slt i32 %v1_10006588, 0
  %v3_1000811c = icmp eq i32 %v1_10006588, 0
  store i1 %v1_1000811c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000811c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000811c, label %dec_label_pc_10006908, label %dec_label_pc_10008124

dec_label_pc_10008124:                            ; preds = %dec_label_pc_1000811c
  %v1_10008124 = icmp ult i32 %v1_10006588, 126
  %v3_10008124 = icmp eq i32 %v1_10006588, 126
  store i1 %v1_10008124, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008124, i1* %cr7_eq.global-to-local, align 1
  %tmp336 = icmp ult i32 %v1_10006588, 127
  br i1 %tmp336, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008130:                            ; preds = %dec_label_pc_10008100
  %v1_10008130 = icmp ult i32 %v1_10006588, 47
  %v3_10008130 = icmp eq i32 %v1_10006588, 47
  store i1 %v1_10008130, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008130, i1* %cr7_eq.global-to-local, align 1
  %tmp337 = icmp ult i32 %v1_10006588, 48
  br i1 %tmp337, label %dec_label_pc_10006908, label %dec_label_pc_10008138

dec_label_pc_10008138:                            ; preds = %dec_label_pc_10008130
  %v1_10008138 = icmp ult i32 %v1_10006588, 52
  %v3_10008138 = icmp eq i32 %v1_10006588, 52
  store i1 %v1_10008138, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008138, i1* %cr7_eq.global-to-local, align 1
  %tmp338 = icmp ult i32 %v1_10006588, 53
  br i1 %tmp338, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008144:                            ; preds = %dec_label_pc_100067a0
  %v1_10008144 = icmp ult i32 %v1_10006584, 15
  %v3_10008144 = icmp eq i32 %v1_10006584, 15
  store i1 %v1_10008144, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008144, i1* %cr7_eq.global-to-local, align 1
  %tmp339 = icmp ult i32 %v1_10006584, 16
  br i1 %tmp339, label %dec_label_pc_1000816c.thread, label %dec_label_pc_1000814c

dec_label_pc_1000816c.thread:                     ; preds = %dec_label_pc_10008144
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_1000814c:                            ; preds = %dec_label_pc_10008144
  %v1_1000814c = icmp ult i32 %v1_10006584, 30
  %v3_1000814c = icmp eq i32 %v1_10006584, 30
  store i1 %v1_1000814c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000814c, i1* %cr7_eq.global-to-local, align 1
  %tmp340 = icmp ult i32 %v1_10006584, 31
  br i1 %tmp340, label %dec_label_pc_10006574, label %dec_label_pc_10008154

dec_label_pc_10008154:                            ; preds = %dec_label_pc_1000814c
  %v1_10008154 = icmp slt i32 %v1_10006584, 131
  %v3_10008154 = icmp eq i32 %v1_10006584, 131
  store i1 %v1_10008154, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008154, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008154, label %dec_label_pc_10006574, label %dec_label_pc_1000815c

dec_label_pc_1000815c:                            ; preds = %dec_label_pc_10008154
  %v1_1000815c = icmp slt i32 %v1_10006584, 236
  %v3_1000815c = icmp eq i32 %v1_10006584, 236
  store i1 %v1_1000815c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000815c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000815c, label %dec_label_pc_10006574, label %dec_label_pc_10008164

dec_label_pc_10008164:                            ; preds = %dec_label_pc_1000815c
  %v1_10008164 = icmp slt i32 %v1_10006584, 238
  %v3_10008164 = icmp eq i32 %v1_10006584, 238
  store i1 %v1_10008164, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008164, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008164, label %dec_label_pc_1000819c, label %dec_label_pc_1000816c

dec_label_pc_1000816c:                            ; preds = %dec_label_pc_10008164
  %v1_1000816c = icmp slt i32 %v1_10006584, 200
  %v3_1000816c = icmp eq i32 %v1_10006584, 200
  store i1 %v1_1000816c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000816c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000816c, label %dec_label_pc_10008174, label %dec_label_pc_10006908

dec_label_pc_10008174:                            ; preds = %dec_label_pc_1000816c
  %v1_10008174 = and i32 %v1_10006588, 128
  store i32 %v1_10008174, i32* %r10.global-to-local, align 4
  %v3_10008174 = icmp eq i32 %v1_10008174, 0
  br i1 %v3_10008174, label %dec_label_pc_10006908, label %dec_label_pc_1000817c

dec_label_pc_1000817c:                            ; preds = %dec_label_pc_10008174
  %v1_1000817c = icmp ult i32 %v1_10006588, 158
  %v3_1000817c = icmp eq i32 %v1_10006588, 158
  store i1 %v1_1000817c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000817c, i1* %cr7_eq.global-to-local, align 1
  %tmp341 = icmp ult i32 %v1_10006588, 159
  br i1 %tmp341, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008188:                            ; preds = %dec_label_pc_10006798
  %v1_10008188 = icmp slt i32 %v1_10006584, 0
  %v3_10008188 = icmp eq i32 %v1_10006584, 0
  store i1 %v1_10008188, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008188, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008188, label %dec_label_pc_10006908, label %dec_label_pc_10008190

dec_label_pc_10008190:                            ; preds = %dec_label_pc_10008188
  %v1_10008190 = icmp ult i32 %v1_10006584, 117
  %v3_10008190 = icmp eq i32 %v1_10006584, 117
  store i1 %v1_10008190, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008190, i1* %cr7_eq.global-to-local, align 1
  %tmp342 = icmp ult i32 %v1_10006584, 118
  br i1 %tmp342, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000819c:                            ; preds = %dec_label_pc_10008164
  %v1_1000819c = and i32 %v1_10006588, 128
  store i32 %v1_1000819c, i32* %r10.global-to-local, align 4
  %v3_1000819c = icmp eq i32 %v1_1000819c, 0
  br i1 %v3_1000819c, label %dec_label_pc_10006908, label %dec_label_pc_100081a4

dec_label_pc_100081a4:                            ; preds = %dec_label_pc_1000819c
  %v1_100081a4 = icmp ult i32 %v1_10006588, 190
  %v3_100081a4 = icmp eq i32 %v1_10006588, 190
  store i1 %v1_100081a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081a4, i1* %cr7_eq.global-to-local, align 1
  %tmp343 = icmp ult i32 %v1_10006588, 191
  br i1 %tmp343, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100081b0:                            ; preds = %dec_label_pc_10006790
  %v1_100081b0 = icmp ult i32 %v1_10006584, 120
  %v3_100081b0 = icmp eq i32 %v1_10006584, 120
  store i1 %v1_100081b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081b0, i1* %cr7_eq.global-to-local, align 1
  %tmp344 = icmp ult i32 %v1_10006584, 121
  br i1 %tmp344, label %dec_label_pc_100081d8, label %dec_label_pc_100081b8

dec_label_pc_100081b8:                            ; preds = %dec_label_pc_100081b0
  %v1_100081b8 = icmp ult i32 %v1_10006584, 253
  %v3_100081b8 = icmp eq i32 %v1_10006584, 253
  store i1 %v1_100081b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081b8, i1* %cr7_eq.global-to-local, align 1
  %tmp345 = icmp ult i32 %v1_10006584, 254
  br i1 %tmp345, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100081c4:                            ; preds = %dec_label_pc_10006788
  %v1_100081c4 = icmp ult i32 %v1_10006584, 204
  %v3_100081c4 = icmp eq i32 %v1_10006584, 204
  store i1 %v1_100081c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081c4, i1* %cr7_eq.global-to-local, align 1
  %tmp346 = icmp ult i32 %v1_10006584, 205
  br i1 %tmp346, label %dec_label_pc_10008204, label %dec_label_pc_100081cc

dec_label_pc_100081cc:                            ; preds = %dec_label_pc_100081c4
  %v1_100081cc = icmp eq i32 %v1_10006584, 205
  %v3_100081cc = icmp eq i32 %v1_10006584, 206
  store i1 %v1_100081cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081cc, i1* %cr7_eq.global-to-local, align 1
  %tmp347 = icmp ult i32 %v1_10006584, 207
  br i1 %tmp347, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100081d8:                            ; preds = %dec_label_pc_100081b0
  %v1_100081d8 = icmp slt i32 %v1_10006584, 116
  %v3_100081d8 = icmp eq i32 %v1_10006584, 116
  store i1 %v1_100081d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081d8, label %dec_label_pc_1000822c, label %dec_label_pc_100081e0

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_100081d8
  %v1_100081e0 = icmp slt i32 %v1_10006584, 36
  %v3_100081e0 = icmp eq i32 %v1_10006584, 36
  store i1 %v1_100081e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081e0, label %dec_label_pc_10008218, label %dec_label_pc_100081e8

dec_label_pc_100081e8:                            ; preds = %dec_label_pc_100081e0
  %v1_100081e8 = icmp slt i32 %v1_10006584, 58
  %v3_100081e8 = icmp eq i32 %v1_10006584, 58
  store i1 %v1_100081e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081e8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100081e8, label %dec_label_pc_100081f0, label %dec_label_pc_10006908

dec_label_pc_100081f0:                            ; preds = %dec_label_pc_100081e8
  %v1_100081f0 = icmp ult i32 %v1_10006588, 183
  %v3_100081f0 = icmp eq i32 %v1_10006588, 183
  store i1 %v1_100081f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081f0, i1* %cr7_eq.global-to-local, align 1
  %tmp348 = icmp ult i32 %v1_10006588, 184
  br i1 %tmp348, label %dec_label_pc_10006908, label %dec_label_pc_100081f8

dec_label_pc_100081f8:                            ; preds = %dec_label_pc_100081f0
  %v1_100081f8 = icmp ult i32 %v1_10006588, 186
  %v3_100081f8 = icmp eq i32 %v1_10006588, 186
  store i1 %v1_100081f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100081f8, i1* %cr7_eq.global-to-local, align 1
  %tmp349 = icmp ult i32 %v1_10006588, 187
  br i1 %tmp349, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008204:                            ; preds = %dec_label_pc_100081c4
  %v1_10008204 = icmp slt i32 %v1_10006584, 47
  %v3_10008204 = icmp eq i32 %v1_10006584, 47
  store i1 %v1_10008204, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008204, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008204, label %dec_label_pc_10008240, label %dec_label_pc_1000820c

dec_label_pc_1000820c:                            ; preds = %dec_label_pc_10008204
  %v1_1000820c = icmp slt i32 %v1_10006584, 172
  %v3_1000820c = icmp eq i32 %v1_10006584, 172
  store i1 %v1_1000820c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000820c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000820c, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008218:                            ; preds = %dec_label_pc_100081e0
  %v1_10008218 = icmp ult i32 %v1_10006588, 219
  %v3_10008218 = icmp eq i32 %v1_10006588, 219
  store i1 %v1_10008218, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008218, i1* %cr7_eq.global-to-local, align 1
  %tmp350 = icmp ult i32 %v1_10006588, 220
  br i1 %tmp350, label %dec_label_pc_10006908, label %dec_label_pc_10008220

dec_label_pc_10008220:                            ; preds = %dec_label_pc_10008218
  %v1_10008220 = icmp ult i32 %v1_10006588, 222
  %v3_10008220 = icmp eq i32 %v1_10006588, 222
  store i1 %v1_10008220, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008220, i1* %cr7_eq.global-to-local, align 1
  %tmp351 = icmp ult i32 %v1_10006588, 223
  br i1 %tmp351, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000822c:                            ; preds = %dec_label_pc_100081d8
  %v1_1000822c = icmp ult i32 %v1_10006588, 111
  %v3_1000822c = icmp eq i32 %v1_10006588, 111
  store i1 %v1_1000822c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000822c, i1* %cr7_eq.global-to-local, align 1
  %tmp352 = icmp ult i32 %v1_10006588, 112
  br i1 %tmp352, label %dec_label_pc_10006908, label %dec_label_pc_10008234

dec_label_pc_10008234:                            ; preds = %dec_label_pc_1000822c
  %v1_10008234 = icmp ult i32 %v1_10006588, 118
  %v3_10008234 = icmp eq i32 %v1_10006588, 118
  store i1 %v1_10008234, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008234, i1* %cr7_eq.global-to-local, align 1
  %tmp353 = icmp ult i32 %v1_10006588, 119
  br i1 %tmp353, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008240:                            ; preds = %dec_label_pc_10008204
  %v1_10008240 = icmp ult i32 %v1_10006588, 9
  %v3_10008240 = icmp eq i32 %v1_10006588, 9
  store i1 %v1_10008240, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008240, i1* %cr7_eq.global-to-local, align 1
  %tmp354 = icmp ult i32 %v1_10006588, 10
  br i1 %tmp354, label %dec_label_pc_10006908, label %dec_label_pc_10008248

dec_label_pc_10008248:                            ; preds = %dec_label_pc_10008240
  %v1_10008248 = icmp slt i32 %v1_10006588, 10
  %v3_10008248 = icmp eq i32 %v1_10006588, 10
  store i1 %v1_10008248, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008248, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008248, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008254:                            ; preds = %dec_label_pc_10006780
  %v1_10008254 = icmp ult i32 %v1_10006584, 131
  %v3_10008254 = icmp eq i32 %v1_10006584, 131
  store i1 %v1_10008254, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008254, i1* %cr7_eq.global-to-local, align 1
  %tmp355 = icmp ult i32 %v1_10006584, 132
  br i1 %tmp355, label %dec_label_pc_10006908, label %dec_label_pc_1000825c

dec_label_pc_1000825c:                            ; preds = %dec_label_pc_10008254
  %v1_1000825c = icmp ult i32 %v1_10006584, 150
  %v3_1000825c = icmp eq i32 %v1_10006584, 150
  store i1 %v1_1000825c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000825c, i1* %cr7_eq.global-to-local, align 1
  %tmp356 = icmp ult i32 %v1_10006584, 151
  br i1 %tmp356, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008268:                            ; preds = %dec_label_pc_10006778
  %v1_10008268 = icmp ult i32 %v1_10006584, 119
  %v3_10008268 = icmp eq i32 %v1_10006584, 119
  store i1 %v1_10008268, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008268, i1* %cr7_eq.global-to-local, align 1
  %tmp357 = icmp ult i32 %v1_10006584, 120
  br i1 %tmp357, label %dec_label_pc_10008278.thread, label %dec_label_pc_10008270

dec_label_pc_10008278.thread:                     ; preds = %dec_label_pc_10008268
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10008270:                            ; preds = %dec_label_pc_10008268
  %v1_10008270 = icmp slt i32 %v1_10006584, 120
  %v3_10008270 = icmp eq i32 %v1_10006584, 120
  store i1 %v1_10008270, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008270, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008270, label %dec_label_pc_10006574, label %dec_label_pc_10008278

dec_label_pc_10008278:                            ; preds = %dec_label_pc_10008270
  %v1_10008278 = icmp slt i32 %v1_10006584, 203
  %v3_10008278 = icmp eq i32 %v1_10006584, 203
  store i1 %v1_10008278, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008278, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008278, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008284:                            ; preds = %dec_label_pc_10006770
  %v1_10008284 = icmp slt i32 %v1_10006584, 0
  %v3_10008284 = icmp eq i32 %v1_10006584, 0
  store i1 %v1_10008284, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008284, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008284, label %dec_label_pc_10006908, label %dec_label_pc_1000828c

dec_label_pc_1000828c:                            ; preds = %dec_label_pc_10008284
  %v1_1000828c = icmp ult i32 %v1_10006584, 20
  %v3_1000828c = icmp eq i32 %v1_10006584, 20
  store i1 %v1_1000828c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000828c, i1* %cr7_eq.global-to-local, align 1
  %tmp358 = icmp ult i32 %v1_10006584, 21
  br i1 %tmp358, label %dec_label_pc_10006574, label %dec_label_pc_10008294

dec_label_pc_10008294:                            ; preds = %dec_label_pc_1000828c
  %v1_10008294 = icmp ult i32 %v1_10006584, 234
  %v3_10008294 = icmp eq i32 %v1_10006584, 234
  store i1 %v1_10008294, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008294, i1* %cr7_eq.global-to-local, align 1
  %tmp359 = icmp ult i32 %v1_10006584, 235
  br i1 %tmp359, label %dec_label_pc_10006908, label %dec_label_pc_1000829c

dec_label_pc_1000829c:                            ; preds = %dec_label_pc_10008294
  %v1_1000829c = icmp ult i32 %v1_10006584, 246
  %v3_1000829c = icmp eq i32 %v1_10006584, 246
  store i1 %v1_1000829c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000829c, i1* %cr7_eq.global-to-local, align 1
  %tmp360 = icmp ult i32 %v1_10006584, 247
  br i1 %tmp360, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100082a8:                            ; preds = %dec_label_pc_10006768
  %v1_100082a8 = icmp ult i32 %v1_10006584, 20
  %v3_100082a8 = icmp eq i32 %v1_10006584, 20
  store i1 %v1_100082a8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082a8, i1* %cr7_eq.global-to-local, align 1
  %tmp361 = icmp ult i32 %v1_10006584, 21
  br i1 %tmp361, label %dec_label_pc_10006908, label %dec_label_pc_100082b0

dec_label_pc_100082b0:                            ; preds = %dec_label_pc_100082a8
  %v1_100082b0 = icmp ult i32 %v1_10006584, 31
  %v3_100082b0 = icmp eq i32 %v1_10006584, 31
  store i1 %v1_100082b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082b0, i1* %cr7_eq.global-to-local, align 1
  %tmp362 = icmp ult i32 %v1_10006584, 32
  br i1 %tmp362, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100082bc:                            ; preds = %dec_label_pc_10006760
  %v1_100082bc = icmp ult i32 %v1_10006584, 98
  %v3_100082bc = icmp eq i32 %v1_10006584, 98
  store i1 %v1_100082bc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082bc, i1* %cr7_eq.global-to-local, align 1
  %tmp363 = icmp ult i32 %v1_10006584, 99
  br i1 %tmp363, label %dec_label_pc_10006908, label %dec_label_pc_100082c4

dec_label_pc_100082c4:                            ; preds = %dec_label_pc_100082bc
  %v1_100082c4 = icmp ult i32 %v1_10006584, 252
  %v3_100082c4 = icmp eq i32 %v1_10006584, 252
  store i1 %v1_100082c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082c4, i1* %cr7_eq.global-to-local, align 1
  %tmp364 = icmp ult i32 %v1_10006584, 253
  br i1 %tmp364, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100082d0:                            ; preds = %dec_label_pc_10006758
  %v1_100082d0 = icmp ult i32 %v1_10006584, 44
  %v3_100082d0 = icmp eq i32 %v1_10006584, 44
  store i1 %v1_100082d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082d0, i1* %cr7_eq.global-to-local, align 1
  %tmp365 = icmp ult i32 %v1_10006584, 45
  br i1 %tmp365, label %dec_label_pc_10006908, label %dec_label_pc_100082d8

dec_label_pc_100082d8:                            ; preds = %dec_label_pc_100082d0
  %v1_100082d8 = icmp ult i32 %v1_10006584, 232
  %v3_100082d8 = icmp eq i32 %v1_10006584, 232
  store i1 %v1_100082d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082d8, i1* %cr7_eq.global-to-local, align 1
  %tmp366 = icmp ult i32 %v1_10006584, 233
  br i1 %tmp366, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100082e4:                            ; preds = %dec_label_pc_10006750
  %v1_100082e4 = icmp slt i32 %v1_10006584, 0
  %v3_100082e4 = icmp eq i32 %v1_10006584, 0
  store i1 %v1_100082e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100082e4, label %dec_label_pc_10006908, label %dec_label_pc_100082ec

dec_label_pc_100082ec:                            ; preds = %dec_label_pc_100082e4
  %v1_100082ec = icmp ult i32 %v1_10006584, 202
  %v3_100082ec = icmp eq i32 %v1_10006584, 202
  store i1 %v1_100082ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082ec, i1* %cr7_eq.global-to-local, align 1
  %tmp367 = icmp ult i32 %v1_10006584, 203
  br i1 %tmp367, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100082f8:                            ; preds = %dec_label_pc_10006748
  %v1_100082f8 = icmp ult i32 %v1_10006584, 30
  %v3_100082f8 = icmp eq i32 %v1_10006584, 30
  store i1 %v1_100082f8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100082f8, i1* %cr7_eq.global-to-local, align 1
  %tmp368 = icmp ult i32 %v1_10006584, 31
  br i1 %tmp368, label %dec_label_pc_10008308, label %dec_label_pc_10008300

dec_label_pc_10008300:                            ; preds = %dec_label_pc_100082f8
  %v1_10008300 = icmp ult i32 %v1_10006584, 142
  %v3_10008300 = icmp eq i32 %v1_10006584, 142
  store i1 %v1_10008300, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008300, i1* %cr7_eq.global-to-local, align 1
  %tmp369 = icmp ult i32 %v1_10006584, 143
  br i1 %tmp369, label %dec_label_pc_10006574, label %dec_label_pc_10008308

dec_label_pc_10008308:                            ; preds = %dec_label_pc_10008300, %dec_label_pc_100082f8
  %v1_10008308 = icmp slt i32 %v1_10006584, 59
  store i1 %v1_10008308, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10008314:                            ; preds = %dec_label_pc_10006740
  %v1_10008314 = icmp ult i32 %v1_10006584, 12
  %v3_10008314 = icmp eq i32 %v1_10006584, 12
  store i1 %v1_10008314, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008314, i1* %cr7_eq.global-to-local, align 1
  %tmp370 = icmp ult i32 %v1_10006584, 13
  br i1 %tmp370, label %dec_label_pc_10008324.thread, label %dec_label_pc_1000831c

dec_label_pc_10008324.thread:                     ; preds = %dec_label_pc_10008314
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000832c

dec_label_pc_1000831c:                            ; preds = %dec_label_pc_10008314
  %v1_1000831c = icmp ult i32 %v1_10006584, 193
  %v3_1000831c = icmp eq i32 %v1_10006584, 193
  store i1 %v1_1000831c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000831c, i1* %cr7_eq.global-to-local, align 1
  %tmp371 = icmp ult i32 %v1_10006584, 194
  br i1 %tmp371, label %dec_label_pc_10006574, label %dec_label_pc_10008324

dec_label_pc_10008324:                            ; preds = %dec_label_pc_1000831c
  %v1_10008324 = icmp slt i32 %v1_10006584, 197
  %v3_10008324 = icmp eq i32 %v1_10006584, 197
  store i1 %v1_10008324, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008324, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008324, label %dec_label_pc_10006574, label %dec_label_pc_1000832c

dec_label_pc_1000832c:                            ; preds = %dec_label_pc_10008324, %dec_label_pc_10008324.thread
  %v1_1000832c = icmp slt i32 %v1_10006584, 68
  store i1 %v1_1000832c, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10008338:                            ; preds = %dec_label_pc_10006738
  %v1_10008338 = icmp ult i32 %v1_10006584, 176
  %v3_10008338 = icmp eq i32 %v1_10006584, 176
  store i1 %v1_10008338, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008338, i1* %cr7_eq.global-to-local, align 1
  %tmp372 = icmp ult i32 %v1_10006584, 177
  br i1 %tmp372, label %dec_label_pc_10006908, label %dec_label_pc_10008340

dec_label_pc_10008340:                            ; preds = %dec_label_pc_10008338
  %v1_10008340 = icmp ult i32 %v1_10006584, 222
  %v3_10008340 = icmp eq i32 %v1_10006584, 222
  store i1 %v1_10008340, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008340, i1* %cr7_eq.global-to-local, align 1
  %tmp373 = icmp ult i32 %v1_10006584, 223
  br i1 %tmp373, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000834c:                            ; preds = %dec_label_pc_10006730
  %v1_1000834c = icmp ult i32 %v1_10006584, 4
  %v3_1000834c = icmp eq i32 %v1_10006584, 4
  store i1 %v1_1000834c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000834c, i1* %cr7_eq.global-to-local, align 1
  %tmp374 = icmp ult i32 %v1_10006584, 5
  br i1 %tmp374, label %dec_label_pc_10006908, label %dec_label_pc_10008354

dec_label_pc_10008354:                            ; preds = %dec_label_pc_1000834c
  %v1_10008354 = icmp ult i32 %v1_10006584, 234
  %v3_10008354 = icmp eq i32 %v1_10006584, 234
  store i1 %v1_10008354, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008354, i1* %cr7_eq.global-to-local, align 1
  %tmp375 = icmp ult i32 %v1_10006584, 235
  br i1 %tmp375, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008360:                            ; preds = %dec_label_pc_10006728
  %v1_10008360 = icmp ult i32 %v1_10006584, 2
  %v3_10008360 = icmp eq i32 %v1_10006584, 2
  store i1 %v1_10008360, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008360, i1* %cr7_eq.global-to-local, align 1
  %tmp376 = icmp ult i32 %v1_10006584, 3
  br i1 %tmp376, label %dec_label_pc_10006908, label %dec_label_pc_10008368

dec_label_pc_10008368:                            ; preds = %dec_label_pc_10008360
  %v1_10008368 = icmp ult i32 %v1_10006584, 250
  %v3_10008368 = icmp eq i32 %v1_10006584, 250
  store i1 %v1_10008368, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008368, i1* %cr7_eq.global-to-local, align 1
  %tmp377 = icmp ult i32 %v1_10006584, 251
  br i1 %tmp377, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008374:                            ; preds = %dec_label_pc_10006720
  %v1_10008374 = icmp ult i32 %v1_10006584, 2
  %v3_10008374 = icmp eq i32 %v1_10006584, 2
  store i1 %v1_10008374, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008374, i1* %cr7_eq.global-to-local, align 1
  %tmp378 = icmp ult i32 %v1_10006584, 3
  br i1 %tmp378, label %dec_label_pc_10006908, label %dec_label_pc_1000837c

dec_label_pc_1000837c:                            ; preds = %dec_label_pc_10008374
  %v1_1000837c = icmp ult i32 %v1_10006584, 250
  %v3_1000837c = icmp eq i32 %v1_10006584, 250
  store i1 %v1_1000837c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000837c, i1* %cr7_eq.global-to-local, align 1
  %tmp379 = icmp ult i32 %v1_10006584, 251
  br i1 %tmp379, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008388:                            ; preds = %dec_label_pc_10006718
  %v1_10008388 = icmp ult i32 %v1_10006584, 39
  %v3_10008388 = icmp eq i32 %v1_10006584, 39
  store i1 %v1_10008388, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008388, i1* %cr7_eq.global-to-local, align 1
  %tmp380 = icmp ult i32 %v1_10006584, 40
  br i1 %tmp380, label %dec_label_pc_10006908, label %dec_label_pc_10008390

dec_label_pc_10008390:                            ; preds = %dec_label_pc_10008388
  %v1_10008390 = icmp ult i32 %v1_10006584, 167
  %v3_10008390 = icmp eq i32 %v1_10006584, 167
  store i1 %v1_10008390, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008390, i1* %cr7_eq.global-to-local, align 1
  %tmp381 = icmp ult i32 %v1_10006584, 168
  br i1 %tmp381, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000839c:                            ; preds = %dec_label_pc_10006710
  %v1_1000839c = icmp ult i32 %v1_10006584, 21
  %v3_1000839c = icmp eq i32 %v1_10006584, 21
  store i1 %v1_1000839c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000839c, i1* %cr7_eq.global-to-local, align 1
  %tmp382 = icmp ult i32 %v1_10006584, 22
  br i1 %tmp382, label %dec_label_pc_10006908, label %dec_label_pc_100083a4

dec_label_pc_100083a4:                            ; preds = %dec_label_pc_1000839c
  %v1_100083a4 = icmp slt i32 %v1_10006584, 255
  %v3_100083a4 = icmp eq i32 %v1_10006584, 255
  store i1 %v1_100083a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083a4, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_100083b0:                            ; preds = %dec_label_pc_10006708
  %v1_100083b0 = icmp ult i32 %v1_10006584, 34
  %v3_100083b0 = icmp eq i32 %v1_10006584, 34
  store i1 %v1_100083b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083b0, i1* %cr7_eq.global-to-local, align 1
  %tmp383 = icmp ult i32 %v1_10006584, 35
  br i1 %tmp383, label %dec_label_pc_10006908, label %dec_label_pc_100083b8

dec_label_pc_100083b8:                            ; preds = %dec_label_pc_100083b0
  %v1_100083b8 = icmp ult i32 %v1_10006584, 236
  %v3_100083b8 = icmp eq i32 %v1_10006584, 236
  store i1 %v1_100083b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083b8, i1* %cr7_eq.global-to-local, align 1
  %tmp384 = icmp ult i32 %v1_10006584, 237
  br i1 %tmp384, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100083c4:                            ; preds = %dec_label_pc_10006700
  %v1_100083c4 = icmp ult i32 %v1_10006584, 17
  %v3_100083c4 = icmp eq i32 %v1_10006584, 17
  store i1 %v1_100083c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083c4, i1* %cr7_eq.global-to-local, align 1
  %tmp385 = icmp ult i32 %v1_10006584, 18
  br i1 %tmp385, label %dec_label_pc_100083e4, label %dec_label_pc_100083cc

dec_label_pc_100083cc:                            ; preds = %dec_label_pc_100083c4
  %v1_100083cc = icmp eq i32 %v1_10006584, 18
  %v3_100083cc = icmp eq i32 %v1_10006584, 19
  store i1 %v1_100083cc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083cc, i1* %cr7_eq.global-to-local, align 1
  %tmp386 = icmp ult i32 %v1_10006584, 20
  br i1 %tmp386, label %dec_label_pc_10006574, label %dec_label_pc_100083d4

dec_label_pc_100083d4:                            ; preds = %dec_label_pc_100083cc
  %v1_100083d4 = icmp slt i32 %v1_10006584, 199
  %v3_100083d4 = icmp eq i32 %v1_10006584, 199
  store i1 %v1_100083d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083d4, label %dec_label_pc_10008430, label %dec_label_pc_100083dc

dec_label_pc_100083dc:                            ; preds = %dec_label_pc_100083d4
  %v1_100083dc = icmp slt i32 %v1_10006584, 211
  %v3_100083dc = icmp eq i32 %v1_10006584, 211
  store i1 %v1_100083dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083dc, label %dec_label_pc_1000841c, label %dec_label_pc_100083e4.thread

dec_label_pc_100083e4.thread:                     ; preds = %dec_label_pc_100083dc
  %v1_100083e430 = icmp slt i32 %v1_10006584, 8
  store i1 %v1_100083e430, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_100083e4:                            ; preds = %dec_label_pc_100083c4
  %v1_100083e4 = icmp slt i32 %v1_10006584, 8
  %v3_100083e4 = icmp eq i32 %v1_10006584, 8
  store i1 %v1_100083e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100083e4, label %dec_label_pc_100083ec, label %dec_label_pc_10006908

dec_label_pc_100083ec:                            ; preds = %dec_label_pc_100083e4
  %v1_100083ec = icmp ult i32 %v1_10006588, 80
  %v3_100083ec = icmp eq i32 %v1_10006588, 80
  store i1 %v1_100083ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083ec, i1* %cr7_eq.global-to-local, align 1
  %tmp387 = icmp ult i32 %v1_10006588, 81
  br i1 %tmp387, label %dec_label_pc_10006908, label %dec_label_pc_100083f4

dec_label_pc_100083f4:                            ; preds = %dec_label_pc_100083ec
  %v1_100083f4 = icmp ult i32 %v1_10006588, 94
  %v3_100083f4 = icmp eq i32 %v1_10006588, 94
  store i1 %v1_100083f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100083f4, i1* %cr7_eq.global-to-local, align 1
  %tmp388 = icmp ult i32 %v1_10006588, 95
  br i1 %tmp388, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008400:                            ; preds = %dec_label_pc_100066f8
  %v1_10008400 = icmp slt i32 %v1_10006584, 254
  %v3_10008400 = icmp eq i32 %v1_10006584, 254
  store i1 %v1_10008400, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008400, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008400, label %dec_label_pc_10006574, label %dec_label_pc_10008408

dec_label_pc_10008408:                            ; preds = %dec_label_pc_10008400
  %v1_10008408 = icmp ult i32 %v1_10006584, 251
  %v3_10008408 = icmp eq i32 %v1_10006584, 251
  store i1 %v1_10008408, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008408, i1* %cr7_eq.global-to-local, align 1
  %tmp389 = icmp ult i32 %v1_10006584, 252
  br i1 %tmp389, label %dec_label_pc_10006908, label %dec_label_pc_10008410

dec_label_pc_10008410:                            ; preds = %dec_label_pc_10008408
  %v1_10008410 = icmp eq i32 %v1_10006584, 252
  %v3_10008410 = icmp eq i32 %v1_10006584, 253
  store i1 %v1_10008410, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008410, i1* %cr7_eq.global-to-local, align 1
  %tmp390 = icmp ult i32 %v1_10006584, 254
  br i1 %tmp390, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000841c:                            ; preds = %dec_label_pc_100083dc
  %v1_1000841c = icmp ult i32 %v1_10006588, 95
  %v3_1000841c = icmp eq i32 %v1_10006588, 95
  store i1 %v1_1000841c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000841c, i1* %cr7_eq.global-to-local, align 1
  %tmp391 = icmp ult i32 %v1_10006588, 96
  br i1 %tmp391, label %dec_label_pc_10006908, label %dec_label_pc_10008424

dec_label_pc_10008424:                            ; preds = %dec_label_pc_1000841c
  %v1_10008424 = icmp ult i32 %v1_10006588, 126
  %v3_10008424 = icmp eq i32 %v1_10006588, 126
  store i1 %v1_10008424, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008424, i1* %cr7_eq.global-to-local, align 1
  %tmp392 = icmp ult i32 %v1_10006588, 127
  br i1 %tmp392, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008430:                            ; preds = %dec_label_pc_100083d4
  %v1_10008430 = icmp ult i32 %v1_10006588, 63
  %v3_10008430 = icmp eq i32 %v1_10006588, 63
  store i1 %v1_10008430, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008430, i1* %cr7_eq.global-to-local, align 1
  %tmp393 = icmp ult i32 %v1_10006588, 64
  br i1 %tmp393, label %dec_label_pc_10006908, label %dec_label_pc_10008438

dec_label_pc_10008438:                            ; preds = %dec_label_pc_10008430
  %v1_10008438 = icmp ult i32 %v1_10006588, 126
  %v3_10008438 = icmp eq i32 %v1_10006588, 126
  store i1 %v1_10008438, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008438, i1* %cr7_eq.global-to-local, align 1
  %tmp394 = icmp ult i32 %v1_10006588, 127
  br i1 %tmp394, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008444:                            ; preds = %dec_label_pc_100066f0
  %v1_10008444 = icmp ult i32 %v1_10006584, 63
  %v3_10008444 = icmp eq i32 %v1_10006584, 63
  store i1 %v1_10008444, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008444, i1* %cr7_eq.global-to-local, align 1
  %tmp395 = icmp ult i32 %v1_10006584, 64
  br i1 %tmp395, label %dec_label_pc_10006908, label %dec_label_pc_1000844c

dec_label_pc_1000844c:                            ; preds = %dec_label_pc_10008444
  %v1_1000844c = icmp ult i32 %v1_10006584, 126
  %v3_1000844c = icmp eq i32 %v1_10006584, 126
  store i1 %v1_1000844c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000844c, i1* %cr7_eq.global-to-local, align 1
  %tmp396 = icmp ult i32 %v1_10006584, 127
  br i1 %tmp396, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008458:                            ; preds = %dec_label_pc_100066e8
  %v1_10008458 = icmp ult i32 %v1_10006584, 15
  %v3_10008458 = icmp eq i32 %v1_10006584, 15
  store i1 %v1_10008458, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008458, i1* %cr7_eq.global-to-local, align 1
  %tmp397 = icmp ult i32 %v1_10006584, 16
  br i1 %tmp397, label %dec_label_pc_10008468.thread, label %dec_label_pc_10008460

dec_label_pc_10008468.thread:                     ; preds = %dec_label_pc_10008458
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10008460:                            ; preds = %dec_label_pc_10008458
  %v1_10008460 = icmp ult i32 %v1_10006584, 31
  %v3_10008460 = icmp eq i32 %v1_10006584, 31
  store i1 %v1_10008460, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008460, i1* %cr7_eq.global-to-local, align 1
  %tmp398 = icmp ult i32 %v1_10006584, 32
  br i1 %tmp398, label %dec_label_pc_10006574, label %dec_label_pc_10008468

dec_label_pc_10008468:                            ; preds = %dec_label_pc_10008460
  %v1_10008468 = icmp slt i32 %v1_10006584, 98
  %v3_10008468 = icmp eq i32 %v1_10006584, 98
  store i1 %v1_10008468, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008468, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008468, label %dec_label_pc_10008470, label %dec_label_pc_10006908

dec_label_pc_10008470:                            ; preds = %dec_label_pc_10008468
  %v1_10008470 = icmp ult i32 %v1_10006588, 63
  %v3_10008470 = icmp eq i32 %v1_10006588, 63
  store i1 %v1_10008470, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008470, i1* %cr7_eq.global-to-local, align 1
  %tmp399 = icmp ult i32 %v1_10006588, 64
  br i1 %tmp399, label %dec_label_pc_10006908, label %dec_label_pc_10008478

dec_label_pc_10008478:                            ; preds = %dec_label_pc_10008470
  %v1_10008478 = icmp ult i32 %v1_10006588, 94
  %v3_10008478 = icmp eq i32 %v1_10006588, 94
  store i1 %v1_10008478, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008478, i1* %cr7_eq.global-to-local, align 1
  %tmp400 = icmp ult i32 %v1_10006588, 95
  br i1 %tmp400, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008484:                            ; preds = %dec_label_pc_100066e0
  %v1_10008484 = icmp slt i32 %v1_10006584, 70
  %v3_10008484 = icmp eq i32 %v1_10006584, 70
  store i1 %v1_10008484, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008484, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008484, label %dec_label_pc_10006574, label %dec_label_pc_1000848c

dec_label_pc_1000848c:                            ; preds = %dec_label_pc_10008484
  %v1_1000848c = icmp ult i32 %v1_10006584, 68
  %v3_1000848c = icmp eq i32 %v1_10006584, 68
  store i1 %v1_1000848c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000848c, i1* %cr7_eq.global-to-local, align 1
  %tmp401 = icmp ult i32 %v1_10006584, 69
  br i1 %tmp401, label %dec_label_pc_100084ac.thread, label %dec_label_pc_10008494

dec_label_pc_10008494:                            ; preds = %dec_label_pc_1000848c
  %v1_10008494 = icmp ult i32 %v1_10006584, 226
  %v3_10008494 = icmp eq i32 %v1_10006584, 226
  store i1 %v1_10008494, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008494, i1* %cr7_eq.global-to-local, align 1
  %tmp402 = icmp ult i32 %v1_10006584, 227
  br i1 %tmp402, label %dec_label_pc_10006574, label %dec_label_pc_100084ac

dec_label_pc_100084ac.thread:                     ; preds = %dec_label_pc_1000848c
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100084b4

dec_label_pc_100084ac:                            ; preds = %dec_label_pc_10008494
  %v1_100084ac = icmp slt i32 %v1_10006584, 237
  %v3_100084ac = icmp eq i32 %v1_10006584, 237
  store i1 %v1_100084ac, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084ac, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084ac, label %dec_label_pc_100084f4, label %dec_label_pc_100084b4

dec_label_pc_100084b4:                            ; preds = %dec_label_pc_100084ac, %dec_label_pc_100084ac.thread
  %v1_100084b4 = icmp slt i32 %v1_10006584, 94
  store i1 %v1_100084b4, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_100084d0:                            ; preds = %dec_label_pc_100066d8
  %v1_100084d0 = icmp slt i32 %v1_10006584, 35
  %v3_100084d0 = icmp eq i32 %v1_10006584, 35
  store i1 %v1_100084d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084d0, label %dec_label_pc_10006574, label %dec_label_pc_100084d8

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_100084d0
  %v1_100084d8 = icmp slt i32 %v1_10006584, 222
  %v3_100084d8 = icmp eq i32 %v1_10006584, 222
  store i1 %v1_100084d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084d8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084d8, label %dec_label_pc_100084e0, label %dec_label_pc_10006908

dec_label_pc_100084e0:                            ; preds = %dec_label_pc_100084d8
  %v1_100084e0 = icmp slt i32 %v1_10006588, 0
  %v3_100084e0 = icmp eq i32 %v1_10006588, 0
  store i1 %v1_100084e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100084e0, label %dec_label_pc_10006908, label %dec_label_pc_100084e8

dec_label_pc_100084e8:                            ; preds = %dec_label_pc_100084e0
  %v1_100084e8 = icmp ult i32 %v1_10006588, 30
  %v3_100084e8 = icmp eq i32 %v1_10006588, 30
  store i1 %v1_100084e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084e8, i1* %cr7_eq.global-to-local, align 1
  %tmp403 = icmp ult i32 %v1_10006588, 31
  br i1 %tmp403, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084ac
  %v1_100084f4 = icmp ult i32 %v1_10006588, 31
  %v3_100084f4 = icmp eq i32 %v1_10006588, 31
  store i1 %v1_100084f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084f4, i1* %cr7_eq.global-to-local, align 1
  %tmp404 = icmp ult i32 %v1_10006588, 32
  br i1 %tmp404, label %dec_label_pc_10006908, label %dec_label_pc_100084fc

dec_label_pc_100084fc:                            ; preds = %dec_label_pc_100084f4
  %v1_100084fc = icmp ult i32 %v1_10006588, 42
  %v3_100084fc = icmp eq i32 %v1_10006588, 42
  store i1 %v1_100084fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100084fc, i1* %cr7_eq.global-to-local, align 1
  %tmp405 = icmp ult i32 %v1_10006588, 43
  br i1 %tmp405, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008508:                            ; preds = %dec_label_pc_100066d0
  %v1_10008508 = icmp slt i32 %v1_10006584, 235
  %v3_10008508 = icmp eq i32 %v1_10006584, 235
  store i1 %v1_10008508, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008508, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008508, label %dec_label_pc_10006574, label %dec_label_pc_10008510

dec_label_pc_10008510:                            ; preds = %dec_label_pc_10008508
  %v1_10008510 = icmp slt i32 %v1_10006584, 240
  %v3_10008510 = icmp eq i32 %v1_10006584, 240
  store i1 %v1_10008510, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008510, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008510, label %dec_label_pc_10008518, label %dec_label_pc_10006908

dec_label_pc_10008518:                            ; preds = %dec_label_pc_10008510
  %v1_10008518 = and i32 %v1_10006588, 128
  store i32 %v1_10008518, i32* %r10.global-to-local, align 4
  %v3_10008518 = icmp eq i32 %v1_10008518, 0
  br i1 %v3_10008518, label %dec_label_pc_10006908, label %dec_label_pc_10008520

dec_label_pc_10008520:                            ; preds = %dec_label_pc_10008518
  %v1_10008520 = icmp ult i32 %v1_10006588, 142
  %v3_10008520 = icmp eq i32 %v1_10006588, 142
  store i1 %v1_10008520, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008520, i1* %cr7_eq.global-to-local, align 1
  %tmp406 = icmp ult i32 %v1_10006588, 143
  br i1 %tmp406, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000852c:                            ; preds = %dec_label_pc_100066c8
  %v1_1000852c = icmp slt i32 %v1_10006584, 55
  %v3_1000852c = icmp eq i32 %v1_10006584, 55
  store i1 %v1_1000852c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000852c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000852c, label %dec_label_pc_10006574, label %dec_label_pc_10008534

dec_label_pc_10008534:                            ; preds = %dec_label_pc_1000852c
  %v1_10008534 = icmp slt i32 %v1_10006584, 56
  %v3_10008534 = icmp eq i32 %v1_10006584, 56
  store i1 %v1_10008534, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008534, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008534, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008540:                            ; preds = %dec_label_pc_100066c0
  %v1_10008540 = icmp slt i32 %v1_10006584, 30
  %v3_10008540 = icmp eq i32 %v1_10006584, 30
  store i1 %v1_10008540, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008540, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008540, label %dec_label_pc_10006574, label %dec_label_pc_10008548

dec_label_pc_10008548:                            ; preds = %dec_label_pc_10008540
  %v1_10008548 = icmp slt i32 %v1_10006584, 120
  %v3_10008548 = icmp eq i32 %v1_10006584, 120
  store i1 %v1_10008548, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008548, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008548, label %dec_label_pc_10006574, label %dec_label_pc_10008550

dec_label_pc_10008550:                            ; preds = %dec_label_pc_10008548
  %v1_10008550 = icmp ult i32 %v1_10006584, 59
  %v3_10008550 = icmp eq i32 %v1_10006584, 59
  store i1 %v1_10008550, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008550, i1* %cr7_eq.global-to-local, align 1
  %tmp407 = icmp ult i32 %v1_10006584, 60
  br i1 %tmp407, label %dec_label_pc_10008560.thread, label %dec_label_pc_10008558

dec_label_pc_10008560.thread:                     ; preds = %dec_label_pc_10008550
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_10008558:                            ; preds = %dec_label_pc_10008550
  %v1_10008558 = icmp eq i32 %v1_10006584, 60
  %v3_10008558 = icmp eq i32 %v1_10006584, 61
  store i1 %v1_10008558, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008558, i1* %cr7_eq.global-to-local, align 1
  %tmp408 = icmp ult i32 %v1_10006584, 62
  br i1 %tmp408, label %dec_label_pc_10006574, label %dec_label_pc_10008560

dec_label_pc_10008560:                            ; preds = %dec_label_pc_10008558
  %v1_10008560 = icmp slt i32 %v1_10006584, 154
  %v3_10008560 = icmp eq i32 %v1_10006584, 154
  store i1 %v1_10008560, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008560, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008560, label %dec_label_pc_10008568, label %dec_label_pc_10006908

dec_label_pc_10008568:                            ; preds = %dec_label_pc_10008560
  %v1_10008568 = icmp ult i32 %v1_10006588, 191
  %v3_10008568 = icmp eq i32 %v1_10006588, 191
  store i1 %v1_10008568, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008568, i1* %cr7_eq.global-to-local, align 1
  %tmp409 = icmp ult i32 %v1_10006588, 192
  br i1 %tmp409, label %dec_label_pc_10006908, label %dec_label_pc_10008570

dec_label_pc_10008570:                            ; preds = %dec_label_pc_10008568
  %v1_10008570 = icmp slt i32 %v1_10006588, 255
  %v3_10008570 = icmp eq i32 %v1_10006588, 255
  store i1 %v1_10008570, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008570, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008570, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_1000857c:                            ; preds = %dec_label_pc_100066b8
  %v1_1000857c = icmp slt i32 %v1_10006584, 34
  %v3_1000857c = icmp eq i32 %v1_10006584, 34
  store i1 %v1_1000857c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000857c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000857c, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008588:                            ; preds = %dec_label_pc_100066b0
  %v1_10008588 = icmp slt i32 %v1_10006584, 59
  %v3_10008588 = icmp eq i32 %v1_10006584, 59
  store i1 %v1_10008588, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008588, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008588, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008594:                            ; preds = %dec_label_pc_100066a8
  %v1_10008594 = icmp slt i32 %v1_10006584, 68
  %v3_10008594 = icmp eq i32 %v1_10006584, 68
  store i1 %v1_10008594, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008594, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008594, label %dec_label_pc_10006574, label %dec_label_pc_1000859c

dec_label_pc_1000859c:                            ; preds = %dec_label_pc_10008594
  %v1_1000859c = icmp slt i32 %v1_10006584, 85
  %v3_1000859c = icmp eq i32 %v1_10006584, 85
  store i1 %v1_1000859c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000859c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000859c, label %dec_label_pc_10006574, label %dec_label_pc_100085a4

dec_label_pc_100085a4:                            ; preds = %dec_label_pc_1000859c
  %v1_100085a4 = icmp slt i32 %v1_10006584, 102
  %v3_100085a4 = icmp eq i32 %v1_10006584, 102
  store i1 %v1_100085a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085a4, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100085b0:                            ; preds = %dec_label_pc_100066a0
  %v1_100085b0 = icmp slt i32 %v1_10006584, 44
  %v3_100085b0 = icmp eq i32 %v1_10006584, 44
  store i1 %v1_100085b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085b0, label %dec_label_pc_10006574, label %dec_label_pc_100085b8

dec_label_pc_100085b8:                            ; preds = %dec_label_pc_100085b0
  %v1_100085b8 = icmp slt i32 %v1_10006584, 114
  %v3_100085b8 = icmp eq i32 %v1_10006584, 114
  store i1 %v1_100085b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085b8, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100085c4:                            ; preds = %dec_label_pc_10006698
  %v1_100085c4 = icmp slt i32 %v1_10006584, 9
  %v3_100085c4 = icmp eq i32 %v1_10006584, 9
  store i1 %v1_100085c4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085c4, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100085d0:                            ; preds = %dec_label_pc_10006690
  %v1_100085d0 = icmp slt i32 %v1_10006584, 158
  %v3_100085d0 = icmp eq i32 %v1_10006584, 158
  store i1 %v1_100085d0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085d0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085d0, label %dec_label_pc_10006574, label %dec_label_pc_100085d8

dec_label_pc_100085d8:                            ; preds = %dec_label_pc_100085d0
  %v1_100085d8 = icmp ult i32 %v1_10006584, 44
  %v3_100085d8 = icmp eq i32 %v1_10006584, 44
  store i1 %v1_100085d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085d8, i1* %cr7_eq.global-to-local, align 1
  %tmp410 = icmp ult i32 %v1_10006584, 45
  br i1 %tmp410, label %dec_label_pc_10008650.thread, label %dec_label_pc_100085e0

dec_label_pc_10008650.thread:                     ; preds = %dec_label_pc_100085d8
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_100085e0:                            ; preds = %dec_label_pc_100085d8
  %v1_100085e0 = icmp ult i32 %v1_10006584, 49
  %v3_100085e0 = icmp eq i32 %v1_10006584, 49
  store i1 %v1_100085e0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085e0, i1* %cr7_eq.global-to-local, align 1
  %tmp411 = icmp ult i32 %v1_10006584, 50
  br i1 %tmp411, label %dec_label_pc_10006574, label %dec_label_pc_100085e8

dec_label_pc_100085e8:                            ; preds = %dec_label_pc_100085e0
  %v1_100085e8 = icmp ult i32 %v1_10006584, 216
  %v3_100085e8 = icmp eq i32 %v1_10006584, 216
  store i1 %v1_100085e8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085e8, i1* %cr7_eq.global-to-local, align 1
  %tmp412 = icmp ult i32 %v1_10006584, 217
  br i1 %tmp412, label %dec_label_pc_10008650, label %dec_label_pc_100085f0

dec_label_pc_100085f0:                            ; preds = %dec_label_pc_100085e8
  %v1_100085f0 = icmp ult i32 %v1_10006584, 232
  %v3_100085f0 = icmp eq i32 %v1_10006584, 232
  store i1 %v1_100085f0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085f0, i1* %cr7_eq.global-to-local, align 1
  %tmp413 = icmp ult i32 %v1_10006584, 233
  br i1 %tmp413, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100085fc:                            ; preds = %dec_label_pc_10006688
  %v1_100085fc = icmp slt i32 %v1_10006584, 96
  %v3_100085fc = icmp eq i32 %v1_10006584, 96
  store i1 %v1_100085fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100085fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100085fc, label %dec_label_pc_10006574, label %dec_label_pc_10008604

dec_label_pc_10008604:                            ; preds = %dec_label_pc_100085fc
  %v1_10008604 = icmp slt i32 %v1_10006584, 149
  %v3_10008604 = icmp eq i32 %v1_10006584, 149
  store i1 %v1_10008604, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008604, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008604, label %dec_label_pc_10006574, label %dec_label_pc_1000860c

dec_label_pc_1000860c:                            ; preds = %dec_label_pc_10008604
  %v1_1000860c = icmp slt i32 %v1_10006584, 155
  %v3_1000860c = icmp eq i32 %v1_10006584, 155
  store i1 %v1_1000860c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000860c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000860c, label %dec_label_pc_10006574, label %dec_label_pc_10008614

dec_label_pc_10008614:                            ; preds = %dec_label_pc_1000860c
  %v1_10008614 = icmp slt i32 %v1_10006584, 178
  %v3_10008614 = icmp eq i32 %v1_10006584, 178
  store i1 %v1_10008614, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008614, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008614, label %dec_label_pc_10006574, label %dec_label_pc_1000861c

dec_label_pc_1000861c:                            ; preds = %dec_label_pc_10008614
  %v1_1000861c = icmp ult i32 %v1_10006584, 4
  %v3_1000861c = icmp eq i32 %v1_10006584, 4
  store i1 %v1_1000861c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000861c, i1* %cr7_eq.global-to-local, align 1
  %tmp414 = icmp ult i32 %v1_10006584, 5
  br i1 %tmp414, label %dec_label_pc_1000862c.thread, label %dec_label_pc_10008624

dec_label_pc_1000862c.thread:                     ; preds = %dec_label_pc_1000861c
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000863c.thread

dec_label_pc_10008624:                            ; preds = %dec_label_pc_1000861c
  %v1_10008624 = icmp ult i32 %v1_10006584, 9
  %v3_10008624 = icmp eq i32 %v1_10006584, 9
  store i1 %v1_10008624, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008624, i1* %cr7_eq.global-to-local, align 1
  %tmp415 = icmp ult i32 %v1_10006584, 10
  br i1 %tmp415, label %dec_label_pc_10006574, label %dec_label_pc_1000862c

dec_label_pc_1000862c:                            ; preds = %dec_label_pc_10008624
  %v1_1000862c = icmp ult i32 %v1_10006584, 73
  %v3_1000862c = icmp eq i32 %v1_10006584, 73
  store i1 %v1_1000862c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000862c, i1* %cr7_eq.global-to-local, align 1
  %tmp416 = icmp ult i32 %v1_10006584, 74
  br i1 %tmp416, label %dec_label_pc_1000863c.thread, label %dec_label_pc_10008634

dec_label_pc_10008634:                            ; preds = %dec_label_pc_1000862c
  %v1_10008634 = icmp ult i32 %v1_10006584, 88
  %v3_10008634 = icmp eq i32 %v1_10006584, 88
  store i1 %v1_10008634, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008634, i1* %cr7_eq.global-to-local, align 1
  %tmp417 = icmp ult i32 %v1_10006584, 89
  br i1 %tmp417, label %dec_label_pc_10006574, label %dec_label_pc_1000863c

dec_label_pc_1000863c.thread:                     ; preds = %dec_label_pc_1000862c, %dec_label_pc_1000862c.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_1000863c:                            ; preds = %dec_label_pc_10008634
  %v1_1000863c = icmp ult i32 %v1_10006584, 212
  %v3_1000863c = icmp eq i32 %v1_10006584, 212
  store i1 %v1_1000863c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000863c, i1* %cr7_eq.global-to-local, align 1
  %tmp418 = icmp ult i32 %v1_10006584, 213
  br i1 %tmp418, label %dec_label_pc_10006908, label %dec_label_pc_10008644

dec_label_pc_10008644:                            ; preds = %dec_label_pc_1000863c
  %v1_10008644 = icmp ult i32 %v1_10006584, 221
  %v3_10008644 = icmp eq i32 %v1_10006584, 221
  store i1 %v1_10008644, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008644, i1* %cr7_eq.global-to-local, align 1
  %tmp419 = icmp ult i32 %v1_10006584, 222
  br i1 %tmp419, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008650:                            ; preds = %dec_label_pc_100085e8
  %v1_10008650 = icmp slt i32 %v1_10006584, 132
  %v3_10008650 = icmp eq i32 %v1_10006584, 132
  store i1 %v1_10008650, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008650, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008650, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000865c:                            ; preds = %dec_label_pc_10006680
  %v1_1000865c = icmp slt i32 %v1_10006584, 32
  %v3_1000865c = icmp eq i32 %v1_10006584, 32
  store i1 %v1_1000865c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000865c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000865c, label %dec_label_pc_10006574, label %dec_label_pc_10008664

dec_label_pc_10008664:                            ; preds = %dec_label_pc_1000865c
  %v1_10008664 = icmp ult i32 %v1_10006584, 44
  %v3_10008664 = icmp eq i32 %v1_10006584, 44
  store i1 %v1_10008664, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008664, i1* %cr7_eq.global-to-local, align 1
  %tmp420 = icmp ult i32 %v1_10006584, 45
  br i1 %tmp420, label %dec_label_pc_10008674.thread, label %dec_label_pc_1000866c

dec_label_pc_10008674.thread:                     ; preds = %dec_label_pc_10008664
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_1000866c:                            ; preds = %dec_label_pc_10008664
  %v1_1000866c = icmp eq i32 %v1_10006584, 45
  %v3_1000866c = icmp eq i32 %v1_10006584, 46
  store i1 %v1_1000866c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000866c, i1* %cr7_eq.global-to-local, align 1
  %tmp421 = icmp ult i32 %v1_10006584, 47
  br i1 %tmp421, label %dec_label_pc_10006574, label %dec_label_pc_10008674

dec_label_pc_10008674:                            ; preds = %dec_label_pc_1000866c
  %v1_10008674 = icmp slt i32 %v1_10006584, 243
  %v3_10008674 = icmp eq i32 %v1_10006584, 243
  store i1 %v1_10008674, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008674, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008674, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008680:                            ; preds = %dec_label_pc_10006678
  %v1_10008680 = icmp slt i32 %v1_10006584, 124
  %v3_10008680 = icmp eq i32 %v1_10006584, 124
  store i1 %v1_10008680, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008680, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008680, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_1000868c:                            ; preds = %dec_label_pc_10006670
  %v1_1000868c = icmp slt i32 %v1_10006584, 202
  %v3_1000868c = icmp eq i32 %v1_10006584, 202
  store i1 %v1_1000868c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000868c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000868c, label %dec_label_pc_10006574, label %dec_label_pc_10008694

dec_label_pc_10008694:                            ; preds = %dec_label_pc_1000868c
  %v1_10008694 = icmp slt i32 %v1_10006584, 217
  %v3_10008694 = icmp eq i32 %v1_10006584, 217
  store i1 %v1_10008694, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008694, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008694, label %dec_label_pc_10006574, label %dec_label_pc_1000869c

dec_label_pc_1000869c:                            ; preds = %dec_label_pc_10008694
  %v1_1000869c = icmp ult i32 %v1_10006584, 149
  %v3_1000869c = icmp eq i32 %v1_10006584, 149
  store i1 %v1_1000869c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000869c, i1* %cr7_eq.global-to-local, align 1
  %tmp422 = icmp ult i32 %v1_10006584, 150
  br i1 %tmp422, label %dec_label_pc_10006908, label %dec_label_pc_100086a4

dec_label_pc_100086a4:                            ; preds = %dec_label_pc_1000869c
  %v1_100086a4 = icmp ult i32 %v1_10006584, 153
  %v3_100086a4 = icmp eq i32 %v1_10006584, 153
  store i1 %v1_100086a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086a4, i1* %cr7_eq.global-to-local, align 1
  %tmp423 = icmp ult i32 %v1_10006584, 154
  br i1 %tmp423, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100086b0:                            ; preds = %dec_label_pc_10006668
  %v1_100086b0 = icmp slt i32 %v1_10006584, 82
  %v3_100086b0 = icmp eq i32 %v1_10006584, 82
  store i1 %v1_100086b0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086b0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100086b0, label %dec_label_pc_10006574, label %dec_label_pc_100086b8

dec_label_pc_100086b8:                            ; preds = %dec_label_pc_100086b0
  %v1_100086b8 = icmp slt i32 %v1_10006584, 229
  %v3_100086b8 = icmp eq i32 %v1_10006584, 229
  store i1 %v1_100086b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100086b8, label %dec_label_pc_10006574, label %dec_label_pc_100086c0

dec_label_pc_100086c0:                            ; preds = %dec_label_pc_100086b8
  %v1_100086c0 = icmp ult i32 %v1_10006584, 150
  %v3_100086c0 = icmp eq i32 %v1_10006584, 150
  store i1 %v1_100086c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086c0, i1* %cr7_eq.global-to-local, align 1
  %tmp424 = icmp ult i32 %v1_10006584, 151
  br i1 %tmp424, label %dec_label_pc_10006908, label %dec_label_pc_100086c8

dec_label_pc_100086c8:                            ; preds = %dec_label_pc_100086c0
  %v1_100086c8 = icmp ult i32 %v1_10006584, 154
  %v3_100086c8 = icmp eq i32 %v1_10006584, 154
  store i1 %v1_100086c8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086c8, i1* %cr7_eq.global-to-local, align 1
  %tmp425 = icmp ult i32 %v1_10006584, 155
  br i1 %tmp425, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_100086d4:                            ; preds = %dec_label_pc_10006650
  %v1_100086d4 = icmp slt i32 %v1_10006584, 159
  %v3_100086d4 = icmp eq i32 %v1_10006584, 159
  store i1 %v1_100086d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100086d4, label %dec_label_pc_10006574, label %dec_label_pc_100086dc

dec_label_pc_100086dc:                            ; preds = %dec_label_pc_100086d4
  %v1_100086dc = icmp ult i32 %v1_10006584, 34
  %v3_100086dc = icmp eq i32 %v1_10006584, 34
  store i1 %v1_100086dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086dc, i1* %cr7_eq.global-to-local, align 1
  %tmp426 = icmp ult i32 %v1_10006584, 35
  br i1 %tmp426, label %dec_label_pc_100086ec.thread, label %dec_label_pc_100086e4

dec_label_pc_100086ec.thread:                     ; preds = %dec_label_pc_100086dc
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100086fc.thread

dec_label_pc_100086e4:                            ; preds = %dec_label_pc_100086dc
  %v1_100086e4 = icmp ult i32 %v1_10006584, 42
  %v3_100086e4 = icmp eq i32 %v1_10006584, 42
  store i1 %v1_100086e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086e4, i1* %cr7_eq.global-to-local, align 1
  %tmp427 = icmp ult i32 %v1_10006584, 43
  br i1 %tmp427, label %dec_label_pc_10006574, label %dec_label_pc_100086ec

dec_label_pc_100086ec:                            ; preds = %dec_label_pc_100086e4
  %v1_100086ec = icmp ult i32 %v1_10006584, 102
  %v3_100086ec = icmp eq i32 %v1_10006584, 102
  store i1 %v1_100086ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086ec, i1* %cr7_eq.global-to-local, align 1
  %tmp428 = icmp ult i32 %v1_10006584, 103
  br i1 %tmp428, label %dec_label_pc_100086fc.thread, label %dec_label_pc_100086f4

dec_label_pc_100086f4:                            ; preds = %dec_label_pc_100086ec
  %v1_100086f4 = icmp eq i32 %v1_10006584, 103
  %v3_100086f4 = icmp eq i32 %v1_10006584, 104
  store i1 %v1_100086f4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086f4, i1* %cr7_eq.global-to-local, align 1
  %tmp429 = icmp ult i32 %v1_10006584, 105
  br i1 %tmp429, label %dec_label_pc_10006574, label %dec_label_pc_100086fc

dec_label_pc_100086fc.thread:                     ; preds = %dec_label_pc_100086ec, %dec_label_pc_100086ec.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000870c.thread

dec_label_pc_100086fc:                            ; preds = %dec_label_pc_100086f4
  %v1_100086fc = icmp ult i32 %v1_10006584, 167
  %v3_100086fc = icmp eq i32 %v1_10006584, 167
  store i1 %v1_100086fc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100086fc, i1* %cr7_eq.global-to-local, align 1
  %tmp430 = icmp ult i32 %v1_10006584, 168
  br i1 %tmp430, label %dec_label_pc_1000870c.thread, label %dec_label_pc_10008704

dec_label_pc_10008704:                            ; preds = %dec_label_pc_100086fc
  %v1_10008704 = icmp eq i32 %v1_10006584, 168
  %v3_10008704 = icmp eq i32 %v1_10006584, 169
  store i1 %v1_10008704, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008704, i1* %cr7_eq.global-to-local, align 1
  %tmp431 = icmp ult i32 %v1_10006584, 170
  br i1 %tmp431, label %dec_label_pc_10006574, label %dec_label_pc_1000870c

dec_label_pc_1000870c.thread:                     ; preds = %dec_label_pc_100086fc, %dec_label_pc_100086fc.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_1000871c.thread

dec_label_pc_1000870c:                            ; preds = %dec_label_pc_10008704
  %v1_1000870c = icmp ult i32 %v1_10006584, 197
  %v3_1000870c = icmp eq i32 %v1_10006584, 197
  store i1 %v1_1000870c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000870c, i1* %cr7_eq.global-to-local, align 1
  %tmp432 = icmp ult i32 %v1_10006584, 198
  br i1 %tmp432, label %dec_label_pc_1000871c.thread, label %dec_label_pc_10008714

dec_label_pc_10008714:                            ; preds = %dec_label_pc_1000870c
  %v1_10008714 = icmp eq i32 %v1_10006584, 198
  %v3_10008714 = icmp eq i32 %v1_10006584, 199
  store i1 %v1_10008714, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008714, i1* %cr7_eq.global-to-local, align 1
  %tmp433 = icmp ult i32 %v1_10006584, 200
  br i1 %tmp433, label %dec_label_pc_10006574, label %dec_label_pc_1000871c

dec_label_pc_1000871c.thread:                     ; preds = %dec_label_pc_1000870c, %dec_label_pc_1000870c.thread
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006908

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_10008714
  %v1_1000871c = icmp ult i32 %v1_10006584, 237
  %v3_1000871c = icmp eq i32 %v1_10006584, 237
  store i1 %v1_1000871c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000871c, i1* %cr7_eq.global-to-local, align 1
  %tmp434 = icmp ult i32 %v1_10006584, 238
  br i1 %tmp434, label %dec_label_pc_10006908, label %dec_label_pc_10008724

dec_label_pc_10008724:                            ; preds = %dec_label_pc_1000871c
  %v1_10008724 = icmp slt i32 %v1_10006584, 255
  %v3_10008724 = icmp eq i32 %v1_10006584, 255
  store i1 %v1_10008724, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008724, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008724, label %dec_label_pc_10006908, label %dec_label_pc_10006574

dec_label_pc_10008730:                            ; preds = %dec_label_pc_10006afc
  %v1_10008730 = icmp ult i32 %v1_10006588, 207
  %v3_10008730 = icmp eq i32 %v1_10006588, 207
  store i1 %v1_10008730, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008730, i1* %cr7_eq.global-to-local, align 1
  %tmp435 = icmp ult i32 %v1_10006588, 208
  br i1 %tmp435, label %dec_label_pc_10006908, label %dec_label_pc_10008738

dec_label_pc_10008738:                            ; preds = %dec_label_pc_10008730
  %v1_10008738 = icmp ult i32 %v1_10006588, 222
  %v3_10008738 = icmp eq i32 %v1_10006588, 222
  store i1 %v1_10008738, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008738, i1* %cr7_eq.global-to-local, align 1
  %tmp436 = icmp ult i32 %v1_10006588, 223
  br i1 %tmp436, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008744:                            ; preds = %dec_label_pc_10006af4
  %v1_10008744 = and i32 %v1_10006588, 128
  store i32 %v1_10008744, i32* %r10.global-to-local, align 4
  %v3_10008744 = icmp eq i32 %v1_10008744, 0
  br i1 %v3_10008744, label %dec_label_pc_10006908, label %dec_label_pc_1000874c

dec_label_pc_1000874c:                            ; preds = %dec_label_pc_10008744
  %v1_1000874c = icmp ult i32 %v1_10006588, 142
  %v3_1000874c = icmp eq i32 %v1_10006588, 142
  store i1 %v1_1000874c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000874c, i1* %cr7_eq.global-to-local, align 1
  %tmp437 = icmp ult i32 %v1_10006588, 143
  br i1 %tmp437, label %dec_label_pc_10006574, label %dec_label_pc_10006908

dec_label_pc_10008758:                            ; preds = %dec_label_pc_10006aec
  %v1_10008758 = and i32 %v1_10006588, 128
  store i32 %v1_10008758, i32* %r10.global-to-local, align 4
  %v3_10008758 = icmp eq i32 %v1_10008758, 0
  br i1 %v3_10008758, label %dec_label_pc_10006908, label %dec_label_pc_10008760

dec_label_pc_10008760:                            ; preds = %dec_label_pc_10008758
  %v1_10008760 = icmp slt i32 %v1_10006588, 255
  %v3_10008760 = icmp eq i32 %v1_10006588, 255
  store i1 %v1_10008760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008760, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008760, label %dec_label_pc_10006908, label %dec_label_pc_10006574

; uselistorder directives
  uselistorder i1 %v3_100079ec, { 1, 0 }
  uselistorder i32 %v3_100078a8, { 1, 0 }
  uselistorder i32 %v1_10007850, { 1, 2, 0 }
  uselistorder i32 %v0_10007850, { 1, 0 }
  uselistorder i32 %v2_1000782c, { 1, 0, 2 }
  uselistorder i32 %v4_1000780c, { 1, 0 }
  uselistorder i32 %v0_1000780c, { 0, 2, 1 }
  uselistorder i32 %v3_100077fc, { 1, 0 }
  uselistorder i32 %v0_100077fc, { 0, 2, 1 }
  uselistorder i32 %v2_100077d4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100077bc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v1_100077b0, { 3, 2, 4, 1, 0 }
  uselistorder i32 %v1_100077ac, { 1, 0 }
  uselistorder i32 %v3_10006ff4, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_10006ff4, { 1, 0 }
  uselistorder i32 %v1_100076ac, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v0_100076a8, { 0, 3, 2, 1 }
  uselistorder i32 %v0_100070ec, { 1, 0, 2 }
  uselistorder i32 %v0_100078a8, { 2, 1, 3, 0 }
  uselistorder i32 %v0_100070e4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_100070e0, { 1, 0 }
  uselistorder i32 %v3_100070dc, { 2, 1, 3, 0 }
  uselistorder i32 %v0_100070dc, { 0, 2, 1 }
  uselistorder i32 %v0_100070bc, { 1, 0 }
  uselistorder i32 %v0_100070a8, { 1, 0 }
  uselistorder i32 %v1_10007090, { 2, 1, 0, 3 }
  uselistorder i1 %v3_10007088, { 1, 0 }
  uselistorder i32 %v1_10007070, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v2_1000706c, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i8* %v1_10007060, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100077ac, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10007058, { 2, 1, 3, 0 }
  uselistorder i32 %v0_100079c8, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %v0_100077b0, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v3_1000703c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000703c, { 0, 2, 1 }
  uselistorder i32 %v1_10007004, { 1, 0 }
  uselistorder i32 %v0_10006ff482, { 1, 0 }
  uselistorder i32 %v1_10006fd8, { 2, 1, 0 }
  uselistorder i32 %v1_10006fd4, { 1, 0 }
  uselistorder i32 %v1_10006fd0, { 1, 0 }
  uselistorder i32 %v4_10006fac, { 4, 3, 6, 0, 1, 2, 5, 7 }
  uselistorder i32 %v3_10006f98, { 1, 0, 2 }
  uselistorder i32 %v1_10006f80, { 1, 0, 2 }
  uselistorder i32 %v3_10006f7c, { 1, 0, 2 }
  uselistorder i32 %v0_1000788c, { 0, 2, 1 }
  uselistorder i32 %v3_10006f70, { 1, 0, 2 }
  uselistorder i32 %v4_10006ea4, { 2, 1, 0, 3 }
  uselistorder i32 %v4_10006e98, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10006e8c, { 0, 2, 4, 3, 1 }
  uselistorder i32 %v1_10006e90, { 0, 2, 1 }
  uselistorder i32 %v2_10006e60, { 3, 2, 1, 6, 5, 4, 0, 7 }
  uselistorder i32 %v3_10006e64, { 1, 2, 0, 4, 3, 5 }
  uselistorder i32 %v1_10006e14, { 2, 1, 0 }
  uselistorder i32 %v1_10006e08, { 1, 0 }
  uselistorder i32 %v3_10006df0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006ddc, { 1, 0 }
  uselistorder i32 %v1_10006dc8, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006dbc, { 1, 0 }
  uselistorder i32 %v1_10006db0, { 1, 0 }
  uselistorder i32 %v1_10006d30, { 1, 0 }
  uselistorder i32 %v1_10006d00, { 1, 2, 0 }
  uselistorder i32 %v1_10006cfc, { 1, 0 }
  uselistorder i32 %v3_10006ce4, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10006c4c, { 2, 0, 1 }
  uselistorder i1 %v1_10006c4c, { 1, 0, 2 }
  uselistorder i32 %v3_10006c48, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v2_10006c44, { 0, 3, 4, 2, 1 }
  uselistorder i32 %v1_10006c1c, { 1, 0, 4, 3, 2, 5 }
  uselistorder i32 %v1_10006bfc, { 1, 0 }
  uselistorder i32 %v3_10006d1c, { 9, 0, 8, 7, 6, 11, 2, 1, 5, 4, 3, 10, 12 }
  uselistorder i32 %v2_10006bd0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10006bd4, { 2, 1, 0 }
  uselistorder i32 %v1_10006ba4, { 1, 0 }
  uselistorder i32 %v1_10006b84, { 1, 0 }
  uselistorder i32 %v1_10006b80, { 1, 0 }
  uselistorder i32 %v1_10006ac4, { 1, 0 }
  uselistorder i32 %v3_10006abc, { 1, 0, 2 }
  uselistorder i32 %v1_10006ab8, { 2, 1, 0 }
  uselistorder i32 %v1_10006ab4, { 1, 0 }
  uselistorder i32 %v0_10006abc, { 0, 3, 2, 1 }
  uselistorder i32 %v3_10006a98, { 1, 0, 2 }
  uselistorder i32 %v0_10006a78, { 3, 1, 2, 4, 5, 0, 6, 7, 8 }
  uselistorder i32 %v3_10006a0c, { 1, 0, 2 }
  uselistorder i32 %v2_100069f4, { 1, 0, 2 }
  uselistorder i32 %v0_100069f4, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v6_100069e8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_100069a4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_10006590, { 0, 2, 1, 4, 3, 6, 5, 8, 7, 10, 9, 12, 11, 14, 13, 16, 15, 18, 17, 20, 19, 22, 21, 24, 23, 26, 25, 28, 27, 30, 29, 32, 31, 34, 33, 36, 35, 38, 37, 40, 39, 42, 41, 44, 43, 46, 45, 48, 47, 50, 49, 52, 51, 54, 53, 56, 55, 58, 57, 60, 59, 62, 61, 64, 63, 66, 65, 68, 67, 70, 69, 72, 71, 74, 73, 76, 75, 78, 77, 80, 79, 82, 81, 84, 83, 86, 85, 88, 87, 90, 89, 92, 91, 94, 93, 96, 95, 98, 97, 100, 99, 102, 101, 104, 103, 106, 105, 108, 107, 110, 109, 112, 111, 114, 113, 116, 115, 118, 117, 120, 119, 122, 121, 124, 123, 126, 125, 128, 127, 130, 129, 132, 131, 134, 133, 136, 135, 138, 137, 140, 139, 142, 141, 144, 143, 146, 145, 148, 147, 150, 149, 152, 151, 154, 153, 156, 155, 158, 157, 160, 159, 162, 161, 164, 163, 166, 165, 168, 167, 170, 169, 172, 171, 174, 173, 176, 175, 178, 177, 180, 179, 182, 181, 184, 183, 186, 185, 188, 187, 190, 189, 192, 191, 194, 193, 196, 195, 198, 197, 200, 199, 202, 201, 204, 203, 206, 205, 208, 207, 210, 209, 212, 211, 214, 213, 216, 215, 218, 217, 220, 219, 221, 222 }
  uselistorder i32 %v1_10006588, { 243, 242, 244, 333, 332, 331, 362, 247, 246, 245, 250, 249, 248, 298, 297, 238, 237, 236, 253, 252, 251, 254, 257, 256, 255, 263, 262, 261, 260, 259, 258, 445, 444, 336, 335, 334, 241, 240, 239, 462, 461, 460, 266, 265, 264, 269, 268, 267, 376, 375, 374, 272, 271, 270, 275, 274, 273, 277, 276, 304, 303, 302, 481, 480, 479, 457, 456, 455, 451, 450, 449, 430, 429, 428, 507, 506, 505, 443, 442, 441, 345, 344, 343, 504, 478, 477, 476, 492, 498, 497, 496, 342, 341, 340, 491, 490, 489, 373, 372, 368, 367, 366, 487, 486, 485, 330, 329, 328, 484, 483, 482, 407, 406, 405, 396, 395, 469, 468, 467, 388, 387, 386, 466, 465, 464, 361, 360, 401, 400, 399, 463, 495, 494, 493, 459, 458, 454, 453, 452, 310, 309, 308, 448, 447, 446, 440, 439, 438, 437, 436, 230, 413, 412, 411, 433, 432, 431, 282, 281, 280, 319, 318, 317, 422, 421, 420, 425, 424, 423, 293, 292, 291, 503, 502, 501, 327, 475, 474, 473, 419, 418, 417, 394, 393, 392, 313, 312, 311, 290, 289, 288, 365, 364, 363, 284, 283, 231, 296, 295, 294, 321, 320, 287, 286, 285, 378, 377, 404, 403, 402, 500, 499, 234, 316, 315, 314, 279, 278, 232, 301, 300, 299, 307, 306, 305, 383, 323, 322, 233, 326, 325, 324, 398, 397, 235, 339, 338, 337, 385, 384, 472, 471, 470, 391, 390, 389, 416, 415, 414, 351, 350, 349, 410, 409, 408, 427, 426, 488, 353, 352, 382, 381, 380, 435, 434, 348, 347, 346, 359, 358, 357, 379, 371, 370, 369, 356, 355, 354, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 218, 228, 229, 215, 227, 226, 225, 224, 223, 222, 221, 220, 217, 508 }
  uselistorder i32 %v1_10006584, {}
  uselistorder i32 %v1_10006578, { 1, 2, 0 }
  uselistorder i32 %v0_10006574, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_10006560, { 1, 0 }
  uselistorder i32 %v3_10006538, { 1, 0, 2 }
  uselistorder i32 %v1_10006a5c, { 1, 0 }
  uselistorder i32 %v1_10006a54, { 1, 0 }
  uselistorder i32 %v1_10006a4c, { 1, 0 }
  uselistorder i32 %v2_10006d20, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10006a6c, { 2, 1, 0 }
  uselistorder i32 %v1_10006a44, { 1, 0 }
  uselistorder i32 %v4_10006a34, { 1, 0, 2 }
  uselistorder i32 %v0_100062d4, { 1, 0 }
  uselistorder i32 %v1_10006294, { 3, 1, 2, 0 }
  uselistorder i32 %v5_10006284, { 1, 0, 2 }
  uselistorder i32 %v3_10006230, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_10006218, { 1, 0 }
  uselistorder i32 %v0_10006214, { 1, 0 }
  uselistorder i32 %v1_10006210, { 1, 0 }
  uselistorder i32 %v0_10006200, { 1, 2, 0 }
  uselistorder i32 %v2_100061c0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000611c, { 2, 4, 3, 5, 0, 1, 7, 6, 8 }
  uselistorder i32* %stack_var_-1916, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11 }
  uselistorder i16* %stack_var_-1926, { 1, 0 }
  uselistorder i32 %tmp204, { 1, 2, 0 }
  uselistorder i8 %tmp203, { 2, 1, 0 }
  uselistorder i16 %tmp202, { 2, 1, 0 }
  uselistorder i32 %tmp200, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r9.global-to-local, { 3, 4, 5, 6, 7, 0, 1, 2, 8, 11, 9, 10, 12, 13, 14, 16, 15, 17, 20, 21, 23, 22, 18, 19, 24, 25, 26, 27, 28, 34, 29, 30, 31, 32, 33, 35, 36, 66, 67, 37, 64, 65, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 61, 62, 63, 69, 70, 71 }
  uselistorder i32* %r5.global-to-local, { 0, 7, 8, 9, 1, 6, 4, 2, 3, 5, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %r30.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 11, 10, 12, 3, 4, 5, 13, 14, 15, 16, 17, 8, 9, 6, 7, 18, 19, 20, 21, 22, 23, 25, 26, 24, 27, 29, 28, 31, 30, 33, 34, 35, 36, 37, 32, 2, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 51, 53, 55, 54, 57, 56, 58, 59, 60, 61, 63, 62, 64, 65, 66, 67, 68, 69, 70, 72, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 0, 1 }
  uselistorder i32* %r29.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r28.global-to-local, { 4, 5, 6, 7, 8, 0, 11, 9, 10, 12, 13, 14, 15, 22, 1, 2, 3, 23, 16, 17, 18, 19, 20, 21, 25, 24, 27, 26, 28, 29, 30 }
  uselistorder i32* %r27.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r22.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r14.global-to-local, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 8, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r10.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 2, 3, 0, 17, 18, 19, 20, 1, 22, 23, 24, 21, 25, 35, 26, 27, 28, 29, 30, 31, 32, 33, 34 }
  uselistorder i32* %r0.global-to-local, { 10, 11, 12, 13, 0, 1, 2, 3, 4, 34, 5, 6, 7, 8, 9, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 30, 32, 31, 27, 28, 29, 33, 35, 36, 37, 38, 39, 40, 47, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 17, 18, 7, 8, 9, 15, 16, 10, 11, 12, 13, 14, 19, 20 }
  uselistorder i1* %cr7_lt.global-to-local, { 23, 24, 25, 26, 27, 28, 524, 29, 30, 523, 31, 32, 522, 33, 34, 35, 521, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 293, 49, 50, 51, 52, 53, 519, 54, 55, 56, 518, 57, 58, 59, 60, 61, 62, 63, 64, 520, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 278, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 268, 95, 96, 97, 98, 99, 100, 101, 259, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 247, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 219, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 207, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 195, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 517, 314, 315, 316, 317, 516, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 4, 5, 343, 344, 345, 346, 6, 7, 8, 9, 10, 21, 347, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 1, 348, 349, 350, 3, 351, 353, 352, 2, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 370, 371, 372, 373, 375, 376, 377, 146, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 525, 526 }
  uselistorder i1* %cr7_eq.global-to-local, { 23, 24, 25, 26, 27, 28, 526, 29, 30, 525, 31, 32, 524, 33, 34, 35, 523, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 299, 49, 50, 51, 52, 53, 521, 54, 55, 56, 520, 57, 58, 59, 60, 61, 62, 63, 64, 522, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 281, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 271, 95, 96, 97, 98, 99, 100, 101, 262, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 251, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 222, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 210, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 201, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 519, 314, 315, 316, 317, 518, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 4, 5, 343, 344, 345, 346, 6, 7, 8, 9, 10, 21, 347, 22, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 1, 348, 349, 350, 3, 351, 353, 352, 2, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 371, 372, 373, 374, 376, 377, 378, 152, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 527, 528 }
  uselistorder i32 217, { 1, 2, 0 }
  uselistorder i32 235, { 2, 3, 0, 1 }
  uselistorder i32 253, { 1, 0, 2, 3 }
  uselistorder i32 118, { 1, 2, 0 }
  uselistorder i32 53, { 1, 0 }
  uselistorder i32 187, { 0, 2, 3, 1 }
  uselistorder i32 119, { 1, 2, 0, 3, 4 }
  uselistorder i32 232, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 73, { 2, 3, 0, 1 }
  uselistorder i32 254, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 183, { 1, 2, 0 }
  uselistorder i32 60, { 0, 2, 3, 1, 4 }
  uselistorder i32 231, { 1, 2, 0 }
  uselistorder i32 94, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 182, { 1, 2, 0 }
  uselistorder i8 31, { 1, 2, 3, 4, 5, 0, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a1c4, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 -3, { 6, 7, 2, 3, 4, 5, 8, 9, 10, 11, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a14c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c6c0.107, { 2, 1, 3, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_1000a0e0, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @function_10009824, { 1, 0 }
  uselistorder i32 115, { 1, 2, 0 }
  uselistorder i32 113, { 1, 3, 0, 2 }
  uselistorder i32 112, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 165, { 1, 2, 3, 4, 0 }
  uselistorder i32 59, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10 }
  uselistorder i32 ()* @function_10005e28, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000a184, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @function_1000a1fc, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 16384, { 19, 28, 3, 20, 29, 2, 30, 0, 31, 1, 32, 23, 24, 22, 25, 26, 27, 21, 4, 33, 5, 34, 7, 35, 6, 9, 36, 8, 10, 37, 11, 38, 39, 12, 40, 41, 13, 42, 43, 44, 14, 16, 15, 18, 17 }
  uselistorder i32 (i32, i32, i32, i32)* @function_10004430, { 9, 1, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @function_100043cc, { 11, 1, 10, 9, 8, 7, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 241, { 2, 3, 0, 1 }
  uselistorder i32 111, { 4, 5, 2, 6, 7, 8, 9, 0, 1, 3 }
  uselistorder i32 252, { 2, 3, 5, 6, 4, 7, 8, 0, 1 }
  uselistorder i32 154, { 3, 4, 2, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 240, { 4, 5, 2, 3, 0, 1 }
  uselistorder i32 222, { 4, 5, 2, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 3 }
  uselistorder i32 211, { 2, 3, 0, 1 }
  uselistorder i32 116, { 2, 3, 0, 1 }
  uselistorder i32 58, { 3, 4, 2, 5, 6, 0, 1, 7, 8, 9, 10 }
  uselistorder i32 238, { 2, 3, 4, 0, 1 }
  uselistorder i32 200, { 2, 3, 4, 0, 1 }
  uselistorder i32 181, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 196, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32 92, { 2, 3, 4, 0, 1 }
  uselistorder i32 61, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 85, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 62, { 2, 3, 4, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 93, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 71, { 2, 3, 0, 1 }
  uselistorder i32 251, { 8, 9, 4, 5, 10, 11, 12, 13, 6, 2, 7, 3, 0, 1 }
  uselistorder i32 237, { 5, 6, 7, 8, 4, 9, 10, 0, 1, 2, 3 }
  uselistorder i32 42, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1, 10 }
  uselistorder i32 201, { 2, 3, 0, 1 }
  uselistorder i32 170, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 220, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 142, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder i32 121, { 2, 3, 4, 0, 1 }
  uselistorder i32 47, { 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 12, 13, 4, 14 }
  uselistorder i32 78, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 193, { 1, 2, 0, 3, 4 }
  uselistorder i32 219, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 89, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 212, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 35, { 2, 4, 5, 3, 0, 1, 6, 7 }
  uselistorder i32 98, { 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 206, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32 184, { 3, 4, 5, 6, 7, 0, 1, 2, 8, 9 }
  uselistorder i32 91, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 51, { 1, 2, 0, 3, 4 }
  uselistorder i32 46, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 176, { 1, 2, 0, 3, 4 }
  uselistorder i32 151, { 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder i32 149, { 1, 2, 3, 4, 5, 6, 0, 7, 8 }
  uselistorder i32 74, { 5, 6, 0, 1, 2, 3, 4, 7, 8 }
  uselistorder i32 70, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 63, { 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 5, 16, 17, 0, 1, 2, 3, 4, 18, 19 }
  uselistorder i32 108, { 2, 3, 1, 0, 4, 5 }
  uselistorder i32 216, { 4, 5, 3, 0, 1, 2, 6, 7, 8, 9 }
  uselistorder i32 66, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 9, 13 }
  uselistorder i32 185, { 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 15, 16 }
  uselistorder i32 95, { 3, 8, 9, 4, 10, 11, 5, 6, 7, 12, 13, 0, 1, 2, 14, 15 }
  uselistorder i32 82, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 174, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 107, { 6, 7, 0, 1, 2, 3, 4, 5, 8, 9 }
  uselistorder i32 178, { 1, 2, 0, 3, 4 }
  uselistorder i32 188, { 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder i32 205, { 4, 5, 6, 7, 0, 1, 2, 3, 8, 9 }
  uselistorder i32 199, { 10, 11, 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14 }
  uselistorder i32 160, { 2, 0, 1, 3, 4 }
  uselistorder i32 158, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0, 1, 2, 13, 14 }
  uselistorder i32 153, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 144, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 143, { 2, 3, 4, 5, 6, 7, 8, 0, 1, 9, 10 }
  uselistorder i32 139, { 5, 6, 3, 4, 0, 1, 2, 7, 8 }
  uselistorder i32 138, { 3, 4, 5, 6, 7, 0, 1, 2, 8, 9 }
  uselistorder i32 134, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 131, { 2, 3, 4, 5, 0, 1, 6, 7 }
  uselistorder i32 198, { 8, 9, 0, 1, 2, 3, 4, 5, 6, 7, 10, 11 }
  uselistorder i32 169, { 2, 0, 1, 3, 4 }
  uselistorder i32 172, { 5, 6, 4, 0, 1, 2, 3, 7, 8 }
  uselistorder i32 209, { 5, 6, 7, 8, 0, 1, 2, 3, 4, 9, 10 }
  uselistorder i32 117, { 1, 2, 0, 3, 4 }
  uselistorder i32 207, { 7, 8, 6, 9, 10, 11, 12, 0, 1, 2, 3, 4, 5, 13, 14 }
  uselistorder i32 204, { 1, 2, 0, 3, 4 }
  uselistorder i32 203, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 168, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32 167, { 3, 4, 5, 6, 7, 8, 0, 1, 2, 9, 10 }
  uselistorder i32 164, { 3, 4, 5, 6, 0, 1, 2, 7, 8 }
  uselistorder i32 155, { 3, 4, 5, 0, 1, 2, 6, 7 }
  uselistorder i32 157, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 152, { 4, 5, 0, 1, 2, 3, 6, 7 }
  uselistorder i32 150, { 5, 6, 4, 7, 8, 9, 10, 0, 1, 2, 3, 11, 12 }
  uselistorder i32 148, { 1, 0, 2, 3 }
  uselistorder i32 147, { 3, 4, 0, 1, 2, 5, 6 }
  uselistorder i32 192, { 12, 14, 15, 13, 11, 16, 17, 9, 10, 0, 1, 2, 3, 4, 5, 6, 7, 8, 18, 19 }
  uselistorder i32 (i32, i32, i32)* @function_10005f14, { 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i16* @global_var_1001c74e.123, { 2, 1, 0 }
  uselistorder i16 23, { 3, 1, 2, 0, 4 }
  uselistorder i8 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 1024, { 1, 2, 0 }
  uselistorder i32 65536, { 0, 66, 1, 2, 3, 4, 6, 5, 7, 10, 8, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65 }
  uselistorder i32 ()* @function_10005b48, { 73, 72, 71, 70, 69, 68, 10, 67, 66, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 13, 12, 11, 1, 0, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @function_1000a23c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 2048, { 5, 0, 1, 2, 4, 3, 6 }
  uselistorder i32 288, { 0, 1, 5, 6, 2, 7, 3, 4 }
  uselistorder i32 ()* @function_1000992c, { 9, 1, 0, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32)* @function_100090a0, { 1, 0, 3, 2 }
  uselistorder i32 ()* @function_100095a4, { 2, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_10007838, { 1, 0 }
  uselistorder label %dec_label_pc_1000769c, { 1, 0 }
  uselistorder label %dec_label_pc_100070ec, { 1, 0, 5, 2, 3, 4 }
  uselistorder label %dec_label_pc_100070c4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100070b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000709c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007060, { 1, 0 }
  uselistorder label %dec_label_pc_10007060.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10007000, { 1, 0 }
  uselistorder label %dec_label_pc_10006fdc, { 1, 0 }
  uselistorder label %dec_label_pc_10006fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10006f8c, { 1, 0 }
  uselistorder label %dec_label_pc_10006f7c, { 1, 0 }
  uselistorder label %dec_label_pc_10006eb0, { 1, 0 }
  uselistorder label %dec_label_pc_10006dc4, { 5, 6, 7, 3, 0, 4, 1, 2 }
  uselistorder label %dec_label_pc_10006da4, { 1, 0 }
  uselistorder label %dec_label_pc_10006d70, { 1, 0 }
  uselistorder label %dec_label_pc_10006c18, { 3, 4, 0, 5, 2, 6, 1 }
  uselistorder label %dec_label_pc_10006bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10006b98.dec_label_pc_10006b98_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006b7c.dec_label_pc_10006b7c_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10006b6c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10006ad0, { 1, 0 }
  uselistorder label %dec_label_pc_100069c4, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_100069b8, { 1, 0 }
  uselistorder label %dec_label_pc_10006908, { 0, 140, 1, 141, 2, 142, 3, 143, 226, 4, 144, 5, 145, 6, 7, 231, 8, 9, 146, 228, 10, 227, 11, 12, 13, 14, 15, 16, 147, 116, 232, 17, 18, 148, 117, 19, 149, 20, 150, 118, 233, 21, 151, 119, 234, 22, 152, 23, 153, 24, 154, 25, 155, 26, 156, 120, 235, 27, 157, 28, 158, 29, 159, 30, 160, 31, 161, 32, 162, 33, 163, 236, 237, 34, 164, 35, 165, 36, 166, 37, 167, 38, 168, 169, 39, 238, 40, 170, 41, 171, 42, 172, 43, 173, 44, 45, 174, 121, 46, 47, 48, 175, 49, 176, 50, 177, 122, 239, 51, 178, 52, 179, 53, 54, 55, 180, 56, 181, 57, 58, 182, 59, 183, 60, 184, 61, 185, 123, 62, 63, 186, 124, 64, 187, 125, 65, 188, 66, 189, 67, 190, 68, 191, 69, 192, 126, 70, 193, 127, 71, 194, 72, 195, 73, 196, 74, 197, 75, 198, 76, 199, 128, 77, 200, 129, 78, 201, 79, 202, 131, 80, 203, 130, 81, 82, 204, 132, 83, 205, 133, 84, 85, 86, 87, 88, 89, 90, 91, 206, 134, 92, 207, 135, 93, 208, 136, 94, 209, 95, 210, 96, 211, 229, 97, 212, 230, 98, 213, 137, 99, 214, 138, 100, 215, 139, 101, 216, 102, 217, 103, 218, 104, 219, 105, 220, 106, 107, 108, 221, 109, 110, 111, 222, 112, 223, 115, 240, 113, 224, 114, 225 }
  uselistorder label %dec_label_pc_10006574, { 0, 11, 12, 1, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 2, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 3, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 4, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 5, 150, 151, 152, 6, 153, 7, 154, 155, 156, 8, 9, 157, 158, 159, 160, 10, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder label %dec_label_pc_10006290, { 1, 2, 0 }
}

define i32 @function_1000876c(i32 %arg1, i32* %arg2) local_unnamed_addr {
dec_label_pc_1000876c:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000876c = icmp eq i32* %arg2, null
  %v1_10008774 = mul i32 %arg1, 8
  store i32 %v1_10008774, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001c788.171 to i32), i32* %r9.global-to-local, align 4
  br i1 %v3_1000876c, label %dec_label_pc_1000878c, label %dec_label_pc_10008784

dec_label_pc_10008784:                            ; preds = %dec_label_pc_1000876c
  %v1_10008784 = add i32 %v1_10008774, add (i32 ptrtoint (i32* @global_var_1001c788.171 to i32), i32 4)
  %v2_10008784 = inttoptr i32 %v1_10008784 to i16*
  %v3_10008784 = load i16, i16* %v2_10008784, align 4
  %v4_10008784 = zext i16 %v3_10008784 to i32
  store i32 %v4_10008784, i32* %arg2, align 4
  %v0_1000878c.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1000878c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000878c

dec_label_pc_1000878c:                            ; preds = %dec_label_pc_1000876c, %dec_label_pc_10008784
  %v1_1000878c = phi i32 [ ptrtoint (i32* @global_var_1001c788.171 to i32), %dec_label_pc_1000876c ], [ %v1_1000878c.pre, %dec_label_pc_10008784 ]
  %v0_1000878c = phi i32 [ %v1_10008774, %dec_label_pc_1000876c ], [ %v0_1000878c.pre, %dec_label_pc_10008784 ]
  %v2_1000878c = add i32 %v0_1000878c, %v1_1000878c
  %v3_1000878c = inttoptr i32 %v2_1000878c to i32*
  %v4_1000878c = load i32, i32* %v3_1000878c, align 4
  store i32 %v4_1000878c, i32* %r3.global-to-local, align 4
  ret i32 %v4_1000878c

; uselistorder directives
  uselistorder i32 %v1_10008774, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000878c, { 1, 0 }
}

define i32 @function_10008794(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008794:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008798 = mul i32 %arg1, 8
  %v2_100087a0 = add i32 %v1_10008798, ptrtoint (i32* @global_var_1001c788.171 to i32)
  %v1_100087a8 = add i32 %v1_10008798, add (i32 ptrtoint (i32* @global_var_1001c788.171 to i32), i32 4)
  %v2_100087a8 = inttoptr i32 %v1_100087a8 to i16*
  %v3_100087a8 = load i16, i16* %v2_100087a8, align 4
  %v3_100087ac = icmp eq i16 %v3_100087a8, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100087ac, i1* %cr7_eq.global-to-local, align 1
  %v3_100087b0 = load i32, i32* @global_var_1001c684.172, align 4
  %v1_100087b4 = udiv i32 %v3_100087b0, 16777216
  store i32 %v1_100087b4, i32* @r5, align 4
  %v1_100087b8 = urem i32 %v3_100087b0, 256
  store i32 %v1_100087b8, i32* %r6.global-to-local, align 4
  %v1_100087bc = call i32 @__asm_rlwinm(i32 %v3_100087b0, i32 24, i32 24, i32 31)
  %v1_100087c0 = call i32 @__asm_rlwinm(i32 %v3_100087b0, i32 16, i32 24, i32 31)
  %v0_100087c4 = load i32, i32* @lr, align 4
  %v1_100087c4 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_100087c4 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_100087c4 = or i1 %v1_100087c4, %v2_100087c4
  call void @__pseudo_cond_branch(i1 %v3_100087c4, i32 %v0_100087c4)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_100087cc = inttoptr i32 %v2_100087a0 to i32*
  br label %dec_label_pc_100087cc

dec_label_pc_100087cc:                            ; preds = %dec_label_pc_100087cc, %dec_label_pc_10008794
  %v1_100087d8 = phi i32 [ %v1_1000880c, %dec_label_pc_100087cc ], [ 0, %dec_label_pc_10008794 ]
  %v2_100087cc = load i32, i32* %v1_100087cc, align 4
  %v2_100087d0 = add i32 %v2_100087cc, %v1_100087d8
  %v3_100087d0 = inttoptr i32 %v2_100087d0 to i8*
  %v4_100087d0 = load i8, i8* %v3_100087d0, align 1
  %v5_100087d0 = zext i8 %v4_100087d0 to i32
  %v0_100087d4 = load i32, i32* %r6.global-to-local, align 4
  %v2_100087d4 = xor i32 %v0_100087d4, %v5_100087d0
  %v3_100087d8 = trunc i32 %v2_100087d4 to i8
  store i8 %v3_100087d8, i8* %v3_100087d0, align 1
  %v2_100087dc = load i32, i32* %v1_100087cc, align 4
  %v0_100087e0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100087e0 = add i32 %v0_100087e0, %v2_100087dc
  %v3_100087e0 = inttoptr i32 %v2_100087e0 to i8*
  %v4_100087e0 = load i8, i8* %v3_100087e0, align 1
  %v5_100087e0 = zext i8 %v4_100087e0 to i32
  %v2_100087e4 = xor i32 %v5_100087e0, %v1_100087bc
  %v3_100087e8 = trunc i32 %v2_100087e4 to i8
  store i8 %v3_100087e8, i8* %v3_100087e0, align 1
  %v2_100087ec = load i32, i32* %v1_100087cc, align 4
  %v0_100087f0 = load i32, i32* %r10.global-to-local, align 4
  %v2_100087f0 = add i32 %v0_100087f0, %v2_100087ec
  %v3_100087f0 = inttoptr i32 %v2_100087f0 to i8*
  %v4_100087f0 = load i8, i8* %v3_100087f0, align 1
  %v5_100087f0 = zext i8 %v4_100087f0 to i32
  %v2_100087f4 = xor i32 %v5_100087f0, %v1_100087c0
  %v3_100087f8 = trunc i32 %v2_100087f4 to i8
  store i8 %v3_100087f8, i8* %v3_100087f0, align 1
  %v2_100087fc = load i32, i32* %v1_100087cc, align 4
  %v0_10008800 = load i32, i32* %r10.global-to-local, align 4
  %v2_10008800 = add i32 %v0_10008800, %v2_100087fc
  %v3_10008800 = inttoptr i32 %v2_10008800 to i8*
  %v4_10008800 = load i8, i8* %v3_10008800, align 1
  %v5_10008800 = zext i8 %v4_10008800 to i32
  %v0_10008804 = load i32, i32* @r5, align 4
  %v2_10008804 = xor i32 %v0_10008804, %v5_10008800
  %v3_10008808 = trunc i32 %v2_10008804 to i8
  store i8 %v3_10008808, i8* %v3_10008800, align 1
  %v0_1000880c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000880c = add i32 %v0_1000880c, 1
  store i32 %v1_1000880c, i32* %r10.global-to-local, align 4
  %v3_10008810 = load i16, i16* %v2_100087a8, align 4
  %v4_10008810 = zext i16 %v3_10008810 to i32
  %v2_10008814 = icmp slt i32 %v4_10008810, %v1_1000880c
  %v3_10008814 = icmp sgt i32 %v4_10008810, %v1_1000880c
  %v4_10008814 = icmp eq i32 %v4_10008810, %v1_1000880c
  store i1 %v2_10008814, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10008814, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10008814, label %dec_label_pc_100087cc, label %dec_label_pc_1000881c

dec_label_pc_1000881c:                            ; preds = %dec_label_pc_100087cc
  ret i32 %v2_100087a0

; uselistorder directives
  uselistorder i32 %v4_10008810, { 2, 1, 0 }
  uselistorder i32 %v1_1000880c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_100087b0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10008798, { 1, 0 }
}

define i32 @function_10008820(i32 %arg1) local_unnamed_addr {
dec_label_pc_10008820:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r10.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %v1_10008824 = mul i32 %arg1, 8
  %v2_1000882c = add i32 %v1_10008824, ptrtoint (i32* @global_var_1001c788.171 to i32)
  %v1_10008834 = add i32 %v1_10008824, add (i32 ptrtoint (i32* @global_var_1001c788.171 to i32), i32 4)
  %v2_10008834 = inttoptr i32 %v1_10008834 to i16*
  %v3_10008834 = load i16, i16* %v2_10008834, align 4
  %v3_10008838 = icmp eq i16 %v3_10008834, 0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10008838, i1* %cr7_eq.global-to-local, align 1
  %v3_1000883c = load i32, i32* @global_var_1001c684.172, align 4
  %v1_10008840 = udiv i32 %v3_1000883c, 16777216
  store i32 %v1_10008840, i32* @r5, align 4
  %v1_10008844 = urem i32 %v3_1000883c, 256
  store i32 %v1_10008844, i32* %r6.global-to-local, align 4
  %v1_10008848 = call i32 @__asm_rlwinm(i32 %v3_1000883c, i32 24, i32 24, i32 31)
  %v1_1000884c = call i32 @__asm_rlwinm(i32 %v3_1000883c, i32 16, i32 24, i32 31)
  %v0_10008850 = load i32, i32* @lr, align 4
  %v1_10008850 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v2_10008850 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v3_10008850 = or i1 %v1_10008850, %v2_10008850
  call void @__pseudo_cond_branch(i1 %v3_10008850, i32 %v0_10008850)
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10008858 = inttoptr i32 %v2_1000882c to i32*
  br label %dec_label_pc_10008858

dec_label_pc_10008858:                            ; preds = %dec_label_pc_10008858, %dec_label_pc_10008820
  %v1_10008864 = phi i32 [ %v1_10008898, %dec_label_pc_10008858 ], [ 0, %dec_label_pc_10008820 ]
  %v2_10008858 = load i32, i32* %v1_10008858, align 4
  %v2_1000885c = add i32 %v2_10008858, %v1_10008864
  %v3_1000885c = inttoptr i32 %v2_1000885c to i8*
  %v4_1000885c = load i8, i8* %v3_1000885c, align 1
  %v5_1000885c = zext i8 %v4_1000885c to i32
  %v0_10008860 = load i32, i32* %r6.global-to-local, align 4
  %v2_10008860 = xor i32 %v0_10008860, %v5_1000885c
  %v3_10008864 = trunc i32 %v2_10008860 to i8
  store i8 %v3_10008864, i8* %v3_1000885c, align 1
  %v2_10008868 = load i32, i32* %v1_10008858, align 4
  %v0_1000886c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000886c = add i32 %v0_1000886c, %v2_10008868
  %v3_1000886c = inttoptr i32 %v2_1000886c to i8*
  %v4_1000886c = load i8, i8* %v3_1000886c, align 1
  %v5_1000886c = zext i8 %v4_1000886c to i32
  %v2_10008870 = xor i32 %v5_1000886c, %v1_10008848
  %v3_10008874 = trunc i32 %v2_10008870 to i8
  store i8 %v3_10008874, i8* %v3_1000886c, align 1
  %v2_10008878 = load i32, i32* %v1_10008858, align 4
  %v0_1000887c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000887c = add i32 %v0_1000887c, %v2_10008878
  %v3_1000887c = inttoptr i32 %v2_1000887c to i8*
  %v4_1000887c = load i8, i8* %v3_1000887c, align 1
  %v5_1000887c = zext i8 %v4_1000887c to i32
  %v2_10008880 = xor i32 %v5_1000887c, %v1_1000884c
  %v3_10008884 = trunc i32 %v2_10008880 to i8
  store i8 %v3_10008884, i8* %v3_1000887c, align 1
  %v2_10008888 = load i32, i32* %v1_10008858, align 4
  %v0_1000888c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000888c = add i32 %v0_1000888c, %v2_10008888
  %v3_1000888c = inttoptr i32 %v2_1000888c to i8*
  %v4_1000888c = load i8, i8* %v3_1000888c, align 1
  %v5_1000888c = zext i8 %v4_1000888c to i32
  %v0_10008890 = load i32, i32* @r5, align 4
  %v2_10008890 = xor i32 %v0_10008890, %v5_1000888c
  %v3_10008894 = trunc i32 %v2_10008890 to i8
  store i8 %v3_10008894, i8* %v3_1000888c, align 1
  %v0_10008898 = load i32, i32* %r10.global-to-local, align 4
  %v1_10008898 = add i32 %v0_10008898, 1
  store i32 %v1_10008898, i32* %r10.global-to-local, align 4
  %v3_1000889c = load i16, i16* %v2_10008834, align 4
  %v4_1000889c = zext i16 %v3_1000889c to i32
  %v2_100088a0 = icmp slt i32 %v4_1000889c, %v1_10008898
  %v3_100088a0 = icmp sgt i32 %v4_1000889c, %v1_10008898
  %v4_100088a0 = icmp eq i32 %v4_1000889c, %v1_10008898
  store i1 %v2_100088a0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100088a0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100088a0, label %dec_label_pc_10008858, label %dec_label_pc_100088a8

dec_label_pc_100088a8:                            ; preds = %dec_label_pc_10008858
  ret i32 %v2_1000882c

; uselistorder directives
  uselistorder i32 %v4_1000889c, { 2, 1, 0 }
  uselistorder i32 %v1_10008898, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v3_1000883c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_1000882c, { 1, 0 }
  uselistorder i32 %v1_10008824, { 1, 0 }
  uselistorder i32 16777216, { 0, 1, 2, 3, 5, 4, 7, 6 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1001c788.171 to i32), i32 4), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001c788.171 to i32), { 1, 3, 0, 2, 4 }
}

define i32 @function_100088ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100088ac:
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  store i32 2, i32* @r3, align 4
  store i32 23, i32* %r20.global-to-local, align 4
  store i32 19, i32* %r21.global-to-local, align 4
  store i32 5, i32* %r22.global-to-local, align 4
  store i32 6, i32* %r23.global-to-local, align 4
  store i32 16, i32* %r24.global-to-local, align 4
  store i32 14, i32* %r25.global-to-local, align 4
  store i32 7, i32* %r26.global-to-local, align 4
  store i32 2, i32* %r27.global-to-local, align 4
  store i32 268470536, i32* @lr, align 4
  %v0_10008904 = call i32 @function_1000a47c()
  store i32 %v0_10008904, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008924.174 to i32), i32* @lr, align 4
  %v4_10008920 = call i32 @function_10008e20(i32 ptrtoint ([3 x i8]* @global_var_1000c074.173 to i32), i32 2, i32 2)
  store i32 2, i32* @r3, align 4
  %v0_10008928 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008928, i32* @global_var_1001c790.175, align 4
  %v0_1000892c = load i32, i32* %r27.global-to-local, align 4
  %v1_1000892c = trunc i32 %v0_1000892c to i16
  store i16 %v1_1000892c, i16* bitcast (i32* @global_var_1001c794.176 to i16*), align 4
  store i32 268470580, i32* @lr, align 4
  %v0_10008930 = call i32 @function_1000a47c()
  store i32 %v0_10008930, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008948.178 to i32), i32* @lr, align 4
  %v4_10008944 = call i32 @function_10008e20(i32 ptrtoint ([3 x i8]* @global_var_1000c078.177 to i32), i32 2, i32 2)
  store i32 23, i32* @r3, align 4
  %v0_1000894c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000894c, i32* @global_var_1001c798.179, align 4
  %v0_10008950 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008950 = trunc i32 %v0_10008950 to i16
  store i16 %v1_10008950, i16* bitcast (i32* @global_var_1001c79c.180 to i16*), align 4
  store i32 268470616, i32* @lr, align 4
  %v0_10008954 = call i32 @function_1000a47c()
  store i32 %v0_10008954, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000896c.182 to i32), i32* @lr, align 4
  %v3_10008968 = call i32 @function_10008e20(i32 ptrtoint (i32* @global_var_1000c07c.181 to i32), i32 23, i32 23)
  store i32 6, i32* @r3, align 4
  %v0_10008970 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008970, i32* @global_var_1001c7a0.183, align 4
  store i32 8, i32* %r27.global-to-local, align 4
  %v0_10008978 = load i32, i32* %r20.global-to-local, align 4
  %v1_10008978 = trunc i32 %v0_10008978 to i16
  store i16 %v1_10008978, i16* bitcast (i32* @global_var_1001c7a4.184 to i16*), align 4
  store i32 268470656, i32* @lr, align 4
  %v0_1000897c = call i32 @function_1000a47c()
  store i32 %v0_1000897c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008994.186 to i32), i32* @lr, align 4
  %v4_10008990 = call i32 @function_10008e20(i32 ptrtoint ([7 x i8]* @global_var_1000c094.185 to i32), i32 6, i32 6)
  store i32 7, i32* @r3, align 4
  %v0_10008998 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008998, i32* @global_var_1001c7a8.187, align 4
  %v0_1000899c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000899c = trunc i32 %v0_1000899c to i16
  store i16 %v1_1000899c, i16* bitcast (i32* @global_var_1001c7ac.188 to i16*), align 4
  store i32 268470692, i32* @lr, align 4
  %v0_100089a0 = call i32 @function_1000a47c()
  store i32 %v0_100089a0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100089b8.190 to i32), i32* @lr, align 4
  %v4_100089b4 = call i32 @function_10008e20(i32 ptrtoint ([8 x i8]* @global_var_1000c09c.189 to i32), i32 7, i32 7)
  store i32 7, i32* @r3, align 4
  %v0_100089bc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100089bc, i32* @global_var_1001c7b0.191, align 4
  %v0_100089c0 = load i32, i32* %r26.global-to-local, align 4
  %v1_100089c0 = trunc i32 %v0_100089c0 to i16
  store i16 %v1_100089c0, i16* bitcast (i32* @global_var_1001c7b4.192 to i16*), align 4
  store i32 268470728, i32* @lr, align 4
  %v0_100089c4 = call i32 @function_1000a47c()
  store i32 %v0_100089c4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100089dc.194 to i32), i32* @lr, align 4
  %v4_100089d8 = call i32 @function_10008e20(i32 ptrtoint ([8 x i8]* @global_var_1000c0a4.193 to i32), i32 7, i32 7)
  store i32 3, i32* @r3, align 4
  %v0_100089e0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_100089e0, i32* @global_var_1001c7b8.195, align 4
  %v0_100089e4 = load i32, i32* %r26.global-to-local, align 4
  %v1_100089e4 = trunc i32 %v0_100089e4 to i16
  store i16 %v1_100089e4, i16* bitcast (i32* @global_var_1001c7bc.196 to i16*), align 4
  store i32 268470764, i32* @lr, align 4
  %v0_100089e8 = call i32 @function_1000a47c()
  store i32 %v0_100089e8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008a00.198 to i32), i32* @lr, align 4
  %v4_100089fc = call i32 @function_10008e20(i32 ptrtoint ([4 x i8]* @global_var_1000c0ac.197 to i32), i32 3, i32 3)
  store i32 19, i32* @r3, align 4
  store i16 3, i16* bitcast (i32* @global_var_1001c7c4.199 to i16*), align 4
  %v0_10008a0c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a0c, i32* @global_var_1001c7c0.200, align 4
  store i32 268470804, i32* @lr, align 4
  %v0_10008a10 = call i32 @function_1000a47c()
  store i32 %v0_10008a10, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008a28.202 to i32), i32* @lr, align 4
  %v3_10008a24 = call i32 @function_10008e20(i32 ptrtoint (i32* @global_var_1000c0b0.201 to i32), i32 19, i32 19)
  store i32 24, i32* @r3, align 4
  %v0_10008a2c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a2c, i32* @global_var_1001c7c8.203, align 4
  %v0_10008a30 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008a30 = trunc i32 %v0_10008a30 to i16
  store i16 %v1_10008a30, i16* bitcast (i32* @global_var_1001c7cc.204 to i16*), align 4
  store i32 268470840, i32* @lr, align 4
  %v0_10008a34 = call i32 @function_1000a47c()
  store i32 %v0_10008a34, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008a4c.206 to i32), i32* @lr, align 4
  %v3_10008a48 = call i32 @function_10008e20(i32 ptrtoint (i32* @global_var_1000c0c4.205 to i32), i32 24, i32 24)
  store i32 9, i32* @r3, align 4
  store i16 24, i16* bitcast (i32* @global_var_1001c7d4.207 to i16*), align 4
  %v0_10008a58 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a58, i32* @global_var_1001c7d0.208, align 4
  store i32 268470880, i32* @lr, align 4
  %v0_10008a5c = call i32 @function_1000a47c()
  store i32 %v0_10008a5c, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008a74.210 to i32), i32* @lr, align 4
  %v4_10008a70 = call i32 @function_10008e20(i32 ptrtoint ([10 x i8]* @global_var_1000c0e0.209 to i32), i32 9, i32 9)
  store i32 16, i32* @r3, align 4
  store i16 9, i16* bitcast (i32* @global_var_1001c7dc.211 to i16*), align 4
  %v0_10008a80 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008a80, i32* @global_var_1001c7d8.212, align 4
  store i32 268470920, i32* @lr, align 4
  %v0_10008a84 = call i32 @function_1000a47c()
  store i32 %v0_10008a84, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008a9c.214 to i32), i32* @lr, align 4
  %v4_10008a98 = call i32 @function_10008e20(i32 ptrtoint ([17 x i8]* @global_var_1000c0ec.213 to i32), i32 16, i32 16)
  store i32 22, i32* @r3, align 4
  %v0_10008aa0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008aa0, i32* @global_var_1001c7e0.215, align 4
  %v0_10008aa4 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008aa4 = trunc i32 %v0_10008aa4 to i16
  store i16 %v1_10008aa4, i16* bitcast (i32* @global_var_1001c7e4.216 to i16*), align 4
  store i32 268470956, i32* @lr, align 4
  %v0_10008aa8 = call i32 @function_1000a47c()
  store i32 %v0_10008aa8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008ac0.218 to i32), i32* @lr, align 4
  %v4_10008abc = call i32 @function_10008e20(i32 ptrtoint ([23 x i8]* @global_var_1000c100.217 to i32), i32 22, i32 22)
  store i32 7, i32* @r3, align 4
  store i16 22, i16* bitcast (i32* @global_var_1001c7ec.219 to i16*), align 4
  %v0_10008acc = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008acc, i32* @global_var_1001c7e8.220, align 4
  store i32 268470996, i32* @lr, align 4
  %v0_10008ad0 = call i32 @function_1000a47c()
  store i32 %v0_10008ad0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ae8.222 to i32), i32* @lr, align 4
  %v4_10008ae4 = call i32 @function_10008e20(i32 ptrtoint ([8 x i8]* @global_var_1000c118.221 to i32), i32 7, i32 7)
  store i32 5, i32* @r3, align 4
  %v0_10008aec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008aec, i32* @global_var_1001c7f0.223, align 4
  %v0_10008af0 = load i32, i32* %r26.global-to-local, align 4
  %v1_10008af0 = trunc i32 %v0_10008af0 to i16
  store i16 %v1_10008af0, i16* bitcast (i32* @global_var_1001c7f4.224 to i16*), align 4
  store i32 268471032, i32* @lr, align 4
  %v0_10008af4 = call i32 @function_1000a47c()
  store i32 %v0_10008af4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b0c.226 to i32), i32* @lr, align 4
  %v4_10008b08 = call i32 @function_10008e20(i32 ptrtoint ([6 x i8]* @global_var_1000c120.225 to i32), i32 5, i32 5)
  store i32 4, i32* @r3, align 4
  %v0_10008b10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b10, i32* @global_var_1001c7f8.227, align 4
  %v0_10008b14 = load i32, i32* %r22.global-to-local, align 4
  %v1_10008b14 = trunc i32 %v0_10008b14 to i16
  store i16 %v1_10008b14, i16* bitcast (i32* @global_var_1001c7fc.228 to i16*), align 4
  store i32 268471068, i32* @lr, align 4
  %v0_10008b18 = call i32 @function_1000a47c()
  store i32 %v0_10008b18, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008b30.230 to i32), i32* @lr, align 4
  %v4_10008b2c = call i32 @function_10008e20(i32 ptrtoint ([5 x i8]* @global_var_1000c128.229 to i32), i32 4, i32 4)
  store i32 6, i32* @r3, align 4
  store i16 4, i16* bitcast (i32* @global_var_1001c804.231 to i16*), align 4
  %v0_10008b3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b3c, i32* @global_var_1001c800.232, align 4
  store i32 268471108, i32* @lr, align 4
  %v0_10008b40 = call i32 @function_1000a47c()
  store i32 %v0_10008b40, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b58.234 to i32), i32* @lr, align 4
  %v4_10008b54 = call i32 @function_10008e20(i32 ptrtoint ([7 x i8]* @global_var_1000c130.233 to i32), i32 6, i32 6)
  store i32 14, i32* @r3, align 4
  %v0_10008b5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b5c, i32* @global_var_1001c808.235, align 4
  %v0_10008b60 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008b60 = trunc i32 %v0_10008b60 to i16
  store i16 %v1_10008b60, i16* bitcast (i32* @global_var_1001c80c.236 to i16*), align 4
  store i32 268471144, i32* @lr, align 4
  %v0_10008b64 = call i32 @function_1000a47c()
  store i32 %v0_10008b64, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008b7c.238 to i32), i32* @lr, align 4
  %v4_10008b78 = call i32 @function_10008e20(i32 ptrtoint ([15 x i8]* @global_var_1000c138.237 to i32), i32 14, i32 14)
  store i32 8, i32* @r3, align 4
  %v0_10008b80 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008b80, i32* @global_var_1001c810.239, align 4
  %v0_10008b84 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008b84 = trunc i32 %v0_10008b84 to i16
  store i16 %v1_10008b84, i16* bitcast (i32* @global_var_1001c814.240 to i16*), align 4
  store i32 268471180, i32* @lr, align 4
  %v0_10008b88 = call i32 @function_1000a47c()
  store i32 %v0_10008b88, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ba0.242 to i32), i32* @lr, align 4
  %v4_10008b9c = call i32 @function_10008e20(i32 ptrtoint ([9 x i8]* @global_var_1000c148.241 to i32), i32 8, i32 8)
  store i32 7, i32* @r3, align 4
  %v0_10008ba4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008ba4, i32* @global_var_1001c870.243, align 4
  %v0_10008ba8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008ba8 = trunc i32 %v0_10008ba8 to i16
  store i16 %v1_10008ba8, i16* bitcast (i32* @global_var_1001c874.244 to i16*), align 4
  store i32 268471216, i32* @lr, align 4
  %v0_10008bac = call i32 @function_1000a47c()
  store i32 %v0_10008bac, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008bc4.246 to i32), i32* @lr, align 4
  %v4_10008bc0 = call i32 @function_10008e20(i32 ptrtoint ([8 x i8]* @global_var_1000c154.245 to i32), i32 7, i32 7)
  store i32 16, i32* @r3, align 4
  %v0_10008bc8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008bc8, i32* @global_var_1001c878.247, align 4
  %v0_10008bcc = load i32, i32* %r26.global-to-local, align 4
  %v1_10008bcc = trunc i32 %v0_10008bcc to i16
  store i16 %v1_10008bcc, i16* bitcast (i32* @global_var_1001c87c.248 to i16*), align 4
  store i32 268471252, i32* @lr, align 4
  %v0_10008bd0 = call i32 @function_1000a47c()
  store i32 %v0_10008bd0, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008be8.250 to i32), i32* @lr, align 4
  %v4_10008be4 = call i32 @function_10008e20(i32 ptrtoint ([17 x i8]* @global_var_1000c15c.249 to i32), i32 16, i32 16)
  store i32 8, i32* @r3, align 4
  %v0_10008bec = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008bec, i32* @global_var_1001c818.251, align 4
  %v0_10008bf0 = load i32, i32* %r24.global-to-local, align 4
  %v1_10008bf0 = trunc i32 %v0_10008bf0 to i16
  store i16 %v1_10008bf0, i16* bitcast (i32* @global_var_1001c81c.252 to i16*), align 4
  store i32 268471288, i32* @lr, align 4
  %v0_10008bf4 = call i32 @function_1000a47c()
  store i32 %v0_10008bf4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008c0c.254 to i32), i32* @lr, align 4
  %v4_10008c08 = call i32 @function_10008e20(i32 ptrtoint ([9 x i8]* @global_var_1000c170.253 to i32), i32 8, i32 8)
  store i32 21, i32* @r3, align 4
  %v0_10008c10 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c10, i32* @global_var_1001c820.255, align 4
  %v0_10008c14 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008c14 = trunc i32 %v0_10008c14 to i16
  store i16 %v1_10008c14, i16* bitcast (i32* @global_var_1001c824.256 to i16*), align 4
  store i32 268471324, i32* @lr, align 4
  %v0_10008c18 = call i32 @function_1000a47c()
  store i32 %v0_10008c18, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c30.258 to i32), i32* @lr, align 4
  %v3_10008c2c = call i32 @function_10008e20(i32 ptrtoint (i32* @global_var_1000c1f8.257 to i32), i32 21, i32 21)
  store i32 17, i32* @r3, align 4
  store i16 21, i16* bitcast (i32* @global_var_1001c82c.259 to i16*), align 4
  %v0_10008c3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c3c, i32* @global_var_1001c828.260, align 4
  store i32 268471364, i32* @lr, align 4
  %v0_10008c40 = call i32 @function_1000a47c()
  store i32 %v0_10008c40, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c58.262 to i32), i32* @lr, align 4
  %v4_10008c54 = call i32 @function_10008e20(i32 ptrtoint ([18 x i8]* @global_var_1000c17c.261 to i32), i32 17, i32 17)
  store i32 12, i32* @r3, align 4
  store i16 17, i16* bitcast (i32* @global_var_1001c834.263 to i16*), align 4
  %v0_10008c64 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c64, i32* @global_var_1001c830.264, align 4
  store i32 268471404, i32* @lr, align 4
  %v0_10008c68 = call i32 @function_1000a47c()
  store i32 %v0_10008c68, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10008c80.266 to i32), i32* @lr, align 4
  %v4_10008c7c = call i32 @function_10008e20(i32 ptrtoint ([13 x i8]* @global_var_1000c190.265 to i32), i32 12, i32 12)
  store i32 14, i32* @r3, align 4
  store i16 12, i16* bitcast (i32* @global_var_1001c83c.267 to i16*), align 4
  %v0_10008c8c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008c8c, i32* @global_var_1001c838.268, align 4
  store i32 268471444, i32* @lr, align 4
  %v0_10008c90 = call i32 @function_1000a47c()
  store i32 %v0_10008c90, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ca8.270 to i32), i32* @lr, align 4
  %v4_10008ca4 = call i32 @function_10008e20(i32 ptrtoint ([15 x i8]* @global_var_1000c1a0.269 to i32), i32 14, i32 14)
  store i32 19, i32* @r3, align 4
  %v0_10008cac = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cac, i32* @global_var_1001c840.271, align 4
  %v0_10008cb0 = load i32, i32* %r25.global-to-local, align 4
  %v1_10008cb0 = trunc i32 %v0_10008cb0 to i16
  store i16 %v1_10008cb0, i16* bitcast (i32* @global_var_1001c844.272 to i16*), align 4
  store i32 268471480, i32* @lr, align 4
  %v0_10008cb4 = call i32 @function_1000a47c()
  store i32 %v0_10008cb4, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008ccc.274 to i32), i32* @lr, align 4
  %v4_10008cc8 = call i32 @function_10008e20(i32 ptrtoint ([20 x i8]* @global_var_1000c1b0.273 to i32), i32 19, i32 19)
  store i32 8, i32* @r3, align 4
  %v0_10008cd0 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cd0, i32* @global_var_1001c848.275, align 4
  %v0_10008cd4 = load i32, i32* %r21.global-to-local, align 4
  %v1_10008cd4 = trunc i32 %v0_10008cd4 to i16
  store i16 %v1_10008cd4, i16* bitcast (i32* @global_var_1001c84c.276 to i16*), align 4
  store i32 268471516, i32* @lr, align 4
  %v0_10008cd8 = call i32 @function_1000a47c()
  store i32 %v0_10008cd8, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008cf0.278 to i32), i32* @lr, align 4
  %v4_10008cec = call i32 @function_10008e20(i32 ptrtoint ([9 x i8]* @global_var_1000c1c4.277 to i32), i32 8, i32 8)
  store i32 5, i32* @r3, align 4
  %v0_10008cf4 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008cf4, i32* @global_var_1001c850.279, align 4
  %v0_10008cf8 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008cf8 = trunc i32 %v0_10008cf8 to i16
  store i16 %v1_10008cf8, i16* bitcast (i32* @global_var_1001c854.280 to i16*), align 4
  store i32 268471552, i32* @lr, align 4
  %v0_10008cfc = call i32 @function_1000a47c()
  store i32 %v0_10008cfc, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d14.282 to i32), i32* @lr, align 4
  %v4_10008d10 = call i32 @function_10008e20(i32 ptrtoint ([6 x i8]* @global_var_1000c1d0.281 to i32), i32 5, i32 5)
  store i32 6, i32* @r3, align 4
  %v0_10008d18 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d18, i32* @global_var_1001c858.283, align 4
  %v0_10008d1c = load i32, i32* %r22.global-to-local, align 4
  %v1_10008d1c = trunc i32 %v0_10008d1c to i16
  store i16 %v1_10008d1c, i16* bitcast (i32* @global_var_1001c85c.284 to i16*), align 4
  store i32 268471588, i32* @lr, align 4
  %v0_10008d20 = call i32 @function_1000a47c()
  store i32 %v0_10008d20, i32* %r28.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10008d38.286 to i32), i32* @lr, align 4
  %v4_10008d34 = call i32 @function_10008e20(i32 ptrtoint ([7 x i8]* @global_var_1000c1d8.285 to i32), i32 6, i32 6)
  store i32 23, i32* @r3, align 4
  %v0_10008d3c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d3c, i32* @global_var_1001c860.287, align 4
  %v0_10008d40 = load i32, i32* %r23.global-to-local, align 4
  %v1_10008d40 = trunc i32 %v0_10008d40 to i16
  store i16 %v1_10008d40, i16* bitcast (i32* @global_var_1001c864.288 to i16*), align 4
  store i32 268471624, i32* @lr, align 4
  %v0_10008d44 = call i32 @function_1000a47c()
  store i32 %v0_10008d44, i32* %r28.global-to-local, align 4
  store i32 268471644, i32* @lr, align 4
  %v4_10008d58 = call i32 @function_10008e20(i32 ptrtoint ([24 x i8]* @global_var_1000c1e0.289 to i32), i32 23, i32 23)
  %v0_10008d60 = load i32, i32* %r20.global-to-local, align 4
  %v1_10008d60 = trunc i32 %v0_10008d60 to i16
  store i16 %v1_10008d60, i16* bitcast (i32* @global_var_1001c86c.290 to i16*), align 4
  %v0_10008d64 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10008d64, i32* @global_var_1001c868.291, align 4
  ret i32 %v4_10008d58

; uselistorder directives
  uselistorder i32 21, { 1, 2, 11, 12, 13, 3, 4, 0, 5, 6, 14, 15, 7, 16, 17, 18, 19, 8, 20, 9, 21, 10, 22 }
  uselistorder i32 (i32, i32, i32)* @function_10008e20, { 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @function_10008d9c(i8* %arg1) local_unnamed_addr {
dec_label_pc_10008d9c:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10008d9c = load i8, i8* %arg1, align 1
  %v3_10008da8 = icmp eq i8 %v3_10008d9c, 0
  %v0_10008dac = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008da8, i32 %v0_10008dac)
  br label %dec_label_pc_10008db0

dec_label_pc_10008db0:                            ; preds = %dec_label_pc_10008db0, %dec_label_pc_10008d9c
  %v0_10008db0 = phi i32 [ %v1_10008db0, %dec_label_pc_10008db0 ], [ 0, %dec_label_pc_10008d9c ]
  %v1_10008db0 = add i32 %v0_10008db0, 1
  %v2_10008db4 = add i32 %v1_10008db0, %tmp
  %v3_10008db4 = inttoptr i32 %v2_10008db4 to i8*
  %v4_10008db4 = load i8, i8* %v3_10008db4, align 1
  %v3_10008db8 = icmp eq i8 %v4_10008db4, 0
  br i1 %v3_10008db8, label %dec_label_pc_10008dc0, label %dec_label_pc_10008db0

dec_label_pc_10008dc0:                            ; preds = %dec_label_pc_10008db0
  ret i32 %v1_10008db0
}

define i32 @function_10008dc4(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10008dc4:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10008dc4 = load i8, i8* %arg1, align 1
  %v3_10008dc8 = icmp eq i8 %v2_10008dc4, 0
  br i1 %v3_10008dc8, label %dec_label_pc_10008e14, label %dec_label_pc_10008dd0

dec_label_pc_10008dd0:                            ; preds = %dec_label_pc_10008dc4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008dd4

dec_label_pc_10008dd4:                            ; preds = %dec_label_pc_10008dd4, %dec_label_pc_10008dd0
  %v0_10008dd4 = phi i32 [ %v1_10008dd4, %dec_label_pc_10008dd4 ], [ 0, %dec_label_pc_10008dd0 ]
  %v1_10008dd4 = add i32 %v0_10008dd4, 1
  store i32 %v1_10008dd4, i32* %r9.global-to-local, align 4
  %v2_10008dd8 = add i32 %v1_10008dd4, %tmp
  %v3_10008dd8 = inttoptr i32 %v2_10008dd8 to i8*
  %v4_10008dd8 = load i8, i8* %v3_10008dd8, align 1
  %v3_10008ddc = icmp eq i8 %v4_10008dd8, 0
  br i1 %v3_10008ddc, label %dec_label_pc_10008de4, label %dec_label_pc_10008dd4

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008dd4
  %v3_10008de4 = icmp eq i32 %v1_10008dd4, -1
  br i1 %v3_10008de4, label %dec_label_pc_10008e0c, label %dec_label_pc_10008dec

dec_label_pc_10008dec:                            ; preds = %dec_label_pc_10008de4
  %phitmp = add i32 %v0_10008dd4, 2
  br label %dec_label_pc_10008df0

dec_label_pc_10008df0:                            ; preds = %dec_label_pc_10008e14, %dec_label_pc_10008dec
  %v0_10008df0 = phi i32 [ 1, %dec_label_pc_10008e14 ], [ %phitmp, %dec_label_pc_10008dec ]
  store i32 %v0_10008df0, i32* %ctr.global-to-local, align 4
  %v2_10008e00.pre = load i32, i32* @r3, align 4
  %v2_10008df88 = load i8, i8* %arg1, align 1
  %v1_10008dfc10 = add i32 %tmp, 1
  store i32 %v1_10008dfc10, i32* %r4.global-to-local, align 4
  %v3_10008e0011 = inttoptr i32 %v2_10008e00.pre to i8*
  store i8 %v2_10008df88, i8* %v3_10008e0011, align 1
  %v0_10008e0412 = load i32, i32* @r3, align 4
  %v1_10008e0413 = add i32 %v0_10008e0412, 1
  store i32 %v1_10008e0413, i32* %r3.global-to-local, align 4
  %v0_10008e0814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e0815 = add i32 %v0_10008e0814, -1
  store i32 %v1_10008e0815, i32* %ctr.global-to-local, align 4
  %v2_10008e0816 = icmp eq i32 %v1_10008e0815, 0
  br i1 %v2_10008e0816, label %dec_label_pc_10008e0c.loopexit, label %dec_label_pc_10008df8.dec_label_pc_10008df8_crit_edge

dec_label_pc_10008df8.dec_label_pc_10008df8_crit_edge: ; preds = %dec_label_pc_10008df0, %dec_label_pc_10008df8.dec_label_pc_10008df8_crit_edge
  %v1_10008e0417 = phi i32 [ %v1_10008e04, %dec_label_pc_10008df8.dec_label_pc_10008df8_crit_edge ], [ %v1_10008e0413, %dec_label_pc_10008df0 ]
  %v0_10008df8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10008df8 = inttoptr i32 %v0_10008df8.pre to i8*
  %v2_10008df8 = load i8, i8* %v1_10008df8, align 1
  %v1_10008dfc = add i32 %v0_10008df8.pre, 1
  store i32 %v1_10008dfc, i32* %r4.global-to-local, align 4
  %v3_10008e00 = inttoptr i32 %v1_10008e0417 to i8*
  store i8 %v2_10008df8, i8* %v3_10008e00, align 1
  %v0_10008e04 = load i32, i32* %r3.global-to-local, align 4
  %v1_10008e04 = add i32 %v0_10008e04, 1
  store i32 %v1_10008e04, i32* %r3.global-to-local, align 4
  %v0_10008e08 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e08 = add i32 %v0_10008e08, -1
  store i32 %v1_10008e08, i32* %ctr.global-to-local, align 4
  %v2_10008e08 = icmp eq i32 %v1_10008e08, 0
  br i1 %v2_10008e08, label %dec_label_pc_10008e0c.loopexit, label %dec_label_pc_10008df8.dec_label_pc_10008df8_crit_edge

dec_label_pc_10008e0c.loopexit:                   ; preds = %dec_label_pc_10008df8.dec_label_pc_10008df8_crit_edge, %dec_label_pc_10008df0
  %v0_10008e0c.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008e0c

dec_label_pc_10008e0c:                            ; preds = %dec_label_pc_10008e0c.loopexit, %dec_label_pc_10008de4
  %v0_10008e0c = phi i32 [ %v0_10008e0c.pre, %dec_label_pc_10008e0c.loopexit ], [ -1, %dec_label_pc_10008de4 ]
  store i32 %v0_10008e0c, i32* %r3.global-to-local, align 4
  ret i32 %v0_10008e0c

dec_label_pc_10008e14:                            ; preds = %dec_label_pc_10008dc4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008df0

; uselistorder directives
  uselistorder i32 %v0_10008e0c, { 1, 0 }
  uselistorder i32 %v1_10008e08, { 1, 0 }
  uselistorder i32 %v1_10008e04, { 1, 0 }
  uselistorder i32 %v1_10008dd4, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008df8.dec_label_pc_10008df8_crit_edge, { 1, 0 }
}

define i32 @function_10008e20(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008e20:
  %ctr.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_10008e20 = icmp eq i32 %arg3, 0
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v0_10008e28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008e20, i32 %v0_10008e28)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10008e30

dec_label_pc_10008e30:                            ; preds = %dec_label_pc_10008e30, %dec_label_pc_10008e20
  %v0_10008e30 = phi i32 [ %v1_10008e38, %dec_label_pc_10008e30 ], [ 0, %dec_label_pc_10008e20 ]
  %v2_10008e30 = add i32 %v0_10008e30, %arg2
  %v3_10008e30 = inttoptr i32 %v2_10008e30 to i8*
  %v4_10008e30 = load i8, i8* %v3_10008e30, align 1
  %v4_10008e34 = add i32 %v0_10008e30, %arg1
  %v5_10008e34 = inttoptr i32 %v4_10008e34 to i8*
  store i8 %v4_10008e30, i8* %v5_10008e34, align 1
  %v0_10008e38 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e38 = add i32 %v0_10008e38, 1
  store i32 %v1_10008e38, i32* %r9.global-to-local, align 4
  %v0_10008e3c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e3c = add i32 %v0_10008e3c, -1
  store i32 %v1_10008e3c, i32* %ctr.global-to-local, align 4
  %v2_10008e3c = icmp eq i32 %v1_10008e3c, 0
  br i1 %v2_10008e3c, label %dec_label_pc_10008e40, label %dec_label_pc_10008e30

dec_label_pc_10008e40:                            ; preds = %dec_label_pc_10008e30
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10008e3c, { 1, 0 }
  uselistorder i32 %v1_10008e38, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @function_10008e44() local_unnamed_addr {
dec_label_pc_10008e44:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008e44 = load i32, i32* @r4, align 4
  store i32 %v0_10008e44, i32* %r0.global-to-local, align 4
  %v3_10008e44 = icmp eq i32 %v0_10008e44, 0
  store i32 %v0_10008e44, i32* %ctr.global-to-local, align 4
  %v0_10008e4c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008e44, i32 %v0_10008e4c)
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10008e583 = load i32, i32* @r3, align 4
  %v5_10008e584 = inttoptr i32 %v2_10008e583 to i8*
  store i8 0, i8* %v5_10008e584, align 1
  %v0_10008e5c5 = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e5c6 = add i32 %v0_10008e5c5, 1
  store i32 %v1_10008e5c6, i32* %r9.global-to-local, align 4
  %v0_10008e607 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e608 = add i32 %v0_10008e607, -1
  store i32 %v1_10008e608, i32* %ctr.global-to-local, align 4
  %v2_10008e609 = icmp eq i32 %v1_10008e608, 0
  br i1 %v2_10008e609, label %dec_label_pc_10008e64, label %dec_label_pc_10008e58.dec_label_pc_10008e58_crit_edge

dec_label_pc_10008e58.dec_label_pc_10008e58_crit_edge: ; preds = %dec_label_pc_10008e44, %dec_label_pc_10008e58.dec_label_pc_10008e58_crit_edge
  %v1_10008e5c10 = phi i32 [ %v1_10008e5c, %dec_label_pc_10008e58.dec_label_pc_10008e58_crit_edge ], [ %v1_10008e5c6, %dec_label_pc_10008e44 ]
  %v0_10008e58.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t = trunc i32 %v0_10008e58.pre to i8
  %v2_10008e58 = load i32, i32* @r3, align 4
  %v4_10008e58 = add i32 %v2_10008e58, %v1_10008e5c10
  %v5_10008e58 = inttoptr i32 %v4_10008e58 to i8*
  store i8 %extract.t, i8* %v5_10008e58, align 1
  %v0_10008e5c = load i32, i32* %r9.global-to-local, align 4
  %v1_10008e5c = add i32 %v0_10008e5c, 1
  store i32 %v1_10008e5c, i32* %r9.global-to-local, align 4
  %v0_10008e60 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10008e60 = add i32 %v0_10008e60, -1
  store i32 %v1_10008e60, i32* %ctr.global-to-local, align 4
  %v2_10008e60 = icmp eq i32 %v1_10008e60, 0
  br i1 %v2_10008e60, label %dec_label_pc_10008e64, label %dec_label_pc_10008e58.dec_label_pc_10008e58_crit_edge

dec_label_pc_10008e64:                            ; preds = %dec_label_pc_10008e58.dec_label_pc_10008e58_crit_edge, %dec_label_pc_10008e44
  %v0_10008e64 = load i32, i32* @r3, align 4
  ret i32 %v0_10008e64

; uselistorder directives
  uselistorder i32 %v1_10008e60, { 1, 0 }
  uselistorder i32 %v1_10008e5c, { 1, 0 }
  uselistorder i32 %v0_10008e44, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder label %dec_label_pc_10008e58.dec_label_pc_10008e58_crit_edge, { 1, 0 }
}

define i32 @function_10008e68(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10008e68:
  %v3_10008e68 = icmp sgt i32 %arg4, %arg2
  br i1 %v3_10008e68, label %dec_label_pc_10008e74, label %dec_label_pc_10008e7c

dec_label_pc_10008e74:                            ; preds = %dec_label_pc_10008e98, %dec_label_pc_10008e68, %dec_label_pc_10008e7c
  ret i32 -1

dec_label_pc_10008e7c:                            ; preds = %dec_label_pc_10008e68
  %tmp = icmp slt i32 %arg2, 1
  br i1 %tmp, label %dec_label_pc_10008e74, label %dec_label_pc_10008e84

dec_label_pc_10008e84:                            ; preds = %dec_label_pc_10008e7c
  br label %dec_label_pc_10008ea0

dec_label_pc_10008e94:                            ; preds = %dec_label_pc_10008ea0
  br label %dec_label_pc_10008e98

dec_label_pc_10008e98:                            ; preds = %dec_label_pc_10008eb8, %dec_label_pc_10008e94
  %v0_10008ea01 = phi i32 [ %v1_10008ea4, %dec_label_pc_10008eb8 ], [ 0, %dec_label_pc_10008e94 ]
  %v1_10008e98 = add i32 %v0_10008ebc, 1
  %v1_10008e9c = add i32 %v0_10008e9c, -1
  %v2_10008e9c = icmp eq i32 %v1_10008e9c, 0
  br i1 %v2_10008e9c, label %dec_label_pc_10008e74, label %dec_label_pc_10008ea0

dec_label_pc_10008ea0:                            ; preds = %dec_label_pc_10008e98, %dec_label_pc_10008e84
  %v0_10008e9c = phi i32 [ %v1_10008e9c, %dec_label_pc_10008e98 ], [ %arg2, %dec_label_pc_10008e84 ]
  %v0_10008ebc = phi i32 [ %v1_10008e98, %dec_label_pc_10008e98 ], [ 0, %dec_label_pc_10008e84 ]
  %v0_10008ea0 = phi i32 [ %v0_10008ea01, %dec_label_pc_10008e98 ], [ 0, %dec_label_pc_10008e84 ]
  %v2_10008ea0 = add i32 %v0_10008ea0, %arg3
  %v3_10008ea0 = inttoptr i32 %v2_10008ea0 to i8*
  %v4_10008ea0 = load i8, i8* %v3_10008ea0, align 1
  %v1_10008ea4 = add i32 %v0_10008ea0, 1
  %v2_10008ea8 = add i32 %v0_10008ebc, %arg1
  %v3_10008ea8 = inttoptr i32 %v2_10008ea8 to i8*
  %v4_10008ea8 = load i8, i8* %v3_10008ea8, align 1
  %v4_10008eb0 = icmp eq i8 %v4_10008ea8, %v4_10008ea0
  br i1 %v4_10008eb0, label %dec_label_pc_10008eb8, label %dec_label_pc_10008e94

dec_label_pc_10008eb8:                            ; preds = %dec_label_pc_10008ea0
  %v4_10008eac = icmp eq i32 %v1_10008ea4, %arg4
  br i1 %v4_10008eac, label %dec_label_pc_10008ebc, label %dec_label_pc_10008e98

dec_label_pc_10008ebc:                            ; preds = %dec_label_pc_10008eb8
  %v1_10008ebc = add i32 %v0_10008ebc, 1
  ret i32 %v1_10008ebc

; uselistorder directives
  uselistorder i32 %v0_10008ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10008e74, { 0, 2, 1 }
}

define i32 @function_10008ec4(i32 %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %r5.global-to-local = alloca i32, align 4
  %v0_10008ec4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10008ec4

dec_label_pc_10008ec4:                            ; preds = %dec_label_pc_10008ee0, %dec_label_pc_10008ec4, %bb
  %v0_10008ec4 = phi i32 [ %v0_10008ec4.pre, %bb ], [ %v1_10008ec8, %dec_label_pc_10008ec4 ], [ %v1_10008ec8, %dec_label_pc_10008ee0 ]
  %v1_10008ec4 = inttoptr i32 %v0_10008ec4 to i8*
  %v2_10008ec4 = load i8, i8* %v1_10008ec4, align 1
  %v1_10008ec8 = add i32 %v0_10008ec4, 1
  %v3_10008ed4 = icmp eq i8 %v2_10008ec4, 32
  br i1 %v3_10008ed4, label %dec_label_pc_10008ec4, label %dec_label_pc_10008ee0

dec_label_pc_10008ee0:                            ; preds = %dec_label_pc_10008ec4
  %v2_10008ec4.off = add i8 %v2_10008ec4, -9
  %tmp = icmp ult i8 %v2_10008ec4.off, 2
  br i1 %tmp, label %dec_label_pc_10008ec4, label %dec_label_pc_10008eec

dec_label_pc_10008eec:                            ; preds = %dec_label_pc_10008ee0
  %v3_10008eec = icmp eq i8 %v2_10008ec4, 45
  br i1 %v3_10008eec, label %dec_label_pc_10008f98, label %dec_label_pc_10008ef4

dec_label_pc_10008ef4:                            ; preds = %dec_label_pc_10008eec
  %v3_10008ef4 = icmp eq i8 %v2_10008ec4, 43
  br i1 %v3_10008ef4, label %dec_label_pc_10008ff0, label %dec_label_pc_10008efc

dec_label_pc_10008efc:                            ; preds = %dec_label_pc_10008ef4, %dec_label_pc_10008ff0
  %v0_10008f8c26 = phi i32 [ %v1_10008ec8, %dec_label_pc_10008ef4 ], [ %v1_10008ff4, %dec_label_pc_10008ff0 ]
  %v0_10008f1c5.in = phi i8 [ %v2_10008ec4, %dec_label_pc_10008ef4 ], [ %v2_10008ff0, %dec_label_pc_10008ff0 ]
  br label %dec_label_pc_10008f08

dec_label_pc_10008f08:                            ; preds = %dec_label_pc_10008f98, %dec_label_pc_10008efc
  %v0_10008f8c25 = phi i32 [ %v1_10008fa0, %dec_label_pc_10008f98 ], [ %v0_10008f8c26, %dec_label_pc_10008efc ]
  %v0_10008f1c4.in = phi i8 [ %v2_10008f98, %dec_label_pc_10008f98 ], [ %v0_10008f1c5.in, %dec_label_pc_10008efc ]
  %v0_10008fe0 = phi i32 [ 1, %dec_label_pc_10008f98 ], [ 0, %dec_label_pc_10008efc ]
  %v1_10008f18 = phi i32 [ -2147483648, %dec_label_pc_10008f98 ], [ 2147483647, %dec_label_pc_10008efc ]
  %v2_10008f08 = udiv i32 %v1_10008f18, %arg1
  store i32 0, i32* %r5.global-to-local, align 4
  %v2_10008f14 = mul i32 %v2_10008f08, %arg1
  %v2_10008f18 = sub i32 %v1_10008f18, %v2_10008f14
  br label %dec_label_pc_10008f1c

dec_label_pc_10008f1c:                            ; preds = %dec_label_pc_10008f8c, %dec_label_pc_10008f08
  %v0_10008f8c = phi i32 [ %v1_10008f90, %dec_label_pc_10008f8c ], [ %v0_10008f8c25, %dec_label_pc_10008f08 ]
  %v0_10008f80 = phi i32 [ %v0_10008f7817, %dec_label_pc_10008f8c ], [ 0, %dec_label_pc_10008f08 ]
  %v0_10008f70 = phi i32 [ %v0_10008fd011, %dec_label_pc_10008f8c ], [ 0, %dec_label_pc_10008f08 ]
  %v0_10008f68 = phi i32 [ %v0_10008fc49, %dec_label_pc_10008f8c ], [ 0, %dec_label_pc_10008f08 ]
  %v1_10008f5c.in = phi i8 [ %v2_10008f8c, %dec_label_pc_10008f8c ], [ %v0_10008f1c4.in, %dec_label_pc_10008f08 ]
  %v1_10008f5c = zext i8 %v1_10008f5c.in to i32
  %v1_10008f20 = add nsw i32 %v1_10008f5c, -48
  %fold = add nuw nsw i32 %v1_10008f5c, 208
  %v1_10008f28 = urem i32 %fold, 256
  %tmp27 = icmp ult i32 %v1_10008f28, 10
  br i1 %tmp27, label %dec_label_pc_10008f60, label %dec_label_pc_10008f34

dec_label_pc_10008f34:                            ; preds = %dec_label_pc_10008f1c
  %v1_10008f34 = add nuw nsw i32 %v1_10008f5c, 191
  %v1_10008f38 = urem i32 %v1_10008f34, 256
  %tmp28 = icmp ult i32 %v1_10008f38, 26
  br i1 %tmp28, label %dec_label_pc_10008f5c, label %dec_label_pc_10008f48

dec_label_pc_10008f48:                            ; preds = %dec_label_pc_10008f34
  %v1_10008f48 = add nuw nsw i32 %v1_10008f5c, 159
  %v1_10008f4c = urem i32 %v1_10008f48, 256
  %v2_10008f50 = icmp ugt i32 %v1_10008f4c, 25
  br i1 %v2_10008f50, label %dec_label_pc_10008fc4, label %dec_label_pc_10008f58

dec_label_pc_10008f58:                            ; preds = %dec_label_pc_10008f48
  br label %dec_label_pc_10008f5c

dec_label_pc_10008f5c:                            ; preds = %dec_label_pc_10008f34, %dec_label_pc_10008f58
  %v0_10008f5c = phi i32 [ 55, %dec_label_pc_10008f34 ], [ 87, %dec_label_pc_10008f58 ]
  %v2_10008f5c = sub nsw i32 %v1_10008f5c, %v0_10008f5c
  br label %dec_label_pc_10008f60

dec_label_pc_10008f60:                            ; preds = %dec_label_pc_10008f1c, %dec_label_pc_10008f5c
  %v1_10008f88 = phi i32 [ %v1_10008f20, %dec_label_pc_10008f1c ], [ %v2_10008f5c, %dec_label_pc_10008f5c ]
  %v2_10008f60 = icmp slt i32 %v1_10008f88, %arg1
  br i1 %v2_10008f60, label %dec_label_pc_10008f68, label %dec_label_pc_10008fc4

dec_label_pc_10008f68:                            ; preds = %dec_label_pc_10008f60
  %v1_10008f68 = icmp slt i32 %v0_10008f68, 0
  br i1 %v1_10008f68, label %dec_label_pc_10008fac, label %dec_label_pc_10008f70

dec_label_pc_10008f70:                            ; preds = %dec_label_pc_10008f68
  %v3_10008f70 = icmp ugt i32 %v0_10008f70, %v2_10008f08
  br i1 %v3_10008f70, label %dec_label_pc_10008fac, label %dec_label_pc_10008f78

dec_label_pc_10008f78:                            ; preds = %dec_label_pc_10008f70
  %v4_10008f78 = icmp eq i32 %v0_10008f80, %v2_10008f08
  br i1 %v4_10008f78, label %dec_label_pc_10008fb4, label %dec_label_pc_10008f80

dec_label_pc_10008f80:                            ; preds = %dec_label_pc_10008fb4, %dec_label_pc_10008f78
  %v2_10008f80 = mul i32 %v0_10008f80, %arg1
  %v2_10008f88 = add i32 %v1_10008f88, %v2_10008f80
  store i32 %v2_10008f88, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10008f8c

dec_label_pc_10008f8c:                            ; preds = %dec_label_pc_10008fb4, %dec_label_pc_10008fac, %dec_label_pc_10008f80
  %v0_10008f7817 = phi i32 [ %v2_10008f08, %dec_label_pc_10008fb4 ], [ %v0_10008f80, %dec_label_pc_10008fac ], [ %v2_10008f88, %dec_label_pc_10008f80 ]
  %v0_10008fd011 = phi i32 [ %v2_10008f08, %dec_label_pc_10008fb4 ], [ %v0_10008f70, %dec_label_pc_10008fac ], [ %v2_10008f88, %dec_label_pc_10008f80 ]
  %v0_10008fc49 = phi i32 [ -1, %dec_label_pc_10008fb4 ], [ -1, %dec_label_pc_10008fac ], [ 1, %dec_label_pc_10008f80 ]
  %v1_10008f8c = inttoptr i32 %v0_10008f8c to i8*
  %v2_10008f8c = load i8, i8* %v1_10008f8c, align 1
  %v1_10008f90 = add i32 %v0_10008f8c, 1
  br label %dec_label_pc_10008f1c

dec_label_pc_10008f98:                            ; preds = %dec_label_pc_10008eec
  %v1_10008f98 = inttoptr i32 %v1_10008ec8 to i8*
  %v2_10008f98 = load i8, i8* %v1_10008f98, align 1
  %v1_10008fa0 = add i32 %v0_10008ec4, 2
  br label %dec_label_pc_10008f08

dec_label_pc_10008fac:                            ; preds = %dec_label_pc_10008f70, %dec_label_pc_10008f68
  br label %dec_label_pc_10008f8c

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008f78
  %v3_10008fb4 = icmp sgt i32 %v1_10008f88, %v2_10008f18
  br i1 %v3_10008fb4, label %dec_label_pc_10008f8c, label %dec_label_pc_10008f80

dec_label_pc_10008fc4:                            ; preds = %dec_label_pc_10008f60, %dec_label_pc_10008f48
  %v1_10008fc4 = icmp slt i32 %v0_10008f68, 0
  br i1 %v1_10008fc4, label %dec_label_pc_10008fe0, label %dec_label_pc_10008fcc

dec_label_pc_10008fcc:                            ; preds = %dec_label_pc_10008fc4
  %v3_10008fcc = icmp eq i32 %v0_10008fe0, 0
  %v0_10008fd4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008fcc, i32 %v0_10008fd4)
  %v0_10008fd8 = load i32, i32* %r5.global-to-local, align 4
  %v1_10008fd8 = sub i32 0, %v0_10008fd8
  ret i32 %v1_10008fd8

dec_label_pc_10008fe0:                            ; preds = %dec_label_pc_10008fc4
  %v1_10008fe0 = xor i32 %v0_10008fe0, 1
  %v2_10008fe8 = sub nuw i32 -2147483648, %v1_10008fe0
  ret i32 %v2_10008fe8

dec_label_pc_10008ff0:                            ; preds = %dec_label_pc_10008ef4
  %v1_10008ff0 = inttoptr i32 %v1_10008ec8 to i8*
  %v2_10008ff0 = load i8, i8* %v1_10008ff0, align 1
  %v1_10008ff4 = add i32 %v0_10008ec4, 2
  br label %dec_label_pc_10008efc

; uselistorder directives
  uselistorder i32 %v2_10008f88, { 1, 0, 2 }
  uselistorder i32 %v1_10008f88, { 1, 0, 2 }
  uselistorder i32 %v1_10008f5c, { 2, 4, 3, 0, 1 }
  uselistorder i32 %v0_10008f80, { 2, 0, 1 }
  uselistorder i32 %v0_10008f8c, { 1, 0 }
  uselistorder i32 %v2_10008f08, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_10008ec8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_10008ec4, { 1, 0, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 87, { 2, 0, 1, 3, 4 }
  uselistorder i32 159, { 2, 7, 8, 3, 9, 10, 4, 5, 6, 0, 1, 11, 12 }
  uselistorder i32 208, { 8, 9, 10, 13, 14, 0, 1, 2, 3, 4, 5, 6, 15, 16, 7, 11, 12 }
  uselistorder i32 -2147483648, { 1, 0 }
  uselistorder i8 32, { 10, 2, 3, 4, 0, 5, 6, 7, 11, 12, 13, 14, 1, 8, 15, 9, 16 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10008f60, { 1, 0 }
  uselistorder label %dec_label_pc_10008f5c, { 1, 0 }
  uselistorder label %dec_label_pc_10008efc, { 1, 0 }
}

define i32 @function_10008ffc(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10008ffc:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v0_10009028 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  br label %dec_label_pc_10009030

dec_label_pc_10009030:                            ; preds = %dec_label_pc_1000905c.dec_label_pc_10009030_crit_edge, %dec_label_pc_10008ffc
  %v0_10009034 = phi i32 [ %v0_10009034.pre, %dec_label_pc_1000905c.dec_label_pc_10009030_crit_edge ], [ %arg3, %dec_label_pc_10008ffc ]
  %v0_10009030 = phi i32 [ %v1_10009048, %dec_label_pc_1000905c.dec_label_pc_10009030_crit_edge ], [ %tmp, %dec_label_pc_10008ffc ]
  store i32 1, i32* @r5, align 4
  store i32 268472384, i32* @lr, align 4
  %v4_1000903c = call i32 @function_10009794(i32 %v0_10009034, i32 %v0_10009030, i32 1)
  %v0_10009040 = load i32, i32* @r31, align 4
  %v3_10009044 = icmp eq i32 %v4_1000903c, 1
  %v1_10009048 = add i32 %v0_10009040, 1
  store i32 %v1_10009048, i32* @r31, align 4
  %v0_10009050 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_10009044, label %dec_label_pc_10009050, label %dec_label_pc_10009068

dec_label_pc_10009050:                            ; preds = %dec_label_pc_10009030
  %v1_10009050 = add i32 %v0_10009050, 1
  store i32 %v1_10009050, i32* %r30.global-to-local, align 4
  %v0_10009054 = load i32, i32* %r28.global-to-local, align 4
  %v3_10009054 = icmp sgt i32 %v0_10009054, %v1_10009050
  br i1 %v3_10009054, label %dec_label_pc_1000905c, label %dec_label_pc_10009068

dec_label_pc_1000905c:                            ; preds = %dec_label_pc_10009050
  %v1_1000905c = inttoptr i32 %v0_10009040 to i8*
  %v2_1000905c = load i8, i8* %v1_1000905c, align 1
  %v3_10009060 = icmp eq i8 %v2_1000905c, 10
  br i1 %v3_10009060, label %dec_label_pc_10009068, label %dec_label_pc_1000905c.dec_label_pc_10009030_crit_edge

dec_label_pc_1000905c.dec_label_pc_10009030_crit_edge: ; preds = %dec_label_pc_1000905c
  %v0_10009034.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10009030

dec_label_pc_10009068:                            ; preds = %dec_label_pc_10009030, %dec_label_pc_1000905c, %dec_label_pc_10009050
  %v1_10009070 = phi i32 [ %v1_10009050, %dec_label_pc_1000905c ], [ %v1_10009050, %dec_label_pc_10009050 ], [ %v0_10009050, %dec_label_pc_10009030 ]
  %tmp12 = icmp slt i32 %v1_10009070, 0
  %v1_10009068 = zext i1 %tmp12 to i32
  %v2_10009068 = ashr i32 %v1_10009070, 31
  %v3_10009068 = and i32 %v2_10009068, -2
  %v4_10009068 = or i32 %v3_10009068, %v1_10009068
  %v2_10009070 = xor i32 %v4_10009068, %v1_10009070
  %v2_10009078 = sub i32 %v4_10009068, %v2_10009070
  %tmp13 = icmp slt i32 %v2_10009078, 0
  %v1_10009080 = zext i1 %tmp13 to i32
  %v2_10009080 = ashr i32 %v2_10009078, 31
  %v3_10009080 = and i32 %v2_10009080, -2
  %v4_10009080 = or i32 %v3_10009080, %v1_10009080
  %v0_10009088 = load i32, i32* %r27.global-to-local, align 4
  %v2_10009088 = and i32 %v4_10009080, %v0_10009088
  store i32 %v0_10009028, i32* @r31, align 4
  ret i32 %v2_10009088

; uselistorder directives
  uselistorder i32 %v2_10009078, { 1, 0 }
  uselistorder i32 %v4_10009068, { 1, 0 }
  uselistorder i32 %v1_10009070, { 1, 2, 0 }
  uselistorder i32 %v1_10009048, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_10009794, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10009068, { 1, 2, 0 }
}

define i32 @function_100090a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_100090a0:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v2_100090ac = ptrtoint i32* %stack_var_-36 to i32
  %v0_100090b8 = load i32, i32* @r31, align 4
  store i32 16, i32* %stack_var_-40, align 4
  %v0_100090c0 = call i32 @function_10009c78()
  %v2_100090cc = inttoptr i32 %v0_100090c0 to i32*
  store i32 0, i32* %v2_100090cc, align 4
  store i32 268472540, i32* @lr, align 4
  %v3_100090d8 = call i32 @function_1000a278(i32 2, i32 2, i32 0)
  %v3_100090e0 = icmp eq i32 %v3_100090d8, -1
  store i32 %v3_100090d8, i32* @r31, align 4
  br i1 %v3_100090e0, label %dec_label_pc_10009130, label %dec_label_pc_100090fc

dec_label_pc_100090fc:                            ; preds = %dec_label_pc_100090a0
  store i32 2, i32* %stack_var_-36, align 4
  store i32 268472596, i32* @lr, align 4
  %v3_10009110 = call i32 @function_1000a078(i32 %v2_100090ac, i32 16, i32 16)
  %v2_10009118 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000911c = load i32, i32* @r31, align 4
  store i32 268472612, i32* @lr, align 4
  %v3_10009120 = call i32 @function_1000a0ac(i32 %v0_1000911c, i32 %v2_100090ac, i32 %v2_10009118)
  store i32 268472620, i32* @lr, align 4
  %v0_10009128 = call i32 @function_1000955c()
  br label %dec_label_pc_10009130

dec_label_pc_10009130:                            ; preds = %dec_label_pc_100090a0, %dec_label_pc_100090fc
  %v0_10009130 = phi i32 [ 0, %dec_label_pc_100090a0 ], [ 134744072, %dec_label_pc_100090fc ]
  store i32 %v0_100090b8, i32* @r31, align 4
  ret i32 %v0_10009130

; uselistorder directives
  uselistorder i32 %v2_100090ac, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a078, { 8, 7, 4, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @function_1000a278, { 24, 22, 23, 7, 21, 20, 19, 18, 17, 16, 15, 0, 14, 13, 1, 12, 11, 10, 9, 8, 6, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_10009130, { 1, 0 }
}

define i32 @function_1000914c(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000914c:
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp16 = ptrtoint i8* %arg1 to i32
  %v3_1000914c = load i8, i8* %tmp, align 1
  %v3_10009158 = icmp eq i8 %v3_1000914c, 0
  br i1 %v3_10009158, label %dec_label_pc_10009170, label %dec_label_pc_10009160

dec_label_pc_10009160:                            ; preds = %dec_label_pc_1000914c, %dec_label_pc_10009160
  %v0_10009160 = phi i32 [ %v1_10009160, %dec_label_pc_10009160 ], [ 0, %dec_label_pc_1000914c ]
  %v1_10009160 = add i32 %v0_10009160, 1
  %v3_10009164 = add i32 %v1_10009160, %arg3
  %v4_10009164 = inttoptr i32 %v3_10009164 to i8*
  %v5_10009164 = load i8, i8* %v4_10009164, align 1
  %v3_10009168 = icmp eq i8 %v5_10009164, 0
  br i1 %v3_10009168, label %dec_label_pc_10009170, label %dec_label_pc_10009160

dec_label_pc_10009170:                            ; preds = %dec_label_pc_10009160, %dec_label_pc_1000914c
  %v0_100091a011 = phi i32 [ 0, %dec_label_pc_1000914c ], [ %v1_10009160, %dec_label_pc_10009160 ]
  %v1_10009170 = icmp slt i32 %arg2, 0
  %v1_10009174 = add i32 %arg2, 1
  br i1 %v1_10009170, label %dec_label_pc_100091ec, label %dec_label_pc_10009188

dec_label_pc_10009188:                            ; preds = %dec_label_pc_10009170, %dec_label_pc_100091ec, %dec_label_pc_100091e0
  %v2_100091948 = phi i32 [ %v1_10009198, %dec_label_pc_100091e0 ], [ 0, %dec_label_pc_100091ec ], [ 0, %dec_label_pc_10009170 ]
  %v0_1000918c6 = phi i32 [ %v1_10009190, %dec_label_pc_100091e0 ], [ %tmp16, %dec_label_pc_100091ec ], [ %tmp16, %dec_label_pc_10009170 ]
  %v0_10009188 = phi i32 [ %v0_100091d4, %dec_label_pc_100091e0 ], [ 1, %dec_label_pc_100091ec ], [ %v1_10009174, %dec_label_pc_10009170 ]
  %v1_10009188 = add i32 %v0_10009188, -1
  %v2_10009188 = icmp eq i32 %v1_10009188, 0
  br i1 %v2_10009188, label %dec_label_pc_100091d8, label %dec_label_pc_1000918c

dec_label_pc_1000918c:                            ; preds = %dec_label_pc_10009188, %dec_label_pc_100091d0
  %v2_10009194 = phi i32 [ 0, %dec_label_pc_100091d0 ], [ %v2_100091948, %dec_label_pc_10009188 ]
  %v0_1000918c = phi i32 [ %v1_10009190, %dec_label_pc_100091d0 ], [ %v0_1000918c6, %dec_label_pc_10009188 ]
  %v0_100091d4 = phi i32 [ %v1_100091d4, %dec_label_pc_100091d0 ], [ %v1_10009188, %dec_label_pc_10009188 ]
  %v1_1000918c = inttoptr i32 %v0_1000918c to i8*
  %v2_1000918c = load i8, i8* %v1_1000918c, align 1
  %v3_1000918c = zext i8 %v2_1000918c to i32
  %v1_10009190 = add i32 %v0_1000918c, 1
  %v3_10009194 = add i32 %v2_10009194, %arg3
  %v4_10009194 = inttoptr i32 %v3_10009194 to i8*
  %v5_10009194 = load i8, i8* %v4_10009194, align 1
  %v6_10009194 = zext i8 %v5_10009194 to i32
  %v1_10009198 = add i32 %v2_10009194, 1
  %v1_1000919c = add nuw nsw i32 %v3_1000918c, 191
  %v1_100091a4 = urem i32 %v1_1000919c, 256
  %v2_100091a8 = icmp ugt i32 %v1_100091a4, 25
  %v1_100091ac = add nuw nsw i32 %v6_10009194, 191
  %v1_100091b0 = urem i32 %v1_100091ac, 256
  %v2_100091b4 = icmp ugt i32 %v1_100091b0, 25
  br i1 %v2_100091a8, label %dec_label_pc_100091c0, label %dec_label_pc_100091bc

dec_label_pc_100091bc:                            ; preds = %dec_label_pc_1000918c
  %v1_100091bc = or i32 %v3_1000918c, 96
  br i1 %v2_100091b4, label %dec_label_pc_100091c8, label %dec_label_pc_100091c4

dec_label_pc_100091c0:                            ; preds = %dec_label_pc_1000918c
  br i1 %v2_100091b4, label %dec_label_pc_100091c8, label %dec_label_pc_100091c4

dec_label_pc_100091c4:                            ; preds = %dec_label_pc_100091bc, %dec_label_pc_100091c0
  %v1_100091c814 = phi i32 [ %v1_100091bc, %dec_label_pc_100091bc ], [ %v3_1000918c, %dec_label_pc_100091c0 ]
  %v1_100091c4 = or i32 %v6_10009194, 96
  br label %dec_label_pc_100091c8

dec_label_pc_100091c8:                            ; preds = %dec_label_pc_100091bc, %dec_label_pc_100091c0, %dec_label_pc_100091c4
  %v1_100091c8 = phi i32 [ %v1_100091bc, %dec_label_pc_100091bc ], [ %v3_1000918c, %dec_label_pc_100091c0 ], [ %v1_100091c814, %dec_label_pc_100091c4 ]
  %v0_100091c8 = phi i32 [ %v6_10009194, %dec_label_pc_100091bc ], [ %v6_10009194, %dec_label_pc_100091c0 ], [ %v1_100091c4, %dec_label_pc_100091c4 ]
  %v4_100091c8 = icmp eq i32 %v0_100091c8, %v1_100091c8
  br i1 %v4_100091c8, label %dec_label_pc_100091e0, label %dec_label_pc_100091d0

dec_label_pc_100091d0:                            ; preds = %dec_label_pc_100091c8
  %v1_100091d4 = add i32 %v0_100091d4, -1
  %v2_100091d4 = icmp eq i32 %v1_100091d4, 0
  br i1 %v2_100091d4, label %dec_label_pc_100091d8, label %dec_label_pc_1000918c

dec_label_pc_100091d8:                            ; preds = %dec_label_pc_10009188, %dec_label_pc_100091d0
  ret i32 -1

dec_label_pc_100091e0:                            ; preds = %dec_label_pc_100091c8
  %v4_100091a0.le = icmp eq i32 %v0_100091a011, %v1_10009198
  br i1 %v4_100091a0.le, label %dec_label_pc_100091e4, label %dec_label_pc_10009188

dec_label_pc_100091e4:                            ; preds = %dec_label_pc_100091e0
  %v2_100091e4 = sub i32 %v1_10009190, %tmp16
  ret i32 %v2_100091e4

dec_label_pc_100091ec:                            ; preds = %dec_label_pc_10009170
  br label %dec_label_pc_10009188

; uselistorder directives
  uselistorder i32 %v1_100091d4, { 1, 0 }
  uselistorder i32 %v1_100091bc, { 1, 0 }
  uselistorder i1 %v2_100091b4, { 1, 0 }
  uselistorder i32 %v1_10009198, { 1, 0 }
  uselistorder i32 %v3_1000918c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100091d4, { 1, 0 }
  uselistorder i32 %v0_1000918c, { 1, 0 }
  uselistorder i32 %v2_10009194, { 1, 0 }
  uselistorder i32 %tmp16, { 2, 0, 1 }
  uselistorder i32 96, { 9, 10, 3, 4, 0, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 25, { 7, 8, 9, 5, 6, 0, 4, 1, 2, 3 }
  uselistorder i32 191, { 1, 0, 2, 7, 8, 4, 5, 6, 9, 10, 3 }
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_100091d8, { 1, 0 }
  uselistorder label %dec_label_pc_100091c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100091c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000918c, { 1, 0 }
  uselistorder label %dec_label_pc_10009188, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009160, { 1, 0 }
}

define i32 @function_100091f8(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100091f8:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_100091f8 = load i8, i8* %arg1, align 1
  %v3_10009200 = icmp eq i8 %v2_100091f8, 0
  br i1 %v3_10009200, label %dec_label_pc_10009218, label %dec_label_pc_10009208

dec_label_pc_10009208:                            ; preds = %dec_label_pc_100091f8, %dec_label_pc_10009208
  %v0_10009208 = phi i32 [ %v1_10009208, %dec_label_pc_10009208 ], [ 0, %dec_label_pc_100091f8 ]
  %v1_10009208 = add i32 %v0_10009208, 1
  %v2_1000920c = add i32 %v1_10009208, %tmp
  %v3_1000920c = inttoptr i32 %v2_1000920c to i8*
  %v4_1000920c = load i8, i8* %v3_1000920c, align 1
  %v3_10009210 = icmp eq i8 %v4_1000920c, 0
  br i1 %v3_10009210, label %dec_label_pc_10009218, label %dec_label_pc_10009208

dec_label_pc_10009218:                            ; preds = %dec_label_pc_10009208, %dec_label_pc_100091f8
  %v0_10009238 = phi i32 [ 0, %dec_label_pc_100091f8 ], [ %v1_10009208, %dec_label_pc_10009208 ]
  %v1_10009218 = inttoptr i32 %arg2 to i8*
  %v2_10009218 = load i8, i8* %v1_10009218, align 1
  %v3_10009220 = icmp eq i8 %v2_10009218, 0
  br i1 %v3_10009220, label %dec_label_pc_10009238, label %dec_label_pc_10009228

dec_label_pc_10009228:                            ; preds = %dec_label_pc_10009218, %dec_label_pc_10009228
  %v0_10009228 = phi i32 [ %v1_10009228, %dec_label_pc_10009228 ], [ 0, %dec_label_pc_10009218 ]
  %v1_10009228 = add i32 %v0_10009228, 1
  %v2_1000922c = add i32 %v1_10009228, %arg2
  %v3_1000922c = inttoptr i32 %v2_1000922c to i8*
  %v4_1000922c = load i8, i8* %v3_1000922c, align 1
  %v3_10009230 = icmp eq i8 %v4_1000922c, 0
  br i1 %v3_10009230, label %dec_label_pc_10009238, label %dec_label_pc_10009228

dec_label_pc_10009238:                            ; preds = %dec_label_pc_10009228, %dec_label_pc_10009218
  %v0_1000923c = phi i32 [ 0, %dec_label_pc_10009218 ], [ %v1_10009228, %dec_label_pc_10009228 ]
  %v4_10009238 = icmp eq i32 %v0_10009238, %v0_1000923c
  br i1 %v4_10009238, label %dec_label_pc_10009250, label %dec_label_pc_10009248

dec_label_pc_10009248:                            ; preds = %dec_label_pc_10009254, %dec_label_pc_10009238
  ret i32 0

dec_label_pc_10009250:                            ; preds = %dec_label_pc_10009238
  %v2_10009250 = icmp eq i32 %v0_10009238, 0
  br i1 %v2_10009250, label %dec_label_pc_10009270, label %dec_label_pc_10009254

dec_label_pc_10009254:                            ; preds = %dec_label_pc_10009250, %dec_label_pc_1000926c
  %v0_1000926c = phi i32 [ %v1_1000926c, %dec_label_pc_1000926c ], [ %v0_10009238, %dec_label_pc_10009250 ]
  %v0_1000925c = phi i32 [ %v1_10009260, %dec_label_pc_1000926c ], [ %arg2, %dec_label_pc_10009250 ]
  %v0_10009254 = phi i32 [ %v1_10009258, %dec_label_pc_1000926c ], [ %tmp, %dec_label_pc_10009250 ]
  %v1_10009254 = inttoptr i32 %v0_10009254 to i8*
  %v2_10009254 = load i8, i8* %v1_10009254, align 1
  %v1_1000925c = inttoptr i32 %v0_1000925c to i8*
  %v2_1000925c = load i8, i8* %v1_1000925c, align 1
  %v4_10009264 = icmp eq i8 %v2_10009254, %v2_1000925c
  br i1 %v4_10009264, label %dec_label_pc_1000926c, label %dec_label_pc_10009248

dec_label_pc_1000926c:                            ; preds = %dec_label_pc_10009254
  %v1_10009260 = add i32 %v0_1000925c, 1
  %v1_10009258 = add i32 %v0_10009254, 1
  %v1_1000926c = add i32 %v0_1000926c, -1
  %v2_1000926c = icmp eq i32 %v1_1000926c, 0
  br i1 %v2_1000926c, label %dec_label_pc_10009270, label %dec_label_pc_10009254

dec_label_pc_10009270:                            ; preds = %dec_label_pc_1000926c, %dec_label_pc_10009250
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_1000926c, { 1, 0 }
  uselistorder i32 %v0_10009254, { 1, 0 }
  uselistorder i32 %v0_1000925c, { 1, 0 }
  uselistorder label %dec_label_pc_10009254, { 1, 0 }
  uselistorder label %dec_label_pc_10009228, { 1, 0 }
  uselistorder label %dec_label_pc_10009208, { 1, 0 }
}

define i32 @function_10009278(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009278:
  %cr6_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  store i32 %arg3, i32* @r5, align 4
  %tmp17 = sext i8 %arg1 to i32
  store i32 %tmp17, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10009278 = icmp eq i32 %arg3, 0
  %v4_1000927c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000927c, i32* %stack_var_-64, align 4
  %v5_1000927c = ptrtoint i32* %stack_var_-64 to i32
  br i1 %v4_10009278, label %dec_label_pc_10009298, label %dec_label_pc_10009284

dec_label_pc_10009284:                            ; preds = %dec_label_pc_10009278
  %v0_10009284 = load i32, i32* %r3.global-to-local, align 4
  %v3_10009284 = icmp eq i32 %v0_10009284, 0
  store i1 %v3_10009284, i1* %cr6_eq.global-to-local, align 1
  br i1 %v3_10009284, label %dec_label_pc_1000928c, label %dec_label_pc_100092a4

dec_label_pc_1000928c:                            ; preds = %dec_label_pc_10009284
  store i32 48, i32* %r0.global-to-local, align 4
  %v4_10009290 = add i32 %arg3, 1
  %v5_10009290 = inttoptr i32 %v4_10009290 to i8*
  store i8 0, i8* %v5_10009290, align 1
  %v0_10009294 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009294 = trunc i32 %v0_10009294 to i8
  store i8 %v1_10009294, i8* %tmp, align 1
  br label %dec_label_pc_10009298

dec_label_pc_10009298:                            ; preds = %dec_label_pc_10009324, %dec_label_pc_10009278, %dec_label_pc_1000928c
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_100092a4:                            ; preds = %dec_label_pc_10009284
  %v2_10009284 = icmp sgt i32 %v0_10009284, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100092a4.not = icmp ne i32 %arg2, 10
  %brmerge = or i1 %v2_10009284, %v3_100092a4.not
  br i1 %brmerge, label %dec_label_pc_100092b8, label %dec_label_pc_1000936c

dec_label_pc_100092b8:                            ; preds = %dec_label_pc_100092a4, %dec_label_pc_1000936c
  %v0_100092bc2 = phi i32 [ %v0_10009284, %dec_label_pc_100092a4 ], [ %v1_1000936c, %dec_label_pc_1000936c ]
  %storemerge = phi i32 [ 0, %dec_label_pc_100092a4 ], [ 1, %dec_label_pc_1000936c ]
  store i32 %storemerge, i32* %r8.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092bc

dec_label_pc_100092bc:                            ; preds = %dec_label_pc_100092e8.dec_label_pc_100092bc_crit_edge, %dec_label_pc_100092b8
  %v1_100092c0 = phi i32 [ %v1_100092c0.pre, %dec_label_pc_100092e8.dec_label_pc_100092bc_crit_edge ], [ 32, %dec_label_pc_100092b8 ]
  %v0_100092c0 = phi i32 [ %v0_100092c0.pre, %dec_label_pc_100092e8.dec_label_pc_100092bc_crit_edge ], [ %v5_1000927c, %dec_label_pc_100092b8 ]
  %v1_100092d0 = phi i32 [ %v0_100092bc.pre, %dec_label_pc_100092e8.dec_label_pc_100092bc_crit_edge ], [ %v0_100092bc2, %dec_label_pc_100092b8 ]
  %v2_100092bc = udiv i32 %v1_100092d0, %arg2
  %v2_100092c0 = add i32 %v0_100092c0, %v1_100092c0
  store i32 %v2_100092c0, i32* %r11.global-to-local, align 4
  %v1_100092c4 = add i32 %v1_100092c0, -1
  store i32 %v1_100092c4, i32* %r10.global-to-local, align 4
  %v2_100092c8 = mul i32 %v2_100092bc, %arg2
  %v3_100092cc = icmp ult i32 %v1_100092d0, %arg2
  store i1 %v3_100092cc, i1* %cr6_eq.global-to-local, align 1
  %v2_100092d0 = sub i32 %v1_100092d0, %v2_100092c8
  store i32 %v2_100092d0, i32* %r9.global-to-local, align 4
  store i32 %v2_100092bc, i32* %r3.global-to-local, align 4
  %tmp22 = icmp slt i32 %v2_100092d0, 10
  %storemerge15.v = select i1 %tmp22, i32 48, i32 55
  %storemerge15 = add i32 %storemerge15.v, %v2_100092d0
  %v0_100092e8.off0 = trunc i32 %storemerge15 to i8
  store i32 %storemerge15, i32* %r0.global-to-local, align 4
  %v3_100092e8 = add i32 %v2_100092c0, 8
  %v4_100092e8 = inttoptr i32 %v3_100092e8 to i8*
  store i8 %v0_100092e8.off0, i8* %v4_100092e8, align 1
  %v0_100092ec = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_100092ec, label %dec_label_pc_100092f0, label %dec_label_pc_100092e8.dec_label_pc_100092bc_crit_edge

dec_label_pc_100092e8.dec_label_pc_100092bc_crit_edge: ; preds = %dec_label_pc_100092bc
  %v0_100092bc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_100092c0.pre = load i32, i32* @r1, align 4
  %v1_100092c0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092bc

dec_label_pc_100092f0:                            ; preds = %dec_label_pc_100092bc
  %v0_100092f0 = load i32, i32* %r8.global-to-local, align 4
  %v3_100092f0 = icmp eq i32 %v0_100092f0, 0
  br i1 %v3_100092f0, label %dec_label_pc_100092f8, label %dec_label_pc_10009358

dec_label_pc_100092f8:                            ; preds = %dec_label_pc_100092f0
  %v0_100092f8 = load i32, i32* %r10.global-to-local, align 4
  %v1_100092f8 = add i32 %v0_100092f8, 1
  store i32 %v1_100092f8, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092fc

dec_label_pc_100092fc:                            ; preds = %dec_label_pc_10009358, %dec_label_pc_100092f8
  %v1_10009304 = phi i32 [ %v1_10009300.pre, %dec_label_pc_10009358 ], [ %v1_100092f8, %dec_label_pc_100092f8 ]
  %v2_100092fc = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_100092fc, i32* %r9.global-to-local, align 4
  %v2_10009300 = add i32 %v1_10009304, %v2_100092fc
  %v3_10009300 = inttoptr i32 %v2_10009300 to i8*
  %v4_10009300 = load i8, i8* %v3_10009300, align 1
  %v5_10009300 = zext i8 %v4_10009300 to i32
  store i32 %v5_10009300, i32* %r0.global-to-local, align 4
  store i32 %v2_10009300, i32* %r9.global-to-local, align 4
  %v3_10009308 = icmp eq i8 %v4_10009300, 0
  br i1 %v3_10009308, label %dec_label_pc_10009380, label %dec_label_pc_10009310

dec_label_pc_10009310:                            ; preds = %dec_label_pc_100092fc
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009314

dec_label_pc_10009314:                            ; preds = %dec_label_pc_10009314, %dec_label_pc_10009310
  %v0_10009314 = phi i32 [ %v1_10009314, %dec_label_pc_10009314 ], [ 0, %dec_label_pc_10009310 ]
  %v1_10009314 = add i32 %v0_10009314, 1
  store i32 %v1_10009314, i32* %r10.global-to-local, align 4
  %v2_10009318 = add i32 %v1_10009314, %v2_10009300
  %v3_10009318 = inttoptr i32 %v2_10009318 to i8*
  %v4_10009318 = load i8, i8* %v3_10009318, align 1
  %v5_10009318 = zext i8 %v4_10009318 to i32
  store i32 %v5_10009318, i32* %r0.global-to-local, align 4
  %v3_1000931c = icmp eq i8 %v4_10009318, 0
  br i1 %v3_1000931c, label %dec_label_pc_10009324, label %dec_label_pc_10009314

dec_label_pc_10009324:                            ; preds = %dec_label_pc_10009314
  %v3_10009324 = icmp eq i32 %v1_10009314, -1
  br i1 %v3_10009324, label %dec_label_pc_10009298, label %dec_label_pc_1000932c

dec_label_pc_1000932c:                            ; preds = %dec_label_pc_10009324
  store i32 %arg3, i32* %r11.global-to-local, align 4
  %phitmp = add i32 %v0_10009314, 2
  br label %dec_label_pc_10009330

dec_label_pc_10009330:                            ; preds = %dec_label_pc_10009380, %dec_label_pc_1000932c
  %v0_10009330 = phi i32 [ 1, %dec_label_pc_10009380 ], [ %phitmp, %dec_label_pc_1000932c ]
  store i32 %v0_10009330, i32* %r10.global-to-local, align 4
  store i32 %v0_10009330, i32* %ctr.global-to-local, align 4
  %v2_1000933824 = load i8, i8* %v3_10009300, align 1
  %v3_1000933825 = zext i8 %v2_1000933824 to i32
  store i32 %v3_1000933825, i32* %r0.global-to-local, align 4
  %v1_1000933c26 = add i32 %v2_10009300, 1
  store i32 %v1_1000933c26, i32* %r9.global-to-local, align 4
  store i8 %v2_1000933824, i8* %tmp, align 1
  %v0_1000934428 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000934429 = add i32 %v0_1000934428, 1
  store i32 %v1_1000934429, i32* %r11.global-to-local, align 4
  %v0_1000934830 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000934831 = add i32 %v0_1000934830, -1
  store i32 %v1_1000934831, i32* %ctr.global-to-local, align 4
  %v2_1000934832 = icmp eq i32 %v1_1000934831, 0
  br i1 %v2_1000934832, label %dec_label_pc_1000934c, label %dec_label_pc_10009338.dec_label_pc_10009338_crit_edge

dec_label_pc_10009338.dec_label_pc_10009338_crit_edge: ; preds = %dec_label_pc_10009330, %dec_label_pc_10009338.dec_label_pc_10009338_crit_edge
  %v1_1000934433 = phi i32 [ %v1_10009344, %dec_label_pc_10009338.dec_label_pc_10009338_crit_edge ], [ %v1_1000934429, %dec_label_pc_10009330 ]
  %v0_10009338.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009338 = inttoptr i32 %v0_10009338.pre to i8*
  %v2_10009338 = load i8, i8* %v1_10009338, align 1
  %v3_10009338 = zext i8 %v2_10009338 to i32
  store i32 %v3_10009338, i32* %r0.global-to-local, align 4
  %v1_1000933c = add i32 %v0_10009338.pre, 1
  store i32 %v1_1000933c, i32* %r9.global-to-local, align 4
  %v3_10009340 = inttoptr i32 %v1_1000934433 to i8*
  store i8 %v2_10009338, i8* %v3_10009340, align 1
  %v0_10009344 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009344 = add i32 %v0_10009344, 1
  store i32 %v1_10009344, i32* %r11.global-to-local, align 4
  %v0_10009348 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009348 = add i32 %v0_10009348, -1
  store i32 %v1_10009348, i32* %ctr.global-to-local, align 4
  %v2_10009348 = icmp eq i32 %v1_10009348, 0
  br i1 %v2_10009348, label %dec_label_pc_1000934c, label %dec_label_pc_10009338.dec_label_pc_10009338_crit_edge

dec_label_pc_1000934c:                            ; preds = %dec_label_pc_10009338.dec_label_pc_10009338_crit_edge, %dec_label_pc_10009330
  store i32 %arg3, i32* %r3.global-to-local, align 4
  ret i32 %arg3

dec_label_pc_10009358:                            ; preds = %dec_label_pc_100092f0
  %v0_10009358.pre = load i32, i32* @r1, align 4
  %v1_10009358.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_10009358 = add i32 %v1_10009358.pre, %v0_10009358.pre
  store i32 %v2_10009358, i32* %r9.global-to-local, align 4
  store i32 45, i32* %r0.global-to-local, align 4
  %v3_10009360 = add i32 %v2_10009358, 8
  %v4_10009360 = inttoptr i32 %v3_10009360 to i8*
  store i8 45, i8* %v4_10009360, align 1
  %v1_10009300.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092fc

dec_label_pc_1000936c:                            ; preds = %dec_label_pc_100092a4
  %v1_1000936c = sub i32 0, %v0_10009284
  store i32 %v1_1000936c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_100092b8

dec_label_pc_10009380:                            ; preds = %dec_label_pc_100092fc
  store i32 %arg3, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009330

; uselistorder directives
  uselistorder i32 %v1_1000936c, { 1, 0 }
  uselistorder i32 %v1_10009348, { 1, 0 }
  uselistorder i32 %v1_10009344, { 1, 0 }
  uselistorder i32 %v0_10009330, { 1, 0 }
  uselistorder i32 %v1_10009314, { 0, 1, 3, 2 }
  uselistorder i32 %v2_100092bc, { 1, 0 }
  uselistorder i32 %v1_100092d0, { 1, 0, 2 }
  uselistorder i32 %v1_100092c0, { 1, 0 }
  uselistorder i32 %v0_10009284, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 5, 6, 2, 3, 4 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 8, 7, 2, 3, 5, 4, 6, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 8, 2, 3, 4, 5, 6, 7 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 2 }
  uselistorder i32 45, { 9, 3, 4, 5, 6, 0, 1, 2, 7, 8, 10 }
  uselistorder i32 55, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 14, 15 }
  uselistorder i32 %arg3, { 1, 4, 5, 6, 2, 3, 0, 7, 9, 8 }
  uselistorder i32 %arg2, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10009338.dec_label_pc_10009338_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_100092b8, { 1, 0 }
  uselistorder label %dec_label_pc_10009298, { 0, 2, 1 }
}

define i32 @function_1000938c(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000938c:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  %v4_1000939c = icmp eq i32 %arg2, -2143521772
  %v2_100093b0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100093b0, i32* %stack_var_-32, align 4
  br i1 %v4_1000939c, label %dec_label_pc_10009410, label %dec_label_pc_100093d0

dec_label_pc_100093d0:                            ; preds = %dec_label_pc_1000938c
  %v3_100093d0 = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_100093d0, label %dec_label_pc_100093e8, label %dec_label_pc_100093d8

dec_label_pc_100093d8:                            ; preds = %dec_label_pc_100093d0
  %v3_100093dc = icmp eq i32 %arg2, 1077703699
  br i1 %v3_100093dc, label %dec_label_pc_10009404, label %dec_label_pc_10009430

dec_label_pc_100093e8:                            ; preds = %dec_label_pc_100093d0
  %v1_100093e8 = xor i32 %arg2, -2143551488
  %v3_100093ec = icmp eq i32 %v1_100093e8, 29717
  br i1 %v3_100093ec, label %dec_label_pc_10009420, label %dec_label_pc_100093f4

dec_label_pc_100093f4:                            ; preds = %dec_label_pc_100093e8
  %v3_100093f8 = icmp eq i32 %v1_100093e8, 29718
  br i1 %v3_100093f8, label %dec_label_pc_10009428, label %dec_label_pc_10009430

dec_label_pc_10009404:                            ; preds = %dec_label_pc_100093d8
  store i32 ptrtoint (i32* @global_var_1000940c.293 to i32), i32* @lr, align 4
  %v2_10009408 = inttoptr i32 %arg3 to i32*
  %v3_10009408 = call i32 @function_10009e10(i32* %v2_10009408, i32 %arg1)
  br label %dec_label_pc_10009418

dec_label_pc_10009410:                            ; preds = %dec_label_pc_1000938c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10009414

dec_label_pc_10009414:                            ; preds = %dec_label_pc_10009428, %dec_label_pc_10009420, %dec_label_pc_10009410
  store i32 268473368, i32* @lr, align 4
  %v0_10009414 = call i32 @function_10009eac()
  br label %dec_label_pc_10009418

dec_label_pc_10009418:                            ; preds = %dec_label_pc_10009404, %dec_label_pc_10009414
  %storemerge = phi i32 [ %v0_10009414, %dec_label_pc_10009414 ], [ %v3_10009408, %dec_label_pc_10009404 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000945c

dec_label_pc_10009420:                            ; preds = %dec_label_pc_100093e8
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_10009414

dec_label_pc_10009428:                            ; preds = %dec_label_pc_100093f4
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_10009414

dec_label_pc_10009430:                            ; preds = %dec_label_pc_100093f4, %dec_label_pc_100093d8
  %v0_10009440 = call i32 @__asm_mfcr()
  %v1_10009444 = and i32 %v0_10009440, 268435456
  %v3_10009444 = icmp eq i32 %v1_10009444, 0
  store i32 %v0_10009440, i32* %r31.global-to-local, align 4
  br i1 %v3_10009444, label %dec_label_pc_1000945c, label %dec_label_pc_10009450

dec_label_pc_10009450:                            ; preds = %dec_label_pc_10009430
  %v0_10009450 = call i32 @function_10009c78()
  %v0_10009454 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009454 = inttoptr i32 %v0_10009450 to i32*
  store i32 %v0_10009454, i32* %v2_10009454, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000945c

dec_label_pc_1000945c:                            ; preds = %dec_label_pc_10009430, %dec_label_pc_10009418, %dec_label_pc_10009450
  %v0_10009460 = phi i32 [ %v0_10009440, %dec_label_pc_10009430 ], [ %storemerge, %dec_label_pc_10009418 ], [ -1, %dec_label_pc_10009450 ]
  ret i32 %v0_10009460

; uselistorder directives
  uselistorder i32 %arg2, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000945c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009418, { 1, 0 }
}

define i32 @function_10009474(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009474:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10009488 = load i32, i32* @r4, align 4
  %v1_10009488 = add i32 %v0_10009488, -12
  %v2_1000948c = icmp ugt i32 %v1_10009488, 2
  %v2_10009494 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009494, i32* %stack_var_-32, align 4
  br i1 %v2_1000948c, label %dec_label_pc_100094c0, label %dec_label_pc_100094b0

dec_label_pc_100094b0:                            ; preds = %dec_label_pc_10009474
  store i32 268473528, i32* @lr, align 4
  %v2_100094b4 = call i32 @function_100094f8(i32 3)
  store i32 %v2_100094b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094e0

dec_label_pc_100094c0:                            ; preds = %dec_label_pc_10009474
  %v0_100094c4 = call i32 @__asm_mfcr()
  %v1_100094c8 = and i32 %v0_100094c4, 268435456
  %v3_100094c8 = icmp eq i32 %v1_100094c8, 0
  store i32 %v0_100094c4, i32* %r31.global-to-local, align 4
  br i1 %v3_100094c8, label %dec_label_pc_100094e0, label %dec_label_pc_100094d4

dec_label_pc_100094d4:                            ; preds = %dec_label_pc_100094c0
  %v0_100094d4 = call i32 @function_10009c78()
  %v0_100094d8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094d8 = inttoptr i32 %v0_100094d4 to i32*
  store i32 %v0_100094d8, i32* %v2_100094d8, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100094e0

dec_label_pc_100094e0:                            ; preds = %dec_label_pc_100094c0, %dec_label_pc_100094b0, %dec_label_pc_100094d4
  %v0_100094e4 = phi i32 [ %v0_100094c4, %dec_label_pc_100094c0 ], [ %v2_100094b4, %dec_label_pc_100094b0 ], [ -1, %dec_label_pc_100094d4 ]
  ret i32 %v0_100094e4

; uselistorder directives
  uselistorder label %dec_label_pc_100094e0, { 2, 0, 1 }
}

define i32 @function_100094f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_100094f8:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_10009510 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10009510, i32* %stack_var_-32, align 4
  %v0_1000952c = call i32 @__asm_mfcr()
  %v1_10009530 = and i32 %v0_1000952c, 268435456
  %v3_10009530 = icmp eq i32 %v1_10009530, 0
  store i32 %v0_1000952c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009530, label %dec_label_pc_10009548, label %dec_label_pc_1000953c

dec_label_pc_1000953c:                            ; preds = %dec_label_pc_100094f8
  %v0_1000953c = call i32 @function_10009c78()
  %v0_10009540 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009540 = inttoptr i32 %v0_1000953c to i32*
  store i32 %v0_10009540, i32* %v2_10009540, align 4
  br label %dec_label_pc_10009548

dec_label_pc_10009548:                            ; preds = %dec_label_pc_100094f8, %dec_label_pc_1000953c
  %v0_10009558 = phi i32 [ %v0_1000952c, %dec_label_pc_100094f8 ], [ -1, %dec_label_pc_1000953c ]
  ret i32 %v0_10009558

; uselistorder directives
  uselistorder label %dec_label_pc_10009548, { 1, 0 }
}

define i32 @function_1000955c() local_unnamed_addr {
dec_label_pc_1000955c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009574 = call i32 @__asm_mfcr()
  %v1_10009578 = and i32 %v0_10009574, 268435456
  %v3_10009578 = icmp eq i32 %v1_10009578, 0
  store i32 %v0_10009574, i32* %r31.global-to-local, align 4
  br i1 %v3_10009578, label %dec_label_pc_10009590, label %dec_label_pc_10009584

dec_label_pc_10009584:                            ; preds = %dec_label_pc_1000955c
  %v0_10009584 = call i32 @function_10009c78()
  %v0_10009588 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009588 = inttoptr i32 %v0_10009584 to i32*
  store i32 %v0_10009588, i32* %v2_10009588, align 4
  br label %dec_label_pc_10009590

dec_label_pc_10009590:                            ; preds = %dec_label_pc_1000955c, %dec_label_pc_10009584
  %v0_100095a0 = phi i32 [ %v0_10009574, %dec_label_pc_1000955c ], [ -1, %dec_label_pc_10009584 ]
  ret i32 %v0_100095a0

; uselistorder directives
  uselistorder label %dec_label_pc_10009590, { 1, 0 }
}

define i32 @function_100095a4() local_unnamed_addr {
dec_label_pc_100095a4:
  %r31.global-to-local = alloca i32, align 4
  %v0_100095bc = call i32 @__asm_mfcr()
  %v1_100095c0 = and i32 %v0_100095bc, 268435456
  %v3_100095c0 = icmp eq i32 %v1_100095c0, 0
  store i32 %v0_100095bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100095c0, label %dec_label_pc_100095d8, label %dec_label_pc_100095cc

dec_label_pc_100095cc:                            ; preds = %dec_label_pc_100095a4
  %v0_100095cc = call i32 @function_10009c78()
  %v0_100095d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100095d0 = inttoptr i32 %v0_100095cc to i32*
  store i32 %v0_100095d0, i32* %v2_100095d0, align 4
  br label %dec_label_pc_100095d8

dec_label_pc_100095d8:                            ; preds = %dec_label_pc_100095a4, %dec_label_pc_100095cc
  %v0_100095e8 = phi i32 [ %v0_100095bc, %dec_label_pc_100095a4 ], [ -1, %dec_label_pc_100095cc ]
  ret i32 %v0_100095e8

; uselistorder directives
  uselistorder label %dec_label_pc_100095d8, { 1, 0 }
}

define i32 @function_100095ec() local_unnamed_addr {
dec_label_pc_100095ec:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009604 = call i32 @__asm_mfcr()
  %v1_10009608 = and i32 %v0_10009604, 268435456
  %v3_10009608 = icmp eq i32 %v1_10009608, 0
  store i32 %v0_10009604, i32* %r31.global-to-local, align 4
  br i1 %v3_10009608, label %dec_label_pc_10009620, label %dec_label_pc_10009614

dec_label_pc_10009614:                            ; preds = %dec_label_pc_100095ec
  %v0_10009614 = call i32 @function_10009c78()
  %v0_10009618 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009618 = inttoptr i32 %v0_10009614 to i32*
  store i32 %v0_10009618, i32* %v2_10009618, align 4
  br label %dec_label_pc_10009620

dec_label_pc_10009620:                            ; preds = %dec_label_pc_100095ec, %dec_label_pc_10009614
  %v0_10009630 = phi i32 [ %v0_10009604, %dec_label_pc_100095ec ], [ -1, %dec_label_pc_10009614 ]
  ret i32 %v0_10009630

; uselistorder directives
  uselistorder label %dec_label_pc_10009620, { 1, 0 }
}

define i32 @function_10009634() local_unnamed_addr {
dec_label_pc_10009634:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000964c = call i32 @__asm_mfcr()
  %v1_10009650 = and i32 %v0_1000964c, 268435456
  %v3_10009650 = icmp eq i32 %v1_10009650, 0
  store i32 %v0_1000964c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009650, label %dec_label_pc_10009668, label %dec_label_pc_1000965c

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_10009634
  %v0_1000965c = call i32 @function_10009c78()
  %v0_10009660 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009660 = inttoptr i32 %v0_1000965c to i32*
  store i32 %v0_10009660, i32* %v2_10009660, align 4
  br label %dec_label_pc_10009668

dec_label_pc_10009668:                            ; preds = %dec_label_pc_10009634, %dec_label_pc_1000965c
  %v0_10009678 = phi i32 [ %v0_1000964c, %dec_label_pc_10009634 ], [ -1, %dec_label_pc_1000965c ]
  ret i32 %v0_10009678

; uselistorder directives
  uselistorder label %dec_label_pc_10009668, { 1, 0 }
}

define i32 @function_1000967c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000967c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009694 = call i32 @__asm_mfcr()
  %v1_10009698 = and i32 %v0_10009694, 268435456
  %v3_10009698 = icmp eq i32 %v1_10009698, 0
  store i32 %v0_10009694, i32* %r31.global-to-local, align 4
  br i1 %v3_10009698, label %dec_label_pc_100096b0, label %dec_label_pc_100096a4

dec_label_pc_100096a4:                            ; preds = %dec_label_pc_1000967c
  %v0_100096a4 = call i32 @function_10009c78()
  %v0_100096a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100096a8 = inttoptr i32 %v0_100096a4 to i32*
  store i32 %v0_100096a8, i32* %v2_100096a8, align 4
  br label %dec_label_pc_100096b0

dec_label_pc_100096b0:                            ; preds = %dec_label_pc_1000967c, %dec_label_pc_100096a4
  %v0_100096c0 = phi i32 [ %v0_10009694, %dec_label_pc_1000967c ], [ -1, %dec_label_pc_100096a4 ]
  ret i32 %v0_100096c0

; uselistorder directives
  uselistorder label %dec_label_pc_100096b0, { 1, 0 }
}

define i32 @function_100096c4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_100096c4:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_100096d8 = and i32 %arg2, 64
  %v3_100096d8 = icmp eq i32 %v1_100096d8, 0
  br i1 %v3_100096d8, label %dec_label_pc_10009704, label %dec_label_pc_100096e8

dec_label_pc_100096e8:                            ; preds = %dec_label_pc_100096c4
  %v2_100096f0 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100096f0, i32* %stack_var_-32, align 4
  %v0_10009700 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10009704

dec_label_pc_10009704:                            ; preds = %dec_label_pc_100096c4, %dec_label_pc_100096e8
  %v0_10009704 = phi i32 [ 0, %dec_label_pc_100096c4 ], [ %v0_10009700, %dec_label_pc_100096e8 ]
  store i32 %v0_10009704, i32* @r5, align 4
  %v0_1000970c = call i32 @__asm_mfcr()
  %v1_10009710 = and i32 %v0_1000970c, 268435456
  %v3_10009710 = icmp eq i32 %v1_10009710, 0
  store i32 %v0_1000970c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009710, label %dec_label_pc_10009728, label %dec_label_pc_1000971c

dec_label_pc_1000971c:                            ; preds = %dec_label_pc_10009704
  %v0_1000971c = call i32 @function_10009c78()
  %v0_10009720 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009720 = inttoptr i32 %v0_1000971c to i32*
  store i32 %v0_10009720, i32* %v2_10009720, align 4
  br label %dec_label_pc_10009728

dec_label_pc_10009728:                            ; preds = %dec_label_pc_10009704, %dec_label_pc_1000971c
  %v0_10009738 = phi i32 [ %v0_1000970c, %dec_label_pc_10009704 ], [ -1, %dec_label_pc_1000971c ]
  ret i32 %v0_10009738

; uselistorder directives
  uselistorder label %dec_label_pc_10009728, { 1, 0 }
  uselistorder label %dec_label_pc_10009704, { 1, 0 }
}

define i32 @function_1000973c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000973c:
  store i32 %arg1, i32* @r5, align 4
  %v2_10009748 = call i32 @function_100096c4(i32 577, i32 577)
  ret i32 %v2_10009748
}

define i32 @function_1000974c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000974c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009764 = call i32 @__asm_mfcr()
  %v1_10009768 = and i32 %v0_10009764, 268435456
  %v3_10009768 = icmp eq i32 %v1_10009768, 0
  store i32 %v0_10009764, i32* %r31.global-to-local, align 4
  br i1 %v3_10009768, label %dec_label_pc_10009780, label %dec_label_pc_10009774

dec_label_pc_10009774:                            ; preds = %dec_label_pc_1000974c
  %v0_10009774 = call i32 @function_10009c78()
  %v0_10009778 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009778 = inttoptr i32 %v0_10009774 to i32*
  store i32 %v0_10009778, i32* %v2_10009778, align 4
  br label %dec_label_pc_10009780

dec_label_pc_10009780:                            ; preds = %dec_label_pc_1000974c, %dec_label_pc_10009774
  %v0_10009790 = phi i32 [ %v0_10009764, %dec_label_pc_1000974c ], [ -1, %dec_label_pc_10009774 ]
  ret i32 %v0_10009790

; uselistorder directives
  uselistorder label %dec_label_pc_10009780, { 1, 0 }
}

define i32 @function_10009794(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009794:
  %r31.global-to-local = alloca i32, align 4
  %v0_100097ac = call i32 @__asm_mfcr()
  %v1_100097b0 = and i32 %v0_100097ac, 268435456
  %v3_100097b0 = icmp eq i32 %v1_100097b0, 0
  store i32 %v0_100097ac, i32* %r31.global-to-local, align 4
  br i1 %v3_100097b0, label %dec_label_pc_100097c8, label %dec_label_pc_100097bc

dec_label_pc_100097bc:                            ; preds = %dec_label_pc_10009794
  %v0_100097bc = call i32 @function_10009c78()
  %v0_100097c0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100097c0 = inttoptr i32 %v0_100097bc to i32*
  store i32 %v0_100097c0, i32* %v2_100097c0, align 4
  br label %dec_label_pc_100097c8

dec_label_pc_100097c8:                            ; preds = %dec_label_pc_10009794, %dec_label_pc_100097bc
  %v0_100097d8 = phi i32 [ %v0_100097ac, %dec_label_pc_10009794 ], [ -1, %dec_label_pc_100097bc ]
  ret i32 %v0_100097d8

; uselistorder directives
  uselistorder label %dec_label_pc_100097c8, { 1, 0 }
}

define i32 @function_100097dc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100097dc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100097f4 = call i32 @__asm_mfcr()
  %v1_100097f8 = and i32 %v0_100097f4, 268435456
  %v3_100097f8 = icmp eq i32 %v1_100097f8, 0
  store i32 %v0_100097f4, i32* %r31.global-to-local, align 4
  br i1 %v3_100097f8, label %dec_label_pc_10009810, label %dec_label_pc_10009804

dec_label_pc_10009804:                            ; preds = %dec_label_pc_100097dc
  %v0_10009804 = call i32 @function_10009c78()
  %v0_10009808 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009808 = inttoptr i32 %v0_10009804 to i32*
  store i32 %v0_10009808, i32* %v2_10009808, align 4
  br label %dec_label_pc_10009810

dec_label_pc_10009810:                            ; preds = %dec_label_pc_100097dc, %dec_label_pc_10009804
  %v0_10009820 = phi i32 [ %v0_100097f4, %dec_label_pc_100097dc ], [ -1, %dec_label_pc_10009804 ]
  ret i32 %v0_10009820

; uselistorder directives
  uselistorder label %dec_label_pc_10009810, { 1, 0 }
}

define i32 @function_10009824(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_10009824:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000983c = call i32 @__asm_mfcr()
  %v1_10009840 = and i32 %v0_1000983c, 268435456
  %v3_10009840 = icmp eq i32 %v1_10009840, 0
  store i32 %v0_1000983c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009840, label %dec_label_pc_10009858, label %dec_label_pc_1000984c

dec_label_pc_1000984c:                            ; preds = %dec_label_pc_10009824
  %v0_1000984c = call i32 @function_10009c78()
  %v0_10009850 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009850 = inttoptr i32 %v0_1000984c to i32*
  store i32 %v0_10009850, i32* %v2_10009850, align 4
  br label %dec_label_pc_10009858

dec_label_pc_10009858:                            ; preds = %dec_label_pc_10009824, %dec_label_pc_1000984c
  %v0_10009868 = phi i32 [ %v0_1000983c, %dec_label_pc_10009824 ], [ -1, %dec_label_pc_1000984c ]
  ret i32 %v0_10009868

; uselistorder directives
  uselistorder label %dec_label_pc_10009858, { 1, 0 }
}

define i32 @function_1000986c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000986c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009884 = call i32 @__asm_mfcr()
  %v1_10009888 = and i32 %v0_10009884, 268435456
  %v3_10009888 = icmp eq i32 %v1_10009888, 0
  store i32 %v0_10009884, i32* %r31.global-to-local, align 4
  br i1 %v3_10009888, label %dec_label_pc_100098a0, label %dec_label_pc_10009894

dec_label_pc_10009894:                            ; preds = %dec_label_pc_1000986c
  %v0_10009894 = call i32 @function_10009c78()
  %v0_10009898 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009898 = inttoptr i32 %v0_10009894 to i32*
  store i32 %v0_10009898, i32* %v2_10009898, align 4
  br label %dec_label_pc_100098a0

dec_label_pc_100098a0:                            ; preds = %dec_label_pc_1000986c, %dec_label_pc_10009894
  %v0_100098b0 = phi i32 [ %v0_10009884, %dec_label_pc_1000986c ], [ -1, %dec_label_pc_10009894 ]
  ret i32 %v0_100098b0

; uselistorder directives
  uselistorder label %dec_label_pc_100098a0, { 1, 0 }
}

define i32 @function_100098b4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100098b4:
  %r31.global-to-local = alloca i32, align 4
  %v3_100098b4 = icmp eq i32 %arg2, 0
  br i1 %v3_100098b4, label %dec_label_pc_100098f4, label %dec_label_pc_100098dc

dec_label_pc_100098dc:                            ; preds = %dec_label_pc_100098b4
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100098f4, label %dec_label_pc_100098e4

dec_label_pc_100098e4:                            ; preds = %dec_label_pc_100098dc
  %v0_100098e4 = call i32 @function_10009c78()
  %v2_100098ec = inttoptr i32 %v0_100098e4 to i32*
  store i32 22, i32* %v2_100098ec, align 4
  %v0_10009918.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009914

dec_label_pc_100098f4:                            ; preds = %dec_label_pc_100098dc, %dec_label_pc_100098b4
  %v0_100098f8 = call i32 @__asm_mfcr()
  %v1_100098fc = and i32 %v0_100098f8, 268435456
  %v3_100098fc = icmp eq i32 %v1_100098fc, 0
  store i32 %v0_100098f8, i32* %r31.global-to-local, align 4
  br i1 %v3_100098fc, label %dec_label_pc_10009914, label %dec_label_pc_10009908

dec_label_pc_10009908:                            ; preds = %dec_label_pc_100098f4
  %v0_10009908 = call i32 @function_10009c78()
  %v0_1000990c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000990c = inttoptr i32 %v0_10009908 to i32*
  store i32 %v0_1000990c, i32* %v2_1000990c, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009914

dec_label_pc_10009914:                            ; preds = %dec_label_pc_100098f4, %dec_label_pc_100098e4, %dec_label_pc_10009908
  %v0_10009918 = phi i32 [ %v0_100098f8, %dec_label_pc_100098f4 ], [ %v0_10009918.pre, %dec_label_pc_100098e4 ], [ -1, %dec_label_pc_10009908 ]
  ret i32 %v0_10009918

; uselistorder directives
  uselistorder label %dec_label_pc_10009914, { 2, 0, 1 }
}

define i32 @function_1000992c() local_unnamed_addr {
dec_label_pc_1000992c:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009944 = call i32 @__asm_mfcr()
  %v1_10009948 = and i32 %v0_10009944, 268435456
  %v3_10009948 = icmp eq i32 %v1_10009948, 0
  store i32 %v0_10009944, i32* %r31.global-to-local, align 4
  br i1 %v3_10009948, label %dec_label_pc_10009960, label %dec_label_pc_10009954

dec_label_pc_10009954:                            ; preds = %dec_label_pc_1000992c
  %v0_10009954 = call i32 @function_10009c78()
  %v0_10009958 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009958 = inttoptr i32 %v0_10009954 to i32*
  store i32 %v0_10009958, i32* %v2_10009958, align 4
  br label %dec_label_pc_10009960

dec_label_pc_10009960:                            ; preds = %dec_label_pc_1000992c, %dec_label_pc_10009954
  %v0_10009970 = phi i32 [ %v0_10009944, %dec_label_pc_1000992c ], [ -1, %dec_label_pc_10009954 ]
  ret i32 %v0_10009970

; uselistorder directives
  uselistorder label %dec_label_pc_10009960, { 1, 0 }
}

define i32 @function_10009974(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009974:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000998c = call i32 @__asm_mfcr()
  %v1_10009990 = and i32 %v0_1000998c, 268435456
  %v3_10009990 = icmp eq i32 %v1_10009990, 0
  store i32 %v0_1000998c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009990, label %dec_label_pc_100099a8, label %dec_label_pc_1000999c

dec_label_pc_1000999c:                            ; preds = %dec_label_pc_10009974
  %v0_1000999c = call i32 @function_10009c78()
  %v0_100099a0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100099a0 = inttoptr i32 %v0_1000999c to i32*
  store i32 %v0_100099a0, i32* %v2_100099a0, align 4
  br label %dec_label_pc_100099a8

dec_label_pc_100099a8:                            ; preds = %dec_label_pc_10009974, %dec_label_pc_1000999c
  %v0_100099b8 = phi i32 [ %v0_1000998c, %dec_label_pc_10009974 ], [ -1, %dec_label_pc_1000999c ]
  ret i32 %v0_100099b8

; uselistorder directives
  uselistorder label %dec_label_pc_100099a8, { 1, 0 }
}

define i32 @function_100099bc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_100099bc:
  %r31.global-to-local = alloca i32, align 4
  %v0_100099d4 = call i32 @__asm_mfcr()
  %v1_100099d8 = and i32 %v0_100099d4, 268435456
  %v3_100099d8 = icmp eq i32 %v1_100099d8, 0
  store i32 %v0_100099d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100099d8, label %dec_label_pc_100099f0, label %dec_label_pc_100099e4

dec_label_pc_100099e4:                            ; preds = %dec_label_pc_100099bc
  %v0_100099e4 = call i32 @function_10009c78()
  %v0_100099e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100099e8 = inttoptr i32 %v0_100099e4 to i32*
  store i32 %v0_100099e8, i32* %v2_100099e8, align 4
  br label %dec_label_pc_100099f0

dec_label_pc_100099f0:                            ; preds = %dec_label_pc_100099bc, %dec_label_pc_100099e4
  %v0_10009a00 = phi i32 [ %v0_100099d4, %dec_label_pc_100099bc ], [ -1, %dec_label_pc_100099e4 ]
  ret i32 %v0_10009a00

; uselistorder directives
  uselistorder label %dec_label_pc_100099f0, { 1, 0 }
}

define i32 @function_10009a04(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009a04:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009a20 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009a20, i32* @r30, align 4
  %v2_10009a28 = load i32, i32* %arg1, align 4
  store i32 %v2_10009a20, i32* @r3, align 4
  %v3_10009a34 = icmp eq i32 %v2_10009a28, -1
  br i1 %v3_10009a34, label %dec_label_pc_10009a3c, label %dec_label_pc_10009a50

dec_label_pc_10009a3c:                            ; preds = %dec_label_pc_10009a04
  %v0_10009a3c = call i32 @function_10009c78()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10009a48 = inttoptr i32 %v0_10009a3c to i32*
  store i32 9, i32* %v2_10009a48, align 4
  %v0_10009a94.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009a90

dec_label_pc_10009a50:                            ; preds = %dec_label_pc_10009a04
  %v3_10009a50 = call i32 @function_1000afe0(i32 %v2_10009a20, i32 ptrtoint ([3 x i8]* @global_var_1000afd8.295 to i32))
  %v0_10009a58 = call i32 @function_1000afd8()
  %v0_10009a60 = load i32, i32* @r31, align 4
  %v1_10009a60 = inttoptr i32 %v0_10009a60 to i32*
  %v2_10009a60 = load i32, i32* %v1_10009a60, align 4
  store i32 %v2_10009a60, i32* @r29, align 4
  store i32 -1, i32* %v1_10009a60, align 4
  store i32 %v2_10009a20, i32* @r3, align 4
  %v2_10009a70 = call i32 @function_1000afe0(i32 %v2_10009a20, i32 1)
  %v0_10009a74 = load i32, i32* @r31, align 4
  %v1_10009a74 = add i32 %v0_10009a74, 12
  %v2_10009a74 = inttoptr i32 %v1_10009a74 to i32*
  %v3_10009a74 = load i32, i32* %v2_10009a74, align 4
  store i32 %v3_10009a74, i32* @r3, align 4
  store i32 268475004, i32* @lr, align 4
  %v0_10009a78 = call i32 @function_1000a644()
  %v0_10009a7c = load i32, i32* @r31, align 4
  store i32 %v0_10009a7c, i32* @r3, align 4
  store i32 268475012, i32* @lr, align 4
  %v0_10009a80 = call i32 @function_1000a644()
  store i32 268475020, i32* @lr, align 4
  %v0_10009a88 = call i32 @function_1000955c()
  store i32 %v0_10009a88, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009a90

dec_label_pc_10009a90:                            ; preds = %dec_label_pc_10009a3c, %dec_label_pc_10009a50
  %v0_10009a94 = phi i32 [ %v0_10009a94.pre, %dec_label_pc_10009a3c ], [ %v0_10009a88, %dec_label_pc_10009a50 ]
  ret i32 %v0_10009a94

; uselistorder directives
  uselistorder i32 %v2_10009a20, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_10009a90, { 1, 0 }
}

define i32 @function_10009aa8(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009aa8:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  %v0_10009aa8 = load i32, i32* @lr, align 4
  store i32 %v0_10009aa8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 268475080, i32* @lr, align 4
  %v2_10009ac4 = call i32 @function_100096c4(i32 18432, i32 18432)
  store i32 %v2_10009ac4, i32* @r29, align 4
  %v1_10009ac8 = icmp slt i32 %v2_10009ac4, 0
  br i1 %v1_10009ac8, label %dec_label_pc_10009ba0, label %dec_label_pc_10009ad0

dec_label_pc_10009ad0:                            ; preds = %dec_label_pc_10009aa8
  %v2_10009ad0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10009ad0, i32* @r4, align 4
  store i32 268475096, i32* @lr, align 4
  %v1_10009ad4 = call i32 @function_1000b3b4(i32 %v2_10009ad0)
  %v1_10009ad8 = icmp slt i32 %v1_10009ad4, 0
  br i1 %v1_10009ad8, label %dec_label_pc_10009afc, label %dec_label_pc_10009ae0

dec_label_pc_10009ae0:                            ; preds = %dec_label_pc_10009ad0
  %v0_10009ae0 = load i32, i32* @r29, align 4
  store i32 2, i32* @r4, align 4
  store i32 268475124, i32* @lr, align 4
  %v2_10009af0 = call i32 @function_10009474(i32 %v0_10009ae0)
  %tmp5 = icmp sgt i32 %v2_10009af0, -1
  br i1 %tmp5, label %dec_label_pc_10009b1c, label %dec_label_pc_10009afc

dec_label_pc_10009afc:                            ; preds = %dec_label_pc_10009ae0, %dec_label_pc_10009ad0
  %v0_10009afc = call i32 @function_10009c78()
  store i32 0, i32* @r31, align 4
  store i32 %v0_10009afc, i32* @r28, align 4
  %v1_10009b0c = inttoptr i32 %v0_10009afc to i32*
  %v2_10009b0c = load i32, i32* %v1_10009b0c, align 4
  store i32 %v2_10009b0c, i32* @r29, align 4
  store i32 268475156, i32* @lr, align 4
  %v0_10009b10 = call i32 @function_1000955c()
  %v0_10009b14 = load i32, i32* @r29, align 4
  %v1_10009b14 = load i32, i32* @r28, align 4
  %v2_10009b14 = inttoptr i32 %v1_10009b14 to i32*
  store i32 %v0_10009b14, i32* %v2_10009b14, align 4
  br label %dec_label_pc_10009ba0

dec_label_pc_10009b1c:                            ; preds = %dec_label_pc_10009ae0
  store i32 48, i32* @r3, align 4
  store i32 268475172, i32* @lr, align 4
  %v0_10009b20 = call i32 @function_1000a47c()
  store i32 %v0_10009b20, i32* %r31.global-to-local, align 4
  %v3_10009b24 = icmp eq i32 %v0_10009b20, 0
  br i1 %v3_10009b24, label %dec_label_pc_10009b78, label %dec_label_pc_10009b2c

dec_label_pc_10009b2c:                            ; preds = %dec_label_pc_10009b1c
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10009b30 = load i32, i32* @r29, align 4
  %v2_10009b30 = inttoptr i32 %v0_10009b20 to i32*
  store i32 %v0_10009b30, i32* %v2_10009b30, align 4
  %v0_10009b34 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009b34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b34 = add i32 %v1_10009b34, 4
  %v3_10009b34 = inttoptr i32 %v2_10009b34 to i32*
  store i32 %v0_10009b34, i32* %v3_10009b34, align 4
  %v0_10009b38 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009b38 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b38 = add i32 %v1_10009b38, 16
  %v3_10009b38 = inttoptr i32 %v2_10009b38 to i32*
  store i32 %v0_10009b38, i32* %v3_10009b38, align 4
  %v0_10009b3c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009b3c = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b3c = add i32 %v1_10009b3c, 8
  %v3_10009b3c = inttoptr i32 %v2_10009b3c to i32*
  store i32 %v0_10009b3c, i32* %v3_10009b3c, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_10009b44 = icmp ugt i32 %tmp, 511
  %v1_10009b48 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b48 = add i32 %v1_10009b48, 20
  %v3_10009b48 = inttoptr i32 %v2_10009b48 to i32*
  store i32 %tmp, i32* %v3_10009b48, align 4
  br i1 %v2_10009b44, label %dec_label_pc_10009b58, label %dec_label_pc_10009b50

dec_label_pc_10009b50:                            ; preds = %dec_label_pc_10009b2c
  store i32 512, i32* %r0.global-to-local, align 4
  %v1_10009b54 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009b54 = add i32 %v1_10009b54, 20
  %v3_10009b54 = inttoptr i32 %v2_10009b54 to i32*
  store i32 512, i32* %v3_10009b54, align 4
  br label %dec_label_pc_10009b58

dec_label_pc_10009b58:                            ; preds = %dec_label_pc_10009b2c, %dec_label_pc_10009b50
  %v0_10009b58 = load i32, i32* %r31.global-to-local, align 4
  %v1_10009b58 = add i32 %v0_10009b58, 20
  %v2_10009b58 = inttoptr i32 %v1_10009b58 to i32*
  %v3_10009b58 = load i32, i32* %v2_10009b58, align 4
  store i32 268475236, i32* @lr, align 4
  %v2_10009b60 = call i32 @function_1000a5d4(i32 1, i32 %v3_10009b58)
  %v3_10009b64 = icmp eq i32 %v2_10009b60, 0
  %v1_10009b68 = load i32, i32* @r31, align 4
  %v2_10009b68 = add i32 %v1_10009b68, 12
  %v3_10009b68 = inttoptr i32 %v2_10009b68 to i32*
  store i32 %v2_10009b60, i32* %v3_10009b68, align 4
  br i1 %v3_10009b64, label %dec_label_pc_10009b70, label %dec_label_pc_10009b94

dec_label_pc_10009b70:                            ; preds = %dec_label_pc_10009b58
  %v0_10009b70 = load i32, i32* @r31, align 4
  store i32 %v0_10009b70, i32* @r3, align 4
  store i32 268475256, i32* @lr, align 4
  %v0_10009b74 = call i32 @function_1000a644()
  br label %dec_label_pc_10009b78

dec_label_pc_10009b78:                            ; preds = %dec_label_pc_10009b1c, %dec_label_pc_10009b70
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10009b84.298 to i32), i32* @lr, align 4
  %v0_10009b80 = call i32 @function_1000955c()
  %v0_10009b84 = call i32 @function_10009c78()
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_10009b8c = inttoptr i32 %v0_10009b84 to i32*
  store i32 12, i32* %v2_10009b8c, align 4
  br label %dec_label_pc_10009ba0

dec_label_pc_10009b94:                            ; preds = %dec_label_pc_10009b58
  %v0_10009b9c = call i32 @function_1000afd8()
  br label %dec_label_pc_10009ba0

dec_label_pc_10009ba0:                            ; preds = %dec_label_pc_10009aa8, %dec_label_pc_10009b78, %dec_label_pc_10009afc, %dec_label_pc_10009b94
  store i32 %v0_10009aa8, i32* %r0.global-to-local, align 4
  %v0_10009ba4 = load i32, i32* @r31, align 4
  ret i32 %v0_10009ba4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32)* @function_1000a5d4, { 42, 24, 26, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 25, 0, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 512, { 6, 8, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @function_1000955c, { 20, 19, 18, 34, 33, 32, 31, 30, 29, 2, 1, 0, 28, 27, 26, 25, 24, 23, 22, 21, 17, 4, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 3 }
  uselistorder i32 18432, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10009b78, { 1, 0 }
  uselistorder label %dec_label_pc_10009b58, { 1, 0 }
}

define i32 @function_10009bb8(i32* %arg1) local_unnamed_addr {
dec_label_pc_10009bb8:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10009bbc = load i32, i32* @lr, align 4
  store i32 %v0_10009bbc, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009bd4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009bd4, i32* @r3, align 4
  %v3_10009be0 = call i32 @function_1000afe0(i32 %v2_10009bd4, i32 ptrtoint ([3 x i8]* @global_var_1000afd8.295 to i32))
  %v0_10009be8 = call i32 @function_1000afd8()
  br label %dec_label_pc_10009bec

dec_label_pc_10009bec:                            ; preds = %dec_label_pc_10009c28, %dec_label_pc_10009bb8
  %v0_10009bec = load i32, i32* @r31, align 4
  %v1_10009bec = add i32 %v0_10009bec, 4
  %v2_10009bec = inttoptr i32 %v1_10009bec to i32*
  %v3_10009bec = load i32, i32* %v2_10009bec, align 4
  store i32 %v3_10009bec, i32* %r0.global-to-local, align 4
  %v1_10009bf0 = add i32 %v0_10009bec, 8
  %v2_10009bf0 = inttoptr i32 %v1_10009bf0 to i32*
  %v3_10009bf0 = load i32, i32* %v2_10009bf0, align 4
  store i32 %v3_10009bf0, i32* %r9.global-to-local, align 4
  %v3_10009bf4 = icmp ugt i32 %v3_10009bf0, %v3_10009bec
  br i1 %v3_10009bf4, label %dec_label_pc_10009c28, label %dec_label_pc_10009bfc

dec_label_pc_10009bfc:                            ; preds = %dec_label_pc_10009bec
  %v1_10009bfc = inttoptr i32 %v0_10009bec to i32*
  %v2_10009bfc = load i32, i32* %v1_10009bfc, align 4
  store i32 %v2_10009bfc, i32* @r3, align 4
  %v1_10009c00 = add i32 %v0_10009bec, 12
  %v2_10009c00 = inttoptr i32 %v1_10009c00 to i32*
  %v3_10009c00 = load i32, i32* %v2_10009c00, align 4
  %v1_10009c04 = add i32 %v0_10009bec, 20
  %v2_10009c04 = inttoptr i32 %v1_10009c04 to i32*
  %v3_10009c04 = load i32, i32* %v2_10009c04, align 4
  store i32 %v3_10009c04, i32* @r5, align 4
  store i32 268475404, i32* @lr, align 4
  %v4_10009c08 = inttoptr i32 %v2_10009bfc to i32*
  %v5_10009c08 = call i32 @function_1000b428(i32* %v4_10009c08, i32 %v3_10009c00, i32 %v3_10009c04, i32 %v3_10009bf0)
  %v2_10009c0c = icmp sgt i32 %v5_10009c08, 0
  br i1 %v2_10009c0c, label %dec_label_pc_10009c1c, label %dec_label_pc_10009c14

dec_label_pc_10009c14:                            ; preds = %dec_label_pc_10009bfc
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10009c54

dec_label_pc_10009c1c:                            ; preds = %dec_label_pc_10009bfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10009c20 = load i32, i32* @r31, align 4
  %v2_10009c20 = add i32 %v1_10009c20, 8
  %v3_10009c20 = inttoptr i32 %v2_10009c20 to i32*
  store i32 %v5_10009c08, i32* %v3_10009c20, align 4
  %v0_10009c24 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009c24 = load i32, i32* @r31, align 4
  %v2_10009c24 = add i32 %v1_10009c24, 4
  %v3_10009c24 = inttoptr i32 %v2_10009c24 to i32*
  store i32 %v0_10009c24, i32* %v3_10009c24, align 4
  %v0_10009c28.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009c28

dec_label_pc_10009c28:                            ; preds = %dec_label_pc_10009bec, %dec_label_pc_10009c1c
  %v1_10009c3c = phi i32 [ %v0_10009bec, %dec_label_pc_10009bec ], [ %v0_10009c28.pre, %dec_label_pc_10009c1c ]
  %v1_10009c28 = add i32 %v1_10009c3c, 4
  %v2_10009c28 = inttoptr i32 %v1_10009c28 to i32*
  %v3_10009c28 = load i32, i32* %v2_10009c28, align 4
  store i32 %v3_10009c28, i32* %r9.global-to-local, align 4
  %v1_10009c2c = add i32 %v1_10009c3c, 12
  %v2_10009c2c = inttoptr i32 %v1_10009c2c to i32*
  %v3_10009c2c = load i32, i32* %v2_10009c2c, align 4
  store i32 %v3_10009c2c, i32* %r11.global-to-local, align 4
  %v2_10009c30 = add i32 %v3_10009c2c, %v3_10009c28
  store i32 %v2_10009c30, i32* @r29, align 4
  %v1_10009c34 = add i32 %v2_10009c30, 8
  %v2_10009c34 = inttoptr i32 %v1_10009c34 to i16*
  %v3_10009c34 = load i16, i16* %v2_10009c34, align 2
  %v4_10009c34 = zext i16 %v3_10009c34 to i32
  %v2_10009c38 = add i32 %v4_10009c34, %v3_10009c28
  store i32 %v2_10009c38, i32* %r0.global-to-local, align 4
  store i32 %v2_10009c38, i32* %v2_10009c28, align 4
  %v0_10009c40 = load i32, i32* @r29, align 4
  %v1_10009c40 = add i32 %v0_10009c40, 4
  %v2_10009c40 = inttoptr i32 %v1_10009c40 to i32*
  %v3_10009c40 = load i32, i32* %v2_10009c40, align 4
  store i32 %v3_10009c40, i32* %r0.global-to-local, align 4
  %v1_10009c44 = load i32, i32* @r31, align 4
  %v2_10009c44 = add i32 %v1_10009c44, 16
  %v3_10009c44 = inttoptr i32 %v2_10009c44 to i32*
  store i32 %v3_10009c40, i32* %v3_10009c44, align 4
  %v0_10009c48 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009c48 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009c48 = add i32 %v1_10009c48, %v0_10009c48
  %v3_10009c48 = inttoptr i32 %v2_10009c48 to i32*
  %v4_10009c48 = load i32, i32* %v3_10009c48, align 4
  store i32 %v4_10009c48, i32* %r0.global-to-local, align 4
  %v3_10009c4c = icmp eq i32 %v4_10009c48, 0
  br i1 %v3_10009c4c, label %dec_label_pc_10009bec, label %dec_label_pc_10009c54

dec_label_pc_10009c54:                            ; preds = %dec_label_pc_10009c28, %dec_label_pc_10009c14
  store i32 %v2_10009bd4, i32* @r3, align 4
  %v2_10009c5c = call i32 @function_1000afe0(i32 %v2_10009bd4, i32 1)
  store i32 %v0_10009bbc, i32* %r0.global-to-local, align 4
  %v0_10009c64 = load i32, i32* @r29, align 4
  ret i32 %v0_10009c64

; uselistorder directives
  uselistorder i32 %v1_10009c3c, { 1, 0 }
  uselistorder i32 %v0_10009bec, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_10009bd4, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10009c28, { 1, 0 }
}

define i32 @function_10009c78() local_unnamed_addr {
dec_label_pc_10009c78:
  ret i32 ptrtoint (i32* @global_var_1001c6f4.300 to i32)
}

define i32 @function_10009c84(i32 %arg1) local_unnamed_addr {
dec_label_pc_10009c84:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_10009c8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268475544, i32* @lr, align 4
  %v1_10009c94 = call i32 @function_1000b868(i32 %v2_10009c8c)
  %v3_10009c9c = load i32, i32* %stack_var_-24, align 4
  %v2_10009ca0 = add i32 %v3_10009c9c, %tmp
  %v1_10009ca8 = mul i32 %v2_10009ca0, 10000
  %v1_10009cb4 = and i32 %v1_10009ca8, 2147483632
  ret i32 %v1_10009cb4
}

define i32 @function_10009cbc(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009cbc:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_10009cbc = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* @r11, align 4
  br i1 %v2_10009cbc, label %dec_label_pc_10009cd0, label %dec_label_pc_10009ccc

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009cbc
  %v0_10009ccc = call i32 @function_1000ba2c()
  store i32 %v0_10009ccc, i32* @r3, align 4
  br label %dec_label_pc_10009cd0

dec_label_pc_10009cd0:                            ; preds = %dec_label_pc_10009cbc, %dec_label_pc_10009ccc
  %v1_10009cd0 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009cd0, i32* %r9.global-to-local, align 4
  %v4_10009cd0 = icmp eq i32 %v1_10009cd0, 0
  %v2_10009cd4 = add i32 %arg3, %arg2
  store i32 %v2_10009cd4, i32* %r4.global-to-local, align 4
  %v0_10009cd8 = load i32, i32* @r3, align 4
  %v2_10009cd8 = add i32 %v0_10009cd8, %arg3
  store i32 %v2_10009cd8, i32* %r10.global-to-local, align 4
  br i1 %v4_10009cd0, label %dec_label_pc_10009d00, label %dec_label_pc_10009ce0

dec_label_pc_10009ce0:                            ; preds = %dec_label_pc_10009cd0
  %v1_10009ce0 = urem i32 %v2_10009cd8, 4
  %v3_10009ce0 = icmp eq i32 %v1_10009ce0, 0
  br i1 %v3_10009ce0, label %dec_label_pc_10009ce8, label %dec_label_pc_10009d34

dec_label_pc_10009ce8:                            ; preds = %dec_label_pc_10009d4c.dec_label_pc_10009ce8_crit_edge, %dec_label_pc_10009ce0
  %v1_10009cf4.pre = phi i32 [ %v1_10009cf4.pre.pre, %dec_label_pc_10009d4c.dec_label_pc_10009ce8_crit_edge ], [ %v2_10009cd8, %dec_label_pc_10009ce0 ]
  %v0_10009ce8 = phi i32 [ %v1_10009d4c, %dec_label_pc_10009d4c.dec_label_pc_10009ce8_crit_edge ], [ %v1_10009cd0, %dec_label_pc_10009ce0 ]
  store i32 %v0_10009ce8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009cec

dec_label_pc_10009cec:                            ; preds = %dec_label_pc_10009cec, %dec_label_pc_10009ce8
  %v1_10009cf4 = phi i32 [ %v2_10009cf8, %dec_label_pc_10009cec ], [ %v1_10009cf4.pre, %dec_label_pc_10009ce8 ]
  %v0_10009cec = load i32, i32* %r4.global-to-local, align 4
  %v1_10009cec = add i32 %v0_10009cec, -4
  %v2_10009cec = inttoptr i32 %v1_10009cec to i32*
  %v3_10009cec = load i32, i32* %v2_10009cec, align 4
  %v1_10009cf0 = add i32 %v0_10009cec, -8
  %v2_10009cf0 = inttoptr i32 %v1_10009cf0 to i32*
  %v3_10009cf0 = load i32, i32* %v2_10009cf0, align 4
  store i32 %v3_10009cf0, i32* %r9.global-to-local, align 4
  store i32 %v1_10009cf0, i32* %r4.global-to-local, align 4
  %v2_10009cf4 = add i32 %v1_10009cf4, -4
  %v3_10009cf4 = inttoptr i32 %v2_10009cf4 to i32*
  store i32 %v3_10009cec, i32* %v3_10009cf4, align 4
  %v0_10009cf8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009cf8 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009cf8 = add i32 %v1_10009cf8, -8
  %v3_10009cf8 = inttoptr i32 %v2_10009cf8 to i32*
  store i32 %v0_10009cf8, i32* %v3_10009cf8, align 4
  store i32 %v2_10009cf8, i32* %r10.global-to-local, align 4
  %v0_10009cfc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009cfc = add i32 %v0_10009cfc, -1
  store i32 %v1_10009cfc, i32* %ctr.global-to-local, align 4
  %v2_10009cfc = icmp eq i32 %v1_10009cfc, 0
  br i1 %v2_10009cfc, label %dec_label_pc_10009d00, label %dec_label_pc_10009cec

dec_label_pc_10009d00:                            ; preds = %dec_label_pc_10009cec, %dec_label_pc_10009d4c, %dec_label_pc_10009cd0
  %v0_10009d00 = load i32, i32* @r11, align 4
  %v1_10009d00 = urem i32 %v0_10009d00, 8
  store i32 %v1_10009d00, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_10009d00, 4
  br i1 %tmp, label %dec_label_pc_10009d18, label %dec_label_pc_10009d0c

dec_label_pc_10009d0c:                            ; preds = %dec_label_pc_10009d00
  %v0_10009d0c = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d0c = add i32 %v0_10009d0c, -4
  %v2_10009d0c = inttoptr i32 %v1_10009d0c to i32*
  %v3_10009d0c = load i32, i32* %v2_10009d0c, align 4
  store i32 %v1_10009d0c, i32* %r4.global-to-local, align 4
  %v1_10009d10 = add nsw i32 %v1_10009d00, -4
  store i32 %v1_10009d10, i32* %r5.global-to-local, align 4
  %v1_10009d14 = load i32, i32* %r10.global-to-local, align 4
  %v2_10009d14 = add i32 %v1_10009d14, -4
  %v3_10009d14 = inttoptr i32 %v2_10009d14 to i32*
  store i32 %v3_10009d0c, i32* %v3_10009d14, align 4
  store i32 %v2_10009d14, i32* %r10.global-to-local, align 4
  %v0_10009d18.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009d18

dec_label_pc_10009d18:                            ; preds = %dec_label_pc_10009d00, %dec_label_pc_10009d0c
  %v0_10009d20 = phi i32 [ %v1_10009d00, %dec_label_pc_10009d00 ], [ %v0_10009d18.pre, %dec_label_pc_10009d0c ]
  %v3_10009d18 = icmp eq i32 %v0_10009d20, 0
  br i1 %v3_10009d18, label %dec_label_pc_10009d58, label %dec_label_pc_10009d20

dec_label_pc_10009d20:                            ; preds = %dec_label_pc_10009d18
  store i32 %v0_10009d20, i32* %ctr.global-to-local, align 4
  %v2_10009d28.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009d24

dec_label_pc_10009d24:                            ; preds = %dec_label_pc_10009d24, %dec_label_pc_10009d20
  %v2_10009d28 = phi i32 [ %v3_10009d28, %dec_label_pc_10009d24 ], [ %v2_10009d28.pre, %dec_label_pc_10009d20 ]
  %v0_10009d24 = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d24 = add i32 %v0_10009d24, -1
  %v2_10009d24 = inttoptr i32 %v1_10009d24 to i8*
  %v3_10009d24 = load i8, i8* %v2_10009d24, align 1
  store i32 %v1_10009d24, i32* %r4.global-to-local, align 4
  %v3_10009d28 = add i32 %v2_10009d28, -1
  %v4_10009d28 = inttoptr i32 %v3_10009d28 to i8*
  store i8 %v3_10009d24, i8* %v4_10009d28, align 1
  store i32 %v3_10009d28, i32* %r10.global-to-local, align 4
  %v0_10009d2c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d2c = add i32 %v0_10009d2c, -1
  store i32 %v1_10009d2c, i32* %ctr.global-to-local, align 4
  %v2_10009d2c = icmp eq i32 %v1_10009d2c, 0
  br i1 %v2_10009d2c, label %dec_label_pc_10009d58, label %dec_label_pc_10009d24

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009ce0
  %v1_10009d34 = sub nsw i32 4, %v1_10009ce0
  store i32 %v1_10009d34, i32* %ctr.global-to-local, align 4
  %v2_10009d3c = sub i32 %arg3, %v1_10009d34
  store i32 %v2_10009d3c, i32* @r11, align 4
  %v1_10009d408 = add i32 %v2_10009cd4, -1
  %v2_10009d409 = inttoptr i32 %v1_10009d408 to i8*
  %v3_10009d4010 = load i8, i8* %v2_10009d409, align 1
  store i32 %v1_10009d408, i32* %r4.global-to-local, align 4
  %v3_10009d4412 = add i32 %v2_10009cd8, -1
  %v4_10009d4413 = inttoptr i32 %v3_10009d4412 to i8*
  store i8 %v3_10009d4010, i8* %v4_10009d4413, align 1
  store i32 %v3_10009d4412, i32* %r10.global-to-local, align 4
  %v0_10009d4814 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d4815 = add i32 %v0_10009d4814, -1
  store i32 %v1_10009d4815, i32* %ctr.global-to-local, align 4
  %v2_10009d4816 = icmp eq i32 %v1_10009d4815, 0
  br i1 %v2_10009d4816, label %dec_label_pc_10009d4c, label %dec_label_pc_10009d40.dec_label_pc_10009d40_crit_edge

dec_label_pc_10009d40.dec_label_pc_10009d40_crit_edge: ; preds = %dec_label_pc_10009d34, %dec_label_pc_10009d40.dec_label_pc_10009d40_crit_edge
  %v3_10009d4417 = phi i32 [ %v3_10009d44, %dec_label_pc_10009d40.dec_label_pc_10009d40_crit_edge ], [ %v3_10009d4412, %dec_label_pc_10009d34 ]
  %v0_10009d40.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_10009d40 = add i32 %v0_10009d40.pre, -1
  %v2_10009d40 = inttoptr i32 %v1_10009d40 to i8*
  %v3_10009d40 = load i8, i8* %v2_10009d40, align 1
  store i32 %v1_10009d40, i32* %r4.global-to-local, align 4
  %v3_10009d44 = add i32 %v3_10009d4417, -1
  %v4_10009d44 = inttoptr i32 %v3_10009d44 to i8*
  store i8 %v3_10009d40, i8* %v4_10009d44, align 1
  store i32 %v3_10009d44, i32* %r10.global-to-local, align 4
  %v0_10009d48 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d48 = add i32 %v0_10009d48, -1
  store i32 %v1_10009d48, i32* %ctr.global-to-local, align 4
  %v2_10009d48 = icmp eq i32 %v1_10009d48, 0
  br i1 %v2_10009d48, label %dec_label_pc_10009d4c, label %dec_label_pc_10009d40.dec_label_pc_10009d40_crit_edge

dec_label_pc_10009d4c:                            ; preds = %dec_label_pc_10009d40.dec_label_pc_10009d40_crit_edge, %dec_label_pc_10009d34
  %v0_10009d4c = load i32, i32* @r11, align 4
  %v1_10009d4c = call i32 @__asm_rlwinm.(i32 %v0_10009d4c, i32 29, i32 3, i32 31)
  store i32 %v1_10009d4c, i32* %r9.global-to-local, align 4
  %v4_10009d4c = icmp eq i32 %v1_10009d4c, 0
  br i1 %v4_10009d4c, label %dec_label_pc_10009d00, label %dec_label_pc_10009d4c.dec_label_pc_10009ce8_crit_edge

dec_label_pc_10009d4c.dec_label_pc_10009ce8_crit_edge: ; preds = %dec_label_pc_10009d4c
  %v1_10009cf4.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10009ce8

dec_label_pc_10009d58:                            ; preds = %dec_label_pc_10009d24, %dec_label_pc_10009d18
  %v0_10009d58 = load i32, i32* %r8.global-to-local, align 4
  ret i32 %v0_10009d58

; uselistorder directives
  uselistorder i32 %v1_10009d4c, { 1, 2, 0 }
  uselistorder i32 %v1_10009d48, { 1, 0 }
  uselistorder i32 %v3_10009d44, { 1, 2, 0 }
  uselistorder i32 %v1_10009d2c, { 1, 0 }
  uselistorder i32 %v3_10009d28, { 1, 2, 0 }
  uselistorder i32 %v1_10009d00, { 3, 2, 1, 0 }
  uselistorder i32 %v1_10009cfc, { 1, 0 }
  uselistorder i32 %v2_10009cf8, { 1, 2, 0 }
  uselistorder i32 %v1_10009ce0, { 1, 0 }
  uselistorder i32 %v2_10009cd8, { 1, 2, 0, 3 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 9, 1, 6, 2, 8, 3, 7, 4 }
  uselistorder i32* %r10.global-to-local, { 8, 0, 9, 1, 5, 2, 6, 3, 7, 4 }
  uselistorder i32* %ctr.global-to-local, { 0, 9, 10, 1, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 %arg3, { 2, 0, 1, 4, 3, 5 }
  uselistorder label %dec_label_pc_10009d40.dec_label_pc_10009d40_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009d18, { 1, 0 }
  uselistorder label %dec_label_pc_10009d00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10009cd0, { 1, 0 }
}

define i32 @function_10009d60(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10009d60:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_10009d60 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_10009d60, i32* %r9.global-to-local, align 4
  %v4_10009d60 = icmp eq i32 %v1_10009d60, 0
  %v1_10009d68 = add i32 %arg1, -4
  store i32 %v1_10009d68, i32* %r11.global-to-local, align 4
  %v1_10009d6c = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_10009d70 = call i32 @__asm_rlwimi(i32 %v1_10009d6c, i32 16, i32 0, i32 15)
  %v2_10009d70 = trunc i32 %v1_10009d70 to i8
  br i1 %v4_10009d60, label %dec_label_pc_10009d98, label %dec_label_pc_10009d78

dec_label_pc_10009d78:                            ; preds = %dec_label_pc_10009d60
  %v0_10009d78 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009d78 = urem i32 %v0_10009d78, 4
  %v3_10009d78 = icmp eq i32 %v1_10009d78, 0
  br i1 %v3_10009d78, label %dec_label_pc_10009d78.dec_label_pc_10009d80_crit_edge, label %dec_label_pc_10009dc8

dec_label_pc_10009d78.dec_label_pc_10009d80_crit_edge: ; preds = %dec_label_pc_10009d78
  %v0_10009d80.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009d80

dec_label_pc_10009d80:                            ; preds = %dec_label_pc_10009de0.dec_label_pc_10009d80_crit_edge, %dec_label_pc_10009d78.dec_label_pc_10009d80_crit_edge
  %v0_10009d84.pre = phi i32 [ %v0_10009d78, %dec_label_pc_10009d78.dec_label_pc_10009d80_crit_edge ], [ %v0_10009d84.pre.pre, %dec_label_pc_10009de0.dec_label_pc_10009d80_crit_edge ]
  %v0_10009d80 = phi i32 [ %v0_10009d80.pre, %dec_label_pc_10009d78.dec_label_pc_10009d80_crit_edge ], [ %v1_10009de0, %dec_label_pc_10009de0.dec_label_pc_10009d80_crit_edge ]
  store i32 %v0_10009d80, i32* %ctr.global-to-local, align 4
  %v1_10009d88 = sext i8 %v2_10009d70 to i32
  br label %dec_label_pc_10009d84

dec_label_pc_10009d84:                            ; preds = %dec_label_pc_10009d84, %dec_label_pc_10009d80
  %v0_10009d84 = phi i32 [ %v1_10009d90, %dec_label_pc_10009d84 ], [ %v0_10009d84.pre, %dec_label_pc_10009d80 ]
  %v1_10009d84 = add i32 %v0_10009d84, 4
  store i32 %v1_10009d84, i32* %r9.global-to-local, align 4
  %v4_10009d88 = inttoptr i32 %v1_10009d84 to i32*
  store i32 %v1_10009d88, i32* %v4_10009d88, align 4
  %v2_10009d8c = load i32, i32* %r9.global-to-local, align 4
  %v3_10009d8c = add i32 %v2_10009d8c, 4
  %v4_10009d8c = inttoptr i32 %v3_10009d8c to i32*
  store i32 %v1_10009d88, i32* %v4_10009d8c, align 4
  %v0_10009d90 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009d90 = add i32 %v0_10009d90, 4
  store i32 %v1_10009d90, i32* %r11.global-to-local, align 4
  %v0_10009d94 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009d94 = add i32 %v0_10009d94, -1
  store i32 %v1_10009d94, i32* %ctr.global-to-local, align 4
  %v2_10009d94 = icmp eq i32 %v1_10009d94, 0
  br i1 %v2_10009d94, label %dec_label_pc_10009d98, label %dec_label_pc_10009d84

dec_label_pc_10009d98:                            ; preds = %dec_label_pc_10009d84, %dec_label_pc_10009de0, %dec_label_pc_10009d60
  %v0_10009d98 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009d98 = urem i32 %v0_10009d98, 8
  store i32 %v1_10009d98, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_10009d98, 4
  br i1 %tmp, label %dec_label_pc_10009dac, label %dec_label_pc_10009da4

dec_label_pc_10009da4:                            ; preds = %dec_label_pc_10009d98
  %v1_10009da4 = sext i8 %v2_10009d70 to i32
  %v2_10009da4 = load i32, i32* %r11.global-to-local, align 4
  %v3_10009da4 = add i32 %v2_10009da4, 4
  %v4_10009da4 = inttoptr i32 %v3_10009da4 to i32*
  store i32 %v1_10009da4, i32* %v4_10009da4, align 4
  store i32 %v3_10009da4, i32* %r11.global-to-local, align 4
  %v0_10009da8 = load i32, i32* @r5, align 4
  %v1_10009da8 = add i32 %v0_10009da8, -4
  store i32 %v1_10009da8, i32* @r5, align 4
  br label %dec_label_pc_10009dac

dec_label_pc_10009dac:                            ; preds = %dec_label_pc_10009d98, %dec_label_pc_10009da4
  %v0_10009dac = phi i32 [ %v1_10009d98, %dec_label_pc_10009d98 ], [ %v1_10009da8, %dec_label_pc_10009da4 ]
  %v3_10009dac = icmp eq i32 %v0_10009dac, 0
  %v0_10009db0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10009dac, i32 %v0_10009db0)
  %v0_10009db4 = load i32, i32* @r5, align 4
  store i32 %v0_10009db4, i32* %ctr.global-to-local, align 4
  %v0_10009db8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009db8 = add i32 %v0_10009db8, 3
  store i32 %v1_10009db8, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10009dbc

dec_label_pc_10009dbc:                            ; preds = %dec_label_pc_10009dbc, %dec_label_pc_10009dac
  %v3_10009dbc = phi i32 [ %v4_10009dbc, %dec_label_pc_10009dbc ], [ %v1_10009db8, %dec_label_pc_10009dac ]
  %v4_10009dbc = add i32 %v3_10009dbc, 1
  %v5_10009dbc = inttoptr i32 %v4_10009dbc to i8*
  store i8 %v2_10009d70, i8* %v5_10009dbc, align 1
  store i32 %v4_10009dbc, i32* %r9.global-to-local, align 4
  %v0_10009dc0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009dc0 = add i32 %v0_10009dc0, -1
  store i32 %v1_10009dc0, i32* %ctr.global-to-local, align 4
  %v2_10009dc0 = icmp eq i32 %v1_10009dc0, 0
  br i1 %v2_10009dc0, label %dec_label_pc_10009dec, label %dec_label_pc_10009dbc

dec_label_pc_10009dc8:                            ; preds = %dec_label_pc_10009d78
  %v1_10009dc8 = sub nsw i32 4, %v1_10009d78
  store i32 %v1_10009dc8, i32* %ctr.global-to-local, align 4
  %v1_10009dd0 = load i32, i32* %r5.global-to-local, align 4
  %v2_10009dd0 = sub i32 %v1_10009dd0, %v1_10009dc8
  store i32 %v2_10009dd0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10009dd4

dec_label_pc_10009dd4:                            ; preds = %dec_label_pc_10009dd4, %dec_label_pc_10009dc8
  %v3_10009dd4 = phi i32 [ %v1_10009dd8, %dec_label_pc_10009dd4 ], [ %v0_10009d78, %dec_label_pc_10009dc8 ]
  %v4_10009dd4 = add i32 %v3_10009dd4, 4
  %v5_10009dd4 = inttoptr i32 %v4_10009dd4 to i8*
  store i8 %v2_10009d70, i8* %v5_10009dd4, align 1
  %v0_10009dd8 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009dd8 = add i32 %v0_10009dd8, 1
  store i32 %v1_10009dd8, i32* %r11.global-to-local, align 4
  %v0_10009ddc = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ddc = add i32 %v0_10009ddc, -1
  store i32 %v1_10009ddc, i32* %ctr.global-to-local, align 4
  %v2_10009ddc = icmp eq i32 %v1_10009ddc, 0
  br i1 %v2_10009ddc, label %dec_label_pc_10009de0, label %dec_label_pc_10009dd4

dec_label_pc_10009de0:                            ; preds = %dec_label_pc_10009dd4
  %v0_10009de0 = load i32, i32* %r5.global-to-local, align 4
  %v1_10009de0 = call i32 @__asm_rlwinm.(i32 %v0_10009de0, i32 29, i32 3, i32 31)
  store i32 %v1_10009de0, i32* %r9.global-to-local, align 4
  %v4_10009de0 = icmp eq i32 %v1_10009de0, 0
  br i1 %v4_10009de0, label %dec_label_pc_10009d98, label %dec_label_pc_10009de0.dec_label_pc_10009d80_crit_edge

dec_label_pc_10009de0.dec_label_pc_10009d80_crit_edge: ; preds = %dec_label_pc_10009de0
  %v0_10009d84.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10009d80

dec_label_pc_10009dec:                            ; preds = %dec_label_pc_10009dbc
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10009de0, { 1, 2, 0 }
  uselistorder i32 %v1_10009ddc, { 1, 0 }
  uselistorder i32 %v1_10009dd8, { 1, 0 }
  uselistorder i32 %v1_10009dc0, { 1, 0 }
  uselistorder i32 %v4_10009dbc, { 1, 2, 0 }
  uselistorder i32 %v1_10009d98, { 2, 1, 0 }
  uselistorder i32 %v1_10009d94, { 1, 0 }
  uselistorder i32 %v1_10009d90, { 1, 0 }
  uselistorder i32 %v1_10009d78, { 1, 0 }
  uselistorder i32 %v0_10009d78, { 2, 1, 0 }
  uselistorder i8 %v2_10009d70, { 1, 2, 3, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 6, 7, 0, 4, 1, 5, 8 }
  uselistorder i32* %ctr.global-to-local, { 4, 5, 6, 8, 7, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwimi, { 55, 56, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10009dac, { 1, 0 }
  uselistorder label %dec_label_pc_10009d98, { 1, 0, 2 }
}

define i32 @function_10009df0(i32 %arg1, i8* %arg2) local_unnamed_addr {
dec_label_pc_10009df0:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_10009df0 = add i32 %arg1, -1
  %v1_10009df4 = sub i32 %v2_10009df0, %tmp
  store i32 %v1_10009df4, i32* %r9.global-to-local, align 4
  %v2_10009df84 = load i8, i8* %arg2, align 1
  %v1_10009dfc6 = add i32 %tmp, 1
  store i32 %v1_10009dfc6, i32* %r4.global-to-local, align 4
  %v3_10009e007 = icmp eq i8 %v2_10009df84, 0
  store i1 %v3_10009e007, i1* %cr7_eq.global-to-local, align 1
  %v5_10009e048 = inttoptr i32 %arg1 to i8*
  store i8 %v2_10009df84, i8* %v5_10009e048, align 1
  %v0_10009e089 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009e089, label %dec_label_pc_10009e0c, label %dec_label_pc_10009df8.dec_label_pc_10009df8_crit_edge

dec_label_pc_10009df8.dec_label_pc_10009df8_crit_edge: ; preds = %dec_label_pc_10009df0, %dec_label_pc_10009df8.dec_label_pc_10009df8_crit_edge
  %v0_10009df8.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_10009e04.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10009df8 = inttoptr i32 %v0_10009df8.pre to i8*
  %v2_10009df8 = load i8, i8* %v1_10009df8, align 1
  %v1_10009dfc = add i32 %v0_10009df8.pre, 1
  store i32 %v1_10009dfc, i32* %r4.global-to-local, align 4
  %v3_10009e00 = icmp eq i8 %v2_10009df8, 0
  store i1 %v3_10009e00, i1* %cr7_eq.global-to-local, align 1
  %v4_10009e04 = add i32 %v1_10009dfc, %v2_10009e04.pre
  %v5_10009e04 = inttoptr i32 %v4_10009e04 to i8*
  store i8 %v2_10009df8, i8* %v5_10009e04, align 1
  %v0_10009e08 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10009e08, label %dec_label_pc_10009e0c, label %dec_label_pc_10009df8.dec_label_pc_10009df8_crit_edge

dec_label_pc_10009e0c:                            ; preds = %dec_label_pc_10009df8.dec_label_pc_10009df8_crit_edge, %dec_label_pc_10009df0
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009df8.dec_label_pc_10009df8_crit_edge, { 1, 0 }
}

define i32 @function_10009e10(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10009e10:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009e14 = load i32, i32* @lr, align 4
  store i32 %v0_10009e14, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009e24 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268475960, i32* @lr, align 4
  %v3_10009e34 = call i32 @function_1000938c(i32 1076655123, i32 %v2_10009e24, i32 %v2_10009e24)
  %v2_10009e38 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009e38, i32* @r4, align 4
  store i32 %v3_10009e34, i32* @r30, align 4
  %v3_10009e3c = icmp eq i32 %v3_10009e34, 0
  %v0_10009e44 = load i32, i32* @r31, align 4
  br i1 %v3_10009e3c, label %dec_label_pc_10009e4c, label %dec_label_pc_10009e94

dec_label_pc_10009e4c:                            ; preds = %dec_label_pc_10009e10
  %v1_10009e44 = add i32 %v0_10009e44, 17
  %v3_10009e64 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10009e64, i32* %r0.global-to-local, align 4
  %v2_10009e68 = add i32 %v0_10009e44, 4
  %v3_10009e68 = inttoptr i32 %v2_10009e68 to i32*
  store i32 %tmp7, i32* %v3_10009e68, align 4
  %v0_10009e6c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009e6c = load i32, i32* @r31, align 4
  %v2_10009e6c = inttoptr i32 %v1_10009e6c to i32*
  store i32 %v0_10009e6c, i32* %v2_10009e6c, align 4
  %v0_10009e70 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009e70 = load i32, i32* @r31, align 4
  %v2_10009e70 = add i32 %v1_10009e70, 8
  %v3_10009e70 = inttoptr i32 %v2_10009e70 to i32*
  store i32 %v0_10009e70, i32* %v3_10009e70, align 4
  %v0_10009e74 = load i32, i32* %r10.global-to-local, align 4
  %v1_10009e74 = load i32, i32* @r31, align 4
  %v2_10009e74 = add i32 %v1_10009e74, 12
  %v3_10009e74 = inttoptr i32 %v2_10009e74 to i32*
  store i32 %v0_10009e74, i32* %v3_10009e74, align 4
  %v3_10009e78 = load i32, i32* @r31, align 4
  %v4_10009e78 = add i32 %v3_10009e78, 16
  %v5_10009e78 = inttoptr i32 %v4_10009e78 to i8*
  store i8 %tmp4, i8* %v5_10009e78, align 1
  %v1_10009e7c = load i32, i32* @r31, align 4
  %v2_10009e7c = add i32 %v1_10009e7c, 52
  %v3_10009e7c = inttoptr i32 %v2_10009e7c to i32*
  store i32 %tmp3, i32* %v3_10009e7c, align 4
  %v1_10009e80 = load i32, i32* @r31, align 4
  %v2_10009e80 = add i32 %v1_10009e80, 56
  %v3_10009e80 = inttoptr i32 %v2_10009e80 to i32*
  store i32 %tmp2, i32* %v3_10009e80, align 4
  store i32 268476040, i32* @lr, align 4
  %v6_10009e84 = sext i8 %tmp4 to i32
  %v8_10009e84 = call i32 @function_1000bac8(i32 %v1_10009e44, i32 %v2_10009e38, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_10009e84, i32 %tmp7)
  store i32 268476052, i32* @lr, align 4
  %v3_10009e90 = call i32 @function_10009d60(i32 %v8_10009e84, i32 0, i32 13)
  %v0_10009e98.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009e94

dec_label_pc_10009e94:                            ; preds = %dec_label_pc_10009e10, %dec_label_pc_10009e4c
  %v0_10009e98 = phi i32 [ %v3_10009e34, %dec_label_pc_10009e10 ], [ %v0_10009e98.pre, %dec_label_pc_10009e4c ]
  store i32 %v0_10009e14, i32* %r0.global-to-local, align 4
  ret i32 %v0_10009e98

; uselistorder directives
  uselistorder i32 %v2_10009e24, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32 13, { 10, 11, 0, 1, 2, 28, 29, 4, 30, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 5, 21, 22, 23, 24, 25, 26, 27, 31, 32, 6, 33, 34, 7, 35, 36, 8, 37, 38, 9 }
  uselistorder label %dec_label_pc_10009e94, { 1, 0 }
}

define i32 @function_10009eac() local_unnamed_addr {
dec_label_pc_10009eac:
  %r27.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009eac = load i32, i32* @r4, align 4
  %v3_10009eac = icmp eq i32 %v0_10009eac, 1
  %v0_10009ebc = load i32, i32* @r3, align 4
  store i32 %v0_10009ebc, i32* %r27.global-to-local, align 4
  %v0_10009ec4 = load i32, i32* @r5, align 4
  store i32 %v0_10009ec4, i32* @r31, align 4
  br i1 %v3_10009eac, label %dec_label_pc_10009ee8, label %dec_label_pc_10009ecc

dec_label_pc_10009ecc:                            ; preds = %dec_label_pc_10009eac
  %v3_10009ecc = icmp eq i32 %v0_10009eac, 2
  br i1 %v3_10009ecc, label %dec_label_pc_10009f08, label %dec_label_pc_10009ed4

dec_label_pc_10009ed4:                            ; preds = %dec_label_pc_10009ecc
  %v3_10009ed4 = icmp eq i32 %v0_10009eac, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_10009ed4, label %dec_label_pc_10009f10, label %dec_label_pc_10009ef4

dec_label_pc_10009ee8:                            ; preds = %dec_label_pc_10009eac
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_10009f10

dec_label_pc_10009ef4:                            ; preds = %dec_label_pc_10009ed4
  %v0_10009ef4 = call i32 @function_10009c78()
  store i32 -1, i32* @r28, align 4
  %v2_10009f00 = inttoptr i32 %v0_10009ef4 to i32*
  store i32 22, i32* %v2_10009f00, align 4
  br label %dec_label_pc_10009ff8

dec_label_pc_10009f08:                            ; preds = %dec_label_pc_10009ecc
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_10009f10

dec_label_pc_10009f10:                            ; preds = %dec_label_pc_10009ed4, %dec_label_pc_10009ee8, %dec_label_pc_10009f08
  %v1_10009f10 = inttoptr i32 %v0_10009ec4 to i32*
  %v2_10009f10 = load i32, i32* %v1_10009f10, align 4
  store i32 19, i32* @r5, align 4
  %v1_10009f18 = add i32 %v0_10009ec4, 4
  %v2_10009f18 = inttoptr i32 %v1_10009f18 to i32*
  %v3_10009f18 = load i32, i32* %v2_10009f18, align 4
  store i32 %v3_10009f18, i32* %r9.global-to-local, align 4
  %v1_10009f1c = add i32 %v0_10009ec4, 17
  store i32 %v1_10009f1c, i32* @r4, align 4
  %v1_10009f20 = add i32 %v0_10009ec4, 8
  %v2_10009f20 = inttoptr i32 %v1_10009f20 to i32*
  %v3_10009f20 = load i32, i32* %v2_10009f20, align 4
  %v2_10009f24 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009f24, i32* @r3, align 4
  %v2_10009f2c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10009f10, i32* %stack_var_-72, align 4
  store i32 268476252, i32* @lr, align 4
  %v0_10009f58 = call i32 @function_1000ba2c()
  %v0_10009f5c = load i32, i32* %r27.global-to-local, align 4
  %v0_10009f60 = load i32, i32* @r30, align 4
  store i32 268476272, i32* @lr, align 4
  %v3_10009f6c = call i32 @function_1000938c(i32 %v0_10009f5c, i32 %v0_10009f60, i32 %v2_10009f2c)
  store i32 %v3_10009f6c, i32* @r28, align 4
  %v3_10009f70 = icmp eq i32 %v3_10009f6c, 0
  br i1 %v3_10009f70, label %dec_label_pc_10009f78, label %dec_label_pc_10009ff8

dec_label_pc_10009f78:                            ; preds = %dec_label_pc_10009f10
  %v0_10009f78 = load i32, i32* @r30, align 4
  %v3_10009f7c = icmp eq i32 %v0_10009f78, -2144570348
  br i1 %v3_10009f7c, label %dec_label_pc_10009f84, label %dec_label_pc_10009ff4

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009f78
  %v0_10009f84 = call i32 @function_10009c78()
  store i32 %v0_10009f84, i32* @r29, align 4
  %v0_10009f94 = load i32, i32* %r27.global-to-local, align 4
  %v1_10009f9c = inttoptr i32 %v0_10009f84 to i32*
  %v2_10009f9c = load i32, i32* %v1_10009f9c, align 4
  store i32 %v2_10009f9c, i32* @r30, align 4
  store i32 268476328, i32* @lr, align 4
  %v3_10009fa4 = call i32 @function_1000938c(i32 %v0_10009f94, i32 1076655123, i32 %v2_10009f2c)
  %v3_10009fa8 = icmp eq i32 %v3_10009fa4, 0
  br i1 %v3_10009fa8, label %dec_label_pc_10009fb8, label %dec_label_pc_10009fb0

dec_label_pc_10009fb0:                            ; preds = %dec_label_pc_10009f84
  %v0_10009fb0 = load i32, i32* @r30, align 4
  %v1_10009fb0 = load i32, i32* @r29, align 4
  %v2_10009fb0 = inttoptr i32 %v1_10009fb0 to i32*
  store i32 %v0_10009fb0, i32* %v2_10009fb0, align 4
  br label %dec_label_pc_10009ff8

dec_label_pc_10009fb8:                            ; preds = %dec_label_pc_10009f84
  %v0_10009fb8 = load i32, i32* @r31, align 4
  %v1_10009fb8 = add i32 %v0_10009fb8, 8
  %v2_10009fb8 = inttoptr i32 %v1_10009fb8 to i32*
  %v3_10009fb8 = load i32, i32* %v2_10009fb8, align 4
  %v1_10009fc0 = call i32 @__asm_rlwinm(i32 %v3_10009fb8, i32 0, i32 19, i32 20)
  %v1_10009fc4 = call i32 @__asm_rlwinm(i32 %v3_10009f20, i32 0, i32 19, i32 20)
  store i32 %v1_10009fc4, i32* %r9.global-to-local, align 4
  %v4_10009fc8 = icmp eq i32 %v1_10009fc0, %v1_10009fc4
  br i1 %v4_10009fc8, label %dec_label_pc_10009fd0, label %dec_label_pc_10009fe4

dec_label_pc_10009fd0:                            ; preds = %dec_label_pc_10009fb8
  %v1_10009fd0 = and i32 %v3_10009fb8, 768
  store i32 %v1_10009fd0, i32* %r9.global-to-local, align 4
  %v3_10009fd0 = icmp eq i32 %v1_10009fd0, 0
  br i1 %v3_10009fd0, label %dec_label_pc_10009ff4, label %dec_label_pc_10009fd8

dec_label_pc_10009fd8:                            ; preds = %dec_label_pc_10009fd0
  %v1_10009fd8 = call i32 @__asm_rlwinm(i32 %v3_10009f20, i32 0, i32 22, i32 23)
  %v0_10009fdc = load i32, i32* %r9.global-to-local, align 4
  %v4_10009fdc = icmp eq i32 %v0_10009fdc, %v1_10009fd8
  br i1 %v4_10009fdc, label %dec_label_pc_10009ff4, label %dec_label_pc_10009fe4

dec_label_pc_10009fe4:                            ; preds = %dec_label_pc_10009fb8, %dec_label_pc_10009fd8
  store i32 -1, i32* @r28, align 4
  %v1_10009fec = load i32, i32* @r29, align 4
  %v2_10009fec = inttoptr i32 %v1_10009fec to i32*
  store i32 22, i32* %v2_10009fec, align 4
  br label %dec_label_pc_10009ff8

dec_label_pc_10009ff4:                            ; preds = %dec_label_pc_10009f78, %dec_label_pc_10009fd8, %dec_label_pc_10009fd0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10009ff8

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009f10, %dec_label_pc_10009fe4, %dec_label_pc_10009fb0, %dec_label_pc_10009ef4, %dec_label_pc_10009ff4
  %v0_10009ffc = load i32, i32* @r28, align 4
  ret i32 %v0_10009ffc

; uselistorder directives
  uselistorder i32 %v0_10009ec4, { 1, 0, 3, 2, 4 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @function_1000938c, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10009ff8, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10009ff4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10009fe4, { 1, 0 }
  uselistorder label %dec_label_pc_10009f10, { 2, 1, 0 }
}

define i32 @function_1000a010(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a010:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000a018 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000a018, i32* @r4, align 4
  store i32 268476452, i32* @lr, align 4
  %v1_1000a020 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000a020 = call i32 @function_1000bafc(i8* %v1_1000a020)
  %v3_1000a024 = icmp eq i32 %v2_1000a020, 0
  br i1 %v3_1000a024, label %dec_label_pc_1000a034, label %dec_label_pc_1000a030

dec_label_pc_1000a030:                            ; preds = %dec_label_pc_1000a010
  %v3_1000a030 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000a034

dec_label_pc_1000a034:                            ; preds = %dec_label_pc_1000a010, %dec_label_pc_1000a030
  %v0_1000a040 = phi i32 [ -1, %dec_label_pc_1000a010 ], [ %v3_1000a030, %dec_label_pc_1000a030 ]
  ret i32 %v0_1000a040

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a034, { 1, 0 }
}

define i32 @function_1000a044(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a044:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a058 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476520, i32* @lr, align 4
  %v2_1000a064 = call i32 @function_1000b330(i32 2, i32 %v2_1000a058)
  ret i32 %v2_1000a064

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a078(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a078:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a08c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476572, i32* @lr, align 4
  %v2_1000a098 = call i32 @function_1000b330(i32 3, i32 %v2_1000a08c)
  ret i32 %v2_1000a098

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a0ac(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a0ac:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a0c0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476624, i32* @lr, align 4
  %v2_1000a0cc = call i32 @function_1000b330(i32 6, i32 %v2_1000a0c0)
  ret i32 %v2_1000a0cc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a0e0(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
dec_label_pc_1000a0e0:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a0f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476684, i32* @lr, align 4
  %v2_1000a108 = call i32 @function_1000b330(i32 15, i32 %v2_1000a0f4)
  ret i32 %v2_1000a108

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32 15, { 0, 31, 14, 15, 16, 17, 5, 18, 19, 6, 20, 7, 21, 8, 9, 10, 11, 12, 22, 13, 23, 24, 1, 25, 26, 2, 27, 28, 3, 29, 30, 4 }
}

define i32 @function_1000a11c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a11c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a130 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476732, i32* @lr, align 4
  %v2_1000a138 = call i32 @function_1000b330(i32 4, i32 %v2_1000a130)
  ret i32 %v2_1000a138

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a14c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a14c:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a160 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476788, i32* @lr, align 4
  %v2_1000a170 = call i32 @function_1000b330(i32 10, i32 %v2_1000a160)
  ret i32 %v2_1000a170

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @function_1000a184(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a184:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a198 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476852, i32* @lr, align 4
  %v2_1000a1b0 = call i32 @function_1000b330(i32 12, i32 %v2_1000a198)
  ret i32 %v2_1000a1b0

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a1c4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a1c4:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a1d8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268476908, i32* @lr, align 4
  %v2_1000a1e8 = call i32 @function_1000b330(i32 9, i32 %v2_1000a1d8)
  ret i32 %v2_1000a1e8

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 9, { 0, 5, 6, 7, 15, 16, 17, 18, 19, 20, 21, 22, 23, 8, 9, 24, 1, 25, 2, 26, 3, 27, 10, 11, 12, 28, 13, 29, 42, 30, 31, 32, 33, 34, 35, 36, 4, 37, 38, 39, 40, 41, 43, 44, 45, 14 }
}

define i32 @function_1000a1fc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000a1fc:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a210 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268476972, i32* @lr, align 4
  %v2_1000a228 = call i32 @function_1000b330(i32 11, i32 %v2_1000a210)
  ret i32 %v2_1000a228

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a23c(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a23c:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000a250 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268477032, i32* @lr, align 4
  %v2_1000a264 = call i32 @function_1000b330(i32 14, i32 %v2_1000a250)
  ret i32 %v2_1000a264

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @function_1000a278(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a278:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000a28c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268477084, i32* @lr, align 4
  %v2_1000a298 = call i32 @function_1000b330(i32 1, i32 %v2_1000a28c)
  ret i32 %v2_1000a298

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @function_1000b330, { 5, 1, 0, 4, 6, 10, 7, 9, 8, 3, 2 }
}

define i32 @function_1000a2ac(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a2ac:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000a2dc, label %dec_label_pc_1000a2c8

dec_label_pc_1000a2c8:                            ; preds = %dec_label_pc_1000a2ac
  %v0_1000a2c8 = call i32 @function_10009c78()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000a2d4 = inttoptr i32 %v0_1000a2c8 to i32*
  store i32 22, i32* %v2_1000a2d4, align 4
  %v0_1000a2e8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a2e4

dec_label_pc_1000a2dc:                            ; preds = %dec_label_pc_1000a2ac
  %v0_1000a2dc = call i32 @function_1000a42c()
  store i32 %v0_1000a2dc, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a2e4

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a2c8, %dec_label_pc_1000a2dc
  %v0_1000a2e8 = phi i32 [ %v0_1000a2e8.pre, %dec_label_pc_1000a2c8 ], [ %v0_1000a2dc, %dec_label_pc_1000a2dc ]
  ret i32 %v0_1000a2e8

; uselistorder directives
  uselistorder label %dec_label_pc_1000a2e4, { 1, 0 }
}

define i32 @function_1000a2f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000a2f8:
  store i32 268477200, i32* @lr, align 4
  %v3_1000a30c = call i32 @function_10009d60(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @function_1000a324(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a324:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1000a324 = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1000a324, label %dec_label_pc_1000a350, label %dec_label_pc_1000a340

dec_label_pc_1000a340:                            ; preds = %dec_label_pc_1000a324
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_1000a350, label %dec_label_pc_1000a348

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a340
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_1000a380.lr.ph, label %dec_label_pc_1000a350

dec_label_pc_1000a350:                            ; preds = %dec_label_pc_1000a348, %dec_label_pc_1000a340, %dec_label_pc_1000a324
  %v0_1000a350 = call i32 @function_10009c78()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000a35c = inttoptr i32 %v0_1000a350 to i32*
  store i32 22, i32* %v2_1000a35c, align 4
  %v0_1000a3f0.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a3ec

dec_label_pc_1000a380.lr.ph:                      ; preds = %dec_label_pc_1000a348
  %v2_1000a370 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000a370, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a38022 = add i32 %v2_1000a370, 128
  %v3_1000a38023 = inttoptr i32 %v2_1000a38022 to i32*
  store i32 0, i32* %v3_1000a38023, align 4
  %v0_1000a38424 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a38425 = add i32 %v0_1000a38424, -1
  store i32 %v1_1000a38425, i32* %r11.global-to-local, align 4
  %v1_1000a38826 = mul i32 %v1_1000a38425, 4
  %v1_1000a38c27 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a38c28 = add i32 %v1_1000a38c27, %v1_1000a38826
  store i32 %v2_1000a38c28, i32* %r9.global-to-local, align 4
  %v0_1000a39029 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a39030 = add i32 %v0_1000a39029, -1
  store i32 %v1_1000a39030, i32* %ctr.global-to-local, align 4
  %v2_1000a39031 = icmp eq i32 %v1_1000a39030, 0
  br i1 %v2_1000a39031, label %dec_label_pc_1000a394, label %dec_label_pc_1000a380.dec_label_pc_1000a380_crit_edge

dec_label_pc_1000a380.dec_label_pc_1000a380_crit_edge: ; preds = %dec_label_pc_1000a380.lr.ph, %dec_label_pc_1000a380.dec_label_pc_1000a380_crit_edge
  %v2_1000a38c32 = phi i32 [ %v2_1000a38c, %dec_label_pc_1000a380.dec_label_pc_1000a380_crit_edge ], [ %v2_1000a38c28, %dec_label_pc_1000a380.lr.ph ]
  %v0_1000a380.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000a380 = add i32 %v2_1000a38c32, 4
  %v3_1000a380 = inttoptr i32 %v2_1000a380 to i32*
  store i32 %v0_1000a380.pre, i32* %v3_1000a380, align 4
  %v0_1000a384 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a384 = add i32 %v0_1000a384, -1
  store i32 %v1_1000a384, i32* %r11.global-to-local, align 4
  %v1_1000a388 = mul i32 %v1_1000a384, 4
  %v1_1000a38c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a38c = add i32 %v1_1000a38c, %v1_1000a388
  store i32 %v2_1000a38c, i32* %r9.global-to-local, align 4
  %v0_1000a390 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a390 = add i32 %v0_1000a390, -1
  store i32 %v1_1000a390, i32* %ctr.global-to-local, align 4
  %v2_1000a390 = icmp eq i32 %v1_1000a390, 0
  br i1 %v2_1000a390, label %dec_label_pc_1000a394, label %dec_label_pc_1000a380.dec_label_pc_1000a380_crit_edge

dec_label_pc_1000a394:                            ; preds = %dec_label_pc_1000a380.dec_label_pc_1000a380_crit_edge, %dec_label_pc_1000a380.lr.ph
  %v0_1000a398.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a394 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_1000a394, i32* @r3, align 4
  store i32 %v0_1000a398.pre, i32* @r4, align 4
  %v0_1000a39c = call i32 @function_1000a42c()
  %v1_1000a3a0 = icmp slt i32 %v0_1000a39c, 0
  br i1 %v1_1000a3a0, label %dec_label_pc_1000a3e8, label %dec_label_pc_1000a3a8

dec_label_pc_1000a3a8:                            ; preds = %dec_label_pc_1000a394
  %v0_1000a3ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000a3b4 = call i32 @function_1000a404(i32 ptrtoint (i32* @global_var_1001c880.303 to i32), i32 %v0_1000a3ac)
  %v2_1000a3c0 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268477400, i32* @lr, align 4
  %v4_1000a3d4 = call i32 @function_1000bbbc(i32 %v0_1000a3ac, i32* nonnull %stack_var_-296, i32 %v2_1000a3c0)
  %v1_1000a3d8 = icmp slt i32 %v4_1000a3d4, 0
  br i1 %v1_1000a3d8, label %dec_label_pc_1000a3e8, label %dec_label_pc_1000a3e0

dec_label_pc_1000a3e0:                            ; preds = %dec_label_pc_1000a3a8
  %v3_1000a3e0 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_1000a3e0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a3ec

dec_label_pc_1000a3e8:                            ; preds = %dec_label_pc_1000a3a8, %dec_label_pc_1000a394
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a3ec

dec_label_pc_1000a3ec:                            ; preds = %dec_label_pc_1000a3e0, %dec_label_pc_1000a350, %dec_label_pc_1000a3e8
  %v0_1000a3f0 = phi i32 [ %v3_1000a3e0, %dec_label_pc_1000a3e0 ], [ %v0_1000a3f0.pre, %dec_label_pc_1000a350 ], [ -1, %dec_label_pc_1000a3e8 ]
  ret i32 %v0_1000a3f0

; uselistorder directives
  uselistorder i32 %v1_1000a390, { 1, 0 }
  uselistorder i32 %v2_1000a38c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a3ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a380.dec_label_pc_1000a380_crit_edge, { 1, 0 }
}

define i32 @function_1000a404(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a404:
  %v1_1000a404 = add i32 %arg2, -1
  %v1_1000a408 = call i32 @__asm_rlwinm(i32 %v1_1000a404, i32 29, i32 3, i32 29)
  %v1_1000a40c = urem i32 %v1_1000a404, 32
  %v2_1000a410 = add i32 %v1_1000a408, %arg1
  %v3_1000a410 = inttoptr i32 %v2_1000a410 to i32*
  %v4_1000a410 = load i32, i32* %v3_1000a410, align 4
  %v3_1000a418 = shl i32 1, %v1_1000a40c
  %v2_1000a41c = and i32 %v4_1000a410, %v3_1000a418
  %v2_1000a420 = icmp ne i32 %v2_1000a41c, 0
  %v5_1000a424 = zext i1 %v2_1000a420 to i32
  ret i32 %v5_1000a424
}

define i32 @function_1000a42c() local_unnamed_addr {
dec_label_pc_1000a42c:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000a42c = load i32, i32* @r4, align 4
  %v1_1000a42c = add i32 %v0_1000a42c, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000a434 = call i32 @__asm_rlwinm(i32 %v1_1000a42c, i32 29, i32 3, i32 29)
  %v1_1000a438 = urem i32 %v1_1000a42c, 32
  %v1_1000a43c = load i32, i32* @r3, align 4
  %v2_1000a43c = add i32 %v1_1000a43c, %v1_1000a434
  %v3_1000a43c = inttoptr i32 %v2_1000a43c to i32*
  %v4_1000a43c = load i32, i32* %v3_1000a43c, align 4
  %v0_1000a440 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000a440 = shl i32 %v0_1000a440, %v1_1000a438
  store i32 %v3_1000a440, i32* %r0.global-to-local, align 4
  %v2_1000a444 = or i32 %v3_1000a440, %v4_1000a43c
  store i32 %v2_1000a444, i32* %v3_1000a43c, align 4
  ret i32 0
}

define i32 @function_1000a454(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a454:
  %v1_1000a454 = add i32 %arg2, -1
  %v1_1000a45c = call i32 @__asm_rlwinm(i32 %v1_1000a454, i32 29, i32 3, i32 29)
  %v1_1000a460 = urem i32 %v1_1000a454, 32
  %v2_1000a464 = add i32 %v1_1000a45c, %arg1
  %v3_1000a464 = inttoptr i32 %v2_1000a464 to i32*
  %v4_1000a464 = load i32, i32* %v3_1000a464, align 4
  %v3_1000a468 = shl i32 -2, %v1_1000a460
  %v4_1000a468 = sub nsw i32 32, %v1_1000a460
  %v5_1000a468 = lshr i32 -2, %v4_1000a468
  %v6_1000a468 = or i32 %v5_1000a468, %v3_1000a468
  %v2_1000a46c = and i32 %v6_1000a468, %v4_1000a464
  store i32 %v2_1000a46c, i32* %v3_1000a464, align 4
  ret i32 0
}

define i32 @function_1000a47c() local_unnamed_addr {
dec_label_pc_1000a47c:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000a47c = load i32, i32* @r3, align 4
  %v3_1000a47c = icmp eq i32 %v0_1000a47c, 0
  br i1 %v3_1000a47c, label %dec_label_pc_1000a498.thread, label %dec_label_pc_1000a498

dec_label_pc_1000a498.thread:                     ; preds = %dec_label_pc_1000a47c
  br label %dec_label_pc_1000a4a4

dec_label_pc_1000a498:                            ; preds = %dec_label_pc_1000a47c
  %v3_1000a49c = icmp ugt i32 %v0_1000a47c, -8
  br i1 %v3_1000a49c, label %dec_label_pc_1000a5ac, label %dec_label_pc_1000a4a4

dec_label_pc_1000a4a4:                            ; preds = %dec_label_pc_1000a498.thread, %dec_label_pc_1000a498
  %v0_1000a4a816 = phi i32 [ 1, %dec_label_pc_1000a498.thread ], [ %v0_1000a47c, %dec_label_pc_1000a498 ]
  %v1_1000a4a8 = add i32 %v0_1000a4a816, 4
  store i32 ptrtoint (i32* @global_var_1001c760.304 to i32), i32* @r29, align 4
  store i32 %v1_1000a4a8, i32* %stack_var_-40, align 4
  %v0_1000a4b8 = call i32 @function_1000afd8()
  %v2_1000a4c0 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000a4c8 = call i32 @function_1000a874(i32* inttoptr (i32 268551816 to i32*), i32 %v2_1000a4c0)
  store i32 %v3_1000a4c8, i32* %r31.global-to-local, align 4
  %v0_1000a4d4 = call i32 @function_1000afd8()
  %v3_1000a4d8 = icmp eq i32 %v3_1000a4c8, 0
  br i1 %v3_1000a4d8, label %dec_label_pc_1000a4e0, label %dec_label_pc_1000a590.thread

dec_label_pc_1000a590.thread:                     ; preds = %dec_label_pc_1000a4a4
  br label %dec_label_pc_1000a5a4

dec_label_pc_1000a4e0:                            ; preds = %dec_label_pc_1000a4a4
  %v3_1000a4e4 = load i32, i32* @global_var_1001c6e4.307, align 4
  store i32 %v3_1000a4e4, i32* %r31.global-to-local, align 4
  %v3_1000a4e8 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a4ec = icmp ult i32 %v3_1000a4e8, %v3_1000a4e4
  br i1 %v2_1000a4ec, label %dec_label_pc_1000a504, label %dec_label_pc_1000a4f4

dec_label_pc_1000a4f4:                            ; preds = %dec_label_pc_1000a4e0
  %v1_1000a4f8 = sub i32 0, %v3_1000a4e4
  %v2_1000a4f4 = add i32 %v3_1000a4e4, -1
  %v1_1000a4fc = add i32 %v2_1000a4f4, %v3_1000a4e8
  %v2_1000a500 = and i32 %v1_1000a4fc, %v1_1000a4f8
  store i32 %v2_1000a500, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a504

dec_label_pc_1000a504:                            ; preds = %dec_label_pc_1000a4e0, %dec_label_pc_1000a4f4
  %v0_1000a510 = call i32 @function_1000afd8()
  %v0_1000a514 = load i32, i32* %r31.global-to-local, align 4
  store i32 268477724, i32* @lr, align 4
  %v1_1000a518 = call i32 @function_1000b7f8(i32 %v0_1000a514)
  %v3_1000a51c = icmp eq i32 %v1_1000a518, -1
  br i1 %v3_1000a51c, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a524

dec_label_pc_1000a524:                            ; preds = %dec_label_pc_1000a504
  %v1_1000a524 = add i32 %v1_1000a518, 3
  %v1_1000a528 = call i32 @__asm_rlwinm(i32 %v1_1000a524, i32 0, i32 0, i32 29)
  store i32 %v1_1000a528, i32* @r30, align 4
  %v4_1000a52c = icmp eq i32 %v1_1000a528, %v1_1000a518
  br i1 %v4_1000a52c, label %dec_label_pc_1000a53c, label %dec_label_pc_1000a534

dec_label_pc_1000a534:                            ; preds = %dec_label_pc_1000a524
  %v2_1000a534 = sub i32 %v1_1000a528, %v1_1000a518
  store i32 268477756, i32* @lr, align 4
  %v1_1000a538 = call i32 @function_1000b7f8(i32 %v2_1000a534)
  br label %dec_label_pc_1000a53c

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a524, %dec_label_pc_1000a504, %dec_label_pc_1000a534
  %v0_1000a544 = call i32 @function_1000afd8()
  %v0_1000a548 = load i32, i32* @r30, align 4
  %v3_1000a548 = icmp eq i32 %v0_1000a548, -1
  br i1 %v3_1000a548, label %dec_label_pc_1000a5ac, label %dec_label_pc_1000a590

dec_label_pc_1000a590:                            ; preds = %dec_label_pc_1000a53c
  store i32 ptrtoint (i32* @global_var_1001c760.304 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1001c688 to i32), i32* @r29, align 4
  %v0_1000a564 = call i32 @function_1000afd8()
  %v0_1000a568 = load i32, i32* @r31, align 4
  %v0_1000a56c = load i32, i32* @r30, align 4
  %v0_1000a570 = load i32, i32* @r29, align 4
  store i32 268477816, i32* @lr, align 4
  %v3_1000a574 = inttoptr i32 %v0_1000a570 to i32*
  %v4_1000a574 = call i32 @function_1000a9f8(i32* %v3_1000a574, i32 %v0_1000a56c, i32 %v0_1000a568)
  %v0_1000a578 = load i32, i32* @r29, align 4
  %v2_1000a580 = inttoptr i32 %v0_1000a578 to i32*
  %v3_1000a580 = call i32 @function_1000a874(i32* %v2_1000a580, i32 %v2_1000a4c0)
  store i32 %v3_1000a580, i32* %r31.global-to-local, align 4
  %v0_1000a58c = call i32 @function_1000afd8()
  %v3_1000a590 = icmp eq i32 %v3_1000a580, 0
  br i1 %v3_1000a590, label %dec_label_pc_1000a5a4.thread, label %dec_label_pc_1000a5a4

dec_label_pc_1000a5a4.thread:                     ; preds = %dec_label_pc_1000a590
  br label %dec_label_pc_1000a5ac

dec_label_pc_1000a5a4:                            ; preds = %dec_label_pc_1000a590, %dec_label_pc_1000a590.thread
  %v0_1000a5a4.pr6 = phi i32 [ %v3_1000a4c8, %dec_label_pc_1000a590.thread ], [ %v3_1000a580, %dec_label_pc_1000a590 ]
  %v3_1000a598 = load i32, i32* %stack_var_-40, align 4
  %v2_1000a59c = inttoptr i32 %v0_1000a5a4.pr6 to i32*
  store i32 %v3_1000a598, i32* %v2_1000a59c, align 4
  %v0_1000a5a0 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000a5a0 = add i32 %v0_1000a5a0, 4
  store i32 %v1_1000a5a0, i32* @r31, align 4
  %v3_1000a5a4 = icmp eq i32 %v1_1000a5a0, 0
  br i1 %v3_1000a5a4, label %dec_label_pc_1000a5ac, label %dec_label_pc_1000a5bc

dec_label_pc_1000a5ac:                            ; preds = %dec_label_pc_1000a5a4.thread, %dec_label_pc_1000a5a4, %dec_label_pc_1000a53c, %dec_label_pc_1000a498
  %v0_1000a5ac = call i32 @function_10009c78()
  %v2_1000a5b4 = inttoptr i32 %v0_1000a5ac to i32*
  store i32 12, i32* %v2_1000a5b4, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000a5bc

dec_label_pc_1000a5bc:                            ; preds = %dec_label_pc_1000a5a4, %dec_label_pc_1000a5ac
  %v0_1000a5c0 = phi i32 [ %v1_1000a5a0, %dec_label_pc_1000a5a4 ], [ 0, %dec_label_pc_1000a5ac ]
  ret i32 %v0_1000a5c0

; uselistorder directives
  uselistorder i32 %v1_1000a5a0, { 1, 0, 2 }
  uselistorder i32 %v1_1000a528, { 1, 0, 2 }
  uselistorder i32 %v1_1000a518, { 2, 0, 1, 3 }
  uselistorder i32 %v3_1000a4e4, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1000a4c8, { 1, 0, 2 }
  uselistorder i32 %v0_1000a47c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 4, 0, 2, 1, 3, 5 }
  uselistorder label %dec_label_pc_1000a5bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5ac, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a53c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a504, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4a4, { 1, 0 }
}

define i32 @function_1000a5d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a5d4:
  %v3_1000a5d4 = icmp eq i32 %arg1, 0
  %v2_1000a5e4 = mul i32 %arg2, %arg1
  store i32 %v2_1000a5e4, i32* @r31, align 4
  br i1 %v3_1000a5d4, label %dec_label_pc_1000a610, label %dec_label_pc_1000a5f0

dec_label_pc_1000a5f0:                            ; preds = %dec_label_pc_1000a5d4
  %v2_1000a5f0 = udiv i32 %v2_1000a5e4, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000a5f8 = icmp eq i32 %v2_1000a5f0, %arg2
  br i1 %v4_1000a5f8, label %dec_label_pc_1000a610, label %dec_label_pc_1000a600

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5f0
  %v0_1000a600 = call i32 @function_10009c78()
  %v2_1000a608 = inttoptr i32 %v0_1000a600 to i32*
  store i32 12, i32* %v2_1000a608, align 4
  br label %dec_label_pc_1000a62c

dec_label_pc_1000a610:                            ; preds = %dec_label_pc_1000a5f0, %dec_label_pc_1000a5d4
  store i32 %v2_1000a5e4, i32* @r3, align 4
  store i32 268477976, i32* @lr, align 4
  %v0_1000a614 = call i32 @function_1000a47c()
  %v0_1000a618 = load i32, i32* @r31, align 4
  store i32 %v0_1000a614, i32* @r30, align 4
  %v3_1000a61c = icmp eq i32 %v0_1000a614, 0
  br i1 %v3_1000a61c, label %dec_label_pc_1000a62c, label %dec_label_pc_1000a628

dec_label_pc_1000a628:                            ; preds = %dec_label_pc_1000a610
  store i32 268477996, i32* @lr, align 4
  %v3_1000a628 = call i32 @function_10009d60(i32 0, i32 %v0_1000a618, i32 %v0_1000a618)
  br label %dec_label_pc_1000a62c

dec_label_pc_1000a62c:                            ; preds = %dec_label_pc_1000a610, %dec_label_pc_1000a600, %dec_label_pc_1000a628
  %v0_1000a630 = load i32, i32* @r30, align 4
  ret i32 %v0_1000a630

; uselistorder directives
  uselistorder i32 %v0_1000a618, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a62c, { 2, 0, 1 }
}

define i32 @function_1000a644() local_unnamed_addr {
dec_label_pc_1000a644:
  %v0_1000a644 = load i32, i32* @r3, align 4
  %v3_1000a644 = icmp eq i32 %v0_1000a644, 0
  br i1 %v3_1000a644, label %dec_label_pc_1000a730, label %dec_label_pc_1000a65c

dec_label_pc_1000a65c:                            ; preds = %dec_label_pc_1000a644
  %v1_1000a660 = add i32 %v0_1000a644, -4
  %v2_1000a660 = inttoptr i32 %v1_1000a660 to i32*
  %v3_1000a660 = load i32, i32* %v2_1000a660, align 4
  store i32 %v3_1000a660, i32* @r28, align 4
  store i32 268566528, i32* @r26, align 4
  %v0_1000a674 = call i32 @function_1000afd8()
  %v0_1000a67c = load i32, i32* @r28, align 4
  store i32 268478088, i32* @lr, align 4
  %v4_1000a684 = call i32 @function_1000a9f8(i32* nonnull @global_var_1001c688, i32 %v1_1000a660, i32 %v0_1000a67c)
  %v3_1000a68c = load i32, i32* @global_var_1001c6e4.307, align 4
  store i32 %v4_1000a684, i32* @r29, align 4
  %v1_1000a694 = inttoptr i32 %v4_1000a684 to i32*
  %v2_1000a694 = load i32, i32* %v1_1000a694, align 4
  store i32 %v2_1000a694, i32* @r27, align 4
  %v1_1000a698 = mul i32 %v3_1000a68c, 8
  %v2_1000a69c = icmp ult i32 %v2_1000a694, %v1_1000a698
  br i1 %v2_1000a69c, label %dec_label_pc_1000a6d0, label %dec_label_pc_1000a6a4

dec_label_pc_1000a6a4:                            ; preds = %dec_label_pc_1000a65c
  store i32 ptrtoint (i32* @global_var_1001c900.308 to i32), i32* @r28, align 4
  %v0_1000a6b4 = call i32 @function_1000afd8()
  store i32 268478144, i32* @lr, align 4
  %v1_1000a6bc = call i32 @function_1000b7f8(i32 0)
  %v0_1000a6c0 = load i32, i32* @r31, align 4
  %v4_1000a6c0 = icmp eq i32 %v0_1000a6c0, %v1_1000a6bc
  br i1 %v4_1000a6c0, label %dec_label_pc_1000a6d8, label %dec_label_pc_1000a6c8

dec_label_pc_1000a6c8:                            ; preds = %dec_label_pc_1000a6a4
  %v0_1000a6cc = call i32 @function_1000afd8()
  br label %dec_label_pc_1000a6d0

dec_label_pc_1000a6d0:                            ; preds = %dec_label_pc_1000a65c, %dec_label_pc_1000a6c8
  br label %dec_label_pc_1000a72c

dec_label_pc_1000a6d8:                            ; preds = %dec_label_pc_1000a6a4
  %v0_1000a6d8 = load i32, i32* @r29, align 4
  %v1_1000a6d8 = add i32 %v0_1000a6d8, 4
  %v2_1000a6d8 = inttoptr i32 %v1_1000a6d8 to i32*
  %v3_1000a6d8 = load i32, i32* %v2_1000a6d8, align 4
  %v3_1000a6dc = icmp eq i32 %v3_1000a6d8, 0
  br i1 %v3_1000a6dc, label %dec_label_pc_1000a6ec, label %dec_label_pc_1000a6e4

dec_label_pc_1000a6e4:                            ; preds = %dec_label_pc_1000a6d8
  %v1_1000a6e4 = add i32 %v0_1000a6d8, 8
  %v2_1000a6e4 = inttoptr i32 %v1_1000a6e4 to i32*
  %v3_1000a6e4 = load i32, i32* %v2_1000a6e4, align 4
  %v2_1000a6e8 = add i32 %v3_1000a6d8, 8
  %v3_1000a6e8 = inttoptr i32 %v2_1000a6e8 to i32*
  store i32 %v3_1000a6e4, i32* %v3_1000a6e8, align 4
  %v0_1000a6ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6ec:                            ; preds = %dec_label_pc_1000a6d8, %dec_label_pc_1000a6e4
  %v0_1000a6ec = phi i32 [ %v0_1000a6d8, %dec_label_pc_1000a6d8 ], [ %v0_1000a6ec.pre, %dec_label_pc_1000a6e4 ]
  %v1_1000a6ec = add i32 %v0_1000a6ec, 8
  %v2_1000a6ec = inttoptr i32 %v1_1000a6ec to i32*
  %v3_1000a6ec = load i32, i32* %v2_1000a6ec, align 4
  %v1_1000a6f0 = add i32 %v0_1000a6ec, 4
  %v2_1000a6f0 = inttoptr i32 %v1_1000a6f0 to i32*
  %v3_1000a6f0 = load i32, i32* %v2_1000a6f0, align 4
  %v3_1000a6f4 = icmp eq i32 %v3_1000a6ec, 0
  br i1 %v3_1000a6f4, label %dec_label_pc_1000a704, label %dec_label_pc_1000a6fc

dec_label_pc_1000a6fc:                            ; preds = %dec_label_pc_1000a6ec
  %v2_1000a6fc = add i32 %v3_1000a6ec, 4
  %v3_1000a6fc = inttoptr i32 %v2_1000a6fc to i32*
  store i32 %v3_1000a6f0, i32* %v3_1000a6fc, align 4
  br label %dec_label_pc_1000a708

dec_label_pc_1000a704:                            ; preds = %dec_label_pc_1000a6ec
  store i32 %v3_1000a6f0, i32* @global_var_1001c688, align 4
  br label %dec_label_pc_1000a708

dec_label_pc_1000a708:                            ; preds = %dec_label_pc_1000a6fc, %dec_label_pc_1000a704
  %v0_1000a710 = call i32 @function_1000afd8()
  %v0_1000a714 = load i32, i32* @r27, align 4
  %v1_1000a714 = load i32, i32* @r29, align 4
  %v0_1000a71c = load i32, i32* @r31, align 4
  %v2_1000a714 = sub i32 12, %v0_1000a714
  %v1_1000a718 = add i32 %v2_1000a714, %v1_1000a714
  %v2_1000a71c = sub i32 %v1_1000a718, %v0_1000a71c
  store i32 268478244, i32* @lr, align 4
  %v1_1000a720 = call i32 @function_1000b7f8(i32 %v2_1000a71c)
  br label %dec_label_pc_1000a72c

dec_label_pc_1000a72c:                            ; preds = %dec_label_pc_1000a6d0, %dec_label_pc_1000a708
  %v0_1000a72c = call i32 @function_1000afd8()
  br label %dec_label_pc_1000a730

dec_label_pc_1000a730:                            ; preds = %dec_label_pc_1000a644, %dec_label_pc_1000a72c
  %.0 = phi i32 [ undef, %dec_label_pc_1000a644 ], [ %v0_1000a72c, %dec_label_pc_1000a72c ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000a6ec, { 1, 0 }
  uselistorder i32 (i32)* @function_1000b7f8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a730, { 1, 0 }
  uselistorder label %dec_label_pc_1000a72c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a708, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6d0, { 1, 0 }
}

define i32 @function_1000a744(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a744:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v3_1000a744 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000a744, label %dec_label_pc_1000a760, label %dec_label_pc_1000a76c

dec_label_pc_1000a760:                            ; preds = %dec_label_pc_1000a744
  store i32 ptrtoint ([3 x i8]* @global_var_1000a764.312 to i32), i32* @lr, align 4
  %v0_1000a760 = call i32 @function_1000a644()
  br label %dec_label_pc_1000a778

dec_label_pc_1000a76c:                            ; preds = %dec_label_pc_1000a744
  %v3_1000a76c = icmp eq i32 %arg1, 0
  br i1 %v3_1000a76c, label %dec_label_pc_1000a778, label %dec_label_pc_1000a784

dec_label_pc_1000a778:                            ; preds = %dec_label_pc_1000a76c, %dec_label_pc_1000a760
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a760 ], [ %arg2, %dec_label_pc_1000a76c ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268478332, i32* @lr, align 4
  %v0_1000a778 = call i32 @function_1000a47c()
  store i32 %v0_1000a778, i32* @r28, align 4
  br label %dec_label_pc_1000a85c

dec_label_pc_1000a784:                            ; preds = %dec_label_pc_1000a76c
  %v1_1000a784 = add i32 %arg2, 7
  %v1_1000a788 = add i32 %arg1, -4
  store i32 %v1_1000a788, i32* %r27.global-to-local, align 4
  %v1_1000a78c = call i32 @__asm_rlwinm(i32 %v1_1000a784, i32 0, i32 0, i32 29)
  store i32 %v1_1000a78c, i32* @r31, align 4
  %v2_1000a790 = inttoptr i32 %v1_1000a788 to i32*
  %v3_1000a790 = load i32, i32* %v2_1000a790, align 4
  store i32 %v3_1000a790, i32* @r30, align 4
  %v2_1000a794 = icmp ugt i32 %v1_1000a78c, 11
  br i1 %v2_1000a794, label %dec_label_pc_1000a7a0, label %dec_label_pc_1000a79c

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a784
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000a7a0

dec_label_pc_1000a7a0:                            ; preds = %dec_label_pc_1000a784, %dec_label_pc_1000a79c
  %v0_1000a820 = phi i32 [ %v1_1000a78c, %dec_label_pc_1000a784 ], [ 12, %dec_label_pc_1000a79c ]
  %v3_1000a7a0 = icmp ugt i32 %v0_1000a820, %v3_1000a790
  br i1 %v3_1000a7a0, label %dec_label_pc_1000a7a8, label %dec_label_pc_1000a820

dec_label_pc_1000a7a8:                            ; preds = %dec_label_pc_1000a7a0
  %v0_1000a7b4 = call i32 @function_1000afd8()
  %v0_1000a7bc = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a7bc = load i32, i32* @r30, align 4
  %v2_1000a7bc = add i32 %v1_1000a7bc, %v0_1000a7bc
  %v1_1000a7c0 = load i32, i32* @r31, align 4
  %v2_1000a7c0 = sub i32 %v1_1000a7c0, %v1_1000a7bc
  %v4_1000a7c8 = call i32 @function_1000a914(i32* nonnull @global_var_1001c688, i32 %v2_1000a7bc, i32 %v2_1000a7c0)
  store i32 %v4_1000a7c8, i32* %r27.global-to-local, align 4
  %v0_1000a7d4 = call i32 @function_1000afd8()
  %v3_1000a7d8 = icmp eq i32 %v4_1000a7c8, 0
  br i1 %v3_1000a7d8, label %dec_label_pc_1000a7ec, label %dec_label_pc_1000a7e0

dec_label_pc_1000a7e0:                            ; preds = %dec_label_pc_1000a7a8
  %v0_1000a7e0 = load i32, i32* @r30, align 4
  %v2_1000a7e0 = add i32 %v0_1000a7e0, %v4_1000a7c8
  %v1_1000a7e4 = load i32, i32* @r28, align 4
  %v2_1000a7e4 = add i32 %v1_1000a7e4, -4
  %v3_1000a7e4 = inttoptr i32 %v2_1000a7e4 to i32*
  store i32 %v2_1000a7e0, i32* %v3_1000a7e4, align 4
  br label %dec_label_pc_1000a85c

dec_label_pc_1000a7ec:                            ; preds = %dec_label_pc_1000a7a8
  %v0_1000a7ec = load i32, i32* @r31, align 4
  %v1_1000a7ec = add i32 %v0_1000a7ec, -4
  store i32 %v1_1000a7ec, i32* @r3, align 4
  store i32 268478452, i32* @lr, align 4
  %v0_1000a7f0 = call i32 @function_1000a47c()
  store i32 %v0_1000a7f0, i32* @r3, align 4
  store i32 %v0_1000a7f0, i32* @r31, align 4
  %v3_1000a7f4 = icmp eq i32 %v0_1000a7f0, 0
  br i1 %v3_1000a7f4, label %dec_label_pc_1000a7fc, label %dec_label_pc_1000a804

dec_label_pc_1000a7fc:                            ; preds = %dec_label_pc_1000a7ec
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a85c

dec_label_pc_1000a804:                            ; preds = %dec_label_pc_1000a7ec
  %v0_1000a804 = load i32, i32* @r28, align 4
  store i32 %v0_1000a804, i32* @r4, align 4
  %v0_1000a808 = load i32, i32* @r30, align 4
  %v1_1000a808 = add i32 %v0_1000a808, -4
  store i32 %v1_1000a808, i32* @r5, align 4
  store i32 268478480, i32* @lr, align 4
  %v0_1000a80c = call i32 @function_1000ba2c()
  %v0_1000a810 = load i32, i32* @r28, align 4
  store i32 %v0_1000a810, i32* @r3, align 4
  store i32 268478488, i32* @lr, align 4
  %v0_1000a814 = call i32 @function_1000a644()
  %v0_1000a818 = load i32, i32* @r31, align 4
  store i32 %v0_1000a818, i32* @r28, align 4
  br label %dec_label_pc_1000a85c

dec_label_pc_1000a820:                            ; preds = %dec_label_pc_1000a7a0
  %v1_1000a820 = add i32 %v0_1000a820, 28
  %v3_1000a824 = icmp ugt i32 %v1_1000a820, %v3_1000a790
  br i1 %v3_1000a824, label %dec_label_pc_1000a85c, label %dec_label_pc_1000a82c

dec_label_pc_1000a82c:                            ; preds = %dec_label_pc_1000a820
  store i32 ptrtoint (i32* @global_var_1001c760.304 to i32), i32* @r29, align 4
  %v0_1000a838 = call i32 @function_1000afd8()
  %v0_1000a840 = load i32, i32* %r27.global-to-local, align 4
  %v1_1000a840 = load i32, i32* @r31, align 4
  %v2_1000a840 = add i32 %v1_1000a840, %v0_1000a840
  %v1_1000a844 = load i32, i32* @r30, align 4
  %v2_1000a844 = sub i32 %v1_1000a844, %v1_1000a840
  store i32 268478544, i32* @lr, align 4
  %v4_1000a84c = call i32 @function_1000a9f8(i32* nonnull @global_var_1001c688, i32 %v2_1000a840, i32 %v2_1000a844)
  %v0_1000a854 = call i32 @function_1000afd8()
  %v0_1000a858 = load i32, i32* @r31, align 4
  %v1_1000a858 = load i32, i32* @r28, align 4
  %v2_1000a858 = add i32 %v1_1000a858, -4
  %v3_1000a858 = inttoptr i32 %v2_1000a858 to i32*
  store i32 %v0_1000a858, i32* %v3_1000a858, align 4
  br label %dec_label_pc_1000a85c

dec_label_pc_1000a85c:                            ; preds = %dec_label_pc_1000a820, %dec_label_pc_1000a804, %dec_label_pc_1000a7fc, %dec_label_pc_1000a7e0, %dec_label_pc_1000a778, %dec_label_pc_1000a82c
  %v0_1000a860 = load i32, i32* @r28, align 4
  ret i32 %v0_1000a860

; uselistorder directives
  uselistorder i32 %v1_1000a840, { 1, 0 }
  uselistorder i32 %v4_1000a7c8, { 1, 0, 2 }
  uselistorder i32 %v1_1000a7bc, { 1, 0 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1001c688, { 0, 1, 3, 2, 4 }
  uselistorder i32 ()* @function_1000a47c, { 2, 1, 0, 5, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 4, 3 }
  uselistorder i32 ()* @function_1000a644, { 4, 3, 7, 6, 5, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000a85c, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000a7a0, { 1, 0 }
}

define i32 @function_1000a874(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000a874:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_1000a874 = inttoptr i32 %arg2 to i32*
  %v2_1000a874 = load i32, i32* %v1_1000a874, align 4
  %v1_1000a878 = add i32 %v2_1000a874, 3
  store i32 %v1_1000a878, i32* %r9.global-to-local, align 4
  %v1_1000a87c = call i32 @__asm_rlwinm(i32 %v1_1000a878, i32 0, i32 0, i32 29)
  %v2_1000a880 = icmp ugt i32 %v1_1000a87c, 11
  br i1 %v2_1000a880, label %dec_label_pc_1000a904.preheader, label %dec_label_pc_1000a888

dec_label_pc_1000a888:                            ; preds = %dec_label_pc_1000a874
  br label %dec_label_pc_1000a904.preheader

dec_label_pc_1000a904.preheader:                  ; preds = %dec_label_pc_1000a874, %dec_label_pc_1000a888
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000a888 ], [ %v1_1000a87c, %dec_label_pc_1000a874 ]
  %v0_1000a8e8 = phi i32 [ 12, %dec_label_pc_1000a888 ], [ %v1_1000a87c, %dec_label_pc_1000a874 ]
  store i32 %storemerge20, i32* %r11.global-to-local, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* %r9.global-to-local, align 4
  %v3_1000a9045 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000a9045, label %dec_label_pc_1000a90c, label %dec_label_pc_1000a894

dec_label_pc_1000a894:                            ; preds = %dec_label_pc_1000a904.preheader, %dec_label_pc_1000a900
  %v0_1000a900 = phi i32 [ %storemerge, %dec_label_pc_1000a900 ], [ %storemerge2, %dec_label_pc_1000a904.preheader ]
  %v1_1000a894 = inttoptr i32 %v0_1000a900 to i32*
  %v2_1000a894 = load i32, i32* %v1_1000a894, align 4
  store i32 %v2_1000a894, i32* %r10.global-to-local, align 4
  %v2_1000a898 = icmp ult i32 %v2_1000a894, %v0_1000a8e8
  br i1 %v2_1000a898, label %dec_label_pc_1000a900, label %dec_label_pc_1000a8a0

dec_label_pc_1000a8a0:                            ; preds = %dec_label_pc_1000a894
  %v1_1000a8a0 = add i32 %v0_1000a8e8, 44
  %v2_1000a8a4 = icmp ult i32 %v2_1000a894, %v1_1000a8a0
  br i1 %v2_1000a8a4, label %dec_label_pc_1000a8ac, label %dec_label_pc_1000a8e8

dec_label_pc_1000a8ac:                            ; preds = %dec_label_pc_1000a8a0
  %v1_1000a8ac = add i32 %v0_1000a900, 4
  %v2_1000a8ac = inttoptr i32 %v1_1000a8ac to i32*
  %v3_1000a8ac = load i32, i32* %v2_1000a8ac, align 4
  store i32 %v3_1000a8ac, i32* %r11.global-to-local, align 4
  %v3_1000a8b0 = icmp eq i32 %v3_1000a8ac, 0
  br i1 %v3_1000a8b0, label %dec_label_pc_1000a8c0, label %dec_label_pc_1000a8b8

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8ac
  %v1_1000a8b8 = add i32 %v0_1000a900, 8
  %v2_1000a8b8 = inttoptr i32 %v1_1000a8b8 to i32*
  %v3_1000a8b8 = load i32, i32* %v2_1000a8b8, align 4
  %v2_1000a8bc = add i32 %v3_1000a8ac, 8
  %v3_1000a8bc = inttoptr i32 %v2_1000a8bc to i32*
  store i32 %v3_1000a8b8, i32* %v3_1000a8bc, align 4
  %v0_1000a8c0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000a8dc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000a8c0

dec_label_pc_1000a8c0:                            ; preds = %dec_label_pc_1000a8ac, %dec_label_pc_1000a8b8
  %v0_1000a8dc = phi i32 [ %v2_1000a894, %dec_label_pc_1000a8ac ], [ %v0_1000a8dc.pre, %dec_label_pc_1000a8b8 ]
  %v0_1000a8c0 = phi i32 [ %v0_1000a900, %dec_label_pc_1000a8ac ], [ %v0_1000a8c0.pre, %dec_label_pc_1000a8b8 ]
  %v1_1000a8c0 = add i32 %v0_1000a8c0, 8
  %v2_1000a8c0 = inttoptr i32 %v1_1000a8c0 to i32*
  %v3_1000a8c0 = load i32, i32* %v2_1000a8c0, align 4
  %v1_1000a8c4 = add i32 %v0_1000a8c0, 4
  %v2_1000a8c4 = inttoptr i32 %v1_1000a8c4 to i32*
  %v3_1000a8c4 = load i32, i32* %v2_1000a8c4, align 4
  %v3_1000a8c8 = icmp eq i32 %v3_1000a8c0, 0
  store i32 %v0_1000a8dc, i32* %r11.global-to-local, align 4
  br i1 %v3_1000a8c8, label %dec_label_pc_1000a8dc, label %dec_label_pc_1000a8d0

dec_label_pc_1000a8d0:                            ; preds = %dec_label_pc_1000a8c0
  %v2_1000a8d4 = add i32 %v3_1000a8c0, 4
  %v3_1000a8d4 = inttoptr i32 %v2_1000a8d4 to i32*
  store i32 %v3_1000a8c4, i32* %v3_1000a8d4, align 4
  br label %dec_label_pc_1000a8f0

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8c0
  store i32 %v3_1000a8c4, i32* %arg1, align 4
  br label %dec_label_pc_1000a8f0

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8a0
  %v2_1000a8e8 = sub i32 %v2_1000a894, %v0_1000a8e8
  store i32 %v2_1000a8e8, i32* %v1_1000a894, align 4
  br label %dec_label_pc_1000a8f0

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8dc, %dec_label_pc_1000a8d0, %dec_label_pc_1000a8e8
  %v0_1000a8f0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000a8f0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000a8f0 = sub i32 %v1_1000a8f0, %v0_1000a8f0
  store i32 %v2_1000a8f0, i32* %r9.global-to-local, align 4
  %v0_1000a8f4 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a8f4, i32* %v1_1000a874, align 4
  %v0_1000a8f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a8f8 = add i32 %v0_1000a8f8, 12
  ret i32 %v1_1000a8f8

dec_label_pc_1000a900:                            ; preds = %dec_label_pc_1000a894
  %v1_1000a900 = add i32 %v0_1000a900, 4
  %storemerge.in = inttoptr i32 %v1_1000a900 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v3_1000a904 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000a904, label %dec_label_pc_1000a904.dec_label_pc_1000a90c_crit_edge, label %dec_label_pc_1000a894

dec_label_pc_1000a904.dec_label_pc_1000a90c_crit_edge: ; preds = %dec_label_pc_1000a900
  br label %dec_label_pc_1000a90c

dec_label_pc_1000a90c:                            ; preds = %dec_label_pc_1000a904.dec_label_pc_1000a90c_crit_edge, %dec_label_pc_1000a904.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000a8c0, { 1, 0 }
  uselistorder i32 %v2_1000a894, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000a900, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000a8e8, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 4, 5, 2, 1, 3, 6 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 2, 0 }
  uselistorder i32* %r10.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a8c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a894, { 1, 0 }
  uselistorder label %dec_label_pc_1000a904.preheader, { 1, 0 }
}

define i32 @function_1000a914(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a914:
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000a914 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a914, i32* %r11.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v1_1000a91c = add i32 %arg3, 3
  %v3_1000a9a03 = icmp eq i32 %v2_1000a914, 0
  br i1 %v3_1000a9a03, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a924

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a914, %dec_label_pc_1000a99c
  %v0_1000a99c = phi i32 [ %v3_1000a99c, %dec_label_pc_1000a99c ], [ %v2_1000a914, %dec_label_pc_1000a914 ]
  %v1_1000a924 = inttoptr i32 %v0_1000a99c to i32*
  %v2_1000a924 = load i32, i32* %v1_1000a924, align 4
  %v2_1000a928 = sub i32 %v0_1000a99c, %v2_1000a924
  %v1_1000a92c = add i32 %v2_1000a928, 12
  %v3_1000a930 = icmp ugt i32 %v1_1000a92c, %arg2
  br i1 %v3_1000a930, label %dec_label_pc_1000a99c, label %dec_label_pc_1000a938

dec_label_pc_1000a938:                            ; preds = %dec_label_pc_1000a924
  %v4_1000a930 = icmp eq i32 %v1_1000a92c, %arg2
  br i1 %v4_1000a930, label %dec_label_pc_1000a940, label %dec_label_pc_1000a9a8

dec_label_pc_1000a940:                            ; preds = %dec_label_pc_1000a938
  %v1_1000a940 = call i32 @__asm_rlwinm(i32 %v1_1000a91c, i32 0, i32 0, i32 29)
  %v2_1000a944 = icmp ult i32 %v2_1000a924, %v1_1000a940
  br i1 %v2_1000a944, label %dec_label_pc_1000a9a8, label %dec_label_pc_1000a94c

dec_label_pc_1000a94c:                            ; preds = %dec_label_pc_1000a940
  %v1_1000a94c = add i32 %v1_1000a940, 44
  %v2_1000a950 = icmp ult i32 %v2_1000a924, %v1_1000a94c
  br i1 %v2_1000a950, label %dec_label_pc_1000a958, label %dec_label_pc_1000a98c

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a94c
  %v0_1000a958 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a958 = add i32 %v0_1000a958, 4
  %v2_1000a958 = inttoptr i32 %v1_1000a958 to i32*
  %v3_1000a958 = load i32, i32* %v2_1000a958, align 4
  %v3_1000a95c = icmp eq i32 %v3_1000a958, 0
  br i1 %v3_1000a95c, label %dec_label_pc_1000a96c, label %dec_label_pc_1000a964

dec_label_pc_1000a964:                            ; preds = %dec_label_pc_1000a958
  %v1_1000a964 = add i32 %v0_1000a958, 8
  %v2_1000a964 = inttoptr i32 %v1_1000a964 to i32*
  %v3_1000a964 = load i32, i32* %v2_1000a964, align 4
  %v2_1000a968 = add i32 %v3_1000a958, 8
  %v3_1000a968 = inttoptr i32 %v2_1000a968 to i32*
  store i32 %v3_1000a964, i32* %v3_1000a968, align 4
  %v0_1000a96c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a96c

dec_label_pc_1000a96c:                            ; preds = %dec_label_pc_1000a958, %dec_label_pc_1000a964
  %v0_1000a96c = phi i32 [ %v0_1000a958, %dec_label_pc_1000a958 ], [ %v0_1000a96c.pre, %dec_label_pc_1000a964 ]
  %v1_1000a96c = add i32 %v0_1000a96c, 8
  %v2_1000a96c = inttoptr i32 %v1_1000a96c to i32*
  %v3_1000a96c = load i32, i32* %v2_1000a96c, align 4
  %v1_1000a970 = add i32 %v0_1000a96c, 4
  %v2_1000a970 = inttoptr i32 %v1_1000a970 to i32*
  %v3_1000a970 = load i32, i32* %v2_1000a970, align 4
  %v3_1000a974 = icmp eq i32 %v3_1000a96c, 0
  br i1 %v3_1000a974, label %dec_label_pc_1000a984, label %dec_label_pc_1000a97c

dec_label_pc_1000a97c:                            ; preds = %dec_label_pc_1000a96c
  %v2_1000a97c = add i32 %v3_1000a96c, 4
  %v3_1000a97c = inttoptr i32 %v2_1000a97c to i32*
  store i32 %v3_1000a970, i32* %v3_1000a97c, align 4
  ret i32 %v2_1000a924

dec_label_pc_1000a984:                            ; preds = %dec_label_pc_1000a96c
  %v1_1000a984 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000a984 = inttoptr i32 %v1_1000a984 to i32*
  store i32 %v3_1000a970, i32* %v2_1000a984, align 4
  ret i32 %v2_1000a924

dec_label_pc_1000a98c:                            ; preds = %dec_label_pc_1000a94c
  %v2_1000a98c = sub i32 %v2_1000a924, %v1_1000a940
  %v1_1000a994 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000a994 = inttoptr i32 %v1_1000a994 to i32*
  store i32 %v2_1000a98c, i32* %v2_1000a994, align 4
  ret i32 %v1_1000a940

dec_label_pc_1000a99c:                            ; preds = %dec_label_pc_1000a924
  %v1_1000a99c = add i32 %v0_1000a99c, 4
  %v2_1000a99c = inttoptr i32 %v1_1000a99c to i32*
  %v3_1000a99c = load i32, i32* %v2_1000a99c, align 4
  store i32 %v3_1000a99c, i32* %r11.global-to-local, align 4
  %v3_1000a9a0 = icmp eq i32 %v3_1000a99c, 0
  br i1 %v3_1000a9a0, label %dec_label_pc_1000a9a0.dec_label_pc_1000a9a8.loopexit_crit_edge, label %dec_label_pc_1000a924

dec_label_pc_1000a9a0.dec_label_pc_1000a9a8.loopexit_crit_edge: ; preds = %dec_label_pc_1000a99c
  br label %dec_label_pc_1000a9a8

dec_label_pc_1000a9a8:                            ; preds = %dec_label_pc_1000a914, %dec_label_pc_1000a9a0.dec_label_pc_1000a9a8.loopexit_crit_edge, %dec_label_pc_1000a938, %dec_label_pc_1000a940
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000a99c, { 1, 2, 0 }
  uselistorder i32 %v0_1000a96c, { 1, 0 }
  uselistorder i32 %v1_1000a940, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a924, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %v0_1000a99c, { 0, 2, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9a8, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000a96c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a924, { 1, 0 }
}

define i32 @function_1000a9b0(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a9b0:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a9b0 = icmp eq i32 %arg3, 0
  %v2_1000a9b4 = add i32 %arg2, 4
  %v3_1000a9b4 = inttoptr i32 %v2_1000a9b4 to i32*
  store i32 %arg4, i32* %v3_1000a9b4, align 4
  %v2_1000a9b8 = add i32 %arg2, 8
  %v3_1000a9b8 = inttoptr i32 %v2_1000a9b8 to i32*
  store i32 %arg3, i32* %v3_1000a9b8, align 4
  br i1 %v3_1000a9b0, label %dec_label_pc_1000a9c8, label %dec_label_pc_1000a9c0

dec_label_pc_1000a9c0:                            ; preds = %dec_label_pc_1000a9b0
  %v2_1000a9c0 = add i32 %arg3, 4
  %v3_1000a9c0 = inttoptr i32 %v2_1000a9c0 to i32*
  store i32 %arg2, i32* %v3_1000a9c0, align 4
  br label %dec_label_pc_1000a9cc

dec_label_pc_1000a9c8:                            ; preds = %dec_label_pc_1000a9b0
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a9cc

dec_label_pc_1000a9cc:                            ; preds = %dec_label_pc_1000a9c0, %dec_label_pc_1000a9c8
  %v3_1000a9cc = icmp eq i32 %arg4, 0
  %v0_1000a9d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000a9cc, i32 %v0_1000a9d0)
  %v2_1000a9d4 = add i32 %arg4, 8
  %v3_1000a9d4 = inttoptr i32 %v2_1000a9d4 to i32*
  store i32 %arg2, i32* %v3_1000a9d4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 1, 0, 2 }
  uselistorder i32 %arg2, { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_1000a9cc, { 1, 0 }
}

define i32 @function_1000a9dc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000a9dc:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000a9dc = icmp eq i32 %arg3, 0
  br i1 %v3_1000a9dc, label %dec_label_pc_1000a9ec, label %dec_label_pc_1000a9e4

dec_label_pc_1000a9e4:                            ; preds = %dec_label_pc_1000a9dc
  %v2_1000a9e4 = add i32 %arg3, 4
  %v3_1000a9e4 = inttoptr i32 %v2_1000a9e4 to i32*
  store i32 %arg2, i32* %v3_1000a9e4, align 4
  br label %dec_label_pc_1000a9f0

dec_label_pc_1000a9ec:                            ; preds = %dec_label_pc_1000a9dc
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000a9f0

dec_label_pc_1000a9f0:                            ; preds = %dec_label_pc_1000a9e4, %dec_label_pc_1000a9ec
  %v2_1000a9f0 = add i32 %arg2, 8
  %v3_1000a9f0 = inttoptr i32 %v2_1000a9f0 to i32*
  store i32 %arg3, i32* %v3_1000a9f0, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a9f0, { 1, 0 }
}

define i32 @function_1000a9f8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000a9f8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r10.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v2_1000aa10 = load i32, i32* %arg1, align 4
  store i32 %v2_1000aa10, i32* @r31, align 4
  %v2_1000aa14 = add i32 %arg3, %arg2
  store i32 %v2_1000aa14, i32* %r3.global-to-local, align 4
  %v3_1000aa287 = icmp eq i32 %v2_1000aa10, 0
  %v1_1000aa2c8 = add i32 %v2_1000aa10, 12
  %tmp69 = icmp uge i32 %v1_1000aa2c8, %arg2
  %or.cond10 = or i1 %v3_1000aa287, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000aa38, label %dec_label_pc_1000aa20

dec_label_pc_1000aa20:                            ; preds = %dec_label_pc_1000a9f8, %dec_label_pc_1000aa20
  %v0_1000aa8011 = phi i32 [ %v3_1000aa24, %dec_label_pc_1000aa20 ], [ %v2_1000aa10, %dec_label_pc_1000a9f8 ]
  store i32 %v0_1000aa8011, i32* %r11.global-to-local, align 4
  %v1_1000aa24 = add i32 %v0_1000aa8011, 4
  %v2_1000aa24 = inttoptr i32 %v1_1000aa24 to i32*
  %v3_1000aa24 = load i32, i32* %v2_1000aa24, align 4
  store i32 %v3_1000aa24, i32* @r31, align 4
  %v3_1000aa28 = icmp eq i32 %v3_1000aa24, 0
  %v1_1000aa2c = add i32 %v3_1000aa24, 12
  %tmp6 = icmp uge i32 %v1_1000aa2c, %arg2
  %or.cond = or i1 %v3_1000aa28, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000aa38, label %dec_label_pc_1000aa20

dec_label_pc_1000aa38:                            ; preds = %dec_label_pc_1000aa20, %dec_label_pc_1000a9f8
  %v0_1000aa74.lcssa = phi i32 [ 0, %dec_label_pc_1000a9f8 ], [ %v0_1000aa8011, %dec_label_pc_1000aa20 ]
  %v0_1000aa80.lcssa = phi i32 [ %v2_1000aa10, %dec_label_pc_1000a9f8 ], [ %v3_1000aa24, %dec_label_pc_1000aa20 ]
  %v3_1000aa28.lcssa = phi i1 [ %v3_1000aa287, %dec_label_pc_1000a9f8 ], [ %v3_1000aa28, %dec_label_pc_1000aa20 ]
  br i1 %v3_1000aa28.lcssa, label %dec_label_pc_1000aaf0, label %dec_label_pc_1000aa40

dec_label_pc_1000aa40:                            ; preds = %dec_label_pc_1000aa38
  %v1_1000aa40 = inttoptr i32 %v0_1000aa80.lcssa to i32*
  %v2_1000aa40 = load i32, i32* %v1_1000aa40, align 4
  %v2_1000aa44 = sub i32 %v0_1000aa80.lcssa, %v2_1000aa40
  %v1_1000aa48 = add i32 %v2_1000aa44, 12
  %v3_1000aa4c = icmp ugt i32 %v1_1000aa48, %v2_1000aa14
  br i1 %v3_1000aa4c, label %dec_label_pc_1000aaf0, label %dec_label_pc_1000aa54

dec_label_pc_1000aa54:                            ; preds = %dec_label_pc_1000aa40
  %v4_1000aa4c = icmp eq i32 %v1_1000aa48, %v2_1000aa14
  %v2_1000aa58 = add i32 %v2_1000aa40, %arg3
  store i32 %v2_1000aa58, i32* @r29, align 4
  br i1 %v4_1000aa4c, label %dec_label_pc_1000aa60, label %dec_label_pc_1000aa90

dec_label_pc_1000aa60:                            ; preds = %dec_label_pc_1000aa54
  %v3_1000aa60 = icmp eq i32 %v0_1000aa74.lcssa, 0
  br i1 %v3_1000aa60, label %dec_label_pc_1000aae4, label %dec_label_pc_1000aa68

dec_label_pc_1000aa68:                            ; preds = %dec_label_pc_1000aa60
  %v1_1000aa68 = add i32 %v0_1000aa74.lcssa, 12
  %v4_1000aa6c = icmp eq i32 %v1_1000aa68, %arg2
  br i1 %v4_1000aa6c, label %dec_label_pc_1000aa74, label %dec_label_pc_1000aae4

dec_label_pc_1000aa74:                            ; preds = %dec_label_pc_1000aa68
  %v1_1000aa74 = inttoptr i32 %v0_1000aa74.lcssa to i32*
  %v2_1000aa74 = load i32, i32* %v1_1000aa74, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000aa7c = add i32 %v0_1000aa74.lcssa, 8
  %v2_1000aa7c = inttoptr i32 %v1_1000aa7c to i32*
  %v3_1000aa7c = load i32, i32* %v2_1000aa7c, align 4
  %v2_1000aa84 = add i32 %v2_1000aa74, %v2_1000aa58
  store i32 %v2_1000aa84, i32* @r29, align 4
  %v5_1000aa88 = call i32 @function_1000a9dc(i32* %arg1, i32 %v0_1000aa80.lcssa, i32 %v3_1000aa7c, i32 %v2_1000aa14)
  store i32 %v5_1000aa88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aae4

dec_label_pc_1000aa90:                            ; preds = %dec_label_pc_1000aa54
  %v1_1000aa90 = add i32 %v0_1000aa80.lcssa, 4
  %v2_1000aa90 = inttoptr i32 %v1_1000aa90 to i32*
  %v3_1000aa90 = load i32, i32* %v2_1000aa90, align 4
  %v3_1000aa94 = icmp eq i32 %v3_1000aa90, 0
  br i1 %v3_1000aa94, label %dec_label_pc_1000aacc, label %dec_label_pc_1000aa9c

dec_label_pc_1000aa9c:                            ; preds = %dec_label_pc_1000aa90
  %v1_1000aa9c = inttoptr i32 %v3_1000aa90 to i32*
  %v2_1000aa9c = load i32, i32* %v1_1000aa9c, align 4
  %v2_1000aaa0 = sub i32 %v3_1000aa90, %v2_1000aa9c
  %v1_1000aaa4 = add i32 %v2_1000aaa0, 12
  %v4_1000aaa8 = icmp eq i32 %v2_1000aa14, %v1_1000aaa4
  br i1 %v4_1000aaa8, label %dec_label_pc_1000aab0, label %dec_label_pc_1000aacc

dec_label_pc_1000aab0:                            ; preds = %dec_label_pc_1000aa9c
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000aabc = add i32 %v2_1000aa9c, %v2_1000aa58
  store i32 %v2_1000aabc, i32* @r29, align 4
  store i32 %v3_1000aa90, i32* @r31, align 4
  %v5_1000aac4 = call i32 @function_1000a9dc(i32* %arg1, i32 %v3_1000aa90, i32 %v0_1000aa74.lcssa, i32 %v2_1000aa14)
  store i32 %v5_1000aac4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aae4

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aa9c, %dec_label_pc_1000aa90
  %v2_1000aacc = add i32 %v0_1000aa80.lcssa, %arg3
  store i32 %v2_1000aacc, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268479204, i32* @lr, align 4
  %v5_1000aae0 = call i32 @function_1000a9b0(i32* %arg1, i32 %v2_1000aacc, i32 %v0_1000aa74.lcssa, i32 %v3_1000aa90)
  store i32 %v5_1000aae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000aae4

dec_label_pc_1000aae4:                            ; preds = %dec_label_pc_1000aa68, %dec_label_pc_1000aa60, %dec_label_pc_1000aab0, %dec_label_pc_1000aa74, %dec_label_pc_1000aacc
  %v0_1000aae4 = load i32, i32* @r31, align 4
  store i32 %v0_1000aae4, i32* @r30, align 4
  %v0_1000aae8 = load i32, i32* @r29, align 4
  %v2_1000aae8 = inttoptr i32 %v0_1000aae4 to i32*
  store i32 %v0_1000aae8, i32* %v2_1000aae8, align 4
  br label %dec_label_pc_1000ab0c

dec_label_pc_1000aaf0:                            ; preds = %dec_label_pc_1000aa40, %dec_label_pc_1000aa38
  %v2_1000aaf0 = add i32 %v2_1000aa14, -12
  %v3_1000aaf0 = inttoptr i32 %v2_1000aaf0 to i32*
  store i32 %arg3, i32* %v3_1000aaf0, align 4
  %v0_1000aaf4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000aaf4 = add i32 %v0_1000aaf4, -12
  store i32 %v1_1000aaf4, i32* @r30, align 4
  %v0_1000aaf8 = load i32, i32* %r11.global-to-local, align 4
  %v0_1000aafc = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000aafc, i32* %r3.global-to-local, align 4
  %v0_1000ab00 = load i32, i32* @r31, align 4
  store i32 268479244, i32* @lr, align 4
  %v4_1000ab08 = inttoptr i32 %v0_1000aafc to i32*
  %v5_1000ab08 = call i32 @function_1000a9b0(i32* %v4_1000ab08, i32 %v1_1000aaf4, i32 %v0_1000aaf8, i32 %v0_1000ab00)
  store i32 %v5_1000ab08, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ab0c

dec_label_pc_1000ab0c:                            ; preds = %dec_label_pc_1000aae4, %dec_label_pc_1000aaf0
  %v0_1000ab10 = load i32, i32* @r30, align 4
  store i32 %v0_1000ab10, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ab10

; uselistorder directives
  uselistorder i32 %v3_1000aa90, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000aa48, { 1, 0 }
  uselistorder i32 %v0_1000aa80.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000aa74.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000aa24, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000aa14, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 8, 4, 9, 10, 11, 1, 2, 3, 5, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @function_1000a9dc, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000ab0c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aae4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000aa20, { 1, 0 }
}

define i32 @function_1000ab24(i8* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000ab24:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @r25, align 4
  store i32 10, i32* %r30.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000ab5c = load i32, i32* bitcast (i32** @global_var_1001c694.315 to i32*), align 4
  %v2_1000ab6827 = load i8, i8* %arg1, align 1
  %v3_1000ab6828 = zext i8 %v2_1000ab6827 to i32
  %v1_1000ab6c29 = mul nuw nsw i32 %v3_1000ab6828, 2
  %v2_1000ab7030 = add i32 %v1_1000ab6c29, %v3_1000ab5c
  %v3_1000ab7031 = inttoptr i32 %v2_1000ab7030 to i16*
  %v4_1000ab7032 = load i16, i16* %v3_1000ab7031, align 2
  %v1_1000ab7434 = and i16 %v4_1000ab7032, 32
  %v3_1000ab7435 = icmp eq i16 %v1_1000ab7434, 0
  br i1 %v3_1000ab7435, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000ab64

dec_label_pc_1000ab64:                            ; preds = %dec_label_pc_1000ab24, %dec_label_pc_1000ab64
  %v0_1000ab9c36 = phi i32 [ %v1_1000ab64, %dec_label_pc_1000ab64 ], [ %tmp, %dec_label_pc_1000ab24 ]
  %v1_1000ab64 = add i32 %v0_1000ab9c36, 1
  store i32 %v1_1000ab64, i32* %r31.global-to-local, align 4
  %v1_1000ab68 = inttoptr i32 %v1_1000ab64 to i8*
  %v2_1000ab68 = load i8, i8* %v1_1000ab68, align 1
  %v3_1000ab68 = zext i8 %v2_1000ab68 to i32
  %v1_1000ab6c = mul nuw nsw i32 %v3_1000ab68, 2
  %v2_1000ab70 = add i32 %v1_1000ab6c, %v3_1000ab5c
  %v3_1000ab70 = inttoptr i32 %v2_1000ab70 to i16*
  %v4_1000ab70 = load i16, i16* %v3_1000ab70, align 2
  %v1_1000ab74 = and i16 %v4_1000ab70, 32
  %v3_1000ab74 = icmp eq i16 %v1_1000ab74, 0
  br i1 %v3_1000ab74, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000ab64

dec_label_pc_1000ab7c:                            ; preds = %dec_label_pc_1000ab64, %dec_label_pc_1000ab24
  %v0_1000ab9c.lcssa = phi i32 [ %tmp, %dec_label_pc_1000ab24 ], [ %v1_1000ab64, %dec_label_pc_1000ab64 ]
  %v2_1000ab68.lcssa = phi i8 [ %v2_1000ab6827, %dec_label_pc_1000ab24 ], [ %v2_1000ab68, %dec_label_pc_1000ab64 ]
  %v3_1000ab7c = icmp eq i8 %v2_1000ab68.lcssa, 43
  br i1 %v3_1000ab7c, label %dec_label_pc_1000ab9c, label %dec_label_pc_1000ab84

dec_label_pc_1000ab84:                            ; preds = %dec_label_pc_1000ab7c
  %v3_1000ab84 = icmp eq i8 %v2_1000ab68.lcssa, 45
  store i32 0, i32* @r28, align 4
  br i1 %v3_1000ab84, label %dec_label_pc_1000ab9c, label %dec_label_pc_1000aba0

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab7c, %dec_label_pc_1000ab84
  %storemerge = phi i32 [ 1, %dec_label_pc_1000ab84 ], [ 0, %dec_label_pc_1000ab7c ]
  store i32 %storemerge, i32* @r28, align 4
  %v1_1000ab9c = add i32 %v0_1000ab9c.lcssa, 1
  store i32 %v1_1000ab9c, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000aba0

dec_label_pc_1000aba0:                            ; preds = %dec_label_pc_1000ab84, %dec_label_pc_1000ab9c
  %v1_1000aba0 = call i32 @__asm_rlwinm.(i32 10, i32 0, i32 28, i32 26)
  %v4_1000aba0 = icmp eq i32 %v1_1000aba0, 0
  br i1 %v4_1000aba0, label %dec_label_pc_1000abac, label %dec_label_pc_1000aba0.dec_label_pc_1000abe8_crit_edge

dec_label_pc_1000aba0.dec_label_pc_1000abe8_crit_edge: ; preds = %dec_label_pc_1000aba0
  %v0_1000abe8.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000abe8

dec_label_pc_1000abac:                            ; preds = %dec_label_pc_1000aba0
  %v0_1000abac = load i32, i32* %r31.global-to-local, align 4
  %v1_1000abac = inttoptr i32 %v0_1000abac to i8*
  %v2_1000abac = load i8, i8* %v1_1000abac, align 1
  %v0_1000abb0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000abb0 = add i32 %v0_1000abb0, 10
  store i32 %v1_1000abb0, i32* %r30.global-to-local, align 4
  %v3_1000abb4 = icmp eq i8 %v2_1000abac, 48
  br i1 %v3_1000abb4, label %dec_label_pc_1000abbc, label %dec_label_pc_1000abdc

dec_label_pc_1000abbc:                            ; preds = %dec_label_pc_1000abac
  %v1_1000abbc = add i32 %v0_1000abac, 1
  %v2_1000abbc = inttoptr i32 %v1_1000abbc to i8*
  %v3_1000abbc = load i8, i8* %v2_1000abbc, align 1
  %v4_1000abbc = zext i8 %v3_1000abbc to i32
  store i32 %v1_1000abbc, i32* %r31.global-to-local, align 4
  %v1_1000abc0 = add i32 %v0_1000abb0, 8
  store i32 %v1_1000abc0, i32* %r30.global-to-local, align 4
  %v1_1000abc4 = or i32 %v4_1000abbc, 32
  %v3_1000abcc = icmp eq i32 %v1_1000abc4, 120
  br i1 %v3_1000abcc, label %dec_label_pc_1000abd4, label %dec_label_pc_1000abdc

dec_label_pc_1000abd4:                            ; preds = %dec_label_pc_1000abbc
  %v1_1000abd4 = mul i32 %v1_1000abc0, 2
  store i32 %v1_1000abd4, i32* %r30.global-to-local, align 4
  %v1_1000abd8 = add i32 %v0_1000abac, 2
  store i32 %v1_1000abd8, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000abdc

dec_label_pc_1000abdc:                            ; preds = %dec_label_pc_1000abbc, %dec_label_pc_1000abac, %dec_label_pc_1000abd4
  %v0_1000ac9015 = phi i32 [ %v1_1000abbc, %dec_label_pc_1000abd4 ], [ %tmp, %dec_label_pc_1000abac ], [ %v1_1000abbc, %dec_label_pc_1000abbc ]
  %v0_1000abdc = phi i32 [ %v1_1000abd4, %dec_label_pc_1000abd4 ], [ %v1_1000abb0, %dec_label_pc_1000abac ], [ %v1_1000abc0, %dec_label_pc_1000abbc ]
  %tmp22 = icmp slt i32 %v0_1000abdc, 17
  br i1 %tmp22, label %dec_label_pc_1000abe8, label %dec_label_pc_1000abe4

dec_label_pc_1000abe4:                            ; preds = %dec_label_pc_1000abdc
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000abe8

dec_label_pc_1000abe8:                            ; preds = %dec_label_pc_1000aba0.dec_label_pc_1000abe8_crit_edge, %dec_label_pc_1000abdc, %dec_label_pc_1000abe4
  %v0_1000ac9014 = phi i32 [ %tmp, %dec_label_pc_1000aba0.dec_label_pc_1000abe8_crit_edge ], [ %v0_1000ac9015, %dec_label_pc_1000abdc ], [ %v0_1000ac9015, %dec_label_pc_1000abe4 ]
  %v1_1000abfc = phi i32 [ %v0_1000abe8.pre, %dec_label_pc_1000aba0.dec_label_pc_1000abe8_crit_edge ], [ %v0_1000abdc, %dec_label_pc_1000abdc ], [ 16, %dec_label_pc_1000abe4 ]
  %v1_1000abe8 = add i32 %v1_1000abfc, -2
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1000abf0 = icmp ugt i32 %v1_1000abe8, 34
  br i1 %v2_1000abf0, label %dec_label_pc_1000ac88, label %dec_label_pc_1000abf8

dec_label_pc_1000abf8:                            ; preds = %dec_label_pc_1000abe8
  %v2_1000abfc = udiv i32 -1, %v1_1000abfc
  store i32 %v2_1000abfc, i32* @r29, align 4
  %v2_1000ac00 = mul i32 %v2_1000abfc, %v1_1000abfc
  %v1_1000ac04 = sub i32 -1, %v2_1000ac00
  %v1_1000ac08 = urem i32 %v1_1000ac04, 256
  store i32 %v1_1000ac08, i32* @r27, align 4
  %v0_1000ac14.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ac14

dec_label_pc_1000ac10:                            ; preds = %dec_label_pc_1000ac7c, %dec_label_pc_1000ac64
  %v1_1000ac18.pre = phi i32 [ %v1_1000ac1c, %dec_label_pc_1000ac7c ], [ %v1_1000ac18.pre.pre, %dec_label_pc_1000ac64 ]
  %v0_1000ac18.pre = phi i32 [ %v2_1000ac80, %dec_label_pc_1000ac7c ], [ %v0_1000ac18.pre.pre, %dec_label_pc_1000ac64 ]
  %v0_1000ac10 = phi i32 [ %v1_1000ac20, %dec_label_pc_1000ac7c ], [ %v0_1000ac10.pre, %dec_label_pc_1000ac64 ]
  br label %dec_label_pc_1000ac14

dec_label_pc_1000ac14:                            ; preds = %dec_label_pc_1000abf8, %dec_label_pc_1000ac10
  %v0_1000ac9012 = phi i32 [ %v0_1000ac9014, %dec_label_pc_1000abf8 ], [ %v0_1000ac10, %dec_label_pc_1000ac10 ]
  %v0_1000ac20 = phi i32 [ %v0_1000ac14.pre, %dec_label_pc_1000abf8 ], [ %v0_1000ac10, %dec_label_pc_1000ac10 ]
  %v1_1000ac1c = phi i32 [ %v2_1000abfc, %dec_label_pc_1000abf8 ], [ %v1_1000ac18.pre, %dec_label_pc_1000ac10 ]
  %v0_1000ac7c = phi i32 [ 0, %dec_label_pc_1000abf8 ], [ %v0_1000ac18.pre, %dec_label_pc_1000ac10 ]
  %v1_1000ac14 = inttoptr i32 %v0_1000ac20 to i8*
  %v2_1000ac14 = load i8, i8* %v1_1000ac14, align 1
  %v3_1000ac14 = zext i8 %v2_1000ac14 to i32
  %v3_1000ac18 = icmp ugt i32 %v0_1000ac7c, %v1_1000ac1c
  %v1_1000ac20 = add i32 %v0_1000ac20, 1
  store i32 %v1_1000ac20, i32* %r31.global-to-local, align 4
  %v1_1000ac24 = add nsw i32 %v3_1000ac14, -48
  %v1_1000ac28 = or i32 %v3_1000ac14, 32
  %v1_1000ac2c = urem i32 %v1_1000ac24, 256
  %tmp23 = icmp ult i32 %v1_1000ac2c, 10
  br i1 %tmp23, label %dec_label_pc_1000ac4c, label %dec_label_pc_1000ac3c

dec_label_pc_1000ac3c:                            ; preds = %dec_label_pc_1000ac14
  %tmp24 = icmp ult i32 %v1_1000ac28, 97
  br i1 %tmp24, label %dec_label_pc_1000ac4c, label %dec_label_pc_1000ac48

dec_label_pc_1000ac48:                            ; preds = %dec_label_pc_1000ac3c
  %v1_1000ac3c = add nsw i32 %v1_1000ac28, -87
  %v1_1000ac48 = urem i32 %v1_1000ac3c, 256
  br label %dec_label_pc_1000ac4c

dec_label_pc_1000ac4c:                            ; preds = %dec_label_pc_1000ac3c, %dec_label_pc_1000ac14, %dec_label_pc_1000ac48
  %v1_1000ac80 = phi i32 [ 40, %dec_label_pc_1000ac3c ], [ %v1_1000ac2c, %dec_label_pc_1000ac14 ], [ %v1_1000ac48, %dec_label_pc_1000ac48 ]
  %v1_1000ac4c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ac4c = icmp slt i32 %v1_1000ac80, %v1_1000ac4c
  br i1 %v2_1000ac4c, label %dec_label_pc_1000ac54, label %dec_label_pc_1000ac88

dec_label_pc_1000ac54:                            ; preds = %dec_label_pc_1000ac4c
  br i1 %v3_1000ac18, label %dec_label_pc_1000ac64, label %dec_label_pc_1000ac58

dec_label_pc_1000ac58:                            ; preds = %dec_label_pc_1000ac54
  %v1_1000ac58 = load i32, i32* @r27, align 4
  %v0_1000ac5c.not = icmp ne i32 %v0_1000ac7c, %v1_1000ac1c
  %tmp25 = icmp ule i32 %v1_1000ac80, %v1_1000ac58
  %or.cond = or i1 %tmp25, %v0_1000ac5c.not
  br i1 %or.cond, label %dec_label_pc_1000ac7c, label %dec_label_pc_1000ac64

dec_label_pc_1000ac64:                            ; preds = %dec_label_pc_1000ac58, %dec_label_pc_1000ac54
  %v0_1000ac64 = call i32 @function_10009c78()
  %v0_1000ac68 = load i32, i32* @r28, align 4
  %v1_1000ac68 = load i32, i32* @r26, align 4
  %v2_1000ac68 = and i32 %v1_1000ac68, %v0_1000ac68
  store i32 %v2_1000ac68, i32* @r28, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  %v2_1000ac74 = inttoptr i32 %v0_1000ac64 to i32*
  store i32 34, i32* %v2_1000ac74, align 4
  %v0_1000ac10.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000ac18.pre.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000ac18.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac7c:                            ; preds = %dec_label_pc_1000ac58
  %v2_1000ac7c = mul i32 %v1_1000ac4c, %v0_1000ac7c
  %v2_1000ac80 = add i32 %v2_1000ac7c, %v1_1000ac80
  store i32 %v2_1000ac80, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000ac10

dec_label_pc_1000ac88:                            ; preds = %dec_label_pc_1000ac4c, %dec_label_pc_1000abe8
  %v0_1000ac90 = phi i32 [ %v0_1000ac9014, %dec_label_pc_1000abe8 ], [ %v0_1000ac9012, %dec_label_pc_1000ac4c ]
  %v0_1000ac88 = load i32, i32* @r25, align 4
  %v3_1000ac88 = icmp eq i32 %v0_1000ac88, 0
  br i1 %v3_1000ac88, label %dec_label_pc_1000ac94, label %dec_label_pc_1000ac90

dec_label_pc_1000ac90:                            ; preds = %dec_label_pc_1000ac88
  %v2_1000ac90 = inttoptr i32 %v0_1000ac88 to i32*
  store i32 %v0_1000ac90, i32* %v2_1000ac90, align 4
  br label %dec_label_pc_1000ac94

dec_label_pc_1000ac94:                            ; preds = %dec_label_pc_1000ac88, %dec_label_pc_1000ac90
  %v0_1000ac94 = load i32, i32* @r26, align 4
  %v3_1000ac94 = icmp eq i32 %v0_1000ac94, 0
  %v0_1000ac98 = load i32, i32* @r28, align 4
  %v1_1000ac98 = sub i32 0, %v0_1000ac98
  %tmp40 = lshr i32 %v1_1000ac98, 31
  %tmp41 = add nuw i32 %tmp40, 2147483647
  store i32 %tmp41, i32* @r31, align 4
  %v0_1000acd8.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v3_1000ac94, label %dec_label_pc_1000acc8, label %dec_label_pc_1000acb0

dec_label_pc_1000acb0:                            ; preds = %dec_label_pc_1000ac94
  %v3_1000acb0 = icmp ugt i32 %v0_1000acd8.pre.pre, %tmp41
  br i1 %v3_1000acb0, label %dec_label_pc_1000acb8, label %dec_label_pc_1000acc8

dec_label_pc_1000acb8:                            ; preds = %dec_label_pc_1000acb0
  %v0_1000acb8 = call i32 @function_10009c78()
  %v2_1000acc0 = inttoptr i32 %v0_1000acb8 to i32*
  store i32 34, i32* %v2_1000acc0, align 4
  %v0_1000acc4 = load i32, i32* @r31, align 4
  store i32 %v0_1000acc4, i32* %r8.global-to-local, align 4
  %v0_1000acc8.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000acc8

dec_label_pc_1000acc8:                            ; preds = %dec_label_pc_1000ac94, %dec_label_pc_1000acb0, %dec_label_pc_1000acb8
  %v0_1000acd8.pre = phi i32 [ %v0_1000acd8.pre.pre, %dec_label_pc_1000acb0 ], [ %v0_1000acc4, %dec_label_pc_1000acb8 ], [ %v0_1000acd8.pre.pre, %dec_label_pc_1000ac94 ]
  %v0_1000acc8 = phi i32 [ %v0_1000ac98, %dec_label_pc_1000acb0 ], [ %v0_1000acc8.pre, %dec_label_pc_1000acb8 ], [ %v0_1000ac98, %dec_label_pc_1000ac94 ]
  %v3_1000acc8 = icmp eq i32 %v0_1000acc8, 0
  br i1 %v3_1000acc8, label %dec_label_pc_1000acd4, label %dec_label_pc_1000acd0

dec_label_pc_1000acd0:                            ; preds = %dec_label_pc_1000acc8
  %v1_1000acd0 = sub i32 0, %v0_1000acd8.pre
  store i32 %v1_1000acd0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000acd4

dec_label_pc_1000acd4:                            ; preds = %dec_label_pc_1000acc8, %dec_label_pc_1000acd0
  %v0_1000acd8 = phi i32 [ %v1_1000acd0, %dec_label_pc_1000acd0 ], [ %v0_1000acd8.pre, %dec_label_pc_1000acc8 ]
  ret i32 %v0_1000acd8

; uselistorder directives
  uselistorder i32 %v0_1000acd8.pre, { 1, 0 }
  uselistorder i32 %v0_1000acd8.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000ac80, { 1, 0 }
  uselistorder i32 %v1_1000ac2c, { 1, 0 }
  uselistorder i32 %v1_1000ac28, { 1, 0 }
  uselistorder i32 %v1_1000ac20, { 1, 0 }
  uselistorder i32 %v3_1000ac14, { 1, 0 }
  uselistorder i32 %v0_1000ac7c, { 1, 0, 2 }
  uselistorder i32 %v1_1000ac1c, { 0, 2, 1 }
  uselistorder i32 %v0_1000ac10, { 1, 0 }
  uselistorder i32 %v2_1000abfc, { 1, 0, 2 }
  uselistorder i32 %v1_1000abd4, { 1, 0 }
  uselistorder i32 %v1_1000abc0, { 1, 0, 2 }
  uselistorder i8 %v2_1000ab68.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000ab64, { 0, 2, 3, 1 }
  uselistorder i32 %v3_1000ab5c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 0, 1, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 2, 3, 4, 6 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32 34, { 4, 5, 16, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 14, 15 }
  uselistorder i32 26, { 3, 0, 1, 2 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000acd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000acc8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ac94, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ac14, { 1, 0 }
  uselistorder label %dec_label_pc_1000abe8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000abdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aba0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab64, { 1, 0 }
}

define i32 @function_1000acec() local_unnamed_addr {
dec_label_pc_1000acec:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000ad04 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1000ad10 = load i32, i32* @r3, align 4
  store i32 %v0_1000ad10, i32* @r31, align 4
  store i32 %v2_1000ad04, i32* @r3, align 4
  %v3_1000ad1c = call i32 @function_1000afe0(i32 %v2_1000ad04, i32 ptrtoint ([3 x i8]* @global_var_1000afd8.295 to i32))
  %v0_1000ad24 = call i32 @function_1000afd8()
  %v3_1000ad2c = load i32, i32* @global_var_1001c6d8.318, align 4
  %v3_1000ad30 = icmp eq i32 %v3_1000ad2c, 0
  br i1 %v3_1000ad30, label %dec_label_pc_1000ad44, label %dec_label_pc_1000ad38

dec_label_pc_1000ad38:                            ; preds = %dec_label_pc_1000acec
  %v0_1000ad38 = load i32, i32* @r31, align 4
  %v3_1000ad40 = call i32 @unknown_0(i32 %v0_1000ad38, i32 268566528)
  br label %dec_label_pc_1000ad44

dec_label_pc_1000ad44:                            ; preds = %dec_label_pc_1000acec, %dec_label_pc_1000ad38
  store i32 %v2_1000ad04, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v2_1000ad4c = call i32 @function_1000afe0(i32 %v2_1000ad04, i32 1)
  store i32 %v2_1000ad4c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ad54.320 to i32), i32* @lr, align 4
  %v1_1000ad50 = call i32 @function_1000af44(i32 %v2_1000ad4c)
  %v0_1000ad68 = load i32, i32* @r31, align 4
  %v1_1000ad6c = call i32 @function_1000b378(i32 %v0_1000ad68)
  ret i32 %v1_1000ad6c

; uselistorder directives
  uselistorder i32 %v2_1000ad04, { 1, 0, 3, 2 }
  uselistorder i32 (i32, i32)* @function_1000afe0, { 1, 0, 5, 4, 3, 2 }
  uselistorder label %dec_label_pc_1000ad44, { 1, 0 }
}

define i32 @function_1000ad70(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000ad70:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  %v3_1000ad70 = icmp eq i32 %arg1, 0
  br i1 %v3_1000ad70, label %dec_label_pc_1000af24, label %dec_label_pc_1000ada0.lr.ph

dec_label_pc_1000ada0.lr.ph:                      ; preds = %dec_label_pc_1000ad70
  %v2_1000ad94 = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000ad94, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000ada042 = add i32 %v2_1000ad94, 132
  %v3_1000ada043 = inttoptr i32 %v2_1000ada042 to i32*
  store i32 0, i32* %v3_1000ada043, align 4
  %v0_1000ada444 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ada445 = add i32 %v0_1000ada444, -1
  store i32 %v1_1000ada445, i32* %r11.global-to-local, align 4
  %v1_1000ada846 = mul i32 %v1_1000ada445, 4
  %v1_1000adac47 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000adac48 = add i32 %v1_1000adac47, %v1_1000ada846
  %v0_1000adb049 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000adb050 = add i32 %v0_1000adb049, -1
  store i32 %v1_1000adb050, i32* %ctr.global-to-local, align 4
  %v2_1000adb051 = icmp eq i32 %v1_1000adb050, 0
  br i1 %v2_1000adb051, label %dec_label_pc_1000adb4, label %dec_label_pc_1000ada0.dec_label_pc_1000ada0_crit_edge

dec_label_pc_1000ada0.dec_label_pc_1000ada0_crit_edge: ; preds = %dec_label_pc_1000ada0.lr.ph, %dec_label_pc_1000ada0.dec_label_pc_1000ada0_crit_edge
  %v2_1000adac52 = phi i32 [ %v2_1000adac, %dec_label_pc_1000ada0.dec_label_pc_1000ada0_crit_edge ], [ %v2_1000adac48, %dec_label_pc_1000ada0.lr.ph ]
  %v0_1000ada0.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ada0 = add i32 %v2_1000adac52, 8
  %v3_1000ada0 = inttoptr i32 %v2_1000ada0 to i32*
  store i32 %v0_1000ada0.pre, i32* %v3_1000ada0, align 4
  %v0_1000ada4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ada4 = add i32 %v0_1000ada4, -1
  store i32 %v1_1000ada4, i32* %r11.global-to-local, align 4
  %v1_1000ada8 = mul i32 %v1_1000ada4, 4
  %v1_1000adac = load i32, i32* %r7.global-to-local, align 4
  %v2_1000adac = add i32 %v1_1000adac, %v1_1000ada8
  %v0_1000adb0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000adb0 = add i32 %v0_1000adb0, -1
  store i32 %v1_1000adb0, i32* %ctr.global-to-local, align 4
  %v2_1000adb0 = icmp eq i32 %v1_1000adb0, 0
  br i1 %v2_1000adb0, label %dec_label_pc_1000adb4, label %dec_label_pc_1000ada0.dec_label_pc_1000ada0_crit_edge

dec_label_pc_1000adb4:                            ; preds = %dec_label_pc_1000ada0.dec_label_pc_1000ada0_crit_edge, %dec_label_pc_1000ada0.lr.ph
  %v0_1000adc8.pre = load i32, i32* %r8.global-to-local, align 4
  %v2_1000adb4 = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000adb4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000adc8.pre, i32* %stack_var_-440, align 4
  %v0_1000adcc = call i32 @function_1000a42c()
  store i32 %v0_1000adcc, i32* %r3.global-to-local, align 4
  %v1_1000add0 = icmp slt i32 %v0_1000adcc, 0
  br i1 %v1_1000add0, label %dec_label_pc_1000af2c, label %dec_label_pc_1000add8

dec_label_pc_1000add8:                            ; preds = %dec_label_pc_1000adb4
  %v2_1000add8 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_1000add8, i32* @r31, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268479980, i32* @lr, align 4
  %v3_1000ade8 = call i32 @function_100098b4(i32 0, i32 %v2_1000adb4, i32 %v2_1000add8)
  store i32 %v3_1000ade8, i32* %r3.global-to-local, align 4
  %v3_1000adec = icmp eq i32 %v3_1000ade8, 0
  br i1 %v3_1000adec, label %dec_label_pc_1000adf4, label %dec_label_pc_1000af2c

dec_label_pc_1000adf4:                            ; preds = %dec_label_pc_1000add8
  store i32 %v2_1000add8, i32* %r3.global-to-local, align 4
  %v2_1000adfc = call i32 @function_1000a404(i32 %v2_1000add8, i32 17)
  store i32 %v2_1000adfc, i32* %r3.global-to-local, align 4
  %v3_1000ae00 = icmp eq i32 %v2_1000adfc, 0
  br i1 %v3_1000ae00, label %dec_label_pc_1000ae20.lr.ph, label %dec_label_pc_1000aeec

dec_label_pc_1000ae20.lr.ph:                      ; preds = %dec_label_pc_1000adf4
  store i32 %v2_1000ad94, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000ada043, align 4
  %v0_1000ae2433 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae2434 = add i32 %v0_1000ae2433, -1
  store i32 %v1_1000ae2434, i32* %r11.global-to-local, align 4
  %v1_1000ae2835 = mul i32 %v1_1000ae2434, 4
  %v1_1000ae2c36 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ae2c37 = add i32 %v1_1000ae2c36, %v1_1000ae2835
  %v0_1000ae3038 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae3039 = add i32 %v0_1000ae3038, -1
  store i32 %v1_1000ae3039, i32* %ctr.global-to-local, align 4
  %v2_1000ae3040 = icmp eq i32 %v1_1000ae3039, 0
  br i1 %v2_1000ae3040, label %dec_label_pc_1000ae34, label %dec_label_pc_1000ae20.dec_label_pc_1000ae20_crit_edge

dec_label_pc_1000ae20.dec_label_pc_1000ae20_crit_edge: ; preds = %dec_label_pc_1000ae20.lr.ph, %dec_label_pc_1000ae20.dec_label_pc_1000ae20_crit_edge
  %v2_1000ae2c41 = phi i32 [ %v2_1000ae2c, %dec_label_pc_1000ae20.dec_label_pc_1000ae20_crit_edge ], [ %v2_1000ae2c37, %dec_label_pc_1000ae20.lr.ph ]
  %v0_1000ae20.pre = load i32, i32* %r10.global-to-local, align 4
  %v2_1000ae20 = add i32 %v2_1000ae2c41, 8
  %v3_1000ae20 = inttoptr i32 %v2_1000ae20 to i32*
  store i32 %v0_1000ae20.pre, i32* %v3_1000ae20, align 4
  %v0_1000ae24 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ae24 = add i32 %v0_1000ae24, -1
  store i32 %v1_1000ae24, i32* %r11.global-to-local, align 4
  %v1_1000ae28 = mul i32 %v1_1000ae24, 4
  %v1_1000ae2c = load i32, i32* %r8.global-to-local, align 4
  %v2_1000ae2c = add i32 %v1_1000ae2c, %v1_1000ae28
  %v0_1000ae30 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ae30 = add i32 %v0_1000ae30, -1
  store i32 %v1_1000ae30, i32* %ctr.global-to-local, align 4
  %v2_1000ae30 = icmp eq i32 %v1_1000ae30, 0
  br i1 %v2_1000ae30, label %dec_label_pc_1000ae34, label %dec_label_pc_1000ae20.dec_label_pc_1000ae20_crit_edge

dec_label_pc_1000ae34:                            ; preds = %dec_label_pc_1000ae20.dec_label_pc_1000ae20_crit_edge, %dec_label_pc_1000ae20.lr.ph
  store i32 %v2_1000adb4, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000ae3c = call i32 @function_1000a42c()
  store i32 %v0_1000ae3c, i32* %r3.global-to-local, align 4
  %v1_1000ae40 = icmp slt i32 %v0_1000ae3c, 0
  br i1 %v1_1000ae40, label %dec_label_pc_1000af2c, label %dec_label_pc_1000ae48

dec_label_pc_1000ae48:                            ; preds = %dec_label_pc_1000ae34
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000ae50 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268480088, i32* @lr, align 4
  %v4_1000ae54 = call i32 @function_1000bbbc(i32 17, i32* null, i32 %v2_1000ae50)
  store i32 %v4_1000ae54, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000ae54, -1
  br i1 %tmp30, label %dec_label_pc_1000ae88, label %dec_label_pc_1000ae60

dec_label_pc_1000ae60:                            ; preds = %dec_label_pc_1000ae48
  %v0_1000ae60 = call i32 @function_10009c78()
  store i32 %v0_1000ae60, i32* %r3.global-to-local, align 4
  %v1_1000ae68 = inttoptr i32 %v0_1000ae60 to i32*
  %v2_1000ae68 = load i32, i32* %v1_1000ae68, align 4
  store i32 %v2_1000ae68, i32* @r28, align 4
  store i32 %v0_1000ae60, i32* @r29, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268480124, i32* @lr, align 4
  %v3_1000ae78 = call i32 @function_100098b4(i32 2, i32 %v2_1000add8, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1000ae80 = load i32, i32* @r28, align 4
  %v1_1000ae80 = load i32, i32* @r29, align 4
  %v2_1000ae80 = inttoptr i32 %v1_1000ae80 to i32*
  store i32 %v0_1000ae80, i32* %v2_1000ae80, align 4
  %v0_1000af40.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000af30

dec_label_pc_1000ae88:                            ; preds = %dec_label_pc_1000ae48
  %v3_1000ae88 = load i32, i32* %stack_var_-176, align 4
  store i32 %v2_1000add8, i32* @r28, align 4
  %v3_1000ae94 = icmp eq i32 %v3_1000ae88, 1
  br i1 %v3_1000ae94, label %dec_label_pc_1000ae9c, label %dec_label_pc_1000aed0

dec_label_pc_1000ae9c:                            ; preds = %dec_label_pc_1000ae88
  store i32 %v2_1000ad94, i32* %r3.global-to-local, align 4
  store i32 268480168, i32* @lr, align 4
  %v2_1000aea4 = call i32 @function_1000b7b0(i32 %v2_1000ad94, i32 %v2_1000ad94)
  store i32 %v2_1000aea4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aea4, i32* @r31, align 4
  %v0_1000aeac = call i32 @function_10009c78()
  store i32 %v0_1000aeac, i32* %r3.global-to-local, align 4
  store i32 %v0_1000aeac, i32* @r29, align 4
  %v1_1000aebc = inttoptr i32 %v0_1000aeac to i32*
  %v2_1000aebc = load i32, i32* %v1_1000aebc, align 4
  store i32 %v2_1000aebc, i32* @r28, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268480200, i32* @lr, align 4
  %v3_1000aec4 = call i32 @function_100098b4(i32 2, i32 %v2_1000add8, i32 0)
  store i32 %v3_1000aec4, i32* %r3.global-to-local, align 4
  %v0_1000aec8 = load i32, i32* @r28, align 4
  %v1_1000aec8 = load i32, i32* @r29, align 4
  %v2_1000aec8 = inttoptr i32 %v1_1000aec8 to i32*
  store i32 %v0_1000aec8, i32* %v2_1000aec8, align 4
  %v0_1000aef8.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000aef8

dec_label_pc_1000aed0:                            ; preds = %dec_label_pc_1000ae88
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268480224, i32* @lr, align 4
  %v3_1000aedc = call i32 @function_100098b4(i32 2, i32 %v2_1000add8, i32 0)
  br label %dec_label_pc_1000aeec

dec_label_pc_1000aeec:                            ; preds = %dec_label_pc_1000adf4, %dec_label_pc_1000aed0
  store i32 %v2_1000ad94, i32* %r3.global-to-local, align 4
  store i32 268480244, i32* @lr, align 4
  %v2_1000aef0 = call i32 @function_1000b7b0(i32 %v2_1000ad94, i32 %v2_1000ad94)
  store i32 %v2_1000aef0, i32* %r3.global-to-local, align 4
  store i32 %v2_1000aef0, i32* @r31, align 4
  br label %dec_label_pc_1000aef8

dec_label_pc_1000aef8:                            ; preds = %dec_label_pc_1000ae9c, %dec_label_pc_1000aeec
  %v0_1000aef8 = phi i32 [ %v0_1000aef8.pr, %dec_label_pc_1000ae9c ], [ %v2_1000aef0, %dec_label_pc_1000aeec ]
  %v3_1000aef8 = icmp eq i32 %v0_1000aef8, 0
  br i1 %v3_1000aef8, label %dec_label_pc_1000af24, label %dec_label_pc_1000af00

dec_label_pc_1000af00:                            ; preds = %dec_label_pc_1000aef8
  %v3_1000af10 = load i32, i32* %stack_var_-440, align 4
  %v0_1000af14 = call i32 @__asm_mfcr()
  store i32 %v0_1000af14, i32* %r3.global-to-local, align 4
  %v1_1000af18 = call i32 @__asm_rlwinm(i32 %v0_1000af14, i32 30, i32 31, i32 31)
  %v2_1000af1c = add i32 %v3_1000af10, %v1_1000af18
  store i32 %v2_1000af1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000af30

dec_label_pc_1000af24:                            ; preds = %dec_label_pc_1000aef8, %dec_label_pc_1000ad70
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000af30

dec_label_pc_1000af2c:                            ; preds = %dec_label_pc_1000add8, %dec_label_pc_1000ae34, %dec_label_pc_1000adb4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000af30

dec_label_pc_1000af30:                            ; preds = %dec_label_pc_1000af24, %dec_label_pc_1000af00, %dec_label_pc_1000ae60, %dec_label_pc_1000af2c
  %v0_1000af40 = phi i32 [ 0, %dec_label_pc_1000af24 ], [ %v2_1000af1c, %dec_label_pc_1000af00 ], [ %v0_1000af40.pre, %dec_label_pc_1000ae60 ], [ -1, %dec_label_pc_1000af2c ]
  ret i32 %v0_1000af40

; uselistorder directives
  uselistorder i32 %v1_1000ae30, { 1, 0 }
  uselistorder i32 %v2_1000add8, { 2, 1, 3, 0, 5, 4, 6, 7 }
  uselistorder i32 %v1_1000adb0, { 1, 0 }
  uselistorder i32 %v2_1000ad94, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 5, 4, 1, 6, 0, 7, 8, 9, 10, 11, 12, 14, 15, 13, 16, 17, 18, 19, 20, 21, 22, 23, 24, 2 }
  uselistorder i32* %r11.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32, i32)* @function_1000b7b0, { 1, 0 }
  uselistorder i32 17, { 2, 33, 34, 3, 35, 4, 16, 17, 5, 6, 18, 19, 20, 21, 22, 7, 8, 9, 10, 23, 0, 24, 1, 25, 26, 11, 27, 12, 28, 29, 30, 31, 32, 13, 14, 15 }
  uselistorder label %dec_label_pc_1000af30, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000af2c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000aef8, { 1, 0 }
  uselistorder label %dec_label_pc_1000aeec, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae20.dec_label_pc_1000ae20_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ada0.dec_label_pc_1000ada0_crit_edge, { 1, 0 }
}

define i32 @function_1000af44(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000af94:
  %v3_1000af98 = load i32, i32* @global_var_1001c6e8.322, align 4
  %v3_1000af9c = icmp eq i32 %v3_1000af98, 0
  br i1 %v3_1000af9c, label %dec_label_pc_1000afac, label %dec_label_pc_1000afa4

dec_label_pc_1000afa4:                            ; preds = %dec_label_pc_1000af94
  %v2_1000afa8 = load i32, i32* @r4, align 4
  %v3_1000afa8 = call i32 @unknown_0(i32 268566528, i32 %v2_1000afa8)
  store i32 %v3_1000afa8, i32* @r3, align 4
  br label %dec_label_pc_1000afac

dec_label_pc_1000afac:                            ; preds = %dec_label_pc_1000af94, %dec_label_pc_1000afa4
  %v3_1000afb0 = load i32, i32* @global_var_1001c6ec.323, align 4
  %v3_1000afb4 = icmp eq i32 %v3_1000afb0, 0
  br i1 %v3_1000afb4, label %dec_label_pc_1000afac.dec_label_pc_1000afc4_crit_edge, label %dec_label_pc_1000afbc

dec_label_pc_1000afac.dec_label_pc_1000afc4_crit_edge: ; preds = %dec_label_pc_1000afac
  %v0_1000afd4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000afc4

dec_label_pc_1000afbc:                            ; preds = %dec_label_pc_1000afac
  %v2_1000afc0 = load i32, i32* @r4, align 4
  %v3_1000afc0 = call i32 @unknown_0(i32 268566528, i32 %v2_1000afc0)
  br label %dec_label_pc_1000afc4

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000afac.dec_label_pc_1000afc4_crit_edge, %dec_label_pc_1000afbc
  %v0_1000afd4 = phi i32 [ %v0_1000afd4.pre, %dec_label_pc_1000afac.dec_label_pc_1000afc4_crit_edge ], [ %v3_1000afc0, %dec_label_pc_1000afbc ]
  ret i32 %v0_1000afd4

; uselistorder directives
  uselistorder i32 (i32, i32)* @unknown_0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000afc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000afac, { 1, 0 }
}

define i32 @function_1000afd8() local_unnamed_addr {
dec_label_pc_1000afd8:
  ret i32 0
}

define i32 @function_1000afe0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000afe0:
  %v0_1000afe0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000afe0
}

define i32 @function_1000afe4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000afe4:
  store i32 %arg2, i32* @r30, align 4
  store i32 1, i32* @r4, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268480520, i32* @lr, align 4
  %v1_1000b004 = call i32 @function_10009474(i32 1)
  %v3_1000b008 = icmp eq i32 %v1_1000b004, -1
  br i1 %v3_1000b008, label %dec_label_pc_1000b010, label %dec_label_pc_1000b030

dec_label_pc_1000b010:                            ; preds = %dec_label_pc_1000afe4
  %v0_1000b014 = load i32, i32* @r30, align 4
  store i32 268480548, i32* @lr, align 4
  %v3_1000b020 = call i32 @function_100096c4(i32 ptrtoint ([10 x i8]* @global_var_1000c210.324 to i32), i32 %v0_1000b014)
  %v1_1000b024 = load i32, i32* @r31, align 4
  %v4_1000b024 = icmp eq i32 %v3_1000b020, %v1_1000b024
  br i1 %v4_1000b024, label %dec_label_pc_1000b030, label %dec_label_pc_1000b02c

dec_label_pc_1000b02c:                            ; preds = %dec_label_pc_1000b010
  %v1_1000b02c = call i32 @function_1000bc80(i32 %v3_1000b020)
  br label %dec_label_pc_1000b030

dec_label_pc_1000b030:                            ; preds = %dec_label_pc_1000afe4, %dec_label_pc_1000b010, %dec_label_pc_1000b02c
  %v0_1000b040 = phi i32 [ %v1_1000b004, %dec_label_pc_1000afe4 ], [ %v3_1000b020, %dec_label_pc_1000b010 ], [ %v1_1000b02c, %dec_label_pc_1000b02c ]
  ret i32 %v0_1000b040

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_100096c4, { 0, 3, 9, 8, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32)* @function_10009474, { 0, 7, 9, 8, 11, 10, 2, 1, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1000b030, { 2, 1, 0 }
}

define i32 @function_1000b044(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b044:
  %v3_1000b064 = load i32, i32* @global_var_1001c6f0.325, align 4
  %v3_1000b068 = icmp eq i32 %v3_1000b064, 0
  br i1 %v3_1000b068, label %dec_label_pc_1000b08c, label %dec_label_pc_1000b0b0

dec_label_pc_1000b08c:                            ; preds = %dec_label_pc_1000b044
  store i32 1, i32* @global_var_1001c6f0.325, align 4
  store i32 4096, i32* @global_var_1001c6e4.307, align 4
  br label %dec_label_pc_1000b0b0

dec_label_pc_1000b0b0:                            ; preds = %dec_label_pc_1000b08c, %dec_label_pc_1000b044
  %v0_1000b0c0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b0c0
}

define i32 @function_1000b0c4(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
dec_label_pc_1000b0c4:
  %r25.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000b0dc = mul i32 %arg2, 4
  %v2_1000b0e0 = add i32 %tmp, %v1_1000b0dc
  %v0_1000b0e4 = load i32, i32* @r9, align 4
  store i32 %v0_1000b0e4, i32* @global_var_1001c6dc.327, align 4
  %v1_1000b0e8 = add i32 %v2_1000b0e0, 4
  store i32 268566528, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b0e8, i32* @global_var_1001c6e0.328, align 4
  store i32 %arg6, i32* @global_var_1001c6ec.323, align 4
  store i32 %arg1, i32* %r25.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_1000b108 = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* %r27.global-to-local, align 4
  %v4_1000b110 = icmp eq i32 %v1_1000b0e8, %v2_1000b108
  br i1 %v4_1000b110, label %dec_label_pc_1000b118, label %dec_label_pc_1000b11c

dec_label_pc_1000b118:                            ; preds = %dec_label_pc_1000b0c4
  store i32 %v2_1000b0e0, i32* @global_var_1001c6e0.328, align 4
  br label %dec_label_pc_1000b11c

dec_label_pc_1000b11c:                            ; preds = %dec_label_pc_1000b0c4, %dec_label_pc_1000b118
  %v2_1000b11c = ptrtoint i32* %stack_var_-168 to i32
  store i32 268480812, i32* @lr, align 4
  %v3_1000b128 = call i32 @function_10009d60(i32 %v2_1000b11c, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1001c6e0.328, align 4
  br label %dec_label_pc_1000b138

dec_label_pc_1000b138:                            ; preds = %dec_label_pc_1000b138, %dec_label_pc_1000b11c
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000b11c ], [ %v1_1000b13c, %dec_label_pc_1000b138 ]
  %v1_1000b138 = inttoptr i32 %storemerge to i32*
  %v2_1000b138 = load i32, i32* %v1_1000b138, align 4
  %v1_1000b13c = add i32 %storemerge, 4
  %v3_1000b140 = icmp eq i32 %v2_1000b138, 0
  br i1 %v3_1000b140, label %dec_label_pc_1000b148, label %dec_label_pc_1000b138

dec_label_pc_1000b148:                            ; preds = %dec_label_pc_1000b138
  store i32 %v1_1000b13c, i32* %r29.global-to-local, align 4
  %v1_1000b17412 = inttoptr i32 %v1_1000b13c to i32*
  %v2_1000b17413 = load i32, i32* %v1_1000b17412, align 4
  %v3_1000b17816 = icmp eq i32 %v2_1000b17413, 0
  br i1 %v3_1000b17816, label %dec_label_pc_1000b180, label %dec_label_pc_1000b150

dec_label_pc_1000b150:                            ; preds = %dec_label_pc_1000b148, %dec_label_pc_1000b170
  %v0_1000b164 = phi i32 [ %v1_1000b170, %dec_label_pc_1000b170 ], [ %v1_1000b13c, %dec_label_pc_1000b148 ]
  %v0_1000b158 = phi i32 [ %v2_1000b174, %dec_label_pc_1000b170 ], [ %v2_1000b17413, %dec_label_pc_1000b148 ]
  %v2_1000b150 = icmp ugt i32 %v0_1000b158, 14
  br i1 %v2_1000b150, label %dec_label_pc_1000b170, label %dec_label_pc_1000b158

dec_label_pc_1000b158:                            ; preds = %dec_label_pc_1000b150
  %v1_1000b158 = mul i32 %v0_1000b158, 8
  %v2_1000b160 = add i32 %v1_1000b158, %v2_1000b11c
  store i32 %v2_1000b160, i32* @r3, align 4
  store i32 %v0_1000b164, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268480880, i32* @lr, align 4
  %v0_1000b16c = call i32 @function_1000ba2c()
  %v0_1000b170.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000b170

dec_label_pc_1000b170:                            ; preds = %dec_label_pc_1000b150, %dec_label_pc_1000b158
  %v0_1000b170 = phi i32 [ %v0_1000b164, %dec_label_pc_1000b150 ], [ %v0_1000b170.pre, %dec_label_pc_1000b158 ]
  %v1_1000b170 = add i32 %v0_1000b170, 8
  store i32 %v1_1000b170, i32* %r29.global-to-local, align 4
  %v1_1000b174 = inttoptr i32 %v1_1000b170 to i32*
  %v2_1000b174 = load i32, i32* %v1_1000b174, align 4
  %v3_1000b178 = icmp eq i32 %v2_1000b174, 0
  br i1 %v3_1000b178, label %dec_label_pc_1000b180, label %dec_label_pc_1000b150

dec_label_pc_1000b180:                            ; preds = %dec_label_pc_1000b170, %dec_label_pc_1000b148
  %v1_1000b184 = call i32 @function_1000bdd0(i32 %v2_1000b11c)
  store i32 %v1_1000b184, i32* @r3, align 4
  store i32 268480908, i32* @lr, align 4
  %v1_1000b188 = call i32 @function_1000b044(i32 %v1_1000b184)
  %v3_1000b190 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000b190, label %dec_label_pc_1000b198, label %dec_label_pc_1000b19c

dec_label_pc_1000b198:                            ; preds = %dec_label_pc_1000b180
  br label %dec_label_pc_1000b19c

dec_label_pc_1000b19c:                            ; preds = %dec_label_pc_1000b180, %dec_label_pc_1000b198
  %v0_1000b1a4 = phi i32 [ %tmp27, %dec_label_pc_1000b180 ], [ 4096, %dec_label_pc_1000b198 ]
  store i32 %v0_1000b1a4, i32* @global_var_1001c6e4.307, align 4
  %v3_1000b1a8 = icmp eq i32 %tmp26, -1
  br i1 %v3_1000b1a8, label %dec_label_pc_1000b1b0, label %dec_label_pc_1000b1e4

dec_label_pc_1000b1b0:                            ; preds = %dec_label_pc_1000b19c
  store i32 268480948, i32* @lr, align 4
  %v1_1000b1b0 = call i32 @function_1000b6e8(i32 268566528)
  store i32 %v1_1000b1b0, i32* %r29.global-to-local, align 4
  store i32 268480956, i32* @lr, align 4
  %v0_1000b1b8 = call i32 @function_1000b658()
  %v4_1000b1bc = icmp eq i32 %v1_1000b1b0, %v0_1000b1b8
  br i1 %v4_1000b1bc, label %dec_label_pc_1000b1c4, label %dec_label_pc_1000b200

dec_label_pc_1000b1c4:                            ; preds = %dec_label_pc_1000b1b0
  store i32 268480968, i32* @lr, align 4
  %v1_1000b1c4 = call i32 @function_1000b6a0(i32 %v0_1000b1b8)
  store i32 %v1_1000b1c4, i32* %r29.global-to-local, align 4
  store i32 268480976, i32* @lr, align 4
  %v0_1000b1cc = call i32 @function_1000b610()
  %v4_1000b1d0 = icmp eq i32 %v1_1000b1c4, %v0_1000b1cc
  br i1 %v4_1000b1d0, label %dec_label_pc_1000b1d8.thread, label %dec_label_pc_1000b200

dec_label_pc_1000b1d8.thread:                     ; preds = %dec_label_pc_1000b1c4
  br label %dec_label_pc_1000b230

dec_label_pc_1000b1e4:                            ; preds = %dec_label_pc_1000b19c
  %v4_1000b1e8 = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000b1e8, label %dec_label_pc_1000b1f0, label %dec_label_pc_1000b200

dec_label_pc_1000b1f0:                            ; preds = %dec_label_pc_1000b1e4
  br label %dec_label_pc_1000b200

dec_label_pc_1000b200:                            ; preds = %dec_label_pc_1000b1f0, %dec_label_pc_1000b1e4, %dec_label_pc_1000b1c4, %dec_label_pc_1000b1b0
  store i32 268481040, i32* @lr, align 4
  %v2_1000b20c = call i32 @function_1000afe4(i32 0, i32 32768)
  store i32 268481056, i32* @lr, align 4
  %v2_1000b21c = call i32 @function_1000afe4(i32 1, i32 32770)
  store i32 268481072, i32* @lr, align 4
  %v2_1000b22c = call i32 @function_1000afe4(i32 2, i32 32770)
  br label %dec_label_pc_1000b230

dec_label_pc_1000b230:                            ; preds = %dec_label_pc_1000b1d8.thread, %dec_label_pc_1000b200
  %v0_1000b23c = load i32, i32* @r30, align 4
  %v1_1000b23c = inttoptr i32 %v0_1000b23c to i32*
  %v2_1000b23c = load i32, i32* %v1_1000b23c, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000b23c, i32* inttoptr (i32 268551820 to i32*), align 4
  %v0_1000b25c = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000b25c, i32* @global_var_1001c6e8.322, align 4
  br i1 false, label %dec_label_pc_1000b264, label %dec_label_pc_1000b2dc

dec_label_pc_1000b264:                            ; preds = %dec_label_pc_1000b230, %dec_label_pc_1000b264
  br i1 undef, label %dec_label_pc_1000b264, label %dec_label_pc_1000b2dc

dec_label_pc_1000b2dc:                            ; preds = %dec_label_pc_1000b264, %dec_label_pc_1000b230
  %v0_1000b288 = load i32, i32* %r28.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b288)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000b2ec = call i32 @function_10009c78()
  %v2_1000b2f4 = inttoptr i32 %v0_1000b2ec to i32*
  store i32 0, i32* %v2_1000b2f4, align 4
  %v0_1000b320 = load i32, i32* %r25.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000b320)
  %v0_1000b32c = call i32 @function_1000acec()
  ret i32 %v0_1000b32c

; uselistorder directives
  uselistorder i32 %v2_1000b174, { 1, 0 }
  uselistorder i32 %v1_1000b170, { 2, 1, 0 }
  uselistorder i32 %v1_1000b13c, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000b11c, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 7, 6, 0, 5 }
  uselistorder i32 ()* @function_1000acec, { 0, 2, 1 }
  uselistorder i1 false, { 0, 26, 27, 1, 2, 3, 4, 14, 5, 6, 7, 15, 23, 16, 17, 18, 24, 19, 25, 20, 21, 8, 9, 28, 10, 22, 11, 12, 13, 29, 30 }
  uselistorder i32 (i32, i32)* @function_1000afe4, { 2, 1, 0 }
  uselistorder i32 4096, { 1, 3, 4, 0, 8, 5, 9, 6, 10, 7, 2 }
  uselistorder i32 14, { 47, 0, 6, 7, 22, 8, 9, 23, 24, 25, 26, 27, 28, 29, 10, 11, 30, 1, 31, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 2, 34, 35, 36, 3, 37, 38, 39, 40, 41, 4, 42, 43, 44, 45, 46, 5 }
  uselistorder i32 120, { 2, 13, 5, 6, 7, 8, 3, 9, 10, 4, 0, 1, 11, 12 }
  uselistorder label %dec_label_pc_1000b264, { 1, 0 }
  uselistorder label %dec_label_pc_1000b230, { 1, 0 }
  uselistorder label %dec_label_pc_1000b19c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b170, { 1, 0 }
  uselistorder label %dec_label_pc_1000b150, { 1, 0 }
  uselistorder label %dec_label_pc_1000b11c, { 1, 0 }
}

define i32 @function_1000b330(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b330:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b348 = call i32 @__asm_mfcr()
  %v1_1000b34c = and i32 %v0_1000b348, 268435456
  %v3_1000b34c = icmp eq i32 %v1_1000b34c, 0
  store i32 %v0_1000b348, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b34c, label %dec_label_pc_1000b364, label %dec_label_pc_1000b358

dec_label_pc_1000b358:                            ; preds = %dec_label_pc_1000b330
  %v0_1000b358 = call i32 @function_10009c78()
  %v0_1000b35c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b35c = inttoptr i32 %v0_1000b358 to i32*
  store i32 %v0_1000b35c, i32* %v2_1000b35c, align 4
  br label %dec_label_pc_1000b364

dec_label_pc_1000b364:                            ; preds = %dec_label_pc_1000b330, %dec_label_pc_1000b358
  %v0_1000b374 = phi i32 [ %v0_1000b348, %dec_label_pc_1000b330 ], [ -1, %dec_label_pc_1000b358 ]
  ret i32 %v0_1000b374

; uselistorder directives
  uselistorder label %dec_label_pc_1000b364, { 1, 0 }
}

define i32 @function_1000b378(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b378:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000b38c

dec_label_pc_1000b38c:                            ; preds = %dec_label_pc_1000b38c.backedge, %dec_label_pc_1000b378
  %v0_1000b398 = call i32 @__asm_mfcr()
  %v1_1000b39c = and i32 %v0_1000b398, 268435456
  %v3_1000b39c = icmp eq i32 %v1_1000b39c, 0
  store i32 %v0_1000b398, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b39c, label %dec_label_pc_1000b38c.backedge, label %dec_label_pc_1000b3a8

dec_label_pc_1000b3a8:                            ; preds = %dec_label_pc_1000b38c
  %v0_1000b3a8 = call i32 @function_10009c78()
  %v0_1000b3ac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b3ac = inttoptr i32 %v0_1000b3a8 to i32*
  store i32 %v0_1000b3ac, i32* %v2_1000b3ac, align 4
  br label %dec_label_pc_1000b38c.backedge

dec_label_pc_1000b38c.backedge:                   ; preds = %dec_label_pc_1000b3a8, %dec_label_pc_1000b38c
  br label %dec_label_pc_1000b38c
}

define i32 @function_1000b3b4(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b3b4:
  %stack_var_-104 = alloca i32, align 4
  %v2_1000b3c0 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000b3c0, i32* @r29, align 4
  %v0_1000b3c8 = load i32, i32* @r4, align 4
  store i32 %v0_1000b3c8, i32* @r30, align 4
  %v0_1000b3d8 = call i32 @__asm_mfcr()
  %v1_1000b3dc = and i32 %v0_1000b3d8, 268435456
  %v3_1000b3dc = icmp eq i32 %v1_1000b3dc, 0
  store i32 -1, i32* @r28, align 4
  store i32 %v0_1000b3d8, i32* @r31, align 4
  br i1 %v3_1000b3dc, label %dec_label_pc_1000b3f8, label %dec_label_pc_1000b3ec

dec_label_pc_1000b3ec:                            ; preds = %dec_label_pc_1000b3b4
  %v0_1000b3ec = call i32 @function_10009c78()
  %v0_1000b3f0 = load i32, i32* @r31, align 4
  %v2_1000b3f0 = inttoptr i32 %v0_1000b3ec to i32*
  store i32 %v0_1000b3f0, i32* %v2_1000b3f0, align 4
  br label %dec_label_pc_1000b410

dec_label_pc_1000b3f8:                            ; preds = %dec_label_pc_1000b3b4
  %v3_1000b3f8 = icmp eq i32 %v0_1000b3d8, 0
  store i32 %v0_1000b3d8, i32* @r28, align 4
  br i1 %v3_1000b3f8, label %dec_label_pc_1000b40c, label %dec_label_pc_1000b410

dec_label_pc_1000b40c:                            ; preds = %dec_label_pc_1000b3f8
  %v0_1000b400 = load i32, i32* @r30, align 4
  store i32 268481552, i32* @lr, align 4
  %v4_1000b40c = call i32 @function_1000b97c(i32* nonnull %stack_var_-104, i32 %v0_1000b400, i32 0)
  br label %dec_label_pc_1000b410

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b3f8, %dec_label_pc_1000b3ec, %dec_label_pc_1000b40c
  %v0_1000b414 = load i32, i32* @r28, align 4
  ret i32 %v0_1000b414

; uselistorder directives
  uselistorder i32 %v0_1000b3d8, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b410, { 2, 0, 1 }
}

define i32 @function_1000b428(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b428:
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_1000b43c = call i32 @function_1000b4b8()
  store i32 %v0_1000b43c, i32* @r30, align 4
  %tmp18 = icmp slt i32 %v0_1000b43c, 1
  br i1 %tmp18, label %dec_label_pc_1000b4a0, label %dec_label_pc_1000b448

dec_label_pc_1000b448:                            ; preds = %dec_label_pc_1000b428
  %v0_1000b448 = load i32, i32* @r31, align 4
  %v2_1000b448 = add i32 %v0_1000b448, %v0_1000b43c
  store i32 %v2_1000b448, i32* %r29.global-to-local, align 4
  %v2_1000b4903 = icmp ult i32 %v0_1000b448, %v2_1000b448
  br i1 %v2_1000b4903, label %dec_label_pc_1000b450, label %dec_label_pc_1000b4a0

dec_label_pc_1000b450:                            ; preds = %dec_label_pc_1000b448, %dec_label_pc_1000b450
  %v1_1000b460 = phi i32 [ %v2_1000b48c, %dec_label_pc_1000b450 ], [ %v0_1000b448, %dec_label_pc_1000b448 ]
  %v1_1000b49410.in = phi i32 [ %v2_1000b48c, %dec_label_pc_1000b450 ], [ %v0_1000b448, %dec_label_pc_1000b448 ]
  %v1_1000b49811.in = phi i32 [ %v2_1000b48c, %dec_label_pc_1000b450 ], [ %v0_1000b448, %dec_label_pc_1000b448 ]
  %v1_1000b49410 = add i32 %v1_1000b49410.in, 11
  %v1_1000b49811 = add i32 %v1_1000b49811.in, 19
  %v1_1000b450 = add i32 %v1_1000b460, 4
  %v2_1000b450 = inttoptr i32 %v1_1000b450 to i32*
  %v3_1000b450 = load i32, i32* %v2_1000b450, align 4
  store i32 %v3_1000b450, i32* %r11.global-to-local, align 4
  %v1_1000b454 = add i32 %v1_1000b460, 12
  %v2_1000b454 = inttoptr i32 %v1_1000b454 to i32*
  %v3_1000b454 = load i32, i32* %v2_1000b454, align 4
  %v1_1000b458 = add i32 %v1_1000b460, 16
  %v2_1000b458 = inttoptr i32 %v1_1000b458 to i16*
  %v3_1000b458 = load i16, i16* %v2_1000b458, align 2
  %v4_1000b458 = zext i16 %v3_1000b458 to i32
  store i32 %v4_1000b458, i32* %r5.global-to-local, align 4
  %v1_1000b45c = add i32 %v1_1000b460, 18
  %v2_1000b45c = inttoptr i32 %v1_1000b45c to i8*
  %v3_1000b45c = load i8, i8* %v2_1000b45c, align 1
  %v4_1000b45c = zext i8 %v3_1000b45c to i32
  store i32 %v4_1000b45c, i32* %r9.global-to-local, align 4
  store i32 %v3_1000b454, i32* %v2_1000b450, align 4
  %v0_1000b464 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b464 = load i32, i32* @r31, align 4
  %v2_1000b464 = inttoptr i32 %v1_1000b464 to i32*
  store i32 %v0_1000b464, i32* %v2_1000b464, align 4
  %v0_1000b468 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b468 = trunc i32 %v0_1000b468 to i8
  %v2_1000b468 = load i32, i32* @r31, align 4
  %v3_1000b468 = add i32 %v2_1000b468, 10
  %v4_1000b468 = inttoptr i32 %v3_1000b468 to i8*
  store i8 %v1_1000b468, i8* %v4_1000b468, align 1
  %v0_1000b46c = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b46c = trunc i32 %v0_1000b46c to i16
  %v2_1000b46c = load i32, i32* @r31, align 4
  %v3_1000b46c = add i32 %v2_1000b46c, 8
  %v4_1000b46c = inttoptr i32 %v3_1000b46c to i16*
  store i16 %v1_1000b46c, i16* %v4_1000b46c, align 2
  %v0_1000b470 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b470 = add i32 %v0_1000b470, -19
  store i32 %v1_1000b470, i32* %r5.global-to-local, align 4
  store i32 268481656, i32* @lr, align 4
  %v3_1000b474 = call i32 @function_10009cbc(i32 %v1_1000b49410, i32 %v1_1000b49811, i32 %v1_1000b470)
  %v0_1000b478 = load i32, i32* @r31, align 4
  %v1_1000b478 = add i32 %v0_1000b478, 8
  %v2_1000b478 = inttoptr i32 %v1_1000b478 to i16*
  %v3_1000b478 = load i16, i16* %v2_1000b478, align 2
  %v4_1000b478 = zext i16 %v3_1000b478 to i32
  store i32 %v4_1000b478, i32* %r5.global-to-local, align 4
  store i32 268481672, i32* @lr, align 4
  %v3_1000b484 = call i32 @function_10009cbc(i32 %v0_1000b478, i32 %v0_1000b478, i32 %v4_1000b478)
  %v0_1000b488 = load i32, i32* @r31, align 4
  %v1_1000b488 = add i32 %v0_1000b488, 8
  %v2_1000b488 = inttoptr i32 %v1_1000b488 to i16*
  %v3_1000b488 = load i16, i16* %v2_1000b488, align 2
  %v4_1000b488 = zext i16 %v3_1000b488 to i32
  %v2_1000b48c = add i32 %v4_1000b488, %v0_1000b488
  store i32 %v2_1000b48c, i32* @r31, align 4
  %v1_1000b490 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b490 = icmp ult i32 %v2_1000b48c, %v1_1000b490
  br i1 %v2_1000b490, label %dec_label_pc_1000b450, label %dec_label_pc_1000b490.dec_label_pc_1000b4a0.loopexit_crit_edge

dec_label_pc_1000b490.dec_label_pc_1000b4a0.loopexit_crit_edge: ; preds = %dec_label_pc_1000b450
  %v0_1000b4a4.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b4a0

dec_label_pc_1000b4a0:                            ; preds = %dec_label_pc_1000b448, %dec_label_pc_1000b490.dec_label_pc_1000b4a0.loopexit_crit_edge, %dec_label_pc_1000b428
  %v0_1000b4a4 = phi i32 [ %v0_1000b43c, %dec_label_pc_1000b428 ], [ %v0_1000b4a4.pre.pre, %dec_label_pc_1000b490.dec_label_pc_1000b4a0.loopexit_crit_edge ], [ %v0_1000b43c, %dec_label_pc_1000b448 ]
  ret i32 %v0_1000b4a4

; uselistorder directives
  uselistorder i32 %v2_1000b48c, { 3, 4, 2, 0, 1 }
  uselistorder i32 %v0_1000b478, { 1, 0, 2 }
  uselistorder i32 %v1_1000b460, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1000b448, { 1, 0, 2, 4, 3 }
  uselistorder i32 %v0_1000b43c, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @function_10009cbc, { 1, 0, 2, 3 }
  uselistorder i32 11, { 0, 34, 33, 3, 12, 13, 14, 15, 16, 17, 1, 2, 18, 19, 4, 20, 21, 22, 9, 23, 24, 25, 26, 5, 27, 28, 6, 29, 30, 10, 7, 31, 32, 11, 8 }
  uselistorder label %dec_label_pc_1000b4a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b450, { 1, 0 }
}

define i32 @function_1000b4b8() local_unnamed_addr {
dec_label_pc_1000b4b8:
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000b4bc = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000b4bc, i32* %stack_var_-48, align 4
  %v5_1000b4bc = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v4_1000b4bc, i32* %r9.global-to-local, align 4
  %v0_1000b4c8 = load i32, i32* @r5, align 4
  %v1_1000b4c8 = add i32 %v0_1000b4c8, 30
  %v1_1000b4cc = call i32 @__asm_rlwinm(i32 %v1_1000b4c8, i32 0, i32 0, i32 27)
  store i32 %v5_1000b4bc, i32* @r31, align 4
  %v1_1000b4dc = load i32, i32* @r1, align 4
  %v3_1000b4dc = sub i32 %v1_1000b4dc, %v1_1000b4cc
  %v4_1000b4dc = inttoptr i32 %v3_1000b4dc to i32*
  store i32 %v4_1000b4bc, i32* %v4_1000b4dc, align 4
  %v0_1000b4e0 = load i32, i32* @r4, align 4
  store i32 %v0_1000b4e0, i32* @r28, align 4
  %v0_1000b4e4 = load i32, i32* @r5, align 4
  store i32 %v0_1000b4e4, i32* @r23, align 4
  %v0_1000b4e8 = load i32, i32* @r3, align 4
  store i32 %v0_1000b4e8, i32* @r22, align 4
  %v1_1000b4ec = add i32 %v3_1000b4dc, 23
  %v1_1000b4f0 = call i32 @__asm_rlwinm(i32 %v1_1000b4ec, i32 0, i32 0, i32 27)
  store i32 %v1_1000b4f0, i32* @r27, align 4
  store i32 %v1_1000b4f0, i32* %r4.global-to-local, align 4
  %v0_1000b500 = call i32 @__asm_mfcr()
  %v1_1000b504 = and i32 %v0_1000b500, 268435456
  store i32 %v1_1000b504, i32* %r9.global-to-local, align 4
  %v3_1000b504 = icmp eq i32 %v1_1000b504, 0
  store i32 %v0_1000b500, i32* %r30.global-to-local, align 4
  br i1 %v3_1000b504, label %dec_label_pc_1000b51c, label %dec_label_pc_1000b510

dec_label_pc_1000b510:                            ; preds = %dec_label_pc_1000b4b8
  %v0_1000b510 = call i32 @function_10009c78()
  %v0_1000b514 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000b514 = inttoptr i32 %v0_1000b510 to i32*
  store i32 %v0_1000b514, i32* %v2_1000b514, align 4
  br label %dec_label_pc_1000b528

dec_label_pc_1000b51c:                            ; preds = %dec_label_pc_1000b4b8
  %v3_1000b51c = icmp eq i32 %v0_1000b500, -1
  store i32 %v0_1000b500, i32* @r24, align 4
  br i1 %v3_1000b51c, label %dec_label_pc_1000b528, label %dec_label_pc_1000b530

dec_label_pc_1000b528:                            ; preds = %dec_label_pc_1000b51c, %dec_label_pc_1000b510
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b5f4

dec_label_pc_1000b530:                            ; preds = %dec_label_pc_1000b51c
  %v0_1000b530 = load i32, i32* @r28, align 4
  store i32 %v0_1000b530, i32* %r29.global-to-local, align 4
  store i32 %v1_1000b4f0, i32* %r30.global-to-local, align 4
  store i32 -1, i32* @r25, align 4
  store i32 -1, i32* @r26, align 4
  %v2_1000b5d812 = add i32 %v0_1000b500, %v1_1000b4f0
  %v1_1000b5dc13 = load i32, i32* @r23, align 4
  %v2_1000b5dc14 = add i32 %v1_1000b5dc13, %v0_1000b530
  store i32 %v2_1000b5dc14, i32* %r10.global-to-local, align 4
  %v2_1000b5e015 = icmp ult i32 %v1_1000b4f0, %v2_1000b5d812
  %v1_1000b5e417 = add i32 %v0_1000b530, 19
  store i32 %v1_1000b5e417, i32* @r3, align 4
  %v1_1000b5e818 = add i32 %v1_1000b4f0, 19
  store i32 %v1_1000b5e818, i32* @r4, align 4
  br i1 %v2_1000b5e015, label %dec_label_pc_1000b544, label %dec_label_pc_1000b5f0

dec_label_pc_1000b544:                            ; preds = %dec_label_pc_1000b530, %dec_label_pc_1000b58c
  %v0_1000b54419 = phi i32 [ %v2_1000b5d4, %dec_label_pc_1000b58c ], [ %v1_1000b4f0, %dec_label_pc_1000b530 ]
  %v1_1000b544 = add i32 %v0_1000b54419, 16
  %v2_1000b544 = inttoptr i32 %v1_1000b544 to i16*
  %v3_1000b544 = load i16, i16* %v2_1000b544, align 2
  %v4_1000b544 = zext i16 %v3_1000b544 to i32
  %v1_1000b548 = add nuw nsw i32 %v4_1000b544, 7
  store i32 %v1_1000b548, i32* %r9.global-to-local, align 4
  %v1_1000b54c = call i32 @__asm_rlwinm(i32 %v1_1000b548, i32 0, i32 0, i32 28)
  %v0_1000b550 = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b550 = add i32 %v1_1000b54c, %v0_1000b550
  store i32 %v3_1000b550, i32* %r11.global-to-local, align 4
  %v1_1000b554 = load i32, i32* %r10.global-to-local, align 4
  %v3_1000b554 = icmp ugt i32 %v3_1000b550, %v1_1000b554
  br i1 %v3_1000b554, label %dec_label_pc_1000b55c, label %dec_label_pc_1000b58c

dec_label_pc_1000b55c:                            ; preds = %dec_label_pc_1000b544
  %v0_1000b55c = load i32, i32* @r22, align 4
  %v0_1000b560 = load i32, i32* @r25, align 4
  %v0_1000b564 = load i32, i32* @r26, align 4
  store i32 268481904, i32* @lr, align 4
  %v4_1000b56c = call i32 @function_1000b730(i32 %v0_1000b55c, i32 %v0_1000b560, i32 %v0_1000b564, i32 0)
  %v0_1000b570 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000b570 = load i32, i32* @r28, align 4
  %v4_1000b570 = icmp eq i32 %v0_1000b570, %v1_1000b570
  br i1 %v4_1000b570, label %dec_label_pc_1000b578, label %dec_label_pc_1000b5f0

dec_label_pc_1000b578:                            ; preds = %dec_label_pc_1000b55c
  %v0_1000b578 = call i32 @function_10009c78()
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000b584 = inttoptr i32 %v0_1000b578 to i32*
  store i32 22, i32* %v2_1000b584, align 4
  %v0_1000b5f8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b5f4

dec_label_pc_1000b58c:                            ; preds = %dec_label_pc_1000b544
  %v2_1000b54c = trunc i32 %v1_1000b54c to i16
  %v0_1000b58c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b58c = inttoptr i32 %v0_1000b58c to i32*
  %v2_1000b58c = load i32, i32* %v1_1000b58c, align 4
  store i32 %v2_1000b58c, i32* %r9.global-to-local, align 4
  %v1_1000b590 = add i32 %v0_1000b58c, 4
  %v2_1000b590 = inttoptr i32 %v1_1000b590 to i32*
  %v3_1000b590 = load i32, i32* %v2_1000b590, align 4
  store i32 %v3_1000b590, i32* %r10.global-to-local, align 4
  %v1_1000b594 = add i32 %v0_1000b58c, 8
  %v2_1000b594 = inttoptr i32 %v1_1000b594 to i32*
  %v3_1000b594 = load i32, i32* %v2_1000b594, align 4
  store i32 %v3_1000b594, i32* @r25, align 4
  %v1_1000b598 = add i32 %v0_1000b58c, 12
  %v2_1000b598 = inttoptr i32 %v1_1000b598 to i32*
  %v3_1000b598 = load i32, i32* %v2_1000b598, align 4
  store i32 %v3_1000b598, i32* @r26, align 4
  %v2_1000b59c = inttoptr i32 %v0_1000b550 to i32*
  store i32 %v2_1000b58c, i32* %v2_1000b59c, align 4
  %v0_1000b5a0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b5a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b5a0 = add i32 %v1_1000b5a0, 4
  %v3_1000b5a0 = inttoptr i32 %v2_1000b5a0 to i32*
  store i32 %v0_1000b5a0, i32* %v3_1000b5a0, align 4
  %v0_1000b5a4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b5a4 = add i32 %v0_1000b5a4, 8
  %v2_1000b5a4 = inttoptr i32 %v1_1000b5a4 to i32*
  %v3_1000b5a4 = load i32, i32* %v2_1000b5a4, align 4
  store i32 %v3_1000b5a4, i32* %r9.global-to-local, align 4
  %v1_1000b5a8 = add i32 %v0_1000b5a4, 12
  %v2_1000b5a8 = inttoptr i32 %v1_1000b5a8 to i32*
  %v3_1000b5a8 = load i32, i32* %v2_1000b5a8, align 4
  store i32 %v3_1000b5a8, i32* %r10.global-to-local, align 4
  %v3_1000b5ac = load i32, i32* %r29.global-to-local, align 4
  %v4_1000b5ac = add i32 %v3_1000b5ac, 16
  %v5_1000b5ac = inttoptr i32 %v4_1000b5ac to i16*
  store i16 %v2_1000b54c, i16* %v5_1000b5ac, align 2
  %v0_1000b5b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b5b0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b5b0 = add i32 %v1_1000b5b0, 8
  %v3_1000b5b0 = inttoptr i32 %v2_1000b5b0 to i32*
  store i32 %v0_1000b5b0, i32* %v3_1000b5b0, align 4
  %v0_1000b5b4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b5b4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b5b4 = add i32 %v1_1000b5b4, 12
  %v3_1000b5b4 = inttoptr i32 %v2_1000b5b4 to i32*
  store i32 %v0_1000b5b4, i32* %v3_1000b5b4, align 4
  %v0_1000b5b8 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b5b8 = add i32 %v0_1000b5b8, 18
  %v2_1000b5b8 = inttoptr i32 %v1_1000b5b8 to i8*
  %v3_1000b5b8 = load i8, i8* %v2_1000b5b8, align 1
  %v2_1000b5bc = load i32, i32* %r29.global-to-local, align 4
  %v3_1000b5bc = add i32 %v2_1000b5bc, 18
  %v4_1000b5bc = inttoptr i32 %v3_1000b5bc to i8*
  store i8 %v3_1000b5b8, i8* %v4_1000b5bc, align 1
  %v0_1000b5c0 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000b5c0, i32* %r29.global-to-local, align 4
  %v0_1000b5c4 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b5c4 = add i32 %v0_1000b5c4, 16
  %v2_1000b5c4 = inttoptr i32 %v1_1000b5c4 to i16*
  %v3_1000b5c4 = load i16, i16* %v2_1000b5c4, align 2
  %v4_1000b5c4 = zext i16 %v3_1000b5c4 to i32
  %v1_1000b5c8 = add nsw i32 %v4_1000b5c4, -19
  store i32 %v1_1000b5c8, i32* @r5, align 4
  store i32 268482000, i32* @lr, align 4
  %v0_1000b5cc = call i32 @function_1000ba2c()
  %v0_1000b5d0 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000b5d0 = add i32 %v0_1000b5d0, 16
  %v2_1000b5d0 = inttoptr i32 %v1_1000b5d0 to i16*
  %v3_1000b5d0 = load i16, i16* %v2_1000b5d0, align 2
  %v4_1000b5d0 = zext i16 %v3_1000b5d0 to i32
  %v2_1000b5d4 = add i32 %v4_1000b5d0, %v0_1000b5d0
  store i32 %v2_1000b5d4, i32* %r30.global-to-local, align 4
  %v1_1000b5d8.pre = load i32, i32* @r24, align 4
  %v0_1000b5dc.pre = load i32, i32* @r28, align 4
  %v0_1000b5e4.pre = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b5d8 = add i32 %v1_1000b5d8.pre, %v1_1000b4f0
  %v1_1000b5dc = load i32, i32* @r23, align 4
  %v2_1000b5dc = add i32 %v1_1000b5dc, %v0_1000b5dc.pre
  store i32 %v2_1000b5dc, i32* %r10.global-to-local, align 4
  %v2_1000b5e0 = icmp ult i32 %v2_1000b5d4, %v2_1000b5d8
  %v1_1000b5e4 = add i32 %v0_1000b5e4.pre, 19
  store i32 %v1_1000b5e4, i32* @r3, align 4
  %v1_1000b5e8 = add i32 %v2_1000b5d4, 19
  store i32 %v1_1000b5e8, i32* @r4, align 4
  br i1 %v2_1000b5e0, label %dec_label_pc_1000b544, label %dec_label_pc_1000b5f0

dec_label_pc_1000b5f0:                            ; preds = %dec_label_pc_1000b530, %dec_label_pc_1000b58c, %dec_label_pc_1000b55c
  %v1_1000b5f0 = phi i32 [ %v0_1000b570, %dec_label_pc_1000b55c ], [ %v0_1000b530, %dec_label_pc_1000b530 ], [ %v0_1000b5e4.pre, %dec_label_pc_1000b58c ]
  %v0_1000b5f0 = phi i32 [ %v1_1000b570, %dec_label_pc_1000b55c ], [ %v0_1000b530, %dec_label_pc_1000b530 ], [ %v0_1000b5dc.pre, %dec_label_pc_1000b58c ]
  %v2_1000b5f0 = sub i32 %v1_1000b5f0, %v0_1000b5f0
  store i32 %v2_1000b5f0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b5f4

dec_label_pc_1000b5f4:                            ; preds = %dec_label_pc_1000b578, %dec_label_pc_1000b528, %dec_label_pc_1000b5f0
  %v0_1000b5f8 = phi i32 [ %v0_1000b5f8.pre, %dec_label_pc_1000b578 ], [ -1, %dec_label_pc_1000b528 ], [ %v2_1000b5f0, %dec_label_pc_1000b5f0 ]
  %v0_1000b5f4 = load i32, i32* @r1, align 4
  %v1_1000b5f4 = inttoptr i32 %v0_1000b5f4 to i32*
  %v2_1000b5f4 = load i32, i32* %v1_1000b5f4, align 4
  store i32 %v2_1000b5f4, i32* %r11.global-to-local, align 4
  ret i32 %v0_1000b5f8

; uselistorder directives
  uselistorder i32 %v2_1000b5d4, { 2, 1, 3, 0 }
  uselistorder i32 %v0_1000b58c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000b54c, { 1, 0 }
  uselistorder i32 %v0_1000b500, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v1_1000b4f0, { 4, 0, 1, 2, 3, 5, 6, 7 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 0, 4, 1, 2, 3, 5, 6, 7, 8 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32 18, { 10, 11, 12, 0, 3, 8, 9, 4, 5, 6, 7, 13, 14, 1, 15, 2, 16, 17 }
  uselistorder i32 22, { 0, 1, 2, 3, 12, 4, 5, 6, 7, 13, 8, 14, 15, 16, 9, 17, 10, 18, 11, 19 }
  uselistorder i32 7, { 34, 48, 12, 13, 22, 14, 15, 23, 16, 17, 24, 18, 19, 25, 26, 27, 28, 29, 30, 1, 31, 2, 32, 33, 0, 35, 3, 36, 4, 37, 20, 38, 21, 39, 5, 40, 6, 41, 42, 43, 7, 44, 45, 8, 46, 47, 9, 10, 11, 49 }
  uselistorder i32 19, { 25, 26, 1, 2, 0, 16, 17, 18, 4, 7, 8, 19, 9, 10, 20, 21, 22, 23, 24, 3, 11, 12, 13, 14, 15, 27, 28, 29, 30, 5, 6 }
  uselistorder i32* @r26, { 17, 18, 19, 10, 11, 12, 26, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 13, 14, 15, 16, 20, 21, 22, 23, 24, 25, 27, 28, 29 }
  uselistorder i32* @r25, { 21, 22, 23, 14, 15, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 16, 17, 18, 19, 20, 24, 25, 26, 27, 0, 28, 29, 30, 31, 32, 33 }
  uselistorder i32* @r24, { 0, 18, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 19, 22, 1, 23, 24, 25, 26, 27, 28 }
  uselistorder i32* @r27, { 23, 15, 16, 38, 39, 3, 4, 5, 6, 7, 8, 9, 10, 0, 11, 12, 13, 14, 19, 17, 18, 2, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 1, 36, 37, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 23, { 21, 11, 22, 2, 3, 12, 4, 5, 13, 14, 15, 16, 6, 17, 0, 1, 18, 19, 20, 7, 8, 9, 10 }
  uselistorder i32* @r22, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder i32* @r23, { 11, 0, 12, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder i32* @r1, { 5, 6, 1, 2, 3, 0, 7, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 14, 15, 16, 25, 21, 23, 22, 24, 0, 27, 26, 1, 2, 3, 19, 20, 17, 18, 5, 4, 6, 7, 8, 9, 10, 12, 11, 13, 28 }
  uselistorder i32 27, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 30, { 17, 18, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000b5f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b5f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b544, { 1, 0 }
}

define i32 @function_1000b610() local_unnamed_addr {
dec_label_pc_1000b610:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b628 = call i32 @__asm_mfcr()
  %v1_1000b62c = and i32 %v0_1000b628, 268435456
  %v3_1000b62c = icmp eq i32 %v1_1000b62c, 0
  store i32 %v0_1000b628, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b62c, label %dec_label_pc_1000b644, label %dec_label_pc_1000b638

dec_label_pc_1000b638:                            ; preds = %dec_label_pc_1000b610
  %v0_1000b638 = call i32 @function_10009c78()
  %v0_1000b63c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b63c = inttoptr i32 %v0_1000b638 to i32*
  store i32 %v0_1000b63c, i32* %v2_1000b63c, align 4
  br label %dec_label_pc_1000b644

dec_label_pc_1000b644:                            ; preds = %dec_label_pc_1000b610, %dec_label_pc_1000b638
  %v0_1000b654 = phi i32 [ %v0_1000b628, %dec_label_pc_1000b610 ], [ -1, %dec_label_pc_1000b638 ]
  ret i32 %v0_1000b654

; uselistorder directives
  uselistorder label %dec_label_pc_1000b644, { 1, 0 }
}

define i32 @function_1000b658() local_unnamed_addr {
dec_label_pc_1000b658:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b670 = call i32 @__asm_mfcr()
  %v1_1000b674 = and i32 %v0_1000b670, 268435456
  %v3_1000b674 = icmp eq i32 %v1_1000b674, 0
  store i32 %v0_1000b670, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b674, label %dec_label_pc_1000b68c, label %dec_label_pc_1000b680

dec_label_pc_1000b680:                            ; preds = %dec_label_pc_1000b658
  %v0_1000b680 = call i32 @function_10009c78()
  %v0_1000b684 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b684 = inttoptr i32 %v0_1000b680 to i32*
  store i32 %v0_1000b684, i32* %v2_1000b684, align 4
  br label %dec_label_pc_1000b68c

dec_label_pc_1000b68c:                            ; preds = %dec_label_pc_1000b658, %dec_label_pc_1000b680
  %v0_1000b69c = phi i32 [ %v0_1000b670, %dec_label_pc_1000b658 ], [ -1, %dec_label_pc_1000b680 ]
  ret i32 %v0_1000b69c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b68c, { 1, 0 }
}

define i32 @function_1000b6a0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b6a0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b6b8 = call i32 @__asm_mfcr()
  %v1_1000b6bc = and i32 %v0_1000b6b8, 268435456
  %v3_1000b6bc = icmp eq i32 %v1_1000b6bc, 0
  store i32 %v0_1000b6b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b6bc, label %dec_label_pc_1000b6d4, label %dec_label_pc_1000b6c8

dec_label_pc_1000b6c8:                            ; preds = %dec_label_pc_1000b6a0
  %v0_1000b6c8 = call i32 @function_10009c78()
  %v0_1000b6cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b6cc = inttoptr i32 %v0_1000b6c8 to i32*
  store i32 %v0_1000b6cc, i32* %v2_1000b6cc, align 4
  br label %dec_label_pc_1000b6d4

dec_label_pc_1000b6d4:                            ; preds = %dec_label_pc_1000b6a0, %dec_label_pc_1000b6c8
  %v0_1000b6e4 = phi i32 [ %v0_1000b6b8, %dec_label_pc_1000b6a0 ], [ -1, %dec_label_pc_1000b6c8 ]
  ret i32 %v0_1000b6e4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b6d4, { 1, 0 }
}

define i32 @function_1000b6e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b6e8:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b700 = call i32 @__asm_mfcr()
  %v1_1000b704 = and i32 %v0_1000b700, 268435456
  %v3_1000b704 = icmp eq i32 %v1_1000b704, 0
  store i32 %v0_1000b700, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b704, label %dec_label_pc_1000b71c, label %dec_label_pc_1000b710

dec_label_pc_1000b710:                            ; preds = %dec_label_pc_1000b6e8
  %v0_1000b710 = call i32 @function_10009c78()
  %v0_1000b714 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b714 = inttoptr i32 %v0_1000b710 to i32*
  store i32 %v0_1000b714, i32* %v2_1000b714, align 4
  br label %dec_label_pc_1000b71c

dec_label_pc_1000b71c:                            ; preds = %dec_label_pc_1000b6e8, %dec_label_pc_1000b710
  %v0_1000b72c = phi i32 [ %v0_1000b700, %dec_label_pc_1000b6e8 ], [ -1, %dec_label_pc_1000b710 ]
  ret i32 %v0_1000b72c

; uselistorder directives
  uselistorder label %dec_label_pc_1000b71c, { 1, 0 }
}

define i32 @function_1000b730(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1000b730:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000b730 = load i32, i32* @lr, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_1000b75c = call i32 @__asm_mfcr()
  %v1_1000b760 = and i32 %v0_1000b75c, 268435456
  %v3_1000b760 = icmp eq i32 %v1_1000b760, 0
  store i32 %v0_1000b75c, i32* %r31.global-to-local, align 4
  store i32 %v0_1000b75c, i32* %r0.global-to-local, align 4
  br i1 %v3_1000b760, label %dec_label_pc_1000b784, label %dec_label_pc_1000b774

dec_label_pc_1000b774:                            ; preds = %dec_label_pc_1000b730
  %v0_1000b774 = call i32 @function_10009c78()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1000b77c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b77c = inttoptr i32 %v0_1000b774 to i32*
  store i32 %v0_1000b77c, i32* %v2_1000b77c, align 4
  %v0_1000b788.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000b788

dec_label_pc_1000b784:                            ; preds = %dec_label_pc_1000b730
  %v3_1000b76c = icmp eq i32 %v0_1000b75c, 0
  br i1 %v3_1000b76c, label %dec_label_pc_1000b794, label %dec_label_pc_1000b788

dec_label_pc_1000b788:                            ; preds = %dec_label_pc_1000b784, %dec_label_pc_1000b774
  %v0_1000b788 = phi i32 [ %v0_1000b75c, %dec_label_pc_1000b784 ], [ %v0_1000b788.pre, %dec_label_pc_1000b774 ]
  %tmp = icmp slt i32 %v0_1000b788, 0
  %v1_1000b78c = zext i1 %tmp to i32
  %v2_1000b78c = ashr i32 %v0_1000b788, 31
  %v3_1000b78c = and i32 %v2_1000b78c, -2
  %v4_1000b78c = or i32 %v3_1000b78c, %v1_1000b78c
  br label %dec_label_pc_1000b79c

dec_label_pc_1000b794:                            ; preds = %dec_label_pc_1000b784
  %v3_1000b794 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000b79c

dec_label_pc_1000b79c:                            ; preds = %dec_label_pc_1000b788, %dec_label_pc_1000b794
  %v0_1000b7ac = phi i32 [ %v4_1000b78c, %dec_label_pc_1000b788 ], [ %v3_1000b794, %dec_label_pc_1000b794 ]
  store i32 %v0_1000b730, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b7ac

; uselistorder directives
  uselistorder i32 %v0_1000b788, { 1, 0 }
  uselistorder i32 %v0_1000b75c, { 0, 3, 2, 1, 4 }
  uselistorder i32 -2, { 7, 6, 1, 0, 8, 9, 12, 2, 10, 3, 11, 4, 5 }
  uselistorder label %dec_label_pc_1000b79c, { 1, 0 }
}

define i32 @function_1000b7b0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b7b0:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b7c8 = call i32 @__asm_mfcr()
  %v1_1000b7cc = and i32 %v0_1000b7c8, 268435456
  %v3_1000b7cc = icmp eq i32 %v1_1000b7cc, 0
  store i32 %v0_1000b7c8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b7cc, label %dec_label_pc_1000b7e4, label %dec_label_pc_1000b7d8

dec_label_pc_1000b7d8:                            ; preds = %dec_label_pc_1000b7b0
  %v0_1000b7d8 = call i32 @function_10009c78()
  %v0_1000b7dc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b7dc = inttoptr i32 %v0_1000b7d8 to i32*
  store i32 %v0_1000b7dc, i32* %v2_1000b7dc, align 4
  br label %dec_label_pc_1000b7e4

dec_label_pc_1000b7e4:                            ; preds = %dec_label_pc_1000b7b0, %dec_label_pc_1000b7d8
  %v0_1000b7f4 = phi i32 [ %v0_1000b7c8, %dec_label_pc_1000b7b0 ], [ -1, %dec_label_pc_1000b7d8 ]
  ret i32 %v0_1000b7f4

; uselistorder directives
  uselistorder label %dec_label_pc_1000b7e4, { 1, 0 }
}

define i32 @function_1000b7f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b7f8:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000b814 = load i32, i32* @global_var_1001c708.333, align 4
  %v3_1000b818 = icmp eq i32 %v3_1000b814, 0
  br i1 %v3_1000b818, label %dec_label_pc_1000b820, label %dec_label_pc_1000b82c

dec_label_pc_1000b820:                            ; preds = %dec_label_pc_1000b7f8
  store i32 268482596, i32* @lr, align 4
  %v1_1000b820 = call i32 @function_1000bdec(i32 0)
  %v1_1000b824 = icmp slt i32 %v1_1000b820, 0
  br i1 %v1_1000b824, label %dec_label_pc_1000b84c, label %dec_label_pc_1000b820.dec_label_pc_1000b82c_crit_edge

dec_label_pc_1000b820.dec_label_pc_1000b82c_crit_edge: ; preds = %dec_label_pc_1000b820
  %v0_1000b82c.pre = load i32, i32* @r30, align 4
  %v3_1000b830.pre = load i32, i32* @global_var_1001c708.333, align 4
  br label %dec_label_pc_1000b82c

dec_label_pc_1000b82c:                            ; preds = %dec_label_pc_1000b820.dec_label_pc_1000b82c_crit_edge, %dec_label_pc_1000b7f8
  %v3_1000b830 = phi i32 [ %v3_1000b830.pre, %dec_label_pc_1000b820.dec_label_pc_1000b82c_crit_edge ], [ %v3_1000b814, %dec_label_pc_1000b7f8 ]
  %v1_1000b838 = phi i32 [ %v0_1000b82c.pre, %dec_label_pc_1000b820.dec_label_pc_1000b82c_crit_edge ], [ %arg1, %dec_label_pc_1000b7f8 ]
  %v3_1000b82c = icmp eq i32 %v1_1000b838, 0
  store i32 %v3_1000b830, i32* @r31, align 4
  br i1 %v3_1000b82c, label %dec_label_pc_1000b850, label %dec_label_pc_1000b840

dec_label_pc_1000b840:                            ; preds = %dec_label_pc_1000b82c
  %v2_1000b838 = add i32 %v1_1000b838, %v3_1000b830
  store i32 268482628, i32* @lr, align 4
  %v1_1000b840 = call i32 @function_1000bdec(i32 %v2_1000b838)
  %tmp6 = icmp sgt i32 %v1_1000b840, -1
  br i1 %tmp6, label %dec_label_pc_1000b840.dec_label_pc_1000b850_crit_edge, label %dec_label_pc_1000b84c

dec_label_pc_1000b840.dec_label_pc_1000b850_crit_edge: ; preds = %dec_label_pc_1000b840
  %v0_1000b854.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b850

dec_label_pc_1000b84c:                            ; preds = %dec_label_pc_1000b840, %dec_label_pc_1000b820
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000b850

dec_label_pc_1000b850:                            ; preds = %dec_label_pc_1000b840.dec_label_pc_1000b850_crit_edge, %dec_label_pc_1000b82c, %dec_label_pc_1000b84c
  %v0_1000b854 = phi i32 [ %v0_1000b854.pre, %dec_label_pc_1000b840.dec_label_pc_1000b850_crit_edge ], [ %v3_1000b830, %dec_label_pc_1000b82c ], [ -1, %dec_label_pc_1000b84c ]
  ret i32 %v0_1000b854

; uselistorder directives
  uselistorder i32 %v3_1000b830, { 1, 0, 2 }
  uselistorder i32 (i32)* @function_1000bdec, { 1, 0 }
  uselistorder label %dec_label_pc_1000b850, { 2, 0, 1 }
}

define i32 @function_1000b868(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000b868:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000b880 = call i32 @__asm_mfcr()
  %v1_1000b884 = and i32 %v0_1000b880, 268435456
  %v3_1000b884 = icmp eq i32 %v1_1000b884, 0
  store i32 %v0_1000b880, i32* %r31.global-to-local, align 4
  br i1 %v3_1000b884, label %dec_label_pc_1000b89c, label %dec_label_pc_1000b890

dec_label_pc_1000b890:                            ; preds = %dec_label_pc_1000b868
  %v0_1000b890 = call i32 @function_10009c78()
  %v0_1000b894 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000b894 = inttoptr i32 %v0_1000b890 to i32*
  store i32 %v0_1000b894, i32* %v2_1000b894, align 4
  br label %dec_label_pc_1000b89c

dec_label_pc_1000b89c:                            ; preds = %dec_label_pc_1000b868, %dec_label_pc_1000b890
  %v0_1000b8ac = phi i32 [ %v0_1000b880, %dec_label_pc_1000b868 ], [ -1, %dec_label_pc_1000b890 ]
  ret i32 %v0_1000b8ac

; uselistorder directives
  uselistorder label %dec_label_pc_1000b89c, { 1, 0 }
}

define i32 @function_1000b8b0(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1000b8b0:
  %r10.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 268482776, i32* @lr, align 4
  %v3_1000b8d4 = call i32 @function_10009d60(i32 %arg2, i32 0, i32 104)
  %v2_1000b8d8 = load i32, i32* %arg1, align 4
  %v1_1000b8dc = add i32 %tmp, 4
  %v2_1000b8dc = inttoptr i32 %v1_1000b8dc to i32*
  %v3_1000b8dc = load i32, i32* %v2_1000b8dc, align 4
  store i32 %v3_1000b8dc, i32* %r10.global-to-local, align 4
  %v1_1000b8e0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8e0 = inttoptr i32 %v1_1000b8e0 to i32*
  store i32 %v2_1000b8d8, i32* %v2_1000b8e0, align 4
  %v0_1000b8e4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b8e4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8e4 = add i32 %v1_1000b8e4, 4
  %v3_1000b8e4 = inttoptr i32 %v2_1000b8e4 to i32*
  store i32 %v0_1000b8e4, i32* %v3_1000b8e4, align 4
  %v0_1000b8e8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8e8 = add i32 %v0_1000b8e8, 8
  %v2_1000b8e8 = inttoptr i32 %v1_1000b8e8 to i32*
  %v3_1000b8e8 = load i32, i32* %v2_1000b8e8, align 4
  %v1_1000b8ec = add i32 %v0_1000b8e8, 12
  %v2_1000b8ec = inttoptr i32 %v1_1000b8ec to i32*
  %v3_1000b8ec = load i32, i32* %v2_1000b8ec, align 4
  store i32 %v3_1000b8ec, i32* %r10.global-to-local, align 4
  %v1_1000b8f0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8f0 = add i32 %v1_1000b8f0, 8
  %v3_1000b8f0 = inttoptr i32 %v2_1000b8f0 to i32*
  store i32 %v3_1000b8e8, i32* %v3_1000b8f0, align 4
  %v0_1000b8f4 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b8f4 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8f4 = add i32 %v1_1000b8f4, 12
  %v3_1000b8f4 = inttoptr i32 %v2_1000b8f4 to i32*
  store i32 %v0_1000b8f4, i32* %v3_1000b8f4, align 4
  %v0_1000b8f8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b8f8 = add i32 %v0_1000b8f8, 16
  %v2_1000b8f8 = inttoptr i32 %v1_1000b8f8 to i32*
  %v3_1000b8f8 = load i32, i32* %v2_1000b8f8, align 4
  %v1_1000b8fc = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b8fc = add i32 %v1_1000b8fc, 16
  %v3_1000b8fc = inttoptr i32 %v2_1000b8fc to i32*
  store i32 %v3_1000b8f8, i32* %v3_1000b8fc, align 4
  %v0_1000b900 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b900 = add i32 %v0_1000b900, 20
  %v2_1000b900 = inttoptr i32 %v1_1000b900 to i32*
  %v3_1000b900 = load i32, i32* %v2_1000b900, align 4
  %v1_1000b904 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b904 = add i32 %v1_1000b904, 20
  %v3_1000b904 = inttoptr i32 %v2_1000b904 to i32*
  store i32 %v3_1000b900, i32* %v3_1000b904, align 4
  %v0_1000b908 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b908 = add i32 %v0_1000b908, 24
  %v2_1000b908 = inttoptr i32 %v1_1000b908 to i32*
  %v3_1000b908 = load i32, i32* %v2_1000b908, align 4
  %v1_1000b90c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b90c = add i32 %v1_1000b90c, 24
  %v3_1000b90c = inttoptr i32 %v2_1000b90c to i32*
  store i32 %v3_1000b908, i32* %v3_1000b90c, align 4
  %v0_1000b910 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b910 = add i32 %v0_1000b910, 28
  %v2_1000b910 = inttoptr i32 %v1_1000b910 to i32*
  %v3_1000b910 = load i32, i32* %v2_1000b910, align 4
  %v1_1000b914 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b914 = add i32 %v1_1000b914, 28
  %v3_1000b914 = inttoptr i32 %v2_1000b914 to i32*
  store i32 %v3_1000b910, i32* %v3_1000b914, align 4
  %v0_1000b918 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b918 = add i32 %v0_1000b918, 32
  %v2_1000b918 = inttoptr i32 %v1_1000b918 to i32*
  %v3_1000b918 = load i32, i32* %v2_1000b918, align 4
  %v1_1000b91c = add i32 %v0_1000b918, 36
  %v2_1000b91c = inttoptr i32 %v1_1000b91c to i32*
  %v3_1000b91c = load i32, i32* %v2_1000b91c, align 4
  store i32 %v3_1000b91c, i32* %r10.global-to-local, align 4
  %v1_1000b920 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b920 = add i32 %v1_1000b920, 32
  %v3_1000b920 = inttoptr i32 %v2_1000b920 to i32*
  store i32 %v3_1000b918, i32* %v3_1000b920, align 4
  %v0_1000b924 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b924 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b924 = add i32 %v1_1000b924, 36
  %v3_1000b924 = inttoptr i32 %v2_1000b924 to i32*
  store i32 %v0_1000b924, i32* %v3_1000b924, align 4
  %v0_1000b928 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b928 = add i32 %v0_1000b928, 48
  %v2_1000b928 = inttoptr i32 %v1_1000b928 to i32*
  %v3_1000b928 = load i32, i32* %v2_1000b928, align 4
  %v1_1000b92c = add i32 %v0_1000b928, 52
  %v2_1000b92c = inttoptr i32 %v1_1000b92c to i32*
  %v3_1000b92c = load i32, i32* %v2_1000b92c, align 4
  store i32 %v3_1000b92c, i32* %r10.global-to-local, align 4
  %v1_1000b930 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b930 = add i32 %v1_1000b930, 48
  %v3_1000b930 = inttoptr i32 %v2_1000b930 to i32*
  store i32 %v3_1000b928, i32* %v3_1000b930, align 4
  %v0_1000b934 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b934 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b934 = add i32 %v1_1000b934, 52
  %v3_1000b934 = inttoptr i32 %v2_1000b934 to i32*
  store i32 %v0_1000b934, i32* %v3_1000b934, align 4
  %v0_1000b938 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b938 = add i32 %v0_1000b938, 56
  %v2_1000b938 = inttoptr i32 %v1_1000b938 to i32*
  %v3_1000b938 = load i32, i32* %v2_1000b938, align 4
  %v1_1000b93c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b93c = add i32 %v1_1000b93c, 56
  %v3_1000b93c = inttoptr i32 %v2_1000b93c to i32*
  store i32 %v3_1000b938, i32* %v3_1000b93c, align 4
  %v0_1000b940 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b940 = add i32 %v0_1000b940, 64
  %v2_1000b940 = inttoptr i32 %v1_1000b940 to i32*
  %v3_1000b940 = load i32, i32* %v2_1000b940, align 4
  %v1_1000b944 = add i32 %v0_1000b940, 68
  %v2_1000b944 = inttoptr i32 %v1_1000b944 to i32*
  %v3_1000b944 = load i32, i32* %v2_1000b944, align 4
  store i32 %v3_1000b944, i32* %r10.global-to-local, align 4
  %v1_1000b948 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b948 = add i32 %v1_1000b948, 64
  %v3_1000b948 = inttoptr i32 %v2_1000b948 to i32*
  store i32 %v3_1000b940, i32* %v3_1000b948, align 4
  %v0_1000b94c = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b94c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b94c = add i32 %v1_1000b94c, 68
  %v3_1000b94c = inttoptr i32 %v2_1000b94c to i32*
  store i32 %v0_1000b94c, i32* %v3_1000b94c, align 4
  %v0_1000b950 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b950 = add i32 %v0_1000b950, 72
  %v2_1000b950 = inttoptr i32 %v1_1000b950 to i32*
  %v3_1000b950 = load i32, i32* %v2_1000b950, align 4
  %v1_1000b954 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b954 = add i32 %v1_1000b954, 72
  %v3_1000b954 = inttoptr i32 %v2_1000b954 to i32*
  store i32 %v3_1000b950, i32* %v3_1000b954, align 4
  %v0_1000b958 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b958 = add i32 %v0_1000b958, 80
  %v2_1000b958 = inttoptr i32 %v1_1000b958 to i32*
  %v3_1000b958 = load i32, i32* %v2_1000b958, align 4
  %v1_1000b95c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b95c = add i32 %v1_1000b95c, 80
  %v3_1000b95c = inttoptr i32 %v2_1000b95c to i32*
  store i32 %v3_1000b958, i32* %v3_1000b95c, align 4
  %v0_1000b960 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000b960 = add i32 %v0_1000b960, 88
  %v2_1000b960 = inttoptr i32 %v1_1000b960 to i32*
  %v3_1000b960 = load i32, i32* %v2_1000b960, align 4
  %v1_1000b964 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000b964 = add i32 %v1_1000b964, 88
  %v3_1000b964 = inttoptr i32 %v2_1000b964 to i32*
  store i32 %v3_1000b960, i32* %v3_1000b964, align 4
  ret i32 %v3_1000b8d4

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 17, 10, 13, 12, 11, 16, 14, 15, 18 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 4, 9, 11, 8, 7, 6, 5, 10, 12 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 9, 6, 7 }
  uselistorder i32 80, { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 12, 13, 3 }
  uselistorder i32 104, { 6, 8, 7, 9, 0, 1, 2, 3, 4, 5, 10, 11 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000b97c(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000b97c:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000b980 = load i32, i32* @lr, align 4
  store i32 %v0_1000b980, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268482980, i32* @lr, align 4
  %v3_1000b9a0 = call i32 @function_10009d60(i32 %arg2, i32 0, i32 88)
  %v0_1000b9a4 = load i32, i32* @r28, align 4
  %v1_1000b9a4 = inttoptr i32 %v0_1000b9a4 to i32*
  %v2_1000b9a4 = load i32, i32* %v1_1000b9a4, align 4
  store i32 %v2_1000b9a4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_1000b9ac = load i32, i32* @r29, align 4
  %v2_1000b9ac = add i32 %v1_1000b9ac, 4
  %v3_1000b9ac = inttoptr i32 %v2_1000b9ac to i32*
  store i32 %v2_1000b9a4, i32* %v3_1000b9ac, align 4
  %v0_1000b9b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b9b0 = load i32, i32* @r29, align 4
  %v2_1000b9b0 = inttoptr i32 %v1_1000b9b0 to i32*
  store i32 %v0_1000b9b0, i32* %v2_1000b9b0, align 4
  %v0_1000b9b4 = load i32, i32* @r28, align 4
  %v1_1000b9b4 = add i32 %v0_1000b9b4, 4
  %v2_1000b9b4 = inttoptr i32 %v1_1000b9b4 to i32*
  %v3_1000b9b4 = load i32, i32* %v2_1000b9b4, align 4
  store i32 %v3_1000b9b4, i32* %r0.global-to-local, align 4
  %v1_1000b9b8 = load i32, i32* @r29, align 4
  %v2_1000b9b8 = add i32 %v1_1000b9b8, 12
  %v3_1000b9b8 = inttoptr i32 %v2_1000b9b8 to i32*
  store i32 %v3_1000b9b4, i32* %v3_1000b9b8, align 4
  %v0_1000b9bc = load i32, i32* @r28, align 4
  %v1_1000b9bc = add i32 %v0_1000b9bc, 8
  %v2_1000b9bc = inttoptr i32 %v1_1000b9bc to i32*
  %v3_1000b9bc = load i32, i32* %v2_1000b9bc, align 4
  store i32 %v3_1000b9bc, i32* %r0.global-to-local, align 4
  %v1_1000b9c0 = load i32, i32* @r29, align 4
  %v2_1000b9c0 = add i32 %v1_1000b9c0, 16
  %v3_1000b9c0 = inttoptr i32 %v2_1000b9c0 to i32*
  store i32 %v3_1000b9bc, i32* %v3_1000b9c0, align 4
  %v0_1000b9c4 = load i32, i32* @r28, align 4
  %v1_1000b9c4 = add i32 %v0_1000b9c4, 12
  %v2_1000b9c4 = inttoptr i32 %v1_1000b9c4 to i16*
  %v3_1000b9c4 = load i16, i16* %v2_1000b9c4, align 2
  %v4_1000b9c4 = zext i16 %v3_1000b9c4 to i32
  store i32 %v4_1000b9c4, i32* %r0.global-to-local, align 4
  %v1_1000b9c8 = load i32, i32* @r29, align 4
  %v2_1000b9c8 = add i32 %v1_1000b9c8, 20
  %v3_1000b9c8 = inttoptr i32 %v2_1000b9c8 to i32*
  store i32 %v4_1000b9c4, i32* %v3_1000b9c8, align 4
  %v0_1000b9cc = load i32, i32* @r28, align 4
  %v1_1000b9cc = add i32 %v0_1000b9cc, 16
  %v2_1000b9cc = inttoptr i32 %v1_1000b9cc to i32*
  %v3_1000b9cc = load i32, i32* %v2_1000b9cc, align 4
  store i32 %v3_1000b9cc, i32* %r0.global-to-local, align 4
  %v1_1000b9d0 = load i32, i32* @r29, align 4
  %v2_1000b9d0 = add i32 %v1_1000b9d0, 24
  %v3_1000b9d0 = inttoptr i32 %v2_1000b9d0 to i32*
  store i32 %v3_1000b9cc, i32* %v3_1000b9d0, align 4
  %v0_1000b9d4 = load i32, i32* @r28, align 4
  %v1_1000b9d4 = add i32 %v0_1000b9d4, 20
  %v2_1000b9d4 = inttoptr i32 %v1_1000b9d4 to i32*
  %v3_1000b9d4 = load i32, i32* %v2_1000b9d4, align 4
  store i32 %v3_1000b9d4, i32* %r0.global-to-local, align 4
  %v1_1000b9d8 = load i32, i32* @r29, align 4
  %v2_1000b9d8 = add i32 %v1_1000b9d8, 28
  %v3_1000b9d8 = inttoptr i32 %v2_1000b9d8 to i32*
  store i32 %v3_1000b9d4, i32* %v3_1000b9d8, align 4
  %v0_1000b9dc = load i32, i32* @r28, align 4
  %v1_1000b9dc = add i32 %v0_1000b9dc, 24
  %v2_1000b9dc = inttoptr i32 %v1_1000b9dc to i32*
  %v3_1000b9dc = load i32, i32* %v2_1000b9dc, align 4
  store i32 %v3_1000b9dc, i32* %r0.global-to-local, align 4
  %v0_1000b9e0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b9e0 = load i32, i32* @r29, align 4
  %v2_1000b9e0 = add i32 %v1_1000b9e0, 32
  %v3_1000b9e0 = inttoptr i32 %v2_1000b9e0 to i32*
  store i32 %v0_1000b9e0, i32* %v3_1000b9e0, align 4
  %v0_1000b9e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b9e4 = load i32, i32* @r29, align 4
  %v2_1000b9e4 = add i32 %v1_1000b9e4, 36
  %v3_1000b9e4 = inttoptr i32 %v2_1000b9e4 to i32*
  store i32 %v0_1000b9e4, i32* %v3_1000b9e4, align 4
  %v0_1000b9e8 = load i32, i32* @r28, align 4
  %v1_1000b9e8 = add i32 %v0_1000b9e8, 28
  %v2_1000b9e8 = inttoptr i32 %v1_1000b9e8 to i32*
  %v3_1000b9e8 = load i32, i32* %v2_1000b9e8, align 4
  store i32 %v3_1000b9e8, i32* %r0.global-to-local, align 4
  %v1_1000b9ec = load i32, i32* @r29, align 4
  %v2_1000b9ec = add i32 %v1_1000b9ec, 44
  %v3_1000b9ec = inttoptr i32 %v2_1000b9ec to i32*
  store i32 %v3_1000b9e8, i32* %v3_1000b9ec, align 4
  %v0_1000b9f0 = load i32, i32* @r28, align 4
  %v1_1000b9f0 = add i32 %v0_1000b9f0, 32
  %v2_1000b9f0 = inttoptr i32 %v1_1000b9f0 to i32*
  %v3_1000b9f0 = load i32, i32* %v2_1000b9f0, align 4
  store i32 %v3_1000b9f0, i32* %r0.global-to-local, align 4
  %v1_1000b9f4 = load i32, i32* @r29, align 4
  %v2_1000b9f4 = add i32 %v1_1000b9f4, 48
  %v3_1000b9f4 = inttoptr i32 %v2_1000b9f4 to i32*
  store i32 %v3_1000b9f0, i32* %v3_1000b9f4, align 4
  %v0_1000b9f8 = load i32, i32* @r28, align 4
  %v1_1000b9f8 = add i32 %v0_1000b9f8, 36
  %v2_1000b9f8 = inttoptr i32 %v1_1000b9f8 to i32*
  %v3_1000b9f8 = load i32, i32* %v2_1000b9f8, align 4
  store i32 %v3_1000b9f8, i32* %r0.global-to-local, align 4
  %v1_1000b9fc = load i32, i32* @r29, align 4
  %v2_1000b9fc = add i32 %v1_1000b9fc, 52
  %v3_1000b9fc = inttoptr i32 %v2_1000b9fc to i32*
  store i32 %v3_1000b9f8, i32* %v3_1000b9fc, align 4
  %v0_1000ba00 = load i32, i32* @r28, align 4
  %v1_1000ba00 = add i32 %v0_1000ba00, 40
  %v2_1000ba00 = inttoptr i32 %v1_1000ba00 to i32*
  %v3_1000ba00 = load i32, i32* %v2_1000ba00, align 4
  store i32 %v3_1000ba00, i32* %r0.global-to-local, align 4
  %v1_1000ba04 = load i32, i32* @r29, align 4
  %v2_1000ba04 = add i32 %v1_1000ba04, 56
  %v3_1000ba04 = inttoptr i32 %v2_1000ba04 to i32*
  store i32 %v3_1000ba00, i32* %v3_1000ba04, align 4
  %v0_1000ba08 = load i32, i32* @r28, align 4
  %v1_1000ba08 = add i32 %v0_1000ba08, 48
  %v2_1000ba08 = inttoptr i32 %v1_1000ba08 to i32*
  %v3_1000ba08 = load i32, i32* %v2_1000ba08, align 4
  store i32 %v3_1000ba08, i32* %r0.global-to-local, align 4
  %v1_1000ba0c = load i32, i32* @r29, align 4
  %v2_1000ba0c = add i32 %v1_1000ba0c, 64
  %v3_1000ba0c = inttoptr i32 %v2_1000ba0c to i32*
  store i32 %v3_1000ba08, i32* %v3_1000ba0c, align 4
  %v0_1000ba10 = load i32, i32* @r28, align 4
  %v1_1000ba10 = add i32 %v0_1000ba10, 56
  %v2_1000ba10 = inttoptr i32 %v1_1000ba10 to i32*
  %v3_1000ba10 = load i32, i32* %v2_1000ba10, align 4
  %v1_1000ba14 = load i32, i32* @r29, align 4
  %v2_1000ba14 = add i32 %v1_1000ba14, 72
  %v3_1000ba14 = inttoptr i32 %v2_1000ba14 to i32*
  store i32 %v3_1000ba10, i32* %v3_1000ba14, align 4
  store i32 %v0_1000b980, i32* %r0.global-to-local, align 4
  ret i32 %v3_1000b9a0

; uselistorder directives
  uselistorder i32 72, { 4, 0, 1, 2, 3 }
  uselistorder i32 64, { 25, 18, 19, 3, 27, 13, 14, 15, 16, 17, 0, 1, 2, 20, 21, 22, 23, 24, 4, 5, 6, 7, 8, 9, 26, 10, 11, 12 }
  uselistorder i32 56, { 16, 17, 5, 6, 7, 8, 9, 10, 11, 2, 4, 12, 13, 3, 0, 1, 14, 15, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32 40, { 13, 2, 6, 7, 9, 10, 8, 3, 11, 0, 1, 12, 5, 4, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 52, { 11, 4, 5, 6, 7, 8, 2, 0, 1, 9, 10, 12, 13, 3, 14 }
  uselistorder i32 48, { 4, 5, 2, 3, 6, 0, 7, 1, 8 }
  uselistorder i32 36, { 6, 7, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 24, { 27, 28, 7, 8, 0, 1, 14, 52, 53, 54, 47, 48, 49, 2, 13, 15, 9, 12, 10, 11, 16, 17, 18, 19, 21, 22, 23, 24, 20, 25, 26, 3, 4, 5, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 6 }
  uselistorder i32 20, { 35, 36, 19, 20, 21, 22, 37, 38, 39, 40, 5, 23, 24, 25, 26, 6, 27, 28, 29, 30, 0, 1, 31, 32, 2, 33, 34, 7, 41, 42, 8, 43, 44, 45, 46, 47, 48, 49, 50, 9, 51, 52, 53, 54, 55, 56, 10, 57, 58, 59, 60, 61, 62, 63, 11, 64, 65, 66, 67, 68, 69, 70, 71, 12, 72, 73, 74, 75, 76, 13, 77, 78, 79, 80, 14, 81, 15, 82, 83, 3, 16, 84, 85, 86, 4, 17, 87, 88, 89, 90, 91, 92, 18, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105 }
  uselistorder i32 16, { 84, 85, 71, 72, 86, 87, 88, 89, 90, 20, 83, 73, 168, 169, 91, 92, 24, 23, 53, 54, 55, 74, 56, 57, 75, 76, 124, 121, 58, 59, 77, 79, 25, 80, 81, 18, 0, 19, 1, 2, 82, 3, 26, 78, 60, 61, 62, 63, 64, 65, 66, 67, 68, 27, 152, 153, 154, 155, 156, 93, 94, 29, 95, 96, 4, 97, 98, 99, 28, 100, 101, 31, 102, 103, 104, 105, 106, 30, 35, 107, 108, 109, 5, 110, 111, 6, 7, 21, 113, 69, 112, 32, 34, 33, 39, 114, 115, 116, 8, 117, 118, 9, 10, 22, 120, 70, 119, 36, 38, 37, 11, 40, 122, 12, 13, 123, 125, 126, 41, 127, 128, 129, 130, 131, 14, 132, 42, 133, 134, 135, 15, 136, 139, 140, 137, 138, 141, 142, 16, 143, 43, 144, 145, 146, 17, 147, 150, 151, 148, 149, 157, 158, 159, 160, 44, 161, 162, 163, 48, 47, 45, 164, 46, 165, 52, 51, 49, 166, 50, 167 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @function_1000ba2c() local_unnamed_addr {
dec_label_pc_1000ba2c:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000ba2c = load i32, i32* @r5, align 4
  %v1_1000ba2c = call i32 @__asm_rlwinm.(i32 %v0_1000ba2c, i32 29, i32 3, i32 31)
  store i32 %v1_1000ba2c, i32* %r9.global-to-local, align 4
  %v4_1000ba2c = icmp eq i32 %v1_1000ba2c, 0
  %v0_1000ba30 = load i32, i32* @r4, align 4
  %v1_1000ba30 = add i32 %v0_1000ba30, -4
  store i32 %v1_1000ba30, i32* %r4.global-to-local, align 4
  %v0_1000ba34 = load i32, i32* @r3, align 4
  %v1_1000ba34 = add i32 %v0_1000ba34, -4
  store i32 %v1_1000ba34, i32* @r11, align 4
  br i1 %v4_1000ba2c, label %dec_label_pc_1000ba5c, label %dec_label_pc_1000ba3c

dec_label_pc_1000ba3c:                            ; preds = %dec_label_pc_1000ba2c
  %v1_1000ba3c = urem i32 %v1_1000ba34, 4
  %v3_1000ba3c = icmp eq i32 %v1_1000ba3c, 0
  br i1 %v3_1000ba3c, label %dec_label_pc_1000ba44, label %dec_label_pc_1000ba98

dec_label_pc_1000ba44:                            ; preds = %dec_label_pc_1000bab8.dec_label_pc_1000ba44_crit_edge, %dec_label_pc_1000ba3c
  %v1_1000ba50.pre = phi i32 [ %v1_1000ba34, %dec_label_pc_1000ba3c ], [ %v1_1000ba50.pre.pre, %dec_label_pc_1000bab8.dec_label_pc_1000ba44_crit_edge ]
  %v0_1000ba44 = phi i32 [ %v1_1000ba2c, %dec_label_pc_1000ba3c ], [ %v1_1000bab8, %dec_label_pc_1000bab8.dec_label_pc_1000ba44_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000ba3c ], [ %v2_1000baa0, %dec_label_pc_1000bab8.dec_label_pc_1000ba44_crit_edge ]
  store i32 %v0_1000ba44, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ba48

dec_label_pc_1000ba48:                            ; preds = %dec_label_pc_1000ba48, %dec_label_pc_1000ba44
  %v1_1000ba50 = phi i32 [ %v2_1000ba54, %dec_label_pc_1000ba48 ], [ %v1_1000ba50.pre, %dec_label_pc_1000ba44 ]
  %v0_1000ba48 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba48 = add i32 %v0_1000ba48, 4
  %v2_1000ba48 = inttoptr i32 %v1_1000ba48 to i32*
  %v3_1000ba48 = load i32, i32* %v2_1000ba48, align 4
  %v1_1000ba4c = add i32 %v0_1000ba48, 8
  %v2_1000ba4c = inttoptr i32 %v1_1000ba4c to i32*
  %v3_1000ba4c = load i32, i32* %v2_1000ba4c, align 4
  store i32 %v3_1000ba4c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000ba4c, i32* %r4.global-to-local, align 4
  %v2_1000ba50 = add i32 %v1_1000ba50, 4
  %v3_1000ba50 = inttoptr i32 %v2_1000ba50 to i32*
  store i32 %v3_1000ba48, i32* %v3_1000ba50, align 4
  %v0_1000ba54 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ba54 = load i32, i32* @r11, align 4
  %v2_1000ba54 = add i32 %v1_1000ba54, 8
  %v3_1000ba54 = inttoptr i32 %v2_1000ba54 to i32*
  store i32 %v0_1000ba54, i32* %v3_1000ba54, align 4
  store i32 %v2_1000ba54, i32* @r11, align 4
  %v0_1000ba58 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba58 = add i32 %v0_1000ba58, -1
  store i32 %v1_1000ba58, i32* %ctr.global-to-local, align 4
  %v2_1000ba58 = icmp eq i32 %v1_1000ba58, 0
  br i1 %v2_1000ba58, label %dec_label_pc_1000ba5c, label %dec_label_pc_1000ba48

dec_label_pc_1000ba5c:                            ; preds = %dec_label_pc_1000ba48, %dec_label_pc_1000bab8, %dec_label_pc_1000ba2c
  %.1 = phi i32 [ undef, %dec_label_pc_1000ba2c ], [ %v2_1000baa0, %dec_label_pc_1000bab8 ], [ %.0, %dec_label_pc_1000ba48 ]
  %v1_1000ba5c = urem i32 %.1, 8
  store i32 %v1_1000ba5c, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000ba5c, 4
  br i1 %tmp, label %dec_label_pc_1000ba74, label %dec_label_pc_1000ba68

dec_label_pc_1000ba68:                            ; preds = %dec_label_pc_1000ba5c
  %v0_1000ba68 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba68 = add i32 %v0_1000ba68, 4
  %v2_1000ba68 = inttoptr i32 %v1_1000ba68 to i32*
  %v3_1000ba68 = load i32, i32* %v2_1000ba68, align 4
  store i32 %v1_1000ba68, i32* %r4.global-to-local, align 4
  %v1_1000ba6c = add nsw i32 %v1_1000ba5c, -4
  store i32 %v1_1000ba6c, i32* @r5, align 4
  %v1_1000ba70 = load i32, i32* @r11, align 4
  %v2_1000ba70 = add i32 %v1_1000ba70, 4
  %v3_1000ba70 = inttoptr i32 %v2_1000ba70 to i32*
  store i32 %v3_1000ba68, i32* %v3_1000ba70, align 4
  store i32 %v2_1000ba70, i32* @r11, align 4
  %v0_1000ba74.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000ba74

dec_label_pc_1000ba74:                            ; preds = %dec_label_pc_1000ba5c, %dec_label_pc_1000ba68
  %v0_1000ba74 = phi i32 [ %v1_1000ba5c, %dec_label_pc_1000ba5c ], [ %v0_1000ba74.pre, %dec_label_pc_1000ba68 ]
  %v3_1000ba74 = icmp eq i32 %v0_1000ba74, 0
  %v0_1000ba78 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000ba74, i32 %v0_1000ba78)
  %v0_1000ba7c = load i32, i32* @r5, align 4
  store i32 %v0_1000ba7c, i32* %ctr.global-to-local, align 4
  %v0_1000ba80 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba80 = add i32 %v0_1000ba80, 3
  store i32 %v1_1000ba80, i32* %r4.global-to-local, align 4
  %v0_1000ba84 = load i32, i32* @r11, align 4
  %v1_1000ba84 = add i32 %v0_1000ba84, 3
  store i32 %v1_1000ba84, i32* %r9.global-to-local, align 4
  %v1_1000ba889 = add i32 %v0_1000ba80, 4
  %v2_1000ba8810 = inttoptr i32 %v1_1000ba889 to i8*
  %v3_1000ba8811 = load i8, i8* %v2_1000ba8810, align 1
  store i32 %v1_1000ba889, i32* %r4.global-to-local, align 4
  %v3_1000ba8c13 = add i32 %v0_1000ba84, 4
  %v4_1000ba8c14 = inttoptr i32 %v3_1000ba8c13 to i8*
  store i8 %v3_1000ba8811, i8* %v4_1000ba8c14, align 1
  store i32 %v3_1000ba8c13, i32* %r9.global-to-local, align 4
  %v0_1000ba9015 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba9016 = add i32 %v0_1000ba9015, -1
  store i32 %v1_1000ba9016, i32* %ctr.global-to-local, align 4
  %v2_1000ba9017 = icmp eq i32 %v1_1000ba9016, 0
  br i1 %v2_1000ba9017, label %dec_label_pc_1000bac4, label %dec_label_pc_1000ba88.dec_label_pc_1000ba88_crit_edge

dec_label_pc_1000ba88.dec_label_pc_1000ba88_crit_edge: ; preds = %dec_label_pc_1000ba74, %dec_label_pc_1000ba88.dec_label_pc_1000ba88_crit_edge
  %v3_1000ba8c18 = phi i32 [ %v3_1000ba8c, %dec_label_pc_1000ba88.dec_label_pc_1000ba88_crit_edge ], [ %v3_1000ba8c13, %dec_label_pc_1000ba74 ]
  %v0_1000ba88.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ba88 = add i32 %v0_1000ba88.pre, 1
  %v2_1000ba88 = inttoptr i32 %v1_1000ba88 to i8*
  %v3_1000ba88 = load i8, i8* %v2_1000ba88, align 1
  store i32 %v1_1000ba88, i32* %r4.global-to-local, align 4
  %v3_1000ba8c = add i32 %v3_1000ba8c18, 1
  %v4_1000ba8c = inttoptr i32 %v3_1000ba8c to i8*
  store i8 %v3_1000ba88, i8* %v4_1000ba8c, align 1
  store i32 %v3_1000ba8c, i32* %r9.global-to-local, align 4
  %v0_1000ba90 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ba90 = add i32 %v0_1000ba90, -1
  store i32 %v1_1000ba90, i32* %ctr.global-to-local, align 4
  %v2_1000ba90 = icmp eq i32 %v1_1000ba90, 0
  br i1 %v2_1000ba90, label %dec_label_pc_1000bac4, label %dec_label_pc_1000ba88.dec_label_pc_1000ba88_crit_edge

dec_label_pc_1000ba98:                            ; preds = %dec_label_pc_1000ba3c
  %v1_1000ba98 = sub nsw i32 4, %v1_1000ba3c
  store i32 %v1_1000ba98, i32* %ctr.global-to-local, align 4
  %v1_1000baa0 = load i32, i32* @r5, align 4
  %v2_1000baa0 = sub i32 %v1_1000baa0, %v1_1000ba98
  br label %dec_label_pc_1000baa4

dec_label_pc_1000baa4:                            ; preds = %dec_label_pc_1000baa4.dec_label_pc_1000baa4_crit_edge, %dec_label_pc_1000ba98
  %v2_1000baac = phi i32 [ %v1_1000bab0, %dec_label_pc_1000baa4.dec_label_pc_1000baa4_crit_edge ], [ %v1_1000ba34, %dec_label_pc_1000ba98 ]
  %v0_1000baa4 = phi i32 [ %v0_1000baa4.pre, %dec_label_pc_1000baa4.dec_label_pc_1000baa4_crit_edge ], [ %v1_1000ba30, %dec_label_pc_1000ba98 ]
  %v1_1000baa4 = add i32 %v0_1000baa4, 4
  %v2_1000baa4 = inttoptr i32 %v1_1000baa4 to i8*
  %v3_1000baa4 = load i8, i8* %v2_1000baa4, align 1
  %v1_1000baa8 = add i32 %v0_1000baa4, 1
  store i32 %v1_1000baa8, i32* %r4.global-to-local, align 4
  %v3_1000baac = add i32 %v2_1000baac, 4
  %v4_1000baac = inttoptr i32 %v3_1000baac to i8*
  store i8 %v3_1000baa4, i8* %v4_1000baac, align 1
  %v0_1000bab0 = load i32, i32* @r11, align 4
  %v1_1000bab0 = add i32 %v0_1000bab0, 1
  store i32 %v1_1000bab0, i32* @r11, align 4
  %v0_1000bab4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bab4 = add i32 %v0_1000bab4, -1
  store i32 %v1_1000bab4, i32* %ctr.global-to-local, align 4
  %v2_1000bab4 = icmp eq i32 %v1_1000bab4, 0
  br i1 %v2_1000bab4, label %dec_label_pc_1000bab8, label %dec_label_pc_1000baa4.dec_label_pc_1000baa4_crit_edge

dec_label_pc_1000baa4.dec_label_pc_1000baa4_crit_edge: ; preds = %dec_label_pc_1000baa4
  %v0_1000baa4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000baa4

dec_label_pc_1000bab8:                            ; preds = %dec_label_pc_1000baa4
  %v1_1000bab8 = call i32 @__asm_rlwinm.(i32 %v2_1000baa0, i32 29, i32 3, i32 31)
  store i32 %v1_1000bab8, i32* %r9.global-to-local, align 4
  %v4_1000bab8 = icmp eq i32 %v1_1000bab8, 0
  br i1 %v4_1000bab8, label %dec_label_pc_1000ba5c, label %dec_label_pc_1000bab8.dec_label_pc_1000ba44_crit_edge

dec_label_pc_1000bab8.dec_label_pc_1000ba44_crit_edge: ; preds = %dec_label_pc_1000bab8
  %v1_1000ba50.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000ba44

dec_label_pc_1000bac4:                            ; preds = %dec_label_pc_1000ba88.dec_label_pc_1000ba88_crit_edge, %dec_label_pc_1000ba74
  %v0_1000bac4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bac4

; uselistorder directives
  uselistorder i32 %v1_1000bab8, { 1, 2, 0 }
  uselistorder i32 %v1_1000bab4, { 1, 0 }
  uselistorder i32 %v1_1000bab0, { 1, 0 }
  uselistorder i32 %v0_1000baa4, { 1, 0 }
  uselistorder i32 %v2_1000baa0, { 2, 1, 0 }
  uselistorder i32 %v1_1000ba90, { 1, 0 }
  uselistorder i32 %v3_1000ba8c, { 1, 2, 0 }
  uselistorder i32 %v1_1000ba5c, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000ba58, { 1, 0 }
  uselistorder i32 %v2_1000ba54, { 1, 2, 0 }
  uselistorder i32 %v1_1000ba3c, { 1, 0 }
  uselistorder i32 %v1_1000ba34, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder i32 undef, { 1, 0, 2, 3 }
  uselistorder i32* @r11, { 0, 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 5, 6, 0, 7, 8, 1, 2, 3, 4 }
  uselistorder i32 29, { 27, 28, 23, 25, 24, 26, 1, 2, 31, 32, 29, 30, 33, 34, 21, 22, 5, 6, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 19, 20, 0 }
  uselistorder label %dec_label_pc_1000ba88.dec_label_pc_1000ba88_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba74, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba5c, { 1, 0, 2 }
}

define i32 @function_1000bac8(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1000bac8:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268483300, i32* @lr, align 4
  %v0_1000bae0 = call i32 @function_1000ba2c()
  %v0_1000bae8 = load i32, i32* @r28, align 4
  %v1_1000bae8 = load i32, i32* @r29, align 4
  %v2_1000bae8 = add i32 %v1_1000bae8, %v0_1000bae8
  ret i32 %v2_1000bae8

; uselistorder directives
  uselistorder i32* @r28, { 11, 12, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 1, 64, 65, 66, 67, 68, 69, 286, 287, 288, 289, 290, 2, 39, 40, 41, 10, 42, 250, 251, 252, 253, 254, 255, 256, 257, 258, 272, 273, 274, 275, 13, 14, 15, 16, 17, 70, 71, 18, 19, 26, 27, 28, 20, 3, 21, 22, 23, 24, 25, 29, 0, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 44, 45, 46, 47, 48, 49, 72, 73, 74, 75, 76, 77, 78, 4, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 5, 216, 219, 220, 217, 218, 221, 222, 6, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 7, 233, 236, 237, 234, 235, 238, 239, 8, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 278, 276, 277, 279, 280, 9, 281, 282, 283, 284, 285 }
}

define i32 @function_1000bafc(i8* %arg1) local_unnamed_addr {
dec_label_pc_1000bafc:
  %r5.global-to-local = alloca i32, align 4
  %v3_1000bafc = icmp eq i8* %arg1, null
  br i1 %v3_1000bafc, label %dec_label_pc_1000bbb4, label %dec_label_pc_1000bb04

dec_label_pc_1000bb04:                            ; preds = %dec_label_pc_1000bafc
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1000bb18.pre = load i32, i32* bitcast (i32** @global_var_1001c694.315 to i32*), align 4
  br label %dec_label_pc_1000bb14

dec_label_pc_1000bb14:                            ; preds = %dec_label_pc_1000bb04, %dec_label_pc_1000bb8c
  %v0_1000bb8c = phi i32 [ 0, %dec_label_pc_1000bb04 ], [ %v2_1000bb94, %dec_label_pc_1000bb8c ]
  %v0_1000bb90 = phi i32 [ 1, %dec_label_pc_1000bb04 ], [ %v1_1000bb90, %dec_label_pc_1000bb8c ]
  %v0_1000bb14 = phi i32 [ %tmp, %dec_label_pc_1000bb04 ], [ %v0_1000bb143, %dec_label_pc_1000bb8c ]
  %v1_1000bb14 = inttoptr i32 %v0_1000bb14 to i8*
  %v2_1000bb14 = load i8, i8* %v1_1000bb14, align 1
  %v3_1000bb14 = zext i8 %v2_1000bb14 to i32
  %v1_1000bb1c = mul nuw nsw i32 %v3_1000bb14, 2
  %v2_1000bb20 = add i32 %v1_1000bb1c, %v3_1000bb18.pre
  %v3_1000bb20 = inttoptr i32 %v2_1000bb20 to i16*
  %v4_1000bb20 = load i16, i16* %v3_1000bb20, align 2
  %v1_1000bb24 = and i16 %v4_1000bb20, 8
  %v3_1000bb24 = icmp eq i16 %v1_1000bb24, 0
  br i1 %v3_1000bb24, label %dec_label_pc_1000bbb4, label %dec_label_pc_1000bb2c

dec_label_pc_1000bb2c:                            ; preds = %dec_label_pc_1000bb14
  br label %dec_label_pc_1000bb44

dec_label_pc_1000bb34:                            ; preds = %dec_label_pc_1000bb44
  %v1_1000bb48 = mul i32 %v1_1000bb94, 10
  %v2_1000bb50 = add i32 %v3_1000bb44, %v1_1000bb48
  %v1_1000bb34 = add i32 %v2_1000bb50, -48
  %v1_1000bb38 = add i32 %v0_1000bb7c, 1
  %v2_1000bb3c = icmp sgt i32 %v1_1000bb34, 255
  br i1 %v2_1000bb3c, label %dec_label_pc_1000bbb4, label %dec_label_pc_1000bb44

dec_label_pc_1000bb44:                            ; preds = %dec_label_pc_1000bb34, %dec_label_pc_1000bb2c
  %v1_1000bb94 = phi i32 [ %v1_1000bb34, %dec_label_pc_1000bb34 ], [ 0, %dec_label_pc_1000bb2c ]
  %v0_1000bb7c = phi i32 [ %v1_1000bb38, %dec_label_pc_1000bb34 ], [ %v0_1000bb14, %dec_label_pc_1000bb2c ]
  %v1_1000bb44 = inttoptr i32 %v0_1000bb7c to i8*
  %v2_1000bb44 = load i8, i8* %v1_1000bb44, align 1
  %v3_1000bb44 = zext i8 %v2_1000bb44 to i32
  %v1_1000bb4c = mul nuw nsw i32 %v3_1000bb44, 2
  %v2_1000bb54 = add i32 %v1_1000bb4c, %v3_1000bb18.pre
  %v3_1000bb54 = inttoptr i32 %v2_1000bb54 to i16*
  %v4_1000bb54 = load i16, i16* %v3_1000bb54, align 2
  %v5_1000bb54 = zext i16 %v4_1000bb54 to i32
  %v1_1000bb58 = and i32 %v5_1000bb54, 8
  %v3_1000bb58 = icmp eq i32 %v1_1000bb58, 0
  br i1 %v3_1000bb58, label %dec_label_pc_1000bb60, label %dec_label_pc_1000bb34

dec_label_pc_1000bb60:                            ; preds = %dec_label_pc_1000bb44
  %v2_1000bb60 = icmp sgt i32 %v0_1000bb90, 3
  br i1 %v2_1000bb60, label %dec_label_pc_1000bb78, label %dec_label_pc_1000bb68

dec_label_pc_1000bb68:                            ; preds = %dec_label_pc_1000bb60
  %v3_1000bb68 = icmp eq i8 %v2_1000bb44, 46
  br i1 %v3_1000bb68, label %dec_label_pc_1000bb70, label %dec_label_pc_1000bbb4

dec_label_pc_1000bb70:                            ; preds = %dec_label_pc_1000bb68
  %v1_1000bb70 = add i32 %v0_1000bb7c, 1
  br label %dec_label_pc_1000bb8c

dec_label_pc_1000bb78:                            ; preds = %dec_label_pc_1000bb60
  %v3_1000bb78 = icmp eq i8 %v2_1000bb44, 0
  %v1_1000bb7c = add i32 %v0_1000bb7c, 1
  br i1 %v3_1000bb78, label %dec_label_pc_1000bb8c, label %dec_label_pc_1000bb84

dec_label_pc_1000bb84:                            ; preds = %dec_label_pc_1000bb78
  %v1_1000bb84 = and i32 %v5_1000bb54, 32
  %v3_1000bb84 = icmp eq i32 %v1_1000bb84, 0
  br i1 %v3_1000bb84, label %dec_label_pc_1000bbb4, label %dec_label_pc_1000bb8c

dec_label_pc_1000bb8c:                            ; preds = %dec_label_pc_1000bb84, %dec_label_pc_1000bb78, %dec_label_pc_1000bb70
  %v0_1000bb143 = phi i32 [ %v1_1000bb7c, %dec_label_pc_1000bb84 ], [ %v1_1000bb7c, %dec_label_pc_1000bb78 ], [ %v1_1000bb70, %dec_label_pc_1000bb70 ]
  %v1_1000bb8c = mul i32 %v0_1000bb8c, 256
  %v1_1000bb90 = add nuw nsw i32 %v0_1000bb90, 1
  %v2_1000bb94 = or i32 %v1_1000bb94, %v1_1000bb8c
  store i32 %v2_1000bb94, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_1000bb90, 5
  br i1 %tmp10, label %dec_label_pc_1000bb14, label %dec_label_pc_1000bba0

dec_label_pc_1000bba0:                            ; preds = %dec_label_pc_1000bb8c
  %v0_1000bba0 = load i32, i32* @r4, align 4
  %v3_1000bba0 = icmp eq i32 %v0_1000bba0, 0
  %v0_1000bba8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000bba0, i32 %v0_1000bba8)
  %v0_1000bbac = load i32, i32* %r5.global-to-local, align 4
  %v1_1000bbac = load i32, i32* @r4, align 4
  %v2_1000bbac = inttoptr i32 %v1_1000bbac to i32*
  store i32 %v0_1000bbac, i32* %v2_1000bbac, align 4
  ret i32 1

dec_label_pc_1000bbb4:                            ; preds = %dec_label_pc_1000bb68, %dec_label_pc_1000bb84, %dec_label_pc_1000bb14, %dec_label_pc_1000bb34, %dec_label_pc_1000bafc
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000bb94, { 1, 0 }
  uselistorder i32 %v1_1000bb90, { 1, 0 }
  uselistorder i32 %v0_1000bb7c, { 0, 1, 3, 2 }
  uselistorder i32 5, { 19, 20, 21, 36, 22, 23, 37, 38, 24, 25, 39, 1, 0, 40, 41, 26, 42, 2, 3, 43, 27, 28, 29, 44, 4, 6, 45, 30, 46, 5, 31, 47, 7, 32, 48, 8, 33, 49, 9, 11, 50, 10, 51, 34, 52, 13, 53, 12, 35, 54, 15, 55, 14, 18, 56, 17, 57, 16, 58, 59, 60, 61, 62 }
  uselistorder i8 0, { 3, 7, 0, 8, 9, 5, 10, 11, 12, 13, 14, 15, 1, 16, 17, 18, 19, 20, 6, 21, 22, 23, 24, 25, 26, 27, 2, 28, 29, 30, 31, 4, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i8 46, { 1, 2, 0 }
  uselistorder i32 8, { 126, 3, 140, 141, 63, 43, 44, 64, 65, 66, 67, 68, 69, 144, 145, 13, 142, 143, 14, 130, 129, 127, 128, 111, 112, 113, 131, 132, 133, 134, 135, 136, 4, 45, 46, 47, 5, 146, 6, 70, 71, 72, 73, 74, 75, 33, 34, 48, 35, 36, 49, 37, 38, 50, 51, 7, 8, 9, 52, 53, 17, 39, 54, 55, 56, 11, 12, 18, 58, 19, 59, 20, 60, 62, 61, 57, 96, 76, 77, 78, 79, 80, 81, 82, 40, 83, 84, 85, 86, 87, 88, 89, 90, 41, 91, 92, 93, 94, 95, 97, 21, 98, 99, 100, 101, 102, 15, 103, 104, 105, 106, 16, 107, 108, 109, 110, 22, 114, 23, 115, 24, 116, 25, 117, 26, 118, 27, 119, 28, 120, 121, 29, 122, 30, 123, 31, 124, 32, 125, 0, 1, 10, 137, 138, 42, 139, 2 }
  uselistorder i32 255, { 44, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 -48, { 2, 0, 1 }
  uselistorder i32 10, { 82, 44, 17, 43, 2, 3, 9, 8, 0, 18, 19, 26, 27, 20, 28, 29, 30, 5, 6, 7, 31, 32, 21, 33, 34, 10, 35, 11, 36, 12, 37, 13, 38, 14, 39, 40, 41, 4, 42, 22, 1, 23, 24, 15, 45, 46, 47, 48, 49, 16, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 25, 81 }
  uselistorder i16 0, { 0, 1, 2, 5, 6, 3, 7, 9, 8, 4, 10, 11, 12, 13 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000bbb4, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_1000bb14, { 1, 0 }
}

define i32 @function_1000bbbc(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_1000bbbc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000bbc0 = load i32, i32* @lr, align 4
  store i32 %v0_1000bbc0, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000bbcc = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000bbdc = add i32 %tmp, 4
  store i32 %v1_1000bbdc, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000bbe4 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000bbe4, i32* @r3, align 4
  br i1 %v3_1000bbcc, label %dec_label_pc_1000bc0c, label %dec_label_pc_1000bbec

dec_label_pc_1000bbec:                            ; preds = %dec_label_pc_1000bbbc
  %v2_1000bbec = load i32, i32* %arg2, align 4
  store i32 %v2_1000bbec, i32* %r0.global-to-local, align 4
  store i32 268483576, i32* @lr, align 4
  %v0_1000bbf4 = call i32 @function_1000ba2c()
  %v0_1000bbf8 = load i32, i32* @r31, align 4
  %v1_1000bbf8 = add i32 %v0_1000bbf8, 132
  %v2_1000bbf8 = inttoptr i32 %v1_1000bbf8 to i32*
  %v3_1000bbf8 = load i32, i32* %v2_1000bbf8, align 4
  store i32 %v3_1000bbf8, i32* %r0.global-to-local, align 4
  %v1_1000bc04 = add i32 %v0_1000bbf8, 136
  %v2_1000bc04 = inttoptr i32 %v1_1000bc04 to i32*
  %v3_1000bc04 = load i32, i32* %v2_1000bc04, align 4
  store i32 %v3_1000bc04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000bc0c

dec_label_pc_1000bc0c:                            ; preds = %dec_label_pc_1000bbbc, %dec_label_pc_1000bbec
  store i32 268483628, i32* @lr, align 4
  %v0_1000bc28 = call i32 @function_1000be20()
  %v0_1000bc2c = load i32, i32* @r30, align 4
  %v3_1000bc2c = icmp eq i32 %v0_1000bc2c, 0
  store i32 %v0_1000bc28, i32* @r31, align 4
  br i1 %v3_1000bc2c, label %dec_label_pc_1000bc68, label %dec_label_pc_1000bc3c

dec_label_pc_1000bc3c:                            ; preds = %dec_label_pc_1000bc0c
  %v1_1000bc34 = icmp slt i32 %v0_1000bc28, 0
  %v1_1000bc3c = add i32 %v0_1000bc2c, 4
  store i32 %v1_1000bc3c, i32* @r3, align 4
  %v2_1000bc40 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000bc40, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000bc34, label %dec_label_pc_1000bc68, label %dec_label_pc_1000bc4c

dec_label_pc_1000bc4c:                            ; preds = %dec_label_pc_1000bc3c
  %v3_1000bc4c = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000bc4c, i32* %r0.global-to-local, align 4
  %v2_1000bc50 = inttoptr i32 %v0_1000bc2c to i32*
  store i32 %v3_1000bc4c, i32* %v2_1000bc50, align 4
  store i32 268483672, i32* @lr, align 4
  %v0_1000bc54 = call i32 @function_1000ba2c()
  %v1_1000bc60 = load i32, i32* @r30, align 4
  %v2_1000bc60 = add i32 %v1_1000bc60, 136
  %v3_1000bc60 = inttoptr i32 %v2_1000bc60 to i32*
  %v0_1000bc64 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bc64 = load i32, i32* @r30, align 4
  %v2_1000bc64 = add i32 %v1_1000bc64, 132
  %v3_1000bc64 = inttoptr i32 %v2_1000bc64 to i32*
  store i32 %v0_1000bc64, i32* %v3_1000bc64, align 4
  %v0_1000bc6c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bc68

dec_label_pc_1000bc68:                            ; preds = %dec_label_pc_1000bc3c, %dec_label_pc_1000bc0c, %dec_label_pc_1000bc4c
  %v0_1000bc6c = phi i32 [ %v0_1000bc28, %dec_label_pc_1000bc3c ], [ %v0_1000bc28, %dec_label_pc_1000bc0c ], [ %v0_1000bc6c.pre, %dec_label_pc_1000bc4c ]
  store i32 %v0_1000bbc0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000bc6c

; uselistorder directives
  uselistorder i32 %v0_1000bc28, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 4, 5, 6, 2 }
  uselistorder i32 136, { 7, 8, 2, 3, 4, 0, 1, 5, 6 }
  uselistorder i32 ()* @function_1000ba2c, { 2, 1, 6, 4, 0, 3, 5, 7 }
  uselistorder i32* @r5, { 21, 22, 1, 23, 24, 0, 25, 26, 27, 10, 11, 12, 30, 20, 7, 8, 31, 32, 33, 34, 3, 13, 6, 28, 29, 2, 4, 5, 14, 18, 19, 16, 17, 9, 15 }
  uselistorder i32 128, { 21, 22, 2, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 17, 18, 5, 19, 6, 20 }
  uselistorder i32* @r30, { 137, 138, 139, 140, 0, 119, 1, 23, 24, 25, 141, 144, 142, 143, 120, 121, 122, 114, 115, 116, 117, 118, 123, 124, 128, 125, 126, 127, 6, 7, 8, 9, 10, 11, 12, 2, 13, 26, 14, 15, 16, 3, 17, 18, 19, 20, 21, 22, 27, 28, 29, 30, 31, 32, 33, 4, 34, 35, 5, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 130, 131, 129, 132, 133, 134, 135, 136 }
  uselistorder i32* null, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 1, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* @r31, { 1, 290, 291, 292, 267, 2, 268, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 299, 300, 293, 8, 294, 295, 296, 297, 298, 67, 68, 269, 270, 271, 272, 273, 274, 259, 260, 261, 262, 263, 264, 265, 266, 275, 276, 277, 281, 278, 279, 280, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 95, 3, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 24, 25, 26, 27, 110, 111, 112, 113, 114, 28, 9, 4, 10, 11, 12, 13, 29, 30, 31, 32, 33, 43, 44, 45, 46, 47, 48, 49, 34, 35, 36, 37, 38, 39, 40, 41, 42, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 5, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 115, 116, 117, 118, 119, 120, 121, 122, 123, 0, 6, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 7, 282, 283, 284, 285, 286, 287, 288, 289 }
  uselistorder label %dec_label_pc_1000bc68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000bc0c, { 1, 0 }
}

define i32 @function_1000bc80(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bcb4.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v0_1000bc98 = call i32 @function_1000afd8()
  %v2_1000bca0 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_1000bca0, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_1000bcb833 = add i32 %v2_1000bca0, 124
  %v4_1000bcb834 = inttoptr i32 %v3_1000bcb833 to i32*
  store i32 0, i32* %v4_1000bcb834, align 4
  %v0_1000bcbc35 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bcbc36 = add i32 %v0_1000bcbc35, -1
  store i32 %v1_1000bcbc36, i32* %r9.global-to-local, align 4
  %v0_1000bcc037 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bcc038 = add i32 %v0_1000bcc037, -1
  store i32 %v1_1000bcc038, i32* %ctr.global-to-local, align 4
  %v2_1000bcc039 = icmp eq i32 %v1_1000bcc038, 0
  br i1 %v2_1000bcc039, label %dec_label_pc_1000bcc4, label %dec_label_pc_1000bcb4.dec_label_pc_1000bcb4_crit_edge

dec_label_pc_1000bcb4.dec_label_pc_1000bcb4_crit_edge: ; preds = %dec_label_pc_1000bcb4.lr.ph, %dec_label_pc_1000bcb4.dec_label_pc_1000bcb4_crit_edge
  %v1_1000bcbc40 = phi i32 [ %v1_1000bcbc, %dec_label_pc_1000bcb4.dec_label_pc_1000bcb4_crit_edge ], [ %v1_1000bcbc36, %dec_label_pc_1000bcb4.lr.ph ]
  %v0_1000bcb8.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bcb8.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_1000bcb4 = mul i32 %v1_1000bcbc40, 4
  %v3_1000bcb8 = add i32 %v1_1000bcb4, %v1_1000bcb8.pre
  %v4_1000bcb8 = inttoptr i32 %v3_1000bcb8 to i32*
  store i32 %v0_1000bcb8.pre, i32* %v4_1000bcb8, align 4
  %v0_1000bcbc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000bcbc = add i32 %v0_1000bcbc, -1
  store i32 %v1_1000bcbc, i32* %r9.global-to-local, align 4
  %v0_1000bcc0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bcc0 = add i32 %v0_1000bcc0, -1
  store i32 %v1_1000bcc0, i32* %ctr.global-to-local, align 4
  %v2_1000bcc0 = icmp eq i32 %v1_1000bcc0, 0
  br i1 %v2_1000bcc0, label %dec_label_pc_1000bcc4, label %dec_label_pc_1000bcb4.dec_label_pc_1000bcb4_crit_edge

dec_label_pc_1000bcc4:                            ; preds = %dec_label_pc_1000bcb4.dec_label_pc_1000bcb4_crit_edge, %dec_label_pc_1000bcb4.lr.ph
  store i32 %v2_1000bca0, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_1000bccc = call i32 @function_1000a42c()
  %v3_1000bcd0 = icmp eq i32 %v0_1000bccc, 0
  br i1 %v3_1000bcd0, label %dec_label_pc_1000bcd8, label %dec_label_pc_1000bce8

dec_label_pc_1000bcd8:                            ; preds = %dec_label_pc_1000bcc4
  store i32 268483816, i32* @lr, align 4
  %v3_1000bce4 = call i32 @function_100098b4(i32 1, i32 %v2_1000bca0, i32 0)
  br label %dec_label_pc_1000bce8

dec_label_pc_1000bce8:                            ; preds = %dec_label_pc_1000bcc4, %dec_label_pc_1000bcd8
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000bcec = load i32, i32* @global_var_1001c6fc.336, align 4
  %v3_1000bcf0 = icmp eq i32 %v3_1000bcec, 0
  br i1 %v3_1000bcf0, label %dec_label_pc_1000bcf8, label %dec_label_pc_1000bd20

dec_label_pc_1000bcf8:                            ; preds = %dec_label_pc_1000bce8
  store i32 1, i32* @global_var_1001c6fc.336, align 4
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bd00:                            ; preds = %dec_label_pc_1000bd7c, %dec_label_pc_1000bcf8
  store i32 ptrtoint (i32* @global_var_1001c660.334 to i32), i32* %r29.global-to-local, align 4
  %v0_1000bd0c = call i32 @function_1000afd8()
  store i32 268483864, i32* @lr, align 4
  %v1_1000bd14 = call i32 @function_1000be68(i32 6)
  %v0_1000bd1c = call i32 @function_1000afd8()
  %v3_1000bd24.pre = load i32, i32* @global_var_1001c6fc.336, align 4
  br label %dec_label_pc_1000bd20

dec_label_pc_1000bd20:                            ; preds = %dec_label_pc_1000bce8, %dec_label_pc_1000bd00
  %v0_1000bd98 = phi i32 [ %v3_1000bcec, %dec_label_pc_1000bce8 ], [ %v3_1000bd24.pre, %dec_label_pc_1000bd00 ]
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_1000bd28 = icmp eq i32 %v0_1000bd98, 1
  br i1 %v3_1000bd28, label %dec_label_pc_1000bd68.lr.ph, label %dec_label_pc_1000bd98

dec_label_pc_1000bd68.lr.ph:                      ; preds = %dec_label_pc_1000bd20
  %v2_1000bd34 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1001c6fc.336, align 4
  store i32 ptrtoint (i32* @global_var_1000bd48.338 to i32), i32* @lr, align 4
  %v3_1000bd44 = call i32 @function_10009d60(i32 %v2_1000bd34, i32 0, i32 140)
  store i32 %v2_1000bca0, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_1000bcb833, i32* %r9.global-to-local, align 4
  %v2_1000bd7025 = add i32 %v2_1000bca0, 256
  %v3_1000bd7026 = inttoptr i32 %v2_1000bd7025 to i32*
  store i32 -1, i32* %v3_1000bd7026, align 4
  %v0_1000bd7427 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd7428 = add i32 %v0_1000bd7427, -1
  store i32 %v1_1000bd7428, i32* %r11.global-to-local, align 4
  %v0_1000bd7829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bd7830 = add i32 %v0_1000bd7829, -1
  store i32 %v1_1000bd7830, i32* %ctr.global-to-local, align 4
  %v2_1000bd7831 = icmp eq i32 %v1_1000bd7830, 0
  br i1 %v2_1000bd7831, label %dec_label_pc_1000bd7c, label %dec_label_pc_1000bd68.dec_label_pc_1000bd68_crit_edge

dec_label_pc_1000bd68.dec_label_pc_1000bd68_crit_edge: ; preds = %dec_label_pc_1000bd68.lr.ph, %dec_label_pc_1000bd68.dec_label_pc_1000bd68_crit_edge
  %v1_1000bd7432 = phi i32 [ %v1_1000bd74, %dec_label_pc_1000bd68.dec_label_pc_1000bd68_crit_edge ], [ %v1_1000bd7428, %dec_label_pc_1000bd68.lr.ph ]
  %v1_1000bd6c.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1000bd70.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000bd68 = mul i32 %v1_1000bd7432, 4
  %v2_1000bd6c = add i32 %v1_1000bd68, %v1_1000bd6c.pre
  store i32 %v2_1000bd6c, i32* %r9.global-to-local, align 4
  %v2_1000bd70 = add i32 %v2_1000bd6c, 132
  %v3_1000bd70 = inttoptr i32 %v2_1000bd70 to i32*
  store i32 %v0_1000bd70.pre, i32* %v3_1000bd70, align 4
  %v0_1000bd74 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000bd74 = add i32 %v0_1000bd74, -1
  store i32 %v1_1000bd74, i32* %r11.global-to-local, align 4
  %v0_1000bd78 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000bd78 = add i32 %v0_1000bd78, -1
  store i32 %v1_1000bd78, i32* %ctr.global-to-local, align 4
  %v2_1000bd78 = icmp eq i32 %v1_1000bd78, 0
  br i1 %v2_1000bd78, label %dec_label_pc_1000bd7c, label %dec_label_pc_1000bd68.dec_label_pc_1000bd68_crit_edge

dec_label_pc_1000bd7c:                            ; preds = %dec_label_pc_1000bd68.dec_label_pc_1000bd68_crit_edge, %dec_label_pc_1000bd68.lr.ph
  store i32 268483988, i32* @lr, align 4
  %v4_1000bd90 = call i32 @function_1000bbbc(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_1000bd00

dec_label_pc_1000bd98:                            ; preds = %dec_label_pc_1000bd20
  %v3_1000bd98 = icmp eq i32 %v0_1000bd98, 2
  br i1 %v3_1000bd98, label %dec_label_pc_1000bda0, label %dec_label_pc_1000bdac

dec_label_pc_1000bda0:                            ; preds = %dec_label_pc_1000bd98
  store i32 3, i32* @global_var_1001c6fc.336, align 4
  br label %dec_label_pc_1000bdac

dec_label_pc_1000bdac:                            ; preds = %dec_label_pc_1000bd98, %dec_label_pc_1000bda0
  %v3_1000bdac = phi i32 [ %v0_1000bd98, %dec_label_pc_1000bd98 ], [ 3, %dec_label_pc_1000bda0 ]
  %v1_1000bdb4 = icmp ne i32 %v3_1000bdac, 3
  call void @__pseudo_cond_branch(i1 %v1_1000bdb4, i32 268484040)
  store i32 4, i32* @global_var_1001c6fc.336, align 4
  %v1_1000bdc4 = call i32 @function_1000b378(i32 127)
  ret i32 %v1_1000bdc4

; uselistorder directives
  uselistorder i32 %v1_1000bd78, { 1, 0 }
  uselistorder i32 %v1_1000bd74, { 1, 0 }
  uselistorder i32 %v1_1000bcc0, { 1, 0 }
  uselistorder i32 %v1_1000bcbc, { 1, 0 }
  uselistorder i32 %v2_1000bca0, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 4, 2, 5, 6, 8, 7, 3, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 4, 3, 2, 0, 1, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 7, 6, 4, 0, 1, 9, 8, 5, 2, 3 }
  uselistorder i32 (i32)* @function_1000b378, { 1, 0 }
  uselistorder i32 127, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 3, { 0, 5, 30, 103, 106, 107, 108, 109, 101, 104, 105, 53, 111, 110, 7, 112, 113, 114, 76, 77, 1, 6, 31, 32, 58, 36, 37, 34, 54, 38, 55, 56, 57, 35, 60, 59, 61, 2, 62, 64, 65, 39, 66, 67, 68, 8, 69, 9, 70, 33, 63, 100, 40, 71, 72, 74, 73, 75, 41, 42, 43, 3, 78, 79, 80, 81, 10, 44, 11, 82, 83, 13, 45, 12, 84, 85, 46, 86, 14, 15, 16, 87, 88, 47, 89, 17, 18, 19, 90, 21, 48, 4, 20, 91, 23, 92, 49, 22, 93, 94, 95, 24, 50, 25, 96, 97, 26, 51, 27, 98, 99, 28, 52, 29, 102 }
  uselistorder i32 (i32, i32*, i32)* @function_1000bbbc, { 1, 2, 0 }
  uselistorder i32 132, { 8, 9, 10, 2, 4, 5, 3, 0, 1, 6, 7 }
  uselistorder i32 256, { 68, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 74, 75, 76, 12, 13, 78, 14, 15, 16, 71, 79, 17, 72, 80, 73, 81, 77, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 69, 29, 30, 31, 32, 33, 34, 35, 36, 70, 37, 38, 39, 40, 41, 42, 43, 44, 45, 82, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i32 (i32, i32, i32)* @function_10009d60, { 1, 6, 9, 0, 2, 8, 7, 5, 4, 3 }
  uselistorder i32 140, { 2, 5, 0, 1, 3, 4 }
  uselistorder i32 2, { 210, 38, 0, 1, 53, 54, 211, 55, 212, 56, 213, 27, 2, 3, 4, 39, 107, 123, 214, 108, 28, 57, 40, 58, 30, 29, 31, 59, 60, 109, 42, 41, 110, 111, 112, 113, 114, 115, 99, 100, 101, 102, 103, 104, 105, 106, 61, 116, 5, 6, 117, 118, 35, 119, 62, 120, 36, 63, 202, 67, 66, 65, 64, 43, 7, 8, 121, 122, 68, 44, 69, 70, 71, 72, 73, 74, 32, 37, 124, 187, 9, 33, 188, 10, 125, 126, 127, 128, 129, 130, 131, 11, 12, 13, 14, 15, 16, 75, 132, 45, 133, 134, 135, 136, 137, 17, 18, 19, 20, 21, 22, 76, 138, 46, 139, 140, 141, 142, 143, 77, 145, 78, 144, 23, 24, 79, 146, 47, 147, 148, 149, 150, 151, 80, 153, 81, 152, 25, 26, 82, 154, 48, 155, 156, 157, 158, 159, 160, 161, 83, 162, 163, 49, 164, 165, 166, 167, 168, 85, 169, 84, 170, 171, 172, 173, 175, 176, 177, 174, 86, 178, 50, 179, 180, 181, 87, 88, 183, 184, 185, 182, 89, 186, 51, 189, 190, 191, 192, 193, 194, 195, 90, 196, 52, 91, 92, 197, 198, 93, 94, 199, 200, 201, 95, 96, 203, 204, 97, 98, 205, 206, 207, 208, 34, 209 }
  uselistorder i32* @global_var_1001c6fc.336, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 268566528, { 43, 44, 0, 45, 2, 1, 3, 42, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 6, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 4, 36, 5, 37, 38, 39, 40, 41 }
  uselistorder i32 (i32, i32, i32)* @function_100098b4, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 ()* @function_1000a42c, { 2, 1, 0, 4, 3 }
  uselistorder i32* @r4, { 71, 72, 73, 68, 69, 74, 30, 1, 31, 8, 32, 81, 80, 4, 5, 75, 77, 78, 67, 76, 9, 6, 70, 10, 11, 12, 7, 33, 34, 79, 13, 14, 15, 35, 19, 20, 21, 16, 17, 18, 3, 62, 63, 64, 65, 22, 23, 24, 25, 26, 27, 28, 29, 36, 0, 2, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 66 }
  uselistorder i32 6, { 11, 12, 63, 1, 13, 14, 26, 15, 16, 27, 17, 18, 28, 29, 30, 31, 32, 19, 33, 0, 34, 35, 36, 37, 20, 2, 38, 39, 21, 3, 40, 22, 41, 23, 42, 43, 44, 4, 45, 46, 47, 5, 48, 49, 50, 51, 52, 24, 6, 53, 54, 55, 56, 57, 25, 7, 58, 59, 60, 8, 9, 10, 61, 62 }
  uselistorder i32 4, { 125, 0, 1, 362, 363, 364, 365, 366, 66, 67, 367, 368, 126, 369, 370, 2, 194, 195, 147, 148, 196, 197, 199, 371, 378, 3, 4, 5, 6, 7, 341, 343, 342, 339, 340, 310, 311, 312, 313, 344, 345, 346, 347, 348, 349, 350, 351, 352, 8, 152, 9, 75, 153, 154, 372, 373, 374, 127, 375, 376, 377, 10, 198, 128, 11, 200, 201, 202, 203, 204, 129, 130, 155, 131, 156, 157, 158, 159, 160, 161, 149, 150, 162, 163, 151, 12, 164, 165, 77, 74, 166, 167, 168, 170, 171, 169, 172, 68, 173, 69, 132, 179, 76, 181, 182, 183, 184, 185, 180, 174, 175, 176, 177, 178, 303, 186, 133, 79, 78, 80, 187, 188, 189, 70, 190, 71, 191, 192, 193, 72, 205, 206, 13, 207, 208, 209, 81, 210, 211, 14, 15, 82, 212, 83, 85, 84, 213, 214, 16, 215, 216, 90, 217, 218, 17, 18, 89, 219, 86, 88, 87, 220, 221, 222, 223, 19, 224, 225, 226, 227, 134, 228, 20, 229, 230, 21, 231, 92, 232, 91, 135, 233, 234, 235, 236, 22, 237, 238, 239, 240, 136, 241, 23, 242, 243, 24, 244, 94, 245, 93, 137, 246, 247, 248, 25, 249, 250, 251, 252, 99, 253, 254, 26, 27, 98, 255, 256, 28, 95, 97, 96, 257, 258, 29, 259, 260, 104, 261, 30, 31, 262, 103, 263, 100, 264, 102, 101, 265, 266, 267, 268, 32, 270, 271, 138, 272, 273, 274, 109, 275, 33, 34, 139, 269, 108, 105, 107, 106, 276, 277, 278, 279, 280, 140, 141, 35, 282, 283, 142, 284, 285, 286, 114, 287, 36, 37, 143, 281, 113, 110, 112, 111, 288, 289, 290, 120, 38, 39, 291, 292, 40, 293, 294, 295, 119, 41, 42, 115, 296, 116, 118, 117, 297, 298, 299, 300, 301, 302, 144, 122, 121, 304, 305, 306, 307, 308, 309, 145, 124, 123, 43, 314, 315, 44, 45, 316, 317, 46, 47, 318, 319, 48, 49, 320, 321, 50, 51, 322, 323, 52, 53, 324, 325, 54, 326, 55, 327, 328, 56, 57, 329, 330, 58, 59, 331, 332, 60, 61, 333, 334, 62, 63, 335, 336, 64, 337, 338, 353, 354, 355, 356, 357, 358, 73, 359, 65, 360, 361, 146 }
  uselistorder i32 32, { 15, 16, 48, 37, 38, 24, 25, 11, 12, 35, 36, 26, 0, 1, 2, 13, 39, 14, 40, 27, 28, 17, 18, 19, 29, 30, 3, 4, 5, 6, 20, 31, 21, 32, 7, 8, 9, 10, 22, 23, 33, 34, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 31, { 1, 2, 33, 34, 22, 35, 36, 3, 4, 0, 5, 37, 38, 23, 24, 25, 26, 29, 30, 27, 28, 11, 12, 6, 13, 14, 7, 15, 16, 8, 9, 17, 18, 10, 19, 20, 21, 31, 32 }
  uselistorder i32 ()* @function_1000afd8, { 3, 2, 1, 0, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 21, 20, 19 }
  uselistorder label %dec_label_pc_1000bdac, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd68.dec_label_pc_1000bd68_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000bd20, { 1, 0 }
  uselistorder label %dec_label_pc_1000bce8, { 1, 0 }
  uselistorder label %dec_label_pc_1000bcb4.dec_label_pc_1000bcb4_crit_edge, { 1, 0 }
}

define i32 @function_1000bdd0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bdd0:
  %v1_1000bdd0 = add i32 %arg1, 28
  %v2_1000bdd0 = inttoptr i32 %v1_1000bdd0 to i32*
  %v3_1000bdd0 = load i32, i32* %v2_1000bdd0, align 4
  store i32 %v3_1000bdd0, i32* @global_var_1001c700.339, align 4
  %v1_1000bde0 = add i32 %arg1, 44
  %v2_1000bde0 = inttoptr i32 %v1_1000bde0 to i32*
  %v3_1000bde0 = load i32, i32* %v2_1000bde0, align 4
  store i32 %v3_1000bde0, i32* @global_var_1001c704.340, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 44, { 15, 8, 13, 14, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12 }
  uselistorder i32 28, { 43, 14, 15, 5, 6, 16, 13, 42, 7, 9, 10, 11, 12, 8, 3, 4, 2, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0, 33, 34, 35, 1, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @function_1000bdec(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000bdec:
  store i32 %arg1, i32* @global_var_1001c708.333, align 4
  %v0_1000be14 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_1000be14)
  %v1_1000be1c = call i32 @function_1000be98(i32 12)
  ret i32 %v1_1000be1c

; uselistorder directives
  uselistorder i32 12, { 19, 48, 49, 25, 26, 50, 51, 52, 53, 107, 108, 109, 110, 6, 105, 111, 0, 1, 7, 106, 5, 20, 21, 10, 28, 54, 55, 22, 56, 57, 58, 23, 24, 29, 30, 31, 32, 33, 34, 35, 27, 9, 36, 37, 8, 38, 39, 41, 42, 11, 43, 12, 44, 13, 45, 47, 46, 40, 101, 59, 60, 61, 62, 63, 64, 14, 65, 66, 67, 68, 69, 70, 71, 15, 72, 73, 74, 75, 76, 77, 78, 79, 80, 16, 81, 82, 83, 84, 85, 86, 87, 88, 89, 17, 90, 18, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 2, 3, 4 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 6, 10, 5, 11, 7, 12, 4, 0, 8, 1, 3, 2, 9 }
  uselistorder i1 true, { 19, 2, 3, 4, 5, 11, 6, 7, 8, 12, 13, 14, 15, 16, 17, 9, 10, 18, 0, 1 }
  uselistorder i32* @global_var_1001c708.333, { 1, 0, 2 }
}

define i32 @function_1000be20() local_unnamed_addr {
dec_label_pc_1000be20:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000be38 = call i32 @__asm_mfcr()
  %v1_1000be3c = and i32 %v0_1000be38, 268435456
  %v3_1000be3c = icmp eq i32 %v1_1000be3c, 0
  store i32 %v0_1000be38, i32* %r31.global-to-local, align 4
  br i1 %v3_1000be3c, label %dec_label_pc_1000be54, label %dec_label_pc_1000be48

dec_label_pc_1000be48:                            ; preds = %dec_label_pc_1000be20
  %v0_1000be48 = call i32 @function_10009c78()
  %v0_1000be4c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000be4c = inttoptr i32 %v0_1000be48 to i32*
  store i32 %v0_1000be4c, i32* %v2_1000be4c, align 4
  br label %dec_label_pc_1000be54

dec_label_pc_1000be54:                            ; preds = %dec_label_pc_1000be20, %dec_label_pc_1000be48
  %v0_1000be64 = phi i32 [ %v0_1000be38, %dec_label_pc_1000be20 ], [ -1, %dec_label_pc_1000be48 ]
  ret i32 %v0_1000be64

; uselistorder directives
  uselistorder i32 268435456, { 43, 25, 44, 32, 45, 46, 47, 48, 33, 34, 49, 50, 26, 31, 36, 51, 27, 28, 35, 37, 29, 52, 41, 39, 42, 40, 38, 53, 54, 30, 2, 0, 1, 5, 3, 4, 8, 6, 7, 9, 10, 13, 11, 12, 16, 14, 15, 17, 20, 18, 19, 23, 21, 22, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 12, 47, 11, 39, 10, 9, 8, 7, 38, 37, 6, 5, 4, 46, 40, 32, 3, 45, 44, 36, 30, 43, 2, 14, 16, 13, 15, 21, 1, 0, 42, 41, 35, 34, 33, 31, 29, 28, 27, 26, 25, 24, 23, 22, 20, 19, 18, 17 }
  uselistorder label %dec_label_pc_1000be54, { 1, 0 }
}

define i32 @function_1000be68(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000be68:
  %v0_1000be68 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268484224, i32* @lr, align 4
  %v0_1000be7c = call i32 @function_100095ec()
  %v0_1000be84 = load i32, i32* @r29, align 4
  store i32 %v0_1000be68, i32* @lr, align 4
  %v2_1000be94 = call i32 @function_1000967c(i32 %v0_1000be7c, i32 %v0_1000be84)
  ret i32 %v2_1000be94

; uselistorder directives
  uselistorder i32 (i32, i32)* @function_1000967c, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @function_100095ec, { 0, 1, 3, 2 }
}

define i32 @function_1000be98(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000be98:
  store i32 %arg1, i32* @r29, align 4
  %v0_1000beac = call i32 @function_10009c78()
  %v0_1000beb0 = load i32, i32* @r29, align 4
  %v2_1000beb0 = inttoptr i32 %v0_1000beac to i32*
  store i32 %v0_1000beb0, i32* %v2_1000beb0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 ()* @function_10009c78, { 24, 15, 50, 14, 35, 13, 12, 11, 10, 34, 33, 32, 9, 8, 3, 7, 6, 38, 37, 21, 22, 49, 48, 47, 46, 31, 30, 29, 45, 36, 27, 5, 4, 44, 43, 28, 26, 42, 2, 17, 19, 16, 18, 23, 1, 0, 41, 40, 39, 25, 20 }
  uselistorder i32* @r29, { 305, 306, 326, 327, 328, 11, 12, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 329, 330, 331, 332, 0, 73, 307, 308, 309, 310, 304, 311, 1, 312, 313, 314, 315, 316, 317, 13, 14, 15, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 61, 62, 54, 55, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 2, 130, 3, 131, 4, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 5, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 6, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 203, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 7, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 8, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 9, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 319, 318, 320, 321, 322, 10, 323, 324, 325 }
}

define i32 @function_1000becc(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000becc:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1001c520.321 to i32), i32* %r31.global-to-local, align 4
  %v3_1000bee8 = load i32, i32* @global_var_1001c520.321, align 4
  %v3_1000beec = icmp eq i32 %v3_1000bee8, -1
  br i1 %v3_1000beec, label %dec_label_pc_1000bf08, label %dec_label_pc_1000bef4

dec_label_pc_1000bef4:                            ; preds = %dec_label_pc_1000becc, %dec_label_pc_1000bef4
  %v0_1000bef4 = phi i32 [ %v3_1000befc, %dec_label_pc_1000bef4 ], [ %v3_1000bee8, %dec_label_pc_1000becc ]
  call void @__pseudo_call(i32 %v0_1000bef4)
  %v0_1000befc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000befc = add i32 %v0_1000befc, -4
  %v2_1000befc = inttoptr i32 %v1_1000befc to i32*
  %v3_1000befc = load i32, i32* %v2_1000befc, align 4
  store i32 %v1_1000befc, i32* %r31.global-to-local, align 4
  %v3_1000bf00 = icmp eq i32 %v3_1000befc, -1
  br i1 %v3_1000bf00, label %dec_label_pc_1000bf08, label %dec_label_pc_1000bef4

dec_label_pc_1000bf08:                            ; preds = %dec_label_pc_1000bef4, %dec_label_pc_1000becc
  %v0_1000bf18 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bf18

; uselistorder directives
  uselistorder i32 %v3_1000befc, { 1, 0 }
  uselistorder i32 -4, { 0, 14, 15, 16, 8, 9, 10, 11, 12, 13, 17, 18, 2, 3, 4, 5, 6, 1, 7 }
  uselistorder void (i32)* @__pseudo_call, { 1, 3, 4, 2, 0 }
  uselistorder i32 -1, { 132, 133, 0, 36, 88, 249, 10, 11, 12, 250, 89, 251, 8, 9, 90, 91, 13, 92, 37, 38, 242, 75, 39, 185, 40, 41, 42, 43, 44, 186, 187, 188, 189, 190, 195, 45, 262, 260, 46, 252, 253, 76, 93, 254, 16, 17, 94, 259, 14, 15, 172, 3, 77, 243, 244, 32, 134, 258, 255, 47, 135, 95, 136, 18, 19, 137, 138, 139, 35, 48, 140, 141, 73, 96, 97, 98, 99, 191, 192, 20, 21, 22, 100, 193, 194, 101, 78, 74, 196, 197, 49, 50, 51, 52, 256, 257, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 261, 66, 142, 102, 23, 198, 199, 103, 1, 104, 105, 143, 67, 68, 106, 2, 107, 24, 108, 69, 109, 25, 200, 79, 144, 80, 145, 146, 147, 110, 111, 148, 149, 70, 150, 112, 26, 113, 27, 114, 153, 115, 71, 154, 155, 156, 116, 117, 151, 152, 81, 157, 83, 158, 159, 82, 160, 161, 162, 163, 164, 84, 165, 166, 72, 167, 168, 118, 28, 119, 29, 169, 170, 171, 120, 121, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 33, 34, 201, 202, 203, 204, 205, 122, 123, 206, 207, 208, 209, 210, 211, 212, 214, 213, 30, 215, 216, 218, 217, 31, 219, 220, 124, 221, 222, 125, 223, 224, 225, 226, 227, 4, 228, 5, 229, 230, 6, 231, 7, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 126, 127, 245, 128, 246, 129, 130, 247, 248, 131, 85, 86, 87 }
  uselistorder i32 1, { 147, 496, 956, 603, 604, 670, 669, 391, 387, 390, 389, 386, 388, 673, 672, 671, 38, 0, 942, 943, 944, 945, 529, 9, 957, 958, 959, 960, 501, 500, 499, 10, 11, 12, 13, 14, 276, 274, 674, 269, 270, 456, 268, 498, 497, 676, 675, 479, 478, 480, 477, 476, 481, 605, 236, 237, 239, 238, 677, 442, 350, 606, 678, 18, 16, 15, 17, 607, 551, 964, 961, 682, 681, 680, 679, 451, 449, 446, 450, 448, 447, 608, 963, 683, 816, 817, 818, 602, 819, 530, 19, 20, 21, 150, 148, 149, 49, 50, 52, 53, 51, 273, 512, 684, 491, 962, 495, 609, 610, 687, 686, 685, 440, 437, 438, 439, 436, 441, 443, 552, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 786, 701, 700, 459, 460, 703, 702, 55, 54, 56, 871, 503, 59, 58, 57, 965, 966, 90, 88, 91, 89, 393, 394, 392, 395, 396, 397, 704, 611, 705, 44, 43, 45, 612, 706, 271, 272, 553, 707, 46, 435, 475, 485, 318, 383, 384, 349, 60, 426, 708, 275, 444, 492, 493, 494, 486, 709, 458, 710, 445, 787, 711, 457, 827, 828, 504, 505, 514, 829, 830, 513, 831, 714, 713, 712, 31, 27, 28, 32, 26, 30, 33, 29, 1, 821, 820, 822, 823, 872, 873, 502, 874, 875, 716, 715, 832, 833, 834, 613, 835, 22, 23, 24, 25, 939, 940, 532, 531, 941, 385, 783, 785, 784, 614, 836, 506, 483, 482, 484, 946, 379, 378, 837, 838, 507, 508, 515, 839, 34, 35, 36, 37, 876, 151, 152, 153, 154, 155, 156, 157, 158, 159, 897, 452, 455, 454, 453, 877, 374, 377, 376, 375, 47, 48, 788, 615, 782, 789, 616, 516, 554, 790, 791, 617, 792, 793, 797, 798, 794, 795, 796, 800, 618, 801, 538, 807, 808, 539, 726, 725, 724, 723, 722, 721, 720, 719, 718, 666, 717, 340, 336, 335, 334, 332, 329, 343, 339, 331, 328, 327, 324, 325, 323, 330, 326, 333, 337, 344, 338, 342, 341, 802, 803, 619, 804, 805, 620, 806, 316, 307, 310, 312, 314, 313, 315, 309, 308, 317, 311, 799, 621, 727, 461, 462, 933, 622, 517, 490, 488, 489, 487, 878, 728, 41, 39, 40, 556, 809, 555, 810, 623, 624, 625, 812, 813, 811, 533, 814, 626, 627, 628, 629, 630, 631, 815, 540, 739, 738, 737, 736, 667, 735, 734, 733, 732, 731, 730, 729, 434, 432, 430, 5, 6, 7, 8, 427, 429, 428, 433, 431, 632, 633, 557, 634, 537, 824, 635, 825, 826, 509, 636, 637, 638, 639, 640, 641, 642, 643, 644, 541, 750, 749, 748, 747, 746, 745, 744, 743, 742, 741, 740, 319, 320, 321, 322, 840, 645, 841, 842, 843, 844, 845, 3, 534, 846, 847, 2, 848, 849, 850, 851, 753, 752, 664, 665, 751, 381, 380, 916, 919, 917, 535, 918, 146, 920, 921, 922, 646, 647, 852, 853, 854, 855, 648, 518, 542, 856, 558, 559, 754, 84, 77, 87, 80, 86, 78, 79, 76, 63, 74, 75, 71, 72, 73, 69, 70, 66, 67, 65, 64, 68, 83, 85, 62, 61, 81, 82, 857, 858, 859, 649, 519, 543, 860, 560, 561, 562, 755, 193, 190, 194, 204, 184, 186, 196, 195, 207, 197, 191, 205, 206, 201, 202, 203, 199, 192, 200, 198, 208, 189, 188, 187, 185, 861, 862, 863, 864, 650, 510, 520, 544, 865, 563, 564, 565, 566, 567, 760, 759, 758, 757, 756, 168, 163, 172, 178, 161, 165, 175, 166, 176, 173, 177, 179, 180, 181, 169, 164, 162, 182, 174, 167, 171, 170, 160, 866, 867, 868, 869, 651, 511, 521, 545, 870, 568, 569, 570, 571, 572, 573, 574, 575, 576, 765, 764, 763, 762, 761, 359, 354, 363, 369, 352, 356, 366, 357, 367, 364, 368, 370, 371, 372, 360, 355, 353, 373, 365, 358, 362, 361, 351, 879, 880, 881, 882, 883, 884, 887, 885, 886, 888, 889, 890, 652, 891, 522, 546, 892, 893, 894, 536, 895, 896, 768, 767, 766, 288, 277, 286, 278, 293, 302, 292, 300, 295, 296, 297, 298, 287, 299, 301, 282, 283, 303, 304, 305, 290, 289, 306, 291, 294, 285, 284, 281, 280, 279, 898, 899, 900, 653, 523, 547, 901, 770, 769, 212, 210, 221, 229, 230, 223, 231, 225, 216, 234, 226, 222, 232, 233, 224, 227, 218, 228, 215, 214, 213, 209, 211, 235, 220, 219, 217, 902, 903, 904, 906, 907, 905, 524, 548, 908, 577, 578, 579, 771, 107, 94, 105, 114, 93, 92, 109, 117, 112, 110, 103, 95, 111, 115, 116, 99, 100, 108, 106, 113, 96, 118, 104, 102, 101, 97, 98, 909, 910, 911, 913, 914, 912, 525, 549, 915, 580, 581, 582, 776, 775, 774, 773, 772, 255, 242, 253, 262, 241, 240, 257, 258, 265, 260, 251, 243, 254, 259, 263, 264, 247, 248, 256, 261, 244, 266, 252, 250, 249, 245, 246, 923, 924, 654, 925, 926, 927, 655, 656, 550, 928, 583, 584, 777, 134, 145, 131, 120, 144, 127, 128, 126, 135, 136, 140, 141, 142, 119, 124, 125, 143, 121, 122, 123, 133, 132, 137, 139, 138, 129, 130, 929, 587, 930, 931, 585, 932, 657, 658, 586, 778, 423, 414, 412, 424, 422, 425, 416, 419, 420, 421, 415, 418, 417, 413, 934, 590, 935, 936, 588, 937, 659, 660, 589, 779, 409, 400, 398, 410, 408, 411, 402, 405, 406, 407, 401, 404, 403, 399, 4, 591, 592, 593, 594, 595, 596, 597, 598, 599, 938, 600, 601, 347, 346, 345, 348, 526, 382, 527, 183, 947, 661, 951, 662, 952, 948, 949, 950, 953, 954, 466, 470, 474, 463, 473, 464, 469, 468, 467, 465, 472, 471, 955, 663, 528, 42, 781, 780, 267, 668 }
  uselistorder label %dec_label_pc_1000bef4, { 1, 0 }
}

define i32 @function_1000bf1c() local_unnamed_addr {
dec_label_pc_1000bf1c:
  %v0_1000bf34 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bf34

; uselistorder directives
  uselistorder i32* @r3, { 11, 13, 162, 163, 164, 14, 21, 165, 93, 0, 94, 30, 172, 23, 19, 3, 25, 166, 168, 29, 169, 170, 171, 153, 28, 154, 9, 20, 156, 158, 157, 167, 31, 32, 33, 95, 26, 16, 96, 97, 98, 99, 100, 101, 102, 103, 104, 15, 4, 17, 105, 1, 2, 5, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 6, 66, 67, 18, 147, 148, 149, 10, 150, 151, 7, 74, 75, 76, 77, 78, 79, 24, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 142, 143, 8, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 146, 152, 155, 159, 160, 161, 22, 12, 27 }
}

define i32 @function_1000bf38() local_unnamed_addr {
entry:
  store i32 268484424, i32* @lr, align 4
  %v0_1000bf44 = call i32 @function_100000b8()
  ret i32 %v0_1000bf44

; uselistorder directives
  uselistorder i32 0, { 862, 215, 863, 48, 216, 155, 864, 217, 865, 866, 46, 47, 867, 868, 869, 0, 805, 806, 807, 86, 85, 808, 870, 871, 872, 49, 873, 874, 875, 876, 566, 218, 219, 405, 812, 813, 156, 814, 877, 20, 567, 568, 878, 879, 880, 881, 220, 569, 570, 571, 572, 573, 574, 575, 87, 583, 584, 882, 883, 221, 901, 902, 222, 907, 909, 146, 910, 223, 908, 1, 884, 885, 88, 886, 887, 224, 157, 225, 888, 889, 52, 53, 890, 891, 892, 226, 895, 896, 897, 50, 51, 898, 899, 900, 538, 539, 540, 541, 542, 89, 543, 544, 545, 214, 546, 90, 817, 819, 23, 820, 54, 821, 818, 815, 816, 2, 789, 785, 786, 787, 788, 147, 3, 824, 822, 823, 148, 825, 826, 790, 791, 792, 793, 794, 227, 795, 796, 827, 828, 228, 829, 158, 830, 839, 840, 91, 831, 832, 833, 834, 835, 836, 837, 838, 4, 5, 397, 406, 407, 408, 55, 56, 409, 6, 229, 809, 410, 411, 412, 413, 414, 415, 416, 417, 230, 418, 911, 912, 913, 914, 915, 916, 917, 918, 576, 577, 57, 578, 579, 580, 581, 582, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 419, 547, 667, 893, 894, 420, 421, 597, 681, 422, 903, 92, 904, 860, 855, 861, 856, 748, 905, 906, 423, 424, 598, 599, 600, 58, 93, 601, 602, 74, 603, 605, 604, 153, 548, 549, 7, 78, 24, 79, 25, 682, 80, 683, 26, 27, 684, 81, 28, 94, 231, 232, 21, 22, 606, 798, 799, 800, 801, 98, 96, 95, 802, 97, 100, 99, 404, 101, 607, 59, 608, 609, 610, 841, 102, 842, 843, 611, 612, 60, 103, 613, 8, 104, 709, 105, 685, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 402, 233, 454, 455, 458, 29, 143, 144, 403, 456, 106, 457, 234, 459, 460, 461, 462, 107, 463, 464, 465, 466, 145, 467, 469, 108, 149, 150, 468, 470, 471, 162, 472, 473, 398, 109, 474, 475, 476, 477, 478, 479, 61, 62, 480, 481, 63, 64, 482, 483, 484, 486, 487, 488, 489, 490, 159, 160, 495, 496, 235, 497, 498, 499, 30, 31, 32, 33, 34, 35, 36, 37, 38, 500, 501, 236, 502, 237, 503, 491, 492, 493, 494, 508, 509, 510, 511, 161, 512, 513, 110, 514, 515, 516, 238, 517, 518, 519, 504, 111, 505, 506, 112, 507, 239, 240, 485, 686, 520, 154, 521, 522, 241, 523, 524, 525, 526, 527, 163, 528, 529, 65, 66, 530, 531, 532, 67, 68, 533, 534, 535, 9, 536, 242, 243, 244, 537, 245, 18, 17, 16, 15, 14, 13, 12, 550, 551, 552, 554, 114, 553, 113, 555, 556, 116, 557, 115, 558, 10, 246, 247, 19, 561, 559, 560, 151, 248, 249, 250, 251, 562, 563, 564, 164, 252, 565, 39, 614, 625, 615, 11, 616, 617, 618, 619, 152, 620, 621, 622, 623, 624, 40, 117, 73, 72, 118, 626, 69, 255, 627, 253, 254, 165, 628, 83, 749, 750, 82, 751, 119, 752, 84, 753, 120, 629, 121, 630, 256, 631, 632, 633, 257, 634, 635, 636, 637, 258, 638, 639, 640, 166, 167, 168, 169, 170, 171, 172, 173, 641, 642, 122, 643, 644, 259, 645, 646, 647, 648, 649, 650, 260, 651, 652, 653, 182, 174, 175, 176, 177, 178, 179, 180, 181, 123, 654, 655, 261, 656, 657, 658, 659, 262, 662, 663, 70, 661, 660, 263, 664, 665, 666, 183, 184, 185, 186, 187, 188, 189, 124, 668, 669, 264, 670, 671, 672, 673, 265, 676, 677, 71, 675, 674, 266, 678, 679, 680, 190, 191, 192, 687, 688, 267, 689, 690, 126, 125, 691, 268, 692, 693, 694, 695, 696, 697, 698, 127, 699, 700, 701, 193, 702, 703, 269, 704, 75, 76, 705, 128, 706, 707, 708, 270, 194, 195, 196, 197, 129, 710, 271, 711, 712, 713, 714, 272, 715, 716, 717, 199, 198, 718, 273, 719, 720, 130, 721, 274, 722, 723, 724, 725, 726, 727, 728, 729, 730, 275, 731, 732, 733, 200, 201, 202, 203, 734, 131, 735, 276, 736, 737, 738, 739, 740, 741, 742, 743, 744, 277, 745, 746, 747, 204, 205, 206, 207, 754, 755, 756, 757, 132, 758, 278, 759, 760, 761, 762, 763, 279, 764, 765, 766, 208, 209, 210, 211, 136, 135, 767, 768, 280, 41, 134, 133, 769, 770, 771, 281, 42, 772, 773, 774, 775, 137, 212, 141, 140, 776, 777, 43, 139, 138, 778, 779, 780, 44, 781, 782, 783, 784, 142, 213, 797, 803, 804, 810, 811, 844, 77, 845, 846, 282, 847, 848, 849, 850, 851, 852, 853, 854, 857, 45, 858, 859, 919, 920, 921, 399, 400, 401, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 922, 923, 924, 925, 926, 927, 928, 929, 930, 931, 932, 933, 934, 935, 936, 937, 938, 939 }
  uselistorder i32* @lr, { 8, 719, 720, 721, 690, 722, 723, 724, 725, 726, 727, 728, 729, 687, 13, 730, 339, 340, 9, 691, 692, 341, 342, 343, 344, 345, 346, 739, 740, 744, 745, 746, 747, 748, 749, 750, 752, 741, 743, 731, 732, 733, 734, 735, 736, 737, 738, 693, 695, 694, 656, 657, 658, 659, 660, 661, 696, 697, 698, 699, 703, 700, 701, 702, 14, 15, 636, 601, 602, 637, 483, 16, 238, 17, 18, 638, 639, 688, 19, 20, 21, 22, 23, 24, 25, 751, 26, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 742, 27, 28, 29, 30, 31, 32, 361, 685, 362, 704, 514, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 547, 515, 93, 94, 10, 95, 96, 12, 11, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 138, 139, 140, 141, 142, 143, 144, 145, 104, 105, 106, 107, 108, 109, 516, 517, 518, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 0, 255, 256, 257, 258, 259, 260, 277, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 4, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 5, 392, 393, 394, 395, 396, 397, 1, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 464, 457, 458, 459, 460, 461, 462, 463, 2, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 495, 488, 489, 490, 491, 492, 493, 494, 3, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 622, 623, 624, 621, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 640, 642, 643, 644, 641, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 686, 689, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 6, 7 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare i32 @unknown_0(i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i16 @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr
